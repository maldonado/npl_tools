// TODO: warn "tried to create Proc object without a block"	IMPLEMENTATION	0.5428064020934064	WITHOUT_CLASSIFICATION	0.4571935979065935	IMPLEMENTATION
// TODO: CLONE_SETUP here	IMPLEMENTATION	0.6401814781112402	IMPLEMENTATION	0.35981852188875996	WITHOUT_CLASSIFICATION
// TODO: Someday, enable.	IMPLEMENTATION	0.5573647462409577	IMPLEMENTATION	0.44263525375904234	WITHOUT_CLASSIFICATION
// Bunch of methods still not implemented	IMPLEMENTATION	0.9416128899595797	IMPLEMENTATION	0.05838711004042031	WITHOUT_CLASSIFICATION
// TODO: non-strict option	IMPLEMENTATION	0.5688183274456884	WITHOUT_CLASSIFICATION	0.43118167255431145	IMPLEMENTATION
// TODO: opt for 2 and 3 ?	IMPLEMENTATION	0.9294029380636383	WITHOUT_CLASSIFICATION	0.07059706193636169	IMPLEMENTATION
// FIXME: Should we make this work with platform's locale, // or continue hardcoding US?	IMPLEMENTATION	0.5820153303705375	IMPLEMENTATION	0.41798466962946235	WITHOUT_CLASSIFICATION
// TODO: rescan code range ?	IMPLEMENTATION	0.6222735345498214	WITHOUT_CLASSIFICATION	0.3777264654501787	IMPLEMENTATION
// TODO: rescan code range ?	IMPLEMENTATION	0.6222735345498214	WITHOUT_CLASSIFICATION	0.3777264654501787	IMPLEMENTATION
// TODO: pass this in?	IMPLEMENTATION	0.739613938229705	IMPLEMENTATION	0.26038606177029505	WITHOUT_CLASSIFICATION
// FIXME: Pass block down?	IMPLEMENTATION	0.9610157492149468	WITHOUT_CLASSIFICATION	0.03898425078505314	IMPLEMENTATION
// TODO: do something here?	IMPLEMENTATION	0.7779689559479248	IMPLEMENTATION	0.2220310440520752	WITHOUT_CLASSIFICATION
// TODO: port exact behavior from MRI, and move most locking logic into ChannelDescriptor // TODO: for all LOCK_NB cases, return false if they would block	IMPLEMENTATION	0.9610030821917297	WITHOUT_CLASSIFICATION	0.03899691780827039	IMPLEMENTATION
// TODO: check if too many open files, GC and try again	IMPLEMENTATION	0.7737079561877775	WITHOUT_CLASSIFICATION	0.2262920438122226	IMPLEMENTATION
//TODO deal with UNC names	IMPLEMENTATION	0.9342874573299298	IMPLEMENTATION	0.06571254267007019	WITHOUT_CLASSIFICATION
// FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.5500250807299698	WITHOUT_CLASSIFICATION	0.44997491927003014	IMPLEMENTATION
//FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.9939175693441135	WITHOUT_CLASSIFICATION	0.006082430655886587	IMPLEMENTATION
// TODO: SafeStringValue here	IMPLEMENTATION	0.6401814781112402	IMPLEMENTATION	0.35981852188875996	WITHOUT_CLASSIFICATION
// TODO: turn off readable? am I reading this right? // This only seems to be used while duping below, since modes gets // reset to actual modes afterward //fptr->mode &= (m & FMODE_READABLE) ? ~FMODE_READABLE : ~FMODE_WRITABLE;	IMPLEMENTATION	0.6564183213315485	WITHOUT_CLASSIFICATION	0.34358167866845163	IMPLEMENTATION
// TODO: check safe, taint on incoming string	IMPLEMENTATION	0.8420115043985575	WITHOUT_CLASSIFICATION	0.15798849560144246	IMPLEMENTATION
// TODO: pipe handler to be reopened with path and "w" mode	IMPLEMENTATION	0.6250764980254306	IMPLEMENTATION	0.37492350197456936	WITHOUT_CLASSIFICATION
// FIXME: add text mode to mode flags	IMPLEMENTATION	0.9711543237988507	WITHOUT_CLASSIFICATION	0.02884567620114925	IMPLEMENTATION
// TODO: Something about pipe buffer length here	IMPLEMENTATION	0.5730245799447972	WITHOUT_CLASSIFICATION	0.4269754200552028	IMPLEMENTATION
// TODO: handle errors in buffered write by retrying until finished or file is closed	IMPLEMENTATION	0.7504626196469494	WITHOUT_CLASSIFICATION	0.2495373803530505	IMPLEMENTATION
// TODO: notify threads waiting on descriptors/IO? probably not...	IMPLEMENTATION	0.7372479309380693	IMPLEMENTATION	0.26275206906193077	WITHOUT_CLASSIFICATION
// TODO: Ruby re-checks that the buffer string hasn't been modified	IMPLEMENTATION	0.747780313629237	WITHOUT_CLASSIFICATION	0.2522196863707631	IMPLEMENTATION
// TODO: Ruby unlocks the string here	IMPLEMENTATION	0.9189973620755464	WITHOUT_CLASSIFICATION	0.08100263792445361	IMPLEMENTATION
// TODO: Ruby truncates string to specific size here, but our bytelist should handle this already?	IMPLEMENTATION	0.9769169663603516	WITHOUT_CLASSIFICATION	0.023083033639648465	IMPLEMENTATION
// TODO: Ruby unlocks the string here	IMPLEMENTATION	0.9189973620755464	WITHOUT_CLASSIFICATION	0.08100263792445361	IMPLEMENTATION
// TODO: Ruby truncates string to specific size here, but our bytelist should handle this already?	IMPLEMENTATION	0.9769169663603516	WITHOUT_CLASSIFICATION	0.023083033639648465	IMPLEMENTATION
// TODO: ruby locks the string here	IMPLEMENTATION	0.927299893827436	WITHOUT_CLASSIFICATION	0.07270010617256395	IMPLEMENTATION
// TODO same zero-length checks as file above	IMPLEMENTATION	0.5293974668134679	WITHOUT_CLASSIFICATION	0.4706025331865323	IMPLEMENTATION
// TODO: MRI also can hadle Bignum here	IMPLEMENTATION	0.8852206047341474	IMPLEMENTATION	0.1147793952658526	WITHOUT_CLASSIFICATION
// TODO: make threadsafe	IMPLEMENTATION	0.8984163439147878	IMPLEMENTATION	0.10158365608521223	WITHOUT_CLASSIFICATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.949021492113783	WITHOUT_CLASSIFICATION	0.050978507886217085	IMPLEMENTATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.949021492113783	WITHOUT_CLASSIFICATION	0.050978507886217085	IMPLEMENTATION
// FIXME: create AttrReaderMethod, AttrWriterMethod, for faster attr access	IMPLEMENTATION	0.9541470580379715	WITHOUT_CLASSIFICATION	0.04585294196202845	IMPLEMENTATION
// Do not clone cached methods // FIXME: MRI copies all methods here	IMPLEMENTATION	0.8125202296224662	WITHOUT_CLASSIFICATION	0.18747977037753386	IMPLEMENTATION
// TODO: don't calculate the same value 3 times	IMPLEMENTATION	0.9494290027411931	WITHOUT_CLASSIFICATION	0.05057099725880696	IMPLEMENTATION
// TODO: 3 times calculate the same value below	IMPLEMENTATION	0.9373301733676589	WITHOUT_CLASSIFICATION	0.06266982663234115	IMPLEMENTATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.9323130731991572	IMPLEMENTATION	0.06768692680084278	WITHOUT_CLASSIFICATION
// TODO: Store BEGIN and END information into this node	IMPLEMENTATION	0.5503197104409935	IMPLEMENTATION	0.4496802895590065	WITHOUT_CLASSIFICATION
// TODO: put these nil guards into tree (bigger than I want to do right now)	IMPLEMENTATION	0.9591888730882095	IMPLEMENTATION	0.04081112691179047	WITHOUT_CLASSIFICATION
// FIXME: Make bodyNode non-null in parser	IMPLEMENTATION	0.9839662731656056	WITHOUT_CLASSIFICATION	0.016033726834394347	IMPLEMENTATION
// TODO: call config with scope but no frame	IMPLEMENTATION	0.5767521860525335	IMPLEMENTATION	0.42324781394746636	WITHOUT_CLASSIFICATION
// TODO: add trace call?	IMPLEMENTATION	0.514532167270035	IMPLEMENTATION	0.48546783272996497	WITHOUT_CLASSIFICATION
// FIXME: missing arity check	IMPLEMENTATION	0.8344610487454922	WITHOUT_CLASSIFICATION	0.1655389512545078	IMPLEMENTATION
// FIXME: optimize for cases where we have no false branch	IMPLEMENTATION	0.9196779349477937	WITHOUT_CLASSIFICATION	0.08032206505220628	IMPLEMENTATION
// FIXME: after jump is not in here.  Will if ever be? //Label afterJmp = new Label();	IMPLEMENTATION	0.9801959341174667	WITHOUT_CLASSIFICATION	0.019804065882533216	IMPLEMENTATION
// TODO: build arg list based on number of args, optionals, etc	IMPLEMENTATION	0.966030633588267	IMPLEMENTATION	0.03396936641173302	WITHOUT_CLASSIFICATION
// FIXME: missing arity check	IMPLEMENTATION	0.8344610487454922	WITHOUT_CLASSIFICATION	0.1655389512545078	IMPLEMENTATION
// SSS FIXME: Traverse up the scope hierarchy to find the constant as long as the parent is a static scope	IMPLEMENTATION	0.9990134606261329	WITHOUT_CLASSIFICATION	9.865393738670528E-4	IMPLEMENTATION
// SSS FIXME: Should I be returning the operand constructed here?	IMPLEMENTATION	0.5631228970692816	IMPLEMENTATION	0.43687710293071835	WITHOUT_CLASSIFICATION
// TODO: Add IR instructions for checking method arity! // s.getVariableCompiler().checkMethodArity(required, opt, rest);	IMPLEMENTATION	0.7728038383698626	IMPLEMENTATION	0.2271961616301375	WITHOUT_CLASSIFICATION
// FIXME: Ruby 1.9 post args code needs to come here	IMPLEMENTATION	0.8586569688110731	WITHOUT_CLASSIFICATION	0.1413430311889268	IMPLEMENTATION
// SSS: FIXME: Somewhere here, we need to record information the type of this operand as String	IMPLEMENTATION	0.9905701861651612	WITHOUT_CLASSIFICATION	0.009429813834838836	IMPLEMENTATION
// FIXME: Translate this call below! // s.unwrapPassedBlock();	IMPLEMENTATION	0.8022222703568126	WITHOUT_CLASSIFICATION	0.19777772964318735	IMPLEMENTATION
// SSS FIXME: We need to build debug information tracking into the IR in some fashion // So, these methods below would have to have equivalents in IR_Scope implementations.	IMPLEMENTATION	0.7194652752430537	WITHOUT_CLASSIFICATION	0.28053472475694635	IMPLEMENTATION
// SSS FIXME: Incomplete!	IMPLEMENTATION	0.9695648659956184	WITHOUT_CLASSIFICATION	0.030435134004381637	IMPLEMENTATION
// SSS FIXME: Pick one of bytelist or string, or add internal conversion methods to convert to the default representation	IMPLEMENTATION	0.9832195641499076	WITHOUT_CLASSIFICATION	0.016780435850092323	IMPLEMENTATION
// SSS FIXME: To be done	IMPLEMENTATION	0.992892451266066	WITHOUT_CLASSIFICATION	0.007107548733934057	IMPLEMENTATION
//TODO: implement, won't do this now	IMPLEMENTATION	0.9710699771008864	WITHOUT_CLASSIFICATION	0.02893002289911358	IMPLEMENTATION
//TODO: implement, won't do this now	IMPLEMENTATION	0.9710699771008864	WITHOUT_CLASSIFICATION	0.02893002289911358	IMPLEMENTATION
// TODO: validate port as numeric	IMPLEMENTATION	0.5508049956392439	WITHOUT_CLASSIFICATION	0.449195004360756	IMPLEMENTATION
// TODO: this code should really check if a Ruby equals method is implemented or not.	IMPLEMENTATION	0.9987159726178139	IMPLEMENTATION	0.0012840273821861788	WITHOUT_CLASSIFICATION
// if not already defined, we add a 'new' that guesses at which signature to use // TODO: just adding first one right now...add in signature-guessing logic	IMPLEMENTATION	0.9482457042352266	IMPLEMENTATION	0.051754295764773396	WITHOUT_CLASSIFICATION
// TODO: deal with varargs	IMPLEMENTATION	0.758244262987272	IMPLEMENTATION	0.24175573701272798	WITHOUT_CLASSIFICATION
// TODO: deal with varargs	IMPLEMENTATION	0.758244262987272	IMPLEMENTATION	0.24175573701272798	WITHOUT_CLASSIFICATION
// TODO: other reserved names?	IMPLEMENTATION	0.8524882232566073	IMPLEMENTATION	0.14751177674339266	WITHOUT_CLASSIFICATION
// TODO: we can probably release our references to the constantFields // array and static/instance callback hashes at this point. 	IMPLEMENTATION	0.6527312546977466	IMPLEMENTATION	0.3472687453022534	WITHOUT_CLASSIFICATION
// TODO: Formalize conversion mechanisms between Java and Ruby	IMPLEMENTATION	0.7708766900703914	WITHOUT_CLASSIFICATION	0.2291233099296087	IMPLEMENTATION
// XXX: Check if it's appropriate type?	IMPLEMENTATION	0.9987023023189376	WITHOUT_CLASSIFICATION	0.0012976976810624128	IMPLEMENTATION
// TODO: call ruby method	IMPLEMENTATION	0.8850148513372629	IMPLEMENTATION	0.11498514866273718	WITHOUT_CLASSIFICATION
// TODO: call ruby method	IMPLEMENTATION	0.8850148513372629	IMPLEMENTATION	0.11498514866273718	WITHOUT_CLASSIFICATION
// TODO: Add safety check for taintedness	IMPLEMENTATION	0.6456704198497012	IMPLEMENTATION	0.3543295801502989	WITHOUT_CLASSIFICATION
// FIXME: Need to detect magic_comment in 1.9 here for encoding	IMPLEMENTATION	0.994007232769976	WITHOUT_CLASSIFICATION	0.005992767230023916	IMPLEMENTATION
/* xxx shouldn't check if valid option variable */	IMPLEMENTATION	0.9999944218415752	WITHOUT_CLASSIFICATION	5.578158424798864E-6	IMPLEMENTATION
// TODO: this isn't handling multibyte yet	IMPLEMENTATION	0.9784842268527454	IMPLEMENTATION	0.02151577314725465	WITHOUT_CLASSIFICATION
// TODO: This should be something else like a tCHAR	IMPLEMENTATION	0.8393636905383153	IMPLEMENTATION	0.16063630946168472	WITHOUT_CLASSIFICATION
// FIXME: \r logic needed	IMPLEMENTATION	0.9756661092213152	IMPLEMENTATION	0.02433389077868472	WITHOUT_CLASSIFICATION
// TODO: note lack of command.com support for Win 9x...	IMPLEMENTATION	0.8767084018049718	IMPLEMENTATION	0.12329159819502813	WITHOUT_CLASSIFICATION
// FIXME: Make thread pool threads daemons if necessary	IMPLEMENTATION	0.9239905767469786	WITHOUT_CLASSIFICATION	0.07600942325302136	IMPLEMENTATION
/* FIXME: We may be intern'ing more than once.*/	IMPLEMENTATION	0.9149914324540378	IMPLEMENTATION	0.08500856754596219	WITHOUT_CLASSIFICATION
/* FIXME: We may be intern'ing more than once.*/	IMPLEMENTATION	0.9149914324540378	IMPLEMENTATION	0.08500856754596219	WITHOUT_CLASSIFICATION
/* FIXME: arg_concat missing for opt_call_args*/	IMPLEMENTATION	0.8480117323918479	IMPLEMENTATION	0.1519882676081521	WITHOUT_CLASSIFICATION
/* FIXME: arg_concat logic missing for opt_call_args*/	IMPLEMENTATION	0.833548914701731	IMPLEMENTATION	0.16645108529826894	WITHOUT_CLASSIFICATION
// FIXME: This needs to happen for lambdas //            args.checkArgCount(runtime, parameters.length);	IMPLEMENTATION	0.9751386950714199	WITHOUT_CLASSIFICATION	0.024861304928580085	IMPLEMENTATION
// FIXME: This needs to happen for lambdas //            args.checkArgCount(runtime, parameters.length);	IMPLEMENTATION	0.9751386950714199	WITHOUT_CLASSIFICATION	0.024861304928580085	IMPLEMENTATION
// TODO: make it cross runtime safe by COW or eager copy	IMPLEMENTATION	0.5662555800682177	IMPLEMENTATION	0.43374441993178237	WITHOUT_CLASSIFICATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.933937107034414	WITHOUT_CLASSIFICATION	0.06606289296558593	IMPLEMENTATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.933937107034414	WITHOUT_CLASSIFICATION	0.06606289296558593	IMPLEMENTATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.933937107034414	WITHOUT_CLASSIFICATION	0.06606289296558593	IMPLEMENTATION
// TODO: check the return value here	IMPLEMENTATION	0.5857526472839572	WITHOUT_CLASSIFICATION	0.41424735271604285	IMPLEMENTATION
// TODO: check the return value here	IMPLEMENTATION	0.5857526472839572	WITHOUT_CLASSIFICATION	0.41424735271604285	IMPLEMENTATION
// TODO: Make sure all appropriate open flags are added to this check.	IMPLEMENTATION	0.9275141264849214	WITHOUT_CLASSIFICATION	0.07248587351507862	IMPLEMENTATION
//subList.clear(); // Sublist is supposed to share same backing store as list...TODO in RubyArray. //assertTrue(list.size() == 1);	IMPLEMENTATION	0.999998976915801	WITHOUT_CLASSIFICATION	1.0230841989997465E-6	IMPLEMENTATION
// SSS FIXME: Cannot optimize this without assuming that Range.to_ary method has not redefined. // So for now, return null!	IMPLEMENTATION	0.9662371852677832	IMPLEMENTATION	0.03376281473221677	WITHOUT_CLASSIFICATION
// TODO Auto-generated method stub	IMPLEMENTATION	0.9993477500251904	IMPLEMENTATION	6.522499748096544E-4	WITHOUT_CLASSIFICATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.9933126418242317	IMPLEMENTATION	0.006687358175768361	WITHOUT_CLASSIFICATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.9933126418242317	IMPLEMENTATION	0.006687358175768361	WITHOUT_CLASSIFICATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.9933126418242317	IMPLEMENTATION	0.006687358175768361	WITHOUT_CLASSIFICATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.9323130731991572	IMPLEMENTATION	0.06768692680084278	WITHOUT_CLASSIFICATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.9323130731991572	IMPLEMENTATION	0.06768692680084278	WITHOUT_CLASSIFICATION
// TODO: check for ascii string	IMPLEMENTATION	0.964738154603796	WITHOUT_CLASSIFICATION	0.03526184539620404	IMPLEMENTATION
// filter out any Java primitive names // TODO: should check against all Java reserved names here, not just primitives	IMPLEMENTATION	0.6618710060900104	IMPLEMENTATION	0.33812899390998963	WITHOUT_CLASSIFICATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.949021492113783	WITHOUT_CLASSIFICATION	0.050978507886217085	IMPLEMENTATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.949021492113783	WITHOUT_CLASSIFICATION	0.050978507886217085	IMPLEMENTATION
// TODO: missing additional logic for dealing with conflicting protected fields.	IMPLEMENTATION	0.9307137671841008	IMPLEMENTATION	0.06928623281589925	WITHOUT_CLASSIFICATION
// TODO: better detection when path is absolute or not. // If the path isn't absolute, then prepend the current working // directory to the path.	IMPLEMENTATION	0.9471654410144228	WITHOUT_CLASSIFICATION	0.052834558985577165	IMPLEMENTATION
// FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.5500250807299698	WITHOUT_CLASSIFICATION	0.44997491927003014	IMPLEMENTATION
// FIX replace type() == ... with isInstanceOf(...)	IMPLEMENTATION	0.9992683129670844	WITHOUT_CLASSIFICATION	7.316870329155151E-4	IMPLEMENTATION
/* TODO: MRI is just a when node.  We need this extra logic for IDE consumers (null in casenode statement should be implicit nil)*/	IMPLEMENTATION	0.5187339179406218	IMPLEMENTATION	0.4812660820593781	WITHOUT_CLASSIFICATION
// TODO: This and recacheRespondsTo needed to be synchronized for JRUBY-3466, // but this degraded performance nearly 2x. It's still faster than MRI, but // a reanalysis of this code may show a faster way to ensure we're caching // safely.	IMPLEMENTATION	0.9999570846851622	IMPLEMENTATION	4.291531483782141E-5	WITHOUT_CLASSIFICATION
// TODO: adjust length so it won't fall in the middle  // of a multi-byte character. MRI's sprintf.c uses tables // in a modified version of regex.c, which assume some // particular  encoding for a given installation/application. // (See regex.c#re_mbcinit in ruby-1.8.5-p12)  // // This is only an issue if the user specifies a precision // that causes the string to be truncated. The same issue // would arise taking a substring of a ByteList-backed RubyString.	IMPLEMENTATION	0.9999995891098303	WITHOUT_CLASSIFICATION	4.1089016960474995E-7	IMPLEMENTATION
// set constants now that they're initialized	WITHOUT_CLASSIFICATION	0.9999872820127234	WITHOUT_CLASSIFICATION	1.271798727660424E-5	IMPLEMENTATION
// line 335	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
// Figure end-char.  '\0' is special to indicate begin=end and that no nesting?	WITHOUT_CLASSIFICATION	0.9999798570932054	WITHOUT_CLASSIFICATION	2.0142906794631518E-5	IMPLEMENTATION
// line 362	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 372	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
// line 391	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
/* ^D */	WITHOUT_CLASSIFICATION	0.9999983452507534	WITHOUT_CLASSIFICATION	1.6547492466209219E-6	IMPLEMENTATION
/* ^Z */	WITHOUT_CLASSIFICATION	0.9999983452507534	WITHOUT_CLASSIFICATION	1.6547492466209219E-6	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
//Do nothing	WITHOUT_CLASSIFICATION	0.9998356861586154	WITHOUT_CLASSIFICATION	1.6431384138452187E-4	IMPLEMENTATION
//Do nothing	WITHOUT_CLASSIFICATION	0.9998356861586154	WITHOUT_CLASSIFICATION	1.6431384138452187E-4	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999911358004185	WITHOUT_CLASSIFICATION	8.864199581520488E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999911358004185	WITHOUT_CLASSIFICATION	8.864199581520488E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999911358004185	WITHOUT_CLASSIFICATION	8.864199581520488E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999911358004185	WITHOUT_CLASSIFICATION	8.864199581520488E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999911358004185	WITHOUT_CLASSIFICATION	8.864199581520488E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999911358004185	WITHOUT_CLASSIFICATION	8.864199581520488E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999911358004185	WITHOUT_CLASSIFICATION	8.864199581520488E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999911358004185	WITHOUT_CLASSIFICATION	8.864199581520488E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999911358004185	WITHOUT_CLASSIFICATION	8.864199581520488E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999911358004185	WITHOUT_CLASSIFICATION	8.864199581520488E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999911358004185	WITHOUT_CLASSIFICATION	8.864199581520488E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999911358004185	WITHOUT_CLASSIFICATION	8.864199581520488E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999911358004185	WITHOUT_CLASSIFICATION	8.864199581520488E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999911358004185	WITHOUT_CLASSIFICATION	8.864199581520488E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999911358004185	WITHOUT_CLASSIFICATION	8.864199581520488E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999911358004185	WITHOUT_CLASSIFICATION	8.864199581520488E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999911358004185	WITHOUT_CLASSIFICATION	8.864199581520488E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999911358004185	WITHOUT_CLASSIFICATION	8.864199581520488E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999911358004185	WITHOUT_CLASSIFICATION	8.864199581520488E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999911358004185	WITHOUT_CLASSIFICATION	8.864199581520488E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999911358004185	WITHOUT_CLASSIFICATION	8.864199581520488E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999911358004185	WITHOUT_CLASSIFICATION	8.864199581520488E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999911358004185	WITHOUT_CLASSIFICATION	8.864199581520488E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999911358004185	WITHOUT_CLASSIFICATION	8.864199581520488E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999911358004185	WITHOUT_CLASSIFICATION	8.864199581520488E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999911358004185	WITHOUT_CLASSIFICATION	8.864199581520488E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999911358004185	WITHOUT_CLASSIFICATION	8.864199581520488E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999911358004185	WITHOUT_CLASSIFICATION	8.864199581520488E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999911358004185	WITHOUT_CLASSIFICATION	8.864199581520488E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999911358004185	WITHOUT_CLASSIFICATION	8.864199581520488E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999911358004185	WITHOUT_CLASSIFICATION	8.864199581520488E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999911358004185	WITHOUT_CLASSIFICATION	8.864199581520488E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999911358004185	WITHOUT_CLASSIFICATION	8.864199581520488E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999911358004185	WITHOUT_CLASSIFICATION	8.864199581520488E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999911358004185	WITHOUT_CLASSIFICATION	8.864199581520488E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999911358004185	WITHOUT_CLASSIFICATION	8.864199581520488E-6	IMPLEMENTATION
// return result	WITHOUT_CLASSIFICATION	0.999867801315326	WITHOUT_CLASSIFICATION	1.3219868467392716E-4	IMPLEMENTATION
// name	WITHOUT_CLASSIFICATION	0.9999847235524137	WITHOUT_CLASSIFICATION	1.5276447586279018E-5	IMPLEMENTATION
// Define System.getProperties() in ENV_JAVA	WITHOUT_CLASSIFICATION	0.9999814510618917	WITHOUT_CLASSIFICATION	1.8548938108220587E-5	IMPLEMENTATION
// Accessor methods.	WITHOUT_CLASSIFICATION	0.9996387916250169	WITHOUT_CLASSIFICATION	3.6120837498313814E-4	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9996054766560576	WITHOUT_CLASSIFICATION	3.9452334394246135E-4	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9996054766560576	WITHOUT_CLASSIFICATION	3.9452334394246135E-4	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9996054766560576	WITHOUT_CLASSIFICATION	3.9452334394246135E-4	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9996054766560576	WITHOUT_CLASSIFICATION	3.9452334394246135E-4	IMPLEMENTATION
// call getpwent to fail early if unsupported	WITHOUT_CLASSIFICATION	0.9999663204581094	WITHOUT_CLASSIFICATION	3.367954189054697E-5	IMPLEMENTATION
// fall back on env entry for USER	WITHOUT_CLASSIFICATION	0.9996874132108563	WITHOUT_CLASSIFICATION	3.1258678914374997E-4	IMPLEMENTATION
// try to read grent to fail fast	WITHOUT_CLASSIFICATION	0.9999829258995709	WITHOUT_CLASSIFICATION	1.7074100429068825E-5	IMPLEMENTATION
// define ARGV and $* for this runtime	WITHOUT_CLASSIFICATION	0.999975281348608	WITHOUT_CLASSIFICATION	2.4718651391874864E-5	IMPLEMENTATION
// Version information:	WITHOUT_CLASSIFICATION	0.9999358419461961	WITHOUT_CLASSIFICATION	6.415805380383662E-5	IMPLEMENTATION
// after defn of $stderr as the call may produce warnings	WITHOUT_CLASSIFICATION	0.999985745437006	WITHOUT_CLASSIFICATION	1.4254562993857222E-5	IMPLEMENTATION
// ARGF, $< object	WITHOUT_CLASSIFICATION	0.9998495276190547	WITHOUT_CLASSIFICATION	1.5047238094545229E-4	IMPLEMENTATION
// if the environment variables can't be obtained, define an empty ENV	WITHOUT_CLASSIFICATION	0.9999991410505757	WITHOUT_CLASSIFICATION	8.589494242783128E-7	IMPLEMENTATION
// On platforms without a c-library accessable through JNA, getpid will return hashCode  // as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing // $$ on getpid() where available, we have the same semantics as MRI.	WITHOUT_CLASSIFICATION	0.9999903118243592	WITHOUT_CLASSIFICATION	9.688175640921457E-6	IMPLEMENTATION
//$@ returns nil if $!.backtrace is not an array	WITHOUT_CLASSIFICATION	0.9995858991106255	WITHOUT_CLASSIFICATION	4.1410088937459457E-4	IMPLEMENTATION
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999223869959047	WITHOUT_CLASSIFICATION	7.761300409530537E-5	IMPLEMENTATION
// MRI behavior: just plain '//' or '\\\\' are considered illegal on Windows.	WITHOUT_CLASSIFICATION	0.9999927256503001	WITHOUT_CLASSIFICATION	7.2743496998799875E-6	IMPLEMENTATION
// this _is_ legal (when removing an undef)	WITHOUT_CLASSIFICATION	0.9997137668369914	WITHOUT_CLASSIFICATION	2.8623316300846393E-4	IMPLEMENTATION
// What we passed to the constructor for method 'path'	WITHOUT_CLASSIFICATION	0.9981708590161664	WITHOUT_CLASSIFICATION	0.0018291409838334801	IMPLEMENTATION
// ----- Ruby Class Methods ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999835079315493	WITHOUT_CLASSIFICATION	1.6492068450601426E-5	IMPLEMENTATION
// // CONSTANT TABLE METHODS - pass to delegate //	WITHOUT_CLASSIFICATION	0.9999292205567363	WITHOUT_CLASSIFICATION	7.077944326369926E-5	IMPLEMENTATION
// We get canonical path to try and flatten the path out. // a dir '/subdir/..' should return as '/' // cnutter: Do we want to flatten path out?	WITHOUT_CLASSIFICATION	0.9996013023650434	WITHOUT_CLASSIFICATION	3.986976349566072E-4	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9996054766560576	WITHOUT_CLASSIFICATION	3.9452334394246135E-4	IMPLEMENTATION
// ----- Ruby Instance Methods -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999591276502832	WITHOUT_CLASSIFICATION	4.087234971681377E-5	IMPLEMENTATION
// Make sure any read()s after close fail.	WITHOUT_CLASSIFICATION	0.9999922119291934	WITHOUT_CLASSIFICATION	7.788070806545657E-6	IMPLEMENTATION
// ----- Helper Methods --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999711444884533	WITHOUT_CLASSIFICATION	2.8855511546839726E-5	IMPLEMENTATION
// try to use POSIX for this first	WITHOUT_CLASSIFICATION	0.999718566506849	WITHOUT_CLASSIFICATION	2.8143349315102424E-4	IMPLEMENTATION
// otherwise fall back on the old way	WITHOUT_CLASSIFICATION	0.9868570138224019	WITHOUT_CLASSIFICATION	0.01314298617759809	IMPLEMENTATION
// Proc class	WITHOUT_CLASSIFICATION	0.9997941958799493	WITHOUT_CLASSIFICATION	2.0580412005075384E-4	IMPLEMENTATION
// No passed in block, lets check next outer frame for one ('Proc.new')	WITHOUT_CLASSIFICATION	0.9999880393801933	WITHOUT_CLASSIFICATION	1.1960619806572698E-5	IMPLEMENTATION
// modify the block with a new backref/lastline-grabbing scope	WITHOUT_CLASSIFICATION	0.9998320823061065	WITHOUT_CLASSIFICATION	1.679176938936066E-4	IMPLEMENTATION
// for future compatibility as constructors move toward not accepting metaclass?	WITHOUT_CLASSIFICATION	0.9984173831357195	WITHOUT_CLASSIFICATION	0.0015826168642805957	IMPLEMENTATION
//        case RUBY_HYBRID: //            backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); //            break;	WITHOUT_CLASSIFICATION	0.9998506227701522	WITHOUT_CLASSIFICATION	1.4937722984775196E-4	IMPLEMENTATION
// This looks wrong, but it's the way MRI does it.	WITHOUT_CLASSIFICATION	0.9999780613755662	WITHOUT_CLASSIFICATION	2.1938624433765677E-5	IMPLEMENTATION
// rb_exc_new3	WITHOUT_CLASSIFICATION	0.999598425807291	WITHOUT_CLASSIFICATION	4.015741927090063E-4	IMPLEMENTATION
// NOTE: The indicies here match exactly the signal values; do not reorder	WITHOUT_CLASSIFICATION	0.9948070015020888	WITHOUT_CLASSIFICATION	0.005192998497911177	IMPLEMENTATION
//registerThreadDumpSignalHandler(runtime);	WITHOUT_CLASSIFICATION	0.9995736327784496	WITHOUT_CLASSIFICATION	4.263672215503884E-4	IMPLEMENTATION
// IOT is also 6	WITHOUT_CLASSIFICATION	0.9998458610325738	WITHOUT_CLASSIFICATION	1.541389674261919E-4	IMPLEMENTATION
// CLD is also 20	WITHOUT_CLASSIFICATION	0.9998294331914933	WITHOUT_CLASSIFICATION	1.7056680850670734E-4	IMPLEMENTATION
// RubySignal	WITHOUT_CLASSIFICATION	0.999598425807291	WITHOUT_CLASSIFICATION	4.015741927090063E-4	IMPLEMENTATION
// ZStream actually *isn't* allocatable	WITHOUT_CLASSIFICATION	0.9998416063370603	WITHOUT_CLASSIFICATION	1.5839366293973067E-4	IMPLEMENTATION
// MRI behavior, enforced by tests	WITHOUT_CLASSIFICATION	0.9999714879165316	WITHOUT_CLASSIFICATION	2.8512083468458827E-5	IMPLEMENTATION
// it's safe since adler.update doesn't modify the array	WITHOUT_CLASSIFICATION	0.999954383235672	WITHOUT_CLASSIFICATION	4.5616764328079836E-5	IMPLEMENTATION
// MRI behavior: in finished mode, we work as pass-through	WITHOUT_CLASSIFICATION	0.999994632754466	WITHOUT_CLASSIFICATION	5.367245533977475E-6	IMPLEMENTATION
// SYNC_FLUSH	WITHOUT_CLASSIFICATION	0.999598425807291	WITHOUT_CLASSIFICATION	4.015741927090063E-4	IMPLEMENTATION
// By default, NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999157477927532	WITHOUT_CLASSIFICATION	8.425220724677845E-5	IMPLEMENTATION
//io.finish();	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
// should invoke seek on realIo	WITHOUT_CLASSIFICATION	0.9996197248166204	WITHOUT_CLASSIFICATION	3.8027518337965636E-4	IMPLEMENTATION
// hmm...	WITHOUT_CLASSIFICATION	0.9999909584718885	WITHOUT_CLASSIFICATION	9.041528111615727E-6	IMPLEMENTATION
// Called before any write to make sure the // header is always written before the first bytes	WITHOUT_CLASSIFICATION	0.9999106327017723	WITHOUT_CLASSIFICATION	8.936729822772268E-5	IMPLEMENTATION
// For JDK 1.4 we can use "cal.getTimeInMillis()"	WITHOUT_CLASSIFICATION	0.9963094868198604	WITHOUT_CLASSIFICATION	0.003690513180139632	IMPLEMENTATION
// We can just use dt, since it is immutable	WITHOUT_CLASSIFICATION	0.9999710062935417	WITHOUT_CLASSIFICATION	2.8993706458239403E-5	IMPLEMENTATION
// float number of seconds	WITHOUT_CLASSIFICATION	0.9999635050982729	WITHOUT_CLASSIFICATION	3.6494901727201974E-5	IMPLEMENTATION
// modified to match how hash is calculated in 1.8.2	WITHOUT_CLASSIFICATION	0.9998644025927723	WITHOUT_CLASSIFICATION	1.3559740722764193E-4	IMPLEMENTATION
// dump usec, not msec	WITHOUT_CLASSIFICATION	0.9980830287774713	WITHOUT_CLASSIFICATION	0.001916971222528745	IMPLEMENTATION
/* Time class methods */	WITHOUT_CLASSIFICATION	0.9999943045901679	WITHOUT_CLASSIFICATION	5.695409832024672E-6	IMPLEMENTATION
// marsaling dumps usec, not msec	WITHOUT_CLASSIFICATION	0.9964011234970139	WITHOUT_CLASSIFICATION	0.003598876502986054	IMPLEMENTATION
// MRI accepts additional wday argument which appears to be ignored.	WITHOUT_CLASSIFICATION	0.9999779125881183	WITHOUT_CLASSIFICATION	2.2087411881759558E-5	IMPLEMENTATION
// set up with min values and then add to allow rolling over	WITHOUT_CLASSIFICATION	0.9999967393690179	WITHOUT_CLASSIFICATION	3.2606309821613493E-6	IMPLEMENTATION
// the instant at which we will ask dtz what the difference between DST and // standard time is	WITHOUT_CLASSIFICATION	0.9999091170356225	WITHOUT_CLASSIFICATION	9.088296437755352E-5	IMPLEMENTATION
// if we might be moving this time from !DST -> DST, the offset is assumed // to be the same as it was just before we last moved from DST -> !DST	WITHOUT_CLASSIFICATION	0.9999999995959168	WITHOUT_CLASSIFICATION	4.040832080927357E-10	IMPLEMENTATION
// Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.	WITHOUT_CLASSIFICATION	0.9971820651985661	WITHOUT_CLASSIFICATION	0.0028179348014339637	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999973694441505	WITHOUT_CLASSIFICATION	2.6305558494269945E-6	IMPLEMENTATION
/* If the value will fit in a Fixnum, return one of those. */	WITHOUT_CLASSIFICATION	0.9999999759406144	WITHOUT_CLASSIFICATION	2.405938562819499E-8	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999975795651652	WITHOUT_CLASSIFICATION	2.4204348348181776E-6	IMPLEMENTATION
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9998735201313652	WITHOUT_CLASSIFICATION	1.2647986863477832E-4	IMPLEMENTATION
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9635062626461623	WITHOUT_CLASSIFICATION	0.03649373735383765	IMPLEMENTATION
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9635062626461623	WITHOUT_CLASSIFICATION	0.03649373735383765	IMPLEMENTATION
// no bignorm here needed	WITHOUT_CLASSIFICATION	0.9244944618196342	WITHOUT_CLASSIFICATION	0.0755055381803657	IMPLEMENTATION
// wow, the only time we can use the java protocol ;)	WITHOUT_CLASSIFICATION	0.9999226729422253	WITHOUT_CLASSIFICATION	7.732705777474475E-5	IMPLEMENTATION
// Pad with a 0	WITHOUT_CLASSIFICATION	0.9998019933350086	WITHOUT_CLASSIFICATION	1.9800666499132072E-4	IMPLEMENTATION
// BigInteger required a sign byte in incoming array	WITHOUT_CLASSIFICATION	0.9999755056621445	WITHOUT_CLASSIFICATION	2.4494337855405724E-5	IMPLEMENTATION
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9999998020936012	WITHOUT_CLASSIFICATION	1.979063987889833E-7	IMPLEMENTATION
// We do this b/c make_tmpname might be overridden	WITHOUT_CLASSIFICATION	0.9999829294085053	WITHOUT_CLASSIFICATION	1.707059149474483E-5	IMPLEMENTATION
// ???	WITHOUT_CLASSIFICATION	0.9999806704841675	WITHOUT_CLASSIFICATION	1.932951583245522E-5	IMPLEMENTATION
// PID	WITHOUT_CLASSIFICATION	0.9999909769897688	WITHOUT_CLASSIFICATION	9.023010231191877E-6	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999975795651652	WITHOUT_CLASSIFICATION	2.4204348348181776E-6	IMPLEMENTATION
// elements and trailing nils	WITHOUT_CLASSIFICATION	0.9999898082685124	WITHOUT_CLASSIFICATION	1.0191731487666018E-5	IMPLEMENTATION
// Dir::tmpdir	WITHOUT_CLASSIFICATION	0.999598425807291	WITHOUT_CLASSIFICATION	4.015741927090063E-4	IMPLEMENTATION
// volatile to ensure that initial nil-fill is visible to other threads	WITHOUT_CLASSIFICATION	0.9999911492556789	WITHOUT_CLASSIFICATION	8.850744321200083E-6	IMPLEMENTATION
/* Ruby arrays default to holding 16 elements, so we create an         * ArrayList of the same size if we're not told otherwise         */	WITHOUT_CLASSIFICATION	0.9999929691857387	WITHOUT_CLASSIFICATION	7.030814261374713E-6	IMPLEMENTATION
/* rb_ary_new2     * just allocates the internal array     */	WITHOUT_CLASSIFICATION	0.9999975293261063	WITHOUT_CLASSIFICATION	2.4706738937369042E-6	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999943356722351	WITHOUT_CLASSIFICATION	5.664327764864992E-6	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999943356722351	WITHOUT_CLASSIFICATION	5.664327764864992E-6	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999943356722351	WITHOUT_CLASSIFICATION	5.664327764864992E-6	IMPLEMENTATION
/* Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour     *      */	WITHOUT_CLASSIFICATION	0.9999874386225404	WITHOUT_CLASSIFICATION	1.2561377459559094E-5	IMPLEMENTATION
/* NEWOBJ and OBJSETUP equivalent     * fastest one, for shared arrays, optional objectspace     */	WITHOUT_CLASSIFICATION	0.9999974323369716	WITHOUT_CLASSIFICATION	2.5676630284890088E-6	IMPLEMENTATION
// Create global constants and variables	WITHOUT_CLASSIFICATION	0.9999990251757127	WITHOUT_CLASSIFICATION	9.748242873359446E-7	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9815790665760283	WITHOUT_CLASSIFICATION	0.018420933423971674	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9815790665760283	WITHOUT_CLASSIFICATION	0.018420933423971674	IMPLEMENTATION
// Windows does not support these functions, so we won't even try // This also matches Ruby behavior for JRUBY-2353.	WITHOUT_CLASSIFICATION	0.9999585810687001	WITHOUT_CLASSIFICATION	4.141893129989103E-5	IMPLEMENTATION
// There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and // newer one (US/Pacific, America/Los_Angeles). This pattern is to detect // the legacy TZ format in order to convert it to the newer format // understood by Java API.	WITHOUT_CLASSIFICATION	0.9999606916352052	WITHOUT_CLASSIFICATION	3.930836479487705E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9815790665760283	WITHOUT_CLASSIFICATION	0.018420933423971674	IMPLEMENTATION
// 1.9 seems to just do inspect for to_s now	WITHOUT_CLASSIFICATION	0.9999987997225207	WITHOUT_CLASSIFICATION	1.2002774793779138E-6	IMPLEMENTATION
// possibly should not in object space	WITHOUT_CLASSIFICATION	0.9999146991254592	WITHOUT_CLASSIFICATION	8.530087454078693E-5	IMPLEMENTATION
// only fill if there actually will remain trailing storage	WITHOUT_CLASSIFICATION	0.9999932828070599	WITHOUT_CLASSIFICATION	6.717192940133285E-6	IMPLEMENTATION
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.999598425807291	WITHOUT_CLASSIFICATION	4.015741927090063E-4	IMPLEMENTATION
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.999598425807291	WITHOUT_CLASSIFICATION	4.015741927090063E-4	IMPLEMENTATION
// from DUP_SETUP	WITHOUT_CLASSIFICATION	0.9999348113065726	WITHOUT_CLASSIFICATION	6.518869342742246E-5	IMPLEMENTATION
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999767742661054	WITHOUT_CLASSIFICATION	2.3225733894636897E-5	IMPLEMENTATION
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999547583016266	WITHOUT_CLASSIFICATION	4.524169837328914E-5	IMPLEMENTATION
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999547583016266	WITHOUT_CLASSIFICATION	4.524169837328914E-5	IMPLEMENTATION
// Satisfy java.util.List interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999149389925035	WITHOUT_CLASSIFICATION	8.506100749653554E-5	IMPLEMENTATION
// pre-set for the sake of terminating recursive calls	WITHOUT_CLASSIFICATION	0.9999500743502759	WITHOUT_CLASSIFICATION	4.992564972406963E-5	IMPLEMENTATION
/* root fiber */	WITHOUT_CLASSIFICATION	0.9999279058129633	WITHOUT_CLASSIFICATION	7.209418703663456E-5	IMPLEMENTATION
// GMT+00:00 --> Etc/GMT, see "MRI behavior" // comment below.	WITHOUT_CLASSIFICATION	0.9999142134511795	WITHOUT_CLASSIFICATION	8.578654882050301E-5	IMPLEMENTATION
//  See http://www.gzip.org/zlib/rfc-gzip.html	WITHOUT_CLASSIFICATION	0.9999257695695328	WITHOUT_CLASSIFICATION	7.423043046723835E-5	IMPLEMENTATION
// extras flag	WITHOUT_CLASSIFICATION	0.9993297064271637	WITHOUT_CLASSIFICATION	6.702935728362773E-4	IMPLEMENTATION
// Zlib::NO_FLUSH	WITHOUT_CLASSIFICATION	0.999598425807291	WITHOUT_CLASSIFICATION	4.015741927090063E-4	IMPLEMENTATION
// ...nothing	WITHOUT_CLASSIFICATION	0.999598425807291	WITHOUT_CLASSIFICATION	4.015741927090063E-4	IMPLEMENTATION
// utility method	WITHOUT_CLASSIFICATION	0.9991457901818045	WITHOUT_CLASSIFICATION	8.542098181953544E-4	IMPLEMENTATION
// Prepare LoadService and load path	WITHOUT_CLASSIFICATION	0.9997425271901933	WITHOUT_CLASSIFICATION	2.574728098067014E-4	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999975795651652	WITHOUT_CLASSIFICATION	2.4204348348181776E-6	IMPLEMENTATION
// flags // 4 bytes of modified time	WITHOUT_CLASSIFICATION	0.9999871962698931	WITHOUT_CLASSIFICATION	1.2803730106827949E-5	IMPLEMENTATION
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9998841567608697	WITHOUT_CLASSIFICATION	1.1584323913031345E-4	IMPLEMENTATION
// 1.8 "include?"	WITHOUT_CLASSIFICATION	0.999598425807291	WITHOUT_CLASSIFICATION	4.015741927090063E-4	IMPLEMENTATION
// any BigInteger is bigger than Fixnum and we don't have FIXABLE	WITHOUT_CLASSIFICATION	0.9999611787557735	WITHOUT_CLASSIFICATION	3.882124422655396E-5	IMPLEMENTATION
// beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal	WITHOUT_CLASSIFICATION	0.9999849641478729	WITHOUT_CLASSIFICATION	1.503585212703253E-5	IMPLEMENTATION
// MRI does it!	WITHOUT_CLASSIFICATION	0.9999686646329565	WITHOUT_CLASSIFICATION	3.133536704355011E-5	IMPLEMENTATION
// won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999980233372083	WITHOUT_CLASSIFICATION	1.9766627917905798E-6	IMPLEMENTATION
// it won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999963434728905	WITHOUT_CLASSIFICATION	3.6565271094961847E-6	IMPLEMENTATION
// RubyClassPathVariable	WITHOUT_CLASSIFICATION	0.999935505377077	WITHOUT_CLASSIFICATION	6.449462292307057E-5	IMPLEMENTATION
// not to be confused with RubyObject's flags	WITHOUT_CLASSIFICATION	0.9983362875053516	WITHOUT_CLASSIFICATION	0.0016637124946483873	IMPLEMENTATION
// second argument is allowed, but ignored (MRI)	WITHOUT_CLASSIFICATION	0.9999858622893227	WITHOUT_CLASSIFICATION	1.413771067726326E-5	IMPLEMENTATION
// we are presumably running a precompiled class; load directly	WITHOUT_CLASSIFICATION	0.9999584182795961	WITHOUT_CLASSIFICATION	4.1581720403910964E-5	IMPLEMENTATION
// terminate; tryCompile will have printed out an error and we're done	WITHOUT_CLASSIFICATION	0.9999805082667241	WITHOUT_CLASSIFICATION	1.949173327583932E-5	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999963376477788	WITHOUT_CLASSIFICATION	3.662352221266567E-6	IMPLEMENTATION
// do nothing, this iteration restarts	WITHOUT_CLASSIFICATION	0.9998359931187487	WITHOUT_CLASSIFICATION	1.6400688125138045E-4	IMPLEMENTATION
// recheck condition	WITHOUT_CLASSIFICATION	0.9996345576463164	WITHOUT_CLASSIFICATION	3.6544235368356426E-4	IMPLEMENTATION
// Get the main threadcontext (gets constructed for us)	WITHOUT_CLASSIFICATION	0.9999187772739525	WITHOUT_CLASSIFICATION	8.122272604750718E-5	IMPLEMENTATION
// Construct key services	WITHOUT_CLASSIFICATION	0.9999337794108624	WITHOUT_CLASSIFICATION	6.622058913766755E-5	IMPLEMENTATION
// initialize the root of the class hierarchy completely	WITHOUT_CLASSIFICATION	0.999982188023358	WITHOUT_CLASSIFICATION	1.781197664204319E-5	IMPLEMENTATION
// Construct the top-level execution frame and scope for the main thread	WITHOUT_CLASSIFICATION	0.9998040532522279	WITHOUT_CLASSIFICATION	1.959467477722431E-4	IMPLEMENTATION
// Initialize all the core classes	WITHOUT_CLASSIFICATION	0.9999221985802216	WITHOUT_CLASSIFICATION	7.78014197784807E-5	IMPLEMENTATION
// Initialize the "dummy" class used as a marker	WITHOUT_CLASSIFICATION	0.9999760950086748	WITHOUT_CLASSIFICATION	2.3904991325121306E-5	IMPLEMENTATION
// Initialize Kernel and include into Object	WITHOUT_CLASSIFICATION	0.9999436537515793	WITHOUT_CLASSIFICATION	5.634624842056347E-5	IMPLEMENTATION
// Object is ready, create top self	WITHOUT_CLASSIFICATION	0.9999309686786712	WITHOUT_CLASSIFICATION	6.903132132887522E-5	IMPLEMENTATION
// Pre-create all the core classes potentially referenced during startup	WITHOUT_CLASSIFICATION	0.9998648239993773	WITHOUT_CLASSIFICATION	1.3517600062271584E-4	IMPLEMENTATION
// Math depends on all numeric types	WITHOUT_CLASSIFICATION	0.9996557012107719	WITHOUT_CLASSIFICATION	3.4429878922820773E-4	IMPLEMENTATION
// depends on IO, FileTest	WITHOUT_CLASSIFICATION	0.9997829593120563	WITHOUT_CLASSIFICATION	2.1704068794363006E-4	IMPLEMENTATION
// initialize builtin libraries	WITHOUT_CLASSIFICATION	0.9999164239077898	WITHOUT_CLASSIFICATION	8.357609221019978E-5	IMPLEMENTATION
// Require in all libraries specified on command line	WITHOUT_CLASSIFICATION	0.9999554999819512	WITHOUT_CLASSIFICATION	4.4500018048867614E-5	IMPLEMENTATION
// Bootstrap the top of the hierarchy	WITHOUT_CLASSIFICATION	0.9998548096529214	WITHOUT_CLASSIFICATION	1.4519034707854522E-4	IMPLEMENTATION
// we try to get the classloader that loaded JRuby, falling back on System	WITHOUT_CLASSIFICATION	0.9997374195763602	WITHOUT_CLASSIFICATION	2.6258042363981506E-4	IMPLEMENTATION
// determine spacing	WITHOUT_CLASSIFICATION	0.9998592452995143	WITHOUT_CLASSIFICATION	1.4075470048561628E-4	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999985055584247	WITHOUT_CLASSIFICATION	1.4944415752325861E-6	IMPLEMENTATION
// For JSR 223 support: see http://scripting.java.net/	WITHOUT_CLASSIFICATION	0.9999466995176103	WITHOUT_CLASSIFICATION	5.330048238973669E-5	IMPLEMENTATION
// use this for JRuby-internal finalizers	WITHOUT_CLASSIFICATION	0.9996830600668587	WITHOUT_CLASSIFICATION	3.169399331412524E-4	IMPLEMENTATION
// this method is for finalizers registered via ObjectSpace	WITHOUT_CLASSIFICATION	0.9998919311714205	WITHOUT_CLASSIFICATION	1.080688285794945E-4	IMPLEMENTATION
// new factory methods ------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9998969026594166	WITHOUT_CLASSIFICATION	1.0309734058337E-4	IMPLEMENTATION
//        assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9518854738281777	WITHOUT_CLASSIFICATION	0.048114526171822304	IMPLEMENTATION
// Equivalent of Data_Wrap_Struct	WITHOUT_CLASSIFICATION	0.999937751238051	WITHOUT_CLASSIFICATION	6.224876194909345E-5	IMPLEMENTATION
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999725029825918	WITHOUT_CLASSIFICATION	2.7497017408330953E-5	IMPLEMENTATION
// ChannelDescriptors opened by sysopen are cached to avoid collection	WITHOUT_CLASSIFICATION	0.9999656573117232	WITHOUT_CLASSIFICATION	3.434268827677976E-5	IMPLEMENTATION
// Default objects	WITHOUT_CLASSIFICATION	0.9993613340611148	WITHOUT_CLASSIFICATION	6.386659388852614E-4	IMPLEMENTATION
// record separator var, to speed up io ops that use it	WITHOUT_CLASSIFICATION	0.9998553660740925	WITHOUT_CLASSIFICATION	1.4463392590751198E-4	IMPLEMENTATION
// former java.lang.System concepts now internalized for MVM	WITHOUT_CLASSIFICATION	0.9999721674297392	WITHOUT_CLASSIFICATION	2.783257026075203E-5	IMPLEMENTATION
// Java support	WITHOUT_CLASSIFICATION	0.9962381810946012	WITHOUT_CLASSIFICATION	0.0037618189053989187	IMPLEMENTATION
// Parser stats	WITHOUT_CLASSIFICATION	0.999644042221291	WITHOUT_CLASSIFICATION	3.5595777870891675E-4	IMPLEMENTATION
// Compilation	WITHOUT_CLASSIFICATION	0.999598425807291	WITHOUT_CLASSIFICATION	4.015741927090063E-4	IMPLEMENTATION
// can't read non-standard properties	WITHOUT_CLASSIFICATION	0.999913692231182	WITHOUT_CLASSIFICATION	8.630776881801869E-5	IMPLEMENTATION
// can't create custom classloaders	WITHOUT_CLASSIFICATION	0.9998979653598363	WITHOUT_CLASSIFICATION	1.0203464016365403E-4	IMPLEMENTATION
// mutex that controls modifications of user-defined finalizers	WITHOUT_CLASSIFICATION	0.9998929321373694	WITHOUT_CLASSIFICATION	1.0706786263069147E-4	IMPLEMENTATION
// mutex that controls modifications of internal finalizers	WITHOUT_CLASSIFICATION	0.9998875008464478	WITHOUT_CLASSIFICATION	1.1249915355212437E-4	IMPLEMENTATION
// A thread pool to use for executing this runtime's Ruby threads	WITHOUT_CLASSIFICATION	0.9990912283908279	WITHOUT_CLASSIFICATION	9.087716091721062E-4	IMPLEMENTATION
// A global object lock for class hierarchy mutations	WITHOUT_CLASSIFICATION	0.9999992877580655	WITHOUT_CLASSIFICATION	7.122419344494601E-7	IMPLEMENTATION
// initial spaces // spaces before "at"	WITHOUT_CLASSIFICATION	0.9999699169060691	WITHOUT_CLASSIFICATION	3.0083093930870843E-5	IMPLEMENTATION
// event name // filename // line numbers should be 1-based	WITHOUT_CLASSIFICATION	0.9999716622720062	WITHOUT_CLASSIFICATION	2.833772799376903E-5	IMPLEMENTATION
// The method is intentionally not public, since it typically should // not be used outside of the core.	WITHOUT_CLASSIFICATION	0.9990671836174176	WITHOUT_CLASSIFICATION	9.328163825823037E-4	IMPLEMENTATION
// Note: this field and the following static initializer // must be located be in this order!	WITHOUT_CLASSIFICATION	0.9999627675661972	WITHOUT_CLASSIFICATION	3.7232433802855025E-5	IMPLEMENTATION
// Contains a list of all blocks (as Procs) that should be called when // the runtime environment exits.	WITHOUT_CLASSIFICATION	0.9999977182311395	WITHOUT_CLASSIFICATION	2.281768860596627E-6	IMPLEMENTATION
// quoted-printable	WITHOUT_CLASSIFICATION	0.999598425807291	WITHOUT_CLASSIFICATION	4.015741927090063E-4	IMPLEMENTATION
// default options	WITHOUT_CLASSIFICATION	0.9999441514545581	WITHOUT_CLASSIFICATION	5.584854544191401E-5	IMPLEMENTATION
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.999598425807291	WITHOUT_CLASSIFICATION	4.015741927090063E-4	IMPLEMENTATION
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.999598425807291	WITHOUT_CLASSIFICATION	4.015741927090063E-4	IMPLEMENTATION
// Shift_JIS	WITHOUT_CLASSIFICATION	0.999598425807291	WITHOUT_CLASSIFICATION	4.015741927090063E-4	IMPLEMENTATION
// Shift_JIS	WITHOUT_CLASSIFICATION	0.999598425807291	WITHOUT_CLASSIFICATION	4.015741927090063E-4	IMPLEMENTATION
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999909584718885	WITHOUT_CLASSIFICATION	9.041528111615727E-6	IMPLEMENTATION
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999909584718885	WITHOUT_CLASSIFICATION	9.041528111615727E-6	IMPLEMENTATION
// UTF-8	WITHOUT_CLASSIFICATION	0.9999912898658342	WITHOUT_CLASSIFICATION	8.710134165829362E-6	IMPLEMENTATION
// UTF-8	WITHOUT_CLASSIFICATION	0.9999912898658342	WITHOUT_CLASSIFICATION	8.710134165829362E-6	IMPLEMENTATION
// long name option	WITHOUT_CLASSIFICATION	0.9997143664180221	WITHOUT_CLASSIFICATION	2.856335819778005E-4	IMPLEMENTATION
// conversion	WITHOUT_CLASSIFICATION	0.9997689039266798	WITHOUT_CLASSIFICATION	2.310960733201743E-4	IMPLEMENTATION
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999997546036823	WITHOUT_CLASSIFICATION	2.4539631770381756E-6	IMPLEMENTATION
// string doesn't share any resources	WITHOUT_CLASSIFICATION	0.9999992923489771	WITHOUT_CLASSIFICATION	7.076510229792602E-7	IMPLEMENTATION
// string has it's own ByteList, but it's pointing to a shared buffer (byte[])	WITHOUT_CLASSIFICATION	0.9999987991196664	WITHOUT_CLASSIFICATION	1.2008803336284401E-6	IMPLEMENTATION
// string doesn't have it's own ByteList (values)	WITHOUT_CLASSIFICATION	0.9999948980291261	WITHOUT_CLASSIFICATION	5.101970874001535E-6	IMPLEMENTATION
// ENC_CODERANGE_ASCIIONLY	WITHOUT_CLASSIFICATION	0.999935505377077	WITHOUT_CLASSIFICATION	6.449462292307057E-5	IMPLEMENTATION
// rb_enc_str_asciionly_p	WITHOUT_CLASSIFICATION	0.999935505377077	WITHOUT_CLASSIFICATION	6.449462292307057E-5	IMPLEMENTATION
// rb_enc_str_coderange	WITHOUT_CLASSIFICATION	0.999935505377077	WITHOUT_CLASSIFICATION	6.449462292307057E-5	IMPLEMENTATION
// rb_str_hash_cmp	WITHOUT_CLASSIFICATION	0.999598425807291	WITHOUT_CLASSIFICATION	4.015741927090063E-4	IMPLEMENTATION
// Deprecated String construction routines	WITHOUT_CLASSIFICATION	0.9999627370049146	WITHOUT_CLASSIFICATION	3.726299508553724E-5	IMPLEMENTATION
// String construction routines by NOT byte[] buffer and NOT making the target String shared 	WITHOUT_CLASSIFICATION	0.9999957169091285	WITHOUT_CLASSIFICATION	4.283090871586776E-6	IMPLEMENTATION
/* rb_str_subseq */	WITHOUT_CLASSIFICATION	0.9999264817012458	WITHOUT_CLASSIFICATION	7.351829875423047E-5	IMPLEMENTATION
// no need to assign encoding, same bytelist shared	WITHOUT_CLASSIFICATION	0.9998153578288237	WITHOUT_CLASSIFICATION	1.846421711762342E-4	IMPLEMENTATION
// if len == 0 then shared empty	WITHOUT_CLASSIFICATION	0.9999964210496523	WITHOUT_CLASSIFICATION	3.5789503477772937E-6	IMPLEMENTATION
/* rb_str_cmp_m */	WITHOUT_CLASSIFICATION	0.9999264817012458	WITHOUT_CLASSIFICATION	7.351829875423047E-5	IMPLEMENTATION
// we limit to int because ByteBuffer can only allocate int sizes	WITHOUT_CLASSIFICATION	0.9998834266449731	WITHOUT_CLASSIFICATION	1.165733550269214E-4	IMPLEMENTATION
// // rb_str_buf_append	WITHOUT_CLASSIFICATION	0.999935505377077	WITHOUT_CLASSIFICATION	6.449462292307057E-5	IMPLEMENTATION
// encoding doesn't have to be copied.	WITHOUT_CLASSIFICATION	0.9999941280169717	WITHOUT_CLASSIFICATION	5.871983028339513E-6	IMPLEMENTATION
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9997126036198878	WITHOUT_CLASSIFICATION	2.873963801121779E-4	IMPLEMENTATION
// must not reallocate	WITHOUT_CLASSIFICATION	0.9964834540501765	WITHOUT_CLASSIFICATION	0.003516545949823587	IMPLEMENTATION
// Illegal combination	WITHOUT_CLASSIFICATION	0.9999355425067287	WITHOUT_CLASSIFICATION	6.445749327129838E-5	IMPLEMENTATION
// use 1.8 impl	WITHOUT_CLASSIFICATION	0.9987261458281151	WITHOUT_CLASSIFICATION	0.0012738541718848267	IMPLEMENTATION
/* RubyString aka rb_string_value */	WITHOUT_CLASSIFICATION	0.9999785573213178	WITHOUT_CLASSIFICATION	2.1442678682142487E-5	IMPLEMENTATION
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999881677430746	WITHOUT_CLASSIFICATION	1.183225692537201E-5	IMPLEMENTATION
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999998265954275	WITHOUT_CLASSIFICATION	1.734045725083602E-7	IMPLEMENTATION
/* len + margin */	WITHOUT_CLASSIFICATION	0.9998519214908637	WITHOUT_CLASSIFICATION	1.48078509136472E-4	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9991009272826367	WITHOUT_CLASSIFICATION	8.990727173633325E-4	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9991009272826367	WITHOUT_CLASSIFICATION	8.990727173633325E-4	IMPLEMENTATION
/* copy pre-match substr */	WITHOUT_CLASSIFICATION	0.9999947289848613	WITHOUT_CLASSIFICATION	5.271015138661376E-6	IMPLEMENTATION
// string given	WITHOUT_CLASSIFICATION	0.9999832977342384	WITHOUT_CLASSIFICATION	1.670226576157385E-5	IMPLEMENTATION
// hash given	WITHOUT_CLASSIFICATION	0.9993256479859642	WITHOUT_CLASSIFICATION	6.743520140358075E-4	IMPLEMENTATION
// This represents left most digit in a set of incremented // values?  Therefore leftmost numeric must be '1' and not '0' // 999 -> 1000, not 999 -> 0000.  whereas chars should be // zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"	WITHOUT_CLASSIFICATION	0.9999980915242864	WITHOUT_CLASSIFICATION	1.908475713499574E-6	IMPLEMENTATION
/* substring longer than string */	WITHOUT_CLASSIFICATION	0.9999998337828946	WITHOUT_CLASSIFICATION	1.662171053625226E-7	IMPLEMENTATION
/* rb_str_substr */	WITHOUT_CLASSIFICATION	0.9999264817012458	WITHOUT_CLASSIFICATION	7.351829875423047E-5	IMPLEMENTATION
// nothing	WITHOUT_CLASSIFICATION	0.999998344567639	WITHOUT_CLASSIFICATION	1.6554323609596158E-6	IMPLEMENTATION
// nothing	WITHOUT_CLASSIFICATION	0.999998344567639	WITHOUT_CLASSIFICATION	1.6554323609596158E-6	IMPLEMENTATION
/* rb_str_splice */	WITHOUT_CLASSIFICATION	0.9999264817012458	WITHOUT_CLASSIFICATION	7.351829875423047E-5	IMPLEMENTATION
// TODO: keep cr // TODO: rb_str_splice_0	WITHOUT_CLASSIFICATION	0.6158486161132855	IMPLEMENTATION	0.3841513838867146	WITHOUT_CLASSIFICATION
// keep cr ?	WITHOUT_CLASSIFICATION	0.9998669003485231	WITHOUT_CLASSIFICATION	1.3309965147698365E-4	IMPLEMENTATION
// keep cr ?	WITHOUT_CLASSIFICATION	0.9998669003485231	WITHOUT_CLASSIFICATION	1.3309965147698365E-4	IMPLEMENTATION
/* wrapped to \0...\0.  search next valid char. */	WITHOUT_CLASSIFICATION	0.9999904392869808	WITHOUT_CLASSIFICATION	9.560713019203352E-6	IMPLEMENTATION
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9996387247758178	WITHOUT_CLASSIFICATION	3.6127522418224865E-4	IMPLEMENTATION
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9996387247758178	WITHOUT_CLASSIFICATION	3.6127522418224865E-4	IMPLEMENTATION
// modified	WITHOUT_CLASSIFICATION	0.9990190797058409	WITHOUT_CLASSIFICATION	9.8092029415907E-4	IMPLEMENTATION
// modified	WITHOUT_CLASSIFICATION	0.9990190797058409	WITHOUT_CLASSIFICATION	9.8092029415907E-4	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.9999909584718885	WITHOUT_CLASSIFICATION	9.041528111615727E-6	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.9999909584718885	WITHOUT_CLASSIFICATION	9.041528111615727E-6	IMPLEMENTATION
// QTRUE	WITHOUT_CLASSIFICATION	0.9999909584718885	WITHOUT_CLASSIFICATION	9.041528111615727E-6	IMPLEMENTATION
/* retrieve last replacer */	WITHOUT_CLASSIFICATION	0.9999939554044822	WITHOUT_CLASSIFICATION	6.044595517843428E-6	IMPLEMENTATION
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9980401491885169	WITHOUT_CLASSIFICATION	0.0019598508114830795	IMPLEMENTATION
// long size * bits in byte	WITHOUT_CLASSIFICATION	0.9999989201865437	WITHOUT_CLASSIFICATION	1.0798134563350525E-6	IMPLEMENTATION
// from encoding, special-casing ASCII* to ASCII	WITHOUT_CLASSIFICATION	0.9999838102491657	WITHOUT_CLASSIFICATION	1.6189750834323423E-5	IMPLEMENTATION
// to encoding, same special-casing	WITHOUT_CLASSIFICATION	0.9999212320249374	WITHOUT_CLASSIFICATION	7.876797506249376E-5	IMPLEMENTATION
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999469280127189	WITHOUT_CLASSIFICATION	5.307198728126225E-5	IMPLEMENTATION
// decode from "from" and encode to "to"	WITHOUT_CLASSIFICATION	0.9999884232724734	WITHOUT_CLASSIFICATION	1.1576727526533899E-5	IMPLEMENTATION
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999469280127189	WITHOUT_CLASSIFICATION	5.307198728126225E-5	IMPLEMENTATION
//Kernel is the only Module that doesn't need an implementor	WITHOUT_CLASSIFICATION	0.999871007980495	WITHOUT_CLASSIFICATION	1.289920195050345E-4	IMPLEMENTATION
// no binding given, use (eval)	WITHOUT_CLASSIFICATION	0.9997612599316882	WITHOUT_CLASSIFICATION	2.3874006831175012E-4	IMPLEMENTATION
// interned, OK for "fast" methods	WITHOUT_CLASSIFICATION	0.999889578106158	WITHOUT_CLASSIFICATION	1.1042189384202395E-4	IMPLEMENTATION
// File to be loaded by autoload has already been or is being loaded.	WITHOUT_CLASSIFICATION	0.9999989738627003	WITHOUT_CLASSIFICATION	1.0261372996913177E-6	IMPLEMENTATION
// rb_cstr_to_dbl case	WITHOUT_CLASSIFICATION	0.9999045748060881	WITHOUT_CLASSIFICATION	9.542519391193206E-5	IMPLEMENTATION
// We break if we know this sleep was explicitly woken up/interrupted	WITHOUT_CLASSIFICATION	0.9998282433576839	WITHOUT_CLASSIFICATION	1.7175664231604525E-4	IMPLEMENTATION
// exec process, create IO with process	WITHOUT_CLASSIFICATION	0.9998976256172717	WITHOUT_CLASSIFICATION	1.0237438272824712E-4	IMPLEMENTATION
// Zero sleeps forever	WITHOUT_CLASSIFICATION	0.999935773434181	WITHOUT_CLASSIFICATION	6.422656581903428E-5	IMPLEMENTATION
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9994578605009727	WITHOUT_CLASSIFICATION	5.421394990272557E-4	IMPLEMENTATION
// Explicit zero in MRI returns immediately	WITHOUT_CLASSIFICATION	0.9999923065870343	WITHOUT_CLASSIFICATION	7.693412965640216E-6	IMPLEMENTATION
// Spurious wakeup-loop	WITHOUT_CLASSIFICATION	0.999935505377077	WITHOUT_CLASSIFICATION	6.449462292307057E-5	IMPLEMENTATION
// adjusts paths started with '/' or '\\', on windows.	WITHOUT_CLASSIFICATION	0.9997005602707515	WITHOUT_CLASSIFICATION	2.994397292484867E-4	IMPLEMENTATION
// file not given	WITHOUT_CLASSIFICATION	0.9821461596046569	WITHOUT_CLASSIFICATION	0.01785384039534305	IMPLEMENTATION
// string to eval	WITHOUT_CLASSIFICATION	0.9999916719623828	WITHOUT_CLASSIFICATION	8.328037617148182E-6	IMPLEMENTATION
// binding given, use binding's file	WITHOUT_CLASSIFICATION	0.9996775639647086	WITHOUT_CLASSIFICATION	3.224360352912944E-4	IMPLEMENTATION
// ?g  | boolean | True if file1 has the \CF{setgid} bit	WITHOUT_CLASSIFICATION	0.9999960547778949	WITHOUT_CLASSIFICATION	3.945222105210039E-6	IMPLEMENTATION
// bomb out, it's not a binding or a proc	WITHOUT_CLASSIFICATION	0.9941992105410129	WITHOUT_CLASSIFICATION	0.00580078945898707	IMPLEMENTATION
// Ordering of array traversal not important, just intuitive	WITHOUT_CLASSIFICATION	0.9997007120199588	WITHOUT_CLASSIFICATION	2.992879800412619E-4	IMPLEMENTATION
//Catch active, throw for catch to handle	WITHOUT_CLASSIFICATION	0.9976750313710125	WITHOUT_CLASSIFICATION	0.0023249686289874274	IMPLEMENTATION
// No catch active for this throw	WITHOUT_CLASSIFICATION	0.999900425788298	WITHOUT_CLASSIFICATION	9.957421170194529E-5	IMPLEMENTATION
// without full tracing, many events will not fire	WITHOUT_CLASSIFICATION	0.9965433016944328	WITHOUT_CLASSIFICATION	0.003456698305567138	IMPLEMENTATION
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9997959648143666	WITHOUT_CLASSIFICATION	2.0403518563340094E-4	IMPLEMENTATION
// MRI behavior: use first byte of string value if len > 0	WITHOUT_CLASSIFICATION	0.9999998650662566	WITHOUT_CLASSIFICATION	1.3493374336111275E-7	IMPLEMENTATION
// MRI behavior: now check arg count	WITHOUT_CLASSIFICATION	0.999229201737698	WITHOUT_CLASSIFICATION	7.707982623020204E-4	IMPLEMENTATION
// ?A  | Time    | Last access time for file1	WITHOUT_CLASSIFICATION	0.9999970749796331	WITHOUT_CLASSIFICATION	2.9250203668685606E-6	IMPLEMENTATION
// ?b  | boolean | True if file1 is a block device	WITHOUT_CLASSIFICATION	0.9999977262119584	WITHOUT_CLASSIFICATION	2.273788041668664E-6	IMPLEMENTATION
// ?c  | boolean | True if file1 is a character device	WITHOUT_CLASSIFICATION	0.9999981670093587	WITHOUT_CLASSIFICATION	1.832990641248055E-6	IMPLEMENTATION
// ?C  | Time    | Last change time for file1	WITHOUT_CLASSIFICATION	0.9999987345492448	WITHOUT_CLASSIFICATION	1.2654507551702284E-6	IMPLEMENTATION
// ?d  | boolean | True if file1 exists and is a directory	WITHOUT_CLASSIFICATION	0.9999998624370108	WITHOUT_CLASSIFICATION	1.3756298927925698E-7	IMPLEMENTATION
// ?e  | boolean | True if file1 exists	WITHOUT_CLASSIFICATION	0.9999955152909571	WITHOUT_CLASSIFICATION	4.484709042907413E-6	IMPLEMENTATION
// ?f  | boolean | True if file1 exists and is a regular file	WITHOUT_CLASSIFICATION	0.9999983291305308	WITHOUT_CLASSIFICATION	1.6708694691718349E-6	IMPLEMENTATION
// ?G  | boolean | True if file1 exists and has a group ownership equal to the caller's group	WITHOUT_CLASSIFICATION	0.9999991122711177	WITHOUT_CLASSIFICATION	8.877288823365364E-7	IMPLEMENTATION
// ?k  | boolean | True if file1 exists and has the sticky bit set	WITHOUT_CLASSIFICATION	0.9999981509491745	WITHOUT_CLASSIFICATION	1.8490508255323655E-6	IMPLEMENTATION
// ?M  | Time    | Last modification time for file1	WITHOUT_CLASSIFICATION	0.9999978598621873	WITHOUT_CLASSIFICATION	2.1401378127039598E-6	IMPLEMENTATION
// ?o  | boolean | True if file1 exists and is owned by the caller's effective uid	WITHOUT_CLASSIFICATION	0.9999994102878899	WITHOUT_CLASSIFICATION	5.897121102429464E-7	IMPLEMENTATION
// ?O  | boolean | True if file1 exists and is owned by the caller's real uid 	WITHOUT_CLASSIFICATION	0.9999988672302628	WITHOUT_CLASSIFICATION	1.1327697372505712E-6	IMPLEMENTATION
// ?p  | boolean | True if file1 exists and is a fifo	WITHOUT_CLASSIFICATION	0.9999990715439868	WITHOUT_CLASSIFICATION	9.284560130583642E-7	IMPLEMENTATION
// ?r  | boolean | True if file1 is readable by the effective uid/gid of the caller	WITHOUT_CLASSIFICATION	0.9999995613803969	WITHOUT_CLASSIFICATION	4.3861960306745223E-7	IMPLEMENTATION
// ?s  | int/nil | If file1 has nonzero size, return the size, otherwise nil	WITHOUT_CLASSIFICATION	0.9998449563218849	WITHOUT_CLASSIFICATION	1.5504367811510362E-4	IMPLEMENTATION
// ?S  | boolean | True if file1 exists and is a socket	WITHOUT_CLASSIFICATION	0.9999990335681599	WITHOUT_CLASSIFICATION	9.664318400374967E-7	IMPLEMENTATION
// ?u  | boolean | True if file1 has the setuid bit set	WITHOUT_CLASSIFICATION	0.9999967092950376	WITHOUT_CLASSIFICATION	3.290704962479027E-6	IMPLEMENTATION
// ?x  | boolean | True if file1 exists and is executable by the effective uid/gid	WITHOUT_CLASSIFICATION	0.999999348443772	WITHOUT_CLASSIFICATION	6.515562280553987E-7	IMPLEMENTATION
// ?X  | boolean | True if file1 exists and is executable by the real uid/gid	WITHOUT_CLASSIFICATION	0.9999987484348338	WITHOUT_CLASSIFICATION	1.2515651661290898E-6	IMPLEMENTATION
// ?z  | boolean | True if file1 exists and has a zero length	WITHOUT_CLASSIFICATION	0.9999988155698577	WITHOUT_CLASSIFICATION	1.1844301423733943E-6	IMPLEMENTATION
// ?=  | boolean | True if the modification times of file1 and file2 are equal	WITHOUT_CLASSIFICATION	0.9999997434158253	WITHOUT_CLASSIFICATION	2.565841746965529E-7	IMPLEMENTATION
// ?<  | boolean | True if the modification time of file1 is prior to that of file2	WITHOUT_CLASSIFICATION	0.9999997817266381	WITHOUT_CLASSIFICATION	2.1827336205078974E-7	IMPLEMENTATION
// ?>  | boolean | True if the modification time of file1 is after that of file2	WITHOUT_CLASSIFICATION	0.9999998610646947	WITHOUT_CLASSIFICATION	1.3893530524006188E-7	IMPLEMENTATION
// ?-  | boolean | True if file1 and file2 are identical	WITHOUT_CLASSIFICATION	0.999998340493895	WITHOUT_CLASSIFICATION	1.6595061050164087E-6	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999164983021449	WITHOUT_CLASSIFICATION	8.35016978550977E-5	IMPLEMENTATION
// Error info is per-thread	WITHOUT_CLASSIFICATION	0.9999841253178067	WITHOUT_CLASSIFICATION	1.5874682193313142E-5	IMPLEMENTATION
// init errorInfo to nil	WITHOUT_CLASSIFICATION	0.9999517326035958	WITHOUT_CLASSIFICATION	4.826739640408618E-5	IMPLEMENTATION
// if we're already aborting, we can receive no further mail	WITHOUT_CLASSIFICATION	0.9999775996834984	WITHOUT_CLASSIFICATION	2.2400316501544346E-5	IMPLEMENTATION
// If this thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9998983506857959	WITHOUT_CLASSIFICATION	1.0164931420417468E-4	IMPLEMENTATION
// new interrupt, to hopefully wake it out of any blocking IO	WITHOUT_CLASSIFICATION	0.9999702719926106	WITHOUT_CLASSIFICATION	2.97280073893805E-5	IMPLEMENTATION
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999788612319788	WITHOUT_CLASSIFICATION	2.1138768021222157E-5	IMPLEMENTATION
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999788612319788	WITHOUT_CLASSIFICATION	2.1138768021222157E-5	IMPLEMENTATION
// JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999979343366329	WITHOUT_CLASSIFICATION	2.065663367083426E-6	IMPLEMENTATION
// JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999950824508855	WITHOUT_CLASSIFICATION	4.917549114418425E-6	IMPLEMENTATION
// for Thread::start, which does not call the subclass's initialize	WITHOUT_CLASSIFICATION	0.9996074617192724	WITHOUT_CLASSIFICATION	3.9253828072755275E-4	IMPLEMENTATION
// JRUBY-3568, inherit threadgroup or use default	WITHOUT_CLASSIFICATION	0.9999525579356736	WITHOUT_CLASSIFICATION	4.744206432647856E-5	IMPLEMENTATION
// MRI behavior: value given in seconds; converted to Float; less // than or equal to zero returns immediately; returns nil	WITHOUT_CLASSIFICATION	0.9999990576732096	WITHOUT_CLASSIFICATION	9.423267903108712E-7	IMPLEMENTATION
// If the target thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999597409892683	WITHOUT_CLASSIFICATION	4.025901073165107E-5	IMPLEMENTATION
// We need this loop in order to be able to "unblock" the // join call without actually calling interrupt.	WITHOUT_CLASSIFICATION	0.9999899387100032	WITHOUT_CLASSIFICATION	1.0061289996935829E-5	IMPLEMENTATION
// attempt to decriticalize all if we're the critical thread	WITHOUT_CLASSIFICATION	0.9999062102933841	WITHOUT_CLASSIFICATION	9.378970661586446E-5	IMPLEMENTATION
// not valid for "dead" state	WITHOUT_CLASSIFICATION	0.999862726975311	WITHOUT_CLASSIFICATION	1.3727302468905173E-4	IMPLEMENTATION
// If the killee thread is the same as the killer thread, just die	WITHOUT_CLASSIFICATION	0.9999984547032126	WITHOUT_CLASSIFICATION	1.5452967874447808E-6	IMPLEMENTATION
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999452202883615	WITHOUT_CLASSIFICATION	5.477971163846508E-5	IMPLEMENTATION
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999452202883615	WITHOUT_CLASSIFICATION	5.477971163846508E-5	IMPLEMENTATION
// ignore; I don't like doing it, but it seems like we // really just need to make all channels non-blocking by // default and use select when implementing blocking ops, // so if this remains set non-blocking, perhaps it's not // such a big deal...	WITHOUT_CLASSIFICATION	0.996075808826336	WITHOUT_CLASSIFICATION	0.00392419117366408	IMPLEMENTATION
// can't select, just have to do a blocking call	WITHOUT_CLASSIFICATION	0.999971752756841	WITHOUT_CLASSIFICATION	2.824724315899718E-5	IMPLEMENTATION
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9998188249017285	WITHOUT_CLASSIFICATION	1.8117509827151042E-4	IMPLEMENTATION
// Create Constants class	WITHOUT_CLASSIFICATION	0.9999869778761907	WITHOUT_CLASSIFICATION	1.3022123809378982E-5	IMPLEMENTATION
// Create constants for open flags	WITHOUT_CLASSIFICATION	0.9999973547994595	WITHOUT_CLASSIFICATION	2.6452005405469744E-6	IMPLEMENTATION
// Strip off the O_ prefix, so they become File::RDONLY, and so on	WITHOUT_CLASSIFICATION	0.9999763823525382	WITHOUT_CLASSIFICATION	2.361764746186826E-5	IMPLEMENTATION
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999969020929231	WITHOUT_CLASSIFICATION	3.09790707676729E-6	IMPLEMENTATION
// File::Constants module is included in IO.	WITHOUT_CLASSIFICATION	0.9999884008621199	WITHOUT_CLASSIFICATION	1.1599137880035755E-5	IMPLEMENTATION
// Make sure any existing lock is released before we try and close the file	WITHOUT_CLASSIFICATION	0.9999987463082579	WITHOUT_CLASSIFICATION	1.2536917421513064E-6	IMPLEMENTATION
// null channel always succeeds for all locking operations	WITHOUT_CLASSIFICATION	0.9998940939033294	WITHOUT_CLASSIFICATION	1.0590609667060518E-4	IMPLEMENTATION
// Paths which end in "/" or "\\" must be stripped off.	WITHOUT_CLASSIFICATION	0.9999646614941808	WITHOUT_CLASSIFICATION	3.533850581916614E-5	IMPLEMENTATION
// Special case for handling ACCMODE, since constantine will generate // an invalid value if it is not defined by the platform.	WITHOUT_CLASSIFICATION	0.9999954231528557	WITHOUT_CLASSIFICATION	4.5768471442229694E-6	IMPLEMENTATION
// Return false here	WITHOUT_CLASSIFICATION	0.9998915616018147	WITHOUT_CLASSIFICATION	1.0843839818540657E-4	IMPLEMENTATION
// Return false here	WITHOUT_CLASSIFICATION	0.9998915616018147	WITHOUT_CLASSIFICATION	1.0843839818540657E-4	IMPLEMENTATION
// We're not actually a real file, so we can't flock	WITHOUT_CLASSIFICATION	0.9962941587663813	WITHOUT_CLASSIFICATION	0.003705841233618662	IMPLEMENTATION
// Should we do anything?	WITHOUT_CLASSIFICATION	0.9999279717962715	WITHOUT_CLASSIFICATION	7.202820372851703E-5	IMPLEMENTATION
/* File class methods */	WITHOUT_CLASSIFICATION	0.999998084715186	WITHOUT_CLASSIFICATION	1.9152848139867133E-6	IMPLEMENTATION
// MRI-compatible basename handling for windows drive letter paths	WITHOUT_CLASSIFICATION	0.9999330391880104	WITHOUT_CLASSIFICATION	6.69608119896577E-5	IMPLEMENTATION
// strip c: away from relative-pathed name	WITHOUT_CLASSIFICATION	0.9999213209962554	WITHOUT_CLASSIFICATION	7.867900374456791E-5	IMPLEMENTATION
// C:\ is returned unchanged	WITHOUT_CLASSIFICATION	0.9999840571965526	WITHOUT_CLASSIFICATION	1.5942803447434144E-5	IMPLEMENTATION
// -1 no match; 0 it is dot file not extension	WITHOUT_CLASSIFICATION	0.9985444179568377	WITHOUT_CLASSIFICATION	0.0014555820431623526	IMPLEMENTATION
// trim trailing slashes	WITHOUT_CLASSIFICATION	0.9999407306340546	WITHOUT_CLASSIFICATION	5.926936594531177E-5	IMPLEMENTATION
// Dot is not at beginning and not at end of filename. 	WITHOUT_CLASSIFICATION	0.9972131736619065	WITHOUT_CLASSIFICATION	0.002786826338093346	IMPLEMENTATION
// Handle ~user paths 	WITHOUT_CLASSIFICATION	0.9999455829763467	WITHOUT_CLASSIFICATION	5.441702365328653E-5	IMPLEMENTATION
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9998188249017285	WITHOUT_CLASSIFICATION	1.8117509827151042E-4	IMPLEMENTATION
// Include additional path separator // (so that dirname of "C:\file.txt" is  "C:\", not "C:")	WITHOUT_CLASSIFICATION	0.9944906210312391	WITHOUT_CLASSIFICATION	0.005509378968760805	IMPLEMENTATION
// FNFException can be thrown in both cases, when the file // is not found, or when permission is denied.	WITHOUT_CLASSIFICATION	0.9998384781759021	WITHOUT_CLASSIFICATION	1.615218240979044E-4	IMPLEMENTATION
// No directory delimeter.  Rest of string is username	WITHOUT_CLASSIFICATION	0.9999999542349151	WITHOUT_CLASSIFICATION	4.576508485540851E-8	IMPLEMENTATION
// If there's a second argument, it's the path to which the first  // argument is relative.	WITHOUT_CLASSIFICATION	0.999881783156579	WITHOUT_CLASSIFICATION	1.1821684342092435E-4	IMPLEMENTATION
// Handle ~user paths.	WITHOUT_CLASSIFICATION	0.999938716951612	WITHOUT_CLASSIFICATION	6.128304838805321E-5	IMPLEMENTATION
// If there's no second argument, simply use the working directory  // of the runtime.	WITHOUT_CLASSIFICATION	0.9999491848833755	WITHOUT_CLASSIFICATION	5.0815116624503546E-5	IMPLEMENTATION
// Find out which string to check.	WITHOUT_CLASSIFICATION	0.9999981115992043	WITHOUT_CLASSIFICATION	1.888400795743568E-6	IMPLEMENTATION
// Single '~' as whole path to expand	WITHOUT_CLASSIFICATION	0.9999078834113814	WITHOUT_CLASSIFICATION	9.211658861863976E-5	IMPLEMENTATION
// Count number of extra slashes in the beginning of the string.	WITHOUT_CLASSIFICATION	0.9999891371356427	WITHOUT_CLASSIFICATION	1.0862864357330063E-5	IMPLEMENTATION
// '~user/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999265015333646	WITHOUT_CLASSIFICATION	7.349846663541974E-5	IMPLEMENTATION
// '~/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999595384102357	WITHOUT_CLASSIFICATION	4.0461589764320596E-5	IMPLEMENTATION
// Prepare a string with the same number of redundant slashes so that  // we easily can prepend it to the result.	WITHOUT_CLASSIFICATION	0.9999935852600887	WITHOUT_CLASSIFICATION	6.414739911278971E-6	IMPLEMENTATION
// If there are N slashes, then we want N-1.	WITHOUT_CLASSIFICATION	0.9999594623247663	WITHOUT_CLASSIFICATION	4.053767523366451E-5	IMPLEMENTATION
// no canonical path yet or length is zero, and we have a / followed by a dot...	WITHOUT_CLASSIFICATION	0.9999357982748732	WITHOUT_CLASSIFICATION	6.420172512678397E-5	IMPLEMENTATION
// we don't have another slash after this, so replace /. with /	WITHOUT_CLASSIFICATION	0.9998186948073847	WITHOUT_CLASSIFICATION	1.813051926153113E-4	IMPLEMENTATION
// we do have another slash; omit both / and . (JRUBY-1606)	WITHOUT_CLASSIFICATION	0.9999400470168703	WITHOUT_CLASSIFICATION	5.9952983129742476E-5	IMPLEMENTATION
// do nothing, we should not delete the drive letter	WITHOUT_CLASSIFICATION	0.9919517754808048	WITHOUT_CLASSIFICATION	0.008048224519195072	IMPLEMENTATION
/* rb: check_modifiable */	WITHOUT_CLASSIFICATION	0.9999881958820876	WITHOUT_CLASSIFICATION	1.1804117912266345E-5	IMPLEMENTATION
/* rb: readable */	WITHOUT_CLASSIFICATION	0.9999265761738556	WITHOUT_CLASSIFICATION	7.342382614444072E-5	IMPLEMENTATION
// rename is successful	WITHOUT_CLASSIFICATION	0.9999780781307238	WITHOUT_CLASSIFICATION	2.1921869276192897E-5	IMPLEMENTATION
// rename via Java API call wasn't successful, let's try some tricks, similar to MRI 	WITHOUT_CLASSIFICATION	0.9999170498586032	WITHOUT_CLASSIFICATION	8.295014139680762E-5	IMPLEMENTATION
// try to rename one more time	WITHOUT_CLASSIFICATION	0.9999120663656528	WITHOUT_CLASSIFICATION	8.793363434723399E-5	IMPLEMENTATION
// Can we produce IOError which bypasses a close?	WITHOUT_CLASSIFICATION	0.9997392584902466	WITHOUT_CLASSIFICATION	2.6074150975335215E-4	IMPLEMENTATION
// Fast path since JNA stat is about 10x slower than this	WITHOUT_CLASSIFICATION	0.9999409745459371	WITHOUT_CLASSIFICATION	5.9025454062854886E-5	IMPLEMENTATION
// RubyContinuation	WITHOUT_CLASSIFICATION	0.999598425807291	WITHOUT_CLASSIFICATION	4.015741927090063E-4	IMPLEMENTATION
/*     *  Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq)     *  it doesn't initialize ifNone field     */	WITHOUT_CLASSIFICATION	0.999999707600348	WITHOUT_CLASSIFICATION	2.923996521344791E-7	IMPLEMENTATION
// 16 ?	WITHOUT_CLASSIFICATION	0.9999957286062682	WITHOUT_CLASSIFICATION	4.271393731743358E-6	IMPLEMENTATION
// generation count for O(1) clears	WITHOUT_CLASSIFICATION	0.9999653522530264	WITHOUT_CLASSIFICATION	3.4647746973728174E-5	IMPLEMENTATION
// size + 1;	WITHOUT_CLASSIFICATION	0.9997780729268653	WITHOUT_CLASSIFICATION	2.2192707313475465E-4	IMPLEMENTATION
// suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen	WITHOUT_CLASSIFICATION	0.9996624367291813	WITHOUT_CLASSIFICATION	3.37563270818671E-4	IMPLEMENTATION
// ------------------------------	WITHOUT_CLASSIFICATION	0.9998830799885176	WITHOUT_CLASSIFICATION	1.1692001148243971E-4	IMPLEMENTATION
// ------------------------------	WITHOUT_CLASSIFICATION	0.9998830799885176	WITHOUT_CLASSIFICATION	1.1692001148243971E-4	IMPLEMENTATION
// put implementation	WITHOUT_CLASSIFICATION	0.998687137772181	WITHOUT_CLASSIFICATION	0.0013128622278190537	IMPLEMENTATION
// get implementation	WITHOUT_CLASSIFICATION	0.999684206915496	WITHOUT_CLASSIFICATION	3.1579308450405596E-4	IMPLEMENTATION
// specialized for value	WITHOUT_CLASSIFICATION	0.9999948681970443	WITHOUT_CLASSIFICATION	5.131802955642099E-6	IMPLEMENTATION
// delete implementation	WITHOUT_CLASSIFICATION	0.999344347887903	WITHOUT_CLASSIFICATION	6.55652112097035E-4	IMPLEMENTATION
// n.b. we need to recompute the hash in case the key object was modified	WITHOUT_CLASSIFICATION	0.9999680804325299	WITHOUT_CLASSIFICATION	3.191956746999073E-5	IMPLEMENTATION
/* ============================     * End of hash internals     * ============================     */	WITHOUT_CLASSIFICATION	0.9999967309291123	WITHOUT_CLASSIFICATION	3.2690708875293834E-6	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================     */	WITHOUT_CLASSIFICATION	0.9999975795651652	WITHOUT_CLASSIFICATION	2.4204348348181776E-6	IMPLEMENTATION
// update the hash value	WITHOUT_CLASSIFICATION	0.999994813713916	WITHOUT_CLASSIFICATION	5.186286084008667E-6	IMPLEMENTATION
// other hash does not contain key	WITHOUT_CLASSIFICATION	0.9963008272161784	WITHOUT_CLASSIFICATION	0.0036991727838216366	IMPLEMENTATION
// rb_yield_values(2,...) equivalent	WITHOUT_CLASSIFICATION	0.999755585850787	WITHOUT_CLASSIFICATION	2.4441414921295713E-4	IMPLEMENTATION
// Satisfy java.util.Set interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999448299686442	WITHOUT_CLASSIFICATION	5.517003135582279E-5	IMPLEMENTATION
// remain where we are	WITHOUT_CLASSIFICATION	0.9999110233095713	WITHOUT_CLASSIFICATION	8.897669042875533E-5	IMPLEMENTATION
// We use file test since it is faster than a stat; also euid == uid in Java always	WITHOUT_CLASSIFICATION	0.9999901531670968	WITHOUT_CLASSIFICATION	9.846832903152503E-6	IMPLEMENTATION
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999725029825918	WITHOUT_CLASSIFICATION	2.7497017408330953E-5	IMPLEMENTATION
// once hasNext has been called, we commit to next() returning // the entry it found, even if it were subsequently deleted	WITHOUT_CLASSIFICATION	0.984205563105654	WITHOUT_CLASSIFICATION	0.015794436894346082	IMPLEMENTATION
// Not exposed by filetest, but so similiar in nature that it is stored here	WITHOUT_CLASSIFICATION	0.9999900829562435	WITHOUT_CLASSIFICATION	9.917043756484377E-6	IMPLEMENTATION
// We do both writable and writable_real through the same method because // in our java process effective and real userid will always be the same.	WITHOUT_CLASSIFICATION	0.9999989874351838	WITHOUT_CLASSIFICATION	1.012564816263142E-6	IMPLEMENTATION
// first try as directory	WITHOUT_CLASSIFICATION	0.9999975724298509	WITHOUT_CLASSIFICATION	2.4275701491702438E-6	IMPLEMENTATION
// next as regular file	WITHOUT_CLASSIFICATION	0.9999117782015441	WITHOUT_CLASSIFICATION	8.822179845585319E-5	IMPLEMENTATION
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9998260508239969	WITHOUT_CLASSIFICATION	1.7394917600314596E-4	IMPLEMENTATION
// NIO-based	WITHOUT_CLASSIFICATION	0.999598425807291	WITHOUT_CLASSIFICATION	4.015741927090063E-4	IMPLEMENTATION
// NIO-based	WITHOUT_CLASSIFICATION	0.999598425807291	WITHOUT_CLASSIFICATION	4.015741927090063E-4	IMPLEMENTATION
// Stream-based	WITHOUT_CLASSIFICATION	0.999598425807291	WITHOUT_CLASSIFICATION	4.015741927090063E-4	IMPLEMENTATION
// special constructor that accepts stream, not channel	WITHOUT_CLASSIFICATION	0.9939284728794626	WITHOUT_CLASSIFICATION	0.006071527120537463	IMPLEMENTATION
/*     * We use FILE versus IO to match T_FILE in MRI.     */	WITHOUT_CLASSIFICATION	0.9999993193329666	WITHOUT_CLASSIFICATION	6.806670334757131E-7	IMPLEMENTATION
// Constants for seek	WITHOUT_CLASSIFICATION	0.9999745484831698	WITHOUT_CLASSIFICATION	2.545151683017333E-5	IMPLEMENTATION
// confirm we're not reopening self's channel	WITHOUT_CLASSIFICATION	0.9979870693655063	WITHOUT_CLASSIFICATION	0.002012930634493773	IMPLEMENTATION
// check if we're a stdio IO, and ensure we're not badly mutilated	WITHOUT_CLASSIFICATION	0.999669581251896	WITHOUT_CLASSIFICATION	3.3041874810395587E-4	IMPLEMENTATION
// dup2 new fd into self to preserve fileno and references to it	WITHOUT_CLASSIFICATION	0.9999115493419354	WITHOUT_CLASSIFICATION	8.845065806464578E-5	IMPLEMENTATION
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999826715482464	WITHOUT_CLASSIFICATION	1.732845175360885E-5	IMPLEMENTATION
// re-register the descriptor	WITHOUT_CLASSIFICATION	0.9999289273005446	WITHOUT_CLASSIFICATION	7.107269945546016E-5	IMPLEMENTATION
// since we're not actually duping the incoming channel into our handler, we need to // copy the original sync behavior from the other handler	WITHOUT_CLASSIFICATION	0.9997358833710406	WITHOUT_CLASSIFICATION	2.641166289594548E-4	IMPLEMENTATION
// re-register	WITHOUT_CLASSIFICATION	0.999598425807291	WITHOUT_CLASSIFICATION	4.015741927090063E-4	IMPLEMENTATION
// A potentially previously close IO is being 'reopened'.	WITHOUT_CLASSIFICATION	0.999991250567542	WITHOUT_CLASSIFICATION	8.749432458038245E-6	IMPLEMENTATION
/*     * Ensure that separator is valid otherwise give it the default paragraph separator.     */	WITHOUT_CLASSIFICATION	0.9999965474763326	WITHOUT_CLASSIFICATION	3.4525236672840927E-6	IMPLEMENTATION
// loop until we see the nth separator char	WITHOUT_CLASSIFICATION	0.9999972477721897	WITHOUT_CLASSIFICATION	2.7522278102453642E-6	IMPLEMENTATION
// if we hit EOF or reached limit then we're done	WITHOUT_CLASSIFICATION	0.999973354374656	WITHOUT_CLASSIFICATION	2.6645625344082293E-5	IMPLEMENTATION
// this is for a range check, near as I can tell	WITHOUT_CLASSIFICATION	0.9999579892245708	WITHOUT_CLASSIFICATION	4.2010775429167294E-5	IMPLEMENTATION
// IO class methods.	WITHOUT_CLASSIFICATION	0.9998307538425143	WITHOUT_CLASSIFICATION	1.692461574857396E-4	IMPLEMENTATION
// use original modes	WITHOUT_CLASSIFICATION	0.9997032348395719	WITHOUT_CLASSIFICATION	2.967651604280877E-4	IMPLEMENTATION
// See if we already have this descriptor open. // If so then we can mostly share the handler (keep open // file, but possibly change the mode).	WITHOUT_CLASSIFICATION	0.9999991654793297	WITHOUT_CLASSIFICATION	8.345206702655024E-7	IMPLEMENTATION
// redundant, done above as well	WITHOUT_CLASSIFICATION	0.9999421120040658	WITHOUT_CLASSIFICATION	5.7887995934191315E-5	IMPLEMENTATION
// MRI behavior: swallow StandardErorrs	WITHOUT_CLASSIFICATION	0.9998851494270367	WITHOUT_CLASSIFICATION	1.148505729633649E-4	IMPLEMENTATION
// -1 == don't set permissions	WITHOUT_CLASSIFICATION	0.9999623969272542	WITHOUT_CLASSIFICATION	3.760307274585298E-5	IMPLEMENTATION
// isRetained=true	WITHOUT_CLASSIFICATION	0.999598425807291	WITHOUT_CLASSIFICATION	4.015741927090063E-4	IMPLEMENTATION
// This appears to be some windows-only mode.  On a java platform this is a no-op	WITHOUT_CLASSIFICATION	0.999973703483994	WITHOUT_CLASSIFICATION	2.629651600604776E-5	IMPLEMENTATION
// if not sync, we switch to write buffered mode	WITHOUT_CLASSIFICATION	0.9989323851598076	WITHOUT_CLASSIFICATION	0.0010676148401922885	IMPLEMENTATION
/*     * Throw bad file descriptor is we can not read on supplied descriptor.     */	WITHOUT_CLASSIFICATION	0.9997925640687209	WITHOUT_CLASSIFICATION	2.0743593127903515E-4	IMPLEMENTATION
//Everything written	WITHOUT_CLASSIFICATION	0.9984972400114749	WITHOUT_CLASSIFICATION	0.0015027599885251125	IMPLEMENTATION
//            return len - n;	WITHOUT_CLASSIFICATION	0.9999728160872274	WITHOUT_CLASSIFICATION	2.7183912772624676E-5	IMPLEMENTATION
// Claims conversion is done via 'to_s' in docs.	WITHOUT_CLASSIFICATION	0.9999960224820911	WITHOUT_CLASSIFICATION	3.977517908921814E-6	IMPLEMENTATION
// Of course this isn't particularly useful.	WITHOUT_CLASSIFICATION	0.9998622634352066	WITHOUT_CLASSIFICATION	1.3773656479351297E-4	IMPLEMENTATION
// Must be back on first line on rewind.	WITHOUT_CLASSIFICATION	0.9996931634278633	WITHOUT_CLASSIFICATION	3.0683657213672407E-4	IMPLEMENTATION
// Register the new descriptor	WITHOUT_CLASSIFICATION	0.9997798378391605	WITHOUT_CLASSIFICATION	2.2016216083942908E-4	IMPLEMENTATION
// cleanup, raising errors if any	WITHOUT_CLASSIFICATION	0.9999538699363646	WITHOUT_CLASSIFICATION	4.613006363531524E-5	IMPLEMENTATION
// hmmmm	WITHOUT_CLASSIFICATION	0.9999909584718885	WITHOUT_CLASSIFICATION	9.041528111615727E-6	IMPLEMENTATION
// I believe Ruby bails out with a "bug" if closing fails	WITHOUT_CLASSIFICATION	0.9999194587968565	WITHOUT_CLASSIFICATION	8.0541203143385E-5	IMPLEMENTATION
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec. // And why the hell does webrick pass this in as a first argument!!!!!	WITHOUT_CLASSIFICATION	0.99999976341058	WITHOUT_CLASSIFICATION	2.3658941996749587E-7	IMPLEMENTATION
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec.	WITHOUT_CLASSIFICATION	0.9999985372736433	WITHOUT_CLASSIFICATION	1.4627263566320919E-6	IMPLEMENTATION
// Length to read	WITHOUT_CLASSIFICATION	0.999903545572436	WITHOUT_CLASSIFICATION	9.645442756391065E-5	IMPLEMENTATION
// String/Buffer to read it into	WITHOUT_CLASSIFICATION	0.999977081534178	WITHOUT_CLASSIFICATION	2.2918465822055967E-5	IMPLEMENTATION
// cryptic for the uninitiated...	WITHOUT_CLASSIFICATION	0.9999472543059963	WITHOUT_CLASSIFICATION	5.2745694003760876E-5	IMPLEMENTATION
// select until read is ready	WITHOUT_CLASSIFICATION	0.9999815690271299	WITHOUT_CLASSIFICATION	1.8430972870209046E-5	IMPLEMENTATION
//        ByteList buffer = null;	WITHOUT_CLASSIFICATION	0.9999158550628844	WITHOUT_CLASSIFICATION	8.414493711569034E-5	IMPLEMENTATION
//            buffer = str.getByteList();	WITHOUT_CLASSIFICATION	0.9999095594736174	WITHOUT_CLASSIFICATION	9.044052638253982E-5	IMPLEMENTATION
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999895333589598	WITHOUT_CLASSIFICATION	1.0466641040129654E-5	IMPLEMENTATION
/* rb: writable */	WITHOUT_CLASSIFICATION	0.9999264817012458	WITHOUT_CLASSIFICATION	7.351829875423047E-5	IMPLEMENTATION
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999895333589598	WITHOUT_CLASSIFICATION	1.0466641040129654E-5	IMPLEMENTATION
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999985732513709	WITHOUT_CLASSIFICATION	1.4267486290988214E-6	IMPLEMENTATION
// TODO: read into buffer using all the fread logic //        int read = openFile.getMainStream().fread(buffer);	WITHOUT_CLASSIFICATION	0.9022936797647713	WITHOUT_CLASSIFICATION	0.09770632023522875	IMPLEMENTATION
// truncate buffer string to zero, if provided	WITHOUT_CLASSIFICATION	0.9999995505068325	WITHOUT_CLASSIFICATION	4.494931675402059E-7	IMPLEMENTATION
// TODO: READ_CHECK from MRI	WITHOUT_CLASSIFICATION	0.8303301550503556	WITHOUT_CLASSIFICATION	0.16966984494964443	IMPLEMENTATION
/* class methods for IO */	WITHOUT_CLASSIFICATION	0.9999979119001616	WITHOUT_CLASSIFICATION	2.0880998383436828E-6	IMPLEMENTATION
// save blocking state	WITHOUT_CLASSIFICATION	0.9999822264467744	WITHOUT_CLASSIFICATION	1.7773553225630102E-5	IMPLEMENTATION
// write	WITHOUT_CLASSIFICATION	0.9999916433666014	WITHOUT_CLASSIFICATION	8.35663339862315E-6	IMPLEMENTATION
// Java's select doesn't do anything about this, so we leave it be.	WITHOUT_CLASSIFICATION	0.9999086044790649	WITHOUT_CLASSIFICATION	9.139552093508562E-5	IMPLEMENTATION
// make all sockets blocking as configured again // close unregisters all channels, so we can safely reset blocking modes	WITHOUT_CLASSIFICATION	0.9999447555394694	WITHOUT_CLASSIFICATION	5.524446053065953E-5	IMPLEMENTATION
// FIXME: process options	WITHOUT_CLASSIFICATION	0.9864302765510595	WITHOUT_CLASSIFICATION	0.013569723448940417	IMPLEMENTATION
// Enebo: annotation processing forced me to do pangea method here...	WITHOUT_CLASSIFICATION	0.9999438183077386	WITHOUT_CLASSIFICATION	5.618169226143073E-5	IMPLEMENTATION
// NIO based pipe	WITHOUT_CLASSIFICATION	0.9996617189827175	WITHOUT_CLASSIFICATION	3.382810172825615E-4	IMPLEMENTATION
// not using remove(Object) here to avoid the equals() call	WITHOUT_CLASSIFICATION	0.9909928102403064	WITHOUT_CLASSIFICATION	0.009007189759693552	IMPLEMENTATION
// raise will also wake the thread from selection	WITHOUT_CLASSIFICATION	0.9999892233704155	WITHOUT_CLASSIFICATION	1.0776629584470117E-5	IMPLEMENTATION
/* may need to handle ENC_CODERANGE_BROKEN */	WITHOUT_CLASSIFICATION	0.9990603594472435	WITHOUT_CLASSIFICATION	9.396405527564663E-4	IMPLEMENTATION
// TODO: rb_usascii_str_new2	WITHOUT_CLASSIFICATION	0.5573647462409577	IMPLEMENTATION	0.44263525375904234	WITHOUT_CLASSIFICATION
// If we know what method was being called, strip everything // before the call. This hides the JRuby and reflection internals.	WITHOUT_CLASSIFICATION	0.9850051670079661	WITHOUT_CLASSIFICATION	0.014994832992033977	IMPLEMENTATION
// The class of this object	WITHOUT_CLASSIFICATION	0.999987590282875	WITHOUT_CLASSIFICATION	1.240971712498113E-5	IMPLEMENTATION
// zeroed by jvm	WITHOUT_CLASSIFICATION	0.9998297590428221	WITHOUT_CLASSIFICATION	1.7024095717801303E-4	IMPLEMENTATION
//objectClass.defineAnnotatedMethods(BasicObjectMethods.class);	WITHOUT_CLASSIFICATION	0.9995736327784496	WITHOUT_CLASSIFICATION	4.263672215503884E-4	IMPLEMENTATION
// JRUBY-4113: callers should not call setTaint on immediate objects	WITHOUT_CLASSIFICATION	0.9307395941303096	WITHOUT_CLASSIFICATION	0.06926040586969041	IMPLEMENTATION
// rb_class_boot	WITHOUT_CLASSIFICATION	0.999598425807291	WITHOUT_CLASSIFICATION	4.015741927090063E-4	IMPLEMENTATION
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999881958820876	WITHOUT_CLASSIFICATION	1.1804117912266345E-5	IMPLEMENTATION
// 1.9 rb_check_to_integer	WITHOUT_CLASSIFICATION	0.999935505377077	WITHOUT_CLASSIFICATION	6.449462292307057E-5	IMPLEMENTATION
// for interface impls	WITHOUT_CLASSIFICATION	0.9999894886477618	WITHOUT_CLASSIFICATION	1.051135223813489E-5	IMPLEMENTATION
// We're cloning ourselves, so we know the result should be a RubyObject	WITHOUT_CLASSIFICATION	0.9996718268057807	WITHOUT_CLASSIFICATION	3.2817319421924997E-4	IMPLEMENTATION
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999912609540548	WITHOUT_CLASSIFICATION	8.739045945169206E-6	IMPLEMENTATION
// can't use -v and stdin	WITHOUT_CLASSIFICATION	0.9998537848581662	WITHOUT_CLASSIFICATION	1.4621514183375432E-4	IMPLEMENTATION
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999223869959047	WITHOUT_CLASSIFICATION	7.761300409530537E-5	IMPLEMENTATION
// Equivalent of Data_Get_Struct // This will first check that the object in question is actually a T_DATA equivalent.	WITHOUT_CLASSIFICATION	0.9999968964035318	WITHOUT_CLASSIFICATION	3.1035964681761423E-6	IMPLEMENTATION
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9998833414877275	WITHOUT_CLASSIFICATION	1.1665851227239598E-4	IMPLEMENTATION
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9998833414877275	WITHOUT_CLASSIFICATION	1.1665851227239598E-4	IMPLEMENTATION
// // INSTANCE VARIABLE API METHODS //	WITHOUT_CLASSIFICATION	0.999902320658266	WITHOUT_CLASSIFICATION	9.767934173395595E-5	IMPLEMENTATION
// Struct methods	WITHOUT_CLASSIFICATION	0.9996187594241356	WITHOUT_CLASSIFICATION	3.812405758643859E-4	IMPLEMENTATION
//runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);	WITHOUT_CLASSIFICATION	0.999392695664515	WITHOUT_CLASSIFICATION	6.073043354848576E-4	IMPLEMENTATION
// define access methods.	WITHOUT_CLASSIFICATION	0.9999758967947192	WITHOUT_CLASSIFICATION	2.4103205280820218E-5	IMPLEMENTATION
// if we are storing a name as well, index is one too high for values	WITHOUT_CLASSIFICATION	0.9999999464409572	WITHOUT_CLASSIFICATION	5.355904280742627E-8	IMPLEMENTATION
// Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999968259115822	WITHOUT_CLASSIFICATION	3.1740884177373914E-6	IMPLEMENTATION
// For binding purposes on the newly created struct types	WITHOUT_CLASSIFICATION	0.999660734011024	WITHOUT_CLASSIFICATION	3.392659889759869E-4	IMPLEMENTATION
// OBJ_INFECT        	WITHOUT_CLASSIFICATION	0.999935505377077	WITHOUT_CLASSIFICATION	6.449462292307057E-5	IMPLEMENTATION
// These call* assume ThreadContext = receiver.getRuntime().getCurrentContext()	WITHOUT_CLASSIFICATION	0.9999134591381929	WITHOUT_CLASSIFICATION	8.654086180709957E-5	IMPLEMENTATION
// Execute iterateMethod again.	WITHOUT_CLASSIFICATION	0.9999298476681217	WITHOUT_CLASSIFICATION	7.015233187832379E-5	IMPLEMENTATION
/*     * @param nv number of times to cycle or -1 to cycle indefinitely     */	WITHOUT_CLASSIFICATION	0.9999993998522401	WITHOUT_CLASSIFICATION	6.001477599931418E-7	IMPLEMENTATION
// Atomic ?	WITHOUT_CLASSIFICATION	0.9998101004836206	WITHOUT_CLASSIFICATION	1.8989951637939795E-4	IMPLEMENTATION
// Atomic ?	WITHOUT_CLASSIFICATION	0.9998101004836206	WITHOUT_CLASSIFICATION	1.8989951637939795E-4	IMPLEMENTATION
// MUST NOT be used across threads	WITHOUT_CLASSIFICATION	0.999975659438305	WITHOUT_CLASSIFICATION	2.43405616949176E-5	IMPLEMENTATION
// superClass may be null.	WITHOUT_CLASSIFICATION	0.9999793255929508	WITHOUT_CLASSIFICATION	2.0674407049287074E-5	IMPLEMENTATION
// Containing class...The parent of Object is null. Object should always be last in chain.	WITHOUT_CLASSIFICATION	0.999999049327012	WITHOUT_CLASSIFICATION	9.506729880178152E-7	IMPLEMENTATION
// ClassId is the name of the class/module sans where it is located. // If it is null, then it an anonymous class.	WITHOUT_CLASSIFICATION	0.9999930657140023	WITHOUT_CLASSIFICATION	6.934285997846711E-6	IMPLEMENTATION
// ClassProviders return Java class/module (in #defineOrGetClassUnder and // #defineOrGetModuleUnder) when class/module is opened using colon syntax. 	WITHOUT_CLASSIFICATION	0.9999951337669799	WITHOUT_CLASSIFICATION	4.866233020088447E-6	IMPLEMENTATION
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999967219723019	WITHOUT_CLASSIFICATION	3.278027697961311E-6	IMPLEMENTATION
// Make sure the module we include does not already exist	WITHOUT_CLASSIFICATION	0.990644980559314	WITHOUT_CLASSIFICATION	0.009355019440685852	IMPLEMENTATION
// MRI checks all types first:	WITHOUT_CLASSIFICATION	0.9999366679378856	WITHOUT_CLASSIFICATION	6.333206211433612E-5	IMPLEMENTATION
// we need full traces, use default (slow) populator	WITHOUT_CLASSIFICATION	0.9994974335296748	WITHOUT_CLASSIFICATION	5.025664703252186E-4	IMPLEMENTATION
// module/singleton methods are all defined public	WITHOUT_CLASSIFICATION	0.9999922103079841	WITHOUT_CLASSIFICATION	7.789692015840869E-6	IMPLEMENTATION
// See if module is in chain...Cannot match against itself so start at superClass.	WITHOUT_CLASSIFICATION	0.9999997987699251	WITHOUT_CLASSIFICATION	2.0123007503041292E-7	IMPLEMENTATION
// We can safely reference methods here instead of doing getMethods() since if we // are adding we are not using a IncludedModuleWrapper.	WITHOUT_CLASSIFICATION	0.9998325407984613	WITHOUT_CLASSIFICATION	1.6745920153876095E-4	IMPLEMENTATION
// we grab serial number first; the worst that will happen is we cache a later // update with an earlier serial number, which would just flush anyway	WITHOUT_CLASSIFICATION	0.9999731361398906	WITHOUT_CLASSIFICATION	2.686386010934632E-5	IMPLEMENTATION
// update all hierarchies into which this module has been included	WITHOUT_CLASSIFICATION	0.9999366905209315	WITHOUT_CLASSIFICATION	6.3309479068555E-5	IMPLEMENTATION
// This method is intended only for defining new classes in Ruby code, // so it uses the allocator of the specified superclass or default to // the Object allocator. It should NOT be used to define classes that require a native allocator.	WITHOUT_CLASSIFICATION	0.9999999125635004	WITHOUT_CLASSIFICATION	8.743649961687105E-8	IMPLEMENTATION
// need to skip IncludedModuleWrappers	WITHOUT_CLASSIFICATION	0.999684945023914	WITHOUT_CLASSIFICATION	3.150549760859083E-4	IMPLEMENTATION
// superClazz = null;	WITHOUT_CLASSIFICATION	0.9999412150600193	WITHOUT_CLASSIFICATION	5.8784939980634404E-5	IMPLEMENTATION
// reopen a java class	WITHOUT_CLASSIFICATION	0.999980549766666	WITHOUT_CLASSIFICATION	1.9450233334001977E-5	IMPLEMENTATION
// This method is intended only for defining new modules in Ruby code	WITHOUT_CLASSIFICATION	0.9999968770648325	WITHOUT_CLASSIFICATION	3.122935167424823E-6	IMPLEMENTATION
// reopen a java module	WITHOUT_CLASSIFICATION	0.9999550122970464	WITHOUT_CLASSIFICATION	4.4987702953604195E-5	IMPLEMENTATION
//FIXME warning	WITHOUT_CLASSIFICATION	0.998488234293022	WITHOUT_CLASSIFICATION	0.0015117657069779742	IMPLEMENTATION
// FIXME warning	WITHOUT_CLASSIFICATION	0.9946309879121437	WITHOUT_CLASSIFICATION	0.005369012087856295	IMPLEMENTATION
// a normal block passed to define_method changes to do arity checking; make it a lambda	WITHOUT_CLASSIFICATION	0.9937858564429888	WITHOUT_CLASSIFICATION	0.006214143557011274	IMPLEMENTATION
// for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope	WITHOUT_CLASSIFICATION	0.9999960822499058	WITHOUT_CLASSIFICATION	3.9177500942603115E-6	IMPLEMENTATION
// just using required is broken...but no more broken than before zsuper refactoring	WITHOUT_CLASSIFICATION	0.9999691905493124	WITHOUT_CLASSIFICATION	3.080945068754123E-5	IMPLEMENTATION
// class and module bodies default to public, so make the block's visibility public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999863517730897	WITHOUT_CLASSIFICATION	1.3648226910362669E-5	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.999999859170865	WITHOUT_CLASSIFICATION	1.408291349818069E-7	IMPLEMENTATION
// MRI error message says Class, even though Module is ok 	WITHOUT_CLASSIFICATION	0.999725521786309	WITHOUT_CLASSIFICATION	2.744782136910106E-4	IMPLEMENTATION
// scan class hierarchy for module	WITHOUT_CLASSIFICATION	0.9999836710975366	WITHOUT_CLASSIFICATION	1.6328902463392702E-5	IMPLEMENTATION
/* Module class methods */	WITHOUT_CLASSIFICATION	0.9999942579908315	WITHOUT_CLASSIFICATION	5.742009168510728E-6	IMPLEMENTATION
// Note: we change current frames visibility here because the methods which call // this method are all "fast" (e.g. they do not created their own frame).	WITHOUT_CLASSIFICATION	0.9997977790756217	WITHOUT_CLASSIFICATION	2.0222092437824867E-4	IMPLEMENTATION
// next in hierarchy is an included version of the module we're attempting, // so we skip including it	WITHOUT_CLASSIFICATION	0.9999969301227594	WITHOUT_CLASSIFICATION	3.0698772406858558E-6	IMPLEMENTATION
// if we haven't encountered a real superclass, use the found module as the new inclusion point	WITHOUT_CLASSIFICATION	0.9999508712703509	WITHOUT_CLASSIFICATION	4.9128729649171684E-5	IMPLEMENTATION
// build a list of all modules to consider for inclusion	WITHOUT_CLASSIFICATION	0.9999829280877911	WITHOUT_CLASSIFICATION	1.707191220893898E-5	IMPLEMENTATION
// if the insertion point is a class, update subclass lists	WITHOUT_CLASSIFICATION	0.9999992982353094	WITHOUT_CLASSIFICATION	7.01764690624041E-7	IMPLEMENTATION
// if there's a non-null superclass, we're including into a normal class hierarchy; // update subclass relationships to avoid stale parent/child relationships	WITHOUT_CLASSIFICATION	0.9999957276459046	WITHOUT_CLASSIFICATION	4.272354095320753E-6	IMPLEMENTATION
// ////////////////// CLASS VARIABLE RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9998948269711269	WITHOUT_CLASSIFICATION	1.0517302887311438E-4	IMPLEMENTATION
// ////////////////// CONSTANT RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9998929103099369	WITHOUT_CLASSIFICATION	1.0708969006310482E-4	IMPLEMENTATION
// Note: includes part of fix for JRUBY-1339	WITHOUT_CLASSIFICATION	0.9999826984053333	WITHOUT_CLASSIFICATION	1.730159466667785E-5	IMPLEMENTATION
// ////////////////// CLASS VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999119377332191	WITHOUT_CLASSIFICATION	8.806226678097878E-5	IMPLEMENTATION
// Wrong Parameter ?	WITHOUT_CLASSIFICATION	0.9998148208170867	WITHOUT_CLASSIFICATION	1.851791829132425E-4	IMPLEMENTATION
// not actually called anywhere (all known uses call the fast version)	WITHOUT_CLASSIFICATION	0.9987501511417597	WITHOUT_CLASSIFICATION	0.001249848858240236	IMPLEMENTATION
// Not that is loaded loop around to resolve it next pass	WITHOUT_CLASSIFICATION	0.9994923663520007	WITHOUT_CLASSIFICATION	5.076336479993403E-4	IMPLEMENTATION
// if adding a module under a constant name, set that module's basename to the constant name	WITHOUT_CLASSIFICATION	0.9997209554767618	WITHOUT_CLASSIFICATION	2.790445232383179E-4	IMPLEMENTATION
// Fix for JRUBY-1339 - search hierarchy for constant	WITHOUT_CLASSIFICATION	0.9997457570446061	WITHOUT_CLASSIFICATION	2.542429553938691E-4	IMPLEMENTATION
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999876312579825	WITHOUT_CLASSIFICATION	1.2368742017536954E-5	IMPLEMENTATION
// removes and returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999927592752763	WITHOUT_CLASSIFICATION	7.240724723610452E-6	IMPLEMENTATION
// we can't rename a file while it's open in windows	WITHOUT_CLASSIFICATION	0.9999891045869004	WITHOUT_CLASSIFICATION	1.089541309960137E-5	IMPLEMENTATION
//reopen	WITHOUT_CLASSIFICATION	0.9999670845889459	WITHOUT_CLASSIFICATION	3.291541105411755E-5	IMPLEMENTATION
// ARGF methods	WITHOUT_CLASSIFICATION	0.9996187594241356	WITHOUT_CLASSIFICATION	3.812405758643859E-4	IMPLEMENTATION
//         data.currentFile.callMethod(context, "lineno=", line);	WITHOUT_CLASSIFICATION	0.9998941815905964	WITHOUT_CLASSIFICATION	1.0581840940371808E-4	IMPLEMENTATION
// one optional, one required args	WITHOUT_CLASSIFICATION	0.9996258672893594	WITHOUT_CLASSIFICATION	3.741327106405953E-4	IMPLEMENTATION
// one optional and no required args	WITHOUT_CLASSIFICATION	0.9998365213930571	WITHOUT_CLASSIFICATION	1.634786069429495E-4	IMPLEMENTATION
// try to get errno value out of the class	WITHOUT_CLASSIFICATION	0.999998822429459	WITHOUT_CLASSIFICATION	1.1775705410148573E-6	IMPLEMENTATION
// we got a valid errno value	WITHOUT_CLASSIFICATION	0.9999945409328604	WITHOUT_CLASSIFICATION	5.4590671394471244E-6	IMPLEMENTATION
// Ensure we're not running on GCJ, since it's not supported and leads to weird errors	WITHOUT_CLASSIFICATION	0.9981806823211884	WITHOUT_CLASSIFICATION	0.0018193176788114953	IMPLEMENTATION
// print out as a nice Ruby backtrace	WITHOUT_CLASSIFICATION	0.9999916713119493	WITHOUT_CLASSIFICATION	8.328688050686414E-6	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9994473568077583	WITHOUT_CLASSIFICATION	5.526431922416187E-4	IMPLEMENTATION
// set thread context JRuby classloader here, for the main thread	WITHOUT_CLASSIFICATION	0.9998407898384158	WITHOUT_CLASSIFICATION	1.592101615841452E-4	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999527027169385	WITHOUT_CLASSIFICATION	4.729728306153712E-5	IMPLEMENTATION
// no script to run, return success below	WITHOUT_CLASSIFICATION	0.999988728527546	WITHOUT_CLASSIFICATION	1.12714724540381E-5	IMPLEMENTATION
// Skip /usr/bin/env if it's first	WITHOUT_CLASSIFICATION	0.999887628452209	WITHOUT_CLASSIFICATION	1.1237154779092606E-4	IMPLEMENTATION
// Skip any assignments if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999987287442816	WITHOUT_CLASSIFICATION	1.2712557183592761E-6	IMPLEMENTATION
// Skip any commandline args if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999988019587002	WITHOUT_CLASSIFICATION	1.1980412998219267E-6	IMPLEMENTATION
// ignore error	WITHOUT_CLASSIFICATION	0.9985054127770112	WITHOUT_CLASSIFICATION	0.0014945872229888565	IMPLEMENTATION
// ////////////////// COMMON CONSTANT / CVAR METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999760389968817	WITHOUT_CLASSIFICATION	2.3961003118190537E-5	IMPLEMENTATION
// ////////////////// INTERNAL MODULE VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999103328686273	WITHOUT_CLASSIFICATION	8.966713137260391E-5	IMPLEMENTATION
// ////////////////// LOW-LEVEL CONSTANT INTERFACE //////////////// // // fetch/store/list constants for this module //	WITHOUT_CLASSIFICATION	0.999967733653438	WITHOUT_CLASSIFICATION	3.2266346561977045E-5	IMPLEMENTATION
// odd	WITHOUT_CLASSIFICATION	0.9999910191444886	WITHOUT_CLASSIFICATION	8.98085551133478E-6	IMPLEMENTATION
// JRubyClient	WITHOUT_CLASSIFICATION	0.999598425807291	WITHOUT_CLASSIFICATION	4.015741927090063E-4	IMPLEMENTATION
/*     * x = mantissa * 2 ** exponent     *     * Where mantissa is in the range of [.5, 1)     *     */	WITHOUT_CLASSIFICATION	0.999999913902077	WITHOUT_CLASSIFICATION	8.609792303962696E-8	IMPLEMENTATION
// Make mantissa same sign so we only have one code path.	WITHOUT_CLASSIFICATION	0.9999285382571919	WITHOUT_CLASSIFICATION	7.14617428081375E-5	IMPLEMENTATION
// Increase value to hit lower range.	WITHOUT_CLASSIFICATION	0.9999860988345627	WITHOUT_CLASSIFICATION	1.39011654373094E-5	IMPLEMENTATION
/*     * r = x * 2 ** y     */	WITHOUT_CLASSIFICATION	0.9999989655507615	WITHOUT_CLASSIFICATION	1.0344492384197716E-6	IMPLEMENTATION
/*  0! */	WITHOUT_CLASSIFICATION	0.9999985053543369	WITHOUT_CLASSIFICATION	1.494645663129812E-6	IMPLEMENTATION
/*  1! */	WITHOUT_CLASSIFICATION	0.9999985053543369	WITHOUT_CLASSIFICATION	1.494645663129812E-6	IMPLEMENTATION
/*  2! */	WITHOUT_CLASSIFICATION	0.9999985053543369	WITHOUT_CLASSIFICATION	1.494645663129812E-6	IMPLEMENTATION
/*  3! */	WITHOUT_CLASSIFICATION	0.9999985053543369	WITHOUT_CLASSIFICATION	1.494645663129812E-6	IMPLEMENTATION
/*  4! */	WITHOUT_CLASSIFICATION	0.9999985053543369	WITHOUT_CLASSIFICATION	1.494645663129812E-6	IMPLEMENTATION
/*  5! */	WITHOUT_CLASSIFICATION	0.9999985053543369	WITHOUT_CLASSIFICATION	1.494645663129812E-6	IMPLEMENTATION
/*  6! */	WITHOUT_CLASSIFICATION	0.9999985053543369	WITHOUT_CLASSIFICATION	1.494645663129812E-6	IMPLEMENTATION
/*  7! */	WITHOUT_CLASSIFICATION	0.9999985053543369	WITHOUT_CLASSIFICATION	1.494645663129812E-6	IMPLEMENTATION
/*  8! */	WITHOUT_CLASSIFICATION	0.9999985053543369	WITHOUT_CLASSIFICATION	1.494645663129812E-6	IMPLEMENTATION
/*  9! */	WITHOUT_CLASSIFICATION	0.9999985053543369	WITHOUT_CLASSIFICATION	1.494645663129812E-6	IMPLEMENTATION
/* 11! */	WITHOUT_CLASSIFICATION	0.9999983452507534	WITHOUT_CLASSIFICATION	1.6547492466209219E-6	IMPLEMENTATION
/* 12! */	WITHOUT_CLASSIFICATION	0.9999983452507534	WITHOUT_CLASSIFICATION	1.6547492466209219E-6	IMPLEMENTATION
/* 13! */	WITHOUT_CLASSIFICATION	0.9999983452507534	WITHOUT_CLASSIFICATION	1.6547492466209219E-6	IMPLEMENTATION
/* 15! */	WITHOUT_CLASSIFICATION	0.9999983452507534	WITHOUT_CLASSIFICATION	1.6547492466209219E-6	IMPLEMENTATION
/* 16! */	WITHOUT_CLASSIFICATION	0.9999983452507534	WITHOUT_CLASSIFICATION	1.6547492466209219E-6	IMPLEMENTATION
/* 17! */	WITHOUT_CLASSIFICATION	0.9999983452507534	WITHOUT_CLASSIFICATION	1.6547492466209219E-6	IMPLEMENTATION
/* 19! */	WITHOUT_CLASSIFICATION	0.9999983452507534	WITHOUT_CLASSIFICATION	1.6547492466209219E-6	IMPLEMENTATION
/* 20! */	WITHOUT_CLASSIFICATION	0.9999983452507534	WITHOUT_CLASSIFICATION	1.6547492466209219E-6	IMPLEMENTATION
/* 21! */	WITHOUT_CLASSIFICATION	0.9999983452507534	WITHOUT_CLASSIFICATION	1.6547492466209219E-6	IMPLEMENTATION
// Static constants	WITHOUT_CLASSIFICATION	0.9998792301080283	WITHOUT_CLASSIFICATION	1.2076989197169519E-4	IMPLEMENTATION
// Clean-up string representation so that it could be understood // by Java's BigDecimal. Not terribly efficient for now. // 1. MRI allows d and D as exponent separators	WITHOUT_CLASSIFICATION	0.9999963794959233	WITHOUT_CLASSIFICATION	3.620504076661935E-6	IMPLEMENTATION
// 2. MRI allows underscores anywhere	WITHOUT_CLASSIFICATION	0.9999065918808384	WITHOUT_CLASSIFICATION	9.340811916155169E-5	IMPLEMENTATION
// 3. MRI ignores the trailing junk	WITHOUT_CLASSIFICATION	0.9998535661045865	WITHOUT_CLASSIFICATION	1.464338954134238E-4	IMPLEMENTATION
// MRI behavior: -0 and +0 are two different things	WITHOUT_CLASSIFICATION	0.999885639605498	WITHOUT_CLASSIFICATION	1.1436039450190948E-4	IMPLEMENTATION
// Java and MRI definitions of modulo are different.	WITHOUT_CLASSIFICATION	0.9999933955086289	WITHOUT_CLASSIFICATION	6.604491371117127E-6	IMPLEMENTATION
// Java and MRI definitions of remainder are the same.	WITHOUT_CLASSIFICATION	0.9999853835595536	WITHOUT_CLASSIFICATION	1.461644044640033E-5	IMPLEMENTATION
// Note: MRI has a very non-trivial way of calculating the precision, // so we use very simple approximation here:	WITHOUT_CLASSIFICATION	0.9997769447545529	WITHOUT_CLASSIFICATION	2.2305524544703203E-4	IMPLEMENTATION
// Iteration variables, for the square root x and the reciprocal v // initial x:  x0 ~ sqrt() // initial v:  v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999884525135465	WITHOUT_CLASSIFICATION	1.154748645350844E-5	IMPLEMENTATION
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9995200491054733	WITHOUT_CLASSIFICATION	4.7995089452666583E-4	IMPLEMENTATION
// TODO: why this: .setResult();	WITHOUT_CLASSIFICATION	0.9444067663843347	IMPLEMENTATION	0.055593233615665184	WITHOUT_CLASSIFICATION
// integer division	WITHOUT_CLASSIFICATION	0.9996107947901821	WITHOUT_CLASSIFICATION	3.892052098179024E-4	IMPLEMENTATION
// MRI behavior: "If digits is 0, the result is the same as the / operator."	WITHOUT_CLASSIFICATION	0.9999992587783127	WITHOUT_CLASSIFICATION	7.41221687177939E-7	IMPLEMENTATION
// rounding neccessary	WITHOUT_CLASSIFICATION	0.999935537181035	WITHOUT_CLASSIFICATION	6.44628189649343E-5	IMPLEMENTATION
// rounding neccessary	WITHOUT_CLASSIFICATION	0.999935537181035	WITHOUT_CLASSIFICATION	6.44628189649343E-5	IMPLEMENTATION
// Java and MRI definitions of divmod are different.        	WITHOUT_CLASSIFICATION	0.9999933955086289	WITHOUT_CLASSIFICATION	6.604491371117127E-6	IMPLEMENTATION
// JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it	WITHOUT_CLASSIFICATION	0.9973163497311961	WITHOUT_CLASSIFICATION	0.0026836502688038994	IMPLEMENTATION
// shift the decimal point just to the right of the digit to be rounded to (divide by 10**(abs(scale))) // -1 -> 10's digit, -2 -> 100's digit, etc.	WITHOUT_CLASSIFICATION	0.999999507025624	WITHOUT_CLASSIFICATION	4.929743759476738E-7	IMPLEMENTATION
// ...round to that digit	WITHOUT_CLASSIFICATION	0.9999019855423985	WITHOUT_CLASSIFICATION	9.801445760157058E-5	IMPLEMENTATION
// ...and shift the result back to the left (multiply by 10**(abs(scale)))	WITHOUT_CLASSIFICATION	0.9999707497145948	WITHOUT_CLASSIFICATION	2.9250285405230695E-5	IMPLEMENTATION
//this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are	WITHOUT_CLASSIFICATION	0.9999239196408465	WITHOUT_CLASSIFICATION	7.608035915348788E-5	IMPLEMENTATION
// sign	WITHOUT_CLASSIFICATION	0.9999921626454519	WITHOUT_CLASSIFICATION	7.837354548157031E-6	IMPLEMENTATION
// significant digits and exponent	WITHOUT_CLASSIFICATION	0.9999390607799947	WITHOUT_CLASSIFICATION	6.093922000523121E-5	IMPLEMENTATION
// normalize the value	WITHOUT_CLASSIFICATION	0.9999855480613105	WITHOUT_CLASSIFICATION	1.4451938689522727E-5	IMPLEMENTATION
// base	WITHOUT_CLASSIFICATION	0.9999960252525998	WITHOUT_CLASSIFICATION	3.974747400115127E-6	IMPLEMENTATION
// NOTE: MRI's sqrt precision is limited by 100, // but we allow values more than 100.	WITHOUT_CLASSIFICATION	0.9999921076903383	WITHOUT_CLASSIFICATION	7.892309661754838E-6	IMPLEMENTATION
// just in case, add a bit of extra precision	WITHOUT_CLASSIFICATION	0.9999990550043735	WITHOUT_CLASSIFICATION	9.449956264665262E-7	IMPLEMENTATION
// eh?!	WITHOUT_CLASSIFICATION	0.9999909584718885	WITHOUT_CLASSIFICATION	9.041528111615727E-6	IMPLEMENTATION
// Note: #fix has only no-arg form, but truncate allows optional parameter.	WITHOUT_CLASSIFICATION	0.9999950267783408	WITHOUT_CLASSIFICATION	4.973221659124005E-6	IMPLEMENTATION
// General number and precision checking	WITHOUT_CLASSIFICATION	0.9999006537264991	WITHOUT_CLASSIFICATION	9.934627350096082E-5	IMPLEMENTATION
// the requested precision	WITHOUT_CLASSIFICATION	0.9999608376128573	WITHOUT_CLASSIFICATION	3.9162387142625414E-5	IMPLEMENTATION
// Proc class	WITHOUT_CLASSIFICATION	0.9997941958799493	WITHOUT_CLASSIFICATION	2.0580412005075384E-4	IMPLEMENTATION
//.append("  -x[directory]   strip off text before #!ruby line and perhaps cd to directory\n")	WITHOUT_CLASSIFICATION	0.9999565174508486	WITHOUT_CLASSIFICATION	4.3482549151409216E-5	IMPLEMENTATION
// even shift.. // ..floors to 62 or 63 bit BigInteger	WITHOUT_CLASSIFICATION	0.9999486223116872	WITHOUT_CLASSIFICATION	5.1377688312833155E-5	IMPLEMENTATION
// 5 -> 2, -5 -> -3 need half a scale more..	WITHOUT_CLASSIFICATION	0.999959021799588	WITHOUT_CLASSIFICATION	4.0978200412131124E-5	IMPLEMENTATION
// ..where 100 -> 10 shifts the scale	WITHOUT_CLASSIFICATION	0.9999830887669631	WITHOUT_CLASSIFICATION	1.691123303690856E-5	IMPLEMENTATION
// Initial x - use double root - multiply by halfBack to unshift - set new scale	WITHOUT_CLASSIFICATION	0.999995655453972	WITHOUT_CLASSIFICATION	4.3445460280780754E-6	IMPLEMENTATION
// x0 ~ sqrt()	WITHOUT_CLASSIFICATION	0.9996012513866412	WITHOUT_CLASSIFICATION	3.9874861335868506E-4	IMPLEMENTATION
// for prec 15 root x0 must surely be OK // return small prec roots without iterations	WITHOUT_CLASSIFICATION	0.9999657617237904	WITHOUT_CLASSIFICATION	3.42382762096428E-5	IMPLEMENTATION
// Initial v - the reciprocal // v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9998945903229762	WITHOUT_CLASSIFICATION	1.0540967702385039E-4	IMPLEMENTATION
// Collect iteration precisions beforehand	WITHOUT_CLASSIFICATION	0.9998910378475571	WITHOUT_CLASSIFICATION	1.0896215244297981E-4	IMPLEMENTATION
// assume nInit = 16 <= prec	WITHOUT_CLASSIFICATION	0.9999544466500475	WITHOUT_CLASSIFICATION	4.555334995238267E-5	IMPLEMENTATION
// The loop of "Square Root by Coupled Newton Iteration"	WITHOUT_CLASSIFICATION	0.9999897427616572	WITHOUT_CLASSIFICATION	1.025723834269975E-5	IMPLEMENTATION
// Increase precision - next iteration supplies n exact digits	WITHOUT_CLASSIFICATION	0.9998767702067108	WITHOUT_CLASSIFICATION	1.232297932891832E-4	IMPLEMENTATION
// Next x                                        // e = d - x^2	WITHOUT_CLASSIFICATION	0.9999527171274385	WITHOUT_CLASSIFICATION	4.728287256159371E-5	IMPLEMENTATION
// x += e*v     ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999809384863231	WITHOUT_CLASSIFICATION	1.9061513676926406E-5	IMPLEMENTATION
// root x is ready!	WITHOUT_CLASSIFICATION	0.9999006575182577	WITHOUT_CLASSIFICATION	9.934248174223683E-5	IMPLEMENTATION
// Next v                                        // g = 1 - 2*x*v	WITHOUT_CLASSIFICATION	0.9999349404726535	WITHOUT_CLASSIFICATION	6.505952734637783E-5	IMPLEMENTATION
// v += g*v     ~ 1/2/sqrt()	WITHOUT_CLASSIFICATION	0.999970325661611	WITHOUT_CLASSIFICATION	2.9674338388946744E-5	IMPLEMENTATION
// RubyBigdecimal	WITHOUT_CLASSIFICATION	0.999598425807291	WITHOUT_CLASSIFICATION	4.015741927090063E-4	IMPLEMENTATION
// c: bind_eval	WITHOUT_CLASSIFICATION	0.999598425807291	WITHOUT_CLASSIFICATION	4.015741927090063E-4	IMPLEMENTATION
/*  ================     *  Module Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999975286613793	WITHOUT_CLASSIFICATION	2.4713386206847455E-6	IMPLEMENTATION
// from CommandlineParser	WITHOUT_CLASSIFICATION	0.9999895333589598	WITHOUT_CLASSIFICATION	1.0466641040129654E-5	IMPLEMENTATION
// This property is a Boolean, to allow three values, so it can match MRI's nil, false and true	WITHOUT_CLASSIFICATION	0.999835472431858	WITHOUT_CLASSIFICATION	1.6452756814202977E-4	IMPLEMENTATION
// default ClassCache using jitMax as a soft upper bound	WITHOUT_CLASSIFICATION	0.9999956623507379	WITHOUT_CLASSIFICATION	4.337649262062747E-6	IMPLEMENTATION
// Until we get a little more solid on 1.9 support we will only run interpreted mode	WITHOUT_CLASSIFICATION	0.9945183833396567	WITHOUT_CLASSIFICATION	0.00548161666034336	IMPLEMENTATION
// Setting the loader needs to reset the class cache	WITHOUT_CLASSIFICATION	0.9878496176078835	WITHOUT_CLASSIFICATION	0.012150382392116604	IMPLEMENTATION
// try the normal property first	WITHOUT_CLASSIFICATION	0.9997887733776545	WITHOUT_CLASSIFICATION	2.112266223454779E-4	IMPLEMENTATION
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999425735621629	WITHOUT_CLASSIFICATION	5.7426437837158594E-5	IMPLEMENTATION
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999425735621629	WITHOUT_CLASSIFICATION	5.7426437837158594E-5	IMPLEMENTATION
// try loading from classloader resources	WITHOUT_CLASSIFICATION	0.9999889037181489	WITHOUT_CLASSIFICATION	1.1096281851149706E-5	IMPLEMENTATION
// otherwise fall back on system temp location	WITHOUT_CLASSIFICATION	0.9875848540648168	WITHOUT_CLASSIFICATION	0.012415145935183308	IMPLEMENTATION
// We require the home directory to be absolute	WITHOUT_CLASSIFICATION	0.999989831672831	WITHOUT_CLASSIFICATION	1.0168327169025265E-5	IMPLEMENTATION
//consume the file name	WITHOUT_CLASSIFICATION	0.9996182673216967	WITHOUT_CLASSIFICATION	3.817326783033226E-4	IMPLEMENTATION
// Specify something that can't separate	WITHOUT_CLASSIFICATION	0.9999813851091404	WITHOUT_CLASSIFICATION	1.8614890859687758E-5	IMPLEMENTATION
// try cwd first	WITHOUT_CLASSIFICATION	0.999585638727524	WITHOUT_CLASSIFICATION	4.143612724759632E-4	IMPLEMENTATION
// ruby interpreter compatibilty // Usage: ruby [switches] [--] [programfile] [arguments])	WITHOUT_CLASSIFICATION	0.9998852481701928	WITHOUT_CLASSIFICATION	1.1475182980719625E-4	IMPLEMENTATION
// KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 // if Ruby 2.0 encoding pragmas are implemented, this will need to change	WITHOUT_CLASSIFICATION	0.9999990221440864	WITHOUT_CLASSIFICATION	9.778559135366837E-7	IMPLEMENTATION
// @JRubyMethod(name = "complex?")	WITHOUT_CLASSIFICATION	0.9998852297643933	WITHOUT_CLASSIFICATION	1.1477023560663295E-4	IMPLEMENTATION
// @JRubyMethod(name = "exact?")	WITHOUT_CLASSIFICATION	0.9998852297643933	WITHOUT_CLASSIFICATION	1.1477023560663295E-4	IMPLEMENTATION
// @JRubyMethod(name = "inexact?")	WITHOUT_CLASSIFICATION	0.9998852297643933	WITHOUT_CLASSIFICATION	1.1477023560663295E-4	IMPLEMENTATION
// symbol string *must* be interned	WITHOUT_CLASSIFICATION	0.9999989638489273	WITHOUT_CLASSIFICATION	1.0361510727970606E-6	IMPLEMENTATION
//        assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";	WITHOUT_CLASSIFICATION	0.9518854738281777	WITHOUT_CLASSIFICATION	0.048114526171822304	IMPLEMENTATION
/* Symbol class methods.     *      */	WITHOUT_CLASSIFICATION	0.9999968442625048	WITHOUT_CLASSIFICATION	3.155737495309408E-6	IMPLEMENTATION
// TODO: 1.9 rb_enc_symname_p	WITHOUT_CLASSIFICATION	0.5573647462409577	IMPLEMENTATION	0.44263525375904234	WITHOUT_CLASSIFICATION
// This is needed to unpack stuff	WITHOUT_CLASSIFICATION	0.9129050417122359	WITHOUT_CLASSIFICATION	0.08709495828776409	IMPLEMENTATION
// we already confirmed above that length > 0	WITHOUT_CLASSIFICATION	0.9982788056746357	WITHOUT_CLASSIFICATION	0.0017211943253642426	IMPLEMENTATION
// *must* be power of 2!	WITHOUT_CLASSIFICATION	0.9999870557173557	WITHOUT_CLASSIFICATION	1.2944282644290692E-5	IMPLEMENTATION
// note all fields are final -- rehash creates new entries when necessary. // as documented in java.util.concurrent.ConcurrentHashMap.java, that will // statistically affect only a small percentage (< 20%) of entries for a given rehash.	WITHOUT_CLASSIFICATION	0.999999921197286	WITHOUT_CLASSIFICATION	7.88027140197915E-8	IMPLEMENTATION
//            assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9518854738281777	WITHOUT_CLASSIFICATION	0.048114526171822304	IMPLEMENTATION
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999733111012385	WITHOUT_CLASSIFICATION	2.6688898761505204E-5	IMPLEMENTATION
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999733111012385	WITHOUT_CLASSIFICATION	2.6688898761505204E-5	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.999598425807291	WITHOUT_CLASSIFICATION	4.015741927090063E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.999598425807291	WITHOUT_CLASSIFICATION	4.015741927090063E-4	IMPLEMENTATION
// backwards-compatibility, but threadsafe now	WITHOUT_CLASSIFICATION	0.999985515168922	WITHOUT_CLASSIFICATION	1.44848310780475E-5	IMPLEMENTATION
//  Single node on list	WITHOUT_CLASSIFICATION	0.9997249915625068	WITHOUT_CLASSIFICATION	2.7500843749318483E-4	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9998431097921018	WITHOUT_CLASSIFICATION	1.5689020789826265E-4	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999668202946644	WITHOUT_CLASSIFICATION	3.317970533560378E-5	IMPLEMENTATION
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9980401491885169	WITHOUT_CLASSIFICATION	0.0019598508114830795	IMPLEMENTATION
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.99933704543079	WITHOUT_CLASSIFICATION	6.629545692098996E-4	IMPLEMENTATION
// not so backwards-compatible here, but no one should have been // calling this anyway.	WITHOUT_CLASSIFICATION	0.9989418015774644	WITHOUT_CLASSIFICATION	0.0010581984225357165	IMPLEMENTATION
// Profile	WITHOUT_CLASSIFICATION	0.99999102914793	WITHOUT_CLASSIFICATION	8.97085207003375E-6	IMPLEMENTATION
//static private final String TRANSLIT = "//translit";	WITHOUT_CLASSIFICATION	0.9999244605634942	WITHOUT_CLASSIFICATION	7.553943650586834E-5	IMPLEMENTATION
// treat start and end as start...end for end >= 0, start..end for end < 0	WITHOUT_CLASSIFICATION	0.9999791634733299	WITHOUT_CLASSIFICATION	2.0836526670177164E-5	IMPLEMENTATION
// invalid ranges result in an empty string	WITHOUT_CLASSIFICATION	0.9999999660763597	WITHOUT_CLASSIFICATION	3.392364046892702E-8	IMPLEMENTATION
// Methods of the Nil Class (nil_*):	WITHOUT_CLASSIFICATION	0.999989929876619	WITHOUT_CLASSIFICATION	1.0070123380997239E-5	IMPLEMENTATION
// Has read/write been closed or is it still open for business	WITHOUT_CLASSIFICATION	0.9997570759351633	WITHOUT_CLASSIFICATION	2.4292406483662413E-4	IMPLEMENTATION
// Support IO modes that this object was opened with	WITHOUT_CLASSIFICATION	0.999957393973001	WITHOUT_CLASSIFICATION	4.260602699898162E-5	IMPLEMENTATION
// must let original string know we're modifying, so shared buffers aren't damaged	WITHOUT_CLASSIFICATION	0.9999523713082377	WITHOUT_CLASSIFICATION	4.762869176231556E-5	IMPLEMENTATION
// reset the state	WITHOUT_CLASSIFICATION	0.9993451750407817	WITHOUT_CLASSIFICATION	6.548249592183381E-4	IMPLEMENTATION
// Tainting here if we ever want it. (secure 4)	WITHOUT_CLASSIFICATION	0.9996630635212758	WITHOUT_CLASSIFICATION	3.369364787242107E-4	IMPLEMENTATION
// rb_match_busy	WITHOUT_CLASSIFICATION	0.999598425807291	WITHOUT_CLASSIFICATION	4.015741927090063E-4	IMPLEMENTATION
//str is frozen	WITHOUT_CLASSIFICATION	0.9994213091841613	WITHOUT_CLASSIFICATION	5.786908158387789E-4	IMPLEMENTATION
// MRI also does a pointer comparison here	WITHOUT_CLASSIFICATION	0.9999909698511261	WITHOUT_CLASSIFICATION	9.030148873905238E-6	IMPLEMENTATION
// JRubyServer	WITHOUT_CLASSIFICATION	0.999598425807291	WITHOUT_CLASSIFICATION	4.015741927090063E-4	IMPLEMENTATION
// Class.allocate object is not allocatable before it is initialized	WITHOUT_CLASSIFICATION	0.9996790642038966	WITHOUT_CLASSIFICATION	3.209357961034638E-4	IMPLEMENTATION
// boot the Object class 	WITHOUT_CLASSIFICATION	0.9999749113900055	WITHOUT_CLASSIFICATION	2.5088609994553842E-5	IMPLEMENTATION
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999912609540548	WITHOUT_CLASSIFICATION	8.739045945169206E-6	IMPLEMENTATION
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999967219723019	WITHOUT_CLASSIFICATION	3.278027697961311E-6	IMPLEMENTATION
// undo check	WITHOUT_CLASSIFICATION	0.9996446318987712	WITHOUT_CLASSIFICATION	3.5536810122891615E-4	IMPLEMENTATION
// This is a non-standard method; have we decided to start extending Ruby? //classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));	WITHOUT_CLASSIFICATION	0.9999590117004392	WITHOUT_CLASSIFICATION	4.098829956073057E-5	IMPLEMENTATION
// boot the Module and Class classes	WITHOUT_CLASSIFICATION	0.9999793157556819	WITHOUT_CLASSIFICATION	2.0684244318090973E-5	IMPLEMENTATION
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9999614946760634	WITHOUT_CLASSIFICATION	3.8505323936631356E-5	IMPLEMENTATION
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9997900240140304	WITHOUT_CLASSIFICATION	2.0997598596964173E-4	IMPLEMENTATION
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9997900240140304	WITHOUT_CLASSIFICATION	2.0997598596964173E-4	IMPLEMENTATION
// could be pulled down to RubyClass in future // rb_class_boot	WITHOUT_CLASSIFICATION	0.9999752527635246	WITHOUT_CLASSIFICATION	2.4747236475386116E-5	IMPLEMENTATION
// remove us from old superclass's child classes	WITHOUT_CLASSIFICATION	0.9999881527404756	WITHOUT_CLASSIFICATION	1.184725952447887E-5	IMPLEMENTATION
// add us to new superclass's child classes	WITHOUT_CLASSIFICATION	0.9999166886879531	WITHOUT_CLASSIFICATION	8.331131204690263E-5	IMPLEMENTATION
// update all subclasses	WITHOUT_CLASSIFICATION	0.9999933222400436	WITHOUT_CLASSIFICATION	6.677759956456976E-6	IMPLEMENTATION
// fields to hold Ruby and RubyClass references	WITHOUT_CLASSIFICATION	0.9999207107417502	WITHOUT_CLASSIFICATION	7.928925824982751E-5	IMPLEMENTATION
// static initializing method	WITHOUT_CLASSIFICATION	0.9998523375557422	WITHOUT_CLASSIFICATION	1.4766244425778075E-4	IMPLEMENTATION
// standard constructor that accepts Ruby, RubyClass	WITHOUT_CLASSIFICATION	0.9998697271439859	WITHOUT_CLASSIFICATION	1.3027285601418826E-4	IMPLEMENTATION
// no-arg constructor using static references to Ruby and RubyClass	WITHOUT_CLASSIFICATION	0.9999378581284503	WITHOUT_CLASSIFICATION	6.21418715497608E-5	IMPLEMENTATION
// non-signature signature with just IRubyObject	WITHOUT_CLASSIFICATION	0.9999688103005643	WITHOUT_CLASSIFICATION	3.118969943571095E-5	IMPLEMENTATION
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999993233778256	WITHOUT_CLASSIFICATION	6.766221742984857E-7	IMPLEMENTATION
// self // method name	WITHOUT_CLASSIFICATION	0.999698188992997	WITHOUT_CLASSIFICATION	3.0181100700301706E-4	IMPLEMENTATION
// the default allocator	WITHOUT_CLASSIFICATION	0.9999865635220467	WITHOUT_CLASSIFICATION	1.3436477953308377E-5	IMPLEMENTATION
// Equivalent of T_DATA	WITHOUT_CLASSIFICATION	0.999965731650636	WITHOUT_CLASSIFICATION	3.4268349363958645E-5	IMPLEMENTATION
// do nothing, leave empty	WITHOUT_CLASSIFICATION	0.9999909851882053	WITHOUT_CLASSIFICATION	9.014811794829421E-6	IMPLEMENTATION
// Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9999594206240328	WITHOUT_CLASSIFICATION	4.0579375967261994E-5	IMPLEMENTATION
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999997546036823	WITHOUT_CLASSIFICATION	2.4539631770381756E-6	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9997898756400532	WITHOUT_CLASSIFICATION	2.1012435994675188E-4	IMPLEMENTATION
// Make sure all arguments are modules before calling the callbacks	WITHOUT_CLASSIFICATION	0.9999970173536271	WITHOUT_CLASSIFICATION	2.982646372956966E-6	IMPLEMENTATION
// MRI extends in order from last to first	WITHOUT_CLASSIFICATION	0.9999985112533176	WITHOUT_CLASSIFICATION	1.4887466824858206E-6	IMPLEMENTATION
// NOTE: Serialization is primarily supported for testing purposes, and there is no general // guarantee that serialization will work correctly. Specifically, instance variables pointing // at symbols, threads, modules, classes, and other unserializable types are not detected.	WITHOUT_CLASSIFICATION	0.9999685714605878	WITHOUT_CLASSIFICATION	3.142853941223166E-5	IMPLEMENTATION
// write out ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999862826710996	WITHOUT_CLASSIFICATION	1.3717328900321821E-5	IMPLEMENTATION
// rest in ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999877840137714	WITHOUT_CLASSIFICATION	1.221598622861677E-5	IMPLEMENTATION
// 0x3fff_ffff // -0x4000_0000	WITHOUT_CLASSIFICATION	0.999935505377077	WITHOUT_CLASSIFICATION	6.449462292307057E-5	IMPLEMENTATION
// a gotcha	WITHOUT_CLASSIFICATION	0.9997043474733267	WITHOUT_CLASSIFICATION	2.956525266732224E-4	IMPLEMENTATION
// Java / and % are not the same as ruby	WITHOUT_CLASSIFICATION	0.9999725350019645	WITHOUT_CLASSIFICATION	2.7464998035488753E-5	IMPLEMENTATION
// A gotcha for Long.MIN_VALUE: value = -value	WITHOUT_CLASSIFICATION	0.9999804596460676	WITHOUT_CLASSIFICATION	1.9540353932295367E-5	IMPLEMENTATION
// Piece of mri rb_to_id	WITHOUT_CLASSIFICATION	0.999965731650636	WITHOUT_CLASSIFICATION	3.4268349363958645E-5	IMPLEMENTATION
// Java Doubles are 64 bit long:            	WITHOUT_CLASSIFICATION	0.9999777312599187	WITHOUT_CLASSIFICATION	2.226874008122408E-5	IMPLEMENTATION
// Double.MAX_EXPONENT since Java 1.6            	WITHOUT_CLASSIFICATION	0.9999594206240328	WITHOUT_CLASSIFICATION	4.0579375967261994E-5	IMPLEMENTATION
// don't override Numeric#div !	WITHOUT_CLASSIFICATION	0.9999211141358791	WITHOUT_CLASSIFICATION	7.888586412081573E-5	IMPLEMENTATION
// Modelled after c ruby implementation (java /,% not same as ruby)	WITHOUT_CLASSIFICATION	0.9983922644396032	WITHOUT_CLASSIFICATION	0.0016077355603968148	IMPLEMENTATION
// MRI behavior:	WITHOUT_CLASSIFICATION	0.9996016003884843	WITHOUT_CLASSIFICATION	3.9839961151562917E-4	IMPLEMENTATION
// Numeric.equal            	WITHOUT_CLASSIFICATION	0.999935505377077	WITHOUT_CLASSIFICATION	6.449462292307057E-5	IMPLEMENTATION
// provider is not available	WITHOUT_CLASSIFICATION	0.9991160641029916	WITHOUT_CLASSIFICATION	8.839358970085038E-4	IMPLEMENTATION
// bouncy castle doesn't support algorithm	WITHOUT_CLASSIFICATION	0.9982013323955556	WITHOUT_CLASSIFICATION	0.0017986676044443471	IMPLEMENTATION
// fall back to system JCA providers	WITHOUT_CLASSIFICATION	0.9995541098339739	WITHOUT_CLASSIFICATION	4.4589016602618954E-4	IMPLEMENTATION
// RubyDigest	WITHOUT_CLASSIFICATION	0.999598425807291	WITHOUT_CLASSIFICATION	4.015741927090063E-4	IMPLEMENTATION
// ENEBO: Can these be fast?	WITHOUT_CLASSIFICATION	0.9998911375799046	WITHOUT_CLASSIFICATION	1.0886242009551988E-4	IMPLEMENTATION
// synchronize on the RubyThread for threadgroup updates	WITHOUT_CLASSIFICATION	0.999891956033887	WITHOUT_CLASSIFICATION	1.0804396611297976E-4	IMPLEMENTATION
// we only add live threads	WITHOUT_CLASSIFICATION	0.9999591200861091	WITHOUT_CLASSIFICATION	4.087991389098638E-5	IMPLEMENTATION
// use same ClassIndex as metaclass, since we're technically still of that type	WITHOUT_CLASSIFICATION	0.9997543430458857	WITHOUT_CLASSIFICATION	2.456569541143451E-4	IMPLEMENTATION
// handle everything after -- as arguments to the jruby process	WITHOUT_CLASSIFICATION	0.999931113882961	WITHOUT_CLASSIFICATION	6.888611703896946E-5	IMPLEMENTATION
// JRubyService	WITHOUT_CLASSIFICATION	0.999598425807291	WITHOUT_CLASSIFICATION	4.015741927090063E-4	IMPLEMENTATION
// while	WITHOUT_CLASSIFICATION	0.9999949066939001	WITHOUT_CLASSIFICATION	5.0933060999121E-6	IMPLEMENTATION
/* \OOO */	WITHOUT_CLASSIFICATION	0.9999983452507534	WITHOUT_CLASSIFICATION	1.6547492466209219E-6	IMPLEMENTATION
// CRuby uses sprintf(buf, "%.*g", FLOAT_DIG, d); // This pattern adjusts the output of String.pattern("%g") to mimic // the C version.	WITHOUT_CLASSIFICATION	0.9999477979095489	WITHOUT_CLASSIFICATION	5.220209045117326E-5	IMPLEMENTATION
// mask off "once" flag	WITHOUT_CLASSIFICATION	0.9999640406277379	WITHOUT_CLASSIFICATION	3.595937226211209E-5	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999840357919859	WITHOUT_CLASSIFICATION	1.596420801405876E-5	IMPLEMENTATION
// internal usage (Complex/Rational)	WITHOUT_CLASSIFICATION	0.9999525831214763	WITHOUT_CLASSIFICATION	4.741687852377011E-5	IMPLEMENTATION
// silent ?	WITHOUT_CLASSIFICATION	0.9998114433101277	WITHOUT_CLASSIFICATION	1.8855668987239715E-4	IMPLEMENTATION
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999983452507534	WITHOUT_CLASSIFICATION	1.6547492466209219E-6	IMPLEMENTATION
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999881958820876	WITHOUT_CLASSIFICATION	1.1804117912266345E-5	IMPLEMENTATION
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999264817012458	WITHOUT_CLASSIFICATION	7.351829875423047E-5	IMPLEMENTATION
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999264817012458	WITHOUT_CLASSIFICATION	7.351829875423047E-5	IMPLEMENTATION
/* \O, \OO, \OOO or backref */	WITHOUT_CLASSIFICATION	0.9999908960010061	WITHOUT_CLASSIFICATION	9.103998994012046E-6	IMPLEMENTATION
// MBCLEN_NEEDMORE_P	WITHOUT_CLASSIFICATION	0.999598425807291	WITHOUT_CLASSIFICATION	4.015741927090063E-4	IMPLEMENTATION
// MBCLEN_INVALID_P	WITHOUT_CLASSIFICATION	0.999598425807291	WITHOUT_CLASSIFICATION	4.015741927090063E-4	IMPLEMENTATION
// Unicode is can be only 21 bits long, int is enough	WITHOUT_CLASSIFICATION	0.9999797716841335	WITHOUT_CLASSIFICATION	2.0228315866481452E-5	IMPLEMENTATION
/* Surrogates */	WITHOUT_CLASSIFICATION	0.9999264817012458	WITHOUT_CLASSIFICATION	7.351829875423047E-5	IMPLEMENTATION
// do not load the class if not used	WITHOUT_CLASSIFICATION	0.9995001769303739	WITHOUT_CLASSIFICATION	4.998230696260475E-4	IMPLEMENTATION
/* \0, \0O, \0OO */	WITHOUT_CLASSIFICATION	0.9999264817012458	WITHOUT_CLASSIFICATION	7.351829875423047E-5	IMPLEMENTATION
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999983452507534	WITHOUT_CLASSIFICATION	1.6547492466209219E-6	IMPLEMENTATION
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999264817012458	WITHOUT_CLASSIFICATION	7.351829875423047E-5	IMPLEMENTATION
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999881958820876	WITHOUT_CLASSIFICATION	1.1804117912266345E-5	IMPLEMENTATION
/* \\u{H HH HHH HHHH HHHHH HHHHHH ...} */	WITHOUT_CLASSIFICATION	0.9999785573213178	WITHOUT_CLASSIFICATION	2.1442678682142487E-5	IMPLEMENTATION
/* \\uHHHH */	WITHOUT_CLASSIFICATION	0.9999264817012458	WITHOUT_CLASSIFICATION	7.351829875423047E-5	IMPLEMENTATION
/* \p{Hiragana} */	WITHOUT_CLASSIFICATION	0.9999264817012458	WITHOUT_CLASSIFICATION	7.351829875423047E-5	IMPLEMENTATION
// inner switch	WITHOUT_CLASSIFICATION	0.9996454932920322	WITHOUT_CLASSIFICATION	3.545067079677448E-4	IMPLEMENTATION
// newInstance here	WITHOUT_CLASSIFICATION	0.9994326907346004	WITHOUT_CLASSIFICATION	5.673092653995776E-4	IMPLEMENTATION
// rb_reg_raise	WITHOUT_CLASSIFICATION	0.999598425807291	WITHOUT_CLASSIFICATION	4.015741927090063E-4	IMPLEMENTATION
// rb_reg_desc	WITHOUT_CLASSIFICATION	0.999598425807291	WITHOUT_CLASSIFICATION	4.015741927090063E-4	IMPLEMENTATION
// rb_enc_reg_raise	WITHOUT_CLASSIFICATION	0.999598425807291	WITHOUT_CLASSIFICATION	4.015741927090063E-4	IMPLEMENTATION
// rb_enc_reg_error_desc	WITHOUT_CLASSIFICATION	0.999935505377077	WITHOUT_CLASSIFICATION	6.449462292307057E-5	IMPLEMENTATION
// rb_reg_initialize_str	WITHOUT_CLASSIFICATION	0.999935505377077	WITHOUT_CLASSIFICATION	6.449462292307057E-5	IMPLEMENTATION
// rb_reg_initialize	WITHOUT_CLASSIFICATION	0.999598425807291	WITHOUT_CLASSIFICATION	4.015741927090063E-4	IMPLEMENTATION
// JRUBY-3625: delay setting backref until the MatchData is completely initialized	WITHOUT_CLASSIFICATION	0.999994869465277	WITHOUT_CLASSIFICATION	5.13053472288574E-6	IMPLEMENTATION
// rb_reg_expr_str	WITHOUT_CLASSIFICATION	0.999598425807291	WITHOUT_CLASSIFICATION	4.015741927090063E-4	IMPLEMENTATION
// option_to_str	WITHOUT_CLASSIFICATION	0.999598425807291	WITHOUT_CLASSIFICATION	4.015741927090063E-4	IMPLEMENTATION
// Don't initialize with class // Don't put in object space and don't taint	WITHOUT_CLASSIFICATION	0.9999937426301924	WITHOUT_CLASSIFICATION	6.257369807599099E-6	IMPLEMENTATION
// args should be before block	WITHOUT_CLASSIFICATION	0.9999788410823385	WITHOUT_CLASSIFICATION	2.1158917661409646E-5	IMPLEMENTATION
// args should be at end	WITHOUT_CLASSIFICATION	0.9998359383915791	WITHOUT_CLASSIFICATION	1.6406160842093073E-4	IMPLEMENTATION
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9994119093714182	WITHOUT_CLASSIFICATION	5.880906285817422E-4	IMPLEMENTATION
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9994119093714182	WITHOUT_CLASSIFICATION	5.880906285817422E-4	IMPLEMENTATION
// skip anything not related to jruby	WITHOUT_CLASSIFICATION	0.9932918535474203	WITHOUT_CLASSIFICATION	0.00670814645257969	IMPLEMENTATION
// start a new populator	WITHOUT_CLASSIFICATION	0.9999769330638587	WITHOUT_CLASSIFICATION	2.3066936141340108E-5	IMPLEMENTATION
// check for frame field reads or writes	WITHOUT_CLASSIFICATION	0.9999595266535298	WITHOUT_CLASSIFICATION	4.0473346470288254E-5	IMPLEMENTATION
// add all names for this annotation	WITHOUT_CLASSIFICATION	0.9999033735726393	WITHOUT_CLASSIFICATION	9.66264273606677E-5	IMPLEMENTATION
// no annotated methods found, skip	WITHOUT_CLASSIFICATION	0.9999169344519052	WITHOUT_CLASSIFICATION	8.306554809480478E-5	IMPLEMENTATION
// write out a static initializer for frame names, so it only fires once	WITHOUT_CLASSIFICATION	0.9999886666628103	WITHOUT_CLASSIFICATION	1.1333337189690952E-5	IMPLEMENTATION
// single method, use normal logic	WITHOUT_CLASSIFICATION	0.9991302062526558	WITHOUT_CLASSIFICATION	8.697937473442012E-4	IMPLEMENTATION
// multimethod, new logic	WITHOUT_CLASSIFICATION	0.9999377232775398	WITHOUT_CLASSIFICATION	6.227672246023284E-5	IMPLEMENTATION
// declared type returns the qualified name without $ for inner classes!!!	WITHOUT_CLASSIFICATION	0.9998743202454925	WITHOUT_CLASSIFICATION	1.256797545074382E-4	IMPLEMENTATION
// inner class, use $ to delimit	WITHOUT_CLASSIFICATION	0.9998557285336966	WITHOUT_CLASSIFICATION	1.442714663033798E-4	IMPLEMENTATION
//                        RubyModule singletonClass = module.getSingletonClass();	WITHOUT_CLASSIFICATION	0.9998963331074561	WITHOUT_CLASSIFICATION	1.0366689254390365E-4	IMPLEMENTATION
//                }	WITHOUT_CLASSIFICATION	0.9996532955277875	WITHOUT_CLASSIFICATION	3.4670447221247966E-4	IMPLEMENTATION
// fallback on non-pregenerated logic	WITHOUT_CLASSIFICATION	0.9997387523791084	WITHOUT_CLASSIFICATION	2.6124762089161063E-4	IMPLEMENTATION
// refresh call adapter, since it matters if this is iter-based or not	WITHOUT_CLASSIFICATION	0.9983283105506604	WITHOUT_CLASSIFICATION	0.0016716894493397176	IMPLEMENTATION
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9819467803135754	WITHOUT_CLASSIFICATION	0.018053219686424583	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.9996495309797153	WITHOUT_CLASSIFICATION	3.504690202846617E-4	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.9998704602643597	WITHOUT_CLASSIFICATION	1.295397356402888E-4	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999860575873367	WITHOUT_CLASSIFICATION	1.3942412663322438E-5	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999860575873367	WITHOUT_CLASSIFICATION	1.3942412663322438E-5	IMPLEMENTATION
// colon3	WITHOUT_CLASSIFICATION	0.9999909584718885	WITHOUT_CLASSIFICATION	9.041528111615727E-6	IMPLEMENTATION
// Colon3	WITHOUT_CLASSIFICATION	0.9999909584718885	WITHOUT_CLASSIFICATION	9.041528111615727E-6	IMPLEMENTATION
// array created for rescue args doesn't need to be in ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999992493074625	WITHOUT_CLASSIFICATION	7.506925374816764E-7	IMPLEMENTATION
// For b.foo	WITHOUT_CLASSIFICATION	0.999232637493273	WITHOUT_CLASSIFICATION	7.673625067270404E-4	IMPLEMENTATION
// instance config for the script run	WITHOUT_CLASSIFICATION	0.9999799998318775	WITHOUT_CLASSIFICATION	2.0000168122513823E-5	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999860575873367	WITHOUT_CLASSIFICATION	1.3942412663322438E-5	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999860575873367	WITHOUT_CLASSIFICATION	1.3942412663322438E-5	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999978489973586	WITHOUT_CLASSIFICATION	2.1510026414964655E-6	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999978489973586	WITHOUT_CLASSIFICATION	2.1510026414964655E-6	IMPLEMENTATION
//RubyModule module = context.getRubyClass();	WITHOUT_CLASSIFICATION	0.999504988581199	WITHOUT_CLASSIFICATION	4.950114188010323E-4	IMPLEMENTATION
// For 'b.foo'	WITHOUT_CLASSIFICATION	0.999232637493273	WITHOUT_CLASSIFICATION	7.673625067270404E-4	IMPLEMENTATION
// We define an actual list to get around bug in java integration (1387115)	WITHOUT_CLASSIFICATION	0.999998184001132	WITHOUT_CLASSIFICATION	1.8159988678615044E-6	IMPLEMENTATION
// something in here is used to build up ruby stack trace...	WITHOUT_CLASSIFICATION	0.9999992194154547	WITHOUT_CLASSIFICATION	7.805845453721731E-7	IMPLEMENTATION
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999639746444676	WITHOUT_CLASSIFICATION	3.6025355532358885E-5	IMPLEMENTATION
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999639746444676	WITHOUT_CLASSIFICATION	3.6025355532358885E-5	IMPLEMENTATION
// do nothing, allow loop to retry	WITHOUT_CLASSIFICATION	0.9997411291123782	WITHOUT_CLASSIFICATION	2.588708876217274E-4	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9982459872382906	WITHOUT_CLASSIFICATION	0.0017540127617092804	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999843558075349	WITHOUT_CLASSIFICATION	1.5644192465180347E-5	IMPLEMENTATION
// never visited, should be fine	WITHOUT_CLASSIFICATION	0.9994701941063434	WITHOUT_CLASSIFICATION	5.29805893656627E-4	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999978489973586	WITHOUT_CLASSIFICATION	2.1510026414964655E-6	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999501989013361	WITHOUT_CLASSIFICATION	4.9801098663990606E-5	IMPLEMENTATION
// If we have more than one argument, then make sure the array is not ObjectSpaced.	WITHOUT_CLASSIFICATION	0.9574216923936096	WITHOUT_CLASSIFICATION	0.04257830760639043	IMPLEMENTATION
// Only in ruby 1.9 methods	WITHOUT_CLASSIFICATION	0.9999948602392582	WITHOUT_CLASSIFICATION	5.139760741842875E-6	IMPLEMENTATION
// Bind 'normal' parameter values to the local scope for this method.	WITHOUT_CLASSIFICATION	0.9999996416184939	WITHOUT_CLASSIFICATION	3.583815062167274E-7	IMPLEMENTATION
// no arg grouping, just use bulk assignment methods	WITHOUT_CLASSIFICATION	0.9996732763460687	WITHOUT_CLASSIFICATION	3.267236539312467E-4	IMPLEMENTATION
// optArgs and restArgs require more work, so isolate them and ArrayList creation here	WITHOUT_CLASSIFICATION	0.9988805895455987	WITHOUT_CLASSIFICATION	0.001119410454401365	IMPLEMENTATION
//        arity.checkArity(runtime, argsLength);	WITHOUT_CLASSIFICATION	0.9998941815905964	WITHOUT_CLASSIFICATION	1.0581840940371808E-4	IMPLEMENTATION
// no more values to stick in rest arg	WITHOUT_CLASSIFICATION	0.9999426248895835	WITHOUT_CLASSIFICATION	5.7375110416494014E-5	IMPLEMENTATION
// set argv from main's args	WITHOUT_CLASSIFICATION	0.9999916805198333	WITHOUT_CLASSIFICATION	8.31948016668759E-6	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.9996495309797153	WITHOUT_CLASSIFICATION	3.504690202846617E-4	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999860575873367	WITHOUT_CLASSIFICATION	1.3942412663322438E-5	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999978489973586	WITHOUT_CLASSIFICATION	2.1510026414964655E-6	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999501989013361	WITHOUT_CLASSIFICATION	4.9801098663990606E-5	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9962102689813772	WITHOUT_CLASSIFICATION	0.0037897310186228352	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9962102689813772	WITHOUT_CLASSIFICATION	0.0037897310186228352	IMPLEMENTATION
// block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] //assert argsNode != null : "argsNode is not null";	WITHOUT_CLASSIFICATION	0.9932004130229907	WITHOUT_CLASSIFICATION	0.006799586977009326	IMPLEMENTATION
// assign given optional arguments to their variables	WITHOUT_CLASSIFICATION	0.9999534780983104	WITHOUT_CLASSIFICATION	4.6521901689575284E-5	IMPLEMENTATION
// in-frame EvalState should already have receiver set as self, continue to use it	WITHOUT_CLASSIFICATION	0.9996311060484554	WITHOUT_CLASSIFICATION	3.6889395154454896E-4	IMPLEMENTATION
// assign the default values, adding to the end of allArgs	WITHOUT_CLASSIFICATION	0.9998056328620746	WITHOUT_CLASSIFICATION	1.9436713792537422E-4	IMPLEMENTATION
// Make sure the appropriate scope has proper size. See JRUBY-2046.	WITHOUT_CLASSIFICATION	0.9999184132232911	WITHOUT_CLASSIFICATION	8.158677670894385E-5	IMPLEMENTATION
// Experimental class reification support, to create real Java classes // for Ruby classes after the first opening	WITHOUT_CLASSIFICATION	0.9999900841967349	WITHOUT_CLASSIFICATION	9.915803265213526E-6	IMPLEMENTATION
// This should never happen past parse, but just bulletproof this just in case	WITHOUT_CLASSIFICATION	0.9999949557129885	WITHOUT_CLASSIFICATION	5.044287011489594E-6	IMPLEMENTATION
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.999943692629261	WITHOUT_CLASSIFICATION	5.630737073896387E-5	IMPLEMENTATION
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999831261715152	WITHOUT_CLASSIFICATION	1.6873828484781656E-5	IMPLEMENTATION
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.999988816942511	WITHOUT_CLASSIFICATION	1.1183057489055504E-5	IMPLEMENTATION
// never visited, should be ok	WITHOUT_CLASSIFICATION	0.9991325795856248	WITHOUT_CLASSIFICATION	8.674204143751471E-4	IMPLEMENTATION
// If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil	WITHOUT_CLASSIFICATION	0.9990642878333876	WITHOUT_CLASSIFICATION	9.357121666123946E-4	IMPLEMENTATION
// JRUBY-530 until case	WITHOUT_CLASSIFICATION	0.9999498093643063	WITHOUT_CLASSIFICATION	5.0190635693551075E-5	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.9998704602643597	WITHOUT_CLASSIFICATION	1.295397356402888E-4	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999978489973586	WITHOUT_CLASSIFICATION	2.1510026414964655E-6	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9982459872382906	WITHOUT_CLASSIFICATION	0.0017540127617092804	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999843558075349	WITHOUT_CLASSIFICATION	1.5644192465180347E-5	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999843558075349	WITHOUT_CLASSIFICATION	1.5644192465180347E-5	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999978489973586	WITHOUT_CLASSIFICATION	2.1510026414964655E-6	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999501989013361	WITHOUT_CLASSIFICATION	4.9801098663990606E-5	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999501989013361	WITHOUT_CLASSIFICATION	4.9801098663990606E-5	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9962102689813772	WITHOUT_CLASSIFICATION	0.0037897310186228352	IMPLEMENTATION
// Empirical Observations: // null -> Some arity // argsNode == this.argsNode then check for arity changes // newline(splatnode) -> argspushnode	WITHOUT_CLASSIFICATION	0.9999673828451279	WITHOUT_CLASSIFICATION	3.261715487222743E-5	IMPLEMENTATION
//assert !(value instanceof RubyArray)  : "Not an array";	WITHOUT_CLASSIFICATION	0.9964420350293903	WITHOUT_CLASSIFICATION	0.003557964970609643	IMPLEMENTATION
// Serialization killed our dynamic scope.  We can just create an empty one // since serialization cannot serialize an eval (which is the only thing // which is capable of having a non-empty dynamic scope).	WITHOUT_CLASSIFICATION	0.9999999876130496	WITHOUT_CLASSIFICATION	1.2386950279929175E-8	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9991882765758284	WITHOUT_CLASSIFICATION	8.117234241715181E-4	IMPLEMENTATION
// We could probably also detect if LHS value came out of cache and avoid some of this	WITHOUT_CLASSIFICATION	0.9997888063233056	WITHOUT_CLASSIFICATION	2.1119367669440094E-4	IMPLEMENTATION
//        assert thenBody != null : "thenBody is not null"; //        assert elseBody != null : "elseBody is not null";	WITHOUT_CLASSIFICATION	0.9933847214616051	WITHOUT_CLASSIFICATION	0.006615278538394977	IMPLEMENTATION
// add in reverse order	WITHOUT_CLASSIFICATION	0.9999895619672603	WITHOUT_CLASSIFICATION	1.0438032739628609E-5	IMPLEMENTATION
// in order to make pragma's noops we set location to a special value	WITHOUT_CLASSIFICATION	0.9999877254320841	WITHOUT_CLASSIFICATION	1.2274567915825088E-5	IMPLEMENTATION
// ignore compiler pragmas	WITHOUT_CLASSIFICATION	0.9999388173983675	WITHOUT_CLASSIFICATION	6.118260163245672E-5	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9982459872382906	WITHOUT_CLASSIFICATION	0.0017540127617092804	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999843558075349	WITHOUT_CLASSIFICATION	1.5644192465180347E-5	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999843558075349	WITHOUT_CLASSIFICATION	1.5644192465180347E-5	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999978489973586	WITHOUT_CLASSIFICATION	2.1510026414964655E-6	IMPLEMENTATION
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.999943692629261	WITHOUT_CLASSIFICATION	5.630737073896387E-5	IMPLEMENTATION
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.999988816942511	WITHOUT_CLASSIFICATION	1.1183057489055504E-5	IMPLEMENTATION
// No actual test, so do 'when' if when expression is not nil	WITHOUT_CLASSIFICATION	0.9999108222239003	WITHOUT_CLASSIFICATION	8.917777609962629E-5	IMPLEMENTATION
// save entering the try if there's nothing to ensure	WITHOUT_CLASSIFICATION	0.9999934029931276	WITHOUT_CLASSIFICATION	6.597006872519279E-6	IMPLEMENTATION
// For 'foo'	WITHOUT_CLASSIFICATION	0.9992365114972126	WITHOUT_CLASSIFICATION	7.634885027875105E-4	IMPLEMENTATION
// For 'foo'	WITHOUT_CLASSIFICATION	0.9992365114972126	WITHOUT_CLASSIFICATION	7.634885027875105E-4	IMPLEMENTATION
// admittedly inefficient	WITHOUT_CLASSIFICATION	0.999935505377077	WITHOUT_CLASSIFICATION	6.449462292307057E-5	IMPLEMENTATION
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.99994624270909	WITHOUT_CLASSIFICATION	5.375729090988086E-5	IMPLEMENTATION
// What static scoping relationship exists when it comes into being.	WITHOUT_CLASSIFICATION	0.9998695550539517	WITHOUT_CLASSIFICATION	1.3044494604824526E-4	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999440480872498	WITHOUT_CLASSIFICATION	5.595191275022781E-5	IMPLEMENTATION
// just rethrow	WITHOUT_CLASSIFICATION	0.9999258862525268	WITHOUT_CLASSIFICATION	7.411374747314761E-5	IMPLEMENTATION
// just rethrow	WITHOUT_CLASSIFICATION	0.9999258862525268	WITHOUT_CLASSIFICATION	7.411374747314761E-5	IMPLEMENTATION
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9993884014320772	WITHOUT_CLASSIFICATION	6.115985679228993E-4	IMPLEMENTATION
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9993884014320772	WITHOUT_CLASSIFICATION	6.115985679228993E-4	IMPLEMENTATION
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999871295250188	WITHOUT_CLASSIFICATION	1.2870474981363764E-5	IMPLEMENTATION
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999871295250188	WITHOUT_CLASSIFICATION	1.2870474981363764E-5	IMPLEMENTATION
// Execute rescue block	WITHOUT_CLASSIFICATION	0.9999216290889779	WITHOUT_CLASSIFICATION	7.837091102214737E-5	IMPLEMENTATION
// If no exception is thrown execute else block	WITHOUT_CLASSIFICATION	0.9999923074804147	WITHOUT_CLASSIFICATION	7.692519585263183E-6	IMPLEMENTATION
// index of variable for this arg	WITHOUT_CLASSIFICATION	0.9989990823020354	WITHOUT_CLASSIFICATION	0.001000917697964586	IMPLEMENTATION
// only a marker interface	WITHOUT_CLASSIFICATION	0.9999844178385685	WITHOUT_CLASSIFICATION	1.5582161431586178E-5	IMPLEMENTATION
// don't attempt to coerce to array, just wrap and return	WITHOUT_CLASSIFICATION	0.9999868410983925	WITHOUT_CLASSIFICATION	1.3158901607520242E-5	IMPLEMENTATION
// pragmas	WITHOUT_CLASSIFICATION	0.9999909584718885	WITHOUT_CLASSIFICATION	9.041528111615727E-6	IMPLEMENTATION
// The method also needs a scope, do both	WITHOUT_CLASSIFICATION	0.9979920286204285	WITHOUT_CLASSIFICATION	0.002007971379571517	IMPLEMENTATION
// We're doing normal framed compilation or the method needs a frame	WITHOUT_CLASSIFICATION	0.9990371961279758	WITHOUT_CLASSIFICATION	9.628038720242475E-4	IMPLEMENTATION
// The method doesn't need a scope or static scope; frame only	WITHOUT_CLASSIFICATION	0.9999088360690301	WITHOUT_CLASSIFICATION	9.116393096992114E-5	IMPLEMENTATION
// The method doesn't need a scope, but has static scope needs; use a dummy scope	WITHOUT_CLASSIFICATION	0.9998835339797605	WITHOUT_CLASSIFICATION	1.164660202395445E-4	IMPLEMENTATION
// Proc.new needs the caller's block to instantiate a proc	WITHOUT_CLASSIFICATION	0.9994498456015093	WITHOUT_CLASSIFICATION	5.501543984906996E-4	IMPLEMENTATION
// check for Proc.new, an especially magic method	WITHOUT_CLASSIFICATION	0.9998793737407187	WITHOUT_CLASSIFICATION	1.2062625928124909E-4	IMPLEMENTATION
// long, slow way causes disabling	WITHOUT_CLASSIFICATION	0.9997488944642476	WITHOUT_CLASSIFICATION	2.5110553575244897E-4	IMPLEMENTATION
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9998682035199782	WITHOUT_CLASSIFICATION	1.3179648002185549E-4	IMPLEMENTATION
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9998682035199782	WITHOUT_CLASSIFICATION	1.3179648002185549E-4	IMPLEMENTATION
// long, slow way causes disabling for defined	WITHOUT_CLASSIFICATION	0.9999105331624109	WITHOUT_CLASSIFICATION	8.94668375892019E-5	IMPLEMENTATION
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.99933704543079	WITHOUT_CLASSIFICATION	6.629545692098996E-4	IMPLEMENTATION
// Because Regexp#=== sets backref, we have to make this backref-aware	WITHOUT_CLASSIFICATION	0.9970609634418235	WITHOUT_CLASSIFICATION	0.0029390365581764156	IMPLEMENTATION
// encountered a node we don't recognize, set everything to true to disable optz	WITHOUT_CLASSIFICATION	0.9998723625435177	WITHOUT_CLASSIFICATION	1.2763745648229464E-4	IMPLEMENTATION
// only arrays that are "lightweight" are being used as args arrays	WITHOUT_CLASSIFICATION	0.9999922821352358	WITHOUT_CLASSIFICATION	7.717864764061961E-6	IMPLEMENTATION
// otherwise, it's a literal array	WITHOUT_CLASSIFICATION	0.9997970489782986	WITHOUT_CLASSIFICATION	2.0295102170128225E-4	IMPLEMENTATION
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9992883716393111	WITHOUT_CLASSIFICATION	7.116283606888338E-4	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999489082678287	WITHOUT_CLASSIFICATION	5.1091732171307824E-5	IMPLEMENTATION
// compile first node as non-expr and then second node	WITHOUT_CLASSIFICATION	0.99997412533099	WITHOUT_CLASSIFICATION	2.5874669010047573E-5	IMPLEMENTATION
// last node, either !instanceof WhenNode or null, is the else	WITHOUT_CLASSIFICATION	0.999997956796049	WITHOUT_CLASSIFICATION	2.043203951102717E-6	IMPLEMENTATION
// compile first node only	WITHOUT_CLASSIFICATION	0.9999367223117108	WITHOUT_CLASSIFICATION	6.327768828920633E-5	IMPLEMENTATION
// splatted when, can't do it yet	WITHOUT_CLASSIFICATION	0.998868607713064	WITHOUT_CLASSIFICATION	0.0011313922869361085	IMPLEMENTATION
// if __send__ with a literal symbol, compile it as a direct fcall	WITHOUT_CLASSIFICATION	0.9999821268814486	WITHOUT_CLASSIFICATION	1.787311855138881E-5	IMPLEMENTATION
// NOTE: Currently this optimization is limited to the following situations: // * All expressions must be int-ranged literal fixnums // It also still emits the code for the "safe" when logic, which is rather // wasteful (since it essentially doubles each code body). As such it is // normally disabled, but it serves as an example of how this optimization // could be done. Ideally, it should be combined with the when processing // to improve code reuse before it's generally available.	WITHOUT_CLASSIFICATION	0.9999654469599337	WITHOUT_CLASSIFICATION	3.4553040066214465E-5	IMPLEMENTATION
// aggregate when nodes into a list, unfortunately, this is no	WITHOUT_CLASSIFICATION	0.999991266862915	WITHOUT_CLASSIFICATION	8.733137085112024E-6	IMPLEMENTATION
// one arg but it's an array, treat it as a proper array	WITHOUT_CLASSIFICATION	0.9994028954747985	WITHOUT_CLASSIFICATION	5.971045252014132E-4	IMPLEMENTATION
// can't do it	WITHOUT_CLASSIFICATION	0.9995044782739096	WITHOUT_CLASSIFICATION	4.955217260903462E-4	IMPLEMENTATION
// otherwise, use normal args compiler	WITHOUT_CLASSIFICATION	0.99935537836396	WITHOUT_CLASSIFICATION	6.446216360399716E-4	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999933038932128	WITHOUT_CLASSIFICATION	6.696106787248492E-6	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999933038932128	WITHOUT_CLASSIFICATION	6.696106787248492E-6	IMPLEMENTATION
// these are all simple cases that don't require the heavier defined logic	WITHOUT_CLASSIFICATION	0.9999258803666885	WITHOUT_CLASSIFICATION	7.411963331150902E-5	IMPLEMENTATION
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9995736327784496	WITHOUT_CLASSIFICATION	4.263672215503884E-4	IMPLEMENTATION
//[]	WITHOUT_CLASSIFICATION	0.9999670845889459	WITHOUT_CLASSIFICATION	3.291541105411755E-5	IMPLEMENTATION
//[]	WITHOUT_CLASSIFICATION	0.9999670845889459	WITHOUT_CLASSIFICATION	3.291541105411755E-5	IMPLEMENTATION
//          context.swapValues(); //context.consumeCurrentValue();	WITHOUT_CLASSIFICATION	0.9998941815905964	WITHOUT_CLASSIFICATION	1.0581840940371808E-4	IMPLEMENTATION
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[] //[self] //[RubyClass] //[RubyClass, RubyClass]	WITHOUT_CLASSIFICATION	0.9995736327784496	WITHOUT_CLASSIFICATION	4.263672215503884E-4	IMPLEMENTATION
//[RubyClass]	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9995736327784496	WITHOUT_CLASSIFICATION	4.263672215503884E-4	IMPLEMENTATION
// if root of method is rescue, compile as a light rescue	WITHOUT_CLASSIFICATION	0.9999962811954066	WITHOUT_CLASSIFICATION	3.718804593355632E-6	IMPLEMENTATION
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999912077118369	WITHOUT_CLASSIFICATION	8.792288162967402E-6	IMPLEMENTATION
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999912077118369	WITHOUT_CLASSIFICATION	8.792288162967402E-6	IMPLEMENTATION
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9998802863314618	WITHOUT_CLASSIFICATION	1.1971366853818646E-4	IMPLEMENTATION
// if root of method is rescue, compile as light rescue	WITHOUT_CLASSIFICATION	0.9999949483529771	WITHOUT_CLASSIFICATION	5.05164702290103E-6	IMPLEMENTATION
// invoke run with threadcontext and topself	WITHOUT_CLASSIFICATION	0.9999232031424709	WITHOUT_CLASSIFICATION	7.679685752914816E-5	IMPLEMENTATION
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9995736327784496	WITHOUT_CLASSIFICATION	4.263672215503884E-4	IMPLEMENTATION
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9995736327784496	WITHOUT_CLASSIFICATION	4.263672215503884E-4	IMPLEMENTATION
//[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9995736327784496	WITHOUT_CLASSIFICATION	4.263672215503884E-4	IMPLEMENTATION
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9995736327784496	WITHOUT_CLASSIFICATION	4.263672215503884E-4	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9983090564182364	WITHOUT_CLASSIFICATION	0.001690943581763585	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999094986351895	WITHOUT_CLASSIFICATION	9.050136481051497E-5	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999094986351895	WITHOUT_CLASSIFICATION	9.050136481051497E-5	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9997657802976779	WITHOUT_CLASSIFICATION	2.342197023220691E-4	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9997657802976779	WITHOUT_CLASSIFICATION	2.342197023220691E-4	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9997657802976779	WITHOUT_CLASSIFICATION	2.342197023220691E-4	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999094986351895	WITHOUT_CLASSIFICATION	9.050136481051497E-5	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999094986351895	WITHOUT_CLASSIFICATION	9.050136481051497E-5	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9983090564182364	WITHOUT_CLASSIFICATION	0.001690943581763585	IMPLEMENTATION
// force heap-scope behavior, since it uses parent's scope	WITHOUT_CLASSIFICATION	0.9996423457358828	WITHOUT_CLASSIFICATION	3.576542641171984E-4	IMPLEMENTATION
// always false or nil	WITHOUT_CLASSIFICATION	0.9999526787773316	WITHOUT_CLASSIFICATION	4.732122266837428E-5	IMPLEMENTATION
// optimizations if we know ahead of time it will always be true or false	WITHOUT_CLASSIFICATION	0.9999766947878156	WITHOUT_CLASSIFICATION	2.3305212184467345E-5	IMPLEMENTATION
// normal	WITHOUT_CLASSIFICATION	0.9999824472186114	WITHOUT_CLASSIFICATION	1.755278138859396E-5	IMPLEMENTATION
// compile condition as non-expr and just compile "then" body	WITHOUT_CLASSIFICATION	0.9999991973814913	WITHOUT_CLASSIFICATION	8.026185087261829E-7	IMPLEMENTATION
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9981590684944834	WITHOUT_CLASSIFICATION	0.0018409315055166009	IMPLEMENTATION
// just push nil for pragmas	WITHOUT_CLASSIFICATION	0.9999952414389154	WITHOUT_CLASSIFICATION	4.75856108460164E-6	IMPLEMENTATION
// "assignment" means the value is already on the stack	WITHOUT_CLASSIFICATION	0.9999929746839539	WITHOUT_CLASSIFICATION	7.025316046139999E-6	IMPLEMENTATION
// compile first node only	WITHOUT_CLASSIFICATION	0.9999367223117108	WITHOUT_CLASSIFICATION	6.327768828920633E-5	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999094986351895	WITHOUT_CLASSIFICATION	9.050136481051497E-5	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999094986351895	WITHOUT_CLASSIFICATION	9.050136481051497E-5	IMPLEMENTATION
// eval new value, call operator on old value, and assign	WITHOUT_CLASSIFICATION	0.9997668558819746	WITHOUT_CLASSIFICATION	2.3314411802537194E-4	IMPLEMENTATION
// try optz version	WITHOUT_CLASSIFICATION	0.9997214019172922	WITHOUT_CLASSIFICATION	2.785980827077846E-4	IMPLEMENTATION
// sizes must match	WITHOUT_CLASSIFICATION	0.9996530554470345	WITHOUT_CLASSIFICATION	3.4694455296540894E-4	IMPLEMENTATION
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999966039669858	WITHOUT_CLASSIFICATION	3.3960330142500173E-6	IMPLEMENTATION
// normal items at the "head" of the masgn	WITHOUT_CLASSIFICATION	0.9993169078932136	WITHOUT_CLASSIFICATION	6.830921067864918E-4	IMPLEMENTATION
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9993182884685468	WITHOUT_CLASSIFICATION	6.817115314532248E-4	IMPLEMENTATION
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9998054596452831	WITHOUT_CLASSIFICATION	1.9454035471691517E-4	IMPLEMENTATION
// only supports simple parallel assignment of up to 10 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999995858890983	WITHOUT_CLASSIFICATION	4.1411090158835E-7	IMPLEMENTATION
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9997925797983341	WITHOUT_CLASSIFICATION	2.074202016657984E-4	IMPLEMENTATION
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999820966378674	WITHOUT_CLASSIFICATION	1.7903362132564588E-5	IMPLEMENTATION
//RedoNode redoNode = (RedoNode)node;	WITHOUT_CLASSIFICATION	0.9995822990225001	WITHOUT_CLASSIFICATION	4.17700977500003E-4	IMPLEMENTATION
// done processing args	WITHOUT_CLASSIFICATION	0.9999785297719904	WITHOUT_CLASSIFICATION	2.1470228009614224E-5	IMPLEMENTATION
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999739791357912	WITHOUT_CLASSIFICATION	2.602086420871702E-5	IMPLEMENTATION
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.999915544323204	WITHOUT_CLASSIFICATION	8.445567679610026E-5	IMPLEMENTATION
// if arity 1, just compile the one element to save us the array cost	WITHOUT_CLASSIFICATION	0.9999983197743505	WITHOUT_CLASSIFICATION	1.6802256494270533E-6	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.9999909584718885	WITHOUT_CLASSIFICATION	9.041528111615727E-6	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.9999909584718885	WITHOUT_CLASSIFICATION	9.041528111615727E-6	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.9999909584718885	WITHOUT_CLASSIFICATION	9.041528111615727E-6	IMPLEMENTATION
// compile into array	WITHOUT_CLASSIFICATION	0.9999773878112383	WITHOUT_CLASSIFICATION	2.261218876171609E-5	IMPLEMENTATION
// compile first node as non-expr and compile second node	WITHOUT_CLASSIFICATION	0.9999636785172217	WITHOUT_CLASSIFICATION	3.632148277833828E-5	IMPLEMENTATION
// check if it's an immediate, and don't outline	WITHOUT_CLASSIFICATION	0.9999728355804878	WITHOUT_CLASSIFICATION	2.7164419512170973E-5	IMPLEMENTATION
// condition is always true, just compile it and not body	WITHOUT_CLASSIFICATION	0.9998908538377566	WITHOUT_CLASSIFICATION	1.0914616224344364E-4	IMPLEMENTATION
// force static scope to claim restarg at 0, so it only implements the [] version of __file__	WITHOUT_CLASSIFICATION	0.9999346885915276	WITHOUT_CLASSIFICATION	6.531140847238195E-5	IMPLEMENTATION
// create method for toplevel of script	WITHOUT_CLASSIFICATION	0.9999514055626869	WITHOUT_CLASSIFICATION	4.859443731304193E-5	IMPLEMENTATION
// it's a multiple-statement body, iterate over all elements in turn and chain if it get too long	WITHOUT_CLASSIFICATION	0.9999998471711302	WITHOUT_CLASSIFICATION	1.5282886986723315E-7	IMPLEMENTATION
// send it along as arity-specific, we don't need the array	WITHOUT_CLASSIFICATION	0.9999321025703776	WITHOUT_CLASSIFICATION	6.789742962234591E-5	IMPLEMENTATION
// single-statement body, just compile it	WITHOUT_CLASSIFICATION	0.9999589272822541	WITHOUT_CLASSIFICATION	4.107271774590835E-5	IMPLEMENTATION
// leave as a normal array	WITHOUT_CLASSIFICATION	0.9999850541538657	WITHOUT_CLASSIFICATION	1.4945846134180325E-5	IMPLEMENTATION
// This method has JITed already or has been abandoned. Bail out.	WITHOUT_CLASSIFICATION	0.99834675085617	WITHOUT_CLASSIFICATION	0.0016532491438300543	IMPLEMENTATION
// The cache is full. Abandon JIT for this method and bail out.	WITHOUT_CLASSIFICATION	0.9978571236768558	WITHOUT_CLASSIFICATION	0.002142876323144151	IMPLEMENTATION
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9998802863314618	WITHOUT_CLASSIFICATION	1.1971366853818646E-4	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999094986351895	WITHOUT_CLASSIFICATION	9.050136481051497E-5	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999094986351895	WITHOUT_CLASSIFICATION	9.050136481051497E-5	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9983090564182364	WITHOUT_CLASSIFICATION	0.001690943581763585	IMPLEMENTATION
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9981590684944834	WITHOUT_CLASSIFICATION	0.0018409315055166009	IMPLEMENTATION
// try optz version	WITHOUT_CLASSIFICATION	0.9997214019172922	WITHOUT_CLASSIFICATION	2.785980827077846E-4	IMPLEMENTATION
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999966039669858	WITHOUT_CLASSIFICATION	3.3960330142500173E-6	IMPLEMENTATION
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9993182884685468	WITHOUT_CLASSIFICATION	6.817115314532248E-4	IMPLEMENTATION
// sizes must match	WITHOUT_CLASSIFICATION	0.9996530554470345	WITHOUT_CLASSIFICATION	3.4694455296540894E-4	IMPLEMENTATION
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9998054596452831	WITHOUT_CLASSIFICATION	1.9454035471691517E-4	IMPLEMENTATION
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999820966378674	WITHOUT_CLASSIFICATION	1.7903362132564588E-5	IMPLEMENTATION
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9997925797983341	WITHOUT_CLASSIFICATION	2.074202016657984E-4	IMPLEMENTATION
// done processing args	WITHOUT_CLASSIFICATION	0.9999785297719904	WITHOUT_CLASSIFICATION	2.1470228009614224E-5	IMPLEMENTATION
// Check if the method has been explicitly excluded	WITHOUT_CLASSIFICATION	0.9997438709323998	WITHOUT_CLASSIFICATION	2.5612906760027847E-4	IMPLEMENTATION
// class could not be found nor generated; give up on JIT and bail out	WITHOUT_CLASSIFICATION	0.999443769998874	WITHOUT_CLASSIFICATION	5.562300011259959E-4	IMPLEMENTATION
// successfully got back a jitted method	WITHOUT_CLASSIFICATION	0.9995311161791011	WITHOUT_CLASSIFICATION	4.6888382089894806E-4	IMPLEMENTATION
// finally, grab the script	WITHOUT_CLASSIFICATION	0.9999631034137864	WITHOUT_CLASSIFICATION	3.689658621374059E-5	IMPLEMENTATION
// logEvery n methods based on configuration	WITHOUT_CLASSIFICATION	0.9998313467383287	WITHOUT_CLASSIFICATION	1.6865326167122557E-4	IMPLEMENTATION
// Time the compilation	WITHOUT_CLASSIFICATION	0.9999712228655341	WITHOUT_CLASSIFICATION	2.877713446591695E-5	IMPLEMENTATION
// we have a body, do a full-on method	WITHOUT_CLASSIFICATION	0.9995811423755405	WITHOUT_CLASSIFICATION	4.1885762445937247E-4	IMPLEMENTATION
// If we don't have a body, check for required or opt args // if opt args, they could have side effects // if required args, need to raise errors if too few args passed // otherwise, method does nothing, make it a nop	WITHOUT_CLASSIFICATION	0.9995858777315906	WITHOUT_CLASSIFICATION	4.1412226840949244E-4	IMPLEMENTATION
// if we haven't already decided on a do-nothing call	WITHOUT_CLASSIFICATION	0.999776180057954	WITHOUT_CLASSIFICATION	2.2381994204590598E-4	IMPLEMENTATION
// only supports simple parallel assignment of up to 4 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999996179802911	WITHOUT_CLASSIFICATION	3.820197088665609E-7	IMPLEMENTATION
// normal items at the front or back of the masgn	WITHOUT_CLASSIFICATION	0.9991110347430808	WITHOUT_CLASSIFICATION	8.889652569190814E-4	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999836828676384	WITHOUT_CLASSIFICATION	1.6317132361522252E-5	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999662332529462	WITHOUT_CLASSIFICATION	3.37667470538211E-5	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999975620845187	WITHOUT_CLASSIFICATION	2.4379154811830096E-6	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999987191535928	WITHOUT_CLASSIFICATION	1.2808464071636815E-6	IMPLEMENTATION
// end of variable scope	WITHOUT_CLASSIFICATION	0.99989191061841	WITHOUT_CLASSIFICATION	1.0808938159005376E-4	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999113462264543	WITHOUT_CLASSIFICATION	8.865377354575884E-5	IMPLEMENTATION
// Define the annotation for the method	WITHOUT_CLASSIFICATION	0.9998467356980414	WITHOUT_CLASSIFICATION	1.5326430195867314E-4	IMPLEMENTATION
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999665700827298	WITHOUT_CLASSIFICATION	3.342991727022137E-5	IMPLEMENTATION
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999619241860409	WITHOUT_CLASSIFICATION	3.807581395921641E-5	IMPLEMENTATION
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999748696406181	WITHOUT_CLASSIFICATION	2.513035938198331E-5	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999489427705954	WITHOUT_CLASSIFICATION	5.1057229404627363E-5	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999489427705954	WITHOUT_CLASSIFICATION	5.1057229404627363E-5	IMPLEMENTATION
// value is already on stack, save it for later	WITHOUT_CLASSIFICATION	0.9999792263368881	WITHOUT_CLASSIFICATION	2.0773663111928404E-5	IMPLEMENTATION
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.989662249429815	WITHOUT_CLASSIFICATION	0.010337750570185175	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999670845889459	WITHOUT_CLASSIFICATION	3.291541105411755E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999670845889459	WITHOUT_CLASSIFICATION	3.291541105411755E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999670845889459	WITHOUT_CLASSIFICATION	3.291541105411755E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999670845889459	WITHOUT_CLASSIFICATION	3.291541105411755E-5	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999670845889459	WITHOUT_CLASSIFICATION	3.291541105411755E-5	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999670845889459	WITHOUT_CLASSIFICATION	3.291541105411755E-5	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999670845889459	WITHOUT_CLASSIFICATION	3.291541105411755E-5	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.9999670845889459	WITHOUT_CLASSIFICATION	3.291541105411755E-5	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.9999670845889459	WITHOUT_CLASSIFICATION	3.291541105411755E-5	IMPLEMENTATION
/*arg2*/	WITHOUT_CLASSIFICATION	0.9999670845889459	WITHOUT_CLASSIFICATION	3.291541105411755E-5	IMPLEMENTATION
/*args*/	WITHOUT_CLASSIFICATION	0.9999670845889459	WITHOUT_CLASSIFICATION	3.291541105411755E-5	IMPLEMENTATION
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.989662249429815	WITHOUT_CLASSIFICATION	0.010337750570185175	IMPLEMENTATION
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9996820982816387	WITHOUT_CLASSIFICATION	3.179017183613711E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999670845889459	WITHOUT_CLASSIFICATION	3.291541105411755E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999670845889459	WITHOUT_CLASSIFICATION	3.291541105411755E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999670845889459	WITHOUT_CLASSIFICATION	3.291541105411755E-5	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999670845889459	WITHOUT_CLASSIFICATION	3.291541105411755E-5	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999670845889459	WITHOUT_CLASSIFICATION	3.291541105411755E-5	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.9999670845889459	WITHOUT_CLASSIFICATION	3.291541105411755E-5	IMPLEMENTATION
/*args*/	WITHOUT_CLASSIFICATION	0.9999670845889459	WITHOUT_CLASSIFICATION	3.291541105411755E-5	IMPLEMENTATION
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9995334022936204	WITHOUT_CLASSIFICATION	4.6659770637948156E-4	IMPLEMENTATION
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9995334022936204	WITHOUT_CLASSIFICATION	4.6659770637948156E-4	IMPLEMENTATION
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999634893730798	WITHOUT_CLASSIFICATION	3.651062692034912E-5	IMPLEMENTATION
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999634893730798	WITHOUT_CLASSIFICATION	3.651062692034912E-5	IMPLEMENTATION
// invoke	WITHOUT_CLASSIFICATION	0.9999913218407086	WITHOUT_CLASSIFICATION	8.67815929142585E-6	IMPLEMENTATION
// invoke	WITHOUT_CLASSIFICATION	0.9999913218407086	WITHOUT_CLASSIFICATION	8.67815929142585E-6	IMPLEMENTATION
// check if it's true, ending if so	WITHOUT_CLASSIFICATION	0.9999343491842932	WITHOUT_CLASSIFICATION	6.565081570675255E-5	IMPLEMENTATION
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9995208782876067	WITHOUT_CLASSIFICATION	4.7912171239324964E-4	IMPLEMENTATION
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9995208782876067	WITHOUT_CLASSIFICATION	4.7912171239324964E-4	IMPLEMENTATION
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.999758896211322	WITHOUT_CLASSIFICATION	2.4110378867799124E-4	IMPLEMENTATION
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.999758896211322	WITHOUT_CLASSIFICATION	2.4110378867799124E-4	IMPLEMENTATION
// eval value for assignment	WITHOUT_CLASSIFICATION	0.999994951352374	WITHOUT_CLASSIFICATION	5.048647625924385E-6	IMPLEMENTATION
// call site	WITHOUT_CLASSIFICATION	0.9991659031346911	WITHOUT_CLASSIFICATION	8.340968653089208E-4	IMPLEMENTATION
// call site	WITHOUT_CLASSIFICATION	0.9991659031346911	WITHOUT_CLASSIFICATION	8.340968653089208E-4	IMPLEMENTATION
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9995850529308384	WITHOUT_CLASSIFICATION	4.1494706916152697E-4	IMPLEMENTATION
// check if it's true, ending if not	WITHOUT_CLASSIFICATION	0.9956540660920189	WITHOUT_CLASSIFICATION	0.00434593390798108	IMPLEMENTATION
// eval value and save it	WITHOUT_CLASSIFICATION	0.9999907001400531	WITHOUT_CLASSIFICATION	9.299859946951276E-6	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999670845889459	WITHOUT_CLASSIFICATION	3.291541105411755E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999670845889459	WITHOUT_CLASSIFICATION	3.291541105411755E-5	IMPLEMENTATION
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9995850529308384	WITHOUT_CLASSIFICATION	4.1494706916152697E-4	IMPLEMENTATION
// receiver, args, result, value	WITHOUT_CLASSIFICATION	0.9999766349473648	WITHOUT_CLASSIFICATION	2.3365052635209082E-5	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.999598425807291	WITHOUT_CLASSIFICATION	4.015741927090063E-4	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.999598425807291	WITHOUT_CLASSIFICATION	4.015741927090063E-4	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.999598425807291	WITHOUT_CLASSIFICATION	4.015741927090063E-4	IMPLEMENTATION
// super uses current block if none given	WITHOUT_CLASSIFICATION	0.9998815567477423	WITHOUT_CLASSIFICATION	1.184432522576953E-4	IMPLEMENTATION
// args	WITHOUT_CLASSIFICATION	0.9999913838600235	WITHOUT_CLASSIFICATION	8.61613997642545E-6	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999882628735118	WITHOUT_CLASSIFICATION	1.1737126488232616E-5	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999882628735118	WITHOUT_CLASSIFICATION	1.1737126488232616E-5	IMPLEMENTATION
// no args, no block	WITHOUT_CLASSIFICATION	0.9996727155490517	WITHOUT_CLASSIFICATION	3.2728445094838617E-4	IMPLEMENTATION
// no args, with block	WITHOUT_CLASSIFICATION	0.9999222836311802	WITHOUT_CLASSIFICATION	7.771636881975913E-5	IMPLEMENTATION
// with args, no block	WITHOUT_CLASSIFICATION	0.9999222836311802	WITHOUT_CLASSIFICATION	7.771636881975906E-5	IMPLEMENTATION
// with args, with block	WITHOUT_CLASSIFICATION	0.9998765696377531	WITHOUT_CLASSIFICATION	1.2343036224690224E-4	IMPLEMENTATION
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.999882847834233	WITHOUT_CLASSIFICATION	1.171521657668933E-4	IMPLEMENTATION
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999912631633942	WITHOUT_CLASSIFICATION	8.736836605782007E-6	IMPLEMENTATION
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999912631633942	WITHOUT_CLASSIFICATION	8.736836605782007E-6	IMPLEMENTATION
// arg and receiver already present on the stack	WITHOUT_CLASSIFICATION	0.9964328798522534	WITHOUT_CLASSIFICATION	0.0035671201477465043	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9999670845889459	WITHOUT_CLASSIFICATION	3.291541105411755E-5	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9999670845889459	WITHOUT_CLASSIFICATION	3.291541105411755E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999670845889459	WITHOUT_CLASSIFICATION	3.291541105411755E-5	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.999598425807291	WITHOUT_CLASSIFICATION	4.015741927090063E-4	IMPLEMENTATION
// args	WITHOUT_CLASSIFICATION	0.9999913838600235	WITHOUT_CLASSIFICATION	8.61613997642545E-6	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999882628735118	WITHOUT_CLASSIFICATION	1.1737126488232616E-5	IMPLEMENTATION
// no args, no block	WITHOUT_CLASSIFICATION	0.9996727155490517	WITHOUT_CLASSIFICATION	3.2728445094838617E-4	IMPLEMENTATION
// no args, with block	WITHOUT_CLASSIFICATION	0.9999222836311802	WITHOUT_CLASSIFICATION	7.771636881975913E-5	IMPLEMENTATION
// with args, no block	WITHOUT_CLASSIFICATION	0.9999222836311802	WITHOUT_CLASSIFICATION	7.771636881975906E-5	IMPLEMENTATION
// with args, with block	WITHOUT_CLASSIFICATION	0.9998765696377531	WITHOUT_CLASSIFICATION	1.2343036224690224E-4	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9999670845889459	WITHOUT_CLASSIFICATION	3.291541105411755E-5	IMPLEMENTATION
// retrieve scope from scopes array	WITHOUT_CLASSIFICATION	0.9999864189399503	WITHOUT_CLASSIFICATION	1.358106004974026E-5	IMPLEMENTATION
// use numbered access method	WITHOUT_CLASSIFICATION	0.9995072143931488	WITHOUT_CLASSIFICATION	4.927856068511298E-4	IMPLEMENTATION
// retrieve call site from sites array	WITHOUT_CLASSIFICATION	0.9999710736464773	WITHOUT_CLASSIFICATION	2.8926353522687202E-5	IMPLEMENTATION
// add name to call site list	WITHOUT_CLASSIFICATION	0.999679495849967	WITHOUT_CLASSIFICATION	3.205041500330181E-4	IMPLEMENTATION
// module is on top of stack	WITHOUT_CLASSIFICATION	0.9998990880717988	WITHOUT_CLASSIFICATION	1.009119282011546E-4	IMPLEMENTATION
// build scope names string	WITHOUT_CLASSIFICATION	0.9999983358593184	WITHOUT_CLASSIFICATION	1.6641406815983214E-6	IMPLEMENTATION
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999984352812272	WITHOUT_CLASSIFICATION	1.5647187727789763E-6	IMPLEMENTATION
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999984352812272	WITHOUT_CLASSIFICATION	1.5647187727789763E-6	IMPLEMENTATION
// generate call sites initialization code	WITHOUT_CLASSIFICATION	0.9998388236856481	WITHOUT_CLASSIFICATION	1.611763143518383E-4	IMPLEMENTATION
// generate symbols initialization code	WITHOUT_CLASSIFICATION	0.9999225048995859	WITHOUT_CLASSIFICATION	7.749510041415096E-5	IMPLEMENTATION
// generate fixnums initialization code	WITHOUT_CLASSIFICATION	0.9999224290908085	WITHOUT_CLASSIFICATION	7.757090919152218E-5	IMPLEMENTATION
// generate constants initialization code	WITHOUT_CLASSIFICATION	0.9999763606957791	WITHOUT_CLASSIFICATION	2.363930422080999E-5	IMPLEMENTATION
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999224290908085	WITHOUT_CLASSIFICATION	7.757090919152218E-5	IMPLEMENTATION
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999224290908085	WITHOUT_CLASSIFICATION	7.757090919152218E-5	IMPLEMENTATION
// generate variable readers initialization code	WITHOUT_CLASSIFICATION	0.9998494250645142	WITHOUT_CLASSIFICATION	1.505749354857647E-4	IMPLEMENTATION
// generate variable writers initialization code	WITHOUT_CLASSIFICATION	0.99993474248688	WITHOUT_CLASSIFICATION	6.525751312003943E-5	IMPLEMENTATION
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999000239034379	WITHOUT_CLASSIFICATION	9.997609656210912E-5	IMPLEMENTATION
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999000239034379	WITHOUT_CLASSIFICATION	9.997609656210912E-5	IMPLEMENTATION
// generate bytelists initialization code	WITHOUT_CLASSIFICATION	0.9999224290908085	WITHOUT_CLASSIFICATION	7.757090919152218E-5	IMPLEMENTATION
// generate method cache initialization code	WITHOUT_CLASSIFICATION	0.996948496800837	WITHOUT_CLASSIFICATION	0.0030515031991631167	IMPLEMENTATION
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.999882847834233	WITHOUT_CLASSIFICATION	1.171521657668933E-4	IMPLEMENTATION
// use IRubyObject[]	WITHOUT_CLASSIFICATION	0.9986930894291052	WITHOUT_CLASSIFICATION	0.0013069105708948695	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999649152105138	WITHOUT_CLASSIFICATION	3.508478948620631E-5	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999011959173094	WITHOUT_CLASSIFICATION	9.88040826905544E-5	IMPLEMENTATION
// No point in updating number if last number was same value.	WITHOUT_CLASSIFICATION	0.9999996619076654	WITHOUT_CLASSIFICATION	3.3809233455959224E-7	IMPLEMENTATION
// load Object under value	WITHOUT_CLASSIFICATION	0.9999879523009156	WITHOUT_CLASSIFICATION	1.2047699084428987E-5	IMPLEMENTATION
// put under object array already present	WITHOUT_CLASSIFICATION	0.9997039364166358	WITHOUT_CLASSIFICATION	2.960635833641684E-4	IMPLEMENTATION
// if element count is less than 6, use helper methods	WITHOUT_CLASSIFICATION	0.9999893820932748	WITHOUT_CLASSIFICATION	1.0617906725240326E-5	IMPLEMENTATION
// This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements	WITHOUT_CLASSIFICATION	0.9999997579796164	WITHOUT_CLASSIFICATION	2.42020383560851E-7	IMPLEMENTATION
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999583203942257	WITHOUT_CLASSIFICATION	4.16796057742588E-5	IMPLEMENTATION
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999583203942257	WITHOUT_CLASSIFICATION	4.16796057742588E-5	IMPLEMENTATION
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9996483124024398	WITHOUT_CLASSIFICATION	3.516875975602054E-4	IMPLEMENTATION
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9996483124024398	WITHOUT_CLASSIFICATION	3.516875975602054E-4	IMPLEMENTATION
// use specific-arity for as much as possible	WITHOUT_CLASSIFICATION	0.9999719908967841	WITHOUT_CLASSIFICATION	2.8009103215800228E-5	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9997848545959226	WITHOUT_CLASSIFICATION	2.151454040773628E-4	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9997848545959226	WITHOUT_CLASSIFICATION	2.151454040773628E-4	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9997848545959226	WITHOUT_CLASSIFICATION	2.151454040773628E-4	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999700384220515	WITHOUT_CLASSIFICATION	2.9961577948650577E-5	IMPLEMENTATION
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9998152079667895	WITHOUT_CLASSIFICATION	1.847920332105628E-4	IMPLEMENTATION
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9998152079667895	WITHOUT_CLASSIFICATION	1.847920332105628E-4	IMPLEMENTATION
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999967107115536	WITHOUT_CLASSIFICATION	3.2892884464163788E-6	IMPLEMENTATION
// check the condition	WITHOUT_CLASSIFICATION	0.9998889829325268	WITHOUT_CLASSIFICATION	1.1101706747311074E-4	IMPLEMENTATION
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999338387425738	WITHOUT_CLASSIFICATION	6.616125742620258E-5	IMPLEMENTATION
// skip catch block	WITHOUT_CLASSIFICATION	0.9993292291163856	WITHOUT_CLASSIFICATION	6.707708836144419E-4	IMPLEMENTATION
// catch logic for flow-control: next, break	WITHOUT_CLASSIFICATION	0.9999235410898059	WITHOUT_CLASSIFICATION	7.645891019416607E-5	IMPLEMENTATION
// next jump	WITHOUT_CLASSIFICATION	0.9987655467943923	WITHOUT_CLASSIFICATION	0.0012344532056076758	IMPLEMENTATION
// exceptionNext target is for a next that doesn't push a new value, like this one	WITHOUT_CLASSIFICATION	0.9993934484235961	WITHOUT_CLASSIFICATION	6.065515764037861E-4	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999662332529462	WITHOUT_CLASSIFICATION	3.37667470538211E-5	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999662332529462	WITHOUT_CLASSIFICATION	3.37667470538211E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999700384220515	WITHOUT_CLASSIFICATION	2.9961577948650577E-5	IMPLEMENTATION
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999967107115536	WITHOUT_CLASSIFICATION	3.2892884464163788E-6	IMPLEMENTATION
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999782458070691	WITHOUT_CLASSIFICATION	2.1754192930948888E-5	IMPLEMENTATION
// check the condition	WITHOUT_CLASSIFICATION	0.9998889829325268	WITHOUT_CLASSIFICATION	1.1101706747311074E-4	IMPLEMENTATION
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999338387425738	WITHOUT_CLASSIFICATION	6.616125742620258E-5	IMPLEMENTATION
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9979236133627841	WITHOUT_CLASSIFICATION	0.0020763866372159215	IMPLEMENTATION
// break jump	WITHOUT_CLASSIFICATION	0.9996102666753476	WITHOUT_CLASSIFICATION	3.897333246524042E-4	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999330876552261	WITHOUT_CLASSIFICATION	6.691234477391099E-5	IMPLEMENTATION
//[reg]	WITHOUT_CLASSIFICATION	0.9999670845889459	WITHOUT_CLASSIFICATION	3.291541105411755E-5	IMPLEMENTATION
// for regular expressions with the /o flag	WITHOUT_CLASSIFICATION	0.9997447973530488	WITHOUT_CLASSIFICATION	2.552026469512746E-4	IMPLEMENTATION
// inside a loop, jump to body	WITHOUT_CLASSIFICATION	0.999982932421743	WITHOUT_CLASSIFICATION	1.7067578257048366E-5	IMPLEMENTATION
// inside a loop, jump to conditional	WITHOUT_CLASSIFICATION	0.9998367564929334	WITHOUT_CLASSIFICATION	1.632435070667021E-4	IMPLEMENTATION
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9979236133627841	WITHOUT_CLASSIFICATION	0.0020763866372159215	IMPLEMENTATION
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999963666116953	WITHOUT_CLASSIFICATION	3.6333883047025267E-6	IMPLEMENTATION
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999963666116953	WITHOUT_CLASSIFICATION	3.6333883047025267E-6	IMPLEMENTATION
// if more than 4 vars, get values array too	WITHOUT_CLASSIFICATION	0.9999974060573752	WITHOUT_CLASSIFICATION	2.593942624823897E-6	IMPLEMENTATION
// retry handling in the rescue block	WITHOUT_CLASSIFICATION	0.9999272672312802	WITHOUT_CLASSIFICATION	7.273276871972093E-5	IMPLEMENTATION
// any exceptions raised must continue to be raised, skipping $! restoration	WITHOUT_CLASSIFICATION	0.9999464668554998	WITHOUT_CLASSIFICATION	5.3533144500072996E-5	IMPLEMENTATION
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9999459796630177	WITHOUT_CLASSIFICATION	5.402033698235704E-5	IMPLEMENTATION
// restore the original exception	WITHOUT_CLASSIFICATION	0.9998679689735072	WITHOUT_CLASSIFICATION	1.3203102649283975E-4	IMPLEMENTATION
// Handle Flow exceptions, just propagating them	WITHOUT_CLASSIFICATION	0.9999908827295338	WITHOUT_CLASSIFICATION	9.117270466193725E-6	IMPLEMENTATION
// rethrow to outer flow catcher	WITHOUT_CLASSIFICATION	0.9999539661447112	WITHOUT_CLASSIFICATION	4.603385528885415E-5	IMPLEMENTATION
// Handle Ruby exceptions (RaiseException)	WITHOUT_CLASSIFICATION	0.9999025117810838	WITHOUT_CLASSIFICATION	9.748821891625607E-5	IMPLEMENTATION
// inside a loop, break out of it // go to end of loop, leaving break value on stack	WITHOUT_CLASSIFICATION	0.9999749650884819	WITHOUT_CLASSIFICATION	2.5034911518096274E-5	IMPLEMENTATION
// false // zero	WITHOUT_CLASSIFICATION	0.999840033944921	WITHOUT_CLASSIFICATION	1.59966055078982E-4	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999720104203086	WITHOUT_CLASSIFICATION	2.7989579691435515E-5	IMPLEMENTATION
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9999459796630177	WITHOUT_CLASSIFICATION	5.402033698235704E-5	IMPLEMENTATION
// restore the original exception	WITHOUT_CLASSIFICATION	0.9998679689735072	WITHOUT_CLASSIFICATION	1.3203102649283975E-4	IMPLEMENTATION
// retry handling in the rescue blocks	WITHOUT_CLASSIFICATION	0.9999471121721402	WITHOUT_CLASSIFICATION	5.2887827859774104E-5	IMPLEMENTATION
// push false	WITHOUT_CLASSIFICATION	0.9997807047868162	WITHOUT_CLASSIFICATION	2.1929521318372314E-4	IMPLEMENTATION
//method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));	WITHOUT_CLASSIFICATION	0.9995736327784496	WITHOUT_CLASSIFICATION	4.263672215503884E-4	IMPLEMENTATION
//method.ifnonnull(trueLabel);	WITHOUT_CLASSIFICATION	0.9997652436395854	WITHOUT_CLASSIFICATION	2.3475636041465735E-4	IMPLEMENTATION
// EQ == 0 (i.e. false)   //[C]	WITHOUT_CLASSIFICATION	0.9999508399842391	WITHOUT_CLASSIFICATION	4.9160015760993175E-5	IMPLEMENTATION
//[C, C] //[C, C, String] //[C, null|C]	WITHOUT_CLASSIFICATION	0.9995736327784496	WITHOUT_CLASSIFICATION	4.263672215503884E-4	IMPLEMENTATION
//[C]	WITHOUT_CLASSIFICATION	0.9999670845889459	WITHOUT_CLASSIFICATION	3.291541105411755E-5	IMPLEMENTATION
// push true	WITHOUT_CLASSIFICATION	0.9993690341444889	WITHOUT_CLASSIFICATION	6.30965855511145E-4	IMPLEMENTATION
// EQ != 0 (i.e. true)	WITHOUT_CLASSIFICATION	0.9999902810182537	WITHOUT_CLASSIFICATION	9.718981746299353E-6	IMPLEMENTATION
//[?, ?] //[?, boolean]	WITHOUT_CLASSIFICATION	0.9997652436395854	WITHOUT_CLASSIFICATION	2.3475636041465735E-4	IMPLEMENTATION
//[RubyModule] //[RubyModule, String]	WITHOUT_CLASSIFICATION	0.9995736327784496	WITHOUT_CLASSIFICATION	4.263672215503884E-4	IMPLEMENTATION
//[boolean]	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
// no receiver for singleton class	WITHOUT_CLASSIFICATION	0.9999859803371063	WITHOUT_CLASSIFICATION	1.4019662893769439E-5	IMPLEMENTATION
// but there's a superclass passed in, use it	WITHOUT_CLASSIFICATION	0.9994285906820201	WITHOUT_CLASSIFICATION	5.714093179799009E-4	IMPLEMENTATION
// we re-set self to the class, but store the old self in a temporary local variable // this is to prevent it GCing in case the singleton is short-lived	WITHOUT_CLASSIFICATION	0.9999942370567122	WITHOUT_CLASSIFICATION	5.762943287882729E-6	IMPLEMENTATION
// set self to the class	WITHOUT_CLASSIFICATION	0.9999747141532174	WITHOUT_CLASSIFICATION	2.528584678266179E-5	IMPLEMENTATION
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9996056109904954	WITHOUT_CLASSIFICATION	3.943890095045327E-4	IMPLEMENTATION
// static scope	WITHOUT_CLASSIFICATION	0.9996909616280009	WITHOUT_CLASSIFICATION	3.090383719991004E-4	IMPLEMENTATION
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999773001094999	WITHOUT_CLASSIFICATION	2.2699890500083517E-5	IMPLEMENTATION
// new instance to invoke run against	WITHOUT_CLASSIFICATION	0.9999595008919063	WITHOUT_CLASSIFICATION	4.0499108093741436E-5	IMPLEMENTATION
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9996056109904954	WITHOUT_CLASSIFICATION	3.943890095045327E-4	IMPLEMENTATION
// static scope	WITHOUT_CLASSIFICATION	0.9996909616280009	WITHOUT_CLASSIFICATION	3.090383719991004E-4	IMPLEMENTATION
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999773001094999	WITHOUT_CLASSIFICATION	2.2699890500083517E-5	IMPLEMENTATION
// finally with exception	WITHOUT_CLASSIFICATION	0.9998917209409127	WITHOUT_CLASSIFICATION	1.0827905908731541E-4	IMPLEMENTATION
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9988059864820223	WITHOUT_CLASSIFICATION	0.0011940135179776027	IMPLEMENTATION
// otherwise, there's a receiver, so we pass that in directly for the sclass logic	WITHOUT_CLASSIFICATION	0.9999633208700591	WITHOUT_CLASSIFICATION	3.667912994091975E-5	IMPLEMENTATION
// original exception is on stack	WITHOUT_CLASSIFICATION	0.999843522206911	WITHOUT_CLASSIFICATION	1.564777930890772E-4	IMPLEMENTATION
// RaiseException is on stack, get RubyException out	WITHOUT_CLASSIFICATION	0.9999702252748189	WITHOUT_CLASSIFICATION	2.9774725181006228E-5	IMPLEMENTATION
// updating position for same line; skip	WITHOUT_CLASSIFICATION	0.9999555098145065	WITHOUT_CLASSIFICATION	4.449018549341504E-5	IMPLEMENTATION
// callbacks to fill in method body	WITHOUT_CLASSIFICATION	0.9999767818840472	WITHOUT_CLASSIFICATION	2.3218115952782983E-5	IMPLEMENTATION
// prepare to call "def" utility method to handle def logic	WITHOUT_CLASSIFICATION	0.996062237979377	WITHOUT_CLASSIFICATION	0.003937762020623038	IMPLEMENTATION
// script object	WITHOUT_CLASSIFICATION	0.9999086006458827	WITHOUT_CLASSIFICATION	9.139935411721989E-5	IMPLEMENTATION
// arities	WITHOUT_CLASSIFICATION	0.9999909584718885	WITHOUT_CLASSIFICATION	9.041528111615727E-6	IMPLEMENTATION
// TODO assuming case is a fixnum	WITHOUT_CLASSIFICATION	0.7618480505172127	WITHOUT_CLASSIFICATION	0.2381519494827873	IMPLEMENTATION
// we have an input case, prepare branching logic	WITHOUT_CLASSIFICATION	0.9999268196103394	WITHOUT_CLASSIFICATION	7.318038966072789E-5	IMPLEMENTATION
// we have optimized switch cases, build a lookupswitch	WITHOUT_CLASSIFICATION	0.9995442048925886	WITHOUT_CLASSIFICATION	4.5579510741136886E-4	IMPLEMENTATION
// checkcast the value; if match, fast path; otherwise proceed to slow logic	WITHOUT_CLASSIFICATION	0.999435423266197	WITHOUT_CLASSIFICATION	5.645767338030412E-4	IMPLEMENTATION
// expression-based tests + bodies	WITHOUT_CLASSIFICATION	0.9999123231416901	WITHOUT_CLASSIFICATION	8.767685830999231E-5	IMPLEMENTATION
// normal case, create a new label	WITHOUT_CLASSIFICATION	0.9999732373193629	WITHOUT_CLASSIFICATION	2.6762680637002592E-5	IMPLEMENTATION
// last conditional case, use defaultCase	WITHOUT_CLASSIFICATION	0.9998326538798263	WITHOUT_CLASSIFICATION	1.673461201736976E-4	IMPLEMENTATION
// do nothing; arity check is done before call	WITHOUT_CLASSIFICATION	0.9999466557362632	WITHOUT_CLASSIFICATION	5.334426373676708E-5	IMPLEMENTATION
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999938353095034	WITHOUT_CLASSIFICATION	6.164690496701774E-6	IMPLEMENTATION
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9998995708202535	WITHOUT_CLASSIFICATION	1.0042917974649321E-4	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.9999962187429544	WITHOUT_CLASSIFICATION	3.7812570456566242E-6	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.9999837427921694	WITHOUT_CLASSIFICATION	1.6257207830615667E-5	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.9999837427921694	WITHOUT_CLASSIFICATION	1.6257207830615667E-5	IMPLEMENTATION
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999610909301075	WITHOUT_CLASSIFICATION	3.890906989247829E-5	IMPLEMENTATION
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999610909301075	WITHOUT_CLASSIFICATION	3.890906989247829E-5	IMPLEMENTATION
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999281679990549	WITHOUT_CLASSIFICATION	7.18320009450701E-5	IMPLEMENTATION
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999281679990549	WITHOUT_CLASSIFICATION	7.18320009450701E-5	IMPLEMENTATION
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999963993831437	WITHOUT_CLASSIFICATION	3.6006168563082302E-6	IMPLEMENTATION
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9992642321641698	WITHOUT_CLASSIFICATION	7.357678358302593E-4	IMPLEMENTATION
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999971662794181	WITHOUT_CLASSIFICATION	2.833720581844308E-6	IMPLEMENTATION
// if there's args left and we want them, assign to rest arg	WITHOUT_CLASSIFICATION	0.9928309822202124	WITHOUT_CLASSIFICATION	0.007169017779787624	IMPLEMENTATION
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999996008976083	WITHOUT_CLASSIFICATION	3.9910239173977746E-7	IMPLEMENTATION
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9996693289178868	WITHOUT_CLASSIFICATION	3.3067108211310434E-4	IMPLEMENTATION
// first, iterate over all pre args	WITHOUT_CLASSIFICATION	0.999969435769546	WITHOUT_CLASSIFICATION	3.0564230453908026E-5	IMPLEMENTATION
// then optional args	WITHOUT_CLASSIFICATION	0.9999598977103815	WITHOUT_CLASSIFICATION	4.01022896184865E-5	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999662332529462	WITHOUT_CLASSIFICATION	3.37667470538211E-5	IMPLEMENTATION
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999963993831437	WITHOUT_CLASSIFICATION	3.6006168563082302E-6	IMPLEMENTATION
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9992642321641698	WITHOUT_CLASSIFICATION	7.357678358302593E-4	IMPLEMENTATION
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999971662794181	WITHOUT_CLASSIFICATION	2.833720581844308E-6	IMPLEMENTATION
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999996008976083	WITHOUT_CLASSIFICATION	3.9910239173977746E-7	IMPLEMENTATION
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9996693289178868	WITHOUT_CLASSIFICATION	3.3067108211310434E-4	IMPLEMENTATION
// if rest args, excluding post args	WITHOUT_CLASSIFICATION	0.9999551837892733	WITHOUT_CLASSIFICATION	4.481621072668506E-5	IMPLEMENTATION
// finally, post args	WITHOUT_CLASSIFICATION	0.9999610119248987	WITHOUT_CLASSIFICATION	3.89880751013188E-5	IMPLEMENTATION
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9964130325361747	WITHOUT_CLASSIFICATION	0.0035869674638252143	IMPLEMENTATION
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9964130325361747	WITHOUT_CLASSIFICATION	0.0035869674638252143	IMPLEMENTATION
// unwrap scopes to appropriate depth	WITHOUT_CLASSIFICATION	0.9998969243147929	WITHOUT_CLASSIFICATION	1.0307568520708504E-4	IMPLEMENTATION
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999969809985771	WITHOUT_CLASSIFICATION	3.019001422885524E-6	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9993497660077006	WITHOUT_CLASSIFICATION	6.502339922993136E-4	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999631805704702	WITHOUT_CLASSIFICATION	3.6819429529917006E-5	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999631805704702	WITHOUT_CLASSIFICATION	3.6819429529917006E-5	IMPLEMENTATION
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999793342086746	WITHOUT_CLASSIFICATION	2.066579132545264E-5	IMPLEMENTATION
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999817748982349	WITHOUT_CLASSIFICATION	1.8225101764996182E-5	IMPLEMENTATION
// store the local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999920135121466	WITHOUT_CLASSIFICATION	7.986487853414622E-6	IMPLEMENTATION
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999599738400062	WITHOUT_CLASSIFICATION	4.002615999383381E-5	IMPLEMENTATION
// return in a class body raises error	WITHOUT_CLASSIFICATION	0.99999699827698	WITHOUT_CLASSIFICATION	3.0017230200640616E-6	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999975620845187	WITHOUT_CLASSIFICATION	2.4379154811830096E-6	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999987191535928	WITHOUT_CLASSIFICATION	1.2808464071636815E-6	IMPLEMENTATION
// end of variable scope	WITHOUT_CLASSIFICATION	0.99989191061841	WITHOUT_CLASSIFICATION	1.0808938159005376E-4	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999113462264543	WITHOUT_CLASSIFICATION	8.865377354575884E-5	IMPLEMENTATION
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999619241860409	WITHOUT_CLASSIFICATION	3.807581395921641E-5	IMPLEMENTATION
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999748696406181	WITHOUT_CLASSIFICATION	2.513035938198331E-5	IMPLEMENTATION
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999793342086746	WITHOUT_CLASSIFICATION	2.066579132545264E-5	IMPLEMENTATION
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999817748982349	WITHOUT_CLASSIFICATION	1.8225101764996182E-5	IMPLEMENTATION
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999599738400062	WITHOUT_CLASSIFICATION	4.002615999383381E-5	IMPLEMENTATION
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9928334136639195	WITHOUT_CLASSIFICATION	0.007166586336080503	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9993497660077006	WITHOUT_CLASSIFICATION	6.502339922993136E-4	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9993497660077006	WITHOUT_CLASSIFICATION	6.502339922993136E-4	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999720104203086	WITHOUT_CLASSIFICATION	2.7989579691435515E-5	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999720104203086	WITHOUT_CLASSIFICATION	2.7989579691435515E-5	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9816354038692313	WITHOUT_CLASSIFICATION	0.018364596130768684	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9816354038692313	WITHOUT_CLASSIFICATION	0.018364596130768684	IMPLEMENTATION
// store the local vars in a local variable if there are any	WITHOUT_CLASSIFICATION	0.9999995716045844	WITHOUT_CLASSIFICATION	4.283954157112127E-7	IMPLEMENTATION
// if more than 4 locals, get and populate the locals array too	WITHOUT_CLASSIFICATION	0.9999269673148816	WITHOUT_CLASSIFICATION	7.303268511841187E-5	IMPLEMENTATION
// fill local vars with nil, to avoid checking every access.	WITHOUT_CLASSIFICATION	0.9975063118311776	WITHOUT_CLASSIFICATION	0.002493688168822355	IMPLEMENTATION
// default for starting tempVariableIndex is ok	WITHOUT_CLASSIFICATION	0.999989944728378	WITHOUT_CLASSIFICATION	1.0055271622033067E-5	IMPLEMENTATION
// store the local vars in a local variable for preparing the class (using previous scope)	WITHOUT_CLASSIFICATION	0.9999987145608005	WITHOUT_CLASSIFICATION	1.285439199545364E-6	IMPLEMENTATION
// store the new local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999914078037855	WITHOUT_CLASSIFICATION	8.592196214496921E-6	IMPLEMENTATION
// in 1.8 mode, this will be a RubyArray containing the arguments // in 1.9 mode, this will be an IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999976980545221	WITHOUT_CLASSIFICATION	2.3019454778569124E-6	IMPLEMENTATION
// no variable initialization, because we're reusing parent's scope (flat)	WITHOUT_CLASSIFICATION	0.9999758292760875	WITHOUT_CLASSIFICATION	2.417072391253249E-5	IMPLEMENTATION
// for specific-index cases, clean up non-expression values	WITHOUT_CLASSIFICATION	0.9999962369210083	WITHOUT_CLASSIFICATION	3.7630789916321692E-6	IMPLEMENTATION
// set up a local Ruby variable	WITHOUT_CLASSIFICATION	0.9999836828676384	WITHOUT_CLASSIFICATION	1.6317132361522252E-5	IMPLEMENTATION
// if that succeeds, the others should as well	WITHOUT_CLASSIFICATION	0.999996082367072	WITHOUT_CLASSIFICATION	3.917632927842707E-6	IMPLEMENTATION
// verify the class	WITHOUT_CLASSIFICATION	0.9998074836771406	WITHOUT_CLASSIFICATION	1.9251632285942282E-4	IMPLEMENTATION
// create dir if necessary	WITHOUT_CLASSIFICATION	0.9999350713574777	WITHOUT_CLASSIFICATION	6.492864252231035E-5	IMPLEMENTATION
// Create the class with the appropriate class name and source file	WITHOUT_CLASSIFICATION	0.9999884151987654	WITHOUT_CLASSIFICATION	1.1584801234642611E-5	IMPLEMENTATION
// add setPosition impl, which stores filename as constant to speed updates	WITHOUT_CLASSIFICATION	0.9999918858353815	WITHOUT_CLASSIFICATION	8.114164618538238E-6	IMPLEMENTATION
// thread context	WITHOUT_CLASSIFICATION	0.9983908458211176	WITHOUT_CLASSIFICATION	0.001609154178882375	IMPLEMENTATION
// line number	WITHOUT_CLASSIFICATION	0.999312017522649	WITHOUT_CLASSIFICATION	6.879824773509673E-4	IMPLEMENTATION
// invoke __file__ with threadcontext, self, args (null), and block (null)	WITHOUT_CLASSIFICATION	0.9998443429890346	WITHOUT_CLASSIFICATION	1.5565701096542536E-4	IMPLEMENTATION
// load always uses IRubyObject[], so simple closure offset calculation here	WITHOUT_CLASSIFICATION	0.999919140037893	WITHOUT_CLASSIFICATION	8.085996210699458E-5	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999987191535928	WITHOUT_CLASSIFICATION	1.2808464071636815E-6	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999113462264543	WITHOUT_CLASSIFICATION	8.865377354575884E-5	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999489427705954	WITHOUT_CLASSIFICATION	5.1057229404627363E-5	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999882628735118	WITHOUT_CLASSIFICATION	1.1737126488232616E-5	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999882628735118	WITHOUT_CLASSIFICATION	1.1737126488232616E-5	IMPLEMENTATION
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9928334136639195	WITHOUT_CLASSIFICATION	0.007166586336080503	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9993497660077006	WITHOUT_CLASSIFICATION	6.502339922993136E-4	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999720104203086	WITHOUT_CLASSIFICATION	2.7989579691435515E-5	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9816354038692313	WITHOUT_CLASSIFICATION	0.018364596130768684	IMPLEMENTATION
// add Script#run impl, used for running this script with a specified threadcontext and self // root method of a script is always in __file__ method	WITHOUT_CLASSIFICATION	0.999990147153766	WITHOUT_CLASSIFICATION	9.852846233988602E-6	IMPLEMENTATION
// add main impl, used for detached or command-line execution of this script with a new runtime // root method of a script is always in stub0, method0	WITHOUT_CLASSIFICATION	0.9999816943934479	WITHOUT_CLASSIFICATION	1.8305606552205575E-5	IMPLEMENTATION
// construct static scope list of names	WITHOUT_CLASSIFICATION	0.9999385212605456	WITHOUT_CLASSIFICATION	6.147873945442273E-5	IMPLEMENTATION
// JRUBY-3014: make __FILE__ dynamically determined at load time, but // we provide a reasonable default here	WITHOUT_CLASSIFICATION	0.9997994010968857	WITHOUT_CLASSIFICATION	2.0059890311420649E-4	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.999981107939951	WITHOUT_CLASSIFICATION	1.8892060049017467E-5	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.999981107939951	WITHOUT_CLASSIFICATION	1.8892060049017467E-5	IMPLEMENTATION
// lazily create class init only if necessary	WITHOUT_CLASSIFICATION	0.9999885979865571	WITHOUT_CLASSIFICATION	1.1402013442793432E-5	IMPLEMENTATION
// boxed arg list __file__	WITHOUT_CLASSIFICATION	0.9992744267406943	WITHOUT_CLASSIFICATION	7.255732593056798E-4	IMPLEMENTATION
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999511740863831	WITHOUT_CLASSIFICATION	4.8825913616880704E-5	IMPLEMENTATION
// exact arg list __file__	WITHOUT_CLASSIFICATION	0.999331664781507	WITHOUT_CLASSIFICATION	6.683352184930603E-4	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.9996494074590501	WITHOUT_CLASSIFICATION	3.505925409499167E-4	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.9996494074590501	WITHOUT_CLASSIFICATION	3.505925409499167E-4	IMPLEMENTATION
// not using a new scope, use saved one for a flat closure	WITHOUT_CLASSIFICATION	0.9979655976525598	WITHOUT_CLASSIFICATION	0.002034402347440188	IMPLEMENTATION
// normal closure	WITHOUT_CLASSIFICATION	0.9992284832687232	WITHOUT_CLASSIFICATION	7.715167312769112E-4	IMPLEMENTATION
// end of scoping for closure's vars	WITHOUT_CLASSIFICATION	0.9998833090974496	WITHOUT_CLASSIFICATION	1.1669090255038604E-4	IMPLEMENTATION
// we only need full-on redo exception handling if there's logic that might produce it	WITHOUT_CLASSIFICATION	0.9985721342464241	WITHOUT_CLASSIFICATION	0.001427865753575858	IMPLEMENTATION
// handle redos by restarting the block	WITHOUT_CLASSIFICATION	0.9992639461591105	WITHOUT_CLASSIFICATION	7.36053840889567E-4	IMPLEMENTATION
// jump back to the top of the main body of this closure	WITHOUT_CLASSIFICATION	0.9995997802567693	WITHOUT_CLASSIFICATION	4.002197432307364E-4	IMPLEMENTATION
// Ruby name 	WITHOUT_CLASSIFICATION	0.9993216891092251	WITHOUT_CLASSIFICATION	6.78310890774873E-4	IMPLEMENTATION
// Accumulate call arguments	WITHOUT_CLASSIFICATION	0.9998981789841763	WITHOUT_CLASSIFICATION	1.0182101582358968E-4	IMPLEMENTATION
// Fix FileNameCompletor to work mid-line	WITHOUT_CLASSIFICATION	0.9991588671883602	WITHOUT_CLASSIFICATION	8.411328116397719E-4	IMPLEMENTATION
// We need to ensure that the variable names generated here cannot conflict with ruby variable names! // Hence the "%" tthat is appended to the beginning!	WITHOUT_CLASSIFICATION	0.9999354786549509	WITHOUT_CLASSIFICATION	6.452134504903874E-5	IMPLEMENTATION
// Does this method define code?  // Default is yes -- which basically leads to pessimistic but safe optimizations // But, for library and internal methods, this might be false.	WITHOUT_CLASSIFICATION	0.9999997689574209	WITHOUT_CLASSIFICATION	2.310425789750296E-7	IMPLEMENTATION
// Map of constants defined in this scope (not valid for methods!)	WITHOUT_CLASSIFICATION	0.9999994393900117	WITHOUT_CLASSIFICATION	5.606099883083233E-7	IMPLEMENTATION
// NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner // with outer loops encountered before inner loops, and inner loops finished before outer ones. // // So, we can keep track of loops in a loop stack which  keeps track of loops as they are encountered. // This lets us implement next/redo/break/retry easily for the non-closure cases	WITHOUT_CLASSIFICATION	0.999999815441839	WITHOUT_CLASSIFICATION	1.8455816086602007E-7	IMPLEMENTATION
// Map keep track of the next available variable index for a particular prefix	WITHOUT_CLASSIFICATION	0.9998905234387738	WITHOUT_CLASSIFICATION	1.0947656122611859E-4	IMPLEMENTATION
// Control flow graph for this scope	WITHOUT_CLASSIFICATION	0.9999265100948693	WITHOUT_CLASSIFICATION	7.348990513066841E-5	IMPLEMENTATION
//        _lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;	WITHOUT_CLASSIFICATION	0.9992621620858253	WITHOUT_CLASSIFICATION	7.378379141747556E-4	IMPLEMENTATION
// List of modules, classes, and methods defined in this scope!	WITHOUT_CLASSIFICATION	0.9999853535136639	WITHOUT_CLASSIFICATION	1.4646486336149038E-5	IMPLEMENTATION
// Returns the containing parent scope!	WITHOUT_CLASSIFICATION	0.9998048241216148	WITHOUT_CLASSIFICATION	1.9517587838536522E-4	IMPLEMENTATION
// Insert nesting level to ensure variable names don't conflict across nested scopes! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //        return new Variable(prefix + _lexicalNestingLevel + "_" + idx);	WITHOUT_CLASSIFICATION	0.9999790837936559	WITHOUT_CLASSIFICATION	2.091620634421421E-5	IMPLEMENTATION
// get "self"	WITHOUT_CLASSIFICATION	0.9997464769832551	WITHOUT_CLASSIFICATION	2.535230167448591E-4	IMPLEMENTATION
// variable is never read, variable is never live	WITHOUT_CLASSIFICATION	0.9996708345247592	WITHOUT_CLASSIFICATION	3.291654752407652E-4	IMPLEMENTATION
// inline script	WITHOUT_CLASSIFICATION	0.9997382330983626	WITHOUT_CLASSIFICATION	2.61766901637446E-4	IMPLEMENTATION
// inline script	WITHOUT_CLASSIFICATION	0.9997382330983626	WITHOUT_CLASSIFICATION	2.61766901637446E-4	IMPLEMENTATION
// This method is called to build assignments for a multiple-assignment instruction	WITHOUT_CLASSIFICATION	0.9999892440583714	WITHOUT_CLASSIFICATION	1.0755941628590682E-5	IMPLEMENTATION
// Build the class body!	WITHOUT_CLASSIFICATION	0.9999665757768554	WITHOUT_CLASSIFICATION	3.3424223144553844E-5	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999489082678287	WITHOUT_CLASSIFICATION	5.1091732171307824E-5	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999489082678287	WITHOUT_CLASSIFICATION	5.1091732171307824E-5	IMPLEMENTATION
// SSS FIXME: Can this ever be null?	WITHOUT_CLASSIFICATION	0.912056635185105	WITHOUT_CLASSIFICATION	0.08794336481489494	IMPLEMENTATION
// Run the pass on the passed in scope!	WITHOUT_CLASSIFICATION	0.9999108420462699	WITHOUT_CLASSIFICATION	8.915795373008228E-5	IMPLEMENTATION
// done // done // done // done	WITHOUT_CLASSIFICATION	0.9998912757586024	WITHOUT_CLASSIFICATION	1.087242413977128E-4	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999996012918024	WITHOUT_CLASSIFICATION	3.9870819760011006E-7	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999996012918024	WITHOUT_CLASSIFICATION	3.9870819760011006E-7	IMPLEMENTATION
// This method is called to build arguments for a block!	WITHOUT_CLASSIFICATION	0.9999918204250475	WITHOUT_CLASSIFICATION	8.179574952355227E-6	IMPLEMENTATION
// build first node (and ignore its result) and then second node	WITHOUT_CLASSIFICATION	0.9998791268780172	WITHOUT_CLASSIFICATION	1.20873121982731E-4	IMPLEMENTATION
// build first node only and return false	WITHOUT_CLASSIFICATION	0.9999735878588579	WITHOUT_CLASSIFICATION	2.6412141142029014E-5	IMPLEMENTATION
// Value of the last expression in the block 	WITHOUT_CLASSIFICATION	0.9999876723744402	WITHOUT_CLASSIFICATION	1.2327625559790138E-5	IMPLEMENTATION
// If this is not a closure, the break is equivalent to jumping to the loop end label	WITHOUT_CLASSIFICATION	0.9994490128905684	WITHOUT_CLASSIFICATION	5.509871094316386E-4	IMPLEMENTATION
// get the incoming case value	WITHOUT_CLASSIFICATION	0.9999888466819679	WITHOUT_CLASSIFICATION	1.11533180321531E-5	IMPLEMENTATION
// the CASE instruction	WITHOUT_CLASSIFICATION	0.9999399046634196	WITHOUT_CLASSIFICATION	6.009533658026323E-5	IMPLEMENTATION
// lists to aggregate variables and bodies for whens	WITHOUT_CLASSIFICATION	0.9999758589102868	WITHOUT_CLASSIFICATION	2.4141089713177098E-5	IMPLEMENTATION
// build each "when"	WITHOUT_CLASSIFICATION	0.9996733619579315	WITHOUT_CLASSIFICATION	3.2663804206838645E-4	IMPLEMENTATION
// multiple conditions for when	WITHOUT_CLASSIFICATION	0.9999561306042287	WITHOUT_CLASSIFICATION	4.3869395771381646E-5	IMPLEMENTATION
// build "else" if it exists	WITHOUT_CLASSIFICATION	0.999975273220346	WITHOUT_CLASSIFICATION	2.472677965414794E-5	IMPLEMENTATION
// now emit bodies	WITHOUT_CLASSIFICATION	0.9997618977937163	WITHOUT_CLASSIFICATION	2.3810220628362562E-4	IMPLEMENTATION
// close it out	WITHOUT_CLASSIFICATION	0.9999522417152089	WITHOUT_CLASSIFICATION	4.775828479123693E-5	IMPLEMENTATION
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999726955927581	WITHOUT_CLASSIFICATION	2.7304407241885852E-5	IMPLEMENTATION
// Do we have a dynamic container?	WITHOUT_CLASSIFICATION	0.9996171476352774	WITHOUT_CLASSIFICATION	3.828523647225009E-4	IMPLEMENTATION
// Return a meta object corresponding to the class	WITHOUT_CLASSIFICATION	0.9999896049670626	WITHOUT_CLASSIFICATION	1.0395032937439029E-5	IMPLEMENTATION
// 1. Load the module first (lhs of node) // 2. Then load the constant from the module	WITHOUT_CLASSIFICATION	0.9999490120268453	WITHOUT_CLASSIFICATION	5.098797315468923E-5	IMPLEMENTATION
// Build IR for args	WITHOUT_CLASSIFICATION	0.9998639536029734	WITHOUT_CLASSIFICATION	1.3604639702651864E-4	IMPLEMENTATION
// Build IR for body	WITHOUT_CLASSIFICATION	0.9999729360067716	WITHOUT_CLASSIFICATION	2.7063993228277972E-5	IMPLEMENTATION
// if root of method is rescue, build as a light rescue	WITHOUT_CLASSIFICATION	0.9999964282662518	WITHOUT_CLASSIFICATION	3.571733748228582E-6	IMPLEMENTATION
// Instance method	WITHOUT_CLASSIFICATION	0.9988439525709596	WITHOUT_CLASSIFICATION	0.0011560474290404283	IMPLEMENTATION
// Class method	WITHOUT_CLASSIFICATION	0.9995322393278495	WITHOUT_CLASSIFICATION	4.677606721504715E-4	IMPLEMENTATION
// Other args begin at index 1	WITHOUT_CLASSIFICATION	0.9998375083659528	WITHOUT_CLASSIFICATION	1.6249163404728892E-4	IMPLEMENTATION
// Both for fixed arity and variable arity methods	WITHOUT_CLASSIFICATION	0.9999607635113607	WITHOUT_CLASSIFICATION	3.923648863930245E-5	IMPLEMENTATION
// Now for the rest	WITHOUT_CLASSIFICATION	0.9994210135482177	WITHOUT_CLASSIFICATION	5.789864517823766E-4	IMPLEMENTATION
// Jump to 'l' if this arg is not null.  If null, fall through and build the default value!	WITHOUT_CLASSIFICATION	0.9999814670303695	WITHOUT_CLASSIFICATION	1.8532969630440597E-5	IMPLEMENTATION
// This is not an expression that computes anything	WITHOUT_CLASSIFICATION	0.990808712189264	WITHOUT_CLASSIFICATION	0.009191287810735886	IMPLEMENTATION
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999258233214652	WITHOUT_CLASSIFICATION	7.417667853488327E-5	IMPLEMENTATION
// Build args	WITHOUT_CLASSIFICATION	0.9996580314279955	WITHOUT_CLASSIFICATION	3.419685720045616E-4	IMPLEMENTATION
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999970559584281	WITHOUT_CLASSIFICATION	2.9440415717605096E-6	IMPLEMENTATION
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999858928671861	WITHOUT_CLASSIFICATION	1.4107132813836762E-5	IMPLEMENTATION
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999726955927581	WITHOUT_CLASSIFICATION	2.7304407241885852E-5	IMPLEMENTATION
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999258233214652	WITHOUT_CLASSIFICATION	7.417667853488327E-5	IMPLEMENTATION
// Build args	WITHOUT_CLASSIFICATION	0.9996580314279955	WITHOUT_CLASSIFICATION	3.419685720045616E-4	IMPLEMENTATION
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999858928671861	WITHOUT_CLASSIFICATION	1.4107132813836762E-5	IMPLEMENTATION
// Get the container for this new module	WITHOUT_CLASSIFICATION	0.9999289051568502	WITHOUT_CLASSIFICATION	7.109484314986496E-5	IMPLEMENTATION
// Build the new module	WITHOUT_CLASSIFICATION	0.9999168296700433	WITHOUT_CLASSIFICATION	8.317032995666525E-5	IMPLEMENTATION
// Build the module body	WITHOUT_CLASSIFICATION	0.9999853452710797	WITHOUT_CLASSIFICATION	1.4654728920238168E-5	IMPLEMENTATION
// First, build an assignment for a splat, if any, with the rest of the args!	WITHOUT_CLASSIFICATION	0.9999910397007186	WITHOUT_CLASSIFICATION	8.960299281463597E-6	IMPLEMENTATION
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999785537215382	WITHOUT_CLASSIFICATION	2.1446278461750932E-5	IMPLEMENTATION
// If a closure, the next is simply a return from the closure! // If a regular loop, the next is simply a jump to the end of the iteration	WITHOUT_CLASSIFICATION	0.9999720724616664	WITHOUT_CLASSIFICATION	2.7927538333480416E-5	IMPLEMENTATION
// get attr	WITHOUT_CLASSIFICATION	0.9997464769832551	WITHOUT_CLASSIFICATION	2.535230167448591E-4	IMPLEMENTATION
// call operator	WITHOUT_CLASSIFICATION	0.9991846800704833	WITHOUT_CLASSIFICATION	8.153199295166985E-4	IMPLEMENTATION
// set attr	WITHOUT_CLASSIFICATION	0.999665025356578	WITHOUT_CLASSIFICATION	3.349746434220019E-4	IMPLEMENTATION
// Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, false, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9998487093726803	WITHOUT_CLASSIFICATION	1.5129062731959744E-4	IMPLEMENTATION
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999824663827295	WITHOUT_CLASSIFICATION	1.753361727050012E-5	IMPLEMENTATION
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999824663827295	WITHOUT_CLASSIFICATION	1.753361727050012E-5	IMPLEMENTATION
// if v1 is defined and true, we are done! 	WITHOUT_CLASSIFICATION	0.9999954453540072	WITHOUT_CLASSIFICATION	4.554645992763158E-6	IMPLEMENTATION
// build first node only and return true	WITHOUT_CLASSIFICATION	0.9999239782904329	WITHOUT_CLASSIFICATION	7.602170956710665E-5	IMPLEMENTATION
// build first node as non-expr and build second node	WITHOUT_CLASSIFICATION	0.9999651149099558	WITHOUT_CLASSIFICATION	3.488509004429645E-5	IMPLEMENTATION
// Top-level script!	WITHOUT_CLASSIFICATION	0.999598425807291	WITHOUT_CLASSIFICATION	4.015741927090063E-4	IMPLEMENTATION
// we won't enter the loop -- just build the condition node	WITHOUT_CLASSIFICATION	0.9999995167577591	WITHOUT_CLASSIFICATION	4.832422407776514E-7	IMPLEMENTATION
/* ----------- Private Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999838014937958	WITHOUT_CLASSIFICATION	1.6198506204244696E-5	IMPLEMENTATION
// What handles warnings	WITHOUT_CLASSIFICATION	0.9999288498867399	WITHOUT_CLASSIFICATION	7.115011326010077E-5	IMPLEMENTATION
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999994991111394	WITHOUT_CLASSIFICATION	5.008888606682036E-7	IMPLEMENTATION
// For closures, a redo is a jump to the beginning of the closure // For non-closures, a redo is a jump to the beginning of the loop	WITHOUT_CLASSIFICATION	0.999984326120146	WITHOUT_CLASSIFICATION	1.5673879854000713E-5	IMPLEMENTATION
// The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999943761888531	WITHOUT_CLASSIFICATION	5.623811146910389E-6	IMPLEMENTATION
// Dummy top-level method for the class	WITHOUT_CLASSIFICATION	0.9999421864663319	WITHOUT_CLASSIFICATION	5.781353366806199E-5	IMPLEMENTATION
// Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.999996737575334	WITHOUT_CLASSIFICATION	3.262424665963475E-6	IMPLEMENTATION
// ------ Define the operations below ----	WITHOUT_CLASSIFICATION	0.9998573717076588	WITHOUT_CLASSIFICATION	1.4262829234131492E-4	IMPLEMENTATION
// value copy and type conversion operations	WITHOUT_CLASSIFICATION	0.9999873426035663	WITHOUT_CLASSIFICATION	1.2657396433725654E-5	IMPLEMENTATION
// alu operations	WITHOUT_CLASSIFICATION	0.999133618937112	WITHOUT_CLASSIFICATION	8.66381062888075E-4	IMPLEMENTATION
// method handle, arg receive, return value, and  call instructions	WITHOUT_CLASSIFICATION	0.9979420518368406	WITHOUT_CLASSIFICATION	0.0020579481631594946	IMPLEMENTATION
// closure instructions	WITHOUT_CLASSIFICATION	0.9999361506769948	WITHOUT_CLASSIFICATION	6.384932300515252E-5	IMPLEMENTATION
// eval instructions	WITHOUT_CLASSIFICATION	0.9995984967097662	WITHOUT_CLASSIFICATION	4.0150329023380676E-4	IMPLEMENTATION
// def instructions	WITHOUT_CLASSIFICATION	0.9995985021817191	WITHOUT_CLASSIFICATION	4.01497818280964E-4	IMPLEMENTATION
// exception instructions	WITHOUT_CLASSIFICATION	0.999918046830944	WITHOUT_CLASSIFICATION	8.195316905593472E-5	IMPLEMENTATION
// Loads	WITHOUT_CLASSIFICATION	0.9999909584718885	WITHOUT_CLASSIFICATION	9.041528111615727E-6	IMPLEMENTATION
// Stores	WITHOUT_CLASSIFICATION	0.9999909584718885	WITHOUT_CLASSIFICATION	9.041528111615727E-6	IMPLEMENTATION
// jump and branch operations	WITHOUT_CLASSIFICATION	0.9998975908144244	WITHOUT_CLASSIFICATION	1.024091855756885E-4	IMPLEMENTATION
// others	WITHOUT_CLASSIFICATION	0.9999915585541344	WITHOUT_CLASSIFICATION	8.441445865662915E-6	IMPLEMENTATION
// a case/when branch	WITHOUT_CLASSIFICATION	0.9999537006954303	WITHOUT_CLASSIFICATION	4.629930456976295E-5	IMPLEMENTATION
// optimization guards	WITHOUT_CLASSIFICATION	0.9999360347701872	WITHOUT_CLASSIFICATION	6.396522981281369E-5	IMPLEMENTATION
// By default, call instructions cannot be deleted even if their results aren't used by anyone // unless we know more about what the call is, what it does, etc. // Similarly for evals, stores, returns.	WITHOUT_CLASSIFICATION	0.911003787897494	WITHOUT_CLASSIFICATION	0.08899621210250598	IMPLEMENTATION
// Returns the containing parent scope -- can be a dynamic value (hence Operand)!	WITHOUT_CLASSIFICATION	0.9999883627504109	WITHOUT_CLASSIFICATION	1.1637249589175247E-5	IMPLEMENTATION
// scripts	WITHOUT_CLASSIFICATION	0.9999939990201601	WITHOUT_CLASSIFICATION	6.000979839936581E-6	IMPLEMENTATION
// scripts and modules	WITHOUT_CLASSIFICATION	0.9999833552073988	WITHOUT_CLASSIFICATION	1.664479260120439E-5	IMPLEMENTATION
// scripts, classes, and modules	WITHOUT_CLASSIFICATION	0.9999563292798564	WITHOUT_CLASSIFICATION	4.367072014347139E-5	IMPLEMENTATION
// methods and closures	WITHOUT_CLASSIFICATION	0.9999536428007632	WITHOUT_CLASSIFICATION	4.6357199236809075E-5	IMPLEMENTATION
// create a new variable using the prefix	WITHOUT_CLASSIFICATION	0.9999183103957835	WITHOUT_CLASSIFICATION	8.168960421657456E-5	IMPLEMENTATION
// create a new temporary variable	WITHOUT_CLASSIFICATION	0.9998626352922351	WITHOUT_CLASSIFICATION	1.3736470776483934E-4	IMPLEMENTATION
// Get a new label using a generic prefix	WITHOUT_CLASSIFICATION	0.9999944656012066	WITHOUT_CLASSIFICATION	5.5343987933522176E-6	IMPLEMENTATION
// Build the CFG for this scope -- supported only by methods & closures	WITHOUT_CLASSIFICATION	0.9999990649983668	WITHOUT_CLASSIFICATION	9.350016332664048E-7	IMPLEMENTATION
// Get the control flow graph for this scope -- only valid for methods & closures	WITHOUT_CLASSIFICATION	0.9999931681551639	WITHOUT_CLASSIFICATION	6.8318448360297495E-6	IMPLEMENTATION
// While processing loops, this returns the loop that we are processing.	WITHOUT_CLASSIFICATION	0.9999696787173146	WITHOUT_CLASSIFICATION	3.0321282685422284E-5	IMPLEMENTATION
// Record the loop we are beginning to process	WITHOUT_CLASSIFICATION	0.9999813476566952	WITHOUT_CLASSIFICATION	1.865234330484518E-5	IMPLEMENTATION
// Indicate that we are done processing the loop	WITHOUT_CLASSIFICATION	0.9998859031597298	WITHOUT_CLASSIFICATION	1.1409684027021903E-4	IMPLEMENTATION
// Run the passed in compiler pass on this scope!	WITHOUT_CLASSIFICATION	0.999816815504853	WITHOUT_CLASSIFICATION	1.8318449514698236E-4	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.99866317810917	WITHOUT_CLASSIFICATION	0.001336821890829982	IMPLEMENTATION
// Readline	WITHOUT_CLASSIFICATION	0.999598425807291	WITHOUT_CLASSIFICATION	4.015741927090063E-4	IMPLEMENTATION
// If the cfg of the method is around, print the CFG!	WITHOUT_CLASSIFICATION	0.999971900245617	WITHOUT_CLASSIFICATION	2.809975438296326E-5	IMPLEMENTATION
// Optimize some core class method calls for constant values	WITHOUT_CLASSIFICATION	0.9999758456833457	WITHOUT_CLASSIFICATION	2.415431665427989E-5	IMPLEMENTATION
// If 'r' is not a constant, it could actually be a compound value! // Look in our value map to see if we have a simplified value for the receiver.	WITHOUT_CLASSIFICATION	0.9999991262144013	WITHOUT_CLASSIFICATION	8.737855987377016E-7	IMPLEMENTATION
// Check if we can optimize this call based on the receiving method and receiver type // Use the simplified receiver!	WITHOUT_CLASSIFICATION	0.9953571777747952	WITHOUT_CLASSIFICATION	0.004642822225204812	IMPLEMENTATION
// If we got a simplified value, mark the call dead and insert a copy in its place!	WITHOUT_CLASSIFICATION	0.9999978869909331	WITHOUT_CLASSIFICATION	2.113009067064124E-6	IMPLEMENTATION
// If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!	WITHOUT_CLASSIFICATION	0.9999971786972505	WITHOUT_CLASSIFICATION	2.8213027495897697E-6	IMPLEMENTATION
/* ----------- Public abstract methods ---------- */	WITHOUT_CLASSIFICATION	0.999982589733965	WITHOUT_CLASSIFICATION	1.741026603498902E-5	IMPLEMENTATION
/* ----------- Public methods with a default implementation ---------- */	WITHOUT_CLASSIFICATION	0.9999712795603479	WITHOUT_CLASSIFICATION	2.8720439652123213E-5	IMPLEMENTATION
// Compute meet over all "sources" and compute "destination" basic blocks that should then be processed.  // sources & targets depends on direction of the data flow problem	WITHOUT_CLASSIFICATION	0.9999996677897804	WITHOUT_CLASSIFICATION	3.3221021964357694E-7	IMPLEMENTATION
// If the solution has changed, add "dsts" to the work list. // No duplicates please which is why we have bbset.	WITHOUT_CLASSIFICATION	0.9998865072410069	WITHOUT_CLASSIFICATION	1.1349275899306382E-4	IMPLEMENTATION
/* --------- Protected fields/methods below --------- */	WITHOUT_CLASSIFICATION	0.9999877162804562	WITHOUT_CLASSIFICATION	1.2283719543857185E-5	IMPLEMENTATION
// Dataflow problem with which this node is associated // CFG node for which this node contains info.	WITHOUT_CLASSIFICATION	0.9999553646675744	WITHOUT_CLASSIFICATION	4.463533242548647E-5	IMPLEMENTATION
/* -------------- Public fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999921219676461	WITHOUT_CLASSIFICATION	7.878032353839947E-6	IMPLEMENTATION
// ------- Abstract methods without a default implementation -------	WITHOUT_CLASSIFICATION	0.9998388511967272	WITHOUT_CLASSIFICATION	1.611488032728374E-4	IMPLEMENTATION
// ------- Default implementation methods below -------	WITHOUT_CLASSIFICATION	0.9995495571196222	WITHOUT_CLASSIFICATION	4.504428803777611E-4	IMPLEMENTATION
/* Compute Meet Over All Paths solution for this dataflow problem on the input CFG.     * This implements a standard worklist algorithm. */	WITHOUT_CLASSIFICATION	0.9999798861782173	WITHOUT_CLASSIFICATION	2.0113821782659956E-5	IMPLEMENTATION
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9999389049269982	WITHOUT_CLASSIFICATION	6.109507300186765E-5	IMPLEMENTATION
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9999389049269982	WITHOUT_CLASSIFICATION	6.109507300186765E-5	IMPLEMENTATION
/* -------------- Packaged/protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999915056835132	WITHOUT_CLASSIFICATION	8.494316486713762E-6	IMPLEMENTATION
// We want unique ids for dataflow variables	WITHOUT_CLASSIFICATION	0.9997757982603293	WITHOUT_CLASSIFICATION	2.2420173967085605E-4	IMPLEMENTATION
/* -------------- Protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999915149897182	WITHOUT_CLASSIFICATION	8.485010281800375E-6	IMPLEMENTATION
/* -------------- Private fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999927208769422	WITHOUT_CLASSIFICATION	7.2791230577809275E-6	IMPLEMENTATION
// Initialize all flow graph nodes 	WITHOUT_CLASSIFICATION	0.9999319679213935	WITHOUT_CLASSIFICATION	6.80320786064766E-5	IMPLEMENTATION
/* Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses */	WITHOUT_CLASSIFICATION	0.9999998644183142	WITHOUT_CLASSIFICATION	1.3558168574337387E-7	IMPLEMENTATION
/* ******************** PUBLIC INTERFACE ******************* */	WITHOUT_CLASSIFICATION	0.9999785573213178	WITHOUT_CLASSIFICATION	2.1442678682142487E-5	IMPLEMENTATION
// Unique ID assigned to this variable	WITHOUT_CLASSIFICATION	0.9992862029544969	WITHOUT_CLASSIFICATION	7.137970455030477E-4	IMPLEMENTATION
// start out with a default RubyObject allocator	WITHOUT_CLASSIFICATION	0.9999956785310934	WITHOUT_CLASSIFICATION	4.321468906586388E-6	IMPLEMENTATION
// switch to an allocator based on a default constructor	WITHOUT_CLASSIFICATION	0.9999848322783687	WITHOUT_CLASSIFICATION	1.5167721631339447E-5	IMPLEMENTATION
/* ----------- Public Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999824687312885	WITHOUT_CLASSIFICATION	1.7531268711485174E-5	IMPLEMENTATION
// class or module	WITHOUT_CLASSIFICATION	0.9998118767162837	WITHOUT_CLASSIFICATION	1.8812328371635252E-4	IMPLEMENTATION
// OUT = UNION(IN(succs))	WITHOUT_CLASSIFICATION	0.9999368167451792	WITHOUT_CLASSIFICATION	6.318325482075599E-5	IMPLEMENTATION
// Traverse the instructions in this basic block in reverse order!	WITHOUT_CLASSIFICATION	0.9999494204117438	WITHOUT_CLASSIFICATION	5.057958825603982E-5	IMPLEMENTATION
// v is defined => It is no longer live before 'i'	WITHOUT_CLASSIFICATION	0.9999993045430935	WITHOUT_CLASSIFICATION	6.9545690657067E-7	IMPLEMENTATION
// IN is the same!	WITHOUT_CLASSIFICATION	0.9998241691920081	WITHOUT_CLASSIFICATION	1.7583080799189009E-4	IMPLEMENTATION
// IN changed!	WITHOUT_CLASSIFICATION	0.9996078156177368	WITHOUT_CLASSIFICATION	3.9218438226320694E-4	IMPLEMENTATION
/* ---------- Protected / package fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999932452715081	WITHOUT_CLASSIFICATION	6.754728491898127E-6	IMPLEMENTATION
// If 'v' is not live at the instruction site, and it has no side effects, mark it dead!	WITHOUT_CLASSIFICATION	0.9999256010433932	WITHOUT_CLASSIFICATION	7.439895660678749E-5	IMPLEMENTATION
// Do not mark this instruction's operands live if the instruction itself is dead!	WITHOUT_CLASSIFICATION	0.9985368969524759	WITHOUT_CLASSIFICATION	0.0014631030475240228	IMPLEMENTATION
/* ---------- Private fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999832553040997	WITHOUT_CLASSIFICATION	1.6744695900398786E-5	IMPLEMENTATION
// Variables live at entry of this node // Variables live at exit of node // Temporary set of live variables // Size of the "_in" and "_out" bit sets 	WITHOUT_CLASSIFICATION	0.999553160357249	WITHOUT_CLASSIFICATION	4.468396427510058E-4	IMPLEMENTATION
// Used during optimization passes to propagate type and other information	WITHOUT_CLASSIFICATION	0.9999352234141555	WITHOUT_CLASSIFICATION	6.477658584452985E-5	IMPLEMENTATION
// Does this instruction have side effects as a result of its operation // This information is used in optimization phases to impact dead code elimination // and other optimization passes	WITHOUT_CLASSIFICATION	0.9999999153313612	WITHOUT_CLASSIFICATION	8.466863871901403E-8	IMPLEMENTATION
/* --------- "Abstract"/"please-override" methods --------- */	WITHOUT_CLASSIFICATION	0.9999797128236868	WITHOUT_CLASSIFICATION	2.0287176313173626E-5	IMPLEMENTATION
/* Array of all operands for this instruction */	WITHOUT_CLASSIFICATION	0.9999929033831343	WITHOUT_CLASSIFICATION	7.096616865748227E-6	IMPLEMENTATION
/* List of all variables used by all operands of this instruction */	WITHOUT_CLASSIFICATION	0.999990784124226	WITHOUT_CLASSIFICATION	9.215875774013743E-6	IMPLEMENTATION
/*      * This method takes as input a map of operands to their values, and outputs     *     * If the value map provides a value for any of the instruction's operands     * this method is expected to replace the original operands with the simplified values.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify     */	WITHOUT_CLASSIFICATION	0.9999953546111547	WITHOUT_CLASSIFICATION	4.64538884530403E-6	IMPLEMENTATION
// By default, no simplifications!	WITHOUT_CLASSIFICATION	0.9999036400967938	WITHOUT_CLASSIFICATION	9.635990320625466E-5	IMPLEMENTATION
// Can this call lead to ruby code getting modified?   // If we don't know what method we are calling, we assume it can (pessimistic, but safe!) // If we do know the target method, we ask the method itself whether it modifies ruby code	WITHOUT_CLASSIFICATION	0.99053579139781	WITHOUT_CLASSIFICATION	0.00946420860218997	IMPLEMENTATION
// By default, return instructions cannot be deleted	WITHOUT_CLASSIFICATION	0.9999493900379394	WITHOUT_CLASSIFICATION	5.0609962060764844E-5	IMPLEMENTATION
// If true, returns the rest of the array starting at the index	WITHOUT_CLASSIFICATION	0.9998994358355621	WITHOUT_CLASSIFICATION	1.0056416443797431E-4	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999595844348181	WITHOUT_CLASSIFICATION	4.041556518187656E-5	IMPLEMENTATION
// Map of label & basic blocks with that label	WITHOUT_CLASSIFICATION	0.9999942811254009	WITHOUT_CLASSIFICATION	5.718874599059225E-6	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999595844348181	WITHOUT_CLASSIFICATION	4.041556518187656E-5	IMPLEMENTATION
// You can only value-replace atomic values	WITHOUT_CLASSIFICATION	0.9999969899378998	WITHOUT_CLASSIFICATION	3.010062100167571E-6	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999921710451599	WITHOUT_CLASSIFICATION	7.828954840057661E-6	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999921710451599	WITHOUT_CLASSIFICATION	7.828954840057661E-6	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999921710451599	WITHOUT_CLASSIFICATION	7.828954840057661E-6	IMPLEMENTATION
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.999981381611258	WITHOUT_CLASSIFICATION	1.8618388741892548E-5	IMPLEMENTATION
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.999981381611258	WITHOUT_CLASSIFICATION	1.8618388741892548E-5	IMPLEMENTATION
// The operand that this attribute targets //    DEFERRED //    AttributeValue _val;       // Attribute value	WITHOUT_CLASSIFICATION	0.9999811298170289	WITHOUT_CLASSIFICATION	1.8870182971142856E-5	IMPLEMENTATION
// Arrays, Ranges, etc. are compound values // Variables, fixnums, floats, etc. are "atomic" values	WITHOUT_CLASSIFICATION	0.9999967823748424	WITHOUT_CLASSIFICATION	3.2176251575079343E-6	IMPLEMENTATION
// Get the target class of this operand, if we know it!	WITHOUT_CLASSIFICATION	0.9998901117323101	WITHOUT_CLASSIFICATION	1.0988826768991676E-4	IMPLEMENTATION
// The following constants capture pre-known static call sites -- used to implement ruby internals	WITHOUT_CLASSIFICATION	0.9942444701084645	WITHOUT_CLASSIFICATION	0.005755529891535523	IMPLEMENTATION
/* Nothing to do by default */	WITHOUT_CLASSIFICATION	0.9999995999965255	WITHOUT_CLASSIFICATION	4.000034744672575E-7	IMPLEMENTATION
// Map of label & basic blocks which are waiting for a bb with that label	WITHOUT_CLASSIFICATION	0.9999994283872566	WITHOUT_CLASSIFICATION	5.716127433581432E-7	IMPLEMENTATION
// Init before building basic blocks below!	WITHOUT_CLASSIFICATION	0.9999513120496812	WITHOUT_CLASSIFICATION	4.8687950318707654E-5	IMPLEMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999912822593487	WITHOUT_CLASSIFICATION	8.717740651314813E-6	IMPLEMENTATION
// Scope (method/closure) to which this cfg belongs // Entry BB -- dummy // Exit BB -- dummy // The actual graph // Next available basic block id	WITHOUT_CLASSIFICATION	0.9998961670897692	WITHOUT_CLASSIFICATION	1.0383291023081331E-4	IMPLEMENTATION
// Jump instruction bbs dont add an edge to the succeeding bb by default	WITHOUT_CLASSIFICATION	0.9999933209641605	WITHOUT_CLASSIFICATION	6.679035839502608E-6	IMPLEMENTATION
// Add forward ref. edges	WITHOUT_CLASSIFICATION	0.999964506689471	WITHOUT_CLASSIFICATION	3.5493310528906226E-5	IMPLEMENTATION
// currBB cannot be null!	WITHOUT_CLASSIFICATION	0.9999924664042519	WITHOUT_CLASSIFICATION	7.533595748069882E-6	IMPLEMENTATION
// Add a forward reference from tgt -> currBB	WITHOUT_CLASSIFICATION	0.9999988838695769	WITHOUT_CLASSIFICATION	1.1161304230009941E-6	IMPLEMENTATION
// root-level logic	WITHOUT_CLASSIFICATION	0.9996395572220861	WITHOUT_CLASSIFICATION	3.604427779139093E-4	IMPLEMENTATION
// root-level methods	WITHOUT_CLASSIFICATION	0.9999387720929227	WITHOUT_CLASSIFICATION	6.122790707726378E-5	IMPLEMENTATION
// root-level classes	WITHOUT_CLASSIFICATION	0.9999664482061684	WITHOUT_CLASSIFICATION	3.3551793831498424E-5	IMPLEMENTATION
//        case 4: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); //            break; //        case 5: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); //            break;	WITHOUT_CLASSIFICATION	0.9998551433669873	WITHOUT_CLASSIFICATION	1.448566330126787E-4	IMPLEMENTATION
// load receiver	WITHOUT_CLASSIFICATION	0.9995803307263987	WITHOUT_CLASSIFICATION	4.196692736012086E-4	IMPLEMENTATION
// load receiver	WITHOUT_CLASSIFICATION	0.9995803307263987	WITHOUT_CLASSIFICATION	4.196692736012086E-4	IMPLEMENTATION
// receiver	WITHOUT_CLASSIFICATION	0.9995994044955676	WITHOUT_CLASSIFICATION	4.005955044323542E-4	IMPLEMENTATION
// load arguments	WITHOUT_CLASSIFICATION	0.9996801793108772	WITHOUT_CLASSIFICATION	3.198206891228621E-4	IMPLEMENTATION
// load arguments	WITHOUT_CLASSIFICATION	0.9996801793108772	WITHOUT_CLASSIFICATION	3.198206891228621E-4	IMPLEMENTATION
//        case 4: //        case 5:	WITHOUT_CLASSIFICATION	0.9998435703018006	WITHOUT_CLASSIFICATION	1.564296981993253E-4	IMPLEMENTATION
// Object[] args	WITHOUT_CLASSIFICATION	0.9996272650490928	WITHOUT_CLASSIFICATION	3.727349509071649E-4	IMPLEMENTATION
// load handle	WITHOUT_CLASSIFICATION	0.9958207611929529	WITHOUT_CLASSIFICATION	0.004179238807047071	IMPLEMENTATION
// args array	WITHOUT_CLASSIFICATION	0.9996771735454254	WITHOUT_CLASSIFICATION	3.2282645457456616E-4	IMPLEMENTATION
// i'th argument	WITHOUT_CLASSIFICATION	0.9998939489968282	WITHOUT_CLASSIFICATION	1.0605100317191659E-4	IMPLEMENTATION
// invoke specific arity version	WITHOUT_CLASSIFICATION	0.9998417775173918	WITHOUT_CLASSIFICATION	1.582224826081935E-4	IMPLEMENTATION
// Object arg0	WITHOUT_CLASSIFICATION	0.9997306241455424	WITHOUT_CLASSIFICATION	2.693758544576121E-4	IMPLEMENTATION
// useful for code completion inside the IRB	WITHOUT_CLASSIFICATION	0.9999281781439484	WITHOUT_CLASSIFICATION	7.182185605155325E-5	IMPLEMENTATION
// No editing before startPos	WITHOUT_CLASSIFICATION	0.9999877603126939	WITHOUT_CLASSIFICATION	1.2239687306055445E-5	IMPLEMENTATION
// no silly ticks!	WITHOUT_CLASSIFICATION	0.999747159723811	WITHOUT_CLASSIFICATION	2.528402761889871E-4	IMPLEMENTATION
// no candidates? Fail.	WITHOUT_CLASSIFICATION	0.9999593926616317	WITHOUT_CLASSIFICATION	4.0607338368216305E-5	IMPLEMENTATION
// at end	WITHOUT_CLASSIFICATION	0.9999543875768246	WITHOUT_CLASSIFICATION	4.561242317529182E-5	IMPLEMENTATION
// undo check	WITHOUT_CLASSIFICATION	0.9996446318987712	WITHOUT_CLASSIFICATION	3.5536810122891615E-4	IMPLEMENTATION
// Explicit reference to these vars as symbols...	WITHOUT_CLASSIFICATION	0.9999869672349547	WITHOUT_CLASSIFICATION	1.3032765045141917E-5	IMPLEMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999912822593487	WITHOUT_CLASSIFICATION	8.717740651314813E-6	IMPLEMENTATION
//\t\n\"\\'`@$><=;|&{(	WITHOUT_CLASSIFICATION	0.9997652436395854	WITHOUT_CLASSIFICATION	2.3475636041465735E-4	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.9998754045715499	WITHOUT_CLASSIFICATION	1.2459542845015117E-4	IMPLEMENTATION
// no check for '*'	WITHOUT_CLASSIFICATION	0.9998320426653281	WITHOUT_CLASSIFICATION	1.679573346718749E-4	IMPLEMENTATION
// no check for '*'	WITHOUT_CLASSIFICATION	0.9998320426653281	WITHOUT_CLASSIFICATION	1.679573346718749E-4	IMPLEMENTATION
// Binding provided for scope, use it	WITHOUT_CLASSIFICATION	0.9997745891368639	WITHOUT_CLASSIFICATION	2.2541086313608333E-4	IMPLEMENTATION
// this is ensured by the callers	WITHOUT_CLASSIFICATION	0.9999198956830506	WITHOUT_CLASSIFICATION	8.0104316949467E-5	IMPLEMENTATION
// no binding, just eval in "current" frame (caller's frame)	WITHOUT_CLASSIFICATION	0.9999979513423101	WITHOUT_CLASSIFICATION	2.0486576898347325E-6	IMPLEMENTATION
// restore position	WITHOUT_CLASSIFICATION	0.9998572550514727	WITHOUT_CLASSIFICATION	1.427449485271993E-4	IMPLEMENTATION
/* Something like cvar_cbase() from eval.c, factored out for the benefit     * of all the classvar-related node evaluations */	WITHOUT_CLASSIFICATION	0.9999983603621414	WITHOUT_CLASSIFICATION	1.6396378586039769E-6	IMPLEMENTATION
// Used by the compiler to simplify arg processing	WITHOUT_CLASSIFICATION	0.999975438329856	WITHOUT_CLASSIFICATION	2.4561670143978342E-5	IMPLEMENTATION
// JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace	WITHOUT_CLASSIFICATION	0.9999952278970566	WITHOUT_CLASSIFICATION	4.772102943266343E-6	IMPLEMENTATION
// MRI does similar thing on MacOS X with 'EditLine wrapper'.	WITHOUT_CLASSIFICATION	0.9995050571912583	WITHOUT_CLASSIFICATION	4.949428087418057E-4	IMPLEMENTATION
// We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)	WITHOUT_CLASSIFICATION	0.9999684949466684	WITHOUT_CLASSIFICATION	3.150505333159547E-5	IMPLEMENTATION
// JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)	WITHOUT_CLASSIFICATION	0.9999970725378607	WITHOUT_CLASSIFICATION	2.927462139369401E-6	IMPLEMENTATION
// not overridden, let's go	WITHOUT_CLASSIFICATION	0.9996392224381819	WITHOUT_CLASSIFICATION	3.6077756181808777E-4	IMPLEMENTATION
/* Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8() */	WITHOUT_CLASSIFICATION	0.9999218424552194	WITHOUT_CLASSIFICATION	7.815754478064679E-5	IMPLEMENTATION
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.8364574027243722	WITHOUT_CLASSIFICATION	0.1635425972756279	IMPLEMENTATION
// Complete using a Proc object	WITHOUT_CLASSIFICATION	0.9999728872377777	WITHOUT_CLASSIFICATION	2.7112762222288478E-5	IMPLEMENTATION
// clear basename so it's anonymous when raising	WITHOUT_CLASSIFICATION	0.9999481884829889	WITHOUT_CLASSIFICATION	5.181151701117064E-5	IMPLEMENTATION
// These are not really used by timeout, but exposed for compatibility	WITHOUT_CLASSIFICATION	0.9999679604127546	WITHOUT_CLASSIFICATION	3.203958724528982E-5	IMPLEMENTATION
// Timeout module methods	WITHOUT_CLASSIFICATION	0.9999275074952947	WITHOUT_CLASSIFICATION	7.249250470529582E-5	IMPLEMENTATION
// Toplevel defines	WITHOUT_CLASSIFICATION	0.9996033889039744	WITHOUT_CLASSIFICATION	3.966110960256493E-4	IMPLEMENTATION
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999925252563389	WITHOUT_CLASSIFICATION	7.474743661210007E-6	IMPLEMENTATION
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999891110047708	WITHOUT_CLASSIFICATION	1.088899522904353E-5	IMPLEMENTATION
// if it's the exception we're expecting	WITHOUT_CLASSIFICATION	0.9999218950897383	WITHOUT_CLASSIFICATION	7.810491026170409E-5	IMPLEMENTATION
// and we were given a specific exception	WITHOUT_CLASSIFICATION	0.9995497475225265	WITHOUT_CLASSIFICATION	4.5025247747356757E-4	IMPLEMENTATION
// otherwise, rethrow	WITHOUT_CLASSIFICATION	0.9999404370923441	WITHOUT_CLASSIFICATION	5.9562907655937365E-5	IMPLEMENTATION
// // Remove the Executor task now, to avoid cancelled tasks accumulating // until an Executor thread can schedule and remove them //	WITHOUT_CLASSIFICATION	0.9998744457216123	WITHOUT_CLASSIFICATION	1.2555427838772376E-4	IMPLEMENTATION
// // If the task was scheduled, wait for it to finish before polling // for the exception it would have thrown. //	WITHOUT_CLASSIFICATION	0.9994642697026553	WITHOUT_CLASSIFICATION	5.357302973447404E-4	IMPLEMENTATION
// NetProtocolBufferedIO	WITHOUT_CLASSIFICATION	0.999935505377077	WITHOUT_CLASSIFICATION	6.449462292307057E-5	IMPLEMENTATION
/* When a length is given, read_string acts like get_bytes */	WITHOUT_CLASSIFICATION	0.9998492428692187	WITHOUT_CLASSIFICATION	1.507571307812316E-4	IMPLEMENTATION
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9996048507390579	WITHOUT_CLASSIFICATION	3.9514926094208323E-4	IMPLEMENTATION
// ARRAY and STRUCT are only used internally	WITHOUT_CLASSIFICATION	0.9999840460580965	WITHOUT_CLASSIFICATION	1.59539419034563E-5	IMPLEMENTATION
// If no release method is defined, then memory leaks will result.	WITHOUT_CLASSIFICATION	0.9999875226769019	WITHOUT_CLASSIFICATION	1.2477323098010283E-5	IMPLEMENTATION
/*     * This variant of newStruct is called from StructLayoutBuilder     */	WITHOUT_CLASSIFICATION	0.9999999298115584	WITHOUT_CLASSIFICATION	7.018844164364147E-8	IMPLEMENTATION
// This also handles unsigned int -> negative signed int conversion	WITHOUT_CLASSIFICATION	0.9999961150396506	WITHOUT_CLASSIFICATION	3.884960349439442E-6	IMPLEMENTATION
// Windows is LLP64	WITHOUT_CLASSIFICATION	0.9998430820265364	WITHOUT_CLASSIFICATION	1.5691797346359328E-4	IMPLEMENTATION
// Older JDK on linux map 'c' to 'libc.so' which doesn't work	WITHOUT_CLASSIFICATION	0.9999406621629788	WITHOUT_CLASSIFICATION	5.933783702129303E-5	IMPLEMENTATION
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999797896913881	WITHOUT_CLASSIFICATION	2.0210308611904618E-5	IMPLEMENTATION
// $blah	WITHOUT_CLASSIFICATION	0.9999909584718885	WITHOUT_CLASSIFICATION	9.041528111615727E-6	IMPLEMENTATION
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9996048507390579	WITHOUT_CLASSIFICATION	3.9514926094208323E-4	IMPLEMENTATION
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999974460113428	WITHOUT_CLASSIFICATION	2.553988657220513E-6	IMPLEMENTATION
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999797896913881	WITHOUT_CLASSIFICATION	2.0210308611904618E-5	IMPLEMENTATION
// // Keep a reference to the temporary memory in the cache so it does // not get freed by the GC until the struct is freed //	WITHOUT_CLASSIFICATION	0.9999760572714469	WITHOUT_CLASSIFICATION	2.39427285531089E-5	IMPLEMENTATION
// Add Pointer::NULL as a constant	WITHOUT_CLASSIFICATION	0.9999531764504892	WITHOUT_CLASSIFICATION	4.6823549510840635E-5	IMPLEMENTATION
// Create the ordered list of field names from the map	WITHOUT_CLASSIFICATION	0.9999961649300102	WITHOUT_CLASSIFICATION	3.83506998985733E-6	IMPLEMENTATION
// Assemble a [ :name, offset ] array	WITHOUT_CLASSIFICATION	0.9999442506018962	WITHOUT_CLASSIFICATION	5.574939810369328E-5	IMPLEMENTATION
//                case FLOAT:	WITHOUT_CLASSIFICATION	0.999913806791848	WITHOUT_CLASSIFICATION	8.619320815190512E-5	IMPLEMENTATION
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999756688228558	WITHOUT_CLASSIFICATION	2.4331177144182936E-5	IMPLEMENTATION
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999756688228558	WITHOUT_CLASSIFICATION	2.4331177144182936E-5	IMPLEMENTATION
// No auto cleanup needed	WITHOUT_CLASSIFICATION	0.7575757110769169	IMPLEMENTATION	0.24242428892308301	WITHOUT_CLASSIFICATION
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9997085944552306	WITHOUT_CLASSIFICATION	2.9140554476933295E-4	IMPLEMENTATION
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999914400270394	WITHOUT_CLASSIFICATION	8.559972960516862E-6	IMPLEMENTATION
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999914400270394	WITHOUT_CLASSIFICATION	8.559972960516862E-6	IMPLEMENTATION
/*         * If there is exactly _one_ callback argument to the function,         * then a block can be given and automatically subsituted for the callback         * parameter.         */	WITHOUT_CLASSIFICATION	0.9999999357657442	WITHOUT_CLASSIFICATION	6.423425581303326E-8	IMPLEMENTATION
/*------------------------------------------------------------------------*/	WITHOUT_CLASSIFICATION	0.9995736327784496	WITHOUT_CLASSIFICATION	4.263672215503884E-4	IMPLEMENTATION
//AF_INET	WITHOUT_CLASSIFICATION	0.9999670845889459	WITHOUT_CLASSIFICATION	3.291541105411755E-5	IMPLEMENTATION
//AF_INET	WITHOUT_CLASSIFICATION	0.9999670845889459	WITHOUT_CLASSIFICATION	3.291541105411755E-5	IMPLEMENTATION
// RubyUNIXServer	WITHOUT_CLASSIFICATION	0.999598425807291	WITHOUT_CLASSIFICATION	4.015741927090063E-4	IMPLEMENTATION
// line 321	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// // Set up for potentially fast-int operations //	WITHOUT_CLASSIFICATION	0.9999744738827078	WITHOUT_CLASSIFICATION	2.552611729231279E-5	IMPLEMENTATION
// // Hook up the MemoryPointer class if its not already there //	WITHOUT_CLASSIFICATION	0.9998676395446091	WITHOUT_CLASSIFICATION	1.3236045539076493E-4	IMPLEMENTATION
// This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and // (2) Socket.getChannel() seems to return null in some cases	WITHOUT_CLASSIFICATION	0.9999996764012907	WITHOUT_CLASSIFICATION	3.2359870921420133E-7	IMPLEMENTATION
// no UNIXSockets on Windows	WITHOUT_CLASSIFICATION	0.9999000577074613	WITHOUT_CLASSIFICATION	9.994229253872679E-5	IMPLEMENTATION
// Sockaddr_un has different structure on different platforms. // See JRUBY-2213 for more details.	WITHOUT_CLASSIFICATION	0.9989248278426177	WITHOUT_CLASSIFICATION	0.0010751721573822718	IMPLEMENTATION
// There is something valid in the sun_path component	WITHOUT_CLASSIFICATION	0.9999995248349308	WITHOUT_CLASSIFICATION	4.7516506908866645E-7	IMPLEMENTATION
// RubyIPSocket	WITHOUT_CLASSIFICATION	0.999598425807291	WITHOUT_CLASSIFICATION	4.015741927090063E-4	IMPLEMENTATION
// host is nil or the empty string, bind to INADDR_ANY	WITHOUT_CLASSIFICATION	0.9999492514241747	WITHOUT_CLASSIFICATION	5.074857582544139E-5	IMPLEMENTATION
// host and port given	WITHOUT_CLASSIFICATION	0.9996046908744135	WITHOUT_CLASSIFICATION	3.95309125586522E-4	IMPLEMENTATION
// RubyUDPSocket	WITHOUT_CLASSIFICATION	0.999598425807291	WITHOUT_CLASSIFICATION	4.015741927090063E-4	IMPLEMENTATION
// By default we always reverse lookup unless do_not_reverse_lookup set.	WITHOUT_CLASSIFICATION	0.9999330655447123	WITHOUT_CLASSIFICATION	6.693445528776755E-5	IMPLEMENTATION
// make sure descriptor is registered	WITHOUT_CLASSIFICATION	0.9998716063784557	WITHOUT_CLASSIFICATION	1.2839362154425915E-4	IMPLEMENTATION
// continue with normal initialization	WITHOUT_CLASSIFICATION	0.9994495816659651	WITHOUT_CLASSIFICATION	5.504183340349392E-4	IMPLEMENTATION
// recv returns nil on EOF	WITHOUT_CLASSIFICATION	0.9999123653676985	WITHOUT_CLASSIFICATION	8.763463230163758E-5	IMPLEMENTATION
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9956039836943431	WITHOUT_CLASSIFICATION	0.004396016305656933	IMPLEMENTATION
// RubyBasicSocket	WITHOUT_CLASSIFICATION	0.999598425807291	WITHOUT_CLASSIFICATION	4.015741927090063E-4	IMPLEMENTATION
// we don't have to define any that we don't support; see socket.c	WITHOUT_CLASSIFICATION	0.9999815966428923	WITHOUT_CLASSIFICATION	1.8403357107663525E-5	IMPLEMENTATION
// mandatory constants we haven't implemented	WITHOUT_CLASSIFICATION	0.9355489023486637	WITHOUT_CLASSIFICATION	0.06445109765133643	IMPLEMENTATION
// constants webrick crashes without	WITHOUT_CLASSIFICATION	0.9999496291305273	WITHOUT_CLASSIFICATION	5.0370869472666324E-5	IMPLEMENTATION
// More constants needed by specs	WITHOUT_CLASSIFICATION	0.9796912346843291	WITHOUT_CLASSIFICATION	0.020308765315671034	IMPLEMENTATION
// normal file descriptor..try to work with it	WITHOUT_CLASSIFICATION	0.9996317181334311	WITHOUT_CLASSIFICATION	3.682818665689326E-4	IMPLEMENTATION
// AF_INET	WITHOUT_CLASSIFICATION	0.9999909584718885	WITHOUT_CLASSIFICATION	9.041528111615727E-6	IMPLEMENTATION
// 255.255.255.255	WITHOUT_CLASSIFICATION	0.999598425807291	WITHOUT_CLASSIFICATION	4.015741927090063E-4	IMPLEMENTATION
// 0.0.0.0	WITHOUT_CLASSIFICATION	0.9999909584718885	WITHOUT_CLASSIFICATION	9.041528111615727E-6	IMPLEMENTATION
//def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)	WITHOUT_CLASSIFICATION	0.9996610660028672	WITHOUT_CLASSIFICATION	3.389339971327798E-4	IMPLEMENTATION
// line 323	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999527027169385	WITHOUT_CLASSIFICATION	4.729728306153712E-5	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999527027169385	WITHOUT_CLASSIFICATION	4.729728306153712E-5	IMPLEMENTATION
// ok, it's a socket...set values accordingly // just using AF_INET since we can't tell from SocketChannel...	WITHOUT_CLASSIFICATION	0.9999998364488456	WITHOUT_CLASSIFICATION	1.6355115444484673E-7	IMPLEMENTATION
// datagram, set accordingly // again, AF_INET	WITHOUT_CLASSIFICATION	0.9999335624886354	WITHOUT_CLASSIFICATION	6.643751136464516E-5	IMPLEMENTATION
//IRubyObject family = args[2];	WITHOUT_CLASSIFICATION	0.9995822990225001	WITHOUT_CLASSIFICATION	4.17700977500003E-4	IMPLEMENTATION
// When Socket::AI_PASSIVE and host is nil, return 'any' address. 	WITHOUT_CLASSIFICATION	0.9998260159940259	WITHOUT_CLASSIFICATION	1.7398400597403127E-4	IMPLEMENTATION
// The value of 1 is for Socket::AI_PASSIVE.	WITHOUT_CLASSIFICATION	0.9999983516201606	WITHOUT_CLASSIFICATION	1.64837983945088E-6	IMPLEMENTATION
// RubySocket	WITHOUT_CLASSIFICATION	0.999598425807291	WITHOUT_CLASSIFICATION	4.015741927090063E-4	IMPLEMENTATION
// numeric host, use it for port	WITHOUT_CLASSIFICATION	0.9998053271082596	WITHOUT_CLASSIFICATION	1.9467289174050103E-4	IMPLEMENTATION
//            e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9998944398414646	WITHOUT_CLASSIFICATION	1.0556015853531976E-4	IMPLEMENTATION
// we were woken up without being selected...poll for thread events and go back to sleep	WITHOUT_CLASSIFICATION	0.9999865156413555	WITHOUT_CLASSIFICATION	1.348435864445779E-5	IMPLEMENTATION
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9993097552131968	WITHOUT_CLASSIFICATION	6.902447868033211E-4	IMPLEMENTATION
// no connection immediately accepted, let them try again	WITHOUT_CLASSIFICATION	0.9997003719246708	WITHOUT_CLASSIFICATION	2.9962807532928694E-4	IMPLEMENTATION
// do nothing, just exit	WITHOUT_CLASSIFICATION	0.99998264101947	WITHOUT_CLASSIFICATION	1.7358980530006123E-5	IMPLEMENTATION
//nativeThread.setPriority(priority);	WITHOUT_CLASSIFICATION	0.9995736327784496	WITHOUT_CLASSIFICATION	4.263672215503884E-4	IMPLEMENTATION
// set thread context JRuby classloader here, for Ruby-owned thread	WITHOUT_CLASSIFICATION	0.9999508307452364	WITHOUT_CLASSIFICATION	4.916925476370172E-5	IMPLEMENTATION
// uber-ThreadKill catcher, since it should always just mean "be dead"	WITHOUT_CLASSIFICATION	0.9999641009107281	WITHOUT_CLASSIFICATION	3.589908927196362E-5	IMPLEMENTATION
// Call the thread's code	WITHOUT_CLASSIFICATION	0.9999403164869842	WITHOUT_CLASSIFICATION	5.968351301566653E-5	IMPLEMENTATION
// Someone called exit!, so we need to kill the main thread	WITHOUT_CLASSIFICATION	0.9995562613699134	WITHOUT_CLASSIFICATION	4.4373863008667115E-4	IMPLEMENTATION
// restore context classloader, in case we're using a thread pool	WITHOUT_CLASSIFICATION	0.9999792422971121	WITHOUT_CLASSIFICATION	2.0757702887853066E-5	IMPLEMENTATION
// be dead	WITHOUT_CLASSIFICATION	0.9999964802880595	WITHOUT_CLASSIFICATION	3.519711940334948E-6	IMPLEMENTATION
// loop until a context is available, to clean up softrefs that might have been collected	WITHOUT_CLASSIFICATION	0.9998289743409335	WITHOUT_CLASSIFICATION	1.7102565906641258E-4	IMPLEMENTATION
// all threads in ruby thread group plus main thread	WITHOUT_CLASSIFICATION	0.9999308128169141	WITHOUT_CLASSIFICATION	6.918718308593496E-5	IMPLEMENTATION
// thread is not alive, skip it	WITHOUT_CLASSIFICATION	0.9964444488675158	WITHOUT_CLASSIFICATION	0.0035555511324841423	IMPLEMENTATION
// future is done or cancelled, skip it	WITHOUT_CLASSIFICATION	0.9999652101708706	WITHOUT_CLASSIFICATION	3.478982912951812E-5	IMPLEMENTATION
// first, check if the sender has unreceived mail	WITHOUT_CLASSIFICATION	0.9999607218638494	WITHOUT_CLASSIFICATION	3.927813615043239E-5	IMPLEMENTATION
// then deliver mail to the target	WITHOUT_CLASSIFICATION	0.9999421545468923	WITHOUT_CLASSIFICATION	5.78454531076412E-5	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999356752647472	WITHOUT_CLASSIFICATION	6.432473525275136E-5	IMPLEMENTATION
// Define a second version that doesn't take a block, so we have unique code paths for both cases.	WITHOUT_CLASSIFICATION	0.9999728657815221	WITHOUT_CLASSIFICATION	2.713421847796094E-5	IMPLEMENTATION
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9997835362199552	WITHOUT_CLASSIFICATION	2.164637800447921E-4	IMPLEMENTATION
// main body	WITHOUT_CLASSIFICATION	0.9997821781320767	WITHOUT_CLASSIFICATION	2.1782186792333017E-4	IMPLEMENTATION
// return jump handling	WITHOUT_CLASSIFICATION	0.9999198113779182	WITHOUT_CLASSIFICATION	8.018862208172229E-5	IMPLEMENTATION
// finally	WITHOUT_CLASSIFICATION	0.9999919208629084	WITHOUT_CLASSIFICATION	8.079137091598793E-6	IMPLEMENTATION
// return result if we're still good	WITHOUT_CLASSIFICATION	0.9999273806958586	WITHOUT_CLASSIFICATION	7.261930414136489E-5	IMPLEMENTATION
// redo jump handling	WITHOUT_CLASSIFICATION	0.9998630438452648	WITHOUT_CLASSIFICATION	1.3695615473509475E-4	IMPLEMENTATION
// clear the redo	WITHOUT_CLASSIFICATION	0.9997372317568272	WITHOUT_CLASSIFICATION	2.627682431728448E-4	IMPLEMENTATION
// get runtime, create jump error, and throw it	WITHOUT_CLASSIFICATION	0.9998441780420602	WITHOUT_CLASSIFICATION	1.5582195793985144E-4	IMPLEMENTATION
// throw redo error if we're still good	WITHOUT_CLASSIFICATION	0.9992824959567654	WITHOUT_CLASSIFICATION	7.175040432346285E-4	IMPLEMENTATION
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9998140283984854	WITHOUT_CLASSIFICATION	1.859716015145226E-4	IMPLEMENTATION
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9989294324117466	WITHOUT_CLASSIFICATION	0.0010705675882534142	IMPLEMENTATION
// No required specified, check actual number of required args	WITHOUT_CLASSIFICATION	0.9996888720638817	WITHOUT_CLASSIFICATION	3.1112793611821844E-4	IMPLEMENTATION
// actual required is less than 3, so we use specific arity	WITHOUT_CLASSIFICATION	0.9992066274449292	WITHOUT_CLASSIFICATION	7.933725550709707E-4	IMPLEMENTATION
// actual required is greater than 3, raise error (we don't support actual required > 3)	WITHOUT_CLASSIFICATION	0.9892251446615652	WITHOUT_CLASSIFICATION	0.01077485533843489	IMPLEMENTATION
// simple path, no multimethod	WITHOUT_CLASSIFICATION	0.9999671371243175	WITHOUT_CLASSIFICATION	3.2862875682535576E-5	IMPLEMENTATION
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9988847947468918	WITHOUT_CLASSIFICATION	0.0011152052531081746	IMPLEMENTATION
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9988847947468918	WITHOUT_CLASSIFICATION	0.0011152052531081746	IMPLEMENTATION
// normal all-rest method	WITHOUT_CLASSIFICATION	0.9996318065588331	WITHOUT_CLASSIFICATION	3.6819344116688287E-4	IMPLEMENTATION
// for zero, one, two, three arities, JavaMethod.JavaMethod*.call(...IRubyObject[] args...) will check	WITHOUT_CLASSIFICATION	0.9999790144745733	WITHOUT_CLASSIFICATION	2.098552542681089E-5	IMPLEMENTATION
// promise to implement zero to N	WITHOUT_CLASSIFICATION	0.9943956788328991	WITHOUT_CLASSIFICATION	0.005604321167100945	IMPLEMENTATION
// return	WITHOUT_CLASSIFICATION	0.9999947674949133	WITHOUT_CLASSIFICATION	5.2325050866963165E-6	IMPLEMENTATION
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999938353095034	WITHOUT_CLASSIFICATION	6.164690496701774E-6	IMPLEMENTATION
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9998995708202535	WITHOUT_CLASSIFICATION	1.0042917974649321E-4	IMPLEMENTATION
// confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999667670832404	WITHOUT_CLASSIFICATION	3.3232916759537014E-5	IMPLEMENTATION
// confirm maximum not greater than optional	WITHOUT_CLASSIFICATION	0.9940124007913472	WITHOUT_CLASSIFICATION	0.0059875992086526955	IMPLEMENTATION
// Raise an error if arity does not match requirements	WITHOUT_CLASSIFICATION	0.9998124861558796	WITHOUT_CLASSIFICATION	1.8751384412052835E-4	IMPLEMENTATION
// tc	WITHOUT_CLASSIFICATION	0.9999909584718885	WITHOUT_CLASSIFICATION	9.041528111615727E-6	IMPLEMENTATION
// self // name	WITHOUT_CLASSIFICATION	0.9993611473753983	WITHOUT_CLASSIFICATION	6.388526246016866E-4	IMPLEMENTATION
// no args	WITHOUT_CLASSIFICATION	0.999994575186982	WITHOUT_CLASSIFICATION	5.424813017988593E-6	IMPLEMENTATION
// variable args with block	WITHOUT_CLASSIFICATION	0.9999007583488088	WITHOUT_CLASSIFICATION	9.924165119127375E-5	IMPLEMENTATION
// variable args no block, load null block	WITHOUT_CLASSIFICATION	0.9999385317102103	WITHOUT_CLASSIFICATION	6.146828978961434E-5	IMPLEMENTATION
// zero args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.999943796251986	WITHOUT_CLASSIFICATION	5.62037480140636E-5	IMPLEMENTATION
// one arg with block	WITHOUT_CLASSIFICATION	0.9988147189994133	WITHOUT_CLASSIFICATION	0.0011852810005866924	IMPLEMENTATION
// one arg, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999132070436783	WITHOUT_CLASSIFICATION	8.679295632178113E-5	IMPLEMENTATION
// two args with block	WITHOUT_CLASSIFICATION	0.9998021870751077	WITHOUT_CLASSIFICATION	1.978129248923794E-4	IMPLEMENTATION
// two args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9998707916900711	WITHOUT_CLASSIFICATION	1.2920830992886533E-4	IMPLEMENTATION
// three args with block	WITHOUT_CLASSIFICATION	0.999895703917548	WITHOUT_CLASSIFICATION	1.042960824519299E-4	IMPLEMENTATION
// three args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999318776393659	WITHOUT_CLASSIFICATION	6.812236063408818E-5	IMPLEMENTATION
// load block if it accepts block	WITHOUT_CLASSIFICATION	0.9999219798135752	WITHOUT_CLASSIFICATION	7.802018642478491E-5	IMPLEMENTATION
// all other arg cases with block	WITHOUT_CLASSIFICATION	0.9979316579188436	WITHOUT_CLASSIFICATION	0.002068342081156382	IMPLEMENTATION
// all other arg cases without block	WITHOUT_CLASSIFICATION	0.9980253226044149	WITHOUT_CLASSIFICATION	0.0019746773955851603	IMPLEMENTATION
// one arg, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999889920673772	WITHOUT_CLASSIFICATION	1.1007932622850785E-5	IMPLEMENTATION
// two args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999836119298908	WITHOUT_CLASSIFICATION	1.6388070109251642E-5	IMPLEMENTATION
// three args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999913601960138	WITHOUT_CLASSIFICATION	8.639803986217574E-6	IMPLEMENTATION
// load target for invocations	WITHOUT_CLASSIFICATION	0.9999804668811616	WITHOUT_CLASSIFICATION	1.953311883843155E-5	IMPLEMENTATION
// load receiver as original type for virtual invocation	WITHOUT_CLASSIFICATION	0.9999327615221274	WITHOUT_CLASSIFICATION	6.723847787256926E-5	IMPLEMENTATION
// static invocation	WITHOUT_CLASSIFICATION	0.9996884906015258	WITHOUT_CLASSIFICATION	3.115093984742707E-4	IMPLEMENTATION
// virtual invocation	WITHOUT_CLASSIFICATION	0.9998183977244931	WITHOUT_CLASSIFICATION	1.8160227550693926E-4	IMPLEMENTATION
// void return type, so we need to load a nil for returning below	WITHOUT_CLASSIFICATION	0.9999803384091002	WITHOUT_CLASSIFICATION	1.9661590899866357E-5	IMPLEMENTATION
// normal finally and exit	WITHOUT_CLASSIFICATION	0.9998245342492372	WITHOUT_CLASSIFICATION	1.7546575076275722E-4	IMPLEMENTATION
// promise to implement one to N	WITHOUT_CLASSIFICATION	0.9913964207225158	WITHOUT_CLASSIFICATION	0.008603579277484195	IMPLEMENTATION
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9989294324117466	WITHOUT_CLASSIFICATION	0.0010705675882534142	IMPLEMENTATION
// these are only needed if we have a non-noop call config	WITHOUT_CLASSIFICATION	0.9442491846899872	WITHOUT_CLASSIFICATION	0.0557508153100128	IMPLEMENTATION
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9995666590750326	WITHOUT_CLASSIFICATION	4.3334092496737173E-4	IMPLEMENTATION
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9995666590750326	WITHOUT_CLASSIFICATION	4.3334092496737173E-4	IMPLEMENTATION
// singleton classes don't get their own visibility domain	WITHOUT_CLASSIFICATION	0.9999944728101345	WITHOUT_CLASSIFICATION	5.527189865480657E-6	IMPLEMENTATION
// For visibility we need real meta class and not anonymous one from class << self	WITHOUT_CLASSIFICATION	0.9948358278640952	WITHOUT_CLASSIFICATION	0.005164172135904868	IMPLEMENTATION
// SimpleInvocationMethod	WITHOUT_CLASSIFICATION	0.999935505377077	WITHOUT_CLASSIFICATION	6.449462292307057E-5	IMPLEMENTATION
// never reached	WITHOUT_CLASSIFICATION	0.9947323198559314	WITHOUT_CLASSIFICATION	0.00526768014406858	IMPLEMENTATION
// promise to implement N with block	WITHOUT_CLASSIFICATION	0.9853854458643602	WITHOUT_CLASSIFICATION	0.014614554135639763	IMPLEMENTATION
// promise to implement zero to N with block	WITHOUT_CLASSIFICATION	0.989297645944575	WITHOUT_CLASSIFICATION	0.010702354055424997	IMPLEMENTATION
// promise to implement one to N with block	WITHOUT_CLASSIFICATION	0.9836150346212692	WITHOUT_CLASSIFICATION	0.016384965378730795	IMPLEMENTATION
// promise to implement two to N with block	WITHOUT_CLASSIFICATION	0.9757316850254801	WITHOUT_CLASSIFICATION	0.024268314974519863	IMPLEMENTATION
// promise to implement zero to three with block	WITHOUT_CLASSIFICATION	0.9905262736156135	WITHOUT_CLASSIFICATION	0.009473726384386434	IMPLEMENTATION
// promise to implement one to three with block	WITHOUT_CLASSIFICATION	0.985486454186384	WITHOUT_CLASSIFICATION	0.014513545813615887	IMPLEMENTATION
// promise to implement two to three with block	WITHOUT_CLASSIFICATION	0.9784838105981721	WITHOUT_CLASSIFICATION	0.02151618940182793	IMPLEMENTATION
// promise to implement three with block	WITHOUT_CLASSIFICATION	0.9870573174669504	WITHOUT_CLASSIFICATION	0.012942682533049641	IMPLEMENTATION
// promise to implement N	WITHOUT_CLASSIFICATION	0.9957645665824832	WITHOUT_CLASSIFICATION	0.0042354334175168104	IMPLEMENTATION
// DumpingInvocationMethodFactory	WITHOUT_CLASSIFICATION	0.999882847834233	WITHOUT_CLASSIFICATION	1.171521657668933E-4	IMPLEMENTATION
// We promote our box to being its own box since we're changing // visibilities, and need it to be reflected on this method object // independent of any other sharing the box.	WITHOUT_CLASSIFICATION	0.999978301264702	WITHOUT_CLASSIFICATION	2.1698735297940124E-5	IMPLEMENTATION
// Normally we could leave these to fall back on the superclass, but // since it dispatches through the [] version below, which may // dispatch through the []+block version, we can save it a couple hops // by overriding these here.	WITHOUT_CLASSIFICATION	0.9998318080951454	WITHOUT_CLASSIFICATION	1.681919048546828E-4	IMPLEMENTATION
// promise to implement two to N	WITHOUT_CLASSIFICATION	0.9872082652255039	WITHOUT_CLASSIFICATION	0.012791734774496211	IMPLEMENTATION
// promise to implement three to N	WITHOUT_CLASSIFICATION	0.9932152049376158	WITHOUT_CLASSIFICATION	0.006784795062384141	IMPLEMENTATION
// promise to implement zero to three	WITHOUT_CLASSIFICATION	0.9950419866375582	WITHOUT_CLASSIFICATION	0.004958013362441852	IMPLEMENTATION
// promise to implement one to three	WITHOUT_CLASSIFICATION	0.9923859639169903	WITHOUT_CLASSIFICATION	0.0076140360830097824	IMPLEMENTATION
// promise to implement two to three	WITHOUT_CLASSIFICATION	0.9886740072541216	WITHOUT_CLASSIFICATION	0.011325992745878382	IMPLEMENTATION
// promise to implement three	WITHOUT_CLASSIFICATION	0.9962536047360637	WITHOUT_CLASSIFICATION	0.0037463952639361668	IMPLEMENTATION
// all other arities use "n" dispatch path	WITHOUT_CLASSIFICATION	0.9983905765516553	WITHOUT_CLASSIFICATION	0.001609423448344631	IMPLEMENTATION
// load up object and add a few useful methods	WITHOUT_CLASSIFICATION	0.999989956287391	WITHOUT_CLASSIFICATION	1.0043712609040743E-5	IMPLEMENTATION
// open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel	WITHOUT_CLASSIFICATION	0.9999627056335987	WITHOUT_CLASSIFICATION	3.729436640132038E-5	IMPLEMENTATION
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999544970978894	WITHOUT_CLASSIFICATION	4.5502902110635615E-5	IMPLEMENTATION
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.920844352396362	WITHOUT_CLASSIFICATION	0.07915564760363797	IMPLEMENTATION
// create constructor	WITHOUT_CLASSIFICATION	0.9999264581710281	WITHOUT_CLASSIFICATION	7.354182897189093E-5	IMPLEMENTATION
// wrap self and store the wrapper	WITHOUT_CLASSIFICATION	0.999948984250454	WITHOUT_CLASSIFICATION	5.101574954593619E-5	IMPLEMENTATION
// end constructor	WITHOUT_CLASSIFICATION	0.9984273643817011	WITHOUT_CLASSIFICATION	0.0015726356182988778	IMPLEMENTATION
// start setup method	WITHOUT_CLASSIFICATION	0.9999259003667129	WITHOUT_CLASSIFICATION	7.409963328714807E-5	IMPLEMENTATION
// set RubyClass	WITHOUT_CLASSIFICATION	0.999665025356578	WITHOUT_CLASSIFICATION	3.349746434220019E-4	IMPLEMENTATION
// set Ruby	WITHOUT_CLASSIFICATION	0.999665025356578	WITHOUT_CLASSIFICATION	3.349746434220019E-4	IMPLEMENTATION
// all methods dispatch to the simple version by default, which is method_missing normally	WITHOUT_CLASSIFICATION	0.9999883434584727	WITHOUT_CLASSIFICATION	1.1656541527352472E-5	IMPLEMENTATION
// try specific name first, falling back on simple name	WITHOUT_CLASSIFICATION	0.9990405088582732	WITHOUT_CLASSIFICATION	9.594911417267383E-4	IMPLEMENTATION
// get current context	WITHOUT_CLASSIFICATION	0.9999075643044351	WITHOUT_CLASSIFICATION	9.243569556502304E-5	IMPLEMENTATION
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999568771614424	WITHOUT_CLASSIFICATION	4.312283855749817E-5	IMPLEMENTATION
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999544970978894	WITHOUT_CLASSIFICATION	4.5502902110635615E-5	IMPLEMENTATION
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.920844352396362	WITHOUT_CLASSIFICATION	0.07915564760363797	IMPLEMENTATION
// create constructor	WITHOUT_CLASSIFICATION	0.9999264581710281	WITHOUT_CLASSIFICATION	7.354182897189093E-5	IMPLEMENTATION
// end constructor	WITHOUT_CLASSIFICATION	0.9984273643817011	WITHOUT_CLASSIFICATION	0.0015726356182988778	IMPLEMENTATION
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9975465608561317	WITHOUT_CLASSIFICATION	0.0024534391438683764	IMPLEMENTATION
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999871245697263	WITHOUT_CLASSIFICATION	1.287543027359515E-5	IMPLEMENTATION
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9997046955151281	WITHOUT_CLASSIFICATION	2.953044848719219E-4	IMPLEMENTATION
// load null block	WITHOUT_CLASSIFICATION	0.9995066092823702	WITHOUT_CLASSIFICATION	4.933907176297995E-4	IMPLEMENTATION
// invoke method	WITHOUT_CLASSIFICATION	0.998867051413863	WITHOUT_CLASSIFICATION	0.0011329485861369946	IMPLEMENTATION
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999400899224049	WITHOUT_CLASSIFICATION	5.991007759512294E-5	IMPLEMENTATION
// end setup method	WITHOUT_CLASSIFICATION	0.9960868383341587	WITHOUT_CLASSIFICATION	0.003913161665841253	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.9992094603774344	WITHOUT_CLASSIFICATION	7.905396225655962E-4	IMPLEMENTATION
// create static init, for a monitor object	WITHOUT_CLASSIFICATION	0.9999887046611734	WITHOUT_CLASSIFICATION	1.1295338826651118E-5	IMPLEMENTATION
// store the wrapper	WITHOUT_CLASSIFICATION	0.9997456187454731	WITHOUT_CLASSIFICATION	2.543812545269828E-4	IMPLEMENTATION
// prepare temp locals	WITHOUT_CLASSIFICATION	0.9999527147850085	WITHOUT_CLASSIFICATION	4.7285214991648215E-5	IMPLEMENTATION
// Try to look up field for simple name // get field; if nonnull, go straight to dispatch	WITHOUT_CLASSIFICATION	0.9999973837340178	WITHOUT_CLASSIFICATION	2.616265982218449E-6	IMPLEMENTATION
// field is null, lock class and try to populate	WITHOUT_CLASSIFICATION	0.9999988883750824	WITHOUT_CLASSIFICATION	1.1116249175988664E-6	IMPLEMENTATION
// try/finally block to ensure unlock	WITHOUT_CLASSIFICATION	0.999916816006685	WITHOUT_CLASSIFICATION	8.318399331490642E-5	IMPLEMENTATION
// store it	WITHOUT_CLASSIFICATION	0.9995678997505784	WITHOUT_CLASSIFICATION	4.321002494215469E-4	IMPLEMENTATION
// end of try block	WITHOUT_CLASSIFICATION	0.9992165531841749	WITHOUT_CLASSIFICATION	7.834468158251474E-4	IMPLEMENTATION
// finally block to release monitor	WITHOUT_CLASSIFICATION	0.9998907621885825	WITHOUT_CLASSIFICATION	1.0923781141748806E-4	IMPLEMENTATION
// exception handling for monitor release	WITHOUT_CLASSIFICATION	0.9998807387651661	WITHOUT_CLASSIFICATION	1.1926123483382979E-4	IMPLEMENTATION
// re-get, re-check method; if not null now, go to dispatch	WITHOUT_CLASSIFICATION	0.9996419693405284	WITHOUT_CLASSIFICATION	3.580306594715324E-4	IMPLEMENTATION
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999568771614424	WITHOUT_CLASSIFICATION	4.312283855749817E-5	IMPLEMENTATION
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999871245697263	WITHOUT_CLASSIFICATION	1.287543027359515E-5	IMPLEMENTATION
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9997046955151281	WITHOUT_CLASSIFICATION	2.953044848719219E-4	IMPLEMENTATION
// invoke method	WITHOUT_CLASSIFICATION	0.998867051413863	WITHOUT_CLASSIFICATION	0.0011329485861369946	IMPLEMENTATION
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999400899224049	WITHOUT_CLASSIFICATION	5.991007759512294E-5	IMPLEMENTATION
// end setup method	WITHOUT_CLASSIFICATION	0.9960868383341587	WITHOUT_CLASSIFICATION	0.003913161665841253	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.9992094603774344	WITHOUT_CLASSIFICATION	7.905396225655962E-4	IMPLEMENTATION
// create the class	WITHOUT_CLASSIFICATION	0.999739627701516	WITHOUT_CLASSIFICATION	2.603722984839611E-4	IMPLEMENTATION
// method still not available, call method_missing	WITHOUT_CLASSIFICATION	0.8612311802660078	WITHOUT_CLASSIFICATION	0.13876881973399235	IMPLEMENTATION
// perform the dispatch	WITHOUT_CLASSIFICATION	0.9999416774602997	WITHOUT_CLASSIFICATION	5.832253970022192E-5	IMPLEMENTATION
// try to load the specified name; only if that fails, try to define the class	WITHOUT_CLASSIFICATION	0.9999945725876727	WITHOUT_CLASSIFICATION	5.427412327392788E-6	IMPLEMENTATION
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999752309336983	WITHOUT_CLASSIFICATION	2.4769066301662195E-5	IMPLEMENTATION
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999752309336983	WITHOUT_CLASSIFICATION	2.4769066301662195E-5	IMPLEMENTATION
// setup the class	WITHOUT_CLASSIFICATION	0.9997985147284278	WITHOUT_CLASSIFICATION	2.0148527157204E-4	IMPLEMENTATION
// now, create a method_added that can replace the DynamicMethod fields as they're redefined	WITHOUT_CLASSIFICATION	0.999368504880926	WITHOUT_CLASSIFICATION	6.314951190739923E-4	IMPLEMENTATION
// do nothing, it's a non-impl method	WITHOUT_CLASSIFICATION	0.9994660710017083	WITHOUT_CLASSIFICATION	5.339289982917017E-4	IMPLEMENTATION
// probably a primitive	WITHOUT_CLASSIFICATION	0.9999607890972909	WITHOUT_CLASSIFICATION	3.921090270918505E-5	IMPLEMENTATION
// interfaces are handled as modules	WITHOUT_CLASSIFICATION	0.9999090688775952	WITHOUT_CLASSIFICATION	9.093112240468369E-5	IMPLEMENTATION
// construct the mirror class and parent classes	WITHOUT_CLASSIFICATION	0.999978663068233	WITHOUT_CLASSIFICATION	2.1336931766966786E-5	IMPLEMENTATION
// set the full name	WITHOUT_CLASSIFICATION	0.9993767886533506	WITHOUT_CLASSIFICATION	6.232113466493418E-4	IMPLEMENTATION
// include all interfaces	WITHOUT_CLASSIFICATION	0.9998798595127826	WITHOUT_CLASSIFICATION	1.2014048721748089E-4	IMPLEMENTATION
// if it's an array, only add methods for aref, aset, and length	WITHOUT_CLASSIFICATION	0.9999916531099287	WITHOUT_CLASSIFICATION	8.346890071298794E-6	IMPLEMENTATION
// add array construction methods	WITHOUT_CLASSIFICATION	0.9998945980743161	WITHOUT_CLASSIFICATION	1.054019256839076E-4	IMPLEMENTATION
// add all public constructors (note: getConstructors only returns public ones)	WITHOUT_CLASSIFICATION	0.9999721820815713	WITHOUT_CLASSIFICATION	2.7817918428620002E-5	IMPLEMENTATION
// add all instance and static methods	WITHOUT_CLASSIFICATION	0.9999610129882953	WITHOUT_CLASSIFICATION	3.8987011704632114E-5	IMPLEMENTATION
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.99998076378819	WITHOUT_CLASSIFICATION	1.9236211809971567E-5	IMPLEMENTATION
// too much array creation!	WITHOUT_CLASSIFICATION	0.9999749315397001	WITHOUT_CLASSIFICATION	2.5068460299909497E-5	IMPLEMENTATION
// only include static methods if specified	WITHOUT_CLASSIFICATION	0.9999685986718944	WITHOUT_CLASSIFICATION	3.140132810557581E-5	IMPLEMENTATION
// add a few type-specific special methods	WITHOUT_CLASSIFICATION	0.999910044705273	WITHOUT_CLASSIFICATION	8.995529472702764E-5	IMPLEMENTATION
// add all static variables	WITHOUT_CLASSIFICATION	0.9999569788074479	WITHOUT_CLASSIFICATION	4.302119255201296E-5	IMPLEMENTATION
// only public static fields that are valid constants	WITHOUT_CLASSIFICATION	0.9999992762327281	WITHOUT_CLASSIFICATION	7.237672719888047E-7	IMPLEMENTATION
// looks like someone's trying to raise a Java exception. Let them.	WITHOUT_CLASSIFICATION	0.999920862298216	WITHOUT_CLASSIFICATION	7.913770178402659E-5	IMPLEMENTATION
// NOTE: The five match methods are arity-split to avoid the cost of boxing arguments // when there's already a cached match. Do not condense them into a single // method.	WITHOUT_CLASSIFICATION	0.999812853482156	WITHOUT_CLASSIFICATION	1.8714651784396453E-4	IMPLEMENTATION
// TODO: This is where we would want to do precision checks to see // if it's non-destructive to coerce a given type into the target // integral primitive	WITHOUT_CLASSIFICATION	0.8506415402901977	IMPLEMENTATION	0.14935845970980224	WITHOUT_CLASSIFICATION
// long first because it's what Fixnum claims to be	WITHOUT_CLASSIFICATION	0.9983254539203897	WITHOUT_CLASSIFICATION	0.0016745460796102926	IMPLEMENTATION
// double first because it's what float claims to be	WITHOUT_CLASSIFICATION	0.9998011279792836	WITHOUT_CLASSIFICATION	1.9887202071646959E-4	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.8869162033585843	IMPLEMENTATION	0.11308379664141574	WITHOUT_CLASSIFICATION
// read-volatile	WITHOUT_CLASSIFICATION	0.999598425807291	WITHOUT_CLASSIFICATION	4.015741927090063E-4	IMPLEMENTATION
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.99935211873696	WITHOUT_CLASSIFICATION	6.478812630400715E-4	IMPLEMENTATION
// we set all Java methods to optional, since many/most have overloads	WITHOUT_CLASSIFICATION	0.9999502741279792	WITHOUT_CLASSIFICATION	4.972587202066676E-5	IMPLEMENTATION
// If we hold a Java object, we need a java_class accessor	WITHOUT_CLASSIFICATION	0.9998758894902724	WITHOUT_CLASSIFICATION	1.2411050972755506E-4	IMPLEMENTATION
// line 326	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.999598425807291	WITHOUT_CLASSIFICATION	4.015741927090063E-4	IMPLEMENTATION
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.99935211873696	WITHOUT_CLASSIFICATION	6.478812630400715E-4	IMPLEMENTATION
// too much array creation!	WITHOUT_CLASSIFICATION	0.9999749315397001	WITHOUT_CLASSIFICATION	2.5068460299909497E-5	IMPLEMENTATION
// construct new array proxy (ArrayJavaProxy)	WITHOUT_CLASSIFICATION	0.9999619654114391	WITHOUT_CLASSIFICATION	3.803458856089985E-5	IMPLEMENTATION
// Get map of all fields we want to define.  	WITHOUT_CLASSIFICATION	0.9999109863020268	WITHOUT_CLASSIFICATION	8.901369797316582E-5	IMPLEMENTATION
// Look through all mappings to find a match entry for this field	WITHOUT_CLASSIFICATION	0.9998638076260645	WITHOUT_CLASSIFICATION	1.361923739354526E-4	IMPLEMENTATION
// Hit a non-java proxy class (included Modules can be a cause of this...skip)	WITHOUT_CLASSIFICATION	0.9999905708476725	WITHOUT_CLASSIFICATION	9.429152327482612E-6	IMPLEMENTATION
// We could not find all of them print out first one (we could print them all?)	WITHOUT_CLASSIFICATION	0.9983402367199444	WITHOUT_CLASSIFICATION	0.0016597632800555526	IMPLEMENTATION
// dummy bodies for default impls	WITHOUT_CLASSIFICATION	0.9999920448449778	WITHOUT_CLASSIFICATION	7.955155022203127E-6	IMPLEMENTATION
// initialize this if it hasn't been	WITHOUT_CLASSIFICATION	0.9998765855133177	WITHOUT_CLASSIFICATION	1.2341448668223352E-4	IMPLEMENTATION
// initialize these if they haven't been	WITHOUT_CLASSIFICATION	0.9999461176794789	WITHOUT_CLASSIFICATION	5.388232052106345E-5	IMPLEMENTATION
// not allowed for original (non-generated) Java classes // note: not allowing for any previously created class right now; // this restriction might be loosened later for generated classes	WITHOUT_CLASSIFICATION	0.9998713684368463	WITHOUT_CLASSIFICATION	1.286315631536674E-4	IMPLEMENTATION
// setup new, etc unless this is a ConcreteJavaProxy subclass	WITHOUT_CLASSIFICATION	0.9999723845352829	WITHOUT_CLASSIFICATION	2.7615464717159278E-5	IMPLEMENTATION
// First we make modifications to the class, to adapt it to being // both a Ruby class and a proxy for a Java type	WITHOUT_CLASSIFICATION	0.9999524919882469	WITHOUT_CLASSIFICATION	4.750801175319818E-5	IMPLEMENTATION
// list of interfaces we implement	WITHOUT_CLASSIFICATION	0.9906007213732766	WITHOUT_CLASSIFICATION	0.009399278626723328	IMPLEMENTATION
// We capture the original "new" and make it private	WITHOUT_CLASSIFICATION	0.9993343704835072	WITHOUT_CLASSIFICATION	6.656295164928468E-4	IMPLEMENTATION
// The replacement "new" allocates and inits the Ruby object as before, but // also instantiates our proxified Java object by calling __jcreate!	WITHOUT_CLASSIFICATION	0.9999997383963809	WITHOUT_CLASSIFICATION	2.616036191528518E-7	IMPLEMENTATION
// Next, we define a few private methods that we'll use to manipulate // the Java object contained within this Ruby object	WITHOUT_CLASSIFICATION	0.9999386095942382	WITHOUT_CLASSIFICATION	6.139040576190477E-5	IMPLEMENTATION
// jcreate instantiates the proxy object which implements all interfaces // and which is wrapped and implemented by this object	WITHOUT_CLASSIFICATION	0.9952755415242825	WITHOUT_CLASSIFICATION	0.004724458475717552	IMPLEMENTATION
// Now we add an "implement" and "implement_all" methods to the class	WITHOUT_CLASSIFICATION	0.9999316492566518	WITHOUT_CLASSIFICATION	6.835074334826508E-5	IMPLEMENTATION
// implement all forces implementation of all interfaces we intend // for this class to implement	WITHOUT_CLASSIFICATION	0.9775787546603537	WITHOUT_CLASSIFICATION	0.022421245339646245	IMPLEMENTATION
// we've already done the above priming logic, just add another interface // to the list of intentions unless we're past the point of no return or // already intend to implement the given interface	WITHOUT_CLASSIFICATION	0.9982704507611486	WITHOUT_CLASSIFICATION	0.0017295492388514175	IMPLEMENTATION
// walk all superclasses aggregating interfaces	WITHOUT_CLASSIFICATION	0.9999179348648516	WITHOUT_CLASSIFICATION	8.206513514839746E-5	IMPLEMENTATION
// construct the new interface impl and set it into the object	WITHOUT_CLASSIFICATION	0.9999906188217534	WITHOUT_CLASSIFICATION	9.381178246539897E-6	IMPLEMENTATION
// assuming the user wants a collection of interfaces that can be // included together. make it so.	WITHOUT_CLASSIFICATION	0.997763047920794	WITHOUT_CLASSIFICATION	0.0022369520792059577	IMPLEMENTATION
// not allowed for existing Java interface modules	WITHOUT_CLASSIFICATION	0.9994637914352976	WITHOUT_CLASSIFICATION	5.362085647023441E-4	IMPLEMENTATION
// To turn a module into an "interface collection" we add a class instance // variable to hold the list of interfaces, and modify append_features // for this module to call append_features on each of those interfaces as // well	WITHOUT_CLASSIFICATION	0.9999997805926675	WITHOUT_CLASSIFICATION	2.194073325374774E-7	IMPLEMENTATION
// already set up append_features, just add the interface if we haven't already	WITHOUT_CLASSIFICATION	0.9999982057477012	WITHOUT_CLASSIFICATION	1.7942522988661984E-6	IMPLEMENTATION
// array-of-interface-type creation/identity	WITHOUT_CLASSIFICATION	0.999882847834233	WITHOUT_CLASSIFICATION	1.171521657668933E-4	IMPLEMENTATION
// keep this variant for kind_of? testing	WITHOUT_CLASSIFICATION	0.9999314515961821	WITHOUT_CLASSIFICATION	6.854840381793735E-5	IMPLEMENTATION
// array creation should use this variant	WITHOUT_CLASSIFICATION	0.9992118163828121	WITHOUT_CLASSIFICATION	7.881836171878793E-4	IMPLEMENTATION
// parent.setConstant(name, proxyClass); // where the name should come from ?	WITHOUT_CLASSIFICATION	0.9999520711441947	WITHOUT_CLASSIFICATION	4.792885580527887E-5	IMPLEMENTATION
// including interface module so old-style interface "subclasses" will // respond correctly to #kind_of?, etc.	WITHOUT_CLASSIFICATION	0.9999692689976141	WITHOUT_CLASSIFICATION	3.0731002385924426E-5	IMPLEMENTATION
// add reference to interface module	WITHOUT_CLASSIFICATION	0.9999805263573377	WITHOUT_CLASSIFICATION	1.947364266234196E-5	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9997374998008824	WITHOUT_CLASSIFICATION	2.62500199117565E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9997374998008824	WITHOUT_CLASSIFICATION	2.62500199117565E-4	IMPLEMENTATION
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.99998076378819	WITHOUT_CLASSIFICATION	1.9236211809971567E-5	IMPLEMENTATION
// same as argument_types, but matches name in java.lang.reflect.Constructor/Method	WITHOUT_CLASSIFICATION	0.9999995195701945	WITHOUT_CLASSIFICATION	4.804298055290729E-7	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999995097963755	WITHOUT_CLASSIFICATION	4.902036244370836E-7	IMPLEMENTATION
// weakly reserved names	WITHOUT_CLASSIFICATION	0.9999315724005912	WITHOUT_CLASSIFICATION	6.842759940886881E-5	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999913284241774	WITHOUT_CLASSIFICATION	8.671575822689598E-6	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999913284241774	WITHOUT_CLASSIFICATION	8.671575822689598E-6	IMPLEMENTATION
// modified only by addMethod; no synchronization required	WITHOUT_CLASSIFICATION	0.9998997962817601	WITHOUT_CLASSIFICATION	1.0020371823992798E-4	IMPLEMENTATION
// if there's no constructor, we must prevent construction	WITHOUT_CLASSIFICATION	0.9991627584932941	WITHOUT_CLASSIFICATION	8.372415067059819E-4	IMPLEMENTATION
// caching constructors, as they're accessed for each new instance	WITHOUT_CLASSIFICATION	0.9999923068448449	WITHOUT_CLASSIFICATION	7.693155155184425E-6	IMPLEMENTATION
// proxy module for interfaces	WITHOUT_CLASSIFICATION	0.9999889133531715	WITHOUT_CLASSIFICATION	1.1086646828537142E-5	IMPLEMENTATION
// proxy class for concrete classes.  also used for // "concrete" interfaces, which is why we have two fields	WITHOUT_CLASSIFICATION	0.9999778922869915	WITHOUT_CLASSIFICATION	2.2107713008381758E-5	IMPLEMENTATION
// readable only by thread building proxy, so don't need to be // volatile. used to handle recursive calls to getProxyClass/Module // while proxy is being constructed (usually when a constant // defined by a class is of the same type as that class).	WITHOUT_CLASSIFICATION	0.9999985079537361	WITHOUT_CLASSIFICATION	1.4920462638561354E-6	IMPLEMENTATION
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999955904991771	WITHOUT_CLASSIFICATION	4.409500822868949E-6	IMPLEMENTATION
// Now add all aliases for the static methods (fields) as appropriate	WITHOUT_CLASSIFICATION	0.9999861126961491	WITHOUT_CLASSIFICATION	1.388730385086513E-5	IMPLEMENTATION
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999942181639677	WITHOUT_CLASSIFICATION	5.781836032350751E-6	IMPLEMENTATION
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999054766997173	WITHOUT_CLASSIFICATION	9.452330028279717E-5	IMPLEMENTATION
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999483766419257	WITHOUT_CLASSIFICATION	5.1623358074268285E-5	IMPLEMENTATION
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999682726613054	WITHOUT_CLASSIFICATION	3.172733869453748E-5	IMPLEMENTATION
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999423668869933	WITHOUT_CLASSIFICATION	5.763311300664985E-5	IMPLEMENTATION
// Additionally add ?-postfixed aliases to any boolean methods and properties.	WITHOUT_CLASSIFICATION	0.9999900850199089	WITHOUT_CLASSIFICATION	9.914980091016246E-6	IMPLEMENTATION
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.999882847834233	WITHOUT_CLASSIFICATION	1.171521657668933E-4	IMPLEMENTATION
// something?	WITHOUT_CLASSIFICATION	0.9992404728695697	WITHOUT_CLASSIFICATION	7.595271304301693E-4	IMPLEMENTATION
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999983724053333	WITHOUT_CLASSIFICATION	1.6275946666921962E-6	IMPLEMENTATION
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999983724053333	WITHOUT_CLASSIFICATION	1.6275946666921962E-6	IMPLEMENTATION
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999593696804154	WITHOUT_CLASSIFICATION	4.063031958455922E-5	IMPLEMENTATION
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999593696804154	WITHOUT_CLASSIFICATION	4.063031958455922E-5	IMPLEMENTATION
// create constructorInstaller; if there are no constructors, it will disable construction	WITHOUT_CLASSIFICATION	0.9999969253795928	WITHOUT_CLASSIFICATION	3.0746204071975105E-6	IMPLEMENTATION
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999939682476388	WITHOUT_CLASSIFICATION	6.031752361261393E-6	IMPLEMENTATION
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999594883251353	WITHOUT_CLASSIFICATION	4.0511674864737605E-5	IMPLEMENTATION
// now iterate over all installers and make sure they also have appropriate aliases	WITHOUT_CLASSIFICATION	0.9999606693378245	WITHOUT_CLASSIFICATION	3.9330662175450585E-5	IMPLEMENTATION
// old (quasi-deprecated) interface class	WITHOUT_CLASSIFICATION	0.9999846824205186	WITHOUT_CLASSIFICATION	1.5317579481388414E-5	IMPLEMENTATION
// 1.9 support for encodings	WITHOUT_CLASSIFICATION	0.9995593610428998	WITHOUT_CLASSIFICATION	4.4063895710024035E-4	IMPLEMENTATION
// double-check the cache now that we're synchronized	WITHOUT_CLASSIFICATION	0.9989174554223189	WITHOUT_CLASSIFICATION	0.0010825445776811847	IMPLEMENTATION
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999682726613054	WITHOUT_CLASSIFICATION	3.172733869453748E-5	IMPLEMENTATION
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999423668869933	WITHOUT_CLASSIFICATION	5.763311300664985E-5	IMPLEMENTATION
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.999882847834233	WITHOUT_CLASSIFICATION	1.171521657668933E-4	IMPLEMENTATION
// one word type name that starts lower-case...it may be a primitive type	WITHOUT_CLASSIFICATION	0.9999088624812322	WITHOUT_CLASSIFICATION	9.113751876773906E-5	IMPLEMENTATION
// Java.getProxyClass deals with sync issues, so we won't duplicate the logic here	WITHOUT_CLASSIFICATION	0.9999958622256931	WITHOUT_CLASSIFICATION	4.13777430684163E-6	IMPLEMENTATION
// note: intentionally returning the actual array returned from Java, rather // than wrapping it in a RubyArray. wave of the future, when java_class will // return the actual class, rather than a JavaClass wrapper.	WITHOUT_CLASSIFICATION	0.999999893120632	WITHOUT_CLASSIFICATION	1.0687936797285422E-7	IMPLEMENTATION
// see note above re: return type	WITHOUT_CLASSIFICATION	0.9998055402876647	WITHOUT_CLASSIFICATION	1.9445971233529951E-4	IMPLEMENTATION
// restrictive security policy; no matter, we only want public // classes anyway	WITHOUT_CLASSIFICATION	0.9999784710188429	WITHOUT_CLASSIFICATION	2.152898115716499E-5	IMPLEMENTATION
// very restrictive policy (disallows Member.PUBLIC) // we'd never actually get this far in that case	WITHOUT_CLASSIFICATION	0.998772149218119	WITHOUT_CLASSIFICATION	0.0012278507818810408	IMPLEMENTATION
// one-dimensional array	WITHOUT_CLASSIFICATION	0.9999455965707121	WITHOUT_CLASSIFICATION	5.440342928796819E-5	IMPLEMENTATION
// n-dimensional array	WITHOUT_CLASSIFICATION	0.9999455965707121	WITHOUT_CLASSIFICATION	5.440342928796819E-5	IMPLEMENTATION
// if it's an array of arrays, recurse with the component type	WITHOUT_CLASSIFICATION	0.9999675171399955	WITHOUT_CLASSIFICATION	3.248286000439829E-5	IMPLEMENTATION
// we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods // see JRUBY-3130	WITHOUT_CLASSIFICATION	0.9999982113595549	WITHOUT_CLASSIFICATION	1.788640444983233E-6	IMPLEMENTATION
// Proc implementing an interface, pull in the catch-all code that lets the proc get invoked // no matter what method is called on the interface	WITHOUT_CLASSIFICATION	0.9999779407824422	WITHOUT_CLASSIFICATION	2.20592175579251E-5	IMPLEMENTATION
// can't be converted any more, return it	WITHOUT_CLASSIFICATION	0.9999671788689589	WITHOUT_CLASSIFICATION	3.282113104109496E-5	IMPLEMENTATION
// getFooBar() => fooBar?, foo_bar?(*)	WITHOUT_CLASSIFICATION	0.9999423668869933	WITHOUT_CLASSIFICATION	5.763311300664985E-5	IMPLEMENTATION
// If not a property, but is boolean add ?-postfixed aliases.	WITHOUT_CLASSIFICATION	0.9999603106800034	WITHOUT_CLASSIFICATION	3.9689319996674516E-5	IMPLEMENTATION
// many cases are ok to convert to float; if not one of these, error	WITHOUT_CLASSIFICATION	0.9874454460380809	WITHOUT_CLASSIFICATION	0.012554553961919153	IMPLEMENTATION
// for Object, default to natural wrapper type	WITHOUT_CLASSIFICATION	0.9999908906704111	WITHOUT_CLASSIFICATION	9.109329588781345E-6	IMPLEMENTATION
// rubyObject is already of the required jruby class (or subclass)	WITHOUT_CLASSIFICATION	0.9999671585065089	WITHOUT_CLASSIFICATION	3.284149349119595E-5	IMPLEMENTATION
// the converters handle not only primitive types but also their boxed versions, so we should check // if we have a converter before checking for isPrimitive()	WITHOUT_CLASSIFICATION	0.9997689505507662	WITHOUT_CLASSIFICATION	2.310494492339369E-4	IMPLEMENTATION
// it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9983425038798734	WITHOUT_CLASSIFICATION	0.0016574961201265232	IMPLEMENTATION
// we've found a Java type to which we've coerced the Ruby value, wrap it	WITHOUT_CLASSIFICATION	0.9998515168348611	WITHOUT_CLASSIFICATION	1.4848316513896924E-4	IMPLEMENTATION
// set of utility methods for Java-based proxy objects	WITHOUT_CLASSIFICATION	0.9999903072917827	WITHOUT_CLASSIFICATION	9.69270821720903E-6	IMPLEMENTATION
// the proxy (wrapper) type hierarchy	WITHOUT_CLASSIFICATION	0.999960059937162	WITHOUT_CLASSIFICATION	3.994006283794965E-5	IMPLEMENTATION
//InterfaceJavaProxy.createInterfaceJavaProxy(context);	WITHOUT_CLASSIFICATION	0.9995736327784496	WITHOUT_CLASSIFICATION	4.263672215503884E-4	IMPLEMENTATION
// also create the JavaProxy* classes	WITHOUT_CLASSIFICATION	0.999905311987477	WITHOUT_CLASSIFICATION	9.468801252310095E-5	IMPLEMENTATION
// The template for interface modules	WITHOUT_CLASSIFICATION	0.9999922318622391	WITHOUT_CLASSIFICATION	7.768137760878357E-6	IMPLEMENTATION
// Now attach Java-related extras to core classes	WITHOUT_CLASSIFICATION	0.999869836332412	WITHOUT_CLASSIFICATION	1.3016366758799073E-4	IMPLEMENTATION
// add all name-to-class mappings	WITHOUT_CLASSIFICATION	0.998669925968929	WITHOUT_CLASSIFICATION	0.0013300740310709833	IMPLEMENTATION
// add some base Java classes everyone will need	WITHOUT_CLASSIFICATION	0.9999382468933228	WITHOUT_CLASSIFICATION	6.17531066773063E-5	IMPLEMENTATION
// finally, set JavaSupport.isEnabled to true	WITHOUT_CLASSIFICATION	0.9998833109035439	WITHOUT_CLASSIFICATION	1.1668909645612601E-4	IMPLEMENTATION
// shouldn't happen, but if a superclass is specified, it's not ours	WITHOUT_CLASSIFICATION	0.999754616328137	WITHOUT_CLASSIFICATION	2.453836718630074E-4	IMPLEMENTATION
// include any interfaces we extend	WITHOUT_CLASSIFICATION	0.9983033986120103	WITHOUT_CLASSIFICATION	0.0016966013879895659	IMPLEMENTATION
// java.lang.Object is added at root of java proxy classes	WITHOUT_CLASSIFICATION	0.9999991841220114	WITHOUT_CLASSIFICATION	8.158779885647554E-7	IMPLEMENTATION
// other java proxy classes added under their superclass' java proxy	WITHOUT_CLASSIFICATION	0.9999961344454649	WITHOUT_CLASSIFICATION	3.865554535133397E-6	IMPLEMENTATION
// include interface modules into the proxy class	WITHOUT_CLASSIFICATION	0.9999939140698506	WITHOUT_CLASSIFICATION	6.085930149437581E-6	IMPLEMENTATION
// JRUBY-2938 the proxy class might already exist	WITHOUT_CLASSIFICATION	0.9999595752423536	WITHOUT_CLASSIFICATION	4.0424757646501436E-5	IMPLEMENTATION
// add java_method for unbound use	WITHOUT_CLASSIFICATION	0.9998107005481138	WITHOUT_CLASSIFICATION	1.89299451886107E-4	IMPLEMENTATION
// add alias to meta	WITHOUT_CLASSIFICATION	0.9997614896668988	WITHOUT_CLASSIFICATION	2.3851033310116895E-4	IMPLEMENTATION
// we'll only map conventional class names to modules 	WITHOUT_CLASSIFICATION	0.999994208723395	WITHOUT_CLASSIFICATION	5.791276604935535E-6	IMPLEMENTATION
/* expected */	WITHOUT_CLASSIFICATION	0.9999528041284345	WITHOUT_CLASSIFICATION	4.719587156560869E-5	IMPLEMENTATION
// Haven't found a class, continue on as though it were a package	WITHOUT_CLASSIFICATION	0.9999344138865649	WITHOUT_CLASSIFICATION	6.558611343513878E-5	IMPLEMENTATION
// upper case name, so most likely a class	WITHOUT_CLASSIFICATION	0.9999512510758012	WITHOUT_CLASSIFICATION	4.87489241987873E-5	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999995097963755	WITHOUT_CLASSIFICATION	4.902036244370836E-7	IMPLEMENTATION
// add alias to meta	WITHOUT_CLASSIFICATION	0.9997614896668988	WITHOUT_CLASSIFICATION	2.3851033310116895E-4	IMPLEMENTATION
// this is where we'll get connected when classes are opened using // package module syntax.	WITHOUT_CLASSIFICATION	0.9999887394254858	WITHOUT_CLASSIFICATION	1.1260574514188351E-5	IMPLEMENTATION
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9999913362923278	WITHOUT_CLASSIFICATION	8.663707672156552E-6	IMPLEMENTATION
// this covers primitives and (unlikely) lower-case class names	WITHOUT_CLASSIFICATION	0.9999011099007581	WITHOUT_CLASSIFICATION	9.889009924194756E-5	IMPLEMENTATION
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9997775745856677	WITHOUT_CLASSIFICATION	2.2242541433214246E-4	IMPLEMENTATION
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9997775745856677	WITHOUT_CLASSIFICATION	2.2242541433214246E-4	IMPLEMENTATION
// Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9999907169176085	WITHOUT_CLASSIFICATION	9.283082391382485E-6	IMPLEMENTATION
// Create list of interfaces to proxy (and make sure they really are interfaces)	WITHOUT_CLASSIFICATION	0.9999956310577666	WITHOUT_CLASSIFICATION	4.368942233348964E-6	IMPLEMENTATION
// hashcode is a combination of the interfaces and the Ruby class we're using // to implement them	WITHOUT_CLASSIFICATION	0.9998811540618663	WITHOUT_CLASSIFICATION	1.1884593813372923E-4	IMPLEMENTATION
// if it's a singleton class and the real class is proc, we're doing closure conversion // so just use Proc's hashcode	WITHOUT_CLASSIFICATION	0.9999976478917572	WITHOUT_CLASSIFICATION	2.3521082428276163E-6	IMPLEMENTATION
// normal new class implementing interfaces	WITHOUT_CLASSIFICATION	0.9998828471263085	WITHOUT_CLASSIFICATION	1.1715287369145865E-4	IMPLEMENTATION
/*         * Initialize some components.         */	WITHOUT_CLASSIFICATION	0.9999866551203132	WITHOUT_CLASSIFICATION	1.3344879686879167E-5	IMPLEMENTATION
// not synchronizing these methods, no harm if these values get set more // than once. // (also note that there's no chance of getting a partially initialized // class/module, as happens-before is guaranteed by volatile write/read // of constants table.)	WITHOUT_CLASSIFICATION	0.9999990894986777	WITHOUT_CLASSIFICATION	9.105013223567225E-7	IMPLEMENTATION
// Java reflection does not allow retrieving constructors like methods	WITHOUT_CLASSIFICATION	0.8200386955285939	WITHOUT_CLASSIFICATION	0.17996130447140624	IMPLEMENTATION
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9998209234539045	WITHOUT_CLASSIFICATION	1.7907654609546642E-4	IMPLEMENTATION
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9998209234539045	WITHOUT_CLASSIFICATION	1.7907654609546642E-4	IMPLEMENTATION
// no matching ctor found	WITHOUT_CLASSIFICATION	0.9999613378356376	WITHOUT_CLASSIFICATION	3.866216436243516E-5	IMPLEMENTATION
// Create Ruby proxies for any input arguments that are not primitives.	WITHOUT_CLASSIFICATION	0.9998420095286809	WITHOUT_CLASSIFICATION	1.579904713192418E-4	IMPLEMENTATION
// prepare a faster handle if handles are enabled and the method and class are public	WITHOUT_CLASSIFICATION	0.999972554454734	WITHOUT_CLASSIFICATION	2.7445545266030555E-5	IMPLEMENTATION
// must be a public method	WITHOUT_CLASSIFICATION	0.9999727081339576	WITHOUT_CLASSIFICATION	2.729186604240668E-5	IMPLEMENTATION
// must be a public class	WITHOUT_CLASSIFICATION	0.9999952458861107	WITHOUT_CLASSIFICATION	4.754113889382921E-6	IMPLEMENTATION
// must have been loaded from our known classloader hierarchy	WITHOUT_CLASSIFICATION	0.9999882553326785	WITHOUT_CLASSIFICATION	1.174466732148301E-5	IMPLEMENTATION
// Special classes like Collections.EMPTY_LIST are inner classes that are private but  // implement public interfaces.  Their methods are all public methods for the public  // interface.  Let these public methods execute via setAccessible(true). 	WITHOUT_CLASSIFICATION	0.9998737327475258	WITHOUT_CLASSIFICATION	1.2626725247425074E-4	IMPLEMENTATION
// search through all declared methods to find a closest match	WITHOUT_CLASSIFICATION	0.9999892353803951	WITHOUT_CLASSIFICATION	1.0764619605033983E-5	IMPLEMENTATION
// no matching method found	WITHOUT_CLASSIFICATION	0.9998849621748589	WITHOUT_CLASSIFICATION	1.1503782514104127E-4	IMPLEMENTATION
// this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.9999981524190518	WITHOUT_CLASSIFICATION	1.8475809482111232E-6	IMPLEMENTATION
/*         * First we need to register the JRuby engine.         */	WITHOUT_CLASSIFICATION	0.9999649760419062	WITHOUT_CLASSIFICATION	3.5023958093874284E-5	IMPLEMENTATION
/*         * Now we create a new BSFManager.         */	WITHOUT_CLASSIFICATION	0.9999850392175653	WITHOUT_CLASSIFICATION	1.4960782434669068E-5	IMPLEMENTATION
/*         * Initialize a simple Frame.          */	WITHOUT_CLASSIFICATION	0.9999958627381897	WITHOUT_CLASSIFICATION	4.1372618102352815E-6	IMPLEMENTATION
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9997652436395854	WITHOUT_CLASSIFICATION	2.3475636041465735E-4	IMPLEMENTATION
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9997652436395854	WITHOUT_CLASSIFICATION	2.3475636041465735E-4	IMPLEMENTATION
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.99994624270909	WITHOUT_CLASSIFICATION	5.375729090988086E-5	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.9992094603774344	WITHOUT_CLASSIFICATION	7.905396225655962E-4	IMPLEMENTATION
// // this test really means, that this is a ruby-defined subclass of a java class //	WITHOUT_CLASSIFICATION	0.9999981524190518	WITHOUT_CLASSIFICATION	1.8475809482111232E-6	IMPLEMENTATION
// for our purposes, Accessibles are also Members, and vice-versa, // so we'll include Member methods here.	WITHOUT_CLASSIFICATION	0.9999944819963499	WITHOUT_CLASSIFICATION	5.518003650121738E-6	IMPLEMENTATION
/*             * Declare those components as beans in BSF. Then it will be             * possible to access those components in Ruby as global             * variables ($frame, $menubar, ...)             */	WITHOUT_CLASSIFICATION	0.9999999973752653	WITHOUT_CLASSIFICATION	2.6247347452995166E-9	IMPLEMENTATION
/*              * Execute a Ruby script (add the menubar to the frame).             */	WITHOUT_CLASSIFICATION	0.9999980250435868	WITHOUT_CLASSIFICATION	1.9749564133023017E-6	IMPLEMENTATION
/*                     * Execute Ruby statements.                     */	WITHOUT_CLASSIFICATION	0.9999943742700548	WITHOUT_CLASSIFICATION	5.625729945326027E-6	IMPLEMENTATION
/*                     * Evaluates a Ruby expression and display the result.                     */	WITHOUT_CLASSIFICATION	0.9999965436026699	WITHOUT_CLASSIFICATION	3.4563973301156614E-6	IMPLEMENTATION
// Populate values for the parameter names	WITHOUT_CLASSIFICATION	0.9999995001611331	WITHOUT_CLASSIFICATION	4.998388668329836E-7	IMPLEMENTATION
/* package scope */	WITHOUT_CLASSIFICATION	0.9998890614736035	WITHOUT_CLASSIFICATION	1.1093852639661423E-4	IMPLEMENTATION
// This point is only reached if there was an exception handler // installed.	WITHOUT_CLASSIFICATION	0.9999995097963755	WITHOUT_CLASSIFICATION	4.902036244370836E-7	IMPLEMENTATION
// // Ruby-level methods //	WITHOUT_CLASSIFICATION	0.9999387720929227	WITHOUT_CLASSIFICATION	6.122790707726378E-5	IMPLEMENTATION
// need names ordered for key generation later	WITHOUT_CLASSIFICATION	0.9995949990520407	WITHOUT_CLASSIFICATION	4.050009479591554E-4	IMPLEMENTATION
// we only collect methods and interfaces for  // user-defined proxy classes.	WITHOUT_CLASSIFICATION	0.9999936267592151	WITHOUT_CLASSIFICATION	6.373240784834763E-6	IMPLEMENTATION
// get JavaClass if this is the new proxy class; verify it // matches if this is a superclass proxy.	WITHOUT_CLASSIFICATION	0.9999984906735818	WITHOUT_CLASSIFICATION	1.5093264182226233E-6	IMPLEMENTATION
// get any included interfaces	WITHOUT_CLASSIFICATION	0.9999623580242273	WITHOUT_CLASSIFICATION	3.764197577273193E-5	IMPLEMENTATION
// lock in the overridden methods for the new class, and any as-yet // uninstantiated ancestor class.	WITHOUT_CLASSIFICATION	0.999998625149808	WITHOUT_CLASSIFICATION	1.3748501920970716E-6	IMPLEMENTATION
// statically initialized below	WITHOUT_CLASSIFICATION	0.9999564536090639	WITHOUT_CLASSIFICATION	4.3546390936147474E-5	IMPLEMENTATION
// finish class initializer	WITHOUT_CLASSIFICATION	0.9994668946393206	WITHOUT_CLASSIFICATION	5.331053606792763E-4	IMPLEMENTATION
// trigger class initialization for the class	WITHOUT_CLASSIFICATION	0.9999495850844089	WITHOUT_CLASSIFICATION	5.041491559115549E-5	IMPLEMENTATION
// should not happen!	WITHOUT_CLASSIFICATION	0.9973038880811298	WITHOUT_CLASSIFICATION	0.002696111918870331	IMPLEMENTATION
// start class	WITHOUT_CLASSIFICATION	0.9999070534868794	WITHOUT_CLASSIFICATION	9.294651312057511E-5	IMPLEMENTATION
// make getter for handler	WITHOUT_CLASSIFICATION	0.9998674817635479	WITHOUT_CLASSIFICATION	1.3251823645202734E-4	IMPLEMENTATION
// make getter for proxy class	WITHOUT_CLASSIFICATION	0.9999658427881072	WITHOUT_CLASSIFICATION	3.415721189289336E-5	IMPLEMENTATION
// add (potentially) overridden names to the key. // TODO: see note above re: optimizations	WITHOUT_CLASSIFICATION	0.8615320646030853	IMPLEMENTATION	0.13846793539691468	WITHOUT_CLASSIFICATION
// We generate all constructors and let some fail during invocation later	WITHOUT_CLASSIFICATION	0.9998239088858089	WITHOUT_CLASSIFICATION	1.7609111419110063E-4	IMPLEMENTATION
// create static private method field	WITHOUT_CLASSIFICATION	0.9998982139867559	WITHOUT_CLASSIFICATION	1.0178601324410621E-4	IMPLEMENTATION
// load static empty array	WITHOUT_CLASSIFICATION	0.9999877529355831	WITHOUT_CLASSIFICATION	1.2247064416867046E-5	IMPLEMENTATION
// box arguments	WITHOUT_CLASSIFICATION	0.9998620382347384	WITHOUT_CLASSIFICATION	1.379617652615411E-4	IMPLEMENTATION
// this is a simple rethrow handler	WITHOUT_CLASSIFICATION	0.9999510112727181	WITHOUT_CLASSIFICATION	4.898872728194091E-5	IMPLEMENTATION
// // construct the super-proxy method //	WITHOUT_CLASSIFICATION	0.9996425205092362	WITHOUT_CLASSIFICATION	3.574794907638299E-4	IMPLEMENTATION
// do a void return	WITHOUT_CLASSIFICATION	0.9999020532962886	WITHOUT_CLASSIFICATION	9.79467037114758E-5	IMPLEMENTATION
// // utility methods //	WITHOUT_CLASSIFICATION	0.9999557028717126	WITHOUT_CLASSIFICATION	4.429712828749025E-5	IMPLEMENTATION
// Is there a supplied proc argument or do we assume a block was // supplied	WITHOUT_CLASSIFICATION	0.9999907169176085	WITHOUT_CLASSIFICATION	9.283082391382485E-6	IMPLEMENTATION
// store call information so method_missing impl can use it	WITHOUT_CLASSIFICATION	0.9995380260777341	WITHOUT_CLASSIFICATION	4.6197392226594294E-4	IMPLEMENTATION
// use the same logic as in EvaluationState	WITHOUT_CLASSIFICATION	0.9999877120231471	WITHOUT_CLASSIFICATION	1.2287976853055222E-5	IMPLEMENTATION
// no opt, no rest, exact match	WITHOUT_CLASSIFICATION	0.9999622377494424	WITHOUT_CLASSIFICATION	3.776225055772208E-5	IMPLEMENTATION
// only rest, must be at least required	WITHOUT_CLASSIFICATION	0.9998899084204186	WITHOUT_CLASSIFICATION	1.1009157958140106E-4	IMPLEMENTATION
// opt but no rest, must be at least required and no more than required + opt	WITHOUT_CLASSIFICATION	0.9995170015170368	WITHOUT_CLASSIFICATION	4.82998482963282E-4	IMPLEMENTATION
// opt and rest, must be at least required	WITHOUT_CLASSIFICATION	0.9998160057110123	WITHOUT_CLASSIFICATION	1.8399428898769644E-4	IMPLEMENTATION
// No block from a nil proc	WITHOUT_CLASSIFICATION	0.999993796235552	WITHOUT_CLASSIFICATION	6.2037644479715435E-6	IMPLEMENTATION
// If not already a proc then we should try and make it one.	WITHOUT_CLASSIFICATION	0.9910576703910304	WITHOUT_CLASSIFICATION	0.008942329608969653	IMPLEMENTATION
// The current block is already associated with proc.  No need to create a new one	WITHOUT_CLASSIFICATION	0.9998470867125628	WITHOUT_CLASSIFICATION	1.529132874370801E-4	IMPLEMENTATION
// Has the method that is calling super received a block argument	WITHOUT_CLASSIFICATION	0.999937329362243	WITHOUT_CLASSIFICATION	6.267063775698053E-5	IMPLEMENTATION
/* NUL */	WITHOUT_CLASSIFICATION	0.9999983452507534	WITHOUT_CLASSIFICATION	1.6547492466209219E-6	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9998431097921018	WITHOUT_CLASSIFICATION	1.5689020789826265E-4	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999668202946644	WITHOUT_CLASSIFICATION	3.317970533560378E-5	IMPLEMENTATION
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999831261715152	WITHOUT_CLASSIFICATION	1.6873828484781656E-5	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9991882765758284	WITHOUT_CLASSIFICATION	8.117234241715181E-4	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.999598425807291	WITHOUT_CLASSIFICATION	4.015741927090063E-4	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.999598425807291	WITHOUT_CLASSIFICATION	4.015741927090063E-4	IMPLEMENTATION
// classes are directly in the hierarchy, so no special logic is necessary for implementer	WITHOUT_CLASSIFICATION	0.9999997346961951	WITHOUT_CLASSIFICATION	2.653038049602894E-7	IMPLEMENTATION
// must be power of 2 // must be power of 2	WITHOUT_CLASSIFICATION	0.9999737617039363	WITHOUT_CLASSIFICATION	2.623829606380802E-5	IMPLEMENTATION
// Find power-of-two sizes best matching arguments	WITHOUT_CLASSIFICATION	0.9999215858579915	WITHOUT_CLASSIFICATION	7.841414200840539E-5	IMPLEMENTATION
// note segmentShift differs from ConcurrentHashMap's calculation due to // issues with System.identityHashCode (upper n bits always 0, at least  // under Java 1.6 / WinXP)	WITHOUT_CLASSIFICATION	0.9999978926310372	WITHOUT_CLASSIFICATION	2.1073689628144736E-6	IMPLEMENTATION
//      System.err.println("***ObjectProxyCache " + id + " started at "+ new java.util.Date());	WITHOUT_CLASSIFICATION	0.9998147630662974	WITHOUT_CLASSIFICATION	1.8523693370265195E-4	IMPLEMENTATION
//    protected void finalize() throws Throwable { //        System.err.println("***ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); //    }	WITHOUT_CLASSIFICATION	0.9997104747877971	WITHOUT_CLASSIFICATION	2.895252122028721E-4	IMPLEMENTATION
// EntryRefs include hash with key to facilitate lookup by Segment#expunge // after ref is removed from ReferenceQueue	WITHOUT_CLASSIFICATION	0.9997262864995582	WITHOUT_CLASSIFICATION	2.7371350044181264E-4	IMPLEMENTATION
// Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather // makes it a final field.  The theory is that doing so should force a happens-before // relationship WRT the WeakReference constructor, guaranteeing that the key will be // visibile to other threads (unless it's been GC'ed).  See JLS 17.5 (final fields) and // 17.4.5 (Happens-before order) to confirm or refute my reasoning here.	WITHOUT_CLASSIFICATION	0.9999899857488993	WITHOUT_CLASSIFICATION	1.0014251100637808E-5	IMPLEMENTATION
// references to the Java object and its proxy will either both be // weak or both be soft, since the proxy contains a strong reference // to the object, so it wouldn't make sense for the reference types // to differ.	WITHOUT_CLASSIFICATION	0.9999999608338099	WITHOUT_CLASSIFICATION	3.9166190153448054E-8	IMPLEMENTATION
// ctor used by remove/rehash	WITHOUT_CLASSIFICATION	0.9999680218366153	WITHOUT_CLASSIFICATION	3.197816338475901E-5	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.999992185008215	WITHOUT_CLASSIFICATION	7.814991785059235E-6	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.999992185008215	WITHOUT_CLASSIFICATION	7.814991785059235E-6	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.999992185008215	WITHOUT_CLASSIFICATION	7.814991785059235E-6	IMPLEMENTATION
// note that we'll potentially see the refs for both the java object and // proxy -- whichever we see first will cause the entry to be removed; // the other will not match an entry and will be ignored.	WITHOUT_CLASSIFICATION	0.9999902071962998	WITHOUT_CLASSIFICATION	9.792803700086989E-6	IMPLEMENTATION
// temp method to verify tableSize value // must be called under lock	WITHOUT_CLASSIFICATION	0.9999956041233602	WITHOUT_CLASSIFICATION	4.395876639878537E-6	IMPLEMENTATION
// Single node in list	WITHOUT_CLASSIFICATION	0.9999804374354134	WITHOUT_CLASSIFICATION	1.956256458653915E-5	IMPLEMENTATION
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999359187239885	WITHOUT_CLASSIFICATION	6.408127601159467E-5	IMPLEMENTATION
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999359187239885	WITHOUT_CLASSIFICATION	6.408127601159467E-5	IMPLEMENTATION
// entry exists, proxy has been gc'ed. replace entry.	WITHOUT_CLASSIFICATION	0.9994459959076986	WITHOUT_CLASSIFICATION	5.540040923013254E-4	IMPLEMENTATION
// Where we get new positions from.	WITHOUT_CLASSIFICATION	0.9992608432051868	WITHOUT_CLASSIFICATION	7.391567948131706E-4	IMPLEMENTATION
// Start of string ([, (, {, <, ', ", \n) 	WITHOUT_CLASSIFICATION	0.9999988867838362	WITHOUT_CLASSIFICATION	1.1132161638623834E-6	IMPLEMENTATION
// Number of newlines read from the reader	WITHOUT_CLASSIFICATION	0.9999974986374862	WITHOUT_CLASSIFICATION	2.5013625137515086E-6	IMPLEMENTATION
// How many bytes into the source are we?	WITHOUT_CLASSIFICATION	0.9999924221980858	WITHOUT_CLASSIFICATION	7.577801914223859E-6	IMPLEMENTATION
// For 'list' and only populated if list is not null.	WITHOUT_CLASSIFICATION	0.9997594243274118	WITHOUT_CLASSIFICATION	2.40575672588212E-4	IMPLEMENTATION
// Last full line read.	WITHOUT_CLASSIFICATION	0.9999118834770809	WITHOUT_CLASSIFICATION	8.811652291905064E-5	IMPLEMENTATION
// Save sourceLine for error reporting to display line where error occurred	WITHOUT_CLASSIFICATION	0.9994827334519955	WITHOUT_CLASSIFICATION	5.172665480045459E-4	IMPLEMENTATION
// Get rest of line. lineBuffer filled as side-effect...	WITHOUT_CLASSIFICATION	0.9999820393292603	WITHOUT_CLASSIFICATION	1.796067073956357E-5	IMPLEMENTATION
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999025225015105	WITHOUT_CLASSIFICATION	9.747749848953954E-5	IMPLEMENTATION
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999025225015105	WITHOUT_CLASSIFICATION	9.747749848953954E-5	IMPLEMENTATION
// End of string (], ), }, >, ', ", \0)	WITHOUT_CLASSIFICATION	0.99999875606319	WITHOUT_CLASSIFICATION	1.2439368100246336E-6	IMPLEMENTATION
// How many strings are nested in the current string term	WITHOUT_CLASSIFICATION	0.9999983877113294	WITHOUT_CLASSIFICATION	1.6122886706043967E-6	IMPLEMENTATION
// Single-quote fast path	WITHOUT_CLASSIFICATION	0.9998180994219726	WITHOUT_CLASSIFICATION	1.8190057802726508E-4	IMPLEMENTATION
// Regexp engine 'java'	WITHOUT_CLASSIFICATION	0.9999411141555874	WITHOUT_CLASSIFICATION	5.8885844412572664E-5	IMPLEMENTATION
// Was a goto in original ruby lexer	WITHOUT_CLASSIFICATION	0.9999807708071472	WITHOUT_CLASSIFICATION	1.9229192852775855E-5	IMPLEMENTATION
/* just ignore */	WITHOUT_CLASSIFICATION	0.9999868503347641	WITHOUT_CLASSIFICATION	1.3149665235860662E-5	IMPLEMENTATION
/* octal constant */	WITHOUT_CLASSIFICATION	0.9998739329226494	WITHOUT_CLASSIFICATION	1.2606707735070752E-4	IMPLEMENTATION
/* hex constant */	WITHOUT_CLASSIFICATION	0.9998784170182131	WITHOUT_CLASSIFICATION	1.2158298178686088E-4	IMPLEMENTATION
// PUSH(1)	WITHOUT_CLASSIFICATION	0.9999909584718885	WITHOUT_CLASSIFICATION	9.041528111615727E-6	IMPLEMENTATION
// POP	WITHOUT_CLASSIFICATION	0.9999909584718885	WITHOUT_CLASSIFICATION	9.041528111615727E-6	IMPLEMENTATION
// PUSH(0).  If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.	WITHOUT_CLASSIFICATION	0.9999647152171036	WITHOUT_CLASSIFICATION	3.528478289639092E-5	IMPLEMENTATION
// LEXPOP	WITHOUT_CLASSIFICATION	0.9999909584718885	WITHOUT_CLASSIFICATION	9.041528111615727E-6	IMPLEMENTATION
// SET_P	WITHOUT_CLASSIFICATION	0.9999909584718885	WITHOUT_CLASSIFICATION	9.041528111615727E-6	IMPLEMENTATION
// Marker delimiting heredoc boundary	WITHOUT_CLASSIFICATION	0.9998998639544636	WITHOUT_CLASSIFICATION	1.0013604553648366E-4	IMPLEMENTATION
// Found end marker for this heredoc	WITHOUT_CLASSIFICATION	0.9993748219088606	WITHOUT_CLASSIFICATION	6.25178091139384E-4	IMPLEMENTATION
// Put back lastLine for any elements past start of heredoc marker	WITHOUT_CLASSIFICATION	0.9999945572657954	WITHOUT_CLASSIFICATION	5.442734204514608E-6	IMPLEMENTATION
// Last token read via yylex().	WITHOUT_CLASSIFICATION	0.9999651740355389	WITHOUT_CLASSIFICATION	3.482596446113818E-5	IMPLEMENTATION
// Value of last token which had a value associated with it.	WITHOUT_CLASSIFICATION	0.9999947104441771	WITHOUT_CLASSIFICATION	5.289555822823503E-6	IMPLEMENTATION
// Stream of data that yylex() examines.	WITHOUT_CLASSIFICATION	0.9999772965489627	WITHOUT_CLASSIFICATION	2.2703451037311032E-5	IMPLEMENTATION
// Used for tiny smidgen of grammar in lexer (see setParserSupport())	WITHOUT_CLASSIFICATION	0.9999996107047181	WITHOUT_CLASSIFICATION	3.8929528199860373E-7	IMPLEMENTATION
// Give a name to a value.  Enebo: This should be used more.	WITHOUT_CLASSIFICATION	0.9999276598188517	WITHOUT_CLASSIFICATION	7.234018114842027E-5	IMPLEMENTATION
// When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').	WITHOUT_CLASSIFICATION	0.9990726391963083	WITHOUT_CLASSIFICATION	9.273608036918189E-4	IMPLEMENTATION
// Are we lexing Ruby 1.8 or 1.9+ syntax	WITHOUT_CLASSIFICATION	0.999858893191716	WITHOUT_CLASSIFICATION	1.4110680828417738E-4	IMPLEMENTATION
// Count of nested parentheses (1.9 only)	WITHOUT_CLASSIFICATION	0.9998488616836748	WITHOUT_CLASSIFICATION	1.511383163251195E-4	IMPLEMENTATION
// 1.9 only	WITHOUT_CLASSIFICATION	0.999820707187546	WITHOUT_CLASSIFICATION	1.7929281245392326E-4	IMPLEMENTATION
// Short-hand (e.g. %{,%.,%!,... versus %Q{).	WITHOUT_CLASSIFICATION	0.9999216001036382	WITHOUT_CLASSIFICATION	7.839989636179587E-5	IMPLEMENTATION
// Long-hand (e.g. %Q{}).	WITHOUT_CLASSIFICATION	0.9999568400324702	WITHOUT_CLASSIFICATION	4.3159967529791166E-5	IMPLEMENTATION
/* no mb || ismbchar(term)*/	WITHOUT_CLASSIFICATION	0.997471603543881	WITHOUT_CLASSIFICATION	0.0025283964561190592	IMPLEMENTATION
/*     * Not normally used, but is left in here since it can be useful in debugging     * grammar and lexing problems.     *     */	WITHOUT_CLASSIFICATION	0.9999997845728031	WITHOUT_CLASSIFICATION	2.1542719685618255E-7	IMPLEMENTATION
// DEBUGGING HELP 	WITHOUT_CLASSIFICATION	0.9995986062694772	WITHOUT_CLASSIFICATION	4.0139373052282767E-4	IMPLEMENTATION
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999983452507534	WITHOUT_CLASSIFICATION	1.6547492466209219E-6	IMPLEMENTATION
/* end of script. */	WITHOUT_CLASSIFICATION	0.9998500141244541	WITHOUT_CLASSIFICATION	1.4998587554595157E-4	IMPLEMENTATION
/* white spaces */	WITHOUT_CLASSIFICATION	0.9999542005387825	WITHOUT_CLASSIFICATION	4.579946121758485E-5	IMPLEMENTATION
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999983452507534	WITHOUT_CLASSIFICATION	1.6547492466209219E-6	IMPLEMENTATION
/* it's a comment */	WITHOUT_CLASSIFICATION	0.9998354395689565	WITHOUT_CLASSIFICATION	1.6456043104350803E-4	IMPLEMENTATION
// Replace a string of newlines with a single one	WITHOUT_CLASSIFICATION	0.9999951952944482	WITHOUT_CLASSIFICATION	4.804705551759319E-6	IMPLEMENTATION
/* $\: output record separator */	WITHOUT_CLASSIFICATION	0.9999924011333154	WITHOUT_CLASSIFICATION	7.5988666845058354E-6	IMPLEMENTATION
// EOF (ENEBO: After default?	WITHOUT_CLASSIFICATION	0.9999267802041276	WITHOUT_CLASSIFICATION	7.321979587234796E-5	IMPLEMENTATION
// documentation nodes	WITHOUT_CLASSIFICATION	0.9999335335991358	WITHOUT_CLASSIFICATION	6.64664008641496E-5	IMPLEMENTATION
// In case last next was the newline.	WITHOUT_CLASSIFICATION	0.9999380947115327	WITHOUT_CLASSIFICATION	6.190528846730882E-5	IMPLEMENTATION
// Just a plain bang	WITHOUT_CLASSIFICATION	0.9997564954163076	WITHOUT_CLASSIFICATION	2.43504583692266E-4	IMPLEMENTATION
/* $_: last read line string */	WITHOUT_CLASSIFICATION	0.9999998608575872	WITHOUT_CLASSIFICATION	1.3914241271515347E-7	IMPLEMENTATION
/* $~: match-data */	WITHOUT_CLASSIFICATION	0.9999264817012458	WITHOUT_CLASSIFICATION	7.351829875423047E-5	IMPLEMENTATION
/* $*: argv */	WITHOUT_CLASSIFICATION	0.9999264817012458	WITHOUT_CLASSIFICATION	7.351829875423047E-5	IMPLEMENTATION
/* $$: pid */	WITHOUT_CLASSIFICATION	0.9999268688220035	WITHOUT_CLASSIFICATION	7.313117799643857E-5	IMPLEMENTATION
/* $?: last status */	WITHOUT_CLASSIFICATION	0.9999856693452536	WITHOUT_CLASSIFICATION	1.4330654746432356E-5	IMPLEMENTATION
/* $!: error string */	WITHOUT_CLASSIFICATION	0.9999989009305497	WITHOUT_CLASSIFICATION	1.0990694503854467E-6	IMPLEMENTATION
/* $@: error position */	WITHOUT_CLASSIFICATION	0.9999699471677601	WITHOUT_CLASSIFICATION	3.0052832239931097E-5	IMPLEMENTATION
/* $/: input record separator */	WITHOUT_CLASSIFICATION	0.9999923528696018	WITHOUT_CLASSIFICATION	7.64713039831289E-6	IMPLEMENTATION
/* $;: field separator */	WITHOUT_CLASSIFICATION	0.9999949562347714	WITHOUT_CLASSIFICATION	5.043765228539974E-6	IMPLEMENTATION
/* $,: output field separator */	WITHOUT_CLASSIFICATION	0.9999932244408523	WITHOUT_CLASSIFICATION	6.775559147815612E-6	IMPLEMENTATION
/* $.: last read line number */	WITHOUT_CLASSIFICATION	0.9999930975308503	WITHOUT_CLASSIFICATION	6.902469149615377E-6	IMPLEMENTATION
/* $=: ignorecase */	WITHOUT_CLASSIFICATION	0.9999264817012458	WITHOUT_CLASSIFICATION	7.351829875423047E-5	IMPLEMENTATION
/* $:: load path */	WITHOUT_CLASSIFICATION	0.9997801948396037	WITHOUT_CLASSIFICATION	2.1980516039634315E-4	IMPLEMENTATION
/* $<: reading filename */	WITHOUT_CLASSIFICATION	0.9999982709180099	WITHOUT_CLASSIFICATION	1.729081990141882E-6	IMPLEMENTATION
/* $": already loaded files */	WITHOUT_CLASSIFICATION	0.999998181961219	WITHOUT_CLASSIFICATION	1.8180387809918835E-6	IMPLEMENTATION
/* $&: last match */	WITHOUT_CLASSIFICATION	0.9999758525722228	WITHOUT_CLASSIFICATION	2.4147427777326566E-5	IMPLEMENTATION
/* $`: string before last match */	WITHOUT_CLASSIFICATION	0.9999999149604231	WITHOUT_CLASSIFICATION	8.50395770092266E-8	IMPLEMENTATION
/* $': string after last match */	WITHOUT_CLASSIFICATION	0.9999999067004138	WITHOUT_CLASSIFICATION	9.329958620887493E-8	IMPLEMENTATION
// methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop	WITHOUT_CLASSIFICATION	0.9999994974428276	WITHOUT_CLASSIFICATION	5.025571723780766E-7	IMPLEMENTATION
/* See if it is a reserved word.  */	WITHOUT_CLASSIFICATION	0.9999980492043661	WITHOUT_CLASSIFICATION	1.9507956338921647E-6	IMPLEMENTATION
// enum lex_state	WITHOUT_CLASSIFICATION	0.9995986748094808	WITHOUT_CLASSIFICATION	4.0132519051921424E-4	IMPLEMENTATION
// block (primary)	WITHOUT_CLASSIFICATION	0.9994787633788035	WITHOUT_CLASSIFICATION	5.212366211965342E-4	IMPLEMENTATION
// block (expr)	WITHOUT_CLASSIFICATION	0.9994787633788035	WITHOUT_CLASSIFICATION	5.212366211965342E-4	IMPLEMENTATION
// hash	WITHOUT_CLASSIFICATION	0.9999911984891663	WITHOUT_CLASSIFICATION	8.801510833712312E-6	IMPLEMENTATION
// ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.	WITHOUT_CLASSIFICATION	0.9999765426911301	WITHOUT_CLASSIFICATION	2.3457308869836814E-5	IMPLEMENTATION
// FIXME: peek('u') utf8 stuff for 1.9	WITHOUT_CLASSIFICATION	0.9738015235581642	WITHOUT_CLASSIFICATION	0.026198476441835775	IMPLEMENTATION
// We don't append '+' since Java number parser gets confused	WITHOUT_CLASSIFICATION	0.9999916523627489	WITHOUT_CLASSIFICATION	8.347637251078063E-6	IMPLEMENTATION
//  hexadecimal	WITHOUT_CLASSIFICATION	0.9996372656750445	WITHOUT_CLASSIFICATION	3.6273432495545607E-4	IMPLEMENTATION
// binary	WITHOUT_CLASSIFICATION	0.9999931871324805	WITHOUT_CLASSIFICATION	6.81286751946685E-6	IMPLEMENTATION
// decimal	WITHOUT_CLASSIFICATION	0.9999934978923347	WITHOUT_CLASSIFICATION	6.5021076653412375E-6	IMPLEMENTATION
//Octal	WITHOUT_CLASSIFICATION	0.9999670845889459	WITHOUT_CLASSIFICATION	3.291541105411755E-5	IMPLEMENTATION
//  '_' in number just ignored	WITHOUT_CLASSIFICATION	0.9999838165458161	WITHOUT_CLASSIFICATION	1.6183454183795395E-5	IMPLEMENTATION
// backslash	WITHOUT_CLASSIFICATION	0.9996037470647144	WITHOUT_CLASSIFICATION	3.962529352855561E-4	IMPLEMENTATION
// newline	WITHOUT_CLASSIFICATION	0.9999913069587067	WITHOUT_CLASSIFICATION	8.693041293266855E-6	IMPLEMENTATION
// horizontal tab	WITHOUT_CLASSIFICATION	0.99876335408295	WITHOUT_CLASSIFICATION	0.0012366459170500192	IMPLEMENTATION
// form feed	WITHOUT_CLASSIFICATION	0.9995517192583441	WITHOUT_CLASSIFICATION	4.4828074165594224E-4	IMPLEMENTATION
// vertical tab	WITHOUT_CLASSIFICATION	0.9986096861219884	WITHOUT_CLASSIFICATION	0.0013903138780115105	IMPLEMENTATION
// alarm(bell)	WITHOUT_CLASSIFICATION	0.999598425807291	WITHOUT_CLASSIFICATION	4.015741927090063E-4	IMPLEMENTATION
// escape	WITHOUT_CLASSIFICATION	0.9999975674538065	WITHOUT_CLASSIFICATION	2.432546193546708E-6	IMPLEMENTATION
// hex constant	WITHOUT_CLASSIFICATION	0.999336027650744	WITHOUT_CLASSIFICATION	6.63972349256044E-4	IMPLEMENTATION
//char hexValue = scanHex(2);	WITHOUT_CLASSIFICATION	0.9997700161405438	WITHOUT_CLASSIFICATION	2.2998385945615832E-4	IMPLEMENTATION
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999953206469668	WITHOUT_CLASSIFICATION	4.679353033272902E-6	IMPLEMENTATION
// space	WITHOUT_CLASSIFICATION	0.9999972931882628	WITHOUT_CLASSIFICATION	2.7068117372049055E-6	IMPLEMENTATION
// Where we started this marker match	WITHOUT_CLASSIFICATION	0.9996253960877004	WITHOUT_CLASSIFICATION	3.746039122996567E-4	IMPLEMENTATION
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999998139854674	WITHOUT_CLASSIFICATION	1.8601453264240118E-7	IMPLEMENTATION
// We use offset here to keep track of extra newlines for windows	WITHOUT_CLASSIFICATION	0.9999818066255334	WITHOUT_CLASSIFICATION	1.8193374466616122E-5	IMPLEMENTATION
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999953206469668	WITHOUT_CLASSIFICATION	4.679353033272902E-6	IMPLEMENTATION
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.5222763805665785	IMPLEMENTATION	0.47772361943342145	WITHOUT_CLASSIFICATION
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.5222763805665785	IMPLEMENTATION	0.47772361943342145	WITHOUT_CLASSIFICATION
// Where we get our newest char's	WITHOUT_CLASSIFICATION	0.9999517687879376	WITHOUT_CLASSIFICATION	4.823121206243885E-5	IMPLEMENTATION
// Our readback/pushback buffer.	WITHOUT_CLASSIFICATION	0.9998835333523712	WITHOUT_CLASSIFICATION	1.1646664762869344E-4	IMPLEMENTATION
// index of last character in pushback buffer	WITHOUT_CLASSIFICATION	0.9999854997766349	WITHOUT_CLASSIFICATION	1.4500223365159526E-5	IMPLEMENTATION
// Character read before previous read	WITHOUT_CLASSIFICATION	0.9999852139357802	WITHOUT_CLASSIFICATION	1.4786064219825659E-5	IMPLEMENTATION
// keep value of twoAgo around so we can restore after we unread	WITHOUT_CLASSIFICATION	0.9999959992661238	WITHOUT_CLASSIFICATION	4.000733876219066E-6	IMPLEMENTATION
// NetProtocolBufferedIOLibrary	WITHOUT_CLASSIFICATION	0.999882847834233	WITHOUT_CLASSIFICATION	1.171521657668933E-4	IMPLEMENTATION
// BigDecimalLibrary	WITHOUT_CLASSIFICATION	0.999598425807291	WITHOUT_CLASSIFICATION	4.015741927090063E-4	IMPLEMENTATION
// TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. // We did it here for now	WITHOUT_CLASSIFICATION	0.9532144045838765	IMPLEMENTATION	0.046785595416123475	WITHOUT_CLASSIFICATION
// Ruby's designation for some platforms, minus version numbers in some cases	WITHOUT_CLASSIFICATION	0.9999884281857425	WITHOUT_CLASSIFICATION	1.1571814257390702E-5	IMPLEMENTATION
// that's what JDK5 produces on Windows Vista	WITHOUT_CLASSIFICATION	0.9944052521648185	WITHOUT_CLASSIFICATION	0.00559474783518155	IMPLEMENTATION
// Rubygems is too specific on host cpu so until we have real need lets default to universal //setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));	WITHOUT_CLASSIFICATION	0.9994850001517026	WITHOUT_CLASSIFICATION	5.149998482974528E-4	IMPLEMENTATION
// Our shell scripts pass in non-canonicalized paths, but even if we didn't // anyone who did would become unhappy because Ruby apps expect no relative // operators in the pathname (rubygems, for example).	WITHOUT_CLASSIFICATION	0.9999988446566804	WITHOUT_CLASSIFICATION	1.1553433196337247E-6	IMPLEMENTATION
// this set is only for darwin	WITHOUT_CLASSIFICATION	0.9999921023918122	WITHOUT_CLASSIFICATION	7.897608187804476E-6	IMPLEMENTATION
// DigestLibrary	WITHOUT_CLASSIFICATION	0.999598425807291	WITHOUT_CLASSIFICATION	4.015741927090063E-4	IMPLEMENTATION
// all errors, just info; do not prevent loading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.99375501269013	WITHOUT_CLASSIFICATION	0.006244987309869931	IMPLEMENTATION
// all errors, just info; do not prevent unloading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.99268217841876	WITHOUT_CLASSIFICATION	0.0073178215812399645	IMPLEMENTATION
// do nothing, return dummy version below	WITHOUT_CLASSIFICATION	0.9999744272487052	WITHOUT_CLASSIFICATION	2.557275129470282E-5	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
// line 329	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9996001322895308	WITHOUT_CLASSIFICATION	3.998677104692156E-4	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999390275535478	WITHOUT_CLASSIFICATION	6.097244645220221E-5	IMPLEMENTATION
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9998920084015321	WITHOUT_CLASSIFICATION	1.0799159846783497E-4	IMPLEMENTATION
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999417627384991	WITHOUT_CLASSIFICATION	5.82372615009793E-5	IMPLEMENTATION
// shift to yyN	WITHOUT_CLASSIFICATION	0.9996553284202009	WITHOUT_CLASSIFICATION	3.4467157979912354E-4	IMPLEMENTATION
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9996055090723795	WITHOUT_CLASSIFICATION	3.944909276204881E-4	IMPLEMENTATION
// leave stack alone	WITHOUT_CLASSIFICATION	0.9997844255515551	WITHOUT_CLASSIFICATION	2.1557444844485984E-4	IMPLEMENTATION
// line 271	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 274	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 303	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 311	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 314	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 317	WITHOUT_CLASSIFICATION	0.9994244551870535	WITHOUT_CLASSIFICATION	5.755448129464402E-4	IMPLEMENTATION
// line 332	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 338	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 341	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 344	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 351	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 358	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 367	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 372	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 378	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 382	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 407	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 411	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 414	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 417	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 420	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 426	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 434	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 443	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 446	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 452	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 457	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 464	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 467	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 470	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 479	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 484	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 486	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 492	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 498	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 501	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 504	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 507	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 510	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 519	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 525	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
// line 537	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 540	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 543	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 546	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 556	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 559	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 563	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 566	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 569	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 575	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 578	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 587	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 596	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 604	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 607	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 610	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 613	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 616	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 634	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 638	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 643	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 646	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 655	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 660	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 667	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 670	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 672	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 696	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 701	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 717	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 720	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 726	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 729	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 732	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 735	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 738	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 751	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 754	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 757	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 760	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 763	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 769	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 772	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 775	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 782	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 788	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 791	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 794	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 797	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 803	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 806	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 809	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 815	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 818	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 821	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 824	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 830	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 833	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 836	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 839	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 842	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 848	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 852	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 858	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 861	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 868	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 871	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 876	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 879	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 883	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 893	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 896	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 899	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 903	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 907	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 915	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 920	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 923	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 926	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 932	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 936	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 940	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 944	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 948	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 956	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 960	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 964	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 967	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 972	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 978	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 980	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 984	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 986	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 996	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1001	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1004	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1008	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1014	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1029	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1032	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1034	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1045	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1048	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1051	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1058	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1070	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1073	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1076	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1079	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1082	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1089	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1097	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1100	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1103	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1107	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1111	WITHOUT_CLASSIFICATION	0.9994251589543921	WITHOUT_CLASSIFICATION	5.748410456079021E-4	IMPLEMENTATION
// line 1113	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1115	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1119	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1130	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1133	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1135	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1137	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1140	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1151	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1154	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1158	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1164	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1175	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1178	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1187	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1189	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1193	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1204	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1207	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1210	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1214	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1234	WITHOUT_CLASSIFICATION	0.9994275656487822	WITHOUT_CLASSIFICATION	5.724343512177332E-4	IMPLEMENTATION
// line 1239	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1243	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1247	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1251	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1263	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1269	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1280	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1283	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1290	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1296	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1299	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1302	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1309	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1313	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1315	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1320	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1328	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1335	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1348	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1352	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1358	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1374	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1381	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1387	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1392	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1415	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1431	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1434	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1440	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1443	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1453	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1456	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1462	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1465	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1470	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1477	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1480	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1485	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1488	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1496	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1502	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1510	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1513	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1516	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1533	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1550	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1553	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1556	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1565	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1568	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1571	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1574	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1577	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1587	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1595	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1598	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1600	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1609	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1623	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1626	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1629	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1632	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1638	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1641	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1644	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1649	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1655	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1658	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1661	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1672	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1677	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1687	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1694	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1705	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1708	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1725	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1733	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1742	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1745	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1749	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1757	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1769	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1772	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1775	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1784	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1808	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1814	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1818	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1822	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
/* force for args */	WITHOUT_CLASSIFICATION	0.9999133156565629	WITHOUT_CLASSIFICATION	8.668434343697363E-5	IMPLEMENTATION
/*XXX 0;*/	WITHOUT_CLASSIFICATION	0.9999670845889459	WITHOUT_CLASSIFICATION	3.291541105411755E-5	IMPLEMENTATION
/*                      $$ = $3;*/	WITHOUT_CLASSIFICATION	0.9933062280376526	WITHOUT_CLASSIFICATION	0.006693771962347477	IMPLEMENTATION
/*                  }*/	WITHOUT_CLASSIFICATION	0.9980378406376249	WITHOUT_CLASSIFICATION	0.001962159362375156	IMPLEMENTATION
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9997568721832523	WITHOUT_CLASSIFICATION	2.4312781674773405E-4	IMPLEMENTATION
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9917302840137717	WITHOUT_CLASSIFICATION	0.008269715986228325	IMPLEMENTATION
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9948533396622432	WITHOUT_CLASSIFICATION	0.0051466603377567635	IMPLEMENTATION
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9948533396622432	WITHOUT_CLASSIFICATION	0.0051466603377567635	IMPLEMENTATION
/* NOEX_PRIVATE for toplevel */	WITHOUT_CLASSIFICATION	0.9999916183371901	WITHOUT_CLASSIFICATION	8.381662809983654E-6	IMPLEMENTATION
/*mirko: check*/	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
/* Include pipes on multiple arg type*/	WITHOUT_CLASSIFICATION	0.7802791207824971	WITHOUT_CLASSIFICATION	0.21972087921750294	IMPLEMENTATION
// line 529	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9958251846300302	WITHOUT_CLASSIFICATION	0.004174815369969708	IMPLEMENTATION
/* XXX*/	WITHOUT_CLASSIFICATION	0.9994126550247135	WITHOUT_CLASSIFICATION	5.873449752864846E-4	IMPLEMENTATION
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999923258167487	WITHOUT_CLASSIFICATION	7.674183251357012E-6	IMPLEMENTATION
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.995594873882399	WITHOUT_CLASSIFICATION	0.004405126117600944	IMPLEMENTATION
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9958251846300302	WITHOUT_CLASSIFICATION	0.004174815369969708	IMPLEMENTATION
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9924419637188839	WITHOUT_CLASSIFICATION	0.007558036281116072	IMPLEMENTATION
// line 1827 "DefaultRubyParser.y"	WITHOUT_CLASSIFICATION	0.9998320430023372	WITHOUT_CLASSIFICATION	1.679569976627556E-4	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.999920813673311	WITHOUT_CLASSIFICATION	7.918632668894549E-5	IMPLEMENTATION
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9995413109424534	WITHOUT_CLASSIFICATION	4.586890575467436E-4	IMPLEMENTATION
// line 7713 "-"	WITHOUT_CLASSIFICATION	0.9994249669453151	WITHOUT_CLASSIFICATION	5.75033054684887E-4	IMPLEMENTATION
// local scopes are argument scopes by default	WITHOUT_CLASSIFICATION	0.9999992342766103	WITHOUT_CLASSIFICATION	7.657233896873437E-7	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999982727546598	WITHOUT_CLASSIFICATION	1.7272453402401757E-6	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999982727546598	WITHOUT_CLASSIFICATION	1.7272453402401757E-6	IMPLEMENTATION
// We know this is a block scope because a local scope cannot be within a local scope // If topScope was itself it would have created a LocalAsgnNode above.	WITHOUT_CLASSIFICATION	0.9999985299106072	WITHOUT_CLASSIFICATION	1.470089392809122E-6	IMPLEMENTATION
// ENEBO: 1.9 has CURR nodes for local/block variables.  We don't.  I believe we follow proper logic	WITHOUT_CLASSIFICATION	0.9998602288779297	WITHOUT_CLASSIFICATION	1.397711220702633E-4	IMPLEMENTATION
// odd...but it is odd in ruby too.	WITHOUT_CLASSIFICATION	0.9999871810337583	WITHOUT_CLASSIFICATION	1.2818966241802947E-5	IMPLEMENTATION
// What linenumber will the source think it starts from?	WITHOUT_CLASSIFICATION	0.9998642565255484	WITHOUT_CLASSIFICATION	1.357434744516348E-4	IMPLEMENTATION
// Is this inline source (aka -e "...source...")	WITHOUT_CLASSIFICATION	0.9996667757864997	WITHOUT_CLASSIFICATION	3.332242135003448E-4	IMPLEMENTATION
// We parse evals more often in source so assume an eval parse.	WITHOUT_CLASSIFICATION	0.9999954103814777	WITHOUT_CLASSIFICATION	4.589618522332522E-6	IMPLEMENTATION
// Should positions added extra IDE-friendly information and leave in all newline nodes	WITHOUT_CLASSIFICATION	0.9999994037969534	WITHOUT_CLASSIFICATION	5.962030466078222E-7	IMPLEMENTATION
// Will parser parse Duby grammar Extensions	WITHOUT_CLASSIFICATION	0.9999172624540994	WITHOUT_CLASSIFICATION	8.273754590061939E-5	IMPLEMENTATION
// Should we display extra debug information while parsing?	WITHOUT_CLASSIFICATION	0.9999479117016961	WITHOUT_CLASSIFICATION	5.2088298303932716E-5	IMPLEMENTATION
// __END__ marker offset (-1 means none present)	WITHOUT_CLASSIFICATION	0.9999486041473684	WITHOUT_CLASSIFICATION	5.139585263167761E-5	IMPLEMENTATION
// Parser states:	WITHOUT_CLASSIFICATION	0.9996005946095691	WITHOUT_CLASSIFICATION	3.9940539043085776E-4	IMPLEMENTATION
// Is the parser current within a singleton (value is number of nested singletons)	WITHOUT_CLASSIFICATION	0.9996613285809278	WITHOUT_CLASSIFICATION	3.386714190722453E-4	IMPLEMENTATION
// Is the parser currently within a method definition	WITHOUT_CLASSIFICATION	0.9914532118207031	WITHOUT_CLASSIFICATION	0.008546788179296941	IMPLEMENTATION
// LOCALVAR	WITHOUT_CLASSIFICATION	0.999598425807291	WITHOUT_CLASSIFICATION	4.015741927090063E-4	IMPLEMENTATION
// CONSTANT	WITHOUT_CLASSIFICATION	0.999598425807291	WITHOUT_CLASSIFICATION	4.015741927090063E-4	IMPLEMENTATION
// INSTANCE VARIABLE	WITHOUT_CLASSIFICATION	0.999598425807291	WITHOUT_CLASSIFICATION	4.015741927090063E-4	IMPLEMENTATION
// Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])	WITHOUT_CLASSIFICATION	0.999847668696987	WITHOUT_CLASSIFICATION	1.5233130301299337E-4	IMPLEMENTATION
/* MRI: block_append */	WITHOUT_CLASSIFICATION	0.9999881958820876	WITHOUT_CLASSIFICATION	1.1804117912266345E-5	IMPLEMENTATION
// Reduces overhead in interp by not set position every single line we encounter. 	WITHOUT_CLASSIFICATION	0.9968948017362579	WITHOUT_CLASSIFICATION	0.0031051982637420737	IMPLEMENTATION
// Assumption: tail is never a list node	WITHOUT_CLASSIFICATION	0.9991047225706404	WITHOUT_CLASSIFICATION	8.952774293595605E-4	IMPLEMENTATION
//        return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));	WITHOUT_CLASSIFICATION	0.9999341139676943	WITHOUT_CLASSIFICATION	6.58860323057719E-5	IMPLEMENTATION
// Node	WITHOUT_CLASSIFICATION	0.9999911416290447	WITHOUT_CLASSIFICATION	8.858370955318142E-6	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9485204983571361	WITHOUT_CLASSIFICATION	0.051479501642863766	IMPLEMENTATION
/*case CONSTNODE:                handleUselessWarn(node, "a constant"); return;*/	WITHOUT_CLASSIFICATION	0.9996148696800903	WITHOUT_CLASSIFICATION	3.851303199097286E-4	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9485204983571361	WITHOUT_CLASSIFICATION	0.051479501642863766	IMPLEMENTATION
/*case CLASSNODE: case COLON2NODE:                handleUselessWarn(node, "::"); return;*/	WITHOUT_CLASSIFICATION	0.9994302550660079	WITHOUT_CLASSIFICATION	5.697449339921258E-4	IMPLEMENTATION
/*case SELFNODE:                handleUselessWarn(node, "self"); return;*/	WITHOUT_CLASSIFICATION	0.9996148696800903	WITHOUT_CLASSIFICATION	3.851303199097286E-4	IMPLEMENTATION
// FIXME: DSTR,EVSTR,STR: warning "string literal in condition"	WITHOUT_CLASSIFICATION	0.9906350491799246	WITHOUT_CLASSIFICATION	0.009364950820075324	IMPLEMENTATION
/* MRI: range_op */	WITHOUT_CLASSIFICATION	0.9999264817012458	WITHOUT_CLASSIFICATION	7.351829875423047E-5	IMPLEMENTATION
// Block and block pass passed in at same time....uh oh	WITHOUT_CLASSIFICATION	0.9999698292440864	WITHOUT_CLASSIFICATION	3.0170755913674517E-5	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.9999909584718885	WITHOUT_CLASSIFICATION	9.041528111615727E-6	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.9999909584718885	WITHOUT_CLASSIFICATION	9.041528111615727E-6	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.9999909584718885	WITHOUT_CLASSIFICATION	9.041528111615727E-6	IMPLEMENTATION
// tail must be EvStrNode at this point 	WITHOUT_CLASSIFICATION	0.9997801711498046	WITHOUT_CLASSIFICATION	2.1982885019536442E-4	IMPLEMENTATION
//Do not add an empty string node	WITHOUT_CLASSIFICATION	0.9999491419758387	WITHOUT_CLASSIFICATION	5.0858024161214614E-5	IMPLEMENTATION
// Zero-Argument declaration	WITHOUT_CLASSIFICATION	0.9999596824191869	WITHOUT_CLASSIFICATION	4.031758081306723E-5	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999390275535478	WITHOUT_CLASSIFICATION	6.097244645220221E-5	IMPLEMENTATION
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999417627384991	WITHOUT_CLASSIFICATION	5.82372615009793E-5	IMPLEMENTATION
// shift to yyN	WITHOUT_CLASSIFICATION	0.9996553284202009	WITHOUT_CLASSIFICATION	3.4467157979912354E-4	IMPLEMENTATION
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9996055090723795	WITHOUT_CLASSIFICATION	3.944909276204881E-4	IMPLEMENTATION
// leave stack alone	WITHOUT_CLASSIFICATION	0.9997844255515551	WITHOUT_CLASSIFICATION	2.1557444844485984E-4	IMPLEMENTATION
// line 321	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 351	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 382	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 417	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 420	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 423	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 426	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 280	WITHOUT_CLASSIFICATION	0.9994248665452379	WITHOUT_CLASSIFICATION	5.75133454762074E-4	IMPLEMENTATION
// line 283	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 296	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 324	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 327	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 331	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 333	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 336	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 342	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 345	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 348	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 354	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 368	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 377	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 388	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 392	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 397	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 429	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 432	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 436	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 445	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 448	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 454	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 459	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 466	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 469	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 478	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 481	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 488	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 494	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 497	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 503	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 506	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 509	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 512	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 521	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 526	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 540	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 543	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 546	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 566	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 610	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 672	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 691	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 696	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 772	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 782	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 785	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 788	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 791	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 534	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 549	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 552	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 558	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 561	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 571	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 574	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 579	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 586	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 589	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 592	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 595	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 598	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 623	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 627	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 630	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 633	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 639	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 648	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 657	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 661	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 666	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 678	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 682	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 688	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 699	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 706	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 708	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 727	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 737	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 753	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 779	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 801	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 808	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 811	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 817	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 842	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 845	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 848	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 893	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 899	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 932	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 944	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 960	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 980	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1004	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1038	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 820	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 826	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 829	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 832	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 851	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 857	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 860	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 863	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 866	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 869	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 875	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 884	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 887	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 890	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 902	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 909	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 912	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 916	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 922	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 928	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 941	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 947	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 951	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 955	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 965	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 969	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 977	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 983	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1013	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1023	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1035	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1041	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1043	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1054	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1057	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1060	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1069	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1075	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1105	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1111	WITHOUT_CLASSIFICATION	0.9994251589543921	WITHOUT_CLASSIFICATION	5.748410456079021E-4	IMPLEMENTATION
// line 1122	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1130	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1140	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1158	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1204	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1207	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1247	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1251	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1261	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1078	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1084	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1087	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1090	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1093	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1114	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1116	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1118	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1124	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1126	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1138	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1144	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1149	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1155	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1162	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1173	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1179	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1182	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1190	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1196	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1213	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1217	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1231	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1236	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1244	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1254	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1258	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1264	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1270	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1273	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1276	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1279	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1282	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1289	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1292	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1295	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1298	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1305	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1348	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1387	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1392	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1448	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1462	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1470	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1496	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1502	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1595	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1598	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1308	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1311	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1317	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1323	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1326	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1329	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1337	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1342	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1345	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1354	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1359	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1366	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1369	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1373	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1377	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1383	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1399	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1401	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1406	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1417	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1424	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1427	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1430	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1433	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1436	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1442	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1445	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1458	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1464	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1489	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1493	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1507	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1519	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1532	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1538	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1542	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1557	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1573	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1591	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1615	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1629	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1632	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1705	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1716	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1725	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1742	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1749	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1818	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1822	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1607	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1610	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1622	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1625	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1636	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1639	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1647	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1651	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1657	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1660	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1663	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1678	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1702	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1711	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1719	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1722	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1731	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1734	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1738	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1746	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1756	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1758	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1761	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1767	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1776	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1782	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1785	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1788	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1791	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1797	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1800	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1803	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1806	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1809	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1815	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1825	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1828	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1831	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1847	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9948533396622432	WITHOUT_CLASSIFICATION	0.0051466603377567635	IMPLEMENTATION
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9948533396622432	WITHOUT_CLASSIFICATION	0.0051466603377567635	IMPLEMENTATION
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9958251846300302	WITHOUT_CLASSIFICATION	0.004174815369969708	IMPLEMENTATION
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999923258167487	WITHOUT_CLASSIFICATION	7.674183251357012E-6	IMPLEMENTATION
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.995594873882399	WITHOUT_CLASSIFICATION	0.004405126117600944	IMPLEMENTATION
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9958251846300302	WITHOUT_CLASSIFICATION	0.004174815369969708	IMPLEMENTATION
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9924419637188839	WITHOUT_CLASSIFICATION	0.007558036281116072	IMPLEMENTATION
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9998833414877275	WITHOUT_CLASSIFICATION	1.1665851227239598E-4	IMPLEMENTATION
// line 1854	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1869	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1872	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1877	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1886	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1898	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1902	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1905	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1911	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1918	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1935	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1938	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1942	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1948	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1960	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1963	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1968	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1972	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1982	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1995	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 2000	WITHOUT_CLASSIFICATION	0.9994248410374919	WITHOUT_CLASSIFICATION	5.751589625080433E-4	IMPLEMENTATION
// line 2006	WITHOUT_CLASSIFICATION	0.9994246152477331	WITHOUT_CLASSIFICATION	5.753847522668837E-4	IMPLEMENTATION
// line 2010	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
/* We may need to subtract addition offset off of first */	WITHOUT_CLASSIFICATION	0.9999925820899482	WITHOUT_CLASSIFICATION	7.417910051697963E-6	IMPLEMENTATION
/* string fragment (we optimistically take one off in*/	WITHOUT_CLASSIFICATION	0.9999366091921723	WITHOUT_CLASSIFICATION	6.339080782769702E-5	IMPLEMENTATION
/* ParserSupport.literal_concat).  Check token length*/	WITHOUT_CLASSIFICATION	0.9923618002000265	WITHOUT_CLASSIFICATION	0.007638199799973449	IMPLEMENTATION
/* and subtract as neeeded.*/	WITHOUT_CLASSIFICATION	0.9991681740330968	WITHOUT_CLASSIFICATION	8.318259669032552E-4	IMPLEMENTATION
/*                    $$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);  */	WITHOUT_CLASSIFICATION	0.9999797621759313	WITHOUT_CLASSIFICATION	2.0237824068695206E-5	IMPLEMENTATION
/* ENEBO: arg surrounded by in_defined set/unset*/	WITHOUT_CLASSIFICATION	0.9728695392582754	WITHOUT_CLASSIFICATION	0.0271304607417246	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.999920813673311	WITHOUT_CLASSIFICATION	7.918632668894549E-5	IMPLEMENTATION
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9995413109424534	WITHOUT_CLASSIFICATION	4.586890575467436E-4	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999982727546598	WITHOUT_CLASSIFICATION	1.7272453402401757E-6	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999982727546598	WITHOUT_CLASSIFICATION	1.7272453402401757E-6	IMPLEMENTATION
/* ENEBO: Removed !compile_for_eval which probably is to reduce warnings*/	WITHOUT_CLASSIFICATION	0.9809638458178792	WITHOUT_CLASSIFICATION	0.019036154182120794	IMPLEMENTATION
/* was $$ = null;*/	WITHOUT_CLASSIFICATION	0.9955742707220583	WITHOUT_CLASSIFICATION	0.004425729277941715	IMPLEMENTATION
// line 2019 "Ruby19Parser.y"	WITHOUT_CLASSIFICATION	0.9999075341837729	WITHOUT_CLASSIFICATION	9.246581622713578E-5	IMPLEMENTATION
// line 8143 "-"	WITHOUT_CLASSIFICATION	0.9994249669453151	WITHOUT_CLASSIFICATION	5.75033054684887E-4	IMPLEMENTATION
// we know variables cannot be null since localstaticscope will create a 0 length one.	WITHOUT_CLASSIFICATION	0.9999807021786192	WITHOUT_CLASSIFICATION	1.9297821380766156E-5	IMPLEMENTATION
// No bit math to store level since we know level is zero for this case	WITHOUT_CLASSIFICATION	0.9995267127678791	WITHOUT_CLASSIFICATION	4.73287232120899E-4	IMPLEMENTATION
// Next immediate scope.  Variable and constant scoping rules make use of this variable // in different ways.	WITHOUT_CLASSIFICATION	0.9988032712793863	WITHOUT_CLASSIFICATION	0.0011967287206137089	IMPLEMENTATION
// Live reference to module	WITHOUT_CLASSIFICATION	0.9999802702477141	WITHOUT_CLASSIFICATION	1.97297522859471E-5	IMPLEMENTATION
// Next CRef down the lexical structure	WITHOUT_CLASSIFICATION	0.9999485533905146	WITHOUT_CLASSIFICATION	5.144660948540363E-5	IMPLEMENTATION
// Our name holder (offsets are assigned as variables are added	WITHOUT_CLASSIFICATION	0.9999989400811558	WITHOUT_CLASSIFICATION	1.0599188441991668E-6	IMPLEMENTATION
// number of variables in this scope representing required arguments	WITHOUT_CLASSIFICATION	0.9999061504574989	WITHOUT_CLASSIFICATION	9.384954250109422E-5	IMPLEMENTATION
// number of variables in this scope representing optional arguments	WITHOUT_CLASSIFICATION	0.9999712135169834	WITHOUT_CLASSIFICATION	2.8786483016698394E-5	IMPLEMENTATION
// index of variable that represents a "rest" arg	WITHOUT_CLASSIFICATION	0.9985912256435845	WITHOUT_CLASSIFICATION	0.0014087743564154167	IMPLEMENTATION
// Note that this object equality check is intentional, to ensure // the string and its interned version are the same object.	WITHOUT_CLASSIFICATION	0.9999995460845328	WITHOUT_CLASSIFICATION	4.539154672096095E-7	IMPLEMENTATION
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999698965058652	WITHOUT_CLASSIFICATION	3.0103494134879013E-5	IMPLEMENTATION
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999698965058652	WITHOUT_CLASSIFICATION	3.0103494134879013E-5	IMPLEMENTATION
/* Note: Only used by compiler until it can use getConstant again or use some other refactoring */	WITHOUT_CLASSIFICATION	0.9999384469773162	WITHOUT_CLASSIFICATION	6.155302268392462E-5	IMPLEMENTATION
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9985138478939067	WITHOUT_CLASSIFICATION	0.0014861521060932318	IMPLEMENTATION
/* Try and unload the autoload specified from internedName */	WITHOUT_CLASSIFICATION	0.9999967778878553	WITHOUT_CLASSIFICATION	3.2221121446229995E-6	IMPLEMENTATION
// We override that the logic which uses this	WITHOUT_CLASSIFICATION	0.9998393543088115	WITHOUT_CLASSIFICATION	1.6064569118836843E-4	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999961350856661	WITHOUT_CLASSIFICATION	3.8649143338778915E-6	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9997907647898082	WITHOUT_CLASSIFICATION	2.0923521019185012E-4	IMPLEMENTATION
// source extensions	WITHOUT_CLASSIFICATION	0.9998962727404744	WITHOUT_CLASSIFICATION	1.0372725952554395E-4	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9997907647898082	WITHOUT_CLASSIFICATION	2.0923521019185012E-4	IMPLEMENTATION
// . Array given to rest should pass itself // . Array with rest + other args should extract array // . Array with multiple values and NO rest should extract args if there are more than one argument	WITHOUT_CLASSIFICATION	0.9999637658663465	WITHOUT_CLASSIFICATION	3.623413365340854E-5	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9997287551025413	WITHOUT_CLASSIFICATION	2.712448974585923E-4	IMPLEMENTATION
// Is this thread currently with in a function trace?	WITHOUT_CLASSIFICATION	0.9995238810090115	WITHOUT_CLASSIFICATION	4.761189909886168E-4	IMPLEMENTATION
// Is this thread currently doing an defined? defined should set things like $!	WITHOUT_CLASSIFICATION	0.9783324913312762	WITHOUT_CLASSIFICATION	0.021667508668723794	IMPLEMENTATION
//private UnsynchronizedStack parentStack;	WITHOUT_CLASSIFICATION	0.9996711253893733	WITHOUT_CLASSIFICATION	3.2887461062672095E-4	IMPLEMENTATION
//private UnsynchronizedStack frameStack;	WITHOUT_CLASSIFICATION	0.9996711253893733	WITHOUT_CLASSIFICATION	3.2887461062672095E-4	IMPLEMENTATION
// List of active dynamic scopes.  Each of these may have captured other dynamic scopes // to implement closures.	WITHOUT_CLASSIFICATION	0.9845207904237543	WITHOUT_CLASSIFICATION	0.01547920957624579	IMPLEMENTATION
// File where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.999966589757681	WITHOUT_CLASSIFICATION	3.341024231903953E-5	IMPLEMENTATION
// Line where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999009331809654	WITHOUT_CLASSIFICATION	9.906681903459469E-5	IMPLEMENTATION
// In certain places, like grep, we don't use real frames for the // call blocks. This has the effect of not setting the backref in // the correct frame - this delta is activated to the place where // the grep is running in so that the backref will be set in an // appropriate place.	WITHOUT_CLASSIFICATION	0.9982200258381916	WITHOUT_CLASSIFICATION	0.0017799741618084882	IMPLEMENTATION
// TOPLEVEL self and a few others want a top-level scope.  We create this one right // away and then pass it into top-level parse so it ends up being the top level.	WITHOUT_CLASSIFICATION	0.9999308426214907	WITHOUT_CLASSIFICATION	6.915737850933792E-5	IMPLEMENTATION
//////////////////// CATCH MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9995761909567427	WITHOUT_CLASSIFICATION	4.238090432573087E-4	IMPLEMENTATION
//////////////////// FRAME MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9995761909567427	WITHOUT_CLASSIFICATION	4.238090432573087E-4	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9914859946473586	WITHOUT_CLASSIFICATION	0.00851400535264133	IMPLEMENTATION
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9998770738407433	WITHOUT_CLASSIFICATION	1.229261592567456E-4	IMPLEMENTATION
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9998770738407433	WITHOUT_CLASSIFICATION	1.229261592567456E-4	IMPLEMENTATION
// look for mangling markers for compiled Ruby in method name	WITHOUT_CLASSIFICATION	0.9998474241356219	WITHOUT_CLASSIFICATION	1.5257586437823778E-4	IMPLEMENTATION
// if it's not a rescue or ensure, there's a frame associated, so decrement	WITHOUT_CLASSIFICATION	0.9965942066836797	WITHOUT_CLASSIFICATION	0.0034057933163203808	IMPLEMENTATION
// look for __file__ method name for compiled roots	WITHOUT_CLASSIFICATION	0.9994542941018494	WITHOUT_CLASSIFICATION	5.457058981506864E-4	IMPLEMENTATION
// All entries following removed node can stay // in list, but all preceding ones need to be // cloned.	WITHOUT_CLASSIFICATION	0.9998860318731886	WITHOUT_CLASSIFICATION	1.1396812681150019E-4	IMPLEMENTATION
// required and optional only	WITHOUT_CLASSIFICATION	0.9999403823892313	WITHOUT_CLASSIFICATION	5.961761076875106E-5	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9997907647898082	WITHOUT_CLASSIFICATION	2.0923521019185012E-4	IMPLEMENTATION
// look for mangling markers for bound, unframed methods in class name	WITHOUT_CLASSIFICATION	0.9999745218329751	WITHOUT_CLASSIFICATION	2.547816702480565E-5	IMPLEMENTATION
// set the binding's frame's "previous" file and line to current, so // trace will show who called the block	WITHOUT_CLASSIFICATION	0.9999825948177435	WITHOUT_CLASSIFICATION	1.740518225645702E-5	IMPLEMENTATION
// framed invokers will have Ruby frames associated with them	WITHOUT_CLASSIFICATION	0.9999697828026951	WITHOUT_CLASSIFICATION	3.0217197304913936E-5	IMPLEMENTATION
// look for mangling markers for bound, framed methods in class name	WITHOUT_CLASSIFICATION	0.9999745218329751	WITHOUT_CLASSIFICATION	2.547816702480565E-5	IMPLEMENTATION
// unframed invokers have no Ruby frames, so pull from class name // but use current frame as file and line	WITHOUT_CLASSIFICATION	0.9999987848219462	WITHOUT_CLASSIFICATION	1.215178053767657E-6	IMPLEMENTATION
// try to mine out a Ruby frame using our list of interpreter entry-point markers	WITHOUT_CLASSIFICATION	0.9999951593052926	WITHOUT_CLASSIFICATION	4.840694707389478E-6	IMPLEMENTATION
// Frame matches one of our markers for "interpreted" calls	WITHOUT_CLASSIFICATION	0.9999924137519223	WITHOUT_CLASSIFICATION	7.586248077751473E-6	IMPLEMENTATION
// Frame is extraneous runtime information, skip it unless debug	WITHOUT_CLASSIFICATION	0.999940114752673	WITHOUT_CLASSIFICATION	5.988524732710347E-5	IMPLEMENTATION
/*     * Determine what sort of assigner should be used for the provided 'iter' (e.g. block).     * Assigner provides just the right logic for assigning values to local parameters of the     * block.     *     * This method also has a second optimization which is to set 'noargblock' in the case that     * the block is a block which accepts no arguments.  The primary reason for this second     * optimization is that in the case of a yield with a RubyArray we will bypass some logic     * processing the RubyArray into a proper form (only to then not do anythign with it).  A     * secondary benefit is that a simple boolean seems to optimize by hotspot much faster     * than the zero arg assigner.     */	WITHOUT_CLASSIFICATION	0.9999983107728496	WITHOUT_CLASSIFICATION	1.6892271503241772E-6	IMPLEMENTATION
// new scope for this invocation of the block, based on parent scope	WITHOUT_CLASSIFICATION	0.9999030779363275	WITHOUT_CLASSIFICATION	9.692206367254294E-5	IMPLEMENTATION
// No argument blocks	WITHOUT_CLASSIFICATION	0.9999899571093851	WITHOUT_CLASSIFICATION	1.0042890614938674E-5	IMPLEMENTATION
// just push the same empty scope, since we won't use one	WITHOUT_CLASSIFICATION	0.9999994212565804	WITHOUT_CLASSIFICATION	5.787434196487953E-7	IMPLEMENTATION
// Not sure if this is actually possible, but better safe than sorry	WITHOUT_CLASSIFICATION	0.9999584793443642	WITHOUT_CLASSIFICATION	4.152065563566416E-5	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9992043335401309	WITHOUT_CLASSIFICATION	7.956664598689249E-4	IMPLEMENTATION
// This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).	WITHOUT_CLASSIFICATION	0.9999756323055699	WITHOUT_CLASSIFICATION	2.436769443008581E-5	IMPLEMENTATION
// Highest reserved id	WITHOUT_CLASSIFICATION	0.9999645220993164	WITHOUT_CLASSIFICATION	3.5477900683488884E-5	IMPLEMENTATION
// binary typed calls	WITHOUT_CLASSIFICATION	0.9998699431011969	WITHOUT_CLASSIFICATION	1.3005689880306472E-4	IMPLEMENTATION
// id must always be even	WITHOUT_CLASSIFICATION	0.999970078466773	WITHOUT_CLASSIFICATION	2.9921533227026993E-5	IMPLEMENTATION
// with block pass	WITHOUT_CLASSIFICATION	0.9991677905686588	WITHOUT_CLASSIFICATION	8.3220943134126E-4	IMPLEMENTATION
// no block	WITHOUT_CLASSIFICATION	0.9996717615778407	WITHOUT_CLASSIFICATION	3.282384221593945E-4	IMPLEMENTATION
// with block literal (iter)	WITHOUT_CLASSIFICATION	0.999876273724315	WITHOUT_CLASSIFICATION	1.2372627568502152E-4	IMPLEMENTATION
//            assert false : "can this happen?";	WITHOUT_CLASSIFICATION	0.9986414286439	WITHOUT_CLASSIFICATION	0.0013585713560998625	IMPLEMENTATION
// if we have multiple asgn with just *args, need a special type for that	WITHOUT_CLASSIFICATION	0.999894009547684	WITHOUT_CLASSIFICATION	1.0599045231596922E-4	IMPLEMENTATION
// && args.getMaxArgumentsCount() != 1) {	WITHOUT_CLASSIFICATION	0.9999297280299914	WITHOUT_CLASSIFICATION	7.027197000869509E-5	IMPLEMENTATION
//            return warnMultiReturnNil(ruby);	WITHOUT_CLASSIFICATION	0.9999387583676057	WITHOUT_CLASSIFICATION	6.124163239432551E-5	IMPLEMENTATION
// ensure zero is devoted to no method name	WITHOUT_CLASSIFICATION	0.9999420940724416	WITHOUT_CLASSIFICATION	5.7905927558351594E-5	IMPLEMENTATION
// predefine a few other methods we invoke directly elsewhere	WITHOUT_CLASSIFICATION	0.999744600325752	WITHOUT_CLASSIFICATION	2.5539967424801084E-4	IMPLEMENTATION
// fast and safe respond_to? call site logic	WITHOUT_CLASSIFICATION	0.9998834661936151	WITHOUT_CLASSIFICATION	1.165338063848127E-4	IMPLEMENTATION
// Static scoping information for this scope	WITHOUT_CLASSIFICATION	0.9999422580447194	WITHOUT_CLASSIFICATION	5.774195528056851E-5	IMPLEMENTATION
// Captured dynamic scopes	WITHOUT_CLASSIFICATION	0.9999519911197239	WITHOUT_CLASSIFICATION	4.8008880276072526E-5	IMPLEMENTATION
// Backref for $~, $1, etc	WITHOUT_CLASSIFICATION	0.9999794086667195	WITHOUT_CLASSIFICATION	2.0591333280441002E-5	IMPLEMENTATION
// Lastline	WITHOUT_CLASSIFICATION	0.999598425807291	WITHOUT_CLASSIFICATION	4.015741927090063E-4	IMPLEMENTATION
// No binding scope so we should create one	WITHOUT_CLASSIFICATION	0.9999092707044813	WITHOUT_CLASSIFICATION	9.072929551861313E-5	IMPLEMENTATION
// bindings scopes must always be ManyVars scopes since evals can grow them	WITHOUT_CLASSIFICATION	0.9999069051481779	WITHOUT_CLASSIFICATION	9.309485182205324E-5	IMPLEMENTATION
// Helper function to give a good view of current dynamic scope with captured scopes	WITHOUT_CLASSIFICATION	0.9999710983675406	WITHOUT_CLASSIFICATION	2.8901632459312298E-5	IMPLEMENTATION
// try count specific args to determine required	WITHOUT_CLASSIFICATION	0.9999136255039778	WITHOUT_CLASSIFICATION	8.637449602219199E-5	IMPLEMENTATION
// Some helper functions:	WITHOUT_CLASSIFICATION	0.9999619869706476	WITHOUT_CLASSIFICATION	3.801302935225145E-5	IMPLEMENTATION
// silently ignore	WITHOUT_CLASSIFICATION	0.9992809767703627	WITHOUT_CLASSIFICATION	7.190232296373342E-4	IMPLEMENTATION
// used by compiler	WITHOUT_CLASSIFICATION	0.9998017915946532	WITHOUT_CLASSIFICATION	1.98208405346847E-4	IMPLEMENTATION
// initialize the static settings to determine which factory to use	WITHOUT_CLASSIFICATION	0.999993193348281	WITHOUT_CLASSIFICATION	6.80665171899917E-6	IMPLEMENTATION
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9998833414877275	WITHOUT_CLASSIFICATION	1.1665851227239598E-4	IMPLEMENTATION
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9997921374823564	WITHOUT_CLASSIFICATION	2.0786251764366424E-4	IMPLEMENTATION
//  Single node on list	WITHOUT_CLASSIFICATION	0.9997249915625068	WITHOUT_CLASSIFICATION	2.7500843749318483E-4	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9998431097921018	WITHOUT_CLASSIFICATION	1.5689020789826265E-4	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999668202946644	WITHOUT_CLASSIFICATION	3.317970533560378E-5	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9997287551025413	WITHOUT_CLASSIFICATION	2.712448974585923E-4	IMPLEMENTATION
// Note: In Ruby 1.9 all of this logic can go away since they will require explicit // bindings for evals.	WITHOUT_CLASSIFICATION	0.9999796829014613	WITHOUT_CLASSIFICATION	2.031709853865263E-5	IMPLEMENTATION
// We only define one special dynamic scope per 'logical' binding.  So all bindings for // the same scope should share the same dynamic scope.  This allows multiple evals with // different different bindings in the same scope to see the same stuff.	WITHOUT_CLASSIFICATION	0.9999983619225014	WITHOUT_CLASSIFICATION	1.638077498657446E-6	IMPLEMENTATION
// If the next scope out has the same binding scope as this scope it means // we are evaling within an eval and in that case we should be sharing the same // binding scope.	WITHOUT_CLASSIFICATION	0.9999993606475988	WITHOUT_CLASSIFICATION	6.39352401177324E-7	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999988404316386	WITHOUT_CLASSIFICATION	1.159568361414823E-6	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999988404316386	WITHOUT_CLASSIFICATION	1.159568361414823E-6	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999963259023099	WITHOUT_CLASSIFICATION	3.6740976901890904E-6	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999963259023099	WITHOUT_CLASSIFICATION	3.6740976901890904E-6	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999963259023099	WITHOUT_CLASSIFICATION	3.6740976901890904E-6	IMPLEMENTATION
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999711952590151	WITHOUT_CLASSIFICATION	2.880474098486496E-5	IMPLEMENTATION
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999711952590151	WITHOUT_CLASSIFICATION	2.880474098486496E-5	IMPLEMENTATION
// extra args for rest	WITHOUT_CLASSIFICATION	0.999954250539887	WITHOUT_CLASSIFICATION	4.57494601131095E-5	IMPLEMENTATION
// extra args for rest	WITHOUT_CLASSIFICATION	0.999954250539887	WITHOUT_CLASSIFICATION	4.57494601131095E-5	IMPLEMENTATION
/*     * This is the proper behavior for all non-expanded assigners which have a pre > 0.  The rest     * override this.     */	WITHOUT_CLASSIFICATION	0.9999977196269046	WITHOUT_CLASSIFICATION	2.280373095297992E-6	IMPLEMENTATION
/*     * This is the proper behavior for all non-expanded assigners.     */	WITHOUT_CLASSIFICATION	0.9999982401877757	WITHOUT_CLASSIFICATION	1.7598122243417077E-6	IMPLEMENTATION
// prefill ?	WITHOUT_CLASSIFICATION	0.9998101004836206	WITHOUT_CLASSIFICATION	1.8989951637939795E-4	IMPLEMENTATION
// prefill ?	WITHOUT_CLASSIFICATION	0.9998101004836206	WITHOUT_CLASSIFICATION	1.8989951637939795E-4	IMPLEMENTATION
// MUST be called from synchronized/locked block! // should only be called by variableTableStore/variableTableFastStore	WITHOUT_CLASSIFICATION	0.9999995938778374	WITHOUT_CLASSIFICATION	4.0612216256334E-7	IMPLEMENTATION
// retrieve method // module // name	WITHOUT_CLASSIFICATION	0.9994013237918061	WITHOUT_CLASSIFICATION	5.986762081938711E-4	IMPLEMENTATION
// call is ok, punch it!	WITHOUT_CLASSIFICATION	0.999976367747801	WITHOUT_CLASSIFICATION	2.3632252199050038E-5	IMPLEMENTATION
// if undefined, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999915977975592	WITHOUT_CLASSIFICATION	8.402202440840592E-6	IMPLEMENTATION
// if we're not attempting to invoke method_missing and method is not visible, branch to method_missing	WITHOUT_CLASSIFICATION	0.9997037806904733	WITHOUT_CLASSIFICATION	2.962193095267423E-4	IMPLEMENTATION
// method object already present, push various args // tc // self // klazz // name	WITHOUT_CLASSIFICATION	0.9997666605507609	WITHOUT_CLASSIFICATION	2.3333944923911647E-4	IMPLEMENTATION
// if it's method_missing, just invoke it	WITHOUT_CLASSIFICATION	0.9999688450846258	WITHOUT_CLASSIFICATION	3.115491537423813E-5	IMPLEMENTATION
// invoke callMethodMissing	WITHOUT_CLASSIFICATION	0.9999380972052948	WITHOUT_CLASSIFICATION	6.190279470522168E-5	IMPLEMENTATION
// caller	WITHOUT_CLASSIFICATION	0.9999935325602106	WITHOUT_CLASSIFICATION	6.467439789314804E-6	IMPLEMENTATION
// calltype // block	WITHOUT_CLASSIFICATION	0.9994787633788035	WITHOUT_CLASSIFICATION	5.212366211965342E-4	IMPLEMENTATION
// if no exception raised, jump to end to leave result on stack for return	WITHOUT_CLASSIFICATION	0.9999854594660138	WITHOUT_CLASSIFICATION	1.4540533986268184E-5	IMPLEMENTATION
// load arity for check	WITHOUT_CLASSIFICATION	0.9999551235100222	WITHOUT_CLASSIFICATION	4.487648997766325E-5	IMPLEMENTATION
// throw	WITHOUT_CLASSIFICATION	0.9999922978687013	WITHOUT_CLASSIFICATION	7.702131298748224E-6	IMPLEMENTATION
// load arity for error	WITHOUT_CLASSIFICATION	0.9998961525479527	WITHOUT_CLASSIFICATION	1.0384745204729539E-4	IMPLEMENTATION
// arity ok, continue	WITHOUT_CLASSIFICATION	0.9999265923817935	WITHOUT_CLASSIFICATION	7.340761820661777E-5	IMPLEMENTATION
//InvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9997652436395854	WITHOUT_CLASSIFICATION	2.3475636041465735E-4	IMPLEMENTATION
// ENEBO: Perhaps slow but simple for now	WITHOUT_CLASSIFICATION	0.9999341158337542	WITHOUT_CLASSIFICATION	6.58841662456645E-5	IMPLEMENTATION
// FastInvocationCallback	WITHOUT_CLASSIFICATION	0.999935505377077	WITHOUT_CLASSIFICATION	6.449462292307057E-5	IMPLEMENTATION
// InvocationCallback	WITHOUT_CLASSIFICATION	0.999935505377077	WITHOUT_CLASSIFICATION	6.449462292307057E-5	IMPLEMENTATION
//DumpingInvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9995736327784496	WITHOUT_CLASSIFICATION	4.263672215503884E-4	IMPLEMENTATION
// for fast lookup: encoding entry => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999932904640575	WITHOUT_CLASSIFICATION	6.7095359425173E-6	IMPLEMENTATION
// for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999773450219301	WITHOUT_CLASSIFICATION	2.2654978069904937E-5	IMPLEMENTATION
// load the encoding	WITHOUT_CLASSIFICATION	0.9999144387648518	WITHOUT_CLASSIFICATION	8.556123514827249E-5	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999585807291432	WITHOUT_CLASSIFICATION	4.141927085672465E-5	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999585807291432	WITHOUT_CLASSIFICATION	4.141927085672465E-5	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999585807291432	WITHOUT_CLASSIFICATION	4.141927085672465E-5	IMPLEMENTATION
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9998892820753446	WITHOUT_CLASSIFICATION	1.1071792465544893E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9998892820753446	WITHOUT_CLASSIFICATION	1.1071792465544893E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9998892820753446	WITHOUT_CLASSIFICATION	1.1071792465544893E-4	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9998892820753446	WITHOUT_CLASSIFICATION	1.1071792465544893E-4	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9998892820753446	WITHOUT_CLASSIFICATION	1.1071792465544893E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998944906559512	WITHOUT_CLASSIFICATION	1.0550934404875843E-4	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998944906559512	WITHOUT_CLASSIFICATION	1.0550934404875843E-4	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998944906559512	WITHOUT_CLASSIFICATION	1.0550934404875843E-4	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998944906559512	WITHOUT_CLASSIFICATION	1.0550934404875843E-4	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998944906559512	WITHOUT_CLASSIFICATION	1.0550934404875843E-4	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998944906559512	WITHOUT_CLASSIFICATION	1.0550934404875843E-4	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998944906559512	WITHOUT_CLASSIFICATION	1.0550934404875843E-4	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998944906559512	WITHOUT_CLASSIFICATION	1.0550934404875843E-4	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998944906559512	WITHOUT_CLASSIFICATION	1.0550934404875843E-4	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998944906559512	WITHOUT_CLASSIFICATION	1.0550934404875843E-4	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998944906559512	WITHOUT_CLASSIFICATION	1.0550934404875843E-4	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998944906559512	WITHOUT_CLASSIFICATION	1.0550934404875843E-4	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998944906559512	WITHOUT_CLASSIFICATION	1.0550934404875843E-4	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998944906559512	WITHOUT_CLASSIFICATION	1.0550934404875843E-4	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998944906559512	WITHOUT_CLASSIFICATION	1.0550934404875843E-4	IMPLEMENTATION
// If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs	WITHOUT_CLASSIFICATION	0.9999958200672434	WITHOUT_CLASSIFICATION	4.179932756632761E-6	IMPLEMENTATION
// BreakJump, ThreadContext	WITHOUT_CLASSIFICATION	0.999935505377077	WITHOUT_CLASSIFICATION	6.449462292307057E-5	IMPLEMENTATION
// ThreadContext	WITHOUT_CLASSIFICATION	0.999598425807291	WITHOUT_CLASSIFICATION	4.015741927090063E-4	IMPLEMENTATION
// BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.999882847834233	WITHOUT_CLASSIFICATION	1.171521657668933E-4	IMPLEMENTATION
// Make Java class files in the jar reachable from Ruby	WITHOUT_CLASSIFICATION	0.9999993428020613	WITHOUT_CLASSIFICATION	6.571979387299865E-7	IMPLEMENTATION
// RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.999882847834233	WITHOUT_CLASSIFICATION	1.171521657668933E-4	IMPLEMENTATION
// add all startup load paths to the list first	WITHOUT_CLASSIFICATION	0.9998888344142944	WITHOUT_CLASSIFICATION	1.1116558570555549E-4	IMPLEMENTATION
// if it's a compiled JRuby script, instantiate and run it	WITHOUT_CLASSIFICATION	0.9999495313866181	WITHOUT_CLASSIFICATION	5.0468613381859084E-5	IMPLEMENTATION
// wrap in try/catch for security exceptions in an applet	WITHOUT_CLASSIFICATION	0.9999945733691724	WITHOUT_CLASSIFICATION	5.426630827604599E-6	IMPLEMENTATION
// add $RUBYLIB paths	WITHOUT_CLASSIFICATION	0.9999285833971266	WITHOUT_CLASSIFICATION	7.141660287336863E-5	IMPLEMENTATION
// Empty paths do not need to be added	WITHOUT_CLASSIFICATION	0.9586816255355666	WITHOUT_CLASSIFICATION	0.041318374464433476	IMPLEMENTATION
// "." dir is used for relative path loads from a given file, as in require '../foo/bar'	WITHOUT_CLASSIFICATION	0.9999969870104887	WITHOUT_CLASSIFICATION	3.0129895113359286E-6	IMPLEMENTATION
// Add 1.8 libs	WITHOUT_CLASSIFICATION	0.9995178638087723	WITHOUT_CLASSIFICATION	4.821361912277658E-4	IMPLEMENTATION
// Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.	WITHOUT_CLASSIFICATION	0.9999998658856912	WITHOUT_CLASSIFICATION	1.3411430879643142E-7	IMPLEMENTATION
// Library has already been loaded in some form, bail out	WITHOUT_CLASSIFICATION	0.9999847101260858	WITHOUT_CLASSIFICATION	1.5289873914160793E-5	IMPLEMENTATION
// We don't want a package name beginning with dots, so we remove them	WITHOUT_CLASSIFICATION	0.9998639022243571	WITHOUT_CLASSIFICATION	1.3609777564289256E-4	IMPLEMENTATION
// If there is a jar-file with the required name, we add this to the class path.	WITHOUT_CLASSIFICATION	0.9999548600070969	WITHOUT_CLASSIFICATION	4.5139992903220515E-5	IMPLEMENTATION
// quietly try to load the class	WITHOUT_CLASSIFICATION	0.9999549012640433	WITHOUT_CLASSIFICATION	4.509873595676732E-5	IMPLEMENTATION
// If there was a good library before, we go back to that	WITHOUT_CLASSIFICATION	0.9999922480383289	WITHOUT_CLASSIFICATION	7.751961671127595E-6	IMPLEMENTATION
// no library or extension found, try to load directly as a class	WITHOUT_CLASSIFICATION	0.9999855043252495	WITHOUT_CLASSIFICATION	1.4495674750601908E-5	IMPLEMENTATION
// if an extension is specified, try more targetted searches	WITHOUT_CLASSIFICATION	0.9998729528279999	WITHOUT_CLASSIFICATION	1.2704717200002076E-4	IMPLEMENTATION
// signed short, big-endian	WITHOUT_CLASSIFICATION	0.99994453812571	WITHOUT_CLASSIFICATION	5.546187428982536E-5	IMPLEMENTATION
// source extensions	WITHOUT_CLASSIFICATION	0.9998962727404744	WITHOUT_CLASSIFICATION	1.0372725952554395E-4	IMPLEMENTATION
// We don't support .so, but some stdlib require .so directly // replace it with .jar to look for an extension type we do support	WITHOUT_CLASSIFICATION	0.9688193111080766	WITHOUT_CLASSIFICATION	0.031180688891923342	IMPLEMENTATION
// This code exploits the fact that all .jar files will be found for the JarredScript feature. // This is where the basic extension mechanism gets fixed	WITHOUT_CLASSIFICATION	0.9999947261949722	WITHOUT_CLASSIFICATION	5.273805027849528E-6	IMPLEMENTATION
// Make the class name look nice, by splitting on _ and capitalize each segment, then joining // the, together without anything separating them, and last put on "Service" at the end.	WITHOUT_CLASSIFICATION	0.9929211459399829	WITHOUT_CLASSIFICATION	0.007078854060017069	IMPLEMENTATION
// It's _really_ expensive to check that the class actually exists in the Jar, so // we don't do that now.	WITHOUT_CLASSIFICATION	0.9999965206711096	WITHOUT_CLASSIFICATION	3.4793288903160202E-6	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9997102542356697	WITHOUT_CLASSIFICATION	2.897457643303016E-4	IMPLEMENTATION
// extension extensions	WITHOUT_CLASSIFICATION	0.9998479398198982	WITHOUT_CLASSIFICATION	1.5206018010185767E-4	IMPLEMENTATION
// unknown extension, fall back to search with extensions	WITHOUT_CLASSIFICATION	0.9997552158476241	WITHOUT_CLASSIFICATION	2.4478415237593593E-4	IMPLEMENTATION
// try all extensions	WITHOUT_CLASSIFICATION	0.999964550757758	WITHOUT_CLASSIFICATION	3.5449242241949846E-5	IMPLEMENTATION
// if a source extension is specified, try all source extensions	WITHOUT_CLASSIFICATION	0.99999695515949	WITHOUT_CLASSIFICATION	3.0448405100051384E-6	IMPLEMENTATION
// unknown extension, fall back to exact search	WITHOUT_CLASSIFICATION	0.9998467726147788	WITHOUT_CLASSIFICATION	1.5322738522125428E-4	IMPLEMENTATION
// try only literal search	WITHOUT_CLASSIFICATION	0.9999868036176138	WITHOUT_CLASSIFICATION	1.319638238610863E-5	IMPLEMENTATION
// attempt to load the found library	WITHOUT_CLASSIFICATION	0.9996015363572626	WITHOUT_CLASSIFICATION	3.984636427374713E-4	IMPLEMENTATION
// otherwise load the library we've found	WITHOUT_CLASSIFICATION	0.995478266926943	WITHOUT_CLASSIFICATION	0.004521733073057001	IMPLEMENTATION
// allow MainExitException to propagate out for exec and friends	WITHOUT_CLASSIFICATION	0.9999265759202709	WITHOUT_CLASSIFICATION	7.342407972900425E-5	IMPLEMENTATION
// Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".	WITHOUT_CLASSIFICATION	0.9999522305037274	WITHOUT_CLASSIFICATION	4.776949627260675E-5	IMPLEMENTATION
// check current directory; if file exists, retrieve URL and return resource	WITHOUT_CLASSIFICATION	0.9999407219925427	WITHOUT_CLASSIFICATION	5.92780074572615E-5	IMPLEMENTATION
// if a jar or file URL, return load service resource directly without further searching	WITHOUT_CLASSIFICATION	0.9999881001474734	WITHOUT_CLASSIFICATION	1.1899852526607071E-5	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9997677748360579	WITHOUT_CLASSIFICATION	2.3222516394213517E-4	IMPLEMENTATION
// if it's a ./ baseName, use CWD logic	WITHOUT_CLASSIFICATION	0.9997964392191382	WITHOUT_CLASSIFICATION	2.035607808619075E-4	IMPLEMENTATION
// if given path is absolute, just try it as-is (with extensions) and no load path	WITHOUT_CLASSIFICATION	0.9999924435924561	WITHOUT_CLASSIFICATION	7.55640754396287E-6	IMPLEMENTATION
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9954354945144186	WITHOUT_CLASSIFICATION	0.004564505485581433	IMPLEMENTATION
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9954354945144186	WITHOUT_CLASSIFICATION	0.004564505485581433	IMPLEMENTATION
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9990291051591278	WITHOUT_CLASSIFICATION	9.708948408722688E-4	IMPLEMENTATION
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9990291051591278	WITHOUT_CLASSIFICATION	9.708948408722688E-4	IMPLEMENTATION
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9997088956826147	WITHOUT_CLASSIFICATION	2.9110431738523006E-4	IMPLEMENTATION
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9997088956826147	WITHOUT_CLASSIFICATION	2.9110431738523006E-4	IMPLEMENTATION
//                    actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));	WITHOUT_CLASSIFICATION	0.9998884716493132	WITHOUT_CLASSIFICATION	1.1152835068683376E-4	IMPLEMENTATION
// handle security-sensitive case	WITHOUT_CLASSIFICATION	0.9982742795188714	WITHOUT_CLASSIFICATION	0.0017257204811286318	IMPLEMENTATION
// if entry is an empty string, skip it	WITHOUT_CLASSIFICATION	0.9999962643547541	WITHOUT_CLASSIFICATION	3.7356452459424258E-6	IMPLEMENTATION
// if entry starts with a slash, skip it since classloader resources never start with a /	WITHOUT_CLASSIFICATION	0.999972342783843	WITHOUT_CLASSIFICATION	2.765721615693361E-5	IMPLEMENTATION
// otherwise, try to load from classpath (Note: Jar resources always uses '/')	WITHOUT_CLASSIFICATION	0.9999868020007914	WITHOUT_CLASSIFICATION	1.3197999208715649E-5	IMPLEMENTATION
// Make sure this is not a directory or unavailable in some way	WITHOUT_CLASSIFICATION	0.999810183679324	WITHOUT_CLASSIFICATION	1.898163206759529E-4	IMPLEMENTATION
// signed short, native	WITHOUT_CLASSIFICATION	0.9998627953506395	WITHOUT_CLASSIFICATION	1.3720464936047417E-4	IMPLEMENTATION
// If we fail to find as a normal Ruby script, we try to find as an extension, // checking for a builtin first.	WITHOUT_CLASSIFICATION	0.9999990162829805	WITHOUT_CLASSIFICATION	9.837170194767015E-7	IMPLEMENTATION
// write `I' instance var signet if class is NOT a direct subclass of Object	WITHOUT_CLASSIFICATION	0.999999574383269	WITHOUT_CLASSIFICATION	4.256167309606816E-7	IMPLEMENTATION
// if name starts with a / we're done (classloader resources won't load with an initial /)	WITHOUT_CLASSIFICATION	0.9999999518516424	WITHOUT_CLASSIFICATION	4.814835760821747E-8	IMPLEMENTATION
// Look in classpath next (we do not use File as a test since UNC names will match) // Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")	WITHOUT_CLASSIFICATION	0.9999272438923268	WITHOUT_CLASSIFICATION	7.275610767328502E-5	IMPLEMENTATION
/* Directories and unavailable resources are not able to open a stream. */	WITHOUT_CLASSIFICATION	0.9999684865228932	WITHOUT_CLASSIFICATION	3.151347710683857E-5	IMPLEMENTATION
// Try to load from classpath without prefix. "A/b.rb" will not load as  // "./A/b.rb" in a jar file.	WITHOUT_CLASSIFICATION	0.9999942779783128	WITHOUT_CLASSIFICATION	5.722021687336101E-6	IMPLEMENTATION
// object has instance vars and isn't a class, get a snapshot to be marshalled // and output the ivar header here	WITHOUT_CLASSIFICATION	0.9999995104344477	WITHOUT_CLASSIFICATION	4.895655523046971E-7	IMPLEMENTATION
// flush afer whole dump is complete	WITHOUT_CLASSIFICATION	0.9999159879253993	WITHOUT_CLASSIFICATION	8.401207460071682E-5	IMPLEMENTATION
//            write('S');	WITHOUT_CLASSIFICATION	0.9999417451346537	WITHOUT_CLASSIFICATION	5.825486534634129E-5	IMPLEMENTATION
// switch on the object's *native type*. This allows use-defined // classes that have extended core native types to piggyback on their // marshalling logic.	WITHOUT_CLASSIFICATION	0.9985252244885657	WITHOUT_CLASSIFICATION	0.0014747755114343198	IMPLEMENTATION
// object is a custom class that extended one of the native types other than Object	WITHOUT_CLASSIFICATION	0.999970300013154	WITHOUT_CLASSIFICATION	2.969998684595588E-5	IMPLEMENTATION
// We do not want to capture cached methods	WITHOUT_CLASSIFICATION	0.9973920640540264	WITHOUT_CLASSIFICATION	0.002607935945973663	IMPLEMENTATION
// w_symbol	WITHOUT_CLASSIFICATION	0.999598425807291	WITHOUT_CLASSIFICATION	4.015741927090063E-4	IMPLEMENTATION
// w_unique	WITHOUT_CLASSIFICATION	0.999598425807291	WITHOUT_CLASSIFICATION	4.015741927090063E-4	IMPLEMENTATION
// call the proc, but not for symbols	WITHOUT_CLASSIFICATION	0.9993016355113112	WITHOUT_CLASSIFICATION	6.983644886888378E-4	IMPLEMENTATION
// Major // Minor	WITHOUT_CLASSIFICATION	0.999598425807291	WITHOUT_CLASSIFICATION	4.015741927090063E-4	IMPLEMENTATION
// any ivars, since we don't have __attached__ ivar now	WITHOUT_CLASSIFICATION	0.9999633797151929	WITHOUT_CLASSIFICATION	3.662028480708397E-5	IMPLEMENTATION
// "hashdef" object, a hash with a default	WITHOUT_CLASSIFICATION	0.9999780285645423	WITHOUT_CLASSIFICATION	2.1971435457621222E-5	IMPLEMENTATION
// All "C" marshalled objects descend from core classes, which are all RubyObject	WITHOUT_CLASSIFICATION	0.9999933137924292	WITHOUT_CLASSIFICATION	6.686207570726413E-6	IMPLEMENTATION
// sic	WITHOUT_CLASSIFICATION	0.9999909584718885	WITHOUT_CLASSIFICATION	9.041528111615727E-6	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999321483524894	WITHOUT_CLASSIFICATION	6.785164751065386E-5	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999321483524894	WITHOUT_CLASSIFICATION	6.785164751065386E-5	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999321483524894	WITHOUT_CLASSIFICATION	6.785164751065386E-5	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999833142642921	WITHOUT_CLASSIFICATION	1.6685735707933902E-5	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999833142642921	WITHOUT_CLASSIFICATION	1.6685735707933902E-5	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9992043335401309	WITHOUT_CLASSIFICATION	7.956664598689249E-4	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9992043335401309	WITHOUT_CLASSIFICATION	7.956664598689249E-4	IMPLEMENTATION
/*     * If we are setting post arguments we can assume there are no pre or others     */	WITHOUT_CLASSIFICATION	0.9999998857992114	WITHOUT_CLASSIFICATION	1.1420078870114686E-7	IMPLEMENTATION
// XXX: 0xffff0000 on BE?	WITHOUT_CLASSIFICATION	0.9981941819435446	WITHOUT_CLASSIFICATION	0.0018058180564554669	IMPLEMENTATION
// unsigned short, native	WITHOUT_CLASSIFICATION	0.9998429053515339	WITHOUT_CLASSIFICATION	1.5709464846615015E-4	IMPLEMENTATION
// int, native // long, native	WITHOUT_CLASSIFICATION	0.9998433296916767	WITHOUT_CLASSIFICATION	1.566703083233753E-4	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999321483524894	WITHOUT_CLASSIFICATION	6.785164751065386E-5	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999321483524894	WITHOUT_CLASSIFICATION	6.785164751065386E-5	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999321483524894	WITHOUT_CLASSIFICATION	6.785164751065386E-5	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999833142642921	WITHOUT_CLASSIFICATION	1.6685735707933902E-5	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999833142642921	WITHOUT_CLASSIFICATION	1.6685735707933902E-5	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999833142642921	WITHOUT_CLASSIFICATION	1.6685735707933902E-5	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9992043335401309	WITHOUT_CLASSIFICATION	7.956664598689249E-4	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9992043335401309	WITHOUT_CLASSIFICATION	7.956664598689249E-4	IMPLEMENTATION
// Look for slash, starting from 'start' position, until 'end'.	WITHOUT_CLASSIFICATION	0.9999961556777589	WITHOUT_CLASSIFICATION	3.844322240999663E-6	IMPLEMENTATION
// Our values holder (name of variables are kept in staticScope)	WITHOUT_CLASSIFICATION	0.9999999614164611	WITHOUT_CLASSIFICATION	3.8583538953302715E-8	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9970927448589878	WITHOUT_CLASSIFICATION	0.0029072551410121122	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9970927448589878	WITHOUT_CLASSIFICATION	0.0029072551410121122	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9970927448589878	WITHOUT_CLASSIFICATION	0.0029072551410121122	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9970927448589878	WITHOUT_CLASSIFICATION	0.0029072551410121122	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9970927448589878	WITHOUT_CLASSIFICATION	0.0029072551410121122	IMPLEMENTATION
// SunSignalFacade	WITHOUT_CLASSIFICATION	0.999598425807291	WITHOUT_CLASSIFICATION	4.015741927090063E-4	IMPLEMENTATION
// All braces pushed..	WITHOUT_CLASSIFICATION	0.9999685402103612	WITHOUT_CLASSIFICATION	3.145978963874326E-5	IMPLEMENTATION
/* failed : try next recursion */	WITHOUT_CLASSIFICATION	0.99866015750858	WITHOUT_CLASSIFICATION	0.0013398424914200535	IMPLEMENTATION
// leftToken made us start as nest 1	WITHOUT_CLASSIFICATION	0.9999522423124276	WITHOUT_CLASSIFICATION	4.775768757236901E-5	IMPLEMENTATION
// are we at '**/'	WITHOUT_CLASSIFICATION	0.9996865818095048	WITHOUT_CLASSIFICATION	3.134181904952085E-4	IMPLEMENTATION
// No or mismatched braces..Move along..nothing to see here	WITHOUT_CLASSIFICATION	0.9999836757691767	WITHOUT_CLASSIFICATION	1.6324230823319285E-5	IMPLEMENTATION
// not enough bytes	WITHOUT_CLASSIFICATION	0.9804834697759277	WITHOUT_CLASSIFICATION	0.019516530224072338	IMPLEMENTATION
// Get index of last read byte	WITHOUT_CLASSIFICATION	0.9999906666917917	WITHOUT_CLASSIFICATION	9.333308208343398E-6	IMPLEMENTATION
// skip inner braces	WITHOUT_CLASSIFICATION	0.9997523268542677	WITHOUT_CLASSIFICATION	2.4767314573224746E-4	IMPLEMENTATION
/*     * Process {}'s (example: Dir.glob("{jruby,jython}/README*")      */	WITHOUT_CLASSIFICATION	0.9999936470744372	WITHOUT_CLASSIFICATION	6.352925562820332E-6	IMPLEMENTATION
/* complete, according to Posix.2 */	WITHOUT_CLASSIFICATION	0.9999876681972293	WITHOUT_CLASSIFICATION	1.2331802770687731E-5	IMPLEMENTATION
/* Only accept an open brace if there is a close */	WITHOUT_CLASSIFICATION	0.9999999653196744	WITHOUT_CLASSIFICATION	3.4680325514365765E-8	IMPLEMENTATION
/* brace to match it.  Bracket expressions must be */	WITHOUT_CLASSIFICATION	0.9999897288328141	WITHOUT_CLASSIFICATION	1.0271167185909958E-5	IMPLEMENTATION
// index of left-most brace // index of right-most brace	WITHOUT_CLASSIFICATION	0.9998322019631944	WITHOUT_CLASSIFICATION	1.6779803680545062E-4	IMPLEMENTATION
// Length check is a hack.  We should not be reeiving "" as a filename ever. 	WITHOUT_CLASSIFICATION	0.9999894345224781	WITHOUT_CLASSIFICATION	1.0565477521829809E-5	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9997217983508573	WITHOUT_CLASSIFICATION	2.782016491427208E-4	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9997217983508573	WITHOUT_CLASSIFICATION	2.782016491427208E-4	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9997217983508573	WITHOUT_CLASSIFICATION	2.782016491427208E-4	IMPLEMENTATION
// Pickaxe says @ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9998517742997268	WITHOUT_CLASSIFICATION	1.4822570027322416E-4	IMPLEMENTATION
// Pickaxe says @@ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9998517387738615	WITHOUT_CLASSIFICATION	1.482612261385394E-4	IMPLEMENTATION
// SimpleSampler	WITHOUT_CLASSIFICATION	0.999598425807291	WITHOUT_CLASSIFICATION	4.015741927090063E-4	IMPLEMENTATION
/*     * convert into longs, returning unsigned 64-bit values as signed longs     * ( num2long raises a RangeError on values > Long.MAX_VALUE )     */	WITHOUT_CLASSIFICATION	0.9999993738145773	WITHOUT_CLASSIFICATION	6.261854227908888E-7	IMPLEMENTATION
// b64_xtable for decoding Base 64	WITHOUT_CLASSIFICATION	0.9999564026987146	WITHOUT_CLASSIFICATION	4.3597301285527894E-5	IMPLEMENTATION
// single precision, little-endian	WITHOUT_CLASSIFICATION	0.9997300009544704	WITHOUT_CLASSIFICATION	2.699990455295382E-4	IMPLEMENTATION
// single precision, big-endian	WITHOUT_CLASSIFICATION	0.9997300009544704	WITHOUT_CLASSIFICATION	2.699990455295382E-4	IMPLEMENTATION
// single precision, native	WITHOUT_CLASSIFICATION	0.9996323116288592	WITHOUT_CLASSIFICATION	3.676883711407535E-4	IMPLEMENTATION
// single precision, native // single precision, native	WITHOUT_CLASSIFICATION	0.999332272586356	WITHOUT_CLASSIFICATION	6.677274136439902E-4	IMPLEMENTATION
// double precision, little-endian	WITHOUT_CLASSIFICATION	0.9999902704068832	WITHOUT_CLASSIFICATION	9.729593116826862E-6	IMPLEMENTATION
// double precision, big-endian	WITHOUT_CLASSIFICATION	0.9999902704068832	WITHOUT_CLASSIFICATION	9.729593116826862E-6	IMPLEMENTATION
// double precision, native	WITHOUT_CLASSIFICATION	0.9999867488596248	WITHOUT_CLASSIFICATION	1.3251140375179878E-5	IMPLEMENTATION
// signed short, little-endian	WITHOUT_CLASSIFICATION	0.99994453812571	WITHOUT_CLASSIFICATION	5.546187428982536E-5	IMPLEMENTATION
// signed char	WITHOUT_CLASSIFICATION	0.9998694932721057	WITHOUT_CLASSIFICATION	1.3050672789425584E-4	IMPLEMENTATION
// unsigned char	WITHOUT_CLASSIFICATION	0.9998505740982826	WITHOUT_CLASSIFICATION	1.494259017174309E-4	IMPLEMENTATION
// long, little-endian	WITHOUT_CLASSIFICATION	0.9999358655677868	WITHOUT_CLASSIFICATION	6.413443221318545E-5	IMPLEMENTATION
// long, big-endian	WITHOUT_CLASSIFICATION	0.9996006677741367	WITHOUT_CLASSIFICATION	3.993322258632847E-4	IMPLEMENTATION
// unsigned int, native	WITHOUT_CLASSIFICATION	0.9998440041788415	WITHOUT_CLASSIFICATION	1.5599582115846889E-4	IMPLEMENTATION
// int, native	WITHOUT_CLASSIFICATION	0.9990194949591903	WITHOUT_CLASSIFICATION	9.805050408096402E-4	IMPLEMENTATION
// 64-bit number, native (as fixnum)	WITHOUT_CLASSIFICATION	0.9997882442862296	WITHOUT_CLASSIFICATION	2.1175571377036995E-4	IMPLEMENTATION
// How many occurrences of 'type' we want	WITHOUT_CLASSIFICATION	0.9994810546589398	WITHOUT_CLASSIFICATION	5.189453410602225E-4	IMPLEMENTATION
// See if we have a converter for the job...	WITHOUT_CLASSIFICATION	0.9999842789439601	WITHOUT_CLASSIFICATION	1.5721056039809265E-5	IMPLEMENTATION
// Otherwise the unpack should be here...	WITHOUT_CLASSIFICATION	0.9999258219554208	WITHOUT_CLASSIFICATION	7.417804457921901E-5	IMPLEMENTATION
// Possible Checksum Byte	WITHOUT_CLASSIFICATION	0.999930188062563	WITHOUT_CLASSIFICATION	6.981193743698446E-5	IMPLEMENTATION
// obtain a	WITHOUT_CLASSIFICATION	0.999756967417307	WITHOUT_CLASSIFICATION	2.4303258269293594E-4	IMPLEMENTATION
// obtain b	WITHOUT_CLASSIFICATION	0.9997244058652613	WITHOUT_CLASSIFICATION	2.755941347386915E-4	IMPLEMENTATION
// obtain c	WITHOUT_CLASSIFICATION	0.9998256088470807	WITHOUT_CLASSIFICATION	1.7439115291922275E-4	IMPLEMENTATION
// obtain d	WITHOUT_CLASSIFICATION	0.9996482120297965	WITHOUT_CLASSIFICATION	3.5178797020363417E-4	IMPLEMENTATION
/*encode.limit() - */	WITHOUT_CLASSIFICATION	0.9999994571810144	WITHOUT_CLASSIFICATION	5.428189855551274E-7	IMPLEMENTATION
/* 1 */	WITHOUT_CLASSIFICATION	0.9999984602901935	WITHOUT_CLASSIFICATION	1.5397098065792941E-6	IMPLEMENTATION
/* 2 */	WITHOUT_CLASSIFICATION	0.9999989796408679	WITHOUT_CLASSIFICATION	1.0203591320796694E-6	IMPLEMENTATION
/* 3 */	WITHOUT_CLASSIFICATION	0.9999988461734031	WITHOUT_CLASSIFICATION	1.1538265968793098E-6	IMPLEMENTATION
/* 4 */	WITHOUT_CLASSIFICATION	0.9999991222496796	WITHOUT_CLASSIFICATION	8.777503205525429E-7	IMPLEMENTATION
/* 5 */	WITHOUT_CLASSIFICATION	0.9999990524469115	WITHOUT_CLASSIFICATION	9.475530884750277E-7	IMPLEMENTATION
/* 6 */	WITHOUT_CLASSIFICATION	0.9999986938596168	WITHOUT_CLASSIFICATION	1.3061403831350024E-6	IMPLEMENTATION
/* 7 */	WITHOUT_CLASSIFICATION	0.999998388300665	WITHOUT_CLASSIFICATION	1.6116993349478886E-6	IMPLEMENTATION
// Skip all whitespace in pack format string	WITHOUT_CLASSIFICATION	0.9999996544097118	WITHOUT_CLASSIFICATION	3.45590288050774E-7	IMPLEMENTATION
// Skip embedded comments in pack format string	WITHOUT_CLASSIFICATION	0.9999996810240258	WITHOUT_CLASSIFICATION	3.1897597415879276E-7	IMPLEMENTATION
// In case when the number of occurences is // explicitly specified, we have to read up // the remaining garbage after the '\0' to // satisfy the requested pattern.	WITHOUT_CLASSIFICATION	0.9999917791503539	WITHOUT_CLASSIFICATION	8.22084964609999E-6	IMPLEMENTATION
//normal exit, this should be faster than a test at each iterations for string with more than //about 40 char	WITHOUT_CLASSIFICATION	0.9999844171270932	WITHOUT_CLASSIFICATION	1.5582872906876167E-5	IMPLEMENTATION
// We encountered '\0' when // were reading the buffer above, // increment the number of read bytes.	WITHOUT_CLASSIFICATION	0.9999951078533124	WITHOUT_CLASSIFICATION	4.892146687632945E-6	IMPLEMENTATION
// MRI behavior: Contrary to what seems to be logical, // when '*' is given, MRI calculates the distance // to the end, in order to go backwards.	WITHOUT_CLASSIFICATION	0.999997713537874	WITHOUT_CLASSIFICATION	2.2864621260460257E-6	IMPLEMENTATION
// Determine how many of type are needed (default: 1)	WITHOUT_CLASSIFICATION	0.5565994100563157	WITHOUT_CLASSIFICATION	0.44340058994368436	IMPLEMENTATION
// 'Z' adds extra null pad (versus 'a')	WITHOUT_CLASSIFICATION	0.9999139328849052	WITHOUT_CLASSIFICATION	8.606711509486314E-5	IMPLEMENTATION
//if the low bit is set //set the high bit of the result	WITHOUT_CLASSIFICATION	0.9999842376880347	WITHOUT_CLASSIFICATION	1.5762311965306977E-5	IMPLEMENTATION
//if the index is not a multiple of 8, we are not on a byte boundary //shift the byte	WITHOUT_CLASSIFICATION	0.994881449874191	WITHOUT_CLASSIFICATION	0.0051185501258089764	IMPLEMENTATION
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9969338548852057	WITHOUT_CLASSIFICATION	0.003066145114794342	IMPLEMENTATION
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9969338548852057	WITHOUT_CLASSIFICATION	0.003066145114794342	IMPLEMENTATION
//do some padding, I don't understand the padding strategy	WITHOUT_CLASSIFICATION	0.9970702506789328	WITHOUT_CLASSIFICATION	0.0029297493210671895	IMPLEMENTATION
// we filled up current byte; append it and create next one	WITHOUT_CLASSIFICATION	0.9991513768047698	WITHOUT_CLASSIFICATION	8.486231952300978E-4	IMPLEMENTATION
//if the index is not a multiple of 8, we are not on a byte boundary	WITHOUT_CLASSIFICATION	0.9948621611103394	WITHOUT_CLASSIFICATION	0.005137838889660533	IMPLEMENTATION
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9999999295332798	WITHOUT_CLASSIFICATION	7.046672018767034E-8	IMPLEMENTATION
// we don't deal with negatives.	WITHOUT_CLASSIFICATION	0.9997841733075092	WITHOUT_CLASSIFICATION	2.158266924908517E-4	IMPLEMENTATION
// populate commandline with NG-provided stuff	WITHOUT_CLASSIFICATION	0.9998011682593351	WITHOUT_CLASSIFICATION	1.9883174066490046E-4	IMPLEMENTATION
// are we recursing?	WITHOUT_CLASSIFICATION	0.9997612061832469	WITHOUT_CLASSIFICATION	2.3879381675312832E-4	IMPLEMENTATION
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999998610773672	WITHOUT_CLASSIFICATION	1.3892263289959973E-7	IMPLEMENTATION
// default PidGetter	WITHOUT_CLASSIFICATION	0.9999260649172043	WITHOUT_CLASSIFICATION	7.393508279570703E-5	IMPLEMENTATION
// ignore and try windows version	WITHOUT_CLASSIFICATION	0.9999547990165334	WITHOUT_CLASSIFICATION	4.5200983466608675E-5	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9998575488657516	WITHOUT_CLASSIFICATION	1.4245113424835392E-4	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9998575488657516	WITHOUT_CLASSIFICATION	1.4245113424835392E-4	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9998575488657516	WITHOUT_CLASSIFICATION	1.4245113424835392E-4	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9998575488657516	WITHOUT_CLASSIFICATION	1.4245113424835392E-4	IMPLEMENTATION
// try both	WITHOUT_CLASSIFICATION	0.9995072228394208	WITHOUT_CLASSIFICATION	4.927771605791358E-4	IMPLEMENTATION
// just unix	WITHOUT_CLASSIFICATION	0.9999254858192493	WITHOUT_CLASSIFICATION	7.451418075072523E-5	IMPLEMENTATION
// just windows	WITHOUT_CLASSIFICATION	0.9999432284485219	WITHOUT_CLASSIFICATION	5.677155147811356E-5	IMPLEMENTATION
// neither	WITHOUT_CLASSIFICATION	0.9999909814209664	WITHOUT_CLASSIFICATION	9.018579033616013E-6	IMPLEMENTATION
// CON: popen is a case where I think we should just always shell out.	WITHOUT_CLASSIFICATION	0.9984935537858717	WITHOUT_CLASSIFICATION	0.0015064462141283932	IMPLEMENTATION
// single string command, pass to sh to expand wildcards	WITHOUT_CLASSIFICATION	0.9999941133115583	WITHOUT_CLASSIFICATION	5.886688441666739E-6	IMPLEMENTATION
// direct invocation of the command	WITHOUT_CLASSIFICATION	0.9999455572466166	WITHOUT_CLASSIFICATION	5.4442753383323566E-5	IMPLEMENTATION
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999818178100676	WITHOUT_CLASSIFICATION	1.8182189932424304E-5	IMPLEMENTATION
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999818178100676	WITHOUT_CLASSIFICATION	1.8182189932424304E-5	IMPLEMENTATION
// close process output // See JRUBY-3405; hooking up to parent process stdin caused // problems for IRB etc using stdin.	WITHOUT_CLASSIFICATION	0.9999996968241447	WITHOUT_CLASSIFICATION	3.0317585529717764E-7	IMPLEMENTATION
// ignore, we're on the way out	WITHOUT_CLASSIFICATION	0.9998287986121311	WITHOUT_CLASSIFICATION	1.7120138786884395E-4	IMPLEMENTATION
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999692456774885	WITHOUT_CLASSIFICATION	3.075432251158696E-5	IMPLEMENTATION
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999904427295124	WITHOUT_CLASSIFICATION	9.557270487595865E-6	IMPLEMENTATION
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999904427295124	WITHOUT_CLASSIFICATION	9.557270487595865E-6	IMPLEMENTATION
// popen caller wants to be able to write, provide subprocess out directly	WITHOUT_CLASSIFICATION	0.9999896425340234	WITHOUT_CLASSIFICATION	1.0357465976465883E-5	IMPLEMENTATION
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999953779163082	WITHOUT_CLASSIFICATION	4.622083691697975E-6	IMPLEMENTATION
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999953779163082	WITHOUT_CLASSIFICATION	4.622083691697975E-6	IMPLEMENTATION
// execute command with sh -c // this does shell expansion of wildcards	WITHOUT_CLASSIFICATION	0.9999844533283788	WITHOUT_CLASSIFICATION	1.5546671621217E-5	IMPLEMENTATION
// We need to close the out, since some // processes would just wait for the stream // to be closed before they process its content, // and produce the output. E.g.: "cat".	WITHOUT_CLASSIFICATION	0.9999996089739599	WITHOUT_CLASSIFICATION	3.9102604020783834E-7	IMPLEMENTATION
// we only close out if it's the slave stream, to avoid // closing a directly-mapped stream from parent process	WITHOUT_CLASSIFICATION	0.9999997848489539	WITHOUT_CLASSIFICATION	2.151510462235269E-7	IMPLEMENTATION
// The assumption here is that the 'in' stream provides // proper available() support. If available() always // returns 0, we'll hang!	WITHOUT_CLASSIFICATION	0.9999767347843955	WITHOUT_CLASSIFICATION	2.3265215604514756E-5	IMPLEMENTATION
// Force t3 to quit, just in case if it's stuck. // Note: On some platforms, even interrupt might not // have an effect if the thread is IO blocked.	WITHOUT_CLASSIFICATION	0.9999411189656836	WITHOUT_CLASSIFICATION	5.888103431632234E-5	IMPLEMENTATION
// Check for special shell characters [<>|] at the beginning // and end of each command word and don't run in process if we find them.	WITHOUT_CLASSIFICATION	0.9999993666974049	WITHOUT_CLASSIFICATION	6.33302595161912E-7	IMPLEMENTATION
// Note: this method produces meaningful results // only for RubyIO objects. For everything else returns 0.	WITHOUT_CLASSIFICATION	0.999882466760452	WITHOUT_CLASSIFICATION	1.1753323954794035E-4	IMPLEMENTATION
//sequential	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
// reverse the entire area of the array selected if it's reversed.	WITHOUT_CLASSIFICATION	0.999971079333925	WITHOUT_CLASSIFICATION	2.89206660750129E-5	IMPLEMENTATION
// do median of 7 if the array is over 200 elements.	WITHOUT_CLASSIFICATION	0.9999972591624503	WITHOUT_CLASSIFICATION	2.7408375497291313E-6	IMPLEMENTATION
// if it's less than 200 do median of 3	WITHOUT_CLASSIFICATION	0.9999763063092425	WITHOUT_CLASSIFICATION	2.369369075755765E-5	IMPLEMENTATION
// SignalFacade	WITHOUT_CLASSIFICATION	0.999598425807291	WITHOUT_CLASSIFICATION	4.015741927090063E-4	IMPLEMENTATION
// this is the order in which MRI does these two tests	WITHOUT_CLASSIFICATION	0.999997001102895	WITHOUT_CLASSIFICATION	2.9988971050351393E-6	IMPLEMENTATION
// this is the order in which MRI does these tests	WITHOUT_CLASSIFICATION	0.9999982117332452	WITHOUT_CLASSIFICATION	1.7882667547983525E-6	IMPLEMENTATION
// basically just forcing a TypeError here to match MRI	WITHOUT_CLASSIFICATION	0.9999892465080047	WITHOUT_CLASSIFICATION	1.0753491995308738E-5	IMPLEMENTATION
// not saving DFS instance, as it will only be used once (at most) per call	WITHOUT_CLASSIFICATION	0.9987713681722862	WITHOUT_CLASSIFICATION	0.0012286318277137647	IMPLEMENTATION
// Args	WITHOUT_CLASSIFICATION	0.9999909620718842	WITHOUT_CLASSIFICATION	9.037928115819374E-6	IMPLEMENTATION
// static methods only	WITHOUT_CLASSIFICATION	0.9999784423405319	WITHOUT_CLASSIFICATION	2.1557659468089163E-5	IMPLEMENTATION
//System.err.println(" calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9994349911033955	WITHOUT_CLASSIFICATION	5.650088966044188E-4	IMPLEMENTATION
// MRI 1.8.6 behavior: null byte after '%' // leads to "%" string. Null byte in // other places, like "%5\0", leads to error.	WITHOUT_CLASSIFICATION	0.9998519418770212	WITHOUT_CLASSIFICATION	1.480581229789045E-4	IMPLEMENTATION
// last index (+1) accessed by next() // last index (+1) accessed by get()	WITHOUT_CLASSIFICATION	0.9997981404186302	WITHOUT_CLASSIFICATION	2.018595813698516E-4	IMPLEMENTATION
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly.	WITHOUT_CLASSIFICATION	0.9999836018988635	WITHOUT_CLASSIFICATION	1.639810113650631E-5	IMPLEMENTATION
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly. Version for 1.9.	WITHOUT_CLASSIFICATION	0.9999935116123457	WITHOUT_CLASSIFICATION	6.488387654373549E-6	IMPLEMENTATION
// MRI doesn't flag it as an error if width is given multiple // times as a number (but it does for *)	WITHOUT_CLASSIFICATION	0.9999994118195703	WITHOUT_CLASSIFICATION	5.881804298203081E-7	IMPLEMENTATION
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999934532430016	WITHOUT_CLASSIFICATION	6.546756998444179E-6	IMPLEMENTATION
// MRI 1.8.5-p12 doesn't support 1-char strings, but // YARV 0.4.1 does. I don't think it hurts to include // this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])	WITHOUT_CLASSIFICATION	0.9991270109840205	WITHOUT_CLASSIFICATION	8.72989015979615E-4	IMPLEMENTATION
// 'd' and 'i' are the same	WITHOUT_CLASSIFICATION	0.999984647540293	WITHOUT_CLASSIFICATION	1.535245970700278E-5	IMPLEMENTATION
// 'u' with space or plus flags is same as 'd'	WITHOUT_CLASSIFICATION	0.999997121711268	WITHOUT_CLASSIFICATION	2.8782887319892014E-6	IMPLEMENTATION
// We depart here from strict adherence to MRI code, as MRI // uses C-sprintf, in part, to format numeric output, while // we'll use Java's numeric formatting code (and our own).	WITHOUT_CLASSIFICATION	0.9999998199205331	WITHOUT_CLASSIFICATION	1.8007946681034758E-7	IMPLEMENTATION
// skip '-' in bytes, will add where appropriate	WITHOUT_CLASSIFICATION	0.999984501024147	WITHOUT_CLASSIFICATION	1.5498975852945847E-5	IMPLEMENTATION
// ..	WITHOUT_CLASSIFICATION	0.999991262758013	WITHOUT_CLASSIFICATION	8.737241986946765E-6	IMPLEMENTATION
// the 1 is for the stripped sign char	WITHOUT_CLASSIFICATION	0.9999937787924169	WITHOUT_CLASSIFICATION	6.221207583075159E-6	IMPLEMENTATION
// FIXME: what is correct 'recv' argument? // (this does produce the desired behavior)	WITHOUT_CLASSIFICATION	0.8994182280702796	WITHOUT_CLASSIFICATION	0.10058177192972041	IMPLEMENTATION
// gotta have at least a zero...	WITHOUT_CLASSIFICATION	0.9998689619252387	WITHOUT_CLASSIFICATION	1.310380747613421E-4	IMPLEMENTATION
// OK, we now have the significand in digits[0...nDigits] // and the exponent in exponent.  We're ready to format.	WITHOUT_CLASSIFICATION	0.9999528455590672	WITHOUT_CLASSIFICATION	4.715444093273164E-5	IMPLEMENTATION
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9999930122620643	WITHOUT_CLASSIFICATION	6.987737935831892E-6	IMPLEMENTATION
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.999929538220934	WITHOUT_CLASSIFICATION	7.046177906598343E-5	IMPLEMENTATION
//System.err.println(" stringToLong/reading c=" + data[s]);	WITHOUT_CLASSIFICATION	0.9994349911033955	WITHOUT_CLASSIFICATION	5.650088966044188E-4	IMPLEMENTATION
//System.err.println(" stringToLong/converted c=" + c);	WITHOUT_CLASSIFICATION	0.9994461114968655	WITHOUT_CLASSIFICATION	5.53888503134532E-4	IMPLEMENTATION
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9999930122620643	WITHOUT_CLASSIFICATION	6.987737935831892E-6	IMPLEMENTATION
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.999929538220934	WITHOUT_CLASSIFICATION	7.046177906598343E-5	IMPLEMENTATION
// precision for G/g includes integer digits	WITHOUT_CLASSIFICATION	0.9999725075563528	WITHOUT_CLASSIFICATION	2.7492443647134417E-5	IMPLEMENTATION
// deal with length/width	WITHOUT_CLASSIFICATION	0.9998393722404283	WITHOUT_CLASSIFICATION	1.6062775957177537E-4	IMPLEMENTATION
// deal with length/width	WITHOUT_CLASSIFICATION	0.9998393722404283	WITHOUT_CLASSIFICATION	1.6062775957177537E-4	IMPLEMENTATION
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9998877257526833	WITHOUT_CLASSIFICATION	1.1227424731682773E-4	IMPLEMENTATION
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999910550844444	WITHOUT_CLASSIFICATION	8.94491555547886E-6	IMPLEMENTATION
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999976185820016	WITHOUT_CLASSIFICATION	2.3814179983395036E-6	IMPLEMENTATION
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999862599970335	WITHOUT_CLASSIFICATION	1.3740002966476754E-5	IMPLEMENTATION
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9999768583087003	WITHOUT_CLASSIFICATION	2.314169129974394E-5	IMPLEMENTATION
// MRI behavior: In this mode // trailing zeroes are removed: // 1.500E+05 -> 1.5E+05 	WITHOUT_CLASSIFICATION	0.9999794646884662	WITHOUT_CLASSIFICATION	2.053531153378E-5	IMPLEMENTATION
// '.' is printed	WITHOUT_CLASSIFICATION	0.9998435616736654	WITHOUT_CLASSIFICATION	1.5643832633466367E-4	IMPLEMENTATION
// all precision numebers printed	WITHOUT_CLASSIFICATION	0.9999221077818282	WITHOUT_CLASSIFICATION	7.78922181718312E-5	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.999468818743958	WITHOUT_CLASSIFICATION	5.311812560420583E-4	IMPLEMENTATION
// '.'	WITHOUT_CLASSIFICATION	0.9999911054734241	WITHOUT_CLASSIFICATION	8.894526575910076E-6	IMPLEMENTATION
// decimal form, like (but not *just* like!) 'f'	WITHOUT_CLASSIFICATION	0.9766277248110591	WITHOUT_CLASSIFICATION	0.023372275188940944	IMPLEMENTATION
// digits array shifted, update all	WITHOUT_CLASSIFICATION	0.9999805228596572	WITHOUT_CLASSIFICATION	1.9477140342836812E-5	IMPLEMENTATION
// will have a trailing '.' // g fills trailing zeroes if #	WITHOUT_CLASSIFICATION	0.9999889610811609	WITHOUT_CLASSIFICATION	1.103891883905305E-5	IMPLEMENTATION
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.99997448783718	WITHOUT_CLASSIFICATION	2.5512162819932246E-5	IMPLEMENTATION
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.99997448783718	WITHOUT_CLASSIFICATION	2.5512162819932246E-5	IMPLEMENTATION
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9998252630854415	WITHOUT_CLASSIFICATION	1.7473691455852528E-4	IMPLEMENTATION
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9998252630854415	WITHOUT_CLASSIFICATION	1.7473691455852528E-4	IMPLEMENTATION
// digits arr shifted, update all	WITHOUT_CLASSIFICATION	0.999976909930551	WITHOUT_CLASSIFICATION	2.309006944896915E-5	IMPLEMENTATION
// (1|intlen).prec	WITHOUT_CLASSIFICATION	0.999598425807291	WITHOUT_CLASSIFICATION	4.015741927090063E-4	IMPLEMENTATION
// (1|intlen)	WITHOUT_CLASSIFICATION	0.999598425807291	WITHOUT_CLASSIFICATION	4.015741927090063E-4	IMPLEMENTATION
// will have a trailing '.'	WITHOUT_CLASSIFICATION	0.9999786994370639	WITHOUT_CLASSIFICATION	2.1300562936171395E-5	IMPLEMENTATION
// fill up the rest with zeroes	WITHOUT_CLASSIFICATION	0.9995791524592185	WITHOUT_CLASSIFICATION	4.2084754078160186E-4	IMPLEMENTATION
//System.err.println(" main/len=" + len);	WITHOUT_CLASSIFICATION	0.9994349911033955	WITHOUT_CLASSIFICATION	5.650088966044188E-4	IMPLEMENTATION
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999976185820016	WITHOUT_CLASSIFICATION	2.3814179983395036E-6	IMPLEMENTATION
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999862599970335	WITHOUT_CLASSIFICATION	1.3740002966476754E-5	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.999468818743958	WITHOUT_CLASSIFICATION	5.311812560420583E-4	IMPLEMENTATION
// '.'	WITHOUT_CLASSIFICATION	0.9999911054734241	WITHOUT_CLASSIFICATION	8.894526575910076E-6	IMPLEMENTATION
// equivalent to MRI case '\0':	WITHOUT_CLASSIFICATION	0.999688817767995	WITHOUT_CLASSIFICATION	3.111822320049547E-4	IMPLEMENTATION
// '.' and all precision digits printed	WITHOUT_CLASSIFICATION	0.9999582185901097	WITHOUT_CLASSIFICATION	4.17814098903396E-5	IMPLEMENTATION
// \v	WITHOUT_CLASSIFICATION	0.9999909584718885	WITHOUT_CLASSIFICATION	9.041528111615727E-6	IMPLEMENTATION
// dangling '%' char	WITHOUT_CLASSIFICATION	0.9998502350717706	WITHOUT_CLASSIFICATION	1.497649282293033E-4	IMPLEMENTATION
// main while loop (offset < length)	WITHOUT_CLASSIFICATION	0.9999114916059675	WITHOUT_CLASSIFICATION	8.850839403247306E-5	IMPLEMENTATION
// debugging code, keeping for now	WITHOUT_CLASSIFICATION	0.9999818477439878	WITHOUT_CLASSIFICATION	1.81522560121681E-5	IMPLEMENTATION
// MRI rounds up on nnn5nnn, but not nnn5 -- // except for when they do	WITHOUT_CLASSIFICATION	0.999961165667565	WITHOUT_CLASSIFICATION	3.883433243491089E-5	IMPLEMENTATION
// "%.0f" % 0.99	WITHOUT_CLASSIFICATION	0.9996005772647459	WITHOUT_CLASSIFICATION	3.994227352541024E-4	IMPLEMENTATION
// limit the length of negatives if possible (also faster)	WITHOUT_CLASSIFICATION	0.9999666019183114	WITHOUT_CLASSIFICATION	3.33980816885276E-5	IMPLEMENTATION
// negative values	WITHOUT_CLASSIFICATION	0.9999900462101391	WITHOUT_CLASSIFICATION	9.95378986092148E-6	IMPLEMENTATION
// calculation for negatives when %u specified // for values >= Integer.MIN_VALUE * 2, MRI uses (the equivalent of) //   long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val // for smaller values, BigInteger math is required to conform to MRI's // result.	WITHOUT_CLASSIFICATION	0.9999996055791104	WITHOUT_CLASSIFICATION	3.9442088964718056E-7	IMPLEMENTATION
// relatively cheap test for 32-bit values	WITHOUT_CLASSIFICATION	0.9999996856474455	WITHOUT_CLASSIFICATION	3.1435255453399403E-7	IMPLEMENTATION
// no such luck...	WITHOUT_CLASSIFICATION	0.9994988274918142	WITHOUT_CLASSIFICATION	5.011725081858169E-4	IMPLEMENTATION
// ok, now it gets expensive...	WITHOUT_CLASSIFICATION	0.9999415277994046	WITHOUT_CLASSIFICATION	5.847220059544611E-5	IMPLEMENTATION
// go through negated powers of 32 until we find one small enough 	WITHOUT_CLASSIFICATION	0.9999839357835445	WITHOUT_CLASSIFICATION	1.6064216455489113E-5	IMPLEMENTATION
// add to the corresponding positive power of 32 for the result. // meaningful? no. conformant? yes. I just write the code...	WITHOUT_CLASSIFICATION	0.9999551915205593	WITHOUT_CLASSIFICATION	4.480847944060556E-5	IMPLEMENTATION
/* constant vector a */	WITHOUT_CLASSIFICATION	0.9999853714637842	WITHOUT_CLASSIFICATION	1.462853621592679E-5	IMPLEMENTATION
/* most significant w-r bits */	WITHOUT_CLASSIFICATION	0.9999440851336764	WITHOUT_CLASSIFICATION	5.5914866323470745E-5	IMPLEMENTATION
/* least significant r bits */	WITHOUT_CLASSIFICATION	0.9999912011681719	WITHOUT_CLASSIFICATION	8.798831828148979E-6	IMPLEMENTATION
// state[j] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.999935553823166	WITHOUT_CLASSIFICATION	6.444617683399214E-5	IMPLEMENTATION
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.999935553823166	WITHOUT_CLASSIFICATION	6.444617683399214E-5	IMPLEMENTATION
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.999935553823166	WITHOUT_CLASSIFICATION	6.444617683399214E-5	IMPLEMENTATION
/* MSB is 1; assuring non-zero initial array */	WITHOUT_CLASSIFICATION	0.9999961160638168	WITHOUT_CLASSIFICATION	3.883936183200625E-6	IMPLEMENTATION
/* Tempering */	WITHOUT_CLASSIFICATION	0.9999264817012458	WITHOUT_CLASSIFICATION	7.351829875423047E-5	IMPLEMENTATION
// MRI behavior: Week values are monotonous. // So, weeks that effectively belong to previous year, // will get the value of 0, not 52 or 53, as in Java.	WITHOUT_CLASSIFICATION	0.9999999686474336	WITHOUT_CLASSIFICATION	3.135256649494069E-8	IMPLEMENTATION
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9994354164540893	WITHOUT_CLASSIFICATION	5.645835459106205E-4	IMPLEMENTATION
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9994354164540893	WITHOUT_CLASSIFICATION	5.645835459106205E-4	IMPLEMENTATION
// \v	WITHOUT_CLASSIFICATION	0.9999909584718885	WITHOUT_CLASSIFICATION	9.041528111615727E-6	IMPLEMENTATION
//System.err.println("getSign()");	WITHOUT_CLASSIFICATION	0.9995736327784496	WITHOUT_CLASSIFICATION	4.263672215503884E-4	IMPLEMENTATION
//System.err.println(" getSign/" + sign);	WITHOUT_CLASSIFICATION	0.9994349911033955	WITHOUT_CLASSIFICATION	5.650088966044188E-4	IMPLEMENTATION
//System.err.println("figureOutBase()/base=" + base);	WITHOUT_CLASSIFICATION	0.9994349911033955	WITHOUT_CLASSIFICATION	5.650088966044188E-4	IMPLEMENTATION
//System.err.println(" figureOutBase/base=" + base);	WITHOUT_CLASSIFICATION	0.9994349911033955	WITHOUT_CLASSIFICATION	5.650088966044188E-4	IMPLEMENTATION
//System.err.println("calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9994349911033955	WITHOUT_CLASSIFICATION	5.650088966044188E-4	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999670845889459	WITHOUT_CLASSIFICATION	3.291541105411755E-5	IMPLEMENTATION
//System.err.println(" stringToLong=" + val);	WITHOUT_CLASSIFICATION	0.9994349911033955	WITHOUT_CLASSIFICATION	5.650088966044188E-4	IMPLEMENTATION
// no number	WITHOUT_CLASSIFICATION	0.9996977642865924	WITHOUT_CLASSIFICATION	3.022357134076002E-4	IMPLEMENTATION
// trailing garbage	WITHOUT_CLASSIFICATION	0.9985164807435489	WITHOUT_CLASSIFICATION	0.0014835192564509592	IMPLEMENTATION
//System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);	WITHOUT_CLASSIFICATION	0.9985990354315163	WITHOUT_CLASSIFICATION	0.0014009645684837351	IMPLEMENTATION
// it was not found at all!	WITHOUT_CLASSIFICATION	0.9992348110172956	WITHOUT_CLASSIFICATION	7.651889827042966E-4	IMPLEMENTATION
// can be overridden to be informed when objects are removed	WITHOUT_CLASSIFICATION	0.999739406038333	WITHOUT_CLASSIFICATION	2.605939616670233E-4	IMPLEMENTATION
// we reached the end of a list	WITHOUT_CLASSIFICATION	0.9993575792645467	WITHOUT_CLASSIFICATION	6.424207354532428E-4	IMPLEMENTATION
// goto next bucket	WITHOUT_CLASSIFICATION	0.99876304206436	WITHOUT_CLASSIFICATION	0.001236957935640011	IMPLEMENTATION
// we reached the end	WITHOUT_CLASSIFICATION	0.999314613950988	WITHOUT_CLASSIFICATION	6.853860490120797E-4	IMPLEMENTATION
// entry is the first element of this bucket	WITHOUT_CLASSIFICATION	0.9999480301523291	WITHOUT_CLASSIFICATION	5.1969847670982496E-5	IMPLEMENTATION
// states	WITHOUT_CLASSIFICATION	0.999974578195047	WITHOUT_CLASSIFICATION	2.542180495292453E-5	IMPLEMENTATION
// remove leading whitespace (includes _ for lax) // get sign, if any	WITHOUT_CLASSIFICATION	0.9999924571457489	WITHOUT_CLASSIFICATION	7.542854251006512E-6	IMPLEMENTATION
// optimistic pass - calculate value as digits are processed // digits - lax rules // decimal digits - lax rules // exponent sign/digits - lax rules // digits - strict rules // decimal digits - strict rules // exponent sign/digits - strict rules // complete calculation if possible	WITHOUT_CLASSIFICATION	0.9999998361698114	WITHOUT_CLASSIFICATION	1.6383018861918296E-7	IMPLEMENTATION
// fields used for direct (optimistic) calculation // number of significant digits, updated as parsed // zeroes that may go to significand or exponent // offset of decimal pt from start (-1 -> no decimal) // significand, updated as parsed // exponent, updated as parsed	WITHOUT_CLASSIFICATION	0.9999999918636648	WITHOUT_CLASSIFICATION	8.136335297574017E-9	IMPLEMENTATION
// drop through for sign	WITHOUT_CLASSIFICATION	0.9999962923612072	WITHOUT_CLASSIFICATION	3.7076387928521787E-6	IMPLEMENTATION
// switch // will use this if we have to go back the slow way	WITHOUT_CLASSIFICATION	0.9997805610368397	WITHOUT_CLASSIFICATION	2.1943896316035068E-4	IMPLEMENTATION
// drop through for non-strict digits	WITHOUT_CLASSIFICATION	0.999994404354005	WITHOUT_CLASSIFICATION	5.595645994929911E-6	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999852068342772	WITHOUT_CLASSIFICATION	1.4793165722751659E-5	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999053565619869	WITHOUT_CLASSIFICATION	9.464343801305857E-5	IMPLEMENTATION
// no digits, go calc (will return +/- 0.0 for lax)	WITHOUT_CLASSIFICATION	0.9999953047305813	WITHOUT_CLASSIFICATION	4.695269418762347E-6	IMPLEMENTATION
// ignore leading zeroes	WITHOUT_CLASSIFICATION	0.9999468551439096	WITHOUT_CLASSIFICATION	5.3144856090458395E-5	IMPLEMENTATION
// just save a count of zeroes for now; if no digit // ends up following them, they'll be applied to the // exponent rather than the significand (and our max // length for optimistic calc).	WITHOUT_CLASSIFICATION	0.9999999774563565	WITHOUT_CLASSIFICATION	2.2543643509377773E-8	IMPLEMENTATION
// ok, got a non-zero, have to own up to our horded zeroes	WITHOUT_CLASSIFICATION	0.9999825471594184	WITHOUT_CLASSIFICATION	1.7452840581608952E-5	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999358961915906	WITHOUT_CLASSIFICATION	6.410380840935826E-5	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999358961915906	WITHOUT_CLASSIFICATION	6.410380840935826E-5	IMPLEMENTATION
// oh, well, it was worth a try. go let // Double/FloatingDecimal handle it 	WITHOUT_CLASSIFICATION	0.99994411463327	WITHOUT_CLASSIFICATION	5.5885366730074596E-5	IMPLEMENTATION
// ignore // switch	WITHOUT_CLASSIFICATION	0.9996203923833062	WITHOUT_CLASSIFICATION	3.7960761669378156E-4	IMPLEMENTATION
// ignore // switch	WITHOUT_CLASSIFICATION	0.9996203923833062	WITHOUT_CLASSIFICATION	3.7960761669378156E-4	IMPLEMENTATION
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999427648797851	WITHOUT_CLASSIFICATION	5.7235120214822285E-5	IMPLEMENTATION
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999427648797851	WITHOUT_CLASSIFICATION	5.7235120214822285E-5	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9998433677411641	WITHOUT_CLASSIFICATION	1.5663225883584956E-4	IMPLEMENTATION
// first non_underscore char must be digit	WITHOUT_CLASSIFICATION	0.9999577572080003	WITHOUT_CLASSIFICATION	4.224279199963767E-5	IMPLEMENTATION
// no dec digits, end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999639635129521	WITHOUT_CLASSIFICATION	3.603648704788583E-5	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.9998942371009996	WITHOUT_CLASSIFICATION	1.0576289900034511E-4	IMPLEMENTATION
// difficult case, send to Double/FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999737843117257	WITHOUT_CLASSIFICATION	2.621568827428633E-5	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999882628735118	WITHOUT_CLASSIFICATION	1.1737126488232616E-5	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999882628735118	WITHOUT_CLASSIFICATION	1.1737126488232616E-5	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999852068342772	WITHOUT_CLASSIFICATION	1.4793165722751659E-5	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999852068342772	WITHOUT_CLASSIFICATION	1.4793165722751659E-5	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999852068342772	WITHOUT_CLASSIFICATION	1.4793165722751659E-5	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999053565619869	WITHOUT_CLASSIFICATION	9.464343801305857E-5	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999358961915906	WITHOUT_CLASSIFICATION	6.410380840935826E-5	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999358961915906	WITHOUT_CLASSIFICATION	6.410380840935826E-5	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999358961915906	WITHOUT_CLASSIFICATION	6.410380840935826E-5	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9998433677411641	WITHOUT_CLASSIFICATION	1.5663225883584956E-4	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9998433677411641	WITHOUT_CLASSIFICATION	1.5663225883584956E-4	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9998433677411641	WITHOUT_CLASSIFICATION	1.5663225883584956E-4	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.9998942371009996	WITHOUT_CLASSIFICATION	1.0576289900034511E-4	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.9998942371009996	WITHOUT_CLASSIFICATION	1.0576289900034511E-4	IMPLEMENTATION
// lax (str.to_f) allows underscores between e/E and sign	WITHOUT_CLASSIFICATION	0.999959441465817	WITHOUT_CLASSIFICATION	4.0558534183068446E-5	IMPLEMENTATION
// switch // for // no exponent, so drop through for calculation	WITHOUT_CLASSIFICATION	0.9999982519992014	WITHOUT_CLASSIFICATION	1.7480007986614878E-6	IMPLEMENTATION
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.999806257675592	WITHOUT_CLASSIFICATION	1.9374232440800217E-4	IMPLEMENTATION
// TODO: it's not clear to me why, in FloatingDecimal, the // "slop" calculation performed above for positive exponents // isn't used for negative exponents as well. Will find out...	WITHOUT_CLASSIFICATION	0.901934244305629	IMPLEMENTATION	0.09806575569437107	WITHOUT_CLASSIFICATION
// no digits, error	WITHOUT_CLASSIFICATION	0.9990235382470047	WITHOUT_CLASSIFICATION	9.764617529951863E-4	IMPLEMENTATION
// too big for us	WITHOUT_CLASSIFICATION	0.9998609559759299	WITHOUT_CLASSIFICATION	1.3904402407006984E-4	IMPLEMENTATION
// too big for us	WITHOUT_CLASSIFICATION	0.9998609559759299	WITHOUT_CLASSIFICATION	1.3904402407006984E-4	IMPLEMENTATION
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999633972903983	WITHOUT_CLASSIFICATION	3.6602709601732876E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999670845889459	WITHOUT_CLASSIFICATION	3.291541105411755E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999670845889459	WITHOUT_CLASSIFICATION	3.291541105411755E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999670845889459	WITHOUT_CLASSIFICATION	3.291541105411755E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999670845889459	WITHOUT_CLASSIFICATION	3.291541105411755E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999670845889459	WITHOUT_CLASSIFICATION	3.291541105411755E-5	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999944010075648	WITHOUT_CLASSIFICATION	5.598992435185021E-6	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999944010075648	WITHOUT_CLASSIFICATION	5.598992435185021E-6	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999944010075648	WITHOUT_CLASSIFICATION	5.598992435185021E-6	IMPLEMENTATION
// first char must be digit	WITHOUT_CLASSIFICATION	0.9999767452766802	WITHOUT_CLASSIFICATION	2.3254723319742543E-5	IMPLEMENTATION
// no dec digits after '.', error for strict	WITHOUT_CLASSIFICATION	0.9999551392881091	WITHOUT_CLASSIFICATION	4.48607118910112E-5	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999053565619869	WITHOUT_CLASSIFICATION	9.464343801305857E-5	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9998433677411641	WITHOUT_CLASSIFICATION	1.5663225883584956E-4	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9998433677411641	WITHOUT_CLASSIFICATION	1.5663225883584956E-4	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999670845889459	WITHOUT_CLASSIFICATION	3.291541105411755E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999670845889459	WITHOUT_CLASSIFICATION	3.291541105411755E-5	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999944010075648	WITHOUT_CLASSIFICATION	5.598992435185021E-6	IMPLEMENTATION
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999633972903983	WITHOUT_CLASSIFICATION	3.6602709601732876E-5	IMPLEMENTATION
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999678136688595	WITHOUT_CLASSIFICATION	3.218633114060139E-5	IMPLEMENTATION
// switch //while	WITHOUT_CLASSIFICATION	0.9996066918162867	WITHOUT_CLASSIFICATION	3.933081837132876E-4	IMPLEMENTATION
/*     * All the positive powers of 10 that can be     * represented exactly in double/float.     * (From sun.misc.FloatingDecimal.java)     */	WITHOUT_CLASSIFICATION	0.9999997339141433	WITHOUT_CLASSIFICATION	2.66085856592291E-7	IMPLEMENTATION
// Zlib behavior: negative win_bits means no header and no checksum.	WITHOUT_CLASSIFICATION	0.9999899839297087	WITHOUT_CLASSIFICATION	1.0016070291272308E-5	IMPLEMENTATION
// rb_enc_mbclen	WITHOUT_CLASSIFICATION	0.999598425807291	WITHOUT_CLASSIFICATION	4.015741927090063E-4	IMPLEMENTATION
// rb_enc_precise_mbclen	WITHOUT_CLASSIFICATION	0.999935505377077	WITHOUT_CLASSIFICATION	6.449462292307057E-5	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9985397552331703	WITHOUT_CLASSIFICATION	0.0014602447668298035	IMPLEMENTATION
// arg cannot be negative	WITHOUT_CLASSIFICATION	0.9999456542518882	WITHOUT_CLASSIFICATION	5.4345748111809855E-5	IMPLEMENTATION
// NoFunctionalitySignalFacade	WITHOUT_CLASSIFICATION	0.999935505377077	WITHOUT_CLASSIFICATION	6.449462292307057E-5	IMPLEMENTATION
// Change visibility so others can see it	WITHOUT_CLASSIFICATION	0.9999836655474045	WITHOUT_CLASSIFICATION	1.633445259547899E-5	IMPLEMENTATION
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9635145923630839	WITHOUT_CLASSIFICATION	0.03648540763691607	IMPLEMENTATION
// strip off "_dot_rb" for .rb files	WITHOUT_CLASSIFICATION	0.9999953219586457	WITHOUT_CLASSIFICATION	4.678041354295077E-6	IMPLEMENTATION
// Makes sure the key is not already in the hashtable.	WITHOUT_CLASSIFICATION	0.9998805654196978	WITHOUT_CLASSIFICATION	1.1943458030224363E-4	IMPLEMENTATION
// Rehash the table if the threshold is exceeded	WITHOUT_CLASSIFICATION	0.9999795335563759	WITHOUT_CLASSIFICATION	2.0466443624131394E-5	IMPLEMENTATION
// Creates the new entry.	WITHOUT_CLASSIFICATION	0.9999237658361866	WITHOUT_CLASSIFICATION	7.623416381341714E-5	IMPLEMENTATION
// next entry to return // current slot // current entry	WITHOUT_CLASSIFICATION	0.9996691360180932	WITHOUT_CLASSIFICATION	3.30863981906775E-4	IMPLEMENTATION
// advance to first entry	WITHOUT_CLASSIFICATION	0.9999336376429413	WITHOUT_CLASSIFICATION	6.636235705870484E-5	IMPLEMENTATION
// The reason why we need the stream is to be able to invoke available() on it. // STDIN in Java is non-interruptible, non-selectable, and attempt to read // on such stream might lead to thread being blocked without *any* way to unblock it. // That's where available() comes it, so at least we could check whether // anything is available to be read without blocking.	WITHOUT_CLASSIFICATION	0.9996331111328542	WITHOUT_CLASSIFICATION	3.668888671456831E-4	IMPLEMENTATION
/*package-protected*/	WITHOUT_CLASSIFICATION	0.9997652436395854	WITHOUT_CLASSIFICATION	2.3475636041465735E-4	IMPLEMENTATION
// raw file URL, just open directly	WITHOUT_CLASSIFICATION	0.999991081730642	WITHOUT_CLASSIFICATION	8.918269357940217E-6	IMPLEMENTATION
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9998835443670161	WITHOUT_CLASSIFICATION	1.1645563298400635E-4	IMPLEMENTATION
// if refcount is at or below zero, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999997973886985	WITHOUT_CLASSIFICATION	2.0261130157215857E-7	IMPLEMENTATION
// if channel is already closed, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999995985456099	WITHOUT_CLASSIFICATION	4.0145439008638156E-7	IMPLEMENTATION
// otherwise decrement and possibly close as normal	WITHOUT_CLASSIFICATION	0.9998726337303137	WITHOUT_CLASSIFICATION	1.2736626968642154E-4	IMPLEMENTATION
// r/w buffer // are we reading or writing?	WITHOUT_CLASSIFICATION	0.9999593430743479	WITHOUT_CLASSIFICATION	4.065692565223853E-5	IMPLEMENTATION
// this constructor is used by fdopen, so we don't increment descriptor ref count	WITHOUT_CLASSIFICATION	0.9999469054579898	WITHOUT_CLASSIFICATION	5.309454201008071E-5	IMPLEMENTATION
// unread back	WITHOUT_CLASSIFICATION	0.9993104441021394	WITHOUT_CLASSIFICATION	6.895558978606578E-4	IMPLEMENTATION
// iterate over remainder of buffer until we find a match	WITHOUT_CLASSIFICATION	0.9999944335874624	WITHOUT_CLASSIFICATION	5.566412537540676E-6	IMPLEMENTATION
// terminate and advance buffer when we find our char	WITHOUT_CLASSIFICATION	0.9999921850131455	WITHOUT_CLASSIFICATION	7.81498685451555E-6	IMPLEMENTATION
// no match, append remainder of buffer and continue with next block	WITHOUT_CLASSIFICATION	0.9997329162519207	WITHOUT_CLASSIFICATION	2.670837480791726E-4	IMPLEMENTATION
// found a match above, check if remaining separator characters match, appending as we go	WITHOUT_CLASSIFICATION	0.9999989393071385	WITHOUT_CLASSIFICATION	1.0606928615241987E-6	IMPLEMENTATION
// // Check file size - special files in /proc have zero size and need to be // handled by the generic read path. //	WITHOUT_CLASSIFICATION	0.9999959818115918	WITHOUT_CLASSIFICATION	4.018188408243076E-6	IMPLEMENTATION
// // Copy any buffered data (including ungetc byte) //	WITHOUT_CLASSIFICATION	0.9999833996127007	WITHOUT_CLASSIFICATION	1.660038729938012E-5	IMPLEMENTATION
// // Now read unbuffered directly from the file //	WITHOUT_CLASSIFICATION	0.9999910359310021	WITHOUT_CLASSIFICATION	8.964068997759811E-6	IMPLEMENTATION
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999678136688595	WITHOUT_CLASSIFICATION	3.218633114060139E-5	IMPLEMENTATION
// // Need to clamp source (buffer) size to avoid overrun //	WITHOUT_CLASSIFICATION	0.9999213806127053	WITHOUT_CLASSIFICATION	7.861938729462107E-5	IMPLEMENTATION
// not closing from finalize	WITHOUT_CLASSIFICATION	0.9996943020197772	WITHOUT_CLASSIFICATION	3.056979802228035E-4	IMPLEMENTATION
// clear runtime so it doesn't get stuck in memory (JRUBY-2933)	WITHOUT_CLASSIFICATION	0.9999974493603336	WITHOUT_CLASSIFICATION	2.5506396663417044E-6	IMPLEMENTATION
// silence	WITHOUT_CLASSIFICATION	0.9999909584718885	WITHOUT_CLASSIFICATION	9.041528111615727E-6	IMPLEMENTATION
// silence	WITHOUT_CLASSIFICATION	0.9999909584718885	WITHOUT_CLASSIFICATION	9.041528111615727E-6	IMPLEMENTATION
// Don't bother	WITHOUT_CLASSIFICATION	0.9981275940883388	WITHOUT_CLASSIFICATION	0.001872405911661184	IMPLEMENTATION
// Don't bother	WITHOUT_CLASSIFICATION	0.9981275940883388	WITHOUT_CLASSIFICATION	0.001872405911661184	IMPLEMENTATION
// For Sockets, only write as much as will fit.	WITHOUT_CLASSIFICATION	0.9999942634066041	WITHOUT_CLASSIFICATION	5.736593395889544E-6	IMPLEMENTATION
// Correct position for read / write buffering (we could invalidate, but expensive)	WITHOUT_CLASSIFICATION	0.9999976248131502	WITHOUT_CLASSIFICATION	2.3751868497840965E-6	IMPLEMENTATION
// Adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999947576782288	WITHOUT_CLASSIFICATION	5.242321771237988E-6	IMPLEMENTATION
// for SEEK_CUR, need to adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999691619433648	WITHOUT_CLASSIFICATION	3.083805663523143E-5	IMPLEMENTATION
// libc flushes writes on any read from the actual file, so we flush here	WITHOUT_CLASSIFICATION	0.9999889488209982	WITHOUT_CLASSIFICATION	1.1051179001769121E-5	IMPLEMENTATION
// we have read ahead, and need to back up	WITHOUT_CLASSIFICATION	0.9998549294181732	WITHOUT_CLASSIFICATION	1.4507058182675105E-4	IMPLEMENTATION
// 128K seems to be the minimum at which the stat+seek is faster than reallocation	WITHOUT_CLASSIFICATION	0.9999900462034693	WITHOUT_CLASSIFICATION	9.953796530679764E-6	IMPLEMENTATION
// // limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations //	WITHOUT_CLASSIFICATION	0.9999517625753629	WITHOUT_CLASSIFICATION	4.823742463699973E-5	IMPLEMENTATION
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9989318311700082	WITHOUT_CLASSIFICATION	0.001068168829991842	IMPLEMENTATION
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999859845465363	WITHOUT_CLASSIFICATION	1.4015453463794349E-5	IMPLEMENTATION
// // Avoid double-copying for reads that are larger than the buffer size //	WITHOUT_CLASSIFICATION	0.9999849605182441	WITHOUT_CLASSIFICATION	1.5039481755947212E-5	IMPLEMENTATION
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999882642061739	WITHOUT_CLASSIFICATION	1.1735793825975125E-5	IMPLEMENTATION
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999882642061739	WITHOUT_CLASSIFICATION	1.1735793825975125E-5	IMPLEMENTATION
// // Avoid double-copying for reads that are larger than the buffer size, or // the destination is a direct buffer. //	WITHOUT_CLASSIFICATION	0.9999758175533757	WITHOUT_CLASSIFICATION	2.4182446624263167E-5	IMPLEMENTATION
// // We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating // a huge temporary native buffer, when doing reads into a heap buffer // If the dst buffer is direct, then no need to limit. //	WITHOUT_CLASSIFICATION	0.9999852465346367	WITHOUT_CLASSIFICATION	1.4753465363200655E-5	IMPLEMENTATION
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999680823486017	WITHOUT_CLASSIFICATION	3.191765139827371E-5	IMPLEMENTATION
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999680823486017	WITHOUT_CLASSIFICATION	3.191765139827371E-5	IMPLEMENTATION
// Doesn't fit in buffer. Write immediately. // ensure nothing left to write	WITHOUT_CLASSIFICATION	0.9999992356555533	WITHOUT_CLASSIFICATION	7.643444467397498E-7	IMPLEMENTATION
// truncate can't lengthen files, so we save position, seek/write, and go back	WITHOUT_CLASSIFICATION	0.9999620560560847	WITHOUT_CLASSIFICATION	3.794394391524526E-5	IMPLEMENTATION
// how far ahead we are when reading	WITHOUT_CLASSIFICATION	0.9995675449786358	WITHOUT_CLASSIFICATION	4.324550213642558E-4	IMPLEMENTATION
// if the read buffer is ahead, back up	WITHOUT_CLASSIFICATION	0.9999978640740845	WITHOUT_CLASSIFICATION	2.1359259154376054E-6	IMPLEMENTATION
// close without removing from finalizers	WITHOUT_CLASSIFICATION	0.9999904044715203	WITHOUT_CLASSIFICATION	9.595528479594659E-6	IMPLEMENTATION
// putting a bit back, so we're not at EOF anymore	WITHOUT_CLASSIFICATION	0.9999741768939532	WITHOUT_CLASSIFICATION	2.582310604676364E-5	IMPLEMENTATION
// save the ungot	WITHOUT_CLASSIFICATION	0.9997660103479463	WITHOUT_CLASSIFICATION	2.3398965205365715E-4	IMPLEMENTATION
// otherwise, we try an unbuffered read to get whatever's available	WITHOUT_CLASSIFICATION	0.9999841822917321	WITHOUT_CLASSIFICATION	1.5817708267867374E-5	IMPLEMENTATION
// ignore this; select() will set the correct mode when it is finished	WITHOUT_CLASSIFICATION	0.999992345598738	WITHOUT_CLASSIFICATION	7.6544012621527E-6	IMPLEMENTATION
// flush first	WITHOUT_CLASSIFICATION	0.9996541850642933	WITHOUT_CLASSIFICATION	3.458149357067599E-4	IMPLEMENTATION
// // Wake up any channels that became unblocked //	WITHOUT_CLASSIFICATION	0.999950329896569	WITHOUT_CLASSIFICATION	4.9670103431010315E-5	IMPLEMENTATION
// // Register any new blocking I/O requests //	WITHOUT_CLASSIFICATION	0.9992351857725	WITHOUT_CLASSIFICATION	7.648142274999706E-4	IMPLEMENTATION
// Now clear out any previously selected channels	WITHOUT_CLASSIFICATION	0.9999811641524589	WITHOUT_CLASSIFICATION	1.8835847541167946E-5	IMPLEMENTATION
// // Wait for I/O on any channel //	WITHOUT_CLASSIFICATION	0.9999144815352139	WITHOUT_CLASSIFICATION	8.551846478614839E-5	IMPLEMENTATION
// Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'	WITHOUT_CLASSIFICATION	0.9999392569113459	WITHOUT_CLASSIFICATION	6.074308865405809E-5	IMPLEMENTATION
// Java requires "w" for creating a file that does not exist	WITHOUT_CLASSIFICATION	0.9997150779659512	WITHOUT_CLASSIFICATION	2.8492203404879287E-4	IMPLEMENTATION
// seek to force underlying buffer to flush	WITHOUT_CLASSIFICATION	0.9998974790378341	WITHOUT_CLASSIFICATION	1.0252096216594719E-4	IMPLEMENTATION
// seek to force read buffer to invalidate	WITHOUT_CLASSIFICATION	0.9999131100087251	WITHOUT_CLASSIFICATION	8.688999127496944E-5	IMPLEMENTATION
/*        result = eval("arr = Array::['c', 200]; p arr");        assertEquals("[\"c\", 200]", result);        result = eval("arr = Array.['d', 200]; p arr");        assertEquals("[\"d\", 200]", result);        */	WITHOUT_CLASSIFICATION	0.999975625796276	WITHOUT_CLASSIFICATION	2.4374203723958226E-5	IMPLEMENTATION
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.999874120828221	WITHOUT_CLASSIFICATION	1.258791717790368E-4	IMPLEMENTATION
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.7619507360447435	WITHOUT_CLASSIFICATION	0.2380492639552566	IMPLEMENTATION
// make sure the pipe stream is set to null	WITHOUT_CLASSIFICATION	0.9999185407140202	WITHOUT_CLASSIFICATION	8.145928597973982E-5	IMPLEMENTATION
// make sure the main stream is set to null	WITHOUT_CLASSIFICATION	0.9997669750631506	WITHOUT_CLASSIFICATION	2.330249368493617E-4	IMPLEMENTATION
// first try our custom-generated Unsafe	WITHOUT_CLASSIFICATION	0.9999510041263112	WITHOUT_CLASSIFICATION	4.8995873688822835E-5	IMPLEMENTATION
// then try Sun's Unsafe	WITHOUT_CLASSIFICATION	0.9999661739043869	WITHOUT_CLASSIFICATION	3.3826095613209005E-5	IMPLEMENTATION
// if we get here, the class and field exist; construct our Unsafe impl // that calls it directly	WITHOUT_CLASSIFICATION	0.9999920301358329	WITHOUT_CLASSIFICATION	7.969864167111799E-6	IMPLEMENTATION
// else leave it null	WITHOUT_CLASSIFICATION	0.9999274162201633	WITHOUT_CLASSIFICATION	7.258377983670216E-5	IMPLEMENTATION
// TypeMatcher	WITHOUT_CLASSIFICATION	0.999598425807291	WITHOUT_CLASSIFICATION	4.015741927090063E-4	IMPLEMENTATION
// This is now needed, since module Java // isn't in by default	WITHOUT_CLASSIFICATION	0.9999996854121477	WITHOUT_CLASSIFICATION	3.145878523819753E-7	IMPLEMENTATION
// Iterate over the RubyHash keySet, simultaneously iterating over the values()	WITHOUT_CLASSIFICATION	0.9999093388907656	WITHOUT_CLASSIFICATION	9.066110923440947E-5	IMPLEMENTATION
// Get the value from the map via the key	WITHOUT_CLASSIFICATION	0.9999978931343683	WITHOUT_CLASSIFICATION	2.1068656317860267E-6	IMPLEMENTATION
// Get the value from the map via the values iterator	WITHOUT_CLASSIFICATION	0.9999998831350622	WITHOUT_CLASSIFICATION	1.1686493785110574E-7	IMPLEMENTATION
// Check the 2 values obtained via different means	WITHOUT_CLASSIFICATION	0.999997104039088	WITHOUT_CLASSIFICATION	2.89596091181424E-6	IMPLEMENTATION
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999985677084993	WITHOUT_CLASSIFICATION	1.4322915008041721E-6	IMPLEMENTATION
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999985677084993	WITHOUT_CLASSIFICATION	1.4322915008041721E-6	IMPLEMENTATION
// Check the entry.setValue values come back out ok	WITHOUT_CLASSIFICATION	0.9999931428593145	WITHOUT_CLASSIFICATION	6.857140685510635E-6	IMPLEMENTATION
// If we're running from within an IDE we may not have // the .rb files in our classpath. Try to find them // in the filesystem instead.	WITHOUT_CLASSIFICATION	0.9999884708341207	WITHOUT_CLASSIFICATION	1.1529165879271301E-5	IMPLEMENTATION
//assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); //assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));	WITHOUT_CLASSIFICATION	0.999037409906432	WITHOUT_CLASSIFICATION	9.625900935680296E-4	IMPLEMENTATION
// Init	WITHOUT_CLASSIFICATION	0.9999911950079124	WITHOUT_CLASSIFICATION	8.804992087440672E-6	IMPLEMENTATION
// Block	WITHOUT_CLASSIFICATION	0.9999909605462508	WITHOUT_CLASSIFICATION	9.039453749221664E-6	IMPLEMENTATION
// Copy constructor	WITHOUT_CLASSIFICATION	0.9996167363941778	WITHOUT_CLASSIFICATION	3.8326360582224036E-4	IMPLEMENTATION
// presumably this require should fail	WITHOUT_CLASSIFICATION	0.9990486682329477	WITHOUT_CLASSIFICATION	9.513317670523857E-4	IMPLEMENTATION
// JRUBY-646 // presumably this require should fail	WITHOUT_CLASSIFICATION	0.9990486682329477	WITHOUT_CLASSIFICATION	9.513317670523857E-4	IMPLEMENTATION
// Test that requiring a normal Java class raises an error (JRUBY-3214	WITHOUT_CLASSIFICATION	0.9999331259017621	WITHOUT_CLASSIFICATION	6.687409823790645E-5	IMPLEMENTATION
// ok	WITHOUT_CLASSIFICATION	0.9999735699645173	WITHOUT_CLASSIFICATION	2.6430035482755144E-5	IMPLEMENTATION
// Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods // from Ruby so they are not really unused).	WITHOUT_CLASSIFICATION	0.9999979736838069	WITHOUT_CLASSIFICATION	2.0263161929760194E-6	IMPLEMENTATION
//load should work several times in a row	WITHOUT_CLASSIFICATION	0.9999769649561052	WITHOUT_CLASSIFICATION	2.3035043894726702E-5	IMPLEMENTATION
//reset the $loadTestvar	WITHOUT_CLASSIFICATION	0.9997928670638802	WITHOUT_CLASSIFICATION	2.0713293611995852E-4	IMPLEMENTATION
//call throwException via JRuby	WITHOUT_CLASSIFICATION	0.9995726867746165	WITHOUT_CLASSIFICATION	4.2731322538343253E-4	IMPLEMENTATION
// Notify the calling thread that we're about to go to sleep the first time	WITHOUT_CLASSIFICATION	0.9999982578507705	WITHOUT_CLASSIFICATION	1.7421492295535036E-6	IMPLEMENTATION
// wait for the go signal	WITHOUT_CLASSIFICATION	0.9999881283559063	WITHOUT_CLASSIFICATION	1.1871644093735053E-5	IMPLEMENTATION
// run ten separate calls into Ruby, with delay and explicit GC	WITHOUT_CLASSIFICATION	0.999985095998437	WITHOUT_CLASSIFICATION	1.4904001562915873E-5	IMPLEMENTATION
// wait until thread has initialized	WITHOUT_CLASSIFICATION	0.9999639762932165	WITHOUT_CLASSIFICATION	3.602370678337071E-5	IMPLEMENTATION
// notify thread to proceed	WITHOUT_CLASSIFICATION	0.9999250903193291	WITHOUT_CLASSIFICATION	7.490968067093866E-5	IMPLEMENTATION
// wait until thread has completed	WITHOUT_CLASSIFICATION	0.9999448331831353	WITHOUT_CLASSIFICATION	5.5166816864661985E-5	IMPLEMENTATION
// we do preand post load outside the "body" versions to pre-prepare // and pre-push the dynamic scope we need for lastline	WITHOUT_CLASSIFICATION	0.99987710087515	WITHOUT_CLASSIFICATION	1.22899124849928E-4	IMPLEMENTATION
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999998265954275	WITHOUT_CLASSIFICATION	1.734045725083602E-7	IMPLEMENTATION
// MRI behavior: raise ArgumentError for 'unknown command' before // checking number of args.	WITHOUT_CLASSIFICATION	0.9999844889160381	WITHOUT_CLASSIFICATION	1.5511083961949323E-5	IMPLEMENTATION
// if any exceptions were raised, we fail	WITHOUT_CLASSIFICATION	0.9999681148111013	WITHOUT_CLASSIFICATION	3.1885188898721606E-5	IMPLEMENTATION
// there should only be one more thread in thread group than before we started	WITHOUT_CLASSIFICATION	0.9998890191413945	WITHOUT_CLASSIFICATION	1.1098085860545412E-4	IMPLEMENTATION
// construct a new cache with thread's classloader and no limit	WITHOUT_CLASSIFICATION	0.9986662469044408	WITHOUT_CLASSIFICATION	0.0013337530955591839	IMPLEMENTATION
//        Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); //        Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();	WITHOUT_CLASSIFICATION	0.9998963331074561	WITHOUT_CLASSIFICATION	1.0366689254390365E-4	IMPLEMENTATION
//        assertSame(script1, script2);	WITHOUT_CLASSIFICATION	0.9998941815905964	WITHOUT_CLASSIFICATION	1.0581840940371808E-4	IMPLEMENTATION
// void methods should work	WITHOUT_CLASSIFICATION	0.9999468861340598	WITHOUT_CLASSIFICATION	5.3113865940185454E-5	IMPLEMENTATION
// methods with required = 4 or higher should bind and be callable using reflection // JRUBY-3649	WITHOUT_CLASSIFICATION	0.9998533867500602	WITHOUT_CLASSIFICATION	1.4661324993987847E-4	IMPLEMENTATION
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999861719832224	WITHOUT_CLASSIFICATION	1.3828016777603851E-5	IMPLEMENTATION
// Ensure we have a new interpreter for each test. Previous we were using the //  same interpreter which caused problems as soon as one test failed.	WITHOUT_CLASSIFICATION	0.999996308399937	WITHOUT_CLASSIFICATION	3.6916000629953047E-6	IMPLEMENTATION
// Without a flush Ant will miss some of our output	WITHOUT_CLASSIFICATION	0.9999912791598216	WITHOUT_CLASSIFICATION	8.720840178457483E-6	IMPLEMENTATION
// assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());	WITHOUT_CLASSIFICATION	0.999882847834233	WITHOUT_CLASSIFICATION	1.171521657668933E-4	IMPLEMENTATION
//        int n = 10;	WITHOUT_CLASSIFICATION	0.9999671936488612	WITHOUT_CLASSIFICATION	3.280635113880251E-5	IMPLEMENTATION
// there might be more test classes in a single file, so we iterate over them	WITHOUT_CLASSIFICATION	0.9999991369395499	WITHOUT_CLASSIFICATION	8.630604500794764E-7	IMPLEMENTATION
//No ClassCastException!	WITHOUT_CLASSIFICATION	0.9997732536368881	WITHOUT_CLASSIFICATION	2.2674636311187282E-4	IMPLEMENTATION
// value equality	WITHOUT_CLASSIFICATION	0.9999200203594238	WITHOUT_CLASSIFICATION	7.997964057609926E-5	IMPLEMENTATION
// identity equality	WITHOUT_CLASSIFICATION	0.9982999597714194	WITHOUT_CLASSIFICATION	0.0017000402285806753	IMPLEMENTATION
// bench straight-up integer fib(30)	WITHOUT_CLASSIFICATION	0.9998864368493218	WITHOUT_CLASSIFICATION	1.1356315067825021E-4	IMPLEMENTATION
// bench Integer fib	WITHOUT_CLASSIFICATION	0.9996029924399281	WITHOUT_CLASSIFICATION	3.970075600718711E-4	IMPLEMENTATION
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.999935505377077	WITHOUT_CLASSIFICATION	6.449462292307057E-5	IMPLEMENTATION
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.999935505377077	WITHOUT_CLASSIFICATION	6.449462292307057E-5	IMPLEMENTATION
// bench fixnum-boxed fib	WITHOUT_CLASSIFICATION	0.999935505377077	WITHOUT_CLASSIFICATION	6.449462292307057E-5	IMPLEMENTATION
// bench straight-up long fib(30)	WITHOUT_CLASSIFICATION	0.9999180814484181	WITHOUT_CLASSIFICATION	8.191855158189948E-5	IMPLEMENTATION
// bench Long fib	WITHOUT_CLASSIFICATION	0.9996020759438821	WITHOUT_CLASSIFICATION	3.979240561179986E-4	IMPLEMENTATION
// skip this one, probably no 'ls' (windows)	WITHOUT_CLASSIFICATION	0.9999057945185172	WITHOUT_CLASSIFICATION	9.420548148273466E-5	IMPLEMENTATION
// start off with a neutral parent	WITHOUT_CLASSIFICATION	0.9999823530587778	WITHOUT_CLASSIFICATION	1.764694122228017E-5	IMPLEMENTATION
/*            public class Hello {                public static String getMessage() {                    return ".....";                }            }            */	WITHOUT_CLASSIFICATION	0.9999992605880265	WITHOUT_CLASSIFICATION	7.394119735245493E-7	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999489427705954	WITHOUT_CLASSIFICATION	5.1057229404627363E-5	IMPLEMENTATION
// Note: We can't use file.exists() to check whether the symlink // exists or not, because that method returns false for existing // but broken symlink. So, we try without the existence check, // but in the try-catch block. // MRI behavior: symlink? on broken symlink should return true.	WITHOUT_CLASSIFICATION	0.9999989951547889	WITHOUT_CLASSIFICATION	1.0048452110723803E-6	IMPLEMENTATION
// We are creating a new IO object that shares the same // IOHandler (and fileno).	WITHOUT_CLASSIFICATION	0.9999888377087701	WITHOUT_CLASSIFICATION	1.1162291229825087E-5	IMPLEMENTATION
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999963140460932	WITHOUT_CLASSIFICATION	3.6859539066819117E-6	IMPLEMENTATION
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9995736327784496	WITHOUT_CLASSIFICATION	4.263672215503884E-4	IMPLEMENTATION
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9996820982816387	WITHOUT_CLASSIFICATION	3.179017183613711E-4	IMPLEMENTATION
// Translate "x || y" --> "x = (is_true(x) ? x : y)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, true, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9997992538691441	WITHOUT_CLASSIFICATION	2.0074613085582123E-4	IMPLEMENTATION
// // Force the client socket to be blocking //	WITHOUT_CLASSIFICATION	0.9999586953102663	WITHOUT_CLASSIFICATION	4.1304689733788546E-5	IMPLEMENTATION
// Additional context surrounding tokens that both the lexer and // grammar use.	WITHOUT_CLASSIFICATION	0.9996639426581249	WITHOUT_CLASSIFICATION	3.360573418750739E-4	IMPLEMENTATION
// Enebo:  c can never be antrhign but '.' // Why did I put this here?	WITHOUT_CLASSIFICATION	0.9367918099414155	WITHOUT_CLASSIFICATION	0.06320819005858452	IMPLEMENTATION
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9999913362923278	WITHOUT_CLASSIFICATION	8.663707672156552E-6	IMPLEMENTATION
//[C,C] //[C, boolean]	WITHOUT_CLASSIFICATION	0.9997652436395854	WITHOUT_CLASSIFICATION	2.3475636041465735E-4	IMPLEMENTATION
// Label for the start of the closure (used to implement redo) // Label for the end of the closure (used to implement retry)	WITHOUT_CLASSIFICATION	0.9969402453241629	WITHOUT_CLASSIFICATION	0.0030597546758371077	IMPLEMENTATION
// ignore; job was cancelled // FIXME: is this ok?	WITHOUT_CLASSIFICATION	0.9906745611373413	WITHOUT_CLASSIFICATION	0.009325438862658596	IMPLEMENTATION
//                    // check arity //                    checkArity(mv, scope);	WITHOUT_CLASSIFICATION	0.999823316288118	WITHOUT_CLASSIFICATION	1.766837118819398E-4	IMPLEMENTATION
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9997261399480177	WITHOUT_CLASSIFICATION	2.7386005198226686E-4	IMPLEMENTATION
// we take the first method found as our "n" method, since for any non-specific // arity they'll all error the same. If an actual "n" method is created, we // use that.	WITHOUT_CLASSIFICATION	0.9999888133717055	WITHOUT_CLASSIFICATION	1.118662829448942E-5	IMPLEMENTATION
// Used by our duck-typification of Proc into interface types, to allow // coercing a simple proc into an interface parameter.	WITHOUT_CLASSIFICATION	0.9999994796640957	WITHOUT_CLASSIFICATION	5.203359042088412E-7	IMPLEMENTATION
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999942181639677	WITHOUT_CLASSIFICATION	5.781836032350751E-6	IMPLEMENTATION
// it's either as converted as we can make it via above logic or it's // not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9793448009204764	WITHOUT_CLASSIFICATION	0.020655199079523602	IMPLEMENTATION
// package scheme 2: separate module for each full package name, constructed  // from the camel-cased package segments: Java::JavaLang::Object, 	WITHOUT_CLASSIFICATION	0.9999976773497683	WITHOUT_CLASSIFICATION	2.3226502317133345E-6	IMPLEMENTATION
// // construct the proxy method //	WITHOUT_CLASSIFICATION	0.9998604719196101	WITHOUT_CLASSIFICATION	1.395280803899584E-4	IMPLEMENTATION
// line 159 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999488678840645	WITHOUT_CLASSIFICATION	5.113211593544134E-5	IMPLEMENTATION
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999839044291211	WITHOUT_CLASSIFICATION	1.6095570878897033E-5	IMPLEMENTATION
// line 152 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999488678840645	WITHOUT_CLASSIFICATION	5.113211593544134E-5	IMPLEMENTATION
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999984216661327	WITHOUT_CLASSIFICATION	1.578333867265339E-6	IMPLEMENTATION
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999839044291211	WITHOUT_CLASSIFICATION	1.6095570878897033E-5	IMPLEMENTATION
// We only need to pass in current scope if we are evaluating as a block (which // is only done for evals).  We need to pass this in so that we can appropriately scope // down to captured scopes when we are parsing.	WITHOUT_CLASSIFICATION	0.9999998752997723	WITHOUT_CLASSIFICATION	1.2470022768339608E-7	IMPLEMENTATION
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999934532430016	WITHOUT_CLASSIFICATION	6.546756998444179E-6	IMPLEMENTATION
// A place to store that special hiding space that bindings need to implement things like: // eval("a = 1", binding); eval("p a").  All binding instances must get access to this // hidden shared scope.  We store it here.  This will be null if no binding has yet // been called.	WITHOUT_CLASSIFICATION	0.701329617542448	IMPLEMENTATION	0.298670382457552	WITHOUT_CLASSIFICATION
// TODO: make it 16 now ? // MUST be power of 2!	WITHOUT_CLASSIFICATION	0.6279993474445064	IMPLEMENTATION	0.3720006525554937	WITHOUT_CLASSIFICATION
// check visibility // dup method	WITHOUT_CLASSIFICATION	0.9995213610516378	WITHOUT_CLASSIFICATION	4.786389483622059E-4	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9970927448589878	WITHOUT_CLASSIFICATION	0.0029072551410121122	IMPLEMENTATION
// unsigned int, native // unsigned long, native	WITHOUT_CLASSIFICATION	0.9997182424193053	WITHOUT_CLASSIFICATION	2.817575806947493E-4	IMPLEMENTATION
//need padding //I'm fairly sure there is a library call to create a //string filled with a given char with a given length but I couldn't find it	WITHOUT_CLASSIFICATION	0.9998277858325374	WITHOUT_CLASSIFICATION	1.7221416746248197E-4	IMPLEMENTATION
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999910550844444	WITHOUT_CLASSIFICATION	8.94491555547886E-6	IMPLEMENTATION
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.999874120828221	WITHOUT_CLASSIFICATION	1.258791717790368E-4	IMPLEMENTATION
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.999806257675592	WITHOUT_CLASSIFICATION	1.9374232440800217E-4	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9962102689813772	WITHOUT_CLASSIFICATION	0.0037897310186228352	IMPLEMENTATION
// Estimate the square root with the foremost 62 bits of squarD // bi and scale are a tandem	WITHOUT_CLASSIFICATION	0.9999833579627219	WITHOUT_CLASSIFICATION	1.664203727820034E-5	IMPLEMENTATION
// captures // begin and end are used when not groups defined // source string	WITHOUT_CLASSIFICATION	0.9999908938121428	WITHOUT_CLASSIFICATION	9.10618785710045E-6	IMPLEMENTATION
// // INSTANCE VARIABLE RUBY METHODS //	WITHOUT_CLASSIFICATION	0.9998833414877275	WITHOUT_CLASSIFICATION	1.1665851227239598E-4	IMPLEMENTATION
// switch // while	WITHOUT_CLASSIFICATION	0.9997781815205702	WITHOUT_CLASSIFICATION	2.2181847942970555E-4	IMPLEMENTATION
// For nodes do not have their own scope so we pass null to indicate this. // 'For's are implemented as blocks in evaluation, but they have no scope so we // just deal with this lack of scope throughout its lifespan.  We should probably // change the way this works to get rid of multiple null checks.	WITHOUT_CLASSIFICATION	0.999695959914298	WITHOUT_CLASSIFICATION	3.0404008570189864E-4	IMPLEMENTATION
// This field is used during argument processing to avoid putting RubyArray // instances that are purely for utility purposes into ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999992549587577	WITHOUT_CLASSIFICATION	7.450412422000209E-7	IMPLEMENTATION
// Parent container for this context (can be dynamic!!) // If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure // List of IR instructions for this method	WITHOUT_CLASSIFICATION	0.999973649888073	WITHOUT_CLASSIFICATION	2.6350111926966227E-5	IMPLEMENTATION
// Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = false    //    beq(v1, false, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999958253630337	WITHOUT_CLASSIFICATION	4.174636966380608E-6	IMPLEMENTATION
// expected	WITHOUT_CLASSIFICATION	0.9997421747933872	WITHOUT_CLASSIFICATION	2.578252066128261E-4	IMPLEMENTATION
// Do nothing	WITHOUT_CLASSIFICATION	0.9998171104085264	WITHOUT_CLASSIFICATION	1.8288959147358565E-4	IMPLEMENTATION
// constructor	WITHOUT_CLASSIFICATION	0.9995903527563378	WITHOUT_CLASSIFICATION	4.0964724366215286E-4	IMPLEMENTATION
// If a line is followed by a blank line put // it back.	WITHOUT_CLASSIFICATION	0.9999657376092652	WITHOUT_CLASSIFICATION	3.426239073472969E-5	IMPLEMENTATION
/* $>: default output handle */	WITHOUT_CLASSIFICATION	0.999970897795364	WITHOUT_CLASSIFICATION	2.9102204636048504E-5	IMPLEMENTATION
// line 423	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 486	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// Signal uses sun.misc.* classes, this is not allowed // in the security-sensitive environments	WITHOUT_CLASSIFICATION	0.9997511537639584	WITHOUT_CLASSIFICATION	2.488462360415881E-4	IMPLEMENTATION
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999826715482464	WITHOUT_CLASSIFICATION	1.732845175360885E-5	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9994473568077583	WITHOUT_CLASSIFICATION	5.526431922416187E-4	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9994473568077583	WITHOUT_CLASSIFICATION	5.526431922416187E-4	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999933038932128	WITHOUT_CLASSIFICATION	6.696106787248492E-6	IMPLEMENTATION
// if there's no receiver, evaluate and pass in the superclass, or // pass self if it no superclass	WITHOUT_CLASSIFICATION	0.9999926937668361	WITHOUT_CLASSIFICATION	7.3062331638768576E-6	IMPLEMENTATION
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9997085944552306	WITHOUT_CLASSIFICATION	2.9140554476933295E-4	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.8869162033585843	IMPLEMENTATION	0.11308379664141574	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.8869162033585843	IMPLEMENTATION	0.11308379664141574	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.8869162033585843	IMPLEMENTATION	0.11308379664141574	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.8869162033585843	IMPLEMENTATION	0.11308379664141574	WITHOUT_CLASSIFICATION
// Decrease value to hit upper range.  	WITHOUT_CLASSIFICATION	0.9999845515344158	WITHOUT_CLASSIFICATION	1.5448465584199556E-5	IMPLEMENTATION
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.999915544323204	WITHOUT_CLASSIFICATION	8.445567679610026E-5	IMPLEMENTATION
// "else" body	WITHOUT_CLASSIFICATION	0.9999238560534545	WITHOUT_CLASSIFICATION	7.614394654552038E-5	IMPLEMENTATION
// done // done // done // Nothing to do for 1.8 // done // done // done // done // done // done // done? // done // done // done // done // done // done // done // done // done // done // done //            case DEFINEDNODE: return buildDefined(node, m); // Incomplete // done // done // done // done // done // done // done // done //            case ENSURENODE: return buildEnsureNode(node, m); // DEFERRED // done // done // done // done //            case FLIPNODE: return buildFlip(node, m); // SSS FIXME: What code generates this AST? // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done? // done // done // done // done // done // done -- partially //            case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); // DEFERRED SSS FIXME: What code generates this AST? // done //            case POSTEXENODE: return buildPostExe(node, m); // DEFERRED //            case PREEXENODE: return buildPreExe(node, m); // DEFERRED // done?? // done	WITHOUT_CLASSIFICATION	0.9559934600582105	WITHOUT_CLASSIFICATION	0.04400653994178943	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.999598425807291	WITHOUT_CLASSIFICATION	4.015741927090063E-4	IMPLEMENTATION
/* $+: string matches last paren. */	WITHOUT_CLASSIFICATION	0.9999998872071103	WITHOUT_CLASSIFICATION	1.1279288969129811E-7	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999985055584247	WITHOUT_CLASSIFICATION	1.4944415752325861E-6	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999985055584247	WITHOUT_CLASSIFICATION	1.4944415752325861E-6	IMPLEMENTATION
// Ruby code frequently uses a platform check to choose "NUL:" on windows // but since that check doesn't work well on JRuby, we help it out	WITHOUT_CLASSIFICATION	0.9999991242088849	WITHOUT_CLASSIFICATION	8.757911149918074E-7	IMPLEMENTATION
/* 10! */	WITHOUT_CLASSIFICATION	0.9999983452507534	WITHOUT_CLASSIFICATION	1.6547492466209219E-6	IMPLEMENTATION
//            case RESCUENODE: return buildRescue(node, m); // DEFERRED //            case RETRYNODE: return buildRetry(node, m); // DEFERRED // done	WITHOUT_CLASSIFICATION	0.999916543430187	WITHOUT_CLASSIFICATION	8.34565698130485E-5	IMPLEMENTATION
// Is this instruction live or dead?  During optimization passes, if this instruction // causes no side-effects and the result of the instruction is not needed by anyone else, // we can remove this instruction altogether without affecting program correctness.	WITHOUT_CLASSIFICATION	0.8126418151421613	IMPLEMENTATION	0.18735818485783878	WITHOUT_CLASSIFICATION
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999739791357912	WITHOUT_CLASSIFICATION	2.602086420871702E-5	IMPLEMENTATION
// first, iterate over all required args	WITHOUT_CLASSIFICATION	0.9999087324152806	WITHOUT_CLASSIFICATION	9.126758471950131E-5	IMPLEMENTATION
// // Determine if the parameter might be passed as a 32bit int parameter. // This just applies to buffer/pointer types. //	WITHOUT_CLASSIFICATION	0.999999691647827	WITHOUT_CLASSIFICATION	3.0835217304736976E-7	IMPLEMENTATION
//Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());	WITHOUT_CLASSIFICATION	0.9997144265710111	WITHOUT_CLASSIFICATION	2.8557342898892545E-4	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999984216661327	WITHOUT_CLASSIFICATION	1.578333867265339E-6	IMPLEMENTATION
// line 449	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 495	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// Management/monitoring	WITHOUT_CLASSIFICATION	0.999935505377077	WITHOUT_CLASSIFICATION	6.449462292307057E-5	IMPLEMENTATION
// if we've found the last char of the separator, // and we've found at least as many characters as separator length, // and the last n characters of our buffer match the separator, we're done	WITHOUT_CLASSIFICATION	0.9999999051821375	WITHOUT_CLASSIFICATION	9.481786246941667E-8	IMPLEMENTATION
/* 14! */	WITHOUT_CLASSIFICATION	0.9999983452507534	WITHOUT_CLASSIFICATION	1.6547492466209219E-6	IMPLEMENTATION
// Process any set of annotations // No supported options	WITHOUT_CLASSIFICATION	0.9999953551371845	WITHOUT_CLASSIFICATION	4.644862815511933E-6	IMPLEMENTATION
// add to the jitted methods set	WITHOUT_CLASSIFICATION	0.9998873059144436	WITHOUT_CLASSIFICATION	1.1269408555629328E-4	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.9999962187429544	WITHOUT_CLASSIFICATION	3.7812570456566242E-6	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.9999962187429544	WITHOUT_CLASSIFICATION	3.7812570456566242E-6	IMPLEMENTATION
//            case SCLASSNODE: return buildSClass(node, m); // DEFERRED // done // done // done // done // done // done // done // done //            case UNDEFNODE: return buildUndef(node, m); // DEFERRED // done //            case VALIASNODE: return buildVAlias(node, m); // DEFERRED // done // done	WITHOUT_CLASSIFICATION	0.999916543430187	WITHOUT_CLASSIFICATION	8.345656981304864E-5	IMPLEMENTATION
// // Adding a post-invoke for the cb result serves to both keep it alive // until after the function returns, and allows us to clean up the native // trampoline early, instead of letting them accumulate until a GC run //	WITHOUT_CLASSIFICATION	0.999986994037548	WITHOUT_CLASSIFICATION	1.3005962451952037E-5	IMPLEMENTATION
/* The Java method doesn't care what class it is, but we need to               know what to convert it to, so we use the object's own class.               If that doesn't help, we use String to force a call to the               object's "to_s" method. */	WITHOUT_CLASSIFICATION	0.9733907783445361	WITHOUT_CLASSIFICATION	0.02660922165546389	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.9999837427921694	WITHOUT_CLASSIFICATION	1.6257207830615667E-5	IMPLEMENTATION
// Atomic integers for symbol and method IDs	WITHOUT_CLASSIFICATION	0.9999020772546751	WITHOUT_CLASSIFICATION	9.792274532503378E-5	IMPLEMENTATION
/* 18! */	WITHOUT_CLASSIFICATION	0.9999983452507534	WITHOUT_CLASSIFICATION	1.6547492466209219E-6	IMPLEMENTATION
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9819467803135754	WITHOUT_CLASSIFICATION	0.018053219686424583	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999836828676384	WITHOUT_CLASSIFICATION	1.6317132361522252E-5	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999836828676384	WITHOUT_CLASSIFICATION	1.6317132361522252E-5	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999836828676384	WITHOUT_CLASSIFICATION	1.6317132361522252E-5	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999836828676384	WITHOUT_CLASSIFICATION	1.6317132361522252E-5	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999996012918024	WITHOUT_CLASSIFICATION	3.9870819760011006E-7	IMPLEMENTATION
/*      * This method takes as input a map of operands to their values, and outputs     * the result of this instruction.     *     * If the value map provides a value for any of the instruction's operands     * the expectation is that the operand will be replaced with the simplified value.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify.     *     * @param valueMap Mapping from operands to their simplified values     * @returns simplified result / output of this instruction     */	WITHOUT_CLASSIFICATION	0.9999999999962913	WITHOUT_CLASSIFICATION	3.708677652657825E-12	IMPLEMENTATION
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9956039836943431	WITHOUT_CLASSIFICATION	0.004396016305656933	IMPLEMENTATION
// An atomic long for generating DynamicMethod serial numbers	WITHOUT_CLASSIFICATION	0.9999597439846669	WITHOUT_CLASSIFICATION	4.025601533300886E-5	IMPLEMENTATION
// MRI behavior: always check whether the file is writable // or not, even if we are to write 0 bytes.	WITHOUT_CLASSIFICATION	0.9999991604272762	WITHOUT_CLASSIFICATION	8.395727236784469E-7	IMPLEMENTATION
/* 22! */	WITHOUT_CLASSIFICATION	0.9999983452507534	WITHOUT_CLASSIFICATION	1.6547492466209219E-6	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.9996495309797153	WITHOUT_CLASSIFICATION	3.504690202846617E-4	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999662332529462	WITHOUT_CLASSIFICATION	3.37667470538211E-5	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999662332529462	WITHOUT_CLASSIFICATION	3.37667470538211E-5	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999662332529462	WITHOUT_CLASSIFICATION	3.37667470538211E-5	IMPLEMENTATION
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999969809985771	WITHOUT_CLASSIFICATION	3.019001422885524E-6	IMPLEMENTATION
// Build a new class and add it to the current scope (could be a script / module / class)	WITHOUT_CLASSIFICATION	0.9999950780299943	WITHOUT_CLASSIFICATION	4.921970005578991E-6	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999595844348181	WITHOUT_CLASSIFICATION	4.041556518187656E-5	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999595844348181	WITHOUT_CLASSIFICATION	4.041556518187656E-5	IMPLEMENTATION
// AF_INET	WITHOUT_CLASSIFICATION	0.9999909584718885	WITHOUT_CLASSIFICATION	9.041528111615727E-6	IMPLEMENTATION
//////////////////////////////////////////////////////////////////////////// // Now we provide default impls of a number of signatures. For each arity, // we first generate a non-block version of the method, which just adds // NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can // potentially take a block, to only generate the block-receiving signature // and still avoid arg boxing. // // We then provide default implementations of each block-accepting method // that in turn call the IRubyObject[]+Block version of call. This then // finally falls back on the minimum implementation requirement for // dynamic method handles. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9990038416370403	WITHOUT_CLASSIFICATION	9.96158362959757E-4	IMPLEMENTATION
// Because we implement Java interfaces now, we need a new === that's // aware of those additional "virtual" supertypes	WITHOUT_CLASSIFICATION	0.953870033899474	WITHOUT_CLASSIFICATION	0.04612996610052593	IMPLEMENTATION
// BASE64	WITHOUT_CLASSIFICATION	0.9999909584718885	WITHOUT_CLASSIFICATION	9.041528111615727E-6	IMPLEMENTATION
/* note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY         * when value is an integer less than 1.         * We treat 0 as a special case to avoid Domain error.         */	WITHOUT_CLASSIFICATION	0.9999999839101135	WITHOUT_CLASSIFICATION	1.6089886536126775E-8	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.9998704602643597	WITHOUT_CLASSIFICATION	1.295397356402888E-4	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999975620845187	WITHOUT_CLASSIFICATION	2.4379154811830096E-6	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999975620845187	WITHOUT_CLASSIFICATION	2.4379154811830096E-6	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999631805704702	WITHOUT_CLASSIFICATION	3.6819429529917006E-5	IMPLEMENTATION
// SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode // We won't get here for argument receives!  So, buildDasgn is called for // assignments to block variables within a block.  As far as the IR is concerned, // this is just a simple copy	WITHOUT_CLASSIFICATION	0.9999999914215701	WITHOUT_CLASSIFICATION	8.578429809816705E-9	IMPLEMENTATION
// getSimplifiedOperand returns the value of this operand, fully simplified // getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away // // The value is used during optimizations and propagated through the IR.  But, it is thrown away after that. // But, the operand form is used for constructing the compound objects represented by the operand. // // Example: a = [1], b = [3,4], c = [a,b], d = [2,c] //   -- getValue(c) = [1,[3,4]];     getSimplifiedOperand(c) = [1, b] //   -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] // // Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. // So, if contents of a or b is modified, the "simplified value"s of c and d also change!  This difference // is captured by these two methods.	WITHOUT_CLASSIFICATION	0.9999999995727201	WITHOUT_CLASSIFICATION	4.2727998072751694E-10	IMPLEMENTATION
//IRubyObject protocol = args[4];	WITHOUT_CLASSIFICATION	0.9996438910612492	WITHOUT_CLASSIFICATION	3.5610893875071914E-4	IMPLEMENTATION
// promise to implement three to N with block	WITHOUT_CLASSIFICATION	0.9870573174669504	WITHOUT_CLASSIFICATION	0.012942682533049641	IMPLEMENTATION
// Ruby's OMG capture all source in a Hash feature // Add each line to buffer when encountering newline or EOF for first time.	WITHOUT_CLASSIFICATION	0.9999990183518419	WITHOUT_CLASSIFICATION	9.816481580413067E-7	IMPLEMENTATION
// carriage return	WITHOUT_CLASSIFICATION	0.9997675629036079	WITHOUT_CLASSIFICATION	2.3243709639214063E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9998920084015321	WITHOUT_CLASSIFICATION	1.0799159846783497E-4	IMPLEMENTATION
// String construction routines by NOT byte[] buffer and making the target String shared 	WITHOUT_CLASSIFICATION	0.9999957169091285	WITHOUT_CLASSIFICATION	4.283090871586776E-6	IMPLEMENTATION
// insert all nodes in sequence, hash them in the final instruction // KEY	WITHOUT_CLASSIFICATION	0.9999957260640928	WITHOUT_CLASSIFICATION	4.273935907240669E-6	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999987191535928	WITHOUT_CLASSIFICATION	1.2808464071636815E-6	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9816354038692313	WITHOUT_CLASSIFICATION	0.018364596130768684	IMPLEMENTATION
// Basic Block id // CFG that this basic block belongs to // All basic blocks have a starting label // List of non-label instructions	WITHOUT_CLASSIFICATION	0.9999875874592745	WITHOUT_CLASSIFICATION	1.2412540725523082E-5	IMPLEMENTATION
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9993097552131968	WITHOUT_CLASSIFICATION	6.902447868033211E-4	IMPLEMENTATION
// For all uninitialized specific arities, we defer to the "n" method which // should raise appropriate error in all cases.	WITHOUT_CLASSIFICATION	0.9984487441411645	WITHOUT_CLASSIFICATION	0.0015512558588355932	IMPLEMENTATION
// implement is called to force this class to create stubs for all // methods in the given interface, so they'll show up in the list // of methods and be invocable without passing through method_missing	WITHOUT_CLASSIFICATION	0.9999915120850538	WITHOUT_CLASSIFICATION	8.487914946267401E-6	IMPLEMENTATION
// CASE IR instructions are dummy instructions  // -- all when/then clauses have been converted into if-then-else blocks	WITHOUT_CLASSIFICATION	0.9999732528789641	WITHOUT_CLASSIFICATION	2.6747121035904918E-5	IMPLEMENTATION
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999665700827298	WITHOUT_CLASSIFICATION	3.342991727022137E-5	IMPLEMENTATION
// leave it null and fall back on our normal invocation logic	WITHOUT_CLASSIFICATION	0.999690604376486	WITHOUT_CLASSIFICATION	3.0939562351401837E-4	IMPLEMENTATION
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999970559584281	WITHOUT_CLASSIFICATION	2.9440415717605096E-6	IMPLEMENTATION
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9975465608561317	WITHOUT_CLASSIFICATION	0.0024534391438683764	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9997374998008824	WITHOUT_CLASSIFICATION	2.62500199117565E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9997374998008824	WITHOUT_CLASSIFICATION	2.62500199117565E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9997374998008824	WITHOUT_CLASSIFICATION	2.62500199117565E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9997374998008824	WITHOUT_CLASSIFICATION	2.62500199117565E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9997374998008824	WITHOUT_CLASSIFICATION	2.62500199117565E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9997374998008824	WITHOUT_CLASSIFICATION	2.62500199117565E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9997374998008824	WITHOUT_CLASSIFICATION	2.62500199117565E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9997374998008824	WITHOUT_CLASSIFICATION	2.62500199117565E-4	IMPLEMENTATION
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999594883251353	WITHOUT_CLASSIFICATION	4.0511674864737605E-5	IMPLEMENTATION
/* fall through */	WITHOUT_CLASSIFICATION	0.9999717234032314	WITHOUT_CLASSIFICATION	2.8276596768622025E-5	IMPLEMENTATION
// deal with case when "other" is not a string	WITHOUT_CLASSIFICATION	0.9999490600172928	WITHOUT_CLASSIFICATION	5.0939982707227104E-5	IMPLEMENTATION
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999985732513709	WITHOUT_CLASSIFICATION	1.4267486290988214E-6	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999489427705954	WITHOUT_CLASSIFICATION	5.1057229404627363E-5	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999489427705954	WITHOUT_CLASSIFICATION	5.1057229404627363E-5	IMPLEMENTATION
// store argument count information into scope	WITHOUT_CLASSIFICATION	0.9999967432199939	WITHOUT_CLASSIFICATION	3.2567800060774184E-6	IMPLEMENTATION
// the load method is used for loading as a top-level script, and prepares appropriate scoping around the code	WITHOUT_CLASSIFICATION	0.9999918126185584	WITHOUT_CLASSIFICATION	8.187381441591383E-6	IMPLEMENTATION
// First, build assignments for specific named arguments	WITHOUT_CLASSIFICATION	0.9999809795772522	WITHOUT_CLASSIFICATION	1.9020422747754874E-5	IMPLEMENTATION
//        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } //        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }	WITHOUT_CLASSIFICATION	0.9999721163501094	WITHOUT_CLASSIFICATION	2.7883649890571975E-5	IMPLEMENTATION
// get current context	WITHOUT_CLASSIFICATION	0.9999075643044351	WITHOUT_CLASSIFICATION	9.243569556502304E-5	IMPLEMENTATION
// octal constant	WITHOUT_CLASSIFICATION	0.9993115534946573	WITHOUT_CLASSIFICATION	6.884465053427298E-4	IMPLEMENTATION
// read	WITHOUT_CLASSIFICATION	0.9999971216637724	WITHOUT_CLASSIFICATION	2.878336227493864E-6	IMPLEMENTATION
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9997126036198878	WITHOUT_CLASSIFICATION	2.873963801121779E-4	IMPLEMENTATION
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9995200491054733	WITHOUT_CLASSIFICATION	4.7995089452666583E-4	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999860575873367	WITHOUT_CLASSIFICATION	1.3942412663322438E-5	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999860575873367	WITHOUT_CLASSIFICATION	1.3942412663322438E-5	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999860575873367	WITHOUT_CLASSIFICATION	1.3942412663322438E-5	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.999981107939951	WITHOUT_CLASSIFICATION	1.8892060049017467E-5	IMPLEMENTATION
// at end	WITHOUT_CLASSIFICATION	0.9999543875768246	WITHOUT_CLASSIFICATION	4.561242317529182E-5	IMPLEMENTATION
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999881677430746	WITHOUT_CLASSIFICATION	1.183225692537201E-5	IMPLEMENTATION
// save blocking state	WITHOUT_CLASSIFICATION	0.9999822264467744	WITHOUT_CLASSIFICATION	1.7773553225630102E-5	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999511740863831	WITHOUT_CLASSIFICATION	4.8825913616880704E-5	IMPLEMENTATION
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999785537215382	WITHOUT_CLASSIFICATION	2.1446278461750932E-5	IMPLEMENTATION
// fall back on empty env when security disallows environment var access (like in an applet)	WITHOUT_CLASSIFICATION	0.999995650227073	WITHOUT_CLASSIFICATION	4.349772927007989E-6	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999356752647472	WITHOUT_CLASSIFICATION	6.432473525275136E-5	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999356752647472	WITHOUT_CLASSIFICATION	6.432473525275136E-5	IMPLEMENTATION
// load null block	WITHOUT_CLASSIFICATION	0.9995066092823702	WITHOUT_CLASSIFICATION	4.933907176297995E-4	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999995097963755	WITHOUT_CLASSIFICATION	4.902036244370836E-7	IMPLEMENTATION
// nothing else to here - the module version will be // included in the class.	WITHOUT_CLASSIFICATION	0.9999993594556189	WITHOUT_CLASSIFICATION	6.405443809859413E-7	IMPLEMENTATION
// JRUBY-1000, fail early when attempting to subclass a final Java class; // solved here by adding an exception-throwing "inherited"	WITHOUT_CLASSIFICATION	0.9999916136179633	WITHOUT_CLASSIFICATION	8.386382036614508E-6	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9991009272826367	WITHOUT_CLASSIFICATION	8.990727173633325E-4	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9991009272826367	WITHOUT_CLASSIFICATION	8.990727173633325E-4	IMPLEMENTATION
// Translate ret = (a || b) to ret = (a ? true : b) as follows //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = true //    beq(v1, true, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999962502505638	WITHOUT_CLASSIFICATION	3.749749436205753E-6	IMPLEMENTATION
// Initial precision is that of double numbers 2^63/2 ~ 4E18 // 63-1 an even number of number bits // precision seems 16 to 18 digits	WITHOUT_CLASSIFICATION	0.99999963234462	WITHOUT_CLASSIFICATION	3.6765537993817006E-7	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9982459872382906	WITHOUT_CLASSIFICATION	0.0017540127617092804	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999670845889459	WITHOUT_CLASSIFICATION	3.291541105411755E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999670845889459	WITHOUT_CLASSIFICATION	3.291541105411755E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999670845889459	WITHOUT_CLASSIFICATION	3.291541105411755E-5	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.9996494074590501	WITHOUT_CLASSIFICATION	3.505925409499167E-4	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.9998754045715499	WITHOUT_CLASSIFICATION	1.2459542845015117E-4	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.9998754045715499	WITHOUT_CLASSIFICATION	1.2459542845015117E-4	IMPLEMENTATION
// check arity	WITHOUT_CLASSIFICATION	0.99932962924226	WITHOUT_CLASSIFICATION	6.703707577399837E-4	IMPLEMENTATION
// check arity	WITHOUT_CLASSIFICATION	0.99932962924226	WITHOUT_CLASSIFICATION	6.703707577399837E-4	IMPLEMENTATION
// create the class	WITHOUT_CLASSIFICATION	0.999739627701516	WITHOUT_CLASSIFICATION	2.603722984839611E-4	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999913284241774	WITHOUT_CLASSIFICATION	8.671575822689598E-6	IMPLEMENTATION
// No hex value after the 'x'.	WITHOUT_CLASSIFICATION	0.9999951844394335	WITHOUT_CLASSIFICATION	4.81556056657668E-6	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.9999909584718885	WITHOUT_CLASSIFICATION	9.041528111615727E-6	IMPLEMENTATION
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999881958820876	WITHOUT_CLASSIFICATION	1.1804117912266345E-5	IMPLEMENTATION
// Let m be the exact digits precision in an earlier! loop	WITHOUT_CLASSIFICATION	0.9999989519106229	WITHOUT_CLASSIFICATION	1.048089377031485E-6	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999978489973586	WITHOUT_CLASSIFICATION	2.1510026414964655E-6	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999882628735118	WITHOUT_CLASSIFICATION	1.1737126488232616E-5	IMPLEMENTATION
// Label for the start of the method // Label for the end of the method	WITHOUT_CLASSIFICATION	0.999861075994083	WITHOUT_CLASSIFICATION	1.389240059170165E-4	IMPLEMENTATION
// comparisons & checks // checks if the operand is non-null and non-false // EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...	WITHOUT_CLASSIFICATION	0.9999999871004778	WITHOUT_CLASSIFICATION	1.2899522160356828E-8	IMPLEMENTATION
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.8364574027243722	WITHOUT_CLASSIFICATION	0.1635425972756279	IMPLEMENTATION
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9997835362199552	WITHOUT_CLASSIFICATION	2.164637800447921E-4	IMPLEMENTATION
// all done with lookup attempts, release monitor	WITHOUT_CLASSIFICATION	0.9998673369371336	WITHOUT_CLASSIFICATION	1.3266306286634363E-4	IMPLEMENTATION
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999955904991771	WITHOUT_CLASSIFICATION	4.409500822868949E-6	IMPLEMENTATION
// Create list of interface names to proxy (and make sure they really are interfaces) // Also build a hashcode from all classes to use for retrieving previously-created impl	WITHOUT_CLASSIFICATION	0.9999998090857886	WITHOUT_CLASSIFICATION	1.9091421139321578E-7	IMPLEMENTATION
// Construct local variables based on parameter names passed in	WITHOUT_CLASSIFICATION	0.9999850032326713	WITHOUT_CLASSIFICATION	1.4996767328730055E-5	IMPLEMENTATION
// Value of "TZ" property is of a bit different format, // which confuses the Java's TimeZone.getTimeZone(id) method, // and so, we need to convert it.	WITHOUT_CLASSIFICATION	0.9989516607089456	WITHOUT_CLASSIFICATION	0.0010483392910544149	IMPLEMENTATION
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9994578605009727	WITHOUT_CLASSIFICATION	5.421394990272557E-4	IMPLEMENTATION
// ensure the object is associated with the wrapper we found it in, // so that if it comes back we don't re-wrap it	WITHOUT_CLASSIFICATION	0.9999917855650743	WITHOUT_CLASSIFICATION	8.214434925763914E-6	IMPLEMENTATION
// return sqrt(squarD) with precision of rootMC	WITHOUT_CLASSIFICATION	0.9999527890748554	WITHOUT_CLASSIFICATION	4.7210925144661566E-5	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9962102689813772	WITHOUT_CLASSIFICATION	0.0037897310186228352	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9999670845889459	WITHOUT_CLASSIFICATION	3.291541105411755E-5	IMPLEMENTATION
// Get a new label using the provided label prefix	WITHOUT_CLASSIFICATION	0.9999932525965017	WITHOUT_CLASSIFICATION	6.7474034982613916E-6	IMPLEMENTATION
// normal exit, perform finally and return	WITHOUT_CLASSIFICATION	0.9999208439484751	WITHOUT_CLASSIFICATION	7.915605152497144E-5	IMPLEMENTATION
// coerce arguments	WITHOUT_CLASSIFICATION	0.9996947163952835	WITHOUT_CLASSIFICATION	3.052836047165476E-4	IMPLEMENTATION
// 0.0 is ok // float range // inverted float range? // NaN // +infinity // -infinity	WITHOUT_CLASSIFICATION	0.9998359199046194	WITHOUT_CLASSIFICATION	1.6408009538063984E-4	IMPLEMENTATION
/* expected */	WITHOUT_CLASSIFICATION	0.9999528041284345	WITHOUT_CLASSIFICATION	4.719587156560869E-5	IMPLEMENTATION
// set this class's method names in var @__java_ovrd_methods if this // is the new class; otherwise, get method names from there if this is // a proxy superclass.	WITHOUT_CLASSIFICATION	0.9999997471906374	WITHOUT_CLASSIFICATION	2.5280936260400904E-7	IMPLEMENTATION
/* ignore backslashed spaces in %w */	WITHOUT_CLASSIFICATION	0.9999969879455796	WITHOUT_CLASSIFICATION	3.012054420367615E-6	IMPLEMENTATION
// Invert the sign, since TZ format and Java format // use opposite signs, sigh... Also, Java API requires // the sign to be always present, be it "+" or "-".	WITHOUT_CLASSIFICATION	0.9998303963002823	WITHOUT_CLASSIFICATION	1.696036997176916E-4	IMPLEMENTATION
// no binding given, use 0 for both	WITHOUT_CLASSIFICATION	0.9999283009030646	WITHOUT_CLASSIFICATION	7.169909693534719E-5	IMPLEMENTATION
// <=> may return nil in many circumstances, e.g. 3 <=> NaN        	WITHOUT_CLASSIFICATION	0.9999877278357201	WITHOUT_CLASSIFICATION	1.2272164279863708E-5	IMPLEMENTATION
// use numbered access method	WITHOUT_CLASSIFICATION	0.9995072143931488	WITHOUT_CLASSIFICATION	4.927856068511298E-4	IMPLEMENTATION
// Always use "GMT" since that's required by Java API.	WITHOUT_CLASSIFICATION	0.9998607846374605	WITHOUT_CLASSIFICATION	1.3921536253937907E-4	IMPLEMENTATION
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9997959648143666	WITHOUT_CLASSIFICATION	2.0403518563340094E-4	IMPLEMENTATION
// The dataStruct is a place where custom information can be // contained for core implementations that doesn't necessarily // want to go to the trouble of creating a subclass of // RubyObject. The OpenSSL implementation uses this heavily to // save holder objects containing Java cryptography objects. // Java integration uses this to store the Java object ref. //protected transient Object dataStruct;	WITHOUT_CLASSIFICATION	0.9999496803366255	WITHOUT_CLASSIFICATION	5.0319663374445386E-5	IMPLEMENTATION
// Remaining arguments are for the script itself	WITHOUT_CLASSIFICATION	0.9999930274319694	WITHOUT_CLASSIFICATION	6.9725680306498E-6	IMPLEMENTATION
// arg grouping, use slower arg walking logic	WITHOUT_CLASSIFICATION	0.9970914456453768	WITHOUT_CLASSIFICATION	0.0029085543546232676	IMPLEMENTATION
// build scope names string	WITHOUT_CLASSIFICATION	0.9999983358593184	WITHOUT_CLASSIFICATION	1.6641406815983214E-6	IMPLEMENTATION
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999994991111394	WITHOUT_CLASSIFICATION	5.008888606682036E-7	IMPLEMENTATION
// Here we create an "anonymous" exception type used for unrolling the stack. // MRI creates a new one for *every call* to timeout, which can be costly. // We opt to use a single exception type for all cases to avoid this overhead.	WITHOUT_CLASSIFICATION	0.9998315276659049	WITHOUT_CLASSIFICATION	1.6847233409522178E-4	IMPLEMENTATION
// finally	WITHOUT_CLASSIFICATION	0.9999919208629084	WITHOUT_CLASSIFICATION	8.079137091598793E-6	IMPLEMENTATION
// MRI behavior: With TZ equal to "GMT" or "UTC", Time.now // is *NOT* considered as a proper GMT/UTC time: //   ENV['TZ']="GMT" //   Time.now.gmt? ==> false //   ENV['TZ']="UTC" //   Time.now.utc? ==> false // Hence, we need to adjust for that.	WITHOUT_CLASSIFICATION	0.9999987955046196	WITHOUT_CLASSIFICATION	1.2044953804113775E-6	IMPLEMENTATION
// ?l  | boolean | True if file1 exists and is a symbolic link	WITHOUT_CLASSIFICATION	0.999999167991677	WITHOUT_CLASSIFICATION	8.320083230182986E-7	IMPLEMENTATION
// This try/catch is to allow failing over to the "commands" logic // when running from within a jruby-complete jar file, which has // jruby.home = a jar file URL that does not resolve correctly with // JRubyFile.create.	WITHOUT_CLASSIFICATION	0.9989664712007686	WITHOUT_CLASSIFICATION	0.001033528799231424	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9991882765758284	WITHOUT_CLASSIFICATION	8.117234241715181E-4	IMPLEMENTATION
// specific arity	WITHOUT_CLASSIFICATION	0.9994003756304928	WITHOUT_CLASSIFICATION	5.996243695072684E-4	IMPLEMENTATION
// In the case of two arguments, MRI will discard the portion of // the first argument after a decimal point (i.e., "floor"). // However in the case of a single argument, any portion after // the decimal point is honored.	WITHOUT_CLASSIFICATION	0.9999997999043969	WITHOUT_CLASSIFICATION	2.000956030758918E-7	IMPLEMENTATION
// ?w  | boolean | True if file1 exists and is writable by effective uid/gid	WITHOUT_CLASSIFICATION	0.9999994231929517	WITHOUT_CLASSIFICATION	5.768070484073139E-7	IMPLEMENTATION
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9998833414877275	WITHOUT_CLASSIFICATION	1.1665851227239598E-4	IMPLEMENTATION
/*    @JRubyMethod    public IRubyObject to_proc() {        return RubyProc.newProc(getRuntime(),                                CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()),                                Block.Type.PROC);    }    */	WITHOUT_CLASSIFICATION	0.9999944172674213	WITHOUT_CLASSIFICATION	5.582732578585175E-6	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999440480872498	WITHOUT_CLASSIFICATION	5.595191275022781E-5	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999440480872498	WITHOUT_CLASSIFICATION	5.595191275022781E-5	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999649152105138	WITHOUT_CLASSIFICATION	3.508478948620631E-5	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999649152105138	WITHOUT_CLASSIFICATION	3.508478948620631E-5	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.99866317810917	WITHOUT_CLASSIFICATION	0.001336821890829982	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.99866317810917	WITHOUT_CLASSIFICATION	0.001336821890829982	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999973694441505	WITHOUT_CLASSIFICATION	2.6305558494269945E-6	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999973694441505	WITHOUT_CLASSIFICATION	2.6305558494269945E-6	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.999598425807291	WITHOUT_CLASSIFICATION	4.015741927090063E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.999598425807291	WITHOUT_CLASSIFICATION	4.015741927090063E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.999598425807291	WITHOUT_CLASSIFICATION	4.015741927090063E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.999598425807291	WITHOUT_CLASSIFICATION	4.015741927090063E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.999598425807291	WITHOUT_CLASSIFICATION	4.015741927090063E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.999598425807291	WITHOUT_CLASSIFICATION	4.015741927090063E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.999598425807291	WITHOUT_CLASSIFICATION	4.015741927090063E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.999598425807291	WITHOUT_CLASSIFICATION	4.015741927090063E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.999598425807291	WITHOUT_CLASSIFICATION	4.015741927090063E-4	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999011959173094	WITHOUT_CLASSIFICATION	9.88040826905544E-5	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999011959173094	WITHOUT_CLASSIFICATION	9.88040826905544E-5	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999011959173094	WITHOUT_CLASSIFICATION	9.88040826905544E-5	IMPLEMENTATION
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999054766997173	WITHOUT_CLASSIFICATION	9.452330028279717E-5	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999975795651652	WITHOUT_CLASSIFICATION	2.4204348348181776E-6	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999975795651652	WITHOUT_CLASSIFICATION	2.4204348348181776E-6	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999975795651652	WITHOUT_CLASSIFICATION	2.4204348348181776E-6	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999164983021449	WITHOUT_CLASSIFICATION	8.35016978550977E-5	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999164983021449	WITHOUT_CLASSIFICATION	8.35016978550977E-5	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999164983021449	WITHOUT_CLASSIFICATION	8.35016978550977E-5	IMPLEMENTATION
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9998833414877275	WITHOUT_CLASSIFICATION	1.1665851227239598E-4	IMPLEMENTATION
// backspace	WITHOUT_CLASSIFICATION	0.9995987072983362	WITHOUT_CLASSIFICATION	4.0129270166380554E-4	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
/* package-private */	WITHOUT_CLASSIFICATION	0.9999882077460024	WITHOUT_CLASSIFICATION	1.1792253997652907E-5	IMPLEMENTATION
// fall through	WITHOUT_CLASSIFICATION	0.9998455154062122	WITHOUT_CLASSIFICATION	1.5448459378781683E-4	IMPLEMENTATION
// fall through	WITHOUT_CLASSIFICATION	0.9998455154062122	WITHOUT_CLASSIFICATION	1.5448459378781683E-4	IMPLEMENTATION
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9998735201313652	WITHOUT_CLASSIFICATION	1.2647986863477832E-4	IMPLEMENTATION
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999539539741139	WITHOUT_CLASSIFICATION	4.6046025886187304E-5	IMPLEMENTATION
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999539539741139	WITHOUT_CLASSIFICATION	4.6046025886187304E-5	IMPLEMENTATION
/**      * Nested class whose instances act as thunks reacting to to_str method     * called from (Exception#to_str, Exception#message)     * MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!",     * to_str implementation: "name_err_mesg_to_str"     *     * TODO: this class should not be lookupable     */	WITHOUT_CLASSIFICATION	0.9573430549808394	IMPLEMENTATION	0.04265694501916075	WITHOUT_CLASSIFICATION
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9997921374823564	WITHOUT_CLASSIFICATION	2.0786251764366424E-4	IMPLEMENTATION
// The name of this source (e.g. a filename: foo.rb)	WITHOUT_CLASSIFICATION	0.9999746363097186	WITHOUT_CLASSIFICATION	2.5363690281325485E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999700384220515	WITHOUT_CLASSIFICATION	2.9961577948650577E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999700384220515	WITHOUT_CLASSIFICATION	2.9961577948650577E-5	IMPLEMENTATION
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9999998020936012	WITHOUT_CLASSIFICATION	1.979063987889833E-7	IMPLEMENTATION
// We yield here to hopefully permit the target thread to schedule // MRI immediately schedules it, so this is close but not exact	WITHOUT_CLASSIFICATION	0.9999825783835745	WITHOUT_CLASSIFICATION	1.74216164255318E-5	IMPLEMENTATION
// note that addMethod now does its own put, so any change made to // functionality here should be made there as well 	WITHOUT_CLASSIFICATION	0.9999999548610189	WITHOUT_CLASSIFICATION	4.513898105523064E-8	IMPLEMENTATION
/* Currently dead code, but useful when we figure out how to actually perform translit.    private static boolean isTranslit(String encoding) {        return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false;    }*/	WITHOUT_CLASSIFICATION	0.9940696566604851	WITHOUT_CLASSIFICATION	0.005930343339514954	IMPLEMENTATION
// empirically it appears that to_ary coersions always return array or nil, so this // should always be an array by now.	WITHOUT_CLASSIFICATION	0.9999756318185531	WITHOUT_CLASSIFICATION	2.4368181446855334E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999700384220515	WITHOUT_CLASSIFICATION	2.9961577948650577E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999700384220515	WITHOUT_CLASSIFICATION	2.9961577948650577E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999700384220515	WITHOUT_CLASSIFICATION	2.9961577948650577E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999700384220515	WITHOUT_CLASSIFICATION	2.9961577948650577E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999700384220515	WITHOUT_CLASSIFICATION	2.9961577948650577E-5	IMPLEMENTATION
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999925252563389	WITHOUT_CLASSIFICATION	7.474743661210007E-6	IMPLEMENTATION
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9998140283984854	WITHOUT_CLASSIFICATION	1.859716015145226E-4	IMPLEMENTATION
// if it's an inner class and it's not public, we can't access it; // skip population of declared elements	WITHOUT_CLASSIFICATION	0.9999728482771066	WITHOUT_CLASSIFICATION	2.7151722893413978E-5	IMPLEMENTATION
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999483766419257	WITHOUT_CLASSIFICATION	5.1623358074268285E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9815790665760283	WITHOUT_CLASSIFICATION	0.018420933423971674	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9815790665760283	WITHOUT_CLASSIFICATION	0.018420933423971674	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9815790665760283	WITHOUT_CLASSIFICATION	0.018420933423971674	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9815790665760283	WITHOUT_CLASSIFICATION	0.018420933423971674	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9815790665760283	WITHOUT_CLASSIFICATION	0.018420933423971674	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9815790665760283	WITHOUT_CLASSIFICATION	0.018420933423971674	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9815790665760283	WITHOUT_CLASSIFICATION	0.018420933423971674	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9815790665760283	WITHOUT_CLASSIFICATION	0.018420933423971674	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9815790665760283	WITHOUT_CLASSIFICATION	0.018420933423971674	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9815790665760283	WITHOUT_CLASSIFICATION	0.018420933423971674	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9815790665760283	WITHOUT_CLASSIFICATION	0.018420933423971674	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9815790665760283	WITHOUT_CLASSIFICATION	0.018420933423971674	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9815790665760283	WITHOUT_CLASSIFICATION	0.018420933423971674	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9815790665760283	WITHOUT_CLASSIFICATION	0.018420933423971674	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9815790665760283	WITHOUT_CLASSIFICATION	0.018420933423971674	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9815790665760283	WITHOUT_CLASSIFICATION	0.018420933423971674	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9815790665760283	WITHOUT_CLASSIFICATION	0.018420933423971674	IMPLEMENTATION
// MRI behavior on Windows: it treats '/' as a root of // a current drive (but only if SINGLE slash is present!): // E.g., if current work directory is // 'D:/home/directory', then '/' means 'D:/'. // // Basically, '/path' is treated as a *RELATIVE* path, // relative to the current drive. '//path' is treated // as absolute one.	WITHOUT_CLASSIFICATION	0.9999999804252075	WITHOUT_CLASSIFICATION	1.9574792507250794E-8	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9815790665760283	WITHOUT_CLASSIFICATION	0.018420933423971674	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9815790665760283	WITHOUT_CLASSIFICATION	0.018420933423971674	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9815790665760283	WITHOUT_CLASSIFICATION	0.018420933423971674	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9815790665760283	WITHOUT_CLASSIFICATION	0.018420933423971674	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9815790665760283	WITHOUT_CLASSIFICATION	0.018420933423971674	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9815790665760283	WITHOUT_CLASSIFICATION	0.018420933423971674	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9815790665760283	WITHOUT_CLASSIFICATION	0.018420933423971674	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9815790665760283	WITHOUT_CLASSIFICATION	0.018420933423971674	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9815790665760283	WITHOUT_CLASSIFICATION	0.018420933423971674	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9815790665760283	WITHOUT_CLASSIFICATION	0.018420933423971674	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9815790665760283	WITHOUT_CLASSIFICATION	0.018420933423971674	IMPLEMENTATION
// This is needed when the enclosing class or module is a singleton. // In that case, we generated a name such as null::Foo, which broke  // Marshalling, among others. The correct thing to do in this situation  // is to insert the generate the name of form #<Class:01xasdfasd> if  // it's a singleton module/class, which this code accomplishes.	WITHOUT_CLASSIFICATION	0.99960053198618	WITHOUT_CLASSIFICATION	3.994680138199298E-4	IMPLEMENTATION
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9999614946760634	WITHOUT_CLASSIFICATION	3.8505323936631356E-5	IMPLEMENTATION
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999782458070691	WITHOUT_CLASSIFICATION	2.1754192930948888E-5	IMPLEMENTATION
// get "self"	WITHOUT_CLASSIFICATION	0.9997464769832551	WITHOUT_CLASSIFICATION	2.535230167448591E-4	IMPLEMENTATION
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999891110047708	WITHOUT_CLASSIFICATION	1.088899522904353E-5	IMPLEMENTATION
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9997261399480177	WITHOUT_CLASSIFICATION	2.7386005198226686E-4	IMPLEMENTATION
// only public methods	WITHOUT_CLASSIFICATION	0.9999922681093464	WITHOUT_CLASSIFICATION	7.731890653578444E-6	IMPLEMENTATION
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999767742661054	WITHOUT_CLASSIFICATION	2.3225733894636897E-5	IMPLEMENTATION
// First try to use drive letter from supplied dir value, // then try current work dir.	WITHOUT_CLASSIFICATION	0.999921102839884	WITHOUT_CLASSIFICATION	7.889716011597284E-5	IMPLEMENTATION
// JRUBY-2435: Aliasing eval and other "special" methods should display a warning // We warn because we treat certain method names as "special" for purposes of // optimization. Hopefully this will be enough to convince people not to alias // them.	WITHOUT_CLASSIFICATION	0.9998741460986237	WITHOUT_CLASSIFICATION	1.2585390137641813E-4	IMPLEMENTATION
// generate a real method signature for the method, with to/from coercions	WITHOUT_CLASSIFICATION	0.9999283839714509	WITHOUT_CLASSIFICATION	7.161602854911502E-5	IMPLEMENTATION
// block argument to the method // closure present // class present // method table mutations, def, defs, undef, alias // likely call to eval // makes calls that are aware of the frame // makes calls that are aware of the frame's self // makes calls that are aware of the frame's visibility // makes calls that are aware of the frame's block // makes calls that are aware of the frame's name // makes calls that set or get backref // makes calls that set or get lastline // makes calls that are aware of the frame's class // optional arguments to the method // rest arg to the method // makes calls that are aware of the scope // makes a zero-argument super call // accesses or sets constants // accesses or sets class variables // makes normal super call // contains a retry	WITHOUT_CLASSIFICATION	0.9998486531873116	WITHOUT_CLASSIFICATION	1.5134681268848222E-4	IMPLEMENTATION
// // Add aliases in Type::*, NativeType::* and FFI::TYPE_* //	WITHOUT_CLASSIFICATION	0.999984496831187	WITHOUT_CLASSIFICATION	1.5503168813069155E-5	IMPLEMENTATION
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999969020929231	WITHOUT_CLASSIFICATION	3.09790707676729E-6	IMPLEMENTATION
// double-testing args.length here, but it avoids duplicating the proc-setup code in two places	WITHOUT_CLASSIFICATION	0.9999972233204973	WITHOUT_CLASSIFICATION	2.776679502706607E-6	IMPLEMENTATION
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999993233778256	WITHOUT_CLASSIFICATION	6.766221742984857E-7	IMPLEMENTATION
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999963140460932	WITHOUT_CLASSIFICATION	3.6859539066819117E-6	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999330876552261	WITHOUT_CLASSIFICATION	6.691234477391099E-5	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999330876552261	WITHOUT_CLASSIFICATION	6.691234477391099E-5	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999330876552261	WITHOUT_CLASSIFICATION	6.691234477391099E-5	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999330876552261	WITHOUT_CLASSIFICATION	6.691234477391099E-5	IMPLEMENTATION
// snapshot of contents of directory // current position in directory	WITHOUT_CLASSIFICATION	0.9999998463207428	WITHOUT_CLASSIFICATION	1.5367925724532675E-7	IMPLEMENTATION
// Exclusive locks in Java require the channel to be writable, otherwise // an exception is thrown (terminating JRuby execution). // But flock behavior of MRI is that it allows // exclusive locks even on non-writable file. So we convert exclusive // lock to shared lock if the channel is not writable, to better match // the MRI behavior.	WITHOUT_CLASSIFICATION	0.9887141290226724	WITHOUT_CLASSIFICATION	0.011285870977327653	IMPLEMENTATION
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9998400643490793	WITHOUT_CLASSIFICATION	1.5993565092068876E-4	IMPLEMENTATION
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9998400643490793	WITHOUT_CLASSIFICATION	1.5993565092068876E-4	IMPLEMENTATION
// set self to the class	WITHOUT_CLASSIFICATION	0.9999747141532174	WITHOUT_CLASSIFICATION	2.528584678266179E-5	IMPLEMENTATION
/* ---------- Public fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999818776036241	WITHOUT_CLASSIFICATION	1.812239637583492E-5	IMPLEMENTATION
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999974460113428	WITHOUT_CLASSIFICATION	2.553988657220513E-6	IMPLEMENTATION
// zero args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999928718807188	WITHOUT_CLASSIFICATION	7.128119281116808E-6	IMPLEMENTATION
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999939682476388	WITHOUT_CLASSIFICATION	6.031752361261393E-6	IMPLEMENTATION
// Store each line into this list if not null.	WITHOUT_CLASSIFICATION	0.9991624448076806	WITHOUT_CLASSIFICATION	8.375551923193862E-4	IMPLEMENTATION
// Portion of line right after beginning marker	WITHOUT_CLASSIFICATION	0.9999345960469699	WITHOUT_CLASSIFICATION	6.540395303009004E-5	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999466278365755	WITHOUT_CLASSIFICATION	5.337216342451869E-5	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999466278365755	WITHOUT_CLASSIFICATION	5.337216342451869E-5	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999466278365755	WITHOUT_CLASSIFICATION	5.337216342451869E-5	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999466278365755	WITHOUT_CLASSIFICATION	5.337216342451869E-5	IMPLEMENTATION
// If an IO exception occurs (something odd, but possible) // A directory may return null.	WITHOUT_CLASSIFICATION	0.9999994621526327	WITHOUT_CLASSIFICATION	5.378473672583754E-7	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.999999859170865	WITHOUT_CLASSIFICATION	1.408291349818069E-7	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.999999859170865	WITHOUT_CLASSIFICATION	1.408291349818069E-7	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.999999859170865	WITHOUT_CLASSIFICATION	1.408291349818069E-7	IMPLEMENTATION
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9992883716393111	WITHOUT_CLASSIFICATION	7.116283606888338E-4	IMPLEMENTATION
// finally with no exception	WITHOUT_CLASSIFICATION	0.9999318238404891	WITHOUT_CLASSIFICATION	6.817615951093573E-5	IMPLEMENTATION
// Now, for all variables used by 'i' mark them live before 'i'	WITHOUT_CLASSIFICATION	0.9999964602838837	WITHOUT_CLASSIFICATION	3.5397161162563246E-6	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.8869162033585843	IMPLEMENTATION	0.11308379664141574	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.8869162033585843	IMPLEMENTATION	0.11308379664141574	WITHOUT_CLASSIFICATION
/* The counting of slashes that follows is simply a way to adhere to          * Ruby's UNC (or something) compatibility. When Ruby's expand_path is          * called with "//foo//bar" it will return "//foo/bar". JRuby uses          * java.io.File, and hence returns "/foo/bar". In order to retain          * java.io.File in the lower layers and provide full Ruby          * compatibility, the number of extra slashes must be counted and          * prepended to the result.         */	WITHOUT_CLASSIFICATION	0.9999994764447242	WITHOUT_CLASSIFICATION	5.235552758297788E-7	IMPLEMENTATION
// This is almost always already interned, since it will be called with a symbol in most cases // but when created from Java code, we might get an argument that needs to be interned. // addAccessor has as a precondition that the string MUST be interned	WITHOUT_CLASSIFICATION	0.9999999999931869	WITHOUT_CLASSIFICATION	6.8130537391055E-12	IMPLEMENTATION
/* not a class */	WITHOUT_CLASSIFICATION	0.9991455334573243	WITHOUT_CLASSIFICATION	8.544665426756519E-4	IMPLEMENTATION
/* not a class */	WITHOUT_CLASSIFICATION	0.9991455334573243	WITHOUT_CLASSIFICATION	8.544665426756519E-4	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9997898756400532	WITHOUT_CLASSIFICATION	2.1012435994675188E-4	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9997898756400532	WITHOUT_CLASSIFICATION	2.1012435994675188E-4	IMPLEMENTATION
// io.available() only returns 0 after EOF is encountered // so we need to differentiate between the empty string and EOF	WITHOUT_CLASSIFICATION	0.9999999749172989	WITHOUT_CLASSIFICATION	2.508270110856721E-8	IMPLEMENTATION
// In the current logic, if we get here we know that module is not an // IncludedModuleWrapper, so there's no need to fish out the delegate. But just // in case the logic should change later, let's do it anyway	WITHOUT_CLASSIFICATION	0.9995792323013896	WITHOUT_CLASSIFICATION	4.207676986104631E-4	IMPLEMENTATION
// rb_iterate((VALUE(*)_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);	WITHOUT_CLASSIFICATION	0.999882847834233	WITHOUT_CLASSIFICATION	1.171521657668933E-4	IMPLEMENTATION
// Broken symlinks considered by exists() as non-existing, // so we need to check for symlinks explicitly.	WITHOUT_CLASSIFICATION	0.9999873346869749	WITHOUT_CLASSIFICATION	1.2665313025161593E-5	IMPLEMENTATION
// ////////////////// CONSTANT API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999103328686273	WITHOUT_CLASSIFICATION	8.966713137260391E-5	IMPLEMENTATION
// create the default thread group	WITHOUT_CLASSIFICATION	0.9999323150864445	WITHOUT_CLASSIFICATION	6.768491355545429E-5	IMPLEMENTATION
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9998841567608697	WITHOUT_CLASSIFICATION	1.1584323913031345E-4	IMPLEMENTATION
/* ============================     * Here are hash internals     * (This could be extracted to a separate class but it's not too large though)     * ============================     */	WITHOUT_CLASSIFICATION	0.9999986176949289	WITHOUT_CLASSIFICATION	1.3823050711176696E-6	IMPLEMENTATION
// ////////////////// LOW-LEVEL CLASS VARIABLE INTERFACE //////////////// // // fetch/store/list class variables for this module //	WITHOUT_CLASSIFICATION	0.9999518380163963	WITHOUT_CLASSIFICATION	4.816198360381416E-5	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999840357919859	WITHOUT_CLASSIFICATION	1.596420801405876E-5	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999840357919859	WITHOUT_CLASSIFICATION	1.596420801405876E-5	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999963376477788	WITHOUT_CLASSIFICATION	3.662352221266567E-6	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999963376477788	WITHOUT_CLASSIFICATION	3.662352221266567E-6	IMPLEMENTATION
// retuns null when not found to avoid unnecessary getRuntime().getNil() call	WITHOUT_CLASSIFICATION	0.9941263012528425	WITHOUT_CLASSIFICATION	0.005873698747157552	IMPLEMENTATION
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999876312579825	WITHOUT_CLASSIFICATION	1.2368742017536954E-5	IMPLEMENTATION
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999264817012458	WITHOUT_CLASSIFICATION	7.351829875423047E-5	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9996001322895308	WITHOUT_CLASSIFICATION	3.998677104692156E-4	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9996001322895308	WITHOUT_CLASSIFICATION	3.998677104692156E-4	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9996001322895308	WITHOUT_CLASSIFICATION	3.998677104692156E-4	IMPLEMENTATION
// line 286	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 476	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 513	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 530	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 533	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 537	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 551	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// end loop	WITHOUT_CLASSIFICATION	0.999237603643491	WITHOUT_CLASSIFICATION	7.623963565091015E-4	IMPLEMENTATION
// MRI behavior: we don't print errno for actual Errno errors	WITHOUT_CLASSIFICATION	0.9999123171408558	WITHOUT_CLASSIFICATION	8.768285914411527E-5	IMPLEMENTATION
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9988059864820223	WITHOUT_CLASSIFICATION	0.0011940135179776027	IMPLEMENTATION
// Traverse the instructions in this basic block in reverse order! // Mark as dead all instructions whose results are not used! 	WITHOUT_CLASSIFICATION	0.9998000568393615	WITHOUT_CLASSIFICATION	1.999431606385768E-4	IMPLEMENTATION
// // fields should really be an immutable map as it is never modified after construction //	WITHOUT_CLASSIFICATION	0.9999758471973708	WITHOUT_CLASSIFICATION	2.4152802629318025E-5	IMPLEMENTATION
// load self object as IRubyObject, for recv param	WITHOUT_CLASSIFICATION	0.9999965769928515	WITHOUT_CLASSIFICATION	3.4230071484137178E-6	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.8869162033585843	IMPLEMENTATION	0.11308379664141574	WITHOUT_CLASSIFICATION
// If we define a class in Ruby, but later want to allow it to be defined in Java, // the allocator needs to be updated	WITHOUT_CLASSIFICATION	0.999929859937997	WITHOUT_CLASSIFICATION	7.014006200293333E-5	IMPLEMENTATION
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9998260508239969	WITHOUT_CLASSIFICATION	1.7394917600314596E-4	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9994473568077583	WITHOUT_CLASSIFICATION	5.526431922416187E-4	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999670845889459	WITHOUT_CLASSIFICATION	3.291541105411755E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999670845889459	WITHOUT_CLASSIFICATION	3.291541105411755E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999670845889459	WITHOUT_CLASSIFICATION	3.291541105411755E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999670845889459	WITHOUT_CLASSIFICATION	3.291541105411755E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999670845889459	WITHOUT_CLASSIFICATION	3.291541105411755E-5	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9985395949145262	WITHOUT_CLASSIFICATION	0.0014604050854738102	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999670845889459	WITHOUT_CLASSIFICATION	3.291541105411755E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999670845889459	WITHOUT_CLASSIFICATION	3.291541105411755E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999670845889459	WITHOUT_CLASSIFICATION	3.291541105411755E-5	IMPLEMENTATION
// MRI has extra pointer which makes our code look a little bit // more strange in // comparison	WITHOUT_CLASSIFICATION	0.9999830645817318	WITHOUT_CLASSIFICATION	1.6935418268187138E-5	IMPLEMENTATION
// Tempory buffer to build up a potential token.  Consumer takes responsibility to reset  // this before use.	WITHOUT_CLASSIFICATION	0.9999573275374036	WITHOUT_CLASSIFICATION	4.267246259644895E-5	IMPLEMENTATION
//tmpPosition is required because getPosition()'s side effects. //if the warning is generated, the getPosition() on line 954 (this line + 18) will create //a wrong position if the "inclusive" flag is not set.	WITHOUT_CLASSIFICATION	0.9987629078636302	WITHOUT_CLASSIFICATION	0.0012370921363697234	IMPLEMENTATION
/* What is \v in C?                    case '\v':                        c2 = 'v';                        break;                        */	WITHOUT_CLASSIFICATION	0.9999907236132622	WITHOUT_CLASSIFICATION	9.276386737780603E-6	IMPLEMENTATION
/* Consider Thread aspects of this */	WITHOUT_CLASSIFICATION	0.9999775060715516	WITHOUT_CLASSIFICATION	2.2493928448483964E-5	IMPLEMENTATION
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999998139854674	WITHOUT_CLASSIFICATION	1.8601453264240118E-7	IMPLEMENTATION
// An interrupt or timeout may have caused us to miss // a notify that we consumed, so do another notify in // case someone else is available to pick it up.	WITHOUT_CLASSIFICATION	0.9999462323392176	WITHOUT_CLASSIFICATION	5.376766078232573E-5	IMPLEMENTATION
// line 572	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 601	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 601	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 625	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 649	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 691	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 723	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 732	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 745	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 766	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 785	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 794	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 800	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 812	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 827	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 839	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 845	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 864	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 886	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 896	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 911	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 929	WITHOUT_CLASSIFICATION	0.999440133346759	WITHOUT_CLASSIFICATION	5.598666532410602E-4	IMPLEMENTATION
// line 952	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 970	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 972	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 991	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1011	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1026	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1038	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1067	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1085	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1097	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1105	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1122	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1133	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1145	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1169	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1201	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1210	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1229	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1261	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1287	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1293	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1307	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1320	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1325	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1363	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1398	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1448	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1456	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1473	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1492	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1513	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1523	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1562	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1582	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1603	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1603	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1615	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1620	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1635	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1652	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1681	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1708	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1716	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1755	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1772	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1789	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.999598425807291	WITHOUT_CLASSIFICATION	4.015741927090063E-4	IMPLEMENTATION
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.999598425807291	WITHOUT_CLASSIFICATION	4.015741927090063E-4	IMPLEMENTATION
/* force for args */	WITHOUT_CLASSIFICATION	0.9999133156565629	WITHOUT_CLASSIFICATION	8.668434343697363E-5	IMPLEMENTATION
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9997568721832523	WITHOUT_CLASSIFICATION	2.4312781674773405E-4	IMPLEMENTATION
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9917302840137717	WITHOUT_CLASSIFICATION	0.008269715986228325	IMPLEMENTATION
// We can assign if we already have variable of that name here or we are the only // scope in the chain (which Local scopes always are).	WITHOUT_CLASSIFICATION	0.9999940905851459	WITHOUT_CLASSIFICATION	5.909414854157178E-6	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.999920813673311	WITHOUT_CLASSIFICATION	7.918632668894549E-5	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.999920813673311	WITHOUT_CLASSIFICATION	7.918632668894549E-5	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.999920813673311	WITHOUT_CLASSIFICATION	7.918632668894549E-5	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.999920813673311	WITHOUT_CLASSIFICATION	7.918632668894549E-5	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9485204983571361	WITHOUT_CLASSIFICATION	0.051479501642863766	IMPLEMENTATION
/*     * This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:)     * into individual whenNodes.  The primary reason for this is to ensure lazy evaluation of     * the arguments (when foo,bar,gar:) to prevent side-effects.  In the old code this was done     * using nested when statements, which was awful for interpreter and compilation.     *     * Notes: This has semantic equivalence but will not be lexically equivalent.  Compiler     * needs to detect same bodies to simplify bytecode generated.     */	WITHOUT_CLASSIFICATION	0.999999909804657	WITHOUT_CLASSIFICATION	9.019534299300435E-8	IMPLEMENTATION
// line 313	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 339	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 361	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 413	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 451	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 472	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 500	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 515	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 555	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 582	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 619	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 636	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 669	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 703	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 776	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 814	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 823	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 854	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 872	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 905	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 925	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 958	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 992	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1047	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1072	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1081	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1108	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1136	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1168	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1192	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1241	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1267	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1286	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1301	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1314	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1333	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1362	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1395	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1420	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1439	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1476	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1535	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1588	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1618	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1643	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1669	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1728	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1753	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1779	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1794	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1812	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1837	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1895	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1925	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1950	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 1992	WITHOUT_CLASSIFICATION	0.9994243480165186	WITHOUT_CLASSIFICATION	5.756519834813203E-4	IMPLEMENTATION
// line 2014	WITHOUT_CLASSIFICATION	0.9994246920146693	WITHOUT_CLASSIFICATION	5.753079853306264E-4	IMPLEMENTATION
// Whether this scope is used as the "argument scope" for e.g. zsuper	WITHOUT_CLASSIFICATION	0.9999898774370313	WITHOUT_CLASSIFICATION	1.012256296877003E-5	IMPLEMENTATION
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9985138478939067	WITHOUT_CLASSIFICATION	0.0014861521060932318	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999961350856661	WITHOUT_CLASSIFICATION	3.8649143338778915E-6	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999961350856661	WITHOUT_CLASSIFICATION	3.8649143338778915E-6	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999961350856661	WITHOUT_CLASSIFICATION	3.8649143338778915E-6	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999961350856661	WITHOUT_CLASSIFICATION	3.8649143338778915E-6	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999961350856661	WITHOUT_CLASSIFICATION	3.8649143338778915E-6	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999961350856661	WITHOUT_CLASSIFICATION	3.8649143338778915E-6	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999961350856661	WITHOUT_CLASSIFICATION	3.8649143338778915E-6	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9997287551025413	WITHOUT_CLASSIFICATION	2.712448974585923E-4	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9997287551025413	WITHOUT_CLASSIFICATION	2.712448974585923E-4	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9997287551025413	WITHOUT_CLASSIFICATION	2.712448974585923E-4	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9997287551025413	WITHOUT_CLASSIFICATION	2.712448974585923E-4	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9914859946473586	WITHOUT_CLASSIFICATION	0.00851400535264133	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9914859946473586	WITHOUT_CLASSIFICATION	0.00851400535264133	IMPLEMENTATION
// We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the // 'b' will get put into this new dynamic scope.  The original scope does not see the new // 'b' and successive evals with this binding will.  I take it having the ability to have  // succesive binding evals be able to share same scope makes sense from a programmers  // perspective.   One crappy outcome of this design is it requires Dynamic and Static  // scopes to be mutable for this one case.	WITHOUT_CLASSIFICATION	0.9999998892063456	WITHOUT_CLASSIFICATION	1.1079365430888354E-7	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999988404316386	WITHOUT_CLASSIFICATION	1.159568361414823E-6	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999988404316386	WITHOUT_CLASSIFICATION	1.159568361414823E-6	IMPLEMENTATION
// tc // under method // self // under method // name // args	WITHOUT_CLASSIFICATION	0.9993060128613199	WITHOUT_CLASSIFICATION	6.939871386799806E-4	IMPLEMENTATION
// allow it to bubble up	WITHOUT_CLASSIFICATION	0.999802588062641	WITHOUT_CLASSIFICATION	1.9741193735910858E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998944906559512	WITHOUT_CLASSIFICATION	1.0550934404875843E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998944906559512	WITHOUT_CLASSIFICATION	1.0550934404875843E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998944906559512	WITHOUT_CLASSIFICATION	1.0550934404875843E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998944906559512	WITHOUT_CLASSIFICATION	1.0550934404875843E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998944906559512	WITHOUT_CLASSIFICATION	1.0550934404875843E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998944906559512	WITHOUT_CLASSIFICATION	1.0550934404875843E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998944906559512	WITHOUT_CLASSIFICATION	1.0550934404875843E-4	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998944906559512	WITHOUT_CLASSIFICATION	1.0550934404875843E-4	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998944906559512	WITHOUT_CLASSIFICATION	1.0550934404875843E-4	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9997102542356697	WITHOUT_CLASSIFICATION	2.897457643303016E-4	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9997102542356697	WITHOUT_CLASSIFICATION	2.897457643303016E-4	IMPLEMENTATION
// Check for a builtin first.	WITHOUT_CLASSIFICATION	0.9999929977057481	WITHOUT_CLASSIFICATION	7.0022942519575244E-6	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9997677748360579	WITHOUT_CLASSIFICATION	2.3222516394213517E-4	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9997677748360579	WITHOUT_CLASSIFICATION	2.3222516394213517E-4	IMPLEMENTATION
// Unfortunately, the number of digits in the exponent is // not clearly defined in Ruby documentation. This is a // platform/version-dependent behavior. On Linux/Mac/Cygwin/*nix, // two digits are used. On Windows, 3 digits are used. // It is desirable for JRuby to have consistent behavior, and // the two digits behavior was selected. This is also in sync // with "Java-native" sprintf behavior (java.util.Formatter). // E or e	WITHOUT_CLASSIFICATION	0.9999948119915483	WITHOUT_CLASSIFICATION	5.188008451694983E-6	IMPLEMENTATION
/** * Represents the the dynamic portion of scoping information.  The variableValues are the * values of assigned local or block variables.  The staticScope identifies which sort of * scope this is (block or local). *  * Properties of Dynamic Scopes: * 1. static and dynamic scopes have the same number of names to values * 2. size of variables (and thus names) is determined during parsing.  So those structured do *    not need to change * * FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents.  This * is harmless (other than wasting memory), but we should not do that.  We can fix this in two * ways: * 1. Fix all callers * 2. Check parent that is passed in and make if new instance is local, then its parent is not local */	WITHOUT_CLASSIFICATION	0.8489012765759358	IMPLEMENTATION	0.15109872342406422	WITHOUT_CLASSIFICATION
// This method handles '**/' patterns and delegates to // fnmatch_helper for the main work.	WITHOUT_CLASSIFICATION	0.9996966993623445	WITHOUT_CLASSIFICATION	3.0330063765554366E-4	IMPLEMENTATION
// Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern  // Example: foo{a{c},b}bar -> fooa{c}bar, foobbar	WITHOUT_CLASSIFICATION	0.9999982257719648	WITHOUT_CLASSIFICATION	1.7742280351875103E-6	IMPLEMENTATION
// double precision, native // double precision, native	WITHOUT_CLASSIFICATION	0.9999759287723473	WITHOUT_CLASSIFICATION	2.4071227652780088E-5	IMPLEMENTATION
// 64-bit number, native (as bignum)	WITHOUT_CLASSIFICATION	0.9997882442862296	WITHOUT_CLASSIFICATION	2.1175571377036995E-4	IMPLEMENTATION
// Next indicates to decode using native encoding format	WITHOUT_CLASSIFICATION	0.999962572837586	WITHOUT_CLASSIFICATION	3.742716241398545E-5	IMPLEMENTATION
// calculate based on a, b, c and d	WITHOUT_CLASSIFICATION	0.9999521801164778	WITHOUT_CLASSIFICATION	4.781988352224399E-5	IMPLEMENTATION
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999692456774885	WITHOUT_CLASSIFICATION	3.075432251158696E-5	IMPLEMENTATION
// MRI behavior:  for 'Q', do not add trailing nils	WITHOUT_CLASSIFICATION	0.9989234257923528	WITHOUT_CLASSIFICATION	0.0010765742076472397	IMPLEMENTATION
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9999999295332798	WITHOUT_CLASSIFICATION	7.046672018767034E-8	IMPLEMENTATION
// exec needs to behave differently in-process, because it's technically // supposed to replace the calling process. So if we're supposed to run // in-process, we allow it to use the default streams and not use // pumpers at all. See JRUBY-2156 and JRUBY-2154.	WITHOUT_CLASSIFICATION	0.9081669766383129	WITHOUT_CLASSIFICATION	0.09183302336168714	IMPLEMENTATION
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999998610773672	WITHOUT_CLASSIFICATION	1.3892263289959973E-7	IMPLEMENTATION
// The problem we trying to solve below: STDIN in Java // is blocked and non-interruptible, so if we invoke read // on it, we might never be able to interrupt such thread. // So, we use in.available() to see if there is any input // ready, and only then read it. But this approach can't // tell whether the end of stream reached or not, so we // might end up looping right at the end of the stream. // Well, at least, we can improve the situation by checking // if some input was ever available, and if so, not // checking for available anymore, and just go to read.	WITHOUT_CLASSIFICATION	0.999999938362603	WITHOUT_CLASSIFICATION	6.163739698969322E-8	IMPLEMENTATION
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9998877257526833	WITHOUT_CLASSIFICATION	1.1227424731682773E-4	IMPLEMENTATION
// an empirically derived rule: precision applies to // significand length, irrespective of exponent	WITHOUT_CLASSIFICATION	0.9999174507581138	WITHOUT_CLASSIFICATION	8.254924188624133E-5	IMPLEMENTATION
// an official rule, clarified: if the exponent // <clarif>after adjusting for exponent form</clarif> // is < -4,  or the exponent <clarif>after adjusting  // for exponent form</clarif> is greater than the // precision, use exponent form	WITHOUT_CLASSIFICATION	0.9999850120945946	WITHOUT_CLASSIFICATION	1.4987905405465993E-5	IMPLEMENTATION
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9999768583087003	WITHOUT_CLASSIFICATION	2.314169129974394E-5	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.999468818743958	WITHOUT_CLASSIFICATION	5.311812560420583E-4	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.999468818743958	WITHOUT_CLASSIFICATION	5.311812560420583E-4	IMPLEMENTATION
// MRI behavior: validate only the unnumbered arguments	WITHOUT_CLASSIFICATION	0.9999125345857623	WITHOUT_CLASSIFICATION	8.746541423765842E-5	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999358961915906	WITHOUT_CLASSIFICATION	6.410380840935826E-5	IMPLEMENTATION
// calculation for simple (and typical) case, // adapted from sun.misc.FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999779005114117	WITHOUT_CLASSIFICATION	2.209948858839372E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999670845889459	WITHOUT_CLASSIFICATION	3.291541105411755E-5	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9985397552331703	WITHOUT_CLASSIFICATION	0.0014602447668298035	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9985397552331703	WITHOUT_CLASSIFICATION	0.0014602447668298035	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9985397552331703	WITHOUT_CLASSIFICATION	0.0014602447668298035	IMPLEMENTATION
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9635145923630839	WITHOUT_CLASSIFICATION	0.03648540763691607	IMPLEMENTATION
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9998835443670161	WITHOUT_CLASSIFICATION	1.1645563298400635E-4	IMPLEMENTATION
// call chmod after we created the RandomAccesFile // because otherwise, the file could be read-only	WITHOUT_CLASSIFICATION	0.9998598435605595	WITHOUT_CLASSIFICATION	1.4015643944049184E-4	IMPLEMENTATION
// attempt to set the permissions, if we have been passed a POSIX instance, // and only if the file was created in this call.	WITHOUT_CLASSIFICATION	0.9999970724399208	WITHOUT_CLASSIFICATION	2.927560079300674E-6	IMPLEMENTATION
// // When reading into a heap buffer, the jvm allocates a temporary // direct ByteBuffer of the requested size.  To avoid allocating // a huge direct buffer when doing ludicrous reads (e.g. 1G or more) // we split the read up into chunks of no more than 1M //	WITHOUT_CLASSIFICATION	0.9999932963107142	WITHOUT_CLASSIFICATION	6.703689285789119E-6	IMPLEMENTATION
// // If it is a file channel, then we can pre-allocate the output buffer // to the total size of buffered + remaining bytes in file //	WITHOUT_CLASSIFICATION	0.9999979849654543	WITHOUT_CLASSIFICATION	2.0150345456641183E-6	IMPLEMENTATION
// // Cannot discern the total read length - allocate at least enough for the buffered data //	WITHOUT_CLASSIFICATION	0.9999930392620289	WITHOUT_CLASSIFICATION	6.960737971207533E-6	IMPLEMENTATION
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999859845465363	WITHOUT_CLASSIFICATION	1.4015453463794349E-5	IMPLEMENTATION
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9989318311700082	WITHOUT_CLASSIFICATION	0.001068168829991842	IMPLEMENTATION
// already have some bytes buffered, just return those	WITHOUT_CLASSIFICATION	0.9999674088051388	WITHOUT_CLASSIFICATION	3.259119486123399E-5	IMPLEMENTATION
// reset buffer	WITHOUT_CLASSIFICATION	0.9990617015304222	WITHOUT_CLASSIFICATION	9.382984695778444E-4	IMPLEMENTATION
// // Synchronize and re-check to avoid creating more than one Selector per provider //	WITHOUT_CLASSIFICATION	0.9987293044853524	WITHOUT_CLASSIFICATION	0.00127069551464766	IMPLEMENTATION
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.7619507360447435	WITHOUT_CLASSIFICATION	0.2380492639552566	IMPLEMENTATION
// Is there something built into JRuby to do this?	WITHOUT_CLASSIFICATION	0.9998614867684524	WITHOUT_CLASSIFICATION	1.3851323154761322E-4	IMPLEMENTATION
// Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long // assertTrue(value == valueViaValuesIterator);	WITHOUT_CLASSIFICATION	0.999940823468226	WITHOUT_CLASSIFICATION	5.917653177389383E-5	IMPLEMENTATION
// value equality //result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); //assertEquals("two", result);	WITHOUT_CLASSIFICATION	0.9999783016869118	WITHOUT_CLASSIFICATION	2.1698313088248308E-5	IMPLEMENTATION
// Uncomment the "puts" lines if you want to see more detail	WITHOUT_CLASSIFICATION	0.999857432128606	WITHOUT_CLASSIFICATION	1.4256787139397756E-4	IMPLEMENTATION
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999861719832224	WITHOUT_CLASSIFICATION	1.3828016777603851E-5	IMPLEMENTATION
// change the thread context to include the class	WITHOUT_CLASSIFICATION	0.9997848667276588	WITHOUT_CLASSIFICATION	2.1513327234111938E-4	IMPLEMENTATION
