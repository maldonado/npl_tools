// TODO: warn "tried to create Proc object without a block"	IMPLEMENTATION	0.7476486493545387	WITHOUT_CLASSIFICATION	0.2523513506454614	IMPLEMENTATION
// TODO: CLONE_SETUP here	IMPLEMENTATION	0.6919754680855841	IMPLEMENTATION	0.308024531914416	WITHOUT_CLASSIFICATION
// TODO: Someday, enable.	IMPLEMENTATION	0.5866739461016572	IMPLEMENTATION	0.4133260538983427	WITHOUT_CLASSIFICATION
// Bunch of methods still not implemented	IMPLEMENTATION	0.9398745719995569	IMPLEMENTATION	0.06012542800044302	WITHOUT_CLASSIFICATION
// TODO: non-strict option	IMPLEMENTATION	0.5755744352624592	WITHOUT_CLASSIFICATION	0.42442556473754073	IMPLEMENTATION
// TODO: opt for 2 and 3 ?	IMPLEMENTATION	0.913470840553068	WITHOUT_CLASSIFICATION	0.08652915944693192	IMPLEMENTATION
// FIXME: Should we make this work with platform's locale, // or continue hardcoding US?	IMPLEMENTATION	0.590212279490517	WITHOUT_CLASSIFICATION	0.40978772050948303	IMPLEMENTATION
// TODO: rescan code range ?	IMPLEMENTATION	0.598954814464435	IMPLEMENTATION	0.40104518553556495	WITHOUT_CLASSIFICATION
// TODO: rescan code range ?	IMPLEMENTATION	0.598954814464435	IMPLEMENTATION	0.40104518553556495	WITHOUT_CLASSIFICATION
// TODO: pass this in?	IMPLEMENTATION	0.769303364168129	IMPLEMENTATION	0.23069663583187094	WITHOUT_CLASSIFICATION
// FIXME: Pass block down?	IMPLEMENTATION	0.9766981651220009	WITHOUT_CLASSIFICATION	0.023301834877999052	IMPLEMENTATION
// TODO: do something here?	IMPLEMENTATION	0.7501595783327115	IMPLEMENTATION	0.24984042166728854	WITHOUT_CLASSIFICATION
// TODO: port exact behavior from MRI, and move most locking logic into ChannelDescriptor // TODO: for all LOCK_NB cases, return false if they would block	IMPLEMENTATION	0.8618583004199791	WITHOUT_CLASSIFICATION	0.13814169958002093	IMPLEMENTATION
// TODO: check if too many open files, GC and try again	IMPLEMENTATION	0.8526234855889476	WITHOUT_CLASSIFICATION	0.14737651441105235	IMPLEMENTATION
//TODO deal with UNC names	IMPLEMENTATION	0.9443353563943216	IMPLEMENTATION	0.05566464360567826	WITHOUT_CLASSIFICATION
// FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.6282538507151788	WITHOUT_CLASSIFICATION	0.37174614928482114	IMPLEMENTATION
//FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.9959261191116818	WITHOUT_CLASSIFICATION	0.004073880888318193	IMPLEMENTATION
// TODO: SafeStringValue here	IMPLEMENTATION	0.6919754680855841	IMPLEMENTATION	0.308024531914416	WITHOUT_CLASSIFICATION
// TODO: turn off readable? am I reading this right? // This only seems to be used while duping below, since modes gets // reset to actual modes afterward //fptr->mode &= (m & FMODE_READABLE) ? ~FMODE_READABLE : ~FMODE_WRITABLE;	IMPLEMENTATION	0.7373309550524461	WITHOUT_CLASSIFICATION	0.26266904494755394	IMPLEMENTATION
// TODO: check safe, taint on incoming string	IMPLEMENTATION	0.864365590001124	WITHOUT_CLASSIFICATION	0.13563440999887597	IMPLEMENTATION
// TODO: pipe handler to be reopened with path and "w" mode	IMPLEMENTATION	0.530039413260714	WITHOUT_CLASSIFICATION	0.4699605867392859	IMPLEMENTATION
// FIXME: add text mode to mode flags	IMPLEMENTATION	0.9378529894525158	WITHOUT_CLASSIFICATION	0.062147010547484165	IMPLEMENTATION
// TODO: Something about pipe buffer length here	IMPLEMENTATION	0.6095153563169454	IMPLEMENTATION	0.3904846436830546	WITHOUT_CLASSIFICATION
// TODO: handle errors in buffered write by retrying until finished or file is closed	IMPLEMENTATION	0.8403121253847936	WITHOUT_CLASSIFICATION	0.15968787461520637	IMPLEMENTATION
// TODO: notify threads waiting on descriptors/IO? probably not...	IMPLEMENTATION	0.6139593568242466	IMPLEMENTATION	0.38604064317575326	WITHOUT_CLASSIFICATION
// TODO: Ruby re-checks that the buffer string hasn't been modified	IMPLEMENTATION	0.7538458236889597	WITHOUT_CLASSIFICATION	0.2461541763110402	IMPLEMENTATION
// TODO: Ruby unlocks the string here	IMPLEMENTATION	0.9262358911909089	WITHOUT_CLASSIFICATION	0.07376410880909116	IMPLEMENTATION
// TODO: Ruby truncates string to specific size here, but our bytelist should handle this already?	IMPLEMENTATION	0.9597230631960452	WITHOUT_CLASSIFICATION	0.040276936803954874	IMPLEMENTATION
// TODO: Ruby unlocks the string here	IMPLEMENTATION	0.9262358911909089	WITHOUT_CLASSIFICATION	0.07376410880909116	IMPLEMENTATION
// TODO: Ruby truncates string to specific size here, but our bytelist should handle this already?	IMPLEMENTATION	0.9597230631960452	WITHOUT_CLASSIFICATION	0.040276936803954874	IMPLEMENTATION
// TODO: ruby locks the string here	IMPLEMENTATION	0.9304332768428387	WITHOUT_CLASSIFICATION	0.06956672315716125	IMPLEMENTATION
// TODO same zero-length checks as file above	IMPLEMENTATION	0.5030251210662708	WITHOUT_CLASSIFICATION	0.4969748789337291	IMPLEMENTATION
// TODO: MRI also can hadle Bignum here	IMPLEMENTATION	0.8425143714455173	IMPLEMENTATION	0.15748562855448262	WITHOUT_CLASSIFICATION
// TODO: make threadsafe	IMPLEMENTATION	0.8785523697262412	IMPLEMENTATION	0.12144763027375877	WITHOUT_CLASSIFICATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.6182556118286889	WITHOUT_CLASSIFICATION	0.3817443881713111	IMPLEMENTATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.6182556118286889	WITHOUT_CLASSIFICATION	0.3817443881713111	IMPLEMENTATION
// FIXME: create AttrReaderMethod, AttrWriterMethod, for faster attr access	IMPLEMENTATION	0.9659147946678134	WITHOUT_CLASSIFICATION	0.034085205332186536	IMPLEMENTATION
// Do not clone cached methods // FIXME: MRI copies all methods here	IMPLEMENTATION	0.7864040822118172	WITHOUT_CLASSIFICATION	0.21359591778818268	IMPLEMENTATION
// TODO: don't calculate the same value 3 times	IMPLEMENTATION	0.9310314087335934	WITHOUT_CLASSIFICATION	0.06896859126640663	IMPLEMENTATION
// TODO: 3 times calculate the same value below	IMPLEMENTATION	0.9343719208686311	WITHOUT_CLASSIFICATION	0.06562807913136877	IMPLEMENTATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.8964288262526576	IMPLEMENTATION	0.10357117374734237	WITHOUT_CLASSIFICATION
// TODO: Store BEGIN and END information into this node	IMPLEMENTATION	0.5923541314860644	WITHOUT_CLASSIFICATION	0.40764586851393547	IMPLEMENTATION
// TODO: put these nil guards into tree (bigger than I want to do right now)	IMPLEMENTATION	0.9312104605538667	IMPLEMENTATION	0.06878953944613325	WITHOUT_CLASSIFICATION
// FIXME: Make bodyNode non-null in parser	IMPLEMENTATION	0.991802984432761	WITHOUT_CLASSIFICATION	0.00819701556723904	IMPLEMENTATION
// TODO: call config with scope but no frame	IMPLEMENTATION	0.5310078964848512	WITHOUT_CLASSIFICATION	0.46899210351514864	IMPLEMENTATION
// TODO: add trace call?	IMPLEMENTATION	0.7023130944419752	IMPLEMENTATION	0.29768690555802485	WITHOUT_CLASSIFICATION
// FIXME: missing arity check	IMPLEMENTATION	0.8477048161467333	WITHOUT_CLASSIFICATION	0.15229518385326676	IMPLEMENTATION
// FIXME: optimize for cases where we have no false branch	IMPLEMENTATION	0.9341178234131231	WITHOUT_CLASSIFICATION	0.06588217658687703	IMPLEMENTATION
// FIXME: after jump is not in here.  Will if ever be? //Label afterJmp = new Label();	IMPLEMENTATION	0.9719108077543551	WITHOUT_CLASSIFICATION	0.028089192245644816	IMPLEMENTATION
// TODO: build arg list based on number of args, optionals, etc	IMPLEMENTATION	0.9619844075749495	IMPLEMENTATION	0.03801559242505051	WITHOUT_CLASSIFICATION
// FIXME: missing arity check	IMPLEMENTATION	0.8477048161467333	WITHOUT_CLASSIFICATION	0.15229518385326676	IMPLEMENTATION
// SSS FIXME: Traverse up the scope hierarchy to find the constant as long as the parent is a static scope	IMPLEMENTATION	0.9978227559440301	WITHOUT_CLASSIFICATION	0.002177244055969842	IMPLEMENTATION
// SSS FIXME: Should I be returning the operand constructed here?	IMPLEMENTATION	0.5002570092495511	IMPLEMENTATION	0.4997429907504489	WITHOUT_CLASSIFICATION
// TODO: Add IR instructions for checking method arity! // s.getVariableCompiler().checkMethodArity(required, opt, rest);	IMPLEMENTATION	0.9072462824414257	IMPLEMENTATION	0.09275371755857434	WITHOUT_CLASSIFICATION
// FIXME: Ruby 1.9 post args code needs to come here	IMPLEMENTATION	0.521198895715766	WITHOUT_CLASSIFICATION	0.4788011042842339	IMPLEMENTATION
// SSS: FIXME: Somewhere here, we need to record information the type of this operand as String	IMPLEMENTATION	0.9891060770021579	WITHOUT_CLASSIFICATION	0.010893922997842143	IMPLEMENTATION
// FIXME: Translate this call below! // s.unwrapPassedBlock();	IMPLEMENTATION	0.8423399667896602	WITHOUT_CLASSIFICATION	0.15766003321033978	IMPLEMENTATION
// SSS FIXME: We need to build debug information tracking into the IR in some fashion // So, these methods below would have to have equivalents in IR_Scope implementations.	IMPLEMENTATION	0.9295261945753186	WITHOUT_CLASSIFICATION	0.07047380542468142	IMPLEMENTATION
// SSS FIXME: Incomplete!	IMPLEMENTATION	0.9708103844910649	WITHOUT_CLASSIFICATION	0.029189615508935028	IMPLEMENTATION
// SSS FIXME: Pick one of bytelist or string, or add internal conversion methods to convert to the default representation	IMPLEMENTATION	0.9774518943453616	WITHOUT_CLASSIFICATION	0.022548105654638346	IMPLEMENTATION
// SSS FIXME: To be done	IMPLEMENTATION	0.9927061905000923	WITHOUT_CLASSIFICATION	0.007293809499907675	IMPLEMENTATION
//TODO: implement, won't do this now	IMPLEMENTATION	0.9872323751736117	WITHOUT_CLASSIFICATION	0.012767624826388267	IMPLEMENTATION
//TODO: implement, won't do this now	IMPLEMENTATION	0.9872323751736117	WITHOUT_CLASSIFICATION	0.012767624826388267	IMPLEMENTATION
// TODO: validate port as numeric	IMPLEMENTATION	0.6067279801797146	WITHOUT_CLASSIFICATION	0.3932720198202853	IMPLEMENTATION
// TODO: this code should really check if a Ruby equals method is implemented or not.	IMPLEMENTATION	0.999304029078528	IMPLEMENTATION	6.959709214721312E-4	WITHOUT_CLASSIFICATION
// if not already defined, we add a 'new' that guesses at which signature to use // TODO: just adding first one right now...add in signature-guessing logic	IMPLEMENTATION	0.9708432820870913	IMPLEMENTATION	0.029156717912908813	WITHOUT_CLASSIFICATION
// TODO: deal with varargs	IMPLEMENTATION	0.7515205937565034	IMPLEMENTATION	0.24847940624349668	WITHOUT_CLASSIFICATION
// TODO: deal with varargs	IMPLEMENTATION	0.7515205937565034	IMPLEMENTATION	0.24847940624349668	WITHOUT_CLASSIFICATION
// TODO: other reserved names?	IMPLEMENTATION	0.885238599867489	IMPLEMENTATION	0.11476140013251106	WITHOUT_CLASSIFICATION
// TODO: we can probably release our references to the constantFields // array and static/instance callback hashes at this point. 	IMPLEMENTATION	0.5498028840491769	IMPLEMENTATION	0.4501971159508231	WITHOUT_CLASSIFICATION
// TODO: Formalize conversion mechanisms between Java and Ruby	IMPLEMENTATION	0.8058270784591094	WITHOUT_CLASSIFICATION	0.19417292154089066	IMPLEMENTATION
// XXX: Check if it's appropriate type?	IMPLEMENTATION	0.9995608100577688	WITHOUT_CLASSIFICATION	4.391899422313219E-4	IMPLEMENTATION
// TODO: call ruby method	IMPLEMENTATION	0.9004585124723458	IMPLEMENTATION	0.09954148752765431	WITHOUT_CLASSIFICATION
// TODO: call ruby method	IMPLEMENTATION	0.9004585124723458	IMPLEMENTATION	0.09954148752765431	WITHOUT_CLASSIFICATION
// TODO: Add safety check for taintedness	IMPLEMENTATION	0.7051832397154414	IMPLEMENTATION	0.2948167602845587	WITHOUT_CLASSIFICATION
// FIXME: Need to detect magic_comment in 1.9 here for encoding	IMPLEMENTATION	0.9936822342300065	WITHOUT_CLASSIFICATION	0.006317765769993488	IMPLEMENTATION
/* xxx shouldn't check if valid option variable */	IMPLEMENTATION	0.9999745156554848	WITHOUT_CLASSIFICATION	2.548434451514685E-5	IMPLEMENTATION
// TODO: this isn't handling multibyte yet	IMPLEMENTATION	0.9780811708319029	IMPLEMENTATION	0.021918829168097075	WITHOUT_CLASSIFICATION
// TODO: This should be something else like a tCHAR	IMPLEMENTATION	0.8845526553701695	IMPLEMENTATION	0.11544734462983047	WITHOUT_CLASSIFICATION
// FIXME: \r logic needed	IMPLEMENTATION	0.9932332589681225	IMPLEMENTATION	0.006766741031877459	WITHOUT_CLASSIFICATION
// TODO: note lack of command.com support for Win 9x...	IMPLEMENTATION	0.8743941965221967	IMPLEMENTATION	0.12560580347780326	WITHOUT_CLASSIFICATION
// FIXME: Make thread pool threads daemons if necessary	IMPLEMENTATION	0.968694276094704	WITHOUT_CLASSIFICATION	0.03130572390529597	IMPLEMENTATION
/* FIXME: We may be intern'ing more than once.*/	IMPLEMENTATION	0.910768430464208	IMPLEMENTATION	0.08923156953579198	WITHOUT_CLASSIFICATION
/* FIXME: We may be intern'ing more than once.*/	IMPLEMENTATION	0.910768430464208	IMPLEMENTATION	0.08923156953579198	WITHOUT_CLASSIFICATION
/* FIXME: arg_concat missing for opt_call_args*/	IMPLEMENTATION	0.865826581191825	IMPLEMENTATION	0.134173418808175	WITHOUT_CLASSIFICATION
/* FIXME: arg_concat logic missing for opt_call_args*/	IMPLEMENTATION	0.9551241429054586	IMPLEMENTATION	0.04487585709454143	WITHOUT_CLASSIFICATION
// FIXME: This needs to happen for lambdas //            args.checkArgCount(runtime, parameters.length);	IMPLEMENTATION	0.9798383681007128	WITHOUT_CLASSIFICATION	0.020161631899287165	IMPLEMENTATION
// FIXME: This needs to happen for lambdas //            args.checkArgCount(runtime, parameters.length);	IMPLEMENTATION	0.9798383681007128	WITHOUT_CLASSIFICATION	0.020161631899287165	IMPLEMENTATION
// TODO: make it cross runtime safe by COW or eager copy	IMPLEMENTATION	0.5617786564899975	WITHOUT_CLASSIFICATION	0.4382213435100024	IMPLEMENTATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.9262067622681445	WITHOUT_CLASSIFICATION	0.0737932377318555	IMPLEMENTATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.9262067622681445	WITHOUT_CLASSIFICATION	0.0737932377318555	IMPLEMENTATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.9262067622681445	WITHOUT_CLASSIFICATION	0.0737932377318555	IMPLEMENTATION
// TODO: check the return value here	IMPLEMENTATION	0.5297347640708654	IMPLEMENTATION	0.4702652359291346	WITHOUT_CLASSIFICATION
// TODO: check the return value here	IMPLEMENTATION	0.5297347640708654	IMPLEMENTATION	0.4702652359291346	WITHOUT_CLASSIFICATION
// TODO: Make sure all appropriate open flags are added to this check.	IMPLEMENTATION	0.973788356123564	WITHOUT_CLASSIFICATION	0.02621164387643612	IMPLEMENTATION
//subList.clear(); // Sublist is supposed to share same backing store as list...TODO in RubyArray. //assertTrue(list.size() == 1);	IMPLEMENTATION	0.9999994011095634	WITHOUT_CLASSIFICATION	5.988904365031521E-7	IMPLEMENTATION
// SSS FIXME: Cannot optimize this without assuming that Range.to_ary method has not redefined. // So for now, return null!	IMPLEMENTATION	0.9426094812338623	IMPLEMENTATION	0.057390518766137606	WITHOUT_CLASSIFICATION
// TODO Auto-generated method stub	IMPLEMENTATION	0.9994521966188501	IMPLEMENTATION	5.478033811499353E-4	WITHOUT_CLASSIFICATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.9923134567711391	IMPLEMENTATION	0.00768654322886083	WITHOUT_CLASSIFICATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.9923134567711391	IMPLEMENTATION	0.00768654322886083	WITHOUT_CLASSIFICATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.9923134567711391	IMPLEMENTATION	0.00768654322886083	WITHOUT_CLASSIFICATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.8964288262526576	IMPLEMENTATION	0.10357117374734237	WITHOUT_CLASSIFICATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.8964288262526576	IMPLEMENTATION	0.10357117374734237	WITHOUT_CLASSIFICATION
// TODO: check for ascii string	IMPLEMENTATION	0.9602696095907431	WITHOUT_CLASSIFICATION	0.03973039040925692	IMPLEMENTATION
// filter out any Java primitive names // TODO: should check against all Java reserved names here, not just primitives	IMPLEMENTATION	0.9104841303723895	IMPLEMENTATION	0.08951586962761048	WITHOUT_CLASSIFICATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.6182556118286889	WITHOUT_CLASSIFICATION	0.3817443881713111	IMPLEMENTATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.6182556118286889	WITHOUT_CLASSIFICATION	0.3817443881713111	IMPLEMENTATION
// TODO: missing additional logic for dealing with conflicting protected fields.	IMPLEMENTATION	0.9769874530149794	IMPLEMENTATION	0.02301254698502065	WITHOUT_CLASSIFICATION
// TODO: better detection when path is absolute or not. // If the path isn't absolute, then prepend the current working // directory to the path.	IMPLEMENTATION	0.9800556557925361	WITHOUT_CLASSIFICATION	0.01994434420746394	IMPLEMENTATION
// FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.6282538507151788	WITHOUT_CLASSIFICATION	0.37174614928482114	IMPLEMENTATION
// FIX replace type() == ... with isInstanceOf(...)	IMPLEMENTATION	0.9996045570483043	WITHOUT_CLASSIFICATION	3.95442951695663E-4	IMPLEMENTATION
/* TODO: MRI is just a when node.  We need this extra logic for IDE consumers (null in casenode statement should be implicit nil)*/	IMPLEMENTATION	0.8872831509714071	IMPLEMENTATION	0.11271684902859291	WITHOUT_CLASSIFICATION
// TODO: This and recacheRespondsTo needed to be synchronized for JRUBY-3466, // but this degraded performance nearly 2x. It's still faster than MRI, but // a reanalysis of this code may show a faster way to ensure we're caching // safely.	IMPLEMENTATION	0.9999464218931733	IMPLEMENTATION	5.3578106826701566E-5	WITHOUT_CLASSIFICATION
// TODO: adjust length so it won't fall in the middle  // of a multi-byte character. MRI's sprintf.c uses tables // in a modified version of regex.c, which assume some // particular  encoding for a given installation/application. // (See regex.c#re_mbcinit in ruby-1.8.5-p12)  // // This is only an issue if the user specifies a precision // that causes the string to be truncated. The same issue // would arise taking a substring of a ByteList-backed RubyString.	IMPLEMENTATION	0.9999994484800719	WITHOUT_CLASSIFICATION	5.515199280902779E-7	IMPLEMENTATION
// set constants now that they're initialized	WITHOUT_CLASSIFICATION	0.9999751989686234	WITHOUT_CLASSIFICATION	2.480103137656381E-5	IMPLEMENTATION
// line 335	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
// Figure end-char.  '\0' is special to indicate begin=end and that no nesting?	WITHOUT_CLASSIFICATION	0.9999905055282605	WITHOUT_CLASSIFICATION	9.494471739563592E-6	IMPLEMENTATION
// line 362	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 372	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
// line 391	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
/* ^D */	WITHOUT_CLASSIFICATION	0.9999987745645751	WITHOUT_CLASSIFICATION	1.225435424934396E-6	IMPLEMENTATION
/* ^Z */	WITHOUT_CLASSIFICATION	0.9999987754238183	WITHOUT_CLASSIFICATION	1.2245761816560037E-6	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
//Do nothing	WITHOUT_CLASSIFICATION	0.9998518882607531	WITHOUT_CLASSIFICATION	1.4811173924685154E-4	IMPLEMENTATION
//Do nothing	WITHOUT_CLASSIFICATION	0.9998518882607531	WITHOUT_CLASSIFICATION	1.4811173924685154E-4	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999994652543633	WITHOUT_CLASSIFICATION	5.347456367086924E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999994652543633	WITHOUT_CLASSIFICATION	5.347456367086924E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999994652543633	WITHOUT_CLASSIFICATION	5.347456367086924E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999994652543633	WITHOUT_CLASSIFICATION	5.347456367086924E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999994652543633	WITHOUT_CLASSIFICATION	5.347456367086924E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999994652543633	WITHOUT_CLASSIFICATION	5.347456367086924E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999994652543633	WITHOUT_CLASSIFICATION	5.347456367086924E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999994652543633	WITHOUT_CLASSIFICATION	5.347456367086924E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999994652543633	WITHOUT_CLASSIFICATION	5.347456367086924E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999994652543633	WITHOUT_CLASSIFICATION	5.347456367086924E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999994652543633	WITHOUT_CLASSIFICATION	5.347456367086924E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999994652543633	WITHOUT_CLASSIFICATION	5.347456367086924E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999994652543633	WITHOUT_CLASSIFICATION	5.347456367086924E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999994652543633	WITHOUT_CLASSIFICATION	5.347456367086924E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999994652543633	WITHOUT_CLASSIFICATION	5.347456367086924E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999994652543633	WITHOUT_CLASSIFICATION	5.347456367086924E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999994652543633	WITHOUT_CLASSIFICATION	5.347456367086924E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999994652543633	WITHOUT_CLASSIFICATION	5.347456367086924E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999994652543633	WITHOUT_CLASSIFICATION	5.347456367086924E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999994652543633	WITHOUT_CLASSIFICATION	5.347456367086924E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999994652543633	WITHOUT_CLASSIFICATION	5.347456367086924E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999994652543633	WITHOUT_CLASSIFICATION	5.347456367086924E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999994652543633	WITHOUT_CLASSIFICATION	5.347456367086924E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999994652543633	WITHOUT_CLASSIFICATION	5.347456367086924E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999994652543633	WITHOUT_CLASSIFICATION	5.347456367086924E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999994652543633	WITHOUT_CLASSIFICATION	5.347456367086924E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999994652543633	WITHOUT_CLASSIFICATION	5.347456367086924E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999994652543633	WITHOUT_CLASSIFICATION	5.347456367086924E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999994652543633	WITHOUT_CLASSIFICATION	5.347456367086924E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999994652543633	WITHOUT_CLASSIFICATION	5.347456367086924E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999994652543633	WITHOUT_CLASSIFICATION	5.347456367086924E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999994652543633	WITHOUT_CLASSIFICATION	5.347456367086924E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999994652543633	WITHOUT_CLASSIFICATION	5.347456367086924E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999994652543633	WITHOUT_CLASSIFICATION	5.347456367086924E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999994652543633	WITHOUT_CLASSIFICATION	5.347456367086924E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999994652543633	WITHOUT_CLASSIFICATION	5.347456367086924E-6	IMPLEMENTATION
// return result	WITHOUT_CLASSIFICATION	0.9998931000370301	WITHOUT_CLASSIFICATION	1.0689996296986559E-4	IMPLEMENTATION
// name	WITHOUT_CLASSIFICATION	0.9999880824386085	WITHOUT_CLASSIFICATION	1.1917561391504182E-5	IMPLEMENTATION
// Define System.getProperties() in ENV_JAVA	WITHOUT_CLASSIFICATION	0.9999856033996956	WITHOUT_CLASSIFICATION	1.4396600304514205E-5	IMPLEMENTATION
// Accessor methods.	WITHOUT_CLASSIFICATION	0.9997524774723762	WITHOUT_CLASSIFICATION	2.475225276238455E-4	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9996710527071555	WITHOUT_CLASSIFICATION	3.2894729284456105E-4	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9996710527071555	WITHOUT_CLASSIFICATION	3.2894729284456105E-4	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9996710527071555	WITHOUT_CLASSIFICATION	3.2894729284456105E-4	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9996710527071555	WITHOUT_CLASSIFICATION	3.2894729284456105E-4	IMPLEMENTATION
// call getpwent to fail early if unsupported	WITHOUT_CLASSIFICATION	0.9999786988086912	WITHOUT_CLASSIFICATION	2.1301191308819706E-5	IMPLEMENTATION
// fall back on env entry for USER	WITHOUT_CLASSIFICATION	0.9997999448684027	WITHOUT_CLASSIFICATION	2.000551315973184E-4	IMPLEMENTATION
// try to read grent to fail fast	WITHOUT_CLASSIFICATION	0.9999922059413437	WITHOUT_CLASSIFICATION	7.794058656179303E-6	IMPLEMENTATION
// define ARGV and $* for this runtime	WITHOUT_CLASSIFICATION	0.9999765473049894	WITHOUT_CLASSIFICATION	2.3452695010654678E-5	IMPLEMENTATION
// Version information:	WITHOUT_CLASSIFICATION	0.9999526020007388	WITHOUT_CLASSIFICATION	4.739799926118347E-5	IMPLEMENTATION
// after defn of $stderr as the call may produce warnings	WITHOUT_CLASSIFICATION	0.9999908217386007	WITHOUT_CLASSIFICATION	9.178261399356634E-6	IMPLEMENTATION
// ARGF, $< object	WITHOUT_CLASSIFICATION	0.9998860929764997	WITHOUT_CLASSIFICATION	1.1390702350029201E-4	IMPLEMENTATION
// if the environment variables can't be obtained, define an empty ENV	WITHOUT_CLASSIFICATION	0.9999989887256366	WITHOUT_CLASSIFICATION	1.01127436337072E-6	IMPLEMENTATION
// On platforms without a c-library accessable through JNA, getpid will return hashCode  // as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing // $$ on getpid() where available, we have the same semantics as MRI.	WITHOUT_CLASSIFICATION	0.9999986355403141	WITHOUT_CLASSIFICATION	1.3644596859002607E-6	IMPLEMENTATION
//$@ returns nil if $!.backtrace is not an array	WITHOUT_CLASSIFICATION	0.9994445251770625	WITHOUT_CLASSIFICATION	5.554748229375278E-4	IMPLEMENTATION
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.999922997391377	WITHOUT_CLASSIFICATION	7.700260862301863E-5	IMPLEMENTATION
// MRI behavior: just plain '//' or '\\\\' are considered illegal on Windows.	WITHOUT_CLASSIFICATION	0.9999975560170555	WITHOUT_CLASSIFICATION	2.443982944534093E-6	IMPLEMENTATION
// this _is_ legal (when removing an undef)	WITHOUT_CLASSIFICATION	0.9996962024118969	WITHOUT_CLASSIFICATION	3.0379758810305233E-4	IMPLEMENTATION
// What we passed to the constructor for method 'path'	WITHOUT_CLASSIFICATION	0.9962734451295823	WITHOUT_CLASSIFICATION	0.0037265548704177665	IMPLEMENTATION
// ----- Ruby Class Methods ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999869964389271	WITHOUT_CLASSIFICATION	1.3003561072857165E-5	IMPLEMENTATION
// // CONSTANT TABLE METHODS - pass to delegate //	WITHOUT_CLASSIFICATION	0.9996572162959638	WITHOUT_CLASSIFICATION	3.427837040361447E-4	IMPLEMENTATION
// We get canonical path to try and flatten the path out. // a dir '/subdir/..' should return as '/' // cnutter: Do we want to flatten path out?	WITHOUT_CLASSIFICATION	0.9997969978841684	WITHOUT_CLASSIFICATION	2.0300211583159977E-4	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9996710527071555	WITHOUT_CLASSIFICATION	3.2894729284456105E-4	IMPLEMENTATION
// ----- Ruby Instance Methods -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999667764773814	WITHOUT_CLASSIFICATION	3.322352261855243E-5	IMPLEMENTATION
// Make sure any read()s after close fail.	WITHOUT_CLASSIFICATION	0.9999971590316556	WITHOUT_CLASSIFICATION	2.840968344385653E-6	IMPLEMENTATION
// ----- Helper Methods --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999753650184459	WITHOUT_CLASSIFICATION	2.4634981554131033E-5	IMPLEMENTATION
// try to use POSIX for this first	WITHOUT_CLASSIFICATION	0.9998594311832979	WITHOUT_CLASSIFICATION	1.405688167020522E-4	IMPLEMENTATION
// otherwise fall back on the old way	WITHOUT_CLASSIFICATION	0.9890120428130629	WITHOUT_CLASSIFICATION	0.010987957186937184	IMPLEMENTATION
// Proc class	WITHOUT_CLASSIFICATION	0.9998775817536346	WITHOUT_CLASSIFICATION	1.2241824636534857E-4	IMPLEMENTATION
// No passed in block, lets check next outer frame for one ('Proc.new')	WITHOUT_CLASSIFICATION	0.9999950398284435	WITHOUT_CLASSIFICATION	4.960171556491948E-6	IMPLEMENTATION
// modify the block with a new backref/lastline-grabbing scope	WITHOUT_CLASSIFICATION	0.9999209785044697	WITHOUT_CLASSIFICATION	7.902149553037875E-5	IMPLEMENTATION
// for future compatibility as constructors move toward not accepting metaclass?	WITHOUT_CLASSIFICATION	0.9988581406753122	WITHOUT_CLASSIFICATION	0.0011418593246877323	IMPLEMENTATION
//        case RUBY_HYBRID: //            backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); //            break;	WITHOUT_CLASSIFICATION	0.9998629172233128	WITHOUT_CLASSIFICATION	1.3708277668722643E-4	IMPLEMENTATION
// This looks wrong, but it's the way MRI does it.	WITHOUT_CLASSIFICATION	0.9999960823755099	WITHOUT_CLASSIFICATION	3.917624490075036E-6	IMPLEMENTATION
// rb_exc_new3	WITHOUT_CLASSIFICATION	0.9996615266859028	WITHOUT_CLASSIFICATION	3.3847331409717497E-4	IMPLEMENTATION
// NOTE: The indicies here match exactly the signal values; do not reorder	WITHOUT_CLASSIFICATION	0.9965780381089329	WITHOUT_CLASSIFICATION	0.003421961891067205	IMPLEMENTATION
//registerThreadDumpSignalHandler(runtime);	WITHOUT_CLASSIFICATION	0.9996983594805002	WITHOUT_CLASSIFICATION	3.016405194996755E-4	IMPLEMENTATION
// IOT is also 6	WITHOUT_CLASSIFICATION	0.9998777042399495	WITHOUT_CLASSIFICATION	1.222957600505117E-4	IMPLEMENTATION
// CLD is also 20	WITHOUT_CLASSIFICATION	0.9998628276341792	WITHOUT_CLASSIFICATION	1.3717236582073527E-4	IMPLEMENTATION
// RubySignal	WITHOUT_CLASSIFICATION	0.9996615266859028	WITHOUT_CLASSIFICATION	3.3847331409717497E-4	IMPLEMENTATION
// ZStream actually *isn't* allocatable	WITHOUT_CLASSIFICATION	0.9998850721203686	WITHOUT_CLASSIFICATION	1.1492787963135442E-4	IMPLEMENTATION
// MRI behavior, enforced by tests	WITHOUT_CLASSIFICATION	0.9999777365538101	WITHOUT_CLASSIFICATION	2.226344618989141E-5	IMPLEMENTATION
// it's safe since adler.update doesn't modify the array	WITHOUT_CLASSIFICATION	0.9999976349607559	WITHOUT_CLASSIFICATION	2.365039244019464E-6	IMPLEMENTATION
// MRI behavior: in finished mode, we work as pass-through	WITHOUT_CLASSIFICATION	0.999994988430343	WITHOUT_CLASSIFICATION	5.011569657036097E-6	IMPLEMENTATION
// SYNC_FLUSH	WITHOUT_CLASSIFICATION	0.9996615266859028	WITHOUT_CLASSIFICATION	3.3847331409717497E-4	IMPLEMENTATION
// By default, NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999150378857093	WITHOUT_CLASSIFICATION	8.496211429058373E-5	IMPLEMENTATION
//io.finish();	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
// should invoke seek on realIo	WITHOUT_CLASSIFICATION	0.9996927962483768	WITHOUT_CLASSIFICATION	3.072037516232239E-4	IMPLEMENTATION
// hmm...	WITHOUT_CLASSIFICATION	0.9999935752659732	WITHOUT_CLASSIFICATION	6.424734026853922E-6	IMPLEMENTATION
// Called before any write to make sure the // header is always written before the first bytes	WITHOUT_CLASSIFICATION	0.9999801681957381	WITHOUT_CLASSIFICATION	1.9831804261928493E-5	IMPLEMENTATION
// For JDK 1.4 we can use "cal.getTimeInMillis()"	WITHOUT_CLASSIFICATION	0.9994426086731352	WITHOUT_CLASSIFICATION	5.573913268648558E-4	IMPLEMENTATION
// We can just use dt, since it is immutable	WITHOUT_CLASSIFICATION	0.9999976376518006	WITHOUT_CLASSIFICATION	2.36234819950395E-6	IMPLEMENTATION
// float number of seconds	WITHOUT_CLASSIFICATION	0.9999597075769247	WITHOUT_CLASSIFICATION	4.0292423075350245E-5	IMPLEMENTATION
// modified to match how hash is calculated in 1.8.2	WITHOUT_CLASSIFICATION	0.9998330862112652	WITHOUT_CLASSIFICATION	1.6691378873488215E-4	IMPLEMENTATION
// dump usec, not msec	WITHOUT_CLASSIFICATION	0.9982842462270085	WITHOUT_CLASSIFICATION	0.0017157537729914564	IMPLEMENTATION
/* Time class methods */	WITHOUT_CLASSIFICATION	0.9999956360217852	WITHOUT_CLASSIFICATION	4.3639782146874486E-6	IMPLEMENTATION
// marsaling dumps usec, not msec	WITHOUT_CLASSIFICATION	0.9974241146057202	WITHOUT_CLASSIFICATION	0.002575885394279839	IMPLEMENTATION
// MRI accepts additional wday argument which appears to be ignored.	WITHOUT_CLASSIFICATION	0.9999463443537743	WITHOUT_CLASSIFICATION	5.365564622581549E-5	IMPLEMENTATION
// set up with min values and then add to allow rolling over	WITHOUT_CLASSIFICATION	0.9999935533324209	WITHOUT_CLASSIFICATION	6.4466675791627725E-6	IMPLEMENTATION
// the instant at which we will ask dtz what the difference between DST and // standard time is	WITHOUT_CLASSIFICATION	0.9999080024547584	WITHOUT_CLASSIFICATION	9.199754524164858E-5	IMPLEMENTATION
// if we might be moving this time from !DST -> DST, the offset is assumed // to be the same as it was just before we last moved from DST -> !DST	WITHOUT_CLASSIFICATION	0.9999999986480413	WITHOUT_CLASSIFICATION	1.351958599745717E-9	IMPLEMENTATION
// Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.	WITHOUT_CLASSIFICATION	0.9981851680756397	WITHOUT_CLASSIFICATION	0.0018148319243602338	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999997306781929	WITHOUT_CLASSIFICATION	2.693218071071692E-6	IMPLEMENTATION
/* If the value will fit in a Fixnum, return one of those. */	WITHOUT_CLASSIFICATION	0.9999999694079311	WITHOUT_CLASSIFICATION	3.0592068989722915E-8	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999997677233808	WITHOUT_CLASSIFICATION	2.3227661920504774E-6	IMPLEMENTATION
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9999291979023713	WITHOUT_CLASSIFICATION	7.08020976286193E-5	IMPLEMENTATION
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9627360546155703	WITHOUT_CLASSIFICATION	0.03726394538442967	IMPLEMENTATION
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9627360546155703	WITHOUT_CLASSIFICATION	0.03726394538442967	IMPLEMENTATION
// no bignorm here needed	WITHOUT_CLASSIFICATION	0.9327669134742088	WITHOUT_CLASSIFICATION	0.06723308652579121	IMPLEMENTATION
// wow, the only time we can use the java protocol ;)	WITHOUT_CLASSIFICATION	0.9999738322120099	WITHOUT_CLASSIFICATION	2.6167787990082197E-5	IMPLEMENTATION
// Pad with a 0	WITHOUT_CLASSIFICATION	0.9998323414072603	WITHOUT_CLASSIFICATION	1.6765859273970668E-4	IMPLEMENTATION
// BigInteger required a sign byte in incoming array	WITHOUT_CLASSIFICATION	0.9999765953072014	WITHOUT_CLASSIFICATION	2.340469279859028E-5	IMPLEMENTATION
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9999999221352588	WITHOUT_CLASSIFICATION	7.786474114722706E-8	IMPLEMENTATION
// We do this b/c make_tmpname might be overridden	WITHOUT_CLASSIFICATION	0.9999835110157058	WITHOUT_CLASSIFICATION	1.6488984294157203E-5	IMPLEMENTATION
// ???	WITHOUT_CLASSIFICATION	0.9999873456859587	WITHOUT_CLASSIFICATION	1.265431404123445E-5	IMPLEMENTATION
// PID	WITHOUT_CLASSIFICATION	0.9999935847378594	WITHOUT_CLASSIFICATION	6.415262140581555E-6	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999997677233808	WITHOUT_CLASSIFICATION	2.3227661920504774E-6	IMPLEMENTATION
// elements and trailing nils	WITHOUT_CLASSIFICATION	0.9999793556300739	WITHOUT_CLASSIFICATION	2.064436992613669E-5	IMPLEMENTATION
// Dir::tmpdir	WITHOUT_CLASSIFICATION	0.9996615266859028	WITHOUT_CLASSIFICATION	3.3847331409717497E-4	IMPLEMENTATION
// volatile to ensure that initial nil-fill is visible to other threads	WITHOUT_CLASSIFICATION	0.9999861763302441	WITHOUT_CLASSIFICATION	1.3823669755753048E-5	IMPLEMENTATION
/* Ruby arrays default to holding 16 elements, so we create an         * ArrayList of the same size if we're not told otherwise         */	WITHOUT_CLASSIFICATION	0.9999908347919139	WITHOUT_CLASSIFICATION	9.165208086153773E-6	IMPLEMENTATION
/* rb_ary_new2     * just allocates the internal array     */	WITHOUT_CLASSIFICATION	0.9999985016562949	WITHOUT_CLASSIFICATION	1.4983437051392808E-6	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999962274564157	WITHOUT_CLASSIFICATION	3.7725435842211984E-6	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999962274564157	WITHOUT_CLASSIFICATION	3.7725435842211984E-6	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999962274564157	WITHOUT_CLASSIFICATION	3.7725435842211984E-6	IMPLEMENTATION
/* Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour     *      */	WITHOUT_CLASSIFICATION	0.9999926980786443	WITHOUT_CLASSIFICATION	7.301921355685673E-6	IMPLEMENTATION
/* NEWOBJ and OBJSETUP equivalent     * fastest one, for shared arrays, optional objectspace     */	WITHOUT_CLASSIFICATION	0.9999965139090106	WITHOUT_CLASSIFICATION	3.4860909894155275E-6	IMPLEMENTATION
// Create global constants and variables	WITHOUT_CLASSIFICATION	0.9999978838291366	WITHOUT_CLASSIFICATION	2.1161708634825628E-6	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9848483830614568	WITHOUT_CLASSIFICATION	0.015151616938543177	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9848483830614568	WITHOUT_CLASSIFICATION	0.015151616938543177	IMPLEMENTATION
// Windows does not support these functions, so we won't even try // This also matches Ruby behavior for JRUBY-2353.	WITHOUT_CLASSIFICATION	0.9999771271261876	WITHOUT_CLASSIFICATION	2.2872873812389685E-5	IMPLEMENTATION
// There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and // newer one (US/Pacific, America/Los_Angeles). This pattern is to detect // the legacy TZ format in order to convert it to the newer format // understood by Java API.	WITHOUT_CLASSIFICATION	0.9999800799963037	WITHOUT_CLASSIFICATION	1.9920003696395016E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9848483830614568	WITHOUT_CLASSIFICATION	0.015151616938543177	IMPLEMENTATION
// 1.9 seems to just do inspect for to_s now	WITHOUT_CLASSIFICATION	0.9999994022941248	WITHOUT_CLASSIFICATION	5.977058752537437E-7	IMPLEMENTATION
// possibly should not in object space	WITHOUT_CLASSIFICATION	0.9999202235360694	WITHOUT_CLASSIFICATION	7.977646393064006E-5	IMPLEMENTATION
// only fill if there actually will remain trailing storage	WITHOUT_CLASSIFICATION	0.9999903965556418	WITHOUT_CLASSIFICATION	9.60344435820703E-6	IMPLEMENTATION
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9996615266859028	WITHOUT_CLASSIFICATION	3.3847331409717497E-4	IMPLEMENTATION
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9996615266859028	WITHOUT_CLASSIFICATION	3.3847331409717497E-4	IMPLEMENTATION
// from DUP_SETUP	WITHOUT_CLASSIFICATION	0.9999259681447529	WITHOUT_CLASSIFICATION	7.403185524706767E-5	IMPLEMENTATION
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999886910328222	WITHOUT_CLASSIFICATION	1.1308967177770988E-5	IMPLEMENTATION
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999652004395713	WITHOUT_CLASSIFICATION	3.479956042878242E-5	IMPLEMENTATION
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999652004395713	WITHOUT_CLASSIFICATION	3.479956042878242E-5	IMPLEMENTATION
// Satisfy java.util.List interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999607779145028	WITHOUT_CLASSIFICATION	3.9222085497303354E-5	IMPLEMENTATION
// pre-set for the sake of terminating recursive calls	WITHOUT_CLASSIFICATION	0.9999487842212227	WITHOUT_CLASSIFICATION	5.1215778777395955E-5	IMPLEMENTATION
/* root fiber */	WITHOUT_CLASSIFICATION	0.9999375550864404	WITHOUT_CLASSIFICATION	6.24449135595929E-5	IMPLEMENTATION
// GMT+00:00 --> Etc/GMT, see "MRI behavior" // comment below.	WITHOUT_CLASSIFICATION	0.9999315698341823	WITHOUT_CLASSIFICATION	6.843016581776529E-5	IMPLEMENTATION
//  See http://www.gzip.org/zlib/rfc-gzip.html	WITHOUT_CLASSIFICATION	0.9999458611203074	WITHOUT_CLASSIFICATION	5.4138879692679374E-5	IMPLEMENTATION
// extras flag	WITHOUT_CLASSIFICATION	0.9995569562773199	WITHOUT_CLASSIFICATION	4.430437226801124E-4	IMPLEMENTATION
// Zlib::NO_FLUSH	WITHOUT_CLASSIFICATION	0.9996615266859028	WITHOUT_CLASSIFICATION	3.3847331409717497E-4	IMPLEMENTATION
// ...nothing	WITHOUT_CLASSIFICATION	0.9996615266859028	WITHOUT_CLASSIFICATION	3.3847331409717497E-4	IMPLEMENTATION
// utility method	WITHOUT_CLASSIFICATION	0.9992208490439738	WITHOUT_CLASSIFICATION	7.791509560261845E-4	IMPLEMENTATION
// Prepare LoadService and load path	WITHOUT_CLASSIFICATION	0.9998903888246065	WITHOUT_CLASSIFICATION	1.0961117539352099E-4	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999997677233808	WITHOUT_CLASSIFICATION	2.3227661920504774E-6	IMPLEMENTATION
// flags // 4 bytes of modified time	WITHOUT_CLASSIFICATION	0.9999840683369521	WITHOUT_CLASSIFICATION	1.5931663047867754E-5	IMPLEMENTATION
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999193572221886	WITHOUT_CLASSIFICATION	8.064277781141833E-5	IMPLEMENTATION
// 1.8 "include?"	WITHOUT_CLASSIFICATION	0.9996615266859028	WITHOUT_CLASSIFICATION	3.3847331409717497E-4	IMPLEMENTATION
// any BigInteger is bigger than Fixnum and we don't have FIXABLE	WITHOUT_CLASSIFICATION	0.9999613631065054	WITHOUT_CLASSIFICATION	3.863689349455654E-5	IMPLEMENTATION
// beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal	WITHOUT_CLASSIFICATION	0.9999924388733377	WITHOUT_CLASSIFICATION	7.561126662303911E-6	IMPLEMENTATION
// MRI does it!	WITHOUT_CLASSIFICATION	0.9999758541560064	WITHOUT_CLASSIFICATION	2.4145843993622935E-5	IMPLEMENTATION
// won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999987356390518	WITHOUT_CLASSIFICATION	1.2643609482333975E-6	IMPLEMENTATION
// it won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999970383564784	WITHOUT_CLASSIFICATION	2.9616435216424452E-6	IMPLEMENTATION
// RubyClassPathVariable	WITHOUT_CLASSIFICATION	0.9999438606165095	WITHOUT_CLASSIFICATION	5.6139383490612176E-5	IMPLEMENTATION
// not to be confused with RubyObject's flags	WITHOUT_CLASSIFICATION	0.9988421455115294	WITHOUT_CLASSIFICATION	0.0011578544884706936	IMPLEMENTATION
// second argument is allowed, but ignored (MRI)	WITHOUT_CLASSIFICATION	0.9999807644821991	WITHOUT_CLASSIFICATION	1.923551780090732E-5	IMPLEMENTATION
// we are presumably running a precompiled class; load directly	WITHOUT_CLASSIFICATION	0.9999694830827941	WITHOUT_CLASSIFICATION	3.051691720592768E-5	IMPLEMENTATION
// terminate; tryCompile will have printed out an error and we're done	WITHOUT_CLASSIFICATION	0.9999757977153882	WITHOUT_CLASSIFICATION	2.4202284611692005E-5	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999968230962519	WITHOUT_CLASSIFICATION	3.176903748138653E-6	IMPLEMENTATION
// do nothing, this iteration restarts	WITHOUT_CLASSIFICATION	0.999902291400848	WITHOUT_CLASSIFICATION	9.770859915196871E-5	IMPLEMENTATION
// recheck condition	WITHOUT_CLASSIFICATION	0.9996846034758536	WITHOUT_CLASSIFICATION	3.1539652414643346E-4	IMPLEMENTATION
// Get the main threadcontext (gets constructed for us)	WITHOUT_CLASSIFICATION	0.9999607429013395	WITHOUT_CLASSIFICATION	3.925709866059728E-5	IMPLEMENTATION
// Construct key services	WITHOUT_CLASSIFICATION	0.9999440940299623	WITHOUT_CLASSIFICATION	5.590597003760571E-5	IMPLEMENTATION
// initialize the root of the class hierarchy completely	WITHOUT_CLASSIFICATION	0.9999918464721603	WITHOUT_CLASSIFICATION	8.153527839619416E-6	IMPLEMENTATION
// Construct the top-level execution frame and scope for the main thread	WITHOUT_CLASSIFICATION	0.9998805782177764	WITHOUT_CLASSIFICATION	1.1942178222352672E-4	IMPLEMENTATION
// Initialize all the core classes	WITHOUT_CLASSIFICATION	0.999826894396298	WITHOUT_CLASSIFICATION	1.7310560370211188E-4	IMPLEMENTATION
// Initialize the "dummy" class used as a marker	WITHOUT_CLASSIFICATION	0.9999901144366108	WITHOUT_CLASSIFICATION	9.885563389316395E-6	IMPLEMENTATION
// Initialize Kernel and include into Object	WITHOUT_CLASSIFICATION	0.9999751380532748	WITHOUT_CLASSIFICATION	2.486194672519077E-5	IMPLEMENTATION
// Object is ready, create top self	WITHOUT_CLASSIFICATION	0.9999621184162817	WITHOUT_CLASSIFICATION	3.788158371831576E-5	IMPLEMENTATION
// Pre-create all the core classes potentially referenced during startup	WITHOUT_CLASSIFICATION	0.9997711662733801	WITHOUT_CLASSIFICATION	2.288337266199364E-4	IMPLEMENTATION
// Math depends on all numeric types	WITHOUT_CLASSIFICATION	0.9997616605416821	WITHOUT_CLASSIFICATION	2.3833945831787718E-4	IMPLEMENTATION
// depends on IO, FileTest	WITHOUT_CLASSIFICATION	0.9998587257222735	WITHOUT_CLASSIFICATION	1.412742777265264E-4	IMPLEMENTATION
// initialize builtin libraries	WITHOUT_CLASSIFICATION	0.9999412087319159	WITHOUT_CLASSIFICATION	5.8791268084152865E-5	IMPLEMENTATION
// Require in all libraries specified on command line	WITHOUT_CLASSIFICATION	0.9999801166448975	WITHOUT_CLASSIFICATION	1.9883355102545993E-5	IMPLEMENTATION
// Bootstrap the top of the hierarchy	WITHOUT_CLASSIFICATION	0.999907956808759	WITHOUT_CLASSIFICATION	9.204319124102035E-5	IMPLEMENTATION
// we try to get the classloader that loaded JRuby, falling back on System	WITHOUT_CLASSIFICATION	0.9998596001762494	WITHOUT_CLASSIFICATION	1.4039982375066955E-4	IMPLEMENTATION
// determine spacing	WITHOUT_CLASSIFICATION	0.9998012779591464	WITHOUT_CLASSIFICATION	1.987220408534315E-4	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999984024355941	WITHOUT_CLASSIFICATION	1.597564405819391E-6	IMPLEMENTATION
// For JSR 223 support: see http://scripting.java.net/	WITHOUT_CLASSIFICATION	0.999944807948886	WITHOUT_CLASSIFICATION	5.5192051114015665E-5	IMPLEMENTATION
// use this for JRuby-internal finalizers	WITHOUT_CLASSIFICATION	0.9997731994688432	WITHOUT_CLASSIFICATION	2.268005311568157E-4	IMPLEMENTATION
// this method is for finalizers registered via ObjectSpace	WITHOUT_CLASSIFICATION	0.9998875472879888	WITHOUT_CLASSIFICATION	1.12452712011163E-4	IMPLEMENTATION
// new factory methods ------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999051459496374	WITHOUT_CLASSIFICATION	9.485405036255328E-5	IMPLEMENTATION
//        assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9509963879911824	WITHOUT_CLASSIFICATION	0.04900361200881767	IMPLEMENTATION
// Equivalent of Data_Wrap_Struct	WITHOUT_CLASSIFICATION	0.9999492972442632	WITHOUT_CLASSIFICATION	5.0702755736899835E-5	IMPLEMENTATION
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999656449874703	WITHOUT_CLASSIFICATION	3.4355012529712055E-5	IMPLEMENTATION
// ChannelDescriptors opened by sysopen are cached to avoid collection	WITHOUT_CLASSIFICATION	0.9999801281080879	WITHOUT_CLASSIFICATION	1.987189191204736E-5	IMPLEMENTATION
// Default objects	WITHOUT_CLASSIFICATION	0.9996713045595415	WITHOUT_CLASSIFICATION	3.286954404585345E-4	IMPLEMENTATION
// record separator var, to speed up io ops that use it	WITHOUT_CLASSIFICATION	0.999753220963923	WITHOUT_CLASSIFICATION	2.467790360769362E-4	IMPLEMENTATION
// former java.lang.System concepts now internalized for MVM	WITHOUT_CLASSIFICATION	0.9999782906663208	WITHOUT_CLASSIFICATION	2.1709333679122583E-5	IMPLEMENTATION
// Java support	WITHOUT_CLASSIFICATION	0.9973886419099498	WITHOUT_CLASSIFICATION	0.002611358090050126	IMPLEMENTATION
// Parser stats	WITHOUT_CLASSIFICATION	0.9997014509089055	WITHOUT_CLASSIFICATION	2.985490910945311E-4	IMPLEMENTATION
// Compilation	WITHOUT_CLASSIFICATION	0.9996615266859028	WITHOUT_CLASSIFICATION	3.3847331409717497E-4	IMPLEMENTATION
// can't read non-standard properties	WITHOUT_CLASSIFICATION	0.9999859886317319	WITHOUT_CLASSIFICATION	1.4011368267986124E-5	IMPLEMENTATION
// can't create custom classloaders	WITHOUT_CLASSIFICATION	0.999958427973354	WITHOUT_CLASSIFICATION	4.157202664595308E-5	IMPLEMENTATION
// mutex that controls modifications of user-defined finalizers	WITHOUT_CLASSIFICATION	0.9999224306714668	WITHOUT_CLASSIFICATION	7.75693285331552E-5	IMPLEMENTATION
// mutex that controls modifications of internal finalizers	WITHOUT_CLASSIFICATION	0.9999249475701754	WITHOUT_CLASSIFICATION	7.505242982458025E-5	IMPLEMENTATION
// A thread pool to use for executing this runtime's Ruby threads	WITHOUT_CLASSIFICATION	0.9995884133777795	WITHOUT_CLASSIFICATION	4.115866222204622E-4	IMPLEMENTATION
// A global object lock for class hierarchy mutations	WITHOUT_CLASSIFICATION	0.9999995826228041	WITHOUT_CLASSIFICATION	4.1737719593956615E-7	IMPLEMENTATION
// initial spaces // spaces before "at"	WITHOUT_CLASSIFICATION	0.9999735499199707	WITHOUT_CLASSIFICATION	2.6450080029316865E-5	IMPLEMENTATION
// event name // filename // line numbers should be 1-based	WITHOUT_CLASSIFICATION	0.9999658826400498	WITHOUT_CLASSIFICATION	3.4117359950100784E-5	IMPLEMENTATION
// The method is intentionally not public, since it typically should // not be used outside of the core.	WITHOUT_CLASSIFICATION	0.9995763764438094	WITHOUT_CLASSIFICATION	4.236235561906587E-4	IMPLEMENTATION
// Note: this field and the following static initializer // must be located be in this order!	WITHOUT_CLASSIFICATION	0.9999555785789864	WITHOUT_CLASSIFICATION	4.4421421013667024E-5	IMPLEMENTATION
// Contains a list of all blocks (as Procs) that should be called when // the runtime environment exits.	WITHOUT_CLASSIFICATION	0.9999979006562107	WITHOUT_CLASSIFICATION	2.099343789368622E-6	IMPLEMENTATION
// quoted-printable	WITHOUT_CLASSIFICATION	0.9996615266859028	WITHOUT_CLASSIFICATION	3.3847331409717497E-4	IMPLEMENTATION
// default options	WITHOUT_CLASSIFICATION	0.9999691131661612	WITHOUT_CLASSIFICATION	3.088683383881899E-5	IMPLEMENTATION
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9996615266859028	WITHOUT_CLASSIFICATION	3.3847331409717497E-4	IMPLEMENTATION
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9996615266859028	WITHOUT_CLASSIFICATION	3.3847331409717497E-4	IMPLEMENTATION
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9996615266859028	WITHOUT_CLASSIFICATION	3.3847331409717497E-4	IMPLEMENTATION
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9996615266859028	WITHOUT_CLASSIFICATION	3.3847331409717497E-4	IMPLEMENTATION
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999935752659732	WITHOUT_CLASSIFICATION	6.424734026853922E-6	IMPLEMENTATION
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999935752659732	WITHOUT_CLASSIFICATION	6.424734026853922E-6	IMPLEMENTATION
// UTF-8	WITHOUT_CLASSIFICATION	0.9999938153756877	WITHOUT_CLASSIFICATION	6.184624312363634E-6	IMPLEMENTATION
// UTF-8	WITHOUT_CLASSIFICATION	0.9999938153756877	WITHOUT_CLASSIFICATION	6.184624312363634E-6	IMPLEMENTATION
// long name option	WITHOUT_CLASSIFICATION	0.9997890767583999	WITHOUT_CLASSIFICATION	2.1092324160016973E-4	IMPLEMENTATION
// conversion	WITHOUT_CLASSIFICATION	0.9998239032732272	WITHOUT_CLASSIFICATION	1.760967267726502E-4	IMPLEMENTATION
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999976391025074	WITHOUT_CLASSIFICATION	2.3608974925376435E-6	IMPLEMENTATION
// string doesn't share any resources	WITHOUT_CLASSIFICATION	0.9999997503600385	WITHOUT_CLASSIFICATION	2.4963996147030877E-7	IMPLEMENTATION
// string has it's own ByteList, but it's pointing to a shared buffer (byte[])	WITHOUT_CLASSIFICATION	0.9999995211469461	WITHOUT_CLASSIFICATION	4.78853053913833E-7	IMPLEMENTATION
// string doesn't have it's own ByteList (values)	WITHOUT_CLASSIFICATION	0.99999897664362	WITHOUT_CLASSIFICATION	1.0233563800520357E-6	IMPLEMENTATION
// ENC_CODERANGE_ASCIIONLY	WITHOUT_CLASSIFICATION	0.9999438606165095	WITHOUT_CLASSIFICATION	5.6139383490612176E-5	IMPLEMENTATION
// rb_enc_str_asciionly_p	WITHOUT_CLASSIFICATION	0.9999438606165095	WITHOUT_CLASSIFICATION	5.6139383490612176E-5	IMPLEMENTATION
// rb_enc_str_coderange	WITHOUT_CLASSIFICATION	0.9999438606165095	WITHOUT_CLASSIFICATION	5.6139383490612176E-5	IMPLEMENTATION
// rb_str_hash_cmp	WITHOUT_CLASSIFICATION	0.9996615266859028	WITHOUT_CLASSIFICATION	3.3847331409717497E-4	IMPLEMENTATION
// Deprecated String construction routines	WITHOUT_CLASSIFICATION	0.9999703402853677	WITHOUT_CLASSIFICATION	2.965971463226408E-5	IMPLEMENTATION
// String construction routines by NOT byte[] buffer and NOT making the target String shared 	WITHOUT_CLASSIFICATION	0.99999765441953	WITHOUT_CLASSIFICATION	2.3455804700060674E-6	IMPLEMENTATION
/* rb_str_subseq */	WITHOUT_CLASSIFICATION	0.9999354232136133	WITHOUT_CLASSIFICATION	6.457678638666016E-5	IMPLEMENTATION
// no need to assign encoding, same bytelist shared	WITHOUT_CLASSIFICATION	0.9998901564215316	WITHOUT_CLASSIFICATION	1.0984357846844739E-4	IMPLEMENTATION
// if len == 0 then shared empty	WITHOUT_CLASSIFICATION	0.9999967109658733	WITHOUT_CLASSIFICATION	3.289034126582152E-6	IMPLEMENTATION
/* rb_str_cmp_m */	WITHOUT_CLASSIFICATION	0.9999354232136133	WITHOUT_CLASSIFICATION	6.457678638666016E-5	IMPLEMENTATION
// we limit to int because ByteBuffer can only allocate int sizes	WITHOUT_CLASSIFICATION	0.999896478010431	WITHOUT_CLASSIFICATION	1.0352198956899619E-4	IMPLEMENTATION
// // rb_str_buf_append	WITHOUT_CLASSIFICATION	0.9999438606165095	WITHOUT_CLASSIFICATION	5.6139383490612176E-5	IMPLEMENTATION
// encoding doesn't have to be copied.	WITHOUT_CLASSIFICATION	0.9999976059927099	WITHOUT_CLASSIFICATION	2.3940072899952387E-6	IMPLEMENTATION
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9998251125608597	WITHOUT_CLASSIFICATION	1.7488743914029708E-4	IMPLEMENTATION
// must not reallocate	WITHOUT_CLASSIFICATION	0.9959356833435912	WITHOUT_CLASSIFICATION	0.004064316656408769	IMPLEMENTATION
// Illegal combination	WITHOUT_CLASSIFICATION	0.999943881918784	WITHOUT_CLASSIFICATION	5.6118081216109806E-5	IMPLEMENTATION
// use 1.8 impl	WITHOUT_CLASSIFICATION	0.9993526963790477	WITHOUT_CLASSIFICATION	6.473036209522605E-4	IMPLEMENTATION
/* RubyString aka rb_string_value */	WITHOUT_CLASSIFICATION	0.9999844555577617	WITHOUT_CLASSIFICATION	1.554444223836748E-5	IMPLEMENTATION
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999925908479008	WITHOUT_CLASSIFICATION	7.40915209922255E-6	IMPLEMENTATION
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999992028038636	WITHOUT_CLASSIFICATION	7.971961363834143E-7	IMPLEMENTATION
/* len + margin */	WITHOUT_CLASSIFICATION	0.9998778608130101	WITHOUT_CLASSIFICATION	1.2213918698984538E-4	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9995733246959085	WITHOUT_CLASSIFICATION	4.2667530409140516E-4	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9995733246959085	WITHOUT_CLASSIFICATION	4.2667530409140516E-4	IMPLEMENTATION
/* copy pre-match substr */	WITHOUT_CLASSIFICATION	0.9999950715937771	WITHOUT_CLASSIFICATION	4.928406222968433E-6	IMPLEMENTATION
// string given	WITHOUT_CLASSIFICATION	0.9999879447978341	WITHOUT_CLASSIFICATION	1.2055202165888909E-5	IMPLEMENTATION
// hash given	WITHOUT_CLASSIFICATION	0.9994771567611402	WITHOUT_CLASSIFICATION	5.228432388596833E-4	IMPLEMENTATION
// This represents left most digit in a set of incremented // values?  Therefore leftmost numeric must be '1' and not '0' // 999 -> 1000, not 999 -> 0000.  whereas chars should be // zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"	WITHOUT_CLASSIFICATION	0.9999969790893545	WITHOUT_CLASSIFICATION	3.0209106454554455E-6	IMPLEMENTATION
/* substring longer than string */	WITHOUT_CLASSIFICATION	0.9999998790157716	WITHOUT_CLASSIFICATION	1.209842283817318E-7	IMPLEMENTATION
/* rb_str_substr */	WITHOUT_CLASSIFICATION	0.9999354232136133	WITHOUT_CLASSIFICATION	6.457678638666016E-5	IMPLEMENTATION
// nothing	WITHOUT_CLASSIFICATION	0.9999987527899233	WITHOUT_CLASSIFICATION	1.2472100766693568E-6	IMPLEMENTATION
// nothing	WITHOUT_CLASSIFICATION	0.9999987527899233	WITHOUT_CLASSIFICATION	1.2472100766693568E-6	IMPLEMENTATION
/* rb_str_splice */	WITHOUT_CLASSIFICATION	0.9999354232136133	WITHOUT_CLASSIFICATION	6.457678638666016E-5	IMPLEMENTATION
// TODO: keep cr // TODO: rb_str_splice_0	WITHOUT_CLASSIFICATION	0.6117847143890414	IMPLEMENTATION	0.38821528561095864	WITHOUT_CLASSIFICATION
// keep cr ?	WITHOUT_CLASSIFICATION	0.9998906847755793	WITHOUT_CLASSIFICATION	1.0931522442059781E-4	IMPLEMENTATION
// keep cr ?	WITHOUT_CLASSIFICATION	0.9998906847755793	WITHOUT_CLASSIFICATION	1.0931522442059781E-4	IMPLEMENTATION
/* wrapped to \0...\0.  search next valid char. */	WITHOUT_CLASSIFICATION	0.9999862374662287	WITHOUT_CLASSIFICATION	1.3762533771337508E-5	IMPLEMENTATION
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9997443641850905	WITHOUT_CLASSIFICATION	2.556358149094999E-4	IMPLEMENTATION
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9997443641850905	WITHOUT_CLASSIFICATION	2.556358149094999E-4	IMPLEMENTATION
// modified	WITHOUT_CLASSIFICATION	0.9985950776487067	WITHOUT_CLASSIFICATION	0.0014049223512933567	IMPLEMENTATION
// modified	WITHOUT_CLASSIFICATION	0.9985950776487067	WITHOUT_CLASSIFICATION	0.0014049223512933567	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.9999935752659732	WITHOUT_CLASSIFICATION	6.424734026853922E-6	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.9999935752659732	WITHOUT_CLASSIFICATION	6.424734026853922E-6	IMPLEMENTATION
// QTRUE	WITHOUT_CLASSIFICATION	0.9999935752659732	WITHOUT_CLASSIFICATION	6.424734026853922E-6	IMPLEMENTATION
/* retrieve last replacer */	WITHOUT_CLASSIFICATION	0.9999947730676689	WITHOUT_CLASSIFICATION	5.226932331052709E-6	IMPLEMENTATION
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9998828005333776	WITHOUT_CLASSIFICATION	1.1719946662236695E-4	IMPLEMENTATION
// long size * bits in byte	WITHOUT_CLASSIFICATION	0.9999993290343695	WITHOUT_CLASSIFICATION	6.70965630513411E-7	IMPLEMENTATION
// from encoding, special-casing ASCII* to ASCII	WITHOUT_CLASSIFICATION	0.9999849174434738	WITHOUT_CLASSIFICATION	1.5082556526081318E-5	IMPLEMENTATION
// to encoding, same special-casing	WITHOUT_CLASSIFICATION	0.9999475966619916	WITHOUT_CLASSIFICATION	5.240333800833352E-5	IMPLEMENTATION
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.999955025899235	WITHOUT_CLASSIFICATION	4.497410076489827E-5	IMPLEMENTATION
// decode from "from" and encode to "to"	WITHOUT_CLASSIFICATION	0.9999893739965148	WITHOUT_CLASSIFICATION	1.0626003485263977E-5	IMPLEMENTATION
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.999955025899235	WITHOUT_CLASSIFICATION	4.497410076489827E-5	IMPLEMENTATION
//Kernel is the only Module that doesn't need an implementor	WITHOUT_CLASSIFICATION	0.9999353340894606	WITHOUT_CLASSIFICATION	6.466591053940259E-5	IMPLEMENTATION
// no binding given, use (eval)	WITHOUT_CLASSIFICATION	0.9998964527982793	WITHOUT_CLASSIFICATION	1.0354720172065708E-4	IMPLEMENTATION
// interned, OK for "fast" methods	WITHOUT_CLASSIFICATION	0.9998489510117367	WITHOUT_CLASSIFICATION	1.5104898826328269E-4	IMPLEMENTATION
// File to be loaded by autoload has already been or is being loaded.	WITHOUT_CLASSIFICATION	0.9999996754406831	WITHOUT_CLASSIFICATION	3.245593168345674E-7	IMPLEMENTATION
// rb_cstr_to_dbl case	WITHOUT_CLASSIFICATION	0.9999271271663124	WITHOUT_CLASSIFICATION	7.28728336876014E-5	IMPLEMENTATION
// We break if we know this sleep was explicitly woken up/interrupted	WITHOUT_CLASSIFICATION	0.9995175735784998	WITHOUT_CLASSIFICATION	4.824264215002562E-4	IMPLEMENTATION
// exec process, create IO with process	WITHOUT_CLASSIFICATION	0.9998916346789676	WITHOUT_CLASSIFICATION	1.0836532103237798E-4	IMPLEMENTATION
// Zero sleeps forever	WITHOUT_CLASSIFICATION	0.9999527623653951	WITHOUT_CLASSIFICATION	4.723763460483852E-5	IMPLEMENTATION
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9997109330718166	WITHOUT_CLASSIFICATION	2.890669281833574E-4	IMPLEMENTATION
// Explicit zero in MRI returns immediately	WITHOUT_CLASSIFICATION	0.9999938717018404	WITHOUT_CLASSIFICATION	6.128298159620964E-6	IMPLEMENTATION
// Spurious wakeup-loop	WITHOUT_CLASSIFICATION	0.9999438606165095	WITHOUT_CLASSIFICATION	5.6139383490612176E-5	IMPLEMENTATION
// adjusts paths started with '/' or '\\', on windows.	WITHOUT_CLASSIFICATION	0.9998926214687712	WITHOUT_CLASSIFICATION	1.0737853122881285E-4	IMPLEMENTATION
// file not given	WITHOUT_CLASSIFICATION	0.9862838926419782	WITHOUT_CLASSIFICATION	0.013716107358021886	IMPLEMENTATION
// string to eval	WITHOUT_CLASSIFICATION	0.9999936808145822	WITHOUT_CLASSIFICATION	6.319185417811797E-6	IMPLEMENTATION
// binding given, use binding's file	WITHOUT_CLASSIFICATION	0.9998448107083374	WITHOUT_CLASSIFICATION	1.551892916626327E-4	IMPLEMENTATION
// ?g  | boolean | True if file1 has the \CF{setgid} bit	WITHOUT_CLASSIFICATION	0.9999979745394142	WITHOUT_CLASSIFICATION	2.0254605857001883E-6	IMPLEMENTATION
// bomb out, it's not a binding or a proc	WITHOUT_CLASSIFICATION	0.9979842115090062	WITHOUT_CLASSIFICATION	0.0020157884909938672	IMPLEMENTATION
// Ordering of array traversal not important, just intuitive	WITHOUT_CLASSIFICATION	0.999799922677429	WITHOUT_CLASSIFICATION	2.000773225708699E-4	IMPLEMENTATION
//Catch active, throw for catch to handle	WITHOUT_CLASSIFICATION	0.991638828314415	WITHOUT_CLASSIFICATION	0.008361171685585008	IMPLEMENTATION
// No catch active for this throw	WITHOUT_CLASSIFICATION	0.9996715753402168	WITHOUT_CLASSIFICATION	3.284246597831697E-4	IMPLEMENTATION
// without full tracing, many events will not fire	WITHOUT_CLASSIFICATION	0.9974874317403805	WITHOUT_CLASSIFICATION	0.002512568259619535	IMPLEMENTATION
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9998928063281094	WITHOUT_CLASSIFICATION	1.0719367189063826E-4	IMPLEMENTATION
// MRI behavior: use first byte of string value if len > 0	WITHOUT_CLASSIFICATION	0.9999999085357363	WITHOUT_CLASSIFICATION	9.146426369139041E-8	IMPLEMENTATION
// MRI behavior: now check arg count	WITHOUT_CLASSIFICATION	0.9994855139675525	WITHOUT_CLASSIFICATION	5.144860324474292E-4	IMPLEMENTATION
// ?A  | Time    | Last access time for file1	WITHOUT_CLASSIFICATION	0.9999977740189376	WITHOUT_CLASSIFICATION	2.225981062351389E-6	IMPLEMENTATION
// ?b  | boolean | True if file1 is a block device	WITHOUT_CLASSIFICATION	0.9999987055015832	WITHOUT_CLASSIFICATION	1.2944984168135892E-6	IMPLEMENTATION
// ?c  | boolean | True if file1 is a character device	WITHOUT_CLASSIFICATION	0.999998416021972	WITHOUT_CLASSIFICATION	1.5839780280725656E-6	IMPLEMENTATION
// ?C  | Time    | Last change time for file1	WITHOUT_CLASSIFICATION	0.9999978455282602	WITHOUT_CLASSIFICATION	2.1544717398378917E-6	IMPLEMENTATION
// ?d  | boolean | True if file1 exists and is a directory	WITHOUT_CLASSIFICATION	0.9999999020053658	WITHOUT_CLASSIFICATION	9.79946342975325E-8	IMPLEMENTATION
// ?e  | boolean | True if file1 exists	WITHOUT_CLASSIFICATION	0.9999968442735232	WITHOUT_CLASSIFICATION	3.1557264768330044E-6	IMPLEMENTATION
// ?f  | boolean | True if file1 exists and is a regular file	WITHOUT_CLASSIFICATION	0.9999986592432538	WITHOUT_CLASSIFICATION	1.3407567462141398E-6	IMPLEMENTATION
// ?G  | boolean | True if file1 exists and has a group ownership equal to the caller's group	WITHOUT_CLASSIFICATION	0.9999993412017704	WITHOUT_CLASSIFICATION	6.587982296954051E-7	IMPLEMENTATION
// ?k  | boolean | True if file1 exists and has the sticky bit set	WITHOUT_CLASSIFICATION	0.9999992158632379	WITHOUT_CLASSIFICATION	7.84136762151496E-7	IMPLEMENTATION
// ?M  | Time    | Last modification time for file1	WITHOUT_CLASSIFICATION	0.9999982871128671	WITHOUT_CLASSIFICATION	1.7128871328640624E-6	IMPLEMENTATION
// ?o  | boolean | True if file1 exists and is owned by the caller's effective uid	WITHOUT_CLASSIFICATION	0.9999995707836825	WITHOUT_CLASSIFICATION	4.2921631745401083E-7	IMPLEMENTATION
// ?O  | boolean | True if file1 exists and is owned by the caller's real uid 	WITHOUT_CLASSIFICATION	0.9999993299788301	WITHOUT_CLASSIFICATION	6.700211698702849E-7	IMPLEMENTATION
// ?p  | boolean | True if file1 exists and is a fifo	WITHOUT_CLASSIFICATION	0.9999992857859625	WITHOUT_CLASSIFICATION	7.142140374555959E-7	IMPLEMENTATION
// ?r  | boolean | True if file1 is readable by the effective uid/gid of the caller	WITHOUT_CLASSIFICATION	0.9999997823136699	WITHOUT_CLASSIFICATION	2.176863301182166E-7	IMPLEMENTATION
// ?s  | int/nil | If file1 has nonzero size, return the size, otherwise nil	WITHOUT_CLASSIFICATION	0.9998562185556371	WITHOUT_CLASSIFICATION	1.4378144436295336E-4	IMPLEMENTATION
// ?S  | boolean | True if file1 exists and is a socket	WITHOUT_CLASSIFICATION	0.9999992479669583	WITHOUT_CLASSIFICATION	7.520330417470979E-7	IMPLEMENTATION
// ?u  | boolean | True if file1 has the setuid bit set	WITHOUT_CLASSIFICATION	0.9999982758211289	WITHOUT_CLASSIFICATION	1.7241788711964444E-6	IMPLEMENTATION
// ?x  | boolean | True if file1 exists and is executable by the effective uid/gid	WITHOUT_CLASSIFICATION	0.9999995478182299	WITHOUT_CLASSIFICATION	4.5218177007074576E-7	IMPLEMENTATION
// ?X  | boolean | True if file1 exists and is executable by the real uid/gid	WITHOUT_CLASSIFICATION	0.9999992941289919	WITHOUT_CLASSIFICATION	7.058710080510289E-7	IMPLEMENTATION
// ?z  | boolean | True if file1 exists and has a zero length	WITHOUT_CLASSIFICATION	0.9999991782180946	WITHOUT_CLASSIFICATION	8.217819054381052E-7	IMPLEMENTATION
// ?=  | boolean | True if the modification times of file1 and file2 are equal	WITHOUT_CLASSIFICATION	0.9999998044972704	WITHOUT_CLASSIFICATION	1.9550272961454522E-7	IMPLEMENTATION
// ?<  | boolean | True if the modification time of file1 is prior to that of file2	WITHOUT_CLASSIFICATION	0.999999849709268	WITHOUT_CLASSIFICATION	1.5029073204880798E-7	IMPLEMENTATION
// ?>  | boolean | True if the modification time of file1 is after that of file2	WITHOUT_CLASSIFICATION	0.9999998920952363	WITHOUT_CLASSIFICATION	1.0790476368511183E-7	IMPLEMENTATION
// ?-  | boolean | True if file1 and file2 are identical	WITHOUT_CLASSIFICATION	0.9999987583968126	WITHOUT_CLASSIFICATION	1.2416031874533743E-6	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999227273400145	WITHOUT_CLASSIFICATION	7.72726599854657E-5	IMPLEMENTATION
// Error info is per-thread	WITHOUT_CLASSIFICATION	0.9999887969412992	WITHOUT_CLASSIFICATION	1.1203058700921624E-5	IMPLEMENTATION
// init errorInfo to nil	WITHOUT_CLASSIFICATION	0.9999583382856281	WITHOUT_CLASSIFICATION	4.166171437187374E-5	IMPLEMENTATION
// if we're already aborting, we can receive no further mail	WITHOUT_CLASSIFICATION	0.9999900348866861	WITHOUT_CLASSIFICATION	9.965113313868278E-6	IMPLEMENTATION
// If this thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999290611397861	WITHOUT_CLASSIFICATION	7.093886021384821E-5	IMPLEMENTATION
// new interrupt, to hopefully wake it out of any blocking IO	WITHOUT_CLASSIFICATION	0.9999330898587544	WITHOUT_CLASSIFICATION	6.691014124561729E-5	IMPLEMENTATION
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999840033654244	WITHOUT_CLASSIFICATION	1.599663457565279E-5	IMPLEMENTATION
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999840033654244	WITHOUT_CLASSIFICATION	1.599663457565279E-5	IMPLEMENTATION
// JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999920065886015	WITHOUT_CLASSIFICATION	7.993411398477223E-6	IMPLEMENTATION
// JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999881990181111	WITHOUT_CLASSIFICATION	1.1800981888880922E-5	IMPLEMENTATION
// for Thread::start, which does not call the subclass's initialize	WITHOUT_CLASSIFICATION	0.9997445260808427	WITHOUT_CLASSIFICATION	2.5547391915725084E-4	IMPLEMENTATION
// JRUBY-3568, inherit threadgroup or use default	WITHOUT_CLASSIFICATION	0.9999818853192064	WITHOUT_CLASSIFICATION	1.811468079361259E-5	IMPLEMENTATION
// MRI behavior: value given in seconds; converted to Float; less // than or equal to zero returns immediately; returns nil	WITHOUT_CLASSIFICATION	0.9999994898193852	WITHOUT_CLASSIFICATION	5.101806147925146E-7	IMPLEMENTATION
// If the target thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999829775001974	WITHOUT_CLASSIFICATION	1.70224998026378E-5	IMPLEMENTATION
// We need this loop in order to be able to "unblock" the // join call without actually calling interrupt.	WITHOUT_CLASSIFICATION	0.9999895422737853	WITHOUT_CLASSIFICATION	1.0457726214714435E-5	IMPLEMENTATION
// attempt to decriticalize all if we're the critical thread	WITHOUT_CLASSIFICATION	0.9999220361206762	WITHOUT_CLASSIFICATION	7.796387932381298E-5	IMPLEMENTATION
// not valid for "dead" state	WITHOUT_CLASSIFICATION	0.9996018116829836	WITHOUT_CLASSIFICATION	3.981883170164287E-4	IMPLEMENTATION
// If the killee thread is the same as the killer thread, just die	WITHOUT_CLASSIFICATION	0.9999993455728576	WITHOUT_CLASSIFICATION	6.544271424182127E-7	IMPLEMENTATION
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999545495218963	WITHOUT_CLASSIFICATION	4.545047810374844E-5	IMPLEMENTATION
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999545495218963	WITHOUT_CLASSIFICATION	4.545047810374844E-5	IMPLEMENTATION
// ignore; I don't like doing it, but it seems like we // really just need to make all channels non-blocking by // default and use select when implementing blocking ops, // so if this remains set non-blocking, perhaps it's not // such a big deal...	WITHOUT_CLASSIFICATION	0.997163602304586	WITHOUT_CLASSIFICATION	0.0028363976954140966	IMPLEMENTATION
// can't select, just have to do a blocking call	WITHOUT_CLASSIFICATION	0.9999909332203167	WITHOUT_CLASSIFICATION	9.066779683319571E-6	IMPLEMENTATION
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9999052053636079	WITHOUT_CLASSIFICATION	9.479463639207763E-5	IMPLEMENTATION
// Create Constants class	WITHOUT_CLASSIFICATION	0.999992952393535	WITHOUT_CLASSIFICATION	7.047606465055159E-6	IMPLEMENTATION
// Create constants for open flags	WITHOUT_CLASSIFICATION	0.9999934192749942	WITHOUT_CLASSIFICATION	6.580725005829181E-6	IMPLEMENTATION
// Strip off the O_ prefix, so they become File::RDONLY, and so on	WITHOUT_CLASSIFICATION	0.999983576992222	WITHOUT_CLASSIFICATION	1.6423007778106557E-5	IMPLEMENTATION
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999897998423258	WITHOUT_CLASSIFICATION	1.0200157674250146E-5	IMPLEMENTATION
// File::Constants module is included in IO.	WITHOUT_CLASSIFICATION	0.9999930453675322	WITHOUT_CLASSIFICATION	6.954632467850445E-6	IMPLEMENTATION
// Make sure any existing lock is released before we try and close the file	WITHOUT_CLASSIFICATION	0.9999992209102342	WITHOUT_CLASSIFICATION	7.790897657844857E-7	IMPLEMENTATION
// null channel always succeeds for all locking operations	WITHOUT_CLASSIFICATION	0.9999179464897613	WITHOUT_CLASSIFICATION	8.205351023861555E-5	IMPLEMENTATION
// Paths which end in "/" or "\\" must be stripped off.	WITHOUT_CLASSIFICATION	0.9999780648906391	WITHOUT_CLASSIFICATION	2.19351093608798E-5	IMPLEMENTATION
// Special case for handling ACCMODE, since constantine will generate // an invalid value if it is not defined by the platform.	WITHOUT_CLASSIFICATION	0.9999900815800706	WITHOUT_CLASSIFICATION	9.918419929361722E-6	IMPLEMENTATION
// Return false here	WITHOUT_CLASSIFICATION	0.9998849991835528	WITHOUT_CLASSIFICATION	1.1500081644719665E-4	IMPLEMENTATION
// Return false here	WITHOUT_CLASSIFICATION	0.9998849991835528	WITHOUT_CLASSIFICATION	1.1500081644719665E-4	IMPLEMENTATION
// We're not actually a real file, so we can't flock	WITHOUT_CLASSIFICATION	0.9984791357004446	WITHOUT_CLASSIFICATION	0.0015208642995554482	IMPLEMENTATION
// Should we do anything?	WITHOUT_CLASSIFICATION	0.9999526072551138	WITHOUT_CLASSIFICATION	4.739274488611178E-5	IMPLEMENTATION
/* File class methods */	WITHOUT_CLASSIFICATION	0.9999986402221438	WITHOUT_CLASSIFICATION	1.3597778561537285E-6	IMPLEMENTATION
// MRI-compatible basename handling for windows drive letter paths	WITHOUT_CLASSIFICATION	0.9999458270135473	WITHOUT_CLASSIFICATION	5.4172986452735844E-5	IMPLEMENTATION
// strip c: away from relative-pathed name	WITHOUT_CLASSIFICATION	0.9999211678031621	WITHOUT_CLASSIFICATION	7.88321968378687E-5	IMPLEMENTATION
// C:\ is returned unchanged	WITHOUT_CLASSIFICATION	0.9999895275018894	WITHOUT_CLASSIFICATION	1.0472498110621029E-5	IMPLEMENTATION
// -1 no match; 0 it is dot file not extension	WITHOUT_CLASSIFICATION	0.9992357325573707	WITHOUT_CLASSIFICATION	7.64267442629259E-4	IMPLEMENTATION
// trim trailing slashes	WITHOUT_CLASSIFICATION	0.999889711519983	WITHOUT_CLASSIFICATION	1.1028848001704182E-4	IMPLEMENTATION
// Dot is not at beginning and not at end of filename. 	WITHOUT_CLASSIFICATION	0.9982534010985619	WITHOUT_CLASSIFICATION	0.0017465989014381301	IMPLEMENTATION
// Handle ~user paths 	WITHOUT_CLASSIFICATION	0.9999567788880186	WITHOUT_CLASSIFICATION	4.322111198143101E-5	IMPLEMENTATION
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9999052053636079	WITHOUT_CLASSIFICATION	9.479463639207763E-5	IMPLEMENTATION
// Include additional path separator // (so that dirname of "C:\file.txt" is  "C:\", not "C:")	WITHOUT_CLASSIFICATION	0.9942919336902512	WITHOUT_CLASSIFICATION	0.005708066309748916	IMPLEMENTATION
// FNFException can be thrown in both cases, when the file // is not found, or when permission is denied.	WITHOUT_CLASSIFICATION	0.9999389268142646	WITHOUT_CLASSIFICATION	6.107318573538846E-5	IMPLEMENTATION
// No directory delimeter.  Rest of string is username	WITHOUT_CLASSIFICATION	0.9999999672709048	WITHOUT_CLASSIFICATION	3.272909519078767E-8	IMPLEMENTATION
// If there's a second argument, it's the path to which the first  // argument is relative.	WITHOUT_CLASSIFICATION	0.999967597907451	WITHOUT_CLASSIFICATION	3.2402092548956074E-5	IMPLEMENTATION
// Handle ~user paths.	WITHOUT_CLASSIFICATION	0.9999517295349049	WITHOUT_CLASSIFICATION	4.827046509509524E-5	IMPLEMENTATION
// If there's no second argument, simply use the working directory  // of the runtime.	WITHOUT_CLASSIFICATION	0.9999796772759277	WITHOUT_CLASSIFICATION	2.0322724072267828E-5	IMPLEMENTATION
// Find out which string to check.	WITHOUT_CLASSIFICATION	0.9999981937990464	WITHOUT_CLASSIFICATION	1.8062009535077303E-6	IMPLEMENTATION
// Single '~' as whole path to expand	WITHOUT_CLASSIFICATION	0.9999606668027926	WITHOUT_CLASSIFICATION	3.933319720741231E-5	IMPLEMENTATION
// Count number of extra slashes in the beginning of the string.	WITHOUT_CLASSIFICATION	0.9999906471436465	WITHOUT_CLASSIFICATION	9.352856353571714E-6	IMPLEMENTATION
// '~user/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999706696231409	WITHOUT_CLASSIFICATION	2.933037685907071E-5	IMPLEMENTATION
// '~/...' as path to expand	WITHOUT_CLASSIFICATION	0.999979794725635	WITHOUT_CLASSIFICATION	2.0205274364906717E-5	IMPLEMENTATION
// Prepare a string with the same number of redundant slashes so that  // we easily can prepend it to the result.	WITHOUT_CLASSIFICATION	0.9999952987124939	WITHOUT_CLASSIFICATION	4.701287506062017E-6	IMPLEMENTATION
// If there are N slashes, then we want N-1.	WITHOUT_CLASSIFICATION	0.9999733818259733	WITHOUT_CLASSIFICATION	2.661817402675038E-5	IMPLEMENTATION
// no canonical path yet or length is zero, and we have a / followed by a dot...	WITHOUT_CLASSIFICATION	0.9999750986445439	WITHOUT_CLASSIFICATION	2.490135545602236E-5	IMPLEMENTATION
// we don't have another slash after this, so replace /. with /	WITHOUT_CLASSIFICATION	0.9992777068557296	WITHOUT_CLASSIFICATION	7.222931442702999E-4	IMPLEMENTATION
// we do have another slash; omit both / and . (JRUBY-1606)	WITHOUT_CLASSIFICATION	0.9999544745821366	WITHOUT_CLASSIFICATION	4.5525417863336505E-5	IMPLEMENTATION
// do nothing, we should not delete the drive letter	WITHOUT_CLASSIFICATION	0.991796222788162	WITHOUT_CLASSIFICATION	0.008203777211837961	IMPLEMENTATION
/* rb: check_modifiable */	WITHOUT_CLASSIFICATION	0.9999892917034561	WITHOUT_CLASSIFICATION	1.0708296543963984E-5	IMPLEMENTATION
/* rb: readable */	WITHOUT_CLASSIFICATION	0.9999596569886406	WITHOUT_CLASSIFICATION	4.034301135942233E-5	IMPLEMENTATION
// rename is successful	WITHOUT_CLASSIFICATION	0.9999812633542016	WITHOUT_CLASSIFICATION	1.8736645798500737E-5	IMPLEMENTATION
// rename via Java API call wasn't successful, let's try some tricks, similar to MRI 	WITHOUT_CLASSIFICATION	0.999979614341125	WITHOUT_CLASSIFICATION	2.03856588749129E-5	IMPLEMENTATION
// try to rename one more time	WITHOUT_CLASSIFICATION	0.9999262352517966	WITHOUT_CLASSIFICATION	7.376474820340954E-5	IMPLEMENTATION
// Can we produce IOError which bypasses a close?	WITHOUT_CLASSIFICATION	0.9997883467785115	WITHOUT_CLASSIFICATION	2.1165322148857007E-4	IMPLEMENTATION
// Fast path since JNA stat is about 10x slower than this	WITHOUT_CLASSIFICATION	0.999979431224116	WITHOUT_CLASSIFICATION	2.0568775883917197E-5	IMPLEMENTATION
// RubyContinuation	WITHOUT_CLASSIFICATION	0.9996615266859028	WITHOUT_CLASSIFICATION	3.3847331409717497E-4	IMPLEMENTATION
/*     *  Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq)     *  it doesn't initialize ifNone field     */	WITHOUT_CLASSIFICATION	0.9999997872925683	WITHOUT_CLASSIFICATION	2.127074316723908E-7	IMPLEMENTATION
// 16 ?	WITHOUT_CLASSIFICATION	0.9999973155971976	WITHOUT_CLASSIFICATION	2.6844028023793626E-6	IMPLEMENTATION
// generation count for O(1) clears	WITHOUT_CLASSIFICATION	0.999969930866175	WITHOUT_CLASSIFICATION	3.006913382491659E-5	IMPLEMENTATION
// size + 1;	WITHOUT_CLASSIFICATION	0.9998594288093251	WITHOUT_CLASSIFICATION	1.4057119067499056E-4	IMPLEMENTATION
// suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen	WITHOUT_CLASSIFICATION	0.9997225608031058	WITHOUT_CLASSIFICATION	2.7743919689418063E-4	IMPLEMENTATION
// ------------------------------	WITHOUT_CLASSIFICATION	0.9999186038135726	WITHOUT_CLASSIFICATION	8.139618642742705E-5	IMPLEMENTATION
// ------------------------------	WITHOUT_CLASSIFICATION	0.9999186038135726	WITHOUT_CLASSIFICATION	8.139618642742705E-5	IMPLEMENTATION
// put implementation	WITHOUT_CLASSIFICATION	0.998899502216559	WITHOUT_CLASSIFICATION	0.0011004977834409941	IMPLEMENTATION
// get implementation	WITHOUT_CLASSIFICATION	0.9997226410591291	WITHOUT_CLASSIFICATION	2.7735894087092453E-4	IMPLEMENTATION
// specialized for value	WITHOUT_CLASSIFICATION	0.9999927874325908	WITHOUT_CLASSIFICATION	7.2125674092175655E-6	IMPLEMENTATION
// delete implementation	WITHOUT_CLASSIFICATION	0.999087263723402	WITHOUT_CLASSIFICATION	9.127362765979652E-4	IMPLEMENTATION
// n.b. we need to recompute the hash in case the key object was modified	WITHOUT_CLASSIFICATION	0.9999520562721165	WITHOUT_CLASSIFICATION	4.7943727883483194E-5	IMPLEMENTATION
/* ============================     * End of hash internals     * ============================     */	WITHOUT_CLASSIFICATION	0.9999968536579424	WITHOUT_CLASSIFICATION	3.1463420575704723E-6	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================     */	WITHOUT_CLASSIFICATION	0.999997677233808	WITHOUT_CLASSIFICATION	2.3227661920504774E-6	IMPLEMENTATION
// update the hash value	WITHOUT_CLASSIFICATION	0.9999906332201358	WITHOUT_CLASSIFICATION	9.36677986411994E-6	IMPLEMENTATION
// other hash does not contain key	WITHOUT_CLASSIFICATION	0.9963314119674331	WITHOUT_CLASSIFICATION	0.003668588032566813	IMPLEMENTATION
// rb_yield_values(2,...) equivalent	WITHOUT_CLASSIFICATION	0.9997806673448364	WITHOUT_CLASSIFICATION	2.1933265516364825E-4	IMPLEMENTATION
// Satisfy java.util.Set interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999737132888016	WITHOUT_CLASSIFICATION	2.6286711198316885E-5	IMPLEMENTATION
// remain where we are	WITHOUT_CLASSIFICATION	0.9999278815014235	WITHOUT_CLASSIFICATION	7.211849857645165E-5	IMPLEMENTATION
// We use file test since it is faster than a stat; also euid == uid in Java always	WITHOUT_CLASSIFICATION	0.9999989976816388	WITHOUT_CLASSIFICATION	1.0023183611449016E-6	IMPLEMENTATION
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999656449874703	WITHOUT_CLASSIFICATION	3.4355012529712055E-5	IMPLEMENTATION
// once hasNext has been called, we commit to next() returning // the entry it found, even if it were subsequently deleted	WITHOUT_CLASSIFICATION	0.9896986626441058	WITHOUT_CLASSIFICATION	0.010301337355894277	IMPLEMENTATION
// Not exposed by filetest, but so similiar in nature that it is stored here	WITHOUT_CLASSIFICATION	0.9999870203317409	WITHOUT_CLASSIFICATION	1.2979668259069536E-5	IMPLEMENTATION
// We do both writable and writable_real through the same method because // in our java process effective and real userid will always be the same.	WITHOUT_CLASSIFICATION	0.9999990911885426	WITHOUT_CLASSIFICATION	9.088114573744662E-7	IMPLEMENTATION
// first try as directory	WITHOUT_CLASSIFICATION	0.9999986630261055	WITHOUT_CLASSIFICATION	1.3369738945890966E-6	IMPLEMENTATION
// next as regular file	WITHOUT_CLASSIFICATION	0.9999513486264886	WITHOUT_CLASSIFICATION	4.865137351136924E-5	IMPLEMENTATION
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9998946412347058	WITHOUT_CLASSIFICATION	1.0535876529427895E-4	IMPLEMENTATION
// NIO-based	WITHOUT_CLASSIFICATION	0.9996615266859028	WITHOUT_CLASSIFICATION	3.3847331409717497E-4	IMPLEMENTATION
// NIO-based	WITHOUT_CLASSIFICATION	0.9996615266859028	WITHOUT_CLASSIFICATION	3.3847331409717497E-4	IMPLEMENTATION
// Stream-based	WITHOUT_CLASSIFICATION	0.9996615266859028	WITHOUT_CLASSIFICATION	3.3847331409717497E-4	IMPLEMENTATION
// special constructor that accepts stream, not channel	WITHOUT_CLASSIFICATION	0.9962003061447785	WITHOUT_CLASSIFICATION	0.0037996938552214274	IMPLEMENTATION
/*     * We use FILE versus IO to match T_FILE in MRI.     */	WITHOUT_CLASSIFICATION	0.9999995485872065	WITHOUT_CLASSIFICATION	4.5141279345908244E-7	IMPLEMENTATION
// Constants for seek	WITHOUT_CLASSIFICATION	0.9999716848665946	WITHOUT_CLASSIFICATION	2.8315133405423307E-5	IMPLEMENTATION
// confirm we're not reopening self's channel	WITHOUT_CLASSIFICATION	0.9985679075245828	WITHOUT_CLASSIFICATION	0.0014320924754171482	IMPLEMENTATION
// check if we're a stdio IO, and ensure we're not badly mutilated	WITHOUT_CLASSIFICATION	0.999747330332958	WITHOUT_CLASSIFICATION	2.5266966704200677E-4	IMPLEMENTATION
// dup2 new fd into self to preserve fileno and references to it	WITHOUT_CLASSIFICATION	0.9999270226759235	WITHOUT_CLASSIFICATION	7.297732407661045E-5	IMPLEMENTATION
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999961957661424	WITHOUT_CLASSIFICATION	3.80423385765092E-6	IMPLEMENTATION
// re-register the descriptor	WITHOUT_CLASSIFICATION	0.9999479147353375	WITHOUT_CLASSIFICATION	5.2085264662526595E-5	IMPLEMENTATION
// since we're not actually duping the incoming channel into our handler, we need to // copy the original sync behavior from the other handler	WITHOUT_CLASSIFICATION	0.9999016172930618	WITHOUT_CLASSIFICATION	9.838270693818823E-5	IMPLEMENTATION
// re-register	WITHOUT_CLASSIFICATION	0.9996615266859028	WITHOUT_CLASSIFICATION	3.3847331409717497E-4	IMPLEMENTATION
// A potentially previously close IO is being 'reopened'.	WITHOUT_CLASSIFICATION	0.9999940867615456	WITHOUT_CLASSIFICATION	5.9132384544186625E-6	IMPLEMENTATION
/*     * Ensure that separator is valid otherwise give it the default paragraph separator.     */	WITHOUT_CLASSIFICATION	0.9999679510933633	WITHOUT_CLASSIFICATION	3.204890663670133E-5	IMPLEMENTATION
// loop until we see the nth separator char	WITHOUT_CLASSIFICATION	0.9999916326144834	WITHOUT_CLASSIFICATION	8.367385516555943E-6	IMPLEMENTATION
// if we hit EOF or reached limit then we're done	WITHOUT_CLASSIFICATION	0.9999840966697373	WITHOUT_CLASSIFICATION	1.5903330262624804E-5	IMPLEMENTATION
// this is for a range check, near as I can tell	WITHOUT_CLASSIFICATION	0.9999128240226971	WITHOUT_CLASSIFICATION	8.71759773028783E-5	IMPLEMENTATION
// IO class methods.	WITHOUT_CLASSIFICATION	0.9999145050402359	WITHOUT_CLASSIFICATION	8.549495976415187E-5	IMPLEMENTATION
// use original modes	WITHOUT_CLASSIFICATION	0.9998358215774644	WITHOUT_CLASSIFICATION	1.6417842253556997E-4	IMPLEMENTATION
// See if we already have this descriptor open. // If so then we can mostly share the handler (keep open // file, but possibly change the mode).	WITHOUT_CLASSIFICATION	0.9999995641169687	WITHOUT_CLASSIFICATION	4.358830312910245E-7	IMPLEMENTATION
// redundant, done above as well	WITHOUT_CLASSIFICATION	0.9999578360011664	WITHOUT_CLASSIFICATION	4.216399883369961E-5	IMPLEMENTATION
// MRI behavior: swallow StandardErorrs	WITHOUT_CLASSIFICATION	0.9999198395527342	WITHOUT_CLASSIFICATION	8.016044726575939E-5	IMPLEMENTATION
// -1 == don't set permissions	WITHOUT_CLASSIFICATION	0.9999603167478384	WITHOUT_CLASSIFICATION	3.9683252161571916E-5	IMPLEMENTATION
// isRetained=true	WITHOUT_CLASSIFICATION	0.9996615266859028	WITHOUT_CLASSIFICATION	3.3847331409717497E-4	IMPLEMENTATION
// This appears to be some windows-only mode.  On a java platform this is a no-op	WITHOUT_CLASSIFICATION	0.9999505362810814	WITHOUT_CLASSIFICATION	4.9463718918614083E-5	IMPLEMENTATION
// if not sync, we switch to write buffered mode	WITHOUT_CLASSIFICATION	0.999298324462943	WITHOUT_CLASSIFICATION	7.016755370569722E-4	IMPLEMENTATION
/*     * Throw bad file descriptor is we can not read on supplied descriptor.     */	WITHOUT_CLASSIFICATION	0.9996062833540558	WITHOUT_CLASSIFICATION	3.93716645944147E-4	IMPLEMENTATION
//Everything written	WITHOUT_CLASSIFICATION	0.9988759132700971	WITHOUT_CLASSIFICATION	0.0011240867299029565	IMPLEMENTATION
//            return len - n;	WITHOUT_CLASSIFICATION	0.9999597375093872	WITHOUT_CLASSIFICATION	4.02624906127795E-5	IMPLEMENTATION
// Claims conversion is done via 'to_s' in docs.	WITHOUT_CLASSIFICATION	0.999997406741302	WITHOUT_CLASSIFICATION	2.5932586979959407E-6	IMPLEMENTATION
// Of course this isn't particularly useful.	WITHOUT_CLASSIFICATION	0.9999276573112231	WITHOUT_CLASSIFICATION	7.234268877689166E-5	IMPLEMENTATION
// Must be back on first line on rewind.	WITHOUT_CLASSIFICATION	0.9998518449632622	WITHOUT_CLASSIFICATION	1.4815503673782878E-4	IMPLEMENTATION
// Register the new descriptor	WITHOUT_CLASSIFICATION	0.9998262365235239	WITHOUT_CLASSIFICATION	1.737634764761241E-4	IMPLEMENTATION
// cleanup, raising errors if any	WITHOUT_CLASSIFICATION	0.9999651056534526	WITHOUT_CLASSIFICATION	3.489434654737303E-5	IMPLEMENTATION
// hmmmm	WITHOUT_CLASSIFICATION	0.9999935752659732	WITHOUT_CLASSIFICATION	6.424734026853922E-6	IMPLEMENTATION
// I believe Ruby bails out with a "bug" if closing fails	WITHOUT_CLASSIFICATION	0.9998201154168199	WITHOUT_CLASSIFICATION	1.79884583180138E-4	IMPLEMENTATION
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec. // And why the hell does webrick pass this in as a first argument!!!!!	WITHOUT_CLASSIFICATION	0.9999999797346237	WITHOUT_CLASSIFICATION	2.0265376224298782E-8	IMPLEMENTATION
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec.	WITHOUT_CLASSIFICATION	0.9999998013430392	WITHOUT_CLASSIFICATION	1.986569608018065E-7	IMPLEMENTATION
// Length to read	WITHOUT_CLASSIFICATION	0.9999310715677202	WITHOUT_CLASSIFICATION	6.892843227981283E-5	IMPLEMENTATION
// String/Buffer to read it into	WITHOUT_CLASSIFICATION	0.9999858772328973	WITHOUT_CLASSIFICATION	1.4122767102787185E-5	IMPLEMENTATION
// cryptic for the uninitiated...	WITHOUT_CLASSIFICATION	0.9999546957761946	WITHOUT_CLASSIFICATION	4.530422380532263E-5	IMPLEMENTATION
// select until read is ready	WITHOUT_CLASSIFICATION	0.9999893945632445	WITHOUT_CLASSIFICATION	1.06054367554555E-5	IMPLEMENTATION
//        ByteList buffer = null;	WITHOUT_CLASSIFICATION	0.9999156791765039	WITHOUT_CLASSIFICATION	8.432082349611767E-5	IMPLEMENTATION
//            buffer = str.getByteList();	WITHOUT_CLASSIFICATION	0.9999078693599721	WITHOUT_CLASSIFICATION	9.213064002795637E-5	IMPLEMENTATION
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999877237416552	WITHOUT_CLASSIFICATION	1.2276258344795764E-5	IMPLEMENTATION
/* rb: writable */	WITHOUT_CLASSIFICATION	0.9999354232136133	WITHOUT_CLASSIFICATION	6.457678638666016E-5	IMPLEMENTATION
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999877237416552	WITHOUT_CLASSIFICATION	1.2276258344795764E-5	IMPLEMENTATION
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999969452205165	WITHOUT_CLASSIFICATION	3.0547794835514233E-6	IMPLEMENTATION
// TODO: read into buffer using all the fread logic //        int read = openFile.getMainStream().fread(buffer);	WITHOUT_CLASSIFICATION	0.589630679158594	WITHOUT_CLASSIFICATION	0.41036932084140604	IMPLEMENTATION
// truncate buffer string to zero, if provided	WITHOUT_CLASSIFICATION	0.9999997228364639	WITHOUT_CLASSIFICATION	2.7716353613402644E-7	IMPLEMENTATION
// TODO: READ_CHECK from MRI	WITHOUT_CLASSIFICATION	0.7631417302126339	WITHOUT_CLASSIFICATION	0.23685826978736618	IMPLEMENTATION
/* class methods for IO */	WITHOUT_CLASSIFICATION	0.9999978359541511	WITHOUT_CLASSIFICATION	2.1640458488310535E-6	IMPLEMENTATION
// save blocking state	WITHOUT_CLASSIFICATION	0.999985081723047	WITHOUT_CLASSIFICATION	1.4918276952916824E-5	IMPLEMENTATION
// write	WITHOUT_CLASSIFICATION	0.9999953725553717	WITHOUT_CLASSIFICATION	4.627444628266009E-6	IMPLEMENTATION
// Java's select doesn't do anything about this, so we leave it be.	WITHOUT_CLASSIFICATION	0.9998386217933407	WITHOUT_CLASSIFICATION	1.6137820665935274E-4	IMPLEMENTATION
// make all sockets blocking as configured again // close unregisters all channels, so we can safely reset blocking modes	WITHOUT_CLASSIFICATION	0.9999764065547897	WITHOUT_CLASSIFICATION	2.3593445210220066E-5	IMPLEMENTATION
// FIXME: process options	WITHOUT_CLASSIFICATION	0.9822711968692791	WITHOUT_CLASSIFICATION	0.01772880313072086	IMPLEMENTATION
// Enebo: annotation processing forced me to do pangea method here...	WITHOUT_CLASSIFICATION	0.9997403362119478	WITHOUT_CLASSIFICATION	2.5966378805226275E-4	IMPLEMENTATION
// NIO based pipe	WITHOUT_CLASSIFICATION	0.999690710738676	WITHOUT_CLASSIFICATION	3.092892613239396E-4	IMPLEMENTATION
// not using remove(Object) here to avoid the equals() call	WITHOUT_CLASSIFICATION	0.9911458816354926	WITHOUT_CLASSIFICATION	0.008854118364507432	IMPLEMENTATION
// raise will also wake the thread from selection	WITHOUT_CLASSIFICATION	0.999992272097541	WITHOUT_CLASSIFICATION	7.727902458969685E-6	IMPLEMENTATION
/* may need to handle ENC_CODERANGE_BROKEN */	WITHOUT_CLASSIFICATION	0.9992233450254009	WITHOUT_CLASSIFICATION	7.766549745990468E-4	IMPLEMENTATION
// TODO: rb_usascii_str_new2	WITHOUT_CLASSIFICATION	0.5866739461016572	IMPLEMENTATION	0.4133260538983427	WITHOUT_CLASSIFICATION
// If we know what method was being called, strip everything // before the call. This hides the JRuby and reflection internals.	WITHOUT_CLASSIFICATION	0.9760439258973723	WITHOUT_CLASSIFICATION	0.02395607410262776	IMPLEMENTATION
// The class of this object	WITHOUT_CLASSIFICATION	0.9999909520839007	WITHOUT_CLASSIFICATION	9.047916099373479E-6	IMPLEMENTATION
// zeroed by jvm	WITHOUT_CLASSIFICATION	0.9998461316077282	WITHOUT_CLASSIFICATION	1.5386839227172756E-4	IMPLEMENTATION
//objectClass.defineAnnotatedMethods(BasicObjectMethods.class);	WITHOUT_CLASSIFICATION	0.9996983594805002	WITHOUT_CLASSIFICATION	3.016405194996755E-4	IMPLEMENTATION
// JRUBY-4113: callers should not call setTaint on immediate objects	WITHOUT_CLASSIFICATION	0.9654202208581688	WITHOUT_CLASSIFICATION	0.03457977914183124	IMPLEMENTATION
// rb_class_boot	WITHOUT_CLASSIFICATION	0.9996615266859028	WITHOUT_CLASSIFICATION	3.3847331409717497E-4	IMPLEMENTATION
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999892917034561	WITHOUT_CLASSIFICATION	1.0708296543963984E-5	IMPLEMENTATION
// 1.9 rb_check_to_integer	WITHOUT_CLASSIFICATION	0.9999438606165095	WITHOUT_CLASSIFICATION	5.6139383490612176E-5	IMPLEMENTATION
// for interface impls	WITHOUT_CLASSIFICATION	0.9999919112542522	WITHOUT_CLASSIFICATION	8.088745747687733E-6	IMPLEMENTATION
// We're cloning ourselves, so we know the result should be a RubyObject	WITHOUT_CLASSIFICATION	0.9995723326409461	WITHOUT_CLASSIFICATION	4.276673590538508E-4	IMPLEMENTATION
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999939874389575	WITHOUT_CLASSIFICATION	6.012561042464221E-6	IMPLEMENTATION
// can't use -v and stdin	WITHOUT_CLASSIFICATION	0.9999295699858137	WITHOUT_CLASSIFICATION	7.043001418627336E-5	IMPLEMENTATION
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.999922997391377	WITHOUT_CLASSIFICATION	7.700260862301863E-5	IMPLEMENTATION
// Equivalent of Data_Get_Struct // This will first check that the object in question is actually a T_DATA equivalent.	WITHOUT_CLASSIFICATION	0.9999985538250789	WITHOUT_CLASSIFICATION	1.4461749211112643E-6	IMPLEMENTATION
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999190358542113	WITHOUT_CLASSIFICATION	8.09641457887461E-5	IMPLEMENTATION
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999190358542113	WITHOUT_CLASSIFICATION	8.09641457887461E-5	IMPLEMENTATION
// // INSTANCE VARIABLE API METHODS //	WITHOUT_CLASSIFICATION	0.9999434265052903	WITHOUT_CLASSIFICATION	5.657349470965763E-5	IMPLEMENTATION
// Struct methods	WITHOUT_CLASSIFICATION	0.9996143442184584	WITHOUT_CLASSIFICATION	3.85655781541695E-4	IMPLEMENTATION
//runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);	WITHOUT_CLASSIFICATION	0.9994755461773075	WITHOUT_CLASSIFICATION	5.244538226924122E-4	IMPLEMENTATION
// define access methods.	WITHOUT_CLASSIFICATION	0.9999856190326011	WITHOUT_CLASSIFICATION	1.4380967398916443E-5	IMPLEMENTATION
// if we are storing a name as well, index is one too high for values	WITHOUT_CLASSIFICATION	0.9999999469214251	WITHOUT_CLASSIFICATION	5.307857475653451E-8	IMPLEMENTATION
// Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999973049400062	WITHOUT_CLASSIFICATION	2.6950599937943334E-6	IMPLEMENTATION
// For binding purposes on the newly created struct types	WITHOUT_CLASSIFICATION	0.9998631546690566	WITHOUT_CLASSIFICATION	1.368453309433848E-4	IMPLEMENTATION
// OBJ_INFECT        	WITHOUT_CLASSIFICATION	0.9999438606165095	WITHOUT_CLASSIFICATION	5.6139383490612176E-5	IMPLEMENTATION
// These call* assume ThreadContext = receiver.getRuntime().getCurrentContext()	WITHOUT_CLASSIFICATION	0.9998971755750379	WITHOUT_CLASSIFICATION	1.0282442496213469E-4	IMPLEMENTATION
// Execute iterateMethod again.	WITHOUT_CLASSIFICATION	0.9999524164136075	WITHOUT_CLASSIFICATION	4.758358639236873E-5	IMPLEMENTATION
/*     * @param nv number of times to cycle or -1 to cycle indefinitely     */	WITHOUT_CLASSIFICATION	0.9999995964094895	WITHOUT_CLASSIFICATION	4.035905105379355E-7	IMPLEMENTATION
// Atomic ?	WITHOUT_CLASSIFICATION	0.9998570773904605	WITHOUT_CLASSIFICATION	1.4292260953952438E-4	IMPLEMENTATION
// Atomic ?	WITHOUT_CLASSIFICATION	0.9998570773904605	WITHOUT_CLASSIFICATION	1.4292260953952438E-4	IMPLEMENTATION
// MUST NOT be used across threads	WITHOUT_CLASSIFICATION	0.9999873321557058	WITHOUT_CLASSIFICATION	1.2667844294165621E-5	IMPLEMENTATION
// superClass may be null.	WITHOUT_CLASSIFICATION	0.999980695812827	WITHOUT_CLASSIFICATION	1.9304187172957347E-5	IMPLEMENTATION
// Containing class...The parent of Object is null. Object should always be last in chain.	WITHOUT_CLASSIFICATION	0.9999989407659545	WITHOUT_CLASSIFICATION	1.059234045524144E-6	IMPLEMENTATION
// ClassId is the name of the class/module sans where it is located. // If it is null, then it an anonymous class.	WITHOUT_CLASSIFICATION	0.9999912161014685	WITHOUT_CLASSIFICATION	8.783898531644331E-6	IMPLEMENTATION
// ClassProviders return Java class/module (in #defineOrGetClassUnder and // #defineOrGetModuleUnder) when class/module is opened using colon syntax. 	WITHOUT_CLASSIFICATION	0.9999942514873266	WITHOUT_CLASSIFICATION	5.748512673452549E-6	IMPLEMENTATION
// update superclass reference	WITHOUT_CLASSIFICATION	0.999994043651508	WITHOUT_CLASSIFICATION	5.956348492054056E-6	IMPLEMENTATION
// Make sure the module we include does not already exist	WITHOUT_CLASSIFICATION	0.9980322681403637	WITHOUT_CLASSIFICATION	0.001967731859636255	IMPLEMENTATION
// MRI checks all types first:	WITHOUT_CLASSIFICATION	0.9999130592877867	WITHOUT_CLASSIFICATION	8.694071221327382E-5	IMPLEMENTATION
// we need full traces, use default (slow) populator	WITHOUT_CLASSIFICATION	0.9997122057609483	WITHOUT_CLASSIFICATION	2.877942390517318E-4	IMPLEMENTATION
// module/singleton methods are all defined public	WITHOUT_CLASSIFICATION	0.9999950194262041	WITHOUT_CLASSIFICATION	4.980573795907326E-6	IMPLEMENTATION
// See if module is in chain...Cannot match against itself so start at superClass.	WITHOUT_CLASSIFICATION	0.9999998642080191	WITHOUT_CLASSIFICATION	1.3579198086283E-7	IMPLEMENTATION
// We can safely reference methods here instead of doing getMethods() since if we // are adding we are not using a IncludedModuleWrapper.	WITHOUT_CLASSIFICATION	0.9999316532963713	WITHOUT_CLASSIFICATION	6.834670362857667E-5	IMPLEMENTATION
// we grab serial number first; the worst that will happen is we cache a later // update with an earlier serial number, which would just flush anyway	WITHOUT_CLASSIFICATION	0.9999883716163323	WITHOUT_CLASSIFICATION	1.1628383667715676E-5	IMPLEMENTATION
// update all hierarchies into which this module has been included	WITHOUT_CLASSIFICATION	0.9999511999342865	WITHOUT_CLASSIFICATION	4.8800065713460125E-5	IMPLEMENTATION
// This method is intended only for defining new classes in Ruby code, // so it uses the allocator of the specified superclass or default to // the Object allocator. It should NOT be used to define classes that require a native allocator.	WITHOUT_CLASSIFICATION	0.9999997323659183	WITHOUT_CLASSIFICATION	2.676340817075479E-7	IMPLEMENTATION
// need to skip IncludedModuleWrappers	WITHOUT_CLASSIFICATION	0.9996485602679401	WITHOUT_CLASSIFICATION	3.51439732059882E-4	IMPLEMENTATION
// superClazz = null;	WITHOUT_CLASSIFICATION	0.9999344179052089	WITHOUT_CLASSIFICATION	6.558209479108802E-5	IMPLEMENTATION
// reopen a java class	WITHOUT_CLASSIFICATION	0.9999864874724508	WITHOUT_CLASSIFICATION	1.3512527549238901E-5	IMPLEMENTATION
// This method is intended only for defining new modules in Ruby code	WITHOUT_CLASSIFICATION	0.9999963131448403	WITHOUT_CLASSIFICATION	3.686855159836357E-6	IMPLEMENTATION
// reopen a java module	WITHOUT_CLASSIFICATION	0.999958660351754	WITHOUT_CLASSIFICATION	4.1339648245984884E-5	IMPLEMENTATION
//FIXME warning	WITHOUT_CLASSIFICATION	0.99885104990664	WITHOUT_CLASSIFICATION	0.0011489500933600308	IMPLEMENTATION
// FIXME warning	WITHOUT_CLASSIFICATION	0.9955682688999016	WITHOUT_CLASSIFICATION	0.004431731100098508	IMPLEMENTATION
// a normal block passed to define_method changes to do arity checking; make it a lambda	WITHOUT_CLASSIFICATION	0.9979649877811819	WITHOUT_CLASSIFICATION	0.0020350122188181456	IMPLEMENTATION
// for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope	WITHOUT_CLASSIFICATION	0.9999966417615067	WITHOUT_CLASSIFICATION	3.3582384932411127E-6	IMPLEMENTATION
// just using required is broken...but no more broken than before zsuper refactoring	WITHOUT_CLASSIFICATION	0.9999663359277976	WITHOUT_CLASSIFICATION	3.3664072202268336E-5	IMPLEMENTATION
// class and module bodies default to public, so make the block's visibility public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.999996084392181	WITHOUT_CLASSIFICATION	3.915607818984094E-6	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.999999946722332	WITHOUT_CLASSIFICATION	5.327766810932938E-8	IMPLEMENTATION
// MRI error message says Class, even though Module is ok 	WITHOUT_CLASSIFICATION	0.9999055103757825	WITHOUT_CLASSIFICATION	9.448962421764648E-5	IMPLEMENTATION
// scan class hierarchy for module	WITHOUT_CLASSIFICATION	0.9999910159249512	WITHOUT_CLASSIFICATION	8.984075048782836E-6	IMPLEMENTATION
/* Module class methods */	WITHOUT_CLASSIFICATION	0.9999955878842011	WITHOUT_CLASSIFICATION	4.412115799009541E-6	IMPLEMENTATION
// Note: we change current frames visibility here because the methods which call // this method are all "fast" (e.g. they do not created their own frame).	WITHOUT_CLASSIFICATION	0.999251811857125	WITHOUT_CLASSIFICATION	7.481881428750756E-4	IMPLEMENTATION
// next in hierarchy is an included version of the module we're attempting, // so we skip including it	WITHOUT_CLASSIFICATION	0.9999961182041794	WITHOUT_CLASSIFICATION	3.881795820539735E-6	IMPLEMENTATION
// if we haven't encountered a real superclass, use the found module as the new inclusion point	WITHOUT_CLASSIFICATION	0.9999657195240618	WITHOUT_CLASSIFICATION	3.428047593819261E-5	IMPLEMENTATION
// build a list of all modules to consider for inclusion	WITHOUT_CLASSIFICATION	0.9999805222752346	WITHOUT_CLASSIFICATION	1.9477724765428828E-5	IMPLEMENTATION
// if the insertion point is a class, update subclass lists	WITHOUT_CLASSIFICATION	0.9999987220762759	WITHOUT_CLASSIFICATION	1.2779237241286882E-6	IMPLEMENTATION
// if there's a non-null superclass, we're including into a normal class hierarchy; // update subclass relationships to avoid stale parent/child relationships	WITHOUT_CLASSIFICATION	0.9999951261274113	WITHOUT_CLASSIFICATION	4.873872588772314E-6	IMPLEMENTATION
// ////////////////// CLASS VARIABLE RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999259039327959	WITHOUT_CLASSIFICATION	7.409606720415686E-5	IMPLEMENTATION
// ////////////////// CONSTANT RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.99992464634268	WITHOUT_CLASSIFICATION	7.535365732006936E-5	IMPLEMENTATION
// Note: includes part of fix for JRUBY-1339	WITHOUT_CLASSIFICATION	0.9999343216367506	WITHOUT_CLASSIFICATION	6.567836324948102E-5	IMPLEMENTATION
// ////////////////// CLASS VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999482256651834	WITHOUT_CLASSIFICATION	5.177433481654421E-5	IMPLEMENTATION
// Wrong Parameter ?	WITHOUT_CLASSIFICATION	0.9998601739943355	WITHOUT_CLASSIFICATION	1.398260056645345E-4	IMPLEMENTATION
// not actually called anywhere (all known uses call the fast version)	WITHOUT_CLASSIFICATION	0.9993460331373949	WITHOUT_CLASSIFICATION	6.539668626050039E-4	IMPLEMENTATION
// Not that is loaded loop around to resolve it next pass	WITHOUT_CLASSIFICATION	0.9997645095980917	WITHOUT_CLASSIFICATION	2.354904019084178E-4	IMPLEMENTATION
// if adding a module under a constant name, set that module's basename to the constant name	WITHOUT_CLASSIFICATION	0.9996964195667645	WITHOUT_CLASSIFICATION	3.0358043323551026E-4	IMPLEMENTATION
// Fix for JRUBY-1339 - search hierarchy for constant	WITHOUT_CLASSIFICATION	0.9995617367477252	WITHOUT_CLASSIFICATION	4.382632522747888E-4	IMPLEMENTATION
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999880533972462	WITHOUT_CLASSIFICATION	1.1946602753846024E-5	IMPLEMENTATION
// removes and returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999938606453412	WITHOUT_CLASSIFICATION	6.139354658764043E-6	IMPLEMENTATION
// we can't rename a file while it's open in windows	WITHOUT_CLASSIFICATION	0.9999953977252093	WITHOUT_CLASSIFICATION	4.6022747906643985E-6	IMPLEMENTATION
//reopen	WITHOUT_CLASSIFICATION	0.999976214108194	WITHOUT_CLASSIFICATION	2.378589180606253E-5	IMPLEMENTATION
// ARGF methods	WITHOUT_CLASSIFICATION	0.9996143442184584	WITHOUT_CLASSIFICATION	3.85655781541695E-4	IMPLEMENTATION
//         data.currentFile.callMethod(context, "lineno=", line);	WITHOUT_CLASSIFICATION	0.999912663055327	WITHOUT_CLASSIFICATION	8.733694467299634E-5	IMPLEMENTATION
// one optional, one required args	WITHOUT_CLASSIFICATION	0.9997591837041442	WITHOUT_CLASSIFICATION	2.408162958557762E-4	IMPLEMENTATION
// one optional and no required args	WITHOUT_CLASSIFICATION	0.9999107667821687	WITHOUT_CLASSIFICATION	8.923321783135075E-5	IMPLEMENTATION
// try to get errno value out of the class	WITHOUT_CLASSIFICATION	0.9999985525571843	WITHOUT_CLASSIFICATION	1.447442815732649E-6	IMPLEMENTATION
// we got a valid errno value	WITHOUT_CLASSIFICATION	0.9999819105783982	WITHOUT_CLASSIFICATION	1.8089421601813566E-5	IMPLEMENTATION
// Ensure we're not running on GCJ, since it's not supported and leads to weird errors	WITHOUT_CLASSIFICATION	0.9999092454912245	WITHOUT_CLASSIFICATION	9.075450877550655E-5	IMPLEMENTATION
// print out as a nice Ruby backtrace	WITHOUT_CLASSIFICATION	0.9999893284851334	WITHOUT_CLASSIFICATION	1.0671514866589894E-5	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.999903172565998	WITHOUT_CLASSIFICATION	9.682743400195746E-5	IMPLEMENTATION
// set thread context JRuby classloader here, for the main thread	WITHOUT_CLASSIFICATION	0.9999019477629197	WITHOUT_CLASSIFICATION	9.805223708020706E-5	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999675563934765	WITHOUT_CLASSIFICATION	3.24436065235536E-5	IMPLEMENTATION
// no script to run, return success below	WITHOUT_CLASSIFICATION	0.9999917907339861	WITHOUT_CLASSIFICATION	8.209266013834531E-6	IMPLEMENTATION
// Skip /usr/bin/env if it's first	WITHOUT_CLASSIFICATION	0.9999568658274337	WITHOUT_CLASSIFICATION	4.313417256628158E-5	IMPLEMENTATION
// Skip any assignments if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.999998775193323	WITHOUT_CLASSIFICATION	1.224806676979763E-6	IMPLEMENTATION
// Skip any commandline args if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999989612969951	WITHOUT_CLASSIFICATION	1.038703004953171E-6	IMPLEMENTATION
// ignore error	WITHOUT_CLASSIFICATION	0.9990772348443666	WITHOUT_CLASSIFICATION	9.227651556333937E-4	IMPLEMENTATION
// ////////////////// COMMON CONSTANT / CVAR METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999831244625826	WITHOUT_CLASSIFICATION	1.6875537417381027E-5	IMPLEMENTATION
// ////////////////// INTERNAL MODULE VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.999947346909099	WITHOUT_CLASSIFICATION	5.265309090098435E-5	IMPLEMENTATION
// ////////////////// LOW-LEVEL CONSTANT INTERFACE //////////////// // // fetch/store/list constants for this module //	WITHOUT_CLASSIFICATION	0.9998995572364818	WITHOUT_CLASSIFICATION	1.0044276351817686E-4	IMPLEMENTATION
// odd	WITHOUT_CLASSIFICATION	0.9999936333226599	WITHOUT_CLASSIFICATION	6.366677340006718E-6	IMPLEMENTATION
// JRubyClient	WITHOUT_CLASSIFICATION	0.9996615266859028	WITHOUT_CLASSIFICATION	3.3847331409717497E-4	IMPLEMENTATION
/*     * x = mantissa * 2 ** exponent     *     * Where mantissa is in the range of [.5, 1)     *     */	WITHOUT_CLASSIFICATION	0.9999997347049915	WITHOUT_CLASSIFICATION	2.6529500844540436E-7	IMPLEMENTATION
// Make mantissa same sign so we only have one code path.	WITHOUT_CLASSIFICATION	0.9999610498567306	WITHOUT_CLASSIFICATION	3.895014326940171E-5	IMPLEMENTATION
// Increase value to hit lower range.	WITHOUT_CLASSIFICATION	0.9999884121701299	WITHOUT_CLASSIFICATION	1.1587829870096254E-5	IMPLEMENTATION
/*     * r = x * 2 ** y     */	WITHOUT_CLASSIFICATION	0.9999987503972224	WITHOUT_CLASSIFICATION	1.24960277756404E-6	IMPLEMENTATION
/*  0! */	WITHOUT_CLASSIFICATION	0.999998686659176	WITHOUT_CLASSIFICATION	1.3133408240519397E-6	IMPLEMENTATION
/*  1! */	WITHOUT_CLASSIFICATION	0.999998686659176	WITHOUT_CLASSIFICATION	1.3133408240519397E-6	IMPLEMENTATION
/*  2! */	WITHOUT_CLASSIFICATION	0.999998686659176	WITHOUT_CLASSIFICATION	1.3133408240519397E-6	IMPLEMENTATION
/*  3! */	WITHOUT_CLASSIFICATION	0.999998686659176	WITHOUT_CLASSIFICATION	1.3133408240519397E-6	IMPLEMENTATION
/*  4! */	WITHOUT_CLASSIFICATION	0.999998686659176	WITHOUT_CLASSIFICATION	1.3133408240519397E-6	IMPLEMENTATION
/*  5! */	WITHOUT_CLASSIFICATION	0.999998686659176	WITHOUT_CLASSIFICATION	1.3133408240519397E-6	IMPLEMENTATION
/*  6! */	WITHOUT_CLASSIFICATION	0.999998686659176	WITHOUT_CLASSIFICATION	1.3133408240519397E-6	IMPLEMENTATION
/*  7! */	WITHOUT_CLASSIFICATION	0.999998686659176	WITHOUT_CLASSIFICATION	1.3133408240519397E-6	IMPLEMENTATION
/*  8! */	WITHOUT_CLASSIFICATION	0.999998686659176	WITHOUT_CLASSIFICATION	1.3133408240519397E-6	IMPLEMENTATION
/*  9! */	WITHOUT_CLASSIFICATION	0.999998686659176	WITHOUT_CLASSIFICATION	1.3133408240519397E-6	IMPLEMENTATION
/* 11! */	WITHOUT_CLASSIFICATION	0.9999987745645751	WITHOUT_CLASSIFICATION	1.225435424934396E-6	IMPLEMENTATION
/* 12! */	WITHOUT_CLASSIFICATION	0.9999987745645751	WITHOUT_CLASSIFICATION	1.225435424934396E-6	IMPLEMENTATION
/* 13! */	WITHOUT_CLASSIFICATION	0.9999987745645751	WITHOUT_CLASSIFICATION	1.225435424934396E-6	IMPLEMENTATION
/* 15! */	WITHOUT_CLASSIFICATION	0.9999987745645751	WITHOUT_CLASSIFICATION	1.225435424934396E-6	IMPLEMENTATION
/* 16! */	WITHOUT_CLASSIFICATION	0.9999987745645751	WITHOUT_CLASSIFICATION	1.225435424934396E-6	IMPLEMENTATION
/* 17! */	WITHOUT_CLASSIFICATION	0.9999987745645751	WITHOUT_CLASSIFICATION	1.225435424934396E-6	IMPLEMENTATION
/* 19! */	WITHOUT_CLASSIFICATION	0.9999987745645751	WITHOUT_CLASSIFICATION	1.225435424934396E-6	IMPLEMENTATION
/* 20! */	WITHOUT_CLASSIFICATION	0.9999987745645751	WITHOUT_CLASSIFICATION	1.225435424934396E-6	IMPLEMENTATION
/* 21! */	WITHOUT_CLASSIFICATION	0.9999987745645751	WITHOUT_CLASSIFICATION	1.225435424934396E-6	IMPLEMENTATION
// Static constants	WITHOUT_CLASSIFICATION	0.9996732569965991	WITHOUT_CLASSIFICATION	3.2674300340087013E-4	IMPLEMENTATION
// Clean-up string representation so that it could be understood // by Java's BigDecimal. Not terribly efficient for now. // 1. MRI allows d and D as exponent separators	WITHOUT_CLASSIFICATION	0.999965714294353	WITHOUT_CLASSIFICATION	3.4285705647083986E-5	IMPLEMENTATION
// 2. MRI allows underscores anywhere	WITHOUT_CLASSIFICATION	0.9999249896929814	WITHOUT_CLASSIFICATION	7.501030701867027E-5	IMPLEMENTATION
// 3. MRI ignores the trailing junk	WITHOUT_CLASSIFICATION	0.9997903794222501	WITHOUT_CLASSIFICATION	2.0962057774973858E-4	IMPLEMENTATION
// MRI behavior: -0 and +0 are two different things	WITHOUT_CLASSIFICATION	0.9999508431608787	WITHOUT_CLASSIFICATION	4.915683912126638E-5	IMPLEMENTATION
// Java and MRI definitions of modulo are different.	WITHOUT_CLASSIFICATION	0.9999960232159667	WITHOUT_CLASSIFICATION	3.97678403321747E-6	IMPLEMENTATION
// Java and MRI definitions of remainder are the same.	WITHOUT_CLASSIFICATION	0.9999911520041342	WITHOUT_CLASSIFICATION	8.847995865685877E-6	IMPLEMENTATION
// Note: MRI has a very non-trivial way of calculating the precision, // so we use very simple approximation here:	WITHOUT_CLASSIFICATION	0.9998426509698498	WITHOUT_CLASSIFICATION	1.5734903015009432E-4	IMPLEMENTATION
// Iteration variables, for the square root x and the reciprocal v // initial x:  x0 ~ sqrt() // initial v:  v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.999986322822768	WITHOUT_CLASSIFICATION	1.3677177232066735E-5	IMPLEMENTATION
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9997675058453391	WITHOUT_CLASSIFICATION	2.324941546607806E-4	IMPLEMENTATION
// TODO: why this: .setResult();	WITHOUT_CLASSIFICATION	0.946443798109741	IMPLEMENTATION	0.05355620189025902	WITHOUT_CLASSIFICATION
// integer division	WITHOUT_CLASSIFICATION	0.999666408963059	WITHOUT_CLASSIFICATION	3.335910369409284E-4	IMPLEMENTATION
// MRI behavior: "If digits is 0, the result is the same as the / operator."	WITHOUT_CLASSIFICATION	0.9999996794489051	WITHOUT_CLASSIFICATION	3.205510948332697E-7	IMPLEMENTATION
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999438806631317	WITHOUT_CLASSIFICATION	5.6119336868381805E-5	IMPLEMENTATION
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999438806631317	WITHOUT_CLASSIFICATION	5.6119336868381805E-5	IMPLEMENTATION
// Java and MRI definitions of divmod are different.        	WITHOUT_CLASSIFICATION	0.9999960232159667	WITHOUT_CLASSIFICATION	3.97678403321747E-6	IMPLEMENTATION
// JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it	WITHOUT_CLASSIFICATION	0.995176205753016	WITHOUT_CLASSIFICATION	0.00482379424698396	IMPLEMENTATION
// shift the decimal point just to the right of the digit to be rounded to (divide by 10**(abs(scale))) // -1 -> 10's digit, -2 -> 100's digit, etc.	WITHOUT_CLASSIFICATION	0.9999996989603519	WITHOUT_CLASSIFICATION	3.010396480977564E-7	IMPLEMENTATION
// ...round to that digit	WITHOUT_CLASSIFICATION	0.9999265272428242	WITHOUT_CLASSIFICATION	7.347275717588585E-5	IMPLEMENTATION
// ...and shift the result back to the left (multiply by 10**(abs(scale)))	WITHOUT_CLASSIFICATION	0.9999865862621993	WITHOUT_CLASSIFICATION	1.3413737800749383E-5	IMPLEMENTATION
//this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are	WITHOUT_CLASSIFICATION	0.9999658498189296	WITHOUT_CLASSIFICATION	3.415018107041344E-5	IMPLEMENTATION
// sign	WITHOUT_CLASSIFICATION	0.9999940986523013	WITHOUT_CLASSIFICATION	5.901347698730472E-6	IMPLEMENTATION
// significant digits and exponent	WITHOUT_CLASSIFICATION	0.999955186112943	WITHOUT_CLASSIFICATION	4.4813887057063836E-5	IMPLEMENTATION
// normalize the value	WITHOUT_CLASSIFICATION	0.9999850273512911	WITHOUT_CLASSIFICATION	1.497264870877991E-5	IMPLEMENTATION
// base	WITHOUT_CLASSIFICATION	0.9999975240580189	WITHOUT_CLASSIFICATION	2.475941981162152E-6	IMPLEMENTATION
// NOTE: MRI's sqrt precision is limited by 100, // but we allow values more than 100.	WITHOUT_CLASSIFICATION	0.9999928409230165	WITHOUT_CLASSIFICATION	7.159076983419349E-6	IMPLEMENTATION
// just in case, add a bit of extra precision	WITHOUT_CLASSIFICATION	0.9999992194054407	WITHOUT_CLASSIFICATION	7.80594559263961E-7	IMPLEMENTATION
// eh?!	WITHOUT_CLASSIFICATION	0.9999935752659732	WITHOUT_CLASSIFICATION	6.424734026853922E-6	IMPLEMENTATION
// Note: #fix has only no-arg form, but truncate allows optional parameter.	WITHOUT_CLASSIFICATION	0.9999962056061313	WITHOUT_CLASSIFICATION	3.7943938686326513E-6	IMPLEMENTATION
// General number and precision checking	WITHOUT_CLASSIFICATION	0.9999240384728314	WITHOUT_CLASSIFICATION	7.596152716865806E-5	IMPLEMENTATION
// the requested precision	WITHOUT_CLASSIFICATION	0.9999706150514007	WITHOUT_CLASSIFICATION	2.938494859930144E-5	IMPLEMENTATION
// Proc class	WITHOUT_CLASSIFICATION	0.9998775817536346	WITHOUT_CLASSIFICATION	1.2241824636534857E-4	IMPLEMENTATION
//.append("  -x[directory]   strip off text before #!ruby line and perhaps cd to directory\n")	WITHOUT_CLASSIFICATION	0.9998984833758846	WITHOUT_CLASSIFICATION	1.0151662411535141E-4	IMPLEMENTATION
// even shift.. // ..floors to 62 or 63 bit BigInteger	WITHOUT_CLASSIFICATION	0.999987993140784	WITHOUT_CLASSIFICATION	1.2006859215927671E-5	IMPLEMENTATION
// 5 -> 2, -5 -> -3 need half a scale more..	WITHOUT_CLASSIFICATION	0.99997458423567	WITHOUT_CLASSIFICATION	2.5415764329983057E-5	IMPLEMENTATION
// ..where 100 -> 10 shifts the scale	WITHOUT_CLASSIFICATION	0.9999909269787035	WITHOUT_CLASSIFICATION	9.073021296547104E-6	IMPLEMENTATION
// Initial x - use double root - multiply by halfBack to unshift - set new scale	WITHOUT_CLASSIFICATION	0.9999973806823449	WITHOUT_CLASSIFICATION	2.619317655072309E-6	IMPLEMENTATION
// x0 ~ sqrt()	WITHOUT_CLASSIFICATION	0.9996634655323409	WITHOUT_CLASSIFICATION	3.365344676590556E-4	IMPLEMENTATION
// for prec 15 root x0 must surely be OK // return small prec roots without iterations	WITHOUT_CLASSIFICATION	0.999960743324597	WITHOUT_CLASSIFICATION	3.92566754030908E-5	IMPLEMENTATION
// Initial v - the reciprocal // v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9998969659683337	WITHOUT_CLASSIFICATION	1.030340316663079E-4	IMPLEMENTATION
// Collect iteration precisions beforehand	WITHOUT_CLASSIFICATION	0.9999228137516091	WITHOUT_CLASSIFICATION	7.718624839091668E-5	IMPLEMENTATION
// assume nInit = 16 <= prec	WITHOUT_CLASSIFICATION	0.9999261015409643	WITHOUT_CLASSIFICATION	7.389845903565282E-5	IMPLEMENTATION
// The loop of "Square Root by Coupled Newton Iteration"	WITHOUT_CLASSIFICATION	0.9999895049358793	WITHOUT_CLASSIFICATION	1.0495064120733076E-5	IMPLEMENTATION
// Increase precision - next iteration supplies n exact digits	WITHOUT_CLASSIFICATION	0.9999381279432841	WITHOUT_CLASSIFICATION	6.187205671598745E-5	IMPLEMENTATION
// Next x                                        // e = d - x^2	WITHOUT_CLASSIFICATION	0.9999415089758841	WITHOUT_CLASSIFICATION	5.8491024115845666E-5	IMPLEMENTATION
// x += e*v     ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999810040464885	WITHOUT_CLASSIFICATION	1.8995953511515388E-5	IMPLEMENTATION
// root x is ready!	WITHOUT_CLASSIFICATION	0.9999220492631993	WITHOUT_CLASSIFICATION	7.79507368006351E-5	IMPLEMENTATION
// Next v                                        // g = 1 - 2*x*v	WITHOUT_CLASSIFICATION	0.999917309900112	WITHOUT_CLASSIFICATION	8.269009988806085E-5	IMPLEMENTATION
// v += g*v     ~ 1/2/sqrt()	WITHOUT_CLASSIFICATION	0.9999699111349818	WITHOUT_CLASSIFICATION	3.0088865018171913E-5	IMPLEMENTATION
// RubyBigdecimal	WITHOUT_CLASSIFICATION	0.9996615266859028	WITHOUT_CLASSIFICATION	3.3847331409717497E-4	IMPLEMENTATION
// c: bind_eval	WITHOUT_CLASSIFICATION	0.9996615266859028	WITHOUT_CLASSIFICATION	3.3847331409717497E-4	IMPLEMENTATION
/*  ================     *  Module Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999976251237177	WITHOUT_CLASSIFICATION	2.374876282199484E-6	IMPLEMENTATION
// from CommandlineParser	WITHOUT_CLASSIFICATION	0.9999877237416552	WITHOUT_CLASSIFICATION	1.2276258344795764E-5	IMPLEMENTATION
// This property is a Boolean, to allow three values, so it can match MRI's nil, false and true	WITHOUT_CLASSIFICATION	0.999855264477233	WITHOUT_CLASSIFICATION	1.4473552276694033E-4	IMPLEMENTATION
// default ClassCache using jitMax as a soft upper bound	WITHOUT_CLASSIFICATION	0.9999960883178755	WITHOUT_CLASSIFICATION	3.911682124600532E-6	IMPLEMENTATION
// Until we get a little more solid on 1.9 support we will only run interpreted mode	WITHOUT_CLASSIFICATION	0.9930027228511731	WITHOUT_CLASSIFICATION	0.006997277148826897	IMPLEMENTATION
// Setting the loader needs to reset the class cache	WITHOUT_CLASSIFICATION	0.9966158129616917	WITHOUT_CLASSIFICATION	0.0033841870383083004	IMPLEMENTATION
// try the normal property first	WITHOUT_CLASSIFICATION	0.9999012480789597	WITHOUT_CLASSIFICATION	9.87519210402846E-5	IMPLEMENTATION
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999503207237326	WITHOUT_CLASSIFICATION	4.967927626730861E-5	IMPLEMENTATION
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999503207237326	WITHOUT_CLASSIFICATION	4.967927626730861E-5	IMPLEMENTATION
// try loading from classloader resources	WITHOUT_CLASSIFICATION	0.9999902536386348	WITHOUT_CLASSIFICATION	9.746361365151403E-6	IMPLEMENTATION
// otherwise fall back on system temp location	WITHOUT_CLASSIFICATION	0.9915253592300054	WITHOUT_CLASSIFICATION	0.008474640769994553	IMPLEMENTATION
// We require the home directory to be absolute	WITHOUT_CLASSIFICATION	0.9999952488441134	WITHOUT_CLASSIFICATION	4.751155886641278E-6	IMPLEMENTATION
//consume the file name	WITHOUT_CLASSIFICATION	0.9996574136249006	WITHOUT_CLASSIFICATION	3.425863750993811E-4	IMPLEMENTATION
// Specify something that can't separate	WITHOUT_CLASSIFICATION	0.9999895755505407	WITHOUT_CLASSIFICATION	1.042444945937477E-5	IMPLEMENTATION
// try cwd first	WITHOUT_CLASSIFICATION	0.9997498588415811	WITHOUT_CLASSIFICATION	2.501411584188811E-4	IMPLEMENTATION
// ruby interpreter compatibilty // Usage: ruby [switches] [--] [programfile] [arguments])	WITHOUT_CLASSIFICATION	0.9999198881518093	WITHOUT_CLASSIFICATION	8.011184819068677E-5	IMPLEMENTATION
// KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 // if Ruby 2.0 encoding pragmas are implemented, this will need to change	WITHOUT_CLASSIFICATION	0.9999991402712027	WITHOUT_CLASSIFICATION	8.597287972427294E-7	IMPLEMENTATION
// @JRubyMethod(name = "complex?")	WITHOUT_CLASSIFICATION	0.9998959844938132	WITHOUT_CLASSIFICATION	1.0401550618672181E-4	IMPLEMENTATION
// @JRubyMethod(name = "exact?")	WITHOUT_CLASSIFICATION	0.9998959844938132	WITHOUT_CLASSIFICATION	1.0401550618672181E-4	IMPLEMENTATION
// @JRubyMethod(name = "inexact?")	WITHOUT_CLASSIFICATION	0.9998959844938132	WITHOUT_CLASSIFICATION	1.0401550618672181E-4	IMPLEMENTATION
// symbol string *must* be interned	WITHOUT_CLASSIFICATION	0.9999992231936263	WITHOUT_CLASSIFICATION	7.768063736181712E-7	IMPLEMENTATION
//        assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";	WITHOUT_CLASSIFICATION	0.9509963879911824	WITHOUT_CLASSIFICATION	0.04900361200881767	IMPLEMENTATION
/* Symbol class methods.     *      */	WITHOUT_CLASSIFICATION	0.9999985316584595	WITHOUT_CLASSIFICATION	1.4683415404989982E-6	IMPLEMENTATION
// TODO: 1.9 rb_enc_symname_p	WITHOUT_CLASSIFICATION	0.5866739461016572	IMPLEMENTATION	0.4133260538983427	WITHOUT_CLASSIFICATION
// This is needed to unpack stuff	WITHOUT_CLASSIFICATION	0.9438756558730256	WITHOUT_CLASSIFICATION	0.05612434412697441	IMPLEMENTATION
// we already confirmed above that length > 0	WITHOUT_CLASSIFICATION	0.9992277391197661	WITHOUT_CLASSIFICATION	7.722608802337669E-4	IMPLEMENTATION
// *must* be power of 2!	WITHOUT_CLASSIFICATION	0.9999848398343372	WITHOUT_CLASSIFICATION	1.5160165662877873E-5	IMPLEMENTATION
// note all fields are final -- rehash creates new entries when necessary. // as documented in java.util.concurrent.ConcurrentHashMap.java, that will // statistically affect only a small percentage (< 20%) of entries for a given rehash.	WITHOUT_CLASSIFICATION	0.9999999586004978	WITHOUT_CLASSIFICATION	4.139950202997235E-8	IMPLEMENTATION
//            assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9509963879911824	WITHOUT_CLASSIFICATION	0.04900361200881767	IMPLEMENTATION
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999782711395131	WITHOUT_CLASSIFICATION	2.172886048699176E-5	IMPLEMENTATION
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999782711395131	WITHOUT_CLASSIFICATION	2.172886048699176E-5	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9996615266859028	WITHOUT_CLASSIFICATION	3.3847331409717497E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9996615266859028	WITHOUT_CLASSIFICATION	3.3847331409717497E-4	IMPLEMENTATION
// backwards-compatibility, but threadsafe now	WITHOUT_CLASSIFICATION	0.9999910300930247	WITHOUT_CLASSIFICATION	8.969906975330917E-6	IMPLEMENTATION
//  Single node on list	WITHOUT_CLASSIFICATION	0.9998212702923345	WITHOUT_CLASSIFICATION	1.7872970766554002E-4	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9998109662416466	WITHOUT_CLASSIFICATION	1.890337583535429E-4	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999638655901117	WITHOUT_CLASSIFICATION	3.613440988818809E-5	IMPLEMENTATION
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9998828005333776	WITHOUT_CLASSIFICATION	1.1719946662236695E-4	IMPLEMENTATION
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9994859058023325	WITHOUT_CLASSIFICATION	5.140941976674949E-4	IMPLEMENTATION
// not so backwards-compatible here, but no one should have been // calling this anyway.	WITHOUT_CLASSIFICATION	0.9992359281196089	WITHOUT_CLASSIFICATION	7.640718803910804E-4	IMPLEMENTATION
// Profile	WITHOUT_CLASSIFICATION	0.9999936730844831	WITHOUT_CLASSIFICATION	6.32691551690221E-6	IMPLEMENTATION
//static private final String TRANSLIT = "//translit";	WITHOUT_CLASSIFICATION	0.9999311702654365	WITHOUT_CLASSIFICATION	6.882973456341932E-5	IMPLEMENTATION
// treat start and end as start...end for end >= 0, start..end for end < 0	WITHOUT_CLASSIFICATION	0.9999898921413913	WITHOUT_CLASSIFICATION	1.0107858608713147E-5	IMPLEMENTATION
// invalid ranges result in an empty string	WITHOUT_CLASSIFICATION	0.9999999681615536	WITHOUT_CLASSIFICATION	3.1838446430644646E-8	IMPLEMENTATION
// Methods of the Nil Class (nil_*):	WITHOUT_CLASSIFICATION	0.9999908027428127	WITHOUT_CLASSIFICATION	9.197257187296449E-6	IMPLEMENTATION
// Has read/write been closed or is it still open for business	WITHOUT_CLASSIFICATION	0.9998830548769976	WITHOUT_CLASSIFICATION	1.1694512300247447E-4	IMPLEMENTATION
// Support IO modes that this object was opened with	WITHOUT_CLASSIFICATION	0.9999669779054571	WITHOUT_CLASSIFICATION	3.302209454297798E-5	IMPLEMENTATION
// must let original string know we're modifying, so shared buffers aren't damaged	WITHOUT_CLASSIFICATION	0.9999743773425545	WITHOUT_CLASSIFICATION	2.562265744552017E-5	IMPLEMENTATION
// reset the state	WITHOUT_CLASSIFICATION	0.9994589005279408	WITHOUT_CLASSIFICATION	5.410994720591834E-4	IMPLEMENTATION
// Tainting here if we ever want it. (secure 4)	WITHOUT_CLASSIFICATION	0.9997951022538056	WITHOUT_CLASSIFICATION	2.0489774619437352E-4	IMPLEMENTATION
// rb_match_busy	WITHOUT_CLASSIFICATION	0.9996615266859028	WITHOUT_CLASSIFICATION	3.3847331409717497E-4	IMPLEMENTATION
//str is frozen	WITHOUT_CLASSIFICATION	0.9995236948463405	WITHOUT_CLASSIFICATION	4.7630515365946254E-4	IMPLEMENTATION
// MRI also does a pointer comparison here	WITHOUT_CLASSIFICATION	0.999993254900508	WITHOUT_CLASSIFICATION	6.7450994918979675E-6	IMPLEMENTATION
// JRubyServer	WITHOUT_CLASSIFICATION	0.9996615266859028	WITHOUT_CLASSIFICATION	3.3847331409717497E-4	IMPLEMENTATION
// Class.allocate object is not allocatable before it is initialized	WITHOUT_CLASSIFICATION	0.9996108932896515	WITHOUT_CLASSIFICATION	3.8910671034846723E-4	IMPLEMENTATION
// boot the Object class 	WITHOUT_CLASSIFICATION	0.999984768653878	WITHOUT_CLASSIFICATION	1.523134612191961E-5	IMPLEMENTATION
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999939874389575	WITHOUT_CLASSIFICATION	6.012561042464221E-6	IMPLEMENTATION
// update superclass reference	WITHOUT_CLASSIFICATION	0.999994043651508	WITHOUT_CLASSIFICATION	5.956348492054056E-6	IMPLEMENTATION
// undo check	WITHOUT_CLASSIFICATION	0.9996697340666925	WITHOUT_CLASSIFICATION	3.302659333075412E-4	IMPLEMENTATION
// This is a non-standard method; have we decided to start extending Ruby? //classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));	WITHOUT_CLASSIFICATION	0.9999773310762786	WITHOUT_CLASSIFICATION	2.266892372133201E-5	IMPLEMENTATION
// boot the Module and Class classes	WITHOUT_CLASSIFICATION	0.999960335945289	WITHOUT_CLASSIFICATION	3.966405471101816E-5	IMPLEMENTATION
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9999185895038204	WITHOUT_CLASSIFICATION	8.141049617958274E-5	IMPLEMENTATION
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9998690885453856	WITHOUT_CLASSIFICATION	1.3091145461437E-4	IMPLEMENTATION
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9998690885453856	WITHOUT_CLASSIFICATION	1.3091145461437E-4	IMPLEMENTATION
// could be pulled down to RubyClass in future // rb_class_boot	WITHOUT_CLASSIFICATION	0.9999665584690521	WITHOUT_CLASSIFICATION	3.3441530947846894E-5	IMPLEMENTATION
// remove us from old superclass's child classes	WITHOUT_CLASSIFICATION	0.9999238260879424	WITHOUT_CLASSIFICATION	7.617391205769906E-5	IMPLEMENTATION
// add us to new superclass's child classes	WITHOUT_CLASSIFICATION	0.9995558829965898	WITHOUT_CLASSIFICATION	4.441170034101216E-4	IMPLEMENTATION
// update all subclasses	WITHOUT_CLASSIFICATION	0.9999871414960759	WITHOUT_CLASSIFICATION	1.285850392416646E-5	IMPLEMENTATION
// fields to hold Ruby and RubyClass references	WITHOUT_CLASSIFICATION	0.9999523849325515	WITHOUT_CLASSIFICATION	4.761506744850011E-5	IMPLEMENTATION
// static initializing method	WITHOUT_CLASSIFICATION	0.9998431275821408	WITHOUT_CLASSIFICATION	1.5687241785927055E-4	IMPLEMENTATION
// standard constructor that accepts Ruby, RubyClass	WITHOUT_CLASSIFICATION	0.9998240665555852	WITHOUT_CLASSIFICATION	1.7593344441478587E-4	IMPLEMENTATION
// no-arg constructor using static references to Ruby and RubyClass	WITHOUT_CLASSIFICATION	0.9999225521643009	WITHOUT_CLASSIFICATION	7.744783569916919E-5	IMPLEMENTATION
// non-signature signature with just IRubyObject	WITHOUT_CLASSIFICATION	0.9999862144689106	WITHOUT_CLASSIFICATION	1.3785531089480671E-5	IMPLEMENTATION
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999992516956919	WITHOUT_CLASSIFICATION	7.483043080895333E-7	IMPLEMENTATION
// self // method name	WITHOUT_CLASSIFICATION	0.9996625335605427	WITHOUT_CLASSIFICATION	3.374664394573391E-4	IMPLEMENTATION
// the default allocator	WITHOUT_CLASSIFICATION	0.999989275677642	WITHOUT_CLASSIFICATION	1.0724322358020513E-5	IMPLEMENTATION
// Equivalent of T_DATA	WITHOUT_CLASSIFICATION	0.9999650713692564	WITHOUT_CLASSIFICATION	3.492863074363322E-5	IMPLEMENTATION
// do nothing, leave empty	WITHOUT_CLASSIFICATION	0.99999338443222	WITHOUT_CLASSIFICATION	6.6155677800029395E-6	IMPLEMENTATION
// Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9999923205669773	WITHOUT_CLASSIFICATION	7.679433022641728E-6	IMPLEMENTATION
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999976391025074	WITHOUT_CLASSIFICATION	2.3608974925376435E-6	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9998623304094162	WITHOUT_CLASSIFICATION	1.3766959058380515E-4	IMPLEMENTATION
// Make sure all arguments are modules before calling the callbacks	WITHOUT_CLASSIFICATION	0.9999986540763897	WITHOUT_CLASSIFICATION	1.3459236102347763E-6	IMPLEMENTATION
// MRI extends in order from last to first	WITHOUT_CLASSIFICATION	0.9999989053735303	WITHOUT_CLASSIFICATION	1.0946264696579257E-6	IMPLEMENTATION
// NOTE: Serialization is primarily supported for testing purposes, and there is no general // guarantee that serialization will work correctly. Specifically, instance variables pointing // at symbols, threads, modules, classes, and other unserializable types are not detected.	WITHOUT_CLASSIFICATION	0.9999920183221045	WITHOUT_CLASSIFICATION	7.981677895525103E-6	IMPLEMENTATION
// write out ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999846892358869	WITHOUT_CLASSIFICATION	1.531076411304071E-5	IMPLEMENTATION
// rest in ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999917063432624	WITHOUT_CLASSIFICATION	8.293656737635511E-6	IMPLEMENTATION
// 0x3fff_ffff // -0x4000_0000	WITHOUT_CLASSIFICATION	0.9999438606165095	WITHOUT_CLASSIFICATION	5.6139383490612176E-5	IMPLEMENTATION
// a gotcha	WITHOUT_CLASSIFICATION	0.9997154799064514	WITHOUT_CLASSIFICATION	2.845200935486643E-4	IMPLEMENTATION
// Java / and % are not the same as ruby	WITHOUT_CLASSIFICATION	0.9999868922015531	WITHOUT_CLASSIFICATION	1.310779844692145E-5	IMPLEMENTATION
// A gotcha for Long.MIN_VALUE: value = -value	WITHOUT_CLASSIFICATION	0.999973492286573	WITHOUT_CLASSIFICATION	2.6507713427038053E-5	IMPLEMENTATION
// Piece of mri rb_to_id	WITHOUT_CLASSIFICATION	0.9999650713692564	WITHOUT_CLASSIFICATION	3.492863074363322E-5	IMPLEMENTATION
// Java Doubles are 64 bit long:            	WITHOUT_CLASSIFICATION	0.9999932566139439	WITHOUT_CLASSIFICATION	6.743386056116253E-6	IMPLEMENTATION
// Double.MAX_EXPONENT since Java 1.6            	WITHOUT_CLASSIFICATION	0.9999923205669773	WITHOUT_CLASSIFICATION	7.679433022641728E-6	IMPLEMENTATION
// don't override Numeric#div !	WITHOUT_CLASSIFICATION	0.9998914088720854	WITHOUT_CLASSIFICATION	1.085911279145932E-4	IMPLEMENTATION
// Modelled after c ruby implementation (java /,% not same as ruby)	WITHOUT_CLASSIFICATION	0.9989305974205602	WITHOUT_CLASSIFICATION	0.0010694025794396773	IMPLEMENTATION
// MRI behavior:	WITHOUT_CLASSIFICATION	0.9996634621845734	WITHOUT_CLASSIFICATION	3.365378154266353E-4	IMPLEMENTATION
// Numeric.equal            	WITHOUT_CLASSIFICATION	0.9999438606165095	WITHOUT_CLASSIFICATION	5.6139383490612176E-5	IMPLEMENTATION
// provider is not available	WITHOUT_CLASSIFICATION	0.999117441163359	WITHOUT_CLASSIFICATION	8.82558836640997E-4	IMPLEMENTATION
// bouncy castle doesn't support algorithm	WITHOUT_CLASSIFICATION	0.9993864267582641	WITHOUT_CLASSIFICATION	6.135732417360318E-4	IMPLEMENTATION
// fall back to system JCA providers	WITHOUT_CLASSIFICATION	0.9996480446848919	WITHOUT_CLASSIFICATION	3.519553151081609E-4	IMPLEMENTATION
// RubyDigest	WITHOUT_CLASSIFICATION	0.9996615266859028	WITHOUT_CLASSIFICATION	3.3847331409717497E-4	IMPLEMENTATION
// ENEBO: Can these be fast?	WITHOUT_CLASSIFICATION	0.9998620525103238	WITHOUT_CLASSIFICATION	1.3794748967628544E-4	IMPLEMENTATION
// synchronize on the RubyThread for threadgroup updates	WITHOUT_CLASSIFICATION	0.99991152679572	WITHOUT_CLASSIFICATION	8.847320427993565E-5	IMPLEMENTATION
// we only add live threads	WITHOUT_CLASSIFICATION	0.9999380604936321	WITHOUT_CLASSIFICATION	6.193950636783971E-5	IMPLEMENTATION
// use same ClassIndex as metaclass, since we're technically still of that type	WITHOUT_CLASSIFICATION	0.999969464921998	WITHOUT_CLASSIFICATION	3.053507800194312E-5	IMPLEMENTATION
// handle everything after -- as arguments to the jruby process	WITHOUT_CLASSIFICATION	0.9999270357999374	WITHOUT_CLASSIFICATION	7.296420006258168E-5	IMPLEMENTATION
// JRubyService	WITHOUT_CLASSIFICATION	0.9996615266859028	WITHOUT_CLASSIFICATION	3.3847331409717497E-4	IMPLEMENTATION
// while	WITHOUT_CLASSIFICATION	0.9999963320746326	WITHOUT_CLASSIFICATION	3.667925367506529E-6	IMPLEMENTATION
/* \OOO */	WITHOUT_CLASSIFICATION	0.9999987745645751	WITHOUT_CLASSIFICATION	1.225435424934396E-6	IMPLEMENTATION
// CRuby uses sprintf(buf, "%.*g", FLOAT_DIG, d); // This pattern adjusts the output of String.pattern("%g") to mimic // the C version.	WITHOUT_CLASSIFICATION	0.9999784030024396	WITHOUT_CLASSIFICATION	2.1596997560513182E-5	IMPLEMENTATION
// mask off "once" flag	WITHOUT_CLASSIFICATION	0.9999734397853854	WITHOUT_CLASSIFICATION	2.65602146145989E-5	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999906708555705	WITHOUT_CLASSIFICATION	9.329144429485908E-6	IMPLEMENTATION
// internal usage (Complex/Rational)	WITHOUT_CLASSIFICATION	0.9999704791539262	WITHOUT_CLASSIFICATION	2.9520846073891556E-5	IMPLEMENTATION
// silent ?	WITHOUT_CLASSIFICATION	0.9998591195595525	WITHOUT_CLASSIFICATION	1.4088044044753052E-4	IMPLEMENTATION
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999987745645751	WITHOUT_CLASSIFICATION	1.225435424934396E-6	IMPLEMENTATION
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999892917034561	WITHOUT_CLASSIFICATION	1.0708296543963984E-5	IMPLEMENTATION
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999354232136133	WITHOUT_CLASSIFICATION	6.457678638666016E-5	IMPLEMENTATION
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999354232136133	WITHOUT_CLASSIFICATION	6.457678638666016E-5	IMPLEMENTATION
/* \O, \OO, \OOO or backref */	WITHOUT_CLASSIFICATION	0.9999932565523055	WITHOUT_CLASSIFICATION	6.743447694471501E-6	IMPLEMENTATION
// MBCLEN_NEEDMORE_P	WITHOUT_CLASSIFICATION	0.9996615266859028	WITHOUT_CLASSIFICATION	3.3847331409717497E-4	IMPLEMENTATION
// MBCLEN_INVALID_P	WITHOUT_CLASSIFICATION	0.9996615266859028	WITHOUT_CLASSIFICATION	3.3847331409717497E-4	IMPLEMENTATION
// Unicode is can be only 21 bits long, int is enough	WITHOUT_CLASSIFICATION	0.99998853803675	WITHOUT_CLASSIFICATION	1.1461963250038395E-5	IMPLEMENTATION
/* Surrogates */	WITHOUT_CLASSIFICATION	0.9999354232136133	WITHOUT_CLASSIFICATION	6.457678638666016E-5	IMPLEMENTATION
// do not load the class if not used	WITHOUT_CLASSIFICATION	0.9997965628087663	WITHOUT_CLASSIFICATION	2.0343719123370666E-4	IMPLEMENTATION
/* \0, \0O, \0OO */	WITHOUT_CLASSIFICATION	0.9999354232136133	WITHOUT_CLASSIFICATION	6.457678638666016E-5	IMPLEMENTATION
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999987745645751	WITHOUT_CLASSIFICATION	1.225435424934396E-6	IMPLEMENTATION
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999354232136133	WITHOUT_CLASSIFICATION	6.457678638666016E-5	IMPLEMENTATION
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999892917034561	WITHOUT_CLASSIFICATION	1.0708296543963984E-5	IMPLEMENTATION
/* \\u{H HH HHH HHHH HHHHH HHHHHH ...} */	WITHOUT_CLASSIFICATION	0.9999844555577617	WITHOUT_CLASSIFICATION	1.554444223836748E-5	IMPLEMENTATION
/* \\uHHHH */	WITHOUT_CLASSIFICATION	0.9999354232136133	WITHOUT_CLASSIFICATION	6.457678638666016E-5	IMPLEMENTATION
/* \p{Hiragana} */	WITHOUT_CLASSIFICATION	0.9999354232136133	WITHOUT_CLASSIFICATION	6.457678638666016E-5	IMPLEMENTATION
// inner switch	WITHOUT_CLASSIFICATION	0.9998043107701562	WITHOUT_CLASSIFICATION	1.9568922984386183E-4	IMPLEMENTATION
// newInstance here	WITHOUT_CLASSIFICATION	0.9990635279861685	WITHOUT_CLASSIFICATION	9.364720138313978E-4	IMPLEMENTATION
// rb_reg_raise	WITHOUT_CLASSIFICATION	0.9996615266859028	WITHOUT_CLASSIFICATION	3.3847331409717497E-4	IMPLEMENTATION
// rb_reg_desc	WITHOUT_CLASSIFICATION	0.9996615266859028	WITHOUT_CLASSIFICATION	3.3847331409717497E-4	IMPLEMENTATION
// rb_enc_reg_raise	WITHOUT_CLASSIFICATION	0.9996615266859028	WITHOUT_CLASSIFICATION	3.3847331409717497E-4	IMPLEMENTATION
// rb_enc_reg_error_desc	WITHOUT_CLASSIFICATION	0.9999438606165095	WITHOUT_CLASSIFICATION	5.6139383490612176E-5	IMPLEMENTATION
// rb_reg_initialize_str	WITHOUT_CLASSIFICATION	0.9999438606165095	WITHOUT_CLASSIFICATION	5.6139383490612176E-5	IMPLEMENTATION
// rb_reg_initialize	WITHOUT_CLASSIFICATION	0.9996615266859028	WITHOUT_CLASSIFICATION	3.3847331409717497E-4	IMPLEMENTATION
// JRUBY-3625: delay setting backref until the MatchData is completely initialized	WITHOUT_CLASSIFICATION	0.9999972532401655	WITHOUT_CLASSIFICATION	2.7467598344707503E-6	IMPLEMENTATION
// rb_reg_expr_str	WITHOUT_CLASSIFICATION	0.9996615266859028	WITHOUT_CLASSIFICATION	3.3847331409717497E-4	IMPLEMENTATION
// option_to_str	WITHOUT_CLASSIFICATION	0.9996615266859028	WITHOUT_CLASSIFICATION	3.3847331409717497E-4	IMPLEMENTATION
// Don't initialize with class // Don't put in object space and don't taint	WITHOUT_CLASSIFICATION	0.9999962860570709	WITHOUT_CLASSIFICATION	3.713942928988545E-6	IMPLEMENTATION
// args should be before block	WITHOUT_CLASSIFICATION	0.99997595843919	WITHOUT_CLASSIFICATION	2.4041560810077233E-5	IMPLEMENTATION
// args should be at end	WITHOUT_CLASSIFICATION	0.9998366428583464	WITHOUT_CLASSIFICATION	1.633571416536947E-4	IMPLEMENTATION
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9994356425416161	WITHOUT_CLASSIFICATION	5.64357458384005E-4	IMPLEMENTATION
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9994356425416161	WITHOUT_CLASSIFICATION	5.64357458384005E-4	IMPLEMENTATION
// skip anything not related to jruby	WITHOUT_CLASSIFICATION	0.9946741551368542	WITHOUT_CLASSIFICATION	0.0053258448631458245	IMPLEMENTATION
// start a new populator	WITHOUT_CLASSIFICATION	0.9999809592424724	WITHOUT_CLASSIFICATION	1.9040757527471345E-5	IMPLEMENTATION
// check for frame field reads or writes	WITHOUT_CLASSIFICATION	0.9999675633087187	WITHOUT_CLASSIFICATION	3.243669128127259E-5	IMPLEMENTATION
// add all names for this annotation	WITHOUT_CLASSIFICATION	0.999777435705998	WITHOUT_CLASSIFICATION	2.2256429400193566E-4	IMPLEMENTATION
// no annotated methods found, skip	WITHOUT_CLASSIFICATION	0.9998915308464751	WITHOUT_CLASSIFICATION	1.0846915352490823E-4	IMPLEMENTATION
// write out a static initializer for frame names, so it only fires once	WITHOUT_CLASSIFICATION	0.9999765392464409	WITHOUT_CLASSIFICATION	2.3460753559099142E-5	IMPLEMENTATION
// single method, use normal logic	WITHOUT_CLASSIFICATION	0.9988314414841202	WITHOUT_CLASSIFICATION	0.001168558515879912	IMPLEMENTATION
// multimethod, new logic	WITHOUT_CLASSIFICATION	0.9997758886096836	WITHOUT_CLASSIFICATION	2.2411139031633428E-4	IMPLEMENTATION
// declared type returns the qualified name without $ for inner classes!!!	WITHOUT_CLASSIFICATION	0.9999466173277292	WITHOUT_CLASSIFICATION	5.338267227084251E-5	IMPLEMENTATION
// inner class, use $ to delimit	WITHOUT_CLASSIFICATION	0.9999492990013258	WITHOUT_CLASSIFICATION	5.070099867426612E-5	IMPLEMENTATION
//                        RubyModule singletonClass = module.getSingletonClass();	WITHOUT_CLASSIFICATION	0.99988852386625	WITHOUT_CLASSIFICATION	1.1147613374995538E-4	IMPLEMENTATION
//                }	WITHOUT_CLASSIFICATION	0.9996804567239903	WITHOUT_CLASSIFICATION	3.1954327600967685E-4	IMPLEMENTATION
// fallback on non-pregenerated logic	WITHOUT_CLASSIFICATION	0.9994413897569066	WITHOUT_CLASSIFICATION	5.586102430934779E-4	IMPLEMENTATION
// refresh call adapter, since it matters if this is iter-based or not	WITHOUT_CLASSIFICATION	0.9995353571304401	WITHOUT_CLASSIFICATION	4.64642869559971E-4	IMPLEMENTATION
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9938100651640301	WITHOUT_CLASSIFICATION	0.006189934835969858	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.999798486510516	WITHOUT_CLASSIFICATION	2.015134894841066E-4	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.9998389246374998	WITHOUT_CLASSIFICATION	1.610753625002779E-4	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999944072408335	WITHOUT_CLASSIFICATION	5.59275916645507E-6	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999944072408335	WITHOUT_CLASSIFICATION	5.59275916645507E-6	IMPLEMENTATION
// colon3	WITHOUT_CLASSIFICATION	0.9999935752659732	WITHOUT_CLASSIFICATION	6.424734026853922E-6	IMPLEMENTATION
// Colon3	WITHOUT_CLASSIFICATION	0.9999935752659732	WITHOUT_CLASSIFICATION	6.424734026853922E-6	IMPLEMENTATION
// array created for rescue args doesn't need to be in ObjectSpace.	WITHOUT_CLASSIFICATION	0.999999667071161	WITHOUT_CLASSIFICATION	3.3292883911889667E-7	IMPLEMENTATION
// For b.foo	WITHOUT_CLASSIFICATION	0.9994050815595075	WITHOUT_CLASSIFICATION	5.949184404924707E-4	IMPLEMENTATION
// instance config for the script run	WITHOUT_CLASSIFICATION	0.99994672182532	WITHOUT_CLASSIFICATION	5.327817468002707E-5	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999944072408335	WITHOUT_CLASSIFICATION	5.59275916645507E-6	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999944072408335	WITHOUT_CLASSIFICATION	5.59275916645507E-6	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999983580433046	WITHOUT_CLASSIFICATION	1.6419566954454867E-6	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999983580433046	WITHOUT_CLASSIFICATION	1.6419566954454867E-6	IMPLEMENTATION
//RubyModule module = context.getRubyClass();	WITHOUT_CLASSIFICATION	0.9995741072734472	WITHOUT_CLASSIFICATION	4.258927265528625E-4	IMPLEMENTATION
// For 'b.foo'	WITHOUT_CLASSIFICATION	0.9994050815595075	WITHOUT_CLASSIFICATION	5.949184404924707E-4	IMPLEMENTATION
// We define an actual list to get around bug in java integration (1387115)	WITHOUT_CLASSIFICATION	0.9999988834618344	WITHOUT_CLASSIFICATION	1.1165381656143736E-6	IMPLEMENTATION
// something in here is used to build up ruby stack trace...	WITHOUT_CLASSIFICATION	0.9999990566102241	WITHOUT_CLASSIFICATION	9.433897759314514E-7	IMPLEMENTATION
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.999962756495459	WITHOUT_CLASSIFICATION	3.724350454108251E-5	IMPLEMENTATION
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.999962756495459	WITHOUT_CLASSIFICATION	3.724350454108251E-5	IMPLEMENTATION
// do nothing, allow loop to retry	WITHOUT_CLASSIFICATION	0.999807183322258	WITHOUT_CLASSIFICATION	1.9281667774185274E-4	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9993565651485392	WITHOUT_CLASSIFICATION	6.434348514608372E-4	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999684395772143	WITHOUT_CLASSIFICATION	3.156042278567541E-5	IMPLEMENTATION
// never visited, should be fine	WITHOUT_CLASSIFICATION	0.9994740031177787	WITHOUT_CLASSIFICATION	5.259968822213799E-4	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999983580433046	WITHOUT_CLASSIFICATION	1.6419566954454867E-6	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999069213267913	WITHOUT_CLASSIFICATION	9.307867320873957E-5	IMPLEMENTATION
// If we have more than one argument, then make sure the array is not ObjectSpaced.	WITHOUT_CLASSIFICATION	0.9823075697801027	WITHOUT_CLASSIFICATION	0.01769243021989727	IMPLEMENTATION
// Only in ruby 1.9 methods	WITHOUT_CLASSIFICATION	0.9999937689241397	WITHOUT_CLASSIFICATION	6.231075860321674E-6	IMPLEMENTATION
// Bind 'normal' parameter values to the local scope for this method.	WITHOUT_CLASSIFICATION	0.9999996554055728	WITHOUT_CLASSIFICATION	3.4459442720211107E-7	IMPLEMENTATION
// no arg grouping, just use bulk assignment methods	WITHOUT_CLASSIFICATION	0.9998430487220717	WITHOUT_CLASSIFICATION	1.5695127792830107E-4	IMPLEMENTATION
// optArgs and restArgs require more work, so isolate them and ArrayList creation here	WITHOUT_CLASSIFICATION	0.9991019660045262	WITHOUT_CLASSIFICATION	8.980339954737921E-4	IMPLEMENTATION
//        arity.checkArity(runtime, argsLength);	WITHOUT_CLASSIFICATION	0.999912663055327	WITHOUT_CLASSIFICATION	8.733694467299634E-5	IMPLEMENTATION
// no more values to stick in rest arg	WITHOUT_CLASSIFICATION	0.9999139612361182	WITHOUT_CLASSIFICATION	8.603876388186112E-5	IMPLEMENTATION
// set argv from main's args	WITHOUT_CLASSIFICATION	0.9999907211420249	WITHOUT_CLASSIFICATION	9.278857975038217E-6	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.999798486510516	WITHOUT_CLASSIFICATION	2.015134894841066E-4	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999944072408335	WITHOUT_CLASSIFICATION	5.59275916645507E-6	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999983580433046	WITHOUT_CLASSIFICATION	1.6419566954454867E-6	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999069213267913	WITHOUT_CLASSIFICATION	9.307867320873957E-5	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9973159886132309	WITHOUT_CLASSIFICATION	0.0026840113867691753	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9973159886132309	WITHOUT_CLASSIFICATION	0.0026840113867691753	IMPLEMENTATION
// block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] //assert argsNode != null : "argsNode is not null";	WITHOUT_CLASSIFICATION	0.9935610076838827	WITHOUT_CLASSIFICATION	0.0064389923161173425	IMPLEMENTATION
// assign given optional arguments to their variables	WITHOUT_CLASSIFICATION	0.999981418266924	WITHOUT_CLASSIFICATION	1.8581733076013054E-5	IMPLEMENTATION
// in-frame EvalState should already have receiver set as self, continue to use it	WITHOUT_CLASSIFICATION	0.9997859647943583	WITHOUT_CLASSIFICATION	2.140352056417001E-4	IMPLEMENTATION
// assign the default values, adding to the end of allArgs	WITHOUT_CLASSIFICATION	0.9998796367342703	WITHOUT_CLASSIFICATION	1.2036326572980555E-4	IMPLEMENTATION
// Make sure the appropriate scope has proper size. See JRUBY-2046.	WITHOUT_CLASSIFICATION	0.9999761885940691	WITHOUT_CLASSIFICATION	2.3811405930787762E-5	IMPLEMENTATION
// Experimental class reification support, to create real Java classes // for Ruby classes after the first opening	WITHOUT_CLASSIFICATION	0.9999918828073453	WITHOUT_CLASSIFICATION	8.117192654795503E-6	IMPLEMENTATION
// This should never happen past parse, but just bulletproof this just in case	WITHOUT_CLASSIFICATION	0.9999960219873326	WITHOUT_CLASSIFICATION	3.978012667363404E-6	IMPLEMENTATION
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.999967902379309	WITHOUT_CLASSIFICATION	3.209762069098225E-5	IMPLEMENTATION
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999909261279213	WITHOUT_CLASSIFICATION	9.073872078647343E-6	IMPLEMENTATION
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999914473192071	WITHOUT_CLASSIFICATION	8.552680792970198E-6	IMPLEMENTATION
// never visited, should be ok	WITHOUT_CLASSIFICATION	0.9988789707887785	WITHOUT_CLASSIFICATION	0.0011210292112215478	IMPLEMENTATION
// If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil	WITHOUT_CLASSIFICATION	0.9998882795208626	WITHOUT_CLASSIFICATION	1.1172047913744434E-4	IMPLEMENTATION
// JRUBY-530 until case	WITHOUT_CLASSIFICATION	0.9999653760657843	WITHOUT_CLASSIFICATION	3.4623934215781134E-5	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.9998389246374998	WITHOUT_CLASSIFICATION	1.610753625002779E-4	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999983580433046	WITHOUT_CLASSIFICATION	1.6419566954454867E-6	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9993565651485392	WITHOUT_CLASSIFICATION	6.434348514608372E-4	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999684395772143	WITHOUT_CLASSIFICATION	3.156042278567541E-5	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999684395772143	WITHOUT_CLASSIFICATION	3.156042278567541E-5	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999983580433046	WITHOUT_CLASSIFICATION	1.6419566954454867E-6	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999069213267913	WITHOUT_CLASSIFICATION	9.307867320873957E-5	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999069213267913	WITHOUT_CLASSIFICATION	9.307867320873957E-5	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9973159886132309	WITHOUT_CLASSIFICATION	0.0026840113867691753	IMPLEMENTATION
// Empirical Observations: // null -> Some arity // argsNode == this.argsNode then check for arity changes // newline(splatnode) -> argspushnode	WITHOUT_CLASSIFICATION	0.9999788599667252	WITHOUT_CLASSIFICATION	2.1140033274826407E-5	IMPLEMENTATION
//assert !(value instanceof RubyArray)  : "Not an array";	WITHOUT_CLASSIFICATION	0.9944042369803108	WITHOUT_CLASSIFICATION	0.005595763019689262	IMPLEMENTATION
// Serialization killed our dynamic scope.  We can just create an empty one // since serialization cannot serialize an eval (which is the only thing // which is capable of having a non-empty dynamic scope).	WITHOUT_CLASSIFICATION	0.9999999963240108	WITHOUT_CLASSIFICATION	3.675989177187854E-9	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.999487919529	WITHOUT_CLASSIFICATION	5.120804710000054E-4	IMPLEMENTATION
// We could probably also detect if LHS value came out of cache and avoid some of this	WITHOUT_CLASSIFICATION	0.9997277864182543	WITHOUT_CLASSIFICATION	2.722135817457011E-4	IMPLEMENTATION
//        assert thenBody != null : "thenBody is not null"; //        assert elseBody != null : "elseBody is not null";	WITHOUT_CLASSIFICATION	0.9922891949314826	WITHOUT_CLASSIFICATION	0.007710805068517449	IMPLEMENTATION
// add in reverse order	WITHOUT_CLASSIFICATION	0.999981769109299	WITHOUT_CLASSIFICATION	1.8230890700938407E-5	IMPLEMENTATION
// in order to make pragma's noops we set location to a special value	WITHOUT_CLASSIFICATION	0.9999915769311489	WITHOUT_CLASSIFICATION	8.423068851021214E-6	IMPLEMENTATION
// ignore compiler pragmas	WITHOUT_CLASSIFICATION	0.999956720764472	WITHOUT_CLASSIFICATION	4.327923552808662E-5	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9993565651485392	WITHOUT_CLASSIFICATION	6.434348514608372E-4	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999684395772143	WITHOUT_CLASSIFICATION	3.156042278567541E-5	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999684395772143	WITHOUT_CLASSIFICATION	3.156042278567541E-5	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999983580433046	WITHOUT_CLASSIFICATION	1.6419566954454867E-6	IMPLEMENTATION
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.999967902379309	WITHOUT_CLASSIFICATION	3.209762069098225E-5	IMPLEMENTATION
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999914473192071	WITHOUT_CLASSIFICATION	8.552680792970198E-6	IMPLEMENTATION
// No actual test, so do 'when' if when expression is not nil	WITHOUT_CLASSIFICATION	0.9999407071030376	WITHOUT_CLASSIFICATION	5.929289696235134E-5	IMPLEMENTATION
// save entering the try if there's nothing to ensure	WITHOUT_CLASSIFICATION	0.9999953177808233	WITHOUT_CLASSIFICATION	4.6822191766749005E-6	IMPLEMENTATION
// For 'foo'	WITHOUT_CLASSIFICATION	0.9994077586552153	WITHOUT_CLASSIFICATION	5.922413447848236E-4	IMPLEMENTATION
// For 'foo'	WITHOUT_CLASSIFICATION	0.9994077586552153	WITHOUT_CLASSIFICATION	5.922413447848236E-4	IMPLEMENTATION
// admittedly inefficient	WITHOUT_CLASSIFICATION	0.9999438606165095	WITHOUT_CLASSIFICATION	5.6139383490612176E-5	IMPLEMENTATION
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999583952058438	WITHOUT_CLASSIFICATION	4.160479415616947E-5	IMPLEMENTATION
// What static scoping relationship exists when it comes into being.	WITHOUT_CLASSIFICATION	0.9998752146582126	WITHOUT_CLASSIFICATION	1.2478534178739275E-4	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999661144937928	WITHOUT_CLASSIFICATION	3.3885506207144234E-5	IMPLEMENTATION
// just rethrow	WITHOUT_CLASSIFICATION	0.9999497452089449	WITHOUT_CLASSIFICATION	5.025479105502114E-5	IMPLEMENTATION
// just rethrow	WITHOUT_CLASSIFICATION	0.9999497452089449	WITHOUT_CLASSIFICATION	5.025479105502114E-5	IMPLEMENTATION
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9998818945263173	WITHOUT_CLASSIFICATION	1.1810547368275306E-4	IMPLEMENTATION
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9998818945263173	WITHOUT_CLASSIFICATION	1.1810547368275306E-4	IMPLEMENTATION
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999837578224491	WITHOUT_CLASSIFICATION	1.6242177550996825E-5	IMPLEMENTATION
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999837578224491	WITHOUT_CLASSIFICATION	1.6242177550996825E-5	IMPLEMENTATION
// Execute rescue block	WITHOUT_CLASSIFICATION	0.9999591938013913	WITHOUT_CLASSIFICATION	4.0806198608664313E-5	IMPLEMENTATION
// If no exception is thrown execute else block	WITHOUT_CLASSIFICATION	0.9999988589509784	WITHOUT_CLASSIFICATION	1.1410490217020216E-6	IMPLEMENTATION
// index of variable for this arg	WITHOUT_CLASSIFICATION	0.9978658470987564	WITHOUT_CLASSIFICATION	0.0021341529012435753	IMPLEMENTATION
// only a marker interface	WITHOUT_CLASSIFICATION	0.9999871545188319	WITHOUT_CLASSIFICATION	1.2845481168155898E-5	IMPLEMENTATION
// don't attempt to coerce to array, just wrap and return	WITHOUT_CLASSIFICATION	0.9999905835915748	WITHOUT_CLASSIFICATION	9.41640842514771E-6	IMPLEMENTATION
// pragmas	WITHOUT_CLASSIFICATION	0.9999935752659732	WITHOUT_CLASSIFICATION	6.424734026853922E-6	IMPLEMENTATION
// The method also needs a scope, do both	WITHOUT_CLASSIFICATION	0.9989749090519794	WITHOUT_CLASSIFICATION	0.0010250909480206318	IMPLEMENTATION
// We're doing normal framed compilation or the method needs a frame	WITHOUT_CLASSIFICATION	0.9995216431939005	WITHOUT_CLASSIFICATION	4.783568060996017E-4	IMPLEMENTATION
// The method doesn't need a scope or static scope; frame only	WITHOUT_CLASSIFICATION	0.9999555816019121	WITHOUT_CLASSIFICATION	4.4418398087915084E-5	IMPLEMENTATION
// The method doesn't need a scope, but has static scope needs; use a dummy scope	WITHOUT_CLASSIFICATION	0.9999467164798606	WITHOUT_CLASSIFICATION	5.328352013933554E-5	IMPLEMENTATION
// Proc.new needs the caller's block to instantiate a proc	WITHOUT_CLASSIFICATION	0.999810701541456	WITHOUT_CLASSIFICATION	1.8929845854391528E-4	IMPLEMENTATION
// check for Proc.new, an especially magic method	WITHOUT_CLASSIFICATION	0.9998126131491819	WITHOUT_CLASSIFICATION	1.873868508180543E-4	IMPLEMENTATION
// long, slow way causes disabling	WITHOUT_CLASSIFICATION	0.9998557228322718	WITHOUT_CLASSIFICATION	1.442771677282594E-4	IMPLEMENTATION
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9998763715388516	WITHOUT_CLASSIFICATION	1.236284611485182E-4	IMPLEMENTATION
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9998763715388516	WITHOUT_CLASSIFICATION	1.236284611485182E-4	IMPLEMENTATION
// long, slow way causes disabling for defined	WITHOUT_CLASSIFICATION	0.9999471312836522	WITHOUT_CLASSIFICATION	5.286871634782153E-5	IMPLEMENTATION
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9994859058023325	WITHOUT_CLASSIFICATION	5.140941976674949E-4	IMPLEMENTATION
// Because Regexp#=== sets backref, we have to make this backref-aware	WITHOUT_CLASSIFICATION	0.9983679121224889	WITHOUT_CLASSIFICATION	0.0016320878775110213	IMPLEMENTATION
// encountered a node we don't recognize, set everything to true to disable optz	WITHOUT_CLASSIFICATION	0.9998859170260701	WITHOUT_CLASSIFICATION	1.1408297392994477E-4	IMPLEMENTATION
// only arrays that are "lightweight" are being used as args arrays	WITHOUT_CLASSIFICATION	0.9999965395210421	WITHOUT_CLASSIFICATION	3.460478958027132E-6	IMPLEMENTATION
// otherwise, it's a literal array	WITHOUT_CLASSIFICATION	0.9999176523795683	WITHOUT_CLASSIFICATION	8.234762043165652E-5	IMPLEMENTATION
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9997915647746329	WITHOUT_CLASSIFICATION	2.0843522536704822E-4	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999706113509023	WITHOUT_CLASSIFICATION	2.938864909773673E-5	IMPLEMENTATION
// compile first node as non-expr and then second node	WITHOUT_CLASSIFICATION	0.999990104413149	WITHOUT_CLASSIFICATION	9.895586851094107E-6	IMPLEMENTATION
// last node, either !instanceof WhenNode or null, is the else	WITHOUT_CLASSIFICATION	0.9999988288285765	WITHOUT_CLASSIFICATION	1.1711714235683834E-6	IMPLEMENTATION
// compile first node only	WITHOUT_CLASSIFICATION	0.9999682325448339	WITHOUT_CLASSIFICATION	3.176745516608019E-5	IMPLEMENTATION
// splatted when, can't do it yet	WITHOUT_CLASSIFICATION	0.9992921257965385	WITHOUT_CLASSIFICATION	7.07874203461452E-4	IMPLEMENTATION
// if __send__ with a literal symbol, compile it as a direct fcall	WITHOUT_CLASSIFICATION	0.9999814765114976	WITHOUT_CLASSIFICATION	1.8523488502342668E-5	IMPLEMENTATION
// NOTE: Currently this optimization is limited to the following situations: // * All expressions must be int-ranged literal fixnums // It also still emits the code for the "safe" when logic, which is rather // wasteful (since it essentially doubles each code body). As such it is // normally disabled, but it serves as an example of how this optimization // could be done. Ideally, it should be combined with the when processing // to improve code reuse before it's generally available.	WITHOUT_CLASSIFICATION	0.9998927462405629	WITHOUT_CLASSIFICATION	1.0725375943708558E-4	IMPLEMENTATION
// aggregate when nodes into a list, unfortunately, this is no	WITHOUT_CLASSIFICATION	0.9999943977867812	WITHOUT_CLASSIFICATION	5.602213218758351E-6	IMPLEMENTATION
// one arg but it's an array, treat it as a proper array	WITHOUT_CLASSIFICATION	0.9996396907382044	WITHOUT_CLASSIFICATION	3.6030926179563623E-4	IMPLEMENTATION
// can't do it	WITHOUT_CLASSIFICATION	0.9996878138714407	WITHOUT_CLASSIFICATION	3.1218612855924403E-4	IMPLEMENTATION
// otherwise, use normal args compiler	WITHOUT_CLASSIFICATION	0.9997069882193812	WITHOUT_CLASSIFICATION	2.930117806188475E-4	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.999993130730412	WITHOUT_CLASSIFICATION	6.869269588076674E-6	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.999993130730412	WITHOUT_CLASSIFICATION	6.869269588076674E-6	IMPLEMENTATION
// these are all simple cases that don't require the heavier defined logic	WITHOUT_CLASSIFICATION	0.9997517868479024	WITHOUT_CLASSIFICATION	2.482131520975089E-4	IMPLEMENTATION
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9996983594805002	WITHOUT_CLASSIFICATION	3.016405194996755E-4	IMPLEMENTATION
//[]	WITHOUT_CLASSIFICATION	0.999976214108194	WITHOUT_CLASSIFICATION	2.378589180606253E-5	IMPLEMENTATION
//[]	WITHOUT_CLASSIFICATION	0.999976214108194	WITHOUT_CLASSIFICATION	2.378589180606253E-5	IMPLEMENTATION
//          context.swapValues(); //context.consumeCurrentValue();	WITHOUT_CLASSIFICATION	0.999912663055327	WITHOUT_CLASSIFICATION	8.733694467299634E-5	IMPLEMENTATION
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[] //[self] //[RubyClass] //[RubyClass, RubyClass]	WITHOUT_CLASSIFICATION	0.9996983594805002	WITHOUT_CLASSIFICATION	3.016405194996755E-4	IMPLEMENTATION
//[RubyClass]	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9996983594805002	WITHOUT_CLASSIFICATION	3.016405194996755E-4	IMPLEMENTATION
// if root of method is rescue, compile as a light rescue	WITHOUT_CLASSIFICATION	0.9999953759991526	WITHOUT_CLASSIFICATION	4.6240008474676404E-6	IMPLEMENTATION
// inspect body and args	WITHOUT_CLASSIFICATION	0.999993099729131	WITHOUT_CLASSIFICATION	6.90027086902394E-6	IMPLEMENTATION
// inspect body and args	WITHOUT_CLASSIFICATION	0.999993099729131	WITHOUT_CLASSIFICATION	6.90027086902394E-6	IMPLEMENTATION
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999861920411302	WITHOUT_CLASSIFICATION	1.3807958869875976E-5	IMPLEMENTATION
// if root of method is rescue, compile as light rescue	WITHOUT_CLASSIFICATION	0.9999944988630868	WITHOUT_CLASSIFICATION	5.501136913202292E-6	IMPLEMENTATION
// invoke run with threadcontext and topself	WITHOUT_CLASSIFICATION	0.9999042855222945	WITHOUT_CLASSIFICATION	9.57144777054999E-5	IMPLEMENTATION
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9996983594805002	WITHOUT_CLASSIFICATION	3.016405194996755E-4	IMPLEMENTATION
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9996983594805002	WITHOUT_CLASSIFICATION	3.016405194996755E-4	IMPLEMENTATION
//[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9996983594805002	WITHOUT_CLASSIFICATION	3.016405194996755E-4	IMPLEMENTATION
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9996983594805002	WITHOUT_CLASSIFICATION	3.016405194996755E-4	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9992986847773008	WITHOUT_CLASSIFICATION	7.013152226992467E-4	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999581875647852	WITHOUT_CLASSIFICATION	4.181243521476291E-5	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999581875647852	WITHOUT_CLASSIFICATION	4.181243521476291E-5	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9997466665931058	WITHOUT_CLASSIFICATION	2.5333340689411693E-4	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9997466665931058	WITHOUT_CLASSIFICATION	2.5333340689411693E-4	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9997466665931058	WITHOUT_CLASSIFICATION	2.5333340689411693E-4	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999581875647852	WITHOUT_CLASSIFICATION	4.181243521476291E-5	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999581875647852	WITHOUT_CLASSIFICATION	4.181243521476291E-5	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9992986847773008	WITHOUT_CLASSIFICATION	7.013152226992467E-4	IMPLEMENTATION
// force heap-scope behavior, since it uses parent's scope	WITHOUT_CLASSIFICATION	0.9999168057969691	WITHOUT_CLASSIFICATION	8.319420303085849E-5	IMPLEMENTATION
// always false or nil	WITHOUT_CLASSIFICATION	0.9999739458841937	WITHOUT_CLASSIFICATION	2.6054115806143363E-5	IMPLEMENTATION
// optimizations if we know ahead of time it will always be true or false	WITHOUT_CLASSIFICATION	0.9999797233621253	WITHOUT_CLASSIFICATION	2.027663787472714E-5	IMPLEMENTATION
// normal	WITHOUT_CLASSIFICATION	0.9999872198941246	WITHOUT_CLASSIFICATION	1.2780105875483846E-5	IMPLEMENTATION
// compile condition as non-expr and just compile "then" body	WITHOUT_CLASSIFICATION	0.9999995572441533	WITHOUT_CLASSIFICATION	4.427558467214237E-7	IMPLEMENTATION
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9993611231414358	WITHOUT_CLASSIFICATION	6.388768585642265E-4	IMPLEMENTATION
// just push nil for pragmas	WITHOUT_CLASSIFICATION	0.9999955836943892	WITHOUT_CLASSIFICATION	4.416305610778002E-6	IMPLEMENTATION
// "assignment" means the value is already on the stack	WITHOUT_CLASSIFICATION	0.9999970609442524	WITHOUT_CLASSIFICATION	2.939055747585024E-6	IMPLEMENTATION
// compile first node only	WITHOUT_CLASSIFICATION	0.9999682325448339	WITHOUT_CLASSIFICATION	3.176745516608019E-5	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999581875647852	WITHOUT_CLASSIFICATION	4.181243521476291E-5	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999581875647852	WITHOUT_CLASSIFICATION	4.181243521476291E-5	IMPLEMENTATION
// eval new value, call operator on old value, and assign	WITHOUT_CLASSIFICATION	0.9997445131762485	WITHOUT_CLASSIFICATION	2.5548682375150925E-4	IMPLEMENTATION
// try optz version	WITHOUT_CLASSIFICATION	0.9997950549445478	WITHOUT_CLASSIFICATION	2.0494505545223408E-4	IMPLEMENTATION
// sizes must match	WITHOUT_CLASSIFICATION	0.9994937433168006	WITHOUT_CLASSIFICATION	5.062566831993841E-4	IMPLEMENTATION
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999956551976542	WITHOUT_CLASSIFICATION	4.344802345805324E-6	IMPLEMENTATION
// normal items at the "head" of the masgn	WITHOUT_CLASSIFICATION	0.9995373174095056	WITHOUT_CLASSIFICATION	4.626825904943273E-4	IMPLEMENTATION
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9992582860654962	WITHOUT_CLASSIFICATION	7.417139345038416E-4	IMPLEMENTATION
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.999858615704031	WITHOUT_CLASSIFICATION	1.4138429596899818E-4	IMPLEMENTATION
// only supports simple parallel assignment of up to 10 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.99999946288639	WITHOUT_CLASSIFICATION	5.37113610059262E-7	IMPLEMENTATION
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999185030358624	WITHOUT_CLASSIFICATION	8.149696413759294E-5	IMPLEMENTATION
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999885618706003	WITHOUT_CLASSIFICATION	1.1438129399607248E-5	IMPLEMENTATION
//RedoNode redoNode = (RedoNode)node;	WITHOUT_CLASSIFICATION	0.9996150114106003	WITHOUT_CLASSIFICATION	3.8498858939971985E-4	IMPLEMENTATION
// done processing args	WITHOUT_CLASSIFICATION	0.9999694786096197	WITHOUT_CLASSIFICATION	3.052139038024402E-5	IMPLEMENTATION
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999773730983106	WITHOUT_CLASSIFICATION	2.262690168945375E-5	IMPLEMENTATION
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999167069159948	WITHOUT_CLASSIFICATION	8.32930840052452E-5	IMPLEMENTATION
// if arity 1, just compile the one element to save us the array cost	WITHOUT_CLASSIFICATION	0.9999980624146602	WITHOUT_CLASSIFICATION	1.9375853398275874E-6	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.9999935752659732	WITHOUT_CLASSIFICATION	6.424734026853922E-6	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.9999935752659732	WITHOUT_CLASSIFICATION	6.424734026853922E-6	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.9999935752659732	WITHOUT_CLASSIFICATION	6.424734026853922E-6	IMPLEMENTATION
// compile into array	WITHOUT_CLASSIFICATION	0.9999848962565151	WITHOUT_CLASSIFICATION	1.5103743484915253E-5	IMPLEMENTATION
// compile first node as non-expr and compile second node	WITHOUT_CLASSIFICATION	0.9999862230060811	WITHOUT_CLASSIFICATION	1.3776993918931209E-5	IMPLEMENTATION
// check if it's an immediate, and don't outline	WITHOUT_CLASSIFICATION	0.9999717375038897	WITHOUT_CLASSIFICATION	2.826249611029319E-5	IMPLEMENTATION
// condition is always true, just compile it and not body	WITHOUT_CLASSIFICATION	0.9999401811464684	WITHOUT_CLASSIFICATION	5.981885353158973E-5	IMPLEMENTATION
// force static scope to claim restarg at 0, so it only implements the [] version of __file__	WITHOUT_CLASSIFICATION	0.9999537933327007	WITHOUT_CLASSIFICATION	4.620666729917924E-5	IMPLEMENTATION
// create method for toplevel of script	WITHOUT_CLASSIFICATION	0.999945908877287	WITHOUT_CLASSIFICATION	5.409112271300901E-5	IMPLEMENTATION
// it's a multiple-statement body, iterate over all elements in turn and chain if it get too long	WITHOUT_CLASSIFICATION	0.9999998921218408	WITHOUT_CLASSIFICATION	1.078781591792628E-7	IMPLEMENTATION
// send it along as arity-specific, we don't need the array	WITHOUT_CLASSIFICATION	0.9999106852406213	WITHOUT_CLASSIFICATION	8.93147593786274E-5	IMPLEMENTATION
// single-statement body, just compile it	WITHOUT_CLASSIFICATION	0.9999696212985961	WITHOUT_CLASSIFICATION	3.037870140387131E-5	IMPLEMENTATION
// leave as a normal array	WITHOUT_CLASSIFICATION	0.999987378582402	WITHOUT_CLASSIFICATION	1.262141759806979E-5	IMPLEMENTATION
// This method has JITed already or has been abandoned. Bail out.	WITHOUT_CLASSIFICATION	0.9993440218308043	WITHOUT_CLASSIFICATION	6.559781691956269E-4	IMPLEMENTATION
// The cache is full. Abandon JIT for this method and bail out.	WITHOUT_CLASSIFICATION	0.9980303111147034	WITHOUT_CLASSIFICATION	0.00196968888529661	IMPLEMENTATION
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999861920411302	WITHOUT_CLASSIFICATION	1.3807958869875976E-5	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999581875647852	WITHOUT_CLASSIFICATION	4.181243521476291E-5	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999581875647852	WITHOUT_CLASSIFICATION	4.181243521476291E-5	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9992986847773008	WITHOUT_CLASSIFICATION	7.013152226992467E-4	IMPLEMENTATION
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9993611231414358	WITHOUT_CLASSIFICATION	6.388768585642265E-4	IMPLEMENTATION
// try optz version	WITHOUT_CLASSIFICATION	0.9997950549445478	WITHOUT_CLASSIFICATION	2.0494505545223408E-4	IMPLEMENTATION
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999956551976542	WITHOUT_CLASSIFICATION	4.344802345805324E-6	IMPLEMENTATION
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9992582860654962	WITHOUT_CLASSIFICATION	7.417139345038416E-4	IMPLEMENTATION
// sizes must match	WITHOUT_CLASSIFICATION	0.9994937433168006	WITHOUT_CLASSIFICATION	5.062566831993841E-4	IMPLEMENTATION
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.999858615704031	WITHOUT_CLASSIFICATION	1.4138429596899818E-4	IMPLEMENTATION
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999885618706003	WITHOUT_CLASSIFICATION	1.1438129399607248E-5	IMPLEMENTATION
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999185030358624	WITHOUT_CLASSIFICATION	8.149696413759294E-5	IMPLEMENTATION
// done processing args	WITHOUT_CLASSIFICATION	0.9999694786096197	WITHOUT_CLASSIFICATION	3.052139038024402E-5	IMPLEMENTATION
// Check if the method has been explicitly excluded	WITHOUT_CLASSIFICATION	0.9997816052573232	WITHOUT_CLASSIFICATION	2.1839474267693873E-4	IMPLEMENTATION
// class could not be found nor generated; give up on JIT and bail out	WITHOUT_CLASSIFICATION	0.9976705946440313	WITHOUT_CLASSIFICATION	0.0023294053559687437	IMPLEMENTATION
// successfully got back a jitted method	WITHOUT_CLASSIFICATION	0.9996716834337522	WITHOUT_CLASSIFICATION	3.283165662477349E-4	IMPLEMENTATION
// finally, grab the script	WITHOUT_CLASSIFICATION	0.9999653749272606	WITHOUT_CLASSIFICATION	3.462507273938141E-5	IMPLEMENTATION
// logEvery n methods based on configuration	WITHOUT_CLASSIFICATION	0.9998739046105122	WITHOUT_CLASSIFICATION	1.260953894877971E-4	IMPLEMENTATION
// Time the compilation	WITHOUT_CLASSIFICATION	0.9999749362913289	WITHOUT_CLASSIFICATION	2.506370867104262E-5	IMPLEMENTATION
// we have a body, do a full-on method	WITHOUT_CLASSIFICATION	0.9996747203367282	WITHOUT_CLASSIFICATION	3.252796632717436E-4	IMPLEMENTATION
// If we don't have a body, check for required or opt args // if opt args, they could have side effects // if required args, need to raise errors if too few args passed // otherwise, method does nothing, make it a nop	WITHOUT_CLASSIFICATION	0.9991694084295238	WITHOUT_CLASSIFICATION	8.305915704760686E-4	IMPLEMENTATION
// if we haven't already decided on a do-nothing call	WITHOUT_CLASSIFICATION	0.9998589534698116	WITHOUT_CLASSIFICATION	1.410465301884549E-4	IMPLEMENTATION
// only supports simple parallel assignment of up to 4 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999995500912402	WITHOUT_CLASSIFICATION	4.4990875982438025E-7	IMPLEMENTATION
// normal items at the front or back of the masgn	WITHOUT_CLASSIFICATION	0.9995748817155375	WITHOUT_CLASSIFICATION	4.2511828446250796E-4	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999629075749968	WITHOUT_CLASSIFICATION	3.709242500320173E-5	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999712060739886	WITHOUT_CLASSIFICATION	2.879392601129022E-5	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999973227422361	WITHOUT_CLASSIFICATION	2.6772577638151137E-6	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999981809785553	WITHOUT_CLASSIFICATION	1.8190214446144165E-6	IMPLEMENTATION
// end of variable scope	WITHOUT_CLASSIFICATION	0.9998429451279426	WITHOUT_CLASSIFICATION	1.5705487205735973E-4	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.99991643198453	WITHOUT_CLASSIFICATION	8.356801547010077E-5	IMPLEMENTATION
// Define the annotation for the method	WITHOUT_CLASSIFICATION	0.9998469470957966	WITHOUT_CLASSIFICATION	1.5305290420346805E-4	IMPLEMENTATION
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999757881649306	WITHOUT_CLASSIFICATION	2.4211835069386042E-5	IMPLEMENTATION
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999720424591919	WITHOUT_CLASSIFICATION	2.7957540808063042E-5	IMPLEMENTATION
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999519254835533	WITHOUT_CLASSIFICATION	4.807451644683008E-5	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.999964799826609	WITHOUT_CLASSIFICATION	3.520017339092344E-5	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.999964799826609	WITHOUT_CLASSIFICATION	3.520017339092344E-5	IMPLEMENTATION
// value is already on stack, save it for later	WITHOUT_CLASSIFICATION	0.9999841154672742	WITHOUT_CLASSIFICATION	1.5884532725798867E-5	IMPLEMENTATION
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9945458246939369	WITHOUT_CLASSIFICATION	0.005454175306063147	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.999976214108194	WITHOUT_CLASSIFICATION	2.378589180606253E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.999976214108194	WITHOUT_CLASSIFICATION	2.378589180606253E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.999976214108194	WITHOUT_CLASSIFICATION	2.378589180606253E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.999976214108194	WITHOUT_CLASSIFICATION	2.378589180606253E-5	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.999976214108194	WITHOUT_CLASSIFICATION	2.378589180606253E-5	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.999976214108194	WITHOUT_CLASSIFICATION	2.378589180606253E-5	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.999976214108194	WITHOUT_CLASSIFICATION	2.378589180606253E-5	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.999976214108194	WITHOUT_CLASSIFICATION	2.378589180606253E-5	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.999976214108194	WITHOUT_CLASSIFICATION	2.378589180606253E-5	IMPLEMENTATION
/*arg2*/	WITHOUT_CLASSIFICATION	0.999976214108194	WITHOUT_CLASSIFICATION	2.378589180606253E-5	IMPLEMENTATION
/*args*/	WITHOUT_CLASSIFICATION	0.999976214108194	WITHOUT_CLASSIFICATION	2.378589180606253E-5	IMPLEMENTATION
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9945458246939369	WITHOUT_CLASSIFICATION	0.005454175306063147	IMPLEMENTATION
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9998544672260199	WITHOUT_CLASSIFICATION	1.4553277397999856E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.999976214108194	WITHOUT_CLASSIFICATION	2.378589180606253E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.999976214108194	WITHOUT_CLASSIFICATION	2.378589180606253E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.999976214108194	WITHOUT_CLASSIFICATION	2.378589180606253E-5	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.999976214108194	WITHOUT_CLASSIFICATION	2.378589180606253E-5	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.999976214108194	WITHOUT_CLASSIFICATION	2.378589180606253E-5	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.999976214108194	WITHOUT_CLASSIFICATION	2.378589180606253E-5	IMPLEMENTATION
/*args*/	WITHOUT_CLASSIFICATION	0.999976214108194	WITHOUT_CLASSIFICATION	2.378589180606253E-5	IMPLEMENTATION
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9997165113463831	WITHOUT_CLASSIFICATION	2.834886536169855E-4	IMPLEMENTATION
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9997165113463831	WITHOUT_CLASSIFICATION	2.834886536169855E-4	IMPLEMENTATION
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999757621567817	WITHOUT_CLASSIFICATION	2.42378432182554E-5	IMPLEMENTATION
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999757621567817	WITHOUT_CLASSIFICATION	2.42378432182554E-5	IMPLEMENTATION
// invoke	WITHOUT_CLASSIFICATION	0.9999938305113376	WITHOUT_CLASSIFICATION	6.169488662451024E-6	IMPLEMENTATION
// invoke	WITHOUT_CLASSIFICATION	0.9999938305113376	WITHOUT_CLASSIFICATION	6.169488662451024E-6	IMPLEMENTATION
// check if it's true, ending if so	WITHOUT_CLASSIFICATION	0.9999640598327881	WITHOUT_CLASSIFICATION	3.5940167211842495E-5	IMPLEMENTATION
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.999554874044758	WITHOUT_CLASSIFICATION	4.451259552420389E-4	IMPLEMENTATION
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.999554874044758	WITHOUT_CLASSIFICATION	4.451259552420389E-4	IMPLEMENTATION
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9998707917749163	WITHOUT_CLASSIFICATION	1.2920822508362395E-4	IMPLEMENTATION
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9998707917749163	WITHOUT_CLASSIFICATION	1.2920822508362395E-4	IMPLEMENTATION
// eval value for assignment	WITHOUT_CLASSIFICATION	0.9999931558881683	WITHOUT_CLASSIFICATION	6.844111831754882E-6	IMPLEMENTATION
// call site	WITHOUT_CLASSIFICATION	0.9993745944378033	WITHOUT_CLASSIFICATION	6.254055621966539E-4	IMPLEMENTATION
// call site	WITHOUT_CLASSIFICATION	0.9993745944378033	WITHOUT_CLASSIFICATION	6.254055621966539E-4	IMPLEMENTATION
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9998473304620751	WITHOUT_CLASSIFICATION	1.5266953792490622E-4	IMPLEMENTATION
// check if it's true, ending if not	WITHOUT_CLASSIFICATION	0.9976811633641623	WITHOUT_CLASSIFICATION	0.0023188366358375934	IMPLEMENTATION
// eval value and save it	WITHOUT_CLASSIFICATION	0.9999874519149059	WITHOUT_CLASSIFICATION	1.2548085094104447E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.999976214108194	WITHOUT_CLASSIFICATION	2.378589180606253E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.999976214108194	WITHOUT_CLASSIFICATION	2.378589180606253E-5	IMPLEMENTATION
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9998473304620751	WITHOUT_CLASSIFICATION	1.5266953792490622E-4	IMPLEMENTATION
// receiver, args, result, value	WITHOUT_CLASSIFICATION	0.9999796848646665	WITHOUT_CLASSIFICATION	2.0315135333584E-5	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9996615266859028	WITHOUT_CLASSIFICATION	3.3847331409717497E-4	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9996615266859028	WITHOUT_CLASSIFICATION	3.3847331409717497E-4	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9996615266859028	WITHOUT_CLASSIFICATION	3.3847331409717497E-4	IMPLEMENTATION
// super uses current block if none given	WITHOUT_CLASSIFICATION	0.9996595884453128	WITHOUT_CLASSIFICATION	3.4041155468716425E-4	IMPLEMENTATION
// args	WITHOUT_CLASSIFICATION	0.9999942954120404	WITHOUT_CLASSIFICATION	5.7045879594578895E-6	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999948678229778	WITHOUT_CLASSIFICATION	5.132177022281355E-6	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999948678229778	WITHOUT_CLASSIFICATION	5.132177022281355E-6	IMPLEMENTATION
// no args, no block	WITHOUT_CLASSIFICATION	0.9998522090024582	WITHOUT_CLASSIFICATION	1.477909975417378E-4	IMPLEMENTATION
// no args, with block	WITHOUT_CLASSIFICATION	0.9999687951659606	WITHOUT_CLASSIFICATION	3.120483403943314E-5	IMPLEMENTATION
// with args, no block	WITHOUT_CLASSIFICATION	0.9999687951659606	WITHOUT_CLASSIFICATION	3.120483403943314E-5	IMPLEMENTATION
// with args, with block	WITHOUT_CLASSIFICATION	0.9999430420253321	WITHOUT_CLASSIFICATION	5.6957974667924986E-5	IMPLEMENTATION
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.999918508280422	WITHOUT_CLASSIFICATION	8.14917195780652E-5	IMPLEMENTATION
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999916916104523	WITHOUT_CLASSIFICATION	8.308389547715563E-6	IMPLEMENTATION
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999916916104523	WITHOUT_CLASSIFICATION	8.308389547715563E-6	IMPLEMENTATION
// arg and receiver already present on the stack	WITHOUT_CLASSIFICATION	0.9983040823247971	WITHOUT_CLASSIFICATION	0.0016959176752029534	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.999976214108194	WITHOUT_CLASSIFICATION	2.378589180606253E-5	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.999976214108194	WITHOUT_CLASSIFICATION	2.378589180606253E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.999976214108194	WITHOUT_CLASSIFICATION	2.378589180606253E-5	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9996615266859028	WITHOUT_CLASSIFICATION	3.3847331409717497E-4	IMPLEMENTATION
// args	WITHOUT_CLASSIFICATION	0.9999942954120404	WITHOUT_CLASSIFICATION	5.7045879594578895E-6	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999948678229778	WITHOUT_CLASSIFICATION	5.132177022281355E-6	IMPLEMENTATION
// no args, no block	WITHOUT_CLASSIFICATION	0.9998522090024582	WITHOUT_CLASSIFICATION	1.477909975417378E-4	IMPLEMENTATION
// no args, with block	WITHOUT_CLASSIFICATION	0.9999687951659606	WITHOUT_CLASSIFICATION	3.120483403943314E-5	IMPLEMENTATION
// with args, no block	WITHOUT_CLASSIFICATION	0.9999687951659606	WITHOUT_CLASSIFICATION	3.120483403943314E-5	IMPLEMENTATION
// with args, with block	WITHOUT_CLASSIFICATION	0.9999430420253321	WITHOUT_CLASSIFICATION	5.6957974667924986E-5	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.999976214108194	WITHOUT_CLASSIFICATION	2.378589180606253E-5	IMPLEMENTATION
// retrieve scope from scopes array	WITHOUT_CLASSIFICATION	0.9999884304399543	WITHOUT_CLASSIFICATION	1.1569560045648732E-5	IMPLEMENTATION
// use numbered access method	WITHOUT_CLASSIFICATION	0.9996783969312444	WITHOUT_CLASSIFICATION	3.216030687555889E-4	IMPLEMENTATION
// retrieve call site from sites array	WITHOUT_CLASSIFICATION	0.9999778660799254	WITHOUT_CLASSIFICATION	2.2133920074486773E-5	IMPLEMENTATION
// add name to call site list	WITHOUT_CLASSIFICATION	0.9995020308790351	WITHOUT_CLASSIFICATION	4.979691209649524E-4	IMPLEMENTATION
// module is on top of stack	WITHOUT_CLASSIFICATION	0.9999301488772913	WITHOUT_CLASSIFICATION	6.985112270877308E-5	IMPLEMENTATION
// build scope names string	WITHOUT_CLASSIFICATION	0.9999988372392461	WITHOUT_CLASSIFICATION	1.1627607538242047E-6	IMPLEMENTATION
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999990505777896	WITHOUT_CLASSIFICATION	9.494222103864155E-7	IMPLEMENTATION
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999990505777896	WITHOUT_CLASSIFICATION	9.494222103864155E-7	IMPLEMENTATION
// generate call sites initialization code	WITHOUT_CLASSIFICATION	0.9984891191112811	WITHOUT_CLASSIFICATION	0.001510880888718836	IMPLEMENTATION
// generate symbols initialization code	WITHOUT_CLASSIFICATION	0.9991848539492248	WITHOUT_CLASSIFICATION	8.151460507752042E-4	IMPLEMENTATION
// generate fixnums initialization code	WITHOUT_CLASSIFICATION	0.9991843607394275	WITHOUT_CLASSIFICATION	8.156392605724867E-4	IMPLEMENTATION
// generate constants initialization code	WITHOUT_CLASSIFICATION	0.9991816869257965	WITHOUT_CLASSIFICATION	8.183130742036285E-4	IMPLEMENTATION
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9991843607394275	WITHOUT_CLASSIFICATION	8.156392605724867E-4	IMPLEMENTATION
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9991843607394275	WITHOUT_CLASSIFICATION	8.156392605724867E-4	IMPLEMENTATION
// generate variable readers initialization code	WITHOUT_CLASSIFICATION	0.9971122395923591	WITHOUT_CLASSIFICATION	0.002887760407641003	IMPLEMENTATION
// generate variable writers initialization code	WITHOUT_CLASSIFICATION	0.9988369583194049	WITHOUT_CLASSIFICATION	0.0011630416805951534	IMPLEMENTATION
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9993522332748775	WITHOUT_CLASSIFICATION	6.477667251225634E-4	IMPLEMENTATION
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9993522332748775	WITHOUT_CLASSIFICATION	6.477667251225634E-4	IMPLEMENTATION
// generate bytelists initialization code	WITHOUT_CLASSIFICATION	0.9991843607394275	WITHOUT_CLASSIFICATION	8.156392605724867E-4	IMPLEMENTATION
// generate method cache initialization code	WITHOUT_CLASSIFICATION	0.9710211104901801	WITHOUT_CLASSIFICATION	0.028978889509819965	IMPLEMENTATION
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.999918508280422	WITHOUT_CLASSIFICATION	8.14917195780652E-5	IMPLEMENTATION
// use IRubyObject[]	WITHOUT_CLASSIFICATION	0.9992107570993847	WITHOUT_CLASSIFICATION	7.892429006153123E-4	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999869594117385	WITHOUT_CLASSIFICATION	1.304058826160258E-5	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999415709694575	WITHOUT_CLASSIFICATION	5.842903054253045E-5	IMPLEMENTATION
// No point in updating number if last number was same value.	WITHOUT_CLASSIFICATION	0.9999995316418808	WITHOUT_CLASSIFICATION	4.683581192329291E-7	IMPLEMENTATION
// load Object under value	WITHOUT_CLASSIFICATION	0.9999861439192977	WITHOUT_CLASSIFICATION	1.3856080702237528E-5	IMPLEMENTATION
// put under object array already present	WITHOUT_CLASSIFICATION	0.9998705663525341	WITHOUT_CLASSIFICATION	1.2943364746591672E-4	IMPLEMENTATION
// if element count is less than 6, use helper methods	WITHOUT_CLASSIFICATION	0.9999913039680827	WITHOUT_CLASSIFICATION	8.696031917314958E-6	IMPLEMENTATION
// This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements	WITHOUT_CLASSIFICATION	0.9999994646911383	WITHOUT_CLASSIFICATION	5.353088616270595E-7	IMPLEMENTATION
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999478762571775	WITHOUT_CLASSIFICATION	5.21237428225518E-5	IMPLEMENTATION
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999478762571775	WITHOUT_CLASSIFICATION	5.21237428225518E-5	IMPLEMENTATION
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9997104789442623	WITHOUT_CLASSIFICATION	2.8952105573759916E-4	IMPLEMENTATION
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9997104789442623	WITHOUT_CLASSIFICATION	2.8952105573759916E-4	IMPLEMENTATION
// use specific-arity for as much as possible	WITHOUT_CLASSIFICATION	0.9999874789787616	WITHOUT_CLASSIFICATION	1.2521021238447149E-5	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9998989887108078	WITHOUT_CLASSIFICATION	1.0101128919223289E-4	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9998989887108078	WITHOUT_CLASSIFICATION	1.0101128919223289E-4	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9998989887108078	WITHOUT_CLASSIFICATION	1.0101128919223289E-4	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999754210075538	WITHOUT_CLASSIFICATION	2.4578992446278486E-5	IMPLEMENTATION
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999461655615418	WITHOUT_CLASSIFICATION	5.3834438458089815E-5	IMPLEMENTATION
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999461655615418	WITHOUT_CLASSIFICATION	5.3834438458089815E-5	IMPLEMENTATION
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999992532704514	WITHOUT_CLASSIFICATION	7.4672954868919E-7	IMPLEMENTATION
// check the condition	WITHOUT_CLASSIFICATION	0.9999015917527468	WITHOUT_CLASSIFICATION	9.84082472532227E-5	IMPLEMENTATION
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999469067075913	WITHOUT_CLASSIFICATION	5.309329240861866E-5	IMPLEMENTATION
// skip catch block	WITHOUT_CLASSIFICATION	0.9993368284374693	WITHOUT_CLASSIFICATION	6.63171562530814E-4	IMPLEMENTATION
// catch logic for flow-control: next, break	WITHOUT_CLASSIFICATION	0.9995373008956597	WITHOUT_CLASSIFICATION	4.626991043401835E-4	IMPLEMENTATION
// next jump	WITHOUT_CLASSIFICATION	0.9993366587819189	WITHOUT_CLASSIFICATION	6.633412180810397E-4	IMPLEMENTATION
// exceptionNext target is for a next that doesn't push a new value, like this one	WITHOUT_CLASSIFICATION	0.9998469006257092	WITHOUT_CLASSIFICATION	1.5309937429064984E-4	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999712060739886	WITHOUT_CLASSIFICATION	2.879392601129022E-5	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999712060739886	WITHOUT_CLASSIFICATION	2.879392601129022E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999754210075538	WITHOUT_CLASSIFICATION	2.4578992446278486E-5	IMPLEMENTATION
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999992532704514	WITHOUT_CLASSIFICATION	7.4672954868919E-7	IMPLEMENTATION
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999911680085489	WITHOUT_CLASSIFICATION	8.83199145108298E-6	IMPLEMENTATION
// check the condition	WITHOUT_CLASSIFICATION	0.9999015917527468	WITHOUT_CLASSIFICATION	9.84082472532227E-5	IMPLEMENTATION
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999469067075913	WITHOUT_CLASSIFICATION	5.309329240861866E-5	IMPLEMENTATION
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9987173666517021	WITHOUT_CLASSIFICATION	0.0012826333482978366	IMPLEMENTATION
// break jump	WITHOUT_CLASSIFICATION	0.9994884822863784	WITHOUT_CLASSIFICATION	5.115177136214699E-4	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.999960652387444	WITHOUT_CLASSIFICATION	3.934761255588107E-5	IMPLEMENTATION
//[reg]	WITHOUT_CLASSIFICATION	0.999976214108194	WITHOUT_CLASSIFICATION	2.378589180606253E-5	IMPLEMENTATION
// for regular expressions with the /o flag	WITHOUT_CLASSIFICATION	0.9998405327549935	WITHOUT_CLASSIFICATION	1.594672450063958E-4	IMPLEMENTATION
// inside a loop, jump to body	WITHOUT_CLASSIFICATION	0.999980325822784	WITHOUT_CLASSIFICATION	1.967417721605673E-5	IMPLEMENTATION
// inside a loop, jump to conditional	WITHOUT_CLASSIFICATION	0.9998445495874322	WITHOUT_CLASSIFICATION	1.5545041256776902E-4	IMPLEMENTATION
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9987173666517021	WITHOUT_CLASSIFICATION	0.0012826333482978366	IMPLEMENTATION
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999964363572729	WITHOUT_CLASSIFICATION	3.563642727166635E-6	IMPLEMENTATION
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999964363572729	WITHOUT_CLASSIFICATION	3.563642727166635E-6	IMPLEMENTATION
// if more than 4 vars, get values array too	WITHOUT_CLASSIFICATION	0.9999985497776833	WITHOUT_CLASSIFICATION	1.4502223166524017E-6	IMPLEMENTATION
// retry handling in the rescue block	WITHOUT_CLASSIFICATION	0.9999603074291281	WITHOUT_CLASSIFICATION	3.9692570871903635E-5	IMPLEMENTATION
// any exceptions raised must continue to be raised, skipping $! restoration	WITHOUT_CLASSIFICATION	0.9974965443333255	WITHOUT_CLASSIFICATION	0.002503455666674614	IMPLEMENTATION
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9973978639993638	WITHOUT_CLASSIFICATION	0.00260213600063631	IMPLEMENTATION
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999571214601012	WITHOUT_CLASSIFICATION	4.2878539898881324E-5	IMPLEMENTATION
// Handle Flow exceptions, just propagating them	WITHOUT_CLASSIFICATION	0.9999955757812985	WITHOUT_CLASSIFICATION	4.424218701587283E-6	IMPLEMENTATION
// rethrow to outer flow catcher	WITHOUT_CLASSIFICATION	0.9999750091401517	WITHOUT_CLASSIFICATION	2.4990859848240175E-5	IMPLEMENTATION
// Handle Ruby exceptions (RaiseException)	WITHOUT_CLASSIFICATION	0.9971493996991471	WITHOUT_CLASSIFICATION	0.0028506003008529433	IMPLEMENTATION
// inside a loop, break out of it // go to end of loop, leaving break value on stack	WITHOUT_CLASSIFICATION	0.9998019157918699	WITHOUT_CLASSIFICATION	1.9808420813010653E-4	IMPLEMENTATION
// false // zero	WITHOUT_CLASSIFICATION	0.9998634131964856	WITHOUT_CLASSIFICATION	1.3658680351431068E-4	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999810439764051	WITHOUT_CLASSIFICATION	1.8956023594969124E-5	IMPLEMENTATION
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9973978639993638	WITHOUT_CLASSIFICATION	0.00260213600063631	IMPLEMENTATION
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999571214601012	WITHOUT_CLASSIFICATION	4.2878539898881324E-5	IMPLEMENTATION
// retry handling in the rescue blocks	WITHOUT_CLASSIFICATION	0.99997001257782	WITHOUT_CLASSIFICATION	2.9987422179965753E-5	IMPLEMENTATION
// push false	WITHOUT_CLASSIFICATION	0.9998099008188731	WITHOUT_CLASSIFICATION	1.9009918112702473E-4	IMPLEMENTATION
//method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));	WITHOUT_CLASSIFICATION	0.9996983594805002	WITHOUT_CLASSIFICATION	3.016405194996755E-4	IMPLEMENTATION
//method.ifnonnull(trueLabel);	WITHOUT_CLASSIFICATION	0.9997921865822822	WITHOUT_CLASSIFICATION	2.078134177178416E-4	IMPLEMENTATION
// EQ == 0 (i.e. false)   //[C]	WITHOUT_CLASSIFICATION	0.9999617613941935	WITHOUT_CLASSIFICATION	3.823860580654803E-5	IMPLEMENTATION
//[C, C] //[C, C, String] //[C, null|C]	WITHOUT_CLASSIFICATION	0.9996983594805002	WITHOUT_CLASSIFICATION	3.016405194996755E-4	IMPLEMENTATION
//[C]	WITHOUT_CLASSIFICATION	0.999976214108194	WITHOUT_CLASSIFICATION	2.378589180606253E-5	IMPLEMENTATION
// push true	WITHOUT_CLASSIFICATION	0.9995349273119231	WITHOUT_CLASSIFICATION	4.6507268807697915E-4	IMPLEMENTATION
// EQ != 0 (i.e. true)	WITHOUT_CLASSIFICATION	0.999991361927656	WITHOUT_CLASSIFICATION	8.63807234401753E-6	IMPLEMENTATION
//[?, ?] //[?, boolean]	WITHOUT_CLASSIFICATION	0.9997921865822822	WITHOUT_CLASSIFICATION	2.078134177178416E-4	IMPLEMENTATION
//[RubyModule] //[RubyModule, String]	WITHOUT_CLASSIFICATION	0.9996983594805002	WITHOUT_CLASSIFICATION	3.016405194996755E-4	IMPLEMENTATION
//[boolean]	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
// no receiver for singleton class	WITHOUT_CLASSIFICATION	0.9999921314460042	WITHOUT_CLASSIFICATION	7.868553995895036E-6	IMPLEMENTATION
// but there's a superclass passed in, use it	WITHOUT_CLASSIFICATION	0.9994700319623588	WITHOUT_CLASSIFICATION	5.299680376411025E-4	IMPLEMENTATION
// we re-set self to the class, but store the old self in a temporary local variable // this is to prevent it GCing in case the singleton is short-lived	WITHOUT_CLASSIFICATION	0.9999737529087408	WITHOUT_CLASSIFICATION	2.6247091259224693E-5	IMPLEMENTATION
// set self to the class	WITHOUT_CLASSIFICATION	0.9999851995866628	WITHOUT_CLASSIFICATION	1.480041333710697E-5	IMPLEMENTATION
// CLASS BODY	WITHOUT_CLASSIFICATION	0.999667333720671	WITHOUT_CLASSIFICATION	3.3266627932912143E-4	IMPLEMENTATION
// static scope	WITHOUT_CLASSIFICATION	0.9997309920676534	WITHOUT_CLASSIFICATION	2.690079323466588E-4	IMPLEMENTATION
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999570374628801	WITHOUT_CLASSIFICATION	4.296253711976482E-5	IMPLEMENTATION
// new instance to invoke run against	WITHOUT_CLASSIFICATION	0.9999150366701043	WITHOUT_CLASSIFICATION	8.49633298956448E-5	IMPLEMENTATION
// CLASS BODY	WITHOUT_CLASSIFICATION	0.999667333720671	WITHOUT_CLASSIFICATION	3.3266627932912143E-4	IMPLEMENTATION
// static scope	WITHOUT_CLASSIFICATION	0.9997309920676534	WITHOUT_CLASSIFICATION	2.690079323466588E-4	IMPLEMENTATION
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999570374628801	WITHOUT_CLASSIFICATION	4.296253711976482E-5	IMPLEMENTATION
// finally with exception	WITHOUT_CLASSIFICATION	0.9999555558020973	WITHOUT_CLASSIFICATION	4.444419790280382E-5	IMPLEMENTATION
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9993893485896654	WITHOUT_CLASSIFICATION	6.106514103345239E-4	IMPLEMENTATION
// otherwise, there's a receiver, so we pass that in directly for the sclass logic	WITHOUT_CLASSIFICATION	0.9998032497964644	WITHOUT_CLASSIFICATION	1.9675020353565582E-4	IMPLEMENTATION
// original exception is on stack	WITHOUT_CLASSIFICATION	0.9999569978692782	WITHOUT_CLASSIFICATION	4.300213072178069E-5	IMPLEMENTATION
// RaiseException is on stack, get RubyException out	WITHOUT_CLASSIFICATION	0.9999674794235445	WITHOUT_CLASSIFICATION	3.252057645556077E-5	IMPLEMENTATION
// updating position for same line; skip	WITHOUT_CLASSIFICATION	0.9999269346728719	WITHOUT_CLASSIFICATION	7.306532712824542E-5	IMPLEMENTATION
// callbacks to fill in method body	WITHOUT_CLASSIFICATION	0.9999829837826271	WITHOUT_CLASSIFICATION	1.7016217372983143E-5	IMPLEMENTATION
// prepare to call "def" utility method to handle def logic	WITHOUT_CLASSIFICATION	0.9898712829556426	WITHOUT_CLASSIFICATION	0.010128717044357456	IMPLEMENTATION
// script object	WITHOUT_CLASSIFICATION	0.9999263263128031	WITHOUT_CLASSIFICATION	7.367368719697108E-5	IMPLEMENTATION
// arities	WITHOUT_CLASSIFICATION	0.9999935752659732	WITHOUT_CLASSIFICATION	6.424734026853922E-6	IMPLEMENTATION
// TODO assuming case is a fixnum	WITHOUT_CLASSIFICATION	0.7804051969455792	WITHOUT_CLASSIFICATION	0.21959480305442072	IMPLEMENTATION
// we have an input case, prepare branching logic	WITHOUT_CLASSIFICATION	0.9997120608991938	WITHOUT_CLASSIFICATION	2.8793910080614123E-4	IMPLEMENTATION
// we have optimized switch cases, build a lookupswitch	WITHOUT_CLASSIFICATION	0.9997227361010446	WITHOUT_CLASSIFICATION	2.7726389895543654E-4	IMPLEMENTATION
// checkcast the value; if match, fast path; otherwise proceed to slow logic	WITHOUT_CLASSIFICATION	0.9984227691029524	WITHOUT_CLASSIFICATION	0.0015772308970477033	IMPLEMENTATION
// expression-based tests + bodies	WITHOUT_CLASSIFICATION	0.9999378408890479	WITHOUT_CLASSIFICATION	6.215911095207775E-5	IMPLEMENTATION
// normal case, create a new label	WITHOUT_CLASSIFICATION	0.9999791287045959	WITHOUT_CLASSIFICATION	2.0871295404106318E-5	IMPLEMENTATION
// last conditional case, use defaultCase	WITHOUT_CLASSIFICATION	0.999919542331354	WITHOUT_CLASSIFICATION	8.045766864592746E-5	IMPLEMENTATION
// do nothing; arity check is done before call	WITHOUT_CLASSIFICATION	0.9999628172739164	WITHOUT_CLASSIFICATION	3.718272608362783E-5	IMPLEMENTATION
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999971862875516	WITHOUT_CLASSIFICATION	2.813712448408657E-6	IMPLEMENTATION
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.999962669531171	WITHOUT_CLASSIFICATION	3.733046882905789E-5	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.9999982038105057	WITHOUT_CLASSIFICATION	1.7961894942456203E-6	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.9999819159423913	WITHOUT_CLASSIFICATION	1.808405760875235E-5	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.9999819159423913	WITHOUT_CLASSIFICATION	1.808405760875235E-5	IMPLEMENTATION
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9998727740254157	WITHOUT_CLASSIFICATION	1.2722597458420093E-4	IMPLEMENTATION
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9998727740254157	WITHOUT_CLASSIFICATION	1.2722597458420093E-4	IMPLEMENTATION
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999622737357118	WITHOUT_CLASSIFICATION	3.772626428809951E-5	IMPLEMENTATION
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999622737357118	WITHOUT_CLASSIFICATION	3.772626428809951E-5	IMPLEMENTATION
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999856801793966	WITHOUT_CLASSIFICATION	1.4319820603337626E-5	IMPLEMENTATION
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9996154087422304	WITHOUT_CLASSIFICATION	3.845912577695876E-4	IMPLEMENTATION
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.999997529726912	WITHOUT_CLASSIFICATION	2.4702730879615194E-6	IMPLEMENTATION
// if there's args left and we want them, assign to rest arg	WITHOUT_CLASSIFICATION	0.9936265041557919	WITHOUT_CLASSIFICATION	0.00637349584420806	IMPLEMENTATION
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999995965507987	WITHOUT_CLASSIFICATION	4.0344920127631315E-7	IMPLEMENTATION
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9996389212613243	WITHOUT_CLASSIFICATION	3.610787386756994E-4	IMPLEMENTATION
// first, iterate over all pre args	WITHOUT_CLASSIFICATION	0.9999782053867057	WITHOUT_CLASSIFICATION	2.1794613294389355E-5	IMPLEMENTATION
// then optional args	WITHOUT_CLASSIFICATION	0.9999680415043223	WITHOUT_CLASSIFICATION	3.1958495677760645E-5	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999712060739886	WITHOUT_CLASSIFICATION	2.879392601129022E-5	IMPLEMENTATION
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999856801793966	WITHOUT_CLASSIFICATION	1.4319820603337626E-5	IMPLEMENTATION
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9996154087422304	WITHOUT_CLASSIFICATION	3.845912577695876E-4	IMPLEMENTATION
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.999997529726912	WITHOUT_CLASSIFICATION	2.4702730879615194E-6	IMPLEMENTATION
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999995965507987	WITHOUT_CLASSIFICATION	4.0344920127631315E-7	IMPLEMENTATION
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9996389212613243	WITHOUT_CLASSIFICATION	3.610787386756994E-4	IMPLEMENTATION
// if rest args, excluding post args	WITHOUT_CLASSIFICATION	0.9999688870031151	WITHOUT_CLASSIFICATION	3.1112996884849066E-5	IMPLEMENTATION
// finally, post args	WITHOUT_CLASSIFICATION	0.9999652196842678	WITHOUT_CLASSIFICATION	3.478031573219932E-5	IMPLEMENTATION
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9948652421149532	WITHOUT_CLASSIFICATION	0.00513475788504678	IMPLEMENTATION
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9948652421149532	WITHOUT_CLASSIFICATION	0.00513475788504678	IMPLEMENTATION
// unwrap scopes to appropriate depth	WITHOUT_CLASSIFICATION	0.999941980995843	WITHOUT_CLASSIFICATION	5.8019004157012436E-5	IMPLEMENTATION
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999913375354013	WITHOUT_CLASSIFICATION	8.662464598608447E-6	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9996616056799542	WITHOUT_CLASSIFICATION	3.3839432004573205E-4	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999808600731359	WITHOUT_CLASSIFICATION	1.913992686411349E-5	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999808600731359	WITHOUT_CLASSIFICATION	1.913992686411349E-5	IMPLEMENTATION
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999833956295613	WITHOUT_CLASSIFICATION	1.6604370438694875E-5	IMPLEMENTATION
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.999996708829163	WITHOUT_CLASSIFICATION	3.291170837017753E-6	IMPLEMENTATION
// store the local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999870821035245	WITHOUT_CLASSIFICATION	1.2917896475605188E-5	IMPLEMENTATION
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999879690966941	WITHOUT_CLASSIFICATION	1.2030903305964047E-5	IMPLEMENTATION
// return in a class body raises error	WITHOUT_CLASSIFICATION	0.9999979959105306	WITHOUT_CLASSIFICATION	2.004089469411438E-6	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999973227422361	WITHOUT_CLASSIFICATION	2.6772577638151137E-6	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999981809785553	WITHOUT_CLASSIFICATION	1.8190214446144165E-6	IMPLEMENTATION
// end of variable scope	WITHOUT_CLASSIFICATION	0.9998429451279426	WITHOUT_CLASSIFICATION	1.5705487205735973E-4	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.99991643198453	WITHOUT_CLASSIFICATION	8.356801547010077E-5	IMPLEMENTATION
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999720424591919	WITHOUT_CLASSIFICATION	2.7957540808063042E-5	IMPLEMENTATION
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999519254835533	WITHOUT_CLASSIFICATION	4.807451644683008E-5	IMPLEMENTATION
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999833956295613	WITHOUT_CLASSIFICATION	1.6604370438694875E-5	IMPLEMENTATION
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.999996708829163	WITHOUT_CLASSIFICATION	3.291170837017753E-6	IMPLEMENTATION
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999879690966941	WITHOUT_CLASSIFICATION	1.2030903305964047E-5	IMPLEMENTATION
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9986653495811594	WITHOUT_CLASSIFICATION	0.001334650418840622	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9996616056799542	WITHOUT_CLASSIFICATION	3.3839432004573205E-4	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9996616056799542	WITHOUT_CLASSIFICATION	3.3839432004573205E-4	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999810439764051	WITHOUT_CLASSIFICATION	1.8956023594969124E-5	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999810439764051	WITHOUT_CLASSIFICATION	1.8956023594969124E-5	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9852221470876416	WITHOUT_CLASSIFICATION	0.014777852912358454	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9852221470876416	WITHOUT_CLASSIFICATION	0.014777852912358454	IMPLEMENTATION
// store the local vars in a local variable if there are any	WITHOUT_CLASSIFICATION	0.99999908962457	WITHOUT_CLASSIFICATION	9.103754299532626E-7	IMPLEMENTATION
// if more than 4 locals, get and populate the locals array too	WITHOUT_CLASSIFICATION	0.9999574977538742	WITHOUT_CLASSIFICATION	4.250224612577268E-5	IMPLEMENTATION
// fill local vars with nil, to avoid checking every access.	WITHOUT_CLASSIFICATION	0.9987794658456858	WITHOUT_CLASSIFICATION	0.0012205341543141922	IMPLEMENTATION
// default for starting tempVariableIndex is ok	WITHOUT_CLASSIFICATION	0.999991674660075	WITHOUT_CLASSIFICATION	8.325339925102004E-6	IMPLEMENTATION
// store the local vars in a local variable for preparing the class (using previous scope)	WITHOUT_CLASSIFICATION	0.9999979625166314	WITHOUT_CLASSIFICATION	2.0374833686683613E-6	IMPLEMENTATION
// store the new local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999843621432325	WITHOUT_CLASSIFICATION	1.5637856767537802E-5	IMPLEMENTATION
// in 1.8 mode, this will be a RubyArray containing the arguments // in 1.9 mode, this will be an IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999975252462231	WITHOUT_CLASSIFICATION	2.474753776895934E-6	IMPLEMENTATION
// no variable initialization, because we're reusing parent's scope (flat)	WITHOUT_CLASSIFICATION	0.999955961618721	WITHOUT_CLASSIFICATION	4.40383812789328E-5	IMPLEMENTATION
// for specific-index cases, clean up non-expression values	WITHOUT_CLASSIFICATION	0.9999944049143061	WITHOUT_CLASSIFICATION	5.5950856937894395E-6	IMPLEMENTATION
// set up a local Ruby variable	WITHOUT_CLASSIFICATION	0.9999629075749968	WITHOUT_CLASSIFICATION	3.709242500320173E-5	IMPLEMENTATION
// if that succeeds, the others should as well	WITHOUT_CLASSIFICATION	0.999995968848949	WITHOUT_CLASSIFICATION	4.0311510509677975E-6	IMPLEMENTATION
// verify the class	WITHOUT_CLASSIFICATION	0.9998982367253397	WITHOUT_CLASSIFICATION	1.0176327466032546E-4	IMPLEMENTATION
// create dir if necessary	WITHOUT_CLASSIFICATION	0.9999524981637831	WITHOUT_CLASSIFICATION	4.750183621696324E-5	IMPLEMENTATION
// Create the class with the appropriate class name and source file	WITHOUT_CLASSIFICATION	0.9999963125706097	WITHOUT_CLASSIFICATION	3.6874293902407413E-6	IMPLEMENTATION
// add setPosition impl, which stores filename as constant to speed updates	WITHOUT_CLASSIFICATION	0.9999773591831597	WITHOUT_CLASSIFICATION	2.2640816840287057E-5	IMPLEMENTATION
// thread context	WITHOUT_CLASSIFICATION	0.9986815602181786	WITHOUT_CLASSIFICATION	0.0013184397818215207	IMPLEMENTATION
// line number	WITHOUT_CLASSIFICATION	0.9993470376930216	WITHOUT_CLASSIFICATION	6.52962306978498E-4	IMPLEMENTATION
// invoke __file__ with threadcontext, self, args (null), and block (null)	WITHOUT_CLASSIFICATION	0.9999464948979172	WITHOUT_CLASSIFICATION	5.350510208269928E-5	IMPLEMENTATION
// load always uses IRubyObject[], so simple closure offset calculation here	WITHOUT_CLASSIFICATION	0.9999616222862826	WITHOUT_CLASSIFICATION	3.837771371746519E-5	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999981809785553	WITHOUT_CLASSIFICATION	1.8190214446144165E-6	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.99991643198453	WITHOUT_CLASSIFICATION	8.356801547010077E-5	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.999964799826609	WITHOUT_CLASSIFICATION	3.520017339092344E-5	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999948678229778	WITHOUT_CLASSIFICATION	5.132177022281355E-6	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999948678229778	WITHOUT_CLASSIFICATION	5.132177022281355E-6	IMPLEMENTATION
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9986653495811594	WITHOUT_CLASSIFICATION	0.001334650418840622	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9996616056799542	WITHOUT_CLASSIFICATION	3.3839432004573205E-4	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999810439764051	WITHOUT_CLASSIFICATION	1.8956023594969124E-5	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9852221470876416	WITHOUT_CLASSIFICATION	0.014777852912358454	IMPLEMENTATION
// add Script#run impl, used for running this script with a specified threadcontext and self // root method of a script is always in __file__ method	WITHOUT_CLASSIFICATION	0.9999895782172155	WITHOUT_CLASSIFICATION	1.0421782784528483E-5	IMPLEMENTATION
// add main impl, used for detached or command-line execution of this script with a new runtime // root method of a script is always in stub0, method0	WITHOUT_CLASSIFICATION	0.9999753210372837	WITHOUT_CLASSIFICATION	2.4678962716308826E-5	IMPLEMENTATION
// construct static scope list of names	WITHOUT_CLASSIFICATION	0.9999448445784413	WITHOUT_CLASSIFICATION	5.5155421558791784E-5	IMPLEMENTATION
// JRUBY-3014: make __FILE__ dynamically determined at load time, but // we provide a reasonable default here	WITHOUT_CLASSIFICATION	0.9998422622227856	WITHOUT_CLASSIFICATION	1.5773777721447588E-4	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999918743941956	WITHOUT_CLASSIFICATION	8.125605804436147E-6	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999918743941956	WITHOUT_CLASSIFICATION	8.125605804436147E-6	IMPLEMENTATION
// lazily create class init only if necessary	WITHOUT_CLASSIFICATION	0.9999943469690249	WITHOUT_CLASSIFICATION	5.653030975148449E-6	IMPLEMENTATION
// boxed arg list __file__	WITHOUT_CLASSIFICATION	0.9992981340742942	WITHOUT_CLASSIFICATION	7.018659257057618E-4	IMPLEMENTATION
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999556533064902	WITHOUT_CLASSIFICATION	4.434669350972727E-5	IMPLEMENTATION
// exact arg list __file__	WITHOUT_CLASSIFICATION	0.9993505546750936	WITHOUT_CLASSIFICATION	6.494453249063029E-4	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.999707294752504	WITHOUT_CLASSIFICATION	2.9270524749600984E-4	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.999707294752504	WITHOUT_CLASSIFICATION	2.9270524749600984E-4	IMPLEMENTATION
// not using a new scope, use saved one for a flat closure	WITHOUT_CLASSIFICATION	0.9972527597339154	WITHOUT_CLASSIFICATION	0.002747240266084581	IMPLEMENTATION
// normal closure	WITHOUT_CLASSIFICATION	0.9993813476592674	WITHOUT_CLASSIFICATION	6.186523407324374E-4	IMPLEMENTATION
// end of scoping for closure's vars	WITHOUT_CLASSIFICATION	0.9998942082555284	WITHOUT_CLASSIFICATION	1.0579174447158581E-4	IMPLEMENTATION
// we only need full-on redo exception handling if there's logic that might produce it	WITHOUT_CLASSIFICATION	0.9908441774602873	WITHOUT_CLASSIFICATION	0.009155822539712795	IMPLEMENTATION
// handle redos by restarting the block	WITHOUT_CLASSIFICATION	0.9996413553863516	WITHOUT_CLASSIFICATION	3.5864461364848503E-4	IMPLEMENTATION
// jump back to the top of the main body of this closure	WITHOUT_CLASSIFICATION	0.999823307760562	WITHOUT_CLASSIFICATION	1.7669223943787892E-4	IMPLEMENTATION
// Ruby name 	WITHOUT_CLASSIFICATION	0.9993723270609586	WITHOUT_CLASSIFICATION	6.276729390413932E-4	IMPLEMENTATION
// Accumulate call arguments	WITHOUT_CLASSIFICATION	0.9999323076001512	WITHOUT_CLASSIFICATION	6.769239984889285E-5	IMPLEMENTATION
// Fix FileNameCompletor to work mid-line	WITHOUT_CLASSIFICATION	0.9991146460821915	WITHOUT_CLASSIFICATION	8.853539178086534E-4	IMPLEMENTATION
// We need to ensure that the variable names generated here cannot conflict with ruby variable names! // Hence the "%" tthat is appended to the beginning!	WITHOUT_CLASSIFICATION	0.9999668628841637	WITHOUT_CLASSIFICATION	3.3137115836203705E-5	IMPLEMENTATION
// Does this method define code?  // Default is yes -- which basically leads to pessimistic but safe optimizations // But, for library and internal methods, this might be false.	WITHOUT_CLASSIFICATION	0.9999997141479423	WITHOUT_CLASSIFICATION	2.858520577338976E-7	IMPLEMENTATION
// Map of constants defined in this scope (not valid for methods!)	WITHOUT_CLASSIFICATION	0.9999953007243385	WITHOUT_CLASSIFICATION	4.699275661582829E-6	IMPLEMENTATION
// NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner // with outer loops encountered before inner loops, and inner loops finished before outer ones. // // So, we can keep track of loops in a loop stack which  keeps track of loops as they are encountered. // This lets us implement next/redo/break/retry easily for the non-closure cases	WITHOUT_CLASSIFICATION	0.9999997865153128	WITHOUT_CLASSIFICATION	2.1348468720477197E-7	IMPLEMENTATION
// Map keep track of the next available variable index for a particular prefix	WITHOUT_CLASSIFICATION	0.9998855826605803	WITHOUT_CLASSIFICATION	1.1441733941972133E-4	IMPLEMENTATION
// Control flow graph for this scope	WITHOUT_CLASSIFICATION	0.9999254689275925	WITHOUT_CLASSIFICATION	7.453107240753214E-5	IMPLEMENTATION
//        _lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;	WITHOUT_CLASSIFICATION	0.9990401141015484	WITHOUT_CLASSIFICATION	9.598858984515674E-4	IMPLEMENTATION
// List of modules, classes, and methods defined in this scope!	WITHOUT_CLASSIFICATION	0.9999881327357385	WITHOUT_CLASSIFICATION	1.1867264261428583E-5	IMPLEMENTATION
// Returns the containing parent scope!	WITHOUT_CLASSIFICATION	0.9998270602413849	WITHOUT_CLASSIFICATION	1.7293975861506033E-4	IMPLEMENTATION
// Insert nesting level to ensure variable names don't conflict across nested scopes! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //        return new Variable(prefix + _lexicalNestingLevel + "_" + idx);	WITHOUT_CLASSIFICATION	0.9999145456221151	WITHOUT_CLASSIFICATION	8.545437788484257E-5	IMPLEMENTATION
// get "self"	WITHOUT_CLASSIFICATION	0.9997841921386611	WITHOUT_CLASSIFICATION	2.1580786133895477E-4	IMPLEMENTATION
// variable is never read, variable is never live	WITHOUT_CLASSIFICATION	0.9996559080794593	WITHOUT_CLASSIFICATION	3.44091920540807E-4	IMPLEMENTATION
// inline script	WITHOUT_CLASSIFICATION	0.9997497239024955	WITHOUT_CLASSIFICATION	2.5027609750448866E-4	IMPLEMENTATION
// inline script	WITHOUT_CLASSIFICATION	0.9997497239024955	WITHOUT_CLASSIFICATION	2.5027609750448866E-4	IMPLEMENTATION
// This method is called to build assignments for a multiple-assignment instruction	WITHOUT_CLASSIFICATION	0.9999916952872712	WITHOUT_CLASSIFICATION	8.304712728893626E-6	IMPLEMENTATION
// Build the class body!	WITHOUT_CLASSIFICATION	0.9999795397089856	WITHOUT_CLASSIFICATION	2.046029101437807E-5	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999706113509023	WITHOUT_CLASSIFICATION	2.938864909773673E-5	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999706113509023	WITHOUT_CLASSIFICATION	2.938864909773673E-5	IMPLEMENTATION
// SSS FIXME: Can this ever be null?	WITHOUT_CLASSIFICATION	0.9000774693738397	WITHOUT_CLASSIFICATION	0.09992253062616031	IMPLEMENTATION
// Run the pass on the passed in scope!	WITHOUT_CLASSIFICATION	0.9999485766154648	WITHOUT_CLASSIFICATION	5.1423384535318205E-5	IMPLEMENTATION
// done // done // done // done	WITHOUT_CLASSIFICATION	0.9999214435743372	WITHOUT_CLASSIFICATION	7.855642566285021E-5	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999989904069402	WITHOUT_CLASSIFICATION	1.0095930598270239E-6	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999989904069402	WITHOUT_CLASSIFICATION	1.0095930598270239E-6	IMPLEMENTATION
// This method is called to build arguments for a block!	WITHOUT_CLASSIFICATION	0.9999945931929175	WITHOUT_CLASSIFICATION	5.406807082501299E-6	IMPLEMENTATION
// build first node (and ignore its result) and then second node	WITHOUT_CLASSIFICATION	0.9999574430609606	WITHOUT_CLASSIFICATION	4.255693903947875E-5	IMPLEMENTATION
// build first node only and return false	WITHOUT_CLASSIFICATION	0.999987903926564	WITHOUT_CLASSIFICATION	1.2096073436089008E-5	IMPLEMENTATION
// Value of the last expression in the block 	WITHOUT_CLASSIFICATION	0.999993366654837	WITHOUT_CLASSIFICATION	6.6333451630396734E-6	IMPLEMENTATION
// If this is not a closure, the break is equivalent to jumping to the loop end label	WITHOUT_CLASSIFICATION	0.9992136734760616	WITHOUT_CLASSIFICATION	7.863265239384335E-4	IMPLEMENTATION
// get the incoming case value	WITHOUT_CLASSIFICATION	0.9999882590731878	WITHOUT_CLASSIFICATION	1.174092681218859E-5	IMPLEMENTATION
// the CASE instruction	WITHOUT_CLASSIFICATION	0.9999521958671835	WITHOUT_CLASSIFICATION	4.780413281645271E-5	IMPLEMENTATION
// lists to aggregate variables and bodies for whens	WITHOUT_CLASSIFICATION	0.9999789002573093	WITHOUT_CLASSIFICATION	2.109974269075291E-5	IMPLEMENTATION
// build each "when"	WITHOUT_CLASSIFICATION	0.9997350790473983	WITHOUT_CLASSIFICATION	2.6492095260164544E-4	IMPLEMENTATION
// multiple conditions for when	WITHOUT_CLASSIFICATION	0.9999672482477585	WITHOUT_CLASSIFICATION	3.2751752241446913E-5	IMPLEMENTATION
// build "else" if it exists	WITHOUT_CLASSIFICATION	0.9999762484786963	WITHOUT_CLASSIFICATION	2.375152130374549E-5	IMPLEMENTATION
// now emit bodies	WITHOUT_CLASSIFICATION	0.9998254322633454	WITHOUT_CLASSIFICATION	1.7456773665453014E-4	IMPLEMENTATION
// close it out	WITHOUT_CLASSIFICATION	0.9999026855681229	WITHOUT_CLASSIFICATION	9.731443187705816E-5	IMPLEMENTATION
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999800216984019	WITHOUT_CLASSIFICATION	1.997830159808037E-5	IMPLEMENTATION
// Do we have a dynamic container?	WITHOUT_CLASSIFICATION	0.9997430566734716	WITHOUT_CLASSIFICATION	2.569433265283865E-4	IMPLEMENTATION
// Return a meta object corresponding to the class	WITHOUT_CLASSIFICATION	0.9999960354756339	WITHOUT_CLASSIFICATION	3.964524366187998E-6	IMPLEMENTATION
// 1. Load the module first (lhs of node) // 2. Then load the constant from the module	WITHOUT_CLASSIFICATION	0.999954933346837	WITHOUT_CLASSIFICATION	4.5066653163003804E-5	IMPLEMENTATION
// Build IR for args	WITHOUT_CLASSIFICATION	0.9998562687365035	WITHOUT_CLASSIFICATION	1.4373126349658823E-4	IMPLEMENTATION
// Build IR for body	WITHOUT_CLASSIFICATION	0.9999703465408861	WITHOUT_CLASSIFICATION	2.9653459113884435E-5	IMPLEMENTATION
// if root of method is rescue, build as a light rescue	WITHOUT_CLASSIFICATION	0.9999962065910134	WITHOUT_CLASSIFICATION	3.7934089865578323E-6	IMPLEMENTATION
// Instance method	WITHOUT_CLASSIFICATION	0.9988627317536225	WITHOUT_CLASSIFICATION	0.001137268246377484	IMPLEMENTATION
// Class method	WITHOUT_CLASSIFICATION	0.999553898704356	WITHOUT_CLASSIFICATION	4.461012956440173E-4	IMPLEMENTATION
// Other args begin at index 1	WITHOUT_CLASSIFICATION	0.9998804166191501	WITHOUT_CLASSIFICATION	1.1958338084990097E-4	IMPLEMENTATION
// Both for fixed arity and variable arity methods	WITHOUT_CLASSIFICATION	0.9999376857823368	WITHOUT_CLASSIFICATION	6.23142176632309E-5	IMPLEMENTATION
// Now for the rest	WITHOUT_CLASSIFICATION	0.9995818333533382	WITHOUT_CLASSIFICATION	4.181666466617566E-4	IMPLEMENTATION
// Jump to 'l' if this arg is not null.  If null, fall through and build the default value!	WITHOUT_CLASSIFICATION	0.9999854994187621	WITHOUT_CLASSIFICATION	1.4500581237926113E-5	IMPLEMENTATION
// This is not an expression that computes anything	WITHOUT_CLASSIFICATION	0.9947555585229872	WITHOUT_CLASSIFICATION	0.005244441477012827	IMPLEMENTATION
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999433008928673	WITHOUT_CLASSIFICATION	5.669910713275198E-5	IMPLEMENTATION
// Build args	WITHOUT_CLASSIFICATION	0.999720165615362	WITHOUT_CLASSIFICATION	2.7983438463804756E-4	IMPLEMENTATION
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999979426512036	WITHOUT_CLASSIFICATION	2.0573487965515203E-6	IMPLEMENTATION
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999807634527161	WITHOUT_CLASSIFICATION	1.9236547283941175E-5	IMPLEMENTATION
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999800216984019	WITHOUT_CLASSIFICATION	1.997830159808037E-5	IMPLEMENTATION
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999433008928673	WITHOUT_CLASSIFICATION	5.669910713275198E-5	IMPLEMENTATION
// Build args	WITHOUT_CLASSIFICATION	0.999720165615362	WITHOUT_CLASSIFICATION	2.7983438463804756E-4	IMPLEMENTATION
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999807634527161	WITHOUT_CLASSIFICATION	1.9236547283941175E-5	IMPLEMENTATION
// Get the container for this new module	WITHOUT_CLASSIFICATION	0.9999392912420513	WITHOUT_CLASSIFICATION	6.070875794878683E-5	IMPLEMENTATION
// Build the new module	WITHOUT_CLASSIFICATION	0.9999242266190196	WITHOUT_CLASSIFICATION	7.577338098049302E-5	IMPLEMENTATION
// Build the module body	WITHOUT_CLASSIFICATION	0.9999885342790324	WITHOUT_CLASSIFICATION	1.1465720967664189E-5	IMPLEMENTATION
// First, build an assignment for a splat, if any, with the rest of the args!	WITHOUT_CLASSIFICATION	0.9999891876662215	WITHOUT_CLASSIFICATION	1.0812333778567984E-5	IMPLEMENTATION
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999771398838331	WITHOUT_CLASSIFICATION	2.2860116166914576E-5	IMPLEMENTATION
// If a closure, the next is simply a return from the closure! // If a regular loop, the next is simply a jump to the end of the iteration	WITHOUT_CLASSIFICATION	0.9999848866086147	WITHOUT_CLASSIFICATION	1.5113391385144972E-5	IMPLEMENTATION
// get attr	WITHOUT_CLASSIFICATION	0.9997841921386611	WITHOUT_CLASSIFICATION	2.1580786133895477E-4	IMPLEMENTATION
// call operator	WITHOUT_CLASSIFICATION	0.9993889284139915	WITHOUT_CLASSIFICATION	6.11071586008512E-4	IMPLEMENTATION
// set attr	WITHOUT_CLASSIFICATION	0.9997118592440819	WITHOUT_CLASSIFICATION	2.8814075591809623E-4	IMPLEMENTATION
// Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, false, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9997633375410233	WITHOUT_CLASSIFICATION	2.366624589767747E-4	IMPLEMENTATION
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999862879574759	WITHOUT_CLASSIFICATION	1.3712042524235742E-5	IMPLEMENTATION
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999862879574759	WITHOUT_CLASSIFICATION	1.3712042524235742E-5	IMPLEMENTATION
// if v1 is defined and true, we are done! 	WITHOUT_CLASSIFICATION	0.9999967557959506	WITHOUT_CLASSIFICATION	3.2442040494089E-6	IMPLEMENTATION
// build first node only and return true	WITHOUT_CLASSIFICATION	0.9999703996489985	WITHOUT_CLASSIFICATION	2.960035100150508E-5	IMPLEMENTATION
// build first node as non-expr and build second node	WITHOUT_CLASSIFICATION	0.99998869769704	WITHOUT_CLASSIFICATION	1.1302302959890349E-5	IMPLEMENTATION
// Top-level script!	WITHOUT_CLASSIFICATION	0.9996615266859028	WITHOUT_CLASSIFICATION	3.3847331409717497E-4	IMPLEMENTATION
// we won't enter the loop -- just build the condition node	WITHOUT_CLASSIFICATION	0.9999998587711495	WITHOUT_CLASSIFICATION	1.4122885058117563E-7	IMPLEMENTATION
/* ----------- Private Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999888262417851	WITHOUT_CLASSIFICATION	1.1173758214870053E-5	IMPLEMENTATION
// What handles warnings	WITHOUT_CLASSIFICATION	0.9999160665063054	WITHOUT_CLASSIFICATION	8.393349369466665E-5	IMPLEMENTATION
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999993902285139	WITHOUT_CLASSIFICATION	6.097714860309779E-7	IMPLEMENTATION
// For closures, a redo is a jump to the beginning of the closure // For non-closures, a redo is a jump to the beginning of the loop	WITHOUT_CLASSIFICATION	0.9999878471052492	WITHOUT_CLASSIFICATION	1.2152894750832851E-5	IMPLEMENTATION
// The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999948173312323	WITHOUT_CLASSIFICATION	5.182668767683609E-6	IMPLEMENTATION
// Dummy top-level method for the class	WITHOUT_CLASSIFICATION	0.9999561755988327	WITHOUT_CLASSIFICATION	4.382440116732538E-5	IMPLEMENTATION
// Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999964884843872	WITHOUT_CLASSIFICATION	3.5115156127174357E-6	IMPLEMENTATION
// ------ Define the operations below ----	WITHOUT_CLASSIFICATION	0.9999079003476987	WITHOUT_CLASSIFICATION	9.209965230134244E-5	IMPLEMENTATION
// value copy and type conversion operations	WITHOUT_CLASSIFICATION	0.999990362857766	WITHOUT_CLASSIFICATION	9.637142233997312E-6	IMPLEMENTATION
// alu operations	WITHOUT_CLASSIFICATION	0.9993615576746734	WITHOUT_CLASSIFICATION	6.384423253266727E-4	IMPLEMENTATION
// method handle, arg receive, return value, and  call instructions	WITHOUT_CLASSIFICATION	0.9953853030773818	WITHOUT_CLASSIFICATION	0.004614696922618246	IMPLEMENTATION
// closure instructions	WITHOUT_CLASSIFICATION	0.9999047598405558	WITHOUT_CLASSIFICATION	9.524015944413159E-5	IMPLEMENTATION
// eval instructions	WITHOUT_CLASSIFICATION	0.9993842464686322	WITHOUT_CLASSIFICATION	6.1575353136786E-4	IMPLEMENTATION
// def instructions	WITHOUT_CLASSIFICATION	0.9993758033527097	WITHOUT_CLASSIFICATION	6.241966472902118E-4	IMPLEMENTATION
// exception instructions	WITHOUT_CLASSIFICATION	0.9999292506539894	WITHOUT_CLASSIFICATION	7.074934601053699E-5	IMPLEMENTATION
// Loads	WITHOUT_CLASSIFICATION	0.9999935752659732	WITHOUT_CLASSIFICATION	6.424734026853922E-6	IMPLEMENTATION
// Stores	WITHOUT_CLASSIFICATION	0.9999935752659732	WITHOUT_CLASSIFICATION	6.424734026853922E-6	IMPLEMENTATION
// jump and branch operations	WITHOUT_CLASSIFICATION	0.999922852185591	WITHOUT_CLASSIFICATION	7.714781440899156E-5	IMPLEMENTATION
// others	WITHOUT_CLASSIFICATION	0.9999940699930384	WITHOUT_CLASSIFICATION	5.930006961689295E-6	IMPLEMENTATION
// a case/when branch	WITHOUT_CLASSIFICATION	0.9999545020959878	WITHOUT_CLASSIFICATION	4.5497904012217665E-5	IMPLEMENTATION
// optimization guards	WITHOUT_CLASSIFICATION	0.9999442860345962	WITHOUT_CLASSIFICATION	5.571396540384956E-5	IMPLEMENTATION
// By default, call instructions cannot be deleted even if their results aren't used by anyone // unless we know more about what the call is, what it does, etc. // Similarly for evals, stores, returns.	WITHOUT_CLASSIFICATION	0.6675030988071443	WITHOUT_CLASSIFICATION	0.33249690119285574	IMPLEMENTATION
// Returns the containing parent scope -- can be a dynamic value (hence Operand)!	WITHOUT_CLASSIFICATION	0.9999923163676419	WITHOUT_CLASSIFICATION	7.683632358223513E-6	IMPLEMENTATION
// scripts	WITHOUT_CLASSIFICATION	0.9999959103819746	WITHOUT_CLASSIFICATION	4.089618025537745E-6	IMPLEMENTATION
// scripts and modules	WITHOUT_CLASSIFICATION	0.9999868086792365	WITHOUT_CLASSIFICATION	1.3191320763441244E-5	IMPLEMENTATION
// scripts, classes, and modules	WITHOUT_CLASSIFICATION	0.9999735867625911	WITHOUT_CLASSIFICATION	2.6413237409016382E-5	IMPLEMENTATION
// methods and closures	WITHOUT_CLASSIFICATION	0.9999515533777988	WITHOUT_CLASSIFICATION	4.844662220108926E-5	IMPLEMENTATION
// create a new variable using the prefix	WITHOUT_CLASSIFICATION	0.9998720320237239	WITHOUT_CLASSIFICATION	1.279679762760808E-4	IMPLEMENTATION
// create a new temporary variable	WITHOUT_CLASSIFICATION	0.9998137294971918	WITHOUT_CLASSIFICATION	1.8627050280826558E-4	IMPLEMENTATION
// Get a new label using a generic prefix	WITHOUT_CLASSIFICATION	0.9999950031472745	WITHOUT_CLASSIFICATION	4.9968527255414505E-6	IMPLEMENTATION
// Build the CFG for this scope -- supported only by methods & closures	WITHOUT_CLASSIFICATION	0.9999992489613797	WITHOUT_CLASSIFICATION	7.510386203553796E-7	IMPLEMENTATION
// Get the control flow graph for this scope -- only valid for methods & closures	WITHOUT_CLASSIFICATION	0.9999874549520584	WITHOUT_CLASSIFICATION	1.2545047941599178E-5	IMPLEMENTATION
// While processing loops, this returns the loop that we are processing.	WITHOUT_CLASSIFICATION	0.9999674075314706	WITHOUT_CLASSIFICATION	3.2592468529412644E-5	IMPLEMENTATION
// Record the loop we are beginning to process	WITHOUT_CLASSIFICATION	0.9999735395527292	WITHOUT_CLASSIFICATION	2.6460447270806835E-5	IMPLEMENTATION
// Indicate that we are done processing the loop	WITHOUT_CLASSIFICATION	0.9998673735725319	WITHOUT_CLASSIFICATION	1.326264274681381E-4	IMPLEMENTATION
// Run the passed in compiler pass on this scope!	WITHOUT_CLASSIFICATION	0.9998868440085203	WITHOUT_CLASSIFICATION	1.1315599147962075E-4	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9968440108261793	WITHOUT_CLASSIFICATION	0.003155989173820696	IMPLEMENTATION
// Readline	WITHOUT_CLASSIFICATION	0.9996615266859028	WITHOUT_CLASSIFICATION	3.3847331409717497E-4	IMPLEMENTATION
// If the cfg of the method is around, print the CFG!	WITHOUT_CLASSIFICATION	0.9999764596802165	WITHOUT_CLASSIFICATION	2.3540319783419537E-5	IMPLEMENTATION
// Optimize some core class method calls for constant values	WITHOUT_CLASSIFICATION	0.999984185261652	WITHOUT_CLASSIFICATION	1.581473834801523E-5	IMPLEMENTATION
// If 'r' is not a constant, it could actually be a compound value! // Look in our value map to see if we have a simplified value for the receiver.	WITHOUT_CLASSIFICATION	0.9999957055378556	WITHOUT_CLASSIFICATION	4.294462144473141E-6	IMPLEMENTATION
// Check if we can optimize this call based on the receiving method and receiver type // Use the simplified receiver!	WITHOUT_CLASSIFICATION	0.998149958373006	WITHOUT_CLASSIFICATION	0.001850041626993968	IMPLEMENTATION
// If we got a simplified value, mark the call dead and insert a copy in its place!	WITHOUT_CLASSIFICATION	0.9999978803641726	WITHOUT_CLASSIFICATION	2.119635827425168E-6	IMPLEMENTATION
// If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!	WITHOUT_CLASSIFICATION	0.9999968550815281	WITHOUT_CLASSIFICATION	3.144918471848067E-6	IMPLEMENTATION
/* ----------- Public abstract methods ---------- */	WITHOUT_CLASSIFICATION	0.9999843764275742	WITHOUT_CLASSIFICATION	1.5623572425796863E-5	IMPLEMENTATION
/* ----------- Public methods with a default implementation ---------- */	WITHOUT_CLASSIFICATION	0.9999759792456566	WITHOUT_CLASSIFICATION	2.4020754343337476E-5	IMPLEMENTATION
// Compute meet over all "sources" and compute "destination" basic blocks that should then be processed.  // sources & targets depends on direction of the data flow problem	WITHOUT_CLASSIFICATION	0.9999998400333624	WITHOUT_CLASSIFICATION	1.5996663760189796E-7	IMPLEMENTATION
// If the solution has changed, add "dsts" to the work list. // No duplicates please which is why we have bbset.	WITHOUT_CLASSIFICATION	0.9999196510127266	WITHOUT_CLASSIFICATION	8.034898727342173E-5	IMPLEMENTATION
/* --------- Protected fields/methods below --------- */	WITHOUT_CLASSIFICATION	0.9999903821793859	WITHOUT_CLASSIFICATION	9.617820614221689E-6	IMPLEMENTATION
// Dataflow problem with which this node is associated // CFG node for which this node contains info.	WITHOUT_CLASSIFICATION	0.9999788214506747	WITHOUT_CLASSIFICATION	2.1178549325236015E-5	IMPLEMENTATION
/* -------------- Public fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999928730771536	WITHOUT_CLASSIFICATION	7.1269228463988614E-6	IMPLEMENTATION
// ------- Abstract methods without a default implementation -------	WITHOUT_CLASSIFICATION	0.9999194202792782	WITHOUT_CLASSIFICATION	8.057972072178067E-5	IMPLEMENTATION
// ------- Default implementation methods below -------	WITHOUT_CLASSIFICATION	0.9996117739476958	WITHOUT_CLASSIFICATION	3.8822605230414244E-4	IMPLEMENTATION
/* Compute Meet Over All Paths solution for this dataflow problem on the input CFG.     * This implements a standard worklist algorithm. */	WITHOUT_CLASSIFICATION	0.9999779064680578	WITHOUT_CLASSIFICATION	2.2093531942154428E-5	IMPLEMENTATION
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.999887290773573	WITHOUT_CLASSIFICATION	1.127092264269477E-4	IMPLEMENTATION
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.999887290773573	WITHOUT_CLASSIFICATION	1.127092264269477E-4	IMPLEMENTATION
/* -------------- Packaged/protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999924291994309	WITHOUT_CLASSIFICATION	7.570800569175782E-6	IMPLEMENTATION
// We want unique ids for dataflow variables	WITHOUT_CLASSIFICATION	0.9998651662933483	WITHOUT_CLASSIFICATION	1.3483370665169848E-4	IMPLEMENTATION
/* -------------- Protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999924350506045	WITHOUT_CLASSIFICATION	7.5649493955188135E-6	IMPLEMENTATION
/* -------------- Private fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999939872796079	WITHOUT_CLASSIFICATION	6.012720392056148E-6	IMPLEMENTATION
// Initialize all flow graph nodes 	WITHOUT_CLASSIFICATION	0.9999474477102902	WITHOUT_CLASSIFICATION	5.255228970974811E-5	IMPLEMENTATION
/* Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses */	WITHOUT_CLASSIFICATION	0.9999999375293889	WITHOUT_CLASSIFICATION	6.2470611142961E-8	IMPLEMENTATION
/* ******************** PUBLIC INTERFACE ******************* */	WITHOUT_CLASSIFICATION	0.9999845241099625	WITHOUT_CLASSIFICATION	1.5475890037503147E-5	IMPLEMENTATION
// Unique ID assigned to this variable	WITHOUT_CLASSIFICATION	0.9991885641543679	WITHOUT_CLASSIFICATION	8.114358456320939E-4	IMPLEMENTATION
// start out with a default RubyObject allocator	WITHOUT_CLASSIFICATION	0.9999959290179579	WITHOUT_CLASSIFICATION	4.0709820420903525E-6	IMPLEMENTATION
// switch to an allocator based on a default constructor	WITHOUT_CLASSIFICATION	0.9999850190838258	WITHOUT_CLASSIFICATION	1.498091617430722E-5	IMPLEMENTATION
/* ----------- Public Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999867556727492	WITHOUT_CLASSIFICATION	1.3244327250893736E-5	IMPLEMENTATION
// class or module	WITHOUT_CLASSIFICATION	0.9999147111419471	WITHOUT_CLASSIFICATION	8.52888580528467E-5	IMPLEMENTATION
// OUT = UNION(IN(succs))	WITHOUT_CLASSIFICATION	0.9999283435502112	WITHOUT_CLASSIFICATION	7.165644978878481E-5	IMPLEMENTATION
// Traverse the instructions in this basic block in reverse order!	WITHOUT_CLASSIFICATION	0.9999507529444638	WITHOUT_CLASSIFICATION	4.9247055536303635E-5	IMPLEMENTATION
// v is defined => It is no longer live before 'i'	WITHOUT_CLASSIFICATION	0.9999995714621231	WITHOUT_CLASSIFICATION	4.285378768412629E-7	IMPLEMENTATION
// IN is the same!	WITHOUT_CLASSIFICATION	0.99986403847441	WITHOUT_CLASSIFICATION	1.359615255900866E-4	IMPLEMENTATION
// IN changed!	WITHOUT_CLASSIFICATION	0.9996700331517997	WITHOUT_CLASSIFICATION	3.2996684820022734E-4	IMPLEMENTATION
/* ---------- Protected / package fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999760895565908	WITHOUT_CLASSIFICATION	2.391044340922466E-5	IMPLEMENTATION
// If 'v' is not live at the instruction site, and it has no side effects, mark it dead!	WITHOUT_CLASSIFICATION	0.9999484089152649	WITHOUT_CLASSIFICATION	5.1591084735080424E-5	IMPLEMENTATION
// Do not mark this instruction's operands live if the instruction itself is dead!	WITHOUT_CLASSIFICATION	0.9986332337128396	WITHOUT_CLASSIFICATION	0.0013667662871604308	IMPLEMENTATION
/* ---------- Private fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999863014927969	WITHOUT_CLASSIFICATION	1.3698507203258814E-5	IMPLEMENTATION
// Variables live at entry of this node // Variables live at exit of node // Temporary set of live variables // Size of the "_in" and "_out" bit sets 	WITHOUT_CLASSIFICATION	0.9998486606587107	WITHOUT_CLASSIFICATION	1.5133934128928712E-4	IMPLEMENTATION
// Used during optimization passes to propagate type and other information	WITHOUT_CLASSIFICATION	0.9999590496486552	WITHOUT_CLASSIFICATION	4.095035134473697E-5	IMPLEMENTATION
// Does this instruction have side effects as a result of its operation // This information is used in optimization phases to impact dead code elimination // and other optimization passes	WITHOUT_CLASSIFICATION	0.9999999496200381	WITHOUT_CLASSIFICATION	5.037996193068359E-8	IMPLEMENTATION
/* --------- "Abstract"/"please-override" methods --------- */	WITHOUT_CLASSIFICATION	0.9999823616527022	WITHOUT_CLASSIFICATION	1.7638347297863844E-5	IMPLEMENTATION
/* Array of all operands for this instruction */	WITHOUT_CLASSIFICATION	0.9999894514533607	WITHOUT_CLASSIFICATION	1.0548546639239067E-5	IMPLEMENTATION
/* List of all variables used by all operands of this instruction */	WITHOUT_CLASSIFICATION	0.9999910319770855	WITHOUT_CLASSIFICATION	8.96802291461706E-6	IMPLEMENTATION
/*      * This method takes as input a map of operands to their values, and outputs     *     * If the value map provides a value for any of the instruction's operands     * this method is expected to replace the original operands with the simplified values.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify     */	WITHOUT_CLASSIFICATION	0.9999959545093906	WITHOUT_CLASSIFICATION	4.045490609344922E-6	IMPLEMENTATION
// By default, no simplifications!	WITHOUT_CLASSIFICATION	0.9999324312516539	WITHOUT_CLASSIFICATION	6.756874834609988E-5	IMPLEMENTATION
// Can this call lead to ruby code getting modified?   // If we don't know what method we are calling, we assume it can (pessimistic, but safe!) // If we do know the target method, we ask the method itself whether it modifies ruby code	WITHOUT_CLASSIFICATION	0.9806776599960609	WITHOUT_CLASSIFICATION	0.01932234000393909	IMPLEMENTATION
// By default, return instructions cannot be deleted	WITHOUT_CLASSIFICATION	0.9999115466057797	WITHOUT_CLASSIFICATION	8.845339422023145E-5	IMPLEMENTATION
// If true, returns the rest of the array starting at the index	WITHOUT_CLASSIFICATION	0.9999407843680037	WITHOUT_CLASSIFICATION	5.9215631996258524E-5	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999780011323868	WITHOUT_CLASSIFICATION	2.1998867613166307E-5	IMPLEMENTATION
// Map of label & basic blocks with that label	WITHOUT_CLASSIFICATION	0.9999981403664592	WITHOUT_CLASSIFICATION	1.859633540850044E-6	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999780011323868	WITHOUT_CLASSIFICATION	2.1998867613166307E-5	IMPLEMENTATION
// You can only value-replace atomic values	WITHOUT_CLASSIFICATION	0.9999988692794612	WITHOUT_CLASSIFICATION	1.1307205387672467E-6	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999927498711655	WITHOUT_CLASSIFICATION	7.250128834566896E-6	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999927498711655	WITHOUT_CLASSIFICATION	7.250128834566896E-6	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999927498711655	WITHOUT_CLASSIFICATION	7.250128834566896E-6	IMPLEMENTATION
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999921421982487	WITHOUT_CLASSIFICATION	7.85780175124461E-6	IMPLEMENTATION
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999921421982487	WITHOUT_CLASSIFICATION	7.85780175124461E-6	IMPLEMENTATION
// The operand that this attribute targets //    DEFERRED //    AttributeValue _val;       // Attribute value	WITHOUT_CLASSIFICATION	0.9999859846475773	WITHOUT_CLASSIFICATION	1.4015352422714452E-5	IMPLEMENTATION
// Arrays, Ranges, etc. are compound values // Variables, fixnums, floats, etc. are "atomic" values	WITHOUT_CLASSIFICATION	0.999998090819443	WITHOUT_CLASSIFICATION	1.9091805570319797E-6	IMPLEMENTATION
// Get the target class of this operand, if we know it!	WITHOUT_CLASSIFICATION	0.9999345393415633	WITHOUT_CLASSIFICATION	6.546065843673252E-5	IMPLEMENTATION
// The following constants capture pre-known static call sites -- used to implement ruby internals	WITHOUT_CLASSIFICATION	0.9913194791801563	WITHOUT_CLASSIFICATION	0.008680520819843758	IMPLEMENTATION
/* Nothing to do by default */	WITHOUT_CLASSIFICATION	0.999999708080801	WITHOUT_CLASSIFICATION	2.919191989825392E-7	IMPLEMENTATION
// Map of label & basic blocks which are waiting for a bb with that label	WITHOUT_CLASSIFICATION	0.9999998088539834	WITHOUT_CLASSIFICATION	1.9114601654270755E-7	IMPLEMENTATION
// Init before building basic blocks below!	WITHOUT_CLASSIFICATION	0.9999678656526655	WITHOUT_CLASSIFICATION	3.213434733450255E-5	IMPLEMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999947707566915	WITHOUT_CLASSIFICATION	5.229243308483723E-6	IMPLEMENTATION
// Scope (method/closure) to which this cfg belongs // Entry BB -- dummy // Exit BB -- dummy // The actual graph // Next available basic block id	WITHOUT_CLASSIFICATION	0.9999502008229525	WITHOUT_CLASSIFICATION	4.9799177047542245E-5	IMPLEMENTATION
// Jump instruction bbs dont add an edge to the succeeding bb by default	WITHOUT_CLASSIFICATION	0.9999882662455314	WITHOUT_CLASSIFICATION	1.1733754468667745E-5	IMPLEMENTATION
// Add forward ref. edges	WITHOUT_CLASSIFICATION	0.9999639074238287	WITHOUT_CLASSIFICATION	3.609257617128622E-5	IMPLEMENTATION
// currBB cannot be null!	WITHOUT_CLASSIFICATION	0.9999936883358462	WITHOUT_CLASSIFICATION	6.311664153672196E-6	IMPLEMENTATION
// Add a forward reference from tgt -> currBB	WITHOUT_CLASSIFICATION	0.9999989030506852	WITHOUT_CLASSIFICATION	1.0969493148308207E-6	IMPLEMENTATION
// root-level logic	WITHOUT_CLASSIFICATION	0.9988845005308622	WITHOUT_CLASSIFICATION	0.001115499469137837	IMPLEMENTATION
// root-level methods	WITHOUT_CLASSIFICATION	0.999936032386223	WITHOUT_CLASSIFICATION	6.396761377694938E-5	IMPLEMENTATION
// root-level classes	WITHOUT_CLASSIFICATION	0.9999130699324039	WITHOUT_CLASSIFICATION	8.69300675961327E-5	IMPLEMENTATION
//        case 4: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); //            break; //        case 5: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); //            break;	WITHOUT_CLASSIFICATION	0.9998839231746476	WITHOUT_CLASSIFICATION	1.1607682535243439E-4	IMPLEMENTATION
// load receiver	WITHOUT_CLASSIFICATION	0.9996478002332407	WITHOUT_CLASSIFICATION	3.521997667592855E-4	IMPLEMENTATION
// load receiver	WITHOUT_CLASSIFICATION	0.9996478002332407	WITHOUT_CLASSIFICATION	3.521997667592855E-4	IMPLEMENTATION
// receiver	WITHOUT_CLASSIFICATION	0.9996621516940407	WITHOUT_CLASSIFICATION	3.378483059593543E-4	IMPLEMENTATION
// load arguments	WITHOUT_CLASSIFICATION	0.9997703423039569	WITHOUT_CLASSIFICATION	2.2965769604312613E-4	IMPLEMENTATION
// load arguments	WITHOUT_CLASSIFICATION	0.9997703423039569	WITHOUT_CLASSIFICATION	2.2965769604312613E-4	IMPLEMENTATION
//        case 4: //        case 5:	WITHOUT_CLASSIFICATION	0.9998867135019022	WITHOUT_CLASSIFICATION	1.1328649809781076E-4	IMPLEMENTATION
// Object[] args	WITHOUT_CLASSIFICATION	0.9997049034528181	WITHOUT_CLASSIFICATION	2.9509654718193296E-4	IMPLEMENTATION
// load handle	WITHOUT_CLASSIFICATION	0.996160152176531	WITHOUT_CLASSIFICATION	0.003839847823468988	IMPLEMENTATION
// args array	WITHOUT_CLASSIFICATION	0.9997606891484065	WITHOUT_CLASSIFICATION	2.393108515934614E-4	IMPLEMENTATION
// i'th argument	WITHOUT_CLASSIFICATION	0.9998813642257403	WITHOUT_CLASSIFICATION	1.18635774259755E-4	IMPLEMENTATION
// invoke specific arity version	WITHOUT_CLASSIFICATION	0.999840521014021	WITHOUT_CLASSIFICATION	1.5947898597895542E-4	IMPLEMENTATION
// Object arg0	WITHOUT_CLASSIFICATION	0.9997653740138074	WITHOUT_CLASSIFICATION	2.3462598619252507E-4	IMPLEMENTATION
// useful for code completion inside the IRB	WITHOUT_CLASSIFICATION	0.9999259605092521	WITHOUT_CLASSIFICATION	7.403949074793472E-5	IMPLEMENTATION
// No editing before startPos	WITHOUT_CLASSIFICATION	0.999985201452728	WITHOUT_CLASSIFICATION	1.47985472720591E-5	IMPLEMENTATION
// no silly ticks!	WITHOUT_CLASSIFICATION	0.9998167254966773	WITHOUT_CLASSIFICATION	1.8327450332259376E-4	IMPLEMENTATION
// no candidates? Fail.	WITHOUT_CLASSIFICATION	0.9999692436483796	WITHOUT_CLASSIFICATION	3.075635162053157E-5	IMPLEMENTATION
// at end	WITHOUT_CLASSIFICATION	0.9999751904531473	WITHOUT_CLASSIFICATION	2.4809546852686224E-5	IMPLEMENTATION
// undo check	WITHOUT_CLASSIFICATION	0.9996697340666925	WITHOUT_CLASSIFICATION	3.302659333075412E-4	IMPLEMENTATION
// Explicit reference to these vars as symbols...	WITHOUT_CLASSIFICATION	0.9999898231100285	WITHOUT_CLASSIFICATION	1.0176889971556092E-5	IMPLEMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999947707566915	WITHOUT_CLASSIFICATION	5.229243308483723E-6	IMPLEMENTATION
//\t\n\"\\'`@$><=;|&{(	WITHOUT_CLASSIFICATION	0.9997921865822822	WITHOUT_CLASSIFICATION	2.078134177178416E-4	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.9998878484419248	WITHOUT_CLASSIFICATION	1.1215155807519426E-4	IMPLEMENTATION
// no check for '*'	WITHOUT_CLASSIFICATION	0.9998351477257259	WITHOUT_CLASSIFICATION	1.6485227427410508E-4	IMPLEMENTATION
// no check for '*'	WITHOUT_CLASSIFICATION	0.9998351477257259	WITHOUT_CLASSIFICATION	1.6485227427410508E-4	IMPLEMENTATION
// Binding provided for scope, use it	WITHOUT_CLASSIFICATION	0.9998490069737417	WITHOUT_CLASSIFICATION	1.5099302625823868E-4	IMPLEMENTATION
// this is ensured by the callers	WITHOUT_CLASSIFICATION	0.9999373692617255	WITHOUT_CLASSIFICATION	6.263073827443283E-5	IMPLEMENTATION
// no binding, just eval in "current" frame (caller's frame)	WITHOUT_CLASSIFICATION	0.9999988341468139	WITHOUT_CLASSIFICATION	1.1658531860753319E-6	IMPLEMENTATION
// restore position	WITHOUT_CLASSIFICATION	0.9998721677881214	WITHOUT_CLASSIFICATION	1.278322118786387E-4	IMPLEMENTATION
/* Something like cvar_cbase() from eval.c, factored out for the benefit     * of all the classvar-related node evaluations */	WITHOUT_CLASSIFICATION	0.9999961334171461	WITHOUT_CLASSIFICATION	3.866582853798269E-6	IMPLEMENTATION
// Used by the compiler to simplify arg processing	WITHOUT_CLASSIFICATION	0.9999686318097253	WITHOUT_CLASSIFICATION	3.1368190274740817E-5	IMPLEMENTATION
// JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace	WITHOUT_CLASSIFICATION	0.9999964842869513	WITHOUT_CLASSIFICATION	3.515713048621524E-6	IMPLEMENTATION
// MRI does similar thing on MacOS X with 'EditLine wrapper'.	WITHOUT_CLASSIFICATION	0.9994315243695525	WITHOUT_CLASSIFICATION	5.68475630447452E-4	IMPLEMENTATION
// We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)	WITHOUT_CLASSIFICATION	0.9999836170696796	WITHOUT_CLASSIFICATION	1.6382930320332327E-5	IMPLEMENTATION
// JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)	WITHOUT_CLASSIFICATION	0.9999944064775711	WITHOUT_CLASSIFICATION	5.593522428908357E-6	IMPLEMENTATION
// not overridden, let's go	WITHOUT_CLASSIFICATION	0.9993786387939134	WITHOUT_CLASSIFICATION	6.213612060865661E-4	IMPLEMENTATION
/* Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8() */	WITHOUT_CLASSIFICATION	0.9999525612936045	WITHOUT_CLASSIFICATION	4.743870639547855E-5	IMPLEMENTATION
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.8465023998586372	WITHOUT_CLASSIFICATION	0.1534976001413627	IMPLEMENTATION
// Complete using a Proc object	WITHOUT_CLASSIFICATION	0.9999703007668863	WITHOUT_CLASSIFICATION	2.9699233113753423E-5	IMPLEMENTATION
// clear basename so it's anonymous when raising	WITHOUT_CLASSIFICATION	0.9999851371490712	WITHOUT_CLASSIFICATION	1.4862850928735143E-5	IMPLEMENTATION
// These are not really used by timeout, but exposed for compatibility	WITHOUT_CLASSIFICATION	0.9999839016944178	WITHOUT_CLASSIFICATION	1.6098305582276565E-5	IMPLEMENTATION
// Timeout module methods	WITHOUT_CLASSIFICATION	0.9999292867577584	WITHOUT_CLASSIFICATION	7.07132422416223E-5	IMPLEMENTATION
// Toplevel defines	WITHOUT_CLASSIFICATION	0.9996651568166959	WITHOUT_CLASSIFICATION	3.3484318330410733E-4	IMPLEMENTATION
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.999995136604038	WITHOUT_CLASSIFICATION	4.863395961937695E-6	IMPLEMENTATION
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999946573568196	WITHOUT_CLASSIFICATION	5.3426431803349615E-6	IMPLEMENTATION
// if it's the exception we're expecting	WITHOUT_CLASSIFICATION	0.9999810186966556	WITHOUT_CLASSIFICATION	1.8981303344355284E-5	IMPLEMENTATION
// and we were given a specific exception	WITHOUT_CLASSIFICATION	0.9997512992679888	WITHOUT_CLASSIFICATION	2.4870073201122597E-4	IMPLEMENTATION
// otherwise, rethrow	WITHOUT_CLASSIFICATION	0.9999510226443594	WITHOUT_CLASSIFICATION	4.897735564065633E-5	IMPLEMENTATION
// // Remove the Executor task now, to avoid cancelled tasks accumulating // until an Executor thread can schedule and remove them //	WITHOUT_CLASSIFICATION	0.9999520314858137	WITHOUT_CLASSIFICATION	4.7968514186263384E-5	IMPLEMENTATION
// // If the task was scheduled, wait for it to finish before polling // for the exception it would have thrown. //	WITHOUT_CLASSIFICATION	0.9997901303054865	WITHOUT_CLASSIFICATION	2.0986969451344803E-4	IMPLEMENTATION
// NetProtocolBufferedIO	WITHOUT_CLASSIFICATION	0.9999438606165095	WITHOUT_CLASSIFICATION	5.6139383490612176E-5	IMPLEMENTATION
/* When a length is given, read_string acts like get_bytes */	WITHOUT_CLASSIFICATION	0.9999102124822873	WITHOUT_CLASSIFICATION	8.978751771277681E-5	IMPLEMENTATION
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9998558246326967	WITHOUT_CLASSIFICATION	1.4417536730324112E-4	IMPLEMENTATION
// ARRAY and STRUCT are only used internally	WITHOUT_CLASSIFICATION	0.9999911864105487	WITHOUT_CLASSIFICATION	8.813589451240553E-6	IMPLEMENTATION
// If no release method is defined, then memory leaks will result.	WITHOUT_CLASSIFICATION	0.999993436082096	WITHOUT_CLASSIFICATION	6.563917904012374E-6	IMPLEMENTATION
/*     * This variant of newStruct is called from StructLayoutBuilder     */	WITHOUT_CLASSIFICATION	0.9999999297335507	WITHOUT_CLASSIFICATION	7.026644938794481E-8	IMPLEMENTATION
// This also handles unsigned int -> negative signed int conversion	WITHOUT_CLASSIFICATION	0.9999979589099688	WITHOUT_CLASSIFICATION	2.0410900312527108E-6	IMPLEMENTATION
// Windows is LLP64	WITHOUT_CLASSIFICATION	0.9998951619519535	WITHOUT_CLASSIFICATION	1.0483804804645007E-4	IMPLEMENTATION
// Older JDK on linux map 'c' to 'libc.so' which doesn't work	WITHOUT_CLASSIFICATION	0.9999937365816505	WITHOUT_CLASSIFICATION	6.2634183495820205E-6	IMPLEMENTATION
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999845776419508	WITHOUT_CLASSIFICATION	1.5422358049181313E-5	IMPLEMENTATION
// $blah	WITHOUT_CLASSIFICATION	0.9999935752659732	WITHOUT_CLASSIFICATION	6.424734026853922E-6	IMPLEMENTATION
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9998558246326967	WITHOUT_CLASSIFICATION	1.4417536730324112E-4	IMPLEMENTATION
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999970554188216	WITHOUT_CLASSIFICATION	2.9445811784653585E-6	IMPLEMENTATION
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999845776419508	WITHOUT_CLASSIFICATION	1.5422358049181313E-5	IMPLEMENTATION
// // Keep a reference to the temporary memory in the cache so it does // not get freed by the GC until the struct is freed //	WITHOUT_CLASSIFICATION	0.9999761608016278	WITHOUT_CLASSIFICATION	2.383919837221749E-5	IMPLEMENTATION
// Add Pointer::NULL as a constant	WITHOUT_CLASSIFICATION	0.9999514115017855	WITHOUT_CLASSIFICATION	4.8588498214602863E-5	IMPLEMENTATION
// Create the ordered list of field names from the map	WITHOUT_CLASSIFICATION	0.9999961662235303	WITHOUT_CLASSIFICATION	3.833776469732476E-6	IMPLEMENTATION
// Assemble a [ :name, offset ] array	WITHOUT_CLASSIFICATION	0.9999558265873608	WITHOUT_CLASSIFICATION	4.417341263923592E-5	IMPLEMENTATION
//                case FLOAT:	WITHOUT_CLASSIFICATION	0.9999219001070069	WITHOUT_CLASSIFICATION	7.809989299320671E-5	IMPLEMENTATION
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999790826772768	WITHOUT_CLASSIFICATION	2.091732272316334E-5	IMPLEMENTATION
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999790826772768	WITHOUT_CLASSIFICATION	2.091732272316334E-5	IMPLEMENTATION
// No auto cleanup needed	WITHOUT_CLASSIFICATION	0.6367213056896653	IMPLEMENTATION	0.3632786943103347	WITHOUT_CLASSIFICATION
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9997739757899128	WITHOUT_CLASSIFICATION	2.2602421008718456E-4	IMPLEMENTATION
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999948581473	WITHOUT_CLASSIFICATION	5.141852699945823E-6	IMPLEMENTATION
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999948581473	WITHOUT_CLASSIFICATION	5.141852699945823E-6	IMPLEMENTATION
/*         * If there is exactly _one_ callback argument to the function,         * then a block can be given and automatically subsituted for the callback         * parameter.         */	WITHOUT_CLASSIFICATION	0.999999959181243	WITHOUT_CLASSIFICATION	4.081875703440256E-8	IMPLEMENTATION
/*------------------------------------------------------------------------*/	WITHOUT_CLASSIFICATION	0.9996983594805002	WITHOUT_CLASSIFICATION	3.016405194996755E-4	IMPLEMENTATION
//AF_INET	WITHOUT_CLASSIFICATION	0.999976214108194	WITHOUT_CLASSIFICATION	2.378589180606253E-5	IMPLEMENTATION
//AF_INET	WITHOUT_CLASSIFICATION	0.999976214108194	WITHOUT_CLASSIFICATION	2.378589180606253E-5	IMPLEMENTATION
// RubyUNIXServer	WITHOUT_CLASSIFICATION	0.9996615266859028	WITHOUT_CLASSIFICATION	3.3847331409717497E-4	IMPLEMENTATION
// line 321	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// // Set up for potentially fast-int operations //	WITHOUT_CLASSIFICATION	0.9999640687155684	WITHOUT_CLASSIFICATION	3.593128443154962E-5	IMPLEMENTATION
// // Hook up the MemoryPointer class if its not already there //	WITHOUT_CLASSIFICATION	0.9998519910601832	WITHOUT_CLASSIFICATION	1.480089398168752E-4	IMPLEMENTATION
// This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and // (2) Socket.getChannel() seems to return null in some cases	WITHOUT_CLASSIFICATION	0.9999997468600318	WITHOUT_CLASSIFICATION	2.5313996818905875E-7	IMPLEMENTATION
// no UNIXSockets on Windows	WITHOUT_CLASSIFICATION	0.9999477416402154	WITHOUT_CLASSIFICATION	5.2258359784676884E-5	IMPLEMENTATION
// Sockaddr_un has different structure on different platforms. // See JRUBY-2213 for more details.	WITHOUT_CLASSIFICATION	0.9994275869099651	WITHOUT_CLASSIFICATION	5.72413090034923E-4	IMPLEMENTATION
// There is something valid in the sun_path component	WITHOUT_CLASSIFICATION	0.999998787345763	WITHOUT_CLASSIFICATION	1.2126542369343657E-6	IMPLEMENTATION
// RubyIPSocket	WITHOUT_CLASSIFICATION	0.9996615266859028	WITHOUT_CLASSIFICATION	3.3847331409717497E-4	IMPLEMENTATION
// host is nil or the empty string, bind to INADDR_ANY	WITHOUT_CLASSIFICATION	0.9999717634863027	WITHOUT_CLASSIFICATION	2.823651369725542E-5	IMPLEMENTATION
// host and port given	WITHOUT_CLASSIFICATION	0.9997001505601205	WITHOUT_CLASSIFICATION	2.998494398794259E-4	IMPLEMENTATION
// RubyUDPSocket	WITHOUT_CLASSIFICATION	0.9996615266859028	WITHOUT_CLASSIFICATION	3.3847331409717497E-4	IMPLEMENTATION
// By default we always reverse lookup unless do_not_reverse_lookup set.	WITHOUT_CLASSIFICATION	0.9999640744282828	WITHOUT_CLASSIFICATION	3.592557171713555E-5	IMPLEMENTATION
// make sure descriptor is registered	WITHOUT_CLASSIFICATION	0.9999533257874582	WITHOUT_CLASSIFICATION	4.667421254174065E-5	IMPLEMENTATION
// continue with normal initialization	WITHOUT_CLASSIFICATION	0.9987628276128218	WITHOUT_CLASSIFICATION	0.001237172387178283	IMPLEMENTATION
// recv returns nil on EOF	WITHOUT_CLASSIFICATION	0.9999333979416317	WITHOUT_CLASSIFICATION	6.660205836835012E-5	IMPLEMENTATION
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.998287653548017	WITHOUT_CLASSIFICATION	0.0017123464519829227	IMPLEMENTATION
// RubyBasicSocket	WITHOUT_CLASSIFICATION	0.9996615266859028	WITHOUT_CLASSIFICATION	3.3847331409717497E-4	IMPLEMENTATION
// we don't have to define any that we don't support; see socket.c	WITHOUT_CLASSIFICATION	0.9999741251488775	WITHOUT_CLASSIFICATION	2.5874851122538946E-5	IMPLEMENTATION
// mandatory constants we haven't implemented	WITHOUT_CLASSIFICATION	0.8231388670561569	WITHOUT_CLASSIFICATION	0.17686113294384295	IMPLEMENTATION
// constants webrick crashes without	WITHOUT_CLASSIFICATION	0.9999374762095228	WITHOUT_CLASSIFICATION	6.252379047715519E-5	IMPLEMENTATION
// More constants needed by specs	WITHOUT_CLASSIFICATION	0.9479633662806881	WITHOUT_CLASSIFICATION	0.052036633719311845	IMPLEMENTATION
// normal file descriptor..try to work with it	WITHOUT_CLASSIFICATION	0.9996999446382767	WITHOUT_CLASSIFICATION	3.000553617232787E-4	IMPLEMENTATION
// AF_INET	WITHOUT_CLASSIFICATION	0.9999935752659732	WITHOUT_CLASSIFICATION	6.424734026853922E-6	IMPLEMENTATION
// 255.255.255.255	WITHOUT_CLASSIFICATION	0.9996615266859028	WITHOUT_CLASSIFICATION	3.3847331409717497E-4	IMPLEMENTATION
// 0.0.0.0	WITHOUT_CLASSIFICATION	0.9999935752659732	WITHOUT_CLASSIFICATION	6.424734026853922E-6	IMPLEMENTATION
//def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)	WITHOUT_CLASSIFICATION	0.9997046628276988	WITHOUT_CLASSIFICATION	2.953371723012954E-4	IMPLEMENTATION
// line 323	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999675563934765	WITHOUT_CLASSIFICATION	3.24436065235536E-5	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999675563934765	WITHOUT_CLASSIFICATION	3.24436065235536E-5	IMPLEMENTATION
// ok, it's a socket...set values accordingly // just using AF_INET since we can't tell from SocketChannel...	WITHOUT_CLASSIFICATION	0.9999999681744643	WITHOUT_CLASSIFICATION	3.182553555439004E-8	IMPLEMENTATION
// datagram, set accordingly // again, AF_INET	WITHOUT_CLASSIFICATION	0.9999506175729699	WITHOUT_CLASSIFICATION	4.9382427030152297E-5	IMPLEMENTATION
//IRubyObject family = args[2];	WITHOUT_CLASSIFICATION	0.9996150114106003	WITHOUT_CLASSIFICATION	3.8498858939971985E-4	IMPLEMENTATION
// When Socket::AI_PASSIVE and host is nil, return 'any' address. 	WITHOUT_CLASSIFICATION	0.9998589830236188	WITHOUT_CLASSIFICATION	1.4101697638115878E-4	IMPLEMENTATION
// The value of 1 is for Socket::AI_PASSIVE.	WITHOUT_CLASSIFICATION	0.999997847678786	WITHOUT_CLASSIFICATION	2.1523212140960347E-6	IMPLEMENTATION
// RubySocket	WITHOUT_CLASSIFICATION	0.9996615266859028	WITHOUT_CLASSIFICATION	3.3847331409717497E-4	IMPLEMENTATION
// numeric host, use it for port	WITHOUT_CLASSIFICATION	0.9998377141486924	WITHOUT_CLASSIFICATION	1.6228585130762785E-4	IMPLEMENTATION
//            e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999128506743875	WITHOUT_CLASSIFICATION	8.714932561242708E-5	IMPLEMENTATION
// we were woken up without being selected...poll for thread events and go back to sleep	WITHOUT_CLASSIFICATION	0.9999543913482647	WITHOUT_CLASSIFICATION	4.5608651735339864E-5	IMPLEMENTATION
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9992439464956256	WITHOUT_CLASSIFICATION	7.560535043743292E-4	IMPLEMENTATION
// no connection immediately accepted, let them try again	WITHOUT_CLASSIFICATION	0.9999081178710786	WITHOUT_CLASSIFICATION	9.188212892145379E-5	IMPLEMENTATION
// do nothing, just exit	WITHOUT_CLASSIFICATION	0.9999896815881159	WITHOUT_CLASSIFICATION	1.0318411884086613E-5	IMPLEMENTATION
//nativeThread.setPriority(priority);	WITHOUT_CLASSIFICATION	0.9996983594805002	WITHOUT_CLASSIFICATION	3.016405194996755E-4	IMPLEMENTATION
// set thread context JRuby classloader here, for Ruby-owned thread	WITHOUT_CLASSIFICATION	0.9999591410337509	WITHOUT_CLASSIFICATION	4.085896624905218E-5	IMPLEMENTATION
// uber-ThreadKill catcher, since it should always just mean "be dead"	WITHOUT_CLASSIFICATION	0.9999911418592892	WITHOUT_CLASSIFICATION	8.858140710760139E-6	IMPLEMENTATION
// Call the thread's code	WITHOUT_CLASSIFICATION	0.9999483150884493	WITHOUT_CLASSIFICATION	5.1684911550613924E-5	IMPLEMENTATION
// Someone called exit!, so we need to kill the main thread	WITHOUT_CLASSIFICATION	0.9997618836573314	WITHOUT_CLASSIFICATION	2.3811634266854496E-4	IMPLEMENTATION
// restore context classloader, in case we're using a thread pool	WITHOUT_CLASSIFICATION	0.9999760960950224	WITHOUT_CLASSIFICATION	2.3903904977633333E-5	IMPLEMENTATION
// be dead	WITHOUT_CLASSIFICATION	0.9999971121724694	WITHOUT_CLASSIFICATION	2.8878275304961913E-6	IMPLEMENTATION
// loop until a context is available, to clean up softrefs that might have been collected	WITHOUT_CLASSIFICATION	0.9997134027403276	WITHOUT_CLASSIFICATION	2.8659725967245534E-4	IMPLEMENTATION
// all threads in ruby thread group plus main thread	WITHOUT_CLASSIFICATION	0.9999641197573041	WITHOUT_CLASSIFICATION	3.588024269588195E-5	IMPLEMENTATION
// thread is not alive, skip it	WITHOUT_CLASSIFICATION	0.9953126936086432	WITHOUT_CLASSIFICATION	0.004687306391356903	IMPLEMENTATION
// future is done or cancelled, skip it	WITHOUT_CLASSIFICATION	0.9999389077044909	WITHOUT_CLASSIFICATION	6.109229550906611E-5	IMPLEMENTATION
// first, check if the sender has unreceived mail	WITHOUT_CLASSIFICATION	0.9999609387397039	WITHOUT_CLASSIFICATION	3.906126029603185E-5	IMPLEMENTATION
// then deliver mail to the target	WITHOUT_CLASSIFICATION	0.9999732715305877	WITHOUT_CLASSIFICATION	2.6728469412294668E-5	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999300903002879	WITHOUT_CLASSIFICATION	6.990969971205987E-5	IMPLEMENTATION
// Define a second version that doesn't take a block, so we have unique code paths for both cases.	WITHOUT_CLASSIFICATION	0.999993042616202	WITHOUT_CLASSIFICATION	6.957383798062152E-6	IMPLEMENTATION
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9997841730010996	WITHOUT_CLASSIFICATION	2.1582699890049773E-4	IMPLEMENTATION
// main body	WITHOUT_CLASSIFICATION	0.9998625224912678	WITHOUT_CLASSIFICATION	1.374775087321603E-4	IMPLEMENTATION
// return jump handling	WITHOUT_CLASSIFICATION	0.9998937811699874	WITHOUT_CLASSIFICATION	1.0621883001254626E-4	IMPLEMENTATION
// finally	WITHOUT_CLASSIFICATION	0.9999941488466981	WITHOUT_CLASSIFICATION	5.851153301882772E-6	IMPLEMENTATION
// return result if we're still good	WITHOUT_CLASSIFICATION	0.9999504160405035	WITHOUT_CLASSIFICATION	4.958395949658431E-5	IMPLEMENTATION
// redo jump handling	WITHOUT_CLASSIFICATION	0.9998564262863177	WITHOUT_CLASSIFICATION	1.4357371368230125E-4	IMPLEMENTATION
// clear the redo	WITHOUT_CLASSIFICATION	0.9998524004224929	WITHOUT_CLASSIFICATION	1.4759957750713334E-4	IMPLEMENTATION
// get runtime, create jump error, and throw it	WITHOUT_CLASSIFICATION	0.9996526562047422	WITHOUT_CLASSIFICATION	3.4734379525779675E-4	IMPLEMENTATION
// throw redo error if we're still good	WITHOUT_CLASSIFICATION	0.9986010738399491	WITHOUT_CLASSIFICATION	0.0013989261600508365	IMPLEMENTATION
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9997837392359694	WITHOUT_CLASSIFICATION	2.162607640305117E-4	IMPLEMENTATION
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9990803832427994	WITHOUT_CLASSIFICATION	9.19616757200552E-4	IMPLEMENTATION
// No required specified, check actual number of required args	WITHOUT_CLASSIFICATION	0.9997740386334397	WITHOUT_CLASSIFICATION	2.2596136656029639E-4	IMPLEMENTATION
// actual required is less than 3, so we use specific arity	WITHOUT_CLASSIFICATION	0.9994108337354852	WITHOUT_CLASSIFICATION	5.8916626451485E-4	IMPLEMENTATION
// actual required is greater than 3, raise error (we don't support actual required > 3)	WITHOUT_CLASSIFICATION	0.9924854890722107	WITHOUT_CLASSIFICATION	0.007514510927789217	IMPLEMENTATION
// simple path, no multimethod	WITHOUT_CLASSIFICATION	0.9999773476871299	WITHOUT_CLASSIFICATION	2.2652312870189347E-5	IMPLEMENTATION
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9994726794991328	WITHOUT_CLASSIFICATION	5.273205008671557E-4	IMPLEMENTATION
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9994726794991328	WITHOUT_CLASSIFICATION	5.273205008671557E-4	IMPLEMENTATION
// normal all-rest method	WITHOUT_CLASSIFICATION	0.9996161791873004	WITHOUT_CLASSIFICATION	3.8382081269955776E-4	IMPLEMENTATION
// for zero, one, two, three arities, JavaMethod.JavaMethod*.call(...IRubyObject[] args...) will check	WITHOUT_CLASSIFICATION	0.9999860687612074	WITHOUT_CLASSIFICATION	1.3931238792636602E-5	IMPLEMENTATION
// promise to implement zero to N	WITHOUT_CLASSIFICATION	0.9966529050891582	WITHOUT_CLASSIFICATION	0.0033470949108419436	IMPLEMENTATION
// return	WITHOUT_CLASSIFICATION	0.9999952812637635	WITHOUT_CLASSIFICATION	4.71873623658977E-6	IMPLEMENTATION
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999971862875516	WITHOUT_CLASSIFICATION	2.813712448408657E-6	IMPLEMENTATION
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.999962669531171	WITHOUT_CLASSIFICATION	3.733046882905789E-5	IMPLEMENTATION
// confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999820542099037	WITHOUT_CLASSIFICATION	1.7945790096278054E-5	IMPLEMENTATION
// confirm maximum not greater than optional	WITHOUT_CLASSIFICATION	0.9967095804114691	WITHOUT_CLASSIFICATION	0.0032904195885310327	IMPLEMENTATION
// Raise an error if arity does not match requirements	WITHOUT_CLASSIFICATION	0.9997427339723004	WITHOUT_CLASSIFICATION	2.572660276996267E-4	IMPLEMENTATION
// tc	WITHOUT_CLASSIFICATION	0.9999935752659732	WITHOUT_CLASSIFICATION	6.424734026853922E-6	IMPLEMENTATION
// self // name	WITHOUT_CLASSIFICATION	0.9994081953807706	WITHOUT_CLASSIFICATION	5.918046192292342E-4	IMPLEMENTATION
// no args	WITHOUT_CLASSIFICATION	0.9999968747730895	WITHOUT_CLASSIFICATION	3.1252269105876305E-6	IMPLEMENTATION
// variable args with block	WITHOUT_CLASSIFICATION	0.9999265757522604	WITHOUT_CLASSIFICATION	7.342424773954299E-5	IMPLEMENTATION
// variable args no block, load null block	WITHOUT_CLASSIFICATION	0.9999615791901966	WITHOUT_CLASSIFICATION	3.842080980348299E-5	IMPLEMENTATION
// zero args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999674102585575	WITHOUT_CLASSIFICATION	3.2589741442514416E-5	IMPLEMENTATION
// one arg with block	WITHOUT_CLASSIFICATION	0.9993928665737369	WITHOUT_CLASSIFICATION	6.071334262629968E-4	IMPLEMENTATION
// one arg, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999469861378941	WITHOUT_CLASSIFICATION	5.301386210593896E-5	IMPLEMENTATION
// two args with block	WITHOUT_CLASSIFICATION	0.9999096942009119	WITHOUT_CLASSIFICATION	9.030579908803425E-5	IMPLEMENTATION
// two args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.999917295959466	WITHOUT_CLASSIFICATION	8.270404053401866E-5	IMPLEMENTATION
// three args with block	WITHOUT_CLASSIFICATION	0.9999577990940145	WITHOUT_CLASSIFICATION	4.22009059854266E-5	IMPLEMENTATION
// three args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999613516369916	WITHOUT_CLASSIFICATION	3.864836300833757E-5	IMPLEMENTATION
// load block if it accepts block	WITHOUT_CLASSIFICATION	0.9999461921489645	WITHOUT_CLASSIFICATION	5.380785103537474E-5	IMPLEMENTATION
// all other arg cases with block	WITHOUT_CLASSIFICATION	0.9988244000939647	WITHOUT_CLASSIFICATION	0.0011755999060352803	IMPLEMENTATION
// all other arg cases without block	WITHOUT_CLASSIFICATION	0.9992932534363298	WITHOUT_CLASSIFICATION	7.067465636701251E-4	IMPLEMENTATION
// one arg, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999945279760958	WITHOUT_CLASSIFICATION	5.472023904310397E-6	IMPLEMENTATION
// two args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999914631660587	WITHOUT_CLASSIFICATION	8.536833941277975E-6	IMPLEMENTATION
// three args, no block; do nothing	WITHOUT_CLASSIFICATION	0.999996010816167	WITHOUT_CLASSIFICATION	3.989183832997022E-6	IMPLEMENTATION
// load target for invocations	WITHOUT_CLASSIFICATION	0.9999846032985671	WITHOUT_CLASSIFICATION	1.5396701432881992E-5	IMPLEMENTATION
// load receiver as original type for virtual invocation	WITHOUT_CLASSIFICATION	0.9999490162340499	WITHOUT_CLASSIFICATION	5.098376595025769E-5	IMPLEMENTATION
// static invocation	WITHOUT_CLASSIFICATION	0.9997241212053962	WITHOUT_CLASSIFICATION	2.758787946037732E-4	IMPLEMENTATION
// virtual invocation	WITHOUT_CLASSIFICATION	0.9998517676840518	WITHOUT_CLASSIFICATION	1.482323159482183E-4	IMPLEMENTATION
// void return type, so we need to load a nil for returning below	WITHOUT_CLASSIFICATION	0.999968161938974	WITHOUT_CLASSIFICATION	3.183806102602606E-5	IMPLEMENTATION
// normal finally and exit	WITHOUT_CLASSIFICATION	0.9998307967406782	WITHOUT_CLASSIFICATION	1.692032593217658E-4	IMPLEMENTATION
// promise to implement one to N	WITHOUT_CLASSIFICATION	0.9945746477107243	WITHOUT_CLASSIFICATION	0.005425352289275637	IMPLEMENTATION
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9990803832427994	WITHOUT_CLASSIFICATION	9.19616757200552E-4	IMPLEMENTATION
// these are only needed if we have a non-noop call config	WITHOUT_CLASSIFICATION	0.9402355812997991	WITHOUT_CLASSIFICATION	0.05976441870020091	IMPLEMENTATION
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9996177990090325	WITHOUT_CLASSIFICATION	3.8220099096750946E-4	IMPLEMENTATION
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9996177990090325	WITHOUT_CLASSIFICATION	3.8220099096750946E-4	IMPLEMENTATION
// singleton classes don't get their own visibility domain	WITHOUT_CLASSIFICATION	0.9999854742980749	WITHOUT_CLASSIFICATION	1.4525701925040053E-5	IMPLEMENTATION
// For visibility we need real meta class and not anonymous one from class << self	WITHOUT_CLASSIFICATION	0.9968571304393651	WITHOUT_CLASSIFICATION	0.003142869560634887	IMPLEMENTATION
// SimpleInvocationMethod	WITHOUT_CLASSIFICATION	0.9999438606165095	WITHOUT_CLASSIFICATION	5.6139383490612176E-5	IMPLEMENTATION
// never reached	WITHOUT_CLASSIFICATION	0.9961902352922046	WITHOUT_CLASSIFICATION	0.003809764707795395	IMPLEMENTATION
// promise to implement N with block	WITHOUT_CLASSIFICATION	0.9951573108074737	WITHOUT_CLASSIFICATION	0.004842689192526205	IMPLEMENTATION
// promise to implement zero to N with block	WITHOUT_CLASSIFICATION	0.9965959821398354	WITHOUT_CLASSIFICATION	0.0034040178601647624	IMPLEMENTATION
// promise to implement one to N with block	WITHOUT_CLASSIFICATION	0.9944825761814183	WITHOUT_CLASSIFICATION	0.0055174238185816205	IMPLEMENTATION
// promise to implement two to N with block	WITHOUT_CLASSIFICATION	0.9914060692507338	WITHOUT_CLASSIFICATION	0.008593930749266102	IMPLEMENTATION
// promise to implement zero to three with block	WITHOUT_CLASSIFICATION	0.9971606511212782	WITHOUT_CLASSIFICATION	0.0028393488787218425	IMPLEMENTATION
// promise to implement one to three with block	WITHOUT_CLASSIFICATION	0.9953962039576852	WITHOUT_CLASSIFICATION	0.0046037960423146815	IMPLEMENTATION
// promise to implement two to three with block	WITHOUT_CLASSIFICATION	0.9928254591949901	WITHOUT_CLASSIFICATION	0.007174540805009889	IMPLEMENTATION
// promise to implement three with block	WITHOUT_CLASSIFICATION	0.9959596635019545	WITHOUT_CLASSIFICATION	0.004040336498045488	IMPLEMENTATION
// promise to implement N	WITHOUT_CLASSIFICATION	0.9967148113863561	WITHOUT_CLASSIFICATION	0.0032851886136439977	IMPLEMENTATION
// DumpingInvocationMethodFactory	WITHOUT_CLASSIFICATION	0.999918508280422	WITHOUT_CLASSIFICATION	8.14917195780652E-5	IMPLEMENTATION
// We promote our box to being its own box since we're changing // visibilities, and need it to be reflected on this method object // independent of any other sharing the box.	WITHOUT_CLASSIFICATION	0.9999904131735551	WITHOUT_CLASSIFICATION	9.586826444940545E-6	IMPLEMENTATION
// Normally we could leave these to fall back on the superclass, but // since it dispatches through the [] version below, which may // dispatch through the []+block version, we can save it a couple hops // by overriding these here.	WITHOUT_CLASSIFICATION	0.9999835205499382	WITHOUT_CLASSIFICATION	1.647945006179316E-5	IMPLEMENTATION
// promise to implement two to N	WITHOUT_CLASSIFICATION	0.991549043451176	WITHOUT_CLASSIFICATION	0.00845095654882407	IMPLEMENTATION
// promise to implement three to N	WITHOUT_CLASSIFICATION	0.996033105195515	WITHOUT_CLASSIFICATION	0.003966894804484972	IMPLEMENTATION
// promise to implement zero to three	WITHOUT_CLASSIFICATION	0.9972081579683673	WITHOUT_CLASSIFICATION	0.002791842031632684	IMPLEMENTATION
// promise to implement one to three	WITHOUT_CLASSIFICATION	0.9954730988034953	WITHOUT_CLASSIFICATION	0.0045269011965046605	IMPLEMENTATION
// promise to implement two to three	WITHOUT_CLASSIFICATION	0.9929449875450376	WITHOUT_CLASSIFICATION	0.007055012454962531	IMPLEMENTATION
// promise to implement three	WITHOUT_CLASSIFICATION	0.9972598228041006	WITHOUT_CLASSIFICATION	0.0027401771958993747	IMPLEMENTATION
// all other arities use "n" dispatch path	WITHOUT_CLASSIFICATION	0.999386358058164	WITHOUT_CLASSIFICATION	6.136419418359872E-4	IMPLEMENTATION
// load up object and add a few useful methods	WITHOUT_CLASSIFICATION	0.9999761113251916	WITHOUT_CLASSIFICATION	2.3888674808425713E-5	IMPLEMENTATION
// open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel	WITHOUT_CLASSIFICATION	0.999963609708681	WITHOUT_CLASSIFICATION	3.63902913189094E-5	IMPLEMENTATION
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999630642214689	WITHOUT_CLASSIFICATION	3.6935778531154045E-5	IMPLEMENTATION
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.934428685703066	WITHOUT_CLASSIFICATION	0.06557131429693405	IMPLEMENTATION
// create constructor	WITHOUT_CLASSIFICATION	0.9999342508736726	WITHOUT_CLASSIFICATION	6.574912632732539E-5	IMPLEMENTATION
// wrap self and store the wrapper	WITHOUT_CLASSIFICATION	0.9999642063627765	WITHOUT_CLASSIFICATION	3.579363722353063E-5	IMPLEMENTATION
// end constructor	WITHOUT_CLASSIFICATION	0.9986645189988591	WITHOUT_CLASSIFICATION	0.001335481001140953	IMPLEMENTATION
// start setup method	WITHOUT_CLASSIFICATION	0.9999451488521661	WITHOUT_CLASSIFICATION	5.4851147833889716E-5	IMPLEMENTATION
// set RubyClass	WITHOUT_CLASSIFICATION	0.9997118592440819	WITHOUT_CLASSIFICATION	2.8814075591809623E-4	IMPLEMENTATION
// set Ruby	WITHOUT_CLASSIFICATION	0.9997118592440819	WITHOUT_CLASSIFICATION	2.8814075591809623E-4	IMPLEMENTATION
// all methods dispatch to the simple version by default, which is method_missing normally	WITHOUT_CLASSIFICATION	0.9999901235038714	WITHOUT_CLASSIFICATION	9.876496128561433E-6	IMPLEMENTATION
// try specific name first, falling back on simple name	WITHOUT_CLASSIFICATION	0.9992149314316172	WITHOUT_CLASSIFICATION	7.850685683827976E-4	IMPLEMENTATION
// get current context	WITHOUT_CLASSIFICATION	0.9998572471248521	WITHOUT_CLASSIFICATION	1.4275287514788206E-4	IMPLEMENTATION
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999594828482503	WITHOUT_CLASSIFICATION	4.051715174979683E-5	IMPLEMENTATION
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999630642214689	WITHOUT_CLASSIFICATION	3.6935778531154045E-5	IMPLEMENTATION
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.934428685703066	WITHOUT_CLASSIFICATION	0.06557131429693405	IMPLEMENTATION
// create constructor	WITHOUT_CLASSIFICATION	0.9999342508736726	WITHOUT_CLASSIFICATION	6.574912632732539E-5	IMPLEMENTATION
// end constructor	WITHOUT_CLASSIFICATION	0.9986645189988591	WITHOUT_CLASSIFICATION	0.001335481001140953	IMPLEMENTATION
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9976150680763849	WITHOUT_CLASSIFICATION	0.002384931923615075	IMPLEMENTATION
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999923357443813	WITHOUT_CLASSIFICATION	7.664255618731192E-6	IMPLEMENTATION
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9997192735669619	WITHOUT_CLASSIFICATION	2.8072643303810415E-4	IMPLEMENTATION
// load null block	WITHOUT_CLASSIFICATION	0.9997268787353106	WITHOUT_CLASSIFICATION	2.731212646893966E-4	IMPLEMENTATION
// invoke method	WITHOUT_CLASSIFICATION	0.9988833905000919	WITHOUT_CLASSIFICATION	0.0011166094999080355	IMPLEMENTATION
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999012999030813	WITHOUT_CLASSIFICATION	9.870009691868768E-5	IMPLEMENTATION
// end setup method	WITHOUT_CLASSIFICATION	0.9968201834978093	WITHOUT_CLASSIFICATION	0.0031798165021906582	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.999606655113441	WITHOUT_CLASSIFICATION	3.9334488655892204E-4	IMPLEMENTATION
// create static init, for a monitor object	WITHOUT_CLASSIFICATION	0.9999907417537733	WITHOUT_CLASSIFICATION	9.258246226596177E-6	IMPLEMENTATION
// store the wrapper	WITHOUT_CLASSIFICATION	0.9997845587003485	WITHOUT_CLASSIFICATION	2.1544129965140487E-4	IMPLEMENTATION
// prepare temp locals	WITHOUT_CLASSIFICATION	0.9999594548960519	WITHOUT_CLASSIFICATION	4.05451039482195E-5	IMPLEMENTATION
// Try to look up field for simple name // get field; if nonnull, go straight to dispatch	WITHOUT_CLASSIFICATION	0.9999902194236145	WITHOUT_CLASSIFICATION	9.780576385492086E-6	IMPLEMENTATION
// field is null, lock class and try to populate	WITHOUT_CLASSIFICATION	0.9999994455707046	WITHOUT_CLASSIFICATION	5.544292953854236E-7	IMPLEMENTATION
// try/finally block to ensure unlock	WITHOUT_CLASSIFICATION	0.9999748312044959	WITHOUT_CLASSIFICATION	2.5168795504063034E-5	IMPLEMENTATION
// store it	WITHOUT_CLASSIFICATION	0.9994947151651158	WITHOUT_CLASSIFICATION	5.052848348841885E-4	IMPLEMENTATION
// end of try block	WITHOUT_CLASSIFICATION	0.9996289510960136	WITHOUT_CLASSIFICATION	3.7104890398640804E-4	IMPLEMENTATION
// finally block to release monitor	WITHOUT_CLASSIFICATION	0.9999513898437926	WITHOUT_CLASSIFICATION	4.861015620729116E-5	IMPLEMENTATION
// exception handling for monitor release	WITHOUT_CLASSIFICATION	0.9999278935323519	WITHOUT_CLASSIFICATION	7.210646764807658E-5	IMPLEMENTATION
// re-get, re-check method; if not null now, go to dispatch	WITHOUT_CLASSIFICATION	0.9993382540527773	WITHOUT_CLASSIFICATION	6.617459472226554E-4	IMPLEMENTATION
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999594828482503	WITHOUT_CLASSIFICATION	4.051715174979683E-5	IMPLEMENTATION
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999923357443813	WITHOUT_CLASSIFICATION	7.664255618731192E-6	IMPLEMENTATION
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9997192735669619	WITHOUT_CLASSIFICATION	2.8072643303810415E-4	IMPLEMENTATION
// invoke method	WITHOUT_CLASSIFICATION	0.9988833905000919	WITHOUT_CLASSIFICATION	0.0011166094999080355	IMPLEMENTATION
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999012999030813	WITHOUT_CLASSIFICATION	9.870009691868768E-5	IMPLEMENTATION
// end setup method	WITHOUT_CLASSIFICATION	0.9968201834978093	WITHOUT_CLASSIFICATION	0.0031798165021906582	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.999606655113441	WITHOUT_CLASSIFICATION	3.9334488655892204E-4	IMPLEMENTATION
// create the class	WITHOUT_CLASSIFICATION	0.9998737045076324	WITHOUT_CLASSIFICATION	1.2629549236765935E-4	IMPLEMENTATION
// method still not available, call method_missing	WITHOUT_CLASSIFICATION	0.9112476506541065	WITHOUT_CLASSIFICATION	0.08875234934589353	IMPLEMENTATION
// perform the dispatch	WITHOUT_CLASSIFICATION	0.9999541224819009	WITHOUT_CLASSIFICATION	4.587751809916529E-5	IMPLEMENTATION
// try to load the specified name; only if that fails, try to define the class	WITHOUT_CLASSIFICATION	0.9999983056024135	WITHOUT_CLASSIFICATION	1.6943975864094078E-6	IMPLEMENTATION
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999606294600188	WITHOUT_CLASSIFICATION	3.9370539981171055E-5	IMPLEMENTATION
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999606294600188	WITHOUT_CLASSIFICATION	3.9370539981171055E-5	IMPLEMENTATION
// setup the class	WITHOUT_CLASSIFICATION	0.9998870161757617	WITHOUT_CLASSIFICATION	1.1298382423841748E-4	IMPLEMENTATION
// now, create a method_added that can replace the DynamicMethod fields as they're redefined	WITHOUT_CLASSIFICATION	0.9997648091900773	WITHOUT_CLASSIFICATION	2.351908099228005E-4	IMPLEMENTATION
// do nothing, it's a non-impl method	WITHOUT_CLASSIFICATION	0.9997929667916201	WITHOUT_CLASSIFICATION	2.0703320837984644E-4	IMPLEMENTATION
// probably a primitive	WITHOUT_CLASSIFICATION	0.9999658359679492	WITHOUT_CLASSIFICATION	3.416403205078246E-5	IMPLEMENTATION
// interfaces are handled as modules	WITHOUT_CLASSIFICATION	0.9999577509679071	WITHOUT_CLASSIFICATION	4.2249032092890535E-5	IMPLEMENTATION
// construct the mirror class and parent classes	WITHOUT_CLASSIFICATION	0.999963556535155	WITHOUT_CLASSIFICATION	3.644346484485876E-5	IMPLEMENTATION
// set the full name	WITHOUT_CLASSIFICATION	0.9994352866870432	WITHOUT_CLASSIFICATION	5.647133129568748E-4	IMPLEMENTATION
// include all interfaces	WITHOUT_CLASSIFICATION	0.9998961009708383	WITHOUT_CLASSIFICATION	1.0389902916173271E-4	IMPLEMENTATION
// if it's an array, only add methods for aref, aset, and length	WITHOUT_CLASSIFICATION	0.99998933305255	WITHOUT_CLASSIFICATION	1.0666947450068002E-5	IMPLEMENTATION
// add array construction methods	WITHOUT_CLASSIFICATION	0.9998401978201296	WITHOUT_CLASSIFICATION	1.5980217987044426E-4	IMPLEMENTATION
// add all public constructors (note: getConstructors only returns public ones)	WITHOUT_CLASSIFICATION	0.9999664982710669	WITHOUT_CLASSIFICATION	3.3501728933039603E-5	IMPLEMENTATION
// add all instance and static methods	WITHOUT_CLASSIFICATION	0.9998979807764986	WITHOUT_CLASSIFICATION	1.0201922350147117E-4	IMPLEMENTATION
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999804920054458	WITHOUT_CLASSIFICATION	1.950799455416117E-5	IMPLEMENTATION
// too much array creation!	WITHOUT_CLASSIFICATION	0.9999831307978703	WITHOUT_CLASSIFICATION	1.686920212964039E-5	IMPLEMENTATION
// only include static methods if specified	WITHOUT_CLASSIFICATION	0.9999793114663718	WITHOUT_CLASSIFICATION	2.0688533628284663E-5	IMPLEMENTATION
// add a few type-specific special methods	WITHOUT_CLASSIFICATION	0.9998723062020278	WITHOUT_CLASSIFICATION	1.2769379797223905E-4	IMPLEMENTATION
// add all static variables	WITHOUT_CLASSIFICATION	0.9999141880781176	WITHOUT_CLASSIFICATION	8.58119218823485E-5	IMPLEMENTATION
// only public static fields that are valid constants	WITHOUT_CLASSIFICATION	0.9999969598045912	WITHOUT_CLASSIFICATION	3.040195408720763E-6	IMPLEMENTATION
// looks like someone's trying to raise a Java exception. Let them.	WITHOUT_CLASSIFICATION	0.9999659018631385	WITHOUT_CLASSIFICATION	3.4098136861541364E-5	IMPLEMENTATION
// NOTE: The five match methods are arity-split to avoid the cost of boxing arguments // when there's already a cached match. Do not condense them into a single // method.	WITHOUT_CLASSIFICATION	0.9999185687709993	WITHOUT_CLASSIFICATION	8.143122900070397E-5	IMPLEMENTATION
// TODO: This is where we would want to do precision checks to see // if it's non-destructive to coerce a given type into the target // integral primitive	WITHOUT_CLASSIFICATION	0.5712314107287372	IMPLEMENTATION	0.4287685892712627	WITHOUT_CLASSIFICATION
// long first because it's what Fixnum claims to be	WITHOUT_CLASSIFICATION	0.9989587123737492	WITHOUT_CLASSIFICATION	0.0010412876262506992	IMPLEMENTATION
// double first because it's what float claims to be	WITHOUT_CLASSIFICATION	0.9998787525758286	WITHOUT_CLASSIFICATION	1.2124742417137463E-4	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.8953995793687894	IMPLEMENTATION	0.10460042063121065	WITHOUT_CLASSIFICATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9996615266859028	WITHOUT_CLASSIFICATION	3.3847331409717497E-4	IMPLEMENTATION
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9994727020414246	WITHOUT_CLASSIFICATION	5.272979585753977E-4	IMPLEMENTATION
// we set all Java methods to optional, since many/most have overloads	WITHOUT_CLASSIFICATION	0.9999849864156727	WITHOUT_CLASSIFICATION	1.501358432731448E-5	IMPLEMENTATION
// If we hold a Java object, we need a java_class accessor	WITHOUT_CLASSIFICATION	0.999908858435251	WITHOUT_CLASSIFICATION	9.114156474899598E-5	IMPLEMENTATION
// line 326	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9996615266859028	WITHOUT_CLASSIFICATION	3.3847331409717497E-4	IMPLEMENTATION
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9994727020414246	WITHOUT_CLASSIFICATION	5.272979585753977E-4	IMPLEMENTATION
// too much array creation!	WITHOUT_CLASSIFICATION	0.9999831307978703	WITHOUT_CLASSIFICATION	1.686920212964039E-5	IMPLEMENTATION
// construct new array proxy (ArrayJavaProxy)	WITHOUT_CLASSIFICATION	0.9999726504049229	WITHOUT_CLASSIFICATION	2.734959507711008E-5	IMPLEMENTATION
// Get map of all fields we want to define.  	WITHOUT_CLASSIFICATION	0.999932151945992	WITHOUT_CLASSIFICATION	6.784805400790555E-5	IMPLEMENTATION
// Look through all mappings to find a match entry for this field	WITHOUT_CLASSIFICATION	0.9997508088336244	WITHOUT_CLASSIFICATION	2.4919116637551764E-4	IMPLEMENTATION
// Hit a non-java proxy class (included Modules can be a cause of this...skip)	WITHOUT_CLASSIFICATION	0.9999951199485202	WITHOUT_CLASSIFICATION	4.880051479825709E-6	IMPLEMENTATION
// We could not find all of them print out first one (we could print them all?)	WITHOUT_CLASSIFICATION	0.9973715643781783	WITHOUT_CLASSIFICATION	0.0026284356218216473	IMPLEMENTATION
// dummy bodies for default impls	WITHOUT_CLASSIFICATION	0.9999939462215879	WITHOUT_CLASSIFICATION	6.05377841207069E-6	IMPLEMENTATION
// initialize this if it hasn't been	WITHOUT_CLASSIFICATION	0.9998691828212961	WITHOUT_CLASSIFICATION	1.3081717870380732E-4	IMPLEMENTATION
// initialize these if they haven't been	WITHOUT_CLASSIFICATION	0.9999335130391396	WITHOUT_CLASSIFICATION	6.648696086045588E-5	IMPLEMENTATION
// not allowed for original (non-generated) Java classes // note: not allowing for any previously created class right now; // this restriction might be loosened later for generated classes	WITHOUT_CLASSIFICATION	0.9997942966833301	WITHOUT_CLASSIFICATION	2.0570331666995123E-4	IMPLEMENTATION
// setup new, etc unless this is a ConcreteJavaProxy subclass	WITHOUT_CLASSIFICATION	0.9999780534477526	WITHOUT_CLASSIFICATION	2.1946552247362084E-5	IMPLEMENTATION
// First we make modifications to the class, to adapt it to being // both a Ruby class and a proxy for a Java type	WITHOUT_CLASSIFICATION	0.9999713343578482	WITHOUT_CLASSIFICATION	2.8665642151714362E-5	IMPLEMENTATION
// list of interfaces we implement	WITHOUT_CLASSIFICATION	0.9920117979647596	WITHOUT_CLASSIFICATION	0.007988202035240411	IMPLEMENTATION
// We capture the original "new" and make it private	WITHOUT_CLASSIFICATION	0.9997000552256224	WITHOUT_CLASSIFICATION	2.999447743775843E-4	IMPLEMENTATION
// The replacement "new" allocates and inits the Ruby object as before, but // also instantiates our proxified Java object by calling __jcreate!	WITHOUT_CLASSIFICATION	0.9999998185033252	WITHOUT_CLASSIFICATION	1.8149667486917284E-7	IMPLEMENTATION
// Next, we define a few private methods that we'll use to manipulate // the Java object contained within this Ruby object	WITHOUT_CLASSIFICATION	0.9999635915775554	WITHOUT_CLASSIFICATION	3.6408422444628243E-5	IMPLEMENTATION
// jcreate instantiates the proxy object which implements all interfaces // and which is wrapped and implemented by this object	WITHOUT_CLASSIFICATION	0.9974367139788793	WITHOUT_CLASSIFICATION	0.00256328602112072	IMPLEMENTATION
// Now we add an "implement" and "implement_all" methods to the class	WITHOUT_CLASSIFICATION	0.9999016836496913	WITHOUT_CLASSIFICATION	9.831635030869744E-5	IMPLEMENTATION
// implement all forces implementation of all interfaces we intend // for this class to implement	WITHOUT_CLASSIFICATION	0.9793119730102248	WITHOUT_CLASSIFICATION	0.020688026989775253	IMPLEMENTATION
// we've already done the above priming logic, just add another interface // to the list of intentions unless we're past the point of no return or // already intend to implement the given interface	WITHOUT_CLASSIFICATION	0.9988630366826508	WITHOUT_CLASSIFICATION	0.0011369633173492044	IMPLEMENTATION
// walk all superclasses aggregating interfaces	WITHOUT_CLASSIFICATION	0.9999335452326964	WITHOUT_CLASSIFICATION	6.645476730360914E-5	IMPLEMENTATION
// construct the new interface impl and set it into the object	WITHOUT_CLASSIFICATION	0.9999955715059045	WITHOUT_CLASSIFICATION	4.428494095576427E-6	IMPLEMENTATION
// assuming the user wants a collection of interfaces that can be // included together. make it so.	WITHOUT_CLASSIFICATION	0.9989090776174063	WITHOUT_CLASSIFICATION	0.0010909223825936777	IMPLEMENTATION
// not allowed for existing Java interface modules	WITHOUT_CLASSIFICATION	0.9997085957514581	WITHOUT_CLASSIFICATION	2.914042485419037E-4	IMPLEMENTATION
// To turn a module into an "interface collection" we add a class instance // variable to hold the list of interfaces, and modify append_features // for this module to call append_features on each of those interfaces as // well	WITHOUT_CLASSIFICATION	0.999999359356106	WITHOUT_CLASSIFICATION	6.406438940738226E-7	IMPLEMENTATION
// already set up append_features, just add the interface if we haven't already	WITHOUT_CLASSIFICATION	0.9999974182986059	WITHOUT_CLASSIFICATION	2.581701394098569E-6	IMPLEMENTATION
// array-of-interface-type creation/identity	WITHOUT_CLASSIFICATION	0.999918508280422	WITHOUT_CLASSIFICATION	8.14917195780652E-5	IMPLEMENTATION
// keep this variant for kind_of? testing	WITHOUT_CLASSIFICATION	0.999926066658288	WITHOUT_CLASSIFICATION	7.3933341712105E-5	IMPLEMENTATION
// array creation should use this variant	WITHOUT_CLASSIFICATION	0.9994605726790788	WITHOUT_CLASSIFICATION	5.394273209211337E-4	IMPLEMENTATION
// parent.setConstant(name, proxyClass); // where the name should come from ?	WITHOUT_CLASSIFICATION	0.9995415048896885	WITHOUT_CLASSIFICATION	4.5849511031145984E-4	IMPLEMENTATION
// including interface module so old-style interface "subclasses" will // respond correctly to #kind_of?, etc.	WITHOUT_CLASSIFICATION	0.9999865822688326	WITHOUT_CLASSIFICATION	1.3417731167370466E-5	IMPLEMENTATION
// add reference to interface module	WITHOUT_CLASSIFICATION	0.9999818678190041	WITHOUT_CLASSIFICATION	1.8132180995849044E-5	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9998123787788509	WITHOUT_CLASSIFICATION	1.8762122114902795E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9998123787788509	WITHOUT_CLASSIFICATION	1.8762122114902795E-4	IMPLEMENTATION
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999804920054458	WITHOUT_CLASSIFICATION	1.950799455416117E-5	IMPLEMENTATION
// same as argument_types, but matches name in java.lang.reflect.Constructor/Method	WITHOUT_CLASSIFICATION	0.9999995717346195	WITHOUT_CLASSIFICATION	4.282653805030491E-7	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999994883444695	WITHOUT_CLASSIFICATION	5.116555304751537E-7	IMPLEMENTATION
// weakly reserved names	WITHOUT_CLASSIFICATION	0.9999390733072668	WITHOUT_CLASSIFICATION	6.092669273300624E-5	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.999994844636106	WITHOUT_CLASSIFICATION	5.155363894034164E-6	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.999994844636106	WITHOUT_CLASSIFICATION	5.155363894034164E-6	IMPLEMENTATION
// modified only by addMethod; no synchronization required	WITHOUT_CLASSIFICATION	0.9998859377226272	WITHOUT_CLASSIFICATION	1.1406227737268987E-4	IMPLEMENTATION
// if there's no constructor, we must prevent construction	WITHOUT_CLASSIFICATION	0.9986539369493188	WITHOUT_CLASSIFICATION	0.0013460630506811947	IMPLEMENTATION
// caching constructors, as they're accessed for each new instance	WITHOUT_CLASSIFICATION	0.9999896476640044	WITHOUT_CLASSIFICATION	1.0352335995589285E-5	IMPLEMENTATION
// proxy module for interfaces	WITHOUT_CLASSIFICATION	0.9999894597096312	WITHOUT_CLASSIFICATION	1.0540290368785593E-5	IMPLEMENTATION
// proxy class for concrete classes.  also used for // "concrete" interfaces, which is why we have two fields	WITHOUT_CLASSIFICATION	0.9999899076496638	WITHOUT_CLASSIFICATION	1.0092350336270157E-5	IMPLEMENTATION
// readable only by thread building proxy, so don't need to be // volatile. used to handle recursive calls to getProxyClass/Module // while proxy is being constructed (usually when a constant // defined by a class is of the same type as that class).	WITHOUT_CLASSIFICATION	0.9999992864143652	WITHOUT_CLASSIFICATION	7.1358563471809E-7	IMPLEMENTATION
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999983821308275	WITHOUT_CLASSIFICATION	1.6178691726238558E-6	IMPLEMENTATION
// Now add all aliases for the static methods (fields) as appropriate	WITHOUT_CLASSIFICATION	0.9999766943247892	WITHOUT_CLASSIFICATION	2.3305675210899262E-5	IMPLEMENTATION
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999974513139236	WITHOUT_CLASSIFICATION	2.548686076476615E-6	IMPLEMENTATION
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999028145536049	WITHOUT_CLASSIFICATION	9.718544639505299E-5	IMPLEMENTATION
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999601066985001	WITHOUT_CLASSIFICATION	3.9893301499812E-5	IMPLEMENTATION
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.999974134521445	WITHOUT_CLASSIFICATION	2.586547855499847E-5	IMPLEMENTATION
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999624586173688	WITHOUT_CLASSIFICATION	3.7541382631196176E-5	IMPLEMENTATION
// Additionally add ?-postfixed aliases to any boolean methods and properties.	WITHOUT_CLASSIFICATION	0.9999847966791371	WITHOUT_CLASSIFICATION	1.5203320862965542E-5	IMPLEMENTATION
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.999918508280422	WITHOUT_CLASSIFICATION	8.14917195780652E-5	IMPLEMENTATION
// something?	WITHOUT_CLASSIFICATION	0.9993525421617715	WITHOUT_CLASSIFICATION	6.474578382285149E-4	IMPLEMENTATION
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999901281754765	WITHOUT_CLASSIFICATION	9.871824523501354E-6	IMPLEMENTATION
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999901281754765	WITHOUT_CLASSIFICATION	9.871824523501354E-6	IMPLEMENTATION
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9989851853252653	WITHOUT_CLASSIFICATION	0.0010148146747347233	IMPLEMENTATION
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9989851853252653	WITHOUT_CLASSIFICATION	0.0010148146747347233	IMPLEMENTATION
// create constructorInstaller; if there are no constructors, it will disable construction	WITHOUT_CLASSIFICATION	0.9999977738725007	WITHOUT_CLASSIFICATION	2.226127499338753E-6	IMPLEMENTATION
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999964765378314	WITHOUT_CLASSIFICATION	3.523462168575055E-6	IMPLEMENTATION
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999823161227059	WITHOUT_CLASSIFICATION	1.7683877294041246E-5	IMPLEMENTATION
// now iterate over all installers and make sure they also have appropriate aliases	WITHOUT_CLASSIFICATION	0.9999789060364439	WITHOUT_CLASSIFICATION	2.109396355609043E-5	IMPLEMENTATION
// old (quasi-deprecated) interface class	WITHOUT_CLASSIFICATION	0.9999893934807057	WITHOUT_CLASSIFICATION	1.0606519294223646E-5	IMPLEMENTATION
// 1.9 support for encodings	WITHOUT_CLASSIFICATION	0.99954681333205	WITHOUT_CLASSIFICATION	4.5318666794997675E-4	IMPLEMENTATION
// double-check the cache now that we're synchronized	WITHOUT_CLASSIFICATION	0.9995714032119971	WITHOUT_CLASSIFICATION	4.285967880028817E-4	IMPLEMENTATION
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.999974134521445	WITHOUT_CLASSIFICATION	2.586547855499847E-5	IMPLEMENTATION
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999624586173688	WITHOUT_CLASSIFICATION	3.7541382631196176E-5	IMPLEMENTATION
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.999918508280422	WITHOUT_CLASSIFICATION	8.14917195780652E-5	IMPLEMENTATION
// one word type name that starts lower-case...it may be a primitive type	WITHOUT_CLASSIFICATION	0.9999218496599701	WITHOUT_CLASSIFICATION	7.815034002991429E-5	IMPLEMENTATION
// Java.getProxyClass deals with sync issues, so we won't duplicate the logic here	WITHOUT_CLASSIFICATION	0.9999904816353725	WITHOUT_CLASSIFICATION	9.518364627570397E-6	IMPLEMENTATION
// note: intentionally returning the actual array returned from Java, rather // than wrapping it in a RubyArray. wave of the future, when java_class will // return the actual class, rather than a JavaClass wrapper.	WITHOUT_CLASSIFICATION	0.9999998822755003	WITHOUT_CLASSIFICATION	1.1772449971055644E-7	IMPLEMENTATION
// see note above re: return type	WITHOUT_CLASSIFICATION	0.9997666826307567	WITHOUT_CLASSIFICATION	2.3331736924324097E-4	IMPLEMENTATION
// restrictive security policy; no matter, we only want public // classes anyway	WITHOUT_CLASSIFICATION	0.9999690641936898	WITHOUT_CLASSIFICATION	3.093580631025928E-5	IMPLEMENTATION
// very restrictive policy (disallows Member.PUBLIC) // we'd never actually get this far in that case	WITHOUT_CLASSIFICATION	0.999479493615902	WITHOUT_CLASSIFICATION	5.205063840978647E-4	IMPLEMENTATION
// one-dimensional array	WITHOUT_CLASSIFICATION	0.9999553009108773	WITHOUT_CLASSIFICATION	4.4699089122800496E-5	IMPLEMENTATION
// n-dimensional array	WITHOUT_CLASSIFICATION	0.9999553009108773	WITHOUT_CLASSIFICATION	4.4699089122800496E-5	IMPLEMENTATION
// if it's an array of arrays, recurse with the component type	WITHOUT_CLASSIFICATION	0.9999712078625116	WITHOUT_CLASSIFICATION	2.8792137488297492E-5	IMPLEMENTATION
// we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods // see JRUBY-3130	WITHOUT_CLASSIFICATION	0.9999967003290329	WITHOUT_CLASSIFICATION	3.299670967039113E-6	IMPLEMENTATION
// Proc implementing an interface, pull in the catch-all code that lets the proc get invoked // no matter what method is called on the interface	WITHOUT_CLASSIFICATION	0.9999895367891593	WITHOUT_CLASSIFICATION	1.0463210840755507E-5	IMPLEMENTATION
// can't be converted any more, return it	WITHOUT_CLASSIFICATION	0.9999687347239156	WITHOUT_CLASSIFICATION	3.126527608442854E-5	IMPLEMENTATION
// getFooBar() => fooBar?, foo_bar?(*)	WITHOUT_CLASSIFICATION	0.9999624532545003	WITHOUT_CLASSIFICATION	3.75467454997539E-5	IMPLEMENTATION
// If not a property, but is boolean add ?-postfixed aliases.	WITHOUT_CLASSIFICATION	0.9999412763040555	WITHOUT_CLASSIFICATION	5.872369594449935E-5	IMPLEMENTATION
// many cases are ok to convert to float; if not one of these, error	WITHOUT_CLASSIFICATION	0.9898277418807414	WITHOUT_CLASSIFICATION	0.01017225811925858	IMPLEMENTATION
// for Object, default to natural wrapper type	WITHOUT_CLASSIFICATION	0.9999921674323278	WITHOUT_CLASSIFICATION	7.832567672267829E-6	IMPLEMENTATION
// rubyObject is already of the required jruby class (or subclass)	WITHOUT_CLASSIFICATION	0.999990388045778	WITHOUT_CLASSIFICATION	9.611954221901742E-6	IMPLEMENTATION
// the converters handle not only primitive types but also their boxed versions, so we should check // if we have a converter before checking for isPrimitive()	WITHOUT_CLASSIFICATION	0.9992688652031637	WITHOUT_CLASSIFICATION	7.311347968363537E-4	IMPLEMENTATION
// it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9989367741675346	WITHOUT_CLASSIFICATION	0.0010632258324653836	IMPLEMENTATION
// we've found a Java type to which we've coerced the Ruby value, wrap it	WITHOUT_CLASSIFICATION	0.9999192887857358	WITHOUT_CLASSIFICATION	8.071121426426412E-5	IMPLEMENTATION
// set of utility methods for Java-based proxy objects	WITHOUT_CLASSIFICATION	0.9999929796373316	WITHOUT_CLASSIFICATION	7.020362668415105E-6	IMPLEMENTATION
// the proxy (wrapper) type hierarchy	WITHOUT_CLASSIFICATION	0.9999746819645194	WITHOUT_CLASSIFICATION	2.531803548059492E-5	IMPLEMENTATION
//InterfaceJavaProxy.createInterfaceJavaProxy(context);	WITHOUT_CLASSIFICATION	0.9996983594805002	WITHOUT_CLASSIFICATION	3.016405194996755E-4	IMPLEMENTATION
// also create the JavaProxy* classes	WITHOUT_CLASSIFICATION	0.9998325353585811	WITHOUT_CLASSIFICATION	1.6746464141892335E-4	IMPLEMENTATION
// The template for interface modules	WITHOUT_CLASSIFICATION	0.9999947741630365	WITHOUT_CLASSIFICATION	5.225836963447584E-6	IMPLEMENTATION
// Now attach Java-related extras to core classes	WITHOUT_CLASSIFICATION	0.9997703150578288	WITHOUT_CLASSIFICATION	2.296849421711403E-4	IMPLEMENTATION
// add all name-to-class mappings	WITHOUT_CLASSIFICATION	0.9982080059374222	WITHOUT_CLASSIFICATION	0.001791994062577717	IMPLEMENTATION
// add some base Java classes everyone will need	WITHOUT_CLASSIFICATION	0.9999040366744868	WITHOUT_CLASSIFICATION	9.596332551325203E-5	IMPLEMENTATION
// finally, set JavaSupport.isEnabled to true	WITHOUT_CLASSIFICATION	0.9999232234689157	WITHOUT_CLASSIFICATION	7.677653108429159E-5	IMPLEMENTATION
// shouldn't happen, but if a superclass is specified, it's not ours	WITHOUT_CLASSIFICATION	0.9998633843312451	WITHOUT_CLASSIFICATION	1.3661566875488058E-4	IMPLEMENTATION
// include any interfaces we extend	WITHOUT_CLASSIFICATION	0.9986591756870099	WITHOUT_CLASSIFICATION	0.0013408243129901661	IMPLEMENTATION
// java.lang.Object is added at root of java proxy classes	WITHOUT_CLASSIFICATION	0.9999987117514374	WITHOUT_CLASSIFICATION	1.2882485627137743E-6	IMPLEMENTATION
// other java proxy classes added under their superclass' java proxy	WITHOUT_CLASSIFICATION	0.9999948113268698	WITHOUT_CLASSIFICATION	5.188673130115168E-6	IMPLEMENTATION
// include interface modules into the proxy class	WITHOUT_CLASSIFICATION	0.9999986198939296	WITHOUT_CLASSIFICATION	1.3801060704578771E-6	IMPLEMENTATION
// JRUBY-2938 the proxy class might already exist	WITHOUT_CLASSIFICATION	0.9999798102556396	WITHOUT_CLASSIFICATION	2.0189744360342498E-5	IMPLEMENTATION
// add java_method for unbound use	WITHOUT_CLASSIFICATION	0.9997754069485544	WITHOUT_CLASSIFICATION	2.245930514456688E-4	IMPLEMENTATION
// add alias to meta	WITHOUT_CLASSIFICATION	0.9996257204974237	WITHOUT_CLASSIFICATION	3.742795025763268E-4	IMPLEMENTATION
// we'll only map conventional class names to modules 	WITHOUT_CLASSIFICATION	0.9999975241632373	WITHOUT_CLASSIFICATION	2.4758367627486812E-6	IMPLEMENTATION
/* expected */	WITHOUT_CLASSIFICATION	0.9999595407144171	WITHOUT_CLASSIFICATION	4.0459285582869954E-5	IMPLEMENTATION
// Haven't found a class, continue on as though it were a package	WITHOUT_CLASSIFICATION	0.9998410335558122	WITHOUT_CLASSIFICATION	1.5896644418777748E-4	IMPLEMENTATION
// upper case name, so most likely a class	WITHOUT_CLASSIFICATION	0.9999741334632922	WITHOUT_CLASSIFICATION	2.5866536707721868E-5	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999994883444695	WITHOUT_CLASSIFICATION	5.116555304751537E-7	IMPLEMENTATION
// add alias to meta	WITHOUT_CLASSIFICATION	0.9996257204974237	WITHOUT_CLASSIFICATION	3.742795025763268E-4	IMPLEMENTATION
// this is where we'll get connected when classes are opened using // package module syntax.	WITHOUT_CLASSIFICATION	0.9999098891873056	WITHOUT_CLASSIFICATION	9.011081269438017E-5	IMPLEMENTATION
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9994390048690447	WITHOUT_CLASSIFICATION	5.609951309553859E-4	IMPLEMENTATION
// this covers primitives and (unlikely) lower-case class names	WITHOUT_CLASSIFICATION	0.999946618402264	WITHOUT_CLASSIFICATION	5.338159773598057E-5	IMPLEMENTATION
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999100114765503	WITHOUT_CLASSIFICATION	8.998852344966535E-5	IMPLEMENTATION
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999100114765503	WITHOUT_CLASSIFICATION	8.998852344966535E-5	IMPLEMENTATION
// Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9999918453789014	WITHOUT_CLASSIFICATION	8.154621098675497E-6	IMPLEMENTATION
// Create list of interfaces to proxy (and make sure they really are interfaces)	WITHOUT_CLASSIFICATION	0.9999981182217665	WITHOUT_CLASSIFICATION	1.8817782334579753E-6	IMPLEMENTATION
// hashcode is a combination of the interfaces and the Ruby class we're using // to implement them	WITHOUT_CLASSIFICATION	0.9999160548219095	WITHOUT_CLASSIFICATION	8.394517809049489E-5	IMPLEMENTATION
// if it's a singleton class and the real class is proc, we're doing closure conversion // so just use Proc's hashcode	WITHOUT_CLASSIFICATION	0.9999996863680964	WITHOUT_CLASSIFICATION	3.1363190351175635E-7	IMPLEMENTATION
// normal new class implementing interfaces	WITHOUT_CLASSIFICATION	0.9999367118418522	WITHOUT_CLASSIFICATION	6.328815814786596E-5	IMPLEMENTATION
/*         * Initialize some components.         */	WITHOUT_CLASSIFICATION	0.9999930703999276	WITHOUT_CLASSIFICATION	6.929600072441183E-6	IMPLEMENTATION
// not synchronizing these methods, no harm if these values get set more // than once. // (also note that there's no chance of getting a partially initialized // class/module, as happens-before is guaranteed by volatile write/read // of constants table.)	WITHOUT_CLASSIFICATION	0.9999534342150784	WITHOUT_CLASSIFICATION	4.6565784921525934E-5	IMPLEMENTATION
// Java reflection does not allow retrieving constructors like methods	WITHOUT_CLASSIFICATION	0.8839817385993931	WITHOUT_CLASSIFICATION	0.1160182614006069	IMPLEMENTATION
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999015508025735	WITHOUT_CLASSIFICATION	9.844919742647375E-5	IMPLEMENTATION
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999015508025735	WITHOUT_CLASSIFICATION	9.844919742647375E-5	IMPLEMENTATION
// no matching ctor found	WITHOUT_CLASSIFICATION	0.9999494668606264	WITHOUT_CLASSIFICATION	5.053313937363001E-5	IMPLEMENTATION
// Create Ruby proxies for any input arguments that are not primitives.	WITHOUT_CLASSIFICATION	0.99991476840989	WITHOUT_CLASSIFICATION	8.523159011001043E-5	IMPLEMENTATION
// prepare a faster handle if handles are enabled and the method and class are public	WITHOUT_CLASSIFICATION	0.9999818813654361	WITHOUT_CLASSIFICATION	1.8118634563906187E-5	IMPLEMENTATION
// must be a public method	WITHOUT_CLASSIFICATION	0.9999570962478886	WITHOUT_CLASSIFICATION	4.290375211133706E-5	IMPLEMENTATION
// must be a public class	WITHOUT_CLASSIFICATION	0.9999954874850829	WITHOUT_CLASSIFICATION	4.5125149171082536E-6	IMPLEMENTATION
// must have been loaded from our known classloader hierarchy	WITHOUT_CLASSIFICATION	0.999987095863422	WITHOUT_CLASSIFICATION	1.2904136577825293E-5	IMPLEMENTATION
// Special classes like Collections.EMPTY_LIST are inner classes that are private but  // implement public interfaces.  Their methods are all public methods for the public  // interface.  Let these public methods execute via setAccessible(true). 	WITHOUT_CLASSIFICATION	0.999777144461444	WITHOUT_CLASSIFICATION	2.2285553855595124E-4	IMPLEMENTATION
// search through all declared methods to find a closest match	WITHOUT_CLASSIFICATION	0.9999808502038692	WITHOUT_CLASSIFICATION	1.9149796130847264E-5	IMPLEMENTATION
// no matching method found	WITHOUT_CLASSIFICATION	0.9998230849856167	WITHOUT_CLASSIFICATION	1.7691501438331844E-4	IMPLEMENTATION
// this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.9999990058002316	WITHOUT_CLASSIFICATION	9.94199768391202E-7	IMPLEMENTATION
/*         * First we need to register the JRuby engine.         */	WITHOUT_CLASSIFICATION	0.9999662634660336	WITHOUT_CLASSIFICATION	3.373653396644237E-5	IMPLEMENTATION
/*         * Now we create a new BSFManager.         */	WITHOUT_CLASSIFICATION	0.9999868483363138	WITHOUT_CLASSIFICATION	1.315166368627736E-5	IMPLEMENTATION
/*         * Initialize a simple Frame.          */	WITHOUT_CLASSIFICATION	0.9999966402179056	WITHOUT_CLASSIFICATION	3.3597820945002217E-6	IMPLEMENTATION
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9997921865822822	WITHOUT_CLASSIFICATION	2.078134177178416E-4	IMPLEMENTATION
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9997921865822822	WITHOUT_CLASSIFICATION	2.078134177178416E-4	IMPLEMENTATION
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999583952058438	WITHOUT_CLASSIFICATION	4.160479415616947E-5	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.999606655113441	WITHOUT_CLASSIFICATION	3.9334488655892204E-4	IMPLEMENTATION
// // this test really means, that this is a ruby-defined subclass of a java class //	WITHOUT_CLASSIFICATION	0.9999990058002316	WITHOUT_CLASSIFICATION	9.94199768391202E-7	IMPLEMENTATION
// for our purposes, Accessibles are also Members, and vice-versa, // so we'll include Member methods here.	WITHOUT_CLASSIFICATION	0.9999961188363204	WITHOUT_CLASSIFICATION	3.881163679464898E-6	IMPLEMENTATION
/*             * Declare those components as beans in BSF. Then it will be             * possible to access those components in Ruby as global             * variables ($frame, $menubar, ...)             */	WITHOUT_CLASSIFICATION	0.9999999988368954	WITHOUT_CLASSIFICATION	1.1631046680561489E-9	IMPLEMENTATION
/*              * Execute a Ruby script (add the menubar to the frame).             */	WITHOUT_CLASSIFICATION	0.9999981749031761	WITHOUT_CLASSIFICATION	1.8250968237943163E-6	IMPLEMENTATION
/*                     * Execute Ruby statements.                     */	WITHOUT_CLASSIFICATION	0.9999954191102667	WITHOUT_CLASSIFICATION	4.5808897332608095E-6	IMPLEMENTATION
/*                     * Evaluates a Ruby expression and display the result.                     */	WITHOUT_CLASSIFICATION	0.9999975067894717	WITHOUT_CLASSIFICATION	2.493210528249259E-6	IMPLEMENTATION
// Populate values for the parameter names	WITHOUT_CLASSIFICATION	0.9999996052150103	WITHOUT_CLASSIFICATION	3.9478498969705235E-7	IMPLEMENTATION
/* package scope */	WITHOUT_CLASSIFICATION	0.9996136260911263	WITHOUT_CLASSIFICATION	3.863739088738345E-4	IMPLEMENTATION
// This point is only reached if there was an exception handler // installed.	WITHOUT_CLASSIFICATION	0.9999994883444695	WITHOUT_CLASSIFICATION	5.116555304751537E-7	IMPLEMENTATION
// // Ruby-level methods //	WITHOUT_CLASSIFICATION	0.999936032386223	WITHOUT_CLASSIFICATION	6.396761377694938E-5	IMPLEMENTATION
// need names ordered for key generation later	WITHOUT_CLASSIFICATION	0.9996438255495933	WITHOUT_CLASSIFICATION	3.5617445040671427E-4	IMPLEMENTATION
// we only collect methods and interfaces for  // user-defined proxy classes.	WITHOUT_CLASSIFICATION	0.9999913868418585	WITHOUT_CLASSIFICATION	8.613158141493397E-6	IMPLEMENTATION
// get JavaClass if this is the new proxy class; verify it // matches if this is a superclass proxy.	WITHOUT_CLASSIFICATION	0.9999974628898927	WITHOUT_CLASSIFICATION	2.5371101073020796E-6	IMPLEMENTATION
// get any included interfaces	WITHOUT_CLASSIFICATION	0.9999733422025229	WITHOUT_CLASSIFICATION	2.6657797477157033E-5	IMPLEMENTATION
// lock in the overridden methods for the new class, and any as-yet // uninstantiated ancestor class.	WITHOUT_CLASSIFICATION	0.9999983358205208	WITHOUT_CLASSIFICATION	1.6641794792396822E-6	IMPLEMENTATION
// statically initialized below	WITHOUT_CLASSIFICATION	0.9999641970211598	WITHOUT_CLASSIFICATION	3.580297884011485E-5	IMPLEMENTATION
// finish class initializer	WITHOUT_CLASSIFICATION	0.9996559857465515	WITHOUT_CLASSIFICATION	3.4401425344860413E-4	IMPLEMENTATION
// trigger class initialization for the class	WITHOUT_CLASSIFICATION	0.9999130831742791	WITHOUT_CLASSIFICATION	8.691682572086911E-5	IMPLEMENTATION
// should not happen!	WITHOUT_CLASSIFICATION	0.996653210869535	WITHOUT_CLASSIFICATION	0.0033467891304650886	IMPLEMENTATION
// start class	WITHOUT_CLASSIFICATION	0.9999591934020666	WITHOUT_CLASSIFICATION	4.0806597933418356E-5	IMPLEMENTATION
// make getter for handler	WITHOUT_CLASSIFICATION	0.9998919576668377	WITHOUT_CLASSIFICATION	1.0804233316228558E-4	IMPLEMENTATION
// make getter for proxy class	WITHOUT_CLASSIFICATION	0.999982104388894	WITHOUT_CLASSIFICATION	1.7895611105985223E-5	IMPLEMENTATION
// add (potentially) overridden names to the key. // TODO: see note above re: optimizations	WITHOUT_CLASSIFICATION	0.9223018972303374	IMPLEMENTATION	0.0776981027696626	WITHOUT_CLASSIFICATION
// We generate all constructors and let some fail during invocation later	WITHOUT_CLASSIFICATION	0.999876296327997	WITHOUT_CLASSIFICATION	1.2370367200297062E-4	IMPLEMENTATION
// create static private method field	WITHOUT_CLASSIFICATION	0.9999230709321574	WITHOUT_CLASSIFICATION	7.692906784259356E-5	IMPLEMENTATION
// load static empty array	WITHOUT_CLASSIFICATION	0.9999874096119097	WITHOUT_CLASSIFICATION	1.259038809030422E-5	IMPLEMENTATION
// box arguments	WITHOUT_CLASSIFICATION	0.9998798229986819	WITHOUT_CLASSIFICATION	1.2017700131811319E-4	IMPLEMENTATION
// this is a simple rethrow handler	WITHOUT_CLASSIFICATION	0.9999588118020462	WITHOUT_CLASSIFICATION	4.1188197953762756E-5	IMPLEMENTATION
// // construct the super-proxy method //	WITHOUT_CLASSIFICATION	0.9997150514006161	WITHOUT_CLASSIFICATION	2.8494859938387834E-4	IMPLEMENTATION
// do a void return	WITHOUT_CLASSIFICATION	0.9999101118630681	WITHOUT_CLASSIFICATION	8.98881369319451E-5	IMPLEMENTATION
// // utility methods //	WITHOUT_CLASSIFICATION	0.9999571513816252	WITHOUT_CLASSIFICATION	4.284861837474116E-5	IMPLEMENTATION
// Is there a supplied proc argument or do we assume a block was // supplied	WITHOUT_CLASSIFICATION	0.9999918453789014	WITHOUT_CLASSIFICATION	8.154621098675497E-6	IMPLEMENTATION
// store call information so method_missing impl can use it	WITHOUT_CLASSIFICATION	0.9998452973947624	WITHOUT_CLASSIFICATION	1.547026052376724E-4	IMPLEMENTATION
// use the same logic as in EvaluationState	WITHOUT_CLASSIFICATION	0.9999782131166809	WITHOUT_CLASSIFICATION	2.1786883319179653E-5	IMPLEMENTATION
// no opt, no rest, exact match	WITHOUT_CLASSIFICATION	0.9999718206682597	WITHOUT_CLASSIFICATION	2.8179331740184387E-5	IMPLEMENTATION
// only rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999041401627274	WITHOUT_CLASSIFICATION	9.585983727252925E-5	IMPLEMENTATION
// opt but no rest, must be at least required and no more than required + opt	WITHOUT_CLASSIFICATION	0.9996469830168697	WITHOUT_CLASSIFICATION	3.530169831302697E-4	IMPLEMENTATION
// opt and rest, must be at least required	WITHOUT_CLASSIFICATION	0.9998436507106072	WITHOUT_CLASSIFICATION	1.5634928939281493E-4	IMPLEMENTATION
// No block from a nil proc	WITHOUT_CLASSIFICATION	0.9999954802209542	WITHOUT_CLASSIFICATION	4.51977904580798E-6	IMPLEMENTATION
// If not already a proc then we should try and make it one.	WITHOUT_CLASSIFICATION	0.9930510565007392	WITHOUT_CLASSIFICATION	0.006948943499260732	IMPLEMENTATION
// The current block is already associated with proc.  No need to create a new one	WITHOUT_CLASSIFICATION	0.9999240806046082	WITHOUT_CLASSIFICATION	7.59193953917075E-5	IMPLEMENTATION
// Has the method that is calling super received a block argument	WITHOUT_CLASSIFICATION	0.9998265274555385	WITHOUT_CLASSIFICATION	1.7347254446150229E-4	IMPLEMENTATION
/* NUL */	WITHOUT_CLASSIFICATION	0.9999987745645751	WITHOUT_CLASSIFICATION	1.225435424934396E-6	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9998109662416466	WITHOUT_CLASSIFICATION	1.890337583535429E-4	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999638655901117	WITHOUT_CLASSIFICATION	3.613440988818809E-5	IMPLEMENTATION
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999909261279213	WITHOUT_CLASSIFICATION	9.073872078647343E-6	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.999487919529	WITHOUT_CLASSIFICATION	5.120804710000054E-4	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9996615266859028	WITHOUT_CLASSIFICATION	3.3847331409717497E-4	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9996615266859028	WITHOUT_CLASSIFICATION	3.3847331409717497E-4	IMPLEMENTATION
// classes are directly in the hierarchy, so no special logic is necessary for implementer	WITHOUT_CLASSIFICATION	0.9999983432345195	WITHOUT_CLASSIFICATION	1.6567654803922992E-6	IMPLEMENTATION
// must be power of 2 // must be power of 2	WITHOUT_CLASSIFICATION	0.9999680397238215	WITHOUT_CLASSIFICATION	3.196027617842523E-5	IMPLEMENTATION
// Find power-of-two sizes best matching arguments	WITHOUT_CLASSIFICATION	0.9999080092885227	WITHOUT_CLASSIFICATION	9.199071147731259E-5	IMPLEMENTATION
// note segmentShift differs from ConcurrentHashMap's calculation due to // issues with System.identityHashCode (upper n bits always 0, at least  // under Java 1.6 / WinXP)	WITHOUT_CLASSIFICATION	0.9999992334235669	WITHOUT_CLASSIFICATION	7.6657643317498E-7	IMPLEMENTATION
//      System.err.println("***ObjectProxyCache " + id + " started at "+ new java.util.Date());	WITHOUT_CLASSIFICATION	0.9998413589351555	WITHOUT_CLASSIFICATION	1.5864106484450878E-4	IMPLEMENTATION
//    protected void finalize() throws Throwable { //        System.err.println("***ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); //    }	WITHOUT_CLASSIFICATION	0.999784888720127	WITHOUT_CLASSIFICATION	2.1511127987296918E-4	IMPLEMENTATION
// EntryRefs include hash with key to facilitate lookup by Segment#expunge // after ref is removed from ReferenceQueue	WITHOUT_CLASSIFICATION	0.999752654267323	WITHOUT_CLASSIFICATION	2.4734573267703053E-4	IMPLEMENTATION
// Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather // makes it a final field.  The theory is that doing so should force a happens-before // relationship WRT the WeakReference constructor, guaranteeing that the key will be // visibile to other threads (unless it's been GC'ed).  See JLS 17.5 (final fields) and // 17.4.5 (Happens-before order) to confirm or refute my reasoning here.	WITHOUT_CLASSIFICATION	0.9999977665652844	WITHOUT_CLASSIFICATION	2.2334347155695783E-6	IMPLEMENTATION
// references to the Java object and its proxy will either both be // weak or both be soft, since the proxy contains a strong reference // to the object, so it wouldn't make sense for the reference types // to differ.	WITHOUT_CLASSIFICATION	0.9999999893193267	WITHOUT_CLASSIFICATION	1.0680673436982932E-8	IMPLEMENTATION
// ctor used by remove/rehash	WITHOUT_CLASSIFICATION	0.9999737565873723	WITHOUT_CLASSIFICATION	2.6243412627709147E-5	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999899432164441	WITHOUT_CLASSIFICATION	1.0056783555933248E-5	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999899432164441	WITHOUT_CLASSIFICATION	1.0056783555933248E-5	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999899432164441	WITHOUT_CLASSIFICATION	1.0056783555933248E-5	IMPLEMENTATION
// note that we'll potentially see the refs for both the java object and // proxy -- whichever we see first will cause the entry to be removed; // the other will not match an entry and will be ignored.	WITHOUT_CLASSIFICATION	0.9999900047949003	WITHOUT_CLASSIFICATION	9.99520509960486E-6	IMPLEMENTATION
// temp method to verify tableSize value // must be called under lock	WITHOUT_CLASSIFICATION	0.9999939948648592	WITHOUT_CLASSIFICATION	6.005135140891392E-6	IMPLEMENTATION
// Single node in list	WITHOUT_CLASSIFICATION	0.9999856510417433	WITHOUT_CLASSIFICATION	1.4348958256709931E-5	IMPLEMENTATION
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9997831645157308	WITHOUT_CLASSIFICATION	2.1683548426921738E-4	IMPLEMENTATION
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9997831645157308	WITHOUT_CLASSIFICATION	2.1683548426921738E-4	IMPLEMENTATION
// entry exists, proxy has been gc'ed. replace entry.	WITHOUT_CLASSIFICATION	0.9996371499306419	WITHOUT_CLASSIFICATION	3.6285006935810087E-4	IMPLEMENTATION
// Where we get new positions from.	WITHOUT_CLASSIFICATION	0.9993434964900869	WITHOUT_CLASSIFICATION	6.565035099131022E-4	IMPLEMENTATION
// Start of string ([, (, {, <, ', ", \n) 	WITHOUT_CLASSIFICATION	0.9999991778012958	WITHOUT_CLASSIFICATION	8.221987042091578E-7	IMPLEMENTATION
// Number of newlines read from the reader	WITHOUT_CLASSIFICATION	0.99999767632629	WITHOUT_CLASSIFICATION	2.323673709898121E-6	IMPLEMENTATION
// How many bytes into the source are we?	WITHOUT_CLASSIFICATION	0.9999969550802756	WITHOUT_CLASSIFICATION	3.044919724489653E-6	IMPLEMENTATION
// For 'list' and only populated if list is not null.	WITHOUT_CLASSIFICATION	0.999827347144989	WITHOUT_CLASSIFICATION	1.726528550109594E-4	IMPLEMENTATION
// Last full line read.	WITHOUT_CLASSIFICATION	0.9999195855512527	WITHOUT_CLASSIFICATION	8.041444874722942E-5	IMPLEMENTATION
// Save sourceLine for error reporting to display line where error occurred	WITHOUT_CLASSIFICATION	0.9996553587435371	WITHOUT_CLASSIFICATION	3.446412564629696E-4	IMPLEMENTATION
// Get rest of line. lineBuffer filled as side-effect...	WITHOUT_CLASSIFICATION	0.9999901854655601	WITHOUT_CLASSIFICATION	9.81453443990203E-6	IMPLEMENTATION
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999217112446072	WITHOUT_CLASSIFICATION	7.828875539278688E-5	IMPLEMENTATION
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999217112446072	WITHOUT_CLASSIFICATION	7.828875539278688E-5	IMPLEMENTATION
// End of string (], ), }, >, ', ", \0)	WITHOUT_CLASSIFICATION	0.9999990284853909	WITHOUT_CLASSIFICATION	9.715146091279588E-7	IMPLEMENTATION
// How many strings are nested in the current string term	WITHOUT_CLASSIFICATION	0.999997886369856	WITHOUT_CLASSIFICATION	2.1136301440011355E-6	IMPLEMENTATION
// Single-quote fast path	WITHOUT_CLASSIFICATION	0.9999029526134309	WITHOUT_CLASSIFICATION	9.704738656918941E-5	IMPLEMENTATION
// Regexp engine 'java'	WITHOUT_CLASSIFICATION	0.9999546673934466	WITHOUT_CLASSIFICATION	4.533260655340207E-5	IMPLEMENTATION
// Was a goto in original ruby lexer	WITHOUT_CLASSIFICATION	0.9999848812507929	WITHOUT_CLASSIFICATION	1.5118749207150819E-5	IMPLEMENTATION
/* just ignore */	WITHOUT_CLASSIFICATION	0.9999917587207672	WITHOUT_CLASSIFICATION	8.241279232812046E-6	IMPLEMENTATION
/* octal constant */	WITHOUT_CLASSIFICATION	0.9998603525977061	WITHOUT_CLASSIFICATION	1.396474022939267E-4	IMPLEMENTATION
/* hex constant */	WITHOUT_CLASSIFICATION	0.9998657839017929	WITHOUT_CLASSIFICATION	1.342160982070363E-4	IMPLEMENTATION
// PUSH(1)	WITHOUT_CLASSIFICATION	0.9999935752659732	WITHOUT_CLASSIFICATION	6.424734026853922E-6	IMPLEMENTATION
// POP	WITHOUT_CLASSIFICATION	0.9999935752659732	WITHOUT_CLASSIFICATION	6.424734026853922E-6	IMPLEMENTATION
// PUSH(0).  If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.	WITHOUT_CLASSIFICATION	0.9999770066950161	WITHOUT_CLASSIFICATION	2.299330498394717E-5	IMPLEMENTATION
// LEXPOP	WITHOUT_CLASSIFICATION	0.9999935752659732	WITHOUT_CLASSIFICATION	6.424734026853922E-6	IMPLEMENTATION
// SET_P	WITHOUT_CLASSIFICATION	0.9999935752659732	WITHOUT_CLASSIFICATION	6.424734026853922E-6	IMPLEMENTATION
// Marker delimiting heredoc boundary	WITHOUT_CLASSIFICATION	0.9999301847105643	WITHOUT_CLASSIFICATION	6.981528943575117E-5	IMPLEMENTATION
// Found end marker for this heredoc	WITHOUT_CLASSIFICATION	0.999451495811443	WITHOUT_CLASSIFICATION	5.485041885570139E-4	IMPLEMENTATION
// Put back lastLine for any elements past start of heredoc marker	WITHOUT_CLASSIFICATION	0.9999956437696551	WITHOUT_CLASSIFICATION	4.35623034481462E-6	IMPLEMENTATION
// Last token read via yylex().	WITHOUT_CLASSIFICATION	0.9999851781589466	WITHOUT_CLASSIFICATION	1.4821841053361046E-5	IMPLEMENTATION
// Value of last token which had a value associated with it.	WITHOUT_CLASSIFICATION	0.9999979669241174	WITHOUT_CLASSIFICATION	2.0330758827323447E-6	IMPLEMENTATION
// Stream of data that yylex() examines.	WITHOUT_CLASSIFICATION	0.9999850233360223	WITHOUT_CLASSIFICATION	1.4976663977531192E-5	IMPLEMENTATION
// Used for tiny smidgen of grammar in lexer (see setParserSupport())	WITHOUT_CLASSIFICATION	0.9999998230371936	WITHOUT_CLASSIFICATION	1.7696280643409182E-7	IMPLEMENTATION
// Give a name to a value.  Enebo: This should be used more.	WITHOUT_CLASSIFICATION	0.9999056455947442	WITHOUT_CLASSIFICATION	9.435440525582831E-5	IMPLEMENTATION
// When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').	WITHOUT_CLASSIFICATION	0.9991981252520089	WITHOUT_CLASSIFICATION	8.018747479910052E-4	IMPLEMENTATION
// Are we lexing Ruby 1.8 or 1.9+ syntax	WITHOUT_CLASSIFICATION	0.99990606114802	WITHOUT_CLASSIFICATION	9.393885198001628E-5	IMPLEMENTATION
// Count of nested parentheses (1.9 only)	WITHOUT_CLASSIFICATION	0.9999065219367671	WITHOUT_CLASSIFICATION	9.347806323288842E-5	IMPLEMENTATION
// 1.9 only	WITHOUT_CLASSIFICATION	0.9998445021218483	WITHOUT_CLASSIFICATION	1.554978781518113E-4	IMPLEMENTATION
// Short-hand (e.g. %{,%.,%!,... versus %Q{).	WITHOUT_CLASSIFICATION	0.9999568085477172	WITHOUT_CLASSIFICATION	4.3191452282938295E-5	IMPLEMENTATION
// Long-hand (e.g. %Q{}).	WITHOUT_CLASSIFICATION	0.9999702459020111	WITHOUT_CLASSIFICATION	2.97540979888723E-5	IMPLEMENTATION
/* no mb || ismbchar(term)*/	WITHOUT_CLASSIFICATION	0.9976204170575849	WITHOUT_CLASSIFICATION	0.0023795829424151198	IMPLEMENTATION
/*     * Not normally used, but is left in here since it can be useful in debugging     * grammar and lexing problems.     *     */	WITHOUT_CLASSIFICATION	0.999999978631374	WITHOUT_CLASSIFICATION	2.1368625954603885E-8	IMPLEMENTATION
// DEBUGGING HELP 	WITHOUT_CLASSIFICATION	0.9996616624932977	WITHOUT_CLASSIFICATION	3.383375067022552E-4	IMPLEMENTATION
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999987745645751	WITHOUT_CLASSIFICATION	1.225435424934396E-6	IMPLEMENTATION
/* end of script. */	WITHOUT_CLASSIFICATION	0.9998709382830561	WITHOUT_CLASSIFICATION	1.2906171694394806E-4	IMPLEMENTATION
/* white spaces */	WITHOUT_CLASSIFICATION	0.9999589360817456	WITHOUT_CLASSIFICATION	4.106391825430248E-5	IMPLEMENTATION
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999987745645751	WITHOUT_CLASSIFICATION	1.225435424934396E-6	IMPLEMENTATION
/* it's a comment */	WITHOUT_CLASSIFICATION	0.9999244268006199	WITHOUT_CLASSIFICATION	7.557319938021182E-5	IMPLEMENTATION
// Replace a string of newlines with a single one	WITHOUT_CLASSIFICATION	0.9999974607904836	WITHOUT_CLASSIFICATION	2.5392095164704234E-6	IMPLEMENTATION
/* $\: output record separator */	WITHOUT_CLASSIFICATION	0.9999906620257785	WITHOUT_CLASSIFICATION	9.337974221536577E-6	IMPLEMENTATION
// EOF (ENEBO: After default?	WITHOUT_CLASSIFICATION	0.9999422347070771	WITHOUT_CLASSIFICATION	5.7765292922864316E-5	IMPLEMENTATION
// documentation nodes	WITHOUT_CLASSIFICATION	0.9999441120894865	WITHOUT_CLASSIFICATION	5.588791051348142E-5	IMPLEMENTATION
// In case last next was the newline.	WITHOUT_CLASSIFICATION	0.9999721678735168	WITHOUT_CLASSIFICATION	2.7832126483159674E-5	IMPLEMENTATION
// Just a plain bang	WITHOUT_CLASSIFICATION	0.9998032497444885	WITHOUT_CLASSIFICATION	1.9675025551139404E-4	IMPLEMENTATION
/* $_: last read line string */	WITHOUT_CLASSIFICATION	0.9999999153623347	WITHOUT_CLASSIFICATION	8.463766536049302E-8	IMPLEMENTATION
/* $~: match-data */	WITHOUT_CLASSIFICATION	0.9999354232136133	WITHOUT_CLASSIFICATION	6.457678638666016E-5	IMPLEMENTATION
/* $*: argv */	WITHOUT_CLASSIFICATION	0.9999354232136133	WITHOUT_CLASSIFICATION	6.457678638666016E-5	IMPLEMENTATION
/* $$: pid */	WITHOUT_CLASSIFICATION	0.9999356960276677	WITHOUT_CLASSIFICATION	6.430397233219737E-5	IMPLEMENTATION
/* $?: last status */	WITHOUT_CLASSIFICATION	0.9999866916539553	WITHOUT_CLASSIFICATION	1.3308346044862575E-5	IMPLEMENTATION
/* $!: error string */	WITHOUT_CLASSIFICATION	0.9999991903357247	WITHOUT_CLASSIFICATION	8.096642752783997E-7	IMPLEMENTATION
/* $@: error position */	WITHOUT_CLASSIFICATION	0.9999756683778791	WITHOUT_CLASSIFICATION	2.4331622120833434E-5	IMPLEMENTATION
/* $/: input record separator */	WITHOUT_CLASSIFICATION	0.9999889610725484	WITHOUT_CLASSIFICATION	1.1038927451605757E-5	IMPLEMENTATION
/* $;: field separator */	WITHOUT_CLASSIFICATION	0.999991259788893	WITHOUT_CLASSIFICATION	8.740211107043013E-6	IMPLEMENTATION
/* $,: output field separator */	WITHOUT_CLASSIFICATION	0.9999918843814998	WITHOUT_CLASSIFICATION	8.115618500264045E-6	IMPLEMENTATION
/* $.: last read line number */	WITHOUT_CLASSIFICATION	0.9999951740046387	WITHOUT_CLASSIFICATION	4.8259953613202924E-6	IMPLEMENTATION
/* $=: ignorecase */	WITHOUT_CLASSIFICATION	0.9999354232136133	WITHOUT_CLASSIFICATION	6.457678638666016E-5	IMPLEMENTATION
/* $:: load path */	WITHOUT_CLASSIFICATION	0.999882587478287	WITHOUT_CLASSIFICATION	1.1741252171310575E-4	IMPLEMENTATION
/* $<: reading filename */	WITHOUT_CLASSIFICATION	0.9999986014382625	WITHOUT_CLASSIFICATION	1.3985617375000104E-6	IMPLEMENTATION
/* $": already loaded files */	WITHOUT_CLASSIFICATION	0.9999985196231005	WITHOUT_CLASSIFICATION	1.4803768995766863E-6	IMPLEMENTATION
/* $&: last match */	WITHOUT_CLASSIFICATION	0.9999744488433981	WITHOUT_CLASSIFICATION	2.5551156601758142E-5	IMPLEMENTATION
/* $`: string before last match */	WITHOUT_CLASSIFICATION	0.9999999012967146	WITHOUT_CLASSIFICATION	9.870328534424573E-8	IMPLEMENTATION
/* $': string after last match */	WITHOUT_CLASSIFICATION	0.9999999234652097	WITHOUT_CLASSIFICATION	7.653479023119182E-8	IMPLEMENTATION
// methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop	WITHOUT_CLASSIFICATION	0.9999995404087942	WITHOUT_CLASSIFICATION	4.595912058562429E-7	IMPLEMENTATION
/* See if it is a reserved word.  */	WITHOUT_CLASSIFICATION	0.9999973765964669	WITHOUT_CLASSIFICATION	2.623403533116046E-6	IMPLEMENTATION
// enum lex_state	WITHOUT_CLASSIFICATION	0.9990121336440116	WITHOUT_CLASSIFICATION	9.878663559883837E-4	IMPLEMENTATION
// block (primary)	WITHOUT_CLASSIFICATION	0.9997296042123485	WITHOUT_CLASSIFICATION	2.703957876515993E-4	IMPLEMENTATION
// block (expr)	WITHOUT_CLASSIFICATION	0.9997296042123485	WITHOUT_CLASSIFICATION	2.703957876515993E-4	IMPLEMENTATION
// hash	WITHOUT_CLASSIFICATION	0.9999937104887255	WITHOUT_CLASSIFICATION	6.289511274506138E-6	IMPLEMENTATION
// ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.	WITHOUT_CLASSIFICATION	0.999962460301276	WITHOUT_CLASSIFICATION	3.7539698723916E-5	IMPLEMENTATION
// FIXME: peek('u') utf8 stuff for 1.9	WITHOUT_CLASSIFICATION	0.9740868475531537	WITHOUT_CLASSIFICATION	0.02591315244684628	IMPLEMENTATION
// We don't append '+' since Java number parser gets confused	WITHOUT_CLASSIFICATION	0.9999980757648371	WITHOUT_CLASSIFICATION	1.924235162847269E-6	IMPLEMENTATION
//  hexadecimal	WITHOUT_CLASSIFICATION	0.9996372903370396	WITHOUT_CLASSIFICATION	3.6270966296037303E-4	IMPLEMENTATION
// binary	WITHOUT_CLASSIFICATION	0.9999956044009995	WITHOUT_CLASSIFICATION	4.395599000544553E-6	IMPLEMENTATION
// decimal	WITHOUT_CLASSIFICATION	0.9999951585036821	WITHOUT_CLASSIFICATION	4.841496317783008E-6	IMPLEMENTATION
//Octal	WITHOUT_CLASSIFICATION	0.999976214108194	WITHOUT_CLASSIFICATION	2.378589180606253E-5	IMPLEMENTATION
//  '_' in number just ignored	WITHOUT_CLASSIFICATION	0.9999748848313939	WITHOUT_CLASSIFICATION	2.5115168606256848E-5	IMPLEMENTATION
// backslash	WITHOUT_CLASSIFICATION	0.999670025388597	WITHOUT_CLASSIFICATION	3.299746114030377E-4	IMPLEMENTATION
// newline	WITHOUT_CLASSIFICATION	0.9999938384697771	WITHOUT_CLASSIFICATION	6.16153022290555E-6	IMPLEMENTATION
// horizontal tab	WITHOUT_CLASSIFICATION	0.9987666007103146	WITHOUT_CLASSIFICATION	0.0012333992896852832	IMPLEMENTATION
// form feed	WITHOUT_CLASSIFICATION	0.9996389808942734	WITHOUT_CLASSIFICATION	3.610191057265994E-4	IMPLEMENTATION
// vertical tab	WITHOUT_CLASSIFICATION	0.9985692997250711	WITHOUT_CLASSIFICATION	0.0014307002749288531	IMPLEMENTATION
// alarm(bell)	WITHOUT_CLASSIFICATION	0.9996615266859028	WITHOUT_CLASSIFICATION	3.3847331409717497E-4	IMPLEMENTATION
// escape	WITHOUT_CLASSIFICATION	0.999998101708668	WITHOUT_CLASSIFICATION	1.898291331990698E-6	IMPLEMENTATION
// hex constant	WITHOUT_CLASSIFICATION	0.9992967263466851	WITHOUT_CLASSIFICATION	7.032736533149185E-4	IMPLEMENTATION
//char hexValue = scanHex(2);	WITHOUT_CLASSIFICATION	0.9997347575531905	WITHOUT_CLASSIFICATION	2.6524244680951566E-4	IMPLEMENTATION
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999971325984417	WITHOUT_CLASSIFICATION	2.867401558262129E-6	IMPLEMENTATION
// space	WITHOUT_CLASSIFICATION	0.999998247851985	WITHOUT_CLASSIFICATION	1.752148015097098E-6	IMPLEMENTATION
// Where we started this marker match	WITHOUT_CLASSIFICATION	0.9995909336851686	WITHOUT_CLASSIFICATION	4.0906631483143043E-4	IMPLEMENTATION
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999992702258531	WITHOUT_CLASSIFICATION	7.2977414692883E-7	IMPLEMENTATION
// We use offset here to keep track of extra newlines for windows	WITHOUT_CLASSIFICATION	0.9999875225526034	WITHOUT_CLASSIFICATION	1.2477447396573125E-5	IMPLEMENTATION
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999971325984417	WITHOUT_CLASSIFICATION	2.867401558262129E-6	IMPLEMENTATION
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.531271610436227	IMPLEMENTATION	0.46872838956377294	WITHOUT_CLASSIFICATION
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.531271610436227	IMPLEMENTATION	0.46872838956377294	WITHOUT_CLASSIFICATION
// Where we get our newest char's	WITHOUT_CLASSIFICATION	0.999954933182839	WITHOUT_CLASSIFICATION	4.506681716095102E-5	IMPLEMENTATION
// Our readback/pushback buffer.	WITHOUT_CLASSIFICATION	0.999932971412631	WITHOUT_CLASSIFICATION	6.70285873689449E-5	IMPLEMENTATION
// index of last character in pushback buffer	WITHOUT_CLASSIFICATION	0.9999888806893682	WITHOUT_CLASSIFICATION	1.1119310631725857E-5	IMPLEMENTATION
// Character read before previous read	WITHOUT_CLASSIFICATION	0.9999863976307659	WITHOUT_CLASSIFICATION	1.3602369234012132E-5	IMPLEMENTATION
// keep value of twoAgo around so we can restore after we unread	WITHOUT_CLASSIFICATION	0.9999966738332322	WITHOUT_CLASSIFICATION	3.3261667677319015E-6	IMPLEMENTATION
// NetProtocolBufferedIOLibrary	WITHOUT_CLASSIFICATION	0.999918508280422	WITHOUT_CLASSIFICATION	8.14917195780652E-5	IMPLEMENTATION
// BigDecimalLibrary	WITHOUT_CLASSIFICATION	0.9996615266859028	WITHOUT_CLASSIFICATION	3.3847331409717497E-4	IMPLEMENTATION
// TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. // We did it here for now	WITHOUT_CLASSIFICATION	0.9774829855167446	IMPLEMENTATION	0.02251701448325538	WITHOUT_CLASSIFICATION
// Ruby's designation for some platforms, minus version numbers in some cases	WITHOUT_CLASSIFICATION	0.9999915535861149	WITHOUT_CLASSIFICATION	8.446413885013923E-6	IMPLEMENTATION
// that's what JDK5 produces on Windows Vista	WITHOUT_CLASSIFICATION	0.9973590420988735	WITHOUT_CLASSIFICATION	0.0026409579011265976	IMPLEMENTATION
// Rubygems is too specific on host cpu so until we have real need lets default to universal //setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));	WITHOUT_CLASSIFICATION	0.9997751751450563	WITHOUT_CLASSIFICATION	2.2482485494358992E-4	IMPLEMENTATION
// Our shell scripts pass in non-canonicalized paths, but even if we didn't // anyone who did would become unhappy because Ruby apps expect no relative // operators in the pathname (rubygems, for example).	WITHOUT_CLASSIFICATION	0.9999995471957953	WITHOUT_CLASSIFICATION	4.5280420465351184E-7	IMPLEMENTATION
// this set is only for darwin	WITHOUT_CLASSIFICATION	0.9999900430318942	WITHOUT_CLASSIFICATION	9.956968105794009E-6	IMPLEMENTATION
// DigestLibrary	WITHOUT_CLASSIFICATION	0.9996615266859028	WITHOUT_CLASSIFICATION	3.3847331409717497E-4	IMPLEMENTATION
// all errors, just info; do not prevent loading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9943439554221322	WITHOUT_CLASSIFICATION	0.0056560445778677994	IMPLEMENTATION
// all errors, just info; do not prevent unloading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9938016190910385	WITHOUT_CLASSIFICATION	0.006198380908961533	IMPLEMENTATION
// do nothing, return dummy version below	WITHOUT_CLASSIFICATION	0.9999827958458125	WITHOUT_CLASSIFICATION	1.7204154187526675E-5	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
// line 329	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9997159916686652	WITHOUT_CLASSIFICATION	2.8400833133486773E-4	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999475036042006	WITHOUT_CLASSIFICATION	5.2496395799344166E-5	IMPLEMENTATION
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9998584473578936	WITHOUT_CLASSIFICATION	1.415526421064025E-4	IMPLEMENTATION
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999536202760542	WITHOUT_CLASSIFICATION	4.637972394586269E-5	IMPLEMENTATION
// shift to yyN	WITHOUT_CLASSIFICATION	0.9997167367502899	WITHOUT_CLASSIFICATION	2.83263249710089E-4	IMPLEMENTATION
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9996820659944985	WITHOUT_CLASSIFICATION	3.179340055015187E-4	IMPLEMENTATION
// leave stack alone	WITHOUT_CLASSIFICATION	0.9998267986691264	WITHOUT_CLASSIFICATION	1.73201330873676E-4	IMPLEMENTATION
// line 271	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 274	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 303	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 311	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 314	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 317	WITHOUT_CLASSIFICATION	0.9994924764456221	WITHOUT_CLASSIFICATION	5.075235543778311E-4	IMPLEMENTATION
// line 332	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 338	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 341	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 344	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 351	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 358	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 367	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 372	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 378	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 382	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 407	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 411	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 414	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 417	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 420	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 426	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 434	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 443	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 446	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 452	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 457	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 464	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 467	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 470	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 479	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 484	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 486	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 492	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 498	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 501	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 504	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 507	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 510	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 519	WITHOUT_CLASSIFICATION	0.9994924331308643	WITHOUT_CLASSIFICATION	5.075668691356299E-4	IMPLEMENTATION
// line 525	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
// line 537	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 540	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 543	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 546	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 556	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 559	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 563	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 566	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 569	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 575	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 578	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 587	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 596	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 604	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 607	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 610	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 613	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 616	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 634	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 638	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 643	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 646	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 655	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 660	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 667	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 670	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 672	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 696	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 701	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 717	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 720	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 726	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 729	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 732	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 735	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 738	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 751	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 754	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 757	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 760	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 763	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 769	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 772	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 775	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 782	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 788	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 791	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 794	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 797	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 803	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 806	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 809	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 815	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 818	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 821	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 824	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 830	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 833	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 836	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 839	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 842	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 848	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 852	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 858	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 861	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 868	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 871	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 876	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 879	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 883	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 893	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 896	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 899	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 903	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 907	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 915	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 920	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 923	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 926	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 932	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 936	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 940	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 944	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 948	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 956	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 960	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 964	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 967	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 972	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 978	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 980	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 984	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 986	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 996	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1001	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1004	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1008	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1014	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1029	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1032	WITHOUT_CLASSIFICATION	0.9994932402602068	WITHOUT_CLASSIFICATION	5.067597397932425E-4	IMPLEMENTATION
// line 1034	WITHOUT_CLASSIFICATION	0.9994924612450062	WITHOUT_CLASSIFICATION	5.07538754993886E-4	IMPLEMENTATION
// line 1045	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1048	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1051	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1058	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1070	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1073	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1076	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1079	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1082	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1089	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1097	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1100	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1103	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1107	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1111	WITHOUT_CLASSIFICATION	0.999495486187381	WITHOUT_CLASSIFICATION	5.045138126189749E-4	IMPLEMENTATION
// line 1113	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1115	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1119	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1130	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1133	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1135	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1137	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1140	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1151	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1154	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1158	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1164	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1175	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1178	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1187	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1189	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1193	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1204	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1207	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1210	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1214	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1234	WITHOUT_CLASSIFICATION	0.9994970303901349	WITHOUT_CLASSIFICATION	5.029696098649868E-4	IMPLEMENTATION
// line 1239	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1243	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1247	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1251	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1263	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1269	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1280	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1283	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1290	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1296	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1299	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1302	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1309	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1313	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1315	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1320	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1328	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1335	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1348	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1352	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1358	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1374	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1381	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1387	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1392	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1415	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1431	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1434	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1440	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1443	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1453	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1456	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1462	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1465	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1470	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1477	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1480	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1485	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1488	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1496	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1502	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1510	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1513	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1516	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1533	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1550	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1553	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1556	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1565	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1568	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1571	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1574	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1577	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1587	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1595	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1598	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1600	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1609	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1623	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1626	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1629	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1632	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1638	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1641	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1644	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1649	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1655	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1658	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1661	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1672	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1677	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1687	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1694	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1705	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1708	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1725	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1733	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1742	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1745	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1749	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1757	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1769	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1772	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1775	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1784	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1808	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1814	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1818	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1822	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
/* force for args */	WITHOUT_CLASSIFICATION	0.9999024401340804	WITHOUT_CLASSIFICATION	9.755986591968842E-5	IMPLEMENTATION
/*XXX 0;*/	WITHOUT_CLASSIFICATION	0.9999768294267428	WITHOUT_CLASSIFICATION	2.317057325719563E-5	IMPLEMENTATION
/*                      $$ = $3;*/	WITHOUT_CLASSIFICATION	0.9907722720353893	WITHOUT_CLASSIFICATION	0.009227727964610728	IMPLEMENTATION
/*                  }*/	WITHOUT_CLASSIFICATION	0.9976544876695681	WITHOUT_CLASSIFICATION	0.00234551233043186	IMPLEMENTATION
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9997153038128707	WITHOUT_CLASSIFICATION	2.8469618712934444E-4	IMPLEMENTATION
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9756674207999468	WITHOUT_CLASSIFICATION	0.02433257920005318	IMPLEMENTATION
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9956164405781546	WITHOUT_CLASSIFICATION	0.0043835594218454245	IMPLEMENTATION
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9956164405781546	WITHOUT_CLASSIFICATION	0.0043835594218454245	IMPLEMENTATION
/* NOEX_PRIVATE for toplevel */	WITHOUT_CLASSIFICATION	0.9999921750084605	WITHOUT_CLASSIFICATION	7.824991539590044E-6	IMPLEMENTATION
/*mirko: check*/	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
/* Include pipes on multiple arg type*/	WITHOUT_CLASSIFICATION	0.8391541988323494	WITHOUT_CLASSIFICATION	0.16084580116765054	IMPLEMENTATION
// line 529	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9953317885411129	WITHOUT_CLASSIFICATION	0.004668211458887091	IMPLEMENTATION
/* XXX*/	WITHOUT_CLASSIFICATION	0.9994635669389685	WITHOUT_CLASSIFICATION	5.364330610314899E-4	IMPLEMENTATION
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999948239277738	WITHOUT_CLASSIFICATION	5.176072226139624E-6	IMPLEMENTATION
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9933408521048877	WITHOUT_CLASSIFICATION	0.006659147895112274	IMPLEMENTATION
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9953317885411129	WITHOUT_CLASSIFICATION	0.004668211458887091	IMPLEMENTATION
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9932377268830244	WITHOUT_CLASSIFICATION	0.006762273116975703	IMPLEMENTATION
// line 1827 "DefaultRubyParser.y"	WITHOUT_CLASSIFICATION	0.9998777558664487	WITHOUT_CLASSIFICATION	1.222441335513288E-4	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999373742910782	WITHOUT_CLASSIFICATION	6.262570892179178E-5	IMPLEMENTATION
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9996348689972929	WITHOUT_CLASSIFICATION	3.65131002707053E-4	IMPLEMENTATION
// line 7713 "-"	WITHOUT_CLASSIFICATION	0.9994951586046393	WITHOUT_CLASSIFICATION	5.048413953605903E-4	IMPLEMENTATION
// local scopes are argument scopes by default	WITHOUT_CLASSIFICATION	0.9999993754351539	WITHOUT_CLASSIFICATION	6.245648460909061E-7	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999978708408618	WITHOUT_CLASSIFICATION	2.129159138285095E-6	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999978708408618	WITHOUT_CLASSIFICATION	2.129159138285095E-6	IMPLEMENTATION
// We know this is a block scope because a local scope cannot be within a local scope // If topScope was itself it would have created a LocalAsgnNode above.	WITHOUT_CLASSIFICATION	0.9999991183859271	WITHOUT_CLASSIFICATION	8.816140728107174E-7	IMPLEMENTATION
// ENEBO: 1.9 has CURR nodes for local/block variables.  We don't.  I believe we follow proper logic	WITHOUT_CLASSIFICATION	0.9992279760788358	WITHOUT_CLASSIFICATION	7.720239211641786E-4	IMPLEMENTATION
// odd...but it is odd in ruby too.	WITHOUT_CLASSIFICATION	0.999987965205425	WITHOUT_CLASSIFICATION	1.2034794575011498E-5	IMPLEMENTATION
// What linenumber will the source think it starts from?	WITHOUT_CLASSIFICATION	0.999653210533708	WITHOUT_CLASSIFICATION	3.4678946629198475E-4	IMPLEMENTATION
// Is this inline source (aka -e "...source...")	WITHOUT_CLASSIFICATION	0.999765096435346	WITHOUT_CLASSIFICATION	2.3490356465398832E-4	IMPLEMENTATION
// We parse evals more often in source so assume an eval parse.	WITHOUT_CLASSIFICATION	0.9999974943471784	WITHOUT_CLASSIFICATION	2.5056528216746057E-6	IMPLEMENTATION
// Should positions added extra IDE-friendly information and leave in all newline nodes	WITHOUT_CLASSIFICATION	0.999999691767449	WITHOUT_CLASSIFICATION	3.0823255107765036E-7	IMPLEMENTATION
// Will parser parse Duby grammar Extensions	WITHOUT_CLASSIFICATION	0.9999921763191665	WITHOUT_CLASSIFICATION	7.823680833481577E-6	IMPLEMENTATION
// Should we display extra debug information while parsing?	WITHOUT_CLASSIFICATION	0.9999737557367555	WITHOUT_CLASSIFICATION	2.6244263244537E-5	IMPLEMENTATION
// __END__ marker offset (-1 means none present)	WITHOUT_CLASSIFICATION	0.9999686883243017	WITHOUT_CLASSIFICATION	3.1311675698326276E-5	IMPLEMENTATION
// Parser states:	WITHOUT_CLASSIFICATION	0.999663494513504	WITHOUT_CLASSIFICATION	3.3650548649593465E-4	IMPLEMENTATION
// Is the parser current within a singleton (value is number of nested singletons)	WITHOUT_CLASSIFICATION	0.9996450477586598	WITHOUT_CLASSIFICATION	3.5495224134012113E-4	IMPLEMENTATION
// Is the parser currently within a method definition	WITHOUT_CLASSIFICATION	0.9945382588216851	WITHOUT_CLASSIFICATION	0.005461741178314899	IMPLEMENTATION
// LOCALVAR	WITHOUT_CLASSIFICATION	0.9996615266859028	WITHOUT_CLASSIFICATION	3.3847331409717497E-4	IMPLEMENTATION
// CONSTANT	WITHOUT_CLASSIFICATION	0.9996615266859028	WITHOUT_CLASSIFICATION	3.3847331409717497E-4	IMPLEMENTATION
// INSTANCE VARIABLE	WITHOUT_CLASSIFICATION	0.9996615266859028	WITHOUT_CLASSIFICATION	3.3847331409717497E-4	IMPLEMENTATION
// Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])	WITHOUT_CLASSIFICATION	0.9999112911716391	WITHOUT_CLASSIFICATION	8.870882836089712E-5	IMPLEMENTATION
/* MRI: block_append */	WITHOUT_CLASSIFICATION	0.9999892917034561	WITHOUT_CLASSIFICATION	1.0708296543963984E-5	IMPLEMENTATION
// Reduces overhead in interp by not set position every single line we encounter. 	WITHOUT_CLASSIFICATION	0.9977613715263218	WITHOUT_CLASSIFICATION	0.0022386284736781374	IMPLEMENTATION
// Assumption: tail is never a list node	WITHOUT_CLASSIFICATION	0.9995780449348829	WITHOUT_CLASSIFICATION	4.219550651170933E-4	IMPLEMENTATION
//        return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));	WITHOUT_CLASSIFICATION	0.9999223469315799	WITHOUT_CLASSIFICATION	7.765306842006421E-5	IMPLEMENTATION
// Node	WITHOUT_CLASSIFICATION	0.9999937074774401	WITHOUT_CLASSIFICATION	6.2925225598851355E-6	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9486304669117809	WITHOUT_CLASSIFICATION	0.051369533088219156	IMPLEMENTATION
/*case CONSTNODE:                handleUselessWarn(node, "a constant"); return;*/	WITHOUT_CLASSIFICATION	0.9996767285624447	WITHOUT_CLASSIFICATION	3.2327143755527644E-4	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9486304669117809	WITHOUT_CLASSIFICATION	0.051369533088219156	IMPLEMENTATION
/*case CLASSNODE: case COLON2NODE:                handleUselessWarn(node, "::"); return;*/	WITHOUT_CLASSIFICATION	0.9995804045479995	WITHOUT_CLASSIFICATION	4.1959545200053236E-4	IMPLEMENTATION
/*case SELFNODE:                handleUselessWarn(node, "self"); return;*/	WITHOUT_CLASSIFICATION	0.9996767285624447	WITHOUT_CLASSIFICATION	3.2327143755527644E-4	IMPLEMENTATION
// FIXME: DSTR,EVSTR,STR: warning "string literal in condition"	WITHOUT_CLASSIFICATION	0.9929046310566185	WITHOUT_CLASSIFICATION	0.007095368943381484	IMPLEMENTATION
/* MRI: range_op */	WITHOUT_CLASSIFICATION	0.9999354232136133	WITHOUT_CLASSIFICATION	6.457678638666016E-5	IMPLEMENTATION
// Block and block pass passed in at same time....uh oh	WITHOUT_CLASSIFICATION	0.9999884564055355	WITHOUT_CLASSIFICATION	1.154359446459695E-5	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.9999935752659732	WITHOUT_CLASSIFICATION	6.424734026853922E-6	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.9999935752659732	WITHOUT_CLASSIFICATION	6.424734026853922E-6	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.9999935752659732	WITHOUT_CLASSIFICATION	6.424734026853922E-6	IMPLEMENTATION
// tail must be EvStrNode at this point 	WITHOUT_CLASSIFICATION	0.9997744116691047	WITHOUT_CLASSIFICATION	2.2558833089518637E-4	IMPLEMENTATION
//Do not add an empty string node	WITHOUT_CLASSIFICATION	0.9999193169130424	WITHOUT_CLASSIFICATION	8.068308695761702E-5	IMPLEMENTATION
// Zero-Argument declaration	WITHOUT_CLASSIFICATION	0.9999643867540025	WITHOUT_CLASSIFICATION	3.561324599767112E-5	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999475036042006	WITHOUT_CLASSIFICATION	5.2496395799344166E-5	IMPLEMENTATION
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999536202760542	WITHOUT_CLASSIFICATION	4.637972394586269E-5	IMPLEMENTATION
// shift to yyN	WITHOUT_CLASSIFICATION	0.9997167367502899	WITHOUT_CLASSIFICATION	2.83263249710089E-4	IMPLEMENTATION
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9996820659944985	WITHOUT_CLASSIFICATION	3.179340055015187E-4	IMPLEMENTATION
// leave stack alone	WITHOUT_CLASSIFICATION	0.9998267986691264	WITHOUT_CLASSIFICATION	1.73201330873676E-4	IMPLEMENTATION
// line 321	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 351	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 382	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 417	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 420	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 423	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 426	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 280	WITHOUT_CLASSIFICATION	0.9994928678613629	WITHOUT_CLASSIFICATION	5.071321386370284E-4	IMPLEMENTATION
// line 283	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 296	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 324	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 327	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 331	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 333	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 336	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 342	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 345	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 348	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 354	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 368	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 377	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 388	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 392	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 397	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 429	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 432	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 436	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 445	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 448	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 454	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 459	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 466	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 469	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 478	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 481	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 488	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 494	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 497	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 503	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 506	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 509	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 512	WITHOUT_CLASSIFICATION	0.9994928874278733	WITHOUT_CLASSIFICATION	5.071125721267244E-4	IMPLEMENTATION
// line 521	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 526	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 540	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 543	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 546	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 566	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 610	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 672	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 691	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 696	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 772	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 782	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 785	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 788	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 791	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 534	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 549	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 552	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 558	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 561	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 571	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 574	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 579	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 586	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 589	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 592	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 595	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 598	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 623	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 627	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 630	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 633	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 639	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 648	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 657	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 661	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 666	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 678	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 682	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 688	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 699	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 706	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 708	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 727	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 737	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 753	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 779	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 801	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 808	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 811	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 817	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 842	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 845	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 848	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 893	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 899	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 932	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 944	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 960	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 980	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1004	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1038	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 820	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 826	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 829	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 832	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 851	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 857	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 860	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 863	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 866	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 869	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 875	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 884	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 887	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 890	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 902	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 909	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 912	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 916	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 922	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 928	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 941	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 947	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 951	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 955	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 965	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 969	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 977	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 983	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1013	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1023	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1035	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1041	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1043	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1054	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1057	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1060	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1069	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1075	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1105	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1111	WITHOUT_CLASSIFICATION	0.999495486187381	WITHOUT_CLASSIFICATION	5.045138126189749E-4	IMPLEMENTATION
// line 1122	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1130	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1140	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1158	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1204	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1207	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1247	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1251	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1261	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1078	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1084	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1087	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1090	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1093	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1114	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1116	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1118	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1124	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1126	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1138	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1144	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1149	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1155	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1162	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1173	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1179	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1182	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1190	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1196	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1213	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1217	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1231	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1236	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1244	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1254	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1258	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1264	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1270	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1273	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1276	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1279	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1282	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1289	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1292	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1295	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1298	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1305	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1348	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1387	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1392	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1448	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1462	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1470	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1496	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1502	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1595	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1598	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1308	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1311	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1317	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1323	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1326	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1329	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1337	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1342	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1345	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1354	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1359	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1366	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1369	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1373	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1377	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1383	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1399	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1401	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1406	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1417	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1424	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1427	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1430	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1433	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1436	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1442	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1445	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1458	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1464	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1489	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1493	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1507	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1519	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1532	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1538	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1542	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1557	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1573	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1591	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1615	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1629	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1632	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1705	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1716	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1725	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1742	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1749	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1818	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1822	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1607	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1610	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1622	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1625	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1636	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1639	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1647	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1651	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1657	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1660	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1663	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1678	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1702	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1711	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1719	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1722	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1731	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1734	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1738	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1746	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1756	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1758	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1761	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1767	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1776	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1782	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1785	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1788	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1791	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1797	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1800	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1803	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1806	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1809	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1815	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1825	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1828	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1831	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1847	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9956164405781546	WITHOUT_CLASSIFICATION	0.0043835594218454245	IMPLEMENTATION
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9956164405781546	WITHOUT_CLASSIFICATION	0.0043835594218454245	IMPLEMENTATION
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9953317885411129	WITHOUT_CLASSIFICATION	0.004668211458887091	IMPLEMENTATION
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999948239277738	WITHOUT_CLASSIFICATION	5.176072226139624E-6	IMPLEMENTATION
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9933408521048877	WITHOUT_CLASSIFICATION	0.006659147895112274	IMPLEMENTATION
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9953317885411129	WITHOUT_CLASSIFICATION	0.004668211458887091	IMPLEMENTATION
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9932377268830244	WITHOUT_CLASSIFICATION	0.006762273116975703	IMPLEMENTATION
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999190358542113	WITHOUT_CLASSIFICATION	8.09641457887461E-5	IMPLEMENTATION
// line 1854	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1869	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1872	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1877	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1886	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1898	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1902	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1905	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1911	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1918	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1935	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1938	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1942	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1948	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1960	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1963	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1968	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1972	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1982	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1995	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 2000	WITHOUT_CLASSIFICATION	0.9994932669085071	WITHOUT_CLASSIFICATION	5.067330914929159E-4	IMPLEMENTATION
// line 2006	WITHOUT_CLASSIFICATION	0.9994925242676032	WITHOUT_CLASSIFICATION	5.074757323968126E-4	IMPLEMENTATION
// line 2010	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
/* We may need to subtract addition offset off of first */	WITHOUT_CLASSIFICATION	0.9999953286106369	WITHOUT_CLASSIFICATION	4.671389363109918E-6	IMPLEMENTATION
/* string fragment (we optimistically take one off in*/	WITHOUT_CLASSIFICATION	0.9999269499912112	WITHOUT_CLASSIFICATION	7.305000878880013E-5	IMPLEMENTATION
/* ParserSupport.literal_concat).  Check token length*/	WITHOUT_CLASSIFICATION	0.9950248409324696	WITHOUT_CLASSIFICATION	0.004975159067530462	IMPLEMENTATION
/* and subtract as neeeded.*/	WITHOUT_CLASSIFICATION	0.9991089310262649	WITHOUT_CLASSIFICATION	8.910689737351428E-4	IMPLEMENTATION
/*                    $$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);  */	WITHOUT_CLASSIFICATION	0.9999745761040484	WITHOUT_CLASSIFICATION	2.542389595162411E-5	IMPLEMENTATION
/* ENEBO: arg surrounded by in_defined set/unset*/	WITHOUT_CLASSIFICATION	0.9712331068164415	WITHOUT_CLASSIFICATION	0.02876689318355851	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999373742910782	WITHOUT_CLASSIFICATION	6.262570892179178E-5	IMPLEMENTATION
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9996348689972929	WITHOUT_CLASSIFICATION	3.65131002707053E-4	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999978708408618	WITHOUT_CLASSIFICATION	2.129159138285095E-6	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999978708408618	WITHOUT_CLASSIFICATION	2.129159138285095E-6	IMPLEMENTATION
/* ENEBO: Removed !compile_for_eval which probably is to reduce warnings*/	WITHOUT_CLASSIFICATION	0.9915775030671222	WITHOUT_CLASSIFICATION	0.008422496932877756	IMPLEMENTATION
/* was $$ = null;*/	WITHOUT_CLASSIFICATION	0.9917434403963891	WITHOUT_CLASSIFICATION	0.008256559603610894	IMPLEMENTATION
// line 2019 "Ruby19Parser.y"	WITHOUT_CLASSIFICATION	0.9999157853418298	WITHOUT_CLASSIFICATION	8.42146581702425E-5	IMPLEMENTATION
// line 8143 "-"	WITHOUT_CLASSIFICATION	0.9994951586046393	WITHOUT_CLASSIFICATION	5.048413953605903E-4	IMPLEMENTATION
// we know variables cannot be null since localstaticscope will create a 0 length one.	WITHOUT_CLASSIFICATION	0.9999964391750078	WITHOUT_CLASSIFICATION	3.5608249920828054E-6	IMPLEMENTATION
// No bit math to store level since we know level is zero for this case	WITHOUT_CLASSIFICATION	0.9999338058717981	WITHOUT_CLASSIFICATION	6.619412820190798E-5	IMPLEMENTATION
// Next immediate scope.  Variable and constant scoping rules make use of this variable // in different ways.	WITHOUT_CLASSIFICATION	0.9989456222951457	WITHOUT_CLASSIFICATION	0.0010543777048541922	IMPLEMENTATION
// Live reference to module	WITHOUT_CLASSIFICATION	0.9999837524419725	WITHOUT_CLASSIFICATION	1.62475580275954E-5	IMPLEMENTATION
// Next CRef down the lexical structure	WITHOUT_CLASSIFICATION	0.9999646257182428	WITHOUT_CLASSIFICATION	3.53742817571488E-5	IMPLEMENTATION
// Our name holder (offsets are assigned as variables are added	WITHOUT_CLASSIFICATION	0.9999995418310926	WITHOUT_CLASSIFICATION	4.581689073242188E-7	IMPLEMENTATION
// number of variables in this scope representing required arguments	WITHOUT_CLASSIFICATION	0.9999087966916288	WITHOUT_CLASSIFICATION	9.120330837121681E-5	IMPLEMENTATION
// number of variables in this scope representing optional arguments	WITHOUT_CLASSIFICATION	0.9999721262441599	WITHOUT_CLASSIFICATION	2.7873755840135542E-5	IMPLEMENTATION
// index of variable that represents a "rest" arg	WITHOUT_CLASSIFICATION	0.9980353317863861	WITHOUT_CLASSIFICATION	0.001964668213613883	IMPLEMENTATION
// Note that this object equality check is intentional, to ensure // the string and its interned version are the same object.	WITHOUT_CLASSIFICATION	0.9999998571594759	WITHOUT_CLASSIFICATION	1.4284052410287959E-7	IMPLEMENTATION
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999461348182499	WITHOUT_CLASSIFICATION	5.386518175024202E-5	IMPLEMENTATION
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999461348182499	WITHOUT_CLASSIFICATION	5.386518175024202E-5	IMPLEMENTATION
/* Note: Only used by compiler until it can use getConstant again or use some other refactoring */	WITHOUT_CLASSIFICATION	0.9999869702604646	WITHOUT_CLASSIFICATION	1.3029739535317433E-5	IMPLEMENTATION
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9977285445195261	WITHOUT_CLASSIFICATION	0.0022714554804738087	IMPLEMENTATION
/* Try and unload the autoload specified from internedName */	WITHOUT_CLASSIFICATION	0.9999981064663032	WITHOUT_CLASSIFICATION	1.8935336969091639E-6	IMPLEMENTATION
// We override that the logic which uses this	WITHOUT_CLASSIFICATION	0.9996628350302684	WITHOUT_CLASSIFICATION	3.371649697315275E-4	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999980544011478	WITHOUT_CLASSIFICATION	1.9455988522530093E-6	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9998424818569914	WITHOUT_CLASSIFICATION	1.575181430085062E-4	IMPLEMENTATION
// source extensions	WITHOUT_CLASSIFICATION	0.9999121355935385	WITHOUT_CLASSIFICATION	8.786440646151432E-5	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9998424818569914	WITHOUT_CLASSIFICATION	1.575181430085062E-4	IMPLEMENTATION
// . Array given to rest should pass itself // . Array with rest + other args should extract array // . Array with multiple values and NO rest should extract args if there are more than one argument	WITHOUT_CLASSIFICATION	0.99999031434576	WITHOUT_CLASSIFICATION	9.68565424001423E-6	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9997874169423434	WITHOUT_CLASSIFICATION	2.1258305765669744E-4	IMPLEMENTATION
// Is this thread currently with in a function trace?	WITHOUT_CLASSIFICATION	0.9997477743370432	WITHOUT_CLASSIFICATION	2.522256629567896E-4	IMPLEMENTATION
// Is this thread currently doing an defined? defined should set things like $!	WITHOUT_CLASSIFICATION	0.9871243146221357	WITHOUT_CLASSIFICATION	0.012875685377864293	IMPLEMENTATION
//private UnsynchronizedStack parentStack;	WITHOUT_CLASSIFICATION	0.9997650757586469	WITHOUT_CLASSIFICATION	2.3492424135304377E-4	IMPLEMENTATION
//private UnsynchronizedStack frameStack;	WITHOUT_CLASSIFICATION	0.9997650757586469	WITHOUT_CLASSIFICATION	2.3492424135304377E-4	IMPLEMENTATION
// List of active dynamic scopes.  Each of these may have captured other dynamic scopes // to implement closures.	WITHOUT_CLASSIFICATION	0.9889561099115471	WITHOUT_CLASSIFICATION	0.011043890088452878	IMPLEMENTATION
// File where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999676822144329	WITHOUT_CLASSIFICATION	3.2317785567060955E-5	IMPLEMENTATION
// Line where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9998960183940331	WITHOUT_CLASSIFICATION	1.0398160596694727E-4	IMPLEMENTATION
// In certain places, like grep, we don't use real frames for the // call blocks. This has the effect of not setting the backref in // the correct frame - this delta is activated to the place where // the grep is running in so that the backref will be set in an // appropriate place.	WITHOUT_CLASSIFICATION	0.999013636308733	WITHOUT_CLASSIFICATION	9.86363691267002E-4	IMPLEMENTATION
// TOPLEVEL self and a few others want a top-level scope.  We create this one right // away and then pass it into top-level parse so it ends up being the top level.	WITHOUT_CLASSIFICATION	0.9999810470776516	WITHOUT_CLASSIFICATION	1.8952922348492502E-5	IMPLEMENTATION
//////////////////// CATCH MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9996999485354997	WITHOUT_CLASSIFICATION	3.0005146450024216E-4	IMPLEMENTATION
//////////////////// FRAME MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9996999485354997	WITHOUT_CLASSIFICATION	3.0005146450024216E-4	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9765884754621514	WITHOUT_CLASSIFICATION	0.023411524537848522	IMPLEMENTATION
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999349801824441	WITHOUT_CLASSIFICATION	6.501981755591958E-5	IMPLEMENTATION
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999349801824441	WITHOUT_CLASSIFICATION	6.501981755591958E-5	IMPLEMENTATION
// look for mangling markers for compiled Ruby in method name	WITHOUT_CLASSIFICATION	0.9998061802599173	WITHOUT_CLASSIFICATION	1.9381974008257595E-4	IMPLEMENTATION
// if it's not a rescue or ensure, there's a frame associated, so decrement	WITHOUT_CLASSIFICATION	0.9979461352114339	WITHOUT_CLASSIFICATION	0.002053864788566071	IMPLEMENTATION
// look for __file__ method name for compiled roots	WITHOUT_CLASSIFICATION	0.9993866698994818	WITHOUT_CLASSIFICATION	6.133301005182895E-4	IMPLEMENTATION
// All entries following removed node can stay // in list, but all preceding ones need to be // cloned.	WITHOUT_CLASSIFICATION	0.9998727480090431	WITHOUT_CLASSIFICATION	1.2725199095681969E-4	IMPLEMENTATION
// required and optional only	WITHOUT_CLASSIFICATION	0.9999490859535319	WITHOUT_CLASSIFICATION	5.0914046468150577E-5	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9998424818569914	WITHOUT_CLASSIFICATION	1.575181430085062E-4	IMPLEMENTATION
// look for mangling markers for bound, unframed methods in class name	WITHOUT_CLASSIFICATION	0.9999764204484013	WITHOUT_CLASSIFICATION	2.3579551598707854E-5	IMPLEMENTATION
// set the binding's frame's "previous" file and line to current, so // trace will show who called the block	WITHOUT_CLASSIFICATION	0.9999934340399526	WITHOUT_CLASSIFICATION	6.5659600474201156E-6	IMPLEMENTATION
// framed invokers will have Ruby frames associated with them	WITHOUT_CLASSIFICATION	0.9999884666534401	WITHOUT_CLASSIFICATION	1.1533346559958976E-5	IMPLEMENTATION
// look for mangling markers for bound, framed methods in class name	WITHOUT_CLASSIFICATION	0.9999764373901617	WITHOUT_CLASSIFICATION	2.3562609838224497E-5	IMPLEMENTATION
// unframed invokers have no Ruby frames, so pull from class name // but use current frame as file and line	WITHOUT_CLASSIFICATION	0.9999990840837018	WITHOUT_CLASSIFICATION	9.159162982251714E-7	IMPLEMENTATION
// try to mine out a Ruby frame using our list of interpreter entry-point markers	WITHOUT_CLASSIFICATION	0.9999858685874328	WITHOUT_CLASSIFICATION	1.4131412567288886E-5	IMPLEMENTATION
// Frame matches one of our markers for "interpreted" calls	WITHOUT_CLASSIFICATION	0.9999895696734535	WITHOUT_CLASSIFICATION	1.0430326546538306E-5	IMPLEMENTATION
// Frame is extraneous runtime information, skip it unless debug	WITHOUT_CLASSIFICATION	0.999922145973738	WITHOUT_CLASSIFICATION	7.785402626200638E-5	IMPLEMENTATION
/*     * Determine what sort of assigner should be used for the provided 'iter' (e.g. block).     * Assigner provides just the right logic for assigning values to local parameters of the     * block.     *     * This method also has a second optimization which is to set 'noargblock' in the case that     * the block is a block which accepts no arguments.  The primary reason for this second     * optimization is that in the case of a yield with a RubyArray we will bypass some logic     * processing the RubyArray into a proper form (only to then not do anythign with it).  A     * secondary benefit is that a simple boolean seems to optimize by hotspot much faster     * than the zero arg assigner.     */	WITHOUT_CLASSIFICATION	0.9999973106689058	WITHOUT_CLASSIFICATION	2.6893310942160215E-6	IMPLEMENTATION
// new scope for this invocation of the block, based on parent scope	WITHOUT_CLASSIFICATION	0.9998701579662191	WITHOUT_CLASSIFICATION	1.298420337808066E-4	IMPLEMENTATION
// No argument blocks	WITHOUT_CLASSIFICATION	0.9999934311619646	WITHOUT_CLASSIFICATION	6.568838035362517E-6	IMPLEMENTATION
// just push the same empty scope, since we won't use one	WITHOUT_CLASSIFICATION	0.9999999303700722	WITHOUT_CLASSIFICATION	6.962992784558201E-8	IMPLEMENTATION
// Not sure if this is actually possible, but better safe than sorry	WITHOUT_CLASSIFICATION	0.9999666160516234	WITHOUT_CLASSIFICATION	3.338394837662282E-5	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9990685141999053	WITHOUT_CLASSIFICATION	9.314858000946753E-4	IMPLEMENTATION
// This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).	WITHOUT_CLASSIFICATION	0.9999691825313956	WITHOUT_CLASSIFICATION	3.081746860453769E-5	IMPLEMENTATION
// Highest reserved id	WITHOUT_CLASSIFICATION	0.9999670726732671	WITHOUT_CLASSIFICATION	3.292732673283846E-5	IMPLEMENTATION
// binary typed calls	WITHOUT_CLASSIFICATION	0.9998883944479837	WITHOUT_CLASSIFICATION	1.1160555201636494E-4	IMPLEMENTATION
// id must always be even	WITHOUT_CLASSIFICATION	0.999977131419512	WITHOUT_CLASSIFICATION	2.2868580487942957E-5	IMPLEMENTATION
// with block pass	WITHOUT_CLASSIFICATION	0.9996519026791151	WITHOUT_CLASSIFICATION	3.4809732088497735E-4	IMPLEMENTATION
// no block	WITHOUT_CLASSIFICATION	0.999851847434472	WITHOUT_CLASSIFICATION	1.4815256552807635E-4	IMPLEMENTATION
// with block literal (iter)	WITHOUT_CLASSIFICATION	0.999943225937748	WITHOUT_CLASSIFICATION	5.677406225193498E-5	IMPLEMENTATION
//            assert false : "can this happen?";	WITHOUT_CLASSIFICATION	0.9980755952435496	WITHOUT_CLASSIFICATION	0.0019244047564504513	IMPLEMENTATION
// if we have multiple asgn with just *args, need a special type for that	WITHOUT_CLASSIFICATION	0.9999280546677464	WITHOUT_CLASSIFICATION	7.194533225363708E-5	IMPLEMENTATION
// && args.getMaxArgumentsCount() != 1) {	WITHOUT_CLASSIFICATION	0.999962131610146	WITHOUT_CLASSIFICATION	3.7868389853987164E-5	IMPLEMENTATION
//            return warnMultiReturnNil(ruby);	WITHOUT_CLASSIFICATION	0.9999358527748253	WITHOUT_CLASSIFICATION	6.414722517469742E-5	IMPLEMENTATION
// ensure zero is devoted to no method name	WITHOUT_CLASSIFICATION	0.9999706266563565	WITHOUT_CLASSIFICATION	2.9373343643475334E-5	IMPLEMENTATION
// predefine a few other methods we invoke directly elsewhere	WITHOUT_CLASSIFICATION	0.999671990614849	WITHOUT_CLASSIFICATION	3.2800938515101073E-4	IMPLEMENTATION
// fast and safe respond_to? call site logic	WITHOUT_CLASSIFICATION	0.9997857518139481	WITHOUT_CLASSIFICATION	2.1424818605189668E-4	IMPLEMENTATION
// Static scoping information for this scope	WITHOUT_CLASSIFICATION	0.999948154613875	WITHOUT_CLASSIFICATION	5.184538612507232E-5	IMPLEMENTATION
// Captured dynamic scopes	WITHOUT_CLASSIFICATION	0.999967992198117	WITHOUT_CLASSIFICATION	3.200780188287052E-5	IMPLEMENTATION
// Backref for $~, $1, etc	WITHOUT_CLASSIFICATION	0.9999787318927358	WITHOUT_CLASSIFICATION	2.1268107264298694E-5	IMPLEMENTATION
// Lastline	WITHOUT_CLASSIFICATION	0.9996615266859028	WITHOUT_CLASSIFICATION	3.3847331409717497E-4	IMPLEMENTATION
// No binding scope so we should create one	WITHOUT_CLASSIFICATION	0.9999174301596749	WITHOUT_CLASSIFICATION	8.256984032505576E-5	IMPLEMENTATION
// bindings scopes must always be ManyVars scopes since evals can grow them	WITHOUT_CLASSIFICATION	0.9999884967541905	WITHOUT_CLASSIFICATION	1.1503245809421098E-5	IMPLEMENTATION
// Helper function to give a good view of current dynamic scope with captured scopes	WITHOUT_CLASSIFICATION	0.9999250714059875	WITHOUT_CLASSIFICATION	7.492859401259097E-5	IMPLEMENTATION
// try count specific args to determine required	WITHOUT_CLASSIFICATION	0.9998746545969974	WITHOUT_CLASSIFICATION	1.2534540300257482E-4	IMPLEMENTATION
// Some helper functions:	WITHOUT_CLASSIFICATION	0.9999656119702076	WITHOUT_CLASSIFICATION	3.4388029792443384E-5	IMPLEMENTATION
// silently ignore	WITHOUT_CLASSIFICATION	0.999518562907614	WITHOUT_CLASSIFICATION	4.8143709238598637E-4	IMPLEMENTATION
// used by compiler	WITHOUT_CLASSIFICATION	0.9998473523358506	WITHOUT_CLASSIFICATION	1.52647664149283E-4	IMPLEMENTATION
// initialize the static settings to determine which factory to use	WITHOUT_CLASSIFICATION	0.9999950636920614	WITHOUT_CLASSIFICATION	4.936307938652771E-6	IMPLEMENTATION
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999190358542113	WITHOUT_CLASSIFICATION	8.09641457887461E-5	IMPLEMENTATION
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9996301133379629	WITHOUT_CLASSIFICATION	3.698866620371322E-4	IMPLEMENTATION
//  Single node on list	WITHOUT_CLASSIFICATION	0.9998212702923345	WITHOUT_CLASSIFICATION	1.7872970766554002E-4	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9998109662416466	WITHOUT_CLASSIFICATION	1.890337583535429E-4	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999638655901117	WITHOUT_CLASSIFICATION	3.613440988818809E-5	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9997874169423434	WITHOUT_CLASSIFICATION	2.1258305765669744E-4	IMPLEMENTATION
// Note: In Ruby 1.9 all of this logic can go away since they will require explicit // bindings for evals.	WITHOUT_CLASSIFICATION	0.9999480997925702	WITHOUT_CLASSIFICATION	5.190020742994981E-5	IMPLEMENTATION
// We only define one special dynamic scope per 'logical' binding.  So all bindings for // the same scope should share the same dynamic scope.  This allows multiple evals with // different different bindings in the same scope to see the same stuff.	WITHOUT_CLASSIFICATION	0.999999118896227	WITHOUT_CLASSIFICATION	8.811037730698716E-7	IMPLEMENTATION
// If the next scope out has the same binding scope as this scope it means // we are evaling within an eval and in that case we should be sharing the same // binding scope.	WITHOUT_CLASSIFICATION	0.9999987316373706	WITHOUT_CLASSIFICATION	1.2683626294298473E-6	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999992972077465	WITHOUT_CLASSIFICATION	7.02792253516683E-7	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999992972077465	WITHOUT_CLASSIFICATION	7.02792253516683E-7	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999996748920605	WITHOUT_CLASSIFICATION	3.25107939514147E-7	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999996748920605	WITHOUT_CLASSIFICATION	3.25107939514147E-7	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999996748920605	WITHOUT_CLASSIFICATION	3.25107939514147E-7	IMPLEMENTATION
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999795335123237	WITHOUT_CLASSIFICATION	2.0466487676312134E-5	IMPLEMENTATION
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999795335123237	WITHOUT_CLASSIFICATION	2.0466487676312134E-5	IMPLEMENTATION
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999626423259749	WITHOUT_CLASSIFICATION	3.7357674025080434E-5	IMPLEMENTATION
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999626423259749	WITHOUT_CLASSIFICATION	3.7357674025080434E-5	IMPLEMENTATION
/*     * This is the proper behavior for all non-expanded assigners which have a pre > 0.  The rest     * override this.     */	WITHOUT_CLASSIFICATION	0.9999939529263643	WITHOUT_CLASSIFICATION	6.047073635735447E-6	IMPLEMENTATION
/*     * This is the proper behavior for all non-expanded assigners.     */	WITHOUT_CLASSIFICATION	0.9999980868311056	WITHOUT_CLASSIFICATION	1.9131688943587297E-6	IMPLEMENTATION
// prefill ?	WITHOUT_CLASSIFICATION	0.9998570773904605	WITHOUT_CLASSIFICATION	1.4292260953952438E-4	IMPLEMENTATION
// prefill ?	WITHOUT_CLASSIFICATION	0.9998570773904605	WITHOUT_CLASSIFICATION	1.4292260953952438E-4	IMPLEMENTATION
// MUST be called from synchronized/locked block! // should only be called by variableTableStore/variableTableFastStore	WITHOUT_CLASSIFICATION	0.9999993959185914	WITHOUT_CLASSIFICATION	6.040814084530927E-7	IMPLEMENTATION
// retrieve method // module // name	WITHOUT_CLASSIFICATION	0.9995149172983607	WITHOUT_CLASSIFICATION	4.85082701639237E-4	IMPLEMENTATION
// call is ok, punch it!	WITHOUT_CLASSIFICATION	0.9999841410700673	WITHOUT_CLASSIFICATION	1.5858929932721623E-5	IMPLEMENTATION
// if undefined, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999927963302195	WITHOUT_CLASSIFICATION	7.203669780402871E-6	IMPLEMENTATION
// if we're not attempting to invoke method_missing and method is not visible, branch to method_missing	WITHOUT_CLASSIFICATION	0.9996935725491614	WITHOUT_CLASSIFICATION	3.064274508386022E-4	IMPLEMENTATION
// method object already present, push various args // tc // self // klazz // name	WITHOUT_CLASSIFICATION	0.9998810833435516	WITHOUT_CLASSIFICATION	1.1891665644847542E-4	IMPLEMENTATION
// if it's method_missing, just invoke it	WITHOUT_CLASSIFICATION	0.9999838471123639	WITHOUT_CLASSIFICATION	1.6152887636120158E-5	IMPLEMENTATION
// invoke callMethodMissing	WITHOUT_CLASSIFICATION	0.9999460908463144	WITHOUT_CLASSIFICATION	5.3909153685690755E-5	IMPLEMENTATION
// caller	WITHOUT_CLASSIFICATION	0.9999964010161612	WITHOUT_CLASSIFICATION	3.598983838757241E-6	IMPLEMENTATION
// calltype // block	WITHOUT_CLASSIFICATION	0.9997296042123485	WITHOUT_CLASSIFICATION	2.703957876515993E-4	IMPLEMENTATION
// if no exception raised, jump to end to leave result on stack for return	WITHOUT_CLASSIFICATION	0.9999951496037734	WITHOUT_CLASSIFICATION	4.850396226477567E-6	IMPLEMENTATION
// load arity for check	WITHOUT_CLASSIFICATION	0.9999478865770709	WITHOUT_CLASSIFICATION	5.211342292904399E-5	IMPLEMENTATION
// throw	WITHOUT_CLASSIFICATION	0.9999827755219691	WITHOUT_CLASSIFICATION	1.7224478030856682E-5	IMPLEMENTATION
// load arity for error	WITHOUT_CLASSIFICATION	0.9998993850151795	WITHOUT_CLASSIFICATION	1.0061498482054535E-4	IMPLEMENTATION
// arity ok, continue	WITHOUT_CLASSIFICATION	0.9999328792076856	WITHOUT_CLASSIFICATION	6.712079231436298E-5	IMPLEMENTATION
//InvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9997921865822822	WITHOUT_CLASSIFICATION	2.078134177178416E-4	IMPLEMENTATION
// ENEBO: Perhaps slow but simple for now	WITHOUT_CLASSIFICATION	0.9999486186711783	WITHOUT_CLASSIFICATION	5.1381328821535906E-5	IMPLEMENTATION
// FastInvocationCallback	WITHOUT_CLASSIFICATION	0.9999438606165095	WITHOUT_CLASSIFICATION	5.6139383490612176E-5	IMPLEMENTATION
// InvocationCallback	WITHOUT_CLASSIFICATION	0.9999438606165095	WITHOUT_CLASSIFICATION	5.6139383490612176E-5	IMPLEMENTATION
//DumpingInvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9996983594805002	WITHOUT_CLASSIFICATION	3.016405194996755E-4	IMPLEMENTATION
// for fast lookup: encoding entry => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999943029594462	WITHOUT_CLASSIFICATION	5.697040553763751E-6	IMPLEMENTATION
// for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999808874805267	WITHOUT_CLASSIFICATION	1.911251947321852E-5	IMPLEMENTATION
// load the encoding	WITHOUT_CLASSIFICATION	0.999933758047902	WITHOUT_CLASSIFICATION	6.624195209794437E-5	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999683927436961	WITHOUT_CLASSIFICATION	3.160725630394086E-5	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999683927436961	WITHOUT_CLASSIFICATION	3.160725630394086E-5	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999683927436961	WITHOUT_CLASSIFICATION	3.160725630394086E-5	IMPLEMENTATION
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999213295400164	WITHOUT_CLASSIFICATION	7.867045998355604E-5	IMPLEMENTATION
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999213295400164	WITHOUT_CLASSIFICATION	7.867045998355604E-5	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999213295400164	WITHOUT_CLASSIFICATION	7.867045998355604E-5	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999213295400164	WITHOUT_CLASSIFICATION	7.867045998355604E-5	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999213295400164	WITHOUT_CLASSIFICATION	7.867045998355604E-5	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999301471171874	WITHOUT_CLASSIFICATION	6.985288281256118E-5	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999301471171874	WITHOUT_CLASSIFICATION	6.985288281256118E-5	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999301471171874	WITHOUT_CLASSIFICATION	6.985288281256118E-5	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999301471171874	WITHOUT_CLASSIFICATION	6.985288281256118E-5	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999301471171874	WITHOUT_CLASSIFICATION	6.985288281256118E-5	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999301471171874	WITHOUT_CLASSIFICATION	6.985288281256118E-5	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999301471171874	WITHOUT_CLASSIFICATION	6.985288281256118E-5	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999301471171874	WITHOUT_CLASSIFICATION	6.985288281256118E-5	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999301471171874	WITHOUT_CLASSIFICATION	6.985288281256118E-5	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999301471171874	WITHOUT_CLASSIFICATION	6.985288281256118E-5	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999301471171874	WITHOUT_CLASSIFICATION	6.985288281256118E-5	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999301471171874	WITHOUT_CLASSIFICATION	6.985288281256118E-5	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999301471171874	WITHOUT_CLASSIFICATION	6.985288281256118E-5	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999301471171874	WITHOUT_CLASSIFICATION	6.985288281256118E-5	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999301471171874	WITHOUT_CLASSIFICATION	6.985288281256118E-5	IMPLEMENTATION
// If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs	WITHOUT_CLASSIFICATION	0.9999960777177269	WITHOUT_CLASSIFICATION	3.922282273070149E-6	IMPLEMENTATION
// BreakJump, ThreadContext	WITHOUT_CLASSIFICATION	0.9999438606165095	WITHOUT_CLASSIFICATION	5.6139383490612176E-5	IMPLEMENTATION
// ThreadContext	WITHOUT_CLASSIFICATION	0.9996615266859028	WITHOUT_CLASSIFICATION	3.3847331409717497E-4	IMPLEMENTATION
// BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.999918508280422	WITHOUT_CLASSIFICATION	8.14917195780652E-5	IMPLEMENTATION
// Make Java class files in the jar reachable from Ruby	WITHOUT_CLASSIFICATION	0.999999809937486	WITHOUT_CLASSIFICATION	1.9006251394511548E-7	IMPLEMENTATION
// RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.999918508280422	WITHOUT_CLASSIFICATION	8.14917195780652E-5	IMPLEMENTATION
// add all startup load paths to the list first	WITHOUT_CLASSIFICATION	0.9998771028663288	WITHOUT_CLASSIFICATION	1.228971336712057E-4	IMPLEMENTATION
// if it's a compiled JRuby script, instantiate and run it	WITHOUT_CLASSIFICATION	0.999928395250157	WITHOUT_CLASSIFICATION	7.160474984307659E-5	IMPLEMENTATION
// wrap in try/catch for security exceptions in an applet	WITHOUT_CLASSIFICATION	0.9996700165550872	WITHOUT_CLASSIFICATION	3.299834449127672E-4	IMPLEMENTATION
// add $RUBYLIB paths	WITHOUT_CLASSIFICATION	0.9998880322328397	WITHOUT_CLASSIFICATION	1.1196776716029873E-4	IMPLEMENTATION
// Empty paths do not need to be added	WITHOUT_CLASSIFICATION	0.980530669127234	WITHOUT_CLASSIFICATION	0.019469330872766085	IMPLEMENTATION
// "." dir is used for relative path loads from a given file, as in require '../foo/bar'	WITHOUT_CLASSIFICATION	0.999998805280426	WITHOUT_CLASSIFICATION	1.1947195740826861E-6	IMPLEMENTATION
// Add 1.8 libs	WITHOUT_CLASSIFICATION	0.999558885640911	WITHOUT_CLASSIFICATION	4.411143590890007E-4	IMPLEMENTATION
// Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.	WITHOUT_CLASSIFICATION	0.9999996481597385	WITHOUT_CLASSIFICATION	3.5184026153843206E-7	IMPLEMENTATION
// Library has already been loaded in some form, bail out	WITHOUT_CLASSIFICATION	0.9999880607500226	WITHOUT_CLASSIFICATION	1.1939249977300772E-5	IMPLEMENTATION
// We don't want a package name beginning with dots, so we remove them	WITHOUT_CLASSIFICATION	0.9995571248699386	WITHOUT_CLASSIFICATION	4.428751300613368E-4	IMPLEMENTATION
// If there is a jar-file with the required name, we add this to the class path.	WITHOUT_CLASSIFICATION	0.9999480294391221	WITHOUT_CLASSIFICATION	5.197056087791684E-5	IMPLEMENTATION
// quietly try to load the class	WITHOUT_CLASSIFICATION	0.9999808468675001	WITHOUT_CLASSIFICATION	1.9153132499808635E-5	IMPLEMENTATION
// If there was a good library before, we go back to that	WITHOUT_CLASSIFICATION	0.9999845739073938	WITHOUT_CLASSIFICATION	1.542609260626697E-5	IMPLEMENTATION
// no library or extension found, try to load directly as a class	WITHOUT_CLASSIFICATION	0.9999960888190945	WITHOUT_CLASSIFICATION	3.911180905447257E-6	IMPLEMENTATION
// if an extension is specified, try more targetted searches	WITHOUT_CLASSIFICATION	0.9998963044516526	WITHOUT_CLASSIFICATION	1.036955483474283E-4	IMPLEMENTATION
// signed short, big-endian	WITHOUT_CLASSIFICATION	0.9999489550438089	WITHOUT_CLASSIFICATION	5.1044956191153926E-5	IMPLEMENTATION
// source extensions	WITHOUT_CLASSIFICATION	0.9999121355935385	WITHOUT_CLASSIFICATION	8.786440646151432E-5	IMPLEMENTATION
// We don't support .so, but some stdlib require .so directly // replace it with .jar to look for an extension type we do support	WITHOUT_CLASSIFICATION	0.9698522718169423	WITHOUT_CLASSIFICATION	0.03014772818305762	IMPLEMENTATION
// This code exploits the fact that all .jar files will be found for the JarredScript feature. // This is where the basic extension mechanism gets fixed	WITHOUT_CLASSIFICATION	0.9999953115378071	WITHOUT_CLASSIFICATION	4.688462192904152E-6	IMPLEMENTATION
// Make the class name look nice, by splitting on _ and capitalize each segment, then joining // the, together without anything separating them, and last put on "Service" at the end.	WITHOUT_CLASSIFICATION	0.9994060041712265	WITHOUT_CLASSIFICATION	5.939958287735003E-4	IMPLEMENTATION
// It's _really_ expensive to check that the class actually exists in the Jar, so // we don't do that now.	WITHOUT_CLASSIFICATION	0.9999872230892755	WITHOUT_CLASSIFICATION	1.277691072455444E-5	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.999900181678362	WITHOUT_CLASSIFICATION	9.981832163792114E-5	IMPLEMENTATION
// extension extensions	WITHOUT_CLASSIFICATION	0.9999023881127775	WITHOUT_CLASSIFICATION	9.76118872224472E-5	IMPLEMENTATION
// unknown extension, fall back to search with extensions	WITHOUT_CLASSIFICATION	0.9998947019481833	WITHOUT_CLASSIFICATION	1.0529805181664038E-4	IMPLEMENTATION
// try all extensions	WITHOUT_CLASSIFICATION	0.999964866226016	WITHOUT_CLASSIFICATION	3.5133773983987534E-5	IMPLEMENTATION
// if a source extension is specified, try all source extensions	WITHOUT_CLASSIFICATION	0.9999976236472146	WITHOUT_CLASSIFICATION	2.3763527854263273E-6	IMPLEMENTATION
// unknown extension, fall back to exact search	WITHOUT_CLASSIFICATION	0.9999230136413539	WITHOUT_CLASSIFICATION	7.69863586460389E-5	IMPLEMENTATION
// try only literal search	WITHOUT_CLASSIFICATION	0.999988593066053	WITHOUT_CLASSIFICATION	1.1406933947011698E-5	IMPLEMENTATION
// attempt to load the found library	WITHOUT_CLASSIFICATION	0.9997861374925981	WITHOUT_CLASSIFICATION	2.138625074018698E-4	IMPLEMENTATION
// otherwise load the library we've found	WITHOUT_CLASSIFICATION	0.9976958551345215	WITHOUT_CLASSIFICATION	0.0023041448654784894	IMPLEMENTATION
// allow MainExitException to propagate out for exec and friends	WITHOUT_CLASSIFICATION	0.9998334246515426	WITHOUT_CLASSIFICATION	1.6657534845743795E-4	IMPLEMENTATION
// Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".	WITHOUT_CLASSIFICATION	0.9999691677790284	WITHOUT_CLASSIFICATION	3.08322209715616E-5	IMPLEMENTATION
// check current directory; if file exists, retrieve URL and return resource	WITHOUT_CLASSIFICATION	0.9999464158110747	WITHOUT_CLASSIFICATION	5.358418892535708E-5	IMPLEMENTATION
// if a jar or file URL, return load service resource directly without further searching	WITHOUT_CLASSIFICATION	0.9999973882253538	WITHOUT_CLASSIFICATION	2.6117746461474408E-6	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9998382829074086	WITHOUT_CLASSIFICATION	1.6171709259151046E-4	IMPLEMENTATION
// if it's a ./ baseName, use CWD logic	WITHOUT_CLASSIFICATION	0.9997038638106838	WITHOUT_CLASSIFICATION	2.961361893161425E-4	IMPLEMENTATION
// if given path is absolute, just try it as-is (with extensions) and no load path	WITHOUT_CLASSIFICATION	0.9999969759590677	WITHOUT_CLASSIFICATION	3.0240409324272447E-6	IMPLEMENTATION
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9987078858386792	WITHOUT_CLASSIFICATION	0.001292114161320785	IMPLEMENTATION
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9987078858386792	WITHOUT_CLASSIFICATION	0.001292114161320785	IMPLEMENTATION
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.999634142763233	WITHOUT_CLASSIFICATION	3.6585723676699217E-4	IMPLEMENTATION
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.999634142763233	WITHOUT_CLASSIFICATION	3.6585723676699217E-4	IMPLEMENTATION
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999511769547351	WITHOUT_CLASSIFICATION	4.882304526494212E-5	IMPLEMENTATION
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999511769547351	WITHOUT_CLASSIFICATION	4.882304526494212E-5	IMPLEMENTATION
//                    actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));	WITHOUT_CLASSIFICATION	0.9998650545280365	WITHOUT_CLASSIFICATION	1.3494547196337415E-4	IMPLEMENTATION
// handle security-sensitive case	WITHOUT_CLASSIFICATION	0.9988460352302411	WITHOUT_CLASSIFICATION	0.0011539647697589891	IMPLEMENTATION
// if entry is an empty string, skip it	WITHOUT_CLASSIFICATION	0.9999885042749028	WITHOUT_CLASSIFICATION	1.1495725097230896E-5	IMPLEMENTATION
// if entry starts with a slash, skip it since classloader resources never start with a /	WITHOUT_CLASSIFICATION	0.9999917368102251	WITHOUT_CLASSIFICATION	8.263189774940219E-6	IMPLEMENTATION
// otherwise, try to load from classpath (Note: Jar resources always uses '/')	WITHOUT_CLASSIFICATION	0.9999940500826523	WITHOUT_CLASSIFICATION	5.949917347611142E-6	IMPLEMENTATION
// Make sure this is not a directory or unavailable in some way	WITHOUT_CLASSIFICATION	0.9999508951746386	WITHOUT_CLASSIFICATION	4.910482536142887E-5	IMPLEMENTATION
// signed short, native	WITHOUT_CLASSIFICATION	0.9998734778929192	WITHOUT_CLASSIFICATION	1.26522107080726E-4	IMPLEMENTATION
// If we fail to find as a normal Ruby script, we try to find as an extension, // checking for a builtin first.	WITHOUT_CLASSIFICATION	0.9999954593522069	WITHOUT_CLASSIFICATION	4.540647793110023E-6	IMPLEMENTATION
// write `I' instance var signet if class is NOT a direct subclass of Object	WITHOUT_CLASSIFICATION	0.9999996115045201	WITHOUT_CLASSIFICATION	3.884954799022263E-7	IMPLEMENTATION
// if name starts with a / we're done (classloader resources won't load with an initial /)	WITHOUT_CLASSIFICATION	0.9999999612993735	WITHOUT_CLASSIFICATION	3.870062656474624E-8	IMPLEMENTATION
// Look in classpath next (we do not use File as a test since UNC names will match) // Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")	WITHOUT_CLASSIFICATION	0.9999904381004721	WITHOUT_CLASSIFICATION	9.56189952793751E-6	IMPLEMENTATION
/* Directories and unavailable resources are not able to open a stream. */	WITHOUT_CLASSIFICATION	0.9999494386020803	WITHOUT_CLASSIFICATION	5.056139791965028E-5	IMPLEMENTATION
// Try to load from classpath without prefix. "A/b.rb" will not load as  // "./A/b.rb" in a jar file.	WITHOUT_CLASSIFICATION	0.999993425695934	WITHOUT_CLASSIFICATION	6.574304065968275E-6	IMPLEMENTATION
// object has instance vars and isn't a class, get a snapshot to be marshalled // and output the ivar header here	WITHOUT_CLASSIFICATION	0.9999996170687436	WITHOUT_CLASSIFICATION	3.8293125632994046E-7	IMPLEMENTATION
// flush afer whole dump is complete	WITHOUT_CLASSIFICATION	0.9999526378002582	WITHOUT_CLASSIFICATION	4.736219974184283E-5	IMPLEMENTATION
//            write('S');	WITHOUT_CLASSIFICATION	0.9999398337503238	WITHOUT_CLASSIFICATION	6.016624967606301E-5	IMPLEMENTATION
// switch on the object's *native type*. This allows use-defined // classes that have extended core native types to piggyback on their // marshalling logic.	WITHOUT_CLASSIFICATION	0.9984902241926397	WITHOUT_CLASSIFICATION	0.0015097758073603644	IMPLEMENTATION
// object is a custom class that extended one of the native types other than Object	WITHOUT_CLASSIFICATION	0.9999866255247724	WITHOUT_CLASSIFICATION	1.337447522753974E-5	IMPLEMENTATION
// We do not want to capture cached methods	WITHOUT_CLASSIFICATION	0.9989358648986106	WITHOUT_CLASSIFICATION	0.0010641351013892966	IMPLEMENTATION
// w_symbol	WITHOUT_CLASSIFICATION	0.9996615266859028	WITHOUT_CLASSIFICATION	3.3847331409717497E-4	IMPLEMENTATION
// w_unique	WITHOUT_CLASSIFICATION	0.9996615266859028	WITHOUT_CLASSIFICATION	3.3847331409717497E-4	IMPLEMENTATION
// call the proc, but not for symbols	WITHOUT_CLASSIFICATION	0.9994360062731199	WITHOUT_CLASSIFICATION	5.639937268800062E-4	IMPLEMENTATION
// Major // Minor	WITHOUT_CLASSIFICATION	0.9996615266859028	WITHOUT_CLASSIFICATION	3.3847331409717497E-4	IMPLEMENTATION
// any ivars, since we don't have __attached__ ivar now	WITHOUT_CLASSIFICATION	0.9999896015742774	WITHOUT_CLASSIFICATION	1.0398425722586044E-5	IMPLEMENTATION
// "hashdef" object, a hash with a default	WITHOUT_CLASSIFICATION	0.9999857540540872	WITHOUT_CLASSIFICATION	1.424594591290109E-5	IMPLEMENTATION
// All "C" marshalled objects descend from core classes, which are all RubyObject	WITHOUT_CLASSIFICATION	0.9999969735809672	WITHOUT_CLASSIFICATION	3.026419032782712E-6	IMPLEMENTATION
// sic	WITHOUT_CLASSIFICATION	0.9999935752659732	WITHOUT_CLASSIFICATION	6.424734026853922E-6	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.999905504222413	WITHOUT_CLASSIFICATION	9.44957775871419E-5	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.999905504222413	WITHOUT_CLASSIFICATION	9.44957775871419E-5	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.999905504222413	WITHOUT_CLASSIFICATION	9.44957775871419E-5	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999822119068706	WITHOUT_CLASSIFICATION	1.7788093129274437E-5	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999822119068706	WITHOUT_CLASSIFICATION	1.7788093129274437E-5	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9990685141999053	WITHOUT_CLASSIFICATION	9.314858000946753E-4	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9990685141999053	WITHOUT_CLASSIFICATION	9.314858000946753E-4	IMPLEMENTATION
/*     * If we are setting post arguments we can assume there are no pre or others     */	WITHOUT_CLASSIFICATION	0.9999999401915685	WITHOUT_CLASSIFICATION	5.980843151444283E-8	IMPLEMENTATION
// XXX: 0xffff0000 on BE?	WITHOUT_CLASSIFICATION	0.9986401714861829	WITHOUT_CLASSIFICATION	0.001359828513817152	IMPLEMENTATION
// unsigned short, native	WITHOUT_CLASSIFICATION	0.9998623270631185	WITHOUT_CLASSIFICATION	1.3767293688153305E-4	IMPLEMENTATION
// int, native // long, native	WITHOUT_CLASSIFICATION	0.9998627544616385	WITHOUT_CLASSIFICATION	1.372455383614424E-4	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.999905504222413	WITHOUT_CLASSIFICATION	9.44957775871419E-5	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.999905504222413	WITHOUT_CLASSIFICATION	9.44957775871419E-5	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.999905504222413	WITHOUT_CLASSIFICATION	9.44957775871419E-5	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999822119068706	WITHOUT_CLASSIFICATION	1.7788093129274437E-5	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999822119068706	WITHOUT_CLASSIFICATION	1.7788093129274437E-5	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999822119068706	WITHOUT_CLASSIFICATION	1.7788093129274437E-5	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9990685141999053	WITHOUT_CLASSIFICATION	9.314858000946753E-4	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9990685141999053	WITHOUT_CLASSIFICATION	9.314858000946753E-4	IMPLEMENTATION
// Look for slash, starting from 'start' position, until 'end'.	WITHOUT_CLASSIFICATION	0.9999966709772812	WITHOUT_CLASSIFICATION	3.3290227188835496E-6	IMPLEMENTATION
// Our values holder (name of variables are kept in staticScope)	WITHOUT_CLASSIFICATION	0.9999999767061556	WITHOUT_CLASSIFICATION	2.3293844409798368E-8	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9973747953336748	WITHOUT_CLASSIFICATION	0.002625204666325261	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9973747953336748	WITHOUT_CLASSIFICATION	0.002625204666325261	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9973747953336748	WITHOUT_CLASSIFICATION	0.002625204666325261	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9973747953336748	WITHOUT_CLASSIFICATION	0.002625204666325261	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9973747953336748	WITHOUT_CLASSIFICATION	0.002625204666325261	IMPLEMENTATION
// SunSignalFacade	WITHOUT_CLASSIFICATION	0.9996615266859028	WITHOUT_CLASSIFICATION	3.3847331409717497E-4	IMPLEMENTATION
// All braces pushed..	WITHOUT_CLASSIFICATION	0.9999741977625645	WITHOUT_CLASSIFICATION	2.58022374355151E-5	IMPLEMENTATION
/* failed : try next recursion */	WITHOUT_CLASSIFICATION	0.9990669360583149	WITHOUT_CLASSIFICATION	9.330639416850529E-4	IMPLEMENTATION
// leftToken made us start as nest 1	WITHOUT_CLASSIFICATION	0.9999776117903953	WITHOUT_CLASSIFICATION	2.2388209604635907E-5	IMPLEMENTATION
// are we at '**/'	WITHOUT_CLASSIFICATION	0.999753563080862	WITHOUT_CLASSIFICATION	2.4643691913790755E-4	IMPLEMENTATION
// No or mismatched braces..Move along..nothing to see here	WITHOUT_CLASSIFICATION	0.9999854547800896	WITHOUT_CLASSIFICATION	1.4545219910495439E-5	IMPLEMENTATION
// not enough bytes	WITHOUT_CLASSIFICATION	0.9821716908803945	WITHOUT_CLASSIFICATION	0.017828309119605548	IMPLEMENTATION
// Get index of last read byte	WITHOUT_CLASSIFICATION	0.9999933689945497	WITHOUT_CLASSIFICATION	6.63100545033064E-6	IMPLEMENTATION
// skip inner braces	WITHOUT_CLASSIFICATION	0.9997395647595352	WITHOUT_CLASSIFICATION	2.604352404647758E-4	IMPLEMENTATION
/*     * Process {}'s (example: Dir.glob("{jruby,jython}/README*")      */	WITHOUT_CLASSIFICATION	0.9999948963874163	WITHOUT_CLASSIFICATION	5.103612583654691E-6	IMPLEMENTATION
/* complete, according to Posix.2 */	WITHOUT_CLASSIFICATION	0.9999914188444857	WITHOUT_CLASSIFICATION	8.581155514330495E-6	IMPLEMENTATION
/* Only accept an open brace if there is a close */	WITHOUT_CLASSIFICATION	0.9999999388682977	WITHOUT_CLASSIFICATION	6.1131702217894E-8	IMPLEMENTATION
/* brace to match it.  Bracket expressions must be */	WITHOUT_CLASSIFICATION	0.9999901742185847	WITHOUT_CLASSIFICATION	9.82578141524237E-6	IMPLEMENTATION
// index of left-most brace // index of right-most brace	WITHOUT_CLASSIFICATION	0.9998674898797797	WITHOUT_CLASSIFICATION	1.32510120220185E-4	IMPLEMENTATION
// Length check is a hack.  We should not be reeiving "" as a filename ever. 	WITHOUT_CLASSIFICATION	0.9999882806423106	WITHOUT_CLASSIFICATION	1.1719357689277746E-5	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9997691952966765	WITHOUT_CLASSIFICATION	2.3080470332358991E-4	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9997691952966765	WITHOUT_CLASSIFICATION	2.3080470332358991E-4	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9997691952966765	WITHOUT_CLASSIFICATION	2.3080470332358991E-4	IMPLEMENTATION
// Pickaxe says @ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9995051796182169	WITHOUT_CLASSIFICATION	4.948203817829381E-4	IMPLEMENTATION
// Pickaxe says @@ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9995009023020454	WITHOUT_CLASSIFICATION	4.990976979547216E-4	IMPLEMENTATION
// SimpleSampler	WITHOUT_CLASSIFICATION	0.9996615266859028	WITHOUT_CLASSIFICATION	3.3847331409717497E-4	IMPLEMENTATION
/*     * convert into longs, returning unsigned 64-bit values as signed longs     * ( num2long raises a RangeError on values > Long.MAX_VALUE )     */	WITHOUT_CLASSIFICATION	0.9999996861001442	WITHOUT_CLASSIFICATION	3.1389985572745887E-7	IMPLEMENTATION
// b64_xtable for decoding Base 64	WITHOUT_CLASSIFICATION	0.9999603911518241	WITHOUT_CLASSIFICATION	3.96088481758466E-5	IMPLEMENTATION
// single precision, little-endian	WITHOUT_CLASSIFICATION	0.9998796858889495	WITHOUT_CLASSIFICATION	1.2031411105052602E-4	IMPLEMENTATION
// single precision, big-endian	WITHOUT_CLASSIFICATION	0.9998796858889495	WITHOUT_CLASSIFICATION	1.2031411105052602E-4	IMPLEMENTATION
// single precision, native	WITHOUT_CLASSIFICATION	0.9997945675229837	WITHOUT_CLASSIFICATION	2.0543247701645836E-4	IMPLEMENTATION
// single precision, native // single precision, native	WITHOUT_CLASSIFICATION	0.9997018150877972	WITHOUT_CLASSIFICATION	2.981849122027145E-4	IMPLEMENTATION
// double precision, little-endian	WITHOUT_CLASSIFICATION	0.9999938484797507	WITHOUT_CLASSIFICATION	6.151520249248069E-6	IMPLEMENTATION
// double precision, big-endian	WITHOUT_CLASSIFICATION	0.9999938484797507	WITHOUT_CLASSIFICATION	6.151520249248069E-6	IMPLEMENTATION
// double precision, native	WITHOUT_CLASSIFICATION	0.9999894956284185	WITHOUT_CLASSIFICATION	1.050437158156957E-5	IMPLEMENTATION
// signed short, little-endian	WITHOUT_CLASSIFICATION	0.9999489550438089	WITHOUT_CLASSIFICATION	5.1044956191153926E-5	IMPLEMENTATION
// signed char	WITHOUT_CLASSIFICATION	0.9998432766273714	WITHOUT_CLASSIFICATION	1.5672337262857846E-4	IMPLEMENTATION
// unsigned char	WITHOUT_CLASSIFICATION	0.9998294645098217	WITHOUT_CLASSIFICATION	1.7053549017821503E-4	IMPLEMENTATION
// long, little-endian	WITHOUT_CLASSIFICATION	0.9999440380290732	WITHOUT_CLASSIFICATION	5.596197092679736E-5	IMPLEMENTATION
// long, big-endian	WITHOUT_CLASSIFICATION	0.9996625960335396	WITHOUT_CLASSIFICATION	3.374039664604499E-4	IMPLEMENTATION
// unsigned int, native	WITHOUT_CLASSIFICATION	0.9998633405146674	WITHOUT_CLASSIFICATION	1.36659485332627E-4	IMPLEMENTATION
// int, native	WITHOUT_CLASSIFICATION	0.9991702419302844	WITHOUT_CLASSIFICATION	8.297580697157363E-4	IMPLEMENTATION
// 64-bit number, native (as fixnum)	WITHOUT_CLASSIFICATION	0.9998473950326582	WITHOUT_CLASSIFICATION	1.5260496734175873E-4	IMPLEMENTATION
// How many occurrences of 'type' we want	WITHOUT_CLASSIFICATION	0.9996882425142687	WITHOUT_CLASSIFICATION	3.117574857312945E-4	IMPLEMENTATION
// See if we have a converter for the job...	WITHOUT_CLASSIFICATION	0.9999809194416763	WITHOUT_CLASSIFICATION	1.9080558323673634E-5	IMPLEMENTATION
// Otherwise the unpack should be here...	WITHOUT_CLASSIFICATION	0.9995862245177601	WITHOUT_CLASSIFICATION	4.137754822398508E-4	IMPLEMENTATION
// Possible Checksum Byte	WITHOUT_CLASSIFICATION	0.9999413848862331	WITHOUT_CLASSIFICATION	5.8615113767030654E-5	IMPLEMENTATION
// obtain a	WITHOUT_CLASSIFICATION	0.9997814806672708	WITHOUT_CLASSIFICATION	2.1851933272915868E-4	IMPLEMENTATION
// obtain b	WITHOUT_CLASSIFICATION	0.9997990850848514	WITHOUT_CLASSIFICATION	2.0091491514875165E-4	IMPLEMENTATION
// obtain c	WITHOUT_CLASSIFICATION	0.9998591099290428	WITHOUT_CLASSIFICATION	1.4089007095721028E-4	IMPLEMENTATION
// obtain d	WITHOUT_CLASSIFICATION	0.9997210371074895	WITHOUT_CLASSIFICATION	2.7896289251056074E-4	IMPLEMENTATION
/*encode.limit() - */	WITHOUT_CLASSIFICATION	0.9999995612443278	WITHOUT_CLASSIFICATION	4.3875567216470107E-7	IMPLEMENTATION
/* 1 */	WITHOUT_CLASSIFICATION	0.9999988383792489	WITHOUT_CLASSIFICATION	1.1616207512420914E-6	IMPLEMENTATION
/* 2 */	WITHOUT_CLASSIFICATION	0.9999992433249761	WITHOUT_CLASSIFICATION	7.566750237977457E-7	IMPLEMENTATION
/* 3 */	WITHOUT_CLASSIFICATION	0.9999991846445602	WITHOUT_CLASSIFICATION	8.153554398116848E-7	IMPLEMENTATION
/* 4 */	WITHOUT_CLASSIFICATION	0.9999994046968894	WITHOUT_CLASSIFICATION	5.953031106194511E-7	IMPLEMENTATION
/* 5 */	WITHOUT_CLASSIFICATION	0.9999993041665478	WITHOUT_CLASSIFICATION	6.958334521739616E-7	IMPLEMENTATION
/* 6 */	WITHOUT_CLASSIFICATION	0.9999990947951483	WITHOUT_CLASSIFICATION	9.052048517372431E-7	IMPLEMENTATION
/* 7 */	WITHOUT_CLASSIFICATION	0.9999987971334505	WITHOUT_CLASSIFICATION	1.2028665494909274E-6	IMPLEMENTATION
// Skip all whitespace in pack format string	WITHOUT_CLASSIFICATION	0.9999996748223637	WITHOUT_CLASSIFICATION	3.2517763628940025E-7	IMPLEMENTATION
// Skip embedded comments in pack format string	WITHOUT_CLASSIFICATION	0.999998954887022	WITHOUT_CLASSIFICATION	1.0451129780374715E-6	IMPLEMENTATION
// In case when the number of occurences is // explicitly specified, we have to read up // the remaining garbage after the '\0' to // satisfy the requested pattern.	WITHOUT_CLASSIFICATION	0.9999910863377026	WITHOUT_CLASSIFICATION	8.913662297296998E-6	IMPLEMENTATION
//normal exit, this should be faster than a test at each iterations for string with more than //about 40 char	WITHOUT_CLASSIFICATION	0.999967662577034	WITHOUT_CLASSIFICATION	3.2337422966059765E-5	IMPLEMENTATION
// We encountered '\0' when // were reading the buffer above, // increment the number of read bytes.	WITHOUT_CLASSIFICATION	0.9999976986303236	WITHOUT_CLASSIFICATION	2.301369676359946E-6	IMPLEMENTATION
// MRI behavior: Contrary to what seems to be logical, // when '*' is given, MRI calculates the distance // to the end, in order to go backwards.	WITHOUT_CLASSIFICATION	0.9999956571399289	WITHOUT_CLASSIFICATION	4.342860071133006E-6	IMPLEMENTATION
// Determine how many of type are needed (default: 1)	WITHOUT_CLASSIFICATION	0.6994850801716954	WITHOUT_CLASSIFICATION	0.3005149198283046	IMPLEMENTATION
// 'Z' adds extra null pad (versus 'a')	WITHOUT_CLASSIFICATION	0.999944166389624	WITHOUT_CLASSIFICATION	5.583361037591223E-5	IMPLEMENTATION
//if the low bit is set //set the high bit of the result	WITHOUT_CLASSIFICATION	0.9999921978681644	WITHOUT_CLASSIFICATION	7.80213183557906E-6	IMPLEMENTATION
//if the index is not a multiple of 8, we are not on a byte boundary //shift the byte	WITHOUT_CLASSIFICATION	0.9942521191755824	WITHOUT_CLASSIFICATION	0.005747880824417599	IMPLEMENTATION
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9974117255250003	WITHOUT_CLASSIFICATION	0.0025882744749997333	IMPLEMENTATION
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9974117255250003	WITHOUT_CLASSIFICATION	0.0025882744749997333	IMPLEMENTATION
//do some padding, I don't understand the padding strategy	WITHOUT_CLASSIFICATION	0.9974673576273727	WITHOUT_CLASSIFICATION	0.0025326423726273824	IMPLEMENTATION
// we filled up current byte; append it and create next one	WITHOUT_CLASSIFICATION	0.998651696780417	WITHOUT_CLASSIFICATION	0.0013483032195830426	IMPLEMENTATION
//if the index is not a multiple of 8, we are not on a byte boundary	WITHOUT_CLASSIFICATION	0.9942342490027217	WITHOUT_CLASSIFICATION	0.005765750997278278	IMPLEMENTATION
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9999999470472617	WITHOUT_CLASSIFICATION	5.295273838275475E-8	IMPLEMENTATION
// we don't deal with negatives.	WITHOUT_CLASSIFICATION	0.9997841548877013	WITHOUT_CLASSIFICATION	2.1584511229857606E-4	IMPLEMENTATION
// populate commandline with NG-provided stuff	WITHOUT_CLASSIFICATION	0.9998865158384701	WITHOUT_CLASSIFICATION	1.134841615299586E-4	IMPLEMENTATION
// are we recursing?	WITHOUT_CLASSIFICATION	0.9997948851495603	WITHOUT_CLASSIFICATION	2.051148504397142E-4	IMPLEMENTATION
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999998635353075	WITHOUT_CLASSIFICATION	1.364646925805711E-7	IMPLEMENTATION
// default PidGetter	WITHOUT_CLASSIFICATION	0.9999402539010496	WITHOUT_CLASSIFICATION	5.974609895048422E-5	IMPLEMENTATION
// ignore and try windows version	WITHOUT_CLASSIFICATION	0.9999761841680607	WITHOUT_CLASSIFICATION	2.381583193931895E-5	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999235589850037	WITHOUT_CLASSIFICATION	7.644101499620019E-5	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999235589850037	WITHOUT_CLASSIFICATION	7.644101499620019E-5	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999235589850037	WITHOUT_CLASSIFICATION	7.644101499620019E-5	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999235589850037	WITHOUT_CLASSIFICATION	7.644101499620019E-5	IMPLEMENTATION
// try both	WITHOUT_CLASSIFICATION	0.9996597426430364	WITHOUT_CLASSIFICATION	3.4025735696369895E-4	IMPLEMENTATION
// just unix	WITHOUT_CLASSIFICATION	0.9999469598799168	WITHOUT_CLASSIFICATION	5.3040120083189405E-5	IMPLEMENTATION
// just windows	WITHOUT_CLASSIFICATION	0.999958432262047	WITHOUT_CLASSIFICATION	4.1567737953118104E-5	IMPLEMENTATION
// neither	WITHOUT_CLASSIFICATION	0.9999936058877313	WITHOUT_CLASSIFICATION	6.394112268641084E-6	IMPLEMENTATION
// CON: popen is a case where I think we should just always shell out.	WITHOUT_CLASSIFICATION	0.9959034765667335	WITHOUT_CLASSIFICATION	0.004096523433266554	IMPLEMENTATION
// single string command, pass to sh to expand wildcards	WITHOUT_CLASSIFICATION	0.9999977532247231	WITHOUT_CLASSIFICATION	2.2467752768741214E-6	IMPLEMENTATION
// direct invocation of the command	WITHOUT_CLASSIFICATION	0.9999661463512473	WITHOUT_CLASSIFICATION	3.38536487526681E-5	IMPLEMENTATION
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999750506165664	WITHOUT_CLASSIFICATION	2.4949383433532403E-5	IMPLEMENTATION
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999750506165664	WITHOUT_CLASSIFICATION	2.4949383433532403E-5	IMPLEMENTATION
// close process output // See JRUBY-3405; hooking up to parent process stdin caused // problems for IRB etc using stdin.	WITHOUT_CLASSIFICATION	0.999998758045238	WITHOUT_CLASSIFICATION	1.2419547620587076E-6	IMPLEMENTATION
// ignore, we're on the way out	WITHOUT_CLASSIFICATION	0.9998387104225159	WITHOUT_CLASSIFICATION	1.6128957748403418E-4	IMPLEMENTATION
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999899524891994	WITHOUT_CLASSIFICATION	1.0047510800503161E-5	IMPLEMENTATION
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999736166492866	WITHOUT_CLASSIFICATION	2.6383350713460048E-5	IMPLEMENTATION
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999736166492866	WITHOUT_CLASSIFICATION	2.6383350713460048E-5	IMPLEMENTATION
// popen caller wants to be able to write, provide subprocess out directly	WITHOUT_CLASSIFICATION	0.9999616381178666	WITHOUT_CLASSIFICATION	3.83618821334115E-5	IMPLEMENTATION
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999974462581536	WITHOUT_CLASSIFICATION	2.553741846334339E-6	IMPLEMENTATION
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999974462581536	WITHOUT_CLASSIFICATION	2.553741846334339E-6	IMPLEMENTATION
// execute command with sh -c // this does shell expansion of wildcards	WITHOUT_CLASSIFICATION	0.9999919293679592	WITHOUT_CLASSIFICATION	8.070632040822251E-6	IMPLEMENTATION
// We need to close the out, since some // processes would just wait for the stream // to be closed before they process its content, // and produce the output. E.g.: "cat".	WITHOUT_CLASSIFICATION	0.9999998602247268	WITHOUT_CLASSIFICATION	1.3977527336118282E-7	IMPLEMENTATION
// we only close out if it's the slave stream, to avoid // closing a directly-mapped stream from parent process	WITHOUT_CLASSIFICATION	0.9999991599289318	WITHOUT_CLASSIFICATION	8.400710680744382E-7	IMPLEMENTATION
// The assumption here is that the 'in' stream provides // proper available() support. If available() always // returns 0, we'll hang!	WITHOUT_CLASSIFICATION	0.9999876863845992	WITHOUT_CLASSIFICATION	1.2313615400823683E-5	IMPLEMENTATION
// Force t3 to quit, just in case if it's stuck. // Note: On some platforms, even interrupt might not // have an effect if the thread is IO blocked.	WITHOUT_CLASSIFICATION	0.9999786580302471	WITHOUT_CLASSIFICATION	2.134196975287756E-5	IMPLEMENTATION
// Check for special shell characters [<>|] at the beginning // and end of each command word and don't run in process if we find them.	WITHOUT_CLASSIFICATION	0.9999967675008581	WITHOUT_CLASSIFICATION	3.2324991418804638E-6	IMPLEMENTATION
// Note: this method produces meaningful results // only for RubyIO objects. For everything else returns 0.	WITHOUT_CLASSIFICATION	0.9998584103695971	WITHOUT_CLASSIFICATION	1.415896304028265E-4	IMPLEMENTATION
//sequential	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
// reverse the entire area of the array selected if it's reversed.	WITHOUT_CLASSIFICATION	0.9999836367990557	WITHOUT_CLASSIFICATION	1.6363200944343626E-5	IMPLEMENTATION
// do median of 7 if the array is over 200 elements.	WITHOUT_CLASSIFICATION	0.999998545391901	WITHOUT_CLASSIFICATION	1.4546080988648826E-6	IMPLEMENTATION
// if it's less than 200 do median of 3	WITHOUT_CLASSIFICATION	0.9999925191361585	WITHOUT_CLASSIFICATION	7.480863841530814E-6	IMPLEMENTATION
// SignalFacade	WITHOUT_CLASSIFICATION	0.9996615266859028	WITHOUT_CLASSIFICATION	3.3847331409717497E-4	IMPLEMENTATION
// this is the order in which MRI does these two tests	WITHOUT_CLASSIFICATION	0.9999976513206262	WITHOUT_CLASSIFICATION	2.34867937374344E-6	IMPLEMENTATION
// this is the order in which MRI does these tests	WITHOUT_CLASSIFICATION	0.9999986815041614	WITHOUT_CLASSIFICATION	1.318495838650003E-6	IMPLEMENTATION
// basically just forcing a TypeError here to match MRI	WITHOUT_CLASSIFICATION	0.9999909884793244	WITHOUT_CLASSIFICATION	9.011520675535108E-6	IMPLEMENTATION
// not saving DFS instance, as it will only be used once (at most) per call	WITHOUT_CLASSIFICATION	0.9992240894671128	WITHOUT_CLASSIFICATION	7.759105328871565E-4	IMPLEMENTATION
// Args	WITHOUT_CLASSIFICATION	0.9999935791563774	WITHOUT_CLASSIFICATION	6.420843622601206E-6	IMPLEMENTATION
// static methods only	WITHOUT_CLASSIFICATION	0.9999758291145332	WITHOUT_CLASSIFICATION	2.4170885466783277E-5	IMPLEMENTATION
//System.err.println(" calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9996057673328812	WITHOUT_CLASSIFICATION	3.9423266711887615E-4	IMPLEMENTATION
// MRI 1.8.6 behavior: null byte after '%' // leads to "%" string. Null byte in // other places, like "%5\0", leads to error.	WITHOUT_CLASSIFICATION	0.9998910023031169	WITHOUT_CLASSIFICATION	1.089976968830141E-4	IMPLEMENTATION
// last index (+1) accessed by next() // last index (+1) accessed by get()	WITHOUT_CLASSIFICATION	0.9998402538016072	WITHOUT_CLASSIFICATION	1.5974619839282918E-4	IMPLEMENTATION
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly.	WITHOUT_CLASSIFICATION	0.9999753185631358	WITHOUT_CLASSIFICATION	2.4681436864087213E-5	IMPLEMENTATION
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly. Version for 1.9.	WITHOUT_CLASSIFICATION	0.999989298217272	WITHOUT_CLASSIFICATION	1.0701782727983746E-5	IMPLEMENTATION
// MRI doesn't flag it as an error if width is given multiple // times as a number (but it does for *)	WITHOUT_CLASSIFICATION	0.9999995409432128	WITHOUT_CLASSIFICATION	4.5905678729878873E-7	IMPLEMENTATION
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999975227454085	WITHOUT_CLASSIFICATION	2.4772545914121104E-6	IMPLEMENTATION
// MRI 1.8.5-p12 doesn't support 1-char strings, but // YARV 0.4.1 does. I don't think it hurts to include // this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])	WITHOUT_CLASSIFICATION	0.9980754505103147	WITHOUT_CLASSIFICATION	0.0019245494896854643	IMPLEMENTATION
// 'd' and 'i' are the same	WITHOUT_CLASSIFICATION	0.9999895222113911	WITHOUT_CLASSIFICATION	1.047778860888469E-5	IMPLEMENTATION
// 'u' with space or plus flags is same as 'd'	WITHOUT_CLASSIFICATION	0.9999988965434413	WITHOUT_CLASSIFICATION	1.103456558757105E-6	IMPLEMENTATION
// We depart here from strict adherence to MRI code, as MRI // uses C-sprintf, in part, to format numeric output, while // we'll use Java's numeric formatting code (and our own).	WITHOUT_CLASSIFICATION	0.9999999061847477	WITHOUT_CLASSIFICATION	9.381525223993934E-8	IMPLEMENTATION
// skip '-' in bytes, will add where appropriate	WITHOUT_CLASSIFICATION	0.9999790747497536	WITHOUT_CLASSIFICATION	2.0925250246387157E-5	IMPLEMENTATION
// ..	WITHOUT_CLASSIFICATION	0.9999937537997395	WITHOUT_CLASSIFICATION	6.246200260544013E-6	IMPLEMENTATION
// the 1 is for the stripped sign char	WITHOUT_CLASSIFICATION	0.9999924372231221	WITHOUT_CLASSIFICATION	7.562776877807396E-6	IMPLEMENTATION
// FIXME: what is correct 'recv' argument? // (this does produce the desired behavior)	WITHOUT_CLASSIFICATION	0.9225633671403504	WITHOUT_CLASSIFICATION	0.07743663285964957	IMPLEMENTATION
// gotta have at least a zero...	WITHOUT_CLASSIFICATION	0.9999193623004481	WITHOUT_CLASSIFICATION	8.063769955195564E-5	IMPLEMENTATION
// OK, we now have the significand in digits[0...nDigits] // and the exponent in exponent.  We're ready to format.	WITHOUT_CLASSIFICATION	0.9999617288363254	WITHOUT_CLASSIFICATION	3.8271163674611204E-5	IMPLEMENTATION
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9999969028189306	WITHOUT_CLASSIFICATION	3.0971810694523554E-6	IMPLEMENTATION
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999195189614642	WITHOUT_CLASSIFICATION	8.048103853577081E-5	IMPLEMENTATION
//System.err.println(" stringToLong/reading c=" + data[s]);	WITHOUT_CLASSIFICATION	0.9996057673328812	WITHOUT_CLASSIFICATION	3.9423266711887615E-4	IMPLEMENTATION
//System.err.println(" stringToLong/converted c=" + c);	WITHOUT_CLASSIFICATION	0.9996143450386452	WITHOUT_CLASSIFICATION	3.856549613547074E-4	IMPLEMENTATION
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9999969028189306	WITHOUT_CLASSIFICATION	3.0971810694523554E-6	IMPLEMENTATION
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999195189614642	WITHOUT_CLASSIFICATION	8.048103853577081E-5	IMPLEMENTATION
// precision for G/g includes integer digits	WITHOUT_CLASSIFICATION	0.9998920341328589	WITHOUT_CLASSIFICATION	1.079658671411276E-4	IMPLEMENTATION
// deal with length/width	WITHOUT_CLASSIFICATION	0.9998803847548592	WITHOUT_CLASSIFICATION	1.1961524514075142E-4	IMPLEMENTATION
// deal with length/width	WITHOUT_CLASSIFICATION	0.9998803847548592	WITHOUT_CLASSIFICATION	1.1961524514075142E-4	IMPLEMENTATION
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999576923725999	WITHOUT_CLASSIFICATION	4.23076274001574E-5	IMPLEMENTATION
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999937226525537	WITHOUT_CLASSIFICATION	6.2773474462885456E-6	IMPLEMENTATION
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999983856488004	WITHOUT_CLASSIFICATION	1.6143511995304165E-6	IMPLEMENTATION
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999916707222567	WITHOUT_CLASSIFICATION	8.329277743326059E-6	IMPLEMENTATION
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9999870183415727	WITHOUT_CLASSIFICATION	1.2981658427298193E-5	IMPLEMENTATION
// MRI behavior: In this mode // trailing zeroes are removed: // 1.500E+05 -> 1.5E+05 	WITHOUT_CLASSIFICATION	0.9999791976762658	WITHOUT_CLASSIFICATION	2.0802323734230536E-5	IMPLEMENTATION
// '.' is printed	WITHOUT_CLASSIFICATION	0.9998771088633516	WITHOUT_CLASSIFICATION	1.2289113664842603E-4	IMPLEMENTATION
// all precision numebers printed	WITHOUT_CLASSIFICATION	0.9999360381304193	WITHOUT_CLASSIFICATION	6.396186958059345E-5	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9997152698999422	WITHOUT_CLASSIFICATION	2.8473010005777627E-4	IMPLEMENTATION
// '.'	WITHOUT_CLASSIFICATION	0.999993865080709	WITHOUT_CLASSIFICATION	6.134919291044324E-6	IMPLEMENTATION
// decimal form, like (but not *just* like!) 'f'	WITHOUT_CLASSIFICATION	0.9852125486098201	WITHOUT_CLASSIFICATION	0.014787451390180012	IMPLEMENTATION
// digits array shifted, update all	WITHOUT_CLASSIFICATION	0.999971924640202	WITHOUT_CLASSIFICATION	2.8075359798033074E-5	IMPLEMENTATION
// will have a trailing '.' // g fills trailing zeroes if #	WITHOUT_CLASSIFICATION	0.9999841235135954	WITHOUT_CLASSIFICATION	1.587648640464592E-5	IMPLEMENTATION
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999940975479871	WITHOUT_CLASSIFICATION	5.902452012872755E-6	IMPLEMENTATION
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999940975479871	WITHOUT_CLASSIFICATION	5.902452012872755E-6	IMPLEMENTATION
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9998892656195737	WITHOUT_CLASSIFICATION	1.1073438042632042E-4	IMPLEMENTATION
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9998892656195737	WITHOUT_CLASSIFICATION	1.1073438042632042E-4	IMPLEMENTATION
// digits arr shifted, update all	WITHOUT_CLASSIFICATION	0.9999647388766183	WITHOUT_CLASSIFICATION	3.526112338176301E-5	IMPLEMENTATION
// (1|intlen).prec	WITHOUT_CLASSIFICATION	0.9996615266859028	WITHOUT_CLASSIFICATION	3.3847331409717497E-4	IMPLEMENTATION
// (1|intlen)	WITHOUT_CLASSIFICATION	0.9996615266859028	WITHOUT_CLASSIFICATION	3.3847331409717497E-4	IMPLEMENTATION
// will have a trailing '.'	WITHOUT_CLASSIFICATION	0.9999680540375617	WITHOUT_CLASSIFICATION	3.194596243824346E-5	IMPLEMENTATION
// fill up the rest with zeroes	WITHOUT_CLASSIFICATION	0.9997217452082918	WITHOUT_CLASSIFICATION	2.782547917080982E-4	IMPLEMENTATION
//System.err.println(" main/len=" + len);	WITHOUT_CLASSIFICATION	0.9996057673328812	WITHOUT_CLASSIFICATION	3.9423266711887615E-4	IMPLEMENTATION
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999983856488004	WITHOUT_CLASSIFICATION	1.6143511995304165E-6	IMPLEMENTATION
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999916707222567	WITHOUT_CLASSIFICATION	8.329277743326059E-6	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9997152698999422	WITHOUT_CLASSIFICATION	2.8473010005777627E-4	IMPLEMENTATION
// '.'	WITHOUT_CLASSIFICATION	0.999993865080709	WITHOUT_CLASSIFICATION	6.134919291044324E-6	IMPLEMENTATION
// equivalent to MRI case '\0':	WITHOUT_CLASSIFICATION	0.999761079036582	WITHOUT_CLASSIFICATION	2.3892096341797858E-4	IMPLEMENTATION
// '.' and all precision digits printed	WITHOUT_CLASSIFICATION	0.9999653147265631	WITHOUT_CLASSIFICATION	3.468527343681447E-5	IMPLEMENTATION
// \v	WITHOUT_CLASSIFICATION	0.9999935752659732	WITHOUT_CLASSIFICATION	6.424734026853922E-6	IMPLEMENTATION
// dangling '%' char	WITHOUT_CLASSIFICATION	0.9998295812319892	WITHOUT_CLASSIFICATION	1.7041876801076388E-4	IMPLEMENTATION
// main while loop (offset < length)	WITHOUT_CLASSIFICATION	0.9999479884766795	WITHOUT_CLASSIFICATION	5.201152332040915E-5	IMPLEMENTATION
// debugging code, keeping for now	WITHOUT_CLASSIFICATION	0.9999856552657744	WITHOUT_CLASSIFICATION	1.4344734225669386E-5	IMPLEMENTATION
// MRI rounds up on nnn5nnn, but not nnn5 -- // except for when they do	WITHOUT_CLASSIFICATION	0.9999518403346958	WITHOUT_CLASSIFICATION	4.8159665304264924E-5	IMPLEMENTATION
// "%.0f" % 0.99	WITHOUT_CLASSIFICATION	0.9996633469036332	WITHOUT_CLASSIFICATION	3.3665309636672007E-4	IMPLEMENTATION
// limit the length of negatives if possible (also faster)	WITHOUT_CLASSIFICATION	0.9999838054457646	WITHOUT_CLASSIFICATION	1.6194554235412177E-5	IMPLEMENTATION
// negative values	WITHOUT_CLASSIFICATION	0.9999919686529551	WITHOUT_CLASSIFICATION	8.031347044866028E-6	IMPLEMENTATION
// calculation for negatives when %u specified // for values >= Integer.MIN_VALUE * 2, MRI uses (the equivalent of) //   long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val // for smaller values, BigInteger math is required to conform to MRI's // result.	WITHOUT_CLASSIFICATION	0.999999650007221	WITHOUT_CLASSIFICATION	3.4999277896439274E-7	IMPLEMENTATION
// relatively cheap test for 32-bit values	WITHOUT_CLASSIFICATION	0.9999997351130605	WITHOUT_CLASSIFICATION	2.6488693941172154E-7	IMPLEMENTATION
// no such luck...	WITHOUT_CLASSIFICATION	0.999642741971528	WITHOUT_CLASSIFICATION	3.5725802847207745E-4	IMPLEMENTATION
// ok, now it gets expensive...	WITHOUT_CLASSIFICATION	0.9999538196642919	WITHOUT_CLASSIFICATION	4.618033570809777E-5	IMPLEMENTATION
// go through negated powers of 32 until we find one small enough 	WITHOUT_CLASSIFICATION	0.9999628924369907	WITHOUT_CLASSIFICATION	3.710756300924583E-5	IMPLEMENTATION
// add to the corresponding positive power of 32 for the result. // meaningful? no. conformant? yes. I just write the code...	WITHOUT_CLASSIFICATION	0.9999420362974636	WITHOUT_CLASSIFICATION	5.7963702536435744E-5	IMPLEMENTATION
/* constant vector a */	WITHOUT_CLASSIFICATION	0.9999809760916744	WITHOUT_CLASSIFICATION	1.9023908325635916E-5	IMPLEMENTATION
/* most significant w-r bits */	WITHOUT_CLASSIFICATION	0.9999557709859151	WITHOUT_CLASSIFICATION	4.422901408495743E-5	IMPLEMENTATION
/* least significant r bits */	WITHOUT_CLASSIFICATION	0.999992603944814	WITHOUT_CLASSIFICATION	7.396055185980436E-6	IMPLEMENTATION
// state[j] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999438894137183	WITHOUT_CLASSIFICATION	5.6110586281745465E-5	IMPLEMENTATION
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999438894137183	WITHOUT_CLASSIFICATION	5.6110586281745465E-5	IMPLEMENTATION
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999438894137183	WITHOUT_CLASSIFICATION	5.6110586281745465E-5	IMPLEMENTATION
/* MSB is 1; assuring non-zero initial array */	WITHOUT_CLASSIFICATION	0.9999976927717864	WITHOUT_CLASSIFICATION	2.3072282136345203E-6	IMPLEMENTATION
/* Tempering */	WITHOUT_CLASSIFICATION	0.9999354232136133	WITHOUT_CLASSIFICATION	6.457678638666016E-5	IMPLEMENTATION
// MRI behavior: Week values are monotonous. // So, weeks that effectively belong to previous year, // will get the value of 0, not 52 or 53, as in Java.	WITHOUT_CLASSIFICATION	0.9999999875570729	WITHOUT_CLASSIFICATION	1.2442927245514514E-8	IMPLEMENTATION
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9996065783873395	WITHOUT_CLASSIFICATION	3.934216126604928E-4	IMPLEMENTATION
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9996065783873395	WITHOUT_CLASSIFICATION	3.934216126604928E-4	IMPLEMENTATION
// \v	WITHOUT_CLASSIFICATION	0.9999935752659732	WITHOUT_CLASSIFICATION	6.424734026853922E-6	IMPLEMENTATION
//System.err.println("getSign()");	WITHOUT_CLASSIFICATION	0.9996983594805002	WITHOUT_CLASSIFICATION	3.016405194996755E-4	IMPLEMENTATION
//System.err.println(" getSign/" + sign);	WITHOUT_CLASSIFICATION	0.9996057673328812	WITHOUT_CLASSIFICATION	3.9423266711887615E-4	IMPLEMENTATION
//System.err.println("figureOutBase()/base=" + base);	WITHOUT_CLASSIFICATION	0.9996057673328812	WITHOUT_CLASSIFICATION	3.9423266711887615E-4	IMPLEMENTATION
//System.err.println(" figureOutBase/base=" + base);	WITHOUT_CLASSIFICATION	0.9996057673328812	WITHOUT_CLASSIFICATION	3.9423266711887615E-4	IMPLEMENTATION
//System.err.println("calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9996057673328812	WITHOUT_CLASSIFICATION	3.9423266711887615E-4	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.999976214108194	WITHOUT_CLASSIFICATION	2.378589180606253E-5	IMPLEMENTATION
//System.err.println(" stringToLong=" + val);	WITHOUT_CLASSIFICATION	0.9996057673328812	WITHOUT_CLASSIFICATION	3.9423266711887615E-4	IMPLEMENTATION
// no number	WITHOUT_CLASSIFICATION	0.9997614430491134	WITHOUT_CLASSIFICATION	2.3855695088668546E-4	IMPLEMENTATION
// trailing garbage	WITHOUT_CLASSIFICATION	0.9976076414432221	WITHOUT_CLASSIFICATION	0.002392358556777833	IMPLEMENTATION
//System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);	WITHOUT_CLASSIFICATION	0.999133411055832	WITHOUT_CLASSIFICATION	8.665889441680373E-4	IMPLEMENTATION
// it was not found at all!	WITHOUT_CLASSIFICATION	0.9989671757458467	WITHOUT_CLASSIFICATION	0.0010328242541532892	IMPLEMENTATION
// can be overridden to be informed when objects are removed	WITHOUT_CLASSIFICATION	0.9999066467251755	WITHOUT_CLASSIFICATION	9.335327482446715E-5	IMPLEMENTATION
// we reached the end of a list	WITHOUT_CLASSIFICATION	0.9994600465295629	WITHOUT_CLASSIFICATION	5.399534704370347E-4	IMPLEMENTATION
// goto next bucket	WITHOUT_CLASSIFICATION	0.9993361319211516	WITHOUT_CLASSIFICATION	6.638680788483925E-4	IMPLEMENTATION
// we reached the end	WITHOUT_CLASSIFICATION	0.9994694458845975	WITHOUT_CLASSIFICATION	5.305541154024606E-4	IMPLEMENTATION
// entry is the first element of this bucket	WITHOUT_CLASSIFICATION	0.9999499337442507	WITHOUT_CLASSIFICATION	5.0066255749402834E-5	IMPLEMENTATION
// states	WITHOUT_CLASSIFICATION	0.99998154754882	WITHOUT_CLASSIFICATION	1.8452451180005837E-5	IMPLEMENTATION
// remove leading whitespace (includes _ for lax) // get sign, if any	WITHOUT_CLASSIFICATION	0.9999926009763447	WITHOUT_CLASSIFICATION	7.399023655422895E-6	IMPLEMENTATION
// optimistic pass - calculate value as digits are processed // digits - lax rules // decimal digits - lax rules // exponent sign/digits - lax rules // digits - strict rules // decimal digits - strict rules // exponent sign/digits - strict rules // complete calculation if possible	WITHOUT_CLASSIFICATION	0.9999999128997531	WITHOUT_CLASSIFICATION	8.710024694860865E-8	IMPLEMENTATION
// fields used for direct (optimistic) calculation // number of significant digits, updated as parsed // zeroes that may go to significand or exponent // offset of decimal pt from start (-1 -> no decimal) // significand, updated as parsed // exponent, updated as parsed	WITHOUT_CLASSIFICATION	0.999999989953847	WITHOUT_CLASSIFICATION	1.0046152987138697E-8	IMPLEMENTATION
// drop through for sign	WITHOUT_CLASSIFICATION	0.9999958799377147	WITHOUT_CLASSIFICATION	4.120062285338471E-6	IMPLEMENTATION
// switch // will use this if we have to go back the slow way	WITHOUT_CLASSIFICATION	0.9998487501071468	WITHOUT_CLASSIFICATION	1.512498928532357E-4	IMPLEMENTATION
// drop through for non-strict digits	WITHOUT_CLASSIFICATION	0.9999951176877211	WITHOUT_CLASSIFICATION	4.882312278973078E-6	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999854993843237	WITHOUT_CLASSIFICATION	1.4500615676266645E-5	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999532227920974	WITHOUT_CLASSIFICATION	4.6777207902597776E-5	IMPLEMENTATION
// no digits, go calc (will return +/- 0.0 for lax)	WITHOUT_CLASSIFICATION	0.9999905222687656	WITHOUT_CLASSIFICATION	9.477731234400316E-6	IMPLEMENTATION
// ignore leading zeroes	WITHOUT_CLASSIFICATION	0.9999612841040476	WITHOUT_CLASSIFICATION	3.871589595234356E-5	IMPLEMENTATION
// just save a count of zeroes for now; if no digit // ends up following them, they'll be applied to the // exponent rather than the significand (and our max // length for optimistic calc).	WITHOUT_CLASSIFICATION	0.9999999650483751	WITHOUT_CLASSIFICATION	3.49516249022142E-8	IMPLEMENTATION
// ok, got a non-zero, have to own up to our horded zeroes	WITHOUT_CLASSIFICATION	0.9999782092811166	WITHOUT_CLASSIFICATION	2.17907188834491E-5	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999320054065037	WITHOUT_CLASSIFICATION	6.799459349619957E-5	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999320054065037	WITHOUT_CLASSIFICATION	6.799459349619957E-5	IMPLEMENTATION
// oh, well, it was worth a try. go let // Double/FloatingDecimal handle it 	WITHOUT_CLASSIFICATION	0.9998891384646833	WITHOUT_CLASSIFICATION	1.108615353166009E-4	IMPLEMENTATION
// ignore // switch	WITHOUT_CLASSIFICATION	0.9997706775061324	WITHOUT_CLASSIFICATION	2.293224938676971E-4	IMPLEMENTATION
// ignore // switch	WITHOUT_CLASSIFICATION	0.9997706775061324	WITHOUT_CLASSIFICATION	2.293224938676971E-4	IMPLEMENTATION
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999203527601812	WITHOUT_CLASSIFICATION	7.964723981878707E-5	IMPLEMENTATION
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999203527601812	WITHOUT_CLASSIFICATION	7.964723981878707E-5	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9998552924207273	WITHOUT_CLASSIFICATION	1.4470757927256237E-4	IMPLEMENTATION
// first non_underscore char must be digit	WITHOUT_CLASSIFICATION	0.9999545592382919	WITHOUT_CLASSIFICATION	4.544076170816709E-5	IMPLEMENTATION
// no dec digits, end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999563731128738	WITHOUT_CLASSIFICATION	4.362688712614244E-5	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.9999038925101579	WITHOUT_CLASSIFICATION	9.610748984215324E-5	IMPLEMENTATION
// difficult case, send to Double/FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999817020018816	WITHOUT_CLASSIFICATION	1.8297998118366455E-5	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999948678229778	WITHOUT_CLASSIFICATION	5.132177022281355E-6	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999948678229778	WITHOUT_CLASSIFICATION	5.132177022281355E-6	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999854993843237	WITHOUT_CLASSIFICATION	1.4500615676266645E-5	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999854993843237	WITHOUT_CLASSIFICATION	1.4500615676266645E-5	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999854993843237	WITHOUT_CLASSIFICATION	1.4500615676266645E-5	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999532227920974	WITHOUT_CLASSIFICATION	4.6777207902597776E-5	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999320054065037	WITHOUT_CLASSIFICATION	6.799459349619957E-5	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999320054065037	WITHOUT_CLASSIFICATION	6.799459349619957E-5	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999320054065037	WITHOUT_CLASSIFICATION	6.799459349619957E-5	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9998552924207273	WITHOUT_CLASSIFICATION	1.4470757927256237E-4	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9998552924207273	WITHOUT_CLASSIFICATION	1.4470757927256237E-4	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9998552924207273	WITHOUT_CLASSIFICATION	1.4470757927256237E-4	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.9999038925101579	WITHOUT_CLASSIFICATION	9.610748984215324E-5	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.9999038925101579	WITHOUT_CLASSIFICATION	9.610748984215324E-5	IMPLEMENTATION
// lax (str.to_f) allows underscores between e/E and sign	WITHOUT_CLASSIFICATION	0.9999670161433554	WITHOUT_CLASSIFICATION	3.298385664456762E-5	IMPLEMENTATION
// switch // for // no exponent, so drop through for calculation	WITHOUT_CLASSIFICATION	0.999998815472776	WITHOUT_CLASSIFICATION	1.1845272239741432E-6	IMPLEMENTATION
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9996502329441257	WITHOUT_CLASSIFICATION	3.497670558743334E-4	IMPLEMENTATION
// TODO: it's not clear to me why, in FloatingDecimal, the // "slop" calculation performed above for positive exponents // isn't used for negative exponents as well. Will find out...	WITHOUT_CLASSIFICATION	0.7799052901343358	IMPLEMENTATION	0.22009470986566415	WITHOUT_CLASSIFICATION
// no digits, error	WITHOUT_CLASSIFICATION	0.9993788350438407	WITHOUT_CLASSIFICATION	6.21164956159224E-4	IMPLEMENTATION
// too big for us	WITHOUT_CLASSIFICATION	0.999850898348068	WITHOUT_CLASSIFICATION	1.491016519320682E-4	IMPLEMENTATION
// too big for us	WITHOUT_CLASSIFICATION	0.999850898348068	WITHOUT_CLASSIFICATION	1.491016519320682E-4	IMPLEMENTATION
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999585793011938	WITHOUT_CLASSIFICATION	4.142069880614003E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.999976214108194	WITHOUT_CLASSIFICATION	2.378589180606253E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.999976214108194	WITHOUT_CLASSIFICATION	2.378589180606253E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.999976214108194	WITHOUT_CLASSIFICATION	2.378589180606253E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.999976214108194	WITHOUT_CLASSIFICATION	2.378589180606253E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.999976214108194	WITHOUT_CLASSIFICATION	2.378589180606253E-5	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999949751793012	WITHOUT_CLASSIFICATION	5.024820698669696E-6	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999949751793012	WITHOUT_CLASSIFICATION	5.024820698669696E-6	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999949751793012	WITHOUT_CLASSIFICATION	5.024820698669696E-6	IMPLEMENTATION
// first char must be digit	WITHOUT_CLASSIFICATION	0.9999686963565411	WITHOUT_CLASSIFICATION	3.13036434589654E-5	IMPLEMENTATION
// no dec digits after '.', error for strict	WITHOUT_CLASSIFICATION	0.9999683593918068	WITHOUT_CLASSIFICATION	3.1640608193182864E-5	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999532227920974	WITHOUT_CLASSIFICATION	4.6777207902597776E-5	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9998552924207273	WITHOUT_CLASSIFICATION	1.4470757927256237E-4	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9998552924207273	WITHOUT_CLASSIFICATION	1.4470757927256237E-4	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.999976214108194	WITHOUT_CLASSIFICATION	2.378589180606253E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.999976214108194	WITHOUT_CLASSIFICATION	2.378589180606253E-5	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999949751793012	WITHOUT_CLASSIFICATION	5.024820698669696E-6	IMPLEMENTATION
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999585793011938	WITHOUT_CLASSIFICATION	4.142069880614003E-5	IMPLEMENTATION
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999578407713239	WITHOUT_CLASSIFICATION	4.215922867613264E-5	IMPLEMENTATION
// switch //while	WITHOUT_CLASSIFICATION	0.9997185127432414	WITHOUT_CLASSIFICATION	2.814872567585703E-4	IMPLEMENTATION
/*     * All the positive powers of 10 that can be     * represented exactly in double/float.     * (From sun.misc.FloatingDecimal.java)     */	WITHOUT_CLASSIFICATION	0.9999998470491015	WITHOUT_CLASSIFICATION	1.5295089845422163E-7	IMPLEMENTATION
// Zlib behavior: negative win_bits means no header and no checksum.	WITHOUT_CLASSIFICATION	0.999994364822367	WITHOUT_CLASSIFICATION	5.635177632982171E-6	IMPLEMENTATION
// rb_enc_mbclen	WITHOUT_CLASSIFICATION	0.9996615266859028	WITHOUT_CLASSIFICATION	3.3847331409717497E-4	IMPLEMENTATION
// rb_enc_precise_mbclen	WITHOUT_CLASSIFICATION	0.9999438606165095	WITHOUT_CLASSIFICATION	5.6139383490612176E-5	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9987495918070346	WITHOUT_CLASSIFICATION	0.0012504081929654769	IMPLEMENTATION
// arg cannot be negative	WITHOUT_CLASSIFICATION	0.9999474022764113	WITHOUT_CLASSIFICATION	5.259772358875158E-5	IMPLEMENTATION
// NoFunctionalitySignalFacade	WITHOUT_CLASSIFICATION	0.9999438606165095	WITHOUT_CLASSIFICATION	5.6139383490612176E-5	IMPLEMENTATION
// Change visibility so others can see it	WITHOUT_CLASSIFICATION	0.9999839105556253	WITHOUT_CLASSIFICATION	1.6089444374710116E-5	IMPLEMENTATION
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9911761900962339	WITHOUT_CLASSIFICATION	0.00882380990376601	IMPLEMENTATION
// strip off "_dot_rb" for .rb files	WITHOUT_CLASSIFICATION	0.9999950104214397	WITHOUT_CLASSIFICATION	4.9895785602424765E-6	IMPLEMENTATION
// Makes sure the key is not already in the hashtable.	WITHOUT_CLASSIFICATION	0.9999511750994493	WITHOUT_CLASSIFICATION	4.8824900550797595E-5	IMPLEMENTATION
// Rehash the table if the threshold is exceeded	WITHOUT_CLASSIFICATION	0.9999840033648104	WITHOUT_CLASSIFICATION	1.5996635189618602E-5	IMPLEMENTATION
// Creates the new entry.	WITHOUT_CLASSIFICATION	0.9999294276008139	WITHOUT_CLASSIFICATION	7.057239918611693E-5	IMPLEMENTATION
// next entry to return // current slot // current entry	WITHOUT_CLASSIFICATION	0.9996794191269852	WITHOUT_CLASSIFICATION	3.2058087301481755E-4	IMPLEMENTATION
// advance to first entry	WITHOUT_CLASSIFICATION	0.9999527424886953	WITHOUT_CLASSIFICATION	4.7257511304799523E-5	IMPLEMENTATION
// The reason why we need the stream is to be able to invoke available() on it. // STDIN in Java is non-interruptible, non-selectable, and attempt to read // on such stream might lead to thread being blocked without *any* way to unblock it. // That's where available() comes it, so at least we could check whether // anything is available to be read without blocking.	WITHOUT_CLASSIFICATION	0.9997419096402095	WITHOUT_CLASSIFICATION	2.580903597904701E-4	IMPLEMENTATION
/*package-protected*/	WITHOUT_CLASSIFICATION	0.9997921865822822	WITHOUT_CLASSIFICATION	2.078134177178416E-4	IMPLEMENTATION
// raw file URL, just open directly	WITHOUT_CLASSIFICATION	0.9999948611362444	WITHOUT_CLASSIFICATION	5.138863755653733E-6	IMPLEMENTATION
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999872020031575	WITHOUT_CLASSIFICATION	1.279799684239219E-5	IMPLEMENTATION
// if refcount is at or below zero, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999996462142309	WITHOUT_CLASSIFICATION	3.53785769148682E-7	IMPLEMENTATION
// if channel is already closed, we're no longer valid	WITHOUT_CLASSIFICATION	0.999999373017256	WITHOUT_CLASSIFICATION	6.269827439574565E-7	IMPLEMENTATION
// otherwise decrement and possibly close as normal	WITHOUT_CLASSIFICATION	0.9999038227754646	WITHOUT_CLASSIFICATION	9.617722453531394E-5	IMPLEMENTATION
// r/w buffer // are we reading or writing?	WITHOUT_CLASSIFICATION	0.9999778223283253	WITHOUT_CLASSIFICATION	2.2177671674692215E-5	IMPLEMENTATION
// this constructor is used by fdopen, so we don't increment descriptor ref count	WITHOUT_CLASSIFICATION	0.9999217560406458	WITHOUT_CLASSIFICATION	7.824395935420375E-5	IMPLEMENTATION
// unread back	WITHOUT_CLASSIFICATION	0.9994986318008842	WITHOUT_CLASSIFICATION	5.013681991157819E-4	IMPLEMENTATION
// iterate over remainder of buffer until we find a match	WITHOUT_CLASSIFICATION	0.9999925898601815	WITHOUT_CLASSIFICATION	7.410139818513393E-6	IMPLEMENTATION
// terminate and advance buffer when we find our char	WITHOUT_CLASSIFICATION	0.9999869112291015	WITHOUT_CLASSIFICATION	1.3088770898366553E-5	IMPLEMENTATION
// no match, append remainder of buffer and continue with next block	WITHOUT_CLASSIFICATION	0.999940577151	WITHOUT_CLASSIFICATION	5.942284899990733E-5	IMPLEMENTATION
// found a match above, check if remaining separator characters match, appending as we go	WITHOUT_CLASSIFICATION	0.9999949500312886	WITHOUT_CLASSIFICATION	5.049968711363578E-6	IMPLEMENTATION
// // Check file size - special files in /proc have zero size and need to be // handled by the generic read path. //	WITHOUT_CLASSIFICATION	0.9999986488108232	WITHOUT_CLASSIFICATION	1.3511891767455262E-6	IMPLEMENTATION
// // Copy any buffered data (including ungetc byte) //	WITHOUT_CLASSIFICATION	0.9999897508385529	WITHOUT_CLASSIFICATION	1.0249161447142103E-5	IMPLEMENTATION
// // Now read unbuffered directly from the file //	WITHOUT_CLASSIFICATION	0.999993866022089	WITHOUT_CLASSIFICATION	6.133977911090556E-6	IMPLEMENTATION
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999578407713239	WITHOUT_CLASSIFICATION	4.215922867613264E-5	IMPLEMENTATION
// // Need to clamp source (buffer) size to avoid overrun //	WITHOUT_CLASSIFICATION	0.9999672701024537	WITHOUT_CLASSIFICATION	3.272989754622293E-5	IMPLEMENTATION
// not closing from finalize	WITHOUT_CLASSIFICATION	0.9996326791798265	WITHOUT_CLASSIFICATION	3.673208201735772E-4	IMPLEMENTATION
// clear runtime so it doesn't get stuck in memory (JRUBY-2933)	WITHOUT_CLASSIFICATION	0.999998868639745	WITHOUT_CLASSIFICATION	1.1313602550107334E-6	IMPLEMENTATION
// silence	WITHOUT_CLASSIFICATION	0.9999935752659732	WITHOUT_CLASSIFICATION	6.424734026853922E-6	IMPLEMENTATION
// silence	WITHOUT_CLASSIFICATION	0.9999935752659732	WITHOUT_CLASSIFICATION	6.424734026853922E-6	IMPLEMENTATION
// Don't bother	WITHOUT_CLASSIFICATION	0.9981995039641345	WITHOUT_CLASSIFICATION	0.0018004960358654384	IMPLEMENTATION
// Don't bother	WITHOUT_CLASSIFICATION	0.9981995039641345	WITHOUT_CLASSIFICATION	0.0018004960358654384	IMPLEMENTATION
// For Sockets, only write as much as will fit.	WITHOUT_CLASSIFICATION	0.9999978056339864	WITHOUT_CLASSIFICATION	2.1943660135525293E-6	IMPLEMENTATION
// Correct position for read / write buffering (we could invalidate, but expensive)	WITHOUT_CLASSIFICATION	0.9999983534664525	WITHOUT_CLASSIFICATION	1.6465335474955844E-6	IMPLEMENTATION
// Adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999946011790698	WITHOUT_CLASSIFICATION	5.3988209302007555E-6	IMPLEMENTATION
// for SEEK_CUR, need to adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999746701211571	WITHOUT_CLASSIFICATION	2.532987884284844E-5	IMPLEMENTATION
// libc flushes writes on any read from the actual file, so we flush here	WITHOUT_CLASSIFICATION	0.9999934603448153	WITHOUT_CLASSIFICATION	6.539655184805069E-6	IMPLEMENTATION
// we have read ahead, and need to back up	WITHOUT_CLASSIFICATION	0.9998629090444249	WITHOUT_CLASSIFICATION	1.370909555750721E-4	IMPLEMENTATION
// 128K seems to be the minimum at which the stat+seek is faster than reallocation	WITHOUT_CLASSIFICATION	0.9999951858361972	WITHOUT_CLASSIFICATION	4.81416380280701E-6	IMPLEMENTATION
// // limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations //	WITHOUT_CLASSIFICATION	0.999960654029782	WITHOUT_CLASSIFICATION	3.9345970218037885E-5	IMPLEMENTATION
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9989350761948479	WITHOUT_CLASSIFICATION	0.0010649238051520784	IMPLEMENTATION
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.999988161710587	WITHOUT_CLASSIFICATION	1.1838289413000054E-5	IMPLEMENTATION
// // Avoid double-copying for reads that are larger than the buffer size //	WITHOUT_CLASSIFICATION	0.999993419613671	WITHOUT_CLASSIFICATION	6.580386329047001E-6	IMPLEMENTATION
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999895876041238	WITHOUT_CLASSIFICATION	1.041239587625389E-5	IMPLEMENTATION
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999895876041238	WITHOUT_CLASSIFICATION	1.041239587625389E-5	IMPLEMENTATION
// // Avoid double-copying for reads that are larger than the buffer size, or // the destination is a direct buffer. //	WITHOUT_CLASSIFICATION	0.9999872610377742	WITHOUT_CLASSIFICATION	1.2738962225672468E-5	IMPLEMENTATION
// // We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating // a huge temporary native buffer, when doing reads into a heap buffer // If the dst buffer is direct, then no need to limit. //	WITHOUT_CLASSIFICATION	0.9999959363202262	WITHOUT_CLASSIFICATION	4.063679773789168E-6	IMPLEMENTATION
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999732333751854	WITHOUT_CLASSIFICATION	2.676662481450314E-5	IMPLEMENTATION
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999732333751854	WITHOUT_CLASSIFICATION	2.676662481450314E-5	IMPLEMENTATION
// Doesn't fit in buffer. Write immediately. // ensure nothing left to write	WITHOUT_CLASSIFICATION	0.9999997002468305	WITHOUT_CLASSIFICATION	2.997531695926479E-7	IMPLEMENTATION
// truncate can't lengthen files, so we save position, seek/write, and go back	WITHOUT_CLASSIFICATION	0.9999611712288248	WITHOUT_CLASSIFICATION	3.882877117526978E-5	IMPLEMENTATION
// how far ahead we are when reading	WITHOUT_CLASSIFICATION	0.9997674995420048	WITHOUT_CLASSIFICATION	2.32500457995104E-4	IMPLEMENTATION
// if the read buffer is ahead, back up	WITHOUT_CLASSIFICATION	0.9999979400449726	WITHOUT_CLASSIFICATION	2.0599550274426723E-6	IMPLEMENTATION
// close without removing from finalizers	WITHOUT_CLASSIFICATION	0.9999953058920451	WITHOUT_CLASSIFICATION	4.694107954939567E-6	IMPLEMENTATION
// putting a bit back, so we're not at EOF anymore	WITHOUT_CLASSIFICATION	0.9999889421977138	WITHOUT_CLASSIFICATION	1.1057802286068634E-5	IMPLEMENTATION
// save the ungot	WITHOUT_CLASSIFICATION	0.9998128958913944	WITHOUT_CLASSIFICATION	1.8710410860548323E-4	IMPLEMENTATION
// otherwise, we try an unbuffered read to get whatever's available	WITHOUT_CLASSIFICATION	0.9999833982901216	WITHOUT_CLASSIFICATION	1.6601709878392284E-5	IMPLEMENTATION
// ignore this; select() will set the correct mode when it is finished	WITHOUT_CLASSIFICATION	0.9999958605755727	WITHOUT_CLASSIFICATION	4.139424427245145E-6	IMPLEMENTATION
// flush first	WITHOUT_CLASSIFICATION	0.9997733722688842	WITHOUT_CLASSIFICATION	2.2662773111587208E-4	IMPLEMENTATION
// // Wake up any channels that became unblocked //	WITHOUT_CLASSIFICATION	0.9999499377762591	WITHOUT_CLASSIFICATION	5.0062223740982816E-5	IMPLEMENTATION
// // Register any new blocking I/O requests //	WITHOUT_CLASSIFICATION	0.9994247790803032	WITHOUT_CLASSIFICATION	5.75220919696701E-4	IMPLEMENTATION
// Now clear out any previously selected channels	WITHOUT_CLASSIFICATION	0.9999853931172742	WITHOUT_CLASSIFICATION	1.4606882725931852E-5	IMPLEMENTATION
// // Wait for I/O on any channel //	WITHOUT_CLASSIFICATION	0.9999399907017089	WITHOUT_CLASSIFICATION	6.0009298291038694E-5	IMPLEMENTATION
// Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'	WITHOUT_CLASSIFICATION	0.9999929476218995	WITHOUT_CLASSIFICATION	7.0523781004387285E-6	IMPLEMENTATION
// Java requires "w" for creating a file that does not exist	WITHOUT_CLASSIFICATION	0.9998568184971425	WITHOUT_CLASSIFICATION	1.4318150285759932E-4	IMPLEMENTATION
// seek to force underlying buffer to flush	WITHOUT_CLASSIFICATION	0.9999284743285703	WITHOUT_CLASSIFICATION	7.152567142958262E-5	IMPLEMENTATION
// seek to force read buffer to invalidate	WITHOUT_CLASSIFICATION	0.999948051162623	WITHOUT_CLASSIFICATION	5.1948837376988054E-5	IMPLEMENTATION
/*        result = eval("arr = Array::['c', 200]; p arr");        assertEquals("[\"c\", 200]", result);        result = eval("arr = Array.['d', 200]; p arr");        assertEquals("[\"d\", 200]", result);        */	WITHOUT_CLASSIFICATION	0.9999779889187228	WITHOUT_CLASSIFICATION	2.201108127722282E-5	IMPLEMENTATION
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999187133887962	WITHOUT_CLASSIFICATION	8.128661120382421E-5	IMPLEMENTATION
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.8454436219742767	IMPLEMENTATION	0.15455637802572333	WITHOUT_CLASSIFICATION
// make sure the pipe stream is set to null	WITHOUT_CLASSIFICATION	0.9999635603487084	WITHOUT_CLASSIFICATION	3.643965129156845E-5	IMPLEMENTATION
// make sure the main stream is set to null	WITHOUT_CLASSIFICATION	0.999919214861408	WITHOUT_CLASSIFICATION	8.078513859191279E-5	IMPLEMENTATION
// first try our custom-generated Unsafe	WITHOUT_CLASSIFICATION	0.9999723202513934	WITHOUT_CLASSIFICATION	2.7679748606517495E-5	IMPLEMENTATION
// then try Sun's Unsafe	WITHOUT_CLASSIFICATION	0.9999726807152214	WITHOUT_CLASSIFICATION	2.7319284778657318E-5	IMPLEMENTATION
// if we get here, the class and field exist; construct our Unsafe impl // that calls it directly	WITHOUT_CLASSIFICATION	0.9999934634124419	WITHOUT_CLASSIFICATION	6.536587558163459E-6	IMPLEMENTATION
// else leave it null	WITHOUT_CLASSIFICATION	0.9999246491915862	WITHOUT_CLASSIFICATION	7.535080841376304E-5	IMPLEMENTATION
// TypeMatcher	WITHOUT_CLASSIFICATION	0.9996615266859028	WITHOUT_CLASSIFICATION	3.3847331409717497E-4	IMPLEMENTATION
// This is now needed, since module Java // isn't in by default	WITHOUT_CLASSIFICATION	0.9999999654324135	WITHOUT_CLASSIFICATION	3.456758650134122E-8	IMPLEMENTATION
// Iterate over the RubyHash keySet, simultaneously iterating over the values()	WITHOUT_CLASSIFICATION	0.9999479815161867	WITHOUT_CLASSIFICATION	5.2018483813293196E-5	IMPLEMENTATION
// Get the value from the map via the key	WITHOUT_CLASSIFICATION	0.9999982018127446	WITHOUT_CLASSIFICATION	1.7981872554506476E-6	IMPLEMENTATION
// Get the value from the map via the values iterator	WITHOUT_CLASSIFICATION	0.9999999196314002	WITHOUT_CLASSIFICATION	8.036859988624112E-8	IMPLEMENTATION
// Check the 2 values obtained via different means	WITHOUT_CLASSIFICATION	0.9999992681142506	WITHOUT_CLASSIFICATION	7.318857494229434E-7	IMPLEMENTATION
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999979880482904	WITHOUT_CLASSIFICATION	2.011951709564583E-6	IMPLEMENTATION
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999979880482904	WITHOUT_CLASSIFICATION	2.011951709564583E-6	IMPLEMENTATION
// Check the entry.setValue values come back out ok	WITHOUT_CLASSIFICATION	0.9999504446900421	WITHOUT_CLASSIFICATION	4.955530995785389E-5	IMPLEMENTATION
// If we're running from within an IDE we may not have // the .rb files in our classpath. Try to find them // in the filesystem instead.	WITHOUT_CLASSIFICATION	0.9999798471498631	WITHOUT_CLASSIFICATION	2.0152850136866282E-5	IMPLEMENTATION
//assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); //assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));	WITHOUT_CLASSIFICATION	0.9992740441801374	WITHOUT_CLASSIFICATION	7.259558198626152E-4	IMPLEMENTATION
// Init	WITHOUT_CLASSIFICATION	0.9999937064628616	WITHOUT_CLASSIFICATION	6.293537138331993E-6	IMPLEMENTATION
// Block	WITHOUT_CLASSIFICATION	0.9999935761832465	WITHOUT_CLASSIFICATION	6.423816753548659E-6	IMPLEMENTATION
// Copy constructor	WITHOUT_CLASSIFICATION	0.9996144175745979	WITHOUT_CLASSIFICATION	3.8558242540205097E-4	IMPLEMENTATION
// presumably this require should fail	WITHOUT_CLASSIFICATION	0.9991013835224034	WITHOUT_CLASSIFICATION	8.98616477596594E-4	IMPLEMENTATION
// JRUBY-646 // presumably this require should fail	WITHOUT_CLASSIFICATION	0.9991013835224034	WITHOUT_CLASSIFICATION	8.98616477596594E-4	IMPLEMENTATION
// Test that requiring a normal Java class raises an error (JRUBY-3214	WITHOUT_CLASSIFICATION	0.9999781150543625	WITHOUT_CLASSIFICATION	2.1884945637469377E-5	IMPLEMENTATION
// ok	WITHOUT_CLASSIFICATION	0.9999807943608621	WITHOUT_CLASSIFICATION	1.9205639137918395E-5	IMPLEMENTATION
// Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods // from Ruby so they are not really unused).	WITHOUT_CLASSIFICATION	0.9999976489655035	WITHOUT_CLASSIFICATION	2.351034496506551E-6	IMPLEMENTATION
//load should work several times in a row	WITHOUT_CLASSIFICATION	0.9999689033061057	WITHOUT_CLASSIFICATION	3.109669389432634E-5	IMPLEMENTATION
//reset the $loadTestvar	WITHOUT_CLASSIFICATION	0.9998174080616138	WITHOUT_CLASSIFICATION	1.8259193838613433E-4	IMPLEMENTATION
//call throwException via JRuby	WITHOUT_CLASSIFICATION	0.9997193925113498	WITHOUT_CLASSIFICATION	2.8060748865023827E-4	IMPLEMENTATION
// Notify the calling thread that we're about to go to sleep the first time	WITHOUT_CLASSIFICATION	0.9999964855297105	WITHOUT_CLASSIFICATION	3.5144702894970547E-6	IMPLEMENTATION
// wait for the go signal	WITHOUT_CLASSIFICATION	0.9999759750052504	WITHOUT_CLASSIFICATION	2.402499474961058E-5	IMPLEMENTATION
// run ten separate calls into Ruby, with delay and explicit GC	WITHOUT_CLASSIFICATION	0.999983876573949	WITHOUT_CLASSIFICATION	1.6123426050911274E-5	IMPLEMENTATION
// wait until thread has initialized	WITHOUT_CLASSIFICATION	0.9999812937682254	WITHOUT_CLASSIFICATION	1.8706231774665216E-5	IMPLEMENTATION
// notify thread to proceed	WITHOUT_CLASSIFICATION	0.9999419615718379	WITHOUT_CLASSIFICATION	5.80384281621555E-5	IMPLEMENTATION
// wait until thread has completed	WITHOUT_CLASSIFICATION	0.9999704676657998	WITHOUT_CLASSIFICATION	2.953233420020315E-5	IMPLEMENTATION
// we do preand post load outside the "body" versions to pre-prepare // and pre-push the dynamic scope we need for lastline	WITHOUT_CLASSIFICATION	0.9999602826790933	WITHOUT_CLASSIFICATION	3.9717320906713115E-5	IMPLEMENTATION
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999992028038636	WITHOUT_CLASSIFICATION	7.971961363834143E-7	IMPLEMENTATION
// MRI behavior: raise ArgumentError for 'unknown command' before // checking number of args.	WITHOUT_CLASSIFICATION	0.9999723484577147	WITHOUT_CLASSIFICATION	2.7651542285382042E-5	IMPLEMENTATION
// if any exceptions were raised, we fail	WITHOUT_CLASSIFICATION	0.99906133403006	WITHOUT_CLASSIFICATION	9.386659699398359E-4	IMPLEMENTATION
// there should only be one more thread in thread group than before we started	WITHOUT_CLASSIFICATION	0.9997571469200903	WITHOUT_CLASSIFICATION	2.428530799096075E-4	IMPLEMENTATION
// construct a new cache with thread's classloader and no limit	WITHOUT_CLASSIFICATION	0.9994024773413713	WITHOUT_CLASSIFICATION	5.975226586286781E-4	IMPLEMENTATION
//        Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); //        Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();	WITHOUT_CLASSIFICATION	0.99988852386625	WITHOUT_CLASSIFICATION	1.1147613374995538E-4	IMPLEMENTATION
//        assertSame(script1, script2);	WITHOUT_CLASSIFICATION	0.999912663055327	WITHOUT_CLASSIFICATION	8.733694467299634E-5	IMPLEMENTATION
// void methods should work	WITHOUT_CLASSIFICATION	0.9999156201293374	WITHOUT_CLASSIFICATION	8.437987066255837E-5	IMPLEMENTATION
// methods with required = 4 or higher should bind and be callable using reflection // JRUBY-3649	WITHOUT_CLASSIFICATION	0.9997784026513705	WITHOUT_CLASSIFICATION	2.2159734862946075E-4	IMPLEMENTATION
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999755069745393	WITHOUT_CLASSIFICATION	2.449302546077365E-5	IMPLEMENTATION
// Ensure we have a new interpreter for each test. Previous we were using the //  same interpreter which caused problems as soon as one test failed.	WITHOUT_CLASSIFICATION	0.9999953079426993	WITHOUT_CLASSIFICATION	4.6920573006472865E-6	IMPLEMENTATION
// Without a flush Ant will miss some of our output	WITHOUT_CLASSIFICATION	0.9999976739347056	WITHOUT_CLASSIFICATION	2.326065294463245E-6	IMPLEMENTATION
// assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());	WITHOUT_CLASSIFICATION	0.999918508280422	WITHOUT_CLASSIFICATION	8.14917195780652E-5	IMPLEMENTATION
//        int n = 10;	WITHOUT_CLASSIFICATION	0.99995533120934	WITHOUT_CLASSIFICATION	4.466879066006379E-5	IMPLEMENTATION
// there might be more test classes in a single file, so we iterate over them	WITHOUT_CLASSIFICATION	0.9999973336881192	WITHOUT_CLASSIFICATION	2.666311880857713E-6	IMPLEMENTATION
//No ClassCastException!	WITHOUT_CLASSIFICATION	0.9998032029031274	WITHOUT_CLASSIFICATION	1.9679709687272546E-4	IMPLEMENTATION
// value equality	WITHOUT_CLASSIFICATION	0.9999162130045505	WITHOUT_CLASSIFICATION	8.378699544950343E-5	IMPLEMENTATION
// identity equality	WITHOUT_CLASSIFICATION	0.9986966251943593	WITHOUT_CLASSIFICATION	0.0013033748056407231	IMPLEMENTATION
// bench straight-up integer fib(30)	WITHOUT_CLASSIFICATION	0.9999196506007132	WITHOUT_CLASSIFICATION	8.034939928688232E-5	IMPLEMENTATION
// bench Integer fib	WITHOUT_CLASSIFICATION	0.9996635525192892	WITHOUT_CLASSIFICATION	3.3644748071087836E-4	IMPLEMENTATION
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999438606165095	WITHOUT_CLASSIFICATION	5.6139383490612176E-5	IMPLEMENTATION
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999438606165095	WITHOUT_CLASSIFICATION	5.6139383490612176E-5	IMPLEMENTATION
// bench fixnum-boxed fib	WITHOUT_CLASSIFICATION	0.9999438606165095	WITHOUT_CLASSIFICATION	5.6139383490612176E-5	IMPLEMENTATION
// bench straight-up long fib(30)	WITHOUT_CLASSIFICATION	0.9999473085760097	WITHOUT_CLASSIFICATION	5.269142399028903E-5	IMPLEMENTATION
// bench Long fib	WITHOUT_CLASSIFICATION	0.9996666124555149	WITHOUT_CLASSIFICATION	3.3338754448507767E-4	IMPLEMENTATION
// skip this one, probably no 'ls' (windows)	WITHOUT_CLASSIFICATION	0.9999075835821928	WITHOUT_CLASSIFICATION	9.241641780724173E-5	IMPLEMENTATION
// start off with a neutral parent	WITHOUT_CLASSIFICATION	0.9999880919612525	WITHOUT_CLASSIFICATION	1.190803874747678E-5	IMPLEMENTATION
/*            public class Hello {                public static String getMessage() {                    return ".....";                }            }            */	WITHOUT_CLASSIFICATION	0.9999995649840292	WITHOUT_CLASSIFICATION	4.350159708828282E-7	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.999964799826609	WITHOUT_CLASSIFICATION	3.520017339092344E-5	IMPLEMENTATION
// Note: We can't use file.exists() to check whether the symlink // exists or not, because that method returns false for existing // but broken symlink. So, we try without the existence check, // but in the try-catch block. // MRI behavior: symlink? on broken symlink should return true.	WITHOUT_CLASSIFICATION	0.9999993399478129	WITHOUT_CLASSIFICATION	6.600521872110691E-7	IMPLEMENTATION
// We are creating a new IO object that shares the same // IOHandler (and fileno).	WITHOUT_CLASSIFICATION	0.9999951354434297	WITHOUT_CLASSIFICATION	4.864556570329982E-6	IMPLEMENTATION
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999961342104161	WITHOUT_CLASSIFICATION	3.865789583921906E-6	IMPLEMENTATION
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9996983594805002	WITHOUT_CLASSIFICATION	3.016405194996755E-4	IMPLEMENTATION
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9998544672260199	WITHOUT_CLASSIFICATION	1.4553277397999856E-4	IMPLEMENTATION
// Translate "x || y" --> "x = (is_true(x) ? x : y)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, true, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.999599593051882	WITHOUT_CLASSIFICATION	4.00406948118113E-4	IMPLEMENTATION
// // Force the client socket to be blocking //	WITHOUT_CLASSIFICATION	0.9999695050185864	WITHOUT_CLASSIFICATION	3.0494981413560648E-5	IMPLEMENTATION
// Additional context surrounding tokens that both the lexer and // grammar use.	WITHOUT_CLASSIFICATION	0.9999383035294701	WITHOUT_CLASSIFICATION	6.16964705298598E-5	IMPLEMENTATION
// Enebo:  c can never be antrhign but '.' // Why did I put this here?	WITHOUT_CLASSIFICATION	0.9369546704431944	WITHOUT_CLASSIFICATION	0.06304532955680567	IMPLEMENTATION
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9994390048690447	WITHOUT_CLASSIFICATION	5.609951309553859E-4	IMPLEMENTATION
//[C,C] //[C, boolean]	WITHOUT_CLASSIFICATION	0.9997921865822822	WITHOUT_CLASSIFICATION	2.078134177178416E-4	IMPLEMENTATION
// Label for the start of the closure (used to implement redo) // Label for the end of the closure (used to implement retry)	WITHOUT_CLASSIFICATION	0.9984393783615743	WITHOUT_CLASSIFICATION	0.0015606216384257221	IMPLEMENTATION
// ignore; job was cancelled // FIXME: is this ok?	WITHOUT_CLASSIFICATION	0.9897269764034559	WITHOUT_CLASSIFICATION	0.010273023596544171	IMPLEMENTATION
//                    // check arity //                    checkArity(mv, scope);	WITHOUT_CLASSIFICATION	0.9998485791170489	WITHOUT_CLASSIFICATION	1.514208829509693E-4	IMPLEMENTATION
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9998766245901746	WITHOUT_CLASSIFICATION	1.233754098253412E-4	IMPLEMENTATION
// we take the first method found as our "n" method, since for any non-specific // arity they'll all error the same. If an actual "n" method is created, we // use that.	WITHOUT_CLASSIFICATION	0.9999981713022944	WITHOUT_CLASSIFICATION	1.8286977055439624E-6	IMPLEMENTATION
// Used by our duck-typification of Proc into interface types, to allow // coercing a simple proc into an interface parameter.	WITHOUT_CLASSIFICATION	0.9999992828402077	WITHOUT_CLASSIFICATION	7.171597923503598E-7	IMPLEMENTATION
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999974513139236	WITHOUT_CLASSIFICATION	2.548686076476615E-6	IMPLEMENTATION
// it's either as converted as we can make it via above logic or it's // not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9812867737886307	WITHOUT_CLASSIFICATION	0.018713226211369286	IMPLEMENTATION
// package scheme 2: separate module for each full package name, constructed  // from the camel-cased package segments: Java::JavaLang::Object, 	WITHOUT_CLASSIFICATION	0.9999899912606189	WITHOUT_CLASSIFICATION	1.000873938101566E-5	IMPLEMENTATION
// // construct the proxy method //	WITHOUT_CLASSIFICATION	0.999894404878547	WITHOUT_CLASSIFICATION	1.0559512145301225E-4	IMPLEMENTATION
// line 159 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9998780389253518	WITHOUT_CLASSIFICATION	1.2196107464825248E-4	IMPLEMENTATION
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999821632006567	WITHOUT_CLASSIFICATION	1.7836799343306183E-5	IMPLEMENTATION
// line 152 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9998780389253518	WITHOUT_CLASSIFICATION	1.2196107464825248E-4	IMPLEMENTATION
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999983940117507	WITHOUT_CLASSIFICATION	1.6059882493507386E-6	IMPLEMENTATION
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999821632006567	WITHOUT_CLASSIFICATION	1.7836799343306183E-5	IMPLEMENTATION
// We only need to pass in current scope if we are evaluating as a block (which // is only done for evals).  We need to pass this in so that we can appropriately scope // down to captured scopes when we are parsing.	WITHOUT_CLASSIFICATION	0.9999998832827932	WITHOUT_CLASSIFICATION	1.1671720678700193E-7	IMPLEMENTATION
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999975227454085	WITHOUT_CLASSIFICATION	2.4772545914121104E-6	IMPLEMENTATION
// A place to store that special hiding space that bindings need to implement things like: // eval("a = 1", binding); eval("p a").  All binding instances must get access to this // hidden shared scope.  We store it here.  This will be null if no binding has yet // been called.	WITHOUT_CLASSIFICATION	0.5828403553860532	IMPLEMENTATION	0.4171596446139469	WITHOUT_CLASSIFICATION
// TODO: make it 16 now ? // MUST be power of 2!	WITHOUT_CLASSIFICATION	0.5917231834910218	IMPLEMENTATION	0.4082768165089781	WITHOUT_CLASSIFICATION
// check visibility // dup method	WITHOUT_CLASSIFICATION	0.9996049066089022	WITHOUT_CLASSIFICATION	3.950933910977081E-4	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9973747953336748	WITHOUT_CLASSIFICATION	0.002625204666325261	IMPLEMENTATION
// unsigned int, native // unsigned long, native	WITHOUT_CLASSIFICATION	0.9998022596088342	WITHOUT_CLASSIFICATION	1.977403911659396E-4	IMPLEMENTATION
//need padding //I'm fairly sure there is a library call to create a //string filled with a given char with a given length but I couldn't find it	WITHOUT_CLASSIFICATION	0.999788599571789	WITHOUT_CLASSIFICATION	2.114004282109663E-4	IMPLEMENTATION
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999937226525537	WITHOUT_CLASSIFICATION	6.2773474462885456E-6	IMPLEMENTATION
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999187133887962	WITHOUT_CLASSIFICATION	8.128661120382421E-5	IMPLEMENTATION
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9996502329441257	WITHOUT_CLASSIFICATION	3.497670558743334E-4	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9973159886132309	WITHOUT_CLASSIFICATION	0.0026840113867691753	IMPLEMENTATION
// Estimate the square root with the foremost 62 bits of squarD // bi and scale are a tandem	WITHOUT_CLASSIFICATION	0.9999891004305825	WITHOUT_CLASSIFICATION	1.0899569417474401E-5	IMPLEMENTATION
// captures // begin and end are used when not groups defined // source string	WITHOUT_CLASSIFICATION	0.9999974007332302	WITHOUT_CLASSIFICATION	2.5992667698577656E-6	IMPLEMENTATION
// // INSTANCE VARIABLE RUBY METHODS //	WITHOUT_CLASSIFICATION	0.9999190358542113	WITHOUT_CLASSIFICATION	8.09641457887461E-5	IMPLEMENTATION
// switch // while	WITHOUT_CLASSIFICATION	0.9998391365583319	WITHOUT_CLASSIFICATION	1.6086344166821713E-4	IMPLEMENTATION
// For nodes do not have their own scope so we pass null to indicate this. // 'For's are implemented as blocks in evaluation, but they have no scope so we // just deal with this lack of scope throughout its lifespan.  We should probably // change the way this works to get rid of multiple null checks.	WITHOUT_CLASSIFICATION	0.9994165574036817	WITHOUT_CLASSIFICATION	5.834425963182359E-4	IMPLEMENTATION
// This field is used during argument processing to avoid putting RubyArray // instances that are purely for utility purposes into ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999994448520012	WITHOUT_CLASSIFICATION	5.551479987179627E-7	IMPLEMENTATION
// Parent container for this context (can be dynamic!!) // If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure // List of IR instructions for this method	WITHOUT_CLASSIFICATION	0.9999612222254287	WITHOUT_CLASSIFICATION	3.877777457133952E-5	IMPLEMENTATION
// Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = false    //    beq(v1, false, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999975837925048	WITHOUT_CLASSIFICATION	2.416207495106694E-6	IMPLEMENTATION
// expected	WITHOUT_CLASSIFICATION	0.9997879146624337	WITHOUT_CLASSIFICATION	2.120853375664397E-4	IMPLEMENTATION
// Do nothing	WITHOUT_CLASSIFICATION	0.9998348116929789	WITHOUT_CLASSIFICATION	1.6518830702105442E-4	IMPLEMENTATION
// constructor	WITHOUT_CLASSIFICATION	0.9995840966825685	WITHOUT_CLASSIFICATION	4.1590331743141163E-4	IMPLEMENTATION
// If a line is followed by a blank line put // it back.	WITHOUT_CLASSIFICATION	0.9999646509863113	WITHOUT_CLASSIFICATION	3.534901368877631E-5	IMPLEMENTATION
/* $>: default output handle */	WITHOUT_CLASSIFICATION	0.9999808389178272	WITHOUT_CLASSIFICATION	1.916108217285832E-5	IMPLEMENTATION
// line 423	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 486	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// Signal uses sun.misc.* classes, this is not allowed // in the security-sensitive environments	WITHOUT_CLASSIFICATION	0.999864673683926	WITHOUT_CLASSIFICATION	1.353263160741015E-4	IMPLEMENTATION
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999961957661424	WITHOUT_CLASSIFICATION	3.80423385765092E-6	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.999903172565998	WITHOUT_CLASSIFICATION	9.682743400195746E-5	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.999903172565998	WITHOUT_CLASSIFICATION	9.682743400195746E-5	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.999993130730412	WITHOUT_CLASSIFICATION	6.869269588076674E-6	IMPLEMENTATION
// if there's no receiver, evaluate and pass in the superclass, or // pass self if it no superclass	WITHOUT_CLASSIFICATION	0.9999913839575603	WITHOUT_CLASSIFICATION	8.616042439830059E-6	IMPLEMENTATION
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9997739757899128	WITHOUT_CLASSIFICATION	2.2602421008718456E-4	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.8953995793687894	IMPLEMENTATION	0.10460042063121065	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.8953995793687894	IMPLEMENTATION	0.10460042063121065	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.8953995793687894	IMPLEMENTATION	0.10460042063121065	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.8953995793687894	IMPLEMENTATION	0.10460042063121065	WITHOUT_CLASSIFICATION
// Decrease value to hit upper range.  	WITHOUT_CLASSIFICATION	0.999987862030004	WITHOUT_CLASSIFICATION	1.2137969996032985E-5	IMPLEMENTATION
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999167069159948	WITHOUT_CLASSIFICATION	8.32930840052452E-5	IMPLEMENTATION
// "else" body	WITHOUT_CLASSIFICATION	0.9999379862622725	WITHOUT_CLASSIFICATION	6.201373772745605E-5	IMPLEMENTATION
// done // done // done // Nothing to do for 1.8 // done // done // done // done // done // done // done? // done // done // done // done // done // done // done // done // done // done // done //            case DEFINEDNODE: return buildDefined(node, m); // Incomplete // done // done // done // done // done // done // done // done //            case ENSURENODE: return buildEnsureNode(node, m); // DEFERRED // done // done // done // done //            case FLIPNODE: return buildFlip(node, m); // SSS FIXME: What code generates this AST? // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done? // done // done // done // done // done // done -- partially //            case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); // DEFERRED SSS FIXME: What code generates this AST? // done //            case POSTEXENODE: return buildPostExe(node, m); // DEFERRED //            case PREEXENODE: return buildPreExe(node, m); // DEFERRED // done?? // done	WITHOUT_CLASSIFICATION	0.9306025142570391	WITHOUT_CLASSIFICATION	0.06939748574296094	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9996615266859028	WITHOUT_CLASSIFICATION	3.3847331409717497E-4	IMPLEMENTATION
/* $+: string matches last paren. */	WITHOUT_CLASSIFICATION	0.9999999156052743	WITHOUT_CLASSIFICATION	8.439472569055202E-8	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999984024355941	WITHOUT_CLASSIFICATION	1.597564405819391E-6	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999984024355941	WITHOUT_CLASSIFICATION	1.597564405819391E-6	IMPLEMENTATION
// Ruby code frequently uses a platform check to choose "NUL:" on windows // but since that check doesn't work well on JRuby, we help it out	WITHOUT_CLASSIFICATION	0.9999997232448827	WITHOUT_CLASSIFICATION	2.7675511723670904E-7	IMPLEMENTATION
/* 10! */	WITHOUT_CLASSIFICATION	0.9999987745645751	WITHOUT_CLASSIFICATION	1.225435424934396E-6	IMPLEMENTATION
//            case RESCUENODE: return buildRescue(node, m); // DEFERRED //            case RETRYNODE: return buildRetry(node, m); // DEFERRED // done	WITHOUT_CLASSIFICATION	0.999920167052292	WITHOUT_CLASSIFICATION	7.983294770790356E-5	IMPLEMENTATION
// Is this instruction live or dead?  During optimization passes, if this instruction // causes no side-effects and the result of the instruction is not needed by anyone else, // we can remove this instruction altogether without affecting program correctness.	WITHOUT_CLASSIFICATION	0.5341284129980527	IMPLEMENTATION	0.46587158700194736	WITHOUT_CLASSIFICATION
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999773730983106	WITHOUT_CLASSIFICATION	2.262690168945375E-5	IMPLEMENTATION
// first, iterate over all required args	WITHOUT_CLASSIFICATION	0.9999348322336067	WITHOUT_CLASSIFICATION	6.516776639331155E-5	IMPLEMENTATION
// // Determine if the parameter might be passed as a 32bit int parameter. // This just applies to buffer/pointer types. //	WITHOUT_CLASSIFICATION	0.9999995263965825	WITHOUT_CLASSIFICATION	4.736034174470146E-7	IMPLEMENTATION
//Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());	WITHOUT_CLASSIFICATION	0.9997294436632194	WITHOUT_CLASSIFICATION	2.7055633678067456E-4	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999983940117507	WITHOUT_CLASSIFICATION	1.6059882493507386E-6	IMPLEMENTATION
// line 449	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 495	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// Management/monitoring	WITHOUT_CLASSIFICATION	0.9999438606165095	WITHOUT_CLASSIFICATION	5.6139383490612176E-5	IMPLEMENTATION
// if we've found the last char of the separator, // and we've found at least as many characters as separator length, // and the last n characters of our buffer match the separator, we're done	WITHOUT_CLASSIFICATION	0.999999865610185	WITHOUT_CLASSIFICATION	1.3438981504107736E-7	IMPLEMENTATION
/* 14! */	WITHOUT_CLASSIFICATION	0.9999987745645751	WITHOUT_CLASSIFICATION	1.225435424934396E-6	IMPLEMENTATION
// Process any set of annotations // No supported options	WITHOUT_CLASSIFICATION	0.9999982557411571	WITHOUT_CLASSIFICATION	1.744258842868899E-6	IMPLEMENTATION
// add to the jitted methods set	WITHOUT_CLASSIFICATION	0.9998348129925919	WITHOUT_CLASSIFICATION	1.6518700740815616E-4	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.9999982038105057	WITHOUT_CLASSIFICATION	1.7961894942456203E-6	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.9999982038105057	WITHOUT_CLASSIFICATION	1.7961894942456203E-6	IMPLEMENTATION
//            case SCLASSNODE: return buildSClass(node, m); // DEFERRED // done // done // done // done // done // done // done // done //            case UNDEFNODE: return buildUndef(node, m); // DEFERRED // done //            case VALIASNODE: return buildVAlias(node, m); // DEFERRED // done // done	WITHOUT_CLASSIFICATION	0.999920167052292	WITHOUT_CLASSIFICATION	7.98329477079037E-5	IMPLEMENTATION
// // Adding a post-invoke for the cb result serves to both keep it alive // until after the function returns, and allows us to clean up the native // trampoline early, instead of letting them accumulate until a GC run //	WITHOUT_CLASSIFICATION	0.9999405188849456	WITHOUT_CLASSIFICATION	5.9481115054387745E-5	IMPLEMENTATION
/* The Java method doesn't care what class it is, but we need to               know what to convert it to, so we use the object's own class.               If that doesn't help, we use String to force a call to the               object's "to_s" method. */	WITHOUT_CLASSIFICATION	0.9880227387224361	WITHOUT_CLASSIFICATION	0.011977261277563963	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.9999819159423913	WITHOUT_CLASSIFICATION	1.808405760875235E-5	IMPLEMENTATION
// Atomic integers for symbol and method IDs	WITHOUT_CLASSIFICATION	0.9998995255571217	WITHOUT_CLASSIFICATION	1.0047444287836144E-4	IMPLEMENTATION
/* 18! */	WITHOUT_CLASSIFICATION	0.9999987745645751	WITHOUT_CLASSIFICATION	1.225435424934396E-6	IMPLEMENTATION
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9938100651640301	WITHOUT_CLASSIFICATION	0.006189934835969858	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999629075749968	WITHOUT_CLASSIFICATION	3.709242500320173E-5	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999629075749968	WITHOUT_CLASSIFICATION	3.709242500320173E-5	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999629075749968	WITHOUT_CLASSIFICATION	3.709242500320173E-5	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999629075749968	WITHOUT_CLASSIFICATION	3.709242500320173E-5	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999989904069402	WITHOUT_CLASSIFICATION	1.0095930598270239E-6	IMPLEMENTATION
/*      * This method takes as input a map of operands to their values, and outputs     * the result of this instruction.     *     * If the value map provides a value for any of the instruction's operands     * the expectation is that the operand will be replaced with the simplified value.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify.     *     * @param valueMap Mapping from operands to their simplified values     * @returns simplified result / output of this instruction     */	WITHOUT_CLASSIFICATION	0.9999999999982192	WITHOUT_CLASSIFICATION	1.7808216591073939E-12	IMPLEMENTATION
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.998287653548017	WITHOUT_CLASSIFICATION	0.0017123464519829227	IMPLEMENTATION
// An atomic long for generating DynamicMethod serial numbers	WITHOUT_CLASSIFICATION	0.9999684787801495	WITHOUT_CLASSIFICATION	3.152121985051597E-5	IMPLEMENTATION
// MRI behavior: always check whether the file is writable // or not, even if we are to write 0 bytes.	WITHOUT_CLASSIFICATION	0.9999996714349919	WITHOUT_CLASSIFICATION	3.28565008086205E-7	IMPLEMENTATION
/* 22! */	WITHOUT_CLASSIFICATION	0.9999987745645751	WITHOUT_CLASSIFICATION	1.225435424934396E-6	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.999798486510516	WITHOUT_CLASSIFICATION	2.015134894841066E-4	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999712060739886	WITHOUT_CLASSIFICATION	2.879392601129022E-5	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999712060739886	WITHOUT_CLASSIFICATION	2.879392601129022E-5	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999712060739886	WITHOUT_CLASSIFICATION	2.879392601129022E-5	IMPLEMENTATION
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999913375354013	WITHOUT_CLASSIFICATION	8.662464598608447E-6	IMPLEMENTATION
// Build a new class and add it to the current scope (could be a script / module / class)	WITHOUT_CLASSIFICATION	0.9999863853790596	WITHOUT_CLASSIFICATION	1.3614620940418645E-5	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999780011323868	WITHOUT_CLASSIFICATION	2.1998867613166307E-5	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999780011323868	WITHOUT_CLASSIFICATION	2.1998867613166307E-5	IMPLEMENTATION
// AF_INET	WITHOUT_CLASSIFICATION	0.9999935752659732	WITHOUT_CLASSIFICATION	6.424734026853922E-6	IMPLEMENTATION
//////////////////////////////////////////////////////////////////////////// // Now we provide default impls of a number of signatures. For each arity, // we first generate a non-block version of the method, which just adds // NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can // potentially take a block, to only generate the block-receiving signature // and still avoid arg boxing. // // We then provide default implementations of each block-accepting method // that in turn call the IRubyObject[]+Block version of call. This then // finally falls back on the minimum implementation requirement for // dynamic method handles. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9997863728516613	WITHOUT_CLASSIFICATION	2.1362714833867555E-4	IMPLEMENTATION
// Because we implement Java interfaces now, we need a new === that's // aware of those additional "virtual" supertypes	WITHOUT_CLASSIFICATION	0.9712898390772837	WITHOUT_CLASSIFICATION	0.028710160922716253	IMPLEMENTATION
// BASE64	WITHOUT_CLASSIFICATION	0.9999935752659732	WITHOUT_CLASSIFICATION	6.424734026853922E-6	IMPLEMENTATION
/* note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY         * when value is an integer less than 1.         * We treat 0 as a special case to avoid Domain error.         */	WITHOUT_CLASSIFICATION	0.9999999941818385	WITHOUT_CLASSIFICATION	5.818161449669143E-9	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.9998389246374998	WITHOUT_CLASSIFICATION	1.610753625002779E-4	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999973227422361	WITHOUT_CLASSIFICATION	2.6772577638151137E-6	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999973227422361	WITHOUT_CLASSIFICATION	2.6772577638151137E-6	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999808600731359	WITHOUT_CLASSIFICATION	1.913992686411349E-5	IMPLEMENTATION
// SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode // We won't get here for argument receives!  So, buildDasgn is called for // assignments to block variables within a block.  As far as the IR is concerned, // this is just a simple copy	WITHOUT_CLASSIFICATION	0.9999999907748888	WITHOUT_CLASSIFICATION	9.225111279536886E-9	IMPLEMENTATION
// getSimplifiedOperand returns the value of this operand, fully simplified // getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away // // The value is used during optimizations and propagated through the IR.  But, it is thrown away after that. // But, the operand form is used for constructing the compound objects represented by the operand. // // Example: a = [1], b = [3,4], c = [a,b], d = [2,c] //   -- getValue(c) = [1,[3,4]];     getSimplifiedOperand(c) = [1, b] //   -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] // // Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. // So, if contents of a or b is modified, the "simplified value"s of c and d also change!  This difference // is captured by these two methods.	WITHOUT_CLASSIFICATION	0.9999999998356061	WITHOUT_CLASSIFICATION	1.6439384821645446E-10	IMPLEMENTATION
//IRubyObject protocol = args[4];	WITHOUT_CLASSIFICATION	0.9996899896741382	WITHOUT_CLASSIFICATION	3.1001032586174877E-4	IMPLEMENTATION
// promise to implement three to N with block	WITHOUT_CLASSIFICATION	0.9959656841794138	WITHOUT_CLASSIFICATION	0.004034315820586292	IMPLEMENTATION
// Ruby's OMG capture all source in a Hash feature // Add each line to buffer when encountering newline or EOF for first time.	WITHOUT_CLASSIFICATION	0.9999993059143671	WITHOUT_CLASSIFICATION	6.94085632822187E-7	IMPLEMENTATION
// carriage return	WITHOUT_CLASSIFICATION	0.9997513989196827	WITHOUT_CLASSIFICATION	2.4860108031730466E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9998584473578936	WITHOUT_CLASSIFICATION	1.415526421064025E-4	IMPLEMENTATION
// String construction routines by NOT byte[] buffer and making the target String shared 	WITHOUT_CLASSIFICATION	0.99999765441953	WITHOUT_CLASSIFICATION	2.3455804700060674E-6	IMPLEMENTATION
// insert all nodes in sequence, hash them in the final instruction // KEY	WITHOUT_CLASSIFICATION	0.9999969156579629	WITHOUT_CLASSIFICATION	3.0843420370363595E-6	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999981809785553	WITHOUT_CLASSIFICATION	1.8190214446144165E-6	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9852221470876416	WITHOUT_CLASSIFICATION	0.014777852912358454	IMPLEMENTATION
// Basic Block id // CFG that this basic block belongs to // All basic blocks have a starting label // List of non-label instructions	WITHOUT_CLASSIFICATION	0.9999927968821788	WITHOUT_CLASSIFICATION	7.203117821267105E-6	IMPLEMENTATION
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9992439464956256	WITHOUT_CLASSIFICATION	7.560535043743292E-4	IMPLEMENTATION
// For all uninitialized specific arities, we defer to the "n" method which // should raise appropriate error in all cases.	WITHOUT_CLASSIFICATION	0.9979420848660832	WITHOUT_CLASSIFICATION	0.0020579151339168017	IMPLEMENTATION
// implement is called to force this class to create stubs for all // methods in the given interface, so they'll show up in the list // of methods and be invocable without passing through method_missing	WITHOUT_CLASSIFICATION	0.9999907406831592	WITHOUT_CLASSIFICATION	9.259316840751466E-6	IMPLEMENTATION
// CASE IR instructions are dummy instructions  // -- all when/then clauses have been converted into if-then-else blocks	WITHOUT_CLASSIFICATION	0.9999861014998542	WITHOUT_CLASSIFICATION	1.3898500145758652E-5	IMPLEMENTATION
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999757881649306	WITHOUT_CLASSIFICATION	2.4211835069386042E-5	IMPLEMENTATION
// leave it null and fall back on our normal invocation logic	WITHOUT_CLASSIFICATION	0.999188592332817	WITHOUT_CLASSIFICATION	8.114076671830279E-4	IMPLEMENTATION
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999979426512036	WITHOUT_CLASSIFICATION	2.0573487965515203E-6	IMPLEMENTATION
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9976150680763849	WITHOUT_CLASSIFICATION	0.002384931923615075	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9998123787788509	WITHOUT_CLASSIFICATION	1.8762122114902795E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9998123787788509	WITHOUT_CLASSIFICATION	1.8762122114902795E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9998123787788509	WITHOUT_CLASSIFICATION	1.8762122114902795E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9998123787788509	WITHOUT_CLASSIFICATION	1.8762122114902795E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9998123787788509	WITHOUT_CLASSIFICATION	1.8762122114902795E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9998123787788509	WITHOUT_CLASSIFICATION	1.8762122114902795E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9998123787788509	WITHOUT_CLASSIFICATION	1.8762122114902795E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9998123787788509	WITHOUT_CLASSIFICATION	1.8762122114902795E-4	IMPLEMENTATION
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999823161227059	WITHOUT_CLASSIFICATION	1.7683877294041246E-5	IMPLEMENTATION
/* fall through */	WITHOUT_CLASSIFICATION	0.9999773822822956	WITHOUT_CLASSIFICATION	2.261771770442368E-5	IMPLEMENTATION
// deal with case when "other" is not a string	WITHOUT_CLASSIFICATION	0.9999711963549641	WITHOUT_CLASSIFICATION	2.8803645035821047E-5	IMPLEMENTATION
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999969452205165	WITHOUT_CLASSIFICATION	3.0547794835514233E-6	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.999964799826609	WITHOUT_CLASSIFICATION	3.520017339092344E-5	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.999964799826609	WITHOUT_CLASSIFICATION	3.520017339092344E-5	IMPLEMENTATION
// store argument count information into scope	WITHOUT_CLASSIFICATION	0.9999975829625884	WITHOUT_CLASSIFICATION	2.417037411591924E-6	IMPLEMENTATION
// the load method is used for loading as a top-level script, and prepares appropriate scoping around the code	WITHOUT_CLASSIFICATION	0.999993808933847	WITHOUT_CLASSIFICATION	6.191066152894801E-6	IMPLEMENTATION
// First, build assignments for specific named arguments	WITHOUT_CLASSIFICATION	0.9999805127030089	WITHOUT_CLASSIFICATION	1.9487296991159108E-5	IMPLEMENTATION
//        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } //        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }	WITHOUT_CLASSIFICATION	0.9999499381403779	WITHOUT_CLASSIFICATION	5.0061859622124236E-5	IMPLEMENTATION
// get current context	WITHOUT_CLASSIFICATION	0.9998572471248521	WITHOUT_CLASSIFICATION	1.4275287514788206E-4	IMPLEMENTATION
// octal constant	WITHOUT_CLASSIFICATION	0.9992682839222519	WITHOUT_CLASSIFICATION	7.317160777481513E-4	IMPLEMENTATION
// read	WITHOUT_CLASSIFICATION	0.9999982129731795	WITHOUT_CLASSIFICATION	1.7870268204935088E-6	IMPLEMENTATION
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9998251125608597	WITHOUT_CLASSIFICATION	1.7488743914029708E-4	IMPLEMENTATION
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9997675058453391	WITHOUT_CLASSIFICATION	2.324941546607806E-4	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999944072408335	WITHOUT_CLASSIFICATION	5.59275916645507E-6	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999944072408335	WITHOUT_CLASSIFICATION	5.59275916645507E-6	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999944072408335	WITHOUT_CLASSIFICATION	5.59275916645507E-6	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999918743941956	WITHOUT_CLASSIFICATION	8.125605804436147E-6	IMPLEMENTATION
// at end	WITHOUT_CLASSIFICATION	0.9999751904531473	WITHOUT_CLASSIFICATION	2.4809546852686224E-5	IMPLEMENTATION
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999925908479008	WITHOUT_CLASSIFICATION	7.40915209922255E-6	IMPLEMENTATION
// save blocking state	WITHOUT_CLASSIFICATION	0.999985081723047	WITHOUT_CLASSIFICATION	1.4918276952916824E-5	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999556533064902	WITHOUT_CLASSIFICATION	4.434669350972727E-5	IMPLEMENTATION
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999771398838331	WITHOUT_CLASSIFICATION	2.2860116166914576E-5	IMPLEMENTATION
// fall back on empty env when security disallows environment var access (like in an applet)	WITHOUT_CLASSIFICATION	0.9999970177183078	WITHOUT_CLASSIFICATION	2.9822816922844878E-6	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999300903002879	WITHOUT_CLASSIFICATION	6.990969971205987E-5	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999300903002879	WITHOUT_CLASSIFICATION	6.990969971205987E-5	IMPLEMENTATION
// load null block	WITHOUT_CLASSIFICATION	0.9997268787353106	WITHOUT_CLASSIFICATION	2.731212646893966E-4	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999994883444695	WITHOUT_CLASSIFICATION	5.116555304751537E-7	IMPLEMENTATION
// nothing else to here - the module version will be // included in the class.	WITHOUT_CLASSIFICATION	0.9999996308433052	WITHOUT_CLASSIFICATION	3.6915669473789786E-7	IMPLEMENTATION
// JRUBY-1000, fail early when attempting to subclass a final Java class; // solved here by adding an exception-throwing "inherited"	WITHOUT_CLASSIFICATION	0.9999914570229366	WITHOUT_CLASSIFICATION	8.542977063437499E-6	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9995733246959085	WITHOUT_CLASSIFICATION	4.2667530409140516E-4	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9995733246959085	WITHOUT_CLASSIFICATION	4.2667530409140516E-4	IMPLEMENTATION
// Translate ret = (a || b) to ret = (a ? true : b) as follows //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = true //    beq(v1, true, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999970382640933	WITHOUT_CLASSIFICATION	2.9617359068481302E-6	IMPLEMENTATION
// Initial precision is that of double numbers 2^63/2 ~ 4E18 // 63-1 an even number of number bits // precision seems 16 to 18 digits	WITHOUT_CLASSIFICATION	0.9999997402623871	WITHOUT_CLASSIFICATION	2.597376128660418E-7	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9993565651485392	WITHOUT_CLASSIFICATION	6.434348514608372E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.999976214108194	WITHOUT_CLASSIFICATION	2.378589180606253E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.999976214108194	WITHOUT_CLASSIFICATION	2.378589180606253E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.999976214108194	WITHOUT_CLASSIFICATION	2.378589180606253E-5	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.999707294752504	WITHOUT_CLASSIFICATION	2.9270524749600984E-4	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.9998878484419248	WITHOUT_CLASSIFICATION	1.1215155807519426E-4	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.9998878484419248	WITHOUT_CLASSIFICATION	1.1215155807519426E-4	IMPLEMENTATION
// check arity	WITHOUT_CLASSIFICATION	0.9994132782540522	WITHOUT_CLASSIFICATION	5.867217459477645E-4	IMPLEMENTATION
// check arity	WITHOUT_CLASSIFICATION	0.9994132782540522	WITHOUT_CLASSIFICATION	5.867217459477645E-4	IMPLEMENTATION
// create the class	WITHOUT_CLASSIFICATION	0.9998737045076324	WITHOUT_CLASSIFICATION	1.2629549236765935E-4	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.999994844636106	WITHOUT_CLASSIFICATION	5.155363894034164E-6	IMPLEMENTATION
// No hex value after the 'x'.	WITHOUT_CLASSIFICATION	0.9999955472672727	WITHOUT_CLASSIFICATION	4.45273272730206E-6	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.9999935752659732	WITHOUT_CLASSIFICATION	6.424734026853922E-6	IMPLEMENTATION
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999892917034561	WITHOUT_CLASSIFICATION	1.0708296543963984E-5	IMPLEMENTATION
// Let m be the exact digits precision in an earlier! loop	WITHOUT_CLASSIFICATION	0.9999985784338996	WITHOUT_CLASSIFICATION	1.4215661003873337E-6	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999983580433046	WITHOUT_CLASSIFICATION	1.6419566954454867E-6	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999948678229778	WITHOUT_CLASSIFICATION	5.132177022281355E-6	IMPLEMENTATION
// Label for the start of the method // Label for the end of the method	WITHOUT_CLASSIFICATION	0.9999001683100575	WITHOUT_CLASSIFICATION	9.983168994252856E-5	IMPLEMENTATION
// comparisons & checks // checks if the operand is non-null and non-false // EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...	WITHOUT_CLASSIFICATION	0.999999984035898	WITHOUT_CLASSIFICATION	1.5964102108698536E-8	IMPLEMENTATION
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.8465023998586372	WITHOUT_CLASSIFICATION	0.1534976001413627	IMPLEMENTATION
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9997841730010996	WITHOUT_CLASSIFICATION	2.1582699890049773E-4	IMPLEMENTATION
// all done with lookup attempts, release monitor	WITHOUT_CLASSIFICATION	0.9998893724770201	WITHOUT_CLASSIFICATION	1.1062752297988024E-4	IMPLEMENTATION
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999983821308275	WITHOUT_CLASSIFICATION	1.6178691726238558E-6	IMPLEMENTATION
// Create list of interface names to proxy (and make sure they really are interfaces) // Also build a hashcode from all classes to use for retrieving previously-created impl	WITHOUT_CLASSIFICATION	0.99999976588778	WITHOUT_CLASSIFICATION	2.3411221999392813E-7	IMPLEMENTATION
// Construct local variables based on parameter names passed in	WITHOUT_CLASSIFICATION	0.9999898661141833	WITHOUT_CLASSIFICATION	1.0133885816693698E-5	IMPLEMENTATION
// Value of "TZ" property is of a bit different format, // which confuses the Java's TimeZone.getTimeZone(id) method, // and so, we need to convert it.	WITHOUT_CLASSIFICATION	0.9997684351761281	WITHOUT_CLASSIFICATION	2.3156482387186938E-4	IMPLEMENTATION
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9997109330718166	WITHOUT_CLASSIFICATION	2.890669281833574E-4	IMPLEMENTATION
// ensure the object is associated with the wrapper we found it in, // so that if it comes back we don't re-wrap it	WITHOUT_CLASSIFICATION	0.9999947110092987	WITHOUT_CLASSIFICATION	5.288990701310002E-6	IMPLEMENTATION
// return sqrt(squarD) with precision of rootMC	WITHOUT_CLASSIFICATION	0.9999594335038593	WITHOUT_CLASSIFICATION	4.056649614081176E-5	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9973159886132309	WITHOUT_CLASSIFICATION	0.0026840113867691753	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.999976214108194	WITHOUT_CLASSIFICATION	2.378589180606253E-5	IMPLEMENTATION
// Get a new label using the provided label prefix	WITHOUT_CLASSIFICATION	0.9999947653117631	WITHOUT_CLASSIFICATION	5.234688236867579E-6	IMPLEMENTATION
// normal exit, perform finally and return	WITHOUT_CLASSIFICATION	0.999927201302524	WITHOUT_CLASSIFICATION	7.279869747589695E-5	IMPLEMENTATION
// coerce arguments	WITHOUT_CLASSIFICATION	0.9997797015122796	WITHOUT_CLASSIFICATION	2.2029848772043526E-4	IMPLEMENTATION
// 0.0 is ok // float range // inverted float range? // NaN // +infinity // -infinity	WITHOUT_CLASSIFICATION	0.9997432929527366	WITHOUT_CLASSIFICATION	2.5670704726347943E-4	IMPLEMENTATION
/* expected */	WITHOUT_CLASSIFICATION	0.9999595407144171	WITHOUT_CLASSIFICATION	4.0459285582869954E-5	IMPLEMENTATION
// set this class's method names in var @__java_ovrd_methods if this // is the new class; otherwise, get method names from there if this is // a proxy superclass.	WITHOUT_CLASSIFICATION	0.9999993805645653	WITHOUT_CLASSIFICATION	6.194354347639763E-7	IMPLEMENTATION
/* ignore backslashed spaces in %w */	WITHOUT_CLASSIFICATION	0.9999979636427557	WITHOUT_CLASSIFICATION	2.036357244306222E-6	IMPLEMENTATION
// Invert the sign, since TZ format and Java format // use opposite signs, sigh... Also, Java API requires // the sign to be always present, be it "+" or "-".	WITHOUT_CLASSIFICATION	0.9999876017876256	WITHOUT_CLASSIFICATION	1.2398212374382929E-5	IMPLEMENTATION
// no binding given, use 0 for both	WITHOUT_CLASSIFICATION	0.9999639523624458	WITHOUT_CLASSIFICATION	3.6047637554161065E-5	IMPLEMENTATION
// <=> may return nil in many circumstances, e.g. 3 <=> NaN        	WITHOUT_CLASSIFICATION	0.9999897653218656	WITHOUT_CLASSIFICATION	1.023467813439134E-5	IMPLEMENTATION
// use numbered access method	WITHOUT_CLASSIFICATION	0.9996783969312444	WITHOUT_CLASSIFICATION	3.216030687555889E-4	IMPLEMENTATION
// Always use "GMT" since that's required by Java API.	WITHOUT_CLASSIFICATION	0.9999821026706583	WITHOUT_CLASSIFICATION	1.7897329341676155E-5	IMPLEMENTATION
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9998928063281094	WITHOUT_CLASSIFICATION	1.0719367189063826E-4	IMPLEMENTATION
// The dataStruct is a place where custom information can be // contained for core implementations that doesn't necessarily // want to go to the trouble of creating a subclass of // RubyObject. The OpenSSL implementation uses this heavily to // save holder objects containing Java cryptography objects. // Java integration uses this to store the Java object ref. //protected transient Object dataStruct;	WITHOUT_CLASSIFICATION	0.999978521421228	WITHOUT_CLASSIFICATION	2.147857877209069E-5	IMPLEMENTATION
// Remaining arguments are for the script itself	WITHOUT_CLASSIFICATION	0.9999953772135145	WITHOUT_CLASSIFICATION	4.622786485515978E-6	IMPLEMENTATION
// arg grouping, use slower arg walking logic	WITHOUT_CLASSIFICATION	0.9942019680946652	WITHOUT_CLASSIFICATION	0.005798031905334868	IMPLEMENTATION
// build scope names string	WITHOUT_CLASSIFICATION	0.9999988372392461	WITHOUT_CLASSIFICATION	1.1627607538242047E-6	IMPLEMENTATION
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999993902285139	WITHOUT_CLASSIFICATION	6.097714860309779E-7	IMPLEMENTATION
// Here we create an "anonymous" exception type used for unrolling the stack. // MRI creates a new one for *every call* to timeout, which can be costly. // We opt to use a single exception type for all cases to avoid this overhead.	WITHOUT_CLASSIFICATION	0.9999696951226725	WITHOUT_CLASSIFICATION	3.0304877327351243E-5	IMPLEMENTATION
// finally	WITHOUT_CLASSIFICATION	0.9999941488466981	WITHOUT_CLASSIFICATION	5.851153301882772E-6	IMPLEMENTATION
// MRI behavior: With TZ equal to "GMT" or "UTC", Time.now // is *NOT* considered as a proper GMT/UTC time: //   ENV['TZ']="GMT" //   Time.now.gmt? ==> false //   ENV['TZ']="UTC" //   Time.now.utc? ==> false // Hence, we need to adjust for that.	WITHOUT_CLASSIFICATION	0.999998998322466	WITHOUT_CLASSIFICATION	1.0016775340341182E-6	IMPLEMENTATION
// ?l  | boolean | True if file1 exists and is a symbolic link	WITHOUT_CLASSIFICATION	0.9999993708719321	WITHOUT_CLASSIFICATION	6.291280678771414E-7	IMPLEMENTATION
// This try/catch is to allow failing over to the "commands" logic // when running from within a jruby-complete jar file, which has // jruby.home = a jar file URL that does not resolve correctly with // JRubyFile.create.	WITHOUT_CLASSIFICATION	0.9988257386275657	WITHOUT_CLASSIFICATION	0.0011742613724342538	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.999487919529	WITHOUT_CLASSIFICATION	5.120804710000054E-4	IMPLEMENTATION
// specific arity	WITHOUT_CLASSIFICATION	0.9992183146208328	WITHOUT_CLASSIFICATION	7.816853791672596E-4	IMPLEMENTATION
// In the case of two arguments, MRI will discard the portion of // the first argument after a decimal point (i.e., "floor"). // However in the case of a single argument, any portion after // the decimal point is honored.	WITHOUT_CLASSIFICATION	0.9999999130910153	WITHOUT_CLASSIFICATION	8.690898476482529E-8	IMPLEMENTATION
// ?w  | boolean | True if file1 exists and is writable by effective uid/gid	WITHOUT_CLASSIFICATION	0.9999995764418164	WITHOUT_CLASSIFICATION	4.235581836114842E-7	IMPLEMENTATION
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999190358542113	WITHOUT_CLASSIFICATION	8.09641457887461E-5	IMPLEMENTATION
/*    @JRubyMethod    public IRubyObject to_proc() {        return RubyProc.newProc(getRuntime(),                                CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()),                                Block.Type.PROC);    }    */	WITHOUT_CLASSIFICATION	0.999995415131858	WITHOUT_CLASSIFICATION	4.584868142031696E-6	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999661144937928	WITHOUT_CLASSIFICATION	3.3885506207144234E-5	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999661144937928	WITHOUT_CLASSIFICATION	3.3885506207144234E-5	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999869594117385	WITHOUT_CLASSIFICATION	1.304058826160258E-5	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999869594117385	WITHOUT_CLASSIFICATION	1.304058826160258E-5	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9968440108261793	WITHOUT_CLASSIFICATION	0.003155989173820696	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9968440108261793	WITHOUT_CLASSIFICATION	0.003155989173820696	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999997306781929	WITHOUT_CLASSIFICATION	2.693218071071692E-6	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999997306781929	WITHOUT_CLASSIFICATION	2.693218071071692E-6	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9996615266859028	WITHOUT_CLASSIFICATION	3.3847331409717497E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9996615266859028	WITHOUT_CLASSIFICATION	3.3847331409717497E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9996615266859028	WITHOUT_CLASSIFICATION	3.3847331409717497E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9996615266859028	WITHOUT_CLASSIFICATION	3.3847331409717497E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9996615266859028	WITHOUT_CLASSIFICATION	3.3847331409717497E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9996615266859028	WITHOUT_CLASSIFICATION	3.3847331409717497E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9996615266859028	WITHOUT_CLASSIFICATION	3.3847331409717497E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9996615266859028	WITHOUT_CLASSIFICATION	3.3847331409717497E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9996615266859028	WITHOUT_CLASSIFICATION	3.3847331409717497E-4	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999415709694575	WITHOUT_CLASSIFICATION	5.842903054253045E-5	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999415709694575	WITHOUT_CLASSIFICATION	5.842903054253045E-5	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999415709694575	WITHOUT_CLASSIFICATION	5.842903054253045E-5	IMPLEMENTATION
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999028145536049	WITHOUT_CLASSIFICATION	9.718544639505299E-5	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999997677233808	WITHOUT_CLASSIFICATION	2.3227661920504774E-6	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999997677233808	WITHOUT_CLASSIFICATION	2.3227661920504774E-6	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999997677233808	WITHOUT_CLASSIFICATION	2.3227661920504774E-6	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999227273400145	WITHOUT_CLASSIFICATION	7.72726599854657E-5	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999227273400145	WITHOUT_CLASSIFICATION	7.72726599854657E-5	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999227273400145	WITHOUT_CLASSIFICATION	7.72726599854657E-5	IMPLEMENTATION
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999190358542113	WITHOUT_CLASSIFICATION	8.09641457887461E-5	IMPLEMENTATION
// backspace	WITHOUT_CLASSIFICATION	0.9996617215514235	WITHOUT_CLASSIFICATION	3.3827844857639447E-4	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
/* package-private */	WITHOUT_CLASSIFICATION	0.999989309695273	WITHOUT_CLASSIFICATION	1.069030472698843E-5	IMPLEMENTATION
// fall through	WITHOUT_CLASSIFICATION	0.9998814302005125	WITHOUT_CLASSIFICATION	1.185697994876067E-4	IMPLEMENTATION
// fall through	WITHOUT_CLASSIFICATION	0.9998814302005125	WITHOUT_CLASSIFICATION	1.185697994876067E-4	IMPLEMENTATION
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9999291979023713	WITHOUT_CLASSIFICATION	7.08020976286193E-5	IMPLEMENTATION
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999992608255581	WITHOUT_CLASSIFICATION	7.391744418021416E-7	IMPLEMENTATION
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999992608255581	WITHOUT_CLASSIFICATION	7.391744418021416E-7	IMPLEMENTATION
/**      * Nested class whose instances act as thunks reacting to to_str method     * called from (Exception#to_str, Exception#message)     * MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!",     * to_str implementation: "name_err_mesg_to_str"     *     * TODO: this class should not be lookupable     */	WITHOUT_CLASSIFICATION	0.9744909852145084	IMPLEMENTATION	0.02550901478549164	WITHOUT_CLASSIFICATION
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9996301133379629	WITHOUT_CLASSIFICATION	3.698866620371322E-4	IMPLEMENTATION
// The name of this source (e.g. a filename: foo.rb)	WITHOUT_CLASSIFICATION	0.9999767079289329	WITHOUT_CLASSIFICATION	2.3292071067074846E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999754210075538	WITHOUT_CLASSIFICATION	2.4578992446278486E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999754210075538	WITHOUT_CLASSIFICATION	2.4578992446278486E-5	IMPLEMENTATION
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9999999221352588	WITHOUT_CLASSIFICATION	7.786474114722706E-8	IMPLEMENTATION
// We yield here to hopefully permit the target thread to schedule // MRI immediately schedules it, so this is close but not exact	WITHOUT_CLASSIFICATION	0.9999920106021584	WITHOUT_CLASSIFICATION	7.989397841614418E-6	IMPLEMENTATION
// note that addMethod now does its own put, so any change made to // functionality here should be made there as well 	WITHOUT_CLASSIFICATION	0.9999999127917581	WITHOUT_CLASSIFICATION	8.720824185225849E-8	IMPLEMENTATION
/* Currently dead code, but useful when we figure out how to actually perform translit.    private static boolean isTranslit(String encoding) {        return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false;    }*/	WITHOUT_CLASSIFICATION	0.990711895514042	WITHOUT_CLASSIFICATION	0.009288104485957903	IMPLEMENTATION
// empirically it appears that to_ary coersions always return array or nil, so this // should always be an array by now.	WITHOUT_CLASSIFICATION	0.9990769315992948	WITHOUT_CLASSIFICATION	9.230684007051495E-4	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999754210075538	WITHOUT_CLASSIFICATION	2.4578992446278486E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999754210075538	WITHOUT_CLASSIFICATION	2.4578992446278486E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999754210075538	WITHOUT_CLASSIFICATION	2.4578992446278486E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999754210075538	WITHOUT_CLASSIFICATION	2.4578992446278486E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999754210075538	WITHOUT_CLASSIFICATION	2.4578992446278486E-5	IMPLEMENTATION
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.999995136604038	WITHOUT_CLASSIFICATION	4.863395961937695E-6	IMPLEMENTATION
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9997837392359694	WITHOUT_CLASSIFICATION	2.162607640305117E-4	IMPLEMENTATION
// if it's an inner class and it's not public, we can't access it; // skip population of declared elements	WITHOUT_CLASSIFICATION	0.9999845350664314	WITHOUT_CLASSIFICATION	1.5464933568605654E-5	IMPLEMENTATION
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999601066985001	WITHOUT_CLASSIFICATION	3.9893301499812E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9848483830614568	WITHOUT_CLASSIFICATION	0.015151616938543177	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9848483830614568	WITHOUT_CLASSIFICATION	0.015151616938543177	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9848483830614568	WITHOUT_CLASSIFICATION	0.015151616938543177	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9848483830614568	WITHOUT_CLASSIFICATION	0.015151616938543177	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9848483830614568	WITHOUT_CLASSIFICATION	0.015151616938543177	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9848483830614568	WITHOUT_CLASSIFICATION	0.015151616938543177	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9848483830614568	WITHOUT_CLASSIFICATION	0.015151616938543177	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9848483830614568	WITHOUT_CLASSIFICATION	0.015151616938543177	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9848483830614568	WITHOUT_CLASSIFICATION	0.015151616938543177	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9848483830614568	WITHOUT_CLASSIFICATION	0.015151616938543177	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9848483830614568	WITHOUT_CLASSIFICATION	0.015151616938543177	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9848483830614568	WITHOUT_CLASSIFICATION	0.015151616938543177	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9848483830614568	WITHOUT_CLASSIFICATION	0.015151616938543177	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9848483830614568	WITHOUT_CLASSIFICATION	0.015151616938543177	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9848483830614568	WITHOUT_CLASSIFICATION	0.015151616938543177	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9848483830614568	WITHOUT_CLASSIFICATION	0.015151616938543177	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9848483830614568	WITHOUT_CLASSIFICATION	0.015151616938543177	IMPLEMENTATION
// MRI behavior on Windows: it treats '/' as a root of // a current drive (but only if SINGLE slash is present!): // E.g., if current work directory is // 'D:/home/directory', then '/' means 'D:/'. // // Basically, '/path' is treated as a *RELATIVE* path, // relative to the current drive. '//path' is treated // as absolute one.	WITHOUT_CLASSIFICATION	0.9999999887908299	WITHOUT_CLASSIFICATION	1.1209170160926768E-8	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9848483830614568	WITHOUT_CLASSIFICATION	0.015151616938543177	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9848483830614568	WITHOUT_CLASSIFICATION	0.015151616938543177	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9848483830614568	WITHOUT_CLASSIFICATION	0.015151616938543177	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9848483830614568	WITHOUT_CLASSIFICATION	0.015151616938543177	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9848483830614568	WITHOUT_CLASSIFICATION	0.015151616938543177	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9848483830614568	WITHOUT_CLASSIFICATION	0.015151616938543177	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9848483830614568	WITHOUT_CLASSIFICATION	0.015151616938543177	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9848483830614568	WITHOUT_CLASSIFICATION	0.015151616938543177	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9848483830614568	WITHOUT_CLASSIFICATION	0.015151616938543177	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9848483830614568	WITHOUT_CLASSIFICATION	0.015151616938543177	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9848483830614568	WITHOUT_CLASSIFICATION	0.015151616938543177	IMPLEMENTATION
// This is needed when the enclosing class or module is a singleton. // In that case, we generated a name such as null::Foo, which broke  // Marshalling, among others. The correct thing to do in this situation  // is to insert the generate the name of form #<Class:01xasdfasd> if  // it's a singleton module/class, which this code accomplishes.	WITHOUT_CLASSIFICATION	0.9983180725601732	WITHOUT_CLASSIFICATION	0.0016819274398268298	IMPLEMENTATION
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9999185895038204	WITHOUT_CLASSIFICATION	8.141049617958274E-5	IMPLEMENTATION
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999911680085489	WITHOUT_CLASSIFICATION	8.83199145108298E-6	IMPLEMENTATION
// get "self"	WITHOUT_CLASSIFICATION	0.9997841921386611	WITHOUT_CLASSIFICATION	2.1580786133895477E-4	IMPLEMENTATION
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999946573568196	WITHOUT_CLASSIFICATION	5.3426431803349615E-6	IMPLEMENTATION
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9998766245901746	WITHOUT_CLASSIFICATION	1.233754098253412E-4	IMPLEMENTATION
// only public methods	WITHOUT_CLASSIFICATION	0.9999924665776043	WITHOUT_CLASSIFICATION	7.5334223956605576E-6	IMPLEMENTATION
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999886910328222	WITHOUT_CLASSIFICATION	1.1308967177770988E-5	IMPLEMENTATION
// First try to use drive letter from supplied dir value, // then try current work dir.	WITHOUT_CLASSIFICATION	0.9999416539503192	WITHOUT_CLASSIFICATION	5.834604968083569E-5	IMPLEMENTATION
// JRUBY-2435: Aliasing eval and other "special" methods should display a warning // We warn because we treat certain method names as "special" for purposes of // optimization. Hopefully this will be enough to convince people not to alias // them.	WITHOUT_CLASSIFICATION	0.9996282424636638	WITHOUT_CLASSIFICATION	3.717575363361914E-4	IMPLEMENTATION
// generate a real method signature for the method, with to/from coercions	WITHOUT_CLASSIFICATION	0.9997538264351798	WITHOUT_CLASSIFICATION	2.46173564820132E-4	IMPLEMENTATION
// block argument to the method // closure present // class present // method table mutations, def, defs, undef, alias // likely call to eval // makes calls that are aware of the frame // makes calls that are aware of the frame's self // makes calls that are aware of the frame's visibility // makes calls that are aware of the frame's block // makes calls that are aware of the frame's name // makes calls that set or get backref // makes calls that set or get lastline // makes calls that are aware of the frame's class // optional arguments to the method // rest arg to the method // makes calls that are aware of the scope // makes a zero-argument super call // accesses or sets constants // accesses or sets class variables // makes normal super call // contains a retry	WITHOUT_CLASSIFICATION	0.9994573825496855	WITHOUT_CLASSIFICATION	5.426174503143905E-4	IMPLEMENTATION
// // Add aliases in Type::*, NativeType::* and FFI::TYPE_* //	WITHOUT_CLASSIFICATION	0.9999864273342397	WITHOUT_CLASSIFICATION	1.3572665760246626E-5	IMPLEMENTATION
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999897998423258	WITHOUT_CLASSIFICATION	1.0200157674250146E-5	IMPLEMENTATION
// double-testing args.length here, but it avoids duplicating the proc-setup code in two places	WITHOUT_CLASSIFICATION	0.9999971758625658	WITHOUT_CLASSIFICATION	2.824137434194258E-6	IMPLEMENTATION
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999992516956919	WITHOUT_CLASSIFICATION	7.483043080895333E-7	IMPLEMENTATION
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999961342104161	WITHOUT_CLASSIFICATION	3.865789583921906E-6	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.999960652387444	WITHOUT_CLASSIFICATION	3.934761255588107E-5	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.999960652387444	WITHOUT_CLASSIFICATION	3.934761255588107E-5	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.999960652387444	WITHOUT_CLASSIFICATION	3.934761255588107E-5	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.999960652387444	WITHOUT_CLASSIFICATION	3.934761255588107E-5	IMPLEMENTATION
// snapshot of contents of directory // current position in directory	WITHOUT_CLASSIFICATION	0.9999998279536337	WITHOUT_CLASSIFICATION	1.7204636625603152E-7	IMPLEMENTATION
// Exclusive locks in Java require the channel to be writable, otherwise // an exception is thrown (terminating JRuby execution). // But flock behavior of MRI is that it allows // exclusive locks even on non-writable file. So we convert exclusive // lock to shared lock if the channel is not writable, to better match // the MRI behavior.	WITHOUT_CLASSIFICATION	0.9569778380595197	WITHOUT_CLASSIFICATION	0.0430221619404802	IMPLEMENTATION
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999415368210911	WITHOUT_CLASSIFICATION	5.8463178909034735E-5	IMPLEMENTATION
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999415368210911	WITHOUT_CLASSIFICATION	5.8463178909034735E-5	IMPLEMENTATION
// set self to the class	WITHOUT_CLASSIFICATION	0.9999851995866628	WITHOUT_CLASSIFICATION	1.480041333710697E-5	IMPLEMENTATION
/* ---------- Public fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999837630791827	WITHOUT_CLASSIFICATION	1.6236920817301774E-5	IMPLEMENTATION
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999970554188216	WITHOUT_CLASSIFICATION	2.9445811784653585E-6	IMPLEMENTATION
// zero args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999966361896551	WITHOUT_CLASSIFICATION	3.3638103448972867E-6	IMPLEMENTATION
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999964765378314	WITHOUT_CLASSIFICATION	3.523462168575055E-6	IMPLEMENTATION
// Store each line into this list if not null.	WITHOUT_CLASSIFICATION	0.9992531837669605	WITHOUT_CLASSIFICATION	7.468162330396313E-4	IMPLEMENTATION
// Portion of line right after beginning marker	WITHOUT_CLASSIFICATION	0.9999523696026658	WITHOUT_CLASSIFICATION	4.7630397334211787E-5	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999635693364863	WITHOUT_CLASSIFICATION	3.643066351364199E-5	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999635693364863	WITHOUT_CLASSIFICATION	3.643066351364199E-5	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999635693364863	WITHOUT_CLASSIFICATION	3.643066351364199E-5	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999635693364863	WITHOUT_CLASSIFICATION	3.643066351364199E-5	IMPLEMENTATION
// If an IO exception occurs (something odd, but possible) // A directory may return null.	WITHOUT_CLASSIFICATION	0.9999997088120518	WITHOUT_CLASSIFICATION	2.9118794823616186E-7	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.999999946722332	WITHOUT_CLASSIFICATION	5.327766810932938E-8	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.999999946722332	WITHOUT_CLASSIFICATION	5.327766810932938E-8	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.999999946722332	WITHOUT_CLASSIFICATION	5.327766810932938E-8	IMPLEMENTATION
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9997915647746329	WITHOUT_CLASSIFICATION	2.0843522536704822E-4	IMPLEMENTATION
// finally with no exception	WITHOUT_CLASSIFICATION	0.9999756510658901	WITHOUT_CLASSIFICATION	2.4348934109814928E-5	IMPLEMENTATION
// Now, for all variables used by 'i' mark them live before 'i'	WITHOUT_CLASSIFICATION	0.9999953963519402	WITHOUT_CLASSIFICATION	4.603648059770343E-6	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.8953995793687894	IMPLEMENTATION	0.10460042063121065	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.8953995793687894	IMPLEMENTATION	0.10460042063121065	WITHOUT_CLASSIFICATION
/* The counting of slashes that follows is simply a way to adhere to          * Ruby's UNC (or something) compatibility. When Ruby's expand_path is          * called with "//foo//bar" it will return "//foo/bar". JRuby uses          * java.io.File, and hence returns "/foo/bar". In order to retain          * java.io.File in the lower layers and provide full Ruby          * compatibility, the number of extra slashes must be counted and          * prepended to the result.         */	WITHOUT_CLASSIFICATION	0.9999981824407334	WITHOUT_CLASSIFICATION	1.8175592666242502E-6	IMPLEMENTATION
// This is almost always already interned, since it will be called with a symbol in most cases // but when created from Java code, we might get an argument that needs to be interned. // addAccessor has as a precondition that the string MUST be interned	WITHOUT_CLASSIFICATION	0.9999999999979012	WITHOUT_CLASSIFICATION	2.098778817716895E-12	IMPLEMENTATION
/* not a class */	WITHOUT_CLASSIFICATION	0.9993782477930118	WITHOUT_CLASSIFICATION	6.217522069883087E-4	IMPLEMENTATION
/* not a class */	WITHOUT_CLASSIFICATION	0.9993782477930118	WITHOUT_CLASSIFICATION	6.217522069883087E-4	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9998623304094162	WITHOUT_CLASSIFICATION	1.3766959058380515E-4	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9998623304094162	WITHOUT_CLASSIFICATION	1.3766959058380515E-4	IMPLEMENTATION
// io.available() only returns 0 after EOF is encountered // so we need to differentiate between the empty string and EOF	WITHOUT_CLASSIFICATION	0.9999999727174947	WITHOUT_CLASSIFICATION	2.7282505187650552E-8	IMPLEMENTATION
// In the current logic, if we get here we know that module is not an // IncludedModuleWrapper, so there's no need to fish out the delegate. But just // in case the logic should change later, let's do it anyway	WITHOUT_CLASSIFICATION	0.9823466099762266	WITHOUT_CLASSIFICATION	0.01765339002377343	IMPLEMENTATION
// rb_iterate((VALUE(*)_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);	WITHOUT_CLASSIFICATION	0.999918508280422	WITHOUT_CLASSIFICATION	8.14917195780652E-5	IMPLEMENTATION
// Broken symlinks considered by exists() as non-existing, // so we need to check for symlinks explicitly.	WITHOUT_CLASSIFICATION	0.9999852645681321	WITHOUT_CLASSIFICATION	1.473543186787344E-5	IMPLEMENTATION
// ////////////////// CONSTANT API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.999947346909099	WITHOUT_CLASSIFICATION	5.265309090098435E-5	IMPLEMENTATION
// create the default thread group	WITHOUT_CLASSIFICATION	0.999966464200395	WITHOUT_CLASSIFICATION	3.353579960500602E-5	IMPLEMENTATION
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999193572221886	WITHOUT_CLASSIFICATION	8.064277781141833E-5	IMPLEMENTATION
/* ============================     * Here are hash internals     * (This could be extracted to a separate class but it's not too large though)     * ============================     */	WITHOUT_CLASSIFICATION	0.9999995753027597	WITHOUT_CLASSIFICATION	4.2469724022691206E-7	IMPLEMENTATION
// ////////////////// LOW-LEVEL CLASS VARIABLE INTERFACE //////////////// // // fetch/store/list class variables for this module //	WITHOUT_CLASSIFICATION	0.9999686577815189	WITHOUT_CLASSIFICATION	3.134221848117138E-5	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999906708555705	WITHOUT_CLASSIFICATION	9.329144429485908E-6	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999906708555705	WITHOUT_CLASSIFICATION	9.329144429485908E-6	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999968230962519	WITHOUT_CLASSIFICATION	3.176903748138653E-6	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999968230962519	WITHOUT_CLASSIFICATION	3.176903748138653E-6	IMPLEMENTATION
// retuns null when not found to avoid unnecessary getRuntime().getNil() call	WITHOUT_CLASSIFICATION	0.9958533319158797	WITHOUT_CLASSIFICATION	0.004146668084120305	IMPLEMENTATION
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999880533972462	WITHOUT_CLASSIFICATION	1.1946602753846024E-5	IMPLEMENTATION
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999354232136133	WITHOUT_CLASSIFICATION	6.457678638666016E-5	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9997159916686652	WITHOUT_CLASSIFICATION	2.8400833133486773E-4	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9997159916686652	WITHOUT_CLASSIFICATION	2.8400833133486773E-4	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9997159916686652	WITHOUT_CLASSIFICATION	2.8400833133486773E-4	IMPLEMENTATION
// line 286	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 476	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 513	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 530	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 533	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 537	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 551	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// end loop	WITHOUT_CLASSIFICATION	0.999427008258773	WITHOUT_CLASSIFICATION	5.729917412270326E-4	IMPLEMENTATION
// MRI behavior: we don't print errno for actual Errno errors	WITHOUT_CLASSIFICATION	0.9998813668021741	WITHOUT_CLASSIFICATION	1.1863319782587753E-4	IMPLEMENTATION
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9993893485896654	WITHOUT_CLASSIFICATION	6.106514103345239E-4	IMPLEMENTATION
// Traverse the instructions in this basic block in reverse order! // Mark as dead all instructions whose results are not used! 	WITHOUT_CLASSIFICATION	0.9997890342044863	WITHOUT_CLASSIFICATION	2.1096579551368693E-4	IMPLEMENTATION
// // fields should really be an immutable map as it is never modified after construction //	WITHOUT_CLASSIFICATION	0.9999476589212555	WITHOUT_CLASSIFICATION	5.2341078744380454E-5	IMPLEMENTATION
// load self object as IRubyObject, for recv param	WITHOUT_CLASSIFICATION	0.999997289526795	WITHOUT_CLASSIFICATION	2.7104732050455088E-6	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.8953995793687894	IMPLEMENTATION	0.10460042063121065	WITHOUT_CLASSIFICATION
// If we define a class in Ruby, but later want to allow it to be defined in Java, // the allocator needs to be updated	WITHOUT_CLASSIFICATION	0.9999471209996613	WITHOUT_CLASSIFICATION	5.287900033871459E-5	IMPLEMENTATION
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9998946412347058	WITHOUT_CLASSIFICATION	1.0535876529427895E-4	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.999903172565998	WITHOUT_CLASSIFICATION	9.682743400195746E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.999976214108194	WITHOUT_CLASSIFICATION	2.378589180606253E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.999976214108194	WITHOUT_CLASSIFICATION	2.378589180606253E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.999976214108194	WITHOUT_CLASSIFICATION	2.378589180606253E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.999976214108194	WITHOUT_CLASSIFICATION	2.378589180606253E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.999976214108194	WITHOUT_CLASSIFICATION	2.378589180606253E-5	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9987480147552891	WITHOUT_CLASSIFICATION	0.0012519852447109567	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.999976214108194	WITHOUT_CLASSIFICATION	2.378589180606253E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.999976214108194	WITHOUT_CLASSIFICATION	2.378589180606253E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.999976214108194	WITHOUT_CLASSIFICATION	2.378589180606253E-5	IMPLEMENTATION
// MRI has extra pointer which makes our code look a little bit // more strange in // comparison	WITHOUT_CLASSIFICATION	0.9999936796860537	WITHOUT_CLASSIFICATION	6.320313946397559E-6	IMPLEMENTATION
// Tempory buffer to build up a potential token.  Consumer takes responsibility to reset  // this before use.	WITHOUT_CLASSIFICATION	0.9999320555868323	WITHOUT_CLASSIFICATION	6.794441316774706E-5	IMPLEMENTATION
//tmpPosition is required because getPosition()'s side effects. //if the warning is generated, the getPosition() on line 954 (this line + 18) will create //a wrong position if the "inclusive" flag is not set.	WITHOUT_CLASSIFICATION	0.9990084240138541	WITHOUT_CLASSIFICATION	9.915759861458776E-4	IMPLEMENTATION
/* What is \v in C?                    case '\v':                        c2 = 'v';                        break;                        */	WITHOUT_CLASSIFICATION	0.9999858100059652	WITHOUT_CLASSIFICATION	1.4189994034767736E-5	IMPLEMENTATION
/* Consider Thread aspects of this */	WITHOUT_CLASSIFICATION	0.9999783900211552	WITHOUT_CLASSIFICATION	2.1609978844808718E-5	IMPLEMENTATION
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999992702258531	WITHOUT_CLASSIFICATION	7.2977414692883E-7	IMPLEMENTATION
// An interrupt or timeout may have caused us to miss // a notify that we consumed, so do another notify in // case someone else is available to pick it up.	WITHOUT_CLASSIFICATION	0.9999502580793221	WITHOUT_CLASSIFICATION	4.974192067783552E-5	IMPLEMENTATION
// line 572	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 601	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 601	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 625	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 649	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 691	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 723	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 732	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 745	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 766	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 785	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 794	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 800	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 812	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 827	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 839	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 845	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 864	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 886	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 896	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 911	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 929	WITHOUT_CLASSIFICATION	0.999498714657286	WITHOUT_CLASSIFICATION	5.012853427139558E-4	IMPLEMENTATION
// line 952	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 970	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 972	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 991	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1011	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1026	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1038	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1067	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1085	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1097	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1105	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1122	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1133	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1145	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1169	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1201	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1210	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1229	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1261	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1287	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1293	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1307	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1320	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1325	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1363	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1398	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1448	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1456	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1473	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1492	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1513	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1523	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1562	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1582	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1603	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1603	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1615	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1620	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1635	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1652	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1681	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1708	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1716	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1755	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1772	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1789	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9996615266859028	WITHOUT_CLASSIFICATION	3.3847331409717497E-4	IMPLEMENTATION
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9996615266859028	WITHOUT_CLASSIFICATION	3.3847331409717497E-4	IMPLEMENTATION
/* force for args */	WITHOUT_CLASSIFICATION	0.9999024401340804	WITHOUT_CLASSIFICATION	9.755986591968842E-5	IMPLEMENTATION
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9997153038128707	WITHOUT_CLASSIFICATION	2.8469618712934444E-4	IMPLEMENTATION
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9756674207999468	WITHOUT_CLASSIFICATION	0.02433257920005318	IMPLEMENTATION
// We can assign if we already have variable of that name here or we are the only // scope in the chain (which Local scopes always are).	WITHOUT_CLASSIFICATION	0.9999975353191716	WITHOUT_CLASSIFICATION	2.4646808284495973E-6	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999373742910782	WITHOUT_CLASSIFICATION	6.262570892179178E-5	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999373742910782	WITHOUT_CLASSIFICATION	6.262570892179178E-5	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999373742910782	WITHOUT_CLASSIFICATION	6.262570892179178E-5	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999373742910782	WITHOUT_CLASSIFICATION	6.262570892179178E-5	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9486304669117809	WITHOUT_CLASSIFICATION	0.051369533088219156	IMPLEMENTATION
/*     * This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:)     * into individual whenNodes.  The primary reason for this is to ensure lazy evaluation of     * the arguments (when foo,bar,gar:) to prevent side-effects.  In the old code this was done     * using nested when statements, which was awful for interpreter and compilation.     *     * Notes: This has semantic equivalence but will not be lexically equivalent.  Compiler     * needs to detect same bodies to simplify bytecode generated.     */	WITHOUT_CLASSIFICATION	0.9999992504114381	WITHOUT_CLASSIFICATION	7.495885619888748E-7	IMPLEMENTATION
// line 313	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 339	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 361	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 413	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 451	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 472	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 500	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 515	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 555	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 582	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 619	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 636	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 669	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 703	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 776	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 814	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 823	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 854	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 872	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 905	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 925	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 958	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 992	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1047	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1072	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1081	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1108	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1136	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1168	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1192	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1241	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1267	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1286	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1301	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1314	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1333	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1362	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1395	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1420	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1439	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1476	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1535	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1588	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1618	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1643	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1669	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1728	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1753	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1779	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1794	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1812	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1837	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1895	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1925	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1950	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 1992	WITHOUT_CLASSIFICATION	0.9994923280532376	WITHOUT_CLASSIFICATION	5.076719467623751E-4	IMPLEMENTATION
// line 2014	WITHOUT_CLASSIFICATION	0.9994925910752032	WITHOUT_CLASSIFICATION	5.074089247967682E-4	IMPLEMENTATION
// Whether this scope is used as the "argument scope" for e.g. zsuper	WITHOUT_CLASSIFICATION	0.9999920825817566	WITHOUT_CLASSIFICATION	7.917418243324138E-6	IMPLEMENTATION
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9977285445195261	WITHOUT_CLASSIFICATION	0.0022714554804738087	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999980544011478	WITHOUT_CLASSIFICATION	1.9455988522530093E-6	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999980544011478	WITHOUT_CLASSIFICATION	1.9455988522530093E-6	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999980544011478	WITHOUT_CLASSIFICATION	1.9455988522530093E-6	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999980544011478	WITHOUT_CLASSIFICATION	1.9455988522530093E-6	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999980544011478	WITHOUT_CLASSIFICATION	1.9455988522530093E-6	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999980544011478	WITHOUT_CLASSIFICATION	1.9455988522530093E-6	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999980544011478	WITHOUT_CLASSIFICATION	1.9455988522530093E-6	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9997874169423434	WITHOUT_CLASSIFICATION	2.1258305765669744E-4	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9997874169423434	WITHOUT_CLASSIFICATION	2.1258305765669744E-4	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9997874169423434	WITHOUT_CLASSIFICATION	2.1258305765669744E-4	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9997874169423434	WITHOUT_CLASSIFICATION	2.1258305765669744E-4	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9765884754621514	WITHOUT_CLASSIFICATION	0.023411524537848522	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9765884754621514	WITHOUT_CLASSIFICATION	0.023411524537848522	IMPLEMENTATION
// We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the // 'b' will get put into this new dynamic scope.  The original scope does not see the new // 'b' and successive evals with this binding will.  I take it having the ability to have  // succesive binding evals be able to share same scope makes sense from a programmers  // perspective.   One crappy outcome of this design is it requires Dynamic and Static  // scopes to be mutable for this one case.	WITHOUT_CLASSIFICATION	0.999999845630335	WITHOUT_CLASSIFICATION	1.5436966503147606E-7	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999992972077465	WITHOUT_CLASSIFICATION	7.02792253516683E-7	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999992972077465	WITHOUT_CLASSIFICATION	7.02792253516683E-7	IMPLEMENTATION
// tc // under method // self // under method // name // args	WITHOUT_CLASSIFICATION	0.9994065862601622	WITHOUT_CLASSIFICATION	5.934137398377525E-4	IMPLEMENTATION
// allow it to bubble up	WITHOUT_CLASSIFICATION	0.9995191946223241	WITHOUT_CLASSIFICATION	4.8080537767582004E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999301471171874	WITHOUT_CLASSIFICATION	6.985288281256118E-5	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999301471171874	WITHOUT_CLASSIFICATION	6.985288281256118E-5	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999301471171874	WITHOUT_CLASSIFICATION	6.985288281256118E-5	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999301471171874	WITHOUT_CLASSIFICATION	6.985288281256118E-5	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999301471171874	WITHOUT_CLASSIFICATION	6.985288281256118E-5	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999301471171874	WITHOUT_CLASSIFICATION	6.985288281256118E-5	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999301471171874	WITHOUT_CLASSIFICATION	6.985288281256118E-5	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999301471171874	WITHOUT_CLASSIFICATION	6.985288281256118E-5	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999301471171874	WITHOUT_CLASSIFICATION	6.985288281256118E-5	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.999900181678362	WITHOUT_CLASSIFICATION	9.981832163792114E-5	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.999900181678362	WITHOUT_CLASSIFICATION	9.981832163792114E-5	IMPLEMENTATION
// Check for a builtin first.	WITHOUT_CLASSIFICATION	0.9999768604829533	WITHOUT_CLASSIFICATION	2.3139517046689704E-5	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9998382829074086	WITHOUT_CLASSIFICATION	1.6171709259151046E-4	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9998382829074086	WITHOUT_CLASSIFICATION	1.6171709259151046E-4	IMPLEMENTATION
// Unfortunately, the number of digits in the exponent is // not clearly defined in Ruby documentation. This is a // platform/version-dependent behavior. On Linux/Mac/Cygwin/*nix, // two digits are used. On Windows, 3 digits are used. // It is desirable for JRuby to have consistent behavior, and // the two digits behavior was selected. This is also in sync // with "Java-native" sprintf behavior (java.util.Formatter). // E or e	WITHOUT_CLASSIFICATION	0.9999969053831835	WITHOUT_CLASSIFICATION	3.09461681650606E-6	IMPLEMENTATION
/** * Represents the the dynamic portion of scoping information.  The variableValues are the * values of assigned local or block variables.  The staticScope identifies which sort of * scope this is (block or local). *  * Properties of Dynamic Scopes: * 1. static and dynamic scopes have the same number of names to values * 2. size of variables (and thus names) is determined during parsing.  So those structured do *    not need to change * * FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents.  This * is harmless (other than wasting memory), but we should not do that.  We can fix this in two * ways: * 1. Fix all callers * 2. Check parent that is passed in and make if new instance is local, then its parent is not local */	WITHOUT_CLASSIFICATION	0.5879081164910975	IMPLEMENTATION	0.41209188350890247	WITHOUT_CLASSIFICATION
// This method handles '**/' patterns and delegates to // fnmatch_helper for the main work.	WITHOUT_CLASSIFICATION	0.9998575068443658	WITHOUT_CLASSIFICATION	1.424931556341467E-4	IMPLEMENTATION
// Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern  // Example: foo{a{c},b}bar -> fooa{c}bar, foobbar	WITHOUT_CLASSIFICATION	0.9999977808982222	WITHOUT_CLASSIFICATION	2.21910177783029E-6	IMPLEMENTATION
// double precision, native // double precision, native	WITHOUT_CLASSIFICATION	0.9999847515791453	WITHOUT_CLASSIFICATION	1.5248420854614406E-5	IMPLEMENTATION
// 64-bit number, native (as bignum)	WITHOUT_CLASSIFICATION	0.9998473950326582	WITHOUT_CLASSIFICATION	1.5260496734175873E-4	IMPLEMENTATION
// Next indicates to decode using native encoding format	WITHOUT_CLASSIFICATION	0.9999552229252933	WITHOUT_CLASSIFICATION	4.477707470673355E-5	IMPLEMENTATION
// calculate based on a, b, c and d	WITHOUT_CLASSIFICATION	0.9999697200721861	WITHOUT_CLASSIFICATION	3.0279927813987297E-5	IMPLEMENTATION
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999899524891994	WITHOUT_CLASSIFICATION	1.0047510800503161E-5	IMPLEMENTATION
// MRI behavior:  for 'Q', do not add trailing nils	WITHOUT_CLASSIFICATION	0.9964359685868557	WITHOUT_CLASSIFICATION	0.0035640314131442845	IMPLEMENTATION
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9999999470472617	WITHOUT_CLASSIFICATION	5.295273838275475E-8	IMPLEMENTATION
// exec needs to behave differently in-process, because it's technically // supposed to replace the calling process. So if we're supposed to run // in-process, we allow it to use the default streams and not use // pumpers at all. See JRUBY-2156 and JRUBY-2154.	WITHOUT_CLASSIFICATION	0.8939674189172122	WITHOUT_CLASSIFICATION	0.10603258108278785	IMPLEMENTATION
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999998635353075	WITHOUT_CLASSIFICATION	1.364646925805711E-7	IMPLEMENTATION
// The problem we trying to solve below: STDIN in Java // is blocked and non-interruptible, so if we invoke read // on it, we might never be able to interrupt such thread. // So, we use in.available() to see if there is any input // ready, and only then read it. But this approach can't // tell whether the end of stream reached or not, so we // might end up looping right at the end of the stream. // Well, at least, we can improve the situation by checking // if some input was ever available, and if so, not // checking for available anymore, and just go to read.	WITHOUT_CLASSIFICATION	0.9999996256437065	WITHOUT_CLASSIFICATION	3.74356293462559E-7	IMPLEMENTATION
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999576923725999	WITHOUT_CLASSIFICATION	4.23076274001574E-5	IMPLEMENTATION
// an empirically derived rule: precision applies to // significand length, irrespective of exponent	WITHOUT_CLASSIFICATION	0.9999067468856642	WITHOUT_CLASSIFICATION	9.325311433574787E-5	IMPLEMENTATION
// an official rule, clarified: if the exponent // <clarif>after adjusting for exponent form</clarif> // is < -4,  or the exponent <clarif>after adjusting  // for exponent form</clarif> is greater than the // precision, use exponent form	WITHOUT_CLASSIFICATION	0.9999878780528567	WITHOUT_CLASSIFICATION	1.2121947143355465E-5	IMPLEMENTATION
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9999870183415727	WITHOUT_CLASSIFICATION	1.2981658427298193E-5	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9997152698999422	WITHOUT_CLASSIFICATION	2.8473010005777627E-4	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9997152698999422	WITHOUT_CLASSIFICATION	2.8473010005777627E-4	IMPLEMENTATION
// MRI behavior: validate only the unnumbered arguments	WITHOUT_CLASSIFICATION	0.9999537470803688	WITHOUT_CLASSIFICATION	4.625291963117752E-5	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999320054065037	WITHOUT_CLASSIFICATION	6.799459349619957E-5	IMPLEMENTATION
// calculation for simple (and typical) case, // adapted from sun.misc.FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999752428069276	WITHOUT_CLASSIFICATION	2.475719307229059E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.999976214108194	WITHOUT_CLASSIFICATION	2.378589180606253E-5	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9987495918070346	WITHOUT_CLASSIFICATION	0.0012504081929654769	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9987495918070346	WITHOUT_CLASSIFICATION	0.0012504081929654769	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9987495918070346	WITHOUT_CLASSIFICATION	0.0012504081929654769	IMPLEMENTATION
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9911761900962339	WITHOUT_CLASSIFICATION	0.00882380990376601	IMPLEMENTATION
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999872020031575	WITHOUT_CLASSIFICATION	1.279799684239219E-5	IMPLEMENTATION
// call chmod after we created the RandomAccesFile // because otherwise, the file could be read-only	WITHOUT_CLASSIFICATION	0.9998281063230554	WITHOUT_CLASSIFICATION	1.7189367694455982E-4	IMPLEMENTATION
// attempt to set the permissions, if we have been passed a POSIX instance, // and only if the file was created in this call.	WITHOUT_CLASSIFICATION	0.9999976448043151	WITHOUT_CLASSIFICATION	2.3551956849525715E-6	IMPLEMENTATION
// // When reading into a heap buffer, the jvm allocates a temporary // direct ByteBuffer of the requested size.  To avoid allocating // a huge direct buffer when doing ludicrous reads (e.g. 1G or more) // we split the read up into chunks of no more than 1M //	WITHOUT_CLASSIFICATION	0.999995252709917	WITHOUT_CLASSIFICATION	4.747290083065307E-6	IMPLEMENTATION
// // If it is a file channel, then we can pre-allocate the output buffer // to the total size of buffered + remaining bytes in file //	WITHOUT_CLASSIFICATION	0.9999988381694072	WITHOUT_CLASSIFICATION	1.161830592755341E-6	IMPLEMENTATION
// // Cannot discern the total read length - allocate at least enough for the buffered data //	WITHOUT_CLASSIFICATION	0.9999957961464898	WITHOUT_CLASSIFICATION	4.203853510208702E-6	IMPLEMENTATION
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.999988161710587	WITHOUT_CLASSIFICATION	1.1838289413000054E-5	IMPLEMENTATION
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9989350761948479	WITHOUT_CLASSIFICATION	0.0010649238051520784	IMPLEMENTATION
// already have some bytes buffered, just return those	WITHOUT_CLASSIFICATION	0.9999918509390187	WITHOUT_CLASSIFICATION	8.149060981358351E-6	IMPLEMENTATION
// reset buffer	WITHOUT_CLASSIFICATION	0.9992079543572967	WITHOUT_CLASSIFICATION	7.920456427033981E-4	IMPLEMENTATION
// // Synchronize and re-check to avoid creating more than one Selector per provider //	WITHOUT_CLASSIFICATION	0.9991362142622149	WITHOUT_CLASSIFICATION	8.637857377851379E-4	IMPLEMENTATION
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.8454436219742767	IMPLEMENTATION	0.15455637802572333	WITHOUT_CLASSIFICATION
// Is there something built into JRuby to do this?	WITHOUT_CLASSIFICATION	0.9999308182337906	WITHOUT_CLASSIFICATION	6.918176620945966E-5	IMPLEMENTATION
// Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long // assertTrue(value == valueViaValuesIterator);	WITHOUT_CLASSIFICATION	0.9999522901029617	WITHOUT_CLASSIFICATION	4.77098970384084E-5	IMPLEMENTATION
// value equality //result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); //assertEquals("two", result);	WITHOUT_CLASSIFICATION	0.9999754831677509	WITHOUT_CLASSIFICATION	2.4516832249166352E-5	IMPLEMENTATION
// Uncomment the "puts" lines if you want to see more detail	WITHOUT_CLASSIFICATION	0.9998435544877654	WITHOUT_CLASSIFICATION	1.5644551223470207E-4	IMPLEMENTATION
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999755069745393	WITHOUT_CLASSIFICATION	2.449302546077365E-5	IMPLEMENTATION
// change the thread context to include the class	WITHOUT_CLASSIFICATION	0.9998367537574339	WITHOUT_CLASSIFICATION	1.63246242566176E-4	IMPLEMENTATION
