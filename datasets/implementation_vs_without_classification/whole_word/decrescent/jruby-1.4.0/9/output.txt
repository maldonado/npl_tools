// TODO: warn "tried to create Proc object without a block"	IMPLEMENTATION	0.8457176890725235	WITHOUT_CLASSIFICATION	0.15428231092747638	IMPLEMENTATION
// TODO: CLONE_SETUP here	IMPLEMENTATION	0.9038943315326645	IMPLEMENTATION	0.09610566846733543	WITHOUT_CLASSIFICATION
// TODO: Someday, enable.	IMPLEMENTATION	0.5417190653341669	IMPLEMENTATION	0.4582809346658332	WITHOUT_CLASSIFICATION
// Bunch of methods still not implemented	IMPLEMENTATION	0.9191368197134372	IMPLEMENTATION	0.08086318028656277	WITHOUT_CLASSIFICATION
// TODO: non-strict option	IMPLEMENTATION	0.6313609420751789	WITHOUT_CLASSIFICATION	0.36863905792482105	IMPLEMENTATION
// TODO: opt for 2 and 3 ?	IMPLEMENTATION	0.9264909863626635	WITHOUT_CLASSIFICATION	0.07350901363733649	IMPLEMENTATION
// FIXME: Should we make this work with platform's locale, // or continue hardcoding US?	IMPLEMENTATION	0.7198644017935205	WITHOUT_CLASSIFICATION	0.2801355982064795	IMPLEMENTATION
// TODO: rescan code range ?	IMPLEMENTATION	0.5479801010378824	IMPLEMENTATION	0.4520198989621176	WITHOUT_CLASSIFICATION
// TODO: rescan code range ?	IMPLEMENTATION	0.5479801010378824	IMPLEMENTATION	0.4520198989621176	WITHOUT_CLASSIFICATION
// TODO: pass this in?	IMPLEMENTATION	0.7311675407008509	IMPLEMENTATION	0.2688324592991491	WITHOUT_CLASSIFICATION
// FIXME: Pass block down?	IMPLEMENTATION	0.9181998635846097	WITHOUT_CLASSIFICATION	0.08180013641539029	IMPLEMENTATION
// TODO: do something here?	IMPLEMENTATION	0.7248705711699034	IMPLEMENTATION	0.27512942883009656	WITHOUT_CLASSIFICATION
// TODO: port exact behavior from MRI, and move most locking logic into ChannelDescriptor // TODO: for all LOCK_NB cases, return false if they would block	IMPLEMENTATION	0.5717449920891827	WITHOUT_CLASSIFICATION	0.4282550079108173	IMPLEMENTATION
// TODO: check if too many open files, GC and try again	IMPLEMENTATION	0.8915999264339214	WITHOUT_CLASSIFICATION	0.10840007356607857	IMPLEMENTATION
//TODO deal with UNC names	IMPLEMENTATION	0.9203555284033166	IMPLEMENTATION	0.07964447159668349	WITHOUT_CLASSIFICATION
// FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.7356306393666824	WITHOUT_CLASSIFICATION	0.2643693606333177	IMPLEMENTATION
//FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.9967457040280843	WITHOUT_CLASSIFICATION	0.0032542959719158273	IMPLEMENTATION
// TODO: SafeStringValue here	IMPLEMENTATION	0.9038943315326645	IMPLEMENTATION	0.09610566846733543	WITHOUT_CLASSIFICATION
// TODO: turn off readable? am I reading this right? // This only seems to be used while duping below, since modes gets // reset to actual modes afterward //fptr->mode &= (m & FMODE_READABLE) ? ~FMODE_READABLE : ~FMODE_WRITABLE;	IMPLEMENTATION	0.90119911235217	WITHOUT_CLASSIFICATION	0.09880088764783009	IMPLEMENTATION
// TODO: check safe, taint on incoming string	IMPLEMENTATION	0.8739873989918606	WITHOUT_CLASSIFICATION	0.12601260100813927	IMPLEMENTATION
// TODO: pipe handler to be reopened with path and "w" mode	IMPLEMENTATION	0.5416339977148326	WITHOUT_CLASSIFICATION	0.4583660022851675	IMPLEMENTATION
// FIXME: add text mode to mode flags	IMPLEMENTATION	0.915941007100294	WITHOUT_CLASSIFICATION	0.08405899289970603	IMPLEMENTATION
// TODO: Something about pipe buffer length here	IMPLEMENTATION	0.8506926507974972	IMPLEMENTATION	0.1493073492025028	WITHOUT_CLASSIFICATION
// TODO: handle errors in buffered write by retrying until finished or file is closed	IMPLEMENTATION	0.8268846013363976	WITHOUT_CLASSIFICATION	0.17311539866360223	IMPLEMENTATION
// TODO: notify threads waiting on descriptors/IO? probably not...	IMPLEMENTATION	0.5199505465011068	WITHOUT_CLASSIFICATION	0.4800494534988932	IMPLEMENTATION
// TODO: Ruby re-checks that the buffer string hasn't been modified	IMPLEMENTATION	0.8218988183046112	WITHOUT_CLASSIFICATION	0.17810118169538885	IMPLEMENTATION
// TODO: Ruby unlocks the string here	IMPLEMENTATION	0.7308778367580581	WITHOUT_CLASSIFICATION	0.2691221632419419	IMPLEMENTATION
// TODO: Ruby truncates string to specific size here, but our bytelist should handle this already?	IMPLEMENTATION	0.9638630370207446	WITHOUT_CLASSIFICATION	0.036136962979255303	IMPLEMENTATION
// TODO: Ruby unlocks the string here	IMPLEMENTATION	0.7308778367580581	WITHOUT_CLASSIFICATION	0.2691221632419419	IMPLEMENTATION
// TODO: Ruby truncates string to specific size here, but our bytelist should handle this already?	IMPLEMENTATION	0.9638630370207446	WITHOUT_CLASSIFICATION	0.036136962979255303	IMPLEMENTATION
// TODO: ruby locks the string here	IMPLEMENTATION	0.7436409049494045	WITHOUT_CLASSIFICATION	0.2563590950505954	IMPLEMENTATION
// TODO same zero-length checks as file above	IMPLEMENTATION	0.6486969261291504	WITHOUT_CLASSIFICATION	0.3513030738708497	IMPLEMENTATION
// TODO: MRI also can hadle Bignum here	IMPLEMENTATION	0.9674076066529478	IMPLEMENTATION	0.03259239334705215	WITHOUT_CLASSIFICATION
// TODO: make threadsafe	IMPLEMENTATION	0.8633224553385926	IMPLEMENTATION	0.1366775446614073	WITHOUT_CLASSIFICATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.6297388466186823	WITHOUT_CLASSIFICATION	0.37026115338131776	IMPLEMENTATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.6297388466186823	WITHOUT_CLASSIFICATION	0.37026115338131776	IMPLEMENTATION
// FIXME: create AttrReaderMethod, AttrWriterMethod, for faster attr access	IMPLEMENTATION	0.9807864778182712	WITHOUT_CLASSIFICATION	0.019213522181728716	IMPLEMENTATION
// Do not clone cached methods // FIXME: MRI copies all methods here	IMPLEMENTATION	0.6179045450050825	WITHOUT_CLASSIFICATION	0.38209545499491754	IMPLEMENTATION
// TODO: don't calculate the same value 3 times	IMPLEMENTATION	0.7807577602519208	WITHOUT_CLASSIFICATION	0.2192422397480791	IMPLEMENTATION
// TODO: 3 times calculate the same value below	IMPLEMENTATION	0.7893956795536771	WITHOUT_CLASSIFICATION	0.21060432044632302	IMPLEMENTATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.9882425459711157	IMPLEMENTATION	0.011757454028884357	WITHOUT_CLASSIFICATION
// TODO: Store BEGIN and END information into this node	IMPLEMENTATION	0.6938276755303623	WITHOUT_CLASSIFICATION	0.3061723244696378	IMPLEMENTATION
// TODO: put these nil guards into tree (bigger than I want to do right now)	IMPLEMENTATION	0.87037632595177	IMPLEMENTATION	0.1296236740482301	WITHOUT_CLASSIFICATION
// FIXME: Make bodyNode non-null in parser	IMPLEMENTATION	0.9935229601889553	WITHOUT_CLASSIFICATION	0.006477039811044624	IMPLEMENTATION
// TODO: call config with scope but no frame	IMPLEMENTATION	0.5457606788316571	WITHOUT_CLASSIFICATION	0.4542393211683428	IMPLEMENTATION
// TODO: add trace call?	IMPLEMENTATION	0.8189083421306204	IMPLEMENTATION	0.1810916578693796	WITHOUT_CLASSIFICATION
// FIXME: missing arity check	IMPLEMENTATION	0.8762349188425272	WITHOUT_CLASSIFICATION	0.12376508115747273	IMPLEMENTATION
// FIXME: optimize for cases where we have no false branch	IMPLEMENTATION	0.9625253784938821	WITHOUT_CLASSIFICATION	0.03747462150611782	IMPLEMENTATION
// FIXME: after jump is not in here.  Will if ever be? //Label afterJmp = new Label();	IMPLEMENTATION	0.9880316250192399	WITHOUT_CLASSIFICATION	0.011968374980760014	IMPLEMENTATION
// TODO: build arg list based on number of args, optionals, etc	IMPLEMENTATION	0.9260318490789903	IMPLEMENTATION	0.07396815092100968	WITHOUT_CLASSIFICATION
// FIXME: missing arity check	IMPLEMENTATION	0.8762349188425272	WITHOUT_CLASSIFICATION	0.12376508115747273	IMPLEMENTATION
// SSS FIXME: Traverse up the scope hierarchy to find the constant as long as the parent is a static scope	IMPLEMENTATION	0.9860960050295063	WITHOUT_CLASSIFICATION	0.013903994970493673	IMPLEMENTATION
// SSS FIXME: Should I be returning the operand constructed here?	IMPLEMENTATION	0.6070838509606571	WITHOUT_CLASSIFICATION	0.3929161490393429	IMPLEMENTATION
// TODO: Add IR instructions for checking method arity! // s.getVariableCompiler().checkMethodArity(required, opt, rest);	IMPLEMENTATION	0.980690021601882	IMPLEMENTATION	0.019309978398118054	WITHOUT_CLASSIFICATION
// FIXME: Ruby 1.9 post args code needs to come here	IMPLEMENTATION	0.728977774928228	IMPLEMENTATION	0.2710222250717719	WITHOUT_CLASSIFICATION
// SSS: FIXME: Somewhere here, we need to record information the type of this operand as String	IMPLEMENTATION	0.9930720375072476	WITHOUT_CLASSIFICATION	0.006927962492752404	IMPLEMENTATION
// FIXME: Translate this call below! // s.unwrapPassedBlock();	IMPLEMENTATION	0.8995266852247716	WITHOUT_CLASSIFICATION	0.1004733147752284	IMPLEMENTATION
// SSS FIXME: We need to build debug information tracking into the IR in some fashion // So, these methods below would have to have equivalents in IR_Scope implementations.	IMPLEMENTATION	0.9324517242695098	WITHOUT_CLASSIFICATION	0.0675482757304902	IMPLEMENTATION
// SSS FIXME: Incomplete!	IMPLEMENTATION	0.9814868074771175	WITHOUT_CLASSIFICATION	0.018513192522882495	IMPLEMENTATION
// SSS FIXME: Pick one of bytelist or string, or add internal conversion methods to convert to the default representation	IMPLEMENTATION	0.9670741949125203	WITHOUT_CLASSIFICATION	0.032925805087479665	IMPLEMENTATION
// SSS FIXME: To be done	IMPLEMENTATION	0.9956286798469339	WITHOUT_CLASSIFICATION	0.004371320153066088	IMPLEMENTATION
//TODO: implement, won't do this now	IMPLEMENTATION	0.990031277621423	WITHOUT_CLASSIFICATION	0.009968722378577051	IMPLEMENTATION
//TODO: implement, won't do this now	IMPLEMENTATION	0.990031277621423	WITHOUT_CLASSIFICATION	0.009968722378577051	IMPLEMENTATION
// TODO: validate port as numeric	IMPLEMENTATION	0.5080568378052991	IMPLEMENTATION	0.49194316219470086	WITHOUT_CLASSIFICATION
// TODO: this code should really check if a Ruby equals method is implemented or not.	IMPLEMENTATION	0.9992054471371682	IMPLEMENTATION	7.945528628318583E-4	WITHOUT_CLASSIFICATION
// if not already defined, we add a 'new' that guesses at which signature to use // TODO: just adding first one right now...add in signature-guessing logic	IMPLEMENTATION	0.9715511704176779	IMPLEMENTATION	0.028448829582322106	WITHOUT_CLASSIFICATION
// TODO: deal with varargs	IMPLEMENTATION	0.7214308208814333	IMPLEMENTATION	0.27856917911856677	WITHOUT_CLASSIFICATION
// TODO: deal with varargs	IMPLEMENTATION	0.7214308208814333	IMPLEMENTATION	0.27856917911856677	WITHOUT_CLASSIFICATION
// TODO: other reserved names?	IMPLEMENTATION	0.8684443803317017	IMPLEMENTATION	0.1315556196682982	WITHOUT_CLASSIFICATION
// TODO: we can probably release our references to the constantFields // array and static/instance callback hashes at this point. 	IMPLEMENTATION	0.6525899531070929	WITHOUT_CLASSIFICATION	0.3474100468929073	IMPLEMENTATION
// TODO: Formalize conversion mechanisms between Java and Ruby	IMPLEMENTATION	0.8657714869450167	WITHOUT_CLASSIFICATION	0.13422851305498323	IMPLEMENTATION
// XXX: Check if it's appropriate type?	IMPLEMENTATION	0.9996711363521493	WITHOUT_CLASSIFICATION	3.2886364785063407E-4	IMPLEMENTATION
// TODO: call ruby method	IMPLEMENTATION	0.8011860155487209	IMPLEMENTATION	0.19881398445127904	WITHOUT_CLASSIFICATION
// TODO: call ruby method	IMPLEMENTATION	0.8011860155487209	IMPLEMENTATION	0.19881398445127904	WITHOUT_CLASSIFICATION
// TODO: Add safety check for taintedness	IMPLEMENTATION	0.767961513076768	IMPLEMENTATION	0.232038486923232	WITHOUT_CLASSIFICATION
// FIXME: Need to detect magic_comment in 1.9 here for encoding	IMPLEMENTATION	0.8237713801750698	WITHOUT_CLASSIFICATION	0.17622861982493024	IMPLEMENTATION
/* xxx shouldn't check if valid option variable */	IMPLEMENTATION	0.9998994937981415	WITHOUT_CLASSIFICATION	1.0050620185856093E-4	IMPLEMENTATION
// TODO: this isn't handling multibyte yet	IMPLEMENTATION	0.9813090319235506	IMPLEMENTATION	0.018690968076449335	WITHOUT_CLASSIFICATION
// TODO: This should be something else like a tCHAR	IMPLEMENTATION	0.8920891725938779	IMPLEMENTATION	0.10791082740612204	WITHOUT_CLASSIFICATION
// FIXME: \r logic needed	IMPLEMENTATION	0.9895469233216575	IMPLEMENTATION	0.010453076678342473	WITHOUT_CLASSIFICATION
// TODO: note lack of command.com support for Win 9x...	IMPLEMENTATION	0.8920860280279258	IMPLEMENTATION	0.1079139719720742	WITHOUT_CLASSIFICATION
// FIXME: Make thread pool threads daemons if necessary	IMPLEMENTATION	0.9804657757296313	WITHOUT_CLASSIFICATION	0.019534224270368654	IMPLEMENTATION
/* FIXME: We may be intern'ing more than once.*/	IMPLEMENTATION	0.9471107379870555	IMPLEMENTATION	0.052889262012944485	WITHOUT_CLASSIFICATION
/* FIXME: We may be intern'ing more than once.*/	IMPLEMENTATION	0.9471107379870555	IMPLEMENTATION	0.052889262012944485	WITHOUT_CLASSIFICATION
/* FIXME: arg_concat missing for opt_call_args*/	IMPLEMENTATION	0.8792268738224641	IMPLEMENTATION	0.12077312617753588	WITHOUT_CLASSIFICATION
/* FIXME: arg_concat logic missing for opt_call_args*/	IMPLEMENTATION	0.9579603253237305	IMPLEMENTATION	0.0420396746762695	WITHOUT_CLASSIFICATION
// FIXME: This needs to happen for lambdas //            args.checkArgCount(runtime, parameters.length);	IMPLEMENTATION	0.9849507009271847	WITHOUT_CLASSIFICATION	0.015049299072815303	IMPLEMENTATION
// FIXME: This needs to happen for lambdas //            args.checkArgCount(runtime, parameters.length);	IMPLEMENTATION	0.9849507009271847	WITHOUT_CLASSIFICATION	0.015049299072815303	IMPLEMENTATION
// TODO: make it cross runtime safe by COW or eager copy	IMPLEMENTATION	0.541033543820262	WITHOUT_CLASSIFICATION	0.45896645617973797	IMPLEMENTATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.9452439176223013	WITHOUT_CLASSIFICATION	0.05475608237769857	IMPLEMENTATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.9452439176223013	WITHOUT_CLASSIFICATION	0.05475608237769857	IMPLEMENTATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.9452439176223013	WITHOUT_CLASSIFICATION	0.05475608237769857	IMPLEMENTATION
// TODO: check the return value here	IMPLEMENTATION	0.858101122000836	IMPLEMENTATION	0.14189887799916398	WITHOUT_CLASSIFICATION
// TODO: check the return value here	IMPLEMENTATION	0.858101122000836	IMPLEMENTATION	0.14189887799916398	WITHOUT_CLASSIFICATION
// TODO: Make sure all appropriate open flags are added to this check.	IMPLEMENTATION	0.9770644440243648	WITHOUT_CLASSIFICATION	0.022935555975635184	IMPLEMENTATION
//subList.clear(); // Sublist is supposed to share same backing store as list...TODO in RubyArray. //assertTrue(list.size() == 1);	IMPLEMENTATION	0.9999995512584705	WITHOUT_CLASSIFICATION	4.4874152945542804E-7	IMPLEMENTATION
// SSS FIXME: Cannot optimize this without assuming that Range.to_ary method has not redefined. // So for now, return null!	IMPLEMENTATION	0.7816135182019879	IMPLEMENTATION	0.2183864817980121	WITHOUT_CLASSIFICATION
// TODO Auto-generated method stub	IMPLEMENTATION	0.9992446324677745	IMPLEMENTATION	7.553675322254669E-4	WITHOUT_CLASSIFICATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.9957151057114053	IMPLEMENTATION	0.004284894288594721	WITHOUT_CLASSIFICATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.9957151057114053	IMPLEMENTATION	0.004284894288594721	WITHOUT_CLASSIFICATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.9957151057114053	IMPLEMENTATION	0.004284894288594721	WITHOUT_CLASSIFICATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.9882425459711157	IMPLEMENTATION	0.011757454028884357	WITHOUT_CLASSIFICATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.9882425459711157	IMPLEMENTATION	0.011757454028884357	WITHOUT_CLASSIFICATION
// TODO: check for ascii string	IMPLEMENTATION	0.9509958748765144	WITHOUT_CLASSIFICATION	0.04900412512348569	IMPLEMENTATION
// filter out any Java primitive names // TODO: should check against all Java reserved names here, not just primitives	IMPLEMENTATION	0.9259833041064975	IMPLEMENTATION	0.07401669589350239	WITHOUT_CLASSIFICATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.6297388466186823	WITHOUT_CLASSIFICATION	0.37026115338131776	IMPLEMENTATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.6297388466186823	WITHOUT_CLASSIFICATION	0.37026115338131776	IMPLEMENTATION
// TODO: missing additional logic for dealing with conflicting protected fields.	IMPLEMENTATION	0.9791136693713509	IMPLEMENTATION	0.020886330628649113	WITHOUT_CLASSIFICATION
// TODO: better detection when path is absolute or not. // If the path isn't absolute, then prepend the current working // directory to the path.	IMPLEMENTATION	0.9803721002394573	WITHOUT_CLASSIFICATION	0.019627899760542702	IMPLEMENTATION
// FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.7356306393666824	WITHOUT_CLASSIFICATION	0.2643693606333177	IMPLEMENTATION
// FIX replace type() == ... with isInstanceOf(...)	IMPLEMENTATION	0.9995902707895727	WITHOUT_CLASSIFICATION	4.0972921042725733E-4	IMPLEMENTATION
/* TODO: MRI is just a when node.  We need this extra logic for IDE consumers (null in casenode statement should be implicit nil)*/	IMPLEMENTATION	0.9646631014239546	IMPLEMENTATION	0.035336898576045425	WITHOUT_CLASSIFICATION
// TODO: This and recacheRespondsTo needed to be synchronized for JRUBY-3466, // but this degraded performance nearly 2x. It's still faster than MRI, but // a reanalysis of this code may show a faster way to ensure we're caching // safely.	IMPLEMENTATION	0.9999796534817076	IMPLEMENTATION	2.034651829234259E-5	WITHOUT_CLASSIFICATION
// TODO: adjust length so it won't fall in the middle  // of a multi-byte character. MRI's sprintf.c uses tables // in a modified version of regex.c, which assume some // particular  encoding for a given installation/application. // (See regex.c#re_mbcinit in ruby-1.8.5-p12)  // // This is only an issue if the user specifies a precision // that causes the string to be truncated. The same issue // would arise taking a substring of a ByteList-backed RubyString.	IMPLEMENTATION	0.9999998634347024	WITHOUT_CLASSIFICATION	1.3656529761312615E-7	IMPLEMENTATION
// set constants now that they're initialized	WITHOUT_CLASSIFICATION	0.99982104110093	WITHOUT_CLASSIFICATION	1.789588990700184E-4	IMPLEMENTATION
// line 335	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
// Figure end-char.  '\0' is special to indicate begin=end and that no nesting?	WITHOUT_CLASSIFICATION	0.999991138927498	WITHOUT_CLASSIFICATION	8.861072501924132E-6	IMPLEMENTATION
// line 362	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 372	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
// line 391	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
/* ^D */	WITHOUT_CLASSIFICATION	0.9999980676169425	WITHOUT_CLASSIFICATION	1.932383057429086E-6	IMPLEMENTATION
/* ^Z */	WITHOUT_CLASSIFICATION	0.9999981520240865	WITHOUT_CLASSIFICATION	1.8479759135979878E-6	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
//Do nothing	WITHOUT_CLASSIFICATION	0.9998634986217141	WITHOUT_CLASSIFICATION	1.3650137828591453E-4	IMPLEMENTATION
//Do nothing	WITHOUT_CLASSIFICATION	0.9998634986217141	WITHOUT_CLASSIFICATION	1.3650137828591453E-4	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999920125627605	WITHOUT_CLASSIFICATION	7.987437239563107E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999920125627605	WITHOUT_CLASSIFICATION	7.987437239563107E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999920125627605	WITHOUT_CLASSIFICATION	7.987437239563107E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999920125627605	WITHOUT_CLASSIFICATION	7.987437239563107E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999920125627605	WITHOUT_CLASSIFICATION	7.987437239563107E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999920125627605	WITHOUT_CLASSIFICATION	7.987437239563107E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999920125627605	WITHOUT_CLASSIFICATION	7.987437239563107E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999920125627605	WITHOUT_CLASSIFICATION	7.987437239563107E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999920125627605	WITHOUT_CLASSIFICATION	7.987437239563107E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999920125627605	WITHOUT_CLASSIFICATION	7.987437239563107E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999920125627605	WITHOUT_CLASSIFICATION	7.987437239563107E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999920125627605	WITHOUT_CLASSIFICATION	7.987437239563107E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999920125627605	WITHOUT_CLASSIFICATION	7.987437239563107E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999920125627605	WITHOUT_CLASSIFICATION	7.987437239563107E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999920125627605	WITHOUT_CLASSIFICATION	7.987437239563107E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999920125627605	WITHOUT_CLASSIFICATION	7.987437239563107E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999920125627605	WITHOUT_CLASSIFICATION	7.987437239563107E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999920125627605	WITHOUT_CLASSIFICATION	7.987437239563107E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999920125627605	WITHOUT_CLASSIFICATION	7.987437239563107E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999920125627605	WITHOUT_CLASSIFICATION	7.987437239563107E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999920125627605	WITHOUT_CLASSIFICATION	7.987437239563107E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999920125627605	WITHOUT_CLASSIFICATION	7.987437239563107E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999920125627605	WITHOUT_CLASSIFICATION	7.987437239563107E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999920125627605	WITHOUT_CLASSIFICATION	7.987437239563107E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999920125627605	WITHOUT_CLASSIFICATION	7.987437239563107E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999920125627605	WITHOUT_CLASSIFICATION	7.987437239563107E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999920125627605	WITHOUT_CLASSIFICATION	7.987437239563107E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999920125627605	WITHOUT_CLASSIFICATION	7.987437239563107E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999920125627605	WITHOUT_CLASSIFICATION	7.987437239563107E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999920125627605	WITHOUT_CLASSIFICATION	7.987437239563107E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999920125627605	WITHOUT_CLASSIFICATION	7.987437239563107E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999920125627605	WITHOUT_CLASSIFICATION	7.987437239563107E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999920125627605	WITHOUT_CLASSIFICATION	7.987437239563107E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999920125627605	WITHOUT_CLASSIFICATION	7.987437239563107E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999920125627605	WITHOUT_CLASSIFICATION	7.987437239563107E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999920125627605	WITHOUT_CLASSIFICATION	7.987437239563107E-6	IMPLEMENTATION
// return result	WITHOUT_CLASSIFICATION	0.9998932002369185	WITHOUT_CLASSIFICATION	1.0679976308158481E-4	IMPLEMENTATION
// name	WITHOUT_CLASSIFICATION	0.9999814690406206	WITHOUT_CLASSIFICATION	1.8530959379418197E-5	IMPLEMENTATION
// Define System.getProperties() in ENV_JAVA	WITHOUT_CLASSIFICATION	0.9999851086383933	WITHOUT_CLASSIFICATION	1.4891361606652121E-5	IMPLEMENTATION
// Accessor methods.	WITHOUT_CLASSIFICATION	0.9997361220527928	WITHOUT_CLASSIFICATION	2.6387794720723716E-4	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.999672003863548	WITHOUT_CLASSIFICATION	3.2799613645195433E-4	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.999672003863548	WITHOUT_CLASSIFICATION	3.2799613645195433E-4	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.999672003863548	WITHOUT_CLASSIFICATION	3.2799613645195433E-4	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.999672003863548	WITHOUT_CLASSIFICATION	3.2799613645195433E-4	IMPLEMENTATION
// call getpwent to fail early if unsupported	WITHOUT_CLASSIFICATION	0.9999770819728615	WITHOUT_CLASSIFICATION	2.291802713850618E-5	IMPLEMENTATION
// fall back on env entry for USER	WITHOUT_CLASSIFICATION	0.9997850794741057	WITHOUT_CLASSIFICATION	2.1492052589433845E-4	IMPLEMENTATION
// try to read grent to fail fast	WITHOUT_CLASSIFICATION	0.999991847012165	WITHOUT_CLASSIFICATION	8.152987834932996E-6	IMPLEMENTATION
// define ARGV and $* for this runtime	WITHOUT_CLASSIFICATION	0.9999730490467708	WITHOUT_CLASSIFICATION	2.6950953229223878E-5	IMPLEMENTATION
// Version information:	WITHOUT_CLASSIFICATION	0.9999502804271747	WITHOUT_CLASSIFICATION	4.971957282536909E-5	IMPLEMENTATION
// after defn of $stderr as the call may produce warnings	WITHOUT_CLASSIFICATION	0.9999716027228962	WITHOUT_CLASSIFICATION	2.839727710377323E-5	IMPLEMENTATION
// ARGF, $< object	WITHOUT_CLASSIFICATION	0.9999004459703187	WITHOUT_CLASSIFICATION	9.955402968131704E-5	IMPLEMENTATION
// if the environment variables can't be obtained, define an empty ENV	WITHOUT_CLASSIFICATION	0.9999989821662056	WITHOUT_CLASSIFICATION	1.0178337943796952E-6	IMPLEMENTATION
// On platforms without a c-library accessable through JNA, getpid will return hashCode  // as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing // $$ on getpid() where available, we have the same semantics as MRI.	WITHOUT_CLASSIFICATION	0.9999997697059543	WITHOUT_CLASSIFICATION	2.302940457246867E-7	IMPLEMENTATION
//$@ returns nil if $!.backtrace is not an array	WITHOUT_CLASSIFICATION	0.9995582664377068	WITHOUT_CLASSIFICATION	4.417335622931618E-4	IMPLEMENTATION
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.999922597420802	WITHOUT_CLASSIFICATION	7.74025791979923E-5	IMPLEMENTATION
// MRI behavior: just plain '//' or '\\\\' are considered illegal on Windows.	WITHOUT_CLASSIFICATION	0.9999958759097756	WITHOUT_CLASSIFICATION	4.1240902244745885E-6	IMPLEMENTATION
// this _is_ legal (when removing an undef)	WITHOUT_CLASSIFICATION	0.9996116348647646	WITHOUT_CLASSIFICATION	3.88365135235401E-4	IMPLEMENTATION
// What we passed to the constructor for method 'path'	WITHOUT_CLASSIFICATION	0.9966782361419787	WITHOUT_CLASSIFICATION	0.003321763858021336	IMPLEMENTATION
// ----- Ruby Class Methods ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.999985188127767	WITHOUT_CLASSIFICATION	1.4811872232994557E-5	IMPLEMENTATION
// // CONSTANT TABLE METHODS - pass to delegate //	WITHOUT_CLASSIFICATION	0.9996235269258354	WITHOUT_CLASSIFICATION	3.7647307416457937E-4	IMPLEMENTATION
// We get canonical path to try and flatten the path out. // a dir '/subdir/..' should return as '/' // cnutter: Do we want to flatten path out?	WITHOUT_CLASSIFICATION	0.9999383022574903	WITHOUT_CLASSIFICATION	6.1697742509759E-5	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.999672003863548	WITHOUT_CLASSIFICATION	3.2799613645195433E-4	IMPLEMENTATION
// ----- Ruby Instance Methods -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999637143334984	WITHOUT_CLASSIFICATION	3.628566650148901E-5	IMPLEMENTATION
// Make sure any read()s after close fail.	WITHOUT_CLASSIFICATION	0.9999970836387244	WITHOUT_CLASSIFICATION	2.9163612754760274E-6	IMPLEMENTATION
// ----- Helper Methods --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.999977018123862	WITHOUT_CLASSIFICATION	2.29818761380563E-5	IMPLEMENTATION
// try to use POSIX for this first	WITHOUT_CLASSIFICATION	0.9998776523743791	WITHOUT_CLASSIFICATION	1.2234762562094174E-4	IMPLEMENTATION
// otherwise fall back on the old way	WITHOUT_CLASSIFICATION	0.9913525335177248	WITHOUT_CLASSIFICATION	0.00864746648227517	IMPLEMENTATION
// Proc class	WITHOUT_CLASSIFICATION	0.9998797094381424	WITHOUT_CLASSIFICATION	1.2029056185760747E-4	IMPLEMENTATION
// No passed in block, lets check next outer frame for one ('Proc.new')	WITHOUT_CLASSIFICATION	0.9999932202228212	WITHOUT_CLASSIFICATION	6.779777178758548E-6	IMPLEMENTATION
// modify the block with a new backref/lastline-grabbing scope	WITHOUT_CLASSIFICATION	0.9995448640231246	WITHOUT_CLASSIFICATION	4.551359768753962E-4	IMPLEMENTATION
// for future compatibility as constructors move toward not accepting metaclass?	WITHOUT_CLASSIFICATION	0.9990068921051244	WITHOUT_CLASSIFICATION	9.93107894875534E-4	IMPLEMENTATION
//        case RUBY_HYBRID: //            backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); //            break;	WITHOUT_CLASSIFICATION	0.9998705734653313	WITHOUT_CLASSIFICATION	1.2942653466877432E-4	IMPLEMENTATION
// This looks wrong, but it's the way MRI does it.	WITHOUT_CLASSIFICATION	0.9999968557140362	WITHOUT_CLASSIFICATION	3.1442859637592673E-6	IMPLEMENTATION
// rb_exc_new3	WITHOUT_CLASSIFICATION	0.9996612927501303	WITHOUT_CLASSIFICATION	3.3870724986971226E-4	IMPLEMENTATION
// NOTE: The indicies here match exactly the signal values; do not reorder	WITHOUT_CLASSIFICATION	0.9903435890175971	WITHOUT_CLASSIFICATION	0.009656410982402908	IMPLEMENTATION
//registerThreadDumpSignalHandler(runtime);	WITHOUT_CLASSIFICATION	0.9997254911986895	WITHOUT_CLASSIFICATION	2.7450880131056003E-4	IMPLEMENTATION
// IOT is also 6	WITHOUT_CLASSIFICATION	0.9998740774409506	WITHOUT_CLASSIFICATION	1.259225590494245E-4	IMPLEMENTATION
// CLD is also 20	WITHOUT_CLASSIFICATION	0.9998669061085734	WITHOUT_CLASSIFICATION	1.3309389142654522E-4	IMPLEMENTATION
// RubySignal	WITHOUT_CLASSIFICATION	0.9996612927501303	WITHOUT_CLASSIFICATION	3.3870724986971226E-4	IMPLEMENTATION
// ZStream actually *isn't* allocatable	WITHOUT_CLASSIFICATION	0.999873694273331	WITHOUT_CLASSIFICATION	1.263057266689411E-4	IMPLEMENTATION
// MRI behavior, enforced by tests	WITHOUT_CLASSIFICATION	0.9999725203041532	WITHOUT_CLASSIFICATION	2.7479695846789395E-5	IMPLEMENTATION
// it's safe since adler.update doesn't modify the array	WITHOUT_CLASSIFICATION	0.9999982982087966	WITHOUT_CLASSIFICATION	1.7017912034257778E-6	IMPLEMENTATION
// MRI behavior: in finished mode, we work as pass-through	WITHOUT_CLASSIFICATION	0.9999973021034829	WITHOUT_CLASSIFICATION	2.697896517059466E-6	IMPLEMENTATION
// SYNC_FLUSH	WITHOUT_CLASSIFICATION	0.9996612927501303	WITHOUT_CLASSIFICATION	3.3870724986971226E-4	IMPLEMENTATION
// By default, NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999168765384351	WITHOUT_CLASSIFICATION	8.312346156489339E-5	IMPLEMENTATION
//io.finish();	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
// should invoke seek on realIo	WITHOUT_CLASSIFICATION	0.9996206912164031	WITHOUT_CLASSIFICATION	3.7930878359689155E-4	IMPLEMENTATION
// hmm...	WITHOUT_CLASSIFICATION	0.9999901088813848	WITHOUT_CLASSIFICATION	9.891118615195496E-6	IMPLEMENTATION
// Called before any write to make sure the // header is always written before the first bytes	WITHOUT_CLASSIFICATION	0.999560236124908	WITHOUT_CLASSIFICATION	4.397638750920313E-4	IMPLEMENTATION
// For JDK 1.4 we can use "cal.getTimeInMillis()"	WITHOUT_CLASSIFICATION	0.999486658950624	WITHOUT_CLASSIFICATION	5.133410493759848E-4	IMPLEMENTATION
// We can just use dt, since it is immutable	WITHOUT_CLASSIFICATION	0.9999976160601507	WITHOUT_CLASSIFICATION	2.3839398493079488E-6	IMPLEMENTATION
// float number of seconds	WITHOUT_CLASSIFICATION	0.9999681165884877	WITHOUT_CLASSIFICATION	3.188341151234774E-5	IMPLEMENTATION
// modified to match how hash is calculated in 1.8.2	WITHOUT_CLASSIFICATION	0.999800824836102	WITHOUT_CLASSIFICATION	1.9917516389806933E-4	IMPLEMENTATION
// dump usec, not msec	WITHOUT_CLASSIFICATION	0.9985238260566329	WITHOUT_CLASSIFICATION	0.0014761739433670894	IMPLEMENTATION
/* Time class methods */	WITHOUT_CLASSIFICATION	0.9999956922867778	WITHOUT_CLASSIFICATION	4.307713222278732E-6	IMPLEMENTATION
// marsaling dumps usec, not msec	WITHOUT_CLASSIFICATION	0.9975581326940691	WITHOUT_CLASSIFICATION	0.002441867305930949	IMPLEMENTATION
// MRI accepts additional wday argument which appears to be ignored.	WITHOUT_CLASSIFICATION	0.9999396732544449	WITHOUT_CLASSIFICATION	6.032674555515672E-5	IMPLEMENTATION
// set up with min values and then add to allow rolling over	WITHOUT_CLASSIFICATION	0.9999823180741071	WITHOUT_CLASSIFICATION	1.7681925892903003E-5	IMPLEMENTATION
// the instant at which we will ask dtz what the difference between DST and // standard time is	WITHOUT_CLASSIFICATION	0.9999722228543809	WITHOUT_CLASSIFICATION	2.7777145619049183E-5	IMPLEMENTATION
// if we might be moving this time from !DST -> DST, the offset is assumed // to be the same as it was just before we last moved from DST -> !DST	WITHOUT_CLASSIFICATION	0.9999999977168516	WITHOUT_CLASSIFICATION	2.2831484827215224E-9	IMPLEMENTATION
// Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.	WITHOUT_CLASSIFICATION	0.9976945238212404	WITHOUT_CLASSIFICATION	0.0023054761787596463	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999960284708646	WITHOUT_CLASSIFICATION	3.971529135460984E-6	IMPLEMENTATION
/* If the value will fit in a Fixnum, return one of those. */	WITHOUT_CLASSIFICATION	0.9999999749603989	WITHOUT_CLASSIFICATION	2.50396010662248E-8	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999966366891363	WITHOUT_CLASSIFICATION	3.3633108636203095E-6	IMPLEMENTATION
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9997184613362794	WITHOUT_CLASSIFICATION	2.815386637206586E-4	IMPLEMENTATION
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9671175558786362	WITHOUT_CLASSIFICATION	0.03288244412136375	IMPLEMENTATION
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9671175558786362	WITHOUT_CLASSIFICATION	0.03288244412136375	IMPLEMENTATION
// no bignorm here needed	WITHOUT_CLASSIFICATION	0.7335738279718782	WITHOUT_CLASSIFICATION	0.26642617202812174	IMPLEMENTATION
// wow, the only time we can use the java protocol ;)	WITHOUT_CLASSIFICATION	0.9999767658023774	WITHOUT_CLASSIFICATION	2.323419762263723E-5	IMPLEMENTATION
// Pad with a 0	WITHOUT_CLASSIFICATION	0.999835058045562	WITHOUT_CLASSIFICATION	1.6494195443785987E-4	IMPLEMENTATION
// BigInteger required a sign byte in incoming array	WITHOUT_CLASSIFICATION	0.9999794449019017	WITHOUT_CLASSIFICATION	2.0555098098353756E-5	IMPLEMENTATION
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9999999417901414	WITHOUT_CLASSIFICATION	5.8209858620772624E-8	IMPLEMENTATION
// We do this b/c make_tmpname might be overridden	WITHOUT_CLASSIFICATION	0.9999920348152714	WITHOUT_CLASSIFICATION	7.965184728624783E-6	IMPLEMENTATION
// ???	WITHOUT_CLASSIFICATION	0.9999832802081475	WITHOUT_CLASSIFICATION	1.671979185255933E-5	IMPLEMENTATION
// PID	WITHOUT_CLASSIFICATION	0.9999901247408746	WITHOUT_CLASSIFICATION	9.875259125446075E-6	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999966366891363	WITHOUT_CLASSIFICATION	3.3633108636203095E-6	IMPLEMENTATION
// elements and trailing nils	WITHOUT_CLASSIFICATION	0.9999764562319334	WITHOUT_CLASSIFICATION	2.3543768066507877E-5	IMPLEMENTATION
// Dir::tmpdir	WITHOUT_CLASSIFICATION	0.9996612927501303	WITHOUT_CLASSIFICATION	3.3870724986971226E-4	IMPLEMENTATION
// volatile to ensure that initial nil-fill is visible to other threads	WITHOUT_CLASSIFICATION	0.9999897441091697	WITHOUT_CLASSIFICATION	1.0255890830234145E-5	IMPLEMENTATION
/* Ruby arrays default to holding 16 elements, so we create an         * ArrayList of the same size if we're not told otherwise         */	WITHOUT_CLASSIFICATION	0.9999970954968838	WITHOUT_CLASSIFICATION	2.90450311623737E-6	IMPLEMENTATION
/* rb_ary_new2     * just allocates the internal array     */	WITHOUT_CLASSIFICATION	0.9999966501016557	WITHOUT_CLASSIFICATION	3.349898344258701E-6	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999950901606225	WITHOUT_CLASSIFICATION	4.909839377426488E-6	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999950901606225	WITHOUT_CLASSIFICATION	4.909839377426488E-6	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999950901606225	WITHOUT_CLASSIFICATION	4.909839377426488E-6	IMPLEMENTATION
/* Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour     *      */	WITHOUT_CLASSIFICATION	0.9999904437456331	WITHOUT_CLASSIFICATION	9.556254367007498E-6	IMPLEMENTATION
/* NEWOBJ and OBJSETUP equivalent     * fastest one, for shared arrays, optional objectspace     */	WITHOUT_CLASSIFICATION	0.9999986766703377	WITHOUT_CLASSIFICATION	1.3233296622466851E-6	IMPLEMENTATION
// Create global constants and variables	WITHOUT_CLASSIFICATION	0.9999982059118769	WITHOUT_CLASSIFICATION	1.794088123026008E-6	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9893597353488237	WITHOUT_CLASSIFICATION	0.010640264651176337	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9893597353488237	WITHOUT_CLASSIFICATION	0.010640264651176337	IMPLEMENTATION
// Windows does not support these functions, so we won't even try // This also matches Ruby behavior for JRUBY-2353.	WITHOUT_CLASSIFICATION	0.9999903263243709	WITHOUT_CLASSIFICATION	9.673675629038109E-6	IMPLEMENTATION
// There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and // newer one (US/Pacific, America/Los_Angeles). This pattern is to detect // the legacy TZ format in order to convert it to the newer format // understood by Java API.	WITHOUT_CLASSIFICATION	0.9999486835329958	WITHOUT_CLASSIFICATION	5.131646700413395E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9893597353488237	WITHOUT_CLASSIFICATION	0.010640264651176337	IMPLEMENTATION
// 1.9 seems to just do inspect for to_s now	WITHOUT_CLASSIFICATION	0.9999991027161025	WITHOUT_CLASSIFICATION	8.972838976010783E-7	IMPLEMENTATION
// possibly should not in object space	WITHOUT_CLASSIFICATION	0.9999005628393446	WITHOUT_CLASSIFICATION	9.943716065533795E-5	IMPLEMENTATION
// only fill if there actually will remain trailing storage	WITHOUT_CLASSIFICATION	0.999993437245901	WITHOUT_CLASSIFICATION	6.562754099091615E-6	IMPLEMENTATION
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9996612927501303	WITHOUT_CLASSIFICATION	3.3870724986971226E-4	IMPLEMENTATION
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9996612927501303	WITHOUT_CLASSIFICATION	3.3870724986971226E-4	IMPLEMENTATION
// from DUP_SETUP	WITHOUT_CLASSIFICATION	0.9999278004094938	WITHOUT_CLASSIFICATION	7.21995905061681E-5	IMPLEMENTATION
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999799624367766	WITHOUT_CLASSIFICATION	2.0037563223390494E-5	IMPLEMENTATION
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.999966630479601	WITHOUT_CLASSIFICATION	3.3369520399055505E-5	IMPLEMENTATION
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.999966630479601	WITHOUT_CLASSIFICATION	3.3369520399055505E-5	IMPLEMENTATION
// Satisfy java.util.List interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999671986436774	WITHOUT_CLASSIFICATION	3.2801356322672865E-5	IMPLEMENTATION
// pre-set for the sake of terminating recursive calls	WITHOUT_CLASSIFICATION	0.9999443084919175	WITHOUT_CLASSIFICATION	5.569150808241754E-5	IMPLEMENTATION
/* root fiber */	WITHOUT_CLASSIFICATION	0.9999356377890228	WITHOUT_CLASSIFICATION	6.436221097722704E-5	IMPLEMENTATION
// GMT+00:00 --> Etc/GMT, see "MRI behavior" // comment below.	WITHOUT_CLASSIFICATION	0.9999207894991681	WITHOUT_CLASSIFICATION	7.92105008319965E-5	IMPLEMENTATION
//  See http://www.gzip.org/zlib/rfc-gzip.html	WITHOUT_CLASSIFICATION	0.9999456314457387	WITHOUT_CLASSIFICATION	5.436855426128372E-5	IMPLEMENTATION
// extras flag	WITHOUT_CLASSIFICATION	0.9995762331782881	WITHOUT_CLASSIFICATION	4.2376682171182674E-4	IMPLEMENTATION
// Zlib::NO_FLUSH	WITHOUT_CLASSIFICATION	0.9996612927501303	WITHOUT_CLASSIFICATION	3.3870724986971226E-4	IMPLEMENTATION
// ...nothing	WITHOUT_CLASSIFICATION	0.9996612927501303	WITHOUT_CLASSIFICATION	3.3870724986971226E-4	IMPLEMENTATION
// utility method	WITHOUT_CLASSIFICATION	0.9995221078036599	WITHOUT_CLASSIFICATION	4.778921963400421E-4	IMPLEMENTATION
// Prepare LoadService and load path	WITHOUT_CLASSIFICATION	0.999882489172155	WITHOUT_CLASSIFICATION	1.1751082784489208E-4	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999966366891363	WITHOUT_CLASSIFICATION	3.3633108636203095E-6	IMPLEMENTATION
// flags // 4 bytes of modified time	WITHOUT_CLASSIFICATION	0.9998785336011983	WITHOUT_CLASSIFICATION	1.21466398801803E-4	IMPLEMENTATION
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999111289778436	WITHOUT_CLASSIFICATION	8.887102215640251E-5	IMPLEMENTATION
// 1.8 "include?"	WITHOUT_CLASSIFICATION	0.9996612927501303	WITHOUT_CLASSIFICATION	3.3870724986971226E-4	IMPLEMENTATION
// any BigInteger is bigger than Fixnum and we don't have FIXABLE	WITHOUT_CLASSIFICATION	0.9999802861884585	WITHOUT_CLASSIFICATION	1.97138115416342E-5	IMPLEMENTATION
// beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal	WITHOUT_CLASSIFICATION	0.9999925527229891	WITHOUT_CLASSIFICATION	7.447277010879117E-6	IMPLEMENTATION
// MRI does it!	WITHOUT_CLASSIFICATION	0.99997756267733	WITHOUT_CLASSIFICATION	2.2437322670088232E-5	IMPLEMENTATION
// won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999986535979664	WITHOUT_CLASSIFICATION	1.3464020336020003E-6	IMPLEMENTATION
// it won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999972756053424	WITHOUT_CLASSIFICATION	2.724394657526681E-6	IMPLEMENTATION
// RubyClassPathVariable	WITHOUT_CLASSIFICATION	0.9999441559003632	WITHOUT_CLASSIFICATION	5.5844099636791055E-5	IMPLEMENTATION
// not to be confused with RubyObject's flags	WITHOUT_CLASSIFICATION	0.9987786652864946	WITHOUT_CLASSIFICATION	0.0012213347135054166	IMPLEMENTATION
// second argument is allowed, but ignored (MRI)	WITHOUT_CLASSIFICATION	0.999978446007777	WITHOUT_CLASSIFICATION	2.1553992222997543E-5	IMPLEMENTATION
// we are presumably running a precompiled class; load directly	WITHOUT_CLASSIFICATION	0.9999806477223757	WITHOUT_CLASSIFICATION	1.9352277624275586E-5	IMPLEMENTATION
// terminate; tryCompile will have printed out an error and we're done	WITHOUT_CLASSIFICATION	0.9999760239274863	WITHOUT_CLASSIFICATION	2.3976072513736944E-5	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999963487232956	WITHOUT_CLASSIFICATION	3.6512767044989323E-6	IMPLEMENTATION
// do nothing, this iteration restarts	WITHOUT_CLASSIFICATION	0.9999164033178797	WITHOUT_CLASSIFICATION	8.359668212024285E-5	IMPLEMENTATION
// recheck condition	WITHOUT_CLASSIFICATION	0.9996820130038175	WITHOUT_CLASSIFICATION	3.1798699618252994E-4	IMPLEMENTATION
// Get the main threadcontext (gets constructed for us)	WITHOUT_CLASSIFICATION	0.999951000828423	WITHOUT_CLASSIFICATION	4.899917157699861E-5	IMPLEMENTATION
// Construct key services	WITHOUT_CLASSIFICATION	0.9999456892553246	WITHOUT_CLASSIFICATION	5.431074467534981E-5	IMPLEMENTATION
// initialize the root of the class hierarchy completely	WITHOUT_CLASSIFICATION	0.9999909457682191	WITHOUT_CLASSIFICATION	9.054231780941376E-6	IMPLEMENTATION
// Construct the top-level execution frame and scope for the main thread	WITHOUT_CLASSIFICATION	0.9998629848294779	WITHOUT_CLASSIFICATION	1.3701517052210378E-4	IMPLEMENTATION
// Initialize all the core classes	WITHOUT_CLASSIFICATION	0.9998360515553503	WITHOUT_CLASSIFICATION	1.639484446497732E-4	IMPLEMENTATION
// Initialize the "dummy" class used as a marker	WITHOUT_CLASSIFICATION	0.9999922160133867	WITHOUT_CLASSIFICATION	7.78398661324669E-6	IMPLEMENTATION
// Initialize Kernel and include into Object	WITHOUT_CLASSIFICATION	0.9999725057788895	WITHOUT_CLASSIFICATION	2.7494221110496704E-5	IMPLEMENTATION
// Object is ready, create top self	WITHOUT_CLASSIFICATION	0.9999589979454789	WITHOUT_CLASSIFICATION	4.100205452115579E-5	IMPLEMENTATION
// Pre-create all the core classes potentially referenced during startup	WITHOUT_CLASSIFICATION	0.9997764273706378	WITHOUT_CLASSIFICATION	2.2357262936223828E-4	IMPLEMENTATION
// Math depends on all numeric types	WITHOUT_CLASSIFICATION	0.9998016672712465	WITHOUT_CLASSIFICATION	1.9833272875334222E-4	IMPLEMENTATION
// depends on IO, FileTest	WITHOUT_CLASSIFICATION	0.9998866368298538	WITHOUT_CLASSIFICATION	1.1336317014621922E-4	IMPLEMENTATION
// initialize builtin libraries	WITHOUT_CLASSIFICATION	0.9999334745505393	WITHOUT_CLASSIFICATION	6.6525449460705E-5	IMPLEMENTATION
// Require in all libraries specified on command line	WITHOUT_CLASSIFICATION	0.9999830096812238	WITHOUT_CLASSIFICATION	1.699031877622542E-5	IMPLEMENTATION
// Bootstrap the top of the hierarchy	WITHOUT_CLASSIFICATION	0.9999114351565394	WITHOUT_CLASSIFICATION	8.856484346065191E-5	IMPLEMENTATION
// we try to get the classloader that loaded JRuby, falling back on System	WITHOUT_CLASSIFICATION	0.9999392560329081	WITHOUT_CLASSIFICATION	6.074396709180328E-5	IMPLEMENTATION
// determine spacing	WITHOUT_CLASSIFICATION	0.9998022600058968	WITHOUT_CLASSIFICATION	1.97739994103153E-4	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999975812347156	WITHOUT_CLASSIFICATION	2.4187652843497377E-6	IMPLEMENTATION
// For JSR 223 support: see http://scripting.java.net/	WITHOUT_CLASSIFICATION	0.9999433617914361	WITHOUT_CLASSIFICATION	5.663820856401238E-5	IMPLEMENTATION
// use this for JRuby-internal finalizers	WITHOUT_CLASSIFICATION	0.9997175054948576	WITHOUT_CLASSIFICATION	2.824945051424289E-4	IMPLEMENTATION
// this method is for finalizers registered via ObjectSpace	WITHOUT_CLASSIFICATION	0.9999135949859478	WITHOUT_CLASSIFICATION	8.640501405217549E-5	IMPLEMENTATION
// new factory methods ------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999061987983916	WITHOUT_CLASSIFICATION	9.380120160836195E-5	IMPLEMENTATION
//        assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9615145393176335	WITHOUT_CLASSIFICATION	0.038485460682366426	IMPLEMENTATION
// Equivalent of Data_Wrap_Struct	WITHOUT_CLASSIFICATION	0.9999453813184298	WITHOUT_CLASSIFICATION	5.461868157029546E-5	IMPLEMENTATION
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999690215595796	WITHOUT_CLASSIFICATION	3.09784404204752E-5	IMPLEMENTATION
// ChannelDescriptors opened by sysopen are cached to avoid collection	WITHOUT_CLASSIFICATION	0.9999794542474213	WITHOUT_CLASSIFICATION	2.0545752578806318E-5	IMPLEMENTATION
// Default objects	WITHOUT_CLASSIFICATION	0.9997040535038743	WITHOUT_CLASSIFICATION	2.959464961257974E-4	IMPLEMENTATION
// record separator var, to speed up io ops that use it	WITHOUT_CLASSIFICATION	0.9998179296469759	WITHOUT_CLASSIFICATION	1.8207035302413921E-4	IMPLEMENTATION
// former java.lang.System concepts now internalized for MVM	WITHOUT_CLASSIFICATION	0.9999744164206579	WITHOUT_CLASSIFICATION	2.5583579342074184E-5	IMPLEMENTATION
// Java support	WITHOUT_CLASSIFICATION	0.9978433239627867	WITHOUT_CLASSIFICATION	0.002156676037213157	IMPLEMENTATION
// Parser stats	WITHOUT_CLASSIFICATION	0.9997142222568616	WITHOUT_CLASSIFICATION	2.857777431383935E-4	IMPLEMENTATION
// Compilation	WITHOUT_CLASSIFICATION	0.9996612927501303	WITHOUT_CLASSIFICATION	3.3870724986971226E-4	IMPLEMENTATION
// can't read non-standard properties	WITHOUT_CLASSIFICATION	0.9999804648649984	WITHOUT_CLASSIFICATION	1.9535135001654077E-5	IMPLEMENTATION
// can't create custom classloaders	WITHOUT_CLASSIFICATION	0.9999457038048262	WITHOUT_CLASSIFICATION	5.4296195173738746E-5	IMPLEMENTATION
// mutex that controls modifications of user-defined finalizers	WITHOUT_CLASSIFICATION	0.9999214072077733	WITHOUT_CLASSIFICATION	7.859279222661254E-5	IMPLEMENTATION
// mutex that controls modifications of internal finalizers	WITHOUT_CLASSIFICATION	0.9999293655456918	WITHOUT_CLASSIFICATION	7.063445430821515E-5	IMPLEMENTATION
// A thread pool to use for executing this runtime's Ruby threads	WITHOUT_CLASSIFICATION	0.999523077840509	WITHOUT_CLASSIFICATION	4.769221594910644E-4	IMPLEMENTATION
// A global object lock for class hierarchy mutations	WITHOUT_CLASSIFICATION	0.9999994850454419	WITHOUT_CLASSIFICATION	5.14954558144764E-7	IMPLEMENTATION
// initial spaces // spaces before "at"	WITHOUT_CLASSIFICATION	0.9999652773923032	WITHOUT_CLASSIFICATION	3.472260769671349E-5	IMPLEMENTATION
// event name // filename // line numbers should be 1-based	WITHOUT_CLASSIFICATION	0.999948830073216	WITHOUT_CLASSIFICATION	5.116992678399537E-5	IMPLEMENTATION
// The method is intentionally not public, since it typically should // not be used outside of the core.	WITHOUT_CLASSIFICATION	0.999763390170711	WITHOUT_CLASSIFICATION	2.3660982928887635E-4	IMPLEMENTATION
// Note: this field and the following static initializer // must be located be in this order!	WITHOUT_CLASSIFICATION	0.9996786741477975	WITHOUT_CLASSIFICATION	3.213258522024764E-4	IMPLEMENTATION
// Contains a list of all blocks (as Procs) that should be called when // the runtime environment exits.	WITHOUT_CLASSIFICATION	0.9999983587091434	WITHOUT_CLASSIFICATION	1.6412908565019637E-6	IMPLEMENTATION
// quoted-printable	WITHOUT_CLASSIFICATION	0.9996612927501303	WITHOUT_CLASSIFICATION	3.3870724986971226E-4	IMPLEMENTATION
// default options	WITHOUT_CLASSIFICATION	0.9999664970521474	WITHOUT_CLASSIFICATION	3.3502947852674576E-5	IMPLEMENTATION
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9996612927501303	WITHOUT_CLASSIFICATION	3.3870724986971226E-4	IMPLEMENTATION
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9996612927501303	WITHOUT_CLASSIFICATION	3.3870724986971226E-4	IMPLEMENTATION
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9996612927501303	WITHOUT_CLASSIFICATION	3.3870724986971226E-4	IMPLEMENTATION
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9996612927501303	WITHOUT_CLASSIFICATION	3.3870724986971226E-4	IMPLEMENTATION
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999901088813848	WITHOUT_CLASSIFICATION	9.891118615195496E-6	IMPLEMENTATION
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999901088813848	WITHOUT_CLASSIFICATION	9.891118615195496E-6	IMPLEMENTATION
// UTF-8	WITHOUT_CLASSIFICATION	0.9999938256657462	WITHOUT_CLASSIFICATION	6.174334253722257E-6	IMPLEMENTATION
// UTF-8	WITHOUT_CLASSIFICATION	0.9999938256657462	WITHOUT_CLASSIFICATION	6.174334253722257E-6	IMPLEMENTATION
// long name option	WITHOUT_CLASSIFICATION	0.9997730623950145	WITHOUT_CLASSIFICATION	2.269376049853982E-4	IMPLEMENTATION
// conversion	WITHOUT_CLASSIFICATION	0.999820930184153	WITHOUT_CLASSIFICATION	1.790698158471015E-4	IMPLEMENTATION
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999965336982392	WITHOUT_CLASSIFICATION	3.4663017607977223E-6	IMPLEMENTATION
// string doesn't share any resources	WITHOUT_CLASSIFICATION	0.9999997681005951	WITHOUT_CLASSIFICATION	2.3189940500822873E-7	IMPLEMENTATION
// string has it's own ByteList, but it's pointing to a shared buffer (byte[])	WITHOUT_CLASSIFICATION	0.9999998919714406	WITHOUT_CLASSIFICATION	1.080285593716562E-7	IMPLEMENTATION
// string doesn't have it's own ByteList (values)	WITHOUT_CLASSIFICATION	0.9999992460594455	WITHOUT_CLASSIFICATION	7.53940554546487E-7	IMPLEMENTATION
// ENC_CODERANGE_ASCIIONLY	WITHOUT_CLASSIFICATION	0.9999441559003632	WITHOUT_CLASSIFICATION	5.5844099636791055E-5	IMPLEMENTATION
// rb_enc_str_asciionly_p	WITHOUT_CLASSIFICATION	0.9999441559003632	WITHOUT_CLASSIFICATION	5.5844099636791055E-5	IMPLEMENTATION
// rb_enc_str_coderange	WITHOUT_CLASSIFICATION	0.9999441559003632	WITHOUT_CLASSIFICATION	5.5844099636791055E-5	IMPLEMENTATION
// rb_str_hash_cmp	WITHOUT_CLASSIFICATION	0.9996612927501303	WITHOUT_CLASSIFICATION	3.3870724986971226E-4	IMPLEMENTATION
// Deprecated String construction routines	WITHOUT_CLASSIFICATION	0.9999727159356265	WITHOUT_CLASSIFICATION	2.7284064373396877E-5	IMPLEMENTATION
// String construction routines by NOT byte[] buffer and NOT making the target String shared 	WITHOUT_CLASSIFICATION	0.9999991234904341	WITHOUT_CLASSIFICATION	8.765095658353451E-7	IMPLEMENTATION
/* rb_str_subseq */	WITHOUT_CLASSIFICATION	0.9999338107859356	WITHOUT_CLASSIFICATION	6.6189214064411E-5	IMPLEMENTATION
// no need to assign encoding, same bytelist shared	WITHOUT_CLASSIFICATION	0.999859816056868	WITHOUT_CLASSIFICATION	1.4018394313208588E-4	IMPLEMENTATION
// if len == 0 then shared empty	WITHOUT_CLASSIFICATION	0.9999982887895341	WITHOUT_CLASSIFICATION	1.711210465822492E-6	IMPLEMENTATION
/* rb_str_cmp_m */	WITHOUT_CLASSIFICATION	0.9999338107859356	WITHOUT_CLASSIFICATION	6.6189214064411E-5	IMPLEMENTATION
// we limit to int because ByteBuffer can only allocate int sizes	WITHOUT_CLASSIFICATION	0.9999565781112668	WITHOUT_CLASSIFICATION	4.3421888733161706E-5	IMPLEMENTATION
// // rb_str_buf_append	WITHOUT_CLASSIFICATION	0.9999441559003632	WITHOUT_CLASSIFICATION	5.5844099636791055E-5	IMPLEMENTATION
// encoding doesn't have to be copied.	WITHOUT_CLASSIFICATION	0.9999973633638702	WITHOUT_CLASSIFICATION	2.6366361297589334E-6	IMPLEMENTATION
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.999087310390646	WITHOUT_CLASSIFICATION	9.126896093539526E-4	IMPLEMENTATION
// must not reallocate	WITHOUT_CLASSIFICATION	0.99626363311037	WITHOUT_CLASSIFICATION	0.0037363668896299527	IMPLEMENTATION
// Illegal combination	WITHOUT_CLASSIFICATION	0.9999441674597194	WITHOUT_CLASSIFICATION	5.583254028048288E-5	IMPLEMENTATION
// use 1.8 impl	WITHOUT_CLASSIFICATION	0.9993473231295587	WITHOUT_CLASSIFICATION	6.526768704414216E-4	IMPLEMENTATION
/* RubyString aka rb_string_value */	WITHOUT_CLASSIFICATION	0.9999825178194829	WITHOUT_CLASSIFICATION	1.7482180517032738E-5	IMPLEMENTATION
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999925473015359	WITHOUT_CLASSIFICATION	7.452698464062576E-6	IMPLEMENTATION
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999994008944485	WITHOUT_CLASSIFICATION	5.991055515577037E-7	IMPLEMENTATION
/* len + margin */	WITHOUT_CLASSIFICATION	0.9999073306074868	WITHOUT_CLASSIFICATION	9.266939251315896E-5	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9973239064704252	WITHOUT_CLASSIFICATION	0.0026760935295747626	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9973239064704252	WITHOUT_CLASSIFICATION	0.0026760935295747626	IMPLEMENTATION
/* copy pre-match substr */	WITHOUT_CLASSIFICATION	0.9999950613619486	WITHOUT_CLASSIFICATION	4.938638051317453E-6	IMPLEMENTATION
// string given	WITHOUT_CLASSIFICATION	0.9999867695996106	WITHOUT_CLASSIFICATION	1.3230400389428842E-5	IMPLEMENTATION
// hash given	WITHOUT_CLASSIFICATION	0.9994562435638661	WITHOUT_CLASSIFICATION	5.437564361337885E-4	IMPLEMENTATION
// This represents left most digit in a set of incremented // values?  Therefore leftmost numeric must be '1' and not '0' // 999 -> 1000, not 999 -> 0000.  whereas chars should be // zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"	WITHOUT_CLASSIFICATION	0.9999966794957805	WITHOUT_CLASSIFICATION	3.3205042195575797E-6	IMPLEMENTATION
/* substring longer than string */	WITHOUT_CLASSIFICATION	0.9999998658830673	WITHOUT_CLASSIFICATION	1.34116932632425E-7	IMPLEMENTATION
/* rb_str_substr */	WITHOUT_CLASSIFICATION	0.9999338107859356	WITHOUT_CLASSIFICATION	6.6189214064411E-5	IMPLEMENTATION
// nothing	WITHOUT_CLASSIFICATION	0.9999979940816088	WITHOUT_CLASSIFICATION	2.0059183912330535E-6	IMPLEMENTATION
// nothing	WITHOUT_CLASSIFICATION	0.9999979940816088	WITHOUT_CLASSIFICATION	2.0059183912330535E-6	IMPLEMENTATION
/* rb_str_splice */	WITHOUT_CLASSIFICATION	0.9999338107859356	WITHOUT_CLASSIFICATION	6.6189214064411E-5	IMPLEMENTATION
// TODO: keep cr // TODO: rb_str_splice_0	WITHOUT_CLASSIFICATION	0.5237352293699996	IMPLEMENTATION	0.47626477063000033	WITHOUT_CLASSIFICATION
// keep cr ?	WITHOUT_CLASSIFICATION	0.999916948621924	WITHOUT_CLASSIFICATION	8.305137807587721E-5	IMPLEMENTATION
// keep cr ?	WITHOUT_CLASSIFICATION	0.999916948621924	WITHOUT_CLASSIFICATION	8.305137807587721E-5	IMPLEMENTATION
/* wrapped to \0...\0.  search next valid char. */	WITHOUT_CLASSIFICATION	0.9999585453555667	WITHOUT_CLASSIFICATION	4.145464443331634E-5	IMPLEMENTATION
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9997129733921394	WITHOUT_CLASSIFICATION	2.870266078606183E-4	IMPLEMENTATION
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9997129733921394	WITHOUT_CLASSIFICATION	2.870266078606183E-4	IMPLEMENTATION
// modified	WITHOUT_CLASSIFICATION	0.9984932687399566	WITHOUT_CLASSIFICATION	0.0015067312600434508	IMPLEMENTATION
// modified	WITHOUT_CLASSIFICATION	0.9984932687399566	WITHOUT_CLASSIFICATION	0.0015067312600434508	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.9999901088813848	WITHOUT_CLASSIFICATION	9.891118615195496E-6	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.9999901088813848	WITHOUT_CLASSIFICATION	9.891118615195496E-6	IMPLEMENTATION
// QTRUE	WITHOUT_CLASSIFICATION	0.9999901088813848	WITHOUT_CLASSIFICATION	9.891118615195496E-6	IMPLEMENTATION
/* retrieve last replacer */	WITHOUT_CLASSIFICATION	0.9999946063420956	WITHOUT_CLASSIFICATION	5.393657904367458E-6	IMPLEMENTATION
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9989556271090153	WITHOUT_CLASSIFICATION	0.0010443728909846426	IMPLEMENTATION
// long size * bits in byte	WITHOUT_CLASSIFICATION	0.9999990050617386	WITHOUT_CLASSIFICATION	9.949382614206376E-7	IMPLEMENTATION
// from encoding, special-casing ASCII* to ASCII	WITHOUT_CLASSIFICATION	0.9999832411885885	WITHOUT_CLASSIFICATION	1.6758811411527267E-5	IMPLEMENTATION
// to encoding, same special-casing	WITHOUT_CLASSIFICATION	0.9999464323352903	WITHOUT_CLASSIFICATION	5.356766470967587E-5	IMPLEMENTATION
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999628393591269	WITHOUT_CLASSIFICATION	3.716064087298496E-5	IMPLEMENTATION
// decode from "from" and encode to "to"	WITHOUT_CLASSIFICATION	0.9999889229672894	WITHOUT_CLASSIFICATION	1.1077032710608115E-5	IMPLEMENTATION
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999628393591269	WITHOUT_CLASSIFICATION	3.716064087298496E-5	IMPLEMENTATION
//Kernel is the only Module that doesn't need an implementor	WITHOUT_CLASSIFICATION	0.9999049768710611	WITHOUT_CLASSIFICATION	9.502312893888483E-5	IMPLEMENTATION
// no binding given, use (eval)	WITHOUT_CLASSIFICATION	0.9998964903381335	WITHOUT_CLASSIFICATION	1.0350966186648499E-4	IMPLEMENTATION
// interned, OK for "fast" methods	WITHOUT_CLASSIFICATION	0.9998296679694908	WITHOUT_CLASSIFICATION	1.7033203050927147E-4	IMPLEMENTATION
// File to be loaded by autoload has already been or is being loaded.	WITHOUT_CLASSIFICATION	0.9999997057960452	WITHOUT_CLASSIFICATION	2.9420395470011744E-7	IMPLEMENTATION
// rb_cstr_to_dbl case	WITHOUT_CLASSIFICATION	0.9999242249275663	WITHOUT_CLASSIFICATION	7.577507243376214E-5	IMPLEMENTATION
// We break if we know this sleep was explicitly woken up/interrupted	WITHOUT_CLASSIFICATION	0.9996335311238234	WITHOUT_CLASSIFICATION	3.6646887617667836E-4	IMPLEMENTATION
// exec process, create IO with process	WITHOUT_CLASSIFICATION	0.9998633225487107	WITHOUT_CLASSIFICATION	1.3667745128937155E-4	IMPLEMENTATION
// Zero sleeps forever	WITHOUT_CLASSIFICATION	0.9999500958492479	WITHOUT_CLASSIFICATION	4.990415075213552E-5	IMPLEMENTATION
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9998361699577465	WITHOUT_CLASSIFICATION	1.63830042253578E-4	IMPLEMENTATION
// Explicit zero in MRI returns immediately	WITHOUT_CLASSIFICATION	0.9999933598999793	WITHOUT_CLASSIFICATION	6.640100020630599E-6	IMPLEMENTATION
// Spurious wakeup-loop	WITHOUT_CLASSIFICATION	0.9999441559003632	WITHOUT_CLASSIFICATION	5.5844099636791055E-5	IMPLEMENTATION
// adjusts paths started with '/' or '\\', on windows.	WITHOUT_CLASSIFICATION	0.9998696681719664	WITHOUT_CLASSIFICATION	1.3033182803358064E-4	IMPLEMENTATION
// file not given	WITHOUT_CLASSIFICATION	0.987352755812992	WITHOUT_CLASSIFICATION	0.0126472441870081	IMPLEMENTATION
// string to eval	WITHOUT_CLASSIFICATION	0.9999929937679716	WITHOUT_CLASSIFICATION	7.006232028428406E-6	IMPLEMENTATION
// binding given, use binding's file	WITHOUT_CLASSIFICATION	0.9998300223120937	WITHOUT_CLASSIFICATION	1.6997768790616901E-4	IMPLEMENTATION
// ?g  | boolean | True if file1 has the \CF{setgid} bit	WITHOUT_CLASSIFICATION	0.9999969696072112	WITHOUT_CLASSIFICATION	3.030392788816193E-6	IMPLEMENTATION
// bomb out, it's not a binding or a proc	WITHOUT_CLASSIFICATION	0.9984238590065351	WITHOUT_CLASSIFICATION	0.0015761409934649238	IMPLEMENTATION
// Ordering of array traversal not important, just intuitive	WITHOUT_CLASSIFICATION	0.9996807856683738	WITHOUT_CLASSIFICATION	3.1921433162612344E-4	IMPLEMENTATION
//Catch active, throw for catch to handle	WITHOUT_CLASSIFICATION	0.9972958173440154	WITHOUT_CLASSIFICATION	0.0027041826559845877	IMPLEMENTATION
// No catch active for this throw	WITHOUT_CLASSIFICATION	0.9998744682356502	WITHOUT_CLASSIFICATION	1.255317643497647E-4	IMPLEMENTATION
// without full tracing, many events will not fire	WITHOUT_CLASSIFICATION	0.9987231346127885	WITHOUT_CLASSIFICATION	0.0012768653872115916	IMPLEMENTATION
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999289308468784	WITHOUT_CLASSIFICATION	7.106915312159817E-5	IMPLEMENTATION
// MRI behavior: use first byte of string value if len > 0	WITHOUT_CLASSIFICATION	0.9999999376490764	WITHOUT_CLASSIFICATION	6.235092365132896E-8	IMPLEMENTATION
// MRI behavior: now check arg count	WITHOUT_CLASSIFICATION	0.9994628172717407	WITHOUT_CLASSIFICATION	5.371827282592705E-4	IMPLEMENTATION
// ?A  | Time    | Last access time for file1	WITHOUT_CLASSIFICATION	0.999996830042842	WITHOUT_CLASSIFICATION	3.169957157959335E-6	IMPLEMENTATION
// ?b  | boolean | True if file1 is a block device	WITHOUT_CLASSIFICATION	0.999986959129708	WITHOUT_CLASSIFICATION	1.3040870292078435E-5	IMPLEMENTATION
// ?c  | boolean | True if file1 is a character device	WITHOUT_CLASSIFICATION	0.9999979769809961	WITHOUT_CLASSIFICATION	2.02301900380689E-6	IMPLEMENTATION
// ?C  | Time    | Last change time for file1	WITHOUT_CLASSIFICATION	0.9999956235952687	WITHOUT_CLASSIFICATION	4.3764047312257254E-6	IMPLEMENTATION
// ?d  | boolean | True if file1 exists and is a directory	WITHOUT_CLASSIFICATION	0.9999998940953186	WITHOUT_CLASSIFICATION	1.0590468143107709E-7	IMPLEMENTATION
// ?e  | boolean | True if file1 exists	WITHOUT_CLASSIFICATION	0.9999937174054983	WITHOUT_CLASSIFICATION	6.282594501771703E-6	IMPLEMENTATION
// ?f  | boolean | True if file1 exists and is a regular file	WITHOUT_CLASSIFICATION	0.9999979939345823	WITHOUT_CLASSIFICATION	2.0060654177688247E-6	IMPLEMENTATION
// ?G  | boolean | True if file1 exists and has a group ownership equal to the caller's group	WITHOUT_CLASSIFICATION	0.9999994148793887	WITHOUT_CLASSIFICATION	5.851206112972528E-7	IMPLEMENTATION
// ?k  | boolean | True if file1 exists and has the sticky bit set	WITHOUT_CLASSIFICATION	0.9999987686540679	WITHOUT_CLASSIFICATION	1.2313459320713758E-6	IMPLEMENTATION
// ?M  | Time    | Last modification time for file1	WITHOUT_CLASSIFICATION	0.9999962369555239	WITHOUT_CLASSIFICATION	3.763044476187879E-6	IMPLEMENTATION
// ?o  | boolean | True if file1 exists and is owned by the caller's effective uid	WITHOUT_CLASSIFICATION	0.9999991712313043	WITHOUT_CLASSIFICATION	8.28768695704992E-7	IMPLEMENTATION
// ?O  | boolean | True if file1 exists and is owned by the caller's real uid 	WITHOUT_CLASSIFICATION	0.999998627815573	WITHOUT_CLASSIFICATION	1.3721844269817027E-6	IMPLEMENTATION
// ?p  | boolean | True if file1 exists and is a fifo	WITHOUT_CLASSIFICATION	0.9999988902402	WITHOUT_CLASSIFICATION	1.109759800127632E-6	IMPLEMENTATION
// ?r  | boolean | True if file1 is readable by the effective uid/gid of the caller	WITHOUT_CLASSIFICATION	0.9999996357460541	WITHOUT_CLASSIFICATION	3.6425394591325193E-7	IMPLEMENTATION
// ?s  | int/nil | If file1 has nonzero size, return the size, otherwise nil	WITHOUT_CLASSIFICATION	0.9998683520509998	WITHOUT_CLASSIFICATION	1.3164794900023878E-4	IMPLEMENTATION
// ?S  | boolean | True if file1 exists and is a socket	WITHOUT_CLASSIFICATION	0.9999988414215759	WITHOUT_CLASSIFICATION	1.1585784240843942E-6	IMPLEMENTATION
// ?u  | boolean | True if file1 has the setuid bit set	WITHOUT_CLASSIFICATION	0.9999970720236875	WITHOUT_CLASSIFICATION	2.927976312572605E-6	IMPLEMENTATION
// ?x  | boolean | True if file1 exists and is executable by the effective uid/gid	WITHOUT_CLASSIFICATION	0.9999991108089243	WITHOUT_CLASSIFICATION	8.891910755759141E-7	IMPLEMENTATION
// ?X  | boolean | True if file1 exists and is executable by the real uid/gid	WITHOUT_CLASSIFICATION	0.9999985277748732	WITHOUT_CLASSIFICATION	1.472225126865702E-6	IMPLEMENTATION
// ?z  | boolean | True if file1 exists and has a zero length	WITHOUT_CLASSIFICATION	0.9999989889756825	WITHOUT_CLASSIFICATION	1.011024317528084E-6	IMPLEMENTATION
// ?=  | boolean | True if the modification times of file1 and file2 are equal	WITHOUT_CLASSIFICATION	0.9999996857134003	WITHOUT_CLASSIFICATION	3.142865998350509E-7	IMPLEMENTATION
// ?<  | boolean | True if the modification time of file1 is prior to that of file2	WITHOUT_CLASSIFICATION	0.9999997124586074	WITHOUT_CLASSIFICATION	2.8754139264342546E-7	IMPLEMENTATION
// ?>  | boolean | True if the modification time of file1 is after that of file2	WITHOUT_CLASSIFICATION	0.9999998008273548	WITHOUT_CLASSIFICATION	1.991726451247009E-7	IMPLEMENTATION
// ?-  | boolean | True if file1 and file2 are identical	WITHOUT_CLASSIFICATION	0.9999977398006434	WITHOUT_CLASSIFICATION	2.260199356580719E-6	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999373303706866	WITHOUT_CLASSIFICATION	6.26696293134025E-5	IMPLEMENTATION
// Error info is per-thread	WITHOUT_CLASSIFICATION	0.9999903449265971	WITHOUT_CLASSIFICATION	9.655073402912495E-6	IMPLEMENTATION
// init errorInfo to nil	WITHOUT_CLASSIFICATION	0.999969048393528	WITHOUT_CLASSIFICATION	3.0951606471972904E-5	IMPLEMENTATION
// if we're already aborting, we can receive no further mail	WITHOUT_CLASSIFICATION	0.9999918739696136	WITHOUT_CLASSIFICATION	8.12603038639696E-6	IMPLEMENTATION
// If this thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999152913270717	WITHOUT_CLASSIFICATION	8.470867292828071E-5	IMPLEMENTATION
// new interrupt, to hopefully wake it out of any blocking IO	WITHOUT_CLASSIFICATION	0.999942683976495	WITHOUT_CLASSIFICATION	5.731602350504549E-5	IMPLEMENTATION
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999819393478955	WITHOUT_CLASSIFICATION	1.806065210451614E-5	IMPLEMENTATION
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999819393478955	WITHOUT_CLASSIFICATION	1.806065210451614E-5	IMPLEMENTATION
// JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999923135129948	WITHOUT_CLASSIFICATION	7.686487005237494E-6	IMPLEMENTATION
// JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999878233253449	WITHOUT_CLASSIFICATION	1.2176674655133061E-5	IMPLEMENTATION
// for Thread::start, which does not call the subclass's initialize	WITHOUT_CLASSIFICATION	0.9998319685883901	WITHOUT_CLASSIFICATION	1.680314116098919E-4	IMPLEMENTATION
// JRUBY-3568, inherit threadgroup or use default	WITHOUT_CLASSIFICATION	0.9999764954630488	WITHOUT_CLASSIFICATION	2.3504536951294314E-5	IMPLEMENTATION
// MRI behavior: value given in seconds; converted to Float; less // than or equal to zero returns immediately; returns nil	WITHOUT_CLASSIFICATION	0.9999995591931169	WITHOUT_CLASSIFICATION	4.408068831144332E-7	IMPLEMENTATION
// If the target thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999820262331125	WITHOUT_CLASSIFICATION	1.7973766887473828E-5	IMPLEMENTATION
// We need this loop in order to be able to "unblock" the // join call without actually calling interrupt.	WITHOUT_CLASSIFICATION	0.9999965527665877	WITHOUT_CLASSIFICATION	3.447233412227523E-6	IMPLEMENTATION
// attempt to decriticalize all if we're the critical thread	WITHOUT_CLASSIFICATION	0.9999209890754146	WITHOUT_CLASSIFICATION	7.901092458534877E-5	IMPLEMENTATION
// not valid for "dead" state	WITHOUT_CLASSIFICATION	0.9989810635676807	WITHOUT_CLASSIFICATION	0.0010189364323192737	IMPLEMENTATION
// If the killee thread is the same as the killer thread, just die	WITHOUT_CLASSIFICATION	0.9999988843505738	WITHOUT_CLASSIFICATION	1.1156494262034254E-6	IMPLEMENTATION
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999444731645792	WITHOUT_CLASSIFICATION	5.552683542068184E-5	IMPLEMENTATION
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999444731645792	WITHOUT_CLASSIFICATION	5.552683542068184E-5	IMPLEMENTATION
// ignore; I don't like doing it, but it seems like we // really just need to make all channels non-blocking by // default and use select when implementing blocking ops, // so if this remains set non-blocking, perhaps it's not // such a big deal...	WITHOUT_CLASSIFICATION	0.9978172594431001	WITHOUT_CLASSIFICATION	0.0021827405568999544	IMPLEMENTATION
// can't select, just have to do a blocking call	WITHOUT_CLASSIFICATION	0.9999883508397044	WITHOUT_CLASSIFICATION	1.1649160295554717E-5	IMPLEMENTATION
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9998985702021732	WITHOUT_CLASSIFICATION	1.0142979782680433E-4	IMPLEMENTATION
// Create Constants class	WITHOUT_CLASSIFICATION	0.9999940231141702	WITHOUT_CLASSIFICATION	5.9768858298937244E-6	IMPLEMENTATION
// Create constants for open flags	WITHOUT_CLASSIFICATION	0.9999923491598521	WITHOUT_CLASSIFICATION	7.650840147793704E-6	IMPLEMENTATION
// Strip off the O_ prefix, so they become File::RDONLY, and so on	WITHOUT_CLASSIFICATION	0.9999855791064707	WITHOUT_CLASSIFICATION	1.4420893529234351E-5	IMPLEMENTATION
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999901143484529	WITHOUT_CLASSIFICATION	9.885651547091469E-6	IMPLEMENTATION
// File::Constants module is included in IO.	WITHOUT_CLASSIFICATION	0.9999929390493988	WITHOUT_CLASSIFICATION	7.060950601171959E-6	IMPLEMENTATION
// Make sure any existing lock is released before we try and close the file	WITHOUT_CLASSIFICATION	0.9999994968347073	WITHOUT_CLASSIFICATION	5.031652926250188E-7	IMPLEMENTATION
// null channel always succeeds for all locking operations	WITHOUT_CLASSIFICATION	0.9999224297904181	WITHOUT_CLASSIFICATION	7.75702095818109E-5	IMPLEMENTATION
// Paths which end in "/" or "\\" must be stripped off.	WITHOUT_CLASSIFICATION	0.9999776450799794	WITHOUT_CLASSIFICATION	2.2354920020562026E-5	IMPLEMENTATION
// Special case for handling ACCMODE, since constantine will generate // an invalid value if it is not defined by the platform.	WITHOUT_CLASSIFICATION	0.999991112247818	WITHOUT_CLASSIFICATION	8.88775218201702E-6	IMPLEMENTATION
// Return false here	WITHOUT_CLASSIFICATION	0.9993871375085576	WITHOUT_CLASSIFICATION	6.128624914424365E-4	IMPLEMENTATION
// Return false here	WITHOUT_CLASSIFICATION	0.9993871375085576	WITHOUT_CLASSIFICATION	6.128624914424365E-4	IMPLEMENTATION
// We're not actually a real file, so we can't flock	WITHOUT_CLASSIFICATION	0.9990840393428022	WITHOUT_CLASSIFICATION	9.159606571978972E-4	IMPLEMENTATION
// Should we do anything?	WITHOUT_CLASSIFICATION	0.9999721685428226	WITHOUT_CLASSIFICATION	2.783145717754846E-5	IMPLEMENTATION
/* File class methods */	WITHOUT_CLASSIFICATION	0.999998701617518	WITHOUT_CLASSIFICATION	1.298382481990089E-6	IMPLEMENTATION
// MRI-compatible basename handling for windows drive letter paths	WITHOUT_CLASSIFICATION	0.9999387592148553	WITHOUT_CLASSIFICATION	6.124078514471528E-5	IMPLEMENTATION
// strip c: away from relative-pathed name	WITHOUT_CLASSIFICATION	0.9999171100052536	WITHOUT_CLASSIFICATION	8.288999474628884E-5	IMPLEMENTATION
// C:\ is returned unchanged	WITHOUT_CLASSIFICATION	0.9999903381110526	WITHOUT_CLASSIFICATION	9.66188894724712E-6	IMPLEMENTATION
// -1 no match; 0 it is dot file not extension	WITHOUT_CLASSIFICATION	0.9993014367681702	WITHOUT_CLASSIFICATION	6.985632318298084E-4	IMPLEMENTATION
// trim trailing slashes	WITHOUT_CLASSIFICATION	0.9998891591599963	WITHOUT_CLASSIFICATION	1.1084084000374426E-4	IMPLEMENTATION
// Dot is not at beginning and not at end of filename. 	WITHOUT_CLASSIFICATION	0.9989490509294712	WITHOUT_CLASSIFICATION	0.0010509490705287853	IMPLEMENTATION
// Handle ~user paths 	WITHOUT_CLASSIFICATION	0.999962224957483	WITHOUT_CLASSIFICATION	3.777504251698563E-5	IMPLEMENTATION
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9998985702021732	WITHOUT_CLASSIFICATION	1.0142979782680433E-4	IMPLEMENTATION
// Include additional path separator // (so that dirname of "C:\file.txt" is  "C:\", not "C:")	WITHOUT_CLASSIFICATION	0.9946458166694504	WITHOUT_CLASSIFICATION	0.0053541833305496426	IMPLEMENTATION
// FNFException can be thrown in both cases, when the file // is not found, or when permission is denied.	WITHOUT_CLASSIFICATION	0.9999561793800859	WITHOUT_CLASSIFICATION	4.382061991410438E-5	IMPLEMENTATION
// No directory delimeter.  Rest of string is username	WITHOUT_CLASSIFICATION	0.9999999793305538	WITHOUT_CLASSIFICATION	2.0669446073952135E-8	IMPLEMENTATION
// If there's a second argument, it's the path to which the first  // argument is relative.	WITHOUT_CLASSIFICATION	0.9999865103290573	WITHOUT_CLASSIFICATION	1.3489670942637214E-5	IMPLEMENTATION
// Handle ~user paths.	WITHOUT_CLASSIFICATION	0.9999535460663448	WITHOUT_CLASSIFICATION	4.645393365521287E-5	IMPLEMENTATION
// If there's no second argument, simply use the working directory  // of the runtime.	WITHOUT_CLASSIFICATION	0.9999879787737366	WITHOUT_CLASSIFICATION	1.2021226263409617E-5	IMPLEMENTATION
// Find out which string to check.	WITHOUT_CLASSIFICATION	0.9999977368913401	WITHOUT_CLASSIFICATION	2.2631086600259565E-6	IMPLEMENTATION
// Single '~' as whole path to expand	WITHOUT_CLASSIFICATION	0.9999461436581332	WITHOUT_CLASSIFICATION	5.3856341866776194E-5	IMPLEMENTATION
// Count number of extra slashes in the beginning of the string.	WITHOUT_CLASSIFICATION	0.9999926834877635	WITHOUT_CLASSIFICATION	7.316512236539586E-6	IMPLEMENTATION
// '~user/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999614298730293	WITHOUT_CLASSIFICATION	3.8570126970809746E-5	IMPLEMENTATION
// '~/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999759286707066	WITHOUT_CLASSIFICATION	2.4071329293271084E-5	IMPLEMENTATION
// Prepare a string with the same number of redundant slashes so that  // we easily can prepend it to the result.	WITHOUT_CLASSIFICATION	0.9999978008568691	WITHOUT_CLASSIFICATION	2.19914313096271E-6	IMPLEMENTATION
// If there are N slashes, then we want N-1.	WITHOUT_CLASSIFICATION	0.9999843496971934	WITHOUT_CLASSIFICATION	1.565030280657182E-5	IMPLEMENTATION
// no canonical path yet or length is zero, and we have a / followed by a dot...	WITHOUT_CLASSIFICATION	0.9999806452697051	WITHOUT_CLASSIFICATION	1.9354730294997345E-5	IMPLEMENTATION
// we don't have another slash after this, so replace /. with /	WITHOUT_CLASSIFICATION	0.999510164634481	WITHOUT_CLASSIFICATION	4.898353655191565E-4	IMPLEMENTATION
// we do have another slash; omit both / and . (JRUBY-1606)	WITHOUT_CLASSIFICATION	0.9999816887424783	WITHOUT_CLASSIFICATION	1.8311257521702677E-5	IMPLEMENTATION
// do nothing, we should not delete the drive letter	WITHOUT_CLASSIFICATION	0.995143486256443	WITHOUT_CLASSIFICATION	0.004856513743557099	IMPLEMENTATION
/* rb: check_modifiable */	WITHOUT_CLASSIFICATION	0.9999890895876924	WITHOUT_CLASSIFICATION	1.091041230749842E-5	IMPLEMENTATION
/* rb: readable */	WITHOUT_CLASSIFICATION	0.9999584169746505	WITHOUT_CLASSIFICATION	4.158302534958211E-5	IMPLEMENTATION
// rename is successful	WITHOUT_CLASSIFICATION	0.999981629678625	WITHOUT_CLASSIFICATION	1.8370321374965965E-5	IMPLEMENTATION
// rename via Java API call wasn't successful, let's try some tricks, similar to MRI 	WITHOUT_CLASSIFICATION	0.999980862990817	WITHOUT_CLASSIFICATION	1.9137009183070025E-5	IMPLEMENTATION
// try to rename one more time	WITHOUT_CLASSIFICATION	0.9999275411159139	WITHOUT_CLASSIFICATION	7.245888408616923E-5	IMPLEMENTATION
// Can we produce IOError which bypasses a close?	WITHOUT_CLASSIFICATION	0.99993812268728	WITHOUT_CLASSIFICATION	6.187731272002065E-5	IMPLEMENTATION
// Fast path since JNA stat is about 10x slower than this	WITHOUT_CLASSIFICATION	0.9999761827572573	WITHOUT_CLASSIFICATION	2.381724274268783E-5	IMPLEMENTATION
// RubyContinuation	WITHOUT_CLASSIFICATION	0.9996612927501303	WITHOUT_CLASSIFICATION	3.3870724986971226E-4	IMPLEMENTATION
/*     *  Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq)     *  it doesn't initialize ifNone field     */	WITHOUT_CLASSIFICATION	0.9999997448655514	WITHOUT_CLASSIFICATION	2.551344484933674E-7	IMPLEMENTATION
// 16 ?	WITHOUT_CLASSIFICATION	0.9999970836737001	WITHOUT_CLASSIFICATION	2.9163262998561607E-6	IMPLEMENTATION
// generation count for O(1) clears	WITHOUT_CLASSIFICATION	0.9999697738751481	WITHOUT_CLASSIFICATION	3.022612485183281E-5	IMPLEMENTATION
// size + 1;	WITHOUT_CLASSIFICATION	0.9998733269893975	WITHOUT_CLASSIFICATION	1.266730106024688E-4	IMPLEMENTATION
// suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen	WITHOUT_CLASSIFICATION	0.9997737857341176	WITHOUT_CLASSIFICATION	2.2621426588243605E-4	IMPLEMENTATION
// ------------------------------	WITHOUT_CLASSIFICATION	0.9999106466057245	WITHOUT_CLASSIFICATION	8.935339427559809E-5	IMPLEMENTATION
// ------------------------------	WITHOUT_CLASSIFICATION	0.9999106466057245	WITHOUT_CLASSIFICATION	8.935339427559809E-5	IMPLEMENTATION
// put implementation	WITHOUT_CLASSIFICATION	0.9990836095774502	WITHOUT_CLASSIFICATION	9.163904225498616E-4	IMPLEMENTATION
// get implementation	WITHOUT_CLASSIFICATION	0.999752543635872	WITHOUT_CLASSIFICATION	2.474563641280608E-4	IMPLEMENTATION
// specialized for value	WITHOUT_CLASSIFICATION	0.999991413939902	WITHOUT_CLASSIFICATION	8.58606009797056E-6	IMPLEMENTATION
// delete implementation	WITHOUT_CLASSIFICATION	0.9989904213273586	WITHOUT_CLASSIFICATION	0.0010095786726413865	IMPLEMENTATION
// n.b. we need to recompute the hash in case the key object was modified	WITHOUT_CLASSIFICATION	0.999933083463128	WITHOUT_CLASSIFICATION	6.691653687203041E-5	IMPLEMENTATION
/* ============================     * End of hash internals     * ============================     */	WITHOUT_CLASSIFICATION	0.9999958317153418	WITHOUT_CLASSIFICATION	4.168284658219503E-6	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================     */	WITHOUT_CLASSIFICATION	0.9999966366891363	WITHOUT_CLASSIFICATION	3.3633108636203095E-6	IMPLEMENTATION
// update the hash value	WITHOUT_CLASSIFICATION	0.9999903919325166	WITHOUT_CLASSIFICATION	9.60806748349418E-6	IMPLEMENTATION
// other hash does not contain key	WITHOUT_CLASSIFICATION	0.9971478105895115	WITHOUT_CLASSIFICATION	0.0028521894104884394	IMPLEMENTATION
// rb_yield_values(2,...) equivalent	WITHOUT_CLASSIFICATION	0.9999069424052075	WITHOUT_CLASSIFICATION	9.305759479244918E-5	IMPLEMENTATION
// Satisfy java.util.Set interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999793576959959	WITHOUT_CLASSIFICATION	2.0642304004176457E-5	IMPLEMENTATION
// remain where we are	WITHOUT_CLASSIFICATION	0.9999467635137336	WITHOUT_CLASSIFICATION	5.323648626641529E-5	IMPLEMENTATION
// We use file test since it is faster than a stat; also euid == uid in Java always	WITHOUT_CLASSIFICATION	0.9999997172071442	WITHOUT_CLASSIFICATION	2.8279285589305276E-7	IMPLEMENTATION
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999690215595796	WITHOUT_CLASSIFICATION	3.09784404204752E-5	IMPLEMENTATION
// once hasNext has been called, we commit to next() returning // the entry it found, even if it were subsequently deleted	WITHOUT_CLASSIFICATION	0.9953407021472483	WITHOUT_CLASSIFICATION	0.0046592978527517015	IMPLEMENTATION
// Not exposed by filetest, but so similiar in nature that it is stored here	WITHOUT_CLASSIFICATION	0.9999390171174387	WITHOUT_CLASSIFICATION	6.098288256138656E-5	IMPLEMENTATION
// We do both writable and writable_real through the same method because // in our java process effective and real userid will always be the same.	WITHOUT_CLASSIFICATION	0.9999998903988229	WITHOUT_CLASSIFICATION	1.0960117720108979E-7	IMPLEMENTATION
// first try as directory	WITHOUT_CLASSIFICATION	0.9999993326347921	WITHOUT_CLASSIFICATION	6.673652078258452E-7	IMPLEMENTATION
// next as regular file	WITHOUT_CLASSIFICATION	0.999948596958252	WITHOUT_CLASSIFICATION	5.1403041747967946E-5	IMPLEMENTATION
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.999777298422485	WITHOUT_CLASSIFICATION	2.227015775149857E-4	IMPLEMENTATION
// NIO-based	WITHOUT_CLASSIFICATION	0.9996612927501303	WITHOUT_CLASSIFICATION	3.3870724986971226E-4	IMPLEMENTATION
// NIO-based	WITHOUT_CLASSIFICATION	0.9996612927501303	WITHOUT_CLASSIFICATION	3.3870724986971226E-4	IMPLEMENTATION
// Stream-based	WITHOUT_CLASSIFICATION	0.9996612927501303	WITHOUT_CLASSIFICATION	3.3870724986971226E-4	IMPLEMENTATION
// special constructor that accepts stream, not channel	WITHOUT_CLASSIFICATION	0.9950250434183442	WITHOUT_CLASSIFICATION	0.004974956581655884	IMPLEMENTATION
/*     * We use FILE versus IO to match T_FILE in MRI.     */	WITHOUT_CLASSIFICATION	0.999999663552552	WITHOUT_CLASSIFICATION	3.364474480217449E-7	IMPLEMENTATION
// Constants for seek	WITHOUT_CLASSIFICATION	0.9999690218824385	WITHOUT_CLASSIFICATION	3.0978117561470975E-5	IMPLEMENTATION
// confirm we're not reopening self's channel	WITHOUT_CLASSIFICATION	0.9987999682673917	WITHOUT_CLASSIFICATION	0.0012000317326083879	IMPLEMENTATION
// check if we're a stdio IO, and ensure we're not badly mutilated	WITHOUT_CLASSIFICATION	0.9998163591845823	WITHOUT_CLASSIFICATION	1.8364081541766758E-4	IMPLEMENTATION
// dup2 new fd into self to preserve fileno and references to it	WITHOUT_CLASSIFICATION	0.9999372373805163	WITHOUT_CLASSIFICATION	6.276261948363745E-5	IMPLEMENTATION
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.999996728250196	WITHOUT_CLASSIFICATION	3.2717498040424044E-6	IMPLEMENTATION
// re-register the descriptor	WITHOUT_CLASSIFICATION	0.9999558426837639	WITHOUT_CLASSIFICATION	4.4157316236089775E-5	IMPLEMENTATION
// since we're not actually duping the incoming channel into our handler, we need to // copy the original sync behavior from the other handler	WITHOUT_CLASSIFICATION	0.9999076013901304	WITHOUT_CLASSIFICATION	9.239860986970235E-5	IMPLEMENTATION
// re-register	WITHOUT_CLASSIFICATION	0.9996612927501303	WITHOUT_CLASSIFICATION	3.3870724986971226E-4	IMPLEMENTATION
// A potentially previously close IO is being 'reopened'.	WITHOUT_CLASSIFICATION	0.999993055180238	WITHOUT_CLASSIFICATION	6.9448197620914206E-6	IMPLEMENTATION
/*     * Ensure that separator is valid otherwise give it the default paragraph separator.     */	WITHOUT_CLASSIFICATION	0.999900531183492	WITHOUT_CLASSIFICATION	9.946881650809713E-5	IMPLEMENTATION
// loop until we see the nth separator char	WITHOUT_CLASSIFICATION	0.9999955438961037	WITHOUT_CLASSIFICATION	4.4561038963230534E-6	IMPLEMENTATION
// if we hit EOF or reached limit then we're done	WITHOUT_CLASSIFICATION	0.9999902301576404	WITHOUT_CLASSIFICATION	9.76984235951968E-6	IMPLEMENTATION
// this is for a range check, near as I can tell	WITHOUT_CLASSIFICATION	0.9998982208304346	WITHOUT_CLASSIFICATION	1.0177916956545952E-4	IMPLEMENTATION
// IO class methods.	WITHOUT_CLASSIFICATION	0.9999109740453588	WITHOUT_CLASSIFICATION	8.90259546411979E-5	IMPLEMENTATION
// use original modes	WITHOUT_CLASSIFICATION	0.9998370092857358	WITHOUT_CLASSIFICATION	1.6299071426422154E-4	IMPLEMENTATION
// See if we already have this descriptor open. // If so then we can mostly share the handler (keep open // file, but possibly change the mode).	WITHOUT_CLASSIFICATION	0.9999996182366789	WITHOUT_CLASSIFICATION	3.8176332103763254E-7	IMPLEMENTATION
// redundant, done above as well	WITHOUT_CLASSIFICATION	0.9999652180583766	WITHOUT_CLASSIFICATION	3.4781941623455354E-5	IMPLEMENTATION
// MRI behavior: swallow StandardErorrs	WITHOUT_CLASSIFICATION	0.999911816093832	WITHOUT_CLASSIFICATION	8.818390616801048E-5	IMPLEMENTATION
// -1 == don't set permissions	WITHOUT_CLASSIFICATION	0.9999677505415038	WITHOUT_CLASSIFICATION	3.2249458496229396E-5	IMPLEMENTATION
// isRetained=true	WITHOUT_CLASSIFICATION	0.9996612927501303	WITHOUT_CLASSIFICATION	3.3870724986971226E-4	IMPLEMENTATION
// This appears to be some windows-only mode.  On a java platform this is a no-op	WITHOUT_CLASSIFICATION	0.9999143013783393	WITHOUT_CLASSIFICATION	8.569862166072839E-5	IMPLEMENTATION
// if not sync, we switch to write buffered mode	WITHOUT_CLASSIFICATION	0.9995313007205721	WITHOUT_CLASSIFICATION	4.6869927942792323E-4	IMPLEMENTATION
/*     * Throw bad file descriptor is we can not read on supplied descriptor.     */	WITHOUT_CLASSIFICATION	0.9996782694768194	WITHOUT_CLASSIFICATION	3.2173052318065624E-4	IMPLEMENTATION
//Everything written	WITHOUT_CLASSIFICATION	0.9990993166708878	WITHOUT_CLASSIFICATION	9.00683329112126E-4	IMPLEMENTATION
//            return len - n;	WITHOUT_CLASSIFICATION	0.9999599968619923	WITHOUT_CLASSIFICATION	4.000313800768456E-5	IMPLEMENTATION
// Claims conversion is done via 'to_s' in docs.	WITHOUT_CLASSIFICATION	0.9999973602727077	WITHOUT_CLASSIFICATION	2.6397272924019237E-6	IMPLEMENTATION
// Of course this isn't particularly useful.	WITHOUT_CLASSIFICATION	0.9999053805404985	WITHOUT_CLASSIFICATION	9.46194595014535E-5	IMPLEMENTATION
// Must be back on first line on rewind.	WITHOUT_CLASSIFICATION	0.999904609517695	WITHOUT_CLASSIFICATION	9.539048230503209E-5	IMPLEMENTATION
// Register the new descriptor	WITHOUT_CLASSIFICATION	0.9998617527302299	WITHOUT_CLASSIFICATION	1.3824726977003292E-4	IMPLEMENTATION
// cleanup, raising errors if any	WITHOUT_CLASSIFICATION	0.9999645994075627	WITHOUT_CLASSIFICATION	3.5400592437437866E-5	IMPLEMENTATION
// hmmmm	WITHOUT_CLASSIFICATION	0.9999901088813848	WITHOUT_CLASSIFICATION	9.891118615195496E-6	IMPLEMENTATION
// I believe Ruby bails out with a "bug" if closing fails	WITHOUT_CLASSIFICATION	0.9998381451168551	WITHOUT_CLASSIFICATION	1.6185488314490783E-4	IMPLEMENTATION
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec. // And why the hell does webrick pass this in as a first argument!!!!!	WITHOUT_CLASSIFICATION	0.9999999943150412	WITHOUT_CLASSIFICATION	5.684958880704023E-9	IMPLEMENTATION
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec.	WITHOUT_CLASSIFICATION	0.9999999076890107	WITHOUT_CLASSIFICATION	9.231098929152042E-8	IMPLEMENTATION
// Length to read	WITHOUT_CLASSIFICATION	0.9999320550670867	WITHOUT_CLASSIFICATION	6.794493291329541E-5	IMPLEMENTATION
// String/Buffer to read it into	WITHOUT_CLASSIFICATION	0.9999862553752715	WITHOUT_CLASSIFICATION	1.3744624728439518E-5	IMPLEMENTATION
// cryptic for the uninitiated...	WITHOUT_CLASSIFICATION	0.9999472235171386	WITHOUT_CLASSIFICATION	5.27764828613553E-5	IMPLEMENTATION
// select until read is ready	WITHOUT_CLASSIFICATION	0.9999908247566519	WITHOUT_CLASSIFICATION	9.175243348120815E-6	IMPLEMENTATION
//        ByteList buffer = null;	WITHOUT_CLASSIFICATION	0.9999434371518453	WITHOUT_CLASSIFICATION	5.6562848154761564E-5	IMPLEMENTATION
//            buffer = str.getByteList();	WITHOUT_CLASSIFICATION	0.9999384188819967	WITHOUT_CLASSIFICATION	6.158111800327361E-5	IMPLEMENTATION
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999880987972681	WITHOUT_CLASSIFICATION	1.1901202731941625E-5	IMPLEMENTATION
/* rb: writable */	WITHOUT_CLASSIFICATION	0.9999338107859356	WITHOUT_CLASSIFICATION	6.6189214064411E-5	IMPLEMENTATION
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999880987972681	WITHOUT_CLASSIFICATION	1.1901202731941625E-5	IMPLEMENTATION
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999988563602584	WITHOUT_CLASSIFICATION	1.1436397415671404E-6	IMPLEMENTATION
// TODO: read into buffer using all the fread logic //        int read = openFile.getMainStream().fread(buffer);	WITHOUT_CLASSIFICATION	0.7758581798549139	WITHOUT_CLASSIFICATION	0.22414182014508602	IMPLEMENTATION
// truncate buffer string to zero, if provided	WITHOUT_CLASSIFICATION	0.9999997217428463	WITHOUT_CLASSIFICATION	2.782571536648849E-7	IMPLEMENTATION
// TODO: READ_CHECK from MRI	WITHOUT_CLASSIFICATION	0.7987826486799352	WITHOUT_CLASSIFICATION	0.20121735132006482	IMPLEMENTATION
/* class methods for IO */	WITHOUT_CLASSIFICATION	0.9999976484125359	WITHOUT_CLASSIFICATION	2.3515874640440456E-6	IMPLEMENTATION
// save blocking state	WITHOUT_CLASSIFICATION	0.9999845904185735	WITHOUT_CLASSIFICATION	1.5409581426530837E-5	IMPLEMENTATION
// write	WITHOUT_CLASSIFICATION	0.9999926087830189	WITHOUT_CLASSIFICATION	7.391216981123691E-6	IMPLEMENTATION
// Java's select doesn't do anything about this, so we leave it be.	WITHOUT_CLASSIFICATION	0.9999299946127874	WITHOUT_CLASSIFICATION	7.000538721260747E-5	IMPLEMENTATION
// make all sockets blocking as configured again // close unregisters all channels, so we can safely reset blocking modes	WITHOUT_CLASSIFICATION	0.9999865697179133	WITHOUT_CLASSIFICATION	1.3430282086685567E-5	IMPLEMENTATION
// FIXME: process options	WITHOUT_CLASSIFICATION	0.9875666500476581	WITHOUT_CLASSIFICATION	0.012433349952341907	IMPLEMENTATION
// Enebo: annotation processing forced me to do pangea method here...	WITHOUT_CLASSIFICATION	0.9998551313958227	WITHOUT_CLASSIFICATION	1.448686041773096E-4	IMPLEMENTATION
// NIO based pipe	WITHOUT_CLASSIFICATION	0.9996570811961341	WITHOUT_CLASSIFICATION	3.429188038659579E-4	IMPLEMENTATION
// not using remove(Object) here to avoid the equals() call	WITHOUT_CLASSIFICATION	0.9705149718793401	WITHOUT_CLASSIFICATION	0.029485028120659933	IMPLEMENTATION
// raise will also wake the thread from selection	WITHOUT_CLASSIFICATION	0.9999936884548647	WITHOUT_CLASSIFICATION	6.311545135354042E-6	IMPLEMENTATION
/* may need to handle ENC_CODERANGE_BROKEN */	WITHOUT_CLASSIFICATION	0.9947410605853358	WITHOUT_CLASSIFICATION	0.005258939414664219	IMPLEMENTATION
// TODO: rb_usascii_str_new2	WITHOUT_CLASSIFICATION	0.5417190653341669	IMPLEMENTATION	0.4582809346658332	WITHOUT_CLASSIFICATION
// If we know what method was being called, strip everything // before the call. This hides the JRuby and reflection internals.	WITHOUT_CLASSIFICATION	0.9765175047243676	WITHOUT_CLASSIFICATION	0.02348249527563242	IMPLEMENTATION
// The class of this object	WITHOUT_CLASSIFICATION	0.999991585349979	WITHOUT_CLASSIFICATION	8.414650021070765E-6	IMPLEMENTATION
// zeroed by jvm	WITHOUT_CLASSIFICATION	0.9998226025213346	WITHOUT_CLASSIFICATION	1.7739747866539967E-4	IMPLEMENTATION
//objectClass.defineAnnotatedMethods(BasicObjectMethods.class);	WITHOUT_CLASSIFICATION	0.9997254911986895	WITHOUT_CLASSIFICATION	2.7450880131056003E-4	IMPLEMENTATION
// JRUBY-4113: callers should not call setTaint on immediate objects	WITHOUT_CLASSIFICATION	0.9730678443133616	WITHOUT_CLASSIFICATION	0.0269321556866384	IMPLEMENTATION
// rb_class_boot	WITHOUT_CLASSIFICATION	0.9996612927501303	WITHOUT_CLASSIFICATION	3.3870724986971226E-4	IMPLEMENTATION
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999890895876924	WITHOUT_CLASSIFICATION	1.091041230749842E-5	IMPLEMENTATION
// 1.9 rb_check_to_integer	WITHOUT_CLASSIFICATION	0.9999441559003632	WITHOUT_CLASSIFICATION	5.5844099636791055E-5	IMPLEMENTATION
// for interface impls	WITHOUT_CLASSIFICATION	0.9999914197663444	WITHOUT_CLASSIFICATION	8.580233655508076E-6	IMPLEMENTATION
// We're cloning ourselves, so we know the result should be a RubyObject	WITHOUT_CLASSIFICATION	0.9996256419762025	WITHOUT_CLASSIFICATION	3.7435802379749363E-4	IMPLEMENTATION
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999937902589993	WITHOUT_CLASSIFICATION	6.209741000825113E-6	IMPLEMENTATION
// can't use -v and stdin	WITHOUT_CLASSIFICATION	0.9999231532000225	WITHOUT_CLASSIFICATION	7.684679997763577E-5	IMPLEMENTATION
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.999922597420802	WITHOUT_CLASSIFICATION	7.74025791979923E-5	IMPLEMENTATION
// Equivalent of Data_Get_Struct // This will first check that the object in question is actually a T_DATA equivalent.	WITHOUT_CLASSIFICATION	0.9999991925991819	WITHOUT_CLASSIFICATION	8.074008181808659E-7	IMPLEMENTATION
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999111096310803	WITHOUT_CLASSIFICATION	8.889036891965701E-5	IMPLEMENTATION
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999111096310803	WITHOUT_CLASSIFICATION	8.889036891965701E-5	IMPLEMENTATION
// // INSTANCE VARIABLE API METHODS //	WITHOUT_CLASSIFICATION	0.9999355712101486	WITHOUT_CLASSIFICATION	6.442878985142202E-5	IMPLEMENTATION
// Struct methods	WITHOUT_CLASSIFICATION	0.9996194626407344	WITHOUT_CLASSIFICATION	3.805373592655694E-4	IMPLEMENTATION
//runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);	WITHOUT_CLASSIFICATION	0.9995257149668366	WITHOUT_CLASSIFICATION	4.7428503316335505E-4	IMPLEMENTATION
// define access methods.	WITHOUT_CLASSIFICATION	0.999989051857392	WITHOUT_CLASSIFICATION	1.0948142608058003E-5	IMPLEMENTATION
// if we are storing a name as well, index is one too high for values	WITHOUT_CLASSIFICATION	0.9999999581631447	WITHOUT_CLASSIFICATION	4.183685536566537E-8	IMPLEMENTATION
// Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.999977073125196	WITHOUT_CLASSIFICATION	2.2926874803983952E-5	IMPLEMENTATION
// For binding purposes on the newly created struct types	WITHOUT_CLASSIFICATION	0.9998785827289838	WITHOUT_CLASSIFICATION	1.2141727101624587E-4	IMPLEMENTATION
// OBJ_INFECT        	WITHOUT_CLASSIFICATION	0.9999441559003632	WITHOUT_CLASSIFICATION	5.5844099636791055E-5	IMPLEMENTATION
// These call* assume ThreadContext = receiver.getRuntime().getCurrentContext()	WITHOUT_CLASSIFICATION	0.9998859322995348	WITHOUT_CLASSIFICATION	1.1406770046523695E-4	IMPLEMENTATION
// Execute iterateMethod again.	WITHOUT_CLASSIFICATION	0.9999488878060916	WITHOUT_CLASSIFICATION	5.111219390831864E-5	IMPLEMENTATION
/*     * @param nv number of times to cycle or -1 to cycle indefinitely     */	WITHOUT_CLASSIFICATION	0.9999992107689625	WITHOUT_CLASSIFICATION	7.892310376741433E-7	IMPLEMENTATION
// Atomic ?	WITHOUT_CLASSIFICATION	0.999856960139077	WITHOUT_CLASSIFICATION	1.4303986092295676E-4	IMPLEMENTATION
// Atomic ?	WITHOUT_CLASSIFICATION	0.999856960139077	WITHOUT_CLASSIFICATION	1.4303986092295676E-4	IMPLEMENTATION
// MUST NOT be used across threads	WITHOUT_CLASSIFICATION	0.999991613828702	WITHOUT_CLASSIFICATION	8.386171297956297E-6	IMPLEMENTATION
// superClass may be null.	WITHOUT_CLASSIFICATION	0.9999531338785715	WITHOUT_CLASSIFICATION	4.686612142855141E-5	IMPLEMENTATION
// Containing class...The parent of Object is null. Object should always be last in chain.	WITHOUT_CLASSIFICATION	0.9999989134264602	WITHOUT_CLASSIFICATION	1.086573539776075E-6	IMPLEMENTATION
// ClassId is the name of the class/module sans where it is located. // If it is null, then it an anonymous class.	WITHOUT_CLASSIFICATION	0.9999914424437959	WITHOUT_CLASSIFICATION	8.557556204069848E-6	IMPLEMENTATION
// ClassProviders return Java class/module (in #defineOrGetClassUnder and // #defineOrGetModuleUnder) when class/module is opened using colon syntax. 	WITHOUT_CLASSIFICATION	0.9999952156168797	WITHOUT_CLASSIFICATION	4.784383120391353E-6	IMPLEMENTATION
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999939971535412	WITHOUT_CLASSIFICATION	6.00284645882911E-6	IMPLEMENTATION
// Make sure the module we include does not already exist	WITHOUT_CLASSIFICATION	0.9986253383120631	WITHOUT_CLASSIFICATION	0.0013746616879368562	IMPLEMENTATION
// MRI checks all types first:	WITHOUT_CLASSIFICATION	0.9999233631477199	WITHOUT_CLASSIFICATION	7.66368522801794E-5	IMPLEMENTATION
// we need full traces, use default (slow) populator	WITHOUT_CLASSIFICATION	0.999610546951424	WITHOUT_CLASSIFICATION	3.894530485759473E-4	IMPLEMENTATION
// module/singleton methods are all defined public	WITHOUT_CLASSIFICATION	0.9999951530231771	WITHOUT_CLASSIFICATION	4.846976822978192E-6	IMPLEMENTATION
// See if module is in chain...Cannot match against itself so start at superClass.	WITHOUT_CLASSIFICATION	0.9999999216360287	WITHOUT_CLASSIFICATION	7.836397129337268E-8	IMPLEMENTATION
// We can safely reference methods here instead of doing getMethods() since if we // are adding we are not using a IncludedModuleWrapper.	WITHOUT_CLASSIFICATION	0.9999034631950479	WITHOUT_CLASSIFICATION	9.653680495206372E-5	IMPLEMENTATION
// we grab serial number first; the worst that will happen is we cache a later // update with an earlier serial number, which would just flush anyway	WITHOUT_CLASSIFICATION	0.9999948062875391	WITHOUT_CLASSIFICATION	5.193712460787975E-6	IMPLEMENTATION
// update all hierarchies into which this module has been included	WITHOUT_CLASSIFICATION	0.9999693578033152	WITHOUT_CLASSIFICATION	3.0642196684769405E-5	IMPLEMENTATION
// This method is intended only for defining new classes in Ruby code, // so it uses the allocator of the specified superclass or default to // the Object allocator. It should NOT be used to define classes that require a native allocator.	WITHOUT_CLASSIFICATION	0.9999998263437168	WITHOUT_CLASSIFICATION	1.7365628320000563E-7	IMPLEMENTATION
// need to skip IncludedModuleWrappers	WITHOUT_CLASSIFICATION	0.9981934472520264	WITHOUT_CLASSIFICATION	0.00180655274797358	IMPLEMENTATION
// superClazz = null;	WITHOUT_CLASSIFICATION	0.999941069891737	WITHOUT_CLASSIFICATION	5.8930108262885236E-5	IMPLEMENTATION
// reopen a java class	WITHOUT_CLASSIFICATION	0.9999885288064927	WITHOUT_CLASSIFICATION	1.1471193507411222E-5	IMPLEMENTATION
// This method is intended only for defining new modules in Ruby code	WITHOUT_CLASSIFICATION	0.9999972856755669	WITHOUT_CLASSIFICATION	2.714324433049084E-6	IMPLEMENTATION
// reopen a java module	WITHOUT_CLASSIFICATION	0.9999645683669878	WITHOUT_CLASSIFICATION	3.543163301225526E-5	IMPLEMENTATION
//FIXME warning	WITHOUT_CLASSIFICATION	0.9991703821841266	WITHOUT_CLASSIFICATION	8.296178158734013E-4	IMPLEMENTATION
// FIXME warning	WITHOUT_CLASSIFICATION	0.9961645935804425	WITHOUT_CLASSIFICATION	0.003835406419557408	IMPLEMENTATION
// a normal block passed to define_method changes to do arity checking; make it a lambda	WITHOUT_CLASSIFICATION	0.9944686278025998	WITHOUT_CLASSIFICATION	0.005531372197400132	IMPLEMENTATION
// for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope	WITHOUT_CLASSIFICATION	0.9999961776734962	WITHOUT_CLASSIFICATION	3.822326503726298E-6	IMPLEMENTATION
// just using required is broken...but no more broken than before zsuper refactoring	WITHOUT_CLASSIFICATION	0.9999209315066401	WITHOUT_CLASSIFICATION	7.906849335990298E-5	IMPLEMENTATION
// class and module bodies default to public, so make the block's visibility public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999967952972634	WITHOUT_CLASSIFICATION	3.204702736482148E-6	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999999746202638	WITHOUT_CLASSIFICATION	2.5379736214917046E-8	IMPLEMENTATION
// MRI error message says Class, even though Module is ok 	WITHOUT_CLASSIFICATION	0.9999282205680381	WITHOUT_CLASSIFICATION	7.177943196189245E-5	IMPLEMENTATION
// scan class hierarchy for module	WITHOUT_CLASSIFICATION	0.9999897182075506	WITHOUT_CLASSIFICATION	1.0281792449432357E-5	IMPLEMENTATION
/* Module class methods */	WITHOUT_CLASSIFICATION	0.9999956474158774	WITHOUT_CLASSIFICATION	4.35258412253811E-6	IMPLEMENTATION
// Note: we change current frames visibility here because the methods which call // this method are all "fast" (e.g. they do not created their own frame).	WITHOUT_CLASSIFICATION	0.9994713127370716	WITHOUT_CLASSIFICATION	5.286872629283469E-4	IMPLEMENTATION
// next in hierarchy is an included version of the module we're attempting, // so we skip including it	WITHOUT_CLASSIFICATION	0.9999983580985516	WITHOUT_CLASSIFICATION	1.6419014483653256E-6	IMPLEMENTATION
// if we haven't encountered a real superclass, use the found module as the new inclusion point	WITHOUT_CLASSIFICATION	0.9999757507576404	WITHOUT_CLASSIFICATION	2.4249242359628525E-5	IMPLEMENTATION
// build a list of all modules to consider for inclusion	WITHOUT_CLASSIFICATION	0.9999841377707077	WITHOUT_CLASSIFICATION	1.5862229292328947E-5	IMPLEMENTATION
// if the insertion point is a class, update subclass lists	WITHOUT_CLASSIFICATION	0.9999987328848725	WITHOUT_CLASSIFICATION	1.2671151274577417E-6	IMPLEMENTATION
// if there's a non-null superclass, we're including into a normal class hierarchy; // update subclass relationships to avoid stale parent/child relationships	WITHOUT_CLASSIFICATION	0.9999979103767925	WITHOUT_CLASSIFICATION	2.089623207512679E-6	IMPLEMENTATION
// ////////////////// CLASS VARIABLE RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.999918869957159	WITHOUT_CLASSIFICATION	8.113004284100196E-5	IMPLEMENTATION
// ////////////////// CONSTANT RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999172087584691	WITHOUT_CLASSIFICATION	8.279124153094504E-5	IMPLEMENTATION
// Note: includes part of fix for JRUBY-1339	WITHOUT_CLASSIFICATION	0.999918995795864	WITHOUT_CLASSIFICATION	8.100420413601067E-5	IMPLEMENTATION
// ////////////////// CLASS VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999411961117874	WITHOUT_CLASSIFICATION	5.880388821245425E-5	IMPLEMENTATION
// Wrong Parameter ?	WITHOUT_CLASSIFICATION	0.999859629459552	WITHOUT_CLASSIFICATION	1.4037054044793886E-4	IMPLEMENTATION
// not actually called anywhere (all known uses call the fast version)	WITHOUT_CLASSIFICATION	0.9994417172501012	WITHOUT_CLASSIFICATION	5.582827498987137E-4	IMPLEMENTATION
// Not that is loaded loop around to resolve it next pass	WITHOUT_CLASSIFICATION	0.9998209007848524	WITHOUT_CLASSIFICATION	1.790992151475771E-4	IMPLEMENTATION
// if adding a module under a constant name, set that module's basename to the constant name	WITHOUT_CLASSIFICATION	0.9996284841982508	WITHOUT_CLASSIFICATION	3.7151580174919763E-4	IMPLEMENTATION
// Fix for JRUBY-1339 - search hierarchy for constant	WITHOUT_CLASSIFICATION	0.999386653557332	WITHOUT_CLASSIFICATION	6.133464426679466E-4	IMPLEMENTATION
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999907889745107	WITHOUT_CLASSIFICATION	9.211025489364305E-6	IMPLEMENTATION
// removes and returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999952620074462	WITHOUT_CLASSIFICATION	4.737992553864142E-6	IMPLEMENTATION
// we can't rename a file while it's open in windows	WITHOUT_CLASSIFICATION	0.9999971174912123	WITHOUT_CLASSIFICATION	2.882508787633386E-6	IMPLEMENTATION
//reopen	WITHOUT_CLASSIFICATION	0.9999696503844563	WITHOUT_CLASSIFICATION	3.034961554371392E-5	IMPLEMENTATION
// ARGF methods	WITHOUT_CLASSIFICATION	0.9996194626407344	WITHOUT_CLASSIFICATION	3.805373592655694E-4	IMPLEMENTATION
//         data.currentFile.callMethod(context, "lineno=", line);	WITHOUT_CLASSIFICATION	0.999909015173615	WITHOUT_CLASSIFICATION	9.098482638499437E-5	IMPLEMENTATION
// one optional, one required args	WITHOUT_CLASSIFICATION	0.9997609001369929	WITHOUT_CLASSIFICATION	2.3909986300705516E-4	IMPLEMENTATION
// one optional and no required args	WITHOUT_CLASSIFICATION	0.999926501191837	WITHOUT_CLASSIFICATION	7.34988081630068E-5	IMPLEMENTATION
// try to get errno value out of the class	WITHOUT_CLASSIFICATION	0.9999986949155975	WITHOUT_CLASSIFICATION	1.3050844025180595E-6	IMPLEMENTATION
// we got a valid errno value	WITHOUT_CLASSIFICATION	0.9999732011650322	WITHOUT_CLASSIFICATION	2.6798834967891492E-5	IMPLEMENTATION
// Ensure we're not running on GCJ, since it's not supported and leads to weird errors	WITHOUT_CLASSIFICATION	0.9999534839951884	WITHOUT_CLASSIFICATION	4.6516004811636034E-5	IMPLEMENTATION
// print out as a nice Ruby backtrace	WITHOUT_CLASSIFICATION	0.9999875133400394	WITHOUT_CLASSIFICATION	1.2486659960606965E-5	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9998974164142229	WITHOUT_CLASSIFICATION	1.0258358577709944E-4	IMPLEMENTATION
// set thread context JRuby classloader here, for the main thread	WITHOUT_CLASSIFICATION	0.9998492322120756	WITHOUT_CLASSIFICATION	1.507677879244284E-4	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999558418399798	WITHOUT_CLASSIFICATION	4.4158160020279904E-5	IMPLEMENTATION
// no script to run, return success below	WITHOUT_CLASSIFICATION	0.9999911431695628	WITHOUT_CLASSIFICATION	8.856830437135722E-6	IMPLEMENTATION
// Skip /usr/bin/env if it's first	WITHOUT_CLASSIFICATION	0.9999733087287779	WITHOUT_CLASSIFICATION	2.6691271222139873E-5	IMPLEMENTATION
// Skip any assignments if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999989663418166	WITHOUT_CLASSIFICATION	1.0336581833289056E-6	IMPLEMENTATION
// Skip any commandline args if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.999999250980387	WITHOUT_CLASSIFICATION	7.490196130282857E-7	IMPLEMENTATION
// ignore error	WITHOUT_CLASSIFICATION	0.9989185825683359	WITHOUT_CLASSIFICATION	0.001081417431664172	IMPLEMENTATION
// ////////////////// COMMON CONSTANT / CVAR METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.999980238537687	WITHOUT_CLASSIFICATION	1.9761462312884602E-5	IMPLEMENTATION
// ////////////////// INTERNAL MODULE VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999399920304829	WITHOUT_CLASSIFICATION	6.0007969517087845E-5	IMPLEMENTATION
// ////////////////// LOW-LEVEL CONSTANT INTERFACE //////////////// // // fetch/store/list constants for this module //	WITHOUT_CLASSIFICATION	0.999873126297994	WITHOUT_CLASSIFICATION	1.268737020060105E-4	IMPLEMENTATION
// odd	WITHOUT_CLASSIFICATION	0.9999901986293718	WITHOUT_CLASSIFICATION	9.801370628223485E-6	IMPLEMENTATION
// JRubyClient	WITHOUT_CLASSIFICATION	0.9996612927501303	WITHOUT_CLASSIFICATION	3.3870724986971226E-4	IMPLEMENTATION
/*     * x = mantissa * 2 ** exponent     *     * Where mantissa is in the range of [.5, 1)     *     */	WITHOUT_CLASSIFICATION	0.9999997126480845	WITHOUT_CLASSIFICATION	2.873519154749948E-7	IMPLEMENTATION
// Make mantissa same sign so we only have one code path.	WITHOUT_CLASSIFICATION	0.9999730758295651	WITHOUT_CLASSIFICATION	2.6924170434871286E-5	IMPLEMENTATION
// Increase value to hit lower range.	WITHOUT_CLASSIFICATION	0.999988087999157	WITHOUT_CLASSIFICATION	1.1912000843050387E-5	IMPLEMENTATION
/*     * r = x * 2 ** y     */	WITHOUT_CLASSIFICATION	0.9999987437938005	WITHOUT_CLASSIFICATION	1.2562061995589948E-6	IMPLEMENTATION
/*  0! */	WITHOUT_CLASSIFICATION	0.9999980350891289	WITHOUT_CLASSIFICATION	1.9649108710820273E-6	IMPLEMENTATION
/*  1! */	WITHOUT_CLASSIFICATION	0.9999980350891289	WITHOUT_CLASSIFICATION	1.9649108710820273E-6	IMPLEMENTATION
/*  2! */	WITHOUT_CLASSIFICATION	0.9999980350891289	WITHOUT_CLASSIFICATION	1.9649108710820273E-6	IMPLEMENTATION
/*  3! */	WITHOUT_CLASSIFICATION	0.9999980350891289	WITHOUT_CLASSIFICATION	1.9649108710820273E-6	IMPLEMENTATION
/*  4! */	WITHOUT_CLASSIFICATION	0.9999980350891289	WITHOUT_CLASSIFICATION	1.9649108710820273E-6	IMPLEMENTATION
/*  5! */	WITHOUT_CLASSIFICATION	0.9999980350891289	WITHOUT_CLASSIFICATION	1.9649108710820273E-6	IMPLEMENTATION
/*  6! */	WITHOUT_CLASSIFICATION	0.9999980350891289	WITHOUT_CLASSIFICATION	1.9649108710820273E-6	IMPLEMENTATION
/*  7! */	WITHOUT_CLASSIFICATION	0.9999980350891289	WITHOUT_CLASSIFICATION	1.9649108710820273E-6	IMPLEMENTATION
/*  8! */	WITHOUT_CLASSIFICATION	0.9999980350891289	WITHOUT_CLASSIFICATION	1.9649108710820273E-6	IMPLEMENTATION
/*  9! */	WITHOUT_CLASSIFICATION	0.9999980350891289	WITHOUT_CLASSIFICATION	1.9649108710820273E-6	IMPLEMENTATION
/* 11! */	WITHOUT_CLASSIFICATION	0.9999980676169425	WITHOUT_CLASSIFICATION	1.932383057429086E-6	IMPLEMENTATION
/* 12! */	WITHOUT_CLASSIFICATION	0.9999980676169425	WITHOUT_CLASSIFICATION	1.932383057429086E-6	IMPLEMENTATION
/* 13! */	WITHOUT_CLASSIFICATION	0.9999980676169425	WITHOUT_CLASSIFICATION	1.932383057429086E-6	IMPLEMENTATION
/* 15! */	WITHOUT_CLASSIFICATION	0.9999980676169425	WITHOUT_CLASSIFICATION	1.932383057429086E-6	IMPLEMENTATION
/* 16! */	WITHOUT_CLASSIFICATION	0.9999980676169425	WITHOUT_CLASSIFICATION	1.932383057429086E-6	IMPLEMENTATION
/* 17! */	WITHOUT_CLASSIFICATION	0.9999980676169425	WITHOUT_CLASSIFICATION	1.932383057429086E-6	IMPLEMENTATION
/* 19! */	WITHOUT_CLASSIFICATION	0.9999980676169425	WITHOUT_CLASSIFICATION	1.932383057429086E-6	IMPLEMENTATION
/* 20! */	WITHOUT_CLASSIFICATION	0.9999980676169425	WITHOUT_CLASSIFICATION	1.932383057429086E-6	IMPLEMENTATION
/* 21! */	WITHOUT_CLASSIFICATION	0.9999980676169425	WITHOUT_CLASSIFICATION	1.932383057429086E-6	IMPLEMENTATION
// Static constants	WITHOUT_CLASSIFICATION	0.9996726808602405	WITHOUT_CLASSIFICATION	3.273191397595095E-4	IMPLEMENTATION
// Clean-up string representation so that it could be understood // by Java's BigDecimal. Not terribly efficient for now. // 1. MRI allows d and D as exponent separators	WITHOUT_CLASSIFICATION	0.999903474581961	WITHOUT_CLASSIFICATION	9.65254180389484E-5	IMPLEMENTATION
// 2. MRI allows underscores anywhere	WITHOUT_CLASSIFICATION	0.9999211420729659	WITHOUT_CLASSIFICATION	7.885792703419166E-5	IMPLEMENTATION
// 3. MRI ignores the trailing junk	WITHOUT_CLASSIFICATION	0.9997681701455989	WITHOUT_CLASSIFICATION	2.31829854401071E-4	IMPLEMENTATION
// MRI behavior: -0 and +0 are two different things	WITHOUT_CLASSIFICATION	0.999959775141513	WITHOUT_CLASSIFICATION	4.022485848701982E-5	IMPLEMENTATION
// Java and MRI definitions of modulo are different.	WITHOUT_CLASSIFICATION	0.9999969279515756	WITHOUT_CLASSIFICATION	3.0720484244740156E-6	IMPLEMENTATION
// Java and MRI definitions of remainder are the same.	WITHOUT_CLASSIFICATION	0.9999936411927195	WITHOUT_CLASSIFICATION	6.358807280552504E-6	IMPLEMENTATION
// Note: MRI has a very non-trivial way of calculating the precision, // so we use very simple approximation here:	WITHOUT_CLASSIFICATION	0.999953069831073	WITHOUT_CLASSIFICATION	4.6930168926924125E-5	IMPLEMENTATION
// Iteration variables, for the square root x and the reciprocal v // initial x:  x0 ~ sqrt() // initial v:  v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999868819040779	WITHOUT_CLASSIFICATION	1.3118095922139913E-5	IMPLEMENTATION
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9997854120550465	WITHOUT_CLASSIFICATION	2.14587944953491E-4	IMPLEMENTATION
// TODO: why this: .setResult();	WITHOUT_CLASSIFICATION	0.9444739877895859	IMPLEMENTATION	0.0555260122104141	WITHOUT_CLASSIFICATION
// integer division	WITHOUT_CLASSIFICATION	0.9996661517262816	WITHOUT_CLASSIFICATION	3.338482737183248E-4	IMPLEMENTATION
// MRI behavior: "If digits is 0, the result is the same as the / operator."	WITHOUT_CLASSIFICATION	0.9999996437280574	WITHOUT_CLASSIFICATION	3.5627194252594817E-7	IMPLEMENTATION
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999441735296809	WITHOUT_CLASSIFICATION	5.582647031922768E-5	IMPLEMENTATION
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999441735296809	WITHOUT_CLASSIFICATION	5.582647031922768E-5	IMPLEMENTATION
// Java and MRI definitions of divmod are different.        	WITHOUT_CLASSIFICATION	0.9999969279515756	WITHOUT_CLASSIFICATION	3.0720484244740156E-6	IMPLEMENTATION
// JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it	WITHOUT_CLASSIFICATION	0.9986646631981102	WITHOUT_CLASSIFICATION	0.0013353368018897878	IMPLEMENTATION
// shift the decimal point just to the right of the digit to be rounded to (divide by 10**(abs(scale))) // -1 -> 10's digit, -2 -> 100's digit, etc.	WITHOUT_CLASSIFICATION	0.9999993487673123	WITHOUT_CLASSIFICATION	6.512326877084542E-7	IMPLEMENTATION
// ...round to that digit	WITHOUT_CLASSIFICATION	0.9999273412768397	WITHOUT_CLASSIFICATION	7.265872316032474E-5	IMPLEMENTATION
// ...and shift the result back to the left (multiply by 10**(abs(scale)))	WITHOUT_CLASSIFICATION	0.9999798006704157	WITHOUT_CLASSIFICATION	2.0199329584271337E-5	IMPLEMENTATION
//this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are	WITHOUT_CLASSIFICATION	0.9999847134326102	WITHOUT_CLASSIFICATION	1.528656738979223E-5	IMPLEMENTATION
// sign	WITHOUT_CLASSIFICATION	0.999990938033583	WITHOUT_CLASSIFICATION	9.061966417017431E-6	IMPLEMENTATION
// significant digits and exponent	WITHOUT_CLASSIFICATION	0.9999569827362224	WITHOUT_CLASSIFICATION	4.301726377761367E-5	IMPLEMENTATION
// normalize the value	WITHOUT_CLASSIFICATION	0.9999844920534808	WITHOUT_CLASSIFICATION	1.5507946519200175E-5	IMPLEMENTATION
// base	WITHOUT_CLASSIFICATION	0.9999961799294046	WITHOUT_CLASSIFICATION	3.8200705954005935E-6	IMPLEMENTATION
// NOTE: MRI's sqrt precision is limited by 100, // but we allow values more than 100.	WITHOUT_CLASSIFICATION	0.9999945439053611	WITHOUT_CLASSIFICATION	5.456094638922877E-6	IMPLEMENTATION
// just in case, add a bit of extra precision	WITHOUT_CLASSIFICATION	0.9999972618373252	WITHOUT_CLASSIFICATION	2.7381626748946834E-6	IMPLEMENTATION
// eh?!	WITHOUT_CLASSIFICATION	0.9999901088813848	WITHOUT_CLASSIFICATION	9.891118615195496E-6	IMPLEMENTATION
// Note: #fix has only no-arg form, but truncate allows optional parameter.	WITHOUT_CLASSIFICATION	0.9999971743541994	WITHOUT_CLASSIFICATION	2.8256458005068254E-6	IMPLEMENTATION
// General number and precision checking	WITHOUT_CLASSIFICATION	0.9995765224554931	WITHOUT_CLASSIFICATION	4.234775445069703E-4	IMPLEMENTATION
// the requested precision	WITHOUT_CLASSIFICATION	0.999970445048706	WITHOUT_CLASSIFICATION	2.95549512939379E-5	IMPLEMENTATION
// Proc class	WITHOUT_CLASSIFICATION	0.9998797094381424	WITHOUT_CLASSIFICATION	1.2029056185760747E-4	IMPLEMENTATION
//.append("  -x[directory]   strip off text before #!ruby line and perhaps cd to directory\n")	WITHOUT_CLASSIFICATION	0.9999117976419802	WITHOUT_CLASSIFICATION	8.820235801969029E-5	IMPLEMENTATION
// even shift.. // ..floors to 62 or 63 bit BigInteger	WITHOUT_CLASSIFICATION	0.9999837296332105	WITHOUT_CLASSIFICATION	1.6270366789474886E-5	IMPLEMENTATION
// 5 -> 2, -5 -> -3 need half a scale more..	WITHOUT_CLASSIFICATION	0.9999372003500465	WITHOUT_CLASSIFICATION	6.279964995347599E-5	IMPLEMENTATION
// ..where 100 -> 10 shifts the scale	WITHOUT_CLASSIFICATION	0.9999881958943962	WITHOUT_CLASSIFICATION	1.1804105603800006E-5	IMPLEMENTATION
// Initial x - use double root - multiply by halfBack to unshift - set new scale	WITHOUT_CLASSIFICATION	0.9999959293115842	WITHOUT_CLASSIFICATION	4.070688415757376E-6	IMPLEMENTATION
// x0 ~ sqrt()	WITHOUT_CLASSIFICATION	0.9996633797273875	WITHOUT_CLASSIFICATION	3.3662027261253805E-4	IMPLEMENTATION
// for prec 15 root x0 must surely be OK // return small prec roots without iterations	WITHOUT_CLASSIFICATION	0.999966496642214	WITHOUT_CLASSIFICATION	3.3503357785985796E-5	IMPLEMENTATION
// Initial v - the reciprocal // v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9998930659714182	WITHOUT_CLASSIFICATION	1.0693402858183098E-4	IMPLEMENTATION
// Collect iteration precisions beforehand	WITHOUT_CLASSIFICATION	0.9999162818961985	WITHOUT_CLASSIFICATION	8.371810380145985E-5	IMPLEMENTATION
// assume nInit = 16 <= prec	WITHOUT_CLASSIFICATION	0.9999494456116467	WITHOUT_CLASSIFICATION	5.055438835341116E-5	IMPLEMENTATION
// The loop of "Square Root by Coupled Newton Iteration"	WITHOUT_CLASSIFICATION	0.9999882825418791	WITHOUT_CLASSIFICATION	1.1717458120890053E-5	IMPLEMENTATION
// Increase precision - next iteration supplies n exact digits	WITHOUT_CLASSIFICATION	0.9999358695088819	WITHOUT_CLASSIFICATION	6.413049111811754E-5	IMPLEMENTATION
// Next x                                        // e = d - x^2	WITHOUT_CLASSIFICATION	0.999940781696785	WITHOUT_CLASSIFICATION	5.9218303214958344E-5	IMPLEMENTATION
// x += e*v     ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999825521986229	WITHOUT_CLASSIFICATION	1.744780137709288E-5	IMPLEMENTATION
// root x is ready!	WITHOUT_CLASSIFICATION	0.999925244841181	WITHOUT_CLASSIFICATION	7.475515881897373E-5	IMPLEMENTATION
// Next v                                        // g = 1 - 2*x*v	WITHOUT_CLASSIFICATION	0.9999265494373989	WITHOUT_CLASSIFICATION	7.345056260104657E-5	IMPLEMENTATION
// v += g*v     ~ 1/2/sqrt()	WITHOUT_CLASSIFICATION	0.9999716585213765	WITHOUT_CLASSIFICATION	2.8341478623482473E-5	IMPLEMENTATION
// RubyBigdecimal	WITHOUT_CLASSIFICATION	0.9996612927501303	WITHOUT_CLASSIFICATION	3.3870724986971226E-4	IMPLEMENTATION
// c: bind_eval	WITHOUT_CLASSIFICATION	0.9996612927501303	WITHOUT_CLASSIFICATION	3.3870724986971226E-4	IMPLEMENTATION
/*  ================     *  Module Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999965127883135	WITHOUT_CLASSIFICATION	3.487211686585442E-6	IMPLEMENTATION
// from CommandlineParser	WITHOUT_CLASSIFICATION	0.9999880987972681	WITHOUT_CLASSIFICATION	1.1901202731941625E-5	IMPLEMENTATION
// This property is a Boolean, to allow three values, so it can match MRI's nil, false and true	WITHOUT_CLASSIFICATION	0.9999064276738656	WITHOUT_CLASSIFICATION	9.357232613440468E-5	IMPLEMENTATION
// default ClassCache using jitMax as a soft upper bound	WITHOUT_CLASSIFICATION	0.999994668575955	WITHOUT_CLASSIFICATION	5.33142404499356E-6	IMPLEMENTATION
// Until we get a little more solid on 1.9 support we will only run interpreted mode	WITHOUT_CLASSIFICATION	0.997504600709199	WITHOUT_CLASSIFICATION	0.0024953992908010006	IMPLEMENTATION
// Setting the loader needs to reset the class cache	WITHOUT_CLASSIFICATION	0.9981538323921366	WITHOUT_CLASSIFICATION	0.0018461676078634253	IMPLEMENTATION
// try the normal property first	WITHOUT_CLASSIFICATION	0.9999623145182848	WITHOUT_CLASSIFICATION	3.768548171526355E-5	IMPLEMENTATION
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999727845876982	WITHOUT_CLASSIFICATION	2.7215412301861837E-5	IMPLEMENTATION
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999727845876982	WITHOUT_CLASSIFICATION	2.7215412301861837E-5	IMPLEMENTATION
// try loading from classloader resources	WITHOUT_CLASSIFICATION	0.999991310655909	WITHOUT_CLASSIFICATION	8.689344090975967E-6	IMPLEMENTATION
// otherwise fall back on system temp location	WITHOUT_CLASSIFICATION	0.9930405143948532	WITHOUT_CLASSIFICATION	0.006959485605146745	IMPLEMENTATION
// We require the home directory to be absolute	WITHOUT_CLASSIFICATION	0.9999979826604498	WITHOUT_CLASSIFICATION	2.017339550222037E-6	IMPLEMENTATION
//consume the file name	WITHOUT_CLASSIFICATION	0.9997224985393082	WITHOUT_CLASSIFICATION	2.7750146069187407E-4	IMPLEMENTATION
// Specify something that can't separate	WITHOUT_CLASSIFICATION	0.9999838898986548	WITHOUT_CLASSIFICATION	1.6110101345113924E-5	IMPLEMENTATION
// try cwd first	WITHOUT_CLASSIFICATION	0.9999689161902695	WITHOUT_CLASSIFICATION	3.1083809730488126E-5	IMPLEMENTATION
// ruby interpreter compatibilty // Usage: ruby [switches] [--] [programfile] [arguments])	WITHOUT_CLASSIFICATION	0.9999145189666181	WITHOUT_CLASSIFICATION	8.54810333819384E-5	IMPLEMENTATION
// KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 // if Ruby 2.0 encoding pragmas are implemented, this will need to change	WITHOUT_CLASSIFICATION	0.9999991105730465	WITHOUT_CLASSIFICATION	8.894269534820015E-7	IMPLEMENTATION
// @JRubyMethod(name = "complex?")	WITHOUT_CLASSIFICATION	0.9998971998009918	WITHOUT_CLASSIFICATION	1.02800199008226E-4	IMPLEMENTATION
// @JRubyMethod(name = "exact?")	WITHOUT_CLASSIFICATION	0.9998971998009918	WITHOUT_CLASSIFICATION	1.02800199008226E-4	IMPLEMENTATION
// @JRubyMethod(name = "inexact?")	WITHOUT_CLASSIFICATION	0.9998971998009918	WITHOUT_CLASSIFICATION	1.02800199008226E-4	IMPLEMENTATION
// symbol string *must* be interned	WITHOUT_CLASSIFICATION	0.9999992140276265	WITHOUT_CLASSIFICATION	7.859723735090149E-7	IMPLEMENTATION
//        assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";	WITHOUT_CLASSIFICATION	0.9615145393176335	WITHOUT_CLASSIFICATION	0.038485460682366426	IMPLEMENTATION
/* Symbol class methods.     *      */	WITHOUT_CLASSIFICATION	0.9999977750224618	WITHOUT_CLASSIFICATION	2.2249775381979985E-6	IMPLEMENTATION
// TODO: 1.9 rb_enc_symname_p	WITHOUT_CLASSIFICATION	0.5417190653341669	IMPLEMENTATION	0.4582809346658332	WITHOUT_CLASSIFICATION
// This is needed to unpack stuff	WITHOUT_CLASSIFICATION	0.9568556973025785	WITHOUT_CLASSIFICATION	0.043144302697421595	IMPLEMENTATION
// we already confirmed above that length > 0	WITHOUT_CLASSIFICATION	0.99970389931668	WITHOUT_CLASSIFICATION	2.961006833199798E-4	IMPLEMENTATION
// *must* be power of 2!	WITHOUT_CLASSIFICATION	0.9999869638241428	WITHOUT_CLASSIFICATION	1.3036175857125623E-5	IMPLEMENTATION
// note all fields are final -- rehash creates new entries when necessary. // as documented in java.util.concurrent.ConcurrentHashMap.java, that will // statistically affect only a small percentage (< 20%) of entries for a given rehash.	WITHOUT_CLASSIFICATION	0.9999999749895093	WITHOUT_CLASSIFICATION	2.5010490659909186E-8	IMPLEMENTATION
//            assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9615145393176335	WITHOUT_CLASSIFICATION	0.038485460682366426	IMPLEMENTATION
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999806891179741	WITHOUT_CLASSIFICATION	1.9310882025782367E-5	IMPLEMENTATION
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999806891179741	WITHOUT_CLASSIFICATION	1.9310882025782367E-5	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9996612927501303	WITHOUT_CLASSIFICATION	3.3870724986971226E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9996612927501303	WITHOUT_CLASSIFICATION	3.3870724986971226E-4	IMPLEMENTATION
// backwards-compatibility, but threadsafe now	WITHOUT_CLASSIFICATION	0.9999894088328793	WITHOUT_CLASSIFICATION	1.0591167120614721E-5	IMPLEMENTATION
//  Single node on list	WITHOUT_CLASSIFICATION	0.9998833892302402	WITHOUT_CLASSIFICATION	1.1661076975967712E-4	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9998572070482956	WITHOUT_CLASSIFICATION	1.4279295170429503E-4	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999696853714746	WITHOUT_CLASSIFICATION	3.0314628525365144E-5	IMPLEMENTATION
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9989556271090153	WITHOUT_CLASSIFICATION	0.0010443728909846426	IMPLEMENTATION
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.999667704831047	WITHOUT_CLASSIFICATION	3.3229516895293034E-4	IMPLEMENTATION
// not so backwards-compatible here, but no one should have been // calling this anyway.	WITHOUT_CLASSIFICATION	0.9987732069101282	WITHOUT_CLASSIFICATION	0.001226793089871778	IMPLEMENTATION
// Profile	WITHOUT_CLASSIFICATION	0.9999902655164826	WITHOUT_CLASSIFICATION	9.73448351744536E-6	IMPLEMENTATION
//static private final String TRANSLIT = "//translit";	WITHOUT_CLASSIFICATION	0.99997363344945	WITHOUT_CLASSIFICATION	2.6366550550027528E-5	IMPLEMENTATION
// treat start and end as start...end for end >= 0, start..end for end < 0	WITHOUT_CLASSIFICATION	0.9999906036839614	WITHOUT_CLASSIFICATION	9.39631603860909E-6	IMPLEMENTATION
// invalid ranges result in an empty string	WITHOUT_CLASSIFICATION	0.9999999682718704	WITHOUT_CLASSIFICATION	3.1728129558107246E-8	IMPLEMENTATION
// Methods of the Nil Class (nil_*):	WITHOUT_CLASSIFICATION	0.9999901095729091	WITHOUT_CLASSIFICATION	9.89042709086686E-6	IMPLEMENTATION
// Has read/write been closed or is it still open for business	WITHOUT_CLASSIFICATION	0.9998585351210233	WITHOUT_CLASSIFICATION	1.4146487897672693E-4	IMPLEMENTATION
// Support IO modes that this object was opened with	WITHOUT_CLASSIFICATION	0.9999632414003606	WITHOUT_CLASSIFICATION	3.6758599639347734E-5	IMPLEMENTATION
// must let original string know we're modifying, so shared buffers aren't damaged	WITHOUT_CLASSIFICATION	0.9999758706859397	WITHOUT_CLASSIFICATION	2.412931406022609E-5	IMPLEMENTATION
// reset the state	WITHOUT_CLASSIFICATION	0.9996677304261545	WITHOUT_CLASSIFICATION	3.322695738454918E-4	IMPLEMENTATION
// Tainting here if we ever want it. (secure 4)	WITHOUT_CLASSIFICATION	0.9992215076348414	WITHOUT_CLASSIFICATION	7.784923651585551E-4	IMPLEMENTATION
// rb_match_busy	WITHOUT_CLASSIFICATION	0.9996612927501303	WITHOUT_CLASSIFICATION	3.3870724986971226E-4	IMPLEMENTATION
//str is frozen	WITHOUT_CLASSIFICATION	0.9996143781366554	WITHOUT_CLASSIFICATION	3.856218633445288E-4	IMPLEMENTATION
// MRI also does a pointer comparison here	WITHOUT_CLASSIFICATION	0.9999733439422772	WITHOUT_CLASSIFICATION	2.665605772275591E-5	IMPLEMENTATION
// JRubyServer	WITHOUT_CLASSIFICATION	0.9996612927501303	WITHOUT_CLASSIFICATION	3.3870724986971226E-4	IMPLEMENTATION
// Class.allocate object is not allocatable before it is initialized	WITHOUT_CLASSIFICATION	0.9997333939144439	WITHOUT_CLASSIFICATION	2.666060855560797E-4	IMPLEMENTATION
// boot the Object class 	WITHOUT_CLASSIFICATION	0.9999856601409991	WITHOUT_CLASSIFICATION	1.4339859000794526E-5	IMPLEMENTATION
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999937902589993	WITHOUT_CLASSIFICATION	6.209741000825113E-6	IMPLEMENTATION
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999939971535412	WITHOUT_CLASSIFICATION	6.00284645882911E-6	IMPLEMENTATION
// undo check	WITHOUT_CLASSIFICATION	0.9995619797023408	WITHOUT_CLASSIFICATION	4.380202976591576E-4	IMPLEMENTATION
// This is a non-standard method; have we decided to start extending Ruby? //classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));	WITHOUT_CLASSIFICATION	0.9999846414471718	WITHOUT_CLASSIFICATION	1.5358552828214953E-5	IMPLEMENTATION
// boot the Module and Class classes	WITHOUT_CLASSIFICATION	0.9999597433705121	WITHOUT_CLASSIFICATION	4.02566294879787E-5	IMPLEMENTATION
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9996605890418022	WITHOUT_CLASSIFICATION	3.3941095819780073E-4	IMPLEMENTATION
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9998718794254339	WITHOUT_CLASSIFICATION	1.2812057456613974E-4	IMPLEMENTATION
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9998718794254339	WITHOUT_CLASSIFICATION	1.2812057456613974E-4	IMPLEMENTATION
// could be pulled down to RubyClass in future // rb_class_boot	WITHOUT_CLASSIFICATION	0.9999675089551536	WITHOUT_CLASSIFICATION	3.2491044846236396E-5	IMPLEMENTATION
// remove us from old superclass's child classes	WITHOUT_CLASSIFICATION	0.9999339062093533	WITHOUT_CLASSIFICATION	6.609379064679443E-5	IMPLEMENTATION
// add us to new superclass's child classes	WITHOUT_CLASSIFICATION	0.9989718494895964	WITHOUT_CLASSIFICATION	0.0010281505104035304	IMPLEMENTATION
// update all subclasses	WITHOUT_CLASSIFICATION	0.9999890386414467	WITHOUT_CLASSIFICATION	1.0961358553240027E-5	IMPLEMENTATION
// fields to hold Ruby and RubyClass references	WITHOUT_CLASSIFICATION	0.9999557026210739	WITHOUT_CLASSIFICATION	4.4297378926122094E-5	IMPLEMENTATION
// static initializing method	WITHOUT_CLASSIFICATION	0.9988639814455821	WITHOUT_CLASSIFICATION	0.0011360185544179143	IMPLEMENTATION
// standard constructor that accepts Ruby, RubyClass	WITHOUT_CLASSIFICATION	0.9998072755990839	WITHOUT_CLASSIFICATION	1.9272440091621E-4	IMPLEMENTATION
// no-arg constructor using static references to Ruby and RubyClass	WITHOUT_CLASSIFICATION	0.9987923533251971	WITHOUT_CLASSIFICATION	0.0012076466748029621	IMPLEMENTATION
// non-signature signature with just IRubyObject	WITHOUT_CLASSIFICATION	0.9999688344838937	WITHOUT_CLASSIFICATION	3.116551610622171E-5	IMPLEMENTATION
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999991066313183	WITHOUT_CLASSIFICATION	8.933686816451882E-7	IMPLEMENTATION
// self // method name	WITHOUT_CLASSIFICATION	0.9997800372010244	WITHOUT_CLASSIFICATION	2.1996279897563067E-4	IMPLEMENTATION
// the default allocator	WITHOUT_CLASSIFICATION	0.9999897135840184	WITHOUT_CLASSIFICATION	1.0286415981577126E-5	IMPLEMENTATION
// Equivalent of T_DATA	WITHOUT_CLASSIFICATION	0.9999659126815282	WITHOUT_CLASSIFICATION	3.408731847169952E-5	IMPLEMENTATION
// do nothing, leave empty	WITHOUT_CLASSIFICATION	0.9999956758087072	WITHOUT_CLASSIFICATION	4.32419129281961E-6	IMPLEMENTATION
// Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9999939905266478	WITHOUT_CLASSIFICATION	6.009473352183861E-6	IMPLEMENTATION
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999965336982392	WITHOUT_CLASSIFICATION	3.4663017607977223E-6	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9998688369859459	WITHOUT_CLASSIFICATION	1.3116301405421038E-4	IMPLEMENTATION
// Make sure all arguments are modules before calling the callbacks	WITHOUT_CLASSIFICATION	0.999997961562883	WITHOUT_CLASSIFICATION	2.038437117100115E-6	IMPLEMENTATION
// MRI extends in order from last to first	WITHOUT_CLASSIFICATION	0.9999991583431997	WITHOUT_CLASSIFICATION	8.416568002504534E-7	IMPLEMENTATION
// NOTE: Serialization is primarily supported for testing purposes, and there is no general // guarantee that serialization will work correctly. Specifically, instance variables pointing // at symbols, threads, modules, classes, and other unserializable types are not detected.	WITHOUT_CLASSIFICATION	0.999997792994369	WITHOUT_CLASSIFICATION	2.2070056310788516E-6	IMPLEMENTATION
// write out ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999812947736624	WITHOUT_CLASSIFICATION	1.870522633767276E-5	IMPLEMENTATION
// rest in ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999923991403901	WITHOUT_CLASSIFICATION	7.60085960992453E-6	IMPLEMENTATION
// 0x3fff_ffff // -0x4000_0000	WITHOUT_CLASSIFICATION	0.9999441559003632	WITHOUT_CLASSIFICATION	5.5844099636791055E-5	IMPLEMENTATION
// a gotcha	WITHOUT_CLASSIFICATION	0.9997559990299155	WITHOUT_CLASSIFICATION	2.4400097008451312E-4	IMPLEMENTATION
// Java / and % are not the same as ruby	WITHOUT_CLASSIFICATION	0.9999913046139924	WITHOUT_CLASSIFICATION	8.695386007581763E-6	IMPLEMENTATION
// A gotcha for Long.MIN_VALUE: value = -value	WITHOUT_CLASSIFICATION	0.9999641785711302	WITHOUT_CLASSIFICATION	3.582142886988415E-5	IMPLEMENTATION
// Piece of mri rb_to_id	WITHOUT_CLASSIFICATION	0.9999659126815282	WITHOUT_CLASSIFICATION	3.408731847169952E-5	IMPLEMENTATION
// Java Doubles are 64 bit long:            	WITHOUT_CLASSIFICATION	0.9999936268352969	WITHOUT_CLASSIFICATION	6.37316470300274E-6	IMPLEMENTATION
// Double.MAX_EXPONENT since Java 1.6            	WITHOUT_CLASSIFICATION	0.9999939905266478	WITHOUT_CLASSIFICATION	6.009473352183861E-6	IMPLEMENTATION
// don't override Numeric#div !	WITHOUT_CLASSIFICATION	0.9999306245931228	WITHOUT_CLASSIFICATION	6.93754068772645E-5	IMPLEMENTATION
// Modelled after c ruby implementation (java /,% not same as ruby)	WITHOUT_CLASSIFICATION	0.9988342644380855	WITHOUT_CLASSIFICATION	0.0011657355619144312	IMPLEMENTATION
// MRI behavior:	WITHOUT_CLASSIFICATION	0.9996630875459738	WITHOUT_CLASSIFICATION	3.369124540261957E-4	IMPLEMENTATION
// Numeric.equal            	WITHOUT_CLASSIFICATION	0.9999441559003632	WITHOUT_CLASSIFICATION	5.5844099636791055E-5	IMPLEMENTATION
// provider is not available	WITHOUT_CLASSIFICATION	0.9992049743662519	WITHOUT_CLASSIFICATION	7.950256337480542E-4	IMPLEMENTATION
// bouncy castle doesn't support algorithm	WITHOUT_CLASSIFICATION	0.9993512345551557	WITHOUT_CLASSIFICATION	6.487654448442301E-4	IMPLEMENTATION
// fall back to system JCA providers	WITHOUT_CLASSIFICATION	0.9994644675045009	WITHOUT_CLASSIFICATION	5.355324954991607E-4	IMPLEMENTATION
// RubyDigest	WITHOUT_CLASSIFICATION	0.9996612927501303	WITHOUT_CLASSIFICATION	3.3870724986971226E-4	IMPLEMENTATION
// ENEBO: Can these be fast?	WITHOUT_CLASSIFICATION	0.9999299085527116	WITHOUT_CLASSIFICATION	7.009144728845018E-5	IMPLEMENTATION
// synchronize on the RubyThread for threadgroup updates	WITHOUT_CLASSIFICATION	0.9999205732122299	WITHOUT_CLASSIFICATION	7.94267877701689E-5	IMPLEMENTATION
// we only add live threads	WITHOUT_CLASSIFICATION	0.9999316789742255	WITHOUT_CLASSIFICATION	6.832102577444924E-5	IMPLEMENTATION
// use same ClassIndex as metaclass, since we're technically still of that type	WITHOUT_CLASSIFICATION	0.9999795725001178	WITHOUT_CLASSIFICATION	2.0427499882138422E-5	IMPLEMENTATION
// handle everything after -- as arguments to the jruby process	WITHOUT_CLASSIFICATION	0.9999211661433218	WITHOUT_CLASSIFICATION	7.883385667825005E-5	IMPLEMENTATION
// JRubyService	WITHOUT_CLASSIFICATION	0.9996612927501303	WITHOUT_CLASSIFICATION	3.3870724986971226E-4	IMPLEMENTATION
// while	WITHOUT_CLASSIFICATION	0.9999945946921606	WITHOUT_CLASSIFICATION	5.405307839448807E-6	IMPLEMENTATION
/* \OOO */	WITHOUT_CLASSIFICATION	0.9999980676169425	WITHOUT_CLASSIFICATION	1.932383057429086E-6	IMPLEMENTATION
// CRuby uses sprintf(buf, "%.*g", FLOAT_DIG, d); // This pattern adjusts the output of String.pattern("%g") to mimic // the C version.	WITHOUT_CLASSIFICATION	0.9999686984010313	WITHOUT_CLASSIFICATION	3.130159896870609E-5	IMPLEMENTATION
// mask off "once" flag	WITHOUT_CLASSIFICATION	0.999974388813989	WITHOUT_CLASSIFICATION	2.561118601093118E-5	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999888576511072	WITHOUT_CLASSIFICATION	1.1142348892740574E-5	IMPLEMENTATION
// internal usage (Complex/Rational)	WITHOUT_CLASSIFICATION	0.9999716212894584	WITHOUT_CLASSIFICATION	2.8378710541673223E-5	IMPLEMENTATION
// silent ?	WITHOUT_CLASSIFICATION	0.9998593486881434	WITHOUT_CLASSIFICATION	1.4065131185653576E-4	IMPLEMENTATION
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999980676169425	WITHOUT_CLASSIFICATION	1.932383057429086E-6	IMPLEMENTATION
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999890895876924	WITHOUT_CLASSIFICATION	1.091041230749842E-5	IMPLEMENTATION
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999338107859356	WITHOUT_CLASSIFICATION	6.6189214064411E-5	IMPLEMENTATION
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999338107859356	WITHOUT_CLASSIFICATION	6.6189214064411E-5	IMPLEMENTATION
/* \O, \OO, \OOO or backref */	WITHOUT_CLASSIFICATION	0.9999915364533766	WITHOUT_CLASSIFICATION	8.4635466235173E-6	IMPLEMENTATION
// MBCLEN_NEEDMORE_P	WITHOUT_CLASSIFICATION	0.9996612927501303	WITHOUT_CLASSIFICATION	3.3870724986971226E-4	IMPLEMENTATION
// MBCLEN_INVALID_P	WITHOUT_CLASSIFICATION	0.9996612927501303	WITHOUT_CLASSIFICATION	3.3870724986971226E-4	IMPLEMENTATION
// Unicode is can be only 21 bits long, int is enough	WITHOUT_CLASSIFICATION	0.9999910828203143	WITHOUT_CLASSIFICATION	8.917179685634167E-6	IMPLEMENTATION
/* Surrogates */	WITHOUT_CLASSIFICATION	0.9999338107859356	WITHOUT_CLASSIFICATION	6.6189214064411E-5	IMPLEMENTATION
// do not load the class if not used	WITHOUT_CLASSIFICATION	0.9998721091780031	WITHOUT_CLASSIFICATION	1.27890821996995E-4	IMPLEMENTATION
/* \0, \0O, \0OO */	WITHOUT_CLASSIFICATION	0.9999338107859356	WITHOUT_CLASSIFICATION	6.6189214064411E-5	IMPLEMENTATION
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999980676169425	WITHOUT_CLASSIFICATION	1.932383057429086E-6	IMPLEMENTATION
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999338107859356	WITHOUT_CLASSIFICATION	6.6189214064411E-5	IMPLEMENTATION
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999890895876924	WITHOUT_CLASSIFICATION	1.091041230749842E-5	IMPLEMENTATION
/* \\u{H HH HHH HHHH HHHHH HHHHHH ...} */	WITHOUT_CLASSIFICATION	0.9999825178194829	WITHOUT_CLASSIFICATION	1.7482180517032738E-5	IMPLEMENTATION
/* \\uHHHH */	WITHOUT_CLASSIFICATION	0.9999338107859356	WITHOUT_CLASSIFICATION	6.6189214064411E-5	IMPLEMENTATION
/* \p{Hiragana} */	WITHOUT_CLASSIFICATION	0.9999338107859356	WITHOUT_CLASSIFICATION	6.6189214064411E-5	IMPLEMENTATION
// inner switch	WITHOUT_CLASSIFICATION	0.9998340282862608	WITHOUT_CLASSIFICATION	1.6597171373932939E-4	IMPLEMENTATION
// newInstance here	WITHOUT_CLASSIFICATION	0.994817357239425	WITHOUT_CLASSIFICATION	0.0051826427605750035	IMPLEMENTATION
// rb_reg_raise	WITHOUT_CLASSIFICATION	0.9996612927501303	WITHOUT_CLASSIFICATION	3.3870724986971226E-4	IMPLEMENTATION
// rb_reg_desc	WITHOUT_CLASSIFICATION	0.9996612927501303	WITHOUT_CLASSIFICATION	3.3870724986971226E-4	IMPLEMENTATION
// rb_enc_reg_raise	WITHOUT_CLASSIFICATION	0.9996612927501303	WITHOUT_CLASSIFICATION	3.3870724986971226E-4	IMPLEMENTATION
// rb_enc_reg_error_desc	WITHOUT_CLASSIFICATION	0.9999441559003632	WITHOUT_CLASSIFICATION	5.5844099636791055E-5	IMPLEMENTATION
// rb_reg_initialize_str	WITHOUT_CLASSIFICATION	0.9999441559003632	WITHOUT_CLASSIFICATION	5.5844099636791055E-5	IMPLEMENTATION
// rb_reg_initialize	WITHOUT_CLASSIFICATION	0.9996612927501303	WITHOUT_CLASSIFICATION	3.3870724986971226E-4	IMPLEMENTATION
// JRUBY-3625: delay setting backref until the MatchData is completely initialized	WITHOUT_CLASSIFICATION	0.9999971568442847	WITHOUT_CLASSIFICATION	2.8431557152938634E-6	IMPLEMENTATION
// rb_reg_expr_str	WITHOUT_CLASSIFICATION	0.9996612927501303	WITHOUT_CLASSIFICATION	3.3870724986971226E-4	IMPLEMENTATION
// option_to_str	WITHOUT_CLASSIFICATION	0.9996612927501303	WITHOUT_CLASSIFICATION	3.3870724986971226E-4	IMPLEMENTATION
// Don't initialize with class // Don't put in object space and don't taint	WITHOUT_CLASSIFICATION	0.9999975003243169	WITHOUT_CLASSIFICATION	2.499675683148165E-6	IMPLEMENTATION
// args should be before block	WITHOUT_CLASSIFICATION	0.9998235229237454	WITHOUT_CLASSIFICATION	1.7647707625455147E-4	IMPLEMENTATION
// args should be at end	WITHOUT_CLASSIFICATION	0.9998720036353046	WITHOUT_CLASSIFICATION	1.279963646953595E-4	IMPLEMENTATION
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9992992403884501	WITHOUT_CLASSIFICATION	7.007596115499806E-4	IMPLEMENTATION
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9992992403884501	WITHOUT_CLASSIFICATION	7.007596115499806E-4	IMPLEMENTATION
// skip anything not related to jruby	WITHOUT_CLASSIFICATION	0.9877002409609408	WITHOUT_CLASSIFICATION	0.012299759039059277	IMPLEMENTATION
// start a new populator	WITHOUT_CLASSIFICATION	0.999985554667075	WITHOUT_CLASSIFICATION	1.4445332924970034E-5	IMPLEMENTATION
// check for frame field reads or writes	WITHOUT_CLASSIFICATION	0.9999382403025077	WITHOUT_CLASSIFICATION	6.175969749232757E-5	IMPLEMENTATION
// add all names for this annotation	WITHOUT_CLASSIFICATION	0.9995893164506763	WITHOUT_CLASSIFICATION	4.1068354932373695E-4	IMPLEMENTATION
// no annotated methods found, skip	WITHOUT_CLASSIFICATION	0.9997416911162588	WITHOUT_CLASSIFICATION	2.5830888374121677E-4	IMPLEMENTATION
// write out a static initializer for frame names, so it only fires once	WITHOUT_CLASSIFICATION	0.9997990530421055	WITHOUT_CLASSIFICATION	2.0094695789454084E-4	IMPLEMENTATION
// single method, use normal logic	WITHOUT_CLASSIFICATION	0.9991173180566221	WITHOUT_CLASSIFICATION	8.826819433779897E-4	IMPLEMENTATION
// multimethod, new logic	WITHOUT_CLASSIFICATION	0.9998040426137664	WITHOUT_CLASSIFICATION	1.9595738623349679E-4	IMPLEMENTATION
// declared type returns the qualified name without $ for inner classes!!!	WITHOUT_CLASSIFICATION	0.9999643318681052	WITHOUT_CLASSIFICATION	3.5668131894761834E-5	IMPLEMENTATION
// inner class, use $ to delimit	WITHOUT_CLASSIFICATION	0.9999523189977358	WITHOUT_CLASSIFICATION	4.768100226403547E-5	IMPLEMENTATION
//                        RubyModule singletonClass = module.getSingletonClass();	WITHOUT_CLASSIFICATION	0.9998954695422121	WITHOUT_CLASSIFICATION	1.0453045778786125E-4	IMPLEMENTATION
//                }	WITHOUT_CLASSIFICATION	0.9996997182538919	WITHOUT_CLASSIFICATION	3.0028174610800313E-4	IMPLEMENTATION
// fallback on non-pregenerated logic	WITHOUT_CLASSIFICATION	0.9994986515703879	WITHOUT_CLASSIFICATION	5.013484296120575E-4	IMPLEMENTATION
// refresh call adapter, since it matters if this is iter-based or not	WITHOUT_CLASSIFICATION	0.9995441080889976	WITHOUT_CLASSIFICATION	4.5589191100243873E-4	IMPLEMENTATION
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9968354617446739	WITHOUT_CLASSIFICATION	0.0031645382553262547	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.9997466077836586	WITHOUT_CLASSIFICATION	2.5339221634136547E-4	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.9998409149022988	WITHOUT_CLASSIFICATION	1.5908509770116007E-4	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999979791451998	WITHOUT_CLASSIFICATION	2.020854800242873E-6	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999979791451998	WITHOUT_CLASSIFICATION	2.020854800242873E-6	IMPLEMENTATION
// colon3	WITHOUT_CLASSIFICATION	0.9999901088813848	WITHOUT_CLASSIFICATION	9.891118615195496E-6	IMPLEMENTATION
// Colon3	WITHOUT_CLASSIFICATION	0.9999901088813848	WITHOUT_CLASSIFICATION	9.891118615195496E-6	IMPLEMENTATION
// array created for rescue args doesn't need to be in ObjectSpace.	WITHOUT_CLASSIFICATION	0.99999939070616	WITHOUT_CLASSIFICATION	6.092938401605475E-7	IMPLEMENTATION
// For b.foo	WITHOUT_CLASSIFICATION	0.9993908670410668	WITHOUT_CLASSIFICATION	6.091329589331439E-4	IMPLEMENTATION
// instance config for the script run	WITHOUT_CLASSIFICATION	0.9999254608893006	WITHOUT_CLASSIFICATION	7.453911069945176E-5	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999979791451998	WITHOUT_CLASSIFICATION	2.020854800242873E-6	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999979791451998	WITHOUT_CLASSIFICATION	2.020854800242873E-6	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999984458052107	WITHOUT_CLASSIFICATION	1.554194789205079E-6	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999984458052107	WITHOUT_CLASSIFICATION	1.554194789205079E-6	IMPLEMENTATION
//RubyModule module = context.getRubyClass();	WITHOUT_CLASSIFICATION	0.9996541321541246	WITHOUT_CLASSIFICATION	3.458678458754061E-4	IMPLEMENTATION
// For 'b.foo'	WITHOUT_CLASSIFICATION	0.9993908670410668	WITHOUT_CLASSIFICATION	6.091329589331439E-4	IMPLEMENTATION
// We define an actual list to get around bug in java integration (1387115)	WITHOUT_CLASSIFICATION	0.9999994669539929	WITHOUT_CLASSIFICATION	5.330460071568821E-7	IMPLEMENTATION
// something in here is used to build up ruby stack trace...	WITHOUT_CLASSIFICATION	0.9999949900319615	WITHOUT_CLASSIFICATION	5.009968038519026E-6	IMPLEMENTATION
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999617556446754	WITHOUT_CLASSIFICATION	3.824435532464711E-5	IMPLEMENTATION
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999617556446754	WITHOUT_CLASSIFICATION	3.824435532464711E-5	IMPLEMENTATION
// do nothing, allow loop to retry	WITHOUT_CLASSIFICATION	0.9998795910038799	WITHOUT_CLASSIFICATION	1.2040899612014446E-4	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9996987334540551	WITHOUT_CLASSIFICATION	3.0126654594479286E-4	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999757395013747	WITHOUT_CLASSIFICATION	2.4260498625329907E-5	IMPLEMENTATION
// never visited, should be fine	WITHOUT_CLASSIFICATION	0.9994645056388943	WITHOUT_CLASSIFICATION	5.354943611057606E-4	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999984458052107	WITHOUT_CLASSIFICATION	1.554194789205079E-6	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999048817225495	WITHOUT_CLASSIFICATION	9.511827745049707E-5	IMPLEMENTATION
// If we have more than one argument, then make sure the array is not ObjectSpaced.	WITHOUT_CLASSIFICATION	0.9884198730980456	WITHOUT_CLASSIFICATION	0.011580126901954386	IMPLEMENTATION
// Only in ruby 1.9 methods	WITHOUT_CLASSIFICATION	0.9999942458685869	WITHOUT_CLASSIFICATION	5.754131413075564E-6	IMPLEMENTATION
// Bind 'normal' parameter values to the local scope for this method.	WITHOUT_CLASSIFICATION	0.9999992854491612	WITHOUT_CLASSIFICATION	7.145508388106183E-7	IMPLEMENTATION
// no arg grouping, just use bulk assignment methods	WITHOUT_CLASSIFICATION	0.9997324650632187	WITHOUT_CLASSIFICATION	2.6753493678138124E-4	IMPLEMENTATION
// optArgs and restArgs require more work, so isolate them and ArrayList creation here	WITHOUT_CLASSIFICATION	0.996787297590372	WITHOUT_CLASSIFICATION	0.0032127024096280563	IMPLEMENTATION
//        arity.checkArity(runtime, argsLength);	WITHOUT_CLASSIFICATION	0.999909015173615	WITHOUT_CLASSIFICATION	9.098482638499437E-5	IMPLEMENTATION
// no more values to stick in rest arg	WITHOUT_CLASSIFICATION	0.9998974014790527	WITHOUT_CLASSIFICATION	1.0259852094731512E-4	IMPLEMENTATION
// set argv from main's args	WITHOUT_CLASSIFICATION	0.9999910204020745	WITHOUT_CLASSIFICATION	8.979597925506721E-6	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.9997466077836586	WITHOUT_CLASSIFICATION	2.5339221634136547E-4	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999979791451998	WITHOUT_CLASSIFICATION	2.020854800242873E-6	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999984458052107	WITHOUT_CLASSIFICATION	1.554194789205079E-6	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999048817225495	WITHOUT_CLASSIFICATION	9.511827745049707E-5	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9978676436354982	WITHOUT_CLASSIFICATION	0.0021323563645017224	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9978676436354982	WITHOUT_CLASSIFICATION	0.0021323563645017224	IMPLEMENTATION
// block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] //assert argsNode != null : "argsNode is not null";	WITHOUT_CLASSIFICATION	0.9960229704518221	WITHOUT_CLASSIFICATION	0.003977029548177934	IMPLEMENTATION
// assign given optional arguments to their variables	WITHOUT_CLASSIFICATION	0.9999775655185679	WITHOUT_CLASSIFICATION	2.2434481432125982E-5	IMPLEMENTATION
// in-frame EvalState should already have receiver set as self, continue to use it	WITHOUT_CLASSIFICATION	0.9996947554895625	WITHOUT_CLASSIFICATION	3.052445104374944E-4	IMPLEMENTATION
// assign the default values, adding to the end of allArgs	WITHOUT_CLASSIFICATION	0.9998619153796922	WITHOUT_CLASSIFICATION	1.3808462030787003E-4	IMPLEMENTATION
// Make sure the appropriate scope has proper size. See JRUBY-2046.	WITHOUT_CLASSIFICATION	0.9999832006755675	WITHOUT_CLASSIFICATION	1.679932443259158E-5	IMPLEMENTATION
// Experimental class reification support, to create real Java classes // for Ruby classes after the first opening	WITHOUT_CLASSIFICATION	0.9999933074596055	WITHOUT_CLASSIFICATION	6.692540394470893E-6	IMPLEMENTATION
// This should never happen past parse, but just bulletproof this just in case	WITHOUT_CLASSIFICATION	0.9999902936018251	WITHOUT_CLASSIFICATION	9.706398174844275E-6	IMPLEMENTATION
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9999595124460562	WITHOUT_CLASSIFICATION	4.048755394384606E-5	IMPLEMENTATION
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999881339245767	WITHOUT_CLASSIFICATION	1.1866075423188814E-5	IMPLEMENTATION
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999908453076927	WITHOUT_CLASSIFICATION	9.154692307454083E-6	IMPLEMENTATION
// never visited, should be ok	WITHOUT_CLASSIFICATION	0.9989890280384842	WITHOUT_CLASSIFICATION	0.0010109719615158377	IMPLEMENTATION
// If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil	WITHOUT_CLASSIFICATION	0.9994484268224575	WITHOUT_CLASSIFICATION	5.515731775425308E-4	IMPLEMENTATION
// JRUBY-530 until case	WITHOUT_CLASSIFICATION	0.9999626993329243	WITHOUT_CLASSIFICATION	3.730066707581887E-5	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.9998409149022988	WITHOUT_CLASSIFICATION	1.5908509770116007E-4	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999984458052107	WITHOUT_CLASSIFICATION	1.554194789205079E-6	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9996987334540551	WITHOUT_CLASSIFICATION	3.0126654594479286E-4	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999757395013747	WITHOUT_CLASSIFICATION	2.4260498625329907E-5	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999757395013747	WITHOUT_CLASSIFICATION	2.4260498625329907E-5	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999984458052107	WITHOUT_CLASSIFICATION	1.554194789205079E-6	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999048817225495	WITHOUT_CLASSIFICATION	9.511827745049707E-5	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999048817225495	WITHOUT_CLASSIFICATION	9.511827745049707E-5	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9978676436354982	WITHOUT_CLASSIFICATION	0.0021323563645017224	IMPLEMENTATION
// Empirical Observations: // null -> Some arity // argsNode == this.argsNode then check for arity changes // newline(splatnode) -> argspushnode	WITHOUT_CLASSIFICATION	0.9999854432923748	WITHOUT_CLASSIFICATION	1.455670762525614E-5	IMPLEMENTATION
//assert !(value instanceof RubyArray)  : "Not an array";	WITHOUT_CLASSIFICATION	0.9948511770079662	WITHOUT_CLASSIFICATION	0.005148822992033847	IMPLEMENTATION
// Serialization killed our dynamic scope.  We can just create an empty one // since serialization cannot serialize an eval (which is the only thing // which is capable of having a non-empty dynamic scope).	WITHOUT_CLASSIFICATION	0.9999999977186897	WITHOUT_CLASSIFICATION	2.281310306334347E-9	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9996106071777439	WITHOUT_CLASSIFICATION	3.8939282225608236E-4	IMPLEMENTATION
// We could probably also detect if LHS value came out of cache and avoid some of this	WITHOUT_CLASSIFICATION	0.9997454440943851	WITHOUT_CLASSIFICATION	2.545559056149192E-4	IMPLEMENTATION
//        assert thenBody != null : "thenBody is not null"; //        assert elseBody != null : "elseBody is not null";	WITHOUT_CLASSIFICATION	0.9934544469182718	WITHOUT_CLASSIFICATION	0.006545553081728219	IMPLEMENTATION
// add in reverse order	WITHOUT_CLASSIFICATION	0.9999663126674878	WITHOUT_CLASSIFICATION	3.368733251222807E-5	IMPLEMENTATION
// in order to make pragma's noops we set location to a special value	WITHOUT_CLASSIFICATION	0.9999942333172955	WITHOUT_CLASSIFICATION	5.766682704434682E-6	IMPLEMENTATION
// ignore compiler pragmas	WITHOUT_CLASSIFICATION	0.9999656238606589	WITHOUT_CLASSIFICATION	3.4376139341172346E-5	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9996987334540551	WITHOUT_CLASSIFICATION	3.0126654594479286E-4	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999757395013747	WITHOUT_CLASSIFICATION	2.4260498625329907E-5	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999757395013747	WITHOUT_CLASSIFICATION	2.4260498625329907E-5	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999984458052107	WITHOUT_CLASSIFICATION	1.554194789205079E-6	IMPLEMENTATION
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9999595124460562	WITHOUT_CLASSIFICATION	4.048755394384606E-5	IMPLEMENTATION
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999908453076927	WITHOUT_CLASSIFICATION	9.154692307454083E-6	IMPLEMENTATION
// No actual test, so do 'when' if when expression is not nil	WITHOUT_CLASSIFICATION	0.999960864737405	WITHOUT_CLASSIFICATION	3.9135262595071736E-5	IMPLEMENTATION
// save entering the try if there's nothing to ensure	WITHOUT_CLASSIFICATION	0.9999958406299339	WITHOUT_CLASSIFICATION	4.159370066147027E-6	IMPLEMENTATION
// For 'foo'	WITHOUT_CLASSIFICATION	0.9993921506238703	WITHOUT_CLASSIFICATION	6.078493761295973E-4	IMPLEMENTATION
// For 'foo'	WITHOUT_CLASSIFICATION	0.9993921506238703	WITHOUT_CLASSIFICATION	6.078493761295973E-4	IMPLEMENTATION
// admittedly inefficient	WITHOUT_CLASSIFICATION	0.9999441559003632	WITHOUT_CLASSIFICATION	5.5844099636791055E-5	IMPLEMENTATION
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999585891295203	WITHOUT_CLASSIFICATION	4.141087047966806E-5	IMPLEMENTATION
// What static scoping relationship exists when it comes into being.	WITHOUT_CLASSIFICATION	0.9980475785886498	WITHOUT_CLASSIFICATION	0.0019524214113502275	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999676068277069	WITHOUT_CLASSIFICATION	3.239317229307882E-5	IMPLEMENTATION
// just rethrow	WITHOUT_CLASSIFICATION	0.9999140087109727	WITHOUT_CLASSIFICATION	8.599128902728485E-5	IMPLEMENTATION
// just rethrow	WITHOUT_CLASSIFICATION	0.9999140087109727	WITHOUT_CLASSIFICATION	8.599128902728485E-5	IMPLEMENTATION
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9998403426073268	WITHOUT_CLASSIFICATION	1.5965739267334475E-4	IMPLEMENTATION
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9998403426073268	WITHOUT_CLASSIFICATION	1.5965739267334475E-4	IMPLEMENTATION
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.999984318442083	WITHOUT_CLASSIFICATION	1.5681557917019493E-5	IMPLEMENTATION
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.999984318442083	WITHOUT_CLASSIFICATION	1.5681557917019493E-5	IMPLEMENTATION
// Execute rescue block	WITHOUT_CLASSIFICATION	0.9997583605269085	WITHOUT_CLASSIFICATION	2.4163947309146448E-4	IMPLEMENTATION
// If no exception is thrown execute else block	WITHOUT_CLASSIFICATION	0.9999943833769859	WITHOUT_CLASSIFICATION	5.616623014121311E-6	IMPLEMENTATION
// index of variable for this arg	WITHOUT_CLASSIFICATION	0.9975016283591589	WITHOUT_CLASSIFICATION	0.0024983716408411025	IMPLEMENTATION
// only a marker interface	WITHOUT_CLASSIFICATION	0.9999899069790775	WITHOUT_CLASSIFICATION	1.0093020922424991E-5	IMPLEMENTATION
// don't attempt to coerce to array, just wrap and return	WITHOUT_CLASSIFICATION	0.9999843542345096	WITHOUT_CLASSIFICATION	1.5645765490469627E-5	IMPLEMENTATION
// pragmas	WITHOUT_CLASSIFICATION	0.9999901088813848	WITHOUT_CLASSIFICATION	9.891118615195496E-6	IMPLEMENTATION
// The method also needs a scope, do both	WITHOUT_CLASSIFICATION	0.9996392696624066	WITHOUT_CLASSIFICATION	3.6073033759337217E-4	IMPLEMENTATION
// We're doing normal framed compilation or the method needs a frame	WITHOUT_CLASSIFICATION	0.9997847651155484	WITHOUT_CLASSIFICATION	2.1523488445163231E-4	IMPLEMENTATION
// The method doesn't need a scope or static scope; frame only	WITHOUT_CLASSIFICATION	0.9992544269150732	WITHOUT_CLASSIFICATION	7.45573084926779E-4	IMPLEMENTATION
// The method doesn't need a scope, but has static scope needs; use a dummy scope	WITHOUT_CLASSIFICATION	0.9994345424856653	WITHOUT_CLASSIFICATION	5.654575143347217E-4	IMPLEMENTATION
// Proc.new needs the caller's block to instantiate a proc	WITHOUT_CLASSIFICATION	0.9989701986849223	WITHOUT_CLASSIFICATION	0.0010298013150776629	IMPLEMENTATION
// check for Proc.new, an especially magic method	WITHOUT_CLASSIFICATION	0.9998338461290102	WITHOUT_CLASSIFICATION	1.6615387098986266E-4	IMPLEMENTATION
// long, slow way causes disabling	WITHOUT_CLASSIFICATION	0.9999300667914864	WITHOUT_CLASSIFICATION	6.993320851357191E-5	IMPLEMENTATION
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999250327864271	WITHOUT_CLASSIFICATION	7.496721357297598E-5	IMPLEMENTATION
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999250327864271	WITHOUT_CLASSIFICATION	7.496721357297598E-5	IMPLEMENTATION
// long, slow way causes disabling for defined	WITHOUT_CLASSIFICATION	0.9999713186918655	WITHOUT_CLASSIFICATION	2.868130813439716E-5	IMPLEMENTATION
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.999667704831047	WITHOUT_CLASSIFICATION	3.3229516895293034E-4	IMPLEMENTATION
// Because Regexp#=== sets backref, we have to make this backref-aware	WITHOUT_CLASSIFICATION	0.9986261456271232	WITHOUT_CLASSIFICATION	0.0013738543728768655	IMPLEMENTATION
// encountered a node we don't recognize, set everything to true to disable optz	WITHOUT_CLASSIFICATION	0.9998979413490144	WITHOUT_CLASSIFICATION	1.0205865098560497E-4	IMPLEMENTATION
// only arrays that are "lightweight" are being used as args arrays	WITHOUT_CLASSIFICATION	0.9999972449325233	WITHOUT_CLASSIFICATION	2.755067476773227E-6	IMPLEMENTATION
// otherwise, it's a literal array	WITHOUT_CLASSIFICATION	0.9999420589753675	WITHOUT_CLASSIFICATION	5.794102463252801E-5	IMPLEMENTATION
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9998523597786403	WITHOUT_CLASSIFICATION	1.476402213596989E-4	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999698264644975	WITHOUT_CLASSIFICATION	3.0173535502491407E-5	IMPLEMENTATION
// compile first node as non-expr and then second node	WITHOUT_CLASSIFICATION	0.9999928873358354	WITHOUT_CLASSIFICATION	7.112664164536446E-6	IMPLEMENTATION
// last node, either !instanceof WhenNode or null, is the else	WITHOUT_CLASSIFICATION	0.9999982481372518	WITHOUT_CLASSIFICATION	1.7518627481881155E-6	IMPLEMENTATION
// compile first node only	WITHOUT_CLASSIFICATION	0.9999767087820703	WITHOUT_CLASSIFICATION	2.329121792967054E-5	IMPLEMENTATION
// splatted when, can't do it yet	WITHOUT_CLASSIFICATION	0.9993284727679242	WITHOUT_CLASSIFICATION	6.715272320756998E-4	IMPLEMENTATION
// if __send__ with a literal symbol, compile it as a direct fcall	WITHOUT_CLASSIFICATION	0.9999805152338614	WITHOUT_CLASSIFICATION	1.9484766138540947E-5	IMPLEMENTATION
// NOTE: Currently this optimization is limited to the following situations: // * All expressions must be int-ranged literal fixnums // It also still emits the code for the "safe" when logic, which is rather // wasteful (since it essentially doubles each code body). As such it is // normally disabled, but it serves as an example of how this optimization // could be done. Ideally, it should be combined with the when processing // to improve code reuse before it's generally available.	WITHOUT_CLASSIFICATION	0.999801898229514	WITHOUT_CLASSIFICATION	1.9810177048585403E-4	IMPLEMENTATION
// aggregate when nodes into a list, unfortunately, this is no	WITHOUT_CLASSIFICATION	0.9999944463331298	WITHOUT_CLASSIFICATION	5.553666870167038E-6	IMPLEMENTATION
// one arg but it's an array, treat it as a proper array	WITHOUT_CLASSIFICATION	0.9997806997421551	WITHOUT_CLASSIFICATION	2.1930025784497447E-4	IMPLEMENTATION
// can't do it	WITHOUT_CLASSIFICATION	0.9997572293696427	WITHOUT_CLASSIFICATION	2.4277063035723807E-4	IMPLEMENTATION
// otherwise, use normal args compiler	WITHOUT_CLASSIFICATION	0.9998499931503995	WITHOUT_CLASSIFICATION	1.5000684960048317E-4	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999932022101715	WITHOUT_CLASSIFICATION	6.797789828443779E-6	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999932022101715	WITHOUT_CLASSIFICATION	6.797789828443779E-6	IMPLEMENTATION
// these are all simple cases that don't require the heavier defined logic	WITHOUT_CLASSIFICATION	0.9997928008986913	WITHOUT_CLASSIFICATION	2.0719910130878564E-4	IMPLEMENTATION
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9997254911986895	WITHOUT_CLASSIFICATION	2.7450880131056003E-4	IMPLEMENTATION
//[]	WITHOUT_CLASSIFICATION	0.9999696503844563	WITHOUT_CLASSIFICATION	3.034961554371392E-5	IMPLEMENTATION
//[]	WITHOUT_CLASSIFICATION	0.9999696503844563	WITHOUT_CLASSIFICATION	3.034961554371392E-5	IMPLEMENTATION
//          context.swapValues(); //context.consumeCurrentValue();	WITHOUT_CLASSIFICATION	0.999909015173615	WITHOUT_CLASSIFICATION	9.098482638499437E-5	IMPLEMENTATION
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[] //[self] //[RubyClass] //[RubyClass, RubyClass]	WITHOUT_CLASSIFICATION	0.9997254911986895	WITHOUT_CLASSIFICATION	2.7450880131056003E-4	IMPLEMENTATION
//[RubyClass]	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9997254911986895	WITHOUT_CLASSIFICATION	2.7450880131056003E-4	IMPLEMENTATION
// if root of method is rescue, compile as a light rescue	WITHOUT_CLASSIFICATION	0.9999968445121022	WITHOUT_CLASSIFICATION	3.1554878978633707E-6	IMPLEMENTATION
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999944521729522	WITHOUT_CLASSIFICATION	5.547827047751593E-6	IMPLEMENTATION
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999944521729522	WITHOUT_CLASSIFICATION	5.547827047751593E-6	IMPLEMENTATION
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.999986658312961	WITHOUT_CLASSIFICATION	1.3341687039083224E-5	IMPLEMENTATION
// if root of method is rescue, compile as light rescue	WITHOUT_CLASSIFICATION	0.9999956193347386	WITHOUT_CLASSIFICATION	4.380665261421356E-6	IMPLEMENTATION
// invoke run with threadcontext and topself	WITHOUT_CLASSIFICATION	0.999881982683067	WITHOUT_CLASSIFICATION	1.1801731693290915E-4	IMPLEMENTATION
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9997254911986895	WITHOUT_CLASSIFICATION	2.7450880131056003E-4	IMPLEMENTATION
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9997254911986895	WITHOUT_CLASSIFICATION	2.7450880131056003E-4	IMPLEMENTATION
//[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9997254911986895	WITHOUT_CLASSIFICATION	2.7450880131056003E-4	IMPLEMENTATION
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9997254911986895	WITHOUT_CLASSIFICATION	2.7450880131056003E-4	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9996214305621052	WITHOUT_CLASSIFICATION	3.785694378947696E-4	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999662369769985	WITHOUT_CLASSIFICATION	3.376302300148523E-5	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999662369769985	WITHOUT_CLASSIFICATION	3.376302300148523E-5	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9997245352204014	WITHOUT_CLASSIFICATION	2.7546477959865853E-4	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9997245352204014	WITHOUT_CLASSIFICATION	2.7546477959865853E-4	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9997245352204014	WITHOUT_CLASSIFICATION	2.7546477959865853E-4	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999662369769985	WITHOUT_CLASSIFICATION	3.376302300148523E-5	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999662369769985	WITHOUT_CLASSIFICATION	3.376302300148523E-5	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9996214305621052	WITHOUT_CLASSIFICATION	3.785694378947696E-4	IMPLEMENTATION
// force heap-scope behavior, since it uses parent's scope	WITHOUT_CLASSIFICATION	0.9999474746512277	WITHOUT_CLASSIFICATION	5.252534877227853E-5	IMPLEMENTATION
// always false or nil	WITHOUT_CLASSIFICATION	0.9999655719842117	WITHOUT_CLASSIFICATION	3.442801578831463E-5	IMPLEMENTATION
// optimizations if we know ahead of time it will always be true or false	WITHOUT_CLASSIFICATION	0.9999808108466683	WITHOUT_CLASSIFICATION	1.918915333167713E-5	IMPLEMENTATION
// normal	WITHOUT_CLASSIFICATION	0.9999860918790254	WITHOUT_CLASSIFICATION	1.3908120974593591E-5	IMPLEMENTATION
// compile condition as non-expr and just compile "then" body	WITHOUT_CLASSIFICATION	0.9999991530580359	WITHOUT_CLASSIFICATION	8.469419640963646E-7	IMPLEMENTATION
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9994264940633197	WITHOUT_CLASSIFICATION	5.735059366802431E-4	IMPLEMENTATION
// just push nil for pragmas	WITHOUT_CLASSIFICATION	0.9999922167490203	WITHOUT_CLASSIFICATION	7.783250979776782E-6	IMPLEMENTATION
// "assignment" means the value is already on the stack	WITHOUT_CLASSIFICATION	0.9999969188643643	WITHOUT_CLASSIFICATION	3.0811356357493622E-6	IMPLEMENTATION
// compile first node only	WITHOUT_CLASSIFICATION	0.9999767087820703	WITHOUT_CLASSIFICATION	2.329121792967054E-5	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999662369769985	WITHOUT_CLASSIFICATION	3.376302300148523E-5	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999662369769985	WITHOUT_CLASSIFICATION	3.376302300148523E-5	IMPLEMENTATION
// eval new value, call operator on old value, and assign	WITHOUT_CLASSIFICATION	0.9998395697319583	WITHOUT_CLASSIFICATION	1.6043026804166938E-4	IMPLEMENTATION
// try optz version	WITHOUT_CLASSIFICATION	0.9999179665773721	WITHOUT_CLASSIFICATION	8.203342262788736E-5	IMPLEMENTATION
// sizes must match	WITHOUT_CLASSIFICATION	0.9996580238149044	WITHOUT_CLASSIFICATION	3.4197618509567817E-4	IMPLEMENTATION
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999958453347422	WITHOUT_CLASSIFICATION	4.154665257838385E-6	IMPLEMENTATION
// normal items at the "head" of the masgn	WITHOUT_CLASSIFICATION	0.9997525362096822	WITHOUT_CLASSIFICATION	2.4746379031785864E-4	IMPLEMENTATION
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9995808232601799	WITHOUT_CLASSIFICATION	4.1917673982007846E-4	IMPLEMENTATION
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9998441410328415	WITHOUT_CLASSIFICATION	1.5585896715846804E-4	IMPLEMENTATION
// only supports simple parallel assignment of up to 10 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.999999565566797	WITHOUT_CLASSIFICATION	4.3443320302796006E-7	IMPLEMENTATION
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999053357920344	WITHOUT_CLASSIFICATION	9.466420796558551E-5	IMPLEMENTATION
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999936922460129	WITHOUT_CLASSIFICATION	6.307753987162115E-6	IMPLEMENTATION
//RedoNode redoNode = (RedoNode)node;	WITHOUT_CLASSIFICATION	0.9996846315177286	WITHOUT_CLASSIFICATION	3.153684822714524E-4	IMPLEMENTATION
// done processing args	WITHOUT_CLASSIFICATION	0.9999747040405061	WITHOUT_CLASSIFICATION	2.5295959493869957E-5	IMPLEMENTATION
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999768838153489	WITHOUT_CLASSIFICATION	2.31161846511355E-5	IMPLEMENTATION
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.999914035620613	WITHOUT_CLASSIFICATION	8.596437938701592E-5	IMPLEMENTATION
// if arity 1, just compile the one element to save us the array cost	WITHOUT_CLASSIFICATION	0.9999967699158694	WITHOUT_CLASSIFICATION	3.2300841305615642E-6	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.9999901088813848	WITHOUT_CLASSIFICATION	9.891118615195496E-6	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.9999901088813848	WITHOUT_CLASSIFICATION	9.891118615195496E-6	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.9999901088813848	WITHOUT_CLASSIFICATION	9.891118615195496E-6	IMPLEMENTATION
// compile into array	WITHOUT_CLASSIFICATION	0.9999843705036723	WITHOUT_CLASSIFICATION	1.562949632769876E-5	IMPLEMENTATION
// compile first node as non-expr and compile second node	WITHOUT_CLASSIFICATION	0.9999890770385622	WITHOUT_CLASSIFICATION	1.0922961437726714E-5	IMPLEMENTATION
// check if it's an immediate, and don't outline	WITHOUT_CLASSIFICATION	0.9999749597073859	WITHOUT_CLASSIFICATION	2.5040292614072777E-5	IMPLEMENTATION
// condition is always true, just compile it and not body	WITHOUT_CLASSIFICATION	0.9999231341913051	WITHOUT_CLASSIFICATION	7.686580869491231E-5	IMPLEMENTATION
// force static scope to claim restarg at 0, so it only implements the [] version of __file__	WITHOUT_CLASSIFICATION	0.9998825202616437	WITHOUT_CLASSIFICATION	1.1747973835627635E-4	IMPLEMENTATION
// create method for toplevel of script	WITHOUT_CLASSIFICATION	0.9999596114482882	WITHOUT_CLASSIFICATION	4.038855171186426E-5	IMPLEMENTATION
// it's a multiple-statement body, iterate over all elements in turn and chain if it get too long	WITHOUT_CLASSIFICATION	0.9999999314460821	WITHOUT_CLASSIFICATION	6.855391792722988E-8	IMPLEMENTATION
// send it along as arity-specific, we don't need the array	WITHOUT_CLASSIFICATION	0.999886455497035	WITHOUT_CLASSIFICATION	1.1354450296494752E-4	IMPLEMENTATION
// single-statement body, just compile it	WITHOUT_CLASSIFICATION	0.9999493187284663	WITHOUT_CLASSIFICATION	5.06812715336941E-5	IMPLEMENTATION
// leave as a normal array	WITHOUT_CLASSIFICATION	0.9999919630771574	WITHOUT_CLASSIFICATION	8.03692284251032E-6	IMPLEMENTATION
// This method has JITed already or has been abandoned. Bail out.	WITHOUT_CLASSIFICATION	0.9995273178728131	WITHOUT_CLASSIFICATION	4.7268212718680887E-4	IMPLEMENTATION
// The cache is full. Abandon JIT for this method and bail out.	WITHOUT_CLASSIFICATION	0.9986008151494999	WITHOUT_CLASSIFICATION	0.0013991848505000384	IMPLEMENTATION
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.999986658312961	WITHOUT_CLASSIFICATION	1.3341687039083224E-5	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999662369769985	WITHOUT_CLASSIFICATION	3.376302300148523E-5	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999662369769985	WITHOUT_CLASSIFICATION	3.376302300148523E-5	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9996214305621052	WITHOUT_CLASSIFICATION	3.785694378947696E-4	IMPLEMENTATION
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9994264940633197	WITHOUT_CLASSIFICATION	5.735059366802431E-4	IMPLEMENTATION
// try optz version	WITHOUT_CLASSIFICATION	0.9999179665773721	WITHOUT_CLASSIFICATION	8.203342262788736E-5	IMPLEMENTATION
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999958453347422	WITHOUT_CLASSIFICATION	4.154665257838385E-6	IMPLEMENTATION
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9995808232601799	WITHOUT_CLASSIFICATION	4.1917673982007846E-4	IMPLEMENTATION
// sizes must match	WITHOUT_CLASSIFICATION	0.9996580238149044	WITHOUT_CLASSIFICATION	3.4197618509567817E-4	IMPLEMENTATION
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9998441410328415	WITHOUT_CLASSIFICATION	1.5585896715846804E-4	IMPLEMENTATION
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999936922460129	WITHOUT_CLASSIFICATION	6.307753987162115E-6	IMPLEMENTATION
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999053357920344	WITHOUT_CLASSIFICATION	9.466420796558551E-5	IMPLEMENTATION
// done processing args	WITHOUT_CLASSIFICATION	0.9999747040405061	WITHOUT_CLASSIFICATION	2.5295959493869957E-5	IMPLEMENTATION
// Check if the method has been explicitly excluded	WITHOUT_CLASSIFICATION	0.9998823096716751	WITHOUT_CLASSIFICATION	1.1769032832489617E-4	IMPLEMENTATION
// class could not be found nor generated; give up on JIT and bail out	WITHOUT_CLASSIFICATION	0.9976700487415103	WITHOUT_CLASSIFICATION	0.00232995125848958	IMPLEMENTATION
// successfully got back a jitted method	WITHOUT_CLASSIFICATION	0.9998037364923553	WITHOUT_CLASSIFICATION	1.962635076447212E-4	IMPLEMENTATION
// finally, grab the script	WITHOUT_CLASSIFICATION	0.999967089104374	WITHOUT_CLASSIFICATION	3.291089562600042E-5	IMPLEMENTATION
// logEvery n methods based on configuration	WITHOUT_CLASSIFICATION	0.9998776649607747	WITHOUT_CLASSIFICATION	1.2233503922532687E-4	IMPLEMENTATION
// Time the compilation	WITHOUT_CLASSIFICATION	0.9999764498529692	WITHOUT_CLASSIFICATION	2.355014703070385E-5	IMPLEMENTATION
// we have a body, do a full-on method	WITHOUT_CLASSIFICATION	0.9998987932718713	WITHOUT_CLASSIFICATION	1.012067281286849E-4	IMPLEMENTATION
// If we don't have a body, check for required or opt args // if opt args, they could have side effects // if required args, need to raise errors if too few args passed // otherwise, method does nothing, make it a nop	WITHOUT_CLASSIFICATION	0.998948964715424	WITHOUT_CLASSIFICATION	0.0010510352845759592	IMPLEMENTATION
// if we haven't already decided on a do-nothing call	WITHOUT_CLASSIFICATION	0.9999302252475518	WITHOUT_CLASSIFICATION	6.977475244823274E-5	IMPLEMENTATION
// only supports simple parallel assignment of up to 4 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999996399148179	WITHOUT_CLASSIFICATION	3.6008518210374193E-7	IMPLEMENTATION
// normal items at the front or back of the masgn	WITHOUT_CLASSIFICATION	0.9996889510508168	WITHOUT_CLASSIFICATION	3.110489491831202E-4	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999591300442517	WITHOUT_CLASSIFICATION	4.086995574823555E-5	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999690127023939	WITHOUT_CLASSIFICATION	3.098729760613052E-5	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999981335086356	WITHOUT_CLASSIFICATION	1.8664913643094439E-6	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999979142556389	WITHOUT_CLASSIFICATION	2.085744361180053E-6	IMPLEMENTATION
// end of variable scope	WITHOUT_CLASSIFICATION	0.999857347277843	WITHOUT_CLASSIFICATION	1.4265272215702274E-4	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999495981693003	WITHOUT_CLASSIFICATION	5.040183069967838E-5	IMPLEMENTATION
// Define the annotation for the method	WITHOUT_CLASSIFICATION	0.9998903634044893	WITHOUT_CLASSIFICATION	1.0963659551070786E-4	IMPLEMENTATION
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999864390771546	WITHOUT_CLASSIFICATION	1.3560922845448158E-5	IMPLEMENTATION
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999479087994468	WITHOUT_CLASSIFICATION	5.2091200553217344E-5	IMPLEMENTATION
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999818022438411	WITHOUT_CLASSIFICATION	1.819775615886738E-5	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999828750039442	WITHOUT_CLASSIFICATION	1.712499605583419E-5	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999828750039442	WITHOUT_CLASSIFICATION	1.712499605583419E-5	IMPLEMENTATION
// value is already on stack, save it for later	WITHOUT_CLASSIFICATION	0.9999844412913426	WITHOUT_CLASSIFICATION	1.5558708657372007E-5	IMPLEMENTATION
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.997055676387827	WITHOUT_CLASSIFICATION	0.0029443236121730037	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999696503844563	WITHOUT_CLASSIFICATION	3.034961554371392E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999696503844563	WITHOUT_CLASSIFICATION	3.034961554371392E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999696503844563	WITHOUT_CLASSIFICATION	3.034961554371392E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999696503844563	WITHOUT_CLASSIFICATION	3.034961554371392E-5	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999696503844563	WITHOUT_CLASSIFICATION	3.034961554371392E-5	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999696503844563	WITHOUT_CLASSIFICATION	3.034961554371392E-5	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999696503844563	WITHOUT_CLASSIFICATION	3.034961554371392E-5	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.9999696503844563	WITHOUT_CLASSIFICATION	3.034961554371392E-5	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.9999696503844563	WITHOUT_CLASSIFICATION	3.034961554371392E-5	IMPLEMENTATION
/*arg2*/	WITHOUT_CLASSIFICATION	0.9999696503844563	WITHOUT_CLASSIFICATION	3.034961554371392E-5	IMPLEMENTATION
/*args*/	WITHOUT_CLASSIFICATION	0.9999696503844563	WITHOUT_CLASSIFICATION	3.034961554371392E-5	IMPLEMENTATION
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.997055676387827	WITHOUT_CLASSIFICATION	0.0029443236121730037	IMPLEMENTATION
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9998930111995182	WITHOUT_CLASSIFICATION	1.0698880048179051E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999696503844563	WITHOUT_CLASSIFICATION	3.034961554371392E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999696503844563	WITHOUT_CLASSIFICATION	3.034961554371392E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999696503844563	WITHOUT_CLASSIFICATION	3.034961554371392E-5	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999696503844563	WITHOUT_CLASSIFICATION	3.034961554371392E-5	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999696503844563	WITHOUT_CLASSIFICATION	3.034961554371392E-5	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.9999696503844563	WITHOUT_CLASSIFICATION	3.034961554371392E-5	IMPLEMENTATION
/*args*/	WITHOUT_CLASSIFICATION	0.9999696503844563	WITHOUT_CLASSIFICATION	3.034961554371392E-5	IMPLEMENTATION
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9998222604384661	WITHOUT_CLASSIFICATION	1.7773956153390024E-4	IMPLEMENTATION
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9998222604384661	WITHOUT_CLASSIFICATION	1.7773956153390024E-4	IMPLEMENTATION
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999783847594779	WITHOUT_CLASSIFICATION	2.1615240522204725E-5	IMPLEMENTATION
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999783847594779	WITHOUT_CLASSIFICATION	2.1615240522204725E-5	IMPLEMENTATION
// invoke	WITHOUT_CLASSIFICATION	0.9999907554767036	WITHOUT_CLASSIFICATION	9.244523296439775E-6	IMPLEMENTATION
// invoke	WITHOUT_CLASSIFICATION	0.9999907554767036	WITHOUT_CLASSIFICATION	9.244523296439775E-6	IMPLEMENTATION
// check if it's true, ending if so	WITHOUT_CLASSIFICATION	0.9999661104591598	WITHOUT_CLASSIFICATION	3.3889540840187035E-5	IMPLEMENTATION
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9995947347111357	WITHOUT_CLASSIFICATION	4.0526528886427883E-4	IMPLEMENTATION
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9995947347111357	WITHOUT_CLASSIFICATION	4.0526528886427883E-4	IMPLEMENTATION
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9998857235988716	WITHOUT_CLASSIFICATION	1.1427640112836097E-4	IMPLEMENTATION
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9998857235988716	WITHOUT_CLASSIFICATION	1.1427640112836097E-4	IMPLEMENTATION
// eval value for assignment	WITHOUT_CLASSIFICATION	0.9999919016713857	WITHOUT_CLASSIFICATION	8.098328614336352E-6	IMPLEMENTATION
// call site	WITHOUT_CLASSIFICATION	0.9994826532626266	WITHOUT_CLASSIFICATION	5.173467373732931E-4	IMPLEMENTATION
// call site	WITHOUT_CLASSIFICATION	0.9994826532626266	WITHOUT_CLASSIFICATION	5.173467373732931E-4	IMPLEMENTATION
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.999938263924227	WITHOUT_CLASSIFICATION	6.173607577290976E-5	IMPLEMENTATION
// check if it's true, ending if not	WITHOUT_CLASSIFICATION	0.9979844335869817	WITHOUT_CLASSIFICATION	0.0020155664130182367	IMPLEMENTATION
// eval value and save it	WITHOUT_CLASSIFICATION	0.9999888480848045	WITHOUT_CLASSIFICATION	1.1151915195448585E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999696503844563	WITHOUT_CLASSIFICATION	3.034961554371392E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999696503844563	WITHOUT_CLASSIFICATION	3.034961554371392E-5	IMPLEMENTATION
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.999938263924227	WITHOUT_CLASSIFICATION	6.173607577290976E-5	IMPLEMENTATION
// receiver, args, result, value	WITHOUT_CLASSIFICATION	0.9999759936937399	WITHOUT_CLASSIFICATION	2.400630626004686E-5	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9996612927501303	WITHOUT_CLASSIFICATION	3.3870724986971226E-4	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9996612927501303	WITHOUT_CLASSIFICATION	3.3870724986971226E-4	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9996612927501303	WITHOUT_CLASSIFICATION	3.3870724986971226E-4	IMPLEMENTATION
// super uses current block if none given	WITHOUT_CLASSIFICATION	0.9967688364323231	WITHOUT_CLASSIFICATION	0.003231163567677011	IMPLEMENTATION
// args	WITHOUT_CLASSIFICATION	0.9999922759952998	WITHOUT_CLASSIFICATION	7.724004700141517E-6	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.999952741777263	WITHOUT_CLASSIFICATION	4.725822273687297E-5	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.999952741777263	WITHOUT_CLASSIFICATION	4.725822273687297E-5	IMPLEMENTATION
// no args, no block	WITHOUT_CLASSIFICATION	0.9991843350144828	WITHOUT_CLASSIFICATION	8.15664985517285E-4	IMPLEMENTATION
// no args, with block	WITHOUT_CLASSIFICATION	0.9998021130081123	WITHOUT_CLASSIFICATION	1.97886991887792E-4	IMPLEMENTATION
// with args, no block	WITHOUT_CLASSIFICATION	0.9998021130081123	WITHOUT_CLASSIFICATION	1.978869918877918E-4	IMPLEMENTATION
// with args, with block	WITHOUT_CLASSIFICATION	0.9996102561270415	WITHOUT_CLASSIFICATION	3.8974387295849E-4	IMPLEMENTATION
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999105212360142	WITHOUT_CLASSIFICATION	8.947876398585319E-5	IMPLEMENTATION
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999921207132819	WITHOUT_CLASSIFICATION	7.879286718041692E-6	IMPLEMENTATION
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999921207132819	WITHOUT_CLASSIFICATION	7.879286718041692E-6	IMPLEMENTATION
// arg and receiver already present on the stack	WITHOUT_CLASSIFICATION	0.9986176925098645	WITHOUT_CLASSIFICATION	0.001382307490135409	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9999696503844563	WITHOUT_CLASSIFICATION	3.034961554371392E-5	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9999696503844563	WITHOUT_CLASSIFICATION	3.034961554371392E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999696503844563	WITHOUT_CLASSIFICATION	3.034961554371392E-5	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9996612927501303	WITHOUT_CLASSIFICATION	3.3870724986971226E-4	IMPLEMENTATION
// args	WITHOUT_CLASSIFICATION	0.9999922759952998	WITHOUT_CLASSIFICATION	7.724004700141517E-6	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.999952741777263	WITHOUT_CLASSIFICATION	4.725822273687297E-5	IMPLEMENTATION
// no args, no block	WITHOUT_CLASSIFICATION	0.9991843350144828	WITHOUT_CLASSIFICATION	8.15664985517285E-4	IMPLEMENTATION
// no args, with block	WITHOUT_CLASSIFICATION	0.9998021130081123	WITHOUT_CLASSIFICATION	1.97886991887792E-4	IMPLEMENTATION
// with args, no block	WITHOUT_CLASSIFICATION	0.9998021130081123	WITHOUT_CLASSIFICATION	1.978869918877918E-4	IMPLEMENTATION
// with args, with block	WITHOUT_CLASSIFICATION	0.9996102561270415	WITHOUT_CLASSIFICATION	3.8974387295849E-4	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9999696503844563	WITHOUT_CLASSIFICATION	3.034961554371392E-5	IMPLEMENTATION
// retrieve scope from scopes array	WITHOUT_CLASSIFICATION	0.9999878238962226	WITHOUT_CLASSIFICATION	1.21761037774211E-5	IMPLEMENTATION
// use numbered access method	WITHOUT_CLASSIFICATION	0.9998535945079993	WITHOUT_CLASSIFICATION	1.4640549200083713E-4	IMPLEMENTATION
// retrieve call site from sites array	WITHOUT_CLASSIFICATION	0.9999808385279866	WITHOUT_CLASSIFICATION	1.9161472013360403E-5	IMPLEMENTATION
// add name to call site list	WITHOUT_CLASSIFICATION	0.9992765364006072	WITHOUT_CLASSIFICATION	7.23463599392848E-4	IMPLEMENTATION
// module is on top of stack	WITHOUT_CLASSIFICATION	0.9999446878192897	WITHOUT_CLASSIFICATION	5.5312180710211906E-5	IMPLEMENTATION
// build scope names string	WITHOUT_CLASSIFICATION	0.9999992005647779	WITHOUT_CLASSIFICATION	7.99435222213861E-7	IMPLEMENTATION
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999992491946196	WITHOUT_CLASSIFICATION	7.508053804752738E-7	IMPLEMENTATION
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999992491946196	WITHOUT_CLASSIFICATION	7.508053804752738E-7	IMPLEMENTATION
// generate call sites initialization code	WITHOUT_CLASSIFICATION	0.9986610059109109	WITHOUT_CLASSIFICATION	0.0013389940890891098	IMPLEMENTATION
// generate symbols initialization code	WITHOUT_CLASSIFICATION	0.9991267877132232	WITHOUT_CLASSIFICATION	8.732122867768219E-4	IMPLEMENTATION
// generate fixnums initialization code	WITHOUT_CLASSIFICATION	0.9991263559313228	WITHOUT_CLASSIFICATION	8.736440686772883E-4	IMPLEMENTATION
// generate constants initialization code	WITHOUT_CLASSIFICATION	0.9991185673665833	WITHOUT_CLASSIFICATION	8.814326334167006E-4	IMPLEMENTATION
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9991272554426851	WITHOUT_CLASSIFICATION	8.72744557314838E-4	IMPLEMENTATION
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9991272554426851	WITHOUT_CLASSIFICATION	8.72744557314838E-4	IMPLEMENTATION
// generate variable readers initialization code	WITHOUT_CLASSIFICATION	0.9969248062127662	WITHOUT_CLASSIFICATION	0.0030751937872338254	IMPLEMENTATION
// generate variable writers initialization code	WITHOUT_CLASSIFICATION	0.9987339691424882	WITHOUT_CLASSIFICATION	0.0012660308575117576	IMPLEMENTATION
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9958645322510721	WITHOUT_CLASSIFICATION	0.004135467748928015	IMPLEMENTATION
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9958645322510721	WITHOUT_CLASSIFICATION	0.004135467748928015	IMPLEMENTATION
// generate bytelists initialization code	WITHOUT_CLASSIFICATION	0.9991263559313228	WITHOUT_CLASSIFICATION	8.736440686772883E-4	IMPLEMENTATION
// generate method cache initialization code	WITHOUT_CLASSIFICATION	0.9828450948761376	WITHOUT_CLASSIFICATION	0.017154905123862377	IMPLEMENTATION
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999105212360142	WITHOUT_CLASSIFICATION	8.947876398585319E-5	IMPLEMENTATION
// use IRubyObject[]	WITHOUT_CLASSIFICATION	0.9992229835923352	WITHOUT_CLASSIFICATION	7.770164076648399E-4	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999926752253324	WITHOUT_CLASSIFICATION	7.32477466764709E-6	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999531306377724	WITHOUT_CLASSIFICATION	4.686936222772449E-5	IMPLEMENTATION
// No point in updating number if last number was same value.	WITHOUT_CLASSIFICATION	0.9999996341136668	WITHOUT_CLASSIFICATION	3.658863332569936E-7	IMPLEMENTATION
// load Object under value	WITHOUT_CLASSIFICATION	0.9999852455094953	WITHOUT_CLASSIFICATION	1.4754490504790847E-5	IMPLEMENTATION
// put under object array already present	WITHOUT_CLASSIFICATION	0.9999170944196356	WITHOUT_CLASSIFICATION	8.290558036433753E-5	IMPLEMENTATION
// if element count is less than 6, use helper methods	WITHOUT_CLASSIFICATION	0.9999955515167345	WITHOUT_CLASSIFICATION	4.448483265585032E-6	IMPLEMENTATION
// This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements	WITHOUT_CLASSIFICATION	0.9999985531981063	WITHOUT_CLASSIFICATION	1.4468018938073379E-6	IMPLEMENTATION
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999635813100448	WITHOUT_CLASSIFICATION	3.6418689955293035E-5	IMPLEMENTATION
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999635813100448	WITHOUT_CLASSIFICATION	3.6418689955293035E-5	IMPLEMENTATION
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9997957950038171	WITHOUT_CLASSIFICATION	2.0420499618294634E-4	IMPLEMENTATION
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9997957950038171	WITHOUT_CLASSIFICATION	2.0420499618294634E-4	IMPLEMENTATION
// use specific-arity for as much as possible	WITHOUT_CLASSIFICATION	0.9999821843518163	WITHOUT_CLASSIFICATION	1.781564818371606E-5	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999282183820181	WITHOUT_CLASSIFICATION	7.178161798197361E-5	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999282183820181	WITHOUT_CLASSIFICATION	7.178161798197361E-5	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999282183820181	WITHOUT_CLASSIFICATION	7.178161798197361E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999830425886471	WITHOUT_CLASSIFICATION	1.6957411352849238E-5	IMPLEMENTATION
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999492370321263	WITHOUT_CLASSIFICATION	5.0762967873734026E-5	IMPLEMENTATION
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999492370321263	WITHOUT_CLASSIFICATION	5.0762967873734026E-5	IMPLEMENTATION
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999993576968178	WITHOUT_CLASSIFICATION	6.423031822296951E-7	IMPLEMENTATION
// check the condition	WITHOUT_CLASSIFICATION	0.9998887932560536	WITHOUT_CLASSIFICATION	1.1120674394633048E-4	IMPLEMENTATION
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999629849266027	WITHOUT_CLASSIFICATION	3.7015073397320445E-5	IMPLEMENTATION
// skip catch block	WITHOUT_CLASSIFICATION	0.9961123546431851	WITHOUT_CLASSIFICATION	0.0038876453568147894	IMPLEMENTATION
// catch logic for flow-control: next, break	WITHOUT_CLASSIFICATION	0.9997392752461788	WITHOUT_CLASSIFICATION	2.607247538212711E-4	IMPLEMENTATION
// next jump	WITHOUT_CLASSIFICATION	0.999401693050056	WITHOUT_CLASSIFICATION	5.983069499440091E-4	IMPLEMENTATION
// exceptionNext target is for a next that doesn't push a new value, like this one	WITHOUT_CLASSIFICATION	0.9998954619972603	WITHOUT_CLASSIFICATION	1.0453800273977742E-4	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999690127023939	WITHOUT_CLASSIFICATION	3.098729760613052E-5	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999690127023939	WITHOUT_CLASSIFICATION	3.098729760613052E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999830425886471	WITHOUT_CLASSIFICATION	1.6957411352849238E-5	IMPLEMENTATION
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999993576968178	WITHOUT_CLASSIFICATION	6.423031822296951E-7	IMPLEMENTATION
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.999993459101536	WITHOUT_CLASSIFICATION	6.540898463998809E-6	IMPLEMENTATION
// check the condition	WITHOUT_CLASSIFICATION	0.9998887932560536	WITHOUT_CLASSIFICATION	1.1120674394633048E-4	IMPLEMENTATION
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999629849266027	WITHOUT_CLASSIFICATION	3.7015073397320445E-5	IMPLEMENTATION
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9986530003229392	WITHOUT_CLASSIFICATION	0.001346999677060723	IMPLEMENTATION
// break jump	WITHOUT_CLASSIFICATION	0.999474087076147	WITHOUT_CLASSIFICATION	5.259129238529617E-4	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999512377215649	WITHOUT_CLASSIFICATION	4.876227843500035E-5	IMPLEMENTATION
//[reg]	WITHOUT_CLASSIFICATION	0.9999696503844563	WITHOUT_CLASSIFICATION	3.034961554371392E-5	IMPLEMENTATION
// for regular expressions with the /o flag	WITHOUT_CLASSIFICATION	0.9998033191092103	WITHOUT_CLASSIFICATION	1.966808907896851E-4	IMPLEMENTATION
// inside a loop, jump to body	WITHOUT_CLASSIFICATION	0.9999870119230636	WITHOUT_CLASSIFICATION	1.298807693634066E-5	IMPLEMENTATION
// inside a loop, jump to conditional	WITHOUT_CLASSIFICATION	0.9998983226948351	WITHOUT_CLASSIFICATION	1.0167730516485132E-4	IMPLEMENTATION
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9986530003229392	WITHOUT_CLASSIFICATION	0.001346999677060723	IMPLEMENTATION
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.999996964171921	WITHOUT_CLASSIFICATION	3.0358280789902398E-6	IMPLEMENTATION
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.999996964171921	WITHOUT_CLASSIFICATION	3.0358280789902398E-6	IMPLEMENTATION
// if more than 4 vars, get values array too	WITHOUT_CLASSIFICATION	0.999998627394842	WITHOUT_CLASSIFICATION	1.3726051579739568E-6	IMPLEMENTATION
// retry handling in the rescue block	WITHOUT_CLASSIFICATION	0.9997362009049086	WITHOUT_CLASSIFICATION	2.637990950914528E-4	IMPLEMENTATION
// any exceptions raised must continue to be raised, skipping $! restoration	WITHOUT_CLASSIFICATION	0.9985312209055015	WITHOUT_CLASSIFICATION	0.0014687790944984535	IMPLEMENTATION
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9978032026205407	WITHOUT_CLASSIFICATION	0.0021967973794593996	IMPLEMENTATION
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999509698066303	WITHOUT_CLASSIFICATION	4.903019336971755E-5	IMPLEMENTATION
// Handle Flow exceptions, just propagating them	WITHOUT_CLASSIFICATION	0.9999943607739624	WITHOUT_CLASSIFICATION	5.639226037574884E-6	IMPLEMENTATION
// rethrow to outer flow catcher	WITHOUT_CLASSIFICATION	0.9999685108309813	WITHOUT_CLASSIFICATION	3.148916901870957E-5	IMPLEMENTATION
// Handle Ruby exceptions (RaiseException)	WITHOUT_CLASSIFICATION	0.9977418995186879	WITHOUT_CLASSIFICATION	0.00225810048131212	IMPLEMENTATION
// inside a loop, break out of it // go to end of loop, leaving break value on stack	WITHOUT_CLASSIFICATION	0.9998395337229367	WITHOUT_CLASSIFICATION	1.604662770634364E-4	IMPLEMENTATION
// false // zero	WITHOUT_CLASSIFICATION	0.9998521322255748	WITHOUT_CLASSIFICATION	1.4786777442521998E-4	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999778365808568	WITHOUT_CLASSIFICATION	2.216341914326152E-5	IMPLEMENTATION
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9978032026205407	WITHOUT_CLASSIFICATION	0.0021967973794593996	IMPLEMENTATION
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999509698066303	WITHOUT_CLASSIFICATION	4.903019336971755E-5	IMPLEMENTATION
// retry handling in the rescue blocks	WITHOUT_CLASSIFICATION	0.9999682639809131	WITHOUT_CLASSIFICATION	3.1736019086841986E-5	IMPLEMENTATION
// push false	WITHOUT_CLASSIFICATION	0.9998165609505802	WITHOUT_CLASSIFICATION	1.8343904941964497E-4	IMPLEMENTATION
//method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));	WITHOUT_CLASSIFICATION	0.9997254911986895	WITHOUT_CLASSIFICATION	2.7450880131056003E-4	IMPLEMENTATION
//method.ifnonnull(trueLabel);	WITHOUT_CLASSIFICATION	0.9998286659029623	WITHOUT_CLASSIFICATION	1.7133409703781356E-4	IMPLEMENTATION
// EQ == 0 (i.e. false)   //[C]	WITHOUT_CLASSIFICATION	0.999972371210299	WITHOUT_CLASSIFICATION	2.76287897010035E-5	IMPLEMENTATION
//[C, C] //[C, C, String] //[C, null|C]	WITHOUT_CLASSIFICATION	0.9997254911986895	WITHOUT_CLASSIFICATION	2.7450880131056003E-4	IMPLEMENTATION
//[C]	WITHOUT_CLASSIFICATION	0.9999696503844563	WITHOUT_CLASSIFICATION	3.034961554371392E-5	IMPLEMENTATION
// push true	WITHOUT_CLASSIFICATION	0.999495021677139	WITHOUT_CLASSIFICATION	5.049783228610036E-4	IMPLEMENTATION
// EQ != 0 (i.e. true)	WITHOUT_CLASSIFICATION	0.9999930205369246	WITHOUT_CLASSIFICATION	6.979463075436653E-6	IMPLEMENTATION
//[?, ?] //[?, boolean]	WITHOUT_CLASSIFICATION	0.9998286659029623	WITHOUT_CLASSIFICATION	1.7133409703781356E-4	IMPLEMENTATION
//[RubyModule] //[RubyModule, String]	WITHOUT_CLASSIFICATION	0.9997254911986895	WITHOUT_CLASSIFICATION	2.7450880131056003E-4	IMPLEMENTATION
//[boolean]	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
// no receiver for singleton class	WITHOUT_CLASSIFICATION	0.999991319492144	WITHOUT_CLASSIFICATION	8.680507855976738E-6	IMPLEMENTATION
// but there's a superclass passed in, use it	WITHOUT_CLASSIFICATION	0.9995212296075413	WITHOUT_CLASSIFICATION	4.7877039245879463E-4	IMPLEMENTATION
// we re-set self to the class, but store the old self in a temporary local variable // this is to prevent it GCing in case the singleton is short-lived	WITHOUT_CLASSIFICATION	0.9999847771991519	WITHOUT_CLASSIFICATION	1.5222800847949858E-5	IMPLEMENTATION
// set self to the class	WITHOUT_CLASSIFICATION	0.9999833258631695	WITHOUT_CLASSIFICATION	1.6674136830569685E-5	IMPLEMENTATION
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9996682396630049	WITHOUT_CLASSIFICATION	3.317603369950545E-4	IMPLEMENTATION
// static scope	WITHOUT_CLASSIFICATION	0.9969793626246367	WITHOUT_CLASSIFICATION	0.003020637375363379	IMPLEMENTATION
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999522760290687	WITHOUT_CLASSIFICATION	4.7723970931245224E-5	IMPLEMENTATION
// new instance to invoke run against	WITHOUT_CLASSIFICATION	0.9999085573048591	WITHOUT_CLASSIFICATION	9.144269514096563E-5	IMPLEMENTATION
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9996682396630049	WITHOUT_CLASSIFICATION	3.317603369950545E-4	IMPLEMENTATION
// static scope	WITHOUT_CLASSIFICATION	0.9969793626246367	WITHOUT_CLASSIFICATION	0.003020637375363379	IMPLEMENTATION
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999522760290687	WITHOUT_CLASSIFICATION	4.7723970931245224E-5	IMPLEMENTATION
// finally with exception	WITHOUT_CLASSIFICATION	0.9999436536218607	WITHOUT_CLASSIFICATION	5.6346378139360264E-5	IMPLEMENTATION
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.999618613883285	WITHOUT_CLASSIFICATION	3.8138611671500246E-4	IMPLEMENTATION
// otherwise, there's a receiver, so we pass that in directly for the sclass logic	WITHOUT_CLASSIFICATION	0.9999053137164805	WITHOUT_CLASSIFICATION	9.468628351950482E-5	IMPLEMENTATION
// original exception is on stack	WITHOUT_CLASSIFICATION	0.999956516155978	WITHOUT_CLASSIFICATION	4.348384402203112E-5	IMPLEMENTATION
// RaiseException is on stack, get RubyException out	WITHOUT_CLASSIFICATION	0.9999733377845695	WITHOUT_CLASSIFICATION	2.6662215430414993E-5	IMPLEMENTATION
// updating position for same line; skip	WITHOUT_CLASSIFICATION	0.9998319476656589	WITHOUT_CLASSIFICATION	1.680523343412624E-4	IMPLEMENTATION
// callbacks to fill in method body	WITHOUT_CLASSIFICATION	0.9999872027638687	WITHOUT_CLASSIFICATION	1.2797236131338254E-5	IMPLEMENTATION
// prepare to call "def" utility method to handle def logic	WITHOUT_CLASSIFICATION	0.9949112591849157	WITHOUT_CLASSIFICATION	0.005088740815084239	IMPLEMENTATION
// script object	WITHOUT_CLASSIFICATION	0.9999347765321595	WITHOUT_CLASSIFICATION	6.522346784057374E-5	IMPLEMENTATION
// arities	WITHOUT_CLASSIFICATION	0.9999901088813848	WITHOUT_CLASSIFICATION	9.891118615195496E-6	IMPLEMENTATION
// TODO assuming case is a fixnum	WITHOUT_CLASSIFICATION	0.8269990809142013	WITHOUT_CLASSIFICATION	0.1730009190857987	IMPLEMENTATION
// we have an input case, prepare branching logic	WITHOUT_CLASSIFICATION	0.9998186782505676	WITHOUT_CLASSIFICATION	1.8132174943238358E-4	IMPLEMENTATION
// we have optimized switch cases, build a lookupswitch	WITHOUT_CLASSIFICATION	0.9998555978682521	WITHOUT_CLASSIFICATION	1.4440213174784838E-4	IMPLEMENTATION
// checkcast the value; if match, fast path; otherwise proceed to slow logic	WITHOUT_CLASSIFICATION	0.9984880653888212	WITHOUT_CLASSIFICATION	0.0015119346111788225	IMPLEMENTATION
// expression-based tests + bodies	WITHOUT_CLASSIFICATION	0.9999390835045753	WITHOUT_CLASSIFICATION	6.0916495424686834E-5	IMPLEMENTATION
// normal case, create a new label	WITHOUT_CLASSIFICATION	0.9999868279542776	WITHOUT_CLASSIFICATION	1.3172045722302618E-5	IMPLEMENTATION
// last conditional case, use defaultCase	WITHOUT_CLASSIFICATION	0.9999178651902636	WITHOUT_CLASSIFICATION	8.213480973637421E-5	IMPLEMENTATION
// do nothing; arity check is done before call	WITHOUT_CLASSIFICATION	0.9999676911989452	WITHOUT_CLASSIFICATION	3.230880105474584E-5	IMPLEMENTATION
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.999994785618019	WITHOUT_CLASSIFICATION	5.214381980997491E-6	IMPLEMENTATION
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999483119976904	WITHOUT_CLASSIFICATION	5.168800230967523E-5	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.9999977730030852	WITHOUT_CLASSIFICATION	2.226996914723825E-6	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.9999800230960278	WITHOUT_CLASSIFICATION	1.997690397210648E-5	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.9999800230960278	WITHOUT_CLASSIFICATION	1.997690397210648E-5	IMPLEMENTATION
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9998537824272936	WITHOUT_CLASSIFICATION	1.4621757270629558E-4	IMPLEMENTATION
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9998537824272936	WITHOUT_CLASSIFICATION	1.4621757270629558E-4	IMPLEMENTATION
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999613096070751	WITHOUT_CLASSIFICATION	3.869039292499011E-5	IMPLEMENTATION
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999613096070751	WITHOUT_CLASSIFICATION	3.869039292499011E-5	IMPLEMENTATION
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999860357573099	WITHOUT_CLASSIFICATION	1.3964242690009807E-5	IMPLEMENTATION
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9996678775041357	WITHOUT_CLASSIFICATION	3.3212249586429295E-4	IMPLEMENTATION
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999984972519533	WITHOUT_CLASSIFICATION	1.5027480465694501E-6	IMPLEMENTATION
// if there's args left and we want them, assign to rest arg	WITHOUT_CLASSIFICATION	0.9961840928962274	WITHOUT_CLASSIFICATION	0.003815907103772597	IMPLEMENTATION
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.999999600943538	WITHOUT_CLASSIFICATION	3.9905646195456585E-7	IMPLEMENTATION
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9980086487852425	WITHOUT_CLASSIFICATION	0.0019913512147574997	IMPLEMENTATION
// first, iterate over all pre args	WITHOUT_CLASSIFICATION	0.9999805466470284	WITHOUT_CLASSIFICATION	1.9453352971526243E-5	IMPLEMENTATION
// then optional args	WITHOUT_CLASSIFICATION	0.9999754593936362	WITHOUT_CLASSIFICATION	2.4540606363855837E-5	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999690127023939	WITHOUT_CLASSIFICATION	3.098729760613052E-5	IMPLEMENTATION
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999860357573099	WITHOUT_CLASSIFICATION	1.3964242690009807E-5	IMPLEMENTATION
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9996678775041357	WITHOUT_CLASSIFICATION	3.3212249586429295E-4	IMPLEMENTATION
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999984972519533	WITHOUT_CLASSIFICATION	1.5027480465694501E-6	IMPLEMENTATION
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.999999600943538	WITHOUT_CLASSIFICATION	3.9905646195456585E-7	IMPLEMENTATION
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9980086487852425	WITHOUT_CLASSIFICATION	0.0019913512147574997	IMPLEMENTATION
// if rest args, excluding post args	WITHOUT_CLASSIFICATION	0.9999686119308643	WITHOUT_CLASSIFICATION	3.1388069135705385E-5	IMPLEMENTATION
// finally, post args	WITHOUT_CLASSIFICATION	0.9999679290979002	WITHOUT_CLASSIFICATION	3.207090209969794E-5	IMPLEMENTATION
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.996410959343479	WITHOUT_CLASSIFICATION	0.0035890406565210506	IMPLEMENTATION
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.996410959343479	WITHOUT_CLASSIFICATION	0.0035890406565210506	IMPLEMENTATION
// unwrap scopes to appropriate depth	WITHOUT_CLASSIFICATION	0.999942261679381	WITHOUT_CLASSIFICATION	5.773832061890243E-5	IMPLEMENTATION
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999931849702963	WITHOUT_CLASSIFICATION	6.81502970360755E-6	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9997448924470864	WITHOUT_CLASSIFICATION	2.55107552913617E-4	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999799180704951	WITHOUT_CLASSIFICATION	2.008192950476792E-5	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999799180704951	WITHOUT_CLASSIFICATION	2.008192950476792E-5	IMPLEMENTATION
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999847600988763	WITHOUT_CLASSIFICATION	1.5239901123773707E-5	IMPLEMENTATION
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999977329914745	WITHOUT_CLASSIFICATION	2.2670085254767436E-6	IMPLEMENTATION
// store the local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999904833613693	WITHOUT_CLASSIFICATION	9.516638630688891E-6	IMPLEMENTATION
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999513383460595	WITHOUT_CLASSIFICATION	4.8661653940490815E-5	IMPLEMENTATION
// return in a class body raises error	WITHOUT_CLASSIFICATION	0.9999980158141893	WITHOUT_CLASSIFICATION	1.9841858107526015E-6	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999981335086356	WITHOUT_CLASSIFICATION	1.8664913643094439E-6	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999979142556389	WITHOUT_CLASSIFICATION	2.085744361180053E-6	IMPLEMENTATION
// end of variable scope	WITHOUT_CLASSIFICATION	0.999857347277843	WITHOUT_CLASSIFICATION	1.4265272215702274E-4	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999495981693003	WITHOUT_CLASSIFICATION	5.040183069967838E-5	IMPLEMENTATION
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999479087994468	WITHOUT_CLASSIFICATION	5.2091200553217344E-5	IMPLEMENTATION
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999818022438411	WITHOUT_CLASSIFICATION	1.819775615886738E-5	IMPLEMENTATION
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999847600988763	WITHOUT_CLASSIFICATION	1.5239901123773707E-5	IMPLEMENTATION
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999977329914745	WITHOUT_CLASSIFICATION	2.2670085254767436E-6	IMPLEMENTATION
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999513383460595	WITHOUT_CLASSIFICATION	4.8661653940490815E-5	IMPLEMENTATION
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9994040560174822	WITHOUT_CLASSIFICATION	5.959439825178462E-4	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9997448924470864	WITHOUT_CLASSIFICATION	2.55107552913617E-4	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9997448924470864	WITHOUT_CLASSIFICATION	2.55107552913617E-4	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999778365808568	WITHOUT_CLASSIFICATION	2.216341914326152E-5	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999778365808568	WITHOUT_CLASSIFICATION	2.216341914326152E-5	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9968129756381954	WITHOUT_CLASSIFICATION	0.0031870243618046068	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9968129756381954	WITHOUT_CLASSIFICATION	0.0031870243618046068	IMPLEMENTATION
// store the local vars in a local variable if there are any	WITHOUT_CLASSIFICATION	0.9999995081050844	WITHOUT_CLASSIFICATION	4.918949155197627E-7	IMPLEMENTATION
// if more than 4 locals, get and populate the locals array too	WITHOUT_CLASSIFICATION	0.9999686412134672	WITHOUT_CLASSIFICATION	3.135878653285589E-5	IMPLEMENTATION
// fill local vars with nil, to avoid checking every access.	WITHOUT_CLASSIFICATION	0.9901837815825476	WITHOUT_CLASSIFICATION	0.009816218417452425	IMPLEMENTATION
// default for starting tempVariableIndex is ok	WITHOUT_CLASSIFICATION	0.9999896033388828	WITHOUT_CLASSIFICATION	1.0396661117290487E-5	IMPLEMENTATION
// store the local vars in a local variable for preparing the class (using previous scope)	WITHOUT_CLASSIFICATION	0.9999985241292044	WITHOUT_CLASSIFICATION	1.475870795572951E-6	IMPLEMENTATION
// store the new local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999893298444663	WITHOUT_CLASSIFICATION	1.0670155533797257E-5	IMPLEMENTATION
// in 1.8 mode, this will be a RubyArray containing the arguments // in 1.9 mode, this will be an IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999984668135784	WITHOUT_CLASSIFICATION	1.533186421644173E-6	IMPLEMENTATION
// no variable initialization, because we're reusing parent's scope (flat)	WITHOUT_CLASSIFICATION	0.9999734924487523	WITHOUT_CLASSIFICATION	2.650755124763486E-5	IMPLEMENTATION
// for specific-index cases, clean up non-expression values	WITHOUT_CLASSIFICATION	0.9999911782805098	WITHOUT_CLASSIFICATION	8.821719490191986E-6	IMPLEMENTATION
// set up a local Ruby variable	WITHOUT_CLASSIFICATION	0.9999591300442517	WITHOUT_CLASSIFICATION	4.086995574823555E-5	IMPLEMENTATION
// if that succeeds, the others should as well	WITHOUT_CLASSIFICATION	0.9999938792029341	WITHOUT_CLASSIFICATION	6.120797065815856E-6	IMPLEMENTATION
// verify the class	WITHOUT_CLASSIFICATION	0.9999105826713042	WITHOUT_CLASSIFICATION	8.941732869575181E-5	IMPLEMENTATION
// create dir if necessary	WITHOUT_CLASSIFICATION	0.999954122942868	WITHOUT_CLASSIFICATION	4.587705713202095E-5	IMPLEMENTATION
// Create the class with the appropriate class name and source file	WITHOUT_CLASSIFICATION	0.9999965339083625	WITHOUT_CLASSIFICATION	3.4660916375053168E-6	IMPLEMENTATION
// add setPosition impl, which stores filename as constant to speed updates	WITHOUT_CLASSIFICATION	0.9999427520187988	WITHOUT_CLASSIFICATION	5.724798120119599E-5	IMPLEMENTATION
// thread context	WITHOUT_CLASSIFICATION	0.9987066194579556	WITHOUT_CLASSIFICATION	0.001293380542044414	IMPLEMENTATION
// line number	WITHOUT_CLASSIFICATION	0.9995313160599493	WITHOUT_CLASSIFICATION	4.6868394005078224E-4	IMPLEMENTATION
// invoke __file__ with threadcontext, self, args (null), and block (null)	WITHOUT_CLASSIFICATION	0.9996787609687071	WITHOUT_CLASSIFICATION	3.2123903129296113E-4	IMPLEMENTATION
// load always uses IRubyObject[], so simple closure offset calculation here	WITHOUT_CLASSIFICATION	0.9998028359021369	WITHOUT_CLASSIFICATION	1.9716409786300727E-4	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999979142556389	WITHOUT_CLASSIFICATION	2.085744361180053E-6	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999495981693003	WITHOUT_CLASSIFICATION	5.040183069967838E-5	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999828750039442	WITHOUT_CLASSIFICATION	1.712499605583419E-5	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.999952741777263	WITHOUT_CLASSIFICATION	4.725822273687297E-5	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.999952741777263	WITHOUT_CLASSIFICATION	4.725822273687297E-5	IMPLEMENTATION
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9994040560174822	WITHOUT_CLASSIFICATION	5.959439825178462E-4	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9997448924470864	WITHOUT_CLASSIFICATION	2.55107552913617E-4	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999778365808568	WITHOUT_CLASSIFICATION	2.216341914326152E-5	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9968129756381954	WITHOUT_CLASSIFICATION	0.0031870243618046068	IMPLEMENTATION
// add Script#run impl, used for running this script with a specified threadcontext and self // root method of a script is always in __file__ method	WITHOUT_CLASSIFICATION	0.9999855421827217	WITHOUT_CLASSIFICATION	1.4457817278252343E-5	IMPLEMENTATION
// add main impl, used for detached or command-line execution of this script with a new runtime // root method of a script is always in stub0, method0	WITHOUT_CLASSIFICATION	0.9999548570290575	WITHOUT_CLASSIFICATION	4.514297094239091E-5	IMPLEMENTATION
// construct static scope list of names	WITHOUT_CLASSIFICATION	0.9995998660563794	WITHOUT_CLASSIFICATION	4.001339436206794E-4	IMPLEMENTATION
// JRUBY-3014: make __FILE__ dynamically determined at load time, but // we provide a reasonable default here	WITHOUT_CLASSIFICATION	0.9995398756203911	WITHOUT_CLASSIFICATION	4.6012437960881087E-4	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999937132365355	WITHOUT_CLASSIFICATION	6.286763464500498E-6	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999937132365355	WITHOUT_CLASSIFICATION	6.286763464500498E-6	IMPLEMENTATION
// lazily create class init only if necessary	WITHOUT_CLASSIFICATION	0.9999960443381846	WITHOUT_CLASSIFICATION	3.955661815471174E-6	IMPLEMENTATION
// boxed arg list __file__	WITHOUT_CLASSIFICATION	0.9994276769606893	WITHOUT_CLASSIFICATION	5.723230393106057E-4	IMPLEMENTATION
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9995194250298991	WITHOUT_CLASSIFICATION	4.805749701009304E-4	IMPLEMENTATION
// exact arg list __file__	WITHOUT_CLASSIFICATION	0.9994892026555373	WITHOUT_CLASSIFICATION	5.107973444627333E-4	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.9997031722055072	WITHOUT_CLASSIFICATION	2.9682779449273966E-4	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.9997031722055072	WITHOUT_CLASSIFICATION	2.9682779449273966E-4	IMPLEMENTATION
// not using a new scope, use saved one for a flat closure	WITHOUT_CLASSIFICATION	0.9974641859114475	WITHOUT_CLASSIFICATION	0.0025358140885524266	IMPLEMENTATION
// normal closure	WITHOUT_CLASSIFICATION	0.9995653482099142	WITHOUT_CLASSIFICATION	4.3465179008583463E-4	IMPLEMENTATION
// end of scoping for closure's vars	WITHOUT_CLASSIFICATION	0.9998859185090031	WITHOUT_CLASSIFICATION	1.1408149099692014E-4	IMPLEMENTATION
// we only need full-on redo exception handling if there's logic that might produce it	WITHOUT_CLASSIFICATION	0.9891118765424262	WITHOUT_CLASSIFICATION	0.010888123457573845	IMPLEMENTATION
// handle redos by restarting the block	WITHOUT_CLASSIFICATION	0.9976798294356961	WITHOUT_CLASSIFICATION	0.002320170564303796	IMPLEMENTATION
// jump back to the top of the main body of this closure	WITHOUT_CLASSIFICATION	0.999794650174953	WITHOUT_CLASSIFICATION	2.0534982504708373E-4	IMPLEMENTATION
// Ruby name 	WITHOUT_CLASSIFICATION	0.9993656159347205	WITHOUT_CLASSIFICATION	6.343840652795646E-4	IMPLEMENTATION
// Accumulate call arguments	WITHOUT_CLASSIFICATION	0.9999460362609182	WITHOUT_CLASSIFICATION	5.39637390819077E-5	IMPLEMENTATION
// Fix FileNameCompletor to work mid-line	WITHOUT_CLASSIFICATION	0.999179690695722	WITHOUT_CLASSIFICATION	8.203093042779012E-4	IMPLEMENTATION
// We need to ensure that the variable names generated here cannot conflict with ruby variable names! // Hence the "%" tthat is appended to the beginning!	WITHOUT_CLASSIFICATION	0.9998593972306942	WITHOUT_CLASSIFICATION	1.4060276930577407E-4	IMPLEMENTATION
// Does this method define code?  // Default is yes -- which basically leads to pessimistic but safe optimizations // But, for library and internal methods, this might be false.	WITHOUT_CLASSIFICATION	0.9999998174847625	WITHOUT_CLASSIFICATION	1.8251523750584414E-7	IMPLEMENTATION
// Map of constants defined in this scope (not valid for methods!)	WITHOUT_CLASSIFICATION	0.999983415244685	WITHOUT_CLASSIFICATION	1.6584755314890432E-5	IMPLEMENTATION
// NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner // with outer loops encountered before inner loops, and inner loops finished before outer ones. // // So, we can keep track of loops in a loop stack which  keeps track of loops as they are encountered. // This lets us implement next/redo/break/retry easily for the non-closure cases	WITHOUT_CLASSIFICATION	0.9999998810732208	WITHOUT_CLASSIFICATION	1.1892677911364527E-7	IMPLEMENTATION
// Map keep track of the next available variable index for a particular prefix	WITHOUT_CLASSIFICATION	0.9999302975870392	WITHOUT_CLASSIFICATION	6.97024129607393E-5	IMPLEMENTATION
// Control flow graph for this scope	WITHOUT_CLASSIFICATION	0.999910129247089	WITHOUT_CLASSIFICATION	8.987075291096955E-5	IMPLEMENTATION
//        _lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;	WITHOUT_CLASSIFICATION	0.9993774636700937	WITHOUT_CLASSIFICATION	6.225363299063063E-4	IMPLEMENTATION
// List of modules, classes, and methods defined in this scope!	WITHOUT_CLASSIFICATION	0.9999871772386553	WITHOUT_CLASSIFICATION	1.2822761344720089E-5	IMPLEMENTATION
// Returns the containing parent scope!	WITHOUT_CLASSIFICATION	0.9998559512214047	WITHOUT_CLASSIFICATION	1.4404877859523364E-4	IMPLEMENTATION
// Insert nesting level to ensure variable names don't conflict across nested scopes! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //        return new Variable(prefix + _lexicalNestingLevel + "_" + idx);	WITHOUT_CLASSIFICATION	0.9999637978176223	WITHOUT_CLASSIFICATION	3.6202182377579086E-5	IMPLEMENTATION
// get "self"	WITHOUT_CLASSIFICATION	0.9998354126326114	WITHOUT_CLASSIFICATION	1.6458736738847403E-4	IMPLEMENTATION
// variable is never read, variable is never live	WITHOUT_CLASSIFICATION	0.9997180121097022	WITHOUT_CLASSIFICATION	2.819878902978052E-4	IMPLEMENTATION
// inline script	WITHOUT_CLASSIFICATION	0.9997379074897706	WITHOUT_CLASSIFICATION	2.6209251022939575E-4	IMPLEMENTATION
// inline script	WITHOUT_CLASSIFICATION	0.9997379074897706	WITHOUT_CLASSIFICATION	2.6209251022939575E-4	IMPLEMENTATION
// This method is called to build assignments for a multiple-assignment instruction	WITHOUT_CLASSIFICATION	0.9999957961215137	WITHOUT_CLASSIFICATION	4.203878486278029E-6	IMPLEMENTATION
// Build the class body!	WITHOUT_CLASSIFICATION	0.9999807360581227	WITHOUT_CLASSIFICATION	1.9263941877261923E-5	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999698264644975	WITHOUT_CLASSIFICATION	3.0173535502491407E-5	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999698264644975	WITHOUT_CLASSIFICATION	3.0173535502491407E-5	IMPLEMENTATION
// SSS FIXME: Can this ever be null?	WITHOUT_CLASSIFICATION	0.9754327147045814	WITHOUT_CLASSIFICATION	0.024567285295418555	IMPLEMENTATION
// Run the pass on the passed in scope!	WITHOUT_CLASSIFICATION	0.9999579545416765	WITHOUT_CLASSIFICATION	4.2045458323497984E-5	IMPLEMENTATION
// done // done // done // done	WITHOUT_CLASSIFICATION	0.9999154634409206	WITHOUT_CLASSIFICATION	8.453655907942622E-5	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999990512250263	WITHOUT_CLASSIFICATION	9.48774973606959E-7	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999990512250263	WITHOUT_CLASSIFICATION	9.48774973606959E-7	IMPLEMENTATION
// This method is called to build arguments for a block!	WITHOUT_CLASSIFICATION	0.9999966832872651	WITHOUT_CLASSIFICATION	3.3167127349947586E-6	IMPLEMENTATION
// build first node (and ignore its result) and then second node	WITHOUT_CLASSIFICATION	0.9999770491080321	WITHOUT_CLASSIFICATION	2.295089196789384E-5	IMPLEMENTATION
// build first node only and return false	WITHOUT_CLASSIFICATION	0.9999924670869739	WITHOUT_CLASSIFICATION	7.532913026183181E-6	IMPLEMENTATION
// Value of the last expression in the block 	WITHOUT_CLASSIFICATION	0.9999624030457807	WITHOUT_CLASSIFICATION	3.759695421940222E-5	IMPLEMENTATION
// If this is not a closure, the break is equivalent to jumping to the loop end label	WITHOUT_CLASSIFICATION	0.9997626027401485	WITHOUT_CLASSIFICATION	2.3739725985142912E-4	IMPLEMENTATION
// get the incoming case value	WITHOUT_CLASSIFICATION	0.9999908874225847	WITHOUT_CLASSIFICATION	9.112577415200023E-6	IMPLEMENTATION
// the CASE instruction	WITHOUT_CLASSIFICATION	0.9999629077877635	WITHOUT_CLASSIFICATION	3.709221223635336E-5	IMPLEMENTATION
// lists to aggregate variables and bodies for whens	WITHOUT_CLASSIFICATION	0.9999770074895528	WITHOUT_CLASSIFICATION	2.2992510447257656E-5	IMPLEMENTATION
// build each "when"	WITHOUT_CLASSIFICATION	0.9998108675617018	WITHOUT_CLASSIFICATION	1.8913243829814371E-4	IMPLEMENTATION
// multiple conditions for when	WITHOUT_CLASSIFICATION	0.9999592732967668	WITHOUT_CLASSIFICATION	4.0726703233120244E-5	IMPLEMENTATION
// build "else" if it exists	WITHOUT_CLASSIFICATION	0.9999814506888042	WITHOUT_CLASSIFICATION	1.8549311195898807E-5	IMPLEMENTATION
// now emit bodies	WITHOUT_CLASSIFICATION	0.9998307083484006	WITHOUT_CLASSIFICATION	1.6929165159932513E-4	IMPLEMENTATION
// close it out	WITHOUT_CLASSIFICATION	0.9998985646740339	WITHOUT_CLASSIFICATION	1.0143532596610398E-4	IMPLEMENTATION
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.999977281412391	WITHOUT_CLASSIFICATION	2.2718587609135363E-5	IMPLEMENTATION
// Do we have a dynamic container?	WITHOUT_CLASSIFICATION	0.9998209301757269	WITHOUT_CLASSIFICATION	1.7906982427305431E-4	IMPLEMENTATION
// Return a meta object corresponding to the class	WITHOUT_CLASSIFICATION	0.9999968117830718	WITHOUT_CLASSIFICATION	3.1882169281574607E-6	IMPLEMENTATION
// 1. Load the module first (lhs of node) // 2. Then load the constant from the module	WITHOUT_CLASSIFICATION	0.9999509304901556	WITHOUT_CLASSIFICATION	4.9069509844456415E-5	IMPLEMENTATION
// Build IR for args	WITHOUT_CLASSIFICATION	0.9998590655320502	WITHOUT_CLASSIFICATION	1.4093446794989634E-4	IMPLEMENTATION
// Build IR for body	WITHOUT_CLASSIFICATION	0.9999671175194931	WITHOUT_CLASSIFICATION	3.288248050699683E-5	IMPLEMENTATION
// if root of method is rescue, build as a light rescue	WITHOUT_CLASSIFICATION	0.9999978140839955	WITHOUT_CLASSIFICATION	2.18591600448696E-6	IMPLEMENTATION
// Instance method	WITHOUT_CLASSIFICATION	0.9992739901793991	WITHOUT_CLASSIFICATION	7.260098206009838E-4	IMPLEMENTATION
// Class method	WITHOUT_CLASSIFICATION	0.9997030275577573	WITHOUT_CLASSIFICATION	2.9697244224269955E-4	IMPLEMENTATION
// Other args begin at index 1	WITHOUT_CLASSIFICATION	0.9999309161821898	WITHOUT_CLASSIFICATION	6.908381781026195E-5	IMPLEMENTATION
// Both for fixed arity and variable arity methods	WITHOUT_CLASSIFICATION	0.9999266016062647	WITHOUT_CLASSIFICATION	7.339839373530212E-5	IMPLEMENTATION
// Now for the rest	WITHOUT_CLASSIFICATION	0.9996345568475803	WITHOUT_CLASSIFICATION	3.6544315241967407E-4	IMPLEMENTATION
// Jump to 'l' if this arg is not null.  If null, fall through and build the default value!	WITHOUT_CLASSIFICATION	0.9999879941502164	WITHOUT_CLASSIFICATION	1.20058497836248E-5	IMPLEMENTATION
// This is not an expression that computes anything	WITHOUT_CLASSIFICATION	0.9956745792832652	WITHOUT_CLASSIFICATION	0.004325420716734822	IMPLEMENTATION
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999568436474595	WITHOUT_CLASSIFICATION	4.315635254045177E-5	IMPLEMENTATION
// Build args	WITHOUT_CLASSIFICATION	0.9997522103736524	WITHOUT_CLASSIFICATION	2.477896263476895E-4	IMPLEMENTATION
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.999998052246951	WITHOUT_CLASSIFICATION	1.94775304892296E-6	IMPLEMENTATION
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.999910280522103	WITHOUT_CLASSIFICATION	8.97194778970375E-5	IMPLEMENTATION
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.999977281412391	WITHOUT_CLASSIFICATION	2.2718587609135363E-5	IMPLEMENTATION
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999568436474595	WITHOUT_CLASSIFICATION	4.315635254045177E-5	IMPLEMENTATION
// Build args	WITHOUT_CLASSIFICATION	0.9997522103736524	WITHOUT_CLASSIFICATION	2.477896263476895E-4	IMPLEMENTATION
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.999910280522103	WITHOUT_CLASSIFICATION	8.97194778970375E-5	IMPLEMENTATION
// Get the container for this new module	WITHOUT_CLASSIFICATION	0.9999337595611002	WITHOUT_CLASSIFICATION	6.624043889982251E-5	IMPLEMENTATION
// Build the new module	WITHOUT_CLASSIFICATION	0.9999332878106356	WITHOUT_CLASSIFICATION	6.671218936433554E-5	IMPLEMENTATION
// Build the module body	WITHOUT_CLASSIFICATION	0.9999891597727742	WITHOUT_CLASSIFICATION	1.0840227225804356E-5	IMPLEMENTATION
// First, build an assignment for a splat, if any, with the rest of the args!	WITHOUT_CLASSIFICATION	0.9999905228793051	WITHOUT_CLASSIFICATION	9.477120694963683E-6	IMPLEMENTATION
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999802202742357	WITHOUT_CLASSIFICATION	1.977972576429916E-5	IMPLEMENTATION
// If a closure, the next is simply a return from the closure! // If a regular loop, the next is simply a jump to the end of the iteration	WITHOUT_CLASSIFICATION	0.9999900996434848	WITHOUT_CLASSIFICATION	9.900356515093648E-6	IMPLEMENTATION
// get attr	WITHOUT_CLASSIFICATION	0.9998354126326114	WITHOUT_CLASSIFICATION	1.6458736738847403E-4	IMPLEMENTATION
// call operator	WITHOUT_CLASSIFICATION	0.9994993971913381	WITHOUT_CLASSIFICATION	5.006028086619516E-4	IMPLEMENTATION
// set attr	WITHOUT_CLASSIFICATION	0.9996727361353414	WITHOUT_CLASSIFICATION	3.27263864658602E-4	IMPLEMENTATION
// Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, false, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.999734775165826	WITHOUT_CLASSIFICATION	2.6522483417404765E-4	IMPLEMENTATION
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999877298800952	WITHOUT_CLASSIFICATION	1.2270119904909E-5	IMPLEMENTATION
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999877298800952	WITHOUT_CLASSIFICATION	1.2270119904909E-5	IMPLEMENTATION
// if v1 is defined and true, we are done! 	WITHOUT_CLASSIFICATION	0.9999977807555722	WITHOUT_CLASSIFICATION	2.2192444277635123E-6	IMPLEMENTATION
// build first node only and return true	WITHOUT_CLASSIFICATION	0.9999792566998699	WITHOUT_CLASSIFICATION	2.074330013017124E-5	IMPLEMENTATION
// build first node as non-expr and build second node	WITHOUT_CLASSIFICATION	0.9999924332673797	WITHOUT_CLASSIFICATION	7.566732620166181E-6	IMPLEMENTATION
// Top-level script!	WITHOUT_CLASSIFICATION	0.9996612927501303	WITHOUT_CLASSIFICATION	3.3870724986971226E-4	IMPLEMENTATION
// we won't enter the loop -- just build the condition node	WITHOUT_CLASSIFICATION	0.9999998759695853	WITHOUT_CLASSIFICATION	1.240304147279389E-7	IMPLEMENTATION
/* ----------- Private Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999885633774379	WITHOUT_CLASSIFICATION	1.1436622561977954E-5	IMPLEMENTATION
// What handles warnings	WITHOUT_CLASSIFICATION	0.9999035499782694	WITHOUT_CLASSIFICATION	9.645002173062218E-5	IMPLEMENTATION
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999995567950463	WITHOUT_CLASSIFICATION	4.4320495379998436E-7	IMPLEMENTATION
// For closures, a redo is a jump to the beginning of the closure // For non-closures, a redo is a jump to the beginning of the loop	WITHOUT_CLASSIFICATION	0.9999918076139648	WITHOUT_CLASSIFICATION	8.192386035188923E-6	IMPLEMENTATION
// The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999991020069825	WITHOUT_CLASSIFICATION	8.979930175846579E-7	IMPLEMENTATION
// Dummy top-level method for the class	WITHOUT_CLASSIFICATION	0.9999690672971752	WITHOUT_CLASSIFICATION	3.093270282482679E-5	IMPLEMENTATION
// Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999927555666825	WITHOUT_CLASSIFICATION	7.244433317406832E-6	IMPLEMENTATION
// ------ Define the operations below ----	WITHOUT_CLASSIFICATION	0.9999296180403333	WITHOUT_CLASSIFICATION	7.038195966667968E-5	IMPLEMENTATION
// value copy and type conversion operations	WITHOUT_CLASSIFICATION	0.9999916324922188	WITHOUT_CLASSIFICATION	8.367507781170149E-6	IMPLEMENTATION
// alu operations	WITHOUT_CLASSIFICATION	0.9994765700655687	WITHOUT_CLASSIFICATION	5.234299344313285E-4	IMPLEMENTATION
// method handle, arg receive, return value, and  call instructions	WITHOUT_CLASSIFICATION	0.9977592701402725	WITHOUT_CLASSIFICATION	0.0022407298597274796	IMPLEMENTATION
// closure instructions	WITHOUT_CLASSIFICATION	0.999906621357297	WITHOUT_CLASSIFICATION	9.337864270308998E-5	IMPLEMENTATION
// eval instructions	WITHOUT_CLASSIFICATION	0.9993863091269924	WITHOUT_CLASSIFICATION	6.136908730076265E-4	IMPLEMENTATION
// def instructions	WITHOUT_CLASSIFICATION	0.9993832477876402	WITHOUT_CLASSIFICATION	6.167522123597197E-4	IMPLEMENTATION
// exception instructions	WITHOUT_CLASSIFICATION	0.9999249193204139	WITHOUT_CLASSIFICATION	7.508067958601376E-5	IMPLEMENTATION
// Loads	WITHOUT_CLASSIFICATION	0.9999901088813848	WITHOUT_CLASSIFICATION	9.891118615195496E-6	IMPLEMENTATION
// Stores	WITHOUT_CLASSIFICATION	0.9999901137375511	WITHOUT_CLASSIFICATION	9.886262448903059E-6	IMPLEMENTATION
// jump and branch operations	WITHOUT_CLASSIFICATION	0.9999481239804363	WITHOUT_CLASSIFICATION	5.1876019563758514E-5	IMPLEMENTATION
// others	WITHOUT_CLASSIFICATION	0.9999907982258215	WITHOUT_CLASSIFICATION	9.201774178553355E-6	IMPLEMENTATION
// a case/when branch	WITHOUT_CLASSIFICATION	0.999961198355805	WITHOUT_CLASSIFICATION	3.880164419502475E-5	IMPLEMENTATION
// optimization guards	WITHOUT_CLASSIFICATION	0.9999446425600861	WITHOUT_CLASSIFICATION	5.53574399138681E-5	IMPLEMENTATION
// By default, call instructions cannot be deleted even if their results aren't used by anyone // unless we know more about what the call is, what it does, etc. // Similarly for evals, stores, returns.	WITHOUT_CLASSIFICATION	0.7364547518317477	WITHOUT_CLASSIFICATION	0.2635452481682523	IMPLEMENTATION
// Returns the containing parent scope -- can be a dynamic value (hence Operand)!	WITHOUT_CLASSIFICATION	0.999993397061199	WITHOUT_CLASSIFICATION	6.602938800953654E-6	IMPLEMENTATION
// scripts	WITHOUT_CLASSIFICATION	0.9999941151174965	WITHOUT_CLASSIFICATION	5.8848825035120966E-6	IMPLEMENTATION
// scripts and modules	WITHOUT_CLASSIFICATION	0.9999879978724998	WITHOUT_CLASSIFICATION	1.2002127500246929E-5	IMPLEMENTATION
// scripts, classes, and modules	WITHOUT_CLASSIFICATION	0.9999717264071561	WITHOUT_CLASSIFICATION	2.827359284384586E-5	IMPLEMENTATION
// methods and closures	WITHOUT_CLASSIFICATION	0.9999560632502623	WITHOUT_CLASSIFICATION	4.393674973765288E-5	IMPLEMENTATION
// create a new variable using the prefix	WITHOUT_CLASSIFICATION	0.9998893560170118	WITHOUT_CLASSIFICATION	1.1064398298815602E-4	IMPLEMENTATION
// create a new temporary variable	WITHOUT_CLASSIFICATION	0.9998351689868871	WITHOUT_CLASSIFICATION	1.64831013112817E-4	IMPLEMENTATION
// Get a new label using a generic prefix	WITHOUT_CLASSIFICATION	0.9999952891972471	WITHOUT_CLASSIFICATION	4.710802752926054E-6	IMPLEMENTATION
// Build the CFG for this scope -- supported only by methods & closures	WITHOUT_CLASSIFICATION	0.9999990089009617	WITHOUT_CLASSIFICATION	9.91099038249671E-7	IMPLEMENTATION
// Get the control flow graph for this scope -- only valid for methods & closures	WITHOUT_CLASSIFICATION	0.9999583504044459	WITHOUT_CLASSIFICATION	4.164959555413398E-5	IMPLEMENTATION
// While processing loops, this returns the loop that we are processing.	WITHOUT_CLASSIFICATION	0.9999833615116176	WITHOUT_CLASSIFICATION	1.6638488382348498E-5	IMPLEMENTATION
// Record the loop we are beginning to process	WITHOUT_CLASSIFICATION	0.9999834489731528	WITHOUT_CLASSIFICATION	1.655102684721576E-5	IMPLEMENTATION
// Indicate that we are done processing the loop	WITHOUT_CLASSIFICATION	0.999927431962966	WITHOUT_CLASSIFICATION	7.256803703411904E-5	IMPLEMENTATION
// Run the passed in compiler pass on this scope!	WITHOUT_CLASSIFICATION	0.999924862569893	WITHOUT_CLASSIFICATION	7.51374301070741E-5	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9971562462183577	WITHOUT_CLASSIFICATION	0.002843753781642241	IMPLEMENTATION
// Readline	WITHOUT_CLASSIFICATION	0.9996612927501303	WITHOUT_CLASSIFICATION	3.3870724986971226E-4	IMPLEMENTATION
// If the cfg of the method is around, print the CFG!	WITHOUT_CLASSIFICATION	0.9999840780737921	WITHOUT_CLASSIFICATION	1.5921926207925394E-5	IMPLEMENTATION
// Optimize some core class method calls for constant values	WITHOUT_CLASSIFICATION	0.9999746933372836	WITHOUT_CLASSIFICATION	2.530666271635772E-5	IMPLEMENTATION
// If 'r' is not a constant, it could actually be a compound value! // Look in our value map to see if we have a simplified value for the receiver.	WITHOUT_CLASSIFICATION	0.9999973432681831	WITHOUT_CLASSIFICATION	2.656731816931516E-6	IMPLEMENTATION
// Check if we can optimize this call based on the receiving method and receiver type // Use the simplified receiver!	WITHOUT_CLASSIFICATION	0.9990630720100654	WITHOUT_CLASSIFICATION	9.369279899346878E-4	IMPLEMENTATION
// If we got a simplified value, mark the call dead and insert a copy in its place!	WITHOUT_CLASSIFICATION	0.9999990587351331	WITHOUT_CLASSIFICATION	9.412648668824172E-7	IMPLEMENTATION
// If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!	WITHOUT_CLASSIFICATION	0.9999988693489739	WITHOUT_CLASSIFICATION	1.130651026059096E-6	IMPLEMENTATION
/* ----------- Public abstract methods ---------- */	WITHOUT_CLASSIFICATION	0.9999838049182662	WITHOUT_CLASSIFICATION	1.6195081733790973E-5	IMPLEMENTATION
/* ----------- Public methods with a default implementation ---------- */	WITHOUT_CLASSIFICATION	0.9999708239842723	WITHOUT_CLASSIFICATION	2.9176015727763415E-5	IMPLEMENTATION
// Compute meet over all "sources" and compute "destination" basic blocks that should then be processed.  // sources & targets depends on direction of the data flow problem	WITHOUT_CLASSIFICATION	0.999999900211732	WITHOUT_CLASSIFICATION	9.978826798771694E-8	IMPLEMENTATION
// If the solution has changed, add "dsts" to the work list. // No duplicates please which is why we have bbset.	WITHOUT_CLASSIFICATION	0.9999525069633723	WITHOUT_CLASSIFICATION	4.74930366276818E-5	IMPLEMENTATION
/* --------- Protected fields/methods below --------- */	WITHOUT_CLASSIFICATION	0.9999899825023072	WITHOUT_CLASSIFICATION	1.001749769279049E-5	IMPLEMENTATION
// Dataflow problem with which this node is associated // CFG node for which this node contains info.	WITHOUT_CLASSIFICATION	0.9999714870833295	WITHOUT_CLASSIFICATION	2.8512916670413018E-5	IMPLEMENTATION
/* -------------- Public fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999939783871101	WITHOUT_CLASSIFICATION	6.021612889929182E-6	IMPLEMENTATION
// ------- Abstract methods without a default implementation -------	WITHOUT_CLASSIFICATION	0.9999324119593613	WITHOUT_CLASSIFICATION	6.758804063866023E-5	IMPLEMENTATION
// ------- Default implementation methods below -------	WITHOUT_CLASSIFICATION	0.9995465306007862	WITHOUT_CLASSIFICATION	4.534693992136942E-4	IMPLEMENTATION
/* Compute Meet Over All Paths solution for this dataflow problem on the input CFG.     * This implements a standard worklist algorithm. */	WITHOUT_CLASSIFICATION	0.9999760650957354	WITHOUT_CLASSIFICATION	2.3934904264597746E-5	IMPLEMENTATION
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9998438746663721	WITHOUT_CLASSIFICATION	1.5612533362782026E-4	IMPLEMENTATION
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9998438746663721	WITHOUT_CLASSIFICATION	1.5612533362782026E-4	IMPLEMENTATION
/* -------------- Packaged/protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999931748607853	WITHOUT_CLASSIFICATION	6.825139214580942E-6	IMPLEMENTATION
// We want unique ids for dataflow variables	WITHOUT_CLASSIFICATION	0.9999069530541896	WITHOUT_CLASSIFICATION	9.30469458103455E-5	IMPLEMENTATION
/* -------------- Protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999931928099127	WITHOUT_CLASSIFICATION	6.807190087333942E-6	IMPLEMENTATION
/* -------------- Private fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999949947000047	WITHOUT_CLASSIFICATION	5.005299995259377E-6	IMPLEMENTATION
// Initialize all flow graph nodes 	WITHOUT_CLASSIFICATION	0.9999534568154638	WITHOUT_CLASSIFICATION	4.654318453615683E-5	IMPLEMENTATION
/* Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses */	WITHOUT_CLASSIFICATION	0.9999999364865284	WITHOUT_CLASSIFICATION	6.351347155433073E-8	IMPLEMENTATION
/* ******************** PUBLIC INTERFACE ******************* */	WITHOUT_CLASSIFICATION	0.9999825320903396	WITHOUT_CLASSIFICATION	1.7467909660431556E-5	IMPLEMENTATION
// Unique ID assigned to this variable	WITHOUT_CLASSIFICATION	0.9989827428411847	WITHOUT_CLASSIFICATION	0.0010172571588153631	IMPLEMENTATION
// start out with a default RubyObject allocator	WITHOUT_CLASSIFICATION	0.9999949905960155	WITHOUT_CLASSIFICATION	5.0094039844948975E-6	IMPLEMENTATION
// switch to an allocator based on a default constructor	WITHOUT_CLASSIFICATION	0.9999819298488364	WITHOUT_CLASSIFICATION	1.8070151163583436E-5	IMPLEMENTATION
/* ----------- Public Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999862412195132	WITHOUT_CLASSIFICATION	1.3758780486803868E-5	IMPLEMENTATION
// class or module	WITHOUT_CLASSIFICATION	0.9998976578195616	WITHOUT_CLASSIFICATION	1.0234218043831795E-4	IMPLEMENTATION
// OUT = UNION(IN(succs))	WITHOUT_CLASSIFICATION	0.9999358416114632	WITHOUT_CLASSIFICATION	6.415838853689388E-5	IMPLEMENTATION
// Traverse the instructions in this basic block in reverse order!	WITHOUT_CLASSIFICATION	0.9996852532180251	WITHOUT_CLASSIFICATION	3.147467819747854E-4	IMPLEMENTATION
// v is defined => It is no longer live before 'i'	WITHOUT_CLASSIFICATION	0.9999994658080072	WITHOUT_CLASSIFICATION	5.341919928514876E-7	IMPLEMENTATION
// IN is the same!	WITHOUT_CLASSIFICATION	0.9998736841879434	WITHOUT_CLASSIFICATION	1.2631581205663344E-4	IMPLEMENTATION
// IN changed!	WITHOUT_CLASSIFICATION	0.9996721258145881	WITHOUT_CLASSIFICATION	3.2787418541190043E-4	IMPLEMENTATION
/* ---------- Protected / package fields, methods --------- */	WITHOUT_CLASSIFICATION	0.999969128863316	WITHOUT_CLASSIFICATION	3.087113668395438E-5	IMPLEMENTATION
// If 'v' is not live at the instruction site, and it has no side effects, mark it dead!	WITHOUT_CLASSIFICATION	0.9999816256228173	WITHOUT_CLASSIFICATION	1.8374377182766767E-5	IMPLEMENTATION
// Do not mark this instruction's operands live if the instruction itself is dead!	WITHOUT_CLASSIFICATION	0.9988772452334207	WITHOUT_CLASSIFICATION	0.0011227547665792579	IMPLEMENTATION
/* ---------- Private fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999860051944162	WITHOUT_CLASSIFICATION	1.399480558381712E-5	IMPLEMENTATION
// Variables live at entry of this node // Variables live at exit of node // Temporary set of live variables // Size of the "_in" and "_out" bit sets 	WITHOUT_CLASSIFICATION	0.9998572988734001	WITHOUT_CLASSIFICATION	1.427011265998694E-4	IMPLEMENTATION
// Used during optimization passes to propagate type and other information	WITHOUT_CLASSIFICATION	0.9999635688508448	WITHOUT_CLASSIFICATION	3.643114915526787E-5	IMPLEMENTATION
// Does this instruction have side effects as a result of its operation // This information is used in optimization phases to impact dead code elimination // and other optimization passes	WITHOUT_CLASSIFICATION	0.9999999581827089	WITHOUT_CLASSIFICATION	4.1817291042813856E-8	IMPLEMENTATION
/* --------- "Abstract"/"please-override" methods --------- */	WITHOUT_CLASSIFICATION	0.9999804311793855	WITHOUT_CLASSIFICATION	1.956882061444761E-5	IMPLEMENTATION
/* Array of all operands for this instruction */	WITHOUT_CLASSIFICATION	0.9999900296252924	WITHOUT_CLASSIFICATION	9.970374707615287E-6	IMPLEMENTATION
/* List of all variables used by all operands of this instruction */	WITHOUT_CLASSIFICATION	0.999992438637184	WITHOUT_CLASSIFICATION	7.5613628159512735E-6	IMPLEMENTATION
/*      * This method takes as input a map of operands to their values, and outputs     *     * If the value map provides a value for any of the instruction's operands     * this method is expected to replace the original operands with the simplified values.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify     */	WITHOUT_CLASSIFICATION	0.9999979364582959	WITHOUT_CLASSIFICATION	2.063541704053843E-6	IMPLEMENTATION
// By default, no simplifications!	WITHOUT_CLASSIFICATION	0.9999323851247341	WITHOUT_CLASSIFICATION	6.761487526578161E-5	IMPLEMENTATION
// Can this call lead to ruby code getting modified?   // If we don't know what method we are calling, we assume it can (pessimistic, but safe!) // If we do know the target method, we ask the method itself whether it modifies ruby code	WITHOUT_CLASSIFICATION	0.9961999064452821	WITHOUT_CLASSIFICATION	0.0038000935547178203	IMPLEMENTATION
// By default, return instructions cannot be deleted	WITHOUT_CLASSIFICATION	0.9999023312171909	WITHOUT_CLASSIFICATION	9.766878280912365E-5	IMPLEMENTATION
// If true, returns the rest of the array starting at the index	WITHOUT_CLASSIFICATION	0.9999569216219639	WITHOUT_CLASSIFICATION	4.3078378036151404E-5	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999786137619954	WITHOUT_CLASSIFICATION	2.1386238004583305E-5	IMPLEMENTATION
// Map of label & basic blocks with that label	WITHOUT_CLASSIFICATION	0.9999975244173619	WITHOUT_CLASSIFICATION	2.4755826380723213E-6	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999786137619954	WITHOUT_CLASSIFICATION	2.1386238004583305E-5	IMPLEMENTATION
// You can only value-replace atomic values	WITHOUT_CLASSIFICATION	0.9999984487278639	WITHOUT_CLASSIFICATION	1.5512721361523876E-6	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999926661246265	WITHOUT_CLASSIFICATION	7.333875373598868E-6	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999926661246265	WITHOUT_CLASSIFICATION	7.333875373598868E-6	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999926661246265	WITHOUT_CLASSIFICATION	7.333875373598868E-6	IMPLEMENTATION
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.999994619516619	WITHOUT_CLASSIFICATION	5.380483380921453E-6	IMPLEMENTATION
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.999994619516619	WITHOUT_CLASSIFICATION	5.380483380921453E-6	IMPLEMENTATION
// The operand that this attribute targets //    DEFERRED //    AttributeValue _val;       // Attribute value	WITHOUT_CLASSIFICATION	0.9999774158301846	WITHOUT_CLASSIFICATION	2.2584169815442547E-5	IMPLEMENTATION
// Arrays, Ranges, etc. are compound values // Variables, fixnums, floats, etc. are "atomic" values	WITHOUT_CLASSIFICATION	0.9999979975192165	WITHOUT_CLASSIFICATION	2.0024807835526345E-6	IMPLEMENTATION
// Get the target class of this operand, if we know it!	WITHOUT_CLASSIFICATION	0.9999419565535761	WITHOUT_CLASSIFICATION	5.804344642386978E-5	IMPLEMENTATION
// The following constants capture pre-known static call sites -- used to implement ruby internals	WITHOUT_CLASSIFICATION	0.8974685364901762	WITHOUT_CLASSIFICATION	0.1025314635098238	IMPLEMENTATION
/* Nothing to do by default */	WITHOUT_CLASSIFICATION	0.9999997184855375	WITHOUT_CLASSIFICATION	2.8151446254274787E-7	IMPLEMENTATION
// Map of label & basic blocks which are waiting for a bb with that label	WITHOUT_CLASSIFICATION	0.9999997899673025	WITHOUT_CLASSIFICATION	2.1003269744317184E-7	IMPLEMENTATION
// Init before building basic blocks below!	WITHOUT_CLASSIFICATION	0.9999616289019433	WITHOUT_CLASSIFICATION	3.837109805676641E-5	IMPLEMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999917575747229	WITHOUT_CLASSIFICATION	8.242425277170333E-6	IMPLEMENTATION
// Scope (method/closure) to which this cfg belongs // Entry BB -- dummy // Exit BB -- dummy // The actual graph // Next available basic block id	WITHOUT_CLASSIFICATION	0.9996159767292135	WITHOUT_CLASSIFICATION	3.840232707864772E-4	IMPLEMENTATION
// Jump instruction bbs dont add an edge to the succeeding bb by default	WITHOUT_CLASSIFICATION	0.9999769464180875	WITHOUT_CLASSIFICATION	2.3053581912533575E-5	IMPLEMENTATION
// Add forward ref. edges	WITHOUT_CLASSIFICATION	0.9999553399564494	WITHOUT_CLASSIFICATION	4.466004355050554E-5	IMPLEMENTATION
// currBB cannot be null!	WITHOUT_CLASSIFICATION	0.9999942028712135	WITHOUT_CLASSIFICATION	5.797128786508552E-6	IMPLEMENTATION
// Add a forward reference from tgt -> currBB	WITHOUT_CLASSIFICATION	0.9999986024632997	WITHOUT_CLASSIFICATION	1.3975367002126109E-6	IMPLEMENTATION
// root-level logic	WITHOUT_CLASSIFICATION	0.9989405784526907	WITHOUT_CLASSIFICATION	0.0010594215473093405	IMPLEMENTATION
// root-level methods	WITHOUT_CLASSIFICATION	0.9999372570003932	WITHOUT_CLASSIFICATION	6.274299960677302E-5	IMPLEMENTATION
// root-level classes	WITHOUT_CLASSIFICATION	0.9999122772368804	WITHOUT_CLASSIFICATION	8.772276311962969E-5	IMPLEMENTATION
//        case 4: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); //            break; //        case 5: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); //            break;	WITHOUT_CLASSIFICATION	0.9998861243143837	WITHOUT_CLASSIFICATION	1.1387568561626629E-4	IMPLEMENTATION
// load receiver	WITHOUT_CLASSIFICATION	0.9996455119804415	WITHOUT_CLASSIFICATION	3.5448801955852214E-4	IMPLEMENTATION
// load receiver	WITHOUT_CLASSIFICATION	0.9996455119804415	WITHOUT_CLASSIFICATION	3.5448801955852214E-4	IMPLEMENTATION
// receiver	WITHOUT_CLASSIFICATION	0.9996620508925206	WITHOUT_CLASSIFICATION	3.3794910747943224E-4	IMPLEMENTATION
// load arguments	WITHOUT_CLASSIFICATION	0.9997759674027579	WITHOUT_CLASSIFICATION	2.24032597242087E-4	IMPLEMENTATION
// load arguments	WITHOUT_CLASSIFICATION	0.9997759674027579	WITHOUT_CLASSIFICATION	2.24032597242087E-4	IMPLEMENTATION
//        case 4: //        case 5:	WITHOUT_CLASSIFICATION	0.9998766312303929	WITHOUT_CLASSIFICATION	1.233687696069576E-4	IMPLEMENTATION
// Object[] args	WITHOUT_CLASSIFICATION	0.9997499188100748	WITHOUT_CLASSIFICATION	2.500811899252574E-4	IMPLEMENTATION
// load handle	WITHOUT_CLASSIFICATION	0.9965187196072876	WITHOUT_CLASSIFICATION	0.0034812803927125363	IMPLEMENTATION
// args array	WITHOUT_CLASSIFICATION	0.9997892603218316	WITHOUT_CLASSIFICATION	2.1073967816837168E-4	IMPLEMENTATION
// i'th argument	WITHOUT_CLASSIFICATION	0.9998808810766164	WITHOUT_CLASSIFICATION	1.1911892338357985E-4	IMPLEMENTATION
// invoke specific arity version	WITHOUT_CLASSIFICATION	0.9999558777410256	WITHOUT_CLASSIFICATION	4.412225897437519E-5	IMPLEMENTATION
// Object arg0	WITHOUT_CLASSIFICATION	0.999763794743517	WITHOUT_CLASSIFICATION	2.3620525648301508E-4	IMPLEMENTATION
// useful for code completion inside the IRB	WITHOUT_CLASSIFICATION	0.9999427571216855	WITHOUT_CLASSIFICATION	5.7242878314563595E-5	IMPLEMENTATION
// No editing before startPos	WITHOUT_CLASSIFICATION	0.9999837405562235	WITHOUT_CLASSIFICATION	1.6259443776473158E-5	IMPLEMENTATION
// no silly ticks!	WITHOUT_CLASSIFICATION	0.9998294377506957	WITHOUT_CLASSIFICATION	1.705622493044231E-4	IMPLEMENTATION
// no candidates? Fail.	WITHOUT_CLASSIFICATION	0.9999716506022021	WITHOUT_CLASSIFICATION	2.8349397797977114E-5	IMPLEMENTATION
// at end	WITHOUT_CLASSIFICATION	0.9999720522266194	WITHOUT_CLASSIFICATION	2.7947773380662925E-5	IMPLEMENTATION
// undo check	WITHOUT_CLASSIFICATION	0.9995619797023408	WITHOUT_CLASSIFICATION	4.380202976591576E-4	IMPLEMENTATION
// Explicit reference to these vars as symbols...	WITHOUT_CLASSIFICATION	0.999986091669704	WITHOUT_CLASSIFICATION	1.3908330296054923E-5	IMPLEMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999917575747229	WITHOUT_CLASSIFICATION	8.242425277170333E-6	IMPLEMENTATION
//\t\n\"\\'`@$><=;|&{(	WITHOUT_CLASSIFICATION	0.9998286659029623	WITHOUT_CLASSIFICATION	1.7133409703781356E-4	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.9998901045003092	WITHOUT_CLASSIFICATION	1.0989549969069688E-4	IMPLEMENTATION
// no check for '*'	WITHOUT_CLASSIFICATION	0.9997538397789828	WITHOUT_CLASSIFICATION	2.461602210172091E-4	IMPLEMENTATION
// no check for '*'	WITHOUT_CLASSIFICATION	0.9997538397789828	WITHOUT_CLASSIFICATION	2.461602210172091E-4	IMPLEMENTATION
// Binding provided for scope, use it	WITHOUT_CLASSIFICATION	0.9998259356498141	WITHOUT_CLASSIFICATION	1.7406435018586265E-4	IMPLEMENTATION
// this is ensured by the callers	WITHOUT_CLASSIFICATION	0.9999281229410588	WITHOUT_CLASSIFICATION	7.18770589412229E-5	IMPLEMENTATION
// no binding, just eval in "current" frame (caller's frame)	WITHOUT_CLASSIFICATION	0.9999979680327892	WITHOUT_CLASSIFICATION	2.03196721075533E-6	IMPLEMENTATION
// restore position	WITHOUT_CLASSIFICATION	0.9998787548560256	WITHOUT_CLASSIFICATION	1.2124514397445936E-4	IMPLEMENTATION
/* Something like cvar_cbase() from eval.c, factored out for the benefit     * of all the classvar-related node evaluations */	WITHOUT_CLASSIFICATION	0.9999948469700087	WITHOUT_CLASSIFICATION	5.153029991228455E-6	IMPLEMENTATION
// Used by the compiler to simplify arg processing	WITHOUT_CLASSIFICATION	0.999968743801948	WITHOUT_CLASSIFICATION	3.125619805205773E-5	IMPLEMENTATION
// JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace	WITHOUT_CLASSIFICATION	0.9999963857180063	WITHOUT_CLASSIFICATION	3.6142819938176787E-6	IMPLEMENTATION
// MRI does similar thing on MacOS X with 'EditLine wrapper'.	WITHOUT_CLASSIFICATION	0.999640463113062	WITHOUT_CLASSIFICATION	3.595368869381228E-4	IMPLEMENTATION
// We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)	WITHOUT_CLASSIFICATION	0.9999918105468103	WITHOUT_CLASSIFICATION	8.189453189709812E-6	IMPLEMENTATION
// JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)	WITHOUT_CLASSIFICATION	0.9999972094382971	WITHOUT_CLASSIFICATION	2.7905617029361156E-6	IMPLEMENTATION
// not overridden, let's go	WITHOUT_CLASSIFICATION	0.9994902842679545	WITHOUT_CLASSIFICATION	5.097157320454828E-4	IMPLEMENTATION
/* Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8() */	WITHOUT_CLASSIFICATION	0.9999614457383227	WITHOUT_CLASSIFICATION	3.855426167733167E-5	IMPLEMENTATION
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.8973139729701756	WITHOUT_CLASSIFICATION	0.1026860270298244	IMPLEMENTATION
// Complete using a Proc object	WITHOUT_CLASSIFICATION	0.9999741840002474	WITHOUT_CLASSIFICATION	2.5815999752649854E-5	IMPLEMENTATION
// clear basename so it's anonymous when raising	WITHOUT_CLASSIFICATION	0.9999881503109338	WITHOUT_CLASSIFICATION	1.1849689066239431E-5	IMPLEMENTATION
// These are not really used by timeout, but exposed for compatibility	WITHOUT_CLASSIFICATION	0.9999784864781968	WITHOUT_CLASSIFICATION	2.151352180322896E-5	IMPLEMENTATION
// Timeout module methods	WITHOUT_CLASSIFICATION	0.9999312252565574	WITHOUT_CLASSIFICATION	6.877474344259674E-5	IMPLEMENTATION
// Toplevel defines	WITHOUT_CLASSIFICATION	0.999665617099922	WITHOUT_CLASSIFICATION	3.343829000781348E-4	IMPLEMENTATION
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.999992829877453	WITHOUT_CLASSIFICATION	7.170122547024378E-6	IMPLEMENTATION
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999946360331339	WITHOUT_CLASSIFICATION	5.363966866154344E-6	IMPLEMENTATION
// if it's the exception we're expecting	WITHOUT_CLASSIFICATION	0.9999845269870775	WITHOUT_CLASSIFICATION	1.5473012922503836E-5	IMPLEMENTATION
// and we were given a specific exception	WITHOUT_CLASSIFICATION	0.999913781241833	WITHOUT_CLASSIFICATION	8.621875816693708E-5	IMPLEMENTATION
// otherwise, rethrow	WITHOUT_CLASSIFICATION	0.9999525292419629	WITHOUT_CLASSIFICATION	4.747075803723148E-5	IMPLEMENTATION
// // Remove the Executor task now, to avoid cancelled tasks accumulating // until an Executor thread can schedule and remove them //	WITHOUT_CLASSIFICATION	0.9999735512548412	WITHOUT_CLASSIFICATION	2.6448745158734346E-5	IMPLEMENTATION
// // If the task was scheduled, wait for it to finish before polling // for the exception it would have thrown. //	WITHOUT_CLASSIFICATION	0.999822732466184	WITHOUT_CLASSIFICATION	1.7726753381597002E-4	IMPLEMENTATION
// NetProtocolBufferedIO	WITHOUT_CLASSIFICATION	0.9999441559003632	WITHOUT_CLASSIFICATION	5.5844099636791055E-5	IMPLEMENTATION
/* When a length is given, read_string acts like get_bytes */	WITHOUT_CLASSIFICATION	0.9999364921360744	WITHOUT_CLASSIFICATION	6.350786392566542E-5	IMPLEMENTATION
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9999056029083304	WITHOUT_CLASSIFICATION	9.43970916696765E-5	IMPLEMENTATION
// ARRAY and STRUCT are only used internally	WITHOUT_CLASSIFICATION	0.9999925960287934	WITHOUT_CLASSIFICATION	7.403971206551073E-6	IMPLEMENTATION
// If no release method is defined, then memory leaks will result.	WITHOUT_CLASSIFICATION	0.9999964560581179	WITHOUT_CLASSIFICATION	3.543941882178404E-6	IMPLEMENTATION
/*     * This variant of newStruct is called from StructLayoutBuilder     */	WITHOUT_CLASSIFICATION	0.9999999008491584	WITHOUT_CLASSIFICATION	9.9150841652306E-8	IMPLEMENTATION
// This also handles unsigned int -> negative signed int conversion	WITHOUT_CLASSIFICATION	0.9999978147166437	WITHOUT_CLASSIFICATION	2.185283356160291E-6	IMPLEMENTATION
// Windows is LLP64	WITHOUT_CLASSIFICATION	0.9999293518594649	WITHOUT_CLASSIFICATION	7.064814053513453E-5	IMPLEMENTATION
// Older JDK on linux map 'c' to 'libc.so' which doesn't work	WITHOUT_CLASSIFICATION	0.9999960687148295	WITHOUT_CLASSIFICATION	3.931285170545881E-6	IMPLEMENTATION
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999781935019023	WITHOUT_CLASSIFICATION	2.180649809761892E-5	IMPLEMENTATION
// $blah	WITHOUT_CLASSIFICATION	0.9999901088813848	WITHOUT_CLASSIFICATION	9.891118615195496E-6	IMPLEMENTATION
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9999056029083304	WITHOUT_CLASSIFICATION	9.43970916696765E-5	IMPLEMENTATION
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999986966185865	WITHOUT_CLASSIFICATION	1.3033814134566305E-6	IMPLEMENTATION
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999781935019023	WITHOUT_CLASSIFICATION	2.180649809761892E-5	IMPLEMENTATION
// // Keep a reference to the temporary memory in the cache so it does // not get freed by the GC until the struct is freed //	WITHOUT_CLASSIFICATION	0.9999894020519505	WITHOUT_CLASSIFICATION	1.0597948049560432E-5	IMPLEMENTATION
// Add Pointer::NULL as a constant	WITHOUT_CLASSIFICATION	0.9999364749942068	WITHOUT_CLASSIFICATION	6.352500579316585E-5	IMPLEMENTATION
// Create the ordered list of field names from the map	WITHOUT_CLASSIFICATION	0.999997802708805	WITHOUT_CLASSIFICATION	2.1972911949814555E-6	IMPLEMENTATION
// Assemble a [ :name, offset ] array	WITHOUT_CLASSIFICATION	0.9999627867793159	WITHOUT_CLASSIFICATION	3.72132206839762E-5	IMPLEMENTATION
//                case FLOAT:	WITHOUT_CLASSIFICATION	0.9999229495011671	WITHOUT_CLASSIFICATION	7.705049883281906E-5	IMPLEMENTATION
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999885709897047	WITHOUT_CLASSIFICATION	1.1429010295269793E-5	IMPLEMENTATION
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999885709897047	WITHOUT_CLASSIFICATION	1.1429010295269793E-5	IMPLEMENTATION
// No auto cleanup needed	WITHOUT_CLASSIFICATION	0.6265861068745223	IMPLEMENTATION	0.37341389312547774	WITHOUT_CLASSIFICATION
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.999733071817797	WITHOUT_CLASSIFICATION	2.6692818220294055E-4	IMPLEMENTATION
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9997299261638626	WITHOUT_CLASSIFICATION	2.70073836137393E-4	IMPLEMENTATION
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9997299261638626	WITHOUT_CLASSIFICATION	2.70073836137393E-4	IMPLEMENTATION
/*         * If there is exactly _one_ callback argument to the function,         * then a block can be given and automatically subsituted for the callback         * parameter.         */	WITHOUT_CLASSIFICATION	0.999999813441749	WITHOUT_CLASSIFICATION	1.8655825095869995E-7	IMPLEMENTATION
/*------------------------------------------------------------------------*/	WITHOUT_CLASSIFICATION	0.9997254911986895	WITHOUT_CLASSIFICATION	2.7450880131056003E-4	IMPLEMENTATION
//AF_INET	WITHOUT_CLASSIFICATION	0.9999696503844563	WITHOUT_CLASSIFICATION	3.034961554371392E-5	IMPLEMENTATION
//AF_INET	WITHOUT_CLASSIFICATION	0.9999696503844563	WITHOUT_CLASSIFICATION	3.034961554371392E-5	IMPLEMENTATION
// RubyUNIXServer	WITHOUT_CLASSIFICATION	0.9996612927501303	WITHOUT_CLASSIFICATION	3.3870724986971226E-4	IMPLEMENTATION
// line 321	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// // Set up for potentially fast-int operations //	WITHOUT_CLASSIFICATION	0.999962188659904	WITHOUT_CLASSIFICATION	3.781134009586708E-5	IMPLEMENTATION
// // Hook up the MemoryPointer class if its not already there //	WITHOUT_CLASSIFICATION	0.9998688832292227	WITHOUT_CLASSIFICATION	1.3111677077713265E-4	IMPLEMENTATION
// This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and // (2) Socket.getChannel() seems to return null in some cases	WITHOUT_CLASSIFICATION	0.999999768956756	WITHOUT_CLASSIFICATION	2.3104324403718943E-7	IMPLEMENTATION
// no UNIXSockets on Windows	WITHOUT_CLASSIFICATION	0.9999713940988487	WITHOUT_CLASSIFICATION	2.8605901151353427E-5	IMPLEMENTATION
// Sockaddr_un has different structure on different platforms. // See JRUBY-2213 for more details.	WITHOUT_CLASSIFICATION	0.9996390937880164	WITHOUT_CLASSIFICATION	3.609062119836091E-4	IMPLEMENTATION
// There is something valid in the sun_path component	WITHOUT_CLASSIFICATION	0.999995883812087	WITHOUT_CLASSIFICATION	4.116187912950178E-6	IMPLEMENTATION
// RubyIPSocket	WITHOUT_CLASSIFICATION	0.9996612927501303	WITHOUT_CLASSIFICATION	3.3870724986971226E-4	IMPLEMENTATION
// host is nil or the empty string, bind to INADDR_ANY	WITHOUT_CLASSIFICATION	0.9999638884976199	WITHOUT_CLASSIFICATION	3.611150238016005E-5	IMPLEMENTATION
// host and port given	WITHOUT_CLASSIFICATION	0.9997137280228056	WITHOUT_CLASSIFICATION	2.8627197719439127E-4	IMPLEMENTATION
// RubyUDPSocket	WITHOUT_CLASSIFICATION	0.9996612927501303	WITHOUT_CLASSIFICATION	3.3870724986971226E-4	IMPLEMENTATION
// By default we always reverse lookup unless do_not_reverse_lookup set.	WITHOUT_CLASSIFICATION	0.9999765289906629	WITHOUT_CLASSIFICATION	2.347100933711378E-5	IMPLEMENTATION
// make sure descriptor is registered	WITHOUT_CLASSIFICATION	0.9999509794639664	WITHOUT_CLASSIFICATION	4.902053603360906E-5	IMPLEMENTATION
// continue with normal initialization	WITHOUT_CLASSIFICATION	0.9991329973054968	WITHOUT_CLASSIFICATION	8.670026945031608E-4	IMPLEMENTATION
// recv returns nil on EOF	WITHOUT_CLASSIFICATION	0.9999371929138251	WITHOUT_CLASSIFICATION	6.280708617490296E-5	IMPLEMENTATION
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9984228169927926	WITHOUT_CLASSIFICATION	0.001577183007207459	IMPLEMENTATION
// RubyBasicSocket	WITHOUT_CLASSIFICATION	0.9996612927501303	WITHOUT_CLASSIFICATION	3.3870724986971226E-4	IMPLEMENTATION
// we don't have to define any that we don't support; see socket.c	WITHOUT_CLASSIFICATION	0.9999855620500359	WITHOUT_CLASSIFICATION	1.4437949964094364E-5	IMPLEMENTATION
// mandatory constants we haven't implemented	WITHOUT_CLASSIFICATION	0.8747886964590388	WITHOUT_CLASSIFICATION	0.12521130354096133	IMPLEMENTATION
// constants webrick crashes without	WITHOUT_CLASSIFICATION	0.9999472389769487	WITHOUT_CLASSIFICATION	5.276102305123618E-5	IMPLEMENTATION
// More constants needed by specs	WITHOUT_CLASSIFICATION	0.9297651903538862	WITHOUT_CLASSIFICATION	0.07023480964611382	IMPLEMENTATION
// normal file descriptor..try to work with it	WITHOUT_CLASSIFICATION	0.9998039315578728	WITHOUT_CLASSIFICATION	1.9606844212716838E-4	IMPLEMENTATION
// AF_INET	WITHOUT_CLASSIFICATION	0.9999901088813848	WITHOUT_CLASSIFICATION	9.891118615195496E-6	IMPLEMENTATION
// 255.255.255.255	WITHOUT_CLASSIFICATION	0.9996612927501303	WITHOUT_CLASSIFICATION	3.3870724986971226E-4	IMPLEMENTATION
// 0.0.0.0	WITHOUT_CLASSIFICATION	0.9999901088813848	WITHOUT_CLASSIFICATION	9.891118615195496E-6	IMPLEMENTATION
//def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)	WITHOUT_CLASSIFICATION	0.9997486311134012	WITHOUT_CLASSIFICATION	2.513688865988116E-4	IMPLEMENTATION
// line 323	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999558418399798	WITHOUT_CLASSIFICATION	4.4158160020279904E-5	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999558418399798	WITHOUT_CLASSIFICATION	4.4158160020279904E-5	IMPLEMENTATION
// ok, it's a socket...set values accordingly // just using AF_INET since we can't tell from SocketChannel...	WITHOUT_CLASSIFICATION	0.9999999629574985	WITHOUT_CLASSIFICATION	3.704250148226193E-8	IMPLEMENTATION
// datagram, set accordingly // again, AF_INET	WITHOUT_CLASSIFICATION	0.9999394749765163	WITHOUT_CLASSIFICATION	6.052502348368968E-5	IMPLEMENTATION
//IRubyObject family = args[2];	WITHOUT_CLASSIFICATION	0.9996846315177286	WITHOUT_CLASSIFICATION	3.153684822714524E-4	IMPLEMENTATION
// When Socket::AI_PASSIVE and host is nil, return 'any' address. 	WITHOUT_CLASSIFICATION	0.9998775135861003	WITHOUT_CLASSIFICATION	1.2248641389960507E-4	IMPLEMENTATION
// The value of 1 is for Socket::AI_PASSIVE.	WITHOUT_CLASSIFICATION	0.9999974025719246	WITHOUT_CLASSIFICATION	2.597428075386291E-6	IMPLEMENTATION
// RubySocket	WITHOUT_CLASSIFICATION	0.9996612927501303	WITHOUT_CLASSIFICATION	3.3870724986971226E-4	IMPLEMENTATION
// numeric host, use it for port	WITHOUT_CLASSIFICATION	0.999846835149785	WITHOUT_CLASSIFICATION	1.531648502150134E-4	IMPLEMENTATION
//            e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999092035237773	WITHOUT_CLASSIFICATION	9.079647622268484E-5	IMPLEMENTATION
// we were woken up without being selected...poll for thread events and go back to sleep	WITHOUT_CLASSIFICATION	0.9999672396178095	WITHOUT_CLASSIFICATION	3.2760382190469056E-5	IMPLEMENTATION
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9997709763842612	WITHOUT_CLASSIFICATION	2.2902361573885337E-4	IMPLEMENTATION
// no connection immediately accepted, let them try again	WITHOUT_CLASSIFICATION	0.9999301326243761	WITHOUT_CLASSIFICATION	6.986737562391889E-5	IMPLEMENTATION
// do nothing, just exit	WITHOUT_CLASSIFICATION	0.9999854484756427	WITHOUT_CLASSIFICATION	1.455152435725452E-5	IMPLEMENTATION
//nativeThread.setPriority(priority);	WITHOUT_CLASSIFICATION	0.9997254911986895	WITHOUT_CLASSIFICATION	2.7450880131056003E-4	IMPLEMENTATION
// set thread context JRuby classloader here, for Ruby-owned thread	WITHOUT_CLASSIFICATION	0.9999389476011319	WITHOUT_CLASSIFICATION	6.10523988681044E-5	IMPLEMENTATION
// uber-ThreadKill catcher, since it should always just mean "be dead"	WITHOUT_CLASSIFICATION	0.9999783891561713	WITHOUT_CLASSIFICATION	2.1610843828631367E-5	IMPLEMENTATION
// Call the thread's code	WITHOUT_CLASSIFICATION	0.9999522383511553	WITHOUT_CLASSIFICATION	4.7761648844716575E-5	IMPLEMENTATION
// Someone called exit!, so we need to kill the main thread	WITHOUT_CLASSIFICATION	0.9996686775461225	WITHOUT_CLASSIFICATION	3.313224538774394E-4	IMPLEMENTATION
// restore context classloader, in case we're using a thread pool	WITHOUT_CLASSIFICATION	0.9999792761201375	WITHOUT_CLASSIFICATION	2.072387986243663E-5	IMPLEMENTATION
// be dead	WITHOUT_CLASSIFICATION	0.9999959424864933	WITHOUT_CLASSIFICATION	4.057513506749036E-6	IMPLEMENTATION
// loop until a context is available, to clean up softrefs that might have been collected	WITHOUT_CLASSIFICATION	0.9997341099532782	WITHOUT_CLASSIFICATION	2.6589004672176477E-4	IMPLEMENTATION
// all threads in ruby thread group plus main thread	WITHOUT_CLASSIFICATION	0.9999693647575565	WITHOUT_CLASSIFICATION	3.0635242443463614E-5	IMPLEMENTATION
// thread is not alive, skip it	WITHOUT_CLASSIFICATION	0.9915640829260708	WITHOUT_CLASSIFICATION	0.008435917073929306	IMPLEMENTATION
// future is done or cancelled, skip it	WITHOUT_CLASSIFICATION	0.9998561642995936	WITHOUT_CLASSIFICATION	1.438357004064676E-4	IMPLEMENTATION
// first, check if the sender has unreceived mail	WITHOUT_CLASSIFICATION	0.9999685418393331	WITHOUT_CLASSIFICATION	3.145816066684766E-5	IMPLEMENTATION
// then deliver mail to the target	WITHOUT_CLASSIFICATION	0.999974078177744	WITHOUT_CLASSIFICATION	2.5921822256045832E-5	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999086626718013	WITHOUT_CLASSIFICATION	9.133732819870448E-5	IMPLEMENTATION
// Define a second version that doesn't take a block, so we have unique code paths for both cases.	WITHOUT_CLASSIFICATION	0.9999989338824208	WITHOUT_CLASSIFICATION	1.0661175792008133E-6	IMPLEMENTATION
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9999221698199051	WITHOUT_CLASSIFICATION	7.783018009481907E-5	IMPLEMENTATION
// main body	WITHOUT_CLASSIFICATION	0.9998530287679127	WITHOUT_CLASSIFICATION	1.4697123208733036E-4	IMPLEMENTATION
// return jump handling	WITHOUT_CLASSIFICATION	0.999913127563162	WITHOUT_CLASSIFICATION	8.687243683801695E-5	IMPLEMENTATION
// finally	WITHOUT_CLASSIFICATION	0.999990754700236	WITHOUT_CLASSIFICATION	9.245299763991568E-6	IMPLEMENTATION
// return result if we're still good	WITHOUT_CLASSIFICATION	0.9999532066426897	WITHOUT_CLASSIFICATION	4.679335731029119E-5	IMPLEMENTATION
// redo jump handling	WITHOUT_CLASSIFICATION	0.9998769505157007	WITHOUT_CLASSIFICATION	1.2304948429923341E-4	IMPLEMENTATION
// clear the redo	WITHOUT_CLASSIFICATION	0.9998674488354564	WITHOUT_CLASSIFICATION	1.325511645434981E-4	IMPLEMENTATION
// get runtime, create jump error, and throw it	WITHOUT_CLASSIFICATION	0.9998729681216146	WITHOUT_CLASSIFICATION	1.270318783854208E-4	IMPLEMENTATION
// throw redo error if we're still good	WITHOUT_CLASSIFICATION	0.9988041408304905	WITHOUT_CLASSIFICATION	0.0011958591695095295	IMPLEMENTATION
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9997140357185597	WITHOUT_CLASSIFICATION	2.8596428144031576E-4	IMPLEMENTATION
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9996695543987946	WITHOUT_CLASSIFICATION	3.304456012054212E-4	IMPLEMENTATION
// No required specified, check actual number of required args	WITHOUT_CLASSIFICATION	0.9997978152478242	WITHOUT_CLASSIFICATION	2.0218475217573015E-4	IMPLEMENTATION
// actual required is less than 3, so we use specific arity	WITHOUT_CLASSIFICATION	0.9998330949295638	WITHOUT_CLASSIFICATION	1.6690507043618015E-4	IMPLEMENTATION
// actual required is greater than 3, raise error (we don't support actual required > 3)	WITHOUT_CLASSIFICATION	0.9920307164596809	WITHOUT_CLASSIFICATION	0.007969283540319129	IMPLEMENTATION
// simple path, no multimethod	WITHOUT_CLASSIFICATION	0.9999797289269139	WITHOUT_CLASSIFICATION	2.0271073086092997E-5	IMPLEMENTATION
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9997934383719508	WITHOUT_CLASSIFICATION	2.0656162804927469E-4	IMPLEMENTATION
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9997934383719508	WITHOUT_CLASSIFICATION	2.0656162804927469E-4	IMPLEMENTATION
// normal all-rest method	WITHOUT_CLASSIFICATION	0.9998254386169619	WITHOUT_CLASSIFICATION	1.7456138303806128E-4	IMPLEMENTATION
// for zero, one, two, three arities, JavaMethod.JavaMethod*.call(...IRubyObject[] args...) will check	WITHOUT_CLASSIFICATION	0.9999841935120497	WITHOUT_CLASSIFICATION	1.5806487950273453E-5	IMPLEMENTATION
// promise to implement zero to N	WITHOUT_CLASSIFICATION	0.9942535828133076	WITHOUT_CLASSIFICATION	0.005746417186692398	IMPLEMENTATION
// return	WITHOUT_CLASSIFICATION	0.9999930736385602	WITHOUT_CLASSIFICATION	6.926361439858466E-6	IMPLEMENTATION
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.999994785618019	WITHOUT_CLASSIFICATION	5.214381980997491E-6	IMPLEMENTATION
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999483119976904	WITHOUT_CLASSIFICATION	5.168800230967523E-5	IMPLEMENTATION
// confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999806097659798	WITHOUT_CLASSIFICATION	1.9390234020275068E-5	IMPLEMENTATION
// confirm maximum not greater than optional	WITHOUT_CLASSIFICATION	0.9967854815073941	WITHOUT_CLASSIFICATION	0.0032145184926058936	IMPLEMENTATION
// Raise an error if arity does not match requirements	WITHOUT_CLASSIFICATION	0.9997836011513265	WITHOUT_CLASSIFICATION	2.1639884867359608E-4	IMPLEMENTATION
// tc	WITHOUT_CLASSIFICATION	0.9999901088813848	WITHOUT_CLASSIFICATION	9.891118615195496E-6	IMPLEMENTATION
// self // name	WITHOUT_CLASSIFICATION	0.9993999926962369	WITHOUT_CLASSIFICATION	6.000073037630316E-4	IMPLEMENTATION
// no args	WITHOUT_CLASSIFICATION	0.9999960789824658	WITHOUT_CLASSIFICATION	3.921017534154961E-6	IMPLEMENTATION
// variable args with block	WITHOUT_CLASSIFICATION	0.9995500309019136	WITHOUT_CLASSIFICATION	4.4996909808643534E-4	IMPLEMENTATION
// variable args no block, load null block	WITHOUT_CLASSIFICATION	0.999806710138541	WITHOUT_CLASSIFICATION	1.9328986145889128E-4	IMPLEMENTATION
// zero args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999652314521019	WITHOUT_CLASSIFICATION	3.476854789809084E-5	IMPLEMENTATION
// one arg with block	WITHOUT_CLASSIFICATION	0.9956832800772536	WITHOUT_CLASSIFICATION	0.004316719922746359	IMPLEMENTATION
// one arg, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999443492234793	WITHOUT_CLASSIFICATION	5.5650776520595455E-5	IMPLEMENTATION
// two args with block	WITHOUT_CLASSIFICATION	0.9994964184404628	WITHOUT_CLASSIFICATION	5.03581559537214E-4	IMPLEMENTATION
// two args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999222027114282	WITHOUT_CLASSIFICATION	7.779728857176029E-5	IMPLEMENTATION
// three args with block	WITHOUT_CLASSIFICATION	0.9997350170869389	WITHOUT_CLASSIFICATION	2.649829130610899E-4	IMPLEMENTATION
// three args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999590715909108	WITHOUT_CLASSIFICATION	4.0928409089193454E-5	IMPLEMENTATION
// load block if it accepts block	WITHOUT_CLASSIFICATION	0.9996724940956357	WITHOUT_CLASSIFICATION	3.275059043641643E-4	IMPLEMENTATION
// all other arg cases with block	WITHOUT_CLASSIFICATION	0.9921613169460167	WITHOUT_CLASSIFICATION	0.007838683053983239	IMPLEMENTATION
// all other arg cases without block	WITHOUT_CLASSIFICATION	0.996869590898887	WITHOUT_CLASSIFICATION	0.0031304091011130093	IMPLEMENTATION
// one arg, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999955507582764	WITHOUT_CLASSIFICATION	4.4492417235699434E-6	IMPLEMENTATION
// two args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999937800329597	WITHOUT_CLASSIFICATION	6.2199670403408025E-6	IMPLEMENTATION
// three args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999967278458618	WITHOUT_CLASSIFICATION	3.2721541382081834E-6	IMPLEMENTATION
// load target for invocations	WITHOUT_CLASSIFICATION	0.9999835908598514	WITHOUT_CLASSIFICATION	1.640914014855949E-5	IMPLEMENTATION
// load receiver as original type for virtual invocation	WITHOUT_CLASSIFICATION	0.9999427733229416	WITHOUT_CLASSIFICATION	5.722667705838599E-5	IMPLEMENTATION
// static invocation	WITHOUT_CLASSIFICATION	0.9974549344739514	WITHOUT_CLASSIFICATION	0.0025450655260485845	IMPLEMENTATION
// virtual invocation	WITHOUT_CLASSIFICATION	0.999872676944886	WITHOUT_CLASSIFICATION	1.2732305511406412E-4	IMPLEMENTATION
// void return type, so we need to load a nil for returning below	WITHOUT_CLASSIFICATION	0.9999621283260035	WITHOUT_CLASSIFICATION	3.787167399652034E-5	IMPLEMENTATION
// normal finally and exit	WITHOUT_CLASSIFICATION	0.9998762211908044	WITHOUT_CLASSIFICATION	1.237788091955762E-4	IMPLEMENTATION
// promise to implement one to N	WITHOUT_CLASSIFICATION	0.9908792337283137	WITHOUT_CLASSIFICATION	0.009120766271686346	IMPLEMENTATION
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9996695543987946	WITHOUT_CLASSIFICATION	3.304456012054212E-4	IMPLEMENTATION
// these are only needed if we have a non-noop call config	WITHOUT_CLASSIFICATION	0.9569430527611414	WITHOUT_CLASSIFICATION	0.04305694723885858	IMPLEMENTATION
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9997282983894367	WITHOUT_CLASSIFICATION	2.717016105633747E-4	IMPLEMENTATION
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9997282983894367	WITHOUT_CLASSIFICATION	2.717016105633747E-4	IMPLEMENTATION
// singleton classes don't get their own visibility domain	WITHOUT_CLASSIFICATION	0.9999907645779662	WITHOUT_CLASSIFICATION	9.235422033924608E-6	IMPLEMENTATION
// For visibility we need real meta class and not anonymous one from class << self	WITHOUT_CLASSIFICATION	0.9967659138674808	WITHOUT_CLASSIFICATION	0.0032340861325192097	IMPLEMENTATION
// SimpleInvocationMethod	WITHOUT_CLASSIFICATION	0.9999441559003632	WITHOUT_CLASSIFICATION	5.5844099636791055E-5	IMPLEMENTATION
// never reached	WITHOUT_CLASSIFICATION	0.9976597803099938	WITHOUT_CLASSIFICATION	0.0023402196900062545	IMPLEMENTATION
// promise to implement N with block	WITHOUT_CLASSIFICATION	0.9475988530641561	WITHOUT_CLASSIFICATION	0.052401146935843905	IMPLEMENTATION
// promise to implement zero to N with block	WITHOUT_CLASSIFICATION	0.9609642536471071	WITHOUT_CLASSIFICATION	0.0390357463528929	IMPLEMENTATION
// promise to implement one to N with block	WITHOUT_CLASSIFICATION	0.9392367566858258	WITHOUT_CLASSIFICATION	0.06076324331417427	IMPLEMENTATION
// promise to implement two to N with block	WITHOUT_CLASSIFICATION	0.9166764218153663	WITHOUT_CLASSIFICATION	0.08332357818463364	IMPLEMENTATION
// promise to implement zero to three with block	WITHOUT_CLASSIFICATION	0.966010762080151	WITHOUT_CLASSIFICATION	0.03398923791984889	IMPLEMENTATION
// promise to implement one to three with block	WITHOUT_CLASSIFICATION	0.9469370739322095	WITHOUT_CLASSIFICATION	0.053062926067790374	IMPLEMENTATION
// promise to implement two to three with block	WITHOUT_CLASSIFICATION	0.9270135654845083	WITHOUT_CLASSIFICATION	0.0729864345154917	IMPLEMENTATION
// promise to implement three with block	WITHOUT_CLASSIFICATION	0.954291041959645	WITHOUT_CLASSIFICATION	0.045708958040354936	IMPLEMENTATION
// promise to implement N	WITHOUT_CLASSIFICATION	0.9951137415826097	WITHOUT_CLASSIFICATION	0.0048862584173903125	IMPLEMENTATION
// DumpingInvocationMethodFactory	WITHOUT_CLASSIFICATION	0.9999105212360142	WITHOUT_CLASSIFICATION	8.947876398585319E-5	IMPLEMENTATION
// We promote our box to being its own box since we're changing // visibilities, and need it to be reflected on this method object // independent of any other sharing the box.	WITHOUT_CLASSIFICATION	0.999997786744085	WITHOUT_CLASSIFICATION	2.2132559150892607E-6	IMPLEMENTATION
// Normally we could leave these to fall back on the superclass, but // since it dispatches through the [] version below, which may // dispatch through the []+block version, we can save it a couple hops // by overriding these here.	WITHOUT_CLASSIFICATION	0.9999756535621094	WITHOUT_CLASSIFICATION	2.4346437890667286E-5	IMPLEMENTATION
// promise to implement two to N	WITHOUT_CLASSIFICATION	0.9872322050782308	WITHOUT_CLASSIFICATION	0.012767794921769228	IMPLEMENTATION
// promise to implement three to N	WITHOUT_CLASSIFICATION	0.9932423421475245	WITHOUT_CLASSIFICATION	0.006757657852475451	IMPLEMENTATION
// promise to implement zero to three	WITHOUT_CLASSIFICATION	0.9950187828504418	WITHOUT_CLASSIFICATION	0.004981217149558324	IMPLEMENTATION
// promise to implement one to three	WITHOUT_CLASSIFICATION	0.9920901915975865	WITHOUT_CLASSIFICATION	0.007909808402413503	IMPLEMENTATION
// promise to implement two to three	WITHOUT_CLASSIFICATION	0.9889219629244785	WITHOUT_CLASSIFICATION	0.011078037075521407	IMPLEMENTATION
// promise to implement three	WITHOUT_CLASSIFICATION	0.9957648897039306	WITHOUT_CLASSIFICATION	0.004235110296069326	IMPLEMENTATION
// all other arities use "n" dispatch path	WITHOUT_CLASSIFICATION	0.9993990634024056	WITHOUT_CLASSIFICATION	6.009365975944077E-4	IMPLEMENTATION
// load up object and add a few useful methods	WITHOUT_CLASSIFICATION	0.999970409117653	WITHOUT_CLASSIFICATION	2.959088234709391E-5	IMPLEMENTATION
// open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel	WITHOUT_CLASSIFICATION	0.9999667590900123	WITHOUT_CLASSIFICATION	3.324090998775082E-5	IMPLEMENTATION
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999659222386081	WITHOUT_CLASSIFICATION	3.4077761391797435E-5	IMPLEMENTATION
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9287831173628796	WITHOUT_CLASSIFICATION	0.07121688263712052	IMPLEMENTATION
// create constructor	WITHOUT_CLASSIFICATION	0.9999167129343081	WITHOUT_CLASSIFICATION	8.328706569190931E-5	IMPLEMENTATION
// wrap self and store the wrapper	WITHOUT_CLASSIFICATION	0.9999715114317003	WITHOUT_CLASSIFICATION	2.8488568299753257E-5	IMPLEMENTATION
// end constructor	WITHOUT_CLASSIFICATION	0.9983967065558684	WITHOUT_CLASSIFICATION	0.0016032934441315414	IMPLEMENTATION
// start setup method	WITHOUT_CLASSIFICATION	0.9999660852298791	WITHOUT_CLASSIFICATION	3.3914770120913764E-5	IMPLEMENTATION
// set RubyClass	WITHOUT_CLASSIFICATION	0.9996727361353414	WITHOUT_CLASSIFICATION	3.27263864658602E-4	IMPLEMENTATION
// set Ruby	WITHOUT_CLASSIFICATION	0.9996727361353414	WITHOUT_CLASSIFICATION	3.27263864658602E-4	IMPLEMENTATION
// all methods dispatch to the simple version by default, which is method_missing normally	WITHOUT_CLASSIFICATION	0.9999962027718801	WITHOUT_CLASSIFICATION	3.797228119922678E-6	IMPLEMENTATION
// try specific name first, falling back on simple name	WITHOUT_CLASSIFICATION	0.999665229218801	WITHOUT_CLASSIFICATION	3.347707811990571E-4	IMPLEMENTATION
// get current context	WITHOUT_CLASSIFICATION	0.999876947757941	WITHOUT_CLASSIFICATION	1.2305224205903947E-4	IMPLEMENTATION
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999626274230029	WITHOUT_CLASSIFICATION	3.7372576997012195E-5	IMPLEMENTATION
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999659222386081	WITHOUT_CLASSIFICATION	3.4077761391797435E-5	IMPLEMENTATION
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9287831173628796	WITHOUT_CLASSIFICATION	0.07121688263712052	IMPLEMENTATION
// create constructor	WITHOUT_CLASSIFICATION	0.9999167129343081	WITHOUT_CLASSIFICATION	8.328706569190931E-5	IMPLEMENTATION
// end constructor	WITHOUT_CLASSIFICATION	0.9983967065558684	WITHOUT_CLASSIFICATION	0.0016032934441315414	IMPLEMENTATION
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9990376751575175	WITHOUT_CLASSIFICATION	9.623248424824863E-4	IMPLEMENTATION
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999910374324726	WITHOUT_CLASSIFICATION	8.962567527287704E-6	IMPLEMENTATION
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9997332441820532	WITHOUT_CLASSIFICATION	2.6675581794674373E-4	IMPLEMENTATION
// load null block	WITHOUT_CLASSIFICATION	0.9984482475201314	WITHOUT_CLASSIFICATION	0.0015517524798686134	IMPLEMENTATION
// invoke method	WITHOUT_CLASSIFICATION	0.9992964378994693	WITHOUT_CLASSIFICATION	7.035621005306896E-4	IMPLEMENTATION
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999546871610346	WITHOUT_CLASSIFICATION	4.531283896543399E-5	IMPLEMENTATION
// end setup method	WITHOUT_CLASSIFICATION	0.9981175016762318	WITHOUT_CLASSIFICATION	0.0018824983237681926	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.9996469563626712	WITHOUT_CLASSIFICATION	3.5304363732876267E-4	IMPLEMENTATION
// create static init, for a monitor object	WITHOUT_CLASSIFICATION	0.9999085116644798	WITHOUT_CLASSIFICATION	9.14883355201774E-5	IMPLEMENTATION
// store the wrapper	WITHOUT_CLASSIFICATION	0.9998266103488916	WITHOUT_CLASSIFICATION	1.7338965110847177E-4	IMPLEMENTATION
// prepare temp locals	WITHOUT_CLASSIFICATION	0.9999617991721713	WITHOUT_CLASSIFICATION	3.8200827828655235E-5	IMPLEMENTATION
// Try to look up field for simple name // get field; if nonnull, go straight to dispatch	WITHOUT_CLASSIFICATION	0.9999910621302084	WITHOUT_CLASSIFICATION	8.937869791721282E-6	IMPLEMENTATION
// field is null, lock class and try to populate	WITHOUT_CLASSIFICATION	0.9999993980334202	WITHOUT_CLASSIFICATION	6.01966579895133E-7	IMPLEMENTATION
// try/finally block to ensure unlock	WITHOUT_CLASSIFICATION	0.9998466285341351	WITHOUT_CLASSIFICATION	1.533714658649617E-4	IMPLEMENTATION
// store it	WITHOUT_CLASSIFICATION	0.9996294417512877	WITHOUT_CLASSIFICATION	3.705582487122794E-4	IMPLEMENTATION
// end of try block	WITHOUT_CLASSIFICATION	0.9982646425907076	WITHOUT_CLASSIFICATION	0.001735357409292488	IMPLEMENTATION
// finally block to release monitor	WITHOUT_CLASSIFICATION	0.9996585190933676	WITHOUT_CLASSIFICATION	3.414809066324307E-4	IMPLEMENTATION
// exception handling for monitor release	WITHOUT_CLASSIFICATION	0.9999101817071822	WITHOUT_CLASSIFICATION	8.981829281781233E-5	IMPLEMENTATION
// re-get, re-check method; if not null now, go to dispatch	WITHOUT_CLASSIFICATION	0.9993954521518527	WITHOUT_CLASSIFICATION	6.045478481474215E-4	IMPLEMENTATION
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999626274230029	WITHOUT_CLASSIFICATION	3.7372576997012195E-5	IMPLEMENTATION
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999910374324726	WITHOUT_CLASSIFICATION	8.962567527287704E-6	IMPLEMENTATION
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9997332441820532	WITHOUT_CLASSIFICATION	2.6675581794674373E-4	IMPLEMENTATION
// invoke method	WITHOUT_CLASSIFICATION	0.9992964378994693	WITHOUT_CLASSIFICATION	7.035621005306896E-4	IMPLEMENTATION
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999546871610346	WITHOUT_CLASSIFICATION	4.531283896543399E-5	IMPLEMENTATION
// end setup method	WITHOUT_CLASSIFICATION	0.9981175016762318	WITHOUT_CLASSIFICATION	0.0018824983237681926	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.9996469563626712	WITHOUT_CLASSIFICATION	3.5304363732876267E-4	IMPLEMENTATION
// create the class	WITHOUT_CLASSIFICATION	0.9998847549029585	WITHOUT_CLASSIFICATION	1.1524509704165657E-4	IMPLEMENTATION
// method still not available, call method_missing	WITHOUT_CLASSIFICATION	0.9584151282853693	WITHOUT_CLASSIFICATION	0.04158487171463062	IMPLEMENTATION
// perform the dispatch	WITHOUT_CLASSIFICATION	0.9999576662280435	WITHOUT_CLASSIFICATION	4.233377195650737E-5	IMPLEMENTATION
// try to load the specified name; only if that fails, try to define the class	WITHOUT_CLASSIFICATION	0.9999983235370734	WITHOUT_CLASSIFICATION	1.6764629266055453E-6	IMPLEMENTATION
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999537297466021	WITHOUT_CLASSIFICATION	4.62702533978457E-5	IMPLEMENTATION
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999537297466021	WITHOUT_CLASSIFICATION	4.62702533978457E-5	IMPLEMENTATION
// setup the class	WITHOUT_CLASSIFICATION	0.9998936003626301	WITHOUT_CLASSIFICATION	1.0639963736988817E-4	IMPLEMENTATION
// now, create a method_added that can replace the DynamicMethod fields as they're redefined	WITHOUT_CLASSIFICATION	0.9984301396773543	WITHOUT_CLASSIFICATION	0.0015698603226456862	IMPLEMENTATION
// do nothing, it's a non-impl method	WITHOUT_CLASSIFICATION	0.9999274440160534	WITHOUT_CLASSIFICATION	7.255598394653146E-5	IMPLEMENTATION
// probably a primitive	WITHOUT_CLASSIFICATION	0.9999734822635457	WITHOUT_CLASSIFICATION	2.65177364542895E-5	IMPLEMENTATION
// interfaces are handled as modules	WITHOUT_CLASSIFICATION	0.9999524293395203	WITHOUT_CLASSIFICATION	4.7570660479608695E-5	IMPLEMENTATION
// construct the mirror class and parent classes	WITHOUT_CLASSIFICATION	0.9999690054491215	WITHOUT_CLASSIFICATION	3.099455087857075E-5	IMPLEMENTATION
// set the full name	WITHOUT_CLASSIFICATION	0.9993963250381499	WITHOUT_CLASSIFICATION	6.036749618501293E-4	IMPLEMENTATION
// include all interfaces	WITHOUT_CLASSIFICATION	0.9998953893160084	WITHOUT_CLASSIFICATION	1.0461068399157241E-4	IMPLEMENTATION
// if it's an array, only add methods for aref, aset, and length	WITHOUT_CLASSIFICATION	0.9999800463510495	WITHOUT_CLASSIFICATION	1.9953648950500837E-5	IMPLEMENTATION
// add array construction methods	WITHOUT_CLASSIFICATION	0.9996519687795546	WITHOUT_CLASSIFICATION	3.4803122044525586E-4	IMPLEMENTATION
// add all public constructors (note: getConstructors only returns public ones)	WITHOUT_CLASSIFICATION	0.9999441084304606	WITHOUT_CLASSIFICATION	5.589156953947751E-5	IMPLEMENTATION
// add all instance and static methods	WITHOUT_CLASSIFICATION	0.997691644355675	WITHOUT_CLASSIFICATION	0.0023083556443250454	IMPLEMENTATION
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999786270212542	WITHOUT_CLASSIFICATION	2.1372978745715708E-5	IMPLEMENTATION
// too much array creation!	WITHOUT_CLASSIFICATION	0.9999853076223298	WITHOUT_CLASSIFICATION	1.4692377670107303E-5	IMPLEMENTATION
// only include static methods if specified	WITHOUT_CLASSIFICATION	0.9996886144308191	WITHOUT_CLASSIFICATION	3.11385569180894E-4	IMPLEMENTATION
// add a few type-specific special methods	WITHOUT_CLASSIFICATION	0.9997267896842799	WITHOUT_CLASSIFICATION	2.7321031572008166E-4	IMPLEMENTATION
// add all static variables	WITHOUT_CLASSIFICATION	0.9983298211641939	WITHOUT_CLASSIFICATION	0.0016701788358060693	IMPLEMENTATION
// only public static fields that are valid constants	WITHOUT_CLASSIFICATION	0.9999167235564964	WITHOUT_CLASSIFICATION	8.327644350363286E-5	IMPLEMENTATION
// looks like someone's trying to raise a Java exception. Let them.	WITHOUT_CLASSIFICATION	0.9999753479678366	WITHOUT_CLASSIFICATION	2.4652032163340984E-5	IMPLEMENTATION
// NOTE: The five match methods are arity-split to avoid the cost of boxing arguments // when there's already a cached match. Do not condense them into a single // method.	WITHOUT_CLASSIFICATION	0.9999533249414045	WITHOUT_CLASSIFICATION	4.667505859558587E-5	IMPLEMENTATION
// TODO: This is where we would want to do precision checks to see // if it's non-destructive to coerce a given type into the target // integral primitive	WITHOUT_CLASSIFICATION	0.6795094362350919	WITHOUT_CLASSIFICATION	0.3204905637649082	IMPLEMENTATION
// long first because it's what Fixnum claims to be	WITHOUT_CLASSIFICATION	0.9994534180057061	WITHOUT_CLASSIFICATION	5.465819942940314E-4	IMPLEMENTATION
// double first because it's what float claims to be	WITHOUT_CLASSIFICATION	0.9999407923814565	WITHOUT_CLASSIFICATION	5.920761854349088E-5	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.8776240401284587	IMPLEMENTATION	0.12237595987154129	WITHOUT_CLASSIFICATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9996612927501303	WITHOUT_CLASSIFICATION	3.3870724986971226E-4	IMPLEMENTATION
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9995837217622084	WITHOUT_CLASSIFICATION	4.162782377914825E-4	IMPLEMENTATION
// we set all Java methods to optional, since many/most have overloads	WITHOUT_CLASSIFICATION	0.9999912470393864	WITHOUT_CLASSIFICATION	8.752960613594685E-6	IMPLEMENTATION
// If we hold a Java object, we need a java_class accessor	WITHOUT_CLASSIFICATION	0.9999342391423495	WITHOUT_CLASSIFICATION	6.576085765055385E-5	IMPLEMENTATION
// line 326	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9996612927501303	WITHOUT_CLASSIFICATION	3.3870724986971226E-4	IMPLEMENTATION
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9995837217622084	WITHOUT_CLASSIFICATION	4.162782377914825E-4	IMPLEMENTATION
// too much array creation!	WITHOUT_CLASSIFICATION	0.9999853076223298	WITHOUT_CLASSIFICATION	1.4692377670107303E-5	IMPLEMENTATION
// construct new array proxy (ArrayJavaProxy)	WITHOUT_CLASSIFICATION	0.9999667112434221	WITHOUT_CLASSIFICATION	3.3288756577936975E-5	IMPLEMENTATION
// Get map of all fields we want to define.  	WITHOUT_CLASSIFICATION	0.9999550765235928	WITHOUT_CLASSIFICATION	4.492347640706836E-5	IMPLEMENTATION
// Look through all mappings to find a match entry for this field	WITHOUT_CLASSIFICATION	0.9997750549340698	WITHOUT_CLASSIFICATION	2.2494506593011753E-4	IMPLEMENTATION
// Hit a non-java proxy class (included Modules can be a cause of this...skip)	WITHOUT_CLASSIFICATION	0.9999926819353441	WITHOUT_CLASSIFICATION	7.318064656003349E-6	IMPLEMENTATION
// We could not find all of them print out first one (we could print them all?)	WITHOUT_CLASSIFICATION	0.9992599289888627	WITHOUT_CLASSIFICATION	7.400710111371429E-4	IMPLEMENTATION
// dummy bodies for default impls	WITHOUT_CLASSIFICATION	0.9999925900687062	WITHOUT_CLASSIFICATION	7.409931293835584E-6	IMPLEMENTATION
// initialize this if it hasn't been	WITHOUT_CLASSIFICATION	0.999857765013697	WITHOUT_CLASSIFICATION	1.4223498630291625E-4	IMPLEMENTATION
// initialize these if they haven't been	WITHOUT_CLASSIFICATION	0.9998949472391148	WITHOUT_CLASSIFICATION	1.050527608852472E-4	IMPLEMENTATION
// not allowed for original (non-generated) Java classes // note: not allowing for any previously created class right now; // this restriction might be loosened later for generated classes	WITHOUT_CLASSIFICATION	0.9998783985649068	WITHOUT_CLASSIFICATION	1.2160143509322888E-4	IMPLEMENTATION
// setup new, etc unless this is a ConcreteJavaProxy subclass	WITHOUT_CLASSIFICATION	0.9999811663824912	WITHOUT_CLASSIFICATION	1.88336175087976E-5	IMPLEMENTATION
// First we make modifications to the class, to adapt it to being // both a Ruby class and a proxy for a Java type	WITHOUT_CLASSIFICATION	0.99998834986342	WITHOUT_CLASSIFICATION	1.1650136579851004E-5	IMPLEMENTATION
// list of interfaces we implement	WITHOUT_CLASSIFICATION	0.9935585643036455	WITHOUT_CLASSIFICATION	0.006441435696354463	IMPLEMENTATION
// We capture the original "new" and make it private	WITHOUT_CLASSIFICATION	0.9998778220449545	WITHOUT_CLASSIFICATION	1.2217795504551897E-4	IMPLEMENTATION
// The replacement "new" allocates and inits the Ruby object as before, but // also instantiates our proxified Java object by calling __jcreate!	WITHOUT_CLASSIFICATION	0.9999998239944442	WITHOUT_CLASSIFICATION	1.7600555569931638E-7	IMPLEMENTATION
// Next, we define a few private methods that we'll use to manipulate // the Java object contained within this Ruby object	WITHOUT_CLASSIFICATION	0.9999924406550643	WITHOUT_CLASSIFICATION	7.559344935679119E-6	IMPLEMENTATION
// jcreate instantiates the proxy object which implements all interfaces // and which is wrapped and implemented by this object	WITHOUT_CLASSIFICATION	0.9975173265211938	WITHOUT_CLASSIFICATION	0.0024826734788061873	IMPLEMENTATION
// Now we add an "implement" and "implement_all" methods to the class	WITHOUT_CLASSIFICATION	0.9998817011388375	WITHOUT_CLASSIFICATION	1.1829886116255949E-4	IMPLEMENTATION
// implement all forces implementation of all interfaces we intend // for this class to implement	WITHOUT_CLASSIFICATION	0.9771651258570367	WITHOUT_CLASSIFICATION	0.022834874142963264	IMPLEMENTATION
// we've already done the above priming logic, just add another interface // to the list of intentions unless we're past the point of no return or // already intend to implement the given interface	WITHOUT_CLASSIFICATION	0.997593416272613	WITHOUT_CLASSIFICATION	0.0024065837273871036	IMPLEMENTATION
// walk all superclasses aggregating interfaces	WITHOUT_CLASSIFICATION	0.9999342879447456	WITHOUT_CLASSIFICATION	6.571205525440597E-5	IMPLEMENTATION
// construct the new interface impl and set it into the object	WITHOUT_CLASSIFICATION	0.9999966846532066	WITHOUT_CLASSIFICATION	3.3153467933916656E-6	IMPLEMENTATION
// assuming the user wants a collection of interfaces that can be // included together. make it so.	WITHOUT_CLASSIFICATION	0.999078116761359	WITHOUT_CLASSIFICATION	9.218832386408752E-4	IMPLEMENTATION
// not allowed for existing Java interface modules	WITHOUT_CLASSIFICATION	0.9997739751269427	WITHOUT_CLASSIFICATION	2.2602487305720413E-4	IMPLEMENTATION
// To turn a module into an "interface collection" we add a class instance // variable to hold the list of interfaces, and modify append_features // for this module to call append_features on each of those interfaces as // well	WITHOUT_CLASSIFICATION	0.9999994875542764	WITHOUT_CLASSIFICATION	5.124457236779018E-7	IMPLEMENTATION
// already set up append_features, just add the interface if we haven't already	WITHOUT_CLASSIFICATION	0.9999920218914824	WITHOUT_CLASSIFICATION	7.97810851767226E-6	IMPLEMENTATION
// array-of-interface-type creation/identity	WITHOUT_CLASSIFICATION	0.9999105212360142	WITHOUT_CLASSIFICATION	8.947876398585319E-5	IMPLEMENTATION
// keep this variant for kind_of? testing	WITHOUT_CLASSIFICATION	0.9999293770997236	WITHOUT_CLASSIFICATION	7.062290027634226E-5	IMPLEMENTATION
// array creation should use this variant	WITHOUT_CLASSIFICATION	0.9991532943487557	WITHOUT_CLASSIFICATION	8.467056512443152E-4	IMPLEMENTATION
// parent.setConstant(name, proxyClass); // where the name should come from ?	WITHOUT_CLASSIFICATION	0.9993322980392221	WITHOUT_CLASSIFICATION	6.677019607780199E-4	IMPLEMENTATION
// including interface module so old-style interface "subclasses" will // respond correctly to #kind_of?, etc.	WITHOUT_CLASSIFICATION	0.9999922020009264	WITHOUT_CLASSIFICATION	7.797999073556905E-6	IMPLEMENTATION
// add reference to interface module	WITHOUT_CLASSIFICATION	0.9999610326850821	WITHOUT_CLASSIFICATION	3.896731491781867E-5	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9983012668732917	WITHOUT_CLASSIFICATION	0.0016987331267083073	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9983012668732917	WITHOUT_CLASSIFICATION	0.0016987331267083073	IMPLEMENTATION
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999786270212542	WITHOUT_CLASSIFICATION	2.1372978745715708E-5	IMPLEMENTATION
// same as argument_types, but matches name in java.lang.reflect.Constructor/Method	WITHOUT_CLASSIFICATION	0.9999994888415622	WITHOUT_CLASSIFICATION	5.111584378556828E-7	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999995060422102	WITHOUT_CLASSIFICATION	4.939577897100515E-7	IMPLEMENTATION
// weakly reserved names	WITHOUT_CLASSIFICATION	0.9999533252495473	WITHOUT_CLASSIFICATION	4.6674750452763456E-5	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999945429403294	WITHOUT_CLASSIFICATION	5.457059670472429E-6	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999945429403294	WITHOUT_CLASSIFICATION	5.457059670472429E-6	IMPLEMENTATION
// modified only by addMethod; no synchronization required	WITHOUT_CLASSIFICATION	0.9998709414384882	WITHOUT_CLASSIFICATION	1.2905856151189472E-4	IMPLEMENTATION
// if there's no constructor, we must prevent construction	WITHOUT_CLASSIFICATION	0.9989754402511686	WITHOUT_CLASSIFICATION	0.0010245597488314372	IMPLEMENTATION
// caching constructors, as they're accessed for each new instance	WITHOUT_CLASSIFICATION	0.9999159141343573	WITHOUT_CLASSIFICATION	8.408586564277417E-5	IMPLEMENTATION
// proxy module for interfaces	WITHOUT_CLASSIFICATION	0.9999860406728984	WITHOUT_CLASSIFICATION	1.39593271016503E-5	IMPLEMENTATION
// proxy class for concrete classes.  also used for // "concrete" interfaces, which is why we have two fields	WITHOUT_CLASSIFICATION	0.9999946123519593	WITHOUT_CLASSIFICATION	5.3876480406202616E-6	IMPLEMENTATION
// readable only by thread building proxy, so don't need to be // volatile. used to handle recursive calls to getProxyClass/Module // while proxy is being constructed (usually when a constant // defined by a class is of the same type as that class).	WITHOUT_CLASSIFICATION	0.9999990186519141	WITHOUT_CLASSIFICATION	9.81348085918601E-7	IMPLEMENTATION
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999986963255059	WITHOUT_CLASSIFICATION	1.3036744941172818E-6	IMPLEMENTATION
// Now add all aliases for the static methods (fields) as appropriate	WITHOUT_CLASSIFICATION	0.9995198541216987	WITHOUT_CLASSIFICATION	4.801458783011829E-4	IMPLEMENTATION
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999960067437428	WITHOUT_CLASSIFICATION	3.993256257251996E-6	IMPLEMENTATION
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999120408800968	WITHOUT_CLASSIFICATION	8.795911990332466E-5	IMPLEMENTATION
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999505929698477	WITHOUT_CLASSIFICATION	4.940703015230911E-5	IMPLEMENTATION
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999693161222294	WITHOUT_CLASSIFICATION	3.068387777063792E-5	IMPLEMENTATION
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999508425485287	WITHOUT_CLASSIFICATION	4.915745147129294E-5	IMPLEMENTATION
// Additionally add ?-postfixed aliases to any boolean methods and properties.	WITHOUT_CLASSIFICATION	0.9999696739234336	WITHOUT_CLASSIFICATION	3.032607656645046E-5	IMPLEMENTATION
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999105212360142	WITHOUT_CLASSIFICATION	8.947876398585319E-5	IMPLEMENTATION
// something?	WITHOUT_CLASSIFICATION	0.9993757756554122	WITHOUT_CLASSIFICATION	6.242243445877848E-4	IMPLEMENTATION
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999897960198239	WITHOUT_CLASSIFICATION	1.0203980176217037E-5	IMPLEMENTATION
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999897960198239	WITHOUT_CLASSIFICATION	1.0203980176217037E-5	IMPLEMENTATION
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9995682627665397	WITHOUT_CLASSIFICATION	4.317372334604404E-4	IMPLEMENTATION
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9995682627665397	WITHOUT_CLASSIFICATION	4.317372334604404E-4	IMPLEMENTATION
// create constructorInstaller; if there are no constructors, it will disable construction	WITHOUT_CLASSIFICATION	0.9999985866538833	WITHOUT_CLASSIFICATION	1.4133461166256565E-6	IMPLEMENTATION
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999983441744124	WITHOUT_CLASSIFICATION	1.6558255877114834E-6	IMPLEMENTATION
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999848638935074	WITHOUT_CLASSIFICATION	1.5136106492616902E-5	IMPLEMENTATION
// now iterate over all installers and make sure they also have appropriate aliases	WITHOUT_CLASSIFICATION	0.9999757932673635	WITHOUT_CLASSIFICATION	2.4206732636468977E-5	IMPLEMENTATION
// old (quasi-deprecated) interface class	WITHOUT_CLASSIFICATION	0.9999894334691042	WITHOUT_CLASSIFICATION	1.0566530895848804E-5	IMPLEMENTATION
// 1.9 support for encodings	WITHOUT_CLASSIFICATION	0.9994712276335898	WITHOUT_CLASSIFICATION	5.287723664102556E-4	IMPLEMENTATION
// double-check the cache now that we're synchronized	WITHOUT_CLASSIFICATION	0.9996967014828366	WITHOUT_CLASSIFICATION	3.0329851716335757E-4	IMPLEMENTATION
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999693161222294	WITHOUT_CLASSIFICATION	3.068387777063792E-5	IMPLEMENTATION
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999508425485287	WITHOUT_CLASSIFICATION	4.915745147129294E-5	IMPLEMENTATION
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999105212360142	WITHOUT_CLASSIFICATION	8.947876398585319E-5	IMPLEMENTATION
// one word type name that starts lower-case...it may be a primitive type	WITHOUT_CLASSIFICATION	0.999788092146055	WITHOUT_CLASSIFICATION	2.1190785394508175E-4	IMPLEMENTATION
// Java.getProxyClass deals with sync issues, so we won't duplicate the logic here	WITHOUT_CLASSIFICATION	0.9999617343535422	WITHOUT_CLASSIFICATION	3.826564645779684E-5	IMPLEMENTATION
// note: intentionally returning the actual array returned from Java, rather // than wrapping it in a RubyArray. wave of the future, when java_class will // return the actual class, rather than a JavaClass wrapper.	WITHOUT_CLASSIFICATION	0.9999999160535165	WITHOUT_CLASSIFICATION	8.394648352574616E-8	IMPLEMENTATION
// see note above re: return type	WITHOUT_CLASSIFICATION	0.9998131004064502	WITHOUT_CLASSIFICATION	1.868995935496536E-4	IMPLEMENTATION
// restrictive security policy; no matter, we only want public // classes anyway	WITHOUT_CLASSIFICATION	0.9999799722374448	WITHOUT_CLASSIFICATION	2.0027762555156775E-5	IMPLEMENTATION
// very restrictive policy (disallows Member.PUBLIC) // we'd never actually get this far in that case	WITHOUT_CLASSIFICATION	0.9995366037289175	WITHOUT_CLASSIFICATION	4.633962710825282E-4	IMPLEMENTATION
// one-dimensional array	WITHOUT_CLASSIFICATION	0.9999555110377221	WITHOUT_CLASSIFICATION	4.44889622778793E-5	IMPLEMENTATION
// n-dimensional array	WITHOUT_CLASSIFICATION	0.9999555110377221	WITHOUT_CLASSIFICATION	4.44889622778793E-5	IMPLEMENTATION
// if it's an array of arrays, recurse with the component type	WITHOUT_CLASSIFICATION	0.999971414518416	WITHOUT_CLASSIFICATION	2.85854815840242E-5	IMPLEMENTATION
// we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods // see JRUBY-3130	WITHOUT_CLASSIFICATION	0.9999975282731993	WITHOUT_CLASSIFICATION	2.4717268006071225E-6	IMPLEMENTATION
// Proc implementing an interface, pull in the catch-all code that lets the proc get invoked // no matter what method is called on the interface	WITHOUT_CLASSIFICATION	0.9999973078142884	WITHOUT_CLASSIFICATION	2.692185711657351E-6	IMPLEMENTATION
// can't be converted any more, return it	WITHOUT_CLASSIFICATION	0.999975161510716	WITHOUT_CLASSIFICATION	2.483848928399812E-5	IMPLEMENTATION
// getFooBar() => fooBar?, foo_bar?(*)	WITHOUT_CLASSIFICATION	0.9999508346077047	WITHOUT_CLASSIFICATION	4.9165392295336563E-5	IMPLEMENTATION
// If not a property, but is boolean add ?-postfixed aliases.	WITHOUT_CLASSIFICATION	0.9998795371227108	WITHOUT_CLASSIFICATION	1.2046287728923189E-4	IMPLEMENTATION
// many cases are ok to convert to float; if not one of these, error	WITHOUT_CLASSIFICATION	0.990331666460387	WITHOUT_CLASSIFICATION	0.00966833353961316	IMPLEMENTATION
// for Object, default to natural wrapper type	WITHOUT_CLASSIFICATION	0.9999903175499462	WITHOUT_CLASSIFICATION	9.682450053768599E-6	IMPLEMENTATION
// rubyObject is already of the required jruby class (or subclass)	WITHOUT_CLASSIFICATION	0.9999905434065158	WITHOUT_CLASSIFICATION	9.456593484097376E-6	IMPLEMENTATION
// the converters handle not only primitive types but also their boxed versions, so we should check // if we have a converter before checking for isPrimitive()	WITHOUT_CLASSIFICATION	0.99520805518943	WITHOUT_CLASSIFICATION	0.00479194481057005	IMPLEMENTATION
// it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9994080487747201	WITHOUT_CLASSIFICATION	5.919512252799414E-4	IMPLEMENTATION
// we've found a Java type to which we've coerced the Ruby value, wrap it	WITHOUT_CLASSIFICATION	0.9999685090952497	WITHOUT_CLASSIFICATION	3.149090475027202E-5	IMPLEMENTATION
// set of utility methods for Java-based proxy objects	WITHOUT_CLASSIFICATION	0.9999899425463967	WITHOUT_CLASSIFICATION	1.0057453603324175E-5	IMPLEMENTATION
// the proxy (wrapper) type hierarchy	WITHOUT_CLASSIFICATION	0.9999691891194754	WITHOUT_CLASSIFICATION	3.081088052458293E-5	IMPLEMENTATION
//InterfaceJavaProxy.createInterfaceJavaProxy(context);	WITHOUT_CLASSIFICATION	0.9997254911986895	WITHOUT_CLASSIFICATION	2.7450880131056003E-4	IMPLEMENTATION
// also create the JavaProxy* classes	WITHOUT_CLASSIFICATION	0.9998272805770385	WITHOUT_CLASSIFICATION	1.7271942296150634E-4	IMPLEMENTATION
// The template for interface modules	WITHOUT_CLASSIFICATION	0.9999930848448386	WITHOUT_CLASSIFICATION	6.915155161444925E-6	IMPLEMENTATION
// Now attach Java-related extras to core classes	WITHOUT_CLASSIFICATION	0.9997553575371176	WITHOUT_CLASSIFICATION	2.4464246288228507E-4	IMPLEMENTATION
// add all name-to-class mappings	WITHOUT_CLASSIFICATION	0.9961510786556567	WITHOUT_CLASSIFICATION	0.003848921344343346	IMPLEMENTATION
// add some base Java classes everyone will need	WITHOUT_CLASSIFICATION	0.9995167545013414	WITHOUT_CLASSIFICATION	4.832454986586347E-4	IMPLEMENTATION
// finally, set JavaSupport.isEnabled to true	WITHOUT_CLASSIFICATION	0.9998828616665322	WITHOUT_CLASSIFICATION	1.1713833346781711E-4	IMPLEMENTATION
// shouldn't happen, but if a superclass is specified, it's not ours	WITHOUT_CLASSIFICATION	0.9998879428906144	WITHOUT_CLASSIFICATION	1.1205710938555614E-4	IMPLEMENTATION
// include any interfaces we extend	WITHOUT_CLASSIFICATION	0.9991154233601737	WITHOUT_CLASSIFICATION	8.845766398263235E-4	IMPLEMENTATION
// java.lang.Object is added at root of java proxy classes	WITHOUT_CLASSIFICATION	0.999998871756725	WITHOUT_CLASSIFICATION	1.1282432750637043E-6	IMPLEMENTATION
// other java proxy classes added under their superclass' java proxy	WITHOUT_CLASSIFICATION	0.9999936091387589	WITHOUT_CLASSIFICATION	6.390861241117997E-6	IMPLEMENTATION
// include interface modules into the proxy class	WITHOUT_CLASSIFICATION	0.999997926166345	WITHOUT_CLASSIFICATION	2.0738336549684783E-6	IMPLEMENTATION
// JRUBY-2938 the proxy class might already exist	WITHOUT_CLASSIFICATION	0.9999739878305353	WITHOUT_CLASSIFICATION	2.6012169464840487E-5	IMPLEMENTATION
// add java_method for unbound use	WITHOUT_CLASSIFICATION	0.9994513207744158	WITHOUT_CLASSIFICATION	5.486792255842407E-4	IMPLEMENTATION
// add alias to meta	WITHOUT_CLASSIFICATION	0.9991335946173219	WITHOUT_CLASSIFICATION	8.664053826780821E-4	IMPLEMENTATION
// we'll only map conventional class names to modules 	WITHOUT_CLASSIFICATION	0.9999977627719161	WITHOUT_CLASSIFICATION	2.237228083986734E-6	IMPLEMENTATION
/* expected */	WITHOUT_CLASSIFICATION	0.9999578789279946	WITHOUT_CLASSIFICATION	4.2121072005433156E-5	IMPLEMENTATION
// Haven't found a class, continue on as though it were a package	WITHOUT_CLASSIFICATION	0.9999244282860641	WITHOUT_CLASSIFICATION	7.557171393586464E-5	IMPLEMENTATION
// upper case name, so most likely a class	WITHOUT_CLASSIFICATION	0.9999770627854013	WITHOUT_CLASSIFICATION	2.2937214598670527E-5	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999995060422102	WITHOUT_CLASSIFICATION	4.939577897100515E-7	IMPLEMENTATION
// add alias to meta	WITHOUT_CLASSIFICATION	0.9991335946173219	WITHOUT_CLASSIFICATION	8.664053826780821E-4	IMPLEMENTATION
// this is where we'll get connected when classes are opened using // package module syntax.	WITHOUT_CLASSIFICATION	0.9998989184077411	WITHOUT_CLASSIFICATION	1.0108159225882257E-4	IMPLEMENTATION
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9994218689283707	WITHOUT_CLASSIFICATION	5.78131071629254E-4	IMPLEMENTATION
// this covers primitives and (unlikely) lower-case class names	WITHOUT_CLASSIFICATION	0.9999583019352781	WITHOUT_CLASSIFICATION	4.169806472189703E-5	IMPLEMENTATION
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9998941974544143	WITHOUT_CLASSIFICATION	1.0580254558557355E-4	IMPLEMENTATION
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9998941974544143	WITHOUT_CLASSIFICATION	1.0580254558557355E-4	IMPLEMENTATION
// Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9999713100928225	WITHOUT_CLASSIFICATION	2.8689907177468843E-5	IMPLEMENTATION
// Create list of interfaces to proxy (and make sure they really are interfaces)	WITHOUT_CLASSIFICATION	0.9999978559760655	WITHOUT_CLASSIFICATION	2.144023934507119E-6	IMPLEMENTATION
// hashcode is a combination of the interfaces and the Ruby class we're using // to implement them	WITHOUT_CLASSIFICATION	0.9999359486211666	WITHOUT_CLASSIFICATION	6.4051378833357E-5	IMPLEMENTATION
// if it's a singleton class and the real class is proc, we're doing closure conversion // so just use Proc's hashcode	WITHOUT_CLASSIFICATION	0.999999719160585	WITHOUT_CLASSIFICATION	2.808394150079186E-7	IMPLEMENTATION
// normal new class implementing interfaces	WITHOUT_CLASSIFICATION	0.9999565782442704	WITHOUT_CLASSIFICATION	4.3421755729468205E-5	IMPLEMENTATION
/*         * Initialize some components.         */	WITHOUT_CLASSIFICATION	0.9999838632952938	WITHOUT_CLASSIFICATION	1.6136704706245767E-5	IMPLEMENTATION
// not synchronizing these methods, no harm if these values get set more // than once. // (also note that there's no chance of getting a partially initialized // class/module, as happens-before is guaranteed by volatile write/read // of constants table.)	WITHOUT_CLASSIFICATION	0.999957524476322	WITHOUT_CLASSIFICATION	4.247552367793878E-5	IMPLEMENTATION
// Java reflection does not allow retrieving constructors like methods	WITHOUT_CLASSIFICATION	0.9494713473038048	WITHOUT_CLASSIFICATION	0.05052865269619513	IMPLEMENTATION
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999237730648864	WITHOUT_CLASSIFICATION	7.622693511348739E-5	IMPLEMENTATION
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999237730648864	WITHOUT_CLASSIFICATION	7.622693511348739E-5	IMPLEMENTATION
// no matching ctor found	WITHOUT_CLASSIFICATION	0.9999557903829844	WITHOUT_CLASSIFICATION	4.420961701555051E-5	IMPLEMENTATION
// Create Ruby proxies for any input arguments that are not primitives.	WITHOUT_CLASSIFICATION	0.9999484051693938	WITHOUT_CLASSIFICATION	5.1594830606273744E-5	IMPLEMENTATION
// prepare a faster handle if handles are enabled and the method and class are public	WITHOUT_CLASSIFICATION	0.9999914002892116	WITHOUT_CLASSIFICATION	8.599710788357944E-6	IMPLEMENTATION
// must be a public method	WITHOUT_CLASSIFICATION	0.9999779709731972	WITHOUT_CLASSIFICATION	2.202902680285792E-5	IMPLEMENTATION
// must be a public class	WITHOUT_CLASSIFICATION	0.9999964818214084	WITHOUT_CLASSIFICATION	3.5181785916167535E-6	IMPLEMENTATION
// must have been loaded from our known classloader hierarchy	WITHOUT_CLASSIFICATION	0.9999853379736833	WITHOUT_CLASSIFICATION	1.4662026316672548E-5	IMPLEMENTATION
// Special classes like Collections.EMPTY_LIST are inner classes that are private but  // implement public interfaces.  Their methods are all public methods for the public  // interface.  Let these public methods execute via setAccessible(true). 	WITHOUT_CLASSIFICATION	0.9998066043911423	WITHOUT_CLASSIFICATION	1.9339560885772106E-4	IMPLEMENTATION
// search through all declared methods to find a closest match	WITHOUT_CLASSIFICATION	0.9999871672411137	WITHOUT_CLASSIFICATION	1.2832758886334282E-5	IMPLEMENTATION
// no matching method found	WITHOUT_CLASSIFICATION	0.9999003590607681	WITHOUT_CLASSIFICATION	9.964093923179508E-5	IMPLEMENTATION
// this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.9999991453805724	WITHOUT_CLASSIFICATION	8.546194274694287E-7	IMPLEMENTATION
/*         * First we need to register the JRuby engine.         */	WITHOUT_CLASSIFICATION	0.9999330279079728	WITHOUT_CLASSIFICATION	6.697209202724978E-5	IMPLEMENTATION
/*         * Now we create a new BSFManager.         */	WITHOUT_CLASSIFICATION	0.999991241589359	WITHOUT_CLASSIFICATION	8.758410640871458E-6	IMPLEMENTATION
/*         * Initialize a simple Frame.          */	WITHOUT_CLASSIFICATION	0.9999963760068691	WITHOUT_CLASSIFICATION	3.623993130912321E-6	IMPLEMENTATION
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9998656243228986	WITHOUT_CLASSIFICATION	1.343756771013328E-4	IMPLEMENTATION
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9998656243228986	WITHOUT_CLASSIFICATION	1.343756771013328E-4	IMPLEMENTATION
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999585891295203	WITHOUT_CLASSIFICATION	4.141087047966806E-5	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.9996469563626712	WITHOUT_CLASSIFICATION	3.5304363732876267E-4	IMPLEMENTATION
// // this test really means, that this is a ruby-defined subclass of a java class //	WITHOUT_CLASSIFICATION	0.9999991453805724	WITHOUT_CLASSIFICATION	8.546194274694287E-7	IMPLEMENTATION
// for our purposes, Accessibles are also Members, and vice-versa, // so we'll include Member methods here.	WITHOUT_CLASSIFICATION	0.9999951133056063	WITHOUT_CLASSIFICATION	4.886694393681541E-6	IMPLEMENTATION
/*             * Declare those components as beans in BSF. Then it will be             * possible to access those components in Ruby as global             * variables ($frame, $menubar, ...)             */	WITHOUT_CLASSIFICATION	0.9999999988079303	WITHOUT_CLASSIFICATION	1.1920696975644872E-9	IMPLEMENTATION
/*              * Execute a Ruby script (add the menubar to the frame).             */	WITHOUT_CLASSIFICATION	0.9999976847588833	WITHOUT_CLASSIFICATION	2.3152411167208597E-6	IMPLEMENTATION
/*                     * Execute Ruby statements.                     */	WITHOUT_CLASSIFICATION	0.9999932549423076	WITHOUT_CLASSIFICATION	6.7450576922739096E-6	IMPLEMENTATION
/*                     * Evaluates a Ruby expression and display the result.                     */	WITHOUT_CLASSIFICATION	0.9999975151735182	WITHOUT_CLASSIFICATION	2.4848264817492156E-6	IMPLEMENTATION
// Populate values for the parameter names	WITHOUT_CLASSIFICATION	0.9999995212489995	WITHOUT_CLASSIFICATION	4.787510004456309E-7	IMPLEMENTATION
/* package scope */	WITHOUT_CLASSIFICATION	0.9995634993862954	WITHOUT_CLASSIFICATION	4.365006137045746E-4	IMPLEMENTATION
// This point is only reached if there was an exception handler // installed.	WITHOUT_CLASSIFICATION	0.9999995060422102	WITHOUT_CLASSIFICATION	4.939577897100515E-7	IMPLEMENTATION
// // Ruby-level methods //	WITHOUT_CLASSIFICATION	0.9999372570003932	WITHOUT_CLASSIFICATION	6.274299960677302E-5	IMPLEMENTATION
// need names ordered for key generation later	WITHOUT_CLASSIFICATION	0.9994082285493822	WITHOUT_CLASSIFICATION	5.917714506177942E-4	IMPLEMENTATION
// we only collect methods and interfaces for  // user-defined proxy classes.	WITHOUT_CLASSIFICATION	0.9999940135322016	WITHOUT_CLASSIFICATION	5.986467798259592E-6	IMPLEMENTATION
// get JavaClass if this is the new proxy class; verify it // matches if this is a superclass proxy.	WITHOUT_CLASSIFICATION	0.9999981060900693	WITHOUT_CLASSIFICATION	1.8939099306791356E-6	IMPLEMENTATION
// get any included interfaces	WITHOUT_CLASSIFICATION	0.9999844347276222	WITHOUT_CLASSIFICATION	1.5565272377810405E-5	IMPLEMENTATION
// lock in the overridden methods for the new class, and any as-yet // uninstantiated ancestor class.	WITHOUT_CLASSIFICATION	0.9999986771547518	WITHOUT_CLASSIFICATION	1.3228452482231632E-6	IMPLEMENTATION
// statically initialized below	WITHOUT_CLASSIFICATION	0.9999687800535885	WITHOUT_CLASSIFICATION	3.1219946411531704E-5	IMPLEMENTATION
// finish class initializer	WITHOUT_CLASSIFICATION	0.9997786867102959	WITHOUT_CLASSIFICATION	2.213132897041311E-4	IMPLEMENTATION
// trigger class initialization for the class	WITHOUT_CLASSIFICATION	0.9999021971621115	WITHOUT_CLASSIFICATION	9.780283788847595E-5	IMPLEMENTATION
// should not happen!	WITHOUT_CLASSIFICATION	0.9961476416339735	WITHOUT_CLASSIFICATION	0.0038523583660264376	IMPLEMENTATION
// start class	WITHOUT_CLASSIFICATION	0.9999614711756977	WITHOUT_CLASSIFICATION	3.852882430236101E-5	IMPLEMENTATION
// make getter for handler	WITHOUT_CLASSIFICATION	0.999877017487412	WITHOUT_CLASSIFICATION	1.2298251258791926E-4	IMPLEMENTATION
// make getter for proxy class	WITHOUT_CLASSIFICATION	0.999975234286724	WITHOUT_CLASSIFICATION	2.4765713276033324E-5	IMPLEMENTATION
// add (potentially) overridden names to the key. // TODO: see note above re: optimizations	WITHOUT_CLASSIFICATION	0.9312558884319416	IMPLEMENTATION	0.06874411156805839	WITHOUT_CLASSIFICATION
// We generate all constructors and let some fail during invocation later	WITHOUT_CLASSIFICATION	0.9998809137081417	WITHOUT_CLASSIFICATION	1.1908629185819032E-4	IMPLEMENTATION
// create static private method field	WITHOUT_CLASSIFICATION	0.9995016572731156	WITHOUT_CLASSIFICATION	4.983427268844547E-4	IMPLEMENTATION
// load static empty array	WITHOUT_CLASSIFICATION	0.9998739693988561	WITHOUT_CLASSIFICATION	1.2603060114398391E-4	IMPLEMENTATION
// box arguments	WITHOUT_CLASSIFICATION	0.9998857083448587	WITHOUT_CLASSIFICATION	1.1429165514137623E-4	IMPLEMENTATION
// this is a simple rethrow handler	WITHOUT_CLASSIFICATION	0.9999636665731433	WITHOUT_CLASSIFICATION	3.6333426856738066E-5	IMPLEMENTATION
// // construct the super-proxy method //	WITHOUT_CLASSIFICATION	0.9998138531145392	WITHOUT_CLASSIFICATION	1.8614688546083962E-4	IMPLEMENTATION
// do a void return	WITHOUT_CLASSIFICATION	0.9999428606036772	WITHOUT_CLASSIFICATION	5.713939632270324E-5	IMPLEMENTATION
// // utility methods //	WITHOUT_CLASSIFICATION	0.9999601761265697	WITHOUT_CLASSIFICATION	3.98238734302814E-5	IMPLEMENTATION
// Is there a supplied proc argument or do we assume a block was // supplied	WITHOUT_CLASSIFICATION	0.9999713100928225	WITHOUT_CLASSIFICATION	2.8689907177468843E-5	IMPLEMENTATION
// store call information so method_missing impl can use it	WITHOUT_CLASSIFICATION	0.9999159239341141	WITHOUT_CLASSIFICATION	8.407606588591105E-5	IMPLEMENTATION
// use the same logic as in EvaluationState	WITHOUT_CLASSIFICATION	0.9999795646387758	WITHOUT_CLASSIFICATION	2.0435361224252824E-5	IMPLEMENTATION
// no opt, no rest, exact match	WITHOUT_CLASSIFICATION	0.9999765306458256	WITHOUT_CLASSIFICATION	2.346935417438857E-5	IMPLEMENTATION
// only rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999262963366884	WITHOUT_CLASSIFICATION	7.370366331158248E-5	IMPLEMENTATION
// opt but no rest, must be at least required and no more than required + opt	WITHOUT_CLASSIFICATION	0.9997537990204532	WITHOUT_CLASSIFICATION	2.4620097954669183E-4	IMPLEMENTATION
// opt and rest, must be at least required	WITHOUT_CLASSIFICATION	0.9998856094424047	WITHOUT_CLASSIFICATION	1.1439055759538589E-4	IMPLEMENTATION
// No block from a nil proc	WITHOUT_CLASSIFICATION	0.999980605110004	WITHOUT_CLASSIFICATION	1.9394889995952994E-5	IMPLEMENTATION
// If not already a proc then we should try and make it one.	WITHOUT_CLASSIFICATION	0.9962989939363294	WITHOUT_CLASSIFICATION	0.0037010060636705282	IMPLEMENTATION
// The current block is already associated with proc.  No need to create a new one	WITHOUT_CLASSIFICATION	0.9990251496866526	WITHOUT_CLASSIFICATION	9.748503133473994E-4	IMPLEMENTATION
// Has the method that is calling super received a block argument	WITHOUT_CLASSIFICATION	0.9993550244834871	WITHOUT_CLASSIFICATION	6.449755165128461E-4	IMPLEMENTATION
/* NUL */	WITHOUT_CLASSIFICATION	0.9999980676169425	WITHOUT_CLASSIFICATION	1.932383057429086E-6	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9998572070482956	WITHOUT_CLASSIFICATION	1.4279295170429503E-4	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999696853714746	WITHOUT_CLASSIFICATION	3.0314628525365144E-5	IMPLEMENTATION
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999881339245767	WITHOUT_CLASSIFICATION	1.1866075423188814E-5	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9996106071777439	WITHOUT_CLASSIFICATION	3.8939282225608236E-4	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9996612927501303	WITHOUT_CLASSIFICATION	3.3870724986971226E-4	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9996612927501303	WITHOUT_CLASSIFICATION	3.3870724986971226E-4	IMPLEMENTATION
// classes are directly in the hierarchy, so no special logic is necessary for implementer	WITHOUT_CLASSIFICATION	0.9999983321816839	WITHOUT_CLASSIFICATION	1.6678183161347594E-6	IMPLEMENTATION
// must be power of 2 // must be power of 2	WITHOUT_CLASSIFICATION	0.9999675396947705	WITHOUT_CLASSIFICATION	3.246030522953044E-5	IMPLEMENTATION
// Find power-of-two sizes best matching arguments	WITHOUT_CLASSIFICATION	0.9999313692969601	WITHOUT_CLASSIFICATION	6.863070303986349E-5	IMPLEMENTATION
// note segmentShift differs from ConcurrentHashMap's calculation due to // issues with System.identityHashCode (upper n bits always 0, at least  // under Java 1.6 / WinXP)	WITHOUT_CLASSIFICATION	0.9999993674124357	WITHOUT_CLASSIFICATION	6.325875642764271E-7	IMPLEMENTATION
//      System.err.println("***ObjectProxyCache " + id + " started at "+ new java.util.Date());	WITHOUT_CLASSIFICATION	0.9998672524751674	WITHOUT_CLASSIFICATION	1.3274752483249946E-4	IMPLEMENTATION
//    protected void finalize() throws Throwable { //        System.err.println("***ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); //    }	WITHOUT_CLASSIFICATION	0.9998627978102702	WITHOUT_CLASSIFICATION	1.372021897297004E-4	IMPLEMENTATION
// EntryRefs include hash with key to facilitate lookup by Segment#expunge // after ref is removed from ReferenceQueue	WITHOUT_CLASSIFICATION	0.9996923494713221	WITHOUT_CLASSIFICATION	3.0765052867793864E-4	IMPLEMENTATION
// Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather // makes it a final field.  The theory is that doing so should force a happens-before // relationship WRT the WeakReference constructor, guaranteeing that the key will be // visibile to other threads (unless it's been GC'ed).  See JLS 17.5 (final fields) and // 17.4.5 (Happens-before order) to confirm or refute my reasoning here.	WITHOUT_CLASSIFICATION	0.9999994998735676	WITHOUT_CLASSIFICATION	5.001264324506262E-7	IMPLEMENTATION
// references to the Java object and its proxy will either both be // weak or both be soft, since the proxy contains a strong reference // to the object, so it wouldn't make sense for the reference types // to differ.	WITHOUT_CLASSIFICATION	0.9999999945453739	WITHOUT_CLASSIFICATION	5.454626110755372E-9	IMPLEMENTATION
// ctor used by remove/rehash	WITHOUT_CLASSIFICATION	0.9999735016949569	WITHOUT_CLASSIFICATION	2.6498305043092863E-5	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999900302027984	WITHOUT_CLASSIFICATION	9.969797201519768E-6	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999900302027984	WITHOUT_CLASSIFICATION	9.969797201519768E-6	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999900302027984	WITHOUT_CLASSIFICATION	9.969797201519768E-6	IMPLEMENTATION
// note that we'll potentially see the refs for both the java object and // proxy -- whichever we see first will cause the entry to be removed; // the other will not match an entry and will be ignored.	WITHOUT_CLASSIFICATION	0.9999969215640299	WITHOUT_CLASSIFICATION	3.0784359702252573E-6	IMPLEMENTATION
// temp method to verify tableSize value // must be called under lock	WITHOUT_CLASSIFICATION	0.9999956994636353	WITHOUT_CLASSIFICATION	4.300536364669323E-6	IMPLEMENTATION
// Single node in list	WITHOUT_CLASSIFICATION	0.9999886788585551	WITHOUT_CLASSIFICATION	1.1321141444944279E-5	IMPLEMENTATION
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9997912911167182	WITHOUT_CLASSIFICATION	2.0870888328187442E-4	IMPLEMENTATION
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9997912911167182	WITHOUT_CLASSIFICATION	2.0870888328187442E-4	IMPLEMENTATION
// entry exists, proxy has been gc'ed. replace entry.	WITHOUT_CLASSIFICATION	0.9996900186152748	WITHOUT_CLASSIFICATION	3.09981384725139E-4	IMPLEMENTATION
// Where we get new positions from.	WITHOUT_CLASSIFICATION	0.9996588209741932	WITHOUT_CLASSIFICATION	3.4117902580681214E-4	IMPLEMENTATION
// Start of string ([, (, {, <, ', ", \n) 	WITHOUT_CLASSIFICATION	0.9999990468020625	WITHOUT_CLASSIFICATION	9.531979373585195E-7	IMPLEMENTATION
// Number of newlines read from the reader	WITHOUT_CLASSIFICATION	0.9999979194016683	WITHOUT_CLASSIFICATION	2.080598331817344E-6	IMPLEMENTATION
// How many bytes into the source are we?	WITHOUT_CLASSIFICATION	0.9999780742224255	WITHOUT_CLASSIFICATION	2.192577757457712E-5	IMPLEMENTATION
// For 'list' and only populated if list is not null.	WITHOUT_CLASSIFICATION	0.9999002711299325	WITHOUT_CLASSIFICATION	9.972887006741978E-5	IMPLEMENTATION
// Last full line read.	WITHOUT_CLASSIFICATION	0.9999231544489837	WITHOUT_CLASSIFICATION	7.684555101624157E-5	IMPLEMENTATION
// Save sourceLine for error reporting to display line where error occurred	WITHOUT_CLASSIFICATION	0.9995960721851963	WITHOUT_CLASSIFICATION	4.03927814803672E-4	IMPLEMENTATION
// Get rest of line. lineBuffer filled as side-effect...	WITHOUT_CLASSIFICATION	0.9999897022425194	WITHOUT_CLASSIFICATION	1.0297757480718884E-5	IMPLEMENTATION
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999425906951431	WITHOUT_CLASSIFICATION	5.740930485689313E-5	IMPLEMENTATION
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999425906951431	WITHOUT_CLASSIFICATION	5.740930485689313E-5	IMPLEMENTATION
// End of string (], ), }, >, ', ", \0)	WITHOUT_CLASSIFICATION	0.9999989694454366	WITHOUT_CLASSIFICATION	1.0305545633090996E-6	IMPLEMENTATION
// How many strings are nested in the current string term	WITHOUT_CLASSIFICATION	0.9999971855944921	WITHOUT_CLASSIFICATION	2.814405507954909E-6	IMPLEMENTATION
// Single-quote fast path	WITHOUT_CLASSIFICATION	0.9998990858151944	WITHOUT_CLASSIFICATION	1.0091418480567549E-4	IMPLEMENTATION
// Regexp engine 'java'	WITHOUT_CLASSIFICATION	0.9999557157692734	WITHOUT_CLASSIFICATION	4.4284230726501976E-5	IMPLEMENTATION
// Was a goto in original ruby lexer	WITHOUT_CLASSIFICATION	0.9999854997070231	WITHOUT_CLASSIFICATION	1.450029297692574E-5	IMPLEMENTATION
/* just ignore */	WITHOUT_CLASSIFICATION	0.9999851668954884	WITHOUT_CLASSIFICATION	1.4833104511576844E-5	IMPLEMENTATION
/* octal constant */	WITHOUT_CLASSIFICATION	0.9998418406981799	WITHOUT_CLASSIFICATION	1.5815930182004904E-4	IMPLEMENTATION
/* hex constant */	WITHOUT_CLASSIFICATION	0.9998606847651554	WITHOUT_CLASSIFICATION	1.3931523484451473E-4	IMPLEMENTATION
// PUSH(1)	WITHOUT_CLASSIFICATION	0.9999901088813848	WITHOUT_CLASSIFICATION	9.891118615195496E-6	IMPLEMENTATION
// POP	WITHOUT_CLASSIFICATION	0.9999901088813848	WITHOUT_CLASSIFICATION	9.891118615195496E-6	IMPLEMENTATION
// PUSH(0).  If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.	WITHOUT_CLASSIFICATION	0.9999764167041288	WITHOUT_CLASSIFICATION	2.3583295871201136E-5	IMPLEMENTATION
// LEXPOP	WITHOUT_CLASSIFICATION	0.9999901088813848	WITHOUT_CLASSIFICATION	9.891118615195496E-6	IMPLEMENTATION
// SET_P	WITHOUT_CLASSIFICATION	0.9999901088813848	WITHOUT_CLASSIFICATION	9.891118615195496E-6	IMPLEMENTATION
// Marker delimiting heredoc boundary	WITHOUT_CLASSIFICATION	0.9999218950308523	WITHOUT_CLASSIFICATION	7.810496914773903E-5	IMPLEMENTATION
// Found end marker for this heredoc	WITHOUT_CLASSIFICATION	0.9994103756524259	WITHOUT_CLASSIFICATION	5.896243475741606E-4	IMPLEMENTATION
// Put back lastLine for any elements past start of heredoc marker	WITHOUT_CLASSIFICATION	0.9999940404165856	WITHOUT_CLASSIFICATION	5.959583414381209E-6	IMPLEMENTATION
// Last token read via yylex().	WITHOUT_CLASSIFICATION	0.9999844483267628	WITHOUT_CLASSIFICATION	1.5551673237220608E-5	IMPLEMENTATION
// Value of last token which had a value associated with it.	WITHOUT_CLASSIFICATION	0.9999975931647749	WITHOUT_CLASSIFICATION	2.4068352251262225E-6	IMPLEMENTATION
// Stream of data that yylex() examines.	WITHOUT_CLASSIFICATION	0.9999867898638104	WITHOUT_CLASSIFICATION	1.321013618955477E-5	IMPLEMENTATION
// Used for tiny smidgen of grammar in lexer (see setParserSupport())	WITHOUT_CLASSIFICATION	0.9999997805909187	WITHOUT_CLASSIFICATION	2.1940908133608537E-7	IMPLEMENTATION
// Give a name to a value.  Enebo: This should be used more.	WITHOUT_CLASSIFICATION	0.9998900153243081	WITHOUT_CLASSIFICATION	1.0998467569188467E-4	IMPLEMENTATION
// When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').	WITHOUT_CLASSIFICATION	0.9993053810170092	WITHOUT_CLASSIFICATION	6.946189829909272E-4	IMPLEMENTATION
// Are we lexing Ruby 1.8 or 1.9+ syntax	WITHOUT_CLASSIFICATION	0.9999208105762977	WITHOUT_CLASSIFICATION	7.918942370233349E-5	IMPLEMENTATION
// Count of nested parentheses (1.9 only)	WITHOUT_CLASSIFICATION	0.9998897133225152	WITHOUT_CLASSIFICATION	1.1028667748471626E-4	IMPLEMENTATION
// 1.9 only	WITHOUT_CLASSIFICATION	0.999848858859104	WITHOUT_CLASSIFICATION	1.5114114089585416E-4	IMPLEMENTATION
// Short-hand (e.g. %{,%.,%!,... versus %Q{).	WITHOUT_CLASSIFICATION	0.9999504633956436	WITHOUT_CLASSIFICATION	4.9536604356405796E-5	IMPLEMENTATION
// Long-hand (e.g. %Q{}).	WITHOUT_CLASSIFICATION	0.9999690844463068	WITHOUT_CLASSIFICATION	3.09155536931829E-5	IMPLEMENTATION
/* no mb || ismbchar(term)*/	WITHOUT_CLASSIFICATION	0.9972213006451536	WITHOUT_CLASSIFICATION	0.002778699354846455	IMPLEMENTATION
/*     * Not normally used, but is left in here since it can be useful in debugging     * grammar and lexing problems.     *     */	WITHOUT_CLASSIFICATION	0.999999893748879	WITHOUT_CLASSIFICATION	1.0625112100827656E-7	IMPLEMENTATION
// DEBUGGING HELP 	WITHOUT_CLASSIFICATION	0.9996614076862033	WITHOUT_CLASSIFICATION	3.3859231379671905E-4	IMPLEMENTATION
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999980676169425	WITHOUT_CLASSIFICATION	1.932383057429086E-6	IMPLEMENTATION
/* end of script. */	WITHOUT_CLASSIFICATION	0.9998814526460491	WITHOUT_CLASSIFICATION	1.1854735395092527E-4	IMPLEMENTATION
/* white spaces */	WITHOUT_CLASSIFICATION	0.9999589114863793	WITHOUT_CLASSIFICATION	4.1088513620642095E-5	IMPLEMENTATION
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999980676169425	WITHOUT_CLASSIFICATION	1.932383057429086E-6	IMPLEMENTATION
/* it's a comment */	WITHOUT_CLASSIFICATION	0.999952750248585	WITHOUT_CLASSIFICATION	4.7249751414954463E-5	IMPLEMENTATION
// Replace a string of newlines with a single one	WITHOUT_CLASSIFICATION	0.9999960752406519	WITHOUT_CLASSIFICATION	3.924759347994321E-6	IMPLEMENTATION
/* $\: output record separator */	WITHOUT_CLASSIFICATION	0.9999889466213835	WITHOUT_CLASSIFICATION	1.1053378616536407E-5	IMPLEMENTATION
// EOF (ENEBO: After default?	WITHOUT_CLASSIFICATION	0.9999288086303764	WITHOUT_CLASSIFICATION	7.119136962366241E-5	IMPLEMENTATION
// documentation nodes	WITHOUT_CLASSIFICATION	0.9999448661099488	WITHOUT_CLASSIFICATION	5.513389005126849E-5	IMPLEMENTATION
// In case last next was the newline.	WITHOUT_CLASSIFICATION	0.9999672904369805	WITHOUT_CLASSIFICATION	3.27095630195613E-5	IMPLEMENTATION
// Just a plain bang	WITHOUT_CLASSIFICATION	0.9998540119217428	WITHOUT_CLASSIFICATION	1.459880782572346E-4	IMPLEMENTATION
/* $_: last read line string */	WITHOUT_CLASSIFICATION	0.9999999132289846	WITHOUT_CLASSIFICATION	8.677101537577605E-8	IMPLEMENTATION
/* $~: match-data */	WITHOUT_CLASSIFICATION	0.9999338107859356	WITHOUT_CLASSIFICATION	6.6189214064411E-5	IMPLEMENTATION
/* $*: argv */	WITHOUT_CLASSIFICATION	0.9999338107859356	WITHOUT_CLASSIFICATION	6.6189214064411E-5	IMPLEMENTATION
/* $$: pid */	WITHOUT_CLASSIFICATION	0.9999341674083252	WITHOUT_CLASSIFICATION	6.583259167476146E-5	IMPLEMENTATION
/* $?: last status */	WITHOUT_CLASSIFICATION	0.9999880114216961	WITHOUT_CLASSIFICATION	1.198857830392821E-5	IMPLEMENTATION
/* $!: error string */	WITHOUT_CLASSIFICATION	0.9999990144240065	WITHOUT_CLASSIFICATION	9.855759935326486E-7	IMPLEMENTATION
/* $@: error position */	WITHOUT_CLASSIFICATION	0.9999729879316563	WITHOUT_CLASSIFICATION	2.7012068343574318E-5	IMPLEMENTATION
/* $/: input record separator */	WITHOUT_CLASSIFICATION	0.9999897367713758	WITHOUT_CLASSIFICATION	1.0263228624088516E-5	IMPLEMENTATION
/* $;: field separator */	WITHOUT_CLASSIFICATION	0.9999909164472557	WITHOUT_CLASSIFICATION	9.083552744362226E-6	IMPLEMENTATION
/* $,: output field separator */	WITHOUT_CLASSIFICATION	0.9999895564050291	WITHOUT_CLASSIFICATION	1.0443594970801511E-5	IMPLEMENTATION
/* $.: last read line number */	WITHOUT_CLASSIFICATION	0.9999961879476316	WITHOUT_CLASSIFICATION	3.812052368461906E-6	IMPLEMENTATION
/* $=: ignorecase */	WITHOUT_CLASSIFICATION	0.9999338107859356	WITHOUT_CLASSIFICATION	6.6189214064411E-5	IMPLEMENTATION
/* $:: load path */	WITHOUT_CLASSIFICATION	0.9998732449740053	WITHOUT_CLASSIFICATION	1.2675502599468697E-4	IMPLEMENTATION
/* $<: reading filename */	WITHOUT_CLASSIFICATION	0.999998645819414	WITHOUT_CLASSIFICATION	1.3541805859088027E-6	IMPLEMENTATION
/* $": already loaded files */	WITHOUT_CLASSIFICATION	0.9999982443883466	WITHOUT_CLASSIFICATION	1.7556116533811659E-6	IMPLEMENTATION
/* $&: last match */	WITHOUT_CLASSIFICATION	0.9999769754288087	WITHOUT_CLASSIFICATION	2.3024571191374318E-5	IMPLEMENTATION
/* $`: string before last match */	WITHOUT_CLASSIFICATION	0.9999998831782347	WITHOUT_CLASSIFICATION	1.1682176525115385E-7	IMPLEMENTATION
/* $': string after last match */	WITHOUT_CLASSIFICATION	0.9999999273388553	WITHOUT_CLASSIFICATION	7.266114458582144E-8	IMPLEMENTATION
// methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop	WITHOUT_CLASSIFICATION	0.9999993989619428	WITHOUT_CLASSIFICATION	6.010380571222967E-7	IMPLEMENTATION
/* See if it is a reserved word.  */	WITHOUT_CLASSIFICATION	0.9999979243459896	WITHOUT_CLASSIFICATION	2.0756540104107256E-6	IMPLEMENTATION
// enum lex_state	WITHOUT_CLASSIFICATION	0.9989825367366789	WITHOUT_CLASSIFICATION	0.0010174632633211172	IMPLEMENTATION
// block (primary)	WITHOUT_CLASSIFICATION	0.9983837173560897	WITHOUT_CLASSIFICATION	0.0016162826439103492	IMPLEMENTATION
// block (expr)	WITHOUT_CLASSIFICATION	0.9983837173560897	WITHOUT_CLASSIFICATION	0.0016162826439103492	IMPLEMENTATION
// hash	WITHOUT_CLASSIFICATION	0.9999904177099084	WITHOUT_CLASSIFICATION	9.582290091557442E-6	IMPLEMENTATION
// ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.	WITHOUT_CLASSIFICATION	0.9999230001297305	WITHOUT_CLASSIFICATION	7.699987026953261E-5	IMPLEMENTATION
// FIXME: peek('u') utf8 stuff for 1.9	WITHOUT_CLASSIFICATION	0.9883893987853548	WITHOUT_CLASSIFICATION	0.01161060121464519	IMPLEMENTATION
// We don't append '+' since Java number parser gets confused	WITHOUT_CLASSIFICATION	0.9999994557137217	WITHOUT_CLASSIFICATION	5.442862781988167E-7	IMPLEMENTATION
//  hexadecimal	WITHOUT_CLASSIFICATION	0.9996556562047915	WITHOUT_CLASSIFICATION	3.4434379520857536E-4	IMPLEMENTATION
// binary	WITHOUT_CLASSIFICATION	0.9999940400527134	WITHOUT_CLASSIFICATION	5.959947286658356E-6	IMPLEMENTATION
// decimal	WITHOUT_CLASSIFICATION	0.9999929055684196	WITHOUT_CLASSIFICATION	7.094431580516451E-6	IMPLEMENTATION
//Octal	WITHOUT_CLASSIFICATION	0.9999696503844563	WITHOUT_CLASSIFICATION	3.034961554371392E-5	IMPLEMENTATION
//  '_' in number just ignored	WITHOUT_CLASSIFICATION	0.9999687679612351	WITHOUT_CLASSIFICATION	3.123203876482748E-5	IMPLEMENTATION
// backslash	WITHOUT_CLASSIFICATION	0.9996699581224873	WITHOUT_CLASSIFICATION	3.3004187751270724E-4	IMPLEMENTATION
// newline	WITHOUT_CLASSIFICATION	0.9999911477821324	WITHOUT_CLASSIFICATION	8.852217867686532E-6	IMPLEMENTATION
// horizontal tab	WITHOUT_CLASSIFICATION	0.9987890402466336	WITHOUT_CLASSIFICATION	0.0012109597533663226	IMPLEMENTATION
// form feed	WITHOUT_CLASSIFICATION	0.9996368415554409	WITHOUT_CLASSIFICATION	3.631584445591263E-4	IMPLEMENTATION
// vertical tab	WITHOUT_CLASSIFICATION	0.9985681728017284	WITHOUT_CLASSIFICATION	0.0014318271982715794	IMPLEMENTATION
// alarm(bell)	WITHOUT_CLASSIFICATION	0.9996612927501303	WITHOUT_CLASSIFICATION	3.3870724986971226E-4	IMPLEMENTATION
// escape	WITHOUT_CLASSIFICATION	0.9999969692525544	WITHOUT_CLASSIFICATION	3.0307474456846234E-6	IMPLEMENTATION
// hex constant	WITHOUT_CLASSIFICATION	0.9992873026664597	WITHOUT_CLASSIFICATION	7.126973335403132E-4	IMPLEMENTATION
//char hexValue = scanHex(2);	WITHOUT_CLASSIFICATION	0.999803160394392	WITHOUT_CLASSIFICATION	1.968396056079797E-4	IMPLEMENTATION
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999956319406218	WITHOUT_CLASSIFICATION	4.368059378228701E-6	IMPLEMENTATION
// space	WITHOUT_CLASSIFICATION	0.9999970785149679	WITHOUT_CLASSIFICATION	2.9214850320881734E-6	IMPLEMENTATION
// Where we started this marker match	WITHOUT_CLASSIFICATION	0.9997309333362059	WITHOUT_CLASSIFICATION	2.690666637940872E-4	IMPLEMENTATION
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999987930141525	WITHOUT_CLASSIFICATION	1.2069858474635632E-6	IMPLEMENTATION
// We use offset here to keep track of extra newlines for windows	WITHOUT_CLASSIFICATION	0.9999753517183836	WITHOUT_CLASSIFICATION	2.4648281616393933E-5	IMPLEMENTATION
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999956319406218	WITHOUT_CLASSIFICATION	4.368059378228701E-6	IMPLEMENTATION
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.7914676459440381	IMPLEMENTATION	0.20853235405596202	WITHOUT_CLASSIFICATION
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.7914676459440381	IMPLEMENTATION	0.20853235405596202	WITHOUT_CLASSIFICATION
// Where we get our newest char's	WITHOUT_CLASSIFICATION	0.9999743161750961	WITHOUT_CLASSIFICATION	2.5683824903946743E-5	IMPLEMENTATION
// Our readback/pushback buffer.	WITHOUT_CLASSIFICATION	0.9999254274380267	WITHOUT_CLASSIFICATION	7.457256197321997E-5	IMPLEMENTATION
// index of last character in pushback buffer	WITHOUT_CLASSIFICATION	0.9999939159596082	WITHOUT_CLASSIFICATION	6.084040391837222E-6	IMPLEMENTATION
// Character read before previous read	WITHOUT_CLASSIFICATION	0.9999852861813576	WITHOUT_CLASSIFICATION	1.4713818642444194E-5	IMPLEMENTATION
// keep value of twoAgo around so we can restore after we unread	WITHOUT_CLASSIFICATION	0.9999979213418451	WITHOUT_CLASSIFICATION	2.0786581549576E-6	IMPLEMENTATION
// NetProtocolBufferedIOLibrary	WITHOUT_CLASSIFICATION	0.9999105212360142	WITHOUT_CLASSIFICATION	8.947876398585319E-5	IMPLEMENTATION
// BigDecimalLibrary	WITHOUT_CLASSIFICATION	0.9996612927501303	WITHOUT_CLASSIFICATION	3.3870724986971226E-4	IMPLEMENTATION
// TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. // We did it here for now	WITHOUT_CLASSIFICATION	0.9926142646309216	IMPLEMENTATION	0.007385735369078341	WITHOUT_CLASSIFICATION
// Ruby's designation for some platforms, minus version numbers in some cases	WITHOUT_CLASSIFICATION	0.9999916168623649	WITHOUT_CLASSIFICATION	8.383137635162425E-6	IMPLEMENTATION
// that's what JDK5 produces on Windows Vista	WITHOUT_CLASSIFICATION	0.997920693914943	WITHOUT_CLASSIFICATION	0.002079306085057026	IMPLEMENTATION
// Rubygems is too specific on host cpu so until we have real need lets default to universal //setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));	WITHOUT_CLASSIFICATION	0.999848777341868	WITHOUT_CLASSIFICATION	1.5122265813207638E-4	IMPLEMENTATION
// Our shell scripts pass in non-canonicalized paths, but even if we didn't // anyone who did would become unhappy because Ruby apps expect no relative // operators in the pathname (rubygems, for example).	WITHOUT_CLASSIFICATION	0.9999998432613529	WITHOUT_CLASSIFICATION	1.567386471381257E-7	IMPLEMENTATION
// this set is only for darwin	WITHOUT_CLASSIFICATION	0.999987709767329	WITHOUT_CLASSIFICATION	1.2290232670953253E-5	IMPLEMENTATION
// DigestLibrary	WITHOUT_CLASSIFICATION	0.9996612927501303	WITHOUT_CLASSIFICATION	3.3870724986971226E-4	IMPLEMENTATION
// all errors, just info; do not prevent loading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9934767957106712	WITHOUT_CLASSIFICATION	0.0065232042893288225	IMPLEMENTATION
// all errors, just info; do not prevent unloading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9925529373605322	WITHOUT_CLASSIFICATION	0.007447062639467821	IMPLEMENTATION
// do nothing, return dummy version below	WITHOUT_CLASSIFICATION	0.9999942359126417	WITHOUT_CLASSIFICATION	5.7640873583222415E-6	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
// line 329	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9997401412721026	WITHOUT_CLASSIFICATION	2.5985872789726283E-4	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999480887737465	WITHOUT_CLASSIFICATION	5.1911226253404546E-5	IMPLEMENTATION
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9998910691496131	WITHOUT_CLASSIFICATION	1.0893085038679415E-4	IMPLEMENTATION
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999512235587925	WITHOUT_CLASSIFICATION	4.8776441207508925E-5	IMPLEMENTATION
// shift to yyN	WITHOUT_CLASSIFICATION	0.9997015464168797	WITHOUT_CLASSIFICATION	2.984535831203179E-4	IMPLEMENTATION
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9996898015061243	WITHOUT_CLASSIFICATION	3.1019849387567704E-4	IMPLEMENTATION
// leave stack alone	WITHOUT_CLASSIFICATION	0.9998301984677538	WITHOUT_CLASSIFICATION	1.6980153224617326E-4	IMPLEMENTATION
// line 271	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 274	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 303	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 311	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 314	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 317	WITHOUT_CLASSIFICATION	0.9995472557832366	WITHOUT_CLASSIFICATION	4.5274421676337183E-4	IMPLEMENTATION
// line 332	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 338	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 341	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 344	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 351	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 358	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 367	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 372	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 378	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 382	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 407	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 411	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 414	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 417	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 420	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 426	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 434	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 443	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 446	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 452	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 457	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 464	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 467	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 470	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 479	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 484	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 486	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 492	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 498	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 501	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 504	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 507	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 510	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 519	WITHOUT_CLASSIFICATION	0.9995472467135305	WITHOUT_CLASSIFICATION	4.5275328646945115E-4	IMPLEMENTATION
// line 525	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
// line 537	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 540	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 543	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 546	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 556	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 559	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 563	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 566	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 569	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 575	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 578	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 587	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 596	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 604	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 607	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 610	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 613	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 616	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 634	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 638	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 643	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 646	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 655	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 660	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 667	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 670	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 672	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 696	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 701	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 717	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 720	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 726	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 729	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 732	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 735	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 738	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 751	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 754	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 757	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 760	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 763	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 769	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 772	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 775	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 782	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 788	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 791	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 794	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 797	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 803	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 806	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 809	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 815	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 818	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 821	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 824	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 830	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 833	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 836	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 839	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 842	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 848	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 852	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 858	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 861	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 868	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 871	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 876	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 879	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 883	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 893	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 896	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 899	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 903	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 907	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 915	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 920	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 923	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 926	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 932	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 936	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 940	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 944	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 948	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 956	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 960	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 964	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 967	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 972	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 978	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 980	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 984	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 986	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 996	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1001	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1004	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1008	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1014	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1029	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1032	WITHOUT_CLASSIFICATION	0.9995481223149414	WITHOUT_CLASSIFICATION	4.5187768505865444E-4	IMPLEMENTATION
// line 1034	WITHOUT_CLASSIFICATION	0.9995472880075913	WITHOUT_CLASSIFICATION	4.5271199240866405E-4	IMPLEMENTATION
// line 1045	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1048	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1051	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1058	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1070	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1073	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1076	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1079	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1082	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1089	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1097	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1100	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1103	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1107	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1111	WITHOUT_CLASSIFICATION	0.9995497415246514	WITHOUT_CLASSIFICATION	4.502584753485811E-4	IMPLEMENTATION
// line 1113	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1115	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1119	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1130	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1133	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1135	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1137	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1140	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1151	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1154	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1158	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1164	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1175	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1178	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1187	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1189	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1193	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1204	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1207	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1210	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1214	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1234	WITHOUT_CLASSIFICATION	0.9995507342573413	WITHOUT_CLASSIFICATION	4.492657426587695E-4	IMPLEMENTATION
// line 1239	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1243	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1247	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1251	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1263	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1269	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1280	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1283	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1290	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1296	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1299	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1302	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1309	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1313	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1315	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1320	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1328	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1335	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1348	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1352	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1358	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1374	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1381	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1387	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1392	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1415	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1431	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1434	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1440	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1443	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1453	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1456	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1462	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1465	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1470	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1477	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1480	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1485	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1488	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1496	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1502	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1510	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1513	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1516	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1533	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1550	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1553	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1556	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1565	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1568	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1571	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1574	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1577	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1587	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1595	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1598	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1600	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1609	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1623	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1626	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1629	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1632	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1638	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1641	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1644	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1649	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1655	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1658	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1661	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1672	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1677	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1687	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1694	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1705	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1708	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1725	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1733	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1742	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1745	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1749	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1757	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1769	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1772	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1775	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1784	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1808	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1814	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1818	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1822	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
/* force for args */	WITHOUT_CLASSIFICATION	0.9999385055591781	WITHOUT_CLASSIFICATION	6.149444082184095E-5	IMPLEMENTATION
/*XXX 0;*/	WITHOUT_CLASSIFICATION	0.9999708088769288	WITHOUT_CLASSIFICATION	2.919112307123128E-5	IMPLEMENTATION
/*                      $$ = $3;*/	WITHOUT_CLASSIFICATION	0.9880787049588396	WITHOUT_CLASSIFICATION	0.011921295041160325	IMPLEMENTATION
/*                  }*/	WITHOUT_CLASSIFICATION	0.9969772825697509	WITHOUT_CLASSIFICATION	0.003022717430248987	IMPLEMENTATION
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9996720167821502	WITHOUT_CLASSIFICATION	3.2798321784987747E-4	IMPLEMENTATION
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9730168252730301	WITHOUT_CLASSIFICATION	0.026983174726969848	IMPLEMENTATION
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9969328667036021	WITHOUT_CLASSIFICATION	0.003067133296397816	IMPLEMENTATION
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9969328667036021	WITHOUT_CLASSIFICATION	0.003067133296397816	IMPLEMENTATION
/* NOEX_PRIVATE for toplevel */	WITHOUT_CLASSIFICATION	0.9999903925030372	WITHOUT_CLASSIFICATION	9.607496962739838E-6	IMPLEMENTATION
/*mirko: check*/	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
/* Include pipes on multiple arg type*/	WITHOUT_CLASSIFICATION	0.7980992668240743	WITHOUT_CLASSIFICATION	0.20190073317592563	IMPLEMENTATION
// line 529	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9935959457427334	WITHOUT_CLASSIFICATION	0.006404054257266678	IMPLEMENTATION
/* XXX*/	WITHOUT_CLASSIFICATION	0.99885975581364	WITHOUT_CLASSIFICATION	0.0011402441863599892	IMPLEMENTATION
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999941058502355	WITHOUT_CLASSIFICATION	5.894149764451224E-6	IMPLEMENTATION
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9901863306816028	WITHOUT_CLASSIFICATION	0.009813669318397238	IMPLEMENTATION
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9935959457427334	WITHOUT_CLASSIFICATION	0.006404054257266678	IMPLEMENTATION
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9897778974188081	WITHOUT_CLASSIFICATION	0.010222102581191942	IMPLEMENTATION
// line 1827 "DefaultRubyParser.y"	WITHOUT_CLASSIFICATION	0.9998803614192946	WITHOUT_CLASSIFICATION	1.1963858070537586E-4	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999465362797664	WITHOUT_CLASSIFICATION	5.3463720233693716E-5	IMPLEMENTATION
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9996922277244632	WITHOUT_CLASSIFICATION	3.077722755368124E-4	IMPLEMENTATION
// line 7713 "-"	WITHOUT_CLASSIFICATION	0.9995501826368176	WITHOUT_CLASSIFICATION	4.498173631823727E-4	IMPLEMENTATION
// local scopes are argument scopes by default	WITHOUT_CLASSIFICATION	0.9999992279830742	WITHOUT_CLASSIFICATION	7.72016925925284E-7	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999976315789052	WITHOUT_CLASSIFICATION	2.3684210947597578E-6	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999976315789052	WITHOUT_CLASSIFICATION	2.3684210947597578E-6	IMPLEMENTATION
// We know this is a block scope because a local scope cannot be within a local scope // If topScope was itself it would have created a LocalAsgnNode above.	WITHOUT_CLASSIFICATION	0.9999989258354504	WITHOUT_CLASSIFICATION	1.0741645496654804E-6	IMPLEMENTATION
// ENEBO: 1.9 has CURR nodes for local/block variables.  We don't.  I believe we follow proper logic	WITHOUT_CLASSIFICATION	0.9998352695680838	WITHOUT_CLASSIFICATION	1.647304319161878E-4	IMPLEMENTATION
// odd...but it is odd in ruby too.	WITHOUT_CLASSIFICATION	0.9999892341753762	WITHOUT_CLASSIFICATION	1.0765824623797672E-5	IMPLEMENTATION
// What linenumber will the source think it starts from?	WITHOUT_CLASSIFICATION	0.9996155148062577	WITHOUT_CLASSIFICATION	3.84485193742357E-4	IMPLEMENTATION
// Is this inline source (aka -e "...source...")	WITHOUT_CLASSIFICATION	0.9996979227149054	WITHOUT_CLASSIFICATION	3.0207728509457093E-4	IMPLEMENTATION
// We parse evals more often in source so assume an eval parse.	WITHOUT_CLASSIFICATION	0.9999981170499559	WITHOUT_CLASSIFICATION	1.88295004408911E-6	IMPLEMENTATION
// Should positions added extra IDE-friendly information and leave in all newline nodes	WITHOUT_CLASSIFICATION	0.9999998283225785	WITHOUT_CLASSIFICATION	1.716774214637307E-7	IMPLEMENTATION
// Will parser parse Duby grammar Extensions	WITHOUT_CLASSIFICATION	0.9999898517315008	WITHOUT_CLASSIFICATION	1.0148268499178501E-5	IMPLEMENTATION
// Should we display extra debug information while parsing?	WITHOUT_CLASSIFICATION	0.9999851847861314	WITHOUT_CLASSIFICATION	1.4815213868497778E-5	IMPLEMENTATION
// __END__ marker offset (-1 means none present)	WITHOUT_CLASSIFICATION	0.9999694942970155	WITHOUT_CLASSIFICATION	3.050570298443645E-5	IMPLEMENTATION
// Parser states:	WITHOUT_CLASSIFICATION	0.9996675399992229	WITHOUT_CLASSIFICATION	3.324600007771181E-4	IMPLEMENTATION
// Is the parser current within a singleton (value is number of nested singletons)	WITHOUT_CLASSIFICATION	0.999789210186416	WITHOUT_CLASSIFICATION	2.1078981358401138E-4	IMPLEMENTATION
// Is the parser currently within a method definition	WITHOUT_CLASSIFICATION	0.9979186600553455	WITHOUT_CLASSIFICATION	0.0020813399446544907	IMPLEMENTATION
// LOCALVAR	WITHOUT_CLASSIFICATION	0.9996612927501303	WITHOUT_CLASSIFICATION	3.3870724986971226E-4	IMPLEMENTATION
// CONSTANT	WITHOUT_CLASSIFICATION	0.9996612927501303	WITHOUT_CLASSIFICATION	3.3870724986971226E-4	IMPLEMENTATION
// INSTANCE VARIABLE	WITHOUT_CLASSIFICATION	0.9996612927501303	WITHOUT_CLASSIFICATION	3.3870724986971226E-4	IMPLEMENTATION
// Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])	WITHOUT_CLASSIFICATION	0.9998697664545804	WITHOUT_CLASSIFICATION	1.30233545419682E-4	IMPLEMENTATION
/* MRI: block_append */	WITHOUT_CLASSIFICATION	0.9999890895876924	WITHOUT_CLASSIFICATION	1.091041230749842E-5	IMPLEMENTATION
// Reduces overhead in interp by not set position every single line we encounter. 	WITHOUT_CLASSIFICATION	0.9979122322265253	WITHOUT_CLASSIFICATION	0.0020877677734747768	IMPLEMENTATION
// Assumption: tail is never a list node	WITHOUT_CLASSIFICATION	0.9997525703441248	WITHOUT_CLASSIFICATION	2.474296558752086E-4	IMPLEMENTATION
//        return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));	WITHOUT_CLASSIFICATION	0.9999285629377476	WITHOUT_CLASSIFICATION	7.143706225244796E-5	IMPLEMENTATION
// Node	WITHOUT_CLASSIFICATION	0.9999903248455485	WITHOUT_CLASSIFICATION	9.675154451423977E-6	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9809879474003057	WITHOUT_CLASSIFICATION	0.01901205259969434	IMPLEMENTATION
/*case CONSTNODE:                handleUselessWarn(node, "a constant"); return;*/	WITHOUT_CLASSIFICATION	0.9997208716713879	WITHOUT_CLASSIFICATION	2.79128328612019E-4	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9809879474003057	WITHOUT_CLASSIFICATION	0.01901205259969434	IMPLEMENTATION
/*case CLASSNODE: case COLON2NODE:                handleUselessWarn(node, "::"); return;*/	WITHOUT_CLASSIFICATION	0.9996212798853444	WITHOUT_CLASSIFICATION	3.787201146555872E-4	IMPLEMENTATION
/*case SELFNODE:                handleUselessWarn(node, "self"); return;*/	WITHOUT_CLASSIFICATION	0.9997208716713879	WITHOUT_CLASSIFICATION	2.79128328612019E-4	IMPLEMENTATION
// FIXME: DSTR,EVSTR,STR: warning "string literal in condition"	WITHOUT_CLASSIFICATION	0.9957590973164333	WITHOUT_CLASSIFICATION	0.004240902683566724	IMPLEMENTATION
/* MRI: range_op */	WITHOUT_CLASSIFICATION	0.9999338107859356	WITHOUT_CLASSIFICATION	6.6189214064411E-5	IMPLEMENTATION
// Block and block pass passed in at same time....uh oh	WITHOUT_CLASSIFICATION	0.9999567716677441	WITHOUT_CLASSIFICATION	4.322833225587411E-5	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.9999901088813848	WITHOUT_CLASSIFICATION	9.891118615195496E-6	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.9999901088813848	WITHOUT_CLASSIFICATION	9.891118615195496E-6	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.9999901088813848	WITHOUT_CLASSIFICATION	9.891118615195496E-6	IMPLEMENTATION
// tail must be EvStrNode at this point 	WITHOUT_CLASSIFICATION	0.9997744397522199	WITHOUT_CLASSIFICATION	2.255602477801019E-4	IMPLEMENTATION
//Do not add an empty string node	WITHOUT_CLASSIFICATION	0.9998741460078865	WITHOUT_CLASSIFICATION	1.2585399211340444E-4	IMPLEMENTATION
// Zero-Argument declaration	WITHOUT_CLASSIFICATION	0.9999653066942954	WITHOUT_CLASSIFICATION	3.4693305704674365E-5	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999480887737465	WITHOUT_CLASSIFICATION	5.1911226253404546E-5	IMPLEMENTATION
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999512235587925	WITHOUT_CLASSIFICATION	4.8776441207508925E-5	IMPLEMENTATION
// shift to yyN	WITHOUT_CLASSIFICATION	0.9997015464168797	WITHOUT_CLASSIFICATION	2.984535831203179E-4	IMPLEMENTATION
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9996898015061243	WITHOUT_CLASSIFICATION	3.1019849387567704E-4	IMPLEMENTATION
// leave stack alone	WITHOUT_CLASSIFICATION	0.9998301984677538	WITHOUT_CLASSIFICATION	1.6980153224617326E-4	IMPLEMENTATION
// line 321	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 351	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 382	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 417	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 420	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 423	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 426	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 280	WITHOUT_CLASSIFICATION	0.9995473413432687	WITHOUT_CLASSIFICATION	4.526586567311967E-4	IMPLEMENTATION
// line 283	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 296	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 324	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 327	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 331	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 333	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 336	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 342	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 345	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 348	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 354	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 368	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 377	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 388	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 392	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 397	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 429	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 432	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 436	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 445	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 448	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 454	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 459	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 466	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 469	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 478	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 481	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 488	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 494	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 497	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 503	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 506	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 509	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 512	WITHOUT_CLASSIFICATION	0.999547697375594	WITHOUT_CLASSIFICATION	4.523026244060313E-4	IMPLEMENTATION
// line 521	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 526	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 540	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 543	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 546	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 566	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 610	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 672	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 691	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 696	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 772	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 782	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 785	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 788	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 791	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 534	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 549	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 552	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 558	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 561	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 571	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 574	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 579	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 586	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 589	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 592	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 595	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 598	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 623	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 627	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 630	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 633	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 639	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 648	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 657	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 661	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 666	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 678	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 682	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 688	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 699	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 706	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 708	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 727	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 737	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 753	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 779	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 801	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 808	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 811	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 817	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 842	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 845	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 848	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 893	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 899	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 932	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 944	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 960	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 980	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1004	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1038	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 820	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 826	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 829	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 832	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 851	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 857	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 860	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 863	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 866	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 869	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 875	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 884	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 887	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 890	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 902	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 909	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 912	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 916	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 922	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 928	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 941	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 947	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 951	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 955	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 965	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 969	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 977	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 983	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1013	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1023	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1035	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1041	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1043	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1054	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1057	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1060	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1069	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1075	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1105	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1111	WITHOUT_CLASSIFICATION	0.9995497415246514	WITHOUT_CLASSIFICATION	4.502584753485811E-4	IMPLEMENTATION
// line 1122	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1130	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1140	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1158	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1204	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1207	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1247	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1251	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1261	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1078	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1084	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1087	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1090	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1093	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1114	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1116	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1118	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1124	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1126	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1138	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1144	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1149	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1155	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1162	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1173	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1179	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1182	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1190	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1196	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1213	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1217	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1231	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1236	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1244	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1254	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1258	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1264	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1270	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1273	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1276	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1279	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1282	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1289	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1292	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1295	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1298	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1305	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1348	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1387	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1392	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1448	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1462	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1470	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1496	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1502	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1595	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1598	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1308	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1311	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1317	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1323	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1326	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1329	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1337	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1342	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1345	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1354	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1359	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1366	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1369	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1373	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1377	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1383	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1399	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1401	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1406	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1417	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1424	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1427	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1430	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1433	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1436	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1442	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1445	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1458	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1464	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1489	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1493	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1507	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1519	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1532	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1538	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1542	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1557	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1573	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1591	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1615	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1629	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1632	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1705	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1716	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1725	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1742	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1749	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1818	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1822	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1607	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1610	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1622	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1625	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1636	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1639	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1647	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1651	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1657	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1660	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1663	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1678	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1702	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1711	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1719	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1722	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1731	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1734	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1738	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1746	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1756	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1758	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1761	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1767	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1776	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1782	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1785	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1788	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1791	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1797	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1800	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1803	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1806	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1809	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1815	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1825	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1828	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1831	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1847	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9969328667036021	WITHOUT_CLASSIFICATION	0.003067133296397816	IMPLEMENTATION
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9969328667036021	WITHOUT_CLASSIFICATION	0.003067133296397816	IMPLEMENTATION
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9935959457427334	WITHOUT_CLASSIFICATION	0.006404054257266678	IMPLEMENTATION
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999941058502355	WITHOUT_CLASSIFICATION	5.894149764451224E-6	IMPLEMENTATION
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9901863306816028	WITHOUT_CLASSIFICATION	0.009813669318397238	IMPLEMENTATION
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9935959457427334	WITHOUT_CLASSIFICATION	0.006404054257266678	IMPLEMENTATION
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9897778974188081	WITHOUT_CLASSIFICATION	0.010222102581191942	IMPLEMENTATION
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999111096310803	WITHOUT_CLASSIFICATION	8.889036891965701E-5	IMPLEMENTATION
// line 1854	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1869	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1872	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1877	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1886	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1898	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1902	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1905	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1911	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1918	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1935	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1938	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1942	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1948	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1960	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1963	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1968	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1972	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1982	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1995	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 2000	WITHOUT_CLASSIFICATION	0.9995478508506369	WITHOUT_CLASSIFICATION	4.521491493630802E-4	IMPLEMENTATION
// line 2006	WITHOUT_CLASSIFICATION	0.999547331902232	WITHOUT_CLASSIFICATION	4.526680977680501E-4	IMPLEMENTATION
// line 2010	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
/* We may need to subtract addition offset off of first */	WITHOUT_CLASSIFICATION	0.9999866119736751	WITHOUT_CLASSIFICATION	1.3388026324899215E-5	IMPLEMENTATION
/* string fragment (we optimistically take one off in*/	WITHOUT_CLASSIFICATION	0.9998855800275306	WITHOUT_CLASSIFICATION	1.1441997246937222E-4	IMPLEMENTATION
/* ParserSupport.literal_concat).  Check token length*/	WITHOUT_CLASSIFICATION	0.9926645975255838	WITHOUT_CLASSIFICATION	0.007335402474416271	IMPLEMENTATION
/* and subtract as neeeded.*/	WITHOUT_CLASSIFICATION	0.9987758529702301	WITHOUT_CLASSIFICATION	0.0012241470297699657	IMPLEMENTATION
/*                    $$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);  */	WITHOUT_CLASSIFICATION	0.9999774536426417	WITHOUT_CLASSIFICATION	2.254635735828936E-5	IMPLEMENTATION
/* ENEBO: arg surrounded by in_defined set/unset*/	WITHOUT_CLASSIFICATION	0.9505480788892745	WITHOUT_CLASSIFICATION	0.04945192111072555	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999465362797664	WITHOUT_CLASSIFICATION	5.3463720233693716E-5	IMPLEMENTATION
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9996922277244632	WITHOUT_CLASSIFICATION	3.077722755368124E-4	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999976315789052	WITHOUT_CLASSIFICATION	2.3684210947597578E-6	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999976315789052	WITHOUT_CLASSIFICATION	2.3684210947597578E-6	IMPLEMENTATION
/* ENEBO: Removed !compile_for_eval which probably is to reduce warnings*/	WITHOUT_CLASSIFICATION	0.9859720334143756	WITHOUT_CLASSIFICATION	0.014027966585624493	IMPLEMENTATION
/* was $$ = null;*/	WITHOUT_CLASSIFICATION	0.9892034518548151	WITHOUT_CLASSIFICATION	0.010796548145184954	IMPLEMENTATION
// line 2019 "Ruby19Parser.y"	WITHOUT_CLASSIFICATION	0.9999253321763214	WITHOUT_CLASSIFICATION	7.466782367862567E-5	IMPLEMENTATION
// line 8143 "-"	WITHOUT_CLASSIFICATION	0.9995501826368176	WITHOUT_CLASSIFICATION	4.498173631823727E-4	IMPLEMENTATION
// we know variables cannot be null since localstaticscope will create a 0 length one.	WITHOUT_CLASSIFICATION	0.9999982400953938	WITHOUT_CLASSIFICATION	1.7599046062503597E-6	IMPLEMENTATION
// No bit math to store level since we know level is zero for this case	WITHOUT_CLASSIFICATION	0.9999459559996912	WITHOUT_CLASSIFICATION	5.4044000308880416E-5	IMPLEMENTATION
// Next immediate scope.  Variable and constant scoping rules make use of this variable // in different ways.	WITHOUT_CLASSIFICATION	0.9990099348717701	WITHOUT_CLASSIFICATION	9.900651282297853E-4	IMPLEMENTATION
// Live reference to module	WITHOUT_CLASSIFICATION	0.9999839015357007	WITHOUT_CLASSIFICATION	1.6098464299284665E-5	IMPLEMENTATION
// Next CRef down the lexical structure	WITHOUT_CLASSIFICATION	0.9999641504289889	WITHOUT_CLASSIFICATION	3.584957101110595E-5	IMPLEMENTATION
// Our name holder (offsets are assigned as variables are added	WITHOUT_CLASSIFICATION	0.9999995475008565	WITHOUT_CLASSIFICATION	4.524991435214805E-7	IMPLEMENTATION
// number of variables in this scope representing required arguments	WITHOUT_CLASSIFICATION	0.9999206263422717	WITHOUT_CLASSIFICATION	7.937365772826717E-5	IMPLEMENTATION
// number of variables in this scope representing optional arguments	WITHOUT_CLASSIFICATION	0.9999765621311598	WITHOUT_CLASSIFICATION	2.343786884016643E-5	IMPLEMENTATION
// index of variable that represents a "rest" arg	WITHOUT_CLASSIFICATION	0.9983685535344832	WITHOUT_CLASSIFICATION	0.001631446465516807	IMPLEMENTATION
// Note that this object equality check is intentional, to ensure // the string and its interned version are the same object.	WITHOUT_CLASSIFICATION	0.9999999510431554	WITHOUT_CLASSIFICATION	4.895684462930158E-8	IMPLEMENTATION
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999488802752959	WITHOUT_CLASSIFICATION	5.111972470395817E-5	IMPLEMENTATION
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999488802752959	WITHOUT_CLASSIFICATION	5.111972470395817E-5	IMPLEMENTATION
/* Note: Only used by compiler until it can use getConstant again or use some other refactoring */	WITHOUT_CLASSIFICATION	0.999975772075731	WITHOUT_CLASSIFICATION	2.4227924269063107E-5	IMPLEMENTATION
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9987327107442439	WITHOUT_CLASSIFICATION	0.0012672892557562005	IMPLEMENTATION
/* Try and unload the autoload specified from internedName */	WITHOUT_CLASSIFICATION	0.9999985449398575	WITHOUT_CLASSIFICATION	1.4550601424552642E-6	IMPLEMENTATION
// We override that the logic which uses this	WITHOUT_CLASSIFICATION	0.9998296715108049	WITHOUT_CLASSIFICATION	1.7032848919494575E-4	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999917555089345	WITHOUT_CLASSIFICATION	8.244491065436278E-6	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.999911180261653	WITHOUT_CLASSIFICATION	8.881973834697855E-5	IMPLEMENTATION
// source extensions	WITHOUT_CLASSIFICATION	0.9999046277848919	WITHOUT_CLASSIFICATION	9.537221510813242E-5	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.999911180261653	WITHOUT_CLASSIFICATION	8.881973834697855E-5	IMPLEMENTATION
// . Array given to rest should pass itself // . Array with rest + other args should extract array // . Array with multiple values and NO rest should extract args if there are more than one argument	WITHOUT_CLASSIFICATION	0.9999863984694967	WITHOUT_CLASSIFICATION	1.3601530503383492E-5	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9998373438728386	WITHOUT_CLASSIFICATION	1.6265612716137416E-4	IMPLEMENTATION
// Is this thread currently with in a function trace?	WITHOUT_CLASSIFICATION	0.9997262749867067	WITHOUT_CLASSIFICATION	2.7372501329329447E-4	IMPLEMENTATION
// Is this thread currently doing an defined? defined should set things like $!	WITHOUT_CLASSIFICATION	0.984371230310491	WITHOUT_CLASSIFICATION	0.0156287696895091	IMPLEMENTATION
//private UnsynchronizedStack parentStack;	WITHOUT_CLASSIFICATION	0.9998147599268545	WITHOUT_CLASSIFICATION	1.852400731454465E-4	IMPLEMENTATION
//private UnsynchronizedStack frameStack;	WITHOUT_CLASSIFICATION	0.9998147599268545	WITHOUT_CLASSIFICATION	1.852400731454465E-4	IMPLEMENTATION
// List of active dynamic scopes.  Each of these may have captured other dynamic scopes // to implement closures.	WITHOUT_CLASSIFICATION	0.9333418118963457	WITHOUT_CLASSIFICATION	0.0666581881036543	IMPLEMENTATION
// File where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999620011546438	WITHOUT_CLASSIFICATION	3.799884535611955E-5	IMPLEMENTATION
// Line where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.999874834245499	WITHOUT_CLASSIFICATION	1.2516575450100543E-4	IMPLEMENTATION
// In certain places, like grep, we don't use real frames for the // call blocks. This has the effect of not setting the backref in // the correct frame - this delta is activated to the place where // the grep is running in so that the backref will be set in an // appropriate place.	WITHOUT_CLASSIFICATION	0.9997239817577341	WITHOUT_CLASSIFICATION	2.760182422658614E-4	IMPLEMENTATION
// TOPLEVEL self and a few others want a top-level scope.  We create this one right // away and then pass it into top-level parse so it ends up being the top level.	WITHOUT_CLASSIFICATION	0.9999933909132079	WITHOUT_CLASSIFICATION	6.6090867920891285E-6	IMPLEMENTATION
//////////////////// CATCH MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9997267993481355	WITHOUT_CLASSIFICATION	2.7320065186452257E-4	IMPLEMENTATION
//////////////////// FRAME MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9997267993481355	WITHOUT_CLASSIFICATION	2.7320065186452257E-4	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9547553697100819	WITHOUT_CLASSIFICATION	0.04524463028991811	IMPLEMENTATION
// assert level == 0;	WITHOUT_CLASSIFICATION	0.999949281779024	WITHOUT_CLASSIFICATION	5.0718220975938155E-5	IMPLEMENTATION
// assert level == 0;	WITHOUT_CLASSIFICATION	0.999949281779024	WITHOUT_CLASSIFICATION	5.0718220975938155E-5	IMPLEMENTATION
// look for mangling markers for compiled Ruby in method name	WITHOUT_CLASSIFICATION	0.9998340164752404	WITHOUT_CLASSIFICATION	1.6598352475954468E-4	IMPLEMENTATION
// if it's not a rescue or ensure, there's a frame associated, so decrement	WITHOUT_CLASSIFICATION	0.9985930842369949	WITHOUT_CLASSIFICATION	0.0014069157630051217	IMPLEMENTATION
// look for __file__ method name for compiled roots	WITHOUT_CLASSIFICATION	0.9993972745919437	WITHOUT_CLASSIFICATION	6.027254080562238E-4	IMPLEMENTATION
// All entries following removed node can stay // in list, but all preceding ones need to be // cloned.	WITHOUT_CLASSIFICATION	0.9997257047942885	WITHOUT_CLASSIFICATION	2.742952057114657E-4	IMPLEMENTATION
// required and optional only	WITHOUT_CLASSIFICATION	0.9999558722174403	WITHOUT_CLASSIFICATION	4.412778255969408E-5	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.999911180261653	WITHOUT_CLASSIFICATION	8.881973834697855E-5	IMPLEMENTATION
// look for mangling markers for bound, unframed methods in class name	WITHOUT_CLASSIFICATION	0.9999695984633031	WITHOUT_CLASSIFICATION	3.0401536696897362E-5	IMPLEMENTATION
// set the binding's frame's "previous" file and line to current, so // trace will show who called the block	WITHOUT_CLASSIFICATION	0.9999611966917572	WITHOUT_CLASSIFICATION	3.880330824282823E-5	IMPLEMENTATION
// framed invokers will have Ruby frames associated with them	WITHOUT_CLASSIFICATION	0.9999905649157086	WITHOUT_CLASSIFICATION	9.435084291446499E-6	IMPLEMENTATION
// look for mangling markers for bound, framed methods in class name	WITHOUT_CLASSIFICATION	0.9999696246915888	WITHOUT_CLASSIFICATION	3.0375308411237846E-5	IMPLEMENTATION
// unframed invokers have no Ruby frames, so pull from class name // but use current frame as file and line	WITHOUT_CLASSIFICATION	0.9999990383803162	WITHOUT_CLASSIFICATION	9.616196837749127E-7	IMPLEMENTATION
// try to mine out a Ruby frame using our list of interpreter entry-point markers	WITHOUT_CLASSIFICATION	0.9999881150222183	WITHOUT_CLASSIFICATION	1.1884977781703345E-5	IMPLEMENTATION
// Frame matches one of our markers for "interpreted" calls	WITHOUT_CLASSIFICATION	0.9999875404924524	WITHOUT_CLASSIFICATION	1.2459507547578863E-5	IMPLEMENTATION
// Frame is extraneous runtime information, skip it unless debug	WITHOUT_CLASSIFICATION	0.9998557559787269	WITHOUT_CLASSIFICATION	1.442440212731392E-4	IMPLEMENTATION
/*     * Determine what sort of assigner should be used for the provided 'iter' (e.g. block).     * Assigner provides just the right logic for assigning values to local parameters of the     * block.     *     * This method also has a second optimization which is to set 'noargblock' in the case that     * the block is a block which accepts no arguments.  The primary reason for this second     * optimization is that in the case of a yield with a RubyArray we will bypass some logic     * processing the RubyArray into a proper form (only to then not do anythign with it).  A     * secondary benefit is that a simple boolean seems to optimize by hotspot much faster     * than the zero arg assigner.     */	WITHOUT_CLASSIFICATION	0.9999732381005402	WITHOUT_CLASSIFICATION	2.676189945983812E-5	IMPLEMENTATION
// new scope for this invocation of the block, based on parent scope	WITHOUT_CLASSIFICATION	0.9998982867940354	WITHOUT_CLASSIFICATION	1.0171320596454897E-4	IMPLEMENTATION
// No argument blocks	WITHOUT_CLASSIFICATION	0.9999946055220892	WITHOUT_CLASSIFICATION	5.394477910807391E-6	IMPLEMENTATION
// just push the same empty scope, since we won't use one	WITHOUT_CLASSIFICATION	0.9999999370509949	WITHOUT_CLASSIFICATION	6.294900511966934E-8	IMPLEMENTATION
// Not sure if this is actually possible, but better safe than sorry	WITHOUT_CLASSIFICATION	0.9999591685999468	WITHOUT_CLASSIFICATION	4.0831400053158815E-5	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9991554556314721	WITHOUT_CLASSIFICATION	8.445443685277619E-4	IMPLEMENTATION
// This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).	WITHOUT_CLASSIFICATION	0.9999555628640409	WITHOUT_CLASSIFICATION	4.44371359591711E-5	IMPLEMENTATION
// Highest reserved id	WITHOUT_CLASSIFICATION	0.9999658828444793	WITHOUT_CLASSIFICATION	3.411715552070042E-5	IMPLEMENTATION
// binary typed calls	WITHOUT_CLASSIFICATION	0.9999040910375158	WITHOUT_CLASSIFICATION	9.590896248423184E-5	IMPLEMENTATION
// id must always be even	WITHOUT_CLASSIFICATION	0.9999796238620289	WITHOUT_CLASSIFICATION	2.0376137971159006E-5	IMPLEMENTATION
// with block pass	WITHOUT_CLASSIFICATION	0.9977403184177461	WITHOUT_CLASSIFICATION	0.002259681582253836	IMPLEMENTATION
// no block	WITHOUT_CLASSIFICATION	0.9991788591462888	WITHOUT_CLASSIFICATION	8.211408537112835E-4	IMPLEMENTATION
// with block literal (iter)	WITHOUT_CLASSIFICATION	0.9996093945083336	WITHOUT_CLASSIFICATION	3.9060549166632997E-4	IMPLEMENTATION
//            assert false : "can this happen?";	WITHOUT_CLASSIFICATION	0.997588815949489	WITHOUT_CLASSIFICATION	0.002411184050510981	IMPLEMENTATION
// if we have multiple asgn with just *args, need a special type for that	WITHOUT_CLASSIFICATION	0.9997928348177346	WITHOUT_CLASSIFICATION	2.0716518226528404E-4	IMPLEMENTATION
// && args.getMaxArgumentsCount() != 1) {	WITHOUT_CLASSIFICATION	0.9999653469617198	WITHOUT_CLASSIFICATION	3.465303828015269E-5	IMPLEMENTATION
//            return warnMultiReturnNil(ruby);	WITHOUT_CLASSIFICATION	0.9999362853549503	WITHOUT_CLASSIFICATION	6.371464504978996E-5	IMPLEMENTATION
// ensure zero is devoted to no method name	WITHOUT_CLASSIFICATION	0.9999814969509409	WITHOUT_CLASSIFICATION	1.8503049059139217E-5	IMPLEMENTATION
// predefine a few other methods we invoke directly elsewhere	WITHOUT_CLASSIFICATION	0.9997956141010486	WITHOUT_CLASSIFICATION	2.0438589895128894E-4	IMPLEMENTATION
// fast and safe respond_to? call site logic	WITHOUT_CLASSIFICATION	0.9998346850806538	WITHOUT_CLASSIFICATION	1.6531491934629547E-4	IMPLEMENTATION
// Static scoping information for this scope	WITHOUT_CLASSIFICATION	0.9999528225160019	WITHOUT_CLASSIFICATION	4.71774839979939E-5	IMPLEMENTATION
// Captured dynamic scopes	WITHOUT_CLASSIFICATION	0.9999672450949598	WITHOUT_CLASSIFICATION	3.2754905040204176E-5	IMPLEMENTATION
// Backref for $~, $1, etc	WITHOUT_CLASSIFICATION	0.9999760252166617	WITHOUT_CLASSIFICATION	2.3974783338280036E-5	IMPLEMENTATION
// Lastline	WITHOUT_CLASSIFICATION	0.9996612927501303	WITHOUT_CLASSIFICATION	3.3870724986971226E-4	IMPLEMENTATION
// No binding scope so we should create one	WITHOUT_CLASSIFICATION	0.99993429814333	WITHOUT_CLASSIFICATION	6.57018566700382E-5	IMPLEMENTATION
// bindings scopes must always be ManyVars scopes since evals can grow them	WITHOUT_CLASSIFICATION	0.9999893374237732	WITHOUT_CLASSIFICATION	1.0662576226755482E-5	IMPLEMENTATION
// Helper function to give a good view of current dynamic scope with captured scopes	WITHOUT_CLASSIFICATION	0.9998975876592007	WITHOUT_CLASSIFICATION	1.0241234079933001E-4	IMPLEMENTATION
// try count specific args to determine required	WITHOUT_CLASSIFICATION	0.9999481833350298	WITHOUT_CLASSIFICATION	5.181666497028796E-5	IMPLEMENTATION
// Some helper functions:	WITHOUT_CLASSIFICATION	0.9999797217100895	WITHOUT_CLASSIFICATION	2.0278289910419833E-5	IMPLEMENTATION
// silently ignore	WITHOUT_CLASSIFICATION	0.9995020178511892	WITHOUT_CLASSIFICATION	4.979821488107827E-4	IMPLEMENTATION
// used by compiler	WITHOUT_CLASSIFICATION	0.9998796194107553	WITHOUT_CLASSIFICATION	1.203805892447623E-4	IMPLEMENTATION
// initialize the static settings to determine which factory to use	WITHOUT_CLASSIFICATION	0.9999516414002808	WITHOUT_CLASSIFICATION	4.83585997192008E-5	IMPLEMENTATION
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999111096310803	WITHOUT_CLASSIFICATION	8.889036891965701E-5	IMPLEMENTATION
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9996944061888473	WITHOUT_CLASSIFICATION	3.0559381115266104E-4	IMPLEMENTATION
//  Single node on list	WITHOUT_CLASSIFICATION	0.9998833892302402	WITHOUT_CLASSIFICATION	1.1661076975967712E-4	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9998572070482956	WITHOUT_CLASSIFICATION	1.4279295170429503E-4	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999696853714746	WITHOUT_CLASSIFICATION	3.0314628525365144E-5	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9998373438728386	WITHOUT_CLASSIFICATION	1.6265612716137416E-4	IMPLEMENTATION
// Note: In Ruby 1.9 all of this logic can go away since they will require explicit // bindings for evals.	WITHOUT_CLASSIFICATION	0.9999454710104294	WITHOUT_CLASSIFICATION	5.4528989570444315E-5	IMPLEMENTATION
// We only define one special dynamic scope per 'logical' binding.  So all bindings for // the same scope should share the same dynamic scope.  This allows multiple evals with // different different bindings in the same scope to see the same stuff.	WITHOUT_CLASSIFICATION	0.9999991513861165	WITHOUT_CLASSIFICATION	8.486138834010944E-7	IMPLEMENTATION
// If the next scope out has the same binding scope as this scope it means // we are evaling within an eval and in that case we should be sharing the same // binding scope.	WITHOUT_CLASSIFICATION	0.9999994979279175	WITHOUT_CLASSIFICATION	5.02072082358672E-7	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999949222373706	WITHOUT_CLASSIFICATION	5.077762629390093E-6	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999949222373706	WITHOUT_CLASSIFICATION	5.077762629390093E-6	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999989179029729	WITHOUT_CLASSIFICATION	1.082097027133879E-6	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999989179029729	WITHOUT_CLASSIFICATION	1.082097027133879E-6	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999989179029729	WITHOUT_CLASSIFICATION	1.082097027133879E-6	IMPLEMENTATION
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999838279478142	WITHOUT_CLASSIFICATION	1.617205218585829E-5	IMPLEMENTATION
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999838279478142	WITHOUT_CLASSIFICATION	1.617205218585829E-5	IMPLEMENTATION
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999681430848574	WITHOUT_CLASSIFICATION	3.1856915142594816E-5	IMPLEMENTATION
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999681430848574	WITHOUT_CLASSIFICATION	3.1856915142594816E-5	IMPLEMENTATION
/*     * This is the proper behavior for all non-expanded assigners which have a pre > 0.  The rest     * override this.     */	WITHOUT_CLASSIFICATION	0.9999955392411514	WITHOUT_CLASSIFICATION	4.4607588485450135E-6	IMPLEMENTATION
/*     * This is the proper behavior for all non-expanded assigners.     */	WITHOUT_CLASSIFICATION	0.9999973354210372	WITHOUT_CLASSIFICATION	2.6645789627885754E-6	IMPLEMENTATION
// prefill ?	WITHOUT_CLASSIFICATION	0.999856960139077	WITHOUT_CLASSIFICATION	1.4303986092295676E-4	IMPLEMENTATION
// prefill ?	WITHOUT_CLASSIFICATION	0.999856960139077	WITHOUT_CLASSIFICATION	1.4303986092295676E-4	IMPLEMENTATION
// MUST be called from synchronized/locked block! // should only be called by variableTableStore/variableTableFastStore	WITHOUT_CLASSIFICATION	0.9999991245701175	WITHOUT_CLASSIFICATION	8.754298824373642E-7	IMPLEMENTATION
// retrieve method // module // name	WITHOUT_CLASSIFICATION	0.9996625959287893	WITHOUT_CLASSIFICATION	3.374040712108343E-4	IMPLEMENTATION
// call is ok, punch it!	WITHOUT_CLASSIFICATION	0.9999868148640823	WITHOUT_CLASSIFICATION	1.3185135917672557E-5	IMPLEMENTATION
// if undefined, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999913504291885	WITHOUT_CLASSIFICATION	8.649570811487066E-6	IMPLEMENTATION
// if we're not attempting to invoke method_missing and method is not visible, branch to method_missing	WITHOUT_CLASSIFICATION	0.9998302133482181	WITHOUT_CLASSIFICATION	1.6978665178187847E-4	IMPLEMENTATION
// method object already present, push various args // tc // self // klazz // name	WITHOUT_CLASSIFICATION	0.9999347154994851	WITHOUT_CLASSIFICATION	6.528450051481665E-5	IMPLEMENTATION
// if it's method_missing, just invoke it	WITHOUT_CLASSIFICATION	0.9999792211525954	WITHOUT_CLASSIFICATION	2.0778847404627165E-5	IMPLEMENTATION
// invoke callMethodMissing	WITHOUT_CLASSIFICATION	0.9999478063451679	WITHOUT_CLASSIFICATION	5.2193654832164086E-5	IMPLEMENTATION
// caller	WITHOUT_CLASSIFICATION	0.9999955967933031	WITHOUT_CLASSIFICATION	4.403206696916729E-6	IMPLEMENTATION
// calltype // block	WITHOUT_CLASSIFICATION	0.9983837173560897	WITHOUT_CLASSIFICATION	0.0016162826439103492	IMPLEMENTATION
// if no exception raised, jump to end to leave result on stack for return	WITHOUT_CLASSIFICATION	0.9999954682437067	WITHOUT_CLASSIFICATION	4.531756293325552E-6	IMPLEMENTATION
// load arity for check	WITHOUT_CLASSIFICATION	0.999932024454546	WITHOUT_CLASSIFICATION	6.79755454539866E-5	IMPLEMENTATION
// throw	WITHOUT_CLASSIFICATION	0.9999790238343386	WITHOUT_CLASSIFICATION	2.0976165661499625E-5	IMPLEMENTATION
// load arity for error	WITHOUT_CLASSIFICATION	0.9998724468724509	WITHOUT_CLASSIFICATION	1.2755312754917272E-4	IMPLEMENTATION
// arity ok, continue	WITHOUT_CLASSIFICATION	0.9999451861094206	WITHOUT_CLASSIFICATION	5.481389057926557E-5	IMPLEMENTATION
//InvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9998286659029623	WITHOUT_CLASSIFICATION	1.7133409703781356E-4	IMPLEMENTATION
// ENEBO: Perhaps slow but simple for now	WITHOUT_CLASSIFICATION	0.9999320872031806	WITHOUT_CLASSIFICATION	6.791279681940631E-5	IMPLEMENTATION
// FastInvocationCallback	WITHOUT_CLASSIFICATION	0.9999441559003632	WITHOUT_CLASSIFICATION	5.5844099636791055E-5	IMPLEMENTATION
// InvocationCallback	WITHOUT_CLASSIFICATION	0.9999441559003632	WITHOUT_CLASSIFICATION	5.5844099636791055E-5	IMPLEMENTATION
//DumpingInvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9997254911986895	WITHOUT_CLASSIFICATION	2.7450880131056003E-4	IMPLEMENTATION
// for fast lookup: encoding entry => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999922004730687	WITHOUT_CLASSIFICATION	7.799526931196645E-6	IMPLEMENTATION
// for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999723239442223	WITHOUT_CLASSIFICATION	2.7676055777749472E-5	IMPLEMENTATION
// load the encoding	WITHOUT_CLASSIFICATION	0.9999362155811784	WITHOUT_CLASSIFICATION	6.378441882159081E-5	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999702926214196	WITHOUT_CLASSIFICATION	2.9707378580502998E-5	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999702926214196	WITHOUT_CLASSIFICATION	2.9707378580502998E-5	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999702926214196	WITHOUT_CLASSIFICATION	2.9707378580502998E-5	IMPLEMENTATION
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999134178802931	WITHOUT_CLASSIFICATION	8.658211970682482E-5	IMPLEMENTATION
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999134178802931	WITHOUT_CLASSIFICATION	8.658211970682482E-5	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999134178802931	WITHOUT_CLASSIFICATION	8.658211970682482E-5	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999134178802931	WITHOUT_CLASSIFICATION	8.658211970682482E-5	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999134178802931	WITHOUT_CLASSIFICATION	8.658211970682482E-5	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999323866224934	WITHOUT_CLASSIFICATION	6.761337750663979E-5	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999323866224934	WITHOUT_CLASSIFICATION	6.761337750663979E-5	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999323866224934	WITHOUT_CLASSIFICATION	6.761337750663979E-5	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999323866224934	WITHOUT_CLASSIFICATION	6.761337750663979E-5	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999323866224934	WITHOUT_CLASSIFICATION	6.761337750663979E-5	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999323866224934	WITHOUT_CLASSIFICATION	6.761337750663979E-5	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999323866224934	WITHOUT_CLASSIFICATION	6.761337750663979E-5	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999323866224934	WITHOUT_CLASSIFICATION	6.761337750663979E-5	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999323866224934	WITHOUT_CLASSIFICATION	6.761337750663979E-5	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999323866224934	WITHOUT_CLASSIFICATION	6.761337750663979E-5	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999323866224934	WITHOUT_CLASSIFICATION	6.761337750663979E-5	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999323866224934	WITHOUT_CLASSIFICATION	6.761337750663979E-5	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999323866224934	WITHOUT_CLASSIFICATION	6.761337750663979E-5	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999323866224934	WITHOUT_CLASSIFICATION	6.761337750663979E-5	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999323866224934	WITHOUT_CLASSIFICATION	6.761337750663979E-5	IMPLEMENTATION
// If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs	WITHOUT_CLASSIFICATION	0.9999903755449636	WITHOUT_CLASSIFICATION	9.624455036498832E-6	IMPLEMENTATION
// BreakJump, ThreadContext	WITHOUT_CLASSIFICATION	0.9999441559003632	WITHOUT_CLASSIFICATION	5.5844099636791055E-5	IMPLEMENTATION
// ThreadContext	WITHOUT_CLASSIFICATION	0.9996612927501303	WITHOUT_CLASSIFICATION	3.3870724986971226E-4	IMPLEMENTATION
// BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999105212360142	WITHOUT_CLASSIFICATION	8.947876398585319E-5	IMPLEMENTATION
// Make Java class files in the jar reachable from Ruby	WITHOUT_CLASSIFICATION	0.9999998069564271	WITHOUT_CLASSIFICATION	1.9304357280240628E-7	IMPLEMENTATION
// RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999105212360142	WITHOUT_CLASSIFICATION	8.947876398585319E-5	IMPLEMENTATION
// add all startup load paths to the list first	WITHOUT_CLASSIFICATION	0.9998474043644158	WITHOUT_CLASSIFICATION	1.525956355841362E-4	IMPLEMENTATION
// if it's a compiled JRuby script, instantiate and run it	WITHOUT_CLASSIFICATION	0.9999521775927191	WITHOUT_CLASSIFICATION	4.782240728094766E-5	IMPLEMENTATION
// wrap in try/catch for security exceptions in an applet	WITHOUT_CLASSIFICATION	0.9997452291760576	WITHOUT_CLASSIFICATION	2.5477082394240316E-4	IMPLEMENTATION
// add $RUBYLIB paths	WITHOUT_CLASSIFICATION	0.9997907901696647	WITHOUT_CLASSIFICATION	2.0920983033521082E-4	IMPLEMENTATION
// Empty paths do not need to be added	WITHOUT_CLASSIFICATION	0.9890539873667674	WITHOUT_CLASSIFICATION	0.010946012633232662	IMPLEMENTATION
// "." dir is used for relative path loads from a given file, as in require '../foo/bar'	WITHOUT_CLASSIFICATION	0.9999989268478785	WITHOUT_CLASSIFICATION	1.0731521215595659E-6	IMPLEMENTATION
// Add 1.8 libs	WITHOUT_CLASSIFICATION	0.9994867921894458	WITHOUT_CLASSIFICATION	5.132078105542404E-4	IMPLEMENTATION
// Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.	WITHOUT_CLASSIFICATION	0.9999995056620998	WITHOUT_CLASSIFICATION	4.943379001068978E-7	IMPLEMENTATION
// Library has already been loaded in some form, bail out	WITHOUT_CLASSIFICATION	0.9999817129595815	WITHOUT_CLASSIFICATION	1.8287040418480008E-5	IMPLEMENTATION
// We don't want a package name beginning with dots, so we remove them	WITHOUT_CLASSIFICATION	0.9998974624615147	WITHOUT_CLASSIFICATION	1.025375384852775E-4	IMPLEMENTATION
// If there is a jar-file with the required name, we add this to the class path.	WITHOUT_CLASSIFICATION	0.9999324595270678	WITHOUT_CLASSIFICATION	6.754047293221836E-5	IMPLEMENTATION
// quietly try to load the class	WITHOUT_CLASSIFICATION	0.9999816211294182	WITHOUT_CLASSIFICATION	1.8378870581750586E-5	IMPLEMENTATION
// If there was a good library before, we go back to that	WITHOUT_CLASSIFICATION	0.9999900661211051	WITHOUT_CLASSIFICATION	9.933878894910642E-6	IMPLEMENTATION
// no library or extension found, try to load directly as a class	WITHOUT_CLASSIFICATION	0.9999942717020113	WITHOUT_CLASSIFICATION	5.7282979887352455E-6	IMPLEMENTATION
// if an extension is specified, try more targetted searches	WITHOUT_CLASSIFICATION	0.999869554082012	WITHOUT_CLASSIFICATION	1.304459179881187E-4	IMPLEMENTATION
// signed short, big-endian	WITHOUT_CLASSIFICATION	0.9999504237600314	WITHOUT_CLASSIFICATION	4.957623996861981E-5	IMPLEMENTATION
// source extensions	WITHOUT_CLASSIFICATION	0.9999046277848919	WITHOUT_CLASSIFICATION	9.537221510813242E-5	IMPLEMENTATION
// We don't support .so, but some stdlib require .so directly // replace it with .jar to look for an extension type we do support	WITHOUT_CLASSIFICATION	0.9689227413917282	WITHOUT_CLASSIFICATION	0.031077258608271745	IMPLEMENTATION
// This code exploits the fact that all .jar files will be found for the JarredScript feature. // This is where the basic extension mechanism gets fixed	WITHOUT_CLASSIFICATION	0.9999967530279643	WITHOUT_CLASSIFICATION	3.246972035776612E-6	IMPLEMENTATION
// Make the class name look nice, by splitting on _ and capitalize each segment, then joining // the, together without anything separating them, and last put on "Service" at the end.	WITHOUT_CLASSIFICATION	0.9997836521856177	WITHOUT_CLASSIFICATION	2.1634781438226394E-4	IMPLEMENTATION
// It's _really_ expensive to check that the class actually exists in the Jar, so // we don't do that now.	WITHOUT_CLASSIFICATION	0.9999795745940839	WITHOUT_CLASSIFICATION	2.042540591608567E-5	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9998662091234423	WITHOUT_CLASSIFICATION	1.3379087655782365E-4	IMPLEMENTATION
// extension extensions	WITHOUT_CLASSIFICATION	0.9998770844719949	WITHOUT_CLASSIFICATION	1.2291552800525825E-4	IMPLEMENTATION
// unknown extension, fall back to search with extensions	WITHOUT_CLASSIFICATION	0.9998344625892891	WITHOUT_CLASSIFICATION	1.6553741071082648E-4	IMPLEMENTATION
// try all extensions	WITHOUT_CLASSIFICATION	0.9999716136740687	WITHOUT_CLASSIFICATION	2.8386325931312842E-5	IMPLEMENTATION
// if a source extension is specified, try all source extensions	WITHOUT_CLASSIFICATION	0.9999974239576586	WITHOUT_CLASSIFICATION	2.5760423414868184E-6	IMPLEMENTATION
// unknown extension, fall back to exact search	WITHOUT_CLASSIFICATION	0.9998989874082491	WITHOUT_CLASSIFICATION	1.0101259175094877E-4	IMPLEMENTATION
// try only literal search	WITHOUT_CLASSIFICATION	0.9999905963651717	WITHOUT_CLASSIFICATION	9.403634828295347E-6	IMPLEMENTATION
// attempt to load the found library	WITHOUT_CLASSIFICATION	0.9997410766869054	WITHOUT_CLASSIFICATION	2.5892331309455114E-4	IMPLEMENTATION
// otherwise load the library we've found	WITHOUT_CLASSIFICATION	0.9983154581899235	WITHOUT_CLASSIFICATION	0.0016845418100764889	IMPLEMENTATION
// allow MainExitException to propagate out for exec and friends	WITHOUT_CLASSIFICATION	0.9998222972746776	WITHOUT_CLASSIFICATION	1.777027253223045E-4	IMPLEMENTATION
// Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".	WITHOUT_CLASSIFICATION	0.9999744300575361	WITHOUT_CLASSIFICATION	2.5569942464000504E-5	IMPLEMENTATION
// check current directory; if file exists, retrieve URL and return resource	WITHOUT_CLASSIFICATION	0.9999136422227612	WITHOUT_CLASSIFICATION	8.635777723875175E-5	IMPLEMENTATION
// if a jar or file URL, return load service resource directly without further searching	WITHOUT_CLASSIFICATION	0.9999974430387621	WITHOUT_CLASSIFICATION	2.5569612379111992E-6	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9998526819464446	WITHOUT_CLASSIFICATION	1.4731805355528525E-4	IMPLEMENTATION
// if it's a ./ baseName, use CWD logic	WITHOUT_CLASSIFICATION	0.999788617053441	WITHOUT_CLASSIFICATION	2.1138294655894584E-4	IMPLEMENTATION
// if given path is absolute, just try it as-is (with extensions) and no load path	WITHOUT_CLASSIFICATION	0.9999960450188846	WITHOUT_CLASSIFICATION	3.954981115417464E-6	IMPLEMENTATION
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9992967883542023	WITHOUT_CLASSIFICATION	7.032116457977654E-4	IMPLEMENTATION
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9992967883542023	WITHOUT_CLASSIFICATION	7.032116457977654E-4	IMPLEMENTATION
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.999723591592282	WITHOUT_CLASSIFICATION	2.7640840771804716E-4	IMPLEMENTATION
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.999723591592282	WITHOUT_CLASSIFICATION	2.7640840771804716E-4	IMPLEMENTATION
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999621802439067	WITHOUT_CLASSIFICATION	3.781975609322683E-5	IMPLEMENTATION
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999621802439067	WITHOUT_CLASSIFICATION	3.781975609322683E-5	IMPLEMENTATION
//                    actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));	WITHOUT_CLASSIFICATION	0.9998828006987838	WITHOUT_CLASSIFICATION	1.1719930121626089E-4	IMPLEMENTATION
// handle security-sensitive case	WITHOUT_CLASSIFICATION	0.9988078716915307	WITHOUT_CLASSIFICATION	0.0011921283084693056	IMPLEMENTATION
// if entry is an empty string, skip it	WITHOUT_CLASSIFICATION	0.9999777854696047	WITHOUT_CLASSIFICATION	2.2214530395285588E-5	IMPLEMENTATION
// if entry starts with a slash, skip it since classloader resources never start with a /	WITHOUT_CLASSIFICATION	0.9999870695334917	WITHOUT_CLASSIFICATION	1.293046650822247E-5	IMPLEMENTATION
// otherwise, try to load from classpath (Note: Jar resources always uses '/')	WITHOUT_CLASSIFICATION	0.9999933721127973	WITHOUT_CLASSIFICATION	6.6278872026245086E-6	IMPLEMENTATION
// Make sure this is not a directory or unavailable in some way	WITHOUT_CLASSIFICATION	0.9999322088626869	WITHOUT_CLASSIFICATION	6.779113731308456E-5	IMPLEMENTATION
// signed short, native	WITHOUT_CLASSIFICATION	0.9998725505490244	WITHOUT_CLASSIFICATION	1.2744945097564972E-4	IMPLEMENTATION
// If we fail to find as a normal Ruby script, we try to find as an extension, // checking for a builtin first.	WITHOUT_CLASSIFICATION	0.9999846984567381	WITHOUT_CLASSIFICATION	1.5301543261949852E-5	IMPLEMENTATION
// write `I' instance var signet if class is NOT a direct subclass of Object	WITHOUT_CLASSIFICATION	0.999999672351845	WITHOUT_CLASSIFICATION	3.2764815502655705E-7	IMPLEMENTATION
// if name starts with a / we're done (classloader resources won't load with an initial /)	WITHOUT_CLASSIFICATION	0.9999999545456705	WITHOUT_CLASSIFICATION	4.545432951259802E-8	IMPLEMENTATION
// Look in classpath next (we do not use File as a test since UNC names will match) // Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")	WITHOUT_CLASSIFICATION	0.9999957442599677	WITHOUT_CLASSIFICATION	4.255740032300342E-6	IMPLEMENTATION
/* Directories and unavailable resources are not able to open a stream. */	WITHOUT_CLASSIFICATION	0.999976617331314	WITHOUT_CLASSIFICATION	2.3382668685855982E-5	IMPLEMENTATION
// Try to load from classpath without prefix. "A/b.rb" will not load as  // "./A/b.rb" in a jar file.	WITHOUT_CLASSIFICATION	0.9999980675024367	WITHOUT_CLASSIFICATION	1.932497563278669E-6	IMPLEMENTATION
// object has instance vars and isn't a class, get a snapshot to be marshalled // and output the ivar header here	WITHOUT_CLASSIFICATION	0.9999968834252944	WITHOUT_CLASSIFICATION	3.1165747056570257E-6	IMPLEMENTATION
// flush afer whole dump is complete	WITHOUT_CLASSIFICATION	0.9999504398132937	WITHOUT_CLASSIFICATION	4.956018670639603E-5	IMPLEMENTATION
//            write('S');	WITHOUT_CLASSIFICATION	0.9999432159278867	WITHOUT_CLASSIFICATION	5.678407211334462E-5	IMPLEMENTATION
// switch on the object's *native type*. This allows use-defined // classes that have extended core native types to piggyback on their // marshalling logic.	WITHOUT_CLASSIFICATION	0.9984934164142275	WITHOUT_CLASSIFICATION	0.0015065835857725157	IMPLEMENTATION
// object is a custom class that extended one of the native types other than Object	WITHOUT_CLASSIFICATION	0.9999913506549848	WITHOUT_CLASSIFICATION	8.649345015230298E-6	IMPLEMENTATION
// We do not want to capture cached methods	WITHOUT_CLASSIFICATION	0.9995879419440089	WITHOUT_CLASSIFICATION	4.120580559910632E-4	IMPLEMENTATION
// w_symbol	WITHOUT_CLASSIFICATION	0.9996612927501303	WITHOUT_CLASSIFICATION	3.3870724986971226E-4	IMPLEMENTATION
// w_unique	WITHOUT_CLASSIFICATION	0.9996612927501303	WITHOUT_CLASSIFICATION	3.3870724986971226E-4	IMPLEMENTATION
// call the proc, but not for symbols	WITHOUT_CLASSIFICATION	0.9994793874264549	WITHOUT_CLASSIFICATION	5.206125735450477E-4	IMPLEMENTATION
// Major // Minor	WITHOUT_CLASSIFICATION	0.9996620240644393	WITHOUT_CLASSIFICATION	3.379759355607583E-4	IMPLEMENTATION
// any ivars, since we don't have __attached__ ivar now	WITHOUT_CLASSIFICATION	0.9999947198821342	WITHOUT_CLASSIFICATION	5.280117865844384E-6	IMPLEMENTATION
// "hashdef" object, a hash with a default	WITHOUT_CLASSIFICATION	0.9999877715016557	WITHOUT_CLASSIFICATION	1.2228498344262651E-5	IMPLEMENTATION
// All "C" marshalled objects descend from core classes, which are all RubyObject	WITHOUT_CLASSIFICATION	0.9999975757719491	WITHOUT_CLASSIFICATION	2.424228050946088E-6	IMPLEMENTATION
// sic	WITHOUT_CLASSIFICATION	0.9999901088813848	WITHOUT_CLASSIFICATION	9.891118615195496E-6	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.999926998614077	WITHOUT_CLASSIFICATION	7.300138592306117E-5	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.999926998614077	WITHOUT_CLASSIFICATION	7.300138592306117E-5	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.999926998614077	WITHOUT_CLASSIFICATION	7.300138592306117E-5	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999818739770764	WITHOUT_CLASSIFICATION	1.8126022923547374E-5	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999818739770764	WITHOUT_CLASSIFICATION	1.8126022923547374E-5	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9991554556314721	WITHOUT_CLASSIFICATION	8.445443685277619E-4	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9991554556314721	WITHOUT_CLASSIFICATION	8.445443685277619E-4	IMPLEMENTATION
/*     * If we are setting post arguments we can assume there are no pre or others     */	WITHOUT_CLASSIFICATION	0.9999999162038775	WITHOUT_CLASSIFICATION	8.379612248259765E-8	IMPLEMENTATION
// XXX: 0xffff0000 on BE?	WITHOUT_CLASSIFICATION	0.998861337114613	WITHOUT_CLASSIFICATION	0.0011386628853868991	IMPLEMENTATION
// unsigned short, native	WITHOUT_CLASSIFICATION	0.9998602331780087	WITHOUT_CLASSIFICATION	1.397668219913023E-4	IMPLEMENTATION
// int, native // long, native	WITHOUT_CLASSIFICATION	0.9998608936564222	WITHOUT_CLASSIFICATION	1.3910634357778952E-4	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.999926998614077	WITHOUT_CLASSIFICATION	7.300138592306117E-5	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.999926998614077	WITHOUT_CLASSIFICATION	7.300138592306117E-5	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.999926998614077	WITHOUT_CLASSIFICATION	7.300138592306117E-5	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999818739770764	WITHOUT_CLASSIFICATION	1.8126022923547374E-5	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999818739770764	WITHOUT_CLASSIFICATION	1.8126022923547374E-5	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999818739770764	WITHOUT_CLASSIFICATION	1.8126022923547374E-5	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9991554556314721	WITHOUT_CLASSIFICATION	8.445443685277619E-4	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9991554556314721	WITHOUT_CLASSIFICATION	8.445443685277619E-4	IMPLEMENTATION
// Look for slash, starting from 'start' position, until 'end'.	WITHOUT_CLASSIFICATION	0.9999952305805566	WITHOUT_CLASSIFICATION	4.769419443394169E-6	IMPLEMENTATION
// Our values holder (name of variables are kept in staticScope)	WITHOUT_CLASSIFICATION	0.9999999734797169	WITHOUT_CLASSIFICATION	2.6520282995772322E-8	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9976232104938855	WITHOUT_CLASSIFICATION	0.0023767895061144024	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9976232104938855	WITHOUT_CLASSIFICATION	0.0023767895061144024	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9976232104938855	WITHOUT_CLASSIFICATION	0.0023767895061144024	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9976232104938855	WITHOUT_CLASSIFICATION	0.0023767895061144024	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9976232104938855	WITHOUT_CLASSIFICATION	0.0023767895061144024	IMPLEMENTATION
// SunSignalFacade	WITHOUT_CLASSIFICATION	0.9996612927501303	WITHOUT_CLASSIFICATION	3.3870724986971226E-4	IMPLEMENTATION
// All braces pushed..	WITHOUT_CLASSIFICATION	0.999974317060395	WITHOUT_CLASSIFICATION	2.5682939605000514E-5	IMPLEMENTATION
/* failed : try next recursion */	WITHOUT_CLASSIFICATION	0.9730247442937733	WITHOUT_CLASSIFICATION	0.026975255706226667	IMPLEMENTATION
// leftToken made us start as nest 1	WITHOUT_CLASSIFICATION	0.9999804789324878	WITHOUT_CLASSIFICATION	1.952106751226641E-5	IMPLEMENTATION
// are we at '**/'	WITHOUT_CLASSIFICATION	0.99986745813847	WITHOUT_CLASSIFICATION	1.325418615299806E-4	IMPLEMENTATION
// No or mismatched braces..Move along..nothing to see here	WITHOUT_CLASSIFICATION	0.9999098165018669	WITHOUT_CLASSIFICATION	9.018349813307244E-5	IMPLEMENTATION
// not enough bytes	WITHOUT_CLASSIFICATION	0.925999989001625	WITHOUT_CLASSIFICATION	0.07400001099837504	IMPLEMENTATION
// Get index of last read byte	WITHOUT_CLASSIFICATION	0.9999942706670059	WITHOUT_CLASSIFICATION	5.729332994193837E-6	IMPLEMENTATION
// skip inner braces	WITHOUT_CLASSIFICATION	0.9994724500655513	WITHOUT_CLASSIFICATION	5.275499344487032E-4	IMPLEMENTATION
/*     * Process {}'s (example: Dir.glob("{jruby,jython}/README*")      */	WITHOUT_CLASSIFICATION	0.9999926428002077	WITHOUT_CLASSIFICATION	7.357199792212759E-6	IMPLEMENTATION
/* complete, according to Posix.2 */	WITHOUT_CLASSIFICATION	0.9999903689114285	WITHOUT_CLASSIFICATION	9.631088571579902E-6	IMPLEMENTATION
/* Only accept an open brace if there is a close */	WITHOUT_CLASSIFICATION	0.9999999548438535	WITHOUT_CLASSIFICATION	4.51561465440236E-8	IMPLEMENTATION
/* brace to match it.  Bracket expressions must be */	WITHOUT_CLASSIFICATION	0.9999909346862785	WITHOUT_CLASSIFICATION	9.065313721474186E-6	IMPLEMENTATION
// index of left-most brace // index of right-most brace	WITHOUT_CLASSIFICATION	0.9998688378144849	WITHOUT_CLASSIFICATION	1.311621855150871E-4	IMPLEMENTATION
// Length check is a hack.  We should not be reeiving "" as a filename ever. 	WITHOUT_CLASSIFICATION	0.9999924049871215	WITHOUT_CLASSIFICATION	7.5950128784993366E-6	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9997972627040751	WITHOUT_CLASSIFICATION	2.027372959249254E-4	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9997972627040751	WITHOUT_CLASSIFICATION	2.027372959249254E-4	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9997972627040751	WITHOUT_CLASSIFICATION	2.027372959249254E-4	IMPLEMENTATION
// Pickaxe says @ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9995100756563111	WITHOUT_CLASSIFICATION	4.899243436888277E-4	IMPLEMENTATION
// Pickaxe says @@ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9995056128413111	WITHOUT_CLASSIFICATION	4.943871586888133E-4	IMPLEMENTATION
// SimpleSampler	WITHOUT_CLASSIFICATION	0.9996612927501303	WITHOUT_CLASSIFICATION	3.3870724986971226E-4	IMPLEMENTATION
/*     * convert into longs, returning unsigned 64-bit values as signed longs     * ( num2long raises a RangeError on values > Long.MAX_VALUE )     */	WITHOUT_CLASSIFICATION	0.9999997995777238	WITHOUT_CLASSIFICATION	2.0042227608362797E-7	IMPLEMENTATION
// b64_xtable for decoding Base 64	WITHOUT_CLASSIFICATION	0.9999511475401525	WITHOUT_CLASSIFICATION	4.885245984749578E-5	IMPLEMENTATION
// single precision, little-endian	WITHOUT_CLASSIFICATION	0.9998436515172515	WITHOUT_CLASSIFICATION	1.5634848274845002E-4	IMPLEMENTATION
// single precision, big-endian	WITHOUT_CLASSIFICATION	0.999843671291184	WITHOUT_CLASSIFICATION	1.5632870881604287E-4	IMPLEMENTATION
// single precision, native	WITHOUT_CLASSIFICATION	0.9997491935988514	WITHOUT_CLASSIFICATION	2.508064011486347E-4	IMPLEMENTATION
// single precision, native // single precision, native	WITHOUT_CLASSIFICATION	0.9995981811534322	WITHOUT_CLASSIFICATION	4.0181884656769644E-4	IMPLEMENTATION
// double precision, little-endian	WITHOUT_CLASSIFICATION	0.9999929963657832	WITHOUT_CLASSIFICATION	7.0036342167789965E-6	IMPLEMENTATION
// double precision, big-endian	WITHOUT_CLASSIFICATION	0.9999929972516893	WITHOUT_CLASSIFICATION	7.002748310689802E-6	IMPLEMENTATION
// double precision, native	WITHOUT_CLASSIFICATION	0.9999887641070171	WITHOUT_CLASSIFICATION	1.1235892982845934E-5	IMPLEMENTATION
// signed short, little-endian	WITHOUT_CLASSIFICATION	0.9999504174884905	WITHOUT_CLASSIFICATION	4.9582511509570025E-5	IMPLEMENTATION
// signed char	WITHOUT_CLASSIFICATION	0.9998582894479999	WITHOUT_CLASSIFICATION	1.4171055199999015E-4	IMPLEMENTATION
// unsigned char	WITHOUT_CLASSIFICATION	0.9998445940249874	WITHOUT_CLASSIFICATION	1.5540597501260205E-4	IMPLEMENTATION
// long, little-endian	WITHOUT_CLASSIFICATION	0.999945214965351	WITHOUT_CLASSIFICATION	5.4785034649026586E-5	IMPLEMENTATION
// long, big-endian	WITHOUT_CLASSIFICATION	0.999667756457049	WITHOUT_CLASSIFICATION	3.322435429510876E-4	IMPLEMENTATION
// unsigned int, native	WITHOUT_CLASSIFICATION	0.9998601621209603	WITHOUT_CLASSIFICATION	1.398378790397867E-4	IMPLEMENTATION
// int, native	WITHOUT_CLASSIFICATION	0.9991458868127902	WITHOUT_CLASSIFICATION	8.541131872098577E-4	IMPLEMENTATION
// 64-bit number, native (as fixnum)	WITHOUT_CLASSIFICATION	0.9998191718123032	WITHOUT_CLASSIFICATION	1.8082818769688542E-4	IMPLEMENTATION
// How many occurrences of 'type' we want	WITHOUT_CLASSIFICATION	0.999774800782429	WITHOUT_CLASSIFICATION	2.251992175709534E-4	IMPLEMENTATION
// See if we have a converter for the job...	WITHOUT_CLASSIFICATION	0.9999865678613827	WITHOUT_CLASSIFICATION	1.3432138617316628E-5	IMPLEMENTATION
// Otherwise the unpack should be here...	WITHOUT_CLASSIFICATION	0.9994767995566034	WITHOUT_CLASSIFICATION	5.232004433966609E-4	IMPLEMENTATION
// Possible Checksum Byte	WITHOUT_CLASSIFICATION	0.9999419491846946	WITHOUT_CLASSIFICATION	5.8050815305505625E-5	IMPLEMENTATION
// obtain a	WITHOUT_CLASSIFICATION	0.9998171196025677	WITHOUT_CLASSIFICATION	1.828803974322218E-4	IMPLEMENTATION
// obtain b	WITHOUT_CLASSIFICATION	0.999809128620969	WITHOUT_CLASSIFICATION	1.9087137903086077E-4	IMPLEMENTATION
// obtain c	WITHOUT_CLASSIFICATION	0.9998487423469979	WITHOUT_CLASSIFICATION	1.5125765300204306E-4	IMPLEMENTATION
// obtain d	WITHOUT_CLASSIFICATION	0.9997129407831041	WITHOUT_CLASSIFICATION	2.870592168958276E-4	IMPLEMENTATION
/*encode.limit() - */	WITHOUT_CLASSIFICATION	0.9999997064300687	WITHOUT_CLASSIFICATION	2.9356993120666705E-7	IMPLEMENTATION
/* 1 */	WITHOUT_CLASSIFICATION	0.9999983533346846	WITHOUT_CLASSIFICATION	1.646665315490421E-6	IMPLEMENTATION
/* 2 */	WITHOUT_CLASSIFICATION	0.9999988493857015	WITHOUT_CLASSIFICATION	1.150614298520314E-6	IMPLEMENTATION
/* 3 */	WITHOUT_CLASSIFICATION	0.9999986899629454	WITHOUT_CLASSIFICATION	1.310037054572617E-6	IMPLEMENTATION
/* 4 */	WITHOUT_CLASSIFICATION	0.9999990604381674	WITHOUT_CLASSIFICATION	9.395618324954824E-7	IMPLEMENTATION
/* 5 */	WITHOUT_CLASSIFICATION	0.9999988441834022	WITHOUT_CLASSIFICATION	1.1558165976957363E-6	IMPLEMENTATION
/* 6 */	WITHOUT_CLASSIFICATION	0.9999984908953339	WITHOUT_CLASSIFICATION	1.5091046661036545E-6	IMPLEMENTATION
/* 7 */	WITHOUT_CLASSIFICATION	0.999998094741292	WITHOUT_CLASSIFICATION	1.9052587079901265E-6	IMPLEMENTATION
// Skip all whitespace in pack format string	WITHOUT_CLASSIFICATION	0.9999983555857778	WITHOUT_CLASSIFICATION	1.6444142222760845E-6	IMPLEMENTATION
// Skip embedded comments in pack format string	WITHOUT_CLASSIFICATION	0.999995021067925	WITHOUT_CLASSIFICATION	4.9789320749757065E-6	IMPLEMENTATION
// In case when the number of occurences is // explicitly specified, we have to read up // the remaining garbage after the '\0' to // satisfy the requested pattern.	WITHOUT_CLASSIFICATION	0.9999940950911514	WITHOUT_CLASSIFICATION	5.904908848599847E-6	IMPLEMENTATION
//normal exit, this should be faster than a test at each iterations for string with more than //about 40 char	WITHOUT_CLASSIFICATION	0.9999728824804215	WITHOUT_CLASSIFICATION	2.7117519578486424E-5	IMPLEMENTATION
// We encountered '\0' when // were reading the buffer above, // increment the number of read bytes.	WITHOUT_CLASSIFICATION	0.9999993546106112	WITHOUT_CLASSIFICATION	6.453893888041854E-7	IMPLEMENTATION
// MRI behavior: Contrary to what seems to be logical, // when '*' is given, MRI calculates the distance // to the end, in order to go backwards.	WITHOUT_CLASSIFICATION	0.9999940455174781	WITHOUT_CLASSIFICATION	5.95448252192335E-6	IMPLEMENTATION
// Determine how many of type are needed (default: 1)	WITHOUT_CLASSIFICATION	0.7212142101733878	WITHOUT_CLASSIFICATION	0.2787857898266121	IMPLEMENTATION
// 'Z' adds extra null pad (versus 'a')	WITHOUT_CLASSIFICATION	0.9999481159829686	WITHOUT_CLASSIFICATION	5.1884017031374595E-5	IMPLEMENTATION
//if the low bit is set //set the high bit of the result	WITHOUT_CLASSIFICATION	0.9999884823178001	WITHOUT_CLASSIFICATION	1.1517682199937317E-5	IMPLEMENTATION
//if the index is not a multiple of 8, we are not on a byte boundary //shift the byte	WITHOUT_CLASSIFICATION	0.9975545167452496	WITHOUT_CLASSIFICATION	0.0024454832547503567	IMPLEMENTATION
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9952962952101999	WITHOUT_CLASSIFICATION	0.004703704789800086	IMPLEMENTATION
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9952962952101999	WITHOUT_CLASSIFICATION	0.004703704789800086	IMPLEMENTATION
//do some padding, I don't understand the padding strategy	WITHOUT_CLASSIFICATION	0.9971325187297853	WITHOUT_CLASSIFICATION	0.0028674812702147293	IMPLEMENTATION
// we filled up current byte; append it and create next one	WITHOUT_CLASSIFICATION	0.9990162672760731	WITHOUT_CLASSIFICATION	9.837327239270194E-4	IMPLEMENTATION
//if the index is not a multiple of 8, we are not on a byte boundary	WITHOUT_CLASSIFICATION	0.9975487124039303	WITHOUT_CLASSIFICATION	0.002451287596069696	IMPLEMENTATION
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9999998822485979	WITHOUT_CLASSIFICATION	1.1775140209568603E-7	IMPLEMENTATION
// we don't deal with negatives.	WITHOUT_CLASSIFICATION	0.9998491216246751	WITHOUT_CLASSIFICATION	1.5087837532497305E-4	IMPLEMENTATION
// populate commandline with NG-provided stuff	WITHOUT_CLASSIFICATION	0.9999198108584396	WITHOUT_CLASSIFICATION	8.018914156030552E-5	IMPLEMENTATION
// are we recursing?	WITHOUT_CLASSIFICATION	0.9998622983569024	WITHOUT_CLASSIFICATION	1.3770164309760937E-4	IMPLEMENTATION
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999998778958117	WITHOUT_CLASSIFICATION	1.22104188214541E-7	IMPLEMENTATION
// default PidGetter	WITHOUT_CLASSIFICATION	0.9999398278342436	WITHOUT_CLASSIFICATION	6.017216575650675E-5	IMPLEMENTATION
// ignore and try windows version	WITHOUT_CLASSIFICATION	0.9999898123802177	WITHOUT_CLASSIFICATION	1.0187619782437828E-5	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999294285926963	WITHOUT_CLASSIFICATION	7.057140730372964E-5	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999294285926963	WITHOUT_CLASSIFICATION	7.057140730372964E-5	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999294285926963	WITHOUT_CLASSIFICATION	7.057140730372964E-5	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999294285926963	WITHOUT_CLASSIFICATION	7.057140730372964E-5	IMPLEMENTATION
// try both	WITHOUT_CLASSIFICATION	0.9997696917970091	WITHOUT_CLASSIFICATION	2.3030820299082982E-4	IMPLEMENTATION
// just unix	WITHOUT_CLASSIFICATION	0.9999089572236517	WITHOUT_CLASSIFICATION	9.104277634828008E-5	IMPLEMENTATION
// just windows	WITHOUT_CLASSIFICATION	0.9999265902972023	WITHOUT_CLASSIFICATION	7.340970279762739E-5	IMPLEMENTATION
// neither	WITHOUT_CLASSIFICATION	0.9999901435772663	WITHOUT_CLASSIFICATION	9.856422733665007E-6	IMPLEMENTATION
// CON: popen is a case where I think we should just always shell out.	WITHOUT_CLASSIFICATION	0.9940644249132575	WITHOUT_CLASSIFICATION	0.005935575086742405	IMPLEMENTATION
// single string command, pass to sh to expand wildcards	WITHOUT_CLASSIFICATION	0.9999969446176469	WITHOUT_CLASSIFICATION	3.0553823532048408E-6	IMPLEMENTATION
// direct invocation of the command	WITHOUT_CLASSIFICATION	0.9999715843907553	WITHOUT_CLASSIFICATION	2.8415609244731323E-5	IMPLEMENTATION
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999744372881296	WITHOUT_CLASSIFICATION	2.5562711870296777E-5	IMPLEMENTATION
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999744372881296	WITHOUT_CLASSIFICATION	2.5562711870296777E-5	IMPLEMENTATION
// close process output // See JRUBY-3405; hooking up to parent process stdin caused // problems for IRB etc using stdin.	WITHOUT_CLASSIFICATION	0.9999990273404943	WITHOUT_CLASSIFICATION	9.726595057368886E-7	IMPLEMENTATION
// ignore, we're on the way out	WITHOUT_CLASSIFICATION	0.999858137256972	WITHOUT_CLASSIFICATION	1.418627430279166E-4	IMPLEMENTATION
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.999981574849362	WITHOUT_CLASSIFICATION	1.8425150637998705E-5	IMPLEMENTATION
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999861270883716	WITHOUT_CLASSIFICATION	1.3872911628369289E-5	IMPLEMENTATION
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999861270883716	WITHOUT_CLASSIFICATION	1.3872911628369289E-5	IMPLEMENTATION
// popen caller wants to be able to write, provide subprocess out directly	WITHOUT_CLASSIFICATION	0.9999796257073185	WITHOUT_CLASSIFICATION	2.037429268151556E-5	IMPLEMENTATION
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999972342721944	WITHOUT_CLASSIFICATION	2.7657278054860093E-6	IMPLEMENTATION
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999972342721944	WITHOUT_CLASSIFICATION	2.7657278054860093E-6	IMPLEMENTATION
// execute command with sh -c // this does shell expansion of wildcards	WITHOUT_CLASSIFICATION	0.9999908438242869	WITHOUT_CLASSIFICATION	9.15617571301092E-6	IMPLEMENTATION
// We need to close the out, since some // processes would just wait for the stream // to be closed before they process its content, // and produce the output. E.g.: "cat".	WITHOUT_CLASSIFICATION	0.9999996956817285	WITHOUT_CLASSIFICATION	3.043182715722457E-7	IMPLEMENTATION
// we only close out if it's the slave stream, to avoid // closing a directly-mapped stream from parent process	WITHOUT_CLASSIFICATION	0.9999997647028739	WITHOUT_CLASSIFICATION	2.352971261569181E-7	IMPLEMENTATION
// The assumption here is that the 'in' stream provides // proper available() support. If available() always // returns 0, we'll hang!	WITHOUT_CLASSIFICATION	0.9999549924506628	WITHOUT_CLASSIFICATION	4.5007549337252375E-5	IMPLEMENTATION
// Force t3 to quit, just in case if it's stuck. // Note: On some platforms, even interrupt might not // have an effect if the thread is IO blocked.	WITHOUT_CLASSIFICATION	0.9999608408311913	WITHOUT_CLASSIFICATION	3.91591688086692E-5	IMPLEMENTATION
// Check for special shell characters [<>|] at the beginning // and end of each command word and don't run in process if we find them.	WITHOUT_CLASSIFICATION	0.9999991431356899	WITHOUT_CLASSIFICATION	8.568643101294512E-7	IMPLEMENTATION
// Note: this method produces meaningful results // only for RubyIO objects. For everything else returns 0.	WITHOUT_CLASSIFICATION	0.999841710637277	WITHOUT_CLASSIFICATION	1.5828936272307886E-4	IMPLEMENTATION
//sequential	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
// reverse the entire area of the array selected if it's reversed.	WITHOUT_CLASSIFICATION	0.9999840138055871	WITHOUT_CLASSIFICATION	1.5986194412896747E-5	IMPLEMENTATION
// do median of 7 if the array is over 200 elements.	WITHOUT_CLASSIFICATION	0.9999985538144303	WITHOUT_CLASSIFICATION	1.4461855697207783E-6	IMPLEMENTATION
// if it's less than 200 do median of 3	WITHOUT_CLASSIFICATION	0.9999967785335988	WITHOUT_CLASSIFICATION	3.221466401215566E-6	IMPLEMENTATION
// SignalFacade	WITHOUT_CLASSIFICATION	0.9996612927501303	WITHOUT_CLASSIFICATION	3.3870724986971226E-4	IMPLEMENTATION
// this is the order in which MRI does these two tests	WITHOUT_CLASSIFICATION	0.9999981598452252	WITHOUT_CLASSIFICATION	1.8401547747895766E-6	IMPLEMENTATION
// this is the order in which MRI does these tests	WITHOUT_CLASSIFICATION	0.9999988805129312	WITHOUT_CLASSIFICATION	1.1194870687732536E-6	IMPLEMENTATION
// basically just forcing a TypeError here to match MRI	WITHOUT_CLASSIFICATION	0.999938670863895	WITHOUT_CLASSIFICATION	6.132913610496403E-5	IMPLEMENTATION
// not saving DFS instance, as it will only be used once (at most) per call	WITHOUT_CLASSIFICATION	0.9995731596903361	WITHOUT_CLASSIFICATION	4.268403096639835E-4	IMPLEMENTATION
// Args	WITHOUT_CLASSIFICATION	0.9999901142017723	WITHOUT_CLASSIFICATION	9.885798227712533E-6	IMPLEMENTATION
// static methods only	WITHOUT_CLASSIFICATION	0.9997421976884248	WITHOUT_CLASSIFICATION	2.578023115751916E-4	IMPLEMENTATION
//System.err.println(" calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9996740391742935	WITHOUT_CLASSIFICATION	3.25960825706426E-4	IMPLEMENTATION
// MRI 1.8.6 behavior: null byte after '%' // leads to "%" string. Null byte in // other places, like "%5\0", leads to error.	WITHOUT_CLASSIFICATION	0.9999114826440397	WITHOUT_CLASSIFICATION	8.851735596032581E-5	IMPLEMENTATION
// last index (+1) accessed by next() // last index (+1) accessed by get()	WITHOUT_CLASSIFICATION	0.9998176629634987	WITHOUT_CLASSIFICATION	1.8233703650132703E-4	IMPLEMENTATION
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly.	WITHOUT_CLASSIFICATION	0.9999814191401931	WITHOUT_CLASSIFICATION	1.8580859806786E-5	IMPLEMENTATION
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly. Version for 1.9.	WITHOUT_CLASSIFICATION	0.9999905918353443	WITHOUT_CLASSIFICATION	9.408164655748873E-6	IMPLEMENTATION
// MRI doesn't flag it as an error if width is given multiple // times as a number (but it does for *)	WITHOUT_CLASSIFICATION	0.9999996460637505	WITHOUT_CLASSIFICATION	3.5393624943661235E-7	IMPLEMENTATION
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999991565176326	WITHOUT_CLASSIFICATION	8.43482367428359E-7	IMPLEMENTATION
// MRI 1.8.5-p12 doesn't support 1-char strings, but // YARV 0.4.1 does. I don't think it hurts to include // this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])	WITHOUT_CLASSIFICATION	0.9981603066994222	WITHOUT_CLASSIFICATION	0.0018396933005776573	IMPLEMENTATION
// 'd' and 'i' are the same	WITHOUT_CLASSIFICATION	0.9999917251063971	WITHOUT_CLASSIFICATION	8.274893602998603E-6	IMPLEMENTATION
// 'u' with space or plus flags is same as 'd'	WITHOUT_CLASSIFICATION	0.9999982391085668	WITHOUT_CLASSIFICATION	1.760891433213817E-6	IMPLEMENTATION
// We depart here from strict adherence to MRI code, as MRI // uses C-sprintf, in part, to format numeric output, while // we'll use Java's numeric formatting code (and our own).	WITHOUT_CLASSIFICATION	0.9999986927538586	WITHOUT_CLASSIFICATION	1.3072461415010184E-6	IMPLEMENTATION
// skip '-' in bytes, will add where appropriate	WITHOUT_CLASSIFICATION	0.9999118310859497	WITHOUT_CLASSIFICATION	8.816891405025703E-5	IMPLEMENTATION
// ..	WITHOUT_CLASSIFICATION	0.9999903959569098	WITHOUT_CLASSIFICATION	9.604043090195105E-6	IMPLEMENTATION
// the 1 is for the stripped sign char	WITHOUT_CLASSIFICATION	0.9999929684301269	WITHOUT_CLASSIFICATION	7.031569873145794E-6	IMPLEMENTATION
// FIXME: what is correct 'recv' argument? // (this does produce the desired behavior)	WITHOUT_CLASSIFICATION	0.9419812070426418	WITHOUT_CLASSIFICATION	0.05801879295735822	IMPLEMENTATION
// gotta have at least a zero...	WITHOUT_CLASSIFICATION	0.9999433863916268	WITHOUT_CLASSIFICATION	5.6613608373236894E-5	IMPLEMENTATION
// OK, we now have the significand in digits[0...nDigits] // and the exponent in exponent.  We're ready to format.	WITHOUT_CLASSIFICATION	0.999977431359048	WITHOUT_CLASSIFICATION	2.256864095197075E-5	IMPLEMENTATION
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9999967768040359	WITHOUT_CLASSIFICATION	3.2231959641068067E-6	IMPLEMENTATION
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999258878264806	WITHOUT_CLASSIFICATION	7.411217351943612E-5	IMPLEMENTATION
//System.err.println(" stringToLong/reading c=" + data[s]);	WITHOUT_CLASSIFICATION	0.9996740391742935	WITHOUT_CLASSIFICATION	3.25960825706426E-4	IMPLEMENTATION
//System.err.println(" stringToLong/converted c=" + c);	WITHOUT_CLASSIFICATION	0.9996802826045728	WITHOUT_CLASSIFICATION	3.197173954272202E-4	IMPLEMENTATION
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9999967768040359	WITHOUT_CLASSIFICATION	3.2231959641068067E-6	IMPLEMENTATION
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999258878264806	WITHOUT_CLASSIFICATION	7.411217351943612E-5	IMPLEMENTATION
// precision for G/g includes integer digits	WITHOUT_CLASSIFICATION	0.9998783445629446	WITHOUT_CLASSIFICATION	1.2165543705542551E-4	IMPLEMENTATION
// deal with length/width	WITHOUT_CLASSIFICATION	0.9998776602159587	WITHOUT_CLASSIFICATION	1.2233978404129647E-4	IMPLEMENTATION
// deal with length/width	WITHOUT_CLASSIFICATION	0.9998776602159587	WITHOUT_CLASSIFICATION	1.2233978404129647E-4	IMPLEMENTATION
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999642055471354	WITHOUT_CLASSIFICATION	3.5794452864624866E-5	IMPLEMENTATION
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999948123972505	WITHOUT_CLASSIFICATION	5.18760274949889E-6	IMPLEMENTATION
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999977860504338	WITHOUT_CLASSIFICATION	2.2139495662380032E-6	IMPLEMENTATION
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.999989081314468	WITHOUT_CLASSIFICATION	1.0918685531953132E-5	IMPLEMENTATION
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9999848854504224	WITHOUT_CLASSIFICATION	1.5114549577487034E-5	IMPLEMENTATION
// MRI behavior: In this mode // trailing zeroes are removed: // 1.500E+05 -> 1.5E+05 	WITHOUT_CLASSIFICATION	0.9999724988453249	WITHOUT_CLASSIFICATION	2.750115467509402E-5	IMPLEMENTATION
// '.' is printed	WITHOUT_CLASSIFICATION	0.999880041056699	WITHOUT_CLASSIFICATION	1.1995894330095008E-4	IMPLEMENTATION
// all precision numebers printed	WITHOUT_CLASSIFICATION	0.9999344849547941	WITHOUT_CLASSIFICATION	6.551504520598864E-5	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9995240464850325	WITHOUT_CLASSIFICATION	4.7595351496763574E-4	IMPLEMENTATION
// '.'	WITHOUT_CLASSIFICATION	0.9999905611767609	WITHOUT_CLASSIFICATION	9.438823239187818E-6	IMPLEMENTATION
// decimal form, like (but not *just* like!) 'f'	WITHOUT_CLASSIFICATION	0.989452552086864	WITHOUT_CLASSIFICATION	0.01054744791313588	IMPLEMENTATION
// digits array shifted, update all	WITHOUT_CLASSIFICATION	0.9999725712293841	WITHOUT_CLASSIFICATION	2.7428770615868578E-5	IMPLEMENTATION
// will have a trailing '.' // g fills trailing zeroes if #	WITHOUT_CLASSIFICATION	0.9999866995051001	WITHOUT_CLASSIFICATION	1.3300494899956333E-5	IMPLEMENTATION
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999959421204703	WITHOUT_CLASSIFICATION	4.057879529706043E-6	IMPLEMENTATION
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999959421204703	WITHOUT_CLASSIFICATION	4.057879529706043E-6	IMPLEMENTATION
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9998621412531209	WITHOUT_CLASSIFICATION	1.3785874687915895E-4	IMPLEMENTATION
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9998621412531209	WITHOUT_CLASSIFICATION	1.3785874687915895E-4	IMPLEMENTATION
// digits arr shifted, update all	WITHOUT_CLASSIFICATION	0.9999655702989955	WITHOUT_CLASSIFICATION	3.4429701004635604E-5	IMPLEMENTATION
// (1|intlen).prec	WITHOUT_CLASSIFICATION	0.9996612927501303	WITHOUT_CLASSIFICATION	3.3870724986971226E-4	IMPLEMENTATION
// (1|intlen)	WITHOUT_CLASSIFICATION	0.9996612927501303	WITHOUT_CLASSIFICATION	3.3870724986971226E-4	IMPLEMENTATION
// will have a trailing '.'	WITHOUT_CLASSIFICATION	0.9999766340098417	WITHOUT_CLASSIFICATION	2.336599015823608E-5	IMPLEMENTATION
// fill up the rest with zeroes	WITHOUT_CLASSIFICATION	0.999667966896807	WITHOUT_CLASSIFICATION	3.320331031929539E-4	IMPLEMENTATION
//System.err.println(" main/len=" + len);	WITHOUT_CLASSIFICATION	0.9996740391742935	WITHOUT_CLASSIFICATION	3.25960825706426E-4	IMPLEMENTATION
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999977860504338	WITHOUT_CLASSIFICATION	2.2139495662380032E-6	IMPLEMENTATION
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.999989081314468	WITHOUT_CLASSIFICATION	1.0918685531953132E-5	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9995240464850325	WITHOUT_CLASSIFICATION	4.7595351496763574E-4	IMPLEMENTATION
// '.'	WITHOUT_CLASSIFICATION	0.9999905611767609	WITHOUT_CLASSIFICATION	9.438823239187818E-6	IMPLEMENTATION
// equivalent to MRI case '\0':	WITHOUT_CLASSIFICATION	0.9998879624997513	WITHOUT_CLASSIFICATION	1.1203750024873313E-4	IMPLEMENTATION
// '.' and all precision digits printed	WITHOUT_CLASSIFICATION	0.9999688157380187	WITHOUT_CLASSIFICATION	3.1184261981435025E-5	IMPLEMENTATION
// \v	WITHOUT_CLASSIFICATION	0.9999901088813848	WITHOUT_CLASSIFICATION	9.891118615195496E-6	IMPLEMENTATION
// dangling '%' char	WITHOUT_CLASSIFICATION	0.9998447089349369	WITHOUT_CLASSIFICATION	1.5529106506312964E-4	IMPLEMENTATION
// main while loop (offset < length)	WITHOUT_CLASSIFICATION	0.9999529868682407	WITHOUT_CLASSIFICATION	4.701313175935945E-5	IMPLEMENTATION
// debugging code, keeping for now	WITHOUT_CLASSIFICATION	0.999982973911924	WITHOUT_CLASSIFICATION	1.702608807596774E-5	IMPLEMENTATION
// MRI rounds up on nnn5nnn, but not nnn5 -- // except for when they do	WITHOUT_CLASSIFICATION	0.9999553359189245	WITHOUT_CLASSIFICATION	4.466408107543194E-5	IMPLEMENTATION
// "%.0f" % 0.99	WITHOUT_CLASSIFICATION	0.9996635412775583	WITHOUT_CLASSIFICATION	3.3645872244168507E-4	IMPLEMENTATION
// limit the length of negatives if possible (also faster)	WITHOUT_CLASSIFICATION	0.9999754991016049	WITHOUT_CLASSIFICATION	2.4500898395073174E-5	IMPLEMENTATION
// negative values	WITHOUT_CLASSIFICATION	0.9999911197205859	WITHOUT_CLASSIFICATION	8.88027941414024E-6	IMPLEMENTATION
// calculation for negatives when %u specified // for values >= Integer.MIN_VALUE * 2, MRI uses (the equivalent of) //   long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val // for smaller values, BigInteger math is required to conform to MRI's // result.	WITHOUT_CLASSIFICATION	0.9999997439499502	WITHOUT_CLASSIFICATION	2.560500498316692E-7	IMPLEMENTATION
// relatively cheap test for 32-bit values	WITHOUT_CLASSIFICATION	0.9999996446696501	WITHOUT_CLASSIFICATION	3.5533034994756045E-7	IMPLEMENTATION
// no such luck...	WITHOUT_CLASSIFICATION	0.9996753222162419	WITHOUT_CLASSIFICATION	3.246777837580211E-4	IMPLEMENTATION
// ok, now it gets expensive...	WITHOUT_CLASSIFICATION	0.9999687046720903	WITHOUT_CLASSIFICATION	3.129532790964613E-5	IMPLEMENTATION
// go through negated powers of 32 until we find one small enough 	WITHOUT_CLASSIFICATION	0.9999785192393903	WITHOUT_CLASSIFICATION	2.1480760609595294E-5	IMPLEMENTATION
// add to the corresponding positive power of 32 for the result. // meaningful? no. conformant? yes. I just write the code...	WITHOUT_CLASSIFICATION	0.9998124031180029	WITHOUT_CLASSIFICATION	1.8759688199707433E-4	IMPLEMENTATION
/* constant vector a */	WITHOUT_CLASSIFICATION	0.9999818049405765	WITHOUT_CLASSIFICATION	1.8195059423459078E-5	IMPLEMENTATION
/* most significant w-r bits */	WITHOUT_CLASSIFICATION	0.9999519410879368	WITHOUT_CLASSIFICATION	4.805891206305868E-5	IMPLEMENTATION
/* least significant r bits */	WITHOUT_CLASSIFICATION	0.9999935217028101	WITHOUT_CLASSIFICATION	6.478297189895203E-6	IMPLEMENTATION
// state[j] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999441879397071	WITHOUT_CLASSIFICATION	5.581206029297174E-5	IMPLEMENTATION
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999441879397071	WITHOUT_CLASSIFICATION	5.581206029297174E-5	IMPLEMENTATION
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999441879397071	WITHOUT_CLASSIFICATION	5.581206029297174E-5	IMPLEMENTATION
/* MSB is 1; assuring non-zero initial array */	WITHOUT_CLASSIFICATION	0.9999973540777675	WITHOUT_CLASSIFICATION	2.645922232601716E-6	IMPLEMENTATION
/* Tempering */	WITHOUT_CLASSIFICATION	0.9999338107859356	WITHOUT_CLASSIFICATION	6.6189214064411E-5	IMPLEMENTATION
// MRI behavior: Week values are monotonous. // So, weeks that effectively belong to previous year, // will get the value of 0, not 52 or 53, as in Java.	WITHOUT_CLASSIFICATION	0.9999999895419374	WITHOUT_CLASSIFICATION	1.0458062571937852E-8	IMPLEMENTATION
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9996745926251382	WITHOUT_CLASSIFICATION	3.2540737486181726E-4	IMPLEMENTATION
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9996745926251382	WITHOUT_CLASSIFICATION	3.2540737486181726E-4	IMPLEMENTATION
// \v	WITHOUT_CLASSIFICATION	0.9999901088813848	WITHOUT_CLASSIFICATION	9.891118615195496E-6	IMPLEMENTATION
//System.err.println("getSign()");	WITHOUT_CLASSIFICATION	0.9997254911986895	WITHOUT_CLASSIFICATION	2.7450880131056003E-4	IMPLEMENTATION
//System.err.println(" getSign/" + sign);	WITHOUT_CLASSIFICATION	0.9996740391742935	WITHOUT_CLASSIFICATION	3.25960825706426E-4	IMPLEMENTATION
//System.err.println("figureOutBase()/base=" + base);	WITHOUT_CLASSIFICATION	0.9996740391742935	WITHOUT_CLASSIFICATION	3.25960825706426E-4	IMPLEMENTATION
//System.err.println(" figureOutBase/base=" + base);	WITHOUT_CLASSIFICATION	0.9996740391742935	WITHOUT_CLASSIFICATION	3.25960825706426E-4	IMPLEMENTATION
//System.err.println("calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9996740391742935	WITHOUT_CLASSIFICATION	3.25960825706426E-4	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999696503844563	WITHOUT_CLASSIFICATION	3.034961554371392E-5	IMPLEMENTATION
//System.err.println(" stringToLong=" + val);	WITHOUT_CLASSIFICATION	0.9996740391742935	WITHOUT_CLASSIFICATION	3.25960825706426E-4	IMPLEMENTATION
// no number	WITHOUT_CLASSIFICATION	0.9998220095965383	WITHOUT_CLASSIFICATION	1.7799040346173765E-4	IMPLEMENTATION
// trailing garbage	WITHOUT_CLASSIFICATION	0.9974122548202086	WITHOUT_CLASSIFICATION	0.0025877451797914194	IMPLEMENTATION
//System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);	WITHOUT_CLASSIFICATION	0.9990767194158691	WITHOUT_CLASSIFICATION	9.232805841310069E-4	IMPLEMENTATION
// it was not found at all!	WITHOUT_CLASSIFICATION	0.9993498128647482	WITHOUT_CLASSIFICATION	6.501871352517399E-4	IMPLEMENTATION
// can be overridden to be informed when objects are removed	WITHOUT_CLASSIFICATION	0.9998845704106795	WITHOUT_CLASSIFICATION	1.1542958932061605E-4	IMPLEMENTATION
// we reached the end of a list	WITHOUT_CLASSIFICATION	0.999808639235738	WITHOUT_CLASSIFICATION	1.9136076426195422E-4	IMPLEMENTATION
// goto next bucket	WITHOUT_CLASSIFICATION	0.9993292571085761	WITHOUT_CLASSIFICATION	6.707428914238967E-4	IMPLEMENTATION
// we reached the end	WITHOUT_CLASSIFICATION	0.9997499216940633	WITHOUT_CLASSIFICATION	2.5007830593669377E-4	IMPLEMENTATION
// entry is the first element of this bucket	WITHOUT_CLASSIFICATION	0.9999672843296781	WITHOUT_CLASSIFICATION	3.2715670321871714E-5	IMPLEMENTATION
// states	WITHOUT_CLASSIFICATION	0.9999720180764724	WITHOUT_CLASSIFICATION	2.7981923527642807E-5	IMPLEMENTATION
// remove leading whitespace (includes _ for lax) // get sign, if any	WITHOUT_CLASSIFICATION	0.9999945789068699	WITHOUT_CLASSIFICATION	5.421093130039142E-6	IMPLEMENTATION
// optimistic pass - calculate value as digits are processed // digits - lax rules // decimal digits - lax rules // exponent sign/digits - lax rules // digits - strict rules // decimal digits - strict rules // exponent sign/digits - strict rules // complete calculation if possible	WITHOUT_CLASSIFICATION	0.9999992906923998	WITHOUT_CLASSIFICATION	7.093076001513311E-7	IMPLEMENTATION
// fields used for direct (optimistic) calculation // number of significant digits, updated as parsed // zeroes that may go to significand or exponent // offset of decimal pt from start (-1 -> no decimal) // significand, updated as parsed // exponent, updated as parsed	WITHOUT_CLASSIFICATION	0.9999999700319838	WITHOUT_CLASSIFICATION	2.996801620845469E-8	IMPLEMENTATION
// drop through for sign	WITHOUT_CLASSIFICATION	0.9999940487816172	WITHOUT_CLASSIFICATION	5.951218382799895E-6	IMPLEMENTATION
// switch // will use this if we have to go back the slow way	WITHOUT_CLASSIFICATION	0.9999030850059736	WITHOUT_CLASSIFICATION	9.691499402637609E-5	IMPLEMENTATION
// drop through for non-strict digits	WITHOUT_CLASSIFICATION	0.9999925862377883	WITHOUT_CLASSIFICATION	7.413762211654546E-6	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999866460344767	WITHOUT_CLASSIFICATION	1.3353965523300982E-5	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999532649920567	WITHOUT_CLASSIFICATION	4.673500794323848E-5	IMPLEMENTATION
// no digits, go calc (will return +/- 0.0 for lax)	WITHOUT_CLASSIFICATION	0.9999897162566295	WITHOUT_CLASSIFICATION	1.028374337045752E-5	IMPLEMENTATION
// ignore leading zeroes	WITHOUT_CLASSIFICATION	0.9999638816070741	WITHOUT_CLASSIFICATION	3.6118392925879424E-5	IMPLEMENTATION
// just save a count of zeroes for now; if no digit // ends up following them, they'll be applied to the // exponent rather than the significand (and our max // length for optimistic calc).	WITHOUT_CLASSIFICATION	0.9999999516111366	WITHOUT_CLASSIFICATION	4.838886340226914E-8	IMPLEMENTATION
// ok, got a non-zero, have to own up to our horded zeroes	WITHOUT_CLASSIFICATION	0.9999828261703639	WITHOUT_CLASSIFICATION	1.717382963604288E-5	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999711651448018	WITHOUT_CLASSIFICATION	2.8834855198212328E-5	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999711651448018	WITHOUT_CLASSIFICATION	2.8834855198212328E-5	IMPLEMENTATION
// oh, well, it was worth a try. go let // Double/FloatingDecimal handle it 	WITHOUT_CLASSIFICATION	0.9998997505564835	WITHOUT_CLASSIFICATION	1.0024944351642187E-4	IMPLEMENTATION
// ignore // switch	WITHOUT_CLASSIFICATION	0.9997720483598063	WITHOUT_CLASSIFICATION	2.2795164019381395E-4	IMPLEMENTATION
// ignore // switch	WITHOUT_CLASSIFICATION	0.9997720483598063	WITHOUT_CLASSIFICATION	2.2795164019381395E-4	IMPLEMENTATION
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999147005273665	WITHOUT_CLASSIFICATION	8.529947263350888E-5	IMPLEMENTATION
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999147005273665	WITHOUT_CLASSIFICATION	8.529947263350888E-5	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9998444202929379	WITHOUT_CLASSIFICATION	1.555797070621062E-4	IMPLEMENTATION
// first non_underscore char must be digit	WITHOUT_CLASSIFICATION	0.999966419341736	WITHOUT_CLASSIFICATION	3.358065826393063E-5	IMPLEMENTATION
// no dec digits, end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999568252288135	WITHOUT_CLASSIFICATION	4.3174771186451534E-5	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.9999007463694879	WITHOUT_CLASSIFICATION	9.925363051201453E-5	IMPLEMENTATION
// difficult case, send to Double/FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999768672276893	WITHOUT_CLASSIFICATION	2.3132772310757418E-5	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.999952741777263	WITHOUT_CLASSIFICATION	4.725822273687297E-5	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.999952741777263	WITHOUT_CLASSIFICATION	4.725822273687297E-5	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999866460344767	WITHOUT_CLASSIFICATION	1.3353965523300982E-5	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999866460344767	WITHOUT_CLASSIFICATION	1.3353965523300982E-5	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999866460344767	WITHOUT_CLASSIFICATION	1.3353965523300982E-5	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999532649920567	WITHOUT_CLASSIFICATION	4.673500794323848E-5	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999711651448018	WITHOUT_CLASSIFICATION	2.8834855198212328E-5	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999711651448018	WITHOUT_CLASSIFICATION	2.8834855198212328E-5	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999711651448018	WITHOUT_CLASSIFICATION	2.8834855198212328E-5	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9998444202929379	WITHOUT_CLASSIFICATION	1.555797070621062E-4	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9998444202929379	WITHOUT_CLASSIFICATION	1.555797070621062E-4	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9998444202929379	WITHOUT_CLASSIFICATION	1.555797070621062E-4	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.9999007463694879	WITHOUT_CLASSIFICATION	9.925363051201453E-5	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.9999007463694879	WITHOUT_CLASSIFICATION	9.925363051201453E-5	IMPLEMENTATION
// lax (str.to_f) allows underscores between e/E and sign	WITHOUT_CLASSIFICATION	0.9999695256327829	WITHOUT_CLASSIFICATION	3.047436721707535E-5	IMPLEMENTATION
// switch // for // no exponent, so drop through for calculation	WITHOUT_CLASSIFICATION	0.9999983350802621	WITHOUT_CLASSIFICATION	1.6649197377589354E-6	IMPLEMENTATION
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9996103214355367	WITHOUT_CLASSIFICATION	3.8967856446327475E-4	IMPLEMENTATION
// TODO: it's not clear to me why, in FloatingDecimal, the // "slop" calculation performed above for positive exponents // isn't used for negative exponents as well. Will find out...	WITHOUT_CLASSIFICATION	0.5872373868364805	IMPLEMENTATION	0.41276261316351937	WITHOUT_CLASSIFICATION
// no digits, error	WITHOUT_CLASSIFICATION	0.9993428956940442	WITHOUT_CLASSIFICATION	6.571043059557834E-4	IMPLEMENTATION
// too big for us	WITHOUT_CLASSIFICATION	0.9998412508619356	WITHOUT_CLASSIFICATION	1.5874913806423162E-4	IMPLEMENTATION
// too big for us	WITHOUT_CLASSIFICATION	0.9998412508619356	WITHOUT_CLASSIFICATION	1.5874913806423162E-4	IMPLEMENTATION
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999627876098854	WITHOUT_CLASSIFICATION	3.721239011459539E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999696503844563	WITHOUT_CLASSIFICATION	3.034961554371392E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999696503844563	WITHOUT_CLASSIFICATION	3.034961554371392E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999696503844563	WITHOUT_CLASSIFICATION	3.034961554371392E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999696503844563	WITHOUT_CLASSIFICATION	3.034961554371392E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999696503844563	WITHOUT_CLASSIFICATION	3.034961554371392E-5	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999928443186183	WITHOUT_CLASSIFICATION	7.155681381676269E-6	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999928443186183	WITHOUT_CLASSIFICATION	7.155681381676269E-6	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999928443186183	WITHOUT_CLASSIFICATION	7.155681381676269E-6	IMPLEMENTATION
// first char must be digit	WITHOUT_CLASSIFICATION	0.9999790426003153	WITHOUT_CLASSIFICATION	2.095739968457119E-5	IMPLEMENTATION
// no dec digits after '.', error for strict	WITHOUT_CLASSIFICATION	0.9999643645494206	WITHOUT_CLASSIFICATION	3.5635450579473574E-5	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999532649920567	WITHOUT_CLASSIFICATION	4.673500794323848E-5	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9998444202929379	WITHOUT_CLASSIFICATION	1.555797070621062E-4	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9998444202929379	WITHOUT_CLASSIFICATION	1.555797070621062E-4	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999696503844563	WITHOUT_CLASSIFICATION	3.034961554371392E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999696503844563	WITHOUT_CLASSIFICATION	3.034961554371392E-5	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999928443186183	WITHOUT_CLASSIFICATION	7.155681381676269E-6	IMPLEMENTATION
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999627876098854	WITHOUT_CLASSIFICATION	3.721239011459539E-5	IMPLEMENTATION
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9997279750923341	WITHOUT_CLASSIFICATION	2.7202490766587567E-4	IMPLEMENTATION
// switch //while	WITHOUT_CLASSIFICATION	0.9997266601566639	WITHOUT_CLASSIFICATION	2.733398433361145E-4	IMPLEMENTATION
/*     * All the positive powers of 10 that can be     * represented exactly in double/float.     * (From sun.misc.FloatingDecimal.java)     */	WITHOUT_CLASSIFICATION	0.9999998193390737	WITHOUT_CLASSIFICATION	1.806609262481724E-7	IMPLEMENTATION
// Zlib behavior: negative win_bits means no header and no checksum.	WITHOUT_CLASSIFICATION	0.9999789726317225	WITHOUT_CLASSIFICATION	2.1027368277408698E-5	IMPLEMENTATION
// rb_enc_mbclen	WITHOUT_CLASSIFICATION	0.9996612927501303	WITHOUT_CLASSIFICATION	3.3870724986971226E-4	IMPLEMENTATION
// rb_enc_precise_mbclen	WITHOUT_CLASSIFICATION	0.9999441559003632	WITHOUT_CLASSIFICATION	5.5844099636791055E-5	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9989628882782657	WITHOUT_CLASSIFICATION	0.0010371117217341985	IMPLEMENTATION
// arg cannot be negative	WITHOUT_CLASSIFICATION	0.9999521284813785	WITHOUT_CLASSIFICATION	4.787151862158401E-5	IMPLEMENTATION
// NoFunctionalitySignalFacade	WITHOUT_CLASSIFICATION	0.9999441559003632	WITHOUT_CLASSIFICATION	5.5844099636791055E-5	IMPLEMENTATION
// Change visibility so others can see it	WITHOUT_CLASSIFICATION	0.9999848711531822	WITHOUT_CLASSIFICATION	1.512884681766343E-5	IMPLEMENTATION
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9895302531532875	WITHOUT_CLASSIFICATION	0.010469746846712629	IMPLEMENTATION
// strip off "_dot_rb" for .rb files	WITHOUT_CLASSIFICATION	0.9999929062967043	WITHOUT_CLASSIFICATION	7.093703295719048E-6	IMPLEMENTATION
// Makes sure the key is not already in the hashtable.	WITHOUT_CLASSIFICATION	0.9999532479018328	WITHOUT_CLASSIFICATION	4.6752098167258775E-5	IMPLEMENTATION
// Rehash the table if the threshold is exceeded	WITHOUT_CLASSIFICATION	0.9999836897400307	WITHOUT_CLASSIFICATION	1.6310259969202874E-5	IMPLEMENTATION
// Creates the new entry.	WITHOUT_CLASSIFICATION	0.9999370862081487	WITHOUT_CLASSIFICATION	6.291379185129189E-5	IMPLEMENTATION
// next entry to return // current slot // current entry	WITHOUT_CLASSIFICATION	0.999615806591125	WITHOUT_CLASSIFICATION	3.841934088749671E-4	IMPLEMENTATION
// advance to first entry	WITHOUT_CLASSIFICATION	0.9999667362132383	WITHOUT_CLASSIFICATION	3.3263786761819156E-5	IMPLEMENTATION
// The reason why we need the stream is to be able to invoke available() on it. // STDIN in Java is non-interruptible, non-selectable, and attempt to read // on such stream might lead to thread being blocked without *any* way to unblock it. // That's where available() comes it, so at least we could check whether // anything is available to be read without blocking.	WITHOUT_CLASSIFICATION	0.9999545061288602	WITHOUT_CLASSIFICATION	4.549387113988326E-5	IMPLEMENTATION
/*package-protected*/	WITHOUT_CLASSIFICATION	0.9998286659029623	WITHOUT_CLASSIFICATION	1.7133409703781356E-4	IMPLEMENTATION
// raw file URL, just open directly	WITHOUT_CLASSIFICATION	0.9999887694983813	WITHOUT_CLASSIFICATION	1.1230501618691569E-5	IMPLEMENTATION
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999928416129295	WITHOUT_CLASSIFICATION	7.1583870705076275E-6	IMPLEMENTATION
// if refcount is at or below zero, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999992135813313	WITHOUT_CLASSIFICATION	7.864186687900545E-7	IMPLEMENTATION
// if channel is already closed, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999983992728538	WITHOUT_CLASSIFICATION	1.600727146138139E-6	IMPLEMENTATION
// otherwise decrement and possibly close as normal	WITHOUT_CLASSIFICATION	0.999929702595717	WITHOUT_CLASSIFICATION	7.029740428297002E-5	IMPLEMENTATION
// r/w buffer // are we reading or writing?	WITHOUT_CLASSIFICATION	0.9999870161960244	WITHOUT_CLASSIFICATION	1.2983803975691693E-5	IMPLEMENTATION
// this constructor is used by fdopen, so we don't increment descriptor ref count	WITHOUT_CLASSIFICATION	0.9999530409696863	WITHOUT_CLASSIFICATION	4.695903031381735E-5	IMPLEMENTATION
// unread back	WITHOUT_CLASSIFICATION	0.9994413993566419	WITHOUT_CLASSIFICATION	5.586006433581384E-4	IMPLEMENTATION
// iterate over remainder of buffer until we find a match	WITHOUT_CLASSIFICATION	0.9999972868113277	WITHOUT_CLASSIFICATION	2.7131886722899607E-6	IMPLEMENTATION
// terminate and advance buffer when we find our char	WITHOUT_CLASSIFICATION	0.9999953238071597	WITHOUT_CLASSIFICATION	4.676192840222055E-6	IMPLEMENTATION
// no match, append remainder of buffer and continue with next block	WITHOUT_CLASSIFICATION	0.9997429617200193	WITHOUT_CLASSIFICATION	2.57038279980731E-4	IMPLEMENTATION
// found a match above, check if remaining separator characters match, appending as we go	WITHOUT_CLASSIFICATION	0.9999982588921005	WITHOUT_CLASSIFICATION	1.7411078996345358E-6	IMPLEMENTATION
// // Check file size - special files in /proc have zero size and need to be // handled by the generic read path. //	WITHOUT_CLASSIFICATION	0.9999964093665491	WITHOUT_CLASSIFICATION	3.590633450840956E-6	IMPLEMENTATION
// // Copy any buffered data (including ungetc byte) //	WITHOUT_CLASSIFICATION	0.9999922277512039	WITHOUT_CLASSIFICATION	7.772248796084521E-6	IMPLEMENTATION
// // Now read unbuffered directly from the file //	WITHOUT_CLASSIFICATION	0.9999943698717558	WITHOUT_CLASSIFICATION	5.6301282441275344E-6	IMPLEMENTATION
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9997279750923341	WITHOUT_CLASSIFICATION	2.7202490766587567E-4	IMPLEMENTATION
// // Need to clamp source (buffer) size to avoid overrun //	WITHOUT_CLASSIFICATION	0.9997261957645229	WITHOUT_CLASSIFICATION	2.738042354770586E-4	IMPLEMENTATION
// not closing from finalize	WITHOUT_CLASSIFICATION	0.9997201134366179	WITHOUT_CLASSIFICATION	2.7988656338209073E-4	IMPLEMENTATION
// clear runtime so it doesn't get stuck in memory (JRUBY-2933)	WITHOUT_CLASSIFICATION	0.9999992725140047	WITHOUT_CLASSIFICATION	7.274859954292936E-7	IMPLEMENTATION
// silence	WITHOUT_CLASSIFICATION	0.9999901088813848	WITHOUT_CLASSIFICATION	9.891118615195496E-6	IMPLEMENTATION
// silence	WITHOUT_CLASSIFICATION	0.9999901088813848	WITHOUT_CLASSIFICATION	9.891118615195496E-6	IMPLEMENTATION
// Don't bother	WITHOUT_CLASSIFICATION	0.9984103912753753	WITHOUT_CLASSIFICATION	0.0015896087246247712	IMPLEMENTATION
// Don't bother	WITHOUT_CLASSIFICATION	0.9984103912753753	WITHOUT_CLASSIFICATION	0.0015896087246247712	IMPLEMENTATION
// For Sockets, only write as much as will fit.	WITHOUT_CLASSIFICATION	0.9999978577484938	WITHOUT_CLASSIFICATION	2.142251506093003E-6	IMPLEMENTATION
// Correct position for read / write buffering (we could invalidate, but expensive)	WITHOUT_CLASSIFICATION	0.9999976747869842	WITHOUT_CLASSIFICATION	2.325213015878426E-6	IMPLEMENTATION
// Adjust for buffered data	WITHOUT_CLASSIFICATION	0.999994957368371	WITHOUT_CLASSIFICATION	5.042631629029686E-6	IMPLEMENTATION
// for SEEK_CUR, need to adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999486655371699	WITHOUT_CLASSIFICATION	5.133446283006479E-5	IMPLEMENTATION
// libc flushes writes on any read from the actual file, so we flush here	WITHOUT_CLASSIFICATION	0.9999868026090059	WITHOUT_CLASSIFICATION	1.3197390994145095E-5	IMPLEMENTATION
// we have read ahead, and need to back up	WITHOUT_CLASSIFICATION	0.9997897020878921	WITHOUT_CLASSIFICATION	2.1029791210795679E-4	IMPLEMENTATION
// 128K seems to be the minimum at which the stat+seek is faster than reallocation	WITHOUT_CLASSIFICATION	0.9999966463036372	WITHOUT_CLASSIFICATION	3.3536963628643576E-6	IMPLEMENTATION
// // limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations //	WITHOUT_CLASSIFICATION	0.9999720029498205	WITHOUT_CLASSIFICATION	2.799705017947185E-5	IMPLEMENTATION
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9996624009591437	WITHOUT_CLASSIFICATION	3.3759904085618655E-4	IMPLEMENTATION
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999845738551185	WITHOUT_CLASSIFICATION	1.5426144881493966E-5	IMPLEMENTATION
// // Avoid double-copying for reads that are larger than the buffer size //	WITHOUT_CLASSIFICATION	0.9999947113001425	WITHOUT_CLASSIFICATION	5.288699857386662E-6	IMPLEMENTATION
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999926580251127	WITHOUT_CLASSIFICATION	7.3419748872015035E-6	IMPLEMENTATION
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999926580251127	WITHOUT_CLASSIFICATION	7.3419748872015035E-6	IMPLEMENTATION
// // Avoid double-copying for reads that are larger than the buffer size, or // the destination is a direct buffer. //	WITHOUT_CLASSIFICATION	0.9999924748665535	WITHOUT_CLASSIFICATION	7.525133446504585E-6	IMPLEMENTATION
// // We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating // a huge temporary native buffer, when doing reads into a heap buffer // If the dst buffer is direct, then no need to limit. //	WITHOUT_CLASSIFICATION	0.9999977556031695	WITHOUT_CLASSIFICATION	2.244396830410486E-6	IMPLEMENTATION
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.999973763700443	WITHOUT_CLASSIFICATION	2.623629955699524E-5	IMPLEMENTATION
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.999973763700443	WITHOUT_CLASSIFICATION	2.623629955699524E-5	IMPLEMENTATION
// Doesn't fit in buffer. Write immediately. // ensure nothing left to write	WITHOUT_CLASSIFICATION	0.9999996319729126	WITHOUT_CLASSIFICATION	3.6802708739867603E-7	IMPLEMENTATION
// truncate can't lengthen files, so we save position, seek/write, and go back	WITHOUT_CLASSIFICATION	0.9999703892546223	WITHOUT_CLASSIFICATION	2.961074537770336E-5	IMPLEMENTATION
// how far ahead we are when reading	WITHOUT_CLASSIFICATION	0.9997580198784081	WITHOUT_CLASSIFICATION	2.4198012159180738E-4	IMPLEMENTATION
// if the read buffer is ahead, back up	WITHOUT_CLASSIFICATION	0.9999982307154968	WITHOUT_CLASSIFICATION	1.7692845032007338E-6	IMPLEMENTATION
// close without removing from finalizers	WITHOUT_CLASSIFICATION	0.9999955430335672	WITHOUT_CLASSIFICATION	4.4569664328247E-6	IMPLEMENTATION
// putting a bit back, so we're not at EOF anymore	WITHOUT_CLASSIFICATION	0.9999920706129101	WITHOUT_CLASSIFICATION	7.929387089940047E-6	IMPLEMENTATION
// save the ungot	WITHOUT_CLASSIFICATION	0.999814911795161	WITHOUT_CLASSIFICATION	1.850882048390669E-4	IMPLEMENTATION
// otherwise, we try an unbuffered read to get whatever's available	WITHOUT_CLASSIFICATION	0.9999915374657944	WITHOUT_CLASSIFICATION	8.462534205705253E-6	IMPLEMENTATION
// ignore this; select() will set the correct mode when it is finished	WITHOUT_CLASSIFICATION	0.9999968930877946	WITHOUT_CLASSIFICATION	3.1069122054626786E-6	IMPLEMENTATION
// flush first	WITHOUT_CLASSIFICATION	0.9998479675952678	WITHOUT_CLASSIFICATION	1.520324047321152E-4	IMPLEMENTATION
// // Wake up any channels that became unblocked //	WITHOUT_CLASSIFICATION	0.9999557155304722	WITHOUT_CLASSIFICATION	4.4284469527771336E-5	IMPLEMENTATION
// // Register any new blocking I/O requests //	WITHOUT_CLASSIFICATION	0.9995712346459183	WITHOUT_CLASSIFICATION	4.2876535408162405E-4	IMPLEMENTATION
// Now clear out any previously selected channels	WITHOUT_CLASSIFICATION	0.9999849079057969	WITHOUT_CLASSIFICATION	1.5092094203109654E-5	IMPLEMENTATION
// // Wait for I/O on any channel //	WITHOUT_CLASSIFICATION	0.9999548552079794	WITHOUT_CLASSIFICATION	4.514479202060774E-5	IMPLEMENTATION
// Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'	WITHOUT_CLASSIFICATION	0.9999934390595374	WITHOUT_CLASSIFICATION	6.56094046264334E-6	IMPLEMENTATION
// Java requires "w" for creating a file that does not exist	WITHOUT_CLASSIFICATION	0.9999183650553247	WITHOUT_CLASSIFICATION	8.163494467517314E-5	IMPLEMENTATION
// seek to force underlying buffer to flush	WITHOUT_CLASSIFICATION	0.9999679868982714	WITHOUT_CLASSIFICATION	3.201310172858013E-5	IMPLEMENTATION
// seek to force read buffer to invalidate	WITHOUT_CLASSIFICATION	0.9999743292384082	WITHOUT_CLASSIFICATION	2.5670761591769887E-5	IMPLEMENTATION
/*        result = eval("arr = Array::['c', 200]; p arr");        assertEquals("[\"c\", 200]", result);        result = eval("arr = Array.['d', 200]; p arr");        assertEquals("[\"d\", 200]", result);        */	WITHOUT_CLASSIFICATION	0.9999741168449394	WITHOUT_CLASSIFICATION	2.5883155060536764E-5	IMPLEMENTATION
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999345573528463	WITHOUT_CLASSIFICATION	6.544264715370468E-5	IMPLEMENTATION
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.8267518199033266	IMPLEMENTATION	0.1732481800966733	WITHOUT_CLASSIFICATION
// make sure the pipe stream is set to null	WITHOUT_CLASSIFICATION	0.999967982888732	WITHOUT_CLASSIFICATION	3.2017111267967125E-5	IMPLEMENTATION
// make sure the main stream is set to null	WITHOUT_CLASSIFICATION	0.9999237585949471	WITHOUT_CLASSIFICATION	7.624140505298585E-5	IMPLEMENTATION
// first try our custom-generated Unsafe	WITHOUT_CLASSIFICATION	0.9999795813040409	WITHOUT_CLASSIFICATION	2.0418695959113415E-5	IMPLEMENTATION
// then try Sun's Unsafe	WITHOUT_CLASSIFICATION	0.9999783378298213	WITHOUT_CLASSIFICATION	2.1662170178638996E-5	IMPLEMENTATION
// if we get here, the class and field exist; construct our Unsafe impl // that calls it directly	WITHOUT_CLASSIFICATION	0.999996799213094	WITHOUT_CLASSIFICATION	3.2007869060158984E-6	IMPLEMENTATION
// else leave it null	WITHOUT_CLASSIFICATION	0.9999352569412601	WITHOUT_CLASSIFICATION	6.474305873992914E-5	IMPLEMENTATION
// TypeMatcher	WITHOUT_CLASSIFICATION	0.9996612927501303	WITHOUT_CLASSIFICATION	3.3870724986971226E-4	IMPLEMENTATION
// This is now needed, since module Java // isn't in by default	WITHOUT_CLASSIFICATION	0.9999999638891015	WITHOUT_CLASSIFICATION	3.611089840618944E-8	IMPLEMENTATION
// Iterate over the RubyHash keySet, simultaneously iterating over the values()	WITHOUT_CLASSIFICATION	0.9999369802404873	WITHOUT_CLASSIFICATION	6.301975951266938E-5	IMPLEMENTATION
// Get the value from the map via the key	WITHOUT_CLASSIFICATION	0.9999981390490471	WITHOUT_CLASSIFICATION	1.8609509529079528E-6	IMPLEMENTATION
// Get the value from the map via the values iterator	WITHOUT_CLASSIFICATION	0.9999998988092559	WITHOUT_CLASSIFICATION	1.0119074413957208E-7	IMPLEMENTATION
// Check the 2 values obtained via different means	WITHOUT_CLASSIFICATION	0.9999992758282282	WITHOUT_CLASSIFICATION	7.241717716462065E-7	IMPLEMENTATION
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999982463355427	WITHOUT_CLASSIFICATION	1.7536644574317166E-6	IMPLEMENTATION
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999982463355427	WITHOUT_CLASSIFICATION	1.7536644574317166E-6	IMPLEMENTATION
// Check the entry.setValue values come back out ok	WITHOUT_CLASSIFICATION	0.9999309503034647	WITHOUT_CLASSIFICATION	6.904969653534711E-5	IMPLEMENTATION
// If we're running from within an IDE we may not have // the .rb files in our classpath. Try to find them // in the filesystem instead.	WITHOUT_CLASSIFICATION	0.9999878291899024	WITHOUT_CLASSIFICATION	1.2170810097641672E-5	IMPLEMENTATION
//assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); //assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));	WITHOUT_CLASSIFICATION	0.9992275877243985	WITHOUT_CLASSIFICATION	7.724122756014363E-4	IMPLEMENTATION
// Init	WITHOUT_CLASSIFICATION	0.9999903238030415	WITHOUT_CLASSIFICATION	9.676196958525966E-6	IMPLEMENTATION
// Block	WITHOUT_CLASSIFICATION	0.9999901135655928	WITHOUT_CLASSIFICATION	9.886434407178069E-6	IMPLEMENTATION
// Copy constructor	WITHOUT_CLASSIFICATION	0.9994953709308368	WITHOUT_CLASSIFICATION	5.046290691632044E-4	IMPLEMENTATION
// presumably this require should fail	WITHOUT_CLASSIFICATION	0.9985059830973307	WITHOUT_CLASSIFICATION	0.0014940169026693754	IMPLEMENTATION
// JRUBY-646 // presumably this require should fail	WITHOUT_CLASSIFICATION	0.9985059830973307	WITHOUT_CLASSIFICATION	0.0014940169026693754	IMPLEMENTATION
// Test that requiring a normal Java class raises an error (JRUBY-3214	WITHOUT_CLASSIFICATION	0.9999894171651164	WITHOUT_CLASSIFICATION	1.0582834883686371E-5	IMPLEMENTATION
// ok	WITHOUT_CLASSIFICATION	0.9999710878780244	WITHOUT_CLASSIFICATION	2.891212197563315E-5	IMPLEMENTATION
// Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods // from Ruby so they are not really unused).	WITHOUT_CLASSIFICATION	0.9999993169629688	WITHOUT_CLASSIFICATION	6.830370310971376E-7	IMPLEMENTATION
//load should work several times in a row	WITHOUT_CLASSIFICATION	0.9999722767345767	WITHOUT_CLASSIFICATION	2.7723265423310113E-5	IMPLEMENTATION
//reset the $loadTestvar	WITHOUT_CLASSIFICATION	0.9998497467399177	WITHOUT_CLASSIFICATION	1.5025326008235004E-4	IMPLEMENTATION
//call throwException via JRuby	WITHOUT_CLASSIFICATION	0.9997534361076446	WITHOUT_CLASSIFICATION	2.4656389235546127E-4	IMPLEMENTATION
// Notify the calling thread that we're about to go to sleep the first time	WITHOUT_CLASSIFICATION	0.9999972825315473	WITHOUT_CLASSIFICATION	2.717468452641854E-6	IMPLEMENTATION
// wait for the go signal	WITHOUT_CLASSIFICATION	0.9999837379282605	WITHOUT_CLASSIFICATION	1.626207173961665E-5	IMPLEMENTATION
// run ten separate calls into Ruby, with delay and explicit GC	WITHOUT_CLASSIFICATION	0.9999810572921365	WITHOUT_CLASSIFICATION	1.8942707863458217E-5	IMPLEMENTATION
// wait until thread has initialized	WITHOUT_CLASSIFICATION	0.9999926040173445	WITHOUT_CLASSIFICATION	7.395982655536608E-6	IMPLEMENTATION
// notify thread to proceed	WITHOUT_CLASSIFICATION	0.9999382303681648	WITHOUT_CLASSIFICATION	6.176963183520073E-5	IMPLEMENTATION
// wait until thread has completed	WITHOUT_CLASSIFICATION	0.9999880528652899	WITHOUT_CLASSIFICATION	1.1947134710107728E-5	IMPLEMENTATION
// we do preand post load outside the "body" versions to pre-prepare // and pre-push the dynamic scope we need for lastline	WITHOUT_CLASSIFICATION	0.999949869729653	WITHOUT_CLASSIFICATION	5.013027034704563E-5	IMPLEMENTATION
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999994008944485	WITHOUT_CLASSIFICATION	5.991055515577037E-7	IMPLEMENTATION
// MRI behavior: raise ArgumentError for 'unknown command' before // checking number of args.	WITHOUT_CLASSIFICATION	0.9997962296421622	WITHOUT_CLASSIFICATION	2.0377035783765782E-4	IMPLEMENTATION
// if any exceptions were raised, we fail	WITHOUT_CLASSIFICATION	0.9995383159736672	WITHOUT_CLASSIFICATION	4.616840263328844E-4	IMPLEMENTATION
// there should only be one more thread in thread group than before we started	WITHOUT_CLASSIFICATION	0.9997961782198239	WITHOUT_CLASSIFICATION	2.0382178017614344E-4	IMPLEMENTATION
// construct a new cache with thread's classloader and no limit	WITHOUT_CLASSIFICATION	0.9995379849106069	WITHOUT_CLASSIFICATION	4.620150893931245E-4	IMPLEMENTATION
//        Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); //        Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();	WITHOUT_CLASSIFICATION	0.9998954695422121	WITHOUT_CLASSIFICATION	1.0453045778786125E-4	IMPLEMENTATION
//        assertSame(script1, script2);	WITHOUT_CLASSIFICATION	0.999909015173615	WITHOUT_CLASSIFICATION	9.098482638499437E-5	IMPLEMENTATION
// void methods should work	WITHOUT_CLASSIFICATION	0.9999091110914395	WITHOUT_CLASSIFICATION	9.088890856043467E-5	IMPLEMENTATION
// methods with required = 4 or higher should bind and be callable using reflection // JRUBY-3649	WITHOUT_CLASSIFICATION	0.9995795102401887	WITHOUT_CLASSIFICATION	4.2048975981133935E-4	IMPLEMENTATION
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999756585325966	WITHOUT_CLASSIFICATION	2.434146740336014E-5	IMPLEMENTATION
// Ensure we have a new interpreter for each test. Previous we were using the //  same interpreter which caused problems as soon as one test failed.	WITHOUT_CLASSIFICATION	0.9999985670906248	WITHOUT_CLASSIFICATION	1.4329093750986142E-6	IMPLEMENTATION
// Without a flush Ant will miss some of our output	WITHOUT_CLASSIFICATION	0.9999973402969254	WITHOUT_CLASSIFICATION	2.659703074580515E-6	IMPLEMENTATION
// assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());	WITHOUT_CLASSIFICATION	0.9999105212360142	WITHOUT_CLASSIFICATION	8.947876398585319E-5	IMPLEMENTATION
//        int n = 10;	WITHOUT_CLASSIFICATION	0.9999696052051087	WITHOUT_CLASSIFICATION	3.039479489122975E-5	IMPLEMENTATION
// there might be more test classes in a single file, so we iterate over them	WITHOUT_CLASSIFICATION	0.9999989448183407	WITHOUT_CLASSIFICATION	1.0551816593114942E-6	IMPLEMENTATION
//No ClassCastException!	WITHOUT_CLASSIFICATION	0.9998371885040555	WITHOUT_CLASSIFICATION	1.6281149594460405E-4	IMPLEMENTATION
// value equality	WITHOUT_CLASSIFICATION	0.999909515038536	WITHOUT_CLASSIFICATION	9.048496146399846E-5	IMPLEMENTATION
// identity equality	WITHOUT_CLASSIFICATION	0.9985557553734709	WITHOUT_CLASSIFICATION	0.0014442446265291236	IMPLEMENTATION
// bench straight-up integer fib(30)	WITHOUT_CLASSIFICATION	0.9999117740641708	WITHOUT_CLASSIFICATION	8.822593582927605E-5	IMPLEMENTATION
// bench Integer fib	WITHOUT_CLASSIFICATION	0.999663567102277	WITHOUT_CLASSIFICATION	3.364328977230601E-4	IMPLEMENTATION
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999441559003632	WITHOUT_CLASSIFICATION	5.5844099636791055E-5	IMPLEMENTATION
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999441559003632	WITHOUT_CLASSIFICATION	5.5844099636791055E-5	IMPLEMENTATION
// bench fixnum-boxed fib	WITHOUT_CLASSIFICATION	0.9999441559003632	WITHOUT_CLASSIFICATION	5.5844099636791055E-5	IMPLEMENTATION
// bench straight-up long fib(30)	WITHOUT_CLASSIFICATION	0.9999352221435874	WITHOUT_CLASSIFICATION	6.477785641254557E-5	IMPLEMENTATION
// bench Long fib	WITHOUT_CLASSIFICATION	0.9996672092033582	WITHOUT_CLASSIFICATION	3.327907966418199E-4	IMPLEMENTATION
// skip this one, probably no 'ls' (windows)	WITHOUT_CLASSIFICATION	0.9998098159647117	WITHOUT_CLASSIFICATION	1.9018403528826751E-4	IMPLEMENTATION
// start off with a neutral parent	WITHOUT_CLASSIFICATION	0.9999884520430291	WITHOUT_CLASSIFICATION	1.154795697081653E-5	IMPLEMENTATION
/*            public class Hello {                public static String getMessage() {                    return ".....";                }            }            */	WITHOUT_CLASSIFICATION	0.9999962303180187	WITHOUT_CLASSIFICATION	3.7696819812817294E-6	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999828750039442	WITHOUT_CLASSIFICATION	1.712499605583419E-5	IMPLEMENTATION
// Note: We can't use file.exists() to check whether the symlink // exists or not, because that method returns false for existing // but broken symlink. So, we try without the existence check, // but in the try-catch block. // MRI behavior: symlink? on broken symlink should return true.	WITHOUT_CLASSIFICATION	0.9999998061088634	WITHOUT_CLASSIFICATION	1.9389113657861754E-7	IMPLEMENTATION
// We are creating a new IO object that shares the same // IOHandler (and fileno).	WITHOUT_CLASSIFICATION	0.9999982561050219	WITHOUT_CLASSIFICATION	1.7438949780461054E-6	IMPLEMENTATION
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999978664727568	WITHOUT_CLASSIFICATION	2.133527243251789E-6	IMPLEMENTATION
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9997254911986895	WITHOUT_CLASSIFICATION	2.7450880131056003E-4	IMPLEMENTATION
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9998930111995182	WITHOUT_CLASSIFICATION	1.0698880048179051E-4	IMPLEMENTATION
// Translate "x || y" --> "x = (is_true(x) ? x : y)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, true, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9996278875221171	WITHOUT_CLASSIFICATION	3.721124778828467E-4	IMPLEMENTATION
// // Force the client socket to be blocking //	WITHOUT_CLASSIFICATION	0.9999695483624951	WITHOUT_CLASSIFICATION	3.0451637504963228E-5	IMPLEMENTATION
// Additional context surrounding tokens that both the lexer and // grammar use.	WITHOUT_CLASSIFICATION	0.9999555043196395	WITHOUT_CLASSIFICATION	4.4495680360423964E-5	IMPLEMENTATION
// Enebo:  c can never be antrhign but '.' // Why did I put this here?	WITHOUT_CLASSIFICATION	0.9433007797826014	WITHOUT_CLASSIFICATION	0.05669922021739862	IMPLEMENTATION
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9994218689283707	WITHOUT_CLASSIFICATION	5.78131071629254E-4	IMPLEMENTATION
//[C,C] //[C, boolean]	WITHOUT_CLASSIFICATION	0.9998286659029623	WITHOUT_CLASSIFICATION	1.7133409703781356E-4	IMPLEMENTATION
// Label for the start of the closure (used to implement redo) // Label for the end of the closure (used to implement retry)	WITHOUT_CLASSIFICATION	0.9976567305802334	WITHOUT_CLASSIFICATION	0.002343269419766692	IMPLEMENTATION
// ignore; job was cancelled // FIXME: is this ok?	WITHOUT_CLASSIFICATION	0.9922685746597557	WITHOUT_CLASSIFICATION	0.007731425340244365	IMPLEMENTATION
//                    // check arity //                    checkArity(mv, scope);	WITHOUT_CLASSIFICATION	0.9998143634845812	WITHOUT_CLASSIFICATION	1.8563651541874003E-4	IMPLEMENTATION
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9998745954346185	WITHOUT_CLASSIFICATION	1.2540456538137593E-4	IMPLEMENTATION
// we take the first method found as our "n" method, since for any non-specific // arity they'll all error the same. If an actual "n" method is created, we // use that.	WITHOUT_CLASSIFICATION	0.9999994924624764	WITHOUT_CLASSIFICATION	5.075375236356748E-7	IMPLEMENTATION
// Used by our duck-typification of Proc into interface types, to allow // coercing a simple proc into an interface parameter.	WITHOUT_CLASSIFICATION	0.999999397949423	WITHOUT_CLASSIFICATION	6.020505769418915E-7	IMPLEMENTATION
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999960067437428	WITHOUT_CLASSIFICATION	3.993256257251996E-6	IMPLEMENTATION
// it's either as converted as we can make it via above logic or it's // not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9878358124614838	WITHOUT_CLASSIFICATION	0.012164187538516131	IMPLEMENTATION
// package scheme 2: separate module for each full package name, constructed  // from the camel-cased package segments: Java::JavaLang::Object, 	WITHOUT_CLASSIFICATION	0.9999898779153557	WITHOUT_CLASSIFICATION	1.0122084644358294E-5	IMPLEMENTATION
// // construct the proxy method //	WITHOUT_CLASSIFICATION	0.9999140726372904	WITHOUT_CLASSIFICATION	8.592736270967503E-5	IMPLEMENTATION
// line 159 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9998800984666611	WITHOUT_CLASSIFICATION	1.1990153333877488E-4	IMPLEMENTATION
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999845336365134	WITHOUT_CLASSIFICATION	1.5466363486576627E-5	IMPLEMENTATION
// line 152 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9998800984666611	WITHOUT_CLASSIFICATION	1.1990153333877488E-4	IMPLEMENTATION
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999978931839825	WITHOUT_CLASSIFICATION	2.106816017494753E-6	IMPLEMENTATION
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999845336365134	WITHOUT_CLASSIFICATION	1.5466363486576627E-5	IMPLEMENTATION
// We only need to pass in current scope if we are evaluating as a block (which // is only done for evals).  We need to pass this in so that we can appropriately scope // down to captured scopes when we are parsing.	WITHOUT_CLASSIFICATION	0.9999992935201052	WITHOUT_CLASSIFICATION	7.064798948312702E-7	IMPLEMENTATION
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999991565176326	WITHOUT_CLASSIFICATION	8.43482367428359E-7	IMPLEMENTATION
// A place to store that special hiding space that bindings need to implement things like: // eval("a = 1", binding); eval("p a").  All binding instances must get access to this // hidden shared scope.  We store it here.  This will be null if no binding has yet // been called.	WITHOUT_CLASSIFICATION	0.6205597195907332	WITHOUT_CLASSIFICATION	0.37944028040926686	IMPLEMENTATION
// TODO: make it 16 now ? // MUST be power of 2!	WITHOUT_CLASSIFICATION	0.5750898667286606	WITHOUT_CLASSIFICATION	0.4249101332713394	IMPLEMENTATION
// check visibility // dup method	WITHOUT_CLASSIFICATION	0.9997179039859444	WITHOUT_CLASSIFICATION	2.8209601405562886E-4	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9976232104938855	WITHOUT_CLASSIFICATION	0.0023767895061144024	IMPLEMENTATION
// unsigned int, native // unsigned long, native	WITHOUT_CLASSIFICATION	0.9997787732362273	WITHOUT_CLASSIFICATION	2.212267637725959E-4	IMPLEMENTATION
//need padding //I'm fairly sure there is a library call to create a //string filled with a given char with a given length but I couldn't find it	WITHOUT_CLASSIFICATION	0.9999168881939254	WITHOUT_CLASSIFICATION	8.311180607458932E-5	IMPLEMENTATION
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999948123972505	WITHOUT_CLASSIFICATION	5.18760274949889E-6	IMPLEMENTATION
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999345573528463	WITHOUT_CLASSIFICATION	6.544264715370468E-5	IMPLEMENTATION
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9996103214355367	WITHOUT_CLASSIFICATION	3.8967856446327475E-4	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9978676436354982	WITHOUT_CLASSIFICATION	0.0021323563645017224	IMPLEMENTATION
// Estimate the square root with the foremost 62 bits of squarD // bi and scale are a tandem	WITHOUT_CLASSIFICATION	0.9999895234984079	WITHOUT_CLASSIFICATION	1.0476501592181835E-5	IMPLEMENTATION
// captures // begin and end are used when not groups defined // source string	WITHOUT_CLASSIFICATION	0.9999977612952206	WITHOUT_CLASSIFICATION	2.238704779536115E-6	IMPLEMENTATION
// // INSTANCE VARIABLE RUBY METHODS //	WITHOUT_CLASSIFICATION	0.9999111096310803	WITHOUT_CLASSIFICATION	8.889036891965701E-5	IMPLEMENTATION
// switch // while	WITHOUT_CLASSIFICATION	0.9998505000729158	WITHOUT_CLASSIFICATION	1.4949992708418472E-4	IMPLEMENTATION
// For nodes do not have their own scope so we pass null to indicate this. // 'For's are implemented as blocks in evaluation, but they have no scope so we // just deal with this lack of scope throughout its lifespan.  We should probably // change the way this works to get rid of multiple null checks.	WITHOUT_CLASSIFICATION	0.9997793950054662	WITHOUT_CLASSIFICATION	2.2060499453384764E-4	IMPLEMENTATION
// This field is used during argument processing to avoid putting RubyArray // instances that are purely for utility purposes into ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999995610139956	WITHOUT_CLASSIFICATION	4.389860045233023E-7	IMPLEMENTATION
// Parent container for this context (can be dynamic!!) // If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure // List of IR instructions for this method	WITHOUT_CLASSIFICATION	0.9999828359047512	WITHOUT_CLASSIFICATION	1.7164095248811507E-5	IMPLEMENTATION
// Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = false    //    beq(v1, false, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999984790044378	WITHOUT_CLASSIFICATION	1.5209955621406012E-6	IMPLEMENTATION
// expected	WITHOUT_CLASSIFICATION	0.9997844342669414	WITHOUT_CLASSIFICATION	2.1556573305851715E-4	IMPLEMENTATION
// Do nothing	WITHOUT_CLASSIFICATION	0.9998164289360145	WITHOUT_CLASSIFICATION	1.835710639855756E-4	IMPLEMENTATION
// constructor	WITHOUT_CLASSIFICATION	0.9994532680844397	WITHOUT_CLASSIFICATION	5.467319155602985E-4	IMPLEMENTATION
// If a line is followed by a blank line put // it back.	WITHOUT_CLASSIFICATION	0.9999792727650929	WITHOUT_CLASSIFICATION	2.0727234907159388E-5	IMPLEMENTATION
/* $>: default output handle */	WITHOUT_CLASSIFICATION	0.9999781019268106	WITHOUT_CLASSIFICATION	2.1898073189430895E-5	IMPLEMENTATION
// line 423	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 486	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// Signal uses sun.misc.* classes, this is not allowed // in the security-sensitive environments	WITHOUT_CLASSIFICATION	0.9998639368409975	WITHOUT_CLASSIFICATION	1.3606315900250283E-4	IMPLEMENTATION
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.999996728250196	WITHOUT_CLASSIFICATION	3.2717498040424044E-6	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9998974164142229	WITHOUT_CLASSIFICATION	1.0258358577709944E-4	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9998974164142229	WITHOUT_CLASSIFICATION	1.0258358577709944E-4	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999932022101715	WITHOUT_CLASSIFICATION	6.797789828443779E-6	IMPLEMENTATION
// if there's no receiver, evaluate and pass in the superclass, or // pass self if it no superclass	WITHOUT_CLASSIFICATION	0.999992352568199	WITHOUT_CLASSIFICATION	7.647431801143535E-6	IMPLEMENTATION
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.999733071817797	WITHOUT_CLASSIFICATION	2.6692818220294055E-4	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.8776240401284587	IMPLEMENTATION	0.12237595987154129	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.8776240401284587	IMPLEMENTATION	0.12237595987154129	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.8776240401284587	IMPLEMENTATION	0.12237595987154129	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.8776240401284587	IMPLEMENTATION	0.12237595987154129	WITHOUT_CLASSIFICATION
// Decrease value to hit upper range.  	WITHOUT_CLASSIFICATION	0.9999875107070065	WITHOUT_CLASSIFICATION	1.2489292993466633E-5	IMPLEMENTATION
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.999914035620613	WITHOUT_CLASSIFICATION	8.596437938701592E-5	IMPLEMENTATION
// "else" body	WITHOUT_CLASSIFICATION	0.9999382777984221	WITHOUT_CLASSIFICATION	6.172220157781611E-5	IMPLEMENTATION
// done // done // done // Nothing to do for 1.8 // done // done // done // done // done // done // done? // done // done // done // done // done // done // done // done // done // done // done //            case DEFINEDNODE: return buildDefined(node, m); // Incomplete // done // done // done // done // done // done // done // done //            case ENSURENODE: return buildEnsureNode(node, m); // DEFERRED // done // done // done // done //            case FLIPNODE: return buildFlip(node, m); // SSS FIXME: What code generates this AST? // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done? // done // done // done // done // done // done -- partially //            case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); // DEFERRED SSS FIXME: What code generates this AST? // done //            case POSTEXENODE: return buildPostExe(node, m); // DEFERRED //            case PREEXENODE: return buildPreExe(node, m); // DEFERRED // done?? // done	WITHOUT_CLASSIFICATION	0.9463592115451732	WITHOUT_CLASSIFICATION	0.053640788454826664	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9996612927501303	WITHOUT_CLASSIFICATION	3.3870724986971226E-4	IMPLEMENTATION
/* $+: string matches last paren. */	WITHOUT_CLASSIFICATION	0.9999998957636239	WITHOUT_CLASSIFICATION	1.0423637607966514E-7	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999975812347156	WITHOUT_CLASSIFICATION	2.4187652843497377E-6	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999975812347156	WITHOUT_CLASSIFICATION	2.4187652843497377E-6	IMPLEMENTATION
// Ruby code frequently uses a platform check to choose "NUL:" on windows // but since that check doesn't work well on JRuby, we help it out	WITHOUT_CLASSIFICATION	0.999999842522165	WITHOUT_CLASSIFICATION	1.5747783502329826E-7	IMPLEMENTATION
/* 10! */	WITHOUT_CLASSIFICATION	0.9999980676169425	WITHOUT_CLASSIFICATION	1.932383057429086E-6	IMPLEMENTATION
//            case RESCUENODE: return buildRescue(node, m); // DEFERRED //            case RETRYNODE: return buildRetry(node, m); // DEFERRED // done	WITHOUT_CLASSIFICATION	0.9999187321702555	WITHOUT_CLASSIFICATION	8.126782974456114E-5	IMPLEMENTATION
// Is this instruction live or dead?  During optimization passes, if this instruction // causes no side-effects and the result of the instruction is not needed by anyone else, // we can remove this instruction altogether without affecting program correctness.	WITHOUT_CLASSIFICATION	0.7724632651081409	WITHOUT_CLASSIFICATION	0.22753673489185902	IMPLEMENTATION
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999768838153489	WITHOUT_CLASSIFICATION	2.31161846511355E-5	IMPLEMENTATION
// first, iterate over all required args	WITHOUT_CLASSIFICATION	0.9999416716249501	WITHOUT_CLASSIFICATION	5.832837504988813E-5	IMPLEMENTATION
// // Determine if the parameter might be passed as a 32bit int parameter. // This just applies to buffer/pointer types. //	WITHOUT_CLASSIFICATION	0.9999990926575247	WITHOUT_CLASSIFICATION	9.073424752555765E-7	IMPLEMENTATION
//Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());	WITHOUT_CLASSIFICATION	0.999775292789999	WITHOUT_CLASSIFICATION	2.2470721000103345E-4	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999978931839825	WITHOUT_CLASSIFICATION	2.106816017494753E-6	IMPLEMENTATION
// line 449	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 495	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// Management/monitoring	WITHOUT_CLASSIFICATION	0.9999441559003632	WITHOUT_CLASSIFICATION	5.5844099636791055E-5	IMPLEMENTATION
// if we've found the last char of the separator, // and we've found at least as many characters as separator length, // and the last n characters of our buffer match the separator, we're done	WITHOUT_CLASSIFICATION	0.9999999813159605	WITHOUT_CLASSIFICATION	1.8684039574540426E-8	IMPLEMENTATION
/* 14! */	WITHOUT_CLASSIFICATION	0.9999980676169425	WITHOUT_CLASSIFICATION	1.932383057429086E-6	IMPLEMENTATION
// Process any set of annotations // No supported options	WITHOUT_CLASSIFICATION	0.9999985245464238	WITHOUT_CLASSIFICATION	1.4754535761637832E-6	IMPLEMENTATION
// add to the jitted methods set	WITHOUT_CLASSIFICATION	0.9995800195089446	WITHOUT_CLASSIFICATION	4.1998049105543896E-4	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.9999977730030852	WITHOUT_CLASSIFICATION	2.226996914723825E-6	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.9999977730030852	WITHOUT_CLASSIFICATION	2.226996914723825E-6	IMPLEMENTATION
//            case SCLASSNODE: return buildSClass(node, m); // DEFERRED // done // done // done // done // done // done // done // done //            case UNDEFNODE: return buildUndef(node, m); // DEFERRED // done //            case VALIASNODE: return buildVAlias(node, m); // DEFERRED // done // done	WITHOUT_CLASSIFICATION	0.9999187321702555	WITHOUT_CLASSIFICATION	8.126782974456107E-5	IMPLEMENTATION
// // Adding a post-invoke for the cb result serves to both keep it alive // until after the function returns, and allows us to clean up the native // trampoline early, instead of letting them accumulate until a GC run //	WITHOUT_CLASSIFICATION	0.9999786503832996	WITHOUT_CLASSIFICATION	2.134961670036971E-5	IMPLEMENTATION
/* The Java method doesn't care what class it is, but we need to               know what to convert it to, so we use the object's own class.               If that doesn't help, we use String to force a call to the               object's "to_s" method. */	WITHOUT_CLASSIFICATION	0.9962947545068099	WITHOUT_CLASSIFICATION	0.003705245493190094	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.9999800230960278	WITHOUT_CLASSIFICATION	1.997690397210648E-5	IMPLEMENTATION
// Atomic integers for symbol and method IDs	WITHOUT_CLASSIFICATION	0.9999287958512071	WITHOUT_CLASSIFICATION	7.120414879291553E-5	IMPLEMENTATION
/* 18! */	WITHOUT_CLASSIFICATION	0.9999980676169425	WITHOUT_CLASSIFICATION	1.932383057429086E-6	IMPLEMENTATION
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9968354617446739	WITHOUT_CLASSIFICATION	0.0031645382553262547	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999591300442517	WITHOUT_CLASSIFICATION	4.086995574823555E-5	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999591300442517	WITHOUT_CLASSIFICATION	4.086995574823555E-5	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999591300442517	WITHOUT_CLASSIFICATION	4.086995574823555E-5	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999591300442517	WITHOUT_CLASSIFICATION	4.086995574823555E-5	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999990512250263	WITHOUT_CLASSIFICATION	9.48774973606959E-7	IMPLEMENTATION
/*      * This method takes as input a map of operands to their values, and outputs     * the result of this instruction.     *     * If the value map provides a value for any of the instruction's operands     * the expectation is that the operand will be replaced with the simplified value.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify.     *     * @param valueMap Mapping from operands to their simplified values     * @returns simplified result / output of this instruction     */	WITHOUT_CLASSIFICATION	0.9999999999990092	WITHOUT_CLASSIFICATION	9.908240530033657E-13	IMPLEMENTATION
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9984228169927926	WITHOUT_CLASSIFICATION	0.001577183007207459	IMPLEMENTATION
// An atomic long for generating DynamicMethod serial numbers	WITHOUT_CLASSIFICATION	0.9999531043826565	WITHOUT_CLASSIFICATION	4.6895617343452526E-5	IMPLEMENTATION
// MRI behavior: always check whether the file is writable // or not, even if we are to write 0 bytes.	WITHOUT_CLASSIFICATION	0.9999997094385563	WITHOUT_CLASSIFICATION	2.905614436646572E-7	IMPLEMENTATION
/* 22! */	WITHOUT_CLASSIFICATION	0.9999980676169425	WITHOUT_CLASSIFICATION	1.932383057429086E-6	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.9997466077836586	WITHOUT_CLASSIFICATION	2.5339221634136547E-4	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999690127023939	WITHOUT_CLASSIFICATION	3.098729760613052E-5	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999690127023939	WITHOUT_CLASSIFICATION	3.098729760613052E-5	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999690127023939	WITHOUT_CLASSIFICATION	3.098729760613052E-5	IMPLEMENTATION
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999931849702963	WITHOUT_CLASSIFICATION	6.81502970360755E-6	IMPLEMENTATION
// Build a new class and add it to the current scope (could be a script / module / class)	WITHOUT_CLASSIFICATION	0.9999785429033194	WITHOUT_CLASSIFICATION	2.1457096680611235E-5	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999786137619954	WITHOUT_CLASSIFICATION	2.1386238004583305E-5	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999786137619954	WITHOUT_CLASSIFICATION	2.1386238004583305E-5	IMPLEMENTATION
// AF_INET	WITHOUT_CLASSIFICATION	0.9999901088813848	WITHOUT_CLASSIFICATION	9.891118615195496E-6	IMPLEMENTATION
//////////////////////////////////////////////////////////////////////////// // Now we provide default impls of a number of signatures. For each arity, // we first generate a non-block version of the method, which just adds // NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can // potentially take a block, to only generate the block-receiving signature // and still avoid arg boxing. // // We then provide default implementations of each block-accepting method // that in turn call the IRubyObject[]+Block version of call. This then // finally falls back on the minimum implementation requirement for // dynamic method handles. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999905558728731	WITHOUT_CLASSIFICATION	9.444127126846132E-6	IMPLEMENTATION
// Because we implement Java interfaces now, we need a new === that's // aware of those additional "virtual" supertypes	WITHOUT_CLASSIFICATION	0.9630152807617776	WITHOUT_CLASSIFICATION	0.03698471923822236	IMPLEMENTATION
// BASE64	WITHOUT_CLASSIFICATION	0.9999901088813848	WITHOUT_CLASSIFICATION	9.891118615195496E-6	IMPLEMENTATION
/* note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY         * when value is an integer less than 1.         * We treat 0 as a special case to avoid Domain error.         */	WITHOUT_CLASSIFICATION	0.9999999952560319	WITHOUT_CLASSIFICATION	4.7439681578478644E-9	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.9998409149022988	WITHOUT_CLASSIFICATION	1.5908509770116007E-4	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999981335086356	WITHOUT_CLASSIFICATION	1.8664913643094439E-6	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999981335086356	WITHOUT_CLASSIFICATION	1.8664913643094439E-6	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999799180704951	WITHOUT_CLASSIFICATION	2.008192950476792E-5	IMPLEMENTATION
// SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode // We won't get here for argument receives!  So, buildDasgn is called for // assignments to block variables within a block.  As far as the IR is concerned, // this is just a simple copy	WITHOUT_CLASSIFICATION	0.9999998796499936	WITHOUT_CLASSIFICATION	1.2035000642529184E-7	IMPLEMENTATION
// getSimplifiedOperand returns the value of this operand, fully simplified // getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away // // The value is used during optimizations and propagated through the IR.  But, it is thrown away after that. // But, the operand form is used for constructing the compound objects represented by the operand. // // Example: a = [1], b = [3,4], c = [a,b], d = [2,c] //   -- getValue(c) = [1,[3,4]];     getSimplifiedOperand(c) = [1, b] //   -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] // // Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. // So, if contents of a or b is modified, the "simplified value"s of c and d also change!  This difference // is captured by these two methods.	WITHOUT_CLASSIFICATION	0.9999999998972942	WITHOUT_CLASSIFICATION	1.0270591061031586E-10	IMPLEMENTATION
//IRubyObject protocol = args[4];	WITHOUT_CLASSIFICATION	0.9997343782190148	WITHOUT_CLASSIFICATION	2.656217809852584E-4	IMPLEMENTATION
// promise to implement three to N with block	WITHOUT_CLASSIFICATION	0.9543637274315362	WITHOUT_CLASSIFICATION	0.04563627256846378	IMPLEMENTATION
// Ruby's OMG capture all source in a Hash feature // Add each line to buffer when encountering newline or EOF for first time.	WITHOUT_CLASSIFICATION	0.9999994470824733	WITHOUT_CLASSIFICATION	5.529175266685743E-7	IMPLEMENTATION
// carriage return	WITHOUT_CLASSIFICATION	0.9997628981409443	WITHOUT_CLASSIFICATION	2.3710185905576213E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9998910691496131	WITHOUT_CLASSIFICATION	1.0893085038679415E-4	IMPLEMENTATION
// String construction routines by NOT byte[] buffer and making the target String shared 	WITHOUT_CLASSIFICATION	0.9999991234904341	WITHOUT_CLASSIFICATION	8.765095658353451E-7	IMPLEMENTATION
// insert all nodes in sequence, hash them in the final instruction // KEY	WITHOUT_CLASSIFICATION	0.9999988500385816	WITHOUT_CLASSIFICATION	1.1499614184243587E-6	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999979142556389	WITHOUT_CLASSIFICATION	2.085744361180053E-6	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9968129756381954	WITHOUT_CLASSIFICATION	0.0031870243618046068	IMPLEMENTATION
// Basic Block id // CFG that this basic block belongs to // All basic blocks have a starting label // List of non-label instructions	WITHOUT_CLASSIFICATION	0.9999516393156324	WITHOUT_CLASSIFICATION	4.8360684367620704E-5	IMPLEMENTATION
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9997709763842612	WITHOUT_CLASSIFICATION	2.2902361573885337E-4	IMPLEMENTATION
// For all uninitialized specific arities, we defer to the "n" method which // should raise appropriate error in all cases.	WITHOUT_CLASSIFICATION	0.9993685929446005	WITHOUT_CLASSIFICATION	6.314070553995016E-4	IMPLEMENTATION
// implement is called to force this class to create stubs for all // methods in the given interface, so they'll show up in the list // of methods and be invocable without passing through method_missing	WITHOUT_CLASSIFICATION	0.999993424217379	WITHOUT_CLASSIFICATION	6.57578262097554E-6	IMPLEMENTATION
// CASE IR instructions are dummy instructions  // -- all when/then clauses have been converted into if-then-else blocks	WITHOUT_CLASSIFICATION	0.9999870134424312	WITHOUT_CLASSIFICATION	1.2986557568820674E-5	IMPLEMENTATION
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999864390771546	WITHOUT_CLASSIFICATION	1.3560922845448158E-5	IMPLEMENTATION
// leave it null and fall back on our normal invocation logic	WITHOUT_CLASSIFICATION	0.9996554941777062	WITHOUT_CLASSIFICATION	3.4450582229382585E-4	IMPLEMENTATION
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.999998052246951	WITHOUT_CLASSIFICATION	1.94775304892296E-6	IMPLEMENTATION
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9990376751575175	WITHOUT_CLASSIFICATION	9.623248424824863E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9983012668732917	WITHOUT_CLASSIFICATION	0.0016987331267083073	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9983012668732917	WITHOUT_CLASSIFICATION	0.0016987331267083073	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9983012668732917	WITHOUT_CLASSIFICATION	0.0016987331267083073	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9983012668732917	WITHOUT_CLASSIFICATION	0.0016987331267083073	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9983012668732917	WITHOUT_CLASSIFICATION	0.0016987331267083073	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9983012668732917	WITHOUT_CLASSIFICATION	0.0016987331267083073	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9983012668732917	WITHOUT_CLASSIFICATION	0.0016987331267083073	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9983012668732917	WITHOUT_CLASSIFICATION	0.0016987331267083073	IMPLEMENTATION
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999848638935074	WITHOUT_CLASSIFICATION	1.5136106492616902E-5	IMPLEMENTATION
/* fall through */	WITHOUT_CLASSIFICATION	0.9999735412561448	WITHOUT_CLASSIFICATION	2.6458743855233628E-5	IMPLEMENTATION
// deal with case when "other" is not a string	WITHOUT_CLASSIFICATION	0.9999722863600408	WITHOUT_CLASSIFICATION	2.771363995924864E-5	IMPLEMENTATION
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999988563602584	WITHOUT_CLASSIFICATION	1.1436397415671404E-6	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999828750039442	WITHOUT_CLASSIFICATION	1.712499605583419E-5	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999828750039442	WITHOUT_CLASSIFICATION	1.712499605583419E-5	IMPLEMENTATION
// store argument count information into scope	WITHOUT_CLASSIFICATION	0.999998622310827	WITHOUT_CLASSIFICATION	1.3776891729764774E-6	IMPLEMENTATION
// the load method is used for loading as a top-level script, and prepares appropriate scoping around the code	WITHOUT_CLASSIFICATION	0.9999971167233209	WITHOUT_CLASSIFICATION	2.883276679214421E-6	IMPLEMENTATION
// First, build assignments for specific named arguments	WITHOUT_CLASSIFICATION	0.9999938299538358	WITHOUT_CLASSIFICATION	6.170046164152433E-6	IMPLEMENTATION
//        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } //        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }	WITHOUT_CLASSIFICATION	0.9999621749445176	WITHOUT_CLASSIFICATION	3.7825055482549894E-5	IMPLEMENTATION
// get current context	WITHOUT_CLASSIFICATION	0.999876947757941	WITHOUT_CLASSIFICATION	1.2305224205903947E-4	IMPLEMENTATION
// octal constant	WITHOUT_CLASSIFICATION	0.999190964505197	WITHOUT_CLASSIFICATION	8.090354948031091E-4	IMPLEMENTATION
// read	WITHOUT_CLASSIFICATION	0.999997397535927	WITHOUT_CLASSIFICATION	2.6024640731015466E-6	IMPLEMENTATION
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.999087310390646	WITHOUT_CLASSIFICATION	9.126896093539526E-4	IMPLEMENTATION
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9997854120550465	WITHOUT_CLASSIFICATION	2.14587944953491E-4	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999979791451998	WITHOUT_CLASSIFICATION	2.020854800242873E-6	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999979791451998	WITHOUT_CLASSIFICATION	2.020854800242873E-6	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999979791451998	WITHOUT_CLASSIFICATION	2.020854800242873E-6	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999937132365355	WITHOUT_CLASSIFICATION	6.286763464500498E-6	IMPLEMENTATION
// at end	WITHOUT_CLASSIFICATION	0.9999720522266194	WITHOUT_CLASSIFICATION	2.7947773380662925E-5	IMPLEMENTATION
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999925473015359	WITHOUT_CLASSIFICATION	7.452698464062576E-6	IMPLEMENTATION
// save blocking state	WITHOUT_CLASSIFICATION	0.9999845904185735	WITHOUT_CLASSIFICATION	1.5409581426530837E-5	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9995194250298991	WITHOUT_CLASSIFICATION	4.805749701009304E-4	IMPLEMENTATION
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999802202742357	WITHOUT_CLASSIFICATION	1.977972576429916E-5	IMPLEMENTATION
// fall back on empty env when security disallows environment var access (like in an applet)	WITHOUT_CLASSIFICATION	0.9999982348124399	WITHOUT_CLASSIFICATION	1.7651875601332182E-6	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999086626718013	WITHOUT_CLASSIFICATION	9.133732819870448E-5	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999086626718013	WITHOUT_CLASSIFICATION	9.133732819870448E-5	IMPLEMENTATION
// load null block	WITHOUT_CLASSIFICATION	0.9984482475201314	WITHOUT_CLASSIFICATION	0.0015517524798686134	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999995060422102	WITHOUT_CLASSIFICATION	4.939577897100515E-7	IMPLEMENTATION
// nothing else to here - the module version will be // included in the class.	WITHOUT_CLASSIFICATION	0.9999991702263784	WITHOUT_CLASSIFICATION	8.297736216424494E-7	IMPLEMENTATION
// JRUBY-1000, fail early when attempting to subclass a final Java class; // solved here by adding an exception-throwing "inherited"	WITHOUT_CLASSIFICATION	0.9999685796222161	WITHOUT_CLASSIFICATION	3.142037778400546E-5	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9973239064704252	WITHOUT_CLASSIFICATION	0.0026760935295747626	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9973239064704252	WITHOUT_CLASSIFICATION	0.0026760935295747626	IMPLEMENTATION
// Translate ret = (a || b) to ret = (a ? true : b) as follows //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = true //    beq(v1, true, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999984367722893	WITHOUT_CLASSIFICATION	1.5632277106812555E-6	IMPLEMENTATION
// Initial precision is that of double numbers 2^63/2 ~ 4E18 // 63-1 an even number of number bits // precision seems 16 to 18 digits	WITHOUT_CLASSIFICATION	0.9999998696813461	WITHOUT_CLASSIFICATION	1.3031865389428156E-7	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9996987334540551	WITHOUT_CLASSIFICATION	3.0126654594479286E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999696503844563	WITHOUT_CLASSIFICATION	3.034961554371392E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999696503844563	WITHOUT_CLASSIFICATION	3.034961554371392E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999696503844563	WITHOUT_CLASSIFICATION	3.034961554371392E-5	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.9997031722055072	WITHOUT_CLASSIFICATION	2.9682779449273966E-4	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.9998901045003092	WITHOUT_CLASSIFICATION	1.0989549969069688E-4	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.9998901045003092	WITHOUT_CLASSIFICATION	1.0989549969069688E-4	IMPLEMENTATION
// check arity	WITHOUT_CLASSIFICATION	0.9993091130118034	WITHOUT_CLASSIFICATION	6.908869881966188E-4	IMPLEMENTATION
// check arity	WITHOUT_CLASSIFICATION	0.9993091130118034	WITHOUT_CLASSIFICATION	6.908869881966188E-4	IMPLEMENTATION
// create the class	WITHOUT_CLASSIFICATION	0.9998847549029585	WITHOUT_CLASSIFICATION	1.1524509704165657E-4	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999945429403294	WITHOUT_CLASSIFICATION	5.457059670472429E-6	IMPLEMENTATION
// No hex value after the 'x'.	WITHOUT_CLASSIFICATION	0.9999966606270335	WITHOUT_CLASSIFICATION	3.339372966520368E-6	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.9999901088813848	WITHOUT_CLASSIFICATION	9.891118615195496E-6	IMPLEMENTATION
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999890895876924	WITHOUT_CLASSIFICATION	1.091041230749842E-5	IMPLEMENTATION
// Let m be the exact digits precision in an earlier! loop	WITHOUT_CLASSIFICATION	0.9999989328678722	WITHOUT_CLASSIFICATION	1.0671321277322882E-6	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999984458052107	WITHOUT_CLASSIFICATION	1.554194789205079E-6	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.999952741777263	WITHOUT_CLASSIFICATION	4.725822273687297E-5	IMPLEMENTATION
// Label for the start of the method // Label for the end of the method	WITHOUT_CLASSIFICATION	0.9999342797159769	WITHOUT_CLASSIFICATION	6.572028402314318E-5	IMPLEMENTATION
// comparisons & checks // checks if the operand is non-null and non-false // EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...	WITHOUT_CLASSIFICATION	0.9999999885197502	WITHOUT_CLASSIFICATION	1.1480249771966668E-8	IMPLEMENTATION
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.8973139729701756	WITHOUT_CLASSIFICATION	0.1026860270298244	IMPLEMENTATION
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9999221698199051	WITHOUT_CLASSIFICATION	7.783018009481907E-5	IMPLEMENTATION
// all done with lookup attempts, release monitor	WITHOUT_CLASSIFICATION	0.9998741173980832	WITHOUT_CLASSIFICATION	1.2588260191671706E-4	IMPLEMENTATION
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999986963255059	WITHOUT_CLASSIFICATION	1.3036744941172818E-6	IMPLEMENTATION
// Create list of interface names to proxy (and make sure they really are interfaces) // Also build a hashcode from all classes to use for retrieving previously-created impl	WITHOUT_CLASSIFICATION	0.9999998014706839	WITHOUT_CLASSIFICATION	1.9852931607611359E-7	IMPLEMENTATION
// Construct local variables based on parameter names passed in	WITHOUT_CLASSIFICATION	0.9999915921919946	WITHOUT_CLASSIFICATION	8.40780800545793E-6	IMPLEMENTATION
// Value of "TZ" property is of a bit different format, // which confuses the Java's TimeZone.getTimeZone(id) method, // and so, we need to convert it.	WITHOUT_CLASSIFICATION	0.9998765434563627	WITHOUT_CLASSIFICATION	1.2345654363730716E-4	IMPLEMENTATION
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9998361699577465	WITHOUT_CLASSIFICATION	1.63830042253578E-4	IMPLEMENTATION
// ensure the object is associated with the wrapper we found it in, // so that if it comes back we don't re-wrap it	WITHOUT_CLASSIFICATION	0.9999969197483636	WITHOUT_CLASSIFICATION	3.080251636365841E-6	IMPLEMENTATION
// return sqrt(squarD) with precision of rootMC	WITHOUT_CLASSIFICATION	0.9999517117092455	WITHOUT_CLASSIFICATION	4.828829075458279E-5	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9978676436354982	WITHOUT_CLASSIFICATION	0.0021323563645017224	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9999696503844563	WITHOUT_CLASSIFICATION	3.034961554371392E-5	IMPLEMENTATION
// Get a new label using the provided label prefix	WITHOUT_CLASSIFICATION	0.999994770761781	WITHOUT_CLASSIFICATION	5.229238219039917E-6	IMPLEMENTATION
// normal exit, perform finally and return	WITHOUT_CLASSIFICATION	0.9999485281880481	WITHOUT_CLASSIFICATION	5.1471811951978684E-5	IMPLEMENTATION
// coerce arguments	WITHOUT_CLASSIFICATION	0.9997864211168566	WITHOUT_CLASSIFICATION	2.135788831434029E-4	IMPLEMENTATION
// 0.0 is ok // float range // inverted float range? // NaN // +infinity // -infinity	WITHOUT_CLASSIFICATION	0.9997290801351648	WITHOUT_CLASSIFICATION	2.709198648352775E-4	IMPLEMENTATION
/* expected */	WITHOUT_CLASSIFICATION	0.9999578789279946	WITHOUT_CLASSIFICATION	4.2121072005433156E-5	IMPLEMENTATION
// set this class's method names in var @__java_ovrd_methods if this // is the new class; otherwise, get method names from there if this is // a proxy superclass.	WITHOUT_CLASSIFICATION	0.9999997738672812	WITHOUT_CLASSIFICATION	2.2613271877103195E-7	IMPLEMENTATION
/* ignore backslashed spaces in %w */	WITHOUT_CLASSIFICATION	0.9999977002110412	WITHOUT_CLASSIFICATION	2.2997889588523137E-6	IMPLEMENTATION
// Invert the sign, since TZ format and Java format // use opposite signs, sigh... Also, Java API requires // the sign to be always present, be it "+" or "-".	WITHOUT_CLASSIFICATION	0.999960526383319	WITHOUT_CLASSIFICATION	3.947361668101421E-5	IMPLEMENTATION
// no binding given, use 0 for both	WITHOUT_CLASSIFICATION	0.9999693085918017	WITHOUT_CLASSIFICATION	3.0691408198459925E-5	IMPLEMENTATION
// <=> may return nil in many circumstances, e.g. 3 <=> NaN        	WITHOUT_CLASSIFICATION	0.9999690283464535	WITHOUT_CLASSIFICATION	3.097165354649073E-5	IMPLEMENTATION
// use numbered access method	WITHOUT_CLASSIFICATION	0.9998535945079993	WITHOUT_CLASSIFICATION	1.4640549200083713E-4	IMPLEMENTATION
// Always use "GMT" since that's required by Java API.	WITHOUT_CLASSIFICATION	0.9999834935601603	WITHOUT_CLASSIFICATION	1.6506439839818448E-5	IMPLEMENTATION
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999289308468784	WITHOUT_CLASSIFICATION	7.106915312159817E-5	IMPLEMENTATION
// The dataStruct is a place where custom information can be // contained for core implementations that doesn't necessarily // want to go to the trouble of creating a subclass of // RubyObject. The OpenSSL implementation uses this heavily to // save holder objects containing Java cryptography objects. // Java integration uses this to store the Java object ref. //protected transient Object dataStruct;	WITHOUT_CLASSIFICATION	0.9999838809268794	WITHOUT_CLASSIFICATION	1.6119073120642997E-5	IMPLEMENTATION
// Remaining arguments are for the script itself	WITHOUT_CLASSIFICATION	0.9999948103337921	WITHOUT_CLASSIFICATION	5.189666207904121E-6	IMPLEMENTATION
// arg grouping, use slower arg walking logic	WITHOUT_CLASSIFICATION	0.9939834333637527	WITHOUT_CLASSIFICATION	0.006016566636247283	IMPLEMENTATION
// build scope names string	WITHOUT_CLASSIFICATION	0.9999992005647779	WITHOUT_CLASSIFICATION	7.99435222213861E-7	IMPLEMENTATION
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999995567950463	WITHOUT_CLASSIFICATION	4.4320495379998436E-7	IMPLEMENTATION
// Here we create an "anonymous" exception type used for unrolling the stack. // MRI creates a new one for *every call* to timeout, which can be costly. // We opt to use a single exception type for all cases to avoid this overhead.	WITHOUT_CLASSIFICATION	0.9999905048343266	WITHOUT_CLASSIFICATION	9.49516567335943E-6	IMPLEMENTATION
// finally	WITHOUT_CLASSIFICATION	0.999990754700236	WITHOUT_CLASSIFICATION	9.245299763991568E-6	IMPLEMENTATION
// MRI behavior: With TZ equal to "GMT" or "UTC", Time.now // is *NOT* considered as a proper GMT/UTC time: //   ENV['TZ']="GMT" //   Time.now.gmt? ==> false //   ENV['TZ']="UTC" //   Time.now.utc? ==> false // Hence, we need to adjust for that.	WITHOUT_CLASSIFICATION	0.9999987604865825	WITHOUT_CLASSIFICATION	1.2395134174664202E-6	IMPLEMENTATION
// ?l  | boolean | True if file1 exists and is a symbolic link	WITHOUT_CLASSIFICATION	0.9999990229438056	WITHOUT_CLASSIFICATION	9.770561943527118E-7	IMPLEMENTATION
// This try/catch is to allow failing over to the "commands" logic // when running from within a jruby-complete jar file, which has // jruby.home = a jar file URL that does not resolve correctly with // JRubyFile.create.	WITHOUT_CLASSIFICATION	0.9997573090976376	WITHOUT_CLASSIFICATION	2.426909023624968E-4	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9996106071777439	WITHOUT_CLASSIFICATION	3.8939282225608236E-4	IMPLEMENTATION
// specific arity	WITHOUT_CLASSIFICATION	0.9995577953518757	WITHOUT_CLASSIFICATION	4.422046481242139E-4	IMPLEMENTATION
// In the case of two arguments, MRI will discard the portion of // the first argument after a decimal point (i.e., "floor"). // However in the case of a single argument, any portion after // the decimal point is honored.	WITHOUT_CLASSIFICATION	0.9999999536258415	WITHOUT_CLASSIFICATION	4.637415855016255E-8	IMPLEMENTATION
// ?w  | boolean | True if file1 exists and is writable by effective uid/gid	WITHOUT_CLASSIFICATION	0.9999991290021507	WITHOUT_CLASSIFICATION	8.709978492514588E-7	IMPLEMENTATION
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999111096310803	WITHOUT_CLASSIFICATION	8.889036891965701E-5	IMPLEMENTATION
/*    @JRubyMethod    public IRubyObject to_proc() {        return RubyProc.newProc(getRuntime(),                                CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()),                                Block.Type.PROC);    }    */	WITHOUT_CLASSIFICATION	0.9999960626726837	WITHOUT_CLASSIFICATION	3.937327316401841E-6	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999676068277069	WITHOUT_CLASSIFICATION	3.239317229307882E-5	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999676068277069	WITHOUT_CLASSIFICATION	3.239317229307882E-5	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999926752253324	WITHOUT_CLASSIFICATION	7.32477466764709E-6	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999926752253324	WITHOUT_CLASSIFICATION	7.32477466764709E-6	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9971562462183577	WITHOUT_CLASSIFICATION	0.002843753781642241	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9971562462183577	WITHOUT_CLASSIFICATION	0.002843753781642241	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999960284708646	WITHOUT_CLASSIFICATION	3.971529135460984E-6	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999960284708646	WITHOUT_CLASSIFICATION	3.971529135460984E-6	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9996612927501303	WITHOUT_CLASSIFICATION	3.3870724986971226E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9996612927501303	WITHOUT_CLASSIFICATION	3.3870724986971226E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9996612927501303	WITHOUT_CLASSIFICATION	3.3870724986971226E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9996612927501303	WITHOUT_CLASSIFICATION	3.3870724986971226E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9996612927501303	WITHOUT_CLASSIFICATION	3.3870724986971226E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9996612927501303	WITHOUT_CLASSIFICATION	3.3870724986971226E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9996612927501303	WITHOUT_CLASSIFICATION	3.3870724986971226E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9996612927501303	WITHOUT_CLASSIFICATION	3.3870724986971226E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9996612927501303	WITHOUT_CLASSIFICATION	3.3870724986971226E-4	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999531306377724	WITHOUT_CLASSIFICATION	4.686936222772449E-5	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999531306377724	WITHOUT_CLASSIFICATION	4.686936222772449E-5	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999531306377724	WITHOUT_CLASSIFICATION	4.686936222772449E-5	IMPLEMENTATION
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999120408800968	WITHOUT_CLASSIFICATION	8.795911990332466E-5	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999966366891363	WITHOUT_CLASSIFICATION	3.3633108636203095E-6	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999966366891363	WITHOUT_CLASSIFICATION	3.3633108636203095E-6	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999966366891363	WITHOUT_CLASSIFICATION	3.3633108636203095E-6	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999373303706866	WITHOUT_CLASSIFICATION	6.26696293134025E-5	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999373303706866	WITHOUT_CLASSIFICATION	6.26696293134025E-5	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999373303706866	WITHOUT_CLASSIFICATION	6.26696293134025E-5	IMPLEMENTATION
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999111096310803	WITHOUT_CLASSIFICATION	8.889036891965701E-5	IMPLEMENTATION
// backspace	WITHOUT_CLASSIFICATION	0.9996615367930749	WITHOUT_CLASSIFICATION	3.3846320692510764E-4	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
/* package-private */	WITHOUT_CLASSIFICATION	0.9999892651652387	WITHOUT_CLASSIFICATION	1.073483476142728E-5	IMPLEMENTATION
// fall through	WITHOUT_CLASSIFICATION	0.9998645816421747	WITHOUT_CLASSIFICATION	1.3541835782530354E-4	IMPLEMENTATION
// fall through	WITHOUT_CLASSIFICATION	0.9998645816421747	WITHOUT_CLASSIFICATION	1.3541835782530354E-4	IMPLEMENTATION
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9997184613362794	WITHOUT_CLASSIFICATION	2.815386637206586E-4	IMPLEMENTATION
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999998308598735	WITHOUT_CLASSIFICATION	1.691401263666754E-7	IMPLEMENTATION
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999998308598735	WITHOUT_CLASSIFICATION	1.691401263666754E-7	IMPLEMENTATION
/**      * Nested class whose instances act as thunks reacting to to_str method     * called from (Exception#to_str, Exception#message)     * MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!",     * to_str implementation: "name_err_mesg_to_str"     *     * TODO: this class should not be lookupable     */	WITHOUT_CLASSIFICATION	0.9433725344989634	IMPLEMENTATION	0.05662746550103654	WITHOUT_CLASSIFICATION
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9996944061888473	WITHOUT_CLASSIFICATION	3.0559381115266104E-4	IMPLEMENTATION
// The name of this source (e.g. a filename: foo.rb)	WITHOUT_CLASSIFICATION	0.9999726672732234	WITHOUT_CLASSIFICATION	2.733272677651223E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999830425886471	WITHOUT_CLASSIFICATION	1.6957411352849238E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999830425886471	WITHOUT_CLASSIFICATION	1.6957411352849238E-5	IMPLEMENTATION
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9999999417901414	WITHOUT_CLASSIFICATION	5.8209858620772624E-8	IMPLEMENTATION
// We yield here to hopefully permit the target thread to schedule // MRI immediately schedules it, so this is close but not exact	WITHOUT_CLASSIFICATION	0.99997980055937	WITHOUT_CLASSIFICATION	2.0199440630021715E-5	IMPLEMENTATION
// note that addMethod now does its own put, so any change made to // functionality here should be made there as well 	WITHOUT_CLASSIFICATION	0.9999997390916894	WITHOUT_CLASSIFICATION	2.6090831055247113E-7	IMPLEMENTATION
/* Currently dead code, but useful when we figure out how to actually perform translit.    private static boolean isTranslit(String encoding) {        return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false;    }*/	WITHOUT_CLASSIFICATION	0.8943662822812817	WITHOUT_CLASSIFICATION	0.10563371771871839	IMPLEMENTATION
// empirically it appears that to_ary coersions always return array or nil, so this // should always be an array by now.	WITHOUT_CLASSIFICATION	0.9957365236258365	WITHOUT_CLASSIFICATION	0.004263476374163559	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999830425886471	WITHOUT_CLASSIFICATION	1.6957411352849238E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999830425886471	WITHOUT_CLASSIFICATION	1.6957411352849238E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999830425886471	WITHOUT_CLASSIFICATION	1.6957411352849238E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999830425886471	WITHOUT_CLASSIFICATION	1.6957411352849238E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999830425886471	WITHOUT_CLASSIFICATION	1.6957411352849238E-5	IMPLEMENTATION
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.999992829877453	WITHOUT_CLASSIFICATION	7.170122547024378E-6	IMPLEMENTATION
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9997140357185597	WITHOUT_CLASSIFICATION	2.8596428144031576E-4	IMPLEMENTATION
// if it's an inner class and it's not public, we can't access it; // skip population of declared elements	WITHOUT_CLASSIFICATION	0.9999857078583463	WITHOUT_CLASSIFICATION	1.4292141653743858E-5	IMPLEMENTATION
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999505929698477	WITHOUT_CLASSIFICATION	4.940703015230911E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9893597353488237	WITHOUT_CLASSIFICATION	0.010640264651176337	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9893597353488237	WITHOUT_CLASSIFICATION	0.010640264651176337	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9893597353488237	WITHOUT_CLASSIFICATION	0.010640264651176337	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9893597353488237	WITHOUT_CLASSIFICATION	0.010640264651176337	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9893597353488237	WITHOUT_CLASSIFICATION	0.010640264651176337	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9893597353488237	WITHOUT_CLASSIFICATION	0.010640264651176337	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9893597353488237	WITHOUT_CLASSIFICATION	0.010640264651176337	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9893597353488237	WITHOUT_CLASSIFICATION	0.010640264651176337	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9893597353488237	WITHOUT_CLASSIFICATION	0.010640264651176337	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9893597353488237	WITHOUT_CLASSIFICATION	0.010640264651176337	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9893597353488237	WITHOUT_CLASSIFICATION	0.010640264651176337	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9893597353488237	WITHOUT_CLASSIFICATION	0.010640264651176337	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9893597353488237	WITHOUT_CLASSIFICATION	0.010640264651176337	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9893597353488237	WITHOUT_CLASSIFICATION	0.010640264651176337	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9893597353488237	WITHOUT_CLASSIFICATION	0.010640264651176337	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9893597353488237	WITHOUT_CLASSIFICATION	0.010640264651176337	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9893597353488237	WITHOUT_CLASSIFICATION	0.010640264651176337	IMPLEMENTATION
// MRI behavior on Windows: it treats '/' as a root of // a current drive (but only if SINGLE slash is present!): // E.g., if current work directory is // 'D:/home/directory', then '/' means 'D:/'. // // Basically, '/path' is treated as a *RELATIVE* path, // relative to the current drive. '//path' is treated // as absolute one.	WITHOUT_CLASSIFICATION	0.999999994670622	WITHOUT_CLASSIFICATION	5.329377958002516E-9	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9893597353488237	WITHOUT_CLASSIFICATION	0.010640264651176337	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9893597353488237	WITHOUT_CLASSIFICATION	0.010640264651176337	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9893597353488237	WITHOUT_CLASSIFICATION	0.010640264651176337	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9893597353488237	WITHOUT_CLASSIFICATION	0.010640264651176337	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9893597353488237	WITHOUT_CLASSIFICATION	0.010640264651176337	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9893597353488237	WITHOUT_CLASSIFICATION	0.010640264651176337	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9893597353488237	WITHOUT_CLASSIFICATION	0.010640264651176337	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9893597353488237	WITHOUT_CLASSIFICATION	0.010640264651176337	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9893597353488237	WITHOUT_CLASSIFICATION	0.010640264651176337	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9893597353488237	WITHOUT_CLASSIFICATION	0.010640264651176337	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9893597353488237	WITHOUT_CLASSIFICATION	0.010640264651176337	IMPLEMENTATION
// This is needed when the enclosing class or module is a singleton. // In that case, we generated a name such as null::Foo, which broke  // Marshalling, among others. The correct thing to do in this situation  // is to insert the generate the name of form #<Class:01xasdfasd> if  // it's a singleton module/class, which this code accomplishes.	WITHOUT_CLASSIFICATION	0.9988384544791893	WITHOUT_CLASSIFICATION	0.0011615455208106734	IMPLEMENTATION
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9996605890418022	WITHOUT_CLASSIFICATION	3.3941095819780073E-4	IMPLEMENTATION
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.999993459101536	WITHOUT_CLASSIFICATION	6.540898463998809E-6	IMPLEMENTATION
// get "self"	WITHOUT_CLASSIFICATION	0.9998354126326114	WITHOUT_CLASSIFICATION	1.6458736738847403E-4	IMPLEMENTATION
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999946360331339	WITHOUT_CLASSIFICATION	5.363966866154344E-6	IMPLEMENTATION
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9998745954346185	WITHOUT_CLASSIFICATION	1.2540456538137593E-4	IMPLEMENTATION
// only public methods	WITHOUT_CLASSIFICATION	0.9999931557176429	WITHOUT_CLASSIFICATION	6.844282357097656E-6	IMPLEMENTATION
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999799624367766	WITHOUT_CLASSIFICATION	2.0037563223390494E-5	IMPLEMENTATION
// First try to use drive letter from supplied dir value, // then try current work dir.	WITHOUT_CLASSIFICATION	0.999947529015805	WITHOUT_CLASSIFICATION	5.24709841950962E-5	IMPLEMENTATION
// JRUBY-2435: Aliasing eval and other "special" methods should display a warning // We warn because we treat certain method names as "special" for purposes of // optimization. Hopefully this will be enough to convince people not to alias // them.	WITHOUT_CLASSIFICATION	0.9999728018866779	WITHOUT_CLASSIFICATION	2.719811332206428E-5	IMPLEMENTATION
// generate a real method signature for the method, with to/from coercions	WITHOUT_CLASSIFICATION	0.9998125632324049	WITHOUT_CLASSIFICATION	1.8743676759509675E-4	IMPLEMENTATION
// block argument to the method // closure present // class present // method table mutations, def, defs, undef, alias // likely call to eval // makes calls that are aware of the frame // makes calls that are aware of the frame's self // makes calls that are aware of the frame's visibility // makes calls that are aware of the frame's block // makes calls that are aware of the frame's name // makes calls that set or get backref // makes calls that set or get lastline // makes calls that are aware of the frame's class // optional arguments to the method // rest arg to the method // makes calls that are aware of the scope // makes a zero-argument super call // accesses or sets constants // accesses or sets class variables // makes normal super call // contains a retry	WITHOUT_CLASSIFICATION	0.9990978789368286	WITHOUT_CLASSIFICATION	9.021210631715363E-4	IMPLEMENTATION
// // Add aliases in Type::*, NativeType::* and FFI::TYPE_* //	WITHOUT_CLASSIFICATION	0.9999842114321462	WITHOUT_CLASSIFICATION	1.578856785377066E-5	IMPLEMENTATION
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999901143484529	WITHOUT_CLASSIFICATION	9.885651547091469E-6	IMPLEMENTATION
// double-testing args.length here, but it avoids duplicating the proc-setup code in two places	WITHOUT_CLASSIFICATION	0.9999972929238397	WITHOUT_CLASSIFICATION	2.7070761603821993E-6	IMPLEMENTATION
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999991066313183	WITHOUT_CLASSIFICATION	8.933686816451882E-7	IMPLEMENTATION
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999978664727568	WITHOUT_CLASSIFICATION	2.133527243251789E-6	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999512377215649	WITHOUT_CLASSIFICATION	4.876227843500035E-5	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999512377215649	WITHOUT_CLASSIFICATION	4.876227843500035E-5	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999512377215649	WITHOUT_CLASSIFICATION	4.876227843500035E-5	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999512377215649	WITHOUT_CLASSIFICATION	4.876227843500035E-5	IMPLEMENTATION
// snapshot of contents of directory // current position in directory	WITHOUT_CLASSIFICATION	0.9999998737314441	WITHOUT_CLASSIFICATION	1.2626855589479163E-7	IMPLEMENTATION
// Exclusive locks in Java require the channel to be writable, otherwise // an exception is thrown (terminating JRuby execution). // But flock behavior of MRI is that it allows // exclusive locks even on non-writable file. So we convert exclusive // lock to shared lock if the channel is not writable, to better match // the MRI behavior.	WITHOUT_CLASSIFICATION	0.9970304140748314	WITHOUT_CLASSIFICATION	0.0029695859251686945	IMPLEMENTATION
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999553128944916	WITHOUT_CLASSIFICATION	4.46871055083647E-5	IMPLEMENTATION
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999553128944916	WITHOUT_CLASSIFICATION	4.46871055083647E-5	IMPLEMENTATION
// set self to the class	WITHOUT_CLASSIFICATION	0.9999833258631695	WITHOUT_CLASSIFICATION	1.6674136830569685E-5	IMPLEMENTATION
/* ---------- Public fields, methods --------- */	WITHOUT_CLASSIFICATION	0.999983163616975	WITHOUT_CLASSIFICATION	1.6836383024970105E-5	IMPLEMENTATION
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999986966185865	WITHOUT_CLASSIFICATION	1.3033814134566305E-6	IMPLEMENTATION
// zero args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999972203316565	WITHOUT_CLASSIFICATION	2.7796683434612644E-6	IMPLEMENTATION
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999983441744124	WITHOUT_CLASSIFICATION	1.6558255877114834E-6	IMPLEMENTATION
// Store each line into this list if not null.	WITHOUT_CLASSIFICATION	0.9996098605651644	WITHOUT_CLASSIFICATION	3.901394348354836E-4	IMPLEMENTATION
// Portion of line right after beginning marker	WITHOUT_CLASSIFICATION	0.9999574017562675	WITHOUT_CLASSIFICATION	4.259824373249279E-5	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999715875126318	WITHOUT_CLASSIFICATION	2.841248736815919E-5	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999715875126318	WITHOUT_CLASSIFICATION	2.841248736815919E-5	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999715875126318	WITHOUT_CLASSIFICATION	2.841248736815919E-5	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999715875126318	WITHOUT_CLASSIFICATION	2.841248736815919E-5	IMPLEMENTATION
// If an IO exception occurs (something odd, but possible) // A directory may return null.	WITHOUT_CLASSIFICATION	0.9999992626207326	WITHOUT_CLASSIFICATION	7.373792674882158E-7	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999999746202638	WITHOUT_CLASSIFICATION	2.5379736214917046E-8	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999999746202638	WITHOUT_CLASSIFICATION	2.5379736214917046E-8	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999999746202638	WITHOUT_CLASSIFICATION	2.5379736214917046E-8	IMPLEMENTATION
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9998523597786403	WITHOUT_CLASSIFICATION	1.476402213596989E-4	IMPLEMENTATION
// finally with no exception	WITHOUT_CLASSIFICATION	0.9999713956121814	WITHOUT_CLASSIFICATION	2.860438781869393E-5	IMPLEMENTATION
// Now, for all variables used by 'i' mark them live before 'i'	WITHOUT_CLASSIFICATION	0.9999960061529612	WITHOUT_CLASSIFICATION	3.993847038811787E-6	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.8776240401284587	IMPLEMENTATION	0.12237595987154129	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.8776240401284587	IMPLEMENTATION	0.12237595987154129	WITHOUT_CLASSIFICATION
/* The counting of slashes that follows is simply a way to adhere to          * Ruby's UNC (or something) compatibility. When Ruby's expand_path is          * called with "//foo//bar" it will return "//foo/bar". JRuby uses          * java.io.File, and hence returns "/foo/bar". In order to retain          * java.io.File in the lower layers and provide full Ruby          * compatibility, the number of extra slashes must be counted and          * prepended to the result.         */	WITHOUT_CLASSIFICATION	0.9999992472865307	WITHOUT_CLASSIFICATION	7.527134693782778E-7	IMPLEMENTATION
// This is almost always already interned, since it will be called with a symbol in most cases // but when created from Java code, we might get an argument that needs to be interned. // addAccessor has as a precondition that the string MUST be interned	WITHOUT_CLASSIFICATION	0.9999999999995497	WITHOUT_CLASSIFICATION	4.5035932635333976E-13	IMPLEMENTATION
/* not a class */	WITHOUT_CLASSIFICATION	0.9995370168795361	WITHOUT_CLASSIFICATION	4.6298312046389936E-4	IMPLEMENTATION
/* not a class */	WITHOUT_CLASSIFICATION	0.9995370168795361	WITHOUT_CLASSIFICATION	4.6298312046389936E-4	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9998688369859459	WITHOUT_CLASSIFICATION	1.3116301405421038E-4	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9998688369859459	WITHOUT_CLASSIFICATION	1.3116301405421038E-4	IMPLEMENTATION
// io.available() only returns 0 after EOF is encountered // so we need to differentiate between the empty string and EOF	WITHOUT_CLASSIFICATION	0.9999999707394219	WITHOUT_CLASSIFICATION	2.926057810945208E-8	IMPLEMENTATION
// In the current logic, if we get here we know that module is not an // IncludedModuleWrapper, so there's no need to fish out the delegate. But just // in case the logic should change later, let's do it anyway	WITHOUT_CLASSIFICATION	0.8826295046969248	WITHOUT_CLASSIFICATION	0.11737049530307514	IMPLEMENTATION
// rb_iterate((VALUE(*)_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);	WITHOUT_CLASSIFICATION	0.9999105212360142	WITHOUT_CLASSIFICATION	8.947876398585319E-5	IMPLEMENTATION
// Broken symlinks considered by exists() as non-existing, // so we need to check for symlinks explicitly.	WITHOUT_CLASSIFICATION	0.999971647877315	WITHOUT_CLASSIFICATION	2.835212268512329E-5	IMPLEMENTATION
// ////////////////// CONSTANT API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999399920304829	WITHOUT_CLASSIFICATION	6.0007969517087845E-5	IMPLEMENTATION
// create the default thread group	WITHOUT_CLASSIFICATION	0.999967659812616	WITHOUT_CLASSIFICATION	3.234018738401959E-5	IMPLEMENTATION
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999111289778436	WITHOUT_CLASSIFICATION	8.887102215640251E-5	IMPLEMENTATION
/* ============================     * Here are hash internals     * (This could be extracted to a separate class but it's not too large though)     * ============================     */	WITHOUT_CLASSIFICATION	0.9999996640271728	WITHOUT_CLASSIFICATION	3.359728272330119E-7	IMPLEMENTATION
// ////////////////// LOW-LEVEL CLASS VARIABLE INTERFACE //////////////// // // fetch/store/list class variables for this module //	WITHOUT_CLASSIFICATION	0.9999645082468771	WITHOUT_CLASSIFICATION	3.549175312286498E-5	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999888576511072	WITHOUT_CLASSIFICATION	1.1142348892740574E-5	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999888576511072	WITHOUT_CLASSIFICATION	1.1142348892740574E-5	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999963487232956	WITHOUT_CLASSIFICATION	3.6512767044989323E-6	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999963487232956	WITHOUT_CLASSIFICATION	3.6512767044989323E-6	IMPLEMENTATION
// retuns null when not found to avoid unnecessary getRuntime().getNil() call	WITHOUT_CLASSIFICATION	0.9973843463890116	WITHOUT_CLASSIFICATION	0.002615653610988416	IMPLEMENTATION
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999907889745107	WITHOUT_CLASSIFICATION	9.211025489364305E-6	IMPLEMENTATION
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999338107859356	WITHOUT_CLASSIFICATION	6.6189214064411E-5	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9997401412721026	WITHOUT_CLASSIFICATION	2.5985872789726283E-4	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9997401412721026	WITHOUT_CLASSIFICATION	2.5985872789726283E-4	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9997401412721026	WITHOUT_CLASSIFICATION	2.5985872789726283E-4	IMPLEMENTATION
// line 286	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 476	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 513	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 530	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 533	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 537	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 551	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// end loop	WITHOUT_CLASSIFICATION	0.9995637510591114	WITHOUT_CLASSIFICATION	4.362489408886574E-4	IMPLEMENTATION
// MRI behavior: we don't print errno for actual Errno errors	WITHOUT_CLASSIFICATION	0.9998894519129711	WITHOUT_CLASSIFICATION	1.1054808702892011E-4	IMPLEMENTATION
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.999618613883285	WITHOUT_CLASSIFICATION	3.8138611671500246E-4	IMPLEMENTATION
// Traverse the instructions in this basic block in reverse order! // Mark as dead all instructions whose results are not used! 	WITHOUT_CLASSIFICATION	0.9988100214222702	WITHOUT_CLASSIFICATION	0.0011899785777298906	IMPLEMENTATION
// // fields should really be an immutable map as it is never modified after construction //	WITHOUT_CLASSIFICATION	0.9999565706341674	WITHOUT_CLASSIFICATION	4.3429365832610326E-5	IMPLEMENTATION
// load self object as IRubyObject, for recv param	WITHOUT_CLASSIFICATION	0.9999969441206507	WITHOUT_CLASSIFICATION	3.0558793492576384E-6	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.8776240401284587	IMPLEMENTATION	0.12237595987154129	WITHOUT_CLASSIFICATION
// If we define a class in Ruby, but later want to allow it to be defined in Java, // the allocator needs to be updated	WITHOUT_CLASSIFICATION	0.9999820127591621	WITHOUT_CLASSIFICATION	1.79872408379177E-5	IMPLEMENTATION
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.999777298422485	WITHOUT_CLASSIFICATION	2.227015775149857E-4	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9998974164142229	WITHOUT_CLASSIFICATION	1.0258358577709944E-4	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999696937971868	WITHOUT_CLASSIFICATION	3.0306202813213395E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999696937971868	WITHOUT_CLASSIFICATION	3.0306202813213395E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999696937971868	WITHOUT_CLASSIFICATION	3.0306202813213395E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999696937971868	WITHOUT_CLASSIFICATION	3.0306202813213395E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999696937971868	WITHOUT_CLASSIFICATION	3.0306202813213395E-5	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9989614270560573	WITHOUT_CLASSIFICATION	0.001038572943942767	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999696937971868	WITHOUT_CLASSIFICATION	3.0306202813213395E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999696937971868	WITHOUT_CLASSIFICATION	3.0306202813213395E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999696937971868	WITHOUT_CLASSIFICATION	3.0306202813213395E-5	IMPLEMENTATION
// MRI has extra pointer which makes our code look a little bit // more strange in // comparison	WITHOUT_CLASSIFICATION	0.9999962775552937	WITHOUT_CLASSIFICATION	3.722444706396741E-6	IMPLEMENTATION
// Tempory buffer to build up a potential token.  Consumer takes responsibility to reset  // this before use.	WITHOUT_CLASSIFICATION	0.999966929800682	WITHOUT_CLASSIFICATION	3.3070199317950396E-5	IMPLEMENTATION
//tmpPosition is required because getPosition()'s side effects. //if the warning is generated, the getPosition() on line 954 (this line + 18) will create //a wrong position if the "inclusive" flag is not set.	WITHOUT_CLASSIFICATION	0.9996490873295073	WITHOUT_CLASSIFICATION	3.509126704927062E-4	IMPLEMENTATION
/* What is \v in C?                    case '\v':                        c2 = 'v';                        break;                        */	WITHOUT_CLASSIFICATION	0.9999826598335404	WITHOUT_CLASSIFICATION	1.7340166459604418E-5	IMPLEMENTATION
/* Consider Thread aspects of this */	WITHOUT_CLASSIFICATION	0.9999753560112581	WITHOUT_CLASSIFICATION	2.4643988741895156E-5	IMPLEMENTATION
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999987930141525	WITHOUT_CLASSIFICATION	1.2069858474635632E-6	IMPLEMENTATION
// An interrupt or timeout may have caused us to miss // a notify that we consumed, so do another notify in // case someone else is available to pick it up.	WITHOUT_CLASSIFICATION	0.9999286972600995	WITHOUT_CLASSIFICATION	7.130273990043903E-5	IMPLEMENTATION
// line 572	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 601	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 601	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 625	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 649	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 691	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 723	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 732	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 745	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 766	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 785	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 794	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 800	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 812	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 827	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 839	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 845	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 864	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 886	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 896	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 911	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 929	WITHOUT_CLASSIFICATION	0.9995508800728917	WITHOUT_CLASSIFICATION	4.4911992710839054E-4	IMPLEMENTATION
// line 952	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 970	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 972	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 991	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1011	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1026	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1038	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1067	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1085	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1097	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1105	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1122	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1133	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1145	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1169	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1201	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1210	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1229	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1261	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1287	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1293	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1307	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1320	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1325	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1363	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1398	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1448	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1456	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1473	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1492	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1513	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1523	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1562	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1582	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1603	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1603	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1615	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1620	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1635	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1652	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1681	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1708	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1716	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1755	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1772	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1789	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9996612927501303	WITHOUT_CLASSIFICATION	3.3870724986971226E-4	IMPLEMENTATION
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9996612927501303	WITHOUT_CLASSIFICATION	3.3870724986971226E-4	IMPLEMENTATION
/* force for args */	WITHOUT_CLASSIFICATION	0.9999385055591781	WITHOUT_CLASSIFICATION	6.149444082184095E-5	IMPLEMENTATION
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9996720167821502	WITHOUT_CLASSIFICATION	3.2798321784987747E-4	IMPLEMENTATION
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9730168252730301	WITHOUT_CLASSIFICATION	0.026983174726969848	IMPLEMENTATION
// We can assign if we already have variable of that name here or we are the only // scope in the chain (which Local scopes always are).	WITHOUT_CLASSIFICATION	0.9999918438776214	WITHOUT_CLASSIFICATION	8.156122378506754E-6	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999465362797664	WITHOUT_CLASSIFICATION	5.3463720233693716E-5	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999465362797664	WITHOUT_CLASSIFICATION	5.3463720233693716E-5	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999465362797664	WITHOUT_CLASSIFICATION	5.3463720233693716E-5	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999465362797664	WITHOUT_CLASSIFICATION	5.3463720233693716E-5	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9809879474003057	WITHOUT_CLASSIFICATION	0.01901205259969434	IMPLEMENTATION
/*     * This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:)     * into individual whenNodes.  The primary reason for this is to ensure lazy evaluation of     * the arguments (when foo,bar,gar:) to prevent side-effects.  In the old code this was done     * using nested when statements, which was awful for interpreter and compilation.     *     * Notes: This has semantic equivalence but will not be lexically equivalent.  Compiler     * needs to detect same bodies to simplify bytecode generated.     */	WITHOUT_CLASSIFICATION	0.9999997057457933	WITHOUT_CLASSIFICATION	2.9425420664742226E-7	IMPLEMENTATION
// line 313	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 339	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 361	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 413	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 451	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 472	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 500	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 515	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 555	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 582	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 619	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 636	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 669	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 703	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 776	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 814	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 823	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 854	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 872	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 905	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 925	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 958	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 992	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1047	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1072	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1081	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1108	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1136	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1168	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1192	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1241	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1267	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1286	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1301	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1314	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1333	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1362	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1395	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1420	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1439	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1476	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1535	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1588	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1618	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1643	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1669	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1728	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1753	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1779	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1794	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1812	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1837	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1895	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1925	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1950	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 1992	WITHOUT_CLASSIFICATION	0.9995471657326638	WITHOUT_CLASSIFICATION	4.528342673362406E-4	IMPLEMENTATION
// line 2014	WITHOUT_CLASSIFICATION	0.9995478409684831	WITHOUT_CLASSIFICATION	4.521590315168524E-4	IMPLEMENTATION
// Whether this scope is used as the "argument scope" for e.g. zsuper	WITHOUT_CLASSIFICATION	0.9999914696774359	WITHOUT_CLASSIFICATION	8.53032256402489E-6	IMPLEMENTATION
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9987327107442439	WITHOUT_CLASSIFICATION	0.0012672892557562005	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999917555089345	WITHOUT_CLASSIFICATION	8.244491065436278E-6	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999917555089345	WITHOUT_CLASSIFICATION	8.244491065436278E-6	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999917555089345	WITHOUT_CLASSIFICATION	8.244491065436278E-6	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999917555089345	WITHOUT_CLASSIFICATION	8.244491065436278E-6	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999917555089345	WITHOUT_CLASSIFICATION	8.244491065436278E-6	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999917555089345	WITHOUT_CLASSIFICATION	8.244491065436278E-6	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999917555089345	WITHOUT_CLASSIFICATION	8.244491065436278E-6	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9998373438728386	WITHOUT_CLASSIFICATION	1.6265612716137416E-4	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9998373438728386	WITHOUT_CLASSIFICATION	1.6265612716137416E-4	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9998373438728386	WITHOUT_CLASSIFICATION	1.6265612716137416E-4	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9998373438728386	WITHOUT_CLASSIFICATION	1.6265612716137416E-4	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9547553697100819	WITHOUT_CLASSIFICATION	0.04524463028991811	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9547553697100819	WITHOUT_CLASSIFICATION	0.04524463028991811	IMPLEMENTATION
// We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the // 'b' will get put into this new dynamic scope.  The original scope does not see the new // 'b' and successive evals with this binding will.  I take it having the ability to have  // succesive binding evals be able to share same scope makes sense from a programmers  // perspective.   One crappy outcome of this design is it requires Dynamic and Static  // scopes to be mutable for this one case.	WITHOUT_CLASSIFICATION	0.999999994742382	WITHOUT_CLASSIFICATION	5.257618106251612E-9	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999949222373706	WITHOUT_CLASSIFICATION	5.077762629390093E-6	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999949222373706	WITHOUT_CLASSIFICATION	5.077762629390093E-6	IMPLEMENTATION
// tc // under method // self // under method // name // args	WITHOUT_CLASSIFICATION	0.9996324216754875	WITHOUT_CLASSIFICATION	3.675783245125785E-4	IMPLEMENTATION
// allow it to bubble up	WITHOUT_CLASSIFICATION	0.9996457656721174	WITHOUT_CLASSIFICATION	3.5423432788263915E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999323866224934	WITHOUT_CLASSIFICATION	6.761337750663979E-5	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999323866224934	WITHOUT_CLASSIFICATION	6.761337750663979E-5	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999323866224934	WITHOUT_CLASSIFICATION	6.761337750663979E-5	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999323866224934	WITHOUT_CLASSIFICATION	6.761337750663979E-5	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999323866224934	WITHOUT_CLASSIFICATION	6.761337750663979E-5	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999323866224934	WITHOUT_CLASSIFICATION	6.761337750663979E-5	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999323866224934	WITHOUT_CLASSIFICATION	6.761337750663979E-5	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999323866224934	WITHOUT_CLASSIFICATION	6.761337750663979E-5	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999323866224934	WITHOUT_CLASSIFICATION	6.761337750663979E-5	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9998662091234423	WITHOUT_CLASSIFICATION	1.3379087655782365E-4	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9998662091234423	WITHOUT_CLASSIFICATION	1.3379087655782365E-4	IMPLEMENTATION
// Check for a builtin first.	WITHOUT_CLASSIFICATION	0.9999775712506659	WITHOUT_CLASSIFICATION	2.24287493341521E-5	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9998526819464446	WITHOUT_CLASSIFICATION	1.4731805355528525E-4	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9998526819464446	WITHOUT_CLASSIFICATION	1.4731805355528525E-4	IMPLEMENTATION
// Unfortunately, the number of digits in the exponent is // not clearly defined in Ruby documentation. This is a // platform/version-dependent behavior. On Linux/Mac/Cygwin/*nix, // two digits are used. On Windows, 3 digits are used. // It is desirable for JRuby to have consistent behavior, and // the two digits behavior was selected. This is also in sync // with "Java-native" sprintf behavior (java.util.Formatter). // E or e	WITHOUT_CLASSIFICATION	0.9999967994072402	WITHOUT_CLASSIFICATION	3.2005927598027852E-6	IMPLEMENTATION
/** * Represents the the dynamic portion of scoping information.  The variableValues are the * values of assigned local or block variables.  The staticScope identifies which sort of * scope this is (block or local). *  * Properties of Dynamic Scopes: * 1. static and dynamic scopes have the same number of names to values * 2. size of variables (and thus names) is determined during parsing.  So those structured do *    not need to change * * FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents.  This * is harmless (other than wasting memory), but we should not do that.  We can fix this in two * ways: * 1. Fix all callers * 2. Check parent that is passed in and make if new instance is local, then its parent is not local */	WITHOUT_CLASSIFICATION	0.9558402761986671	IMPLEMENTATION	0.04415972380133282	WITHOUT_CLASSIFICATION
// This method handles '**/' patterns and delegates to // fnmatch_helper for the main work.	WITHOUT_CLASSIFICATION	0.99990377595746	WITHOUT_CLASSIFICATION	9.62240425400109E-5	IMPLEMENTATION
// Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern  // Example: foo{a{c},b}bar -> fooa{c}bar, foobbar	WITHOUT_CLASSIFICATION	0.9999965394774826	WITHOUT_CLASSIFICATION	3.460522517440377E-6	IMPLEMENTATION
// double precision, native // double precision, native	WITHOUT_CLASSIFICATION	0.9999819962925919	WITHOUT_CLASSIFICATION	1.800370740811699E-5	IMPLEMENTATION
// 64-bit number, native (as bignum)	WITHOUT_CLASSIFICATION	0.9998191718123032	WITHOUT_CLASSIFICATION	1.8082818769688542E-4	IMPLEMENTATION
// Next indicates to decode using native encoding format	WITHOUT_CLASSIFICATION	0.9997834571303332	WITHOUT_CLASSIFICATION	2.1654286966670886E-4	IMPLEMENTATION
// calculate based on a, b, c and d	WITHOUT_CLASSIFICATION	0.9998401473950062	WITHOUT_CLASSIFICATION	1.5985260499383494E-4	IMPLEMENTATION
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.999981574849362	WITHOUT_CLASSIFICATION	1.8425150637998705E-5	IMPLEMENTATION
// MRI behavior:  for 'Q', do not add trailing nils	WITHOUT_CLASSIFICATION	0.9945458563956251	WITHOUT_CLASSIFICATION	0.005454143604374934	IMPLEMENTATION
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9999998822485979	WITHOUT_CLASSIFICATION	1.1775140209568603E-7	IMPLEMENTATION
// exec needs to behave differently in-process, because it's technically // supposed to replace the calling process. So if we're supposed to run // in-process, we allow it to use the default streams and not use // pumpers at all. See JRUBY-2156 and JRUBY-2154.	WITHOUT_CLASSIFICATION	0.9839422389376132	WITHOUT_CLASSIFICATION	0.016057761062386728	IMPLEMENTATION
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999998778958117	WITHOUT_CLASSIFICATION	1.22104188214541E-7	IMPLEMENTATION
// The problem we trying to solve below: STDIN in Java // is blocked and non-interruptible, so if we invoke read // on it, we might never be able to interrupt such thread. // So, we use in.available() to see if there is any input // ready, and only then read it. But this approach can't // tell whether the end of stream reached or not, so we // might end up looping right at the end of the stream. // Well, at least, we can improve the situation by checking // if some input was ever available, and if so, not // checking for available anymore, and just go to read.	WITHOUT_CLASSIFICATION	0.9999995038720972	WITHOUT_CLASSIFICATION	4.96127902889063E-7	IMPLEMENTATION
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999642055471354	WITHOUT_CLASSIFICATION	3.5794452864624866E-5	IMPLEMENTATION
// an empirically derived rule: precision applies to // significand length, irrespective of exponent	WITHOUT_CLASSIFICATION	0.9998794121244403	WITHOUT_CLASSIFICATION	1.2058787555969985E-4	IMPLEMENTATION
// an official rule, clarified: if the exponent // <clarif>after adjusting for exponent form</clarif> // is < -4,  or the exponent <clarif>after adjusting  // for exponent form</clarif> is greater than the // precision, use exponent form	WITHOUT_CLASSIFICATION	0.9999830430017966	WITHOUT_CLASSIFICATION	1.6956998203389258E-5	IMPLEMENTATION
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9999848854504224	WITHOUT_CLASSIFICATION	1.5114549577487034E-5	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9995240464850325	WITHOUT_CLASSIFICATION	4.7595351496763574E-4	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9995240464850325	WITHOUT_CLASSIFICATION	4.7595351496763574E-4	IMPLEMENTATION
// MRI behavior: validate only the unnumbered arguments	WITHOUT_CLASSIFICATION	0.9999196422795495	WITHOUT_CLASSIFICATION	8.035772045038223E-5	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999711651448018	WITHOUT_CLASSIFICATION	2.8834855198212328E-5	IMPLEMENTATION
// calculation for simple (and typical) case, // adapted from sun.misc.FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999734346309987	WITHOUT_CLASSIFICATION	2.6565369001288256E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999696503844563	WITHOUT_CLASSIFICATION	3.034961554371392E-5	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9989628882782657	WITHOUT_CLASSIFICATION	0.0010371117217341985	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9989628882782657	WITHOUT_CLASSIFICATION	0.0010371117217341985	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9989628882782657	WITHOUT_CLASSIFICATION	0.0010371117217341985	IMPLEMENTATION
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9895302531532875	WITHOUT_CLASSIFICATION	0.010469746846712629	IMPLEMENTATION
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999928416129295	WITHOUT_CLASSIFICATION	7.1583870705076275E-6	IMPLEMENTATION
// call chmod after we created the RandomAccesFile // because otherwise, the file could be read-only	WITHOUT_CLASSIFICATION	0.9999500366410392	WITHOUT_CLASSIFICATION	4.9963358960817006E-5	IMPLEMENTATION
// attempt to set the permissions, if we have been passed a POSIX instance, // and only if the file was created in this call.	WITHOUT_CLASSIFICATION	0.999998213229695	WITHOUT_CLASSIFICATION	1.7867703050246613E-6	IMPLEMENTATION
// // When reading into a heap buffer, the jvm allocates a temporary // direct ByteBuffer of the requested size.  To avoid allocating // a huge direct buffer when doing ludicrous reads (e.g. 1G or more) // we split the read up into chunks of no more than 1M //	WITHOUT_CLASSIFICATION	0.9999985952026268	WITHOUT_CLASSIFICATION	1.404797373271336E-6	IMPLEMENTATION
// // If it is a file channel, then we can pre-allocate the output buffer // to the total size of buffered + remaining bytes in file //	WITHOUT_CLASSIFICATION	0.999997135283807	WITHOUT_CLASSIFICATION	2.8647161930142865E-6	IMPLEMENTATION
// // Cannot discern the total read length - allocate at least enough for the buffered data //	WITHOUT_CLASSIFICATION	0.999997213947354	WITHOUT_CLASSIFICATION	2.7860526459270767E-6	IMPLEMENTATION
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999845738551185	WITHOUT_CLASSIFICATION	1.5426144881493966E-5	IMPLEMENTATION
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9996624009591437	WITHOUT_CLASSIFICATION	3.3759904085618655E-4	IMPLEMENTATION
// already have some bytes buffered, just return those	WITHOUT_CLASSIFICATION	0.9998251553341192	WITHOUT_CLASSIFICATION	1.7484466588073595E-4	IMPLEMENTATION
// reset buffer	WITHOUT_CLASSIFICATION	0.9996405349102746	WITHOUT_CLASSIFICATION	3.5946508972540007E-4	IMPLEMENTATION
// // Synchronize and re-check to avoid creating more than one Selector per provider //	WITHOUT_CLASSIFICATION	0.999115420055708	WITHOUT_CLASSIFICATION	8.845799442920616E-4	IMPLEMENTATION
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.8267518199033266	IMPLEMENTATION	0.1732481800966733	WITHOUT_CLASSIFICATION
// Is there something built into JRuby to do this?	WITHOUT_CLASSIFICATION	0.9999382242354838	WITHOUT_CLASSIFICATION	6.17757645161825E-5	IMPLEMENTATION
// Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long // assertTrue(value == valueViaValuesIterator);	WITHOUT_CLASSIFICATION	0.9999777051471072	WITHOUT_CLASSIFICATION	2.2294852892809848E-5	IMPLEMENTATION
// value equality //result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); //assertEquals("two", result);	WITHOUT_CLASSIFICATION	0.999973497218003	WITHOUT_CLASSIFICATION	2.6502781997052082E-5	IMPLEMENTATION
// Uncomment the "puts" lines if you want to see more detail	WITHOUT_CLASSIFICATION	0.9998620085747225	WITHOUT_CLASSIFICATION	1.3799142527748672E-4	IMPLEMENTATION
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999756585325966	WITHOUT_CLASSIFICATION	2.434146740336014E-5	IMPLEMENTATION
// change the thread context to include the class	WITHOUT_CLASSIFICATION	0.9997995216309153	WITHOUT_CLASSIFICATION	2.0047836908473662E-4	IMPLEMENTATION
