// TODO: warn "tried to create Proc object without a block"	IMPLEMENTATION	0.6064058065850086	IMPLEMENTATION	0.39359419341499124	WITHOUT_CLASSIFICATION
// TODO: CLONE_SETUP here	IMPLEMENTATION	0.8170158627658066	IMPLEMENTATION	0.18298413723419338	WITHOUT_CLASSIFICATION
// TODO: Someday, enable.	IMPLEMENTATION	0.5441867827814393	IMPLEMENTATION	0.45581321721856055	WITHOUT_CLASSIFICATION
// Bunch of methods still not implemented	IMPLEMENTATION	0.57646899341911	IMPLEMENTATION	0.4235310065808902	WITHOUT_CLASSIFICATION
// TODO: non-strict option	IMPLEMENTATION	0.6070116535409357	WITHOUT_CLASSIFICATION	0.39298834645906444	IMPLEMENTATION
// TODO: opt for 2 and 3 ?	IMPLEMENTATION	0.9091849134572275	WITHOUT_CLASSIFICATION	0.09081508654277257	IMPLEMENTATION
// FIXME: Should we make this work with platform's locale, // or continue hardcoding US?	IMPLEMENTATION	0.9917605436138102	WITHOUT_CLASSIFICATION	0.008239456386189791	IMPLEMENTATION
// TODO: rescan code range ?	IMPLEMENTATION	0.6687387576021532	IMPLEMENTATION	0.33126124239784677	WITHOUT_CLASSIFICATION
// TODO: rescan code range ?	IMPLEMENTATION	0.6687387576021532	IMPLEMENTATION	0.33126124239784677	WITHOUT_CLASSIFICATION
// TODO: pass this in?	IMPLEMENTATION	0.640964155867813	IMPLEMENTATION	0.35903584413218714	WITHOUT_CLASSIFICATION
// FIXME: Pass block down?	IMPLEMENTATION	0.9991428555678569	WITHOUT_CLASSIFICATION	8.571444321430984E-4	IMPLEMENTATION
// TODO: do something here?	IMPLEMENTATION	0.8894448702941274	IMPLEMENTATION	0.11055512970587256	WITHOUT_CLASSIFICATION
// TODO: port exact behavior from MRI, and move most locking logic into ChannelDescriptor // TODO: for all LOCK_NB cases, return false if they would block	IMPLEMENTATION	0.7969208087210368	WITHOUT_CLASSIFICATION	0.20307919127896312	IMPLEMENTATION
// TODO: check if too many open files, GC and try again	IMPLEMENTATION	0.8007570393286312	WITHOUT_CLASSIFICATION	0.1992429606713688	IMPLEMENTATION
//TODO deal with UNC names	IMPLEMENTATION	0.9990984663576379	WITHOUT_CLASSIFICATION	9.015336423620481E-4	IMPLEMENTATION
// FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.9956116300671319	WITHOUT_CLASSIFICATION	0.004388369932868037	IMPLEMENTATION
//FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.9926227189290329	WITHOUT_CLASSIFICATION	0.007377281070967058	IMPLEMENTATION
// TODO: SafeStringValue here	IMPLEMENTATION	0.8170158627658066	IMPLEMENTATION	0.18298413723419338	WITHOUT_CLASSIFICATION
// TODO: turn off readable? am I reading this right? // This only seems to be used while duping below, since modes gets // reset to actual modes afterward //fptr->mode &= (m & FMODE_READABLE) ? ~FMODE_READABLE : ~FMODE_WRITABLE;	IMPLEMENTATION	0.7059957087504377	IMPLEMENTATION	0.2940042912495624	WITHOUT_CLASSIFICATION
// TODO: check safe, taint on incoming string	IMPLEMENTATION	0.6925498425171637	WITHOUT_CLASSIFICATION	0.3074501574828363	IMPLEMENTATION
// TODO: pipe handler to be reopened with path and "w" mode	IMPLEMENTATION	0.6119513381570814	IMPLEMENTATION	0.3880486618429187	WITHOUT_CLASSIFICATION
// FIXME: add text mode to mode flags	IMPLEMENTATION	0.9992555920120039	WITHOUT_CLASSIFICATION	7.444079879961169E-4	IMPLEMENTATION
// TODO: Something about pipe buffer length here	IMPLEMENTATION	0.588294209467317	IMPLEMENTATION	0.41170579053268297	WITHOUT_CLASSIFICATION
// TODO: handle errors in buffered write by retrying until finished or file is closed	IMPLEMENTATION	0.7544953974197393	IMPLEMENTATION	0.24550460258026066	WITHOUT_CLASSIFICATION
// TODO: notify threads waiting on descriptors/IO? probably not...	IMPLEMENTATION	0.7756941024306705	IMPLEMENTATION	0.22430589756932945	WITHOUT_CLASSIFICATION
// TODO: Ruby re-checks that the buffer string hasn't been modified	IMPLEMENTATION	0.6917886218946852	IMPLEMENTATION	0.30821137810531474	WITHOUT_CLASSIFICATION
// TODO: Ruby unlocks the string here	IMPLEMENTATION	0.6456444349289143	WITHOUT_CLASSIFICATION	0.3543555650710856	IMPLEMENTATION
// TODO: Ruby truncates string to specific size here, but our bytelist should handle this already?	IMPLEMENTATION	0.7732720083712383	WITHOUT_CLASSIFICATION	0.2267279916287617	IMPLEMENTATION
// TODO: Ruby unlocks the string here	IMPLEMENTATION	0.6456444349289143	WITHOUT_CLASSIFICATION	0.3543555650710856	IMPLEMENTATION
// TODO: Ruby truncates string to specific size here, but our bytelist should handle this already?	IMPLEMENTATION	0.7732720083712383	WITHOUT_CLASSIFICATION	0.2267279916287617	IMPLEMENTATION
// TODO: ruby locks the string here	IMPLEMENTATION	0.6456444349289143	WITHOUT_CLASSIFICATION	0.3543555650710856	IMPLEMENTATION
// TODO same zero-length checks as file above	IMPLEMENTATION	0.9089779885248257	IMPLEMENTATION	0.0910220114751743	WITHOUT_CLASSIFICATION
// TODO: MRI also can hadle Bignum here	IMPLEMENTATION	0.9148314494901242	IMPLEMENTATION	0.08516855050987582	WITHOUT_CLASSIFICATION
// TODO: make threadsafe	IMPLEMENTATION	0.7379700932861821	IMPLEMENTATION	0.2620299067138179	WITHOUT_CLASSIFICATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.7760274951232691	WITHOUT_CLASSIFICATION	0.22397250487673093	IMPLEMENTATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.7760274951232691	WITHOUT_CLASSIFICATION	0.22397250487673093	IMPLEMENTATION
// FIXME: create AttrReaderMethod, AttrWriterMethod, for faster attr access	IMPLEMENTATION	0.9997905169060785	WITHOUT_CLASSIFICATION	2.0948309392159638E-4	IMPLEMENTATION
// Do not clone cached methods // FIXME: MRI copies all methods here	IMPLEMENTATION	0.9895014693697488	WITHOUT_CLASSIFICATION	0.010498530630251275	IMPLEMENTATION
// TODO: don't calculate the same value 3 times	IMPLEMENTATION	0.6842763169786981	WITHOUT_CLASSIFICATION	0.315723683021302	IMPLEMENTATION
// TODO: 3 times calculate the same value below	IMPLEMENTATION	0.7635718996368894	WITHOUT_CLASSIFICATION	0.23642810036311065	IMPLEMENTATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.9808535885879439	IMPLEMENTATION	0.019146411412056124	WITHOUT_CLASSIFICATION
// TODO: Store BEGIN and END information into this node	IMPLEMENTATION	0.7855403301307031	IMPLEMENTATION	0.21445966986929685	WITHOUT_CLASSIFICATION
// TODO: put these nil guards into tree (bigger than I want to do right now)	IMPLEMENTATION	0.9785618495808817	IMPLEMENTATION	0.021438150419118326	WITHOUT_CLASSIFICATION
// FIXME: Make bodyNode non-null in parser	IMPLEMENTATION	0.999866267909626	WITHOUT_CLASSIFICATION	1.3373209037409608E-4	IMPLEMENTATION
// TODO: call config with scope but no frame	IMPLEMENTATION	0.5136863281382268	IMPLEMENTATION	0.48631367186177316	WITHOUT_CLASSIFICATION
// TODO: add trace call?	IMPLEMENTATION	0.5335910510381924	IMPLEMENTATION	0.4664089489618077	WITHOUT_CLASSIFICATION
// FIXME: missing arity check	IMPLEMENTATION	0.999511584101867	WITHOUT_CLASSIFICATION	4.884158981330376E-4	IMPLEMENTATION
// FIXME: optimize for cases where we have no false branch	IMPLEMENTATION	0.9996917594237604	WITHOUT_CLASSIFICATION	3.082405762395882E-4	IMPLEMENTATION
// FIXME: after jump is not in here.  Will if ever be? //Label afterJmp = new Label();	IMPLEMENTATION	0.9998185009186864	WITHOUT_CLASSIFICATION	1.814990813136314E-4	IMPLEMENTATION
// TODO: build arg list based on number of args, optionals, etc	IMPLEMENTATION	0.511753622262559	WITHOUT_CLASSIFICATION	0.4882463777374409	IMPLEMENTATION
// FIXME: missing arity check	IMPLEMENTATION	0.999511584101867	WITHOUT_CLASSIFICATION	4.884158981330376E-4	IMPLEMENTATION
// SSS FIXME: Traverse up the scope hierarchy to find the constant as long as the parent is a static scope	IMPLEMENTATION	0.9996905036147556	WITHOUT_CLASSIFICATION	3.094963852443911E-4	IMPLEMENTATION
// SSS FIXME: Should I be returning the operand constructed here?	IMPLEMENTATION	0.9956327240114031	WITHOUT_CLASSIFICATION	0.004367275988596839	IMPLEMENTATION
// TODO: Add IR instructions for checking method arity! // s.getVariableCompiler().checkMethodArity(required, opt, rest);	IMPLEMENTATION	0.9381265151703189	IMPLEMENTATION	0.06187348482968118	WITHOUT_CLASSIFICATION
// FIXME: Ruby 1.9 post args code needs to come here	IMPLEMENTATION	0.9789169356532421	WITHOUT_CLASSIFICATION	0.021083064346757895	IMPLEMENTATION
// SSS: FIXME: Somewhere here, we need to record information the type of this operand as String	IMPLEMENTATION	0.9993429828256497	WITHOUT_CLASSIFICATION	6.570171743503757E-4	IMPLEMENTATION
// FIXME: Translate this call below! // s.unwrapPassedBlock();	IMPLEMENTATION	0.9987942926120261	WITHOUT_CLASSIFICATION	0.0012057073879738643	IMPLEMENTATION
// SSS FIXME: We need to build debug information tracking into the IR in some fashion // So, these methods below would have to have equivalents in IR_Scope implementations.	IMPLEMENTATION	0.9962234836850427	WITHOUT_CLASSIFICATION	0.0037765163149574292	IMPLEMENTATION
// SSS FIXME: Incomplete!	IMPLEMENTATION	0.9996237203449804	WITHOUT_CLASSIFICATION	3.7627965501967623E-4	IMPLEMENTATION
// SSS FIXME: Pick one of bytelist or string, or add internal conversion methods to convert to the default representation	IMPLEMENTATION	0.9998927666253384	WITHOUT_CLASSIFICATION	1.0723337466149384E-4	IMPLEMENTATION
// SSS FIXME: To be done	IMPLEMENTATION	0.9998821612790354	WITHOUT_CLASSIFICATION	1.1783872096456037E-4	IMPLEMENTATION
//TODO: implement, won't do this now	IMPLEMENTATION	0.9982524778058474	WITHOUT_CLASSIFICATION	0.0017475221941526252	IMPLEMENTATION
//TODO: implement, won't do this now	IMPLEMENTATION	0.9982524778058474	WITHOUT_CLASSIFICATION	0.0017475221941526252	IMPLEMENTATION
// TODO: validate port as numeric	IMPLEMENTATION	0.5255224801720071	IMPLEMENTATION	0.4744775198279929	WITHOUT_CLASSIFICATION
// TODO: this code should really check if a Ruby equals method is implemented or not.	IMPLEMENTATION	0.9962975502737654	IMPLEMENTATION	0.0037024497262346497	WITHOUT_CLASSIFICATION
// if not already defined, we add a 'new' that guesses at which signature to use // TODO: just adding first one right now...add in signature-guessing logic	IMPLEMENTATION	0.5209030243572753	IMPLEMENTATION	0.47909697564272474	WITHOUT_CLASSIFICATION
// TODO: deal with varargs	IMPLEMENTATION	0.7615554308821507	IMPLEMENTATION	0.23844456911784928	WITHOUT_CLASSIFICATION
// TODO: deal with varargs	IMPLEMENTATION	0.7615554308821507	IMPLEMENTATION	0.23844456911784928	WITHOUT_CLASSIFICATION
// TODO: other reserved names?	IMPLEMENTATION	0.8499342632854068	IMPLEMENTATION	0.15006573671459328	WITHOUT_CLASSIFICATION
// TODO: we can probably release our references to the constantFields // array and static/instance callback hashes at this point. 	IMPLEMENTATION	0.6478609988014216	WITHOUT_CLASSIFICATION	0.3521390011985783	IMPLEMENTATION
// TODO: Formalize conversion mechanisms between Java and Ruby	IMPLEMENTATION	0.5102718592884778	IMPLEMENTATION	0.4897281407115221	WITHOUT_CLASSIFICATION
// XXX: Check if it's appropriate type?	IMPLEMENTATION	0.9948490313052121	WITHOUT_CLASSIFICATION	0.005150968694787881	IMPLEMENTATION
// TODO: call ruby method	IMPLEMENTATION	0.9433736818474681	IMPLEMENTATION	0.05662631815253187	WITHOUT_CLASSIFICATION
// TODO: call ruby method	IMPLEMENTATION	0.9433736818474681	IMPLEMENTATION	0.05662631815253187	WITHOUT_CLASSIFICATION
// TODO: Add safety check for taintedness	IMPLEMENTATION	0.548440339798038	IMPLEMENTATION	0.451559660201962	WITHOUT_CLASSIFICATION
// FIXME: Need to detect magic_comment in 1.9 here for encoding	IMPLEMENTATION	0.9990975615173238	WITHOUT_CLASSIFICATION	9.02438482676289E-4	IMPLEMENTATION
/* xxx shouldn't check if valid option variable */	IMPLEMENTATION	0.9999937922271714	WITHOUT_CLASSIFICATION	6.207772828602704E-6	IMPLEMENTATION
// TODO: this isn't handling multibyte yet	IMPLEMENTATION	0.9892291303293403	IMPLEMENTATION	0.010770869670659685	WITHOUT_CLASSIFICATION
// TODO: This should be something else like a tCHAR	IMPLEMENTATION	0.9321992120329955	IMPLEMENTATION	0.06780078796700448	WITHOUT_CLASSIFICATION
// FIXME: \r logic needed	IMPLEMENTATION	0.5012428590304026	WITHOUT_CLASSIFICATION	0.4987571409695974	IMPLEMENTATION
// TODO: note lack of command.com support for Win 9x...	IMPLEMENTATION	0.9087647781081021	IMPLEMENTATION	0.09123522189189787	WITHOUT_CLASSIFICATION
// FIXME: Make thread pool threads daemons if necessary	IMPLEMENTATION	0.9994970704789321	WITHOUT_CLASSIFICATION	5.029295210678792E-4	IMPLEMENTATION
/* FIXME: We may be intern'ing more than once.*/	IMPLEMENTATION	0.9994184609877522	WITHOUT_CLASSIFICATION	5.815390122477692E-4	IMPLEMENTATION
/* FIXME: We may be intern'ing more than once.*/	IMPLEMENTATION	0.9994184609877522	WITHOUT_CLASSIFICATION	5.815390122477692E-4	IMPLEMENTATION
/* FIXME: arg_concat missing for opt_call_args*/	IMPLEMENTATION	0.9999085336277025	WITHOUT_CLASSIFICATION	9.146637229748442E-5	IMPLEMENTATION
/* FIXME: arg_concat logic missing for opt_call_args*/	IMPLEMENTATION	0.9999088879243236	WITHOUT_CLASSIFICATION	9.111207567644218E-5	IMPLEMENTATION
// FIXME: This needs to happen for lambdas //            args.checkArgCount(runtime, parameters.length);	IMPLEMENTATION	0.9952551015482076	WITHOUT_CLASSIFICATION	0.004744898451792353	IMPLEMENTATION
// FIXME: This needs to happen for lambdas //            args.checkArgCount(runtime, parameters.length);	IMPLEMENTATION	0.9952551015482076	WITHOUT_CLASSIFICATION	0.004744898451792353	IMPLEMENTATION
// TODO: make it cross runtime safe by COW or eager copy	IMPLEMENTATION	0.8563355218925788	IMPLEMENTATION	0.1436644781074212	WITHOUT_CLASSIFICATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.9990342710425689	WITHOUT_CLASSIFICATION	9.657289574309788E-4	IMPLEMENTATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.9990342710425689	WITHOUT_CLASSIFICATION	9.657289574309788E-4	IMPLEMENTATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.9990342710425689	WITHOUT_CLASSIFICATION	9.657289574309788E-4	IMPLEMENTATION
// TODO: check the return value here	IMPLEMENTATION	0.8237464544379512	IMPLEMENTATION	0.1762535455620487	WITHOUT_CLASSIFICATION
// TODO: check the return value here	IMPLEMENTATION	0.8237464544379512	IMPLEMENTATION	0.1762535455620487	WITHOUT_CLASSIFICATION
// TODO: Make sure all appropriate open flags are added to this check.	IMPLEMENTATION	0.5134404562186902	WITHOUT_CLASSIFICATION	0.48655954378130983	IMPLEMENTATION
//subList.clear(); // Sublist is supposed to share same backing store as list...TODO in RubyArray. //assertTrue(list.size() == 1);	IMPLEMENTATION	0.9999823959859147	WITHOUT_CLASSIFICATION	1.7604014085333014E-5	IMPLEMENTATION
// SSS FIXME: Cannot optimize this without assuming that Range.to_ary method has not redefined. // So for now, return null!	IMPLEMENTATION	0.9039653168360207	WITHOUT_CLASSIFICATION	0.09603468316397937	IMPLEMENTATION
// TODO Auto-generated method stub	IMPLEMENTATION	0.9998160719972035	IMPLEMENTATION	1.8392800279649806E-4	WITHOUT_CLASSIFICATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.9931401220313282	IMPLEMENTATION	0.00685987796867174	WITHOUT_CLASSIFICATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.9931401220313282	IMPLEMENTATION	0.00685987796867174	WITHOUT_CLASSIFICATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.9931401220313282	IMPLEMENTATION	0.00685987796867174	WITHOUT_CLASSIFICATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.9808535885879439	IMPLEMENTATION	0.019146411412056124	WITHOUT_CLASSIFICATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.9808535885879439	IMPLEMENTATION	0.019146411412056124	WITHOUT_CLASSIFICATION
// TODO: check for ascii string	IMPLEMENTATION	0.8822557707020658	WITHOUT_CLASSIFICATION	0.11774422929793403	IMPLEMENTATION
// filter out any Java primitive names // TODO: should check against all Java reserved names here, not just primitives	IMPLEMENTATION	0.7153494576818381	IMPLEMENTATION	0.284650542318162	WITHOUT_CLASSIFICATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.7760274951232691	WITHOUT_CLASSIFICATION	0.22397250487673093	IMPLEMENTATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.7760274951232691	WITHOUT_CLASSIFICATION	0.22397250487673093	IMPLEMENTATION
// TODO: missing additional logic for dealing with conflicting protected fields.	IMPLEMENTATION	0.8781698626383043	IMPLEMENTATION	0.1218301373616957	WITHOUT_CLASSIFICATION
// TODO: better detection when path is absolute or not. // If the path isn't absolute, then prepend the current working // directory to the path.	IMPLEMENTATION	0.5170606520425999	WITHOUT_CLASSIFICATION	0.4829393479574001	IMPLEMENTATION
// FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.9956116300671319	WITHOUT_CLASSIFICATION	0.004388369932868037	IMPLEMENTATION
// FIX replace type() == ... with isInstanceOf(...)	IMPLEMENTATION	0.9991723671768017	WITHOUT_CLASSIFICATION	8.276328231983392E-4	IMPLEMENTATION
/* TODO: MRI is just a when node.  We need this extra logic for IDE consumers (null in casenode statement should be implicit nil)*/	IMPLEMENTATION	0.950231835607956	WITHOUT_CLASSIFICATION	0.04976816439204413	IMPLEMENTATION
// TODO: This and recacheRespondsTo needed to be synchronized for JRUBY-3466, // but this degraded performance nearly 2x. It's still faster than MRI, but // a reanalysis of this code may show a faster way to ensure we're caching // safely.	IMPLEMENTATION	0.9998210035654637	IMPLEMENTATION	1.789964345363763E-4	WITHOUT_CLASSIFICATION
// TODO: adjust length so it won't fall in the middle  // of a multi-byte character. MRI's sprintf.c uses tables // in a modified version of regex.c, which assume some // particular  encoding for a given installation/application. // (See regex.c#re_mbcinit in ruby-1.8.5-p12)  // // This is only an issue if the user specifies a precision // that causes the string to be truncated. The same issue // would arise taking a substring of a ByteList-backed RubyString.	IMPLEMENTATION	0.999411467713713	WITHOUT_CLASSIFICATION	5.88532286286926E-4	IMPLEMENTATION
// set constants now that they're initialized	WITHOUT_CLASSIFICATION	0.9994374581209274	WITHOUT_CLASSIFICATION	5.625418790726417E-4	IMPLEMENTATION
// line 335	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
// Figure end-char.  '\0' is special to indicate begin=end and that no nesting?	WITHOUT_CLASSIFICATION	0.9985805678227279	WITHOUT_CLASSIFICATION	0.0014194321772722112	IMPLEMENTATION
// line 362	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 372	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
// line 391	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
/* ^D */	WITHOUT_CLASSIFICATION	0.9999970415563082	WITHOUT_CLASSIFICATION	2.9584436917105443E-6	IMPLEMENTATION
/* ^Z */	WITHOUT_CLASSIFICATION	0.9999970415563082	WITHOUT_CLASSIFICATION	2.9584436917105443E-6	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
//Do nothing	WITHOUT_CLASSIFICATION	0.9995739622588016	WITHOUT_CLASSIFICATION	4.2603774119842034E-4	IMPLEMENTATION
//Do nothing	WITHOUT_CLASSIFICATION	0.9995739622588016	WITHOUT_CLASSIFICATION	4.2603774119842034E-4	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999770041454429	WITHOUT_CLASSIFICATION	2.299585455712948E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999770041454429	WITHOUT_CLASSIFICATION	2.299585455712948E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999770041454429	WITHOUT_CLASSIFICATION	2.299585455712948E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999770041454429	WITHOUT_CLASSIFICATION	2.299585455712948E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999770041454429	WITHOUT_CLASSIFICATION	2.299585455712948E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999770041454429	WITHOUT_CLASSIFICATION	2.299585455712948E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999770041454429	WITHOUT_CLASSIFICATION	2.299585455712948E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999770041454429	WITHOUT_CLASSIFICATION	2.299585455712948E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999770041454429	WITHOUT_CLASSIFICATION	2.299585455712948E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999770041454429	WITHOUT_CLASSIFICATION	2.299585455712948E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999770041454429	WITHOUT_CLASSIFICATION	2.299585455712948E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999770041454429	WITHOUT_CLASSIFICATION	2.299585455712948E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999770041454429	WITHOUT_CLASSIFICATION	2.299585455712948E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999770041454429	WITHOUT_CLASSIFICATION	2.299585455712948E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999770041454429	WITHOUT_CLASSIFICATION	2.299585455712948E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999770041454429	WITHOUT_CLASSIFICATION	2.299585455712948E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999770041454429	WITHOUT_CLASSIFICATION	2.299585455712948E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999770041454429	WITHOUT_CLASSIFICATION	2.299585455712948E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999770041454429	WITHOUT_CLASSIFICATION	2.299585455712948E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999770041454429	WITHOUT_CLASSIFICATION	2.299585455712948E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999770041454429	WITHOUT_CLASSIFICATION	2.299585455712948E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999770041454429	WITHOUT_CLASSIFICATION	2.299585455712948E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999770041454429	WITHOUT_CLASSIFICATION	2.299585455712948E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999770041454429	WITHOUT_CLASSIFICATION	2.299585455712948E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999770041454429	WITHOUT_CLASSIFICATION	2.299585455712948E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999770041454429	WITHOUT_CLASSIFICATION	2.299585455712948E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999770041454429	WITHOUT_CLASSIFICATION	2.299585455712948E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999770041454429	WITHOUT_CLASSIFICATION	2.299585455712948E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999770041454429	WITHOUT_CLASSIFICATION	2.299585455712948E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999770041454429	WITHOUT_CLASSIFICATION	2.299585455712948E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999770041454429	WITHOUT_CLASSIFICATION	2.299585455712948E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999770041454429	WITHOUT_CLASSIFICATION	2.299585455712948E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999770041454429	WITHOUT_CLASSIFICATION	2.299585455712948E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999770041454429	WITHOUT_CLASSIFICATION	2.299585455712948E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999770041454429	WITHOUT_CLASSIFICATION	2.299585455712948E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999770041454429	WITHOUT_CLASSIFICATION	2.299585455712948E-5	IMPLEMENTATION
// return result	WITHOUT_CLASSIFICATION	0.9990745909936425	WITHOUT_CLASSIFICATION	9.254090063575157E-4	IMPLEMENTATION
// name	WITHOUT_CLASSIFICATION	0.999960271126756	WITHOUT_CLASSIFICATION	3.972887324408346E-5	IMPLEMENTATION
// Define System.getProperties() in ENV_JAVA	WITHOUT_CLASSIFICATION	0.9999184595899143	WITHOUT_CLASSIFICATION	8.154041008571328E-5	IMPLEMENTATION
// Accessor methods.	WITHOUT_CLASSIFICATION	0.9986839053834613	WITHOUT_CLASSIFICATION	0.0013160946165386952	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.998645523514345	WITHOUT_CLASSIFICATION	0.0013544764856550338	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.998645523514345	WITHOUT_CLASSIFICATION	0.0013544764856550338	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.998645523514345	WITHOUT_CLASSIFICATION	0.0013544764856550338	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.998645523514345	WITHOUT_CLASSIFICATION	0.0013544764856550338	IMPLEMENTATION
// call getpwent to fail early if unsupported	WITHOUT_CLASSIFICATION	0.9997933711627598	WITHOUT_CLASSIFICATION	2.066288372401947E-4	IMPLEMENTATION
// fall back on env entry for USER	WITHOUT_CLASSIFICATION	0.9989373135703145	WITHOUT_CLASSIFICATION	0.0010626864296855712	IMPLEMENTATION
// try to read grent to fail fast	WITHOUT_CLASSIFICATION	0.9984616949994876	WITHOUT_CLASSIFICATION	0.0015383050005124302	IMPLEMENTATION
// define ARGV and $* for this runtime	WITHOUT_CLASSIFICATION	0.9997497056578171	WITHOUT_CLASSIFICATION	2.502943421829557E-4	IMPLEMENTATION
// Version information:	WITHOUT_CLASSIFICATION	0.9996237203449804	WITHOUT_CLASSIFICATION	3.7627965501967623E-4	IMPLEMENTATION
// after defn of $stderr as the call may produce warnings	WITHOUT_CLASSIFICATION	0.999881995417216	WITHOUT_CLASSIFICATION	1.180045827840031E-4	IMPLEMENTATION
// ARGF, $< object	WITHOUT_CLASSIFICATION	0.9979151802888384	WITHOUT_CLASSIFICATION	0.0020848197111615345	IMPLEMENTATION
// if the environment variables can't be obtained, define an empty ENV	WITHOUT_CLASSIFICATION	0.9999958174374161	WITHOUT_CLASSIFICATION	4.182562583927748E-6	IMPLEMENTATION
// On platforms without a c-library accessable through JNA, getpid will return hashCode  // as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing // $$ on getpid() where available, we have the same semantics as MRI.	WITHOUT_CLASSIFICATION	0.9995040565676312	WITHOUT_CLASSIFICATION	4.959434323686891E-4	IMPLEMENTATION
//$@ returns nil if $!.backtrace is not an array	WITHOUT_CLASSIFICATION	0.9996645127977914	WITHOUT_CLASSIFICATION	3.3548720220853153E-4	IMPLEMENTATION
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9998182174554581	WITHOUT_CLASSIFICATION	1.8178254454187054E-4	IMPLEMENTATION
// MRI behavior: just plain '//' or '\\\\' are considered illegal on Windows.	WITHOUT_CLASSIFICATION	0.999779295124548	WITHOUT_CLASSIFICATION	2.2070487545192114E-4	IMPLEMENTATION
// this _is_ legal (when removing an undef)	WITHOUT_CLASSIFICATION	0.9993045106738411	WITHOUT_CLASSIFICATION	6.954893261588869E-4	IMPLEMENTATION
// What we passed to the constructor for method 'path'	WITHOUT_CLASSIFICATION	0.9516032555817201	WITHOUT_CLASSIFICATION	0.048396744418279805	IMPLEMENTATION
// ----- Ruby Class Methods ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.999768855345219	WITHOUT_CLASSIFICATION	2.3114465478107853E-4	IMPLEMENTATION
// // CONSTANT TABLE METHODS - pass to delegate //	WITHOUT_CLASSIFICATION	0.9982845737051829	WITHOUT_CLASSIFICATION	0.001715426294817135	IMPLEMENTATION
// We get canonical path to try and flatten the path out. // a dir '/subdir/..' should return as '/' // cnutter: Do we want to flatten path out?	WITHOUT_CLASSIFICATION	0.9980212565628993	WITHOUT_CLASSIFICATION	0.001978743437100674	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.998645523514345	WITHOUT_CLASSIFICATION	0.0013544764856550338	IMPLEMENTATION
// ----- Ruby Instance Methods -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9996617945324181	WITHOUT_CLASSIFICATION	3.3820546758190484E-4	IMPLEMENTATION
// Make sure any read()s after close fail.	WITHOUT_CLASSIFICATION	0.9997595713715468	WITHOUT_CLASSIFICATION	2.404286284531995E-4	IMPLEMENTATION
// ----- Helper Methods --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9996555190732875	WITHOUT_CLASSIFICATION	3.4448092671239176E-4	IMPLEMENTATION
// try to use POSIX for this first	WITHOUT_CLASSIFICATION	0.9976087609086549	WITHOUT_CLASSIFICATION	0.002391239091345	IMPLEMENTATION
// otherwise fall back on the old way	WITHOUT_CLASSIFICATION	0.9698463898446192	WITHOUT_CLASSIFICATION	0.030153610155380754	IMPLEMENTATION
// Proc class	WITHOUT_CLASSIFICATION	0.9992139300685124	WITHOUT_CLASSIFICATION	7.860699314875511E-4	IMPLEMENTATION
// No passed in block, lets check next outer frame for one ('Proc.new')	WITHOUT_CLASSIFICATION	0.9999564561714361	WITHOUT_CLASSIFICATION	4.354382856375698E-5	IMPLEMENTATION
// modify the block with a new backref/lastline-grabbing scope	WITHOUT_CLASSIFICATION	0.9988576923532148	WITHOUT_CLASSIFICATION	0.0011423076467852312	IMPLEMENTATION
// for future compatibility as constructors move toward not accepting metaclass?	WITHOUT_CLASSIFICATION	0.982361925315529	WITHOUT_CLASSIFICATION	0.01763807468447106	IMPLEMENTATION
//        case RUBY_HYBRID: //            backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); //            break;	WITHOUT_CLASSIFICATION	0.9992980984729152	WITHOUT_CLASSIFICATION	7.019015270848752E-4	IMPLEMENTATION
// This looks wrong, but it's the way MRI does it.	WITHOUT_CLASSIFICATION	0.9999270054168503	WITHOUT_CLASSIFICATION	7.299458314969669E-5	IMPLEMENTATION
// rb_exc_new3	WITHOUT_CLASSIFICATION	0.9986385284494232	WITHOUT_CLASSIFICATION	0.001361471550576766	IMPLEMENTATION
// NOTE: The indicies here match exactly the signal values; do not reorder	WITHOUT_CLASSIFICATION	0.9361542091687025	WITHOUT_CLASSIFICATION	0.06384579083129761	IMPLEMENTATION
//registerThreadDumpSignalHandler(runtime);	WITHOUT_CLASSIFICATION	0.9989612992561224	WITHOUT_CLASSIFICATION	0.0010387007438775661	IMPLEMENTATION
// IOT is also 6	WITHOUT_CLASSIFICATION	0.9993637926851214	WITHOUT_CLASSIFICATION	6.362073148785152E-4	IMPLEMENTATION
// CLD is also 20	WITHOUT_CLASSIFICATION	0.999216048231099	WITHOUT_CLASSIFICATION	7.839517689010032E-4	IMPLEMENTATION
// RubySignal	WITHOUT_CLASSIFICATION	0.9986385284494232	WITHOUT_CLASSIFICATION	0.001361471550576766	IMPLEMENTATION
// ZStream actually *isn't* allocatable	WITHOUT_CLASSIFICATION	0.9994506799056263	WITHOUT_CLASSIFICATION	5.493200943736228E-4	IMPLEMENTATION
// MRI behavior, enforced by tests	WITHOUT_CLASSIFICATION	0.9992791020864225	WITHOUT_CLASSIFICATION	7.208979135775E-4	IMPLEMENTATION
// it's safe since adler.update doesn't modify the array	WITHOUT_CLASSIFICATION	0.9998840909978421	WITHOUT_CLASSIFICATION	1.1590900215779538E-4	IMPLEMENTATION
// MRI behavior: in finished mode, we work as pass-through	WITHOUT_CLASSIFICATION	0.9998972264463558	WITHOUT_CLASSIFICATION	1.0277355364414367E-4	IMPLEMENTATION
// SYNC_FLUSH	WITHOUT_CLASSIFICATION	0.9986385284494232	WITHOUT_CLASSIFICATION	0.001361471550576766	IMPLEMENTATION
// By default, NO_FLUSH	WITHOUT_CLASSIFICATION	0.9997203289427553	WITHOUT_CLASSIFICATION	2.796710572446755E-4	IMPLEMENTATION
//io.finish();	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
// should invoke seek on realIo	WITHOUT_CLASSIFICATION	0.9971600911730689	WITHOUT_CLASSIFICATION	0.0028399088269311437	IMPLEMENTATION
// hmm...	WITHOUT_CLASSIFICATION	0.999975778940229	WITHOUT_CLASSIFICATION	2.422105977089807E-5	IMPLEMENTATION
// Called before any write to make sure the // header is always written before the first bytes	WITHOUT_CLASSIFICATION	0.9992590985219855	WITHOUT_CLASSIFICATION	7.409014780146332E-4	IMPLEMENTATION
// For JDK 1.4 we can use "cal.getTimeInMillis()"	WITHOUT_CLASSIFICATION	0.9865170105163857	WITHOUT_CLASSIFICATION	0.013482989483614179	IMPLEMENTATION
// We can just use dt, since it is immutable	WITHOUT_CLASSIFICATION	0.999754611373585	WITHOUT_CLASSIFICATION	2.453886264149427E-4	IMPLEMENTATION
// float number of seconds	WITHOUT_CLASSIFICATION	0.9997702900084494	WITHOUT_CLASSIFICATION	2.2970999155049368E-4	IMPLEMENTATION
// modified to match how hash is calculated in 1.8.2	WITHOUT_CLASSIFICATION	0.9978038964780873	WITHOUT_CLASSIFICATION	0.0021961035219126485	IMPLEMENTATION
// dump usec, not msec	WITHOUT_CLASSIFICATION	0.9950396507153805	WITHOUT_CLASSIFICATION	0.0049603492846195165	IMPLEMENTATION
/* Time class methods */	WITHOUT_CLASSIFICATION	0.9999748741820472	WITHOUT_CLASSIFICATION	2.5125817952786887E-5	IMPLEMENTATION
// marsaling dumps usec, not msec	WITHOUT_CLASSIFICATION	0.991899565455877	WITHOUT_CLASSIFICATION	0.008100434544122976	IMPLEMENTATION
// MRI accepts additional wday argument which appears to be ignored.	WITHOUT_CLASSIFICATION	0.9993388203466319	WITHOUT_CLASSIFICATION	6.611796533680868E-4	IMPLEMENTATION
// set up with min values and then add to allow rolling over	WITHOUT_CLASSIFICATION	0.9999932693613469	WITHOUT_CLASSIFICATION	6.7306386530863405E-6	IMPLEMENTATION
// the instant at which we will ask dtz what the difference between DST and // standard time is	WITHOUT_CLASSIFICATION	0.9981164646121947	WITHOUT_CLASSIFICATION	0.001883535387805297	IMPLEMENTATION
// if we might be moving this time from !DST -> DST, the offset is assumed // to be the same as it was just before we last moved from DST -> !DST	WITHOUT_CLASSIFICATION	0.9999999721125703	WITHOUT_CLASSIFICATION	2.788742972050138E-8	IMPLEMENTATION
// Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.	WITHOUT_CLASSIFICATION	0.9933755141529813	WITHOUT_CLASSIFICATION	0.006624485847018755	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999495525350193	WITHOUT_CLASSIFICATION	5.044746498070486E-5	IMPLEMENTATION
/* If the value will fit in a Fixnum, return one of those. */	WITHOUT_CLASSIFICATION	0.999998468086846	WITHOUT_CLASSIFICATION	1.5319131539497531E-6	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999584559756115	WITHOUT_CLASSIFICATION	4.154402438859343E-5	IMPLEMENTATION
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.996473139052984	WITHOUT_CLASSIFICATION	0.0035268609470161397	IMPLEMENTATION
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9905275405897109	WITHOUT_CLASSIFICATION	0.009472459410289093	IMPLEMENTATION
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9905275405897109	WITHOUT_CLASSIFICATION	0.009472459410289093	IMPLEMENTATION
// no bignorm here needed	WITHOUT_CLASSIFICATION	0.7634482293931971	IMPLEMENTATION	0.23655177060680285	WITHOUT_CLASSIFICATION
// wow, the only time we can use the java protocol ;)	WITHOUT_CLASSIFICATION	0.9982855462190298	WITHOUT_CLASSIFICATION	0.0017144537809702445	IMPLEMENTATION
// Pad with a 0	WITHOUT_CLASSIFICATION	0.9983318248550843	WITHOUT_CLASSIFICATION	0.0016681751449156995	IMPLEMENTATION
// BigInteger required a sign byte in incoming array	WITHOUT_CLASSIFICATION	0.9998876976040338	WITHOUT_CLASSIFICATION	1.1230239596621707E-4	IMPLEMENTATION
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9997847371969114	WITHOUT_CLASSIFICATION	2.1526280308855743E-4	IMPLEMENTATION
// We do this b/c make_tmpname might be overridden	WITHOUT_CLASSIFICATION	0.9993661100472881	WITHOUT_CLASSIFICATION	6.338899527118339E-4	IMPLEMENTATION
// ???	WITHOUT_CLASSIFICATION	0.9999775444725315	WITHOUT_CLASSIFICATION	2.2455527468579642E-5	IMPLEMENTATION
// PID	WITHOUT_CLASSIFICATION	0.999975778940229	WITHOUT_CLASSIFICATION	2.422105977089807E-5	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999584559756115	WITHOUT_CLASSIFICATION	4.154402438859343E-5	IMPLEMENTATION
// elements and trailing nils	WITHOUT_CLASSIFICATION	0.9999083856944136	WITHOUT_CLASSIFICATION	9.161430558634752E-5	IMPLEMENTATION
// Dir::tmpdir	WITHOUT_CLASSIFICATION	0.9986385284494232	WITHOUT_CLASSIFICATION	0.001361471550576766	IMPLEMENTATION
// volatile to ensure that initial nil-fill is visible to other threads	WITHOUT_CLASSIFICATION	0.9965150329226887	WITHOUT_CLASSIFICATION	0.00348496707731117	IMPLEMENTATION
/* Ruby arrays default to holding 16 elements, so we create an         * ArrayList of the same size if we're not told otherwise         */	WITHOUT_CLASSIFICATION	0.9999979542993123	WITHOUT_CLASSIFICATION	2.045700687673549E-6	IMPLEMENTATION
/* rb_ary_new2     * just allocates the internal array     */	WITHOUT_CLASSIFICATION	0.9999861006072951	WITHOUT_CLASSIFICATION	1.3899392704848966E-5	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999581839953888	WITHOUT_CLASSIFICATION	4.181600461120153E-5	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999581839953888	WITHOUT_CLASSIFICATION	4.181600461120153E-5	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999581839953888	WITHOUT_CLASSIFICATION	4.181600461120153E-5	IMPLEMENTATION
/* Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour     *      */	WITHOUT_CLASSIFICATION	0.9997628211656948	WITHOUT_CLASSIFICATION	2.3717883430518865E-4	IMPLEMENTATION
/* NEWOBJ and OBJSETUP equivalent     * fastest one, for shared arrays, optional objectspace     */	WITHOUT_CLASSIFICATION	0.9998857728252211	WITHOUT_CLASSIFICATION	1.1422717477892089E-4	IMPLEMENTATION
// Create global constants and variables	WITHOUT_CLASSIFICATION	0.9999906895899581	WITHOUT_CLASSIFICATION	9.310410041824334E-6	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9823545370077412	WITHOUT_CLASSIFICATION	0.01764546299225871	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9823545370077412	WITHOUT_CLASSIFICATION	0.01764546299225871	IMPLEMENTATION
// Windows does not support these functions, so we won't even try // This also matches Ruby behavior for JRUBY-2353.	WITHOUT_CLASSIFICATION	0.9993282555572646	WITHOUT_CLASSIFICATION	6.71744442735459E-4	IMPLEMENTATION
// There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and // newer one (US/Pacific, America/Los_Angeles). This pattern is to detect // the legacy TZ format in order to convert it to the newer format // understood by Java API.	WITHOUT_CLASSIFICATION	0.9995585565908799	WITHOUT_CLASSIFICATION	4.414434091200535E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9823545370077412	WITHOUT_CLASSIFICATION	0.01764546299225871	IMPLEMENTATION
// 1.9 seems to just do inspect for to_s now	WITHOUT_CLASSIFICATION	0.9999302355606432	WITHOUT_CLASSIFICATION	6.976443935671219E-5	IMPLEMENTATION
// possibly should not in object space	WITHOUT_CLASSIFICATION	0.997398799631209	WITHOUT_CLASSIFICATION	0.002601200368790952	IMPLEMENTATION
// only fill if there actually will remain trailing storage	WITHOUT_CLASSIFICATION	0.999988902964135	WITHOUT_CLASSIFICATION	1.1097035864988531E-5	IMPLEMENTATION
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9986385284494232	WITHOUT_CLASSIFICATION	0.001361471550576766	IMPLEMENTATION
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9986385284494232	WITHOUT_CLASSIFICATION	0.001361471550576766	IMPLEMENTATION
// from DUP_SETUP	WITHOUT_CLASSIFICATION	0.9996778634891894	WITHOUT_CLASSIFICATION	3.2213651081063337E-4	IMPLEMENTATION
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9995152370747703	WITHOUT_CLASSIFICATION	4.847629252296746E-4	IMPLEMENTATION
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9997428693311995	WITHOUT_CLASSIFICATION	2.571306688005428E-4	IMPLEMENTATION
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9997428693311995	WITHOUT_CLASSIFICATION	2.571306688005428E-4	IMPLEMENTATION
// Satisfy java.util.List interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9996116925509908	WITHOUT_CLASSIFICATION	3.88307449009221E-4	IMPLEMENTATION
// pre-set for the sake of terminating recursive calls	WITHOUT_CLASSIFICATION	0.9996447436785741	WITHOUT_CLASSIFICATION	3.552563214258696E-4	IMPLEMENTATION
/* root fiber */	WITHOUT_CLASSIFICATION	0.9998303514691922	WITHOUT_CLASSIFICATION	1.6964853080778084E-4	IMPLEMENTATION
// GMT+00:00 --> Etc/GMT, see "MRI behavior" // comment below.	WITHOUT_CLASSIFICATION	0.9997839497274705	WITHOUT_CLASSIFICATION	2.1605027252933717E-4	IMPLEMENTATION
//  See http://www.gzip.org/zlib/rfc-gzip.html	WITHOUT_CLASSIFICATION	0.9997074719272909	WITHOUT_CLASSIFICATION	2.925280727090878E-4	IMPLEMENTATION
// extras flag	WITHOUT_CLASSIFICATION	0.995401069273557	WITHOUT_CLASSIFICATION	0.004598930726442957	IMPLEMENTATION
// Zlib::NO_FLUSH	WITHOUT_CLASSIFICATION	0.9986385284494232	WITHOUT_CLASSIFICATION	0.001361471550576766	IMPLEMENTATION
// ...nothing	WITHOUT_CLASSIFICATION	0.9986385284494232	WITHOUT_CLASSIFICATION	0.001361471550576766	IMPLEMENTATION
// utility method	WITHOUT_CLASSIFICATION	0.9919950253127425	WITHOUT_CLASSIFICATION	0.008004974687257426	IMPLEMENTATION
// Prepare LoadService and load path	WITHOUT_CLASSIFICATION	0.9997666051544734	WITHOUT_CLASSIFICATION	2.333948455266037E-4	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999584559756115	WITHOUT_CLASSIFICATION	4.154402438859343E-5	IMPLEMENTATION
// flags // 4 bytes of modified time	WITHOUT_CLASSIFICATION	0.999488532366141	WITHOUT_CLASSIFICATION	5.114676338591029E-4	IMPLEMENTATION
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9993875481148932	WITHOUT_CLASSIFICATION	6.124518851067592E-4	IMPLEMENTATION
// 1.8 "include?"	WITHOUT_CLASSIFICATION	0.9986385284494232	WITHOUT_CLASSIFICATION	0.001361471550576766	IMPLEMENTATION
// any BigInteger is bigger than Fixnum and we don't have FIXABLE	WITHOUT_CLASSIFICATION	0.999399613112598	WITHOUT_CLASSIFICATION	6.003868874021038E-4	IMPLEMENTATION
// beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal	WITHOUT_CLASSIFICATION	0.9989242433281194	WITHOUT_CLASSIFICATION	0.0010757566718807158	IMPLEMENTATION
// MRI does it!	WITHOUT_CLASSIFICATION	0.999678204124424	WITHOUT_CLASSIFICATION	3.2179587557600703E-4	IMPLEMENTATION
// won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999580696150757	WITHOUT_CLASSIFICATION	4.1930384924253916E-5	IMPLEMENTATION
// it won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999174156927898	WITHOUT_CLASSIFICATION	8.258430721028706E-5	IMPLEMENTATION
// RubyClassPathVariable	WITHOUT_CLASSIFICATION	0.9996237203449804	WITHOUT_CLASSIFICATION	3.7627965501967623E-4	IMPLEMENTATION
// not to be confused with RubyObject's flags	WITHOUT_CLASSIFICATION	0.9843420059825729	WITHOUT_CLASSIFICATION	0.01565799401742713	IMPLEMENTATION
// second argument is allowed, but ignored (MRI)	WITHOUT_CLASSIFICATION	0.999832973120283	WITHOUT_CLASSIFICATION	1.670268797169644E-4	IMPLEMENTATION
// we are presumably running a precompiled class; load directly	WITHOUT_CLASSIFICATION	0.9996575718144686	WITHOUT_CLASSIFICATION	3.424281855314169E-4	IMPLEMENTATION
// terminate; tryCompile will have printed out an error and we're done	WITHOUT_CLASSIFICATION	0.9999653440467301	WITHOUT_CLASSIFICATION	3.465595326984208E-5	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999589557532874	WITHOUT_CLASSIFICATION	4.104424671272434E-5	IMPLEMENTATION
// do nothing, this iteration restarts	WITHOUT_CLASSIFICATION	0.998558176877218	WITHOUT_CLASSIFICATION	0.0014418231227819633	IMPLEMENTATION
// recheck condition	WITHOUT_CLASSIFICATION	0.9987355959966275	WITHOUT_CLASSIFICATION	0.0012644040033724935	IMPLEMENTATION
// Get the main threadcontext (gets constructed for us)	WITHOUT_CLASSIFICATION	0.9998901339070051	WITHOUT_CLASSIFICATION	1.0986609299492043E-4	IMPLEMENTATION
// Construct key services	WITHOUT_CLASSIFICATION	0.9996528302433747	WITHOUT_CLASSIFICATION	3.471697566253326E-4	IMPLEMENTATION
// initialize the root of the class hierarchy completely	WITHOUT_CLASSIFICATION	0.9998958284469571	WITHOUT_CLASSIFICATION	1.0417155304279066E-4	IMPLEMENTATION
// Construct the top-level execution frame and scope for the main thread	WITHOUT_CLASSIFICATION	0.9998203244418405	WITHOUT_CLASSIFICATION	1.7967555815938619E-4	IMPLEMENTATION
// Initialize all the core classes	WITHOUT_CLASSIFICATION	0.9997519829785335	WITHOUT_CLASSIFICATION	2.480170214664489E-4	IMPLEMENTATION
// Initialize the "dummy" class used as a marker	WITHOUT_CLASSIFICATION	0.9998358642997897	WITHOUT_CLASSIFICATION	1.6413570021045894E-4	IMPLEMENTATION
// Initialize Kernel and include into Object	WITHOUT_CLASSIFICATION	0.9997074954940929	WITHOUT_CLASSIFICATION	2.9250450590710637E-4	IMPLEMENTATION
// Object is ready, create top self	WITHOUT_CLASSIFICATION	0.9996789357887045	WITHOUT_CLASSIFICATION	3.21064211295446E-4	IMPLEMENTATION
// Pre-create all the core classes potentially referenced during startup	WITHOUT_CLASSIFICATION	0.9998242467853868	WITHOUT_CLASSIFICATION	1.7575321461320954E-4	IMPLEMENTATION
// Math depends on all numeric types	WITHOUT_CLASSIFICATION	0.9970286202138379	WITHOUT_CLASSIFICATION	0.0029713797861620444	IMPLEMENTATION
// depends on IO, FileTest	WITHOUT_CLASSIFICATION	0.9993594981770827	WITHOUT_CLASSIFICATION	6.405018229172992E-4	IMPLEMENTATION
// initialize builtin libraries	WITHOUT_CLASSIFICATION	0.9994818588215811	WITHOUT_CLASSIFICATION	5.181411784188811E-4	IMPLEMENTATION
// Require in all libraries specified on command line	WITHOUT_CLASSIFICATION	0.9998523639742375	WITHOUT_CLASSIFICATION	1.476360257625564E-4	IMPLEMENTATION
// Bootstrap the top of the hierarchy	WITHOUT_CLASSIFICATION	0.99954172780113	WITHOUT_CLASSIFICATION	4.582721988700031E-4	IMPLEMENTATION
// we try to get the classloader that loaded JRuby, falling back on System	WITHOUT_CLASSIFICATION	0.9954282622801529	WITHOUT_CLASSIFICATION	0.0045717377198471	IMPLEMENTATION
// determine spacing	WITHOUT_CLASSIFICATION	0.9991747917003387	WITHOUT_CLASSIFICATION	8.252082996613314E-4	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999865552637154	WITHOUT_CLASSIFICATION	1.344473628466404E-5	IMPLEMENTATION
// For JSR 223 support: see http://scripting.java.net/	WITHOUT_CLASSIFICATION	0.9996868892746108	WITHOUT_CLASSIFICATION	3.1311072538929536E-4	IMPLEMENTATION
// use this for JRuby-internal finalizers	WITHOUT_CLASSIFICATION	0.9990185104453536	WITHOUT_CLASSIFICATION	9.814895546463645E-4	IMPLEMENTATION
// this method is for finalizers registered via ObjectSpace	WITHOUT_CLASSIFICATION	0.9962192057730291	WITHOUT_CLASSIFICATION	0.0037807942269709144	IMPLEMENTATION
// new factory methods ------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9996164934244083	WITHOUT_CLASSIFICATION	3.8350657559178526E-4	IMPLEMENTATION
//        assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9978953144228645	WITHOUT_CLASSIFICATION	0.0021046855771356256	IMPLEMENTATION
// Equivalent of Data_Wrap_Struct	WITHOUT_CLASSIFICATION	0.9995901205773174	WITHOUT_CLASSIFICATION	4.098794226826347E-4	IMPLEMENTATION
// default: don't retain	WITHOUT_CLASSIFICATION	0.9996302215095776	WITHOUT_CLASSIFICATION	3.6977849042232143E-4	IMPLEMENTATION
// ChannelDescriptors opened by sysopen are cached to avoid collection	WITHOUT_CLASSIFICATION	0.9979204763318178	WITHOUT_CLASSIFICATION	0.0020795236681822246	IMPLEMENTATION
// Default objects	WITHOUT_CLASSIFICATION	0.9974718529848596	WITHOUT_CLASSIFICATION	0.0025281470151403093	IMPLEMENTATION
// record separator var, to speed up io ops that use it	WITHOUT_CLASSIFICATION	0.9950425031930354	WITHOUT_CLASSIFICATION	0.004957496806964601	IMPLEMENTATION
// former java.lang.System concepts now internalized for MVM	WITHOUT_CLASSIFICATION	0.9997803609021972	WITHOUT_CLASSIFICATION	2.1963909780275414E-4	IMPLEMENTATION
// Java support	WITHOUT_CLASSIFICATION	0.9869670511885368	WITHOUT_CLASSIFICATION	0.013032948811463232	IMPLEMENTATION
// Parser stats	WITHOUT_CLASSIFICATION	0.9986532922875172	WITHOUT_CLASSIFICATION	0.0013467077124827776	IMPLEMENTATION
// Compilation	WITHOUT_CLASSIFICATION	0.9986385284494232	WITHOUT_CLASSIFICATION	0.001361471550576766	IMPLEMENTATION
// can't read non-standard properties	WITHOUT_CLASSIFICATION	0.9993559830919281	WITHOUT_CLASSIFICATION	6.440169080719685E-4	IMPLEMENTATION
// can't create custom classloaders	WITHOUT_CLASSIFICATION	0.9997400491459036	WITHOUT_CLASSIFICATION	2.599508540964629E-4	IMPLEMENTATION
// mutex that controls modifications of user-defined finalizers	WITHOUT_CLASSIFICATION	0.9988522469900701	WITHOUT_CLASSIFICATION	0.001147753009929918	IMPLEMENTATION
// mutex that controls modifications of internal finalizers	WITHOUT_CLASSIFICATION	0.9991256243461505	WITHOUT_CLASSIFICATION	8.74375653849406E-4	IMPLEMENTATION
// A thread pool to use for executing this runtime's Ruby threads	WITHOUT_CLASSIFICATION	0.9960025587997902	WITHOUT_CLASSIFICATION	0.003997441200209848	IMPLEMENTATION
// A global object lock for class hierarchy mutations	WITHOUT_CLASSIFICATION	0.9999737801534534	WITHOUT_CLASSIFICATION	2.6219846546604E-5	IMPLEMENTATION
// initial spaces // spaces before "at"	WITHOUT_CLASSIFICATION	0.9997404643906891	WITHOUT_CLASSIFICATION	2.5953560931093854E-4	IMPLEMENTATION
// event name // filename // line numbers should be 1-based	WITHOUT_CLASSIFICATION	0.9999216577455046	WITHOUT_CLASSIFICATION	7.834225449539637E-5	IMPLEMENTATION
// The method is intentionally not public, since it typically should // not be used outside of the core.	WITHOUT_CLASSIFICATION	0.9743885839310916	WITHOUT_CLASSIFICATION	0.025611416068908415	IMPLEMENTATION
// Note: this field and the following static initializer // must be located be in this order!	WITHOUT_CLASSIFICATION	0.9998609308063016	WITHOUT_CLASSIFICATION	1.390691936984553E-4	IMPLEMENTATION
// Contains a list of all blocks (as Procs) that should be called when // the runtime environment exits.	WITHOUT_CLASSIFICATION	0.9996925869851618	WITHOUT_CLASSIFICATION	3.0741301483810197E-4	IMPLEMENTATION
// quoted-printable	WITHOUT_CLASSIFICATION	0.9986385284494232	WITHOUT_CLASSIFICATION	0.001361471550576766	IMPLEMENTATION
// default options	WITHOUT_CLASSIFICATION	0.9997166810515573	WITHOUT_CLASSIFICATION	2.833189484426558E-4	IMPLEMENTATION
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9986385284494232	WITHOUT_CLASSIFICATION	0.001361471550576766	IMPLEMENTATION
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9986385284494232	WITHOUT_CLASSIFICATION	0.001361471550576766	IMPLEMENTATION
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9986385284494232	WITHOUT_CLASSIFICATION	0.001361471550576766	IMPLEMENTATION
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9986385284494232	WITHOUT_CLASSIFICATION	0.001361471550576766	IMPLEMENTATION
// EUC-JP	WITHOUT_CLASSIFICATION	0.999975778940229	WITHOUT_CLASSIFICATION	2.422105977089807E-5	IMPLEMENTATION
// EUC-JP	WITHOUT_CLASSIFICATION	0.999975778940229	WITHOUT_CLASSIFICATION	2.422105977089807E-5	IMPLEMENTATION
// UTF-8	WITHOUT_CLASSIFICATION	0.999975778940229	WITHOUT_CLASSIFICATION	2.422105977089807E-5	IMPLEMENTATION
// UTF-8	WITHOUT_CLASSIFICATION	0.999975778940229	WITHOUT_CLASSIFICATION	2.422105977089807E-5	IMPLEMENTATION
// long name option	WITHOUT_CLASSIFICATION	0.9988988291231348	WITHOUT_CLASSIFICATION	0.0011011708768652892	IMPLEMENTATION
// conversion	WITHOUT_CLASSIFICATION	0.9986484479265482	WITHOUT_CLASSIFICATION	0.0013515520734517644	IMPLEMENTATION
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999569242809966	WITHOUT_CLASSIFICATION	4.307571900348299E-5	IMPLEMENTATION
// string doesn't share any resources	WITHOUT_CLASSIFICATION	0.999981842788057	WITHOUT_CLASSIFICATION	1.8157211943069746E-5	IMPLEMENTATION
// string has it's own ByteList, but it's pointing to a shared buffer (byte[])	WITHOUT_CLASSIFICATION	0.9999784676360653	WITHOUT_CLASSIFICATION	2.1532363934665115E-5	IMPLEMENTATION
// string doesn't have it's own ByteList (values)	WITHOUT_CLASSIFICATION	0.9999456477096826	WITHOUT_CLASSIFICATION	5.4352290317501394E-5	IMPLEMENTATION
// ENC_CODERANGE_ASCIIONLY	WITHOUT_CLASSIFICATION	0.9996237203449804	WITHOUT_CLASSIFICATION	3.7627965501967623E-4	IMPLEMENTATION
// rb_enc_str_asciionly_p	WITHOUT_CLASSIFICATION	0.9996237203449804	WITHOUT_CLASSIFICATION	3.7627965501967623E-4	IMPLEMENTATION
// rb_enc_str_coderange	WITHOUT_CLASSIFICATION	0.9996237203449804	WITHOUT_CLASSIFICATION	3.7627965501967623E-4	IMPLEMENTATION
// rb_str_hash_cmp	WITHOUT_CLASSIFICATION	0.9986385284494232	WITHOUT_CLASSIFICATION	0.001361471550576766	IMPLEMENTATION
// Deprecated String construction routines	WITHOUT_CLASSIFICATION	0.9994348155944384	WITHOUT_CLASSIFICATION	5.651844055615554E-4	IMPLEMENTATION
// String construction routines by NOT byte[] buffer and NOT making the target String shared 	WITHOUT_CLASSIFICATION	0.9997130032012317	WITHOUT_CLASSIFICATION	2.869967987682406E-4	IMPLEMENTATION
/* rb_str_subseq */	WITHOUT_CLASSIFICATION	0.9998335097239774	WITHOUT_CLASSIFICATION	1.6649027602250264E-4	IMPLEMENTATION
// no need to assign encoding, same bytelist shared	WITHOUT_CLASSIFICATION	0.9969384920602757	WITHOUT_CLASSIFICATION	0.0030615079397242426	IMPLEMENTATION
// if len == 0 then shared empty	WITHOUT_CLASSIFICATION	0.9999935260804764	WITHOUT_CLASSIFICATION	6.4739195236434754E-6	IMPLEMENTATION
/* rb_str_cmp_m */	WITHOUT_CLASSIFICATION	0.9998335097239774	WITHOUT_CLASSIFICATION	1.6649027602250264E-4	IMPLEMENTATION
// we limit to int because ByteBuffer can only allocate int sizes	WITHOUT_CLASSIFICATION	0.997257480197662	WITHOUT_CLASSIFICATION	0.0027425198023380316	IMPLEMENTATION
// // rb_str_buf_append	WITHOUT_CLASSIFICATION	0.9996237203449804	WITHOUT_CLASSIFICATION	3.7627965501967623E-4	IMPLEMENTATION
// encoding doesn't have to be copied.	WITHOUT_CLASSIFICATION	0.9998884246447032	WITHOUT_CLASSIFICATION	1.1157535529687791E-4	IMPLEMENTATION
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.99021830782851	WITHOUT_CLASSIFICATION	0.009781692171490008	IMPLEMENTATION
// must not reallocate	WITHOUT_CLASSIFICATION	0.9912166752398389	WITHOUT_CLASSIFICATION	0.008783324760161134	IMPLEMENTATION
// Illegal combination	WITHOUT_CLASSIFICATION	0.9996237203449804	WITHOUT_CLASSIFICATION	3.7627965501967623E-4	IMPLEMENTATION
// use 1.8 impl	WITHOUT_CLASSIFICATION	0.9974272424886795	WITHOUT_CLASSIFICATION	0.002572757511320454	IMPLEMENTATION
/* RubyString aka rb_string_value */	WITHOUT_CLASSIFICATION	0.9999246867910838	WITHOUT_CLASSIFICATION	7.53132089162311E-5	IMPLEMENTATION
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999391295130733	WITHOUT_CLASSIFICATION	6.087048692667369E-5	IMPLEMENTATION
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999880405385242	WITHOUT_CLASSIFICATION	1.1959461475849684E-5	IMPLEMENTATION
/* len + margin */	WITHOUT_CLASSIFICATION	0.9998764191763304	WITHOUT_CLASSIFICATION	1.2358082366963286E-4	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9930460165310406	WITHOUT_CLASSIFICATION	0.006953983468959265	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9930460165310406	WITHOUT_CLASSIFICATION	0.006953983468959265	IMPLEMENTATION
/* copy pre-match substr */	WITHOUT_CLASSIFICATION	0.9999839771640712	WITHOUT_CLASSIFICATION	1.6022835928892892E-5	IMPLEMENTATION
// string given	WITHOUT_CLASSIFICATION	0.9997260691709497	WITHOUT_CLASSIFICATION	2.7393082905025995E-4	IMPLEMENTATION
// hash given	WITHOUT_CLASSIFICATION	0.9970224625687287	WITHOUT_CLASSIFICATION	0.002977537431271327	IMPLEMENTATION
// This represents left most digit in a set of incremented // values?  Therefore leftmost numeric must be '1' and not '0' // 999 -> 1000, not 999 -> 0000.  whereas chars should be // zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"	WITHOUT_CLASSIFICATION	0.9999947539319226	WITHOUT_CLASSIFICATION	5.246068077352465E-6	IMPLEMENTATION
/* substring longer than string */	WITHOUT_CLASSIFICATION	0.9999931496295513	WITHOUT_CLASSIFICATION	6.850370448698676E-6	IMPLEMENTATION
/* rb_str_substr */	WITHOUT_CLASSIFICATION	0.9998335097239774	WITHOUT_CLASSIFICATION	1.6649027602250264E-4	IMPLEMENTATION
// nothing	WITHOUT_CLASSIFICATION	0.999995509075579	WITHOUT_CLASSIFICATION	4.4909244209988235E-6	IMPLEMENTATION
// nothing	WITHOUT_CLASSIFICATION	0.999995509075579	WITHOUT_CLASSIFICATION	4.4909244209988235E-6	IMPLEMENTATION
/* rb_str_splice */	WITHOUT_CLASSIFICATION	0.9998335097239774	WITHOUT_CLASSIFICATION	1.6649027602250264E-4	IMPLEMENTATION
// TODO: keep cr // TODO: rb_str_splice_0	WITHOUT_CLASSIFICATION	0.5711088104958121	IMPLEMENTATION	0.4288911895041879	WITHOUT_CLASSIFICATION
// keep cr ?	WITHOUT_CLASSIFICATION	0.9992161573488009	WITHOUT_CLASSIFICATION	7.838426511990621E-4	IMPLEMENTATION
// keep cr ?	WITHOUT_CLASSIFICATION	0.9992161573488009	WITHOUT_CLASSIFICATION	7.838426511990621E-4	IMPLEMENTATION
/* wrapped to \0...\0.  search next valid char. */	WITHOUT_CLASSIFICATION	0.9999354333217868	WITHOUT_CLASSIFICATION	6.456667821320461E-5	IMPLEMENTATION
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9983372532323616	WITHOUT_CLASSIFICATION	0.0016627467676384453	IMPLEMENTATION
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9983372532323616	WITHOUT_CLASSIFICATION	0.0016627467676384453	IMPLEMENTATION
// modified	WITHOUT_CLASSIFICATION	0.996775812832224	WITHOUT_CLASSIFICATION	0.003224187167775886	IMPLEMENTATION
// modified	WITHOUT_CLASSIFICATION	0.996775812832224	WITHOUT_CLASSIFICATION	0.003224187167775886	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.999975778940229	WITHOUT_CLASSIFICATION	2.422105977089807E-5	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.999975778940229	WITHOUT_CLASSIFICATION	2.422105977089807E-5	IMPLEMENTATION
// QTRUE	WITHOUT_CLASSIFICATION	0.999975778940229	WITHOUT_CLASSIFICATION	2.422105977089807E-5	IMPLEMENTATION
/* retrieve last replacer */	WITHOUT_CLASSIFICATION	0.999973699589601	WITHOUT_CLASSIFICATION	2.6300410398917855E-5	IMPLEMENTATION
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9845508297329677	WITHOUT_CLASSIFICATION	0.015449170267032231	IMPLEMENTATION
// long size * bits in byte	WITHOUT_CLASSIFICATION	0.9999741482529565	WITHOUT_CLASSIFICATION	2.5851747043508586E-5	IMPLEMENTATION
// from encoding, special-casing ASCII* to ASCII	WITHOUT_CLASSIFICATION	0.9997316975049542	WITHOUT_CLASSIFICATION	2.68302495045907E-4	IMPLEMENTATION
// to encoding, same special-casing	WITHOUT_CLASSIFICATION	0.9990787898305982	WITHOUT_CLASSIFICATION	9.212101694017271E-4	IMPLEMENTATION
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9998874534163776	WITHOUT_CLASSIFICATION	1.1254658362241121E-4	IMPLEMENTATION
// decode from "from" and encode to "to"	WITHOUT_CLASSIFICATION	0.9997931929114939	WITHOUT_CLASSIFICATION	2.0680708850611196E-4	IMPLEMENTATION
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9998874534163776	WITHOUT_CLASSIFICATION	1.1254658362241121E-4	IMPLEMENTATION
//Kernel is the only Module that doesn't need an implementor	WITHOUT_CLASSIFICATION	0.9993549765840588	WITHOUT_CLASSIFICATION	6.450234159411595E-4	IMPLEMENTATION
// no binding given, use (eval)	WITHOUT_CLASSIFICATION	0.9990035062804742	WITHOUT_CLASSIFICATION	9.96493719525751E-4	IMPLEMENTATION
// interned, OK for "fast" methods	WITHOUT_CLASSIFICATION	0.999389717828231	WITHOUT_CLASSIFICATION	6.102821717690692E-4	IMPLEMENTATION
// File to be loaded by autoload has already been or is being loaded.	WITHOUT_CLASSIFICATION	0.9993155935386757	WITHOUT_CLASSIFICATION	6.84406461324222E-4	IMPLEMENTATION
// rb_cstr_to_dbl case	WITHOUT_CLASSIFICATION	0.9996106653378	WITHOUT_CLASSIFICATION	3.8933466220000135E-4	IMPLEMENTATION
// We break if we know this sleep was explicitly woken up/interrupted	WITHOUT_CLASSIFICATION	0.9996165597591014	WITHOUT_CLASSIFICATION	3.8344024089854897E-4	IMPLEMENTATION
// exec process, create IO with process	WITHOUT_CLASSIFICATION	0.9995113463513859	WITHOUT_CLASSIFICATION	4.886536486141173E-4	IMPLEMENTATION
// Zero sleeps forever	WITHOUT_CLASSIFICATION	0.9996237203449804	WITHOUT_CLASSIFICATION	3.7627965501967623E-4	IMPLEMENTATION
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9912394872742898	WITHOUT_CLASSIFICATION	0.008760512725710188	IMPLEMENTATION
// Explicit zero in MRI returns immediately	WITHOUT_CLASSIFICATION	0.9999372996468271	WITHOUT_CLASSIFICATION	6.270035317298923E-5	IMPLEMENTATION
// Spurious wakeup-loop	WITHOUT_CLASSIFICATION	0.9996237203449804	WITHOUT_CLASSIFICATION	3.7627965501967623E-4	IMPLEMENTATION
// adjusts paths started with '/' or '\\', on windows.	WITHOUT_CLASSIFICATION	0.9973666877192461	WITHOUT_CLASSIFICATION	0.002633312280753891	IMPLEMENTATION
// file not given	WITHOUT_CLASSIFICATION	0.8992017560945998	WITHOUT_CLASSIFICATION	0.10079824390540024	IMPLEMENTATION
// string to eval	WITHOUT_CLASSIFICATION	0.9997707860469124	WITHOUT_CLASSIFICATION	2.292139530875769E-4	IMPLEMENTATION
// binding given, use binding's file	WITHOUT_CLASSIFICATION	0.996771953954964	WITHOUT_CLASSIFICATION	0.003228046045036073	IMPLEMENTATION
// ?g  | boolean | True if file1 has the \CF{setgid} bit	WITHOUT_CLASSIFICATION	0.9999690563055141	WITHOUT_CLASSIFICATION	3.0943694485855486E-5	IMPLEMENTATION
// bomb out, it's not a binding or a proc	WITHOUT_CLASSIFICATION	0.9785119772361466	WITHOUT_CLASSIFICATION	0.021488022763853483	IMPLEMENTATION
// Ordering of array traversal not important, just intuitive	WITHOUT_CLASSIFICATION	0.9990227360468238	WITHOUT_CLASSIFICATION	9.77263953176205E-4	IMPLEMENTATION
//Catch active, throw for catch to handle	WITHOUT_CLASSIFICATION	0.9936279289273928	WITHOUT_CLASSIFICATION	0.006372071072607272	IMPLEMENTATION
// No catch active for this throw	WITHOUT_CLASSIFICATION	0.9998274769133846	WITHOUT_CLASSIFICATION	1.7252308661543363E-4	IMPLEMENTATION
// without full tracing, many events will not fire	WITHOUT_CLASSIFICATION	0.9926777081587941	WITHOUT_CLASSIFICATION	0.007322291841205908	IMPLEMENTATION
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9997555374160474	WITHOUT_CLASSIFICATION	2.4446258395257513E-4	IMPLEMENTATION
// MRI behavior: use first byte of string value if len > 0	WITHOUT_CLASSIFICATION	0.9999919767259255	WITHOUT_CLASSIFICATION	8.023274074425404E-6	IMPLEMENTATION
// MRI behavior: now check arg count	WITHOUT_CLASSIFICATION	0.9995155815462524	WITHOUT_CLASSIFICATION	4.844184537474795E-4	IMPLEMENTATION
// ?A  | Time    | Last access time for file1	WITHOUT_CLASSIFICATION	0.9996885360612927	WITHOUT_CLASSIFICATION	3.1146393870734845E-4	IMPLEMENTATION
// ?b  | boolean | True if file1 is a block device	WITHOUT_CLASSIFICATION	0.9999157324313118	WITHOUT_CLASSIFICATION	8.426756868817055E-5	IMPLEMENTATION
// ?c  | boolean | True if file1 is a character device	WITHOUT_CLASSIFICATION	0.9999612853624028	WITHOUT_CLASSIFICATION	3.871463759717456E-5	IMPLEMENTATION
// ?C  | Time    | Last change time for file1	WITHOUT_CLASSIFICATION	0.9998672176205194	WITHOUT_CLASSIFICATION	1.3278237948063582E-4	IMPLEMENTATION
// ?d  | boolean | True if file1 exists and is a directory	WITHOUT_CLASSIFICATION	0.9999943745306473	WITHOUT_CLASSIFICATION	5.625469352646648E-6	IMPLEMENTATION
// ?e  | boolean | True if file1 exists	WITHOUT_CLASSIFICATION	0.9999387417018933	WITHOUT_CLASSIFICATION	6.12582981067439E-5	IMPLEMENTATION
// ?f  | boolean | True if file1 exists and is a regular file	WITHOUT_CLASSIFICATION	0.9999298809912964	WITHOUT_CLASSIFICATION	7.011900870359547E-5	IMPLEMENTATION
// ?G  | boolean | True if file1 exists and has a group ownership equal to the caller's group	WITHOUT_CLASSIFICATION	0.999969054869598	WITHOUT_CLASSIFICATION	3.0945130402052115E-5	IMPLEMENTATION
// ?k  | boolean | True if file1 exists and has the sticky bit set	WITHOUT_CLASSIFICATION	0.9999760524439026	WITHOUT_CLASSIFICATION	2.394755609735868E-5	IMPLEMENTATION
// ?M  | Time    | Last modification time for file1	WITHOUT_CLASSIFICATION	0.9998062534505496	WITHOUT_CLASSIFICATION	1.9374654945028002E-4	IMPLEMENTATION
// ?o  | boolean | True if file1 exists and is owned by the caller's effective uid	WITHOUT_CLASSIFICATION	0.9999647547402915	WITHOUT_CLASSIFICATION	3.5245259708665556E-5	IMPLEMENTATION
// ?O  | boolean | True if file1 exists and is owned by the caller's real uid 	WITHOUT_CLASSIFICATION	0.9999635877594597	WITHOUT_CLASSIFICATION	3.6412240540232694E-5	IMPLEMENTATION
// ?p  | boolean | True if file1 exists and is a fifo	WITHOUT_CLASSIFICATION	0.9999743736006244	WITHOUT_CLASSIFICATION	2.5626399375585135E-5	IMPLEMENTATION
// ?r  | boolean | True if file1 is readable by the effective uid/gid of the caller	WITHOUT_CLASSIFICATION	0.9999671518275095	WITHOUT_CLASSIFICATION	3.2848172490425285E-5	IMPLEMENTATION
// ?s  | int/nil | If file1 has nonzero size, return the size, otherwise nil	WITHOUT_CLASSIFICATION	0.9980100296161494	WITHOUT_CLASSIFICATION	0.0019899703838506	IMPLEMENTATION
// ?S  | boolean | True if file1 exists and is a socket	WITHOUT_CLASSIFICATION	0.9999743736006244	WITHOUT_CLASSIFICATION	2.5626399375585135E-5	IMPLEMENTATION
// ?u  | boolean | True if file1 has the setuid bit set	WITHOUT_CLASSIFICATION	0.999966244697974	WITHOUT_CLASSIFICATION	3.375530202593271E-5	IMPLEMENTATION
// ?x  | boolean | True if file1 exists and is executable by the effective uid/gid	WITHOUT_CLASSIFICATION	0.999961207657904	WITHOUT_CLASSIFICATION	3.879234209602903E-5	IMPLEMENTATION
// ?X  | boolean | True if file1 exists and is executable by the real uid/gid	WITHOUT_CLASSIFICATION	0.9999599232368467	WITHOUT_CLASSIFICATION	4.007676315330516E-5	IMPLEMENTATION
// ?z  | boolean | True if file1 exists and has a zero length	WITHOUT_CLASSIFICATION	0.9999738543973821	WITHOUT_CLASSIFICATION	2.6145602617950835E-5	IMPLEMENTATION
// ?=  | boolean | True if the modification times of file1 and file2 are equal	WITHOUT_CLASSIFICATION	0.9999863484494886	WITHOUT_CLASSIFICATION	1.3651550511399757E-5	IMPLEMENTATION
// ?<  | boolean | True if the modification time of file1 is prior to that of file2	WITHOUT_CLASSIFICATION	0.999923840092738	WITHOUT_CLASSIFICATION	7.61599072619634E-5	IMPLEMENTATION
// ?>  | boolean | True if the modification time of file1 is after that of file2	WITHOUT_CLASSIFICATION	0.9999669154776434	WITHOUT_CLASSIFICATION	3.308452235659055E-5	IMPLEMENTATION
// ?-  | boolean | True if file1 and file2 are identical	WITHOUT_CLASSIFICATION	0.9999736234390062	WITHOUT_CLASSIFICATION	2.6376560993794238E-5	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9991095430989303	WITHOUT_CLASSIFICATION	8.904569010696275E-4	IMPLEMENTATION
// Error info is per-thread	WITHOUT_CLASSIFICATION	0.9997320373372883	WITHOUT_CLASSIFICATION	2.6796266271166366E-4	IMPLEMENTATION
// init errorInfo to nil	WITHOUT_CLASSIFICATION	0.9993081340437552	WITHOUT_CLASSIFICATION	6.918659562447838E-4	IMPLEMENTATION
// if we're already aborting, we can receive no further mail	WITHOUT_CLASSIFICATION	0.9999371952522671	WITHOUT_CLASSIFICATION	6.280474773288822E-5	IMPLEMENTATION
// If this thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9983827867064996	WITHOUT_CLASSIFICATION	0.001617213293500409	IMPLEMENTATION
// new interrupt, to hopefully wake it out of any blocking IO	WITHOUT_CLASSIFICATION	0.9992513305922776	WITHOUT_CLASSIFICATION	7.486694077225318E-4	IMPLEMENTATION
// set to default thread group	WITHOUT_CLASSIFICATION	0.9998207763987859	WITHOUT_CLASSIFICATION	1.7922360121414143E-4	IMPLEMENTATION
// set to default thread group	WITHOUT_CLASSIFICATION	0.9998207763987859	WITHOUT_CLASSIFICATION	1.7922360121414143E-4	IMPLEMENTATION
// JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999793149293084	WITHOUT_CLASSIFICATION	2.068507069171571E-5	IMPLEMENTATION
// JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999917705476868	WITHOUT_CLASSIFICATION	8.229452313131111E-6	IMPLEMENTATION
// for Thread::start, which does not call the subclass's initialize	WITHOUT_CLASSIFICATION	0.9981177261020685	WITHOUT_CLASSIFICATION	0.001882273897931606	IMPLEMENTATION
// JRUBY-3568, inherit threadgroup or use default	WITHOUT_CLASSIFICATION	0.99965607115188	WITHOUT_CLASSIFICATION	3.4392884811999407E-4	IMPLEMENTATION
// MRI behavior: value given in seconds; converted to Float; less // than or equal to zero returns immediately; returns nil	WITHOUT_CLASSIFICATION	0.9997064660083849	WITHOUT_CLASSIFICATION	2.935339916151256E-4	IMPLEMENTATION
// If the target thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9994707457297224	WITHOUT_CLASSIFICATION	5.292542702775542E-4	IMPLEMENTATION
// We need this loop in order to be able to "unblock" the // join call without actually calling interrupt.	WITHOUT_CLASSIFICATION	0.9998954514607012	WITHOUT_CLASSIFICATION	1.0454853929870696E-4	IMPLEMENTATION
// attempt to decriticalize all if we're the critical thread	WITHOUT_CLASSIFICATION	0.999819013569421	WITHOUT_CLASSIFICATION	1.8098643057909409E-4	IMPLEMENTATION
// not valid for "dead" state	WITHOUT_CLASSIFICATION	0.999432242179148	WITHOUT_CLASSIFICATION	5.677578208520747E-4	IMPLEMENTATION
// If the killee thread is the same as the killer thread, just die	WITHOUT_CLASSIFICATION	0.9999526729651306	WITHOUT_CLASSIFICATION	4.732703486944732E-5	IMPLEMENTATION
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9997545064984874	WITHOUT_CLASSIFICATION	2.4549350151265324E-4	IMPLEMENTATION
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9997545064984874	WITHOUT_CLASSIFICATION	2.4549350151265324E-4	IMPLEMENTATION
// ignore; I don't like doing it, but it seems like we // really just need to make all channels non-blocking by // default and use select when implementing blocking ops, // so if this remains set non-blocking, perhaps it's not // such a big deal...	WITHOUT_CLASSIFICATION	0.9922511803148568	WITHOUT_CLASSIFICATION	0.00774881968514325	IMPLEMENTATION
// can't select, just have to do a blocking call	WITHOUT_CLASSIFICATION	0.999124769583767	WITHOUT_CLASSIFICATION	8.752304162329952E-4	IMPLEMENTATION
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9995192815739864	WITHOUT_CLASSIFICATION	4.807184260135617E-4	IMPLEMENTATION
// Create Constants class	WITHOUT_CLASSIFICATION	0.9999291350294303	WITHOUT_CLASSIFICATION	7.086497056965381E-5	IMPLEMENTATION
// Create constants for open flags	WITHOUT_CLASSIFICATION	0.9999421447675183	WITHOUT_CLASSIFICATION	5.7855232481805136E-5	IMPLEMENTATION
// Strip off the O_ prefix, so they become File::RDONLY, and so on	WITHOUT_CLASSIFICATION	0.9998994002945707	WITHOUT_CLASSIFICATION	1.0059970542930142E-4	IMPLEMENTATION
// Create constants for flock	WITHOUT_CLASSIFICATION	0.99995833080365	WITHOUT_CLASSIFICATION	4.166919634990013E-5	IMPLEMENTATION
// File::Constants module is included in IO.	WITHOUT_CLASSIFICATION	0.9999331651396789	WITHOUT_CLASSIFICATION	6.683486032109445E-5	IMPLEMENTATION
// Make sure any existing lock is released before we try and close the file	WITHOUT_CLASSIFICATION	0.9997044508927306	WITHOUT_CLASSIFICATION	2.9554910726939545E-4	IMPLEMENTATION
// null channel always succeeds for all locking operations	WITHOUT_CLASSIFICATION	0.99872195390099	WITHOUT_CLASSIFICATION	0.001278046099009974	IMPLEMENTATION
// Paths which end in "/" or "\\" must be stripped off.	WITHOUT_CLASSIFICATION	0.9997591614980053	WITHOUT_CLASSIFICATION	2.4083850199466697E-4	IMPLEMENTATION
// Special case for handling ACCMODE, since constantine will generate // an invalid value if it is not defined by the platform.	WITHOUT_CLASSIFICATION	0.9998869734831408	WITHOUT_CLASSIFICATION	1.1302651685917591E-4	IMPLEMENTATION
// Return false here	WITHOUT_CLASSIFICATION	0.9987894350670921	WITHOUT_CLASSIFICATION	0.0012105649329079884	IMPLEMENTATION
// Return false here	WITHOUT_CLASSIFICATION	0.9987894350670921	WITHOUT_CLASSIFICATION	0.0012105649329079884	IMPLEMENTATION
// We're not actually a real file, so we can't flock	WITHOUT_CLASSIFICATION	0.9959882287895276	WITHOUT_CLASSIFICATION	0.004011771210472344	IMPLEMENTATION
// Should we do anything?	WITHOUT_CLASSIFICATION	0.9991161683212273	WITHOUT_CLASSIFICATION	8.838316787727489E-4	IMPLEMENTATION
/* File class methods */	WITHOUT_CLASSIFICATION	0.9999749355576649	WITHOUT_CLASSIFICATION	2.50644423350293E-5	IMPLEMENTATION
// MRI-compatible basename handling for windows drive letter paths	WITHOUT_CLASSIFICATION	0.9991217563066858	WITHOUT_CLASSIFICATION	8.782436933143719E-4	IMPLEMENTATION
// strip c: away from relative-pathed name	WITHOUT_CLASSIFICATION	0.9997715980605841	WITHOUT_CLASSIFICATION	2.2840193941582634E-4	IMPLEMENTATION
// C:\ is returned unchanged	WITHOUT_CLASSIFICATION	0.9997522971893026	WITHOUT_CLASSIFICATION	2.477028106973796E-4	IMPLEMENTATION
// -1 no match; 0 it is dot file not extension	WITHOUT_CLASSIFICATION	0.9631098219801337	WITHOUT_CLASSIFICATION	0.036890178019866354	IMPLEMENTATION
// trim trailing slashes	WITHOUT_CLASSIFICATION	0.9996430166919076	WITHOUT_CLASSIFICATION	3.5698330809244555E-4	IMPLEMENTATION
// Dot is not at beginning and not at end of filename. 	WITHOUT_CLASSIFICATION	0.9985303971700167	WITHOUT_CLASSIFICATION	0.001469602829983341	IMPLEMENTATION
// Handle ~user paths 	WITHOUT_CLASSIFICATION	0.999679733950054	WITHOUT_CLASSIFICATION	3.20266049945973E-4	IMPLEMENTATION
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9995192815739864	WITHOUT_CLASSIFICATION	4.807184260135617E-4	IMPLEMENTATION
// Include additional path separator // (so that dirname of "C:\file.txt" is  "C:\", not "C:")	WITHOUT_CLASSIFICATION	0.98821153452835	WITHOUT_CLASSIFICATION	0.011788465471649977	IMPLEMENTATION
// FNFException can be thrown in both cases, when the file // is not found, or when permission is denied.	WITHOUT_CLASSIFICATION	0.9971271271332164	WITHOUT_CLASSIFICATION	0.0028728728667836326	IMPLEMENTATION
// No directory delimeter.  Rest of string is username	WITHOUT_CLASSIFICATION	0.9999986724783957	WITHOUT_CLASSIFICATION	1.3275216042907432E-6	IMPLEMENTATION
// If there's a second argument, it's the path to which the first  // argument is relative.	WITHOUT_CLASSIFICATION	0.9994939517548884	WITHOUT_CLASSIFICATION	5.06048245111574E-4	IMPLEMENTATION
// Handle ~user paths.	WITHOUT_CLASSIFICATION	0.999668252031542	WITHOUT_CLASSIFICATION	3.317479684581054E-4	IMPLEMENTATION
// If there's no second argument, simply use the working directory  // of the runtime.	WITHOUT_CLASSIFICATION	0.9996309622481749	WITHOUT_CLASSIFICATION	3.69037751825062E-4	IMPLEMENTATION
// Find out which string to check.	WITHOUT_CLASSIFICATION	0.9997876754603515	WITHOUT_CLASSIFICATION	2.1232453964856044E-4	IMPLEMENTATION
// Single '~' as whole path to expand	WITHOUT_CLASSIFICATION	0.9994560501895068	WITHOUT_CLASSIFICATION	5.43949810493235E-4	IMPLEMENTATION
// Count number of extra slashes in the beginning of the string.	WITHOUT_CLASSIFICATION	0.999962957104367	WITHOUT_CLASSIFICATION	3.704289563293867E-5	IMPLEMENTATION
// '~user/...' as path to expand	WITHOUT_CLASSIFICATION	0.9995581857677059	WITHOUT_CLASSIFICATION	4.418142322940612E-4	IMPLEMENTATION
// '~/...' as path to expand	WITHOUT_CLASSIFICATION	0.999730259776068	WITHOUT_CLASSIFICATION	2.697402239320261E-4	IMPLEMENTATION
// Prepare a string with the same number of redundant slashes so that  // we easily can prepend it to the result.	WITHOUT_CLASSIFICATION	0.9997710833674143	WITHOUT_CLASSIFICATION	2.289166325856208E-4	IMPLEMENTATION
// If there are N slashes, then we want N-1.	WITHOUT_CLASSIFICATION	0.9999181949058615	WITHOUT_CLASSIFICATION	8.180509413852714E-5	IMPLEMENTATION
// no canonical path yet or length is zero, and we have a / followed by a dot...	WITHOUT_CLASSIFICATION	0.9951701223691026	WITHOUT_CLASSIFICATION	0.004829877630897362	IMPLEMENTATION
// we don't have another slash after this, so replace /. with /	WITHOUT_CLASSIFICATION	0.9979536941600342	WITHOUT_CLASSIFICATION	0.0020463058399658486	IMPLEMENTATION
// we do have another slash; omit both / and . (JRUBY-1606)	WITHOUT_CLASSIFICATION	0.9982846016832233	WITHOUT_CLASSIFICATION	0.0017153983167766576	IMPLEMENTATION
// do nothing, we should not delete the drive letter	WITHOUT_CLASSIFICATION	0.9769273761754382	WITHOUT_CLASSIFICATION	0.023072623824561794	IMPLEMENTATION
/* rb: check_modifiable */	WITHOUT_CLASSIFICATION	0.9999540256974796	WITHOUT_CLASSIFICATION	4.597430252052463E-5	IMPLEMENTATION
/* rb: readable */	WITHOUT_CLASSIFICATION	0.9998338164686237	WITHOUT_CLASSIFICATION	1.661835313762348E-4	IMPLEMENTATION
// rename is successful	WITHOUT_CLASSIFICATION	0.999750429315837	WITHOUT_CLASSIFICATION	2.4957068416301683E-4	IMPLEMENTATION
// rename via Java API call wasn't successful, let's try some tricks, similar to MRI 	WITHOUT_CLASSIFICATION	0.9986315869648011	WITHOUT_CLASSIFICATION	0.0013684130351988865	IMPLEMENTATION
// try to rename one more time	WITHOUT_CLASSIFICATION	0.9949565252906686	WITHOUT_CLASSIFICATION	0.0050434747093314625	IMPLEMENTATION
// Can we produce IOError which bypasses a close?	WITHOUT_CLASSIFICATION	0.998316346413036	WITHOUT_CLASSIFICATION	0.001683653586964075	IMPLEMENTATION
// Fast path since JNA stat is about 10x slower than this	WITHOUT_CLASSIFICATION	0.9999705689199019	WITHOUT_CLASSIFICATION	2.943108009816776E-5	IMPLEMENTATION
// RubyContinuation	WITHOUT_CLASSIFICATION	0.9986385284494232	WITHOUT_CLASSIFICATION	0.001361471550576766	IMPLEMENTATION
/*     *  Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq)     *  it doesn't initialize ifNone field     */	WITHOUT_CLASSIFICATION	0.9999952373061054	WITHOUT_CLASSIFICATION	4.7626938946274806E-6	IMPLEMENTATION
// 16 ?	WITHOUT_CLASSIFICATION	0.9999795298018931	WITHOUT_CLASSIFICATION	2.0470198106892292E-5	IMPLEMENTATION
// generation count for O(1) clears	WITHOUT_CLASSIFICATION	0.9996739254671696	WITHOUT_CLASSIFICATION	3.2607453283044506E-4	IMPLEMENTATION
// size + 1;	WITHOUT_CLASSIFICATION	0.9995858875120378	WITHOUT_CLASSIFICATION	4.14112487962225E-4	IMPLEMENTATION
// suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen	WITHOUT_CLASSIFICATION	0.9840650086286405	WITHOUT_CLASSIFICATION	0.015934991371359484	IMPLEMENTATION
// ------------------------------	WITHOUT_CLASSIFICATION	0.9993837240754918	WITHOUT_CLASSIFICATION	6.162759245082557E-4	IMPLEMENTATION
// ------------------------------	WITHOUT_CLASSIFICATION	0.9993837240754918	WITHOUT_CLASSIFICATION	6.162759245082557E-4	IMPLEMENTATION
// put implementation	WITHOUT_CLASSIFICATION	0.9977217749919832	WITHOUT_CLASSIFICATION	0.0022782250080167067	IMPLEMENTATION
// get implementation	WITHOUT_CLASSIFICATION	0.9994374167191208	WITHOUT_CLASSIFICATION	5.625832808792279E-4	IMPLEMENTATION
// specialized for value	WITHOUT_CLASSIFICATION	0.99983034543184	WITHOUT_CLASSIFICATION	1.6965456816010532E-4	IMPLEMENTATION
// delete implementation	WITHOUT_CLASSIFICATION	0.9992450117803222	WITHOUT_CLASSIFICATION	7.54988219677812E-4	IMPLEMENTATION
// n.b. we need to recompute the hash in case the key object was modified	WITHOUT_CLASSIFICATION	0.9994815187479399	WITHOUT_CLASSIFICATION	5.18481252060167E-4	IMPLEMENTATION
/* ============================     * End of hash internals     * ============================     */	WITHOUT_CLASSIFICATION	0.9999550317774712	WITHOUT_CLASSIFICATION	4.496822252869188E-5	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================     */	WITHOUT_CLASSIFICATION	0.9999584559756115	WITHOUT_CLASSIFICATION	4.154402438859343E-5	IMPLEMENTATION
// update the hash value	WITHOUT_CLASSIFICATION	0.9999109717697394	WITHOUT_CLASSIFICATION	8.902823026065468E-5	IMPLEMENTATION
// other hash does not contain key	WITHOUT_CLASSIFICATION	0.9797535035245073	WITHOUT_CLASSIFICATION	0.020246496475492676	IMPLEMENTATION
// rb_yield_values(2,...) equivalent	WITHOUT_CLASSIFICATION	0.9976253395022847	WITHOUT_CLASSIFICATION	0.0023746604977152768	IMPLEMENTATION
// Satisfy java.util.Set interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9997185282439177	WITHOUT_CLASSIFICATION	2.8147175608224026E-4	IMPLEMENTATION
// remain where we are	WITHOUT_CLASSIFICATION	0.9993876300640635	WITHOUT_CLASSIFICATION	6.123699359363889E-4	IMPLEMENTATION
// We use file test since it is faster than a stat; also euid == uid in Java always	WITHOUT_CLASSIFICATION	0.9999898076894981	WITHOUT_CLASSIFICATION	1.019231050195612E-5	IMPLEMENTATION
// default: don't retain	WITHOUT_CLASSIFICATION	0.9996302215095776	WITHOUT_CLASSIFICATION	3.6977849042232143E-4	IMPLEMENTATION
// once hasNext has been called, we commit to next() returning // the entry it found, even if it were subsequently deleted	WITHOUT_CLASSIFICATION	0.9940739820767845	WITHOUT_CLASSIFICATION	0.005926017923215414	IMPLEMENTATION
// Not exposed by filetest, but so similiar in nature that it is stored here	WITHOUT_CLASSIFICATION	0.9999166948305419	WITHOUT_CLASSIFICATION	8.330516945812058E-5	IMPLEMENTATION
// We do both writable and writable_real through the same method because // in our java process effective and real userid will always be the same.	WITHOUT_CLASSIFICATION	0.9994897596188468	WITHOUT_CLASSIFICATION	5.102403811531779E-4	IMPLEMENTATION
// first try as directory	WITHOUT_CLASSIFICATION	0.9999258520763838	WITHOUT_CLASSIFICATION	7.41479236161336E-5	IMPLEMENTATION
// next as regular file	WITHOUT_CLASSIFICATION	0.9981131618435767	WITHOUT_CLASSIFICATION	0.0018868381564232457	IMPLEMENTATION
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9968290074182778	WITHOUT_CLASSIFICATION	0.0031709925817220864	IMPLEMENTATION
// NIO-based	WITHOUT_CLASSIFICATION	0.9986385284494232	WITHOUT_CLASSIFICATION	0.001361471550576766	IMPLEMENTATION
// NIO-based	WITHOUT_CLASSIFICATION	0.9986385284494232	WITHOUT_CLASSIFICATION	0.001361471550576766	IMPLEMENTATION
// Stream-based	WITHOUT_CLASSIFICATION	0.9986385284494232	WITHOUT_CLASSIFICATION	0.001361471550576766	IMPLEMENTATION
// special constructor that accepts stream, not channel	WITHOUT_CLASSIFICATION	0.9922648743879163	WITHOUT_CLASSIFICATION	0.00773512561208372	IMPLEMENTATION
/*     * We use FILE versus IO to match T_FILE in MRI.     */	WITHOUT_CLASSIFICATION	0.9999829662562368	WITHOUT_CLASSIFICATION	1.7033743763111596E-5	IMPLEMENTATION
// Constants for seek	WITHOUT_CLASSIFICATION	0.9997849127630232	WITHOUT_CLASSIFICATION	2.1508723697669324E-4	IMPLEMENTATION
// confirm we're not reopening self's channel	WITHOUT_CLASSIFICATION	0.9976538358989497	WITHOUT_CLASSIFICATION	0.002346164101050154	IMPLEMENTATION
// check if we're a stdio IO, and ensure we're not badly mutilated	WITHOUT_CLASSIFICATION	0.9994935616838299	WITHOUT_CLASSIFICATION	5.064383161700871E-4	IMPLEMENTATION
// dup2 new fd into self to preserve fileno and references to it	WITHOUT_CLASSIFICATION	0.9980830176583471	WITHOUT_CLASSIFICATION	0.0019169823416528896	IMPLEMENTATION
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.999978976779843	WITHOUT_CLASSIFICATION	2.1023220156986468E-5	IMPLEMENTATION
// re-register the descriptor	WITHOUT_CLASSIFICATION	0.9996996491971444	WITHOUT_CLASSIFICATION	3.0035080285568017E-4	IMPLEMENTATION
// since we're not actually duping the incoming channel into our handler, we need to // copy the original sync behavior from the other handler	WITHOUT_CLASSIFICATION	0.9984133323352005	WITHOUT_CLASSIFICATION	0.0015866676647996215	IMPLEMENTATION
// re-register	WITHOUT_CLASSIFICATION	0.9986385284494232	WITHOUT_CLASSIFICATION	0.001361471550576766	IMPLEMENTATION
// A potentially previously close IO is being 'reopened'.	WITHOUT_CLASSIFICATION	0.9998166834363709	WITHOUT_CLASSIFICATION	1.833165636291496E-4	IMPLEMENTATION
/*     * Ensure that separator is valid otherwise give it the default paragraph separator.     */	WITHOUT_CLASSIFICATION	0.9999088882550908	WITHOUT_CLASSIFICATION	9.111174490905332E-5	IMPLEMENTATION
// loop until we see the nth separator char	WITHOUT_CLASSIFICATION	0.9999521334312482	WITHOUT_CLASSIFICATION	4.786656875187908E-5	IMPLEMENTATION
// if we hit EOF or reached limit then we're done	WITHOUT_CLASSIFICATION	0.9999742299587081	WITHOUT_CLASSIFICATION	2.5770041291873945E-5	IMPLEMENTATION
// this is for a range check, near as I can tell	WITHOUT_CLASSIFICATION	0.9977987067008277	WITHOUT_CLASSIFICATION	0.0022012932991723015	IMPLEMENTATION
// IO class methods.	WITHOUT_CLASSIFICATION	0.9992401438445391	WITHOUT_CLASSIFICATION	7.59856155460946E-4	IMPLEMENTATION
// use original modes	WITHOUT_CLASSIFICATION	0.998726701292659	WITHOUT_CLASSIFICATION	0.0012732987073409792	IMPLEMENTATION
// See if we already have this descriptor open. // If so then we can mostly share the handler (keep open // file, but possibly change the mode).	WITHOUT_CLASSIFICATION	0.9999966225167984	WITHOUT_CLASSIFICATION	3.3774832016274598E-6	IMPLEMENTATION
// redundant, done above as well	WITHOUT_CLASSIFICATION	0.9998835283514325	WITHOUT_CLASSIFICATION	1.1647164856762042E-4	IMPLEMENTATION
// MRI behavior: swallow StandardErorrs	WITHOUT_CLASSIFICATION	0.9993837240754918	WITHOUT_CLASSIFICATION	6.162759245082557E-4	IMPLEMENTATION
// -1 == don't set permissions	WITHOUT_CLASSIFICATION	0.9998389870262846	WITHOUT_CLASSIFICATION	1.6101297371536792E-4	IMPLEMENTATION
// isRetained=true	WITHOUT_CLASSIFICATION	0.9986385284494232	WITHOUT_CLASSIFICATION	0.001361471550576766	IMPLEMENTATION
// This appears to be some windows-only mode.  On a java platform this is a no-op	WITHOUT_CLASSIFICATION	0.9997456822192549	WITHOUT_CLASSIFICATION	2.543177807451091E-4	IMPLEMENTATION
// if not sync, we switch to write buffered mode	WITHOUT_CLASSIFICATION	0.9954949967344767	WITHOUT_CLASSIFICATION	0.0045050032655232905	IMPLEMENTATION
/*     * Throw bad file descriptor is we can not read on supplied descriptor.     */	WITHOUT_CLASSIFICATION	0.988786547779271	WITHOUT_CLASSIFICATION	0.011213452220728878	IMPLEMENTATION
//Everything written	WITHOUT_CLASSIFICATION	0.9978237919156269	WITHOUT_CLASSIFICATION	0.0021762080843730036	IMPLEMENTATION
//            return len - n;	WITHOUT_CLASSIFICATION	0.9996957176083837	WITHOUT_CLASSIFICATION	3.042823916162216E-4	IMPLEMENTATION
// Claims conversion is done via 'to_s' in docs.	WITHOUT_CLASSIFICATION	0.9999532461129038	WITHOUT_CLASSIFICATION	4.675388709624778E-5	IMPLEMENTATION
// Of course this isn't particularly useful.	WITHOUT_CLASSIFICATION	0.9992841905587272	WITHOUT_CLASSIFICATION	7.158094412728631E-4	IMPLEMENTATION
// Must be back on first line on rewind.	WITHOUT_CLASSIFICATION	0.9992589531025771	WITHOUT_CLASSIFICATION	7.410468974229014E-4	IMPLEMENTATION
// Register the new descriptor	WITHOUT_CLASSIFICATION	0.9994868982388032	WITHOUT_CLASSIFICATION	5.131017611968157E-4	IMPLEMENTATION
// cleanup, raising errors if any	WITHOUT_CLASSIFICATION	0.999882148342641	WITHOUT_CLASSIFICATION	1.1785165735894288E-4	IMPLEMENTATION
// hmmmm	WITHOUT_CLASSIFICATION	0.999975778940229	WITHOUT_CLASSIFICATION	2.422105977089807E-5	IMPLEMENTATION
// I believe Ruby bails out with a "bug" if closing fails	WITHOUT_CLASSIFICATION	0.999519615434502	WITHOUT_CLASSIFICATION	4.8038456549809175E-4	IMPLEMENTATION
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec. // And why the hell does webrick pass this in as a first argument!!!!!	WITHOUT_CLASSIFICATION	0.9999954239084233	WITHOUT_CLASSIFICATION	4.576091576688998E-6	IMPLEMENTATION
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec.	WITHOUT_CLASSIFICATION	0.9999827780518055	WITHOUT_CLASSIFICATION	1.7221948194513672E-5	IMPLEMENTATION
// Length to read	WITHOUT_CLASSIFICATION	0.9978532253558593	WITHOUT_CLASSIFICATION	0.00214677464414072	IMPLEMENTATION
// String/Buffer to read it into	WITHOUT_CLASSIFICATION	0.997982660932351	WITHOUT_CLASSIFICATION	0.002017339067648949	IMPLEMENTATION
// cryptic for the uninitiated...	WITHOUT_CLASSIFICATION	0.9997105393891669	WITHOUT_CLASSIFICATION	2.894606108332178E-4	IMPLEMENTATION
// select until read is ready	WITHOUT_CLASSIFICATION	0.9999188982248405	WITHOUT_CLASSIFICATION	8.110177515943495E-5	IMPLEMENTATION
//        ByteList buffer = null;	WITHOUT_CLASSIFICATION	0.9993551318790206	WITHOUT_CLASSIFICATION	6.448681209794453E-4	IMPLEMENTATION
//            buffer = str.getByteList();	WITHOUT_CLASSIFICATION	0.9993282732592685	WITHOUT_CLASSIFICATION	6.717267407315403E-4	IMPLEMENTATION
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999110358225717	WITHOUT_CLASSIFICATION	8.896417742834004E-5	IMPLEMENTATION
/* rb: writable */	WITHOUT_CLASSIFICATION	0.9998335097239774	WITHOUT_CLASSIFICATION	1.6649027602250264E-4	IMPLEMENTATION
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999110358225717	WITHOUT_CLASSIFICATION	8.896417742834004E-5	IMPLEMENTATION
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.999902779062318	WITHOUT_CLASSIFICATION	9.72209376821224E-5	IMPLEMENTATION
// TODO: read into buffer using all the fread logic //        int read = openFile.getMainStream().fread(buffer);	WITHOUT_CLASSIFICATION	0.555961857818873	WITHOUT_CLASSIFICATION	0.44403814218112697	IMPLEMENTATION
// truncate buffer string to zero, if provided	WITHOUT_CLASSIFICATION	0.9999771389515205	WITHOUT_CLASSIFICATION	2.286104847945485E-5	IMPLEMENTATION
// TODO: READ_CHECK from MRI	WITHOUT_CLASSIFICATION	0.7799159777562694	WITHOUT_CLASSIFICATION	0.22008402224373066	IMPLEMENTATION
/* class methods for IO */	WITHOUT_CLASSIFICATION	0.9999856398570844	WITHOUT_CLASSIFICATION	1.436014291550944E-5	IMPLEMENTATION
// save blocking state	WITHOUT_CLASSIFICATION	0.9998464259993846	WITHOUT_CLASSIFICATION	1.53574000615522E-4	IMPLEMENTATION
// write	WITHOUT_CLASSIFICATION	0.9999717313801084	WITHOUT_CLASSIFICATION	2.826861989165782E-5	IMPLEMENTATION
// Java's select doesn't do anything about this, so we leave it be.	WITHOUT_CLASSIFICATION	0.999734714641052	WITHOUT_CLASSIFICATION	2.652853589480156E-4	IMPLEMENTATION
// make all sockets blocking as configured again // close unregisters all channels, so we can safely reset blocking modes	WITHOUT_CLASSIFICATION	0.999271254276768	WITHOUT_CLASSIFICATION	7.28745723232077E-4	IMPLEMENTATION
// FIXME: process options	WITHOUT_CLASSIFICATION	0.999576676218932	WITHOUT_CLASSIFICATION	4.233237810680596E-4	IMPLEMENTATION
// Enebo: annotation processing forced me to do pangea method here...	WITHOUT_CLASSIFICATION	0.9795970941545858	WITHOUT_CLASSIFICATION	0.020402905845414158	IMPLEMENTATION
// NIO based pipe	WITHOUT_CLASSIFICATION	0.9988895514185709	WITHOUT_CLASSIFICATION	0.0011104485814289891	IMPLEMENTATION
// not using remove(Object) here to avoid the equals() call	WITHOUT_CLASSIFICATION	0.9650795341523388	WITHOUT_CLASSIFICATION	0.03492046584766117	IMPLEMENTATION
// raise will also wake the thread from selection	WITHOUT_CLASSIFICATION	0.9999528174152456	WITHOUT_CLASSIFICATION	4.718258475434958E-5	IMPLEMENTATION
/* may need to handle ENC_CODERANGE_BROKEN */	WITHOUT_CLASSIFICATION	0.9971110784503935	WITHOUT_CLASSIFICATION	0.002888921549606478	IMPLEMENTATION
// TODO: rb_usascii_str_new2	WITHOUT_CLASSIFICATION	0.5441867827814393	IMPLEMENTATION	0.45581321721856055	WITHOUT_CLASSIFICATION
// If we know what method was being called, strip everything // before the call. This hides the JRuby and reflection internals.	WITHOUT_CLASSIFICATION	0.8760710093892943	WITHOUT_CLASSIFICATION	0.12392899061070577	IMPLEMENTATION
// The class of this object	WITHOUT_CLASSIFICATION	0.9997773881217313	WITHOUT_CLASSIFICATION	2.2261187826865426E-4	IMPLEMENTATION
// zeroed by jvm	WITHOUT_CLASSIFICATION	0.9979727213703198	WITHOUT_CLASSIFICATION	0.0020272786296802775	IMPLEMENTATION
//objectClass.defineAnnotatedMethods(BasicObjectMethods.class);	WITHOUT_CLASSIFICATION	0.9989612992561224	WITHOUT_CLASSIFICATION	0.0010387007438775661	IMPLEMENTATION
// JRUBY-4113: callers should not call setTaint on immediate objects	WITHOUT_CLASSIFICATION	0.8775759447394869	WITHOUT_CLASSIFICATION	0.12242405526051314	IMPLEMENTATION
// rb_class_boot	WITHOUT_CLASSIFICATION	0.9986385284494232	WITHOUT_CLASSIFICATION	0.001361471550576766	IMPLEMENTATION
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999540256974796	WITHOUT_CLASSIFICATION	4.597430252052463E-5	IMPLEMENTATION
// 1.9 rb_check_to_integer	WITHOUT_CLASSIFICATION	0.9996237203449804	WITHOUT_CLASSIFICATION	3.7627965501967623E-4	IMPLEMENTATION
// for interface impls	WITHOUT_CLASSIFICATION	0.9998721756195628	WITHOUT_CLASSIFICATION	1.2782438043714995E-4	IMPLEMENTATION
// We're cloning ourselves, so we know the result should be a RubyObject	WITHOUT_CLASSIFICATION	0.9977180584026906	WITHOUT_CLASSIFICATION	0.0022819415973094853	IMPLEMENTATION
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9998823083295248	WITHOUT_CLASSIFICATION	1.176916704750496E-4	IMPLEMENTATION
// can't use -v and stdin	WITHOUT_CLASSIFICATION	0.9992406662031116	WITHOUT_CLASSIFICATION	7.593337968883066E-4	IMPLEMENTATION
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9998182174554581	WITHOUT_CLASSIFICATION	1.8178254454187054E-4	IMPLEMENTATION
// Equivalent of Data_Get_Struct // This will first check that the object in question is actually a T_DATA equivalent.	WITHOUT_CLASSIFICATION	0.9998974519610416	WITHOUT_CLASSIFICATION	1.0254803895830103E-4	IMPLEMENTATION
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9993837240754918	WITHOUT_CLASSIFICATION	6.162759245082557E-4	IMPLEMENTATION
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9993837240754918	WITHOUT_CLASSIFICATION	6.162759245082557E-4	IMPLEMENTATION
// // INSTANCE VARIABLE API METHODS //	WITHOUT_CLASSIFICATION	0.9991620073100991	WITHOUT_CLASSIFICATION	8.3799268990088E-4	IMPLEMENTATION
// Struct methods	WITHOUT_CLASSIFICATION	0.9987104641886216	WITHOUT_CLASSIFICATION	0.0012895358113783656	IMPLEMENTATION
//runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);	WITHOUT_CLASSIFICATION	0.9993816161859362	WITHOUT_CLASSIFICATION	6.183838140637367E-4	IMPLEMENTATION
// define access methods.	WITHOUT_CLASSIFICATION	0.9996339243172322	WITHOUT_CLASSIFICATION	3.6607568276777124E-4	IMPLEMENTATION
// if we are storing a name as well, index is one too high for values	WITHOUT_CLASSIFICATION	0.9999988126232047	WITHOUT_CLASSIFICATION	1.187376795362472E-6	IMPLEMENTATION
// Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9997210822442854	WITHOUT_CLASSIFICATION	2.7891775571457403E-4	IMPLEMENTATION
// For binding purposes on the newly created struct types	WITHOUT_CLASSIFICATION	0.9979556997107141	WITHOUT_CLASSIFICATION	0.0020443002892859643	IMPLEMENTATION
// OBJ_INFECT        	WITHOUT_CLASSIFICATION	0.9996237203449804	WITHOUT_CLASSIFICATION	3.7627965501967623E-4	IMPLEMENTATION
// These call* assume ThreadContext = receiver.getRuntime().getCurrentContext()	WITHOUT_CLASSIFICATION	0.9974758943293325	WITHOUT_CLASSIFICATION	0.002524105670667504	IMPLEMENTATION
// Execute iterateMethod again.	WITHOUT_CLASSIFICATION	0.9995301657223495	WITHOUT_CLASSIFICATION	4.6983427765044737E-4	IMPLEMENTATION
/*     * @param nv number of times to cycle or -1 to cycle indefinitely     */	WITHOUT_CLASSIFICATION	0.999880634847615	WITHOUT_CLASSIFICATION	1.1936515238501276E-4	IMPLEMENTATION
// Atomic ?	WITHOUT_CLASSIFICATION	0.9988491269433439	WITHOUT_CLASSIFICATION	0.001150873056656004	IMPLEMENTATION
// Atomic ?	WITHOUT_CLASSIFICATION	0.9988491269433439	WITHOUT_CLASSIFICATION	0.001150873056656004	IMPLEMENTATION
// MUST NOT be used across threads	WITHOUT_CLASSIFICATION	0.9996016712560193	WITHOUT_CLASSIFICATION	3.9832874398073773E-4	IMPLEMENTATION
// superClass may be null.	WITHOUT_CLASSIFICATION	0.9998235752743719	WITHOUT_CLASSIFICATION	1.7642472562799292E-4	IMPLEMENTATION
// Containing class...The parent of Object is null. Object should always be last in chain.	WITHOUT_CLASSIFICATION	0.9999548575681831	WITHOUT_CLASSIFICATION	4.514243181682189E-5	IMPLEMENTATION
// ClassId is the name of the class/module sans where it is located. // If it is null, then it an anonymous class.	WITHOUT_CLASSIFICATION	0.9999470114072975	WITHOUT_CLASSIFICATION	5.298859270252339E-5	IMPLEMENTATION
// ClassProviders return Java class/module (in #defineOrGetClassUnder and // #defineOrGetModuleUnder) when class/module is opened using colon syntax. 	WITHOUT_CLASSIFICATION	0.999952487844534	WITHOUT_CLASSIFICATION	4.751215546597848E-5	IMPLEMENTATION
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999306440564202	WITHOUT_CLASSIFICATION	6.935594357986226E-5	IMPLEMENTATION
// Make sure the module we include does not already exist	WITHOUT_CLASSIFICATION	0.9976592082275333	WITHOUT_CLASSIFICATION	0.002340791772466644	IMPLEMENTATION
// MRI checks all types first:	WITHOUT_CLASSIFICATION	0.9989356683983931	WITHOUT_CLASSIFICATION	0.0010643316016068864	IMPLEMENTATION
// we need full traces, use default (slow) populator	WITHOUT_CLASSIFICATION	0.9984736007425487	WITHOUT_CLASSIFICATION	0.0015263992574514275	IMPLEMENTATION
// module/singleton methods are all defined public	WITHOUT_CLASSIFICATION	0.9999454471417083	WITHOUT_CLASSIFICATION	5.455285829174899E-5	IMPLEMENTATION
// See if module is in chain...Cannot match against itself so start at superClass.	WITHOUT_CLASSIFICATION	0.9999997695316982	WITHOUT_CLASSIFICATION	2.3046830179658163E-7	IMPLEMENTATION
// We can safely reference methods here instead of doing getMethods() since if we // are adding we are not using a IncludedModuleWrapper.	WITHOUT_CLASSIFICATION	0.9996666105355891	WITHOUT_CLASSIFICATION	3.333894644107835E-4	IMPLEMENTATION
// we grab serial number first; the worst that will happen is we cache a later // update with an earlier serial number, which would just flush anyway	WITHOUT_CLASSIFICATION	0.9985178995875958	WITHOUT_CLASSIFICATION	0.0014821004124041665	IMPLEMENTATION
// update all hierarchies into which this module has been included	WITHOUT_CLASSIFICATION	0.998722448127729	WITHOUT_CLASSIFICATION	0.0012775518722709536	IMPLEMENTATION
// This method is intended only for defining new classes in Ruby code, // so it uses the allocator of the specified superclass or default to // the Object allocator. It should NOT be used to define classes that require a native allocator.	WITHOUT_CLASSIFICATION	0.9999296518326283	WITHOUT_CLASSIFICATION	7.034816737162888E-5	IMPLEMENTATION
// need to skip IncludedModuleWrappers	WITHOUT_CLASSIFICATION	0.9875822033412297	WITHOUT_CLASSIFICATION	0.01241779665877032	IMPLEMENTATION
// superClazz = null;	WITHOUT_CLASSIFICATION	0.9994264507459054	WITHOUT_CLASSIFICATION	5.73549254094541E-4	IMPLEMENTATION
// reopen a java class	WITHOUT_CLASSIFICATION	0.9998286775373718	WITHOUT_CLASSIFICATION	1.713224626280983E-4	IMPLEMENTATION
// This method is intended only for defining new modules in Ruby code	WITHOUT_CLASSIFICATION	0.9997494072622942	WITHOUT_CLASSIFICATION	2.505927377057872E-4	IMPLEMENTATION
// reopen a java module	WITHOUT_CLASSIFICATION	0.9996981037958186	WITHOUT_CLASSIFICATION	3.0189620418137657E-4	IMPLEMENTATION
//FIXME warning	WITHOUT_CLASSIFICATION	0.9986823580335784	WITHOUT_CLASSIFICATION	0.001317641966421491	IMPLEMENTATION
// FIXME warning	WITHOUT_CLASSIFICATION	0.9992181354927989	WITHOUT_CLASSIFICATION	7.818645072010639E-4	IMPLEMENTATION
// a normal block passed to define_method changes to do arity checking; make it a lambda	WITHOUT_CLASSIFICATION	0.9216132990479459	WITHOUT_CLASSIFICATION	0.07838670095205405	IMPLEMENTATION
// for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope	WITHOUT_CLASSIFICATION	0.9998779738212787	WITHOUT_CLASSIFICATION	1.2202617872117589E-4	IMPLEMENTATION
// just using required is broken...but no more broken than before zsuper refactoring	WITHOUT_CLASSIFICATION	0.9998385500295638	WITHOUT_CLASSIFICATION	1.6144997043607444E-4	IMPLEMENTATION
// class and module bodies default to public, so make the block's visibility public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999632911422213	WITHOUT_CLASSIFICATION	3.670885777885824E-5	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999849326305943	WITHOUT_CLASSIFICATION	1.5067369405651201E-5	IMPLEMENTATION
// MRI error message says Class, even though Module is ok 	WITHOUT_CLASSIFICATION	0.9985963053814656	WITHOUT_CLASSIFICATION	0.0014036946185344086	IMPLEMENTATION
// scan class hierarchy for module	WITHOUT_CLASSIFICATION	0.9998938363755709	WITHOUT_CLASSIFICATION	1.0616362442902084E-4	IMPLEMENTATION
/* Module class methods */	WITHOUT_CLASSIFICATION	0.9999748741820472	WITHOUT_CLASSIFICATION	2.5125817952786887E-5	IMPLEMENTATION
// Note: we change current frames visibility here because the methods which call // this method are all "fast" (e.g. they do not created their own frame).	WITHOUT_CLASSIFICATION	0.6708662323175887	WITHOUT_CLASSIFICATION	0.3291337676824114	IMPLEMENTATION
// next in hierarchy is an included version of the module we're attempting, // so we skip including it	WITHOUT_CLASSIFICATION	0.9999802041622894	WITHOUT_CLASSIFICATION	1.9795837710615034E-5	IMPLEMENTATION
// if we haven't encountered a real superclass, use the found module as the new inclusion point	WITHOUT_CLASSIFICATION	0.9998331393016754	WITHOUT_CLASSIFICATION	1.6686069832448842E-4	IMPLEMENTATION
// build a list of all modules to consider for inclusion	WITHOUT_CLASSIFICATION	0.9994901824734853	WITHOUT_CLASSIFICATION	5.098175265147613E-4	IMPLEMENTATION
// if the insertion point is a class, update subclass lists	WITHOUT_CLASSIFICATION	0.9999842365188555	WITHOUT_CLASSIFICATION	1.5763481144474036E-5	IMPLEMENTATION
// if there's a non-null superclass, we're including into a normal class hierarchy; // update subclass relationships to avoid stale parent/child relationships	WITHOUT_CLASSIFICATION	0.9999652992846688	WITHOUT_CLASSIFICATION	3.470071533119496E-5	IMPLEMENTATION
// ////////////////// CLASS VARIABLE RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9994793829655003	WITHOUT_CLASSIFICATION	5.206170344997647E-4	IMPLEMENTATION
// ////////////////// CONSTANT RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9994793829655003	WITHOUT_CLASSIFICATION	5.206170344997647E-4	IMPLEMENTATION
// Note: includes part of fix for JRUBY-1339	WITHOUT_CLASSIFICATION	0.9997943930509962	WITHOUT_CLASSIFICATION	2.056069490038458E-4	IMPLEMENTATION
// ////////////////// CLASS VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9992920568921324	WITHOUT_CLASSIFICATION	7.079431078674711E-4	IMPLEMENTATION
// Wrong Parameter ?	WITHOUT_CLASSIFICATION	0.9988503232808735	WITHOUT_CLASSIFICATION	0.001149676719126516	IMPLEMENTATION
// not actually called anywhere (all known uses call the fast version)	WITHOUT_CLASSIFICATION	0.9984152044391272	WITHOUT_CLASSIFICATION	0.0015847955608726807	IMPLEMENTATION
// Not that is loaded loop around to resolve it next pass	WITHOUT_CLASSIFICATION	0.9954999753900959	WITHOUT_CLASSIFICATION	0.004500024609904018	IMPLEMENTATION
// if adding a module under a constant name, set that module's basename to the constant name	WITHOUT_CLASSIFICATION	0.9992069895564333	WITHOUT_CLASSIFICATION	7.930104435667841E-4	IMPLEMENTATION
// Fix for JRUBY-1339 - search hierarchy for constant	WITHOUT_CLASSIFICATION	0.9996886221518012	WITHOUT_CLASSIFICATION	3.1137784819874816E-4	IMPLEMENTATION
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9996854889118338	WITHOUT_CLASSIFICATION	3.1451108816616264E-4	IMPLEMENTATION
// removes and returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.999777984308055	WITHOUT_CLASSIFICATION	2.220156919449693E-4	IMPLEMENTATION
// we can't rename a file while it's open in windows	WITHOUT_CLASSIFICATION	0.99937041156	WITHOUT_CLASSIFICATION	6.295884400000767E-4	IMPLEMENTATION
//reopen	WITHOUT_CLASSIFICATION	0.9999591600903001	WITHOUT_CLASSIFICATION	4.083990969988955E-5	IMPLEMENTATION
// ARGF methods	WITHOUT_CLASSIFICATION	0.9987104641886216	WITHOUT_CLASSIFICATION	0.0012895358113783656	IMPLEMENTATION
//         data.currentFile.callMethod(context, "lineno=", line);	WITHOUT_CLASSIFICATION	0.9995719275459892	WITHOUT_CLASSIFICATION	4.2807245401080306E-4	IMPLEMENTATION
// one optional, one required args	WITHOUT_CLASSIFICATION	0.9985640540744881	WITHOUT_CLASSIFICATION	0.0014359459255119898	IMPLEMENTATION
// one optional and no required args	WITHOUT_CLASSIFICATION	0.9990375420686909	WITHOUT_CLASSIFICATION	9.624579313091087E-4	IMPLEMENTATION
// try to get errno value out of the class	WITHOUT_CLASSIFICATION	0.9999057729568148	WITHOUT_CLASSIFICATION	9.422704318513195E-5	IMPLEMENTATION
// we got a valid errno value	WITHOUT_CLASSIFICATION	0.9999025554562955	WITHOUT_CLASSIFICATION	9.744454370451969E-5	IMPLEMENTATION
// Ensure we're not running on GCJ, since it's not supported and leads to weird errors	WITHOUT_CLASSIFICATION	0.9977036864450829	WITHOUT_CLASSIFICATION	0.00229631355491704	IMPLEMENTATION
// print out as a nice Ruby backtrace	WITHOUT_CLASSIFICATION	0.9997989728726469	WITHOUT_CLASSIFICATION	2.0102712735310096E-4	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9983566808223192	WITHOUT_CLASSIFICATION	0.0016433191776808302	IMPLEMENTATION
// set thread context JRuby classloader here, for the main thread	WITHOUT_CLASSIFICATION	0.9996777465335056	WITHOUT_CLASSIFICATION	3.222534664944316E-4	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9994367651148036	WITHOUT_CLASSIFICATION	5.632348851963979E-4	IMPLEMENTATION
// no script to run, return success below	WITHOUT_CLASSIFICATION	0.9995221038361722	WITHOUT_CLASSIFICATION	4.778961638277508E-4	IMPLEMENTATION
// Skip /usr/bin/env if it's first	WITHOUT_CLASSIFICATION	0.9997314331326302	WITHOUT_CLASSIFICATION	2.685668673697196E-4	IMPLEMENTATION
// Skip any assignments if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999905109107433	WITHOUT_CLASSIFICATION	9.489089256600791E-6	IMPLEMENTATION
// Skip any commandline args if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999908241898016	WITHOUT_CLASSIFICATION	9.175810198410236E-6	IMPLEMENTATION
// ignore error	WITHOUT_CLASSIFICATION	0.9977790546212754	WITHOUT_CLASSIFICATION	0.002220945378724695	IMPLEMENTATION
// ////////////////// COMMON CONSTANT / CVAR METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9996621001492578	WITHOUT_CLASSIFICATION	3.378998507422494E-4	IMPLEMENTATION
// ////////////////// INTERNAL MODULE VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9992920568921324	WITHOUT_CLASSIFICATION	7.079431078674711E-4	IMPLEMENTATION
// ////////////////// LOW-LEVEL CONSTANT INTERFACE //////////////// // // fetch/store/list constants for this module //	WITHOUT_CLASSIFICATION	0.9997352577189014	WITHOUT_CLASSIFICATION	2.6474228109863064E-4	IMPLEMENTATION
// odd	WITHOUT_CLASSIFICATION	0.999975778940229	WITHOUT_CLASSIFICATION	2.422105977089807E-5	IMPLEMENTATION
// JRubyClient	WITHOUT_CLASSIFICATION	0.9986385284494232	WITHOUT_CLASSIFICATION	0.001361471550576766	IMPLEMENTATION
/*     * x = mantissa * 2 ** exponent     *     * Where mantissa is in the range of [.5, 1)     *     */	WITHOUT_CLASSIFICATION	0.9999976681816235	WITHOUT_CLASSIFICATION	2.331818376506915E-6	IMPLEMENTATION
// Make mantissa same sign so we only have one code path.	WITHOUT_CLASSIFICATION	0.9994058442593605	WITHOUT_CLASSIFICATION	5.941557406394629E-4	IMPLEMENTATION
// Increase value to hit lower range.	WITHOUT_CLASSIFICATION	0.9992544036038008	WITHOUT_CLASSIFICATION	7.455963961991863E-4	IMPLEMENTATION
/*     * r = x * 2 ** y     */	WITHOUT_CLASSIFICATION	0.9999882897901622	WITHOUT_CLASSIFICATION	1.1710209837861442E-5	IMPLEMENTATION
/*  0! */	WITHOUT_CLASSIFICATION	0.999997945415524	WITHOUT_CLASSIFICATION	2.054584475889129E-6	IMPLEMENTATION
/*  1! */	WITHOUT_CLASSIFICATION	0.999997945415524	WITHOUT_CLASSIFICATION	2.054584475889129E-6	IMPLEMENTATION
/*  2! */	WITHOUT_CLASSIFICATION	0.999997945415524	WITHOUT_CLASSIFICATION	2.054584475889129E-6	IMPLEMENTATION
/*  3! */	WITHOUT_CLASSIFICATION	0.999997945415524	WITHOUT_CLASSIFICATION	2.054584475889129E-6	IMPLEMENTATION
/*  4! */	WITHOUT_CLASSIFICATION	0.999997945415524	WITHOUT_CLASSIFICATION	2.054584475889129E-6	IMPLEMENTATION
/*  5! */	WITHOUT_CLASSIFICATION	0.999997945415524	WITHOUT_CLASSIFICATION	2.054584475889129E-6	IMPLEMENTATION
/*  6! */	WITHOUT_CLASSIFICATION	0.999997945415524	WITHOUT_CLASSIFICATION	2.054584475889129E-6	IMPLEMENTATION
/*  7! */	WITHOUT_CLASSIFICATION	0.999997945415524	WITHOUT_CLASSIFICATION	2.054584475889129E-6	IMPLEMENTATION
/*  8! */	WITHOUT_CLASSIFICATION	0.999997945415524	WITHOUT_CLASSIFICATION	2.054584475889129E-6	IMPLEMENTATION
/*  9! */	WITHOUT_CLASSIFICATION	0.999997945415524	WITHOUT_CLASSIFICATION	2.054584475889129E-6	IMPLEMENTATION
/* 11! */	WITHOUT_CLASSIFICATION	0.9999970415563082	WITHOUT_CLASSIFICATION	2.9584436917105443E-6	IMPLEMENTATION
/* 12! */	WITHOUT_CLASSIFICATION	0.9999970415563082	WITHOUT_CLASSIFICATION	2.9584436917105443E-6	IMPLEMENTATION
/* 13! */	WITHOUT_CLASSIFICATION	0.9999970415563082	WITHOUT_CLASSIFICATION	2.9584436917105443E-6	IMPLEMENTATION
/* 15! */	WITHOUT_CLASSIFICATION	0.9999970415563082	WITHOUT_CLASSIFICATION	2.9584436917105443E-6	IMPLEMENTATION
/* 16! */	WITHOUT_CLASSIFICATION	0.9999970415563082	WITHOUT_CLASSIFICATION	2.9584436917105443E-6	IMPLEMENTATION
/* 17! */	WITHOUT_CLASSIFICATION	0.9999970415563082	WITHOUT_CLASSIFICATION	2.9584436917105443E-6	IMPLEMENTATION
/* 19! */	WITHOUT_CLASSIFICATION	0.9999970415563082	WITHOUT_CLASSIFICATION	2.9584436917105443E-6	IMPLEMENTATION
/* 20! */	WITHOUT_CLASSIFICATION	0.9999970415563082	WITHOUT_CLASSIFICATION	2.9584436917105443E-6	IMPLEMENTATION
/* 21! */	WITHOUT_CLASSIFICATION	0.9999970415563082	WITHOUT_CLASSIFICATION	2.9584436917105443E-6	IMPLEMENTATION
// Static constants	WITHOUT_CLASSIFICATION	0.999193132764297	WITHOUT_CLASSIFICATION	8.068672357030856E-4	IMPLEMENTATION
// Clean-up string representation so that it could be understood // by Java's BigDecimal. Not terribly efficient for now. // 1. MRI allows d and D as exponent separators	WITHOUT_CLASSIFICATION	0.9999822180558208	WITHOUT_CLASSIFICATION	1.7781944179158036E-5	IMPLEMENTATION
// 2. MRI allows underscores anywhere	WITHOUT_CLASSIFICATION	0.9995839568934074	WITHOUT_CLASSIFICATION	4.160431065925502E-4	IMPLEMENTATION
// 3. MRI ignores the trailing junk	WITHOUT_CLASSIFICATION	0.9994898942801949	WITHOUT_CLASSIFICATION	5.101057198050571E-4	IMPLEMENTATION
// MRI behavior: -0 and +0 are two different things	WITHOUT_CLASSIFICATION	0.9989841495026088	WITHOUT_CLASSIFICATION	0.0010158504973911422	IMPLEMENTATION
// Java and MRI definitions of modulo are different.	WITHOUT_CLASSIFICATION	0.9998811886772145	WITHOUT_CLASSIFICATION	1.1881132278546444E-4	IMPLEMENTATION
// Java and MRI definitions of remainder are the same.	WITHOUT_CLASSIFICATION	0.9999243987231753	WITHOUT_CLASSIFICATION	7.560127682467737E-5	IMPLEMENTATION
// Note: MRI has a very non-trivial way of calculating the precision, // so we use very simple approximation here:	WITHOUT_CLASSIFICATION	0.9990933913512267	WITHOUT_CLASSIFICATION	9.066086487733544E-4	IMPLEMENTATION
// Iteration variables, for the square root x and the reciprocal v // initial x:  x0 ~ sqrt() // initial v:  v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9998707910608902	WITHOUT_CLASSIFICATION	1.2920893910986847E-4	IMPLEMENTATION
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.998878143899476	WITHOUT_CLASSIFICATION	0.0011218561005239727	IMPLEMENTATION
// TODO: why this: .setResult();	WITHOUT_CLASSIFICATION	0.9095481182904596	IMPLEMENTATION	0.09045188170954047	WITHOUT_CLASSIFICATION
// integer division	WITHOUT_CLASSIFICATION	0.9986385284494232	WITHOUT_CLASSIFICATION	0.001361471550576766	IMPLEMENTATION
// MRI behavior: "If digits is 0, the result is the same as the / operator."	WITHOUT_CLASSIFICATION	0.9998996074147998	WITHOUT_CLASSIFICATION	1.0039258520023462E-4	IMPLEMENTATION
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9996237203449804	WITHOUT_CLASSIFICATION	3.7627965501967623E-4	IMPLEMENTATION
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9996237203449804	WITHOUT_CLASSIFICATION	3.7627965501967623E-4	IMPLEMENTATION
// Java and MRI definitions of divmod are different.        	WITHOUT_CLASSIFICATION	0.9998811886772145	WITHOUT_CLASSIFICATION	1.1881132278546444E-4	IMPLEMENTATION
// JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it	WITHOUT_CLASSIFICATION	0.996432249303011	WITHOUT_CLASSIFICATION	0.0035677506969889255	IMPLEMENTATION
// shift the decimal point just to the right of the digit to be rounded to (divide by 10**(abs(scale))) // -1 -> 10's digit, -2 -> 100's digit, etc.	WITHOUT_CLASSIFICATION	0.9999804545265536	WITHOUT_CLASSIFICATION	1.9545473446323057E-5	IMPLEMENTATION
// ...round to that digit	WITHOUT_CLASSIFICATION	0.99804852742625	WITHOUT_CLASSIFICATION	0.0019514725737499502	IMPLEMENTATION
// ...and shift the result back to the left (multiply by 10**(abs(scale)))	WITHOUT_CLASSIFICATION	0.9989678455038982	WITHOUT_CLASSIFICATION	0.0010321544961018924	IMPLEMENTATION
//this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are	WITHOUT_CLASSIFICATION	0.9997347028953953	WITHOUT_CLASSIFICATION	2.652971046046282E-4	IMPLEMENTATION
// sign	WITHOUT_CLASSIFICATION	0.999975778940229	WITHOUT_CLASSIFICATION	2.422105977089807E-5	IMPLEMENTATION
// significant digits and exponent	WITHOUT_CLASSIFICATION	0.9995211584572138	WITHOUT_CLASSIFICATION	4.7884154278628335E-4	IMPLEMENTATION
// normalize the value	WITHOUT_CLASSIFICATION	0.9997709178317579	WITHOUT_CLASSIFICATION	2.2908216824198932E-4	IMPLEMENTATION
// base	WITHOUT_CLASSIFICATION	0.9999856776656456	WITHOUT_CLASSIFICATION	1.4322334354396796E-5	IMPLEMENTATION
// NOTE: MRI's sqrt precision is limited by 100, // but we allow values more than 100.	WITHOUT_CLASSIFICATION	0.9999697093263327	WITHOUT_CLASSIFICATION	3.029067366732984E-5	IMPLEMENTATION
// just in case, add a bit of extra precision	WITHOUT_CLASSIFICATION	0.9999938283685477	WITHOUT_CLASSIFICATION	6.171631452336292E-6	IMPLEMENTATION
// eh?!	WITHOUT_CLASSIFICATION	0.999975778940229	WITHOUT_CLASSIFICATION	2.422105977089807E-5	IMPLEMENTATION
// Note: #fix has only no-arg form, but truncate allows optional parameter.	WITHOUT_CLASSIFICATION	0.9999309419072991	WITHOUT_CLASSIFICATION	6.905809270087505E-5	IMPLEMENTATION
// General number and precision checking	WITHOUT_CLASSIFICATION	0.9993079790404892	WITHOUT_CLASSIFICATION	6.920209595107949E-4	IMPLEMENTATION
// the requested precision	WITHOUT_CLASSIFICATION	0.9997969471817776	WITHOUT_CLASSIFICATION	2.0305281822239132E-4	IMPLEMENTATION
// Proc class	WITHOUT_CLASSIFICATION	0.9992139300685124	WITHOUT_CLASSIFICATION	7.860699314875511E-4	IMPLEMENTATION
//.append("  -x[directory]   strip off text before #!ruby line and perhaps cd to directory\n")	WITHOUT_CLASSIFICATION	0.9998524576771722	WITHOUT_CLASSIFICATION	1.4754232282779452E-4	IMPLEMENTATION
// even shift.. // ..floors to 62 or 63 bit BigInteger	WITHOUT_CLASSIFICATION	0.9987365201154467	WITHOUT_CLASSIFICATION	0.0012634798845532961	IMPLEMENTATION
// 5 -> 2, -5 -> -3 need half a scale more..	WITHOUT_CLASSIFICATION	0.9999123155817279	WITHOUT_CLASSIFICATION	8.768441827216599E-5	IMPLEMENTATION
// ..where 100 -> 10 shifts the scale	WITHOUT_CLASSIFICATION	0.9999770771887929	WITHOUT_CLASSIFICATION	2.2922811207001307E-5	IMPLEMENTATION
// Initial x - use double root - multiply by halfBack to unshift - set new scale	WITHOUT_CLASSIFICATION	0.9997449541213127	WITHOUT_CLASSIFICATION	2.550458786873082E-4	IMPLEMENTATION
// x0 ~ sqrt()	WITHOUT_CLASSIFICATION	0.9986385284494232	WITHOUT_CLASSIFICATION	0.001361471550576766	IMPLEMENTATION
// for prec 15 root x0 must surely be OK // return small prec roots without iterations	WITHOUT_CLASSIFICATION	0.9997332119630215	WITHOUT_CLASSIFICATION	2.667880369785649E-4	IMPLEMENTATION
// Initial v - the reciprocal // v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9987668122324214	WITHOUT_CLASSIFICATION	0.0012331877675786373	IMPLEMENTATION
// Collect iteration precisions beforehand	WITHOUT_CLASSIFICATION	0.9995665482443834	WITHOUT_CLASSIFICATION	4.334517556165423E-4	IMPLEMENTATION
// assume nInit = 16 <= prec	WITHOUT_CLASSIFICATION	0.9994833397382206	WITHOUT_CLASSIFICATION	5.16660261779448E-4	IMPLEMENTATION
// The loop of "Square Root by Coupled Newton Iteration"	WITHOUT_CLASSIFICATION	0.999534276528263	WITHOUT_CLASSIFICATION	4.657234717369938E-4	IMPLEMENTATION
// Increase precision - next iteration supplies n exact digits	WITHOUT_CLASSIFICATION	0.9976712059050687	WITHOUT_CLASSIFICATION	0.0023287940949312377	IMPLEMENTATION
// Next x                                        // e = d - x^2	WITHOUT_CLASSIFICATION	0.9994503110123418	WITHOUT_CLASSIFICATION	5.496889876582212E-4	IMPLEMENTATION
// x += e*v     ~ sqrt()	WITHOUT_CLASSIFICATION	0.9998798138845923	WITHOUT_CLASSIFICATION	1.2018611540765753E-4	IMPLEMENTATION
// root x is ready!	WITHOUT_CLASSIFICATION	0.9994602938910289	WITHOUT_CLASSIFICATION	5.397061089711322E-4	IMPLEMENTATION
// Next v                                        // g = 1 - 2*x*v	WITHOUT_CLASSIFICATION	0.9988608281943875	WITHOUT_CLASSIFICATION	0.0011391718056124858	IMPLEMENTATION
// v += g*v     ~ 1/2/sqrt()	WITHOUT_CLASSIFICATION	0.9997941410975035	WITHOUT_CLASSIFICATION	2.0585890249643366E-4	IMPLEMENTATION
// RubyBigdecimal	WITHOUT_CLASSIFICATION	0.9986385284494232	WITHOUT_CLASSIFICATION	0.001361471550576766	IMPLEMENTATION
// c: bind_eval	WITHOUT_CLASSIFICATION	0.9986385284494232	WITHOUT_CLASSIFICATION	0.001361471550576766	IMPLEMENTATION
/*  ================     *  Module Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999568771336916	WITHOUT_CLASSIFICATION	4.31228663082369E-5	IMPLEMENTATION
// from CommandlineParser	WITHOUT_CLASSIFICATION	0.9999110358225717	WITHOUT_CLASSIFICATION	8.896417742834004E-5	IMPLEMENTATION
// This property is a Boolean, to allow three values, so it can match MRI's nil, false and true	WITHOUT_CLASSIFICATION	0.9999245746981567	WITHOUT_CLASSIFICATION	7.542530184329917E-5	IMPLEMENTATION
// default ClassCache using jitMax as a soft upper bound	WITHOUT_CLASSIFICATION	0.9999558254249625	WITHOUT_CLASSIFICATION	4.41745750375148E-5	IMPLEMENTATION
// Until we get a little more solid on 1.9 support we will only run interpreted mode	WITHOUT_CLASSIFICATION	0.9259102862884601	WITHOUT_CLASSIFICATION	0.07408971371153987	IMPLEMENTATION
// Setting the loader needs to reset the class cache	WITHOUT_CLASSIFICATION	0.9905971360836164	WITHOUT_CLASSIFICATION	0.009402863916383586	IMPLEMENTATION
// try the normal property first	WITHOUT_CLASSIFICATION	0.9995844152078143	WITHOUT_CLASSIFICATION	4.15584792185648E-4	IMPLEMENTATION
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999145405124302	WITHOUT_CLASSIFICATION	8.545948756979419E-5	IMPLEMENTATION
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999145405124302	WITHOUT_CLASSIFICATION	8.545948756979419E-5	IMPLEMENTATION
// try loading from classloader resources	WITHOUT_CLASSIFICATION	0.9997242351870941	WITHOUT_CLASSIFICATION	2.7576481290596597E-4	IMPLEMENTATION
// otherwise fall back on system temp location	WITHOUT_CLASSIFICATION	0.958756514657399	WITHOUT_CLASSIFICATION	0.04124348534260111	IMPLEMENTATION
// We require the home directory to be absolute	WITHOUT_CLASSIFICATION	0.9996646527093063	WITHOUT_CLASSIFICATION	3.3534729069367275E-4	IMPLEMENTATION
//consume the file name	WITHOUT_CLASSIFICATION	0.9976066963274192	WITHOUT_CLASSIFICATION	0.0023933036725807978	IMPLEMENTATION
// Specify something that can't separate	WITHOUT_CLASSIFICATION	0.9995648887243468	WITHOUT_CLASSIFICATION	4.351112756532066E-4	IMPLEMENTATION
// try cwd first	WITHOUT_CLASSIFICATION	0.9981967816377888	WITHOUT_CLASSIFICATION	0.001803218362211294	IMPLEMENTATION
// ruby interpreter compatibilty // Usage: ruby [switches] [--] [programfile] [arguments])	WITHOUT_CLASSIFICATION	0.9993837240754918	WITHOUT_CLASSIFICATION	6.162759245082557E-4	IMPLEMENTATION
// KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 // if Ruby 2.0 encoding pragmas are implemented, this will need to change	WITHOUT_CLASSIFICATION	0.999835766940586	WITHOUT_CLASSIFICATION	1.6423305941394727E-4	IMPLEMENTATION
// @JRubyMethod(name = "complex?")	WITHOUT_CLASSIFICATION	0.9990216439736581	WITHOUT_CLASSIFICATION	9.783560263418938E-4	IMPLEMENTATION
// @JRubyMethod(name = "exact?")	WITHOUT_CLASSIFICATION	0.9990216439736581	WITHOUT_CLASSIFICATION	9.783560263418938E-4	IMPLEMENTATION
// @JRubyMethod(name = "inexact?")	WITHOUT_CLASSIFICATION	0.9990216439736581	WITHOUT_CLASSIFICATION	9.783560263418938E-4	IMPLEMENTATION
// symbol string *must* be interned	WITHOUT_CLASSIFICATION	0.9999687592379816	WITHOUT_CLASSIFICATION	3.124076201849986E-5	IMPLEMENTATION
//        assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";	WITHOUT_CLASSIFICATION	0.9978953144228645	WITHOUT_CLASSIFICATION	0.0021046855771356256	IMPLEMENTATION
/* Symbol class methods.     *      */	WITHOUT_CLASSIFICATION	0.9999594660616449	WITHOUT_CLASSIFICATION	4.0533938355113155E-5	IMPLEMENTATION
// TODO: 1.9 rb_enc_symname_p	WITHOUT_CLASSIFICATION	0.5441867827814393	IMPLEMENTATION	0.45581321721856055	WITHOUT_CLASSIFICATION
// This is needed to unpack stuff	WITHOUT_CLASSIFICATION	0.8061857144507619	IMPLEMENTATION	0.19381428554923813	WITHOUT_CLASSIFICATION
// we already confirmed above that length > 0	WITHOUT_CLASSIFICATION	0.9946654127483825	WITHOUT_CLASSIFICATION	0.005334587251617512	IMPLEMENTATION
// *must* be power of 2!	WITHOUT_CLASSIFICATION	0.9998611724313061	WITHOUT_CLASSIFICATION	1.3882756869385533E-4	IMPLEMENTATION
// note all fields are final -- rehash creates new entries when necessary. // as documented in java.util.concurrent.ConcurrentHashMap.java, that will // statistically affect only a small percentage (< 20%) of entries for a given rehash.	WITHOUT_CLASSIFICATION	0.9998276170552411	WITHOUT_CLASSIFICATION	1.7238294475890482E-4	IMPLEMENTATION
//            assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9978953144228645	WITHOUT_CLASSIFICATION	0.0021046855771356256	IMPLEMENTATION
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9996671911033055	WITHOUT_CLASSIFICATION	3.3280889669444485E-4	IMPLEMENTATION
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9996671911033055	WITHOUT_CLASSIFICATION	3.3280889669444485E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9986385284494232	WITHOUT_CLASSIFICATION	0.001361471550576766	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9986385284494232	WITHOUT_CLASSIFICATION	0.001361471550576766	IMPLEMENTATION
// backwards-compatibility, but threadsafe now	WITHOUT_CLASSIFICATION	0.9999298117027794	WITHOUT_CLASSIFICATION	7.01882972205158E-5	IMPLEMENTATION
//  Single node on list	WITHOUT_CLASSIFICATION	0.9993132225510453	WITHOUT_CLASSIFICATION	6.867774489547147E-4	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.999684280517797	WITHOUT_CLASSIFICATION	3.15719482203039E-4	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9988825244680013	WITHOUT_CLASSIFICATION	0.0011174755319985962	IMPLEMENTATION
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9845508297329677	WITHOUT_CLASSIFICATION	0.015449170267032231	IMPLEMENTATION
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9969375268802921	WITHOUT_CLASSIFICATION	0.0030624731197078873	IMPLEMENTATION
// not so backwards-compatible here, but no one should have been // calling this anyway.	WITHOUT_CLASSIFICATION	0.9989169548349786	WITHOUT_CLASSIFICATION	0.0010830451650214667	IMPLEMENTATION
// Profile	WITHOUT_CLASSIFICATION	0.9999784597016939	WITHOUT_CLASSIFICATION	2.1540298306134925E-5	IMPLEMENTATION
//static private final String TRANSLIT = "//translit";	WITHOUT_CLASSIFICATION	0.9970771046870958	WITHOUT_CLASSIFICATION	0.002922895312904263	IMPLEMENTATION
// treat start and end as start...end for end >= 0, start..end for end < 0	WITHOUT_CLASSIFICATION	0.9991732183878688	WITHOUT_CLASSIFICATION	8.267816121312456E-4	IMPLEMENTATION
// invalid ranges result in an empty string	WITHOUT_CLASSIFICATION	0.99999927485154	WITHOUT_CLASSIFICATION	7.251484600550959E-7	IMPLEMENTATION
// Methods of the Nil Class (nil_*):	WITHOUT_CLASSIFICATION	0.9998684097882671	WITHOUT_CLASSIFICATION	1.3159021173290243E-4	IMPLEMENTATION
// Has read/write been closed or is it still open for business	WITHOUT_CLASSIFICATION	0.991356550906137	WITHOUT_CLASSIFICATION	0.00864344909386306	IMPLEMENTATION
// Support IO modes that this object was opened with	WITHOUT_CLASSIFICATION	0.998479337165025	WITHOUT_CLASSIFICATION	0.0015206628349750126	IMPLEMENTATION
// must let original string know we're modifying, so shared buffers aren't damaged	WITHOUT_CLASSIFICATION	0.9997805798990019	WITHOUT_CLASSIFICATION	2.194201009981036E-4	IMPLEMENTATION
// reset the state	WITHOUT_CLASSIFICATION	0.9979790182082904	WITHOUT_CLASSIFICATION	0.0020209817917095836	IMPLEMENTATION
// Tainting here if we ever want it. (secure 4)	WITHOUT_CLASSIFICATION	0.9992585165282413	WITHOUT_CLASSIFICATION	7.414834717586672E-4	IMPLEMENTATION
// rb_match_busy	WITHOUT_CLASSIFICATION	0.9986385284494232	WITHOUT_CLASSIFICATION	0.001361471550576766	IMPLEMENTATION
//str is frozen	WITHOUT_CLASSIFICATION	0.9984716727635367	WITHOUT_CLASSIFICATION	0.0015283272364633282	IMPLEMENTATION
// MRI also does a pointer comparison here	WITHOUT_CLASSIFICATION	0.9994769170249194	WITHOUT_CLASSIFICATION	5.230829750806702E-4	IMPLEMENTATION
// JRubyServer	WITHOUT_CLASSIFICATION	0.9986385284494232	WITHOUT_CLASSIFICATION	0.001361471550576766	IMPLEMENTATION
// Class.allocate object is not allocatable before it is initialized	WITHOUT_CLASSIFICATION	0.9938766811566115	WITHOUT_CLASSIFICATION	0.0061233188433883765	IMPLEMENTATION
// boot the Object class 	WITHOUT_CLASSIFICATION	0.9998179433312964	WITHOUT_CLASSIFICATION	1.8205666870361786E-4	IMPLEMENTATION
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9998823083295248	WITHOUT_CLASSIFICATION	1.176916704750496E-4	IMPLEMENTATION
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999306440564202	WITHOUT_CLASSIFICATION	6.935594357986226E-5	IMPLEMENTATION
// undo check	WITHOUT_CLASSIFICATION	0.9989888617736954	WITHOUT_CLASSIFICATION	0.0010111382263045783	IMPLEMENTATION
// This is a non-standard method; have we decided to start extending Ruby? //classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));	WITHOUT_CLASSIFICATION	0.999084007887524	WITHOUT_CLASSIFICATION	9.159921124759869E-4	IMPLEMENTATION
// boot the Module and Class classes	WITHOUT_CLASSIFICATION	0.9998890837023872	WITHOUT_CLASSIFICATION	1.1091629761291487E-4	IMPLEMENTATION
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9973439326994339	WITHOUT_CLASSIFICATION	0.0026560673005660263	IMPLEMENTATION
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9992883239137329	WITHOUT_CLASSIFICATION	7.116760862671695E-4	IMPLEMENTATION
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9992883239137329	WITHOUT_CLASSIFICATION	7.116760862671695E-4	IMPLEMENTATION
// could be pulled down to RubyClass in future // rb_class_boot	WITHOUT_CLASSIFICATION	0.9998996012638581	WITHOUT_CLASSIFICATION	1.0039873614193416E-4	IMPLEMENTATION
// remove us from old superclass's child classes	WITHOUT_CLASSIFICATION	0.9999834166460744	WITHOUT_CLASSIFICATION	1.6583353925663764E-5	IMPLEMENTATION
// add us to new superclass's child classes	WITHOUT_CLASSIFICATION	0.9997942767338981	WITHOUT_CLASSIFICATION	2.0572326610184878E-4	IMPLEMENTATION
// update all subclasses	WITHOUT_CLASSIFICATION	0.9998805295476435	WITHOUT_CLASSIFICATION	1.1947045235647707E-4	IMPLEMENTATION
// fields to hold Ruby and RubyClass references	WITHOUT_CLASSIFICATION	0.9980545598254085	WITHOUT_CLASSIFICATION	0.0019454401745914898	IMPLEMENTATION
// static initializing method	WITHOUT_CLASSIFICATION	0.99486585384274	WITHOUT_CLASSIFICATION	0.005134146157260089	IMPLEMENTATION
// standard constructor that accepts Ruby, RubyClass	WITHOUT_CLASSIFICATION	0.9995838122456805	WITHOUT_CLASSIFICATION	4.1618775431946214E-4	IMPLEMENTATION
// no-arg constructor using static references to Ruby and RubyClass	WITHOUT_CLASSIFICATION	0.9997436474468285	WITHOUT_CLASSIFICATION	2.563525531715369E-4	IMPLEMENTATION
// non-signature signature with just IRubyObject	WITHOUT_CLASSIFICATION	0.9997203559253658	WITHOUT_CLASSIFICATION	2.7964407463420003E-4	IMPLEMENTATION
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999899295974817	WITHOUT_CLASSIFICATION	1.0070402518387938E-5	IMPLEMENTATION
// self // method name	WITHOUT_CLASSIFICATION	0.9950146268063016	WITHOUT_CLASSIFICATION	0.0049853731936984075	IMPLEMENTATION
// the default allocator	WITHOUT_CLASSIFICATION	0.9999354548990619	WITHOUT_CLASSIFICATION	6.454510093811643E-5	IMPLEMENTATION
// Equivalent of T_DATA	WITHOUT_CLASSIFICATION	0.9997497600044001	WITHOUT_CLASSIFICATION	2.5023999559991883E-4	IMPLEMENTATION
// do nothing, leave empty	WITHOUT_CLASSIFICATION	0.999792884668156	WITHOUT_CLASSIFICATION	2.0711533184402688E-4	IMPLEMENTATION
// Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9997835411057506	WITHOUT_CLASSIFICATION	2.16458894249344E-4	IMPLEMENTATION
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999569242809966	WITHOUT_CLASSIFICATION	4.307571900348299E-5	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9988241092547822	WITHOUT_CLASSIFICATION	0.0011758907452177826	IMPLEMENTATION
// Make sure all arguments are modules before calling the callbacks	WITHOUT_CLASSIFICATION	0.9999361822771545	WITHOUT_CLASSIFICATION	6.38177228455605E-5	IMPLEMENTATION
// MRI extends in order from last to first	WITHOUT_CLASSIFICATION	0.9999818358503323	WITHOUT_CLASSIFICATION	1.8164149667782166E-5	IMPLEMENTATION
// NOTE: Serialization is primarily supported for testing purposes, and there is no general // guarantee that serialization will work correctly. Specifically, instance variables pointing // at symbols, threads, modules, classes, and other unserializable types are not detected.	WITHOUT_CLASSIFICATION	0.9998812115530576	WITHOUT_CLASSIFICATION	1.1878844694237055E-4	IMPLEMENTATION
// write out ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9993958850841091	WITHOUT_CLASSIFICATION	6.041149158909852E-4	IMPLEMENTATION
// rest in ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9998144037920883	WITHOUT_CLASSIFICATION	1.8559620791173736E-4	IMPLEMENTATION
// 0x3fff_ffff // -0x4000_0000	WITHOUT_CLASSIFICATION	0.9996237203449804	WITHOUT_CLASSIFICATION	3.7627965501967623E-4	IMPLEMENTATION
// a gotcha	WITHOUT_CLASSIFICATION	0.9988987383803517	WITHOUT_CLASSIFICATION	0.001101261619648302	IMPLEMENTATION
// Java / and % are not the same as ruby	WITHOUT_CLASSIFICATION	0.9993272614600119	WITHOUT_CLASSIFICATION	6.727385399880668E-4	IMPLEMENTATION
// A gotcha for Long.MIN_VALUE: value = -value	WITHOUT_CLASSIFICATION	0.9993279031032756	WITHOUT_CLASSIFICATION	6.720968967244426E-4	IMPLEMENTATION
// Piece of mri rb_to_id	WITHOUT_CLASSIFICATION	0.9997497600044001	WITHOUT_CLASSIFICATION	2.5023999559991883E-4	IMPLEMENTATION
// Java Doubles are 64 bit long:            	WITHOUT_CLASSIFICATION	0.9997874140579002	WITHOUT_CLASSIFICATION	2.1258594209978585E-4	IMPLEMENTATION
// Double.MAX_EXPONENT since Java 1.6            	WITHOUT_CLASSIFICATION	0.9997835411057506	WITHOUT_CLASSIFICATION	2.16458894249344E-4	IMPLEMENTATION
// don't override Numeric#div !	WITHOUT_CLASSIFICATION	0.9994124014000615	WITHOUT_CLASSIFICATION	5.875985999384923E-4	IMPLEMENTATION
// Modelled after c ruby implementation (java /,% not same as ruby)	WITHOUT_CLASSIFICATION	0.9907746254071327	WITHOUT_CLASSIFICATION	0.009225374592867321	IMPLEMENTATION
// MRI behavior:	WITHOUT_CLASSIFICATION	0.9986385284494232	WITHOUT_CLASSIFICATION	0.001361471550576766	IMPLEMENTATION
// Numeric.equal            	WITHOUT_CLASSIFICATION	0.9996237203449804	WITHOUT_CLASSIFICATION	3.7627965501967623E-4	IMPLEMENTATION
// provider is not available	WITHOUT_CLASSIFICATION	0.996779014711047	WITHOUT_CLASSIFICATION	0.0032209852889530225	IMPLEMENTATION
// bouncy castle doesn't support algorithm	WITHOUT_CLASSIFICATION	0.9950776269707203	WITHOUT_CLASSIFICATION	0.0049223730292796775	IMPLEMENTATION
// fall back to system JCA providers	WITHOUT_CLASSIFICATION	0.9958380101578049	WITHOUT_CLASSIFICATION	0.004161989842195036	IMPLEMENTATION
// RubyDigest	WITHOUT_CLASSIFICATION	0.9986385284494232	WITHOUT_CLASSIFICATION	0.001361471550576766	IMPLEMENTATION
// ENEBO: Can these be fast?	WITHOUT_CLASSIFICATION	0.9995065202966502	WITHOUT_CLASSIFICATION	4.934797033498051E-4	IMPLEMENTATION
// synchronize on the RubyThread for threadgroup updates	WITHOUT_CLASSIFICATION	0.9994474716398434	WITHOUT_CLASSIFICATION	5.52528360156613E-4	IMPLEMENTATION
// we only add live threads	WITHOUT_CLASSIFICATION	0.9993657130702245	WITHOUT_CLASSIFICATION	6.342869297754559E-4	IMPLEMENTATION
// use same ClassIndex as metaclass, since we're technically still of that type	WITHOUT_CLASSIFICATION	0.9996198036752506	WITHOUT_CLASSIFICATION	3.801963247493595E-4	IMPLEMENTATION
// handle everything after -- as arguments to the jruby process	WITHOUT_CLASSIFICATION	0.9957280709542156	WITHOUT_CLASSIFICATION	0.004271929045784437	IMPLEMENTATION
// JRubyService	WITHOUT_CLASSIFICATION	0.9986385284494232	WITHOUT_CLASSIFICATION	0.001361471550576766	IMPLEMENTATION
// while	WITHOUT_CLASSIFICATION	0.9999805147025083	WITHOUT_CLASSIFICATION	1.9485297491710473E-5	IMPLEMENTATION
/* \OOO */	WITHOUT_CLASSIFICATION	0.9999970415563082	WITHOUT_CLASSIFICATION	2.9584436917105443E-6	IMPLEMENTATION
// CRuby uses sprintf(buf, "%.*g", FLOAT_DIG, d); // This pattern adjusts the output of String.pattern("%g") to mimic // the C version.	WITHOUT_CLASSIFICATION	0.9993147906764583	WITHOUT_CLASSIFICATION	6.852093235416156E-4	IMPLEMENTATION
// mask off "once" flag	WITHOUT_CLASSIFICATION	0.9992493748444282	WITHOUT_CLASSIFICATION	7.506251555718666E-4	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9993665207976737	WITHOUT_CLASSIFICATION	6.334792023263506E-4	IMPLEMENTATION
// internal usage (Complex/Rational)	WITHOUT_CLASSIFICATION	0.9998134438159386	WITHOUT_CLASSIFICATION	1.8655618406142918E-4	IMPLEMENTATION
// silent ?	WITHOUT_CLASSIFICATION	0.9988491269433439	WITHOUT_CLASSIFICATION	0.001150873056656004	IMPLEMENTATION
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999970415563082	WITHOUT_CLASSIFICATION	2.9584436917105443E-6	IMPLEMENTATION
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999540256974796	WITHOUT_CLASSIFICATION	4.597430252052463E-5	IMPLEMENTATION
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9998335097239774	WITHOUT_CLASSIFICATION	1.6649027602250264E-4	IMPLEMENTATION
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9998335097239774	WITHOUT_CLASSIFICATION	1.6649027602250264E-4	IMPLEMENTATION
/* \O, \OO, \OOO or backref */	WITHOUT_CLASSIFICATION	0.9999326341459537	WITHOUT_CLASSIFICATION	6.736585404636643E-5	IMPLEMENTATION
// MBCLEN_NEEDMORE_P	WITHOUT_CLASSIFICATION	0.9986385284494232	WITHOUT_CLASSIFICATION	0.001361471550576766	IMPLEMENTATION
// MBCLEN_INVALID_P	WITHOUT_CLASSIFICATION	0.9986385284494232	WITHOUT_CLASSIFICATION	0.001361471550576766	IMPLEMENTATION
// Unicode is can be only 21 bits long, int is enough	WITHOUT_CLASSIFICATION	0.9995062707016398	WITHOUT_CLASSIFICATION	4.937292983602589E-4	IMPLEMENTATION
/* Surrogates */	WITHOUT_CLASSIFICATION	0.9998335097239774	WITHOUT_CLASSIFICATION	1.6649027602250264E-4	IMPLEMENTATION
// do not load the class if not used	WITHOUT_CLASSIFICATION	0.9985757077046977	WITHOUT_CLASSIFICATION	0.0014242922953022485	IMPLEMENTATION
/* \0, \0O, \0OO */	WITHOUT_CLASSIFICATION	0.9998335097239774	WITHOUT_CLASSIFICATION	1.6649027602250264E-4	IMPLEMENTATION
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999970415563082	WITHOUT_CLASSIFICATION	2.9584436917105443E-6	IMPLEMENTATION
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9998335097239774	WITHOUT_CLASSIFICATION	1.6649027602250264E-4	IMPLEMENTATION
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999540256974796	WITHOUT_CLASSIFICATION	4.597430252052463E-5	IMPLEMENTATION
/* \\u{H HH HHH HHHH HHHHH HHHHHH ...} */	WITHOUT_CLASSIFICATION	0.9999246867910838	WITHOUT_CLASSIFICATION	7.53132089162311E-5	IMPLEMENTATION
/* \\uHHHH */	WITHOUT_CLASSIFICATION	0.9998335097239774	WITHOUT_CLASSIFICATION	1.6649027602250264E-4	IMPLEMENTATION
/* \p{Hiragana} */	WITHOUT_CLASSIFICATION	0.9998335097239774	WITHOUT_CLASSIFICATION	1.6649027602250264E-4	IMPLEMENTATION
// inner switch	WITHOUT_CLASSIFICATION	0.9987266512568054	WITHOUT_CLASSIFICATION	0.001273348743194693	IMPLEMENTATION
// newInstance here	WITHOUT_CLASSIFICATION	0.9949272024650971	WITHOUT_CLASSIFICATION	0.005072797534902829	IMPLEMENTATION
// rb_reg_raise	WITHOUT_CLASSIFICATION	0.9986385284494232	WITHOUT_CLASSIFICATION	0.001361471550576766	IMPLEMENTATION
// rb_reg_desc	WITHOUT_CLASSIFICATION	0.9986385284494232	WITHOUT_CLASSIFICATION	0.001361471550576766	IMPLEMENTATION
// rb_enc_reg_raise	WITHOUT_CLASSIFICATION	0.9986385284494232	WITHOUT_CLASSIFICATION	0.001361471550576766	IMPLEMENTATION
// rb_enc_reg_error_desc	WITHOUT_CLASSIFICATION	0.9996237203449804	WITHOUT_CLASSIFICATION	3.7627965501967623E-4	IMPLEMENTATION
// rb_reg_initialize_str	WITHOUT_CLASSIFICATION	0.9996237203449804	WITHOUT_CLASSIFICATION	3.7627965501967623E-4	IMPLEMENTATION
// rb_reg_initialize	WITHOUT_CLASSIFICATION	0.9986385284494232	WITHOUT_CLASSIFICATION	0.001361471550576766	IMPLEMENTATION
// JRUBY-3625: delay setting backref until the MatchData is completely initialized	WITHOUT_CLASSIFICATION	0.9999644753206289	WITHOUT_CLASSIFICATION	3.552467937103761E-5	IMPLEMENTATION
// rb_reg_expr_str	WITHOUT_CLASSIFICATION	0.9986385284494232	WITHOUT_CLASSIFICATION	0.001361471550576766	IMPLEMENTATION
// option_to_str	WITHOUT_CLASSIFICATION	0.9986385284494232	WITHOUT_CLASSIFICATION	0.001361471550576766	IMPLEMENTATION
// Don't initialize with class // Don't put in object space and don't taint	WITHOUT_CLASSIFICATION	0.9998300235525859	WITHOUT_CLASSIFICATION	1.6997644741413248E-4	IMPLEMENTATION
// args should be before block	WITHOUT_CLASSIFICATION	0.9994821445210409	WITHOUT_CLASSIFICATION	5.178554789591573E-4	IMPLEMENTATION
// args should be at end	WITHOUT_CLASSIFICATION	0.999751689651196	WITHOUT_CLASSIFICATION	2.483103488039904E-4	IMPLEMENTATION
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9966387356888736	WITHOUT_CLASSIFICATION	0.0033612643111264285	IMPLEMENTATION
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9966387356888736	WITHOUT_CLASSIFICATION	0.0033612643111264285	IMPLEMENTATION
// skip anything not related to jruby	WITHOUT_CLASSIFICATION	0.8884952166917164	WITHOUT_CLASSIFICATION	0.11150478330828367	IMPLEMENTATION
// start a new populator	WITHOUT_CLASSIFICATION	0.999809580085768	WITHOUT_CLASSIFICATION	1.9041991423198173E-4	IMPLEMENTATION
// check for frame field reads or writes	WITHOUT_CLASSIFICATION	0.9993170871343404	WITHOUT_CLASSIFICATION	6.829128656595548E-4	IMPLEMENTATION
// add all names for this annotation	WITHOUT_CLASSIFICATION	0.9996169385080622	WITHOUT_CLASSIFICATION	3.8306149193774214E-4	IMPLEMENTATION
// no annotated methods found, skip	WITHOUT_CLASSIFICATION	0.9982875078309497	WITHOUT_CLASSIFICATION	0.0017124921690503635	IMPLEMENTATION
// write out a static initializer for frame names, so it only fires once	WITHOUT_CLASSIFICATION	0.999810782995874	WITHOUT_CLASSIFICATION	1.8921700412586408E-4	IMPLEMENTATION
// single method, use normal logic	WITHOUT_CLASSIFICATION	0.9979081185658449	WITHOUT_CLASSIFICATION	0.002091881434155099	IMPLEMENTATION
// multimethod, new logic	WITHOUT_CLASSIFICATION	0.9997208220311936	WITHOUT_CLASSIFICATION	2.79177968806398E-4	IMPLEMENTATION
// declared type returns the qualified name without $ for inner classes!!!	WITHOUT_CLASSIFICATION	0.9997828954357681	WITHOUT_CLASSIFICATION	2.1710456423174452E-4	IMPLEMENTATION
// inner class, use $ to delimit	WITHOUT_CLASSIFICATION	0.997817650652532	WITHOUT_CLASSIFICATION	0.002182349347468029	IMPLEMENTATION
//                        RubyModule singletonClass = module.getSingletonClass();	WITHOUT_CLASSIFICATION	0.9993203472799311	WITHOUT_CLASSIFICATION	6.796527200688834E-4	IMPLEMENTATION
//                }	WITHOUT_CLASSIFICATION	0.9990968542213321	WITHOUT_CLASSIFICATION	9.031457786679283E-4	IMPLEMENTATION
// fallback on non-pregenerated logic	WITHOUT_CLASSIFICATION	0.9987862601438259	WITHOUT_CLASSIFICATION	0.0012137398561741634	IMPLEMENTATION
// refresh call adapter, since it matters if this is iter-based or not	WITHOUT_CLASSIFICATION	0.9963342679518896	WITHOUT_CLASSIFICATION	0.0036657320481102954	IMPLEMENTATION
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9316901311316907	WITHOUT_CLASSIFICATION	0.06830986886830921	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.9988166854232297	WITHOUT_CLASSIFICATION	0.001183314576770457	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.9992630382839363	WITHOUT_CLASSIFICATION	7.369617160638185E-4	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9992798892541771	WITHOUT_CLASSIFICATION	7.201107458228891E-4	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9992798892541771	WITHOUT_CLASSIFICATION	7.201107458228891E-4	IMPLEMENTATION
// colon3	WITHOUT_CLASSIFICATION	0.999975778940229	WITHOUT_CLASSIFICATION	2.422105977089807E-5	IMPLEMENTATION
// Colon3	WITHOUT_CLASSIFICATION	0.999975778940229	WITHOUT_CLASSIFICATION	2.422105977089807E-5	IMPLEMENTATION
// array created for rescue args doesn't need to be in ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999858354483339	WITHOUT_CLASSIFICATION	1.4164551666174776E-5	IMPLEMENTATION
// For b.foo	WITHOUT_CLASSIFICATION	0.9975853827599048	WITHOUT_CLASSIFICATION	0.0024146172400952895	IMPLEMENTATION
// instance config for the script run	WITHOUT_CLASSIFICATION	0.9997836724463914	WITHOUT_CLASSIFICATION	2.1632755360853474E-4	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9992798892541771	WITHOUT_CLASSIFICATION	7.201107458228891E-4	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9992798892541771	WITHOUT_CLASSIFICATION	7.201107458228891E-4	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999597528656446	WITHOUT_CLASSIFICATION	4.024713435538709E-5	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999597528656446	WITHOUT_CLASSIFICATION	4.024713435538709E-5	IMPLEMENTATION
//RubyModule module = context.getRubyClass();	WITHOUT_CLASSIFICATION	0.9983235341864573	WITHOUT_CLASSIFICATION	0.0016764658135427525	IMPLEMENTATION
// For 'b.foo'	WITHOUT_CLASSIFICATION	0.9975853827599048	WITHOUT_CLASSIFICATION	0.0024146172400952895	IMPLEMENTATION
// We define an actual list to get around bug in java integration (1387115)	WITHOUT_CLASSIFICATION	0.9999948118111909	WITHOUT_CLASSIFICATION	5.188188809152268E-6	IMPLEMENTATION
// something in here is used to build up ruby stack trace...	WITHOUT_CLASSIFICATION	0.999917118922008	WITHOUT_CLASSIFICATION	8.288107799205965E-5	IMPLEMENTATION
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9996907993383886	WITHOUT_CLASSIFICATION	3.092006616114459E-4	IMPLEMENTATION
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9996907993383886	WITHOUT_CLASSIFICATION	3.092006616114459E-4	IMPLEMENTATION
// do nothing, allow loop to retry	WITHOUT_CLASSIFICATION	0.998996502798515	WITHOUT_CLASSIFICATION	0.0010034972014849228	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9996300686676426	WITHOUT_CLASSIFICATION	3.6993133235741616E-4	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9992548809341479	WITHOUT_CLASSIFICATION	7.451190658521005E-4	IMPLEMENTATION
// never visited, should be fine	WITHOUT_CLASSIFICATION	0.9910380330600518	WITHOUT_CLASSIFICATION	0.008961966939948255	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999597528656446	WITHOUT_CLASSIFICATION	4.024713435538709E-5	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9997944526328504	WITHOUT_CLASSIFICATION	2.0554736714965558E-4	IMPLEMENTATION
// If we have more than one argument, then make sure the array is not ObjectSpaced.	WITHOUT_CLASSIFICATION	0.9692100471942293	WITHOUT_CLASSIFICATION	0.03078995280577061	IMPLEMENTATION
// Only in ruby 1.9 methods	WITHOUT_CLASSIFICATION	0.9999751967999443	WITHOUT_CLASSIFICATION	2.4803200055708113E-5	IMPLEMENTATION
// Bind 'normal' parameter values to the local scope for this method.	WITHOUT_CLASSIFICATION	0.9999683773645253	WITHOUT_CLASSIFICATION	3.162263547472551E-5	IMPLEMENTATION
// no arg grouping, just use bulk assignment methods	WITHOUT_CLASSIFICATION	0.9997688944722667	WITHOUT_CLASSIFICATION	2.3110552773342532E-4	IMPLEMENTATION
// optArgs and restArgs require more work, so isolate them and ArrayList creation here	WITHOUT_CLASSIFICATION	0.9890942757464491	WITHOUT_CLASSIFICATION	0.010905724253550894	IMPLEMENTATION
//        arity.checkArity(runtime, argsLength);	WITHOUT_CLASSIFICATION	0.9995719275459892	WITHOUT_CLASSIFICATION	4.2807245401080306E-4	IMPLEMENTATION
// no more values to stick in rest arg	WITHOUT_CLASSIFICATION	0.9999028422933066	WITHOUT_CLASSIFICATION	9.715770669339596E-5	IMPLEMENTATION
// set argv from main's args	WITHOUT_CLASSIFICATION	0.999906156573463	WITHOUT_CLASSIFICATION	9.384342653689191E-5	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.9988166854232297	WITHOUT_CLASSIFICATION	0.001183314576770457	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9992798892541771	WITHOUT_CLASSIFICATION	7.201107458228891E-4	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999597528656446	WITHOUT_CLASSIFICATION	4.024713435538709E-5	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9997944526328504	WITHOUT_CLASSIFICATION	2.0554736714965558E-4	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9705519620679468	WITHOUT_CLASSIFICATION	0.029448037932053226	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9705519620679468	WITHOUT_CLASSIFICATION	0.029448037932053226	IMPLEMENTATION
// block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] //assert argsNode != null : "argsNode is not null";	WITHOUT_CLASSIFICATION	0.9795122941882775	WITHOUT_CLASSIFICATION	0.020487705811722462	IMPLEMENTATION
// assign given optional arguments to their variables	WITHOUT_CLASSIFICATION	0.9983655844831024	WITHOUT_CLASSIFICATION	0.001634415516897581	IMPLEMENTATION
// in-frame EvalState should already have receiver set as self, continue to use it	WITHOUT_CLASSIFICATION	0.992980983084666	WITHOUT_CLASSIFICATION	0.007019016915333981	IMPLEMENTATION
// assign the default values, adding to the end of allArgs	WITHOUT_CLASSIFICATION	0.999671425498178	WITHOUT_CLASSIFICATION	3.2857450182198196E-4	IMPLEMENTATION
// Make sure the appropriate scope has proper size. See JRUBY-2046.	WITHOUT_CLASSIFICATION	0.9993924762456788	WITHOUT_CLASSIFICATION	6.075237543212452E-4	IMPLEMENTATION
// Experimental class reification support, to create real Java classes // for Ruby classes after the first opening	WITHOUT_CLASSIFICATION	0.9999698543756796	WITHOUT_CLASSIFICATION	3.014562432040175E-5	IMPLEMENTATION
// This should never happen past parse, but just bulletproof this just in case	WITHOUT_CLASSIFICATION	0.9996867817478665	WITHOUT_CLASSIFICATION	3.1321825213347825E-4	IMPLEMENTATION
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9987485002402893	WITHOUT_CLASSIFICATION	0.001251499759710712	IMPLEMENTATION
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9995200041266726	WITHOUT_CLASSIFICATION	4.7999587332732944E-4	IMPLEMENTATION
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999290251381203	WITHOUT_CLASSIFICATION	7.097486187966185E-5	IMPLEMENTATION
// never visited, should be ok	WITHOUT_CLASSIFICATION	0.9888335680073245	WITHOUT_CLASSIFICATION	0.011166431992675465	IMPLEMENTATION
// If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil	WITHOUT_CLASSIFICATION	0.989783257368712	WITHOUT_CLASSIFICATION	0.010216742631287981	IMPLEMENTATION
// JRUBY-530 until case	WITHOUT_CLASSIFICATION	0.9998374074683257	WITHOUT_CLASSIFICATION	1.6259253167431555E-4	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.9992630382839363	WITHOUT_CLASSIFICATION	7.369617160638185E-4	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999597528656446	WITHOUT_CLASSIFICATION	4.024713435538709E-5	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9996300686676426	WITHOUT_CLASSIFICATION	3.6993133235741616E-4	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9992548809341479	WITHOUT_CLASSIFICATION	7.451190658521005E-4	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9992548809341479	WITHOUT_CLASSIFICATION	7.451190658521005E-4	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999597528656446	WITHOUT_CLASSIFICATION	4.024713435538709E-5	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9997944526328504	WITHOUT_CLASSIFICATION	2.0554736714965558E-4	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9997944526328504	WITHOUT_CLASSIFICATION	2.0554736714965558E-4	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9705519620679468	WITHOUT_CLASSIFICATION	0.029448037932053226	IMPLEMENTATION
// Empirical Observations: // null -> Some arity // argsNode == this.argsNode then check for arity changes // newline(splatnode) -> argspushnode	WITHOUT_CLASSIFICATION	0.9999746026818224	WITHOUT_CLASSIFICATION	2.5397318177627967E-5	IMPLEMENTATION
//assert !(value instanceof RubyArray)  : "Not an array";	WITHOUT_CLASSIFICATION	0.9991731276239603	WITHOUT_CLASSIFICATION	8.268723760397299E-4	IMPLEMENTATION
// Serialization killed our dynamic scope.  We can just create an empty one // since serialization cannot serialize an eval (which is the only thing // which is capable of having a non-empty dynamic scope).	WITHOUT_CLASSIFICATION	0.9999997804329008	WITHOUT_CLASSIFICATION	2.195670992671988E-7	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9848070130496909	WITHOUT_CLASSIFICATION	0.015192986950309071	IMPLEMENTATION
// We could probably also detect if LHS value came out of cache and avoid some of this	WITHOUT_CLASSIFICATION	0.9999536063539421	WITHOUT_CLASSIFICATION	4.639364605778898E-5	IMPLEMENTATION
//        assert thenBody != null : "thenBody is not null"; //        assert elseBody != null : "elseBody is not null";	WITHOUT_CLASSIFICATION	0.9970554435685902	WITHOUT_CLASSIFICATION	0.0029445564314098355	IMPLEMENTATION
// add in reverse order	WITHOUT_CLASSIFICATION	0.9999592814066334	WITHOUT_CLASSIFICATION	4.071859336658938E-5	IMPLEMENTATION
// in order to make pragma's noops we set location to a special value	WITHOUT_CLASSIFICATION	0.9996805027623251	WITHOUT_CLASSIFICATION	3.194972376748288E-4	IMPLEMENTATION
// ignore compiler pragmas	WITHOUT_CLASSIFICATION	0.9997366525518803	WITHOUT_CLASSIFICATION	2.63347448119732E-4	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9996300686676426	WITHOUT_CLASSIFICATION	3.6993133235741616E-4	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9992548809341479	WITHOUT_CLASSIFICATION	7.451190658521005E-4	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9992548809341479	WITHOUT_CLASSIFICATION	7.451190658521005E-4	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999597528656446	WITHOUT_CLASSIFICATION	4.024713435538709E-5	IMPLEMENTATION
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9987485002402893	WITHOUT_CLASSIFICATION	0.001251499759710712	IMPLEMENTATION
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999290251381203	WITHOUT_CLASSIFICATION	7.097486187966185E-5	IMPLEMENTATION
// No actual test, so do 'when' if when expression is not nil	WITHOUT_CLASSIFICATION	0.9998447140272126	WITHOUT_CLASSIFICATION	1.55285972787419E-4	IMPLEMENTATION
// save entering the try if there's nothing to ensure	WITHOUT_CLASSIFICATION	0.9998849182600567	WITHOUT_CLASSIFICATION	1.1508173994329738E-4	IMPLEMENTATION
// For 'foo'	WITHOUT_CLASSIFICATION	0.9975853827599048	WITHOUT_CLASSIFICATION	0.0024146172400952895	IMPLEMENTATION
// For 'foo'	WITHOUT_CLASSIFICATION	0.9975853827599048	WITHOUT_CLASSIFICATION	0.0024146172400952895	IMPLEMENTATION
// admittedly inefficient	WITHOUT_CLASSIFICATION	0.9996237203449804	WITHOUT_CLASSIFICATION	3.7627965501967623E-4	IMPLEMENTATION
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9996867666646012	WITHOUT_CLASSIFICATION	3.1323333539880487E-4	IMPLEMENTATION
// What static scoping relationship exists when it comes into being.	WITHOUT_CLASSIFICATION	0.9860662505664349	WITHOUT_CLASSIFICATION	0.01393374943356499	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9996588457113772	WITHOUT_CLASSIFICATION	3.4115428862279654E-4	IMPLEMENTATION
// just rethrow	WITHOUT_CLASSIFICATION	0.9996741552880883	WITHOUT_CLASSIFICATION	3.2584471191157005E-4	IMPLEMENTATION
// just rethrow	WITHOUT_CLASSIFICATION	0.9996741552880883	WITHOUT_CLASSIFICATION	3.2584471191157005E-4	IMPLEMENTATION
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9991238385590947	WITHOUT_CLASSIFICATION	8.761614409052591E-4	IMPLEMENTATION
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9991238385590947	WITHOUT_CLASSIFICATION	8.761614409052591E-4	IMPLEMENTATION
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9998282367737981	WITHOUT_CLASSIFICATION	1.717632262020065E-4	IMPLEMENTATION
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9998282367737981	WITHOUT_CLASSIFICATION	1.717632262020065E-4	IMPLEMENTATION
// Execute rescue block	WITHOUT_CLASSIFICATION	0.9991221530268795	WITHOUT_CLASSIFICATION	8.778469731205055E-4	IMPLEMENTATION
// If no exception is thrown execute else block	WITHOUT_CLASSIFICATION	0.9988387192028584	WITHOUT_CLASSIFICATION	0.001161280797141591	IMPLEMENTATION
// index of variable for this arg	WITHOUT_CLASSIFICATION	0.9996247898766183	WITHOUT_CLASSIFICATION	3.752101233816988E-4	IMPLEMENTATION
// only a marker interface	WITHOUT_CLASSIFICATION	0.9997991664609651	WITHOUT_CLASSIFICATION	2.0083353903484682E-4	IMPLEMENTATION
// don't attempt to coerce to array, just wrap and return	WITHOUT_CLASSIFICATION	0.999658743595568	WITHOUT_CLASSIFICATION	3.412564044321053E-4	IMPLEMENTATION
// pragmas	WITHOUT_CLASSIFICATION	0.999975778940229	WITHOUT_CLASSIFICATION	2.422105977089807E-5	IMPLEMENTATION
// The method also needs a scope, do both	WITHOUT_CLASSIFICATION	0.9655906170495315	WITHOUT_CLASSIFICATION	0.03440938295046839	IMPLEMENTATION
// We're doing normal framed compilation or the method needs a frame	WITHOUT_CLASSIFICATION	0.9818721552024738	WITHOUT_CLASSIFICATION	0.018127844797526202	IMPLEMENTATION
// The method doesn't need a scope or static scope; frame only	WITHOUT_CLASSIFICATION	0.9917968286109079	WITHOUT_CLASSIFICATION	0.008203171389092058	IMPLEMENTATION
// The method doesn't need a scope, but has static scope needs; use a dummy scope	WITHOUT_CLASSIFICATION	0.9989540508928512	WITHOUT_CLASSIFICATION	0.0010459491071487727	IMPLEMENTATION
// Proc.new needs the caller's block to instantiate a proc	WITHOUT_CLASSIFICATION	0.9919019728840912	WITHOUT_CLASSIFICATION	0.008098027115908757	IMPLEMENTATION
// check for Proc.new, an especially magic method	WITHOUT_CLASSIFICATION	0.9985135971907236	WITHOUT_CLASSIFICATION	0.001486402809276383	IMPLEMENTATION
// long, slow way causes disabling	WITHOUT_CLASSIFICATION	0.997444711167702	WITHOUT_CLASSIFICATION	0.0025552888322980063	IMPLEMENTATION
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9993983287852957	WITHOUT_CLASSIFICATION	6.016712147042677E-4	IMPLEMENTATION
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9993983287852957	WITHOUT_CLASSIFICATION	6.016712147042677E-4	IMPLEMENTATION
// long, slow way causes disabling for defined	WITHOUT_CLASSIFICATION	0.9992838576752466	WITHOUT_CLASSIFICATION	7.16142324753366E-4	IMPLEMENTATION
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9969375268802921	WITHOUT_CLASSIFICATION	0.0030624731197078873	IMPLEMENTATION
// Because Regexp#=== sets backref, we have to make this backref-aware	WITHOUT_CLASSIFICATION	0.9940688027850053	WITHOUT_CLASSIFICATION	0.0059311972149946116	IMPLEMENTATION
// encountered a node we don't recognize, set everything to true to disable optz	WITHOUT_CLASSIFICATION	0.9963884602084008	WITHOUT_CLASSIFICATION	0.0036115397915990996	IMPLEMENTATION
// only arrays that are "lightweight" are being used as args arrays	WITHOUT_CLASSIFICATION	0.9993084947999228	WITHOUT_CLASSIFICATION	6.915052000773186E-4	IMPLEMENTATION
// otherwise, it's a literal array	WITHOUT_CLASSIFICATION	0.9990117608591057	WITHOUT_CLASSIFICATION	9.882391408942881E-4	IMPLEMENTATION
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9981319144215386	WITHOUT_CLASSIFICATION	0.0018680855784613782	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9998361998642621	WITHOUT_CLASSIFICATION	1.6380013573801252E-4	IMPLEMENTATION
// compile first node as non-expr and then second node	WITHOUT_CLASSIFICATION	0.9996960567943097	WITHOUT_CLASSIFICATION	3.03943205690279E-4	IMPLEMENTATION
// last node, either !instanceof WhenNode or null, is the else	WITHOUT_CLASSIFICATION	0.9999601961367343	WITHOUT_CLASSIFICATION	3.980386326565995E-5	IMPLEMENTATION
// compile first node only	WITHOUT_CLASSIFICATION	0.9991467946113843	WITHOUT_CLASSIFICATION	8.532053886156865E-4	IMPLEMENTATION
// splatted when, can't do it yet	WITHOUT_CLASSIFICATION	0.9564936594103437	WITHOUT_CLASSIFICATION	0.04350634058965621	IMPLEMENTATION
// if __send__ with a literal symbol, compile it as a direct fcall	WITHOUT_CLASSIFICATION	0.9997477506333164	WITHOUT_CLASSIFICATION	2.522493666836398E-4	IMPLEMENTATION
// NOTE: Currently this optimization is limited to the following situations: // * All expressions must be int-ranged literal fixnums // It also still emits the code for the "safe" when logic, which is rather // wasteful (since it essentially doubles each code body). As such it is // normally disabled, but it serves as an example of how this optimization // could be done. Ideally, it should be combined with the when processing // to improve code reuse before it's generally available.	WITHOUT_CLASSIFICATION	0.9969517298242476	WITHOUT_CLASSIFICATION	0.0030482701757523134	IMPLEMENTATION
// aggregate when nodes into a list, unfortunately, this is no	WITHOUT_CLASSIFICATION	0.9995744190922927	WITHOUT_CLASSIFICATION	4.2558090770716437E-4	IMPLEMENTATION
// one arg but it's an array, treat it as a proper array	WITHOUT_CLASSIFICATION	0.9992122021695672	WITHOUT_CLASSIFICATION	7.877978304327469E-4	IMPLEMENTATION
// can't do it	WITHOUT_CLASSIFICATION	0.9926097334229136	WITHOUT_CLASSIFICATION	0.007390266577086407	IMPLEMENTATION
// otherwise, use normal args compiler	WITHOUT_CLASSIFICATION	0.99891234032866	WITHOUT_CLASSIFICATION	0.001087659671339996	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999496564442418	WITHOUT_CLASSIFICATION	5.034355575813899E-5	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999496564442418	WITHOUT_CLASSIFICATION	5.034355575813899E-5	IMPLEMENTATION
// these are all simple cases that don't require the heavier defined logic	WITHOUT_CLASSIFICATION	0.9992956274371648	WITHOUT_CLASSIFICATION	7.043725628351027E-4	IMPLEMENTATION
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9989612992561224	WITHOUT_CLASSIFICATION	0.0010387007438775661	IMPLEMENTATION
//[]	WITHOUT_CLASSIFICATION	0.9999591600903001	WITHOUT_CLASSIFICATION	4.083990969988955E-5	IMPLEMENTATION
//[]	WITHOUT_CLASSIFICATION	0.9999591600903001	WITHOUT_CLASSIFICATION	4.083990969988955E-5	IMPLEMENTATION
//          context.swapValues(); //context.consumeCurrentValue();	WITHOUT_CLASSIFICATION	0.9995719275459892	WITHOUT_CLASSIFICATION	4.2807245401080306E-4	IMPLEMENTATION
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[] //[self] //[RubyClass] //[RubyClass, RubyClass]	WITHOUT_CLASSIFICATION	0.9989612992561224	WITHOUT_CLASSIFICATION	0.0010387007438775661	IMPLEMENTATION
//[RubyClass]	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9989612992561224	WITHOUT_CLASSIFICATION	0.0010387007438775661	IMPLEMENTATION
// if root of method is rescue, compile as a light rescue	WITHOUT_CLASSIFICATION	0.9996837222414245	WITHOUT_CLASSIFICATION	3.162777585755239E-4	IMPLEMENTATION
// inspect body and args	WITHOUT_CLASSIFICATION	0.9997360300915478	WITHOUT_CLASSIFICATION	2.639699084522428E-4	IMPLEMENTATION
// inspect body and args	WITHOUT_CLASSIFICATION	0.9997360300915478	WITHOUT_CLASSIFICATION	2.639699084522428E-4	IMPLEMENTATION
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9984799168992202	WITHOUT_CLASSIFICATION	0.0015200831007797179	IMPLEMENTATION
// if root of method is rescue, compile as light rescue	WITHOUT_CLASSIFICATION	0.9996089184138236	WITHOUT_CLASSIFICATION	3.910815861764704E-4	IMPLEMENTATION
// invoke run with threadcontext and topself	WITHOUT_CLASSIFICATION	0.9992080697584402	WITHOUT_CLASSIFICATION	7.919302415597948E-4	IMPLEMENTATION
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9989612992561224	WITHOUT_CLASSIFICATION	0.0010387007438775661	IMPLEMENTATION
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9989612992561224	WITHOUT_CLASSIFICATION	0.0010387007438775661	IMPLEMENTATION
//[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9989612992561224	WITHOUT_CLASSIFICATION	0.0010387007438775661	IMPLEMENTATION
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9989612992561224	WITHOUT_CLASSIFICATION	0.0010387007438775661	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9861350592526016	WITHOUT_CLASSIFICATION	0.013864940747398458	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9998394095374268	WITHOUT_CLASSIFICATION	1.6059046257316947E-4	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9998394095374268	WITHOUT_CLASSIFICATION	1.6059046257316947E-4	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9991247229893818	WITHOUT_CLASSIFICATION	8.752770106181754E-4	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9991247229893818	WITHOUT_CLASSIFICATION	8.752770106181754E-4	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9991247229893818	WITHOUT_CLASSIFICATION	8.752770106181754E-4	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9998394095374268	WITHOUT_CLASSIFICATION	1.6059046257316947E-4	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9998394095374268	WITHOUT_CLASSIFICATION	1.6059046257316947E-4	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9861350592526016	WITHOUT_CLASSIFICATION	0.013864940747398458	IMPLEMENTATION
// force heap-scope behavior, since it uses parent's scope	WITHOUT_CLASSIFICATION	0.9992480693205018	WITHOUT_CLASSIFICATION	7.519306794980581E-4	IMPLEMENTATION
// always false or nil	WITHOUT_CLASSIFICATION	0.9995434938997186	WITHOUT_CLASSIFICATION	4.5650610028128905E-4	IMPLEMENTATION
// optimizations if we know ahead of time it will always be true or false	WITHOUT_CLASSIFICATION	0.9994081113177867	WITHOUT_CLASSIFICATION	5.918886822132236E-4	IMPLEMENTATION
// normal	WITHOUT_CLASSIFICATION	0.9999766235210633	WITHOUT_CLASSIFICATION	2.3376478936663113E-5	IMPLEMENTATION
// compile condition as non-expr and just compile "then" body	WITHOUT_CLASSIFICATION	0.9999239218680519	WITHOUT_CLASSIFICATION	7.607813194818609E-5	IMPLEMENTATION
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9935762644395639	WITHOUT_CLASSIFICATION	0.006423735560436006	IMPLEMENTATION
// just push nil for pragmas	WITHOUT_CLASSIFICATION	0.9999485674941466	WITHOUT_CLASSIFICATION	5.143250585329318E-5	IMPLEMENTATION
// "assignment" means the value is already on the stack	WITHOUT_CLASSIFICATION	0.9997071411457978	WITHOUT_CLASSIFICATION	2.928588542020973E-4	IMPLEMENTATION
// compile first node only	WITHOUT_CLASSIFICATION	0.9991467946113843	WITHOUT_CLASSIFICATION	8.532053886156865E-4	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9998394095374268	WITHOUT_CLASSIFICATION	1.6059046257316947E-4	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9998394095374268	WITHOUT_CLASSIFICATION	1.6059046257316947E-4	IMPLEMENTATION
// eval new value, call operator on old value, and assign	WITHOUT_CLASSIFICATION	0.9993882892529223	WITHOUT_CLASSIFICATION	6.1171074707762E-4	IMPLEMENTATION
// try optz version	WITHOUT_CLASSIFICATION	0.9970363635151999	WITHOUT_CLASSIFICATION	0.0029636364848001054	IMPLEMENTATION
// sizes must match	WITHOUT_CLASSIFICATION	0.9985118644541886	WITHOUT_CLASSIFICATION	0.0014881355458113991	IMPLEMENTATION
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9997424353869372	WITHOUT_CLASSIFICATION	2.575646130628822E-4	IMPLEMENTATION
// normal items at the "head" of the masgn	WITHOUT_CLASSIFICATION	0.9995384775510223	WITHOUT_CLASSIFICATION	4.6152244897761633E-4	IMPLEMENTATION
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9976624708817856	WITHOUT_CLASSIFICATION	0.0023375291182144192	IMPLEMENTATION
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9989947820934639	WITHOUT_CLASSIFICATION	0.0010052179065360974	IMPLEMENTATION
// only supports simple parallel assignment of up to 10 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999938017033558	WITHOUT_CLASSIFICATION	6.198296644051313E-6	IMPLEMENTATION
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.998647549960491	WITHOUT_CLASSIFICATION	0.0013524500395090894	IMPLEMENTATION
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999609725985743	WITHOUT_CLASSIFICATION	3.9027401425668514E-5	IMPLEMENTATION
//RedoNode redoNode = (RedoNode)node;	WITHOUT_CLASSIFICATION	0.99835144164039	WITHOUT_CLASSIFICATION	0.0016485583596098918	IMPLEMENTATION
// done processing args	WITHOUT_CLASSIFICATION	0.9997521734651553	WITHOUT_CLASSIFICATION	2.478265348446757E-4	IMPLEMENTATION
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9993149516860721	WITHOUT_CLASSIFICATION	6.850483139279886E-4	IMPLEMENTATION
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9987922769113773	WITHOUT_CLASSIFICATION	0.0012077230886227944	IMPLEMENTATION
// if arity 1, just compile the one element to save us the array cost	WITHOUT_CLASSIFICATION	0.9999801490593746	WITHOUT_CLASSIFICATION	1.9850940625436178E-5	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.999975778940229	WITHOUT_CLASSIFICATION	2.422105977089807E-5	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.999975778940229	WITHOUT_CLASSIFICATION	2.422105977089807E-5	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.999975778940229	WITHOUT_CLASSIFICATION	2.422105977089807E-5	IMPLEMENTATION
// compile into array	WITHOUT_CLASSIFICATION	0.9996611633659432	WITHOUT_CLASSIFICATION	3.3883663405675287E-4	IMPLEMENTATION
// compile first node as non-expr and compile second node	WITHOUT_CLASSIFICATION	0.9994277422882367	WITHOUT_CLASSIFICATION	5.722577117631679E-4	IMPLEMENTATION
// check if it's an immediate, and don't outline	WITHOUT_CLASSIFICATION	0.9999105898037002	WITHOUT_CLASSIFICATION	8.941019629974065E-5	IMPLEMENTATION
// condition is always true, just compile it and not body	WITHOUT_CLASSIFICATION	0.9972536651668903	WITHOUT_CLASSIFICATION	0.0027463348331098073	IMPLEMENTATION
// force static scope to claim restarg at 0, so it only implements the [] version of __file__	WITHOUT_CLASSIFICATION	0.9994512894664428	WITHOUT_CLASSIFICATION	5.487105335572175E-4	IMPLEMENTATION
// create method for toplevel of script	WITHOUT_CLASSIFICATION	0.999146842047858	WITHOUT_CLASSIFICATION	8.531579521419637E-4	IMPLEMENTATION
// it's a multiple-statement body, iterate over all elements in turn and chain if it get too long	WITHOUT_CLASSIFICATION	0.9999978446655695	WITHOUT_CLASSIFICATION	2.1553344304378136E-6	IMPLEMENTATION
// send it along as arity-specific, we don't need the array	WITHOUT_CLASSIFICATION	0.9969753160167768	WITHOUT_CLASSIFICATION	0.00302468398322315	IMPLEMENTATION
// single-statement body, just compile it	WITHOUT_CLASSIFICATION	0.9997097098370673	WITHOUT_CLASSIFICATION	2.902901629326692E-4	IMPLEMENTATION
// leave as a normal array	WITHOUT_CLASSIFICATION	0.999854610868525	WITHOUT_CLASSIFICATION	1.4538913147501046E-4	IMPLEMENTATION
// This method has JITed already or has been abandoned. Bail out.	WITHOUT_CLASSIFICATION	0.9735982239848304	WITHOUT_CLASSIFICATION	0.026401776015169572	IMPLEMENTATION
// The cache is full. Abandon JIT for this method and bail out.	WITHOUT_CLASSIFICATION	0.9951545409281121	WITHOUT_CLASSIFICATION	0.004845459071887928	IMPLEMENTATION
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9984799168992202	WITHOUT_CLASSIFICATION	0.0015200831007797179	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9998394095374268	WITHOUT_CLASSIFICATION	1.6059046257316947E-4	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9998394095374268	WITHOUT_CLASSIFICATION	1.6059046257316947E-4	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9861350592526016	WITHOUT_CLASSIFICATION	0.013864940747398458	IMPLEMENTATION
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9935762644395639	WITHOUT_CLASSIFICATION	0.006423735560436006	IMPLEMENTATION
// try optz version	WITHOUT_CLASSIFICATION	0.9970363635151999	WITHOUT_CLASSIFICATION	0.0029636364848001054	IMPLEMENTATION
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9997424353869372	WITHOUT_CLASSIFICATION	2.575646130628822E-4	IMPLEMENTATION
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9976624708817856	WITHOUT_CLASSIFICATION	0.0023375291182144192	IMPLEMENTATION
// sizes must match	WITHOUT_CLASSIFICATION	0.9985118644541886	WITHOUT_CLASSIFICATION	0.0014881355458113991	IMPLEMENTATION
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9989947820934639	WITHOUT_CLASSIFICATION	0.0010052179065360974	IMPLEMENTATION
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999609725985743	WITHOUT_CLASSIFICATION	3.9027401425668514E-5	IMPLEMENTATION
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.998647549960491	WITHOUT_CLASSIFICATION	0.0013524500395090894	IMPLEMENTATION
// done processing args	WITHOUT_CLASSIFICATION	0.9997521734651553	WITHOUT_CLASSIFICATION	2.478265348446757E-4	IMPLEMENTATION
// Check if the method has been explicitly excluded	WITHOUT_CLASSIFICATION	0.9964296772606063	WITHOUT_CLASSIFICATION	0.003570322739393709	IMPLEMENTATION
// class could not be found nor generated; give up on JIT and bail out	WITHOUT_CLASSIFICATION	0.9995419752937321	WITHOUT_CLASSIFICATION	4.580247062678384E-4	IMPLEMENTATION
// successfully got back a jitted method	WITHOUT_CLASSIFICATION	0.993866525712448	WITHOUT_CLASSIFICATION	0.00613347428755192	IMPLEMENTATION
// finally, grab the script	WITHOUT_CLASSIFICATION	0.9997192144772401	WITHOUT_CLASSIFICATION	2.80785522759898E-4	IMPLEMENTATION
// logEvery n methods based on configuration	WITHOUT_CLASSIFICATION	0.9989663920959776	WITHOUT_CLASSIFICATION	0.0010336079040224194	IMPLEMENTATION
// Time the compilation	WITHOUT_CLASSIFICATION	0.9996908435621599	WITHOUT_CLASSIFICATION	3.091564378400981E-4	IMPLEMENTATION
// we have a body, do a full-on method	WITHOUT_CLASSIFICATION	0.9844245607861859	WITHOUT_CLASSIFICATION	0.015575439213814053	IMPLEMENTATION
// If we don't have a body, check for required or opt args // if opt args, they could have side effects // if required args, need to raise errors if too few args passed // otherwise, method does nothing, make it a nop	WITHOUT_CLASSIFICATION	0.9983283037432547	WITHOUT_CLASSIFICATION	0.0016716962567453722	IMPLEMENTATION
// if we haven't already decided on a do-nothing call	WITHOUT_CLASSIFICATION	0.9996566032278383	WITHOUT_CLASSIFICATION	3.4339677216174914E-4	IMPLEMENTATION
// only supports simple parallel assignment of up to 4 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999896549399226	WITHOUT_CLASSIFICATION	1.0345060077357323E-5	IMPLEMENTATION
// normal items at the front or back of the masgn	WITHOUT_CLASSIFICATION	0.9990663185677038	WITHOUT_CLASSIFICATION	9.336814322962884E-4	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9997437442767397	WITHOUT_CLASSIFICATION	2.5625572326022384E-4	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.999687168587596	WITHOUT_CLASSIFICATION	3.1283141240402734E-4	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9991328006756938	WITHOUT_CLASSIFICATION	8.671993243063015E-4	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999500329409369	WITHOUT_CLASSIFICATION	4.996705906305214E-5	IMPLEMENTATION
// end of variable scope	WITHOUT_CLASSIFICATION	0.9996598486260153	WITHOUT_CLASSIFICATION	3.401513739846004E-4	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9945568129949665	WITHOUT_CLASSIFICATION	0.00544318700503354	IMPLEMENTATION
// Define the annotation for the method	WITHOUT_CLASSIFICATION	0.9970083517593139	WITHOUT_CLASSIFICATION	0.002991648240686066	IMPLEMENTATION
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9998498237788611	WITHOUT_CLASSIFICATION	1.5017622113885966E-4	IMPLEMENTATION
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9966032011526542	WITHOUT_CLASSIFICATION	0.0033967988473457378	IMPLEMENTATION
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9967042889352978	WITHOUT_CLASSIFICATION	0.003295711064702078	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9943916300527457	WITHOUT_CLASSIFICATION	0.005608369947254283	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9943916300527457	WITHOUT_CLASSIFICATION	0.005608369947254283	IMPLEMENTATION
// value is already on stack, save it for later	WITHOUT_CLASSIFICATION	0.9993004872663243	WITHOUT_CLASSIFICATION	6.995127336756353E-4	IMPLEMENTATION
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9769884813005393	WITHOUT_CLASSIFICATION	0.023011518699460817	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999591600903001	WITHOUT_CLASSIFICATION	4.083990969988955E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999591600903001	WITHOUT_CLASSIFICATION	4.083990969988955E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999591600903001	WITHOUT_CLASSIFICATION	4.083990969988955E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999591600903001	WITHOUT_CLASSIFICATION	4.083990969988955E-5	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999591600903001	WITHOUT_CLASSIFICATION	4.083990969988955E-5	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999591600903001	WITHOUT_CLASSIFICATION	4.083990969988955E-5	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999591600903001	WITHOUT_CLASSIFICATION	4.083990969988955E-5	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.9999591600903001	WITHOUT_CLASSIFICATION	4.083990969988955E-5	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.9999591600903001	WITHOUT_CLASSIFICATION	4.083990969988955E-5	IMPLEMENTATION
/*arg2*/	WITHOUT_CLASSIFICATION	0.9999591600903001	WITHOUT_CLASSIFICATION	4.083990969988955E-5	IMPLEMENTATION
/*args*/	WITHOUT_CLASSIFICATION	0.9999591600903001	WITHOUT_CLASSIFICATION	4.083990969988955E-5	IMPLEMENTATION
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9769884813005393	WITHOUT_CLASSIFICATION	0.023011518699460817	IMPLEMENTATION
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9993951372582432	WITHOUT_CLASSIFICATION	6.048627417566962E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999591600903001	WITHOUT_CLASSIFICATION	4.083990969988955E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999591600903001	WITHOUT_CLASSIFICATION	4.083990969988955E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999591600903001	WITHOUT_CLASSIFICATION	4.083990969988955E-5	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999591600903001	WITHOUT_CLASSIFICATION	4.083990969988955E-5	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999591600903001	WITHOUT_CLASSIFICATION	4.083990969988955E-5	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.9999591600903001	WITHOUT_CLASSIFICATION	4.083990969988955E-5	IMPLEMENTATION
/*args*/	WITHOUT_CLASSIFICATION	0.9999591600903001	WITHOUT_CLASSIFICATION	4.083990969988955E-5	IMPLEMENTATION
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9992821371944132	WITHOUT_CLASSIFICATION	7.178628055868988E-4	IMPLEMENTATION
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9992821371944132	WITHOUT_CLASSIFICATION	7.178628055868988E-4	IMPLEMENTATION
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9997283487282779	WITHOUT_CLASSIFICATION	2.716512717220621E-4	IMPLEMENTATION
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9997283487282779	WITHOUT_CLASSIFICATION	2.716512717220621E-4	IMPLEMENTATION
// invoke	WITHOUT_CLASSIFICATION	0.9999760573819558	WITHOUT_CLASSIFICATION	2.3942618044116935E-5	IMPLEMENTATION
// invoke	WITHOUT_CLASSIFICATION	0.9999760573819558	WITHOUT_CLASSIFICATION	2.3942618044116935E-5	IMPLEMENTATION
// check if it's true, ending if so	WITHOUT_CLASSIFICATION	0.9998908896402078	WITHOUT_CLASSIFICATION	1.0911035979221344E-4	IMPLEMENTATION
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9953505180230405	WITHOUT_CLASSIFICATION	0.004649481976959453	IMPLEMENTATION
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9953505180230405	WITHOUT_CLASSIFICATION	0.004649481976959453	IMPLEMENTATION
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9989949055182438	WITHOUT_CLASSIFICATION	0.0010050944817562694	IMPLEMENTATION
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9989949055182438	WITHOUT_CLASSIFICATION	0.0010050944817562694	IMPLEMENTATION
// eval value for assignment	WITHOUT_CLASSIFICATION	0.99983034543184	WITHOUT_CLASSIFICATION	1.6965456816010532E-4	IMPLEMENTATION
// call site	WITHOUT_CLASSIFICATION	0.9981676367770093	WITHOUT_CLASSIFICATION	0.001832363222990718	IMPLEMENTATION
// call site	WITHOUT_CLASSIFICATION	0.9981676367770093	WITHOUT_CLASSIFICATION	0.001832363222990718	IMPLEMENTATION
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9952654077009707	WITHOUT_CLASSIFICATION	0.004734592299029329	IMPLEMENTATION
// check if it's true, ending if not	WITHOUT_CLASSIFICATION	0.995371461329855	WITHOUT_CLASSIFICATION	0.004628538670145058	IMPLEMENTATION
// eval value and save it	WITHOUT_CLASSIFICATION	0.9997231563906752	WITHOUT_CLASSIFICATION	2.7684360932478776E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999591600903001	WITHOUT_CLASSIFICATION	4.083990969988955E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999591600903001	WITHOUT_CLASSIFICATION	4.083990969988955E-5	IMPLEMENTATION
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9952654077009707	WITHOUT_CLASSIFICATION	0.004734592299029329	IMPLEMENTATION
// receiver, args, result, value	WITHOUT_CLASSIFICATION	0.9995138582365126	WITHOUT_CLASSIFICATION	4.8614176348750493E-4	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9986385284494232	WITHOUT_CLASSIFICATION	0.001361471550576766	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9986385284494232	WITHOUT_CLASSIFICATION	0.001361471550576766	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9986385284494232	WITHOUT_CLASSIFICATION	0.001361471550576766	IMPLEMENTATION
// super uses current block if none given	WITHOUT_CLASSIFICATION	0.9986645827861699	WITHOUT_CLASSIFICATION	0.0013354172138300773	IMPLEMENTATION
// args	WITHOUT_CLASSIFICATION	0.9999765785788974	WITHOUT_CLASSIFICATION	2.342142110250432E-5	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.999943466594035	WITHOUT_CLASSIFICATION	5.653340596488557E-5	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.999943466594035	WITHOUT_CLASSIFICATION	5.653340596488557E-5	IMPLEMENTATION
// no args, no block	WITHOUT_CLASSIFICATION	0.9972583954017143	WITHOUT_CLASSIFICATION	0.002741604598285592	IMPLEMENTATION
// no args, with block	WITHOUT_CLASSIFICATION	0.9985614815252181	WITHOUT_CLASSIFICATION	0.0014385184747818965	IMPLEMENTATION
// with args, no block	WITHOUT_CLASSIFICATION	0.9985614815252181	WITHOUT_CLASSIFICATION	0.0014385184747818965	IMPLEMENTATION
// with args, with block	WITHOUT_CLASSIFICATION	0.9983352607366982	WITHOUT_CLASSIFICATION	0.0016647392633017282	IMPLEMENTATION
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9993837240754918	WITHOUT_CLASSIFICATION	6.162759245082557E-4	IMPLEMENTATION
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9998486159554109	WITHOUT_CLASSIFICATION	1.5138404458915015E-4	IMPLEMENTATION
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9998486159554109	WITHOUT_CLASSIFICATION	1.5138404458915015E-4	IMPLEMENTATION
// arg and receiver already present on the stack	WITHOUT_CLASSIFICATION	0.9982251155949564	WITHOUT_CLASSIFICATION	0.0017748844050435662	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9999591600903001	WITHOUT_CLASSIFICATION	4.083990969988955E-5	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9999591600903001	WITHOUT_CLASSIFICATION	4.083990969988955E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999591600903001	WITHOUT_CLASSIFICATION	4.083990969988955E-5	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9986385284494232	WITHOUT_CLASSIFICATION	0.001361471550576766	IMPLEMENTATION
// args	WITHOUT_CLASSIFICATION	0.9999765785788974	WITHOUT_CLASSIFICATION	2.342142110250432E-5	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.999943466594035	WITHOUT_CLASSIFICATION	5.653340596488557E-5	IMPLEMENTATION
// no args, no block	WITHOUT_CLASSIFICATION	0.9972583954017143	WITHOUT_CLASSIFICATION	0.002741604598285592	IMPLEMENTATION
// no args, with block	WITHOUT_CLASSIFICATION	0.9985614815252181	WITHOUT_CLASSIFICATION	0.0014385184747818965	IMPLEMENTATION
// with args, no block	WITHOUT_CLASSIFICATION	0.9985614815252181	WITHOUT_CLASSIFICATION	0.0014385184747818965	IMPLEMENTATION
// with args, with block	WITHOUT_CLASSIFICATION	0.9983352607366982	WITHOUT_CLASSIFICATION	0.0016647392633017282	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9999591600903001	WITHOUT_CLASSIFICATION	4.083990969988955E-5	IMPLEMENTATION
// retrieve scope from scopes array	WITHOUT_CLASSIFICATION	0.9998975450161868	WITHOUT_CLASSIFICATION	1.0245498381317362E-4	IMPLEMENTATION
// use numbered access method	WITHOUT_CLASSIFICATION	0.9882729192871413	WITHOUT_CLASSIFICATION	0.011727080712858651	IMPLEMENTATION
// retrieve call site from sites array	WITHOUT_CLASSIFICATION	0.9998528199760263	WITHOUT_CLASSIFICATION	1.4718002397371557E-4	IMPLEMENTATION
// add name to call site list	WITHOUT_CLASSIFICATION	0.9988706269411981	WITHOUT_CLASSIFICATION	0.0011293730588019504	IMPLEMENTATION
// module is on top of stack	WITHOUT_CLASSIFICATION	0.9991575205959579	WITHOUT_CLASSIFICATION	8.424794040420985E-4	IMPLEMENTATION
// build scope names string	WITHOUT_CLASSIFICATION	0.9999875598338777	WITHOUT_CLASSIFICATION	1.2440166122364895E-5	IMPLEMENTATION
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999757368324431	WITHOUT_CLASSIFICATION	2.4263167556823896E-5	IMPLEMENTATION
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999757368324431	WITHOUT_CLASSIFICATION	2.4263167556823896E-5	IMPLEMENTATION
// generate call sites initialization code	WITHOUT_CLASSIFICATION	0.9991619535052779	WITHOUT_CLASSIFICATION	8.380464947221612E-4	IMPLEMENTATION
// generate symbols initialization code	WITHOUT_CLASSIFICATION	0.9993774790732975	WITHOUT_CLASSIFICATION	6.225209267025208E-4	IMPLEMENTATION
// generate fixnums initialization code	WITHOUT_CLASSIFICATION	0.9993774790732975	WITHOUT_CLASSIFICATION	6.225209267025208E-4	IMPLEMENTATION
// generate constants initialization code	WITHOUT_CLASSIFICATION	0.9996303393421744	WITHOUT_CLASSIFICATION	3.696606578256953E-4	IMPLEMENTATION
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9993774790732975	WITHOUT_CLASSIFICATION	6.225209267025208E-4	IMPLEMENTATION
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9993774790732975	WITHOUT_CLASSIFICATION	6.225209267025208E-4	IMPLEMENTATION
// generate variable readers initialization code	WITHOUT_CLASSIFICATION	0.9989694127560774	WITHOUT_CLASSIFICATION	0.0010305872439225954	IMPLEMENTATION
// generate variable writers initialization code	WITHOUT_CLASSIFICATION	0.9994442545151779	WITHOUT_CLASSIFICATION	5.55745484822052E-4	IMPLEMENTATION
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9985635663962661	WITHOUT_CLASSIFICATION	0.001436433603733854	IMPLEMENTATION
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9985635663962661	WITHOUT_CLASSIFICATION	0.001436433603733854	IMPLEMENTATION
// generate bytelists initialization code	WITHOUT_CLASSIFICATION	0.9993774790732975	WITHOUT_CLASSIFICATION	6.225209267025208E-4	IMPLEMENTATION
// generate method cache initialization code	WITHOUT_CLASSIFICATION	0.9911721019880889	WITHOUT_CLASSIFICATION	0.008827898011911051	IMPLEMENTATION
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9993837240754918	WITHOUT_CLASSIFICATION	6.162759245082557E-4	IMPLEMENTATION
// use IRubyObject[]	WITHOUT_CLASSIFICATION	0.9974272424886795	WITHOUT_CLASSIFICATION	0.002572757511320454	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9996214040604245	WITHOUT_CLASSIFICATION	3.785959395754946E-4	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9998444300862904	WITHOUT_CLASSIFICATION	1.555699137096625E-4	IMPLEMENTATION
// No point in updating number if last number was same value.	WITHOUT_CLASSIFICATION	0.999999120392668	WITHOUT_CLASSIFICATION	8.796073318755685E-7	IMPLEMENTATION
// load Object under value	WITHOUT_CLASSIFICATION	0.9996691909202923	WITHOUT_CLASSIFICATION	3.308090797077082E-4	IMPLEMENTATION
// put under object array already present	WITHOUT_CLASSIFICATION	0.996188147998191	WITHOUT_CLASSIFICATION	0.0038118520018089776	IMPLEMENTATION
// if element count is less than 6, use helper methods	WITHOUT_CLASSIFICATION	0.9999401351772114	WITHOUT_CLASSIFICATION	5.9864822788748146E-5	IMPLEMENTATION
// This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements	WITHOUT_CLASSIFICATION	0.9999995625888174	WITHOUT_CLASSIFICATION	4.3741118259671014E-7	IMPLEMENTATION
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9998281667991109	WITHOUT_CLASSIFICATION	1.7183320088901807E-4	IMPLEMENTATION
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9998281667991109	WITHOUT_CLASSIFICATION	1.7183320088901807E-4	IMPLEMENTATION
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9988146422734469	WITHOUT_CLASSIFICATION	0.0011853577265530664	IMPLEMENTATION
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9988146422734469	WITHOUT_CLASSIFICATION	0.0011853577265530664	IMPLEMENTATION
// use specific-arity for as much as possible	WITHOUT_CLASSIFICATION	0.9995604691316972	WITHOUT_CLASSIFICATION	4.395308683027884E-4	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9992585377157908	WITHOUT_CLASSIFICATION	7.41462284209373E-4	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9992585377157908	WITHOUT_CLASSIFICATION	7.41462284209373E-4	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9992585377157908	WITHOUT_CLASSIFICATION	7.41462284209373E-4	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9998795953014011	WITHOUT_CLASSIFICATION	1.2040469859880327E-4	IMPLEMENTATION
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9986790158611668	WITHOUT_CLASSIFICATION	0.001320984138833221	IMPLEMENTATION
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9986790158611668	WITHOUT_CLASSIFICATION	0.001320984138833221	IMPLEMENTATION
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9989610943699916	WITHOUT_CLASSIFICATION	0.0010389056300083527	IMPLEMENTATION
// check the condition	WITHOUT_CLASSIFICATION	0.9996243633741174	WITHOUT_CLASSIFICATION	3.756366258826553E-4	IMPLEMENTATION
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9998492344414476	WITHOUT_CLASSIFICATION	1.5076555855244407E-4	IMPLEMENTATION
// skip catch block	WITHOUT_CLASSIFICATION	0.9915979611964119	WITHOUT_CLASSIFICATION	0.008402038803588155	IMPLEMENTATION
// catch logic for flow-control: next, break	WITHOUT_CLASSIFICATION	0.9996685643368928	WITHOUT_CLASSIFICATION	3.3143566310725854E-4	IMPLEMENTATION
// next jump	WITHOUT_CLASSIFICATION	0.9964361216435833	WITHOUT_CLASSIFICATION	0.003563878356416789	IMPLEMENTATION
// exceptionNext target is for a next that doesn't push a new value, like this one	WITHOUT_CLASSIFICATION	0.9962671064431194	WITHOUT_CLASSIFICATION	0.00373289355688051	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.999687168587596	WITHOUT_CLASSIFICATION	3.1283141240402734E-4	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.999687168587596	WITHOUT_CLASSIFICATION	3.1283141240402734E-4	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9998795953014011	WITHOUT_CLASSIFICATION	1.2040469859880327E-4	IMPLEMENTATION
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9989610943699916	WITHOUT_CLASSIFICATION	0.0010389056300083527	IMPLEMENTATION
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9997883105884108	WITHOUT_CLASSIFICATION	2.1168941158920696E-4	IMPLEMENTATION
// check the condition	WITHOUT_CLASSIFICATION	0.9996243633741174	WITHOUT_CLASSIFICATION	3.756366258826553E-4	IMPLEMENTATION
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9998492344414476	WITHOUT_CLASSIFICATION	1.5076555855244407E-4	IMPLEMENTATION
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9992831603046914	WITHOUT_CLASSIFICATION	7.168396953085413E-4	IMPLEMENTATION
// break jump	WITHOUT_CLASSIFICATION	0.9986836785744122	WITHOUT_CLASSIFICATION	0.0013163214255878495	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9988310268428674	WITHOUT_CLASSIFICATION	0.0011689731571326914	IMPLEMENTATION
//[reg]	WITHOUT_CLASSIFICATION	0.9999591600903001	WITHOUT_CLASSIFICATION	4.083990969988955E-5	IMPLEMENTATION
// for regular expressions with the /o flag	WITHOUT_CLASSIFICATION	0.9981865093638911	WITHOUT_CLASSIFICATION	0.0018134906361089004	IMPLEMENTATION
// inside a loop, jump to body	WITHOUT_CLASSIFICATION	0.999570174226256	WITHOUT_CLASSIFICATION	4.298257737439812E-4	IMPLEMENTATION
// inside a loop, jump to conditional	WITHOUT_CLASSIFICATION	0.9992461201403354	WITHOUT_CLASSIFICATION	7.538798596645964E-4	IMPLEMENTATION
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9992831603046914	WITHOUT_CLASSIFICATION	7.168396953085413E-4	IMPLEMENTATION
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999435776483294	WITHOUT_CLASSIFICATION	5.64223516705587E-5	IMPLEMENTATION
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999435776483294	WITHOUT_CLASSIFICATION	5.64223516705587E-5	IMPLEMENTATION
// if more than 4 vars, get values array too	WITHOUT_CLASSIFICATION	0.9999908938189992	WITHOUT_CLASSIFICATION	9.10618100087856E-6	IMPLEMENTATION
// retry handling in the rescue block	WITHOUT_CLASSIFICATION	0.999532184994204	WITHOUT_CLASSIFICATION	4.678150057960618E-4	IMPLEMENTATION
// any exceptions raised must continue to be raised, skipping $! restoration	WITHOUT_CLASSIFICATION	0.9987935518111993	WITHOUT_CLASSIFICATION	0.001206448188800634	IMPLEMENTATION
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9978305256131808	WITHOUT_CLASSIFICATION	0.002169474386819363	IMPLEMENTATION
// restore the original exception	WITHOUT_CLASSIFICATION	0.9981501074437875	WITHOUT_CLASSIFICATION	0.0018498925562125082	IMPLEMENTATION
// Handle Flow exceptions, just propagating them	WITHOUT_CLASSIFICATION	0.9999426355380091	WITHOUT_CLASSIFICATION	5.736446199078123E-5	IMPLEMENTATION
// rethrow to outer flow catcher	WITHOUT_CLASSIFICATION	0.9992057174359318	WITHOUT_CLASSIFICATION	7.942825640681086E-4	IMPLEMENTATION
// Handle Ruby exceptions (RaiseException)	WITHOUT_CLASSIFICATION	0.9994585177193582	WITHOUT_CLASSIFICATION	5.414822806417545E-4	IMPLEMENTATION
// inside a loop, break out of it // go to end of loop, leaving break value on stack	WITHOUT_CLASSIFICATION	0.9996761850932346	WITHOUT_CLASSIFICATION	3.238149067653746E-4	IMPLEMENTATION
// false // zero	WITHOUT_CLASSIFICATION	0.9992715627247973	WITHOUT_CLASSIFICATION	7.28437275202695E-4	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9987714936871174	WITHOUT_CLASSIFICATION	0.0012285063128826942	IMPLEMENTATION
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9978305256131808	WITHOUT_CLASSIFICATION	0.002169474386819363	IMPLEMENTATION
// restore the original exception	WITHOUT_CLASSIFICATION	0.9981501074437875	WITHOUT_CLASSIFICATION	0.0018498925562125082	IMPLEMENTATION
// retry handling in the rescue blocks	WITHOUT_CLASSIFICATION	0.9997995231420047	WITHOUT_CLASSIFICATION	2.0047685799533718E-4	IMPLEMENTATION
// push false	WITHOUT_CLASSIFICATION	0.9992473341697976	WITHOUT_CLASSIFICATION	7.526658302023102E-4	IMPLEMENTATION
//method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));	WITHOUT_CLASSIFICATION	0.9989612992561224	WITHOUT_CLASSIFICATION	0.0010387007438775661	IMPLEMENTATION
//method.ifnonnull(trueLabel);	WITHOUT_CLASSIFICATION	0.999365695968854	WITHOUT_CLASSIFICATION	6.343040311459975E-4	IMPLEMENTATION
// EQ == 0 (i.e. false)   //[C]	WITHOUT_CLASSIFICATION	0.9998630174388703	WITHOUT_CLASSIFICATION	1.369825611298124E-4	IMPLEMENTATION
//[C, C] //[C, C, String] //[C, null|C]	WITHOUT_CLASSIFICATION	0.9989612992561224	WITHOUT_CLASSIFICATION	0.0010387007438775661	IMPLEMENTATION
//[C]	WITHOUT_CLASSIFICATION	0.9999591600903001	WITHOUT_CLASSIFICATION	4.083990969988955E-5	IMPLEMENTATION
// push true	WITHOUT_CLASSIFICATION	0.9987546299322224	WITHOUT_CLASSIFICATION	0.0012453700677776062	IMPLEMENTATION
// EQ != 0 (i.e. true)	WITHOUT_CLASSIFICATION	0.9998873313457777	WITHOUT_CLASSIFICATION	1.1266865422230869E-4	IMPLEMENTATION
//[?, ?] //[?, boolean]	WITHOUT_CLASSIFICATION	0.999365695968854	WITHOUT_CLASSIFICATION	6.343040311459975E-4	IMPLEMENTATION
//[RubyModule] //[RubyModule, String]	WITHOUT_CLASSIFICATION	0.9989612992561224	WITHOUT_CLASSIFICATION	0.0010387007438775661	IMPLEMENTATION
//[boolean]	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
// no receiver for singleton class	WITHOUT_CLASSIFICATION	0.9998411270247684	WITHOUT_CLASSIFICATION	1.5887297523172576E-4	IMPLEMENTATION
// but there's a superclass passed in, use it	WITHOUT_CLASSIFICATION	0.9983714292594991	WITHOUT_CLASSIFICATION	0.0016285707405009277	IMPLEMENTATION
// we re-set self to the class, but store the old self in a temporary local variable // this is to prevent it GCing in case the singleton is short-lived	WITHOUT_CLASSIFICATION	0.9999711356096254	WITHOUT_CLASSIFICATION	2.8864390374670632E-5	IMPLEMENTATION
// set self to the class	WITHOUT_CLASSIFICATION	0.9997194175088249	WITHOUT_CLASSIFICATION	2.8058249117513987E-4	IMPLEMENTATION
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9986385284494232	WITHOUT_CLASSIFICATION	0.001361471550576766	IMPLEMENTATION
// static scope	WITHOUT_CLASSIFICATION	0.9983123890801097	WITHOUT_CLASSIFICATION	0.0016876109198903676	IMPLEMENTATION
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999432104231136	WITHOUT_CLASSIFICATION	5.678957688623886E-5	IMPLEMENTATION
// new instance to invoke run against	WITHOUT_CLASSIFICATION	0.9995581627110751	WITHOUT_CLASSIFICATION	4.4183728892490667E-4	IMPLEMENTATION
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9986385284494232	WITHOUT_CLASSIFICATION	0.001361471550576766	IMPLEMENTATION
// static scope	WITHOUT_CLASSIFICATION	0.9983123890801097	WITHOUT_CLASSIFICATION	0.0016876109198903676	IMPLEMENTATION
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999432104231136	WITHOUT_CLASSIFICATION	5.678957688623886E-5	IMPLEMENTATION
// finally with exception	WITHOUT_CLASSIFICATION	0.9985697218492547	WITHOUT_CLASSIFICATION	0.0014302781507452625	IMPLEMENTATION
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9913505343990276	WITHOUT_CLASSIFICATION	0.008649465600972373	IMPLEMENTATION
// otherwise, there's a receiver, so we pass that in directly for the sclass logic	WITHOUT_CLASSIFICATION	0.9998559580726075	WITHOUT_CLASSIFICATION	1.4404192739256343E-4	IMPLEMENTATION
// original exception is on stack	WITHOUT_CLASSIFICATION	0.9971490977398207	WITHOUT_CLASSIFICATION	0.0028509022601792954	IMPLEMENTATION
// RaiseException is on stack, get RubyException out	WITHOUT_CLASSIFICATION	0.9997867615817759	WITHOUT_CLASSIFICATION	2.1323841822395463E-4	IMPLEMENTATION
// updating position for same line; skip	WITHOUT_CLASSIFICATION	0.9987111353496698	WITHOUT_CLASSIFICATION	0.0012888646503301626	IMPLEMENTATION
// callbacks to fill in method body	WITHOUT_CLASSIFICATION	0.9990569007483172	WITHOUT_CLASSIFICATION	9.430992516826643E-4	IMPLEMENTATION
// prepare to call "def" utility method to handle def logic	WITHOUT_CLASSIFICATION	0.9466690363946826	WITHOUT_CLASSIFICATION	0.05333096360531734	IMPLEMENTATION
// script object	WITHOUT_CLASSIFICATION	0.9979195302242875	WITHOUT_CLASSIFICATION	0.00208046977571243	IMPLEMENTATION
// arities	WITHOUT_CLASSIFICATION	0.999975778940229	WITHOUT_CLASSIFICATION	2.422105977089807E-5	IMPLEMENTATION
// TODO assuming case is a fixnum	WITHOUT_CLASSIFICATION	0.6404180941566812	IMPLEMENTATION	0.35958190584331895	WITHOUT_CLASSIFICATION
// we have an input case, prepare branching logic	WITHOUT_CLASSIFICATION	0.9997707525156163	WITHOUT_CLASSIFICATION	2.2924748438366574E-4	IMPLEMENTATION
// we have optimized switch cases, build a lookupswitch	WITHOUT_CLASSIFICATION	0.999171734391357	WITHOUT_CLASSIFICATION	8.282656086430175E-4	IMPLEMENTATION
// checkcast the value; if match, fast path; otherwise proceed to slow logic	WITHOUT_CLASSIFICATION	0.9969995712703523	WITHOUT_CLASSIFICATION	0.0030004287296477973	IMPLEMENTATION
// expression-based tests + bodies	WITHOUT_CLASSIFICATION	0.9996422124343564	WITHOUT_CLASSIFICATION	3.577875656436423E-4	IMPLEMENTATION
// normal case, create a new label	WITHOUT_CLASSIFICATION	0.9999054775570195	WITHOUT_CLASSIFICATION	9.452244298037748E-5	IMPLEMENTATION
// last conditional case, use defaultCase	WITHOUT_CLASSIFICATION	0.9995088425658738	WITHOUT_CLASSIFICATION	4.911574341261388E-4	IMPLEMENTATION
// do nothing; arity check is done before call	WITHOUT_CLASSIFICATION	0.9996429352319496	WITHOUT_CLASSIFICATION	3.570647680504535E-4	IMPLEMENTATION
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9998723989297235	WITHOUT_CLASSIFICATION	1.2760107027656435E-4	IMPLEMENTATION
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.999846413216246	WITHOUT_CLASSIFICATION	1.5358678375397049E-4	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.9999121822885966	WITHOUT_CLASSIFICATION	8.781771140348453E-5	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.9998496979917575	WITHOUT_CLASSIFICATION	1.5030200824254293E-4	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.9998496979917575	WITHOUT_CLASSIFICATION	1.5030200824254293E-4	IMPLEMENTATION
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9996493869139975	WITHOUT_CLASSIFICATION	3.506130860025388E-4	IMPLEMENTATION
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9996493869139975	WITHOUT_CLASSIFICATION	3.506130860025388E-4	IMPLEMENTATION
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.99879607847644	WITHOUT_CLASSIFICATION	0.0012039215235598814	IMPLEMENTATION
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.99879607847644	WITHOUT_CLASSIFICATION	0.0012039215235598814	IMPLEMENTATION
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9998857633110195	WITHOUT_CLASSIFICATION	1.1423668898044695E-4	IMPLEMENTATION
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9965418050919602	WITHOUT_CLASSIFICATION	0.0034581949080397805	IMPLEMENTATION
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999813695937583	WITHOUT_CLASSIFICATION	1.8630406241792318E-5	IMPLEMENTATION
// if there's args left and we want them, assign to rest arg	WITHOUT_CLASSIFICATION	0.9986939918080877	WITHOUT_CLASSIFICATION	0.001306008191912235	IMPLEMENTATION
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999863031976551	WITHOUT_CLASSIFICATION	1.3696802344934074E-5	IMPLEMENTATION
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.999780978914663	WITHOUT_CLASSIFICATION	2.190210853370421E-4	IMPLEMENTATION
// first, iterate over all pre args	WITHOUT_CLASSIFICATION	0.999493024580544	WITHOUT_CLASSIFICATION	5.069754194560567E-4	IMPLEMENTATION
// then optional args	WITHOUT_CLASSIFICATION	0.9998071123442631	WITHOUT_CLASSIFICATION	1.9288765573699594E-4	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.999687168587596	WITHOUT_CLASSIFICATION	3.1283141240402734E-4	IMPLEMENTATION
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9998857633110195	WITHOUT_CLASSIFICATION	1.1423668898044695E-4	IMPLEMENTATION
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9965418050919602	WITHOUT_CLASSIFICATION	0.0034581949080397805	IMPLEMENTATION
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999813695937583	WITHOUT_CLASSIFICATION	1.8630406241792318E-5	IMPLEMENTATION
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999863031976551	WITHOUT_CLASSIFICATION	1.3696802344934074E-5	IMPLEMENTATION
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.999780978914663	WITHOUT_CLASSIFICATION	2.190210853370421E-4	IMPLEMENTATION
// if rest args, excluding post args	WITHOUT_CLASSIFICATION	0.9998235952029266	WITHOUT_CLASSIFICATION	1.7640479707337902E-4	IMPLEMENTATION
// finally, post args	WITHOUT_CLASSIFICATION	0.9996688359613043	WITHOUT_CLASSIFICATION	3.3116403869561047E-4	IMPLEMENTATION
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9969193552870993	WITHOUT_CLASSIFICATION	0.0030806447129006556	IMPLEMENTATION
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9969193552870993	WITHOUT_CLASSIFICATION	0.0030806447129006556	IMPLEMENTATION
// unwrap scopes to appropriate depth	WITHOUT_CLASSIFICATION	0.9986366922437703	WITHOUT_CLASSIFICATION	0.0013633077562297256	IMPLEMENTATION
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999854397783389	WITHOUT_CLASSIFICATION	1.4560221661041016E-5	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.975436817693408	WITHOUT_CLASSIFICATION	0.02456318230659197	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.999573549606847	WITHOUT_CLASSIFICATION	4.2645039315306787E-4	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.999573549606847	WITHOUT_CLASSIFICATION	4.2645039315306787E-4	IMPLEMENTATION
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9998176344415798	WITHOUT_CLASSIFICATION	1.8236555842035052E-4	IMPLEMENTATION
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9989383944813236	WITHOUT_CLASSIFICATION	0.001061605518676354	IMPLEMENTATION
// store the local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999654994195379	WITHOUT_CLASSIFICATION	3.4500580462032923E-5	IMPLEMENTATION
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9993039581846255	WITHOUT_CLASSIFICATION	6.960418153744938E-4	IMPLEMENTATION
// return in a class body raises error	WITHOUT_CLASSIFICATION	0.9999374762364103	WITHOUT_CLASSIFICATION	6.252376358968841E-5	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9991328006756938	WITHOUT_CLASSIFICATION	8.671993243063015E-4	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999500329409369	WITHOUT_CLASSIFICATION	4.996705906305214E-5	IMPLEMENTATION
// end of variable scope	WITHOUT_CLASSIFICATION	0.9996598486260153	WITHOUT_CLASSIFICATION	3.401513739846004E-4	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9945568129949665	WITHOUT_CLASSIFICATION	0.00544318700503354	IMPLEMENTATION
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9966032011526542	WITHOUT_CLASSIFICATION	0.0033967988473457378	IMPLEMENTATION
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9967042889352978	WITHOUT_CLASSIFICATION	0.003295711064702078	IMPLEMENTATION
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9998176344415798	WITHOUT_CLASSIFICATION	1.8236555842035052E-4	IMPLEMENTATION
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9989383944813236	WITHOUT_CLASSIFICATION	0.001061605518676354	IMPLEMENTATION
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9993039581846255	WITHOUT_CLASSIFICATION	6.960418153744938E-4	IMPLEMENTATION
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9772130789391271	WITHOUT_CLASSIFICATION	0.022786921060872812	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.975436817693408	WITHOUT_CLASSIFICATION	0.02456318230659197	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.975436817693408	WITHOUT_CLASSIFICATION	0.02456318230659197	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9987714936871174	WITHOUT_CLASSIFICATION	0.0012285063128826942	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9987714936871174	WITHOUT_CLASSIFICATION	0.0012285063128826942	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.8055495041466496	WITHOUT_CLASSIFICATION	0.19445049585335047	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.8055495041466496	WITHOUT_CLASSIFICATION	0.19445049585335047	IMPLEMENTATION
// store the local vars in a local variable if there are any	WITHOUT_CLASSIFICATION	0.999998770933604	WITHOUT_CLASSIFICATION	1.2290663960608687E-6	IMPLEMENTATION
// if more than 4 locals, get and populate the locals array too	WITHOUT_CLASSIFICATION	0.9998791358268717	WITHOUT_CLASSIFICATION	1.2086417312827027E-4	IMPLEMENTATION
// fill local vars with nil, to avoid checking every access.	WITHOUT_CLASSIFICATION	0.9852394935071825	WITHOUT_CLASSIFICATION	0.014760506492817457	IMPLEMENTATION
// default for starting tempVariableIndex is ok	WITHOUT_CLASSIFICATION	0.9999092904456668	WITHOUT_CLASSIFICATION	9.070955433323456E-5	IMPLEMENTATION
// store the local vars in a local variable for preparing the class (using previous scope)	WITHOUT_CLASSIFICATION	0.9999912394077956	WITHOUT_CLASSIFICATION	8.760592204437767E-6	IMPLEMENTATION
// store the new local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999743052666136	WITHOUT_CLASSIFICATION	2.5694733386471467E-5	IMPLEMENTATION
// in 1.8 mode, this will be a RubyArray containing the arguments // in 1.9 mode, this will be an IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999882149655419	WITHOUT_CLASSIFICATION	1.1785034458144752E-5	IMPLEMENTATION
// no variable initialization, because we're reusing parent's scope (flat)	WITHOUT_CLASSIFICATION	0.9998936381933519	WITHOUT_CLASSIFICATION	1.0636180664807885E-4	IMPLEMENTATION
// for specific-index cases, clean up non-expression values	WITHOUT_CLASSIFICATION	0.9999652370079639	WITHOUT_CLASSIFICATION	3.476299203596412E-5	IMPLEMENTATION
// set up a local Ruby variable	WITHOUT_CLASSIFICATION	0.9997437442767397	WITHOUT_CLASSIFICATION	2.5625572326022384E-4	IMPLEMENTATION
// if that succeeds, the others should as well	WITHOUT_CLASSIFICATION	0.9999362234758007	WITHOUT_CLASSIFICATION	6.377652419932885E-5	IMPLEMENTATION
// verify the class	WITHOUT_CLASSIFICATION	0.9995484445646503	WITHOUT_CLASSIFICATION	4.5155543534970986E-4	IMPLEMENTATION
// create dir if necessary	WITHOUT_CLASSIFICATION	0.9999520858185906	WITHOUT_CLASSIFICATION	4.791418140944465E-5	IMPLEMENTATION
// Create the class with the appropriate class name and source file	WITHOUT_CLASSIFICATION	0.9997473477278677	WITHOUT_CLASSIFICATION	2.526522721324028E-4	IMPLEMENTATION
// add setPosition impl, which stores filename as constant to speed updates	WITHOUT_CLASSIFICATION	0.9998029341694427	WITHOUT_CLASSIFICATION	1.9706583055734413E-4	IMPLEMENTATION
// thread context	WITHOUT_CLASSIFICATION	0.9964520710863692	WITHOUT_CLASSIFICATION	0.003547928913630772	IMPLEMENTATION
// line number	WITHOUT_CLASSIFICATION	0.9990566403621007	WITHOUT_CLASSIFICATION	9.433596378992559E-4	IMPLEMENTATION
// invoke __file__ with threadcontext, self, args (null), and block (null)	WITHOUT_CLASSIFICATION	0.997975520074972	WITHOUT_CLASSIFICATION	0.0020244799250278838	IMPLEMENTATION
// load always uses IRubyObject[], so simple closure offset calculation here	WITHOUT_CLASSIFICATION	0.9992596489273264	WITHOUT_CLASSIFICATION	7.403510726735418E-4	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999500329409369	WITHOUT_CLASSIFICATION	4.996705906305214E-5	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9945568129949665	WITHOUT_CLASSIFICATION	0.00544318700503354	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9943916300527457	WITHOUT_CLASSIFICATION	0.005608369947254283	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.999943466594035	WITHOUT_CLASSIFICATION	5.653340596488557E-5	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.999943466594035	WITHOUT_CLASSIFICATION	5.653340596488557E-5	IMPLEMENTATION
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9772130789391271	WITHOUT_CLASSIFICATION	0.022786921060872812	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.975436817693408	WITHOUT_CLASSIFICATION	0.02456318230659197	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9987714936871174	WITHOUT_CLASSIFICATION	0.0012285063128826942	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.8055495041466496	WITHOUT_CLASSIFICATION	0.19445049585335047	IMPLEMENTATION
// add Script#run impl, used for running this script with a specified threadcontext and self // root method of a script is always in __file__ method	WITHOUT_CLASSIFICATION	0.9995429771305636	WITHOUT_CLASSIFICATION	4.5702286943632205E-4	IMPLEMENTATION
// add main impl, used for detached or command-line execution of this script with a new runtime // root method of a script is always in stub0, method0	WITHOUT_CLASSIFICATION	0.9992962096542426	WITHOUT_CLASSIFICATION	7.037903457574421E-4	IMPLEMENTATION
// construct static scope list of names	WITHOUT_CLASSIFICATION	0.9998201031110183	WITHOUT_CLASSIFICATION	1.7989688898171935E-4	IMPLEMENTATION
// JRUBY-3014: make __FILE__ dynamically determined at load time, but // we provide a reasonable default here	WITHOUT_CLASSIFICATION	0.9999118535242565	WITHOUT_CLASSIFICATION	8.814647574353154E-5	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9997916381084292	WITHOUT_CLASSIFICATION	2.0836189157069212E-4	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9997916381084292	WITHOUT_CLASSIFICATION	2.0836189157069212E-4	IMPLEMENTATION
// lazily create class init only if necessary	WITHOUT_CLASSIFICATION	0.9999495304911782	WITHOUT_CLASSIFICATION	5.0469508821873755E-5	IMPLEMENTATION
// boxed arg list __file__	WITHOUT_CLASSIFICATION	0.9997065875453708	WITHOUT_CLASSIFICATION	2.934124546292E-4	IMPLEMENTATION
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9995079923887843	WITHOUT_CLASSIFICATION	4.920076112157502E-4	IMPLEMENTATION
// exact arg list __file__	WITHOUT_CLASSIFICATION	0.9997065875453708	WITHOUT_CLASSIFICATION	2.934124546292E-4	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.9988638231415384	WITHOUT_CLASSIFICATION	0.0011361768584615926	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.9988638231415384	WITHOUT_CLASSIFICATION	0.0011361768584615926	IMPLEMENTATION
// not using a new scope, use saved one for a flat closure	WITHOUT_CLASSIFICATION	0.9988491732826196	WITHOUT_CLASSIFICATION	0.00115082671738049	IMPLEMENTATION
// normal closure	WITHOUT_CLASSIFICATION	0.9986859412642939	WITHOUT_CLASSIFICATION	0.0013140587357061849	IMPLEMENTATION
// end of scoping for closure's vars	WITHOUT_CLASSIFICATION	0.9996193799352895	WITHOUT_CLASSIFICATION	3.806200647105764E-4	IMPLEMENTATION
// we only need full-on redo exception handling if there's logic that might produce it	WITHOUT_CLASSIFICATION	0.9637170375862449	WITHOUT_CLASSIFICATION	0.03628296241375519	IMPLEMENTATION
// handle redos by restarting the block	WITHOUT_CLASSIFICATION	0.989099379055089	WITHOUT_CLASSIFICATION	0.010900620944911002	IMPLEMENTATION
// jump back to the top of the main body of this closure	WITHOUT_CLASSIFICATION	0.9976747366781766	WITHOUT_CLASSIFICATION	0.0023252633218233845	IMPLEMENTATION
// Ruby name 	WITHOUT_CLASSIFICATION	0.9977687409809541	WITHOUT_CLASSIFICATION	0.0022312590190459243	IMPLEMENTATION
// Accumulate call arguments	WITHOUT_CLASSIFICATION	0.9995406562494308	WITHOUT_CLASSIFICATION	4.593437505692281E-4	IMPLEMENTATION
// Fix FileNameCompletor to work mid-line	WITHOUT_CLASSIFICATION	0.998637925420792	WITHOUT_CLASSIFICATION	0.0013620745792079542	IMPLEMENTATION
// We need to ensure that the variable names generated here cannot conflict with ruby variable names! // Hence the "%" tthat is appended to the beginning!	WITHOUT_CLASSIFICATION	0.9807693711770833	WITHOUT_CLASSIFICATION	0.01923062882291677	IMPLEMENTATION
// Does this method define code?  // Default is yes -- which basically leads to pessimistic but safe optimizations // But, for library and internal methods, this might be false.	WITHOUT_CLASSIFICATION	0.9998508937573642	WITHOUT_CLASSIFICATION	1.491062426357198E-4	IMPLEMENTATION
// Map of constants defined in this scope (not valid for methods!)	WITHOUT_CLASSIFICATION	0.9999960686299942	WITHOUT_CLASSIFICATION	3.931370005791442E-6	IMPLEMENTATION
// NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner // with outer loops encountered before inner loops, and inner loops finished before outer ones. // // So, we can keep track of loops in a loop stack which  keeps track of loops as they are encountered. // This lets us implement next/redo/break/retry easily for the non-closure cases	WITHOUT_CLASSIFICATION	0.9999849919808426	WITHOUT_CLASSIFICATION	1.5008019157536747E-5	IMPLEMENTATION
// Map keep track of the next available variable index for a particular prefix	WITHOUT_CLASSIFICATION	0.9997562725489338	WITHOUT_CLASSIFICATION	2.4372745106617267E-4	IMPLEMENTATION
// Control flow graph for this scope	WITHOUT_CLASSIFICATION	0.999614852868881	WITHOUT_CLASSIFICATION	3.851471311190428E-4	IMPLEMENTATION
//        _lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;	WITHOUT_CLASSIFICATION	0.999334486452693	WITHOUT_CLASSIFICATION	6.655135473070752E-4	IMPLEMENTATION
// List of modules, classes, and methods defined in this scope!	WITHOUT_CLASSIFICATION	0.999961592257059	WITHOUT_CLASSIFICATION	3.840774294092426E-5	IMPLEMENTATION
// Returns the containing parent scope!	WITHOUT_CLASSIFICATION	0.9992885146319281	WITHOUT_CLASSIFICATION	7.114853680717255E-4	IMPLEMENTATION
// Insert nesting level to ensure variable names don't conflict across nested scopes! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //        return new Variable(prefix + _lexicalNestingLevel + "_" + idx);	WITHOUT_CLASSIFICATION	0.9999537545538056	WITHOUT_CLASSIFICATION	4.624544619441375E-5	IMPLEMENTATION
// get "self"	WITHOUT_CLASSIFICATION	0.9994190011368735	WITHOUT_CLASSIFICATION	5.809988631264141E-4	IMPLEMENTATION
// variable is never read, variable is never live	WITHOUT_CLASSIFICATION	0.9960430195618775	WITHOUT_CLASSIFICATION	0.003956980438122447	IMPLEMENTATION
// inline script	WITHOUT_CLASSIFICATION	0.9983877840432644	WITHOUT_CLASSIFICATION	0.0016122159567354682	IMPLEMENTATION
// inline script	WITHOUT_CLASSIFICATION	0.9983877840432644	WITHOUT_CLASSIFICATION	0.0016122159567354682	IMPLEMENTATION
// This method is called to build assignments for a multiple-assignment instruction	WITHOUT_CLASSIFICATION	0.9989925714824629	WITHOUT_CLASSIFICATION	0.0010074285175370493	IMPLEMENTATION
// Build the class body!	WITHOUT_CLASSIFICATION	0.9998439456742356	WITHOUT_CLASSIFICATION	1.5605432576434612E-4	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9998361998642621	WITHOUT_CLASSIFICATION	1.6380013573801252E-4	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9998361998642621	WITHOUT_CLASSIFICATION	1.6380013573801252E-4	IMPLEMENTATION
// SSS FIXME: Can this ever be null?	WITHOUT_CLASSIFICATION	0.9990477713238988	WITHOUT_CLASSIFICATION	9.522286761011745E-4	IMPLEMENTATION
// Run the pass on the passed in scope!	WITHOUT_CLASSIFICATION	0.9997813139342476	WITHOUT_CLASSIFICATION	2.1868606575227637E-4	IMPLEMENTATION
// done // done // done // done	WITHOUT_CLASSIFICATION	0.9995590700062772	WITHOUT_CLASSIFICATION	4.4092999372277877E-4	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999934298377849	WITHOUT_CLASSIFICATION	6.5701622150749896E-6	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999934298377849	WITHOUT_CLASSIFICATION	6.5701622150749896E-6	IMPLEMENTATION
// This method is called to build arguments for a block!	WITHOUT_CLASSIFICATION	0.9990855244602964	WITHOUT_CLASSIFICATION	9.144755397035651E-4	IMPLEMENTATION
// build first node (and ignore its result) and then second node	WITHOUT_CLASSIFICATION	0.999776552171817	WITHOUT_CLASSIFICATION	2.2344782818300128E-4	IMPLEMENTATION
// build first node only and return false	WITHOUT_CLASSIFICATION	0.9997089235635653	WITHOUT_CLASSIFICATION	2.9107643643465586E-4	IMPLEMENTATION
// Value of the last expression in the block 	WITHOUT_CLASSIFICATION	0.999934534186276	WITHOUT_CLASSIFICATION	6.546581372396352E-5	IMPLEMENTATION
// If this is not a closure, the break is equivalent to jumping to the loop end label	WITHOUT_CLASSIFICATION	0.9508359355286887	WITHOUT_CLASSIFICATION	0.049164064471311185	IMPLEMENTATION
// get the incoming case value	WITHOUT_CLASSIFICATION	0.9998959795758965	WITHOUT_CLASSIFICATION	1.0402042410351236E-4	IMPLEMENTATION
// the CASE instruction	WITHOUT_CLASSIFICATION	0.9996911722425729	WITHOUT_CLASSIFICATION	3.0882775742706764E-4	IMPLEMENTATION
// lists to aggregate variables and bodies for whens	WITHOUT_CLASSIFICATION	0.9996698517090263	WITHOUT_CLASSIFICATION	3.301482909736509E-4	IMPLEMENTATION
// build each "when"	WITHOUT_CLASSIFICATION	0.9993436655159726	WITHOUT_CLASSIFICATION	6.563344840272525E-4	IMPLEMENTATION
// multiple conditions for when	WITHOUT_CLASSIFICATION	0.9997358739181911	WITHOUT_CLASSIFICATION	2.6412608180885895E-4	IMPLEMENTATION
// build "else" if it exists	WITHOUT_CLASSIFICATION	0.9999127616783821	WITHOUT_CLASSIFICATION	8.723832161797377E-5	IMPLEMENTATION
// now emit bodies	WITHOUT_CLASSIFICATION	0.9991599156430283	WITHOUT_CLASSIFICATION	8.400843569716055E-4	IMPLEMENTATION
// close it out	WITHOUT_CLASSIFICATION	0.9993528369631258	WITHOUT_CLASSIFICATION	6.471630368741842E-4	IMPLEMENTATION
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9998886283855329	WITHOUT_CLASSIFICATION	1.1137161446713904E-4	IMPLEMENTATION
// Do we have a dynamic container?	WITHOUT_CLASSIFICATION	0.9971485082753361	WITHOUT_CLASSIFICATION	0.0028514917246639307	IMPLEMENTATION
// Return a meta object corresponding to the class	WITHOUT_CLASSIFICATION	0.9995499414392977	WITHOUT_CLASSIFICATION	4.500585607023611E-4	IMPLEMENTATION
// 1. Load the module first (lhs of node) // 2. Then load the constant from the module	WITHOUT_CLASSIFICATION	0.9999087713887208	WITHOUT_CLASSIFICATION	9.122861127920472E-5	IMPLEMENTATION
// Build IR for args	WITHOUT_CLASSIFICATION	0.9993414384968076	WITHOUT_CLASSIFICATION	6.585615031923629E-4	IMPLEMENTATION
// Build IR for body	WITHOUT_CLASSIFICATION	0.9993640768076735	WITHOUT_CLASSIFICATION	6.359231923266147E-4	IMPLEMENTATION
// if root of method is rescue, build as a light rescue	WITHOUT_CLASSIFICATION	0.999796655818917	WITHOUT_CLASSIFICATION	2.033441810831067E-4	IMPLEMENTATION
// Instance method	WITHOUT_CLASSIFICATION	0.9865715579082387	WITHOUT_CLASSIFICATION	0.01342844209176126	IMPLEMENTATION
// Class method	WITHOUT_CLASSIFICATION	0.9907842043689076	WITHOUT_CLASSIFICATION	0.009215795631092465	IMPLEMENTATION
// Other args begin at index 1	WITHOUT_CLASSIFICATION	0.9998577819459294	WITHOUT_CLASSIFICATION	1.4221805407061474E-4	IMPLEMENTATION
// Both for fixed arity and variable arity methods	WITHOUT_CLASSIFICATION	0.9997801402446632	WITHOUT_CLASSIFICATION	2.1985975533690946E-4	IMPLEMENTATION
// Now for the rest	WITHOUT_CLASSIFICATION	0.9987107751773178	WITHOUT_CLASSIFICATION	0.001289224822682173	IMPLEMENTATION
// Jump to 'l' if this arg is not null.  If null, fall through and build the default value!	WITHOUT_CLASSIFICATION	0.9999403910326744	WITHOUT_CLASSIFICATION	5.96089673255143E-5	IMPLEMENTATION
// This is not an expression that computes anything	WITHOUT_CLASSIFICATION	0.982418704175368	WITHOUT_CLASSIFICATION	0.01758129582463193	IMPLEMENTATION
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9997379649687034	WITHOUT_CLASSIFICATION	2.620350312965709E-4	IMPLEMENTATION
// Build args	WITHOUT_CLASSIFICATION	0.9988482768646345	WITHOUT_CLASSIFICATION	0.0011517231353654694	IMPLEMENTATION
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9998548059735789	WITHOUT_CLASSIFICATION	1.451940264210775E-4	IMPLEMENTATION
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9996951794604858	WITHOUT_CLASSIFICATION	3.0482053951411435E-4	IMPLEMENTATION
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9998886283855329	WITHOUT_CLASSIFICATION	1.1137161446713904E-4	IMPLEMENTATION
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9997379649687034	WITHOUT_CLASSIFICATION	2.620350312965709E-4	IMPLEMENTATION
// Build args	WITHOUT_CLASSIFICATION	0.9988482768646345	WITHOUT_CLASSIFICATION	0.0011517231353654694	IMPLEMENTATION
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9996951794604858	WITHOUT_CLASSIFICATION	3.0482053951411435E-4	IMPLEMENTATION
// Get the container for this new module	WITHOUT_CLASSIFICATION	0.9998530574450187	WITHOUT_CLASSIFICATION	1.469425549812453E-4	IMPLEMENTATION
// Build the new module	WITHOUT_CLASSIFICATION	0.9997951817815625	WITHOUT_CLASSIFICATION	2.048182184376327E-4	IMPLEMENTATION
// Build the module body	WITHOUT_CLASSIFICATION	0.9997432264025712	WITHOUT_CLASSIFICATION	2.567735974287866E-4	IMPLEMENTATION
// First, build an assignment for a splat, if any, with the rest of the args!	WITHOUT_CLASSIFICATION	0.9999803185293032	WITHOUT_CLASSIFICATION	1.9681470696717433E-5	IMPLEMENTATION
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9998904688654185	WITHOUT_CLASSIFICATION	1.0953113458135674E-4	IMPLEMENTATION
// If a closure, the next is simply a return from the closure! // If a regular loop, the next is simply a jump to the end of the iteration	WITHOUT_CLASSIFICATION	0.9997026682983348	WITHOUT_CLASSIFICATION	2.973317016652329E-4	IMPLEMENTATION
// get attr	WITHOUT_CLASSIFICATION	0.9994190011368735	WITHOUT_CLASSIFICATION	5.809988631264141E-4	IMPLEMENTATION
// call operator	WITHOUT_CLASSIFICATION	0.9981687899224452	WITHOUT_CLASSIFICATION	0.0018312100775547382	IMPLEMENTATION
// set attr	WITHOUT_CLASSIFICATION	0.9985150018858869	WITHOUT_CLASSIFICATION	0.0014849981141130755	IMPLEMENTATION
// Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, false, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9989328762074964	WITHOUT_CLASSIFICATION	0.00106712379250367	IMPLEMENTATION
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9998880468484502	WITHOUT_CLASSIFICATION	1.1195315154984238E-4	IMPLEMENTATION
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9998880468484502	WITHOUT_CLASSIFICATION	1.1195315154984238E-4	IMPLEMENTATION
// if v1 is defined and true, we are done! 	WITHOUT_CLASSIFICATION	0.999978529812022	WITHOUT_CLASSIFICATION	2.1470187978032414E-5	IMPLEMENTATION
// build first node only and return true	WITHOUT_CLASSIFICATION	0.9995182356955978	WITHOUT_CLASSIFICATION	4.8176430440213775E-4	IMPLEMENTATION
// build first node as non-expr and build second node	WITHOUT_CLASSIFICATION	0.9996320452099988	WITHOUT_CLASSIFICATION	3.679547900011343E-4	IMPLEMENTATION
// Top-level script!	WITHOUT_CLASSIFICATION	0.9986385284494232	WITHOUT_CLASSIFICATION	0.001361471550576766	IMPLEMENTATION
// we won't enter the loop -- just build the condition node	WITHOUT_CLASSIFICATION	0.9999719102244174	WITHOUT_CLASSIFICATION	2.8089775582567138E-5	IMPLEMENTATION
/* ----------- Private Interface ------------ */	WITHOUT_CLASSIFICATION	0.999955253438892	WITHOUT_CLASSIFICATION	4.4746561107931204E-5	IMPLEMENTATION
// What handles warnings	WITHOUT_CLASSIFICATION	0.9989616344336358	WITHOUT_CLASSIFICATION	0.001038365566364133	IMPLEMENTATION
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999719670414708	WITHOUT_CLASSIFICATION	2.803295852911718E-5	IMPLEMENTATION
// For closures, a redo is a jump to the beginning of the closure // For non-closures, a redo is a jump to the beginning of the loop	WITHOUT_CLASSIFICATION	0.999359231845531	WITHOUT_CLASSIFICATION	6.407681544689898E-4	IMPLEMENTATION
// The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.998436930837356	WITHOUT_CLASSIFICATION	0.0015630691626440552	IMPLEMENTATION
// Dummy top-level method for the class	WITHOUT_CLASSIFICATION	0.9983699502964818	WITHOUT_CLASSIFICATION	0.0016300497035182605	IMPLEMENTATION
// Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9977249653125271	WITHOUT_CLASSIFICATION	0.0022750346874729254	IMPLEMENTATION
// ------ Define the operations below ----	WITHOUT_CLASSIFICATION	0.9996188352776727	WITHOUT_CLASSIFICATION	3.811647223272723E-4	IMPLEMENTATION
// value copy and type conversion operations	WITHOUT_CLASSIFICATION	0.9999429967360915	WITHOUT_CLASSIFICATION	5.7003263908533633E-5	IMPLEMENTATION
// alu operations	WITHOUT_CLASSIFICATION	0.9984333896173311	WITHOUT_CLASSIFICATION	0.001566610382668904	IMPLEMENTATION
// method handle, arg receive, return value, and  call instructions	WITHOUT_CLASSIFICATION	0.9964775401197754	WITHOUT_CLASSIFICATION	0.003522459880224655	IMPLEMENTATION
// closure instructions	WITHOUT_CLASSIFICATION	0.9996237203449804	WITHOUT_CLASSIFICATION	3.7627965501967623E-4	IMPLEMENTATION
// eval instructions	WITHOUT_CLASSIFICATION	0.9986385284494232	WITHOUT_CLASSIFICATION	0.001361471550576766	IMPLEMENTATION
// def instructions	WITHOUT_CLASSIFICATION	0.9986385284494232	WITHOUT_CLASSIFICATION	0.001361471550576766	IMPLEMENTATION
// exception instructions	WITHOUT_CLASSIFICATION	0.9992352622489067	WITHOUT_CLASSIFICATION	7.647377510933518E-4	IMPLEMENTATION
// Loads	WITHOUT_CLASSIFICATION	0.999975778940229	WITHOUT_CLASSIFICATION	2.422105977089807E-5	IMPLEMENTATION
// Stores	WITHOUT_CLASSIFICATION	0.999975778940229	WITHOUT_CLASSIFICATION	2.422105977089807E-5	IMPLEMENTATION
// jump and branch operations	WITHOUT_CLASSIFICATION	0.9996742729331601	WITHOUT_CLASSIFICATION	3.2572706683992904E-4	IMPLEMENTATION
// others	WITHOUT_CLASSIFICATION	0.9999758511478238	WITHOUT_CLASSIFICATION	2.4148852176118215E-5	IMPLEMENTATION
// a case/when branch	WITHOUT_CLASSIFICATION	0.9996956938065569	WITHOUT_CLASSIFICATION	3.043061934430851E-4	IMPLEMENTATION
// optimization guards	WITHOUT_CLASSIFICATION	0.9996237203449804	WITHOUT_CLASSIFICATION	3.7627965501967623E-4	IMPLEMENTATION
// By default, call instructions cannot be deleted even if their results aren't used by anyone // unless we know more about what the call is, what it does, etc. // Similarly for evals, stores, returns.	WITHOUT_CLASSIFICATION	0.8041603032572511	WITHOUT_CLASSIFICATION	0.19583969674274898	IMPLEMENTATION
// Returns the containing parent scope -- can be a dynamic value (hence Operand)!	WITHOUT_CLASSIFICATION	0.9996013701742839	WITHOUT_CLASSIFICATION	3.986298257160734E-4	IMPLEMENTATION
// scripts	WITHOUT_CLASSIFICATION	0.999975778940229	WITHOUT_CLASSIFICATION	2.422105977089807E-5	IMPLEMENTATION
// scripts and modules	WITHOUT_CLASSIFICATION	0.9998085822964549	WITHOUT_CLASSIFICATION	1.9141770354517862E-4	IMPLEMENTATION
// scripts, classes, and modules	WITHOUT_CLASSIFICATION	0.9997127562501542	WITHOUT_CLASSIFICATION	2.872437498457892E-4	IMPLEMENTATION
// methods and closures	WITHOUT_CLASSIFICATION	0.9997231118496647	WITHOUT_CLASSIFICATION	2.768881503353353E-4	IMPLEMENTATION
// create a new variable using the prefix	WITHOUT_CLASSIFICATION	0.9999641535043831	WITHOUT_CLASSIFICATION	3.5846495616965554E-5	IMPLEMENTATION
// create a new temporary variable	WITHOUT_CLASSIFICATION	0.9998803538608035	WITHOUT_CLASSIFICATION	1.1964613919640374E-4	IMPLEMENTATION
// Get a new label using a generic prefix	WITHOUT_CLASSIFICATION	0.9999358503319781	WITHOUT_CLASSIFICATION	6.414966802189195E-5	IMPLEMENTATION
// Build the CFG for this scope -- supported only by methods & closures	WITHOUT_CLASSIFICATION	0.9999535314340408	WITHOUT_CLASSIFICATION	4.6468565959236944E-5	IMPLEMENTATION
// Get the control flow graph for this scope -- only valid for methods & closures	WITHOUT_CLASSIFICATION	0.9999627350207271	WITHOUT_CLASSIFICATION	3.7264979272829955E-5	IMPLEMENTATION
// While processing loops, this returns the loop that we are processing.	WITHOUT_CLASSIFICATION	0.998386495091493	WITHOUT_CLASSIFICATION	0.0016135049085070287	IMPLEMENTATION
// Record the loop we are beginning to process	WITHOUT_CLASSIFICATION	0.9990267943001887	WITHOUT_CLASSIFICATION	9.732056998112922E-4	IMPLEMENTATION
// Indicate that we are done processing the loop	WITHOUT_CLASSIFICATION	0.9941006625911367	WITHOUT_CLASSIFICATION	0.005899337408863272	IMPLEMENTATION
// Run the passed in compiler pass on this scope!	WITHOUT_CLASSIFICATION	0.9996778233082922	WITHOUT_CLASSIFICATION	3.2217669170775886E-4	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9927010470423047	WITHOUT_CLASSIFICATION	0.007298952957695242	IMPLEMENTATION
// Readline	WITHOUT_CLASSIFICATION	0.9986385284494232	WITHOUT_CLASSIFICATION	0.001361471550576766	IMPLEMENTATION
// If the cfg of the method is around, print the CFG!	WITHOUT_CLASSIFICATION	0.9982567414507763	WITHOUT_CLASSIFICATION	0.0017432585492237263	IMPLEMENTATION
// Optimize some core class method calls for constant values	WITHOUT_CLASSIFICATION	0.9996616437132465	WITHOUT_CLASSIFICATION	3.383562867535111E-4	IMPLEMENTATION
// If 'r' is not a constant, it could actually be a compound value! // Look in our value map to see if we have a simplified value for the receiver.	WITHOUT_CLASSIFICATION	0.9999967716642097	WITHOUT_CLASSIFICATION	3.2283357902205133E-6	IMPLEMENTATION
// Check if we can optimize this call based on the receiving method and receiver type // Use the simplified receiver!	WITHOUT_CLASSIFICATION	0.9946974719049904	WITHOUT_CLASSIFICATION	0.005302528095009687	IMPLEMENTATION
// If we got a simplified value, mark the call dead and insert a copy in its place!	WITHOUT_CLASSIFICATION	0.9999819119599613	WITHOUT_CLASSIFICATION	1.8088040038654894E-5	IMPLEMENTATION
// If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!	WITHOUT_CLASSIFICATION	0.9999458859486133	WITHOUT_CLASSIFICATION	5.4114051386688745E-5	IMPLEMENTATION
/* ----------- Public abstract methods ---------- */	WITHOUT_CLASSIFICATION	0.9999420364687647	WITHOUT_CLASSIFICATION	5.7963531235459655E-5	IMPLEMENTATION
/* ----------- Public methods with a default implementation ---------- */	WITHOUT_CLASSIFICATION	0.9999245668339108	WITHOUT_CLASSIFICATION	7.543316608911217E-5	IMPLEMENTATION
// Compute meet over all "sources" and compute "destination" basic blocks that should then be processed.  // sources & targets depends on direction of the data flow problem	WITHOUT_CLASSIFICATION	0.9999483955133366	WITHOUT_CLASSIFICATION	5.160448666342057E-5	IMPLEMENTATION
// If the solution has changed, add "dsts" to the work list. // No duplicates please which is why we have bbset.	WITHOUT_CLASSIFICATION	0.9997193978069221	WITHOUT_CLASSIFICATION	2.8060219307781976E-4	IMPLEMENTATION
/* --------- Protected fields/methods below --------- */	WITHOUT_CLASSIFICATION	0.9999516047922951	WITHOUT_CLASSIFICATION	4.839520770488446E-5	IMPLEMENTATION
// Dataflow problem with which this node is associated // CFG node for which this node contains info.	WITHOUT_CLASSIFICATION	0.9987153649634374	WITHOUT_CLASSIFICATION	0.0012846350365626196	IMPLEMENTATION
/* -------------- Public fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999598842462959	WITHOUT_CLASSIFICATION	4.011575370416851E-5	IMPLEMENTATION
// ------- Abstract methods without a default implementation -------	WITHOUT_CLASSIFICATION	0.9997085356824764	WITHOUT_CLASSIFICATION	2.9146431752362096E-4	IMPLEMENTATION
// ------- Default implementation methods below -------	WITHOUT_CLASSIFICATION	0.9988153370282825	WITHOUT_CLASSIFICATION	0.0011846629717174497	IMPLEMENTATION
/* Compute Meet Over All Paths solution for this dataflow problem on the input CFG.     * This implements a standard worklist algorithm. */	WITHOUT_CLASSIFICATION	0.9998425873804143	WITHOUT_CLASSIFICATION	1.5741261958561432E-4	IMPLEMENTATION
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9997098260224668	WITHOUT_CLASSIFICATION	2.901739775331532E-4	IMPLEMENTATION
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9997098260224668	WITHOUT_CLASSIFICATION	2.901739775331532E-4	IMPLEMENTATION
/* -------------- Packaged/protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999598842462959	WITHOUT_CLASSIFICATION	4.011575370416851E-5	IMPLEMENTATION
// We want unique ids for dataflow variables	WITHOUT_CLASSIFICATION	0.9995106734900098	WITHOUT_CLASSIFICATION	4.893265099902019E-4	IMPLEMENTATION
/* -------------- Protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999598842462959	WITHOUT_CLASSIFICATION	4.011575370416851E-5	IMPLEMENTATION
/* -------------- Private fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999719013110414	WITHOUT_CLASSIFICATION	2.8098688958717134E-5	IMPLEMENTATION
// Initialize all flow graph nodes 	WITHOUT_CLASSIFICATION	0.9991907079240586	WITHOUT_CLASSIFICATION	8.092920759414061E-4	IMPLEMENTATION
/* Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses */	WITHOUT_CLASSIFICATION	0.9999984169387096	WITHOUT_CLASSIFICATION	1.5830612904287574E-6	IMPLEMENTATION
/* ******************** PUBLIC INTERFACE ******************* */	WITHOUT_CLASSIFICATION	0.9999246867910838	WITHOUT_CLASSIFICATION	7.53132089162311E-5	IMPLEMENTATION
// Unique ID assigned to this variable	WITHOUT_CLASSIFICATION	0.9971657132223457	WITHOUT_CLASSIFICATION	0.00283428677765427	IMPLEMENTATION
// start out with a default RubyObject allocator	WITHOUT_CLASSIFICATION	0.9998978203784666	WITHOUT_CLASSIFICATION	1.0217962153328427E-4	IMPLEMENTATION
// switch to an allocator based on a default constructor	WITHOUT_CLASSIFICATION	0.9999735011080845	WITHOUT_CLASSIFICATION	2.6498891915615087E-5	IMPLEMENTATION
/* ----------- Public Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999361169751925	WITHOUT_CLASSIFICATION	6.38830248075509E-5	IMPLEMENTATION
// class or module	WITHOUT_CLASSIFICATION	0.9988290715558114	WITHOUT_CLASSIFICATION	0.0011709284441887124	IMPLEMENTATION
// OUT = UNION(IN(succs))	WITHOUT_CLASSIFICATION	0.9994025607659659	WITHOUT_CLASSIFICATION	5.974392340341223E-4	IMPLEMENTATION
// Traverse the instructions in this basic block in reverse order!	WITHOUT_CLASSIFICATION	0.9997838131529927	WITHOUT_CLASSIFICATION	2.1618684700728657E-4	IMPLEMENTATION
// v is defined => It is no longer live before 'i'	WITHOUT_CLASSIFICATION	0.9999863402914749	WITHOUT_CLASSIFICATION	1.3659708524989248E-5	IMPLEMENTATION
// IN is the same!	WITHOUT_CLASSIFICATION	0.9992563334266163	WITHOUT_CLASSIFICATION	7.436665733836058E-4	IMPLEMENTATION
// IN changed!	WITHOUT_CLASSIFICATION	0.998642490973764	WITHOUT_CLASSIFICATION	0.001357509026236026	IMPLEMENTATION
/* ---------- Protected / package fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999339870567627	WITHOUT_CLASSIFICATION	6.601294323725737E-5	IMPLEMENTATION
// If 'v' is not live at the instruction site, and it has no side effects, mark it dead!	WITHOUT_CLASSIFICATION	0.9998515663667851	WITHOUT_CLASSIFICATION	1.4843363321490223E-4	IMPLEMENTATION
// Do not mark this instruction's operands live if the instruction itself is dead!	WITHOUT_CLASSIFICATION	0.99771876017305	WITHOUT_CLASSIFICATION	0.0022812398269501572	IMPLEMENTATION
/* ---------- Private fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999518356064647	WITHOUT_CLASSIFICATION	4.816439353529703E-5	IMPLEMENTATION
// Variables live at entry of this node // Variables live at exit of node // Temporary set of live variables // Size of the "_in" and "_out" bit sets 	WITHOUT_CLASSIFICATION	0.9998165067391165	WITHOUT_CLASSIFICATION	1.834932608833787E-4	IMPLEMENTATION
// Used during optimization passes to propagate type and other information	WITHOUT_CLASSIFICATION	0.9995798747429528	WITHOUT_CLASSIFICATION	4.2012525704707984E-4	IMPLEMENTATION
// Does this instruction have side effects as a result of its operation // This information is used in optimization phases to impact dead code elimination // and other optimization passes	WITHOUT_CLASSIFICATION	0.9999825516100017	WITHOUT_CLASSIFICATION	1.744838999827566E-5	IMPLEMENTATION
/* --------- "Abstract"/"please-override" methods --------- */	WITHOUT_CLASSIFICATION	0.9999305854427079	WITHOUT_CLASSIFICATION	6.941455729213332E-5	IMPLEMENTATION
/* Array of all operands for this instruction */	WITHOUT_CLASSIFICATION	0.9999390265224883	WITHOUT_CLASSIFICATION	6.097347751177144E-5	IMPLEMENTATION
/* List of all variables used by all operands of this instruction */	WITHOUT_CLASSIFICATION	0.9997516170858798	WITHOUT_CLASSIFICATION	2.4838291412014927E-4	IMPLEMENTATION
/*      * This method takes as input a map of operands to their values, and outputs     *     * If the value map provides a value for any of the instruction's operands     * this method is expected to replace the original operands with the simplified values.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify     */	WITHOUT_CLASSIFICATION	0.8710024728392702	WITHOUT_CLASSIFICATION	0.12899752716072965	IMPLEMENTATION
// By default, no simplifications!	WITHOUT_CLASSIFICATION	0.9996042356634405	WITHOUT_CLASSIFICATION	3.9576433655944215E-4	IMPLEMENTATION
// Can this call lead to ruby code getting modified?   // If we don't know what method we are calling, we assume it can (pessimistic, but safe!) // If we do know the target method, we ask the method itself whether it modifies ruby code	WITHOUT_CLASSIFICATION	0.5211806281124495	WITHOUT_CLASSIFICATION	0.4788193718875506	IMPLEMENTATION
// By default, return instructions cannot be deleted	WITHOUT_CLASSIFICATION	0.9994041996248035	WITHOUT_CLASSIFICATION	5.958003751965165E-4	IMPLEMENTATION
// If true, returns the rest of the array starting at the index	WITHOUT_CLASSIFICATION	0.9999071117644338	WITHOUT_CLASSIFICATION	9.288823556627647E-5	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9992395020837381	WITHOUT_CLASSIFICATION	7.604979162619357E-4	IMPLEMENTATION
// Map of label & basic blocks with that label	WITHOUT_CLASSIFICATION	0.9992205181749525	WITHOUT_CLASSIFICATION	7.794818250474199E-4	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9992395020837381	WITHOUT_CLASSIFICATION	7.604979162619357E-4	IMPLEMENTATION
// You can only value-replace atomic values	WITHOUT_CLASSIFICATION	0.9999439750100774	WITHOUT_CLASSIFICATION	5.6024989922603326E-5	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9996896845084529	WITHOUT_CLASSIFICATION	3.1031549154718525E-4	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9996896845084529	WITHOUT_CLASSIFICATION	3.1031549154718525E-4	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9996896845084529	WITHOUT_CLASSIFICATION	3.1031549154718525E-4	IMPLEMENTATION
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.999967319388597	WITHOUT_CLASSIFICATION	3.2680611403104684E-5	IMPLEMENTATION
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.999967319388597	WITHOUT_CLASSIFICATION	3.2680611403104684E-5	IMPLEMENTATION
// The operand that this attribute targets //    DEFERRED //    AttributeValue _val;       // Attribute value	WITHOUT_CLASSIFICATION	0.9996076585708735	WITHOUT_CLASSIFICATION	3.9234142912651274E-4	IMPLEMENTATION
// Arrays, Ranges, etc. are compound values // Variables, fixnums, floats, etc. are "atomic" values	WITHOUT_CLASSIFICATION	0.999980960722683	WITHOUT_CLASSIFICATION	1.9039277316852284E-5	IMPLEMENTATION
// Get the target class of this operand, if we know it!	WITHOUT_CLASSIFICATION	0.9998374957471986	WITHOUT_CLASSIFICATION	1.6250425280143923E-4	IMPLEMENTATION
// The following constants capture pre-known static call sites -- used to implement ruby internals	WITHOUT_CLASSIFICATION	0.9706227452532606	WITHOUT_CLASSIFICATION	0.02937725474673936	IMPLEMENTATION
/* Nothing to do by default */	WITHOUT_CLASSIFICATION	0.9999619136361849	WITHOUT_CLASSIFICATION	3.808636381506684E-5	IMPLEMENTATION
// Map of label & basic blocks which are waiting for a bb with that label	WITHOUT_CLASSIFICATION	0.9997544175849374	WITHOUT_CLASSIFICATION	2.455824150625684E-4	IMPLEMENTATION
// Init before building basic blocks below!	WITHOUT_CLASSIFICATION	0.9997193205885938	WITHOUT_CLASSIFICATION	2.8067941140624673E-4	IMPLEMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999830501595339	WITHOUT_CLASSIFICATION	1.6949840466066456E-5	IMPLEMENTATION
// Scope (method/closure) to which this cfg belongs // Entry BB -- dummy // Exit BB -- dummy // The actual graph // Next available basic block id	WITHOUT_CLASSIFICATION	0.9979696838951582	WITHOUT_CLASSIFICATION	0.002030316104841782	IMPLEMENTATION
// Jump instruction bbs dont add an edge to the succeeding bb by default	WITHOUT_CLASSIFICATION	0.9999256075898972	WITHOUT_CLASSIFICATION	7.43924101027857E-5	IMPLEMENTATION
// Add forward ref. edges	WITHOUT_CLASSIFICATION	0.999785629848176	WITHOUT_CLASSIFICATION	2.1437015182406707E-4	IMPLEMENTATION
// currBB cannot be null!	WITHOUT_CLASSIFICATION	0.9998537204138838	WITHOUT_CLASSIFICATION	1.4627958611616277E-4	IMPLEMENTATION
// Add a forward reference from tgt -> currBB	WITHOUT_CLASSIFICATION	0.9999952561876108	WITHOUT_CLASSIFICATION	4.743812389291909E-6	IMPLEMENTATION
// root-level logic	WITHOUT_CLASSIFICATION	0.9986437954614001	WITHOUT_CLASSIFICATION	0.0013562045385998624	IMPLEMENTATION
// root-level methods	WITHOUT_CLASSIFICATION	0.9996436203174476	WITHOUT_CLASSIFICATION	3.5637968255248224E-4	IMPLEMENTATION
// root-level classes	WITHOUT_CLASSIFICATION	0.9998388788562949	WITHOUT_CLASSIFICATION	1.6112114370515015E-4	IMPLEMENTATION
//        case 4: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); //            break; //        case 5: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); //            break;	WITHOUT_CLASSIFICATION	0.999298320326178	WITHOUT_CLASSIFICATION	7.016796738219012E-4	IMPLEMENTATION
// load receiver	WITHOUT_CLASSIFICATION	0.9988604719164577	WITHOUT_CLASSIFICATION	0.0011395280835422635	IMPLEMENTATION
// load receiver	WITHOUT_CLASSIFICATION	0.9988604719164577	WITHOUT_CLASSIFICATION	0.0011395280835422635	IMPLEMENTATION
// receiver	WITHOUT_CLASSIFICATION	0.9986562694988007	WITHOUT_CLASSIFICATION	0.0013437305011992915	IMPLEMENTATION
// load arguments	WITHOUT_CLASSIFICATION	0.99895305291842	WITHOUT_CLASSIFICATION	0.0010469470815800996	IMPLEMENTATION
// load arguments	WITHOUT_CLASSIFICATION	0.99895305291842	WITHOUT_CLASSIFICATION	0.0010469470815800996	IMPLEMENTATION
//        case 4: //        case 5:	WITHOUT_CLASSIFICATION	0.9995570763859853	WITHOUT_CLASSIFICATION	4.429236140146804E-4	IMPLEMENTATION
// Object[] args	WITHOUT_CLASSIFICATION	0.9987066103744993	WITHOUT_CLASSIFICATION	0.001293389625500709	IMPLEMENTATION
// load handle	WITHOUT_CLASSIFICATION	0.992821972509794	WITHOUT_CLASSIFICATION	0.007178027490206013	IMPLEMENTATION
// args array	WITHOUT_CLASSIFICATION	0.9990049556719681	WITHOUT_CLASSIFICATION	9.95044328031927E-4	IMPLEMENTATION
// i'th argument	WITHOUT_CLASSIFICATION	0.9995650226168612	WITHOUT_CLASSIFICATION	4.3497738313891325E-4	IMPLEMENTATION
// invoke specific arity version	WITHOUT_CLASSIFICATION	0.9972416271287852	WITHOUT_CLASSIFICATION	0.002758372871214797	IMPLEMENTATION
// Object arg0	WITHOUT_CLASSIFICATION	0.9986107924264311	WITHOUT_CLASSIFICATION	0.0013892075735689121	IMPLEMENTATION
// useful for code completion inside the IRB	WITHOUT_CLASSIFICATION	0.9998396438704794	WITHOUT_CLASSIFICATION	1.6035612952072404E-4	IMPLEMENTATION
// No editing before startPos	WITHOUT_CLASSIFICATION	0.9999836460235296	WITHOUT_CLASSIFICATION	1.6353976470376187E-5	IMPLEMENTATION
// no silly ticks!	WITHOUT_CLASSIFICATION	0.9988235868651513	WITHOUT_CLASSIFICATION	0.001176413134848781	IMPLEMENTATION
// no candidates? Fail.	WITHOUT_CLASSIFICATION	0.9996749098592997	WITHOUT_CLASSIFICATION	3.250901407002432E-4	IMPLEMENTATION
// at end	WITHOUT_CLASSIFICATION	0.9999873842258435	WITHOUT_CLASSIFICATION	1.2615774156428155E-5	IMPLEMENTATION
// undo check	WITHOUT_CLASSIFICATION	0.9989888617736954	WITHOUT_CLASSIFICATION	0.0010111382263045783	IMPLEMENTATION
// Explicit reference to these vars as symbols...	WITHOUT_CLASSIFICATION	0.9996360854450729	WITHOUT_CLASSIFICATION	3.639145549271413E-4	IMPLEMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999830501595339	WITHOUT_CLASSIFICATION	1.6949840466066456E-5	IMPLEMENTATION
//\t\n\"\\'`@$><=;|&{(	WITHOUT_CLASSIFICATION	0.999365695968854	WITHOUT_CLASSIFICATION	6.343040311459975E-4	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.9994333085211135	WITHOUT_CLASSIFICATION	5.666914788864999E-4	IMPLEMENTATION
// no check for '*'	WITHOUT_CLASSIFICATION	0.9991208100296821	WITHOUT_CLASSIFICATION	8.791899703178438E-4	IMPLEMENTATION
// no check for '*'	WITHOUT_CLASSIFICATION	0.9991208100296821	WITHOUT_CLASSIFICATION	8.791899703178438E-4	IMPLEMENTATION
// Binding provided for scope, use it	WITHOUT_CLASSIFICATION	0.9983753261438034	WITHOUT_CLASSIFICATION	0.001624673856196601	IMPLEMENTATION
// this is ensured by the callers	WITHOUT_CLASSIFICATION	0.9989958243315047	WITHOUT_CLASSIFICATION	0.001004175668495318	IMPLEMENTATION
// no binding, just eval in "current" frame (caller's frame)	WITHOUT_CLASSIFICATION	0.9999831568323208	WITHOUT_CLASSIFICATION	1.6843167679289095E-5	IMPLEMENTATION
// restore position	WITHOUT_CLASSIFICATION	0.9988120569490028	WITHOUT_CLASSIFICATION	0.0011879430509972478	IMPLEMENTATION
/* Something like cvar_cbase() from eval.c, factored out for the benefit     * of all the classvar-related node evaluations */	WITHOUT_CLASSIFICATION	0.9998907682864108	WITHOUT_CLASSIFICATION	1.0923171358917917E-4	IMPLEMENTATION
// Used by the compiler to simplify arg processing	WITHOUT_CLASSIFICATION	0.9996686544050852	WITHOUT_CLASSIFICATION	3.313455949146907E-4	IMPLEMENTATION
// JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace	WITHOUT_CLASSIFICATION	0.9999782193211451	WITHOUT_CLASSIFICATION	2.1780678854948216E-5	IMPLEMENTATION
// MRI does similar thing on MacOS X with 'EditLine wrapper'.	WITHOUT_CLASSIFICATION	0.9970875243843325	WITHOUT_CLASSIFICATION	0.0029124756156675034	IMPLEMENTATION
// We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)	WITHOUT_CLASSIFICATION	0.999871829946903	WITHOUT_CLASSIFICATION	1.2817005309697307E-4	IMPLEMENTATION
// JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)	WITHOUT_CLASSIFICATION	0.9995578564523105	WITHOUT_CLASSIFICATION	4.4214354768943703E-4	IMPLEMENTATION
// not overridden, let's go	WITHOUT_CLASSIFICATION	0.9995282676310845	WITHOUT_CLASSIFICATION	4.717323689154891E-4	IMPLEMENTATION
/* Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8() */	WITHOUT_CLASSIFICATION	0.999886651992986	WITHOUT_CLASSIFICATION	1.1334800701400556E-4	IMPLEMENTATION
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9986385284494232	WITHOUT_CLASSIFICATION	0.001361471550576766	IMPLEMENTATION
// Complete using a Proc object	WITHOUT_CLASSIFICATION	0.9997262655943338	WITHOUT_CLASSIFICATION	2.7373440566626174E-4	IMPLEMENTATION
// clear basename so it's anonymous when raising	WITHOUT_CLASSIFICATION	0.9996420199152076	WITHOUT_CLASSIFICATION	3.579800847923944E-4	IMPLEMENTATION
// These are not really used by timeout, but exposed for compatibility	WITHOUT_CLASSIFICATION	0.9977352342779994	WITHOUT_CLASSIFICATION	0.0022647657220006777	IMPLEMENTATION
// Timeout module methods	WITHOUT_CLASSIFICATION	0.999637579439067	WITHOUT_CLASSIFICATION	3.624205609330233E-4	IMPLEMENTATION
// Toplevel defines	WITHOUT_CLASSIFICATION	0.9986385284494232	WITHOUT_CLASSIFICATION	0.001361471550576766	IMPLEMENTATION
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999685736053258	WITHOUT_CLASSIFICATION	3.142639467419515E-5	IMPLEMENTATION
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999720226357317	WITHOUT_CLASSIFICATION	2.79773642683245E-5	IMPLEMENTATION
// if it's the exception we're expecting	WITHOUT_CLASSIFICATION	0.9998623935171981	WITHOUT_CLASSIFICATION	1.3760648280185397E-4	IMPLEMENTATION
// and we were given a specific exception	WITHOUT_CLASSIFICATION	0.9945221395535349	WITHOUT_CLASSIFICATION	0.00547786044646509	IMPLEMENTATION
// otherwise, rethrow	WITHOUT_CLASSIFICATION	0.9996237203449804	WITHOUT_CLASSIFICATION	3.7627965501967623E-4	IMPLEMENTATION
// // Remove the Executor task now, to avoid cancelled tasks accumulating // until an Executor thread can schedule and remove them //	WITHOUT_CLASSIFICATION	0.9999036632753794	WITHOUT_CLASSIFICATION	9.633672462069131E-5	IMPLEMENTATION
// // If the task was scheduled, wait for it to finish before polling // for the exception it would have thrown. //	WITHOUT_CLASSIFICATION	0.9991616503469232	WITHOUT_CLASSIFICATION	8.383496530767896E-4	IMPLEMENTATION
// NetProtocolBufferedIO	WITHOUT_CLASSIFICATION	0.9996237203449804	WITHOUT_CLASSIFICATION	3.7627965501967623E-4	IMPLEMENTATION
/* When a length is given, read_string acts like get_bytes */	WITHOUT_CLASSIFICATION	0.9994793297985378	WITHOUT_CLASSIFICATION	5.206702014622624E-4	IMPLEMENTATION
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9605723437679666	WITHOUT_CLASSIFICATION	0.039427656232033474	IMPLEMENTATION
// ARRAY and STRUCT are only used internally	WITHOUT_CLASSIFICATION	0.9996672411678548	WITHOUT_CLASSIFICATION	3.32758832145317E-4	IMPLEMENTATION
// If no release method is defined, then memory leaks will result.	WITHOUT_CLASSIFICATION	0.9980839809623825	WITHOUT_CLASSIFICATION	0.0019160190376175923	IMPLEMENTATION
/*     * This variant of newStruct is called from StructLayoutBuilder     */	WITHOUT_CLASSIFICATION	0.9999970813468355	WITHOUT_CLASSIFICATION	2.9186531644269864E-6	IMPLEMENTATION
// This also handles unsigned int -> negative signed int conversion	WITHOUT_CLASSIFICATION	0.9999887381751481	WITHOUT_CLASSIFICATION	1.1261824851924334E-5	IMPLEMENTATION
// Windows is LLP64	WITHOUT_CLASSIFICATION	0.9990958879781663	WITHOUT_CLASSIFICATION	9.041120218337697E-4	IMPLEMENTATION
// Older JDK on linux map 'c' to 'libc.so' which doesn't work	WITHOUT_CLASSIFICATION	0.9990696916848868	WITHOUT_CLASSIFICATION	9.303083151132134E-4	IMPLEMENTATION
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9996590363085424	WITHOUT_CLASSIFICATION	3.4096369145757144E-4	IMPLEMENTATION
// $blah	WITHOUT_CLASSIFICATION	0.999975778940229	WITHOUT_CLASSIFICATION	2.422105977089807E-5	IMPLEMENTATION
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9605723437679666	WITHOUT_CLASSIFICATION	0.039427656232033474	IMPLEMENTATION
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9996542942651738	WITHOUT_CLASSIFICATION	3.4570573482619514E-4	IMPLEMENTATION
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9996590363085424	WITHOUT_CLASSIFICATION	3.4096369145757144E-4	IMPLEMENTATION
// // Keep a reference to the temporary memory in the cache so it does // not get freed by the GC until the struct is freed //	WITHOUT_CLASSIFICATION	0.9999417624718688	WITHOUT_CLASSIFICATION	5.823752813124332E-5	IMPLEMENTATION
// Add Pointer::NULL as a constant	WITHOUT_CLASSIFICATION	0.9996323279841051	WITHOUT_CLASSIFICATION	3.6767201589489595E-4	IMPLEMENTATION
// Create the ordered list of field names from the map	WITHOUT_CLASSIFICATION	0.9999918996625077	WITHOUT_CLASSIFICATION	8.100337492334007E-6	IMPLEMENTATION
// Assemble a [ :name, offset ] array	WITHOUT_CLASSIFICATION	0.9996447227707891	WITHOUT_CLASSIFICATION	3.552772292109294E-4	IMPLEMENTATION
//                case FLOAT:	WITHOUT_CLASSIFICATION	0.9997295823499095	WITHOUT_CLASSIFICATION	2.7041765009050867E-4	IMPLEMENTATION
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.999327041423908	WITHOUT_CLASSIFICATION	6.72958576092074E-4	IMPLEMENTATION
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.999327041423908	WITHOUT_CLASSIFICATION	6.72958576092074E-4	IMPLEMENTATION
// No auto cleanup needed	WITHOUT_CLASSIFICATION	0.5089514623857418	WITHOUT_CLASSIFICATION	0.49104853761425804	IMPLEMENTATION
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9990720150026656	WITHOUT_CLASSIFICATION	9.279849973344583E-4	IMPLEMENTATION
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999409867878283	WITHOUT_CLASSIFICATION	5.901321217173995E-5	IMPLEMENTATION
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999409867878283	WITHOUT_CLASSIFICATION	5.901321217173995E-5	IMPLEMENTATION
/*         * If there is exactly _one_ callback argument to the function,         * then a block can be given and automatically subsituted for the callback         * parameter.         */	WITHOUT_CLASSIFICATION	0.9999904990657957	WITHOUT_CLASSIFICATION	9.500934204292582E-6	IMPLEMENTATION
/*------------------------------------------------------------------------*/	WITHOUT_CLASSIFICATION	0.9989612992561224	WITHOUT_CLASSIFICATION	0.0010387007438775661	IMPLEMENTATION
//AF_INET	WITHOUT_CLASSIFICATION	0.9999591600903001	WITHOUT_CLASSIFICATION	4.083990969988955E-5	IMPLEMENTATION
//AF_INET	WITHOUT_CLASSIFICATION	0.9999591600903001	WITHOUT_CLASSIFICATION	4.083990969988955E-5	IMPLEMENTATION
// RubyUNIXServer	WITHOUT_CLASSIFICATION	0.9986385284494232	WITHOUT_CLASSIFICATION	0.001361471550576766	IMPLEMENTATION
// line 321	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// // Set up for potentially fast-int operations //	WITHOUT_CLASSIFICATION	0.9999128358625547	WITHOUT_CLASSIFICATION	8.716413744526538E-5	IMPLEMENTATION
// // Hook up the MemoryPointer class if its not already there //	WITHOUT_CLASSIFICATION	0.999887729057337	WITHOUT_CLASSIFICATION	1.122709426630293E-4	IMPLEMENTATION
// This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and // (2) Socket.getChannel() seems to return null in some cases	WITHOUT_CLASSIFICATION	0.9999868317274929	WITHOUT_CLASSIFICATION	1.3168272507141728E-5	IMPLEMENTATION
// no UNIXSockets on Windows	WITHOUT_CLASSIFICATION	0.9993590920129682	WITHOUT_CLASSIFICATION	6.409079870318226E-4	IMPLEMENTATION
// Sockaddr_un has different structure on different platforms. // See JRUBY-2213 for more details.	WITHOUT_CLASSIFICATION	0.9947217882352449	WITHOUT_CLASSIFICATION	0.005278211764755055	IMPLEMENTATION
// There is something valid in the sun_path component	WITHOUT_CLASSIFICATION	0.9999975901408571	WITHOUT_CLASSIFICATION	2.4098591428254643E-6	IMPLEMENTATION
// RubyIPSocket	WITHOUT_CLASSIFICATION	0.9986385284494232	WITHOUT_CLASSIFICATION	0.001361471550576766	IMPLEMENTATION
// host is nil or the empty string, bind to INADDR_ANY	WITHOUT_CLASSIFICATION	0.9996861754332949	WITHOUT_CLASSIFICATION	3.1382456670510844E-4	IMPLEMENTATION
// host and port given	WITHOUT_CLASSIFICATION	0.9994622026529765	WITHOUT_CLASSIFICATION	5.377973470236159E-4	IMPLEMENTATION
// RubyUDPSocket	WITHOUT_CLASSIFICATION	0.9986385284494232	WITHOUT_CLASSIFICATION	0.001361471550576766	IMPLEMENTATION
// By default we always reverse lookup unless do_not_reverse_lookup set.	WITHOUT_CLASSIFICATION	0.999707861927792	WITHOUT_CLASSIFICATION	2.921380722079617E-4	IMPLEMENTATION
// make sure descriptor is registered	WITHOUT_CLASSIFICATION	0.9995209158104444	WITHOUT_CLASSIFICATION	4.7908418955552634E-4	IMPLEMENTATION
// continue with normal initialization	WITHOUT_CLASSIFICATION	0.998411635520362	WITHOUT_CLASSIFICATION	0.0015883644796379325	IMPLEMENTATION
// recv returns nil on EOF	WITHOUT_CLASSIFICATION	0.9993516138484908	WITHOUT_CLASSIFICATION	6.483861515091386E-4	IMPLEMENTATION
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9830968146471667	WITHOUT_CLASSIFICATION	0.016903185352833274	IMPLEMENTATION
// RubyBasicSocket	WITHOUT_CLASSIFICATION	0.9986385284494232	WITHOUT_CLASSIFICATION	0.001361471550576766	IMPLEMENTATION
// we don't have to define any that we don't support; see socket.c	WITHOUT_CLASSIFICATION	0.9989383266750199	WITHOUT_CLASSIFICATION	0.0010616733249801708	IMPLEMENTATION
// mandatory constants we haven't implemented	WITHOUT_CLASSIFICATION	0.9748476245517359	WITHOUT_CLASSIFICATION	0.02515237544826408	IMPLEMENTATION
// constants webrick crashes without	WITHOUT_CLASSIFICATION	0.9996483496094809	WITHOUT_CLASSIFICATION	3.516503905191115E-4	IMPLEMENTATION
// More constants needed by specs	WITHOUT_CLASSIFICATION	0.5914257664947989	IMPLEMENTATION	0.40857423350520117	WITHOUT_CLASSIFICATION
// normal file descriptor..try to work with it	WITHOUT_CLASSIFICATION	0.9863859172577444	WITHOUT_CLASSIFICATION	0.013614082742255663	IMPLEMENTATION
// AF_INET	WITHOUT_CLASSIFICATION	0.999975778940229	WITHOUT_CLASSIFICATION	2.422105977089807E-5	IMPLEMENTATION
// 255.255.255.255	WITHOUT_CLASSIFICATION	0.9986385284494232	WITHOUT_CLASSIFICATION	0.001361471550576766	IMPLEMENTATION
// 0.0.0.0	WITHOUT_CLASSIFICATION	0.999975778940229	WITHOUT_CLASSIFICATION	2.422105977089807E-5	IMPLEMENTATION
//def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)	WITHOUT_CLASSIFICATION	0.99835144164039	WITHOUT_CLASSIFICATION	0.0016485583596098918	IMPLEMENTATION
// line 323	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9994367651148036	WITHOUT_CLASSIFICATION	5.632348851963979E-4	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9994367651148036	WITHOUT_CLASSIFICATION	5.632348851963979E-4	IMPLEMENTATION
// ok, it's a socket...set values accordingly // just using AF_INET since we can't tell from SocketChannel...	WITHOUT_CLASSIFICATION	0.9999975122654868	WITHOUT_CLASSIFICATION	2.4877345131970695E-6	IMPLEMENTATION
// datagram, set accordingly // again, AF_INET	WITHOUT_CLASSIFICATION	0.9994551784122324	WITHOUT_CLASSIFICATION	5.44821587767545E-4	IMPLEMENTATION
//IRubyObject family = args[2];	WITHOUT_CLASSIFICATION	0.99835144164039	WITHOUT_CLASSIFICATION	0.0016485583596098918	IMPLEMENTATION
// When Socket::AI_PASSIVE and host is nil, return 'any' address. 	WITHOUT_CLASSIFICATION	0.9997980426842448	WITHOUT_CLASSIFICATION	2.0195731575513417E-4	IMPLEMENTATION
// The value of 1 is for Socket::AI_PASSIVE.	WITHOUT_CLASSIFICATION	0.9999041235736758	WITHOUT_CLASSIFICATION	9.587642632417245E-5	IMPLEMENTATION
// RubySocket	WITHOUT_CLASSIFICATION	0.9986385284494232	WITHOUT_CLASSIFICATION	0.001361471550576766	IMPLEMENTATION
// numeric host, use it for port	WITHOUT_CLASSIFICATION	0.9989030493932605	WITHOUT_CLASSIFICATION	0.0010969506067395318	IMPLEMENTATION
//            e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9995719275459892	WITHOUT_CLASSIFICATION	4.2807245401080306E-4	IMPLEMENTATION
// we were woken up without being selected...poll for thread events and go back to sleep	WITHOUT_CLASSIFICATION	0.9999392738816927	WITHOUT_CLASSIFICATION	6.072611830723372E-5	IMPLEMENTATION
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9992372743101539	WITHOUT_CLASSIFICATION	7.627256898461561E-4	IMPLEMENTATION
// no connection immediately accepted, let them try again	WITHOUT_CLASSIFICATION	0.9918817177546273	WITHOUT_CLASSIFICATION	0.008118282245372768	IMPLEMENTATION
// do nothing, just exit	WITHOUT_CLASSIFICATION	0.9998584132462125	WITHOUT_CLASSIFICATION	1.4158675378741136E-4	IMPLEMENTATION
//nativeThread.setPriority(priority);	WITHOUT_CLASSIFICATION	0.9989612992561224	WITHOUT_CLASSIFICATION	0.0010387007438775661	IMPLEMENTATION
// set thread context JRuby classloader here, for Ruby-owned thread	WITHOUT_CLASSIFICATION	0.999485920187435	WITHOUT_CLASSIFICATION	5.140798125649527E-4	IMPLEMENTATION
// uber-ThreadKill catcher, since it should always just mean "be dead"	WITHOUT_CLASSIFICATION	0.9995004540062432	WITHOUT_CLASSIFICATION	4.995459937568573E-4	IMPLEMENTATION
// Call the thread's code	WITHOUT_CLASSIFICATION	0.9996725846587154	WITHOUT_CLASSIFICATION	3.274153412845788E-4	IMPLEMENTATION
// Someone called exit!, so we need to kill the main thread	WITHOUT_CLASSIFICATION	0.9994327945637188	WITHOUT_CLASSIFICATION	5.672054362812464E-4	IMPLEMENTATION
// restore context classloader, in case we're using a thread pool	WITHOUT_CLASSIFICATION	0.9999819206909529	WITHOUT_CLASSIFICATION	1.807930904708016E-5	IMPLEMENTATION
// be dead	WITHOUT_CLASSIFICATION	0.9999865640485988	WITHOUT_CLASSIFICATION	1.3435951401248222E-5	IMPLEMENTATION
// loop until a context is available, to clean up softrefs that might have been collected	WITHOUT_CLASSIFICATION	0.993038997211772	WITHOUT_CLASSIFICATION	0.006961002788227978	IMPLEMENTATION
// all threads in ruby thread group plus main thread	WITHOUT_CLASSIFICATION	0.9998984688914683	WITHOUT_CLASSIFICATION	1.0153110853174331E-4	IMPLEMENTATION
// thread is not alive, skip it	WITHOUT_CLASSIFICATION	0.9646672860165034	WITHOUT_CLASSIFICATION	0.035332713983496584	IMPLEMENTATION
// future is done or cancelled, skip it	WITHOUT_CLASSIFICATION	0.9928078630578027	WITHOUT_CLASSIFICATION	0.0071921369421973445	IMPLEMENTATION
// first, check if the sender has unreceived mail	WITHOUT_CLASSIFICATION	0.9999074327721004	WITHOUT_CLASSIFICATION	9.256722789954289E-5	IMPLEMENTATION
// then deliver mail to the target	WITHOUT_CLASSIFICATION	0.9997096901536561	WITHOUT_CLASSIFICATION	2.9030984634388445E-4	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9991927924165495	WITHOUT_CLASSIFICATION	8.072075834504743E-4	IMPLEMENTATION
// Define a second version that doesn't take a block, so we have unique code paths for both cases.	WITHOUT_CLASSIFICATION	0.9995978122577447	WITHOUT_CLASSIFICATION	4.021877422553604E-4	IMPLEMENTATION
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9928217549266214	WITHOUT_CLASSIFICATION	0.0071782450733785625	IMPLEMENTATION
// main body	WITHOUT_CLASSIFICATION	0.999029842462602	WITHOUT_CLASSIFICATION	9.70157537397937E-4	IMPLEMENTATION
// return jump handling	WITHOUT_CLASSIFICATION	0.9991779754014944	WITHOUT_CLASSIFICATION	8.220245985056102E-4	IMPLEMENTATION
// finally	WITHOUT_CLASSIFICATION	0.9999761152315335	WITHOUT_CLASSIFICATION	2.3884768466519846E-5	IMPLEMENTATION
// return result if we're still good	WITHOUT_CLASSIFICATION	0.9997898389098627	WITHOUT_CLASSIFICATION	2.1016109013728267E-4	IMPLEMENTATION
// redo jump handling	WITHOUT_CLASSIFICATION	0.998910498130213	WITHOUT_CLASSIFICATION	0.0010895018697869565	IMPLEMENTATION
// clear the redo	WITHOUT_CLASSIFICATION	0.999048053856875	WITHOUT_CLASSIFICATION	9.519461431250719E-4	IMPLEMENTATION
// get runtime, create jump error, and throw it	WITHOUT_CLASSIFICATION	0.9998578490616234	WITHOUT_CLASSIFICATION	1.4215093837664273E-4	IMPLEMENTATION
// throw redo error if we're still good	WITHOUT_CLASSIFICATION	0.9992852674191931	WITHOUT_CLASSIFICATION	7.147325808068605E-4	IMPLEMENTATION
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9989873936674047	WITHOUT_CLASSIFICATION	0.0010126063325952125	IMPLEMENTATION
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9801961687385471	WITHOUT_CLASSIFICATION	0.01980383126145283	IMPLEMENTATION
// No required specified, check actual number of required args	WITHOUT_CLASSIFICATION	0.9996866086338526	WITHOUT_CLASSIFICATION	3.133913661473935E-4	IMPLEMENTATION
// actual required is less than 3, so we use specific arity	WITHOUT_CLASSIFICATION	0.9976222642286662	WITHOUT_CLASSIFICATION	0.0023777357713337076	IMPLEMENTATION
// actual required is greater than 3, raise error (we don't support actual required > 3)	WITHOUT_CLASSIFICATION	0.9670713909401993	WITHOUT_CLASSIFICATION	0.032928609059800704	IMPLEMENTATION
// simple path, no multimethod	WITHOUT_CLASSIFICATION	0.9996790823250469	WITHOUT_CLASSIFICATION	3.209176749530908E-4	IMPLEMENTATION
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9974028019362382	WITHOUT_CLASSIFICATION	0.002597198063761906	IMPLEMENTATION
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9974028019362382	WITHOUT_CLASSIFICATION	0.002597198063761906	IMPLEMENTATION
// normal all-rest method	WITHOUT_CLASSIFICATION	0.996249196743524	WITHOUT_CLASSIFICATION	0.003750803256476099	IMPLEMENTATION
// for zero, one, two, three arities, JavaMethod.JavaMethod*.call(...IRubyObject[] args...) will check	WITHOUT_CLASSIFICATION	0.9996848089159949	WITHOUT_CLASSIFICATION	3.1519108400512467E-4	IMPLEMENTATION
// promise to implement zero to N	WITHOUT_CLASSIFICATION	0.9768648928625701	WITHOUT_CLASSIFICATION	0.02313510713743	IMPLEMENTATION
// return	WITHOUT_CLASSIFICATION	0.9999817300951838	WITHOUT_CLASSIFICATION	1.82699048162345E-5	IMPLEMENTATION
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9998723989297235	WITHOUT_CLASSIFICATION	1.2760107027656435E-4	IMPLEMENTATION
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.999846413216246	WITHOUT_CLASSIFICATION	1.5358678375397049E-4	IMPLEMENTATION
// confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9994665103185164	WITHOUT_CLASSIFICATION	5.33489681483552E-4	IMPLEMENTATION
// confirm maximum not greater than optional	WITHOUT_CLASSIFICATION	0.9904515860271513	WITHOUT_CLASSIFICATION	0.009548413972848628	IMPLEMENTATION
// Raise an error if arity does not match requirements	WITHOUT_CLASSIFICATION	0.9997834131087577	WITHOUT_CLASSIFICATION	2.1658689124217905E-4	IMPLEMENTATION
// tc	WITHOUT_CLASSIFICATION	0.999975778940229	WITHOUT_CLASSIFICATION	2.422105977089807E-5	IMPLEMENTATION
// self // name	WITHOUT_CLASSIFICATION	0.9982520140175583	WITHOUT_CLASSIFICATION	0.0017479859824417335	IMPLEMENTATION
// no args	WITHOUT_CLASSIFICATION	0.9999797658274641	WITHOUT_CLASSIFICATION	2.0234172535935432E-5	IMPLEMENTATION
// variable args with block	WITHOUT_CLASSIFICATION	0.9985626654641078	WITHOUT_CLASSIFICATION	0.0014373345358921496	IMPLEMENTATION
// variable args no block, load null block	WITHOUT_CLASSIFICATION	0.9986776668415552	WITHOUT_CLASSIFICATION	0.0013223331584447402	IMPLEMENTATION
// zero args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9995630543286675	WITHOUT_CLASSIFICATION	4.369456713324583E-4	IMPLEMENTATION
// one arg with block	WITHOUT_CLASSIFICATION	0.998256531144846	WITHOUT_CLASSIFICATION	0.0017434688551539494	IMPLEMENTATION
// one arg, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.999533122274014	WITHOUT_CLASSIFICATION	4.668777259858903E-4	IMPLEMENTATION
// two args with block	WITHOUT_CLASSIFICATION	0.9957652081276857	WITHOUT_CLASSIFICATION	0.00423479187231434	IMPLEMENTATION
// two args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9988101114040867	WITHOUT_CLASSIFICATION	0.0011898885959133571	IMPLEMENTATION
// three args with block	WITHOUT_CLASSIFICATION	0.9983901335618873	WITHOUT_CLASSIFICATION	0.0016098664381127043	IMPLEMENTATION
// three args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9995485166965618	WITHOUT_CLASSIFICATION	4.514833034381342E-4	IMPLEMENTATION
// load block if it accepts block	WITHOUT_CLASSIFICATION	0.9995740165915974	WITHOUT_CLASSIFICATION	4.259834084025717E-4	IMPLEMENTATION
// all other arg cases with block	WITHOUT_CLASSIFICATION	0.9953465558508117	WITHOUT_CLASSIFICATION	0.004653444149188265	IMPLEMENTATION
// all other arg cases without block	WITHOUT_CLASSIFICATION	0.9976370241308578	WITHOUT_CLASSIFICATION	0.002362975869142275	IMPLEMENTATION
// one arg, no block; do nothing	WITHOUT_CLASSIFICATION	0.9997938386699183	WITHOUT_CLASSIFICATION	2.0616133008172127E-4	IMPLEMENTATION
// two args, no block; do nothing	WITHOUT_CLASSIFICATION	0.999474363133711	WITHOUT_CLASSIFICATION	5.256368662891168E-4	IMPLEMENTATION
// three args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9998006381700435	WITHOUT_CLASSIFICATION	1.9936182995637726E-4	IMPLEMENTATION
// load target for invocations	WITHOUT_CLASSIFICATION	0.9998930725233794	WITHOUT_CLASSIFICATION	1.0692747662058186E-4	IMPLEMENTATION
// load receiver as original type for virtual invocation	WITHOUT_CLASSIFICATION	0.9998620912283882	WITHOUT_CLASSIFICATION	1.3790877161173664E-4	IMPLEMENTATION
// static invocation	WITHOUT_CLASSIFICATION	0.9981996760100516	WITHOUT_CLASSIFICATION	0.0018003239899485218	IMPLEMENTATION
// virtual invocation	WITHOUT_CLASSIFICATION	0.9996237203449804	WITHOUT_CLASSIFICATION	3.7627965501967623E-4	IMPLEMENTATION
// void return type, so we need to load a nil for returning below	WITHOUT_CLASSIFICATION	0.9997200623606554	WITHOUT_CLASSIFICATION	2.799376393446061E-4	IMPLEMENTATION
// normal finally and exit	WITHOUT_CLASSIFICATION	0.9997288284935704	WITHOUT_CLASSIFICATION	2.711715064296843E-4	IMPLEMENTATION
// promise to implement one to N	WITHOUT_CLASSIFICATION	0.975318464311802	WITHOUT_CLASSIFICATION	0.02468153568819792	IMPLEMENTATION
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9801961687385471	WITHOUT_CLASSIFICATION	0.01980383126145283	IMPLEMENTATION
// these are only needed if we have a non-noop call config	WITHOUT_CLASSIFICATION	0.72948135304917	WITHOUT_CLASSIFICATION	0.27051864695082994	IMPLEMENTATION
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9947364924879444	WITHOUT_CLASSIFICATION	0.005263507512055725	IMPLEMENTATION
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9947364924879444	WITHOUT_CLASSIFICATION	0.005263507512055725	IMPLEMENTATION
// singleton classes don't get their own visibility domain	WITHOUT_CLASSIFICATION	0.999905050145814	WITHOUT_CLASSIFICATION	9.494985418601242E-5	IMPLEMENTATION
// For visibility we need real meta class and not anonymous one from class << self	WITHOUT_CLASSIFICATION	0.9921557808067059	WITHOUT_CLASSIFICATION	0.007844219193294127	IMPLEMENTATION
// SimpleInvocationMethod	WITHOUT_CLASSIFICATION	0.9996237203449804	WITHOUT_CLASSIFICATION	3.7627965501967623E-4	IMPLEMENTATION
// never reached	WITHOUT_CLASSIFICATION	0.985130875228337	WITHOUT_CLASSIFICATION	0.014869124771663056	IMPLEMENTATION
// promise to implement N with block	WITHOUT_CLASSIFICATION	0.9021965098575588	WITHOUT_CLASSIFICATION	0.09780349014244116	IMPLEMENTATION
// promise to implement zero to N with block	WITHOUT_CLASSIFICATION	0.9050479728382573	WITHOUT_CLASSIFICATION	0.09495202716174274	IMPLEMENTATION
// promise to implement one to N with block	WITHOUT_CLASSIFICATION	0.8991964256590872	WITHOUT_CLASSIFICATION	0.10080357434091278	IMPLEMENTATION
// promise to implement two to N with block	WITHOUT_CLASSIFICATION	0.7776556496817991	WITHOUT_CLASSIFICATION	0.2223443503182008	IMPLEMENTATION
// promise to implement zero to three with block	WITHOUT_CLASSIFICATION	0.9050479728382573	WITHOUT_CLASSIFICATION	0.09495202716174274	IMPLEMENTATION
// promise to implement one to three with block	WITHOUT_CLASSIFICATION	0.8991964256590872	WITHOUT_CLASSIFICATION	0.10080357434091278	IMPLEMENTATION
// promise to implement two to three with block	WITHOUT_CLASSIFICATION	0.7776556496817991	WITHOUT_CLASSIFICATION	0.2223443503182008	IMPLEMENTATION
// promise to implement three with block	WITHOUT_CLASSIFICATION	0.9021965098575588	WITHOUT_CLASSIFICATION	0.09780349014244116	IMPLEMENTATION
// promise to implement N	WITHOUT_CLASSIFICATION	0.9852819804013562	WITHOUT_CLASSIFICATION	0.014718019598643904	IMPLEMENTATION
// DumpingInvocationMethodFactory	WITHOUT_CLASSIFICATION	0.9993837240754918	WITHOUT_CLASSIFICATION	6.162759245082557E-4	IMPLEMENTATION
// We promote our box to being its own box since we're changing // visibilities, and need it to be reflected on this method object // independent of any other sharing the box.	WITHOUT_CLASSIFICATION	0.9930912315396244	WITHOUT_CLASSIFICATION	0.006908768460375579	IMPLEMENTATION
// Normally we could leave these to fall back on the superclass, but // since it dispatches through the [] version below, which may // dispatch through the []+block version, we can save it a couple hops // by overriding these here.	WITHOUT_CLASSIFICATION	0.9971345854294426	WITHOUT_CLASSIFICATION	0.002865414570557367	IMPLEMENTATION
// promise to implement two to N	WITHOUT_CLASSIFICATION	0.9393710153908711	WITHOUT_CLASSIFICATION	0.06062898460912889	IMPLEMENTATION
// promise to implement three to N	WITHOUT_CLASSIFICATION	0.9761132110200148	WITHOUT_CLASSIFICATION	0.023886788979985245	IMPLEMENTATION
// promise to implement zero to three	WITHOUT_CLASSIFICATION	0.9768648928625701	WITHOUT_CLASSIFICATION	0.02313510713743	IMPLEMENTATION
// promise to implement one to three	WITHOUT_CLASSIFICATION	0.975318464311802	WITHOUT_CLASSIFICATION	0.02468153568819792	IMPLEMENTATION
// promise to implement two to three	WITHOUT_CLASSIFICATION	0.9393710153908711	WITHOUT_CLASSIFICATION	0.06062898460912889	IMPLEMENTATION
// promise to implement three	WITHOUT_CLASSIFICATION	0.9852819804013562	WITHOUT_CLASSIFICATION	0.014718019598643904	IMPLEMENTATION
// all other arities use "n" dispatch path	WITHOUT_CLASSIFICATION	0.9974527211602502	WITHOUT_CLASSIFICATION	0.002547278839749836	IMPLEMENTATION
// load up object and add a few useful methods	WITHOUT_CLASSIFICATION	0.9998565158531922	WITHOUT_CLASSIFICATION	1.4348414680781017E-4	IMPLEMENTATION
// open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel	WITHOUT_CLASSIFICATION	0.9995997886601391	WITHOUT_CLASSIFICATION	4.0021133986099084E-4	IMPLEMENTATION
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9993441022917533	WITHOUT_CLASSIFICATION	6.55897708246819E-4	IMPLEMENTATION
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.564564165311974	WITHOUT_CLASSIFICATION	0.4354358346880261	IMPLEMENTATION
// create constructor	WITHOUT_CLASSIFICATION	0.9999596964643959	WITHOUT_CLASSIFICATION	4.030353560405195E-5	IMPLEMENTATION
// wrap self and store the wrapper	WITHOUT_CLASSIFICATION	0.9997843019377929	WITHOUT_CLASSIFICATION	2.1569806220717526E-4	IMPLEMENTATION
// end constructor	WITHOUT_CLASSIFICATION	0.999358998579489	WITHOUT_CLASSIFICATION	6.410014205110346E-4	IMPLEMENTATION
// start setup method	WITHOUT_CLASSIFICATION	0.9971105998451133	WITHOUT_CLASSIFICATION	0.002889400154886714	IMPLEMENTATION
// set RubyClass	WITHOUT_CLASSIFICATION	0.9985150018858869	WITHOUT_CLASSIFICATION	0.0014849981141130755	IMPLEMENTATION
// set Ruby	WITHOUT_CLASSIFICATION	0.9985150018858869	WITHOUT_CLASSIFICATION	0.0014849981141130755	IMPLEMENTATION
// all methods dispatch to the simple version by default, which is method_missing normally	WITHOUT_CLASSIFICATION	0.9981696661604836	WITHOUT_CLASSIFICATION	0.0018303338395163611	IMPLEMENTATION
// try specific name first, falling back on simple name	WITHOUT_CLASSIFICATION	0.986976384447859	WITHOUT_CLASSIFICATION	0.013023615552141017	IMPLEMENTATION
// get current context	WITHOUT_CLASSIFICATION	0.99919192352983	WITHOUT_CLASSIFICATION	8.08076470170004E-4	IMPLEMENTATION
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9995793385688179	WITHOUT_CLASSIFICATION	4.2066143118213185E-4	IMPLEMENTATION
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9993441022917533	WITHOUT_CLASSIFICATION	6.55897708246819E-4	IMPLEMENTATION
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.564564165311974	WITHOUT_CLASSIFICATION	0.4354358346880261	IMPLEMENTATION
// create constructor	WITHOUT_CLASSIFICATION	0.9999596964643959	WITHOUT_CLASSIFICATION	4.030353560405195E-5	IMPLEMENTATION
// end constructor	WITHOUT_CLASSIFICATION	0.999358998579489	WITHOUT_CLASSIFICATION	6.410014205110346E-4	IMPLEMENTATION
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9766807960171159	WITHOUT_CLASSIFICATION	0.023319203982884153	IMPLEMENTATION
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9997250527679419	WITHOUT_CLASSIFICATION	2.7494723205811393E-4	IMPLEMENTATION
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9994443193230019	WITHOUT_CLASSIFICATION	5.556806769979797E-4	IMPLEMENTATION
// load null block	WITHOUT_CLASSIFICATION	0.9960899000038782	WITHOUT_CLASSIFICATION	0.003910099996121874	IMPLEMENTATION
// invoke method	WITHOUT_CLASSIFICATION	0.986226265088392	WITHOUT_CLASSIFICATION	0.01377373491160809	IMPLEMENTATION
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.999482744730954	WITHOUT_CLASSIFICATION	5.172552690460091E-4	IMPLEMENTATION
// end setup method	WITHOUT_CLASSIFICATION	0.9801063536493926	WITHOUT_CLASSIFICATION	0.01989364635060742	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.9987234526584753	WITHOUT_CLASSIFICATION	0.0012765473415246357	IMPLEMENTATION
// create static init, for a monitor object	WITHOUT_CLASSIFICATION	0.9997864012734302	WITHOUT_CLASSIFICATION	2.1359872656967954E-4	IMPLEMENTATION
// store the wrapper	WITHOUT_CLASSIFICATION	0.9992155479138332	WITHOUT_CLASSIFICATION	7.84452086166901E-4	IMPLEMENTATION
// prepare temp locals	WITHOUT_CLASSIFICATION	0.9996339750267291	WITHOUT_CLASSIFICATION	3.6602497327095586E-4	IMPLEMENTATION
// Try to look up field for simple name // get field; if nonnull, go straight to dispatch	WITHOUT_CLASSIFICATION	0.9999754964611293	WITHOUT_CLASSIFICATION	2.4503538870696226E-5	IMPLEMENTATION
// field is null, lock class and try to populate	WITHOUT_CLASSIFICATION	0.9998989256977172	WITHOUT_CLASSIFICATION	1.0107430228285681E-4	IMPLEMENTATION
// try/finally block to ensure unlock	WITHOUT_CLASSIFICATION	0.9961008224887905	WITHOUT_CLASSIFICATION	0.0038991775112095024	IMPLEMENTATION
// store it	WITHOUT_CLASSIFICATION	0.9980864565500701	WITHOUT_CLASSIFICATION	0.0019135434499298885	IMPLEMENTATION
// end of try block	WITHOUT_CLASSIFICATION	0.9956482275525322	WITHOUT_CLASSIFICATION	0.004351772447467773	IMPLEMENTATION
// finally block to release monitor	WITHOUT_CLASSIFICATION	0.9974153785908835	WITHOUT_CLASSIFICATION	0.0025846214091164834	IMPLEMENTATION
// exception handling for monitor release	WITHOUT_CLASSIFICATION	0.9978780509593536	WITHOUT_CLASSIFICATION	0.0021219490406465293	IMPLEMENTATION
// re-get, re-check method; if not null now, go to dispatch	WITHOUT_CLASSIFICATION	0.9993124675640501	WITHOUT_CLASSIFICATION	6.875324359498862E-4	IMPLEMENTATION
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9995793385688179	WITHOUT_CLASSIFICATION	4.2066143118213185E-4	IMPLEMENTATION
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9997250527679419	WITHOUT_CLASSIFICATION	2.7494723205811393E-4	IMPLEMENTATION
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9994443193230019	WITHOUT_CLASSIFICATION	5.556806769979797E-4	IMPLEMENTATION
// invoke method	WITHOUT_CLASSIFICATION	0.986226265088392	WITHOUT_CLASSIFICATION	0.01377373491160809	IMPLEMENTATION
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.999482744730954	WITHOUT_CLASSIFICATION	5.172552690460091E-4	IMPLEMENTATION
// end setup method	WITHOUT_CLASSIFICATION	0.9801063536493926	WITHOUT_CLASSIFICATION	0.01989364635060742	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.9987234526584753	WITHOUT_CLASSIFICATION	0.0012765473415246357	IMPLEMENTATION
// create the class	WITHOUT_CLASSIFICATION	0.9997610673233805	WITHOUT_CLASSIFICATION	2.3893267661955273E-4	IMPLEMENTATION
// method still not available, call method_missing	WITHOUT_CLASSIFICATION	0.5933264596099658	WITHOUT_CLASSIFICATION	0.4066735403900343	IMPLEMENTATION
// perform the dispatch	WITHOUT_CLASSIFICATION	0.999702459791695	WITHOUT_CLASSIFICATION	2.975402083049472E-4	IMPLEMENTATION
// try to load the specified name; only if that fails, try to define the class	WITHOUT_CLASSIFICATION	0.9998249059024441	WITHOUT_CLASSIFICATION	1.75094097555765E-4	IMPLEMENTATION
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9995091950402	WITHOUT_CLASSIFICATION	4.908049597999954E-4	IMPLEMENTATION
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9995091950402	WITHOUT_CLASSIFICATION	4.908049597999954E-4	IMPLEMENTATION
// setup the class	WITHOUT_CLASSIFICATION	0.9994288523187118	WITHOUT_CLASSIFICATION	5.711476812882139E-4	IMPLEMENTATION
// now, create a method_added that can replace the DynamicMethod fields as they're redefined	WITHOUT_CLASSIFICATION	0.998542007866745	WITHOUT_CLASSIFICATION	0.0014579921332549832	IMPLEMENTATION
// do nothing, it's a non-impl method	WITHOUT_CLASSIFICATION	0.9785468324239893	WITHOUT_CLASSIFICATION	0.02145316757601062	IMPLEMENTATION
// probably a primitive	WITHOUT_CLASSIFICATION	0.9998051329644587	WITHOUT_CLASSIFICATION	1.9486703554121972E-4	IMPLEMENTATION
// interfaces are handled as modules	WITHOUT_CLASSIFICATION	0.9999072344740597	WITHOUT_CLASSIFICATION	9.276552594036268E-5	IMPLEMENTATION
// construct the mirror class and parent classes	WITHOUT_CLASSIFICATION	0.9999077850292092	WITHOUT_CLASSIFICATION	9.221497079071842E-5	IMPLEMENTATION
// set the full name	WITHOUT_CLASSIFICATION	0.9980090831081158	WITHOUT_CLASSIFICATION	0.001990916891884193	IMPLEMENTATION
// include all interfaces	WITHOUT_CLASSIFICATION	0.9996469081608008	WITHOUT_CLASSIFICATION	3.530918391991403E-4	IMPLEMENTATION
// if it's an array, only add methods for aref, aset, and length	WITHOUT_CLASSIFICATION	0.9999534239903216	WITHOUT_CLASSIFICATION	4.6576009678266844E-5	IMPLEMENTATION
// add array construction methods	WITHOUT_CLASSIFICATION	0.9995942513008571	WITHOUT_CLASSIFICATION	4.0574869914290085E-4	IMPLEMENTATION
// add all public constructors (note: getConstructors only returns public ones)	WITHOUT_CLASSIFICATION	0.9994447913681969	WITHOUT_CLASSIFICATION	5.552086318030586E-4	IMPLEMENTATION
// add all instance and static methods	WITHOUT_CLASSIFICATION	0.99950499065148	WITHOUT_CLASSIFICATION	4.950093485200073E-4	IMPLEMENTATION
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9996648535555682	WITHOUT_CLASSIFICATION	3.351464444317652E-4	IMPLEMENTATION
// too much array creation!	WITHOUT_CLASSIFICATION	0.9998179867720611	WITHOUT_CLASSIFICATION	1.8201322793883E-4	IMPLEMENTATION
// only include static methods if specified	WITHOUT_CLASSIFICATION	0.9999092981073796	WITHOUT_CLASSIFICATION	9.070189262042286E-5	IMPLEMENTATION
// add a few type-specific special methods	WITHOUT_CLASSIFICATION	0.9994668981521283	WITHOUT_CLASSIFICATION	5.331018478717614E-4	IMPLEMENTATION
// add all static variables	WITHOUT_CLASSIFICATION	0.999385880373688	WITHOUT_CLASSIFICATION	6.141196263119676E-4	IMPLEMENTATION
// only public static fields that are valid constants	WITHOUT_CLASSIFICATION	0.9999337302045855	WITHOUT_CLASSIFICATION	6.62697954145281E-5	IMPLEMENTATION
// looks like someone's trying to raise a Java exception. Let them.	WITHOUT_CLASSIFICATION	0.9979497586014928	WITHOUT_CLASSIFICATION	0.002050241398507157	IMPLEMENTATION
// NOTE: The five match methods are arity-split to avoid the cost of boxing arguments // when there's already a cached match. Do not condense them into a single // method.	WITHOUT_CLASSIFICATION	0.981483588231513	WITHOUT_CLASSIFICATION	0.018516411768487017	IMPLEMENTATION
// TODO: This is where we would want to do precision checks to see // if it's non-destructive to coerce a given type into the target // integral primitive	WITHOUT_CLASSIFICATION	0.7939367964317957	IMPLEMENTATION	0.2060632035682044	WITHOUT_CLASSIFICATION
// long first because it's what Fixnum claims to be	WITHOUT_CLASSIFICATION	0.9811898072506007	WITHOUT_CLASSIFICATION	0.01881019274939937	IMPLEMENTATION
// double first because it's what float claims to be	WITHOUT_CLASSIFICATION	0.9977412889699616	WITHOUT_CLASSIFICATION	0.0022587110300383265	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.8121718122326999	IMPLEMENTATION	0.18782818776730015	WITHOUT_CLASSIFICATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9986385284494232	WITHOUT_CLASSIFICATION	0.001361471550576766	IMPLEMENTATION
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9841867107851175	WITHOUT_CLASSIFICATION	0.01581328921488248	IMPLEMENTATION
// we set all Java methods to optional, since many/most have overloads	WITHOUT_CLASSIFICATION	0.9989793308603138	WITHOUT_CLASSIFICATION	0.001020669139686203	IMPLEMENTATION
// If we hold a Java object, we need a java_class accessor	WITHOUT_CLASSIFICATION	0.9981533203701705	WITHOUT_CLASSIFICATION	0.001846679629829566	IMPLEMENTATION
// line 326	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9986385284494232	WITHOUT_CLASSIFICATION	0.001361471550576766	IMPLEMENTATION
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9841867107851175	WITHOUT_CLASSIFICATION	0.01581328921488248	IMPLEMENTATION
// too much array creation!	WITHOUT_CLASSIFICATION	0.9998179867720611	WITHOUT_CLASSIFICATION	1.8201322793883E-4	IMPLEMENTATION
// construct new array proxy (ArrayJavaProxy)	WITHOUT_CLASSIFICATION	0.9998350753739591	WITHOUT_CLASSIFICATION	1.6492462604095806E-4	IMPLEMENTATION
// Get map of all fields we want to define.  	WITHOUT_CLASSIFICATION	0.9990431276570012	WITHOUT_CLASSIFICATION	9.56872342998889E-4	IMPLEMENTATION
// Look through all mappings to find a match entry for this field	WITHOUT_CLASSIFICATION	0.9981069154104313	WITHOUT_CLASSIFICATION	0.001893084589568721	IMPLEMENTATION
// Hit a non-java proxy class (included Modules can be a cause of this...skip)	WITHOUT_CLASSIFICATION	0.9998695134186913	WITHOUT_CLASSIFICATION	1.3048658130868952E-4	IMPLEMENTATION
// We could not find all of them print out first one (we could print them all?)	WITHOUT_CLASSIFICATION	0.9970528113241033	WITHOUT_CLASSIFICATION	0.0029471886758965808	IMPLEMENTATION
// dummy bodies for default impls	WITHOUT_CLASSIFICATION	0.999927224811902	WITHOUT_CLASSIFICATION	7.277518809795261E-5	IMPLEMENTATION
// initialize this if it hasn't been	WITHOUT_CLASSIFICATION	0.9993836882767393	WITHOUT_CLASSIFICATION	6.163117232606852E-4	IMPLEMENTATION
// initialize these if they haven't been	WITHOUT_CLASSIFICATION	0.9998611178688602	WITHOUT_CLASSIFICATION	1.3888213113987191E-4	IMPLEMENTATION
// not allowed for original (non-generated) Java classes // note: not allowing for any previously created class right now; // this restriction might be loosened later for generated classes	WITHOUT_CLASSIFICATION	0.9970592803855488	WITHOUT_CLASSIFICATION	0.002940719614451285	IMPLEMENTATION
// setup new, etc unless this is a ConcreteJavaProxy subclass	WITHOUT_CLASSIFICATION	0.9997299315569338	WITHOUT_CLASSIFICATION	2.7006844306617337E-4	IMPLEMENTATION
// First we make modifications to the class, to adapt it to being // both a Ruby class and a proxy for a Java type	WITHOUT_CLASSIFICATION	0.9996897639663416	WITHOUT_CLASSIFICATION	3.10236033658461E-4	IMPLEMENTATION
// list of interfaces we implement	WITHOUT_CLASSIFICATION	0.9894742431142965	WITHOUT_CLASSIFICATION	0.010525756885703426	IMPLEMENTATION
// We capture the original "new" and make it private	WITHOUT_CLASSIFICATION	0.9958683798578097	WITHOUT_CLASSIFICATION	0.004131620142190266	IMPLEMENTATION
// The replacement "new" allocates and inits the Ruby object as before, but // also instantiates our proxified Java object by calling __jcreate!	WITHOUT_CLASSIFICATION	0.9999711350443021	WITHOUT_CLASSIFICATION	2.8864955697889614E-5	IMPLEMENTATION
// Next, we define a few private methods that we'll use to manipulate // the Java object contained within this Ruby object	WITHOUT_CLASSIFICATION	0.9879109392609557	WITHOUT_CLASSIFICATION	0.012089060739044213	IMPLEMENTATION
// jcreate instantiates the proxy object which implements all interfaces // and which is wrapped and implemented by this object	WITHOUT_CLASSIFICATION	0.9550174684080099	WITHOUT_CLASSIFICATION	0.04498253159199011	IMPLEMENTATION
// Now we add an "implement" and "implement_all" methods to the class	WITHOUT_CLASSIFICATION	0.9997705021585769	WITHOUT_CLASSIFICATION	2.2949784142325773E-4	IMPLEMENTATION
// implement all forces implementation of all interfaces we intend // for this class to implement	WITHOUT_CLASSIFICATION	0.9114674567726582	WITHOUT_CLASSIFICATION	0.08853254322734176	IMPLEMENTATION
// we've already done the above priming logic, just add another interface // to the list of intentions unless we're past the point of no return or // already intend to implement the given interface	WITHOUT_CLASSIFICATION	0.9977990143367517	WITHOUT_CLASSIFICATION	0.0022009856632484105	IMPLEMENTATION
// walk all superclasses aggregating interfaces	WITHOUT_CLASSIFICATION	0.9991309482815235	WITHOUT_CLASSIFICATION	8.690517184763725E-4	IMPLEMENTATION
// construct the new interface impl and set it into the object	WITHOUT_CLASSIFICATION	0.9994770720066407	WITHOUT_CLASSIFICATION	5.2292799335925E-4	IMPLEMENTATION
// assuming the user wants a collection of interfaces that can be // included together. make it so.	WITHOUT_CLASSIFICATION	0.9962090383975003	WITHOUT_CLASSIFICATION	0.0037909616024996485	IMPLEMENTATION
// not allowed for existing Java interface modules	WITHOUT_CLASSIFICATION	0.9975204058983013	WITHOUT_CLASSIFICATION	0.0024795941016986537	IMPLEMENTATION
// To turn a module into an "interface collection" we add a class instance // variable to hold the list of interfaces, and modify append_features // for this module to call append_features on each of those interfaces as // well	WITHOUT_CLASSIFICATION	0.9999977905490495	WITHOUT_CLASSIFICATION	2.209450950548141E-6	IMPLEMENTATION
// already set up append_features, just add the interface if we haven't already	WITHOUT_CLASSIFICATION	0.9999897089252224	WITHOUT_CLASSIFICATION	1.0291074777636628E-5	IMPLEMENTATION
// array-of-interface-type creation/identity	WITHOUT_CLASSIFICATION	0.9993837240754918	WITHOUT_CLASSIFICATION	6.162759245082557E-4	IMPLEMENTATION
// keep this variant for kind_of? testing	WITHOUT_CLASSIFICATION	0.9996557430702492	WITHOUT_CLASSIFICATION	3.442569297507313E-4	IMPLEMENTATION
// array creation should use this variant	WITHOUT_CLASSIFICATION	0.9971158002875643	WITHOUT_CLASSIFICATION	0.0028841997124356426	IMPLEMENTATION
// parent.setConstant(name, proxyClass); // where the name should come from ?	WITHOUT_CLASSIFICATION	0.9991937919158688	WITHOUT_CLASSIFICATION	8.062080841311848E-4	IMPLEMENTATION
// including interface module so old-style interface "subclasses" will // respond correctly to #kind_of?, etc.	WITHOUT_CLASSIFICATION	0.9996995711869048	WITHOUT_CLASSIFICATION	3.0042881309529974E-4	IMPLEMENTATION
// add reference to interface module	WITHOUT_CLASSIFICATION	0.9996252428899018	WITHOUT_CLASSIFICATION	3.7475711009821096E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9970999702794219	WITHOUT_CLASSIFICATION	0.0029000297205781446	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9970999702794219	WITHOUT_CLASSIFICATION	0.0029000297205781446	IMPLEMENTATION
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9996648535555682	WITHOUT_CLASSIFICATION	3.351464444317652E-4	IMPLEMENTATION
// same as argument_types, but matches name in java.lang.reflect.Constructor/Method	WITHOUT_CLASSIFICATION	0.9999905133000145	WITHOUT_CLASSIFICATION	9.486699985481918E-6	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.99999563461965	WITHOUT_CLASSIFICATION	4.3653803500667985E-6	IMPLEMENTATION
// weakly reserved names	WITHOUT_CLASSIFICATION	0.9997999977330083	WITHOUT_CLASSIFICATION	2.0000226699159966E-4	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9992836704345559	WITHOUT_CLASSIFICATION	7.163295654441168E-4	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9992836704345559	WITHOUT_CLASSIFICATION	7.163295654441168E-4	IMPLEMENTATION
// modified only by addMethod; no synchronization required	WITHOUT_CLASSIFICATION	0.9951233329680729	WITHOUT_CLASSIFICATION	0.004876667031927155	IMPLEMENTATION
// if there's no constructor, we must prevent construction	WITHOUT_CLASSIFICATION	0.9986186814166043	WITHOUT_CLASSIFICATION	0.0013813185833957758	IMPLEMENTATION
// caching constructors, as they're accessed for each new instance	WITHOUT_CLASSIFICATION	0.9999139292914446	WITHOUT_CLASSIFICATION	8.607070855541887E-5	IMPLEMENTATION
// proxy module for interfaces	WITHOUT_CLASSIFICATION	0.9998827713107998	WITHOUT_CLASSIFICATION	1.1722868920007872E-4	IMPLEMENTATION
// proxy class for concrete classes.  also used for // "concrete" interfaces, which is why we have two fields	WITHOUT_CLASSIFICATION	0.999545553473822	WITHOUT_CLASSIFICATION	4.5444652617797994E-4	IMPLEMENTATION
// readable only by thread building proxy, so don't need to be // volatile. used to handle recursive calls to getProxyClass/Module // while proxy is being constructed (usually when a constant // defined by a class is of the same type as that class).	WITHOUT_CLASSIFICATION	0.9995663031527008	WITHOUT_CLASSIFICATION	4.3369684729924635E-4	IMPLEMENTATION
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.99998841479225	WITHOUT_CLASSIFICATION	1.1585207749929903E-5	IMPLEMENTATION
// Now add all aliases for the static methods (fields) as appropriate	WITHOUT_CLASSIFICATION	0.9995040317239685	WITHOUT_CLASSIFICATION	4.959682760314022E-4	IMPLEMENTATION
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.999601966678323	WITHOUT_CLASSIFICATION	3.9803332167696187E-4	IMPLEMENTATION
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9996707823074714	WITHOUT_CLASSIFICATION	3.2921769252855775E-4	IMPLEMENTATION
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9998586551211389	WITHOUT_CLASSIFICATION	1.4134487886113402E-4	IMPLEMENTATION
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9998757608531821	WITHOUT_CLASSIFICATION	1.24239146817944E-4	IMPLEMENTATION
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9997964867115495	WITHOUT_CLASSIFICATION	2.03513288450509E-4	IMPLEMENTATION
// Additionally add ?-postfixed aliases to any boolean methods and properties.	WITHOUT_CLASSIFICATION	0.9996132004619437	WITHOUT_CLASSIFICATION	3.867995380562825E-4	IMPLEMENTATION
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9993837240754918	WITHOUT_CLASSIFICATION	6.162759245082557E-4	IMPLEMENTATION
// something?	WITHOUT_CLASSIFICATION	0.997555635564117	WITHOUT_CLASSIFICATION	0.002444364435883046	IMPLEMENTATION
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999800896133154	WITHOUT_CLASSIFICATION	1.991038668469317E-5	IMPLEMENTATION
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999800896133154	WITHOUT_CLASSIFICATION	1.991038668469317E-5	IMPLEMENTATION
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9998704617590536	WITHOUT_CLASSIFICATION	1.2953824094642176E-4	IMPLEMENTATION
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9998704617590536	WITHOUT_CLASSIFICATION	1.2953824094642176E-4	IMPLEMENTATION
// create constructorInstaller; if there are no constructors, it will disable construction	WITHOUT_CLASSIFICATION	0.9999902275700246	WITHOUT_CLASSIFICATION	9.772429975268175E-6	IMPLEMENTATION
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9995462821191897	WITHOUT_CLASSIFICATION	4.5371788081022263E-4	IMPLEMENTATION
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9998012335200543	WITHOUT_CLASSIFICATION	1.9876647994566656E-4	IMPLEMENTATION
// now iterate over all installers and make sure they also have appropriate aliases	WITHOUT_CLASSIFICATION	0.9997883454831746	WITHOUT_CLASSIFICATION	2.116545168254669E-4	IMPLEMENTATION
// old (quasi-deprecated) interface class	WITHOUT_CLASSIFICATION	0.9998620822813794	WITHOUT_CLASSIFICATION	1.3791771862056297E-4	IMPLEMENTATION
// 1.9 support for encodings	WITHOUT_CLASSIFICATION	0.9971222650857346	WITHOUT_CLASSIFICATION	0.002877734914265283	IMPLEMENTATION
// double-check the cache now that we're synchronized	WITHOUT_CLASSIFICATION	0.9996483058021733	WITHOUT_CLASSIFICATION	3.5169419782670857E-4	IMPLEMENTATION
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9998757608531821	WITHOUT_CLASSIFICATION	1.24239146817944E-4	IMPLEMENTATION
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9997964867115495	WITHOUT_CLASSIFICATION	2.03513288450509E-4	IMPLEMENTATION
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9993837240754918	WITHOUT_CLASSIFICATION	6.162759245082557E-4	IMPLEMENTATION
// one word type name that starts lower-case...it may be a primitive type	WITHOUT_CLASSIFICATION	0.9997109320075404	WITHOUT_CLASSIFICATION	2.8906799245970204E-4	IMPLEMENTATION
// Java.getProxyClass deals with sync issues, so we won't duplicate the logic here	WITHOUT_CLASSIFICATION	0.9998071340169576	WITHOUT_CLASSIFICATION	1.9286598304245098E-4	IMPLEMENTATION
// note: intentionally returning the actual array returned from Java, rather // than wrapping it in a RubyArray. wave of the future, when java_class will // return the actual class, rather than a JavaClass wrapper.	WITHOUT_CLASSIFICATION	0.9999951282834776	WITHOUT_CLASSIFICATION	4.871716522380107E-6	IMPLEMENTATION
// see note above re: return type	WITHOUT_CLASSIFICATION	0.9998755980118416	WITHOUT_CLASSIFICATION	1.2440198815846985E-4	IMPLEMENTATION
// restrictive security policy; no matter, we only want public // classes anyway	WITHOUT_CLASSIFICATION	0.999884569969284	WITHOUT_CLASSIFICATION	1.1543003071612842E-4	IMPLEMENTATION
// very restrictive policy (disallows Member.PUBLIC) // we'd never actually get this far in that case	WITHOUT_CLASSIFICATION	0.9985769164441104	WITHOUT_CLASSIFICATION	0.0014230835558895413	IMPLEMENTATION
// one-dimensional array	WITHOUT_CLASSIFICATION	0.9997156812720678	WITHOUT_CLASSIFICATION	2.8431872793217654E-4	IMPLEMENTATION
// n-dimensional array	WITHOUT_CLASSIFICATION	0.9997156812720678	WITHOUT_CLASSIFICATION	2.8431872793217654E-4	IMPLEMENTATION
// if it's an array of arrays, recurse with the component type	WITHOUT_CLASSIFICATION	0.9999883687105564	WITHOUT_CLASSIFICATION	1.1631289443586369E-5	IMPLEMENTATION
// we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods // see JRUBY-3130	WITHOUT_CLASSIFICATION	0.9998987397985957	WITHOUT_CLASSIFICATION	1.012602014044148E-4	IMPLEMENTATION
// Proc implementing an interface, pull in the catch-all code that lets the proc get invoked // no matter what method is called on the interface	WITHOUT_CLASSIFICATION	0.9993980495988373	WITHOUT_CLASSIFICATION	6.019504011627421E-4	IMPLEMENTATION
// can't be converted any more, return it	WITHOUT_CLASSIFICATION	0.9992337446245125	WITHOUT_CLASSIFICATION	7.662553754874897E-4	IMPLEMENTATION
// getFooBar() => fooBar?, foo_bar?(*)	WITHOUT_CLASSIFICATION	0.9997964867115495	WITHOUT_CLASSIFICATION	2.03513288450509E-4	IMPLEMENTATION
// If not a property, but is boolean add ?-postfixed aliases.	WITHOUT_CLASSIFICATION	0.999601117191532	WITHOUT_CLASSIFICATION	3.988828084679987E-4	IMPLEMENTATION
// many cases are ok to convert to float; if not one of these, error	WITHOUT_CLASSIFICATION	0.9972218553909371	WITHOUT_CLASSIFICATION	0.0027781446090628954	IMPLEMENTATION
// for Object, default to natural wrapper type	WITHOUT_CLASSIFICATION	0.9999501047856141	WITHOUT_CLASSIFICATION	4.989521438590426E-5	IMPLEMENTATION
// rubyObject is already of the required jruby class (or subclass)	WITHOUT_CLASSIFICATION	0.9998217574400557	WITHOUT_CLASSIFICATION	1.7824255994427175E-4	IMPLEMENTATION
// the converters handle not only primitive types but also their boxed versions, so we should check // if we have a converter before checking for isPrimitive()	WITHOUT_CLASSIFICATION	0.9992421546471385	WITHOUT_CLASSIFICATION	7.578453528615511E-4	IMPLEMENTATION
// it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9966194726913212	WITHOUT_CLASSIFICATION	0.0033805273086787452	IMPLEMENTATION
// we've found a Java type to which we've coerced the Ruby value, wrap it	WITHOUT_CLASSIFICATION	0.9991432166306818	WITHOUT_CLASSIFICATION	8.567833693180626E-4	IMPLEMENTATION
// set of utility methods for Java-based proxy objects	WITHOUT_CLASSIFICATION	0.999838920837444	WITHOUT_CLASSIFICATION	1.6107916255591885E-4	IMPLEMENTATION
// the proxy (wrapper) type hierarchy	WITHOUT_CLASSIFICATION	0.9999457703319549	WITHOUT_CLASSIFICATION	5.422966804521173E-5	IMPLEMENTATION
//InterfaceJavaProxy.createInterfaceJavaProxy(context);	WITHOUT_CLASSIFICATION	0.9989612992561224	WITHOUT_CLASSIFICATION	0.0010387007438775661	IMPLEMENTATION
// also create the JavaProxy* classes	WITHOUT_CLASSIFICATION	0.999930462338403	WITHOUT_CLASSIFICATION	6.953766159701832E-5	IMPLEMENTATION
// The template for interface modules	WITHOUT_CLASSIFICATION	0.9999129733294355	WITHOUT_CLASSIFICATION	8.7026670564466E-5	IMPLEMENTATION
// Now attach Java-related extras to core classes	WITHOUT_CLASSIFICATION	0.9994577833120132	WITHOUT_CLASSIFICATION	5.422166879868287E-4	IMPLEMENTATION
// add all name-to-class mappings	WITHOUT_CLASSIFICATION	0.9991444139211623	WITHOUT_CLASSIFICATION	8.555860788377762E-4	IMPLEMENTATION
// add some base Java classes everyone will need	WITHOUT_CLASSIFICATION	0.9995309452920499	WITHOUT_CLASSIFICATION	4.69054707950133E-4	IMPLEMENTATION
// finally, set JavaSupport.isEnabled to true	WITHOUT_CLASSIFICATION	0.9989700465607265	WITHOUT_CLASSIFICATION	0.0010299534392734567	IMPLEMENTATION
// shouldn't happen, but if a superclass is specified, it's not ours	WITHOUT_CLASSIFICATION	0.9991704148581515	WITHOUT_CLASSIFICATION	8.295851418485313E-4	IMPLEMENTATION
// include any interfaces we extend	WITHOUT_CLASSIFICATION	0.9974935580428557	WITHOUT_CLASSIFICATION	0.0025064419571444556	IMPLEMENTATION
// java.lang.Object is added at root of java proxy classes	WITHOUT_CLASSIFICATION	0.9999957795699167	WITHOUT_CLASSIFICATION	4.22043008325541E-6	IMPLEMENTATION
// other java proxy classes added under their superclass' java proxy	WITHOUT_CLASSIFICATION	0.9999155418722513	WITHOUT_CLASSIFICATION	8.445812774876194E-5	IMPLEMENTATION
// include interface modules into the proxy class	WITHOUT_CLASSIFICATION	0.9999561736925502	WITHOUT_CLASSIFICATION	4.3826307449936485E-5	IMPLEMENTATION
// JRUBY-2938 the proxy class might already exist	WITHOUT_CLASSIFICATION	0.9998918578069158	WITHOUT_CLASSIFICATION	1.0814219308416038E-4	IMPLEMENTATION
// add java_method for unbound use	WITHOUT_CLASSIFICATION	0.9993606681658282	WITHOUT_CLASSIFICATION	6.39331834171752E-4	IMPLEMENTATION
// add alias to meta	WITHOUT_CLASSIFICATION	0.9976016807337152	WITHOUT_CLASSIFICATION	0.0023983192662847064	IMPLEMENTATION
// we'll only map conventional class names to modules 	WITHOUT_CLASSIFICATION	0.9997898467314519	WITHOUT_CLASSIFICATION	2.101532685481524E-4	IMPLEMENTATION
/* expected */	WITHOUT_CLASSIFICATION	0.9998633893768186	WITHOUT_CLASSIFICATION	1.3661062318139064E-4	IMPLEMENTATION
// Haven't found a class, continue on as though it were a package	WITHOUT_CLASSIFICATION	0.9989038232171499	WITHOUT_CLASSIFICATION	0.0010961767828501666	IMPLEMENTATION
// upper case name, so most likely a class	WITHOUT_CLASSIFICATION	0.999844008829987	WITHOUT_CLASSIFICATION	1.559911700129033E-4	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.99999563461965	WITHOUT_CLASSIFICATION	4.3653803500667985E-6	IMPLEMENTATION
// add alias to meta	WITHOUT_CLASSIFICATION	0.9976016807337152	WITHOUT_CLASSIFICATION	0.0023983192662847064	IMPLEMENTATION
// this is where we'll get connected when classes are opened using // package module syntax.	WITHOUT_CLASSIFICATION	0.9999659965584788	WITHOUT_CLASSIFICATION	3.400344152107587E-5	IMPLEMENTATION
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9987114812268438	WITHOUT_CLASSIFICATION	0.0012885187731562031	IMPLEMENTATION
// this covers primitives and (unlikely) lower-case class names	WITHOUT_CLASSIFICATION	0.9997923516763856	WITHOUT_CLASSIFICATION	2.0764832361446574E-4	IMPLEMENTATION
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9993941703626192	WITHOUT_CLASSIFICATION	6.058296373808049E-4	IMPLEMENTATION
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9993941703626192	WITHOUT_CLASSIFICATION	6.058296373808049E-4	IMPLEMENTATION
// Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.99960165614383	WITHOUT_CLASSIFICATION	3.983438561699428E-4	IMPLEMENTATION
// Create list of interfaces to proxy (and make sure they really are interfaces)	WITHOUT_CLASSIFICATION	0.9999643823528614	WITHOUT_CLASSIFICATION	3.5617647138528076E-5	IMPLEMENTATION
// hashcode is a combination of the interfaces and the Ruby class we're using // to implement them	WITHOUT_CLASSIFICATION	0.9997966044311352	WITHOUT_CLASSIFICATION	2.033955688647353E-4	IMPLEMENTATION
// if it's a singleton class and the real class is proc, we're doing closure conversion // so just use Proc's hashcode	WITHOUT_CLASSIFICATION	0.9999985942574685	WITHOUT_CLASSIFICATION	1.4057425315453517E-6	IMPLEMENTATION
// normal new class implementing interfaces	WITHOUT_CLASSIFICATION	0.9997506657494407	WITHOUT_CLASSIFICATION	2.493342505593335E-4	IMPLEMENTATION
/*         * Initialize some components.         */	WITHOUT_CLASSIFICATION	0.9999157200060876	WITHOUT_CLASSIFICATION	8.427999391243781E-5	IMPLEMENTATION
// not synchronizing these methods, no harm if these values get set more // than once. // (also note that there's no chance of getting a partially initialized // class/module, as happens-before is guaranteed by volatile write/read // of constants table.)	WITHOUT_CLASSIFICATION	0.9997443998127572	WITHOUT_CLASSIFICATION	2.5560018724281476E-4	IMPLEMENTATION
// Java reflection does not allow retrieving constructors like methods	WITHOUT_CLASSIFICATION	0.9456990204218658	WITHOUT_CLASSIFICATION	0.05430097957813413	IMPLEMENTATION
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9983523905580785	WITHOUT_CLASSIFICATION	0.001647609441921535	IMPLEMENTATION
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9983523905580785	WITHOUT_CLASSIFICATION	0.001647609441921535	IMPLEMENTATION
// no matching ctor found	WITHOUT_CLASSIFICATION	0.999580152265528	WITHOUT_CLASSIFICATION	4.198477344719481E-4	IMPLEMENTATION
// Create Ruby proxies for any input arguments that are not primitives.	WITHOUT_CLASSIFICATION	0.9978772832841719	WITHOUT_CLASSIFICATION	0.002122716715828023	IMPLEMENTATION
// prepare a faster handle if handles are enabled and the method and class are public	WITHOUT_CLASSIFICATION	0.9999152534632433	WITHOUT_CLASSIFICATION	8.474653675669769E-5	IMPLEMENTATION
// must be a public method	WITHOUT_CLASSIFICATION	0.9992113995854999	WITHOUT_CLASSIFICATION	7.886004145000889E-4	IMPLEMENTATION
// must be a public class	WITHOUT_CLASSIFICATION	0.9999560573281622	WITHOUT_CLASSIFICATION	4.3942671837931784E-5	IMPLEMENTATION
// must have been loaded from our known classloader hierarchy	WITHOUT_CLASSIFICATION	0.9998944888199801	WITHOUT_CLASSIFICATION	1.0551118001989617E-4	IMPLEMENTATION
// Special classes like Collections.EMPTY_LIST are inner classes that are private but  // implement public interfaces.  Their methods are all public methods for the public  // interface.  Let these public methods execute via setAccessible(true). 	WITHOUT_CLASSIFICATION	0.9981362657352109	WITHOUT_CLASSIFICATION	0.0018637342647891246	IMPLEMENTATION
// search through all declared methods to find a closest match	WITHOUT_CLASSIFICATION	0.997520110465995	WITHOUT_CLASSIFICATION	0.002479889534004902	IMPLEMENTATION
// no matching method found	WITHOUT_CLASSIFICATION	0.9956449070618865	WITHOUT_CLASSIFICATION	0.004355092938113578	IMPLEMENTATION
// this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.9999611083820814	WITHOUT_CLASSIFICATION	3.8891617918606044E-5	IMPLEMENTATION
/*         * First we need to register the JRuby engine.         */	WITHOUT_CLASSIFICATION	0.9992620867490215	WITHOUT_CLASSIFICATION	7.379132509784433E-4	IMPLEMENTATION
/*         * Now we create a new BSFManager.         */	WITHOUT_CLASSIFICATION	0.9999686419922323	WITHOUT_CLASSIFICATION	3.135800776760446E-5	IMPLEMENTATION
/*         * Initialize a simple Frame.          */	WITHOUT_CLASSIFICATION	0.9999464528460805	WITHOUT_CLASSIFICATION	5.354715391953489E-5	IMPLEMENTATION
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.999365695968854	WITHOUT_CLASSIFICATION	6.343040311459975E-4	IMPLEMENTATION
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.999365695968854	WITHOUT_CLASSIFICATION	6.343040311459975E-4	IMPLEMENTATION
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9996867666646012	WITHOUT_CLASSIFICATION	3.1323333539880487E-4	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.9987234526584753	WITHOUT_CLASSIFICATION	0.0012765473415246357	IMPLEMENTATION
// // this test really means, that this is a ruby-defined subclass of a java class //	WITHOUT_CLASSIFICATION	0.9999611083820814	WITHOUT_CLASSIFICATION	3.8891617918606044E-5	IMPLEMENTATION
// for our purposes, Accessibles are also Members, and vice-versa, // so we'll include Member methods here.	WITHOUT_CLASSIFICATION	0.9999800334619731	WITHOUT_CLASSIFICATION	1.9966538027046833E-5	IMPLEMENTATION
/*             * Declare those components as beans in BSF. Then it will be             * possible to access those components in Ruby as global             * variables ($frame, $menubar, ...)             */	WITHOUT_CLASSIFICATION	0.9999992940665123	WITHOUT_CLASSIFICATION	7.059334877338476E-7	IMPLEMENTATION
/*              * Execute a Ruby script (add the menubar to the frame).             */	WITHOUT_CLASSIFICATION	0.9999458930218691	WITHOUT_CLASSIFICATION	5.410697813090822E-5	IMPLEMENTATION
/*                     * Execute Ruby statements.                     */	WITHOUT_CLASSIFICATION	0.9999273319365629	WITHOUT_CLASSIFICATION	7.266806343708554E-5	IMPLEMENTATION
/*                     * Evaluates a Ruby expression and display the result.                     */	WITHOUT_CLASSIFICATION	0.9999485565955353	WITHOUT_CLASSIFICATION	5.144340446470561E-5	IMPLEMENTATION
// Populate values for the parameter names	WITHOUT_CLASSIFICATION	0.9999933218354004	WITHOUT_CLASSIFICATION	6.678164599720735E-6	IMPLEMENTATION
/* package scope */	WITHOUT_CLASSIFICATION	0.9997691552850586	WITHOUT_CLASSIFICATION	2.3084471494141712E-4	IMPLEMENTATION
// This point is only reached if there was an exception handler // installed.	WITHOUT_CLASSIFICATION	0.99999563461965	WITHOUT_CLASSIFICATION	4.3653803500667985E-6	IMPLEMENTATION
// // Ruby-level methods //	WITHOUT_CLASSIFICATION	0.9996436203174476	WITHOUT_CLASSIFICATION	3.5637968255248224E-4	IMPLEMENTATION
// need names ordered for key generation later	WITHOUT_CLASSIFICATION	0.9990083907259323	WITHOUT_CLASSIFICATION	9.916092740677616E-4	IMPLEMENTATION
// we only collect methods and interfaces for  // user-defined proxy classes.	WITHOUT_CLASSIFICATION	0.9998335941212794	WITHOUT_CLASSIFICATION	1.664058787207228E-4	IMPLEMENTATION
// get JavaClass if this is the new proxy class; verify it // matches if this is a superclass proxy.	WITHOUT_CLASSIFICATION	0.9999893345606398	WITHOUT_CLASSIFICATION	1.066543936028886E-5	IMPLEMENTATION
// get any included interfaces	WITHOUT_CLASSIFICATION	0.9997919114390528	WITHOUT_CLASSIFICATION	2.080885609472879E-4	IMPLEMENTATION
// lock in the overridden methods for the new class, and any as-yet // uninstantiated ancestor class.	WITHOUT_CLASSIFICATION	0.9999745603757626	WITHOUT_CLASSIFICATION	2.5439624237350848E-5	IMPLEMENTATION
// statically initialized below	WITHOUT_CLASSIFICATION	0.9996773345339559	WITHOUT_CLASSIFICATION	3.22665466044073E-4	IMPLEMENTATION
// finish class initializer	WITHOUT_CLASSIFICATION	0.9997883787889784	WITHOUT_CLASSIFICATION	2.1162121102170136E-4	IMPLEMENTATION
// trigger class initialization for the class	WITHOUT_CLASSIFICATION	0.9997923656634292	WITHOUT_CLASSIFICATION	2.076343365707679E-4	IMPLEMENTATION
// should not happen!	WITHOUT_CLASSIFICATION	0.9882960073628791	WITHOUT_CLASSIFICATION	0.011703992637120802	IMPLEMENTATION
// start class	WITHOUT_CLASSIFICATION	0.9993395286517005	WITHOUT_CLASSIFICATION	6.604713482995406E-4	IMPLEMENTATION
// make getter for handler	WITHOUT_CLASSIFICATION	0.9995036545121472	WITHOUT_CLASSIFICATION	4.9634548785274E-4	IMPLEMENTATION
// make getter for proxy class	WITHOUT_CLASSIFICATION	0.9998390850803569	WITHOUT_CLASSIFICATION	1.60914919643136E-4	IMPLEMENTATION
// add (potentially) overridden names to the key. // TODO: see note above re: optimizations	WITHOUT_CLASSIFICATION	0.5086628896617641	IMPLEMENTATION	0.49133711033823596	WITHOUT_CLASSIFICATION
// We generate all constructors and let some fail during invocation later	WITHOUT_CLASSIFICATION	0.9968545738114959	WITHOUT_CLASSIFICATION	0.003145426188504151	IMPLEMENTATION
// create static private method field	WITHOUT_CLASSIFICATION	0.9973084544733293	WITHOUT_CLASSIFICATION	0.002691545526670741	IMPLEMENTATION
// load static empty array	WITHOUT_CLASSIFICATION	0.9998875976123285	WITHOUT_CLASSIFICATION	1.1240238767148104E-4	IMPLEMENTATION
// box arguments	WITHOUT_CLASSIFICATION	0.9991971304330484	WITHOUT_CLASSIFICATION	8.028695669515611E-4	IMPLEMENTATION
// this is a simple rethrow handler	WITHOUT_CLASSIFICATION	0.999489228525317	WITHOUT_CLASSIFICATION	5.107714746829784E-4	IMPLEMENTATION
// // construct the super-proxy method //	WITHOUT_CLASSIFICATION	0.9954790815947548	WITHOUT_CLASSIFICATION	0.004520918405245192	IMPLEMENTATION
// do a void return	WITHOUT_CLASSIFICATION	0.9987532234026081	WITHOUT_CLASSIFICATION	0.0012467765973919699	IMPLEMENTATION
// // utility methods //	WITHOUT_CLASSIFICATION	0.9997964209874418	WITHOUT_CLASSIFICATION	2.035790125582844E-4	IMPLEMENTATION
// Is there a supplied proc argument or do we assume a block was // supplied	WITHOUT_CLASSIFICATION	0.99960165614383	WITHOUT_CLASSIFICATION	3.983438561699428E-4	IMPLEMENTATION
// store call information so method_missing impl can use it	WITHOUT_CLASSIFICATION	0.9989400851222967	WITHOUT_CLASSIFICATION	0.0010599148777032733	IMPLEMENTATION
// use the same logic as in EvaluationState	WITHOUT_CLASSIFICATION	0.999930560236667	WITHOUT_CLASSIFICATION	6.943976333295801E-5	IMPLEMENTATION
// no opt, no rest, exact match	WITHOUT_CLASSIFICATION	0.9996678573625578	WITHOUT_CLASSIFICATION	3.321426374421361E-4	IMPLEMENTATION
// only rest, must be at least required	WITHOUT_CLASSIFICATION	0.9995755037375929	WITHOUT_CLASSIFICATION	4.244962624071826E-4	IMPLEMENTATION
// opt but no rest, must be at least required and no more than required + opt	WITHOUT_CLASSIFICATION	0.9996722555661657	WITHOUT_CLASSIFICATION	3.2774443383438686E-4	IMPLEMENTATION
// opt and rest, must be at least required	WITHOUT_CLASSIFICATION	0.9997044011969382	WITHOUT_CLASSIFICATION	2.955988030617755E-4	IMPLEMENTATION
// No block from a nil proc	WITHOUT_CLASSIFICATION	0.9999413584782191	WITHOUT_CLASSIFICATION	5.864152178084924E-5	IMPLEMENTATION
// If not already a proc then we should try and make it one.	WITHOUT_CLASSIFICATION	0.9600472930032864	WITHOUT_CLASSIFICATION	0.039952706996713695	IMPLEMENTATION
// The current block is already associated with proc.  No need to create a new one	WITHOUT_CLASSIFICATION	0.9992639017196357	WITHOUT_CLASSIFICATION	7.360982803642175E-4	IMPLEMENTATION
// Has the method that is calling super received a block argument	WITHOUT_CLASSIFICATION	0.9958305853474764	WITHOUT_CLASSIFICATION	0.004169414652523597	IMPLEMENTATION
/* NUL */	WITHOUT_CLASSIFICATION	0.9999970415563082	WITHOUT_CLASSIFICATION	2.9584436917105443E-6	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.999684280517797	WITHOUT_CLASSIFICATION	3.15719482203039E-4	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9988825244680013	WITHOUT_CLASSIFICATION	0.0011174755319985962	IMPLEMENTATION
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9995200041266726	WITHOUT_CLASSIFICATION	4.7999587332732944E-4	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9848070130496909	WITHOUT_CLASSIFICATION	0.015192986950309071	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9986385284494232	WITHOUT_CLASSIFICATION	0.001361471550576766	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9986385284494232	WITHOUT_CLASSIFICATION	0.001361471550576766	IMPLEMENTATION
// classes are directly in the hierarchy, so no special logic is necessary for implementer	WITHOUT_CLASSIFICATION	0.9999965626986148	WITHOUT_CLASSIFICATION	3.4373013850607305E-6	IMPLEMENTATION
// must be power of 2 // must be power of 2	WITHOUT_CLASSIFICATION	0.9998399949891437	WITHOUT_CLASSIFICATION	1.6000501085637806E-4	IMPLEMENTATION
// Find power-of-two sizes best matching arguments	WITHOUT_CLASSIFICATION	0.9987998813852238	WITHOUT_CLASSIFICATION	0.0012001186147761855	IMPLEMENTATION
// note segmentShift differs from ConcurrentHashMap's calculation due to // issues with System.identityHashCode (upper n bits always 0, at least  // under Java 1.6 / WinXP)	WITHOUT_CLASSIFICATION	0.9999276125579953	WITHOUT_CLASSIFICATION	7.23874420046419E-5	IMPLEMENTATION
//      System.err.println("***ObjectProxyCache " + id + " started at "+ new java.util.Date());	WITHOUT_CLASSIFICATION	0.9999247694722411	WITHOUT_CLASSIFICATION	7.52305277589487E-5	IMPLEMENTATION
//    protected void finalize() throws Throwable { //        System.err.println("***ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); //    }	WITHOUT_CLASSIFICATION	0.9999126550402395	WITHOUT_CLASSIFICATION	8.734495976038482E-5	IMPLEMENTATION
// EntryRefs include hash with key to facilitate lookup by Segment#expunge // after ref is removed from ReferenceQueue	WITHOUT_CLASSIFICATION	0.9990076050459358	WITHOUT_CLASSIFICATION	9.923949540641837E-4	IMPLEMENTATION
// Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather // makes it a final field.  The theory is that doing so should force a happens-before // relationship WRT the WeakReference constructor, guaranteeing that the key will be // visibile to other threads (unless it's been GC'ed).  See JLS 17.5 (final fields) and // 17.4.5 (Happens-before order) to confirm or refute my reasoning here.	WITHOUT_CLASSIFICATION	0.9955040735722828	WITHOUT_CLASSIFICATION	0.004495926427717227	IMPLEMENTATION
// references to the Java object and its proxy will either both be // weak or both be soft, since the proxy contains a strong reference // to the object, so it wouldn't make sense for the reference types // to differ.	WITHOUT_CLASSIFICATION	0.9998721029220536	WITHOUT_CLASSIFICATION	1.278970779463371E-4	IMPLEMENTATION
// ctor used by remove/rehash	WITHOUT_CLASSIFICATION	0.9993268145357861	WITHOUT_CLASSIFICATION	6.73185464213773E-4	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.9998430514623216	WITHOUT_CLASSIFICATION	1.5694853767847213E-4	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.9998430514623216	WITHOUT_CLASSIFICATION	1.5694853767847213E-4	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.9998430514623216	WITHOUT_CLASSIFICATION	1.5694853767847213E-4	IMPLEMENTATION
// note that we'll potentially see the refs for both the java object and // proxy -- whichever we see first will cause the entry to be removed; // the other will not match an entry and will be ignored.	WITHOUT_CLASSIFICATION	0.9983456330230835	WITHOUT_CLASSIFICATION	0.0016543669769164056	IMPLEMENTATION
// temp method to verify tableSize value // must be called under lock	WITHOUT_CLASSIFICATION	0.9973732295676033	WITHOUT_CLASSIFICATION	0.00262677043239666	IMPLEMENTATION
// Single node in list	WITHOUT_CLASSIFICATION	0.9999338553159203	WITHOUT_CLASSIFICATION	6.614468407965437E-5	IMPLEMENTATION
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9993837240754918	WITHOUT_CLASSIFICATION	6.162759245082557E-4	IMPLEMENTATION
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9993837240754918	WITHOUT_CLASSIFICATION	6.162759245082557E-4	IMPLEMENTATION
// entry exists, proxy has been gc'ed. replace entry.	WITHOUT_CLASSIFICATION	0.9987089822770573	WITHOUT_CLASSIFICATION	0.0012910177229427122	IMPLEMENTATION
// Where we get new positions from.	WITHOUT_CLASSIFICATION	0.999065978471116	WITHOUT_CLASSIFICATION	9.340215288840436E-4	IMPLEMENTATION
// Start of string ([, (, {, <, ', ", \n) 	WITHOUT_CLASSIFICATION	0.9999649060348607	WITHOUT_CLASSIFICATION	3.5093965139362565E-5	IMPLEMENTATION
// Number of newlines read from the reader	WITHOUT_CLASSIFICATION	0.9999318300397647	WITHOUT_CLASSIFICATION	6.816996023530647E-5	IMPLEMENTATION
// How many bytes into the source are we?	WITHOUT_CLASSIFICATION	0.9998609596706383	WITHOUT_CLASSIFICATION	1.3904032936167953E-4	IMPLEMENTATION
// For 'list' and only populated if list is not null.	WITHOUT_CLASSIFICATION	0.9988582344644562	WITHOUT_CLASSIFICATION	0.0011417655355437002	IMPLEMENTATION
// Last full line read.	WITHOUT_CLASSIFICATION	0.999720239489532	WITHOUT_CLASSIFICATION	2.7976051046793235E-4	IMPLEMENTATION
// Save sourceLine for error reporting to display line where error occurred	WITHOUT_CLASSIFICATION	0.9940307515038064	WITHOUT_CLASSIFICATION	0.005969248496193575	IMPLEMENTATION
// Get rest of line. lineBuffer filled as side-effect...	WITHOUT_CLASSIFICATION	0.9997742721779982	WITHOUT_CLASSIFICATION	2.2572782200186442E-4	IMPLEMENTATION
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9991425454100265	WITHOUT_CLASSIFICATION	8.574545899735965E-4	IMPLEMENTATION
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9991425454100265	WITHOUT_CLASSIFICATION	8.574545899735965E-4	IMPLEMENTATION
// End of string (], ), }, >, ', ", \0)	WITHOUT_CLASSIFICATION	0.9999668381326048	WITHOUT_CLASSIFICATION	3.316186739528406E-5	IMPLEMENTATION
// How many strings are nested in the current string term	WITHOUT_CLASSIFICATION	0.9999491074562491	WITHOUT_CLASSIFICATION	5.0892543750907805E-5	IMPLEMENTATION
// Single-quote fast path	WITHOUT_CLASSIFICATION	0.9997909036636764	WITHOUT_CLASSIFICATION	2.0909633632370338E-4	IMPLEMENTATION
// Regexp engine 'java'	WITHOUT_CLASSIFICATION	0.9996237203449804	WITHOUT_CLASSIFICATION	3.7627965501967623E-4	IMPLEMENTATION
// Was a goto in original ruby lexer	WITHOUT_CLASSIFICATION	0.9998798298476118	WITHOUT_CLASSIFICATION	1.2017015238813325E-4	IMPLEMENTATION
/* just ignore */	WITHOUT_CLASSIFICATION	0.9999721406896619	WITHOUT_CLASSIFICATION	2.7859310338178467E-5	IMPLEMENTATION
/* octal constant */	WITHOUT_CLASSIFICATION	0.9997818668871716	WITHOUT_CLASSIFICATION	2.181331128282586E-4	IMPLEMENTATION
/* hex constant */	WITHOUT_CLASSIFICATION	0.9997818668871716	WITHOUT_CLASSIFICATION	2.181331128282586E-4	IMPLEMENTATION
// PUSH(1)	WITHOUT_CLASSIFICATION	0.999975778940229	WITHOUT_CLASSIFICATION	2.422105977089807E-5	IMPLEMENTATION
// POP	WITHOUT_CLASSIFICATION	0.999975778940229	WITHOUT_CLASSIFICATION	2.422105977089807E-5	IMPLEMENTATION
// PUSH(0).  If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.	WITHOUT_CLASSIFICATION	0.9998882692647714	WITHOUT_CLASSIFICATION	1.1173073522859101E-4	IMPLEMENTATION
// LEXPOP	WITHOUT_CLASSIFICATION	0.999975778940229	WITHOUT_CLASSIFICATION	2.422105977089807E-5	IMPLEMENTATION
// SET_P	WITHOUT_CLASSIFICATION	0.999975778940229	WITHOUT_CLASSIFICATION	2.422105977089807E-5	IMPLEMENTATION
// Marker delimiting heredoc boundary	WITHOUT_CLASSIFICATION	0.9993873772413241	WITHOUT_CLASSIFICATION	6.126227586759147E-4	IMPLEMENTATION
// Found end marker for this heredoc	WITHOUT_CLASSIFICATION	0.9991654581397493	WITHOUT_CLASSIFICATION	8.345418602505719E-4	IMPLEMENTATION
// Put back lastLine for any elements past start of heredoc marker	WITHOUT_CLASSIFICATION	0.9999039127534605	WITHOUT_CLASSIFICATION	9.608724653958889E-5	IMPLEMENTATION
// Last token read via yylex().	WITHOUT_CLASSIFICATION	0.9993612014980133	WITHOUT_CLASSIFICATION	6.387985019866701E-4	IMPLEMENTATION
// Value of last token which had a value associated with it.	WITHOUT_CLASSIFICATION	0.9997942649492303	WITHOUT_CLASSIFICATION	2.0573505076959886E-4	IMPLEMENTATION
// Stream of data that yylex() examines.	WITHOUT_CLASSIFICATION	0.9984464657098152	WITHOUT_CLASSIFICATION	0.0015535342901847919	IMPLEMENTATION
// Used for tiny smidgen of grammar in lexer (see setParserSupport())	WITHOUT_CLASSIFICATION	0.9999926130517394	WITHOUT_CLASSIFICATION	7.386948260642549E-6	IMPLEMENTATION
// Give a name to a value.  Enebo: This should be used more.	WITHOUT_CLASSIFICATION	0.9978163942790192	WITHOUT_CLASSIFICATION	0.002183605720980827	IMPLEMENTATION
// When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').	WITHOUT_CLASSIFICATION	0.9989571565357879	WITHOUT_CLASSIFICATION	0.0010428434642121378	IMPLEMENTATION
// Are we lexing Ruby 1.8 or 1.9+ syntax	WITHOUT_CLASSIFICATION	0.9985840686568945	WITHOUT_CLASSIFICATION	0.0014159313431054627	IMPLEMENTATION
// Count of nested parentheses (1.9 only)	WITHOUT_CLASSIFICATION	0.9990089055063104	WITHOUT_CLASSIFICATION	9.910944936895273E-4	IMPLEMENTATION
// 1.9 only	WITHOUT_CLASSIFICATION	0.9984811173950582	WITHOUT_CLASSIFICATION	0.0015188826049417547	IMPLEMENTATION
// Short-hand (e.g. %{,%.,%!,... versus %Q{).	WITHOUT_CLASSIFICATION	0.9993974993182617	WITHOUT_CLASSIFICATION	6.025006817383821E-4	IMPLEMENTATION
// Long-hand (e.g. %Q{}).	WITHOUT_CLASSIFICATION	0.9996321330710201	WITHOUT_CLASSIFICATION	3.678669289798707E-4	IMPLEMENTATION
/* no mb || ismbchar(term)*/	WITHOUT_CLASSIFICATION	0.9999185560185366	WITHOUT_CLASSIFICATION	8.1443981463344E-5	IMPLEMENTATION
/*     * Not normally used, but is left in here since it can be useful in debugging     * grammar and lexing problems.     *     */	WITHOUT_CLASSIFICATION	0.999999355777207	WITHOUT_CLASSIFICATION	6.442227930885115E-7	IMPLEMENTATION
// DEBUGGING HELP 	WITHOUT_CLASSIFICATION	0.9986385284494232	WITHOUT_CLASSIFICATION	0.001361471550576766	IMPLEMENTATION
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999970415563082	WITHOUT_CLASSIFICATION	2.9584436917105443E-6	IMPLEMENTATION
/* end of script. */	WITHOUT_CLASSIFICATION	0.9998203851360272	WITHOUT_CLASSIFICATION	1.7961486397272136E-4	IMPLEMENTATION
/* white spaces */	WITHOUT_CLASSIFICATION	0.9998658295052559	WITHOUT_CLASSIFICATION	1.3417049474410292E-4	IMPLEMENTATION
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999970415563082	WITHOUT_CLASSIFICATION	2.9584436917105443E-6	IMPLEMENTATION
/* it's a comment */	WITHOUT_CLASSIFICATION	0.9997133645091574	WITHOUT_CLASSIFICATION	2.8663549084261653E-4	IMPLEMENTATION
// Replace a string of newlines with a single one	WITHOUT_CLASSIFICATION	0.9998222912178321	WITHOUT_CLASSIFICATION	1.777087821678458E-4	IMPLEMENTATION
/* $\: output record separator */	WITHOUT_CLASSIFICATION	0.9999345096254384	WITHOUT_CLASSIFICATION	6.549037456160859E-5	IMPLEMENTATION
// EOF (ENEBO: After default?	WITHOUT_CLASSIFICATION	0.9993876308711037	WITHOUT_CLASSIFICATION	6.123691288963272E-4	IMPLEMENTATION
// documentation nodes	WITHOUT_CLASSIFICATION	0.9994985405045071	WITHOUT_CLASSIFICATION	5.014594954928906E-4	IMPLEMENTATION
// In case last next was the newline.	WITHOUT_CLASSIFICATION	0.9998567359164193	WITHOUT_CLASSIFICATION	1.43264083580597E-4	IMPLEMENTATION
// Just a plain bang	WITHOUT_CLASSIFICATION	0.9990373194116098	WITHOUT_CLASSIFICATION	9.626805883902056E-4	IMPLEMENTATION
/* $_: last read line string */	WITHOUT_CLASSIFICATION	0.9999974366428102	WITHOUT_CLASSIFICATION	2.5633571898561258E-6	IMPLEMENTATION
/* $~: match-data */	WITHOUT_CLASSIFICATION	0.9998335097239774	WITHOUT_CLASSIFICATION	1.6649027602250264E-4	IMPLEMENTATION
/* $*: argv */	WITHOUT_CLASSIFICATION	0.9998335097239774	WITHOUT_CLASSIFICATION	1.6649027602250264E-4	IMPLEMENTATION
/* $$: pid */	WITHOUT_CLASSIFICATION	0.9998335097239774	WITHOUT_CLASSIFICATION	1.6649027602250264E-4	IMPLEMENTATION
/* $?: last status */	WITHOUT_CLASSIFICATION	0.9999710506031411	WITHOUT_CLASSIFICATION	2.894939685895149E-5	IMPLEMENTATION
/* $!: error string */	WITHOUT_CLASSIFICATION	0.9999902031503003	WITHOUT_CLASSIFICATION	9.796849699712342E-6	IMPLEMENTATION
/* $@: error position */	WITHOUT_CLASSIFICATION	0.9999052209271813	WITHOUT_CLASSIFICATION	9.477907281872855E-5	IMPLEMENTATION
/* $/: input record separator */	WITHOUT_CLASSIFICATION	0.9999402817324929	WITHOUT_CLASSIFICATION	5.971826750706161E-5	IMPLEMENTATION
/* $;: field separator */	WITHOUT_CLASSIFICATION	0.9999612700698143	WITHOUT_CLASSIFICATION	3.8729930185673293E-5	IMPLEMENTATION
/* $,: output field separator */	WITHOUT_CLASSIFICATION	0.999933445090003	WITHOUT_CLASSIFICATION	6.655490999702325E-5	IMPLEMENTATION
/* $.: last read line number */	WITHOUT_CLASSIFICATION	0.9999742372845101	WITHOUT_CLASSIFICATION	2.5762715489968066E-5	IMPLEMENTATION
/* $=: ignorecase */	WITHOUT_CLASSIFICATION	0.9998335097239774	WITHOUT_CLASSIFICATION	1.6649027602250264E-4	IMPLEMENTATION
/* $:: load path */	WITHOUT_CLASSIFICATION	0.9999188558198034	WITHOUT_CLASSIFICATION	8.114418019655441E-5	IMPLEMENTATION
/* $<: reading filename */	WITHOUT_CLASSIFICATION	0.9999915917401424	WITHOUT_CLASSIFICATION	8.408259857591548E-6	IMPLEMENTATION
/* $": already loaded files */	WITHOUT_CLASSIFICATION	0.9999896018775685	WITHOUT_CLASSIFICATION	1.0398122431547632E-5	IMPLEMENTATION
/* $&: last match */	WITHOUT_CLASSIFICATION	0.9999400787241646	WITHOUT_CLASSIFICATION	5.99212758355336E-5	IMPLEMENTATION
/* $`: string before last match */	WITHOUT_CLASSIFICATION	0.9999988476313018	WITHOUT_CLASSIFICATION	1.1523686981812887E-6	IMPLEMENTATION
/* $': string after last match */	WITHOUT_CLASSIFICATION	0.9999980078961415	WITHOUT_CLASSIFICATION	1.9921038585356867E-6	IMPLEMENTATION
// methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop	WITHOUT_CLASSIFICATION	0.9999855241786368	WITHOUT_CLASSIFICATION	1.4475821363097084E-5	IMPLEMENTATION
/* See if it is a reserved word.  */	WITHOUT_CLASSIFICATION	0.9999932797163742	WITHOUT_CLASSIFICATION	6.7202836258264145E-6	IMPLEMENTATION
// enum lex_state	WITHOUT_CLASSIFICATION	0.9986385284494232	WITHOUT_CLASSIFICATION	0.001361471550576766	IMPLEMENTATION
// block (primary)	WITHOUT_CLASSIFICATION	0.9968279028285518	WITHOUT_CLASSIFICATION	0.0031720971714480806	IMPLEMENTATION
// block (expr)	WITHOUT_CLASSIFICATION	0.9968279028285518	WITHOUT_CLASSIFICATION	0.0031720971714480806	IMPLEMENTATION
// hash	WITHOUT_CLASSIFICATION	0.9999758894432312	WITHOUT_CLASSIFICATION	2.4110556768782253E-5	IMPLEMENTATION
// ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.	WITHOUT_CLASSIFICATION	0.9995032935179388	WITHOUT_CLASSIFICATION	4.967064820613573E-4	IMPLEMENTATION
// FIXME: peek('u') utf8 stuff for 1.9	WITHOUT_CLASSIFICATION	0.9993396292524979	WITHOUT_CLASSIFICATION	6.60370747502129E-4	IMPLEMENTATION
// We don't append '+' since Java number parser gets confused	WITHOUT_CLASSIFICATION	0.999727460253279	WITHOUT_CLASSIFICATION	2.725397467209544E-4	IMPLEMENTATION
//  hexadecimal	WITHOUT_CLASSIFICATION	0.9990540905645775	WITHOUT_CLASSIFICATION	9.459094354223715E-4	IMPLEMENTATION
// binary	WITHOUT_CLASSIFICATION	0.9999802166444117	WITHOUT_CLASSIFICATION	1.978335558824983E-5	IMPLEMENTATION
// decimal	WITHOUT_CLASSIFICATION	0.999975778940229	WITHOUT_CLASSIFICATION	2.422105977089807E-5	IMPLEMENTATION
//Octal	WITHOUT_CLASSIFICATION	0.9999591600903001	WITHOUT_CLASSIFICATION	4.083990969988955E-5	IMPLEMENTATION
//  '_' in number just ignored	WITHOUT_CLASSIFICATION	0.9999389212262882	WITHOUT_CLASSIFICATION	6.107877371175654E-5	IMPLEMENTATION
// backslash	WITHOUT_CLASSIFICATION	0.9986385284494232	WITHOUT_CLASSIFICATION	0.001361471550576766	IMPLEMENTATION
// newline	WITHOUT_CLASSIFICATION	0.999975778940229	WITHOUT_CLASSIFICATION	2.422105977089807E-5	IMPLEMENTATION
// horizontal tab	WITHOUT_CLASSIFICATION	0.9986662380441852	WITHOUT_CLASSIFICATION	0.0013337619558148142	IMPLEMENTATION
// form feed	WITHOUT_CLASSIFICATION	0.9975543705507012	WITHOUT_CLASSIFICATION	0.0024456294492988034	IMPLEMENTATION
// vertical tab	WITHOUT_CLASSIFICATION	0.9984700542744689	WITHOUT_CLASSIFICATION	0.0015299457255311328	IMPLEMENTATION
// alarm(bell)	WITHOUT_CLASSIFICATION	0.9986385284494232	WITHOUT_CLASSIFICATION	0.001361471550576766	IMPLEMENTATION
// escape	WITHOUT_CLASSIFICATION	0.999975778940229	WITHOUT_CLASSIFICATION	2.422105977089807E-5	IMPLEMENTATION
// hex constant	WITHOUT_CLASSIFICATION	0.9982168810342086	WITHOUT_CLASSIFICATION	0.001783118965791505	IMPLEMENTATION
//char hexValue = scanHex(2);	WITHOUT_CLASSIFICATION	0.998993034500318	WITHOUT_CLASSIFICATION	0.001006965499682089	IMPLEMENTATION
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999578058617214	WITHOUT_CLASSIFICATION	4.2194138278485704E-5	IMPLEMENTATION
// space	WITHOUT_CLASSIFICATION	0.9999860381247359	WITHOUT_CLASSIFICATION	1.3961875264173563E-5	IMPLEMENTATION
// Where we started this marker match	WITHOUT_CLASSIFICATION	0.9992723796522199	WITHOUT_CLASSIFICATION	7.276203477799666E-4	IMPLEMENTATION
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999802608518894	WITHOUT_CLASSIFICATION	1.9739148110680803E-5	IMPLEMENTATION
// We use offset here to keep track of extra newlines for windows	WITHOUT_CLASSIFICATION	0.9991757824408968	WITHOUT_CLASSIFICATION	8.242175591032363E-4	IMPLEMENTATION
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999578058617214	WITHOUT_CLASSIFICATION	4.2194138278485704E-5	IMPLEMENTATION
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9908516807558224	WITHOUT_CLASSIFICATION	0.009148319244177505	IMPLEMENTATION
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9908516807558224	WITHOUT_CLASSIFICATION	0.009148319244177505	IMPLEMENTATION
// Where we get our newest char's	WITHOUT_CLASSIFICATION	0.9998313314846036	WITHOUT_CLASSIFICATION	1.6866851539646963E-4	IMPLEMENTATION
// Our readback/pushback buffer.	WITHOUT_CLASSIFICATION	0.999404353221082	WITHOUT_CLASSIFICATION	5.956467789180584E-4	IMPLEMENTATION
// index of last character in pushback buffer	WITHOUT_CLASSIFICATION	0.9999601855194229	WITHOUT_CLASSIFICATION	3.9814480577020306E-5	IMPLEMENTATION
// Character read before previous read	WITHOUT_CLASSIFICATION	0.999810616729301	WITHOUT_CLASSIFICATION	1.8938327069898327E-4	IMPLEMENTATION
// keep value of twoAgo around so we can restore after we unread	WITHOUT_CLASSIFICATION	0.9998746038605475	WITHOUT_CLASSIFICATION	1.2539613945255595E-4	IMPLEMENTATION
// NetProtocolBufferedIOLibrary	WITHOUT_CLASSIFICATION	0.9993837240754918	WITHOUT_CLASSIFICATION	6.162759245082557E-4	IMPLEMENTATION
// BigDecimalLibrary	WITHOUT_CLASSIFICATION	0.9986385284494232	WITHOUT_CLASSIFICATION	0.001361471550576766	IMPLEMENTATION
// TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. // We did it here for now	WITHOUT_CLASSIFICATION	0.9951132387842162	IMPLEMENTATION	0.004886761215783785	WITHOUT_CLASSIFICATION
// Ruby's designation for some platforms, minus version numbers in some cases	WITHOUT_CLASSIFICATION	0.999964439285602	WITHOUT_CLASSIFICATION	3.556071439808258E-5	IMPLEMENTATION
// that's what JDK5 produces on Windows Vista	WITHOUT_CLASSIFICATION	0.9824453351872525	WITHOUT_CLASSIFICATION	0.017554664812747388	IMPLEMENTATION
// Rubygems is too specific on host cpu so until we have real need lets default to universal //setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));	WITHOUT_CLASSIFICATION	0.9997738374035069	WITHOUT_CLASSIFICATION	2.261625964932253E-4	IMPLEMENTATION
// Our shell scripts pass in non-canonicalized paths, but even if we didn't // anyone who did would become unhappy because Ruby apps expect no relative // operators in the pathname (rubygems, for example).	WITHOUT_CLASSIFICATION	0.9999731333696377	WITHOUT_CLASSIFICATION	2.6866630362309046E-5	IMPLEMENTATION
// this set is only for darwin	WITHOUT_CLASSIFICATION	0.9997431668219916	WITHOUT_CLASSIFICATION	2.568331780084354E-4	IMPLEMENTATION
// DigestLibrary	WITHOUT_CLASSIFICATION	0.9986385284494232	WITHOUT_CLASSIFICATION	0.001361471550576766	IMPLEMENTATION
// all errors, just info; do not prevent loading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9417231649553592	WITHOUT_CLASSIFICATION	0.058276835044640776	IMPLEMENTATION
// all errors, just info; do not prevent unloading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9601819659992523	WITHOUT_CLASSIFICATION	0.03981803400074771	IMPLEMENTATION
// do nothing, return dummy version below	WITHOUT_CLASSIFICATION	0.99915032853104	WITHOUT_CLASSIFICATION	8.496714689600134E-4	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
// line 329	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9989612992561224	WITHOUT_CLASSIFICATION	0.0010387007438775661	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
// dynamically increase	WITHOUT_CLASSIFICATION	0.9996440525710922	WITHOUT_CLASSIFICATION	3.559474289078502E-4	IMPLEMENTATION
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9985897601692725	WITHOUT_CLASSIFICATION	0.0014102398307274753	IMPLEMENTATION
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9996834706180334	WITHOUT_CLASSIFICATION	3.165293819665982E-4	IMPLEMENTATION
// shift to yyN	WITHOUT_CLASSIFICATION	0.9974960242166427	WITHOUT_CLASSIFICATION	0.0025039757833571555	IMPLEMENTATION
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9987258370212073	WITHOUT_CLASSIFICATION	0.0012741629787926482	IMPLEMENTATION
// leave stack alone	WITHOUT_CLASSIFICATION	0.9987493931301977	WITHOUT_CLASSIFICATION	0.0012506068698023003	IMPLEMENTATION
// line 271	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 274	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 303	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 311	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 314	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 317	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 332	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 338	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 341	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 344	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 351	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 358	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 367	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 372	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 378	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 382	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 407	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 411	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 414	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 417	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 420	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 426	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 434	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 443	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 446	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 452	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 457	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 464	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 467	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 470	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 479	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 484	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 486	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 492	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 498	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 501	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 504	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 507	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 510	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 519	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 525	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
// line 537	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 540	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 543	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 546	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 556	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 559	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 563	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 566	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 569	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 575	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 578	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 587	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 596	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 604	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 607	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 610	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 613	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 616	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 634	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 638	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 643	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 646	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 655	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 660	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 667	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 670	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 672	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 696	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 701	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 717	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 720	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 726	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 729	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 732	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 735	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 738	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 751	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 754	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 757	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 760	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 763	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 769	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 772	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 775	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 782	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 788	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 791	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 794	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 797	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 803	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 806	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 809	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 815	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 818	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 821	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 824	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 830	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 833	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 836	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 839	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 842	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 848	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 852	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 858	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 861	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 868	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 871	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 876	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 879	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 883	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 893	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 896	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 899	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 903	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 907	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 915	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 920	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 923	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 926	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 932	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 936	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 940	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 944	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 948	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 956	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 960	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 964	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 967	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 972	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 978	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 980	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 984	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 986	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 996	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1001	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1004	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1008	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1014	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1029	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1032	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1034	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1045	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1048	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1051	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1058	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1070	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1073	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1076	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1079	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1082	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1089	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1097	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1100	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1103	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1107	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1111	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1113	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1115	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1119	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1130	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1133	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1135	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1137	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1140	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1151	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1154	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1158	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1164	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1175	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1178	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1187	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1189	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1193	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1204	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1207	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1210	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1214	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1234	WITHOUT_CLASSIFICATION	0.9989802432459457	WITHOUT_CLASSIFICATION	0.001019756754054266	IMPLEMENTATION
// line 1239	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1243	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1247	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1251	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1263	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1269	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1280	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1283	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1290	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1296	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1299	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1302	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1309	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1313	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1315	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1320	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1328	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1335	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1348	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1352	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1358	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1374	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1381	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1387	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1392	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1415	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1431	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1434	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1440	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1443	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1453	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1456	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1462	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1465	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1470	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1477	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1480	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1485	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1488	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1496	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1502	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1510	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1513	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1516	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1533	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1550	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1553	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1556	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1565	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1568	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1571	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1574	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1577	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1587	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1595	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1598	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1600	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1609	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1623	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1626	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1629	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1632	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1638	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1641	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1644	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1649	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1655	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1658	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1661	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1672	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1677	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1687	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1694	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1705	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1708	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1725	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1733	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1742	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1745	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1749	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1757	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1769	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1772	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1775	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1784	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1808	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1814	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1818	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1822	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
/* force for args */	WITHOUT_CLASSIFICATION	0.9998444020322016	WITHOUT_CLASSIFICATION	1.555979677984899E-4	IMPLEMENTATION
/*XXX 0;*/	WITHOUT_CLASSIFICATION	0.9999591600903001	WITHOUT_CLASSIFICATION	4.083990969988955E-5	IMPLEMENTATION
/*                      $$ = $3;*/	WITHOUT_CLASSIFICATION	0.99982226968989	WITHOUT_CLASSIFICATION	1.7773031010998993E-4	IMPLEMENTATION
/*                  }*/	WITHOUT_CLASSIFICATION	0.9999460758023182	WITHOUT_CLASSIFICATION	5.392419768184883E-5	IMPLEMENTATION
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9993849659643086	WITHOUT_CLASSIFICATION	6.150340356914222E-4	IMPLEMENTATION
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9998567479198232	WITHOUT_CLASSIFICATION	1.4325208017678355E-4	IMPLEMENTATION
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9982732914883949	WITHOUT_CLASSIFICATION	0.0017267085116050998	IMPLEMENTATION
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9982732914883949	WITHOUT_CLASSIFICATION	0.0017267085116050998	IMPLEMENTATION
/* NOEX_PRIVATE for toplevel */	WITHOUT_CLASSIFICATION	0.9999589865556624	WITHOUT_CLASSIFICATION	4.1013444337736366E-5	IMPLEMENTATION
/*mirko: check*/	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
/* Include pipes on multiple arg type*/	WITHOUT_CLASSIFICATION	0.9997082947115915	WITHOUT_CLASSIFICATION	2.917052884084875E-4	IMPLEMENTATION
// line 529	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999016243031613	WITHOUT_CLASSIFICATION	9.837569683867305E-5	IMPLEMENTATION
/* XXX*/	WITHOUT_CLASSIFICATION	0.999993669219225	WITHOUT_CLASSIFICATION	6.330780775020989E-6	IMPLEMENTATION
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999611666442797	WITHOUT_CLASSIFICATION	3.8833355720241964E-5	IMPLEMENTATION
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.999884229207324	WITHOUT_CLASSIFICATION	1.1577079267602254E-4	IMPLEMENTATION
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9999016243031613	WITHOUT_CLASSIFICATION	9.837569683867305E-5	IMPLEMENTATION
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.999838850374245	WITHOUT_CLASSIFICATION	1.6114962575499437E-4	IMPLEMENTATION
// line 1827 "DefaultRubyParser.y"	WITHOUT_CLASSIFICATION	0.9995349350706513	WITHOUT_CLASSIFICATION	4.650649293486833E-4	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.999141855935787	WITHOUT_CLASSIFICATION	8.581440642129783E-4	IMPLEMENTATION
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9992262164578241	WITHOUT_CLASSIFICATION	7.737835421759283E-4	IMPLEMENTATION
// line 7713 "-"	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// local scopes are argument scopes by default	WITHOUT_CLASSIFICATION	0.9999684005089661	WITHOUT_CLASSIFICATION	3.159949103394127E-5	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999806354231864	WITHOUT_CLASSIFICATION	1.9364576813657476E-5	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999806354231864	WITHOUT_CLASSIFICATION	1.9364576813657476E-5	IMPLEMENTATION
// We know this is a block scope because a local scope cannot be within a local scope // If topScope was itself it would have created a LocalAsgnNode above.	WITHOUT_CLASSIFICATION	0.9998215033924251	WITHOUT_CLASSIFICATION	1.7849660757489878E-4	IMPLEMENTATION
// ENEBO: 1.9 has CURR nodes for local/block variables.  We don't.  I believe we follow proper logic	WITHOUT_CLASSIFICATION	0.9981529349956672	WITHOUT_CLASSIFICATION	0.001847065004332806	IMPLEMENTATION
// odd...but it is odd in ruby too.	WITHOUT_CLASSIFICATION	0.9998961751726168	WITHOUT_CLASSIFICATION	1.038248273832381E-4	IMPLEMENTATION
// What linenumber will the source think it starts from?	WITHOUT_CLASSIFICATION	0.99675706095044	WITHOUT_CLASSIFICATION	0.0032429390495598335	IMPLEMENTATION
// Is this inline source (aka -e "...source...")	WITHOUT_CLASSIFICATION	0.998323753182191	WITHOUT_CLASSIFICATION	0.0016762468178089353	IMPLEMENTATION
// We parse evals more often in source so assume an eval parse.	WITHOUT_CLASSIFICATION	0.9999724236309112	WITHOUT_CLASSIFICATION	2.757636908884895E-5	IMPLEMENTATION
// Should positions added extra IDE-friendly information and leave in all newline nodes	WITHOUT_CLASSIFICATION	0.9999854915285824	WITHOUT_CLASSIFICATION	1.4508471417545461E-5	IMPLEMENTATION
// Will parser parse Duby grammar Extensions	WITHOUT_CLASSIFICATION	0.9989429562533335	WITHOUT_CLASSIFICATION	0.0010570437466665041	IMPLEMENTATION
// Should we display extra debug information while parsing?	WITHOUT_CLASSIFICATION	0.9990653067534524	WITHOUT_CLASSIFICATION	9.346932465475327E-4	IMPLEMENTATION
// __END__ marker offset (-1 means none present)	WITHOUT_CLASSIFICATION	0.999641151651435	WITHOUT_CLASSIFICATION	3.5884834856505897E-4	IMPLEMENTATION
// Parser states:	WITHOUT_CLASSIFICATION	0.9986385284494232	WITHOUT_CLASSIFICATION	0.001361471550576766	IMPLEMENTATION
// Is the parser current within a singleton (value is number of nested singletons)	WITHOUT_CLASSIFICATION	0.9922036825089726	WITHOUT_CLASSIFICATION	0.00779631749102739	IMPLEMENTATION
// Is the parser currently within a method definition	WITHOUT_CLASSIFICATION	0.9749462441567813	WITHOUT_CLASSIFICATION	0.02505375584321876	IMPLEMENTATION
// LOCALVAR	WITHOUT_CLASSIFICATION	0.9986385284494232	WITHOUT_CLASSIFICATION	0.001361471550576766	IMPLEMENTATION
// CONSTANT	WITHOUT_CLASSIFICATION	0.9986385284494232	WITHOUT_CLASSIFICATION	0.001361471550576766	IMPLEMENTATION
// INSTANCE VARIABLE	WITHOUT_CLASSIFICATION	0.9986385284494232	WITHOUT_CLASSIFICATION	0.001361471550576766	IMPLEMENTATION
// Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])	WITHOUT_CLASSIFICATION	0.9986938302197252	WITHOUT_CLASSIFICATION	0.0013061697802746787	IMPLEMENTATION
/* MRI: block_append */	WITHOUT_CLASSIFICATION	0.9999540256974796	WITHOUT_CLASSIFICATION	4.597430252052463E-5	IMPLEMENTATION
// Reduces overhead in interp by not set position every single line we encounter. 	WITHOUT_CLASSIFICATION	0.9804404597054499	WITHOUT_CLASSIFICATION	0.01955954029455012	IMPLEMENTATION
// Assumption: tail is never a list node	WITHOUT_CLASSIFICATION	0.9942665170260133	WITHOUT_CLASSIFICATION	0.005733482973986679	IMPLEMENTATION
//        return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));	WITHOUT_CLASSIFICATION	0.9997594788840839	WITHOUT_CLASSIFICATION	2.4052111591600463E-4	IMPLEMENTATION
// Node	WITHOUT_CLASSIFICATION	0.9999761094396894	WITHOUT_CLASSIFICATION	2.3890560310639367E-5	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9992272105939406	WITHOUT_CLASSIFICATION	7.727894060593269E-4	IMPLEMENTATION
/*case CONSTNODE:                handleUselessWarn(node, "a constant"); return;*/	WITHOUT_CLASSIFICATION	0.9992784131886898	WITHOUT_CLASSIFICATION	7.21586811310184E-4	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9992272105939406	WITHOUT_CLASSIFICATION	7.727894060593269E-4	IMPLEMENTATION
/*case CLASSNODE: case COLON2NODE:                handleUselessWarn(node, "::"); return;*/	WITHOUT_CLASSIFICATION	0.9992533867120067	WITHOUT_CLASSIFICATION	7.466132879932279E-4	IMPLEMENTATION
/*case SELFNODE:                handleUselessWarn(node, "self"); return;*/	WITHOUT_CLASSIFICATION	0.9992784131886898	WITHOUT_CLASSIFICATION	7.21586811310184E-4	IMPLEMENTATION
// FIXME: DSTR,EVSTR,STR: warning "string literal in condition"	WITHOUT_CLASSIFICATION	0.9999532347909821	WITHOUT_CLASSIFICATION	4.676520901789035E-5	IMPLEMENTATION
/* MRI: range_op */	WITHOUT_CLASSIFICATION	0.9998335097239774	WITHOUT_CLASSIFICATION	1.6649027602250264E-4	IMPLEMENTATION
// Block and block pass passed in at same time....uh oh	WITHOUT_CLASSIFICATION	0.9999352087407427	WITHOUT_CLASSIFICATION	6.4791259257311E-5	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.999975778940229	WITHOUT_CLASSIFICATION	2.422105977089807E-5	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.999975778940229	WITHOUT_CLASSIFICATION	2.422105977089807E-5	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.999975778940229	WITHOUT_CLASSIFICATION	2.422105977089807E-5	IMPLEMENTATION
// tail must be EvStrNode at this point 	WITHOUT_CLASSIFICATION	0.9996137539643215	WITHOUT_CLASSIFICATION	3.8624603567839386E-4	IMPLEMENTATION
//Do not add an empty string node	WITHOUT_CLASSIFICATION	0.9997698569200514	WITHOUT_CLASSIFICATION	2.301430799484849E-4	IMPLEMENTATION
// Zero-Argument declaration	WITHOUT_CLASSIFICATION	0.999696167112326	WITHOUT_CLASSIFICATION	3.038328876739512E-4	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
// dynamically increase	WITHOUT_CLASSIFICATION	0.9996440525710922	WITHOUT_CLASSIFICATION	3.559474289078502E-4	IMPLEMENTATION
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9996834706180334	WITHOUT_CLASSIFICATION	3.165293819665982E-4	IMPLEMENTATION
// shift to yyN	WITHOUT_CLASSIFICATION	0.9974960242166427	WITHOUT_CLASSIFICATION	0.0025039757833571555	IMPLEMENTATION
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9987258370212073	WITHOUT_CLASSIFICATION	0.0012741629787926482	IMPLEMENTATION
// leave stack alone	WITHOUT_CLASSIFICATION	0.9987493931301977	WITHOUT_CLASSIFICATION	0.0012506068698023003	IMPLEMENTATION
// line 321	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 351	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 382	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 417	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 420	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 423	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 426	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 280	WITHOUT_CLASSIFICATION	0.9989816425669075	WITHOUT_CLASSIFICATION	0.0010183574330925713	IMPLEMENTATION
// line 283	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 296	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 324	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 327	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 331	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 333	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 336	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 342	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 345	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 348	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 354	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 368	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 377	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 388	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 392	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 397	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 429	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 432	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 436	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 445	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 448	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 454	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 459	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 466	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 469	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 478	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 481	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 488	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 494	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 497	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 503	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 506	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 509	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 512	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 521	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 526	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 540	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 543	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 546	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 566	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 610	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 672	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 691	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 696	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 772	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 782	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 785	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 788	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 791	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 534	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 549	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 552	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 558	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 561	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 571	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 574	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 579	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 586	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 589	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 592	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 595	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 598	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 623	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 627	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 630	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 633	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 639	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 648	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 657	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 661	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 666	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 678	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 682	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 688	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 699	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 706	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 708	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 727	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 737	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 753	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 779	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 801	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 808	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 811	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 817	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 842	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 845	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 848	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 893	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 899	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 932	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 944	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 960	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 980	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1004	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1038	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 820	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 826	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 829	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 832	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 851	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 857	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 860	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 863	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 866	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 869	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 875	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 884	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 887	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 890	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 902	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 909	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 912	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 916	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 922	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 928	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 941	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 947	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 951	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 955	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 965	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 969	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 977	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 983	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1013	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1023	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1035	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1041	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1043	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1054	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1057	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1060	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1069	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1075	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1105	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1111	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1122	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1130	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1140	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1158	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1204	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1207	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1247	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1251	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1261	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1078	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1084	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1087	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1090	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1093	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1114	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1116	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1118	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1124	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1126	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1138	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1144	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1149	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1155	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1162	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1173	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1179	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1182	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1190	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1196	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1213	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1217	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1231	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1236	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1244	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1254	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1258	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1264	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1270	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1273	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1276	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1279	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1282	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1289	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1292	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1295	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1298	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1305	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1348	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1387	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1392	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1448	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1462	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1470	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1496	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1502	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1595	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1598	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1308	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1311	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1317	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1323	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1326	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1329	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1337	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1342	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1345	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1354	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1359	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1366	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1369	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1373	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1377	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1383	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1399	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1401	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1406	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1417	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1424	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1427	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1430	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1433	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1436	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1442	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1445	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1458	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1464	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1489	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1493	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1507	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1519	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1532	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1538	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1542	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1557	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1573	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1591	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1615	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1629	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1632	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1705	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1716	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1725	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1742	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1749	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1818	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1822	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1607	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1610	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1622	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1625	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1636	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1639	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1647	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1651	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1657	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1660	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1663	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1678	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1702	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1711	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1719	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1722	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1731	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1734	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1738	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1746	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1756	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1758	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1761	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1767	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1776	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1782	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1785	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1788	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1791	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1797	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1800	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1803	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1806	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1809	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1815	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1825	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1828	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1831	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1847	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9982732914883949	WITHOUT_CLASSIFICATION	0.0017267085116050998	IMPLEMENTATION
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9982732914883949	WITHOUT_CLASSIFICATION	0.0017267085116050998	IMPLEMENTATION
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999016243031613	WITHOUT_CLASSIFICATION	9.837569683867305E-5	IMPLEMENTATION
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999611666442797	WITHOUT_CLASSIFICATION	3.8833355720241964E-5	IMPLEMENTATION
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.999884229207324	WITHOUT_CLASSIFICATION	1.1577079267602254E-4	IMPLEMENTATION
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9999016243031613	WITHOUT_CLASSIFICATION	9.837569683867305E-5	IMPLEMENTATION
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.999838850374245	WITHOUT_CLASSIFICATION	1.6114962575499437E-4	IMPLEMENTATION
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9993837240754918	WITHOUT_CLASSIFICATION	6.162759245082557E-4	IMPLEMENTATION
// line 1854	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1869	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1872	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1877	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1886	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1898	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1902	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1905	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1911	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1918	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1935	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1938	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1942	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1948	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1960	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1963	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1968	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1972	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1982	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1995	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 2000	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 2006	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 2010	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
/* We may need to subtract addition offset off of first */	WITHOUT_CLASSIFICATION	0.9998887695508949	WITHOUT_CLASSIFICATION	1.1123044910510433E-4	IMPLEMENTATION
/* string fragment (we optimistically take one off in*/	WITHOUT_CLASSIFICATION	0.9999851774686274	WITHOUT_CLASSIFICATION	1.4822531372646203E-5	IMPLEMENTATION
/* ParserSupport.literal_concat).  Check token length*/	WITHOUT_CLASSIFICATION	0.9997215404547108	WITHOUT_CLASSIFICATION	2.7845954528916576E-4	IMPLEMENTATION
/* and subtract as neeeded.*/	WITHOUT_CLASSIFICATION	0.99994823602842	WITHOUT_CLASSIFICATION	5.176397157988571E-5	IMPLEMENTATION
/*                    $$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);  */	WITHOUT_CLASSIFICATION	0.9999392084538835	WITHOUT_CLASSIFICATION	6.079154611652936E-5	IMPLEMENTATION
/* ENEBO: arg surrounded by in_defined set/unset*/	WITHOUT_CLASSIFICATION	0.9997568231321184	WITHOUT_CLASSIFICATION	2.4317686788161928E-4	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.999141855935787	WITHOUT_CLASSIFICATION	8.581440642129783E-4	IMPLEMENTATION
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9992262164578241	WITHOUT_CLASSIFICATION	7.737835421759283E-4	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999806354231864	WITHOUT_CLASSIFICATION	1.9364576813657476E-5	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999806354231864	WITHOUT_CLASSIFICATION	1.9364576813657476E-5	IMPLEMENTATION
/* ENEBO: Removed !compile_for_eval which probably is to reduce warnings*/	WITHOUT_CLASSIFICATION	0.9977437107272368	WITHOUT_CLASSIFICATION	0.0022562892727631904	IMPLEMENTATION
/* was $$ = null;*/	WITHOUT_CLASSIFICATION	0.9998907572484821	WITHOUT_CLASSIFICATION	1.0924275151791681E-4	IMPLEMENTATION
// line 2019 "Ruby19Parser.y"	WITHOUT_CLASSIFICATION	0.9997160619882548	WITHOUT_CLASSIFICATION	2.839380117451848E-4	IMPLEMENTATION
// line 8143 "-"	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// we know variables cannot be null since localstaticscope will create a 0 length one.	WITHOUT_CLASSIFICATION	0.99954812948404	WITHOUT_CLASSIFICATION	4.5187051596004264E-4	IMPLEMENTATION
// No bit math to store level since we know level is zero for this case	WITHOUT_CLASSIFICATION	0.9983540109964654	WITHOUT_CLASSIFICATION	0.0016459890035346687	IMPLEMENTATION
// Next immediate scope.  Variable and constant scoping rules make use of this variable // in different ways.	WITHOUT_CLASSIFICATION	0.999514301674474	WITHOUT_CLASSIFICATION	4.8569832552598037E-4	IMPLEMENTATION
// Live reference to module	WITHOUT_CLASSIFICATION	0.9995987652057532	WITHOUT_CLASSIFICATION	4.0123479424674697E-4	IMPLEMENTATION
// Next CRef down the lexical structure	WITHOUT_CLASSIFICATION	0.9996892353759889	WITHOUT_CLASSIFICATION	3.107646240111682E-4	IMPLEMENTATION
// Our name holder (offsets are assigned as variables are added	WITHOUT_CLASSIFICATION	0.9999723281913829	WITHOUT_CLASSIFICATION	2.7671808617146613E-5	IMPLEMENTATION
// number of variables in this scope representing required arguments	WITHOUT_CLASSIFICATION	0.9998278546685843	WITHOUT_CLASSIFICATION	1.721453314157205E-4	IMPLEMENTATION
// number of variables in this scope representing optional arguments	WITHOUT_CLASSIFICATION	0.9999263086086847	WITHOUT_CLASSIFICATION	7.369139131535829E-5	IMPLEMENTATION
// index of variable that represents a "rest" arg	WITHOUT_CLASSIFICATION	0.9992186278099375	WITHOUT_CLASSIFICATION	7.813721900625199E-4	IMPLEMENTATION
// Note that this object equality check is intentional, to ensure // the string and its interned version are the same object.	WITHOUT_CLASSIFICATION	0.9991817814512026	WITHOUT_CLASSIFICATION	8.182185487974263E-4	IMPLEMENTATION
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9997784273176566	WITHOUT_CLASSIFICATION	2.2157268234330497E-4	IMPLEMENTATION
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9997784273176566	WITHOUT_CLASSIFICATION	2.2157268234330497E-4	IMPLEMENTATION
/* Note: Only used by compiler until it can use getConstant again or use some other refactoring */	WITHOUT_CLASSIFICATION	0.9993319108135073	WITHOUT_CLASSIFICATION	6.680891864926797E-4	IMPLEMENTATION
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9982049852242338	WITHOUT_CLASSIFICATION	0.0017950147757662288	IMPLEMENTATION
/* Try and unload the autoload specified from internedName */	WITHOUT_CLASSIFICATION	0.9999901051774623	WITHOUT_CLASSIFICATION	9.894822537668387E-6	IMPLEMENTATION
// We override that the logic which uses this	WITHOUT_CLASSIFICATION	0.9979971288155586	WITHOUT_CLASSIFICATION	0.002002871184441418	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999333901120224	WITHOUT_CLASSIFICATION	6.66098879775724E-5	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.998996502798515	WITHOUT_CLASSIFICATION	0.0010034972014849228	IMPLEMENTATION
// source extensions	WITHOUT_CLASSIFICATION	0.9995646306809302	WITHOUT_CLASSIFICATION	4.3536931906976953E-4	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.998996502798515	WITHOUT_CLASSIFICATION	0.0010034972014849228	IMPLEMENTATION
// . Array given to rest should pass itself // . Array with rest + other args should extract array // . Array with multiple values and NO rest should extract args if there are more than one argument	WITHOUT_CLASSIFICATION	0.9998846815253706	WITHOUT_CLASSIFICATION	1.153184746294892E-4	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9971768042941694	WITHOUT_CLASSIFICATION	0.0028231957058306115	IMPLEMENTATION
// Is this thread currently with in a function trace?	WITHOUT_CLASSIFICATION	0.9988469799487197	WITHOUT_CLASSIFICATION	0.0011530200512802318	IMPLEMENTATION
// Is this thread currently doing an defined? defined should set things like $!	WITHOUT_CLASSIFICATION	0.9919499654365035	WITHOUT_CLASSIFICATION	0.008050034563496539	IMPLEMENTATION
//private UnsynchronizedStack parentStack;	WITHOUT_CLASSIFICATION	0.9989822035026394	WITHOUT_CLASSIFICATION	0.0010177964973605953	IMPLEMENTATION
//private UnsynchronizedStack frameStack;	WITHOUT_CLASSIFICATION	0.9989822035026394	WITHOUT_CLASSIFICATION	0.0010177964973605953	IMPLEMENTATION
// List of active dynamic scopes.  Each of these may have captured other dynamic scopes // to implement closures.	WITHOUT_CLASSIFICATION	0.9666669051534506	WITHOUT_CLASSIFICATION	0.03333309484654956	IMPLEMENTATION
// File where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9979868731317392	WITHOUT_CLASSIFICATION	0.002013126868260841	IMPLEMENTATION
// Line where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9980340932134111	WITHOUT_CLASSIFICATION	0.0019659067865889467	IMPLEMENTATION
// In certain places, like grep, we don't use real frames for the // call blocks. This has the effect of not setting the backref in // the correct frame - this delta is activated to the place where // the grep is running in so that the backref will be set in an // appropriate place.	WITHOUT_CLASSIFICATION	0.9893315832703928	WITHOUT_CLASSIFICATION	0.010668416729607222	IMPLEMENTATION
// TOPLEVEL self and a few others want a top-level scope.  We create this one right // away and then pass it into top-level parse so it ends up being the top level.	WITHOUT_CLASSIFICATION	0.9999394954395027	WITHOUT_CLASSIFICATION	6.050456049745402E-5	IMPLEMENTATION
//////////////////// CATCH MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9989791263488064	WITHOUT_CLASSIFICATION	0.0010208736511935247	IMPLEMENTATION
//////////////////// FRAME MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9989791263488064	WITHOUT_CLASSIFICATION	0.0010208736511935247	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9902032862457952	WITHOUT_CLASSIFICATION	0.009796713754204706	IMPLEMENTATION
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999113447802433	WITHOUT_CLASSIFICATION	8.865521975661687E-5	IMPLEMENTATION
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999113447802433	WITHOUT_CLASSIFICATION	8.865521975661687E-5	IMPLEMENTATION
// look for mangling markers for compiled Ruby in method name	WITHOUT_CLASSIFICATION	0.997909894677308	WITHOUT_CLASSIFICATION	0.002090105322692042	IMPLEMENTATION
// if it's not a rescue or ensure, there's a frame associated, so decrement	WITHOUT_CLASSIFICATION	0.9953931991063306	WITHOUT_CLASSIFICATION	0.004606800893669401	IMPLEMENTATION
// look for __file__ method name for compiled roots	WITHOUT_CLASSIFICATION	0.9901229584793525	WITHOUT_CLASSIFICATION	0.009877041520647462	IMPLEMENTATION
// All entries following removed node can stay // in list, but all preceding ones need to be // cloned.	WITHOUT_CLASSIFICATION	0.9985766011769235	WITHOUT_CLASSIFICATION	0.0014233988230764728	IMPLEMENTATION
// required and optional only	WITHOUT_CLASSIFICATION	0.9992410261168606	WITHOUT_CLASSIFICATION	7.58973883139412E-4	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.998996502798515	WITHOUT_CLASSIFICATION	0.0010034972014849228	IMPLEMENTATION
// look for mangling markers for bound, unframed methods in class name	WITHOUT_CLASSIFICATION	0.9998895595028016	WITHOUT_CLASSIFICATION	1.1044049719848554E-4	IMPLEMENTATION
// set the binding's frame's "previous" file and line to current, so // trace will show who called the block	WITHOUT_CLASSIFICATION	0.9996113465324635	WITHOUT_CLASSIFICATION	3.8865346753648645E-4	IMPLEMENTATION
// framed invokers will have Ruby frames associated with them	WITHOUT_CLASSIFICATION	0.9995994345277728	WITHOUT_CLASSIFICATION	4.005654722272661E-4	IMPLEMENTATION
// look for mangling markers for bound, framed methods in class name	WITHOUT_CLASSIFICATION	0.9998895595028016	WITHOUT_CLASSIFICATION	1.1044049719848554E-4	IMPLEMENTATION
// unframed invokers have no Ruby frames, so pull from class name // but use current frame as file and line	WITHOUT_CLASSIFICATION	0.9999643348752114	WITHOUT_CLASSIFICATION	3.566512478850687E-5	IMPLEMENTATION
// try to mine out a Ruby frame using our list of interpreter entry-point markers	WITHOUT_CLASSIFICATION	0.9999471217666622	WITHOUT_CLASSIFICATION	5.28782333376889E-5	IMPLEMENTATION
// Frame matches one of our markers for "interpreted" calls	WITHOUT_CLASSIFICATION	0.9998721623246869	WITHOUT_CLASSIFICATION	1.2783767531300498E-4	IMPLEMENTATION
// Frame is extraneous runtime information, skip it unless debug	WITHOUT_CLASSIFICATION	0.996816382459769	WITHOUT_CLASSIFICATION	0.0031836175402309218	IMPLEMENTATION
/*     * Determine what sort of assigner should be used for the provided 'iter' (e.g. block).     * Assigner provides just the right logic for assigning values to local parameters of the     * block.     *     * This method also has a second optimization which is to set 'noargblock' in the case that     * the block is a block which accepts no arguments.  The primary reason for this second     * optimization is that in the case of a yield with a RubyArray we will bypass some logic     * processing the RubyArray into a proper form (only to then not do anythign with it).  A     * secondary benefit is that a simple boolean seems to optimize by hotspot much faster     * than the zero arg assigner.     */	WITHOUT_CLASSIFICATION	0.9978643120014865	WITHOUT_CLASSIFICATION	0.0021356879985135447	IMPLEMENTATION
// new scope for this invocation of the block, based on parent scope	WITHOUT_CLASSIFICATION	0.9996498362944747	WITHOUT_CLASSIFICATION	3.501637055253074E-4	IMPLEMENTATION
// No argument blocks	WITHOUT_CLASSIFICATION	0.9999580440653837	WITHOUT_CLASSIFICATION	4.1955934616331316E-5	IMPLEMENTATION
// just push the same empty scope, since we won't use one	WITHOUT_CLASSIFICATION	0.9999941923122745	WITHOUT_CLASSIFICATION	5.8076877254941825E-6	IMPLEMENTATION
// Not sure if this is actually possible, but better safe than sorry	WITHOUT_CLASSIFICATION	0.9999703327402203	WITHOUT_CLASSIFICATION	2.966725977969571E-5	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9993766961618177	WITHOUT_CLASSIFICATION	6.23303838182348E-4	IMPLEMENTATION
// This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).	WITHOUT_CLASSIFICATION	0.9947964692265442	WITHOUT_CLASSIFICATION	0.005203530773455806	IMPLEMENTATION
// Highest reserved id	WITHOUT_CLASSIFICATION	0.9996467362268445	WITHOUT_CLASSIFICATION	3.532637731555186E-4	IMPLEMENTATION
// binary typed calls	WITHOUT_CLASSIFICATION	0.999194043028783	WITHOUT_CLASSIFICATION	8.059569712168617E-4	IMPLEMENTATION
// id must always be even	WITHOUT_CLASSIFICATION	0.9995731576309598	WITHOUT_CLASSIFICATION	4.268423690402346E-4	IMPLEMENTATION
// with block pass	WITHOUT_CLASSIFICATION	0.9939080129771368	WITHOUT_CLASSIFICATION	0.006091987022863195	IMPLEMENTATION
// no block	WITHOUT_CLASSIFICATION	0.9972583954017143	WITHOUT_CLASSIFICATION	0.002741604598285592	IMPLEMENTATION
// with block literal (iter)	WITHOUT_CLASSIFICATION	0.9983365462561037	WITHOUT_CLASSIFICATION	0.0016634537438962684	IMPLEMENTATION
//            assert false : "can this happen?";	WITHOUT_CLASSIFICATION	0.9995034302487323	WITHOUT_CLASSIFICATION	4.965697512677317E-4	IMPLEMENTATION
// if we have multiple asgn with just *args, need a special type for that	WITHOUT_CLASSIFICATION	0.9998242702930493	WITHOUT_CLASSIFICATION	1.7572970695066577E-4	IMPLEMENTATION
// && args.getMaxArgumentsCount() != 1) {	WITHOUT_CLASSIFICATION	0.9998359451749013	WITHOUT_CLASSIFICATION	1.6405482509876255E-4	IMPLEMENTATION
//            return warnMultiReturnNil(ruby);	WITHOUT_CLASSIFICATION	0.9996770736211573	WITHOUT_CLASSIFICATION	3.2292637884263897E-4	IMPLEMENTATION
// ensure zero is devoted to no method name	WITHOUT_CLASSIFICATION	0.9843773960847546	WITHOUT_CLASSIFICATION	0.01562260391524545	IMPLEMENTATION
// predefine a few other methods we invoke directly elsewhere	WITHOUT_CLASSIFICATION	0.9979869447646031	WITHOUT_CLASSIFICATION	0.0020130552353968753	IMPLEMENTATION
// fast and safe respond_to? call site logic	WITHOUT_CLASSIFICATION	0.999445547712098	WITHOUT_CLASSIFICATION	5.544522879019003E-4	IMPLEMENTATION
// Static scoping information for this scope	WITHOUT_CLASSIFICATION	0.9995596643079266	WITHOUT_CLASSIFICATION	4.403356920733805E-4	IMPLEMENTATION
// Captured dynamic scopes	WITHOUT_CLASSIFICATION	0.9996237203449804	WITHOUT_CLASSIFICATION	3.7627965501967623E-4	IMPLEMENTATION
// Backref for $~, $1, etc	WITHOUT_CLASSIFICATION	0.9998118755179763	WITHOUT_CLASSIFICATION	1.8812448202356756E-4	IMPLEMENTATION
// Lastline	WITHOUT_CLASSIFICATION	0.9986385284494232	WITHOUT_CLASSIFICATION	0.001361471550576766	IMPLEMENTATION
// No binding scope so we should create one	WITHOUT_CLASSIFICATION	0.999909550999413	WITHOUT_CLASSIFICATION	9.044900058697184E-5	IMPLEMENTATION
// bindings scopes must always be ManyVars scopes since evals can grow them	WITHOUT_CLASSIFICATION	0.9995308667091464	WITHOUT_CLASSIFICATION	4.691332908536089E-4	IMPLEMENTATION
// Helper function to give a good view of current dynamic scope with captured scopes	WITHOUT_CLASSIFICATION	0.9958353345612334	WITHOUT_CLASSIFICATION	0.004164665438766625	IMPLEMENTATION
// try count specific args to determine required	WITHOUT_CLASSIFICATION	0.9950560586261706	WITHOUT_CLASSIFICATION	0.004943941373829411	IMPLEMENTATION
// Some helper functions:	WITHOUT_CLASSIFICATION	0.9997047088250053	WITHOUT_CLASSIFICATION	2.952911749946606E-4	IMPLEMENTATION
// silently ignore	WITHOUT_CLASSIFICATION	0.9983747503303396	WITHOUT_CLASSIFICATION	0.0016252496696603936	IMPLEMENTATION
// used by compiler	WITHOUT_CLASSIFICATION	0.997554250268016	WITHOUT_CLASSIFICATION	0.0024457497319840824	IMPLEMENTATION
// initialize the static settings to determine which factory to use	WITHOUT_CLASSIFICATION	0.9998393272109469	WITHOUT_CLASSIFICATION	1.6067278905301826E-4	IMPLEMENTATION
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9993837240754918	WITHOUT_CLASSIFICATION	6.162759245082557E-4	IMPLEMENTATION
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9466375563711192	WITHOUT_CLASSIFICATION	0.05336244362888089	IMPLEMENTATION
//  Single node on list	WITHOUT_CLASSIFICATION	0.9993132225510453	WITHOUT_CLASSIFICATION	6.867774489547147E-4	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.999684280517797	WITHOUT_CLASSIFICATION	3.15719482203039E-4	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9988825244680013	WITHOUT_CLASSIFICATION	0.0011174755319985962	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9971768042941694	WITHOUT_CLASSIFICATION	0.0028231957058306115	IMPLEMENTATION
// Note: In Ruby 1.9 all of this logic can go away since they will require explicit // bindings for evals.	WITHOUT_CLASSIFICATION	0.9998453121377313	WITHOUT_CLASSIFICATION	1.5468786226867585E-4	IMPLEMENTATION
// We only define one special dynamic scope per 'logical' binding.  So all bindings for // the same scope should share the same dynamic scope.  This allows multiple evals with // different different bindings in the same scope to see the same stuff.	WITHOUT_CLASSIFICATION	0.9998264799434033	WITHOUT_CLASSIFICATION	1.7352005659670866E-4	IMPLEMENTATION
// If the next scope out has the same binding scope as this scope it means // we are evaling within an eval and in that case we should be sharing the same // binding scope.	WITHOUT_CLASSIFICATION	0.9999276806549474	WITHOUT_CLASSIFICATION	7.231934505253236E-5	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999440829754116	WITHOUT_CLASSIFICATION	5.5917024588264516E-5	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999440829754116	WITHOUT_CLASSIFICATION	5.5917024588264516E-5	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999334207698345	WITHOUT_CLASSIFICATION	6.657923016547374E-5	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999334207698345	WITHOUT_CLASSIFICATION	6.657923016547374E-5	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999334207698345	WITHOUT_CLASSIFICATION	6.657923016547374E-5	IMPLEMENTATION
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9997276981001053	WITHOUT_CLASSIFICATION	2.7230189989462997E-4	IMPLEMENTATION
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9997276981001053	WITHOUT_CLASSIFICATION	2.7230189989462997E-4	IMPLEMENTATION
// extra args for rest	WITHOUT_CLASSIFICATION	0.9996848181347621	WITHOUT_CLASSIFICATION	3.151818652378695E-4	IMPLEMENTATION
// extra args for rest	WITHOUT_CLASSIFICATION	0.9996848181347621	WITHOUT_CLASSIFICATION	3.151818652378695E-4	IMPLEMENTATION
/*     * This is the proper behavior for all non-expanded assigners which have a pre > 0.  The rest     * override this.     */	WITHOUT_CLASSIFICATION	0.999896519741366	WITHOUT_CLASSIFICATION	1.0348025863395448E-4	IMPLEMENTATION
/*     * This is the proper behavior for all non-expanded assigners.     */	WITHOUT_CLASSIFICATION	0.9999183349597752	WITHOUT_CLASSIFICATION	8.166504022467512E-5	IMPLEMENTATION
// prefill ?	WITHOUT_CLASSIFICATION	0.9988491269433439	WITHOUT_CLASSIFICATION	0.001150873056656004	IMPLEMENTATION
// prefill ?	WITHOUT_CLASSIFICATION	0.9988491269433439	WITHOUT_CLASSIFICATION	0.001150873056656004	IMPLEMENTATION
// MUST be called from synchronized/locked block! // should only be called by variableTableStore/variableTableFastStore	WITHOUT_CLASSIFICATION	0.9998907266674587	WITHOUT_CLASSIFICATION	1.0927333254126886E-4	IMPLEMENTATION
// retrieve method // module // name	WITHOUT_CLASSIFICATION	0.9895282886088408	WITHOUT_CLASSIFICATION	0.010471711391159277	IMPLEMENTATION
// call is ok, punch it!	WITHOUT_CLASSIFICATION	0.9997566892340418	WITHOUT_CLASSIFICATION	2.4331076595820572E-4	IMPLEMENTATION
// if undefined, branch to method_missing	WITHOUT_CLASSIFICATION	0.9997987330054335	WITHOUT_CLASSIFICATION	2.0126699456642723E-4	IMPLEMENTATION
// if we're not attempting to invoke method_missing and method is not visible, branch to method_missing	WITHOUT_CLASSIFICATION	0.9967145941393313	WITHOUT_CLASSIFICATION	0.0032854058606687584	IMPLEMENTATION
// method object already present, push various args // tc // self // klazz // name	WITHOUT_CLASSIFICATION	0.9877607558613004	WITHOUT_CLASSIFICATION	0.012239244138699479	IMPLEMENTATION
// if it's method_missing, just invoke it	WITHOUT_CLASSIFICATION	0.9998662909235136	WITHOUT_CLASSIFICATION	1.3370907648642245E-4	IMPLEMENTATION
// invoke callMethodMissing	WITHOUT_CLASSIFICATION	0.9996280444949152	WITHOUT_CLASSIFICATION	3.719555050847545E-4	IMPLEMENTATION
// caller	WITHOUT_CLASSIFICATION	0.9999780671909257	WITHOUT_CLASSIFICATION	2.1932809074266706E-5	IMPLEMENTATION
// calltype // block	WITHOUT_CLASSIFICATION	0.9968279028285518	WITHOUT_CLASSIFICATION	0.0031720971714480806	IMPLEMENTATION
// if no exception raised, jump to end to leave result on stack for return	WITHOUT_CLASSIFICATION	0.9996076112297503	WITHOUT_CLASSIFICATION	3.923887702497058E-4	IMPLEMENTATION
// load arity for check	WITHOUT_CLASSIFICATION	0.9997616098271357	WITHOUT_CLASSIFICATION	2.3839017286440327E-4	IMPLEMENTATION
// throw	WITHOUT_CLASSIFICATION	0.999976000324618	WITHOUT_CLASSIFICATION	2.3999675382001622E-5	IMPLEMENTATION
// load arity for error	WITHOUT_CLASSIFICATION	0.9995746158833064	WITHOUT_CLASSIFICATION	4.2538411669352047E-4	IMPLEMENTATION
// arity ok, continue	WITHOUT_CLASSIFICATION	0.9996249562266661	WITHOUT_CLASSIFICATION	3.750437733338975E-4	IMPLEMENTATION
//InvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.999365695968854	WITHOUT_CLASSIFICATION	6.343040311459975E-4	IMPLEMENTATION
// ENEBO: Perhaps slow but simple for now	WITHOUT_CLASSIFICATION	0.9995391274351259	WITHOUT_CLASSIFICATION	4.608725648740918E-4	IMPLEMENTATION
// FastInvocationCallback	WITHOUT_CLASSIFICATION	0.9996237203449804	WITHOUT_CLASSIFICATION	3.7627965501967623E-4	IMPLEMENTATION
// InvocationCallback	WITHOUT_CLASSIFICATION	0.9996237203449804	WITHOUT_CLASSIFICATION	3.7627965501967623E-4	IMPLEMENTATION
//DumpingInvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9989612992561224	WITHOUT_CLASSIFICATION	0.0010387007438775661	IMPLEMENTATION
// for fast lookup: encoding entry => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999306668375616	WITHOUT_CLASSIFICATION	6.933316243837946E-5	IMPLEMENTATION
// for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9998875597257668	WITHOUT_CLASSIFICATION	1.1244027423325114E-4	IMPLEMENTATION
// load the encoding	WITHOUT_CLASSIFICATION	0.9994648414238724	WITHOUT_CLASSIFICATION	5.351585761275988E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9994105494255093	WITHOUT_CLASSIFICATION	5.89450574490769E-4	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9994105494255093	WITHOUT_CLASSIFICATION	5.89450574490769E-4	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9994105494255093	WITHOUT_CLASSIFICATION	5.89450574490769E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9993897057720351	WITHOUT_CLASSIFICATION	6.102942279648793E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9993897057720351	WITHOUT_CLASSIFICATION	6.102942279648793E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9993897057720351	WITHOUT_CLASSIFICATION	6.102942279648793E-4	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9993897057720351	WITHOUT_CLASSIFICATION	6.102942279648793E-4	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9993897057720351	WITHOUT_CLASSIFICATION	6.102942279648793E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9994098427225399	WITHOUT_CLASSIFICATION	5.90157277460155E-4	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9994098427225399	WITHOUT_CLASSIFICATION	5.90157277460155E-4	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9994098427225399	WITHOUT_CLASSIFICATION	5.90157277460155E-4	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9994098427225399	WITHOUT_CLASSIFICATION	5.90157277460155E-4	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9994098427225399	WITHOUT_CLASSIFICATION	5.90157277460155E-4	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9994098427225399	WITHOUT_CLASSIFICATION	5.90157277460155E-4	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9994098427225399	WITHOUT_CLASSIFICATION	5.90157277460155E-4	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9994098427225399	WITHOUT_CLASSIFICATION	5.90157277460155E-4	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9994098427225399	WITHOUT_CLASSIFICATION	5.90157277460155E-4	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9994098427225399	WITHOUT_CLASSIFICATION	5.90157277460155E-4	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9994098427225399	WITHOUT_CLASSIFICATION	5.90157277460155E-4	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9994098427225399	WITHOUT_CLASSIFICATION	5.90157277460155E-4	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9994098427225399	WITHOUT_CLASSIFICATION	5.90157277460155E-4	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9994098427225399	WITHOUT_CLASSIFICATION	5.90157277460155E-4	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9994098427225399	WITHOUT_CLASSIFICATION	5.90157277460155E-4	IMPLEMENTATION
// If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs	WITHOUT_CLASSIFICATION	0.9999917079113704	WITHOUT_CLASSIFICATION	8.292088629578531E-6	IMPLEMENTATION
// BreakJump, ThreadContext	WITHOUT_CLASSIFICATION	0.9996237203449804	WITHOUT_CLASSIFICATION	3.7627965501967623E-4	IMPLEMENTATION
// ThreadContext	WITHOUT_CLASSIFICATION	0.9986385284494232	WITHOUT_CLASSIFICATION	0.001361471550576766	IMPLEMENTATION
// BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9993837240754918	WITHOUT_CLASSIFICATION	6.162759245082557E-4	IMPLEMENTATION
// Make Java class files in the jar reachable from Ruby	WITHOUT_CLASSIFICATION	0.9999956586480625	WITHOUT_CLASSIFICATION	4.341351937496332E-6	IMPLEMENTATION
// RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9993837240754918	WITHOUT_CLASSIFICATION	6.162759245082557E-4	IMPLEMENTATION
// add all startup load paths to the list first	WITHOUT_CLASSIFICATION	0.9994321319555597	WITHOUT_CLASSIFICATION	5.678680444402851E-4	IMPLEMENTATION
// if it's a compiled JRuby script, instantiate and run it	WITHOUT_CLASSIFICATION	0.999697637574727	WITHOUT_CLASSIFICATION	3.0236242527294184E-4	IMPLEMENTATION
// wrap in try/catch for security exceptions in an applet	WITHOUT_CLASSIFICATION	0.999982919932442	WITHOUT_CLASSIFICATION	1.7080067557882868E-5	IMPLEMENTATION
// add $RUBYLIB paths	WITHOUT_CLASSIFICATION	0.9996514778910742	WITHOUT_CLASSIFICATION	3.485221089257818E-4	IMPLEMENTATION
// Empty paths do not need to be added	WITHOUT_CLASSIFICATION	0.6308021806298638	IMPLEMENTATION	0.3691978193701362	WITHOUT_CLASSIFICATION
// "." dir is used for relative path loads from a given file, as in require '../foo/bar'	WITHOUT_CLASSIFICATION	0.9999799465380925	WITHOUT_CLASSIFICATION	2.00534619075661E-5	IMPLEMENTATION
// Add 1.8 libs	WITHOUT_CLASSIFICATION	0.9988681231047513	WITHOUT_CLASSIFICATION	0.001131876895248697	IMPLEMENTATION
// Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.	WITHOUT_CLASSIFICATION	0.9999900701464841	WITHOUT_CLASSIFICATION	9.929853515940475E-6	IMPLEMENTATION
// Library has already been loaded in some form, bail out	WITHOUT_CLASSIFICATION	0.9999225502186613	WITHOUT_CLASSIFICATION	7.74497813387061E-5	IMPLEMENTATION
// We don't want a package name beginning with dots, so we remove them	WITHOUT_CLASSIFICATION	0.9995574552786286	WITHOUT_CLASSIFICATION	4.4254472137140576E-4	IMPLEMENTATION
// If there is a jar-file with the required name, we add this to the class path.	WITHOUT_CLASSIFICATION	0.9995721889440703	WITHOUT_CLASSIFICATION	4.2781105592980983E-4	IMPLEMENTATION
// quietly try to load the class	WITHOUT_CLASSIFICATION	0.9994201330126202	WITHOUT_CLASSIFICATION	5.798669873797754E-4	IMPLEMENTATION
// If there was a good library before, we go back to that	WITHOUT_CLASSIFICATION	0.9998994402906267	WITHOUT_CLASSIFICATION	1.0055970937321273E-4	IMPLEMENTATION
// no library or extension found, try to load directly as a class	WITHOUT_CLASSIFICATION	0.9989740566102112	WITHOUT_CLASSIFICATION	0.0010259433897888042	IMPLEMENTATION
// if an extension is specified, try more targetted searches	WITHOUT_CLASSIFICATION	0.9995002883552175	WITHOUT_CLASSIFICATION	4.997116447824427E-4	IMPLEMENTATION
// signed short, big-endian	WITHOUT_CLASSIFICATION	0.9996248990754202	WITHOUT_CLASSIFICATION	3.7510092457980053E-4	IMPLEMENTATION
// source extensions	WITHOUT_CLASSIFICATION	0.9995646306809302	WITHOUT_CLASSIFICATION	4.3536931906976953E-4	IMPLEMENTATION
// We don't support .so, but some stdlib require .so directly // replace it with .jar to look for an extension type we do support	WITHOUT_CLASSIFICATION	0.8679484909642716	WITHOUT_CLASSIFICATION	0.13205150903572838	IMPLEMENTATION
// This code exploits the fact that all .jar files will be found for the JarredScript feature. // This is where the basic extension mechanism gets fixed	WITHOUT_CLASSIFICATION	0.9989773392708162	WITHOUT_CLASSIFICATION	0.0010226607291837627	IMPLEMENTATION
// Make the class name look nice, by splitting on _ and capitalize each segment, then joining // the, together without anything separating them, and last put on "Service" at the end.	WITHOUT_CLASSIFICATION	0.997026688307553	WITHOUT_CLASSIFICATION	0.00297331169244691	IMPLEMENTATION
// It's _really_ expensive to check that the class actually exists in the Jar, so // we don't do that now.	WITHOUT_CLASSIFICATION	0.9998791114938667	WITHOUT_CLASSIFICATION	1.2088850613326754E-4	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9926958395192451	WITHOUT_CLASSIFICATION	0.0073041604807548444	IMPLEMENTATION
// extension extensions	WITHOUT_CLASSIFICATION	0.9993066023132038	WITHOUT_CLASSIFICATION	6.93397686796162E-4	IMPLEMENTATION
// unknown extension, fall back to search with extensions	WITHOUT_CLASSIFICATION	0.9976035516726851	WITHOUT_CLASSIFICATION	0.0023964483273149245	IMPLEMENTATION
// try all extensions	WITHOUT_CLASSIFICATION	0.9993185510570375	WITHOUT_CLASSIFICATION	6.814489429625525E-4	IMPLEMENTATION
// if a source extension is specified, try all source extensions	WITHOUT_CLASSIFICATION	0.9999352056520573	WITHOUT_CLASSIFICATION	6.479434794277892E-5	IMPLEMENTATION
// unknown extension, fall back to exact search	WITHOUT_CLASSIFICATION	0.9987160039344833	WITHOUT_CLASSIFICATION	0.0012839960655166584	IMPLEMENTATION
// try only literal search	WITHOUT_CLASSIFICATION	0.9995466783069782	WITHOUT_CLASSIFICATION	4.533216930219139E-4	IMPLEMENTATION
// attempt to load the found library	WITHOUT_CLASSIFICATION	0.9978790204953414	WITHOUT_CLASSIFICATION	0.0021209795046586866	IMPLEMENTATION
// otherwise load the library we've found	WITHOUT_CLASSIFICATION	0.9916614388716406	WITHOUT_CLASSIFICATION	0.008338561128359389	IMPLEMENTATION
// allow MainExitException to propagate out for exec and friends	WITHOUT_CLASSIFICATION	0.9998512528176208	WITHOUT_CLASSIFICATION	1.4874718237918618E-4	IMPLEMENTATION
// Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".	WITHOUT_CLASSIFICATION	0.9992977644946631	WITHOUT_CLASSIFICATION	7.022355053368898E-4	IMPLEMENTATION
// check current directory; if file exists, retrieve URL and return resource	WITHOUT_CLASSIFICATION	0.9984842089657625	WITHOUT_CLASSIFICATION	0.0015157910342374775	IMPLEMENTATION
// if a jar or file URL, return load service resource directly without further searching	WITHOUT_CLASSIFICATION	0.9997497804221557	WITHOUT_CLASSIFICATION	2.502195778442591E-4	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9994020264789268	WITHOUT_CLASSIFICATION	5.979735210730748E-4	IMPLEMENTATION
// if it's a ./ baseName, use CWD logic	WITHOUT_CLASSIFICATION	0.9995623643630523	WITHOUT_CLASSIFICATION	4.376356369477097E-4	IMPLEMENTATION
// if given path is absolute, just try it as-is (with extensions) and no load path	WITHOUT_CLASSIFICATION	0.9999686311679319	WITHOUT_CLASSIFICATION	3.1368832068149667E-5	IMPLEMENTATION
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9985532786567385	WITHOUT_CLASSIFICATION	0.001446721343261535	IMPLEMENTATION
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9985532786567385	WITHOUT_CLASSIFICATION	0.001446721343261535	IMPLEMENTATION
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9982633492779351	WITHOUT_CLASSIFICATION	0.0017366507220648176	IMPLEMENTATION
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9982633492779351	WITHOUT_CLASSIFICATION	0.0017366507220648176	IMPLEMENTATION
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9997039796528199	WITHOUT_CLASSIFICATION	2.9602034718011547E-4	IMPLEMENTATION
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9997039796528199	WITHOUT_CLASSIFICATION	2.9602034718011547E-4	IMPLEMENTATION
//                    actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));	WITHOUT_CLASSIFICATION	0.9994937368751502	WITHOUT_CLASSIFICATION	5.06263124849802E-4	IMPLEMENTATION
// handle security-sensitive case	WITHOUT_CLASSIFICATION	0.996024968442219	WITHOUT_CLASSIFICATION	0.0039750315577810795	IMPLEMENTATION
// if entry is an empty string, skip it	WITHOUT_CLASSIFICATION	0.9999518707240482	WITHOUT_CLASSIFICATION	4.812927595177438E-5	IMPLEMENTATION
// if entry starts with a slash, skip it since classloader resources never start with a /	WITHOUT_CLASSIFICATION	0.9971461019643557	WITHOUT_CLASSIFICATION	0.002853898035644249	IMPLEMENTATION
// otherwise, try to load from classpath (Note: Jar resources always uses '/')	WITHOUT_CLASSIFICATION	0.9996539740900197	WITHOUT_CLASSIFICATION	3.460259099804214E-4	IMPLEMENTATION
// Make sure this is not a directory or unavailable in some way	WITHOUT_CLASSIFICATION	0.9986752078709226	WITHOUT_CLASSIFICATION	0.0013247921290774685	IMPLEMENTATION
// signed short, native	WITHOUT_CLASSIFICATION	0.9996263063460543	WITHOUT_CLASSIFICATION	3.736936539457438E-4	IMPLEMENTATION
// If we fail to find as a normal Ruby script, we try to find as an extension, // checking for a builtin first.	WITHOUT_CLASSIFICATION	0.9998469888653205	WITHOUT_CLASSIFICATION	1.5301113467955076E-4	IMPLEMENTATION
// write `I' instance var signet if class is NOT a direct subclass of Object	WITHOUT_CLASSIFICATION	0.9999867367988229	WITHOUT_CLASSIFICATION	1.3263201177186829E-5	IMPLEMENTATION
// if name starts with a / we're done (classloader resources won't load with an initial /)	WITHOUT_CLASSIFICATION	0.9999990602086443	WITHOUT_CLASSIFICATION	9.397913558017803E-7	IMPLEMENTATION
// Look in classpath next (we do not use File as a test since UNC names will match) // Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")	WITHOUT_CLASSIFICATION	0.9998688680320497	WITHOUT_CLASSIFICATION	1.311319679502992E-4	IMPLEMENTATION
/* Directories and unavailable resources are not able to open a stream. */	WITHOUT_CLASSIFICATION	0.9997195361911241	WITHOUT_CLASSIFICATION	2.8046380887591005E-4	IMPLEMENTATION
// Try to load from classpath without prefix. "A/b.rb" will not load as  // "./A/b.rb" in a jar file.	WITHOUT_CLASSIFICATION	0.9998738442496695	WITHOUT_CLASSIFICATION	1.261557503303754E-4	IMPLEMENTATION
// object has instance vars and isn't a class, get a snapshot to be marshalled // and output the ivar header here	WITHOUT_CLASSIFICATION	0.9997624945386605	WITHOUT_CLASSIFICATION	2.3750546133956185E-4	IMPLEMENTATION
// flush afer whole dump is complete	WITHOUT_CLASSIFICATION	0.9991566178292979	WITHOUT_CLASSIFICATION	8.433821707021365E-4	IMPLEMENTATION
//            write('S');	WITHOUT_CLASSIFICATION	0.9997386509240671	WITHOUT_CLASSIFICATION	2.6134907593294095E-4	IMPLEMENTATION
// switch on the object's *native type*. This allows use-defined // classes that have extended core native types to piggyback on their // marshalling logic.	WITHOUT_CLASSIFICATION	0.9977015144087259	WITHOUT_CLASSIFICATION	0.0022984855912740886	IMPLEMENTATION
// object is a custom class that extended one of the native types other than Object	WITHOUT_CLASSIFICATION	0.998500123713013	WITHOUT_CLASSIFICATION	0.0014998762869869744	IMPLEMENTATION
// We do not want to capture cached methods	WITHOUT_CLASSIFICATION	0.9745738920952806	WITHOUT_CLASSIFICATION	0.025426107904719546	IMPLEMENTATION
// w_symbol	WITHOUT_CLASSIFICATION	0.9986385284494232	WITHOUT_CLASSIFICATION	0.001361471550576766	IMPLEMENTATION
// w_unique	WITHOUT_CLASSIFICATION	0.9986385284494232	WITHOUT_CLASSIFICATION	0.001361471550576766	IMPLEMENTATION
// call the proc, but not for symbols	WITHOUT_CLASSIFICATION	0.9990524857335372	WITHOUT_CLASSIFICATION	9.475142664628413E-4	IMPLEMENTATION
// Major // Minor	WITHOUT_CLASSIFICATION	0.9986385284494232	WITHOUT_CLASSIFICATION	0.001361471550576766	IMPLEMENTATION
// any ivars, since we don't have __attached__ ivar now	WITHOUT_CLASSIFICATION	0.9996538139855728	WITHOUT_CLASSIFICATION	3.46186014427088E-4	IMPLEMENTATION
// "hashdef" object, a hash with a default	WITHOUT_CLASSIFICATION	0.9998052909301169	WITHOUT_CLASSIFICATION	1.9470906988306239E-4	IMPLEMENTATION
// All "C" marshalled objects descend from core classes, which are all RubyObject	WITHOUT_CLASSIFICATION	0.9997627502086128	WITHOUT_CLASSIFICATION	2.3724979138711573E-4	IMPLEMENTATION
// sic	WITHOUT_CLASSIFICATION	0.999975778940229	WITHOUT_CLASSIFICATION	2.422105977089807E-5	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9998903401453584	WITHOUT_CLASSIFICATION	1.0965985464160437E-4	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9998903401453584	WITHOUT_CLASSIFICATION	1.0965985464160437E-4	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9998903401453584	WITHOUT_CLASSIFICATION	1.0965985464160437E-4	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9998720614938356	WITHOUT_CLASSIFICATION	1.2793850616447453E-4	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9998720614938356	WITHOUT_CLASSIFICATION	1.2793850616447453E-4	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9993766961618177	WITHOUT_CLASSIFICATION	6.23303838182348E-4	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9993766961618177	WITHOUT_CLASSIFICATION	6.23303838182348E-4	IMPLEMENTATION
/*     * If we are setting post arguments we can assume there are no pre or others     */	WITHOUT_CLASSIFICATION	0.9999929054447	WITHOUT_CLASSIFICATION	7.094555300031589E-6	IMPLEMENTATION
// XXX: 0xffff0000 on BE?	WITHOUT_CLASSIFICATION	0.995550157731646	WITHOUT_CLASSIFICATION	0.00444984226835393	IMPLEMENTATION
// unsigned short, native	WITHOUT_CLASSIFICATION	0.9996263063460543	WITHOUT_CLASSIFICATION	3.736936539457438E-4	IMPLEMENTATION
// int, native // long, native	WITHOUT_CLASSIFICATION	0.9996332240691064	WITHOUT_CLASSIFICATION	3.667759308935837E-4	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9998903401453584	WITHOUT_CLASSIFICATION	1.0965985464160437E-4	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9998903401453584	WITHOUT_CLASSIFICATION	1.0965985464160437E-4	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9998903401453584	WITHOUT_CLASSIFICATION	1.0965985464160437E-4	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9998720614938356	WITHOUT_CLASSIFICATION	1.2793850616447453E-4	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9998720614938356	WITHOUT_CLASSIFICATION	1.2793850616447453E-4	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9998720614938356	WITHOUT_CLASSIFICATION	1.2793850616447453E-4	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9993766961618177	WITHOUT_CLASSIFICATION	6.23303838182348E-4	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9993766961618177	WITHOUT_CLASSIFICATION	6.23303838182348E-4	IMPLEMENTATION
// Look for slash, starting from 'start' position, until 'end'.	WITHOUT_CLASSIFICATION	0.9999748451830269	WITHOUT_CLASSIFICATION	2.5154816973079763E-5	IMPLEMENTATION
// Our values holder (name of variables are kept in staticScope)	WITHOUT_CLASSIFICATION	0.9999994696594071	WITHOUT_CLASSIFICATION	5.30340592910433E-7	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9993538247838397	WITHOUT_CLASSIFICATION	6.461752161603348E-4	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9993538247838397	WITHOUT_CLASSIFICATION	6.461752161603348E-4	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9993538247838397	WITHOUT_CLASSIFICATION	6.461752161603348E-4	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9993538247838397	WITHOUT_CLASSIFICATION	6.461752161603348E-4	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9993538247838397	WITHOUT_CLASSIFICATION	6.461752161603348E-4	IMPLEMENTATION
// SunSignalFacade	WITHOUT_CLASSIFICATION	0.9986385284494232	WITHOUT_CLASSIFICATION	0.001361471550576766	IMPLEMENTATION
// All braces pushed..	WITHOUT_CLASSIFICATION	0.999654534368705	WITHOUT_CLASSIFICATION	3.4546563129506065E-4	IMPLEMENTATION
/* failed : try next recursion */	WITHOUT_CLASSIFICATION	0.9987761515608373	WITHOUT_CLASSIFICATION	0.0012238484391626746	IMPLEMENTATION
// leftToken made us start as nest 1	WITHOUT_CLASSIFICATION	0.9985729258707818	WITHOUT_CLASSIFICATION	0.001427074129218186	IMPLEMENTATION
// are we at '**/'	WITHOUT_CLASSIFICATION	0.9996380752315304	WITHOUT_CLASSIFICATION	3.6192476846971626E-4	IMPLEMENTATION
// No or mismatched braces..Move along..nothing to see here	WITHOUT_CLASSIFICATION	0.999378763745227	WITHOUT_CLASSIFICATION	6.21236254772869E-4	IMPLEMENTATION
// not enough bytes	WITHOUT_CLASSIFICATION	0.9794130522558415	WITHOUT_CLASSIFICATION	0.02058694774415847	IMPLEMENTATION
// Get index of last read byte	WITHOUT_CLASSIFICATION	0.9999260699983277	WITHOUT_CLASSIFICATION	7.393000167228745E-5	IMPLEMENTATION
// skip inner braces	WITHOUT_CLASSIFICATION	0.9962330691813934	WITHOUT_CLASSIFICATION	0.0037669308186065523	IMPLEMENTATION
/*     * Process {}'s (example: Dir.glob("{jruby,jython}/README*")      */	WITHOUT_CLASSIFICATION	0.9999297316165392	WITHOUT_CLASSIFICATION	7.026838346074696E-5	IMPLEMENTATION
/* complete, according to Posix.2 */	WITHOUT_CLASSIFICATION	0.9998656958707989	WITHOUT_CLASSIFICATION	1.3430412920107147E-4	IMPLEMENTATION
/* Only accept an open brace if there is a close */	WITHOUT_CLASSIFICATION	0.9999998914816443	WITHOUT_CLASSIFICATION	1.0851835584487219E-7	IMPLEMENTATION
/* brace to match it.  Bracket expressions must be */	WITHOUT_CLASSIFICATION	0.9999396074675658	WITHOUT_CLASSIFICATION	6.0392532434170944E-5	IMPLEMENTATION
// index of left-most brace // index of right-most brace	WITHOUT_CLASSIFICATION	0.9995072296300217	WITHOUT_CLASSIFICATION	4.927703699783781E-4	IMPLEMENTATION
// Length check is a hack.  We should not be reeiving "" as a filename ever. 	WITHOUT_CLASSIFICATION	0.9997218606000553	WITHOUT_CLASSIFICATION	2.781393999446983E-4	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9986748201207744	WITHOUT_CLASSIFICATION	0.0013251798792255798	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9986748201207744	WITHOUT_CLASSIFICATION	0.0013251798792255798	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9986748201207744	WITHOUT_CLASSIFICATION	0.0013251798792255798	IMPLEMENTATION
// Pickaxe says @ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9971015911211131	WITHOUT_CLASSIFICATION	0.0028984088788869666	IMPLEMENTATION
// Pickaxe says @@ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9971015911211131	WITHOUT_CLASSIFICATION	0.0028984088788869666	IMPLEMENTATION
// SimpleSampler	WITHOUT_CLASSIFICATION	0.9986385284494232	WITHOUT_CLASSIFICATION	0.001361471550576766	IMPLEMENTATION
/*     * convert into longs, returning unsigned 64-bit values as signed longs     * ( num2long raises a RangeError on values > Long.MAX_VALUE )     */	WITHOUT_CLASSIFICATION	0.9999963377544919	WITHOUT_CLASSIFICATION	3.662245508070414E-6	IMPLEMENTATION
// b64_xtable for decoding Base 64	WITHOUT_CLASSIFICATION	0.9996507382735615	WITHOUT_CLASSIFICATION	3.4926172643837876E-4	IMPLEMENTATION
// single precision, little-endian	WITHOUT_CLASSIFICATION	0.9984560073721939	WITHOUT_CLASSIFICATION	0.0015439926278061475	IMPLEMENTATION
// single precision, big-endian	WITHOUT_CLASSIFICATION	0.9984560073721939	WITHOUT_CLASSIFICATION	0.0015439926278061475	IMPLEMENTATION
// single precision, native	WITHOUT_CLASSIFICATION	0.9990604794174972	WITHOUT_CLASSIFICATION	9.395205825027793E-4	IMPLEMENTATION
// single precision, native // single precision, native	WITHOUT_CLASSIFICATION	0.9984617932397407	WITHOUT_CLASSIFICATION	0.0015382067602593432	IMPLEMENTATION
// double precision, little-endian	WITHOUT_CLASSIFICATION	0.9999338075827194	WITHOUT_CLASSIFICATION	6.619241728056911E-5	IMPLEMENTATION
// double precision, big-endian	WITHOUT_CLASSIFICATION	0.9999338075827194	WITHOUT_CLASSIFICATION	6.619241728056911E-5	IMPLEMENTATION
// double precision, native	WITHOUT_CLASSIFICATION	0.999959745194023	WITHOUT_CLASSIFICATION	4.025480597694349E-5	IMPLEMENTATION
// signed short, little-endian	WITHOUT_CLASSIFICATION	0.9996248990754202	WITHOUT_CLASSIFICATION	3.7510092457980053E-4	IMPLEMENTATION
// signed char	WITHOUT_CLASSIFICATION	0.9992746216480828	WITHOUT_CLASSIFICATION	7.253783519171344E-4	IMPLEMENTATION
// unsigned char	WITHOUT_CLASSIFICATION	0.9992746216480828	WITHOUT_CLASSIFICATION	7.253783519171344E-4	IMPLEMENTATION
// long, little-endian	WITHOUT_CLASSIFICATION	0.9996237203449804	WITHOUT_CLASSIFICATION	3.7627965501967623E-4	IMPLEMENTATION
// long, big-endian	WITHOUT_CLASSIFICATION	0.9986385284494232	WITHOUT_CLASSIFICATION	0.001361471550576766	IMPLEMENTATION
// unsigned int, native	WITHOUT_CLASSIFICATION	0.9996332240691064	WITHOUT_CLASSIFICATION	3.667759308935837E-4	IMPLEMENTATION
// int, native	WITHOUT_CLASSIFICATION	0.9986728822056765	WITHOUT_CLASSIFICATION	0.0013271177943235287	IMPLEMENTATION
// 64-bit number, native (as fixnum)	WITHOUT_CLASSIFICATION	0.999464706961043	WITHOUT_CLASSIFICATION	5.352930389569759E-4	IMPLEMENTATION
// How many occurrences of 'type' we want	WITHOUT_CLASSIFICATION	0.998659932418041	WITHOUT_CLASSIFICATION	0.0013400675819589976	IMPLEMENTATION
// See if we have a converter for the job...	WITHOUT_CLASSIFICATION	0.9999568020918993	WITHOUT_CLASSIFICATION	4.31979081006705E-5	IMPLEMENTATION
// Otherwise the unpack should be here...	WITHOUT_CLASSIFICATION	0.9995302214150791	WITHOUT_CLASSIFICATION	4.6977858492094107E-4	IMPLEMENTATION
// Possible Checksum Byte	WITHOUT_CLASSIFICATION	0.9995995873577863	WITHOUT_CLASSIFICATION	4.004126422137096E-4	IMPLEMENTATION
// obtain a	WITHOUT_CLASSIFICATION	0.9988987383803517	WITHOUT_CLASSIFICATION	0.001101261619648302	IMPLEMENTATION
// obtain b	WITHOUT_CLASSIFICATION	0.998910553549011	WITHOUT_CLASSIFICATION	0.0010894464509889528	IMPLEMENTATION
// obtain c	WITHOUT_CLASSIFICATION	0.9990053898923325	WITHOUT_CLASSIFICATION	9.946101076675326E-4	IMPLEMENTATION
// obtain d	WITHOUT_CLASSIFICATION	0.9986865544961904	WITHOUT_CLASSIFICATION	0.001313445503809698	IMPLEMENTATION
/*encode.limit() - */	WITHOUT_CLASSIFICATION	0.999542371824542	WITHOUT_CLASSIFICATION	4.576281754581492E-4	IMPLEMENTATION
/* 1 */	WITHOUT_CLASSIFICATION	0.9999966243974188	WITHOUT_CLASSIFICATION	3.3756025811172004E-6	IMPLEMENTATION
/* 2 */	WITHOUT_CLASSIFICATION	0.9999988221319395	WITHOUT_CLASSIFICATION	1.1778680604643775E-6	IMPLEMENTATION
/* 3 */	WITHOUT_CLASSIFICATION	0.9999983432462546	WITHOUT_CLASSIFICATION	1.6567537454519499E-6	IMPLEMENTATION
/* 4 */	WITHOUT_CLASSIFICATION	0.999997364616966	WITHOUT_CLASSIFICATION	2.6353830339886115E-6	IMPLEMENTATION
/* 5 */	WITHOUT_CLASSIFICATION	0.9999984406737293	WITHOUT_CLASSIFICATION	1.5593262706606186E-6	IMPLEMENTATION
/* 6 */	WITHOUT_CLASSIFICATION	0.99999760737604	WITHOUT_CLASSIFICATION	2.3926239600876208E-6	IMPLEMENTATION
/* 7 */	WITHOUT_CLASSIFICATION	0.9999970466512773	WITHOUT_CLASSIFICATION	2.9533487227437518E-6	IMPLEMENTATION
// Skip all whitespace in pack format string	WITHOUT_CLASSIFICATION	0.999988101120247	WITHOUT_CLASSIFICATION	1.189887975297888E-5	IMPLEMENTATION
// Skip embedded comments in pack format string	WITHOUT_CLASSIFICATION	0.9999923745546805	WITHOUT_CLASSIFICATION	7.625445319548345E-6	IMPLEMENTATION
// In case when the number of occurences is // explicitly specified, we have to read up // the remaining garbage after the '\0' to // satisfy the requested pattern.	WITHOUT_CLASSIFICATION	0.9995376738014051	WITHOUT_CLASSIFICATION	4.623261985948599E-4	IMPLEMENTATION
//normal exit, this should be faster than a test at each iterations for string with more than //about 40 char	WITHOUT_CLASSIFICATION	0.9999756841021598	WITHOUT_CLASSIFICATION	2.4315897840276227E-5	IMPLEMENTATION
// We encountered '\0' when // were reading the buffer above, // increment the number of read bytes.	WITHOUT_CLASSIFICATION	0.9998751345844517	WITHOUT_CLASSIFICATION	1.2486541554846336E-4	IMPLEMENTATION
// MRI behavior: Contrary to what seems to be logical, // when '*' is given, MRI calculates the distance // to the end, in order to go backwards.	WITHOUT_CLASSIFICATION	0.9999648869085034	WITHOUT_CLASSIFICATION	3.51130914966574E-5	IMPLEMENTATION
// Determine how many of type are needed (default: 1)	WITHOUT_CLASSIFICATION	0.8438237309128452	IMPLEMENTATION	0.15617626908715485	WITHOUT_CLASSIFICATION
// 'Z' adds extra null pad (versus 'a')	WITHOUT_CLASSIFICATION	0.9989669675281492	WITHOUT_CLASSIFICATION	0.0010330324718507461	IMPLEMENTATION
//if the low bit is set //set the high bit of the result	WITHOUT_CLASSIFICATION	0.9996672451099585	WITHOUT_CLASSIFICATION	3.327548900414264E-4	IMPLEMENTATION
//if the index is not a multiple of 8, we are not on a byte boundary //shift the byte	WITHOUT_CLASSIFICATION	0.9928414123327266	WITHOUT_CLASSIFICATION	0.007158587667273342	IMPLEMENTATION
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9825624967308408	WITHOUT_CLASSIFICATION	0.017437503269159216	IMPLEMENTATION
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9825624967308408	WITHOUT_CLASSIFICATION	0.017437503269159216	IMPLEMENTATION
//do some padding, I don't understand the padding strategy	WITHOUT_CLASSIFICATION	0.9962272167018927	WITHOUT_CLASSIFICATION	0.0037727832981072447	IMPLEMENTATION
// we filled up current byte; append it and create next one	WITHOUT_CLASSIFICATION	0.9967317091160033	WITHOUT_CLASSIFICATION	0.003268290883996666	IMPLEMENTATION
//if the index is not a multiple of 8, we are not on a byte boundary	WITHOUT_CLASSIFICATION	0.9928414123327266	WITHOUT_CLASSIFICATION	0.007158587667273342	IMPLEMENTATION
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9999994254697315	WITHOUT_CLASSIFICATION	5.745302684329136E-7	IMPLEMENTATION
// we don't deal with negatives.	WITHOUT_CLASSIFICATION	0.9974039959050205	WITHOUT_CLASSIFICATION	0.0025960040949793892	IMPLEMENTATION
// populate commandline with NG-provided stuff	WITHOUT_CLASSIFICATION	0.9978104318652589	WITHOUT_CLASSIFICATION	0.0021895681347411317	IMPLEMENTATION
// are we recursing?	WITHOUT_CLASSIFICATION	0.9988718715600143	WITHOUT_CLASSIFICATION	0.0011281284399856026	IMPLEMENTATION
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999931777828364	WITHOUT_CLASSIFICATION	6.822217163630217E-6	IMPLEMENTATION
// default PidGetter	WITHOUT_CLASSIFICATION	0.9997155175870687	WITHOUT_CLASSIFICATION	2.844824129313319E-4	IMPLEMENTATION
// ignore and try windows version	WITHOUT_CLASSIFICATION	0.9993694399611958	WITHOUT_CLASSIFICATION	6.305600388041626E-4	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.999612965520991	WITHOUT_CLASSIFICATION	3.8703447900898636E-4	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.999612965520991	WITHOUT_CLASSIFICATION	3.8703447900898636E-4	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.999612965520991	WITHOUT_CLASSIFICATION	3.8703447900898636E-4	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.999612965520991	WITHOUT_CLASSIFICATION	3.8703447900898636E-4	IMPLEMENTATION
// try both	WITHOUT_CLASSIFICATION	0.9978804325857712	WITHOUT_CLASSIFICATION	0.0021195674142287977	IMPLEMENTATION
// just unix	WITHOUT_CLASSIFICATION	0.9996741552880883	WITHOUT_CLASSIFICATION	3.2584471191157005E-4	IMPLEMENTATION
// just windows	WITHOUT_CLASSIFICATION	0.9997187143429564	WITHOUT_CLASSIFICATION	2.8128565704358077E-4	IMPLEMENTATION
// neither	WITHOUT_CLASSIFICATION	0.9999758194878325	WITHOUT_CLASSIFICATION	2.4180512167400395E-5	IMPLEMENTATION
// CON: popen is a case where I think we should just always shell out.	WITHOUT_CLASSIFICATION	0.9930142498937023	WITHOUT_CLASSIFICATION	0.0069857501062977135	IMPLEMENTATION
// single string command, pass to sh to expand wildcards	WITHOUT_CLASSIFICATION	0.999736148883654	WITHOUT_CLASSIFICATION	2.6385111634597144E-4	IMPLEMENTATION
// direct invocation of the command	WITHOUT_CLASSIFICATION	0.9996843446362242	WITHOUT_CLASSIFICATION	3.1565536377565963E-4	IMPLEMENTATION
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9998390522450262	WITHOUT_CLASSIFICATION	1.6094775497367206E-4	IMPLEMENTATION
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9998390522450262	WITHOUT_CLASSIFICATION	1.6094775497367206E-4	IMPLEMENTATION
// close process output // See JRUBY-3405; hooking up to parent process stdin caused // problems for IRB etc using stdin.	WITHOUT_CLASSIFICATION	0.999961533401101	WITHOUT_CLASSIFICATION	3.846659889892785E-5	IMPLEMENTATION
// ignore, we're on the way out	WITHOUT_CLASSIFICATION	0.9995065164570772	WITHOUT_CLASSIFICATION	4.93483542922779E-4	IMPLEMENTATION
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9988117998441216	WITHOUT_CLASSIFICATION	0.0011882001558783798	IMPLEMENTATION
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999395407339451	WITHOUT_CLASSIFICATION	6.045926605487137E-5	IMPLEMENTATION
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999395407339451	WITHOUT_CLASSIFICATION	6.045926605487137E-5	IMPLEMENTATION
// popen caller wants to be able to write, provide subprocess out directly	WITHOUT_CLASSIFICATION	0.9998094521063973	WITHOUT_CLASSIFICATION	1.9054789360276384E-4	IMPLEMENTATION
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9995555434378539	WITHOUT_CLASSIFICATION	4.44456562146011E-4	IMPLEMENTATION
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9995555434378539	WITHOUT_CLASSIFICATION	4.44456562146011E-4	IMPLEMENTATION
// execute command with sh -c // this does shell expansion of wildcards	WITHOUT_CLASSIFICATION	0.9996476151221745	WITHOUT_CLASSIFICATION	3.5238487782558053E-4	IMPLEMENTATION
// We need to close the out, since some // processes would just wait for the stream // to be closed before they process its content, // and produce the output. E.g.: "cat".	WITHOUT_CLASSIFICATION	0.99995184815628	WITHOUT_CLASSIFICATION	4.815184371992515E-5	IMPLEMENTATION
// we only close out if it's the slave stream, to avoid // closing a directly-mapped stream from parent process	WITHOUT_CLASSIFICATION	0.9999298476621022	WITHOUT_CLASSIFICATION	7.015233789769245E-5	IMPLEMENTATION
// The assumption here is that the 'in' stream provides // proper available() support. If available() always // returns 0, we'll hang!	WITHOUT_CLASSIFICATION	0.9937024579187211	WITHOUT_CLASSIFICATION	0.006297542081278815	IMPLEMENTATION
// Force t3 to quit, just in case if it's stuck. // Note: On some platforms, even interrupt might not // have an effect if the thread is IO blocked.	WITHOUT_CLASSIFICATION	0.9999520105956672	WITHOUT_CLASSIFICATION	4.798940433286006E-5	IMPLEMENTATION
// Check for special shell characters [<>|] at the beginning // and end of each command word and don't run in process if we find them.	WITHOUT_CLASSIFICATION	0.999993851846074	WITHOUT_CLASSIFICATION	6.14815392606337E-6	IMPLEMENTATION
// Note: this method produces meaningful results // only for RubyIO objects. For everything else returns 0.	WITHOUT_CLASSIFICATION	0.9863794843852938	WITHOUT_CLASSIFICATION	0.01362051561470622	IMPLEMENTATION
//sequential	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
// reverse the entire area of the array selected if it's reversed.	WITHOUT_CLASSIFICATION	0.9999097560909211	WITHOUT_CLASSIFICATION	9.024390907878717E-5	IMPLEMENTATION
// do median of 7 if the array is over 200 elements.	WITHOUT_CLASSIFICATION	0.9999611443220259	WITHOUT_CLASSIFICATION	3.885567797408308E-5	IMPLEMENTATION
// if it's less than 200 do median of 3	WITHOUT_CLASSIFICATION	0.9997882561757685	WITHOUT_CLASSIFICATION	2.1174382423135713E-4	IMPLEMENTATION
// SignalFacade	WITHOUT_CLASSIFICATION	0.9986385284494232	WITHOUT_CLASSIFICATION	0.001361471550576766	IMPLEMENTATION
// this is the order in which MRI does these two tests	WITHOUT_CLASSIFICATION	0.999958323174866	WITHOUT_CLASSIFICATION	4.1676825134053524E-5	IMPLEMENTATION
// this is the order in which MRI does these tests	WITHOUT_CLASSIFICATION	0.9999841976997843	WITHOUT_CLASSIFICATION	1.580230021569031E-5	IMPLEMENTATION
// basically just forcing a TypeError here to match MRI	WITHOUT_CLASSIFICATION	0.9994875512629298	WITHOUT_CLASSIFICATION	5.124487370702428E-4	IMPLEMENTATION
// not saving DFS instance, as it will only be used once (at most) per call	WITHOUT_CLASSIFICATION	0.9837299787682469	WITHOUT_CLASSIFICATION	0.016270021231753095	IMPLEMENTATION
// Args	WITHOUT_CLASSIFICATION	0.999975778940229	WITHOUT_CLASSIFICATION	2.422105977089807E-5	IMPLEMENTATION
// static methods only	WITHOUT_CLASSIFICATION	0.9994740356066638	WITHOUT_CLASSIFICATION	5.25964393336194E-4	IMPLEMENTATION
//System.err.println(" calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9992236933361787	WITHOUT_CLASSIFICATION	7.763066638213169E-4	IMPLEMENTATION
// MRI 1.8.6 behavior: null byte after '%' // leads to "%" string. Null byte in // other places, like "%5\0", leads to error.	WITHOUT_CLASSIFICATION	0.9968436276012552	WITHOUT_CLASSIFICATION	0.003156372398744656	IMPLEMENTATION
// last index (+1) accessed by next() // last index (+1) accessed by get()	WITHOUT_CLASSIFICATION	0.9984693908372133	WITHOUT_CLASSIFICATION	0.0015306091627866965	IMPLEMENTATION
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly.	WITHOUT_CLASSIFICATION	0.9997210463946633	WITHOUT_CLASSIFICATION	2.78953605336745E-4	IMPLEMENTATION
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly. Version for 1.9.	WITHOUT_CLASSIFICATION	0.9998405524799797	WITHOUT_CLASSIFICATION	1.594475200203267E-4	IMPLEMENTATION
// MRI doesn't flag it as an error if width is given multiple // times as a number (but it does for *)	WITHOUT_CLASSIFICATION	0.9999834695650988	WITHOUT_CLASSIFICATION	1.6530434901265102E-5	IMPLEMENTATION
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999535049882087	WITHOUT_CLASSIFICATION	4.649501179129442E-5	IMPLEMENTATION
// MRI 1.8.5-p12 doesn't support 1-char strings, but // YARV 0.4.1 does. I don't think it hurts to include // this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])	WITHOUT_CLASSIFICATION	0.9973123056775991	WITHOUT_CLASSIFICATION	0.0026876943224009714	IMPLEMENTATION
// 'd' and 'i' are the same	WITHOUT_CLASSIFICATION	0.9998992149848005	WITHOUT_CLASSIFICATION	1.007850151994795E-4	IMPLEMENTATION
// 'u' with space or plus flags is same as 'd'	WITHOUT_CLASSIFICATION	0.999640621773198	WITHOUT_CLASSIFICATION	3.593782268019889E-4	IMPLEMENTATION
// We depart here from strict adherence to MRI code, as MRI // uses C-sprintf, in part, to format numeric output, while // we'll use Java's numeric formatting code (and our own).	WITHOUT_CLASSIFICATION	0.9999489440050776	WITHOUT_CLASSIFICATION	5.105599492232401E-5	IMPLEMENTATION
// skip '-' in bytes, will add where appropriate	WITHOUT_CLASSIFICATION	0.9995982174221251	WITHOUT_CLASSIFICATION	4.0178257787490607E-4	IMPLEMENTATION
// ..	WITHOUT_CLASSIFICATION	0.999975830504819	WITHOUT_CLASSIFICATION	2.4169495180980708E-5	IMPLEMENTATION
// the 1 is for the stripped sign char	WITHOUT_CLASSIFICATION	0.9998843833766924	WITHOUT_CLASSIFICATION	1.1561662330772125E-4	IMPLEMENTATION
// FIXME: what is correct 'recv' argument? // (this does produce the desired behavior)	WITHOUT_CLASSIFICATION	0.9977847539474266	WITHOUT_CLASSIFICATION	0.0022152460525734145	IMPLEMENTATION
// gotta have at least a zero...	WITHOUT_CLASSIFICATION	0.9998559179989419	WITHOUT_CLASSIFICATION	1.440820010581156E-4	IMPLEMENTATION
// OK, we now have the significand in digits[0...nDigits] // and the exponent in exponent.  We're ready to format.	WITHOUT_CLASSIFICATION	0.9999051845255399	WITHOUT_CLASSIFICATION	9.48154744600758E-5	IMPLEMENTATION
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9999265919526998	WITHOUT_CLASSIFICATION	7.340804730007484E-5	IMPLEMENTATION
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9997392009629321	WITHOUT_CLASSIFICATION	2.6079903706795E-4	IMPLEMENTATION
//System.err.println(" stringToLong/reading c=" + data[s]);	WITHOUT_CLASSIFICATION	0.9992236933361787	WITHOUT_CLASSIFICATION	7.763066638213169E-4	IMPLEMENTATION
//System.err.println(" stringToLong/converted c=" + c);	WITHOUT_CLASSIFICATION	0.9992642834724471	WITHOUT_CLASSIFICATION	7.357165275528305E-4	IMPLEMENTATION
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9999265919526998	WITHOUT_CLASSIFICATION	7.340804730007484E-5	IMPLEMENTATION
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9997392009629321	WITHOUT_CLASSIFICATION	2.6079903706795E-4	IMPLEMENTATION
// precision for G/g includes integer digits	WITHOUT_CLASSIFICATION	0.9996575446062047	WITHOUT_CLASSIFICATION	3.4245539379527083E-4	IMPLEMENTATION
// deal with length/width	WITHOUT_CLASSIFICATION	0.9989940182986348	WITHOUT_CLASSIFICATION	0.0010059817013652703	IMPLEMENTATION
// deal with length/width	WITHOUT_CLASSIFICATION	0.9989940182986348	WITHOUT_CLASSIFICATION	0.0010059817013652703	IMPLEMENTATION
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9993590385343453	WITHOUT_CLASSIFICATION	6.4096146565462E-4	IMPLEMENTATION
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.999794094735245	WITHOUT_CLASSIFICATION	2.0590526475491224E-4	IMPLEMENTATION
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999890422558632	WITHOUT_CLASSIFICATION	1.0957744136702929E-5	IMPLEMENTATION
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.999932929727394	WITHOUT_CLASSIFICATION	6.707027260599044E-5	IMPLEMENTATION
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9998813927739303	WITHOUT_CLASSIFICATION	1.1860722606968485E-4	IMPLEMENTATION
// MRI behavior: In this mode // trailing zeroes are removed: // 1.500E+05 -> 1.5E+05 	WITHOUT_CLASSIFICATION	0.999969310486627	WITHOUT_CLASSIFICATION	3.068951337309693E-5	IMPLEMENTATION
// '.' is printed	WITHOUT_CLASSIFICATION	0.9990930409283942	WITHOUT_CLASSIFICATION	9.069590716058297E-4	IMPLEMENTATION
// all precision numebers printed	WITHOUT_CLASSIFICATION	0.9991082603016812	WITHOUT_CLASSIFICATION	8.917396983188365E-4	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9987284419743948	WITHOUT_CLASSIFICATION	0.0012715580256050937	IMPLEMENTATION
// '.'	WITHOUT_CLASSIFICATION	0.999975778940229	WITHOUT_CLASSIFICATION	2.422105977089807E-5	IMPLEMENTATION
// decimal form, like (but not *just* like!) 'f'	WITHOUT_CLASSIFICATION	0.904686993179023	WITHOUT_CLASSIFICATION	0.09531300682097703	IMPLEMENTATION
// digits array shifted, update all	WITHOUT_CLASSIFICATION	0.999752781171005	WITHOUT_CLASSIFICATION	2.472188289950413E-4	IMPLEMENTATION
// will have a trailing '.' // g fills trailing zeroes if #	WITHOUT_CLASSIFICATION	0.9999278848180466	WITHOUT_CLASSIFICATION	7.211518195336012E-5	IMPLEMENTATION
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9997819304400082	WITHOUT_CLASSIFICATION	2.1806955999185192E-4	IMPLEMENTATION
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9997819304400082	WITHOUT_CLASSIFICATION	2.1806955999185192E-4	IMPLEMENTATION
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9996127587782397	WITHOUT_CLASSIFICATION	3.872412217602826E-4	IMPLEMENTATION
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9996127587782397	WITHOUT_CLASSIFICATION	3.872412217602826E-4	IMPLEMENTATION
// digits arr shifted, update all	WITHOUT_CLASSIFICATION	0.9996728160225333	WITHOUT_CLASSIFICATION	3.271839774666645E-4	IMPLEMENTATION
// (1|intlen).prec	WITHOUT_CLASSIFICATION	0.9986385284494232	WITHOUT_CLASSIFICATION	0.001361471550576766	IMPLEMENTATION
// (1|intlen)	WITHOUT_CLASSIFICATION	0.9986385284494232	WITHOUT_CLASSIFICATION	0.001361471550576766	IMPLEMENTATION
// will have a trailing '.'	WITHOUT_CLASSIFICATION	0.9997727171294927	WITHOUT_CLASSIFICATION	2.272828705072712E-4	IMPLEMENTATION
// fill up the rest with zeroes	WITHOUT_CLASSIFICATION	0.9994495435706039	WITHOUT_CLASSIFICATION	5.504564293960786E-4	IMPLEMENTATION
//System.err.println(" main/len=" + len);	WITHOUT_CLASSIFICATION	0.9992236933361787	WITHOUT_CLASSIFICATION	7.763066638213169E-4	IMPLEMENTATION
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999890422558632	WITHOUT_CLASSIFICATION	1.0957744136702929E-5	IMPLEMENTATION
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.999932929727394	WITHOUT_CLASSIFICATION	6.707027260599044E-5	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9987284419743948	WITHOUT_CLASSIFICATION	0.0012715580256050937	IMPLEMENTATION
// '.'	WITHOUT_CLASSIFICATION	0.999975778940229	WITHOUT_CLASSIFICATION	2.422105977089807E-5	IMPLEMENTATION
// equivalent to MRI case '\0':	WITHOUT_CLASSIFICATION	0.9954855409742284	WITHOUT_CLASSIFICATION	0.004514459025771631	IMPLEMENTATION
// '.' and all precision digits printed	WITHOUT_CLASSIFICATION	0.9993070826805024	WITHOUT_CLASSIFICATION	6.929173194976134E-4	IMPLEMENTATION
// \v	WITHOUT_CLASSIFICATION	0.999975778940229	WITHOUT_CLASSIFICATION	2.422105977089807E-5	IMPLEMENTATION
// dangling '%' char	WITHOUT_CLASSIFICATION	0.9992746216480828	WITHOUT_CLASSIFICATION	7.253783519171344E-4	IMPLEMENTATION
// main while loop (offset < length)	WITHOUT_CLASSIFICATION	0.9995774931718433	WITHOUT_CLASSIFICATION	4.2250682815670517E-4	IMPLEMENTATION
// debugging code, keeping for now	WITHOUT_CLASSIFICATION	0.9998564158561412	WITHOUT_CLASSIFICATION	1.435841438588999E-4	IMPLEMENTATION
// MRI rounds up on nnn5nnn, but not nnn5 -- // except for when they do	WITHOUT_CLASSIFICATION	0.9990104084040496	WITHOUT_CLASSIFICATION	9.895915959504417E-4	IMPLEMENTATION
// "%.0f" % 0.99	WITHOUT_CLASSIFICATION	0.998686860269624	WITHOUT_CLASSIFICATION	0.0013131397303759193	IMPLEMENTATION
// limit the length of negatives if possible (also faster)	WITHOUT_CLASSIFICATION	0.9999330863329069	WITHOUT_CLASSIFICATION	6.691366709313829E-5	IMPLEMENTATION
// negative values	WITHOUT_CLASSIFICATION	0.9999345219981824	WITHOUT_CLASSIFICATION	6.54780018174727E-5	IMPLEMENTATION
// calculation for negatives when %u specified // for values >= Integer.MIN_VALUE * 2, MRI uses (the equivalent of) //   long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val // for smaller values, BigInteger math is required to conform to MRI's // result.	WITHOUT_CLASSIFICATION	0.9997671023335326	WITHOUT_CLASSIFICATION	2.3289766646740237E-4	IMPLEMENTATION
// relatively cheap test for 32-bit values	WITHOUT_CLASSIFICATION	0.9999975144730303	WITHOUT_CLASSIFICATION	2.4855269695801833E-6	IMPLEMENTATION
// no such luck...	WITHOUT_CLASSIFICATION	0.9988347990220937	WITHOUT_CLASSIFICATION	0.0011652009779062843	IMPLEMENTATION
// ok, now it gets expensive...	WITHOUT_CLASSIFICATION	0.9992523590970319	WITHOUT_CLASSIFICATION	7.476409029680705E-4	IMPLEMENTATION
// go through negated powers of 32 until we find one small enough 	WITHOUT_CLASSIFICATION	0.9997330821689797	WITHOUT_CLASSIFICATION	2.6691783102034393E-4	IMPLEMENTATION
// add to the corresponding positive power of 32 for the result. // meaningful? no. conformant? yes. I just write the code...	WITHOUT_CLASSIFICATION	0.9994729783632621	WITHOUT_CLASSIFICATION	5.270216367379428E-4	IMPLEMENTATION
/* constant vector a */	WITHOUT_CLASSIFICATION	0.9999515813929986	WITHOUT_CLASSIFICATION	4.841860700147945E-5	IMPLEMENTATION
/* most significant w-r bits */	WITHOUT_CLASSIFICATION	0.9997947591071661	WITHOUT_CLASSIFICATION	2.0524089283394348E-4	IMPLEMENTATION
/* least significant r bits */	WITHOUT_CLASSIFICATION	0.9999619126408413	WITHOUT_CLASSIFICATION	3.808735915860948E-5	IMPLEMENTATION
// state[j] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9996237203449804	WITHOUT_CLASSIFICATION	3.7627965501967623E-4	IMPLEMENTATION
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9996237203449804	WITHOUT_CLASSIFICATION	3.7627965501967623E-4	IMPLEMENTATION
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9996237203449804	WITHOUT_CLASSIFICATION	3.7627965501967623E-4	IMPLEMENTATION
/* MSB is 1; assuring non-zero initial array */	WITHOUT_CLASSIFICATION	0.9999656780428877	WITHOUT_CLASSIFICATION	3.432195711222541E-5	IMPLEMENTATION
/* Tempering */	WITHOUT_CLASSIFICATION	0.9998335097239774	WITHOUT_CLASSIFICATION	1.6649027602250264E-4	IMPLEMENTATION
// MRI behavior: Week values are monotonous. // So, weeks that effectively belong to previous year, // will get the value of 0, not 52 or 53, as in Java.	WITHOUT_CLASSIFICATION	0.9999911147214785	WITHOUT_CLASSIFICATION	8.88527852149518E-6	IMPLEMENTATION
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9992236933361787	WITHOUT_CLASSIFICATION	7.763066638213169E-4	IMPLEMENTATION
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9992236933361787	WITHOUT_CLASSIFICATION	7.763066638213169E-4	IMPLEMENTATION
// \v	WITHOUT_CLASSIFICATION	0.999975778940229	WITHOUT_CLASSIFICATION	2.422105977089807E-5	IMPLEMENTATION
//System.err.println("getSign()");	WITHOUT_CLASSIFICATION	0.9989612992561224	WITHOUT_CLASSIFICATION	0.0010387007438775661	IMPLEMENTATION
//System.err.println(" getSign/" + sign);	WITHOUT_CLASSIFICATION	0.9992236933361787	WITHOUT_CLASSIFICATION	7.763066638213169E-4	IMPLEMENTATION
//System.err.println("figureOutBase()/base=" + base);	WITHOUT_CLASSIFICATION	0.9992236933361787	WITHOUT_CLASSIFICATION	7.763066638213169E-4	IMPLEMENTATION
//System.err.println(" figureOutBase/base=" + base);	WITHOUT_CLASSIFICATION	0.9992236933361787	WITHOUT_CLASSIFICATION	7.763066638213169E-4	IMPLEMENTATION
//System.err.println("calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9992236933361787	WITHOUT_CLASSIFICATION	7.763066638213169E-4	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999591600903001	WITHOUT_CLASSIFICATION	4.083990969988955E-5	IMPLEMENTATION
//System.err.println(" stringToLong=" + val);	WITHOUT_CLASSIFICATION	0.9992236933361787	WITHOUT_CLASSIFICATION	7.763066638213169E-4	IMPLEMENTATION
// no number	WITHOUT_CLASSIFICATION	0.9989200191964579	WITHOUT_CLASSIFICATION	0.0010799808035420254	IMPLEMENTATION
// trailing garbage	WITHOUT_CLASSIFICATION	0.9975559457504327	WITHOUT_CLASSIFICATION	0.0024440542495673696	IMPLEMENTATION
//System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);	WITHOUT_CLASSIFICATION	0.9980849689182926	WITHOUT_CLASSIFICATION	0.0019150310817074721	IMPLEMENTATION
// it was not found at all!	WITHOUT_CLASSIFICATION	0.9992461227323899	WITHOUT_CLASSIFICATION	7.538772676101576E-4	IMPLEMENTATION
// can be overridden to be informed when objects are removed	WITHOUT_CLASSIFICATION	0.9950928259509803	WITHOUT_CLASSIFICATION	0.004907174049019811	IMPLEMENTATION
// we reached the end of a list	WITHOUT_CLASSIFICATION	0.9994598888073273	WITHOUT_CLASSIFICATION	5.401111926727488E-4	IMPLEMENTATION
// goto next bucket	WITHOUT_CLASSIFICATION	0.9963191401234491	WITHOUT_CLASSIFICATION	0.003680859876550923	IMPLEMENTATION
// we reached the end	WITHOUT_CLASSIFICATION	0.9992037574739479	WITHOUT_CLASSIFICATION	7.962425260522177E-4	IMPLEMENTATION
// entry is the first element of this bucket	WITHOUT_CLASSIFICATION	0.9998132283384475	WITHOUT_CLASSIFICATION	1.867716615523717E-4	IMPLEMENTATION
// states	WITHOUT_CLASSIFICATION	0.9999442303557644	WITHOUT_CLASSIFICATION	5.57696442356281E-5	IMPLEMENTATION
// remove leading whitespace (includes _ for lax) // get sign, if any	WITHOUT_CLASSIFICATION	0.9999812184637384	WITHOUT_CLASSIFICATION	1.8781536261612565E-5	IMPLEMENTATION
// optimistic pass - calculate value as digits are processed // digits - lax rules // decimal digits - lax rules // exponent sign/digits - lax rules // digits - strict rules // decimal digits - strict rules // exponent sign/digits - strict rules // complete calculation if possible	WITHOUT_CLASSIFICATION	0.9999391428078511	WITHOUT_CLASSIFICATION	6.085719214900907E-5	IMPLEMENTATION
// fields used for direct (optimistic) calculation // number of significant digits, updated as parsed // zeroes that may go to significand or exponent // offset of decimal pt from start (-1 -> no decimal) // significand, updated as parsed // exponent, updated as parsed	WITHOUT_CLASSIFICATION	0.999997183733501	WITHOUT_CLASSIFICATION	2.8162664990242207E-6	IMPLEMENTATION
// drop through for sign	WITHOUT_CLASSIFICATION	0.9998065432486436	WITHOUT_CLASSIFICATION	1.9345675135644145E-4	IMPLEMENTATION
// switch // will use this if we have to go back the slow way	WITHOUT_CLASSIFICATION	0.9992857653400833	WITHOUT_CLASSIFICATION	7.142346599166124E-4	IMPLEMENTATION
// drop through for non-strict digits	WITHOUT_CLASSIFICATION	0.9996831169430586	WITHOUT_CLASSIFICATION	3.168830569413427E-4	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9994305311224104	WITHOUT_CLASSIFICATION	5.694688775897041E-4	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9995910210304393	WITHOUT_CLASSIFICATION	4.0897896956077623E-4	IMPLEMENTATION
// no digits, go calc (will return +/- 0.0 for lax)	WITHOUT_CLASSIFICATION	0.9999507445629223	WITHOUT_CLASSIFICATION	4.925543707773294E-5	IMPLEMENTATION
// ignore leading zeroes	WITHOUT_CLASSIFICATION	0.999737009673308	WITHOUT_CLASSIFICATION	2.6299032669190416E-4	IMPLEMENTATION
// just save a count of zeroes for now; if no digit // ends up following them, they'll be applied to the // exponent rather than the significand (and our max // length for optimistic calc).	WITHOUT_CLASSIFICATION	0.9999991730113778	WITHOUT_CLASSIFICATION	8.269886223473577E-7	IMPLEMENTATION
// ok, got a non-zero, have to own up to our horded zeroes	WITHOUT_CLASSIFICATION	0.9997922417367895	WITHOUT_CLASSIFICATION	2.0775826321051702E-4	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9997887686043465	WITHOUT_CLASSIFICATION	2.1123139565348614E-4	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9997887686043465	WITHOUT_CLASSIFICATION	2.1123139565348614E-4	IMPLEMENTATION
// oh, well, it was worth a try. go let // Double/FloatingDecimal handle it 	WITHOUT_CLASSIFICATION	0.9997687512148833	WITHOUT_CLASSIFICATION	2.3124878511685982E-4	IMPLEMENTATION
// ignore // switch	WITHOUT_CLASSIFICATION	0.9990950340293091	WITHOUT_CLASSIFICATION	9.049659706909747E-4	IMPLEMENTATION
// ignore // switch	WITHOUT_CLASSIFICATION	0.9990950340293091	WITHOUT_CLASSIFICATION	9.049659706909747E-4	IMPLEMENTATION
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9997325009561544	WITHOUT_CLASSIFICATION	2.67499043845573E-4	IMPLEMENTATION
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9997325009561544	WITHOUT_CLASSIFICATION	2.67499043845573E-4	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9992607882588472	WITHOUT_CLASSIFICATION	7.392117411528E-4	IMPLEMENTATION
// first non_underscore char must be digit	WITHOUT_CLASSIFICATION	0.9996646554522277	WITHOUT_CLASSIFICATION	3.353445477722354E-4	IMPLEMENTATION
// no dec digits, end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9997688952531272	WITHOUT_CLASSIFICATION	2.311047468727632E-4	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.9997705675555983	WITHOUT_CLASSIFICATION	2.2943244440177177E-4	IMPLEMENTATION
// difficult case, send to Double/FloatingDecimal	WITHOUT_CLASSIFICATION	0.9992667220847702	WITHOUT_CLASSIFICATION	7.332779152296968E-4	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.999943466594035	WITHOUT_CLASSIFICATION	5.653340596488557E-5	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.999943466594035	WITHOUT_CLASSIFICATION	5.653340596488557E-5	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9994305311224104	WITHOUT_CLASSIFICATION	5.694688775897041E-4	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9994305311224104	WITHOUT_CLASSIFICATION	5.694688775897041E-4	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9994305311224104	WITHOUT_CLASSIFICATION	5.694688775897041E-4	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9995910210304393	WITHOUT_CLASSIFICATION	4.0897896956077623E-4	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9997887686043465	WITHOUT_CLASSIFICATION	2.1123139565348614E-4	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9997887686043465	WITHOUT_CLASSIFICATION	2.1123139565348614E-4	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9997887686043465	WITHOUT_CLASSIFICATION	2.1123139565348614E-4	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9992607882588472	WITHOUT_CLASSIFICATION	7.392117411528E-4	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9992607882588472	WITHOUT_CLASSIFICATION	7.392117411528E-4	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9992607882588472	WITHOUT_CLASSIFICATION	7.392117411528E-4	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.9997705675555983	WITHOUT_CLASSIFICATION	2.2943244440177177E-4	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.9997705675555983	WITHOUT_CLASSIFICATION	2.2943244440177177E-4	IMPLEMENTATION
// lax (str.to_f) allows underscores between e/E and sign	WITHOUT_CLASSIFICATION	0.999604147709075	WITHOUT_CLASSIFICATION	3.958522909249607E-4	IMPLEMENTATION
// switch // for // no exponent, so drop through for calculation	WITHOUT_CLASSIFICATION	0.9999190240035164	WITHOUT_CLASSIFICATION	8.09759964836178E-5	IMPLEMENTATION
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9980172532926149	WITHOUT_CLASSIFICATION	0.001982746707385199	IMPLEMENTATION
// TODO: it's not clear to me why, in FloatingDecimal, the // "slop" calculation performed above for positive exponents // isn't used for negative exponents as well. Will find out...	WITHOUT_CLASSIFICATION	0.9522387673183127	IMPLEMENTATION	0.047761232681687214	WITHOUT_CLASSIFICATION
// no digits, error	WITHOUT_CLASSIFICATION	0.9972596046053103	WITHOUT_CLASSIFICATION	0.002740395394689637	IMPLEMENTATION
// too big for us	WITHOUT_CLASSIFICATION	0.9990637851334644	WITHOUT_CLASSIFICATION	9.362148665357468E-4	IMPLEMENTATION
// too big for us	WITHOUT_CLASSIFICATION	0.9990637851334644	WITHOUT_CLASSIFICATION	9.362148665357468E-4	IMPLEMENTATION
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999035756064242	WITHOUT_CLASSIFICATION	9.642439357582488E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999591600903001	WITHOUT_CLASSIFICATION	4.083990969988955E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999591600903001	WITHOUT_CLASSIFICATION	4.083990969988955E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999591600903001	WITHOUT_CLASSIFICATION	4.083990969988955E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999591600903001	WITHOUT_CLASSIFICATION	4.083990969988955E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999591600903001	WITHOUT_CLASSIFICATION	4.083990969988955E-5	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9995284703679084	WITHOUT_CLASSIFICATION	4.715296320916631E-4	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9995284703679084	WITHOUT_CLASSIFICATION	4.715296320916631E-4	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9995284703679084	WITHOUT_CLASSIFICATION	4.715296320916631E-4	IMPLEMENTATION
// first char must be digit	WITHOUT_CLASSIFICATION	0.9997952710565423	WITHOUT_CLASSIFICATION	2.0472894345766575E-4	IMPLEMENTATION
// no dec digits after '.', error for strict	WITHOUT_CLASSIFICATION	0.9994295999236017	WITHOUT_CLASSIFICATION	5.704000763983018E-4	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9995910210304393	WITHOUT_CLASSIFICATION	4.0897896956077623E-4	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9992607882588472	WITHOUT_CLASSIFICATION	7.392117411528E-4	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9992607882588472	WITHOUT_CLASSIFICATION	7.392117411528E-4	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999591600903001	WITHOUT_CLASSIFICATION	4.083990969988955E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999591600903001	WITHOUT_CLASSIFICATION	4.083990969988955E-5	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9995284703679084	WITHOUT_CLASSIFICATION	4.715296320916631E-4	IMPLEMENTATION
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999035756064242	WITHOUT_CLASSIFICATION	9.642439357582488E-5	IMPLEMENTATION
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9996239672763712	WITHOUT_CLASSIFICATION	3.760327236288341E-4	IMPLEMENTATION
// switch //while	WITHOUT_CLASSIFICATION	0.99870731008224	WITHOUT_CLASSIFICATION	0.0012926899177600714	IMPLEMENTATION
/*     * All the positive powers of 10 that can be     * represented exactly in double/float.     * (From sun.misc.FloatingDecimal.java)     */	WITHOUT_CLASSIFICATION	0.999991096631196	WITHOUT_CLASSIFICATION	8.903368803959448E-6	IMPLEMENTATION
// Zlib behavior: negative win_bits means no header and no checksum.	WITHOUT_CLASSIFICATION	0.9997426106805017	WITHOUT_CLASSIFICATION	2.5738931949835216E-4	IMPLEMENTATION
// rb_enc_mbclen	WITHOUT_CLASSIFICATION	0.9986385284494232	WITHOUT_CLASSIFICATION	0.001361471550576766	IMPLEMENTATION
// rb_enc_precise_mbclen	WITHOUT_CLASSIFICATION	0.9996237203449804	WITHOUT_CLASSIFICATION	3.7627965501967623E-4	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9977069119944231	WITHOUT_CLASSIFICATION	0.00229308800557706	IMPLEMENTATION
// arg cannot be negative	WITHOUT_CLASSIFICATION	0.9998520022202628	WITHOUT_CLASSIFICATION	1.4799777973714955E-4	IMPLEMENTATION
// NoFunctionalitySignalFacade	WITHOUT_CLASSIFICATION	0.9996237203449804	WITHOUT_CLASSIFICATION	3.7627965501967623E-4	IMPLEMENTATION
// Change visibility so others can see it	WITHOUT_CLASSIFICATION	0.9999044341607782	WITHOUT_CLASSIFICATION	9.556583922182781E-5	IMPLEMENTATION
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9989935103343094	WITHOUT_CLASSIFICATION	0.0010064896656906454	IMPLEMENTATION
// strip off "_dot_rb" for .rb files	WITHOUT_CLASSIFICATION	0.99993210965446	WITHOUT_CLASSIFICATION	6.789034554000242E-5	IMPLEMENTATION
// Makes sure the key is not already in the hashtable.	WITHOUT_CLASSIFICATION	0.9997036913131719	WITHOUT_CLASSIFICATION	2.963086868280777E-4	IMPLEMENTATION
// Rehash the table if the threshold is exceeded	WITHOUT_CLASSIFICATION	0.9999618587405532	WITHOUT_CLASSIFICATION	3.81412594467943E-5	IMPLEMENTATION
// Creates the new entry.	WITHOUT_CLASSIFICATION	0.9997697357821321	WITHOUT_CLASSIFICATION	2.3026421786789648E-4	IMPLEMENTATION
// next entry to return // current slot // current entry	WITHOUT_CLASSIFICATION	0.9941226578532792	WITHOUT_CLASSIFICATION	0.005877342146720814	IMPLEMENTATION
// advance to first entry	WITHOUT_CLASSIFICATION	0.9992106379986375	WITHOUT_CLASSIFICATION	7.893620013624212E-4	IMPLEMENTATION
// The reason why we need the stream is to be able to invoke available() on it. // STDIN in Java is non-interruptible, non-selectable, and attempt to read // on such stream might lead to thread being blocked without *any* way to unblock it. // That's where available() comes it, so at least we could check whether // anything is available to be read without blocking.	WITHOUT_CLASSIFICATION	0.9999088411664441	WITHOUT_CLASSIFICATION	9.115883355590096E-5	IMPLEMENTATION
/*package-protected*/	WITHOUT_CLASSIFICATION	0.999365695968854	WITHOUT_CLASSIFICATION	6.343040311459975E-4	IMPLEMENTATION
// raw file URL, just open directly	WITHOUT_CLASSIFICATION	0.9996527567278848	WITHOUT_CLASSIFICATION	3.472432721152507E-4	IMPLEMENTATION
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9960774761229677	WITHOUT_CLASSIFICATION	0.003922523877032294	IMPLEMENTATION
// if refcount is at or below zero, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999983770208282	WITHOUT_CLASSIFICATION	1.6229791718203553E-6	IMPLEMENTATION
// if channel is already closed, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999952352018676	WITHOUT_CLASSIFICATION	4.764798132421249E-6	IMPLEMENTATION
// otherwise decrement and possibly close as normal	WITHOUT_CLASSIFICATION	0.9982883253114121	WITHOUT_CLASSIFICATION	0.0017116746885879246	IMPLEMENTATION
// r/w buffer // are we reading or writing?	WITHOUT_CLASSIFICATION	0.9991308367197851	WITHOUT_CLASSIFICATION	8.691632802148488E-4	IMPLEMENTATION
// this constructor is used by fdopen, so we don't increment descriptor ref count	WITHOUT_CLASSIFICATION	0.9998566985658073	WITHOUT_CLASSIFICATION	1.4330143419272168E-4	IMPLEMENTATION
// unread back	WITHOUT_CLASSIFICATION	0.9980991784592034	WITHOUT_CLASSIFICATION	0.0019008215407965731	IMPLEMENTATION
// iterate over remainder of buffer until we find a match	WITHOUT_CLASSIFICATION	0.9999283792435077	WITHOUT_CLASSIFICATION	7.162075649225265E-5	IMPLEMENTATION
// terminate and advance buffer when we find our char	WITHOUT_CLASSIFICATION	0.9997200915063379	WITHOUT_CLASSIFICATION	2.799084936621863E-4	IMPLEMENTATION
// no match, append remainder of buffer and continue with next block	WITHOUT_CLASSIFICATION	0.9968265500757838	WITHOUT_CLASSIFICATION	0.0031734499242162054	IMPLEMENTATION
// found a match above, check if remaining separator characters match, appending as we go	WITHOUT_CLASSIFICATION	0.9999730701778115	WITHOUT_CLASSIFICATION	2.692982218861104E-5	IMPLEMENTATION
// // Check file size - special files in /proc have zero size and need to be // handled by the generic read path. //	WITHOUT_CLASSIFICATION	0.9997046695054886	WITHOUT_CLASSIFICATION	2.9533049451137966E-4	IMPLEMENTATION
// // Copy any buffered data (including ungetc byte) //	WITHOUT_CLASSIFICATION	0.9991641140844273	WITHOUT_CLASSIFICATION	8.358859155727802E-4	IMPLEMENTATION
// // Now read unbuffered directly from the file //	WITHOUT_CLASSIFICATION	0.9996553910894637	WITHOUT_CLASSIFICATION	3.4460891053630374E-4	IMPLEMENTATION
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9996239672763712	WITHOUT_CLASSIFICATION	3.760327236288341E-4	IMPLEMENTATION
// // Need to clamp source (buffer) size to avoid overrun //	WITHOUT_CLASSIFICATION	0.9987778348000519	WITHOUT_CLASSIFICATION	0.0012221651999480842	IMPLEMENTATION
// not closing from finalize	WITHOUT_CLASSIFICATION	0.9988184314635071	WITHOUT_CLASSIFICATION	0.001181568536492834	IMPLEMENTATION
// clear runtime so it doesn't get stuck in memory (JRUBY-2933)	WITHOUT_CLASSIFICATION	0.9999913267959376	WITHOUT_CLASSIFICATION	8.673204062333925E-6	IMPLEMENTATION
// silence	WITHOUT_CLASSIFICATION	0.999975778940229	WITHOUT_CLASSIFICATION	2.422105977089807E-5	IMPLEMENTATION
// silence	WITHOUT_CLASSIFICATION	0.999975778940229	WITHOUT_CLASSIFICATION	2.422105977089807E-5	IMPLEMENTATION
// Don't bother	WITHOUT_CLASSIFICATION	0.9973646446115793	WITHOUT_CLASSIFICATION	0.002635355388420713	IMPLEMENTATION
// Don't bother	WITHOUT_CLASSIFICATION	0.9973646446115793	WITHOUT_CLASSIFICATION	0.002635355388420713	IMPLEMENTATION
// For Sockets, only write as much as will fit.	WITHOUT_CLASSIFICATION	0.9992910852008009	WITHOUT_CLASSIFICATION	7.08914799199223E-4	IMPLEMENTATION
// Correct position for read / write buffering (we could invalidate, but expensive)	WITHOUT_CLASSIFICATION	0.9999802869516147	WITHOUT_CLASSIFICATION	1.9713048385377786E-5	IMPLEMENTATION
// Adjust for buffered data	WITHOUT_CLASSIFICATION	0.9997113877898587	WITHOUT_CLASSIFICATION	2.886122101414042E-4	IMPLEMENTATION
// for SEEK_CUR, need to adjust for buffered data	WITHOUT_CLASSIFICATION	0.9968263552102283	WITHOUT_CLASSIFICATION	0.0031736447897717265	IMPLEMENTATION
// libc flushes writes on any read from the actual file, so we flush here	WITHOUT_CLASSIFICATION	0.999674790135401	WITHOUT_CLASSIFICATION	3.252098645989503E-4	IMPLEMENTATION
// we have read ahead, and need to back up	WITHOUT_CLASSIFICATION	0.996253400426216	WITHOUT_CLASSIFICATION	0.0037465995737839294	IMPLEMENTATION
// 128K seems to be the minimum at which the stat+seek is faster than reallocation	WITHOUT_CLASSIFICATION	0.9999622750003047	WITHOUT_CLASSIFICATION	3.77249996954114E-5	IMPLEMENTATION
// // limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations //	WITHOUT_CLASSIFICATION	0.9994033308066241	WITHOUT_CLASSIFICATION	5.966691933759251E-4	IMPLEMENTATION
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9942345529819655	WITHOUT_CLASSIFICATION	0.005765447018034527	IMPLEMENTATION
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999238985947169	WITHOUT_CLASSIFICATION	7.610140528309934E-5	IMPLEMENTATION
// // Avoid double-copying for reads that are larger than the buffer size //	WITHOUT_CLASSIFICATION	0.9998308940752327	WITHOUT_CLASSIFICATION	1.691059247672983E-4	IMPLEMENTATION
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9992468286750837	WITHOUT_CLASSIFICATION	7.531713249162386E-4	IMPLEMENTATION
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9992468286750837	WITHOUT_CLASSIFICATION	7.531713249162386E-4	IMPLEMENTATION
// // Avoid double-copying for reads that are larger than the buffer size, or // the destination is a direct buffer. //	WITHOUT_CLASSIFICATION	0.9997277197555842	WITHOUT_CLASSIFICATION	2.7228024441580727E-4	IMPLEMENTATION
// // We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating // a huge temporary native buffer, when doing reads into a heap buffer // If the dst buffer is direct, then no need to limit. //	WITHOUT_CLASSIFICATION	0.9995206020720381	WITHOUT_CLASSIFICATION	4.793979279619882E-4	IMPLEMENTATION
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9997827364352322	WITHOUT_CLASSIFICATION	2.1726356476782727E-4	IMPLEMENTATION
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9997827364352322	WITHOUT_CLASSIFICATION	2.1726356476782727E-4	IMPLEMENTATION
// Doesn't fit in buffer. Write immediately. // ensure nothing left to write	WITHOUT_CLASSIFICATION	0.9999773997860111	WITHOUT_CLASSIFICATION	2.260021398889514E-5	IMPLEMENTATION
// truncate can't lengthen files, so we save position, seek/write, and go back	WITHOUT_CLASSIFICATION	0.9999277882040045	WITHOUT_CLASSIFICATION	7.22117959954927E-5	IMPLEMENTATION
// how far ahead we are when reading	WITHOUT_CLASSIFICATION	0.9961364486706077	WITHOUT_CLASSIFICATION	0.0038635513293924654	IMPLEMENTATION
// if the read buffer is ahead, back up	WITHOUT_CLASSIFICATION	0.9999626169185625	WITHOUT_CLASSIFICATION	3.738308143754281E-5	IMPLEMENTATION
// close without removing from finalizers	WITHOUT_CLASSIFICATION	0.9998637612918807	WITHOUT_CLASSIFICATION	1.3623870811927077E-4	IMPLEMENTATION
// putting a bit back, so we're not at EOF anymore	WITHOUT_CLASSIFICATION	0.9998290957603838	WITHOUT_CLASSIFICATION	1.7090423961623366E-4	IMPLEMENTATION
// save the ungot	WITHOUT_CLASSIFICATION	0.999317742380473	WITHOUT_CLASSIFICATION	6.822576195270413E-4	IMPLEMENTATION
// otherwise, we try an unbuffered read to get whatever's available	WITHOUT_CLASSIFICATION	0.9997435995301919	WITHOUT_CLASSIFICATION	2.5640046980813456E-4	IMPLEMENTATION
// ignore this; select() will set the correct mode when it is finished	WITHOUT_CLASSIFICATION	0.9997868584519686	WITHOUT_CLASSIFICATION	2.1314154803150337E-4	IMPLEMENTATION
// flush first	WITHOUT_CLASSIFICATION	0.9985810675164859	WITHOUT_CLASSIFICATION	0.0014189324835140748	IMPLEMENTATION
// // Wake up any channels that became unblocked //	WITHOUT_CLASSIFICATION	0.9989913645970013	WITHOUT_CLASSIFICATION	0.0010086354029986973	IMPLEMENTATION
// // Register any new blocking I/O requests //	WITHOUT_CLASSIFICATION	0.9972152973391383	WITHOUT_CLASSIFICATION	0.0027847026608617815	IMPLEMENTATION
// Now clear out any previously selected channels	WITHOUT_CLASSIFICATION	0.9998194541695988	WITHOUT_CLASSIFICATION	1.8054583040112276E-4	IMPLEMENTATION
// // Wait for I/O on any channel //	WITHOUT_CLASSIFICATION	0.9992481323277492	WITHOUT_CLASSIFICATION	7.518676722508299E-4	IMPLEMENTATION
// Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'	WITHOUT_CLASSIFICATION	0.9665537388242602	WITHOUT_CLASSIFICATION	0.03344626117573975	IMPLEMENTATION
// Java requires "w" for creating a file that does not exist	WITHOUT_CLASSIFICATION	0.9926018707155385	WITHOUT_CLASSIFICATION	0.007398129284461401	IMPLEMENTATION
// seek to force underlying buffer to flush	WITHOUT_CLASSIFICATION	0.9981059254036675	WITHOUT_CLASSIFICATION	0.0018940745963325492	IMPLEMENTATION
// seek to force read buffer to invalidate	WITHOUT_CLASSIFICATION	0.9983762635750872	WITHOUT_CLASSIFICATION	0.0016237364249127718	IMPLEMENTATION
/*        result = eval("arr = Array::['c', 200]; p arr");        assertEquals("[\"c\", 200]", result);        result = eval("arr = Array.['d', 200]; p arr");        assertEquals("[\"d\", 200]", result);        */	WITHOUT_CLASSIFICATION	0.9999006815917929	WITHOUT_CLASSIFICATION	9.931840820709452E-5	IMPLEMENTATION
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.999234999693435	WITHOUT_CLASSIFICATION	7.65000306565013E-4	IMPLEMENTATION
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.550045044983686	IMPLEMENTATION	0.44995495501631405	WITHOUT_CLASSIFICATION
// make sure the pipe stream is set to null	WITHOUT_CLASSIFICATION	0.9986532911242935	WITHOUT_CLASSIFICATION	0.0013467088757064772	IMPLEMENTATION
// make sure the main stream is set to null	WITHOUT_CLASSIFICATION	0.9989723203719739	WITHOUT_CLASSIFICATION	0.001027679628026094	IMPLEMENTATION
// first try our custom-generated Unsafe	WITHOUT_CLASSIFICATION	0.9996723675392869	WITHOUT_CLASSIFICATION	3.276324607129938E-4	IMPLEMENTATION
// then try Sun's Unsafe	WITHOUT_CLASSIFICATION	0.999745960176843	WITHOUT_CLASSIFICATION	2.540398231569379E-4	IMPLEMENTATION
// if we get here, the class and field exist; construct our Unsafe impl // that calls it directly	WITHOUT_CLASSIFICATION	0.9999489914882116	WITHOUT_CLASSIFICATION	5.100851178853774E-5	IMPLEMENTATION
// else leave it null	WITHOUT_CLASSIFICATION	0.9990629982940394	WITHOUT_CLASSIFICATION	9.370017059603981E-4	IMPLEMENTATION
// TypeMatcher	WITHOUT_CLASSIFICATION	0.9986385284494232	WITHOUT_CLASSIFICATION	0.001361471550576766	IMPLEMENTATION
// This is now needed, since module Java // isn't in by default	WITHOUT_CLASSIFICATION	0.999992304875329	WITHOUT_CLASSIFICATION	7.695124671000889E-6	IMPLEMENTATION
// Iterate over the RubyHash keySet, simultaneously iterating over the values()	WITHOUT_CLASSIFICATION	0.99971368771543	WITHOUT_CLASSIFICATION	2.863122845700012E-4	IMPLEMENTATION
// Get the value from the map via the key	WITHOUT_CLASSIFICATION	0.9999523379896114	WITHOUT_CLASSIFICATION	4.766201038857953E-5	IMPLEMENTATION
// Get the value from the map via the values iterator	WITHOUT_CLASSIFICATION	0.9999962215314392	WITHOUT_CLASSIFICATION	3.77846856076459E-6	IMPLEMENTATION
// Check the 2 values obtained via different means	WITHOUT_CLASSIFICATION	0.9999553931763944	WITHOUT_CLASSIFICATION	4.460682360560577E-5	IMPLEMENTATION
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999877021019783	WITHOUT_CLASSIFICATION	1.2297898021680436E-5	IMPLEMENTATION
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999877021019783	WITHOUT_CLASSIFICATION	1.2297898021680436E-5	IMPLEMENTATION
// Check the entry.setValue values come back out ok	WITHOUT_CLASSIFICATION	0.9998930845205874	WITHOUT_CLASSIFICATION	1.0691547941265179E-4	IMPLEMENTATION
// If we're running from within an IDE we may not have // the .rb files in our classpath. Try to find them // in the filesystem instead.	WITHOUT_CLASSIFICATION	0.999976868103512	WITHOUT_CLASSIFICATION	2.3131896487994008E-5	IMPLEMENTATION
//assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); //assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));	WITHOUT_CLASSIFICATION	0.9986215933471059	WITHOUT_CLASSIFICATION	0.001378406652894127	IMPLEMENTATION
// Init	WITHOUT_CLASSIFICATION	0.9999758294881597	WITHOUT_CLASSIFICATION	2.417051184036878E-5	IMPLEMENTATION
// Block	WITHOUT_CLASSIFICATION	0.9999757875092521	WITHOUT_CLASSIFICATION	2.4212490747990914E-5	IMPLEMENTATION
// Copy constructor	WITHOUT_CLASSIFICATION	0.9996368599435276	WITHOUT_CLASSIFICATION	3.6314005647233996E-4	IMPLEMENTATION
// presumably this require should fail	WITHOUT_CLASSIFICATION	0.990071234657684	WITHOUT_CLASSIFICATION	0.00992876534231596	IMPLEMENTATION
// JRUBY-646 // presumably this require should fail	WITHOUT_CLASSIFICATION	0.990071234657684	WITHOUT_CLASSIFICATION	0.00992876534231596	IMPLEMENTATION
// Test that requiring a normal Java class raises an error (JRUBY-3214	WITHOUT_CLASSIFICATION	0.9997642902601382	WITHOUT_CLASSIFICATION	2.3570973986173377E-4	IMPLEMENTATION
// ok	WITHOUT_CLASSIFICATION	0.9999504516615514	WITHOUT_CLASSIFICATION	4.9548338448627916E-5	IMPLEMENTATION
// Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods // from Ruby so they are not really unused).	WITHOUT_CLASSIFICATION	0.9999640192571216	WITHOUT_CLASSIFICATION	3.598074287837574E-5	IMPLEMENTATION
//load should work several times in a row	WITHOUT_CLASSIFICATION	0.9997797487910572	WITHOUT_CLASSIFICATION	2.202512089427157E-4	IMPLEMENTATION
//reset the $loadTestvar	WITHOUT_CLASSIFICATION	0.9994834628789616	WITHOUT_CLASSIFICATION	5.165371210384357E-4	IMPLEMENTATION
//call throwException via JRuby	WITHOUT_CLASSIFICATION	0.9987407712419325	WITHOUT_CLASSIFICATION	0.0012592287580675005	IMPLEMENTATION
// Notify the calling thread that we're about to go to sleep the first time	WITHOUT_CLASSIFICATION	0.9999893746044495	WITHOUT_CLASSIFICATION	1.0625395550502465E-5	IMPLEMENTATION
// wait for the go signal	WITHOUT_CLASSIFICATION	0.9999508459906209	WITHOUT_CLASSIFICATION	4.915400937910318E-5	IMPLEMENTATION
// run ten separate calls into Ruby, with delay and explicit GC	WITHOUT_CLASSIFICATION	0.9994276782749143	WITHOUT_CLASSIFICATION	5.72321725085632E-4	IMPLEMENTATION
// wait until thread has initialized	WITHOUT_CLASSIFICATION	0.999861854152959	WITHOUT_CLASSIFICATION	1.381458470409906E-4	IMPLEMENTATION
// notify thread to proceed	WITHOUT_CLASSIFICATION	0.9991656500763078	WITHOUT_CLASSIFICATION	8.343499236922749E-4	IMPLEMENTATION
// wait until thread has completed	WITHOUT_CLASSIFICATION	0.9998278877974842	WITHOUT_CLASSIFICATION	1.7211220251575258E-4	IMPLEMENTATION
// we do preand post load outside the "body" versions to pre-prepare // and pre-push the dynamic scope we need for lastline	WITHOUT_CLASSIFICATION	0.9947214407303097	WITHOUT_CLASSIFICATION	0.005278559269690403	IMPLEMENTATION
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999880405385242	WITHOUT_CLASSIFICATION	1.1959461475849684E-5	IMPLEMENTATION
// MRI behavior: raise ArgumentError for 'unknown command' before // checking number of args.	WITHOUT_CLASSIFICATION	0.9998469326989972	WITHOUT_CLASSIFICATION	1.5306730100289273E-4	IMPLEMENTATION
// if any exceptions were raised, we fail	WITHOUT_CLASSIFICATION	0.9998148182576932	WITHOUT_CLASSIFICATION	1.8518174230685346E-4	IMPLEMENTATION
// there should only be one more thread in thread group than before we started	WITHOUT_CLASSIFICATION	0.9997195210882868	WITHOUT_CLASSIFICATION	2.804789117132364E-4	IMPLEMENTATION
// construct a new cache with thread's classloader and no limit	WITHOUT_CLASSIFICATION	0.9994397519293132	WITHOUT_CLASSIFICATION	5.602480706867705E-4	IMPLEMENTATION
//        Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); //        Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();	WITHOUT_CLASSIFICATION	0.9993203472799311	WITHOUT_CLASSIFICATION	6.796527200688834E-4	IMPLEMENTATION
//        assertSame(script1, script2);	WITHOUT_CLASSIFICATION	0.9995719275459892	WITHOUT_CLASSIFICATION	4.2807245401080306E-4	IMPLEMENTATION
// void methods should work	WITHOUT_CLASSIFICATION	0.9992484897792886	WITHOUT_CLASSIFICATION	7.515102207113271E-4	IMPLEMENTATION
// methods with required = 4 or higher should bind and be callable using reflection // JRUBY-3649	WITHOUT_CLASSIFICATION	0.9964829963251363	WITHOUT_CLASSIFICATION	0.0035170036748637936	IMPLEMENTATION
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9997440725541666	WITHOUT_CLASSIFICATION	2.559274458333248E-4	IMPLEMENTATION
// Ensure we have a new interpreter for each test. Previous we were using the //  same interpreter which caused problems as soon as one test failed.	WITHOUT_CLASSIFICATION	0.9999939892318864	WITHOUT_CLASSIFICATION	6.010768113591675E-6	IMPLEMENTATION
// Without a flush Ant will miss some of our output	WITHOUT_CLASSIFICATION	0.9998460769473112	WITHOUT_CLASSIFICATION	1.5392305268867968E-4	IMPLEMENTATION
// assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());	WITHOUT_CLASSIFICATION	0.9993837240754918	WITHOUT_CLASSIFICATION	6.162759245082557E-4	IMPLEMENTATION
//        int n = 10;	WITHOUT_CLASSIFICATION	0.9995977058622614	WITHOUT_CLASSIFICATION	4.02294137738545E-4	IMPLEMENTATION
// there might be more test classes in a single file, so we iterate over them	WITHOUT_CLASSIFICATION	0.9999979864817004	WITHOUT_CLASSIFICATION	2.013518299615032E-6	IMPLEMENTATION
//No ClassCastException!	WITHOUT_CLASSIFICATION	0.999365695968854	WITHOUT_CLASSIFICATION	6.343040311459975E-4	IMPLEMENTATION
// value equality	WITHOUT_CLASSIFICATION	0.9989265271043901	WITHOUT_CLASSIFICATION	0.0010734728956099048	IMPLEMENTATION
// identity equality	WITHOUT_CLASSIFICATION	0.9987759193176817	WITHOUT_CLASSIFICATION	0.0012240806823183117	IMPLEMENTATION
// bench straight-up integer fib(30)	WITHOUT_CLASSIFICATION	0.9993837240754918	WITHOUT_CLASSIFICATION	6.162759245082557E-4	IMPLEMENTATION
// bench Integer fib	WITHOUT_CLASSIFICATION	0.9986385284494232	WITHOUT_CLASSIFICATION	0.001361471550576766	IMPLEMENTATION
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9996237203449804	WITHOUT_CLASSIFICATION	3.7627965501967623E-4	IMPLEMENTATION
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9996237203449804	WITHOUT_CLASSIFICATION	3.7627965501967623E-4	IMPLEMENTATION
// bench fixnum-boxed fib	WITHOUT_CLASSIFICATION	0.9996237203449804	WITHOUT_CLASSIFICATION	3.7627965501967623E-4	IMPLEMENTATION
// bench straight-up long fib(30)	WITHOUT_CLASSIFICATION	0.9994397380966382	WITHOUT_CLASSIFICATION	5.602619033618374E-4	IMPLEMENTATION
// bench Long fib	WITHOUT_CLASSIFICATION	0.9986394320449005	WITHOUT_CLASSIFICATION	0.0013605679550994618	IMPLEMENTATION
// skip this one, probably no 'ls' (windows)	WITHOUT_CLASSIFICATION	0.9981631647675581	WITHOUT_CLASSIFICATION	0.0018368352324418555	IMPLEMENTATION
// start off with a neutral parent	WITHOUT_CLASSIFICATION	0.9994854528966951	WITHOUT_CLASSIFICATION	5.145471033048168E-4	IMPLEMENTATION
/*            public class Hello {                public static String getMessage() {                    return ".....";                }            }            */	WITHOUT_CLASSIFICATION	0.9999948862065078	WITHOUT_CLASSIFICATION	5.113793492312715E-6	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9943916300527457	WITHOUT_CLASSIFICATION	0.005608369947254283	IMPLEMENTATION
// Note: We can't use file.exists() to check whether the symlink // exists or not, because that method returns false for existing // but broken symlink. So, we try without the existence check, // but in the try-catch block. // MRI behavior: symlink? on broken symlink should return true.	WITHOUT_CLASSIFICATION	0.9987532901869208	WITHOUT_CLASSIFICATION	0.0012467098130791764	IMPLEMENTATION
// We are creating a new IO object that shares the same // IOHandler (and fileno).	WITHOUT_CLASSIFICATION	0.9996032545081595	WITHOUT_CLASSIFICATION	3.9674549184061776E-4	IMPLEMENTATION
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999570787345271	WITHOUT_CLASSIFICATION	4.292126547294048E-5	IMPLEMENTATION
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9989612992561224	WITHOUT_CLASSIFICATION	0.0010387007438775661	IMPLEMENTATION
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9993951372582432	WITHOUT_CLASSIFICATION	6.048627417566962E-4	IMPLEMENTATION
// Translate "x || y" --> "x = (is_true(x) ? x : y)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, true, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9986787775845365	WITHOUT_CLASSIFICATION	0.0013212224154635294	IMPLEMENTATION
// // Force the client socket to be blocking //	WITHOUT_CLASSIFICATION	0.9995216176736736	WITHOUT_CLASSIFICATION	4.783823263263918E-4	IMPLEMENTATION
// Additional context surrounding tokens that both the lexer and // grammar use.	WITHOUT_CLASSIFICATION	0.9980963712877248	WITHOUT_CLASSIFICATION	0.0019036287122752699	IMPLEMENTATION
// Enebo:  c can never be antrhign but '.' // Why did I put this here?	WITHOUT_CLASSIFICATION	0.808312733942265	WITHOUT_CLASSIFICATION	0.19168726605773498	IMPLEMENTATION
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9987114812268438	WITHOUT_CLASSIFICATION	0.0012885187731562031	IMPLEMENTATION
//[C,C] //[C, boolean]	WITHOUT_CLASSIFICATION	0.999365695968854	WITHOUT_CLASSIFICATION	6.343040311459975E-4	IMPLEMENTATION
// Label for the start of the closure (used to implement redo) // Label for the end of the closure (used to implement retry)	WITHOUT_CLASSIFICATION	0.9896785096190236	WITHOUT_CLASSIFICATION	0.010321490380976385	IMPLEMENTATION
// ignore; job was cancelled // FIXME: is this ok?	WITHOUT_CLASSIFICATION	0.9998857115220794	WITHOUT_CLASSIFICATION	1.142884779205241E-4	IMPLEMENTATION
//                    // check arity //                    checkArity(mv, scope);	WITHOUT_CLASSIFICATION	0.9994404744380422	WITHOUT_CLASSIFICATION	5.595255619579437E-4	IMPLEMENTATION
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9975366352901344	WITHOUT_CLASSIFICATION	0.0024633647098657556	IMPLEMENTATION
// we take the first method found as our "n" method, since for any non-specific // arity they'll all error the same. If an actual "n" method is created, we // use that.	WITHOUT_CLASSIFICATION	0.9993785322353397	WITHOUT_CLASSIFICATION	6.214677646603148E-4	IMPLEMENTATION
// Used by our duck-typification of Proc into interface types, to allow // coercing a simple proc into an interface parameter.	WITHOUT_CLASSIFICATION	0.9999907858371098	WITHOUT_CLASSIFICATION	9.214162890154007E-6	IMPLEMENTATION
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.999601966678323	WITHOUT_CLASSIFICATION	3.9803332167696187E-4	IMPLEMENTATION
// it's either as converted as we can make it via above logic or it's // not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9697570035760652	WITHOUT_CLASSIFICATION	0.030242996423934798	IMPLEMENTATION
// package scheme 2: separate module for each full package name, constructed  // from the camel-cased package segments: Java::JavaLang::Object, 	WITHOUT_CLASSIFICATION	0.9999895793483426	WITHOUT_CLASSIFICATION	1.0420651657308081E-5	IMPLEMENTATION
// // construct the proxy method //	WITHOUT_CLASSIFICATION	0.99751033565419	WITHOUT_CLASSIFICATION	0.002489664345809893	IMPLEMENTATION
// line 159 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9997238563411964	WITHOUT_CLASSIFICATION	2.7614365880366496E-4	IMPLEMENTATION
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9997784930536926	WITHOUT_CLASSIFICATION	2.2150694630729818E-4	IMPLEMENTATION
// line 152 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9997238563411964	WITHOUT_CLASSIFICATION	2.7614365880366496E-4	IMPLEMENTATION
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9995198796950983	WITHOUT_CLASSIFICATION	4.801203049018282E-4	IMPLEMENTATION
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9997784930536926	WITHOUT_CLASSIFICATION	2.2150694630729818E-4	IMPLEMENTATION
// We only need to pass in current scope if we are evaluating as a block (which // is only done for evals).  We need to pass this in so that we can appropriately scope // down to captured scopes when we are parsing.	WITHOUT_CLASSIFICATION	0.9999359732118258	WITHOUT_CLASSIFICATION	6.402678817422204E-5	IMPLEMENTATION
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999535049882087	WITHOUT_CLASSIFICATION	4.649501179129442E-5	IMPLEMENTATION
// A place to store that special hiding space that bindings need to implement things like: // eval("a = 1", binding); eval("p a").  All binding instances must get access to this // hidden shared scope.  We store it here.  This will be null if no binding has yet // been called.	WITHOUT_CLASSIFICATION	0.9956474954296672	IMPLEMENTATION	0.004352504570332671	WITHOUT_CLASSIFICATION
// TODO: make it 16 now ? // MUST be power of 2!	WITHOUT_CLASSIFICATION	0.6365710718196684	IMPLEMENTATION	0.36342892818033146	WITHOUT_CLASSIFICATION
// check visibility // dup method	WITHOUT_CLASSIFICATION	0.9919305168906744	WITHOUT_CLASSIFICATION	0.008069483109325584	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9993538247838397	WITHOUT_CLASSIFICATION	6.461752161603348E-4	IMPLEMENTATION
// unsigned int, native // unsigned long, native	WITHOUT_CLASSIFICATION	0.9993992857611532	WITHOUT_CLASSIFICATION	6.007142388467174E-4	IMPLEMENTATION
//need padding //I'm fairly sure there is a library call to create a //string filled with a given char with a given length but I couldn't find it	WITHOUT_CLASSIFICATION	0.9993606313267333	WITHOUT_CLASSIFICATION	6.393686732667327E-4	IMPLEMENTATION
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.999794094735245	WITHOUT_CLASSIFICATION	2.0590526475491224E-4	IMPLEMENTATION
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.999234999693435	WITHOUT_CLASSIFICATION	7.65000306565013E-4	IMPLEMENTATION
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9980172532926149	WITHOUT_CLASSIFICATION	0.001982746707385199	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9705519620679468	WITHOUT_CLASSIFICATION	0.029448037932053226	IMPLEMENTATION
// Estimate the square root with the foremost 62 bits of squarD // bi and scale are a tandem	WITHOUT_CLASSIFICATION	0.9997891465977939	WITHOUT_CLASSIFICATION	2.1085340220600024E-4	IMPLEMENTATION
// captures // begin and end are used when not groups defined // source string	WITHOUT_CLASSIFICATION	0.9999429321285641	WITHOUT_CLASSIFICATION	5.706787143593938E-5	IMPLEMENTATION
// // INSTANCE VARIABLE RUBY METHODS //	WITHOUT_CLASSIFICATION	0.9993837240754918	WITHOUT_CLASSIFICATION	6.162759245082557E-4	IMPLEMENTATION
// switch // while	WITHOUT_CLASSIFICATION	0.9989598020629797	WITHOUT_CLASSIFICATION	0.0010401979370202217	IMPLEMENTATION
// For nodes do not have their own scope so we pass null to indicate this. // 'For's are implemented as blocks in evaluation, but they have no scope so we // just deal with this lack of scope throughout its lifespan.  We should probably // change the way this works to get rid of multiple null checks.	WITHOUT_CLASSIFICATION	0.9957810369367758	WITHOUT_CLASSIFICATION	0.0042189630632241725	IMPLEMENTATION
// This field is used during argument processing to avoid putting RubyArray // instances that are purely for utility purposes into ObjectSpace.	WITHOUT_CLASSIFICATION	0.9996355786702422	WITHOUT_CLASSIFICATION	3.644213297577142E-4	IMPLEMENTATION
// Parent container for this context (can be dynamic!!) // If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure // List of IR instructions for this method	WITHOUT_CLASSIFICATION	0.9980401382430031	WITHOUT_CLASSIFICATION	0.001959861756996979	IMPLEMENTATION
// Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = false    //    beq(v1, false, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9998995947514456	WITHOUT_CLASSIFICATION	1.0040524855427478E-4	IMPLEMENTATION
// expected	WITHOUT_CLASSIFICATION	0.9988826291572045	WITHOUT_CLASSIFICATION	0.0011173708427954323	IMPLEMENTATION
// Do nothing	WITHOUT_CLASSIFICATION	0.9991549651972039	WITHOUT_CLASSIFICATION	8.450348027960827E-4	IMPLEMENTATION
// constructor	WITHOUT_CLASSIFICATION	0.9996053818308567	WITHOUT_CLASSIFICATION	3.9461816914324055E-4	IMPLEMENTATION
// If a line is followed by a blank line put // it back.	WITHOUT_CLASSIFICATION	0.9990240806101541	WITHOUT_CLASSIFICATION	9.759193898459506E-4	IMPLEMENTATION
/* $>: default output handle */	WITHOUT_CLASSIFICATION	0.9998968607546734	WITHOUT_CLASSIFICATION	1.0313924532652281E-4	IMPLEMENTATION
// line 423	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 486	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// Signal uses sun.misc.* classes, this is not allowed // in the security-sensitive environments	WITHOUT_CLASSIFICATION	0.999457684461664	WITHOUT_CLASSIFICATION	5.42315538336072E-4	IMPLEMENTATION
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.999978976779843	WITHOUT_CLASSIFICATION	2.1023220156986468E-5	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9983566808223192	WITHOUT_CLASSIFICATION	0.0016433191776808302	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9983566808223192	WITHOUT_CLASSIFICATION	0.0016433191776808302	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999496564442418	WITHOUT_CLASSIFICATION	5.034355575813899E-5	IMPLEMENTATION
// if there's no receiver, evaluate and pass in the superclass, or // pass self if it no superclass	WITHOUT_CLASSIFICATION	0.9999483485685813	WITHOUT_CLASSIFICATION	5.1651431418842786E-5	IMPLEMENTATION
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9990720150026656	WITHOUT_CLASSIFICATION	9.279849973344583E-4	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.8121718122326999	IMPLEMENTATION	0.18782818776730015	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.8121718122326999	IMPLEMENTATION	0.18782818776730015	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.8121718122326999	IMPLEMENTATION	0.18782818776730015	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.8121718122326999	IMPLEMENTATION	0.18782818776730015	WITHOUT_CLASSIFICATION
// Decrease value to hit upper range.  	WITHOUT_CLASSIFICATION	0.9991622638417523	WITHOUT_CLASSIFICATION	8.377361582477746E-4	IMPLEMENTATION
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9987922769113773	WITHOUT_CLASSIFICATION	0.0012077230886227944	IMPLEMENTATION
// "else" body	WITHOUT_CLASSIFICATION	0.9987286474444954	WITHOUT_CLASSIFICATION	0.001271352555504554	IMPLEMENTATION
// done // done // done // Nothing to do for 1.8 // done // done // done // done // done // done // done? // done // done // done // done // done // done // done // done // done // done // done //            case DEFINEDNODE: return buildDefined(node, m); // Incomplete // done // done // done // done // done // done // done // done //            case ENSURENODE: return buildEnsureNode(node, m); // DEFERRED // done // done // done // done //            case FLIPNODE: return buildFlip(node, m); // SSS FIXME: What code generates this AST? // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done? // done // done // done // done // done // done -- partially //            case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); // DEFERRED SSS FIXME: What code generates this AST? // done //            case POSTEXENODE: return buildPostExe(node, m); // DEFERRED //            case PREEXENODE: return buildPreExe(node, m); // DEFERRED // done?? // done	WITHOUT_CLASSIFICATION	0.9930317128285389	WITHOUT_CLASSIFICATION	0.006968287171461059	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9986385284494232	WITHOUT_CLASSIFICATION	0.001361471550576766	IMPLEMENTATION
/* $+: string matches last paren. */	WITHOUT_CLASSIFICATION	0.9999972007438497	WITHOUT_CLASSIFICATION	2.7992561502931695E-6	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999865552637154	WITHOUT_CLASSIFICATION	1.344473628466404E-5	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999865552637154	WITHOUT_CLASSIFICATION	1.344473628466404E-5	IMPLEMENTATION
// Ruby code frequently uses a platform check to choose "NUL:" on windows // but since that check doesn't work well on JRuby, we help it out	WITHOUT_CLASSIFICATION	0.9999710952214862	WITHOUT_CLASSIFICATION	2.8904778513766612E-5	IMPLEMENTATION
/* 10! */	WITHOUT_CLASSIFICATION	0.9999970415563082	WITHOUT_CLASSIFICATION	2.9584436917105443E-6	IMPLEMENTATION
//            case RESCUENODE: return buildRescue(node, m); // DEFERRED //            case RETRYNODE: return buildRetry(node, m); // DEFERRED // done	WITHOUT_CLASSIFICATION	0.9997609568978055	WITHOUT_CLASSIFICATION	2.3904310219449146E-4	IMPLEMENTATION
// Is this instruction live or dead?  During optimization passes, if this instruction // causes no side-effects and the result of the instruction is not needed by anyone else, // we can remove this instruction altogether without affecting program correctness.	WITHOUT_CLASSIFICATION	0.972993397415354	IMPLEMENTATION	0.027006602584646044	WITHOUT_CLASSIFICATION
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9993149516860721	WITHOUT_CLASSIFICATION	6.850483139279886E-4	IMPLEMENTATION
// first, iterate over all required args	WITHOUT_CLASSIFICATION	0.9988185236087591	WITHOUT_CLASSIFICATION	0.0011814763912408883	IMPLEMENTATION
// // Determine if the parameter might be passed as a 32bit int parameter. // This just applies to buffer/pointer types. //	WITHOUT_CLASSIFICATION	0.9999888872165887	WITHOUT_CLASSIFICATION	1.1112783411133667E-5	IMPLEMENTATION
//Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());	WITHOUT_CLASSIFICATION	0.9985835948923886	WITHOUT_CLASSIFICATION	0.0014164051076113134	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9995198796950983	WITHOUT_CLASSIFICATION	4.801203049018282E-4	IMPLEMENTATION
// line 449	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 495	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// Management/monitoring	WITHOUT_CLASSIFICATION	0.9996237203449804	WITHOUT_CLASSIFICATION	3.7627965501967623E-4	IMPLEMENTATION
// if we've found the last char of the separator, // and we've found at least as many characters as separator length, // and the last n characters of our buffer match the separator, we're done	WITHOUT_CLASSIFICATION	0.9999996742131928	WITHOUT_CLASSIFICATION	3.2578680711392394E-7	IMPLEMENTATION
/* 14! */	WITHOUT_CLASSIFICATION	0.9999970415563082	WITHOUT_CLASSIFICATION	2.9584436917105443E-6	IMPLEMENTATION
// Process any set of annotations // No supported options	WITHOUT_CLASSIFICATION	0.9999527830369512	WITHOUT_CLASSIFICATION	4.721696304874574E-5	IMPLEMENTATION
// add to the jitted methods set	WITHOUT_CLASSIFICATION	0.9990762102404279	WITHOUT_CLASSIFICATION	9.237897595720765E-4	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.9999121822885966	WITHOUT_CLASSIFICATION	8.781771140348453E-5	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.9999121822885966	WITHOUT_CLASSIFICATION	8.781771140348453E-5	IMPLEMENTATION
//            case SCLASSNODE: return buildSClass(node, m); // DEFERRED // done // done // done // done // done // done // done // done //            case UNDEFNODE: return buildUndef(node, m); // DEFERRED // done //            case VALIASNODE: return buildVAlias(node, m); // DEFERRED // done // done	WITHOUT_CLASSIFICATION	0.9997609568978055	WITHOUT_CLASSIFICATION	2.3904310219449167E-4	IMPLEMENTATION
// // Adding a post-invoke for the cb result serves to both keep it alive // until after the function returns, and allows us to clean up the native // trampoline early, instead of letting them accumulate until a GC run //	WITHOUT_CLASSIFICATION	0.9995588364466645	WITHOUT_CLASSIFICATION	4.411635533355005E-4	IMPLEMENTATION
/* The Java method doesn't care what class it is, but we need to               know what to convert it to, so we use the object's own class.               If that doesn't help, we use String to force a call to the               object's "to_s" method. */	WITHOUT_CLASSIFICATION	0.9752794644798101	WITHOUT_CLASSIFICATION	0.024720535520190014	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.9998496979917575	WITHOUT_CLASSIFICATION	1.5030200824254293E-4	IMPLEMENTATION
// Atomic integers for symbol and method IDs	WITHOUT_CLASSIFICATION	0.9966344530879292	WITHOUT_CLASSIFICATION	0.003365546912070887	IMPLEMENTATION
/* 18! */	WITHOUT_CLASSIFICATION	0.9999970415563082	WITHOUT_CLASSIFICATION	2.9584436917105443E-6	IMPLEMENTATION
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9316901311316907	WITHOUT_CLASSIFICATION	0.06830986886830921	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9997437442767397	WITHOUT_CLASSIFICATION	2.5625572326022384E-4	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9997437442767397	WITHOUT_CLASSIFICATION	2.5625572326022384E-4	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9997437442767397	WITHOUT_CLASSIFICATION	2.5625572326022384E-4	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9997437442767397	WITHOUT_CLASSIFICATION	2.5625572326022384E-4	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999934298377849	WITHOUT_CLASSIFICATION	6.5701622150749896E-6	IMPLEMENTATION
/*      * This method takes as input a map of operands to their values, and outputs     * the result of this instruction.     *     * If the value map provides a value for any of the instruction's operands     * the expectation is that the operand will be replaced with the simplified value.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify.     *     * @param valueMap Mapping from operands to their simplified values     * @returns simplified result / output of this instruction     */	WITHOUT_CLASSIFICATION	0.9999685375584664	WITHOUT_CLASSIFICATION	3.14624415336157E-5	IMPLEMENTATION
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9830968146471667	WITHOUT_CLASSIFICATION	0.016903185352833274	IMPLEMENTATION
// An atomic long for generating DynamicMethod serial numbers	WITHOUT_CLASSIFICATION	0.9997401582884506	WITHOUT_CLASSIFICATION	2.598417115493359E-4	IMPLEMENTATION
// MRI behavior: always check whether the file is writable // or not, even if we are to write 0 bytes.	WITHOUT_CLASSIFICATION	0.9997960028661452	WITHOUT_CLASSIFICATION	2.0399713385477655E-4	IMPLEMENTATION
/* 22! */	WITHOUT_CLASSIFICATION	0.9999970415563082	WITHOUT_CLASSIFICATION	2.9584436917105443E-6	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.9988166854232297	WITHOUT_CLASSIFICATION	0.001183314576770457	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.999687168587596	WITHOUT_CLASSIFICATION	3.1283141240402734E-4	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.999687168587596	WITHOUT_CLASSIFICATION	3.1283141240402734E-4	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.999687168587596	WITHOUT_CLASSIFICATION	3.1283141240402734E-4	IMPLEMENTATION
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999854397783389	WITHOUT_CLASSIFICATION	1.4560221661041016E-5	IMPLEMENTATION
// Build a new class and add it to the current scope (could be a script / module / class)	WITHOUT_CLASSIFICATION	0.9996681133447204	WITHOUT_CLASSIFICATION	3.3188665527956394E-4	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9992395020837381	WITHOUT_CLASSIFICATION	7.604979162619357E-4	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9992395020837381	WITHOUT_CLASSIFICATION	7.604979162619357E-4	IMPLEMENTATION
// AF_INET	WITHOUT_CLASSIFICATION	0.999975778940229	WITHOUT_CLASSIFICATION	2.422105977089807E-5	IMPLEMENTATION
//////////////////////////////////////////////////////////////////////////// // Now we provide default impls of a number of signatures. For each arity, // we first generate a non-block version of the method, which just adds // NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can // potentially take a block, to only generate the block-receiving signature // and still avoid arg boxing. // // We then provide default implementations of each block-accepting method // that in turn call the IRubyObject[]+Block version of call. This then // finally falls back on the minimum implementation requirement for // dynamic method handles. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9420021668090015	WITHOUT_CLASSIFICATION	0.05799783319099853	IMPLEMENTATION
// Because we implement Java interfaces now, we need a new === that's // aware of those additional "virtual" supertypes	WITHOUT_CLASSIFICATION	0.9702392006290933	WITHOUT_CLASSIFICATION	0.029760799370906733	IMPLEMENTATION
// BASE64	WITHOUT_CLASSIFICATION	0.999975778940229	WITHOUT_CLASSIFICATION	2.422105977089807E-5	IMPLEMENTATION
/* note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY         * when value is an integer less than 1.         * We treat 0 as a special case to avoid Domain error.         */	WITHOUT_CLASSIFICATION	0.9999384700670455	WITHOUT_CLASSIFICATION	6.152993295441541E-5	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.9992630382839363	WITHOUT_CLASSIFICATION	7.369617160638185E-4	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9991328006756938	WITHOUT_CLASSIFICATION	8.671993243063015E-4	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9991328006756938	WITHOUT_CLASSIFICATION	8.671993243063015E-4	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.999573549606847	WITHOUT_CLASSIFICATION	4.2645039315306787E-4	IMPLEMENTATION
// SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode // We won't get here for argument receives!  So, buildDasgn is called for // assignments to block variables within a block.  As far as the IR is concerned, // this is just a simple copy	WITHOUT_CLASSIFICATION	0.9999979348805546	WITHOUT_CLASSIFICATION	2.065119445370388E-6	IMPLEMENTATION
// getSimplifiedOperand returns the value of this operand, fully simplified // getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away // // The value is used during optimizations and propagated through the IR.  But, it is thrown away after that. // But, the operand form is used for constructing the compound objects represented by the operand. // // Example: a = [1], b = [3,4], c = [a,b], d = [2,c] //   -- getValue(c) = [1,[3,4]];     getSimplifiedOperand(c) = [1, b] //   -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] // // Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. // So, if contents of a or b is modified, the "simplified value"s of c and d also change!  This difference // is captured by these two methods.	WITHOUT_CLASSIFICATION	0.9999648008555753	WITHOUT_CLASSIFICATION	3.519914442470227E-5	IMPLEMENTATION
//IRubyObject protocol = args[4];	WITHOUT_CLASSIFICATION	0.99835144164039	WITHOUT_CLASSIFICATION	0.0016485583596098918	IMPLEMENTATION
// promise to implement three to N with block	WITHOUT_CLASSIFICATION	0.9021965098575588	WITHOUT_CLASSIFICATION	0.09780349014244116	IMPLEMENTATION
// Ruby's OMG capture all source in a Hash feature // Add each line to buffer when encountering newline or EOF for first time.	WITHOUT_CLASSIFICATION	0.9999794207056445	WITHOUT_CLASSIFICATION	2.0579294355533194E-5	IMPLEMENTATION
// carriage return	WITHOUT_CLASSIFICATION	0.9989727067493313	WITHOUT_CLASSIFICATION	0.001027293250668792	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9985897601692725	WITHOUT_CLASSIFICATION	0.0014102398307274753	IMPLEMENTATION
// String construction routines by NOT byte[] buffer and making the target String shared 	WITHOUT_CLASSIFICATION	0.9997130032012317	WITHOUT_CLASSIFICATION	2.869967987682406E-4	IMPLEMENTATION
// insert all nodes in sequence, hash them in the final instruction // KEY	WITHOUT_CLASSIFICATION	0.9998221530424879	WITHOUT_CLASSIFICATION	1.7784695751204535E-4	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999500329409369	WITHOUT_CLASSIFICATION	4.996705906305214E-5	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.8055495041466496	WITHOUT_CLASSIFICATION	0.19445049585335047	IMPLEMENTATION
// Basic Block id // CFG that this basic block belongs to // All basic blocks have a starting label // List of non-label instructions	WITHOUT_CLASSIFICATION	0.9931021467136986	WITHOUT_CLASSIFICATION	0.006897853286301431	IMPLEMENTATION
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9992372743101539	WITHOUT_CLASSIFICATION	7.627256898461561E-4	IMPLEMENTATION
// For all uninitialized specific arities, we defer to the "n" method which // should raise appropriate error in all cases.	WITHOUT_CLASSIFICATION	0.8333119068079344	WITHOUT_CLASSIFICATION	0.16668809319206548	IMPLEMENTATION
// implement is called to force this class to create stubs for all // methods in the given interface, so they'll show up in the list // of methods and be invocable without passing through method_missing	WITHOUT_CLASSIFICATION	0.999948256821101	WITHOUT_CLASSIFICATION	5.1743178898924404E-5	IMPLEMENTATION
// CASE IR instructions are dummy instructions  // -- all when/then clauses have been converted into if-then-else blocks	WITHOUT_CLASSIFICATION	0.9990831326266248	WITHOUT_CLASSIFICATION	9.168673733751206E-4	IMPLEMENTATION
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9998498237788611	WITHOUT_CLASSIFICATION	1.5017622113885966E-4	IMPLEMENTATION
// leave it null and fall back on our normal invocation logic	WITHOUT_CLASSIFICATION	0.9985885771753059	WITHOUT_CLASSIFICATION	0.0014114228246940542	IMPLEMENTATION
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9998548059735789	WITHOUT_CLASSIFICATION	1.451940264210775E-4	IMPLEMENTATION
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9766807960171159	WITHOUT_CLASSIFICATION	0.023319203982884153	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9970999702794219	WITHOUT_CLASSIFICATION	0.0029000297205781446	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9970999702794219	WITHOUT_CLASSIFICATION	0.0029000297205781446	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9970999702794219	WITHOUT_CLASSIFICATION	0.0029000297205781446	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9970999702794219	WITHOUT_CLASSIFICATION	0.0029000297205781446	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9970999702794219	WITHOUT_CLASSIFICATION	0.0029000297205781446	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9970999702794219	WITHOUT_CLASSIFICATION	0.0029000297205781446	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9970999702794219	WITHOUT_CLASSIFICATION	0.0029000297205781446	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9970999702794219	WITHOUT_CLASSIFICATION	0.0029000297205781446	IMPLEMENTATION
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9998012335200543	WITHOUT_CLASSIFICATION	1.9876647994566656E-4	IMPLEMENTATION
/* fall through */	WITHOUT_CLASSIFICATION	0.9997015089444836	WITHOUT_CLASSIFICATION	2.9849105551643044E-4	IMPLEMENTATION
// deal with case when "other" is not a string	WITHOUT_CLASSIFICATION	0.9990693358326274	WITHOUT_CLASSIFICATION	9.306641673726033E-4	IMPLEMENTATION
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.999902779062318	WITHOUT_CLASSIFICATION	9.72209376821224E-5	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9943916300527457	WITHOUT_CLASSIFICATION	0.005608369947254283	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9943916300527457	WITHOUT_CLASSIFICATION	0.005608369947254283	IMPLEMENTATION
// store argument count information into scope	WITHOUT_CLASSIFICATION	0.9998800030045242	WITHOUT_CLASSIFICATION	1.1999699547578151E-4	IMPLEMENTATION
// the load method is used for loading as a top-level script, and prepares appropriate scoping around the code	WITHOUT_CLASSIFICATION	0.9986437300746952	WITHOUT_CLASSIFICATION	0.0013562699253047879	IMPLEMENTATION
// First, build assignments for specific named arguments	WITHOUT_CLASSIFICATION	0.9997775296385286	WITHOUT_CLASSIFICATION	2.2247036147145585E-4	IMPLEMENTATION
//        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } //        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }	WITHOUT_CLASSIFICATION	0.9999231405414035	WITHOUT_CLASSIFICATION	7.68594585964766E-5	IMPLEMENTATION
// get current context	WITHOUT_CLASSIFICATION	0.99919192352983	WITHOUT_CLASSIFICATION	8.08076470170004E-4	IMPLEMENTATION
// octal constant	WITHOUT_CLASSIFICATION	0.9982168810342086	WITHOUT_CLASSIFICATION	0.001783118965791505	IMPLEMENTATION
// read	WITHOUT_CLASSIFICATION	0.9999792415230618	WITHOUT_CLASSIFICATION	2.0758476938054527E-5	IMPLEMENTATION
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.99021830782851	WITHOUT_CLASSIFICATION	0.009781692171490008	IMPLEMENTATION
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.998878143899476	WITHOUT_CLASSIFICATION	0.0011218561005239727	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9992798892541771	WITHOUT_CLASSIFICATION	7.201107458228891E-4	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9992798892541771	WITHOUT_CLASSIFICATION	7.201107458228891E-4	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9992798892541771	WITHOUT_CLASSIFICATION	7.201107458228891E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9997916381084292	WITHOUT_CLASSIFICATION	2.0836189157069212E-4	IMPLEMENTATION
// at end	WITHOUT_CLASSIFICATION	0.9999873842258435	WITHOUT_CLASSIFICATION	1.2615774156428155E-5	IMPLEMENTATION
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999391295130733	WITHOUT_CLASSIFICATION	6.087048692667369E-5	IMPLEMENTATION
// save blocking state	WITHOUT_CLASSIFICATION	0.9998464259993846	WITHOUT_CLASSIFICATION	1.53574000615522E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9995079923887843	WITHOUT_CLASSIFICATION	4.920076112157502E-4	IMPLEMENTATION
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9998904688654185	WITHOUT_CLASSIFICATION	1.0953113458135674E-4	IMPLEMENTATION
// fall back on empty env when security disallows environment var access (like in an applet)	WITHOUT_CLASSIFICATION	0.9999670010018528	WITHOUT_CLASSIFICATION	3.29989981471664E-5	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9991927924165495	WITHOUT_CLASSIFICATION	8.072075834504743E-4	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9991927924165495	WITHOUT_CLASSIFICATION	8.072075834504743E-4	IMPLEMENTATION
// load null block	WITHOUT_CLASSIFICATION	0.9960899000038782	WITHOUT_CLASSIFICATION	0.003910099996121874	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.99999563461965	WITHOUT_CLASSIFICATION	4.3653803500667985E-6	IMPLEMENTATION
// nothing else to here - the module version will be // included in the class.	WITHOUT_CLASSIFICATION	0.9998819820348588	WITHOUT_CLASSIFICATION	1.180179651412359E-4	IMPLEMENTATION
// JRUBY-1000, fail early when attempting to subclass a final Java class; // solved here by adding an exception-throwing "inherited"	WITHOUT_CLASSIFICATION	0.9987543668468037	WITHOUT_CLASSIFICATION	0.0012456331531962728	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9930460165310406	WITHOUT_CLASSIFICATION	0.006953983468959265	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9930460165310406	WITHOUT_CLASSIFICATION	0.006953983468959265	IMPLEMENTATION
// Translate ret = (a || b) to ret = (a ? true : b) as follows //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = true //    beq(v1, true, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9998685707343478	WITHOUT_CLASSIFICATION	1.3142926565222284E-4	IMPLEMENTATION
// Initial precision is that of double numbers 2^63/2 ~ 4E18 // 63-1 an even number of number bits // precision seems 16 to 18 digits	WITHOUT_CLASSIFICATION	0.999991159460991	WITHOUT_CLASSIFICATION	8.840539008985682E-6	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9996300686676426	WITHOUT_CLASSIFICATION	3.6993133235741616E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999591600903001	WITHOUT_CLASSIFICATION	4.083990969988955E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999591600903001	WITHOUT_CLASSIFICATION	4.083990969988955E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999591600903001	WITHOUT_CLASSIFICATION	4.083990969988955E-5	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.9988638231415384	WITHOUT_CLASSIFICATION	0.0011361768584615926	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.9994333085211135	WITHOUT_CLASSIFICATION	5.666914788864999E-4	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.9994333085211135	WITHOUT_CLASSIFICATION	5.666914788864999E-4	IMPLEMENTATION
// check arity	WITHOUT_CLASSIFICATION	0.9982209559426599	WITHOUT_CLASSIFICATION	0.0017790440573401225	IMPLEMENTATION
// check arity	WITHOUT_CLASSIFICATION	0.9982209559426599	WITHOUT_CLASSIFICATION	0.0017790440573401225	IMPLEMENTATION
// create the class	WITHOUT_CLASSIFICATION	0.9997610673233805	WITHOUT_CLASSIFICATION	2.3893267661955273E-4	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9992836704345559	WITHOUT_CLASSIFICATION	7.163295654441168E-4	IMPLEMENTATION
// No hex value after the 'x'.	WITHOUT_CLASSIFICATION	0.9999314610428467	WITHOUT_CLASSIFICATION	6.85389571533065E-5	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.999975778940229	WITHOUT_CLASSIFICATION	2.422105977089807E-5	IMPLEMENTATION
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999540256974796	WITHOUT_CLASSIFICATION	4.597430252052463E-5	IMPLEMENTATION
// Let m be the exact digits precision in an earlier! loop	WITHOUT_CLASSIFICATION	0.9999873644964072	WITHOUT_CLASSIFICATION	1.263550359281413E-5	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999597528656446	WITHOUT_CLASSIFICATION	4.024713435538709E-5	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.999943466594035	WITHOUT_CLASSIFICATION	5.653340596488557E-5	IMPLEMENTATION
// Label for the start of the method // Label for the end of the method	WITHOUT_CLASSIFICATION	0.9972838800427793	WITHOUT_CLASSIFICATION	0.0027161199572206312	IMPLEMENTATION
// comparisons & checks // checks if the operand is non-null and non-false // EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...	WITHOUT_CLASSIFICATION	0.9999995373790281	WITHOUT_CLASSIFICATION	4.626209718086053E-7	IMPLEMENTATION
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9986385284494232	WITHOUT_CLASSIFICATION	0.001361471550576766	IMPLEMENTATION
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9928217549266214	WITHOUT_CLASSIFICATION	0.0071782450733785625	IMPLEMENTATION
// all done with lookup attempts, release monitor	WITHOUT_CLASSIFICATION	0.9988253226308229	WITHOUT_CLASSIFICATION	0.0011746773691770484	IMPLEMENTATION
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.99998841479225	WITHOUT_CLASSIFICATION	1.1585207749929903E-5	IMPLEMENTATION
// Create list of interface names to proxy (and make sure they really are interfaces) // Also build a hashcode from all classes to use for retrieving previously-created impl	WITHOUT_CLASSIFICATION	0.999998845981825	WITHOUT_CLASSIFICATION	1.1540181750257723E-6	IMPLEMENTATION
// Construct local variables based on parameter names passed in	WITHOUT_CLASSIFICATION	0.9999087714343017	WITHOUT_CLASSIFICATION	9.122856569826311E-5	IMPLEMENTATION
// Value of "TZ" property is of a bit different format, // which confuses the Java's TimeZone.getTimeZone(id) method, // and so, we need to convert it.	WITHOUT_CLASSIFICATION	0.9981561209558633	WITHOUT_CLASSIFICATION	0.0018438790441367369	IMPLEMENTATION
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9912394872742898	WITHOUT_CLASSIFICATION	0.008760512725710188	IMPLEMENTATION
// ensure the object is associated with the wrapper we found it in, // so that if it comes back we don't re-wrap it	WITHOUT_CLASSIFICATION	0.9991819676438668	WITHOUT_CLASSIFICATION	8.180323561331648E-4	IMPLEMENTATION
// return sqrt(squarD) with precision of rootMC	WITHOUT_CLASSIFICATION	0.9994133359928214	WITHOUT_CLASSIFICATION	5.866640071785844E-4	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9705519620679468	WITHOUT_CLASSIFICATION	0.029448037932053226	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9999591600903001	WITHOUT_CLASSIFICATION	4.083990969988955E-5	IMPLEMENTATION
// Get a new label using the provided label prefix	WITHOUT_CLASSIFICATION	0.9999336807735962	WITHOUT_CLASSIFICATION	6.631922640376729E-5	IMPLEMENTATION
// normal exit, perform finally and return	WITHOUT_CLASSIFICATION	0.9996562353199827	WITHOUT_CLASSIFICATION	3.4376468001729463E-4	IMPLEMENTATION
// coerce arguments	WITHOUT_CLASSIFICATION	0.9987654204282813	WITHOUT_CLASSIFICATION	0.0012345795717186782	IMPLEMENTATION
// 0.0 is ok // float range // inverted float range? // NaN // +infinity // -infinity	WITHOUT_CLASSIFICATION	0.9984724150501062	WITHOUT_CLASSIFICATION	0.0015275849498937737	IMPLEMENTATION
/* expected */	WITHOUT_CLASSIFICATION	0.9998633893768186	WITHOUT_CLASSIFICATION	1.3661062318139064E-4	IMPLEMENTATION
// set this class's method names in var @__java_ovrd_methods if this // is the new class; otherwise, get method names from there if this is // a proxy superclass.	WITHOUT_CLASSIFICATION	0.9999992515499723	WITHOUT_CLASSIFICATION	7.484500278034066E-7	IMPLEMENTATION
/* ignore backslashed spaces in %w */	WITHOUT_CLASSIFICATION	0.9999931354202801	WITHOUT_CLASSIFICATION	6.864579719801545E-6	IMPLEMENTATION
// Invert the sign, since TZ format and Java format // use opposite signs, sigh... Also, Java API requires // the sign to be always present, be it "+" or "-".	WITHOUT_CLASSIFICATION	0.9954981602046435	WITHOUT_CLASSIFICATION	0.004501839795356458	IMPLEMENTATION
// no binding given, use 0 for both	WITHOUT_CLASSIFICATION	0.9994423752795766	WITHOUT_CLASSIFICATION	5.576247204234769E-4	IMPLEMENTATION
// <=> may return nil in many circumstances, e.g. 3 <=> NaN        	WITHOUT_CLASSIFICATION	0.9999360147196505	WITHOUT_CLASSIFICATION	6.398528034948899E-5	IMPLEMENTATION
// use numbered access method	WITHOUT_CLASSIFICATION	0.9882729192871413	WITHOUT_CLASSIFICATION	0.011727080712858651	IMPLEMENTATION
// Always use "GMT" since that's required by Java API.	WITHOUT_CLASSIFICATION	0.9986226951282597	WITHOUT_CLASSIFICATION	0.001377304871740267	IMPLEMENTATION
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9997555374160474	WITHOUT_CLASSIFICATION	2.4446258395257513E-4	IMPLEMENTATION
// The dataStruct is a place where custom information can be // contained for core implementations that doesn't necessarily // want to go to the trouble of creating a subclass of // RubyObject. The OpenSSL implementation uses this heavily to // save holder objects containing Java cryptography objects. // Java integration uses this to store the Java object ref. //protected transient Object dataStruct;	WITHOUT_CLASSIFICATION	0.9987553222677318	WITHOUT_CLASSIFICATION	0.001244677732268224	IMPLEMENTATION
// Remaining arguments are for the script itself	WITHOUT_CLASSIFICATION	0.9999121355567483	WITHOUT_CLASSIFICATION	8.786444325168771E-5	IMPLEMENTATION
// arg grouping, use slower arg walking logic	WITHOUT_CLASSIFICATION	0.9988242965102117	WITHOUT_CLASSIFICATION	0.0011757034897882904	IMPLEMENTATION
// build scope names string	WITHOUT_CLASSIFICATION	0.9999875598338777	WITHOUT_CLASSIFICATION	1.2440166122364895E-5	IMPLEMENTATION
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999719670414708	WITHOUT_CLASSIFICATION	2.803295852911718E-5	IMPLEMENTATION
// Here we create an "anonymous" exception type used for unrolling the stack. // MRI creates a new one for *every call* to timeout, which can be costly. // We opt to use a single exception type for all cases to avoid this overhead.	WITHOUT_CLASSIFICATION	0.9996905753486502	WITHOUT_CLASSIFICATION	3.094246513498545E-4	IMPLEMENTATION
// finally	WITHOUT_CLASSIFICATION	0.9999761152315335	WITHOUT_CLASSIFICATION	2.3884768466519846E-5	IMPLEMENTATION
// MRI behavior: With TZ equal to "GMT" or "UTC", Time.now // is *NOT* considered as a proper GMT/UTC time: //   ENV['TZ']="GMT" //   Time.now.gmt? ==> false //   ENV['TZ']="UTC" //   Time.now.utc? ==> false // Hence, we need to adjust for that.	WITHOUT_CLASSIFICATION	0.9987319568425397	WITHOUT_CLASSIFICATION	0.0012680431574603095	IMPLEMENTATION
// ?l  | boolean | True if file1 exists and is a symbolic link	WITHOUT_CLASSIFICATION	0.9999781948151101	WITHOUT_CLASSIFICATION	2.180518488995392E-5	IMPLEMENTATION
// This try/catch is to allow failing over to the "commands" logic // when running from within a jruby-complete jar file, which has // jruby.home = a jar file URL that does not resolve correctly with // JRubyFile.create.	WITHOUT_CLASSIFICATION	0.9811144848061429	WITHOUT_CLASSIFICATION	0.018885515193857033	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9848070130496909	WITHOUT_CLASSIFICATION	0.015192986950309071	IMPLEMENTATION
// specific arity	WITHOUT_CLASSIFICATION	0.9964057538132735	WITHOUT_CLASSIFICATION	0.003594246186726514	IMPLEMENTATION
// In the case of two arguments, MRI will discard the portion of // the first argument after a decimal point (i.e., "floor"). // However in the case of a single argument, any portion after // the decimal point is honored.	WITHOUT_CLASSIFICATION	0.9999617099531469	WITHOUT_CLASSIFICATION	3.8290046853201157E-5	IMPLEMENTATION
// ?w  | boolean | True if file1 exists and is writable by effective uid/gid	WITHOUT_CLASSIFICATION	0.9999527823959948	WITHOUT_CLASSIFICATION	4.721760400516264E-5	IMPLEMENTATION
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9993837240754918	WITHOUT_CLASSIFICATION	6.162759245082557E-4	IMPLEMENTATION
/*    @JRubyMethod    public IRubyObject to_proc() {        return RubyProc.newProc(getRuntime(),                                CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()),                                Block.Type.PROC);    }    */	WITHOUT_CLASSIFICATION	0.9999947837181113	WITHOUT_CLASSIFICATION	5.216281888580058E-6	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9996588457113772	WITHOUT_CLASSIFICATION	3.4115428862279654E-4	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9996588457113772	WITHOUT_CLASSIFICATION	3.4115428862279654E-4	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9996214040604245	WITHOUT_CLASSIFICATION	3.785959395754946E-4	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9996214040604245	WITHOUT_CLASSIFICATION	3.785959395754946E-4	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9927010470423047	WITHOUT_CLASSIFICATION	0.007298952957695242	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9927010470423047	WITHOUT_CLASSIFICATION	0.007298952957695242	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999495525350193	WITHOUT_CLASSIFICATION	5.044746498070486E-5	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999495525350193	WITHOUT_CLASSIFICATION	5.044746498070486E-5	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9986385284494232	WITHOUT_CLASSIFICATION	0.001361471550576766	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9986385284494232	WITHOUT_CLASSIFICATION	0.001361471550576766	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9986385284494232	WITHOUT_CLASSIFICATION	0.001361471550576766	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9986385284494232	WITHOUT_CLASSIFICATION	0.001361471550576766	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9986385284494232	WITHOUT_CLASSIFICATION	0.001361471550576766	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9986385284494232	WITHOUT_CLASSIFICATION	0.001361471550576766	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9986385284494232	WITHOUT_CLASSIFICATION	0.001361471550576766	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9986385284494232	WITHOUT_CLASSIFICATION	0.001361471550576766	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9986385284494232	WITHOUT_CLASSIFICATION	0.001361471550576766	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9998444300862904	WITHOUT_CLASSIFICATION	1.555699137096625E-4	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9998444300862904	WITHOUT_CLASSIFICATION	1.555699137096625E-4	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9998444300862904	WITHOUT_CLASSIFICATION	1.555699137096625E-4	IMPLEMENTATION
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9996707823074714	WITHOUT_CLASSIFICATION	3.2921769252855775E-4	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999584559756115	WITHOUT_CLASSIFICATION	4.154402438859343E-5	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999584559756115	WITHOUT_CLASSIFICATION	4.154402438859343E-5	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999584559756115	WITHOUT_CLASSIFICATION	4.154402438859343E-5	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9991095430989303	WITHOUT_CLASSIFICATION	8.904569010696275E-4	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9991095430989303	WITHOUT_CLASSIFICATION	8.904569010696275E-4	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9991095430989303	WITHOUT_CLASSIFICATION	8.904569010696275E-4	IMPLEMENTATION
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9993837240754918	WITHOUT_CLASSIFICATION	6.162759245082557E-4	IMPLEMENTATION
// backspace	WITHOUT_CLASSIFICATION	0.9986451803831945	WITHOUT_CLASSIFICATION	0.0013548196168054845	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
/* package-private */	WITHOUT_CLASSIFICATION	0.9999540256974796	WITHOUT_CLASSIFICATION	4.597430252052463E-5	IMPLEMENTATION
// fall through	WITHOUT_CLASSIFICATION	0.9975614049924504	WITHOUT_CLASSIFICATION	0.0024385950075495634	IMPLEMENTATION
// fall through	WITHOUT_CLASSIFICATION	0.9975614049924504	WITHOUT_CLASSIFICATION	0.0024385950075495634	IMPLEMENTATION
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.996473139052984	WITHOUT_CLASSIFICATION	0.0035268609470161397	IMPLEMENTATION
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9817780761660275	WITHOUT_CLASSIFICATION	0.01822192383397252	IMPLEMENTATION
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9817780761660275	WITHOUT_CLASSIFICATION	0.01822192383397252	IMPLEMENTATION
/**      * Nested class whose instances act as thunks reacting to to_str method     * called from (Exception#to_str, Exception#message)     * MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!",     * to_str implementation: "name_err_mesg_to_str"     *     * TODO: this class should not be lookupable     */	WITHOUT_CLASSIFICATION	0.9356226321776979	IMPLEMENTATION	0.06437736782230205	WITHOUT_CLASSIFICATION
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9466375563711192	WITHOUT_CLASSIFICATION	0.05336244362888089	IMPLEMENTATION
// The name of this source (e.g. a filename: foo.rb)	WITHOUT_CLASSIFICATION	0.9998264381909323	WITHOUT_CLASSIFICATION	1.73561809067702E-4	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9998795953014011	WITHOUT_CLASSIFICATION	1.2040469859880327E-4	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9998795953014011	WITHOUT_CLASSIFICATION	1.2040469859880327E-4	IMPLEMENTATION
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9997847371969114	WITHOUT_CLASSIFICATION	2.1526280308855743E-4	IMPLEMENTATION
// We yield here to hopefully permit the target thread to schedule // MRI immediately schedules it, so this is close but not exact	WITHOUT_CLASSIFICATION	0.9996060817567444	WITHOUT_CLASSIFICATION	3.9391824325564424E-4	IMPLEMENTATION
// note that addMethod now does its own put, so any change made to // functionality here should be made there as well 	WITHOUT_CLASSIFICATION	0.9999727070648694	WITHOUT_CLASSIFICATION	2.7292935130654815E-5	IMPLEMENTATION
/* Currently dead code, but useful when we figure out how to actually perform translit.    private static boolean isTranslit(String encoding) {        return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false;    }*/	WITHOUT_CLASSIFICATION	0.9999239229052551	WITHOUT_CLASSIFICATION	7.607709474493946E-5	IMPLEMENTATION
// empirically it appears that to_ary coersions always return array or nil, so this // should always be an array by now.	WITHOUT_CLASSIFICATION	0.9991446975172177	WITHOUT_CLASSIFICATION	8.553024827822627E-4	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9998795953014011	WITHOUT_CLASSIFICATION	1.2040469859880327E-4	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9998795953014011	WITHOUT_CLASSIFICATION	1.2040469859880327E-4	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9998795953014011	WITHOUT_CLASSIFICATION	1.2040469859880327E-4	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9998795953014011	WITHOUT_CLASSIFICATION	1.2040469859880327E-4	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9998795953014011	WITHOUT_CLASSIFICATION	1.2040469859880327E-4	IMPLEMENTATION
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999685736053258	WITHOUT_CLASSIFICATION	3.142639467419515E-5	IMPLEMENTATION
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9989873936674047	WITHOUT_CLASSIFICATION	0.0010126063325952125	IMPLEMENTATION
// if it's an inner class and it's not public, we can't access it; // skip population of declared elements	WITHOUT_CLASSIFICATION	0.9993290486393259	WITHOUT_CLASSIFICATION	6.70951360673986E-4	IMPLEMENTATION
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9998586551211389	WITHOUT_CLASSIFICATION	1.4134487886113402E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9823545370077412	WITHOUT_CLASSIFICATION	0.01764546299225871	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9823545370077412	WITHOUT_CLASSIFICATION	0.01764546299225871	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9823545370077412	WITHOUT_CLASSIFICATION	0.01764546299225871	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9823545370077412	WITHOUT_CLASSIFICATION	0.01764546299225871	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9823545370077412	WITHOUT_CLASSIFICATION	0.01764546299225871	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9823545370077412	WITHOUT_CLASSIFICATION	0.01764546299225871	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9823545370077412	WITHOUT_CLASSIFICATION	0.01764546299225871	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9823545370077412	WITHOUT_CLASSIFICATION	0.01764546299225871	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9823545370077412	WITHOUT_CLASSIFICATION	0.01764546299225871	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9823545370077412	WITHOUT_CLASSIFICATION	0.01764546299225871	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9823545370077412	WITHOUT_CLASSIFICATION	0.01764546299225871	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9823545370077412	WITHOUT_CLASSIFICATION	0.01764546299225871	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9823545370077412	WITHOUT_CLASSIFICATION	0.01764546299225871	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9823545370077412	WITHOUT_CLASSIFICATION	0.01764546299225871	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9823545370077412	WITHOUT_CLASSIFICATION	0.01764546299225871	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9823545370077412	WITHOUT_CLASSIFICATION	0.01764546299225871	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9823545370077412	WITHOUT_CLASSIFICATION	0.01764546299225871	IMPLEMENTATION
// MRI behavior on Windows: it treats '/' as a root of // a current drive (but only if SINGLE slash is present!): // E.g., if current work directory is // 'D:/home/directory', then '/' means 'D:/'. // // Basically, '/path' is treated as a *RELATIVE* path, // relative to the current drive. '//path' is treated // as absolute one.	WITHOUT_CLASSIFICATION	0.9999678895452679	WITHOUT_CLASSIFICATION	3.2110454732046244E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9823545370077412	WITHOUT_CLASSIFICATION	0.01764546299225871	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9823545370077412	WITHOUT_CLASSIFICATION	0.01764546299225871	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9823545370077412	WITHOUT_CLASSIFICATION	0.01764546299225871	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9823545370077412	WITHOUT_CLASSIFICATION	0.01764546299225871	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9823545370077412	WITHOUT_CLASSIFICATION	0.01764546299225871	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9823545370077412	WITHOUT_CLASSIFICATION	0.01764546299225871	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9823545370077412	WITHOUT_CLASSIFICATION	0.01764546299225871	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9823545370077412	WITHOUT_CLASSIFICATION	0.01764546299225871	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9823545370077412	WITHOUT_CLASSIFICATION	0.01764546299225871	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9823545370077412	WITHOUT_CLASSIFICATION	0.01764546299225871	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9823545370077412	WITHOUT_CLASSIFICATION	0.01764546299225871	IMPLEMENTATION
// This is needed when the enclosing class or module is a singleton. // In that case, we generated a name such as null::Foo, which broke  // Marshalling, among others. The correct thing to do in this situation  // is to insert the generate the name of form #<Class:01xasdfasd> if  // it's a singleton module/class, which this code accomplishes.	WITHOUT_CLASSIFICATION	0.8181359731736249	WITHOUT_CLASSIFICATION	0.18186402682637517	IMPLEMENTATION
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9973439326994339	WITHOUT_CLASSIFICATION	0.0026560673005660263	IMPLEMENTATION
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9997883105884108	WITHOUT_CLASSIFICATION	2.1168941158920696E-4	IMPLEMENTATION
// get "self"	WITHOUT_CLASSIFICATION	0.9994190011368735	WITHOUT_CLASSIFICATION	5.809988631264141E-4	IMPLEMENTATION
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999720226357317	WITHOUT_CLASSIFICATION	2.79773642683245E-5	IMPLEMENTATION
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9975366352901344	WITHOUT_CLASSIFICATION	0.0024633647098657556	IMPLEMENTATION
// only public methods	WITHOUT_CLASSIFICATION	0.9998984846966098	WITHOUT_CLASSIFICATION	1.0151530339017046E-4	IMPLEMENTATION
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9995152370747703	WITHOUT_CLASSIFICATION	4.847629252296746E-4	IMPLEMENTATION
// First try to use drive letter from supplied dir value, // then try current work dir.	WITHOUT_CLASSIFICATION	0.9990122607318159	WITHOUT_CLASSIFICATION	9.877392681840573E-4	IMPLEMENTATION
// JRUBY-2435: Aliasing eval and other "special" methods should display a warning // We warn because we treat certain method names as "special" for purposes of // optimization. Hopefully this will be enough to convince people not to alias // them.	WITHOUT_CLASSIFICATION	0.8969210589917955	WITHOUT_CLASSIFICATION	0.10307894100820456	IMPLEMENTATION
// generate a real method signature for the method, with to/from coercions	WITHOUT_CLASSIFICATION	0.9972428809011825	WITHOUT_CLASSIFICATION	0.0027571190988175415	IMPLEMENTATION
// block argument to the method // closure present // class present // method table mutations, def, defs, undef, alias // likely call to eval // makes calls that are aware of the frame // makes calls that are aware of the frame's self // makes calls that are aware of the frame's visibility // makes calls that are aware of the frame's block // makes calls that are aware of the frame's name // makes calls that set or get backref // makes calls that set or get lastline // makes calls that are aware of the frame's class // optional arguments to the method // rest arg to the method // makes calls that are aware of the scope // makes a zero-argument super call // accesses or sets constants // accesses or sets class variables // makes normal super call // contains a retry	WITHOUT_CLASSIFICATION	0.9929319307287682	WITHOUT_CLASSIFICATION	0.007068069271231857	IMPLEMENTATION
// // Add aliases in Type::*, NativeType::* and FFI::TYPE_* //	WITHOUT_CLASSIFICATION	0.9999473457871072	WITHOUT_CLASSIFICATION	5.2654212892772605E-5	IMPLEMENTATION
// Create constants for flock	WITHOUT_CLASSIFICATION	0.99995833080365	WITHOUT_CLASSIFICATION	4.166919634990013E-5	IMPLEMENTATION
// double-testing args.length here, but it avoids duplicating the proc-setup code in two places	WITHOUT_CLASSIFICATION	0.9999642792602396	WITHOUT_CLASSIFICATION	3.572073976040496E-5	IMPLEMENTATION
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999899295974817	WITHOUT_CLASSIFICATION	1.0070402518387938E-5	IMPLEMENTATION
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999570787345271	WITHOUT_CLASSIFICATION	4.292126547294048E-5	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9988310268428674	WITHOUT_CLASSIFICATION	0.0011689731571326914	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9988310268428674	WITHOUT_CLASSIFICATION	0.0011689731571326914	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9988310268428674	WITHOUT_CLASSIFICATION	0.0011689731571326914	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9988310268428674	WITHOUT_CLASSIFICATION	0.0011689731571326914	IMPLEMENTATION
// snapshot of contents of directory // current position in directory	WITHOUT_CLASSIFICATION	0.9999954360398396	WITHOUT_CLASSIFICATION	4.563960160253664E-6	IMPLEMENTATION
// Exclusive locks in Java require the channel to be writable, otherwise // an exception is thrown (terminating JRuby execution). // But flock behavior of MRI is that it allows // exclusive locks even on non-writable file. So we convert exclusive // lock to shared lock if the channel is not writable, to better match // the MRI behavior.	WITHOUT_CLASSIFICATION	0.9666753532102219	WITHOUT_CLASSIFICATION	0.033324646789777986	IMPLEMENTATION
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9997093885715019	WITHOUT_CLASSIFICATION	2.906114284980453E-4	IMPLEMENTATION
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9997093885715019	WITHOUT_CLASSIFICATION	2.906114284980453E-4	IMPLEMENTATION
// set self to the class	WITHOUT_CLASSIFICATION	0.9997194175088249	WITHOUT_CLASSIFICATION	2.8058249117513987E-4	IMPLEMENTATION
/* ---------- Public fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999312375616528	WITHOUT_CLASSIFICATION	6.876243834716857E-5	IMPLEMENTATION
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9996542942651738	WITHOUT_CLASSIFICATION	3.4570573482619514E-4	IMPLEMENTATION
// zero args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9998070591304946	WITHOUT_CLASSIFICATION	1.9294086950548254E-4	IMPLEMENTATION
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9995462821191897	WITHOUT_CLASSIFICATION	4.5371788081022263E-4	IMPLEMENTATION
// Store each line into this list if not null.	WITHOUT_CLASSIFICATION	0.9991413869478131	WITHOUT_CLASSIFICATION	8.586130521869664E-4	IMPLEMENTATION
// Portion of line right after beginning marker	WITHOUT_CLASSIFICATION	0.9996738257568801	WITHOUT_CLASSIFICATION	3.261742431198647E-4	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9994899725572152	WITHOUT_CLASSIFICATION	5.100274427847478E-4	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9994899725572152	WITHOUT_CLASSIFICATION	5.100274427847478E-4	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9994899725572152	WITHOUT_CLASSIFICATION	5.100274427847478E-4	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9994899725572152	WITHOUT_CLASSIFICATION	5.100274427847478E-4	IMPLEMENTATION
// If an IO exception occurs (something odd, but possible) // A directory may return null.	WITHOUT_CLASSIFICATION	0.9999885962323277	WITHOUT_CLASSIFICATION	1.1403767672300522E-5	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999849326305943	WITHOUT_CLASSIFICATION	1.5067369405651201E-5	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999849326305943	WITHOUT_CLASSIFICATION	1.5067369405651201E-5	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999849326305943	WITHOUT_CLASSIFICATION	1.5067369405651201E-5	IMPLEMENTATION
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9981319144215386	WITHOUT_CLASSIFICATION	0.0018680855784613782	IMPLEMENTATION
// finally with no exception	WITHOUT_CLASSIFICATION	0.9987641212476994	WITHOUT_CLASSIFICATION	0.0012358787523005937	IMPLEMENTATION
// Now, for all variables used by 'i' mark them live before 'i'	WITHOUT_CLASSIFICATION	0.9997857644416366	WITHOUT_CLASSIFICATION	2.1423555836341693E-4	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.8121718122326999	IMPLEMENTATION	0.18782818776730015	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.8121718122326999	IMPLEMENTATION	0.18782818776730015	WITHOUT_CLASSIFICATION
/* The counting of slashes that follows is simply a way to adhere to          * Ruby's UNC (or something) compatibility. When Ruby's expand_path is          * called with "//foo//bar" it will return "//foo/bar". JRuby uses          * java.io.File, and hence returns "/foo/bar". In order to retain          * java.io.File in the lower layers and provide full Ruby          * compatibility, the number of extra slashes must be counted and          * prepended to the result.         */	WITHOUT_CLASSIFICATION	0.9999961397441327	WITHOUT_CLASSIFICATION	3.860255867350775E-6	IMPLEMENTATION
// This is almost always already interned, since it will be called with a symbol in most cases // but when created from Java code, we might get an argument that needs to be interned. // addAccessor has as a precondition that the string MUST be interned	WITHOUT_CLASSIFICATION	0.9999999941613349	WITHOUT_CLASSIFICATION	5.838665095672826E-9	IMPLEMENTATION
/* not a class */	WITHOUT_CLASSIFICATION	0.9989659690959803	WITHOUT_CLASSIFICATION	0.0010340309040195923	IMPLEMENTATION
/* not a class */	WITHOUT_CLASSIFICATION	0.9989659690959803	WITHOUT_CLASSIFICATION	0.0010340309040195923	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9988241092547822	WITHOUT_CLASSIFICATION	0.0011758907452177826	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9988241092547822	WITHOUT_CLASSIFICATION	0.0011758907452177826	IMPLEMENTATION
// io.available() only returns 0 after EOF is encountered // so we need to differentiate between the empty string and EOF	WITHOUT_CLASSIFICATION	0.9999816982547092	WITHOUT_CLASSIFICATION	1.8301745290820324E-5	IMPLEMENTATION
// In the current logic, if we get here we know that module is not an // IncludedModuleWrapper, so there's no need to fish out the delegate. But just // in case the logic should change later, let's do it anyway	WITHOUT_CLASSIFICATION	0.9877342620449465	WITHOUT_CLASSIFICATION	0.012265737955053434	IMPLEMENTATION
// rb_iterate((VALUE(*)_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);	WITHOUT_CLASSIFICATION	0.9993837240754918	WITHOUT_CLASSIFICATION	6.162759245082557E-4	IMPLEMENTATION
// Broken symlinks considered by exists() as non-existing, // so we need to check for symlinks explicitly.	WITHOUT_CLASSIFICATION	0.9983150441551359	WITHOUT_CLASSIFICATION	0.0016849558448640792	IMPLEMENTATION
// ////////////////// CONSTANT API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9992920568921324	WITHOUT_CLASSIFICATION	7.079431078674711E-4	IMPLEMENTATION
// create the default thread group	WITHOUT_CLASSIFICATION	0.9999555870756404	WITHOUT_CLASSIFICATION	4.441292435951996E-5	IMPLEMENTATION
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9993875481148932	WITHOUT_CLASSIFICATION	6.124518851067592E-4	IMPLEMENTATION
/* ============================     * Here are hash internals     * (This could be extracted to a separate class but it's not too large though)     * ============================     */	WITHOUT_CLASSIFICATION	0.9999965243847025	WITHOUT_CLASSIFICATION	3.475615297340567E-6	IMPLEMENTATION
// ////////////////// LOW-LEVEL CLASS VARIABLE INTERFACE //////////////// // // fetch/store/list class variables for this module //	WITHOUT_CLASSIFICATION	0.9997713232057426	WITHOUT_CLASSIFICATION	2.2867679425745102E-4	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9993665207976737	WITHOUT_CLASSIFICATION	6.334792023263506E-4	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9993665207976737	WITHOUT_CLASSIFICATION	6.334792023263506E-4	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999589557532874	WITHOUT_CLASSIFICATION	4.104424671272434E-5	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999589557532874	WITHOUT_CLASSIFICATION	4.104424671272434E-5	IMPLEMENTATION
// retuns null when not found to avoid unnecessary getRuntime().getNil() call	WITHOUT_CLASSIFICATION	0.9531398768913625	WITHOUT_CLASSIFICATION	0.04686012310863746	IMPLEMENTATION
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9996854889118338	WITHOUT_CLASSIFICATION	3.1451108816616264E-4	IMPLEMENTATION
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9998335097239774	WITHOUT_CLASSIFICATION	1.6649027602250264E-4	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9989612992561224	WITHOUT_CLASSIFICATION	0.0010387007438775661	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9989612992561224	WITHOUT_CLASSIFICATION	0.0010387007438775661	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9989612992561224	WITHOUT_CLASSIFICATION	0.0010387007438775661	IMPLEMENTATION
// line 286	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 476	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 513	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 530	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 533	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 537	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 551	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// end loop	WITHOUT_CLASSIFICATION	0.9975320675118929	WITHOUT_CLASSIFICATION	0.0024679324881070673	IMPLEMENTATION
// MRI behavior: we don't print errno for actual Errno errors	WITHOUT_CLASSIFICATION	0.9995685592269611	WITHOUT_CLASSIFICATION	4.3144077303888996E-4	IMPLEMENTATION
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9913505343990276	WITHOUT_CLASSIFICATION	0.008649465600972373	IMPLEMENTATION
// Traverse the instructions in this basic block in reverse order! // Mark as dead all instructions whose results are not used! 	WITHOUT_CLASSIFICATION	0.9964760053976618	WITHOUT_CLASSIFICATION	0.003523994602338301	IMPLEMENTATION
// // fields should really be an immutable map as it is never modified after construction //	WITHOUT_CLASSIFICATION	0.9972995864754923	WITHOUT_CLASSIFICATION	0.0027004135245077454	IMPLEMENTATION
// load self object as IRubyObject, for recv param	WITHOUT_CLASSIFICATION	0.9997598675131	WITHOUT_CLASSIFICATION	2.4013248690004578E-4	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.8121718122326999	IMPLEMENTATION	0.18782818776730015	WITHOUT_CLASSIFICATION
// If we define a class in Ruby, but later want to allow it to be defined in Java, // the allocator needs to be updated	WITHOUT_CLASSIFICATION	0.9999599924383014	WITHOUT_CLASSIFICATION	4.0007561698664765E-5	IMPLEMENTATION
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9968290074182778	WITHOUT_CLASSIFICATION	0.0031709925817220864	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9983566808223192	WITHOUT_CLASSIFICATION	0.0016433191776808302	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999591600903001	WITHOUT_CLASSIFICATION	4.083990969988955E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999591600903001	WITHOUT_CLASSIFICATION	4.083990969988955E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999591600903001	WITHOUT_CLASSIFICATION	4.083990969988955E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999591600903001	WITHOUT_CLASSIFICATION	4.083990969988955E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999591600903001	WITHOUT_CLASSIFICATION	4.083990969988955E-5	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9977064833513248	WITHOUT_CLASSIFICATION	0.002293516648675084	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999591600903001	WITHOUT_CLASSIFICATION	4.083990969988955E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999591600903001	WITHOUT_CLASSIFICATION	4.083990969988955E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999591600903001	WITHOUT_CLASSIFICATION	4.083990969988955E-5	IMPLEMENTATION
// MRI has extra pointer which makes our code look a little bit // more strange in // comparison	WITHOUT_CLASSIFICATION	0.9996578971341811	WITHOUT_CLASSIFICATION	3.4210286581894085E-4	IMPLEMENTATION
// Tempory buffer to build up a potential token.  Consumer takes responsibility to reset  // this before use.	WITHOUT_CLASSIFICATION	0.9995751329808156	WITHOUT_CLASSIFICATION	4.2486701918441767E-4	IMPLEMENTATION
//tmpPosition is required because getPosition()'s side effects. //if the warning is generated, the getPosition() on line 954 (this line + 18) will create //a wrong position if the "inclusive" flag is not set.	WITHOUT_CLASSIFICATION	0.9993225845390545	WITHOUT_CLASSIFICATION	6.774154609454176E-4	IMPLEMENTATION
/* What is \v in C?                    case '\v':                        c2 = 'v';                        break;                        */	WITHOUT_CLASSIFICATION	0.9999097411694745	WITHOUT_CLASSIFICATION	9.025883052542731E-5	IMPLEMENTATION
/* Consider Thread aspects of this */	WITHOUT_CLASSIFICATION	0.9999262128035216	WITHOUT_CLASSIFICATION	7.378719647838195E-5	IMPLEMENTATION
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999802608518894	WITHOUT_CLASSIFICATION	1.9739148110680803E-5	IMPLEMENTATION
// An interrupt or timeout may have caused us to miss // a notify that we consumed, so do another notify in // case someone else is available to pick it up.	WITHOUT_CLASSIFICATION	0.9978733622599631	WITHOUT_CLASSIFICATION	0.0021266377400367556	IMPLEMENTATION
// line 572	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 601	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 601	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 625	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 649	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 691	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 723	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 732	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 745	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 766	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 785	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 794	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 800	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 812	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 827	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 839	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 845	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 864	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 886	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 896	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 911	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 929	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 952	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 970	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 972	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 991	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1011	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1026	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1038	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1067	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1085	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1097	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1105	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1122	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1133	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1145	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1169	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1201	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1210	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1229	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1261	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1287	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1293	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1307	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1320	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1325	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1363	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1398	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1448	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1456	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1473	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1492	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1513	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1523	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1562	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1582	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1603	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1603	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1615	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1620	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1635	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1652	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1681	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1708	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1716	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1755	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1772	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1789	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9986385284494232	WITHOUT_CLASSIFICATION	0.001361471550576766	IMPLEMENTATION
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9986385284494232	WITHOUT_CLASSIFICATION	0.001361471550576766	IMPLEMENTATION
/* force for args */	WITHOUT_CLASSIFICATION	0.9998444020322016	WITHOUT_CLASSIFICATION	1.555979677984899E-4	IMPLEMENTATION
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9993849659643086	WITHOUT_CLASSIFICATION	6.150340356914222E-4	IMPLEMENTATION
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9998567479198232	WITHOUT_CLASSIFICATION	1.4325208017678355E-4	IMPLEMENTATION
// We can assign if we already have variable of that name here or we are the only // scope in the chain (which Local scopes always are).	WITHOUT_CLASSIFICATION	0.999650262834629	WITHOUT_CLASSIFICATION	3.4973716537104555E-4	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.999141855935787	WITHOUT_CLASSIFICATION	8.581440642129783E-4	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.999141855935787	WITHOUT_CLASSIFICATION	8.581440642129783E-4	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.999141855935787	WITHOUT_CLASSIFICATION	8.581440642129783E-4	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.999141855935787	WITHOUT_CLASSIFICATION	8.581440642129783E-4	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9992272105939406	WITHOUT_CLASSIFICATION	7.727894060593269E-4	IMPLEMENTATION
/*     * This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:)     * into individual whenNodes.  The primary reason for this is to ensure lazy evaluation of     * the arguments (when foo,bar,gar:) to prevent side-effects.  In the old code this was done     * using nested when statements, which was awful for interpreter and compilation.     *     * Notes: This has semantic equivalence but will not be lexically equivalent.  Compiler     * needs to detect same bodies to simplify bytecode generated.     */	WITHOUT_CLASSIFICATION	0.9999446106695045	WITHOUT_CLASSIFICATION	5.538933049548556E-5	IMPLEMENTATION
// line 313	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 339	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 361	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 413	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 451	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 472	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 500	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 515	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 555	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 582	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 619	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 636	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 669	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 703	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 776	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 814	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 823	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 854	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 872	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 905	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 925	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 958	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 992	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1047	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1072	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1081	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1108	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1136	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1168	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1192	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1241	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1267	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1286	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1301	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1314	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1333	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1362	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1395	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1420	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1439	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1476	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1535	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1588	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1618	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1643	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1669	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1728	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1753	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1779	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1794	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1812	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1837	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1895	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1925	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1950	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 1992	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// line 2014	WITHOUT_CLASSIFICATION	0.9989723944922911	WITHOUT_CLASSIFICATION	0.0010276055077088437	IMPLEMENTATION
// Whether this scope is used as the "argument scope" for e.g. zsuper	WITHOUT_CLASSIFICATION	0.9997338672178296	WITHOUT_CLASSIFICATION	2.661327821703591E-4	IMPLEMENTATION
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9982049852242338	WITHOUT_CLASSIFICATION	0.0017950147757662288	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999333901120224	WITHOUT_CLASSIFICATION	6.66098879775724E-5	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999333901120224	WITHOUT_CLASSIFICATION	6.66098879775724E-5	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999333901120224	WITHOUT_CLASSIFICATION	6.66098879775724E-5	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999333901120224	WITHOUT_CLASSIFICATION	6.66098879775724E-5	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999333901120224	WITHOUT_CLASSIFICATION	6.66098879775724E-5	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999333901120224	WITHOUT_CLASSIFICATION	6.66098879775724E-5	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999333901120224	WITHOUT_CLASSIFICATION	6.66098879775724E-5	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9971768042941694	WITHOUT_CLASSIFICATION	0.0028231957058306115	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9971768042941694	WITHOUT_CLASSIFICATION	0.0028231957058306115	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9971768042941694	WITHOUT_CLASSIFICATION	0.0028231957058306115	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9971768042941694	WITHOUT_CLASSIFICATION	0.0028231957058306115	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9902032862457952	WITHOUT_CLASSIFICATION	0.009796713754204706	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9902032862457952	WITHOUT_CLASSIFICATION	0.009796713754204706	IMPLEMENTATION
// We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the // 'b' will get put into this new dynamic scope.  The original scope does not see the new // 'b' and successive evals with this binding will.  I take it having the ability to have  // succesive binding evals be able to share same scope makes sense from a programmers  // perspective.   One crappy outcome of this design is it requires Dynamic and Static  // scopes to be mutable for this one case.	WITHOUT_CLASSIFICATION	0.999982995400998	WITHOUT_CLASSIFICATION	1.7004599002011534E-5	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999440829754116	WITHOUT_CLASSIFICATION	5.5917024588264516E-5	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999440829754116	WITHOUT_CLASSIFICATION	5.5917024588264516E-5	IMPLEMENTATION
// tc // under method // self // under method // name // args	WITHOUT_CLASSIFICATION	0.9898781592445359	WITHOUT_CLASSIFICATION	0.010121840755464006	IMPLEMENTATION
// allow it to bubble up	WITHOUT_CLASSIFICATION	0.9996463137289864	WITHOUT_CLASSIFICATION	3.5368627101359484E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9994098427225399	WITHOUT_CLASSIFICATION	5.90157277460155E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9994098427225399	WITHOUT_CLASSIFICATION	5.90157277460155E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9994098427225399	WITHOUT_CLASSIFICATION	5.90157277460155E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9994098427225399	WITHOUT_CLASSIFICATION	5.90157277460155E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9994098427225399	WITHOUT_CLASSIFICATION	5.90157277460155E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9994098427225399	WITHOUT_CLASSIFICATION	5.90157277460155E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9994098427225399	WITHOUT_CLASSIFICATION	5.90157277460155E-4	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9994098427225399	WITHOUT_CLASSIFICATION	5.90157277460155E-4	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9994098427225399	WITHOUT_CLASSIFICATION	5.90157277460155E-4	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9926958395192451	WITHOUT_CLASSIFICATION	0.0073041604807548444	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9926958395192451	WITHOUT_CLASSIFICATION	0.0073041604807548444	IMPLEMENTATION
// Check for a builtin first.	WITHOUT_CLASSIFICATION	0.9998960376951539	WITHOUT_CLASSIFICATION	1.0396230484614626E-4	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9994020264789268	WITHOUT_CLASSIFICATION	5.979735210730748E-4	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9994020264789268	WITHOUT_CLASSIFICATION	5.979735210730748E-4	IMPLEMENTATION
// Unfortunately, the number of digits in the exponent is // not clearly defined in Ruby documentation. This is a // platform/version-dependent behavior. On Linux/Mac/Cygwin/*nix, // two digits are used. On Windows, 3 digits are used. // It is desirable for JRuby to have consistent behavior, and // the two digits behavior was selected. This is also in sync // with "Java-native" sprintf behavior (java.util.Formatter). // E or e	WITHOUT_CLASSIFICATION	0.999952894107229	WITHOUT_CLASSIFICATION	4.710589277097151E-5	IMPLEMENTATION
/** * Represents the the dynamic portion of scoping information.  The variableValues are the * values of assigned local or block variables.  The staticScope identifies which sort of * scope this is (block or local). *  * Properties of Dynamic Scopes: * 1. static and dynamic scopes have the same number of names to values * 2. size of variables (and thus names) is determined during parsing.  So those structured do *    not need to change * * FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents.  This * is harmless (other than wasting memory), but we should not do that.  We can fix this in two * ways: * 1. Fix all callers * 2. Check parent that is passed in and make if new instance is local, then its parent is not local */	WITHOUT_CLASSIFICATION	0.9998619119285176	WITHOUT_CLASSIFICATION	1.3808807148239948E-4	IMPLEMENTATION
// This method handles '**/' patterns and delegates to // fnmatch_helper for the main work.	WITHOUT_CLASSIFICATION	0.997093673159363	WITHOUT_CLASSIFICATION	0.002906326840636881	IMPLEMENTATION
// Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern  // Example: foo{a{c},b}bar -> fooa{c}bar, foobbar	WITHOUT_CLASSIFICATION	0.9999934660483887	WITHOUT_CLASSIFICATION	6.533951611366586E-6	IMPLEMENTATION
// double precision, native // double precision, native	WITHOUT_CLASSIFICATION	0.9999340559940582	WITHOUT_CLASSIFICATION	6.594400594184609E-5	IMPLEMENTATION
// 64-bit number, native (as bignum)	WITHOUT_CLASSIFICATION	0.999464706961043	WITHOUT_CLASSIFICATION	5.352930389569759E-4	IMPLEMENTATION
// Next indicates to decode using native encoding format	WITHOUT_CLASSIFICATION	0.9997021818004584	WITHOUT_CLASSIFICATION	2.9781819954160447E-4	IMPLEMENTATION
// calculate based on a, b, c and d	WITHOUT_CLASSIFICATION	0.9995566343088073	WITHOUT_CLASSIFICATION	4.433656911927824E-4	IMPLEMENTATION
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9988117998441216	WITHOUT_CLASSIFICATION	0.0011882001558783798	IMPLEMENTATION
// MRI behavior:  for 'Q', do not add trailing nils	WITHOUT_CLASSIFICATION	0.9940445735169894	WITHOUT_CLASSIFICATION	0.005955426483010684	IMPLEMENTATION
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9999994254697315	WITHOUT_CLASSIFICATION	5.745302684329136E-7	IMPLEMENTATION
// exec needs to behave differently in-process, because it's technically // supposed to replace the calling process. So if we're supposed to run // in-process, we allow it to use the default streams and not use // pumpers at all. See JRUBY-2156 and JRUBY-2154.	WITHOUT_CLASSIFICATION	0.9991417354572109	WITHOUT_CLASSIFICATION	8.582645427890627E-4	IMPLEMENTATION
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999931777828364	WITHOUT_CLASSIFICATION	6.822217163630217E-6	IMPLEMENTATION
// The problem we trying to solve below: STDIN in Java // is blocked and non-interruptible, so if we invoke read // on it, we might never be able to interrupt such thread. // So, we use in.available() to see if there is any input // ready, and only then read it. But this approach can't // tell whether the end of stream reached or not, so we // might end up looping right at the end of the stream. // Well, at least, we can improve the situation by checking // if some input was ever available, and if so, not // checking for available anymore, and just go to read.	WITHOUT_CLASSIFICATION	0.9999983041962591	WITHOUT_CLASSIFICATION	1.69580374087789E-6	IMPLEMENTATION
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9993590385343453	WITHOUT_CLASSIFICATION	6.4096146565462E-4	IMPLEMENTATION
// an empirically derived rule: precision applies to // significand length, irrespective of exponent	WITHOUT_CLASSIFICATION	0.9997899745702885	WITHOUT_CLASSIFICATION	2.1002542971146029E-4	IMPLEMENTATION
// an official rule, clarified: if the exponent // <clarif>after adjusting for exponent form</clarif> // is < -4,  or the exponent <clarif>after adjusting  // for exponent form</clarif> is greater than the // precision, use exponent form	WITHOUT_CLASSIFICATION	0.9999664321235675	WITHOUT_CLASSIFICATION	3.356787643243741E-5	IMPLEMENTATION
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9998813927739303	WITHOUT_CLASSIFICATION	1.1860722606968485E-4	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9987284419743948	WITHOUT_CLASSIFICATION	0.0012715580256050937	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9987284419743948	WITHOUT_CLASSIFICATION	0.0012715580256050937	IMPLEMENTATION
// MRI behavior: validate only the unnumbered arguments	WITHOUT_CLASSIFICATION	0.9994877308200865	WITHOUT_CLASSIFICATION	5.122691799135829E-4	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9997887686043465	WITHOUT_CLASSIFICATION	2.1123139565348614E-4	IMPLEMENTATION
// calculation for simple (and typical) case, // adapted from sun.misc.FloatingDecimal	WITHOUT_CLASSIFICATION	0.9997535497854955	WITHOUT_CLASSIFICATION	2.4645021450456824E-4	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999591600903001	WITHOUT_CLASSIFICATION	4.083990969988955E-5	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9977069119944231	WITHOUT_CLASSIFICATION	0.00229308800557706	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9977069119944231	WITHOUT_CLASSIFICATION	0.00229308800557706	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9977069119944231	WITHOUT_CLASSIFICATION	0.00229308800557706	IMPLEMENTATION
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9989935103343094	WITHOUT_CLASSIFICATION	0.0010064896656906454	IMPLEMENTATION
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9960774761229677	WITHOUT_CLASSIFICATION	0.003922523877032294	IMPLEMENTATION
// call chmod after we created the RandomAccesFile // because otherwise, the file could be read-only	WITHOUT_CLASSIFICATION	0.9996085136776026	WITHOUT_CLASSIFICATION	3.914863223974577E-4	IMPLEMENTATION
// attempt to set the permissions, if we have been passed a POSIX instance, // and only if the file was created in this call.	WITHOUT_CLASSIFICATION	0.9999257941677583	WITHOUT_CLASSIFICATION	7.420583224179307E-5	IMPLEMENTATION
// // When reading into a heap buffer, the jvm allocates a temporary // direct ByteBuffer of the requested size.  To avoid allocating // a huge direct buffer when doing ludicrous reads (e.g. 1G or more) // we split the read up into chunks of no more than 1M //	WITHOUT_CLASSIFICATION	0.9988698473352722	WITHOUT_CLASSIFICATION	0.0011301526647277639	IMPLEMENTATION
// // If it is a file channel, then we can pre-allocate the output buffer // to the total size of buffered + remaining bytes in file //	WITHOUT_CLASSIFICATION	0.9998519001931645	WITHOUT_CLASSIFICATION	1.480998068355024E-4	IMPLEMENTATION
// // Cannot discern the total read length - allocate at least enough for the buffered data //	WITHOUT_CLASSIFICATION	0.9998359748373146	WITHOUT_CLASSIFICATION	1.64025162685467E-4	IMPLEMENTATION
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999238985947169	WITHOUT_CLASSIFICATION	7.610140528309934E-5	IMPLEMENTATION
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9942345529819655	WITHOUT_CLASSIFICATION	0.005765447018034527	IMPLEMENTATION
// already have some bytes buffered, just return those	WITHOUT_CLASSIFICATION	0.9999265006078205	WITHOUT_CLASSIFICATION	7.349939217955937E-5	IMPLEMENTATION
// reset buffer	WITHOUT_CLASSIFICATION	0.9963740395494037	WITHOUT_CLASSIFICATION	0.00362596045059638	IMPLEMENTATION
// // Synchronize and re-check to avoid creating more than one Selector per provider //	WITHOUT_CLASSIFICATION	0.9802060804498346	WITHOUT_CLASSIFICATION	0.019793919550165472	IMPLEMENTATION
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.550045044983686	IMPLEMENTATION	0.44995495501631405	WITHOUT_CLASSIFICATION
// Is there something built into JRuby to do this?	WITHOUT_CLASSIFICATION	0.9933739580809412	WITHOUT_CLASSIFICATION	0.0066260419190587415	IMPLEMENTATION
// Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long // assertTrue(value == valueViaValuesIterator);	WITHOUT_CLASSIFICATION	0.9992915898965287	WITHOUT_CLASSIFICATION	7.084101034712717E-4	IMPLEMENTATION
// value equality //result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); //assertEquals("two", result);	WITHOUT_CLASSIFICATION	0.9992442366117007	WITHOUT_CLASSIFICATION	7.557633882992071E-4	IMPLEMENTATION
// Uncomment the "puts" lines if you want to see more detail	WITHOUT_CLASSIFICATION	0.9995394067464026	WITHOUT_CLASSIFICATION	4.605932535973229E-4	IMPLEMENTATION
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9997440725541666	WITHOUT_CLASSIFICATION	2.559274458333248E-4	IMPLEMENTATION
// change the thread context to include the class	WITHOUT_CLASSIFICATION	0.9993598798717007	WITHOUT_CLASSIFICATION	6.401201282993412E-4	IMPLEMENTATION
