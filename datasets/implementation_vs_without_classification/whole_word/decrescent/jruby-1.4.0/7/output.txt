// TODO: warn "tried to create Proc object without a block"	IMPLEMENTATION	0.7071449129560838	WITHOUT_CLASSIFICATION	0.29285508704391616	IMPLEMENTATION
// TODO: CLONE_SETUP here	IMPLEMENTATION	0.6866679247444081	IMPLEMENTATION	0.3133320752555919	WITHOUT_CLASSIFICATION
// TODO: Someday, enable.	IMPLEMENTATION	0.5835541907253433	IMPLEMENTATION	0.4164458092746567	WITHOUT_CLASSIFICATION
// Bunch of methods still not implemented	IMPLEMENTATION	0.9427444872867664	IMPLEMENTATION	0.05725551271323362	WITHOUT_CLASSIFICATION
// TODO: non-strict option	IMPLEMENTATION	0.538721296841945	WITHOUT_CLASSIFICATION	0.4612787031580549	IMPLEMENTATION
// TODO: opt for 2 and 3 ?	IMPLEMENTATION	0.9308912012852045	WITHOUT_CLASSIFICATION	0.0691087987147954	IMPLEMENTATION
// FIXME: Should we make this work with platform's locale, // or continue hardcoding US?	IMPLEMENTATION	0.5348385156644914	WITHOUT_CLASSIFICATION	0.4651614843355087	IMPLEMENTATION
// TODO: rescan code range ?	IMPLEMENTATION	0.6089313253894558	WITHOUT_CLASSIFICATION	0.3910686746105441	IMPLEMENTATION
// TODO: rescan code range ?	IMPLEMENTATION	0.6089313253894558	WITHOUT_CLASSIFICATION	0.3910686746105441	IMPLEMENTATION
// TODO: pass this in?	IMPLEMENTATION	0.7680980843949868	IMPLEMENTATION	0.23190191560501314	WITHOUT_CLASSIFICATION
// FIXME: Pass block down?	IMPLEMENTATION	0.9659810919607129	WITHOUT_CLASSIFICATION	0.03401890803928703	IMPLEMENTATION
// TODO: do something here?	IMPLEMENTATION	0.7688258576725047	IMPLEMENTATION	0.2311741423274953	WITHOUT_CLASSIFICATION
// TODO: port exact behavior from MRI, and move most locking logic into ChannelDescriptor // TODO: for all LOCK_NB cases, return false if they would block	IMPLEMENTATION	0.972125271929551	WITHOUT_CLASSIFICATION	0.027874728070449026	IMPLEMENTATION
// TODO: check if too many open files, GC and try again	IMPLEMENTATION	0.8422660954438027	WITHOUT_CLASSIFICATION	0.1577339045561972	IMPLEMENTATION
//TODO deal with UNC names	IMPLEMENTATION	0.9477334104793338	IMPLEMENTATION	0.05226658952066623	WITHOUT_CLASSIFICATION
// FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.6299799043900622	WITHOUT_CLASSIFICATION	0.3700200956099378	IMPLEMENTATION
//FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.9957696269292012	WITHOUT_CLASSIFICATION	0.004230373070798708	IMPLEMENTATION
// TODO: SafeStringValue here	IMPLEMENTATION	0.6866679247444081	IMPLEMENTATION	0.3133320752555919	WITHOUT_CLASSIFICATION
// TODO: turn off readable? am I reading this right? // This only seems to be used while duping below, since modes gets // reset to actual modes afterward //fptr->mode &= (m & FMODE_READABLE) ? ~FMODE_READABLE : ~FMODE_WRITABLE;	IMPLEMENTATION	0.7547992238149325	WITHOUT_CLASSIFICATION	0.24520077618506747	IMPLEMENTATION
// TODO: check safe, taint on incoming string	IMPLEMENTATION	0.8496637243472006	WITHOUT_CLASSIFICATION	0.15033627565279947	IMPLEMENTATION
// TODO: pipe handler to be reopened with path and "w" mode	IMPLEMENTATION	0.5749581589900258	WITHOUT_CLASSIFICATION	0.4250418410099743	IMPLEMENTATION
// FIXME: add text mode to mode flags	IMPLEMENTATION	0.9355615716826097	WITHOUT_CLASSIFICATION	0.06443842831739027	IMPLEMENTATION
// TODO: Something about pipe buffer length here	IMPLEMENTATION	0.57341247954835	IMPLEMENTATION	0.42658752045165	WITHOUT_CLASSIFICATION
// TODO: handle errors in buffered write by retrying until finished or file is closed	IMPLEMENTATION	0.750803781956003	WITHOUT_CLASSIFICATION	0.24919621804399714	IMPLEMENTATION
// TODO: notify threads waiting on descriptors/IO? probably not...	IMPLEMENTATION	0.7201939874259767	IMPLEMENTATION	0.2798060125740233	WITHOUT_CLASSIFICATION
// TODO: Ruby re-checks that the buffer string hasn't been modified	IMPLEMENTATION	0.7248741500930846	WITHOUT_CLASSIFICATION	0.27512584990691535	IMPLEMENTATION
// TODO: Ruby unlocks the string here	IMPLEMENTATION	0.9255933695946853	WITHOUT_CLASSIFICATION	0.07440663040531473	IMPLEMENTATION
// TODO: Ruby truncates string to specific size here, but our bytelist should handle this already?	IMPLEMENTATION	0.9661345618424767	WITHOUT_CLASSIFICATION	0.03386543815752329	IMPLEMENTATION
// TODO: Ruby unlocks the string here	IMPLEMENTATION	0.9255933695946853	WITHOUT_CLASSIFICATION	0.07440663040531473	IMPLEMENTATION
// TODO: Ruby truncates string to specific size here, but our bytelist should handle this already?	IMPLEMENTATION	0.9661345618424767	WITHOUT_CLASSIFICATION	0.03386543815752329	IMPLEMENTATION
// TODO: ruby locks the string here	IMPLEMENTATION	0.9315729588263134	WITHOUT_CLASSIFICATION	0.06842704117368656	IMPLEMENTATION
// TODO same zero-length checks as file above	IMPLEMENTATION	0.510058135822451	WITHOUT_CLASSIFICATION	0.4899418641775491	IMPLEMENTATION
// TODO: MRI also can hadle Bignum here	IMPLEMENTATION	0.8878839529685728	IMPLEMENTATION	0.11211604703142711	WITHOUT_CLASSIFICATION
// TODO: make threadsafe	IMPLEMENTATION	0.8863300938759623	IMPLEMENTATION	0.11366990612403764	WITHOUT_CLASSIFICATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9526788801882276	WITHOUT_CLASSIFICATION	0.04732111981177246	IMPLEMENTATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9526788801882276	WITHOUT_CLASSIFICATION	0.04732111981177246	IMPLEMENTATION
// FIXME: create AttrReaderMethod, AttrWriterMethod, for faster attr access	IMPLEMENTATION	0.9627411793406238	WITHOUT_CLASSIFICATION	0.037258820659376295	IMPLEMENTATION
// Do not clone cached methods // FIXME: MRI copies all methods here	IMPLEMENTATION	0.7953320870523296	WITHOUT_CLASSIFICATION	0.20466791294767037	IMPLEMENTATION
// TODO: don't calculate the same value 3 times	IMPLEMENTATION	0.9235325568800787	WITHOUT_CLASSIFICATION	0.07646744311992129	IMPLEMENTATION
// TODO: 3 times calculate the same value below	IMPLEMENTATION	0.9056718680860304	WITHOUT_CLASSIFICATION	0.09432813191396955	IMPLEMENTATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.9332463665437285	IMPLEMENTATION	0.06675363345627137	WITHOUT_CLASSIFICATION
// TODO: Store BEGIN and END information into this node	IMPLEMENTATION	0.5534928676153388	WITHOUT_CLASSIFICATION	0.4465071323846613	IMPLEMENTATION
// TODO: put these nil guards into tree (bigger than I want to do right now)	IMPLEMENTATION	0.9605655049760659	IMPLEMENTATION	0.03943449502393427	WITHOUT_CLASSIFICATION
// FIXME: Make bodyNode non-null in parser	IMPLEMENTATION	0.9907727984528245	WITHOUT_CLASSIFICATION	0.009227201547175427	IMPLEMENTATION
// TODO: call config with scope but no frame	IMPLEMENTATION	0.6136223216318412	IMPLEMENTATION	0.3863776783681589	WITHOUT_CLASSIFICATION
// TODO: add trace call?	IMPLEMENTATION	0.6852068852105037	IMPLEMENTATION	0.3147931147894964	WITHOUT_CLASSIFICATION
// FIXME: missing arity check	IMPLEMENTATION	0.8381436376081166	WITHOUT_CLASSIFICATION	0.16185636239188342	IMPLEMENTATION
// FIXME: optimize for cases where we have no false branch	IMPLEMENTATION	0.9316686270780721	WITHOUT_CLASSIFICATION	0.0683313729219279	IMPLEMENTATION
// FIXME: after jump is not in here.  Will if ever be? //Label afterJmp = new Label();	IMPLEMENTATION	0.9735028090202384	WITHOUT_CLASSIFICATION	0.026497190979761644	IMPLEMENTATION
// TODO: build arg list based on number of args, optionals, etc	IMPLEMENTATION	0.9626391289192769	IMPLEMENTATION	0.03736087108072294	WITHOUT_CLASSIFICATION
// FIXME: missing arity check	IMPLEMENTATION	0.8381436376081166	WITHOUT_CLASSIFICATION	0.16185636239188342	IMPLEMENTATION
// SSS FIXME: Traverse up the scope hierarchy to find the constant as long as the parent is a static scope	IMPLEMENTATION	0.998751775058754	WITHOUT_CLASSIFICATION	0.0012482249412459944	IMPLEMENTATION
// SSS FIXME: Should I be returning the operand constructed here?	IMPLEMENTATION	0.5624907803817477	WITHOUT_CLASSIFICATION	0.4375092196182522	IMPLEMENTATION
// TODO: Add IR instructions for checking method arity! // s.getVariableCompiler().checkMethodArity(required, opt, rest);	IMPLEMENTATION	0.8103185312175619	IMPLEMENTATION	0.1896814687824381	WITHOUT_CLASSIFICATION
// FIXME: Ruby 1.9 post args code needs to come here	IMPLEMENTATION	0.8848673961701266	WITHOUT_CLASSIFICATION	0.11513260382987338	IMPLEMENTATION
// SSS: FIXME: Somewhere here, we need to record information the type of this operand as String	IMPLEMENTATION	0.9914854448999588	WITHOUT_CLASSIFICATION	0.008514555100041251	IMPLEMENTATION
// FIXME: Translate this call below! // s.unwrapPassedBlock();	IMPLEMENTATION	0.8293198016355972	WITHOUT_CLASSIFICATION	0.1706801983644028	IMPLEMENTATION
// SSS FIXME: We need to build debug information tracking into the IR in some fashion // So, these methods below would have to have equivalents in IR_Scope implementations.	IMPLEMENTATION	0.8467078882483716	WITHOUT_CLASSIFICATION	0.15329211175162835	IMPLEMENTATION
// SSS FIXME: Incomplete!	IMPLEMENTATION	0.9708602871101214	WITHOUT_CLASSIFICATION	0.029139712889878537	IMPLEMENTATION
// SSS FIXME: Pick one of bytelist or string, or add internal conversion methods to convert to the default representation	IMPLEMENTATION	0.9725576164658322	WITHOUT_CLASSIFICATION	0.027442383534167877	IMPLEMENTATION
// SSS FIXME: To be done	IMPLEMENTATION	0.9930555777675054	WITHOUT_CLASSIFICATION	0.00694442223249451	IMPLEMENTATION
//TODO: implement, won't do this now	IMPLEMENTATION	0.9836527381991484	WITHOUT_CLASSIFICATION	0.01634726180085149	IMPLEMENTATION
//TODO: implement, won't do this now	IMPLEMENTATION	0.9836527381991484	WITHOUT_CLASSIFICATION	0.01634726180085149	IMPLEMENTATION
// TODO: validate port as numeric	IMPLEMENTATION	0.5425072040238655	WITHOUT_CLASSIFICATION	0.45749279597613446	IMPLEMENTATION
// TODO: this code should really check if a Ruby equals method is implemented or not.	IMPLEMENTATION	0.9988931698180912	IMPLEMENTATION	0.0011068301819088348	WITHOUT_CLASSIFICATION
// if not already defined, we add a 'new' that guesses at which signature to use // TODO: just adding first one right now...add in signature-guessing logic	IMPLEMENTATION	0.9378345437243749	IMPLEMENTATION	0.06216545627562517	WITHOUT_CLASSIFICATION
// TODO: deal with varargs	IMPLEMENTATION	0.767635644314608	IMPLEMENTATION	0.232364355685392	WITHOUT_CLASSIFICATION
// TODO: deal with varargs	IMPLEMENTATION	0.767635644314608	IMPLEMENTATION	0.232364355685392	WITHOUT_CLASSIFICATION
// TODO: other reserved names?	IMPLEMENTATION	0.8440226396632942	IMPLEMENTATION	0.15597736033670587	WITHOUT_CLASSIFICATION
// TODO: we can probably release our references to the constantFields // array and static/instance callback hashes at this point. 	IMPLEMENTATION	0.5844158868486896	IMPLEMENTATION	0.4155841131513104	WITHOUT_CLASSIFICATION
// TODO: Formalize conversion mechanisms between Java and Ruby	IMPLEMENTATION	0.842671356876599	WITHOUT_CLASSIFICATION	0.15732864312340095	IMPLEMENTATION
// XXX: Check if it's appropriate type?	IMPLEMENTATION	0.9990801601240629	WITHOUT_CLASSIFICATION	9.198398759370197E-4	IMPLEMENTATION
// TODO: call ruby method	IMPLEMENTATION	0.9056766173092948	IMPLEMENTATION	0.09432338269070514	WITHOUT_CLASSIFICATION
// TODO: call ruby method	IMPLEMENTATION	0.9056766173092948	IMPLEMENTATION	0.09432338269070514	WITHOUT_CLASSIFICATION
// TODO: Add safety check for taintedness	IMPLEMENTATION	0.6779798565371856	IMPLEMENTATION	0.32202014346281443	WITHOUT_CLASSIFICATION
// FIXME: Need to detect magic_comment in 1.9 here for encoding	IMPLEMENTATION	0.9942966703007562	WITHOUT_CLASSIFICATION	0.005703329699243832	IMPLEMENTATION
/* xxx shouldn't check if valid option variable */	IMPLEMENTATION	0.9999671977208381	WITHOUT_CLASSIFICATION	3.2802279161973874E-5	IMPLEMENTATION
// TODO: this isn't handling multibyte yet	IMPLEMENTATION	0.97733791891641	IMPLEMENTATION	0.022662081083590028	WITHOUT_CLASSIFICATION
// TODO: This should be something else like a tCHAR	IMPLEMENTATION	0.8400296978441995	IMPLEMENTATION	0.1599703021558006	WITHOUT_CLASSIFICATION
// FIXME: \r logic needed	IMPLEMENTATION	0.9736262419947964	IMPLEMENTATION	0.02637375800520351	WITHOUT_CLASSIFICATION
// TODO: note lack of command.com support for Win 9x...	IMPLEMENTATION	0.8887438714286003	IMPLEMENTATION	0.11125612857139973	WITHOUT_CLASSIFICATION
// FIXME: Make thread pool threads daemons if necessary	IMPLEMENTATION	0.9556994324380983	WITHOUT_CLASSIFICATION	0.04430056756190172	IMPLEMENTATION
/* FIXME: We may be intern'ing more than once.*/	IMPLEMENTATION	0.9256981162732034	IMPLEMENTATION	0.07430188372679655	WITHOUT_CLASSIFICATION
/* FIXME: We may be intern'ing more than once.*/	IMPLEMENTATION	0.9256981162732034	IMPLEMENTATION	0.07430188372679655	WITHOUT_CLASSIFICATION
/* FIXME: arg_concat missing for opt_call_args*/	IMPLEMENTATION	0.8322552743873641	IMPLEMENTATION	0.16774472561263584	WITHOUT_CLASSIFICATION
/* FIXME: arg_concat logic missing for opt_call_args*/	IMPLEMENTATION	0.8101023037605997	IMPLEMENTATION	0.18989769623940037	WITHOUT_CLASSIFICATION
// FIXME: This needs to happen for lambdas //            args.checkArgCount(runtime, parameters.length);	IMPLEMENTATION	0.9763995187829235	WITHOUT_CLASSIFICATION	0.023600481217076485	IMPLEMENTATION
// FIXME: This needs to happen for lambdas //            args.checkArgCount(runtime, parameters.length);	IMPLEMENTATION	0.9763995187829235	WITHOUT_CLASSIFICATION	0.023600481217076485	IMPLEMENTATION
// TODO: make it cross runtime safe by COW or eager copy	IMPLEMENTATION	0.5748719653178372	IMPLEMENTATION	0.4251280346821627	WITHOUT_CLASSIFICATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.9491161473082065	WITHOUT_CLASSIFICATION	0.05088385269179354	IMPLEMENTATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.9491161473082065	WITHOUT_CLASSIFICATION	0.05088385269179354	IMPLEMENTATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.9491161473082065	WITHOUT_CLASSIFICATION	0.05088385269179354	IMPLEMENTATION
// TODO: check the return value here	IMPLEMENTATION	0.5022670045423399	IMPLEMENTATION	0.49773299545766014	WITHOUT_CLASSIFICATION
// TODO: check the return value here	IMPLEMENTATION	0.5022670045423399	IMPLEMENTATION	0.49773299545766014	WITHOUT_CLASSIFICATION
// TODO: Make sure all appropriate open flags are added to this check.	IMPLEMENTATION	0.9707917733818923	WITHOUT_CLASSIFICATION	0.029208226618107763	IMPLEMENTATION
//subList.clear(); // Sublist is supposed to share same backing store as list...TODO in RubyArray. //assertTrue(list.size() == 1);	IMPLEMENTATION	0.9999990672452455	WITHOUT_CLASSIFICATION	9.327547545927806E-7	IMPLEMENTATION
// SSS FIXME: Cannot optimize this without assuming that Range.to_ary method has not redefined. // So for now, return null!	IMPLEMENTATION	0.9286434671765434	IMPLEMENTATION	0.07135653282345653	WITHOUT_CLASSIFICATION
// TODO Auto-generated method stub	IMPLEMENTATION	0.9993695435841092	IMPLEMENTATION	6.304564158909057E-4	WITHOUT_CLASSIFICATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.9930472874214247	IMPLEMENTATION	0.006952712578575375	WITHOUT_CLASSIFICATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.9930472874214247	IMPLEMENTATION	0.006952712578575375	WITHOUT_CLASSIFICATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.9930472874214247	IMPLEMENTATION	0.006952712578575375	WITHOUT_CLASSIFICATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.9332463665437285	IMPLEMENTATION	0.06675363345627137	WITHOUT_CLASSIFICATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.9332463665437285	IMPLEMENTATION	0.06675363345627137	WITHOUT_CLASSIFICATION
// TODO: check for ascii string	IMPLEMENTATION	0.9663435172386037	WITHOUT_CLASSIFICATION	0.033656482761396336	IMPLEMENTATION
// filter out any Java primitive names // TODO: should check against all Java reserved names here, not just primitives	IMPLEMENTATION	0.7084394407390031	IMPLEMENTATION	0.29156055926099683	WITHOUT_CLASSIFICATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9526788801882276	WITHOUT_CLASSIFICATION	0.04732111981177246	IMPLEMENTATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9526788801882276	WITHOUT_CLASSIFICATION	0.04732111981177246	IMPLEMENTATION
// TODO: missing additional logic for dealing with conflicting protected fields.	IMPLEMENTATION	0.9300227636792932	IMPLEMENTATION	0.06997723632070689	WITHOUT_CLASSIFICATION
// TODO: better detection when path is absolute or not. // If the path isn't absolute, then prepend the current working // directory to the path.	IMPLEMENTATION	0.9773183115942353	WITHOUT_CLASSIFICATION	0.022681688405764767	IMPLEMENTATION
// FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.6299799043900622	WITHOUT_CLASSIFICATION	0.3700200956099378	IMPLEMENTATION
// FIX replace type() == ... with isInstanceOf(...)	IMPLEMENTATION	0.9994073112029866	WITHOUT_CLASSIFICATION	5.926887970134283E-4	IMPLEMENTATION
/* TODO: MRI is just a when node.  We need this extra logic for IDE consumers (null in casenode statement should be implicit nil)*/	IMPLEMENTATION	0.5048028651834668	WITHOUT_CLASSIFICATION	0.49519713481653316	IMPLEMENTATION
// TODO: This and recacheRespondsTo needed to be synchronized for JRUBY-3466, // but this degraded performance nearly 2x. It's still faster than MRI, but // a reanalysis of this code may show a faster way to ensure we're caching // safely.	IMPLEMENTATION	0.9999731146579676	IMPLEMENTATION	2.688534203245503E-5	WITHOUT_CLASSIFICATION
// TODO: adjust length so it won't fall in the middle  // of a multi-byte character. MRI's sprintf.c uses tables // in a modified version of regex.c, which assume some // particular  encoding for a given installation/application. // (See regex.c#re_mbcinit in ruby-1.8.5-p12)  // // This is only an issue if the user specifies a precision // that causes the string to be truncated. The same issue // would arise taking a substring of a ByteList-backed RubyString.	IMPLEMENTATION	0.9999994658708956	WITHOUT_CLASSIFICATION	5.341291043332607E-7	IMPLEMENTATION
// set constants now that they're initialized	WITHOUT_CLASSIFICATION	0.9999911328274707	WITHOUT_CLASSIFICATION	8.867172529250167E-6	IMPLEMENTATION
// line 335	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
// Figure end-char.  '\0' is special to indicate begin=end and that no nesting?	WITHOUT_CLASSIFICATION	0.9999847751558127	WITHOUT_CLASSIFICATION	1.522484418733807E-5	IMPLEMENTATION
// line 362	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 372	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
// line 391	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
/* ^D */	WITHOUT_CLASSIFICATION	0.9999984386024293	WITHOUT_CLASSIFICATION	1.5613975706521305E-6	IMPLEMENTATION
/* ^Z */	WITHOUT_CLASSIFICATION	0.9999984399577019	WITHOUT_CLASSIFICATION	1.5600422981548885E-6	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
//Do nothing	WITHOUT_CLASSIFICATION	0.9998479810761669	WITHOUT_CLASSIFICATION	1.520189238331227E-4	IMPLEMENTATION
//Do nothing	WITHOUT_CLASSIFICATION	0.9998479810761669	WITHOUT_CLASSIFICATION	1.520189238331227E-4	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999916349970172	WITHOUT_CLASSIFICATION	8.365002982858586E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999916349970172	WITHOUT_CLASSIFICATION	8.365002982858586E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999916349970172	WITHOUT_CLASSIFICATION	8.365002982858586E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999916349970172	WITHOUT_CLASSIFICATION	8.365002982858586E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999916349970172	WITHOUT_CLASSIFICATION	8.365002982858586E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999916349970172	WITHOUT_CLASSIFICATION	8.365002982858586E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999916349970172	WITHOUT_CLASSIFICATION	8.365002982858586E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999916349970172	WITHOUT_CLASSIFICATION	8.365002982858586E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999916349970172	WITHOUT_CLASSIFICATION	8.365002982858586E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999916349970172	WITHOUT_CLASSIFICATION	8.365002982858586E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999916349970172	WITHOUT_CLASSIFICATION	8.365002982858586E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999916349970172	WITHOUT_CLASSIFICATION	8.365002982858586E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999916349970172	WITHOUT_CLASSIFICATION	8.365002982858586E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999916349970172	WITHOUT_CLASSIFICATION	8.365002982858586E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999916349970172	WITHOUT_CLASSIFICATION	8.365002982858586E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999916349970172	WITHOUT_CLASSIFICATION	8.365002982858586E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999916349970172	WITHOUT_CLASSIFICATION	8.365002982858586E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999916349970172	WITHOUT_CLASSIFICATION	8.365002982858586E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999916349970172	WITHOUT_CLASSIFICATION	8.365002982858586E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999916349970172	WITHOUT_CLASSIFICATION	8.365002982858586E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999916349970172	WITHOUT_CLASSIFICATION	8.365002982858586E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999916349970172	WITHOUT_CLASSIFICATION	8.365002982858586E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999916349970172	WITHOUT_CLASSIFICATION	8.365002982858586E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999916349970172	WITHOUT_CLASSIFICATION	8.365002982858586E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999916349970172	WITHOUT_CLASSIFICATION	8.365002982858586E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999916349970172	WITHOUT_CLASSIFICATION	8.365002982858586E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999916349970172	WITHOUT_CLASSIFICATION	8.365002982858586E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999916349970172	WITHOUT_CLASSIFICATION	8.365002982858586E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999916349970172	WITHOUT_CLASSIFICATION	8.365002982858586E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999916349970172	WITHOUT_CLASSIFICATION	8.365002982858586E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999916349970172	WITHOUT_CLASSIFICATION	8.365002982858586E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999916349970172	WITHOUT_CLASSIFICATION	8.365002982858586E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999916349970172	WITHOUT_CLASSIFICATION	8.365002982858586E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999916349970172	WITHOUT_CLASSIFICATION	8.365002982858586E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999916349970172	WITHOUT_CLASSIFICATION	8.365002982858586E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999916349970172	WITHOUT_CLASSIFICATION	8.365002982858586E-6	IMPLEMENTATION
// return result	WITHOUT_CLASSIFICATION	0.9999028950975194	WITHOUT_CLASSIFICATION	9.71049024806601E-5	IMPLEMENTATION
// name	WITHOUT_CLASSIFICATION	0.9999852169681962	WITHOUT_CLASSIFICATION	1.4783031803824916E-5	IMPLEMENTATION
// Define System.getProperties() in ENV_JAVA	WITHOUT_CLASSIFICATION	0.9999845787047942	WITHOUT_CLASSIFICATION	1.542129520588773E-5	IMPLEMENTATION
// Accessor methods.	WITHOUT_CLASSIFICATION	0.9996626661121388	WITHOUT_CLASSIFICATION	3.373338878611864E-4	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9996359886852155	WITHOUT_CLASSIFICATION	3.640113147844894E-4	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9996359886852155	WITHOUT_CLASSIFICATION	3.640113147844894E-4	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9996359886852155	WITHOUT_CLASSIFICATION	3.640113147844894E-4	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9996359886852155	WITHOUT_CLASSIFICATION	3.640113147844894E-4	IMPLEMENTATION
// call getpwent to fail early if unsupported	WITHOUT_CLASSIFICATION	0.9999713560002276	WITHOUT_CLASSIFICATION	2.864399977242011E-5	IMPLEMENTATION
// fall back on env entry for USER	WITHOUT_CLASSIFICATION	0.9997746638606356	WITHOUT_CLASSIFICATION	2.253361393644464E-4	IMPLEMENTATION
// try to read grent to fail fast	WITHOUT_CLASSIFICATION	0.9999892384145699	WITHOUT_CLASSIFICATION	1.0761585430166659E-5	IMPLEMENTATION
// define ARGV and $* for this runtime	WITHOUT_CLASSIFICATION	0.9999822138880319	WITHOUT_CLASSIFICATION	1.7786111968116032E-5	IMPLEMENTATION
// Version information:	WITHOUT_CLASSIFICATION	0.9999451810448673	WITHOUT_CLASSIFICATION	5.4818955132657376E-5	IMPLEMENTATION
// after defn of $stderr as the call may produce warnings	WITHOUT_CLASSIFICATION	0.9999852854165063	WITHOUT_CLASSIFICATION	1.4714583493758573E-5	IMPLEMENTATION
// ARGF, $< object	WITHOUT_CLASSIFICATION	0.9998665986020105	WITHOUT_CLASSIFICATION	1.3340139798950708E-4	IMPLEMENTATION
// if the environment variables can't be obtained, define an empty ENV	WITHOUT_CLASSIFICATION	0.9999989714696887	WITHOUT_CLASSIFICATION	1.0285303112042335E-6	IMPLEMENTATION
// On platforms without a c-library accessable through JNA, getpid will return hashCode  // as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing // $$ on getpid() where available, we have the same semantics as MRI.	WITHOUT_CLASSIFICATION	0.9999967566958394	WITHOUT_CLASSIFICATION	3.2433041606159185E-6	IMPLEMENTATION
//$@ returns nil if $!.backtrace is not an array	WITHOUT_CLASSIFICATION	0.9995542861332232	WITHOUT_CLASSIFICATION	4.457138667768146E-4	IMPLEMENTATION
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999119813077298	WITHOUT_CLASSIFICATION	8.801869227009678E-5	IMPLEMENTATION
// MRI behavior: just plain '//' or '\\\\' are considered illegal on Windows.	WITHOUT_CLASSIFICATION	0.999995967174867	WITHOUT_CLASSIFICATION	4.0328251329958014E-6	IMPLEMENTATION
// this _is_ legal (when removing an undef)	WITHOUT_CLASSIFICATION	0.9997226819775861	WITHOUT_CLASSIFICATION	2.773180224139372E-4	IMPLEMENTATION
// What we passed to the constructor for method 'path'	WITHOUT_CLASSIFICATION	0.9979251481944349	WITHOUT_CLASSIFICATION	0.0020748518055650955	IMPLEMENTATION
// ----- Ruby Class Methods ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999873488234029	WITHOUT_CLASSIFICATION	1.2651176597052595E-5	IMPLEMENTATION
// // CONSTANT TABLE METHODS - pass to delegate //	WITHOUT_CLASSIFICATION	0.9999266956100533	WITHOUT_CLASSIFICATION	7.330438994663022E-5	IMPLEMENTATION
// We get canonical path to try and flatten the path out. // a dir '/subdir/..' should return as '/' // cnutter: Do we want to flatten path out?	WITHOUT_CLASSIFICATION	0.9998978048727987	WITHOUT_CLASSIFICATION	1.0219512720135776E-4	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9996359886852155	WITHOUT_CLASSIFICATION	3.640113147844894E-4	IMPLEMENTATION
// ----- Ruby Instance Methods -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999662717031501	WITHOUT_CLASSIFICATION	3.372829684983622E-5	IMPLEMENTATION
// Make sure any read()s after close fail.	WITHOUT_CLASSIFICATION	0.9999953044793227	WITHOUT_CLASSIFICATION	4.695520677265738E-6	IMPLEMENTATION
// ----- Helper Methods --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.999977064661575	WITHOUT_CLASSIFICATION	2.2935338424907032E-5	IMPLEMENTATION
// try to use POSIX for this first	WITHOUT_CLASSIFICATION	0.9998126990528504	WITHOUT_CLASSIFICATION	1.8730094714961514E-4	IMPLEMENTATION
// otherwise fall back on the old way	WITHOUT_CLASSIFICATION	0.9903862053598235	WITHOUT_CLASSIFICATION	0.009613794640176561	IMPLEMENTATION
// Proc class	WITHOUT_CLASSIFICATION	0.9998551089936475	WITHOUT_CLASSIFICATION	1.4489100635244623E-4	IMPLEMENTATION
// No passed in block, lets check next outer frame for one ('Proc.new')	WITHOUT_CLASSIFICATION	0.9999946818423626	WITHOUT_CLASSIFICATION	5.318157637317243E-6	IMPLEMENTATION
// modify the block with a new backref/lastline-grabbing scope	WITHOUT_CLASSIFICATION	0.9998423448446254	WITHOUT_CLASSIFICATION	1.5765515537451862E-4	IMPLEMENTATION
// for future compatibility as constructors move toward not accepting metaclass?	WITHOUT_CLASSIFICATION	0.9978879564186767	WITHOUT_CLASSIFICATION	0.002112043581323288	IMPLEMENTATION
//        case RUBY_HYBRID: //            backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); //            break;	WITHOUT_CLASSIFICATION	0.9998118633424973	WITHOUT_CLASSIFICATION	1.8813665750277544E-4	IMPLEMENTATION
// This looks wrong, but it's the way MRI does it.	WITHOUT_CLASSIFICATION	0.9999846956428039	WITHOUT_CLASSIFICATION	1.5304357196049775E-5	IMPLEMENTATION
// rb_exc_new3	WITHOUT_CLASSIFICATION	0.9996200707317198	WITHOUT_CLASSIFICATION	3.7992926828032465E-4	IMPLEMENTATION
// NOTE: The indicies here match exactly the signal values; do not reorder	WITHOUT_CLASSIFICATION	0.9950530300820861	WITHOUT_CLASSIFICATION	0.0049469699179138515	IMPLEMENTATION
//registerThreadDumpSignalHandler(runtime);	WITHOUT_CLASSIFICATION	0.9996611722072354	WITHOUT_CLASSIFICATION	3.388277927646339E-4	IMPLEMENTATION
// IOT is also 6	WITHOUT_CLASSIFICATION	0.9998507594263891	WITHOUT_CLASSIFICATION	1.4924057361088815E-4	IMPLEMENTATION
// CLD is also 20	WITHOUT_CLASSIFICATION	0.9998374608139347	WITHOUT_CLASSIFICATION	1.625391860652751E-4	IMPLEMENTATION
// RubySignal	WITHOUT_CLASSIFICATION	0.9996200707317198	WITHOUT_CLASSIFICATION	3.7992926828032465E-4	IMPLEMENTATION
// ZStream actually *isn't* allocatable	WITHOUT_CLASSIFICATION	0.9998595461917523	WITHOUT_CLASSIFICATION	1.4045380824765277E-4	IMPLEMENTATION
// MRI behavior, enforced by tests	WITHOUT_CLASSIFICATION	0.9999707359658488	WITHOUT_CLASSIFICATION	2.9264034151195387E-5	IMPLEMENTATION
// it's safe since adler.update doesn't modify the array	WITHOUT_CLASSIFICATION	0.999990513961363	WITHOUT_CLASSIFICATION	9.486038636986626E-6	IMPLEMENTATION
// MRI behavior: in finished mode, we work as pass-through	WITHOUT_CLASSIFICATION	0.9999955448003601	WITHOUT_CLASSIFICATION	4.455199639878911E-6	IMPLEMENTATION
// SYNC_FLUSH	WITHOUT_CLASSIFICATION	0.9996200707317198	WITHOUT_CLASSIFICATION	3.7992926828032465E-4	IMPLEMENTATION
// By default, NO_FLUSH	WITHOUT_CLASSIFICATION	0.999910760877584	WITHOUT_CLASSIFICATION	8.92391224159692E-5	IMPLEMENTATION
//io.finish();	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
// should invoke seek on realIo	WITHOUT_CLASSIFICATION	0.999696809077836	WITHOUT_CLASSIFICATION	3.031909221640245E-4	IMPLEMENTATION
// hmm...	WITHOUT_CLASSIFICATION	0.9999914754825183	WITHOUT_CLASSIFICATION	8.524517481776458E-6	IMPLEMENTATION
// Called before any write to make sure the // header is always written before the first bytes	WITHOUT_CLASSIFICATION	0.9999329245581663	WITHOUT_CLASSIFICATION	6.7075441833685E-5	IMPLEMENTATION
// For JDK 1.4 we can use "cal.getTimeInMillis()"	WITHOUT_CLASSIFICATION	0.9990946121092265	WITHOUT_CLASSIFICATION	9.053878907735718E-4	IMPLEMENTATION
// We can just use dt, since it is immutable	WITHOUT_CLASSIFICATION	0.9999910055135167	WITHOUT_CLASSIFICATION	8.99448648330158E-6	IMPLEMENTATION
// float number of seconds	WITHOUT_CLASSIFICATION	0.9999607296037413	WITHOUT_CLASSIFICATION	3.927039625868043E-5	IMPLEMENTATION
// modified to match how hash is calculated in 1.8.2	WITHOUT_CLASSIFICATION	0.9998035159431863	WITHOUT_CLASSIFICATION	1.9648405681374614E-4	IMPLEMENTATION
// dump usec, not msec	WITHOUT_CLASSIFICATION	0.9981323323519473	WITHOUT_CLASSIFICATION	0.001867667648052752	IMPLEMENTATION
/* Time class methods */	WITHOUT_CLASSIFICATION	0.999994869153978	WITHOUT_CLASSIFICATION	5.130846022055568E-6	IMPLEMENTATION
// marsaling dumps usec, not msec	WITHOUT_CLASSIFICATION	0.9969838892520656	WITHOUT_CLASSIFICATION	0.0030161107479343852	IMPLEMENTATION
// MRI accepts additional wday argument which appears to be ignored.	WITHOUT_CLASSIFICATION	0.9999805297148201	WITHOUT_CLASSIFICATION	1.9470285179847288E-5	IMPLEMENTATION
// set up with min values and then add to allow rolling over	WITHOUT_CLASSIFICATION	0.9999955715089196	WITHOUT_CLASSIFICATION	4.428491080340071E-6	IMPLEMENTATION
// the instant at which we will ask dtz what the difference between DST and // standard time is	WITHOUT_CLASSIFICATION	0.9998728931022733	WITHOUT_CLASSIFICATION	1.271068977267626E-4	IMPLEMENTATION
// if we might be moving this time from !DST -> DST, the offset is assumed // to be the same as it was just before we last moved from DST -> !DST	WITHOUT_CLASSIFICATION	0.9999999988932153	WITHOUT_CLASSIFICATION	1.1067846913209022E-9	IMPLEMENTATION
// Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.	WITHOUT_CLASSIFICATION	0.9978015512071418	WITHOUT_CLASSIFICATION	0.002198448792858189	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999972793471795	WITHOUT_CLASSIFICATION	2.7206528205613766E-6	IMPLEMENTATION
/* If the value will fit in a Fixnum, return one of those. */	WITHOUT_CLASSIFICATION	0.9999999762431212	WITHOUT_CLASSIFICATION	2.375687877933669E-8	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999975756351955	WITHOUT_CLASSIFICATION	2.4243648043345444E-6	IMPLEMENTATION
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9998980669013433	WITHOUT_CLASSIFICATION	1.0193309865661558E-4	IMPLEMENTATION
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9598038868605999	WITHOUT_CLASSIFICATION	0.04019611313939997	IMPLEMENTATION
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9598038868605999	WITHOUT_CLASSIFICATION	0.04019611313939997	IMPLEMENTATION
// no bignorm here needed	WITHOUT_CLASSIFICATION	0.9132647390475741	WITHOUT_CLASSIFICATION	0.08673526095242585	IMPLEMENTATION
// wow, the only time we can use the java protocol ;)	WITHOUT_CLASSIFICATION	0.999942359305225	WITHOUT_CLASSIFICATION	5.764069477512725E-5	IMPLEMENTATION
// Pad with a 0	WITHOUT_CLASSIFICATION	0.9998242070750599	WITHOUT_CLASSIFICATION	1.7579292494010592E-4	IMPLEMENTATION
// BigInteger required a sign byte in incoming array	WITHOUT_CLASSIFICATION	0.9999803796024812	WITHOUT_CLASSIFICATION	1.9620397518825943E-5	IMPLEMENTATION
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9999999285917666	WITHOUT_CLASSIFICATION	7.14082334666863E-8	IMPLEMENTATION
// We do this b/c make_tmpname might be overridden	WITHOUT_CLASSIFICATION	0.9999883741179143	WITHOUT_CLASSIFICATION	1.1625882085725905E-5	IMPLEMENTATION
// ???	WITHOUT_CLASSIFICATION	0.9999831273975558	WITHOUT_CLASSIFICATION	1.6872602444299278E-5	IMPLEMENTATION
// PID	WITHOUT_CLASSIFICATION	0.9999914908149409	WITHOUT_CLASSIFICATION	8.509185059130139E-6	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999975756351955	WITHOUT_CLASSIFICATION	2.4243648043345444E-6	IMPLEMENTATION
// elements and trailing nils	WITHOUT_CLASSIFICATION	0.9999914325332665	WITHOUT_CLASSIFICATION	8.567466733438801E-6	IMPLEMENTATION
// Dir::tmpdir	WITHOUT_CLASSIFICATION	0.9996200707317198	WITHOUT_CLASSIFICATION	3.7992926828032465E-4	IMPLEMENTATION
// volatile to ensure that initial nil-fill is visible to other threads	WITHOUT_CLASSIFICATION	0.9999950561877977	WITHOUT_CLASSIFICATION	4.943812202299175E-6	IMPLEMENTATION
/* Ruby arrays default to holding 16 elements, so we create an         * ArrayList of the same size if we're not told otherwise         */	WITHOUT_CLASSIFICATION	0.9999924414194733	WITHOUT_CLASSIFICATION	7.558580526698231E-6	IMPLEMENTATION
/* rb_ary_new2     * just allocates the internal array     */	WITHOUT_CLASSIFICATION	0.9999972960542954	WITHOUT_CLASSIFICATION	2.7039457046546568E-6	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999943144917077	WITHOUT_CLASSIFICATION	5.685508292265233E-6	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999943144917077	WITHOUT_CLASSIFICATION	5.685508292265233E-6	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999943144917077	WITHOUT_CLASSIFICATION	5.685508292265233E-6	IMPLEMENTATION
/* Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour     *      */	WITHOUT_CLASSIFICATION	0.9999872411364948	WITHOUT_CLASSIFICATION	1.2758863505285842E-5	IMPLEMENTATION
/* NEWOBJ and OBJSETUP equivalent     * fastest one, for shared arrays, optional objectspace     */	WITHOUT_CLASSIFICATION	0.9999974104249673	WITHOUT_CLASSIFICATION	2.5895750328219847E-6	IMPLEMENTATION
// Create global constants and variables	WITHOUT_CLASSIFICATION	0.999999292154714	WITHOUT_CLASSIFICATION	7.078452860961792E-7	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9845289743095197	WITHOUT_CLASSIFICATION	0.015471025690480252	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9845289743095197	WITHOUT_CLASSIFICATION	0.015471025690480252	IMPLEMENTATION
// Windows does not support these functions, so we won't even try // This also matches Ruby behavior for JRUBY-2353.	WITHOUT_CLASSIFICATION	0.9999762533954797	WITHOUT_CLASSIFICATION	2.3746604520239794E-5	IMPLEMENTATION
// There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and // newer one (US/Pacific, America/Los_Angeles). This pattern is to detect // the legacy TZ format in order to convert it to the newer format // understood by Java API.	WITHOUT_CLASSIFICATION	0.9999782308063005	WITHOUT_CLASSIFICATION	2.176919369939828E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9845289743095197	WITHOUT_CLASSIFICATION	0.015471025690480252	IMPLEMENTATION
// 1.9 seems to just do inspect for to_s now	WITHOUT_CLASSIFICATION	0.9999991045913388	WITHOUT_CLASSIFICATION	8.954086611127179E-7	IMPLEMENTATION
// possibly should not in object space	WITHOUT_CLASSIFICATION	0.9999398630668296	WITHOUT_CLASSIFICATION	6.013693317037396E-5	IMPLEMENTATION
// only fill if there actually will remain trailing storage	WITHOUT_CLASSIFICATION	0.9999921411404573	WITHOUT_CLASSIFICATION	7.858859542672825E-6	IMPLEMENTATION
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9996200707317198	WITHOUT_CLASSIFICATION	3.7992926828032465E-4	IMPLEMENTATION
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9996200707317198	WITHOUT_CLASSIFICATION	3.7992926828032465E-4	IMPLEMENTATION
// from DUP_SETUP	WITHOUT_CLASSIFICATION	0.9999326648050757	WITHOUT_CLASSIFICATION	6.733519492424298E-5	IMPLEMENTATION
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999741409247757	WITHOUT_CLASSIFICATION	2.585907522430812E-5	IMPLEMENTATION
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999548960838853	WITHOUT_CLASSIFICATION	4.510391611464211E-5	IMPLEMENTATION
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999548960838853	WITHOUT_CLASSIFICATION	4.510391611464211E-5	IMPLEMENTATION
// Satisfy java.util.List interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999473685802135	WITHOUT_CLASSIFICATION	5.2631419786474534E-5	IMPLEMENTATION
// pre-set for the sake of terminating recursive calls	WITHOUT_CLASSIFICATION	0.9999527398231	WITHOUT_CLASSIFICATION	4.726017690013818E-5	IMPLEMENTATION
/* root fiber */	WITHOUT_CLASSIFICATION	0.9999297604874776	WITHOUT_CLASSIFICATION	7.023951252233804E-5	IMPLEMENTATION
// GMT+00:00 --> Etc/GMT, see "MRI behavior" // comment below.	WITHOUT_CLASSIFICATION	0.9999289174714273	WITHOUT_CLASSIFICATION	7.10825285727105E-5	IMPLEMENTATION
//  See http://www.gzip.org/zlib/rfc-gzip.html	WITHOUT_CLASSIFICATION	0.9999180589169989	WITHOUT_CLASSIFICATION	8.194108300100828E-5	IMPLEMENTATION
// extras flag	WITHOUT_CLASSIFICATION	0.9994927689544655	WITHOUT_CLASSIFICATION	5.072310455346029E-4	IMPLEMENTATION
// Zlib::NO_FLUSH	WITHOUT_CLASSIFICATION	0.9996200707317198	WITHOUT_CLASSIFICATION	3.7992926828032465E-4	IMPLEMENTATION
// ...nothing	WITHOUT_CLASSIFICATION	0.9996200707317198	WITHOUT_CLASSIFICATION	3.7992926828032465E-4	IMPLEMENTATION
// utility method	WITHOUT_CLASSIFICATION	0.9991469014904261	WITHOUT_CLASSIFICATION	8.530985095739662E-4	IMPLEMENTATION
// Prepare LoadService and load path	WITHOUT_CLASSIFICATION	0.999886102819156	WITHOUT_CLASSIFICATION	1.1389718084394005E-4	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999975756351955	WITHOUT_CLASSIFICATION	2.4243648043345444E-6	IMPLEMENTATION
// flags // 4 bytes of modified time	WITHOUT_CLASSIFICATION	0.9999815397378644	WITHOUT_CLASSIFICATION	1.8460262135503875E-5	IMPLEMENTATION
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999016207160139	WITHOUT_CLASSIFICATION	9.837928398616209E-5	IMPLEMENTATION
// 1.8 "include?"	WITHOUT_CLASSIFICATION	0.9996200707317198	WITHOUT_CLASSIFICATION	3.7992926828032465E-4	IMPLEMENTATION
// any BigInteger is bigger than Fixnum and we don't have FIXABLE	WITHOUT_CLASSIFICATION	0.9999597157865244	WITHOUT_CLASSIFICATION	4.028421347556383E-5	IMPLEMENTATION
// beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal	WITHOUT_CLASSIFICATION	0.999988980096981	WITHOUT_CLASSIFICATION	1.101990301900121E-5	IMPLEMENTATION
// MRI does it!	WITHOUT_CLASSIFICATION	0.9999701831249187	WITHOUT_CLASSIFICATION	2.9816875081322214E-5	IMPLEMENTATION
// won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999984554318979	WITHOUT_CLASSIFICATION	1.5445681019922792E-6	IMPLEMENTATION
// it won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999964904594394	WITHOUT_CLASSIFICATION	3.5095405606658397E-6	IMPLEMENTATION
// RubyClassPathVariable	WITHOUT_CLASSIFICATION	0.9999362290526616	WITHOUT_CLASSIFICATION	6.377094733850302E-5	IMPLEMENTATION
// not to be confused with RubyObject's flags	WITHOUT_CLASSIFICATION	0.9986820899228976	WITHOUT_CLASSIFICATION	0.0013179100771023476	IMPLEMENTATION
// second argument is allowed, but ignored (MRI)	WITHOUT_CLASSIFICATION	0.9999835335775503	WITHOUT_CLASSIFICATION	1.6466422449650214E-5	IMPLEMENTATION
// we are presumably running a precompiled class; load directly	WITHOUT_CLASSIFICATION	0.9999734177626943	WITHOUT_CLASSIFICATION	2.6582237305749694E-5	IMPLEMENTATION
// terminate; tryCompile will have printed out an error and we're done	WITHOUT_CLASSIFICATION	0.999984844144697	WITHOUT_CLASSIFICATION	1.5155855303093334E-5	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999967831222711	WITHOUT_CLASSIFICATION	3.216877729012104E-6	IMPLEMENTATION
// do nothing, this iteration restarts	WITHOUT_CLASSIFICATION	0.999870530490662	WITHOUT_CLASSIFICATION	1.2946950933800765E-4	IMPLEMENTATION
// recheck condition	WITHOUT_CLASSIFICATION	0.9996506646131792	WITHOUT_CLASSIFICATION	3.493353868208493E-4	IMPLEMENTATION
// Get the main threadcontext (gets constructed for us)	WITHOUT_CLASSIFICATION	0.9999437801759414	WITHOUT_CLASSIFICATION	5.621982405854675E-5	IMPLEMENTATION
// Construct key services	WITHOUT_CLASSIFICATION	0.9999401766208419	WITHOUT_CLASSIFICATION	5.982337915815628E-5	IMPLEMENTATION
// initialize the root of the class hierarchy completely	WITHOUT_CLASSIFICATION	0.9999891270865766	WITHOUT_CLASSIFICATION	1.0872913423482697E-5	IMPLEMENTATION
// Construct the top-level execution frame and scope for the main thread	WITHOUT_CLASSIFICATION	0.999882892682362	WITHOUT_CLASSIFICATION	1.1710731763798886E-4	IMPLEMENTATION
// Initialize all the core classes	WITHOUT_CLASSIFICATION	0.9999255979238496	WITHOUT_CLASSIFICATION	7.440207615035982E-5	IMPLEMENTATION
// Initialize the "dummy" class used as a marker	WITHOUT_CLASSIFICATION	0.9999844700129984	WITHOUT_CLASSIFICATION	1.552998700158425E-5	IMPLEMENTATION
// Initialize Kernel and include into Object	WITHOUT_CLASSIFICATION	0.9999609596417204	WITHOUT_CLASSIFICATION	3.9040358279588186E-5	IMPLEMENTATION
// Object is ready, create top self	WITHOUT_CLASSIFICATION	0.9999415591100165	WITHOUT_CLASSIFICATION	5.8440889983523546E-5	IMPLEMENTATION
// Pre-create all the core classes potentially referenced during startup	WITHOUT_CLASSIFICATION	0.9998884900855513	WITHOUT_CLASSIFICATION	1.1150991444869794E-4	IMPLEMENTATION
// Math depends on all numeric types	WITHOUT_CLASSIFICATION	0.9996781026538929	WITHOUT_CLASSIFICATION	3.2189734610712107E-4	IMPLEMENTATION
// depends on IO, FileTest	WITHOUT_CLASSIFICATION	0.9998009501804783	WITHOUT_CLASSIFICATION	1.9904981952169223E-4	IMPLEMENTATION
// initialize builtin libraries	WITHOUT_CLASSIFICATION	0.9999291695423068	WITHOUT_CLASSIFICATION	7.08304576931915E-5	IMPLEMENTATION
// Require in all libraries specified on command line	WITHOUT_CLASSIFICATION	0.9999798528084137	WITHOUT_CLASSIFICATION	2.0147191586212063E-5	IMPLEMENTATION
// Bootstrap the top of the hierarchy	WITHOUT_CLASSIFICATION	0.999874531134155	WITHOUT_CLASSIFICATION	1.2546886584494275E-4	IMPLEMENTATION
// we try to get the classloader that loaded JRuby, falling back on System	WITHOUT_CLASSIFICATION	0.9998186450382833	WITHOUT_CLASSIFICATION	1.8135496171672093E-4	IMPLEMENTATION
// determine spacing	WITHOUT_CLASSIFICATION	0.9997710551770467	WITHOUT_CLASSIFICATION	2.2894482295341583E-4	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999987425805775	WITHOUT_CLASSIFICATION	1.2574194223996682E-6	IMPLEMENTATION
// For JSR 223 support: see http://scripting.java.net/	WITHOUT_CLASSIFICATION	0.9999587961429013	WITHOUT_CLASSIFICATION	4.1203857098772515E-5	IMPLEMENTATION
// use this for JRuby-internal finalizers	WITHOUT_CLASSIFICATION	0.9997621543665942	WITHOUT_CLASSIFICATION	2.3784563340564446E-4	IMPLEMENTATION
// this method is for finalizers registered via ObjectSpace	WITHOUT_CLASSIFICATION	0.9999046069044003	WITHOUT_CLASSIFICATION	9.539309559971273E-5	IMPLEMENTATION
// new factory methods ------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9998727382236045	WITHOUT_CLASSIFICATION	1.2726177639547543E-4	IMPLEMENTATION
//        assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9260923250228171	WITHOUT_CLASSIFICATION	0.07390767497718279	IMPLEMENTATION
// Equivalent of Data_Wrap_Struct	WITHOUT_CLASSIFICATION	0.9999426505269989	WITHOUT_CLASSIFICATION	5.7349473001102874E-5	IMPLEMENTATION
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999718341740834	WITHOUT_CLASSIFICATION	2.816582591648708E-5	IMPLEMENTATION
// ChannelDescriptors opened by sysopen are cached to avoid collection	WITHOUT_CLASSIFICATION	0.9999760452300168	WITHOUT_CLASSIFICATION	2.3954769983085095E-5	IMPLEMENTATION
// Default objects	WITHOUT_CLASSIFICATION	0.9994349142105643	WITHOUT_CLASSIFICATION	5.650857894356922E-4	IMPLEMENTATION
// record separator var, to speed up io ops that use it	WITHOUT_CLASSIFICATION	0.9998799026986492	WITHOUT_CLASSIFICATION	1.2009730135065369E-4	IMPLEMENTATION
// former java.lang.System concepts now internalized for MVM	WITHOUT_CLASSIFICATION	0.999977603858141	WITHOUT_CLASSIFICATION	2.239614185894153E-5	IMPLEMENTATION
// Java support	WITHOUT_CLASSIFICATION	0.9968984569994186	WITHOUT_CLASSIFICATION	0.0031015430005814355	IMPLEMENTATION
// Parser stats	WITHOUT_CLASSIFICATION	0.9996626849513197	WITHOUT_CLASSIFICATION	3.3731504868028363E-4	IMPLEMENTATION
// Compilation	WITHOUT_CLASSIFICATION	0.9996200707317198	WITHOUT_CLASSIFICATION	3.7992926828032465E-4	IMPLEMENTATION
// can't read non-standard properties	WITHOUT_CLASSIFICATION	0.9999786790011743	WITHOUT_CLASSIFICATION	2.132099882566489E-5	IMPLEMENTATION
// can't create custom classloaders	WITHOUT_CLASSIFICATION	0.9999306654972309	WITHOUT_CLASSIFICATION	6.933450276912218E-5	IMPLEMENTATION
// mutex that controls modifications of user-defined finalizers	WITHOUT_CLASSIFICATION	0.9999128646607703	WITHOUT_CLASSIFICATION	8.713533922974066E-5	IMPLEMENTATION
// mutex that controls modifications of internal finalizers	WITHOUT_CLASSIFICATION	0.9998989134616599	WITHOUT_CLASSIFICATION	1.0108653834014811E-4	IMPLEMENTATION
// A thread pool to use for executing this runtime's Ruby threads	WITHOUT_CLASSIFICATION	0.9993650383443766	WITHOUT_CLASSIFICATION	6.349616556233736E-4	IMPLEMENTATION
// A global object lock for class hierarchy mutations	WITHOUT_CLASSIFICATION	0.9999995120446964	WITHOUT_CLASSIFICATION	4.87955303571151E-7	IMPLEMENTATION
// initial spaces // spaces before "at"	WITHOUT_CLASSIFICATION	0.9999663692015154	WITHOUT_CLASSIFICATION	3.363079848465848E-5	IMPLEMENTATION
// event name // filename // line numbers should be 1-based	WITHOUT_CLASSIFICATION	0.9999743124799486	WITHOUT_CLASSIFICATION	2.568752005137068E-5	IMPLEMENTATION
// The method is intentionally not public, since it typically should // not be used outside of the core.	WITHOUT_CLASSIFICATION	0.9994925150373537	WITHOUT_CLASSIFICATION	5.074849626462962E-4	IMPLEMENTATION
// Note: this field and the following static initializer // must be located be in this order!	WITHOUT_CLASSIFICATION	0.9999786315441087	WITHOUT_CLASSIFICATION	2.1368455891233844E-5	IMPLEMENTATION
// Contains a list of all blocks (as Procs) that should be called when // the runtime environment exits.	WITHOUT_CLASSIFICATION	0.9999989181794341	WITHOUT_CLASSIFICATION	1.0818205659487486E-6	IMPLEMENTATION
// quoted-printable	WITHOUT_CLASSIFICATION	0.9996200707317198	WITHOUT_CLASSIFICATION	3.7992926828032465E-4	IMPLEMENTATION
// default options	WITHOUT_CLASSIFICATION	0.9999639637829033	WITHOUT_CLASSIFICATION	3.6036217096579746E-5	IMPLEMENTATION
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9996200707317198	WITHOUT_CLASSIFICATION	3.7992926828032465E-4	IMPLEMENTATION
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9996200707317198	WITHOUT_CLASSIFICATION	3.7992926828032465E-4	IMPLEMENTATION
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9996200707317198	WITHOUT_CLASSIFICATION	3.7992926828032465E-4	IMPLEMENTATION
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9996200707317198	WITHOUT_CLASSIFICATION	3.7992926828032465E-4	IMPLEMENTATION
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999914754825183	WITHOUT_CLASSIFICATION	8.524517481776458E-6	IMPLEMENTATION
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999914754825183	WITHOUT_CLASSIFICATION	8.524517481776458E-6	IMPLEMENTATION
// UTF-8	WITHOUT_CLASSIFICATION	0.9999918119579313	WITHOUT_CLASSIFICATION	8.188042068655603E-6	IMPLEMENTATION
// UTF-8	WITHOUT_CLASSIFICATION	0.9999918119579313	WITHOUT_CLASSIFICATION	8.188042068655603E-6	IMPLEMENTATION
// long name option	WITHOUT_CLASSIFICATION	0.9996975701179563	WITHOUT_CLASSIFICATION	3.024298820436572E-4	IMPLEMENTATION
// conversion	WITHOUT_CLASSIFICATION	0.9998196286596702	WITHOUT_CLASSIFICATION	1.8037134032977792E-4	IMPLEMENTATION
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999997528914995	WITHOUT_CLASSIFICATION	2.4710850049228904E-6	IMPLEMENTATION
// string doesn't share any resources	WITHOUT_CLASSIFICATION	0.999999607308546	WITHOUT_CLASSIFICATION	3.926914539180893E-7	IMPLEMENTATION
// string has it's own ByteList, but it's pointing to a shared buffer (byte[])	WITHOUT_CLASSIFICATION	0.9999988880273256	WITHOUT_CLASSIFICATION	1.1119726743551847E-6	IMPLEMENTATION
// string doesn't have it's own ByteList (values)	WITHOUT_CLASSIFICATION	0.999997909947908	WITHOUT_CLASSIFICATION	2.090052091848988E-6	IMPLEMENTATION
// ENC_CODERANGE_ASCIIONLY	WITHOUT_CLASSIFICATION	0.9999362290526616	WITHOUT_CLASSIFICATION	6.377094733850302E-5	IMPLEMENTATION
// rb_enc_str_asciionly_p	WITHOUT_CLASSIFICATION	0.9999362290526616	WITHOUT_CLASSIFICATION	6.377094733850302E-5	IMPLEMENTATION
// rb_enc_str_coderange	WITHOUT_CLASSIFICATION	0.9999362290526616	WITHOUT_CLASSIFICATION	6.377094733850302E-5	IMPLEMENTATION
// rb_str_hash_cmp	WITHOUT_CLASSIFICATION	0.9996200707317198	WITHOUT_CLASSIFICATION	3.7992926828032465E-4	IMPLEMENTATION
// Deprecated String construction routines	WITHOUT_CLASSIFICATION	0.9999650008844343	WITHOUT_CLASSIFICATION	3.499911556562239E-5	IMPLEMENTATION
// String construction routines by NOT byte[] buffer and NOT making the target String shared 	WITHOUT_CLASSIFICATION	0.9999969930723077	WITHOUT_CLASSIFICATION	3.006927692284934E-6	IMPLEMENTATION
/* rb_str_subseq */	WITHOUT_CLASSIFICATION	0.999930388944247	WITHOUT_CLASSIFICATION	6.961105575302719E-5	IMPLEMENTATION
// no need to assign encoding, same bytelist shared	WITHOUT_CLASSIFICATION	0.9998017569639038	WITHOUT_CLASSIFICATION	1.9824303609607035E-4	IMPLEMENTATION
// if len == 0 then shared empty	WITHOUT_CLASSIFICATION	0.9999966444639786	WITHOUT_CLASSIFICATION	3.355536021312355E-6	IMPLEMENTATION
/* rb_str_cmp_m */	WITHOUT_CLASSIFICATION	0.999930388944247	WITHOUT_CLASSIFICATION	6.961105575302719E-5	IMPLEMENTATION
// we limit to int because ByteBuffer can only allocate int sizes	WITHOUT_CLASSIFICATION	0.9998895215233086	WITHOUT_CLASSIFICATION	1.1047847669146229E-4	IMPLEMENTATION
// // rb_str_buf_append	WITHOUT_CLASSIFICATION	0.9999362290526616	WITHOUT_CLASSIFICATION	6.377094733850302E-5	IMPLEMENTATION
// encoding doesn't have to be copied.	WITHOUT_CLASSIFICATION	0.9999970447069138	WITHOUT_CLASSIFICATION	2.9552930861348112E-6	IMPLEMENTATION
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9997942485437987	WITHOUT_CLASSIFICATION	2.0575145620136044E-4	IMPLEMENTATION
// must not reallocate	WITHOUT_CLASSIFICATION	0.996746072720424	WITHOUT_CLASSIFICATION	0.003253927279575971	IMPLEMENTATION
// Illegal combination	WITHOUT_CLASSIFICATION	0.9999362599208058	WITHOUT_CLASSIFICATION	6.374007919421326E-5	IMPLEMENTATION
// use 1.8 impl	WITHOUT_CLASSIFICATION	0.9991690147035514	WITHOUT_CLASSIFICATION	8.309852964485803E-4	IMPLEMENTATION
/* RubyString aka rb_string_value */	WITHOUT_CLASSIFICATION	0.9999817627309122	WITHOUT_CLASSIFICATION	1.8237269087704323E-5	IMPLEMENTATION
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999891310188753	WITHOUT_CLASSIFICATION	1.0868981124590996E-5	IMPLEMENTATION
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999997378108132	WITHOUT_CLASSIFICATION	2.621891868465663E-7	IMPLEMENTATION
/* len + margin */	WITHOUT_CLASSIFICATION	0.9998803524947828	WITHOUT_CLASSIFICATION	1.1964750521721434E-4	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9992639059054615	WITHOUT_CLASSIFICATION	7.360940945383761E-4	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9992639059054615	WITHOUT_CLASSIFICATION	7.360940945383761E-4	IMPLEMENTATION
/* copy pre-match substr */	WITHOUT_CLASSIFICATION	0.9999950460823706	WITHOUT_CLASSIFICATION	4.95391762949841E-6	IMPLEMENTATION
// string given	WITHOUT_CLASSIFICATION	0.9999869980708471	WITHOUT_CLASSIFICATION	1.300192915301008E-5	IMPLEMENTATION
// hash given	WITHOUT_CLASSIFICATION	0.9993907190434429	WITHOUT_CLASSIFICATION	6.092809565570695E-4	IMPLEMENTATION
// This represents left most digit in a set of incremented // values?  Therefore leftmost numeric must be '1' and not '0' // 999 -> 1000, not 999 -> 0000.  whereas chars should be // zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"	WITHOUT_CLASSIFICATION	0.9999982611441686	WITHOUT_CLASSIFICATION	1.7388558315270082E-6	IMPLEMENTATION
/* substring longer than string */	WITHOUT_CLASSIFICATION	0.9999998447899944	WITHOUT_CLASSIFICATION	1.5521000568142913E-7	IMPLEMENTATION
/* rb_str_substr */	WITHOUT_CLASSIFICATION	0.999930388944247	WITHOUT_CLASSIFICATION	6.961105575302719E-5	IMPLEMENTATION
// nothing	WITHOUT_CLASSIFICATION	0.9999984269482171	WITHOUT_CLASSIFICATION	1.573051782983172E-6	IMPLEMENTATION
// nothing	WITHOUT_CLASSIFICATION	0.9999984269482171	WITHOUT_CLASSIFICATION	1.573051782983172E-6	IMPLEMENTATION
/* rb_str_splice */	WITHOUT_CLASSIFICATION	0.999930388944247	WITHOUT_CLASSIFICATION	6.961105575302719E-5	IMPLEMENTATION
// TODO: keep cr // TODO: rb_str_splice_0	WITHOUT_CLASSIFICATION	0.6128102916490148	IMPLEMENTATION	0.38718970835098515	WITHOUT_CLASSIFICATION
// keep cr ?	WITHOUT_CLASSIFICATION	0.9998799274229802	WITHOUT_CLASSIFICATION	1.2007257701981939E-4	IMPLEMENTATION
// keep cr ?	WITHOUT_CLASSIFICATION	0.9998799274229802	WITHOUT_CLASSIFICATION	1.2007257701981939E-4	IMPLEMENTATION
/* wrapped to \0...\0.  search next valid char. */	WITHOUT_CLASSIFICATION	0.9999799580196285	WITHOUT_CLASSIFICATION	2.0041980371513297E-5	IMPLEMENTATION
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.999686219508571	WITHOUT_CLASSIFICATION	3.137804914289988E-4	IMPLEMENTATION
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.999686219508571	WITHOUT_CLASSIFICATION	3.137804914289988E-4	IMPLEMENTATION
// modified	WITHOUT_CLASSIFICATION	0.9984447838933149	WITHOUT_CLASSIFICATION	0.001555216106685087	IMPLEMENTATION
// modified	WITHOUT_CLASSIFICATION	0.9984447838933149	WITHOUT_CLASSIFICATION	0.001555216106685087	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.9999914754825183	WITHOUT_CLASSIFICATION	8.524517481776458E-6	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.9999914754825183	WITHOUT_CLASSIFICATION	8.524517481776458E-6	IMPLEMENTATION
// QTRUE	WITHOUT_CLASSIFICATION	0.9999914754825183	WITHOUT_CLASSIFICATION	8.524517481776458E-6	IMPLEMENTATION
/* retrieve last replacer */	WITHOUT_CLASSIFICATION	0.9999940365866458	WITHOUT_CLASSIFICATION	5.963413354217492E-6	IMPLEMENTATION
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9995405049219306	WITHOUT_CLASSIFICATION	4.594950780693549E-4	IMPLEMENTATION
// long size * bits in byte	WITHOUT_CLASSIFICATION	0.9999989776727367	WITHOUT_CLASSIFICATION	1.0223272632649278E-6	IMPLEMENTATION
// from encoding, special-casing ASCII* to ASCII	WITHOUT_CLASSIFICATION	0.9999841889656795	WITHOUT_CLASSIFICATION	1.5811034320478105E-5	IMPLEMENTATION
// to encoding, same special-casing	WITHOUT_CLASSIFICATION	0.9999284281990641	WITHOUT_CLASSIFICATION	7.157180093592436E-5	IMPLEMENTATION
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999496222722369	WITHOUT_CLASSIFICATION	5.037772776297444E-5	IMPLEMENTATION
// decode from "from" and encode to "to"	WITHOUT_CLASSIFICATION	0.9999912289293905	WITHOUT_CLASSIFICATION	8.771070609407242E-6	IMPLEMENTATION
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999496222722369	WITHOUT_CLASSIFICATION	5.037772776297444E-5	IMPLEMENTATION
//Kernel is the only Module that doesn't need an implementor	WITHOUT_CLASSIFICATION	0.9999040662403568	WITHOUT_CLASSIFICATION	9.593375964326651E-5	IMPLEMENTATION
// no binding given, use (eval)	WITHOUT_CLASSIFICATION	0.999820734746951	WITHOUT_CLASSIFICATION	1.7926525304891975E-4	IMPLEMENTATION
// interned, OK for "fast" methods	WITHOUT_CLASSIFICATION	0.9998656141508068	WITHOUT_CLASSIFICATION	1.3438584919323547E-4	IMPLEMENTATION
// File to be loaded by autoload has already been or is being loaded.	WITHOUT_CLASSIFICATION	0.9999987414208636	WITHOUT_CLASSIFICATION	1.258579136425206E-6	IMPLEMENTATION
// rb_cstr_to_dbl case	WITHOUT_CLASSIFICATION	0.9999154980649073	WITHOUT_CLASSIFICATION	8.450193509267743E-5	IMPLEMENTATION
// We break if we know this sleep was explicitly woken up/interrupted	WITHOUT_CLASSIFICATION	0.9997724737634518	WITHOUT_CLASSIFICATION	2.2752623654813118E-4	IMPLEMENTATION
// exec process, create IO with process	WITHOUT_CLASSIFICATION	0.9999348891318078	WITHOUT_CLASSIFICATION	6.511086819220684E-5	IMPLEMENTATION
// Zero sleeps forever	WITHOUT_CLASSIFICATION	0.999946046402574	WITHOUT_CLASSIFICATION	5.3953597426005486E-5	IMPLEMENTATION
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.99965277372866	WITHOUT_CLASSIFICATION	3.472262713399697E-4	IMPLEMENTATION
// Explicit zero in MRI returns immediately	WITHOUT_CLASSIFICATION	0.9999934473702508	WITHOUT_CLASSIFICATION	6.552629749185448E-6	IMPLEMENTATION
// Spurious wakeup-loop	WITHOUT_CLASSIFICATION	0.9999362290526616	WITHOUT_CLASSIFICATION	6.377094733850302E-5	IMPLEMENTATION
// adjusts paths started with '/' or '\\', on windows.	WITHOUT_CLASSIFICATION	0.9997950831742638	WITHOUT_CLASSIFICATION	2.0491682573613976E-4	IMPLEMENTATION
// file not given	WITHOUT_CLASSIFICATION	0.9845032521927635	WITHOUT_CLASSIFICATION	0.015496747807236496	IMPLEMENTATION
// string to eval	WITHOUT_CLASSIFICATION	0.9999934589476969	WITHOUT_CLASSIFICATION	6.541052303095378E-6	IMPLEMENTATION
// binding given, use binding's file	WITHOUT_CLASSIFICATION	0.9997763241246408	WITHOUT_CLASSIFICATION	2.2367587535926603E-4	IMPLEMENTATION
// ?g  | boolean | True if file1 has the \CF{setgid} bit	WITHOUT_CLASSIFICATION	0.9999965255284405	WITHOUT_CLASSIFICATION	3.474471559388322E-6	IMPLEMENTATION
// bomb out, it's not a binding or a proc	WITHOUT_CLASSIFICATION	0.9952281164329578	WITHOUT_CLASSIFICATION	0.00477188356704212	IMPLEMENTATION
// Ordering of array traversal not important, just intuitive	WITHOUT_CLASSIFICATION	0.9997431875083471	WITHOUT_CLASSIFICATION	2.5681249165290077E-4	IMPLEMENTATION
//Catch active, throw for catch to handle	WITHOUT_CLASSIFICATION	0.9933521699863657	WITHOUT_CLASSIFICATION	0.0066478300136343735	IMPLEMENTATION
// No catch active for this throw	WITHOUT_CLASSIFICATION	0.9997605808843502	WITHOUT_CLASSIFICATION	2.3941911564978268E-4	IMPLEMENTATION
// without full tracing, many events will not fire	WITHOUT_CLASSIFICATION	0.9984696361002704	WITHOUT_CLASSIFICATION	0.0015303638997295815	IMPLEMENTATION
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9998339469141378	WITHOUT_CLASSIFICATION	1.6605308586216296E-4	IMPLEMENTATION
// MRI behavior: use first byte of string value if len > 0	WITHOUT_CLASSIFICATION	0.9999998791350712	WITHOUT_CLASSIFICATION	1.2086492876609058E-7	IMPLEMENTATION
// MRI behavior: now check arg count	WITHOUT_CLASSIFICATION	0.9993291600440165	WITHOUT_CLASSIFICATION	6.708399559834456E-4	IMPLEMENTATION
// ?A  | Time    | Last access time for file1	WITHOUT_CLASSIFICATION	0.9999965002723159	WITHOUT_CLASSIFICATION	3.499727684226279E-6	IMPLEMENTATION
// ?b  | boolean | True if file1 is a block device	WITHOUT_CLASSIFICATION	0.9999974278355729	WITHOUT_CLASSIFICATION	2.5721644272013647E-6	IMPLEMENTATION
// ?c  | boolean | True if file1 is a character device	WITHOUT_CLASSIFICATION	0.9999978324311051	WITHOUT_CLASSIFICATION	2.1675688950572676E-6	IMPLEMENTATION
// ?C  | Time    | Last change time for file1	WITHOUT_CLASSIFICATION	0.999998594145307	WITHOUT_CLASSIFICATION	1.4058546929659146E-6	IMPLEMENTATION
// ?d  | boolean | True if file1 exists and is a directory	WITHOUT_CLASSIFICATION	0.9999998788825503	WITHOUT_CLASSIFICATION	1.2111744965831461E-7	IMPLEMENTATION
// ?e  | boolean | True if file1 exists	WITHOUT_CLASSIFICATION	0.9999953483121214	WITHOUT_CLASSIFICATION	4.651687878477974E-6	IMPLEMENTATION
// ?f  | boolean | True if file1 exists and is a regular file	WITHOUT_CLASSIFICATION	0.9999984885746708	WITHOUT_CLASSIFICATION	1.5114253293300732E-6	IMPLEMENTATION
// ?G  | boolean | True if file1 exists and has a group ownership equal to the caller's group	WITHOUT_CLASSIFICATION	0.9999992009369326	WITHOUT_CLASSIFICATION	7.990630672859689E-7	IMPLEMENTATION
// ?k  | boolean | True if file1 exists and has the sticky bit set	WITHOUT_CLASSIFICATION	0.9999988567826855	WITHOUT_CLASSIFICATION	1.1432173145093802E-6	IMPLEMENTATION
// ?M  | Time    | Last modification time for file1	WITHOUT_CLASSIFICATION	0.9999976349285562	WITHOUT_CLASSIFICATION	2.36507144374868E-6	IMPLEMENTATION
// ?o  | boolean | True if file1 exists and is owned by the caller's effective uid	WITHOUT_CLASSIFICATION	0.999999406869061	WITHOUT_CLASSIFICATION	5.93130938949305E-7	IMPLEMENTATION
// ?O  | boolean | True if file1 exists and is owned by the caller's real uid 	WITHOUT_CLASSIFICATION	0.9999990314448602	WITHOUT_CLASSIFICATION	9.68555139732419E-7	IMPLEMENTATION
// ?p  | boolean | True if file1 exists and is a fifo	WITHOUT_CLASSIFICATION	0.9999991598219907	WITHOUT_CLASSIFICATION	8.401780091744884E-7	IMPLEMENTATION
// ?r  | boolean | True if file1 is readable by the effective uid/gid of the caller	WITHOUT_CLASSIFICATION	0.9999995858243875	WITHOUT_CLASSIFICATION	4.141756124258757E-7	IMPLEMENTATION
// ?s  | int/nil | If file1 has nonzero size, return the size, otherwise nil	WITHOUT_CLASSIFICATION	0.9998511404468194	WITHOUT_CLASSIFICATION	1.488595531805601E-4	IMPLEMENTATION
// ?S  | boolean | True if file1 exists and is a socket	WITHOUT_CLASSIFICATION	0.9999991197942383	WITHOUT_CLASSIFICATION	8.802057616711423E-7	IMPLEMENTATION
// ?u  | boolean | True if file1 has the setuid bit set	WITHOUT_CLASSIFICATION	0.9999971366371365	WITHOUT_CLASSIFICATION	2.8633628634111786E-6	IMPLEMENTATION
// ?x  | boolean | True if file1 exists and is executable by the effective uid/gid	WITHOUT_CLASSIFICATION	0.9999993626947343	WITHOUT_CLASSIFICATION	6.373052657677386E-7	IMPLEMENTATION
// ?X  | boolean | True if file1 exists and is executable by the real uid/gid	WITHOUT_CLASSIFICATION	0.9999989593102754	WITHOUT_CLASSIFICATION	1.0406897245528978E-6	IMPLEMENTATION
// ?z  | boolean | True if file1 exists and has a zero length	WITHOUT_CLASSIFICATION	0.9999988785339402	WITHOUT_CLASSIFICATION	1.1214660598320305E-6	IMPLEMENTATION
// ?=  | boolean | True if the modification times of file1 and file2 are equal	WITHOUT_CLASSIFICATION	0.9999998094304441	WITHOUT_CLASSIFICATION	1.9056955594614882E-7	IMPLEMENTATION
// ?<  | boolean | True if the modification time of file1 is prior to that of file2	WITHOUT_CLASSIFICATION	0.9999997699017815	WITHOUT_CLASSIFICATION	2.3009821854020892E-7	IMPLEMENTATION
// ?>  | boolean | True if the modification time of file1 is after that of file2	WITHOUT_CLASSIFICATION	0.9999998419542888	WITHOUT_CLASSIFICATION	1.580457111025535E-7	IMPLEMENTATION
// ?-  | boolean | True if file1 and file2 are identical	WITHOUT_CLASSIFICATION	0.9999987581674459	WITHOUT_CLASSIFICATION	1.2418325541665058E-6	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999103759648411	WITHOUT_CLASSIFICATION	8.962403515886887E-5	IMPLEMENTATION
// Error info is per-thread	WITHOUT_CLASSIFICATION	0.9999862675646704	WITHOUT_CLASSIFICATION	1.3732435329652716E-5	IMPLEMENTATION
// init errorInfo to nil	WITHOUT_CLASSIFICATION	0.9999528625362112	WITHOUT_CLASSIFICATION	4.7137463788866984E-5	IMPLEMENTATION
// if we're already aborting, we can receive no further mail	WITHOUT_CLASSIFICATION	0.9999817754209575	WITHOUT_CLASSIFICATION	1.822457904258473E-5	IMPLEMENTATION
// If this thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999014596988413	WITHOUT_CLASSIFICATION	9.85403011587446E-5	IMPLEMENTATION
// new interrupt, to hopefully wake it out of any blocking IO	WITHOUT_CLASSIFICATION	0.9999432727453355	WITHOUT_CLASSIFICATION	5.672725466451664E-5	IMPLEMENTATION
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999815413258553	WITHOUT_CLASSIFICATION	1.8458674144652928E-5	IMPLEMENTATION
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999815413258553	WITHOUT_CLASSIFICATION	1.8458674144652928E-5	IMPLEMENTATION
// JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999982225428742	WITHOUT_CLASSIFICATION	1.7774571258195829E-6	IMPLEMENTATION
// JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999973290178452	WITHOUT_CLASSIFICATION	2.670982154724646E-6	IMPLEMENTATION
// for Thread::start, which does not call the subclass's initialize	WITHOUT_CLASSIFICATION	0.9996594248514293	WITHOUT_CLASSIFICATION	3.40575148570709E-4	IMPLEMENTATION
// JRUBY-3568, inherit threadgroup or use default	WITHOUT_CLASSIFICATION	0.9999674927309105	WITHOUT_CLASSIFICATION	3.2507269089473156E-5	IMPLEMENTATION
// MRI behavior: value given in seconds; converted to Float; less // than or equal to zero returns immediately; returns nil	WITHOUT_CLASSIFICATION	0.9999987805508745	WITHOUT_CLASSIFICATION	1.2194491255364094E-6	IMPLEMENTATION
// If the target thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999676436225894	WITHOUT_CLASSIFICATION	3.2356377410544846E-5	IMPLEMENTATION
// We need this loop in order to be able to "unblock" the // join call without actually calling interrupt.	WITHOUT_CLASSIFICATION	0.9999942875291509	WITHOUT_CLASSIFICATION	5.712470849136241E-6	IMPLEMENTATION
// attempt to decriticalize all if we're the critical thread	WITHOUT_CLASSIFICATION	0.9999205642335038	WITHOUT_CLASSIFICATION	7.943576649620166E-5	IMPLEMENTATION
// not valid for "dead" state	WITHOUT_CLASSIFICATION	0.9996012514011713	WITHOUT_CLASSIFICATION	3.9874859882862654E-4	IMPLEMENTATION
// If the killee thread is the same as the killer thread, just die	WITHOUT_CLASSIFICATION	0.9999987221672608	WITHOUT_CLASSIFICATION	1.2778327391610465E-6	IMPLEMENTATION
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999629281331298	WITHOUT_CLASSIFICATION	3.7071866870218475E-5	IMPLEMENTATION
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999629281331298	WITHOUT_CLASSIFICATION	3.7071866870218475E-5	IMPLEMENTATION
// ignore; I don't like doing it, but it seems like we // really just need to make all channels non-blocking by // default and use select when implementing blocking ops, // so if this remains set non-blocking, perhaps it's not // such a big deal...	WITHOUT_CLASSIFICATION	0.9975775852407749	WITHOUT_CLASSIFICATION	0.0024224147592250907	IMPLEMENTATION
// can't select, just have to do a blocking call	WITHOUT_CLASSIFICATION	0.9999799179764132	WITHOUT_CLASSIFICATION	2.0082023586875727E-5	IMPLEMENTATION
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9998886869565273	WITHOUT_CLASSIFICATION	1.1131304347258709E-4	IMPLEMENTATION
// Create Constants class	WITHOUT_CLASSIFICATION	0.9999912175696359	WITHOUT_CLASSIFICATION	8.782430364073608E-6	IMPLEMENTATION
// Create constants for open flags	WITHOUT_CLASSIFICATION	0.9999976329491965	WITHOUT_CLASSIFICATION	2.367050803521479E-6	IMPLEMENTATION
// Strip off the O_ prefix, so they become File::RDONLY, and so on	WITHOUT_CLASSIFICATION	0.9999815195300602	WITHOUT_CLASSIFICATION	1.8480469939759686E-5	IMPLEMENTATION
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999967309262878	WITHOUT_CLASSIFICATION	3.2690737122354384E-6	IMPLEMENTATION
// File::Constants module is included in IO.	WITHOUT_CLASSIFICATION	0.9999904855183274	WITHOUT_CLASSIFICATION	9.514481672716999E-6	IMPLEMENTATION
// Make sure any existing lock is released before we try and close the file	WITHOUT_CLASSIFICATION	0.9999988539731799	WITHOUT_CLASSIFICATION	1.1460268200582778E-6	IMPLEMENTATION
// null channel always succeeds for all locking operations	WITHOUT_CLASSIFICATION	0.9999170780353372	WITHOUT_CLASSIFICATION	8.292196466266652E-5	IMPLEMENTATION
// Paths which end in "/" or "\\" must be stripped off.	WITHOUT_CLASSIFICATION	0.9999762721954615	WITHOUT_CLASSIFICATION	2.3727804538612887E-5	IMPLEMENTATION
// Special case for handling ACCMODE, since constantine will generate // an invalid value if it is not defined by the platform.	WITHOUT_CLASSIFICATION	0.9999962169040056	WITHOUT_CLASSIFICATION	3.783095994458058E-6	IMPLEMENTATION
// Return false here	WITHOUT_CLASSIFICATION	0.9998854048052772	WITHOUT_CLASSIFICATION	1.145951947227733E-4	IMPLEMENTATION
// Return false here	WITHOUT_CLASSIFICATION	0.9998854048052772	WITHOUT_CLASSIFICATION	1.145951947227733E-4	IMPLEMENTATION
// We're not actually a real file, so we can't flock	WITHOUT_CLASSIFICATION	0.9984651144322425	WITHOUT_CLASSIFICATION	0.0015348855677574228	IMPLEMENTATION
// Should we do anything?	WITHOUT_CLASSIFICATION	0.9999451997320172	WITHOUT_CLASSIFICATION	5.480026798279481E-5	IMPLEMENTATION
/* File class methods */	WITHOUT_CLASSIFICATION	0.9999983194873306	WITHOUT_CLASSIFICATION	1.6805126692976958E-6	IMPLEMENTATION
// MRI-compatible basename handling for windows drive letter paths	WITHOUT_CLASSIFICATION	0.9999504359954166	WITHOUT_CLASSIFICATION	4.956400458348461E-5	IMPLEMENTATION
// strip c: away from relative-pathed name	WITHOUT_CLASSIFICATION	0.9999234807397229	WITHOUT_CLASSIFICATION	7.651926027712263E-5	IMPLEMENTATION
// C:\ is returned unchanged	WITHOUT_CLASSIFICATION	0.9999863102668443	WITHOUT_CLASSIFICATION	1.3689733155653303E-5	IMPLEMENTATION
// -1 no match; 0 it is dot file not extension	WITHOUT_CLASSIFICATION	0.9987257124358867	WITHOUT_CLASSIFICATION	0.001274287564113206	IMPLEMENTATION
// trim trailing slashes	WITHOUT_CLASSIFICATION	0.9999420805739169	WITHOUT_CLASSIFICATION	5.791942608318507E-5	IMPLEMENTATION
// Dot is not at beginning and not at end of filename. 	WITHOUT_CLASSIFICATION	0.9980404369629363	WITHOUT_CLASSIFICATION	0.0019595630370637476	IMPLEMENTATION
// Handle ~user paths 	WITHOUT_CLASSIFICATION	0.9999480538740975	WITHOUT_CLASSIFICATION	5.194612590247924E-5	IMPLEMENTATION
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9998886869565273	WITHOUT_CLASSIFICATION	1.1131304347258709E-4	IMPLEMENTATION
// Include additional path separator // (so that dirname of "C:\file.txt" is  "C:\", not "C:")	WITHOUT_CLASSIFICATION	0.9956573424847893	WITHOUT_CLASSIFICATION	0.004342657515210644	IMPLEMENTATION
// FNFException can be thrown in both cases, when the file // is not found, or when permission is denied.	WITHOUT_CLASSIFICATION	0.9998821929108006	WITHOUT_CLASSIFICATION	1.1780708919937928E-4	IMPLEMENTATION
// No directory delimeter.  Rest of string is username	WITHOUT_CLASSIFICATION	0.9999999618453349	WITHOUT_CLASSIFICATION	3.815466510122799E-8	IMPLEMENTATION
// If there's a second argument, it's the path to which the first  // argument is relative.	WITHOUT_CLASSIFICATION	0.9999265686177073	WITHOUT_CLASSIFICATION	7.343138229265749E-5	IMPLEMENTATION
// Handle ~user paths.	WITHOUT_CLASSIFICATION	0.9999406548059074	WITHOUT_CLASSIFICATION	5.9345194092558515E-5	IMPLEMENTATION
// If there's no second argument, simply use the working directory  // of the runtime.	WITHOUT_CLASSIFICATION	0.9999582113519592	WITHOUT_CLASSIFICATION	4.178864804086876E-5	IMPLEMENTATION
// Find out which string to check.	WITHOUT_CLASSIFICATION	0.9999984131065967	WITHOUT_CLASSIFICATION	1.5868934032934964E-6	IMPLEMENTATION
// Single '~' as whole path to expand	WITHOUT_CLASSIFICATION	0.9999473353337959	WITHOUT_CLASSIFICATION	5.266466620404575E-5	IMPLEMENTATION
// Count number of extra slashes in the beginning of the string.	WITHOUT_CLASSIFICATION	0.9999911941427062	WITHOUT_CLASSIFICATION	8.805857293713342E-6	IMPLEMENTATION
// '~user/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999616132982662	WITHOUT_CLASSIFICATION	3.8386701733844205E-5	IMPLEMENTATION
// '~/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999754127306253	WITHOUT_CLASSIFICATION	2.4587269374703347E-5	IMPLEMENTATION
// Prepare a string with the same number of redundant slashes so that  // we easily can prepend it to the result.	WITHOUT_CLASSIFICATION	0.9999939825241764	WITHOUT_CLASSIFICATION	6.017475823538025E-6	IMPLEMENTATION
// If there are N slashes, then we want N-1.	WITHOUT_CLASSIFICATION	0.9999735779702543	WITHOUT_CLASSIFICATION	2.642202974565465E-5	IMPLEMENTATION
// no canonical path yet or length is zero, and we have a / followed by a dot...	WITHOUT_CLASSIFICATION	0.9999700100966096	WITHOUT_CLASSIFICATION	2.9989903390445292E-5	IMPLEMENTATION
// we don't have another slash after this, so replace /. with /	WITHOUT_CLASSIFICATION	0.9997312949216132	WITHOUT_CLASSIFICATION	2.687050783868936E-4	IMPLEMENTATION
// we do have another slash; omit both / and . (JRUBY-1606)	WITHOUT_CLASSIFICATION	0.9999685127475071	WITHOUT_CLASSIFICATION	3.148725249286988E-5	IMPLEMENTATION
// do nothing, we should not delete the drive letter	WITHOUT_CLASSIFICATION	0.9925194953761353	WITHOUT_CLASSIFICATION	0.007480504623864647	IMPLEMENTATION
/* rb: check_modifiable */	WITHOUT_CLASSIFICATION	0.9999883188349251	WITHOUT_CLASSIFICATION	1.1681165074982326E-5	IMPLEMENTATION
/* rb: readable */	WITHOUT_CLASSIFICATION	0.9999588207871599	WITHOUT_CLASSIFICATION	4.11792128400662E-5	IMPLEMENTATION
// rename is successful	WITHOUT_CLASSIFICATION	0.999977597594181	WITHOUT_CLASSIFICATION	2.240240581895867E-5	IMPLEMENTATION
// rename via Java API call wasn't successful, let's try some tricks, similar to MRI 	WITHOUT_CLASSIFICATION	0.9999621052930063	WITHOUT_CLASSIFICATION	3.7894706993713505E-5	IMPLEMENTATION
// try to rename one more time	WITHOUT_CLASSIFICATION	0.9999342899006348	WITHOUT_CLASSIFICATION	6.5710099365163E-5	IMPLEMENTATION
// Can we produce IOError which bypasses a close?	WITHOUT_CLASSIFICATION	0.9998092171956802	WITHOUT_CLASSIFICATION	1.9078280431971802E-4	IMPLEMENTATION
// Fast path since JNA stat is about 10x slower than this	WITHOUT_CLASSIFICATION	0.999968880358311	WITHOUT_CLASSIFICATION	3.111964168904231E-5	IMPLEMENTATION
// RubyContinuation	WITHOUT_CLASSIFICATION	0.9996200707317198	WITHOUT_CLASSIFICATION	3.7992926828032465E-4	IMPLEMENTATION
/*     *  Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq)     *  it doesn't initialize ifNone field     */	WITHOUT_CLASSIFICATION	0.9999997588229618	WITHOUT_CLASSIFICATION	2.4117703818026645E-7	IMPLEMENTATION
// 16 ?	WITHOUT_CLASSIFICATION	0.9999963251773005	WITHOUT_CLASSIFICATION	3.6748226993917924E-6	IMPLEMENTATION
// generation count for O(1) clears	WITHOUT_CLASSIFICATION	0.9999674987271664	WITHOUT_CLASSIFICATION	3.250127283352994E-5	IMPLEMENTATION
// size + 1;	WITHOUT_CLASSIFICATION	0.9997969573345272	WITHOUT_CLASSIFICATION	2.0304266547271996E-4	IMPLEMENTATION
// suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen	WITHOUT_CLASSIFICATION	0.9997514543346062	WITHOUT_CLASSIFICATION	2.4854566539380605E-4	IMPLEMENTATION
// ------------------------------	WITHOUT_CLASSIFICATION	0.9999006058161483	WITHOUT_CLASSIFICATION	9.939418385170933E-5	IMPLEMENTATION
// ------------------------------	WITHOUT_CLASSIFICATION	0.9999006058161483	WITHOUT_CLASSIFICATION	9.939418385170933E-5	IMPLEMENTATION
// put implementation	WITHOUT_CLASSIFICATION	0.9988761065942403	WITHOUT_CLASSIFICATION	0.0011238934057597378	IMPLEMENTATION
// get implementation	WITHOUT_CLASSIFICATION	0.9997174381626642	WITHOUT_CLASSIFICATION	2.8256183733570795E-4	IMPLEMENTATION
// specialized for value	WITHOUT_CLASSIFICATION	0.9999921965253787	WITHOUT_CLASSIFICATION	7.803474621206482E-6	IMPLEMENTATION
// delete implementation	WITHOUT_CLASSIFICATION	0.9990276455817002	WITHOUT_CLASSIFICATION	9.723544182997892E-4	IMPLEMENTATION
// n.b. we need to recompute the hash in case the key object was modified	WITHOUT_CLASSIFICATION	0.9999457405244062	WITHOUT_CLASSIFICATION	5.425947559374185E-5	IMPLEMENTATION
/* ============================     * End of hash internals     * ============================     */	WITHOUT_CLASSIFICATION	0.9999964111686444	WITHOUT_CLASSIFICATION	3.5888313555397444E-6	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================     */	WITHOUT_CLASSIFICATION	0.9999975756351955	WITHOUT_CLASSIFICATION	2.4243648043345444E-6	IMPLEMENTATION
// update the hash value	WITHOUT_CLASSIFICATION	0.9999921531913766	WITHOUT_CLASSIFICATION	7.846808623449798E-6	IMPLEMENTATION
// other hash does not contain key	WITHOUT_CLASSIFICATION	0.9971051287736792	WITHOUT_CLASSIFICATION	0.0028948712263208395	IMPLEMENTATION
// rb_yield_values(2,...) equivalent	WITHOUT_CLASSIFICATION	0.9997658941405667	WITHOUT_CLASSIFICATION	2.3410585943317257E-4	IMPLEMENTATION
// Satisfy java.util.Set interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999645249414609	WITHOUT_CLASSIFICATION	3.5475058539056674E-5	IMPLEMENTATION
// remain where we are	WITHOUT_CLASSIFICATION	0.9999323318376095	WITHOUT_CLASSIFICATION	6.766816239047924E-5	IMPLEMENTATION
// We use file test since it is faster than a stat; also euid == uid in Java always	WITHOUT_CLASSIFICATION	0.9999968946028611	WITHOUT_CLASSIFICATION	3.10539713882256E-6	IMPLEMENTATION
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999718341740834	WITHOUT_CLASSIFICATION	2.816582591648708E-5	IMPLEMENTATION
// once hasNext has been called, we commit to next() returning // the entry it found, even if it were subsequently deleted	WITHOUT_CLASSIFICATION	0.9867149323632409	WITHOUT_CLASSIFICATION	0.013285067636758978	IMPLEMENTATION
// Not exposed by filetest, but so similiar in nature that it is stored here	WITHOUT_CLASSIFICATION	0.9999877576254748	WITHOUT_CLASSIFICATION	1.2242374525149882E-5	IMPLEMENTATION
// We do both writable and writable_real through the same method because // in our java process effective and real userid will always be the same.	WITHOUT_CLASSIFICATION	0.9999995948834278	WITHOUT_CLASSIFICATION	4.0511657212854585E-7	IMPLEMENTATION
// first try as directory	WITHOUT_CLASSIFICATION	0.9999978676259612	WITHOUT_CLASSIFICATION	2.1323740387951324E-6	IMPLEMENTATION
// next as regular file	WITHOUT_CLASSIFICATION	0.9999408371748538	WITHOUT_CLASSIFICATION	5.9162825146112496E-5	IMPLEMENTATION
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9996321516419233	WITHOUT_CLASSIFICATION	3.6784835807667155E-4	IMPLEMENTATION
// NIO-based	WITHOUT_CLASSIFICATION	0.9996200707317198	WITHOUT_CLASSIFICATION	3.7992926828032465E-4	IMPLEMENTATION
// NIO-based	WITHOUT_CLASSIFICATION	0.9996200707317198	WITHOUT_CLASSIFICATION	3.7992926828032465E-4	IMPLEMENTATION
// Stream-based	WITHOUT_CLASSIFICATION	0.9996200707317198	WITHOUT_CLASSIFICATION	3.7992926828032465E-4	IMPLEMENTATION
// special constructor that accepts stream, not channel	WITHOUT_CLASSIFICATION	0.9953549533663938	WITHOUT_CLASSIFICATION	0.004645046633606228	IMPLEMENTATION
/*     * We use FILE versus IO to match T_FILE in MRI.     */	WITHOUT_CLASSIFICATION	0.9999994378417935	WITHOUT_CLASSIFICATION	5.621582065921068E-7	IMPLEMENTATION
// Constants for seek	WITHOUT_CLASSIFICATION	0.9999732816022944	WITHOUT_CLASSIFICATION	2.6718397705674234E-5	IMPLEMENTATION
// confirm we're not reopening self's channel	WITHOUT_CLASSIFICATION	0.9983337197810316	WITHOUT_CLASSIFICATION	0.0016662802189683374	IMPLEMENTATION
// check if we're a stdio IO, and ensure we're not badly mutilated	WITHOUT_CLASSIFICATION	0.9997295536017325	WITHOUT_CLASSIFICATION	2.704463982673763E-4	IMPLEMENTATION
// dup2 new fd into self to preserve fileno and references to it	WITHOUT_CLASSIFICATION	0.9999150464718601	WITHOUT_CLASSIFICATION	8.495352813986017E-5	IMPLEMENTATION
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999940343803926	WITHOUT_CLASSIFICATION	5.965619607364666E-6	IMPLEMENTATION
// re-register the descriptor	WITHOUT_CLASSIFICATION	0.9999404847887718	WITHOUT_CLASSIFICATION	5.9515211228143505E-5	IMPLEMENTATION
// since we're not actually duping the incoming channel into our handler, we need to // copy the original sync behavior from the other handler	WITHOUT_CLASSIFICATION	0.999920127700829	WITHOUT_CLASSIFICATION	7.987229917102228E-5	IMPLEMENTATION
// re-register	WITHOUT_CLASSIFICATION	0.9996200707317198	WITHOUT_CLASSIFICATION	3.7992926828032465E-4	IMPLEMENTATION
// A potentially previously close IO is being 'reopened'.	WITHOUT_CLASSIFICATION	0.9999922623687206	WITHOUT_CLASSIFICATION	7.737631279361849E-6	IMPLEMENTATION
/*     * Ensure that separator is valid otherwise give it the default paragraph separator.     */	WITHOUT_CLASSIFICATION	0.9999895531647928	WITHOUT_CLASSIFICATION	1.0446835207298016E-5	IMPLEMENTATION
// loop until we see the nth separator char	WITHOUT_CLASSIFICATION	0.9999979666775378	WITHOUT_CLASSIFICATION	2.0333224622387757E-6	IMPLEMENTATION
// if we hit EOF or reached limit then we're done	WITHOUT_CLASSIFICATION	0.9999832262960562	WITHOUT_CLASSIFICATION	1.6773703943742253E-5	IMPLEMENTATION
// this is for a range check, near as I can tell	WITHOUT_CLASSIFICATION	0.9999628029158286	WITHOUT_CLASSIFICATION	3.71970841714491E-5	IMPLEMENTATION
// IO class methods.	WITHOUT_CLASSIFICATION	0.9998783576350965	WITHOUT_CLASSIFICATION	1.2164236490349716E-4	IMPLEMENTATION
// use original modes	WITHOUT_CLASSIFICATION	0.9997782702103054	WITHOUT_CLASSIFICATION	2.217297896944918E-4	IMPLEMENTATION
// See if we already have this descriptor open. // If so then we can mostly share the handler (keep open // file, but possibly change the mode).	WITHOUT_CLASSIFICATION	0.9999997101444423	WITHOUT_CLASSIFICATION	2.898555576796581E-7	IMPLEMENTATION
// redundant, done above as well	WITHOUT_CLASSIFICATION	0.9999539161221914	WITHOUT_CLASSIFICATION	4.60838778084823E-5	IMPLEMENTATION
// MRI behavior: swallow StandardErorrs	WITHOUT_CLASSIFICATION	0.99990217877367	WITHOUT_CLASSIFICATION	9.782122632999629E-5	IMPLEMENTATION
// -1 == don't set permissions	WITHOUT_CLASSIFICATION	0.9999640522267459	WITHOUT_CLASSIFICATION	3.5947773254097E-5	IMPLEMENTATION
// isRetained=true	WITHOUT_CLASSIFICATION	0.9996200707317198	WITHOUT_CLASSIFICATION	3.7992926828032465E-4	IMPLEMENTATION
// This appears to be some windows-only mode.  On a java platform this is a no-op	WITHOUT_CLASSIFICATION	0.9999767026671579	WITHOUT_CLASSIFICATION	2.3297332842078657E-5	IMPLEMENTATION
// if not sync, we switch to write buffered mode	WITHOUT_CLASSIFICATION	0.9992886241913059	WITHOUT_CLASSIFICATION	7.113758086940325E-4	IMPLEMENTATION
/*     * Throw bad file descriptor is we can not read on supplied descriptor.     */	WITHOUT_CLASSIFICATION	0.9997294816209238	WITHOUT_CLASSIFICATION	2.7051837907617684E-4	IMPLEMENTATION
//Everything written	WITHOUT_CLASSIFICATION	0.998765183966102	WITHOUT_CLASSIFICATION	0.0012348160338978747	IMPLEMENTATION
//            return len - n;	WITHOUT_CLASSIFICATION	0.9999650239153051	WITHOUT_CLASSIFICATION	3.497608469488172E-5	IMPLEMENTATION
// Claims conversion is done via 'to_s' in docs.	WITHOUT_CLASSIFICATION	0.9999975499984516	WITHOUT_CLASSIFICATION	2.4500015484655767E-6	IMPLEMENTATION
// Of course this isn't particularly useful.	WITHOUT_CLASSIFICATION	0.999909828227042	WITHOUT_CLASSIFICATION	9.017177295805364E-5	IMPLEMENTATION
// Must be back on first line on rewind.	WITHOUT_CLASSIFICATION	0.999785456718173	WITHOUT_CLASSIFICATION	2.1454328182703362E-4	IMPLEMENTATION
// Register the new descriptor	WITHOUT_CLASSIFICATION	0.9997762705566947	WITHOUT_CLASSIFICATION	2.237294433052727E-4	IMPLEMENTATION
// cleanup, raising errors if any	WITHOUT_CLASSIFICATION	0.9999523048402225	WITHOUT_CLASSIFICATION	4.769515977762247E-5	IMPLEMENTATION
// hmmmm	WITHOUT_CLASSIFICATION	0.9999914754825183	WITHOUT_CLASSIFICATION	8.524517481776458E-6	IMPLEMENTATION
// I believe Ruby bails out with a "bug" if closing fails	WITHOUT_CLASSIFICATION	0.9999254758725328	WITHOUT_CLASSIFICATION	7.452412746720219E-5	IMPLEMENTATION
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec. // And why the hell does webrick pass this in as a first argument!!!!!	WITHOUT_CLASSIFICATION	0.9999999013154591	WITHOUT_CLASSIFICATION	9.868454087826163E-8	IMPLEMENTATION
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec.	WITHOUT_CLASSIFICATION	0.9999992907859994	WITHOUT_CLASSIFICATION	7.092140005791655E-7	IMPLEMENTATION
// Length to read	WITHOUT_CLASSIFICATION	0.999924313195593	WITHOUT_CLASSIFICATION	7.568680440697311E-5	IMPLEMENTATION
// String/Buffer to read it into	WITHOUT_CLASSIFICATION	0.9999819157176744	WITHOUT_CLASSIFICATION	1.8084282325574664E-5	IMPLEMENTATION
// cryptic for the uninitiated...	WITHOUT_CLASSIFICATION	0.9999526684014838	WITHOUT_CLASSIFICATION	4.733159851623903E-5	IMPLEMENTATION
// select until read is ready	WITHOUT_CLASSIFICATION	0.9999844105956276	WITHOUT_CLASSIFICATION	1.558940437239722E-5	IMPLEMENTATION
//        ByteList buffer = null;	WITHOUT_CLASSIFICATION	0.9998836465972518	WITHOUT_CLASSIFICATION	1.1635340274820644E-4	IMPLEMENTATION
//            buffer = str.getByteList();	WITHOUT_CLASSIFICATION	0.9998741166690355	WITHOUT_CLASSIFICATION	1.2588333096456194E-4	IMPLEMENTATION
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999887007598297	WITHOUT_CLASSIFICATION	1.1299240170370324E-5	IMPLEMENTATION
/* rb: writable */	WITHOUT_CLASSIFICATION	0.999930388944247	WITHOUT_CLASSIFICATION	6.961105575302719E-5	IMPLEMENTATION
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999887007598297	WITHOUT_CLASSIFICATION	1.1299240170370324E-5	IMPLEMENTATION
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999976531854281	WITHOUT_CLASSIFICATION	2.346814571813513E-6	IMPLEMENTATION
// TODO: read into buffer using all the fread logic //        int read = openFile.getMainStream().fread(buffer);	WITHOUT_CLASSIFICATION	0.8153542364110701	WITHOUT_CLASSIFICATION	0.18464576358892995	IMPLEMENTATION
// truncate buffer string to zero, if provided	WITHOUT_CLASSIFICATION	0.9999997145735432	WITHOUT_CLASSIFICATION	2.8542645678084065E-7	IMPLEMENTATION
// TODO: READ_CHECK from MRI	WITHOUT_CLASSIFICATION	0.8011079882145694	WITHOUT_CLASSIFICATION	0.19889201178543053	IMPLEMENTATION
/* class methods for IO */	WITHOUT_CLASSIFICATION	0.9999979371484592	WITHOUT_CLASSIFICATION	2.062851540796523E-6	IMPLEMENTATION
// save blocking state	WITHOUT_CLASSIFICATION	0.9999827684172867	WITHOUT_CLASSIFICATION	1.7231582713205452E-5	IMPLEMENTATION
// write	WITHOUT_CLASSIFICATION	0.9999933700579315	WITHOUT_CLASSIFICATION	6.629942068342116E-6	IMPLEMENTATION
// Java's select doesn't do anything about this, so we leave it be.	WITHOUT_CLASSIFICATION	0.9998249414884499	WITHOUT_CLASSIFICATION	1.750585115499655E-4	IMPLEMENTATION
// make all sockets blocking as configured again // close unregisters all channels, so we can safely reset blocking modes	WITHOUT_CLASSIFICATION	0.9999704746285195	WITHOUT_CLASSIFICATION	2.952537148040057E-5	IMPLEMENTATION
// FIXME: process options	WITHOUT_CLASSIFICATION	0.992387375947872	WITHOUT_CLASSIFICATION	0.007612624052128097	IMPLEMENTATION
// Enebo: annotation processing forced me to do pangea method here...	WITHOUT_CLASSIFICATION	0.9997750323843777	WITHOUT_CLASSIFICATION	2.2496761562233747E-4	IMPLEMENTATION
// NIO based pipe	WITHOUT_CLASSIFICATION	0.9996579478523139	WITHOUT_CLASSIFICATION	3.4205214768618107E-4	IMPLEMENTATION
// not using remove(Object) here to avoid the equals() call	WITHOUT_CLASSIFICATION	0.987436831437622	WITHOUT_CLASSIFICATION	0.012563168562378057	IMPLEMENTATION
// raise will also wake the thread from selection	WITHOUT_CLASSIFICATION	0.99998999235273	WITHOUT_CLASSIFICATION	1.000764727006625E-5	IMPLEMENTATION
/* may need to handle ENC_CODERANGE_BROKEN */	WITHOUT_CLASSIFICATION	0.9988133281207674	WITHOUT_CLASSIFICATION	0.0011866718792326264	IMPLEMENTATION
// TODO: rb_usascii_str_new2	WITHOUT_CLASSIFICATION	0.5835541907253433	IMPLEMENTATION	0.4164458092746567	WITHOUT_CLASSIFICATION
// If we know what method was being called, strip everything // before the call. This hides the JRuby and reflection internals.	WITHOUT_CLASSIFICATION	0.9745856177690158	WITHOUT_CLASSIFICATION	0.025414382230984217	IMPLEMENTATION
// The class of this object	WITHOUT_CLASSIFICATION	0.9999893795339145	WITHOUT_CLASSIFICATION	1.062046608543989E-5	IMPLEMENTATION
// zeroed by jvm	WITHOUT_CLASSIFICATION	0.9998203140348662	WITHOUT_CLASSIFICATION	1.7968596513379283E-4	IMPLEMENTATION
//objectClass.defineAnnotatedMethods(BasicObjectMethods.class);	WITHOUT_CLASSIFICATION	0.9996611722072354	WITHOUT_CLASSIFICATION	3.388277927646339E-4	IMPLEMENTATION
// JRUBY-4113: callers should not call setTaint on immediate objects	WITHOUT_CLASSIFICATION	0.9405636325481584	WITHOUT_CLASSIFICATION	0.05943636745184147	IMPLEMENTATION
// rb_class_boot	WITHOUT_CLASSIFICATION	0.9996200707317198	WITHOUT_CLASSIFICATION	3.7992926828032465E-4	IMPLEMENTATION
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999883188349251	WITHOUT_CLASSIFICATION	1.1681165074982326E-5	IMPLEMENTATION
// 1.9 rb_check_to_integer	WITHOUT_CLASSIFICATION	0.9999362290526616	WITHOUT_CLASSIFICATION	6.377094733850302E-5	IMPLEMENTATION
// for interface impls	WITHOUT_CLASSIFICATION	0.9999908867508825	WITHOUT_CLASSIFICATION	9.113249117504317E-6	IMPLEMENTATION
// We're cloning ourselves, so we know the result should be a RubyObject	WITHOUT_CLASSIFICATION	0.9997854433971655	WITHOUT_CLASSIFICATION	2.145566028345232E-4	IMPLEMENTATION
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.999993625016002	WITHOUT_CLASSIFICATION	6.37498399801891E-6	IMPLEMENTATION
// can't use -v and stdin	WITHOUT_CLASSIFICATION	0.9999052261830763	WITHOUT_CLASSIFICATION	9.477381692365738E-5	IMPLEMENTATION
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999119813077298	WITHOUT_CLASSIFICATION	8.801869227009678E-5	IMPLEMENTATION
// Equivalent of Data_Get_Struct // This will first check that the object in question is actually a T_DATA equivalent.	WITHOUT_CLASSIFICATION	0.9999972992833209	WITHOUT_CLASSIFICATION	2.7007166790462546E-6	IMPLEMENTATION
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999012238864379	WITHOUT_CLASSIFICATION	9.877611356210128E-5	IMPLEMENTATION
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999012238864379	WITHOUT_CLASSIFICATION	9.877611356210128E-5	IMPLEMENTATION
// // INSTANCE VARIABLE API METHODS //	WITHOUT_CLASSIFICATION	0.999929998164427	WITHOUT_CLASSIFICATION	7.000183557303105E-5	IMPLEMENTATION
// Struct methods	WITHOUT_CLASSIFICATION	0.9995588482670388	WITHOUT_CLASSIFICATION	4.411517329612236E-4	IMPLEMENTATION
//runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);	WITHOUT_CLASSIFICATION	0.9995224872158558	WITHOUT_CLASSIFICATION	4.775127841442686E-4	IMPLEMENTATION
// define access methods.	WITHOUT_CLASSIFICATION	0.9999763576204957	WITHOUT_CLASSIFICATION	2.364237950421512E-5	IMPLEMENTATION
// if we are storing a name as well, index is one too high for values	WITHOUT_CLASSIFICATION	0.9999999692365484	WITHOUT_CLASSIFICATION	3.076345154416859E-8	IMPLEMENTATION
// Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999975357393696	WITHOUT_CLASSIFICATION	2.4642606304770286E-6	IMPLEMENTATION
// For binding purposes on the newly created struct types	WITHOUT_CLASSIFICATION	0.9997694331727495	WITHOUT_CLASSIFICATION	2.3056682725054172E-4	IMPLEMENTATION
// OBJ_INFECT        	WITHOUT_CLASSIFICATION	0.9999362290526616	WITHOUT_CLASSIFICATION	6.377094733850302E-5	IMPLEMENTATION
// These call* assume ThreadContext = receiver.getRuntime().getCurrentContext()	WITHOUT_CLASSIFICATION	0.9999175107270172	WITHOUT_CLASSIFICATION	8.248927298276095E-5	IMPLEMENTATION
// Execute iterateMethod again.	WITHOUT_CLASSIFICATION	0.9999440748175197	WITHOUT_CLASSIFICATION	5.592518248017962E-5	IMPLEMENTATION
/*     * @param nv number of times to cycle or -1 to cycle indefinitely     */	WITHOUT_CLASSIFICATION	0.9999994474666938	WITHOUT_CLASSIFICATION	5.52533306201278E-7	IMPLEMENTATION
// Atomic ?	WITHOUT_CLASSIFICATION	0.9998340333452923	WITHOUT_CLASSIFICATION	1.6596665470768382E-4	IMPLEMENTATION
// Atomic ?	WITHOUT_CLASSIFICATION	0.9998340333452923	WITHOUT_CLASSIFICATION	1.6596665470768382E-4	IMPLEMENTATION
// MUST NOT be used across threads	WITHOUT_CLASSIFICATION	0.9999786345125117	WITHOUT_CLASSIFICATION	2.136548748836705E-5	IMPLEMENTATION
// superClass may be null.	WITHOUT_CLASSIFICATION	0.9999753669208231	WITHOUT_CLASSIFICATION	2.4633079176837453E-5	IMPLEMENTATION
// Containing class...The parent of Object is null. Object should always be last in chain.	WITHOUT_CLASSIFICATION	0.9999989522176216	WITHOUT_CLASSIFICATION	1.0477823783825414E-6	IMPLEMENTATION
// ClassId is the name of the class/module sans where it is located. // If it is null, then it an anonymous class.	WITHOUT_CLASSIFICATION	0.9999905542404046	WITHOUT_CLASSIFICATION	9.445759595405406E-6	IMPLEMENTATION
// ClassProviders return Java class/module (in #defineOrGetClassUnder and // #defineOrGetModuleUnder) when class/module is opened using colon syntax. 	WITHOUT_CLASSIFICATION	0.999995966267346	WITHOUT_CLASSIFICATION	4.033732654030973E-6	IMPLEMENTATION
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999964717721456	WITHOUT_CLASSIFICATION	3.528227854355346E-6	IMPLEMENTATION
// Make sure the module we include does not already exist	WITHOUT_CLASSIFICATION	0.9949386870396025	WITHOUT_CLASSIFICATION	0.005061312960397424	IMPLEMENTATION
// MRI checks all types first:	WITHOUT_CLASSIFICATION	0.9999116810911718	WITHOUT_CLASSIFICATION	8.831890882821736E-5	IMPLEMENTATION
// we need full traces, use default (slow) populator	WITHOUT_CLASSIFICATION	0.9996256203070711	WITHOUT_CLASSIFICATION	3.7437969292884157E-4	IMPLEMENTATION
// module/singleton methods are all defined public	WITHOUT_CLASSIFICATION	0.9999941553167554	WITHOUT_CLASSIFICATION	5.84468324459573E-6	IMPLEMENTATION
// See if module is in chain...Cannot match against itself so start at superClass.	WITHOUT_CLASSIFICATION	0.9999998416838866	WITHOUT_CLASSIFICATION	1.5831611332914783E-7	IMPLEMENTATION
// We can safely reference methods here instead of doing getMethods() since if we // are adding we are not using a IncludedModuleWrapper.	WITHOUT_CLASSIFICATION	0.9999025495722547	WITHOUT_CLASSIFICATION	9.745042774523325E-5	IMPLEMENTATION
// we grab serial number first; the worst that will happen is we cache a later // update with an earlier serial number, which would just flush anyway	WITHOUT_CLASSIFICATION	0.9999843774086554	WITHOUT_CLASSIFICATION	1.5622591344511272E-5	IMPLEMENTATION
// update all hierarchies into which this module has been included	WITHOUT_CLASSIFICATION	0.9999442538338379	WITHOUT_CLASSIFICATION	5.574616616215958E-5	IMPLEMENTATION
// This method is intended only for defining new classes in Ruby code, // so it uses the allocator of the specified superclass or default to // the Object allocator. It should NOT be used to define classes that require a native allocator.	WITHOUT_CLASSIFICATION	0.9999999269559808	WITHOUT_CLASSIFICATION	7.304401911795343E-8	IMPLEMENTATION
// need to skip IncludedModuleWrappers	WITHOUT_CLASSIFICATION	0.9997279622720615	WITHOUT_CLASSIFICATION	2.720377279385726E-4	IMPLEMENTATION
// superClazz = null;	WITHOUT_CLASSIFICATION	0.9999251534852187	WITHOUT_CLASSIFICATION	7.484651478134094E-5	IMPLEMENTATION
// reopen a java class	WITHOUT_CLASSIFICATION	0.9999848128642905	WITHOUT_CLASSIFICATION	1.5187135709605404E-5	IMPLEMENTATION
// This method is intended only for defining new modules in Ruby code	WITHOUT_CLASSIFICATION	0.9999954135772544	WITHOUT_CLASSIFICATION	4.5864227455928465E-6	IMPLEMENTATION
// reopen a java module	WITHOUT_CLASSIFICATION	0.9999532365500705	WITHOUT_CLASSIFICATION	4.6763449929410046E-5	IMPLEMENTATION
//FIXME warning	WITHOUT_CLASSIFICATION	0.9987097181259244	WITHOUT_CLASSIFICATION	0.0012902818740757112	IMPLEMENTATION
// FIXME warning	WITHOUT_CLASSIFICATION	0.9948864915546493	WITHOUT_CLASSIFICATION	0.005113508445350774	IMPLEMENTATION
// a normal block passed to define_method changes to do arity checking; make it a lambda	WITHOUT_CLASSIFICATION	0.9949379239643651	WITHOUT_CLASSIFICATION	0.005062076035634941	IMPLEMENTATION
// for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope	WITHOUT_CLASSIFICATION	0.9999969521835196	WITHOUT_CLASSIFICATION	3.0478164804317957E-6	IMPLEMENTATION
// just using required is broken...but no more broken than before zsuper refactoring	WITHOUT_CLASSIFICATION	0.9999186810639521	WITHOUT_CLASSIFICATION	8.131893604792707E-5	IMPLEMENTATION
// class and module bodies default to public, so make the block's visibility public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999952526248825	WITHOUT_CLASSIFICATION	4.747375117432798E-6	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999999085960548	WITHOUT_CLASSIFICATION	9.140394520604253E-8	IMPLEMENTATION
// MRI error message says Class, even though Module is ok 	WITHOUT_CLASSIFICATION	0.9997992500964622	WITHOUT_CLASSIFICATION	2.0074990353769238E-4	IMPLEMENTATION
// scan class hierarchy for module	WITHOUT_CLASSIFICATION	0.9999895205680204	WITHOUT_CLASSIFICATION	1.0479431979646345E-5	IMPLEMENTATION
/* Module class methods */	WITHOUT_CLASSIFICATION	0.9999948282514513	WITHOUT_CLASSIFICATION	5.171748548701817E-6	IMPLEMENTATION
// Note: we change current frames visibility here because the methods which call // this method are all "fast" (e.g. they do not created their own frame).	WITHOUT_CLASSIFICATION	0.9997612267045578	WITHOUT_CLASSIFICATION	2.3877329544224867E-4	IMPLEMENTATION
// next in hierarchy is an included version of the module we're attempting, // so we skip including it	WITHOUT_CLASSIFICATION	0.99999798769853	WITHOUT_CLASSIFICATION	2.012301470098072E-6	IMPLEMENTATION
// if we haven't encountered a real superclass, use the found module as the new inclusion point	WITHOUT_CLASSIFICATION	0.9999564670701122	WITHOUT_CLASSIFICATION	4.3532929887744024E-5	IMPLEMENTATION
// build a list of all modules to consider for inclusion	WITHOUT_CLASSIFICATION	0.9999829129443187	WITHOUT_CLASSIFICATION	1.7087055681320565E-5	IMPLEMENTATION
// if the insertion point is a class, update subclass lists	WITHOUT_CLASSIFICATION	0.999999188550902	WITHOUT_CLASSIFICATION	8.11449097941596E-7	IMPLEMENTATION
// if there's a non-null superclass, we're including into a normal class hierarchy; // update subclass relationships to avoid stale parent/child relationships	WITHOUT_CLASSIFICATION	0.9999964724587889	WITHOUT_CLASSIFICATION	3.5275412111101666E-6	IMPLEMENTATION
// ////////////////// CLASS VARIABLE RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999102357546382	WITHOUT_CLASSIFICATION	8.976424536173449E-5	IMPLEMENTATION
// ////////////////// CONSTANT RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999085828514661	WITHOUT_CLASSIFICATION	9.141714853394927E-5	IMPLEMENTATION
// Note: includes part of fix for JRUBY-1339	WITHOUT_CLASSIFICATION	0.999984964763452	WITHOUT_CLASSIFICATION	1.5035236547981585E-5	IMPLEMENTATION
// ////////////////// CLASS VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.999936384969808	WITHOUT_CLASSIFICATION	6.361503019204821E-5	IMPLEMENTATION
// Wrong Parameter ?	WITHOUT_CLASSIFICATION	0.9998383329655625	WITHOUT_CLASSIFICATION	1.616670344375585E-4	IMPLEMENTATION
// not actually called anywhere (all known uses call the fast version)	WITHOUT_CLASSIFICATION	0.9990228832238287	WITHOUT_CLASSIFICATION	9.771167761714195E-4	IMPLEMENTATION
// Not that is loaded loop around to resolve it next pass	WITHOUT_CLASSIFICATION	0.9996014530923624	WITHOUT_CLASSIFICATION	3.985469076376792E-4	IMPLEMENTATION
// if adding a module under a constant name, set that module's basename to the constant name	WITHOUT_CLASSIFICATION	0.9997534286191719	WITHOUT_CLASSIFICATION	2.4657138082804033E-4	IMPLEMENTATION
// Fix for JRUBY-1339 - search hierarchy for constant	WITHOUT_CLASSIFICATION	0.9996492278122449	WITHOUT_CLASSIFICATION	3.5077218775505283E-4	IMPLEMENTATION
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999893296709785	WITHOUT_CLASSIFICATION	1.067032902143863E-5	IMPLEMENTATION
// removes and returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999954015503771	WITHOUT_CLASSIFICATION	4.598449622875335E-6	IMPLEMENTATION
// we can't rename a file while it's open in windows	WITHOUT_CLASSIFICATION	0.9999922034952308	WITHOUT_CLASSIFICATION	7.796504769295772E-6	IMPLEMENTATION
//reopen	WITHOUT_CLASSIFICATION	0.9999709824961172	WITHOUT_CLASSIFICATION	2.9017503882815074E-5	IMPLEMENTATION
// ARGF methods	WITHOUT_CLASSIFICATION	0.9995588482670388	WITHOUT_CLASSIFICATION	4.411517329612236E-4	IMPLEMENTATION
//         data.currentFile.callMethod(context, "lineno=", line);	WITHOUT_CLASSIFICATION	0.9998841479571866	WITHOUT_CLASSIFICATION	1.158520428133233E-4	IMPLEMENTATION
// one optional, one required args	WITHOUT_CLASSIFICATION	0.9997370049649958	WITHOUT_CLASSIFICATION	2.629950350041164E-4	IMPLEMENTATION
// one optional and no required args	WITHOUT_CLASSIFICATION	0.9999007863723702	WITHOUT_CLASSIFICATION	9.921362762969209E-5	IMPLEMENTATION
// try to get errno value out of the class	WITHOUT_CLASSIFICATION	0.9999987358117844	WITHOUT_CLASSIFICATION	1.2641882155731502E-6	IMPLEMENTATION
// we got a valid errno value	WITHOUT_CLASSIFICATION	0.9999802963410036	WITHOUT_CLASSIFICATION	1.97036589963114E-5	IMPLEMENTATION
// Ensure we're not running on GCJ, since it's not supported and leads to weird errors	WITHOUT_CLASSIFICATION	0.9996761304914779	WITHOUT_CLASSIFICATION	3.2386950852218634E-4	IMPLEMENTATION
// print out as a nice Ruby backtrace	WITHOUT_CLASSIFICATION	0.9999925337666438	WITHOUT_CLASSIFICATION	7.4662333561773535E-6	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9998545929716477	WITHOUT_CLASSIFICATION	1.4540702835231264E-4	IMPLEMENTATION
// set thread context JRuby classloader here, for the main thread	WITHOUT_CLASSIFICATION	0.9998861656578307	WITHOUT_CLASSIFICATION	1.1383434216934374E-4	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999565386922938	WITHOUT_CLASSIFICATION	4.346130770609211E-5	IMPLEMENTATION
// no script to run, return success below	WITHOUT_CLASSIFICATION	0.9999912832810685	WITHOUT_CLASSIFICATION	8.716718931545087E-6	IMPLEMENTATION
// Skip /usr/bin/env if it's first	WITHOUT_CLASSIFICATION	0.9999058672390584	WITHOUT_CLASSIFICATION	9.41327609415442E-5	IMPLEMENTATION
// Skip any assignments if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.999998602882868	WITHOUT_CLASSIFICATION	1.3971171319598494E-6	IMPLEMENTATION
// Skip any commandline args if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999988048276861	WITHOUT_CLASSIFICATION	1.195172313887899E-6	IMPLEMENTATION
// ignore error	WITHOUT_CLASSIFICATION	0.9988836388488316	WITHOUT_CLASSIFICATION	0.0011163611511684473	IMPLEMENTATION
// ////////////////// COMMON CONSTANT / CVAR METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999793693802242	WITHOUT_CLASSIFICATION	2.063061977583142E-5	IMPLEMENTATION
// ////////////////// INTERNAL MODULE VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999352135425293	WITHOUT_CLASSIFICATION	6.47864574707012E-5	IMPLEMENTATION
// ////////////////// LOW-LEVEL CONSTANT INTERFACE //////////////// // // fetch/store/list constants for this module //	WITHOUT_CLASSIFICATION	0.9999681910548659	WITHOUT_CLASSIFICATION	3.1808945134038284E-5	IMPLEMENTATION
// odd	WITHOUT_CLASSIFICATION	0.9999915632451969	WITHOUT_CLASSIFICATION	8.43675480305516E-6	IMPLEMENTATION
// JRubyClient	WITHOUT_CLASSIFICATION	0.9996200707317198	WITHOUT_CLASSIFICATION	3.7992926828032465E-4	IMPLEMENTATION
/*     * x = mantissa * 2 ** exponent     *     * Where mantissa is in the range of [.5, 1)     *     */	WITHOUT_CLASSIFICATION	0.9999998605118599	WITHOUT_CLASSIFICATION	1.394881401411282E-7	IMPLEMENTATION
// Make mantissa same sign so we only have one code path.	WITHOUT_CLASSIFICATION	0.9999604339865102	WITHOUT_CLASSIFICATION	3.9566013489806325E-5	IMPLEMENTATION
// Increase value to hit lower range.	WITHOUT_CLASSIFICATION	0.9999823013094987	WITHOUT_CLASSIFICATION	1.7698690501302945E-5	IMPLEMENTATION
/*     * r = x * 2 ** y     */	WITHOUT_CLASSIFICATION	0.9999983504563218	WITHOUT_CLASSIFICATION	1.6495436781852085E-6	IMPLEMENTATION
/*  0! */	WITHOUT_CLASSIFICATION	0.9999981830610115	WITHOUT_CLASSIFICATION	1.8169389884978035E-6	IMPLEMENTATION
/*  1! */	WITHOUT_CLASSIFICATION	0.9999981830610115	WITHOUT_CLASSIFICATION	1.8169389884978035E-6	IMPLEMENTATION
/*  2! */	WITHOUT_CLASSIFICATION	0.9999981830610115	WITHOUT_CLASSIFICATION	1.8169389884978035E-6	IMPLEMENTATION
/*  3! */	WITHOUT_CLASSIFICATION	0.9999981830610115	WITHOUT_CLASSIFICATION	1.8169389884978035E-6	IMPLEMENTATION
/*  4! */	WITHOUT_CLASSIFICATION	0.9999981830610115	WITHOUT_CLASSIFICATION	1.8169389884978035E-6	IMPLEMENTATION
/*  5! */	WITHOUT_CLASSIFICATION	0.9999981830610115	WITHOUT_CLASSIFICATION	1.8169389884978035E-6	IMPLEMENTATION
/*  6! */	WITHOUT_CLASSIFICATION	0.9999981830610115	WITHOUT_CLASSIFICATION	1.8169389884978035E-6	IMPLEMENTATION
/*  7! */	WITHOUT_CLASSIFICATION	0.9999981830610115	WITHOUT_CLASSIFICATION	1.8169389884978035E-6	IMPLEMENTATION
/*  8! */	WITHOUT_CLASSIFICATION	0.9999981830610115	WITHOUT_CLASSIFICATION	1.8169389884978035E-6	IMPLEMENTATION
/*  9! */	WITHOUT_CLASSIFICATION	0.9999981830610115	WITHOUT_CLASSIFICATION	1.8169389884978035E-6	IMPLEMENTATION
/* 11! */	WITHOUT_CLASSIFICATION	0.9999984386024293	WITHOUT_CLASSIFICATION	1.5613975706521305E-6	IMPLEMENTATION
/* 12! */	WITHOUT_CLASSIFICATION	0.9999984386024293	WITHOUT_CLASSIFICATION	1.5613975706521305E-6	IMPLEMENTATION
/* 13! */	WITHOUT_CLASSIFICATION	0.9999984386024293	WITHOUT_CLASSIFICATION	1.5613975706521305E-6	IMPLEMENTATION
/* 15! */	WITHOUT_CLASSIFICATION	0.9999984386024293	WITHOUT_CLASSIFICATION	1.5613975706521305E-6	IMPLEMENTATION
/* 16! */	WITHOUT_CLASSIFICATION	0.9999984386024293	WITHOUT_CLASSIFICATION	1.5613975706521305E-6	IMPLEMENTATION
/* 17! */	WITHOUT_CLASSIFICATION	0.9999984386024293	WITHOUT_CLASSIFICATION	1.5613975706521305E-6	IMPLEMENTATION
/* 19! */	WITHOUT_CLASSIFICATION	0.9999984386024293	WITHOUT_CLASSIFICATION	1.5613975706521305E-6	IMPLEMENTATION
/* 20! */	WITHOUT_CLASSIFICATION	0.9999984386024293	WITHOUT_CLASSIFICATION	1.5613975706521305E-6	IMPLEMENTATION
/* 21! */	WITHOUT_CLASSIFICATION	0.9999984386024293	WITHOUT_CLASSIFICATION	1.5613975706521305E-6	IMPLEMENTATION
// Static constants	WITHOUT_CLASSIFICATION	0.9998756992909208	WITHOUT_CLASSIFICATION	1.2430070907917478E-4	IMPLEMENTATION
// Clean-up string representation so that it could be understood // by Java's BigDecimal. Not terribly efficient for now. // 1. MRI allows d and D as exponent separators	WITHOUT_CLASSIFICATION	0.9999969375105545	WITHOUT_CLASSIFICATION	3.0624894455042697E-6	IMPLEMENTATION
// 2. MRI allows underscores anywhere	WITHOUT_CLASSIFICATION	0.9999121852758928	WITHOUT_CLASSIFICATION	8.781472410724192E-5	IMPLEMENTATION
// 3. MRI ignores the trailing junk	WITHOUT_CLASSIFICATION	0.9998744683547758	WITHOUT_CLASSIFICATION	1.255316452242561E-4	IMPLEMENTATION
// MRI behavior: -0 and +0 are two different things	WITHOUT_CLASSIFICATION	0.9999562826982955	WITHOUT_CLASSIFICATION	4.371730170457789E-5	IMPLEMENTATION
// Java and MRI definitions of modulo are different.	WITHOUT_CLASSIFICATION	0.9999965801929581	WITHOUT_CLASSIFICATION	3.4198070418111025E-6	IMPLEMENTATION
// Java and MRI definitions of remainder are the same.	WITHOUT_CLASSIFICATION	0.9999923821788756	WITHOUT_CLASSIFICATION	7.6178211242915506E-6	IMPLEMENTATION
// Note: MRI has a very non-trivial way of calculating the precision, // so we use very simple approximation here:	WITHOUT_CLASSIFICATION	0.9998121633859043	WITHOUT_CLASSIFICATION	1.8783661409566536E-4	IMPLEMENTATION
// Iteration variables, for the square root x and the reciprocal v // initial x:  x0 ~ sqrt() // initial v:  v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999875858973981	WITHOUT_CLASSIFICATION	1.2414102601956428E-5	IMPLEMENTATION
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9996643165417358	WITHOUT_CLASSIFICATION	3.3568345826416737E-4	IMPLEMENTATION
// TODO: why this: .setResult();	WITHOUT_CLASSIFICATION	0.9348706850687468	IMPLEMENTATION	0.0651293149312533	WITHOUT_CLASSIFICATION
// integer division	WITHOUT_CLASSIFICATION	0.9996254217523816	WITHOUT_CLASSIFICATION	3.7457824761849773E-4	IMPLEMENTATION
// MRI behavior: "If digits is 0, the result is the same as the / operator."	WITHOUT_CLASSIFICATION	0.9999994018590616	WITHOUT_CLASSIFICATION	5.981409385430752E-7	IMPLEMENTATION
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999362658457572	WITHOUT_CLASSIFICATION	6.373415424284385E-5	IMPLEMENTATION
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999362658457572	WITHOUT_CLASSIFICATION	6.373415424284385E-5	IMPLEMENTATION
// Java and MRI definitions of divmod are different.        	WITHOUT_CLASSIFICATION	0.9999965801929581	WITHOUT_CLASSIFICATION	3.4198070418111025E-6	IMPLEMENTATION
// JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it	WITHOUT_CLASSIFICATION	0.997200774605512	WITHOUT_CLASSIFICATION	0.0027992253944880458	IMPLEMENTATION
// shift the decimal point just to the right of the digit to be rounded to (divide by 10**(abs(scale))) // -1 -> 10's digit, -2 -> 100's digit, etc.	WITHOUT_CLASSIFICATION	0.9999994795746833	WITHOUT_CLASSIFICATION	5.204253168034694E-7	IMPLEMENTATION
// ...round to that digit	WITHOUT_CLASSIFICATION	0.9999156921293126	WITHOUT_CLASSIFICATION	8.430787068735547E-5	IMPLEMENTATION
// ...and shift the result back to the left (multiply by 10**(abs(scale)))	WITHOUT_CLASSIFICATION	0.9999751775691597	WITHOUT_CLASSIFICATION	2.4822430840237006E-5	IMPLEMENTATION
//this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are	WITHOUT_CLASSIFICATION	0.9999544747859485	WITHOUT_CLASSIFICATION	4.552521405158603E-5	IMPLEMENTATION
// sign	WITHOUT_CLASSIFICATION	0.9999924164549453	WITHOUT_CLASSIFICATION	7.583545054671727E-6	IMPLEMENTATION
// significant digits and exponent	WITHOUT_CLASSIFICATION	0.9999564537460403	WITHOUT_CLASSIFICATION	4.354625395975029E-5	IMPLEMENTATION
// normalize the value	WITHOUT_CLASSIFICATION	0.9999793590869772	WITHOUT_CLASSIFICATION	2.064091302284016E-5	IMPLEMENTATION
// base	WITHOUT_CLASSIFICATION	0.9999965367737728	WITHOUT_CLASSIFICATION	3.4632262272599206E-6	IMPLEMENTATION
// NOTE: MRI's sqrt precision is limited by 100, // but we allow values more than 100.	WITHOUT_CLASSIFICATION	0.9999893814476067	WITHOUT_CLASSIFICATION	1.0618552393344605E-5	IMPLEMENTATION
// just in case, add a bit of extra precision	WITHOUT_CLASSIFICATION	0.9999991286246631	WITHOUT_CLASSIFICATION	8.713753367579784E-7	IMPLEMENTATION
// eh?!	WITHOUT_CLASSIFICATION	0.9999914754825183	WITHOUT_CLASSIFICATION	8.524517481776458E-6	IMPLEMENTATION
// Note: #fix has only no-arg form, but truncate allows optional parameter.	WITHOUT_CLASSIFICATION	0.9999934363552425	WITHOUT_CLASSIFICATION	6.563644757508192E-6	IMPLEMENTATION
// General number and precision checking	WITHOUT_CLASSIFICATION	0.9999258884665768	WITHOUT_CLASSIFICATION	7.411153342324749E-5	IMPLEMENTATION
// the requested precision	WITHOUT_CLASSIFICATION	0.999962501649058	WITHOUT_CLASSIFICATION	3.7498350941985364E-5	IMPLEMENTATION
// Proc class	WITHOUT_CLASSIFICATION	0.9998551089936475	WITHOUT_CLASSIFICATION	1.4489100635244623E-4	IMPLEMENTATION
//.append("  -x[directory]   strip off text before #!ruby line and perhaps cd to directory\n")	WITHOUT_CLASSIFICATION	0.9999094990820444	WITHOUT_CLASSIFICATION	9.050091795565065E-5	IMPLEMENTATION
// even shift.. // ..floors to 62 or 63 bit BigInteger	WITHOUT_CLASSIFICATION	0.9999767322335817	WITHOUT_CLASSIFICATION	2.3267766418193378E-5	IMPLEMENTATION
// 5 -> 2, -5 -> -3 need half a scale more..	WITHOUT_CLASSIFICATION	0.9999654305970176	WITHOUT_CLASSIFICATION	3.4569402982453594E-5	IMPLEMENTATION
// ..where 100 -> 10 shifts the scale	WITHOUT_CLASSIFICATION	0.9999874138762989	WITHOUT_CLASSIFICATION	1.2586123701130671E-5	IMPLEMENTATION
// Initial x - use double root - multiply by halfBack to unshift - set new scale	WITHOUT_CLASSIFICATION	0.9999955097679715	WITHOUT_CLASSIFICATION	4.490232028538346E-6	IMPLEMENTATION
// x0 ~ sqrt()	WITHOUT_CLASSIFICATION	0.9996227762572337	WITHOUT_CLASSIFICATION	3.7722374276620584E-4	IMPLEMENTATION
// for prec 15 root x0 must surely be OK // return small prec roots without iterations	WITHOUT_CLASSIFICATION	0.999982587185894	WITHOUT_CLASSIFICATION	1.7412814106031315E-5	IMPLEMENTATION
// Initial v - the reciprocal // v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9998647443261965	WITHOUT_CLASSIFICATION	1.3525567380350242E-4	IMPLEMENTATION
// Collect iteration precisions beforehand	WITHOUT_CLASSIFICATION	0.9999064735849661	WITHOUT_CLASSIFICATION	9.352641503388889E-5	IMPLEMENTATION
// assume nInit = 16 <= prec	WITHOUT_CLASSIFICATION	0.9999479014816582	WITHOUT_CLASSIFICATION	5.209851834186882E-5	IMPLEMENTATION
// The loop of "Square Root by Coupled Newton Iteration"	WITHOUT_CLASSIFICATION	0.9999861747766936	WITHOUT_CLASSIFICATION	1.3825223306456597E-5	IMPLEMENTATION
// Increase precision - next iteration supplies n exact digits	WITHOUT_CLASSIFICATION	0.9999178011583599	WITHOUT_CLASSIFICATION	8.219884164016658E-5	IMPLEMENTATION
// Next x                                        // e = d - x^2	WITHOUT_CLASSIFICATION	0.9999212717089848	WITHOUT_CLASSIFICATION	7.872829101518475E-5	IMPLEMENTATION
// x += e*v     ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999762191073803	WITHOUT_CLASSIFICATION	2.378089261963239E-5	IMPLEMENTATION
// root x is ready!	WITHOUT_CLASSIFICATION	0.9998996195240739	WITHOUT_CLASSIFICATION	1.0038047592616164E-4	IMPLEMENTATION
// Next v                                        // g = 1 - 2*x*v	WITHOUT_CLASSIFICATION	0.999892857041559	WITHOUT_CLASSIFICATION	1.0714295844110209E-4	IMPLEMENTATION
// v += g*v     ~ 1/2/sqrt()	WITHOUT_CLASSIFICATION	0.9999635120917787	WITHOUT_CLASSIFICATION	3.648790822117509E-5	IMPLEMENTATION
// RubyBigdecimal	WITHOUT_CLASSIFICATION	0.9996200707317198	WITHOUT_CLASSIFICATION	3.7992926828032465E-4	IMPLEMENTATION
// c: bind_eval	WITHOUT_CLASSIFICATION	0.9996200707317198	WITHOUT_CLASSIFICATION	3.7992926828032465E-4	IMPLEMENTATION
/*  ================     *  Module Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999975123737457	WITHOUT_CLASSIFICATION	2.487626254356359E-6	IMPLEMENTATION
// from CommandlineParser	WITHOUT_CLASSIFICATION	0.9999887007598297	WITHOUT_CLASSIFICATION	1.1299240170370324E-5	IMPLEMENTATION
// This property is a Boolean, to allow three values, so it can match MRI's nil, false and true	WITHOUT_CLASSIFICATION	0.9998015785231286	WITHOUT_CLASSIFICATION	1.9842147687134843E-4	IMPLEMENTATION
// default ClassCache using jitMax as a soft upper bound	WITHOUT_CLASSIFICATION	0.999992177653709	WITHOUT_CLASSIFICATION	7.822346290993819E-6	IMPLEMENTATION
// Until we get a little more solid on 1.9 support we will only run interpreted mode	WITHOUT_CLASSIFICATION	0.9961360390200416	WITHOUT_CLASSIFICATION	0.003863960979958516	IMPLEMENTATION
// Setting the loader needs to reset the class cache	WITHOUT_CLASSIFICATION	0.9947091658409764	WITHOUT_CLASSIFICATION	0.005290834159023594	IMPLEMENTATION
// try the normal property first	WITHOUT_CLASSIFICATION	0.9998299028196861	WITHOUT_CLASSIFICATION	1.7009718031382238E-4	IMPLEMENTATION
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999118123837806	WITHOUT_CLASSIFICATION	8.818761621949038E-5	IMPLEMENTATION
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999118123837806	WITHOUT_CLASSIFICATION	8.818761621949038E-5	IMPLEMENTATION
// try loading from classloader resources	WITHOUT_CLASSIFICATION	0.9999903797032519	WITHOUT_CLASSIFICATION	9.620296748079554E-6	IMPLEMENTATION
// otherwise fall back on system temp location	WITHOUT_CLASSIFICATION	0.9903105726440725	WITHOUT_CLASSIFICATION	0.009689427355927432	IMPLEMENTATION
// We require the home directory to be absolute	WITHOUT_CLASSIFICATION	0.9999929655293958	WITHOUT_CLASSIFICATION	7.034470604199844E-6	IMPLEMENTATION
//consume the file name	WITHOUT_CLASSIFICATION	0.9996478103229488	WITHOUT_CLASSIFICATION	3.521896770511543E-4	IMPLEMENTATION
// Specify something that can't separate	WITHOUT_CLASSIFICATION	0.9999867748243487	WITHOUT_CLASSIFICATION	1.3225175651155323E-5	IMPLEMENTATION
// try cwd first	WITHOUT_CLASSIFICATION	0.9996467067742933	WITHOUT_CLASSIFICATION	3.5329322570663656E-4	IMPLEMENTATION
// ruby interpreter compatibilty // Usage: ruby [switches] [--] [programfile] [arguments])	WITHOUT_CLASSIFICATION	0.9999024367959423	WITHOUT_CLASSIFICATION	9.756320405768041E-5	IMPLEMENTATION
// KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 // if Ruby 2.0 encoding pragmas are implemented, this will need to change	WITHOUT_CLASSIFICATION	0.9999996420010518	WITHOUT_CLASSIFICATION	3.5799894814178124E-7	IMPLEMENTATION
// @JRubyMethod(name = "complex?")	WITHOUT_CLASSIFICATION	0.9998735790788692	WITHOUT_CLASSIFICATION	1.2642092113090598E-4	IMPLEMENTATION
// @JRubyMethod(name = "exact?")	WITHOUT_CLASSIFICATION	0.9998735790788692	WITHOUT_CLASSIFICATION	1.2642092113090598E-4	IMPLEMENTATION
// @JRubyMethod(name = "inexact?")	WITHOUT_CLASSIFICATION	0.9998735790788692	WITHOUT_CLASSIFICATION	1.2642092113090598E-4	IMPLEMENTATION
// symbol string *must* be interned	WITHOUT_CLASSIFICATION	0.9999992101028675	WITHOUT_CLASSIFICATION	7.898971323753396E-7	IMPLEMENTATION
//        assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";	WITHOUT_CLASSIFICATION	0.9260923250228171	WITHOUT_CLASSIFICATION	0.07390767497718279	IMPLEMENTATION
/* Symbol class methods.     *      */	WITHOUT_CLASSIFICATION	0.9999976586844714	WITHOUT_CLASSIFICATION	2.3413155285858596E-6	IMPLEMENTATION
// TODO: 1.9 rb_enc_symname_p	WITHOUT_CLASSIFICATION	0.5835541907253433	IMPLEMENTATION	0.4164458092746567	WITHOUT_CLASSIFICATION
// This is needed to unpack stuff	WITHOUT_CLASSIFICATION	0.9230488693414413	WITHOUT_CLASSIFICATION	0.0769511306585588	IMPLEMENTATION
// we already confirmed above that length > 0	WITHOUT_CLASSIFICATION	0.9990547552469022	WITHOUT_CLASSIFICATION	9.452447530978544E-4	IMPLEMENTATION
// *must* be power of 2!	WITHOUT_CLASSIFICATION	0.9999857231610676	WITHOUT_CLASSIFICATION	1.4276838932391682E-5	IMPLEMENTATION
// note all fields are final -- rehash creates new entries when necessary. // as documented in java.util.concurrent.ConcurrentHashMap.java, that will // statistically affect only a small percentage (< 20%) of entries for a given rehash.	WITHOUT_CLASSIFICATION	0.9999999408370549	WITHOUT_CLASSIFICATION	5.916294513477099E-8	IMPLEMENTATION
//            assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9260923250228171	WITHOUT_CLASSIFICATION	0.07390767497718279	IMPLEMENTATION
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999713770162036	WITHOUT_CLASSIFICATION	2.8622983796357626E-5	IMPLEMENTATION
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999713770162036	WITHOUT_CLASSIFICATION	2.8622983796357626E-5	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9996200707317198	WITHOUT_CLASSIFICATION	3.7992926828032465E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9996200707317198	WITHOUT_CLASSIFICATION	3.7992926828032465E-4	IMPLEMENTATION
// backwards-compatibility, but threadsafe now	WITHOUT_CLASSIFICATION	0.9999873190572574	WITHOUT_CLASSIFICATION	1.2680942742743494E-5	IMPLEMENTATION
//  Single node on list	WITHOUT_CLASSIFICATION	0.9996501347711821	WITHOUT_CLASSIFICATION	3.4986522881784253E-4	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9998730887203678	WITHOUT_CLASSIFICATION	1.2691127963210383E-4	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999628726941563	WITHOUT_CLASSIFICATION	3.7127305843683975E-5	IMPLEMENTATION
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9995405049219306	WITHOUT_CLASSIFICATION	4.594950780693549E-4	IMPLEMENTATION
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9994634731717877	WITHOUT_CLASSIFICATION	5.36526828212351E-4	IMPLEMENTATION
// not so backwards-compatible here, but no one should have been // calling this anyway.	WITHOUT_CLASSIFICATION	0.9993048719017688	WITHOUT_CLASSIFICATION	6.951280982312878E-4	IMPLEMENTATION
// Profile	WITHOUT_CLASSIFICATION	0.9999915387679182	WITHOUT_CLASSIFICATION	8.461232081732546E-6	IMPLEMENTATION
//static private final String TRANSLIT = "//translit";	WITHOUT_CLASSIFICATION	0.9999143238639818	WITHOUT_CLASSIFICATION	8.567613601821878E-5	IMPLEMENTATION
// treat start and end as start...end for end >= 0, start..end for end < 0	WITHOUT_CLASSIFICATION	0.999988389718085	WITHOUT_CLASSIFICATION	1.161028191496049E-5	IMPLEMENTATION
// invalid ranges result in an empty string	WITHOUT_CLASSIFICATION	0.999999966028701	WITHOUT_CLASSIFICATION	3.3971299086994644E-8	IMPLEMENTATION
// Methods of the Nil Class (nil_*):	WITHOUT_CLASSIFICATION	0.9999912375850845	WITHOUT_CLASSIFICATION	8.762414915596176E-6	IMPLEMENTATION
// Has read/write been closed or is it still open for business	WITHOUT_CLASSIFICATION	0.9998207803393221	WITHOUT_CLASSIFICATION	1.7921966067794868E-4	IMPLEMENTATION
// Support IO modes that this object was opened with	WITHOUT_CLASSIFICATION	0.999954484244818	WITHOUT_CLASSIFICATION	4.551575518193666E-5	IMPLEMENTATION
// must let original string know we're modifying, so shared buffers aren't damaged	WITHOUT_CLASSIFICATION	0.9999819813594986	WITHOUT_CLASSIFICATION	1.801864050149491E-5	IMPLEMENTATION
// reset the state	WITHOUT_CLASSIFICATION	0.999424427142452	WITHOUT_CLASSIFICATION	5.755728575478695E-4	IMPLEMENTATION
// Tainting here if we ever want it. (secure 4)	WITHOUT_CLASSIFICATION	0.9997788305014527	WITHOUT_CLASSIFICATION	2.2116949854733824E-4	IMPLEMENTATION
// rb_match_busy	WITHOUT_CLASSIFICATION	0.9996200707317198	WITHOUT_CLASSIFICATION	3.7992926828032465E-4	IMPLEMENTATION
//str is frozen	WITHOUT_CLASSIFICATION	0.9994759386712262	WITHOUT_CLASSIFICATION	5.240613287738248E-4	IMPLEMENTATION
// MRI also does a pointer comparison here	WITHOUT_CLASSIFICATION	0.9999917208691672	WITHOUT_CLASSIFICATION	8.279130832866925E-6	IMPLEMENTATION
// JRubyServer	WITHOUT_CLASSIFICATION	0.9996200707317198	WITHOUT_CLASSIFICATION	3.7992926828032465E-4	IMPLEMENTATION
// Class.allocate object is not allocatable before it is initialized	WITHOUT_CLASSIFICATION	0.9994741015176112	WITHOUT_CLASSIFICATION	5.258984823887478E-4	IMPLEMENTATION
// boot the Object class 	WITHOUT_CLASSIFICATION	0.9999808504747916	WITHOUT_CLASSIFICATION	1.9149525208456603E-5	IMPLEMENTATION
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.999993625016002	WITHOUT_CLASSIFICATION	6.37498399801891E-6	IMPLEMENTATION
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999964717721456	WITHOUT_CLASSIFICATION	3.528227854355346E-6	IMPLEMENTATION
// undo check	WITHOUT_CLASSIFICATION	0.9996401870453872	WITHOUT_CLASSIFICATION	3.5981295461295654E-4	IMPLEMENTATION
// This is a non-standard method; have we decided to start extending Ruby? //classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));	WITHOUT_CLASSIFICATION	0.9999703086913593	WITHOUT_CLASSIFICATION	2.9691308640710802E-5	IMPLEMENTATION
// boot the Module and Class classes	WITHOUT_CLASSIFICATION	0.9999865382570298	WITHOUT_CLASSIFICATION	1.3461742970179818E-5	IMPLEMENTATION
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9999564461429583	WITHOUT_CLASSIFICATION	4.355385704164968E-5	IMPLEMENTATION
// use parent's marshal	WITHOUT_CLASSIFICATION	0.99982655433888	WITHOUT_CLASSIFICATION	1.734456611199967E-4	IMPLEMENTATION
// use parent's marshal	WITHOUT_CLASSIFICATION	0.99982655433888	WITHOUT_CLASSIFICATION	1.734456611199967E-4	IMPLEMENTATION
// could be pulled down to RubyClass in future // rb_class_boot	WITHOUT_CLASSIFICATION	0.9999646535837428	WITHOUT_CLASSIFICATION	3.5346416257203345E-5	IMPLEMENTATION
// remove us from old superclass's child classes	WITHOUT_CLASSIFICATION	0.9999855129757054	WITHOUT_CLASSIFICATION	1.4487024294730851E-5	IMPLEMENTATION
// add us to new superclass's child classes	WITHOUT_CLASSIFICATION	0.9998078976368638	WITHOUT_CLASSIFICATION	1.9210236313610925E-4	IMPLEMENTATION
// update all subclasses	WITHOUT_CLASSIFICATION	0.999992288886542	WITHOUT_CLASSIFICATION	7.71111345804088E-6	IMPLEMENTATION
// fields to hold Ruby and RubyClass references	WITHOUT_CLASSIFICATION	0.9999482180859709	WITHOUT_CLASSIFICATION	5.178191402922772E-5	IMPLEMENTATION
// static initializing method	WITHOUT_CLASSIFICATION	0.9998391280839631	WITHOUT_CLASSIFICATION	1.6087191603689818E-4	IMPLEMENTATION
// standard constructor that accepts Ruby, RubyClass	WITHOUT_CLASSIFICATION	0.9997859727041868	WITHOUT_CLASSIFICATION	2.1402729581323788E-4	IMPLEMENTATION
// no-arg constructor using static references to Ruby and RubyClass	WITHOUT_CLASSIFICATION	0.999914473127634	WITHOUT_CLASSIFICATION	8.552687236596138E-5	IMPLEMENTATION
// non-signature signature with just IRubyObject	WITHOUT_CLASSIFICATION	0.9999778756407456	WITHOUT_CLASSIFICATION	2.2124359254400537E-5	IMPLEMENTATION
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999992737838042	WITHOUT_CLASSIFICATION	7.262161959017206E-7	IMPLEMENTATION
// self // method name	WITHOUT_CLASSIFICATION	0.9996625635832991	WITHOUT_CLASSIFICATION	3.3743641670098913E-4	IMPLEMENTATION
// the default allocator	WITHOUT_CLASSIFICATION	0.9999870992878955	WITHOUT_CLASSIFICATION	1.290071210453975E-5	IMPLEMENTATION
// Equivalent of T_DATA	WITHOUT_CLASSIFICATION	0.9999632665352818	WITHOUT_CLASSIFICATION	3.6733464718282E-5	IMPLEMENTATION
// do nothing, leave empty	WITHOUT_CLASSIFICATION	0.9999908676786381	WITHOUT_CLASSIFICATION	9.132321361900829E-6	IMPLEMENTATION
// Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9999882528065172	WITHOUT_CLASSIFICATION	1.1747193482782133E-5	IMPLEMENTATION
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999997528914995	WITHOUT_CLASSIFICATION	2.4710850049228904E-6	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9998950540802483	WITHOUT_CLASSIFICATION	1.0494591975169496E-4	IMPLEMENTATION
// Make sure all arguments are modules before calling the callbacks	WITHOUT_CLASSIFICATION	0.999997495437894	WITHOUT_CLASSIFICATION	2.5045621060812873E-6	IMPLEMENTATION
// MRI extends in order from last to first	WITHOUT_CLASSIFICATION	0.9999987119621946	WITHOUT_CLASSIFICATION	1.2880378053633426E-6	IMPLEMENTATION
// NOTE: Serialization is primarily supported for testing purposes, and there is no general // guarantee that serialization will work correctly. Specifically, instance variables pointing // at symbols, threads, modules, classes, and other unserializable types are not detected.	WITHOUT_CLASSIFICATION	0.9999938367479007	WITHOUT_CLASSIFICATION	6.1632520993972025E-6	IMPLEMENTATION
// write out ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999870453869798	WITHOUT_CLASSIFICATION	1.2954613020229685E-5	IMPLEMENTATION
// rest in ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.999991140295054	WITHOUT_CLASSIFICATION	8.85970494598652E-6	IMPLEMENTATION
// 0x3fff_ffff // -0x4000_0000	WITHOUT_CLASSIFICATION	0.9999362290526616	WITHOUT_CLASSIFICATION	6.377094733850302E-5	IMPLEMENTATION
// a gotcha	WITHOUT_CLASSIFICATION	0.9997107417295994	WITHOUT_CLASSIFICATION	2.8925827040058173E-4	IMPLEMENTATION
// Java / and % are not the same as ruby	WITHOUT_CLASSIFICATION	0.9999869287500955	WITHOUT_CLASSIFICATION	1.3071249904435115E-5	IMPLEMENTATION
// A gotcha for Long.MIN_VALUE: value = -value	WITHOUT_CLASSIFICATION	0.9999675353433017	WITHOUT_CLASSIFICATION	3.246465669821802E-5	IMPLEMENTATION
// Piece of mri rb_to_id	WITHOUT_CLASSIFICATION	0.9999632665352818	WITHOUT_CLASSIFICATION	3.6733464718282E-5	IMPLEMENTATION
// Java Doubles are 64 bit long:            	WITHOUT_CLASSIFICATION	0.9999926459767349	WITHOUT_CLASSIFICATION	7.354023265066926E-6	IMPLEMENTATION
// Double.MAX_EXPONENT since Java 1.6            	WITHOUT_CLASSIFICATION	0.9999882528065172	WITHOUT_CLASSIFICATION	1.1747193482782133E-5	IMPLEMENTATION
// don't override Numeric#div !	WITHOUT_CLASSIFICATION	0.9999435553210636	WITHOUT_CLASSIFICATION	5.644467893647915E-5	IMPLEMENTATION
// Modelled after c ruby implementation (java /,% not same as ruby)	WITHOUT_CLASSIFICATION	0.9987788311823074	WITHOUT_CLASSIFICATION	0.001221168817692688	IMPLEMENTATION
// MRI behavior:	WITHOUT_CLASSIFICATION	0.9996225395676428	WITHOUT_CLASSIFICATION	3.7746043235725095E-4	IMPLEMENTATION
// Numeric.equal            	WITHOUT_CLASSIFICATION	0.9999362290526616	WITHOUT_CLASSIFICATION	6.377094733850302E-5	IMPLEMENTATION
// provider is not available	WITHOUT_CLASSIFICATION	0.9988281757959139	WITHOUT_CLASSIFICATION	0.001171824204086054	IMPLEMENTATION
// bouncy castle doesn't support algorithm	WITHOUT_CLASSIFICATION	0.9990162796432505	WITHOUT_CLASSIFICATION	9.837203567495535E-4	IMPLEMENTATION
// fall back to system JCA providers	WITHOUT_CLASSIFICATION	0.9995948505806873	WITHOUT_CLASSIFICATION	4.051494193127581E-4	IMPLEMENTATION
// RubyDigest	WITHOUT_CLASSIFICATION	0.9996200707317198	WITHOUT_CLASSIFICATION	3.7992926828032465E-4	IMPLEMENTATION
// ENEBO: Can these be fast?	WITHOUT_CLASSIFICATION	0.9998700108918165	WITHOUT_CLASSIFICATION	1.2998910818341414E-4	IMPLEMENTATION
// synchronize on the RubyThread for threadgroup updates	WITHOUT_CLASSIFICATION	0.9998990967835786	WITHOUT_CLASSIFICATION	1.0090321642152123E-4	IMPLEMENTATION
// we only add live threads	WITHOUT_CLASSIFICATION	0.9999211797631635	WITHOUT_CLASSIFICATION	7.88202368365554E-5	IMPLEMENTATION
// use same ClassIndex as metaclass, since we're technically still of that type	WITHOUT_CLASSIFICATION	0.9999456639493239	WITHOUT_CLASSIFICATION	5.4336050676088606E-5	IMPLEMENTATION
// handle everything after -- as arguments to the jruby process	WITHOUT_CLASSIFICATION	0.999960368194611	WITHOUT_CLASSIFICATION	3.963180538900981E-5	IMPLEMENTATION
// JRubyService	WITHOUT_CLASSIFICATION	0.9996200707317198	WITHOUT_CLASSIFICATION	3.7992926828032465E-4	IMPLEMENTATION
// while	WITHOUT_CLASSIFICATION	0.9999953404201324	WITHOUT_CLASSIFICATION	4.659579867626558E-6	IMPLEMENTATION
/* \OOO */	WITHOUT_CLASSIFICATION	0.9999984386024293	WITHOUT_CLASSIFICATION	1.5613975706521305E-6	IMPLEMENTATION
// CRuby uses sprintf(buf, "%.*g", FLOAT_DIG, d); // This pattern adjusts the output of String.pattern("%g") to mimic // the C version.	WITHOUT_CLASSIFICATION	0.999963956462051	WITHOUT_CLASSIFICATION	3.604353794888139E-5	IMPLEMENTATION
// mask off "once" flag	WITHOUT_CLASSIFICATION	0.9999736139735123	WITHOUT_CLASSIFICATION	2.6386026487731826E-5	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.999983061929837	WITHOUT_CLASSIFICATION	1.6938070163025627E-5	IMPLEMENTATION
// internal usage (Complex/Rational)	WITHOUT_CLASSIFICATION	0.9999527150204675	WITHOUT_CLASSIFICATION	4.728497953259697E-5	IMPLEMENTATION
// silent ?	WITHOUT_CLASSIFICATION	0.999834861276402	WITHOUT_CLASSIFICATION	1.651387235979954E-4	IMPLEMENTATION
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999984386024293	WITHOUT_CLASSIFICATION	1.5613975706521305E-6	IMPLEMENTATION
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999883188349251	WITHOUT_CLASSIFICATION	1.1681165074982326E-5	IMPLEMENTATION
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.999930388944247	WITHOUT_CLASSIFICATION	6.961105575302719E-5	IMPLEMENTATION
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.999930388944247	WITHOUT_CLASSIFICATION	6.961105575302719E-5	IMPLEMENTATION
/* \O, \OO, \OOO or backref */	WITHOUT_CLASSIFICATION	0.9999911171849986	WITHOUT_CLASSIFICATION	8.882815001362263E-6	IMPLEMENTATION
// MBCLEN_NEEDMORE_P	WITHOUT_CLASSIFICATION	0.9996200707317198	WITHOUT_CLASSIFICATION	3.7992926828032465E-4	IMPLEMENTATION
// MBCLEN_INVALID_P	WITHOUT_CLASSIFICATION	0.9996200707317198	WITHOUT_CLASSIFICATION	3.7992926828032465E-4	IMPLEMENTATION
// Unicode is can be only 21 bits long, int is enough	WITHOUT_CLASSIFICATION	0.9999813563145624	WITHOUT_CLASSIFICATION	1.8643685437493826E-5	IMPLEMENTATION
/* Surrogates */	WITHOUT_CLASSIFICATION	0.999930388944247	WITHOUT_CLASSIFICATION	6.961105575302719E-5	IMPLEMENTATION
// do not load the class if not used	WITHOUT_CLASSIFICATION	0.9996911413033477	WITHOUT_CLASSIFICATION	3.088586966522691E-4	IMPLEMENTATION
/* \0, \0O, \0OO */	WITHOUT_CLASSIFICATION	0.999930388944247	WITHOUT_CLASSIFICATION	6.961105575302719E-5	IMPLEMENTATION
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999984386024293	WITHOUT_CLASSIFICATION	1.5613975706521305E-6	IMPLEMENTATION
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.999930388944247	WITHOUT_CLASSIFICATION	6.961105575302719E-5	IMPLEMENTATION
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999883188349251	WITHOUT_CLASSIFICATION	1.1681165074982326E-5	IMPLEMENTATION
/* \\u{H HH HHH HHHH HHHHH HHHHHH ...} */	WITHOUT_CLASSIFICATION	0.9999817627309122	WITHOUT_CLASSIFICATION	1.8237269087704323E-5	IMPLEMENTATION
/* \\uHHHH */	WITHOUT_CLASSIFICATION	0.999930388944247	WITHOUT_CLASSIFICATION	6.961105575302719E-5	IMPLEMENTATION
/* \p{Hiragana} */	WITHOUT_CLASSIFICATION	0.999930388944247	WITHOUT_CLASSIFICATION	6.961105575302719E-5	IMPLEMENTATION
// inner switch	WITHOUT_CLASSIFICATION	0.9997416370388643	WITHOUT_CLASSIFICATION	2.583629611357114E-4	IMPLEMENTATION
// newInstance here	WITHOUT_CLASSIFICATION	0.9989384970067905	WITHOUT_CLASSIFICATION	0.0010615029932094246	IMPLEMENTATION
// rb_reg_raise	WITHOUT_CLASSIFICATION	0.9996200707317198	WITHOUT_CLASSIFICATION	3.7992926828032465E-4	IMPLEMENTATION
// rb_reg_desc	WITHOUT_CLASSIFICATION	0.9996200707317198	WITHOUT_CLASSIFICATION	3.7992926828032465E-4	IMPLEMENTATION
// rb_enc_reg_raise	WITHOUT_CLASSIFICATION	0.9996200707317198	WITHOUT_CLASSIFICATION	3.7992926828032465E-4	IMPLEMENTATION
// rb_enc_reg_error_desc	WITHOUT_CLASSIFICATION	0.9999362290526616	WITHOUT_CLASSIFICATION	6.377094733850302E-5	IMPLEMENTATION
// rb_reg_initialize_str	WITHOUT_CLASSIFICATION	0.9999362290526616	WITHOUT_CLASSIFICATION	6.377094733850302E-5	IMPLEMENTATION
// rb_reg_initialize	WITHOUT_CLASSIFICATION	0.9996200707317198	WITHOUT_CLASSIFICATION	3.7992926828032465E-4	IMPLEMENTATION
// JRUBY-3625: delay setting backref until the MatchData is completely initialized	WITHOUT_CLASSIFICATION	0.9999958720253782	WITHOUT_CLASSIFICATION	4.127974621802884E-6	IMPLEMENTATION
// rb_reg_expr_str	WITHOUT_CLASSIFICATION	0.9996200707317198	WITHOUT_CLASSIFICATION	3.7992926828032465E-4	IMPLEMENTATION
// option_to_str	WITHOUT_CLASSIFICATION	0.9996200707317198	WITHOUT_CLASSIFICATION	3.7992926828032465E-4	IMPLEMENTATION
// Don't initialize with class // Don't put in object space and don't taint	WITHOUT_CLASSIFICATION	0.9999969184435609	WITHOUT_CLASSIFICATION	3.081556439097476E-6	IMPLEMENTATION
// args should be before block	WITHOUT_CLASSIFICATION	0.9999703840924743	WITHOUT_CLASSIFICATION	2.961590752564635E-5	IMPLEMENTATION
// args should be at end	WITHOUT_CLASSIFICATION	0.99986077106764	WITHOUT_CLASSIFICATION	1.3922893235993717E-4	IMPLEMENTATION
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9995686380228627	WITHOUT_CLASSIFICATION	4.3136197713729404E-4	IMPLEMENTATION
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9995686380228627	WITHOUT_CLASSIFICATION	4.3136197713729404E-4	IMPLEMENTATION
// skip anything not related to jruby	WITHOUT_CLASSIFICATION	0.9954066550506665	WITHOUT_CLASSIFICATION	0.00459334494933359	IMPLEMENTATION
// start a new populator	WITHOUT_CLASSIFICATION	0.999974167155873	WITHOUT_CLASSIFICATION	2.5832844127156408E-5	IMPLEMENTATION
// check for frame field reads or writes	WITHOUT_CLASSIFICATION	0.999962272382734	WITHOUT_CLASSIFICATION	3.772761726589436E-5	IMPLEMENTATION
// add all names for this annotation	WITHOUT_CLASSIFICATION	0.9998066579403048	WITHOUT_CLASSIFICATION	1.933420596952185E-4	IMPLEMENTATION
// no annotated methods found, skip	WITHOUT_CLASSIFICATION	0.9999112226782402	WITHOUT_CLASSIFICATION	8.877732175983478E-5	IMPLEMENTATION
// write out a static initializer for frame names, so it only fires once	WITHOUT_CLASSIFICATION	0.9999880268125927	WITHOUT_CLASSIFICATION	1.1973187407209567E-5	IMPLEMENTATION
// single method, use normal logic	WITHOUT_CLASSIFICATION	0.9995078851360796	WITHOUT_CLASSIFICATION	4.921148639204454E-4	IMPLEMENTATION
// multimethod, new logic	WITHOUT_CLASSIFICATION	0.999928941084617	WITHOUT_CLASSIFICATION	7.105891538293049E-5	IMPLEMENTATION
// declared type returns the qualified name without $ for inner classes!!!	WITHOUT_CLASSIFICATION	0.9999509305734295	WITHOUT_CLASSIFICATION	4.906942657045507E-5	IMPLEMENTATION
// inner class, use $ to delimit	WITHOUT_CLASSIFICATION	0.9999228625282477	WITHOUT_CLASSIFICATION	7.713747175229736E-5	IMPLEMENTATION
//                        RubyModule singletonClass = module.getSingletonClass();	WITHOUT_CLASSIFICATION	0.9998528917867395	WITHOUT_CLASSIFICATION	1.4710821326046803E-4	IMPLEMENTATION
//                }	WITHOUT_CLASSIFICATION	0.9995808481596025	WITHOUT_CLASSIFICATION	4.1915184039746276E-4	IMPLEMENTATION
// fallback on non-pregenerated logic	WITHOUT_CLASSIFICATION	0.9997952387292934	WITHOUT_CLASSIFICATION	2.0476127070666946E-4	IMPLEMENTATION
// refresh call adapter, since it matters if this is iter-based or not	WITHOUT_CLASSIFICATION	0.9992990092799527	WITHOUT_CLASSIFICATION	7.009907200473283E-4	IMPLEMENTATION
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9911800904497216	WITHOUT_CLASSIFICATION	0.00881990955027852	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.9997495192181332	WITHOUT_CLASSIFICATION	2.504807818667984E-4	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.9998362119677371	WITHOUT_CLASSIFICATION	1.6378803226302068E-4	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999893097538548	WITHOUT_CLASSIFICATION	1.0690246145103819E-5	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999893097538548	WITHOUT_CLASSIFICATION	1.0690246145103819E-5	IMPLEMENTATION
// colon3	WITHOUT_CLASSIFICATION	0.9999914754825183	WITHOUT_CLASSIFICATION	8.524517481776458E-6	IMPLEMENTATION
// Colon3	WITHOUT_CLASSIFICATION	0.9999914754825183	WITHOUT_CLASSIFICATION	8.524517481776458E-6	IMPLEMENTATION
// array created for rescue args doesn't need to be in ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999996448452843	WITHOUT_CLASSIFICATION	3.5515471570013393E-7	IMPLEMENTATION
// For b.foo	WITHOUT_CLASSIFICATION	0.9992836117548571	WITHOUT_CLASSIFICATION	7.163882451427832E-4	IMPLEMENTATION
// instance config for the script run	WITHOUT_CLASSIFICATION	0.9999856318419514	WITHOUT_CLASSIFICATION	1.4368158048518802E-5	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999893097538548	WITHOUT_CLASSIFICATION	1.0690246145103819E-5	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999893097538548	WITHOUT_CLASSIFICATION	1.0690246145103819E-5	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999980738510094	WITHOUT_CLASSIFICATION	1.9261489906581612E-6	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999980738510094	WITHOUT_CLASSIFICATION	1.9261489906581612E-6	IMPLEMENTATION
//RubyModule module = context.getRubyClass();	WITHOUT_CLASSIFICATION	0.9994949497784684	WITHOUT_CLASSIFICATION	5.050502215316397E-4	IMPLEMENTATION
// For 'b.foo'	WITHOUT_CLASSIFICATION	0.9992836117548571	WITHOUT_CLASSIFICATION	7.163882451427832E-4	IMPLEMENTATION
// We define an actual list to get around bug in java integration (1387115)	WITHOUT_CLASSIFICATION	0.9999986742361605	WITHOUT_CLASSIFICATION	1.3257638394770814E-6	IMPLEMENTATION
// something in here is used to build up ruby stack trace...	WITHOUT_CLASSIFICATION	0.9999993103722118	WITHOUT_CLASSIFICATION	6.896277881458767E-7	IMPLEMENTATION
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999714742623074	WITHOUT_CLASSIFICATION	2.8525737692625507E-5	IMPLEMENTATION
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999714742623074	WITHOUT_CLASSIFICATION	2.8525737692625507E-5	IMPLEMENTATION
// do nothing, allow loop to retry	WITHOUT_CLASSIFICATION	0.9997354794237193	WITHOUT_CLASSIFICATION	2.645205762807408E-4	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9987565990465347	WITHOUT_CLASSIFICATION	0.0012434009534652826	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999794781513154	WITHOUT_CLASSIFICATION	2.0521848684611556E-5	IMPLEMENTATION
// never visited, should be fine	WITHOUT_CLASSIFICATION	0.9995723930893359	WITHOUT_CLASSIFICATION	4.2760691066406697E-4	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999980738510094	WITHOUT_CLASSIFICATION	1.9261489906581612E-6	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9998902189287757	WITHOUT_CLASSIFICATION	1.0978107122422282E-4	IMPLEMENTATION
// If we have more than one argument, then make sure the array is not ObjectSpaced.	WITHOUT_CLASSIFICATION	0.9806440122631279	WITHOUT_CLASSIFICATION	0.01935598773687212	IMPLEMENTATION
// Only in ruby 1.9 methods	WITHOUT_CLASSIFICATION	0.9999940292986966	WITHOUT_CLASSIFICATION	5.970701303338027E-6	IMPLEMENTATION
// Bind 'normal' parameter values to the local scope for this method.	WITHOUT_CLASSIFICATION	0.9999996903830227	WITHOUT_CLASSIFICATION	3.0961697723477216E-7	IMPLEMENTATION
// no arg grouping, just use bulk assignment methods	WITHOUT_CLASSIFICATION	0.9996880566356869	WITHOUT_CLASSIFICATION	3.119433643130866E-4	IMPLEMENTATION
// optArgs and restArgs require more work, so isolate them and ArrayList creation here	WITHOUT_CLASSIFICATION	0.9992834046718471	WITHOUT_CLASSIFICATION	7.165953281529623E-4	IMPLEMENTATION
//        arity.checkArity(runtime, argsLength);	WITHOUT_CLASSIFICATION	0.9998841479571866	WITHOUT_CLASSIFICATION	1.158520428133233E-4	IMPLEMENTATION
// no more values to stick in rest arg	WITHOUT_CLASSIFICATION	0.9999139040740754	WITHOUT_CLASSIFICATION	8.609592592462078E-5	IMPLEMENTATION
// set argv from main's args	WITHOUT_CLASSIFICATION	0.999991584728285	WITHOUT_CLASSIFICATION	8.415271715032505E-6	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.9997495192181332	WITHOUT_CLASSIFICATION	2.504807818667984E-4	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999893097538548	WITHOUT_CLASSIFICATION	1.0690246145103819E-5	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999980738510094	WITHOUT_CLASSIFICATION	1.9261489906581612E-6	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9998902189287757	WITHOUT_CLASSIFICATION	1.0978107122422282E-4	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.996057852535297	WITHOUT_CLASSIFICATION	0.003942147464702991	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.996057852535297	WITHOUT_CLASSIFICATION	0.003942147464702991	IMPLEMENTATION
// block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] //assert argsNode != null : "argsNode is not null";	WITHOUT_CLASSIFICATION	0.9909219724380715	WITHOUT_CLASSIFICATION	0.009078027561928513	IMPLEMENTATION
// assign given optional arguments to their variables	WITHOUT_CLASSIFICATION	0.9999628585283258	WITHOUT_CLASSIFICATION	3.714147167417392E-5	IMPLEMENTATION
// in-frame EvalState should already have receiver set as self, continue to use it	WITHOUT_CLASSIFICATION	0.9996774199439534	WITHOUT_CLASSIFICATION	3.22580056046632E-4	IMPLEMENTATION
// assign the default values, adding to the end of allArgs	WITHOUT_CLASSIFICATION	0.9998165782964792	WITHOUT_CLASSIFICATION	1.8342170352074745E-4	IMPLEMENTATION
// Make sure the appropriate scope has proper size. See JRUBY-2046.	WITHOUT_CLASSIFICATION	0.9999511956806064	WITHOUT_CLASSIFICATION	4.8804319393651015E-5	IMPLEMENTATION
// Experimental class reification support, to create real Java classes // for Ruby classes after the first opening	WITHOUT_CLASSIFICATION	0.99999591714825	WITHOUT_CLASSIFICATION	4.082851750102109E-6	IMPLEMENTATION
// This should never happen past parse, but just bulletproof this just in case	WITHOUT_CLASSIFICATION	0.9999958514692765	WITHOUT_CLASSIFICATION	4.1485307235262446E-6	IMPLEMENTATION
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9999486911935901	WITHOUT_CLASSIFICATION	5.130880640985722E-5	IMPLEMENTATION
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999889933563602	WITHOUT_CLASSIFICATION	1.1006643639869671E-5	IMPLEMENTATION
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999883376497931	WITHOUT_CLASSIFICATION	1.1662350206840245E-5	IMPLEMENTATION
// never visited, should be ok	WITHOUT_CLASSIFICATION	0.9991131701620604	WITHOUT_CLASSIFICATION	8.868298379396027E-4	IMPLEMENTATION
// If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil	WITHOUT_CLASSIFICATION	0.9995684398575603	WITHOUT_CLASSIFICATION	4.31560142439706E-4	IMPLEMENTATION
// JRUBY-530 until case	WITHOUT_CLASSIFICATION	0.9999530260118781	WITHOUT_CLASSIFICATION	4.697398812192594E-5	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.9998362119677371	WITHOUT_CLASSIFICATION	1.6378803226302068E-4	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999980738510094	WITHOUT_CLASSIFICATION	1.9261489906581612E-6	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9987565990465347	WITHOUT_CLASSIFICATION	0.0012434009534652826	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999794781513154	WITHOUT_CLASSIFICATION	2.0521848684611556E-5	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999794781513154	WITHOUT_CLASSIFICATION	2.0521848684611556E-5	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999980738510094	WITHOUT_CLASSIFICATION	1.9261489906581612E-6	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9998902189287757	WITHOUT_CLASSIFICATION	1.0978107122422282E-4	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9998902189287757	WITHOUT_CLASSIFICATION	1.0978107122422282E-4	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.996057852535297	WITHOUT_CLASSIFICATION	0.003942147464702991	IMPLEMENTATION
// Empirical Observations: // null -> Some arity // argsNode == this.argsNode then check for arity changes // newline(splatnode) -> argspushnode	WITHOUT_CLASSIFICATION	0.999972261276845	WITHOUT_CLASSIFICATION	2.7738723154999032E-5	IMPLEMENTATION
//assert !(value instanceof RubyArray)  : "Not an array";	WITHOUT_CLASSIFICATION	0.9929820739691051	WITHOUT_CLASSIFICATION	0.007017926030894936	IMPLEMENTATION
// Serialization killed our dynamic scope.  We can just create an empty one // since serialization cannot serialize an eval (which is the only thing // which is capable of having a non-empty dynamic scope).	WITHOUT_CLASSIFICATION	0.9999999931030856	WITHOUT_CLASSIFICATION	6.8969143580857265E-9	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9991647124973346	WITHOUT_CLASSIFICATION	8.35287502665406E-4	IMPLEMENTATION
// We could probably also detect if LHS value came out of cache and avoid some of this	WITHOUT_CLASSIFICATION	0.9997857383846326	WITHOUT_CLASSIFICATION	2.142616153675064E-4	IMPLEMENTATION
//        assert thenBody != null : "thenBody is not null"; //        assert elseBody != null : "elseBody is not null";	WITHOUT_CLASSIFICATION	0.9884369917960637	WITHOUT_CLASSIFICATION	0.011563008203936262	IMPLEMENTATION
// add in reverse order	WITHOUT_CLASSIFICATION	0.9999818211671678	WITHOUT_CLASSIFICATION	1.817883283227229E-5	IMPLEMENTATION
// in order to make pragma's noops we set location to a special value	WITHOUT_CLASSIFICATION	0.9999908138563633	WITHOUT_CLASSIFICATION	9.18614363657899E-6	IMPLEMENTATION
// ignore compiler pragmas	WITHOUT_CLASSIFICATION	0.9999489718603527	WITHOUT_CLASSIFICATION	5.102813964724866E-5	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9987565990465347	WITHOUT_CLASSIFICATION	0.0012434009534652826	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999794781513154	WITHOUT_CLASSIFICATION	2.0521848684611556E-5	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999794781513154	WITHOUT_CLASSIFICATION	2.0521848684611556E-5	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999980738510094	WITHOUT_CLASSIFICATION	1.9261489906581612E-6	IMPLEMENTATION
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9999486911935901	WITHOUT_CLASSIFICATION	5.130880640985722E-5	IMPLEMENTATION
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999883376497931	WITHOUT_CLASSIFICATION	1.1662350206840245E-5	IMPLEMENTATION
// No actual test, so do 'when' if when expression is not nil	WITHOUT_CLASSIFICATION	0.999952508626673	WITHOUT_CLASSIFICATION	4.749137332714049E-5	IMPLEMENTATION
// save entering the try if there's nothing to ensure	WITHOUT_CLASSIFICATION	0.9999928025262792	WITHOUT_CLASSIFICATION	7.197473720806106E-6	IMPLEMENTATION
// For 'foo'	WITHOUT_CLASSIFICATION	0.9992875504117781	WITHOUT_CLASSIFICATION	7.124495882219047E-4	IMPLEMENTATION
// For 'foo'	WITHOUT_CLASSIFICATION	0.9992875504117781	WITHOUT_CLASSIFICATION	7.124495882219047E-4	IMPLEMENTATION
// admittedly inefficient	WITHOUT_CLASSIFICATION	0.9999362290526616	WITHOUT_CLASSIFICATION	6.377094733850302E-5	IMPLEMENTATION
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999538088718308	WITHOUT_CLASSIFICATION	4.619112816909112E-5	IMPLEMENTATION
// What static scoping relationship exists when it comes into being.	WITHOUT_CLASSIFICATION	0.9998999533977231	WITHOUT_CLASSIFICATION	1.0004660227692747E-4	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.999951526930823	WITHOUT_CLASSIFICATION	4.847306917691069E-5	IMPLEMENTATION
// just rethrow	WITHOUT_CLASSIFICATION	0.999929726937061	WITHOUT_CLASSIFICATION	7.027306293905089E-5	IMPLEMENTATION
// just rethrow	WITHOUT_CLASSIFICATION	0.999929726937061	WITHOUT_CLASSIFICATION	7.027306293905089E-5	IMPLEMENTATION
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.999690849792651	WITHOUT_CLASSIFICATION	3.0915020734903395E-4	IMPLEMENTATION
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.999690849792651	WITHOUT_CLASSIFICATION	3.0915020734903395E-4	IMPLEMENTATION
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999850358778263	WITHOUT_CLASSIFICATION	1.496412217362899E-5	IMPLEMENTATION
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999850358778263	WITHOUT_CLASSIFICATION	1.496412217362899E-5	IMPLEMENTATION
// Execute rescue block	WITHOUT_CLASSIFICATION	0.999931557543179	WITHOUT_CLASSIFICATION	6.844245682108708E-5	IMPLEMENTATION
// If no exception is thrown execute else block	WITHOUT_CLASSIFICATION	0.9999953163858264	WITHOUT_CLASSIFICATION	4.683614173550017E-6	IMPLEMENTATION
// index of variable for this arg	WITHOUT_CLASSIFICATION	0.9983276173019825	WITHOUT_CLASSIFICATION	0.0016723826980175505	IMPLEMENTATION
// only a marker interface	WITHOUT_CLASSIFICATION	0.9999840393941856	WITHOUT_CLASSIFICATION	1.5960605814473815E-5	IMPLEMENTATION
// don't attempt to coerce to array, just wrap and return	WITHOUT_CLASSIFICATION	0.9999925410240017	WITHOUT_CLASSIFICATION	7.458975998279529E-6	IMPLEMENTATION
// pragmas	WITHOUT_CLASSIFICATION	0.9999914754825183	WITHOUT_CLASSIFICATION	8.524517481776458E-6	IMPLEMENTATION
// The method also needs a scope, do both	WITHOUT_CLASSIFICATION	0.9982828954075988	WITHOUT_CLASSIFICATION	0.0017171045924011263	IMPLEMENTATION
// We're doing normal framed compilation or the method needs a frame	WITHOUT_CLASSIFICATION	0.9991413589652586	WITHOUT_CLASSIFICATION	8.586410347413775E-4	IMPLEMENTATION
// The method doesn't need a scope or static scope; frame only	WITHOUT_CLASSIFICATION	0.999916222327349	WITHOUT_CLASSIFICATION	8.37776726510533E-5	IMPLEMENTATION
// The method doesn't need a scope, but has static scope needs; use a dummy scope	WITHOUT_CLASSIFICATION	0.9998850861167404	WITHOUT_CLASSIFICATION	1.1491388325956328E-4	IMPLEMENTATION
// Proc.new needs the caller's block to instantiate a proc	WITHOUT_CLASSIFICATION	0.9996329198917628	WITHOUT_CLASSIFICATION	3.6708010823714233E-4	IMPLEMENTATION
// check for Proc.new, an especially magic method	WITHOUT_CLASSIFICATION	0.9998407395969877	WITHOUT_CLASSIFICATION	1.5926040301228678E-4	IMPLEMENTATION
// long, slow way causes disabling	WITHOUT_CLASSIFICATION	0.9997783902887492	WITHOUT_CLASSIFICATION	2.216097112508303E-4	IMPLEMENTATION
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9998913252891256	WITHOUT_CLASSIFICATION	1.0867471087448414E-4	IMPLEMENTATION
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9998913252891256	WITHOUT_CLASSIFICATION	1.0867471087448414E-4	IMPLEMENTATION
// long, slow way causes disabling for defined	WITHOUT_CLASSIFICATION	0.9999213031133197	WITHOUT_CLASSIFICATION	7.869688668033615E-5	IMPLEMENTATION
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9994634731717877	WITHOUT_CLASSIFICATION	5.36526828212351E-4	IMPLEMENTATION
// Because Regexp#=== sets backref, we have to make this backref-aware	WITHOUT_CLASSIFICATION	0.9982076506558167	WITHOUT_CLASSIFICATION	0.0017923493441832244	IMPLEMENTATION
// encountered a node we don't recognize, set everything to true to disable optz	WITHOUT_CLASSIFICATION	0.9999037184176708	WITHOUT_CLASSIFICATION	9.628158232916627E-5	IMPLEMENTATION
// only arrays that are "lightweight" are being used as args arrays	WITHOUT_CLASSIFICATION	0.9999949805555248	WITHOUT_CLASSIFICATION	5.01944447514163E-6	IMPLEMENTATION
// otherwise, it's a literal array	WITHOUT_CLASSIFICATION	0.9998405808100336	WITHOUT_CLASSIFICATION	1.5941918996643546E-4	IMPLEMENTATION
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9995303663364702	WITHOUT_CLASSIFICATION	4.696336635298952E-4	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999546984468587	WITHOUT_CLASSIFICATION	4.530155314135139E-5	IMPLEMENTATION
// compile first node as non-expr and then second node	WITHOUT_CLASSIFICATION	0.9999849602040096	WITHOUT_CLASSIFICATION	1.503979599026638E-5	IMPLEMENTATION
// last node, either !instanceof WhenNode or null, is the else	WITHOUT_CLASSIFICATION	0.9999982100426816	WITHOUT_CLASSIFICATION	1.7899573182544468E-6	IMPLEMENTATION
// compile first node only	WITHOUT_CLASSIFICATION	0.9999370721843169	WITHOUT_CLASSIFICATION	6.292781568309145E-5	IMPLEMENTATION
// splatted when, can't do it yet	WITHOUT_CLASSIFICATION	0.9987702184039001	WITHOUT_CLASSIFICATION	0.0012297815960997855	IMPLEMENTATION
// if __send__ with a literal symbol, compile it as a direct fcall	WITHOUT_CLASSIFICATION	0.9999809888240988	WITHOUT_CLASSIFICATION	1.901117590118642E-5	IMPLEMENTATION
// NOTE: Currently this optimization is limited to the following situations: // * All expressions must be int-ranged literal fixnums // It also still emits the code for the "safe" when logic, which is rather // wasteful (since it essentially doubles each code body). As such it is // normally disabled, but it serves as an example of how this optimization // could be done. Ideally, it should be combined with the when processing // to improve code reuse before it's generally available.	WITHOUT_CLASSIFICATION	0.9998777666422823	WITHOUT_CLASSIFICATION	1.22233357717563E-4	IMPLEMENTATION
// aggregate when nodes into a list, unfortunately, this is no	WITHOUT_CLASSIFICATION	0.9999926711190764	WITHOUT_CLASSIFICATION	7.328880923649376E-6	IMPLEMENTATION
// one arg but it's an array, treat it as a proper array	WITHOUT_CLASSIFICATION	0.9992324809521794	WITHOUT_CLASSIFICATION	7.675190478205866E-4	IMPLEMENTATION
// can't do it	WITHOUT_CLASSIFICATION	0.999491785684426	WITHOUT_CLASSIFICATION	5.082143155739756E-4	IMPLEMENTATION
// otherwise, use normal args compiler	WITHOUT_CLASSIFICATION	0.9995595158493197	WITHOUT_CLASSIFICATION	4.4048415068029235E-4	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999931960041895	WITHOUT_CLASSIFICATION	6.803995810607786E-6	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999931960041895	WITHOUT_CLASSIFICATION	6.803995810607786E-6	IMPLEMENTATION
// these are all simple cases that don't require the heavier defined logic	WITHOUT_CLASSIFICATION	0.9999453033734463	WITHOUT_CLASSIFICATION	5.469662655372211E-5	IMPLEMENTATION
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9996611722072354	WITHOUT_CLASSIFICATION	3.388277927646339E-4	IMPLEMENTATION
//[]	WITHOUT_CLASSIFICATION	0.9999709824961172	WITHOUT_CLASSIFICATION	2.9017503882815074E-5	IMPLEMENTATION
//[]	WITHOUT_CLASSIFICATION	0.9999709824961172	WITHOUT_CLASSIFICATION	2.9017503882815074E-5	IMPLEMENTATION
//          context.swapValues(); //context.consumeCurrentValue();	WITHOUT_CLASSIFICATION	0.9998841479571866	WITHOUT_CLASSIFICATION	1.158520428133233E-4	IMPLEMENTATION
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[] //[self] //[RubyClass] //[RubyClass, RubyClass]	WITHOUT_CLASSIFICATION	0.9996611722072354	WITHOUT_CLASSIFICATION	3.388277927646339E-4	IMPLEMENTATION
//[RubyClass]	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9996611722072354	WITHOUT_CLASSIFICATION	3.388277927646339E-4	IMPLEMENTATION
// if root of method is rescue, compile as a light rescue	WITHOUT_CLASSIFICATION	0.9999956701399986	WITHOUT_CLASSIFICATION	4.329860001489341E-6	IMPLEMENTATION
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999931999068745	WITHOUT_CLASSIFICATION	6.8000931255057175E-6	IMPLEMENTATION
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999931999068745	WITHOUT_CLASSIFICATION	6.8000931255057175E-6	IMPLEMENTATION
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999579390270559	WITHOUT_CLASSIFICATION	4.206097294416942E-5	IMPLEMENTATION
// if root of method is rescue, compile as light rescue	WITHOUT_CLASSIFICATION	0.9999943123924504	WITHOUT_CLASSIFICATION	5.6876075496131576E-6	IMPLEMENTATION
// invoke run with threadcontext and topself	WITHOUT_CLASSIFICATION	0.9999551531017137	WITHOUT_CLASSIFICATION	4.484689828630442E-5	IMPLEMENTATION
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9996611722072354	WITHOUT_CLASSIFICATION	3.388277927646339E-4	IMPLEMENTATION
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9996611722072354	WITHOUT_CLASSIFICATION	3.388277927646339E-4	IMPLEMENTATION
//[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9996611722072354	WITHOUT_CLASSIFICATION	3.388277927646339E-4	IMPLEMENTATION
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9996611722072354	WITHOUT_CLASSIFICATION	3.388277927646339E-4	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9986143467608387	WITHOUT_CLASSIFICATION	0.0013856532391612866	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.999953386128285	WITHOUT_CLASSIFICATION	4.6613871714999584E-5	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.999953386128285	WITHOUT_CLASSIFICATION	4.6613871714999584E-5	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9997242127799051	WITHOUT_CLASSIFICATION	2.7578722009490936E-4	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9997242127799051	WITHOUT_CLASSIFICATION	2.7578722009490936E-4	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9997242127799051	WITHOUT_CLASSIFICATION	2.7578722009490936E-4	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.999953386128285	WITHOUT_CLASSIFICATION	4.6613871714999584E-5	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.999953386128285	WITHOUT_CLASSIFICATION	4.6613871714999584E-5	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9986143467608387	WITHOUT_CLASSIFICATION	0.0013856532391612866	IMPLEMENTATION
// force heap-scope behavior, since it uses parent's scope	WITHOUT_CLASSIFICATION	0.9998634628386007	WITHOUT_CLASSIFICATION	1.3653716139922165E-4	IMPLEMENTATION
// always false or nil	WITHOUT_CLASSIFICATION	0.9999609410145448	WITHOUT_CLASSIFICATION	3.9058985455289464E-5	IMPLEMENTATION
// optimizations if we know ahead of time it will always be true or false	WITHOUT_CLASSIFICATION	0.9999789686671304	WITHOUT_CLASSIFICATION	2.1031332869657933E-5	IMPLEMENTATION
// normal	WITHOUT_CLASSIFICATION	0.9999822708507414	WITHOUT_CLASSIFICATION	1.772914925860388E-5	IMPLEMENTATION
// compile condition as non-expr and just compile "then" body	WITHOUT_CLASSIFICATION	0.9999994318206765	WITHOUT_CLASSIFICATION	5.681793233488638E-7	IMPLEMENTATION
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9986817441437829	WITHOUT_CLASSIFICATION	0.0013182558562171891	IMPLEMENTATION
// just push nil for pragmas	WITHOUT_CLASSIFICATION	0.9999949841514297	WITHOUT_CLASSIFICATION	5.015848570320895E-6	IMPLEMENTATION
// "assignment" means the value is already on the stack	WITHOUT_CLASSIFICATION	0.9999927041783696	WITHOUT_CLASSIFICATION	7.295821630352275E-6	IMPLEMENTATION
// compile first node only	WITHOUT_CLASSIFICATION	0.9999370721843169	WITHOUT_CLASSIFICATION	6.292781568309145E-5	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.999953386128285	WITHOUT_CLASSIFICATION	4.6613871714999584E-5	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.999953386128285	WITHOUT_CLASSIFICATION	4.6613871714999584E-5	IMPLEMENTATION
// eval new value, call operator on old value, and assign	WITHOUT_CLASSIFICATION	0.99981512862206	WITHOUT_CLASSIFICATION	1.8487137793999305E-4	IMPLEMENTATION
// try optz version	WITHOUT_CLASSIFICATION	0.9997727592513876	WITHOUT_CLASSIFICATION	2.2724074861235882E-4	IMPLEMENTATION
// sizes must match	WITHOUT_CLASSIFICATION	0.9996482836422516	WITHOUT_CLASSIFICATION	3.517163577484605E-4	IMPLEMENTATION
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999948309498269	WITHOUT_CLASSIFICATION	5.169050173058434E-6	IMPLEMENTATION
// normal items at the "head" of the masgn	WITHOUT_CLASSIFICATION	0.9994138832903318	WITHOUT_CLASSIFICATION	5.861167096682539E-4	IMPLEMENTATION
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9994490994521819	WITHOUT_CLASSIFICATION	5.509005478181579E-4	IMPLEMENTATION
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.999849565887487	WITHOUT_CLASSIFICATION	1.50434112512939E-4	IMPLEMENTATION
// only supports simple parallel assignment of up to 10 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999995056680699	WITHOUT_CLASSIFICATION	4.943319301473041E-7	IMPLEMENTATION
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9998822668319031	WITHOUT_CLASSIFICATION	1.1773316809686734E-4	IMPLEMENTATION
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999860901566706	WITHOUT_CLASSIFICATION	1.3909843329400494E-5	IMPLEMENTATION
//RedoNode redoNode = (RedoNode)node;	WITHOUT_CLASSIFICATION	0.9995697844310018	WITHOUT_CLASSIFICATION	4.3021556899831435E-4	IMPLEMENTATION
// done processing args	WITHOUT_CLASSIFICATION	0.9999792924313732	WITHOUT_CLASSIFICATION	2.0707568626780183E-5	IMPLEMENTATION
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999798315257196	WITHOUT_CLASSIFICATION	2.0168474280500657E-5	IMPLEMENTATION
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9998971212164729	WITHOUT_CLASSIFICATION	1.0287878352703126E-4	IMPLEMENTATION
// if arity 1, just compile the one element to save us the array cost	WITHOUT_CLASSIFICATION	0.9999978810775457	WITHOUT_CLASSIFICATION	2.1189224543041857E-6	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.9999914754825183	WITHOUT_CLASSIFICATION	8.524517481776458E-6	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.9999914754825183	WITHOUT_CLASSIFICATION	8.524517481776458E-6	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.9999914754825183	WITHOUT_CLASSIFICATION	8.524517481776458E-6	IMPLEMENTATION
// compile into array	WITHOUT_CLASSIFICATION	0.9999815247241427	WITHOUT_CLASSIFICATION	1.847527585725013E-5	IMPLEMENTATION
// compile first node as non-expr and compile second node	WITHOUT_CLASSIFICATION	0.9999769366738	WITHOUT_CLASSIFICATION	2.30633261999266E-5	IMPLEMENTATION
// check if it's an immediate, and don't outline	WITHOUT_CLASSIFICATION	0.9999729551247478	WITHOUT_CLASSIFICATION	2.704487525228044E-5	IMPLEMENTATION
// condition is always true, just compile it and not body	WITHOUT_CLASSIFICATION	0.9999208218336019	WITHOUT_CLASSIFICATION	7.91781663982003E-5	IMPLEMENTATION
// force static scope to claim restarg at 0, so it only implements the [] version of __file__	WITHOUT_CLASSIFICATION	0.9999348935462163	WITHOUT_CLASSIFICATION	6.51064537837515E-5	IMPLEMENTATION
// create method for toplevel of script	WITHOUT_CLASSIFICATION	0.999950232061623	WITHOUT_CLASSIFICATION	4.976793837691069E-5	IMPLEMENTATION
// it's a multiple-statement body, iterate over all elements in turn and chain if it get too long	WITHOUT_CLASSIFICATION	0.9999998594167065	WITHOUT_CLASSIFICATION	1.4058329345145288E-7	IMPLEMENTATION
// send it along as arity-specific, we don't need the array	WITHOUT_CLASSIFICATION	0.9999266661688208	WITHOUT_CLASSIFICATION	7.33338311792769E-5	IMPLEMENTATION
// single-statement body, just compile it	WITHOUT_CLASSIFICATION	0.9999573773534507	WITHOUT_CLASSIFICATION	4.2622646549276905E-5	IMPLEMENTATION
// leave as a normal array	WITHOUT_CLASSIFICATION	0.9999863157761891	WITHOUT_CLASSIFICATION	1.3684223810762578E-5	IMPLEMENTATION
// This method has JITed already or has been abandoned. Bail out.	WITHOUT_CLASSIFICATION	0.9983850697836714	WITHOUT_CLASSIFICATION	0.001614930216328602	IMPLEMENTATION
// The cache is full. Abandon JIT for this method and bail out.	WITHOUT_CLASSIFICATION	0.9981527795990519	WITHOUT_CLASSIFICATION	0.0018472204009480225	IMPLEMENTATION
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999579390270559	WITHOUT_CLASSIFICATION	4.206097294416942E-5	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.999953386128285	WITHOUT_CLASSIFICATION	4.6613871714999584E-5	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.999953386128285	WITHOUT_CLASSIFICATION	4.6613871714999584E-5	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9986143467608387	WITHOUT_CLASSIFICATION	0.0013856532391612866	IMPLEMENTATION
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9986817441437829	WITHOUT_CLASSIFICATION	0.0013182558562171891	IMPLEMENTATION
// try optz version	WITHOUT_CLASSIFICATION	0.9997727592513876	WITHOUT_CLASSIFICATION	2.2724074861235882E-4	IMPLEMENTATION
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999948309498269	WITHOUT_CLASSIFICATION	5.169050173058434E-6	IMPLEMENTATION
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9994490994521819	WITHOUT_CLASSIFICATION	5.509005478181579E-4	IMPLEMENTATION
// sizes must match	WITHOUT_CLASSIFICATION	0.9996482836422516	WITHOUT_CLASSIFICATION	3.517163577484605E-4	IMPLEMENTATION
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.999849565887487	WITHOUT_CLASSIFICATION	1.50434112512939E-4	IMPLEMENTATION
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999860901566706	WITHOUT_CLASSIFICATION	1.3909843329400494E-5	IMPLEMENTATION
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9998822668319031	WITHOUT_CLASSIFICATION	1.1773316809686734E-4	IMPLEMENTATION
// done processing args	WITHOUT_CLASSIFICATION	0.9999792924313732	WITHOUT_CLASSIFICATION	2.0707568626780183E-5	IMPLEMENTATION
// Check if the method has been explicitly excluded	WITHOUT_CLASSIFICATION	0.9996774421697026	WITHOUT_CLASSIFICATION	3.225578302975192E-4	IMPLEMENTATION
// class could not be found nor generated; give up on JIT and bail out	WITHOUT_CLASSIFICATION	0.9995409588933308	WITHOUT_CLASSIFICATION	4.590411066691348E-4	IMPLEMENTATION
// successfully got back a jitted method	WITHOUT_CLASSIFICATION	0.9996344904929337	WITHOUT_CLASSIFICATION	3.6550950706624834E-4	IMPLEMENTATION
// finally, grab the script	WITHOUT_CLASSIFICATION	0.999962621866364	WITHOUT_CLASSIFICATION	3.737813363612232E-5	IMPLEMENTATION
// logEvery n methods based on configuration	WITHOUT_CLASSIFICATION	0.9998193912663261	WITHOUT_CLASSIFICATION	1.8060873367395293E-4	IMPLEMENTATION
// Time the compilation	WITHOUT_CLASSIFICATION	0.9999690837787596	WITHOUT_CLASSIFICATION	3.091622124046734E-5	IMPLEMENTATION
// we have a body, do a full-on method	WITHOUT_CLASSIFICATION	0.9996693721337225	WITHOUT_CLASSIFICATION	3.306278662773797E-4	IMPLEMENTATION
// If we don't have a body, check for required or opt args // if opt args, they could have side effects // if required args, need to raise errors if too few args passed // otherwise, method does nothing, make it a nop	WITHOUT_CLASSIFICATION	0.999480976832585	WITHOUT_CLASSIFICATION	5.190231674149687E-4	IMPLEMENTATION
// if we haven't already decided on a do-nothing call	WITHOUT_CLASSIFICATION	0.9998156262521243	WITHOUT_CLASSIFICATION	1.8437374787577053E-4	IMPLEMENTATION
// only supports simple parallel assignment of up to 4 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999995521701255	WITHOUT_CLASSIFICATION	4.4782987454145954E-7	IMPLEMENTATION
// normal items at the front or back of the masgn	WITHOUT_CLASSIFICATION	0.9993028661170636	WITHOUT_CLASSIFICATION	6.97133882936346E-4	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999736769656675	WITHOUT_CLASSIFICATION	2.6323034332543805E-5	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999721191408038	WITHOUT_CLASSIFICATION	2.7880859196354167E-5	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999977362834324	WITHOUT_CLASSIFICATION	2.2637165676007264E-6	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999985487699912	WITHOUT_CLASSIFICATION	1.4512300087778123E-6	IMPLEMENTATION
// end of variable scope	WITHOUT_CLASSIFICATION	0.9998088263537394	WITHOUT_CLASSIFICATION	1.9117364626061885E-4	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999095898735757	WITHOUT_CLASSIFICATION	9.041012642431311E-5	IMPLEMENTATION
// Define the annotation for the method	WITHOUT_CLASSIFICATION	0.9998482502948894	WITHOUT_CLASSIFICATION	1.5174970511060875E-4	IMPLEMENTATION
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999729129692785	WITHOUT_CLASSIFICATION	2.7087030721478364E-5	IMPLEMENTATION
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999644973042986	WITHOUT_CLASSIFICATION	3.550269570137426E-5	IMPLEMENTATION
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999719117627097	WITHOUT_CLASSIFICATION	2.8088237290303783E-5	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999514857102099	WITHOUT_CLASSIFICATION	4.8514289790212805E-5	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999514857102099	WITHOUT_CLASSIFICATION	4.8514289790212805E-5	IMPLEMENTATION
// value is already on stack, save it for later	WITHOUT_CLASSIFICATION	0.9999676849368258	WITHOUT_CLASSIFICATION	3.231506317430898E-5	IMPLEMENTATION
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9935377173549038	WITHOUT_CLASSIFICATION	0.006462282645096153	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999709824961172	WITHOUT_CLASSIFICATION	2.9017503882815074E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999709824961172	WITHOUT_CLASSIFICATION	2.9017503882815074E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999709824961172	WITHOUT_CLASSIFICATION	2.9017503882815074E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999709824961172	WITHOUT_CLASSIFICATION	2.9017503882815074E-5	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999709824961172	WITHOUT_CLASSIFICATION	2.9017503882815074E-5	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999709824961172	WITHOUT_CLASSIFICATION	2.9017503882815074E-5	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999709824961172	WITHOUT_CLASSIFICATION	2.9017503882815074E-5	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.9999709824961172	WITHOUT_CLASSIFICATION	2.9017503882815074E-5	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.9999709824961172	WITHOUT_CLASSIFICATION	2.9017503882815074E-5	IMPLEMENTATION
/*arg2*/	WITHOUT_CLASSIFICATION	0.9999709824961172	WITHOUT_CLASSIFICATION	2.9017503882815074E-5	IMPLEMENTATION
/*args*/	WITHOUT_CLASSIFICATION	0.9999709824961172	WITHOUT_CLASSIFICATION	2.9017503882815074E-5	IMPLEMENTATION
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9935377173549038	WITHOUT_CLASSIFICATION	0.006462282645096153	IMPLEMENTATION
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9997793341646717	WITHOUT_CLASSIFICATION	2.2066583532819994E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999709824961172	WITHOUT_CLASSIFICATION	2.9017503882815074E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999709824961172	WITHOUT_CLASSIFICATION	2.9017503882815074E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999709824961172	WITHOUT_CLASSIFICATION	2.9017503882815074E-5	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999709824961172	WITHOUT_CLASSIFICATION	2.9017503882815074E-5	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999709824961172	WITHOUT_CLASSIFICATION	2.9017503882815074E-5	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.9999709824961172	WITHOUT_CLASSIFICATION	2.9017503882815074E-5	IMPLEMENTATION
/*args*/	WITHOUT_CLASSIFICATION	0.9999709824961172	WITHOUT_CLASSIFICATION	2.9017503882815074E-5	IMPLEMENTATION
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9996462203804946	WITHOUT_CLASSIFICATION	3.537796195054913E-4	IMPLEMENTATION
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9996462203804946	WITHOUT_CLASSIFICATION	3.537796195054913E-4	IMPLEMENTATION
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999746616623153	WITHOUT_CLASSIFICATION	2.5338337684700288E-5	IMPLEMENTATION
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999746616623153	WITHOUT_CLASSIFICATION	2.5338337684700288E-5	IMPLEMENTATION
// invoke	WITHOUT_CLASSIFICATION	0.9999918441269949	WITHOUT_CLASSIFICATION	8.155873004998469E-6	IMPLEMENTATION
// invoke	WITHOUT_CLASSIFICATION	0.9999918441269949	WITHOUT_CLASSIFICATION	8.155873004998469E-6	IMPLEMENTATION
// check if it's true, ending if so	WITHOUT_CLASSIFICATION	0.9999429341581519	WITHOUT_CLASSIFICATION	5.706584184805101E-5	IMPLEMENTATION
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9995213372054166	WITHOUT_CLASSIFICATION	4.7866279458338914E-4	IMPLEMENTATION
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9995213372054166	WITHOUT_CLASSIFICATION	4.7866279458338914E-4	IMPLEMENTATION
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.999855972140508	WITHOUT_CLASSIFICATION	1.440278594919588E-4	IMPLEMENTATION
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.999855972140508	WITHOUT_CLASSIFICATION	1.440278594919588E-4	IMPLEMENTATION
// eval value for assignment	WITHOUT_CLASSIFICATION	0.9999924971851651	WITHOUT_CLASSIFICATION	7.502814834880918E-6	IMPLEMENTATION
// call site	WITHOUT_CLASSIFICATION	0.9992003216425395	WITHOUT_CLASSIFICATION	7.996783574605186E-4	IMPLEMENTATION
// call site	WITHOUT_CLASSIFICATION	0.9992003216425395	WITHOUT_CLASSIFICATION	7.996783574605186E-4	IMPLEMENTATION
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9996953366733163	WITHOUT_CLASSIFICATION	3.0466332668368487E-4	IMPLEMENTATION
// check if it's true, ending if not	WITHOUT_CLASSIFICATION	0.9959526125395606	WITHOUT_CLASSIFICATION	0.004047387460439368	IMPLEMENTATION
// eval value and save it	WITHOUT_CLASSIFICATION	0.9999865929493235	WITHOUT_CLASSIFICATION	1.340705067653871E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999709824961172	WITHOUT_CLASSIFICATION	2.9017503882815074E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999709824961172	WITHOUT_CLASSIFICATION	2.9017503882815074E-5	IMPLEMENTATION
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9996953366733163	WITHOUT_CLASSIFICATION	3.0466332668368487E-4	IMPLEMENTATION
// receiver, args, result, value	WITHOUT_CLASSIFICATION	0.9999712099954674	WITHOUT_CLASSIFICATION	2.879000453253895E-5	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9996200707317198	WITHOUT_CLASSIFICATION	3.7992926828032465E-4	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9996200707317198	WITHOUT_CLASSIFICATION	3.7992926828032465E-4	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9996200707317198	WITHOUT_CLASSIFICATION	3.7992926828032465E-4	IMPLEMENTATION
// super uses current block if none given	WITHOUT_CLASSIFICATION	0.9998816636435034	WITHOUT_CLASSIFICATION	1.1833635649654543E-4	IMPLEMENTATION
// args	WITHOUT_CLASSIFICATION	0.999992296280675	WITHOUT_CLASSIFICATION	7.703719324972536E-6	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999899313378572	WITHOUT_CLASSIFICATION	1.0068662142806485E-5	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999899313378572	WITHOUT_CLASSIFICATION	1.0068662142806485E-5	IMPLEMENTATION
// no args, no block	WITHOUT_CLASSIFICATION	0.9997022347169924	WITHOUT_CLASSIFICATION	2.977652830076188E-4	IMPLEMENTATION
// no args, with block	WITHOUT_CLASSIFICATION	0.9999304802157505	WITHOUT_CLASSIFICATION	6.951978424955403E-5	IMPLEMENTATION
// with args, no block	WITHOUT_CLASSIFICATION	0.9999304802157505	WITHOUT_CLASSIFICATION	6.951978424955397E-5	IMPLEMENTATION
// with args, with block	WITHOUT_CLASSIFICATION	0.9998955370827648	WITHOUT_CLASSIFICATION	1.0446291723528515E-4	IMPLEMENTATION
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999004402456029	WITHOUT_CLASSIFICATION	9.955975439703077E-5	IMPLEMENTATION
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999879638403274	WITHOUT_CLASSIFICATION	1.2036159672695028E-5	IMPLEMENTATION
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999879638403274	WITHOUT_CLASSIFICATION	1.2036159672695028E-5	IMPLEMENTATION
// arg and receiver already present on the stack	WITHOUT_CLASSIFICATION	0.9977194009625743	WITHOUT_CLASSIFICATION	0.0022805990374257065	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9999709824961172	WITHOUT_CLASSIFICATION	2.9017503882815074E-5	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9999709824961172	WITHOUT_CLASSIFICATION	2.9017503882815074E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999709824961172	WITHOUT_CLASSIFICATION	2.9017503882815074E-5	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9996200707317198	WITHOUT_CLASSIFICATION	3.7992926828032465E-4	IMPLEMENTATION
// args	WITHOUT_CLASSIFICATION	0.999992296280675	WITHOUT_CLASSIFICATION	7.703719324972536E-6	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999899313378572	WITHOUT_CLASSIFICATION	1.0068662142806485E-5	IMPLEMENTATION
// no args, no block	WITHOUT_CLASSIFICATION	0.9997022347169924	WITHOUT_CLASSIFICATION	2.977652830076188E-4	IMPLEMENTATION
// no args, with block	WITHOUT_CLASSIFICATION	0.9999304802157505	WITHOUT_CLASSIFICATION	6.951978424955403E-5	IMPLEMENTATION
// with args, no block	WITHOUT_CLASSIFICATION	0.9999304802157505	WITHOUT_CLASSIFICATION	6.951978424955397E-5	IMPLEMENTATION
// with args, with block	WITHOUT_CLASSIFICATION	0.9998955370827648	WITHOUT_CLASSIFICATION	1.0446291723528515E-4	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9999709824961172	WITHOUT_CLASSIFICATION	2.9017503882815074E-5	IMPLEMENTATION
// retrieve scope from scopes array	WITHOUT_CLASSIFICATION	0.9999882843978419	WITHOUT_CLASSIFICATION	1.1715602158147205E-5	IMPLEMENTATION
// use numbered access method	WITHOUT_CLASSIFICATION	0.9995143070965048	WITHOUT_CLASSIFICATION	4.856929034951767E-4	IMPLEMENTATION
// retrieve call site from sites array	WITHOUT_CLASSIFICATION	0.9999748932157894	WITHOUT_CLASSIFICATION	2.5106784210578247E-5	IMPLEMENTATION
// add name to call site list	WITHOUT_CLASSIFICATION	0.9993805756437495	WITHOUT_CLASSIFICATION	6.194243562505935E-4	IMPLEMENTATION
// module is on top of stack	WITHOUT_CLASSIFICATION	0.9998962158027969	WITHOUT_CLASSIFICATION	1.037841972031572E-4	IMPLEMENTATION
// build scope names string	WITHOUT_CLASSIFICATION	0.9999986241136222	WITHOUT_CLASSIFICATION	1.375886377856572E-6	IMPLEMENTATION
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999990494738199	WITHOUT_CLASSIFICATION	9.505261799988741E-7	IMPLEMENTATION
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999990494738199	WITHOUT_CLASSIFICATION	9.505261799988741E-7	IMPLEMENTATION
// generate call sites initialization code	WITHOUT_CLASSIFICATION	0.9994770249354141	WITHOUT_CLASSIFICATION	5.229750645858916E-4	IMPLEMENTATION
// generate symbols initialization code	WITHOUT_CLASSIFICATION	0.9997531872985252	WITHOUT_CLASSIFICATION	2.468127014747278E-4	IMPLEMENTATION
// generate fixnums initialization code	WITHOUT_CLASSIFICATION	0.9997529919786485	WITHOUT_CLASSIFICATION	2.4700802135146666E-4	IMPLEMENTATION
// generate constants initialization code	WITHOUT_CLASSIFICATION	0.9999172712366681	WITHOUT_CLASSIFICATION	8.27287633318348E-5	IMPLEMENTATION
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9997529919786485	WITHOUT_CLASSIFICATION	2.4700802135146666E-4	IMPLEMENTATION
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9997529919786485	WITHOUT_CLASSIFICATION	2.4700802135146666E-4	IMPLEMENTATION
// generate variable readers initialization code	WITHOUT_CLASSIFICATION	0.9990999410740451	WITHOUT_CLASSIFICATION	9.000589259548371E-4	IMPLEMENTATION
// generate variable writers initialization code	WITHOUT_CLASSIFICATION	0.9996414957771904	WITHOUT_CLASSIFICATION	3.58504222809574E-4	IMPLEMENTATION
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9997102360809805	WITHOUT_CLASSIFICATION	2.897639190194112E-4	IMPLEMENTATION
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9997102360809805	WITHOUT_CLASSIFICATION	2.897639190194112E-4	IMPLEMENTATION
// generate bytelists initialization code	WITHOUT_CLASSIFICATION	0.9997529919786485	WITHOUT_CLASSIFICATION	2.4700802135146666E-4	IMPLEMENTATION
// generate method cache initialization code	WITHOUT_CLASSIFICATION	0.9900371924440815	WITHOUT_CLASSIFICATION	0.009962807555918522	IMPLEMENTATION
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999004402456029	WITHOUT_CLASSIFICATION	9.955975439703077E-5	IMPLEMENTATION
// use IRubyObject[]	WITHOUT_CLASSIFICATION	0.9989668060217145	WITHOUT_CLASSIFICATION	0.0010331939782854702	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999765885960838	WITHOUT_CLASSIFICATION	2.341140391616352E-5	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999231456518438	WITHOUT_CLASSIFICATION	7.68543481561999E-5	IMPLEMENTATION
// No point in updating number if last number was same value.	WITHOUT_CLASSIFICATION	0.9999995958790868	WITHOUT_CLASSIFICATION	4.041209132529068E-7	IMPLEMENTATION
// load Object under value	WITHOUT_CLASSIFICATION	0.9999808771791805	WITHOUT_CLASSIFICATION	1.9122820819544523E-5	IMPLEMENTATION
// put under object array already present	WITHOUT_CLASSIFICATION	0.9998019551294953	WITHOUT_CLASSIFICATION	1.9804487050478867E-4	IMPLEMENTATION
// if element count is less than 6, use helper methods	WITHOUT_CLASSIFICATION	0.9999833166870413	WITHOUT_CLASSIFICATION	1.668331295876759E-5	IMPLEMENTATION
// This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements	WITHOUT_CLASSIFICATION	0.999999399287044	WITHOUT_CLASSIFICATION	6.007129560580429E-7	IMPLEMENTATION
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999695654655362	WITHOUT_CLASSIFICATION	3.0434534463869216E-5	IMPLEMENTATION
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999695654655362	WITHOUT_CLASSIFICATION	3.0434534463869216E-5	IMPLEMENTATION
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9996759622450542	WITHOUT_CLASSIFICATION	3.240377549458032E-4	IMPLEMENTATION
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9996759622450542	WITHOUT_CLASSIFICATION	3.240377549458032E-4	IMPLEMENTATION
// use specific-arity for as much as possible	WITHOUT_CLASSIFICATION	0.9999822410480803	WITHOUT_CLASSIFICATION	1.7758951919717624E-5	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.99981230318322	WITHOUT_CLASSIFICATION	1.8769681677996522E-4	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.99981230318322	WITHOUT_CLASSIFICATION	1.8769681677996522E-4	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.99981230318322	WITHOUT_CLASSIFICATION	1.8769681677996522E-4	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.999971865954122	WITHOUT_CLASSIFICATION	2.8134045877943146E-5	IMPLEMENTATION
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999282487910919	WITHOUT_CLASSIFICATION	7.175120890806157E-5	IMPLEMENTATION
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999282487910919	WITHOUT_CLASSIFICATION	7.175120890806157E-5	IMPLEMENTATION
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999981725078093	WITHOUT_CLASSIFICATION	1.8274921906643622E-6	IMPLEMENTATION
// check the condition	WITHOUT_CLASSIFICATION	0.9998800200779449	WITHOUT_CLASSIFICATION	1.199799220552179E-4	IMPLEMENTATION
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999356233140608	WITHOUT_CLASSIFICATION	6.437668593917736E-5	IMPLEMENTATION
// skip catch block	WITHOUT_CLASSIFICATION	0.9994186991826811	WITHOUT_CLASSIFICATION	5.813008173188664E-4	IMPLEMENTATION
// catch logic for flow-control: next, break	WITHOUT_CLASSIFICATION	0.9999295379453893	WITHOUT_CLASSIFICATION	7.046205461068409E-5	IMPLEMENTATION
// next jump	WITHOUT_CLASSIFICATION	0.9992172861018574	WITHOUT_CLASSIFICATION	7.827138981425324E-4	IMPLEMENTATION
// exceptionNext target is for a next that doesn't push a new value, like this one	WITHOUT_CLASSIFICATION	0.9997715551889087	WITHOUT_CLASSIFICATION	2.2844481109125022E-4	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999721191408038	WITHOUT_CLASSIFICATION	2.7880859196354167E-5	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999721191408038	WITHOUT_CLASSIFICATION	2.7880859196354167E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.999971865954122	WITHOUT_CLASSIFICATION	2.8134045877943146E-5	IMPLEMENTATION
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999981725078093	WITHOUT_CLASSIFICATION	1.8274921906643622E-6	IMPLEMENTATION
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999879039833535	WITHOUT_CLASSIFICATION	1.2096016646526541E-5	IMPLEMENTATION
// check the condition	WITHOUT_CLASSIFICATION	0.9998800200779449	WITHOUT_CLASSIFICATION	1.199799220552179E-4	IMPLEMENTATION
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999356233140608	WITHOUT_CLASSIFICATION	6.437668593917736E-5	IMPLEMENTATION
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9983404583901567	WITHOUT_CLASSIFICATION	0.0016595416098433345	IMPLEMENTATION
// break jump	WITHOUT_CLASSIFICATION	0.9996403512749931	WITHOUT_CLASSIFICATION	3.596487250069143E-4	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999490211626383	WITHOUT_CLASSIFICATION	5.097883736183236E-5	IMPLEMENTATION
//[reg]	WITHOUT_CLASSIFICATION	0.9999709824961172	WITHOUT_CLASSIFICATION	2.9017503882815074E-5	IMPLEMENTATION
// for regular expressions with the /o flag	WITHOUT_CLASSIFICATION	0.9998239335788582	WITHOUT_CLASSIFICATION	1.760664211417305E-4	IMPLEMENTATION
// inside a loop, jump to body	WITHOUT_CLASSIFICATION	0.9999808276102539	WITHOUT_CLASSIFICATION	1.9172389746047585E-5	IMPLEMENTATION
// inside a loop, jump to conditional	WITHOUT_CLASSIFICATION	0.9998418121144782	WITHOUT_CLASSIFICATION	1.581878855217671E-4	IMPLEMENTATION
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9983404583901567	WITHOUT_CLASSIFICATION	0.0016595416098433345	IMPLEMENTATION
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999967959725614	WITHOUT_CLASSIFICATION	3.204027438677579E-6	IMPLEMENTATION
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999967959725614	WITHOUT_CLASSIFICATION	3.204027438677579E-6	IMPLEMENTATION
// if more than 4 vars, get values array too	WITHOUT_CLASSIFICATION	0.9999980648076466	WITHOUT_CLASSIFICATION	1.9351923532798214E-6	IMPLEMENTATION
// retry handling in the rescue block	WITHOUT_CLASSIFICATION	0.9999406554760378	WITHOUT_CLASSIFICATION	5.9344523962190204E-5	IMPLEMENTATION
// any exceptions raised must continue to be raised, skipping $! restoration	WITHOUT_CLASSIFICATION	0.9971625750150882	WITHOUT_CLASSIFICATION	0.002837424984911871	IMPLEMENTATION
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9982653770374397	WITHOUT_CLASSIFICATION	0.0017346229625602408	IMPLEMENTATION
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999104880066697	WITHOUT_CLASSIFICATION	8.951199333030233E-5	IMPLEMENTATION
// Handle Flow exceptions, just propagating them	WITHOUT_CLASSIFICATION	0.9999918070947462	WITHOUT_CLASSIFICATION	8.192905253853814E-6	IMPLEMENTATION
// rethrow to outer flow catcher	WITHOUT_CLASSIFICATION	0.9999606743845629	WITHOUT_CLASSIFICATION	3.932561543700466E-5	IMPLEMENTATION
// Handle Ruby exceptions (RaiseException)	WITHOUT_CLASSIFICATION	0.9962497136414697	WITHOUT_CLASSIFICATION	0.003750286358530281	IMPLEMENTATION
// inside a loop, break out of it // go to end of loop, leaving break value on stack	WITHOUT_CLASSIFICATION	0.9998982279793285	WITHOUT_CLASSIFICATION	1.0177202067148313E-4	IMPLEMENTATION
// false // zero	WITHOUT_CLASSIFICATION	0.9998461753287623	WITHOUT_CLASSIFICATION	1.538246712376774E-4	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999769905210174	WITHOUT_CLASSIFICATION	2.3009478982579402E-5	IMPLEMENTATION
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9982653770374397	WITHOUT_CLASSIFICATION	0.0017346229625602408	IMPLEMENTATION
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999104880066697	WITHOUT_CLASSIFICATION	8.951199333030233E-5	IMPLEMENTATION
// retry handling in the rescue blocks	WITHOUT_CLASSIFICATION	0.9999712790961688	WITHOUT_CLASSIFICATION	2.872090383126356E-5	IMPLEMENTATION
// push false	WITHOUT_CLASSIFICATION	0.9997890241909927	WITHOUT_CLASSIFICATION	2.1097580900738432E-4	IMPLEMENTATION
//method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));	WITHOUT_CLASSIFICATION	0.9996611722072354	WITHOUT_CLASSIFICATION	3.388277927646339E-4	IMPLEMENTATION
//method.ifnonnull(trueLabel);	WITHOUT_CLASSIFICATION	0.999782952175292	WITHOUT_CLASSIFICATION	2.1704782470798146E-4	IMPLEMENTATION
// EQ == 0 (i.e. false)   //[C]	WITHOUT_CLASSIFICATION	0.9999488876722931	WITHOUT_CLASSIFICATION	5.111232770693E-5	IMPLEMENTATION
//[C, C] //[C, C, String] //[C, null|C]	WITHOUT_CLASSIFICATION	0.9996611722072354	WITHOUT_CLASSIFICATION	3.388277927646339E-4	IMPLEMENTATION
//[C]	WITHOUT_CLASSIFICATION	0.9999709824961172	WITHOUT_CLASSIFICATION	2.9017503882815074E-5	IMPLEMENTATION
// push true	WITHOUT_CLASSIFICATION	0.9993976084036569	WITHOUT_CLASSIFICATION	6.023915963431208E-4	IMPLEMENTATION
// EQ != 0 (i.e. true)	WITHOUT_CLASSIFICATION	0.9999901274008385	WITHOUT_CLASSIFICATION	9.872599161499601E-6	IMPLEMENTATION
//[?, ?] //[?, boolean]	WITHOUT_CLASSIFICATION	0.999782952175292	WITHOUT_CLASSIFICATION	2.1704782470798146E-4	IMPLEMENTATION
//[RubyModule] //[RubyModule, String]	WITHOUT_CLASSIFICATION	0.9996611722072354	WITHOUT_CLASSIFICATION	3.388277927646339E-4	IMPLEMENTATION
//[boolean]	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
// no receiver for singleton class	WITHOUT_CLASSIFICATION	0.9999899927996883	WITHOUT_CLASSIFICATION	1.0007200311764845E-5	IMPLEMENTATION
// but there's a superclass passed in, use it	WITHOUT_CLASSIFICATION	0.9993194729161539	WITHOUT_CLASSIFICATION	6.805270838462537E-4	IMPLEMENTATION
// we re-set self to the class, but store the old self in a temporary local variable // this is to prevent it GCing in case the singleton is short-lived	WITHOUT_CLASSIFICATION	0.9999885710750126	WITHOUT_CLASSIFICATION	1.1428924987417437E-5	IMPLEMENTATION
// set self to the class	WITHOUT_CLASSIFICATION	0.9999819512762388	WITHOUT_CLASSIFICATION	1.8048723761209084E-5	IMPLEMENTATION
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9996271556034613	WITHOUT_CLASSIFICATION	3.7284439653882955E-4	IMPLEMENTATION
// static scope	WITHOUT_CLASSIFICATION	0.9997063204141391	WITHOUT_CLASSIFICATION	2.936795858609515E-4	IMPLEMENTATION
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999874431518607	WITHOUT_CLASSIFICATION	1.2556848139297697E-5	IMPLEMENTATION
// new instance to invoke run against	WITHOUT_CLASSIFICATION	0.9999695685680847	WITHOUT_CLASSIFICATION	3.0431431915248955E-5	IMPLEMENTATION
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9996271556034613	WITHOUT_CLASSIFICATION	3.7284439653882955E-4	IMPLEMENTATION
// static scope	WITHOUT_CLASSIFICATION	0.9997063204141391	WITHOUT_CLASSIFICATION	2.936795858609515E-4	IMPLEMENTATION
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999874431518607	WITHOUT_CLASSIFICATION	1.2556848139297697E-5	IMPLEMENTATION
// finally with exception	WITHOUT_CLASSIFICATION	0.9999107871768724	WITHOUT_CLASSIFICATION	8.921282312747898E-5	IMPLEMENTATION
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9992015881774863	WITHOUT_CLASSIFICATION	7.984118225138428E-4	IMPLEMENTATION
// otherwise, there's a receiver, so we pass that in directly for the sclass logic	WITHOUT_CLASSIFICATION	0.99996491933916	WITHOUT_CLASSIFICATION	3.5080660840114906E-5	IMPLEMENTATION
// original exception is on stack	WITHOUT_CLASSIFICATION	0.9998939883116202	WITHOUT_CLASSIFICATION	1.0601168837979613E-4	IMPLEMENTATION
// RaiseException is on stack, get RubyException out	WITHOUT_CLASSIFICATION	0.9999712338870629	WITHOUT_CLASSIFICATION	2.8766112937142096E-5	IMPLEMENTATION
// updating position for same line; skip	WITHOUT_CLASSIFICATION	0.9999583437319831	WITHOUT_CLASSIFICATION	4.165626801688759E-5	IMPLEMENTATION
// callbacks to fill in method body	WITHOUT_CLASSIFICATION	0.9999811210229067	WITHOUT_CLASSIFICATION	1.8878977093292724E-5	IMPLEMENTATION
// prepare to call "def" utility method to handle def logic	WITHOUT_CLASSIFICATION	0.9964057726642737	WITHOUT_CLASSIFICATION	0.003594227335726357	IMPLEMENTATION
// script object	WITHOUT_CLASSIFICATION	0.9999168471529131	WITHOUT_CLASSIFICATION	8.315284708700063E-5	IMPLEMENTATION
// arities	WITHOUT_CLASSIFICATION	0.9999914754825183	WITHOUT_CLASSIFICATION	8.524517481776458E-6	IMPLEMENTATION
// TODO assuming case is a fixnum	WITHOUT_CLASSIFICATION	0.80666630861633	WITHOUT_CLASSIFICATION	0.19333369138367001	IMPLEMENTATION
// we have an input case, prepare branching logic	WITHOUT_CLASSIFICATION	0.9999375247003546	WITHOUT_CLASSIFICATION	6.247529964551438E-5	IMPLEMENTATION
// we have optimized switch cases, build a lookupswitch	WITHOUT_CLASSIFICATION	0.9997054550151961	WITHOUT_CLASSIFICATION	2.9454498480388025E-4	IMPLEMENTATION
// checkcast the value; if match, fast path; otherwise proceed to slow logic	WITHOUT_CLASSIFICATION	0.9996032264487047	WITHOUT_CLASSIFICATION	3.967735512952763E-4	IMPLEMENTATION
// expression-based tests + bodies	WITHOUT_CLASSIFICATION	0.9999247510593636	WITHOUT_CLASSIFICATION	7.524894063628897E-5	IMPLEMENTATION
// normal case, create a new label	WITHOUT_CLASSIFICATION	0.9999706342964839	WITHOUT_CLASSIFICATION	2.936570351605735E-5	IMPLEMENTATION
// last conditional case, use defaultCase	WITHOUT_CLASSIFICATION	0.9998819379007914	WITHOUT_CLASSIFICATION	1.1806209920865379E-4	IMPLEMENTATION
// do nothing; arity check is done before call	WITHOUT_CLASSIFICATION	0.9999227779488457	WITHOUT_CLASSIFICATION	7.722205115434182E-5	IMPLEMENTATION
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999956299157156	WITHOUT_CLASSIFICATION	4.370084284456846E-6	IMPLEMENTATION
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999377515375125	WITHOUT_CLASSIFICATION	6.2248462487427E-5	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.9999984892447715	WITHOUT_CLASSIFICATION	1.510755228436024E-6	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.9999826840860871	WITHOUT_CLASSIFICATION	1.7315913912853852E-5	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.9999826840860871	WITHOUT_CLASSIFICATION	1.7315913912853852E-5	IMPLEMENTATION
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999667114723162	WITHOUT_CLASSIFICATION	3.328852768379706E-5	IMPLEMENTATION
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999667114723162	WITHOUT_CLASSIFICATION	3.328852768379706E-5	IMPLEMENTATION
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999351764452699	WITHOUT_CLASSIFICATION	6.48235547301803E-5	IMPLEMENTATION
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999351764452699	WITHOUT_CLASSIFICATION	6.48235547301803E-5	IMPLEMENTATION
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999955423861984	WITHOUT_CLASSIFICATION	4.457613801706194E-6	IMPLEMENTATION
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9995008458777908	WITHOUT_CLASSIFICATION	4.991541222092915E-4	IMPLEMENTATION
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999970600699654	WITHOUT_CLASSIFICATION	2.9399300346643054E-6	IMPLEMENTATION
// if there's args left and we want them, assign to rest arg	WITHOUT_CLASSIFICATION	0.9950559478304088	WITHOUT_CLASSIFICATION	0.0049440521695911545	IMPLEMENTATION
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999995937517685	WITHOUT_CLASSIFICATION	4.0624823148881077E-7	IMPLEMENTATION
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9996699150673491	WITHOUT_CLASSIFICATION	3.300849326508929E-4	IMPLEMENTATION
// first, iterate over all pre args	WITHOUT_CLASSIFICATION	0.9999698115190165	WITHOUT_CLASSIFICATION	3.0188480983448555E-5	IMPLEMENTATION
// then optional args	WITHOUT_CLASSIFICATION	0.9999659874806529	WITHOUT_CLASSIFICATION	3.401251934707814E-5	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999721191408038	WITHOUT_CLASSIFICATION	2.7880859196354167E-5	IMPLEMENTATION
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999955423861984	WITHOUT_CLASSIFICATION	4.457613801706194E-6	IMPLEMENTATION
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9995008458777908	WITHOUT_CLASSIFICATION	4.991541222092915E-4	IMPLEMENTATION
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999970600699654	WITHOUT_CLASSIFICATION	2.9399300346643054E-6	IMPLEMENTATION
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999995937517685	WITHOUT_CLASSIFICATION	4.0624823148881077E-7	IMPLEMENTATION
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9996699150673491	WITHOUT_CLASSIFICATION	3.300849326508929E-4	IMPLEMENTATION
// if rest args, excluding post args	WITHOUT_CLASSIFICATION	0.9999708597643419	WITHOUT_CLASSIFICATION	2.9140235658177592E-5	IMPLEMENTATION
// finally, post args	WITHOUT_CLASSIFICATION	0.999962714093401	WITHOUT_CLASSIFICATION	3.72859065990377E-5	IMPLEMENTATION
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9952664101891332	WITHOUT_CLASSIFICATION	0.004733589810866796	IMPLEMENTATION
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9952664101891332	WITHOUT_CLASSIFICATION	0.004733589810866796	IMPLEMENTATION
// unwrap scopes to appropriate depth	WITHOUT_CLASSIFICATION	0.9999290659216036	WITHOUT_CLASSIFICATION	7.093407839637312E-5	IMPLEMENTATION
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999933288507352	WITHOUT_CLASSIFICATION	6.671149264802745E-6	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9996040969564974	WITHOUT_CLASSIFICATION	3.9590304350249487E-4	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999782831452289	WITHOUT_CLASSIFICATION	2.171685477110048E-5	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999782831452289	WITHOUT_CLASSIFICATION	2.171685477110048E-5	IMPLEMENTATION
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999839537879348	WITHOUT_CLASSIFICATION	1.604621206521753E-5	IMPLEMENTATION
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999930406070634	WITHOUT_CLASSIFICATION	6.9593929365694785E-6	IMPLEMENTATION
// store the local vars in a local variable	WITHOUT_CLASSIFICATION	0.999987404184485	WITHOUT_CLASSIFICATION	1.2595815515119624E-5	IMPLEMENTATION
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999706124350671	WITHOUT_CLASSIFICATION	2.9387564932911667E-5	IMPLEMENTATION
// return in a class body raises error	WITHOUT_CLASSIFICATION	0.9999985373747543	WITHOUT_CLASSIFICATION	1.4626252457369479E-6	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999977362834324	WITHOUT_CLASSIFICATION	2.2637165676007264E-6	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999985487699912	WITHOUT_CLASSIFICATION	1.4512300087778123E-6	IMPLEMENTATION
// end of variable scope	WITHOUT_CLASSIFICATION	0.9998088263537394	WITHOUT_CLASSIFICATION	1.9117364626061885E-4	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999095898735757	WITHOUT_CLASSIFICATION	9.041012642431311E-5	IMPLEMENTATION
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999644973042986	WITHOUT_CLASSIFICATION	3.550269570137426E-5	IMPLEMENTATION
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999719117627097	WITHOUT_CLASSIFICATION	2.8088237290303783E-5	IMPLEMENTATION
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999839537879348	WITHOUT_CLASSIFICATION	1.604621206521753E-5	IMPLEMENTATION
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999930406070634	WITHOUT_CLASSIFICATION	6.9593929365694785E-6	IMPLEMENTATION
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999706124350671	WITHOUT_CLASSIFICATION	2.9387564932911667E-5	IMPLEMENTATION
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9983225737969056	WITHOUT_CLASSIFICATION	0.0016774262030944775	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9996040969564974	WITHOUT_CLASSIFICATION	3.9590304350249487E-4	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9996040969564974	WITHOUT_CLASSIFICATION	3.9590304350249487E-4	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999769905210174	WITHOUT_CLASSIFICATION	2.3009478982579402E-5	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999769905210174	WITHOUT_CLASSIFICATION	2.3009478982579402E-5	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.979623125333328	WITHOUT_CLASSIFICATION	0.020376874666672044	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.979623125333328	WITHOUT_CLASSIFICATION	0.020376874666672044	IMPLEMENTATION
// store the local vars in a local variable if there are any	WITHOUT_CLASSIFICATION	0.999999173029443	WITHOUT_CLASSIFICATION	8.269705570323543E-7	IMPLEMENTATION
// if more than 4 locals, get and populate the locals array too	WITHOUT_CLASSIFICATION	0.9999537840907551	WITHOUT_CLASSIFICATION	4.621590924486303E-5	IMPLEMENTATION
// fill local vars with nil, to avoid checking every access.	WITHOUT_CLASSIFICATION	0.9984365119558499	WITHOUT_CLASSIFICATION	0.0015634880441501857	IMPLEMENTATION
// default for starting tempVariableIndex is ok	WITHOUT_CLASSIFICATION	0.9999902185414643	WITHOUT_CLASSIFICATION	9.781458535765635E-6	IMPLEMENTATION
// store the local vars in a local variable for preparing the class (using previous scope)	WITHOUT_CLASSIFICATION	0.9999983883776237	WITHOUT_CLASSIFICATION	1.6116223762911701E-6	IMPLEMENTATION
// store the new local vars in a local variable	WITHOUT_CLASSIFICATION	0.999983676583775	WITHOUT_CLASSIFICATION	1.6323416225061995E-5	IMPLEMENTATION
// in 1.8 mode, this will be a RubyArray containing the arguments // in 1.9 mode, this will be an IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999972093356932	WITHOUT_CLASSIFICATION	2.79066430677793E-6	IMPLEMENTATION
// no variable initialization, because we're reusing parent's scope (flat)	WITHOUT_CLASSIFICATION	0.9999619362723564	WITHOUT_CLASSIFICATION	3.8063727643635495E-5	IMPLEMENTATION
// for specific-index cases, clean up non-expression values	WITHOUT_CLASSIFICATION	0.9999961158991933	WITHOUT_CLASSIFICATION	3.884100806566929E-6	IMPLEMENTATION
// set up a local Ruby variable	WITHOUT_CLASSIFICATION	0.9999736769656675	WITHOUT_CLASSIFICATION	2.6323034332543805E-5	IMPLEMENTATION
// if that succeeds, the others should as well	WITHOUT_CLASSIFICATION	0.9999970733182806	WITHOUT_CLASSIFICATION	2.926681719535382E-6	IMPLEMENTATION
// verify the class	WITHOUT_CLASSIFICATION	0.9998704401076072	WITHOUT_CLASSIFICATION	1.2955989239290204E-4	IMPLEMENTATION
// create dir if necessary	WITHOUT_CLASSIFICATION	0.9999531665474666	WITHOUT_CLASSIFICATION	4.683345253346664E-5	IMPLEMENTATION
// Create the class with the appropriate class name and source file	WITHOUT_CLASSIFICATION	0.9999960340244697	WITHOUT_CLASSIFICATION	3.96597553025031E-6	IMPLEMENTATION
// add setPosition impl, which stores filename as constant to speed updates	WITHOUT_CLASSIFICATION	0.9999731188512225	WITHOUT_CLASSIFICATION	2.6881148777481195E-5	IMPLEMENTATION
// thread context	WITHOUT_CLASSIFICATION	0.9983704567726769	WITHOUT_CLASSIFICATION	0.0016295432273231126	IMPLEMENTATION
// line number	WITHOUT_CLASSIFICATION	0.9993842593855423	WITHOUT_CLASSIFICATION	6.157406144577187E-4	IMPLEMENTATION
// invoke __file__ with threadcontext, self, args (null), and block (null)	WITHOUT_CLASSIFICATION	0.9999115055993604	WITHOUT_CLASSIFICATION	8.849440063970655E-5	IMPLEMENTATION
// load always uses IRubyObject[], so simple closure offset calculation here	WITHOUT_CLASSIFICATION	0.9999516665654606	WITHOUT_CLASSIFICATION	4.833343453932502E-5	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999985487699912	WITHOUT_CLASSIFICATION	1.4512300087778123E-6	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999095898735757	WITHOUT_CLASSIFICATION	9.041012642431311E-5	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999514857102099	WITHOUT_CLASSIFICATION	4.8514289790212805E-5	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999899313378572	WITHOUT_CLASSIFICATION	1.0068662142806485E-5	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999899313378572	WITHOUT_CLASSIFICATION	1.0068662142806485E-5	IMPLEMENTATION
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9983225737969056	WITHOUT_CLASSIFICATION	0.0016774262030944775	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9996040969564974	WITHOUT_CLASSIFICATION	3.9590304350249487E-4	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999769905210174	WITHOUT_CLASSIFICATION	2.3009478982579402E-5	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.979623125333328	WITHOUT_CLASSIFICATION	0.020376874666672044	IMPLEMENTATION
// add Script#run impl, used for running this script with a specified threadcontext and self // root method of a script is always in __file__ method	WITHOUT_CLASSIFICATION	0.9999921027931192	WITHOUT_CLASSIFICATION	7.897206880682286E-6	IMPLEMENTATION
// add main impl, used for detached or command-line execution of this script with a new runtime // root method of a script is always in stub0, method0	WITHOUT_CLASSIFICATION	0.9999706519804092	WITHOUT_CLASSIFICATION	2.9348019590807957E-5	IMPLEMENTATION
// construct static scope list of names	WITHOUT_CLASSIFICATION	0.999929723934443	WITHOUT_CLASSIFICATION	7.02760655569341E-5	IMPLEMENTATION
// JRUBY-3014: make __FILE__ dynamically determined at load time, but // we provide a reasonable default here	WITHOUT_CLASSIFICATION	0.9998050232599766	WITHOUT_CLASSIFICATION	1.949767400234359E-4	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999898344873219	WITHOUT_CLASSIFICATION	1.0165512678131312E-5	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999898344873219	WITHOUT_CLASSIFICATION	1.0165512678131312E-5	IMPLEMENTATION
// lazily create class init only if necessary	WITHOUT_CLASSIFICATION	0.9999929432406145	WITHOUT_CLASSIFICATION	7.0567593854742845E-6	IMPLEMENTATION
// boxed arg list __file__	WITHOUT_CLASSIFICATION	0.9992171511260141	WITHOUT_CLASSIFICATION	7.828488739859451E-4	IMPLEMENTATION
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999520044421932	WITHOUT_CLASSIFICATION	4.799555780678315E-5	IMPLEMENTATION
// exact arg list __file__	WITHOUT_CLASSIFICATION	0.999278545565791	WITHOUT_CLASSIFICATION	7.214544342089013E-4	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.9996800779621198	WITHOUT_CLASSIFICATION	3.1992203788032365E-4	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.9996800779621198	WITHOUT_CLASSIFICATION	3.1992203788032365E-4	IMPLEMENTATION
// not using a new scope, use saved one for a flat closure	WITHOUT_CLASSIFICATION	0.9972538188996293	WITHOUT_CLASSIFICATION	0.00274618110037065	IMPLEMENTATION
// normal closure	WITHOUT_CLASSIFICATION	0.9993196740863914	WITHOUT_CLASSIFICATION	6.803259136086108E-4	IMPLEMENTATION
// end of scoping for closure's vars	WITHOUT_CLASSIFICATION	0.9998906384742946	WITHOUT_CLASSIFICATION	1.0936152570535518E-4	IMPLEMENTATION
// we only need full-on redo exception handling if there's logic that might produce it	WITHOUT_CLASSIFICATION	0.9982787609484396	WITHOUT_CLASSIFICATION	0.0017212390515603027	IMPLEMENTATION
// handle redos by restarting the block	WITHOUT_CLASSIFICATION	0.9993127076267058	WITHOUT_CLASSIFICATION	6.872923732941762E-4	IMPLEMENTATION
// jump back to the top of the main body of this closure	WITHOUT_CLASSIFICATION	0.9997697745711851	WITHOUT_CLASSIFICATION	2.3022542881484407E-4	IMPLEMENTATION
// Ruby name 	WITHOUT_CLASSIFICATION	0.9993413145812506	WITHOUT_CLASSIFICATION	6.58685418749289E-4	IMPLEMENTATION
// Accumulate call arguments	WITHOUT_CLASSIFICATION	0.9999003724325667	WITHOUT_CLASSIFICATION	9.962756743341047E-5	IMPLEMENTATION
// Fix FileNameCompletor to work mid-line	WITHOUT_CLASSIFICATION	0.9990613125370383	WITHOUT_CLASSIFICATION	9.38687462961599E-4	IMPLEMENTATION
// We need to ensure that the variable names generated here cannot conflict with ruby variable names! // Hence the "%" tthat is appended to the beginning!	WITHOUT_CLASSIFICATION	0.999890938174066	WITHOUT_CLASSIFICATION	1.090618259339383E-4	IMPLEMENTATION
// Does this method define code?  // Default is yes -- which basically leads to pessimistic but safe optimizations // But, for library and internal methods, this might be false.	WITHOUT_CLASSIFICATION	0.9999997958162716	WITHOUT_CLASSIFICATION	2.0418372837383457E-7	IMPLEMENTATION
// Map of constants defined in this scope (not valid for methods!)	WITHOUT_CLASSIFICATION	0.9999984760006013	WITHOUT_CLASSIFICATION	1.5239993986668947E-6	IMPLEMENTATION
// NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner // with outer loops encountered before inner loops, and inner loops finished before outer ones. // // So, we can keep track of loops in a loop stack which  keeps track of loops as they are encountered. // This lets us implement next/redo/break/retry easily for the non-closure cases	WITHOUT_CLASSIFICATION	0.999999745945474	WITHOUT_CLASSIFICATION	2.5405452606438534E-7	IMPLEMENTATION
// Map keep track of the next available variable index for a particular prefix	WITHOUT_CLASSIFICATION	0.9998505809549202	WITHOUT_CLASSIFICATION	1.4941904507974053E-4	IMPLEMENTATION
// Control flow graph for this scope	WITHOUT_CLASSIFICATION	0.9999331920549104	WITHOUT_CLASSIFICATION	6.680794508966657E-5	IMPLEMENTATION
//        _lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;	WITHOUT_CLASSIFICATION	0.9986743779218099	WITHOUT_CLASSIFICATION	0.001325622078190075	IMPLEMENTATION
// List of modules, classes, and methods defined in this scope!	WITHOUT_CLASSIFICATION	0.9999887264689667	WITHOUT_CLASSIFICATION	1.1273531033201753E-5	IMPLEMENTATION
// Returns the containing parent scope!	WITHOUT_CLASSIFICATION	0.9997352369595978	WITHOUT_CLASSIFICATION	2.6476304040223516E-4	IMPLEMENTATION
// Insert nesting level to ensure variable names don't conflict across nested scopes! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //        return new Variable(prefix + _lexicalNestingLevel + "_" + idx);	WITHOUT_CLASSIFICATION	0.9999618120160025	WITHOUT_CLASSIFICATION	3.818798399742007E-5	IMPLEMENTATION
// get "self"	WITHOUT_CLASSIFICATION	0.9997613947286219	WITHOUT_CLASSIFICATION	2.3860527137807593E-4	IMPLEMENTATION
// variable is never read, variable is never live	WITHOUT_CLASSIFICATION	0.9995161103562171	WITHOUT_CLASSIFICATION	4.83889643782859E-4	IMPLEMENTATION
// inline script	WITHOUT_CLASSIFICATION	0.9997387652975016	WITHOUT_CLASSIFICATION	2.612347024983894E-4	IMPLEMENTATION
// inline script	WITHOUT_CLASSIFICATION	0.9997387652975016	WITHOUT_CLASSIFICATION	2.612347024983894E-4	IMPLEMENTATION
// This method is called to build assignments for a multiple-assignment instruction	WITHOUT_CLASSIFICATION	0.9999916576217107	WITHOUT_CLASSIFICATION	8.34237828927782E-6	IMPLEMENTATION
// Build the class body!	WITHOUT_CLASSIFICATION	0.9999753398430837	WITHOUT_CLASSIFICATION	2.4660156916326207E-5	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999546984468587	WITHOUT_CLASSIFICATION	4.530155314135139E-5	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999546984468587	WITHOUT_CLASSIFICATION	4.530155314135139E-5	IMPLEMENTATION
// SSS FIXME: Can this ever be null?	WITHOUT_CLASSIFICATION	0.9195612219539422	WITHOUT_CLASSIFICATION	0.08043877804605783	IMPLEMENTATION
// Run the pass on the passed in scope!	WITHOUT_CLASSIFICATION	0.9999262154558988	WITHOUT_CLASSIFICATION	7.37845441011823E-5	IMPLEMENTATION
// done // done // done // done	WITHOUT_CLASSIFICATION	0.9999082233692503	WITHOUT_CLASSIFICATION	9.17766307497547E-5	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999994552755792	WITHOUT_CLASSIFICATION	5.447244207298539E-7	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999994552755792	WITHOUT_CLASSIFICATION	5.447244207298539E-7	IMPLEMENTATION
// This method is called to build arguments for a block!	WITHOUT_CLASSIFICATION	0.9999938395810648	WITHOUT_CLASSIFICATION	6.160418935264774E-6	IMPLEMENTATION
// build first node (and ignore its result) and then second node	WITHOUT_CLASSIFICATION	0.9999496448420784	WITHOUT_CLASSIFICATION	5.0355157921549916E-5	IMPLEMENTATION
// build first node only and return false	WITHOUT_CLASSIFICATION	0.999986061889614	WITHOUT_CLASSIFICATION	1.393811038601693E-5	IMPLEMENTATION
// Value of the last expression in the block 	WITHOUT_CLASSIFICATION	0.9999905963177224	WITHOUT_CLASSIFICATION	9.403682277724345E-6	IMPLEMENTATION
// If this is not a closure, the break is equivalent to jumping to the loop end label	WITHOUT_CLASSIFICATION	0.9994719943860005	WITHOUT_CLASSIFICATION	5.280056139994194E-4	IMPLEMENTATION
// get the incoming case value	WITHOUT_CLASSIFICATION	0.999984536888294	WITHOUT_CLASSIFICATION	1.546311170595021E-5	IMPLEMENTATION
// the CASE instruction	WITHOUT_CLASSIFICATION	0.9999428315437976	WITHOUT_CLASSIFICATION	5.71684562024718E-5	IMPLEMENTATION
// lists to aggregate variables and bodies for whens	WITHOUT_CLASSIFICATION	0.9999823337793676	WITHOUT_CLASSIFICATION	1.766622063237054E-5	IMPLEMENTATION
// build each "when"	WITHOUT_CLASSIFICATION	0.9997108523671371	WITHOUT_CLASSIFICATION	2.8914763286296626E-4	IMPLEMENTATION
// multiple conditions for when	WITHOUT_CLASSIFICATION	0.9999684578731031	WITHOUT_CLASSIFICATION	3.154212689697116E-5	IMPLEMENTATION
// build "else" if it exists	WITHOUT_CLASSIFICATION	0.9999772505341045	WITHOUT_CLASSIFICATION	2.2749465895435314E-5	IMPLEMENTATION
// now emit bodies	WITHOUT_CLASSIFICATION	0.9997987824103329	WITHOUT_CLASSIFICATION	2.012175896670363E-4	IMPLEMENTATION
// close it out	WITHOUT_CLASSIFICATION	0.9999413398972203	WITHOUT_CLASSIFICATION	5.866010277969767E-5	IMPLEMENTATION
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.999980043343266	WITHOUT_CLASSIFICATION	1.99566567340041E-5	IMPLEMENTATION
// Do we have a dynamic container?	WITHOUT_CLASSIFICATION	0.999725028848897	WITHOUT_CLASSIFICATION	2.749711511029403E-4	IMPLEMENTATION
// Return a meta object corresponding to the class	WITHOUT_CLASSIFICATION	0.9999950224000917	WITHOUT_CLASSIFICATION	4.977599908242782E-6	IMPLEMENTATION
// 1. Load the module first (lhs of node) // 2. Then load the constant from the module	WITHOUT_CLASSIFICATION	0.9999452396890178	WITHOUT_CLASSIFICATION	5.4760310982236596E-5	IMPLEMENTATION
// Build IR for args	WITHOUT_CLASSIFICATION	0.9998696276774404	WITHOUT_CLASSIFICATION	1.3037232255953853E-4	IMPLEMENTATION
// Build IR for body	WITHOUT_CLASSIFICATION	0.9999727490483996	WITHOUT_CLASSIFICATION	2.7250951600342983E-5	IMPLEMENTATION
// if root of method is rescue, build as a light rescue	WITHOUT_CLASSIFICATION	0.9999964507075321	WITHOUT_CLASSIFICATION	3.5492924677949984E-6	IMPLEMENTATION
// Instance method	WITHOUT_CLASSIFICATION	0.9988029792097303	WITHOUT_CLASSIFICATION	0.0011970207902697776	IMPLEMENTATION
// Class method	WITHOUT_CLASSIFICATION	0.9995498420130705	WITHOUT_CLASSIFICATION	4.50157986929532E-4	IMPLEMENTATION
// Other args begin at index 1	WITHOUT_CLASSIFICATION	0.9998556330972443	WITHOUT_CLASSIFICATION	1.4436690275576795E-4	IMPLEMENTATION
// Both for fixed arity and variable arity methods	WITHOUT_CLASSIFICATION	0.999948611503073	WITHOUT_CLASSIFICATION	5.1388496926887466E-5	IMPLEMENTATION
// Now for the rest	WITHOUT_CLASSIFICATION	0.9995708481078396	WITHOUT_CLASSIFICATION	4.291518921604076E-4	IMPLEMENTATION
// Jump to 'l' if this arg is not null.  If null, fall through and build the default value!	WITHOUT_CLASSIFICATION	0.9999879721305013	WITHOUT_CLASSIFICATION	1.2027869498819084E-5	IMPLEMENTATION
// This is not an expression that computes anything	WITHOUT_CLASSIFICATION	0.9925516882874028	WITHOUT_CLASSIFICATION	0.00744831171259716	IMPLEMENTATION
// Create a new closure context	WITHOUT_CLASSIFICATION	0.999932694465116	WITHOUT_CLASSIFICATION	6.730553488398631E-5	IMPLEMENTATION
// Build args	WITHOUT_CLASSIFICATION	0.9996909895300868	WITHOUT_CLASSIFICATION	3.0901046991323476E-4	IMPLEMENTATION
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999984866643185	WITHOUT_CLASSIFICATION	1.5133356816447351E-6	IMPLEMENTATION
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999798741839651	WITHOUT_CLASSIFICATION	2.0125816034853112E-5	IMPLEMENTATION
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.999980043343266	WITHOUT_CLASSIFICATION	1.99566567340041E-5	IMPLEMENTATION
// Create a new closure context	WITHOUT_CLASSIFICATION	0.999932694465116	WITHOUT_CLASSIFICATION	6.730553488398631E-5	IMPLEMENTATION
// Build args	WITHOUT_CLASSIFICATION	0.9996909895300868	WITHOUT_CLASSIFICATION	3.0901046991323476E-4	IMPLEMENTATION
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999798741839651	WITHOUT_CLASSIFICATION	2.0125816034853112E-5	IMPLEMENTATION
// Get the container for this new module	WITHOUT_CLASSIFICATION	0.9999289539556389	WITHOUT_CLASSIFICATION	7.104604436111318E-5	IMPLEMENTATION
// Build the new module	WITHOUT_CLASSIFICATION	0.9999016001186088	WITHOUT_CLASSIFICATION	9.839988139110424E-5	IMPLEMENTATION
// Build the module body	WITHOUT_CLASSIFICATION	0.9999856574467576	WITHOUT_CLASSIFICATION	1.4342553242343665E-5	IMPLEMENTATION
// First, build an assignment for a splat, if any, with the rest of the args!	WITHOUT_CLASSIFICATION	0.9999929162078433	WITHOUT_CLASSIFICATION	7.083792156739528E-6	IMPLEMENTATION
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999837094857505	WITHOUT_CLASSIFICATION	1.629051424949207E-5	IMPLEMENTATION
// If a closure, the next is simply a return from the closure! // If a regular loop, the next is simply a jump to the end of the iteration	WITHOUT_CLASSIFICATION	0.9999891702985729	WITHOUT_CLASSIFICATION	1.0829701427061202E-5	IMPLEMENTATION
// get attr	WITHOUT_CLASSIFICATION	0.9997613947286219	WITHOUT_CLASSIFICATION	2.3860527137807593E-4	IMPLEMENTATION
// call operator	WITHOUT_CLASSIFICATION	0.999220055309853	WITHOUT_CLASSIFICATION	7.799446901469804E-4	IMPLEMENTATION
// set attr	WITHOUT_CLASSIFICATION	0.9996868739964304	WITHOUT_CLASSIFICATION	3.1312600356952857E-4	IMPLEMENTATION
// Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, false, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9997794624326012	WITHOUT_CLASSIFICATION	2.2053756739870813E-4	IMPLEMENTATION
// This does the assignment!	WITHOUT_CLASSIFICATION	0.999981221711516	WITHOUT_CLASSIFICATION	1.8778288483958475E-5	IMPLEMENTATION
// This does the assignment!	WITHOUT_CLASSIFICATION	0.999981221711516	WITHOUT_CLASSIFICATION	1.8778288483958475E-5	IMPLEMENTATION
// if v1 is defined and true, we are done! 	WITHOUT_CLASSIFICATION	0.9999976387874571	WITHOUT_CLASSIFICATION	2.3612125429501447E-6	IMPLEMENTATION
// build first node only and return true	WITHOUT_CLASSIFICATION	0.9999601884611098	WITHOUT_CLASSIFICATION	3.981153889017983E-5	IMPLEMENTATION
// build first node as non-expr and build second node	WITHOUT_CLASSIFICATION	0.9999810943618526	WITHOUT_CLASSIFICATION	1.8905638147396203E-5	IMPLEMENTATION
// Top-level script!	WITHOUT_CLASSIFICATION	0.9996200707317198	WITHOUT_CLASSIFICATION	3.7992926828032465E-4	IMPLEMENTATION
// we won't enter the loop -- just build the condition node	WITHOUT_CLASSIFICATION	0.999999753716027	WITHOUT_CLASSIFICATION	2.4628397291424963E-7	IMPLEMENTATION
/* ----------- Private Interface ------------ */	WITHOUT_CLASSIFICATION	0.999986044375536	WITHOUT_CLASSIFICATION	1.3955624464130588E-5	IMPLEMENTATION
// What handles warnings	WITHOUT_CLASSIFICATION	0.9999300944305186	WITHOUT_CLASSIFICATION	6.990556948136643E-5	IMPLEMENTATION
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999995826451635	WITHOUT_CLASSIFICATION	4.1735483638792185E-7	IMPLEMENTATION
// For closures, a redo is a jump to the beginning of the closure // For non-closures, a redo is a jump to the beginning of the loop	WITHOUT_CLASSIFICATION	0.9999857629571314	WITHOUT_CLASSIFICATION	1.4237042868677659E-5	IMPLEMENTATION
// The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999959756605111	WITHOUT_CLASSIFICATION	4.024339488937296E-6	IMPLEMENTATION
// Dummy top-level method for the class	WITHOUT_CLASSIFICATION	0.99995715620204	WITHOUT_CLASSIFICATION	4.284379796003255E-5	IMPLEMENTATION
// Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999980120705931	WITHOUT_CLASSIFICATION	1.9879294068662913E-6	IMPLEMENTATION
// ------ Define the operations below ----	WITHOUT_CLASSIFICATION	0.9998748433942372	WITHOUT_CLASSIFICATION	1.2515660576288253E-4	IMPLEMENTATION
// value copy and type conversion operations	WITHOUT_CLASSIFICATION	0.9999905499661184	WITHOUT_CLASSIFICATION	9.450033881667238E-6	IMPLEMENTATION
// alu operations	WITHOUT_CLASSIFICATION	0.9991997566925358	WITHOUT_CLASSIFICATION	8.002433074641404E-4	IMPLEMENTATION
// method handle, arg receive, return value, and  call instructions	WITHOUT_CLASSIFICATION	0.9981331169229632	WITHOUT_CLASSIFICATION	0.001866883077036684	IMPLEMENTATION
// closure instructions	WITHOUT_CLASSIFICATION	0.9999450776115117	WITHOUT_CLASSIFICATION	5.492238848820382E-5	IMPLEMENTATION
// eval instructions	WITHOUT_CLASSIFICATION	0.999629824887665	WITHOUT_CLASSIFICATION	3.701751123350102E-4	IMPLEMENTATION
// def instructions	WITHOUT_CLASSIFICATION	0.9996204505307861	WITHOUT_CLASSIFICATION	3.7954946921391134E-4	IMPLEMENTATION
// exception instructions	WITHOUT_CLASSIFICATION	0.9999289745419955	WITHOUT_CLASSIFICATION	7.102545800458209E-5	IMPLEMENTATION
// Loads	WITHOUT_CLASSIFICATION	0.9999914754825183	WITHOUT_CLASSIFICATION	8.524517481776458E-6	IMPLEMENTATION
// Stores	WITHOUT_CLASSIFICATION	0.9999914754825183	WITHOUT_CLASSIFICATION	8.524517481776458E-6	IMPLEMENTATION
// jump and branch operations	WITHOUT_CLASSIFICATION	0.9999190552593684	WITHOUT_CLASSIFICATION	8.094474063163445E-5	IMPLEMENTATION
// others	WITHOUT_CLASSIFICATION	0.9999920159680042	WITHOUT_CLASSIFICATION	7.98403199579424E-6	IMPLEMENTATION
// a case/when branch	WITHOUT_CLASSIFICATION	0.9999531317933948	WITHOUT_CLASSIFICATION	4.6868206605152893E-5	IMPLEMENTATION
// optimization guards	WITHOUT_CLASSIFICATION	0.999936676931773	WITHOUT_CLASSIFICATION	6.332306822702236E-5	IMPLEMENTATION
// By default, call instructions cannot be deleted even if their results aren't used by anyone // unless we know more about what the call is, what it does, etc. // Similarly for evals, stores, returns.	WITHOUT_CLASSIFICATION	0.814785371342279	WITHOUT_CLASSIFICATION	0.18521462865772095	IMPLEMENTATION
// Returns the containing parent scope -- can be a dynamic value (hence Operand)!	WITHOUT_CLASSIFICATION	0.9999812106045978	WITHOUT_CLASSIFICATION	1.878939540221047E-5	IMPLEMENTATION
// scripts	WITHOUT_CLASSIFICATION	0.9999943630146816	WITHOUT_CLASSIFICATION	5.636985318344105E-6	IMPLEMENTATION
// scripts and modules	WITHOUT_CLASSIFICATION	0.9999857884074891	WITHOUT_CLASSIFICATION	1.4211592510984753E-5	IMPLEMENTATION
// scripts, classes, and modules	WITHOUT_CLASSIFICATION	0.999970648664468	WITHOUT_CLASSIFICATION	2.9351335531867272E-5	IMPLEMENTATION
// methods and closures	WITHOUT_CLASSIFICATION	0.9999536462969245	WITHOUT_CLASSIFICATION	4.6353703075488584E-5	IMPLEMENTATION
// create a new variable using the prefix	WITHOUT_CLASSIFICATION	0.999765291360289	WITHOUT_CLASSIFICATION	2.3470863971102924E-4	IMPLEMENTATION
// create a new temporary variable	WITHOUT_CLASSIFICATION	0.9997683829635268	WITHOUT_CLASSIFICATION	2.316170364731588E-4	IMPLEMENTATION
// Get a new label using a generic prefix	WITHOUT_CLASSIFICATION	0.9999901638174489	WITHOUT_CLASSIFICATION	9.836182551195355E-6	IMPLEMENTATION
// Build the CFG for this scope -- supported only by methods & closures	WITHOUT_CLASSIFICATION	0.999999075796248	WITHOUT_CLASSIFICATION	9.242037520116207E-7	IMPLEMENTATION
// Get the control flow graph for this scope -- only valid for methods & closures	WITHOUT_CLASSIFICATION	0.9999784659955786	WITHOUT_CLASSIFICATION	2.1534004421362457E-5	IMPLEMENTATION
// While processing loops, this returns the loop that we are processing.	WITHOUT_CLASSIFICATION	0.9999804896159254	WITHOUT_CLASSIFICATION	1.9510384074571393E-5	IMPLEMENTATION
// Record the loop we are beginning to process	WITHOUT_CLASSIFICATION	0.9999897154321802	WITHOUT_CLASSIFICATION	1.0284567819745213E-5	IMPLEMENTATION
// Indicate that we are done processing the loop	WITHOUT_CLASSIFICATION	0.9999297125110874	WITHOUT_CLASSIFICATION	7.028748891258316E-5	IMPLEMENTATION
// Run the passed in compiler pass on this scope!	WITHOUT_CLASSIFICATION	0.9998560942083993	WITHOUT_CLASSIFICATION	1.4390579160074193E-4	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9984786648528063	WITHOUT_CLASSIFICATION	0.0015213351471937422	IMPLEMENTATION
// Readline	WITHOUT_CLASSIFICATION	0.9996200707317198	WITHOUT_CLASSIFICATION	3.7992926828032465E-4	IMPLEMENTATION
// If the cfg of the method is around, print the CFG!	WITHOUT_CLASSIFICATION	0.9999737102119136	WITHOUT_CLASSIFICATION	2.628978808638636E-5	IMPLEMENTATION
// Optimize some core class method calls for constant values	WITHOUT_CLASSIFICATION	0.9999831526791373	WITHOUT_CLASSIFICATION	1.684732086277219E-5	IMPLEMENTATION
// If 'r' is not a constant, it could actually be a compound value! // Look in our value map to see if we have a simplified value for the receiver.	WITHOUT_CLASSIFICATION	0.9999984087586765	WITHOUT_CLASSIFICATION	1.5912413235147165E-6	IMPLEMENTATION
// Check if we can optimize this call based on the receiving method and receiver type // Use the simplified receiver!	WITHOUT_CLASSIFICATION	0.9969619017710684	WITHOUT_CLASSIFICATION	0.0030380982289316604	IMPLEMENTATION
// If we got a simplified value, mark the call dead and insert a copy in its place!	WITHOUT_CLASSIFICATION	0.9999989408472743	WITHOUT_CLASSIFICATION	1.0591527257013135E-6	IMPLEMENTATION
// If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!	WITHOUT_CLASSIFICATION	0.999996206574157	WITHOUT_CLASSIFICATION	3.793425842996315E-6	IMPLEMENTATION
/* ----------- Public abstract methods ---------- */	WITHOUT_CLASSIFICATION	0.9999814531171819	WITHOUT_CLASSIFICATION	1.854688281803675E-5	IMPLEMENTATION
/* ----------- Public methods with a default implementation ---------- */	WITHOUT_CLASSIFICATION	0.999973700226962	WITHOUT_CLASSIFICATION	2.6299773038025072E-5	IMPLEMENTATION
// Compute meet over all "sources" and compute "destination" basic blocks that should then be processed.  // sources & targets depends on direction of the data flow problem	WITHOUT_CLASSIFICATION	0.9999997994626397	WITHOUT_CLASSIFICATION	2.0053736032056107E-7	IMPLEMENTATION
// If the solution has changed, add "dsts" to the work list. // No duplicates please which is why we have bbset.	WITHOUT_CLASSIFICATION	0.9998991432068316	WITHOUT_CLASSIFICATION	1.0085679316837455E-4	IMPLEMENTATION
/* --------- Protected fields/methods below --------- */	WITHOUT_CLASSIFICATION	0.9999890557157789	WITHOUT_CLASSIFICATION	1.094428422112334E-5	IMPLEMENTATION
// Dataflow problem with which this node is associated // CFG node for which this node contains info.	WITHOUT_CLASSIFICATION	0.9999640545287771	WITHOUT_CLASSIFICATION	3.594547122279111E-5	IMPLEMENTATION
/* -------------- Public fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999930069682318	WITHOUT_CLASSIFICATION	6.993031768249473E-6	IMPLEMENTATION
// ------- Abstract methods without a default implementation -------	WITHOUT_CLASSIFICATION	0.9999074997771926	WITHOUT_CLASSIFICATION	9.250022280747258E-5	IMPLEMENTATION
// ------- Default implementation methods below -------	WITHOUT_CLASSIFICATION	0.9995793805499306	WITHOUT_CLASSIFICATION	4.2061945006940666E-4	IMPLEMENTATION
/* Compute Meet Over All Paths solution for this dataflow problem on the input CFG.     * This implements a standard worklist algorithm. */	WITHOUT_CLASSIFICATION	0.9999552814281848	WITHOUT_CLASSIFICATION	4.4718571815133256E-5	IMPLEMENTATION
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9999561321473253	WITHOUT_CLASSIFICATION	4.3867852674682304E-5	IMPLEMENTATION
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9999561321473253	WITHOUT_CLASSIFICATION	4.3867852674682304E-5	IMPLEMENTATION
/* -------------- Packaged/protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999925793387443	WITHOUT_CLASSIFICATION	7.420661255755538E-6	IMPLEMENTATION
// We want unique ids for dataflow variables	WITHOUT_CLASSIFICATION	0.9998126911594079	WITHOUT_CLASSIFICATION	1.873088405920483E-4	IMPLEMENTATION
/* -------------- Protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999925863967699	WITHOUT_CLASSIFICATION	7.4136032301075415E-6	IMPLEMENTATION
/* -------------- Private fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999936730472307	WITHOUT_CLASSIFICATION	6.3269527691734535E-6	IMPLEMENTATION
// Initialize all flow graph nodes 	WITHOUT_CLASSIFICATION	0.9999334701809588	WITHOUT_CLASSIFICATION	6.652981904125416E-5	IMPLEMENTATION
/* Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses */	WITHOUT_CLASSIFICATION	0.9999999002666871	WITHOUT_CLASSIFICATION	9.973331293301995E-8	IMPLEMENTATION
/* ******************** PUBLIC INTERFACE ******************* */	WITHOUT_CLASSIFICATION	0.9999818697834565	WITHOUT_CLASSIFICATION	1.8130216543588302E-5	IMPLEMENTATION
// Unique ID assigned to this variable	WITHOUT_CLASSIFICATION	0.9990059960684587	WITHOUT_CLASSIFICATION	9.940039315412224E-4	IMPLEMENTATION
// start out with a default RubyObject allocator	WITHOUT_CLASSIFICATION	0.9999963252858206	WITHOUT_CLASSIFICATION	3.6747141794937614E-6	IMPLEMENTATION
// switch to an allocator based on a default constructor	WITHOUT_CLASSIFICATION	0.9999807830799615	WITHOUT_CLASSIFICATION	1.9216920038556662E-5	IMPLEMENTATION
/* ----------- Public Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999845751896046	WITHOUT_CLASSIFICATION	1.54248103953556E-5	IMPLEMENTATION
// class or module	WITHOUT_CLASSIFICATION	0.9998706422732381	WITHOUT_CLASSIFICATION	1.2935772676189166E-4	IMPLEMENTATION
// OUT = UNION(IN(succs))	WITHOUT_CLASSIFICATION	0.9999190229043238	WITHOUT_CLASSIFICATION	8.097709567627427E-5	IMPLEMENTATION
// Traverse the instructions in this basic block in reverse order!	WITHOUT_CLASSIFICATION	0.9999617624638373	WITHOUT_CLASSIFICATION	3.823753616266525E-5	IMPLEMENTATION
// v is defined => It is no longer live before 'i'	WITHOUT_CLASSIFICATION	0.99999903335148	WITHOUT_CLASSIFICATION	9.666485200498115E-7	IMPLEMENTATION
// IN is the same!	WITHOUT_CLASSIFICATION	0.9998310387079802	WITHOUT_CLASSIFICATION	1.6896129201986328E-4	IMPLEMENTATION
// IN changed!	WITHOUT_CLASSIFICATION	0.9996306760242059	WITHOUT_CLASSIFICATION	3.69323975794154E-4	IMPLEMENTATION
/* ---------- Protected / package fields, methods --------- */	WITHOUT_CLASSIFICATION	0.999993203757209	WITHOUT_CLASSIFICATION	6.796242791011472E-6	IMPLEMENTATION
// If 'v' is not live at the instruction site, and it has no side effects, mark it dead!	WITHOUT_CLASSIFICATION	0.9999262869657821	WITHOUT_CLASSIFICATION	7.371303421794993E-5	IMPLEMENTATION
// Do not mark this instruction's operands live if the instruction itself is dead!	WITHOUT_CLASSIFICATION	0.998607869452564	WITHOUT_CLASSIFICATION	0.001392130547436015	IMPLEMENTATION
/* ---------- Private fields, methods --------- */	WITHOUT_CLASSIFICATION	0.99998255328668	WITHOUT_CLASSIFICATION	1.7446713320066838E-5	IMPLEMENTATION
// Variables live at entry of this node // Variables live at exit of node // Temporary set of live variables // Size of the "_in" and "_out" bit sets 	WITHOUT_CLASSIFICATION	0.9998162157420405	WITHOUT_CLASSIFICATION	1.8378425795948126E-4	IMPLEMENTATION
// Used during optimization passes to propagate type and other information	WITHOUT_CLASSIFICATION	0.999971561869436	WITHOUT_CLASSIFICATION	2.8438130563925378E-5	IMPLEMENTATION
// Does this instruction have side effects as a result of its operation // This information is used in optimization phases to impact dead code elimination // and other optimization passes	WITHOUT_CLASSIFICATION	0.999999967116503	WITHOUT_CLASSIFICATION	3.2883497011796635E-8	IMPLEMENTATION
/* --------- "Abstract"/"please-override" methods --------- */	WITHOUT_CLASSIFICATION	0.999978880779335	WITHOUT_CLASSIFICATION	2.111922066489679E-5	IMPLEMENTATION
/* Array of all operands for this instruction */	WITHOUT_CLASSIFICATION	0.9999925038572184	WITHOUT_CLASSIFICATION	7.4961427817200316E-6	IMPLEMENTATION
/* List of all variables used by all operands of this instruction */	WITHOUT_CLASSIFICATION	0.9999901427918005	WITHOUT_CLASSIFICATION	9.857208199538514E-6	IMPLEMENTATION
/*      * This method takes as input a map of operands to their values, and outputs     *     * If the value map provides a value for any of the instruction's operands     * this method is expected to replace the original operands with the simplified values.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify     */	WITHOUT_CLASSIFICATION	0.9999919497401403	WITHOUT_CLASSIFICATION	8.050259859793288E-6	IMPLEMENTATION
// By default, no simplifications!	WITHOUT_CLASSIFICATION	0.9999072825751345	WITHOUT_CLASSIFICATION	9.271742486553785E-5	IMPLEMENTATION
// Can this call lead to ruby code getting modified?   // If we don't know what method we are calling, we assume it can (pessimistic, but safe!) // If we do know the target method, we ask the method itself whether it modifies ruby code	WITHOUT_CLASSIFICATION	0.9868783884797703	WITHOUT_CLASSIFICATION	0.013121611520229831	IMPLEMENTATION
// By default, return instructions cannot be deleted	WITHOUT_CLASSIFICATION	0.9999604237565971	WITHOUT_CLASSIFICATION	3.957624340293746E-5	IMPLEMENTATION
// If true, returns the rest of the array starting at the index	WITHOUT_CLASSIFICATION	0.9999358251219641	WITHOUT_CLASSIFICATION	6.41748780359413E-5	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999719367389059	WITHOUT_CLASSIFICATION	2.806326109399806E-5	IMPLEMENTATION
// Map of label & basic blocks with that label	WITHOUT_CLASSIFICATION	0.9999974097337954	WITHOUT_CLASSIFICATION	2.5902662046899645E-6	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999719367389059	WITHOUT_CLASSIFICATION	2.806326109399806E-5	IMPLEMENTATION
// You can only value-replace atomic values	WITHOUT_CLASSIFICATION	0.9999975149597515	WITHOUT_CLASSIFICATION	2.4850402484762487E-6	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999933794482607	WITHOUT_CLASSIFICATION	6.620551739258573E-6	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999933794482607	WITHOUT_CLASSIFICATION	6.620551739258573E-6	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999933794482607	WITHOUT_CLASSIFICATION	6.620551739258573E-6	IMPLEMENTATION
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999872074926257	WITHOUT_CLASSIFICATION	1.2792507374252438E-5	IMPLEMENTATION
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999872074926257	WITHOUT_CLASSIFICATION	1.2792507374252438E-5	IMPLEMENTATION
// The operand that this attribute targets //    DEFERRED //    AttributeValue _val;       // Attribute value	WITHOUT_CLASSIFICATION	0.9999756766841387	WITHOUT_CLASSIFICATION	2.4323315861299475E-5	IMPLEMENTATION
// Arrays, Ranges, etc. are compound values // Variables, fixnums, floats, etc. are "atomic" values	WITHOUT_CLASSIFICATION	0.9999978492667597	WITHOUT_CLASSIFICATION	2.1507332402932092E-6	IMPLEMENTATION
// Get the target class of this operand, if we know it!	WITHOUT_CLASSIFICATION	0.9999445473548886	WITHOUT_CLASSIFICATION	5.5452645111474043E-5	IMPLEMENTATION
// The following constants capture pre-known static call sites -- used to implement ruby internals	WITHOUT_CLASSIFICATION	0.9949693743163956	WITHOUT_CLASSIFICATION	0.005030625683604254	IMPLEMENTATION
/* Nothing to do by default */	WITHOUT_CLASSIFICATION	0.999999616877552	WITHOUT_CLASSIFICATION	3.831224478935512E-7	IMPLEMENTATION
// Map of label & basic blocks which are waiting for a bb with that label	WITHOUT_CLASSIFICATION	0.9999998022888786	WITHOUT_CLASSIFICATION	1.9771112121880315E-7	IMPLEMENTATION
// Init before building basic blocks below!	WITHOUT_CLASSIFICATION	0.9999583921321952	WITHOUT_CLASSIFICATION	4.16078678048931E-5	IMPLEMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999927208252372	WITHOUT_CLASSIFICATION	7.279174762869357E-6	IMPLEMENTATION
// Scope (method/closure) to which this cfg belongs // Entry BB -- dummy // Exit BB -- dummy // The actual graph // Next available basic block id	WITHOUT_CLASSIFICATION	0.9998915022201345	WITHOUT_CLASSIFICATION	1.0849777986548063E-4	IMPLEMENTATION
// Jump instruction bbs dont add an edge to the succeeding bb by default	WITHOUT_CLASSIFICATION	0.9999865528584245	WITHOUT_CLASSIFICATION	1.3447141575490508E-5	IMPLEMENTATION
// Add forward ref. edges	WITHOUT_CLASSIFICATION	0.9999624062875827	WITHOUT_CLASSIFICATION	3.759371241735599E-5	IMPLEMENTATION
// currBB cannot be null!	WITHOUT_CLASSIFICATION	0.9999925369934973	WITHOUT_CLASSIFICATION	7.463006502759971E-6	IMPLEMENTATION
// Add a forward reference from tgt -> currBB	WITHOUT_CLASSIFICATION	0.9999990120693565	WITHOUT_CLASSIFICATION	9.879306434417E-7	IMPLEMENTATION
// root-level logic	WITHOUT_CLASSIFICATION	0.999673308098577	WITHOUT_CLASSIFICATION	3.266919014230055E-4	IMPLEMENTATION
// root-level methods	WITHOUT_CLASSIFICATION	0.9999259491169729	WITHOUT_CLASSIFICATION	7.405088302711182E-5	IMPLEMENTATION
// root-level classes	WITHOUT_CLASSIFICATION	0.9999666256761048	WITHOUT_CLASSIFICATION	3.337432389510056E-5	IMPLEMENTATION
//        case 4: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); //            break; //        case 5: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); //            break;	WITHOUT_CLASSIFICATION	0.9998391479611892	WITHOUT_CLASSIFICATION	1.6085203881072404E-4	IMPLEMENTATION
// load receiver	WITHOUT_CLASSIFICATION	0.9995928753523858	WITHOUT_CLASSIFICATION	4.07124647614206E-4	IMPLEMENTATION
// load receiver	WITHOUT_CLASSIFICATION	0.9995928753523858	WITHOUT_CLASSIFICATION	4.07124647614206E-4	IMPLEMENTATION
// receiver	WITHOUT_CLASSIFICATION	0.999621142470493	WITHOUT_CLASSIFICATION	3.7885752950692157E-4	IMPLEMENTATION
// load arguments	WITHOUT_CLASSIFICATION	0.9996986251105557	WITHOUT_CLASSIFICATION	3.0137488944429006E-4	IMPLEMENTATION
// load arguments	WITHOUT_CLASSIFICATION	0.9996986251105557	WITHOUT_CLASSIFICATION	3.0137488944429006E-4	IMPLEMENTATION
//        case 4: //        case 5:	WITHOUT_CLASSIFICATION	0.9998466220537107	WITHOUT_CLASSIFICATION	1.533779462893111E-4	IMPLEMENTATION
// Object[] args	WITHOUT_CLASSIFICATION	0.9996643649179124	WITHOUT_CLASSIFICATION	3.3563508208757934E-4	IMPLEMENTATION
// load handle	WITHOUT_CLASSIFICATION	0.9956316059771898	WITHOUT_CLASSIFICATION	0.0043683940228101134	IMPLEMENTATION
// args array	WITHOUT_CLASSIFICATION	0.9997280890775047	WITHOUT_CLASSIFICATION	2.7191092249535066E-4	IMPLEMENTATION
// i'th argument	WITHOUT_CLASSIFICATION	0.9999069860313875	WITHOUT_CLASSIFICATION	9.301396861243527E-5	IMPLEMENTATION
// invoke specific arity version	WITHOUT_CLASSIFICATION	0.9998326601063892	WITHOUT_CLASSIFICATION	1.6733989361080877E-4	IMPLEMENTATION
// Object arg0	WITHOUT_CLASSIFICATION	0.9997344651222012	WITHOUT_CLASSIFICATION	2.655348777988336E-4	IMPLEMENTATION
// useful for code completion inside the IRB	WITHOUT_CLASSIFICATION	0.9999283760618418	WITHOUT_CLASSIFICATION	7.162393815826909E-5	IMPLEMENTATION
// No editing before startPos	WITHOUT_CLASSIFICATION	0.9999831929414574	WITHOUT_CLASSIFICATION	1.6807058542621048E-5	IMPLEMENTATION
// no silly ticks!	WITHOUT_CLASSIFICATION	0.9997503494158979	WITHOUT_CLASSIFICATION	2.496505841020689E-4	IMPLEMENTATION
// no candidates? Fail.	WITHOUT_CLASSIFICATION	0.9999575611875733	WITHOUT_CLASSIFICATION	4.2438812426775454E-5	IMPLEMENTATION
// at end	WITHOUT_CLASSIFICATION	0.999961121297348	WITHOUT_CLASSIFICATION	3.887870265192268E-5	IMPLEMENTATION
// undo check	WITHOUT_CLASSIFICATION	0.9996401870453872	WITHOUT_CLASSIFICATION	3.5981295461295654E-4	IMPLEMENTATION
// Explicit reference to these vars as symbols...	WITHOUT_CLASSIFICATION	0.9999870934519307	WITHOUT_CLASSIFICATION	1.2906548069221817E-5	IMPLEMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999927208252372	WITHOUT_CLASSIFICATION	7.279174762869357E-6	IMPLEMENTATION
//\t\n\"\\'`@$><=;|&{(	WITHOUT_CLASSIFICATION	0.999782952175292	WITHOUT_CLASSIFICATION	2.1704782470798146E-4	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.9998692751826649	WITHOUT_CLASSIFICATION	1.307248173350554E-4	IMPLEMENTATION
// no check for '*'	WITHOUT_CLASSIFICATION	0.9998074010831519	WITHOUT_CLASSIFICATION	1.9259891684806106E-4	IMPLEMENTATION
// no check for '*'	WITHOUT_CLASSIFICATION	0.9998074010831519	WITHOUT_CLASSIFICATION	1.9259891684806106E-4	IMPLEMENTATION
// Binding provided for scope, use it	WITHOUT_CLASSIFICATION	0.9998212789005683	WITHOUT_CLASSIFICATION	1.787210994317056E-4	IMPLEMENTATION
// this is ensured by the callers	WITHOUT_CLASSIFICATION	0.9999171680212012	WITHOUT_CLASSIFICATION	8.283197879881269E-5	IMPLEMENTATION
// no binding, just eval in "current" frame (caller's frame)	WITHOUT_CLASSIFICATION	0.9999982484088066	WITHOUT_CLASSIFICATION	1.751591193376122E-6	IMPLEMENTATION
// restore position	WITHOUT_CLASSIFICATION	0.9998568580509422	WITHOUT_CLASSIFICATION	1.4314194905791803E-4	IMPLEMENTATION
/* Something like cvar_cbase() from eval.c, factored out for the benefit     * of all the classvar-related node evaluations */	WITHOUT_CLASSIFICATION	0.9999973103271595	WITHOUT_CLASSIFICATION	2.689672840488186E-6	IMPLEMENTATION
// Used by the compiler to simplify arg processing	WITHOUT_CLASSIFICATION	0.9999769558983553	WITHOUT_CLASSIFICATION	2.3044101644688592E-5	IMPLEMENTATION
// JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace	WITHOUT_CLASSIFICATION	0.9999961291838733	WITHOUT_CLASSIFICATION	3.870816126825644E-6	IMPLEMENTATION
// MRI does similar thing on MacOS X with 'EditLine wrapper'.	WITHOUT_CLASSIFICATION	0.999619433057288	WITHOUT_CLASSIFICATION	3.8056694271201705E-4	IMPLEMENTATION
// We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)	WITHOUT_CLASSIFICATION	0.9999760819928369	WITHOUT_CLASSIFICATION	2.3918007163062248E-5	IMPLEMENTATION
// JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)	WITHOUT_CLASSIFICATION	0.9999971341363363	WITHOUT_CLASSIFICATION	2.8658636637021187E-6	IMPLEMENTATION
// not overridden, let's go	WITHOUT_CLASSIFICATION	0.9992796511182995	WITHOUT_CLASSIFICATION	7.203488817004411E-4	IMPLEMENTATION
/* Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8() */	WITHOUT_CLASSIFICATION	0.999923619837766	WITHOUT_CLASSIFICATION	7.638016223407345E-5	IMPLEMENTATION
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.8482675103362998	WITHOUT_CLASSIFICATION	0.15173248966370015	IMPLEMENTATION
// Complete using a Proc object	WITHOUT_CLASSIFICATION	0.9999619755112622	WITHOUT_CLASSIFICATION	3.802448873774819E-5	IMPLEMENTATION
// clear basename so it's anonymous when raising	WITHOUT_CLASSIFICATION	0.9999678861485073	WITHOUT_CLASSIFICATION	3.211385149262434E-5	IMPLEMENTATION
// These are not really used by timeout, but exposed for compatibility	WITHOUT_CLASSIFICATION	0.9999804075461551	WITHOUT_CLASSIFICATION	1.9592453844907112E-5	IMPLEMENTATION
// Timeout module methods	WITHOUT_CLASSIFICATION	0.9999131383382078	WITHOUT_CLASSIFICATION	8.686166179212598E-5	IMPLEMENTATION
// Toplevel defines	WITHOUT_CLASSIFICATION	0.9996262168560899	WITHOUT_CLASSIFICATION	3.737831439101399E-4	IMPLEMENTATION
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999939516302951	WITHOUT_CLASSIFICATION	6.048369704905588E-6	IMPLEMENTATION
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999936902624675	WITHOUT_CLASSIFICATION	6.309737532508019E-6	IMPLEMENTATION
// if it's the exception we're expecting	WITHOUT_CLASSIFICATION	0.9999423962943439	WITHOUT_CLASSIFICATION	5.760370565615124E-5	IMPLEMENTATION
// and we were given a specific exception	WITHOUT_CLASSIFICATION	0.9996993322239436	WITHOUT_CLASSIFICATION	3.006677760564089E-4	IMPLEMENTATION
// otherwise, rethrow	WITHOUT_CLASSIFICATION	0.9999416683547958	WITHOUT_CLASSIFICATION	5.8331645204204084E-5	IMPLEMENTATION
// // Remove the Executor task now, to avoid cancelled tasks accumulating // until an Executor thread can schedule and remove them //	WITHOUT_CLASSIFICATION	0.9998989835436991	WITHOUT_CLASSIFICATION	1.0101645630087906E-4	IMPLEMENTATION
// // If the task was scheduled, wait for it to finish before polling // for the exception it would have thrown. //	WITHOUT_CLASSIFICATION	0.9994271476810268	WITHOUT_CLASSIFICATION	5.728523189733233E-4	IMPLEMENTATION
// NetProtocolBufferedIO	WITHOUT_CLASSIFICATION	0.9999362290526616	WITHOUT_CLASSIFICATION	6.377094733850302E-5	IMPLEMENTATION
/* When a length is given, read_string acts like get_bytes */	WITHOUT_CLASSIFICATION	0.9998718883775896	WITHOUT_CLASSIFICATION	1.28111622410373E-4	IMPLEMENTATION
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9996019983698345	WITHOUT_CLASSIFICATION	3.9800163016547995E-4	IMPLEMENTATION
// ARRAY and STRUCT are only used internally	WITHOUT_CLASSIFICATION	0.9999906055974251	WITHOUT_CLASSIFICATION	9.39440257480681E-6	IMPLEMENTATION
// If no release method is defined, then memory leaks will result.	WITHOUT_CLASSIFICATION	0.9999887575492695	WITHOUT_CLASSIFICATION	1.1242450730517808E-5	IMPLEMENTATION
/*     * This variant of newStruct is called from StructLayoutBuilder     */	WITHOUT_CLASSIFICATION	0.9999999226865985	WITHOUT_CLASSIFICATION	7.731340144957903E-8	IMPLEMENTATION
// This also handles unsigned int -> negative signed int conversion	WITHOUT_CLASSIFICATION	0.9999974240353867	WITHOUT_CLASSIFICATION	2.575964613275884E-6	IMPLEMENTATION
// Windows is LLP64	WITHOUT_CLASSIFICATION	0.9998689475848438	WITHOUT_CLASSIFICATION	1.3105241515615928E-4	IMPLEMENTATION
// Older JDK on linux map 'c' to 'libc.so' which doesn't work	WITHOUT_CLASSIFICATION	0.9999891517663816	WITHOUT_CLASSIFICATION	1.0848233618353322E-5	IMPLEMENTATION
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999817963162169	WITHOUT_CLASSIFICATION	1.8203683783128306E-5	IMPLEMENTATION
// $blah	WITHOUT_CLASSIFICATION	0.9999914754825183	WITHOUT_CLASSIFICATION	8.524517481776458E-6	IMPLEMENTATION
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9996019983698345	WITHOUT_CLASSIFICATION	3.9800163016547995E-4	IMPLEMENTATION
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999958472091312	WITHOUT_CLASSIFICATION	4.152790868845916E-6	IMPLEMENTATION
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999817963162169	WITHOUT_CLASSIFICATION	1.8203683783128306E-5	IMPLEMENTATION
// // Keep a reference to the temporary memory in the cache so it does // not get freed by the GC until the struct is freed //	WITHOUT_CLASSIFICATION	0.9999729162574057	WITHOUT_CLASSIFICATION	2.70837425942664E-5	IMPLEMENTATION
// Add Pointer::NULL as a constant	WITHOUT_CLASSIFICATION	0.9999541241139196	WITHOUT_CLASSIFICATION	4.5875886080541504E-5	IMPLEMENTATION
// Create the ordered list of field names from the map	WITHOUT_CLASSIFICATION	0.99999587510899	WITHOUT_CLASSIFICATION	4.124891010059637E-6	IMPLEMENTATION
// Assemble a [ :name, offset ] array	WITHOUT_CLASSIFICATION	0.9999519118064072	WITHOUT_CLASSIFICATION	4.8088193592781126E-5	IMPLEMENTATION
//                case FLOAT:	WITHOUT_CLASSIFICATION	0.9999016696456626	WITHOUT_CLASSIFICATION	9.833035433728307E-5	IMPLEMENTATION
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999789566177719	WITHOUT_CLASSIFICATION	2.104338222806283E-5	IMPLEMENTATION
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999789566177719	WITHOUT_CLASSIFICATION	2.104338222806283E-5	IMPLEMENTATION
// No auto cleanup needed	WITHOUT_CLASSIFICATION	0.637265900735317	IMPLEMENTATION	0.36273409926468303	WITHOUT_CLASSIFICATION
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9997730317728798	WITHOUT_CLASSIFICATION	2.269682271202693E-4	IMPLEMENTATION
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999941022575908	WITHOUT_CLASSIFICATION	5.897742409197198E-6	IMPLEMENTATION
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999941022575908	WITHOUT_CLASSIFICATION	5.897742409197198E-6	IMPLEMENTATION
/*         * If there is exactly _one_ callback argument to the function,         * then a block can be given and automatically subsituted for the callback         * parameter.         */	WITHOUT_CLASSIFICATION	0.9999999510641913	WITHOUT_CLASSIFICATION	4.893580876988102E-8	IMPLEMENTATION
/*------------------------------------------------------------------------*/	WITHOUT_CLASSIFICATION	0.9996611722072354	WITHOUT_CLASSIFICATION	3.388277927646339E-4	IMPLEMENTATION
//AF_INET	WITHOUT_CLASSIFICATION	0.9999709824961172	WITHOUT_CLASSIFICATION	2.9017503882815074E-5	IMPLEMENTATION
//AF_INET	WITHOUT_CLASSIFICATION	0.9999709824961172	WITHOUT_CLASSIFICATION	2.9017503882815074E-5	IMPLEMENTATION
// RubyUNIXServer	WITHOUT_CLASSIFICATION	0.9996200707317198	WITHOUT_CLASSIFICATION	3.7992926828032465E-4	IMPLEMENTATION
// line 321	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// // Set up for potentially fast-int operations //	WITHOUT_CLASSIFICATION	0.9999738305143864	WITHOUT_CLASSIFICATION	2.6169485613574085E-5	IMPLEMENTATION
// // Hook up the MemoryPointer class if its not already there //	WITHOUT_CLASSIFICATION	0.9998883485933542	WITHOUT_CLASSIFICATION	1.1165140664581146E-4	IMPLEMENTATION
// This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and // (2) Socket.getChannel() seems to return null in some cases	WITHOUT_CLASSIFICATION	0.9999998694987521	WITHOUT_CLASSIFICATION	1.3050124785164394E-7	IMPLEMENTATION
// no UNIXSockets on Windows	WITHOUT_CLASSIFICATION	0.9999133032749483	WITHOUT_CLASSIFICATION	8.669672505173774E-5	IMPLEMENTATION
// Sockaddr_un has different structure on different platforms. // See JRUBY-2213 for more details.	WITHOUT_CLASSIFICATION	0.9991870596829654	WITHOUT_CLASSIFICATION	8.1294031703454E-4	IMPLEMENTATION
// There is something valid in the sun_path component	WITHOUT_CLASSIFICATION	0.9999984281550672	WITHOUT_CLASSIFICATION	1.5718449327797625E-6	IMPLEMENTATION
// RubyIPSocket	WITHOUT_CLASSIFICATION	0.9996200707317198	WITHOUT_CLASSIFICATION	3.7992926828032465E-4	IMPLEMENTATION
// host is nil or the empty string, bind to INADDR_ANY	WITHOUT_CLASSIFICATION	0.9999458846403676	WITHOUT_CLASSIFICATION	5.4115359632433635E-5	IMPLEMENTATION
// host and port given	WITHOUT_CLASSIFICATION	0.9996765391378264	WITHOUT_CLASSIFICATION	3.234608621735572E-4	IMPLEMENTATION
// RubyUDPSocket	WITHOUT_CLASSIFICATION	0.9996200707317198	WITHOUT_CLASSIFICATION	3.7992926828032465E-4	IMPLEMENTATION
// By default we always reverse lookup unless do_not_reverse_lookup set.	WITHOUT_CLASSIFICATION	0.9999572821683912	WITHOUT_CLASSIFICATION	4.271783160875969E-5	IMPLEMENTATION
// make sure descriptor is registered	WITHOUT_CLASSIFICATION	0.9999319400620486	WITHOUT_CLASSIFICATION	6.80599379515129E-5	IMPLEMENTATION
// continue with normal initialization	WITHOUT_CLASSIFICATION	0.9978521019460549	WITHOUT_CLASSIFICATION	0.0021478980539450018	IMPLEMENTATION
// recv returns nil on EOF	WITHOUT_CLASSIFICATION	0.9999166337883311	WITHOUT_CLASSIFICATION	8.336621166895951E-5	IMPLEMENTATION
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.997625083230659	WITHOUT_CLASSIFICATION	0.0023749167693410352	IMPLEMENTATION
// RubyBasicSocket	WITHOUT_CLASSIFICATION	0.9996200707317198	WITHOUT_CLASSIFICATION	3.7992926828032465E-4	IMPLEMENTATION
// we don't have to define any that we don't support; see socket.c	WITHOUT_CLASSIFICATION	0.9999874158993344	WITHOUT_CLASSIFICATION	1.258410066572311E-5	IMPLEMENTATION
// mandatory constants we haven't implemented	WITHOUT_CLASSIFICATION	0.9373795385353998	WITHOUT_CLASSIFICATION	0.06262046146460017	IMPLEMENTATION
// constants webrick crashes without	WITHOUT_CLASSIFICATION	0.9999717964869563	WITHOUT_CLASSIFICATION	2.820351304363574E-5	IMPLEMENTATION
// More constants needed by specs	WITHOUT_CLASSIFICATION	0.9782998644904041	WITHOUT_CLASSIFICATION	0.021700135509595923	IMPLEMENTATION
// normal file descriptor..try to work with it	WITHOUT_CLASSIFICATION	0.9996167144208434	WITHOUT_CLASSIFICATION	3.832855791565066E-4	IMPLEMENTATION
// AF_INET	WITHOUT_CLASSIFICATION	0.9999914754825183	WITHOUT_CLASSIFICATION	8.524517481776458E-6	IMPLEMENTATION
// 255.255.255.255	WITHOUT_CLASSIFICATION	0.9996200707317198	WITHOUT_CLASSIFICATION	3.7992926828032465E-4	IMPLEMENTATION
// 0.0.0.0	WITHOUT_CLASSIFICATION	0.9999914754825183	WITHOUT_CLASSIFICATION	8.524517481776458E-6	IMPLEMENTATION
//def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)	WITHOUT_CLASSIFICATION	0.9996474592099162	WITHOUT_CLASSIFICATION	3.525407900838616E-4	IMPLEMENTATION
// line 323	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999565386922938	WITHOUT_CLASSIFICATION	4.346130770609211E-5	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999565386922938	WITHOUT_CLASSIFICATION	4.346130770609211E-5	IMPLEMENTATION
// ok, it's a socket...set values accordingly // just using AF_INET since we can't tell from SocketChannel...	WITHOUT_CLASSIFICATION	0.9999999138774701	WITHOUT_CLASSIFICATION	8.612252986693079E-8	IMPLEMENTATION
// datagram, set accordingly // again, AF_INET	WITHOUT_CLASSIFICATION	0.9999395104775506	WITHOUT_CLASSIFICATION	6.048952244950915E-5	IMPLEMENTATION
//IRubyObject family = args[2];	WITHOUT_CLASSIFICATION	0.9995697844310018	WITHOUT_CLASSIFICATION	4.3021556899831435E-4	IMPLEMENTATION
// When Socket::AI_PASSIVE and host is nil, return 'any' address. 	WITHOUT_CLASSIFICATION	0.9998850712226754	WITHOUT_CLASSIFICATION	1.1492877732461729E-4	IMPLEMENTATION
// The value of 1 is for Socket::AI_PASSIVE.	WITHOUT_CLASSIFICATION	0.9999972414425525	WITHOUT_CLASSIFICATION	2.75855744742728E-6	IMPLEMENTATION
// RubySocket	WITHOUT_CLASSIFICATION	0.9996200707317198	WITHOUT_CLASSIFICATION	3.7992926828032465E-4	IMPLEMENTATION
// numeric host, use it for port	WITHOUT_CLASSIFICATION	0.9998148606578616	WITHOUT_CLASSIFICATION	1.8513934213835835E-4	IMPLEMENTATION
//            e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9998844346051682	WITHOUT_CLASSIFICATION	1.1556539483184403E-4	IMPLEMENTATION
// we were woken up without being selected...poll for thread events and go back to sleep	WITHOUT_CLASSIFICATION	0.9999883691525359	WITHOUT_CLASSIFICATION	1.1630847464111116E-5	IMPLEMENTATION
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9995315964042651	WITHOUT_CLASSIFICATION	4.684035957348718E-4	IMPLEMENTATION
// no connection immediately accepted, let them try again	WITHOUT_CLASSIFICATION	0.9998134959154238	WITHOUT_CLASSIFICATION	1.8650408457617296E-4	IMPLEMENTATION
// do nothing, just exit	WITHOUT_CLASSIFICATION	0.9999834307897791	WITHOUT_CLASSIFICATION	1.6569210220911337E-5	IMPLEMENTATION
//nativeThread.setPriority(priority);	WITHOUT_CLASSIFICATION	0.9996611722072354	WITHOUT_CLASSIFICATION	3.388277927646339E-4	IMPLEMENTATION
// set thread context JRuby classloader here, for Ruby-owned thread	WITHOUT_CLASSIFICATION	0.9999573229170193	WITHOUT_CLASSIFICATION	4.267708298057363E-5	IMPLEMENTATION
// uber-ThreadKill catcher, since it should always just mean "be dead"	WITHOUT_CLASSIFICATION	0.9999867837876097	WITHOUT_CLASSIFICATION	1.3216212390160926E-5	IMPLEMENTATION
// Call the thread's code	WITHOUT_CLASSIFICATION	0.9999418065838038	WITHOUT_CLASSIFICATION	5.819341619627778E-5	IMPLEMENTATION
// Someone called exit!, so we need to kill the main thread	WITHOUT_CLASSIFICATION	0.9997376975236801	WITHOUT_CLASSIFICATION	2.623024763198204E-4	IMPLEMENTATION
// restore context classloader, in case we're using a thread pool	WITHOUT_CLASSIFICATION	0.9999713211510779	WITHOUT_CLASSIFICATION	2.8678848922070148E-5	IMPLEMENTATION
// be dead	WITHOUT_CLASSIFICATION	0.9999966032627712	WITHOUT_CLASSIFICATION	3.3967372288897183E-6	IMPLEMENTATION
// loop until a context is available, to clean up softrefs that might have been collected	WITHOUT_CLASSIFICATION	0.9998553969137972	WITHOUT_CLASSIFICATION	1.4460308620266137E-4	IMPLEMENTATION
// all threads in ruby thread group plus main thread	WITHOUT_CLASSIFICATION	0.9999510213748264	WITHOUT_CLASSIFICATION	4.897862517365071E-5	IMPLEMENTATION
// thread is not alive, skip it	WITHOUT_CLASSIFICATION	0.9965733537883058	WITHOUT_CLASSIFICATION	0.003426646211694227	IMPLEMENTATION
// future is done or cancelled, skip it	WITHOUT_CLASSIFICATION	0.9999472316531334	WITHOUT_CLASSIFICATION	5.276834686663018E-5	IMPLEMENTATION
// first, check if the sender has unreceived mail	WITHOUT_CLASSIFICATION	0.9999488912308485	WITHOUT_CLASSIFICATION	5.110876915161376E-5	IMPLEMENTATION
// then deliver mail to the target	WITHOUT_CLASSIFICATION	0.9999635350507368	WITHOUT_CLASSIFICATION	3.6464949263124725E-5	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999458371282413	WITHOUT_CLASSIFICATION	5.416287175879015E-5	IMPLEMENTATION
// Define a second version that doesn't take a block, so we have unique code paths for both cases.	WITHOUT_CLASSIFICATION	0.9999931106787519	WITHOUT_CLASSIFICATION	6.889321248190054E-6	IMPLEMENTATION
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9997769522722938	WITHOUT_CLASSIFICATION	2.230477277061734E-4	IMPLEMENTATION
// main body	WITHOUT_CLASSIFICATION	0.9998301071182336	WITHOUT_CLASSIFICATION	1.698928817664217E-4	IMPLEMENTATION
// return jump handling	WITHOUT_CLASSIFICATION	0.999925754148758	WITHOUT_CLASSIFICATION	7.424585124196402E-5	IMPLEMENTATION
// finally	WITHOUT_CLASSIFICATION	0.9999923026918223	WITHOUT_CLASSIFICATION	7.697308177771416E-6	IMPLEMENTATION
// return result if we're still good	WITHOUT_CLASSIFICATION	0.9999581001430146	WITHOUT_CLASSIFICATION	4.189985698546268E-5	IMPLEMENTATION
// redo jump handling	WITHOUT_CLASSIFICATION	0.9998519729105318	WITHOUT_CLASSIFICATION	1.4802708946810476E-4	IMPLEMENTATION
// clear the redo	WITHOUT_CLASSIFICATION	0.9997715378334187	WITHOUT_CLASSIFICATION	2.2846216658145037E-4	IMPLEMENTATION
// get runtime, create jump error, and throw it	WITHOUT_CLASSIFICATION	0.9996708223244003	WITHOUT_CLASSIFICATION	3.291776755997157E-4	IMPLEMENTATION
// throw redo error if we're still good	WITHOUT_CLASSIFICATION	0.9986016723490836	WITHOUT_CLASSIFICATION	0.0013983276509163581	IMPLEMENTATION
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9998095027280021	WITHOUT_CLASSIFICATION	1.90497271998036E-4	IMPLEMENTATION
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.999081899839224	WITHOUT_CLASSIFICATION	9.181001607759716E-4	IMPLEMENTATION
// No required specified, check actual number of required args	WITHOUT_CLASSIFICATION	0.9997823950484054	WITHOUT_CLASSIFICATION	2.176049515946478E-4	IMPLEMENTATION
// actual required is less than 3, so we use specific arity	WITHOUT_CLASSIFICATION	0.9991922192557963	WITHOUT_CLASSIFICATION	8.077807442037726E-4	IMPLEMENTATION
// actual required is greater than 3, raise error (we don't support actual required > 3)	WITHOUT_CLASSIFICATION	0.9889038638993745	WITHOUT_CLASSIFICATION	0.011096136100625582	IMPLEMENTATION
// simple path, no multimethod	WITHOUT_CLASSIFICATION	0.9999669239839828	WITHOUT_CLASSIFICATION	3.307601601713724E-5	IMPLEMENTATION
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9994162210104093	WITHOUT_CLASSIFICATION	5.837789895907625E-4	IMPLEMENTATION
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9994162210104093	WITHOUT_CLASSIFICATION	5.837789895907625E-4	IMPLEMENTATION
// normal all-rest method	WITHOUT_CLASSIFICATION	0.9995710293462895	WITHOUT_CLASSIFICATION	4.289706537104673E-4	IMPLEMENTATION
// for zero, one, two, three arities, JavaMethod.JavaMethod*.call(...IRubyObject[] args...) will check	WITHOUT_CLASSIFICATION	0.9999800509942824	WITHOUT_CLASSIFICATION	1.9949005717648426E-5	IMPLEMENTATION
// promise to implement zero to N	WITHOUT_CLASSIFICATION	0.995344610953982	WITHOUT_CLASSIFICATION	0.004655389046018028	IMPLEMENTATION
// return	WITHOUT_CLASSIFICATION	0.9999957599927334	WITHOUT_CLASSIFICATION	4.240007266633947E-6	IMPLEMENTATION
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999956299157156	WITHOUT_CLASSIFICATION	4.370084284456846E-6	IMPLEMENTATION
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999377515375125	WITHOUT_CLASSIFICATION	6.2248462487427E-5	IMPLEMENTATION
// confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999765901148798	WITHOUT_CLASSIFICATION	2.3409885120072673E-5	IMPLEMENTATION
// confirm maximum not greater than optional	WITHOUT_CLASSIFICATION	0.9937742015698676	WITHOUT_CLASSIFICATION	0.006225798430132359	IMPLEMENTATION
// Raise an error if arity does not match requirements	WITHOUT_CLASSIFICATION	0.9997992014416225	WITHOUT_CLASSIFICATION	2.007985583774301E-4	IMPLEMENTATION
// tc	WITHOUT_CLASSIFICATION	0.9999914754825183	WITHOUT_CLASSIFICATION	8.524517481776458E-6	IMPLEMENTATION
// self // name	WITHOUT_CLASSIFICATION	0.9993786382235074	WITHOUT_CLASSIFICATION	6.213617764925824E-4	IMPLEMENTATION
// no args	WITHOUT_CLASSIFICATION	0.9999948733619141	WITHOUT_CLASSIFICATION	5.1266380858799505E-6	IMPLEMENTATION
// variable args with block	WITHOUT_CLASSIFICATION	0.9998604735011521	WITHOUT_CLASSIFICATION	1.3952649884788824E-4	IMPLEMENTATION
// variable args no block, load null block	WITHOUT_CLASSIFICATION	0.9999193265489064	WITHOUT_CLASSIFICATION	8.06734510935834E-5	IMPLEMENTATION
// zero args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999483027335422	WITHOUT_CLASSIFICATION	5.1697266457851514E-5	IMPLEMENTATION
// one arg with block	WITHOUT_CLASSIFICATION	0.9990362479044566	WITHOUT_CLASSIFICATION	9.637520955434708E-4	IMPLEMENTATION
// one arg, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.999924860422152	WITHOUT_CLASSIFICATION	7.51395778479872E-5	IMPLEMENTATION
// two args with block	WITHOUT_CLASSIFICATION	0.9998459347104327	WITHOUT_CLASSIFICATION	1.5406528956733305E-4	IMPLEMENTATION
// two args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.999884492701144	WITHOUT_CLASSIFICATION	1.1550729885598652E-4	IMPLEMENTATION
// three args with block	WITHOUT_CLASSIFICATION	0.9999178556198335	WITHOUT_CLASSIFICATION	8.214438016657649E-5	IMPLEMENTATION
// three args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999384150402292	WITHOUT_CLASSIFICATION	6.158495977083725E-5	IMPLEMENTATION
// load block if it accepts block	WITHOUT_CLASSIFICATION	0.9999194439386262	WITHOUT_CLASSIFICATION	8.055606137377253E-5	IMPLEMENTATION
// all other arg cases with block	WITHOUT_CLASSIFICATION	0.9985535065730897	WITHOUT_CLASSIFICATION	0.0014464934269102943	IMPLEMENTATION
// all other arg cases without block	WITHOUT_CLASSIFICATION	0.9991193173330323	WITHOUT_CLASSIFICATION	8.806826669678447E-4	IMPLEMENTATION
// one arg, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999912981141613	WITHOUT_CLASSIFICATION	8.701885838693582E-6	IMPLEMENTATION
// two args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999866226662854	WITHOUT_CLASSIFICATION	1.3377333714766032E-5	IMPLEMENTATION
// three args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999928679547916	WITHOUT_CLASSIFICATION	7.132045208364584E-6	IMPLEMENTATION
// load target for invocations	WITHOUT_CLASSIFICATION	0.9999825746459968	WITHOUT_CLASSIFICATION	1.7425354003198446E-5	IMPLEMENTATION
// load receiver as original type for virtual invocation	WITHOUT_CLASSIFICATION	0.9999464655749597	WITHOUT_CLASSIFICATION	5.353442504039674E-5	IMPLEMENTATION
// static invocation	WITHOUT_CLASSIFICATION	0.9997045518997234	WITHOUT_CLASSIFICATION	2.9544810027655103E-4	IMPLEMENTATION
// virtual invocation	WITHOUT_CLASSIFICATION	0.999823765506397	WITHOUT_CLASSIFICATION	1.7623449360299118E-4	IMPLEMENTATION
// void return type, so we need to load a nil for returning below	WITHOUT_CLASSIFICATION	0.9999836115582545	WITHOUT_CLASSIFICATION	1.6388441745388264E-5	IMPLEMENTATION
// normal finally and exit	WITHOUT_CLASSIFICATION	0.9998396267349042	WITHOUT_CLASSIFICATION	1.6037326509585554E-4	IMPLEMENTATION
// promise to implement one to N	WITHOUT_CLASSIFICATION	0.9932566917636018	WITHOUT_CLASSIFICATION	0.006743308236398237	IMPLEMENTATION
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.999081899839224	WITHOUT_CLASSIFICATION	9.181001607759716E-4	IMPLEMENTATION
// these are only needed if we have a non-noop call config	WITHOUT_CLASSIFICATION	0.9529151023483629	WITHOUT_CLASSIFICATION	0.04708489765163716	IMPLEMENTATION
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9995697765246312	WITHOUT_CLASSIFICATION	4.302234753688413E-4	IMPLEMENTATION
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9995697765246312	WITHOUT_CLASSIFICATION	4.302234753688413E-4	IMPLEMENTATION
// singleton classes don't get their own visibility domain	WITHOUT_CLASSIFICATION	0.9999949092410809	WITHOUT_CLASSIFICATION	5.09075891907687E-6	IMPLEMENTATION
// For visibility we need real meta class and not anonymous one from class << self	WITHOUT_CLASSIFICATION	0.9976221807202968	WITHOUT_CLASSIFICATION	0.0023778192797031792	IMPLEMENTATION
// SimpleInvocationMethod	WITHOUT_CLASSIFICATION	0.9999362290526616	WITHOUT_CLASSIFICATION	6.377094733850302E-5	IMPLEMENTATION
// never reached	WITHOUT_CLASSIFICATION	0.9956720854679185	WITHOUT_CLASSIFICATION	0.00432791453208151	IMPLEMENTATION
// promise to implement N with block	WITHOUT_CLASSIFICATION	0.9895573124085816	WITHOUT_CLASSIFICATION	0.010442687591418372	IMPLEMENTATION
// promise to implement zero to N with block	WITHOUT_CLASSIFICATION	0.99237371857511	WITHOUT_CLASSIFICATION	0.007626281424889979	IMPLEMENTATION
// promise to implement one to N with block	WITHOUT_CLASSIFICATION	0.9889681366445898	WITHOUT_CLASSIFICATION	0.011031863355410105	IMPLEMENTATION
// promise to implement two to N with block	WITHOUT_CLASSIFICATION	0.9831184246567191	WITHOUT_CLASSIFICATION	0.016881575343280997	IMPLEMENTATION
// promise to implement zero to three with block	WITHOUT_CLASSIFICATION	0.9933773857519749	WITHOUT_CLASSIFICATION	0.0066226142480251575	IMPLEMENTATION
// promise to implement one to three with block	WITHOUT_CLASSIFICATION	0.9904156714081843	WITHOUT_CLASSIFICATION	0.009584328591815666	IMPLEMENTATION
// promise to implement two to three with block	WITHOUT_CLASSIFICATION	0.985322131569616	WITHOUT_CLASSIFICATION	0.014677868430384001	IMPLEMENTATION
// promise to implement three with block	WITHOUT_CLASSIFICATION	0.9909282482148104	WITHOUT_CLASSIFICATION	0.009071751785189593	IMPLEMENTATION
// promise to implement N	WITHOUT_CLASSIFICATION	0.9959030859135233	WITHOUT_CLASSIFICATION	0.004096914086476642	IMPLEMENTATION
// DumpingInvocationMethodFactory	WITHOUT_CLASSIFICATION	0.9999004402456029	WITHOUT_CLASSIFICATION	9.955975439703077E-5	IMPLEMENTATION
// We promote our box to being its own box since we're changing // visibilities, and need it to be reflected on this method object // independent of any other sharing the box.	WITHOUT_CLASSIFICATION	0.9999904601694505	WITHOUT_CLASSIFICATION	9.539830549520565E-6	IMPLEMENTATION
// Normally we could leave these to fall back on the superclass, but // since it dispatches through the [] version below, which may // dispatch through the []+block version, we can save it a couple hops // by overriding these here.	WITHOUT_CLASSIFICATION	0.9999372446002965	WITHOUT_CLASSIFICATION	6.275539970342036E-5	IMPLEMENTATION
// promise to implement two to N	WITHOUT_CLASSIFICATION	0.9896572298033273	WITHOUT_CLASSIFICATION	0.01034277019667266	IMPLEMENTATION
// promise to implement three to N	WITHOUT_CLASSIFICATION	0.994459093637982	WITHOUT_CLASSIFICATION	0.005540906362018071	IMPLEMENTATION
// promise to implement zero to three	WITHOUT_CLASSIFICATION	0.9959588819564489	WITHOUT_CLASSIFICATION	0.0040411180435511755	IMPLEMENTATION
// promise to implement one to three	WITHOUT_CLASSIFICATION	0.9941448396757853	WITHOUT_CLASSIFICATION	0.005855160324214683	IMPLEMENTATION
// promise to implement two to three	WITHOUT_CLASSIFICATION	0.9910151673656042	WITHOUT_CLASSIFICATION	0.008984832634395852	IMPLEMENTATION
// promise to implement three	WITHOUT_CLASSIFICATION	0.996443930326572	WITHOUT_CLASSIFICATION	0.003556069673428025	IMPLEMENTATION
// all other arities use "n" dispatch path	WITHOUT_CLASSIFICATION	0.9993892505376649	WITHOUT_CLASSIFICATION	6.107494623351324E-4	IMPLEMENTATION
// load up object and add a few useful methods	WITHOUT_CLASSIFICATION	0.9999838372690242	WITHOUT_CLASSIFICATION	1.61627309758161E-5	IMPLEMENTATION
// open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel	WITHOUT_CLASSIFICATION	0.999969973388257	WITHOUT_CLASSIFICATION	3.0026611743025777E-5	IMPLEMENTATION
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999550271874236	WITHOUT_CLASSIFICATION	4.4972812576362726E-5	IMPLEMENTATION
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9400410509493046	WITHOUT_CLASSIFICATION	0.05995894905069551	IMPLEMENTATION
// create constructor	WITHOUT_CLASSIFICATION	0.9999203962921748	WITHOUT_CLASSIFICATION	7.96037078252827E-5	IMPLEMENTATION
// wrap self and store the wrapper	WITHOUT_CLASSIFICATION	0.9999619839380413	WITHOUT_CLASSIFICATION	3.801606195880909E-5	IMPLEMENTATION
// end constructor	WITHOUT_CLASSIFICATION	0.9983590523376783	WITHOUT_CLASSIFICATION	0.0016409476623217632	IMPLEMENTATION
// start setup method	WITHOUT_CLASSIFICATION	0.9999257612993507	WITHOUT_CLASSIFICATION	7.423870064924685E-5	IMPLEMENTATION
// set RubyClass	WITHOUT_CLASSIFICATION	0.9996868739964304	WITHOUT_CLASSIFICATION	3.1312600356952857E-4	IMPLEMENTATION
// set Ruby	WITHOUT_CLASSIFICATION	0.9996868739964304	WITHOUT_CLASSIFICATION	3.1312600356952857E-4	IMPLEMENTATION
// all methods dispatch to the simple version by default, which is method_missing normally	WITHOUT_CLASSIFICATION	0.9999863973870899	WITHOUT_CLASSIFICATION	1.3602612909992581E-5	IMPLEMENTATION
// try specific name first, falling back on simple name	WITHOUT_CLASSIFICATION	0.9989051155014501	WITHOUT_CLASSIFICATION	0.0010948844985499192	IMPLEMENTATION
// get current context	WITHOUT_CLASSIFICATION	0.9998691874200902	WITHOUT_CLASSIFICATION	1.3081257990976738E-4	IMPLEMENTATION
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999602186257754	WITHOUT_CLASSIFICATION	3.978137422460307E-5	IMPLEMENTATION
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999550271874236	WITHOUT_CLASSIFICATION	4.4972812576362726E-5	IMPLEMENTATION
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9400410509493046	WITHOUT_CLASSIFICATION	0.05995894905069551	IMPLEMENTATION
// create constructor	WITHOUT_CLASSIFICATION	0.9999203962921748	WITHOUT_CLASSIFICATION	7.96037078252827E-5	IMPLEMENTATION
// end constructor	WITHOUT_CLASSIFICATION	0.9983590523376783	WITHOUT_CLASSIFICATION	0.0016409476623217632	IMPLEMENTATION
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9973938154942339	WITHOUT_CLASSIFICATION	0.0026061845057661005	IMPLEMENTATION
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999896486595599	WITHOUT_CLASSIFICATION	1.035134044019368E-5	IMPLEMENTATION
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9996871461059735	WITHOUT_CLASSIFICATION	3.128538940264271E-4	IMPLEMENTATION
// load null block	WITHOUT_CLASSIFICATION	0.999577475696512	WITHOUT_CLASSIFICATION	4.225243034880164E-4	IMPLEMENTATION
// invoke method	WITHOUT_CLASSIFICATION	0.9988248349303037	WITHOUT_CLASSIFICATION	0.0011751650696963417	IMPLEMENTATION
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999470610310672	WITHOUT_CLASSIFICATION	5.293896893273341E-5	IMPLEMENTATION
// end setup method	WITHOUT_CLASSIFICATION	0.9961408925816764	WITHOUT_CLASSIFICATION	0.0038591074183237034	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.9994793243103856	WITHOUT_CLASSIFICATION	5.206756896144353E-4	IMPLEMENTATION
// create static init, for a monitor object	WITHOUT_CLASSIFICATION	0.9999908589427925	WITHOUT_CLASSIFICATION	9.14105720742332E-6	IMPLEMENTATION
// store the wrapper	WITHOUT_CLASSIFICATION	0.9997455912594935	WITHOUT_CLASSIFICATION	2.544087405064432E-4	IMPLEMENTATION
// prepare temp locals	WITHOUT_CLASSIFICATION	0.9999536539478356	WITHOUT_CLASSIFICATION	4.634605216441264E-5	IMPLEMENTATION
// Try to look up field for simple name // get field; if nonnull, go straight to dispatch	WITHOUT_CLASSIFICATION	0.9999944993883176	WITHOUT_CLASSIFICATION	5.500611682331445E-6	IMPLEMENTATION
// field is null, lock class and try to populate	WITHOUT_CLASSIFICATION	0.9999993841695813	WITHOUT_CLASSIFICATION	6.158304187077802E-7	IMPLEMENTATION
// try/finally block to ensure unlock	WITHOUT_CLASSIFICATION	0.9999357003766901	WITHOUT_CLASSIFICATION	6.429962330996892E-5	IMPLEMENTATION
// store it	WITHOUT_CLASSIFICATION	0.9994588341558723	WITHOUT_CLASSIFICATION	5.411658441275614E-4	IMPLEMENTATION
// end of try block	WITHOUT_CLASSIFICATION	0.9993470366806937	WITHOUT_CLASSIFICATION	6.529633193062249E-4	IMPLEMENTATION
// finally block to release monitor	WITHOUT_CLASSIFICATION	0.9999124235309866	WITHOUT_CLASSIFICATION	8.757646901330575E-5	IMPLEMENTATION
// exception handling for monitor release	WITHOUT_CLASSIFICATION	0.9998930818542965	WITHOUT_CLASSIFICATION	1.0691814570351408E-4	IMPLEMENTATION
// re-get, re-check method; if not null now, go to dispatch	WITHOUT_CLASSIFICATION	0.9993651172983767	WITHOUT_CLASSIFICATION	6.348827016231714E-4	IMPLEMENTATION
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999602186257754	WITHOUT_CLASSIFICATION	3.978137422460307E-5	IMPLEMENTATION
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999896486595599	WITHOUT_CLASSIFICATION	1.035134044019368E-5	IMPLEMENTATION
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9996871461059735	WITHOUT_CLASSIFICATION	3.128538940264271E-4	IMPLEMENTATION
// invoke method	WITHOUT_CLASSIFICATION	0.9988248349303037	WITHOUT_CLASSIFICATION	0.0011751650696963417	IMPLEMENTATION
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999470610310672	WITHOUT_CLASSIFICATION	5.293896893273341E-5	IMPLEMENTATION
// end setup method	WITHOUT_CLASSIFICATION	0.9961408925816764	WITHOUT_CLASSIFICATION	0.0038591074183237034	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.9994793243103856	WITHOUT_CLASSIFICATION	5.206756896144353E-4	IMPLEMENTATION
// create the class	WITHOUT_CLASSIFICATION	0.9998305634593088	WITHOUT_CLASSIFICATION	1.6943654069121803E-4	IMPLEMENTATION
// method still not available, call method_missing	WITHOUT_CLASSIFICATION	0.8897551661147343	WITHOUT_CLASSIFICATION	0.11024483388526582	IMPLEMENTATION
// perform the dispatch	WITHOUT_CLASSIFICATION	0.999944387507195	WITHOUT_CLASSIFICATION	5.561249280498626E-5	IMPLEMENTATION
// try to load the specified name; only if that fails, try to define the class	WITHOUT_CLASSIFICATION	0.9999979035948082	WITHOUT_CLASSIFICATION	2.0964051918399575E-6	IMPLEMENTATION
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999759029935279	WITHOUT_CLASSIFICATION	2.4097006472160044E-5	IMPLEMENTATION
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999759029935279	WITHOUT_CLASSIFICATION	2.4097006472160044E-5	IMPLEMENTATION
// setup the class	WITHOUT_CLASSIFICATION	0.9998569064067074	WITHOUT_CLASSIFICATION	1.4309359329248343E-4	IMPLEMENTATION
// now, create a method_added that can replace the DynamicMethod fields as they're redefined	WITHOUT_CLASSIFICATION	0.9995586273835273	WITHOUT_CLASSIFICATION	4.413726164727564E-4	IMPLEMENTATION
// do nothing, it's a non-impl method	WITHOUT_CLASSIFICATION	0.9995406337397945	WITHOUT_CLASSIFICATION	4.5936626020551334E-4	IMPLEMENTATION
// probably a primitive	WITHOUT_CLASSIFICATION	0.9999631174268625	WITHOUT_CLASSIFICATION	3.688257313748197E-5	IMPLEMENTATION
// interfaces are handled as modules	WITHOUT_CLASSIFICATION	0.9999506595247176	WITHOUT_CLASSIFICATION	4.9340475282334334E-5	IMPLEMENTATION
// construct the mirror class and parent classes	WITHOUT_CLASSIFICATION	0.9999838753113781	WITHOUT_CLASSIFICATION	1.612468862192812E-5	IMPLEMENTATION
// set the full name	WITHOUT_CLASSIFICATION	0.9994049336039362	WITHOUT_CLASSIFICATION	5.950663960636525E-4	IMPLEMENTATION
// include all interfaces	WITHOUT_CLASSIFICATION	0.9998696607527301	WITHOUT_CLASSIFICATION	1.3033924726986944E-4	IMPLEMENTATION
// if it's an array, only add methods for aref, aset, and length	WITHOUT_CLASSIFICATION	0.9999834834755583	WITHOUT_CLASSIFICATION	1.6516524441716856E-5	IMPLEMENTATION
// add array construction methods	WITHOUT_CLASSIFICATION	0.9998082595822975	WITHOUT_CLASSIFICATION	1.917404177026194E-4	IMPLEMENTATION
// add all public constructors (note: getConstructors only returns public ones)	WITHOUT_CLASSIFICATION	0.9999468023340479	WITHOUT_CLASSIFICATION	5.319766595209098E-5	IMPLEMENTATION
// add all instance and static methods	WITHOUT_CLASSIFICATION	0.9999452008297928	WITHOUT_CLASSIFICATION	5.479917020719051E-5	IMPLEMENTATION
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999823087606997	WITHOUT_CLASSIFICATION	1.7691239300317037E-5	IMPLEMENTATION
// too much array creation!	WITHOUT_CLASSIFICATION	0.9999789812712301	WITHOUT_CLASSIFICATION	2.101872877001935E-5	IMPLEMENTATION
// only include static methods if specified	WITHOUT_CLASSIFICATION	0.9999733477240326	WITHOUT_CLASSIFICATION	2.6652275967340863E-5	IMPLEMENTATION
// add a few type-specific special methods	WITHOUT_CLASSIFICATION	0.9998505645337353	WITHOUT_CLASSIFICATION	1.4943546626463994E-4	IMPLEMENTATION
// add all static variables	WITHOUT_CLASSIFICATION	0.99992008046834	WITHOUT_CLASSIFICATION	7.991953165998639E-5	IMPLEMENTATION
// only public static fields that are valid constants	WITHOUT_CLASSIFICATION	0.9999986513518427	WITHOUT_CLASSIFICATION	1.34864815734011E-6	IMPLEMENTATION
// looks like someone's trying to raise a Java exception. Let them.	WITHOUT_CLASSIFICATION	0.999950452954169	WITHOUT_CLASSIFICATION	4.9547045831174324E-5	IMPLEMENTATION
// NOTE: The five match methods are arity-split to avoid the cost of boxing arguments // when there's already a cached match. Do not condense them into a single // method.	WITHOUT_CLASSIFICATION	0.9998640143446653	WITHOUT_CLASSIFICATION	1.3598565533471036E-4	IMPLEMENTATION
// TODO: This is where we would want to do precision checks to see // if it's non-destructive to coerce a given type into the target // integral primitive	WITHOUT_CLASSIFICATION	0.7373684847680305	IMPLEMENTATION	0.26263151523196954	WITHOUT_CLASSIFICATION
// long first because it's what Fixnum claims to be	WITHOUT_CLASSIFICATION	0.9984353553678185	WITHOUT_CLASSIFICATION	0.001564644632181537	IMPLEMENTATION
// double first because it's what float claims to be	WITHOUT_CLASSIFICATION	0.9998441882950677	WITHOUT_CLASSIFICATION	1.558117049322898E-4	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.8930598805782629	IMPLEMENTATION	0.10694011942173715	WITHOUT_CLASSIFICATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9996200707317198	WITHOUT_CLASSIFICATION	3.7992926828032465E-4	IMPLEMENTATION
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9993499011369569	WITHOUT_CLASSIFICATION	6.500988630430759E-4	IMPLEMENTATION
// we set all Java methods to optional, since many/most have overloads	WITHOUT_CLASSIFICATION	0.999983821176503	WITHOUT_CLASSIFICATION	1.6178823496990786E-5	IMPLEMENTATION
// If we hold a Java object, we need a java_class accessor	WITHOUT_CLASSIFICATION	0.9999097847334085	WITHOUT_CLASSIFICATION	9.021526659136106E-5	IMPLEMENTATION
// line 326	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9996200707317198	WITHOUT_CLASSIFICATION	3.7992926828032465E-4	IMPLEMENTATION
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9993499011369569	WITHOUT_CLASSIFICATION	6.500988630430759E-4	IMPLEMENTATION
// too much array creation!	WITHOUT_CLASSIFICATION	0.9999789812712301	WITHOUT_CLASSIFICATION	2.101872877001935E-5	IMPLEMENTATION
// construct new array proxy (ArrayJavaProxy)	WITHOUT_CLASSIFICATION	0.9999633483434864	WITHOUT_CLASSIFICATION	3.66516565135287E-5	IMPLEMENTATION
// Get map of all fields we want to define.  	WITHOUT_CLASSIFICATION	0.9999262319321858	WITHOUT_CLASSIFICATION	7.37680678142423E-5	IMPLEMENTATION
// Look through all mappings to find a match entry for this field	WITHOUT_CLASSIFICATION	0.9999048357851094	WITHOUT_CLASSIFICATION	9.516421489065717E-5	IMPLEMENTATION
// Hit a non-java proxy class (included Modules can be a cause of this...skip)	WITHOUT_CLASSIFICATION	0.9999933840274788	WITHOUT_CLASSIFICATION	6.61597252114601E-6	IMPLEMENTATION
// We could not find all of them print out first one (we could print them all?)	WITHOUT_CLASSIFICATION	0.9985424221793022	WITHOUT_CLASSIFICATION	0.0014575778206976852	IMPLEMENTATION
// dummy bodies for default impls	WITHOUT_CLASSIFICATION	0.9999935795390339	WITHOUT_CLASSIFICATION	6.420460966122956E-6	IMPLEMENTATION
// initialize this if it hasn't been	WITHOUT_CLASSIFICATION	0.9998732551754248	WITHOUT_CLASSIFICATION	1.267448245751978E-4	IMPLEMENTATION
// initialize these if they haven't been	WITHOUT_CLASSIFICATION	0.9999345430371548	WITHOUT_CLASSIFICATION	6.5456962845238E-5	IMPLEMENTATION
// not allowed for original (non-generated) Java classes // note: not allowing for any previously created class right now; // this restriction might be loosened later for generated classes	WITHOUT_CLASSIFICATION	0.9999470929484794	WITHOUT_CLASSIFICATION	5.290705152069387E-5	IMPLEMENTATION
// setup new, etc unless this is a ConcreteJavaProxy subclass	WITHOUT_CLASSIFICATION	0.9999764813408587	WITHOUT_CLASSIFICATION	2.3518659141297025E-5	IMPLEMENTATION
// First we make modifications to the class, to adapt it to being // both a Ruby class and a proxy for a Java type	WITHOUT_CLASSIFICATION	0.9999763308366909	WITHOUT_CLASSIFICATION	2.366916330915845E-5	IMPLEMENTATION
// list of interfaces we implement	WITHOUT_CLASSIFICATION	0.9915073064814754	WITHOUT_CLASSIFICATION	0.008492693518524512	IMPLEMENTATION
// We capture the original "new" and make it private	WITHOUT_CLASSIFICATION	0.9996291761396212	WITHOUT_CLASSIFICATION	3.7082386037872746E-4	IMPLEMENTATION
// The replacement "new" allocates and inits the Ruby object as before, but // also instantiates our proxified Java object by calling __jcreate!	WITHOUT_CLASSIFICATION	0.9999997083026407	WITHOUT_CLASSIFICATION	2.9169735931397743E-7	IMPLEMENTATION
// Next, we define a few private methods that we'll use to manipulate // the Java object contained within this Ruby object	WITHOUT_CLASSIFICATION	0.9999584981015074	WITHOUT_CLASSIFICATION	4.1501898492513336E-5	IMPLEMENTATION
// jcreate instantiates the proxy object which implements all interfaces // and which is wrapped and implemented by this object	WITHOUT_CLASSIFICATION	0.996205673163266	WITHOUT_CLASSIFICATION	0.0037943268367338365	IMPLEMENTATION
// Now we add an "implement" and "implement_all" methods to the class	WITHOUT_CLASSIFICATION	0.9999123212820008	WITHOUT_CLASSIFICATION	8.767871799915335E-5	IMPLEMENTATION
// implement all forces implementation of all interfaces we intend // for this class to implement	WITHOUT_CLASSIFICATION	0.9867789884948193	WITHOUT_CLASSIFICATION	0.013221011505180702	IMPLEMENTATION
// we've already done the above priming logic, just add another interface // to the list of intentions unless we're past the point of no return or // already intend to implement the given interface	WITHOUT_CLASSIFICATION	0.9984226730755261	WITHOUT_CLASSIFICATION	0.0015773269244739223	IMPLEMENTATION
// walk all superclasses aggregating interfaces	WITHOUT_CLASSIFICATION	0.9999272772212927	WITHOUT_CLASSIFICATION	7.272277870730595E-5	IMPLEMENTATION
// construct the new interface impl and set it into the object	WITHOUT_CLASSIFICATION	0.9999939838774524	WITHOUT_CLASSIFICATION	6.016122547663955E-6	IMPLEMENTATION
// assuming the user wants a collection of interfaces that can be // included together. make it so.	WITHOUT_CLASSIFICATION	0.997924595214815	WITHOUT_CLASSIFICATION	0.002075404785185017	IMPLEMENTATION
// not allowed for existing Java interface modules	WITHOUT_CLASSIFICATION	0.9996256498061944	WITHOUT_CLASSIFICATION	3.743501938055621E-4	IMPLEMENTATION
// To turn a module into an "interface collection" we add a class instance // variable to hold the list of interfaces, and modify append_features // for this module to call append_features on each of those interfaces as // well	WITHOUT_CLASSIFICATION	0.9999996675763827	WITHOUT_CLASSIFICATION	3.3242361726735706E-7	IMPLEMENTATION
// already set up append_features, just add the interface if we haven't already	WITHOUT_CLASSIFICATION	0.9999974576987933	WITHOUT_CLASSIFICATION	2.5423012065696505E-6	IMPLEMENTATION
// array-of-interface-type creation/identity	WITHOUT_CLASSIFICATION	0.9999004402456029	WITHOUT_CLASSIFICATION	9.955975439703077E-5	IMPLEMENTATION
// keep this variant for kind_of? testing	WITHOUT_CLASSIFICATION	0.9999359254922379	WITHOUT_CLASSIFICATION	6.407450776221893E-5	IMPLEMENTATION
// array creation should use this variant	WITHOUT_CLASSIFICATION	0.9995110490014691	WITHOUT_CLASSIFICATION	4.889509985308722E-4	IMPLEMENTATION
// parent.setConstant(name, proxyClass); // where the name should come from ?	WITHOUT_CLASSIFICATION	0.9999526211047083	WITHOUT_CLASSIFICATION	4.737889529172972E-5	IMPLEMENTATION
// including interface module so old-style interface "subclasses" will // respond correctly to #kind_of?, etc.	WITHOUT_CLASSIFICATION	0.9999755895139107	WITHOUT_CLASSIFICATION	2.4410486089161915E-5	IMPLEMENTATION
// add reference to interface module	WITHOUT_CLASSIFICATION	0.9999745782475787	WITHOUT_CLASSIFICATION	2.5421752421167055E-5	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.999760499771291	WITHOUT_CLASSIFICATION	2.3950022870889166E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.999760499771291	WITHOUT_CLASSIFICATION	2.3950022870889166E-4	IMPLEMENTATION
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999823087606997	WITHOUT_CLASSIFICATION	1.7691239300317037E-5	IMPLEMENTATION
// same as argument_types, but matches name in java.lang.reflect.Constructor/Method	WITHOUT_CLASSIFICATION	0.9999995108713299	WITHOUT_CLASSIFICATION	4.891286700564275E-7	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999989660851855	WITHOUT_CLASSIFICATION	1.0339148145795896E-6	IMPLEMENTATION
// weakly reserved names	WITHOUT_CLASSIFICATION	0.9999222302817968	WITHOUT_CLASSIFICATION	7.77697182031986E-5	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999919915197277	WITHOUT_CLASSIFICATION	8.008480272270636E-6	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999919915197277	WITHOUT_CLASSIFICATION	8.008480272270636E-6	IMPLEMENTATION
// modified only by addMethod; no synchronization required	WITHOUT_CLASSIFICATION	0.9998215100505694	WITHOUT_CLASSIFICATION	1.7848994943049447E-4	IMPLEMENTATION
// if there's no constructor, we must prevent construction	WITHOUT_CLASSIFICATION	0.9990200800824418	WITHOUT_CLASSIFICATION	9.79919917558226E-4	IMPLEMENTATION
// caching constructors, as they're accessed for each new instance	WITHOUT_CLASSIFICATION	0.9999921582018853	WITHOUT_CLASSIFICATION	7.841798114804387E-6	IMPLEMENTATION
// proxy module for interfaces	WITHOUT_CLASSIFICATION	0.9999889498244858	WITHOUT_CLASSIFICATION	1.1050175514150122E-5	IMPLEMENTATION
// proxy class for concrete classes.  also used for // "concrete" interfaces, which is why we have two fields	WITHOUT_CLASSIFICATION	0.9999880395834966	WITHOUT_CLASSIFICATION	1.1960416503427781E-5	IMPLEMENTATION
// readable only by thread building proxy, so don't need to be // volatile. used to handle recursive calls to getProxyClass/Module // while proxy is being constructed (usually when a constant // defined by a class is of the same type as that class).	WITHOUT_CLASSIFICATION	0.999999261177642	WITHOUT_CLASSIFICATION	7.388223579537355E-7	IMPLEMENTATION
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999981821060026	WITHOUT_CLASSIFICATION	1.817893997451162E-6	IMPLEMENTATION
// Now add all aliases for the static methods (fields) as appropriate	WITHOUT_CLASSIFICATION	0.999975588501024	WITHOUT_CLASSIFICATION	2.4411498976056258E-5	IMPLEMENTATION
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999937999772234	WITHOUT_CLASSIFICATION	6.200022776709755E-6	IMPLEMENTATION
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9998982090550235	WITHOUT_CLASSIFICATION	1.0179094497660283E-4	IMPLEMENTATION
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999440997890414	WITHOUT_CLASSIFICATION	5.590021095859849E-5	IMPLEMENTATION
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999689080234583	WITHOUT_CLASSIFICATION	3.109197654171707E-5	IMPLEMENTATION
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999514680400885	WITHOUT_CLASSIFICATION	4.853195991159735E-5	IMPLEMENTATION
// Additionally add ?-postfixed aliases to any boolean methods and properties.	WITHOUT_CLASSIFICATION	0.9999804508003849	WITHOUT_CLASSIFICATION	1.9549199615133242E-5	IMPLEMENTATION
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999004402456029	WITHOUT_CLASSIFICATION	9.955975439703077E-5	IMPLEMENTATION
// something?	WITHOUT_CLASSIFICATION	0.9992894795773729	WITHOUT_CLASSIFICATION	7.105204226271082E-4	IMPLEMENTATION
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999988059284497	WITHOUT_CLASSIFICATION	1.1940715502561744E-6	IMPLEMENTATION
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999988059284497	WITHOUT_CLASSIFICATION	1.1940715502561744E-6	IMPLEMENTATION
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999681603202399	WITHOUT_CLASSIFICATION	3.183967976012234E-5	IMPLEMENTATION
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999681603202399	WITHOUT_CLASSIFICATION	3.183967976012234E-5	IMPLEMENTATION
// create constructorInstaller; if there are no constructors, it will disable construction	WITHOUT_CLASSIFICATION	0.9999967098114977	WITHOUT_CLASSIFICATION	3.290188502279001E-6	IMPLEMENTATION
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999966615409153	WITHOUT_CLASSIFICATION	3.3384590847849773E-6	IMPLEMENTATION
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999610995725366	WITHOUT_CLASSIFICATION	3.8900427463468394E-5	IMPLEMENTATION
// now iterate over all installers and make sure they also have appropriate aliases	WITHOUT_CLASSIFICATION	0.9999791338292292	WITHOUT_CLASSIFICATION	2.086617077077699E-5	IMPLEMENTATION
// old (quasi-deprecated) interface class	WITHOUT_CLASSIFICATION	0.9999916643245506	WITHOUT_CLASSIFICATION	8.335675449459006E-6	IMPLEMENTATION
// 1.9 support for encodings	WITHOUT_CLASSIFICATION	0.9995393400943695	WITHOUT_CLASSIFICATION	4.6065990563041564E-4	IMPLEMENTATION
// double-check the cache now that we're synchronized	WITHOUT_CLASSIFICATION	0.9993363053652443	WITHOUT_CLASSIFICATION	6.636946347557314E-4	IMPLEMENTATION
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999689080234583	WITHOUT_CLASSIFICATION	3.109197654171707E-5	IMPLEMENTATION
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999514680400885	WITHOUT_CLASSIFICATION	4.853195991159735E-5	IMPLEMENTATION
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999004402456029	WITHOUT_CLASSIFICATION	9.955975439703077E-5	IMPLEMENTATION
// one word type name that starts lower-case...it may be a primitive type	WITHOUT_CLASSIFICATION	0.9999218491531942	WITHOUT_CLASSIFICATION	7.815084680583321E-5	IMPLEMENTATION
// Java.getProxyClass deals with sync issues, so we won't duplicate the logic here	WITHOUT_CLASSIFICATION	0.9999974376110714	WITHOUT_CLASSIFICATION	2.5623889285839626E-6	IMPLEMENTATION
// note: intentionally returning the actual array returned from Java, rather // than wrapping it in a RubyArray. wave of the future, when java_class will // return the actual class, rather than a JavaClass wrapper.	WITHOUT_CLASSIFICATION	0.9999998950209765	WITHOUT_CLASSIFICATION	1.0497902346904155E-7	IMPLEMENTATION
// see note above re: return type	WITHOUT_CLASSIFICATION	0.9998739403587948	WITHOUT_CLASSIFICATION	1.2605964120517978E-4	IMPLEMENTATION
// restrictive security policy; no matter, we only want public // classes anyway	WITHOUT_CLASSIFICATION	0.9999826984082493	WITHOUT_CLASSIFICATION	1.7301591750771955E-5	IMPLEMENTATION
// very restrictive policy (disallows Member.PUBLIC) // we'd never actually get this far in that case	WITHOUT_CLASSIFICATION	0.9993684988395781	WITHOUT_CLASSIFICATION	6.315011604218933E-4	IMPLEMENTATION
// one-dimensional array	WITHOUT_CLASSIFICATION	0.9999495018673252	WITHOUT_CLASSIFICATION	5.049813267473456E-5	IMPLEMENTATION
// n-dimensional array	WITHOUT_CLASSIFICATION	0.9999495018673252	WITHOUT_CLASSIFICATION	5.049813267473456E-5	IMPLEMENTATION
// if it's an array of arrays, recurse with the component type	WITHOUT_CLASSIFICATION	0.9999600049219136	WITHOUT_CLASSIFICATION	3.999507808637971E-5	IMPLEMENTATION
// we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods // see JRUBY-3130	WITHOUT_CLASSIFICATION	0.9999980029512391	WITHOUT_CLASSIFICATION	1.997048760829863E-6	IMPLEMENTATION
// Proc implementing an interface, pull in the catch-all code that lets the proc get invoked // no matter what method is called on the interface	WITHOUT_CLASSIFICATION	0.9999823999005364	WITHOUT_CLASSIFICATION	1.7600099463573785E-5	IMPLEMENTATION
// can't be converted any more, return it	WITHOUT_CLASSIFICATION	0.9999661119508215	WITHOUT_CLASSIFICATION	3.388804917838355E-5	IMPLEMENTATION
// getFooBar() => fooBar?, foo_bar?(*)	WITHOUT_CLASSIFICATION	0.9999514580470754	WITHOUT_CLASSIFICATION	4.854195292447614E-5	IMPLEMENTATION
// If not a property, but is boolean add ?-postfixed aliases.	WITHOUT_CLASSIFICATION	0.9999265916756073	WITHOUT_CLASSIFICATION	7.340832439269412E-5	IMPLEMENTATION
// many cases are ok to convert to float; if not one of these, error	WITHOUT_CLASSIFICATION	0.9919427725089061	WITHOUT_CLASSIFICATION	0.008057227491093983	IMPLEMENTATION
// for Object, default to natural wrapper type	WITHOUT_CLASSIFICATION	0.9999925810670311	WITHOUT_CLASSIFICATION	7.418932968971247E-6	IMPLEMENTATION
// rubyObject is already of the required jruby class (or subclass)	WITHOUT_CLASSIFICATION	0.9999806111164184	WITHOUT_CLASSIFICATION	1.9388883581503846E-5	IMPLEMENTATION
// the converters handle not only primitive types but also their boxed versions, so we should check // if we have a converter before checking for isPrimitive()	WITHOUT_CLASSIFICATION	0.9994805737683685	WITHOUT_CLASSIFICATION	5.194262316315526E-4	IMPLEMENTATION
// it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9988295345273164	WITHOUT_CLASSIFICATION	0.0011704654726837124	IMPLEMENTATION
// we've found a Java type to which we've coerced the Ruby value, wrap it	WITHOUT_CLASSIFICATION	0.9998850777712596	WITHOUT_CLASSIFICATION	1.1492222874049547E-4	IMPLEMENTATION
// set of utility methods for Java-based proxy objects	WITHOUT_CLASSIFICATION	0.9999891375036647	WITHOUT_CLASSIFICATION	1.0862496335331176E-5	IMPLEMENTATION
// the proxy (wrapper) type hierarchy	WITHOUT_CLASSIFICATION	0.9999682980169461	WITHOUT_CLASSIFICATION	3.1701983053936926E-5	IMPLEMENTATION
//InterfaceJavaProxy.createInterfaceJavaProxy(context);	WITHOUT_CLASSIFICATION	0.9996611722072354	WITHOUT_CLASSIFICATION	3.388277927646339E-4	IMPLEMENTATION
// also create the JavaProxy* classes	WITHOUT_CLASSIFICATION	0.99992499248027	WITHOUT_CLASSIFICATION	7.500751973004376E-5	IMPLEMENTATION
// The template for interface modules	WITHOUT_CLASSIFICATION	0.9999922333940271	WITHOUT_CLASSIFICATION	7.766605972931372E-6	IMPLEMENTATION
// Now attach Java-related extras to core classes	WITHOUT_CLASSIFICATION	0.9998904774197683	WITHOUT_CLASSIFICATION	1.0952258023163998E-4	IMPLEMENTATION
// add all name-to-class mappings	WITHOUT_CLASSIFICATION	0.998013975007847	WITHOUT_CLASSIFICATION	0.001986024992152981	IMPLEMENTATION
// add some base Java classes everyone will need	WITHOUT_CLASSIFICATION	0.9999223535202373	WITHOUT_CLASSIFICATION	7.764647976263829E-5	IMPLEMENTATION
// finally, set JavaSupport.isEnabled to true	WITHOUT_CLASSIFICATION	0.9999010396229656	WITHOUT_CLASSIFICATION	9.896037703436045E-5	IMPLEMENTATION
// shouldn't happen, but if a superclass is specified, it's not ours	WITHOUT_CLASSIFICATION	0.9997471317389666	WITHOUT_CLASSIFICATION	2.528682610334449E-4	IMPLEMENTATION
// include any interfaces we extend	WITHOUT_CLASSIFICATION	0.9982630283597	WITHOUT_CLASSIFICATION	0.001736971640299982	IMPLEMENTATION
// java.lang.Object is added at root of java proxy classes	WITHOUT_CLASSIFICATION	0.9999992701665633	WITHOUT_CLASSIFICATION	7.298334366304723E-7	IMPLEMENTATION
// other java proxy classes added under their superclass' java proxy	WITHOUT_CLASSIFICATION	0.9999972111423711	WITHOUT_CLASSIFICATION	2.7888576288782666E-6	IMPLEMENTATION
// include interface modules into the proxy class	WITHOUT_CLASSIFICATION	0.9999965964775408	WITHOUT_CLASSIFICATION	3.403522459253074E-6	IMPLEMENTATION
// JRUBY-2938 the proxy class might already exist	WITHOUT_CLASSIFICATION	0.9999775859558393	WITHOUT_CLASSIFICATION	2.2414044160708875E-5	IMPLEMENTATION
// add java_method for unbound use	WITHOUT_CLASSIFICATION	0.9997455363321021	WITHOUT_CLASSIFICATION	2.544636678979846E-4	IMPLEMENTATION
// add alias to meta	WITHOUT_CLASSIFICATION	0.9995845655597059	WITHOUT_CLASSIFICATION	4.1543444029420404E-4	IMPLEMENTATION
// we'll only map conventional class names to modules 	WITHOUT_CLASSIFICATION	0.9999949942881334	WITHOUT_CLASSIFICATION	5.005711866579897E-6	IMPLEMENTATION
/* expected */	WITHOUT_CLASSIFICATION	0.9999552057427821	WITHOUT_CLASSIFICATION	4.479425721784309E-5	IMPLEMENTATION
// Haven't found a class, continue on as though it were a package	WITHOUT_CLASSIFICATION	0.9999203862859912	WITHOUT_CLASSIFICATION	7.961371400883354E-5	IMPLEMENTATION
// upper case name, so most likely a class	WITHOUT_CLASSIFICATION	0.9999692095762391	WITHOUT_CLASSIFICATION	3.079042376085472E-5	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999989660851855	WITHOUT_CLASSIFICATION	1.0339148145795896E-6	IMPLEMENTATION
// add alias to meta	WITHOUT_CLASSIFICATION	0.9995845655597059	WITHOUT_CLASSIFICATION	4.1543444029420404E-4	IMPLEMENTATION
// this is where we'll get connected when classes are opened using // package module syntax.	WITHOUT_CLASSIFICATION	0.9999883455866042	WITHOUT_CLASSIFICATION	1.1654413395864186E-5	IMPLEMENTATION
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9999889910022592	WITHOUT_CLASSIFICATION	1.1008997740900101E-5	IMPLEMENTATION
// this covers primitives and (unlikely) lower-case class names	WITHOUT_CLASSIFICATION	0.9999407240281223	WITHOUT_CLASSIFICATION	5.927597187767088E-5	IMPLEMENTATION
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9998685215093032	WITHOUT_CLASSIFICATION	1.3147849069674897E-4	IMPLEMENTATION
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9998685215093032	WITHOUT_CLASSIFICATION	1.3147849069674897E-4	IMPLEMENTATION
// Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9999902985952674	WITHOUT_CLASSIFICATION	9.701404732542396E-6	IMPLEMENTATION
// Create list of interfaces to proxy (and make sure they really are interfaces)	WITHOUT_CLASSIFICATION	0.9999975875087138	WITHOUT_CLASSIFICATION	2.4124912860561394E-6	IMPLEMENTATION
// hashcode is a combination of the interfaces and the Ruby class we're using // to implement them	WITHOUT_CLASSIFICATION	0.999880508995655	WITHOUT_CLASSIFICATION	1.1949100434499478E-4	IMPLEMENTATION
// if it's a singleton class and the real class is proc, we're doing closure conversion // so just use Proc's hashcode	WITHOUT_CLASSIFICATION	0.9999994002809537	WITHOUT_CLASSIFICATION	5.997190462940032E-7	IMPLEMENTATION
// normal new class implementing interfaces	WITHOUT_CLASSIFICATION	0.9999080594150227	WITHOUT_CLASSIFICATION	9.194058497731594E-5	IMPLEMENTATION
/*         * Initialize some components.         */	WITHOUT_CLASSIFICATION	0.9999874045957543	WITHOUT_CLASSIFICATION	1.2595404245751464E-5	IMPLEMENTATION
// not synchronizing these methods, no harm if these values get set more // than once. // (also note that there's no chance of getting a partially initialized // class/module, as happens-before is guaranteed by volatile write/read // of constants table.)	WITHOUT_CLASSIFICATION	0.9999983291567849	WITHOUT_CLASSIFICATION	1.6708432151743364E-6	IMPLEMENTATION
// Java reflection does not allow retrieving constructors like methods	WITHOUT_CLASSIFICATION	0.8025389819194736	WITHOUT_CLASSIFICATION	0.19746101808052643	IMPLEMENTATION
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9998794967920958	WITHOUT_CLASSIFICATION	1.2050320790418521E-4	IMPLEMENTATION
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9998794967920958	WITHOUT_CLASSIFICATION	1.2050320790418521E-4	IMPLEMENTATION
// no matching ctor found	WITHOUT_CLASSIFICATION	0.999954077887691	WITHOUT_CLASSIFICATION	4.592211230913445E-5	IMPLEMENTATION
// Create Ruby proxies for any input arguments that are not primitives.	WITHOUT_CLASSIFICATION	0.999900184990553	WITHOUT_CLASSIFICATION	9.981500944703105E-5	IMPLEMENTATION
// prepare a faster handle if handles are enabled and the method and class are public	WITHOUT_CLASSIFICATION	0.9999882191007414	WITHOUT_CLASSIFICATION	1.178089925858458E-5	IMPLEMENTATION
// must be a public method	WITHOUT_CLASSIFICATION	0.9999718264181781	WITHOUT_CLASSIFICATION	2.817358182196265E-5	IMPLEMENTATION
// must be a public class	WITHOUT_CLASSIFICATION	0.9999966799229408	WITHOUT_CLASSIFICATION	3.320077059015048E-6	IMPLEMENTATION
// must have been loaded from our known classloader hierarchy	WITHOUT_CLASSIFICATION	0.9999889556782579	WITHOUT_CLASSIFICATION	1.1044321742203675E-5	IMPLEMENTATION
// Special classes like Collections.EMPTY_LIST are inner classes that are private but  // implement public interfaces.  Their methods are all public methods for the public  // interface.  Let these public methods execute via setAccessible(true). 	WITHOUT_CLASSIFICATION	0.9998860785164744	WITHOUT_CLASSIFICATION	1.1392148352564062E-4	IMPLEMENTATION
// search through all declared methods to find a closest match	WITHOUT_CLASSIFICATION	0.9999904765585981	WITHOUT_CLASSIFICATION	9.52344140190931E-6	IMPLEMENTATION
// no matching method found	WITHOUT_CLASSIFICATION	0.9998490854603739	WITHOUT_CLASSIFICATION	1.509145396262301E-4	IMPLEMENTATION
// this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.9999986415877838	WITHOUT_CLASSIFICATION	1.3584122161571355E-6	IMPLEMENTATION
/*         * First we need to register the JRuby engine.         */	WITHOUT_CLASSIFICATION	0.9999597894243791	WITHOUT_CLASSIFICATION	4.0210575620923386E-5	IMPLEMENTATION
/*         * Now we create a new BSFManager.         */	WITHOUT_CLASSIFICATION	0.9999838030844685	WITHOUT_CLASSIFICATION	1.6196915531428822E-5	IMPLEMENTATION
/*         * Initialize a simple Frame.          */	WITHOUT_CLASSIFICATION	0.9999956375628948	WITHOUT_CLASSIFICATION	4.3624371051919844E-6	IMPLEMENTATION
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.999782952175292	WITHOUT_CLASSIFICATION	2.1704782470798146E-4	IMPLEMENTATION
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.999782952175292	WITHOUT_CLASSIFICATION	2.1704782470798146E-4	IMPLEMENTATION
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999538088718308	WITHOUT_CLASSIFICATION	4.619112816909112E-5	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.9994793243103856	WITHOUT_CLASSIFICATION	5.206756896144353E-4	IMPLEMENTATION
// // this test really means, that this is a ruby-defined subclass of a java class //	WITHOUT_CLASSIFICATION	0.9999986415877838	WITHOUT_CLASSIFICATION	1.3584122161571355E-6	IMPLEMENTATION
// for our purposes, Accessibles are also Members, and vice-versa, // so we'll include Member methods here.	WITHOUT_CLASSIFICATION	0.9999964693069009	WITHOUT_CLASSIFICATION	3.5306930991459806E-6	IMPLEMENTATION
/*             * Declare those components as beans in BSF. Then it will be             * possible to access those components in Ruby as global             * variables ($frame, $menubar, ...)             */	WITHOUT_CLASSIFICATION	0.9999999978187412	WITHOUT_CLASSIFICATION	2.181258832491999E-9	IMPLEMENTATION
/*              * Execute a Ruby script (add the menubar to the frame).             */	WITHOUT_CLASSIFICATION	0.9999980285072356	WITHOUT_CLASSIFICATION	1.9714927643776667E-6	IMPLEMENTATION
/*                     * Execute Ruby statements.                     */	WITHOUT_CLASSIFICATION	0.999994342887077	WITHOUT_CLASSIFICATION	5.657112923102149E-6	IMPLEMENTATION
/*                     * Evaluates a Ruby expression and display the result.                     */	WITHOUT_CLASSIFICATION	0.9999975099254127	WITHOUT_CLASSIFICATION	2.490074587354775E-6	IMPLEMENTATION
// Populate values for the parameter names	WITHOUT_CLASSIFICATION	0.9999995133122757	WITHOUT_CLASSIFICATION	4.866877243391416E-7	IMPLEMENTATION
/* package scope */	WITHOUT_CLASSIFICATION	0.9998992398163385	WITHOUT_CLASSIFICATION	1.0076018366142737E-4	IMPLEMENTATION
// This point is only reached if there was an exception handler // installed.	WITHOUT_CLASSIFICATION	0.9999989660851855	WITHOUT_CLASSIFICATION	1.0339148145795896E-6	IMPLEMENTATION
// // Ruby-level methods //	WITHOUT_CLASSIFICATION	0.9999259491169729	WITHOUT_CLASSIFICATION	7.405088302711182E-5	IMPLEMENTATION
// need names ordered for key generation later	WITHOUT_CLASSIFICATION	0.9995513362204335	WITHOUT_CLASSIFICATION	4.486637795664467E-4	IMPLEMENTATION
// we only collect methods and interfaces for  // user-defined proxy classes.	WITHOUT_CLASSIFICATION	0.9999924446986084	WITHOUT_CLASSIFICATION	7.5553013917103785E-6	IMPLEMENTATION
// get JavaClass if this is the new proxy class; verify it // matches if this is a superclass proxy.	WITHOUT_CLASSIFICATION	0.9999979166153299	WITHOUT_CLASSIFICATION	2.083384670134075E-6	IMPLEMENTATION
// get any included interfaces	WITHOUT_CLASSIFICATION	0.9999587859777715	WITHOUT_CLASSIFICATION	4.121402222844756E-5	IMPLEMENTATION
// lock in the overridden methods for the new class, and any as-yet // uninstantiated ancestor class.	WITHOUT_CLASSIFICATION	0.9999980599233323	WITHOUT_CLASSIFICATION	1.9400766676912674E-6	IMPLEMENTATION
// statically initialized below	WITHOUT_CLASSIFICATION	0.9999607565266271	WITHOUT_CLASSIFICATION	3.9243473372982147E-5	IMPLEMENTATION
// finish class initializer	WITHOUT_CLASSIFICATION	0.9995431162280384	WITHOUT_CLASSIFICATION	4.5688377196161095E-4	IMPLEMENTATION
// trigger class initialization for the class	WITHOUT_CLASSIFICATION	0.9998962320783118	WITHOUT_CLASSIFICATION	1.0376792168820198E-4	IMPLEMENTATION
// should not happen!	WITHOUT_CLASSIFICATION	0.9974307078778165	WITHOUT_CLASSIFICATION	0.0025692921221835054	IMPLEMENTATION
// start class	WITHOUT_CLASSIFICATION	0.9999405048762504	WITHOUT_CLASSIFICATION	5.9495123749534354E-5	IMPLEMENTATION
// make getter for handler	WITHOUT_CLASSIFICATION	0.9998922425708713	WITHOUT_CLASSIFICATION	1.0775742912869423E-4	IMPLEMENTATION
// make getter for proxy class	WITHOUT_CLASSIFICATION	0.9999797340580123	WITHOUT_CLASSIFICATION	2.026594198772811E-5	IMPLEMENTATION
// add (potentially) overridden names to the key. // TODO: see note above re: optimizations	WITHOUT_CLASSIFICATION	0.9171334306441749	IMPLEMENTATION	0.08286656935582519	WITHOUT_CLASSIFICATION
// We generate all constructors and let some fail during invocation later	WITHOUT_CLASSIFICATION	0.9999288169708965	WITHOUT_CLASSIFICATION	7.118302910355866E-5	IMPLEMENTATION
// create static private method field	WITHOUT_CLASSIFICATION	0.9999161364838338	WITHOUT_CLASSIFICATION	8.386351616621022E-5	IMPLEMENTATION
// load static empty array	WITHOUT_CLASSIFICATION	0.999985355785462	WITHOUT_CLASSIFICATION	1.4644214537939598E-5	IMPLEMENTATION
// box arguments	WITHOUT_CLASSIFICATION	0.9998560202831777	WITHOUT_CLASSIFICATION	1.4397971682237077E-4	IMPLEMENTATION
// this is a simple rethrow handler	WITHOUT_CLASSIFICATION	0.999955050396445	WITHOUT_CLASSIFICATION	4.494960355492962E-5	IMPLEMENTATION
// // construct the super-proxy method //	WITHOUT_CLASSIFICATION	0.999665612687688	WITHOUT_CLASSIFICATION	3.3438731231192107E-4	IMPLEMENTATION
// do a void return	WITHOUT_CLASSIFICATION	0.9999222273703765	WITHOUT_CLASSIFICATION	7.777262962346731E-5	IMPLEMENTATION
// // utility methods //	WITHOUT_CLASSIFICATION	0.9999485836957658	WITHOUT_CLASSIFICATION	5.1416304234160756E-5	IMPLEMENTATION
// Is there a supplied proc argument or do we assume a block was // supplied	WITHOUT_CLASSIFICATION	0.9999902985952674	WITHOUT_CLASSIFICATION	9.701404732542396E-6	IMPLEMENTATION
// store call information so method_missing impl can use it	WITHOUT_CLASSIFICATION	0.9996852589466475	WITHOUT_CLASSIFICATION	3.147410533526024E-4	IMPLEMENTATION
// use the same logic as in EvaluationState	WITHOUT_CLASSIFICATION	0.999991508852248	WITHOUT_CLASSIFICATION	8.49114775206193E-6	IMPLEMENTATION
// no opt, no rest, exact match	WITHOUT_CLASSIFICATION	0.9999638871129551	WITHOUT_CLASSIFICATION	3.611288704485258E-5	IMPLEMENTATION
// only rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999104336235551	WITHOUT_CLASSIFICATION	8.956637644476058E-5	IMPLEMENTATION
// opt but no rest, must be at least required and no more than required + opt	WITHOUT_CLASSIFICATION	0.9996362704693567	WITHOUT_CLASSIFICATION	3.63729530643366E-4	IMPLEMENTATION
// opt and rest, must be at least required	WITHOUT_CLASSIFICATION	0.9998899165511287	WITHOUT_CLASSIFICATION	1.1008344887136443E-4	IMPLEMENTATION
// No block from a nil proc	WITHOUT_CLASSIFICATION	0.99999488427575	WITHOUT_CLASSIFICATION	5.115724250045676E-6	IMPLEMENTATION
// If not already a proc then we should try and make it one.	WITHOUT_CLASSIFICATION	0.9954009769663094	WITHOUT_CLASSIFICATION	0.004599023033690604	IMPLEMENTATION
// The current block is already associated with proc.  No need to create a new one	WITHOUT_CLASSIFICATION	0.9997971416104322	WITHOUT_CLASSIFICATION	2.0285838956773431E-4	IMPLEMENTATION
// Has the method that is calling super received a block argument	WITHOUT_CLASSIFICATION	0.9999473907677597	WITHOUT_CLASSIFICATION	5.260923224024967E-5	IMPLEMENTATION
/* NUL */	WITHOUT_CLASSIFICATION	0.9999984386024293	WITHOUT_CLASSIFICATION	1.5613975706521305E-6	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9998730887203678	WITHOUT_CLASSIFICATION	1.2691127963210383E-4	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999628726941563	WITHOUT_CLASSIFICATION	3.7127305843683975E-5	IMPLEMENTATION
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999889933563602	WITHOUT_CLASSIFICATION	1.1006643639869671E-5	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9991647124973346	WITHOUT_CLASSIFICATION	8.35287502665406E-4	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9996200707317198	WITHOUT_CLASSIFICATION	3.7992926828032465E-4	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9996200707317198	WITHOUT_CLASSIFICATION	3.7992926828032465E-4	IMPLEMENTATION
// classes are directly in the hierarchy, so no special logic is necessary for implementer	WITHOUT_CLASSIFICATION	0.9999998609254499	WITHOUT_CLASSIFICATION	1.390745500573352E-7	IMPLEMENTATION
// must be power of 2 // must be power of 2	WITHOUT_CLASSIFICATION	0.9999751558027009	WITHOUT_CLASSIFICATION	2.484419729904828E-5	IMPLEMENTATION
// Find power-of-two sizes best matching arguments	WITHOUT_CLASSIFICATION	0.9999248305667107	WITHOUT_CLASSIFICATION	7.516943328931198E-5	IMPLEMENTATION
// note segmentShift differs from ConcurrentHashMap's calculation due to // issues with System.identityHashCode (upper n bits always 0, at least  // under Java 1.6 / WinXP)	WITHOUT_CLASSIFICATION	0.9999984721224441	WITHOUT_CLASSIFICATION	1.5278775558386459E-6	IMPLEMENTATION
//      System.err.println("***ObjectProxyCache " + id + " started at "+ new java.util.Date());	WITHOUT_CLASSIFICATION	0.9997682400334258	WITHOUT_CLASSIFICATION	2.3175996657422314E-4	IMPLEMENTATION
//    protected void finalize() throws Throwable { //        System.err.println("***ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); //    }	WITHOUT_CLASSIFICATION	0.9996411019903937	WITHOUT_CLASSIFICATION	3.5889800960623076E-4	IMPLEMENTATION
// EntryRefs include hash with key to facilitate lookup by Segment#expunge // after ref is removed from ReferenceQueue	WITHOUT_CLASSIFICATION	0.9997363511117342	WITHOUT_CLASSIFICATION	2.6364888826575273E-4	IMPLEMENTATION
// Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather // makes it a final field.  The theory is that doing so should force a happens-before // relationship WRT the WeakReference constructor, guaranteeing that the key will be // visibile to other threads (unless it's been GC'ed).  See JLS 17.5 (final fields) and // 17.4.5 (Happens-before order) to confirm or refute my reasoning here.	WITHOUT_CLASSIFICATION	0.9999917904838873	WITHOUT_CLASSIFICATION	8.209516112662018E-6	IMPLEMENTATION
// references to the Java object and its proxy will either both be // weak or both be soft, since the proxy contains a strong reference // to the object, so it wouldn't make sense for the reference types // to differ.	WITHOUT_CLASSIFICATION	0.9999999911365163	WITHOUT_CLASSIFICATION	8.863483675278877E-9	IMPLEMENTATION
// ctor used by remove/rehash	WITHOUT_CLASSIFICATION	0.9999649095104006	WITHOUT_CLASSIFICATION	3.509048959931904E-5	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999927749668629	WITHOUT_CLASSIFICATION	7.2250331370494545E-6	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999927749668629	WITHOUT_CLASSIFICATION	7.2250331370494545E-6	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999927749668629	WITHOUT_CLASSIFICATION	7.2250331370494545E-6	IMPLEMENTATION
// note that we'll potentially see the refs for both the java object and // proxy -- whichever we see first will cause the entry to be removed; // the other will not match an entry and will be ignored.	WITHOUT_CLASSIFICATION	0.9999950723390271	WITHOUT_CLASSIFICATION	4.927660973025544E-6	IMPLEMENTATION
// temp method to verify tableSize value // must be called under lock	WITHOUT_CLASSIFICATION	0.9999946891854778	WITHOUT_CLASSIFICATION	5.310814522178897E-6	IMPLEMENTATION
// Single node in list	WITHOUT_CLASSIFICATION	0.9999804030083743	WITHOUT_CLASSIFICATION	1.959699162575498E-5	IMPLEMENTATION
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999433452351069	WITHOUT_CLASSIFICATION	5.665476489319711E-5	IMPLEMENTATION
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999433452351069	WITHOUT_CLASSIFICATION	5.665476489319711E-5	IMPLEMENTATION
// entry exists, proxy has been gc'ed. replace entry.	WITHOUT_CLASSIFICATION	0.9994754885774317	WITHOUT_CLASSIFICATION	5.245114225682402E-4	IMPLEMENTATION
// Where we get new positions from.	WITHOUT_CLASSIFICATION	0.9992914615521757	WITHOUT_CLASSIFICATION	7.085384478242976E-4	IMPLEMENTATION
// Start of string ([, (, {, <, ', ", \n) 	WITHOUT_CLASSIFICATION	0.9999990985147653	WITHOUT_CLASSIFICATION	9.014852347033174E-7	IMPLEMENTATION
// Number of newlines read from the reader	WITHOUT_CLASSIFICATION	0.9999978492724236	WITHOUT_CLASSIFICATION	2.1507275764343E-6	IMPLEMENTATION
// How many bytes into the source are we?	WITHOUT_CLASSIFICATION	0.9999966138574468	WITHOUT_CLASSIFICATION	3.386142553298364E-6	IMPLEMENTATION
// For 'list' and only populated if list is not null.	WITHOUT_CLASSIFICATION	0.9997984705422261	WITHOUT_CLASSIFICATION	2.0152945777392994E-4	IMPLEMENTATION
// Last full line read.	WITHOUT_CLASSIFICATION	0.9999172820148094	WITHOUT_CLASSIFICATION	8.271798519060995E-5	IMPLEMENTATION
// Save sourceLine for error reporting to display line where error occurred	WITHOUT_CLASSIFICATION	0.9996277584064249	WITHOUT_CLASSIFICATION	3.7224159357511304E-4	IMPLEMENTATION
// Get rest of line. lineBuffer filled as side-effect...	WITHOUT_CLASSIFICATION	0.9999882513737913	WITHOUT_CLASSIFICATION	1.1748626208679185E-5	IMPLEMENTATION
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999032700107716	WITHOUT_CLASSIFICATION	9.67299892284272E-5	IMPLEMENTATION
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999032700107716	WITHOUT_CLASSIFICATION	9.67299892284272E-5	IMPLEMENTATION
// End of string (], ), }, >, ', ", \0)	WITHOUT_CLASSIFICATION	0.9999989986384777	WITHOUT_CLASSIFICATION	1.0013615222577869E-6	IMPLEMENTATION
// How many strings are nested in the current string term	WITHOUT_CLASSIFICATION	0.9999986719875577	WITHOUT_CLASSIFICATION	1.3280124424190637E-6	IMPLEMENTATION
// Single-quote fast path	WITHOUT_CLASSIFICATION	0.9998896856441799	WITHOUT_CLASSIFICATION	1.1031435582007878E-4	IMPLEMENTATION
// Regexp engine 'java'	WITHOUT_CLASSIFICATION	0.9999421986352579	WITHOUT_CLASSIFICATION	5.780136474203966E-5	IMPLEMENTATION
// Was a goto in original ruby lexer	WITHOUT_CLASSIFICATION	0.9999849966510795	WITHOUT_CLASSIFICATION	1.5003348920364966E-5	IMPLEMENTATION
/* just ignore */	WITHOUT_CLASSIFICATION	0.9999889032016187	WITHOUT_CLASSIFICATION	1.1096798381242385E-5	IMPLEMENTATION
/* octal constant */	WITHOUT_CLASSIFICATION	0.9998748650076926	WITHOUT_CLASSIFICATION	1.2513499230732124E-4	IMPLEMENTATION
/* hex constant */	WITHOUT_CLASSIFICATION	0.999878747654074	WITHOUT_CLASSIFICATION	1.2125234592597536E-4	IMPLEMENTATION
// PUSH(1)	WITHOUT_CLASSIFICATION	0.9999914754825183	WITHOUT_CLASSIFICATION	8.524517481776458E-6	IMPLEMENTATION
// POP	WITHOUT_CLASSIFICATION	0.9999914754825183	WITHOUT_CLASSIFICATION	8.524517481776458E-6	IMPLEMENTATION
// PUSH(0).  If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.	WITHOUT_CLASSIFICATION	0.9999709611992053	WITHOUT_CLASSIFICATION	2.9038800794731577E-5	IMPLEMENTATION
// LEXPOP	WITHOUT_CLASSIFICATION	0.9999914754825183	WITHOUT_CLASSIFICATION	8.524517481776458E-6	IMPLEMENTATION
// SET_P	WITHOUT_CLASSIFICATION	0.9999914754825183	WITHOUT_CLASSIFICATION	8.524517481776458E-6	IMPLEMENTATION
// Marker delimiting heredoc boundary	WITHOUT_CLASSIFICATION	0.9999141937873723	WITHOUT_CLASSIFICATION	8.580621262770399E-5	IMPLEMENTATION
// Found end marker for this heredoc	WITHOUT_CLASSIFICATION	0.9994779363122444	WITHOUT_CLASSIFICATION	5.220636877557266E-4	IMPLEMENTATION
// Put back lastLine for any elements past start of heredoc marker	WITHOUT_CLASSIFICATION	0.9999943668364057	WITHOUT_CLASSIFICATION	5.633163594304495E-6	IMPLEMENTATION
// Last token read via yylex().	WITHOUT_CLASSIFICATION	0.9999827416273267	WITHOUT_CLASSIFICATION	1.7258372673246168E-5	IMPLEMENTATION
// Value of last token which had a value associated with it.	WITHOUT_CLASSIFICATION	0.9999965051515526	WITHOUT_CLASSIFICATION	3.4948484473925283E-6	IMPLEMENTATION
// Stream of data that yylex() examines.	WITHOUT_CLASSIFICATION	0.9999803963760187	WITHOUT_CLASSIFICATION	1.9603623981344298E-5	IMPLEMENTATION
// Used for tiny smidgen of grammar in lexer (see setParserSupport())	WITHOUT_CLASSIFICATION	0.9999998294885137	WITHOUT_CLASSIFICATION	1.705114862528957E-7	IMPLEMENTATION
// Give a name to a value.  Enebo: This should be used more.	WITHOUT_CLASSIFICATION	0.9999115951924569	WITHOUT_CLASSIFICATION	8.840480754313421E-5	IMPLEMENTATION
// When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').	WITHOUT_CLASSIFICATION	0.9989636835489994	WITHOUT_CLASSIFICATION	0.0010363164510005527	IMPLEMENTATION
// Are we lexing Ruby 1.8 or 1.9+ syntax	WITHOUT_CLASSIFICATION	0.9998867728510851	WITHOUT_CLASSIFICATION	1.1322714891500573E-4	IMPLEMENTATION
// Count of nested parentheses (1.9 only)	WITHOUT_CLASSIFICATION	0.9998984628146311	WITHOUT_CLASSIFICATION	1.0153718536892377E-4	IMPLEMENTATION
// 1.9 only	WITHOUT_CLASSIFICATION	0.9998090491235334	WITHOUT_CLASSIFICATION	1.9095087646670448E-4	IMPLEMENTATION
// Short-hand (e.g. %{,%.,%!,... versus %Q{).	WITHOUT_CLASSIFICATION	0.999934378872884	WITHOUT_CLASSIFICATION	6.562112711592449E-5	IMPLEMENTATION
// Long-hand (e.g. %Q{}).	WITHOUT_CLASSIFICATION	0.9999579682532451	WITHOUT_CLASSIFICATION	4.203174675487837E-5	IMPLEMENTATION
/* no mb || ismbchar(term)*/	WITHOUT_CLASSIFICATION	0.9971724696268984	WITHOUT_CLASSIFICATION	0.002827530373101695	IMPLEMENTATION
/*     * Not normally used, but is left in here since it can be useful in debugging     * grammar and lexing problems.     *     */	WITHOUT_CLASSIFICATION	0.9999999490562949	WITHOUT_CLASSIFICATION	5.094370513452289E-8	IMPLEMENTATION
// DEBUGGING HELP 	WITHOUT_CLASSIFICATION	0.9996202478932676	WITHOUT_CLASSIFICATION	3.7975210673231463E-4	IMPLEMENTATION
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999984386024293	WITHOUT_CLASSIFICATION	1.5613975706521305E-6	IMPLEMENTATION
/* end of script. */	WITHOUT_CLASSIFICATION	0.9998559559290682	WITHOUT_CLASSIFICATION	1.4404407093189812E-4	IMPLEMENTATION
/* white spaces */	WITHOUT_CLASSIFICATION	0.9999540553588034	WITHOUT_CLASSIFICATION	4.594464119661553E-5	IMPLEMENTATION
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999984386024293	WITHOUT_CLASSIFICATION	1.5613975706521305E-6	IMPLEMENTATION
/* it's a comment */	WITHOUT_CLASSIFICATION	0.9998391990327077	WITHOUT_CLASSIFICATION	1.6080096729228948E-4	IMPLEMENTATION
// Replace a string of newlines with a single one	WITHOUT_CLASSIFICATION	0.9999972899887305	WITHOUT_CLASSIFICATION	2.7100112695564282E-6	IMPLEMENTATION
/* $\: output record separator */	WITHOUT_CLASSIFICATION	0.9999947092578492	WITHOUT_CLASSIFICATION	5.29074215082658E-6	IMPLEMENTATION
// EOF (ENEBO: After default?	WITHOUT_CLASSIFICATION	0.9999365035519949	WITHOUT_CLASSIFICATION	6.34964480050407E-5	IMPLEMENTATION
// documentation nodes	WITHOUT_CLASSIFICATION	0.9999308373638535	WITHOUT_CLASSIFICATION	6.916263614653513E-5	IMPLEMENTATION
// In case last next was the newline.	WITHOUT_CLASSIFICATION	0.9999560293820106	WITHOUT_CLASSIFICATION	4.397061798943266E-5	IMPLEMENTATION
// Just a plain bang	WITHOUT_CLASSIFICATION	0.9997855451892669	WITHOUT_CLASSIFICATION	2.14454810733189E-4	IMPLEMENTATION
/* $_: last read line string */	WITHOUT_CLASSIFICATION	0.9999999159710802	WITHOUT_CLASSIFICATION	8.402891981251286E-8	IMPLEMENTATION
/* $~: match-data */	WITHOUT_CLASSIFICATION	0.999930388944247	WITHOUT_CLASSIFICATION	6.961105575302719E-5	IMPLEMENTATION
/* $*: argv */	WITHOUT_CLASSIFICATION	0.999930388944247	WITHOUT_CLASSIFICATION	6.961105575302719E-5	IMPLEMENTATION
/* $$: pid */	WITHOUT_CLASSIFICATION	0.9999307793613321	WITHOUT_CLASSIFICATION	6.922063866788291E-5	IMPLEMENTATION
/* $?: last status */	WITHOUT_CLASSIFICATION	0.9999841634381741	WITHOUT_CLASSIFICATION	1.5836561825936853E-5	IMPLEMENTATION
/* $!: error string */	WITHOUT_CLASSIFICATION	0.999999161382262	WITHOUT_CLASSIFICATION	8.386177378872993E-7	IMPLEMENTATION
/* $@: error position */	WITHOUT_CLASSIFICATION	0.9999722988699528	WITHOUT_CLASSIFICATION	2.7701130047269802E-5	IMPLEMENTATION
/* $/: input record separator */	WITHOUT_CLASSIFICATION	0.9999934267418522	WITHOUT_CLASSIFICATION	6.573258147793787E-6	IMPLEMENTATION
/* $;: field separator */	WITHOUT_CLASSIFICATION	0.999995398292782	WITHOUT_CLASSIFICATION	4.601707218103588E-6	IMPLEMENTATION
/* $,: output field separator */	WITHOUT_CLASSIFICATION	0.9999956448343541	WITHOUT_CLASSIFICATION	4.355165645881765E-6	IMPLEMENTATION
/* $.: last read line number */	WITHOUT_CLASSIFICATION	0.9999951969153092	WITHOUT_CLASSIFICATION	4.8030846907870486E-6	IMPLEMENTATION
/* $=: ignorecase */	WITHOUT_CLASSIFICATION	0.999930388944247	WITHOUT_CLASSIFICATION	6.961105575302719E-5	IMPLEMENTATION
/* $:: load path */	WITHOUT_CLASSIFICATION	0.9998692020939843	WITHOUT_CLASSIFICATION	1.307979060157018E-4	IMPLEMENTATION
/* $<: reading filename */	WITHOUT_CLASSIFICATION	0.999998468723392	WITHOUT_CLASSIFICATION	1.5312766078481832E-6	IMPLEMENTATION
/* $": already loaded files */	WITHOUT_CLASSIFICATION	0.9999981593848485	WITHOUT_CLASSIFICATION	1.8406151514569982E-6	IMPLEMENTATION
/* $&: last match */	WITHOUT_CLASSIFICATION	0.9999753088791515	WITHOUT_CLASSIFICATION	2.4691120848474468E-5	IMPLEMENTATION
/* $`: string before last match */	WITHOUT_CLASSIFICATION	0.9999998892422438	WITHOUT_CLASSIFICATION	1.1075775608545647E-7	IMPLEMENTATION
/* $': string after last match */	WITHOUT_CLASSIFICATION	0.9999999280385269	WITHOUT_CLASSIFICATION	7.196147312811695E-8	IMPLEMENTATION
// methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop	WITHOUT_CLASSIFICATION	0.9999995555283094	WITHOUT_CLASSIFICATION	4.444716905746211E-7	IMPLEMENTATION
/* See if it is a reserved word.  */	WITHOUT_CLASSIFICATION	0.9999970387147366	WITHOUT_CLASSIFICATION	2.961285263370331E-6	IMPLEMENTATION
// enum lex_state	WITHOUT_CLASSIFICATION	0.9996203614155427	WITHOUT_CLASSIFICATION	3.7963858445735384E-4	IMPLEMENTATION
// block (primary)	WITHOUT_CLASSIFICATION	0.9995512799282417	WITHOUT_CLASSIFICATION	4.4872007175839556E-4	IMPLEMENTATION
// block (expr)	WITHOUT_CLASSIFICATION	0.9995512799282417	WITHOUT_CLASSIFICATION	4.4872007175839556E-4	IMPLEMENTATION
// hash	WITHOUT_CLASSIFICATION	0.9999916669942528	WITHOUT_CLASSIFICATION	8.333005747187871E-6	IMPLEMENTATION
// ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.	WITHOUT_CLASSIFICATION	0.999974229568941	WITHOUT_CLASSIFICATION	2.577043105892167E-5	IMPLEMENTATION
// FIXME: peek('u') utf8 stuff for 1.9	WITHOUT_CLASSIFICATION	0.9776571473185144	WITHOUT_CLASSIFICATION	0.022342852681485698	IMPLEMENTATION
// We don't append '+' since Java number parser gets confused	WITHOUT_CLASSIFICATION	0.999997651340815	WITHOUT_CLASSIFICATION	2.348659185053256E-6	IMPLEMENTATION
//  hexadecimal	WITHOUT_CLASSIFICATION	0.9995579181311584	WITHOUT_CLASSIFICATION	4.420818688416879E-4	IMPLEMENTATION
// binary	WITHOUT_CLASSIFICATION	0.9999937552799125	WITHOUT_CLASSIFICATION	6.2447200875042966E-6	IMPLEMENTATION
// decimal	WITHOUT_CLASSIFICATION	0.9999938109730023	WITHOUT_CLASSIFICATION	6.189026997599935E-6	IMPLEMENTATION
//Octal	WITHOUT_CLASSIFICATION	0.9999709824961172	WITHOUT_CLASSIFICATION	2.9017503882815074E-5	IMPLEMENTATION
//  '_' in number just ignored	WITHOUT_CLASSIFICATION	0.9999745814345511	WITHOUT_CLASSIFICATION	2.5418565448901108E-5	IMPLEMENTATION
// backslash	WITHOUT_CLASSIFICATION	0.9996250339138667	WITHOUT_CLASSIFICATION	3.74966086133202E-4	IMPLEMENTATION
// newline	WITHOUT_CLASSIFICATION	0.9999918860478285	WITHOUT_CLASSIFICATION	8.113952171441533E-6	IMPLEMENTATION
// horizontal tab	WITHOUT_CLASSIFICATION	0.9986207992174372	WITHOUT_CLASSIFICATION	0.0013792007825628454	IMPLEMENTATION
// form feed	WITHOUT_CLASSIFICATION	0.9996073544530263	WITHOUT_CLASSIFICATION	3.9264554697367583E-4	IMPLEMENTATION
// vertical tab	WITHOUT_CLASSIFICATION	0.9984287972749528	WITHOUT_CLASSIFICATION	0.0015712027250472118	IMPLEMENTATION
// alarm(bell)	WITHOUT_CLASSIFICATION	0.9996200707317198	WITHOUT_CLASSIFICATION	3.7992926828032465E-4	IMPLEMENTATION
// escape	WITHOUT_CLASSIFICATION	0.9999976183554441	WITHOUT_CLASSIFICATION	2.3816445559361054E-6	IMPLEMENTATION
// hex constant	WITHOUT_CLASSIFICATION	0.9993383707362923	WITHOUT_CLASSIFICATION	6.616292637076919E-4	IMPLEMENTATION
//char hexValue = scanHex(2);	WITHOUT_CLASSIFICATION	0.9997244015289452	WITHOUT_CLASSIFICATION	2.755984710548597E-4	IMPLEMENTATION
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999953486728201	WITHOUT_CLASSIFICATION	4.6513271798489086E-6	IMPLEMENTATION
// space	WITHOUT_CLASSIFICATION	0.9999974887450619	WITHOUT_CLASSIFICATION	2.5112549380433505E-6	IMPLEMENTATION
// Where we started this marker match	WITHOUT_CLASSIFICATION	0.9996863828643007	WITHOUT_CLASSIFICATION	3.136171356994131E-4	IMPLEMENTATION
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999998375350924	WITHOUT_CLASSIFICATION	1.6246490768568468E-7	IMPLEMENTATION
// We use offset here to keep track of extra newlines for windows	WITHOUT_CLASSIFICATION	0.999985543047209	WITHOUT_CLASSIFICATION	1.4456952791050128E-5	IMPLEMENTATION
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999953486728201	WITHOUT_CLASSIFICATION	4.6513271798489086E-6	IMPLEMENTATION
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.5107440760679198	IMPLEMENTATION	0.48925592393208023	WITHOUT_CLASSIFICATION
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.5107440760679198	IMPLEMENTATION	0.48925592393208023	WITHOUT_CLASSIFICATION
// Where we get our newest char's	WITHOUT_CLASSIFICATION	0.9999553255246634	WITHOUT_CLASSIFICATION	4.4674475336674196E-5	IMPLEMENTATION
// Our readback/pushback buffer.	WITHOUT_CLASSIFICATION	0.9999179359019544	WITHOUT_CLASSIFICATION	8.2064098045609E-5	IMPLEMENTATION
// index of last character in pushback buffer	WITHOUT_CLASSIFICATION	0.9999881512445934	WITHOUT_CLASSIFICATION	1.1848755406669996E-5	IMPLEMENTATION
// Character read before previous read	WITHOUT_CLASSIFICATION	0.999982399136996	WITHOUT_CLASSIFICATION	1.7600863003860188E-5	IMPLEMENTATION
// keep value of twoAgo around so we can restore after we unread	WITHOUT_CLASSIFICATION	0.9999955260514477	WITHOUT_CLASSIFICATION	4.4739485522204695E-6	IMPLEMENTATION
// NetProtocolBufferedIOLibrary	WITHOUT_CLASSIFICATION	0.9999004402456029	WITHOUT_CLASSIFICATION	9.955975439703077E-5	IMPLEMENTATION
// BigDecimalLibrary	WITHOUT_CLASSIFICATION	0.9996200707317198	WITHOUT_CLASSIFICATION	3.7992926828032465E-4	IMPLEMENTATION
// TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. // We did it here for now	WITHOUT_CLASSIFICATION	0.8776226165045827	IMPLEMENTATION	0.12237738349541717	WITHOUT_CLASSIFICATION
// Ruby's designation for some platforms, minus version numbers in some cases	WITHOUT_CLASSIFICATION	0.9999899918676116	WITHOUT_CLASSIFICATION	1.0008132388387387E-5	IMPLEMENTATION
// that's what JDK5 produces on Windows Vista	WITHOUT_CLASSIFICATION	0.9957043903901742	WITHOUT_CLASSIFICATION	0.004295609609825745	IMPLEMENTATION
// Rubygems is too specific on host cpu so until we have real need lets default to universal //setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));	WITHOUT_CLASSIFICATION	0.9996366241314031	WITHOUT_CLASSIFICATION	3.633758685969126E-4	IMPLEMENTATION
// Our shell scripts pass in non-canonicalized paths, but even if we didn't // anyone who did would become unhappy because Ruby apps expect no relative // operators in the pathname (rubygems, for example).	WITHOUT_CLASSIFICATION	0.9999993575960819	WITHOUT_CLASSIFICATION	6.424039179785776E-7	IMPLEMENTATION
// this set is only for darwin	WITHOUT_CLASSIFICATION	0.9999906022929435	WITHOUT_CLASSIFICATION	9.397707056619369E-6	IMPLEMENTATION
// DigestLibrary	WITHOUT_CLASSIFICATION	0.9996200707317198	WITHOUT_CLASSIFICATION	3.7992926828032465E-4	IMPLEMENTATION
// all errors, just info; do not prevent loading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9942269914999401	WITHOUT_CLASSIFICATION	0.00577300850005983	IMPLEMENTATION
// all errors, just info; do not prevent unloading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9934432263820415	WITHOUT_CLASSIFICATION	0.006556773617958442	IMPLEMENTATION
// do nothing, return dummy version below	WITHOUT_CLASSIFICATION	0.9999836746676283	WITHOUT_CLASSIFICATION	1.6325332371770088E-5	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
// line 329	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9996828848038328	WITHOUT_CLASSIFICATION	3.1711519616724383E-4	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999411344711847	WITHOUT_CLASSIFICATION	5.88655288152728E-5	IMPLEMENTATION
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9999222037321788	WITHOUT_CLASSIFICATION	7.779626782131826E-5	IMPLEMENTATION
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999469853800008	WITHOUT_CLASSIFICATION	5.3014619999214936E-5	IMPLEMENTATION
// shift to yyN	WITHOUT_CLASSIFICATION	0.9996787798312137	WITHOUT_CLASSIFICATION	3.212201687863527E-4	IMPLEMENTATION
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9996254309724896	WITHOUT_CLASSIFICATION	3.7456902751032995E-4	IMPLEMENTATION
// leave stack alone	WITHOUT_CLASSIFICATION	0.9998174979536083	WITHOUT_CLASSIFICATION	1.8250204639181562E-4	IMPLEMENTATION
// line 271	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 274	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 303	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 311	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 314	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 317	WITHOUT_CLASSIFICATION	0.9994833648682918	WITHOUT_CLASSIFICATION	5.166351317082486E-4	IMPLEMENTATION
// line 332	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 338	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 341	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 344	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 351	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 358	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 367	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 372	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 378	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 382	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 407	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 411	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 414	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 417	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 420	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 426	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 434	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 443	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 446	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 452	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 457	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 464	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 467	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 470	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 479	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 484	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 486	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 492	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 498	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 501	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 504	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 507	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 510	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 519	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 525	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
// line 537	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 540	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 543	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 546	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 556	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 559	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 563	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 566	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 569	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 575	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 578	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 587	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 596	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 604	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 607	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 610	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 613	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 616	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 634	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 638	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 643	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 646	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 655	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 660	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 667	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 670	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 672	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 696	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 701	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 717	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 720	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 726	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 729	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 732	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 735	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 738	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 751	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 754	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 757	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 760	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 763	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 769	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 772	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 775	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 782	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 788	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 791	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 794	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 797	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 803	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 806	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 809	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 815	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 818	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 821	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 824	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 830	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 833	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 836	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 839	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 842	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 848	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 852	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 858	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 861	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 868	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 871	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 876	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 879	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 883	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 893	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 896	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 899	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 903	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 907	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 915	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 920	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 923	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 926	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 932	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 936	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 940	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 944	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 948	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 956	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 960	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 964	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 967	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 972	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 978	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 980	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 984	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 986	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 996	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1001	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1004	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1008	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1014	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1029	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1032	WITHOUT_CLASSIFICATION	0.9994845756119747	WITHOUT_CLASSIFICATION	5.154243880252315E-4	IMPLEMENTATION
// line 1034	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1045	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1048	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1051	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1058	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1070	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1073	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1076	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1079	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1082	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1089	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1097	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1100	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1103	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1107	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1111	WITHOUT_CLASSIFICATION	0.9994837400928003	WITHOUT_CLASSIFICATION	5.162599071998135E-4	IMPLEMENTATION
// line 1113	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1115	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1119	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1130	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1133	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1135	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1137	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1140	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1151	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1154	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1158	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1164	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1175	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1178	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1187	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1189	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1193	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1204	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1207	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1210	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1214	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1234	WITHOUT_CLASSIFICATION	0.9994886694915599	WITHOUT_CLASSIFICATION	5.113305084400921E-4	IMPLEMENTATION
// line 1239	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1243	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1247	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1251	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1263	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1269	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1280	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1283	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1290	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1296	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1299	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1302	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1309	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1313	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1315	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1320	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1328	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1335	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1348	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1352	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1358	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1374	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1381	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1387	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1392	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1415	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1431	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1434	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1440	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1443	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1453	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1456	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1462	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1465	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1470	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1477	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1480	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1485	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1488	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1496	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1502	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1510	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1513	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1516	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1533	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1550	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1553	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1556	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1565	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1568	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1571	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1574	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1577	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1587	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1595	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1598	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1600	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1609	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1623	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1626	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1629	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1632	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1638	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1641	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1644	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1649	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1655	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1658	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1661	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1672	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1677	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1687	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1694	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1705	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1708	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1725	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1733	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1742	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1745	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1749	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1757	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1769	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1772	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1775	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1784	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1808	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1814	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1818	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1822	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
/* force for args */	WITHOUT_CLASSIFICATION	0.9999166152734343	WITHOUT_CLASSIFICATION	8.338472656564349E-5	IMPLEMENTATION
/*XXX 0;*/	WITHOUT_CLASSIFICATION	0.9999709824961172	WITHOUT_CLASSIFICATION	2.9017503882815074E-5	IMPLEMENTATION
/*                      $$ = $3;*/	WITHOUT_CLASSIFICATION	0.9896972422161053	WITHOUT_CLASSIFICATION	0.010302757783894641	IMPLEMENTATION
/*                  }*/	WITHOUT_CLASSIFICATION	0.9973721041309849	WITHOUT_CLASSIFICATION	0.00262789586901517	IMPLEMENTATION
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9998064428293739	WITHOUT_CLASSIFICATION	1.9355717062601458E-4	IMPLEMENTATION
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9926178696329432	WITHOUT_CLASSIFICATION	0.007382130367056862	IMPLEMENTATION
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9942683363892562	WITHOUT_CLASSIFICATION	0.005731663610743861	IMPLEMENTATION
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9942683363892562	WITHOUT_CLASSIFICATION	0.005731663610743861	IMPLEMENTATION
/* NOEX_PRIVATE for toplevel */	WITHOUT_CLASSIFICATION	0.9999924372641027	WITHOUT_CLASSIFICATION	7.562735897316966E-6	IMPLEMENTATION
/*mirko: check*/	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
/* Include pipes on multiple arg type*/	WITHOUT_CLASSIFICATION	0.8102516246939107	WITHOUT_CLASSIFICATION	0.1897483753060893	IMPLEMENTATION
// line 529	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9955079393756413	WITHOUT_CLASSIFICATION	0.004492060624358655	IMPLEMENTATION
/* XXX*/	WITHOUT_CLASSIFICATION	0.9993972156628054	WITHOUT_CLASSIFICATION	6.027843371946588E-4	IMPLEMENTATION
/* zero length array */	WITHOUT_CLASSIFICATION	0.999993845162855	WITHOUT_CLASSIFICATION	6.154837144962128E-6	IMPLEMENTATION
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9930784177732983	WITHOUT_CLASSIFICATION	0.006921582226701588	IMPLEMENTATION
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9955079393756413	WITHOUT_CLASSIFICATION	0.004492060624358655	IMPLEMENTATION
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9930043427887654	WITHOUT_CLASSIFICATION	0.00699565721123464	IMPLEMENTATION
// line 1827 "DefaultRubyParser.y"	WITHOUT_CLASSIFICATION	0.9998645717414405	WITHOUT_CLASSIFICATION	1.354282585595228E-4	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.999919914903576	WITHOUT_CLASSIFICATION	8.008509642398469E-5	IMPLEMENTATION
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.999560942032328	WITHOUT_CLASSIFICATION	4.390579676719421E-4	IMPLEMENTATION
// line 7713 "-"	WITHOUT_CLASSIFICATION	0.9994838903254577	WITHOUT_CLASSIFICATION	5.161096745422874E-4	IMPLEMENTATION
// local scopes are argument scopes by default	WITHOUT_CLASSIFICATION	0.9999995263769073	WITHOUT_CLASSIFICATION	4.7362309271559405E-7	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999979460884215	WITHOUT_CLASSIFICATION	2.0539115785476684E-6	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999979460884215	WITHOUT_CLASSIFICATION	2.0539115785476684E-6	IMPLEMENTATION
// We know this is a block scope because a local scope cannot be within a local scope // If topScope was itself it would have created a LocalAsgnNode above.	WITHOUT_CLASSIFICATION	0.9999990305965781	WITHOUT_CLASSIFICATION	9.694034218959487E-7	IMPLEMENTATION
// ENEBO: 1.9 has CURR nodes for local/block variables.  We don't.  I believe we follow proper logic	WITHOUT_CLASSIFICATION	0.9998334447246234	WITHOUT_CLASSIFICATION	1.6655527537666053E-4	IMPLEMENTATION
// odd...but it is odd in ruby too.	WITHOUT_CLASSIFICATION	0.9999868525391128	WITHOUT_CLASSIFICATION	1.3147460887241426E-5	IMPLEMENTATION
// What linenumber will the source think it starts from?	WITHOUT_CLASSIFICATION	0.9995886543093973	WITHOUT_CLASSIFICATION	4.113456906026609E-4	IMPLEMENTATION
// Is this inline source (aka -e "...source...")	WITHOUT_CLASSIFICATION	0.999753310688619	WITHOUT_CLASSIFICATION	2.4668931138107584E-4	IMPLEMENTATION
// We parse evals more often in source so assume an eval parse.	WITHOUT_CLASSIFICATION	0.9999987213794415	WITHOUT_CLASSIFICATION	1.2786205586231708E-6	IMPLEMENTATION
// Should positions added extra IDE-friendly information and leave in all newline nodes	WITHOUT_CLASSIFICATION	0.9999996942694734	WITHOUT_CLASSIFICATION	3.057305265388879E-7	IMPLEMENTATION
// Will parser parse Duby grammar Extensions	WITHOUT_CLASSIFICATION	0.9999857561218725	WITHOUT_CLASSIFICATION	1.4243878127559436E-5	IMPLEMENTATION
// Should we display extra debug information while parsing?	WITHOUT_CLASSIFICATION	0.9999717235525186	WITHOUT_CLASSIFICATION	2.8276447481388083E-5	IMPLEMENTATION
// __END__ marker offset (-1 means none present)	WITHOUT_CLASSIFICATION	0.9999607515908587	WITHOUT_CLASSIFICATION	3.9248409141189374E-5	IMPLEMENTATION
// Parser states:	WITHOUT_CLASSIFICATION	0.9996226378713967	WITHOUT_CLASSIFICATION	3.773621286032686E-4	IMPLEMENTATION
// Is the parser current within a singleton (value is number of nested singletons)	WITHOUT_CLASSIFICATION	0.9996866490455273	WITHOUT_CLASSIFICATION	3.133509544726995E-4	IMPLEMENTATION
// Is the parser currently within a method definition	WITHOUT_CLASSIFICATION	0.9935051130139281	WITHOUT_CLASSIFICATION	0.006494886986071918	IMPLEMENTATION
// LOCALVAR	WITHOUT_CLASSIFICATION	0.9996200707317198	WITHOUT_CLASSIFICATION	3.7992926828032465E-4	IMPLEMENTATION
// CONSTANT	WITHOUT_CLASSIFICATION	0.9996200707317198	WITHOUT_CLASSIFICATION	3.7992926828032465E-4	IMPLEMENTATION
// INSTANCE VARIABLE	WITHOUT_CLASSIFICATION	0.9996200707317198	WITHOUT_CLASSIFICATION	3.7992926828032465E-4	IMPLEMENTATION
// Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])	WITHOUT_CLASSIFICATION	0.9998258899056267	WITHOUT_CLASSIFICATION	1.7411009437339094E-4	IMPLEMENTATION
/* MRI: block_append */	WITHOUT_CLASSIFICATION	0.9999883188349251	WITHOUT_CLASSIFICATION	1.1681165074982326E-5	IMPLEMENTATION
// Reduces overhead in interp by not set position every single line we encounter. 	WITHOUT_CLASSIFICATION	0.9980602838115523	WITHOUT_CLASSIFICATION	0.0019397161884476904	IMPLEMENTATION
// Assumption: tail is never a list node	WITHOUT_CLASSIFICATION	0.9991987931509515	WITHOUT_CLASSIFICATION	8.012068490484435E-4	IMPLEMENTATION
//        return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));	WITHOUT_CLASSIFICATION	0.9999253202430951	WITHOUT_CLASSIFICATION	7.467975690499286E-5	IMPLEMENTATION
// Node	WITHOUT_CLASSIFICATION	0.9999916526789522	WITHOUT_CLASSIFICATION	8.347321047759837E-6	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9605487950578147	WITHOUT_CLASSIFICATION	0.03945120494218537	IMPLEMENTATION
/*case CONSTNODE:                handleUselessWarn(node, "a constant"); return;*/	WITHOUT_CLASSIFICATION	0.9996057407420543	WITHOUT_CLASSIFICATION	3.942592579456487E-4	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9605487950578147	WITHOUT_CLASSIFICATION	0.03945120494218537	IMPLEMENTATION
/*case CLASSNODE: case COLON2NODE:                handleUselessWarn(node, "::"); return;*/	WITHOUT_CLASSIFICATION	0.9994776290389146	WITHOUT_CLASSIFICATION	5.22370961085372E-4	IMPLEMENTATION
/*case SELFNODE:                handleUselessWarn(node, "self"); return;*/	WITHOUT_CLASSIFICATION	0.9996057407420543	WITHOUT_CLASSIFICATION	3.942592579456487E-4	IMPLEMENTATION
// FIXME: DSTR,EVSTR,STR: warning "string literal in condition"	WITHOUT_CLASSIFICATION	0.9927430524590126	WITHOUT_CLASSIFICATION	0.007256947540987399	IMPLEMENTATION
/* MRI: range_op */	WITHOUT_CLASSIFICATION	0.999930388944247	WITHOUT_CLASSIFICATION	6.961105575302719E-5	IMPLEMENTATION
// Block and block pass passed in at same time....uh oh	WITHOUT_CLASSIFICATION	0.9999805303357825	WITHOUT_CLASSIFICATION	1.9469664217534093E-5	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.9999914754825183	WITHOUT_CLASSIFICATION	8.524517481776458E-6	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.9999914754825183	WITHOUT_CLASSIFICATION	8.524517481776458E-6	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.9999914754825183	WITHOUT_CLASSIFICATION	8.524517481776458E-6	IMPLEMENTATION
// tail must be EvStrNode at this point 	WITHOUT_CLASSIFICATION	0.9998236737429962	WITHOUT_CLASSIFICATION	1.7632625700377192E-4	IMPLEMENTATION
//Do not add an empty string node	WITHOUT_CLASSIFICATION	0.9999037860167739	WITHOUT_CLASSIFICATION	9.621398322607567E-5	IMPLEMENTATION
// Zero-Argument declaration	WITHOUT_CLASSIFICATION	0.9999606073034816	WITHOUT_CLASSIFICATION	3.9392696518372565E-5	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999411344711847	WITHOUT_CLASSIFICATION	5.88655288152728E-5	IMPLEMENTATION
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999469853800008	WITHOUT_CLASSIFICATION	5.3014619999214936E-5	IMPLEMENTATION
// shift to yyN	WITHOUT_CLASSIFICATION	0.9996787798312137	WITHOUT_CLASSIFICATION	3.212201687863527E-4	IMPLEMENTATION
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9996254309724896	WITHOUT_CLASSIFICATION	3.7456902751032995E-4	IMPLEMENTATION
// leave stack alone	WITHOUT_CLASSIFICATION	0.9998174979536083	WITHOUT_CLASSIFICATION	1.8250204639181562E-4	IMPLEMENTATION
// line 321	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 351	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 382	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 417	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 420	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 423	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 426	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 280	WITHOUT_CLASSIFICATION	0.9994836674886057	WITHOUT_CLASSIFICATION	5.163325113942283E-4	IMPLEMENTATION
// line 283	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 296	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 324	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 327	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 331	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 333	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 336	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 342	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 345	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 348	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 354	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 368	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 377	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 388	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 392	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 397	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 429	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 432	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 436	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 445	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 448	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 454	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 459	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 466	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 469	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 478	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 481	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 488	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 494	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 497	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 503	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 506	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 509	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 512	WITHOUT_CLASSIFICATION	0.9994840449334711	WITHOUT_CLASSIFICATION	5.159550665288815E-4	IMPLEMENTATION
// line 521	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 526	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 540	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 543	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 546	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 566	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 610	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 672	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 691	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 696	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 772	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 782	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 785	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 788	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 791	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 534	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 549	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 552	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 558	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 561	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 571	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 574	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 579	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 586	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 589	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 592	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 595	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 598	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 623	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 627	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 630	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 633	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 639	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 648	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 657	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 661	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 666	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 678	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 682	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 688	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 699	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 706	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 708	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 727	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 737	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 753	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 779	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 801	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 808	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 811	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 817	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 842	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 845	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 848	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 893	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 899	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 932	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 944	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 960	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 980	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1004	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1038	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 820	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 826	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 829	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 832	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 851	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 857	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 860	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 863	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 866	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 869	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 875	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 884	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 887	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 890	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 902	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 909	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 912	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 916	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 922	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 928	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 941	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 947	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 951	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 955	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 965	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 969	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 977	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 983	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1013	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1023	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1035	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1041	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1043	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1054	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1057	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1060	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1069	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1075	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1105	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1111	WITHOUT_CLASSIFICATION	0.9994837400928003	WITHOUT_CLASSIFICATION	5.162599071998135E-4	IMPLEMENTATION
// line 1122	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1130	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1140	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1158	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1204	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1207	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1247	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1251	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1261	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1078	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1084	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1087	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1090	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1093	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1114	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1116	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1118	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1124	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1126	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1138	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1144	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1149	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1155	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1162	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1173	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1179	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1182	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1190	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1196	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1213	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1217	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1231	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1236	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1244	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1254	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1258	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1264	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1270	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1273	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1276	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1279	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1282	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1289	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1292	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1295	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1298	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1305	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1348	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1387	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1392	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1448	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1462	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1470	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1496	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1502	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1595	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1598	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1308	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1311	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1317	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1323	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1326	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1329	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1337	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1342	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1345	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1354	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1359	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1366	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1369	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1373	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1377	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1383	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1399	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1401	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1406	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1417	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1424	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1427	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1430	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1433	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1436	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1442	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1445	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1458	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1464	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1489	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1493	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1507	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1519	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1532	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1538	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1542	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1557	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1573	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1591	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1615	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1629	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1632	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1705	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1716	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1725	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1742	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1749	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1818	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1822	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1607	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1610	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1622	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1625	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1636	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1639	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1647	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1651	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1657	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1660	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1663	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1678	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1702	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1711	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1719	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1722	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1731	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1734	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1738	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1746	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1756	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1758	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1761	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1767	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1776	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1782	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1785	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1788	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1791	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1797	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1800	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1803	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1806	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1809	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1815	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1825	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1828	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1831	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1847	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9942683363892562	WITHOUT_CLASSIFICATION	0.005731663610743861	IMPLEMENTATION
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9942683363892562	WITHOUT_CLASSIFICATION	0.005731663610743861	IMPLEMENTATION
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9955079393756413	WITHOUT_CLASSIFICATION	0.004492060624358655	IMPLEMENTATION
/* zero length array */	WITHOUT_CLASSIFICATION	0.999993845162855	WITHOUT_CLASSIFICATION	6.154837144962128E-6	IMPLEMENTATION
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9930784177732983	WITHOUT_CLASSIFICATION	0.006921582226701588	IMPLEMENTATION
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9955079393756413	WITHOUT_CLASSIFICATION	0.004492060624358655	IMPLEMENTATION
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9930043427887654	WITHOUT_CLASSIFICATION	0.00699565721123464	IMPLEMENTATION
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999012238864379	WITHOUT_CLASSIFICATION	9.877611356210128E-5	IMPLEMENTATION
// line 1854	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1869	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1872	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1877	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1886	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1898	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1902	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1905	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1911	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1918	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1935	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1938	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1942	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1948	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1960	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1963	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1968	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1972	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1982	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1995	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 2000	WITHOUT_CLASSIFICATION	0.9994847103303403	WITHOUT_CLASSIFICATION	5.152896696596659E-4	IMPLEMENTATION
// line 2006	WITHOUT_CLASSIFICATION	0.9994834753538213	WITHOUT_CLASSIFICATION	5.165246461787442E-4	IMPLEMENTATION
// line 2010	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
/* We may need to subtract addition offset off of first */	WITHOUT_CLASSIFICATION	0.999992143967745	WITHOUT_CLASSIFICATION	7.85603225502683E-6	IMPLEMENTATION
/* string fragment (we optimistically take one off in*/	WITHOUT_CLASSIFICATION	0.9999236339047349	WITHOUT_CLASSIFICATION	7.636609526509214E-5	IMPLEMENTATION
/* ParserSupport.literal_concat).  Check token length*/	WITHOUT_CLASSIFICATION	0.9930162205589187	WITHOUT_CLASSIFICATION	0.006983779441081304	IMPLEMENTATION
/* and subtract as neeeded.*/	WITHOUT_CLASSIFICATION	0.9992476375155773	WITHOUT_CLASSIFICATION	7.523624844227166E-4	IMPLEMENTATION
/*                    $$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);  */	WITHOUT_CLASSIFICATION	0.999965603856865	WITHOUT_CLASSIFICATION	3.439614313511703E-5	IMPLEMENTATION
/* ENEBO: arg surrounded by in_defined set/unset*/	WITHOUT_CLASSIFICATION	0.9712138083304478	WITHOUT_CLASSIFICATION	0.028786191669552316	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.999919914903576	WITHOUT_CLASSIFICATION	8.008509642398469E-5	IMPLEMENTATION
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.999560942032328	WITHOUT_CLASSIFICATION	4.390579676719421E-4	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999979460884215	WITHOUT_CLASSIFICATION	2.0539115785476684E-6	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999979460884215	WITHOUT_CLASSIFICATION	2.0539115785476684E-6	IMPLEMENTATION
/* ENEBO: Removed !compile_for_eval which probably is to reduce warnings*/	WITHOUT_CLASSIFICATION	0.9856577683606362	WITHOUT_CLASSIFICATION	0.014342231639363816	IMPLEMENTATION
/* was $$ = null;*/	WITHOUT_CLASSIFICATION	0.9911611870281453	WITHOUT_CLASSIFICATION	0.008838812971854734	IMPLEMENTATION
// line 2019 "Ruby19Parser.y"	WITHOUT_CLASSIFICATION	0.999913253103482	WITHOUT_CLASSIFICATION	8.674689651803657E-5	IMPLEMENTATION
// line 8143 "-"	WITHOUT_CLASSIFICATION	0.9994838903254577	WITHOUT_CLASSIFICATION	5.161096745422874E-4	IMPLEMENTATION
// we know variables cannot be null since localstaticscope will create a 0 length one.	WITHOUT_CLASSIFICATION	0.9999953934620197	WITHOUT_CLASSIFICATION	4.606537980300598E-6	IMPLEMENTATION
// No bit math to store level since we know level is zero for this case	WITHOUT_CLASSIFICATION	0.9999394002428161	WITHOUT_CLASSIFICATION	6.0599757183916173E-5	IMPLEMENTATION
// Next immediate scope.  Variable and constant scoping rules make use of this variable // in different ways.	WITHOUT_CLASSIFICATION	0.9989839879783757	WITHOUT_CLASSIFICATION	0.0010160120216242928	IMPLEMENTATION
// Live reference to module	WITHOUT_CLASSIFICATION	0.999981284546554	WITHOUT_CLASSIFICATION	1.8715453445996903E-5	IMPLEMENTATION
// Next CRef down the lexical structure	WITHOUT_CLASSIFICATION	0.9999563130776777	WITHOUT_CLASSIFICATION	4.3686922322180085E-5	IMPLEMENTATION
// Our name holder (offsets are assigned as variables are added	WITHOUT_CLASSIFICATION	0.9999994489615921	WITHOUT_CLASSIFICATION	5.510384080120576E-7	IMPLEMENTATION
// number of variables in this scope representing required arguments	WITHOUT_CLASSIFICATION	0.9999212942034575	WITHOUT_CLASSIFICATION	7.870579654239935E-5	IMPLEMENTATION
// number of variables in this scope representing optional arguments	WITHOUT_CLASSIFICATION	0.9999742573327869	WITHOUT_CLASSIFICATION	2.574266721310393E-5	IMPLEMENTATION
// index of variable that represents a "rest" arg	WITHOUT_CLASSIFICATION	0.9980334774443751	WITHOUT_CLASSIFICATION	0.0019665225556249827	IMPLEMENTATION
// Note that this object equality check is intentional, to ensure // the string and its interned version are the same object.	WITHOUT_CLASSIFICATION	0.9999998381125464	WITHOUT_CLASSIFICATION	1.6188745352236964E-7	IMPLEMENTATION
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.999947497415348	WITHOUT_CLASSIFICATION	5.250258465193396E-5	IMPLEMENTATION
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.999947497415348	WITHOUT_CLASSIFICATION	5.250258465193396E-5	IMPLEMENTATION
/* Note: Only used by compiler until it can use getConstant again or use some other refactoring */	WITHOUT_CLASSIFICATION	0.9999581559115016	WITHOUT_CLASSIFICATION	4.1844088498442876E-5	IMPLEMENTATION
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9988939692426332	WITHOUT_CLASSIFICATION	0.001106030757366807	IMPLEMENTATION
/* Try and unload the autoload specified from internedName */	WITHOUT_CLASSIFICATION	0.9999984796482341	WITHOUT_CLASSIFICATION	1.5203517659851905E-6	IMPLEMENTATION
// We override that the logic which uses this	WITHOUT_CLASSIFICATION	0.9999220369824815	WITHOUT_CLASSIFICATION	7.796301751854839E-5	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999967270869261	WITHOUT_CLASSIFICATION	3.272913073891826E-6	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9997847793255852	WITHOUT_CLASSIFICATION	2.1522067441493502E-4	IMPLEMENTATION
// source extensions	WITHOUT_CLASSIFICATION	0.9999093025920001	WITHOUT_CLASSIFICATION	9.069740799984797E-5	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9997847793255852	WITHOUT_CLASSIFICATION	2.1522067441493502E-4	IMPLEMENTATION
// . Array given to rest should pass itself // . Array with rest + other args should extract array // . Array with multiple values and NO rest should extract args if there are more than one argument	WITHOUT_CLASSIFICATION	0.9999960982336856	WITHOUT_CLASSIFICATION	3.901766314397046E-6	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.999781712085301	WITHOUT_CLASSIFICATION	2.1828791469900985E-4	IMPLEMENTATION
// Is this thread currently with in a function trace?	WITHOUT_CLASSIFICATION	0.9997050916268173	WITHOUT_CLASSIFICATION	2.949083731827547E-4	IMPLEMENTATION
// Is this thread currently doing an defined? defined should set things like $!	WITHOUT_CLASSIFICATION	0.9846106238548262	WITHOUT_CLASSIFICATION	0.015389376145173717	IMPLEMENTATION
//private UnsynchronizedStack parentStack;	WITHOUT_CLASSIFICATION	0.9997442975142282	WITHOUT_CLASSIFICATION	2.557024857718677E-4	IMPLEMENTATION
//private UnsynchronizedStack frameStack;	WITHOUT_CLASSIFICATION	0.9997442975142282	WITHOUT_CLASSIFICATION	2.557024857718677E-4	IMPLEMENTATION
// List of active dynamic scopes.  Each of these may have captured other dynamic scopes // to implement closures.	WITHOUT_CLASSIFICATION	0.9828781574537334	WITHOUT_CLASSIFICATION	0.017121842546266638	IMPLEMENTATION
// File where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999586681815341	WITHOUT_CLASSIFICATION	4.13318184659446E-5	IMPLEMENTATION
// Line where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9998741416240726	WITHOUT_CLASSIFICATION	1.2585837592736296E-4	IMPLEMENTATION
// In certain places, like grep, we don't use real frames for the // call blocks. This has the effect of not setting the backref in // the correct frame - this delta is activated to the place where // the grep is running in so that the backref will be set in an // appropriate place.	WITHOUT_CLASSIFICATION	0.9982449712619857	WITHOUT_CLASSIFICATION	0.0017550287380143047	IMPLEMENTATION
// TOPLEVEL self and a few others want a top-level scope.  We create this one right // away and then pass it into top-level parse so it ends up being the top level.	WITHOUT_CLASSIFICATION	0.9999717870464604	WITHOUT_CLASSIFICATION	2.821295353963237E-5	IMPLEMENTATION
//////////////////// CATCH MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9996631664529924	WITHOUT_CLASSIFICATION	3.3683354700759794E-4	IMPLEMENTATION
//////////////////// FRAME MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9996631664529924	WITHOUT_CLASSIFICATION	3.3683354700759794E-4	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9949058252984146	WITHOUT_CLASSIFICATION	0.005094174701585317	IMPLEMENTATION
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999099124661368	WITHOUT_CLASSIFICATION	9.008753386313063E-5	IMPLEMENTATION
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999099124661368	WITHOUT_CLASSIFICATION	9.008753386313063E-5	IMPLEMENTATION
// look for mangling markers for compiled Ruby in method name	WITHOUT_CLASSIFICATION	0.9998427983879227	WITHOUT_CLASSIFICATION	1.5720161207736835E-4	IMPLEMENTATION
// if it's not a rescue or ensure, there's a frame associated, so decrement	WITHOUT_CLASSIFICATION	0.996622352806526	WITHOUT_CLASSIFICATION	0.0033776471934740633	IMPLEMENTATION
// look for __file__ method name for compiled roots	WITHOUT_CLASSIFICATION	0.9994289936972187	WITHOUT_CLASSIFICATION	5.71006302781238E-4	IMPLEMENTATION
// All entries following removed node can stay // in list, but all preceding ones need to be // cloned.	WITHOUT_CLASSIFICATION	0.9998523951295428	WITHOUT_CLASSIFICATION	1.4760487045713445E-4	IMPLEMENTATION
// required and optional only	WITHOUT_CLASSIFICATION	0.9999497661689822	WITHOUT_CLASSIFICATION	5.0233831017778454E-5	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9997847793255852	WITHOUT_CLASSIFICATION	2.1522067441493502E-4	IMPLEMENTATION
// look for mangling markers for bound, unframed methods in class name	WITHOUT_CLASSIFICATION	0.9999781877895789	WITHOUT_CLASSIFICATION	2.1812210421037488E-5	IMPLEMENTATION
// set the binding's frame's "previous" file and line to current, so // trace will show who called the block	WITHOUT_CLASSIFICATION	0.9999919458807827	WITHOUT_CLASSIFICATION	8.054119217288632E-6	IMPLEMENTATION
// framed invokers will have Ruby frames associated with them	WITHOUT_CLASSIFICATION	0.999977981926396	WITHOUT_CLASSIFICATION	2.2018073603978494E-5	IMPLEMENTATION
// look for mangling markers for bound, framed methods in class name	WITHOUT_CLASSIFICATION	0.999978215481004	WITHOUT_CLASSIFICATION	2.178451899600136E-5	IMPLEMENTATION
// unframed invokers have no Ruby frames, so pull from class name // but use current frame as file and line	WITHOUT_CLASSIFICATION	0.9999992409615095	WITHOUT_CLASSIFICATION	7.590384906312281E-7	IMPLEMENTATION
// try to mine out a Ruby frame using our list of interpreter entry-point markers	WITHOUT_CLASSIFICATION	0.9999895044766616	WITHOUT_CLASSIFICATION	1.0495523338325167E-5	IMPLEMENTATION
// Frame matches one of our markers for "interpreted" calls	WITHOUT_CLASSIFICATION	0.9999922289293061	WITHOUT_CLASSIFICATION	7.771070693908595E-6	IMPLEMENTATION
// Frame is extraneous runtime information, skip it unless debug	WITHOUT_CLASSIFICATION	0.9999438365239146	WITHOUT_CLASSIFICATION	5.616347608542687E-5	IMPLEMENTATION
/*     * Determine what sort of assigner should be used for the provided 'iter' (e.g. block).     * Assigner provides just the right logic for assigning values to local parameters of the     * block.     *     * This method also has a second optimization which is to set 'noargblock' in the case that     * the block is a block which accepts no arguments.  The primary reason for this second     * optimization is that in the case of a yield with a RubyArray we will bypass some logic     * processing the RubyArray into a proper form (only to then not do anythign with it).  A     * secondary benefit is that a simple boolean seems to optimize by hotspot much faster     * than the zero arg assigner.     */	WITHOUT_CLASSIFICATION	0.9999982183002956	WITHOUT_CLASSIFICATION	1.7816997044107741E-6	IMPLEMENTATION
// new scope for this invocation of the block, based on parent scope	WITHOUT_CLASSIFICATION	0.9998350885186211	WITHOUT_CLASSIFICATION	1.6491148137879745E-4	IMPLEMENTATION
// No argument blocks	WITHOUT_CLASSIFICATION	0.9999954616356501	WITHOUT_CLASSIFICATION	4.538364349883215E-6	IMPLEMENTATION
// just push the same empty scope, since we won't use one	WITHOUT_CLASSIFICATION	0.9999998517102024	WITHOUT_CLASSIFICATION	1.482897975800161E-7	IMPLEMENTATION
// Not sure if this is actually possible, but better safe than sorry	WITHOUT_CLASSIFICATION	0.9999421369324213	WITHOUT_CLASSIFICATION	5.78630675788195E-5	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9994008256843792	WITHOUT_CLASSIFICATION	5.991743156208021E-4	IMPLEMENTATION
// This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).	WITHOUT_CLASSIFICATION	0.9999745104891176	WITHOUT_CLASSIFICATION	2.5489510882493525E-5	IMPLEMENTATION
// Highest reserved id	WITHOUT_CLASSIFICATION	0.9999625574033556	WITHOUT_CLASSIFICATION	3.7442596644448825E-5	IMPLEMENTATION
// binary typed calls	WITHOUT_CLASSIFICATION	0.9998725065326924	WITHOUT_CLASSIFICATION	1.2749346730754968E-4	IMPLEMENTATION
// id must always be even	WITHOUT_CLASSIFICATION	0.9999763591283429	WITHOUT_CLASSIFICATION	2.3640871657063786E-5	IMPLEMENTATION
// with block pass	WITHOUT_CLASSIFICATION	0.9992913515751284	WITHOUT_CLASSIFICATION	7.086484248716632E-4	IMPLEMENTATION
// no block	WITHOUT_CLASSIFICATION	0.9997013436304281	WITHOUT_CLASSIFICATION	2.9865636957197004E-4	IMPLEMENTATION
// with block literal (iter)	WITHOUT_CLASSIFICATION	0.9998953704377803	WITHOUT_CLASSIFICATION	1.0462956221975876E-4	IMPLEMENTATION
//            assert false : "can this happen?";	WITHOUT_CLASSIFICATION	0.9975932878130768	WITHOUT_CLASSIFICATION	0.0024067121869231762	IMPLEMENTATION
// if we have multiple asgn with just *args, need a special type for that	WITHOUT_CLASSIFICATION	0.9999349018349568	WITHOUT_CLASSIFICATION	6.50981650431486E-5	IMPLEMENTATION
// && args.getMaxArgumentsCount() != 1) {	WITHOUT_CLASSIFICATION	0.9999403872256891	WITHOUT_CLASSIFICATION	5.961277431084344E-5	IMPLEMENTATION
//            return warnMultiReturnNil(ruby);	WITHOUT_CLASSIFICATION	0.9999423732775411	WITHOUT_CLASSIFICATION	5.7626722459043626E-5	IMPLEMENTATION
// ensure zero is devoted to no method name	WITHOUT_CLASSIFICATION	0.9999400090789535	WITHOUT_CLASSIFICATION	5.999092104638708E-5	IMPLEMENTATION
// predefine a few other methods we invoke directly elsewhere	WITHOUT_CLASSIFICATION	0.9997728375093144	WITHOUT_CLASSIFICATION	2.2716249068546843E-4	IMPLEMENTATION
// fast and safe respond_to? call site logic	WITHOUT_CLASSIFICATION	0.9999188820550752	WITHOUT_CLASSIFICATION	8.111794492489049E-5	IMPLEMENTATION
// Static scoping information for this scope	WITHOUT_CLASSIFICATION	0.9999499431449427	WITHOUT_CLASSIFICATION	5.005685505722385E-5	IMPLEMENTATION
// Captured dynamic scopes	WITHOUT_CLASSIFICATION	0.9999574749086161	WITHOUT_CLASSIFICATION	4.252509138397544E-5	IMPLEMENTATION
// Backref for $~, $1, etc	WITHOUT_CLASSIFICATION	0.9999798036753023	WITHOUT_CLASSIFICATION	2.0196324697683685E-5	IMPLEMENTATION
// Lastline	WITHOUT_CLASSIFICATION	0.9996200707317198	WITHOUT_CLASSIFICATION	3.7992926828032465E-4	IMPLEMENTATION
// No binding scope so we should create one	WITHOUT_CLASSIFICATION	0.9999523103809143	WITHOUT_CLASSIFICATION	4.768961908569996E-5	IMPLEMENTATION
// bindings scopes must always be ManyVars scopes since evals can grow them	WITHOUT_CLASSIFICATION	0.9999745910253902	WITHOUT_CLASSIFICATION	2.5408974609744703E-5	IMPLEMENTATION
// Helper function to give a good view of current dynamic scope with captured scopes	WITHOUT_CLASSIFICATION	0.9999698402056244	WITHOUT_CLASSIFICATION	3.0159794375614347E-5	IMPLEMENTATION
// try count specific args to determine required	WITHOUT_CLASSIFICATION	0.9998510569881697	WITHOUT_CLASSIFICATION	1.4894301183038928E-4	IMPLEMENTATION
// Some helper functions:	WITHOUT_CLASSIFICATION	0.9999590357451669	WITHOUT_CLASSIFICATION	4.096425483315887E-5	IMPLEMENTATION
// silently ignore	WITHOUT_CLASSIFICATION	0.9994102418904482	WITHOUT_CLASSIFICATION	5.897581095518068E-4	IMPLEMENTATION
// used by compiler	WITHOUT_CLASSIFICATION	0.9998009700048011	WITHOUT_CLASSIFICATION	1.9902999519902254E-4	IMPLEMENTATION
// initialize the static settings to determine which factory to use	WITHOUT_CLASSIFICATION	0.9999911094527704	WITHOUT_CLASSIFICATION	8.890547229653034E-6	IMPLEMENTATION
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999012238864379	WITHOUT_CLASSIFICATION	9.877611356210128E-5	IMPLEMENTATION
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9996627390289491	WITHOUT_CLASSIFICATION	3.372609710509068E-4	IMPLEMENTATION
//  Single node on list	WITHOUT_CLASSIFICATION	0.9996501347711821	WITHOUT_CLASSIFICATION	3.4986522881784253E-4	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9998730887203678	WITHOUT_CLASSIFICATION	1.2691127963210383E-4	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999628726941563	WITHOUT_CLASSIFICATION	3.7127305843683975E-5	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.999781712085301	WITHOUT_CLASSIFICATION	2.1828791469900985E-4	IMPLEMENTATION
// Note: In Ruby 1.9 all of this logic can go away since they will require explicit // bindings for evals.	WITHOUT_CLASSIFICATION	0.9999798828327261	WITHOUT_CLASSIFICATION	2.0117167273954068E-5	IMPLEMENTATION
// We only define one special dynamic scope per 'logical' binding.  So all bindings for // the same scope should share the same dynamic scope.  This allows multiple evals with // different different bindings in the same scope to see the same stuff.	WITHOUT_CLASSIFICATION	0.9999990196258413	WITHOUT_CLASSIFICATION	9.803741587828645E-7	IMPLEMENTATION
// If the next scope out has the same binding scope as this scope it means // we are evaling within an eval and in that case we should be sharing the same // binding scope.	WITHOUT_CLASSIFICATION	0.9999996635333986	WITHOUT_CLASSIFICATION	3.3646660128619576E-7	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999990098653069	WITHOUT_CLASSIFICATION	9.901346930568889E-7	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999990098653069	WITHOUT_CLASSIFICATION	9.901346930568889E-7	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999989661387361	WITHOUT_CLASSIFICATION	1.0338612639281179E-6	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999989661387361	WITHOUT_CLASSIFICATION	1.0338612639281179E-6	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999989661387361	WITHOUT_CLASSIFICATION	1.0338612639281179E-6	IMPLEMENTATION
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999777639580039	WITHOUT_CLASSIFICATION	2.2236041996117662E-5	IMPLEMENTATION
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999777639580039	WITHOUT_CLASSIFICATION	2.2236041996117662E-5	IMPLEMENTATION
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999665865328737	WITHOUT_CLASSIFICATION	3.341346712638572E-5	IMPLEMENTATION
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999665865328737	WITHOUT_CLASSIFICATION	3.341346712638572E-5	IMPLEMENTATION
/*     * This is the proper behavior for all non-expanded assigners which have a pre > 0.  The rest     * override this.     */	WITHOUT_CLASSIFICATION	0.9999990930581014	WITHOUT_CLASSIFICATION	9.069418986973313E-7	IMPLEMENTATION
/*     * This is the proper behavior for all non-expanded assigners.     */	WITHOUT_CLASSIFICATION	0.9999978602208428	WITHOUT_CLASSIFICATION	2.1397791572333698E-6	IMPLEMENTATION
// prefill ?	WITHOUT_CLASSIFICATION	0.9998340333452923	WITHOUT_CLASSIFICATION	1.6596665470768382E-4	IMPLEMENTATION
// prefill ?	WITHOUT_CLASSIFICATION	0.9998340333452923	WITHOUT_CLASSIFICATION	1.6596665470768382E-4	IMPLEMENTATION
// MUST be called from synchronized/locked block! // should only be called by variableTableStore/variableTableFastStore	WITHOUT_CLASSIFICATION	0.9999995857335163	WITHOUT_CLASSIFICATION	4.142664837421766E-7	IMPLEMENTATION
// retrieve method // module // name	WITHOUT_CLASSIFICATION	0.9994404584909169	WITHOUT_CLASSIFICATION	5.595415090830398E-4	IMPLEMENTATION
// call is ok, punch it!	WITHOUT_CLASSIFICATION	0.9999766133867218	WITHOUT_CLASSIFICATION	2.3386613278153148E-5	IMPLEMENTATION
// if undefined, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999925973149433	WITHOUT_CLASSIFICATION	7.402685056748436E-6	IMPLEMENTATION
// if we're not attempting to invoke method_missing and method is not visible, branch to method_missing	WITHOUT_CLASSIFICATION	0.9997527116242911	WITHOUT_CLASSIFICATION	2.47288375708933E-4	IMPLEMENTATION
// method object already present, push various args // tc // self // klazz // name	WITHOUT_CLASSIFICATION	0.9998177650710555	WITHOUT_CLASSIFICATION	1.8223492894446983E-4	IMPLEMENTATION
// if it's method_missing, just invoke it	WITHOUT_CLASSIFICATION	0.9999670225592263	WITHOUT_CLASSIFICATION	3.297744077370302E-5	IMPLEMENTATION
// invoke callMethodMissing	WITHOUT_CLASSIFICATION	0.9999389866943628	WITHOUT_CLASSIFICATION	6.101330563735702E-5	IMPLEMENTATION
// caller	WITHOUT_CLASSIFICATION	0.9999935195338824	WITHOUT_CLASSIFICATION	6.480466117602738E-6	IMPLEMENTATION
// calltype // block	WITHOUT_CLASSIFICATION	0.9995512799282417	WITHOUT_CLASSIFICATION	4.4872007175839556E-4	IMPLEMENTATION
// if no exception raised, jump to end to leave result on stack for return	WITHOUT_CLASSIFICATION	0.9999920903484543	WITHOUT_CLASSIFICATION	7.909651545654438E-6	IMPLEMENTATION
// load arity for check	WITHOUT_CLASSIFICATION	0.9999475686289033	WITHOUT_CLASSIFICATION	5.2431371096757524E-5	IMPLEMENTATION
// throw	WITHOUT_CLASSIFICATION	0.999978686268261	WITHOUT_CLASSIFICATION	2.1313731738952696E-5	IMPLEMENTATION
// load arity for error	WITHOUT_CLASSIFICATION	0.9999004558079241	WITHOUT_CLASSIFICATION	9.954419207595274E-5	IMPLEMENTATION
// arity ok, continue	WITHOUT_CLASSIFICATION	0.9999115882701927	WITHOUT_CLASSIFICATION	8.841172980737545E-5	IMPLEMENTATION
//InvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.999782952175292	WITHOUT_CLASSIFICATION	2.1704782470798146E-4	IMPLEMENTATION
// ENEBO: Perhaps slow but simple for now	WITHOUT_CLASSIFICATION	0.9999439251096254	WITHOUT_CLASSIFICATION	5.607489037455969E-5	IMPLEMENTATION
// FastInvocationCallback	WITHOUT_CLASSIFICATION	0.9999362290526616	WITHOUT_CLASSIFICATION	6.377094733850302E-5	IMPLEMENTATION
// InvocationCallback	WITHOUT_CLASSIFICATION	0.9999362290526616	WITHOUT_CLASSIFICATION	6.377094733850302E-5	IMPLEMENTATION
//DumpingInvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9996611722072354	WITHOUT_CLASSIFICATION	3.388277927646339E-4	IMPLEMENTATION
// for fast lookup: encoding entry => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999941772675447	WITHOUT_CLASSIFICATION	5.8227324552572454E-6	IMPLEMENTATION
// for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999797414608466	WITHOUT_CLASSIFICATION	2.025853915347038E-5	IMPLEMENTATION
// load the encoding	WITHOUT_CLASSIFICATION	0.9999158343144908	WITHOUT_CLASSIFICATION	8.416568550922356E-5	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999627301790109	WITHOUT_CLASSIFICATION	3.726982098901454E-5	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999627301790109	WITHOUT_CLASSIFICATION	3.726982098901454E-5	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999627301790109	WITHOUT_CLASSIFICATION	3.726982098901454E-5	IMPLEMENTATION
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999056264009186	WITHOUT_CLASSIFICATION	9.437359908136721E-5	IMPLEMENTATION
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999056264009186	WITHOUT_CLASSIFICATION	9.437359908136721E-5	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999056264009186	WITHOUT_CLASSIFICATION	9.437359908136721E-5	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999056264009186	WITHOUT_CLASSIFICATION	9.437359908136721E-5	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999056264009186	WITHOUT_CLASSIFICATION	9.437359908136721E-5	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999147126238674	WITHOUT_CLASSIFICATION	8.528737613254651E-5	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999147126238674	WITHOUT_CLASSIFICATION	8.528737613254651E-5	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999147126238674	WITHOUT_CLASSIFICATION	8.528737613254651E-5	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999147126238674	WITHOUT_CLASSIFICATION	8.528737613254651E-5	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999147126238674	WITHOUT_CLASSIFICATION	8.528737613254651E-5	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999147126238674	WITHOUT_CLASSIFICATION	8.528737613254651E-5	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999147126238674	WITHOUT_CLASSIFICATION	8.528737613254651E-5	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999147126238674	WITHOUT_CLASSIFICATION	8.528737613254651E-5	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999147126238674	WITHOUT_CLASSIFICATION	8.528737613254651E-5	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999147126238674	WITHOUT_CLASSIFICATION	8.528737613254651E-5	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999147126238674	WITHOUT_CLASSIFICATION	8.528737613254651E-5	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999147126238674	WITHOUT_CLASSIFICATION	8.528737613254651E-5	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999147126238674	WITHOUT_CLASSIFICATION	8.528737613254651E-5	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999147126238674	WITHOUT_CLASSIFICATION	8.528737613254651E-5	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999147126238674	WITHOUT_CLASSIFICATION	8.528737613254651E-5	IMPLEMENTATION
// If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs	WITHOUT_CLASSIFICATION	0.9999949357748835	WITHOUT_CLASSIFICATION	5.064225116452607E-6	IMPLEMENTATION
// BreakJump, ThreadContext	WITHOUT_CLASSIFICATION	0.9999362290526616	WITHOUT_CLASSIFICATION	6.377094733850302E-5	IMPLEMENTATION
// ThreadContext	WITHOUT_CLASSIFICATION	0.9996200707317198	WITHOUT_CLASSIFICATION	3.7992926828032465E-4	IMPLEMENTATION
// BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999004402456029	WITHOUT_CLASSIFICATION	9.955975439703077E-5	IMPLEMENTATION
// Make Java class files in the jar reachable from Ruby	WITHOUT_CLASSIFICATION	0.9999998257334513	WITHOUT_CLASSIFICATION	1.742665486248648E-7	IMPLEMENTATION
// RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999004402456029	WITHOUT_CLASSIFICATION	9.955975439703077E-5	IMPLEMENTATION
// add all startup load paths to the list first	WITHOUT_CLASSIFICATION	0.9998167830219805	WITHOUT_CLASSIFICATION	1.8321697801960613E-4	IMPLEMENTATION
// if it's a compiled JRuby script, instantiate and run it	WITHOUT_CLASSIFICATION	0.9999599317733074	WITHOUT_CLASSIFICATION	4.006822669252082E-5	IMPLEMENTATION
// wrap in try/catch for security exceptions in an applet	WITHOUT_CLASSIFICATION	0.9997394344769417	WITHOUT_CLASSIFICATION	2.6056552305828216E-4	IMPLEMENTATION
// add $RUBYLIB paths	WITHOUT_CLASSIFICATION	0.9998791017810854	WITHOUT_CLASSIFICATION	1.208982189146556E-4	IMPLEMENTATION
// Empty paths do not need to be added	WITHOUT_CLASSIFICATION	0.9695149917094442	WITHOUT_CLASSIFICATION	0.03048500829055574	IMPLEMENTATION
// "." dir is used for relative path loads from a given file, as in require '../foo/bar'	WITHOUT_CLASSIFICATION	0.9999990015406218	WITHOUT_CLASSIFICATION	9.98459378159274E-7	IMPLEMENTATION
// Add 1.8 libs	WITHOUT_CLASSIFICATION	0.9995216512800772	WITHOUT_CLASSIFICATION	4.7834871992282987E-4	IMPLEMENTATION
// Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.	WITHOUT_CLASSIFICATION	0.9999998865114846	WITHOUT_CLASSIFICATION	1.134885154832295E-7	IMPLEMENTATION
// Library has already been loaded in some form, bail out	WITHOUT_CLASSIFICATION	0.9999840554198464	WITHOUT_CLASSIFICATION	1.5944580153614417E-5	IMPLEMENTATION
// We don't want a package name beginning with dots, so we remove them	WITHOUT_CLASSIFICATION	0.9998951714365063	WITHOUT_CLASSIFICATION	1.0482856349369797E-4	IMPLEMENTATION
// If there is a jar-file with the required name, we add this to the class path.	WITHOUT_CLASSIFICATION	0.9999469391933893	WITHOUT_CLASSIFICATION	5.30608066107094E-5	IMPLEMENTATION
// quietly try to load the class	WITHOUT_CLASSIFICATION	0.9999726201732662	WITHOUT_CLASSIFICATION	2.7379826733864164E-5	IMPLEMENTATION
// If there was a good library before, we go back to that	WITHOUT_CLASSIFICATION	0.9999816511035966	WITHOUT_CLASSIFICATION	1.8348896403440335E-5	IMPLEMENTATION
// no library or extension found, try to load directly as a class	WITHOUT_CLASSIFICATION	0.99999137970942	WITHOUT_CLASSIFICATION	8.620290579981686E-6	IMPLEMENTATION
// if an extension is specified, try more targetted searches	WITHOUT_CLASSIFICATION	0.9999021978031167	WITHOUT_CLASSIFICATION	9.780219688328331E-5	IMPLEMENTATION
// signed short, big-endian	WITHOUT_CLASSIFICATION	0.9999441342808317	WITHOUT_CLASSIFICATION	5.586571916833681E-5	IMPLEMENTATION
// source extensions	WITHOUT_CLASSIFICATION	0.9999093025920001	WITHOUT_CLASSIFICATION	9.069740799984797E-5	IMPLEMENTATION
// We don't support .so, but some stdlib require .so directly // replace it with .jar to look for an extension type we do support	WITHOUT_CLASSIFICATION	0.9636152300841927	WITHOUT_CLASSIFICATION	0.03638476991580726	IMPLEMENTATION
// This code exploits the fact that all .jar files will be found for the JarredScript feature. // This is where the basic extension mechanism gets fixed	WITHOUT_CLASSIFICATION	0.9999958636199288	WITHOUT_CLASSIFICATION	4.136380071254893E-6	IMPLEMENTATION
// Make the class name look nice, by splitting on _ and capitalize each segment, then joining // the, together without anything separating them, and last put on "Service" at the end.	WITHOUT_CLASSIFICATION	0.9983646625377689	WITHOUT_CLASSIFICATION	0.0016353374622310908	IMPLEMENTATION
// It's _really_ expensive to check that the class actually exists in the Jar, so // we don't do that now.	WITHOUT_CLASSIFICATION	0.9999984385842332	WITHOUT_CLASSIFICATION	1.56141576686577E-6	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9998877106406424	WITHOUT_CLASSIFICATION	1.1228935935766783E-4	IMPLEMENTATION
// extension extensions	WITHOUT_CLASSIFICATION	0.9998711072562965	WITHOUT_CLASSIFICATION	1.288927437035531E-4	IMPLEMENTATION
// unknown extension, fall back to search with extensions	WITHOUT_CLASSIFICATION	0.9998596128665562	WITHOUT_CLASSIFICATION	1.4038713344383471E-4	IMPLEMENTATION
// try all extensions	WITHOUT_CLASSIFICATION	0.9999637782695364	WITHOUT_CLASSIFICATION	3.622173046351124E-5	IMPLEMENTATION
// if a source extension is specified, try all source extensions	WITHOUT_CLASSIFICATION	0.9999976789639112	WITHOUT_CLASSIFICATION	2.3210360887646746E-6	IMPLEMENTATION
// unknown extension, fall back to exact search	WITHOUT_CLASSIFICATION	0.9999063850838648	WITHOUT_CLASSIFICATION	9.36149161352541E-5	IMPLEMENTATION
// try only literal search	WITHOUT_CLASSIFICATION	0.9999862223602047	WITHOUT_CLASSIFICATION	1.3777639795279465E-5	IMPLEMENTATION
// attempt to load the found library	WITHOUT_CLASSIFICATION	0.9996758069290493	WITHOUT_CLASSIFICATION	3.241930709505463E-4	IMPLEMENTATION
// otherwise load the library we've found	WITHOUT_CLASSIFICATION	0.9968139133129674	WITHOUT_CLASSIFICATION	0.003186086687032607	IMPLEMENTATION
// allow MainExitException to propagate out for exec and friends	WITHOUT_CLASSIFICATION	0.9999248488733792	WITHOUT_CLASSIFICATION	7.515112662074134E-5	IMPLEMENTATION
// Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".	WITHOUT_CLASSIFICATION	0.9999532216294933	WITHOUT_CLASSIFICATION	4.6778370506775446E-5	IMPLEMENTATION
// check current directory; if file exists, retrieve URL and return resource	WITHOUT_CLASSIFICATION	0.9999628091006775	WITHOUT_CLASSIFICATION	3.719089932254229E-5	IMPLEMENTATION
// if a jar or file URL, return load service resource directly without further searching	WITHOUT_CLASSIFICATION	0.9999965872718336	WITHOUT_CLASSIFICATION	3.4127281663724047E-6	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9997890092771944	WITHOUT_CLASSIFICATION	2.1099072280553045E-4	IMPLEMENTATION
// if it's a ./ baseName, use CWD logic	WITHOUT_CLASSIFICATION	0.9998552692679491	WITHOUT_CLASSIFICATION	1.4473073205092452E-4	IMPLEMENTATION
// if given path is absolute, just try it as-is (with extensions) and no load path	WITHOUT_CLASSIFICATION	0.9999958543516599	WITHOUT_CLASSIFICATION	4.145648340128683E-6	IMPLEMENTATION
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9983000212362708	WITHOUT_CLASSIFICATION	0.0016999787637292016	IMPLEMENTATION
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9983000212362708	WITHOUT_CLASSIFICATION	0.0016999787637292016	IMPLEMENTATION
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9991003700587028	WITHOUT_CLASSIFICATION	8.996299412972877E-4	IMPLEMENTATION
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9991003700587028	WITHOUT_CLASSIFICATION	8.996299412972877E-4	IMPLEMENTATION
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.99990199086264	WITHOUT_CLASSIFICATION	9.800913736012732E-5	IMPLEMENTATION
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.99990199086264	WITHOUT_CLASSIFICATION	9.800913736012732E-5	IMPLEMENTATION
//                    actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));	WITHOUT_CLASSIFICATION	0.9998093642285654	WITHOUT_CLASSIFICATION	1.906357714346863E-4	IMPLEMENTATION
// handle security-sensitive case	WITHOUT_CLASSIFICATION	0.998584674487458	WITHOUT_CLASSIFICATION	0.0014153255125418994	IMPLEMENTATION
// if entry is an empty string, skip it	WITHOUT_CLASSIFICATION	0.9999943729163498	WITHOUT_CLASSIFICATION	5.6270836501955245E-6	IMPLEMENTATION
// if entry starts with a slash, skip it since classloader resources never start with a /	WITHOUT_CLASSIFICATION	0.9999923985425127	WITHOUT_CLASSIFICATION	7.601457487367258E-6	IMPLEMENTATION
// otherwise, try to load from classpath (Note: Jar resources always uses '/')	WITHOUT_CLASSIFICATION	0.9999922950532867	WITHOUT_CLASSIFICATION	7.70494671330381E-6	IMPLEMENTATION
// Make sure this is not a directory or unavailable in some way	WITHOUT_CLASSIFICATION	0.9998920919458962	WITHOUT_CLASSIFICATION	1.0790805410369571E-4	IMPLEMENTATION
// signed short, native	WITHOUT_CLASSIFICATION	0.9998609800328997	WITHOUT_CLASSIFICATION	1.390199671003826E-4	IMPLEMENTATION
// If we fail to find as a normal Ruby script, we try to find as an extension, // checking for a builtin first.	WITHOUT_CLASSIFICATION	0.9999992302019683	WITHOUT_CLASSIFICATION	7.697980316779071E-7	IMPLEMENTATION
// write `I' instance var signet if class is NOT a direct subclass of Object	WITHOUT_CLASSIFICATION	0.9999997482764749	WITHOUT_CLASSIFICATION	2.517235250904532E-7	IMPLEMENTATION
// if name starts with a / we're done (classloader resources won't load with an initial /)	WITHOUT_CLASSIFICATION	0.999999967294434	WITHOUT_CLASSIFICATION	3.270556601827138E-8	IMPLEMENTATION
// Look in classpath next (we do not use File as a test since UNC names will match) // Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")	WITHOUT_CLASSIFICATION	0.9999789463466578	WITHOUT_CLASSIFICATION	2.10536533421804E-5	IMPLEMENTATION
/* Directories and unavailable resources are not able to open a stream. */	WITHOUT_CLASSIFICATION	0.9999858380097971	WITHOUT_CLASSIFICATION	1.4161990202936851E-5	IMPLEMENTATION
// Try to load from classpath without prefix. "A/b.rb" will not load as  // "./A/b.rb" in a jar file.	WITHOUT_CLASSIFICATION	0.9999906606771218	WITHOUT_CLASSIFICATION	9.339322878236768E-6	IMPLEMENTATION
// object has instance vars and isn't a class, get a snapshot to be marshalled // and output the ivar header here	WITHOUT_CLASSIFICATION	0.999999724294636	WITHOUT_CLASSIFICATION	2.75705364036733E-7	IMPLEMENTATION
// flush afer whole dump is complete	WITHOUT_CLASSIFICATION	0.9999341347699041	WITHOUT_CLASSIFICATION	6.586523009587391E-5	IMPLEMENTATION
//            write('S');	WITHOUT_CLASSIFICATION	0.9999257929286876	WITHOUT_CLASSIFICATION	7.420707131244631E-5	IMPLEMENTATION
// switch on the object's *native type*. This allows use-defined // classes that have extended core native types to piggyback on their // marshalling logic.	WITHOUT_CLASSIFICATION	0.9986232553463785	WITHOUT_CLASSIFICATION	0.001376744653621386	IMPLEMENTATION
// object is a custom class that extended one of the native types other than Object	WITHOUT_CLASSIFICATION	0.9999835821283067	WITHOUT_CLASSIFICATION	1.6417871693199002E-5	IMPLEMENTATION
// We do not want to capture cached methods	WITHOUT_CLASSIFICATION	0.9977973623762975	WITHOUT_CLASSIFICATION	0.0022026376237026042	IMPLEMENTATION
// w_symbol	WITHOUT_CLASSIFICATION	0.9996200707317198	WITHOUT_CLASSIFICATION	3.7992926828032465E-4	IMPLEMENTATION
// w_unique	WITHOUT_CLASSIFICATION	0.9996200707317198	WITHOUT_CLASSIFICATION	3.7992926828032465E-4	IMPLEMENTATION
// call the proc, but not for symbols	WITHOUT_CLASSIFICATION	0.9992735140933593	WITHOUT_CLASSIFICATION	7.264859066408318E-4	IMPLEMENTATION
// Major // Minor	WITHOUT_CLASSIFICATION	0.9996200707317198	WITHOUT_CLASSIFICATION	3.7992926828032465E-4	IMPLEMENTATION
// any ivars, since we don't have __attached__ ivar now	WITHOUT_CLASSIFICATION	0.9999882956312268	WITHOUT_CLASSIFICATION	1.1704368773186823E-5	IMPLEMENTATION
// "hashdef" object, a hash with a default	WITHOUT_CLASSIFICATION	0.9999823086294001	WITHOUT_CLASSIFICATION	1.7691370599960724E-5	IMPLEMENTATION
// All "C" marshalled objects descend from core classes, which are all RubyObject	WITHOUT_CLASSIFICATION	0.9999952908936323	WITHOUT_CLASSIFICATION	4.709106367786405E-6	IMPLEMENTATION
// sic	WITHOUT_CLASSIFICATION	0.9999914754825183	WITHOUT_CLASSIFICATION	8.524517481776458E-6	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999018732304873	WITHOUT_CLASSIFICATION	9.81267695127797E-5	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999018732304873	WITHOUT_CLASSIFICATION	9.81267695127797E-5	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999018732304873	WITHOUT_CLASSIFICATION	9.81267695127797E-5	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999878806976746	WITHOUT_CLASSIFICATION	1.2119302325286081E-5	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999878806976746	WITHOUT_CLASSIFICATION	1.2119302325286081E-5	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9994008256843792	WITHOUT_CLASSIFICATION	5.991743156208021E-4	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9994008256843792	WITHOUT_CLASSIFICATION	5.991743156208021E-4	IMPLEMENTATION
/*     * If we are setting post arguments we can assume there are no pre or others     */	WITHOUT_CLASSIFICATION	0.9999999163247214	WITHOUT_CLASSIFICATION	8.367527854230447E-8	IMPLEMENTATION
// XXX: 0xffff0000 on BE?	WITHOUT_CLASSIFICATION	0.9982692380968321	WITHOUT_CLASSIFICATION	0.0017307619031679876	IMPLEMENTATION
// unsigned short, native	WITHOUT_CLASSIFICATION	0.9998435056312936	WITHOUT_CLASSIFICATION	1.5649436870625847E-4	IMPLEMENTATION
// int, native // long, native	WITHOUT_CLASSIFICATION	0.9998440705821846	WITHOUT_CLASSIFICATION	1.5592941781529426E-4	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999018732304873	WITHOUT_CLASSIFICATION	9.81267695127797E-5	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999018732304873	WITHOUT_CLASSIFICATION	9.81267695127797E-5	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999018732304873	WITHOUT_CLASSIFICATION	9.81267695127797E-5	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999878806976746	WITHOUT_CLASSIFICATION	1.2119302325286081E-5	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999878806976746	WITHOUT_CLASSIFICATION	1.2119302325286081E-5	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999878806976746	WITHOUT_CLASSIFICATION	1.2119302325286081E-5	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9994008256843792	WITHOUT_CLASSIFICATION	5.991743156208021E-4	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9994008256843792	WITHOUT_CLASSIFICATION	5.991743156208021E-4	IMPLEMENTATION
// Look for slash, starting from 'start' position, until 'end'.	WITHOUT_CLASSIFICATION	0.9999960669256972	WITHOUT_CLASSIFICATION	3.933074302790136E-6	IMPLEMENTATION
// Our values holder (name of variables are kept in staticScope)	WITHOUT_CLASSIFICATION	0.9999999795301879	WITHOUT_CLASSIFICATION	2.0469812159518734E-8	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9974542629218273	WITHOUT_CLASSIFICATION	0.002545737078172738	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9974542629218273	WITHOUT_CLASSIFICATION	0.002545737078172738	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9974542629218273	WITHOUT_CLASSIFICATION	0.002545737078172738	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9974542629218273	WITHOUT_CLASSIFICATION	0.002545737078172738	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9974542629218273	WITHOUT_CLASSIFICATION	0.002545737078172738	IMPLEMENTATION
// SunSignalFacade	WITHOUT_CLASSIFICATION	0.9996200707317198	WITHOUT_CLASSIFICATION	3.7992926828032465E-4	IMPLEMENTATION
// All braces pushed..	WITHOUT_CLASSIFICATION	0.9999664119501828	WITHOUT_CLASSIFICATION	3.3588049817222E-5	IMPLEMENTATION
/* failed : try next recursion */	WITHOUT_CLASSIFICATION	0.998676206489609	WITHOUT_CLASSIFICATION	0.0013237935103910148	IMPLEMENTATION
// leftToken made us start as nest 1	WITHOUT_CLASSIFICATION	0.9999549750586902	WITHOUT_CLASSIFICATION	4.5024941309892345E-5	IMPLEMENTATION
// are we at '**/'	WITHOUT_CLASSIFICATION	0.9997937963650293	WITHOUT_CLASSIFICATION	2.062036349706958E-4	IMPLEMENTATION
// No or mismatched braces..Move along..nothing to see here	WITHOUT_CLASSIFICATION	0.9999887840633627	WITHOUT_CLASSIFICATION	1.121593663727219E-5	IMPLEMENTATION
// not enough bytes	WITHOUT_CLASSIFICATION	0.9827008553538009	WITHOUT_CLASSIFICATION	0.01729914464619903	IMPLEMENTATION
// Get index of last read byte	WITHOUT_CLASSIFICATION	0.9999925458647326	WITHOUT_CLASSIFICATION	7.45413526733241E-6	IMPLEMENTATION
// skip inner braces	WITHOUT_CLASSIFICATION	0.9998341575418924	WITHOUT_CLASSIFICATION	1.6584245810764267E-4	IMPLEMENTATION
/*     * Process {}'s (example: Dir.glob("{jruby,jython}/README*")      */	WITHOUT_CLASSIFICATION	0.9999935260734433	WITHOUT_CLASSIFICATION	6.473926556714204E-6	IMPLEMENTATION
/* complete, according to Posix.2 */	WITHOUT_CLASSIFICATION	0.9999899499014802	WITHOUT_CLASSIFICATION	1.0050098519901847E-5	IMPLEMENTATION
/* Only accept an open brace if there is a close */	WITHOUT_CLASSIFICATION	0.999999953071986	WITHOUT_CLASSIFICATION	4.692801399940017E-8	IMPLEMENTATION
/* brace to match it.  Bracket expressions must be */	WITHOUT_CLASSIFICATION	0.9999919771868877	WITHOUT_CLASSIFICATION	8.02281311233652E-6	IMPLEMENTATION
// index of left-most brace // index of right-most brace	WITHOUT_CLASSIFICATION	0.9998514767061537	WITHOUT_CLASSIFICATION	1.485232938462945E-4	IMPLEMENTATION
// Length check is a hack.  We should not be reeiving "" as a filename ever. 	WITHOUT_CLASSIFICATION	0.9999893780468737	WITHOUT_CLASSIFICATION	1.0621953126258246E-5	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9997380500296962	WITHOUT_CLASSIFICATION	2.6194997030375643E-4	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9997380500296962	WITHOUT_CLASSIFICATION	2.6194997030375643E-4	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9997380500296962	WITHOUT_CLASSIFICATION	2.6194997030375643E-4	IMPLEMENTATION
// Pickaxe says @ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9999116840127951	WITHOUT_CLASSIFICATION	8.83159872049265E-5	IMPLEMENTATION
// Pickaxe says @@ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9999116653056189	WITHOUT_CLASSIFICATION	8.83346943810571E-5	IMPLEMENTATION
// SimpleSampler	WITHOUT_CLASSIFICATION	0.9996200707317198	WITHOUT_CLASSIFICATION	3.7992926828032465E-4	IMPLEMENTATION
/*     * convert into longs, returning unsigned 64-bit values as signed longs     * ( num2long raises a RangeError on values > Long.MAX_VALUE )     */	WITHOUT_CLASSIFICATION	0.9999995385314239	WITHOUT_CLASSIFICATION	4.6146857612018946E-7	IMPLEMENTATION
// b64_xtable for decoding Base 64	WITHOUT_CLASSIFICATION	0.999960607084056	WITHOUT_CLASSIFICATION	3.939291594402544E-5	IMPLEMENTATION
// single precision, little-endian	WITHOUT_CLASSIFICATION	0.9998323580400036	WITHOUT_CLASSIFICATION	1.6764195999636854E-4	IMPLEMENTATION
// single precision, big-endian	WITHOUT_CLASSIFICATION	0.9998323580400036	WITHOUT_CLASSIFICATION	1.6764195999636854E-4	IMPLEMENTATION
// single precision, native	WITHOUT_CLASSIFICATION	0.9997328034189872	WITHOUT_CLASSIFICATION	2.671965810128334E-4	IMPLEMENTATION
// single precision, native // single precision, native	WITHOUT_CLASSIFICATION	0.9995828980085	WITHOUT_CLASSIFICATION	4.1710199150001096E-4	IMPLEMENTATION
// double precision, little-endian	WITHOUT_CLASSIFICATION	0.9999925504178173	WITHOUT_CLASSIFICATION	7.449582182708939E-6	IMPLEMENTATION
// double precision, big-endian	WITHOUT_CLASSIFICATION	0.9999925504178173	WITHOUT_CLASSIFICATION	7.449582182708939E-6	IMPLEMENTATION
// double precision, native	WITHOUT_CLASSIFICATION	0.9999881253339147	WITHOUT_CLASSIFICATION	1.1874666085242764E-5	IMPLEMENTATION
// signed short, little-endian	WITHOUT_CLASSIFICATION	0.9999441342808317	WITHOUT_CLASSIFICATION	5.586571916833681E-5	IMPLEMENTATION
// signed char	WITHOUT_CLASSIFICATION	0.9998870944331758	WITHOUT_CLASSIFICATION	1.1290556682416962E-4	IMPLEMENTATION
// unsigned char	WITHOUT_CLASSIFICATION	0.9998729021177375	WITHOUT_CLASSIFICATION	1.2709788226248267E-4	IMPLEMENTATION
// long, little-endian	WITHOUT_CLASSIFICATION	0.9999365315340547	WITHOUT_CLASSIFICATION	6.346846594537584E-5	IMPLEMENTATION
// long, big-endian	WITHOUT_CLASSIFICATION	0.9996218722632279	WITHOUT_CLASSIFICATION	3.7812773677212895E-4	IMPLEMENTATION
// unsigned int, native	WITHOUT_CLASSIFICATION	0.9998447288897795	WITHOUT_CLASSIFICATION	1.5527111022049737E-4	IMPLEMENTATION
// int, native	WITHOUT_CLASSIFICATION	0.9990670193814022	WITHOUT_CLASSIFICATION	9.329806185978128E-4	IMPLEMENTATION
// 64-bit number, native (as fixnum)	WITHOUT_CLASSIFICATION	0.9998168668290733	WITHOUT_CLASSIFICATION	1.8313317092654176E-4	IMPLEMENTATION
// How many occurrences of 'type' we want	WITHOUT_CLASSIFICATION	0.999618254365029	WITHOUT_CLASSIFICATION	3.817456349709326E-4	IMPLEMENTATION
// See if we have a converter for the job...	WITHOUT_CLASSIFICATION	0.999986535925938	WITHOUT_CLASSIFICATION	1.3464074061872918E-5	IMPLEMENTATION
// Otherwise the unpack should be here...	WITHOUT_CLASSIFICATION	0.9996874759554526	WITHOUT_CLASSIFICATION	3.125240445473505E-4	IMPLEMENTATION
// Possible Checksum Byte	WITHOUT_CLASSIFICATION	0.9999322957537031	WITHOUT_CLASSIFICATION	6.7704246296841E-5	IMPLEMENTATION
// obtain a	WITHOUT_CLASSIFICATION	0.999756838753057	WITHOUT_CLASSIFICATION	2.4316124694303022E-4	IMPLEMENTATION
// obtain b	WITHOUT_CLASSIFICATION	0.9997357814668747	WITHOUT_CLASSIFICATION	2.642185331254109E-4	IMPLEMENTATION
// obtain c	WITHOUT_CLASSIFICATION	0.9998342513193414	WITHOUT_CLASSIFICATION	1.6574868065848266E-4	IMPLEMENTATION
// obtain d	WITHOUT_CLASSIFICATION	0.9996575158664197	WITHOUT_CLASSIFICATION	3.4248413358027455E-4	IMPLEMENTATION
/*encode.limit() - */	WITHOUT_CLASSIFICATION	0.999999460070829	WITHOUT_CLASSIFICATION	5.399291709926202E-7	IMPLEMENTATION
/* 1 */	WITHOUT_CLASSIFICATION	0.9999985408303477	WITHOUT_CLASSIFICATION	1.4591696522810694E-6	IMPLEMENTATION
/* 2 */	WITHOUT_CLASSIFICATION	0.9999989804968784	WITHOUT_CLASSIFICATION	1.0195031216525645E-6	IMPLEMENTATION
/* 3 */	WITHOUT_CLASSIFICATION	0.9999988865567233	WITHOUT_CLASSIFICATION	1.113443276725444E-6	IMPLEMENTATION
/* 4 */	WITHOUT_CLASSIFICATION	0.9999991997734893	WITHOUT_CLASSIFICATION	8.002265107959208E-7	IMPLEMENTATION
/* 5 */	WITHOUT_CLASSIFICATION	0.9999991546821877	WITHOUT_CLASSIFICATION	8.453178123134181E-7	IMPLEMENTATION
/* 6 */	WITHOUT_CLASSIFICATION	0.9999987708719263	WITHOUT_CLASSIFICATION	1.2291280737040115E-6	IMPLEMENTATION
/* 7 */	WITHOUT_CLASSIFICATION	0.9999984623589755	WITHOUT_CLASSIFICATION	1.5376410245129893E-6	IMPLEMENTATION
// Skip all whitespace in pack format string	WITHOUT_CLASSIFICATION	0.9999997055948919	WITHOUT_CLASSIFICATION	2.944051080045109E-7	IMPLEMENTATION
// Skip embedded comments in pack format string	WITHOUT_CLASSIFICATION	0.9999997616054959	WITHOUT_CLASSIFICATION	2.3839450422971379E-7	IMPLEMENTATION
// In case when the number of occurences is // explicitly specified, we have to read up // the remaining garbage after the '\0' to // satisfy the requested pattern.	WITHOUT_CLASSIFICATION	0.9999955163634299	WITHOUT_CLASSIFICATION	4.483636570101254E-6	IMPLEMENTATION
//normal exit, this should be faster than a test at each iterations for string with more than //about 40 char	WITHOUT_CLASSIFICATION	0.9999867772636725	WITHOUT_CLASSIFICATION	1.3222736327606001E-5	IMPLEMENTATION
// We encountered '\0' when // were reading the buffer above, // increment the number of read bytes.	WITHOUT_CLASSIFICATION	0.999997294198153	WITHOUT_CLASSIFICATION	2.7058018469569123E-6	IMPLEMENTATION
// MRI behavior: Contrary to what seems to be logical, // when '*' is given, MRI calculates the distance // to the end, in order to go backwards.	WITHOUT_CLASSIFICATION	0.9999957086279875	WITHOUT_CLASSIFICATION	4.291372012528411E-6	IMPLEMENTATION
// Determine how many of type are needed (default: 1)	WITHOUT_CLASSIFICATION	0.6872035939336965	WITHOUT_CLASSIFICATION	0.3127964060663036	IMPLEMENTATION
// 'Z' adds extra null pad (versus 'a')	WITHOUT_CLASSIFICATION	0.9999385675751756	WITHOUT_CLASSIFICATION	6.143242482433723E-5	IMPLEMENTATION
//if the low bit is set //set the high bit of the result	WITHOUT_CLASSIFICATION	0.9999879606268047	WITHOUT_CLASSIFICATION	1.2039373195240676E-5	IMPLEMENTATION
//if the index is not a multiple of 8, we are not on a byte boundary //shift the byte	WITHOUT_CLASSIFICATION	0.9946967965547328	WITHOUT_CLASSIFICATION	0.005303203445267228	IMPLEMENTATION
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9965646848310472	WITHOUT_CLASSIFICATION	0.003435315168952737	IMPLEMENTATION
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9965646848310472	WITHOUT_CLASSIFICATION	0.003435315168952737	IMPLEMENTATION
//do some padding, I don't understand the padding strategy	WITHOUT_CLASSIFICATION	0.9979952145647021	WITHOUT_CLASSIFICATION	0.0020047854352979416	IMPLEMENTATION
// we filled up current byte; append it and create next one	WITHOUT_CLASSIFICATION	0.9994043815611778	WITHOUT_CLASSIFICATION	5.956184388222225E-4	IMPLEMENTATION
//if the index is not a multiple of 8, we are not on a byte boundary	WITHOUT_CLASSIFICATION	0.9946801538138004	WITHOUT_CLASSIFICATION	0.005319846186199588	IMPLEMENTATION
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9999998885744424	WITHOUT_CLASSIFICATION	1.1142555753600293E-7	IMPLEMENTATION
// we don't deal with negatives.	WITHOUT_CLASSIFICATION	0.9998260739063338	WITHOUT_CLASSIFICATION	1.7392609366619188E-4	IMPLEMENTATION
// populate commandline with NG-provided stuff	WITHOUT_CLASSIFICATION	0.9998537527704401	WITHOUT_CLASSIFICATION	1.462472295598652E-4	IMPLEMENTATION
// are we recursing?	WITHOUT_CLASSIFICATION	0.9998374641110621	WITHOUT_CLASSIFICATION	1.6253588893782334E-4	IMPLEMENTATION
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999998815968556	WITHOUT_CLASSIFICATION	1.1840314444473172E-7	IMPLEMENTATION
// default PidGetter	WITHOUT_CLASSIFICATION	0.9999317823404046	WITHOUT_CLASSIFICATION	6.821765959536096E-5	IMPLEMENTATION
// ignore and try windows version	WITHOUT_CLASSIFICATION	0.9999754050705799	WITHOUT_CLASSIFICATION	2.459492942008704E-5	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999126701375619	WITHOUT_CLASSIFICATION	8.732986243808359E-5	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999126701375619	WITHOUT_CLASSIFICATION	8.732986243808359E-5	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999126701375619	WITHOUT_CLASSIFICATION	8.732986243808359E-5	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999126701375619	WITHOUT_CLASSIFICATION	8.732986243808359E-5	IMPLEMENTATION
// try both	WITHOUT_CLASSIFICATION	0.9995700654857451	WITHOUT_CLASSIFICATION	4.2993451425495853E-4	IMPLEMENTATION
// just unix	WITHOUT_CLASSIFICATION	0.999929111950001	WITHOUT_CLASSIFICATION	7.0888049998989E-5	IMPLEMENTATION
// just windows	WITHOUT_CLASSIFICATION	0.9999451742794464	WITHOUT_CLASSIFICATION	5.482572055372851E-5	IMPLEMENTATION
// neither	WITHOUT_CLASSIFICATION	0.9999914940804798	WITHOUT_CLASSIFICATION	8.505919520233228E-6	IMPLEMENTATION
// CON: popen is a case where I think we should just always shell out.	WITHOUT_CLASSIFICATION	0.997113398709067	WITHOUT_CLASSIFICATION	0.0028866012909331182	IMPLEMENTATION
// single string command, pass to sh to expand wildcards	WITHOUT_CLASSIFICATION	0.9999967193048909	WITHOUT_CLASSIFICATION	3.280695109119228E-6	IMPLEMENTATION
// direct invocation of the command	WITHOUT_CLASSIFICATION	0.9999575208859804	WITHOUT_CLASSIFICATION	4.247911401953719E-5	IMPLEMENTATION
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999867504705516	WITHOUT_CLASSIFICATION	1.3249529448468757E-5	IMPLEMENTATION
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999867504705516	WITHOUT_CLASSIFICATION	1.3249529448468757E-5	IMPLEMENTATION
// close process output // See JRUBY-3405; hooking up to parent process stdin caused // problems for IRB etc using stdin.	WITHOUT_CLASSIFICATION	0.9999995449577478	WITHOUT_CLASSIFICATION	4.5504225220346154E-7	IMPLEMENTATION
// ignore, we're on the way out	WITHOUT_CLASSIFICATION	0.9998255111252771	WITHOUT_CLASSIFICATION	1.7448887472304892E-4	IMPLEMENTATION
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999853479591339	WITHOUT_CLASSIFICATION	1.465204086610167E-5	IMPLEMENTATION
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999905193244182	WITHOUT_CLASSIFICATION	9.480675581908252E-6	IMPLEMENTATION
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999905193244182	WITHOUT_CLASSIFICATION	9.480675581908252E-6	IMPLEMENTATION
// popen caller wants to be able to write, provide subprocess out directly	WITHOUT_CLASSIFICATION	0.9999878582830715	WITHOUT_CLASSIFICATION	1.2141716928490103E-5	IMPLEMENTATION
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.999997754449808	WITHOUT_CLASSIFICATION	2.245550191972562E-6	IMPLEMENTATION
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.999997754449808	WITHOUT_CLASSIFICATION	2.245550191972562E-6	IMPLEMENTATION
// execute command with sh -c // this does shell expansion of wildcards	WITHOUT_CLASSIFICATION	0.9999890824780366	WITHOUT_CLASSIFICATION	1.091752196339871E-5	IMPLEMENTATION
// We need to close the out, since some // processes would just wait for the stream // to be closed before they process its content, // and produce the output. E.g.: "cat".	WITHOUT_CLASSIFICATION	0.9999999095984127	WITHOUT_CLASSIFICATION	9.040158728803855E-8	IMPLEMENTATION
// we only close out if it's the slave stream, to avoid // closing a directly-mapped stream from parent process	WITHOUT_CLASSIFICATION	0.9999997437887237	WITHOUT_CLASSIFICATION	2.5621127627787394E-7	IMPLEMENTATION
// The assumption here is that the 'in' stream provides // proper available() support. If available() always // returns 0, we'll hang!	WITHOUT_CLASSIFICATION	0.9999783649244018	WITHOUT_CLASSIFICATION	2.1635075598140868E-5	IMPLEMENTATION
// Force t3 to quit, just in case if it's stuck. // Note: On some platforms, even interrupt might not // have an effect if the thread is IO blocked.	WITHOUT_CLASSIFICATION	0.9999599418547227	WITHOUT_CLASSIFICATION	4.0058145277194214E-5	IMPLEMENTATION
// Check for special shell characters [<>|] at the beginning // and end of each command word and don't run in process if we find them.	WITHOUT_CLASSIFICATION	0.9999997682109666	WITHOUT_CLASSIFICATION	2.3178903335713895E-7	IMPLEMENTATION
// Note: this method produces meaningful results // only for RubyIO objects. For everything else returns 0.	WITHOUT_CLASSIFICATION	0.9998936771946595	WITHOUT_CLASSIFICATION	1.0632280534055088E-4	IMPLEMENTATION
//sequential	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
// reverse the entire area of the array selected if it's reversed.	WITHOUT_CLASSIFICATION	0.9999697556557542	WITHOUT_CLASSIFICATION	3.0244344245802596E-5	IMPLEMENTATION
// do median of 7 if the array is over 200 elements.	WITHOUT_CLASSIFICATION	0.9999978873582729	WITHOUT_CLASSIFICATION	2.112641727197663E-6	IMPLEMENTATION
// if it's less than 200 do median of 3	WITHOUT_CLASSIFICATION	0.9999751942536841	WITHOUT_CLASSIFICATION	2.4805746315844232E-5	IMPLEMENTATION
// SignalFacade	WITHOUT_CLASSIFICATION	0.9996200707317198	WITHOUT_CLASSIFICATION	3.7992926828032465E-4	IMPLEMENTATION
// this is the order in which MRI does these two tests	WITHOUT_CLASSIFICATION	0.9999970307056223	WITHOUT_CLASSIFICATION	2.969294377705037E-6	IMPLEMENTATION
// this is the order in which MRI does these tests	WITHOUT_CLASSIFICATION	0.9999981751887481	WITHOUT_CLASSIFICATION	1.8248112518975251E-6	IMPLEMENTATION
// basically just forcing a TypeError here to match MRI	WITHOUT_CLASSIFICATION	0.9999891818131488	WITHOUT_CLASSIFICATION	1.0818186851290497E-5	IMPLEMENTATION
// not saving DFS instance, as it will only be used once (at most) per call	WITHOUT_CLASSIFICATION	0.9985916026278882	WITHOUT_CLASSIFICATION	0.0014083973721117852	IMPLEMENTATION
// Args	WITHOUT_CLASSIFICATION	0.9999914818982323	WITHOUT_CLASSIFICATION	8.518101767630995E-6	IMPLEMENTATION
// static methods only	WITHOUT_CLASSIFICATION	0.9999707276672496	WITHOUT_CLASSIFICATION	2.927233275047487E-5	IMPLEMENTATION
//System.err.println(" calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9995773817536108	WITHOUT_CLASSIFICATION	4.226182463892745E-4	IMPLEMENTATION
// MRI 1.8.6 behavior: null byte after '%' // leads to "%" string. Null byte in // other places, like "%5\0", leads to error.	WITHOUT_CLASSIFICATION	0.9999128489463259	WITHOUT_CLASSIFICATION	8.71510536741365E-5	IMPLEMENTATION
// last index (+1) accessed by next() // last index (+1) accessed by get()	WITHOUT_CLASSIFICATION	0.9997890854169086	WITHOUT_CLASSIFICATION	2.109145830913562E-4	IMPLEMENTATION
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly.	WITHOUT_CLASSIFICATION	0.9999769010779708	WITHOUT_CLASSIFICATION	2.3098922029298795E-5	IMPLEMENTATION
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly. Version for 1.9.	WITHOUT_CLASSIFICATION	0.9999916239991392	WITHOUT_CLASSIFICATION	8.3760008608446E-6	IMPLEMENTATION
// MRI doesn't flag it as an error if width is given multiple // times as a number (but it does for *)	WITHOUT_CLASSIFICATION	0.9999996021756297	WITHOUT_CLASSIFICATION	3.9782437033661933E-7	IMPLEMENTATION
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999962082825903	WITHOUT_CLASSIFICATION	3.791717409618458E-6	IMPLEMENTATION
// MRI 1.8.5-p12 doesn't support 1-char strings, but // YARV 0.4.1 does. I don't think it hurts to include // this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])	WITHOUT_CLASSIFICATION	0.9970798179569363	WITHOUT_CLASSIFICATION	0.0029201820430635704	IMPLEMENTATION
// 'd' and 'i' are the same	WITHOUT_CLASSIFICATION	0.9999903622580694	WITHOUT_CLASSIFICATION	9.637741930646619E-6	IMPLEMENTATION
// 'u' with space or plus flags is same as 'd'	WITHOUT_CLASSIFICATION	0.9999976135460553	WITHOUT_CLASSIFICATION	2.386453944686893E-6	IMPLEMENTATION
// We depart here from strict adherence to MRI code, as MRI // uses C-sprintf, in part, to format numeric output, while // we'll use Java's numeric formatting code (and our own).	WITHOUT_CLASSIFICATION	0.9999998580652665	WITHOUT_CLASSIFICATION	1.4193473347304706E-7	IMPLEMENTATION
// skip '-' in bytes, will add where appropriate	WITHOUT_CLASSIFICATION	0.9999820035795679	WITHOUT_CLASSIFICATION	1.799642043216509E-5	IMPLEMENTATION
// ..	WITHOUT_CLASSIFICATION	0.9999917559151139	WITHOUT_CLASSIFICATION	8.244084886021861E-6	IMPLEMENTATION
// the 1 is for the stripped sign char	WITHOUT_CLASSIFICATION	0.9999946629133558	WITHOUT_CLASSIFICATION	5.337086644141719E-6	IMPLEMENTATION
// FIXME: what is correct 'recv' argument? // (this does produce the desired behavior)	WITHOUT_CLASSIFICATION	0.9112749661565139	WITHOUT_CLASSIFICATION	0.08872503384348614	IMPLEMENTATION
// gotta have at least a zero...	WITHOUT_CLASSIFICATION	0.9999012750870665	WITHOUT_CLASSIFICATION	9.872491293351959E-5	IMPLEMENTATION
// OK, we now have the significand in digits[0...nDigits] // and the exponent in exponent.  We're ready to format.	WITHOUT_CLASSIFICATION	0.9999704852586855	WITHOUT_CLASSIFICATION	2.9514741314629978E-5	IMPLEMENTATION
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9999954394158816	WITHOUT_CLASSIFICATION	4.560584118389863E-6	IMPLEMENTATION
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999139516598036	WITHOUT_CLASSIFICATION	8.604834019643274E-5	IMPLEMENTATION
//System.err.println(" stringToLong/reading c=" + data[s]);	WITHOUT_CLASSIFICATION	0.9995773817536108	WITHOUT_CLASSIFICATION	4.226182463892745E-4	IMPLEMENTATION
//System.err.println(" stringToLong/converted c=" + c);	WITHOUT_CLASSIFICATION	0.9995894608880211	WITHOUT_CLASSIFICATION	4.1053911197885514E-4	IMPLEMENTATION
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9999954394158816	WITHOUT_CLASSIFICATION	4.560584118389863E-6	IMPLEMENTATION
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999139516598036	WITHOUT_CLASSIFICATION	8.604834019643274E-5	IMPLEMENTATION
// precision for G/g includes integer digits	WITHOUT_CLASSIFICATION	0.9999750954432501	WITHOUT_CLASSIFICATION	2.4904556749869976E-5	IMPLEMENTATION
// deal with length/width	WITHOUT_CLASSIFICATION	0.9998496691200014	WITHOUT_CLASSIFICATION	1.503308799985593E-4	IMPLEMENTATION
// deal with length/width	WITHOUT_CLASSIFICATION	0.9998496691200014	WITHOUT_CLASSIFICATION	1.503308799985593E-4	IMPLEMENTATION
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999234577850773	WITHOUT_CLASSIFICATION	7.654221492269386E-5	IMPLEMENTATION
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999907832181317	WITHOUT_CLASSIFICATION	9.216781868339091E-6	IMPLEMENTATION
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999980157616911	WITHOUT_CLASSIFICATION	1.9842383089287145E-6	IMPLEMENTATION
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999888056226051	WITHOUT_CLASSIFICATION	1.1194377394969011E-5	IMPLEMENTATION
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.99998419047497	WITHOUT_CLASSIFICATION	1.5809525030016097E-5	IMPLEMENTATION
// MRI behavior: In this mode // trailing zeroes are removed: // 1.500E+05 -> 1.5E+05 	WITHOUT_CLASSIFICATION	0.9999900196966731	WITHOUT_CLASSIFICATION	9.98030332682325E-6	IMPLEMENTATION
// '.' is printed	WITHOUT_CLASSIFICATION	0.9998515688043729	WITHOUT_CLASSIFICATION	1.4843119562719668E-4	IMPLEMENTATION
// all precision numebers printed	WITHOUT_CLASSIFICATION	0.999928793808452	WITHOUT_CLASSIFICATION	7.120619154799029E-5	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9995818634899515	WITHOUT_CLASSIFICATION	4.18136510048545E-4	IMPLEMENTATION
// '.'	WITHOUT_CLASSIFICATION	0.9999917842168361	WITHOUT_CLASSIFICATION	8.215783163833359E-6	IMPLEMENTATION
// decimal form, like (but not *just* like!) 'f'	WITHOUT_CLASSIFICATION	0.9797072157813156	WITHOUT_CLASSIFICATION	0.020292784218684308	IMPLEMENTATION
// digits array shifted, update all	WITHOUT_CLASSIFICATION	0.9999820703805641	WITHOUT_CLASSIFICATION	1.792961943594302E-5	IMPLEMENTATION
// will have a trailing '.' // g fills trailing zeroes if #	WITHOUT_CLASSIFICATION	0.9999914524149537	WITHOUT_CLASSIFICATION	8.547585046323708E-6	IMPLEMENTATION
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999917403047256	WITHOUT_CLASSIFICATION	8.259695274311318E-6	IMPLEMENTATION
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999917403047256	WITHOUT_CLASSIFICATION	8.259695274311318E-6	IMPLEMENTATION
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9998479901145889	WITHOUT_CLASSIFICATION	1.5200988541104178E-4	IMPLEMENTATION
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9998479901145889	WITHOUT_CLASSIFICATION	1.5200988541104178E-4	IMPLEMENTATION
// digits arr shifted, update all	WITHOUT_CLASSIFICATION	0.9999773576062214	WITHOUT_CLASSIFICATION	2.2642393778553985E-5	IMPLEMENTATION
// (1|intlen).prec	WITHOUT_CLASSIFICATION	0.9996200707317198	WITHOUT_CLASSIFICATION	3.7992926828032465E-4	IMPLEMENTATION
// (1|intlen)	WITHOUT_CLASSIFICATION	0.9996200707317198	WITHOUT_CLASSIFICATION	3.7992926828032465E-4	IMPLEMENTATION
// will have a trailing '.'	WITHOUT_CLASSIFICATION	0.9999812710033256	WITHOUT_CLASSIFICATION	1.8728996674441913E-5	IMPLEMENTATION
// fill up the rest with zeroes	WITHOUT_CLASSIFICATION	0.999746031920059	WITHOUT_CLASSIFICATION	2.539680799410853E-4	IMPLEMENTATION
//System.err.println(" main/len=" + len);	WITHOUT_CLASSIFICATION	0.9995773817536108	WITHOUT_CLASSIFICATION	4.226182463892745E-4	IMPLEMENTATION
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999980157616911	WITHOUT_CLASSIFICATION	1.9842383089287145E-6	IMPLEMENTATION
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999888056226051	WITHOUT_CLASSIFICATION	1.1194377394969011E-5	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9995818634899515	WITHOUT_CLASSIFICATION	4.18136510048545E-4	IMPLEMENTATION
// '.'	WITHOUT_CLASSIFICATION	0.9999917842168361	WITHOUT_CLASSIFICATION	8.215783163833359E-6	IMPLEMENTATION
// equivalent to MRI case '\0':	WITHOUT_CLASSIFICATION	0.9997371717125667	WITHOUT_CLASSIFICATION	2.6282828743331673E-4	IMPLEMENTATION
// '.' and all precision digits printed	WITHOUT_CLASSIFICATION	0.9999688029981117	WITHOUT_CLASSIFICATION	3.119700188836862E-5	IMPLEMENTATION
// \v	WITHOUT_CLASSIFICATION	0.9999914754825183	WITHOUT_CLASSIFICATION	8.524517481776458E-6	IMPLEMENTATION
// dangling '%' char	WITHOUT_CLASSIFICATION	0.9998723653403587	WITHOUT_CLASSIFICATION	1.2763465964131616E-4	IMPLEMENTATION
// main while loop (offset < length)	WITHOUT_CLASSIFICATION	0.9999340297484788	WITHOUT_CLASSIFICATION	6.597025152116385E-5	IMPLEMENTATION
// debugging code, keeping for now	WITHOUT_CLASSIFICATION	0.9999862373053598	WITHOUT_CLASSIFICATION	1.3762694640131313E-5	IMPLEMENTATION
// MRI rounds up on nnn5nnn, but not nnn5 -- // except for when they do	WITHOUT_CLASSIFICATION	0.9999599724255438	WITHOUT_CLASSIFICATION	4.0027574456179045E-5	IMPLEMENTATION
// "%.0f" % 0.99	WITHOUT_CLASSIFICATION	0.9996223689232889	WITHOUT_CLASSIFICATION	3.7763107671116337E-4	IMPLEMENTATION
// limit the length of negatives if possible (also faster)	WITHOUT_CLASSIFICATION	0.9999766185190151	WITHOUT_CLASSIFICATION	2.338148098494312E-5	IMPLEMENTATION
// negative values	WITHOUT_CLASSIFICATION	0.9999906232322923	WITHOUT_CLASSIFICATION	9.376767707710972E-6	IMPLEMENTATION
// calculation for negatives when %u specified // for values >= Integer.MIN_VALUE * 2, MRI uses (the equivalent of) //   long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val // for smaller values, BigInteger math is required to conform to MRI's // result.	WITHOUT_CLASSIFICATION	0.9999996099583927	WITHOUT_CLASSIFICATION	3.900416073102708E-7	IMPLEMENTATION
// relatively cheap test for 32-bit values	WITHOUT_CLASSIFICATION	0.9999996677654281	WITHOUT_CLASSIFICATION	3.322345719556483E-7	IMPLEMENTATION
// no such luck...	WITHOUT_CLASSIFICATION	0.99948707173247	WITHOUT_CLASSIFICATION	5.129282675299274E-4	IMPLEMENTATION
// ok, now it gets expensive...	WITHOUT_CLASSIFICATION	0.9999418334450157	WITHOUT_CLASSIFICATION	5.8166554984181175E-5	IMPLEMENTATION
// go through negated powers of 32 until we find one small enough 	WITHOUT_CLASSIFICATION	0.9999791701644861	WITHOUT_CLASSIFICATION	2.082983551382971E-5	IMPLEMENTATION
// add to the corresponding positive power of 32 for the result. // meaningful? no. conformant? yes. I just write the code...	WITHOUT_CLASSIFICATION	0.99995159595541	WITHOUT_CLASSIFICATION	4.840404458991728E-5	IMPLEMENTATION
/* constant vector a */	WITHOUT_CLASSIFICATION	0.9999844457554153	WITHOUT_CLASSIFICATION	1.5554244584619692E-5	IMPLEMENTATION
/* most significant w-r bits */	WITHOUT_CLASSIFICATION	0.9999445487367751	WITHOUT_CLASSIFICATION	5.54512632249403E-5	IMPLEMENTATION
/* least significant r bits */	WITHOUT_CLASSIFICATION	0.9999914049005482	WITHOUT_CLASSIFICATION	8.595099451896769E-6	IMPLEMENTATION
// state[j] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999363050257538	WITHOUT_CLASSIFICATION	6.369497424623137E-5	IMPLEMENTATION
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999363050257538	WITHOUT_CLASSIFICATION	6.369497424623137E-5	IMPLEMENTATION
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999363050257538	WITHOUT_CLASSIFICATION	6.369497424623137E-5	IMPLEMENTATION
/* MSB is 1; assuring non-zero initial array */	WITHOUT_CLASSIFICATION	0.9999973975519152	WITHOUT_CLASSIFICATION	2.602448084888965E-6	IMPLEMENTATION
/* Tempering */	WITHOUT_CLASSIFICATION	0.999930388944247	WITHOUT_CLASSIFICATION	6.961105575302719E-5	IMPLEMENTATION
// MRI behavior: Week values are monotonous. // So, weeks that effectively belong to previous year, // will get the value of 0, not 52 or 53, as in Java.	WITHOUT_CLASSIFICATION	0.9999999779075581	WITHOUT_CLASSIFICATION	2.2092441863646223E-8	IMPLEMENTATION
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9995785196596167	WITHOUT_CLASSIFICATION	4.2148034038328E-4	IMPLEMENTATION
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9995785196596167	WITHOUT_CLASSIFICATION	4.2148034038328E-4	IMPLEMENTATION
// \v	WITHOUT_CLASSIFICATION	0.9999914754825183	WITHOUT_CLASSIFICATION	8.524517481776458E-6	IMPLEMENTATION
//System.err.println("getSign()");	WITHOUT_CLASSIFICATION	0.9996611722072354	WITHOUT_CLASSIFICATION	3.388277927646339E-4	IMPLEMENTATION
//System.err.println(" getSign/" + sign);	WITHOUT_CLASSIFICATION	0.9995773817536108	WITHOUT_CLASSIFICATION	4.226182463892745E-4	IMPLEMENTATION
//System.err.println("figureOutBase()/base=" + base);	WITHOUT_CLASSIFICATION	0.9995773817536108	WITHOUT_CLASSIFICATION	4.226182463892745E-4	IMPLEMENTATION
//System.err.println(" figureOutBase/base=" + base);	WITHOUT_CLASSIFICATION	0.9995773817536108	WITHOUT_CLASSIFICATION	4.226182463892745E-4	IMPLEMENTATION
//System.err.println("calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9995773817536108	WITHOUT_CLASSIFICATION	4.226182463892745E-4	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999709824961172	WITHOUT_CLASSIFICATION	2.9017503882815074E-5	IMPLEMENTATION
//System.err.println(" stringToLong=" + val);	WITHOUT_CLASSIFICATION	0.9995773817536108	WITHOUT_CLASSIFICATION	4.226182463892745E-4	IMPLEMENTATION
// no number	WITHOUT_CLASSIFICATION	0.9996986824359854	WITHOUT_CLASSIFICATION	3.013175640146721E-4	IMPLEMENTATION
// trailing garbage	WITHOUT_CLASSIFICATION	0.998776374446746	WITHOUT_CLASSIFICATION	0.0012236255532539614	IMPLEMENTATION
//System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);	WITHOUT_CLASSIFICATION	0.9990121530565029	WITHOUT_CLASSIFICATION	9.8784694349701E-4	IMPLEMENTATION
// it was not found at all!	WITHOUT_CLASSIFICATION	0.9984925726396328	WITHOUT_CLASSIFICATION	0.001507427360367229	IMPLEMENTATION
// can be overridden to be informed when objects are removed	WITHOUT_CLASSIFICATION	0.9998355425421218	WITHOUT_CLASSIFICATION	1.6445745787819124E-4	IMPLEMENTATION
// we reached the end of a list	WITHOUT_CLASSIFICATION	0.999475019911785	WITHOUT_CLASSIFICATION	5.249800882150946E-4	IMPLEMENTATION
// goto next bucket	WITHOUT_CLASSIFICATION	0.9992164041307507	WITHOUT_CLASSIFICATION	7.835958692493083E-4	IMPLEMENTATION
// we reached the end	WITHOUT_CLASSIFICATION	0.9994563704624392	WITHOUT_CLASSIFICATION	5.436295375607452E-4	IMPLEMENTATION
// entry is the first element of this bucket	WITHOUT_CLASSIFICATION	0.9999408322046602	WITHOUT_CLASSIFICATION	5.916779533969208E-5	IMPLEMENTATION
// states	WITHOUT_CLASSIFICATION	0.9999753057342117	WITHOUT_CLASSIFICATION	2.4694265788368485E-5	IMPLEMENTATION
// remove leading whitespace (includes _ for lax) // get sign, if any	WITHOUT_CLASSIFICATION	0.9999907690327954	WITHOUT_CLASSIFICATION	9.230967204581098E-6	IMPLEMENTATION
// optimistic pass - calculate value as digits are processed // digits - lax rules // decimal digits - lax rules // exponent sign/digits - lax rules // digits - strict rules // decimal digits - strict rules // exponent sign/digits - strict rules // complete calculation if possible	WITHOUT_CLASSIFICATION	0.9999998535836147	WITHOUT_CLASSIFICATION	1.4641638528910383E-7	IMPLEMENTATION
// fields used for direct (optimistic) calculation // number of significant digits, updated as parsed // zeroes that may go to significand or exponent // offset of decimal pt from start (-1 -> no decimal) // significand, updated as parsed // exponent, updated as parsed	WITHOUT_CLASSIFICATION	0.999999980518726	WITHOUT_CLASSIFICATION	1.9481273997562797E-8	IMPLEMENTATION
// drop through for sign	WITHOUT_CLASSIFICATION	0.9999965560512483	WITHOUT_CLASSIFICATION	3.443948751717731E-6	IMPLEMENTATION
// switch // will use this if we have to go back the slow way	WITHOUT_CLASSIFICATION	0.9997337010861879	WITHOUT_CLASSIFICATION	2.662989138121658E-4	IMPLEMENTATION
// drop through for non-strict digits	WITHOUT_CLASSIFICATION	0.9999956107811351	WITHOUT_CLASSIFICATION	4.389218864831728E-6	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999895694726468	WITHOUT_CLASSIFICATION	1.0430527353235685E-5	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999278935006817	WITHOUT_CLASSIFICATION	7.210649931827888E-5	IMPLEMENTATION
// no digits, go calc (will return +/- 0.0 for lax)	WITHOUT_CLASSIFICATION	0.9999919845532576	WITHOUT_CLASSIFICATION	8.015446742447372E-6	IMPLEMENTATION
// ignore leading zeroes	WITHOUT_CLASSIFICATION	0.999952933427868	WITHOUT_CLASSIFICATION	4.706657213202674E-5	IMPLEMENTATION
// just save a count of zeroes for now; if no digit // ends up following them, they'll be applied to the // exponent rather than the significand (and our max // length for optimistic calc).	WITHOUT_CLASSIFICATION	0.9999999633209041	WITHOUT_CLASSIFICATION	3.6679095903851905E-8	IMPLEMENTATION
// ok, got a non-zero, have to own up to our horded zeroes	WITHOUT_CLASSIFICATION	0.9999853592513122	WITHOUT_CLASSIFICATION	1.4640748687762064E-5	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.999933380306594	WITHOUT_CLASSIFICATION	6.66196934060007E-5	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.999933380306594	WITHOUT_CLASSIFICATION	6.66196934060007E-5	IMPLEMENTATION
// oh, well, it was worth a try. go let // Double/FloatingDecimal handle it 	WITHOUT_CLASSIFICATION	0.9998545531540172	WITHOUT_CLASSIFICATION	1.454468459828126E-4	IMPLEMENTATION
// ignore // switch	WITHOUT_CLASSIFICATION	0.9996816260552115	WITHOUT_CLASSIFICATION	3.183739447884789E-4	IMPLEMENTATION
// ignore // switch	WITHOUT_CLASSIFICATION	0.9996816260552115	WITHOUT_CLASSIFICATION	3.183739447884789E-4	IMPLEMENTATION
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9998960965605258	WITHOUT_CLASSIFICATION	1.0390343947429231E-4	IMPLEMENTATION
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9998960965605258	WITHOUT_CLASSIFICATION	1.0390343947429231E-4	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9998426994293494	WITHOUT_CLASSIFICATION	1.573005706504824E-4	IMPLEMENTATION
// first non_underscore char must be digit	WITHOUT_CLASSIFICATION	0.9999704695789622	WITHOUT_CLASSIFICATION	2.9530421037767842E-5	IMPLEMENTATION
// no dec digits, end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999308525596045	WITHOUT_CLASSIFICATION	6.914744039555059E-5	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.9998943408939447	WITHOUT_CLASSIFICATION	1.0565910605525774E-4	IMPLEMENTATION
// difficult case, send to Double/FloatingDecimal	WITHOUT_CLASSIFICATION	0.999979857814067	WITHOUT_CLASSIFICATION	2.0142185933012918E-5	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999899313378572	WITHOUT_CLASSIFICATION	1.0068662142806485E-5	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999899313378572	WITHOUT_CLASSIFICATION	1.0068662142806485E-5	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999895694726468	WITHOUT_CLASSIFICATION	1.0430527353235685E-5	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999895694726468	WITHOUT_CLASSIFICATION	1.0430527353235685E-5	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999895694726468	WITHOUT_CLASSIFICATION	1.0430527353235685E-5	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999278935006817	WITHOUT_CLASSIFICATION	7.210649931827888E-5	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.999933380306594	WITHOUT_CLASSIFICATION	6.66196934060007E-5	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.999933380306594	WITHOUT_CLASSIFICATION	6.66196934060007E-5	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.999933380306594	WITHOUT_CLASSIFICATION	6.66196934060007E-5	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9998426994293494	WITHOUT_CLASSIFICATION	1.573005706504824E-4	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9998426994293494	WITHOUT_CLASSIFICATION	1.573005706504824E-4	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9998426994293494	WITHOUT_CLASSIFICATION	1.573005706504824E-4	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.9998943408939447	WITHOUT_CLASSIFICATION	1.0565910605525774E-4	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.9998943408939447	WITHOUT_CLASSIFICATION	1.0565910605525774E-4	IMPLEMENTATION
// lax (str.to_f) allows underscores between e/E and sign	WITHOUT_CLASSIFICATION	0.9999682094776116	WITHOUT_CLASSIFICATION	3.179052238839037E-5	IMPLEMENTATION
// switch // for // no exponent, so drop through for calculation	WITHOUT_CLASSIFICATION	0.9999986744726173	WITHOUT_CLASSIFICATION	1.3255273827373137E-6	IMPLEMENTATION
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9996290233134356	WITHOUT_CLASSIFICATION	3.709766865643952E-4	IMPLEMENTATION
// TODO: it's not clear to me why, in FloatingDecimal, the // "slop" calculation performed above for positive exponents // isn't used for negative exponents as well. Will find out...	WITHOUT_CLASSIFICATION	0.834129151105506	IMPLEMENTATION	0.165870848894494	WITHOUT_CLASSIFICATION
// no digits, error	WITHOUT_CLASSIFICATION	0.9991297761006155	WITHOUT_CLASSIFICATION	8.702238993844672E-4	IMPLEMENTATION
// too big for us	WITHOUT_CLASSIFICATION	0.9998523254963063	WITHOUT_CLASSIFICATION	1.4767450369370752E-4	IMPLEMENTATION
// too big for us	WITHOUT_CLASSIFICATION	0.9998523254963063	WITHOUT_CLASSIFICATION	1.4767450369370752E-4	IMPLEMENTATION
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999715428409351	WITHOUT_CLASSIFICATION	2.8457159064878106E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999709824961172	WITHOUT_CLASSIFICATION	2.9017503882815074E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999709824961172	WITHOUT_CLASSIFICATION	2.9017503882815074E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999709824961172	WITHOUT_CLASSIFICATION	2.9017503882815074E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999709824961172	WITHOUT_CLASSIFICATION	2.9017503882815074E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999709824961172	WITHOUT_CLASSIFICATION	2.9017503882815074E-5	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999926305063918	WITHOUT_CLASSIFICATION	7.369493608130883E-6	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999926305063918	WITHOUT_CLASSIFICATION	7.369493608130883E-6	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999926305063918	WITHOUT_CLASSIFICATION	7.369493608130883E-6	IMPLEMENTATION
// first char must be digit	WITHOUT_CLASSIFICATION	0.9999810853740402	WITHOUT_CLASSIFICATION	1.8914625959842166E-5	IMPLEMENTATION
// no dec digits after '.', error for strict	WITHOUT_CLASSIFICATION	0.9999627654139418	WITHOUT_CLASSIFICATION	3.72345860582284E-5	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999278935006817	WITHOUT_CLASSIFICATION	7.210649931827888E-5	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9998426994293494	WITHOUT_CLASSIFICATION	1.573005706504824E-4	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9998426994293494	WITHOUT_CLASSIFICATION	1.573005706504824E-4	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999709824961172	WITHOUT_CLASSIFICATION	2.9017503882815074E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999709824961172	WITHOUT_CLASSIFICATION	2.9017503882815074E-5	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999926305063918	WITHOUT_CLASSIFICATION	7.369493608130883E-6	IMPLEMENTATION
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999715428409351	WITHOUT_CLASSIFICATION	2.8457159064878106E-5	IMPLEMENTATION
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999625930050965	WITHOUT_CLASSIFICATION	3.740699490346187E-5	IMPLEMENTATION
// switch //while	WITHOUT_CLASSIFICATION	0.999627559485613	WITHOUT_CLASSIFICATION	3.724405143869144E-4	IMPLEMENTATION
/*     * All the positive powers of 10 that can be     * represented exactly in double/float.     * (From sun.misc.FloatingDecimal.java)     */	WITHOUT_CLASSIFICATION	0.9999997374507322	WITHOUT_CLASSIFICATION	2.625492677069158E-7	IMPLEMENTATION
// Zlib behavior: negative win_bits means no header and no checksum.	WITHOUT_CLASSIFICATION	0.9999928019015719	WITHOUT_CLASSIFICATION	7.198098428151212E-6	IMPLEMENTATION
// rb_enc_mbclen	WITHOUT_CLASSIFICATION	0.9996200707317198	WITHOUT_CLASSIFICATION	3.7992926828032465E-4	IMPLEMENTATION
// rb_enc_precise_mbclen	WITHOUT_CLASSIFICATION	0.9999362290526616	WITHOUT_CLASSIFICATION	6.377094733850302E-5	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9987080436253475	WITHOUT_CLASSIFICATION	0.0012919563746524893	IMPLEMENTATION
// arg cannot be negative	WITHOUT_CLASSIFICATION	0.9999427588343922	WITHOUT_CLASSIFICATION	5.724116560776613E-5	IMPLEMENTATION
// NoFunctionalitySignalFacade	WITHOUT_CLASSIFICATION	0.9999362290526616	WITHOUT_CLASSIFICATION	6.377094733850302E-5	IMPLEMENTATION
// Change visibility so others can see it	WITHOUT_CLASSIFICATION	0.9999863281772783	WITHOUT_CLASSIFICATION	1.367182272180194E-5	IMPLEMENTATION
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9840093383711674	WITHOUT_CLASSIFICATION	0.015990661628832514	IMPLEMENTATION
// strip off "_dot_rb" for .rb files	WITHOUT_CLASSIFICATION	0.9999962228067408	WITHOUT_CLASSIFICATION	3.777193259205032E-6	IMPLEMENTATION
// Makes sure the key is not already in the hashtable.	WITHOUT_CLASSIFICATION	0.9999232935736746	WITHOUT_CLASSIFICATION	7.670642632544529E-5	IMPLEMENTATION
// Rehash the table if the threshold is exceeded	WITHOUT_CLASSIFICATION	0.999981393745486	WITHOUT_CLASSIFICATION	1.860625451405235E-5	IMPLEMENTATION
// Creates the new entry.	WITHOUT_CLASSIFICATION	0.9999104303728791	WITHOUT_CLASSIFICATION	8.956962712088286E-5	IMPLEMENTATION
// next entry to return // current slot // current entry	WITHOUT_CLASSIFICATION	0.9997970704626689	WITHOUT_CLASSIFICATION	2.0292953733118884E-4	IMPLEMENTATION
// advance to first entry	WITHOUT_CLASSIFICATION	0.9999396176525195	WITHOUT_CLASSIFICATION	6.0382347480596745E-5	IMPLEMENTATION
// The reason why we need the stream is to be able to invoke available() on it. // STDIN in Java is non-interruptible, non-selectable, and attempt to read // on such stream might lead to thread being blocked without *any* way to unblock it. // That's where available() comes it, so at least we could check whether // anything is available to be read without blocking.	WITHOUT_CLASSIFICATION	0.9998508888762753	WITHOUT_CLASSIFICATION	1.4911112372482076E-4	IMPLEMENTATION
/*package-protected*/	WITHOUT_CLASSIFICATION	0.999782952175292	WITHOUT_CLASSIFICATION	2.1704782470798146E-4	IMPLEMENTATION
// raw file URL, just open directly	WITHOUT_CLASSIFICATION	0.9999920398809248	WITHOUT_CLASSIFICATION	7.960119075287379E-6	IMPLEMENTATION
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999628455484243	WITHOUT_CLASSIFICATION	3.715445157571769E-5	IMPLEMENTATION
// if refcount is at or below zero, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999994371888894	WITHOUT_CLASSIFICATION	5.628111105301308E-7	IMPLEMENTATION
// if channel is already closed, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999989522512774	WITHOUT_CLASSIFICATION	1.047748722571471E-6	IMPLEMENTATION
// otherwise decrement and possibly close as normal	WITHOUT_CLASSIFICATION	0.9999198196707857	WITHOUT_CLASSIFICATION	8.018032921425454E-5	IMPLEMENTATION
// r/w buffer // are we reading or writing?	WITHOUT_CLASSIFICATION	0.9999764398877782	WITHOUT_CLASSIFICATION	2.3560112221738576E-5	IMPLEMENTATION
// this constructor is used by fdopen, so we don't increment descriptor ref count	WITHOUT_CLASSIFICATION	0.9999492474910997	WITHOUT_CLASSIFICATION	5.075250890031756E-5	IMPLEMENTATION
// unread back	WITHOUT_CLASSIFICATION	0.9993947183647501	WITHOUT_CLASSIFICATION	6.052816352497992E-4	IMPLEMENTATION
// iterate over remainder of buffer until we find a match	WITHOUT_CLASSIFICATION	0.9999950184731455	WITHOUT_CLASSIFICATION	4.98152685442734E-6	IMPLEMENTATION
// terminate and advance buffer when we find our char	WITHOUT_CLASSIFICATION	0.9999959167349745	WITHOUT_CLASSIFICATION	4.083265025472599E-6	IMPLEMENTATION
// no match, append remainder of buffer and continue with next block	WITHOUT_CLASSIFICATION	0.999851819010876	WITHOUT_CLASSIFICATION	1.4818098912401867E-4	IMPLEMENTATION
// found a match above, check if remaining separator characters match, appending as we go	WITHOUT_CLASSIFICATION	0.9999974474450984	WITHOUT_CLASSIFICATION	2.5525549016142227E-6	IMPLEMENTATION
// // Check file size - special files in /proc have zero size and need to be // handled by the generic read path. //	WITHOUT_CLASSIFICATION	0.9999978386462346	WITHOUT_CLASSIFICATION	2.1613537655056732E-6	IMPLEMENTATION
// // Copy any buffered data (including ungetc byte) //	WITHOUT_CLASSIFICATION	0.999982097986064	WITHOUT_CLASSIFICATION	1.7902013935952312E-5	IMPLEMENTATION
// // Now read unbuffered directly from the file //	WITHOUT_CLASSIFICATION	0.9999928098665333	WITHOUT_CLASSIFICATION	7.190133466725335E-6	IMPLEMENTATION
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999625930050965	WITHOUT_CLASSIFICATION	3.740699490346187E-5	IMPLEMENTATION
// // Need to clamp source (buffer) size to avoid overrun //	WITHOUT_CLASSIFICATION	0.9999475074980232	WITHOUT_CLASSIFICATION	5.2492501976833715E-5	IMPLEMENTATION
// not closing from finalize	WITHOUT_CLASSIFICATION	0.9996739443400381	WITHOUT_CLASSIFICATION	3.260556599618371E-4	IMPLEMENTATION
// clear runtime so it doesn't get stuck in memory (JRUBY-2933)	WITHOUT_CLASSIFICATION	0.9999984221486482	WITHOUT_CLASSIFICATION	1.5778513518197483E-6	IMPLEMENTATION
// silence	WITHOUT_CLASSIFICATION	0.9999914754825183	WITHOUT_CLASSIFICATION	8.524517481776458E-6	IMPLEMENTATION
// silence	WITHOUT_CLASSIFICATION	0.9999914754825183	WITHOUT_CLASSIFICATION	8.524517481776458E-6	IMPLEMENTATION
// Don't bother	WITHOUT_CLASSIFICATION	0.9979907548086373	WITHOUT_CLASSIFICATION	0.002009245191362632	IMPLEMENTATION
// Don't bother	WITHOUT_CLASSIFICATION	0.9979907548086373	WITHOUT_CLASSIFICATION	0.002009245191362632	IMPLEMENTATION
// For Sockets, only write as much as will fit.	WITHOUT_CLASSIFICATION	0.9999953629015264	WITHOUT_CLASSIFICATION	4.63709847361555E-6	IMPLEMENTATION
// Correct position for read / write buffering (we could invalidate, but expensive)	WITHOUT_CLASSIFICATION	0.9999979291481346	WITHOUT_CLASSIFICATION	2.070851865379695E-6	IMPLEMENTATION
// Adjust for buffered data	WITHOUT_CLASSIFICATION	0.999994173392187	WITHOUT_CLASSIFICATION	5.826607812969789E-6	IMPLEMENTATION
// for SEEK_CUR, need to adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999680195524501	WITHOUT_CLASSIFICATION	3.198044754996909E-5	IMPLEMENTATION
// libc flushes writes on any read from the actual file, so we flush here	WITHOUT_CLASSIFICATION	0.9999938666264181	WITHOUT_CLASSIFICATION	6.133373581915678E-6	IMPLEMENTATION
// we have read ahead, and need to back up	WITHOUT_CLASSIFICATION	0.9999137417733853	WITHOUT_CLASSIFICATION	8.625822661471597E-5	IMPLEMENTATION
// 128K seems to be the minimum at which the stat+seek is faster than reallocation	WITHOUT_CLASSIFICATION	0.9999908023017234	WITHOUT_CLASSIFICATION	9.19769827656852E-6	IMPLEMENTATION
// // limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations //	WITHOUT_CLASSIFICATION	0.9999531195587632	WITHOUT_CLASSIFICATION	4.6880441236833446E-5	IMPLEMENTATION
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.998932717132431	WITHOUT_CLASSIFICATION	0.0010672828675690376	IMPLEMENTATION
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999817840557194	WITHOUT_CLASSIFICATION	1.821594428063663E-5	IMPLEMENTATION
// // Avoid double-copying for reads that are larger than the buffer size //	WITHOUT_CLASSIFICATION	0.9999883930577791	WITHOUT_CLASSIFICATION	1.1606942220877533E-5	IMPLEMENTATION
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999854017160118	WITHOUT_CLASSIFICATION	1.4598283988178097E-5	IMPLEMENTATION
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999854017160118	WITHOUT_CLASSIFICATION	1.4598283988178097E-5	IMPLEMENTATION
// // Avoid double-copying for reads that are larger than the buffer size, or // the destination is a direct buffer. //	WITHOUT_CLASSIFICATION	0.9999813651711097	WITHOUT_CLASSIFICATION	1.8634828890216205E-5	IMPLEMENTATION
// // We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating // a huge temporary native buffer, when doing reads into a heap buffer // If the dst buffer is direct, then no need to limit. //	WITHOUT_CLASSIFICATION	0.9999914143849852	WITHOUT_CLASSIFICATION	8.585615014810487E-6	IMPLEMENTATION
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999658471465307	WITHOUT_CLASSIFICATION	3.415285346936379E-5	IMPLEMENTATION
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999658471465307	WITHOUT_CLASSIFICATION	3.415285346936379E-5	IMPLEMENTATION
// Doesn't fit in buffer. Write immediately. // ensure nothing left to write	WITHOUT_CLASSIFICATION	0.9999994474111312	WITHOUT_CLASSIFICATION	5.525888688174959E-7	IMPLEMENTATION
// truncate can't lengthen files, so we save position, seek/write, and go back	WITHOUT_CLASSIFICATION	0.9999564525808592	WITHOUT_CLASSIFICATION	4.354741914080614E-5	IMPLEMENTATION
// how far ahead we are when reading	WITHOUT_CLASSIFICATION	0.9997888170132303	WITHOUT_CLASSIFICATION	2.1118298676964792E-4	IMPLEMENTATION
// if the read buffer is ahead, back up	WITHOUT_CLASSIFICATION	0.9999983143562954	WITHOUT_CLASSIFICATION	1.6856437046450649E-6	IMPLEMENTATION
// close without removing from finalizers	WITHOUT_CLASSIFICATION	0.9999953821872195	WITHOUT_CLASSIFICATION	4.617812780583804E-6	IMPLEMENTATION
// putting a bit back, so we're not at EOF anymore	WITHOUT_CLASSIFICATION	0.9999892134700725	WITHOUT_CLASSIFICATION	1.0786529927492697E-5	IMPLEMENTATION
// save the ungot	WITHOUT_CLASSIFICATION	0.9997760593812587	WITHOUT_CLASSIFICATION	2.2394061874126517E-4	IMPLEMENTATION
// otherwise, we try an unbuffered read to get whatever's available	WITHOUT_CLASSIFICATION	0.9999829777087637	WITHOUT_CLASSIFICATION	1.7022291236284313E-5	IMPLEMENTATION
// ignore this; select() will set the correct mode when it is finished	WITHOUT_CLASSIFICATION	0.9999939327391356	WITHOUT_CLASSIFICATION	6.067260864408982E-6	IMPLEMENTATION
// flush first	WITHOUT_CLASSIFICATION	0.9997017728422192	WITHOUT_CLASSIFICATION	2.9822715778087975E-4	IMPLEMENTATION
// // Wake up any channels that became unblocked //	WITHOUT_CLASSIFICATION	0.999950661798079	WITHOUT_CLASSIFICATION	4.933820192095681E-5	IMPLEMENTATION
// // Register any new blocking I/O requests //	WITHOUT_CLASSIFICATION	0.9990686743443244	WITHOUT_CLASSIFICATION	9.313256556754233E-4	IMPLEMENTATION
// Now clear out any previously selected channels	WITHOUT_CLASSIFICATION	0.9999791795387487	WITHOUT_CLASSIFICATION	2.0820461251350957E-5	IMPLEMENTATION
// // Wait for I/O on any channel //	WITHOUT_CLASSIFICATION	0.9999161190487084	WITHOUT_CLASSIFICATION	8.388095129166125E-5	IMPLEMENTATION
// Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'	WITHOUT_CLASSIFICATION	0.9999803633774043	WITHOUT_CLASSIFICATION	1.963662259563769E-5	IMPLEMENTATION
// Java requires "w" for creating a file that does not exist	WITHOUT_CLASSIFICATION	0.9998171176857102	WITHOUT_CLASSIFICATION	1.8288231428968557E-4	IMPLEMENTATION
// seek to force underlying buffer to flush	WITHOUT_CLASSIFICATION	0.999916883058841	WITHOUT_CLASSIFICATION	8.311694115902214E-5	IMPLEMENTATION
// seek to force read buffer to invalidate	WITHOUT_CLASSIFICATION	0.9999385398898181	WITHOUT_CLASSIFICATION	6.146011018187927E-5	IMPLEMENTATION
/*        result = eval("arr = Array::['c', 200]; p arr");        assertEquals("[\"c\", 200]", result);        result = eval("arr = Array.['d', 200]; p arr");        assertEquals("[\"d\", 200]", result);        */	WITHOUT_CLASSIFICATION	0.999967641897276	WITHOUT_CLASSIFICATION	3.2358102723947395E-5	IMPLEMENTATION
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999325737937851	WITHOUT_CLASSIFICATION	6.742620621481531E-5	IMPLEMENTATION
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.8370037968047287	WITHOUT_CLASSIFICATION	0.16299620319527128	IMPLEMENTATION
// make sure the pipe stream is set to null	WITHOUT_CLASSIFICATION	0.9999503636969379	WITHOUT_CLASSIFICATION	4.963630306215136E-5	IMPLEMENTATION
// make sure the main stream is set to null	WITHOUT_CLASSIFICATION	0.9998825185281716	WITHOUT_CLASSIFICATION	1.1748147182846918E-4	IMPLEMENTATION
// first try our custom-generated Unsafe	WITHOUT_CLASSIFICATION	0.999957028140602	WITHOUT_CLASSIFICATION	4.297185939812116E-5	IMPLEMENTATION
// then try Sun's Unsafe	WITHOUT_CLASSIFICATION	0.9999712711617749	WITHOUT_CLASSIFICATION	2.8728838225137738E-5	IMPLEMENTATION
// if we get here, the class and field exist; construct our Unsafe impl // that calls it directly	WITHOUT_CLASSIFICATION	0.9999959432880123	WITHOUT_CLASSIFICATION	4.056711987767993E-6	IMPLEMENTATION
// else leave it null	WITHOUT_CLASSIFICATION	0.9999313021597577	WITHOUT_CLASSIFICATION	6.869784024226059E-5	IMPLEMENTATION
// TypeMatcher	WITHOUT_CLASSIFICATION	0.9996200707317198	WITHOUT_CLASSIFICATION	3.7992926828032465E-4	IMPLEMENTATION
// This is now needed, since module Java // isn't in by default	WITHOUT_CLASSIFICATION	0.9999999203149225	WITHOUT_CLASSIFICATION	7.968507753524309E-8	IMPLEMENTATION
// Iterate over the RubyHash keySet, simultaneously iterating over the values()	WITHOUT_CLASSIFICATION	0.9999225608454354	WITHOUT_CLASSIFICATION	7.743915456456101E-5	IMPLEMENTATION
// Get the value from the map via the key	WITHOUT_CLASSIFICATION	0.9999978994994754	WITHOUT_CLASSIFICATION	2.100500524621858E-6	IMPLEMENTATION
// Get the value from the map via the values iterator	WITHOUT_CLASSIFICATION	0.999999883870483	WITHOUT_CLASSIFICATION	1.161295169718212E-7	IMPLEMENTATION
// Check the 2 values obtained via different means	WITHOUT_CLASSIFICATION	0.9999984770359042	WITHOUT_CLASSIFICATION	1.522964095924348E-6	IMPLEMENTATION
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999978576104513	WITHOUT_CLASSIFICATION	2.1423895486577116E-6	IMPLEMENTATION
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999978576104513	WITHOUT_CLASSIFICATION	2.1423895486577116E-6	IMPLEMENTATION
// Check the entry.setValue values come back out ok	WITHOUT_CLASSIFICATION	0.999993096252574	WITHOUT_CLASSIFICATION	6.903747426015115E-6	IMPLEMENTATION
// If we're running from within an IDE we may not have // the .rb files in our classpath. Try to find them // in the filesystem instead.	WITHOUT_CLASSIFICATION	0.999990367286503	WITHOUT_CLASSIFICATION	9.632713497011512E-6	IMPLEMENTATION
//assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); //assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));	WITHOUT_CLASSIFICATION	0.9992083790543188	WITHOUT_CLASSIFICATION	7.916209456811888E-4	IMPLEMENTATION
// Init	WITHOUT_CLASSIFICATION	0.999991681053662	WITHOUT_CLASSIFICATION	8.318946338004012E-6	IMPLEMENTATION
// Block	WITHOUT_CLASSIFICATION	0.9999914778450034	WITHOUT_CLASSIFICATION	8.522154996682863E-6	IMPLEMENTATION
// Copy constructor	WITHOUT_CLASSIFICATION	0.9995690298614242	WITHOUT_CLASSIFICATION	4.309701385758018E-4	IMPLEMENTATION
// presumably this require should fail	WITHOUT_CLASSIFICATION	0.9992515956620289	WITHOUT_CLASSIFICATION	7.484043379711086E-4	IMPLEMENTATION
// JRUBY-646 // presumably this require should fail	WITHOUT_CLASSIFICATION	0.9992515956620289	WITHOUT_CLASSIFICATION	7.484043379711086E-4	IMPLEMENTATION
// Test that requiring a normal Java class raises an error (JRUBY-3214	WITHOUT_CLASSIFICATION	0.9999755717598098	WITHOUT_CLASSIFICATION	2.4428240190289154E-5	IMPLEMENTATION
// ok	WITHOUT_CLASSIFICATION	0.9999733613766573	WITHOUT_CLASSIFICATION	2.663862334271877E-5	IMPLEMENTATION
// Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods // from Ruby so they are not really unused).	WITHOUT_CLASSIFICATION	0.9999980906872303	WITHOUT_CLASSIFICATION	1.909312769718954E-6	IMPLEMENTATION
//load should work several times in a row	WITHOUT_CLASSIFICATION	0.9999806705437451	WITHOUT_CLASSIFICATION	1.9329456254947395E-5	IMPLEMENTATION
//reset the $loadTestvar	WITHOUT_CLASSIFICATION	0.9998030347760115	WITHOUT_CLASSIFICATION	1.969652239886098E-4	IMPLEMENTATION
//call throwException via JRuby	WITHOUT_CLASSIFICATION	0.9996994403444089	WITHOUT_CLASSIFICATION	3.005596555911117E-4	IMPLEMENTATION
// Notify the calling thread that we're about to go to sleep the first time	WITHOUT_CLASSIFICATION	0.9999949444324807	WITHOUT_CLASSIFICATION	5.055567519288754E-6	IMPLEMENTATION
// wait for the go signal	WITHOUT_CLASSIFICATION	0.9999785432424758	WITHOUT_CLASSIFICATION	2.1456757524158814E-5	IMPLEMENTATION
// run ten separate calls into Ruby, with delay and explicit GC	WITHOUT_CLASSIFICATION	0.9999923041881765	WITHOUT_CLASSIFICATION	7.695811823418694E-6	IMPLEMENTATION
// wait until thread has initialized	WITHOUT_CLASSIFICATION	0.9999695239748103	WITHOUT_CLASSIFICATION	3.0476025189644534E-5	IMPLEMENTATION
// notify thread to proceed	WITHOUT_CLASSIFICATION	0.9999294727011548	WITHOUT_CLASSIFICATION	7.052729884511287E-5	IMPLEMENTATION
// wait until thread has completed	WITHOUT_CLASSIFICATION	0.9999474862629523	WITHOUT_CLASSIFICATION	5.251373704776518E-5	IMPLEMENTATION
// we do preand post load outside the "body" versions to pre-prepare // and pre-push the dynamic scope we need for lastline	WITHOUT_CLASSIFICATION	0.9999537640011352	WITHOUT_CLASSIFICATION	4.62359988648174E-5	IMPLEMENTATION
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999997378108132	WITHOUT_CLASSIFICATION	2.621891868465663E-7	IMPLEMENTATION
// MRI behavior: raise ArgumentError for 'unknown command' before // checking number of args.	WITHOUT_CLASSIFICATION	0.9999719562022784	WITHOUT_CLASSIFICATION	2.8043797721546618E-5	IMPLEMENTATION
// if any exceptions were raised, we fail	WITHOUT_CLASSIFICATION	0.9988730230681668	WITHOUT_CLASSIFICATION	0.001126976931833183	IMPLEMENTATION
// there should only be one more thread in thread group than before we started	WITHOUT_CLASSIFICATION	0.9998008884389369	WITHOUT_CLASSIFICATION	1.991115610631424E-4	IMPLEMENTATION
// construct a new cache with thread's classloader and no limit	WITHOUT_CLASSIFICATION	0.9988788054086845	WITHOUT_CLASSIFICATION	0.0011211945913154938	IMPLEMENTATION
//        Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); //        Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();	WITHOUT_CLASSIFICATION	0.9998528917867395	WITHOUT_CLASSIFICATION	1.4710821326046803E-4	IMPLEMENTATION
//        assertSame(script1, script2);	WITHOUT_CLASSIFICATION	0.9998841479571866	WITHOUT_CLASSIFICATION	1.158520428133233E-4	IMPLEMENTATION
// void methods should work	WITHOUT_CLASSIFICATION	0.9999343386428551	WITHOUT_CLASSIFICATION	6.566135714493601E-5	IMPLEMENTATION
// methods with required = 4 or higher should bind and be callable using reflection // JRUBY-3649	WITHOUT_CLASSIFICATION	0.9997744397181509	WITHOUT_CLASSIFICATION	2.2556028184915467E-4	IMPLEMENTATION
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999790364091349	WITHOUT_CLASSIFICATION	2.096359086521178E-5	IMPLEMENTATION
// Ensure we have a new interpreter for each test. Previous we were using the //  same interpreter which caused problems as soon as one test failed.	WITHOUT_CLASSIFICATION	0.9999918290857934	WITHOUT_CLASSIFICATION	8.170914206645156E-6	IMPLEMENTATION
// Without a flush Ant will miss some of our output	WITHOUT_CLASSIFICATION	0.9999965891617456	WITHOUT_CLASSIFICATION	3.41083825447987E-6	IMPLEMENTATION
// assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());	WITHOUT_CLASSIFICATION	0.9999004402456029	WITHOUT_CLASSIFICATION	9.955975439703077E-5	IMPLEMENTATION
//        int n = 10;	WITHOUT_CLASSIFICATION	0.999946894136802	WITHOUT_CLASSIFICATION	5.310586319792743E-5	IMPLEMENTATION
// there might be more test classes in a single file, so we iterate over them	WITHOUT_CLASSIFICATION	0.9999995224098255	WITHOUT_CLASSIFICATION	4.775901744778909E-7	IMPLEMENTATION
//No ClassCastException!	WITHOUT_CLASSIFICATION	0.9997866442909932	WITHOUT_CLASSIFICATION	2.1335570900684779E-4	IMPLEMENTATION
// value equality	WITHOUT_CLASSIFICATION	0.9998903178722555	WITHOUT_CLASSIFICATION	1.0968212774459862E-4	IMPLEMENTATION
// identity equality	WITHOUT_CLASSIFICATION	0.9984332808541854	WITHOUT_CLASSIFICATION	0.0015667191458146443	IMPLEMENTATION
// bench straight-up integer fib(30)	WITHOUT_CLASSIFICATION	0.9999018226189264	WITHOUT_CLASSIFICATION	9.817738107357896E-5	IMPLEMENTATION
// bench Integer fib	WITHOUT_CLASSIFICATION	0.9996242936801756	WITHOUT_CLASSIFICATION	3.757063198245215E-4	IMPLEMENTATION
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999362290526616	WITHOUT_CLASSIFICATION	6.377094733850302E-5	IMPLEMENTATION
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999362290526616	WITHOUT_CLASSIFICATION	6.377094733850302E-5	IMPLEMENTATION
// bench fixnum-boxed fib	WITHOUT_CLASSIFICATION	0.9999362290526616	WITHOUT_CLASSIFICATION	6.377094733850302E-5	IMPLEMENTATION
// bench straight-up long fib(30)	WITHOUT_CLASSIFICATION	0.9999252157968902	WITHOUT_CLASSIFICATION	7.478420310980779E-5	IMPLEMENTATION
// bench Long fib	WITHOUT_CLASSIFICATION	0.9996234338863625	WITHOUT_CLASSIFICATION	3.7656611363742E-4	IMPLEMENTATION
// skip this one, probably no 'ls' (windows)	WITHOUT_CLASSIFICATION	0.9999247060926949	WITHOUT_CLASSIFICATION	7.529390730513666E-5	IMPLEMENTATION
// start off with a neutral parent	WITHOUT_CLASSIFICATION	0.9999817569184811	WITHOUT_CLASSIFICATION	1.824308151882868E-5	IMPLEMENTATION
/*            public class Hello {                public static String getMessage() {                    return ".....";                }            }            */	WITHOUT_CLASSIFICATION	0.9999995285644869	WITHOUT_CLASSIFICATION	4.7143551309731733E-7	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999514857102099	WITHOUT_CLASSIFICATION	4.8514289790212805E-5	IMPLEMENTATION
// Note: We can't use file.exists() to check whether the symlink // exists or not, because that method returns false for existing // but broken symlink. So, we try without the existence check, // but in the try-catch block. // MRI behavior: symlink? on broken symlink should return true.	WITHOUT_CLASSIFICATION	0.999999635148343	WITHOUT_CLASSIFICATION	3.648516570282539E-7	IMPLEMENTATION
// We are creating a new IO object that shares the same // IOHandler (and fileno).	WITHOUT_CLASSIFICATION	0.9999929511127691	WITHOUT_CLASSIFICATION	7.0488872308931285E-6	IMPLEMENTATION
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999948713434074	WITHOUT_CLASSIFICATION	5.128656592611332E-6	IMPLEMENTATION
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9996611722072354	WITHOUT_CLASSIFICATION	3.388277927646339E-4	IMPLEMENTATION
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9997793341646717	WITHOUT_CLASSIFICATION	2.2066583532819994E-4	IMPLEMENTATION
// Translate "x || y" --> "x = (is_true(x) ? x : y)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, true, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9996888097699096	WITHOUT_CLASSIFICATION	3.111902300903885E-4	IMPLEMENTATION
// // Force the client socket to be blocking //	WITHOUT_CLASSIFICATION	0.9999656235699679	WITHOUT_CLASSIFICATION	3.437643003206399E-5	IMPLEMENTATION
// Additional context surrounding tokens that both the lexer and // grammar use.	WITHOUT_CLASSIFICATION	0.9999020892603461	WITHOUT_CLASSIFICATION	9.791073965391001E-5	IMPLEMENTATION
// Enebo:  c can never be antrhign but '.' // Why did I put this here?	WITHOUT_CLASSIFICATION	0.9280879538073965	WITHOUT_CLASSIFICATION	0.07191204619260348	IMPLEMENTATION
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9999889910022592	WITHOUT_CLASSIFICATION	1.1008997740900101E-5	IMPLEMENTATION
//[C,C] //[C, boolean]	WITHOUT_CLASSIFICATION	0.999782952175292	WITHOUT_CLASSIFICATION	2.1704782470798146E-4	IMPLEMENTATION
// Label for the start of the closure (used to implement redo) // Label for the end of the closure (used to implement retry)	WITHOUT_CLASSIFICATION	0.9978726394416381	WITHOUT_CLASSIFICATION	0.002127360558361899	IMPLEMENTATION
// ignore; job was cancelled // FIXME: is this ok?	WITHOUT_CLASSIFICATION	0.9884299999351296	WITHOUT_CLASSIFICATION	0.011570000064870484	IMPLEMENTATION
//                    // check arity //                    checkArity(mv, scope);	WITHOUT_CLASSIFICATION	0.999789899146988	WITHOUT_CLASSIFICATION	2.1010085301202122E-4	IMPLEMENTATION
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.999750467904337	WITHOUT_CLASSIFICATION	2.495320956630182E-4	IMPLEMENTATION
// we take the first method found as our "n" method, since for any non-specific // arity they'll all error the same. If an actual "n" method is created, we // use that.	WITHOUT_CLASSIFICATION	0.9999957128440342	WITHOUT_CLASSIFICATION	4.287155965827081E-6	IMPLEMENTATION
// Used by our duck-typification of Proc into interface types, to allow // coercing a simple proc into an interface parameter.	WITHOUT_CLASSIFICATION	0.999999239843648	WITHOUT_CLASSIFICATION	7.601563519963329E-7	IMPLEMENTATION
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999937999772234	WITHOUT_CLASSIFICATION	6.200022776709755E-6	IMPLEMENTATION
// it's either as converted as we can make it via above logic or it's // not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9902246751516944	WITHOUT_CLASSIFICATION	0.0097753248483056	IMPLEMENTATION
// package scheme 2: separate module for each full package name, constructed  // from the camel-cased package segments: Java::JavaLang::Object, 	WITHOUT_CLASSIFICATION	0.9999969710436284	WITHOUT_CLASSIFICATION	3.02895637175015E-6	IMPLEMENTATION
// // construct the proxy method //	WITHOUT_CLASSIFICATION	0.9998697819366467	WITHOUT_CLASSIFICATION	1.302180633533691E-4	IMPLEMENTATION
// line 159 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999547019069259	WITHOUT_CLASSIFICATION	4.5298093074165514E-5	IMPLEMENTATION
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999843116574724	WITHOUT_CLASSIFICATION	1.56883425275956E-5	IMPLEMENTATION
// line 152 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999547019069259	WITHOUT_CLASSIFICATION	4.5298093074165514E-5	IMPLEMENTATION
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999978212420886	WITHOUT_CLASSIFICATION	2.1787579115206852E-6	IMPLEMENTATION
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999843116574724	WITHOUT_CLASSIFICATION	1.56883425275956E-5	IMPLEMENTATION
// We only need to pass in current scope if we are evaluating as a block (which // is only done for evals).  We need to pass this in so that we can appropriately scope // down to captured scopes when we are parsing.	WITHOUT_CLASSIFICATION	0.9999998788760084	WITHOUT_CLASSIFICATION	1.2112399152235104E-7	IMPLEMENTATION
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999962082825903	WITHOUT_CLASSIFICATION	3.791717409618458E-6	IMPLEMENTATION
// A place to store that special hiding space that bindings need to implement things like: // eval("a = 1", binding); eval("p a").  All binding instances must get access to this // hidden shared scope.  We store it here.  This will be null if no binding has yet // been called.	WITHOUT_CLASSIFICATION	0.8582492842430856	IMPLEMENTATION	0.14175071575691445	WITHOUT_CLASSIFICATION
// TODO: make it 16 now ? // MUST be power of 2!	WITHOUT_CLASSIFICATION	0.5869376028319261	IMPLEMENTATION	0.41306239716807386	WITHOUT_CLASSIFICATION
// check visibility // dup method	WITHOUT_CLASSIFICATION	0.9995332041397064	WITHOUT_CLASSIFICATION	4.667958602936091E-4	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9974542629218273	WITHOUT_CLASSIFICATION	0.002545737078172738	IMPLEMENTATION
// unsigned int, native // unsigned long, native	WITHOUT_CLASSIFICATION	0.999758751398272	WITHOUT_CLASSIFICATION	2.4124860172815247E-4	IMPLEMENTATION
//need padding //I'm fairly sure there is a library call to create a //string filled with a given char with a given length but I couldn't find it	WITHOUT_CLASSIFICATION	0.9998881337193029	WITHOUT_CLASSIFICATION	1.1186628069725251E-4	IMPLEMENTATION
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999907832181317	WITHOUT_CLASSIFICATION	9.216781868339091E-6	IMPLEMENTATION
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999325737937851	WITHOUT_CLASSIFICATION	6.742620621481531E-5	IMPLEMENTATION
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9996290233134356	WITHOUT_CLASSIFICATION	3.709766865643952E-4	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.996057852535297	WITHOUT_CLASSIFICATION	0.003942147464702991	IMPLEMENTATION
// Estimate the square root with the foremost 62 bits of squarD // bi and scale are a tandem	WITHOUT_CLASSIFICATION	0.9999904666804033	WITHOUT_CLASSIFICATION	9.533319596849165E-6	IMPLEMENTATION
// captures // begin and end are used when not groups defined // source string	WITHOUT_CLASSIFICATION	0.9999970388536745	WITHOUT_CLASSIFICATION	2.9611463254668707E-6	IMPLEMENTATION
// // INSTANCE VARIABLE RUBY METHODS //	WITHOUT_CLASSIFICATION	0.9999012238864379	WITHOUT_CLASSIFICATION	9.877611356210128E-5	IMPLEMENTATION
// switch // while	WITHOUT_CLASSIFICATION	0.9997961781416022	WITHOUT_CLASSIFICATION	2.0382185839782946E-4	IMPLEMENTATION
// For nodes do not have their own scope so we pass null to indicate this. // 'For's are implemented as blocks in evaluation, but they have no scope so we // just deal with this lack of scope throughout its lifespan.  We should probably // change the way this works to get rid of multiple null checks.	WITHOUT_CLASSIFICATION	0.9999045466996779	WITHOUT_CLASSIFICATION	9.5453300322137E-5	IMPLEMENTATION
// This field is used during argument processing to avoid putting RubyArray // instances that are purely for utility purposes into ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999996982007237	WITHOUT_CLASSIFICATION	3.017992763278016E-7	IMPLEMENTATION
// Parent container for this context (can be dynamic!!) // If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure // List of IR instructions for this method	WITHOUT_CLASSIFICATION	0.9999782226939685	WITHOUT_CLASSIFICATION	2.1777306031433158E-5	IMPLEMENTATION
// Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = false    //    beq(v1, false, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999912002838013	WITHOUT_CLASSIFICATION	8.799716198723111E-6	IMPLEMENTATION
// expected	WITHOUT_CLASSIFICATION	0.9997554909589491	WITHOUT_CLASSIFICATION	2.445090410508988E-4	IMPLEMENTATION
// Do nothing	WITHOUT_CLASSIFICATION	0.9998171332065356	WITHOUT_CLASSIFICATION	1.8286679346428555E-4	IMPLEMENTATION
// constructor	WITHOUT_CLASSIFICATION	0.9995429956625556	WITHOUT_CLASSIFICATION	4.570043374444479E-4	IMPLEMENTATION
// If a line is followed by a blank line put // it back.	WITHOUT_CLASSIFICATION	0.9999644275973959	WITHOUT_CLASSIFICATION	3.557240260421718E-5	IMPLEMENTATION
/* $>: default output handle */	WITHOUT_CLASSIFICATION	0.9999786834059174	WITHOUT_CLASSIFICATION	2.131659408253675E-5	IMPLEMENTATION
// line 423	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 486	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// Signal uses sun.misc.* classes, this is not allowed // in the security-sensitive environments	WITHOUT_CLASSIFICATION	0.9998344405758571	WITHOUT_CLASSIFICATION	1.655594241428455E-4	IMPLEMENTATION
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999940343803926	WITHOUT_CLASSIFICATION	5.965619607364666E-6	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9998545929716477	WITHOUT_CLASSIFICATION	1.4540702835231264E-4	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9998545929716477	WITHOUT_CLASSIFICATION	1.4540702835231264E-4	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999931960041895	WITHOUT_CLASSIFICATION	6.803995810607786E-6	IMPLEMENTATION
// if there's no receiver, evaluate and pass in the superclass, or // pass self if it no superclass	WITHOUT_CLASSIFICATION	0.9999903223149041	WITHOUT_CLASSIFICATION	9.677685095896259E-6	IMPLEMENTATION
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9997730317728798	WITHOUT_CLASSIFICATION	2.269682271202693E-4	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.8930598805782629	IMPLEMENTATION	0.10694011942173715	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.8930598805782629	IMPLEMENTATION	0.10694011942173715	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.8930598805782629	IMPLEMENTATION	0.10694011942173715	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.8930598805782629	IMPLEMENTATION	0.10694011942173715	WITHOUT_CLASSIFICATION
// Decrease value to hit upper range.  	WITHOUT_CLASSIFICATION	0.9999816919617281	WITHOUT_CLASSIFICATION	1.8308038271911927E-5	IMPLEMENTATION
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9998971212164729	WITHOUT_CLASSIFICATION	1.0287878352703126E-4	IMPLEMENTATION
// "else" body	WITHOUT_CLASSIFICATION	0.9999282175332443	WITHOUT_CLASSIFICATION	7.178246675556085E-5	IMPLEMENTATION
// done // done // done // Nothing to do for 1.8 // done // done // done // done // done // done // done? // done // done // done // done // done // done // done // done // done // done // done //            case DEFINEDNODE: return buildDefined(node, m); // Incomplete // done // done // done // done // done // done // done // done //            case ENSURENODE: return buildEnsureNode(node, m); // DEFERRED // done // done // done // done //            case FLIPNODE: return buildFlip(node, m); // SSS FIXME: What code generates this AST? // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done? // done // done // done // done // done // done -- partially //            case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); // DEFERRED SSS FIXME: What code generates this AST? // done //            case POSTEXENODE: return buildPostExe(node, m); // DEFERRED //            case PREEXENODE: return buildPreExe(node, m); // DEFERRED // done?? // done	WITHOUT_CLASSIFICATION	0.9698336078229708	WITHOUT_CLASSIFICATION	0.030166392177029204	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9996200707317198	WITHOUT_CLASSIFICATION	3.7992926828032465E-4	IMPLEMENTATION
/* $+: string matches last paren. */	WITHOUT_CLASSIFICATION	0.99999991657471	WITHOUT_CLASSIFICATION	8.342528999888447E-8	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999987425805775	WITHOUT_CLASSIFICATION	1.2574194223996682E-6	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999987425805775	WITHOUT_CLASSIFICATION	1.2574194223996682E-6	IMPLEMENTATION
// Ruby code frequently uses a platform check to choose "NUL:" on windows // but since that check doesn't work well on JRuby, we help it out	WITHOUT_CLASSIFICATION	0.9999997603307755	WITHOUT_CLASSIFICATION	2.3966922451304316E-7	IMPLEMENTATION
/* 10! */	WITHOUT_CLASSIFICATION	0.9999984386024293	WITHOUT_CLASSIFICATION	1.5613975706521305E-6	IMPLEMENTATION
//            case RESCUENODE: return buildRescue(node, m); // DEFERRED //            case RETRYNODE: return buildRetry(node, m); // DEFERRED // done	WITHOUT_CLASSIFICATION	0.9999300411057598	WITHOUT_CLASSIFICATION	6.995889424019974E-5	IMPLEMENTATION
// Is this instruction live or dead?  During optimization passes, if this instruction // causes no side-effects and the result of the instruction is not needed by anyone else, // we can remove this instruction altogether without affecting program correctness.	WITHOUT_CLASSIFICATION	0.737076137107272	IMPLEMENTATION	0.2629238628927279	WITHOUT_CLASSIFICATION
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999798315257196	WITHOUT_CLASSIFICATION	2.0168474280500657E-5	IMPLEMENTATION
// first, iterate over all required args	WITHOUT_CLASSIFICATION	0.999914161153267	WITHOUT_CLASSIFICATION	8.583884673286014E-5	IMPLEMENTATION
// // Determine if the parameter might be passed as a 32bit int parameter. // This just applies to buffer/pointer types. //	WITHOUT_CLASSIFICATION	0.9999996801929798	WITHOUT_CLASSIFICATION	3.198070202243023E-7	IMPLEMENTATION
//Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());	WITHOUT_CLASSIFICATION	0.9996996597151838	WITHOUT_CLASSIFICATION	3.0034028481629323E-4	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999978212420886	WITHOUT_CLASSIFICATION	2.1787579115206852E-6	IMPLEMENTATION
// line 449	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 495	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// Management/monitoring	WITHOUT_CLASSIFICATION	0.9999362290526616	WITHOUT_CLASSIFICATION	6.377094733850302E-5	IMPLEMENTATION
// if we've found the last char of the separator, // and we've found at least as many characters as separator length, // and the last n characters of our buffer match the separator, we're done	WITHOUT_CLASSIFICATION	0.9999999440577804	WITHOUT_CLASSIFICATION	5.59422196799917E-8	IMPLEMENTATION
/* 14! */	WITHOUT_CLASSIFICATION	0.9999984386024293	WITHOUT_CLASSIFICATION	1.5613975706521305E-6	IMPLEMENTATION
// Process any set of annotations // No supported options	WITHOUT_CLASSIFICATION	0.9999976626439924	WITHOUT_CLASSIFICATION	2.3373560077305706E-6	IMPLEMENTATION
// add to the jitted methods set	WITHOUT_CLASSIFICATION	0.9997974279793911	WITHOUT_CLASSIFICATION	2.025720206089404E-4	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.9999984892447715	WITHOUT_CLASSIFICATION	1.510755228436024E-6	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.9999984892447715	WITHOUT_CLASSIFICATION	1.510755228436024E-6	IMPLEMENTATION
//            case SCLASSNODE: return buildSClass(node, m); // DEFERRED // done // done // done // done // done // done // done // done //            case UNDEFNODE: return buildUndef(node, m); // DEFERRED // done //            case VALIASNODE: return buildVAlias(node, m); // DEFERRED // done // done	WITHOUT_CLASSIFICATION	0.9999300411057598	WITHOUT_CLASSIFICATION	6.995889424019968E-5	IMPLEMENTATION
// // Adding a post-invoke for the cb result serves to both keep it alive // until after the function returns, and allows us to clean up the native // trampoline early, instead of letting them accumulate until a GC run //	WITHOUT_CLASSIFICATION	0.9999831196146661	WITHOUT_CLASSIFICATION	1.6880385333908673E-5	IMPLEMENTATION
/* The Java method doesn't care what class it is, but we need to               know what to convert it to, so we use the object's own class.               If that doesn't help, we use String to force a call to the               object's "to_s" method. */	WITHOUT_CLASSIFICATION	0.987414176746851	WITHOUT_CLASSIFICATION	0.012585823253149029	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.9999826840860871	WITHOUT_CLASSIFICATION	1.7315913912853852E-5	IMPLEMENTATION
// Atomic integers for symbol and method IDs	WITHOUT_CLASSIFICATION	0.9999197067827766	WITHOUT_CLASSIFICATION	8.029321722327693E-5	IMPLEMENTATION
/* 18! */	WITHOUT_CLASSIFICATION	0.9999984386024293	WITHOUT_CLASSIFICATION	1.5613975706521305E-6	IMPLEMENTATION
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9911800904497216	WITHOUT_CLASSIFICATION	0.00881990955027852	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999736769656675	WITHOUT_CLASSIFICATION	2.6323034332543805E-5	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999736769656675	WITHOUT_CLASSIFICATION	2.6323034332543805E-5	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999736769656675	WITHOUT_CLASSIFICATION	2.6323034332543805E-5	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999736769656675	WITHOUT_CLASSIFICATION	2.6323034332543805E-5	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999994552755792	WITHOUT_CLASSIFICATION	5.447244207298539E-7	IMPLEMENTATION
/*      * This method takes as input a map of operands to their values, and outputs     * the result of this instruction.     *     * If the value map provides a value for any of the instruction's operands     * the expectation is that the operand will be replaced with the simplified value.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify.     *     * @param valueMap Mapping from operands to their simplified values     * @returns simplified result / output of this instruction     */	WITHOUT_CLASSIFICATION	0.9999999999956686	WITHOUT_CLASSIFICATION	4.331364512142245E-12	IMPLEMENTATION
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.997625083230659	WITHOUT_CLASSIFICATION	0.0023749167693410352	IMPLEMENTATION
// An atomic long for generating DynamicMethod serial numbers	WITHOUT_CLASSIFICATION	0.9999556415081591	WITHOUT_CLASSIFICATION	4.435849184100652E-5	IMPLEMENTATION
// MRI behavior: always check whether the file is writable // or not, even if we are to write 0 bytes.	WITHOUT_CLASSIFICATION	0.9999995246816821	WITHOUT_CLASSIFICATION	4.753183179042043E-7	IMPLEMENTATION
/* 22! */	WITHOUT_CLASSIFICATION	0.9999984386024293	WITHOUT_CLASSIFICATION	1.5613975706521305E-6	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.9997495192181332	WITHOUT_CLASSIFICATION	2.504807818667984E-4	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999721191408038	WITHOUT_CLASSIFICATION	2.7880859196354167E-5	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999721191408038	WITHOUT_CLASSIFICATION	2.7880859196354167E-5	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999721191408038	WITHOUT_CLASSIFICATION	2.7880859196354167E-5	IMPLEMENTATION
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999933288507352	WITHOUT_CLASSIFICATION	6.671149264802745E-6	IMPLEMENTATION
// Build a new class and add it to the current scope (could be a script / module / class)	WITHOUT_CLASSIFICATION	0.9999901852655502	WITHOUT_CLASSIFICATION	9.814734449903584E-6	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999719367389059	WITHOUT_CLASSIFICATION	2.806326109399806E-5	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999719367389059	WITHOUT_CLASSIFICATION	2.806326109399806E-5	IMPLEMENTATION
// AF_INET	WITHOUT_CLASSIFICATION	0.9999914754825183	WITHOUT_CLASSIFICATION	8.524517481776458E-6	IMPLEMENTATION
//////////////////////////////////////////////////////////////////////////// // Now we provide default impls of a number of signatures. For each arity, // we first generate a non-block version of the method, which just adds // NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can // potentially take a block, to only generate the block-receiving signature // and still avoid arg boxing. // // We then provide default implementations of each block-accepting method // that in turn call the IRubyObject[]+Block version of call. This then // finally falls back on the minimum implementation requirement for // dynamic method handles. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9998239827534756	WITHOUT_CLASSIFICATION	1.760172465244705E-4	IMPLEMENTATION
// Because we implement Java interfaces now, we need a new === that's // aware of those additional "virtual" supertypes	WITHOUT_CLASSIFICATION	0.9552416654133982	WITHOUT_CLASSIFICATION	0.0447583345866017	IMPLEMENTATION
// BASE64	WITHOUT_CLASSIFICATION	0.9999914754825183	WITHOUT_CLASSIFICATION	8.524517481776458E-6	IMPLEMENTATION
/* note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY         * when value is an integer less than 1.         * We treat 0 as a special case to avoid Domain error.         */	WITHOUT_CLASSIFICATION	0.9999999833513468	WITHOUT_CLASSIFICATION	1.6648653221195945E-8	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.9998362119677371	WITHOUT_CLASSIFICATION	1.6378803226302068E-4	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999977362834324	WITHOUT_CLASSIFICATION	2.2637165676007264E-6	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999977362834324	WITHOUT_CLASSIFICATION	2.2637165676007264E-6	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999782831452289	WITHOUT_CLASSIFICATION	2.171685477110048E-5	IMPLEMENTATION
// SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode // We won't get here for argument receives!  So, buildDasgn is called for // assignments to block variables within a block.  As far as the IR is concerned, // this is just a simple copy	WITHOUT_CLASSIFICATION	0.9999999897772555	WITHOUT_CLASSIFICATION	1.0222744525752384E-8	IMPLEMENTATION
// getSimplifiedOperand returns the value of this operand, fully simplified // getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away // // The value is used during optimizations and propagated through the IR.  But, it is thrown away after that. // But, the operand form is used for constructing the compound objects represented by the operand. // // Example: a = [1], b = [3,4], c = [a,b], d = [2,c] //   -- getValue(c) = [1,[3,4]];     getSimplifiedOperand(c) = [1, b] //   -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] // // Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. // So, if contents of a or b is modified, the "simplified value"s of c and d also change!  This difference // is captured by these two methods.	WITHOUT_CLASSIFICATION	0.9999999993135152	WITHOUT_CLASSIFICATION	6.864847581707583E-10	IMPLEMENTATION
//IRubyObject protocol = args[4];	WITHOUT_CLASSIFICATION	0.999627261166294	WITHOUT_CLASSIFICATION	3.7273883370600577E-4	IMPLEMENTATION
// promise to implement three to N with block	WITHOUT_CLASSIFICATION	0.9909282482148104	WITHOUT_CLASSIFICATION	0.009071751785189593	IMPLEMENTATION
// Ruby's OMG capture all source in a Hash feature // Add each line to buffer when encountering newline or EOF for first time.	WITHOUT_CLASSIFICATION	0.9999993338297903	WITHOUT_CLASSIFICATION	6.66170209750969E-7	IMPLEMENTATION
// carriage return	WITHOUT_CLASSIFICATION	0.9998109918091334	WITHOUT_CLASSIFICATION	1.8900819086659619E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9999222037321788	WITHOUT_CLASSIFICATION	7.779626782131826E-5	IMPLEMENTATION
// String construction routines by NOT byte[] buffer and making the target String shared 	WITHOUT_CLASSIFICATION	0.9999969930723077	WITHOUT_CLASSIFICATION	3.006927692284934E-6	IMPLEMENTATION
// insert all nodes in sequence, hash them in the final instruction // KEY	WITHOUT_CLASSIFICATION	0.9999954694245706	WITHOUT_CLASSIFICATION	4.530575429407013E-6	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999985487699912	WITHOUT_CLASSIFICATION	1.4512300087778123E-6	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.979623125333328	WITHOUT_CLASSIFICATION	0.020376874666672044	IMPLEMENTATION
// Basic Block id // CFG that this basic block belongs to // All basic blocks have a starting label // List of non-label instructions	WITHOUT_CLASSIFICATION	0.9999935284214225	WITHOUT_CLASSIFICATION	6.471578577481988E-6	IMPLEMENTATION
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9995315964042651	WITHOUT_CLASSIFICATION	4.684035957348718E-4	IMPLEMENTATION
// For all uninitialized specific arities, we defer to the "n" method which // should raise appropriate error in all cases.	WITHOUT_CLASSIFICATION	0.9986626598498214	WITHOUT_CLASSIFICATION	0.001337340150178587	IMPLEMENTATION
// implement is called to force this class to create stubs for all // methods in the given interface, so they'll show up in the list // of methods and be invocable without passing through method_missing	WITHOUT_CLASSIFICATION	0.9999965745178452	WITHOUT_CLASSIFICATION	3.4254821548197296E-6	IMPLEMENTATION
// CASE IR instructions are dummy instructions  // -- all when/then clauses have been converted into if-then-else blocks	WITHOUT_CLASSIFICATION	0.9999910356461511	WITHOUT_CLASSIFICATION	8.964353848920924E-6	IMPLEMENTATION
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999729129692785	WITHOUT_CLASSIFICATION	2.7087030721478364E-5	IMPLEMENTATION
// leave it null and fall back on our normal invocation logic	WITHOUT_CLASSIFICATION	0.9997669745137756	WITHOUT_CLASSIFICATION	2.330254862244091E-4	IMPLEMENTATION
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999984866643185	WITHOUT_CLASSIFICATION	1.5133356816447351E-6	IMPLEMENTATION
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9973938154942339	WITHOUT_CLASSIFICATION	0.0026061845057661005	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.999760499771291	WITHOUT_CLASSIFICATION	2.3950022870889166E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.999760499771291	WITHOUT_CLASSIFICATION	2.3950022870889166E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.999760499771291	WITHOUT_CLASSIFICATION	2.3950022870889166E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.999760499771291	WITHOUT_CLASSIFICATION	2.3950022870889166E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.999760499771291	WITHOUT_CLASSIFICATION	2.3950022870889166E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.999760499771291	WITHOUT_CLASSIFICATION	2.3950022870889166E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.999760499771291	WITHOUT_CLASSIFICATION	2.3950022870889166E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.999760499771291	WITHOUT_CLASSIFICATION	2.3950022870889166E-4	IMPLEMENTATION
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999610995725366	WITHOUT_CLASSIFICATION	3.8900427463468394E-5	IMPLEMENTATION
/* fall through */	WITHOUT_CLASSIFICATION	0.9999766076179261	WITHOUT_CLASSIFICATION	2.339238207394016E-5	IMPLEMENTATION
// deal with case when "other" is not a string	WITHOUT_CLASSIFICATION	0.9999701716537691	WITHOUT_CLASSIFICATION	2.982834623093957E-5	IMPLEMENTATION
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999976531854281	WITHOUT_CLASSIFICATION	2.346814571813513E-6	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999514857102099	WITHOUT_CLASSIFICATION	4.8514289790212805E-5	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999514857102099	WITHOUT_CLASSIFICATION	4.8514289790212805E-5	IMPLEMENTATION
// store argument count information into scope	WITHOUT_CLASSIFICATION	0.9999974930277132	WITHOUT_CLASSIFICATION	2.506972286795947E-6	IMPLEMENTATION
// the load method is used for loading as a top-level script, and prepares appropriate scoping around the code	WITHOUT_CLASSIFICATION	0.9999939851497117	WITHOUT_CLASSIFICATION	6.014850288377323E-6	IMPLEMENTATION
// First, build assignments for specific named arguments	WITHOUT_CLASSIFICATION	0.9999804543302134	WITHOUT_CLASSIFICATION	1.9545669786539647E-5	IMPLEMENTATION
//        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } //        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }	WITHOUT_CLASSIFICATION	0.9999194013146652	WITHOUT_CLASSIFICATION	8.05986853348162E-5	IMPLEMENTATION
// get current context	WITHOUT_CLASSIFICATION	0.9998691874200902	WITHOUT_CLASSIFICATION	1.3081257990976738E-4	IMPLEMENTATION
// octal constant	WITHOUT_CLASSIFICATION	0.9993171963854948	WITHOUT_CLASSIFICATION	6.828036145053029E-4	IMPLEMENTATION
// read	WITHOUT_CLASSIFICATION	0.9999976848480463	WITHOUT_CLASSIFICATION	2.315151953746317E-6	IMPLEMENTATION
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9997942485437987	WITHOUT_CLASSIFICATION	2.0575145620136044E-4	IMPLEMENTATION
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9996643165417358	WITHOUT_CLASSIFICATION	3.3568345826416737E-4	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999893097538548	WITHOUT_CLASSIFICATION	1.0690246145103819E-5	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999893097538548	WITHOUT_CLASSIFICATION	1.0690246145103819E-5	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999893097538548	WITHOUT_CLASSIFICATION	1.0690246145103819E-5	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999898344873219	WITHOUT_CLASSIFICATION	1.0165512678131312E-5	IMPLEMENTATION
// at end	WITHOUT_CLASSIFICATION	0.999961121297348	WITHOUT_CLASSIFICATION	3.887870265192268E-5	IMPLEMENTATION
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999891310188753	WITHOUT_CLASSIFICATION	1.0868981124590996E-5	IMPLEMENTATION
// save blocking state	WITHOUT_CLASSIFICATION	0.9999827684172867	WITHOUT_CLASSIFICATION	1.7231582713205452E-5	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999520044421932	WITHOUT_CLASSIFICATION	4.799555780678315E-5	IMPLEMENTATION
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999837094857505	WITHOUT_CLASSIFICATION	1.629051424949207E-5	IMPLEMENTATION
// fall back on empty env when security disallows environment var access (like in an applet)	WITHOUT_CLASSIFICATION	0.9999963822040224	WITHOUT_CLASSIFICATION	3.617795977559902E-6	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999458371282413	WITHOUT_CLASSIFICATION	5.416287175879015E-5	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999458371282413	WITHOUT_CLASSIFICATION	5.416287175879015E-5	IMPLEMENTATION
// load null block	WITHOUT_CLASSIFICATION	0.999577475696512	WITHOUT_CLASSIFICATION	4.225243034880164E-4	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999989660851855	WITHOUT_CLASSIFICATION	1.0339148145795896E-6	IMPLEMENTATION
// nothing else to here - the module version will be // included in the class.	WITHOUT_CLASSIFICATION	0.9999994775670648	WITHOUT_CLASSIFICATION	5.224329353692443E-7	IMPLEMENTATION
// JRUBY-1000, fail early when attempting to subclass a final Java class; // solved here by adding an exception-throwing "inherited"	WITHOUT_CLASSIFICATION	0.9999901073083283	WITHOUT_CLASSIFICATION	9.892691671765228E-6	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9992639059054615	WITHOUT_CLASSIFICATION	7.360940945383761E-4	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9992639059054615	WITHOUT_CLASSIFICATION	7.360940945383761E-4	IMPLEMENTATION
// Translate ret = (a || b) to ret = (a ? true : b) as follows //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = true //    beq(v1, true, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999909350952499	WITHOUT_CLASSIFICATION	9.06490475002573E-6	IMPLEMENTATION
// Initial precision is that of double numbers 2^63/2 ~ 4E18 // 63-1 an even number of number bits // precision seems 16 to 18 digits	WITHOUT_CLASSIFICATION	0.9999996643215839	WITHOUT_CLASSIFICATION	3.3567841609235446E-7	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9987565990465347	WITHOUT_CLASSIFICATION	0.0012434009534652826	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999709824961172	WITHOUT_CLASSIFICATION	2.9017503882815074E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999709824961172	WITHOUT_CLASSIFICATION	2.9017503882815074E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999709824961172	WITHOUT_CLASSIFICATION	2.9017503882815074E-5	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.9996800779621198	WITHOUT_CLASSIFICATION	3.1992203788032365E-4	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.9998692751826649	WITHOUT_CLASSIFICATION	1.307248173350554E-4	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.9998692751826649	WITHOUT_CLASSIFICATION	1.307248173350554E-4	IMPLEMENTATION
// check arity	WITHOUT_CLASSIFICATION	0.9993111358737338	WITHOUT_CLASSIFICATION	6.888641262662126E-4	IMPLEMENTATION
// check arity	WITHOUT_CLASSIFICATION	0.9993111358737338	WITHOUT_CLASSIFICATION	6.888641262662126E-4	IMPLEMENTATION
// create the class	WITHOUT_CLASSIFICATION	0.9998305634593088	WITHOUT_CLASSIFICATION	1.6943654069121803E-4	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999919915197277	WITHOUT_CLASSIFICATION	8.008480272270636E-6	IMPLEMENTATION
// No hex value after the 'x'.	WITHOUT_CLASSIFICATION	0.9999945302174664	WITHOUT_CLASSIFICATION	5.469782533621119E-6	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.9999914754825183	WITHOUT_CLASSIFICATION	8.524517481776458E-6	IMPLEMENTATION
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999883188349251	WITHOUT_CLASSIFICATION	1.1681165074982326E-5	IMPLEMENTATION
// Let m be the exact digits precision in an earlier! loop	WITHOUT_CLASSIFICATION	0.9999987958976081	WITHOUT_CLASSIFICATION	1.2041023919283512E-6	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999980738510094	WITHOUT_CLASSIFICATION	1.9261489906581612E-6	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999899313378572	WITHOUT_CLASSIFICATION	1.0068662142806485E-5	IMPLEMENTATION
// Label for the start of the method // Label for the end of the method	WITHOUT_CLASSIFICATION	0.9998752858689958	WITHOUT_CLASSIFICATION	1.2471413100430338E-4	IMPLEMENTATION
// comparisons & checks // checks if the operand is non-null and non-false // EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...	WITHOUT_CLASSIFICATION	0.9999999865624386	WITHOUT_CLASSIFICATION	1.3437561346865863E-8	IMPLEMENTATION
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.8482675103362998	WITHOUT_CLASSIFICATION	0.15173248966370015	IMPLEMENTATION
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9997769522722938	WITHOUT_CLASSIFICATION	2.230477277061734E-4	IMPLEMENTATION
// all done with lookup attempts, release monitor	WITHOUT_CLASSIFICATION	0.9998753130700537	WITHOUT_CLASSIFICATION	1.2468692994631038E-4	IMPLEMENTATION
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999981821060026	WITHOUT_CLASSIFICATION	1.817893997451162E-6	IMPLEMENTATION
// Create list of interface names to proxy (and make sure they really are interfaces) // Also build a hashcode from all classes to use for retrieving previously-created impl	WITHOUT_CLASSIFICATION	0.9999999220817053	WITHOUT_CLASSIFICATION	7.791829471167128E-8	IMPLEMENTATION
// Construct local variables based on parameter names passed in	WITHOUT_CLASSIFICATION	0.9999866358133624	WITHOUT_CLASSIFICATION	1.3364186637485954E-5	IMPLEMENTATION
// Value of "TZ" property is of a bit different format, // which confuses the Java's TimeZone.getTimeZone(id) method, // and so, we need to convert it.	WITHOUT_CLASSIFICATION	0.9996982449147261	WITHOUT_CLASSIFICATION	3.0175508527385743E-4	IMPLEMENTATION
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.99965277372866	WITHOUT_CLASSIFICATION	3.472262713399697E-4	IMPLEMENTATION
// ensure the object is associated with the wrapper we found it in, // so that if it comes back we don't re-wrap it	WITHOUT_CLASSIFICATION	0.9999940537441241	WITHOUT_CLASSIFICATION	5.9462558758688486E-6	IMPLEMENTATION
// return sqrt(squarD) with precision of rootMC	WITHOUT_CLASSIFICATION	0.9999651089630074	WITHOUT_CLASSIFICATION	3.48910369926241E-5	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.996057852535297	WITHOUT_CLASSIFICATION	0.003942147464702991	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9999709824961172	WITHOUT_CLASSIFICATION	2.9017503882815074E-5	IMPLEMENTATION
// Get a new label using the provided label prefix	WITHOUT_CLASSIFICATION	0.999989835024134	WITHOUT_CLASSIFICATION	1.0164975865935499E-5	IMPLEMENTATION
// normal exit, perform finally and return	WITHOUT_CLASSIFICATION	0.9999496370404768	WITHOUT_CLASSIFICATION	5.036295952324265E-5	IMPLEMENTATION
// coerce arguments	WITHOUT_CLASSIFICATION	0.9997195519650526	WITHOUT_CLASSIFICATION	2.804480349475195E-4	IMPLEMENTATION
// 0.0 is ok // float range // inverted float range? // NaN // +infinity // -infinity	WITHOUT_CLASSIFICATION	0.9998436094421355	WITHOUT_CLASSIFICATION	1.5639055786449712E-4	IMPLEMENTATION
/* expected */	WITHOUT_CLASSIFICATION	0.9999552057427821	WITHOUT_CLASSIFICATION	4.479425721784309E-5	IMPLEMENTATION
// set this class's method names in var @__java_ovrd_methods if this // is the new class; otherwise, get method names from there if this is // a proxy superclass.	WITHOUT_CLASSIFICATION	0.999999510521663	WITHOUT_CLASSIFICATION	4.894783369858282E-7	IMPLEMENTATION
/* ignore backslashed spaces in %w */	WITHOUT_CLASSIFICATION	0.9999978423236298	WITHOUT_CLASSIFICATION	2.157676370222064E-6	IMPLEMENTATION
// Invert the sign, since TZ format and Java format // use opposite signs, sigh... Also, Java API requires // the sign to be always present, be it "+" or "-".	WITHOUT_CLASSIFICATION	0.9999682704723635	WITHOUT_CLASSIFICATION	3.172952763645126E-5	IMPLEMENTATION
// no binding given, use 0 for both	WITHOUT_CLASSIFICATION	0.9999468093825007	WITHOUT_CLASSIFICATION	5.3190617499303444E-5	IMPLEMENTATION
// <=> may return nil in many circumstances, e.g. 3 <=> NaN        	WITHOUT_CLASSIFICATION	0.9999904357677841	WITHOUT_CLASSIFICATION	9.56423221597377E-6	IMPLEMENTATION
// use numbered access method	WITHOUT_CLASSIFICATION	0.9995143070965048	WITHOUT_CLASSIFICATION	4.856929034951767E-4	IMPLEMENTATION
// Always use "GMT" since that's required by Java API.	WITHOUT_CLASSIFICATION	0.9999652539492093	WITHOUT_CLASSIFICATION	3.4746050790724907E-5	IMPLEMENTATION
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9998339469141378	WITHOUT_CLASSIFICATION	1.6605308586216296E-4	IMPLEMENTATION
// The dataStruct is a place where custom information can be // contained for core implementations that doesn't necessarily // want to go to the trouble of creating a subclass of // RubyObject. The OpenSSL implementation uses this heavily to // save holder objects containing Java cryptography objects. // Java integration uses this to store the Java object ref. //protected transient Object dataStruct;	WITHOUT_CLASSIFICATION	0.9998944991760994	WITHOUT_CLASSIFICATION	1.0550082390054953E-4	IMPLEMENTATION
// Remaining arguments are for the script itself	WITHOUT_CLASSIFICATION	0.9999952118219085	WITHOUT_CLASSIFICATION	4.788178091471716E-6	IMPLEMENTATION
// arg grouping, use slower arg walking logic	WITHOUT_CLASSIFICATION	0.997984125300245	WITHOUT_CLASSIFICATION	0.002015874699754981	IMPLEMENTATION
// build scope names string	WITHOUT_CLASSIFICATION	0.9999986241136222	WITHOUT_CLASSIFICATION	1.375886377856572E-6	IMPLEMENTATION
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999995826451635	WITHOUT_CLASSIFICATION	4.1735483638792185E-7	IMPLEMENTATION
// Here we create an "anonymous" exception type used for unrolling the stack. // MRI creates a new one for *every call* to timeout, which can be costly. // We opt to use a single exception type for all cases to avoid this overhead.	WITHOUT_CLASSIFICATION	0.9999400896420374	WITHOUT_CLASSIFICATION	5.991035796265469E-5	IMPLEMENTATION
// finally	WITHOUT_CLASSIFICATION	0.9999923026918223	WITHOUT_CLASSIFICATION	7.697308177771416E-6	IMPLEMENTATION
// MRI behavior: With TZ equal to "GMT" or "UTC", Time.now // is *NOT* considered as a proper GMT/UTC time: //   ENV['TZ']="GMT" //   Time.now.gmt? ==> false //   ENV['TZ']="UTC" //   Time.now.utc? ==> false // Hence, we need to adjust for that.	WITHOUT_CLASSIFICATION	0.9999987920197526	WITHOUT_CLASSIFICATION	1.2079802473860566E-6	IMPLEMENTATION
// ?l  | boolean | True if file1 exists and is a symbolic link	WITHOUT_CLASSIFICATION	0.9999992668201444	WITHOUT_CLASSIFICATION	7.331798555842504E-7	IMPLEMENTATION
// This try/catch is to allow failing over to the "commands" logic // when running from within a jruby-complete jar file, which has // jruby.home = a jar file URL that does not resolve correctly with // JRubyFile.create.	WITHOUT_CLASSIFICATION	0.9994677488862961	WITHOUT_CLASSIFICATION	5.322511137038991E-4	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9991647124973346	WITHOUT_CLASSIFICATION	8.35287502665406E-4	IMPLEMENTATION
// specific arity	WITHOUT_CLASSIFICATION	0.9992157758878035	WITHOUT_CLASSIFICATION	7.842241121965375E-4	IMPLEMENTATION
// In the case of two arguments, MRI will discard the portion of // the first argument after a decimal point (i.e., "floor"). // However in the case of a single argument, any portion after // the decimal point is honored.	WITHOUT_CLASSIFICATION	0.9999998940468681	WITHOUT_CLASSIFICATION	1.0595313189335082E-7	IMPLEMENTATION
// ?w  | boolean | True if file1 exists and is writable by effective uid/gid	WITHOUT_CLASSIFICATION	0.9999994299589728	WITHOUT_CLASSIFICATION	5.700410271832167E-7	IMPLEMENTATION
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999012238864379	WITHOUT_CLASSIFICATION	9.877611356210128E-5	IMPLEMENTATION
/*    @JRubyMethod    public IRubyObject to_proc() {        return RubyProc.newProc(getRuntime(),                                CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()),                                Block.Type.PROC);    }    */	WITHOUT_CLASSIFICATION	0.9999945362021742	WITHOUT_CLASSIFICATION	5.463797825794112E-6	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.999951526930823	WITHOUT_CLASSIFICATION	4.847306917691069E-5	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.999951526930823	WITHOUT_CLASSIFICATION	4.847306917691069E-5	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999765885960838	WITHOUT_CLASSIFICATION	2.341140391616352E-5	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999765885960838	WITHOUT_CLASSIFICATION	2.341140391616352E-5	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9984786648528063	WITHOUT_CLASSIFICATION	0.0015213351471937422	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9984786648528063	WITHOUT_CLASSIFICATION	0.0015213351471937422	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999972793471795	WITHOUT_CLASSIFICATION	2.7206528205613766E-6	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999972793471795	WITHOUT_CLASSIFICATION	2.7206528205613766E-6	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9996200707317198	WITHOUT_CLASSIFICATION	3.7992926828032465E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9996200707317198	WITHOUT_CLASSIFICATION	3.7992926828032465E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9996200707317198	WITHOUT_CLASSIFICATION	3.7992926828032465E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9996200707317198	WITHOUT_CLASSIFICATION	3.7992926828032465E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9996200707317198	WITHOUT_CLASSIFICATION	3.7992926828032465E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9996200707317198	WITHOUT_CLASSIFICATION	3.7992926828032465E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9996200707317198	WITHOUT_CLASSIFICATION	3.7992926828032465E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9996200707317198	WITHOUT_CLASSIFICATION	3.7992926828032465E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9996200707317198	WITHOUT_CLASSIFICATION	3.7992926828032465E-4	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999231456518438	WITHOUT_CLASSIFICATION	7.68543481561999E-5	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999231456518438	WITHOUT_CLASSIFICATION	7.68543481561999E-5	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999231456518438	WITHOUT_CLASSIFICATION	7.68543481561999E-5	IMPLEMENTATION
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9998982090550235	WITHOUT_CLASSIFICATION	1.0179094497660283E-4	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999975756351955	WITHOUT_CLASSIFICATION	2.4243648043345444E-6	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999975756351955	WITHOUT_CLASSIFICATION	2.4243648043345444E-6	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999975756351955	WITHOUT_CLASSIFICATION	2.4243648043345444E-6	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999103759648411	WITHOUT_CLASSIFICATION	8.962403515886887E-5	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999103759648411	WITHOUT_CLASSIFICATION	8.962403515886887E-5	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999103759648411	WITHOUT_CLASSIFICATION	8.962403515886887E-5	IMPLEMENTATION
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999012238864379	WITHOUT_CLASSIFICATION	9.877611356210128E-5	IMPLEMENTATION
// backspace	WITHOUT_CLASSIFICATION	0.999620336136068	WITHOUT_CLASSIFICATION	3.796638639319118E-4	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
/* package-private */	WITHOUT_CLASSIFICATION	0.9999883398845159	WITHOUT_CLASSIFICATION	1.1660115484100078E-5	IMPLEMENTATION
// fall through	WITHOUT_CLASSIFICATION	0.999872300711969	WITHOUT_CLASSIFICATION	1.2769928803092742E-4	IMPLEMENTATION
// fall through	WITHOUT_CLASSIFICATION	0.999872300711969	WITHOUT_CLASSIFICATION	1.2769928803092742E-4	IMPLEMENTATION
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9998980669013433	WITHOUT_CLASSIFICATION	1.0193309865661558E-4	IMPLEMENTATION
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999929135538258	WITHOUT_CLASSIFICATION	7.086446174232893E-6	IMPLEMENTATION
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999929135538258	WITHOUT_CLASSIFICATION	7.086446174232893E-6	IMPLEMENTATION
/**      * Nested class whose instances act as thunks reacting to to_str method     * called from (Exception#to_str, Exception#message)     * MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!",     * to_str implementation: "name_err_mesg_to_str"     *     * TODO: this class should not be lookupable     */	WITHOUT_CLASSIFICATION	0.9484326827744939	IMPLEMENTATION	0.051567317225506	WITHOUT_CLASSIFICATION
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9996627390289491	WITHOUT_CLASSIFICATION	3.372609710509068E-4	IMPLEMENTATION
// The name of this source (e.g. a filename: foo.rb)	WITHOUT_CLASSIFICATION	0.9999741045436495	WITHOUT_CLASSIFICATION	2.589545635042565E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.999971865954122	WITHOUT_CLASSIFICATION	2.8134045877943146E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.999971865954122	WITHOUT_CLASSIFICATION	2.8134045877943146E-5	IMPLEMENTATION
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9999999285917666	WITHOUT_CLASSIFICATION	7.14082334666863E-8	IMPLEMENTATION
// We yield here to hopefully permit the target thread to schedule // MRI immediately schedules it, so this is close but not exact	WITHOUT_CLASSIFICATION	0.9999884467889135	WITHOUT_CLASSIFICATION	1.1553211086381917E-5	IMPLEMENTATION
// note that addMethod now does its own put, so any change made to // functionality here should be made there as well 	WITHOUT_CLASSIFICATION	0.9999999547428418	WITHOUT_CLASSIFICATION	4.525715831871697E-8	IMPLEMENTATION
/* Currently dead code, but useful when we figure out how to actually perform translit.    private static boolean isTranslit(String encoding) {        return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false;    }*/	WITHOUT_CLASSIFICATION	0.992325257298179	WITHOUT_CLASSIFICATION	0.007674742701821074	IMPLEMENTATION
// empirically it appears that to_ary coersions always return array or nil, so this // should always be an array by now.	WITHOUT_CLASSIFICATION	0.9999830224871179	WITHOUT_CLASSIFICATION	1.6977512882131168E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.999971865954122	WITHOUT_CLASSIFICATION	2.8134045877943146E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.999971865954122	WITHOUT_CLASSIFICATION	2.8134045877943146E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.999971865954122	WITHOUT_CLASSIFICATION	2.8134045877943146E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.999971865954122	WITHOUT_CLASSIFICATION	2.8134045877943146E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.999971865954122	WITHOUT_CLASSIFICATION	2.8134045877943146E-5	IMPLEMENTATION
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999939516302951	WITHOUT_CLASSIFICATION	6.048369704905588E-6	IMPLEMENTATION
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9998095027280021	WITHOUT_CLASSIFICATION	1.90497271998036E-4	IMPLEMENTATION
// if it's an inner class and it's not public, we can't access it; // skip population of declared elements	WITHOUT_CLASSIFICATION	0.9999862954502199	WITHOUT_CLASSIFICATION	1.370454977996932E-5	IMPLEMENTATION
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999440997890414	WITHOUT_CLASSIFICATION	5.590021095859849E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9845289743095197	WITHOUT_CLASSIFICATION	0.015471025690480252	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9845289743095197	WITHOUT_CLASSIFICATION	0.015471025690480252	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9845289743095197	WITHOUT_CLASSIFICATION	0.015471025690480252	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9845289743095197	WITHOUT_CLASSIFICATION	0.015471025690480252	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9845289743095197	WITHOUT_CLASSIFICATION	0.015471025690480252	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9845289743095197	WITHOUT_CLASSIFICATION	0.015471025690480252	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9845289743095197	WITHOUT_CLASSIFICATION	0.015471025690480252	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9845289743095197	WITHOUT_CLASSIFICATION	0.015471025690480252	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9845289743095197	WITHOUT_CLASSIFICATION	0.015471025690480252	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9845289743095197	WITHOUT_CLASSIFICATION	0.015471025690480252	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9845289743095197	WITHOUT_CLASSIFICATION	0.015471025690480252	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9845289743095197	WITHOUT_CLASSIFICATION	0.015471025690480252	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9845289743095197	WITHOUT_CLASSIFICATION	0.015471025690480252	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9845289743095197	WITHOUT_CLASSIFICATION	0.015471025690480252	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9845289743095197	WITHOUT_CLASSIFICATION	0.015471025690480252	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9845289743095197	WITHOUT_CLASSIFICATION	0.015471025690480252	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9845289743095197	WITHOUT_CLASSIFICATION	0.015471025690480252	IMPLEMENTATION
// MRI behavior on Windows: it treats '/' as a root of // a current drive (but only if SINGLE slash is present!): // E.g., if current work directory is // 'D:/home/directory', then '/' means 'D:/'. // // Basically, '/path' is treated as a *RELATIVE* path, // relative to the current drive. '//path' is treated // as absolute one.	WITHOUT_CLASSIFICATION	0.9999999865931744	WITHOUT_CLASSIFICATION	1.3406825525796752E-8	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9845289743095197	WITHOUT_CLASSIFICATION	0.015471025690480252	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9845289743095197	WITHOUT_CLASSIFICATION	0.015471025690480252	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9845289743095197	WITHOUT_CLASSIFICATION	0.015471025690480252	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9845289743095197	WITHOUT_CLASSIFICATION	0.015471025690480252	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9845289743095197	WITHOUT_CLASSIFICATION	0.015471025690480252	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9845289743095197	WITHOUT_CLASSIFICATION	0.015471025690480252	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9845289743095197	WITHOUT_CLASSIFICATION	0.015471025690480252	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9845289743095197	WITHOUT_CLASSIFICATION	0.015471025690480252	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9845289743095197	WITHOUT_CLASSIFICATION	0.015471025690480252	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9845289743095197	WITHOUT_CLASSIFICATION	0.015471025690480252	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9845289743095197	WITHOUT_CLASSIFICATION	0.015471025690480252	IMPLEMENTATION
// This is needed when the enclosing class or module is a singleton. // In that case, we generated a name such as null::Foo, which broke  // Marshalling, among others. The correct thing to do in this situation  // is to insert the generate the name of form #<Class:01xasdfasd> if  // it's a singleton module/class, which this code accomplishes.	WITHOUT_CLASSIFICATION	0.9997306252188496	WITHOUT_CLASSIFICATION	2.6937478115050573E-4	IMPLEMENTATION
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9999564461429583	WITHOUT_CLASSIFICATION	4.355385704164968E-5	IMPLEMENTATION
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999879039833535	WITHOUT_CLASSIFICATION	1.2096016646526541E-5	IMPLEMENTATION
// get "self"	WITHOUT_CLASSIFICATION	0.9997613947286219	WITHOUT_CLASSIFICATION	2.3860527137807593E-4	IMPLEMENTATION
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999936902624675	WITHOUT_CLASSIFICATION	6.309737532508019E-6	IMPLEMENTATION
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.999750467904337	WITHOUT_CLASSIFICATION	2.495320956630182E-4	IMPLEMENTATION
// only public methods	WITHOUT_CLASSIFICATION	0.9999900581503612	WITHOUT_CLASSIFICATION	9.941849638798628E-6	IMPLEMENTATION
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999741409247757	WITHOUT_CLASSIFICATION	2.585907522430812E-5	IMPLEMENTATION
// First try to use drive letter from supplied dir value, // then try current work dir.	WITHOUT_CLASSIFICATION	0.9999522393568363	WITHOUT_CLASSIFICATION	4.776064316374145E-5	IMPLEMENTATION
// JRUBY-2435: Aliasing eval and other "special" methods should display a warning // We warn because we treat certain method names as "special" for purposes of // optimization. Hopefully this will be enough to convince people not to alias // them.	WITHOUT_CLASSIFICATION	0.9999164610417192	WITHOUT_CLASSIFICATION	8.353895828078324E-5	IMPLEMENTATION
// generate a real method signature for the method, with to/from coercions	WITHOUT_CLASSIFICATION	0.9999430054688887	WITHOUT_CLASSIFICATION	5.699453111139716E-5	IMPLEMENTATION
// block argument to the method // closure present // class present // method table mutations, def, defs, undef, alias // likely call to eval // makes calls that are aware of the frame // makes calls that are aware of the frame's self // makes calls that are aware of the frame's visibility // makes calls that are aware of the frame's block // makes calls that are aware of the frame's name // makes calls that set or get backref // makes calls that set or get lastline // makes calls that are aware of the frame's class // optional arguments to the method // rest arg to the method // makes calls that are aware of the scope // makes a zero-argument super call // accesses or sets constants // accesses or sets class variables // makes normal super call // contains a retry	WITHOUT_CLASSIFICATION	0.9999479990782043	WITHOUT_CLASSIFICATION	5.200092179574343E-5	IMPLEMENTATION
// // Add aliases in Type::*, NativeType::* and FFI::TYPE_* //	WITHOUT_CLASSIFICATION	0.9999885522718995	WITHOUT_CLASSIFICATION	1.1447728100454786E-5	IMPLEMENTATION
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999967309262878	WITHOUT_CLASSIFICATION	3.2690737122354384E-6	IMPLEMENTATION
// double-testing args.length here, but it avoids duplicating the proc-setup code in two places	WITHOUT_CLASSIFICATION	0.9999971727380236	WITHOUT_CLASSIFICATION	2.8272619763106766E-6	IMPLEMENTATION
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999992737838042	WITHOUT_CLASSIFICATION	7.262161959017206E-7	IMPLEMENTATION
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999948713434074	WITHOUT_CLASSIFICATION	5.128656592611332E-6	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999490211626383	WITHOUT_CLASSIFICATION	5.097883736183236E-5	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999490211626383	WITHOUT_CLASSIFICATION	5.097883736183236E-5	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999490211626383	WITHOUT_CLASSIFICATION	5.097883736183236E-5	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999490211626383	WITHOUT_CLASSIFICATION	5.097883736183236E-5	IMPLEMENTATION
// snapshot of contents of directory // current position in directory	WITHOUT_CLASSIFICATION	0.9999998232082631	WITHOUT_CLASSIFICATION	1.7679173690592377E-7	IMPLEMENTATION
// Exclusive locks in Java require the channel to be writable, otherwise // an exception is thrown (terminating JRuby execution). // But flock behavior of MRI is that it allows // exclusive locks even on non-writable file. So we convert exclusive // lock to shared lock if the channel is not writable, to better match // the MRI behavior.	WITHOUT_CLASSIFICATION	0.9521646583213051	WITHOUT_CLASSIFICATION	0.04783534167869483	IMPLEMENTATION
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.999833228990449	WITHOUT_CLASSIFICATION	1.6677100955098567E-4	IMPLEMENTATION
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.999833228990449	WITHOUT_CLASSIFICATION	1.6677100955098567E-4	IMPLEMENTATION
// set self to the class	WITHOUT_CLASSIFICATION	0.9999819512762388	WITHOUT_CLASSIFICATION	1.8048723761209084E-5	IMPLEMENTATION
/* ---------- Public fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999807165815641	WITHOUT_CLASSIFICATION	1.928341843596297E-5	IMPLEMENTATION
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999958472091312	WITHOUT_CLASSIFICATION	4.152790868845916E-6	IMPLEMENTATION
// zero args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999940130834012	WITHOUT_CLASSIFICATION	5.986916598820317E-6	IMPLEMENTATION
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999966615409153	WITHOUT_CLASSIFICATION	3.3384590847849773E-6	IMPLEMENTATION
// Store each line into this list if not null.	WITHOUT_CLASSIFICATION	0.9992863924720838	WITHOUT_CLASSIFICATION	7.13607527916178E-4	IMPLEMENTATION
// Portion of line right after beginning marker	WITHOUT_CLASSIFICATION	0.9999432226767956	WITHOUT_CLASSIFICATION	5.677732320452026E-5	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999527037429763	WITHOUT_CLASSIFICATION	4.7296257023644E-5	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999527037429763	WITHOUT_CLASSIFICATION	4.7296257023644E-5	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999527037429763	WITHOUT_CLASSIFICATION	4.7296257023644E-5	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999527037429763	WITHOUT_CLASSIFICATION	4.7296257023644E-5	IMPLEMENTATION
// If an IO exception occurs (something odd, but possible) // A directory may return null.	WITHOUT_CLASSIFICATION	0.9999995030255966	WITHOUT_CLASSIFICATION	4.969744034912637E-7	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999999085960548	WITHOUT_CLASSIFICATION	9.140394520604253E-8	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999999085960548	WITHOUT_CLASSIFICATION	9.140394520604253E-8	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999999085960548	WITHOUT_CLASSIFICATION	9.140394520604253E-8	IMPLEMENTATION
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9995303663364702	WITHOUT_CLASSIFICATION	4.696336635298952E-4	IMPLEMENTATION
// finally with no exception	WITHOUT_CLASSIFICATION	0.9999406294143491	WITHOUT_CLASSIFICATION	5.9370585650827377E-5	IMPLEMENTATION
// Now, for all variables used by 'i' mark them live before 'i'	WITHOUT_CLASSIFICATION	0.9999936295145926	WITHOUT_CLASSIFICATION	6.370485407499491E-6	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.8930598805782629	IMPLEMENTATION	0.10694011942173715	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.8930598805782629	IMPLEMENTATION	0.10694011942173715	WITHOUT_CLASSIFICATION
/* The counting of slashes that follows is simply a way to adhere to          * Ruby's UNC (or something) compatibility. When Ruby's expand_path is          * called with "//foo//bar" it will return "//foo/bar". JRuby uses          * java.io.File, and hence returns "/foo/bar". In order to retain          * java.io.File in the lower layers and provide full Ruby          * compatibility, the number of extra slashes must be counted and          * prepended to the result.         */	WITHOUT_CLASSIFICATION	0.9999995364795129	WITHOUT_CLASSIFICATION	4.6352048711692763E-7	IMPLEMENTATION
// This is almost always already interned, since it will be called with a symbol in most cases // but when created from Java code, we might get an argument that needs to be interned. // addAccessor has as a precondition that the string MUST be interned	WITHOUT_CLASSIFICATION	0.9999999999985086	WITHOUT_CLASSIFICATION	1.4913147313998513E-12	IMPLEMENTATION
/* not a class */	WITHOUT_CLASSIFICATION	0.9993862075728865	WITHOUT_CLASSIFICATION	6.137924271133906E-4	IMPLEMENTATION
/* not a class */	WITHOUT_CLASSIFICATION	0.9993862075728865	WITHOUT_CLASSIFICATION	6.137924271133906E-4	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9998950540802483	WITHOUT_CLASSIFICATION	1.0494591975169496E-4	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9998950540802483	WITHOUT_CLASSIFICATION	1.0494591975169496E-4	IMPLEMENTATION
// io.available() only returns 0 after EOF is encountered // so we need to differentiate between the empty string and EOF	WITHOUT_CLASSIFICATION	0.9999999781460643	WITHOUT_CLASSIFICATION	2.185393570246992E-8	IMPLEMENTATION
// In the current logic, if we get here we know that module is not an // IncludedModuleWrapper, so there's no need to fish out the delegate. But just // in case the logic should change later, let's do it anyway	WITHOUT_CLASSIFICATION	0.999225670929406	WITHOUT_CLASSIFICATION	7.743290705939926E-4	IMPLEMENTATION
// rb_iterate((VALUE(*)_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);	WITHOUT_CLASSIFICATION	0.9999004402456029	WITHOUT_CLASSIFICATION	9.955975439703077E-5	IMPLEMENTATION
// Broken symlinks considered by exists() as non-existing, // so we need to check for symlinks explicitly.	WITHOUT_CLASSIFICATION	0.9999868539850915	WITHOUT_CLASSIFICATION	1.314601490864443E-5	IMPLEMENTATION
// ////////////////// CONSTANT API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999352135425293	WITHOUT_CLASSIFICATION	6.47864574707012E-5	IMPLEMENTATION
// create the default thread group	WITHOUT_CLASSIFICATION	0.9999517348690738	WITHOUT_CLASSIFICATION	4.826513092607827E-5	IMPLEMENTATION
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999016207160139	WITHOUT_CLASSIFICATION	9.837928398616209E-5	IMPLEMENTATION
/* ============================     * Here are hash internals     * (This could be extracted to a separate class but it's not too large though)     * ============================     */	WITHOUT_CLASSIFICATION	0.9999991720727492	WITHOUT_CLASSIFICATION	8.279272507128678E-7	IMPLEMENTATION
// ////////////////// LOW-LEVEL CLASS VARIABLE INTERFACE //////////////// // // fetch/store/list class variables for this module //	WITHOUT_CLASSIFICATION	0.9999687214023057	WITHOUT_CLASSIFICATION	3.127859769420358E-5	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.999983061929837	WITHOUT_CLASSIFICATION	1.6938070163025627E-5	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.999983061929837	WITHOUT_CLASSIFICATION	1.6938070163025627E-5	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999967831222711	WITHOUT_CLASSIFICATION	3.216877729012104E-6	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999967831222711	WITHOUT_CLASSIFICATION	3.216877729012104E-6	IMPLEMENTATION
// retuns null when not found to avoid unnecessary getRuntime().getNil() call	WITHOUT_CLASSIFICATION	0.995191499705135	WITHOUT_CLASSIFICATION	0.00480850029486496	IMPLEMENTATION
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999893296709785	WITHOUT_CLASSIFICATION	1.067032902143863E-5	IMPLEMENTATION
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.999930388944247	WITHOUT_CLASSIFICATION	6.961105575302719E-5	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9996828848038328	WITHOUT_CLASSIFICATION	3.1711519616724383E-4	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9996828848038328	WITHOUT_CLASSIFICATION	3.1711519616724383E-4	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9996828848038328	WITHOUT_CLASSIFICATION	3.1711519616724383E-4	IMPLEMENTATION
// line 286	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 476	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 513	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 530	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 533	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 537	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 551	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// end loop	WITHOUT_CLASSIFICATION	0.9992643199877836	WITHOUT_CLASSIFICATION	7.356800122163711E-4	IMPLEMENTATION
// MRI behavior: we don't print errno for actual Errno errors	WITHOUT_CLASSIFICATION	0.9999246526884311	WITHOUT_CLASSIFICATION	7.534731156889992E-5	IMPLEMENTATION
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9992015881774863	WITHOUT_CLASSIFICATION	7.984118225138428E-4	IMPLEMENTATION
// Traverse the instructions in this basic block in reverse order! // Mark as dead all instructions whose results are not used! 	WITHOUT_CLASSIFICATION	0.9998864837552963	WITHOUT_CLASSIFICATION	1.1351624470370396E-4	IMPLEMENTATION
// // fields should really be an immutable map as it is never modified after construction //	WITHOUT_CLASSIFICATION	0.9999553305735293	WITHOUT_CLASSIFICATION	4.466942647069713E-5	IMPLEMENTATION
// load self object as IRubyObject, for recv param	WITHOUT_CLASSIFICATION	0.999997006741264	WITHOUT_CLASSIFICATION	2.9932587360471124E-6	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.8930598805782629	IMPLEMENTATION	0.10694011942173715	WITHOUT_CLASSIFICATION
// If we define a class in Ruby, but later want to allow it to be defined in Java, // the allocator needs to be updated	WITHOUT_CLASSIFICATION	0.99994017897757	WITHOUT_CLASSIFICATION	5.982102242992734E-5	IMPLEMENTATION
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9996321516419233	WITHOUT_CLASSIFICATION	3.6784835807667155E-4	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9998545929716477	WITHOUT_CLASSIFICATION	1.4540702835231264E-4	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999709824961172	WITHOUT_CLASSIFICATION	2.9017503882815074E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999709824961172	WITHOUT_CLASSIFICATION	2.9017503882815074E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999709824961172	WITHOUT_CLASSIFICATION	2.9017503882815074E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999709824961172	WITHOUT_CLASSIFICATION	2.9017503882815074E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999709824961172	WITHOUT_CLASSIFICATION	2.9017503882815074E-5	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9987078724015366	WITHOUT_CLASSIFICATION	0.0012921275984634105	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999709824961172	WITHOUT_CLASSIFICATION	2.9017503882815074E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999709824961172	WITHOUT_CLASSIFICATION	2.9017503882815074E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999709824961172	WITHOUT_CLASSIFICATION	2.9017503882815074E-5	IMPLEMENTATION
// MRI has extra pointer which makes our code look a little bit // more strange in // comparison	WITHOUT_CLASSIFICATION	0.9999913651800606	WITHOUT_CLASSIFICATION	8.634819939500327E-6	IMPLEMENTATION
// Tempory buffer to build up a potential token.  Consumer takes responsibility to reset  // this before use.	WITHOUT_CLASSIFICATION	0.9999385514396867	WITHOUT_CLASSIFICATION	6.144856031337258E-5	IMPLEMENTATION
//tmpPosition is required because getPosition()'s side effects. //if the warning is generated, the getPosition() on line 954 (this line + 18) will create //a wrong position if the "inclusive" flag is not set.	WITHOUT_CLASSIFICATION	0.9991638039005	WITHOUT_CLASSIFICATION	8.361960995000121E-4	IMPLEMENTATION
/* What is \v in C?                    case '\v':                        c2 = 'v';                        break;                        */	WITHOUT_CLASSIFICATION	0.9999878366464517	WITHOUT_CLASSIFICATION	1.2163353548205152E-5	IMPLEMENTATION
/* Consider Thread aspects of this */	WITHOUT_CLASSIFICATION	0.999979204654198	WITHOUT_CLASSIFICATION	2.0795345802063447E-5	IMPLEMENTATION
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999998375350924	WITHOUT_CLASSIFICATION	1.6246490768568468E-7	IMPLEMENTATION
// An interrupt or timeout may have caused us to miss // a notify that we consumed, so do another notify in // case someone else is available to pick it up.	WITHOUT_CLASSIFICATION	0.9999483832916904	WITHOUT_CLASSIFICATION	5.16167083096115E-5	IMPLEMENTATION
// line 572	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 601	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 601	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 625	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 649	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 691	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 723	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 732	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 745	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 766	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 785	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 794	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 800	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 812	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 827	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 839	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 845	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 864	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 886	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 896	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 911	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 929	WITHOUT_CLASSIFICATION	0.9994922899591303	WITHOUT_CLASSIFICATION	5.077100408696208E-4	IMPLEMENTATION
// line 952	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 970	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 972	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 991	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1011	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1026	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1038	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1067	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1085	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1097	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1105	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1122	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1133	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1145	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1169	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1201	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1210	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1229	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1261	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1287	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1293	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1307	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1320	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1325	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1363	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1398	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1448	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1456	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1473	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1492	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1513	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1523	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1562	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1582	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1603	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1603	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1615	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1620	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1635	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1652	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1681	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1708	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1716	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1755	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1772	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1789	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9996200707317198	WITHOUT_CLASSIFICATION	3.7992926828032465E-4	IMPLEMENTATION
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9996200707317198	WITHOUT_CLASSIFICATION	3.7992926828032465E-4	IMPLEMENTATION
/* force for args */	WITHOUT_CLASSIFICATION	0.9999166152734343	WITHOUT_CLASSIFICATION	8.338472656564349E-5	IMPLEMENTATION
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9998064428293739	WITHOUT_CLASSIFICATION	1.9355717062601458E-4	IMPLEMENTATION
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9926178696329432	WITHOUT_CLASSIFICATION	0.007382130367056862	IMPLEMENTATION
// We can assign if we already have variable of that name here or we are the only // scope in the chain (which Local scopes always are).	WITHOUT_CLASSIFICATION	0.9999954920458782	WITHOUT_CLASSIFICATION	4.507954121782513E-6	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.999919914903576	WITHOUT_CLASSIFICATION	8.008509642398469E-5	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.999919914903576	WITHOUT_CLASSIFICATION	8.008509642398469E-5	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.999919914903576	WITHOUT_CLASSIFICATION	8.008509642398469E-5	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.999919914903576	WITHOUT_CLASSIFICATION	8.008509642398469E-5	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9605487950578147	WITHOUT_CLASSIFICATION	0.03945120494218537	IMPLEMENTATION
/*     * This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:)     * into individual whenNodes.  The primary reason for this is to ensure lazy evaluation of     * the arguments (when foo,bar,gar:) to prevent side-effects.  In the old code this was done     * using nested when statements, which was awful for interpreter and compilation.     *     * Notes: This has semantic equivalence but will not be lexically equivalent.  Compiler     * needs to detect same bodies to simplify bytecode generated.     */	WITHOUT_CLASSIFICATION	0.9999993246272973	WITHOUT_CLASSIFICATION	6.753727026588588E-7	IMPLEMENTATION
// line 313	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 339	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 361	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 413	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 451	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 472	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 500	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 515	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 555	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 582	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 619	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 636	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 669	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 703	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 776	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 814	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 823	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 854	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 872	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 905	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 925	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 958	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 992	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1047	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1072	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1081	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1108	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1136	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1168	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1192	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1241	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1267	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1286	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1301	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1314	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1333	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1362	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1395	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1420	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1439	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1476	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1535	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1588	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1618	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1643	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1669	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1728	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1753	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1779	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1794	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1812	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1837	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1895	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1925	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1950	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 1992	WITHOUT_CLASSIFICATION	0.9994832453910321	WITHOUT_CLASSIFICATION	5.167546089680056E-4	IMPLEMENTATION
// line 2014	WITHOUT_CLASSIFICATION	0.9994835740457195	WITHOUT_CLASSIFICATION	5.164259542804706E-4	IMPLEMENTATION
// Whether this scope is used as the "argument scope" for e.g. zsuper	WITHOUT_CLASSIFICATION	0.9999905472143121	WITHOUT_CLASSIFICATION	9.452785687875312E-6	IMPLEMENTATION
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9988939692426332	WITHOUT_CLASSIFICATION	0.001106030757366807	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999967270869261	WITHOUT_CLASSIFICATION	3.272913073891826E-6	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999967270869261	WITHOUT_CLASSIFICATION	3.272913073891826E-6	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999967270869261	WITHOUT_CLASSIFICATION	3.272913073891826E-6	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999967270869261	WITHOUT_CLASSIFICATION	3.272913073891826E-6	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999967270869261	WITHOUT_CLASSIFICATION	3.272913073891826E-6	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999967270869261	WITHOUT_CLASSIFICATION	3.272913073891826E-6	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999967270869261	WITHOUT_CLASSIFICATION	3.272913073891826E-6	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.999781712085301	WITHOUT_CLASSIFICATION	2.1828791469900985E-4	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.999781712085301	WITHOUT_CLASSIFICATION	2.1828791469900985E-4	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.999781712085301	WITHOUT_CLASSIFICATION	2.1828791469900985E-4	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.999781712085301	WITHOUT_CLASSIFICATION	2.1828791469900985E-4	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9949058252984146	WITHOUT_CLASSIFICATION	0.005094174701585317	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9949058252984146	WITHOUT_CLASSIFICATION	0.005094174701585317	IMPLEMENTATION
// We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the // 'b' will get put into this new dynamic scope.  The original scope does not see the new // 'b' and successive evals with this binding will.  I take it having the ability to have  // succesive binding evals be able to share same scope makes sense from a programmers  // perspective.   One crappy outcome of this design is it requires Dynamic and Static  // scopes to be mutable for this one case.	WITHOUT_CLASSIFICATION	0.9999999645720783	WITHOUT_CLASSIFICATION	3.5427921774075176E-8	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999990098653069	WITHOUT_CLASSIFICATION	9.901346930568889E-7	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999990098653069	WITHOUT_CLASSIFICATION	9.901346930568889E-7	IMPLEMENTATION
// tc // under method // self // under method // name // args	WITHOUT_CLASSIFICATION	0.9993449299118959	WITHOUT_CLASSIFICATION	6.550700881040452E-4	IMPLEMENTATION
// allow it to bubble up	WITHOUT_CLASSIFICATION	0.9996823291198884	WITHOUT_CLASSIFICATION	3.1767088011158586E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999147126238674	WITHOUT_CLASSIFICATION	8.528737613254651E-5	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999147126238674	WITHOUT_CLASSIFICATION	8.528737613254651E-5	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999147126238674	WITHOUT_CLASSIFICATION	8.528737613254651E-5	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999147126238674	WITHOUT_CLASSIFICATION	8.528737613254651E-5	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999147126238674	WITHOUT_CLASSIFICATION	8.528737613254651E-5	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999147126238674	WITHOUT_CLASSIFICATION	8.528737613254651E-5	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999147126238674	WITHOUT_CLASSIFICATION	8.528737613254651E-5	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999147126238674	WITHOUT_CLASSIFICATION	8.528737613254651E-5	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999147126238674	WITHOUT_CLASSIFICATION	8.528737613254651E-5	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9998877106406424	WITHOUT_CLASSIFICATION	1.1228935935766783E-4	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9998877106406424	WITHOUT_CLASSIFICATION	1.1228935935766783E-4	IMPLEMENTATION
// Check for a builtin first.	WITHOUT_CLASSIFICATION	0.9999920801132094	WITHOUT_CLASSIFICATION	7.919886790504391E-6	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9997890092771944	WITHOUT_CLASSIFICATION	2.1099072280553045E-4	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9997890092771944	WITHOUT_CLASSIFICATION	2.1099072280553045E-4	IMPLEMENTATION
// Unfortunately, the number of digits in the exponent is // not clearly defined in Ruby documentation. This is a // platform/version-dependent behavior. On Linux/Mac/Cygwin/*nix, // two digits are used. On Windows, 3 digits are used. // It is desirable for JRuby to have consistent behavior, and // the two digits behavior was selected. This is also in sync // with "Java-native" sprintf behavior (java.util.Formatter). // E or e	WITHOUT_CLASSIFICATION	0.999997175684128	WITHOUT_CLASSIFICATION	2.8243158718653067E-6	IMPLEMENTATION
/** * Represents the the dynamic portion of scoping information.  The variableValues are the * values of assigned local or block variables.  The staticScope identifies which sort of * scope this is (block or local). *  * Properties of Dynamic Scopes: * 1. static and dynamic scopes have the same number of names to values * 2. size of variables (and thus names) is determined during parsing.  So those structured do *    not need to change * * FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents.  This * is harmless (other than wasting memory), but we should not do that.  We can fix this in two * ways: * 1. Fix all callers * 2. Check parent that is passed in and make if new instance is local, then its parent is not local */	WITHOUT_CLASSIFICATION	0.7690891288618893	IMPLEMENTATION	0.2309108711381107	WITHOUT_CLASSIFICATION
// This method handles '**/' patterns and delegates to // fnmatch_helper for the main work.	WITHOUT_CLASSIFICATION	0.9998428501383854	WITHOUT_CLASSIFICATION	1.5714986161469968E-4	IMPLEMENTATION
// Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern  // Example: foo{a{c},b}bar -> fooa{c}bar, foobbar	WITHOUT_CLASSIFICATION	0.9999980118640769	WITHOUT_CLASSIFICATION	1.9881359231189116E-6	IMPLEMENTATION
// double precision, native // double precision, native	WITHOUT_CLASSIFICATION	0.9999814606286433	WITHOUT_CLASSIFICATION	1.853937135666917E-5	IMPLEMENTATION
// 64-bit number, native (as bignum)	WITHOUT_CLASSIFICATION	0.9998168668290733	WITHOUT_CLASSIFICATION	1.8313317092654176E-4	IMPLEMENTATION
// Next indicates to decode using native encoding format	WITHOUT_CLASSIFICATION	0.9999423711796818	WITHOUT_CLASSIFICATION	5.7628820318260264E-5	IMPLEMENTATION
// calculate based on a, b, c and d	WITHOUT_CLASSIFICATION	0.9999659204440704	WITHOUT_CLASSIFICATION	3.407955592957344E-5	IMPLEMENTATION
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999853479591339	WITHOUT_CLASSIFICATION	1.465204086610167E-5	IMPLEMENTATION
// MRI behavior:  for 'Q', do not add trailing nils	WITHOUT_CLASSIFICATION	0.9979720992017257	WITHOUT_CLASSIFICATION	0.002027900798274374	IMPLEMENTATION
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9999998885744424	WITHOUT_CLASSIFICATION	1.1142555753600293E-7	IMPLEMENTATION
// exec needs to behave differently in-process, because it's technically // supposed to replace the calling process. So if we're supposed to run // in-process, we allow it to use the default streams and not use // pumpers at all. See JRUBY-2156 and JRUBY-2154.	WITHOUT_CLASSIFICATION	0.9381735371819968	WITHOUT_CLASSIFICATION	0.061826462818003074	IMPLEMENTATION
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999998815968556	WITHOUT_CLASSIFICATION	1.1840314444473172E-7	IMPLEMENTATION
// The problem we trying to solve below: STDIN in Java // is blocked and non-interruptible, so if we invoke read // on it, we might never be able to interrupt such thread. // So, we use in.available() to see if there is any input // ready, and only then read it. But this approach can't // tell whether the end of stream reached or not, so we // might end up looping right at the end of the stream. // Well, at least, we can improve the situation by checking // if some input was ever available, and if so, not // checking for available anymore, and just go to read.	WITHOUT_CLASSIFICATION	0.9999998514451557	WITHOUT_CLASSIFICATION	1.4855484429990698E-7	IMPLEMENTATION
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999234577850773	WITHOUT_CLASSIFICATION	7.654221492269386E-5	IMPLEMENTATION
// an empirically derived rule: precision applies to // significand length, irrespective of exponent	WITHOUT_CLASSIFICATION	0.9999026704786885	WITHOUT_CLASSIFICATION	9.732952131150087E-5	IMPLEMENTATION
// an official rule, clarified: if the exponent // <clarif>after adjusting for exponent form</clarif> // is < -4,  or the exponent <clarif>after adjusting  // for exponent form</clarif> is greater than the // precision, use exponent form	WITHOUT_CLASSIFICATION	0.9999774447662765	WITHOUT_CLASSIFICATION	2.2555233723538827E-5	IMPLEMENTATION
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.99998419047497	WITHOUT_CLASSIFICATION	1.5809525030016097E-5	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9995818634899515	WITHOUT_CLASSIFICATION	4.18136510048545E-4	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9995818634899515	WITHOUT_CLASSIFICATION	4.18136510048545E-4	IMPLEMENTATION
// MRI behavior: validate only the unnumbered arguments	WITHOUT_CLASSIFICATION	0.9999162097923282	WITHOUT_CLASSIFICATION	8.37902076717652E-5	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.999933380306594	WITHOUT_CLASSIFICATION	6.66196934060007E-5	IMPLEMENTATION
// calculation for simple (and typical) case, // adapted from sun.misc.FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999789065269695	WITHOUT_CLASSIFICATION	2.1093473030450153E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999709824961172	WITHOUT_CLASSIFICATION	2.9017503882815074E-5	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9987080436253475	WITHOUT_CLASSIFICATION	0.0012919563746524893	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9987080436253475	WITHOUT_CLASSIFICATION	0.0012919563746524893	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9987080436253475	WITHOUT_CLASSIFICATION	0.0012919563746524893	IMPLEMENTATION
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9840093383711674	WITHOUT_CLASSIFICATION	0.015990661628832514	IMPLEMENTATION
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999628455484243	WITHOUT_CLASSIFICATION	3.715445157571769E-5	IMPLEMENTATION
// call chmod after we created the RandomAccesFile // because otherwise, the file could be read-only	WITHOUT_CLASSIFICATION	0.9998952399506085	WITHOUT_CLASSIFICATION	1.0476004939145208E-4	IMPLEMENTATION
// attempt to set the permissions, if we have been passed a POSIX instance, // and only if the file was created in this call.	WITHOUT_CLASSIFICATION	0.9999980971645556	WITHOUT_CLASSIFICATION	1.9028354444992616E-6	IMPLEMENTATION
// // When reading into a heap buffer, the jvm allocates a temporary // direct ByteBuffer of the requested size.  To avoid allocating // a huge direct buffer when doing ludicrous reads (e.g. 1G or more) // we split the read up into chunks of no more than 1M //	WITHOUT_CLASSIFICATION	0.9999939064794385	WITHOUT_CLASSIFICATION	6.093520561468794E-6	IMPLEMENTATION
// // If it is a file channel, then we can pre-allocate the output buffer // to the total size of buffered + remaining bytes in file //	WITHOUT_CLASSIFICATION	0.9999985607952803	WITHOUT_CLASSIFICATION	1.4392047197434946E-6	IMPLEMENTATION
// // Cannot discern the total read length - allocate at least enough for the buffered data //	WITHOUT_CLASSIFICATION	0.9999945135969149	WITHOUT_CLASSIFICATION	5.486403085127099E-6	IMPLEMENTATION
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999817840557194	WITHOUT_CLASSIFICATION	1.821594428063663E-5	IMPLEMENTATION
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.998932717132431	WITHOUT_CLASSIFICATION	0.0010672828675690376	IMPLEMENTATION
// already have some bytes buffered, just return those	WITHOUT_CLASSIFICATION	0.999985782638036	WITHOUT_CLASSIFICATION	1.4217361963934301E-5	IMPLEMENTATION
// reset buffer	WITHOUT_CLASSIFICATION	0.9991574720488521	WITHOUT_CLASSIFICATION	8.425279511479703E-4	IMPLEMENTATION
// // Synchronize and re-check to avoid creating more than one Selector per provider //	WITHOUT_CLASSIFICATION	0.9991532447655241	WITHOUT_CLASSIFICATION	8.467552344759633E-4	IMPLEMENTATION
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.8370037968047287	WITHOUT_CLASSIFICATION	0.16299620319527128	IMPLEMENTATION
// Is there something built into JRuby to do this?	WITHOUT_CLASSIFICATION	0.9998773966559454	WITHOUT_CLASSIFICATION	1.226033440545886E-4	IMPLEMENTATION
// Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long // assertTrue(value == valueViaValuesIterator);	WITHOUT_CLASSIFICATION	0.9999637889565797	WITHOUT_CLASSIFICATION	3.621104342044891E-5	IMPLEMENTATION
// value equality //result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); //assertEquals("two", result);	WITHOUT_CLASSIFICATION	0.9999656353910096	WITHOUT_CLASSIFICATION	3.436460899046474E-5	IMPLEMENTATION
// Uncomment the "puts" lines if you want to see more detail	WITHOUT_CLASSIFICATION	0.9999123472672968	WITHOUT_CLASSIFICATION	8.765273270314468E-5	IMPLEMENTATION
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999790364091349	WITHOUT_CLASSIFICATION	2.096359086521178E-5	IMPLEMENTATION
// change the thread context to include the class	WITHOUT_CLASSIFICATION	0.9998486895632597	WITHOUT_CLASSIFICATION	1.5131043674041292E-4	IMPLEMENTATION
