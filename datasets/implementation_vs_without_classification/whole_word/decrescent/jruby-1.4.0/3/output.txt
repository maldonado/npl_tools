// TODO: warn "tried to create Proc object without a block"	IMPLEMENTATION	0.5154642541691337	WITHOUT_CLASSIFICATION	0.4845357458308664	IMPLEMENTATION
// TODO: CLONE_SETUP here	IMPLEMENTATION	0.713151688329578	IMPLEMENTATION	0.2868483116704221	WITHOUT_CLASSIFICATION
// TODO: Someday, enable.	IMPLEMENTATION	0.5527206573560971	IMPLEMENTATION	0.4472793426439029	WITHOUT_CLASSIFICATION
// Bunch of methods still not implemented	IMPLEMENTATION	0.8823101916973208	IMPLEMENTATION	0.11768980830267918	WITHOUT_CLASSIFICATION
// TODO: non-strict option	IMPLEMENTATION	0.5885436534758864	WITHOUT_CLASSIFICATION	0.4114563465241136	IMPLEMENTATION
// TODO: opt for 2 and 3 ?	IMPLEMENTATION	0.9148324946096446	WITHOUT_CLASSIFICATION	0.08516750539035538	IMPLEMENTATION
// FIXME: Should we make this work with platform's locale, // or continue hardcoding US?	IMPLEMENTATION	0.9984500722583901	WITHOUT_CLASSIFICATION	0.001549927741609912	IMPLEMENTATION
// TODO: rescan code range ?	IMPLEMENTATION	0.6574387345501767	IMPLEMENTATION	0.3425612654498234	WITHOUT_CLASSIFICATION
// TODO: rescan code range ?	IMPLEMENTATION	0.6574387345501767	IMPLEMENTATION	0.3425612654498234	WITHOUT_CLASSIFICATION
// TODO: pass this in?	IMPLEMENTATION	0.670726002299228	IMPLEMENTATION	0.3292739977007721	WITHOUT_CLASSIFICATION
// FIXME: Pass block down?	IMPLEMENTATION	0.9998290546133488	WITHOUT_CLASSIFICATION	1.7094538665130376E-4	IMPLEMENTATION
// TODO: do something here?	IMPLEMENTATION	0.8553875341835717	IMPLEMENTATION	0.1446124658164283	WITHOUT_CLASSIFICATION
// TODO: port exact behavior from MRI, and move most locking logic into ChannelDescriptor // TODO: for all LOCK_NB cases, return false if they would block	IMPLEMENTATION	0.9486374479158115	WITHOUT_CLASSIFICATION	0.05136255208418843	IMPLEMENTATION
// TODO: check if too many open files, GC and try again	IMPLEMENTATION	0.8544764938249374	WITHOUT_CLASSIFICATION	0.14552350617506266	IMPLEMENTATION
//TODO deal with UNC names	IMPLEMENTATION	0.9701930375838305	WITHOUT_CLASSIFICATION	0.02980696241616954	IMPLEMENTATION
// FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.9979934690502968	WITHOUT_CLASSIFICATION	0.002006530949703217	IMPLEMENTATION
//FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.9903343525531395	WITHOUT_CLASSIFICATION	0.009665647446860519	IMPLEMENTATION
// TODO: SafeStringValue here	IMPLEMENTATION	0.713151688329578	IMPLEMENTATION	0.2868483116704221	WITHOUT_CLASSIFICATION
// TODO: turn off readable? am I reading this right? // This only seems to be used while duping below, since modes gets // reset to actual modes afterward //fptr->mode &= (m & FMODE_READABLE) ? ~FMODE_READABLE : ~FMODE_WRITABLE;	IMPLEMENTATION	0.6618178468432679	WITHOUT_CLASSIFICATION	0.33818215315673206	IMPLEMENTATION
// TODO: check safe, taint on incoming string	IMPLEMENTATION	0.728288853087875	WITHOUT_CLASSIFICATION	0.27171114691212483	IMPLEMENTATION
// TODO: pipe handler to be reopened with path and "w" mode	IMPLEMENTATION	0.7972222892626842	WITHOUT_CLASSIFICATION	0.20277771073731574	IMPLEMENTATION
// FIXME: add text mode to mode flags	IMPLEMENTATION	0.9998910139932199	WITHOUT_CLASSIFICATION	1.0898600678003789E-4	IMPLEMENTATION
// TODO: Something about pipe buffer length here	IMPLEMENTATION	0.6179284697502224	WITHOUT_CLASSIFICATION	0.3820715302497777	IMPLEMENTATION
// TODO: handle errors in buffered write by retrying until finished or file is closed	IMPLEMENTATION	0.8523705021435553	WITHOUT_CLASSIFICATION	0.14762949785644483	IMPLEMENTATION
// TODO: notify threads waiting on descriptors/IO? probably not...	IMPLEMENTATION	0.6820203456343129	IMPLEMENTATION	0.3179796543656871	WITHOUT_CLASSIFICATION
// TODO: Ruby re-checks that the buffer string hasn't been modified	IMPLEMENTATION	0.6206586628156278	IMPLEMENTATION	0.3793413371843723	WITHOUT_CLASSIFICATION
// TODO: Ruby unlocks the string here	IMPLEMENTATION	0.7917378127484793	WITHOUT_CLASSIFICATION	0.20826218725152068	IMPLEMENTATION
// TODO: Ruby truncates string to specific size here, but our bytelist should handle this already?	IMPLEMENTATION	0.9371979550524749	WITHOUT_CLASSIFICATION	0.06280204494752505	IMPLEMENTATION
// TODO: Ruby unlocks the string here	IMPLEMENTATION	0.7917378127484793	WITHOUT_CLASSIFICATION	0.20826218725152068	IMPLEMENTATION
// TODO: Ruby truncates string to specific size here, but our bytelist should handle this already?	IMPLEMENTATION	0.9371979550524749	WITHOUT_CLASSIFICATION	0.06280204494752505	IMPLEMENTATION
// TODO: ruby locks the string here	IMPLEMENTATION	0.7921439877119567	WITHOUT_CLASSIFICATION	0.20785601228804335	IMPLEMENTATION
// TODO same zero-length checks as file above	IMPLEMENTATION	0.5447543028790431	WITHOUT_CLASSIFICATION	0.4552456971209568	IMPLEMENTATION
// TODO: MRI also can hadle Bignum here	IMPLEMENTATION	0.9601295364676308	IMPLEMENTATION	0.03987046353236929	WITHOUT_CLASSIFICATION
// TODO: make threadsafe	IMPLEMENTATION	0.7871097236231845	IMPLEMENTATION	0.21289027637681546	WITHOUT_CLASSIFICATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9091183102377202	WITHOUT_CLASSIFICATION	0.09088168976227984	IMPLEMENTATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9091183102377202	WITHOUT_CLASSIFICATION	0.09088168976227984	IMPLEMENTATION
// FIXME: create AttrReaderMethod, AttrWriterMethod, for faster attr access	IMPLEMENTATION	0.9999059805972841	WITHOUT_CLASSIFICATION	9.401940271591415E-5	IMPLEMENTATION
// Do not clone cached methods // FIXME: MRI copies all methods here	IMPLEMENTATION	0.9992819077077094	WITHOUT_CLASSIFICATION	7.18092292290525E-4	IMPLEMENTATION
// TODO: don't calculate the same value 3 times	IMPLEMENTATION	0.8348227548281895	WITHOUT_CLASSIFICATION	0.16517724517181057	IMPLEMENTATION
// TODO: 3 times calculate the same value below	IMPLEMENTATION	0.8522988497485046	WITHOUT_CLASSIFICATION	0.14770115025149538	IMPLEMENTATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.9679012158716035	IMPLEMENTATION	0.0320987841283966	WITHOUT_CLASSIFICATION
// TODO: Store BEGIN and END information into this node	IMPLEMENTATION	0.6798212625349818	WITHOUT_CLASSIFICATION	0.32017873746501835	IMPLEMENTATION
// TODO: put these nil guards into tree (bigger than I want to do right now)	IMPLEMENTATION	0.9702717411465958	IMPLEMENTATION	0.02972825885340423	WITHOUT_CLASSIFICATION
// FIXME: Make bodyNode non-null in parser	IMPLEMENTATION	0.9999697214976543	WITHOUT_CLASSIFICATION	3.027850234571951E-5	IMPLEMENTATION
// TODO: call config with scope but no frame	IMPLEMENTATION	0.6717468444745498	IMPLEMENTATION	0.3282531555254503	WITHOUT_CLASSIFICATION
// TODO: add trace call?	IMPLEMENTATION	0.5685151952324445	IMPLEMENTATION	0.43148480476755546	WITHOUT_CLASSIFICATION
// FIXME: missing arity check	IMPLEMENTATION	0.99931215350646	WITHOUT_CLASSIFICATION	6.878464935400612E-4	IMPLEMENTATION
// FIXME: optimize for cases where we have no false branch	IMPLEMENTATION	0.9998027978134564	WITHOUT_CLASSIFICATION	1.9720218654359286E-4	IMPLEMENTATION
// FIXME: after jump is not in here.  Will if ever be? //Label afterJmp = new Label();	IMPLEMENTATION	0.9999797480522625	WITHOUT_CLASSIFICATION	2.0251947737538113E-5	IMPLEMENTATION
// TODO: build arg list based on number of args, optionals, etc	IMPLEMENTATION	0.5209679763267098	WITHOUT_CLASSIFICATION	0.47903202367329023	IMPLEMENTATION
// FIXME: missing arity check	IMPLEMENTATION	0.99931215350646	WITHOUT_CLASSIFICATION	6.878464935400612E-4	IMPLEMENTATION
// SSS FIXME: Traverse up the scope hierarchy to find the constant as long as the parent is a static scope	IMPLEMENTATION	0.9999663799639743	WITHOUT_CLASSIFICATION	3.362003602560216E-5	IMPLEMENTATION
// SSS FIXME: Should I be returning the operand constructed here?	IMPLEMENTATION	0.9983996478292753	WITHOUT_CLASSIFICATION	0.0016003521707248416	IMPLEMENTATION
// TODO: Add IR instructions for checking method arity! // s.getVariableCompiler().checkMethodArity(required, opt, rest);	IMPLEMENTATION	0.7974400542946726	IMPLEMENTATION	0.20255994570532757	WITHOUT_CLASSIFICATION
// FIXME: Ruby 1.9 post args code needs to come here	IMPLEMENTATION	0.9984621057341436	WITHOUT_CLASSIFICATION	0.0015378942658564522	IMPLEMENTATION
// SSS: FIXME: Somewhere here, we need to record information the type of this operand as String	IMPLEMENTATION	0.999943035790273	WITHOUT_CLASSIFICATION	5.696420972703658E-5	IMPLEMENTATION
// FIXME: Translate this call below! // s.unwrapPassedBlock();	IMPLEMENTATION	0.9994963008044321	WITHOUT_CLASSIFICATION	5.036991955679048E-4	IMPLEMENTATION
// SSS FIXME: We need to build debug information tracking into the IR in some fashion // So, these methods below would have to have equivalents in IR_Scope implementations.	IMPLEMENTATION	0.9998414933760446	WITHOUT_CLASSIFICATION	1.5850662395538428E-4	IMPLEMENTATION
// SSS FIXME: Incomplete!	IMPLEMENTATION	0.9998830445803648	WITHOUT_CLASSIFICATION	1.1695541963519677E-4	IMPLEMENTATION
// SSS FIXME: Pick one of bytelist or string, or add internal conversion methods to convert to the default representation	IMPLEMENTATION	0.9999930130211341	WITHOUT_CLASSIFICATION	6.986978865793939E-6	IMPLEMENTATION
// SSS FIXME: To be done	IMPLEMENTATION	0.9999789431093389	WITHOUT_CLASSIFICATION	2.1056890661082375E-5	IMPLEMENTATION
//TODO: implement, won't do this now	IMPLEMENTATION	0.9983869911844647	WITHOUT_CLASSIFICATION	0.0016130088155353508	IMPLEMENTATION
//TODO: implement, won't do this now	IMPLEMENTATION	0.9983869911844647	WITHOUT_CLASSIFICATION	0.0016130088155353508	IMPLEMENTATION
// TODO: validate port as numeric	IMPLEMENTATION	0.5304646137530638	WITHOUT_CLASSIFICATION	0.4695353862469362	IMPLEMENTATION
// TODO: this code should really check if a Ruby equals method is implemented or not.	IMPLEMENTATION	0.9991394151642046	IMPLEMENTATION	8.605848357954719E-4	WITHOUT_CLASSIFICATION
// if not already defined, we add a 'new' that guesses at which signature to use // TODO: just adding first one right now...add in signature-guessing logic	IMPLEMENTATION	0.5154971043083201	WITHOUT_CLASSIFICATION	0.4845028956916799	IMPLEMENTATION
// TODO: deal with varargs	IMPLEMENTATION	0.719540984989099	IMPLEMENTATION	0.2804590150109011	WITHOUT_CLASSIFICATION
// TODO: deal with varargs	IMPLEMENTATION	0.719540984989099	IMPLEMENTATION	0.2804590150109011	WITHOUT_CLASSIFICATION
// TODO: other reserved names?	IMPLEMENTATION	0.9030794664827846	IMPLEMENTATION	0.09692053351721544	WITHOUT_CLASSIFICATION
// TODO: we can probably release our references to the constantFields // array and static/instance callback hashes at this point. 	IMPLEMENTATION	0.5740502310313798	IMPLEMENTATION	0.42594976896862025	WITHOUT_CLASSIFICATION
// TODO: Formalize conversion mechanisms between Java and Ruby	IMPLEMENTATION	0.6811845720996158	WITHOUT_CLASSIFICATION	0.3188154279003841	IMPLEMENTATION
// XXX: Check if it's appropriate type?	IMPLEMENTATION	0.9986116641197699	WITHOUT_CLASSIFICATION	0.0013883358802300712	IMPLEMENTATION
// TODO: call ruby method	IMPLEMENTATION	0.8879245295076209	IMPLEMENTATION	0.11207547049237908	WITHOUT_CLASSIFICATION
// TODO: call ruby method	IMPLEMENTATION	0.8879245295076209	IMPLEMENTATION	0.11207547049237908	WITHOUT_CLASSIFICATION
// TODO: Add safety check for taintedness	IMPLEMENTATION	0.6435629534363806	IMPLEMENTATION	0.35643704656361946	WITHOUT_CLASSIFICATION
// FIXME: Need to detect magic_comment in 1.9 here for encoding	IMPLEMENTATION	0.9999497028461	WITHOUT_CLASSIFICATION	5.0297153900163334E-5	IMPLEMENTATION
/* xxx shouldn't check if valid option variable */	IMPLEMENTATION	0.9999953208404643	WITHOUT_CLASSIFICATION	4.679159535755737E-6	IMPLEMENTATION
// TODO: this isn't handling multibyte yet	IMPLEMENTATION	0.957765966825881	IMPLEMENTATION	0.042234033174118946	WITHOUT_CLASSIFICATION
// TODO: This should be something else like a tCHAR	IMPLEMENTATION	0.9168692748588585	IMPLEMENTATION	0.08313072514114156	WITHOUT_CLASSIFICATION
// FIXME: \r logic needed	IMPLEMENTATION	0.7933798781902088	WITHOUT_CLASSIFICATION	0.20662012180979106	IMPLEMENTATION
// TODO: note lack of command.com support for Win 9x...	IMPLEMENTATION	0.8880662215062635	IMPLEMENTATION	0.11193377849373648	WITHOUT_CLASSIFICATION
// FIXME: Make thread pool threads daemons if necessary	IMPLEMENTATION	0.9997445994161441	WITHOUT_CLASSIFICATION	2.5540058385594403E-4	IMPLEMENTATION
/* FIXME: We may be intern'ing more than once.*/	IMPLEMENTATION	0.9582320925801736	WITHOUT_CLASSIFICATION	0.04176790741982646	IMPLEMENTATION
/* FIXME: We may be intern'ing more than once.*/	IMPLEMENTATION	0.9582320925801736	WITHOUT_CLASSIFICATION	0.04176790741982646	IMPLEMENTATION
/* FIXME: arg_concat missing for opt_call_args*/	IMPLEMENTATION	0.9896523695830972	WITHOUT_CLASSIFICATION	0.010347630416902828	IMPLEMENTATION
/* FIXME: arg_concat logic missing for opt_call_args*/	IMPLEMENTATION	0.9902205274046031	WITHOUT_CLASSIFICATION	0.009779472595396875	IMPLEMENTATION
// FIXME: This needs to happen for lambdas //            args.checkArgCount(runtime, parameters.length);	IMPLEMENTATION	0.9997311973324542	WITHOUT_CLASSIFICATION	2.688026675459085E-4	IMPLEMENTATION
// FIXME: This needs to happen for lambdas //            args.checkArgCount(runtime, parameters.length);	IMPLEMENTATION	0.9997311973324542	WITHOUT_CLASSIFICATION	2.688026675459085E-4	IMPLEMENTATION
// TODO: make it cross runtime safe by COW or eager copy	IMPLEMENTATION	0.6670642539403041	IMPLEMENTATION	0.33293574605969595	WITHOUT_CLASSIFICATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.9998721370662679	WITHOUT_CLASSIFICATION	1.2786293373220255E-4	IMPLEMENTATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.9998721370662679	WITHOUT_CLASSIFICATION	1.2786293373220255E-4	IMPLEMENTATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.9998721370662679	WITHOUT_CLASSIFICATION	1.2786293373220255E-4	IMPLEMENTATION
// TODO: check the return value here	IMPLEMENTATION	0.8265843547969803	IMPLEMENTATION	0.17341564520301966	WITHOUT_CLASSIFICATION
// TODO: check the return value here	IMPLEMENTATION	0.8265843547969803	IMPLEMENTATION	0.17341564520301966	WITHOUT_CLASSIFICATION
// TODO: Make sure all appropriate open flags are added to this check.	IMPLEMENTATION	0.8894322974301422	WITHOUT_CLASSIFICATION	0.11056770256985778	IMPLEMENTATION
//subList.clear(); // Sublist is supposed to share same backing store as list...TODO in RubyArray. //assertTrue(list.size() == 1);	IMPLEMENTATION	0.9999990702444711	WITHOUT_CLASSIFICATION	9.297555289605193E-7	IMPLEMENTATION
// SSS FIXME: Cannot optimize this without assuming that Range.to_ary method has not redefined. // So for now, return null!	IMPLEMENTATION	0.9845499343895101	WITHOUT_CLASSIFICATION	0.015450065610489857	IMPLEMENTATION
// TODO Auto-generated method stub	IMPLEMENTATION	0.9994372141403827	IMPLEMENTATION	5.627858596172051E-4	WITHOUT_CLASSIFICATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.9928257467215508	IMPLEMENTATION	0.0071742532784492	WITHOUT_CLASSIFICATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.9928257467215508	IMPLEMENTATION	0.0071742532784492	WITHOUT_CLASSIFICATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.9928257467215508	IMPLEMENTATION	0.0071742532784492	WITHOUT_CLASSIFICATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.9679012158716035	IMPLEMENTATION	0.0320987841283966	WITHOUT_CLASSIFICATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.9679012158716035	IMPLEMENTATION	0.0320987841283966	WITHOUT_CLASSIFICATION
// TODO: check for ascii string	IMPLEMENTATION	0.9227972992255247	WITHOUT_CLASSIFICATION	0.07720270077447536	IMPLEMENTATION
// filter out any Java primitive names // TODO: should check against all Java reserved names here, not just primitives	IMPLEMENTATION	0.905124184156043	IMPLEMENTATION	0.09487581584395698	WITHOUT_CLASSIFICATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9091183102377202	WITHOUT_CLASSIFICATION	0.09088168976227984	IMPLEMENTATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9091183102377202	WITHOUT_CLASSIFICATION	0.09088168976227984	IMPLEMENTATION
// TODO: missing additional logic for dealing with conflicting protected fields.	IMPLEMENTATION	0.9071743483913669	IMPLEMENTATION	0.09282565160863313	WITHOUT_CLASSIFICATION
// TODO: better detection when path is absolute or not. // If the path isn't absolute, then prepend the current working // directory to the path.	IMPLEMENTATION	0.8525844787693805	WITHOUT_CLASSIFICATION	0.14741552123061952	IMPLEMENTATION
// FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.9979934690502968	WITHOUT_CLASSIFICATION	0.002006530949703217	IMPLEMENTATION
// FIX replace type() == ... with isInstanceOf(...)	IMPLEMENTATION	0.9997568327411513	WITHOUT_CLASSIFICATION	2.4316725884869985E-4	IMPLEMENTATION
/* TODO: MRI is just a when node.  We need this extra logic for IDE consumers (null in casenode statement should be implicit nil)*/	IMPLEMENTATION	0.6042474104399039	WITHOUT_CLASSIFICATION	0.39575258956009607	IMPLEMENTATION
// TODO: This and recacheRespondsTo needed to be synchronized for JRUBY-3466, // but this degraded performance nearly 2x. It's still faster than MRI, but // a reanalysis of this code may show a faster way to ensure we're caching // safely.	IMPLEMENTATION	0.9998873543456342	IMPLEMENTATION	1.1264565436571532E-4	WITHOUT_CLASSIFICATION
// TODO: adjust length so it won't fall in the middle  // of a multi-byte character. MRI's sprintf.c uses tables // in a modified version of regex.c, which assume some // particular  encoding for a given installation/application. // (See regex.c#re_mbcinit in ruby-1.8.5-p12)  // // This is only an issue if the user specifies a precision // that causes the string to be truncated. The same issue // would arise taking a substring of a ByteList-backed RubyString.	IMPLEMENTATION	0.9998471615194177	WITHOUT_CLASSIFICATION	1.52838480582367E-4	IMPLEMENTATION
// set constants now that they're initialized	WITHOUT_CLASSIFICATION	0.9998550680361696	WITHOUT_CLASSIFICATION	1.4493196383041186E-4	IMPLEMENTATION
// line 335	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
// Figure end-char.  '\0' is special to indicate begin=end and that no nesting?	WITHOUT_CLASSIFICATION	0.9998439866615113	WITHOUT_CLASSIFICATION	1.560133384887228E-4	IMPLEMENTATION
// line 362	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 372	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
// line 391	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
/* ^D */	WITHOUT_CLASSIFICATION	0.9999972368064602	WITHOUT_CLASSIFICATION	2.7631935398027776E-6	IMPLEMENTATION
/* ^Z */	WITHOUT_CLASSIFICATION	0.9999972368064602	WITHOUT_CLASSIFICATION	2.7631935398027776E-6	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
//Do nothing	WITHOUT_CLASSIFICATION	0.9997175273334311	WITHOUT_CLASSIFICATION	2.824726665688767E-4	IMPLEMENTATION
//Do nothing	WITHOUT_CLASSIFICATION	0.9997175273334311	WITHOUT_CLASSIFICATION	2.824726665688767E-4	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999982731747868	WITHOUT_CLASSIFICATION	1.7268252131950177E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999982731747868	WITHOUT_CLASSIFICATION	1.7268252131950177E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999982731747868	WITHOUT_CLASSIFICATION	1.7268252131950177E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999982731747868	WITHOUT_CLASSIFICATION	1.7268252131950177E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999982731747868	WITHOUT_CLASSIFICATION	1.7268252131950177E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999982731747868	WITHOUT_CLASSIFICATION	1.7268252131950177E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999982731747868	WITHOUT_CLASSIFICATION	1.7268252131950177E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999982731747868	WITHOUT_CLASSIFICATION	1.7268252131950177E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999982731747868	WITHOUT_CLASSIFICATION	1.7268252131950177E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999982731747868	WITHOUT_CLASSIFICATION	1.7268252131950177E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999982731747868	WITHOUT_CLASSIFICATION	1.7268252131950177E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999982731747868	WITHOUT_CLASSIFICATION	1.7268252131950177E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999982731747868	WITHOUT_CLASSIFICATION	1.7268252131950177E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999982731747868	WITHOUT_CLASSIFICATION	1.7268252131950177E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999982731747868	WITHOUT_CLASSIFICATION	1.7268252131950177E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999982731747868	WITHOUT_CLASSIFICATION	1.7268252131950177E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999982731747868	WITHOUT_CLASSIFICATION	1.7268252131950177E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999982731747868	WITHOUT_CLASSIFICATION	1.7268252131950177E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999982731747868	WITHOUT_CLASSIFICATION	1.7268252131950177E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999982731747868	WITHOUT_CLASSIFICATION	1.7268252131950177E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999982731747868	WITHOUT_CLASSIFICATION	1.7268252131950177E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999982731747868	WITHOUT_CLASSIFICATION	1.7268252131950177E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999982731747868	WITHOUT_CLASSIFICATION	1.7268252131950177E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999982731747868	WITHOUT_CLASSIFICATION	1.7268252131950177E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999982731747868	WITHOUT_CLASSIFICATION	1.7268252131950177E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999982731747868	WITHOUT_CLASSIFICATION	1.7268252131950177E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999982731747868	WITHOUT_CLASSIFICATION	1.7268252131950177E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999982731747868	WITHOUT_CLASSIFICATION	1.7268252131950177E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999982731747868	WITHOUT_CLASSIFICATION	1.7268252131950177E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999982731747868	WITHOUT_CLASSIFICATION	1.7268252131950177E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999982731747868	WITHOUT_CLASSIFICATION	1.7268252131950177E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999982731747868	WITHOUT_CLASSIFICATION	1.7268252131950177E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999982731747868	WITHOUT_CLASSIFICATION	1.7268252131950177E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999982731747868	WITHOUT_CLASSIFICATION	1.7268252131950177E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999982731747868	WITHOUT_CLASSIFICATION	1.7268252131950177E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999982731747868	WITHOUT_CLASSIFICATION	1.7268252131950177E-5	IMPLEMENTATION
// return result	WITHOUT_CLASSIFICATION	0.9994773682964613	WITHOUT_CLASSIFICATION	5.226317035386592E-4	IMPLEMENTATION
// name	WITHOUT_CLASSIFICATION	0.9999680134027314	WITHOUT_CLASSIFICATION	3.1986597268484245E-5	IMPLEMENTATION
// Define System.getProperties() in ENV_JAVA	WITHOUT_CLASSIFICATION	0.9999841671200627	WITHOUT_CLASSIFICATION	1.5832879937362738E-5	IMPLEMENTATION
// Accessor methods.	WITHOUT_CLASSIFICATION	0.9993963846985593	WITHOUT_CLASSIFICATION	6.036153014407277E-4	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9993904507352389	WITHOUT_CLASSIFICATION	6.095492647610753E-4	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9993904507352389	WITHOUT_CLASSIFICATION	6.095492647610753E-4	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9993904507352389	WITHOUT_CLASSIFICATION	6.095492647610753E-4	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9993904507352389	WITHOUT_CLASSIFICATION	6.095492647610753E-4	IMPLEMENTATION
// call getpwent to fail early if unsupported	WITHOUT_CLASSIFICATION	0.9999517283489255	WITHOUT_CLASSIFICATION	4.8271651074506475E-5	IMPLEMENTATION
// fall back on env entry for USER	WITHOUT_CLASSIFICATION	0.9997420841387604	WITHOUT_CLASSIFICATION	2.5791586123959006E-4	IMPLEMENTATION
// try to read grent to fail fast	WITHOUT_CLASSIFICATION	0.9999202919391826	WITHOUT_CLASSIFICATION	7.970806081730421E-5	IMPLEMENTATION
// define ARGV and $* for this runtime	WITHOUT_CLASSIFICATION	0.9999651309279811	WITHOUT_CLASSIFICATION	3.486907201879947E-5	IMPLEMENTATION
// Version information:	WITHOUT_CLASSIFICATION	0.9998837554256744	WITHOUT_CLASSIFICATION	1.1624457432561157E-4	IMPLEMENTATION
// after defn of $stderr as the call may produce warnings	WITHOUT_CLASSIFICATION	0.9999114765330636	WITHOUT_CLASSIFICATION	8.852346693646987E-5	IMPLEMENTATION
// ARGF, $< object	WITHOUT_CLASSIFICATION	0.999581271199741	WITHOUT_CLASSIFICATION	4.1872880025886015E-4	IMPLEMENTATION
// if the environment variables can't be obtained, define an empty ENV	WITHOUT_CLASSIFICATION	0.9999986274504888	WITHOUT_CLASSIFICATION	1.372549511176162E-6	IMPLEMENTATION
// On platforms without a c-library accessable through JNA, getpid will return hashCode  // as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing // $$ on getpid() where available, we have the same semantics as MRI.	WITHOUT_CLASSIFICATION	0.9999160433650631	WITHOUT_CLASSIFICATION	8.395663493688759E-5	IMPLEMENTATION
//$@ returns nil if $!.backtrace is not an array	WITHOUT_CLASSIFICATION	0.9997364167855355	WITHOUT_CLASSIFICATION	2.635832144645126E-4	IMPLEMENTATION
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999476915911591	WITHOUT_CLASSIFICATION	5.230840884095554E-5	IMPLEMENTATION
// MRI behavior: just plain '//' or '\\\\' are considered illegal on Windows.	WITHOUT_CLASSIFICATION	0.9999701174503863	WITHOUT_CLASSIFICATION	2.988254961364042E-5	IMPLEMENTATION
// this _is_ legal (when removing an undef)	WITHOUT_CLASSIFICATION	0.9998457581897509	WITHOUT_CLASSIFICATION	1.5424181024915938E-4	IMPLEMENTATION
// What we passed to the constructor for method 'path'	WITHOUT_CLASSIFICATION	0.9955400274069185	WITHOUT_CLASSIFICATION	0.004459972593081504	IMPLEMENTATION
// ----- Ruby Class Methods ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999486070113808	WITHOUT_CLASSIFICATION	5.139298861917162E-5	IMPLEMENTATION
// // CONSTANT TABLE METHODS - pass to delegate //	WITHOUT_CLASSIFICATION	0.9997365286264869	WITHOUT_CLASSIFICATION	2.634713735131429E-4	IMPLEMENTATION
// We get canonical path to try and flatten the path out. // a dir '/subdir/..' should return as '/' // cnutter: Do we want to flatten path out?	WITHOUT_CLASSIFICATION	0.9990757888035041	WITHOUT_CLASSIFICATION	9.242111964958608E-4	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9993904507352389	WITHOUT_CLASSIFICATION	6.095492647610753E-4	IMPLEMENTATION
// ----- Ruby Instance Methods -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999008235881086	WITHOUT_CLASSIFICATION	9.917641189134212E-5	IMPLEMENTATION
// Make sure any read()s after close fail.	WITHOUT_CLASSIFICATION	0.9999612714675798	WITHOUT_CLASSIFICATION	3.87285324201827E-5	IMPLEMENTATION
// ----- Helper Methods --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999066567408784	WITHOUT_CLASSIFICATION	9.334325912153688E-5	IMPLEMENTATION
// try to use POSIX for this first	WITHOUT_CLASSIFICATION	0.9997405158897065	WITHOUT_CLASSIFICATION	2.5948411029354663E-4	IMPLEMENTATION
// otherwise fall back on the old way	WITHOUT_CLASSIFICATION	0.9899258143887897	WITHOUT_CLASSIFICATION	0.010074185611210216	IMPLEMENTATION
// Proc class	WITHOUT_CLASSIFICATION	0.9996518866776748	WITHOUT_CLASSIFICATION	3.4811332232517E-4	IMPLEMENTATION
// No passed in block, lets check next outer frame for one ('Proc.new')	WITHOUT_CLASSIFICATION	0.9999818589692996	WITHOUT_CLASSIFICATION	1.814103070046565E-5	IMPLEMENTATION
// modify the block with a new backref/lastline-grabbing scope	WITHOUT_CLASSIFICATION	0.9998713805495845	WITHOUT_CLASSIFICATION	1.2861945041557724E-4	IMPLEMENTATION
// for future compatibility as constructors move toward not accepting metaclass?	WITHOUT_CLASSIFICATION	0.9984023352182205	WITHOUT_CLASSIFICATION	0.001597664781779518	IMPLEMENTATION
//        case RUBY_HYBRID: //            backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); //            break;	WITHOUT_CLASSIFICATION	0.9997120096756625	WITHOUT_CLASSIFICATION	2.879903243374987E-4	IMPLEMENTATION
// This looks wrong, but it's the way MRI does it.	WITHOUT_CLASSIFICATION	0.9999214906735449	WITHOUT_CLASSIFICATION	7.850932645521075E-5	IMPLEMENTATION
// rb_exc_new3	WITHOUT_CLASSIFICATION	0.9993881635822232	WITHOUT_CLASSIFICATION	6.118364177769137E-4	IMPLEMENTATION
// NOTE: The indicies here match exactly the signal values; do not reorder	WITHOUT_CLASSIFICATION	0.9885475258085061	WITHOUT_CLASSIFICATION	0.011452474191493811	IMPLEMENTATION
//registerThreadDumpSignalHandler(runtime);	WITHOUT_CLASSIFICATION	0.999162082315616	WITHOUT_CLASSIFICATION	8.37917684384032E-4	IMPLEMENTATION
// IOT is also 6	WITHOUT_CLASSIFICATION	0.999565711955186	WITHOUT_CLASSIFICATION	4.3428804481415284E-4	IMPLEMENTATION
// CLD is also 20	WITHOUT_CLASSIFICATION	0.9994228166716058	WITHOUT_CLASSIFICATION	5.771833283942435E-4	IMPLEMENTATION
// RubySignal	WITHOUT_CLASSIFICATION	0.9993881635822232	WITHOUT_CLASSIFICATION	6.118364177769137E-4	IMPLEMENTATION
// ZStream actually *isn't* allocatable	WITHOUT_CLASSIFICATION	0.999803974868488	WITHOUT_CLASSIFICATION	1.960251315118637E-4	IMPLEMENTATION
// MRI behavior, enforced by tests	WITHOUT_CLASSIFICATION	0.9999550691942944	WITHOUT_CLASSIFICATION	4.493080570553599E-5	IMPLEMENTATION
// it's safe since adler.update doesn't modify the array	WITHOUT_CLASSIFICATION	0.9998811647754768	WITHOUT_CLASSIFICATION	1.188352245232091E-4	IMPLEMENTATION
// MRI behavior: in finished mode, we work as pass-through	WITHOUT_CLASSIFICATION	0.9999838434066405	WITHOUT_CLASSIFICATION	1.6156593359479483E-5	IMPLEMENTATION
// SYNC_FLUSH	WITHOUT_CLASSIFICATION	0.9993881635822232	WITHOUT_CLASSIFICATION	6.118364177769137E-4	IMPLEMENTATION
// By default, NO_FLUSH	WITHOUT_CLASSIFICATION	0.9998586880507048	WITHOUT_CLASSIFICATION	1.4131194929523175E-4	IMPLEMENTATION
//io.finish();	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
// should invoke seek on realIo	WITHOUT_CLASSIFICATION	0.9994359437175908	WITHOUT_CLASSIFICATION	5.640562824092128E-4	IMPLEMENTATION
// hmm...	WITHOUT_CLASSIFICATION	0.9999817067840583	WITHOUT_CLASSIFICATION	1.8293215941744205E-5	IMPLEMENTATION
// Called before any write to make sure the // header is always written before the first bytes	WITHOUT_CLASSIFICATION	0.9998807051123708	WITHOUT_CLASSIFICATION	1.1929488762922368E-4	IMPLEMENTATION
// For JDK 1.4 we can use "cal.getTimeInMillis()"	WITHOUT_CLASSIFICATION	0.992602733120323	WITHOUT_CLASSIFICATION	0.0073972668796771284	IMPLEMENTATION
// We can just use dt, since it is immutable	WITHOUT_CLASSIFICATION	0.9999219804818485	WITHOUT_CLASSIFICATION	7.801951815146642E-5	IMPLEMENTATION
// float number of seconds	WITHOUT_CLASSIFICATION	0.9999450797724695	WITHOUT_CLASSIFICATION	5.492022753055136E-5	IMPLEMENTATION
// modified to match how hash is calculated in 1.8.2	WITHOUT_CLASSIFICATION	0.9996872311467268	WITHOUT_CLASSIFICATION	3.12768853273174E-4	IMPLEMENTATION
// dump usec, not msec	WITHOUT_CLASSIFICATION	0.9978543051450365	WITHOUT_CLASSIFICATION	0.0021456948549635345	IMPLEMENTATION
/* Time class methods */	WITHOUT_CLASSIFICATION	0.9999957948541919	WITHOUT_CLASSIFICATION	4.205145808068431E-6	IMPLEMENTATION
// marsaling dumps usec, not msec	WITHOUT_CLASSIFICATION	0.9968259008572868	WITHOUT_CLASSIFICATION	0.0031740991427132562	IMPLEMENTATION
// MRI accepts additional wday argument which appears to be ignored.	WITHOUT_CLASSIFICATION	0.9998902072670328	WITHOUT_CLASSIFICATION	1.0979273296724051E-4	IMPLEMENTATION
// set up with min values and then add to allow rolling over	WITHOUT_CLASSIFICATION	0.9999963594357996	WITHOUT_CLASSIFICATION	3.6405642003838072E-6	IMPLEMENTATION
// the instant at which we will ask dtz what the difference between DST and // standard time is	WITHOUT_CLASSIFICATION	0.9984997966889015	WITHOUT_CLASSIFICATION	0.0015002033110984318	IMPLEMENTATION
// if we might be moving this time from !DST -> DST, the offset is assumed // to be the same as it was just before we last moved from DST -> !DST	WITHOUT_CLASSIFICATION	0.9999999980785804	WITHOUT_CLASSIFICATION	1.9214195873917467E-9	IMPLEMENTATION
// Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.	WITHOUT_CLASSIFICATION	0.9981965974869002	WITHOUT_CLASSIFICATION	0.0018034025130998729	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999937824034942	WITHOUT_CLASSIFICATION	6.217596505868827E-6	IMPLEMENTATION
/* If the value will fit in a Fixnum, return one of those. */	WITHOUT_CLASSIFICATION	0.9999992790340667	WITHOUT_CLASSIFICATION	7.209659333287087E-7	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999944967302533	WITHOUT_CLASSIFICATION	5.503269746667889E-6	IMPLEMENTATION
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9997738604125012	WITHOUT_CLASSIFICATION	2.2613958749876989E-4	IMPLEMENTATION
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.8585916778672636	WITHOUT_CLASSIFICATION	0.1414083221327363	IMPLEMENTATION
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.8585916778672636	WITHOUT_CLASSIFICATION	0.1414083221327363	IMPLEMENTATION
// no bignorm here needed	WITHOUT_CLASSIFICATION	0.6119798513816089	WITHOUT_CLASSIFICATION	0.38802014861839107	IMPLEMENTATION
// wow, the only time we can use the java protocol ;)	WITHOUT_CLASSIFICATION	0.9993461947121898	WITHOUT_CLASSIFICATION	6.538052878101785E-4	IMPLEMENTATION
// Pad with a 0	WITHOUT_CLASSIFICATION	0.9996169295535748	WITHOUT_CLASSIFICATION	3.830704464251811E-4	IMPLEMENTATION
// BigInteger required a sign byte in incoming array	WITHOUT_CLASSIFICATION	0.9999696449573663	WITHOUT_CLASSIFICATION	3.0355042633712455E-5	IMPLEMENTATION
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9999975149115851	WITHOUT_CLASSIFICATION	2.4850884148487633E-6	IMPLEMENTATION
// We do this b/c make_tmpname might be overridden	WITHOUT_CLASSIFICATION	0.9999114634864904	WITHOUT_CLASSIFICATION	8.853651350968164E-5	IMPLEMENTATION
// ???	WITHOUT_CLASSIFICATION	0.9999834994801731	WITHOUT_CLASSIFICATION	1.650051982688638E-5	IMPLEMENTATION
// PID	WITHOUT_CLASSIFICATION	0.999981760833982	WITHOUT_CLASSIFICATION	1.8239166017940127E-5	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999944967302533	WITHOUT_CLASSIFICATION	5.503269746667889E-6	IMPLEMENTATION
// elements and trailing nils	WITHOUT_CLASSIFICATION	0.999973841572427	WITHOUT_CLASSIFICATION	2.615842757311495E-5	IMPLEMENTATION
// Dir::tmpdir	WITHOUT_CLASSIFICATION	0.9993881635822232	WITHOUT_CLASSIFICATION	6.118364177769137E-4	IMPLEMENTATION
// volatile to ensure that initial nil-fill is visible to other threads	WITHOUT_CLASSIFICATION	0.9994093285607109	WITHOUT_CLASSIFICATION	5.906714392891163E-4	IMPLEMENTATION
/* Ruby arrays default to holding 16 elements, so we create an         * ArrayList of the same size if we're not told otherwise         */	WITHOUT_CLASSIFICATION	0.9999981749163536	WITHOUT_CLASSIFICATION	1.8250836465408293E-6	IMPLEMENTATION
/* rb_ary_new2     * just allocates the internal array     */	WITHOUT_CLASSIFICATION	0.9999965891240722	WITHOUT_CLASSIFICATION	3.4108759277543534E-6	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999916990372073	WITHOUT_CLASSIFICATION	8.300962792626283E-6	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999916990372073	WITHOUT_CLASSIFICATION	8.300962792626283E-6	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999916990372073	WITHOUT_CLASSIFICATION	8.300962792626283E-6	IMPLEMENTATION
/* Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour     *      */	WITHOUT_CLASSIFICATION	0.9999808148220279	WITHOUT_CLASSIFICATION	1.9185177972126697E-5	IMPLEMENTATION
/* NEWOBJ and OBJSETUP equivalent     * fastest one, for shared arrays, optional objectspace     */	WITHOUT_CLASSIFICATION	0.9999948910201396	WITHOUT_CLASSIFICATION	5.108979860291598E-6	IMPLEMENTATION
// Create global constants and variables	WITHOUT_CLASSIFICATION	0.9999969222347587	WITHOUT_CLASSIFICATION	3.077765241257297E-6	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9892558724642079	WITHOUT_CLASSIFICATION	0.010744127535792182	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9892558724642079	WITHOUT_CLASSIFICATION	0.010744127535792182	IMPLEMENTATION
// Windows does not support these functions, so we won't even try // This also matches Ruby behavior for JRUBY-2353.	WITHOUT_CLASSIFICATION	0.999215647415573	WITHOUT_CLASSIFICATION	7.843525844270307E-4	IMPLEMENTATION
// There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and // newer one (US/Pacific, America/Los_Angeles). This pattern is to detect // the legacy TZ format in order to convert it to the newer format // understood by Java API.	WITHOUT_CLASSIFICATION	0.9999617153691231	WITHOUT_CLASSIFICATION	3.828463087678361E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9892558724642079	WITHOUT_CLASSIFICATION	0.010744127535792182	IMPLEMENTATION
// 1.9 seems to just do inspect for to_s now	WITHOUT_CLASSIFICATION	0.9999929899061492	WITHOUT_CLASSIFICATION	7.0100938507632E-6	IMPLEMENTATION
// possibly should not in object space	WITHOUT_CLASSIFICATION	0.9998651773971462	WITHOUT_CLASSIFICATION	1.3482260285381696E-4	IMPLEMENTATION
// only fill if there actually will remain trailing storage	WITHOUT_CLASSIFICATION	0.9999853398120486	WITHOUT_CLASSIFICATION	1.4660187951276594E-5	IMPLEMENTATION
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9993881635822232	WITHOUT_CLASSIFICATION	6.118364177769137E-4	IMPLEMENTATION
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9993881635822232	WITHOUT_CLASSIFICATION	6.118364177769137E-4	IMPLEMENTATION
// from DUP_SETUP	WITHOUT_CLASSIFICATION	0.9998905721765187	WITHOUT_CLASSIFICATION	1.0942782348129331E-4	IMPLEMENTATION
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9997388581513181	WITHOUT_CLASSIFICATION	2.6114184868195907E-4	IMPLEMENTATION
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999149336882719	WITHOUT_CLASSIFICATION	8.506631172813961E-5	IMPLEMENTATION
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999149336882719	WITHOUT_CLASSIFICATION	8.506631172813961E-5	IMPLEMENTATION
// Satisfy java.util.List interface (for Java integration)	WITHOUT_CLASSIFICATION	0.999834146931476	WITHOUT_CLASSIFICATION	1.6585306852410234E-4	IMPLEMENTATION
// pre-set for the sake of terminating recursive calls	WITHOUT_CLASSIFICATION	0.9999129565113538	WITHOUT_CLASSIFICATION	8.704348864609452E-5	IMPLEMENTATION
/* root fiber */	WITHOUT_CLASSIFICATION	0.9999031603347227	WITHOUT_CLASSIFICATION	9.683966527728542E-5	IMPLEMENTATION
// GMT+00:00 --> Etc/GMT, see "MRI behavior" // comment below.	WITHOUT_CLASSIFICATION	0.9999389484019453	WITHOUT_CLASSIFICATION	6.105159805474204E-5	IMPLEMENTATION
//  See http://www.gzip.org/zlib/rfc-gzip.html	WITHOUT_CLASSIFICATION	0.9998869636896188	WITHOUT_CLASSIFICATION	1.1303631038119315E-4	IMPLEMENTATION
// extras flag	WITHOUT_CLASSIFICATION	0.9988697076597826	WITHOUT_CLASSIFICATION	0.001130292340217499	IMPLEMENTATION
// Zlib::NO_FLUSH	WITHOUT_CLASSIFICATION	0.9993881635822232	WITHOUT_CLASSIFICATION	6.118364177769137E-4	IMPLEMENTATION
// ...nothing	WITHOUT_CLASSIFICATION	0.9993881635822232	WITHOUT_CLASSIFICATION	6.118364177769137E-4	IMPLEMENTATION
// utility method	WITHOUT_CLASSIFICATION	0.9988489866219852	WITHOUT_CLASSIFICATION	0.0011510133780149028	IMPLEMENTATION
// Prepare LoadService and load path	WITHOUT_CLASSIFICATION	0.999928538153463	WITHOUT_CLASSIFICATION	7.146184653684788E-5	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999944967302533	WITHOUT_CLASSIFICATION	5.503269746667889E-6	IMPLEMENTATION
// flags // 4 bytes of modified time	WITHOUT_CLASSIFICATION	0.9999077906978934	WITHOUT_CLASSIFICATION	9.220930210659985E-5	IMPLEMENTATION
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9998301642962149	WITHOUT_CLASSIFICATION	1.6983570378509614E-4	IMPLEMENTATION
// 1.8 "include?"	WITHOUT_CLASSIFICATION	0.9993881635822232	WITHOUT_CLASSIFICATION	6.118364177769137E-4	IMPLEMENTATION
// any BigInteger is bigger than Fixnum and we don't have FIXABLE	WITHOUT_CLASSIFICATION	0.9998881804252282	WITHOUT_CLASSIFICATION	1.1181957477171934E-4	IMPLEMENTATION
// beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal	WITHOUT_CLASSIFICATION	0.9998970361012359	WITHOUT_CLASSIFICATION	1.0296389876402724E-4	IMPLEMENTATION
// MRI does it!	WITHOUT_CLASSIFICATION	0.9998480514520249	WITHOUT_CLASSIFICATION	1.5194854797497356E-4	IMPLEMENTATION
// won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999900936708892	WITHOUT_CLASSIFICATION	9.906329110856202E-6	IMPLEMENTATION
// it won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999760513903199	WITHOUT_CLASSIFICATION	2.394860968011462E-5	IMPLEMENTATION
// RubyClassPathVariable	WITHOUT_CLASSIFICATION	0.9998830445803648	WITHOUT_CLASSIFICATION	1.1695541963519677E-4	IMPLEMENTATION
// not to be confused with RubyObject's flags	WITHOUT_CLASSIFICATION	0.9985314946626986	WITHOUT_CLASSIFICATION	0.0014685053373013747	IMPLEMENTATION
// second argument is allowed, but ignored (MRI)	WITHOUT_CLASSIFICATION	0.9999544657492979	WITHOUT_CLASSIFICATION	4.5534250702019916E-5	IMPLEMENTATION
// we are presumably running a precompiled class; load directly	WITHOUT_CLASSIFICATION	0.9999041583872129	WITHOUT_CLASSIFICATION	9.58416127871262E-5	IMPLEMENTATION
// terminate; tryCompile will have printed out an error and we're done	WITHOUT_CLASSIFICATION	0.9999861340396159	WITHOUT_CLASSIFICATION	1.386596038401188E-5	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999933881593	WITHOUT_CLASSIFICATION	6.611840699943723E-6	IMPLEMENTATION
// do nothing, this iteration restarts	WITHOUT_CLASSIFICATION	0.999633331974676	WITHOUT_CLASSIFICATION	3.6666802532408566E-4	IMPLEMENTATION
// recheck condition	WITHOUT_CLASSIFICATION	0.999428321278574	WITHOUT_CLASSIFICATION	5.716787214259715E-4	IMPLEMENTATION
// Get the main threadcontext (gets constructed for us)	WITHOUT_CLASSIFICATION	0.9998830888448217	WITHOUT_CLASSIFICATION	1.1691115517824502E-4	IMPLEMENTATION
// Construct key services	WITHOUT_CLASSIFICATION	0.9999017147917351	WITHOUT_CLASSIFICATION	9.828520826500629E-5	IMPLEMENTATION
// initialize the root of the class hierarchy completely	WITHOUT_CLASSIFICATION	0.9999585128130846	WITHOUT_CLASSIFICATION	4.1487186915382326E-5	IMPLEMENTATION
// Construct the top-level execution frame and scope for the main thread	WITHOUT_CLASSIFICATION	0.9997893875233868	WITHOUT_CLASSIFICATION	2.1061247661320617E-4	IMPLEMENTATION
// Initialize all the core classes	WITHOUT_CLASSIFICATION	0.9999120038355064	WITHOUT_CLASSIFICATION	8.79961644936209E-5	IMPLEMENTATION
// Initialize the "dummy" class used as a marker	WITHOUT_CLASSIFICATION	0.9999523703532871	WITHOUT_CLASSIFICATION	4.762964671293492E-5	IMPLEMENTATION
// Initialize Kernel and include into Object	WITHOUT_CLASSIFICATION	0.9999726851370709	WITHOUT_CLASSIFICATION	2.7314862928999568E-5	IMPLEMENTATION
// Object is ready, create top self	WITHOUT_CLASSIFICATION	0.9999324495290772	WITHOUT_CLASSIFICATION	6.75504709227312E-5	IMPLEMENTATION
// Pre-create all the core classes potentially referenced during startup	WITHOUT_CLASSIFICATION	0.999940944192983	WITHOUT_CLASSIFICATION	5.90558070170896E-5	IMPLEMENTATION
// Math depends on all numeric types	WITHOUT_CLASSIFICATION	0.9992730328882736	WITHOUT_CLASSIFICATION	7.269671117264255E-4	IMPLEMENTATION
// depends on IO, FileTest	WITHOUT_CLASSIFICATION	0.999716506774252	WITHOUT_CLASSIFICATION	2.8349322574809036E-4	IMPLEMENTATION
// initialize builtin libraries	WITHOUT_CLASSIFICATION	0.999849328461329	WITHOUT_CLASSIFICATION	1.5067153867099137E-4	IMPLEMENTATION
// Require in all libraries specified on command line	WITHOUT_CLASSIFICATION	0.9999767313673918	WITHOUT_CLASSIFICATION	2.3268632608115463E-5	IMPLEMENTATION
// Bootstrap the top of the hierarchy	WITHOUT_CLASSIFICATION	0.9998164541702255	WITHOUT_CLASSIFICATION	1.835458297744768E-4	IMPLEMENTATION
// we try to get the classloader that loaded JRuby, falling back on System	WITHOUT_CLASSIFICATION	0.9993792459880235	WITHOUT_CLASSIFICATION	6.207540119765161E-4	IMPLEMENTATION
// determine spacing	WITHOUT_CLASSIFICATION	0.9996543121430456	WITHOUT_CLASSIFICATION	3.456878569544016E-4	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999962364975818	WITHOUT_CLASSIFICATION	3.763502418309117E-6	IMPLEMENTATION
// For JSR 223 support: see http://scripting.java.net/	WITHOUT_CLASSIFICATION	0.9998997993290359	WITHOUT_CLASSIFICATION	1.0020067096400019E-4	IMPLEMENTATION
// use this for JRuby-internal finalizers	WITHOUT_CLASSIFICATION	0.9998039138672988	WITHOUT_CLASSIFICATION	1.960861327011658E-4	IMPLEMENTATION
// this method is for finalizers registered via ObjectSpace	WITHOUT_CLASSIFICATION	0.9998044918508368	WITHOUT_CLASSIFICATION	1.955081491631543E-4	IMPLEMENTATION
// new factory methods ------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999535754061757	WITHOUT_CLASSIFICATION	4.6424593824394125E-5	IMPLEMENTATION
//        assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9984786977671692	WITHOUT_CLASSIFICATION	0.0015213022328308709	IMPLEMENTATION
// Equivalent of Data_Wrap_Struct	WITHOUT_CLASSIFICATION	0.9998865315477234	WITHOUT_CLASSIFICATION	1.1346845227654032E-4	IMPLEMENTATION
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999237974878813	WITHOUT_CLASSIFICATION	7.620251211875219E-5	IMPLEMENTATION
// ChannelDescriptors opened by sysopen are cached to avoid collection	WITHOUT_CLASSIFICATION	0.9998042565173203	WITHOUT_CLASSIFICATION	1.957434826798268E-4	IMPLEMENTATION
// Default objects	WITHOUT_CLASSIFICATION	0.9991231911817632	WITHOUT_CLASSIFICATION	8.768088182367073E-4	IMPLEMENTATION
// record separator var, to speed up io ops that use it	WITHOUT_CLASSIFICATION	0.9992751309807675	WITHOUT_CLASSIFICATION	7.248690192325207E-4	IMPLEMENTATION
// former java.lang.System concepts now internalized for MVM	WITHOUT_CLASSIFICATION	0.9999462695040975	WITHOUT_CLASSIFICATION	5.3730495902468173E-5	IMPLEMENTATION
// Java support	WITHOUT_CLASSIFICATION	0.9928683748246774	WITHOUT_CLASSIFICATION	0.007131625175322677	IMPLEMENTATION
// Parser stats	WITHOUT_CLASSIFICATION	0.9993953912446544	WITHOUT_CLASSIFICATION	6.046087553455532E-4	IMPLEMENTATION
// Compilation	WITHOUT_CLASSIFICATION	0.9993881635822232	WITHOUT_CLASSIFICATION	6.118364177769137E-4	IMPLEMENTATION
// can't read non-standard properties	WITHOUT_CLASSIFICATION	0.9998391133403631	WITHOUT_CLASSIFICATION	1.608866596369223E-4	IMPLEMENTATION
// can't create custom classloaders	WITHOUT_CLASSIFICATION	0.9997411687306619	WITHOUT_CLASSIFICATION	2.588312693380706E-4	IMPLEMENTATION
// mutex that controls modifications of user-defined finalizers	WITHOUT_CLASSIFICATION	0.9997364068339081	WITHOUT_CLASSIFICATION	2.635931660919893E-4	IMPLEMENTATION
// mutex that controls modifications of internal finalizers	WITHOUT_CLASSIFICATION	0.9997588796165258	WITHOUT_CLASSIFICATION	2.411203834742791E-4	IMPLEMENTATION
// A thread pool to use for executing this runtime's Ruby threads	WITHOUT_CLASSIFICATION	0.9991123813578326	WITHOUT_CLASSIFICATION	8.876186421673819E-4	IMPLEMENTATION
// A global object lock for class hierarchy mutations	WITHOUT_CLASSIFICATION	0.9999967142218232	WITHOUT_CLASSIFICATION	3.285778176786683E-6	IMPLEMENTATION
// initial spaces // spaces before "at"	WITHOUT_CLASSIFICATION	0.999932530790523	WITHOUT_CLASSIFICATION	6.746920947699041E-5	IMPLEMENTATION
// event name // filename // line numbers should be 1-based	WITHOUT_CLASSIFICATION	0.9999740635634434	WITHOUT_CLASSIFICATION	2.593643655663369E-5	IMPLEMENTATION
// The method is intentionally not public, since it typically should // not be used outside of the core.	WITHOUT_CLASSIFICATION	0.9986524350252763	WITHOUT_CLASSIFICATION	0.0013475649747236352	IMPLEMENTATION
// Note: this field and the following static initializer // must be located be in this order!	WITHOUT_CLASSIFICATION	0.9999788036330977	WITHOUT_CLASSIFICATION	2.1196366902275314E-5	IMPLEMENTATION
// Contains a list of all blocks (as Procs) that should be called when // the runtime environment exits.	WITHOUT_CLASSIFICATION	0.9999908863163779	WITHOUT_CLASSIFICATION	9.113683622109376E-6	IMPLEMENTATION
// quoted-printable	WITHOUT_CLASSIFICATION	0.9993881635822232	WITHOUT_CLASSIFICATION	6.118364177769137E-4	IMPLEMENTATION
// default options	WITHOUT_CLASSIFICATION	0.9998832132081388	WITHOUT_CLASSIFICATION	1.1678679186125596E-4	IMPLEMENTATION
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9993881635822232	WITHOUT_CLASSIFICATION	6.118364177769137E-4	IMPLEMENTATION
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9993881635822232	WITHOUT_CLASSIFICATION	6.118364177769137E-4	IMPLEMENTATION
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9993881635822232	WITHOUT_CLASSIFICATION	6.118364177769137E-4	IMPLEMENTATION
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9993881635822232	WITHOUT_CLASSIFICATION	6.118364177769137E-4	IMPLEMENTATION
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999817067840583	WITHOUT_CLASSIFICATION	1.8293215941744205E-5	IMPLEMENTATION
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999817067840583	WITHOUT_CLASSIFICATION	1.8293215941744205E-5	IMPLEMENTATION
// UTF-8	WITHOUT_CLASSIFICATION	0.999981962286463	WITHOUT_CLASSIFICATION	1.8037713536971815E-5	IMPLEMENTATION
// UTF-8	WITHOUT_CLASSIFICATION	0.999981962286463	WITHOUT_CLASSIFICATION	1.8037713536971815E-5	IMPLEMENTATION
// long name option	WITHOUT_CLASSIFICATION	0.9994902909039927	WITHOUT_CLASSIFICATION	5.097090960073054E-4	IMPLEMENTATION
// conversion	WITHOUT_CLASSIFICATION	0.9996858698819288	WITHOUT_CLASSIFICATION	3.141301180712868E-4	IMPLEMENTATION
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999994416624167	WITHOUT_CLASSIFICATION	5.583375832974384E-6	IMPLEMENTATION
// string doesn't share any resources	WITHOUT_CLASSIFICATION	0.9999948082796604	WITHOUT_CLASSIFICATION	5.1917203396542525E-6	IMPLEMENTATION
// string has it's own ByteList, but it's pointing to a shared buffer (byte[])	WITHOUT_CLASSIFICATION	0.9999986685902713	WITHOUT_CLASSIFICATION	1.3314097286989343E-6	IMPLEMENTATION
// string doesn't have it's own ByteList (values)	WITHOUT_CLASSIFICATION	0.9999791507482231	WITHOUT_CLASSIFICATION	2.084925177688493E-5	IMPLEMENTATION
// ENC_CODERANGE_ASCIIONLY	WITHOUT_CLASSIFICATION	0.9998830445803648	WITHOUT_CLASSIFICATION	1.1695541963519677E-4	IMPLEMENTATION
// rb_enc_str_asciionly_p	WITHOUT_CLASSIFICATION	0.9998830445803648	WITHOUT_CLASSIFICATION	1.1695541963519677E-4	IMPLEMENTATION
// rb_enc_str_coderange	WITHOUT_CLASSIFICATION	0.9998830445803648	WITHOUT_CLASSIFICATION	1.1695541963519677E-4	IMPLEMENTATION
// rb_str_hash_cmp	WITHOUT_CLASSIFICATION	0.9993881635822232	WITHOUT_CLASSIFICATION	6.118364177769137E-4	IMPLEMENTATION
// Deprecated String construction routines	WITHOUT_CLASSIFICATION	0.9998844194460923	WITHOUT_CLASSIFICATION	1.1558055390770809E-4	IMPLEMENTATION
// String construction routines by NOT byte[] buffer and NOT making the target String shared 	WITHOUT_CLASSIFICATION	0.9999812896597796	WITHOUT_CLASSIFICATION	1.8710340220379767E-5	IMPLEMENTATION
/* rb_str_subseq */	WITHOUT_CLASSIFICATION	0.9999075354069781	WITHOUT_CLASSIFICATION	9.246459302188056E-5	IMPLEMENTATION
// no need to assign encoding, same bytelist shared	WITHOUT_CLASSIFICATION	0.9995466775535661	WITHOUT_CLASSIFICATION	4.5332244643387346E-4	IMPLEMENTATION
// if len == 0 then shared empty	WITHOUT_CLASSIFICATION	0.9999971804411744	WITHOUT_CLASSIFICATION	2.8195588256276113E-6	IMPLEMENTATION
/* rb_str_cmp_m */	WITHOUT_CLASSIFICATION	0.9999075354069781	WITHOUT_CLASSIFICATION	9.246459302188056E-5	IMPLEMENTATION
// we limit to int because ByteBuffer can only allocate int sizes	WITHOUT_CLASSIFICATION	0.9995107354487225	WITHOUT_CLASSIFICATION	4.892645512775448E-4	IMPLEMENTATION
// // rb_str_buf_append	WITHOUT_CLASSIFICATION	0.9998830445803648	WITHOUT_CLASSIFICATION	1.1695541963519677E-4	IMPLEMENTATION
// encoding doesn't have to be copied.	WITHOUT_CLASSIFICATION	0.9999560821884789	WITHOUT_CLASSIFICATION	4.39178115211485E-5	IMPLEMENTATION
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9993507748155759	WITHOUT_CLASSIFICATION	6.492251844241277E-4	IMPLEMENTATION
// must not reallocate	WITHOUT_CLASSIFICATION	0.9954795349596369	WITHOUT_CLASSIFICATION	0.004520465040363107	IMPLEMENTATION
// Illegal combination	WITHOUT_CLASSIFICATION	0.9998830445803648	WITHOUT_CLASSIFICATION	1.1695541963519677E-4	IMPLEMENTATION
// use 1.8 impl	WITHOUT_CLASSIFICATION	0.9988644469670954	WITHOUT_CLASSIFICATION	0.0011355530329045355	IMPLEMENTATION
/* RubyString aka rb_string_value */	WITHOUT_CLASSIFICATION	0.9999739061815753	WITHOUT_CLASSIFICATION	2.609381842475408E-5	IMPLEMENTATION
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999731055088057	WITHOUT_CLASSIFICATION	2.689449119428033E-5	IMPLEMENTATION
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999890814388228	WITHOUT_CLASSIFICATION	1.0918561177196822E-5	IMPLEMENTATION
/* len + margin */	WITHOUT_CLASSIFICATION	0.9999234721569151	WITHOUT_CLASSIFICATION	7.652784308490025E-5	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9985966518893483	WITHOUT_CLASSIFICATION	0.001403348110651645	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9985966518893483	WITHOUT_CLASSIFICATION	0.001403348110651645	IMPLEMENTATION
/* copy pre-match substr */	WITHOUT_CLASSIFICATION	0.999992010292235	WITHOUT_CLASSIFICATION	7.989707764966966E-6	IMPLEMENTATION
// string given	WITHOUT_CLASSIFICATION	0.9999360225868827	WITHOUT_CLASSIFICATION	6.397741311727519E-5	IMPLEMENTATION
// hash given	WITHOUT_CLASSIFICATION	0.9990537862982568	WITHOUT_CLASSIFICATION	9.462137017432257E-4	IMPLEMENTATION
// This represents left most digit in a set of incremented // values?  Therefore leftmost numeric must be '1' and not '0' // 999 -> 1000, not 999 -> 0000.  whereas chars should be // zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"	WITHOUT_CLASSIFICATION	0.9999986864891869	WITHOUT_CLASSIFICATION	1.3135108131454825E-6	IMPLEMENTATION
/* substring longer than string */	WITHOUT_CLASSIFICATION	0.9999983688497165	WITHOUT_CLASSIFICATION	1.631150283542655E-6	IMPLEMENTATION
/* rb_str_substr */	WITHOUT_CLASSIFICATION	0.9999075354069781	WITHOUT_CLASSIFICATION	9.246459302188056E-5	IMPLEMENTATION
// nothing	WITHOUT_CLASSIFICATION	0.9999977668604079	WITHOUT_CLASSIFICATION	2.233139592114558E-6	IMPLEMENTATION
// nothing	WITHOUT_CLASSIFICATION	0.9999977668604079	WITHOUT_CLASSIFICATION	2.233139592114558E-6	IMPLEMENTATION
/* rb_str_splice */	WITHOUT_CLASSIFICATION	0.9999075354069781	WITHOUT_CLASSIFICATION	9.246459302188056E-5	IMPLEMENTATION
// TODO: keep cr // TODO: rb_str_splice_0	WITHOUT_CLASSIFICATION	0.7069938282130949	IMPLEMENTATION	0.2930061717869051	WITHOUT_CLASSIFICATION
// keep cr ?	WITHOUT_CLASSIFICATION	0.9993299495125468	WITHOUT_CLASSIFICATION	6.700504874532372E-4	IMPLEMENTATION
// keep cr ?	WITHOUT_CLASSIFICATION	0.9993299495125468	WITHOUT_CLASSIFICATION	6.700504874532372E-4	IMPLEMENTATION
/* wrapped to \0...\0.  search next valid char. */	WITHOUT_CLASSIFICATION	0.9999722204000605	WITHOUT_CLASSIFICATION	2.7779599939468692E-5	IMPLEMENTATION
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9989780675514566	WITHOUT_CLASSIFICATION	0.0010219324485435369	IMPLEMENTATION
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9989780675514566	WITHOUT_CLASSIFICATION	0.0010219324485435369	IMPLEMENTATION
// modified	WITHOUT_CLASSIFICATION	0.9982616140367744	WITHOUT_CLASSIFICATION	0.001738385963225619	IMPLEMENTATION
// modified	WITHOUT_CLASSIFICATION	0.9982616140367744	WITHOUT_CLASSIFICATION	0.001738385963225619	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.9999817067840583	WITHOUT_CLASSIFICATION	1.8293215941744205E-5	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.9999817067840583	WITHOUT_CLASSIFICATION	1.8293215941744205E-5	IMPLEMENTATION
// QTRUE	WITHOUT_CLASSIFICATION	0.9999817067840583	WITHOUT_CLASSIFICATION	1.8293215941744205E-5	IMPLEMENTATION
/* retrieve last replacer */	WITHOUT_CLASSIFICATION	0.9999864527916593	WITHOUT_CLASSIFICATION	1.35472083407699E-5	IMPLEMENTATION
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9955085643148777	WITHOUT_CLASSIFICATION	0.0044914356851224295	IMPLEMENTATION
// long size * bits in byte	WITHOUT_CLASSIFICATION	0.9999982448279003	WITHOUT_CLASSIFICATION	1.7551720995998813E-6	IMPLEMENTATION
// from encoding, special-casing ASCII* to ASCII	WITHOUT_CLASSIFICATION	0.9999690909518557	WITHOUT_CLASSIFICATION	3.0909048144414736E-5	IMPLEMENTATION
// to encoding, same special-casing	WITHOUT_CLASSIFICATION	0.9999045727987101	WITHOUT_CLASSIFICATION	9.542720128985193E-5	IMPLEMENTATION
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999283290411994	WITHOUT_CLASSIFICATION	7.167095880056563E-5	IMPLEMENTATION
// decode from "from" and encode to "to"	WITHOUT_CLASSIFICATION	0.9999782230395579	WITHOUT_CLASSIFICATION	2.1776960442109554E-5	IMPLEMENTATION
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999283290411994	WITHOUT_CLASSIFICATION	7.167095880056563E-5	IMPLEMENTATION
//Kernel is the only Module that doesn't need an implementor	WITHOUT_CLASSIFICATION	0.9993033467479584	WITHOUT_CLASSIFICATION	6.966532520415572E-4	IMPLEMENTATION
// no binding given, use (eval)	WITHOUT_CLASSIFICATION	0.9996375819176412	WITHOUT_CLASSIFICATION	3.624180823587887E-4	IMPLEMENTATION
// interned, OK for "fast" methods	WITHOUT_CLASSIFICATION	0.9999406266603437	WITHOUT_CLASSIFICATION	5.937333965637101E-5	IMPLEMENTATION
// File to be loaded by autoload has already been or is being loaded.	WITHOUT_CLASSIFICATION	0.9999985413586875	WITHOUT_CLASSIFICATION	1.4586413125645733E-6	IMPLEMENTATION
// rb_cstr_to_dbl case	WITHOUT_CLASSIFICATION	0.999803014514703	WITHOUT_CLASSIFICATION	1.9698548529701283E-4	IMPLEMENTATION
// We break if we know this sleep was explicitly woken up/interrupted	WITHOUT_CLASSIFICATION	0.9999129244551636	WITHOUT_CLASSIFICATION	8.70755448365348E-5	IMPLEMENTATION
// exec process, create IO with process	WITHOUT_CLASSIFICATION	0.9998829872842616	WITHOUT_CLASSIFICATION	1.1701271573832185E-4	IMPLEMENTATION
// Zero sleeps forever	WITHOUT_CLASSIFICATION	0.9998839201738642	WITHOUT_CLASSIFICATION	1.1607982613582431E-4	IMPLEMENTATION
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9988880946256267	WITHOUT_CLASSIFICATION	0.0011119053743733098	IMPLEMENTATION
// Explicit zero in MRI returns immediately	WITHOUT_CLASSIFICATION	0.9999897309547034	WITHOUT_CLASSIFICATION	1.0269045296551408E-5	IMPLEMENTATION
// Spurious wakeup-loop	WITHOUT_CLASSIFICATION	0.9998830445803648	WITHOUT_CLASSIFICATION	1.1695541963519677E-4	IMPLEMENTATION
// adjusts paths started with '/' or '\\', on windows.	WITHOUT_CLASSIFICATION	0.9996331107207156	WITHOUT_CLASSIFICATION	3.668892792843114E-4	IMPLEMENTATION
// file not given	WITHOUT_CLASSIFICATION	0.9743622336968708	WITHOUT_CLASSIFICATION	0.025637766303129243	IMPLEMENTATION
// string to eval	WITHOUT_CLASSIFICATION	0.999958388921636	WITHOUT_CLASSIFICATION	4.161107836399329E-5	IMPLEMENTATION
// binding given, use binding's file	WITHOUT_CLASSIFICATION	0.9995266726161881	WITHOUT_CLASSIFICATION	4.733273838118089E-4	IMPLEMENTATION
// ?g  | boolean | True if file1 has the \CF{setgid} bit	WITHOUT_CLASSIFICATION	0.9999952196111842	WITHOUT_CLASSIFICATION	4.780388815715345E-6	IMPLEMENTATION
// bomb out, it's not a binding or a proc	WITHOUT_CLASSIFICATION	0.9952599316660192	WITHOUT_CLASSIFICATION	0.004740068333980742	IMPLEMENTATION
// Ordering of array traversal not important, just intuitive	WITHOUT_CLASSIFICATION	0.9995726924641053	WITHOUT_CLASSIFICATION	4.2730753589475477E-4	IMPLEMENTATION
//Catch active, throw for catch to handle	WITHOUT_CLASSIFICATION	0.9979712757204456	WITHOUT_CLASSIFICATION	0.0020287242795542994	IMPLEMENTATION
// No catch active for this throw	WITHOUT_CLASSIFICATION	0.9999308924572351	WITHOUT_CLASSIFICATION	6.910754276480572E-5	IMPLEMENTATION
// without full tracing, many events will not fire	WITHOUT_CLASSIFICATION	0.9946284776691071	WITHOUT_CLASSIFICATION	0.00537152233089291	IMPLEMENTATION
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9998619473916887	WITHOUT_CLASSIFICATION	1.380526083113938E-4	IMPLEMENTATION
// MRI behavior: use first byte of string value if len > 0	WITHOUT_CLASSIFICATION	0.9999988294787547	WITHOUT_CLASSIFICATION	1.1705212453001274E-6	IMPLEMENTATION
// MRI behavior: now check arg count	WITHOUT_CLASSIFICATION	0.9997922186624332	WITHOUT_CLASSIFICATION	2.0778133756669E-4	IMPLEMENTATION
// ?A  | Time    | Last access time for file1	WITHOUT_CLASSIFICATION	0.9999809332071921	WITHOUT_CLASSIFICATION	1.906679280802766E-5	IMPLEMENTATION
// ?b  | boolean | True if file1 is a block device	WITHOUT_CLASSIFICATION	0.9999943810069698	WITHOUT_CLASSIFICATION	5.618993030248555E-6	IMPLEMENTATION
// ?c  | boolean | True if file1 is a character device	WITHOUT_CLASSIFICATION	0.9999963146909264	WITHOUT_CLASSIFICATION	3.685309073651665E-6	IMPLEMENTATION
// ?C  | Time    | Last change time for file1	WITHOUT_CLASSIFICATION	0.9999939559367564	WITHOUT_CLASSIFICATION	6.044063243614394E-6	IMPLEMENTATION
// ?d  | boolean | True if file1 exists and is a directory	WITHOUT_CLASSIFICATION	0.9999997823570418	WITHOUT_CLASSIFICATION	2.1764295833872577E-7	IMPLEMENTATION
// ?e  | boolean | True if file1 exists	WITHOUT_CLASSIFICATION	0.9999915195849809	WITHOUT_CLASSIFICATION	8.480415019119956E-6	IMPLEMENTATION
// ?f  | boolean | True if file1 exists and is a regular file	WITHOUT_CLASSIFICATION	0.9999931040590411	WITHOUT_CLASSIFICATION	6.895940958919466E-6	IMPLEMENTATION
// ?G  | boolean | True if file1 exists and has a group ownership equal to the caller's group	WITHOUT_CLASSIFICATION	0.9999975001824297	WITHOUT_CLASSIFICATION	2.499817570280012E-6	IMPLEMENTATION
// ?k  | boolean | True if file1 exists and has the sticky bit set	WITHOUT_CLASSIFICATION	0.9999968831894561	WITHOUT_CLASSIFICATION	3.1168105438626215E-6	IMPLEMENTATION
// ?M  | Time    | Last modification time for file1	WITHOUT_CLASSIFICATION	0.9999875024328141	WITHOUT_CLASSIFICATION	1.249756718588806E-5	IMPLEMENTATION
// ?o  | boolean | True if file1 exists and is owned by the caller's effective uid	WITHOUT_CLASSIFICATION	0.9999986626748419	WITHOUT_CLASSIFICATION	1.3373251580582103E-6	IMPLEMENTATION
// ?O  | boolean | True if file1 exists and is owned by the caller's real uid 	WITHOUT_CLASSIFICATION	0.9999976318919002	WITHOUT_CLASSIFICATION	2.3681080997718373E-6	IMPLEMENTATION
// ?p  | boolean | True if file1 exists and is a fifo	WITHOUT_CLASSIFICATION	0.9999978170353842	WITHOUT_CLASSIFICATION	2.1829646158356973E-6	IMPLEMENTATION
// ?r  | boolean | True if file1 is readable by the effective uid/gid of the caller	WITHOUT_CLASSIFICATION	0.999998970233726	WITHOUT_CLASSIFICATION	1.029766273959872E-6	IMPLEMENTATION
// ?s  | int/nil | If file1 has nonzero size, return the size, otherwise nil	WITHOUT_CLASSIFICATION	0.9994229106343642	WITHOUT_CLASSIFICATION	5.77089365635798E-4	IMPLEMENTATION
// ?S  | boolean | True if file1 exists and is a socket	WITHOUT_CLASSIFICATION	0.9999977658696155	WITHOUT_CLASSIFICATION	2.2341303845372205E-6	IMPLEMENTATION
// ?u  | boolean | True if file1 has the setuid bit set	WITHOUT_CLASSIFICATION	0.9999946438182618	WITHOUT_CLASSIFICATION	5.356181738273911E-6	IMPLEMENTATION
// ?x  | boolean | True if file1 exists and is executable by the effective uid/gid	WITHOUT_CLASSIFICATION	0.9999985729620522	WITHOUT_CLASSIFICATION	1.4270379478829363E-6	IMPLEMENTATION
// ?X  | boolean | True if file1 exists and is executable by the real uid/gid	WITHOUT_CLASSIFICATION	0.9999974730304974	WITHOUT_CLASSIFICATION	2.526969502532855E-6	IMPLEMENTATION
// ?z  | boolean | True if file1 exists and has a zero length	WITHOUT_CLASSIFICATION	0.9999977160337421	WITHOUT_CLASSIFICATION	2.2839662579528925E-6	IMPLEMENTATION
// ?=  | boolean | True if the modification times of file1 and file2 are equal	WITHOUT_CLASSIFICATION	0.9999973067545564	WITHOUT_CLASSIFICATION	2.6932454434453306E-6	IMPLEMENTATION
// ?<  | boolean | True if the modification time of file1 is prior to that of file2	WITHOUT_CLASSIFICATION	0.999996210886365	WITHOUT_CLASSIFICATION	3.7891136350020908E-6	IMPLEMENTATION
// ?>  | boolean | True if the modification time of file1 is after that of file2	WITHOUT_CLASSIFICATION	0.9999972931009111	WITHOUT_CLASSIFICATION	2.706899088828156E-6	IMPLEMENTATION
// ?-  | boolean | True if file1 and file2 are identical	WITHOUT_CLASSIFICATION	0.9999958636023256	WITHOUT_CLASSIFICATION	4.13639767433803E-6	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9998236345752434	WITHOUT_CLASSIFICATION	1.763654247566843E-4	IMPLEMENTATION
// Error info is per-thread	WITHOUT_CLASSIFICATION	0.9999561614210706	WITHOUT_CLASSIFICATION	4.3838578929487814E-5	IMPLEMENTATION
// init errorInfo to nil	WITHOUT_CLASSIFICATION	0.9999012341861433	WITHOUT_CLASSIFICATION	9.876581385669125E-5	IMPLEMENTATION
// if we're already aborting, we can receive no further mail	WITHOUT_CLASSIFICATION	0.9999340678198032	WITHOUT_CLASSIFICATION	6.593218019678747E-5	IMPLEMENTATION
// If this thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9995571868058026	WITHOUT_CLASSIFICATION	4.428131941973831E-4	IMPLEMENTATION
// new interrupt, to hopefully wake it out of any blocking IO	WITHOUT_CLASSIFICATION	0.9998626364671296	WITHOUT_CLASSIFICATION	1.3736353287041608E-4	IMPLEMENTATION
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999267146651153	WITHOUT_CLASSIFICATION	7.328533488468232E-5	IMPLEMENTATION
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999267146651153	WITHOUT_CLASSIFICATION	7.328533488468232E-5	IMPLEMENTATION
// JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.999994010032071	WITHOUT_CLASSIFICATION	5.989967928938787E-6	IMPLEMENTATION
// JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999893673739105	WITHOUT_CLASSIFICATION	1.0632626089374038E-5	IMPLEMENTATION
// for Thread::start, which does not call the subclass's initialize	WITHOUT_CLASSIFICATION	0.9983609340339943	WITHOUT_CLASSIFICATION	0.0016390659660057043	IMPLEMENTATION
// JRUBY-3568, inherit threadgroup or use default	WITHOUT_CLASSIFICATION	0.999928266265898	WITHOUT_CLASSIFICATION	7.17337341019261E-5	IMPLEMENTATION
// MRI behavior: value given in seconds; converted to Float; less // than or equal to zero returns immediately; returns nil	WITHOUT_CLASSIFICATION	0.9999931189148524	WITHOUT_CLASSIFICATION	6.8810851476060416E-6	IMPLEMENTATION
// If the target thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9997613021328714	WITHOUT_CLASSIFICATION	2.3869786712861764E-4	IMPLEMENTATION
// We need this loop in order to be able to "unblock" the // join call without actually calling interrupt.	WITHOUT_CLASSIFICATION	0.999990019056253	WITHOUT_CLASSIFICATION	9.980943747098332E-6	IMPLEMENTATION
// attempt to decriticalize all if we're the critical thread	WITHOUT_CLASSIFICATION	0.9999397753016107	WITHOUT_CLASSIFICATION	6.022469838918043E-5	IMPLEMENTATION
// not valid for "dead" state	WITHOUT_CLASSIFICATION	0.9997552683324937	WITHOUT_CLASSIFICATION	2.4473166750631117E-4	IMPLEMENTATION
// If the killee thread is the same as the killer thread, just die	WITHOUT_CLASSIFICATION	0.9999890116060038	WITHOUT_CLASSIFICATION	1.0988393996284124E-5	IMPLEMENTATION
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999511910333714	WITHOUT_CLASSIFICATION	4.880896662857962E-5	IMPLEMENTATION
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999511910333714	WITHOUT_CLASSIFICATION	4.880896662857962E-5	IMPLEMENTATION
// ignore; I don't like doing it, but it seems like we // really just need to make all channels non-blocking by // default and use select when implementing blocking ops, // so if this remains set non-blocking, perhaps it's not // such a big deal...	WITHOUT_CLASSIFICATION	0.9994820831512944	WITHOUT_CLASSIFICATION	5.179168487056059E-4	IMPLEMENTATION
// can't select, just have to do a blocking call	WITHOUT_CLASSIFICATION	0.9997971498220096	WITHOUT_CLASSIFICATION	2.0285017799044234E-4	IMPLEMENTATION
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9997776326590484	WITHOUT_CLASSIFICATION	2.2236734095150643E-4	IMPLEMENTATION
// Create Constants class	WITHOUT_CLASSIFICATION	0.9999690471721968	WITHOUT_CLASSIFICATION	3.095282780317272E-5	IMPLEMENTATION
// Create constants for open flags	WITHOUT_CLASSIFICATION	0.9999938827774695	WITHOUT_CLASSIFICATION	6.117222530562035E-6	IMPLEMENTATION
// Strip off the O_ prefix, so they become File::RDONLY, and so on	WITHOUT_CLASSIFICATION	0.9999521828377005	WITHOUT_CLASSIFICATION	4.781716229960919E-5	IMPLEMENTATION
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999893442907443	WITHOUT_CLASSIFICATION	1.0655709255661825E-5	IMPLEMENTATION
// File::Constants module is included in IO.	WITHOUT_CLASSIFICATION	0.9999864810030905	WITHOUT_CLASSIFICATION	1.3518996909451513E-5	IMPLEMENTATION
// Make sure any existing lock is released before we try and close the file	WITHOUT_CLASSIFICATION	0.9999794037123019	WITHOUT_CLASSIFICATION	2.0596287698158727E-5	IMPLEMENTATION
// null channel always succeeds for all locking operations	WITHOUT_CLASSIFICATION	0.9997369914875703	WITHOUT_CLASSIFICATION	2.6300851242969656E-4	IMPLEMENTATION
// Paths which end in "/" or "\\" must be stripped off.	WITHOUT_CLASSIFICATION	0.9999583356236587	WITHOUT_CLASSIFICATION	4.166437634141835E-5	IMPLEMENTATION
// Special case for handling ACCMODE, since constantine will generate // an invalid value if it is not defined by the platform.	WITHOUT_CLASSIFICATION	0.9999888111043769	WITHOUT_CLASSIFICATION	1.1188895623130789E-5	IMPLEMENTATION
// Return false here	WITHOUT_CLASSIFICATION	0.9997376616787456	WITHOUT_CLASSIFICATION	2.6233832125451397E-4	IMPLEMENTATION
// Return false here	WITHOUT_CLASSIFICATION	0.9997376616787456	WITHOUT_CLASSIFICATION	2.6233832125451397E-4	IMPLEMENTATION
// We're not actually a real file, so we can't flock	WITHOUT_CLASSIFICATION	0.9935595439603888	WITHOUT_CLASSIFICATION	0.006440456039611142	IMPLEMENTATION
// Should we do anything?	WITHOUT_CLASSIFICATION	0.9997682743886787	WITHOUT_CLASSIFICATION	2.3172561132141478E-4	IMPLEMENTATION
/* File class methods */	WITHOUT_CLASSIFICATION	0.9999987791566444	WITHOUT_CLASSIFICATION	1.2208433556235957E-6	IMPLEMENTATION
// MRI-compatible basename handling for windows drive letter paths	WITHOUT_CLASSIFICATION	0.999863790098745	WITHOUT_CLASSIFICATION	1.362099012548902E-4	IMPLEMENTATION
// strip c: away from relative-pathed name	WITHOUT_CLASSIFICATION	0.9999474499910797	WITHOUT_CLASSIFICATION	5.2550008920456635E-5	IMPLEMENTATION
// C:\ is returned unchanged	WITHOUT_CLASSIFICATION	0.9999477588959707	WITHOUT_CLASSIFICATION	5.2241104029423134E-5	IMPLEMENTATION
// -1 no match; 0 it is dot file not extension	WITHOUT_CLASSIFICATION	0.9887714459060527	WITHOUT_CLASSIFICATION	0.011228554093947369	IMPLEMENTATION
// trim trailing slashes	WITHOUT_CLASSIFICATION	0.9998865250317641	WITHOUT_CLASSIFICATION	1.1347496823598816E-4	IMPLEMENTATION
// Dot is not at beginning and not at end of filename. 	WITHOUT_CLASSIFICATION	0.9995469837455339	WITHOUT_CLASSIFICATION	4.530162544661018E-4	IMPLEMENTATION
// Handle ~user paths 	WITHOUT_CLASSIFICATION	0.9998906689155124	WITHOUT_CLASSIFICATION	1.0933108448754237E-4	IMPLEMENTATION
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9997776326590484	WITHOUT_CLASSIFICATION	2.2236734095150643E-4	IMPLEMENTATION
// Include additional path separator // (so that dirname of "C:\file.txt" is  "C:\", not "C:")	WITHOUT_CLASSIFICATION	0.9969917125910982	WITHOUT_CLASSIFICATION	0.003008287408901808	IMPLEMENTATION
// FNFException can be thrown in both cases, when the file // is not found, or when permission is denied.	WITHOUT_CLASSIFICATION	0.9997118396181588	WITHOUT_CLASSIFICATION	2.881603818411745E-4	IMPLEMENTATION
// No directory delimeter.  Rest of string is username	WITHOUT_CLASSIFICATION	0.99999985530997	WITHOUT_CLASSIFICATION	1.446900299842667E-7	IMPLEMENTATION
// If there's a second argument, it's the path to which the first  // argument is relative.	WITHOUT_CLASSIFICATION	0.999854737331158	WITHOUT_CLASSIFICATION	1.4526266884206095E-4	IMPLEMENTATION
// Handle ~user paths.	WITHOUT_CLASSIFICATION	0.9998883178821162	WITHOUT_CLASSIFICATION	1.1168211788388697E-4	IMPLEMENTATION
// If there's no second argument, simply use the working directory  // of the runtime.	WITHOUT_CLASSIFICATION	0.9998948072464912	WITHOUT_CLASSIFICATION	1.051927535089588E-4	IMPLEMENTATION
// Find out which string to check.	WITHOUT_CLASSIFICATION	0.9999686799341407	WITHOUT_CLASSIFICATION	3.132006585932528E-5	IMPLEMENTATION
// Single '~' as whole path to expand	WITHOUT_CLASSIFICATION	0.9999317295666824	WITHOUT_CLASSIFICATION	6.827043331755393E-5	IMPLEMENTATION
// Count number of extra slashes in the beginning of the string.	WITHOUT_CLASSIFICATION	0.999992866688478	WITHOUT_CLASSIFICATION	7.133311521902076E-6	IMPLEMENTATION
// '~user/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999458267645013	WITHOUT_CLASSIFICATION	5.417323549870483E-5	IMPLEMENTATION
// '~/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999633200233612	WITHOUT_CLASSIFICATION	3.667997663874319E-5	IMPLEMENTATION
// Prepare a string with the same number of redundant slashes so that  // we easily can prepend it to the result.	WITHOUT_CLASSIFICATION	0.9999562040411688	WITHOUT_CLASSIFICATION	4.379595883124604E-5	IMPLEMENTATION
// If there are N slashes, then we want N-1.	WITHOUT_CLASSIFICATION	0.999706555484049	WITHOUT_CLASSIFICATION	2.9344451595103376E-4	IMPLEMENTATION
// no canonical path yet or length is zero, and we have a / followed by a dot...	WITHOUT_CLASSIFICATION	0.9999240155044361	WITHOUT_CLASSIFICATION	7.598449556382786E-5	IMPLEMENTATION
// we don't have another slash after this, so replace /. with /	WITHOUT_CLASSIFICATION	0.9984678438125887	WITHOUT_CLASSIFICATION	0.0015321561874112877	IMPLEMENTATION
// we do have another slash; omit both / and . (JRUBY-1606)	WITHOUT_CLASSIFICATION	0.9992706676703778	WITHOUT_CLASSIFICATION	7.293323296223112E-4	IMPLEMENTATION
// do nothing, we should not delete the drive letter	WITHOUT_CLASSIFICATION	0.9948864726456041	WITHOUT_CLASSIFICATION	0.005113527354395851	IMPLEMENTATION
/* rb: check_modifiable */	WITHOUT_CLASSIFICATION	0.9999823323830926	WITHOUT_CLASSIFICATION	1.7667616907353572E-5	IMPLEMENTATION
/* rb: readable */	WITHOUT_CLASSIFICATION	0.9999077104307543	WITHOUT_CLASSIFICATION	9.228956924568363E-5	IMPLEMENTATION
// rename is successful	WITHOUT_CLASSIFICATION	0.9999452710549054	WITHOUT_CLASSIFICATION	5.472894509458112E-5	IMPLEMENTATION
// rename via Java API call wasn't successful, let's try some tricks, similar to MRI 	WITHOUT_CLASSIFICATION	0.9993694851333192	WITHOUT_CLASSIFICATION	6.305148666806813E-4	IMPLEMENTATION
// try to rename one more time	WITHOUT_CLASSIFICATION	0.9991084267330367	WITHOUT_CLASSIFICATION	8.915732669632563E-4	IMPLEMENTATION
// Can we produce IOError which bypasses a close?	WITHOUT_CLASSIFICATION	0.999481551146751	WITHOUT_CLASSIFICATION	5.184488532490577E-4	IMPLEMENTATION
// Fast path since JNA stat is about 10x slower than this	WITHOUT_CLASSIFICATION	0.9999948861712158	WITHOUT_CLASSIFICATION	5.113828784214072E-6	IMPLEMENTATION
// RubyContinuation	WITHOUT_CLASSIFICATION	0.9993881635822232	WITHOUT_CLASSIFICATION	6.118364177769137E-4	IMPLEMENTATION
/*     *  Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq)     *  it doesn't initialize ifNone field     */	WITHOUT_CLASSIFICATION	0.9999993298753828	WITHOUT_CLASSIFICATION	6.701246172795836E-7	IMPLEMENTATION
// 16 ?	WITHOUT_CLASSIFICATION	0.9999848455475592	WITHOUT_CLASSIFICATION	1.5154452440753844E-5	IMPLEMENTATION
// generation count for O(1) clears	WITHOUT_CLASSIFICATION	0.9999393113918335	WITHOUT_CLASSIFICATION	6.0688608166644085E-5	IMPLEMENTATION
// size + 1;	WITHOUT_CLASSIFICATION	0.9997508658347746	WITHOUT_CLASSIFICATION	2.491341652253996E-4	IMPLEMENTATION
// suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen	WITHOUT_CLASSIFICATION	0.9992501294687649	WITHOUT_CLASSIFICATION	7.498705312350386E-4	IMPLEMENTATION
// ------------------------------	WITHOUT_CLASSIFICATION	0.9998277790186165	WITHOUT_CLASSIFICATION	1.7222098138350333E-4	IMPLEMENTATION
// ------------------------------	WITHOUT_CLASSIFICATION	0.9998277790186165	WITHOUT_CLASSIFICATION	1.7222098138350333E-4	IMPLEMENTATION
// put implementation	WITHOUT_CLASSIFICATION	0.9973885731442343	WITHOUT_CLASSIFICATION	0.0026114268557657556	IMPLEMENTATION
// get implementation	WITHOUT_CLASSIFICATION	0.9996388956088748	WITHOUT_CLASSIFICATION	3.611043911252281E-4	IMPLEMENTATION
// specialized for value	WITHOUT_CLASSIFICATION	0.999971439699045	WITHOUT_CLASSIFICATION	2.8560300954935412E-5	IMPLEMENTATION
// delete implementation	WITHOUT_CLASSIFICATION	0.9996899680309325	WITHOUT_CLASSIFICATION	3.100319690675092E-4	IMPLEMENTATION
// n.b. we need to recompute the hash in case the key object was modified	WITHOUT_CLASSIFICATION	0.9999567437081051	WITHOUT_CLASSIFICATION	4.3256291895070886E-5	IMPLEMENTATION
/* ============================     * End of hash internals     * ============================     */	WITHOUT_CLASSIFICATION	0.9999944286620367	WITHOUT_CLASSIFICATION	5.571337963296388E-6	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================     */	WITHOUT_CLASSIFICATION	0.9999944967302533	WITHOUT_CLASSIFICATION	5.503269746667889E-6	IMPLEMENTATION
// update the hash value	WITHOUT_CLASSIFICATION	0.9999766725925703	WITHOUT_CLASSIFICATION	2.3327407429829138E-5	IMPLEMENTATION
// other hash does not contain key	WITHOUT_CLASSIFICATION	0.9906100776450412	WITHOUT_CLASSIFICATION	0.009389922354958759	IMPLEMENTATION
// rb_yield_values(2,...) equivalent	WITHOUT_CLASSIFICATION	0.9996177262043525	WITHOUT_CLASSIFICATION	3.822737956474848E-4	IMPLEMENTATION
// Satisfy java.util.Set interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9998878050415069	WITHOUT_CLASSIFICATION	1.1219495849312138E-4	IMPLEMENTATION
// remain where we are	WITHOUT_CLASSIFICATION	0.9997567386895928	WITHOUT_CLASSIFICATION	2.4326131040714732E-4	IMPLEMENTATION
// We use file test since it is faster than a stat; also euid == uid in Java always	WITHOUT_CLASSIFICATION	0.9999980981223967	WITHOUT_CLASSIFICATION	1.9018776033261326E-6	IMPLEMENTATION
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999237974878813	WITHOUT_CLASSIFICATION	7.620251211875219E-5	IMPLEMENTATION
// once hasNext has been called, we commit to next() returning // the entry it found, even if it were subsequently deleted	WITHOUT_CLASSIFICATION	0.996933005355232	WITHOUT_CLASSIFICATION	0.0030669946447679157	IMPLEMENTATION
// Not exposed by filetest, but so similiar in nature that it is stored here	WITHOUT_CLASSIFICATION	0.999981050424874	WITHOUT_CLASSIFICATION	1.8949575126113174E-5	IMPLEMENTATION
// We do both writable and writable_real through the same method because // in our java process effective and real userid will always be the same.	WITHOUT_CLASSIFICATION	0.9999870397454891	WITHOUT_CLASSIFICATION	1.2960254511016896E-5	IMPLEMENTATION
// first try as directory	WITHOUT_CLASSIFICATION	0.9999908462343394	WITHOUT_CLASSIFICATION	9.153765660573985E-6	IMPLEMENTATION
// next as regular file	WITHOUT_CLASSIFICATION	0.9989907169050197	WITHOUT_CLASSIFICATION	0.0010092830949802903	IMPLEMENTATION
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9996740306988096	WITHOUT_CLASSIFICATION	3.2596930119042786E-4	IMPLEMENTATION
// NIO-based	WITHOUT_CLASSIFICATION	0.9993881635822232	WITHOUT_CLASSIFICATION	6.118364177769137E-4	IMPLEMENTATION
// NIO-based	WITHOUT_CLASSIFICATION	0.9993881635822232	WITHOUT_CLASSIFICATION	6.118364177769137E-4	IMPLEMENTATION
// Stream-based	WITHOUT_CLASSIFICATION	0.9993881635822232	WITHOUT_CLASSIFICATION	6.118364177769137E-4	IMPLEMENTATION
// special constructor that accepts stream, not channel	WITHOUT_CLASSIFICATION	0.9929246907634188	WITHOUT_CLASSIFICATION	0.00707530923658127	IMPLEMENTATION
/*     * We use FILE versus IO to match T_FILE in MRI.     */	WITHOUT_CLASSIFICATION	0.9999994962507284	WITHOUT_CLASSIFICATION	5.037492716921829E-7	IMPLEMENTATION
// Constants for seek	WITHOUT_CLASSIFICATION	0.9999535158750789	WITHOUT_CLASSIFICATION	4.648412492124349E-5	IMPLEMENTATION
// confirm we're not reopening self's channel	WITHOUT_CLASSIFICATION	0.9987636867158665	WITHOUT_CLASSIFICATION	0.0012363132841334886	IMPLEMENTATION
// check if we're a stdio IO, and ensure we're not badly mutilated	WITHOUT_CLASSIFICATION	0.9996474818879416	WITHOUT_CLASSIFICATION	3.525181120584101E-4	IMPLEMENTATION
// dup2 new fd into self to preserve fileno and references to it	WITHOUT_CLASSIFICATION	0.9998241439358482	WITHOUT_CLASSIFICATION	1.7585606415177613E-4	IMPLEMENTATION
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999906958385898	WITHOUT_CLASSIFICATION	9.304161410172967E-6	IMPLEMENTATION
// re-register the descriptor	WITHOUT_CLASSIFICATION	0.9998774966497879	WITHOUT_CLASSIFICATION	1.2250335021212467E-4	IMPLEMENTATION
// since we're not actually duping the incoming channel into our handler, we need to // copy the original sync behavior from the other handler	WITHOUT_CLASSIFICATION	0.9997050047464591	WITHOUT_CLASSIFICATION	2.9499525354099114E-4	IMPLEMENTATION
// re-register	WITHOUT_CLASSIFICATION	0.9993881635822232	WITHOUT_CLASSIFICATION	6.118364177769137E-4	IMPLEMENTATION
// A potentially previously close IO is being 'reopened'.	WITHOUT_CLASSIFICATION	0.9999834984916008	WITHOUT_CLASSIFICATION	1.6501508399098814E-5	IMPLEMENTATION
/*     * Ensure that separator is valid otherwise give it the default paragraph separator.     */	WITHOUT_CLASSIFICATION	0.9999780855837822	WITHOUT_CLASSIFICATION	2.1914416217760707E-5	IMPLEMENTATION
// loop until we see the nth separator char	WITHOUT_CLASSIFICATION	0.9999928555488858	WITHOUT_CLASSIFICATION	7.1444511141228455E-6	IMPLEMENTATION
// if we hit EOF or reached limit then we're done	WITHOUT_CLASSIFICATION	0.9999925333256237	WITHOUT_CLASSIFICATION	7.466674376258126E-6	IMPLEMENTATION
// this is for a range check, near as I can tell	WITHOUT_CLASSIFICATION	0.9995154059737753	WITHOUT_CLASSIFICATION	4.8459402622463106E-4	IMPLEMENTATION
// IO class methods.	WITHOUT_CLASSIFICATION	0.9996979840043261	WITHOUT_CLASSIFICATION	3.0201599567383937E-4	IMPLEMENTATION
// use original modes	WITHOUT_CLASSIFICATION	0.9996667766198004	WITHOUT_CLASSIFICATION	3.332233801995594E-4	IMPLEMENTATION
// See if we already have this descriptor open. // If so then we can mostly share the handler (keep open // file, but possibly change the mode).	WITHOUT_CLASSIFICATION	0.9999946589505441	WITHOUT_CLASSIFICATION	5.341049455934739E-6	IMPLEMENTATION
// redundant, done above as well	WITHOUT_CLASSIFICATION	0.999968295746018	WITHOUT_CLASSIFICATION	3.170425398209791E-5	IMPLEMENTATION
// MRI behavior: swallow StandardErorrs	WITHOUT_CLASSIFICATION	0.999827385104053	WITHOUT_CLASSIFICATION	1.726148959470015E-4	IMPLEMENTATION
// -1 == don't set permissions	WITHOUT_CLASSIFICATION	0.9999660927086417	WITHOUT_CLASSIFICATION	3.390729135823778E-5	IMPLEMENTATION
// isRetained=true	WITHOUT_CLASSIFICATION	0.9993881635822232	WITHOUT_CLASSIFICATION	6.118364177769137E-4	IMPLEMENTATION
// This appears to be some windows-only mode.  On a java platform this is a no-op	WITHOUT_CLASSIFICATION	0.9999639700826117	WITHOUT_CLASSIFICATION	3.602991738838814E-5	IMPLEMENTATION
// if not sync, we switch to write buffered mode	WITHOUT_CLASSIFICATION	0.999209835129228	WITHOUT_CLASSIFICATION	7.901648707718755E-4	IMPLEMENTATION
/*     * Throw bad file descriptor is we can not read on supplied descriptor.     */	WITHOUT_CLASSIFICATION	0.9995535719346831	WITHOUT_CLASSIFICATION	4.464280653168863E-4	IMPLEMENTATION
//Everything written	WITHOUT_CLASSIFICATION	0.99713039235295	WITHOUT_CLASSIFICATION	0.002869607647049969	IMPLEMENTATION
//            return len - n;	WITHOUT_CLASSIFICATION	0.9998021198351075	WITHOUT_CLASSIFICATION	1.9788016489251327E-4	IMPLEMENTATION
// Claims conversion is done via 'to_s' in docs.	WITHOUT_CLASSIFICATION	0.999996758474809	WITHOUT_CLASSIFICATION	3.2415251911058052E-6	IMPLEMENTATION
// Of course this isn't particularly useful.	WITHOUT_CLASSIFICATION	0.9997918063974125	WITHOUT_CLASSIFICATION	2.0819360258750555E-4	IMPLEMENTATION
// Must be back on first line on rewind.	WITHOUT_CLASSIFICATION	0.9997776534588715	WITHOUT_CLASSIFICATION	2.2234654112858425E-4	IMPLEMENTATION
// Register the new descriptor	WITHOUT_CLASSIFICATION	0.9997794321235146	WITHOUT_CLASSIFICATION	2.205678764854143E-4	IMPLEMENTATION
// cleanup, raising errors if any	WITHOUT_CLASSIFICATION	0.9999405851809012	WITHOUT_CLASSIFICATION	5.941481909877565E-5	IMPLEMENTATION
// hmmmm	WITHOUT_CLASSIFICATION	0.9999817067840583	WITHOUT_CLASSIFICATION	1.8293215941744205E-5	IMPLEMENTATION
// I believe Ruby bails out with a "bug" if closing fails	WITHOUT_CLASSIFICATION	0.9998622880044352	WITHOUT_CLASSIFICATION	1.3771199556467898E-4	IMPLEMENTATION
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec. // And why the hell does webrick pass this in as a first argument!!!!!	WITHOUT_CLASSIFICATION	0.9999994495601211	WITHOUT_CLASSIFICATION	5.504398789035426E-7	IMPLEMENTATION
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec.	WITHOUT_CLASSIFICATION	0.9999980353719449	WITHOUT_CLASSIFICATION	1.964628055055895E-6	IMPLEMENTATION
// Length to read	WITHOUT_CLASSIFICATION	0.9998031977008012	WITHOUT_CLASSIFICATION	1.9680229919868023E-4	IMPLEMENTATION
// String/Buffer to read it into	WITHOUT_CLASSIFICATION	0.9999403912533672	WITHOUT_CLASSIFICATION	5.960874663278942E-5	IMPLEMENTATION
// cryptic for the uninitiated...	WITHOUT_CLASSIFICATION	0.9999265204359938	WITHOUT_CLASSIFICATION	7.347956400616703E-5	IMPLEMENTATION
// select until read is ready	WITHOUT_CLASSIFICATION	0.9999648352665637	WITHOUT_CLASSIFICATION	3.516473343637966E-5	IMPLEMENTATION
//        ByteList buffer = null;	WITHOUT_CLASSIFICATION	0.9998560259475096	WITHOUT_CLASSIFICATION	1.439740524904747E-4	IMPLEMENTATION
//            buffer = str.getByteList();	WITHOUT_CLASSIFICATION	0.9998457190754533	WITHOUT_CLASSIFICATION	1.5428092454674013E-4	IMPLEMENTATION
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999790908570186	WITHOUT_CLASSIFICATION	2.090914298140848E-5	IMPLEMENTATION
/* rb: writable */	WITHOUT_CLASSIFICATION	0.9999075354069781	WITHOUT_CLASSIFICATION	9.246459302188056E-5	IMPLEMENTATION
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999790908570186	WITHOUT_CLASSIFICATION	2.090914298140848E-5	IMPLEMENTATION
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999915240069726	WITHOUT_CLASSIFICATION	8.47599302742301E-6	IMPLEMENTATION
// TODO: read into buffer using all the fread logic //        int read = openFile.getMainStream().fread(buffer);	WITHOUT_CLASSIFICATION	0.9542383086310465	WITHOUT_CLASSIFICATION	0.0457616913689535	IMPLEMENTATION
// truncate buffer string to zero, if provided	WITHOUT_CLASSIFICATION	0.9999980709611087	WITHOUT_CLASSIFICATION	1.9290388911853107E-6	IMPLEMENTATION
// TODO: READ_CHECK from MRI	WITHOUT_CLASSIFICATION	0.8190660904799325	WITHOUT_CLASSIFICATION	0.18093390952006758	IMPLEMENTATION
/* class methods for IO */	WITHOUT_CLASSIFICATION	0.999998506835991	WITHOUT_CLASSIFICATION	1.4931640089632982E-6	IMPLEMENTATION
// save blocking state	WITHOUT_CLASSIFICATION	0.99997492620307	WITHOUT_CLASSIFICATION	2.507379692996235E-5	IMPLEMENTATION
// write	WITHOUT_CLASSIFICATION	0.9999830365375376	WITHOUT_CLASSIFICATION	1.6963462462422988E-5	IMPLEMENTATION
// Java's select doesn't do anything about this, so we leave it be.	WITHOUT_CLASSIFICATION	0.9996901757825764	WITHOUT_CLASSIFICATION	3.0982421742365687E-4	IMPLEMENTATION
// make all sockets blocking as configured again // close unregisters all channels, so we can safely reset blocking modes	WITHOUT_CLASSIFICATION	0.9996710558569964	WITHOUT_CLASSIFICATION	3.2894414300360555E-4	IMPLEMENTATION
// FIXME: process options	WITHOUT_CLASSIFICATION	0.999935085573511	WITHOUT_CLASSIFICATION	6.491442648902514E-5	IMPLEMENTATION
// Enebo: annotation processing forced me to do pangea method here...	WITHOUT_CLASSIFICATION	0.9993206346457535	WITHOUT_CLASSIFICATION	6.793653542464868E-4	IMPLEMENTATION
// NIO based pipe	WITHOUT_CLASSIFICATION	0.999425443305901	WITHOUT_CLASSIFICATION	5.745566940991041E-4	IMPLEMENTATION
// not using remove(Object) here to avoid the equals() call	WITHOUT_CLASSIFICATION	0.9935283269944548	WITHOUT_CLASSIFICATION	0.0064716730055452126	IMPLEMENTATION
// raise will also wake the thread from selection	WITHOUT_CLASSIFICATION	0.9999498808786981	WITHOUT_CLASSIFICATION	5.0119121301945965E-5	IMPLEMENTATION
/* may need to handle ENC_CODERANGE_BROKEN */	WITHOUT_CLASSIFICATION	0.9991941092399473	WITHOUT_CLASSIFICATION	8.058907600526934E-4	IMPLEMENTATION
// TODO: rb_usascii_str_new2	WITHOUT_CLASSIFICATION	0.5527206573560971	IMPLEMENTATION	0.4472793426439029	WITHOUT_CLASSIFICATION
// If we know what method was being called, strip everything // before the call. This hides the JRuby and reflection internals.	WITHOUT_CLASSIFICATION	0.9706379347117245	WITHOUT_CLASSIFICATION	0.02936206528827547	IMPLEMENTATION
// The class of this object	WITHOUT_CLASSIFICATION	0.9999743372277456	WITHOUT_CLASSIFICATION	2.5662772254325635E-5	IMPLEMENTATION
// zeroed by jvm	WITHOUT_CLASSIFICATION	0.9997490797268496	WITHOUT_CLASSIFICATION	2.509202731503618E-4	IMPLEMENTATION
//objectClass.defineAnnotatedMethods(BasicObjectMethods.class);	WITHOUT_CLASSIFICATION	0.999162082315616	WITHOUT_CLASSIFICATION	8.37917684384032E-4	IMPLEMENTATION
// JRUBY-4113: callers should not call setTaint on immediate objects	WITHOUT_CLASSIFICATION	0.9547503140974868	WITHOUT_CLASSIFICATION	0.045249685902513125	IMPLEMENTATION
// rb_class_boot	WITHOUT_CLASSIFICATION	0.9993881635822232	WITHOUT_CLASSIFICATION	6.118364177769137E-4	IMPLEMENTATION
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999823323830926	WITHOUT_CLASSIFICATION	1.7667616907353572E-5	IMPLEMENTATION
// 1.9 rb_check_to_integer	WITHOUT_CLASSIFICATION	0.9998830445803648	WITHOUT_CLASSIFICATION	1.1695541963519677E-4	IMPLEMENTATION
// for interface impls	WITHOUT_CLASSIFICATION	0.9999763494086269	WITHOUT_CLASSIFICATION	2.3650591373091175E-5	IMPLEMENTATION
// We're cloning ourselves, so we know the result should be a RubyObject	WITHOUT_CLASSIFICATION	0.9990907706324679	WITHOUT_CLASSIFICATION	9.092293675321365E-4	IMPLEMENTATION
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999765943734963	WITHOUT_CLASSIFICATION	2.3405626503778737E-5	IMPLEMENTATION
// can't use -v and stdin	WITHOUT_CLASSIFICATION	0.999712140264181	WITHOUT_CLASSIFICATION	2.878597358189625E-4	IMPLEMENTATION
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999476915911591	WITHOUT_CLASSIFICATION	5.230840884095554E-5	IMPLEMENTATION
// Equivalent of Data_Get_Struct // This will first check that the object in question is actually a T_DATA equivalent.	WITHOUT_CLASSIFICATION	0.9999857930102809	WITHOUT_CLASSIFICATION	1.4206989719164347E-5	IMPLEMENTATION
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9998272733107829	WITHOUT_CLASSIFICATION	1.7272668921707108E-4	IMPLEMENTATION
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9998272733107829	WITHOUT_CLASSIFICATION	1.7272668921707108E-4	IMPLEMENTATION
// // INSTANCE VARIABLE API METHODS //	WITHOUT_CLASSIFICATION	0.9997868644072568	WITHOUT_CLASSIFICATION	2.1313559274315028E-4	IMPLEMENTATION
// Struct methods	WITHOUT_CLASSIFICATION	0.9997400608575956	WITHOUT_CLASSIFICATION	2.599391424044202E-4	IMPLEMENTATION
//runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);	WITHOUT_CLASSIFICATION	0.9994269701430968	WITHOUT_CLASSIFICATION	5.73029856903196E-4	IMPLEMENTATION
// define access methods.	WITHOUT_CLASSIFICATION	0.9998842520977758	WITHOUT_CLASSIFICATION	1.157479022242106E-4	IMPLEMENTATION
// if we are storing a name as well, index is one too high for values	WITHOUT_CLASSIFICATION	0.9999996321461003	WITHOUT_CLASSIFICATION	3.6785389970948434E-7	IMPLEMENTATION
// Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999842279731519	WITHOUT_CLASSIFICATION	1.5772026848097775E-5	IMPLEMENTATION
// For binding purposes on the newly created struct types	WITHOUT_CLASSIFICATION	0.9986954419656002	WITHOUT_CLASSIFICATION	0.0013045580343997694	IMPLEMENTATION
// OBJ_INFECT        	WITHOUT_CLASSIFICATION	0.9998830445803648	WITHOUT_CLASSIFICATION	1.1695541963519677E-4	IMPLEMENTATION
// These call* assume ThreadContext = receiver.getRuntime().getCurrentContext()	WITHOUT_CLASSIFICATION	0.9997093347654794	WITHOUT_CLASSIFICATION	2.906652345205912E-4	IMPLEMENTATION
// Execute iterateMethod again.	WITHOUT_CLASSIFICATION	0.9999075950617975	WITHOUT_CLASSIFICATION	9.240493820238822E-5	IMPLEMENTATION
/*     * @param nv number of times to cycle or -1 to cycle indefinitely     */	WITHOUT_CLASSIFICATION	0.9999989390384828	WITHOUT_CLASSIFICATION	1.0609615171445857E-6	IMPLEMENTATION
// Atomic ?	WITHOUT_CLASSIFICATION	0.9994930913018113	WITHOUT_CLASSIFICATION	5.069086981886817E-4	IMPLEMENTATION
// Atomic ?	WITHOUT_CLASSIFICATION	0.9994930913018113	WITHOUT_CLASSIFICATION	5.069086981886817E-4	IMPLEMENTATION
// MUST NOT be used across threads	WITHOUT_CLASSIFICATION	0.9999412161427875	WITHOUT_CLASSIFICATION	5.878385721235724E-5	IMPLEMENTATION
// superClass may be null.	WITHOUT_CLASSIFICATION	0.9999349529520383	WITHOUT_CLASSIFICATION	6.504704796175222E-5	IMPLEMENTATION
// Containing class...The parent of Object is null. Object should always be last in chain.	WITHOUT_CLASSIFICATION	0.999997388588709	WITHOUT_CLASSIFICATION	2.6114112910213313E-6	IMPLEMENTATION
// ClassId is the name of the class/module sans where it is located. // If it is null, then it an anonymous class.	WITHOUT_CLASSIFICATION	0.9999699463661867	WITHOUT_CLASSIFICATION	3.0053633813262306E-5	IMPLEMENTATION
// ClassProviders return Java class/module (in #defineOrGetClassUnder and // #defineOrGetModuleUnder) when class/module is opened using colon syntax. 	WITHOUT_CLASSIFICATION	0.9999913019987972	WITHOUT_CLASSIFICATION	8.698001202835813E-6	IMPLEMENTATION
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999886910412208	WITHOUT_CLASSIFICATION	1.1308958779221151E-5	IMPLEMENTATION
// Make sure the module we include does not already exist	WITHOUT_CLASSIFICATION	0.9963223624550234	WITHOUT_CLASSIFICATION	0.0036776375449766876	IMPLEMENTATION
// MRI checks all types first:	WITHOUT_CLASSIFICATION	0.9997493158770977	WITHOUT_CLASSIFICATION	2.5068412290228545E-4	IMPLEMENTATION
// we need full traces, use default (slow) populator	WITHOUT_CLASSIFICATION	0.9994686722436079	WITHOUT_CLASSIFICATION	5.313277563920296E-4	IMPLEMENTATION
// module/singleton methods are all defined public	WITHOUT_CLASSIFICATION	0.9999946954302529	WITHOUT_CLASSIFICATION	5.3045697472214666E-6	IMPLEMENTATION
// See if module is in chain...Cannot match against itself so start at superClass.	WITHOUT_CLASSIFICATION	0.9999999236576985	WITHOUT_CLASSIFICATION	7.634230155806599E-8	IMPLEMENTATION
// We can safely reference methods here instead of doing getMethods() since if we // are adding we are not using a IncludedModuleWrapper.	WITHOUT_CLASSIFICATION	0.9999839250046438	WITHOUT_CLASSIFICATION	1.6074995356126587E-5	IMPLEMENTATION
// we grab serial number first; the worst that will happen is we cache a later // update with an earlier serial number, which would just flush anyway	WITHOUT_CLASSIFICATION	0.9999404567935659	WITHOUT_CLASSIFICATION	5.9543206434054796E-5	IMPLEMENTATION
// update all hierarchies into which this module has been included	WITHOUT_CLASSIFICATION	0.9998986616820991	WITHOUT_CLASSIFICATION	1.0133831790092838E-4	IMPLEMENTATION
// This method is intended only for defining new classes in Ruby code, // so it uses the allocator of the specified superclass or default to // the Object allocator. It should NOT be used to define classes that require a native allocator.	WITHOUT_CLASSIFICATION	0.9999990311835916	WITHOUT_CLASSIFICATION	9.688164084984702E-7	IMPLEMENTATION
// need to skip IncludedModuleWrappers	WITHOUT_CLASSIFICATION	0.9979876741452978	WITHOUT_CLASSIFICATION	0.0020123258547022366	IMPLEMENTATION
// superClazz = null;	WITHOUT_CLASSIFICATION	0.9998728812316535	WITHOUT_CLASSIFICATION	1.2711876834649083E-4	IMPLEMENTATION
// reopen a java class	WITHOUT_CLASSIFICATION	0.9999652921149458	WITHOUT_CLASSIFICATION	3.4707885054148586E-5	IMPLEMENTATION
// This method is intended only for defining new modules in Ruby code	WITHOUT_CLASSIFICATION	0.9999934518849661	WITHOUT_CLASSIFICATION	6.548115033903177E-6	IMPLEMENTATION
// reopen a java module	WITHOUT_CLASSIFICATION	0.9999316770370205	WITHOUT_CLASSIFICATION	6.832296297956413E-5	IMPLEMENTATION
//FIXME warning	WITHOUT_CLASSIFICATION	0.9972854484760454	WITHOUT_CLASSIFICATION	0.002714551523954565	IMPLEMENTATION
// FIXME warning	WITHOUT_CLASSIFICATION	0.9932400186113457	WITHOUT_CLASSIFICATION	0.006759981388654289	IMPLEMENTATION
// a normal block passed to define_method changes to do arity checking; make it a lambda	WITHOUT_CLASSIFICATION	0.9816694418225005	WITHOUT_CLASSIFICATION	0.018330558177499533	IMPLEMENTATION
// for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope	WITHOUT_CLASSIFICATION	0.999993551307536	WITHOUT_CLASSIFICATION	6.448692463957017E-6	IMPLEMENTATION
// just using required is broken...but no more broken than before zsuper refactoring	WITHOUT_CLASSIFICATION	0.9999550612746698	WITHOUT_CLASSIFICATION	4.493872533018353E-5	IMPLEMENTATION
// class and module bodies default to public, so make the block's visibility public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999831774224903	WITHOUT_CLASSIFICATION	1.6822577509664414E-5	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999968014385535	WITHOUT_CLASSIFICATION	3.1985614464793926E-6	IMPLEMENTATION
// MRI error message says Class, even though Module is ok 	WITHOUT_CLASSIFICATION	0.9998415975335753	WITHOUT_CLASSIFICATION	1.5840246642470998E-4	IMPLEMENTATION
// scan class hierarchy for module	WITHOUT_CLASSIFICATION	0.9999756481713526	WITHOUT_CLASSIFICATION	2.4351828647412936E-5	IMPLEMENTATION
/* Module class methods */	WITHOUT_CLASSIFICATION	0.9999957318665512	WITHOUT_CLASSIFICATION	4.268133448786692E-6	IMPLEMENTATION
// Note: we change current frames visibility here because the methods which call // this method are all "fast" (e.g. they do not created their own frame).	WITHOUT_CLASSIFICATION	0.9878614687449104	WITHOUT_CLASSIFICATION	0.01213853125508962	IMPLEMENTATION
// next in hierarchy is an included version of the module we're attempting, // so we skip including it	WITHOUT_CLASSIFICATION	0.9999875820525029	WITHOUT_CLASSIFICATION	1.2417947497180238E-5	IMPLEMENTATION
// if we haven't encountered a real superclass, use the found module as the new inclusion point	WITHOUT_CLASSIFICATION	0.9999355540912932	WITHOUT_CLASSIFICATION	6.444590870685958E-5	IMPLEMENTATION
// build a list of all modules to consider for inclusion	WITHOUT_CLASSIFICATION	0.9999825321028529	WITHOUT_CLASSIFICATION	1.7467897147015413E-5	IMPLEMENTATION
// if the insertion point is a class, update subclass lists	WITHOUT_CLASSIFICATION	0.9999974819773336	WITHOUT_CLASSIFICATION	2.518022666328072E-6	IMPLEMENTATION
// if there's a non-null superclass, we're including into a normal class hierarchy; // update subclass relationships to avoid stale parent/child relationships	WITHOUT_CLASSIFICATION	0.9999960076858029	WITHOUT_CLASSIFICATION	3.992314197070119E-6	IMPLEMENTATION
// ////////////////// CLASS VARIABLE RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9998494600056251	WITHOUT_CLASSIFICATION	1.5053999437496132E-4	IMPLEMENTATION
// ////////////////// CONSTANT RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9998494600056251	WITHOUT_CLASSIFICATION	1.5053999437496132E-4	IMPLEMENTATION
// Note: includes part of fix for JRUBY-1339	WITHOUT_CLASSIFICATION	0.9999534821138213	WITHOUT_CLASSIFICATION	4.6517886178769386E-5	IMPLEMENTATION
// ////////////////// CLASS VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.999814240650084	WITHOUT_CLASSIFICATION	1.8575934991607235E-4	IMPLEMENTATION
// Wrong Parameter ?	WITHOUT_CLASSIFICATION	0.9995017540590494	WITHOUT_CLASSIFICATION	4.982459409506004E-4	IMPLEMENTATION
// not actually called anywhere (all known uses call the fast version)	WITHOUT_CLASSIFICATION	0.9990721056165013	WITHOUT_CLASSIFICATION	9.278943834986753E-4	IMPLEMENTATION
// Not that is loaded loop around to resolve it next pass	WITHOUT_CLASSIFICATION	0.9981977724469161	WITHOUT_CLASSIFICATION	0.0018022275530838194	IMPLEMENTATION
// if adding a module under a constant name, set that module's basename to the constant name	WITHOUT_CLASSIFICATION	0.9998514094055648	WITHOUT_CLASSIFICATION	1.4859059443509236E-4	IMPLEMENTATION
// Fix for JRUBY-1339 - search hierarchy for constant	WITHOUT_CLASSIFICATION	0.9999458230244439	WITHOUT_CLASSIFICATION	5.417697555609792E-5	IMPLEMENTATION
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999158671271615	WITHOUT_CLASSIFICATION	8.413287283848832E-5	IMPLEMENTATION
// removes and returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999486703198924	WITHOUT_CLASSIFICATION	5.132968010749095E-5	IMPLEMENTATION
// we can't rename a file while it's open in windows	WITHOUT_CLASSIFICATION	0.9999694585137298	WITHOUT_CLASSIFICATION	3.0541486270267045E-5	IMPLEMENTATION
//reopen	WITHOUT_CLASSIFICATION	0.99991120461732	WITHOUT_CLASSIFICATION	8.879538267995327E-5	IMPLEMENTATION
// ARGF methods	WITHOUT_CLASSIFICATION	0.9997400608575956	WITHOUT_CLASSIFICATION	2.599391424044202E-4	IMPLEMENTATION
//         data.currentFile.callMethod(context, "lineno=", line);	WITHOUT_CLASSIFICATION	0.9998445909994328	WITHOUT_CLASSIFICATION	1.5540900056726657E-4	IMPLEMENTATION
// one optional, one required args	WITHOUT_CLASSIFICATION	0.9994335645407867	WITHOUT_CLASSIFICATION	5.664354592132822E-4	IMPLEMENTATION
// one optional and no required args	WITHOUT_CLASSIFICATION	0.999531654398461	WITHOUT_CLASSIFICATION	4.6834560153896626E-4	IMPLEMENTATION
// try to get errno value out of the class	WITHOUT_CLASSIFICATION	0.9999833685478139	WITHOUT_CLASSIFICATION	1.663145218610083E-5	IMPLEMENTATION
// we got a valid errno value	WITHOUT_CLASSIFICATION	0.9999688879941869	WITHOUT_CLASSIFICATION	3.1112005813072344E-5	IMPLEMENTATION
// Ensure we're not running on GCJ, since it's not supported and leads to weird errors	WITHOUT_CLASSIFICATION	0.9993439880551657	WITHOUT_CLASSIFICATION	6.560119448343934E-4	IMPLEMENTATION
// print out as a nice Ruby backtrace	WITHOUT_CLASSIFICATION	0.9999534817935095	WITHOUT_CLASSIFICATION	4.651820649047773E-5	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.999859841371815	WITHOUT_CLASSIFICATION	1.4015862818492517E-4	IMPLEMENTATION
// set thread context JRuby classloader here, for the main thread	WITHOUT_CLASSIFICATION	0.9995736235683916	WITHOUT_CLASSIFICATION	4.2637643160840723E-4	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9997745459509421	WITHOUT_CLASSIFICATION	2.254540490579211E-4	IMPLEMENTATION
// no script to run, return success below	WITHOUT_CLASSIFICATION	0.9999064317497337	WITHOUT_CLASSIFICATION	9.356825026630293E-5	IMPLEMENTATION
// Skip /usr/bin/env if it's first	WITHOUT_CLASSIFICATION	0.9999118964448876	WITHOUT_CLASSIFICATION	8.810355511237917E-5	IMPLEMENTATION
// Skip any assignments if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999985673738501	WITHOUT_CLASSIFICATION	1.4326261500227463E-6	IMPLEMENTATION
// Skip any commandline args if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999986424563105	WITHOUT_CLASSIFICATION	1.357543689373579E-6	IMPLEMENTATION
// ignore error	WITHOUT_CLASSIFICATION	0.9988586182297994	WITHOUT_CLASSIFICATION	0.0011413817702005551	IMPLEMENTATION
// ////////////////// COMMON CONSTANT / CVAR METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.999906881588991	WITHOUT_CLASSIFICATION	9.311841100891568E-5	IMPLEMENTATION
// ////////////////// INTERNAL MODULE VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.999814240650084	WITHOUT_CLASSIFICATION	1.8575934991607235E-4	IMPLEMENTATION
// ////////////////// LOW-LEVEL CONSTANT INTERFACE //////////////// // // fetch/store/list constants for this module //	WITHOUT_CLASSIFICATION	0.9999493303234451	WITHOUT_CLASSIFICATION	5.066967655490527E-5	IMPLEMENTATION
// odd	WITHOUT_CLASSIFICATION	0.9999817067840583	WITHOUT_CLASSIFICATION	1.8293215941744205E-5	IMPLEMENTATION
// JRubyClient	WITHOUT_CLASSIFICATION	0.9993881635822232	WITHOUT_CLASSIFICATION	6.118364177769137E-4	IMPLEMENTATION
/*     * x = mantissa * 2 ** exponent     *     * Where mantissa is in the range of [.5, 1)     *     */	WITHOUT_CLASSIFICATION	0.9999997933528871	WITHOUT_CLASSIFICATION	2.0664711294237073E-7	IMPLEMENTATION
// Make mantissa same sign so we only have one code path.	WITHOUT_CLASSIFICATION	0.9996034243669665	WITHOUT_CLASSIFICATION	3.965756330335352E-4	IMPLEMENTATION
// Increase value to hit lower range.	WITHOUT_CLASSIFICATION	0.9999250293677002	WITHOUT_CLASSIFICATION	7.497063229982808E-5	IMPLEMENTATION
/*     * r = x * 2 ** y     */	WITHOUT_CLASSIFICATION	0.9999984295470742	WITHOUT_CLASSIFICATION	1.570452925836124E-6	IMPLEMENTATION
/*  0! */	WITHOUT_CLASSIFICATION	0.9999975138883891	WITHOUT_CLASSIFICATION	2.48611161088339E-6	IMPLEMENTATION
/*  1! */	WITHOUT_CLASSIFICATION	0.9999975138883891	WITHOUT_CLASSIFICATION	2.48611161088339E-6	IMPLEMENTATION
/*  2! */	WITHOUT_CLASSIFICATION	0.9999975138883891	WITHOUT_CLASSIFICATION	2.48611161088339E-6	IMPLEMENTATION
/*  3! */	WITHOUT_CLASSIFICATION	0.9999975138883891	WITHOUT_CLASSIFICATION	2.48611161088339E-6	IMPLEMENTATION
/*  4! */	WITHOUT_CLASSIFICATION	0.9999975138883891	WITHOUT_CLASSIFICATION	2.48611161088339E-6	IMPLEMENTATION
/*  5! */	WITHOUT_CLASSIFICATION	0.9999975138883891	WITHOUT_CLASSIFICATION	2.48611161088339E-6	IMPLEMENTATION
/*  6! */	WITHOUT_CLASSIFICATION	0.9999975138883891	WITHOUT_CLASSIFICATION	2.48611161088339E-6	IMPLEMENTATION
/*  7! */	WITHOUT_CLASSIFICATION	0.9999975138883891	WITHOUT_CLASSIFICATION	2.48611161088339E-6	IMPLEMENTATION
/*  8! */	WITHOUT_CLASSIFICATION	0.9999975138883891	WITHOUT_CLASSIFICATION	2.48611161088339E-6	IMPLEMENTATION
/*  9! */	WITHOUT_CLASSIFICATION	0.9999975138883891	WITHOUT_CLASSIFICATION	2.48611161088339E-6	IMPLEMENTATION
/* 11! */	WITHOUT_CLASSIFICATION	0.9999972368064602	WITHOUT_CLASSIFICATION	2.7631935398027776E-6	IMPLEMENTATION
/* 12! */	WITHOUT_CLASSIFICATION	0.9999972368064602	WITHOUT_CLASSIFICATION	2.7631935398027776E-6	IMPLEMENTATION
/* 13! */	WITHOUT_CLASSIFICATION	0.9999972368064602	WITHOUT_CLASSIFICATION	2.7631935398027776E-6	IMPLEMENTATION
/* 15! */	WITHOUT_CLASSIFICATION	0.9999972368064602	WITHOUT_CLASSIFICATION	2.7631935398027776E-6	IMPLEMENTATION
/* 16! */	WITHOUT_CLASSIFICATION	0.9999972368064602	WITHOUT_CLASSIFICATION	2.7631935398027776E-6	IMPLEMENTATION
/* 17! */	WITHOUT_CLASSIFICATION	0.9999972368064602	WITHOUT_CLASSIFICATION	2.7631935398027776E-6	IMPLEMENTATION
/* 19! */	WITHOUT_CLASSIFICATION	0.9999972368064602	WITHOUT_CLASSIFICATION	2.7631935398027776E-6	IMPLEMENTATION
/* 20! */	WITHOUT_CLASSIFICATION	0.9999972368064602	WITHOUT_CLASSIFICATION	2.7631935398027776E-6	IMPLEMENTATION
/* 21! */	WITHOUT_CLASSIFICATION	0.9999972368064602	WITHOUT_CLASSIFICATION	2.7631935398027776E-6	IMPLEMENTATION
// Static constants	WITHOUT_CLASSIFICATION	0.9997012715198258	WITHOUT_CLASSIFICATION	2.9872848017425415E-4	IMPLEMENTATION
// Clean-up string representation so that it could be understood // by Java's BigDecimal. Not terribly efficient for now. // 1. MRI allows d and D as exponent separators	WITHOUT_CLASSIFICATION	0.9999949104743566	WITHOUT_CLASSIFICATION	5.089525643438027E-6	IMPLEMENTATION
// 2. MRI allows underscores anywhere	WITHOUT_CLASSIFICATION	0.9998704525069121	WITHOUT_CLASSIFICATION	1.2954749308785463E-4	IMPLEMENTATION
// 3. MRI ignores the trailing junk	WITHOUT_CLASSIFICATION	0.9998119665344349	WITHOUT_CLASSIFICATION	1.8803346556512323E-4	IMPLEMENTATION
// MRI behavior: -0 and +0 are two different things	WITHOUT_CLASSIFICATION	0.9997500425944158	WITHOUT_CLASSIFICATION	2.4995740558416367E-4	IMPLEMENTATION
// Java and MRI definitions of modulo are different.	WITHOUT_CLASSIFICATION	0.9999814420612682	WITHOUT_CLASSIFICATION	1.8557938731785974E-5	IMPLEMENTATION
// Java and MRI definitions of remainder are the same.	WITHOUT_CLASSIFICATION	0.9999703037955273	WITHOUT_CLASSIFICATION	2.9696204472741654E-5	IMPLEMENTATION
// Note: MRI has a very non-trivial way of calculating the precision, // so we use very simple approximation here:	WITHOUT_CLASSIFICATION	0.9997533634200346	WITHOUT_CLASSIFICATION	2.466365799654249E-4	IMPLEMENTATION
// Iteration variables, for the square root x and the reciprocal v // initial x:  x0 ~ sqrt() // initial v:  v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999697263471096	WITHOUT_CLASSIFICATION	3.0273652890396907E-5	IMPLEMENTATION
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9994209160386427	WITHOUT_CLASSIFICATION	5.790839613573165E-4	IMPLEMENTATION
// TODO: why this: .setResult();	WITHOUT_CLASSIFICATION	0.9047575332107302	IMPLEMENTATION	0.09524246678926986	WITHOUT_CLASSIFICATION
// integer division	WITHOUT_CLASSIFICATION	0.9993955599200315	WITHOUT_CLASSIFICATION	6.044400799685103E-4	IMPLEMENTATION
// MRI behavior: "If digits is 0, the result is the same as the / operator."	WITHOUT_CLASSIFICATION	0.9999913201993063	WITHOUT_CLASSIFICATION	8.679800693657604E-6	IMPLEMENTATION
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9998830445803648	WITHOUT_CLASSIFICATION	1.1695541963519677E-4	IMPLEMENTATION
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9998830445803648	WITHOUT_CLASSIFICATION	1.1695541963519677E-4	IMPLEMENTATION
// Java and MRI definitions of divmod are different.        	WITHOUT_CLASSIFICATION	0.9999814420612682	WITHOUT_CLASSIFICATION	1.8557938731785974E-5	IMPLEMENTATION
// JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it	WITHOUT_CLASSIFICATION	0.9936855346523422	WITHOUT_CLASSIFICATION	0.006314465347657731	IMPLEMENTATION
// shift the decimal point just to the right of the digit to be rounded to (divide by 10**(abs(scale))) // -1 -> 10's digit, -2 -> 100's digit, etc.	WITHOUT_CLASSIFICATION	0.9999989553794165	WITHOUT_CLASSIFICATION	1.044620583537349E-6	IMPLEMENTATION
// ...round to that digit	WITHOUT_CLASSIFICATION	0.999713174146729	WITHOUT_CLASSIFICATION	2.868258532710065E-4	IMPLEMENTATION
// ...and shift the result back to the left (multiply by 10**(abs(scale)))	WITHOUT_CLASSIFICATION	0.999935475635493	WITHOUT_CLASSIFICATION	6.45243645069855E-5	IMPLEMENTATION
//this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are	WITHOUT_CLASSIFICATION	0.9997196318775114	WITHOUT_CLASSIFICATION	2.8036812248855323E-4	IMPLEMENTATION
// sign	WITHOUT_CLASSIFICATION	0.9999817067840583	WITHOUT_CLASSIFICATION	1.8293215941744205E-5	IMPLEMENTATION
// significant digits and exponent	WITHOUT_CLASSIFICATION	0.9999083018102114	WITHOUT_CLASSIFICATION	9.169818978862251E-5	IMPLEMENTATION
// normalize the value	WITHOUT_CLASSIFICATION	0.9999250104317946	WITHOUT_CLASSIFICATION	7.498956820533555E-5	IMPLEMENTATION
// base	WITHOUT_CLASSIFICATION	0.9999936365122624	WITHOUT_CLASSIFICATION	6.363487737549301E-6	IMPLEMENTATION
// NOTE: MRI's sqrt precision is limited by 100, // but we allow values more than 100.	WITHOUT_CLASSIFICATION	0.9999913100132989	WITHOUT_CLASSIFICATION	8.68998670108585E-6	IMPLEMENTATION
// just in case, add a bit of extra precision	WITHOUT_CLASSIFICATION	0.9999988724392239	WITHOUT_CLASSIFICATION	1.1275607761530991E-6	IMPLEMENTATION
// eh?!	WITHOUT_CLASSIFICATION	0.9999817067840583	WITHOUT_CLASSIFICATION	1.8293215941744205E-5	IMPLEMENTATION
// Note: #fix has only no-arg form, but truncate allows optional parameter.	WITHOUT_CLASSIFICATION	0.999977413146703	WITHOUT_CLASSIFICATION	2.2586853296985537E-5	IMPLEMENTATION
// General number and precision checking	WITHOUT_CLASSIFICATION	0.9999015355405008	WITHOUT_CLASSIFICATION	9.846445949929756E-5	IMPLEMENTATION
// the requested precision	WITHOUT_CLASSIFICATION	0.9999181316119585	WITHOUT_CLASSIFICATION	8.186838804141842E-5	IMPLEMENTATION
// Proc class	WITHOUT_CLASSIFICATION	0.9996518866776748	WITHOUT_CLASSIFICATION	3.4811332232517E-4	IMPLEMENTATION
//.append("  -x[directory]   strip off text before #!ruby line and perhaps cd to directory\n")	WITHOUT_CLASSIFICATION	0.999930987728287	WITHOUT_CLASSIFICATION	6.901227171291281E-5	IMPLEMENTATION
// even shift.. // ..floors to 62 or 63 bit BigInteger	WITHOUT_CLASSIFICATION	0.9998073992532802	WITHOUT_CLASSIFICATION	1.9260074671975647E-4	IMPLEMENTATION
// 5 -> 2, -5 -> -3 need half a scale more..	WITHOUT_CLASSIFICATION	0.9999687479029149	WITHOUT_CLASSIFICATION	3.1252097085103545E-5	IMPLEMENTATION
// ..where 100 -> 10 shifts the scale	WITHOUT_CLASSIFICATION	0.9999875448160723	WITHOUT_CLASSIFICATION	1.2455183927775132E-5	IMPLEMENTATION
// Initial x - use double root - multiply by halfBack to unshift - set new scale	WITHOUT_CLASSIFICATION	0.9999904950296951	WITHOUT_CLASSIFICATION	9.504970304885738E-6	IMPLEMENTATION
// x0 ~ sqrt()	WITHOUT_CLASSIFICATION	0.999392123910695	WITHOUT_CLASSIFICATION	6.07876089304999E-4	IMPLEMENTATION
// for prec 15 root x0 must surely be OK // return small prec roots without iterations	WITHOUT_CLASSIFICATION	0.9999032978457031	WITHOUT_CLASSIFICATION	9.670215429690377E-5	IMPLEMENTATION
// Initial v - the reciprocal // v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.999634605615594	WITHOUT_CLASSIFICATION	3.6539438440591265E-4	IMPLEMENTATION
// Collect iteration precisions beforehand	WITHOUT_CLASSIFICATION	0.999840872025212	WITHOUT_CLASSIFICATION	1.591279747879769E-4	IMPLEMENTATION
// assume nInit = 16 <= prec	WITHOUT_CLASSIFICATION	0.999890900182645	WITHOUT_CLASSIFICATION	1.090998173549679E-4	IMPLEMENTATION
// The loop of "Square Root by Coupled Newton Iteration"	WITHOUT_CLASSIFICATION	0.999988672596958	WITHOUT_CLASSIFICATION	1.132740304208688E-5	IMPLEMENTATION
// Increase precision - next iteration supplies n exact digits	WITHOUT_CLASSIFICATION	0.9992499766459374	WITHOUT_CLASSIFICATION	7.500233540626612E-4	IMPLEMENTATION
// Next x                                        // e = d - x^2	WITHOUT_CLASSIFICATION	0.9998087305061586	WITHOUT_CLASSIFICATION	1.9126949384132375E-4	IMPLEMENTATION
// x += e*v     ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999673723323852	WITHOUT_CLASSIFICATION	3.262766761476072E-5	IMPLEMENTATION
// root x is ready!	WITHOUT_CLASSIFICATION	0.999787663341451	WITHOUT_CLASSIFICATION	2.12336658549025E-4	IMPLEMENTATION
// Next v                                        // g = 1 - 2*x*v	WITHOUT_CLASSIFICATION	0.9996585429697151	WITHOUT_CLASSIFICATION	3.4145703028475656E-4	IMPLEMENTATION
// v += g*v     ~ 1/2/sqrt()	WITHOUT_CLASSIFICATION	0.999948903110404	WITHOUT_CLASSIFICATION	5.109688959600074E-5	IMPLEMENTATION
// RubyBigdecimal	WITHOUT_CLASSIFICATION	0.9993881635822232	WITHOUT_CLASSIFICATION	6.118364177769137E-4	IMPLEMENTATION
// c: bind_eval	WITHOUT_CLASSIFICATION	0.9993881635822232	WITHOUT_CLASSIFICATION	6.118364177769137E-4	IMPLEMENTATION
/*  ================     *  Module Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999943561617074	WITHOUT_CLASSIFICATION	5.643838292557349E-6	IMPLEMENTATION
// from CommandlineParser	WITHOUT_CLASSIFICATION	0.9999790908570186	WITHOUT_CLASSIFICATION	2.090914298140848E-5	IMPLEMENTATION
// This property is a Boolean, to allow three values, so it can match MRI's nil, false and true	WITHOUT_CLASSIFICATION	0.9998232051916383	WITHOUT_CLASSIFICATION	1.7679480836180902E-4	IMPLEMENTATION
// default ClassCache using jitMax as a soft upper bound	WITHOUT_CLASSIFICATION	0.9999918975578694	WITHOUT_CLASSIFICATION	8.10244213055333E-6	IMPLEMENTATION
// Until we get a little more solid on 1.9 support we will only run interpreted mode	WITHOUT_CLASSIFICATION	0.9625363558498298	WITHOUT_CLASSIFICATION	0.03746364415017031	IMPLEMENTATION
// Setting the loader needs to reset the class cache	WITHOUT_CLASSIFICATION	0.9974747274039534	WITHOUT_CLASSIFICATION	0.0025252725960466975	IMPLEMENTATION
// try the normal property first	WITHOUT_CLASSIFICATION	0.9996958128883462	WITHOUT_CLASSIFICATION	3.0418711165383297E-4	IMPLEMENTATION
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9998812026905491	WITHOUT_CLASSIFICATION	1.1879730945078334E-4	IMPLEMENTATION
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9998812026905491	WITHOUT_CLASSIFICATION	1.1879730945078334E-4	IMPLEMENTATION
// try loading from classloader resources	WITHOUT_CLASSIFICATION	0.9999416514324588	WITHOUT_CLASSIFICATION	5.834856754118956E-5	IMPLEMENTATION
// otherwise fall back on system temp location	WITHOUT_CLASSIFICATION	0.9814886674244123	WITHOUT_CLASSIFICATION	0.0185113325755877	IMPLEMENTATION
// We require the home directory to be absolute	WITHOUT_CLASSIFICATION	0.9999835267777499	WITHOUT_CLASSIFICATION	1.6473222250024495E-5	IMPLEMENTATION
//consume the file name	WITHOUT_CLASSIFICATION	0.9984176225953164	WITHOUT_CLASSIFICATION	0.001582377404683566	IMPLEMENTATION
// Specify something that can't separate	WITHOUT_CLASSIFICATION	0.9998786070179716	WITHOUT_CLASSIFICATION	1.213929820284198E-4	IMPLEMENTATION
// try cwd first	WITHOUT_CLASSIFICATION	0.9992020192681307	WITHOUT_CLASSIFICATION	7.979807318692654E-4	IMPLEMENTATION
// ruby interpreter compatibilty // Usage: ruby [switches] [--] [programfile] [arguments])	WITHOUT_CLASSIFICATION	0.9998272973754244	WITHOUT_CLASSIFICATION	1.727026245755873E-4	IMPLEMENTATION
// KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 // if Ruby 2.0 encoding pragmas are implemented, this will need to change	WITHOUT_CLASSIFICATION	0.9999794827587182	WITHOUT_CLASSIFICATION	2.051724128184568E-5	IMPLEMENTATION
// @JRubyMethod(name = "complex?")	WITHOUT_CLASSIFICATION	0.9997988253236265	WITHOUT_CLASSIFICATION	2.011746763734585E-4	IMPLEMENTATION
// @JRubyMethod(name = "exact?")	WITHOUT_CLASSIFICATION	0.9997988253236265	WITHOUT_CLASSIFICATION	2.011746763734585E-4	IMPLEMENTATION
// @JRubyMethod(name = "inexact?")	WITHOUT_CLASSIFICATION	0.9997988253236265	WITHOUT_CLASSIFICATION	2.011746763734585E-4	IMPLEMENTATION
// symbol string *must* be interned	WITHOUT_CLASSIFICATION	0.9999954767684521	WITHOUT_CLASSIFICATION	4.523231547888702E-6	IMPLEMENTATION
//        assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";	WITHOUT_CLASSIFICATION	0.9984786977671692	WITHOUT_CLASSIFICATION	0.0015213022328308709	IMPLEMENTATION
/* Symbol class methods.     *      */	WITHOUT_CLASSIFICATION	0.9999947183416148	WITHOUT_CLASSIFICATION	5.281658385188715E-6	IMPLEMENTATION
// TODO: 1.9 rb_enc_symname_p	WITHOUT_CLASSIFICATION	0.5527206573560971	IMPLEMENTATION	0.4472793426439029	WITHOUT_CLASSIFICATION
// This is needed to unpack stuff	WITHOUT_CLASSIFICATION	0.729727899100501	WITHOUT_CLASSIFICATION	0.2702721008994991	IMPLEMENTATION
// we already confirmed above that length > 0	WITHOUT_CLASSIFICATION	0.9980393710927585	WITHOUT_CLASSIFICATION	0.0019606289072414285	IMPLEMENTATION
// *must* be power of 2!	WITHOUT_CLASSIFICATION	0.9999689078132366	WITHOUT_CLASSIFICATION	3.109218676340298E-5	IMPLEMENTATION
// note all fields are final -- rehash creates new entries when necessary. // as documented in java.util.concurrent.ConcurrentHashMap.java, that will // statistically affect only a small percentage (< 20%) of entries for a given rehash.	WITHOUT_CLASSIFICATION	0.9999958115353177	WITHOUT_CLASSIFICATION	4.188464682266643E-6	IMPLEMENTATION
//            assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9984786977671692	WITHOUT_CLASSIFICATION	0.0015213022328308709	IMPLEMENTATION
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999082681242513	WITHOUT_CLASSIFICATION	9.173187574869853E-5	IMPLEMENTATION
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999082681242513	WITHOUT_CLASSIFICATION	9.173187574869853E-5	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9993881635822232	WITHOUT_CLASSIFICATION	6.118364177769137E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9993881635822232	WITHOUT_CLASSIFICATION	6.118364177769137E-4	IMPLEMENTATION
// backwards-compatibility, but threadsafe now	WITHOUT_CLASSIFICATION	0.999962417527952	WITHOUT_CLASSIFICATION	3.758247204795805E-5	IMPLEMENTATION
//  Single node on list	WITHOUT_CLASSIFICATION	0.9997695602396236	WITHOUT_CLASSIFICATION	2.3043976037643115E-4	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.99994069520258	WITHOUT_CLASSIFICATION	5.930479741993892E-5	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9998153229885568	WITHOUT_CLASSIFICATION	1.8467701144313676E-4	IMPLEMENTATION
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9955085643148777	WITHOUT_CLASSIFICATION	0.0044914356851224295	IMPLEMENTATION
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9988943459082583	WITHOUT_CLASSIFICATION	0.001105654091741613	IMPLEMENTATION
// not so backwards-compatible here, but no one should have been // calling this anyway.	WITHOUT_CLASSIFICATION	0.9976310600291518	WITHOUT_CLASSIFICATION	0.0023689399708481823	IMPLEMENTATION
// Profile	WITHOUT_CLASSIFICATION	0.9999833734111897	WITHOUT_CLASSIFICATION	1.6626588810382274E-5	IMPLEMENTATION
//static private final String TRANSLIT = "//translit";	WITHOUT_CLASSIFICATION	0.9991036132102789	WITHOUT_CLASSIFICATION	8.963867897212176E-4	IMPLEMENTATION
// treat start and end as start...end for end >= 0, start..end for end < 0	WITHOUT_CLASSIFICATION	0.9999059318814654	WITHOUT_CLASSIFICATION	9.406811853468304E-5	IMPLEMENTATION
// invalid ranges result in an empty string	WITHOUT_CLASSIFICATION	0.9999999306844332	WITHOUT_CLASSIFICATION	6.931556685378263E-8	IMPLEMENTATION
// Methods of the Nil Class (nil_*):	WITHOUT_CLASSIFICATION	0.9999631289567986	WITHOUT_CLASSIFICATION	3.687104320127992E-5	IMPLEMENTATION
// Has read/write been closed or is it still open for business	WITHOUT_CLASSIFICATION	0.9995842931218166	WITHOUT_CLASSIFICATION	4.157068781833883E-4	IMPLEMENTATION
// Support IO modes that this object was opened with	WITHOUT_CLASSIFICATION	0.9999342867813078	WITHOUT_CLASSIFICATION	6.571321869224326E-5	IMPLEMENTATION
// must let original string know we're modifying, so shared buffers aren't damaged	WITHOUT_CLASSIFICATION	0.9998144266100418	WITHOUT_CLASSIFICATION	1.8557338995827037E-4	IMPLEMENTATION
// reset the state	WITHOUT_CLASSIFICATION	0.9983990867242268	WITHOUT_CLASSIFICATION	0.0016009132757732324	IMPLEMENTATION
// Tainting here if we ever want it. (secure 4)	WITHOUT_CLASSIFICATION	0.9995561377962138	WITHOUT_CLASSIFICATION	4.438622037862144E-4	IMPLEMENTATION
// rb_match_busy	WITHOUT_CLASSIFICATION	0.9993881635822232	WITHOUT_CLASSIFICATION	6.118364177769137E-4	IMPLEMENTATION
//str is frozen	WITHOUT_CLASSIFICATION	0.9984607262135159	WITHOUT_CLASSIFICATION	0.0015392737864840876	IMPLEMENTATION
// MRI also does a pointer comparison here	WITHOUT_CLASSIFICATION	0.9999407277636438	WITHOUT_CLASSIFICATION	5.927223635613726E-5	IMPLEMENTATION
// JRubyServer	WITHOUT_CLASSIFICATION	0.9993881635822232	WITHOUT_CLASSIFICATION	6.118364177769137E-4	IMPLEMENTATION
// Class.allocate object is not allocatable before it is initialized	WITHOUT_CLASSIFICATION	0.9989557142245935	WITHOUT_CLASSIFICATION	0.001044285775406548	IMPLEMENTATION
// boot the Object class 	WITHOUT_CLASSIFICATION	0.9999597642678735	WITHOUT_CLASSIFICATION	4.0235732126548876E-5	IMPLEMENTATION
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999765943734963	WITHOUT_CLASSIFICATION	2.3405626503778737E-5	IMPLEMENTATION
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999886910412208	WITHOUT_CLASSIFICATION	1.1308958779221151E-5	IMPLEMENTATION
// undo check	WITHOUT_CLASSIFICATION	0.9994447472878405	WITHOUT_CLASSIFICATION	5.552527121595069E-4	IMPLEMENTATION
// This is a non-standard method; have we decided to start extending Ruby? //classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));	WITHOUT_CLASSIFICATION	0.9998532062047509	WITHOUT_CLASSIFICATION	1.4679379524905852E-4	IMPLEMENTATION
// boot the Module and Class classes	WITHOUT_CLASSIFICATION	0.9999627476586199	WITHOUT_CLASSIFICATION	3.725234138011888E-5	IMPLEMENTATION
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.99943987556665	WITHOUT_CLASSIFICATION	5.60124433350057E-4	IMPLEMENTATION
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9997828087734456	WITHOUT_CLASSIFICATION	2.1719122655441302E-4	IMPLEMENTATION
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9997828087734456	WITHOUT_CLASSIFICATION	2.1719122655441302E-4	IMPLEMENTATION
// could be pulled down to RubyClass in future // rb_class_boot	WITHOUT_CLASSIFICATION	0.9999966855434939	WITHOUT_CLASSIFICATION	3.3144565061829754E-6	IMPLEMENTATION
// remove us from old superclass's child classes	WITHOUT_CLASSIFICATION	0.999989677131306	WITHOUT_CLASSIFICATION	1.0322868693917957E-5	IMPLEMENTATION
// add us to new superclass's child classes	WITHOUT_CLASSIFICATION	0.9998773149233634	WITHOUT_CLASSIFICATION	1.2268507663652813E-4	IMPLEMENTATION
// update all subclasses	WITHOUT_CLASSIFICATION	0.9999763916202401	WITHOUT_CLASSIFICATION	2.360837975993423E-5	IMPLEMENTATION
// fields to hold Ruby and RubyClass references	WITHOUT_CLASSIFICATION	0.9998003667358971	WITHOUT_CLASSIFICATION	1.9963326410291353E-4	IMPLEMENTATION
// static initializing method	WITHOUT_CLASSIFICATION	0.9995953255816127	WITHOUT_CLASSIFICATION	4.046744183873055E-4	IMPLEMENTATION
// standard constructor that accepts Ruby, RubyClass	WITHOUT_CLASSIFICATION	0.9997673946996936	WITHOUT_CLASSIFICATION	2.3260530030646466E-4	IMPLEMENTATION
// no-arg constructor using static references to Ruby and RubyClass	WITHOUT_CLASSIFICATION	0.9999501810541418	WITHOUT_CLASSIFICATION	4.981894585824515E-5	IMPLEMENTATION
// non-signature signature with just IRubyObject	WITHOUT_CLASSIFICATION	0.9999583907728402	WITHOUT_CLASSIFICATION	4.1609227159844945E-5	IMPLEMENTATION
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999981743073597	WITHOUT_CLASSIFICATION	1.8256926403186112E-6	IMPLEMENTATION
// self // method name	WITHOUT_CLASSIFICATION	0.9993967834354066	WITHOUT_CLASSIFICATION	6.032165645933985E-4	IMPLEMENTATION
// the default allocator	WITHOUT_CLASSIFICATION	0.9999699448974287	WITHOUT_CLASSIFICATION	3.0055102571308912E-5	IMPLEMENTATION
// Equivalent of T_DATA	WITHOUT_CLASSIFICATION	0.9999231705502291	WITHOUT_CLASSIFICATION	7.682944977091338E-5	IMPLEMENTATION
// do nothing, leave empty	WITHOUT_CLASSIFICATION	0.999942047176622	WITHOUT_CLASSIFICATION	5.795282337801233E-5	IMPLEMENTATION
// Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9999420119787241	WITHOUT_CLASSIFICATION	5.798802127598479E-5	IMPLEMENTATION
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999994416624167	WITHOUT_CLASSIFICATION	5.583375832974384E-6	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9997541185451827	WITHOUT_CLASSIFICATION	2.4588145481728224E-4	IMPLEMENTATION
// Make sure all arguments are modules before calling the callbacks	WITHOUT_CLASSIFICATION	0.9999837599826775	WITHOUT_CLASSIFICATION	1.6240017322447215E-5	IMPLEMENTATION
// MRI extends in order from last to first	WITHOUT_CLASSIFICATION	0.9999970561566068	WITHOUT_CLASSIFICATION	2.9438433931727768E-6	IMPLEMENTATION
// NOTE: Serialization is primarily supported for testing purposes, and there is no general // guarantee that serialization will work correctly. Specifically, instance variables pointing // at symbols, threads, modules, classes, and other unserializable types are not detected.	WITHOUT_CLASSIFICATION	0.999900891403697	WITHOUT_CLASSIFICATION	9.910859630301363E-5	IMPLEMENTATION
// write out ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999600655754041	WITHOUT_CLASSIFICATION	3.9934424595881885E-5	IMPLEMENTATION
// rest in ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999914704207608	WITHOUT_CLASSIFICATION	8.529579239279696E-6	IMPLEMENTATION
// 0x3fff_ffff // -0x4000_0000	WITHOUT_CLASSIFICATION	0.9998830445803648	WITHOUT_CLASSIFICATION	1.1695541963519677E-4	IMPLEMENTATION
// a gotcha	WITHOUT_CLASSIFICATION	0.9995824290143398	WITHOUT_CLASSIFICATION	4.1757098566016886E-4	IMPLEMENTATION
// Java / and % are not the same as ruby	WITHOUT_CLASSIFICATION	0.999805300622055	WITHOUT_CLASSIFICATION	1.9469937794502304E-4	IMPLEMENTATION
// A gotcha for Long.MIN_VALUE: value = -value	WITHOUT_CLASSIFICATION	0.9998930897734173	WITHOUT_CLASSIFICATION	1.0691022658268726E-4	IMPLEMENTATION
// Piece of mri rb_to_id	WITHOUT_CLASSIFICATION	0.9999231705502291	WITHOUT_CLASSIFICATION	7.682944977091338E-5	IMPLEMENTATION
// Java Doubles are 64 bit long:            	WITHOUT_CLASSIFICATION	0.9999370157038534	WITHOUT_CLASSIFICATION	6.298429614667444E-5	IMPLEMENTATION
// Double.MAX_EXPONENT since Java 1.6            	WITHOUT_CLASSIFICATION	0.9999420119787241	WITHOUT_CLASSIFICATION	5.798802127598479E-5	IMPLEMENTATION
// don't override Numeric#div !	WITHOUT_CLASSIFICATION	0.9998529190360681	WITHOUT_CLASSIFICATION	1.4708096393181545E-4	IMPLEMENTATION
// Modelled after c ruby implementation (java /,% not same as ruby)	WITHOUT_CLASSIFICATION	0.9958576826965387	WITHOUT_CLASSIFICATION	0.0041423173034612895	IMPLEMENTATION
// MRI behavior:	WITHOUT_CLASSIFICATION	0.9993885594050904	WITHOUT_CLASSIFICATION	6.114405949096152E-4	IMPLEMENTATION
// Numeric.equal            	WITHOUT_CLASSIFICATION	0.9998830445803648	WITHOUT_CLASSIFICATION	1.1695541963519677E-4	IMPLEMENTATION
// provider is not available	WITHOUT_CLASSIFICATION	0.9975854517525444	WITHOUT_CLASSIFICATION	0.002414548247455626	IMPLEMENTATION
// bouncy castle doesn't support algorithm	WITHOUT_CLASSIFICATION	0.9968859134062927	WITHOUT_CLASSIFICATION	0.0031140865937072768	IMPLEMENTATION
// fall back to system JCA providers	WITHOUT_CLASSIFICATION	0.9991397214396991	WITHOUT_CLASSIFICATION	8.602785603010445E-4	IMPLEMENTATION
// RubyDigest	WITHOUT_CLASSIFICATION	0.9993881635822232	WITHOUT_CLASSIFICATION	6.118364177769137E-4	IMPLEMENTATION
// ENEBO: Can these be fast?	WITHOUT_CLASSIFICATION	0.9998996311556274	WITHOUT_CLASSIFICATION	1.0036884437257865E-4	IMPLEMENTATION
// synchronize on the RubyThread for threadgroup updates	WITHOUT_CLASSIFICATION	0.9998721721150496	WITHOUT_CLASSIFICATION	1.2782788495040626E-4	IMPLEMENTATION
// we only add live threads	WITHOUT_CLASSIFICATION	0.999729026527346	WITHOUT_CLASSIFICATION	2.7097347265394705E-4	IMPLEMENTATION
// use same ClassIndex as metaclass, since we're technically still of that type	WITHOUT_CLASSIFICATION	0.9998882383884177	WITHOUT_CLASSIFICATION	1.1176161158235899E-4	IMPLEMENTATION
// handle everything after -- as arguments to the jruby process	WITHOUT_CLASSIFICATION	0.9997168001480645	WITHOUT_CLASSIFICATION	2.83199851935517E-4	IMPLEMENTATION
// JRubyService	WITHOUT_CLASSIFICATION	0.9993881635822232	WITHOUT_CLASSIFICATION	6.118364177769137E-4	IMPLEMENTATION
// while	WITHOUT_CLASSIFICATION	0.9999857127183327	WITHOUT_CLASSIFICATION	1.4287281667420369E-5	IMPLEMENTATION
/* \OOO */	WITHOUT_CLASSIFICATION	0.9999972368064602	WITHOUT_CLASSIFICATION	2.7631935398027776E-6	IMPLEMENTATION
// CRuby uses sprintf(buf, "%.*g", FLOAT_DIG, d); // This pattern adjusts the output of String.pattern("%g") to mimic // the C version.	WITHOUT_CLASSIFICATION	0.9999100900964376	WITHOUT_CLASSIFICATION	8.99099035624255E-5	IMPLEMENTATION
// mask off "once" flag	WITHOUT_CLASSIFICATION	0.9998916078283054	WITHOUT_CLASSIFICATION	1.0839217169450746E-4	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999280130780334	WITHOUT_CLASSIFICATION	7.198692196653802E-5	IMPLEMENTATION
// internal usage (Complex/Rational)	WITHOUT_CLASSIFICATION	0.9999371763932957	WITHOUT_CLASSIFICATION	6.282360670431322E-5	IMPLEMENTATION
// silent ?	WITHOUT_CLASSIFICATION	0.9994930913018113	WITHOUT_CLASSIFICATION	5.069086981886817E-4	IMPLEMENTATION
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999972368064602	WITHOUT_CLASSIFICATION	2.7631935398027776E-6	IMPLEMENTATION
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999823323830926	WITHOUT_CLASSIFICATION	1.7667616907353572E-5	IMPLEMENTATION
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999075354069781	WITHOUT_CLASSIFICATION	9.246459302188056E-5	IMPLEMENTATION
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999075354069781	WITHOUT_CLASSIFICATION	9.246459302188056E-5	IMPLEMENTATION
/* \O, \OO, \OOO or backref */	WITHOUT_CLASSIFICATION	0.9999834012685191	WITHOUT_CLASSIFICATION	1.6598731480915057E-5	IMPLEMENTATION
// MBCLEN_NEEDMORE_P	WITHOUT_CLASSIFICATION	0.9993881635822232	WITHOUT_CLASSIFICATION	6.118364177769137E-4	IMPLEMENTATION
// MBCLEN_INVALID_P	WITHOUT_CLASSIFICATION	0.9993881635822232	WITHOUT_CLASSIFICATION	6.118364177769137E-4	IMPLEMENTATION
// Unicode is can be only 21 bits long, int is enough	WITHOUT_CLASSIFICATION	0.9998699135740865	WITHOUT_CLASSIFICATION	1.3008642591357753E-4	IMPLEMENTATION
/* Surrogates */	WITHOUT_CLASSIFICATION	0.9999075354069781	WITHOUT_CLASSIFICATION	9.246459302188056E-5	IMPLEMENTATION
// do not load the class if not used	WITHOUT_CLASSIFICATION	0.9992848126456013	WITHOUT_CLASSIFICATION	7.151873543987128E-4	IMPLEMENTATION
/* \0, \0O, \0OO */	WITHOUT_CLASSIFICATION	0.9999075354069781	WITHOUT_CLASSIFICATION	9.246459302188056E-5	IMPLEMENTATION
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999972368064602	WITHOUT_CLASSIFICATION	2.7631935398027776E-6	IMPLEMENTATION
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999075354069781	WITHOUT_CLASSIFICATION	9.246459302188056E-5	IMPLEMENTATION
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999823323830926	WITHOUT_CLASSIFICATION	1.7667616907353572E-5	IMPLEMENTATION
/* \\u{H HH HHH HHHH HHHHH HHHHHH ...} */	WITHOUT_CLASSIFICATION	0.9999739061815753	WITHOUT_CLASSIFICATION	2.609381842475408E-5	IMPLEMENTATION
/* \\uHHHH */	WITHOUT_CLASSIFICATION	0.9999075354069781	WITHOUT_CLASSIFICATION	9.246459302188056E-5	IMPLEMENTATION
/* \p{Hiragana} */	WITHOUT_CLASSIFICATION	0.9999075354069781	WITHOUT_CLASSIFICATION	9.246459302188056E-5	IMPLEMENTATION
// inner switch	WITHOUT_CLASSIFICATION	0.999466605792146	WITHOUT_CLASSIFICATION	5.33394207854121E-4	IMPLEMENTATION
// newInstance here	WITHOUT_CLASSIFICATION	0.9987698182116855	WITHOUT_CLASSIFICATION	0.00123018178831438	IMPLEMENTATION
// rb_reg_raise	WITHOUT_CLASSIFICATION	0.9993881635822232	WITHOUT_CLASSIFICATION	6.118364177769137E-4	IMPLEMENTATION
// rb_reg_desc	WITHOUT_CLASSIFICATION	0.9993881635822232	WITHOUT_CLASSIFICATION	6.118364177769137E-4	IMPLEMENTATION
// rb_enc_reg_raise	WITHOUT_CLASSIFICATION	0.9993881635822232	WITHOUT_CLASSIFICATION	6.118364177769137E-4	IMPLEMENTATION
// rb_enc_reg_error_desc	WITHOUT_CLASSIFICATION	0.9998830445803648	WITHOUT_CLASSIFICATION	1.1695541963519677E-4	IMPLEMENTATION
// rb_reg_initialize_str	WITHOUT_CLASSIFICATION	0.9998830445803648	WITHOUT_CLASSIFICATION	1.1695541963519677E-4	IMPLEMENTATION
// rb_reg_initialize	WITHOUT_CLASSIFICATION	0.9993881635822232	WITHOUT_CLASSIFICATION	6.118364177769137E-4	IMPLEMENTATION
// JRUBY-3625: delay setting backref until the MatchData is completely initialized	WITHOUT_CLASSIFICATION	0.9999861413632128	WITHOUT_CLASSIFICATION	1.385863678727601E-5	IMPLEMENTATION
// rb_reg_expr_str	WITHOUT_CLASSIFICATION	0.9993881635822232	WITHOUT_CLASSIFICATION	6.118364177769137E-4	IMPLEMENTATION
// option_to_str	WITHOUT_CLASSIFICATION	0.9993881635822232	WITHOUT_CLASSIFICATION	6.118364177769137E-4	IMPLEMENTATION
// Don't initialize with class // Don't put in object space and don't taint	WITHOUT_CLASSIFICATION	0.9999870689336702	WITHOUT_CLASSIFICATION	1.2931066329746395E-5	IMPLEMENTATION
// args should be before block	WITHOUT_CLASSIFICATION	0.9999405279654753	WITHOUT_CLASSIFICATION	5.947203452465705E-5	IMPLEMENTATION
// args should be at end	WITHOUT_CLASSIFICATION	0.9999489171924293	WITHOUT_CLASSIFICATION	5.108280757074359E-5	IMPLEMENTATION
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9988964198723359	WITHOUT_CLASSIFICATION	0.001103580127664109	IMPLEMENTATION
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9988964198723359	WITHOUT_CLASSIFICATION	0.001103580127664109	IMPLEMENTATION
// skip anything not related to jruby	WITHOUT_CLASSIFICATION	0.9647540758261265	WITHOUT_CLASSIFICATION	0.0352459241738735	IMPLEMENTATION
// start a new populator	WITHOUT_CLASSIFICATION	0.99995229524871	WITHOUT_CLASSIFICATION	4.770475129008235E-5	IMPLEMENTATION
// check for frame field reads or writes	WITHOUT_CLASSIFICATION	0.9999262219715521	WITHOUT_CLASSIFICATION	7.37780284479404E-5	IMPLEMENTATION
// add all names for this annotation	WITHOUT_CLASSIFICATION	0.9998513391265715	WITHOUT_CLASSIFICATION	1.4866087342837325E-4	IMPLEMENTATION
// no annotated methods found, skip	WITHOUT_CLASSIFICATION	0.9996737529241878	WITHOUT_CLASSIFICATION	3.262470758121898E-4	IMPLEMENTATION
// write out a static initializer for frame names, so it only fires once	WITHOUT_CLASSIFICATION	0.9999736434010582	WITHOUT_CLASSIFICATION	2.6356598941740567E-5	IMPLEMENTATION
// single method, use normal logic	WITHOUT_CLASSIFICATION	0.9991602680091529	WITHOUT_CLASSIFICATION	8.397319908469737E-4	IMPLEMENTATION
// multimethod, new logic	WITHOUT_CLASSIFICATION	0.999915348659463	WITHOUT_CLASSIFICATION	8.465134053704131E-5	IMPLEMENTATION
// declared type returns the qualified name without $ for inner classes!!!	WITHOUT_CLASSIFICATION	0.999925893159	WITHOUT_CLASSIFICATION	7.410684099995938E-5	IMPLEMENTATION
// inner class, use $ to delimit	WITHOUT_CLASSIFICATION	0.9997129874415515	WITHOUT_CLASSIFICATION	2.870125584484864E-4	IMPLEMENTATION
//                        RubyModule singletonClass = module.getSingletonClass();	WITHOUT_CLASSIFICATION	0.9998189947093606	WITHOUT_CLASSIFICATION	1.8100529063939664E-4	IMPLEMENTATION
//                }	WITHOUT_CLASSIFICATION	0.9994805860884536	WITHOUT_CLASSIFICATION	5.194139115463865E-4	IMPLEMENTATION
// fallback on non-pregenerated logic	WITHOUT_CLASSIFICATION	0.9997077662375653	WITHOUT_CLASSIFICATION	2.9223376243478916E-4	IMPLEMENTATION
// refresh call adapter, since it matters if this is iter-based or not	WITHOUT_CLASSIFICATION	0.9989168789715254	WITHOUT_CLASSIFICATION	0.0010831210284746153	IMPLEMENTATION
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9138566125607785	WITHOUT_CLASSIFICATION	0.08614338743922147	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.999431391890446	WITHOUT_CLASSIFICATION	5.686081095538633E-4	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.999759332890383	WITHOUT_CLASSIFICATION	2.4066710961704213E-4	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9997589095028012	WITHOUT_CLASSIFICATION	2.4109049719883778E-4	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9997589095028012	WITHOUT_CLASSIFICATION	2.4109049719883778E-4	IMPLEMENTATION
// colon3	WITHOUT_CLASSIFICATION	0.9999817067840583	WITHOUT_CLASSIFICATION	1.8293215941744205E-5	IMPLEMENTATION
// Colon3	WITHOUT_CLASSIFICATION	0.9999817067840583	WITHOUT_CLASSIFICATION	1.8293215941744205E-5	IMPLEMENTATION
// array created for rescue args doesn't need to be in ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999973438440182	WITHOUT_CLASSIFICATION	2.6561559817460407E-6	IMPLEMENTATION
// For b.foo	WITHOUT_CLASSIFICATION	0.9984727276210655	WITHOUT_CLASSIFICATION	0.0015272723789344304	IMPLEMENTATION
// instance config for the script run	WITHOUT_CLASSIFICATION	0.9999552794644673	WITHOUT_CLASSIFICATION	4.472053553278597E-5	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9997589095028012	WITHOUT_CLASSIFICATION	2.4109049719883778E-4	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9997589095028012	WITHOUT_CLASSIFICATION	2.4109049719883778E-4	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999849903527567	WITHOUT_CLASSIFICATION	1.5009647243354268E-5	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999849903527567	WITHOUT_CLASSIFICATION	1.5009647243354268E-5	IMPLEMENTATION
//RubyModule module = context.getRubyClass();	WITHOUT_CLASSIFICATION	0.9989074514172814	WITHOUT_CLASSIFICATION	0.0010925485827185557	IMPLEMENTATION
// For 'b.foo'	WITHOUT_CLASSIFICATION	0.9984727276210655	WITHOUT_CLASSIFICATION	0.0015272723789344304	IMPLEMENTATION
// We define an actual list to get around bug in java integration (1387115)	WITHOUT_CLASSIFICATION	0.999999676155616	WITHOUT_CLASSIFICATION	3.2384438395781256E-7	IMPLEMENTATION
// something in here is used to build up ruby stack trace...	WITHOUT_CLASSIFICATION	0.9999954428722858	WITHOUT_CLASSIFICATION	4.557127714176774E-6	IMPLEMENTATION
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9998695763113816	WITHOUT_CLASSIFICATION	1.304236886184127E-4	IMPLEMENTATION
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9998695763113816	WITHOUT_CLASSIFICATION	1.304236886184127E-4	IMPLEMENTATION
// do nothing, allow loop to retry	WITHOUT_CLASSIFICATION	0.9997127363801447	WITHOUT_CLASSIFICATION	2.872636198552913E-4	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9996507087342127	WITHOUT_CLASSIFICATION	3.4929126578733534E-4	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9998292432815291	WITHOUT_CLASSIFICATION	1.7075671847091535E-4	IMPLEMENTATION
// never visited, should be fine	WITHOUT_CLASSIFICATION	0.9972859315889394	WITHOUT_CLASSIFICATION	0.0027140684110606357	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999849903527567	WITHOUT_CLASSIFICATION	1.5009647243354268E-5	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999251772318761	WITHOUT_CLASSIFICATION	7.48227681239341E-5	IMPLEMENTATION
// If we have more than one argument, then make sure the array is not ObjectSpaced.	WITHOUT_CLASSIFICATION	0.9029549413251784	WITHOUT_CLASSIFICATION	0.09704505867482156	IMPLEMENTATION
// Only in ruby 1.9 methods	WITHOUT_CLASSIFICATION	0.9999970952249434	WITHOUT_CLASSIFICATION	2.9047750565528324E-6	IMPLEMENTATION
// Bind 'normal' parameter values to the local scope for this method.	WITHOUT_CLASSIFICATION	0.9999985995824159	WITHOUT_CLASSIFICATION	1.4004175841717264E-6	IMPLEMENTATION
// no arg grouping, just use bulk assignment methods	WITHOUT_CLASSIFICATION	0.9999683679818623	WITHOUT_CLASSIFICATION	3.1632018137664864E-5	IMPLEMENTATION
// optArgs and restArgs require more work, so isolate them and ArrayList creation here	WITHOUT_CLASSIFICATION	0.9962618016544526	WITHOUT_CLASSIFICATION	0.0037381983455473753	IMPLEMENTATION
//        arity.checkArity(runtime, argsLength);	WITHOUT_CLASSIFICATION	0.9998445909994328	WITHOUT_CLASSIFICATION	1.5540900056726657E-4	IMPLEMENTATION
// no more values to stick in rest arg	WITHOUT_CLASSIFICATION	0.9999880752267544	WITHOUT_CLASSIFICATION	1.1924773245670059E-5	IMPLEMENTATION
// set argv from main's args	WITHOUT_CLASSIFICATION	0.9999775709362221	WITHOUT_CLASSIFICATION	2.2429063777900013E-5	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.999431391890446	WITHOUT_CLASSIFICATION	5.686081095538633E-4	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9997589095028012	WITHOUT_CLASSIFICATION	2.4109049719883778E-4	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999849903527567	WITHOUT_CLASSIFICATION	1.5009647243354268E-5	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999251772318761	WITHOUT_CLASSIFICATION	7.48227681239341E-5	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.969580981948471	WITHOUT_CLASSIFICATION	0.030419018051529065	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.969580981948471	WITHOUT_CLASSIFICATION	0.030419018051529065	IMPLEMENTATION
// block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] //assert argsNode != null : "argsNode is not null";	WITHOUT_CLASSIFICATION	0.9952367963842866	WITHOUT_CLASSIFICATION	0.004763203615713327	IMPLEMENTATION
// assign given optional arguments to their variables	WITHOUT_CLASSIFICATION	0.9998616364009754	WITHOUT_CLASSIFICATION	1.383635990246497E-4	IMPLEMENTATION
// in-frame EvalState should already have receiver set as self, continue to use it	WITHOUT_CLASSIFICATION	0.9978272669241122	WITHOUT_CLASSIFICATION	0.0021727330758878204	IMPLEMENTATION
// assign the default values, adding to the end of allArgs	WITHOUT_CLASSIFICATION	0.9999187418176964	WITHOUT_CLASSIFICATION	8.125818230364226E-5	IMPLEMENTATION
// Make sure the appropriate scope has proper size. See JRUBY-2046.	WITHOUT_CLASSIFICATION	0.9997886226959889	WITHOUT_CLASSIFICATION	2.113773040111827E-4	IMPLEMENTATION
// Experimental class reification support, to create real Java classes // for Ruby classes after the first opening	WITHOUT_CLASSIFICATION	0.999980808989552	WITHOUT_CLASSIFICATION	1.9191010448060758E-5	IMPLEMENTATION
// This should never happen past parse, but just bulletproof this just in case	WITHOUT_CLASSIFICATION	0.9999284077748083	WITHOUT_CLASSIFICATION	7.159222519177891E-5	IMPLEMENTATION
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9998984986999877	WITHOUT_CLASSIFICATION	1.0150130001233194E-4	IMPLEMENTATION
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999425581571924	WITHOUT_CLASSIFICATION	5.744184280762438E-5	IMPLEMENTATION
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999793481329668	WITHOUT_CLASSIFICATION	2.065186703323526E-5	IMPLEMENTATION
// never visited, should be ok	WITHOUT_CLASSIFICATION	0.9963390492114178	WITHOUT_CLASSIFICATION	0.0036609507885822655	IMPLEMENTATION
// If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil	WITHOUT_CLASSIFICATION	0.9972950505720206	WITHOUT_CLASSIFICATION	0.002704949427979367	IMPLEMENTATION
// JRUBY-530 until case	WITHOUT_CLASSIFICATION	0.9998895629650041	WITHOUT_CLASSIFICATION	1.1043703499593737E-4	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.999759332890383	WITHOUT_CLASSIFICATION	2.4066710961704213E-4	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999849903527567	WITHOUT_CLASSIFICATION	1.5009647243354268E-5	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9996507087342127	WITHOUT_CLASSIFICATION	3.4929126578733534E-4	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9998292432815291	WITHOUT_CLASSIFICATION	1.7075671847091535E-4	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9998292432815291	WITHOUT_CLASSIFICATION	1.7075671847091535E-4	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999849903527567	WITHOUT_CLASSIFICATION	1.5009647243354268E-5	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999251772318761	WITHOUT_CLASSIFICATION	7.48227681239341E-5	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999251772318761	WITHOUT_CLASSIFICATION	7.48227681239341E-5	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.969580981948471	WITHOUT_CLASSIFICATION	0.030419018051529065	IMPLEMENTATION
// Empirical Observations: // null -> Some arity // argsNode == this.argsNode then check for arity changes // newline(splatnode) -> argspushnode	WITHOUT_CLASSIFICATION	0.9999883290542512	WITHOUT_CLASSIFICATION	1.1670945748947054E-5	IMPLEMENTATION
//assert !(value instanceof RubyArray)  : "Not an array";	WITHOUT_CLASSIFICATION	0.9993551293296618	WITHOUT_CLASSIFICATION	6.448706703383255E-4	IMPLEMENTATION
// Serialization killed our dynamic scope.  We can just create an empty one // since serialization cannot serialize an eval (which is the only thing // which is capable of having a non-empty dynamic scope).	WITHOUT_CLASSIFICATION	0.9999998759652595	WITHOUT_CLASSIFICATION	1.240347405123006E-7	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9986811919255475	WITHOUT_CLASSIFICATION	0.001318808074452482	IMPLEMENTATION
// We could probably also detect if LHS value came out of cache and avoid some of this	WITHOUT_CLASSIFICATION	0.9999432688306185	WITHOUT_CLASSIFICATION	5.673116938166304E-5	IMPLEMENTATION
//        assert thenBody != null : "thenBody is not null"; //        assert elseBody != null : "elseBody is not null";	WITHOUT_CLASSIFICATION	0.9984755207304843	WITHOUT_CLASSIFICATION	0.0015244792695156331	IMPLEMENTATION
// add in reverse order	WITHOUT_CLASSIFICATION	0.99998505105307	WITHOUT_CLASSIFICATION	1.4948946930060036E-5	IMPLEMENTATION
// in order to make pragma's noops we set location to a special value	WITHOUT_CLASSIFICATION	0.9999601500772489	WITHOUT_CLASSIFICATION	3.9849922751079584E-5	IMPLEMENTATION
// ignore compiler pragmas	WITHOUT_CLASSIFICATION	0.9998642596034517	WITHOUT_CLASSIFICATION	1.357403965483038E-4	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9996507087342127	WITHOUT_CLASSIFICATION	3.4929126578733534E-4	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9998292432815291	WITHOUT_CLASSIFICATION	1.7075671847091535E-4	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9998292432815291	WITHOUT_CLASSIFICATION	1.7075671847091535E-4	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999849903527567	WITHOUT_CLASSIFICATION	1.5009647243354268E-5	IMPLEMENTATION
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9998984986999877	WITHOUT_CLASSIFICATION	1.0150130001233194E-4	IMPLEMENTATION
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999793481329668	WITHOUT_CLASSIFICATION	2.065186703323526E-5	IMPLEMENTATION
// No actual test, so do 'when' if when expression is not nil	WITHOUT_CLASSIFICATION	0.9998753026789929	WITHOUT_CLASSIFICATION	1.2469732100715212E-4	IMPLEMENTATION
// save entering the try if there's nothing to ensure	WITHOUT_CLASSIFICATION	0.999990312367845	WITHOUT_CLASSIFICATION	9.687632155026265E-6	IMPLEMENTATION
// For 'foo'	WITHOUT_CLASSIFICATION	0.9984727276210655	WITHOUT_CLASSIFICATION	0.0015272723789344304	IMPLEMENTATION
// For 'foo'	WITHOUT_CLASSIFICATION	0.9984727276210655	WITHOUT_CLASSIFICATION	0.0015272723789344304	IMPLEMENTATION
// admittedly inefficient	WITHOUT_CLASSIFICATION	0.9998830445803648	WITHOUT_CLASSIFICATION	1.1695541963519677E-4	IMPLEMENTATION
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9998461453001188	WITHOUT_CLASSIFICATION	1.5385469988111287E-4	IMPLEMENTATION
// What static scoping relationship exists when it comes into being.	WITHOUT_CLASSIFICATION	0.9993983848488285	WITHOUT_CLASSIFICATION	6.016151511714594E-4	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9998644460299168	WITHOUT_CLASSIFICATION	1.355539700832243E-4	IMPLEMENTATION
// just rethrow	WITHOUT_CLASSIFICATION	0.9998758237784732	WITHOUT_CLASSIFICATION	1.2417622152675949E-4	IMPLEMENTATION
// just rethrow	WITHOUT_CLASSIFICATION	0.9998758237784732	WITHOUT_CLASSIFICATION	1.2417622152675949E-4	IMPLEMENTATION
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.999908940819844	WITHOUT_CLASSIFICATION	9.105918015599132E-5	IMPLEMENTATION
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.999908940819844	WITHOUT_CLASSIFICATION	9.105918015599132E-5	IMPLEMENTATION
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999276259105734	WITHOUT_CLASSIFICATION	7.237408942657972E-5	IMPLEMENTATION
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999276259105734	WITHOUT_CLASSIFICATION	7.237408942657972E-5	IMPLEMENTATION
// Execute rescue block	WITHOUT_CLASSIFICATION	0.9998381415581588	WITHOUT_CLASSIFICATION	1.618584418411902E-4	IMPLEMENTATION
// If no exception is thrown execute else block	WITHOUT_CLASSIFICATION	0.9998635745694848	WITHOUT_CLASSIFICATION	1.3642543051517486E-4	IMPLEMENTATION
// index of variable for this arg	WITHOUT_CLASSIFICATION	0.9997860218820139	WITHOUT_CLASSIFICATION	2.1397811798601587E-4	IMPLEMENTATION
// only a marker interface	WITHOUT_CLASSIFICATION	0.9999497880710518	WITHOUT_CLASSIFICATION	5.0211928948195E-5	IMPLEMENTATION
// don't attempt to coerce to array, just wrap and return	WITHOUT_CLASSIFICATION	0.9999460282210221	WITHOUT_CLASSIFICATION	5.397177897785091E-5	IMPLEMENTATION
// pragmas	WITHOUT_CLASSIFICATION	0.9999817067840583	WITHOUT_CLASSIFICATION	1.8293215941744205E-5	IMPLEMENTATION
// The method also needs a scope, do both	WITHOUT_CLASSIFICATION	0.9942121031346002	WITHOUT_CLASSIFICATION	0.005787896865399784	IMPLEMENTATION
// We're doing normal framed compilation or the method needs a frame	WITHOUT_CLASSIFICATION	0.9979877464407624	WITHOUT_CLASSIFICATION	0.0020122535592375624	IMPLEMENTATION
// The method doesn't need a scope or static scope; frame only	WITHOUT_CLASSIFICATION	0.9995153927224544	WITHOUT_CLASSIFICATION	4.846072775455829E-4	IMPLEMENTATION
// The method doesn't need a scope, but has static scope needs; use a dummy scope	WITHOUT_CLASSIFICATION	0.9999002352032424	WITHOUT_CLASSIFICATION	9.976479675756155E-5	IMPLEMENTATION
// Proc.new needs the caller's block to instantiate a proc	WITHOUT_CLASSIFICATION	0.9990421155839396	WITHOUT_CLASSIFICATION	9.578844160604847E-4	IMPLEMENTATION
// check for Proc.new, an especially magic method	WITHOUT_CLASSIFICATION	0.9999034443249633	WITHOUT_CLASSIFICATION	9.655567503673358E-5	IMPLEMENTATION
// long, slow way causes disabling	WITHOUT_CLASSIFICATION	0.999488286857589	WITHOUT_CLASSIFICATION	5.117131424110102E-4	IMPLEMENTATION
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9997198245580006	WITHOUT_CLASSIFICATION	2.801754419994981E-4	IMPLEMENTATION
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9997198245580006	WITHOUT_CLASSIFICATION	2.801754419994981E-4	IMPLEMENTATION
// long, slow way causes disabling for defined	WITHOUT_CLASSIFICATION	0.9999044690892251	WITHOUT_CLASSIFICATION	9.55309107748274E-5	IMPLEMENTATION
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9988943459082583	WITHOUT_CLASSIFICATION	0.001105654091741613	IMPLEMENTATION
// Because Regexp#=== sets backref, we have to make this backref-aware	WITHOUT_CLASSIFICATION	0.9982065308516032	WITHOUT_CLASSIFICATION	0.0017934691483968862	IMPLEMENTATION
// encountered a node we don't recognize, set everything to true to disable optz	WITHOUT_CLASSIFICATION	0.9996549298663764	WITHOUT_CLASSIFICATION	3.4507013362368097E-4	IMPLEMENTATION
// only arrays that are "lightweight" are being used as args arrays	WITHOUT_CLASSIFICATION	0.9998210236028205	WITHOUT_CLASSIFICATION	1.7897639717955754E-4	IMPLEMENTATION
// otherwise, it's a literal array	WITHOUT_CLASSIFICATION	0.9996714359266811	WITHOUT_CLASSIFICATION	3.2856407331886866E-4	IMPLEMENTATION
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9993835026093635	WITHOUT_CLASSIFICATION	6.164973906365404E-4	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999738313019506	WITHOUT_CLASSIFICATION	2.6168698049275217E-5	IMPLEMENTATION
// compile first node as non-expr and then second node	WITHOUT_CLASSIFICATION	0.9999087065728316	WITHOUT_CLASSIFICATION	9.129342716840154E-5	IMPLEMENTATION
// last node, either !instanceof WhenNode or null, is the else	WITHOUT_CLASSIFICATION	0.9999850977345852	WITHOUT_CLASSIFICATION	1.490226541470721E-5	IMPLEMENTATION
// compile first node only	WITHOUT_CLASSIFICATION	0.9997268391760085	WITHOUT_CLASSIFICATION	2.731608239916161E-4	IMPLEMENTATION
// splatted when, can't do it yet	WITHOUT_CLASSIFICATION	0.9956443611841476	WITHOUT_CLASSIFICATION	0.0043556388158524474	IMPLEMENTATION
// if __send__ with a literal symbol, compile it as a direct fcall	WITHOUT_CLASSIFICATION	0.9999574274509424	WITHOUT_CLASSIFICATION	4.2572549057556045E-5	IMPLEMENTATION
// NOTE: Currently this optimization is limited to the following situations: // * All expressions must be int-ranged literal fixnums // It also still emits the code for the "safe" when logic, which is rather // wasteful (since it essentially doubles each code body). As such it is // normally disabled, but it serves as an example of how this optimization // could be done. Ideally, it should be combined with the when processing // to improve code reuse before it's generally available.	WITHOUT_CLASSIFICATION	0.9998555669696175	WITHOUT_CLASSIFICATION	1.444330303825422E-4	IMPLEMENTATION
// aggregate when nodes into a list, unfortunately, this is no	WITHOUT_CLASSIFICATION	0.9999719076453755	WITHOUT_CLASSIFICATION	2.8092354624599212E-5	IMPLEMENTATION
// one arg but it's an array, treat it as a proper array	WITHOUT_CLASSIFICATION	0.9996786510960728	WITHOUT_CLASSIFICATION	3.2134890392725705E-4	IMPLEMENTATION
// can't do it	WITHOUT_CLASSIFICATION	0.9958574335730356	WITHOUT_CLASSIFICATION	0.004142566426964432	IMPLEMENTATION
// otherwise, use normal args compiler	WITHOUT_CLASSIFICATION	0.9994732334236343	WITHOUT_CLASSIFICATION	5.267665763658287E-4	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999939429961668	WITHOUT_CLASSIFICATION	6.057003833139108E-6	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999939429961668	WITHOUT_CLASSIFICATION	6.057003833139108E-6	IMPLEMENTATION
// these are all simple cases that don't require the heavier defined logic	WITHOUT_CLASSIFICATION	0.9998770679813328	WITHOUT_CLASSIFICATION	1.2293201866722737E-4	IMPLEMENTATION
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.999162082315616	WITHOUT_CLASSIFICATION	8.37917684384032E-4	IMPLEMENTATION
//[]	WITHOUT_CLASSIFICATION	0.99991120461732	WITHOUT_CLASSIFICATION	8.879538267995327E-5	IMPLEMENTATION
//[]	WITHOUT_CLASSIFICATION	0.99991120461732	WITHOUT_CLASSIFICATION	8.879538267995327E-5	IMPLEMENTATION
//          context.swapValues(); //context.consumeCurrentValue();	WITHOUT_CLASSIFICATION	0.9998445909994328	WITHOUT_CLASSIFICATION	1.5540900056726657E-4	IMPLEMENTATION
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[] //[self] //[RubyClass] //[RubyClass, RubyClass]	WITHOUT_CLASSIFICATION	0.999162082315616	WITHOUT_CLASSIFICATION	8.37917684384032E-4	IMPLEMENTATION
//[RubyClass]	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.999162082315616	WITHOUT_CLASSIFICATION	8.37917684384032E-4	IMPLEMENTATION
// if root of method is rescue, compile as a light rescue	WITHOUT_CLASSIFICATION	0.9999838067281425	WITHOUT_CLASSIFICATION	1.619327185759828E-5	IMPLEMENTATION
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999742772200488	WITHOUT_CLASSIFICATION	2.5722779951252274E-5	IMPLEMENTATION
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999742772200488	WITHOUT_CLASSIFICATION	2.5722779951252274E-5	IMPLEMENTATION
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9996373236318205	WITHOUT_CLASSIFICATION	3.6267636817957345E-4	IMPLEMENTATION
// if root of method is rescue, compile as light rescue	WITHOUT_CLASSIFICATION	0.9999762687423804	WITHOUT_CLASSIFICATION	2.3731257619512925E-5	IMPLEMENTATION
// invoke run with threadcontext and topself	WITHOUT_CLASSIFICATION	0.9998786891901585	WITHOUT_CLASSIFICATION	1.2131080984137228E-4	IMPLEMENTATION
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.999162082315616	WITHOUT_CLASSIFICATION	8.37917684384032E-4	IMPLEMENTATION
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.999162082315616	WITHOUT_CLASSIFICATION	8.37917684384032E-4	IMPLEMENTATION
//[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.999162082315616	WITHOUT_CLASSIFICATION	8.37917684384032E-4	IMPLEMENTATION
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.999162082315616	WITHOUT_CLASSIFICATION	8.37917684384032E-4	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.994127537904571	WITHOUT_CLASSIFICATION	0.005872462095429026	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9998335433005531	WITHOUT_CLASSIFICATION	1.6645669944679247E-4	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9998335433005531	WITHOUT_CLASSIFICATION	1.6645669944679247E-4	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9996580065917821	WITHOUT_CLASSIFICATION	3.419934082179809E-4	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9996580065917821	WITHOUT_CLASSIFICATION	3.419934082179809E-4	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9996580065917821	WITHOUT_CLASSIFICATION	3.419934082179809E-4	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9998335433005531	WITHOUT_CLASSIFICATION	1.6645669944679247E-4	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9998335433005531	WITHOUT_CLASSIFICATION	1.6645669944679247E-4	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.994127537904571	WITHOUT_CLASSIFICATION	0.005872462095429026	IMPLEMENTATION
// force heap-scope behavior, since it uses parent's scope	WITHOUT_CLASSIFICATION	0.999497813269821	WITHOUT_CLASSIFICATION	5.021867301789855E-4	IMPLEMENTATION
// always false or nil	WITHOUT_CLASSIFICATION	0.9998972697196222	WITHOUT_CLASSIFICATION	1.0273028037774232E-4	IMPLEMENTATION
// optimizations if we know ahead of time it will always be true or false	WITHOUT_CLASSIFICATION	0.9998436481345112	WITHOUT_CLASSIFICATION	1.563518654887826E-4	IMPLEMENTATION
// normal	WITHOUT_CLASSIFICATION	0.9999677183840184	WITHOUT_CLASSIFICATION	3.228161598159615E-5	IMPLEMENTATION
// compile condition as non-expr and just compile "then" body	WITHOUT_CLASSIFICATION	0.9999949142490537	WITHOUT_CLASSIFICATION	5.085750946339787E-6	IMPLEMENTATION
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9982782588875696	WITHOUT_CLASSIFICATION	0.001721741112430414	IMPLEMENTATION
// just push nil for pragmas	WITHOUT_CLASSIFICATION	0.9999905602892449	WITHOUT_CLASSIFICATION	9.439710754989107E-6	IMPLEMENTATION
// "assignment" means the value is already on the stack	WITHOUT_CLASSIFICATION	0.9999323175682385	WITHOUT_CLASSIFICATION	6.768243176143103E-5	IMPLEMENTATION
// compile first node only	WITHOUT_CLASSIFICATION	0.9997268391760085	WITHOUT_CLASSIFICATION	2.731608239916161E-4	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9998335433005531	WITHOUT_CLASSIFICATION	1.6645669944679247E-4	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9998335433005531	WITHOUT_CLASSIFICATION	1.6645669944679247E-4	IMPLEMENTATION
// eval new value, call operator on old value, and assign	WITHOUT_CLASSIFICATION	0.9998229535783418	WITHOUT_CLASSIFICATION	1.7704642165817912E-4	IMPLEMENTATION
// try optz version	WITHOUT_CLASSIFICATION	0.9991621682775563	WITHOUT_CLASSIFICATION	8.378317224436701E-4	IMPLEMENTATION
// sizes must match	WITHOUT_CLASSIFICATION	0.9992634030900479	WITHOUT_CLASSIFICATION	7.365969099521655E-4	IMPLEMENTATION
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999749816220659	WITHOUT_CLASSIFICATION	2.501837793418135E-5	IMPLEMENTATION
// normal items at the "head" of the masgn	WITHOUT_CLASSIFICATION	0.9996022015590564	WITHOUT_CLASSIFICATION	3.977984409436277E-4	IMPLEMENTATION
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9978469206539369	WITHOUT_CLASSIFICATION	0.0021530793460630315	IMPLEMENTATION
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9993496928683628	WITHOUT_CLASSIFICATION	6.503071316372313E-4	IMPLEMENTATION
// only supports simple parallel assignment of up to 10 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999979825233692	WITHOUT_CLASSIFICATION	2.0174766307397426E-6	IMPLEMENTATION
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.999468345292856	WITHOUT_CLASSIFICATION	5.316547071439328E-4	IMPLEMENTATION
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.999978467095636	WITHOUT_CLASSIFICATION	2.1532904364065938E-5	IMPLEMENTATION
//RedoNode redoNode = (RedoNode)node;	WITHOUT_CLASSIFICATION	0.9990241846765686	WITHOUT_CLASSIFICATION	9.758153234313096E-4	IMPLEMENTATION
// done processing args	WITHOUT_CLASSIFICATION	0.9999339935874425	WITHOUT_CLASSIFICATION	6.600641255747036E-5	IMPLEMENTATION
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9998675545983852	WITHOUT_CLASSIFICATION	1.3244540161484858E-4	IMPLEMENTATION
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9998257165010112	WITHOUT_CLASSIFICATION	1.742834989888201E-4	IMPLEMENTATION
// if arity 1, just compile the one element to save us the array cost	WITHOUT_CLASSIFICATION	0.9999985612253373	WITHOUT_CLASSIFICATION	1.4387746627468924E-6	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.9999817067840583	WITHOUT_CLASSIFICATION	1.8293215941744205E-5	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.9999817067840583	WITHOUT_CLASSIFICATION	1.8293215941744205E-5	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.9999817067840583	WITHOUT_CLASSIFICATION	1.8293215941744205E-5	IMPLEMENTATION
// compile into array	WITHOUT_CLASSIFICATION	0.9999487425529824	WITHOUT_CLASSIFICATION	5.125744701770726E-5	IMPLEMENTATION
// compile first node as non-expr and compile second node	WITHOUT_CLASSIFICATION	0.9998966839816638	WITHOUT_CLASSIFICATION	1.0331601833621697E-4	IMPLEMENTATION
// check if it's an immediate, and don't outline	WITHOUT_CLASSIFICATION	0.9999824004649681	WITHOUT_CLASSIFICATION	1.7599535031832337E-5	IMPLEMENTATION
// condition is always true, just compile it and not body	WITHOUT_CLASSIFICATION	0.9997196810293597	WITHOUT_CLASSIFICATION	2.803189706402987E-4	IMPLEMENTATION
// force static scope to claim restarg at 0, so it only implements the [] version of __file__	WITHOUT_CLASSIFICATION	0.9997625834583245	WITHOUT_CLASSIFICATION	2.374165416756492E-4	IMPLEMENTATION
// create method for toplevel of script	WITHOUT_CLASSIFICATION	0.9999033680201805	WITHOUT_CLASSIFICATION	9.663197981948922E-5	IMPLEMENTATION
// it's a multiple-statement body, iterate over all elements in turn and chain if it get too long	WITHOUT_CLASSIFICATION	0.9999998317214263	WITHOUT_CLASSIFICATION	1.6827857376003068E-7	IMPLEMENTATION
// send it along as arity-specific, we don't need the array	WITHOUT_CLASSIFICATION	0.9988080963870056	WITHOUT_CLASSIFICATION	0.001191903612994476	IMPLEMENTATION
// single-statement body, just compile it	WITHOUT_CLASSIFICATION	0.9999149664257462	WITHOUT_CLASSIFICATION	8.503357425381184E-5	IMPLEMENTATION
// leave as a normal array	WITHOUT_CLASSIFICATION	0.9999177004931223	WITHOUT_CLASSIFICATION	8.229950687764553E-5	IMPLEMENTATION
// This method has JITed already or has been abandoned. Bail out.	WITHOUT_CLASSIFICATION	0.998642465714974	WITHOUT_CLASSIFICATION	0.0013575342850261451	IMPLEMENTATION
// The cache is full. Abandon JIT for this method and bail out.	WITHOUT_CLASSIFICATION	0.9997896385394938	WITHOUT_CLASSIFICATION	2.1036146050617543E-4	IMPLEMENTATION
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9996373236318205	WITHOUT_CLASSIFICATION	3.6267636817957345E-4	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9998335433005531	WITHOUT_CLASSIFICATION	1.6645669944679247E-4	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9998335433005531	WITHOUT_CLASSIFICATION	1.6645669944679247E-4	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.994127537904571	WITHOUT_CLASSIFICATION	0.005872462095429026	IMPLEMENTATION
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9982782588875696	WITHOUT_CLASSIFICATION	0.001721741112430414	IMPLEMENTATION
// try optz version	WITHOUT_CLASSIFICATION	0.9991621682775563	WITHOUT_CLASSIFICATION	8.378317224436701E-4	IMPLEMENTATION
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999749816220659	WITHOUT_CLASSIFICATION	2.501837793418135E-5	IMPLEMENTATION
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9978469206539369	WITHOUT_CLASSIFICATION	0.0021530793460630315	IMPLEMENTATION
// sizes must match	WITHOUT_CLASSIFICATION	0.9992634030900479	WITHOUT_CLASSIFICATION	7.365969099521655E-4	IMPLEMENTATION
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9993496928683628	WITHOUT_CLASSIFICATION	6.503071316372313E-4	IMPLEMENTATION
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.999978467095636	WITHOUT_CLASSIFICATION	2.1532904364065938E-5	IMPLEMENTATION
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.999468345292856	WITHOUT_CLASSIFICATION	5.316547071439328E-4	IMPLEMENTATION
// done processing args	WITHOUT_CLASSIFICATION	0.9999339935874425	WITHOUT_CLASSIFICATION	6.600641255747036E-5	IMPLEMENTATION
// Check if the method has been explicitly excluded	WITHOUT_CLASSIFICATION	0.9997999689016096	WITHOUT_CLASSIFICATION	2.0003109839041288E-4	IMPLEMENTATION
// class could not be found nor generated; give up on JIT and bail out	WITHOUT_CLASSIFICATION	0.9998639497338477	WITHOUT_CLASSIFICATION	1.360502661521978E-4	IMPLEMENTATION
// successfully got back a jitted method	WITHOUT_CLASSIFICATION	0.9993344490008512	WITHOUT_CLASSIFICATION	6.65550999148718E-4	IMPLEMENTATION
// finally, grab the script	WITHOUT_CLASSIFICATION	0.9999129534560598	WITHOUT_CLASSIFICATION	8.704654394019164E-5	IMPLEMENTATION
// logEvery n methods based on configuration	WITHOUT_CLASSIFICATION	0.9998838698590677	WITHOUT_CLASSIFICATION	1.1613014093223443E-4	IMPLEMENTATION
// Time the compilation	WITHOUT_CLASSIFICATION	0.9998767961424984	WITHOUT_CLASSIFICATION	1.2320385750167834E-4	IMPLEMENTATION
// we have a body, do a full-on method	WITHOUT_CLASSIFICATION	0.998567570418203	WITHOUT_CLASSIFICATION	0.0014324295817971136	IMPLEMENTATION
// If we don't have a body, check for required or opt args // if opt args, they could have side effects // if required args, need to raise errors if too few args passed // otherwise, method does nothing, make it a nop	WITHOUT_CLASSIFICATION	0.999723423268371	WITHOUT_CLASSIFICATION	2.765767316289833E-4	IMPLEMENTATION
// if we haven't already decided on a do-nothing call	WITHOUT_CLASSIFICATION	0.9998716234379541	WITHOUT_CLASSIFICATION	1.283765620459092E-4	IMPLEMENTATION
// only supports simple parallel assignment of up to 4 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999974148432041	WITHOUT_CLASSIFICATION	2.5851567957923205E-6	IMPLEMENTATION
// normal items at the front or back of the masgn	WITHOUT_CLASSIFICATION	0.9993773048177761	WITHOUT_CLASSIFICATION	6.226951822238351E-4	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999437532607724	WITHOUT_CLASSIFICATION	5.6246739227549816E-5	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999459484637785	WITHOUT_CLASSIFICATION	5.405153622158947E-5	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999973567971581	WITHOUT_CLASSIFICATION	2.6432028419684403E-6	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999819082774364	WITHOUT_CLASSIFICATION	1.8091722563620987E-5	IMPLEMENTATION
// end of variable scope	WITHOUT_CLASSIFICATION	0.9998851153488518	WITHOUT_CLASSIFICATION	1.1488465114815405E-4	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9997232553060599	WITHOUT_CLASSIFICATION	2.767446939401059E-4	IMPLEMENTATION
// Define the annotation for the method	WITHOUT_CLASSIFICATION	0.9997550798013257	WITHOUT_CLASSIFICATION	2.449201986743794E-4	IMPLEMENTATION
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.999967203691965	WITHOUT_CLASSIFICATION	3.279630803490104E-5	IMPLEMENTATION
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9998787289821427	WITHOUT_CLASSIFICATION	1.2127101785722859E-4	IMPLEMENTATION
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999308960143863	WITHOUT_CLASSIFICATION	6.910398561362435E-5	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999326483330024	WITHOUT_CLASSIFICATION	6.735166699758587E-5	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999326483330024	WITHOUT_CLASSIFICATION	6.735166699758587E-5	IMPLEMENTATION
// value is already on stack, save it for later	WITHOUT_CLASSIFICATION	0.9999598705033659	WITHOUT_CLASSIFICATION	4.0129496634198814E-5	IMPLEMENTATION
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9751964768216022	WITHOUT_CLASSIFICATION	0.02480352317839788	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.99991120461732	WITHOUT_CLASSIFICATION	8.879538267995327E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.99991120461732	WITHOUT_CLASSIFICATION	8.879538267995327E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.99991120461732	WITHOUT_CLASSIFICATION	8.879538267995327E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.99991120461732	WITHOUT_CLASSIFICATION	8.879538267995327E-5	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.99991120461732	WITHOUT_CLASSIFICATION	8.879538267995327E-5	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.99991120461732	WITHOUT_CLASSIFICATION	8.879538267995327E-5	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.99991120461732	WITHOUT_CLASSIFICATION	8.879538267995327E-5	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.99991120461732	WITHOUT_CLASSIFICATION	8.879538267995327E-5	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.99991120461732	WITHOUT_CLASSIFICATION	8.879538267995327E-5	IMPLEMENTATION
/*arg2*/	WITHOUT_CLASSIFICATION	0.99991120461732	WITHOUT_CLASSIFICATION	8.879538267995327E-5	IMPLEMENTATION
/*args*/	WITHOUT_CLASSIFICATION	0.99991120461732	WITHOUT_CLASSIFICATION	8.879538267995327E-5	IMPLEMENTATION
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9751964768216022	WITHOUT_CLASSIFICATION	0.02480352317839788	IMPLEMENTATION
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9997525967397842	WITHOUT_CLASSIFICATION	2.474032602158302E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.99991120461732	WITHOUT_CLASSIFICATION	8.879538267995327E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.99991120461732	WITHOUT_CLASSIFICATION	8.879538267995327E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.99991120461732	WITHOUT_CLASSIFICATION	8.879538267995327E-5	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.99991120461732	WITHOUT_CLASSIFICATION	8.879538267995327E-5	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.99991120461732	WITHOUT_CLASSIFICATION	8.879538267995327E-5	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.99991120461732	WITHOUT_CLASSIFICATION	8.879538267995327E-5	IMPLEMENTATION
/*args*/	WITHOUT_CLASSIFICATION	0.99991120461732	WITHOUT_CLASSIFICATION	8.879538267995327E-5	IMPLEMENTATION
// get call site and thread context	WITHOUT_CLASSIFICATION	0.999626083615285	WITHOUT_CLASSIFICATION	3.7391638471489245E-4	IMPLEMENTATION
// get call site and thread context	WITHOUT_CLASSIFICATION	0.999626083615285	WITHOUT_CLASSIFICATION	3.7391638471489245E-4	IMPLEMENTATION
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999645278499231	WITHOUT_CLASSIFICATION	3.547215007704508E-5	IMPLEMENTATION
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999645278499231	WITHOUT_CLASSIFICATION	3.547215007704508E-5	IMPLEMENTATION
// invoke	WITHOUT_CLASSIFICATION	0.9999822082854611	WITHOUT_CLASSIFICATION	1.7791714538931803E-5	IMPLEMENTATION
// invoke	WITHOUT_CLASSIFICATION	0.9999822082854611	WITHOUT_CLASSIFICATION	1.7791714538931803E-5	IMPLEMENTATION
// check if it's true, ending if so	WITHOUT_CLASSIFICATION	0.9999271175555297	WITHOUT_CLASSIFICATION	7.288244447034716E-5	IMPLEMENTATION
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9986933444041868	WITHOUT_CLASSIFICATION	0.0013066555958132677	IMPLEMENTATION
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9986933444041868	WITHOUT_CLASSIFICATION	0.0013066555958132677	IMPLEMENTATION
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9996736343006444	WITHOUT_CLASSIFICATION	3.2636569935556007E-4	IMPLEMENTATION
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9996736343006444	WITHOUT_CLASSIFICATION	3.2636569935556007E-4	IMPLEMENTATION
// eval value for assignment	WITHOUT_CLASSIFICATION	0.999971439699045	WITHOUT_CLASSIFICATION	2.8560300954935412E-5	IMPLEMENTATION
// call site	WITHOUT_CLASSIFICATION	0.9988351942364274	WITHOUT_CLASSIFICATION	0.0011648057635725326	IMPLEMENTATION
// call site	WITHOUT_CLASSIFICATION	0.9988351942364274	WITHOUT_CLASSIFICATION	0.0011648057635725326	IMPLEMENTATION
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.999477889949874	WITHOUT_CLASSIFICATION	5.221100501260603E-4	IMPLEMENTATION
// check if it's true, ending if not	WITHOUT_CLASSIFICATION	0.9975310320256361	WITHOUT_CLASSIFICATION	0.0024689679743638638	IMPLEMENTATION
// eval value and save it	WITHOUT_CLASSIFICATION	0.9999622996683576	WITHOUT_CLASSIFICATION	3.770033164248945E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.99991120461732	WITHOUT_CLASSIFICATION	8.879538267995327E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.99991120461732	WITHOUT_CLASSIFICATION	8.879538267995327E-5	IMPLEMENTATION
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.999477889949874	WITHOUT_CLASSIFICATION	5.221100501260603E-4	IMPLEMENTATION
// receiver, args, result, value	WITHOUT_CLASSIFICATION	0.9998939952998066	WITHOUT_CLASSIFICATION	1.060047001933958E-4	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9993881635822232	WITHOUT_CLASSIFICATION	6.118364177769137E-4	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9993881635822232	WITHOUT_CLASSIFICATION	6.118364177769137E-4	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9993881635822232	WITHOUT_CLASSIFICATION	6.118364177769137E-4	IMPLEMENTATION
// super uses current block if none given	WITHOUT_CLASSIFICATION	0.9997429892494516	WITHOUT_CLASSIFICATION	2.5701075054831155E-4	IMPLEMENTATION
// args	WITHOUT_CLASSIFICATION	0.9999824864720286	WITHOUT_CLASSIFICATION	1.751352797133363E-5	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999730797161539	WITHOUT_CLASSIFICATION	2.6920283846099284E-5	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999730797161539	WITHOUT_CLASSIFICATION	2.6920283846099284E-5	IMPLEMENTATION
// no args, no block	WITHOUT_CLASSIFICATION	0.9989712835690201	WITHOUT_CLASSIFICATION	0.0010287164309799558	IMPLEMENTATION
// no args, with block	WITHOUT_CLASSIFICATION	0.9997585295203381	WITHOUT_CLASSIFICATION	2.4147047966203167E-4	IMPLEMENTATION
// with args, no block	WITHOUT_CLASSIFICATION	0.9997585295203381	WITHOUT_CLASSIFICATION	2.4147047966203167E-4	IMPLEMENTATION
// with args, with block	WITHOUT_CLASSIFICATION	0.9997887343278722	WITHOUT_CLASSIFICATION	2.1126567212784622E-4	IMPLEMENTATION
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9998272733107829	WITHOUT_CLASSIFICATION	1.7272668921707108E-4	IMPLEMENTATION
// pop extra attr value	WITHOUT_CLASSIFICATION	0.99995425810882	WITHOUT_CLASSIFICATION	4.5741891180063245E-5	IMPLEMENTATION
// pop extra attr value	WITHOUT_CLASSIFICATION	0.99995425810882	WITHOUT_CLASSIFICATION	4.5741891180063245E-5	IMPLEMENTATION
// arg and receiver already present on the stack	WITHOUT_CLASSIFICATION	0.9994277110720698	WITHOUT_CLASSIFICATION	5.722889279302166E-4	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.99991120461732	WITHOUT_CLASSIFICATION	8.879538267995327E-5	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.99991120461732	WITHOUT_CLASSIFICATION	8.879538267995327E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.99991120461732	WITHOUT_CLASSIFICATION	8.879538267995327E-5	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9993881635822232	WITHOUT_CLASSIFICATION	6.118364177769137E-4	IMPLEMENTATION
// args	WITHOUT_CLASSIFICATION	0.9999824864720286	WITHOUT_CLASSIFICATION	1.751352797133363E-5	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999730797161539	WITHOUT_CLASSIFICATION	2.6920283846099284E-5	IMPLEMENTATION
// no args, no block	WITHOUT_CLASSIFICATION	0.9989712835690201	WITHOUT_CLASSIFICATION	0.0010287164309799558	IMPLEMENTATION
// no args, with block	WITHOUT_CLASSIFICATION	0.9997585295203381	WITHOUT_CLASSIFICATION	2.4147047966203167E-4	IMPLEMENTATION
// with args, no block	WITHOUT_CLASSIFICATION	0.9997585295203381	WITHOUT_CLASSIFICATION	2.4147047966203167E-4	IMPLEMENTATION
// with args, with block	WITHOUT_CLASSIFICATION	0.9997887343278722	WITHOUT_CLASSIFICATION	2.1126567212784622E-4	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.99991120461732	WITHOUT_CLASSIFICATION	8.879538267995327E-5	IMPLEMENTATION
// retrieve scope from scopes array	WITHOUT_CLASSIFICATION	0.999972086943295	WITHOUT_CLASSIFICATION	2.7913056705005273E-5	IMPLEMENTATION
// use numbered access method	WITHOUT_CLASSIFICATION	0.9988868493954056	WITHOUT_CLASSIFICATION	0.0011131506045943748	IMPLEMENTATION
// retrieve call site from sites array	WITHOUT_CLASSIFICATION	0.999945648218531	WITHOUT_CLASSIFICATION	5.435178146895257E-5	IMPLEMENTATION
// add name to call site list	WITHOUT_CLASSIFICATION	0.9996262501154722	WITHOUT_CLASSIFICATION	3.737498845277501E-4	IMPLEMENTATION
// module is on top of stack	WITHOUT_CLASSIFICATION	0.9998172104985319	WITHOUT_CLASSIFICATION	1.8278950146807915E-4	IMPLEMENTATION
// build scope names string	WITHOUT_CLASSIFICATION	0.9999918796084702	WITHOUT_CLASSIFICATION	8.120391529681506E-6	IMPLEMENTATION
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999929349796791	WITHOUT_CLASSIFICATION	7.065020320879369E-6	IMPLEMENTATION
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999929349796791	WITHOUT_CLASSIFICATION	7.065020320879369E-6	IMPLEMENTATION
// generate call sites initialization code	WITHOUT_CLASSIFICATION	0.9996948033062839	WITHOUT_CLASSIFICATION	3.0519669371614235E-4	IMPLEMENTATION
// generate symbols initialization code	WITHOUT_CLASSIFICATION	0.999839755091877	WITHOUT_CLASSIFICATION	1.6024490812318684E-4	IMPLEMENTATION
// generate fixnums initialization code	WITHOUT_CLASSIFICATION	0.999839755091877	WITHOUT_CLASSIFICATION	1.6024490812318684E-4	IMPLEMENTATION
// generate constants initialization code	WITHOUT_CLASSIFICATION	0.9999212017656381	WITHOUT_CLASSIFICATION	7.879823436179924E-5	IMPLEMENTATION
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.999839755091877	WITHOUT_CLASSIFICATION	1.6024490812318684E-4	IMPLEMENTATION
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.999839755091877	WITHOUT_CLASSIFICATION	1.6024490812318684E-4	IMPLEMENTATION
// generate variable readers initialization code	WITHOUT_CLASSIFICATION	0.9997281024656008	WITHOUT_CLASSIFICATION	2.718975343990698E-4	IMPLEMENTATION
// generate variable writers initialization code	WITHOUT_CLASSIFICATION	0.9998505455050113	WITHOUT_CLASSIFICATION	1.4945449498872726E-4	IMPLEMENTATION
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9997668278857375	WITHOUT_CLASSIFICATION	2.3317211426248077E-4	IMPLEMENTATION
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9997668278857375	WITHOUT_CLASSIFICATION	2.3317211426248077E-4	IMPLEMENTATION
// generate bytelists initialization code	WITHOUT_CLASSIFICATION	0.999839755091877	WITHOUT_CLASSIFICATION	1.6024490812318684E-4	IMPLEMENTATION
// generate method cache initialization code	WITHOUT_CLASSIFICATION	0.9992546609474184	WITHOUT_CLASSIFICATION	7.453390525816426E-4	IMPLEMENTATION
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9998272733107829	WITHOUT_CLASSIFICATION	1.7272668921707108E-4	IMPLEMENTATION
// use IRubyObject[]	WITHOUT_CLASSIFICATION	0.9988642753071186	WITHOUT_CLASSIFICATION	0.0011357246928813032	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999127494548403	WITHOUT_CLASSIFICATION	8.725054515966428E-5	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9998915143152792	WITHOUT_CLASSIFICATION	1.0848568472065885E-4	IMPLEMENTATION
// No point in updating number if last number was same value.	WITHOUT_CLASSIFICATION	0.9999998969144764	WITHOUT_CLASSIFICATION	1.0308552355871272E-7	IMPLEMENTATION
// load Object under value	WITHOUT_CLASSIFICATION	0.999942040918898	WITHOUT_CLASSIFICATION	5.7959081101899006E-5	IMPLEMENTATION
// put under object array already present	WITHOUT_CLASSIFICATION	0.9986230443020355	WITHOUT_CLASSIFICATION	0.0013769556979645156	IMPLEMENTATION
// if element count is less than 6, use helper methods	WITHOUT_CLASSIFICATION	0.9999970205973703	WITHOUT_CLASSIFICATION	2.9794026296321313E-6	IMPLEMENTATION
// This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements	WITHOUT_CLASSIFICATION	0.9999999611525903	WITHOUT_CLASSIFICATION	3.884740967637662E-8	IMPLEMENTATION
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.999976862725682	WITHOUT_CLASSIFICATION	2.313727431811714E-5	IMPLEMENTATION
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.999976862725682	WITHOUT_CLASSIFICATION	2.313727431811714E-5	IMPLEMENTATION
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9993924300784338	WITHOUT_CLASSIFICATION	6.075699215661506E-4	IMPLEMENTATION
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9993924300784338	WITHOUT_CLASSIFICATION	6.075699215661506E-4	IMPLEMENTATION
// use specific-arity for as much as possible	WITHOUT_CLASSIFICATION	0.999913531576568	WITHOUT_CLASSIFICATION	8.64684234318847E-5	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9996802581158571	WITHOUT_CLASSIFICATION	3.1974188414281193E-4	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9996802581158571	WITHOUT_CLASSIFICATION	3.1974188414281193E-4	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9996802581158571	WITHOUT_CLASSIFICATION	3.1974188414281193E-4	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999708713992483	WITHOUT_CLASSIFICATION	2.912860075163108E-5	IMPLEMENTATION
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9996386331528206	WITHOUT_CLASSIFICATION	3.6136684717928463E-4	IMPLEMENTATION
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9996386331528206	WITHOUT_CLASSIFICATION	3.6136684717928463E-4	IMPLEMENTATION
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999731305139898	WITHOUT_CLASSIFICATION	2.6869486010149954E-5	IMPLEMENTATION
// check the condition	WITHOUT_CLASSIFICATION	0.9997988293528262	WITHOUT_CLASSIFICATION	2.011706471738556E-4	IMPLEMENTATION
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999610172944231	WITHOUT_CLASSIFICATION	3.898270557694965E-5	IMPLEMENTATION
// skip catch block	WITHOUT_CLASSIFICATION	0.9963633082250052	WITHOUT_CLASSIFICATION	0.00363669177499476	IMPLEMENTATION
// catch logic for flow-control: next, break	WITHOUT_CLASSIFICATION	0.999897868609866	WITHOUT_CLASSIFICATION	1.0213139013400997E-4	IMPLEMENTATION
// next jump	WITHOUT_CLASSIFICATION	0.9972507439874128	WITHOUT_CLASSIFICATION	0.002749256012587293	IMPLEMENTATION
// exceptionNext target is for a next that doesn't push a new value, like this one	WITHOUT_CLASSIFICATION	0.9981030014270326	WITHOUT_CLASSIFICATION	0.0018969985729674027	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999459484637785	WITHOUT_CLASSIFICATION	5.405153622158947E-5	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999459484637785	WITHOUT_CLASSIFICATION	5.405153622158947E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999708713992483	WITHOUT_CLASSIFICATION	2.912860075163108E-5	IMPLEMENTATION
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999731305139898	WITHOUT_CLASSIFICATION	2.6869486010149954E-5	IMPLEMENTATION
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.999949752255734	WITHOUT_CLASSIFICATION	5.024774426599098E-5	IMPLEMENTATION
// check the condition	WITHOUT_CLASSIFICATION	0.9997988293528262	WITHOUT_CLASSIFICATION	2.011706471738556E-4	IMPLEMENTATION
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999610172944231	WITHOUT_CLASSIFICATION	3.898270557694965E-5	IMPLEMENTATION
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9998658712052457	WITHOUT_CLASSIFICATION	1.3412879475426374E-4	IMPLEMENTATION
// break jump	WITHOUT_CLASSIFICATION	0.9993962386079991	WITHOUT_CLASSIFICATION	6.037613920008701E-4	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9997897363829871	WITHOUT_CLASSIFICATION	2.102636170128765E-4	IMPLEMENTATION
//[reg]	WITHOUT_CLASSIFICATION	0.99991120461732	WITHOUT_CLASSIFICATION	8.879538267995327E-5	IMPLEMENTATION
// for regular expressions with the /o flag	WITHOUT_CLASSIFICATION	0.9996555986377448	WITHOUT_CLASSIFICATION	3.4440136225525285E-4	IMPLEMENTATION
// inside a loop, jump to body	WITHOUT_CLASSIFICATION	0.9999804114835597	WITHOUT_CLASSIFICATION	1.9588516440350845E-5	IMPLEMENTATION
// inside a loop, jump to conditional	WITHOUT_CLASSIFICATION	0.9999062689948046	WITHOUT_CLASSIFICATION	9.373100519529693E-5	IMPLEMENTATION
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9998658712052457	WITHOUT_CLASSIFICATION	1.3412879475426374E-4	IMPLEMENTATION
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999827730918757	WITHOUT_CLASSIFICATION	1.7226908124358966E-5	IMPLEMENTATION
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999827730918757	WITHOUT_CLASSIFICATION	1.7226908124358966E-5	IMPLEMENTATION
// if more than 4 vars, get values array too	WITHOUT_CLASSIFICATION	0.9999966068715216	WITHOUT_CLASSIFICATION	3.3931284784327148E-6	IMPLEMENTATION
// retry handling in the rescue block	WITHOUT_CLASSIFICATION	0.999912171243476	WITHOUT_CLASSIFICATION	8.782875652402486E-5	IMPLEMENTATION
// any exceptions raised must continue to be raised, skipping $! restoration	WITHOUT_CLASSIFICATION	0.9998119079424456	WITHOUT_CLASSIFICATION	1.8809205755442943E-4	IMPLEMENTATION
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9995998538046043	WITHOUT_CLASSIFICATION	4.001461953956674E-4	IMPLEMENTATION
// restore the original exception	WITHOUT_CLASSIFICATION	0.9994714160620851	WITHOUT_CLASSIFICATION	5.28583937914855E-4	IMPLEMENTATION
// Handle Flow exceptions, just propagating them	WITHOUT_CLASSIFICATION	0.9999853132045493	WITHOUT_CLASSIFICATION	1.4686795450772001E-5	IMPLEMENTATION
// rethrow to outer flow catcher	WITHOUT_CLASSIFICATION	0.9998962224064675	WITHOUT_CLASSIFICATION	1.0377759353247696E-4	IMPLEMENTATION
// Handle Ruby exceptions (RaiseException)	WITHOUT_CLASSIFICATION	0.9998364492013377	WITHOUT_CLASSIFICATION	1.6355079866224505E-4	IMPLEMENTATION
// inside a loop, break out of it // go to end of loop, leaving break value on stack	WITHOUT_CLASSIFICATION	0.9999627378614583	WITHOUT_CLASSIFICATION	3.7262138541723365E-5	IMPLEMENTATION
// false // zero	WITHOUT_CLASSIFICATION	0.9996700480751919	WITHOUT_CLASSIFICATION	3.299519248081349E-4	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9997603299443603	WITHOUT_CLASSIFICATION	2.396700556397486E-4	IMPLEMENTATION
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9995998538046043	WITHOUT_CLASSIFICATION	4.001461953956674E-4	IMPLEMENTATION
// restore the original exception	WITHOUT_CLASSIFICATION	0.9994714160620851	WITHOUT_CLASSIFICATION	5.28583937914855E-4	IMPLEMENTATION
// retry handling in the rescue blocks	WITHOUT_CLASSIFICATION	0.9999403487975601	WITHOUT_CLASSIFICATION	5.965120243996413E-5	IMPLEMENTATION
// push false	WITHOUT_CLASSIFICATION	0.9996475824977097	WITHOUT_CLASSIFICATION	3.524175022902721E-4	IMPLEMENTATION
//method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));	WITHOUT_CLASSIFICATION	0.999162082315616	WITHOUT_CLASSIFICATION	8.37917684384032E-4	IMPLEMENTATION
//method.ifnonnull(trueLabel);	WITHOUT_CLASSIFICATION	0.9994325134615626	WITHOUT_CLASSIFICATION	5.674865384373897E-4	IMPLEMENTATION
// EQ == 0 (i.e. false)   //[C]	WITHOUT_CLASSIFICATION	0.9999612931364521	WITHOUT_CLASSIFICATION	3.870686354783668E-5	IMPLEMENTATION
//[C, C] //[C, C, String] //[C, null|C]	WITHOUT_CLASSIFICATION	0.999162082315616	WITHOUT_CLASSIFICATION	8.37917684384032E-4	IMPLEMENTATION
//[C]	WITHOUT_CLASSIFICATION	0.99991120461732	WITHOUT_CLASSIFICATION	8.879538267995327E-5	IMPLEMENTATION
// push true	WITHOUT_CLASSIFICATION	0.9993480694792175	WITHOUT_CLASSIFICATION	6.51930520782422E-4	IMPLEMENTATION
// EQ != 0 (i.e. true)	WITHOUT_CLASSIFICATION	0.9999627643944047	WITHOUT_CLASSIFICATION	3.723560559526826E-5	IMPLEMENTATION
//[?, ?] //[?, boolean]	WITHOUT_CLASSIFICATION	0.9994325134615626	WITHOUT_CLASSIFICATION	5.674865384373897E-4	IMPLEMENTATION
//[RubyModule] //[RubyModule, String]	WITHOUT_CLASSIFICATION	0.999162082315616	WITHOUT_CLASSIFICATION	8.37917684384032E-4	IMPLEMENTATION
//[boolean]	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
// no receiver for singleton class	WITHOUT_CLASSIFICATION	0.9999572985417644	WITHOUT_CLASSIFICATION	4.270145823546781E-5	IMPLEMENTATION
// but there's a superclass passed in, use it	WITHOUT_CLASSIFICATION	0.9990833663910741	WITHOUT_CLASSIFICATION	9.16633608925872E-4	IMPLEMENTATION
// we re-set self to the class, but store the old self in a temporary local variable // this is to prevent it GCing in case the singleton is short-lived	WITHOUT_CLASSIFICATION	0.9999879243680081	WITHOUT_CLASSIFICATION	1.2075631991830287E-5	IMPLEMENTATION
// set self to the class	WITHOUT_CLASSIFICATION	0.9999291041758611	WITHOUT_CLASSIFICATION	7.089582413885405E-5	IMPLEMENTATION
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9993881635822232	WITHOUT_CLASSIFICATION	6.118364177769137E-4	IMPLEMENTATION
// static scope	WITHOUT_CLASSIFICATION	0.9993845180403043	WITHOUT_CLASSIFICATION	6.154819596957674E-4	IMPLEMENTATION
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999866192838679	WITHOUT_CLASSIFICATION	1.3380716132101098E-5	IMPLEMENTATION
// new instance to invoke run against	WITHOUT_CLASSIFICATION	0.999936781276002	WITHOUT_CLASSIFICATION	6.32187239979395E-5	IMPLEMENTATION
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9993881635822232	WITHOUT_CLASSIFICATION	6.118364177769137E-4	IMPLEMENTATION
// static scope	WITHOUT_CLASSIFICATION	0.9993845180403043	WITHOUT_CLASSIFICATION	6.154819596957674E-4	IMPLEMENTATION
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999866192838679	WITHOUT_CLASSIFICATION	1.3380716132101098E-5	IMPLEMENTATION
// finally with exception	WITHOUT_CLASSIFICATION	0.9997295523992678	WITHOUT_CLASSIFICATION	2.704476007321763E-4	IMPLEMENTATION
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9994059468449071	WITHOUT_CLASSIFICATION	5.940531550928891E-4	IMPLEMENTATION
// otherwise, there's a receiver, so we pass that in directly for the sclass logic	WITHOUT_CLASSIFICATION	0.999963345478523	WITHOUT_CLASSIFICATION	3.6654521477065636E-5	IMPLEMENTATION
// original exception is on stack	WITHOUT_CLASSIFICATION	0.9995910957780435	WITHOUT_CLASSIFICATION	4.0890422195657196E-4	IMPLEMENTATION
// RaiseException is on stack, get RubyException out	WITHOUT_CLASSIFICATION	0.9999487390793206	WITHOUT_CLASSIFICATION	5.1260920679471294E-5	IMPLEMENTATION
// updating position for same line; skip	WITHOUT_CLASSIFICATION	0.9998380040015162	WITHOUT_CLASSIFICATION	1.6199599848384585E-4	IMPLEMENTATION
// callbacks to fill in method body	WITHOUT_CLASSIFICATION	0.9999922852292126	WITHOUT_CLASSIFICATION	7.714770787439608E-6	IMPLEMENTATION
// prepare to call "def" utility method to handle def logic	WITHOUT_CLASSIFICATION	0.9976444633617896	WITHOUT_CLASSIFICATION	0.002355536638210344	IMPLEMENTATION
// script object	WITHOUT_CLASSIFICATION	0.9996929478942134	WITHOUT_CLASSIFICATION	3.070521057866573E-4	IMPLEMENTATION
// arities	WITHOUT_CLASSIFICATION	0.9999817067840583	WITHOUT_CLASSIFICATION	1.8293215941744205E-5	IMPLEMENTATION
// TODO assuming case is a fixnum	WITHOUT_CLASSIFICATION	0.7346806698804356	WITHOUT_CLASSIFICATION	0.26531933011956443	IMPLEMENTATION
// we have an input case, prepare branching logic	WITHOUT_CLASSIFICATION	0.999945145624355	WITHOUT_CLASSIFICATION	5.485437564508671E-5	IMPLEMENTATION
// we have optimized switch cases, build a lookupswitch	WITHOUT_CLASSIFICATION	0.9996689677208269	WITHOUT_CLASSIFICATION	3.310322791730853E-4	IMPLEMENTATION
// checkcast the value; if match, fast path; otherwise proceed to slow logic	WITHOUT_CLASSIFICATION	0.9994443634976181	WITHOUT_CLASSIFICATION	5.556365023818541E-4	IMPLEMENTATION
// expression-based tests + bodies	WITHOUT_CLASSIFICATION	0.9999062484619562	WITHOUT_CLASSIFICATION	9.375153804377066E-5	IMPLEMENTATION
// normal case, create a new label	WITHOUT_CLASSIFICATION	0.9999809355496664	WITHOUT_CLASSIFICATION	1.906445033357528E-5	IMPLEMENTATION
// last conditional case, use defaultCase	WITHOUT_CLASSIFICATION	0.99980374676389	WITHOUT_CLASSIFICATION	1.9625323610992896E-4	IMPLEMENTATION
// do nothing; arity check is done before call	WITHOUT_CLASSIFICATION	0.9998643773583464	WITHOUT_CLASSIFICATION	1.356226416536506E-4	IMPLEMENTATION
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999867267964346	WITHOUT_CLASSIFICATION	1.3273203565458054E-5	IMPLEMENTATION
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999508336485822	WITHOUT_CLASSIFICATION	4.916635141779918E-5	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.999968901911425	WITHOUT_CLASSIFICATION	3.109808857500781E-5	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.9998730262994077	WITHOUT_CLASSIFICATION	1.2697370059236692E-4	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.9998730262994077	WITHOUT_CLASSIFICATION	1.2697370059236692E-4	IMPLEMENTATION
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999357744073766	WITHOUT_CLASSIFICATION	6.422559262349012E-5	IMPLEMENTATION
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999357744073766	WITHOUT_CLASSIFICATION	6.422559262349012E-5	IMPLEMENTATION
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9996378797071436	WITHOUT_CLASSIFICATION	3.6212029285641496E-4	IMPLEMENTATION
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9996378797071436	WITHOUT_CLASSIFICATION	3.6212029285641496E-4	IMPLEMENTATION
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999780654509467	WITHOUT_CLASSIFICATION	2.1934549053216236E-5	IMPLEMENTATION
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9980760177688716	WITHOUT_CLASSIFICATION	0.0019239822311283774	IMPLEMENTATION
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.999994305419592	WITHOUT_CLASSIFICATION	5.694580407907898E-6	IMPLEMENTATION
// if there's args left and we want them, assign to rest arg	WITHOUT_CLASSIFICATION	0.9995287868501526	WITHOUT_CLASSIFICATION	4.712131498474358E-4	IMPLEMENTATION
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999977020316708	WITHOUT_CLASSIFICATION	2.2979683291080425E-6	IMPLEMENTATION
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999591393225846	WITHOUT_CLASSIFICATION	4.086067741530446E-5	IMPLEMENTATION
// first, iterate over all pre args	WITHOUT_CLASSIFICATION	0.9999355043811577	WITHOUT_CLASSIFICATION	6.449561884222707E-5	IMPLEMENTATION
// then optional args	WITHOUT_CLASSIFICATION	0.999903843395	WITHOUT_CLASSIFICATION	9.615660499986494E-5	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999459484637785	WITHOUT_CLASSIFICATION	5.405153622158947E-5	IMPLEMENTATION
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999780654509467	WITHOUT_CLASSIFICATION	2.1934549053216236E-5	IMPLEMENTATION
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9980760177688716	WITHOUT_CLASSIFICATION	0.0019239822311283774	IMPLEMENTATION
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.999994305419592	WITHOUT_CLASSIFICATION	5.694580407907898E-6	IMPLEMENTATION
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999977020316708	WITHOUT_CLASSIFICATION	2.2979683291080425E-6	IMPLEMENTATION
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999591393225846	WITHOUT_CLASSIFICATION	4.086067741530446E-5	IMPLEMENTATION
// if rest args, excluding post args	WITHOUT_CLASSIFICATION	0.9999535713189648	WITHOUT_CLASSIFICATION	4.642868103519602E-5	IMPLEMENTATION
// finally, post args	WITHOUT_CLASSIFICATION	0.9998913258495218	WITHOUT_CLASSIFICATION	1.0867415047814627E-4	IMPLEMENTATION
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9979162578150634	WITHOUT_CLASSIFICATION	0.002083742184936481	IMPLEMENTATION
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9979162578150634	WITHOUT_CLASSIFICATION	0.002083742184936481	IMPLEMENTATION
// unwrap scopes to appropriate depth	WITHOUT_CLASSIFICATION	0.9998121151799109	WITHOUT_CLASSIFICATION	1.8788482008922136E-4	IMPLEMENTATION
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999996797397104	WITHOUT_CLASSIFICATION	3.2026028969334E-7	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9971495487430189	WITHOUT_CLASSIFICATION	0.002850451256981094	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9997527246344343	WITHOUT_CLASSIFICATION	2.472753655656376E-4	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9997527246344343	WITHOUT_CLASSIFICATION	2.472753655656376E-4	IMPLEMENTATION
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999672533548729	WITHOUT_CLASSIFICATION	3.2746645127108345E-5	IMPLEMENTATION
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9997718388302494	WITHOUT_CLASSIFICATION	2.2816116975047816E-4	IMPLEMENTATION
// store the local vars in a local variable	WITHOUT_CLASSIFICATION	0.999992582466541	WITHOUT_CLASSIFICATION	7.417533458979655E-6	IMPLEMENTATION
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9997068805643092	WITHOUT_CLASSIFICATION	2.931194356908766E-4	IMPLEMENTATION
// return in a class body raises error	WITHOUT_CLASSIFICATION	0.9999965387867021	WITHOUT_CLASSIFICATION	3.461213297887901E-6	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999973567971581	WITHOUT_CLASSIFICATION	2.6432028419684403E-6	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999819082774364	WITHOUT_CLASSIFICATION	1.8091722563620987E-5	IMPLEMENTATION
// end of variable scope	WITHOUT_CLASSIFICATION	0.9998851153488518	WITHOUT_CLASSIFICATION	1.1488465114815405E-4	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9997232553060599	WITHOUT_CLASSIFICATION	2.767446939401059E-4	IMPLEMENTATION
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9998787289821427	WITHOUT_CLASSIFICATION	1.2127101785722859E-4	IMPLEMENTATION
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999308960143863	WITHOUT_CLASSIFICATION	6.910398561362435E-5	IMPLEMENTATION
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999672533548729	WITHOUT_CLASSIFICATION	3.2746645127108345E-5	IMPLEMENTATION
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9997718388302494	WITHOUT_CLASSIFICATION	2.2816116975047816E-4	IMPLEMENTATION
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9997068805643092	WITHOUT_CLASSIFICATION	2.931194356908766E-4	IMPLEMENTATION
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9829847494985993	WITHOUT_CLASSIFICATION	0.017015250501400733	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9971495487430189	WITHOUT_CLASSIFICATION	0.002850451256981094	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9971495487430189	WITHOUT_CLASSIFICATION	0.002850451256981094	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9997603299443603	WITHOUT_CLASSIFICATION	2.396700556397486E-4	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9997603299443603	WITHOUT_CLASSIFICATION	2.396700556397486E-4	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9034544572011034	WITHOUT_CLASSIFICATION	0.09654554279889656	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9034544572011034	WITHOUT_CLASSIFICATION	0.09654554279889656	IMPLEMENTATION
// store the local vars in a local variable if there are any	WITHOUT_CLASSIFICATION	0.9999992320368649	WITHOUT_CLASSIFICATION	7.679631351406863E-7	IMPLEMENTATION
// if more than 4 locals, get and populate the locals array too	WITHOUT_CLASSIFICATION	0.9999192560896318	WITHOUT_CLASSIFICATION	8.074391036816624E-5	IMPLEMENTATION
// fill local vars with nil, to avoid checking every access.	WITHOUT_CLASSIFICATION	0.9994418008442261	WITHOUT_CLASSIFICATION	5.581991557738968E-4	IMPLEMENTATION
// default for starting tempVariableIndex is ok	WITHOUT_CLASSIFICATION	0.9999809785149685	WITHOUT_CLASSIFICATION	1.9021485031552363E-5	IMPLEMENTATION
// store the local vars in a local variable for preparing the class (using previous scope)	WITHOUT_CLASSIFICATION	0.999998351503534	WITHOUT_CLASSIFICATION	1.6484964659700138E-6	IMPLEMENTATION
// store the new local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999943162566969	WITHOUT_CLASSIFICATION	5.683743303031639E-6	IMPLEMENTATION
// in 1.8 mode, this will be a RubyArray containing the arguments // in 1.9 mode, this will be an IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999978360830523	WITHOUT_CLASSIFICATION	2.163916947792658E-6	IMPLEMENTATION
// no variable initialization, because we're reusing parent's scope (flat)	WITHOUT_CLASSIFICATION	0.9999498937659377	WITHOUT_CLASSIFICATION	5.0106234062373424E-5	IMPLEMENTATION
// for specific-index cases, clean up non-expression values	WITHOUT_CLASSIFICATION	0.9999928262116045	WITHOUT_CLASSIFICATION	7.173788395579175E-6	IMPLEMENTATION
// set up a local Ruby variable	WITHOUT_CLASSIFICATION	0.9999437532607724	WITHOUT_CLASSIFICATION	5.6246739227549816E-5	IMPLEMENTATION
// if that succeeds, the others should as well	WITHOUT_CLASSIFICATION	0.9999851167743423	WITHOUT_CLASSIFICATION	1.4883225657745287E-5	IMPLEMENTATION
// verify the class	WITHOUT_CLASSIFICATION	0.9997085930353397	WITHOUT_CLASSIFICATION	2.914069646604294E-4	IMPLEMENTATION
// create dir if necessary	WITHOUT_CLASSIFICATION	0.9999443384412313	WITHOUT_CLASSIFICATION	5.566155876855617E-5	IMPLEMENTATION
// Create the class with the appropriate class name and source file	WITHOUT_CLASSIFICATION	0.9999704112692386	WITHOUT_CLASSIFICATION	2.95887307614765E-5	IMPLEMENTATION
// add setPosition impl, which stores filename as constant to speed updates	WITHOUT_CLASSIFICATION	0.9999571501241677	WITHOUT_CLASSIFICATION	4.284987583220275E-5	IMPLEMENTATION
// thread context	WITHOUT_CLASSIFICATION	0.9978617272232166	WITHOUT_CLASSIFICATION	0.002138272776783389	IMPLEMENTATION
// line number	WITHOUT_CLASSIFICATION	0.9995506397864524	WITHOUT_CLASSIFICATION	4.49360213547579E-4	IMPLEMENTATION
// invoke __file__ with threadcontext, self, args (null), and block (null)	WITHOUT_CLASSIFICATION	0.999783764917147	WITHOUT_CLASSIFICATION	2.1623508285307217E-4	IMPLEMENTATION
// load always uses IRubyObject[], so simple closure offset calculation here	WITHOUT_CLASSIFICATION	0.9997636977099482	WITHOUT_CLASSIFICATION	2.3630229005166297E-4	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999819082774364	WITHOUT_CLASSIFICATION	1.8091722563620987E-5	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9997232553060599	WITHOUT_CLASSIFICATION	2.767446939401059E-4	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999326483330024	WITHOUT_CLASSIFICATION	6.735166699758587E-5	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999730797161539	WITHOUT_CLASSIFICATION	2.6920283846099284E-5	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999730797161539	WITHOUT_CLASSIFICATION	2.6920283846099284E-5	IMPLEMENTATION
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9829847494985993	WITHOUT_CLASSIFICATION	0.017015250501400733	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9971495487430189	WITHOUT_CLASSIFICATION	0.002850451256981094	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9997603299443603	WITHOUT_CLASSIFICATION	2.396700556397486E-4	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9034544572011034	WITHOUT_CLASSIFICATION	0.09654554279889656	IMPLEMENTATION
// add Script#run impl, used for running this script with a specified threadcontext and self // root method of a script is always in __file__ method	WITHOUT_CLASSIFICATION	0.9999880865754694	WITHOUT_CLASSIFICATION	1.1913424530496903E-5	IMPLEMENTATION
// add main impl, used for detached or command-line execution of this script with a new runtime // root method of a script is always in stub0, method0	WITHOUT_CLASSIFICATION	0.9999754767526733	WITHOUT_CLASSIFICATION	2.452324732665622E-5	IMPLEMENTATION
// construct static scope list of names	WITHOUT_CLASSIFICATION	0.9999039255499641	WITHOUT_CLASSIFICATION	9.607445003583308E-5	IMPLEMENTATION
// JRUBY-3014: make __FILE__ dynamically determined at load time, but // we provide a reasonable default here	WITHOUT_CLASSIFICATION	0.9999506926743501	WITHOUT_CLASSIFICATION	4.930732565003273E-5	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999565395151844	WITHOUT_CLASSIFICATION	4.346048481569286E-5	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999565395151844	WITHOUT_CLASSIFICATION	4.346048481569286E-5	IMPLEMENTATION
// lazily create class init only if necessary	WITHOUT_CLASSIFICATION	0.9999694225247745	WITHOUT_CLASSIFICATION	3.057747522548586E-5	IMPLEMENTATION
// boxed arg list __file__	WITHOUT_CLASSIFICATION	0.9999115623010966	WITHOUT_CLASSIFICATION	8.84376989035178E-5	IMPLEMENTATION
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9998830261535862	WITHOUT_CLASSIFICATION	1.1697384641393215E-4	IMPLEMENTATION
// exact arg list __file__	WITHOUT_CLASSIFICATION	0.9999233613231207	WITHOUT_CLASSIFICATION	7.66386768793136E-5	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.9995307731697002	WITHOUT_CLASSIFICATION	4.692268302997183E-4	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.9995307731697002	WITHOUT_CLASSIFICATION	4.692268302997183E-4	IMPLEMENTATION
// not using a new scope, use saved one for a flat closure	WITHOUT_CLASSIFICATION	0.9997020825572515	WITHOUT_CLASSIFICATION	2.9791744274862447E-4	IMPLEMENTATION
// normal closure	WITHOUT_CLASSIFICATION	0.9989207962200497	WITHOUT_CLASSIFICATION	0.0010792037799503005	IMPLEMENTATION
// end of scoping for closure's vars	WITHOUT_CLASSIFICATION	0.9999280382919232	WITHOUT_CLASSIFICATION	7.196170807677264E-5	IMPLEMENTATION
// we only need full-on redo exception handling if there's logic that might produce it	WITHOUT_CLASSIFICATION	0.9868950221112882	WITHOUT_CLASSIFICATION	0.01310497788871173	IMPLEMENTATION
// handle redos by restarting the block	WITHOUT_CLASSIFICATION	0.9995567847754634	WITHOUT_CLASSIFICATION	4.432152245366119E-4	IMPLEMENTATION
// jump back to the top of the main body of this closure	WITHOUT_CLASSIFICATION	0.9992361886471806	WITHOUT_CLASSIFICATION	7.638113528194284E-4	IMPLEMENTATION
// Ruby name 	WITHOUT_CLASSIFICATION	0.998930648732337	WITHOUT_CLASSIFICATION	0.0010693512676631118	IMPLEMENTATION
// Accumulate call arguments	WITHOUT_CLASSIFICATION	0.9997828511631428	WITHOUT_CLASSIFICATION	2.1714883685721692E-4	IMPLEMENTATION
// Fix FileNameCompletor to work mid-line	WITHOUT_CLASSIFICATION	0.9998416750949671	WITHOUT_CLASSIFICATION	1.5832490503291894E-4	IMPLEMENTATION
// We need to ensure that the variable names generated here cannot conflict with ruby variable names! // Hence the "%" tthat is appended to the beginning!	WITHOUT_CLASSIFICATION	0.9992201908647391	WITHOUT_CLASSIFICATION	7.798091352608934E-4	IMPLEMENTATION
// Does this method define code?  // Default is yes -- which basically leads to pessimistic but safe optimizations // But, for library and internal methods, this might be false.	WITHOUT_CLASSIFICATION	0.9999856997117055	WITHOUT_CLASSIFICATION	1.4300288294524154E-5	IMPLEMENTATION
// Map of constants defined in this scope (not valid for methods!)	WITHOUT_CLASSIFICATION	0.9999995290998571	WITHOUT_CLASSIFICATION	4.709001429090444E-7	IMPLEMENTATION
// NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner // with outer loops encountered before inner loops, and inner loops finished before outer ones. // // So, we can keep track of loops in a loop stack which  keeps track of loops as they are encountered. // This lets us implement next/redo/break/retry easily for the non-closure cases	WITHOUT_CLASSIFICATION	0.9999882848780831	WITHOUT_CLASSIFICATION	1.1715121916990003E-5	IMPLEMENTATION
// Map keep track of the next available variable index for a particular prefix	WITHOUT_CLASSIFICATION	0.9982334316360699	WITHOUT_CLASSIFICATION	0.0017665683639301074	IMPLEMENTATION
// Control flow graph for this scope	WITHOUT_CLASSIFICATION	0.9999118126870725	WITHOUT_CLASSIFICATION	8.818731292747919E-5	IMPLEMENTATION
//        _lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;	WITHOUT_CLASSIFICATION	0.9998708585830963	WITHOUT_CLASSIFICATION	1.2914141690367455E-4	IMPLEMENTATION
// List of modules, classes, and methods defined in this scope!	WITHOUT_CLASSIFICATION	0.9999972041834415	WITHOUT_CLASSIFICATION	2.7958165585240323E-6	IMPLEMENTATION
// Returns the containing parent scope!	WITHOUT_CLASSIFICATION	0.9997524105009165	WITHOUT_CLASSIFICATION	2.475894990835688E-4	IMPLEMENTATION
// Insert nesting level to ensure variable names don't conflict across nested scopes! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //        return new Variable(prefix + _lexicalNestingLevel + "_" + idx);	WITHOUT_CLASSIFICATION	0.9999777581808121	WITHOUT_CLASSIFICATION	2.2241819187873544E-5	IMPLEMENTATION
// get "self"	WITHOUT_CLASSIFICATION	0.9997329379958694	WITHOUT_CLASSIFICATION	2.670620041305624E-4	IMPLEMENTATION
// variable is never read, variable is never live	WITHOUT_CLASSIFICATION	0.9983226939967303	WITHOUT_CLASSIFICATION	0.0016773060032696625	IMPLEMENTATION
// inline script	WITHOUT_CLASSIFICATION	0.999502654295372	WITHOUT_CLASSIFICATION	4.973457046280183E-4	IMPLEMENTATION
// inline script	WITHOUT_CLASSIFICATION	0.999502654295372	WITHOUT_CLASSIFICATION	4.973457046280183E-4	IMPLEMENTATION
// This method is called to build assignments for a multiple-assignment instruction	WITHOUT_CLASSIFICATION	0.999977972629196	WITHOUT_CLASSIFICATION	2.2027370804063474E-5	IMPLEMENTATION
// Build the class body!	WITHOUT_CLASSIFICATION	0.9999342546177131	WITHOUT_CLASSIFICATION	6.57453822868816E-5	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999738313019506	WITHOUT_CLASSIFICATION	2.6168698049275217E-5	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999738313019506	WITHOUT_CLASSIFICATION	2.6168698049275217E-5	IMPLEMENTATION
// SSS FIXME: Can this ever be null?	WITHOUT_CLASSIFICATION	0.9998117397718842	WITHOUT_CLASSIFICATION	1.8826022811576132E-4	IMPLEMENTATION
// Run the pass on the passed in scope!	WITHOUT_CLASSIFICATION	0.9999438798138515	WITHOUT_CLASSIFICATION	5.612018614854332E-5	IMPLEMENTATION
// done // done // done // done	WITHOUT_CLASSIFICATION	0.99988405315604	WITHOUT_CLASSIFICATION	1.1594684396008443E-4	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999993403003206	WITHOUT_CLASSIFICATION	6.596996794555516E-7	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999993403003206	WITHOUT_CLASSIFICATION	6.596996794555516E-7	IMPLEMENTATION
// This method is called to build arguments for a block!	WITHOUT_CLASSIFICATION	0.9999785248145538	WITHOUT_CLASSIFICATION	2.1475185446053865E-5	IMPLEMENTATION
// build first node (and ignore its result) and then second node	WITHOUT_CLASSIFICATION	0.9998067413739822	WITHOUT_CLASSIFICATION	1.9325862601790833E-4	IMPLEMENTATION
// build first node only and return false	WITHOUT_CLASSIFICATION	0.9998333030578718	WITHOUT_CLASSIFICATION	1.6669694212820163E-4	IMPLEMENTATION
// Value of the last expression in the block 	WITHOUT_CLASSIFICATION	0.9999662149040892	WITHOUT_CLASSIFICATION	3.378509591087453E-5	IMPLEMENTATION
// If this is not a closure, the break is equivalent to jumping to the loop end label	WITHOUT_CLASSIFICATION	0.9995333749378319	WITHOUT_CLASSIFICATION	4.666250621680861E-4	IMPLEMENTATION
// get the incoming case value	WITHOUT_CLASSIFICATION	0.9999446268641253	WITHOUT_CLASSIFICATION	5.537313587456724E-5	IMPLEMENTATION
// the CASE instruction	WITHOUT_CLASSIFICATION	0.9998749658711005	WITHOUT_CLASSIFICATION	1.2503412889947735E-4	IMPLEMENTATION
// lists to aggregate variables and bodies for whens	WITHOUT_CLASSIFICATION	0.9999631681161848	WITHOUT_CLASSIFICATION	3.683188381513099E-5	IMPLEMENTATION
// build each "when"	WITHOUT_CLASSIFICATION	0.9995920121657792	WITHOUT_CLASSIFICATION	4.079878342207101E-4	IMPLEMENTATION
// multiple conditions for when	WITHOUT_CLASSIFICATION	0.9999757865032255	WITHOUT_CLASSIFICATION	2.421349677451084E-5	IMPLEMENTATION
// build "else" if it exists	WITHOUT_CLASSIFICATION	0.99996301990803	WITHOUT_CLASSIFICATION	3.698009196993812E-5	IMPLEMENTATION
// now emit bodies	WITHOUT_CLASSIFICATION	0.9995268660961589	WITHOUT_CLASSIFICATION	4.731339038410839E-4	IMPLEMENTATION
// close it out	WITHOUT_CLASSIFICATION	0.9998074490250368	WITHOUT_CLASSIFICATION	1.925509749631391E-4	IMPLEMENTATION
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999631935076431	WITHOUT_CLASSIFICATION	3.6806492356966815E-5	IMPLEMENTATION
// Do we have a dynamic container?	WITHOUT_CLASSIFICATION	0.9989597453048048	WITHOUT_CLASSIFICATION	0.001040254695195225	IMPLEMENTATION
// Return a meta object corresponding to the class	WITHOUT_CLASSIFICATION	0.9999666633849742	WITHOUT_CLASSIFICATION	3.333661502582898E-5	IMPLEMENTATION
// 1. Load the module first (lhs of node) // 2. Then load the constant from the module	WITHOUT_CLASSIFICATION	0.9999501089015259	WITHOUT_CLASSIFICATION	4.989109847414316E-5	IMPLEMENTATION
// Build IR for args	WITHOUT_CLASSIFICATION	0.9997845336436642	WITHOUT_CLASSIFICATION	2.1546635633597935E-4	IMPLEMENTATION
// Build IR for body	WITHOUT_CLASSIFICATION	0.999930528123188	WITHOUT_CLASSIFICATION	6.947187681209266E-5	IMPLEMENTATION
// if root of method is rescue, build as a light rescue	WITHOUT_CLASSIFICATION	0.9999864196188548	WITHOUT_CLASSIFICATION	1.3580381145225855E-5	IMPLEMENTATION
// Instance method	WITHOUT_CLASSIFICATION	0.9979948094107421	WITHOUT_CLASSIFICATION	0.0020051905892578548	IMPLEMENTATION
// Class method	WITHOUT_CLASSIFICATION	0.9989567377576773	WITHOUT_CLASSIFICATION	0.0010432622423226224	IMPLEMENTATION
// Other args begin at index 1	WITHOUT_CLASSIFICATION	0.9998799481164329	WITHOUT_CLASSIFICATION	1.2005188356715833E-4	IMPLEMENTATION
// Both for fixed arity and variable arity methods	WITHOUT_CLASSIFICATION	0.9999805789944275	WITHOUT_CLASSIFICATION	1.9421005572485045E-5	IMPLEMENTATION
// Now for the rest	WITHOUT_CLASSIFICATION	0.9989612349006098	WITHOUT_CLASSIFICATION	0.001038765099390094	IMPLEMENTATION
// Jump to 'l' if this arg is not null.  If null, fall through and build the default value!	WITHOUT_CLASSIFICATION	0.9999848238329473	WITHOUT_CLASSIFICATION	1.5176167052699571E-5	IMPLEMENTATION
// This is not an expression that computes anything	WITHOUT_CLASSIFICATION	0.986392271124628	WITHOUT_CLASSIFICATION	0.013607728875371983	IMPLEMENTATION
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999125692518043	WITHOUT_CLASSIFICATION	8.743074819581648E-5	IMPLEMENTATION
// Build args	WITHOUT_CLASSIFICATION	0.9994585760482211	WITHOUT_CLASSIFICATION	5.414239517789273E-4	IMPLEMENTATION
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999779979505543	WITHOUT_CLASSIFICATION	2.2002049445638285E-5	IMPLEMENTATION
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999503009019658	WITHOUT_CLASSIFICATION	4.9699098034229504E-5	IMPLEMENTATION
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999631935076431	WITHOUT_CLASSIFICATION	3.6806492356966815E-5	IMPLEMENTATION
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999125692518043	WITHOUT_CLASSIFICATION	8.743074819581648E-5	IMPLEMENTATION
// Build args	WITHOUT_CLASSIFICATION	0.9994585760482211	WITHOUT_CLASSIFICATION	5.414239517789273E-4	IMPLEMENTATION
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999503009019658	WITHOUT_CLASSIFICATION	4.9699098034229504E-5	IMPLEMENTATION
// Get the container for this new module	WITHOUT_CLASSIFICATION	0.9999514935028532	WITHOUT_CLASSIFICATION	4.85064971468498E-5	IMPLEMENTATION
// Build the new module	WITHOUT_CLASSIFICATION	0.9999008305127459	WITHOUT_CLASSIFICATION	9.91694872541301E-5	IMPLEMENTATION
// Build the module body	WITHOUT_CLASSIFICATION	0.9999600534761975	WITHOUT_CLASSIFICATION	3.994652380236681E-5	IMPLEMENTATION
// First, build an assignment for a splat, if any, with the rest of the args!	WITHOUT_CLASSIFICATION	0.9999976354249583	WITHOUT_CLASSIFICATION	2.364575041745632E-6	IMPLEMENTATION
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999566178908069	WITHOUT_CLASSIFICATION	4.338210919296684E-5	IMPLEMENTATION
// If a closure, the next is simply a return from the closure! // If a regular loop, the next is simply a jump to the end of the iteration	WITHOUT_CLASSIFICATION	0.9997755061558623	WITHOUT_CLASSIFICATION	2.2449384413764095E-4	IMPLEMENTATION
// get attr	WITHOUT_CLASSIFICATION	0.9997329379958694	WITHOUT_CLASSIFICATION	2.670620041305624E-4	IMPLEMENTATION
// call operator	WITHOUT_CLASSIFICATION	0.9988367221382732	WITHOUT_CLASSIFICATION	0.0011632778617267402	IMPLEMENTATION
// set attr	WITHOUT_CLASSIFICATION	0.9993145186363048	WITHOUT_CLASSIFICATION	6.85481363695231E-4	IMPLEMENTATION
// Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, false, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9997545681539075	WITHOUT_CLASSIFICATION	2.45431846092445E-4	IMPLEMENTATION
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999468058544364	WITHOUT_CLASSIFICATION	5.3194145563667774E-5	IMPLEMENTATION
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999468058544364	WITHOUT_CLASSIFICATION	5.3194145563667774E-5	IMPLEMENTATION
// if v1 is defined and true, we are done! 	WITHOUT_CLASSIFICATION	0.9999956615642084	WITHOUT_CLASSIFICATION	4.338435791607809E-6	IMPLEMENTATION
// build first node only and return true	WITHOUT_CLASSIFICATION	0.9996915817584974	WITHOUT_CLASSIFICATION	3.084182415027031E-4	IMPLEMENTATION
// build first node as non-expr and build second node	WITHOUT_CLASSIFICATION	0.9999133534813422	WITHOUT_CLASSIFICATION	8.664651865765174E-5	IMPLEMENTATION
// Top-level script!	WITHOUT_CLASSIFICATION	0.9993881635822232	WITHOUT_CLASSIFICATION	6.118364177769137E-4	IMPLEMENTATION
// we won't enter the loop -- just build the condition node	WITHOUT_CLASSIFICATION	0.9999979827841263	WITHOUT_CLASSIFICATION	2.0172158735947927E-6	IMPLEMENTATION
/* ----------- Private Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999825224632237	WITHOUT_CLASSIFICATION	1.747753677628593E-5	IMPLEMENTATION
// What handles warnings	WITHOUT_CLASSIFICATION	0.9997606967308709	WITHOUT_CLASSIFICATION	2.3930326912915002E-4	IMPLEMENTATION
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999994959955847	WITHOUT_CLASSIFICATION	5.040044154025278E-7	IMPLEMENTATION
// For closures, a redo is a jump to the beginning of the closure // For non-closures, a redo is a jump to the beginning of the loop	WITHOUT_CLASSIFICATION	0.9999562858981127	WITHOUT_CLASSIFICATION	4.371410188735296E-5	IMPLEMENTATION
// The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.999983087063882	WITHOUT_CLASSIFICATION	1.6912936117983237E-5	IMPLEMENTATION
// Dummy top-level method for the class	WITHOUT_CLASSIFICATION	0.9998749655703669	WITHOUT_CLASSIFICATION	1.250344296330519E-4	IMPLEMENTATION
// Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999827730096487	WITHOUT_CLASSIFICATION	1.7226990351368984E-5	IMPLEMENTATION
// ------ Define the operations below ----	WITHOUT_CLASSIFICATION	0.9997739408103465	WITHOUT_CLASSIFICATION	2.2605918965335704E-4	IMPLEMENTATION
// value copy and type conversion operations	WITHOUT_CLASSIFICATION	0.9999753871019326	WITHOUT_CLASSIFICATION	2.4612898067440923E-5	IMPLEMENTATION
// alu operations	WITHOUT_CLASSIFICATION	0.9984485111746559	WITHOUT_CLASSIFICATION	0.0015514888253441558	IMPLEMENTATION
// method handle, arg receive, return value, and  call instructions	WITHOUT_CLASSIFICATION	0.9991570172789631	WITHOUT_CLASSIFICATION	8.429827210368379E-4	IMPLEMENTATION
// closure instructions	WITHOUT_CLASSIFICATION	0.9998830445803648	WITHOUT_CLASSIFICATION	1.1695541963519677E-4	IMPLEMENTATION
// eval instructions	WITHOUT_CLASSIFICATION	0.9993881635822232	WITHOUT_CLASSIFICATION	6.118364177769137E-4	IMPLEMENTATION
// def instructions	WITHOUT_CLASSIFICATION	0.9993882478367402	WITHOUT_CLASSIFICATION	6.117521632598441E-4	IMPLEMENTATION
// exception instructions	WITHOUT_CLASSIFICATION	0.999777703091405	WITHOUT_CLASSIFICATION	2.2229690859503016E-4	IMPLEMENTATION
// Loads	WITHOUT_CLASSIFICATION	0.9999817067840583	WITHOUT_CLASSIFICATION	1.8293215941744205E-5	IMPLEMENTATION
// Stores	WITHOUT_CLASSIFICATION	0.9999817067840583	WITHOUT_CLASSIFICATION	1.8293215941744205E-5	IMPLEMENTATION
// jump and branch operations	WITHOUT_CLASSIFICATION	0.9997866734918747	WITHOUT_CLASSIFICATION	2.1332650812534246E-4	IMPLEMENTATION
// others	WITHOUT_CLASSIFICATION	0.9999818327535769	WITHOUT_CLASSIFICATION	1.8167246423127455E-5	IMPLEMENTATION
// a case/when branch	WITHOUT_CLASSIFICATION	0.9999222337085237	WITHOUT_CLASSIFICATION	7.776629147618742E-5	IMPLEMENTATION
// optimization guards	WITHOUT_CLASSIFICATION	0.9998830662615027	WITHOUT_CLASSIFICATION	1.1693373849738924E-4	IMPLEMENTATION
// By default, call instructions cannot be deleted even if their results aren't used by anyone // unless we know more about what the call is, what it does, etc. // Similarly for evals, stores, returns.	WITHOUT_CLASSIFICATION	0.843548290251077	WITHOUT_CLASSIFICATION	0.15645170974892306	IMPLEMENTATION
// Returns the containing parent scope -- can be a dynamic value (hence Operand)!	WITHOUT_CLASSIFICATION	0.9998898081030942	WITHOUT_CLASSIFICATION	1.1019189690584186E-4	IMPLEMENTATION
// scripts	WITHOUT_CLASSIFICATION	0.9999817821384087	WITHOUT_CLASSIFICATION	1.8217861591222896E-5	IMPLEMENTATION
// scripts and modules	WITHOUT_CLASSIFICATION	0.9999600607764066	WITHOUT_CLASSIFICATION	3.99392235934252E-5	IMPLEMENTATION
// scripts, classes, and modules	WITHOUT_CLASSIFICATION	0.9999420063633784	WITHOUT_CLASSIFICATION	5.799363662167287E-5	IMPLEMENTATION
// methods and closures	WITHOUT_CLASSIFICATION	0.9999630287742128	WITHOUT_CLASSIFICATION	3.697122578708174E-5	IMPLEMENTATION
// create a new variable using the prefix	WITHOUT_CLASSIFICATION	0.9999768184702069	WITHOUT_CLASSIFICATION	2.3181529793167948E-5	IMPLEMENTATION
// create a new temporary variable	WITHOUT_CLASSIFICATION	0.9999283549688436	WITHOUT_CLASSIFICATION	7.16450311564077E-5	IMPLEMENTATION
// Get a new label using a generic prefix	WITHOUT_CLASSIFICATION	0.9999974127612802	WITHOUT_CLASSIFICATION	2.5872387198557963E-6	IMPLEMENTATION
// Build the CFG for this scope -- supported only by methods & closures	WITHOUT_CLASSIFICATION	0.9999992397598296	WITHOUT_CLASSIFICATION	7.602401704420607E-7	IMPLEMENTATION
// Get the control flow graph for this scope -- only valid for methods & closures	WITHOUT_CLASSIFICATION	0.9999933678429596	WITHOUT_CLASSIFICATION	6.6321570403939455E-6	IMPLEMENTATION
// While processing loops, this returns the loop that we are processing.	WITHOUT_CLASSIFICATION	0.9998291081633349	WITHOUT_CLASSIFICATION	1.7089183666520346E-4	IMPLEMENTATION
// Record the loop we are beginning to process	WITHOUT_CLASSIFICATION	0.9999540297927778	WITHOUT_CLASSIFICATION	4.597020722217955E-5	IMPLEMENTATION
// Indicate that we are done processing the loop	WITHOUT_CLASSIFICATION	0.9994333421167345	WITHOUT_CLASSIFICATION	5.666578832655281E-4	IMPLEMENTATION
// Run the passed in compiler pass on this scope!	WITHOUT_CLASSIFICATION	0.9999152769069872	WITHOUT_CLASSIFICATION	8.472309301273581E-5	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9955528557517055	WITHOUT_CLASSIFICATION	0.004447144248294498	IMPLEMENTATION
// Readline	WITHOUT_CLASSIFICATION	0.9993881635822232	WITHOUT_CLASSIFICATION	6.118364177769137E-4	IMPLEMENTATION
// If the cfg of the method is around, print the CFG!	WITHOUT_CLASSIFICATION	0.9998395808353411	WITHOUT_CLASSIFICATION	1.6041916465884702E-4	IMPLEMENTATION
// Optimize some core class method calls for constant values	WITHOUT_CLASSIFICATION	0.9999698116275195	WITHOUT_CLASSIFICATION	3.0188372480571733E-5	IMPLEMENTATION
// If 'r' is not a constant, it could actually be a compound value! // Look in our value map to see if we have a simplified value for the receiver.	WITHOUT_CLASSIFICATION	0.999999583276341	WITHOUT_CLASSIFICATION	4.167236591050107E-7	IMPLEMENTATION
// Check if we can optimize this call based on the receiving method and receiver type // Use the simplified receiver!	WITHOUT_CLASSIFICATION	0.998018118697931	WITHOUT_CLASSIFICATION	0.0019818813020690018	IMPLEMENTATION
// If we got a simplified value, mark the call dead and insert a copy in its place!	WITHOUT_CLASSIFICATION	0.9999953014928132	WITHOUT_CLASSIFICATION	4.698507186705419E-6	IMPLEMENTATION
// If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!	WITHOUT_CLASSIFICATION	0.9999914193879625	WITHOUT_CLASSIFICATION	8.580612037403264E-6	IMPLEMENTATION
/* ----------- Public abstract methods ---------- */	WITHOUT_CLASSIFICATION	0.999991141988913	WITHOUT_CLASSIFICATION	8.858011086914532E-6	IMPLEMENTATION
/* ----------- Public methods with a default implementation ---------- */	WITHOUT_CLASSIFICATION	0.9999862397511348	WITHOUT_CLASSIFICATION	1.3760248865238044E-5	IMPLEMENTATION
// Compute meet over all "sources" and compute "destination" basic blocks that should then be processed.  // sources & targets depends on direction of the data flow problem	WITHOUT_CLASSIFICATION	0.9999955267713354	WITHOUT_CLASSIFICATION	4.473228664549267E-6	IMPLEMENTATION
// If the solution has changed, add "dsts" to the work list. // No duplicates please which is why we have bbset.	WITHOUT_CLASSIFICATION	0.9991352150777326	WITHOUT_CLASSIFICATION	8.647849222673689E-4	IMPLEMENTATION
/* --------- Protected fields/methods below --------- */	WITHOUT_CLASSIFICATION	0.999985151716394	WITHOUT_CLASSIFICATION	1.4848283606139613E-5	IMPLEMENTATION
// Dataflow problem with which this node is associated // CFG node for which this node contains info.	WITHOUT_CLASSIFICATION	0.9999046458089975	WITHOUT_CLASSIFICATION	9.535419100245812E-5	IMPLEMENTATION
/* -------------- Public fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.99999600484159	WITHOUT_CLASSIFICATION	3.995158410028773E-6	IMPLEMENTATION
// ------- Abstract methods without a default implementation -------	WITHOUT_CLASSIFICATION	0.9998995853095142	WITHOUT_CLASSIFICATION	1.004146904859127E-4	IMPLEMENTATION
// ------- Default implementation methods below -------	WITHOUT_CLASSIFICATION	0.9997231053963171	WITHOUT_CLASSIFICATION	2.768946036828067E-4	IMPLEMENTATION
/* Compute Meet Over All Paths solution for this dataflow problem on the input CFG.     * This implements a standard worklist algorithm. */	WITHOUT_CLASSIFICATION	0.9999830298980437	WITHOUT_CLASSIFICATION	1.6970101956348246E-5	IMPLEMENTATION
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9999190827739303	WITHOUT_CLASSIFICATION	8.091722606977603E-5	IMPLEMENTATION
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9999190827739303	WITHOUT_CLASSIFICATION	8.091722606977603E-5	IMPLEMENTATION
/* -------------- Packaged/protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999955409812292	WITHOUT_CLASSIFICATION	4.459018770732044E-6	IMPLEMENTATION
// We want unique ids for dataflow variables	WITHOUT_CLASSIFICATION	0.9998143947320809	WITHOUT_CLASSIFICATION	1.8560526791913632E-4	IMPLEMENTATION
/* -------------- Protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999955409812292	WITHOUT_CLASSIFICATION	4.459018770732044E-6	IMPLEMENTATION
/* -------------- Private fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999964470520193	WITHOUT_CLASSIFICATION	3.5529479808176086E-6	IMPLEMENTATION
// Initialize all flow graph nodes 	WITHOUT_CLASSIFICATION	0.9998049004529048	WITHOUT_CLASSIFICATION	1.950995470952707E-4	IMPLEMENTATION
/* Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses */	WITHOUT_CLASSIFICATION	0.999999725544212	WITHOUT_CLASSIFICATION	2.7445578796079884E-7	IMPLEMENTATION
/* ******************** PUBLIC INTERFACE ******************* */	WITHOUT_CLASSIFICATION	0.9999739061815753	WITHOUT_CLASSIFICATION	2.609381842475408E-5	IMPLEMENTATION
// Unique ID assigned to this variable	WITHOUT_CLASSIFICATION	0.9995897811968704	WITHOUT_CLASSIFICATION	4.102188031296566E-4	IMPLEMENTATION
// start out with a default RubyObject allocator	WITHOUT_CLASSIFICATION	0.999980316699674	WITHOUT_CLASSIFICATION	1.9683300325924578E-5	IMPLEMENTATION
// switch to an allocator based on a default constructor	WITHOUT_CLASSIFICATION	0.9999914688203196	WITHOUT_CLASSIFICATION	8.531179680392657E-6	IMPLEMENTATION
/* ----------- Public Interface ------------ */	WITHOUT_CLASSIFICATION	0.99998034719129	WITHOUT_CLASSIFICATION	1.9652808710068537E-5	IMPLEMENTATION
// class or module	WITHOUT_CLASSIFICATION	0.9996337875407301	WITHOUT_CLASSIFICATION	3.6621245926991586E-4	IMPLEMENTATION
// OUT = UNION(IN(succs))	WITHOUT_CLASSIFICATION	0.9998637808380287	WITHOUT_CLASSIFICATION	1.3621916197124155E-4	IMPLEMENTATION
// Traverse the instructions in this basic block in reverse order!	WITHOUT_CLASSIFICATION	0.9999662745454041	WITHOUT_CLASSIFICATION	3.372545459586842E-5	IMPLEMENTATION
// v is defined => It is no longer live before 'i'	WITHOUT_CLASSIFICATION	0.9999963366874729	WITHOUT_CLASSIFICATION	3.663312527158656E-6	IMPLEMENTATION
// IN is the same!	WITHOUT_CLASSIFICATION	0.9996609653141072	WITHOUT_CLASSIFICATION	3.3903468589283894E-4	IMPLEMENTATION
// IN changed!	WITHOUT_CLASSIFICATION	0.9993890521667871	WITHOUT_CLASSIFICATION	6.10947833212937E-4	IMPLEMENTATION
/* ---------- Protected / package fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999911086040008	WITHOUT_CLASSIFICATION	8.89139599915084E-6	IMPLEMENTATION
// If 'v' is not live at the instruction site, and it has no side effects, mark it dead!	WITHOUT_CLASSIFICATION	0.9999310517377547	WITHOUT_CLASSIFICATION	6.89482622454452E-5	IMPLEMENTATION
// Do not mark this instruction's operands live if the instruction itself is dead!	WITHOUT_CLASSIFICATION	0.9990606888097796	WITHOUT_CLASSIFICATION	9.393111902204092E-4	IMPLEMENTATION
/* ---------- Private fields, methods --------- */	WITHOUT_CLASSIFICATION	0.999991253987782	WITHOUT_CLASSIFICATION	8.746012217964325E-6	IMPLEMENTATION
// Variables live at entry of this node // Variables live at exit of node // Temporary set of live variables // Size of the "_in" and "_out" bit sets 	WITHOUT_CLASSIFICATION	0.9999313171766676	WITHOUT_CLASSIFICATION	6.868282333235703E-5	IMPLEMENTATION
// Used during optimization passes to propagate type and other information	WITHOUT_CLASSIFICATION	0.9999635764401246	WITHOUT_CLASSIFICATION	3.6423559875449414E-5	IMPLEMENTATION
// Does this instruction have side effects as a result of its operation // This information is used in optimization phases to impact dead code elimination // and other optimization passes	WITHOUT_CLASSIFICATION	0.9999990035773072	WITHOUT_CLASSIFICATION	9.964226928935082E-7	IMPLEMENTATION
/* --------- "Abstract"/"please-override" methods --------- */	WITHOUT_CLASSIFICATION	0.9999889577598731	WITHOUT_CLASSIFICATION	1.1042240126920676E-5	IMPLEMENTATION
/* Array of all operands for this instruction */	WITHOUT_CLASSIFICATION	0.9999897192124836	WITHOUT_CLASSIFICATION	1.028078751644159E-5	IMPLEMENTATION
/* List of all variables used by all operands of this instruction */	WITHOUT_CLASSIFICATION	0.9999854517940971	WITHOUT_CLASSIFICATION	1.4548205902856235E-5	IMPLEMENTATION
/*      * This method takes as input a map of operands to their values, and outputs     *     * If the value map provides a value for any of the instruction's operands     * this method is expected to replace the original operands with the simplified values.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify     */	WITHOUT_CLASSIFICATION	0.9996840616698388	WITHOUT_CLASSIFICATION	3.15938330161132E-4	IMPLEMENTATION
// By default, no simplifications!	WITHOUT_CLASSIFICATION	0.9997614671438658	WITHOUT_CLASSIFICATION	2.3853285613415626E-4	IMPLEMENTATION
// Can this call lead to ruby code getting modified?   // If we don't know what method we are calling, we assume it can (pessimistic, but safe!) // If we do know the target method, we ask the method itself whether it modifies ruby code	WITHOUT_CLASSIFICATION	0.7373579684332584	WITHOUT_CLASSIFICATION	0.2626420315667416	IMPLEMENTATION
// By default, return instructions cannot be deleted	WITHOUT_CLASSIFICATION	0.9998828760685653	WITHOUT_CLASSIFICATION	1.1712393143464499E-4	IMPLEMENTATION
// If true, returns the rest of the array starting at the index	WITHOUT_CLASSIFICATION	0.9998526575343568	WITHOUT_CLASSIFICATION	1.473424656432709E-4	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999501601643281	WITHOUT_CLASSIFICATION	4.983983567175684E-5	IMPLEMENTATION
// Map of label & basic blocks with that label	WITHOUT_CLASSIFICATION	0.9999849205383665	WITHOUT_CLASSIFICATION	1.5079461633602668E-5	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999501601643281	WITHOUT_CLASSIFICATION	4.983983567175684E-5	IMPLEMENTATION
// You can only value-replace atomic values	WITHOUT_CLASSIFICATION	0.9999768600823201	WITHOUT_CLASSIFICATION	2.313991767980521E-5	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999508491990947	WITHOUT_CLASSIFICATION	4.915080090526372E-5	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999508491990947	WITHOUT_CLASSIFICATION	4.915080090526372E-5	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999508491990947	WITHOUT_CLASSIFICATION	4.915080090526372E-5	IMPLEMENTATION
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999666811170351	WITHOUT_CLASSIFICATION	3.331888296483922E-5	IMPLEMENTATION
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999666811170351	WITHOUT_CLASSIFICATION	3.331888296483922E-5	IMPLEMENTATION
// The operand that this attribute targets //    DEFERRED //    AttributeValue _val;       // Attribute value	WITHOUT_CLASSIFICATION	0.9999249522291777	WITHOUT_CLASSIFICATION	7.504777082229255E-5	IMPLEMENTATION
// Arrays, Ranges, etc. are compound values // Variables, fixnums, floats, etc. are "atomic" values	WITHOUT_CLASSIFICATION	0.9999927149993146	WITHOUT_CLASSIFICATION	7.285000685343165E-6	IMPLEMENTATION
// Get the target class of this operand, if we know it!	WITHOUT_CLASSIFICATION	0.999860070638323	WITHOUT_CLASSIFICATION	1.3992936167688807E-4	IMPLEMENTATION
// The following constants capture pre-known static call sites -- used to implement ruby internals	WITHOUT_CLASSIFICATION	0.9919214915793854	WITHOUT_CLASSIFICATION	0.00807850842061471	IMPLEMENTATION
/* Nothing to do by default */	WITHOUT_CLASSIFICATION	0.9999983011360691	WITHOUT_CLASSIFICATION	1.698863930764934E-6	IMPLEMENTATION
// Map of label & basic blocks which are waiting for a bb with that label	WITHOUT_CLASSIFICATION	0.9999956427870671	WITHOUT_CLASSIFICATION	4.35721293287439E-6	IMPLEMENTATION
// Init before building basic blocks below!	WITHOUT_CLASSIFICATION	0.9999267036601733	WITHOUT_CLASSIFICATION	7.329633982660369E-5	IMPLEMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999783916231164	WITHOUT_CLASSIFICATION	2.16083768835129E-5	IMPLEMENTATION
// Scope (method/closure) to which this cfg belongs // Entry BB -- dummy // Exit BB -- dummy // The actual graph // Next available basic block id	WITHOUT_CLASSIFICATION	0.9995433310659225	WITHOUT_CLASSIFICATION	4.5666893407754456E-4	IMPLEMENTATION
// Jump instruction bbs dont add an edge to the succeeding bb by default	WITHOUT_CLASSIFICATION	0.999993785735303	WITHOUT_CLASSIFICATION	6.214264697087081E-6	IMPLEMENTATION
// Add forward ref. edges	WITHOUT_CLASSIFICATION	0.999890677346959	WITHOUT_CLASSIFICATION	1.0932265304094014E-4	IMPLEMENTATION
// currBB cannot be null!	WITHOUT_CLASSIFICATION	0.9999859340618839	WITHOUT_CLASSIFICATION	1.406593811611436E-5	IMPLEMENTATION
// Add a forward reference from tgt -> currBB	WITHOUT_CLASSIFICATION	0.9999987023277024	WITHOUT_CLASSIFICATION	1.2976722976085085E-6	IMPLEMENTATION
// root-level logic	WITHOUT_CLASSIFICATION	0.9994220698833725	WITHOUT_CLASSIFICATION	5.779301166274838E-4	IMPLEMENTATION
// root-level methods	WITHOUT_CLASSIFICATION	0.9999503255533164	WITHOUT_CLASSIFICATION	4.967444668363588E-5	IMPLEMENTATION
// root-level classes	WITHOUT_CLASSIFICATION	0.9999374647717887	WITHOUT_CLASSIFICATION	6.253522821122053E-5	IMPLEMENTATION
//        case 4: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); //            break; //        case 5: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); //            break;	WITHOUT_CLASSIFICATION	0.9997214470464669	WITHOUT_CLASSIFICATION	2.7855295353306793E-4	IMPLEMENTATION
// load receiver	WITHOUT_CLASSIFICATION	0.9993436884002318	WITHOUT_CLASSIFICATION	6.563115997682247E-4	IMPLEMENTATION
// load receiver	WITHOUT_CLASSIFICATION	0.9993436884002318	WITHOUT_CLASSIFICATION	6.563115997682247E-4	IMPLEMENTATION
// receiver	WITHOUT_CLASSIFICATION	0.9993907514850048	WITHOUT_CLASSIFICATION	6.092485149953275E-4	IMPLEMENTATION
// load arguments	WITHOUT_CLASSIFICATION	0.9993574895866095	WITHOUT_CLASSIFICATION	6.425104133905215E-4	IMPLEMENTATION
// load arguments	WITHOUT_CLASSIFICATION	0.9993574895866095	WITHOUT_CLASSIFICATION	6.425104133905215E-4	IMPLEMENTATION
//        case 4: //        case 5:	WITHOUT_CLASSIFICATION	0.9997382548676076	WITHOUT_CLASSIFICATION	2.6174513239241417E-4	IMPLEMENTATION
// Object[] args	WITHOUT_CLASSIFICATION	0.9994351390794947	WITHOUT_CLASSIFICATION	5.64860920505372E-4	IMPLEMENTATION
// load handle	WITHOUT_CLASSIFICATION	0.997382593807114	WITHOUT_CLASSIFICATION	0.0026174061928858623	IMPLEMENTATION
// args array	WITHOUT_CLASSIFICATION	0.9994074774912199	WITHOUT_CLASSIFICATION	5.925225087800175E-4	IMPLEMENTATION
// i'th argument	WITHOUT_CLASSIFICATION	0.9997928776295513	WITHOUT_CLASSIFICATION	2.0712237044867964E-4	IMPLEMENTATION
// invoke specific arity version	WITHOUT_CLASSIFICATION	0.999688935537655	WITHOUT_CLASSIFICATION	3.1106446234495144E-4	IMPLEMENTATION
// Object arg0	WITHOUT_CLASSIFICATION	0.9996538417887186	WITHOUT_CLASSIFICATION	3.4615821128138144E-4	IMPLEMENTATION
// useful for code completion inside the IRB	WITHOUT_CLASSIFICATION	0.9999763609642001	WITHOUT_CLASSIFICATION	2.3639035799887813E-5	IMPLEMENTATION
// No editing before startPos	WITHOUT_CLASSIFICATION	0.9999905622116155	WITHOUT_CLASSIFICATION	9.437788384454779E-6	IMPLEMENTATION
// no silly ticks!	WITHOUT_CLASSIFICATION	0.9993007289380925	WITHOUT_CLASSIFICATION	6.992710619074339E-4	IMPLEMENTATION
// no candidates? Fail.	WITHOUT_CLASSIFICATION	0.9998663215757021	WITHOUT_CLASSIFICATION	1.3367842429791048E-4	IMPLEMENTATION
// at end	WITHOUT_CLASSIFICATION	0.9999889099609497	WITHOUT_CLASSIFICATION	1.1090039050350343E-5	IMPLEMENTATION
// undo check	WITHOUT_CLASSIFICATION	0.9994447472878405	WITHOUT_CLASSIFICATION	5.552527121595069E-4	IMPLEMENTATION
// Explicit reference to these vars as symbols...	WITHOUT_CLASSIFICATION	0.9999709182931387	WITHOUT_CLASSIFICATION	2.9081706861342772E-5	IMPLEMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999783916231164	WITHOUT_CLASSIFICATION	2.16083768835129E-5	IMPLEMENTATION
//\t\n\"\\'`@$><=;|&{(	WITHOUT_CLASSIFICATION	0.9994325134615626	WITHOUT_CLASSIFICATION	5.674865384373897E-4	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.9997955112954687	WITHOUT_CLASSIFICATION	2.0448870453125304E-4	IMPLEMENTATION
// no check for '*'	WITHOUT_CLASSIFICATION	0.9995211750247206	WITHOUT_CLASSIFICATION	4.788249752794447E-4	IMPLEMENTATION
// no check for '*'	WITHOUT_CLASSIFICATION	0.9995211750247206	WITHOUT_CLASSIFICATION	4.788249752794447E-4	IMPLEMENTATION
// Binding provided for scope, use it	WITHOUT_CLASSIFICATION	0.9996612771131873	WITHOUT_CLASSIFICATION	3.3872288681263414E-4	IMPLEMENTATION
// this is ensured by the callers	WITHOUT_CLASSIFICATION	0.9999075583493265	WITHOUT_CLASSIFICATION	9.244165067354103E-5	IMPLEMENTATION
// no binding, just eval in "current" frame (caller's frame)	WITHOUT_CLASSIFICATION	0.9999966154247212	WITHOUT_CLASSIFICATION	3.3845752788090897E-6	IMPLEMENTATION
// restore position	WITHOUT_CLASSIFICATION	0.9995655223847428	WITHOUT_CLASSIFICATION	4.344776152570685E-4	IMPLEMENTATION
/* Something like cvar_cbase() from eval.c, factored out for the benefit     * of all the classvar-related node evaluations */	WITHOUT_CLASSIFICATION	0.9999924849802556	WITHOUT_CLASSIFICATION	7.515019744372445E-6	IMPLEMENTATION
// Used by the compiler to simplify arg processing	WITHOUT_CLASSIFICATION	0.999987949098459	WITHOUT_CLASSIFICATION	1.2050901540987214E-5	IMPLEMENTATION
// JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace	WITHOUT_CLASSIFICATION	0.9999944170628624	WITHOUT_CLASSIFICATION	5.582937137650432E-6	IMPLEMENTATION
// MRI does similar thing on MacOS X with 'EditLine wrapper'.	WITHOUT_CLASSIFICATION	0.9991875432655171	WITHOUT_CLASSIFICATION	8.124567344829413E-4	IMPLEMENTATION
// We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)	WITHOUT_CLASSIFICATION	0.9999799196788638	WITHOUT_CLASSIFICATION	2.0080321136218594E-5	IMPLEMENTATION
// JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)	WITHOUT_CLASSIFICATION	0.999887461420314	WITHOUT_CLASSIFICATION	1.1253857968598102E-4	IMPLEMENTATION
// not overridden, let's go	WITHOUT_CLASSIFICATION	0.9996657047004428	WITHOUT_CLASSIFICATION	3.342952995572877E-4	IMPLEMENTATION
/* Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8() */	WITHOUT_CLASSIFICATION	0.9999805640611565	WITHOUT_CLASSIFICATION	1.943593884350596E-5	IMPLEMENTATION
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9993881635822232	WITHOUT_CLASSIFICATION	6.118364177769137E-4	IMPLEMENTATION
// Complete using a Proc object	WITHOUT_CLASSIFICATION	0.9999767492556463	WITHOUT_CLASSIFICATION	2.3250744353685347E-5	IMPLEMENTATION
// clear basename so it's anonymous when raising	WITHOUT_CLASSIFICATION	0.9998938587747224	WITHOUT_CLASSIFICATION	1.0614122527761977E-4	IMPLEMENTATION
// These are not really used by timeout, but exposed for compatibility	WITHOUT_CLASSIFICATION	0.9998563882212403	WITHOUT_CLASSIFICATION	1.436117787596791E-4	IMPLEMENTATION
// Timeout module methods	WITHOUT_CLASSIFICATION	0.9999443770103075	WITHOUT_CLASSIFICATION	5.562298969249607E-5	IMPLEMENTATION
// Toplevel defines	WITHOUT_CLASSIFICATION	0.9993888424610113	WITHOUT_CLASSIFICATION	6.111575389887062E-4	IMPLEMENTATION
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999897041100972	WITHOUT_CLASSIFICATION	1.0295889902766816E-5	IMPLEMENTATION
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.999993667773518	WITHOUT_CLASSIFICATION	6.332226482140644E-6	IMPLEMENTATION
// if it's the exception we're expecting	WITHOUT_CLASSIFICATION	0.9999268911990665	WITHOUT_CLASSIFICATION	7.310880093348711E-5	IMPLEMENTATION
// and we were given a specific exception	WITHOUT_CLASSIFICATION	0.9990743028426189	WITHOUT_CLASSIFICATION	9.25697157381059E-4	IMPLEMENTATION
// otherwise, rethrow	WITHOUT_CLASSIFICATION	0.9998842689021133	WITHOUT_CLASSIFICATION	1.1573109788672082E-4	IMPLEMENTATION
// // Remove the Executor task now, to avoid cancelled tasks accumulating // until an Executor thread can schedule and remove them //	WITHOUT_CLASSIFICATION	0.9999075490371615	WITHOUT_CLASSIFICATION	9.245096283859909E-5	IMPLEMENTATION
// // If the task was scheduled, wait for it to finish before polling // for the exception it would have thrown. //	WITHOUT_CLASSIFICATION	0.9960278908755472	WITHOUT_CLASSIFICATION	0.003972109124452788	IMPLEMENTATION
// NetProtocolBufferedIO	WITHOUT_CLASSIFICATION	0.9998830445803648	WITHOUT_CLASSIFICATION	1.1695541963519677E-4	IMPLEMENTATION
/* When a length is given, read_string acts like get_bytes */	WITHOUT_CLASSIFICATION	0.9997527666368897	WITHOUT_CLASSIFICATION	2.472333631103095E-4	IMPLEMENTATION
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.996376955323379	WITHOUT_CLASSIFICATION	0.003623044676620955	IMPLEMENTATION
// ARRAY and STRUCT are only used internally	WITHOUT_CLASSIFICATION	0.99990856119214	WITHOUT_CLASSIFICATION	9.143880785996378E-5	IMPLEMENTATION
// If no release method is defined, then memory leaks will result.	WITHOUT_CLASSIFICATION	0.9996078500334915	WITHOUT_CLASSIFICATION	3.9214996650847173E-4	IMPLEMENTATION
/*     * This variant of newStruct is called from StructLayoutBuilder     */	WITHOUT_CLASSIFICATION	0.9999998353906472	WITHOUT_CLASSIFICATION	1.646093527492624E-7	IMPLEMENTATION
// This also handles unsigned int -> negative signed int conversion	WITHOUT_CLASSIFICATION	0.9999950785123326	WITHOUT_CLASSIFICATION	4.921487667406834E-6	IMPLEMENTATION
// Windows is LLP64	WITHOUT_CLASSIFICATION	0.9996872509983585	WITHOUT_CLASSIFICATION	3.1274900164137787E-4	IMPLEMENTATION
// Older JDK on linux map 'c' to 'libc.so' which doesn't work	WITHOUT_CLASSIFICATION	0.9997030258327686	WITHOUT_CLASSIFICATION	2.9697416723137743E-4	IMPLEMENTATION
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999397878414988	WITHOUT_CLASSIFICATION	6.0212158501182853E-5	IMPLEMENTATION
// $blah	WITHOUT_CLASSIFICATION	0.9999817067840583	WITHOUT_CLASSIFICATION	1.8293215941744205E-5	IMPLEMENTATION
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.996376955323379	WITHOUT_CLASSIFICATION	0.003623044676620955	IMPLEMENTATION
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999833086809381	WITHOUT_CLASSIFICATION	1.669131906186081E-5	IMPLEMENTATION
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999397878414988	WITHOUT_CLASSIFICATION	6.0212158501182853E-5	IMPLEMENTATION
// // Keep a reference to the temporary memory in the cache so it does // not get freed by the GC until the struct is freed //	WITHOUT_CLASSIFICATION	0.9999963965321441	WITHOUT_CLASSIFICATION	3.6034678559238553E-6	IMPLEMENTATION
// Add Pointer::NULL as a constant	WITHOUT_CLASSIFICATION	0.9998455479158544	WITHOUT_CLASSIFICATION	1.544520841456123E-4	IMPLEMENTATION
// Create the ordered list of field names from the map	WITHOUT_CLASSIFICATION	0.999994587846312	WITHOUT_CLASSIFICATION	5.412153688057239E-6	IMPLEMENTATION
// Assemble a [ :name, offset ] array	WITHOUT_CLASSIFICATION	0.9999139284768432	WITHOUT_CLASSIFICATION	8.607152315672155E-5	IMPLEMENTATION
//                case FLOAT:	WITHOUT_CLASSIFICATION	0.9998227639746594	WITHOUT_CLASSIFICATION	1.7723602534072712E-4	IMPLEMENTATION
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9998824383171916	WITHOUT_CLASSIFICATION	1.1756168280843048E-4	IMPLEMENTATION
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9998824383171916	WITHOUT_CLASSIFICATION	1.1756168280843048E-4	IMPLEMENTATION
// No auto cleanup needed	WITHOUT_CLASSIFICATION	0.8815203821496933	IMPLEMENTATION	0.11847961785030674	WITHOUT_CLASSIFICATION
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9998140767608712	WITHOUT_CLASSIFICATION	1.859232391288746E-4	IMPLEMENTATION
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999857717935249	WITHOUT_CLASSIFICATION	1.4228206475042903E-5	IMPLEMENTATION
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999857717935249	WITHOUT_CLASSIFICATION	1.4228206475042903E-5	IMPLEMENTATION
/*         * If there is exactly _one_ callback argument to the function,         * then a block can be given and automatically subsituted for the callback         * parameter.         */	WITHOUT_CLASSIFICATION	0.9999986221595883	WITHOUT_CLASSIFICATION	1.3778404117133268E-6	IMPLEMENTATION
/*------------------------------------------------------------------------*/	WITHOUT_CLASSIFICATION	0.999162082315616	WITHOUT_CLASSIFICATION	8.37917684384032E-4	IMPLEMENTATION
//AF_INET	WITHOUT_CLASSIFICATION	0.99991120461732	WITHOUT_CLASSIFICATION	8.879538267995327E-5	IMPLEMENTATION
//AF_INET	WITHOUT_CLASSIFICATION	0.99991120461732	WITHOUT_CLASSIFICATION	8.879538267995327E-5	IMPLEMENTATION
// RubyUNIXServer	WITHOUT_CLASSIFICATION	0.9993881635822232	WITHOUT_CLASSIFICATION	6.118364177769137E-4	IMPLEMENTATION
// line 321	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// // Set up for potentially fast-int operations //	WITHOUT_CLASSIFICATION	0.9999536964030675	WITHOUT_CLASSIFICATION	4.630359693251731E-5	IMPLEMENTATION
// // Hook up the MemoryPointer class if its not already there //	WITHOUT_CLASSIFICATION	0.9997675353477973	WITHOUT_CLASSIFICATION	2.324646522028047E-4	IMPLEMENTATION
// This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and // (2) Socket.getChannel() seems to return null in some cases	WITHOUT_CLASSIFICATION	0.9999974923876087	WITHOUT_CLASSIFICATION	2.5076123913831355E-6	IMPLEMENTATION
// no UNIXSockets on Windows	WITHOUT_CLASSIFICATION	0.9997620936612329	WITHOUT_CLASSIFICATION	2.3790633876706173E-4	IMPLEMENTATION
// Sockaddr_un has different structure on different platforms. // See JRUBY-2213 for more details.	WITHOUT_CLASSIFICATION	0.9989379889524416	WITHOUT_CLASSIFICATION	0.0010620110475584013	IMPLEMENTATION
// There is something valid in the sun_path component	WITHOUT_CLASSIFICATION	0.9999994842950177	WITHOUT_CLASSIFICATION	5.15704982297339E-7	IMPLEMENTATION
// RubyIPSocket	WITHOUT_CLASSIFICATION	0.9993881635822232	WITHOUT_CLASSIFICATION	6.118364177769137E-4	IMPLEMENTATION
// host is nil or the empty string, bind to INADDR_ANY	WITHOUT_CLASSIFICATION	0.999967119633201	WITHOUT_CLASSIFICATION	3.288036679903018E-5	IMPLEMENTATION
// host and port given	WITHOUT_CLASSIFICATION	0.999884637525418	WITHOUT_CLASSIFICATION	1.1536247458200687E-4	IMPLEMENTATION
// RubyUDPSocket	WITHOUT_CLASSIFICATION	0.9993881635822232	WITHOUT_CLASSIFICATION	6.118364177769137E-4	IMPLEMENTATION
// By default we always reverse lookup unless do_not_reverse_lookup set.	WITHOUT_CLASSIFICATION	0.9999181894658753	WITHOUT_CLASSIFICATION	8.181053412475544E-5	IMPLEMENTATION
// make sure descriptor is registered	WITHOUT_CLASSIFICATION	0.9998386742495879	WITHOUT_CLASSIFICATION	1.6132575041200899E-4	IMPLEMENTATION
// continue with normal initialization	WITHOUT_CLASSIFICATION	0.9993121380498619	WITHOUT_CLASSIFICATION	6.878619501382514E-4	IMPLEMENTATION
// recv returns nil on EOF	WITHOUT_CLASSIFICATION	0.9998438053872262	WITHOUT_CLASSIFICATION	1.5619461277384291E-4	IMPLEMENTATION
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9957756742402818	WITHOUT_CLASSIFICATION	0.004224325759718187	IMPLEMENTATION
// RubyBasicSocket	WITHOUT_CLASSIFICATION	0.9993881635822232	WITHOUT_CLASSIFICATION	6.118364177769137E-4	IMPLEMENTATION
// we don't have to define any that we don't support; see socket.c	WITHOUT_CLASSIFICATION	0.9998917393009455	WITHOUT_CLASSIFICATION	1.0826069905444245E-4	IMPLEMENTATION
// mandatory constants we haven't implemented	WITHOUT_CLASSIFICATION	0.8459997177205182	WITHOUT_CLASSIFICATION	0.15400028227948176	IMPLEMENTATION
// constants webrick crashes without	WITHOUT_CLASSIFICATION	0.9998941216738088	WITHOUT_CLASSIFICATION	1.0587832619132283E-4	IMPLEMENTATION
// More constants needed by specs	WITHOUT_CLASSIFICATION	0.9243466757577595	WITHOUT_CLASSIFICATION	0.07565332424224046	IMPLEMENTATION
// normal file descriptor..try to work with it	WITHOUT_CLASSIFICATION	0.9985318175242273	WITHOUT_CLASSIFICATION	0.0014681824757727285	IMPLEMENTATION
// AF_INET	WITHOUT_CLASSIFICATION	0.9999817067840583	WITHOUT_CLASSIFICATION	1.8293215941744205E-5	IMPLEMENTATION
// 255.255.255.255	WITHOUT_CLASSIFICATION	0.9993881635822232	WITHOUT_CLASSIFICATION	6.118364177769137E-4	IMPLEMENTATION
// 0.0.0.0	WITHOUT_CLASSIFICATION	0.9999817067840583	WITHOUT_CLASSIFICATION	1.8293215941744205E-5	IMPLEMENTATION
//def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)	WITHOUT_CLASSIFICATION	0.9991370865390474	WITHOUT_CLASSIFICATION	8.62913460952549E-4	IMPLEMENTATION
// line 323	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9997745459509421	WITHOUT_CLASSIFICATION	2.254540490579211E-4	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9997745459509421	WITHOUT_CLASSIFICATION	2.254540490579211E-4	IMPLEMENTATION
// ok, it's a socket...set values accordingly // just using AF_INET since we can't tell from SocketChannel...	WITHOUT_CLASSIFICATION	0.9999998406816819	WITHOUT_CLASSIFICATION	1.593183180123031E-7	IMPLEMENTATION
// datagram, set accordingly // again, AF_INET	WITHOUT_CLASSIFICATION	0.9998699327921469	WITHOUT_CLASSIFICATION	1.3006720785315384E-4	IMPLEMENTATION
//IRubyObject family = args[2];	WITHOUT_CLASSIFICATION	0.9990241846765686	WITHOUT_CLASSIFICATION	9.758153234313096E-4	IMPLEMENTATION
// When Socket::AI_PASSIVE and host is nil, return 'any' address. 	WITHOUT_CLASSIFICATION	0.9998898131266725	WITHOUT_CLASSIFICATION	1.1018687332749278E-4	IMPLEMENTATION
// The value of 1 is for Socket::AI_PASSIVE.	WITHOUT_CLASSIFICATION	0.9999908332351145	WITHOUT_CLASSIFICATION	9.166764885499642E-6	IMPLEMENTATION
// RubySocket	WITHOUT_CLASSIFICATION	0.9993881635822232	WITHOUT_CLASSIFICATION	6.118364177769137E-4	IMPLEMENTATION
// numeric host, use it for port	WITHOUT_CLASSIFICATION	0.9997570422418469	WITHOUT_CLASSIFICATION	2.4295775815314698E-4	IMPLEMENTATION
//            e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9998449301774723	WITHOUT_CLASSIFICATION	1.5506982252762774E-4	IMPLEMENTATION
// we were woken up without being selected...poll for thread events and go back to sleep	WITHOUT_CLASSIFICATION	0.9999760885452	WITHOUT_CLASSIFICATION	2.3911454799966247E-5	IMPLEMENTATION
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9996088677588695	WITHOUT_CLASSIFICATION	3.9113224113054086E-4	IMPLEMENTATION
// no connection immediately accepted, let them try again	WITHOUT_CLASSIFICATION	0.9970170244246058	WITHOUT_CLASSIFICATION	0.002982975575394273	IMPLEMENTATION
// do nothing, just exit	WITHOUT_CLASSIFICATION	0.9999795257038797	WITHOUT_CLASSIFICATION	2.0474296120177144E-5	IMPLEMENTATION
//nativeThread.setPriority(priority);	WITHOUT_CLASSIFICATION	0.999162082315616	WITHOUT_CLASSIFICATION	8.37917684384032E-4	IMPLEMENTATION
// set thread context JRuby classloader here, for Ruby-owned thread	WITHOUT_CLASSIFICATION	0.9998631980250436	WITHOUT_CLASSIFICATION	1.3680197495638343E-4	IMPLEMENTATION
// uber-ThreadKill catcher, since it should always just mean "be dead"	WITHOUT_CLASSIFICATION	0.9999047980603729	WITHOUT_CLASSIFICATION	9.520193962718095E-5	IMPLEMENTATION
// Call the thread's code	WITHOUT_CLASSIFICATION	0.9998833687246554	WITHOUT_CLASSIFICATION	1.1663127534447982E-4	IMPLEMENTATION
// Someone called exit!, so we need to kill the main thread	WITHOUT_CLASSIFICATION	0.9991905731954418	WITHOUT_CLASSIFICATION	8.094268045581922E-4	IMPLEMENTATION
// restore context classloader, in case we're using a thread pool	WITHOUT_CLASSIFICATION	0.999992740005726	WITHOUT_CLASSIFICATION	7.259994273915322E-6	IMPLEMENTATION
// be dead	WITHOUT_CLASSIFICATION	0.999992596034006	WITHOUT_CLASSIFICATION	7.4039659939983956E-6	IMPLEMENTATION
// loop until a context is available, to clean up softrefs that might have been collected	WITHOUT_CLASSIFICATION	0.9993404331901147	WITHOUT_CLASSIFICATION	6.59566809885259E-4	IMPLEMENTATION
// all threads in ruby thread group plus main thread	WITHOUT_CLASSIFICATION	0.9998976421602431	WITHOUT_CLASSIFICATION	1.0235783975685021E-4	IMPLEMENTATION
// thread is not alive, skip it	WITHOUT_CLASSIFICATION	0.9830298340675734	WITHOUT_CLASSIFICATION	0.01697016593242659	IMPLEMENTATION
// future is done or cancelled, skip it	WITHOUT_CLASSIFICATION	0.9996678006708222	WITHOUT_CLASSIFICATION	3.3219932917780045E-4	IMPLEMENTATION
// first, check if the sender has unreceived mail	WITHOUT_CLASSIFICATION	0.9999651236896431	WITHOUT_CLASSIFICATION	3.48763103570304E-5	IMPLEMENTATION
// then deliver mail to the target	WITHOUT_CLASSIFICATION	0.99987498337921	WITHOUT_CLASSIFICATION	1.2501662079007135E-4	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9998700187571089	WITHOUT_CLASSIFICATION	1.2998124289112926E-4	IMPLEMENTATION
// Define a second version that doesn't take a block, so we have unique code paths for both cases.	WITHOUT_CLASSIFICATION	0.9998656932543611	WITHOUT_CLASSIFICATION	1.3430674563889167E-4	IMPLEMENTATION
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9994660728611751	WITHOUT_CLASSIFICATION	5.339271388249386E-4	IMPLEMENTATION
// main body	WITHOUT_CLASSIFICATION	0.9994493517073751	WITHOUT_CLASSIFICATION	5.506482926249655E-4	IMPLEMENTATION
// return jump handling	WITHOUT_CLASSIFICATION	0.9996322099326882	WITHOUT_CLASSIFICATION	3.6779006731176705E-4	IMPLEMENTATION
// finally	WITHOUT_CLASSIFICATION	0.9999818697192392	WITHOUT_CLASSIFICATION	1.8130280760910503E-5	IMPLEMENTATION
// return result if we're still good	WITHOUT_CLASSIFICATION	0.999874669473323	WITHOUT_CLASSIFICATION	1.2533052667685945E-4	IMPLEMENTATION
// redo jump handling	WITHOUT_CLASSIFICATION	0.9996865341576225	WITHOUT_CLASSIFICATION	3.1346584237739773E-4	IMPLEMENTATION
// clear the redo	WITHOUT_CLASSIFICATION	0.9995285865393136	WITHOUT_CLASSIFICATION	4.714134606863337E-4	IMPLEMENTATION
// get runtime, create jump error, and throw it	WITHOUT_CLASSIFICATION	0.9998848909316955	WITHOUT_CLASSIFICATION	1.1510906830436729E-4	IMPLEMENTATION
// throw redo error if we're still good	WITHOUT_CLASSIFICATION	0.999783047897495	WITHOUT_CLASSIFICATION	2.169521025050323E-4	IMPLEMENTATION
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.999883670584612	WITHOUT_CLASSIFICATION	1.1632941538786055E-4	IMPLEMENTATION
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9960774023085943	WITHOUT_CLASSIFICATION	0.003922597691405654	IMPLEMENTATION
// No required specified, check actual number of required args	WITHOUT_CLASSIFICATION	0.9998550130554725	WITHOUT_CLASSIFICATION	1.449869445275187E-4	IMPLEMENTATION
// actual required is less than 3, so we use specific arity	WITHOUT_CLASSIFICATION	0.9995599725412976	WITHOUT_CLASSIFICATION	4.4002745870230813E-4	IMPLEMENTATION
// actual required is greater than 3, raise error (we don't support actual required > 3)	WITHOUT_CLASSIFICATION	0.9959111863455119	WITHOUT_CLASSIFICATION	0.0040888136544881	IMPLEMENTATION
// simple path, no multimethod	WITHOUT_CLASSIFICATION	0.9998823343841899	WITHOUT_CLASSIFICATION	1.1766561581017525E-4	IMPLEMENTATION
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9990596444879231	WITHOUT_CLASSIFICATION	9.40355512076929E-4	IMPLEMENTATION
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9990596444879231	WITHOUT_CLASSIFICATION	9.40355512076929E-4	IMPLEMENTATION
// normal all-rest method	WITHOUT_CLASSIFICATION	0.9993057420093165	WITHOUT_CLASSIFICATION	6.942579906834629E-4	IMPLEMENTATION
// for zero, one, two, three arities, JavaMethod.JavaMethod*.call(...IRubyObject[] args...) will check	WITHOUT_CLASSIFICATION	0.9999048575290478	WITHOUT_CLASSIFICATION	9.514247095217879E-5	IMPLEMENTATION
// promise to implement zero to N	WITHOUT_CLASSIFICATION	0.9907569090240937	WITHOUT_CLASSIFICATION	0.009243090975906348	IMPLEMENTATION
// return	WITHOUT_CLASSIFICATION	0.9999789729868744	WITHOUT_CLASSIFICATION	2.1027013125498112E-5	IMPLEMENTATION
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999867267964346	WITHOUT_CLASSIFICATION	1.3273203565458054E-5	IMPLEMENTATION
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999508336485822	WITHOUT_CLASSIFICATION	4.916635141779918E-5	IMPLEMENTATION
// confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999345722700483	WITHOUT_CLASSIFICATION	6.542772995166126E-5	IMPLEMENTATION
// confirm maximum not greater than optional	WITHOUT_CLASSIFICATION	0.9968460052638513	WITHOUT_CLASSIFICATION	0.003153994736148695	IMPLEMENTATION
// Raise an error if arity does not match requirements	WITHOUT_CLASSIFICATION	0.9999562362698183	WITHOUT_CLASSIFICATION	4.3763730181628914E-5	IMPLEMENTATION
// tc	WITHOUT_CLASSIFICATION	0.9999817067840583	WITHOUT_CLASSIFICATION	1.8293215941744205E-5	IMPLEMENTATION
// self // name	WITHOUT_CLASSIFICATION	0.999062270089936	WITHOUT_CLASSIFICATION	9.377299100639272E-4	IMPLEMENTATION
// no args	WITHOUT_CLASSIFICATION	0.9999799819955023	WITHOUT_CLASSIFICATION	2.001800449767061E-5	IMPLEMENTATION
// variable args with block	WITHOUT_CLASSIFICATION	0.9998113564072756	WITHOUT_CLASSIFICATION	1.8864359272449725E-4	IMPLEMENTATION
// variable args no block, load null block	WITHOUT_CLASSIFICATION	0.9996940262578172	WITHOUT_CLASSIFICATION	3.059737421828306E-4	IMPLEMENTATION
// zero args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9998008796238074	WITHOUT_CLASSIFICATION	1.991203761925235E-4	IMPLEMENTATION
// one arg with block	WITHOUT_CLASSIFICATION	0.9997437381334807	WITHOUT_CLASSIFICATION	2.562618665193493E-4	IMPLEMENTATION
// one arg, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9997423301109123	WITHOUT_CLASSIFICATION	2.5766988908766815E-4	IMPLEMENTATION
// two args with block	WITHOUT_CLASSIFICATION	0.999550809243075	WITHOUT_CLASSIFICATION	4.4919075692490896E-4	IMPLEMENTATION
// two args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.999527680825639	WITHOUT_CLASSIFICATION	4.723191743610563E-4	IMPLEMENTATION
// three args with block	WITHOUT_CLASSIFICATION	0.9997998899898713	WITHOUT_CLASSIFICATION	2.0011001012862657E-4	IMPLEMENTATION
// three args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9997895838103796	WITHOUT_CLASSIFICATION	2.1041618962033476E-4	IMPLEMENTATION
// load block if it accepts block	WITHOUT_CLASSIFICATION	0.9998803254720262	WITHOUT_CLASSIFICATION	1.1967452797376617E-4	IMPLEMENTATION
// all other arg cases with block	WITHOUT_CLASSIFICATION	0.999228869342086	WITHOUT_CLASSIFICATION	7.711306579140096E-4	IMPLEMENTATION
// all other arg cases without block	WITHOUT_CLASSIFICATION	0.999216489366309	WITHOUT_CLASSIFICATION	7.835106336908633E-4	IMPLEMENTATION
// one arg, no block; do nothing	WITHOUT_CLASSIFICATION	0.999953911577424	WITHOUT_CLASSIFICATION	4.608842257601111E-5	IMPLEMENTATION
// two args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999155031879897	WITHOUT_CLASSIFICATION	8.449681201036899E-5	IMPLEMENTATION
// three args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999623651256743	WITHOUT_CLASSIFICATION	3.7634874325727506E-5	IMPLEMENTATION
// load target for invocations	WITHOUT_CLASSIFICATION	0.999961176191508	WITHOUT_CLASSIFICATION	3.8823808492000796E-5	IMPLEMENTATION
// load receiver as original type for virtual invocation	WITHOUT_CLASSIFICATION	0.9998684908782998	WITHOUT_CLASSIFICATION	1.3150912170021819E-4	IMPLEMENTATION
// static invocation	WITHOUT_CLASSIFICATION	0.9993708290026828	WITHOUT_CLASSIFICATION	6.291709973171254E-4	IMPLEMENTATION
// virtual invocation	WITHOUT_CLASSIFICATION	0.9995955102035399	WITHOUT_CLASSIFICATION	4.044897964601142E-4	IMPLEMENTATION
// void return type, so we need to load a nil for returning below	WITHOUT_CLASSIFICATION	0.9999187683098295	WITHOUT_CLASSIFICATION	8.123169017055098E-5	IMPLEMENTATION
// normal finally and exit	WITHOUT_CLASSIFICATION	0.9999058330464743	WITHOUT_CLASSIFICATION	9.416695352571072E-5	IMPLEMENTATION
// promise to implement one to N	WITHOUT_CLASSIFICATION	0.9880707928574455	WITHOUT_CLASSIFICATION	0.01192920714255454	IMPLEMENTATION
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9960774023085943	WITHOUT_CLASSIFICATION	0.003922597691405654	IMPLEMENTATION
// these are only needed if we have a non-noop call config	WITHOUT_CLASSIFICATION	0.8217017011647098	WITHOUT_CLASSIFICATION	0.1782982988352902	IMPLEMENTATION
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9993149384848236	WITHOUT_CLASSIFICATION	6.850615151765094E-4	IMPLEMENTATION
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9993149384848236	WITHOUT_CLASSIFICATION	6.850615151765094E-4	IMPLEMENTATION
// singleton classes don't get their own visibility domain	WITHOUT_CLASSIFICATION	0.9999874250505593	WITHOUT_CLASSIFICATION	1.2574949440831914E-5	IMPLEMENTATION
// For visibility we need real meta class and not anonymous one from class << self	WITHOUT_CLASSIFICATION	0.9924579465443509	WITHOUT_CLASSIFICATION	0.007542053455649014	IMPLEMENTATION
// SimpleInvocationMethod	WITHOUT_CLASSIFICATION	0.9998830445803648	WITHOUT_CLASSIFICATION	1.1695541963519677E-4	IMPLEMENTATION
// never reached	WITHOUT_CLASSIFICATION	0.9877526125276475	WITHOUT_CLASSIFICATION	0.01224738747235247	IMPLEMENTATION
// promise to implement N with block	WITHOUT_CLASSIFICATION	0.9823165223083701	WITHOUT_CLASSIFICATION	0.017683477691629895	IMPLEMENTATION
// promise to implement zero to N with block	WITHOUT_CLASSIFICATION	0.9834254738535009	WITHOUT_CLASSIFICATION	0.016574526146499083	IMPLEMENTATION
// promise to implement one to N with block	WITHOUT_CLASSIFICATION	0.9786546860285341	WITHOUT_CLASSIFICATION	0.021345313971465947	IMPLEMENTATION
// promise to implement two to N with block	WITHOUT_CLASSIFICATION	0.9615488288831778	WITHOUT_CLASSIFICATION	0.03845117111682211	IMPLEMENTATION
// promise to implement zero to three with block	WITHOUT_CLASSIFICATION	0.9835990293801744	WITHOUT_CLASSIFICATION	0.01640097061982559	IMPLEMENTATION
// promise to implement one to three with block	WITHOUT_CLASSIFICATION	0.978877124530738	WITHOUT_CLASSIFICATION	0.021122875469261986	IMPLEMENTATION
// promise to implement two to three with block	WITHOUT_CLASSIFICATION	0.9619425946553024	WITHOUT_CLASSIFICATION	0.03805740534469757	IMPLEMENTATION
// promise to implement three with block	WITHOUT_CLASSIFICATION	0.9825014832930531	WITHOUT_CLASSIFICATION	0.017498516706946975	IMPLEMENTATION
// promise to implement N	WITHOUT_CLASSIFICATION	0.9932983296087481	WITHOUT_CLASSIFICATION	0.006701670391251809	IMPLEMENTATION
// DumpingInvocationMethodFactory	WITHOUT_CLASSIFICATION	0.9998272733107829	WITHOUT_CLASSIFICATION	1.7272668921707108E-4	IMPLEMENTATION
// We promote our box to being its own box since we're changing // visibilities, and need it to be reflected on this method object // independent of any other sharing the box.	WITHOUT_CLASSIFICATION	0.9998930655088927	WITHOUT_CLASSIFICATION	1.0693449110730245E-4	IMPLEMENTATION
// Normally we could leave these to fall back on the superclass, but // since it dispatches through the [] version below, which may // dispatch through the []+block version, we can save it a couple hops // by overriding these here.	WITHOUT_CLASSIFICATION	0.9997795091028351	WITHOUT_CLASSIFICATION	2.2049089716476205E-4	IMPLEMENTATION
// promise to implement two to N	WITHOUT_CLASSIFICATION	0.9783439013404065	WITHOUT_CLASSIFICATION	0.021656098659593472	IMPLEMENTATION
// promise to implement three to N	WITHOUT_CLASSIFICATION	0.9902375713524868	WITHOUT_CLASSIFICATION	0.009762428647513215	IMPLEMENTATION
// promise to implement zero to three	WITHOUT_CLASSIFICATION	0.9908544094042989	WITHOUT_CLASSIFICATION	0.009145590595701155	IMPLEMENTATION
// promise to implement one to three	WITHOUT_CLASSIFICATION	0.9881962900568504	WITHOUT_CLASSIFICATION	0.011803709943149493	IMPLEMENTATION
// promise to implement two to three	WITHOUT_CLASSIFICATION	0.978569507594913	WITHOUT_CLASSIFICATION	0.021430492405086942	IMPLEMENTATION
// promise to implement three	WITHOUT_CLASSIFICATION	0.9933692013315781	WITHOUT_CLASSIFICATION	0.006630798668421858	IMPLEMENTATION
// all other arities use "n" dispatch path	WITHOUT_CLASSIFICATION	0.9994322156712305	WITHOUT_CLASSIFICATION	5.677843287694548E-4	IMPLEMENTATION
// load up object and add a few useful methods	WITHOUT_CLASSIFICATION	0.9999894657797239	WITHOUT_CLASSIFICATION	1.0534220276137665E-5	IMPLEMENTATION
// open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel	WITHOUT_CLASSIFICATION	0.9999729468528109	WITHOUT_CLASSIFICATION	2.7053147189096652E-5	IMPLEMENTATION
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9998306665080251	WITHOUT_CLASSIFICATION	1.6933349197494017E-4	IMPLEMENTATION
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9143334784680983	WITHOUT_CLASSIFICATION	0.08566652153190162	IMPLEMENTATION
// create constructor	WITHOUT_CLASSIFICATION	0.999919877284151	WITHOUT_CLASSIFICATION	8.012271584890884E-5	IMPLEMENTATION
// wrap self and store the wrapper	WITHOUT_CLASSIFICATION	0.9999047204726732	WITHOUT_CLASSIFICATION	9.527952732685733E-5	IMPLEMENTATION
// end constructor	WITHOUT_CLASSIFICATION	0.9992351335868822	WITHOUT_CLASSIFICATION	7.648664131178886E-4	IMPLEMENTATION
// start setup method	WITHOUT_CLASSIFICATION	0.9997308977547278	WITHOUT_CLASSIFICATION	2.691022452722906E-4	IMPLEMENTATION
// set RubyClass	WITHOUT_CLASSIFICATION	0.9993145186363048	WITHOUT_CLASSIFICATION	6.85481363695231E-4	IMPLEMENTATION
// set Ruby	WITHOUT_CLASSIFICATION	0.9993145186363048	WITHOUT_CLASSIFICATION	6.85481363695231E-4	IMPLEMENTATION
// all methods dispatch to the simple version by default, which is method_missing normally	WITHOUT_CLASSIFICATION	0.9999653825650509	WITHOUT_CLASSIFICATION	3.461743494919345E-5	IMPLEMENTATION
// try specific name first, falling back on simple name	WITHOUT_CLASSIFICATION	0.9974138220685804	WITHOUT_CLASSIFICATION	0.002586177931419511	IMPLEMENTATION
// get current context	WITHOUT_CLASSIFICATION	0.9997177504373048	WITHOUT_CLASSIFICATION	2.8224956269528245E-4	IMPLEMENTATION
// load self, class, and name	WITHOUT_CLASSIFICATION	0.999841770546493	WITHOUT_CLASSIFICATION	1.582294535069411E-4	IMPLEMENTATION
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9998306665080251	WITHOUT_CLASSIFICATION	1.6933349197494017E-4	IMPLEMENTATION
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9143334784680983	WITHOUT_CLASSIFICATION	0.08566652153190162	IMPLEMENTATION
// create constructor	WITHOUT_CLASSIFICATION	0.999919877284151	WITHOUT_CLASSIFICATION	8.012271584890884E-5	IMPLEMENTATION
// end constructor	WITHOUT_CLASSIFICATION	0.9992351335868822	WITHOUT_CLASSIFICATION	7.648664131178886E-4	IMPLEMENTATION
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9974133468788322	WITHOUT_CLASSIFICATION	0.0025866531211677954	IMPLEMENTATION
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999757854876208	WITHOUT_CLASSIFICATION	2.421451237917881E-5	IMPLEMENTATION
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9998980416469607	WITHOUT_CLASSIFICATION	1.0195835303927777E-4	IMPLEMENTATION
// load null block	WITHOUT_CLASSIFICATION	0.9989383756168487	WITHOUT_CLASSIFICATION	0.0010616243831512455	IMPLEMENTATION
// invoke method	WITHOUT_CLASSIFICATION	0.9979999574125908	WITHOUT_CLASSIFICATION	0.002000042587409108	IMPLEMENTATION
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9997691925379691	WITHOUT_CLASSIFICATION	2.3080746203090182E-4	IMPLEMENTATION
// end setup method	WITHOUT_CLASSIFICATION	0.9970484910931647	WITHOUT_CLASSIFICATION	0.0029515089068353666	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.999429554553864	WITHOUT_CLASSIFICATION	5.704454461359181E-4	IMPLEMENTATION
// create static init, for a monitor object	WITHOUT_CLASSIFICATION	0.999970366722592	WITHOUT_CLASSIFICATION	2.96332774080472E-5	IMPLEMENTATION
// store the wrapper	WITHOUT_CLASSIFICATION	0.9994723888458728	WITHOUT_CLASSIFICATION	5.276111541272168E-4	IMPLEMENTATION
// prepare temp locals	WITHOUT_CLASSIFICATION	0.9998863678668887	WITHOUT_CLASSIFICATION	1.1363213311125203E-4	IMPLEMENTATION
// Try to look up field for simple name // get field; if nonnull, go straight to dispatch	WITHOUT_CLASSIFICATION	0.9999978717926659	WITHOUT_CLASSIFICATION	2.1282073340976717E-6	IMPLEMENTATION
// field is null, lock class and try to populate	WITHOUT_CLASSIFICATION	0.9999918348666729	WITHOUT_CLASSIFICATION	8.165133327161918E-6	IMPLEMENTATION
// try/finally block to ensure unlock	WITHOUT_CLASSIFICATION	0.9995596983520246	WITHOUT_CLASSIFICATION	4.403016479754413E-4	IMPLEMENTATION
// store it	WITHOUT_CLASSIFICATION	0.9987651862927543	WITHOUT_CLASSIFICATION	0.001234813707245657	IMPLEMENTATION
// end of try block	WITHOUT_CLASSIFICATION	0.9988156717202754	WITHOUT_CLASSIFICATION	0.0011843282797246388	IMPLEMENTATION
// finally block to release monitor	WITHOUT_CLASSIFICATION	0.9997522295516168	WITHOUT_CLASSIFICATION	2.477704483831569E-4	IMPLEMENTATION
// exception handling for monitor release	WITHOUT_CLASSIFICATION	0.9996503548968142	WITHOUT_CLASSIFICATION	3.496451031858689E-4	IMPLEMENTATION
// re-get, re-check method; if not null now, go to dispatch	WITHOUT_CLASSIFICATION	0.9998343231947897	WITHOUT_CLASSIFICATION	1.6567680521036024E-4	IMPLEMENTATION
// load self, class, and name	WITHOUT_CLASSIFICATION	0.999841770546493	WITHOUT_CLASSIFICATION	1.582294535069411E-4	IMPLEMENTATION
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999757854876208	WITHOUT_CLASSIFICATION	2.421451237917881E-5	IMPLEMENTATION
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9998980416469607	WITHOUT_CLASSIFICATION	1.0195835303927777E-4	IMPLEMENTATION
// invoke method	WITHOUT_CLASSIFICATION	0.9979999574125908	WITHOUT_CLASSIFICATION	0.002000042587409108	IMPLEMENTATION
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9997691925379691	WITHOUT_CLASSIFICATION	2.3080746203090182E-4	IMPLEMENTATION
// end setup method	WITHOUT_CLASSIFICATION	0.9970484910931647	WITHOUT_CLASSIFICATION	0.0029515089068353666	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.999429554553864	WITHOUT_CLASSIFICATION	5.704454461359181E-4	IMPLEMENTATION
// create the class	WITHOUT_CLASSIFICATION	0.9996657411579645	WITHOUT_CLASSIFICATION	3.3425884203547995E-4	IMPLEMENTATION
// method still not available, call method_missing	WITHOUT_CLASSIFICATION	0.8879232224521644	WITHOUT_CLASSIFICATION	0.11207677754783568	IMPLEMENTATION
// perform the dispatch	WITHOUT_CLASSIFICATION	0.9998965187916932	WITHOUT_CLASSIFICATION	1.0348120830690067E-4	IMPLEMENTATION
// try to load the specified name; only if that fails, try to define the class	WITHOUT_CLASSIFICATION	0.9999441637196428	WITHOUT_CLASSIFICATION	5.583628035717318E-5	IMPLEMENTATION
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999173550863699	WITHOUT_CLASSIFICATION	8.264491363016652E-5	IMPLEMENTATION
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999173550863699	WITHOUT_CLASSIFICATION	8.264491363016652E-5	IMPLEMENTATION
// setup the class	WITHOUT_CLASSIFICATION	0.9996737501554178	WITHOUT_CLASSIFICATION	3.2624984458214345E-4	IMPLEMENTATION
// now, create a method_added that can replace the DynamicMethod fields as they're redefined	WITHOUT_CLASSIFICATION	0.996368735622081	WITHOUT_CLASSIFICATION	0.0036312643779190406	IMPLEMENTATION
// do nothing, it's a non-impl method	WITHOUT_CLASSIFICATION	0.9984594754461432	WITHOUT_CLASSIFICATION	0.0015405245538567865	IMPLEMENTATION
// probably a primitive	WITHOUT_CLASSIFICATION	0.9999333895391791	WITHOUT_CLASSIFICATION	6.661046082089193E-5	IMPLEMENTATION
// interfaces are handled as modules	WITHOUT_CLASSIFICATION	0.9999819933458843	WITHOUT_CLASSIFICATION	1.8006654115631597E-5	IMPLEMENTATION
// construct the mirror class and parent classes	WITHOUT_CLASSIFICATION	0.9999580017347112	WITHOUT_CLASSIFICATION	4.199826528876068E-5	IMPLEMENTATION
// set the full name	WITHOUT_CLASSIFICATION	0.9987689714072467	WITHOUT_CLASSIFICATION	0.001231028592753263	IMPLEMENTATION
// include all interfaces	WITHOUT_CLASSIFICATION	0.9998801976718462	WITHOUT_CLASSIFICATION	1.1980232815375629E-4	IMPLEMENTATION
// if it's an array, only add methods for aref, aset, and length	WITHOUT_CLASSIFICATION	0.9999945802109971	WITHOUT_CLASSIFICATION	5.419789002871284E-6	IMPLEMENTATION
// add array construction methods	WITHOUT_CLASSIFICATION	0.9999106147729957	WITHOUT_CLASSIFICATION	8.938522700425659E-5	IMPLEMENTATION
// add all public constructors (note: getConstructors only returns public ones)	WITHOUT_CLASSIFICATION	0.9998566785017723	WITHOUT_CLASSIFICATION	1.4332149822768658E-4	IMPLEMENTATION
// add all instance and static methods	WITHOUT_CLASSIFICATION	0.9999568471366483	WITHOUT_CLASSIFICATION	4.315286335169272E-5	IMPLEMENTATION
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9998741892437794	WITHOUT_CLASSIFICATION	1.2581075622076162E-4	IMPLEMENTATION
// too much array creation!	WITHOUT_CLASSIFICATION	0.999925588202371	WITHOUT_CLASSIFICATION	7.441179762902648E-5	IMPLEMENTATION
// only include static methods if specified	WITHOUT_CLASSIFICATION	0.9999800257776684	WITHOUT_CLASSIFICATION	1.997422233147849E-5	IMPLEMENTATION
// add a few type-specific special methods	WITHOUT_CLASSIFICATION	0.9999269691654527	WITHOUT_CLASSIFICATION	7.303083454739942E-5	IMPLEMENTATION
// add all static variables	WITHOUT_CLASSIFICATION	0.9998590793353718	WITHOUT_CLASSIFICATION	1.409206646282742E-4	IMPLEMENTATION
// only public static fields that are valid constants	WITHOUT_CLASSIFICATION	0.9999849547386783	WITHOUT_CLASSIFICATION	1.5045261321602098E-5	IMPLEMENTATION
// looks like someone's trying to raise a Java exception. Let them.	WITHOUT_CLASSIFICATION	0.9996872278281687	WITHOUT_CLASSIFICATION	3.1277217183131936E-4	IMPLEMENTATION
// NOTE: The five match methods are arity-split to avoid the cost of boxing arguments // when there's already a cached match. Do not condense them into a single // method.	WITHOUT_CLASSIFICATION	0.9997454164872569	WITHOUT_CLASSIFICATION	2.545835127430313E-4	IMPLEMENTATION
// TODO: This is where we would want to do precision checks to see // if it's non-destructive to coerce a given type into the target // integral primitive	WITHOUT_CLASSIFICATION	0.7747979710958031	IMPLEMENTATION	0.2252020289041969	WITHOUT_CLASSIFICATION
// long first because it's what Fixnum claims to be	WITHOUT_CLASSIFICATION	0.9971474290747433	WITHOUT_CLASSIFICATION	0.0028525709252567263	IMPLEMENTATION
// double first because it's what float claims to be	WITHOUT_CLASSIFICATION	0.9997106509388358	WITHOUT_CLASSIFICATION	2.893490611642007E-4	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.8660918200623108	IMPLEMENTATION	0.13390817993768925	WITHOUT_CLASSIFICATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9993881635822232	WITHOUT_CLASSIFICATION	6.118364177769137E-4	IMPLEMENTATION
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9992194659607201	WITHOUT_CLASSIFICATION	7.805340392798815E-4	IMPLEMENTATION
// we set all Java methods to optional, since many/most have overloads	WITHOUT_CLASSIFICATION	0.9999311991153763	WITHOUT_CLASSIFICATION	6.880088462369258E-5	IMPLEMENTATION
// If we hold a Java object, we need a java_class accessor	WITHOUT_CLASSIFICATION	0.9994956592743607	WITHOUT_CLASSIFICATION	5.043407256392689E-4	IMPLEMENTATION
// line 326	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9993881635822232	WITHOUT_CLASSIFICATION	6.118364177769137E-4	IMPLEMENTATION
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9992194659607201	WITHOUT_CLASSIFICATION	7.805340392798815E-4	IMPLEMENTATION
// too much array creation!	WITHOUT_CLASSIFICATION	0.999925588202371	WITHOUT_CLASSIFICATION	7.441179762902648E-5	IMPLEMENTATION
// construct new array proxy (ArrayJavaProxy)	WITHOUT_CLASSIFICATION	0.9999344990145269	WITHOUT_CLASSIFICATION	6.550098547309604E-5	IMPLEMENTATION
// Get map of all fields we want to define.  	WITHOUT_CLASSIFICATION	0.9997859970895837	WITHOUT_CLASSIFICATION	2.1400291041625966E-4	IMPLEMENTATION
// Look through all mappings to find a match entry for this field	WITHOUT_CLASSIFICATION	0.9999158723611365	WITHOUT_CLASSIFICATION	8.412763886341581E-5	IMPLEMENTATION
// Hit a non-java proxy class (included Modules can be a cause of this...skip)	WITHOUT_CLASSIFICATION	0.9999518832856441	WITHOUT_CLASSIFICATION	4.8116714355890554E-5	IMPLEMENTATION
// We could not find all of them print out first one (we could print them all?)	WITHOUT_CLASSIFICATION	0.9992103220216471	WITHOUT_CLASSIFICATION	7.896779783529027E-4	IMPLEMENTATION
// dummy bodies for default impls	WITHOUT_CLASSIFICATION	0.9999841217925095	WITHOUT_CLASSIFICATION	1.5878207490449958E-5	IMPLEMENTATION
// initialize this if it hasn't been	WITHOUT_CLASSIFICATION	0.9997864238730005	WITHOUT_CLASSIFICATION	2.1357612699947996E-4	IMPLEMENTATION
// initialize these if they haven't been	WITHOUT_CLASSIFICATION	0.999963914556911	WITHOUT_CLASSIFICATION	3.6085443088903625E-5	IMPLEMENTATION
// not allowed for original (non-generated) Java classes // note: not allowing for any previously created class right now; // this restriction might be loosened later for generated classes	WITHOUT_CLASSIFICATION	0.9995679359648846	WITHOUT_CLASSIFICATION	4.320640351153112E-4	IMPLEMENTATION
// setup new, etc unless this is a ConcreteJavaProxy subclass	WITHOUT_CLASSIFICATION	0.9999514363877029	WITHOUT_CLASSIFICATION	4.856361229709879E-5	IMPLEMENTATION
// First we make modifications to the class, to adapt it to being // both a Ruby class and a proxy for a Java type	WITHOUT_CLASSIFICATION	0.999939008328047	WITHOUT_CLASSIFICATION	6.0991671953075944E-5	IMPLEMENTATION
// list of interfaces we implement	WITHOUT_CLASSIFICATION	0.9923688413831081	WITHOUT_CLASSIFICATION	0.007631158616891957	IMPLEMENTATION
// We capture the original "new" and make it private	WITHOUT_CLASSIFICATION	0.9986433474414692	WITHOUT_CLASSIFICATION	0.0013566525585307822	IMPLEMENTATION
// The replacement "new" allocates and inits the Ruby object as before, but // also instantiates our proxified Java object by calling __jcreate!	WITHOUT_CLASSIFICATION	0.9999981848735571	WITHOUT_CLASSIFICATION	1.8151264428488166E-6	IMPLEMENTATION
// Next, we define a few private methods that we'll use to manipulate // the Java object contained within this Ruby object	WITHOUT_CLASSIFICATION	0.9996990146852944	WITHOUT_CLASSIFICATION	3.0098531470561853E-4	IMPLEMENTATION
// jcreate instantiates the proxy object which implements all interfaces // and which is wrapped and implemented by this object	WITHOUT_CLASSIFICATION	0.9554717807500025	WITHOUT_CLASSIFICATION	0.04452821924999761	IMPLEMENTATION
// Now we add an "implement" and "implement_all" methods to the class	WITHOUT_CLASSIFICATION	0.9999580619928096	WITHOUT_CLASSIFICATION	4.193800719036174E-5	IMPLEMENTATION
// implement all forces implementation of all interfaces we intend // for this class to implement	WITHOUT_CLASSIFICATION	0.9657351079694477	WITHOUT_CLASSIFICATION	0.03426489203055221	IMPLEMENTATION
// we've already done the above priming logic, just add another interface // to the list of intentions unless we're past the point of no return or // already intend to implement the given interface	WITHOUT_CLASSIFICATION	0.9981083139976072	WITHOUT_CLASSIFICATION	0.0018916860023928028	IMPLEMENTATION
// walk all superclasses aggregating interfaces	WITHOUT_CLASSIFICATION	0.9998327232413607	WITHOUT_CLASSIFICATION	1.672767586391667E-4	IMPLEMENTATION
// construct the new interface impl and set it into the object	WITHOUT_CLASSIFICATION	0.9999614446621133	WITHOUT_CLASSIFICATION	3.855533788664778E-5	IMPLEMENTATION
// assuming the user wants a collection of interfaces that can be // included together. make it so.	WITHOUT_CLASSIFICATION	0.9862327816573172	WITHOUT_CLASSIFICATION	0.013767218342682847	IMPLEMENTATION
// not allowed for existing Java interface modules	WITHOUT_CLASSIFICATION	0.9996369655519309	WITHOUT_CLASSIFICATION	3.6303444806901996E-4	IMPLEMENTATION
// To turn a module into an "interface collection" we add a class instance // variable to hold the list of interfaces, and modify append_features // for this module to call append_features on each of those interfaces as // well	WITHOUT_CLASSIFICATION	0.999999872529096	WITHOUT_CLASSIFICATION	1.2747090408530552E-7	IMPLEMENTATION
// already set up append_features, just add the interface if we haven't already	WITHOUT_CLASSIFICATION	0.9999953450727932	WITHOUT_CLASSIFICATION	4.654927206815379E-6	IMPLEMENTATION
// array-of-interface-type creation/identity	WITHOUT_CLASSIFICATION	0.9998272733107829	WITHOUT_CLASSIFICATION	1.7272668921707108E-4	IMPLEMENTATION
// keep this variant for kind_of? testing	WITHOUT_CLASSIFICATION	0.9998590938030127	WITHOUT_CLASSIFICATION	1.4090619698730537E-4	IMPLEMENTATION
// array creation should use this variant	WITHOUT_CLASSIFICATION	0.9991813868827389	WITHOUT_CLASSIFICATION	8.186131172610272E-4	IMPLEMENTATION
// parent.setConstant(name, proxyClass); // where the name should come from ?	WITHOUT_CLASSIFICATION	0.9997932625173505	WITHOUT_CLASSIFICATION	2.06737482649552E-4	IMPLEMENTATION
// including interface module so old-style interface "subclasses" will // respond correctly to #kind_of?, etc.	WITHOUT_CLASSIFICATION	0.9998069394599937	WITHOUT_CLASSIFICATION	1.930605400062057E-4	IMPLEMENTATION
// add reference to interface module	WITHOUT_CLASSIFICATION	0.9999577287959018	WITHOUT_CLASSIFICATION	4.22712040982404E-5	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9993095464430901	WITHOUT_CLASSIFICATION	6.904535569097694E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9993095464430901	WITHOUT_CLASSIFICATION	6.904535569097694E-4	IMPLEMENTATION
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9998741892437794	WITHOUT_CLASSIFICATION	1.2581075622076162E-4	IMPLEMENTATION
// same as argument_types, but matches name in java.lang.reflect.Constructor/Method	WITHOUT_CLASSIFICATION	0.9999987119806952	WITHOUT_CLASSIFICATION	1.2880193047361942E-6	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999988911141039	WITHOUT_CLASSIFICATION	1.1088858960893554E-6	IMPLEMENTATION
// weakly reserved names	WITHOUT_CLASSIFICATION	0.9998653822256733	WITHOUT_CLASSIFICATION	1.3461777432664164E-4	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999352382862736	WITHOUT_CLASSIFICATION	6.476171372639072E-5	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999352382862736	WITHOUT_CLASSIFICATION	6.476171372639072E-5	IMPLEMENTATION
// modified only by addMethod; no synchronization required	WITHOUT_CLASSIFICATION	0.9992087796531228	WITHOUT_CLASSIFICATION	7.912203468771543E-4	IMPLEMENTATION
// if there's no constructor, we must prevent construction	WITHOUT_CLASSIFICATION	0.998828498474267	WITHOUT_CLASSIFICATION	0.0011715015257328946	IMPLEMENTATION
// caching constructors, as they're accessed for each new instance	WITHOUT_CLASSIFICATION	0.9999840076607677	WITHOUT_CLASSIFICATION	1.5992339232302607E-5	IMPLEMENTATION
// proxy module for interfaces	WITHOUT_CLASSIFICATION	0.9999740113973463	WITHOUT_CLASSIFICATION	2.5988602653636947E-5	IMPLEMENTATION
// proxy class for concrete classes.  also used for // "concrete" interfaces, which is why we have two fields	WITHOUT_CLASSIFICATION	0.9997344950897139	WITHOUT_CLASSIFICATION	2.6550491028603244E-4	IMPLEMENTATION
// readable only by thread building proxy, so don't need to be // volatile. used to handle recursive calls to getProxyClass/Module // while proxy is being constructed (usually when a constant // defined by a class is of the same type as that class).	WITHOUT_CLASSIFICATION	0.9999944493410129	WITHOUT_CLASSIFICATION	5.550658987101477E-6	IMPLEMENTATION
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999869220813293	WITHOUT_CLASSIFICATION	1.3077918670752172E-5	IMPLEMENTATION
// Now add all aliases for the static methods (fields) as appropriate	WITHOUT_CLASSIFICATION	0.999933612088619	WITHOUT_CLASSIFICATION	6.638791138110164E-5	IMPLEMENTATION
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999274532939942	WITHOUT_CLASSIFICATION	7.254670600574075E-5	IMPLEMENTATION
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9997894407060599	WITHOUT_CLASSIFICATION	2.105592939401188E-4	IMPLEMENTATION
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999314723926574	WITHOUT_CLASSIFICATION	6.852760734255479E-5	IMPLEMENTATION
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999482926181584	WITHOUT_CLASSIFICATION	5.170738184155807E-5	IMPLEMENTATION
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999236331002832	WITHOUT_CLASSIFICATION	7.636689971686478E-5	IMPLEMENTATION
// Additionally add ?-postfixed aliases to any boolean methods and properties.	WITHOUT_CLASSIFICATION	0.9999768819379067	WITHOUT_CLASSIFICATION	2.3118062093375283E-5	IMPLEMENTATION
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9998272733107829	WITHOUT_CLASSIFICATION	1.7272668921707108E-4	IMPLEMENTATION
// something?	WITHOUT_CLASSIFICATION	0.9989021106634958	WITHOUT_CLASSIFICATION	0.001097889336504322	IMPLEMENTATION
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999956747604174	WITHOUT_CLASSIFICATION	4.325239582542433E-6	IMPLEMENTATION
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999956747604174	WITHOUT_CLASSIFICATION	4.325239582542433E-6	IMPLEMENTATION
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999515827507826	WITHOUT_CLASSIFICATION	4.841724921738557E-5	IMPLEMENTATION
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999515827507826	WITHOUT_CLASSIFICATION	4.841724921738557E-5	IMPLEMENTATION
// create constructorInstaller; if there are no constructors, it will disable construction	WITHOUT_CLASSIFICATION	0.999965565972568	WITHOUT_CLASSIFICATION	3.443402743191405E-5	IMPLEMENTATION
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999261108933818	WITHOUT_CLASSIFICATION	7.388910661818982E-5	IMPLEMENTATION
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999537255481109	WITHOUT_CLASSIFICATION	4.627445188907995E-5	IMPLEMENTATION
// now iterate over all installers and make sure they also have appropriate aliases	WITHOUT_CLASSIFICATION	0.9998737515062668	WITHOUT_CLASSIFICATION	1.2624849373318907E-4	IMPLEMENTATION
// old (quasi-deprecated) interface class	WITHOUT_CLASSIFICATION	0.9999729856893776	WITHOUT_CLASSIFICATION	2.7014310622337716E-5	IMPLEMENTATION
// 1.9 support for encodings	WITHOUT_CLASSIFICATION	0.9992241539038288	WITHOUT_CLASSIFICATION	7.758460961712533E-4	IMPLEMENTATION
// double-check the cache now that we're synchronized	WITHOUT_CLASSIFICATION	0.9997983650843347	WITHOUT_CLASSIFICATION	2.0163491566522852E-4	IMPLEMENTATION
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999482926181584	WITHOUT_CLASSIFICATION	5.170738184155807E-5	IMPLEMENTATION
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999236331002832	WITHOUT_CLASSIFICATION	7.636689971686478E-5	IMPLEMENTATION
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9998272733107829	WITHOUT_CLASSIFICATION	1.7272668921707108E-4	IMPLEMENTATION
// one word type name that starts lower-case...it may be a primitive type	WITHOUT_CLASSIFICATION	0.9998486636630889	WITHOUT_CLASSIFICATION	1.5133633691107474E-4	IMPLEMENTATION
// Java.getProxyClass deals with sync issues, so we won't duplicate the logic here	WITHOUT_CLASSIFICATION	0.9999739079303739	WITHOUT_CLASSIFICATION	2.6092069626010907E-5	IMPLEMENTATION
// note: intentionally returning the actual array returned from Java, rather // than wrapping it in a RubyArray. wave of the future, when java_class will // return the actual class, rather than a JavaClass wrapper.	WITHOUT_CLASSIFICATION	0.9999989400682378	WITHOUT_CLASSIFICATION	1.0599317623277419E-6	IMPLEMENTATION
// see note above re: return type	WITHOUT_CLASSIFICATION	0.9999326305993005	WITHOUT_CLASSIFICATION	6.736940069954716E-5	IMPLEMENTATION
// restrictive security policy; no matter, we only want public // classes anyway	WITHOUT_CLASSIFICATION	0.9998489693600283	WITHOUT_CLASSIFICATION	1.5103063997172809E-4	IMPLEMENTATION
// very restrictive policy (disallows Member.PUBLIC) // we'd never actually get this far in that case	WITHOUT_CLASSIFICATION	0.9990812700359399	WITHOUT_CLASSIFICATION	9.187299640599871E-4	IMPLEMENTATION
// one-dimensional array	WITHOUT_CLASSIFICATION	0.9998816964813648	WITHOUT_CLASSIFICATION	1.183035186352213E-4	IMPLEMENTATION
// n-dimensional array	WITHOUT_CLASSIFICATION	0.9998816964813648	WITHOUT_CLASSIFICATION	1.183035186352213E-4	IMPLEMENTATION
// if it's an array of arrays, recurse with the component type	WITHOUT_CLASSIFICATION	0.9999964207911786	WITHOUT_CLASSIFICATION	3.579208821518346E-6	IMPLEMENTATION
// we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods // see JRUBY-3130	WITHOUT_CLASSIFICATION	0.999995697072736	WITHOUT_CLASSIFICATION	4.302927264001933E-6	IMPLEMENTATION
// Proc implementing an interface, pull in the catch-all code that lets the proc get invoked // no matter what method is called on the interface	WITHOUT_CLASSIFICATION	0.9999639638612969	WITHOUT_CLASSIFICATION	3.603613870299433E-5	IMPLEMENTATION
// can't be converted any more, return it	WITHOUT_CLASSIFICATION	0.9996531486641498	WITHOUT_CLASSIFICATION	3.4685133585020406E-4	IMPLEMENTATION
// getFooBar() => fooBar?, foo_bar?(*)	WITHOUT_CLASSIFICATION	0.9999236331002832	WITHOUT_CLASSIFICATION	7.636689971686478E-5	IMPLEMENTATION
// If not a property, but is boolean add ?-postfixed aliases.	WITHOUT_CLASSIFICATION	0.9997607305888524	WITHOUT_CLASSIFICATION	2.39269411147641E-4	IMPLEMENTATION
// many cases are ok to convert to float; if not one of these, error	WITHOUT_CLASSIFICATION	0.9992522547963815	WITHOUT_CLASSIFICATION	7.477452036184591E-4	IMPLEMENTATION
// for Object, default to natural wrapper type	WITHOUT_CLASSIFICATION	0.999991458388042	WITHOUT_CLASSIFICATION	8.541611957933004E-6	IMPLEMENTATION
// rubyObject is already of the required jruby class (or subclass)	WITHOUT_CLASSIFICATION	0.999920899938738	WITHOUT_CLASSIFICATION	7.910006126199083E-5	IMPLEMENTATION
// the converters handle not only primitive types but also their boxed versions, so we should check // if we have a converter before checking for isPrimitive()	WITHOUT_CLASSIFICATION	0.9991511442969343	WITHOUT_CLASSIFICATION	8.488557030656782E-4	IMPLEMENTATION
// it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9941061913594331	WITHOUT_CLASSIFICATION	0.005893808640566781	IMPLEMENTATION
// we've found a Java type to which we've coerced the Ruby value, wrap it	WITHOUT_CLASSIFICATION	0.9996856242195714	WITHOUT_CLASSIFICATION	3.143757804285573E-4	IMPLEMENTATION
// set of utility methods for Java-based proxy objects	WITHOUT_CLASSIFICATION	0.9999906828679689	WITHOUT_CLASSIFICATION	9.317132031181033E-6	IMPLEMENTATION
// the proxy (wrapper) type hierarchy	WITHOUT_CLASSIFICATION	0.9999722934877888	WITHOUT_CLASSIFICATION	2.7706512211080423E-5	IMPLEMENTATION
//InterfaceJavaProxy.createInterfaceJavaProxy(context);	WITHOUT_CLASSIFICATION	0.999162082315616	WITHOUT_CLASSIFICATION	8.37917684384032E-4	IMPLEMENTATION
// also create the JavaProxy* classes	WITHOUT_CLASSIFICATION	0.9998231472622684	WITHOUT_CLASSIFICATION	1.7685273773151145E-4	IMPLEMENTATION
// The template for interface modules	WITHOUT_CLASSIFICATION	0.9999918731389252	WITHOUT_CLASSIFICATION	8.126861074760133E-6	IMPLEMENTATION
// Now attach Java-related extras to core classes	WITHOUT_CLASSIFICATION	0.9997584647098845	WITHOUT_CLASSIFICATION	2.4153529011559422E-4	IMPLEMENTATION
// add all name-to-class mappings	WITHOUT_CLASSIFICATION	0.9997877032329665	WITHOUT_CLASSIFICATION	2.122967670335773E-4	IMPLEMENTATION
// add some base Java classes everyone will need	WITHOUT_CLASSIFICATION	0.9997098820808087	WITHOUT_CLASSIFICATION	2.9011791919126217E-4	IMPLEMENTATION
// finally, set JavaSupport.isEnabled to true	WITHOUT_CLASSIFICATION	0.9997969539538358	WITHOUT_CLASSIFICATION	2.0304604616419786E-4	IMPLEMENTATION
// shouldn't happen, but if a superclass is specified, it's not ours	WITHOUT_CLASSIFICATION	0.9996352138425996	WITHOUT_CLASSIFICATION	3.6478615740037835E-4	IMPLEMENTATION
// include any interfaces we extend	WITHOUT_CLASSIFICATION	0.998674353260999	WITHOUT_CLASSIFICATION	0.0013256467390010298	IMPLEMENTATION
// java.lang.Object is added at root of java proxy classes	WITHOUT_CLASSIFICATION	0.9999993799207012	WITHOUT_CLASSIFICATION	6.200792987248159E-7	IMPLEMENTATION
// other java proxy classes added under their superclass' java proxy	WITHOUT_CLASSIFICATION	0.9999855962327289	WITHOUT_CLASSIFICATION	1.4403767271244652E-5	IMPLEMENTATION
// include interface modules into the proxy class	WITHOUT_CLASSIFICATION	0.9999947242557227	WITHOUT_CLASSIFICATION	5.2757442772755175E-6	IMPLEMENTATION
// JRUBY-2938 the proxy class might already exist	WITHOUT_CLASSIFICATION	0.9999557893785357	WITHOUT_CLASSIFICATION	4.4210621464183986E-5	IMPLEMENTATION
// add java_method for unbound use	WITHOUT_CLASSIFICATION	0.9998401471823707	WITHOUT_CLASSIFICATION	1.5985281762924926E-4	IMPLEMENTATION
// add alias to meta	WITHOUT_CLASSIFICATION	0.9995205226567594	WITHOUT_CLASSIFICATION	4.7947734324061894E-4	IMPLEMENTATION
// we'll only map conventional class names to modules 	WITHOUT_CLASSIFICATION	0.9999451663681198	WITHOUT_CLASSIFICATION	5.483363188027148E-5	IMPLEMENTATION
/* expected */	WITHOUT_CLASSIFICATION	0.9999334250616634	WITHOUT_CLASSIFICATION	6.657493833661582E-5	IMPLEMENTATION
// Haven't found a class, continue on as though it were a package	WITHOUT_CLASSIFICATION	0.9995135911012225	WITHOUT_CLASSIFICATION	4.864088987774894E-4	IMPLEMENTATION
// upper case name, so most likely a class	WITHOUT_CLASSIFICATION	0.9999035645571177	WITHOUT_CLASSIFICATION	9.643544288238007E-5	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999988911141039	WITHOUT_CLASSIFICATION	1.1088858960893554E-6	IMPLEMENTATION
// add alias to meta	WITHOUT_CLASSIFICATION	0.9995205226567594	WITHOUT_CLASSIFICATION	4.7947734324061894E-4	IMPLEMENTATION
// this is where we'll get connected when classes are opened using // package module syntax.	WITHOUT_CLASSIFICATION	0.99999251700162	WITHOUT_CLASSIFICATION	7.482998380114976E-6	IMPLEMENTATION
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9999729753572278	WITHOUT_CLASSIFICATION	2.7024642772233264E-5	IMPLEMENTATION
// this covers primitives and (unlikely) lower-case class names	WITHOUT_CLASSIFICATION	0.9998726681958087	WITHOUT_CLASSIFICATION	1.2733180419135758E-4	IMPLEMENTATION
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9997894427446963	WITHOUT_CLASSIFICATION	2.10557255303785E-4	IMPLEMENTATION
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9997894427446963	WITHOUT_CLASSIFICATION	2.10557255303785E-4	IMPLEMENTATION
// Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9999562450000707	WITHOUT_CLASSIFICATION	4.3754999929298895E-5	IMPLEMENTATION
// Create list of interfaces to proxy (and make sure they really are interfaces)	WITHOUT_CLASSIFICATION	0.9999889952398706	WITHOUT_CLASSIFICATION	1.1004760129288638E-5	IMPLEMENTATION
// hashcode is a combination of the interfaces and the Ruby class we're using // to implement them	WITHOUT_CLASSIFICATION	0.9999267241687466	WITHOUT_CLASSIFICATION	7.327583125344565E-5	IMPLEMENTATION
// if it's a singleton class and the real class is proc, we're doing closure conversion // so just use Proc's hashcode	WITHOUT_CLASSIFICATION	0.9999993903367449	WITHOUT_CLASSIFICATION	6.09663254984007E-7	IMPLEMENTATION
// normal new class implementing interfaces	WITHOUT_CLASSIFICATION	0.999868849558477	WITHOUT_CLASSIFICATION	1.3115044152297098E-4	IMPLEMENTATION
/*         * Initialize some components.         */	WITHOUT_CLASSIFICATION	0.9999792447475802	WITHOUT_CLASSIFICATION	2.0755252419747346E-5	IMPLEMENTATION
// not synchronizing these methods, no harm if these values get set more // than once. // (also note that there's no chance of getting a partially initialized // class/module, as happens-before is guaranteed by volatile write/read // of constants table.)	WITHOUT_CLASSIFICATION	0.9999915110713984	WITHOUT_CLASSIFICATION	8.488928601512154E-6	IMPLEMENTATION
// Java reflection does not allow retrieving constructors like methods	WITHOUT_CLASSIFICATION	0.9623646927027093	WITHOUT_CLASSIFICATION	0.03763530729729076	IMPLEMENTATION
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9990154660941996	WITHOUT_CLASSIFICATION	9.84533905800433E-4	IMPLEMENTATION
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9990154660941996	WITHOUT_CLASSIFICATION	9.84533905800433E-4	IMPLEMENTATION
// no matching ctor found	WITHOUT_CLASSIFICATION	0.999865766015212	WITHOUT_CLASSIFICATION	1.342339847879957E-4	IMPLEMENTATION
// Create Ruby proxies for any input arguments that are not primitives.	WITHOUT_CLASSIFICATION	0.9994263413026472	WITHOUT_CLASSIFICATION	5.736586973527498E-4	IMPLEMENTATION
// prepare a faster handle if handles are enabled and the method and class are public	WITHOUT_CLASSIFICATION	0.9999935359853108	WITHOUT_CLASSIFICATION	6.4640146891862444E-6	IMPLEMENTATION
// must be a public method	WITHOUT_CLASSIFICATION	0.9999323584072243	WITHOUT_CLASSIFICATION	6.764159277569548E-5	IMPLEMENTATION
// must be a public class	WITHOUT_CLASSIFICATION	0.9999885678241937	WITHOUT_CLASSIFICATION	1.1432175806382978E-5	IMPLEMENTATION
// must have been loaded from our known classloader hierarchy	WITHOUT_CLASSIFICATION	0.9999746027375985	WITHOUT_CLASSIFICATION	2.5397262401489498E-5	IMPLEMENTATION
// Special classes like Collections.EMPTY_LIST are inner classes that are private but  // implement public interfaces.  Their methods are all public methods for the public  // interface.  Let these public methods execute via setAccessible(true). 	WITHOUT_CLASSIFICATION	0.999461801214853	WITHOUT_CLASSIFICATION	5.381987851471425E-4	IMPLEMENTATION
// search through all declared methods to find a closest match	WITHOUT_CLASSIFICATION	0.9999461168052005	WITHOUT_CLASSIFICATION	5.3883194799387096E-5	IMPLEMENTATION
// no matching method found	WITHOUT_CLASSIFICATION	0.9995478789204719	WITHOUT_CLASSIFICATION	4.5212107952817543E-4	IMPLEMENTATION
// this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.9999942550305525	WITHOUT_CLASSIFICATION	5.744969447383989E-6	IMPLEMENTATION
/*         * First we need to register the JRuby engine.         */	WITHOUT_CLASSIFICATION	0.9999329294680573	WITHOUT_CLASSIFICATION	6.70705319426828E-5	IMPLEMENTATION
/*         * Now we create a new BSFManager.         */	WITHOUT_CLASSIFICATION	0.9999819214084452	WITHOUT_CLASSIFICATION	1.8078591554794158E-5	IMPLEMENTATION
/*         * Initialize a simple Frame.          */	WITHOUT_CLASSIFICATION	0.9999946082784736	WITHOUT_CLASSIFICATION	5.3917215263596594E-6	IMPLEMENTATION
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9994325134615626	WITHOUT_CLASSIFICATION	5.674865384373897E-4	IMPLEMENTATION
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9994325134615626	WITHOUT_CLASSIFICATION	5.674865384373897E-4	IMPLEMENTATION
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9998461453001188	WITHOUT_CLASSIFICATION	1.5385469988111287E-4	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.999429554553864	WITHOUT_CLASSIFICATION	5.704454461359181E-4	IMPLEMENTATION
// // this test really means, that this is a ruby-defined subclass of a java class //	WITHOUT_CLASSIFICATION	0.9999942550305525	WITHOUT_CLASSIFICATION	5.744969447383989E-6	IMPLEMENTATION
// for our purposes, Accessibles are also Members, and vice-versa, // so we'll include Member methods here.	WITHOUT_CLASSIFICATION	0.9999928710947048	WITHOUT_CLASSIFICATION	7.128905295167895E-6	IMPLEMENTATION
/*             * Declare those components as beans in BSF. Then it will be             * possible to access those components in Ruby as global             * variables ($frame, $menubar, ...)             */	WITHOUT_CLASSIFICATION	0.9999999469791697	WITHOUT_CLASSIFICATION	5.3020830398744546E-8	IMPLEMENTATION
/*              * Execute a Ruby script (add the menubar to the frame).             */	WITHOUT_CLASSIFICATION	0.9999970077981619	WITHOUT_CLASSIFICATION	2.9922018380504345E-6	IMPLEMENTATION
/*                     * Execute Ruby statements.                     */	WITHOUT_CLASSIFICATION	0.9999926137103315	WITHOUT_CLASSIFICATION	7.386289668468056E-6	IMPLEMENTATION
/*                     * Evaluates a Ruby expression and display the result.                     */	WITHOUT_CLASSIFICATION	0.9999920595723968	WITHOUT_CLASSIFICATION	7.940427603238827E-6	IMPLEMENTATION
// Populate values for the parameter names	WITHOUT_CLASSIFICATION	0.9999975056884339	WITHOUT_CLASSIFICATION	2.4943115659883984E-6	IMPLEMENTATION
/* package scope */	WITHOUT_CLASSIFICATION	0.9998815445003156	WITHOUT_CLASSIFICATION	1.1845549968440262E-4	IMPLEMENTATION
// This point is only reached if there was an exception handler // installed.	WITHOUT_CLASSIFICATION	0.9999988911141039	WITHOUT_CLASSIFICATION	1.1088858960893554E-6	IMPLEMENTATION
// // Ruby-level methods //	WITHOUT_CLASSIFICATION	0.9999503255533164	WITHOUT_CLASSIFICATION	4.967444668363588E-5	IMPLEMENTATION
// need names ordered for key generation later	WITHOUT_CLASSIFICATION	0.9996320131341431	WITHOUT_CLASSIFICATION	3.6798686585694696E-4	IMPLEMENTATION
// we only collect methods and interfaces for  // user-defined proxy classes.	WITHOUT_CLASSIFICATION	0.9999812507754873	WITHOUT_CLASSIFICATION	1.8749224512717323E-5	IMPLEMENTATION
// get JavaClass if this is the new proxy class; verify it // matches if this is a superclass proxy.	WITHOUT_CLASSIFICATION	0.9999972685641495	WITHOUT_CLASSIFICATION	2.7314358504588645E-6	IMPLEMENTATION
// get any included interfaces	WITHOUT_CLASSIFICATION	0.9999253717857514	WITHOUT_CLASSIFICATION	7.462821424862397E-5	IMPLEMENTATION
// lock in the overridden methods for the new class, and any as-yet // uninstantiated ancestor class.	WITHOUT_CLASSIFICATION	0.9999985525698515	WITHOUT_CLASSIFICATION	1.4474301485027066E-6	IMPLEMENTATION
// statically initialized below	WITHOUT_CLASSIFICATION	0.999921541024013	WITHOUT_CLASSIFICATION	7.845897598704514E-5	IMPLEMENTATION
// finish class initializer	WITHOUT_CLASSIFICATION	0.9991422091165025	WITHOUT_CLASSIFICATION	8.577908834975462E-4	IMPLEMENTATION
// trigger class initialization for the class	WITHOUT_CLASSIFICATION	0.9999319719798712	WITHOUT_CLASSIFICATION	6.802802012886534E-5	IMPLEMENTATION
// should not happen!	WITHOUT_CLASSIFICATION	0.9960028115445922	WITHOUT_CLASSIFICATION	0.003997188455407715	IMPLEMENTATION
// start class	WITHOUT_CLASSIFICATION	0.9997284309105666	WITHOUT_CLASSIFICATION	2.715690894333632E-4	IMPLEMENTATION
// make getter for handler	WITHOUT_CLASSIFICATION	0.9998968152149971	WITHOUT_CLASSIFICATION	1.0318478500292268E-4	IMPLEMENTATION
// make getter for proxy class	WITHOUT_CLASSIFICATION	0.999959987079996	WITHOUT_CLASSIFICATION	4.0012920003977185E-5	IMPLEMENTATION
// add (potentially) overridden names to the key. // TODO: see note above re: optimizations	WITHOUT_CLASSIFICATION	0.6422867751607774	IMPLEMENTATION	0.3577132248392226	WITHOUT_CLASSIFICATION
// We generate all constructors and let some fail during invocation later	WITHOUT_CLASSIFICATION	0.9995330175896704	WITHOUT_CLASSIFICATION	4.669824103296269E-4	IMPLEMENTATION
// create static private method field	WITHOUT_CLASSIFICATION	0.9996929943509351	WITHOUT_CLASSIFICATION	3.0700564906497186E-4	IMPLEMENTATION
// load static empty array	WITHOUT_CLASSIFICATION	0.9999503759472995	WITHOUT_CLASSIFICATION	4.9624052700375786E-5	IMPLEMENTATION
// box arguments	WITHOUT_CLASSIFICATION	0.9996831592721476	WITHOUT_CLASSIFICATION	3.1684072785238734E-4	IMPLEMENTATION
// this is a simple rethrow handler	WITHOUT_CLASSIFICATION	0.9999350231304163	WITHOUT_CLASSIFICATION	6.497686958374753E-5	IMPLEMENTATION
// // construct the super-proxy method //	WITHOUT_CLASSIFICATION	0.9993984332772959	WITHOUT_CLASSIFICATION	6.01566722704008E-4	IMPLEMENTATION
// do a void return	WITHOUT_CLASSIFICATION	0.9993940722828626	WITHOUT_CLASSIFICATION	6.05927717137322E-4	IMPLEMENTATION
// // utility methods //	WITHOUT_CLASSIFICATION	0.9999722193829697	WITHOUT_CLASSIFICATION	2.7780617030392063E-5	IMPLEMENTATION
// Is there a supplied proc argument or do we assume a block was // supplied	WITHOUT_CLASSIFICATION	0.9999562450000707	WITHOUT_CLASSIFICATION	4.3754999929298895E-5	IMPLEMENTATION
// store call information so method_missing impl can use it	WITHOUT_CLASSIFICATION	0.9992187006648958	WITHOUT_CLASSIFICATION	7.812993351041187E-4	IMPLEMENTATION
// use the same logic as in EvaluationState	WITHOUT_CLASSIFICATION	0.999989994165207	WITHOUT_CLASSIFICATION	1.0005834793069091E-5	IMPLEMENTATION
// no opt, no rest, exact match	WITHOUT_CLASSIFICATION	0.9999015957428669	WITHOUT_CLASSIFICATION	9.840425713309032E-5	IMPLEMENTATION
// only rest, must be at least required	WITHOUT_CLASSIFICATION	0.99984528070932	WITHOUT_CLASSIFICATION	1.5471929068005362E-4	IMPLEMENTATION
// opt but no rest, must be at least required and no more than required + opt	WITHOUT_CLASSIFICATION	0.9996497485560008	WITHOUT_CLASSIFICATION	3.5025144399919504E-4	IMPLEMENTATION
// opt and rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999055643959274	WITHOUT_CLASSIFICATION	9.443560407264694E-5	IMPLEMENTATION
// No block from a nil proc	WITHOUT_CLASSIFICATION	0.999990995149514	WITHOUT_CLASSIFICATION	9.004850486023721E-6	IMPLEMENTATION
// If not already a proc then we should try and make it one.	WITHOUT_CLASSIFICATION	0.9702458193627189	WITHOUT_CLASSIFICATION	0.02975418063728105	IMPLEMENTATION
// The current block is already associated with proc.  No need to create a new one	WITHOUT_CLASSIFICATION	0.9998027651520268	WITHOUT_CLASSIFICATION	1.972348479733113E-4	IMPLEMENTATION
// Has the method that is calling super received a block argument	WITHOUT_CLASSIFICATION	0.9998326670614274	WITHOUT_CLASSIFICATION	1.6733293857257753E-4	IMPLEMENTATION
/* NUL */	WITHOUT_CLASSIFICATION	0.9999972368064602	WITHOUT_CLASSIFICATION	2.7631935398027776E-6	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.99994069520258	WITHOUT_CLASSIFICATION	5.930479741993892E-5	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9998153229885568	WITHOUT_CLASSIFICATION	1.8467701144313676E-4	IMPLEMENTATION
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999425581571924	WITHOUT_CLASSIFICATION	5.744184280762438E-5	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9986811919255475	WITHOUT_CLASSIFICATION	0.001318808074452482	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9993881635822232	WITHOUT_CLASSIFICATION	6.118364177769137E-4	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9993881635822232	WITHOUT_CLASSIFICATION	6.118364177769137E-4	IMPLEMENTATION
// classes are directly in the hierarchy, so no special logic is necessary for implementer	WITHOUT_CLASSIFICATION	0.9999986799571162	WITHOUT_CLASSIFICATION	1.3200428837249853E-6	IMPLEMENTATION
// must be power of 2 // must be power of 2	WITHOUT_CLASSIFICATION	0.9999548408989832	WITHOUT_CLASSIFICATION	4.5159101016802195E-5	IMPLEMENTATION
// Find power-of-two sizes best matching arguments	WITHOUT_CLASSIFICATION	0.9997884862753266	WITHOUT_CLASSIFICATION	2.115137246733853E-4	IMPLEMENTATION
// note segmentShift differs from ConcurrentHashMap's calculation due to // issues with System.identityHashCode (upper n bits always 0, at least  // under Java 1.6 / WinXP)	WITHOUT_CLASSIFICATION	0.9999928083027823	WITHOUT_CLASSIFICATION	7.191697217641148E-6	IMPLEMENTATION
//      System.err.println("***ObjectProxyCache " + id + " started at "+ new java.util.Date());	WITHOUT_CLASSIFICATION	0.9999468358942983	WITHOUT_CLASSIFICATION	5.3164105701572984E-5	IMPLEMENTATION
//    protected void finalize() throws Throwable { //        System.err.println("***ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); //    }	WITHOUT_CLASSIFICATION	0.9998376245535882	WITHOUT_CLASSIFICATION	1.6237544641188313E-4	IMPLEMENTATION
// EntryRefs include hash with key to facilitate lookup by Segment#expunge // after ref is removed from ReferenceQueue	WITHOUT_CLASSIFICATION	0.9999736969529655	WITHOUT_CLASSIFICATION	2.6303047034507693E-5	IMPLEMENTATION
// Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather // makes it a final field.  The theory is that doing so should force a happens-before // relationship WRT the WeakReference constructor, guaranteeing that the key will be // visibile to other threads (unless it's been GC'ed).  See JLS 17.5 (final fields) and // 17.4.5 (Happens-before order) to confirm or refute my reasoning here.	WITHOUT_CLASSIFICATION	0.999634898024675	WITHOUT_CLASSIFICATION	3.651019753249849E-4	IMPLEMENTATION
// references to the Java object and its proxy will either both be // weak or both be soft, since the proxy contains a strong reference // to the object, so it wouldn't make sense for the reference types // to differ.	WITHOUT_CLASSIFICATION	0.9999985498873463	WITHOUT_CLASSIFICATION	1.4501126536805498E-6	IMPLEMENTATION
// ctor used by remove/rehash	WITHOUT_CLASSIFICATION	0.9999424737735336	WITHOUT_CLASSIFICATION	5.752622646636183E-5	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999718194840617	WITHOUT_CLASSIFICATION	2.8180515938306958E-5	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999718194840617	WITHOUT_CLASSIFICATION	2.8180515938306958E-5	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999718194840617	WITHOUT_CLASSIFICATION	2.8180515938306958E-5	IMPLEMENTATION
// note that we'll potentially see the refs for both the java object and // proxy -- whichever we see first will cause the entry to be removed; // the other will not match an entry and will be ignored.	WITHOUT_CLASSIFICATION	0.9999036033787684	WITHOUT_CLASSIFICATION	9.63966212316773E-5	IMPLEMENTATION
// temp method to verify tableSize value // must be called under lock	WITHOUT_CLASSIFICATION	0.9999336482095448	WITHOUT_CLASSIFICATION	6.635179045518627E-5	IMPLEMENTATION
// Single node in list	WITHOUT_CLASSIFICATION	0.9999869438773351	WITHOUT_CLASSIFICATION	1.3056122664818593E-5	IMPLEMENTATION
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9998272733107829	WITHOUT_CLASSIFICATION	1.7272668921707108E-4	IMPLEMENTATION
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9998272733107829	WITHOUT_CLASSIFICATION	1.7272668921707108E-4	IMPLEMENTATION
// entry exists, proxy has been gc'ed. replace entry.	WITHOUT_CLASSIFICATION	0.9995913760812271	WITHOUT_CLASSIFICATION	4.086239187729741E-4	IMPLEMENTATION
// Where we get new positions from.	WITHOUT_CLASSIFICATION	0.9996431373987008	WITHOUT_CLASSIFICATION	3.568626012991762E-4	IMPLEMENTATION
// Start of string ([, (, {, <, ', ", \n) 	WITHOUT_CLASSIFICATION	0.9999937076105364	WITHOUT_CLASSIFICATION	6.2923894635506685E-6	IMPLEMENTATION
// Number of newlines read from the reader	WITHOUT_CLASSIFICATION	0.9999924498378538	WITHOUT_CLASSIFICATION	7.550162146152392E-6	IMPLEMENTATION
// How many bytes into the source are we?	WITHOUT_CLASSIFICATION	0.99998609489579	WITHOUT_CLASSIFICATION	1.3905104209866908E-5	IMPLEMENTATION
// For 'list' and only populated if list is not null.	WITHOUT_CLASSIFICATION	0.9995878913554307	WITHOUT_CLASSIFICATION	4.12108644569302E-4	IMPLEMENTATION
// Last full line read.	WITHOUT_CLASSIFICATION	0.9998900442628226	WITHOUT_CLASSIFICATION	1.0995573717735841E-4	IMPLEMENTATION
// Save sourceLine for error reporting to display line where error occurred	WITHOUT_CLASSIFICATION	0.9996816401426005	WITHOUT_CLASSIFICATION	3.1835985739951943E-4	IMPLEMENTATION
// Get rest of line. lineBuffer filled as side-effect...	WITHOUT_CLASSIFICATION	0.9999436986282393	WITHOUT_CLASSIFICATION	5.630137176077126E-5	IMPLEMENTATION
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9998197454007489	WITHOUT_CLASSIFICATION	1.8025459925101776E-4	IMPLEMENTATION
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9998197454007489	WITHOUT_CLASSIFICATION	1.8025459925101776E-4	IMPLEMENTATION
// End of string (], ), }, >, ', ", \0)	WITHOUT_CLASSIFICATION	0.9999936750733264	WITHOUT_CLASSIFICATION	6.324926673595609E-6	IMPLEMENTATION
// How many strings are nested in the current string term	WITHOUT_CLASSIFICATION	0.9999863239499093	WITHOUT_CLASSIFICATION	1.3676050090806724E-5	IMPLEMENTATION
// Single-quote fast path	WITHOUT_CLASSIFICATION	0.9999404117637676	WITHOUT_CLASSIFICATION	5.958823623242529E-5	IMPLEMENTATION
// Regexp engine 'java'	WITHOUT_CLASSIFICATION	0.9999006124196669	WITHOUT_CLASSIFICATION	9.938758033317023E-5	IMPLEMENTATION
// Was a goto in original ruby lexer	WITHOUT_CLASSIFICATION	0.9999832545246671	WITHOUT_CLASSIFICATION	1.6745475332914878E-5	IMPLEMENTATION
/* just ignore */	WITHOUT_CLASSIFICATION	0.9999778419889818	WITHOUT_CLASSIFICATION	2.215801101824708E-5	IMPLEMENTATION
/* octal constant */	WITHOUT_CLASSIFICATION	0.999864019263711	WITHOUT_CLASSIFICATION	1.359807362889673E-4	IMPLEMENTATION
/* hex constant */	WITHOUT_CLASSIFICATION	0.9998658554642478	WITHOUT_CLASSIFICATION	1.3414453575218022E-4	IMPLEMENTATION
// PUSH(1)	WITHOUT_CLASSIFICATION	0.9999817067840583	WITHOUT_CLASSIFICATION	1.8293215941744205E-5	IMPLEMENTATION
// POP	WITHOUT_CLASSIFICATION	0.9999817067840583	WITHOUT_CLASSIFICATION	1.8293215941744205E-5	IMPLEMENTATION
// PUSH(0).  If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.	WITHOUT_CLASSIFICATION	0.999961902530057	WITHOUT_CLASSIFICATION	3.809746994307348E-5	IMPLEMENTATION
// LEXPOP	WITHOUT_CLASSIFICATION	0.9999817067840583	WITHOUT_CLASSIFICATION	1.8293215941744205E-5	IMPLEMENTATION
// SET_P	WITHOUT_CLASSIFICATION	0.9999817067840583	WITHOUT_CLASSIFICATION	1.8293215941744205E-5	IMPLEMENTATION
// Marker delimiting heredoc boundary	WITHOUT_CLASSIFICATION	0.999839206863199	WITHOUT_CLASSIFICATION	1.6079313680097943E-4	IMPLEMENTATION
// Found end marker for this heredoc	WITHOUT_CLASSIFICATION	0.9998275993670377	WITHOUT_CLASSIFICATION	1.72400632962368E-4	IMPLEMENTATION
// Put back lastLine for any elements past start of heredoc marker	WITHOUT_CLASSIFICATION	0.9999749516012642	WITHOUT_CLASSIFICATION	2.5048398735779778E-5	IMPLEMENTATION
// Last token read via yylex().	WITHOUT_CLASSIFICATION	0.9999330775508976	WITHOUT_CLASSIFICATION	6.69224491025188E-5	IMPLEMENTATION
// Value of last token which had a value associated with it.	WITHOUT_CLASSIFICATION	0.9998894816785193	WITHOUT_CLASSIFICATION	1.1051832148066712E-4	IMPLEMENTATION
// Stream of data that yylex() examines.	WITHOUT_CLASSIFICATION	0.9999039727976594	WITHOUT_CLASSIFICATION	9.60272023405305E-5	IMPLEMENTATION
// Used for tiny smidgen of grammar in lexer (see setParserSupport())	WITHOUT_CLASSIFICATION	0.9999992805579544	WITHOUT_CLASSIFICATION	7.194420456796297E-7	IMPLEMENTATION
// Give a name to a value.  Enebo: This should be used more.	WITHOUT_CLASSIFICATION	0.9997698309435246	WITHOUT_CLASSIFICATION	2.301690564754798E-4	IMPLEMENTATION
// When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').	WITHOUT_CLASSIFICATION	0.9994457510035765	WITHOUT_CLASSIFICATION	5.542489964235327E-4	IMPLEMENTATION
// Are we lexing Ruby 1.8 or 1.9+ syntax	WITHOUT_CLASSIFICATION	0.9997433463026695	WITHOUT_CLASSIFICATION	2.5665369733060333E-4	IMPLEMENTATION
// Count of nested parentheses (1.9 only)	WITHOUT_CLASSIFICATION	0.9996667902359518	WITHOUT_CLASSIFICATION	3.3320976404805345E-4	IMPLEMENTATION
// 1.9 only	WITHOUT_CLASSIFICATION	0.9992540027951079	WITHOUT_CLASSIFICATION	7.459972048921062E-4	IMPLEMENTATION
// Short-hand (e.g. %{,%.,%!,... versus %Q{).	WITHOUT_CLASSIFICATION	0.9998360001542788	WITHOUT_CLASSIFICATION	1.6399984572119353E-4	IMPLEMENTATION
// Long-hand (e.g. %Q{}).	WITHOUT_CLASSIFICATION	0.9998889539491139	WITHOUT_CLASSIFICATION	1.1104605088610198E-4	IMPLEMENTATION
/* no mb || ismbchar(term)*/	WITHOUT_CLASSIFICATION	0.9942560704195462	WITHOUT_CLASSIFICATION	0.005743929580453871	IMPLEMENTATION
/*     * Not normally used, but is left in here since it can be useful in debugging     * grammar and lexing problems.     *     */	WITHOUT_CLASSIFICATION	0.9999997357005469	WITHOUT_CLASSIFICATION	2.6429945308737773E-7	IMPLEMENTATION
// DEBUGGING HELP 	WITHOUT_CLASSIFICATION	0.9993881635822232	WITHOUT_CLASSIFICATION	6.118364177769137E-4	IMPLEMENTATION
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999972368064602	WITHOUT_CLASSIFICATION	2.7631935398027776E-6	IMPLEMENTATION
/* end of script. */	WITHOUT_CLASSIFICATION	0.9999005112297414	WITHOUT_CLASSIFICATION	9.948877025857191E-5	IMPLEMENTATION
/* white spaces */	WITHOUT_CLASSIFICATION	0.9999412396203712	WITHOUT_CLASSIFICATION	5.876037962879122E-5	IMPLEMENTATION
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999972368064602	WITHOUT_CLASSIFICATION	2.7631935398027776E-6	IMPLEMENTATION
/* it's a comment */	WITHOUT_CLASSIFICATION	0.9998457896512308	WITHOUT_CLASSIFICATION	1.5421034876920858E-4	IMPLEMENTATION
// Replace a string of newlines with a single one	WITHOUT_CLASSIFICATION	0.999975995341143	WITHOUT_CLASSIFICATION	2.400465885692119E-5	IMPLEMENTATION
/* $\: output record separator */	WITHOUT_CLASSIFICATION	0.9999843378660858	WITHOUT_CLASSIFICATION	1.5662133914282173E-5	IMPLEMENTATION
// EOF (ENEBO: After default?	WITHOUT_CLASSIFICATION	0.9998461655415224	WITHOUT_CLASSIFICATION	1.5383445847773138E-4	IMPLEMENTATION
// documentation nodes	WITHOUT_CLASSIFICATION	0.9998322347419591	WITHOUT_CLASSIFICATION	1.67765258040912E-4	IMPLEMENTATION
// In case last next was the newline.	WITHOUT_CLASSIFICATION	0.9998270545176224	WITHOUT_CLASSIFICATION	1.7294548237770227E-4	IMPLEMENTATION
// Just a plain bang	WITHOUT_CLASSIFICATION	0.9996910717085107	WITHOUT_CLASSIFICATION	3.089282914893887E-4	IMPLEMENTATION
/* $_: last read line string */	WITHOUT_CLASSIFICATION	0.9999994809262278	WITHOUT_CLASSIFICATION	5.190737721988576E-7	IMPLEMENTATION
/* $~: match-data */	WITHOUT_CLASSIFICATION	0.9999075354069781	WITHOUT_CLASSIFICATION	9.246459302188056E-5	IMPLEMENTATION
/* $*: argv */	WITHOUT_CLASSIFICATION	0.9999075354069781	WITHOUT_CLASSIFICATION	9.246459302188056E-5	IMPLEMENTATION
/* $$: pid */	WITHOUT_CLASSIFICATION	0.999908403988185	WITHOUT_CLASSIFICATION	9.159601181487636E-5	IMPLEMENTATION
/* $?: last status */	WITHOUT_CLASSIFICATION	0.9999819884291323	WITHOUT_CLASSIFICATION	1.8011570867659213E-5	IMPLEMENTATION
/* $!: error string */	WITHOUT_CLASSIFICATION	0.9999981295350616	WITHOUT_CLASSIFICATION	1.8704649384979846E-6	IMPLEMENTATION
/* $@: error position */	WITHOUT_CLASSIFICATION	0.999979186017201	WITHOUT_CLASSIFICATION	2.0813982799021238E-5	IMPLEMENTATION
/* $/: input record separator */	WITHOUT_CLASSIFICATION	0.9999860263459938	WITHOUT_CLASSIFICATION	1.3973654006194402E-5	IMPLEMENTATION
/* $;: field separator */	WITHOUT_CLASSIFICATION	0.9999909087363315	WITHOUT_CLASSIFICATION	9.091263668564285E-6	IMPLEMENTATION
/* $,: output field separator */	WITHOUT_CLASSIFICATION	0.9999885904260079	WITHOUT_CLASSIFICATION	1.1409573992104932E-5	IMPLEMENTATION
/* $.: last read line number */	WITHOUT_CLASSIFICATION	0.9999942682494372	WITHOUT_CLASSIFICATION	5.731750562820607E-6	IMPLEMENTATION
/* $=: ignorecase */	WITHOUT_CLASSIFICATION	0.9999075354069781	WITHOUT_CLASSIFICATION	9.246459302188056E-5	IMPLEMENTATION
/* $:: load path */	WITHOUT_CLASSIFICATION	0.9999484716844216	WITHOUT_CLASSIFICATION	5.1528315578332684E-5	IMPLEMENTATION
/* $<: reading filename */	WITHOUT_CLASSIFICATION	0.9999981894627268	WITHOUT_CLASSIFICATION	1.8105372732874301E-6	IMPLEMENTATION
/* $": already loaded files */	WITHOUT_CLASSIFICATION	0.9999958513630565	WITHOUT_CLASSIFICATION	4.148636943448178E-6	IMPLEMENTATION
/* $&: last match */	WITHOUT_CLASSIFICATION	0.9999552892244742	WITHOUT_CLASSIFICATION	4.471077552575049E-5	IMPLEMENTATION
/* $`: string before last match */	WITHOUT_CLASSIFICATION	0.9999995945610092	WITHOUT_CLASSIFICATION	4.054389907780689E-7	IMPLEMENTATION
/* $': string after last match */	WITHOUT_CLASSIFICATION	0.9999993945562251	WITHOUT_CLASSIFICATION	6.054437749525875E-7	IMPLEMENTATION
// methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop	WITHOUT_CLASSIFICATION	0.9999991431389937	WITHOUT_CLASSIFICATION	8.568610061601595E-7	IMPLEMENTATION
/* See if it is a reserved word.  */	WITHOUT_CLASSIFICATION	0.9999974075642809	WITHOUT_CLASSIFICATION	2.5924357190720025E-6	IMPLEMENTATION
// enum lex_state	WITHOUT_CLASSIFICATION	0.9993885284580961	WITHOUT_CLASSIFICATION	6.114715419038918E-4	IMPLEMENTATION
// block (primary)	WITHOUT_CLASSIFICATION	0.9990998739165009	WITHOUT_CLASSIFICATION	9.00126083499165E-4	IMPLEMENTATION
// block (expr)	WITHOUT_CLASSIFICATION	0.9990998739165009	WITHOUT_CLASSIFICATION	9.00126083499165E-4	IMPLEMENTATION
// hash	WITHOUT_CLASSIFICATION	0.9999818570250626	WITHOUT_CLASSIFICATION	1.8142974937513736E-5	IMPLEMENTATION
// ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.	WITHOUT_CLASSIFICATION	0.9999313214183158	WITHOUT_CLASSIFICATION	6.8678581684314E-5	IMPLEMENTATION
// FIXME: peek('u') utf8 stuff for 1.9	WITHOUT_CLASSIFICATION	0.9999041199153837	WITHOUT_CLASSIFICATION	9.588008461628187E-5	IMPLEMENTATION
// We don't append '+' since Java number parser gets confused	WITHOUT_CLASSIFICATION	0.9999890243798057	WITHOUT_CLASSIFICATION	1.0975620194354166E-5	IMPLEMENTATION
//  hexadecimal	WITHOUT_CLASSIFICATION	0.9994494824529534	WITHOUT_CLASSIFICATION	5.505175470465858E-4	IMPLEMENTATION
// binary	WITHOUT_CLASSIFICATION	0.9999862796824892	WITHOUT_CLASSIFICATION	1.3720317510711915E-5	IMPLEMENTATION
// decimal	WITHOUT_CLASSIFICATION	0.9999869301762939	WITHOUT_CLASSIFICATION	1.3069823705958212E-5	IMPLEMENTATION
//Octal	WITHOUT_CLASSIFICATION	0.99991120461732	WITHOUT_CLASSIFICATION	8.879538267995327E-5	IMPLEMENTATION
//  '_' in number just ignored	WITHOUT_CLASSIFICATION	0.9999884700219013	WITHOUT_CLASSIFICATION	1.15299780986971E-5	IMPLEMENTATION
// backslash	WITHOUT_CLASSIFICATION	0.9993881845945699	WITHOUT_CLASSIFICATION	6.118154054299929E-4	IMPLEMENTATION
// newline	WITHOUT_CLASSIFICATION	0.9999835314654738	WITHOUT_CLASSIFICATION	1.6468534526121498E-5	IMPLEMENTATION
// horizontal tab	WITHOUT_CLASSIFICATION	0.9978410361722879	WITHOUT_CLASSIFICATION	0.0021589638277120676	IMPLEMENTATION
// form feed	WITHOUT_CLASSIFICATION	0.9993298242031086	WITHOUT_CLASSIFICATION	6.701757968915333E-4	IMPLEMENTATION
// vertical tab	WITHOUT_CLASSIFICATION	0.9977048771759683	WITHOUT_CLASSIFICATION	0.0022951228240317262	IMPLEMENTATION
// alarm(bell)	WITHOUT_CLASSIFICATION	0.9993881635822232	WITHOUT_CLASSIFICATION	6.118364177769137E-4	IMPLEMENTATION
// escape	WITHOUT_CLASSIFICATION	0.9999819490905204	WITHOUT_CLASSIFICATION	1.8050909479560054E-5	IMPLEMENTATION
// hex constant	WITHOUT_CLASSIFICATION	0.9991125759888299	WITHOUT_CLASSIFICATION	8.874240111702522E-4	IMPLEMENTATION
//char hexValue = scanHex(2);	WITHOUT_CLASSIFICATION	0.9993390917300018	WITHOUT_CLASSIFICATION	6.609082699982493E-4	IMPLEMENTATION
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999753911950112	WITHOUT_CLASSIFICATION	2.460880498878593E-5	IMPLEMENTATION
// space	WITHOUT_CLASSIFICATION	0.9999936818429412	WITHOUT_CLASSIFICATION	6.318157058768465E-6	IMPLEMENTATION
// Where we started this marker match	WITHOUT_CLASSIFICATION	0.9997466783583714	WITHOUT_CLASSIFICATION	2.533216416286927E-4	IMPLEMENTATION
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999998821607116	WITHOUT_CLASSIFICATION	1.1783928850868885E-7	IMPLEMENTATION
// We use offset here to keep track of extra newlines for windows	WITHOUT_CLASSIFICATION	0.9998687751741581	WITHOUT_CLASSIFICATION	1.312248258419796E-4	IMPLEMENTATION
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999753911950112	WITHOUT_CLASSIFICATION	2.460880498878593E-5	IMPLEMENTATION
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9959537110394151	WITHOUT_CLASSIFICATION	0.004046288960584929	IMPLEMENTATION
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9959537110394151	WITHOUT_CLASSIFICATION	0.004046288960584929	IMPLEMENTATION
// Where we get our newest char's	WITHOUT_CLASSIFICATION	0.9999513469895331	WITHOUT_CLASSIFICATION	4.8653010466783707E-5	IMPLEMENTATION
// Our readback/pushback buffer.	WITHOUT_CLASSIFICATION	0.9998293813451222	WITHOUT_CLASSIFICATION	1.70618654877829E-4	IMPLEMENTATION
// index of last character in pushback buffer	WITHOUT_CLASSIFICATION	0.9999761570087727	WITHOUT_CLASSIFICATION	2.3842991227175155E-5	IMPLEMENTATION
// Character read before previous read	WITHOUT_CLASSIFICATION	0.9999700318732079	WITHOUT_CLASSIFICATION	2.996812679204412E-5	IMPLEMENTATION
// keep value of twoAgo around so we can restore after we unread	WITHOUT_CLASSIFICATION	0.9998156602081039	WITHOUT_CLASSIFICATION	1.843397918961159E-4	IMPLEMENTATION
// NetProtocolBufferedIOLibrary	WITHOUT_CLASSIFICATION	0.9998272733107829	WITHOUT_CLASSIFICATION	1.7272668921707108E-4	IMPLEMENTATION
// BigDecimalLibrary	WITHOUT_CLASSIFICATION	0.9993881635822232	WITHOUT_CLASSIFICATION	6.118364177769137E-4	IMPLEMENTATION
// TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. // We did it here for now	WITHOUT_CLASSIFICATION	0.9930497258170261	IMPLEMENTATION	0.006950274182973885	WITHOUT_CLASSIFICATION
// Ruby's designation for some platforms, minus version numbers in some cases	WITHOUT_CLASSIFICATION	0.999985794631921	WITHOUT_CLASSIFICATION	1.4205368078826487E-5	IMPLEMENTATION
// that's what JDK5 produces on Windows Vista	WITHOUT_CLASSIFICATION	0.9928115318742625	WITHOUT_CLASSIFICATION	0.007188468125737446	IMPLEMENTATION
// Rubygems is too specific on host cpu so until we have real need lets default to universal //setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));	WITHOUT_CLASSIFICATION	0.9998237617801432	WITHOUT_CLASSIFICATION	1.7623821985678767E-4	IMPLEMENTATION
// Our shell scripts pass in non-canonicalized paths, but even if we didn't // anyone who did would become unhappy because Ruby apps expect no relative // operators in the pathname (rubygems, for example).	WITHOUT_CLASSIFICATION	0.9999790133834446	WITHOUT_CLASSIFICATION	2.0986616555331877E-5	IMPLEMENTATION
// this set is only for darwin	WITHOUT_CLASSIFICATION	0.999949325836325	WITHOUT_CLASSIFICATION	5.0674163675086095E-5	IMPLEMENTATION
// DigestLibrary	WITHOUT_CLASSIFICATION	0.9993881635822232	WITHOUT_CLASSIFICATION	6.118364177769137E-4	IMPLEMENTATION
// all errors, just info; do not prevent loading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9818613104168803	WITHOUT_CLASSIFICATION	0.01813868958311964	IMPLEMENTATION
// all errors, just info; do not prevent unloading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9887394136698716	WITHOUT_CLASSIFICATION	0.01126058633012845	IMPLEMENTATION
// do nothing, return dummy version below	WITHOUT_CLASSIFICATION	0.9998248358120521	WITHOUT_CLASSIFICATION	1.7516418794794606E-4	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
// line 329	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9992447853635568	WITHOUT_CLASSIFICATION	7.552146364432431E-4	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
// dynamically increase	WITHOUT_CLASSIFICATION	0.9998916083536455	WITHOUT_CLASSIFICATION	1.0839164635448183E-4	IMPLEMENTATION
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.999707888151036	WITHOUT_CLASSIFICATION	2.9211184896400533E-4	IMPLEMENTATION
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9998552342631802	WITHOUT_CLASSIFICATION	1.4476573681970804E-4	IMPLEMENTATION
// shift to yyN	WITHOUT_CLASSIFICATION	0.9993839503685146	WITHOUT_CLASSIFICATION	6.16049631485395E-4	IMPLEMENTATION
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9994008926511732	WITHOUT_CLASSIFICATION	5.991073488269089E-4	IMPLEMENTATION
// leave stack alone	WITHOUT_CLASSIFICATION	0.9995176626074406	WITHOUT_CLASSIFICATION	4.823373925593962E-4	IMPLEMENTATION
// line 271	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 274	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 303	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 311	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 314	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 317	WITHOUT_CLASSIFICATION	0.9993928285303734	WITHOUT_CLASSIFICATION	6.071714696266377E-4	IMPLEMENTATION
// line 332	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 338	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 341	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 344	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 351	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 358	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 367	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 372	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 378	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 382	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 407	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 411	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 414	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 417	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 420	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 426	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 434	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 443	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 446	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 452	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 457	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 464	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 467	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 470	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 479	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 484	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 486	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 492	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 498	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 501	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 504	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 507	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 510	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 519	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 525	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
// line 537	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 540	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 543	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 546	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 556	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 559	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 563	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 566	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 569	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 575	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 578	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 587	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 596	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 604	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 607	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 610	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 613	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 616	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 634	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 638	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 643	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 646	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 655	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 660	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 667	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 670	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 672	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 696	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 701	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 717	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 720	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 726	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 729	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 732	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 735	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 738	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 751	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 754	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 757	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 760	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 763	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 769	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 772	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 775	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 782	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 788	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 791	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 794	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 797	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 803	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 806	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 809	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 815	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 818	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 821	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 824	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 830	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 833	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 836	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 839	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 842	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 848	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 852	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 858	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 861	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 868	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 871	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 876	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 879	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 883	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 893	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 896	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 899	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 903	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 907	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 915	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 920	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 923	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 926	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 932	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 936	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 940	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 944	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 948	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 956	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 960	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 964	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 967	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 972	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 978	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 980	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 984	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 986	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 996	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1001	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1004	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1008	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1014	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1029	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1032	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1034	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1045	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1048	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1051	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1058	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1070	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1073	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1076	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1079	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1082	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1089	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1097	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1100	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1103	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1107	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1111	WITHOUT_CLASSIFICATION	0.9993952357849263	WITHOUT_CLASSIFICATION	6.047642150736791E-4	IMPLEMENTATION
// line 1113	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1115	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1119	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1130	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1133	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1135	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1137	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1140	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1151	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1154	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1158	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1164	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1175	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1178	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1187	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1189	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1193	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1204	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1207	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1210	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1214	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1234	WITHOUT_CLASSIFICATION	0.999395042932111	WITHOUT_CLASSIFICATION	6.049570678889233E-4	IMPLEMENTATION
// line 1239	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1243	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1247	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1251	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1263	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1269	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1280	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1283	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1290	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1296	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1299	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1302	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1309	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1313	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1315	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1320	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1328	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1335	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1348	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1352	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1358	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1374	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1381	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1387	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1392	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1415	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1431	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1434	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1440	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1443	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1453	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1456	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1462	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1465	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1470	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1477	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1480	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1485	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1488	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1496	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1502	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1510	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1513	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1516	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1533	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1550	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1553	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1556	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1565	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1568	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1571	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1574	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1577	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1587	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1595	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1598	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1600	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1609	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1623	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1626	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1629	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1632	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1638	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1641	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1644	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1649	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1655	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1658	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1661	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1672	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1677	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1687	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1694	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1705	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1708	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1725	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1733	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1742	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1745	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1749	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1757	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1769	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1772	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1775	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1784	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1808	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1814	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1818	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1822	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
/* force for args */	WITHOUT_CLASSIFICATION	0.9998834711394103	WITHOUT_CLASSIFICATION	1.16528860589681E-4	IMPLEMENTATION
/*XXX 0;*/	WITHOUT_CLASSIFICATION	0.99991120461732	WITHOUT_CLASSIFICATION	8.879538267995327E-5	IMPLEMENTATION
/*                      $$ = $3;*/	WITHOUT_CLASSIFICATION	0.9920101221207742	WITHOUT_CLASSIFICATION	0.007989877879225796	IMPLEMENTATION
/*                  }*/	WITHOUT_CLASSIFICATION	0.997705315956107	WITHOUT_CLASSIFICATION	0.002294684043893063	IMPLEMENTATION
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.999391758417927	WITHOUT_CLASSIFICATION	6.082415820728489E-4	IMPLEMENTATION
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9908159290733668	WITHOUT_CLASSIFICATION	0.009184070926633198	IMPLEMENTATION
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9990465894018588	WITHOUT_CLASSIFICATION	9.534105981412081E-4	IMPLEMENTATION
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9990465894018588	WITHOUT_CLASSIFICATION	9.534105981412081E-4	IMPLEMENTATION
/* NOEX_PRIVATE for toplevel */	WITHOUT_CLASSIFICATION	0.9999899728011417	WITHOUT_CLASSIFICATION	1.0027198858292735E-5	IMPLEMENTATION
/*mirko: check*/	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
/* Include pipes on multiple arg type*/	WITHOUT_CLASSIFICATION	0.9914925754432714	WITHOUT_CLASSIFICATION	0.008507424556728564	IMPLEMENTATION
// line 529	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9948230835789837	WITHOUT_CLASSIFICATION	0.005176916421016178	IMPLEMENTATION
/* XXX*/	WITHOUT_CLASSIFICATION	0.9991867972388033	WITHOUT_CLASSIFICATION	8.132027611966403E-4	IMPLEMENTATION
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999776747500042	WITHOUT_CLASSIFICATION	2.2325249995802834E-5	IMPLEMENTATION
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9958072397820688	WITHOUT_CLASSIFICATION	0.004192760217931229	IMPLEMENTATION
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9948230835789837	WITHOUT_CLASSIFICATION	0.005176916421016178	IMPLEMENTATION
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.992372828949022	WITHOUT_CLASSIFICATION	0.007627171050977982	IMPLEMENTATION
// line 1827 "DefaultRubyParser.y"	WITHOUT_CLASSIFICATION	0.9998285585755557	WITHOUT_CLASSIFICATION	1.7144142444423804E-4	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9996654626505458	WITHOUT_CLASSIFICATION	3.3453734945428673E-4	IMPLEMENTATION
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9993578143257724	WITHOUT_CLASSIFICATION	6.421856742275642E-4	IMPLEMENTATION
// line 7713 "-"	WITHOUT_CLASSIFICATION	0.9993929449087967	WITHOUT_CLASSIFICATION	6.070550912033395E-4	IMPLEMENTATION
// local scopes are argument scopes by default	WITHOUT_CLASSIFICATION	0.9999974199796956	WITHOUT_CLASSIFICATION	2.5800203044557412E-6	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999961934932194	WITHOUT_CLASSIFICATION	3.806506780492824E-6	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999961934932194	WITHOUT_CLASSIFICATION	3.806506780492824E-6	IMPLEMENTATION
// We know this is a block scope because a local scope cannot be within a local scope // If topScope was itself it would have created a LocalAsgnNode above.	WITHOUT_CLASSIFICATION	0.999986049822546	WITHOUT_CLASSIFICATION	1.3950177453987274E-5	IMPLEMENTATION
// ENEBO: 1.9 has CURR nodes for local/block variables.  We don't.  I believe we follow proper logic	WITHOUT_CLASSIFICATION	0.9996068412435785	WITHOUT_CLASSIFICATION	3.9315875642148703E-4	IMPLEMENTATION
// odd...but it is odd in ruby too.	WITHOUT_CLASSIFICATION	0.9999814347023347	WITHOUT_CLASSIFICATION	1.856529766528521E-5	IMPLEMENTATION
// What linenumber will the source think it starts from?	WITHOUT_CLASSIFICATION	0.9991859616669997	WITHOUT_CLASSIFICATION	8.140383330002118E-4	IMPLEMENTATION
// Is this inline source (aka -e "...source...")	WITHOUT_CLASSIFICATION	0.9996978877568765	WITHOUT_CLASSIFICATION	3.0211224312345084E-4	IMPLEMENTATION
// We parse evals more often in source so assume an eval parse.	WITHOUT_CLASSIFICATION	0.9999928841051837	WITHOUT_CLASSIFICATION	7.115894816297849E-6	IMPLEMENTATION
// Should positions added extra IDE-friendly information and leave in all newline nodes	WITHOUT_CLASSIFICATION	0.9999995335313757	WITHOUT_CLASSIFICATION	4.6646862423697627E-7	IMPLEMENTATION
// Will parser parse Duby grammar Extensions	WITHOUT_CLASSIFICATION	0.9996862577896823	WITHOUT_CLASSIFICATION	3.137422103177482E-4	IMPLEMENTATION
// Should we display extra debug information while parsing?	WITHOUT_CLASSIFICATION	0.999941297111832	WITHOUT_CLASSIFICATION	5.8702888168067245E-5	IMPLEMENTATION
// __END__ marker offset (-1 means none present)	WITHOUT_CLASSIFICATION	0.9998842859681014	WITHOUT_CLASSIFICATION	1.1571403189858959E-4	IMPLEMENTATION
// Parser states:	WITHOUT_CLASSIFICATION	0.9993931839099174	WITHOUT_CLASSIFICATION	6.068160900826049E-4	IMPLEMENTATION
// Is the parser current within a singleton (value is number of nested singletons)	WITHOUT_CLASSIFICATION	0.9985771413596292	WITHOUT_CLASSIFICATION	0.0014228586403708093	IMPLEMENTATION
// Is the parser currently within a method definition	WITHOUT_CLASSIFICATION	0.9983295093111533	WITHOUT_CLASSIFICATION	0.0016704906888466305	IMPLEMENTATION
// LOCALVAR	WITHOUT_CLASSIFICATION	0.9993881635822232	WITHOUT_CLASSIFICATION	6.118364177769137E-4	IMPLEMENTATION
// CONSTANT	WITHOUT_CLASSIFICATION	0.9993881635822232	WITHOUT_CLASSIFICATION	6.118364177769137E-4	IMPLEMENTATION
// INSTANCE VARIABLE	WITHOUT_CLASSIFICATION	0.9993881635822232	WITHOUT_CLASSIFICATION	6.118364177769137E-4	IMPLEMENTATION
// Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])	WITHOUT_CLASSIFICATION	0.9996209349704512	WITHOUT_CLASSIFICATION	3.790650295487968E-4	IMPLEMENTATION
/* MRI: block_append */	WITHOUT_CLASSIFICATION	0.9999823323830926	WITHOUT_CLASSIFICATION	1.7667616907353572E-5	IMPLEMENTATION
// Reduces overhead in interp by not set position every single line we encounter. 	WITHOUT_CLASSIFICATION	0.9988674610366396	WITHOUT_CLASSIFICATION	0.001132538963360389	IMPLEMENTATION
// Assumption: tail is never a list node	WITHOUT_CLASSIFICATION	0.997855981985899	WITHOUT_CLASSIFICATION	0.0021440180141009254	IMPLEMENTATION
//        return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));	WITHOUT_CLASSIFICATION	0.9998631177562921	WITHOUT_CLASSIFICATION	1.3688224370793478E-4	IMPLEMENTATION
// Node	WITHOUT_CLASSIFICATION	0.9999818789797343	WITHOUT_CLASSIFICATION	1.8121020265629274E-5	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9998155477033778	WITHOUT_CLASSIFICATION	1.8445229662220118E-4	IMPLEMENTATION
/*case CONSTNODE:                handleUselessWarn(node, "a constant"); return;*/	WITHOUT_CLASSIFICATION	0.9992460421881024	WITHOUT_CLASSIFICATION	7.539578118974942E-4	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9998155477033778	WITHOUT_CLASSIFICATION	1.8445229662220118E-4	IMPLEMENTATION
/*case CLASSNODE: case COLON2NODE:                handleUselessWarn(node, "::"); return;*/	WITHOUT_CLASSIFICATION	0.9987306784996567	WITHOUT_CLASSIFICATION	0.0012693215003433133	IMPLEMENTATION
/*case SELFNODE:                handleUselessWarn(node, "self"); return;*/	WITHOUT_CLASSIFICATION	0.9992460421881024	WITHOUT_CLASSIFICATION	7.539578118974942E-4	IMPLEMENTATION
// FIXME: DSTR,EVSTR,STR: warning "string literal in condition"	WITHOUT_CLASSIFICATION	0.9999854402411481	WITHOUT_CLASSIFICATION	1.4559758851906906E-5	IMPLEMENTATION
/* MRI: range_op */	WITHOUT_CLASSIFICATION	0.9999075354069781	WITHOUT_CLASSIFICATION	9.246459302188056E-5	IMPLEMENTATION
// Block and block pass passed in at same time....uh oh	WITHOUT_CLASSIFICATION	0.9999938385181665	WITHOUT_CLASSIFICATION	6.161481833615304E-6	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.9999817067840583	WITHOUT_CLASSIFICATION	1.8293215941744205E-5	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.9999817067840583	WITHOUT_CLASSIFICATION	1.8293215941744205E-5	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.9999817067840583	WITHOUT_CLASSIFICATION	1.8293215941744205E-5	IMPLEMENTATION
// tail must be EvStrNode at this point 	WITHOUT_CLASSIFICATION	0.9998850381050509	WITHOUT_CLASSIFICATION	1.1496189494911129E-4	IMPLEMENTATION
//Do not add an empty string node	WITHOUT_CLASSIFICATION	0.999847799430413	WITHOUT_CLASSIFICATION	1.5220056958695877E-4	IMPLEMENTATION
// Zero-Argument declaration	WITHOUT_CLASSIFICATION	0.9999193140415078	WITHOUT_CLASSIFICATION	8.068595849221763E-5	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
// dynamically increase	WITHOUT_CLASSIFICATION	0.9998916083536455	WITHOUT_CLASSIFICATION	1.0839164635448183E-4	IMPLEMENTATION
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9998552342631802	WITHOUT_CLASSIFICATION	1.4476573681970804E-4	IMPLEMENTATION
// shift to yyN	WITHOUT_CLASSIFICATION	0.9993839503685146	WITHOUT_CLASSIFICATION	6.16049631485395E-4	IMPLEMENTATION
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9994008926511732	WITHOUT_CLASSIFICATION	5.991073488269089E-4	IMPLEMENTATION
// leave stack alone	WITHOUT_CLASSIFICATION	0.9995176626074406	WITHOUT_CLASSIFICATION	4.823373925593962E-4	IMPLEMENTATION
// line 321	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 351	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 382	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 417	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 420	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 423	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 426	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 280	WITHOUT_CLASSIFICATION	0.9993931724596157	WITHOUT_CLASSIFICATION	6.068275403843636E-4	IMPLEMENTATION
// line 283	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 296	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 324	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 327	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 331	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 333	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 336	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 342	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 345	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 348	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 354	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 368	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 377	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 388	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 392	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 397	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 429	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 432	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 436	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 445	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 448	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 454	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 459	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 466	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 469	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 478	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 481	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 488	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 494	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 497	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 503	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 506	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 509	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 512	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 521	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 526	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 540	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 543	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 546	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 566	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 610	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 672	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 691	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 696	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 772	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 782	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 785	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 788	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 791	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 534	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 549	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 552	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 558	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 561	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 571	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 574	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 579	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 586	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 589	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 592	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 595	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 598	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 623	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 627	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 630	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 633	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 639	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 648	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 657	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 661	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 666	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 678	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 682	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 688	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 699	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 706	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 708	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 727	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 737	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 753	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 779	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 801	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 808	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 811	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 817	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 842	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 845	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 848	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 893	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 899	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 932	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 944	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 960	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 980	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1004	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1038	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 820	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 826	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 829	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 832	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 851	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 857	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 860	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 863	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 866	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 869	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 875	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 884	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 887	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 890	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 902	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 909	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 912	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 916	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 922	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 928	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 941	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 947	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 951	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 955	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 965	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 969	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 977	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 983	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1013	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1023	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1035	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1041	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1043	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1054	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1057	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1060	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1069	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1075	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1105	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1111	WITHOUT_CLASSIFICATION	0.9993952357849263	WITHOUT_CLASSIFICATION	6.047642150736791E-4	IMPLEMENTATION
// line 1122	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1130	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1140	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1158	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1204	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1207	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1247	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1251	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1261	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1078	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1084	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1087	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1090	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1093	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1114	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1116	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1118	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1124	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1126	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1138	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1144	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1149	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1155	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1162	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1173	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1179	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1182	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1190	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1196	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1213	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1217	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1231	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1236	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1244	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1254	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1258	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1264	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1270	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1273	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1276	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1279	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1282	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1289	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1292	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1295	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1298	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1305	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1348	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1387	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1392	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1448	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1462	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1470	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1496	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1502	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1595	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1598	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1308	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1311	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1317	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1323	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1326	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1329	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1337	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1342	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1345	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1354	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1359	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1366	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1369	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1373	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1377	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1383	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1399	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1401	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1406	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1417	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1424	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1427	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1430	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1433	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1436	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1442	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1445	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1458	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1464	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1489	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1493	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1507	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1519	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1532	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1538	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1542	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1557	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1573	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1591	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1615	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1629	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1632	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1705	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1716	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1725	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1742	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1749	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1818	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1822	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1607	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1610	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1622	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1625	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1636	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1639	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1647	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1651	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1657	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1660	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1663	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1678	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1702	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1711	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1719	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1722	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1731	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1734	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1738	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1746	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1756	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1758	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1761	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1767	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1776	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1782	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1785	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1788	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1791	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1797	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1800	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1803	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1806	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1809	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1815	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1825	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1828	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1831	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1847	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9990465894018588	WITHOUT_CLASSIFICATION	9.534105981412081E-4	IMPLEMENTATION
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9990465894018588	WITHOUT_CLASSIFICATION	9.534105981412081E-4	IMPLEMENTATION
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9948230835789837	WITHOUT_CLASSIFICATION	0.005176916421016178	IMPLEMENTATION
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999776747500042	WITHOUT_CLASSIFICATION	2.2325249995802834E-5	IMPLEMENTATION
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9958072397820688	WITHOUT_CLASSIFICATION	0.004192760217931229	IMPLEMENTATION
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9948230835789837	WITHOUT_CLASSIFICATION	0.005176916421016178	IMPLEMENTATION
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.992372828949022	WITHOUT_CLASSIFICATION	0.007627171050977982	IMPLEMENTATION
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9998272733107829	WITHOUT_CLASSIFICATION	1.7272668921707108E-4	IMPLEMENTATION
// line 1854	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1869	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1872	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1877	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1886	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1898	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1902	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1905	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1911	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1918	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1935	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1938	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1942	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1948	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1960	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1963	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1968	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1972	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1982	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1995	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 2000	WITHOUT_CLASSIFICATION	0.9993938972404208	WITHOUT_CLASSIFICATION	6.061027595793032E-4	IMPLEMENTATION
// line 2006	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 2010	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
/* We may need to subtract addition offset off of first */	WITHOUT_CLASSIFICATION	0.999966408872312	WITHOUT_CLASSIFICATION	3.359112768792824E-5	IMPLEMENTATION
/* string fragment (we optimistically take one off in*/	WITHOUT_CLASSIFICATION	0.9995328732714973	WITHOUT_CLASSIFICATION	4.671267285026518E-4	IMPLEMENTATION
/* ParserSupport.literal_concat).  Check token length*/	WITHOUT_CLASSIFICATION	0.9872789119396184	WITHOUT_CLASSIFICATION	0.012721088060381552	IMPLEMENTATION
/* and subtract as neeeded.*/	WITHOUT_CLASSIFICATION	0.9976243396460485	WITHOUT_CLASSIFICATION	0.0023756603539515763	IMPLEMENTATION
/*                    $$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);  */	WITHOUT_CLASSIFICATION	0.9999794592508847	WITHOUT_CLASSIFICATION	2.0540749115229023E-5	IMPLEMENTATION
/* ENEBO: arg surrounded by in_defined set/unset*/	WITHOUT_CLASSIFICATION	0.9968552790833384	WITHOUT_CLASSIFICATION	0.003144720916661693	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9996654626505458	WITHOUT_CLASSIFICATION	3.3453734945428673E-4	IMPLEMENTATION
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9993578143257724	WITHOUT_CLASSIFICATION	6.421856742275642E-4	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999961934932194	WITHOUT_CLASSIFICATION	3.806506780492824E-6	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999961934932194	WITHOUT_CLASSIFICATION	3.806506780492824E-6	IMPLEMENTATION
/* ENEBO: Removed !compile_for_eval which probably is to reduce warnings*/	WITHOUT_CLASSIFICATION	0.9498227703037735	WITHOUT_CLASSIFICATION	0.050177229696226545	IMPLEMENTATION
/* was $$ = null;*/	WITHOUT_CLASSIFICATION	0.9959847328946693	WITHOUT_CLASSIFICATION	0.004015267105330715	IMPLEMENTATION
// line 2019 "Ruby19Parser.y"	WITHOUT_CLASSIFICATION	0.9998839148975349	WITHOUT_CLASSIFICATION	1.1608510246506772E-4	IMPLEMENTATION
// line 8143 "-"	WITHOUT_CLASSIFICATION	0.9993929449087967	WITHOUT_CLASSIFICATION	6.070550912033395E-4	IMPLEMENTATION
// we know variables cannot be null since localstaticscope will create a 0 length one.	WITHOUT_CLASSIFICATION	0.9998802497282222	WITHOUT_CLASSIFICATION	1.1975027177775847E-4	IMPLEMENTATION
// No bit math to store level since we know level is zero for this case	WITHOUT_CLASSIFICATION	0.9992520308717127	WITHOUT_CLASSIFICATION	7.479691282873103E-4	IMPLEMENTATION
// Next immediate scope.  Variable and constant scoping rules make use of this variable // in different ways.	WITHOUT_CLASSIFICATION	0.9998050527498946	WITHOUT_CLASSIFICATION	1.9494725010542956E-4	IMPLEMENTATION
// Live reference to module	WITHOUT_CLASSIFICATION	0.9999557749693943	WITHOUT_CLASSIFICATION	4.422503060571524E-5	IMPLEMENTATION
// Next CRef down the lexical structure	WITHOUT_CLASSIFICATION	0.9998734043361295	WITHOUT_CLASSIFICATION	1.2659566387043946E-4	IMPLEMENTATION
// Our name holder (offsets are assigned as variables are added	WITHOUT_CLASSIFICATION	0.9999944302923681	WITHOUT_CLASSIFICATION	5.569707631842026E-6	IMPLEMENTATION
// number of variables in this scope representing required arguments	WITHOUT_CLASSIFICATION	0.9999582517490148	WITHOUT_CLASSIFICATION	4.174825098529756E-5	IMPLEMENTATION
// number of variables in this scope representing optional arguments	WITHOUT_CLASSIFICATION	0.999985654090098	WITHOUT_CLASSIFICATION	1.4345909902047521E-5	IMPLEMENTATION
// index of variable that represents a "rest" arg	WITHOUT_CLASSIFICATION	0.9994955610759987	WITHOUT_CLASSIFICATION	5.044389240012725E-4	IMPLEMENTATION
// Note that this object equality check is intentional, to ensure // the string and its interned version are the same object.	WITHOUT_CLASSIFICATION	0.9999786786783695	WITHOUT_CLASSIFICATION	2.1321321630477925E-5	IMPLEMENTATION
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999353183338812	WITHOUT_CLASSIFICATION	6.468166611892347E-5	IMPLEMENTATION
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999353183338812	WITHOUT_CLASSIFICATION	6.468166611892347E-5	IMPLEMENTATION
/* Note: Only used by compiler until it can use getConstant again or use some other refactoring */	WITHOUT_CLASSIFICATION	0.9995734256762279	WITHOUT_CLASSIFICATION	4.2657432377204594E-4	IMPLEMENTATION
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9994136308946676	WITHOUT_CLASSIFICATION	5.863691053324361E-4	IMPLEMENTATION
/* Try and unload the autoload specified from internedName */	WITHOUT_CLASSIFICATION	0.9999958929721725	WITHOUT_CLASSIFICATION	4.107027827504091E-6	IMPLEMENTATION
// We override that the logic which uses this	WITHOUT_CLASSIFICATION	0.9992847882267872	WITHOUT_CLASSIFICATION	7.152117732128166E-4	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999951101318448	WITHOUT_CLASSIFICATION	4.889868155246197E-6	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9997785432310983	WITHOUT_CLASSIFICATION	2.2145676890177092E-4	IMPLEMENTATION
// source extensions	WITHOUT_CLASSIFICATION	0.9998572656908135	WITHOUT_CLASSIFICATION	1.4273430918656016E-4	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9997785432310983	WITHOUT_CLASSIFICATION	2.2145676890177092E-4	IMPLEMENTATION
// . Array given to rest should pass itself // . Array with rest + other args should extract array // . Array with multiple values and NO rest should extract args if there are more than one argument	WITHOUT_CLASSIFICATION	0.9999588809171732	WITHOUT_CLASSIFICATION	4.111908282685777E-5	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9990625932559419	WITHOUT_CLASSIFICATION	9.374067440579943E-4	IMPLEMENTATION
// Is this thread currently with in a function trace?	WITHOUT_CLASSIFICATION	0.9999054669877264	WITHOUT_CLASSIFICATION	9.453301227358799E-5	IMPLEMENTATION
// Is this thread currently doing an defined? defined should set things like $!	WITHOUT_CLASSIFICATION	0.998258923463965	WITHOUT_CLASSIFICATION	0.001741076536034946	IMPLEMENTATION
//private UnsynchronizedStack parentStack;	WITHOUT_CLASSIFICATION	0.9993575308303738	WITHOUT_CLASSIFICATION	6.424691696261393E-4	IMPLEMENTATION
//private UnsynchronizedStack frameStack;	WITHOUT_CLASSIFICATION	0.9993575308303738	WITHOUT_CLASSIFICATION	6.424691696261393E-4	IMPLEMENTATION
// List of active dynamic scopes.  Each of these may have captured other dynamic scopes // to implement closures.	WITHOUT_CLASSIFICATION	0.939733560214492	WITHOUT_CLASSIFICATION	0.06026643978550801	IMPLEMENTATION
// File where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9998502201361201	WITHOUT_CLASSIFICATION	1.4977986387988812E-4	IMPLEMENTATION
// Line where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9994858116097403	WITHOUT_CLASSIFICATION	5.141883902596698E-4	IMPLEMENTATION
// In certain places, like grep, we don't use real frames for the // call blocks. This has the effect of not setting the backref in // the correct frame - this delta is activated to the place where // the grep is running in so that the backref will be set in an // appropriate place.	WITHOUT_CLASSIFICATION	0.9982916420721832	WITHOUT_CLASSIFICATION	0.0017083579278167628	IMPLEMENTATION
// TOPLEVEL self and a few others want a top-level scope.  We create this one right // away and then pass it into top-level parse so it ends up being the top level.	WITHOUT_CLASSIFICATION	0.9998522726439667	WITHOUT_CLASSIFICATION	1.477273560332683E-4	IMPLEMENTATION
//////////////////// CATCH MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9991670657552811	WITHOUT_CLASSIFICATION	8.329342447189323E-4	IMPLEMENTATION
//////////////////// FRAME MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9991670657552811	WITHOUT_CLASSIFICATION	8.329342447189323E-4	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9945275521949262	WITHOUT_CLASSIFICATION	0.005472447805073848	IMPLEMENTATION
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999431054594061	WITHOUT_CLASSIFICATION	5.689454059394197E-5	IMPLEMENTATION
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999431054594061	WITHOUT_CLASSIFICATION	5.689454059394197E-5	IMPLEMENTATION
// look for mangling markers for compiled Ruby in method name	WITHOUT_CLASSIFICATION	0.9998788523311054	WITHOUT_CLASSIFICATION	1.2114766889456136E-4	IMPLEMENTATION
// if it's not a rescue or ensure, there's a frame associated, so decrement	WITHOUT_CLASSIFICATION	0.998033841850052	WITHOUT_CLASSIFICATION	0.0019661581499481077	IMPLEMENTATION
// look for __file__ method name for compiled roots	WITHOUT_CLASSIFICATION	0.999263291728758	WITHOUT_CLASSIFICATION	7.367082712419452E-4	IMPLEMENTATION
// All entries following removed node can stay // in list, but all preceding ones need to be // cloned.	WITHOUT_CLASSIFICATION	0.999529791370074	WITHOUT_CLASSIFICATION	4.702086299259482E-4	IMPLEMENTATION
// required and optional only	WITHOUT_CLASSIFICATION	0.9997082897168631	WITHOUT_CLASSIFICATION	2.9171028313683834E-4	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9997785432310983	WITHOUT_CLASSIFICATION	2.2145676890177092E-4	IMPLEMENTATION
// look for mangling markers for bound, unframed methods in class name	WITHOUT_CLASSIFICATION	0.9999913009860928	WITHOUT_CLASSIFICATION	8.699013907198961E-6	IMPLEMENTATION
// set the binding's frame's "previous" file and line to current, so // trace will show who called the block	WITHOUT_CLASSIFICATION	0.9998969223737085	WITHOUT_CLASSIFICATION	1.0307762629146747E-4	IMPLEMENTATION
// framed invokers will have Ruby frames associated with them	WITHOUT_CLASSIFICATION	0.9998716785114075	WITHOUT_CLASSIFICATION	1.2832148859251435E-4	IMPLEMENTATION
// look for mangling markers for bound, framed methods in class name	WITHOUT_CLASSIFICATION	0.9999913009860928	WITHOUT_CLASSIFICATION	8.699013907198961E-6	IMPLEMENTATION
// unframed invokers have no Ruby frames, so pull from class name // but use current frame as file and line	WITHOUT_CLASSIFICATION	0.9999743908570996	WITHOUT_CLASSIFICATION	2.560914290033631E-5	IMPLEMENTATION
// try to mine out a Ruby frame using our list of interpreter entry-point markers	WITHOUT_CLASSIFICATION	0.999994357550407	WITHOUT_CLASSIFICATION	5.642449593000109E-6	IMPLEMENTATION
// Frame matches one of our markers for "interpreted" calls	WITHOUT_CLASSIFICATION	0.9999800377019324	WITHOUT_CLASSIFICATION	1.9962298067509656E-5	IMPLEMENTATION
// Frame is extraneous runtime information, skip it unless debug	WITHOUT_CLASSIFICATION	0.9994179362319852	WITHOUT_CLASSIFICATION	5.820637680147697E-4	IMPLEMENTATION
/*     * Determine what sort of assigner should be used for the provided 'iter' (e.g. block).     * Assigner provides just the right logic for assigning values to local parameters of the     * block.     *     * This method also has a second optimization which is to set 'noargblock' in the case that     * the block is a block which accepts no arguments.  The primary reason for this second     * optimization is that in the case of a yield with a RubyArray we will bypass some logic     * processing the RubyArray into a proper form (only to then not do anythign with it).  A     * secondary benefit is that a simple boolean seems to optimize by hotspot much faster     * than the zero arg assigner.     */	WITHOUT_CLASSIFICATION	0.9999932836652521	WITHOUT_CLASSIFICATION	6.716334747837353E-6	IMPLEMENTATION
// new scope for this invocation of the block, based on parent scope	WITHOUT_CLASSIFICATION	0.9999021425767401	WITHOUT_CLASSIFICATION	9.785742325993152E-5	IMPLEMENTATION
// No argument blocks	WITHOUT_CLASSIFICATION	0.9999828347926784	WITHOUT_CLASSIFICATION	1.7165207321708404E-5	IMPLEMENTATION
// just push the same empty scope, since we won't use one	WITHOUT_CLASSIFICATION	0.9999988782850368	WITHOUT_CLASSIFICATION	1.1217149633323683E-6	IMPLEMENTATION
// Not sure if this is actually possible, but better safe than sorry	WITHOUT_CLASSIFICATION	0.9998853091745855	WITHOUT_CLASSIFICATION	1.1469082541445983E-4	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9998444143069143	WITHOUT_CLASSIFICATION	1.5558569308559732E-4	IMPLEMENTATION
// This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).	WITHOUT_CLASSIFICATION	0.9999220306251686	WITHOUT_CLASSIFICATION	7.796937483140972E-5	IMPLEMENTATION
// Highest reserved id	WITHOUT_CLASSIFICATION	0.9999030439820434	WITHOUT_CLASSIFICATION	9.695601795656656E-5	IMPLEMENTATION
// binary typed calls	WITHOUT_CLASSIFICATION	0.9996681927347236	WITHOUT_CLASSIFICATION	3.318072652764057E-4	IMPLEMENTATION
// id must always be even	WITHOUT_CLASSIFICATION	0.999839408008279	WITHOUT_CLASSIFICATION	1.6059199172115384E-4	IMPLEMENTATION
// with block pass	WITHOUT_CLASSIFICATION	0.9988148732585661	WITHOUT_CLASSIFICATION	0.0011851267414338946	IMPLEMENTATION
// no block	WITHOUT_CLASSIFICATION	0.9989712835690201	WITHOUT_CLASSIFICATION	0.0010287164309799558	IMPLEMENTATION
// with block literal (iter)	WITHOUT_CLASSIFICATION	0.9997888822374364	WITHOUT_CLASSIFICATION	2.1111776256353462E-4	IMPLEMENTATION
//            assert false : "can this happen?";	WITHOUT_CLASSIFICATION	0.9997503895064954	WITHOUT_CLASSIFICATION	2.496104935045471E-4	IMPLEMENTATION
// if we have multiple asgn with just *args, need a special type for that	WITHOUT_CLASSIFICATION	0.9999766236564143	WITHOUT_CLASSIFICATION	2.337634358565786E-5	IMPLEMENTATION
// && args.getMaxArgumentsCount() != 1) {	WITHOUT_CLASSIFICATION	0.9998534534411264	WITHOUT_CLASSIFICATION	1.4654655887359774E-4	IMPLEMENTATION
//            return warnMultiReturnNil(ruby);	WITHOUT_CLASSIFICATION	0.9998213698375947	WITHOUT_CLASSIFICATION	1.786301624052706E-4	IMPLEMENTATION
// ensure zero is devoted to no method name	WITHOUT_CLASSIFICATION	0.9990230501850472	WITHOUT_CLASSIFICATION	9.76949814952689E-4	IMPLEMENTATION
// predefine a few other methods we invoke directly elsewhere	WITHOUT_CLASSIFICATION	0.9997082315852821	WITHOUT_CLASSIFICATION	2.917684147178514E-4	IMPLEMENTATION
// fast and safe respond_to? call site logic	WITHOUT_CLASSIFICATION	0.999686685667048	WITHOUT_CLASSIFICATION	3.13314332952022E-4	IMPLEMENTATION
// Static scoping information for this scope	WITHOUT_CLASSIFICATION	0.9999636450538103	WITHOUT_CLASSIFICATION	3.635494618960691E-5	IMPLEMENTATION
// Captured dynamic scopes	WITHOUT_CLASSIFICATION	0.999883143992505	WITHOUT_CLASSIFICATION	1.1685600749502968E-4	IMPLEMENTATION
// Backref for $~, $1, etc	WITHOUT_CLASSIFICATION	0.9999591408250189	WITHOUT_CLASSIFICATION	4.085917498108804E-5	IMPLEMENTATION
// Lastline	WITHOUT_CLASSIFICATION	0.9993881635822232	WITHOUT_CLASSIFICATION	6.118364177769137E-4	IMPLEMENTATION
// No binding scope so we should create one	WITHOUT_CLASSIFICATION	0.9998725191043143	WITHOUT_CLASSIFICATION	1.2748089568562852E-4	IMPLEMENTATION
// bindings scopes must always be ManyVars scopes since evals can grow them	WITHOUT_CLASSIFICATION	0.9997781037221176	WITHOUT_CLASSIFICATION	2.218962778824046E-4	IMPLEMENTATION
// Helper function to give a good view of current dynamic scope with captured scopes	WITHOUT_CLASSIFICATION	0.9998023462719162	WITHOUT_CLASSIFICATION	1.9765372808369473E-4	IMPLEMENTATION
// try count specific args to determine required	WITHOUT_CLASSIFICATION	0.9995155145861087	WITHOUT_CLASSIFICATION	4.844854138913569E-4	IMPLEMENTATION
// Some helper functions:	WITHOUT_CLASSIFICATION	0.9999270554526724	WITHOUT_CLASSIFICATION	7.29445473276522E-5	IMPLEMENTATION
// silently ignore	WITHOUT_CLASSIFICATION	0.9987036615985981	WITHOUT_CLASSIFICATION	0.0012963384014018713	IMPLEMENTATION
// used by compiler	WITHOUT_CLASSIFICATION	0.9997039221403395	WITHOUT_CLASSIFICATION	2.9607785966051525E-4	IMPLEMENTATION
// initialize the static settings to determine which factory to use	WITHOUT_CLASSIFICATION	0.9999546245173838	WITHOUT_CLASSIFICATION	4.53754826161828E-5	IMPLEMENTATION
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9998272733107829	WITHOUT_CLASSIFICATION	1.7272668921707108E-4	IMPLEMENTATION
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9991565511629946	WITHOUT_CLASSIFICATION	8.434488370053535E-4	IMPLEMENTATION
//  Single node on list	WITHOUT_CLASSIFICATION	0.9997695602396236	WITHOUT_CLASSIFICATION	2.3043976037643115E-4	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.99994069520258	WITHOUT_CLASSIFICATION	5.930479741993892E-5	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9998153229885568	WITHOUT_CLASSIFICATION	1.8467701144313676E-4	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9990625932559419	WITHOUT_CLASSIFICATION	9.374067440579943E-4	IMPLEMENTATION
// Note: In Ruby 1.9 all of this logic can go away since they will require explicit // bindings for evals.	WITHOUT_CLASSIFICATION	0.9999346644142934	WITHOUT_CLASSIFICATION	6.533558570664815E-5	IMPLEMENTATION
// We only define one special dynamic scope per 'logical' binding.  So all bindings for // the same scope should share the same dynamic scope.  This allows multiple evals with // different different bindings in the same scope to see the same stuff.	WITHOUT_CLASSIFICATION	0.9999961850463037	WITHOUT_CLASSIFICATION	3.8149536962395634E-6	IMPLEMENTATION
// If the next scope out has the same binding scope as this scope it means // we are evaling within an eval and in that case we should be sharing the same // binding scope.	WITHOUT_CLASSIFICATION	0.9999872934746725	WITHOUT_CLASSIFICATION	1.2706525327330652E-5	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999976256184553	WITHOUT_CLASSIFICATION	2.3743815447914905E-6	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999976256184553	WITHOUT_CLASSIFICATION	2.3743815447914905E-6	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999946741162564	WITHOUT_CLASSIFICATION	5.32588374357722E-6	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999946741162564	WITHOUT_CLASSIFICATION	5.32588374357722E-6	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999946741162564	WITHOUT_CLASSIFICATION	5.32588374357722E-6	IMPLEMENTATION
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999251577532693	WITHOUT_CLASSIFICATION	7.48422467307507E-5	IMPLEMENTATION
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999251577532693	WITHOUT_CLASSIFICATION	7.48422467307507E-5	IMPLEMENTATION
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999345209072881	WITHOUT_CLASSIFICATION	6.547909271191749E-5	IMPLEMENTATION
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999345209072881	WITHOUT_CLASSIFICATION	6.547909271191749E-5	IMPLEMENTATION
/*     * This is the proper behavior for all non-expanded assigners which have a pre > 0.  The rest     * override this.     */	WITHOUT_CLASSIFICATION	0.9999924951800985	WITHOUT_CLASSIFICATION	7.504819901471742E-6	IMPLEMENTATION
/*     * This is the proper behavior for all non-expanded assigners.     */	WITHOUT_CLASSIFICATION	0.9999948524145449	WITHOUT_CLASSIFICATION	5.1475854550467816E-6	IMPLEMENTATION
// prefill ?	WITHOUT_CLASSIFICATION	0.9994930913018113	WITHOUT_CLASSIFICATION	5.069086981886817E-4	IMPLEMENTATION
// prefill ?	WITHOUT_CLASSIFICATION	0.9994930913018113	WITHOUT_CLASSIFICATION	5.069086981886817E-4	IMPLEMENTATION
// MUST be called from synchronized/locked block! // should only be called by variableTableStore/variableTableFastStore	WITHOUT_CLASSIFICATION	0.9999973495825119	WITHOUT_CLASSIFICATION	2.650417488071567E-6	IMPLEMENTATION
// retrieve method // module // name	WITHOUT_CLASSIFICATION	0.9989611251324324	WITHOUT_CLASSIFICATION	0.001038874867567626	IMPLEMENTATION
// call is ok, punch it!	WITHOUT_CLASSIFICATION	0.9999170682310575	WITHOUT_CLASSIFICATION	8.29317689424764E-5	IMPLEMENTATION
// if undefined, branch to method_missing	WITHOUT_CLASSIFICATION	0.999969130176134	WITHOUT_CLASSIFICATION	3.086982386610494E-5	IMPLEMENTATION
// if we're not attempting to invoke method_missing and method is not visible, branch to method_missing	WITHOUT_CLASSIFICATION	0.9997420149851408	WITHOUT_CLASSIFICATION	2.579850148591834E-4	IMPLEMENTATION
// method object already present, push various args // tc // self // klazz // name	WITHOUT_CLASSIFICATION	0.9992517318421048	WITHOUT_CLASSIFICATION	7.48268157895246E-4	IMPLEMENTATION
// if it's method_missing, just invoke it	WITHOUT_CLASSIFICATION	0.9999584816628225	WITHOUT_CLASSIFICATION	4.1518337177408266E-5	IMPLEMENTATION
// invoke callMethodMissing	WITHOUT_CLASSIFICATION	0.9998862505600494	WITHOUT_CLASSIFICATION	1.1374943995058231E-4	IMPLEMENTATION
// caller	WITHOUT_CLASSIFICATION	0.9999882861211171	WITHOUT_CLASSIFICATION	1.1713878882927782E-5	IMPLEMENTATION
// calltype // block	WITHOUT_CLASSIFICATION	0.9990998739165009	WITHOUT_CLASSIFICATION	9.00126083499165E-4	IMPLEMENTATION
// if no exception raised, jump to end to leave result on stack for return	WITHOUT_CLASSIFICATION	0.999945893012819	WITHOUT_CLASSIFICATION	5.410698718100925E-5	IMPLEMENTATION
// load arity for check	WITHOUT_CLASSIFICATION	0.9999137378846065	WITHOUT_CLASSIFICATION	8.62621153935382E-5	IMPLEMENTATION
// throw	WITHOUT_CLASSIFICATION	0.9999825252378044	WITHOUT_CLASSIFICATION	1.7474762195581077E-5	IMPLEMENTATION
// load arity for error	WITHOUT_CLASSIFICATION	0.9999207926557837	WITHOUT_CLASSIFICATION	7.920734421627497E-5	IMPLEMENTATION
// arity ok, continue	WITHOUT_CLASSIFICATION	0.9998539551427869	WITHOUT_CLASSIFICATION	1.460448572131541E-4	IMPLEMENTATION
//InvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9994325134615626	WITHOUT_CLASSIFICATION	5.674865384373897E-4	IMPLEMENTATION
// ENEBO: Perhaps slow but simple for now	WITHOUT_CLASSIFICATION	0.9998718283522808	WITHOUT_CLASSIFICATION	1.2817164771908968E-4	IMPLEMENTATION
// FastInvocationCallback	WITHOUT_CLASSIFICATION	0.9998830445803648	WITHOUT_CLASSIFICATION	1.1695541963519677E-4	IMPLEMENTATION
// InvocationCallback	WITHOUT_CLASSIFICATION	0.9998830445803648	WITHOUT_CLASSIFICATION	1.1695541963519677E-4	IMPLEMENTATION
//DumpingInvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.999162082315616	WITHOUT_CLASSIFICATION	8.37917684384032E-4	IMPLEMENTATION
// for fast lookup: encoding entry => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999783616294555	WITHOUT_CLASSIFICATION	2.1638370544495666E-5	IMPLEMENTATION
// for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999700756772159	WITHOUT_CLASSIFICATION	2.9924322784243057E-5	IMPLEMENTATION
// load the encoding	WITHOUT_CLASSIFICATION	0.999640318393837	WITHOUT_CLASSIFICATION	3.5968160616286755E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9998798113567705	WITHOUT_CLASSIFICATION	1.2018864322943587E-4	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9998798113567705	WITHOUT_CLASSIFICATION	1.2018864322943587E-4	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9998798113567705	WITHOUT_CLASSIFICATION	1.2018864322943587E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9998411705760873	WITHOUT_CLASSIFICATION	1.5882942391268263E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9998411705760873	WITHOUT_CLASSIFICATION	1.5882942391268263E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9998411705760873	WITHOUT_CLASSIFICATION	1.5882942391268263E-4	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9998411705760873	WITHOUT_CLASSIFICATION	1.5882942391268263E-4	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9998411705760873	WITHOUT_CLASSIFICATION	1.5882942391268263E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998479392453741	WITHOUT_CLASSIFICATION	1.520607546258322E-4	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998479392453741	WITHOUT_CLASSIFICATION	1.520607546258322E-4	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998479392453741	WITHOUT_CLASSIFICATION	1.520607546258322E-4	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998479392453741	WITHOUT_CLASSIFICATION	1.520607546258322E-4	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998479392453741	WITHOUT_CLASSIFICATION	1.520607546258322E-4	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998479392453741	WITHOUT_CLASSIFICATION	1.520607546258322E-4	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998479392453741	WITHOUT_CLASSIFICATION	1.520607546258322E-4	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998479392453741	WITHOUT_CLASSIFICATION	1.520607546258322E-4	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998479392453741	WITHOUT_CLASSIFICATION	1.520607546258322E-4	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998479392453741	WITHOUT_CLASSIFICATION	1.520607546258322E-4	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998479392453741	WITHOUT_CLASSIFICATION	1.520607546258322E-4	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998479392453741	WITHOUT_CLASSIFICATION	1.520607546258322E-4	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998479392453741	WITHOUT_CLASSIFICATION	1.520607546258322E-4	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998479392453741	WITHOUT_CLASSIFICATION	1.520607546258322E-4	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998479392453741	WITHOUT_CLASSIFICATION	1.520607546258322E-4	IMPLEMENTATION
// If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs	WITHOUT_CLASSIFICATION	0.9999984125894309	WITHOUT_CLASSIFICATION	1.587410569171041E-6	IMPLEMENTATION
// BreakJump, ThreadContext	WITHOUT_CLASSIFICATION	0.9998830445803648	WITHOUT_CLASSIFICATION	1.1695541963519677E-4	IMPLEMENTATION
// ThreadContext	WITHOUT_CLASSIFICATION	0.9993881635822232	WITHOUT_CLASSIFICATION	6.118364177769137E-4	IMPLEMENTATION
// BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9998272733107829	WITHOUT_CLASSIFICATION	1.7272668921707108E-4	IMPLEMENTATION
// Make Java class files in the jar reachable from Ruby	WITHOUT_CLASSIFICATION	0.9999987884779739	WITHOUT_CLASSIFICATION	1.2115220262454257E-6	IMPLEMENTATION
// RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9998272733107829	WITHOUT_CLASSIFICATION	1.7272668921707108E-4	IMPLEMENTATION
// add all startup load paths to the list first	WITHOUT_CLASSIFICATION	0.9998686053764921	WITHOUT_CLASSIFICATION	1.31394623507901E-4	IMPLEMENTATION
// if it's a compiled JRuby script, instantiate and run it	WITHOUT_CLASSIFICATION	0.9999180651076018	WITHOUT_CLASSIFICATION	8.193489239814921E-5	IMPLEMENTATION
// wrap in try/catch for security exceptions in an applet	WITHOUT_CLASSIFICATION	0.9999980000037008	WITHOUT_CLASSIFICATION	1.9999962991979395E-6	IMPLEMENTATION
// add $RUBYLIB paths	WITHOUT_CLASSIFICATION	0.9998566607968905	WITHOUT_CLASSIFICATION	1.4333920310936765E-4	IMPLEMENTATION
// Empty paths do not need to be added	WITHOUT_CLASSIFICATION	0.9283701135666805	WITHOUT_CLASSIFICATION	0.07162988643331945	IMPLEMENTATION
// "." dir is used for relative path loads from a given file, as in require '../foo/bar'	WITHOUT_CLASSIFICATION	0.9999987487479709	WITHOUT_CLASSIFICATION	1.2512520291812627E-6	IMPLEMENTATION
// Add 1.8 libs	WITHOUT_CLASSIFICATION	0.9991161374150894	WITHOUT_CLASSIFICATION	8.838625849105474E-4	IMPLEMENTATION
// Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.	WITHOUT_CLASSIFICATION	0.9999991821361316	WITHOUT_CLASSIFICATION	8.178638683463661E-7	IMPLEMENTATION
// Library has already been loaded in some form, bail out	WITHOUT_CLASSIFICATION	0.9999833004883378	WITHOUT_CLASSIFICATION	1.6699511662238488E-5	IMPLEMENTATION
// We don't want a package name beginning with dots, so we remove them	WITHOUT_CLASSIFICATION	0.9998624364806757	WITHOUT_CLASSIFICATION	1.37563519324349E-4	IMPLEMENTATION
// If there is a jar-file with the required name, we add this to the class path.	WITHOUT_CLASSIFICATION	0.9998332102734804	WITHOUT_CLASSIFICATION	1.6678972651953396E-4	IMPLEMENTATION
// quietly try to load the class	WITHOUT_CLASSIFICATION	0.9998596508905284	WITHOUT_CLASSIFICATION	1.4034910947159786E-4	IMPLEMENTATION
// If there was a good library before, we go back to that	WITHOUT_CLASSIFICATION	0.9999659164533335	WITHOUT_CLASSIFICATION	3.408354666648078E-5	IMPLEMENTATION
// no library or extension found, try to load directly as a class	WITHOUT_CLASSIFICATION	0.9998149323240061	WITHOUT_CLASSIFICATION	1.8506767599399995E-4	IMPLEMENTATION
// if an extension is specified, try more targetted searches	WITHOUT_CLASSIFICATION	0.9998534485367576	WITHOUT_CLASSIFICATION	1.4655146324235634E-4	IMPLEMENTATION
// signed short, big-endian	WITHOUT_CLASSIFICATION	0.9998875546940924	WITHOUT_CLASSIFICATION	1.1244530590762377E-4	IMPLEMENTATION
// source extensions	WITHOUT_CLASSIFICATION	0.9998572656908135	WITHOUT_CLASSIFICATION	1.4273430918656016E-4	IMPLEMENTATION
// We don't support .so, but some stdlib require .so directly // replace it with .jar to look for an extension type we do support	WITHOUT_CLASSIFICATION	0.9564916251727366	WITHOUT_CLASSIFICATION	0.04350837482726341	IMPLEMENTATION
// This code exploits the fact that all .jar files will be found for the JarredScript feature. // This is where the basic extension mechanism gets fixed	WITHOUT_CLASSIFICATION	0.9999554705231584	WITHOUT_CLASSIFICATION	4.452947684160131E-5	IMPLEMENTATION
// Make the class name look nice, by splitting on _ and capitalize each segment, then joining // the, together without anything separating them, and last put on "Service" at the end.	WITHOUT_CLASSIFICATION	0.9960500516270169	WITHOUT_CLASSIFICATION	0.003949948372983112	IMPLEMENTATION
// It's _really_ expensive to check that the class actually exists in the Jar, so // we don't do that now.	WITHOUT_CLASSIFICATION	0.9999766230176707	WITHOUT_CLASSIFICATION	2.337698232939443E-5	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9983541460679605	WITHOUT_CLASSIFICATION	0.001645853932039495	IMPLEMENTATION
// extension extensions	WITHOUT_CLASSIFICATION	0.9997267119640247	WITHOUT_CLASSIFICATION	2.7328803597530846E-4	IMPLEMENTATION
// unknown extension, fall back to search with extensions	WITHOUT_CLASSIFICATION	0.9997189554655082	WITHOUT_CLASSIFICATION	2.810445344917884E-4	IMPLEMENTATION
// try all extensions	WITHOUT_CLASSIFICATION	0.9998616024441831	WITHOUT_CLASSIFICATION	1.3839755581678627E-4	IMPLEMENTATION
// if a source extension is specified, try all source extensions	WITHOUT_CLASSIFICATION	0.9999929124459395	WITHOUT_CLASSIFICATION	7.087554060564797E-6	IMPLEMENTATION
// unknown extension, fall back to exact search	WITHOUT_CLASSIFICATION	0.9997988751658881	WITHOUT_CLASSIFICATION	2.0112483411194673E-4	IMPLEMENTATION
// try only literal search	WITHOUT_CLASSIFICATION	0.9998841439300163	WITHOUT_CLASSIFICATION	1.1585606998362394E-4	IMPLEMENTATION
// attempt to load the found library	WITHOUT_CLASSIFICATION	0.9994380281584029	WITHOUT_CLASSIFICATION	5.61971841597102E-4	IMPLEMENTATION
// otherwise load the library we've found	WITHOUT_CLASSIFICATION	0.9957634091212272	WITHOUT_CLASSIFICATION	0.00423659087877281	IMPLEMENTATION
// allow MainExitException to propagate out for exec and friends	WITHOUT_CLASSIFICATION	0.9999237432181008	WITHOUT_CLASSIFICATION	7.625678189915433E-5	IMPLEMENTATION
// Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".	WITHOUT_CLASSIFICATION	0.9998542982309001	WITHOUT_CLASSIFICATION	1.4570176909995091E-4	IMPLEMENTATION
// check current directory; if file exists, retrieve URL and return resource	WITHOUT_CLASSIFICATION	0.9993482593459074	WITHOUT_CLASSIFICATION	6.517406540925531E-4	IMPLEMENTATION
// if a jar or file URL, return load service resource directly without further searching	WITHOUT_CLASSIFICATION	0.9999527350377423	WITHOUT_CLASSIFICATION	4.7264962257593926E-5	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9998130819145232	WITHOUT_CLASSIFICATION	1.869180854768375E-4	IMPLEMENTATION
// if it's a ./ baseName, use CWD logic	WITHOUT_CLASSIFICATION	0.9998958110600437	WITHOUT_CLASSIFICATION	1.0418893995639566E-4	IMPLEMENTATION
// if given path is absolute, just try it as-is (with extensions) and no load path	WITHOUT_CLASSIFICATION	0.9999931227885098	WITHOUT_CLASSIFICATION	6.877211490235977E-6	IMPLEMENTATION
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9989418320288319	WITHOUT_CLASSIFICATION	0.0010581679711681416	IMPLEMENTATION
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9989418320288319	WITHOUT_CLASSIFICATION	0.0010581679711681416	IMPLEMENTATION
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9995224089486535	WITHOUT_CLASSIFICATION	4.7759105134652016E-4	IMPLEMENTATION
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9995224089486535	WITHOUT_CLASSIFICATION	4.7759105134652016E-4	IMPLEMENTATION
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.999824012184321	WITHOUT_CLASSIFICATION	1.7598781567885018E-4	IMPLEMENTATION
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.999824012184321	WITHOUT_CLASSIFICATION	1.7598781567885018E-4	IMPLEMENTATION
//                    actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));	WITHOUT_CLASSIFICATION	0.9998612976457737	WITHOUT_CLASSIFICATION	1.3870235422635342E-4	IMPLEMENTATION
// handle security-sensitive case	WITHOUT_CLASSIFICATION	0.9988434811594604	WITHOUT_CLASSIFICATION	0.0011565188405395163	IMPLEMENTATION
// if entry is an empty string, skip it	WITHOUT_CLASSIFICATION	0.9999869744434204	WITHOUT_CLASSIFICATION	1.3025556579537373E-5	IMPLEMENTATION
// if entry starts with a slash, skip it since classloader resources never start with a /	WITHOUT_CLASSIFICATION	0.9990571199833271	WITHOUT_CLASSIFICATION	9.428800166728259E-4	IMPLEMENTATION
// otherwise, try to load from classpath (Note: Jar resources always uses '/')	WITHOUT_CLASSIFICATION	0.9999522036482905	WITHOUT_CLASSIFICATION	4.779635170957156E-5	IMPLEMENTATION
// Make sure this is not a directory or unavailable in some way	WITHOUT_CLASSIFICATION	0.9998452640839472	WITHOUT_CLASSIFICATION	1.5473591605279528E-4	IMPLEMENTATION
// signed short, native	WITHOUT_CLASSIFICATION	0.9998890201278242	WITHOUT_CLASSIFICATION	1.1097987217575391E-4	IMPLEMENTATION
// If we fail to find as a normal Ruby script, we try to find as an extension, // checking for a builtin first.	WITHOUT_CLASSIFICATION	0.9999906327271206	WITHOUT_CLASSIFICATION	9.367272879270687E-6	IMPLEMENTATION
// write `I' instance var signet if class is NOT a direct subclass of Object	WITHOUT_CLASSIFICATION	0.9999991717268522	WITHOUT_CLASSIFICATION	8.282731478439491E-7	IMPLEMENTATION
// if name starts with a / we're done (classloader resources won't load with an initial /)	WITHOUT_CLASSIFICATION	0.9999998713879364	WITHOUT_CLASSIFICATION	1.2861206351848634E-7	IMPLEMENTATION
// Look in classpath next (we do not use File as a test since UNC names will match) // Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")	WITHOUT_CLASSIFICATION	0.9999867495748076	WITHOUT_CLASSIFICATION	1.3250425192353785E-5	IMPLEMENTATION
/* Directories and unavailable resources are not able to open a stream. */	WITHOUT_CLASSIFICATION	0.999968859393196	WITHOUT_CLASSIFICATION	3.114060680402512E-5	IMPLEMENTATION
// Try to load from classpath without prefix. "A/b.rb" will not load as  // "./A/b.rb" in a jar file.	WITHOUT_CLASSIFICATION	0.9999744686098586	WITHOUT_CLASSIFICATION	2.5531390141411548E-5	IMPLEMENTATION
// object has instance vars and isn't a class, get a snapshot to be marshalled // and output the ivar header here	WITHOUT_CLASSIFICATION	0.999997319853344	WITHOUT_CLASSIFICATION	2.6801466561587698E-6	IMPLEMENTATION
// flush afer whole dump is complete	WITHOUT_CLASSIFICATION	0.9998868803631215	WITHOUT_CLASSIFICATION	1.131196368786339E-4	IMPLEMENTATION
//            write('S');	WITHOUT_CLASSIFICATION	0.9998947711942597	WITHOUT_CLASSIFICATION	1.0522880574031224E-4	IMPLEMENTATION
// switch on the object's *native type*. This allows use-defined // classes that have extended core native types to piggyback on their // marshalling logic.	WITHOUT_CLASSIFICATION	0.9991609354019093	WITHOUT_CLASSIFICATION	8.390645980907034E-4	IMPLEMENTATION
// object is a custom class that extended one of the native types other than Object	WITHOUT_CLASSIFICATION	0.9998764273935232	WITHOUT_CLASSIFICATION	1.2357260647681028E-4	IMPLEMENTATION
// We do not want to capture cached methods	WITHOUT_CLASSIFICATION	0.9967707371724819	WITHOUT_CLASSIFICATION	0.003229262827518245	IMPLEMENTATION
// w_symbol	WITHOUT_CLASSIFICATION	0.9993881635822232	WITHOUT_CLASSIFICATION	6.118364177769137E-4	IMPLEMENTATION
// w_unique	WITHOUT_CLASSIFICATION	0.9993881635822232	WITHOUT_CLASSIFICATION	6.118364177769137E-4	IMPLEMENTATION
// call the proc, but not for symbols	WITHOUT_CLASSIFICATION	0.9992817361653547	WITHOUT_CLASSIFICATION	7.182638346452856E-4	IMPLEMENTATION
// Major // Minor	WITHOUT_CLASSIFICATION	0.9993881635822232	WITHOUT_CLASSIFICATION	6.118364177769137E-4	IMPLEMENTATION
// any ivars, since we don't have __attached__ ivar now	WITHOUT_CLASSIFICATION	0.9998933861145689	WITHOUT_CLASSIFICATION	1.0661388543106961E-4	IMPLEMENTATION
// "hashdef" object, a hash with a default	WITHOUT_CLASSIFICATION	0.9999667029298372	WITHOUT_CLASSIFICATION	3.3297070162717924E-5	IMPLEMENTATION
// All "C" marshalled objects descend from core classes, which are all RubyObject	WITHOUT_CLASSIFICATION	0.9999532219951193	WITHOUT_CLASSIFICATION	4.6778004880741236E-5	IMPLEMENTATION
// sic	WITHOUT_CLASSIFICATION	0.9999817067840583	WITHOUT_CLASSIFICATION	1.8293215941744205E-5	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.999947906982132	WITHOUT_CLASSIFICATION	5.209301786798784E-5	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.999947906982132	WITHOUT_CLASSIFICATION	5.209301786798784E-5	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.999947906982132	WITHOUT_CLASSIFICATION	5.209301786798784E-5	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999596570688469	WITHOUT_CLASSIFICATION	4.0342931153046834E-5	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999596570688469	WITHOUT_CLASSIFICATION	4.0342931153046834E-5	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9998444143069143	WITHOUT_CLASSIFICATION	1.5558569308559732E-4	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9998444143069143	WITHOUT_CLASSIFICATION	1.5558569308559732E-4	IMPLEMENTATION
/*     * If we are setting post arguments we can assume there are no pre or others     */	WITHOUT_CLASSIFICATION	0.9999942668800953	WITHOUT_CLASSIFICATION	5.733119904764529E-6	IMPLEMENTATION
// XXX: 0xffff0000 on BE?	WITHOUT_CLASSIFICATION	0.9983755374954923	WITHOUT_CLASSIFICATION	0.001624462504507628	IMPLEMENTATION
// unsigned short, native	WITHOUT_CLASSIFICATION	0.9998888619890308	WITHOUT_CLASSIFICATION	1.1113801096921481E-4	IMPLEMENTATION
// int, native // long, native	WITHOUT_CLASSIFICATION	0.9998890094595769	WITHOUT_CLASSIFICATION	1.1099054042304607E-4	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.999947906982132	WITHOUT_CLASSIFICATION	5.209301786798784E-5	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.999947906982132	WITHOUT_CLASSIFICATION	5.209301786798784E-5	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.999947906982132	WITHOUT_CLASSIFICATION	5.209301786798784E-5	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999596570688469	WITHOUT_CLASSIFICATION	4.0342931153046834E-5	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999596570688469	WITHOUT_CLASSIFICATION	4.0342931153046834E-5	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999596570688469	WITHOUT_CLASSIFICATION	4.0342931153046834E-5	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9998444143069143	WITHOUT_CLASSIFICATION	1.5558569308559732E-4	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9998444143069143	WITHOUT_CLASSIFICATION	1.5558569308559732E-4	IMPLEMENTATION
// Look for slash, starting from 'start' position, until 'end'.	WITHOUT_CLASSIFICATION	0.9999936952086106	WITHOUT_CLASSIFICATION	6.304791389392448E-6	IMPLEMENTATION
// Our values holder (name of variables are kept in staticScope)	WITHOUT_CLASSIFICATION	0.9999999167570338	WITHOUT_CLASSIFICATION	8.324296622324752E-8	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9995691752978717	WITHOUT_CLASSIFICATION	4.308247021283639E-4	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9995691752978717	WITHOUT_CLASSIFICATION	4.308247021283639E-4	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9995691752978717	WITHOUT_CLASSIFICATION	4.308247021283639E-4	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9995691752978717	WITHOUT_CLASSIFICATION	4.308247021283639E-4	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9995691752978717	WITHOUT_CLASSIFICATION	4.308247021283639E-4	IMPLEMENTATION
// SunSignalFacade	WITHOUT_CLASSIFICATION	0.9993881635822232	WITHOUT_CLASSIFICATION	6.118364177769137E-4	IMPLEMENTATION
// All braces pushed..	WITHOUT_CLASSIFICATION	0.999894363651291	WITHOUT_CLASSIFICATION	1.0563634870893685E-4	IMPLEMENTATION
/* failed : try next recursion */	WITHOUT_CLASSIFICATION	0.999271681811908	WITHOUT_CLASSIFICATION	7.283181880920319E-4	IMPLEMENTATION
// leftToken made us start as nest 1	WITHOUT_CLASSIFICATION	0.9995763591300066	WITHOUT_CLASSIFICATION	4.236408699933181E-4	IMPLEMENTATION
// are we at '**/'	WITHOUT_CLASSIFICATION	0.9998077867637872	WITHOUT_CLASSIFICATION	1.9221323621284518E-4	IMPLEMENTATION
// No or mismatched braces..Move along..nothing to see here	WITHOUT_CLASSIFICATION	0.9999666282394251	WITHOUT_CLASSIFICATION	3.3371760574911085E-5	IMPLEMENTATION
// not enough bytes	WITHOUT_CLASSIFICATION	0.9862780900811297	WITHOUT_CLASSIFICATION	0.013721909918870267	IMPLEMENTATION
// Get index of last read byte	WITHOUT_CLASSIFICATION	0.9999585862429858	WITHOUT_CLASSIFICATION	4.141375701413277E-5	IMPLEMENTATION
// skip inner braces	WITHOUT_CLASSIFICATION	0.9985525796259481	WITHOUT_CLASSIFICATION	0.0014474203740518657	IMPLEMENTATION
/*     * Process {}'s (example: Dir.glob("{jruby,jython}/README*")      */	WITHOUT_CLASSIFICATION	0.9999916517234069	WITHOUT_CLASSIFICATION	8.348276593049109E-6	IMPLEMENTATION
/* complete, according to Posix.2 */	WITHOUT_CLASSIFICATION	0.9999786332570479	WITHOUT_CLASSIFICATION	2.1366742952021927E-5	IMPLEMENTATION
/* Only accept an open brace if there is a close */	WITHOUT_CLASSIFICATION	0.9999999751907862	WITHOUT_CLASSIFICATION	2.4809213820957897E-8	IMPLEMENTATION
/* brace to match it.  Bracket expressions must be */	WITHOUT_CLASSIFICATION	0.999977729041807	WITHOUT_CLASSIFICATION	2.2270958192911675E-5	IMPLEMENTATION
// index of left-most brace // index of right-most brace	WITHOUT_CLASSIFICATION	0.9996251741284553	WITHOUT_CLASSIFICATION	3.748258715447638E-4	IMPLEMENTATION
// Length check is a hack.  We should not be reeiving "" as a filename ever. 	WITHOUT_CLASSIFICATION	0.9999689594996217	WITHOUT_CLASSIFICATION	3.1040500378274616E-5	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9994918256416571	WITHOUT_CLASSIFICATION	5.081743583429421E-4	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9994918256416571	WITHOUT_CLASSIFICATION	5.081743583429421E-4	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9994918256416571	WITHOUT_CLASSIFICATION	5.081743583429421E-4	IMPLEMENTATION
// Pickaxe says @ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.999719675696473	WITHOUT_CLASSIFICATION	2.803243035269561E-4	IMPLEMENTATION
// Pickaxe says @@ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.999719675696473	WITHOUT_CLASSIFICATION	2.803243035269561E-4	IMPLEMENTATION
// SimpleSampler	WITHOUT_CLASSIFICATION	0.9993881635822232	WITHOUT_CLASSIFICATION	6.118364177769137E-4	IMPLEMENTATION
/*     * convert into longs, returning unsigned 64-bit values as signed longs     * ( num2long raises a RangeError on values > Long.MAX_VALUE )     */	WITHOUT_CLASSIFICATION	0.9999999237850973	WITHOUT_CLASSIFICATION	7.621490268751454E-8	IMPLEMENTATION
// b64_xtable for decoding Base 64	WITHOUT_CLASSIFICATION	0.9999407593955312	WITHOUT_CLASSIFICATION	5.924060446884075E-5	IMPLEMENTATION
// single precision, little-endian	WITHOUT_CLASSIFICATION	0.9996281828968316	WITHOUT_CLASSIFICATION	3.7181710316836944E-4	IMPLEMENTATION
// single precision, big-endian	WITHOUT_CLASSIFICATION	0.9996281828968316	WITHOUT_CLASSIFICATION	3.7181710316836944E-4	IMPLEMENTATION
// single precision, native	WITHOUT_CLASSIFICATION	0.9997515025890112	WITHOUT_CLASSIFICATION	2.4849741098875505E-4	IMPLEMENTATION
// single precision, native // single precision, native	WITHOUT_CLASSIFICATION	0.9996330273305013	WITHOUT_CLASSIFICATION	3.6697266949865017E-4	IMPLEMENTATION
// double precision, little-endian	WITHOUT_CLASSIFICATION	0.9999852709247792	WITHOUT_CLASSIFICATION	1.472907522092202E-5	IMPLEMENTATION
// double precision, big-endian	WITHOUT_CLASSIFICATION	0.9999852709247792	WITHOUT_CLASSIFICATION	1.472907522092202E-5	IMPLEMENTATION
// double precision, native	WITHOUT_CLASSIFICATION	0.9999901572481981	WITHOUT_CLASSIFICATION	9.84275180183001E-6	IMPLEMENTATION
// signed short, little-endian	WITHOUT_CLASSIFICATION	0.9998875546940924	WITHOUT_CLASSIFICATION	1.1244530590762377E-4	IMPLEMENTATION
// signed char	WITHOUT_CLASSIFICATION	0.99964492345541	WITHOUT_CLASSIFICATION	3.550765445899406E-4	IMPLEMENTATION
// unsigned char	WITHOUT_CLASSIFICATION	0.9996444176191008	WITHOUT_CLASSIFICATION	3.55582380899117E-4	IMPLEMENTATION
// long, little-endian	WITHOUT_CLASSIFICATION	0.9998865408138503	WITHOUT_CLASSIFICATION	1.1345918614965462E-4	IMPLEMENTATION
// long, big-endian	WITHOUT_CLASSIFICATION	0.9994064448716015	WITHOUT_CLASSIFICATION	5.935551283985999E-4	IMPLEMENTATION
// unsigned int, native	WITHOUT_CLASSIFICATION	0.9998863949093317	WITHOUT_CLASSIFICATION	1.1360509066824515E-4	IMPLEMENTATION
// int, native	WITHOUT_CLASSIFICATION	0.9994014694320494	WITHOUT_CLASSIFICATION	5.985305679504258E-4	IMPLEMENTATION
// 64-bit number, native (as fixnum)	WITHOUT_CLASSIFICATION	0.9998624766868681	WITHOUT_CLASSIFICATION	1.3752331313190557E-4	IMPLEMENTATION
// How many occurrences of 'type' we want	WITHOUT_CLASSIFICATION	0.9991767196019352	WITHOUT_CLASSIFICATION	8.23280398064728E-4	IMPLEMENTATION
// See if we have a converter for the job...	WITHOUT_CLASSIFICATION	0.999984698901358	WITHOUT_CLASSIFICATION	1.5301098642040995E-5	IMPLEMENTATION
// Otherwise the unpack should be here...	WITHOUT_CLASSIFICATION	0.9998759371421759	WITHOUT_CLASSIFICATION	1.2406285782406832E-4	IMPLEMENTATION
// Possible Checksum Byte	WITHOUT_CLASSIFICATION	0.9998672334468556	WITHOUT_CLASSIFICATION	1.3276655314448997E-4	IMPLEMENTATION
// obtain a	WITHOUT_CLASSIFICATION	0.9995828659418523	WITHOUT_CLASSIFICATION	4.1713405814771895E-4	IMPLEMENTATION
// obtain b	WITHOUT_CLASSIFICATION	0.9995126775948655	WITHOUT_CLASSIFICATION	4.873224051345464E-4	IMPLEMENTATION
// obtain c	WITHOUT_CLASSIFICATION	0.9995308504934413	WITHOUT_CLASSIFICATION	4.691495065586337E-4	IMPLEMENTATION
// obtain d	WITHOUT_CLASSIFICATION	0.9993867314427064	WITHOUT_CLASSIFICATION	6.132685572936728E-4	IMPLEMENTATION
/*encode.limit() - */	WITHOUT_CLASSIFICATION	0.9999967136162771	WITHOUT_CLASSIFICATION	3.286383722886725E-6	IMPLEMENTATION
/* 1 */	WITHOUT_CLASSIFICATION	0.9999968449054976	WITHOUT_CLASSIFICATION	3.155094502517488E-6	IMPLEMENTATION
/* 2 */	WITHOUT_CLASSIFICATION	0.9999987085040649	WITHOUT_CLASSIFICATION	1.2914959350829108E-6	IMPLEMENTATION
/* 3 */	WITHOUT_CLASSIFICATION	0.9999981842268133	WITHOUT_CLASSIFICATION	1.8157731867025124E-6	IMPLEMENTATION
/* 4 */	WITHOUT_CLASSIFICATION	0.9999978020313329	WITHOUT_CLASSIFICATION	2.1979686671077882E-6	IMPLEMENTATION
/* 5 */	WITHOUT_CLASSIFICATION	0.999998340469931	WITHOUT_CLASSIFICATION	1.6595300691308082E-6	IMPLEMENTATION
/* 6 */	WITHOUT_CLASSIFICATION	0.9999981045727362	WITHOUT_CLASSIFICATION	1.8954272637328686E-6	IMPLEMENTATION
/* 7 */	WITHOUT_CLASSIFICATION	0.9999972406385496	WITHOUT_CLASSIFICATION	2.7593614504323226E-6	IMPLEMENTATION
// Skip all whitespace in pack format string	WITHOUT_CLASSIFICATION	0.9999981858577066	WITHOUT_CLASSIFICATION	1.8141422933955946E-6	IMPLEMENTATION
// Skip embedded comments in pack format string	WITHOUT_CLASSIFICATION	0.9999983195868296	WITHOUT_CLASSIFICATION	1.6804131704067916E-6	IMPLEMENTATION
// In case when the number of occurences is // explicitly specified, we have to read up // the remaining garbage after the '\0' to // satisfy the requested pattern.	WITHOUT_CLASSIFICATION	0.9999187194780808	WITHOUT_CLASSIFICATION	8.128052191919999E-5	IMPLEMENTATION
//normal exit, this should be faster than a test at each iterations for string with more than //about 40 char	WITHOUT_CLASSIFICATION	0.9999911036852709	WITHOUT_CLASSIFICATION	8.896314729122713E-6	IMPLEMENTATION
// We encountered '\0' when // were reading the buffer above, // increment the number of read bytes.	WITHOUT_CLASSIFICATION	0.9999903381565409	WITHOUT_CLASSIFICATION	9.661843459063196E-6	IMPLEMENTATION
// MRI behavior: Contrary to what seems to be logical, // when '*' is given, MRI calculates the distance // to the end, in order to go backwards.	WITHOUT_CLASSIFICATION	0.9999949104936295	WITHOUT_CLASSIFICATION	5.089506370460564E-6	IMPLEMENTATION
// Determine how many of type are needed (default: 1)	WITHOUT_CLASSIFICATION	0.7456581723872646	IMPLEMENTATION	0.2543418276127353	WITHOUT_CLASSIFICATION
// 'Z' adds extra null pad (versus 'a')	WITHOUT_CLASSIFICATION	0.9998261156003241	WITHOUT_CLASSIFICATION	1.738843996759458E-4	IMPLEMENTATION
//if the low bit is set //set the high bit of the result	WITHOUT_CLASSIFICATION	0.9997796381173812	WITHOUT_CLASSIFICATION	2.2036188261874225E-4	IMPLEMENTATION
//if the index is not a multiple of 8, we are not on a byte boundary //shift the byte	WITHOUT_CLASSIFICATION	0.9897692656244175	WITHOUT_CLASSIFICATION	0.010230734375582551	IMPLEMENTATION
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9890068768385692	WITHOUT_CLASSIFICATION	0.01099312316143067	IMPLEMENTATION
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9890068768385692	WITHOUT_CLASSIFICATION	0.01099312316143067	IMPLEMENTATION
//do some padding, I don't understand the padding strategy	WITHOUT_CLASSIFICATION	0.9898201754750114	WITHOUT_CLASSIFICATION	0.010179824524988576	IMPLEMENTATION
// we filled up current byte; append it and create next one	WITHOUT_CLASSIFICATION	0.9932257289055478	WITHOUT_CLASSIFICATION	0.006774271094452124	IMPLEMENTATION
//if the index is not a multiple of 8, we are not on a byte boundary	WITHOUT_CLASSIFICATION	0.9897062965962691	WITHOUT_CLASSIFICATION	0.010293703403730915	IMPLEMENTATION
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9999992049772358	WITHOUT_CLASSIFICATION	7.950227641648501E-7	IMPLEMENTATION
// we don't deal with negatives.	WITHOUT_CLASSIFICATION	0.999626276198286	WITHOUT_CLASSIFICATION	3.7372380171390697E-4	IMPLEMENTATION
// populate commandline with NG-provided stuff	WITHOUT_CLASSIFICATION	0.9997072233821207	WITHOUT_CLASSIFICATION	2.927766178792758E-4	IMPLEMENTATION
// are we recursing?	WITHOUT_CLASSIFICATION	0.9994804931387397	WITHOUT_CLASSIFICATION	5.195068612602701E-4	IMPLEMENTATION
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999995759467791	WITHOUT_CLASSIFICATION	4.2405322080680134E-7	IMPLEMENTATION
// default PidGetter	WITHOUT_CLASSIFICATION	0.9998528928698786	WITHOUT_CLASSIFICATION	1.471071301215314E-4	IMPLEMENTATION
// ignore and try windows version	WITHOUT_CLASSIFICATION	0.9998428231128408	WITHOUT_CLASSIFICATION	1.5717688715918834E-4	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9998100300162709	WITHOUT_CLASSIFICATION	1.8996998372908816E-4	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9998100300162709	WITHOUT_CLASSIFICATION	1.8996998372908816E-4	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9998100300162709	WITHOUT_CLASSIFICATION	1.8996998372908816E-4	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9998100300162709	WITHOUT_CLASSIFICATION	1.8996998372908816E-4	IMPLEMENTATION
// try both	WITHOUT_CLASSIFICATION	0.9988106774929595	WITHOUT_CLASSIFICATION	0.0011893225070405491	IMPLEMENTATION
// just unix	WITHOUT_CLASSIFICATION	0.9998758237784732	WITHOUT_CLASSIFICATION	1.2417622152675949E-4	IMPLEMENTATION
// just windows	WITHOUT_CLASSIFICATION	0.9999061583615851	WITHOUT_CLASSIFICATION	9.384163841489243E-5	IMPLEMENTATION
// neither	WITHOUT_CLASSIFICATION	0.9999817371408486	WITHOUT_CLASSIFICATION	1.8262859151374978E-5	IMPLEMENTATION
// CON: popen is a case where I think we should just always shell out.	WITHOUT_CLASSIFICATION	0.9972021973542543	WITHOUT_CLASSIFICATION	0.0027978026457457896	IMPLEMENTATION
// single string command, pass to sh to expand wildcards	WITHOUT_CLASSIFICATION	0.9999736847108832	WITHOUT_CLASSIFICATION	2.631528911675572E-5	IMPLEMENTATION
// direct invocation of the command	WITHOUT_CLASSIFICATION	0.9999114789997791	WITHOUT_CLASSIFICATION	8.852100022089789E-5	IMPLEMENTATION
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999042224772609	WITHOUT_CLASSIFICATION	9.577752273912425E-5	IMPLEMENTATION
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999042224772609	WITHOUT_CLASSIFICATION	9.577752273912425E-5	IMPLEMENTATION
// close process output // See JRUBY-3405; hooking up to parent process stdin caused // problems for IRB etc using stdin.	WITHOUT_CLASSIFICATION	0.9999992322615364	WITHOUT_CLASSIFICATION	7.677384635966395E-7	IMPLEMENTATION
// ignore, we're on the way out	WITHOUT_CLASSIFICATION	0.9997602691094583	WITHOUT_CLASSIFICATION	2.397308905417766E-4	IMPLEMENTATION
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9992280711574792	WITHOUT_CLASSIFICATION	7.719288425206944E-4	IMPLEMENTATION
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999923383460531	WITHOUT_CLASSIFICATION	7.661653946956404E-6	IMPLEMENTATION
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999923383460531	WITHOUT_CLASSIFICATION	7.661653946956404E-6	IMPLEMENTATION
// popen caller wants to be able to write, provide subprocess out directly	WITHOUT_CLASSIFICATION	0.9999744538500778	WITHOUT_CLASSIFICATION	2.5546149922255155E-5	IMPLEMENTATION
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999680235692867	WITHOUT_CLASSIFICATION	3.197643071322512E-5	IMPLEMENTATION
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999680235692867	WITHOUT_CLASSIFICATION	3.197643071322512E-5	IMPLEMENTATION
// execute command with sh -c // this does shell expansion of wildcards	WITHOUT_CLASSIFICATION	0.9999659410955055	WITHOUT_CLASSIFICATION	3.405890449441213E-5	IMPLEMENTATION
// We need to close the out, since some // processes would just wait for the stream // to be closed before they process its content, // and produce the output. E.g.: "cat".	WITHOUT_CLASSIFICATION	0.999998191694639	WITHOUT_CLASSIFICATION	1.8083053610098923E-6	IMPLEMENTATION
// we only close out if it's the slave stream, to avoid // closing a directly-mapped stream from parent process	WITHOUT_CLASSIFICATION	0.9999973768052879	WITHOUT_CLASSIFICATION	2.623194712118687E-6	IMPLEMENTATION
// The assumption here is that the 'in' stream provides // proper available() support. If available() always // returns 0, we'll hang!	WITHOUT_CLASSIFICATION	0.9996444842528598	WITHOUT_CLASSIFICATION	3.555157471401052E-4	IMPLEMENTATION
// Force t3 to quit, just in case if it's stuck. // Note: On some platforms, even interrupt might not // have an effect if the thread is IO blocked.	WITHOUT_CLASSIFICATION	0.9999649320519498	WITHOUT_CLASSIFICATION	3.50679480502923E-5	IMPLEMENTATION
// Check for special shell characters [<>|] at the beginning // and end of each command word and don't run in process if we find them.	WITHOUT_CLASSIFICATION	0.9999997006371785	WITHOUT_CLASSIFICATION	2.9936282154568273E-7	IMPLEMENTATION
// Note: this method produces meaningful results // only for RubyIO objects. For everything else returns 0.	WITHOUT_CLASSIFICATION	0.9983843168329768	WITHOUT_CLASSIFICATION	0.0016156831670232285	IMPLEMENTATION
//sequential	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
// reverse the entire area of the array selected if it's reversed.	WITHOUT_CLASSIFICATION	0.999951133077007	WITHOUT_CLASSIFICATION	4.88669229929974E-5	IMPLEMENTATION
// do median of 7 if the array is over 200 elements.	WITHOUT_CLASSIFICATION	0.999991396284237	WITHOUT_CLASSIFICATION	8.603715762849058E-6	IMPLEMENTATION
// if it's less than 200 do median of 3	WITHOUT_CLASSIFICATION	0.9999557661174011	WITHOUT_CLASSIFICATION	4.423388259892855E-5	IMPLEMENTATION
// SignalFacade	WITHOUT_CLASSIFICATION	0.9993881635822232	WITHOUT_CLASSIFICATION	6.118364177769137E-4	IMPLEMENTATION
// this is the order in which MRI does these two tests	WITHOUT_CLASSIFICATION	0.9999868008313095	WITHOUT_CLASSIFICATION	1.3199168690593927E-5	IMPLEMENTATION
// this is the order in which MRI does these tests	WITHOUT_CLASSIFICATION	0.9999940580672432	WITHOUT_CLASSIFICATION	5.941932756874156E-6	IMPLEMENTATION
// basically just forcing a TypeError here to match MRI	WITHOUT_CLASSIFICATION	0.9999721644317947	WITHOUT_CLASSIFICATION	2.783556820533373E-5	IMPLEMENTATION
// not saving DFS instance, as it will only be used once (at most) per call	WITHOUT_CLASSIFICATION	0.9930056846224175	WITHOUT_CLASSIFICATION	0.006994315377582613	IMPLEMENTATION
// Args	WITHOUT_CLASSIFICATION	0.9999817067840583	WITHOUT_CLASSIFICATION	1.8293215941744205E-5	IMPLEMENTATION
// static methods only	WITHOUT_CLASSIFICATION	0.999937708520734	WITHOUT_CLASSIFICATION	6.229147926592227E-5	IMPLEMENTATION
//System.err.println(" calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9992750321726891	WITHOUT_CLASSIFICATION	7.249678273107667E-4	IMPLEMENTATION
// MRI 1.8.6 behavior: null byte after '%' // leads to "%" string. Null byte in // other places, like "%5\0", leads to error.	WITHOUT_CLASSIFICATION	0.9995337116234175	WITHOUT_CLASSIFICATION	4.6628837658242207E-4	IMPLEMENTATION
// last index (+1) accessed by next() // last index (+1) accessed by get()	WITHOUT_CLASSIFICATION	0.9995283046838181	WITHOUT_CLASSIFICATION	4.716953161817743E-4	IMPLEMENTATION
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly.	WITHOUT_CLASSIFICATION	0.9999523798130262	WITHOUT_CLASSIFICATION	4.762018697380722E-5	IMPLEMENTATION
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly. Version for 1.9.	WITHOUT_CLASSIFICATION	0.9999811697528957	WITHOUT_CLASSIFICATION	1.8830247104248926E-5	IMPLEMENTATION
// MRI doesn't flag it as an error if width is given multiple // times as a number (but it does for *)	WITHOUT_CLASSIFICATION	0.9999995447711462	WITHOUT_CLASSIFICATION	4.5522885386514394E-7	IMPLEMENTATION
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999603105755699	WITHOUT_CLASSIFICATION	3.9689424430175005E-5	IMPLEMENTATION
// MRI 1.8.5-p12 doesn't support 1-char strings, but // YARV 0.4.1 does. I don't think it hurts to include // this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])	WITHOUT_CLASSIFICATION	0.9982344626350564	WITHOUT_CLASSIFICATION	0.0017655373649434441	IMPLEMENTATION
// 'd' and 'i' are the same	WITHOUT_CLASSIFICATION	0.9999730822510391	WITHOUT_CLASSIFICATION	2.6917748961002585E-5	IMPLEMENTATION
// 'u' with space or plus flags is same as 'd'	WITHOUT_CLASSIFICATION	0.999988826506608	WITHOUT_CLASSIFICATION	1.1173493391925802E-5	IMPLEMENTATION
// We depart here from strict adherence to MRI code, as MRI // uses C-sprintf, in part, to format numeric output, while // we'll use Java's numeric formatting code (and our own).	WITHOUT_CLASSIFICATION	0.9999981291867927	WITHOUT_CLASSIFICATION	1.8708132072618203E-6	IMPLEMENTATION
// skip '-' in bytes, will add where appropriate	WITHOUT_CLASSIFICATION	0.9998793339579474	WITHOUT_CLASSIFICATION	1.2066604205270287E-4	IMPLEMENTATION
// ..	WITHOUT_CLASSIFICATION	0.9999818199088369	WITHOUT_CLASSIFICATION	1.818009116312172E-5	IMPLEMENTATION
// the 1 is for the stripped sign char	WITHOUT_CLASSIFICATION	0.9999746612995165	WITHOUT_CLASSIFICATION	2.5338700483447326E-5	IMPLEMENTATION
// FIXME: what is correct 'recv' argument? // (this does produce the desired behavior)	WITHOUT_CLASSIFICATION	0.998776009323677	WITHOUT_CLASSIFICATION	0.0012239906763228704	IMPLEMENTATION
// gotta have at least a zero...	WITHOUT_CLASSIFICATION	0.9999435850436297	WITHOUT_CLASSIFICATION	5.6414956370309056E-5	IMPLEMENTATION
// OK, we now have the significand in digits[0...nDigits] // and the exponent in exponent.  We're ready to format.	WITHOUT_CLASSIFICATION	0.9999023813136566	WITHOUT_CLASSIFICATION	9.761868634332328E-5	IMPLEMENTATION
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9999538752908786	WITHOUT_CLASSIFICATION	4.612470912140153E-5	IMPLEMENTATION
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9998955582817491	WITHOUT_CLASSIFICATION	1.044417182509097E-4	IMPLEMENTATION
//System.err.println(" stringToLong/reading c=" + data[s]);	WITHOUT_CLASSIFICATION	0.9992750321726891	WITHOUT_CLASSIFICATION	7.249678273107667E-4	IMPLEMENTATION
//System.err.println(" stringToLong/converted c=" + c);	WITHOUT_CLASSIFICATION	0.9992965777523048	WITHOUT_CLASSIFICATION	7.034222476952087E-4	IMPLEMENTATION
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9999538752908786	WITHOUT_CLASSIFICATION	4.612470912140153E-5	IMPLEMENTATION
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9998955582817491	WITHOUT_CLASSIFICATION	1.044417182509097E-4	IMPLEMENTATION
// precision for G/g includes integer digits	WITHOUT_CLASSIFICATION	0.9999556509667201	WITHOUT_CLASSIFICATION	4.434903327990091E-5	IMPLEMENTATION
// deal with length/width	WITHOUT_CLASSIFICATION	0.9997572132561664	WITHOUT_CLASSIFICATION	2.427867438334855E-4	IMPLEMENTATION
// deal with length/width	WITHOUT_CLASSIFICATION	0.9997572132561664	WITHOUT_CLASSIFICATION	2.427867438334855E-4	IMPLEMENTATION
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9998464871846604	WITHOUT_CLASSIFICATION	1.5351281533960515E-4	IMPLEMENTATION
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999745335393833	WITHOUT_CLASSIFICATION	2.5466460616770098E-5	IMPLEMENTATION
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999943220200083	WITHOUT_CLASSIFICATION	5.6779799917143466E-6	IMPLEMENTATION
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999606408410602	WITHOUT_CLASSIFICATION	3.935915893990213E-5	IMPLEMENTATION
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.999979643976553	WITHOUT_CLASSIFICATION	2.0356023446999103E-5	IMPLEMENTATION
// MRI behavior: In this mode // trailing zeroes are removed: // 1.500E+05 -> 1.5E+05 	WITHOUT_CLASSIFICATION	0.999980455711476	WITHOUT_CLASSIFICATION	1.9544288523980865E-5	IMPLEMENTATION
// '.' is printed	WITHOUT_CLASSIFICATION	0.9996836742493085	WITHOUT_CLASSIFICATION	3.1632575069154187E-4	IMPLEMENTATION
// all precision numebers printed	WITHOUT_CLASSIFICATION	0.9998426012735606	WITHOUT_CLASSIFICATION	1.5739872643936024E-4	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9987735263989248	WITHOUT_CLASSIFICATION	0.0012264736010751001	IMPLEMENTATION
// '.'	WITHOUT_CLASSIFICATION	0.9999817732979837	WITHOUT_CLASSIFICATION	1.8226702016340673E-5	IMPLEMENTATION
// decimal form, like (but not *just* like!) 'f'	WITHOUT_CLASSIFICATION	0.9695025156718176	WITHOUT_CLASSIFICATION	0.030497484328182476	IMPLEMENTATION
// digits array shifted, update all	WITHOUT_CLASSIFICATION	0.9999625226873732	WITHOUT_CLASSIFICATION	3.74773126269285E-5	IMPLEMENTATION
// will have a trailing '.' // g fills trailing zeroes if #	WITHOUT_CLASSIFICATION	0.9999703862925154	WITHOUT_CLASSIFICATION	2.9613707484560844E-5	IMPLEMENTATION
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999453834335452	WITHOUT_CLASSIFICATION	5.4616566454864365E-5	IMPLEMENTATION
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999453834335452	WITHOUT_CLASSIFICATION	5.4616566454864365E-5	IMPLEMENTATION
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9998672739116873	WITHOUT_CLASSIFICATION	1.3272608831265626E-4	IMPLEMENTATION
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9998672739116873	WITHOUT_CLASSIFICATION	1.3272608831265626E-4	IMPLEMENTATION
// digits arr shifted, update all	WITHOUT_CLASSIFICATION	0.9999629497851111	WITHOUT_CLASSIFICATION	3.705021488890741E-5	IMPLEMENTATION
// (1|intlen).prec	WITHOUT_CLASSIFICATION	0.9993881635822232	WITHOUT_CLASSIFICATION	6.118364177769137E-4	IMPLEMENTATION
// (1|intlen)	WITHOUT_CLASSIFICATION	0.9993881635822232	WITHOUT_CLASSIFICATION	6.118364177769137E-4	IMPLEMENTATION
// will have a trailing '.'	WITHOUT_CLASSIFICATION	0.9998919689933807	WITHOUT_CLASSIFICATION	1.0803100661933081E-4	IMPLEMENTATION
// fill up the rest with zeroes	WITHOUT_CLASSIFICATION	0.9999118493694539	WITHOUT_CLASSIFICATION	8.81506305461541E-5	IMPLEMENTATION
//System.err.println(" main/len=" + len);	WITHOUT_CLASSIFICATION	0.9992750321726891	WITHOUT_CLASSIFICATION	7.249678273107667E-4	IMPLEMENTATION
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999943220200083	WITHOUT_CLASSIFICATION	5.6779799917143466E-6	IMPLEMENTATION
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999606408410602	WITHOUT_CLASSIFICATION	3.935915893990213E-5	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9987735263989248	WITHOUT_CLASSIFICATION	0.0012264736010751001	IMPLEMENTATION
// '.'	WITHOUT_CLASSIFICATION	0.9999817732979837	WITHOUT_CLASSIFICATION	1.8226702016340673E-5	IMPLEMENTATION
// equivalent to MRI case '\0':	WITHOUT_CLASSIFICATION	0.9993469311828551	WITHOUT_CLASSIFICATION	6.53068817144765E-4	IMPLEMENTATION
// '.' and all precision digits printed	WITHOUT_CLASSIFICATION	0.9999167436169091	WITHOUT_CLASSIFICATION	8.325638309094794E-5	IMPLEMENTATION
// \v	WITHOUT_CLASSIFICATION	0.9999817067840583	WITHOUT_CLASSIFICATION	1.8293215941744205E-5	IMPLEMENTATION
// dangling '%' char	WITHOUT_CLASSIFICATION	0.9996443242398682	WITHOUT_CLASSIFICATION	3.556757601318924E-4	IMPLEMENTATION
// main while loop (offset < length)	WITHOUT_CLASSIFICATION	0.9998273034591034	WITHOUT_CLASSIFICATION	1.7269654089652835E-4	IMPLEMENTATION
// debugging code, keeping for now	WITHOUT_CLASSIFICATION	0.999964385095402	WITHOUT_CLASSIFICATION	3.56149045980336E-5	IMPLEMENTATION
// MRI rounds up on nnn5nnn, but not nnn5 -- // except for when they do	WITHOUT_CLASSIFICATION	0.9998356035910833	WITHOUT_CLASSIFICATION	1.643964089167705E-4	IMPLEMENTATION
// "%.0f" % 0.99	WITHOUT_CLASSIFICATION	0.9993937233589402	WITHOUT_CLASSIFICATION	6.062766410597004E-4	IMPLEMENTATION
// limit the length of negatives if possible (also faster)	WITHOUT_CLASSIFICATION	0.9999687276918993	WITHOUT_CLASSIFICATION	3.12723081006962E-5	IMPLEMENTATION
// negative values	WITHOUT_CLASSIFICATION	0.9999795760854965	WITHOUT_CLASSIFICATION	2.0423914503525872E-5	IMPLEMENTATION
// calculation for negatives when %u specified // for values >= Integer.MIN_VALUE * 2, MRI uses (the equivalent of) //   long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val // for smaller values, BigInteger math is required to conform to MRI's // result.	WITHOUT_CLASSIFICATION	0.9999978869672697	WITHOUT_CLASSIFICATION	2.1130327304333843E-6	IMPLEMENTATION
// relatively cheap test for 32-bit values	WITHOUT_CLASSIFICATION	0.9999995496172862	WITHOUT_CLASSIFICATION	4.5038271387541954E-7	IMPLEMENTATION
// no such luck...	WITHOUT_CLASSIFICATION	0.9993271989225576	WITHOUT_CLASSIFICATION	6.728010774423732E-4	IMPLEMENTATION
// ok, now it gets expensive...	WITHOUT_CLASSIFICATION	0.9998751929489877	WITHOUT_CLASSIFICATION	1.2480705101223236E-4	IMPLEMENTATION
// go through negated powers of 32 until we find one small enough 	WITHOUT_CLASSIFICATION	0.9999023968609676	WITHOUT_CLASSIFICATION	9.760313903234097E-5	IMPLEMENTATION
// add to the corresponding positive power of 32 for the result. // meaningful? no. conformant? yes. I just write the code...	WITHOUT_CLASSIFICATION	0.9998898329110482	WITHOUT_CLASSIFICATION	1.1016708895189537E-4	IMPLEMENTATION
/* constant vector a */	WITHOUT_CLASSIFICATION	0.9999827670573077	WITHOUT_CLASSIFICATION	1.7232942692322617E-5	IMPLEMENTATION
/* most significant w-r bits */	WITHOUT_CLASSIFICATION	0.999922827415413	WITHOUT_CLASSIFICATION	7.717258458702825E-5	IMPLEMENTATION
/* least significant r bits */	WITHOUT_CLASSIFICATION	0.9999854411567961	WITHOUT_CLASSIFICATION	1.4558843203886729E-5	IMPLEMENTATION
// state[j] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9998830642404937	WITHOUT_CLASSIFICATION	1.16935759506367E-4	IMPLEMENTATION
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9998830642404937	WITHOUT_CLASSIFICATION	1.16935759506367E-4	IMPLEMENTATION
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9998830642404937	WITHOUT_CLASSIFICATION	1.16935759506367E-4	IMPLEMENTATION
/* MSB is 1; assuring non-zero initial array */	WITHOUT_CLASSIFICATION	0.9999888365404143	WITHOUT_CLASSIFICATION	1.116345958570002E-5	IMPLEMENTATION
/* Tempering */	WITHOUT_CLASSIFICATION	0.9999075354069781	WITHOUT_CLASSIFICATION	9.246459302188056E-5	IMPLEMENTATION
// MRI behavior: Week values are monotonous. // So, weeks that effectively belong to previous year, // will get the value of 0, not 52 or 53, as in Java.	WITHOUT_CLASSIFICATION	0.999999081957689	WITHOUT_CLASSIFICATION	9.180423110194084E-7	IMPLEMENTATION
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9992760497861555	WITHOUT_CLASSIFICATION	7.239502138445779E-4	IMPLEMENTATION
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9992760497861555	WITHOUT_CLASSIFICATION	7.239502138445779E-4	IMPLEMENTATION
// \v	WITHOUT_CLASSIFICATION	0.9999817067840583	WITHOUT_CLASSIFICATION	1.8293215941744205E-5	IMPLEMENTATION
//System.err.println("getSign()");	WITHOUT_CLASSIFICATION	0.999162082315616	WITHOUT_CLASSIFICATION	8.37917684384032E-4	IMPLEMENTATION
//System.err.println(" getSign/" + sign);	WITHOUT_CLASSIFICATION	0.9992750321726891	WITHOUT_CLASSIFICATION	7.249678273107667E-4	IMPLEMENTATION
//System.err.println("figureOutBase()/base=" + base);	WITHOUT_CLASSIFICATION	0.9992750321726891	WITHOUT_CLASSIFICATION	7.249678273107667E-4	IMPLEMENTATION
//System.err.println(" figureOutBase/base=" + base);	WITHOUT_CLASSIFICATION	0.9992750321726891	WITHOUT_CLASSIFICATION	7.249678273107667E-4	IMPLEMENTATION
//System.err.println("calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9992750321726891	WITHOUT_CLASSIFICATION	7.249678273107667E-4	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.99991120461732	WITHOUT_CLASSIFICATION	8.879538267995327E-5	IMPLEMENTATION
//System.err.println(" stringToLong=" + val);	WITHOUT_CLASSIFICATION	0.9992750321726891	WITHOUT_CLASSIFICATION	7.249678273107667E-4	IMPLEMENTATION
// no number	WITHOUT_CLASSIFICATION	0.9994825629670583	WITHOUT_CLASSIFICATION	5.174370329416206E-4	IMPLEMENTATION
// trailing garbage	WITHOUT_CLASSIFICATION	0.9977892735677234	WITHOUT_CLASSIFICATION	0.0022107264322767236	IMPLEMENTATION
//System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);	WITHOUT_CLASSIFICATION	0.9985641783988447	WITHOUT_CLASSIFICATION	0.001435821601155234	IMPLEMENTATION
// it was not found at all!	WITHOUT_CLASSIFICATION	0.9997538187956329	WITHOUT_CLASSIFICATION	2.461812043670699E-4	IMPLEMENTATION
// can be overridden to be informed when objects are removed	WITHOUT_CLASSIFICATION	0.9991267812790693	WITHOUT_CLASSIFICATION	8.732187209306589E-4	IMPLEMENTATION
// we reached the end of a list	WITHOUT_CLASSIFICATION	0.9998425327404066	WITHOUT_CLASSIFICATION	1.574672595933617E-4	IMPLEMENTATION
// goto next bucket	WITHOUT_CLASSIFICATION	0.9972320656685015	WITHOUT_CLASSIFICATION	0.0027679343314984204	IMPLEMENTATION
// we reached the end	WITHOUT_CLASSIFICATION	0.9996851011319251	WITHOUT_CLASSIFICATION	3.148988680748801E-4	IMPLEMENTATION
// entry is the first element of this bucket	WITHOUT_CLASSIFICATION	0.9999487904103256	WITHOUT_CLASSIFICATION	5.120958967445864E-5	IMPLEMENTATION
// states	WITHOUT_CLASSIFICATION	0.9999496989667451	WITHOUT_CLASSIFICATION	5.030103325474599E-5	IMPLEMENTATION
// remove leading whitespace (includes _ for lax) // get sign, if any	WITHOUT_CLASSIFICATION	0.9999956753075815	WITHOUT_CLASSIFICATION	4.324692418545226E-6	IMPLEMENTATION
// optimistic pass - calculate value as digits are processed // digits - lax rules // decimal digits - lax rules // exponent sign/digits - lax rules // digits - strict rules // decimal digits - strict rules // exponent sign/digits - strict rules // complete calculation if possible	WITHOUT_CLASSIFICATION	0.9999953312735967	WITHOUT_CLASSIFICATION	4.668726403282655E-6	IMPLEMENTATION
// fields used for direct (optimistic) calculation // number of significant digits, updated as parsed // zeroes that may go to significand or exponent // offset of decimal pt from start (-1 -> no decimal) // significand, updated as parsed // exponent, updated as parsed	WITHOUT_CLASSIFICATION	0.9999998283608648	WITHOUT_CLASSIFICATION	1.716391351597428E-7	IMPLEMENTATION
// drop through for sign	WITHOUT_CLASSIFICATION	0.9999666996598947	WITHOUT_CLASSIFICATION	3.3300340105325904E-5	IMPLEMENTATION
// switch // will use this if we have to go back the slow way	WITHOUT_CLASSIFICATION	0.9997384628535338	WITHOUT_CLASSIFICATION	2.615371464662413E-4	IMPLEMENTATION
// drop through for non-strict digits	WITHOUT_CLASSIFICATION	0.9999649206092067	WITHOUT_CLASSIFICATION	3.507939079333022E-5	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.999937880733033	WITHOUT_CLASSIFICATION	6.211926696705941E-5	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9998120495378126	WITHOUT_CLASSIFICATION	1.8795046218755354E-4	IMPLEMENTATION
// no digits, go calc (will return +/- 0.0 for lax)	WITHOUT_CLASSIFICATION	0.9999796983983616	WITHOUT_CLASSIFICATION	2.030160163835037E-5	IMPLEMENTATION
// ignore leading zeroes	WITHOUT_CLASSIFICATION	0.9998651828070164	WITHOUT_CLASSIFICATION	1.3481719298366333E-4	IMPLEMENTATION
// just save a count of zeroes for now; if no digit // ends up following them, they'll be applied to the // exponent rather than the significand (and our max // length for optimistic calc).	WITHOUT_CLASSIFICATION	0.9999999732797173	WITHOUT_CLASSIFICATION	2.672028263056053E-8	IMPLEMENTATION
// ok, got a non-zero, have to own up to our horded zeroes	WITHOUT_CLASSIFICATION	0.9999625079089218	WITHOUT_CLASSIFICATION	3.7492091078222404E-5	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9998665852573534	WITHOUT_CLASSIFICATION	1.3341474264666847E-4	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9998665852573534	WITHOUT_CLASSIFICATION	1.3341474264666847E-4	IMPLEMENTATION
// oh, well, it was worth a try. go let // Double/FloatingDecimal handle it 	WITHOUT_CLASSIFICATION	0.9999701854325969	WITHOUT_CLASSIFICATION	2.9814567403089424E-5	IMPLEMENTATION
// ignore // switch	WITHOUT_CLASSIFICATION	0.9993178244407871	WITHOUT_CLASSIFICATION	6.821755592130089E-4	IMPLEMENTATION
// ignore // switch	WITHOUT_CLASSIFICATION	0.9993178244407871	WITHOUT_CLASSIFICATION	6.821755592130089E-4	IMPLEMENTATION
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999577943952228	WITHOUT_CLASSIFICATION	4.220560477731585E-5	IMPLEMENTATION
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999577943952228	WITHOUT_CLASSIFICATION	4.220560477731585E-5	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9997701420402995	WITHOUT_CLASSIFICATION	2.2985795970047E-4	IMPLEMENTATION
// first non_underscore char must be digit	WITHOUT_CLASSIFICATION	0.9999091813192179	WITHOUT_CLASSIFICATION	9.081868078213147E-5	IMPLEMENTATION
// no dec digits, end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999517590628035	WITHOUT_CLASSIFICATION	4.8240937196391645E-5	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.9998955448551986	WITHOUT_CLASSIFICATION	1.0445514480138783E-4	IMPLEMENTATION
// difficult case, send to Double/FloatingDecimal	WITHOUT_CLASSIFICATION	0.9998836288613906	WITHOUT_CLASSIFICATION	1.1637113860945241E-4	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999730797161539	WITHOUT_CLASSIFICATION	2.6920283846099284E-5	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999730797161539	WITHOUT_CLASSIFICATION	2.6920283846099284E-5	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.999937880733033	WITHOUT_CLASSIFICATION	6.211926696705941E-5	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.999937880733033	WITHOUT_CLASSIFICATION	6.211926696705941E-5	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.999937880733033	WITHOUT_CLASSIFICATION	6.211926696705941E-5	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9998120495378126	WITHOUT_CLASSIFICATION	1.8795046218755354E-4	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9998665852573534	WITHOUT_CLASSIFICATION	1.3341474264666847E-4	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9998665852573534	WITHOUT_CLASSIFICATION	1.3341474264666847E-4	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9998665852573534	WITHOUT_CLASSIFICATION	1.3341474264666847E-4	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9997701420402995	WITHOUT_CLASSIFICATION	2.2985795970047E-4	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9997701420402995	WITHOUT_CLASSIFICATION	2.2985795970047E-4	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9997701420402995	WITHOUT_CLASSIFICATION	2.2985795970047E-4	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.9998955448551986	WITHOUT_CLASSIFICATION	1.0445514480138783E-4	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.9998955448551986	WITHOUT_CLASSIFICATION	1.0445514480138783E-4	IMPLEMENTATION
// lax (str.to_f) allows underscores between e/E and sign	WITHOUT_CLASSIFICATION	0.9998825379467949	WITHOUT_CLASSIFICATION	1.1746205320502733E-4	IMPLEMENTATION
// switch // for // no exponent, so drop through for calculation	WITHOUT_CLASSIFICATION	0.9999712026093758	WITHOUT_CLASSIFICATION	2.8797390624240005E-5	IMPLEMENTATION
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.999543857115379	WITHOUT_CLASSIFICATION	4.5614288462109115E-4	IMPLEMENTATION
// TODO: it's not clear to me why, in FloatingDecimal, the // "slop" calculation performed above for positive exponents // isn't used for negative exponents as well. Will find out...	WITHOUT_CLASSIFICATION	0.8771693476343057	IMPLEMENTATION	0.12283065236569446	WITHOUT_CLASSIFICATION
// no digits, error	WITHOUT_CLASSIFICATION	0.9988955102827278	WITHOUT_CLASSIFICATION	0.0011044897172722123	IMPLEMENTATION
// too big for us	WITHOUT_CLASSIFICATION	0.9997652229670425	WITHOUT_CLASSIFICATION	2.3477703295750346E-4	IMPLEMENTATION
// too big for us	WITHOUT_CLASSIFICATION	0.9997652229670425	WITHOUT_CLASSIFICATION	2.3477703295750346E-4	IMPLEMENTATION
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999785942778087	WITHOUT_CLASSIFICATION	2.1405722191357575E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.99991120461732	WITHOUT_CLASSIFICATION	8.879538267995327E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.99991120461732	WITHOUT_CLASSIFICATION	8.879538267995327E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.99991120461732	WITHOUT_CLASSIFICATION	8.879538267995327E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.99991120461732	WITHOUT_CLASSIFICATION	8.879538267995327E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.99991120461732	WITHOUT_CLASSIFICATION	8.879538267995327E-5	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999180464325115	WITHOUT_CLASSIFICATION	8.195356748848069E-5	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999180464325115	WITHOUT_CLASSIFICATION	8.195356748848069E-5	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999180464325115	WITHOUT_CLASSIFICATION	8.195356748848069E-5	IMPLEMENTATION
// first char must be digit	WITHOUT_CLASSIFICATION	0.9999385071524564	WITHOUT_CLASSIFICATION	6.149284754365952E-5	IMPLEMENTATION
// no dec digits after '.', error for strict	WITHOUT_CLASSIFICATION	0.9999366311721906	WITHOUT_CLASSIFICATION	6.336882780936364E-5	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9998120495378126	WITHOUT_CLASSIFICATION	1.8795046218755354E-4	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9997701420402995	WITHOUT_CLASSIFICATION	2.2985795970047E-4	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9997701420402995	WITHOUT_CLASSIFICATION	2.2985795970047E-4	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.99991120461732	WITHOUT_CLASSIFICATION	8.879538267995327E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.99991120461732	WITHOUT_CLASSIFICATION	8.879538267995327E-5	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999180464325115	WITHOUT_CLASSIFICATION	8.195356748848069E-5	IMPLEMENTATION
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999785942778087	WITHOUT_CLASSIFICATION	2.1405722191357575E-5	IMPLEMENTATION
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9998871787904351	WITHOUT_CLASSIFICATION	1.1282120956493407E-4	IMPLEMENTATION
// switch //while	WITHOUT_CLASSIFICATION	0.999423706738737	WITHOUT_CLASSIFICATION	5.762932612629357E-4	IMPLEMENTATION
/*     * All the positive powers of 10 that can be     * represented exactly in double/float.     * (From sun.misc.FloatingDecimal.java)     */	WITHOUT_CLASSIFICATION	0.9999984866943362	WITHOUT_CLASSIFICATION	1.5133056637904809E-6	IMPLEMENTATION
// Zlib behavior: negative win_bits means no header and no checksum.	WITHOUT_CLASSIFICATION	0.9999264089013111	WITHOUT_CLASSIFICATION	7.359109868883051E-5	IMPLEMENTATION
// rb_enc_mbclen	WITHOUT_CLASSIFICATION	0.9993881635822232	WITHOUT_CLASSIFICATION	6.118364177769137E-4	IMPLEMENTATION
// rb_enc_precise_mbclen	WITHOUT_CLASSIFICATION	0.9998830445803648	WITHOUT_CLASSIFICATION	1.1695541963519677E-4	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9970371744469209	WITHOUT_CLASSIFICATION	0.0029628255530790965	IMPLEMENTATION
// arg cannot be negative	WITHOUT_CLASSIFICATION	0.9999859496434006	WITHOUT_CLASSIFICATION	1.405035659935791E-5	IMPLEMENTATION
// NoFunctionalitySignalFacade	WITHOUT_CLASSIFICATION	0.9998830445803648	WITHOUT_CLASSIFICATION	1.1695541963519677E-4	IMPLEMENTATION
// Change visibility so others can see it	WITHOUT_CLASSIFICATION	0.999913657501057	WITHOUT_CLASSIFICATION	8.634249894311251E-5	IMPLEMENTATION
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9997516226638127	WITHOUT_CLASSIFICATION	2.4837733618739225E-4	IMPLEMENTATION
// strip off "_dot_rb" for .rb files	WITHOUT_CLASSIFICATION	0.9999870333743267	WITHOUT_CLASSIFICATION	1.296662567329084E-5	IMPLEMENTATION
// Makes sure the key is not already in the hashtable.	WITHOUT_CLASSIFICATION	0.9999182408826358	WITHOUT_CLASSIFICATION	8.175911736423721E-5	IMPLEMENTATION
// Rehash the table if the threshold is exceeded	WITHOUT_CLASSIFICATION	0.9999872370314639	WITHOUT_CLASSIFICATION	1.2762968536158542E-5	IMPLEMENTATION
// Creates the new entry.	WITHOUT_CLASSIFICATION	0.9999051320157405	WITHOUT_CLASSIFICATION	9.486798425954955E-5	IMPLEMENTATION
// next entry to return // current slot // current entry	WITHOUT_CLASSIFICATION	0.996559432058972	WITHOUT_CLASSIFICATION	0.0034405679410279386	IMPLEMENTATION
// advance to first entry	WITHOUT_CLASSIFICATION	0.9998223633750812	WITHOUT_CLASSIFICATION	1.7763662491883972E-4	IMPLEMENTATION
// The reason why we need the stream is to be able to invoke available() on it. // STDIN in Java is non-interruptible, non-selectable, and attempt to read // on such stream might lead to thread being blocked without *any* way to unblock it. // That's where available() comes it, so at least we could check whether // anything is available to be read without blocking.	WITHOUT_CLASSIFICATION	0.9999830597396554	WITHOUT_CLASSIFICATION	1.694026034452064E-5	IMPLEMENTATION
/*package-protected*/	WITHOUT_CLASSIFICATION	0.9994325134615626	WITHOUT_CLASSIFICATION	5.674865384373897E-4	IMPLEMENTATION
// raw file URL, just open directly	WITHOUT_CLASSIFICATION	0.9999791223909213	WITHOUT_CLASSIFICATION	2.0877609078596776E-5	IMPLEMENTATION
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9992436919878881	WITHOUT_CLASSIFICATION	7.563080121119196E-4	IMPLEMENTATION
// if refcount is at or below zero, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999994596711667	WITHOUT_CLASSIFICATION	5.403288332804394E-7	IMPLEMENTATION
// if channel is already closed, we're no longer valid	WITHOUT_CLASSIFICATION	0.999997078570996	WITHOUT_CLASSIFICATION	2.921429004102559E-6	IMPLEMENTATION
// otherwise decrement and possibly close as normal	WITHOUT_CLASSIFICATION	0.9995797143607501	WITHOUT_CLASSIFICATION	4.202856392498902E-4	IMPLEMENTATION
// r/w buffer // are we reading or writing?	WITHOUT_CLASSIFICATION	0.9998863447564772	WITHOUT_CLASSIFICATION	1.1365524352287717E-4	IMPLEMENTATION
// this constructor is used by fdopen, so we don't increment descriptor ref count	WITHOUT_CLASSIFICATION	0.9999750820317392	WITHOUT_CLASSIFICATION	2.4917968260736298E-5	IMPLEMENTATION
// unread back	WITHOUT_CLASSIFICATION	0.9989760405236994	WITHOUT_CLASSIFICATION	0.0010239594763006392	IMPLEMENTATION
// iterate over remainder of buffer until we find a match	WITHOUT_CLASSIFICATION	0.9999894129296948	WITHOUT_CLASSIFICATION	1.0587070305265685E-5	IMPLEMENTATION
// terminate and advance buffer when we find our char	WITHOUT_CLASSIFICATION	0.9999507149782492	WITHOUT_CLASSIFICATION	4.9285021750852624E-5	IMPLEMENTATION
// no match, append remainder of buffer and continue with next block	WITHOUT_CLASSIFICATION	0.9990338880275439	WITHOUT_CLASSIFICATION	9.661119724560411E-4	IMPLEMENTATION
// found a match above, check if remaining separator characters match, appending as we go	WITHOUT_CLASSIFICATION	0.9999954632819624	WITHOUT_CLASSIFICATION	4.536718037634416E-6	IMPLEMENTATION
// // Check file size - special files in /proc have zero size and need to be // handled by the generic read path. //	WITHOUT_CLASSIFICATION	0.999996599836487	WITHOUT_CLASSIFICATION	3.400163513066231E-6	IMPLEMENTATION
// // Copy any buffered data (including ungetc byte) //	WITHOUT_CLASSIFICATION	0.9999475694588771	WITHOUT_CLASSIFICATION	5.243054112283992E-5	IMPLEMENTATION
// // Now read unbuffered directly from the file //	WITHOUT_CLASSIFICATION	0.9999564497945443	WITHOUT_CLASSIFICATION	4.35502054557004E-5	IMPLEMENTATION
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9998871787904351	WITHOUT_CLASSIFICATION	1.1282120956493407E-4	IMPLEMENTATION
// // Need to clamp source (buffer) size to avoid overrun //	WITHOUT_CLASSIFICATION	0.9997671872329301	WITHOUT_CLASSIFICATION	2.3281276706983183E-4	IMPLEMENTATION
// not closing from finalize	WITHOUT_CLASSIFICATION	0.9996270839352411	WITHOUT_CLASSIFICATION	3.7291606475876784E-4	IMPLEMENTATION
// clear runtime so it doesn't get stuck in memory (JRUBY-2933)	WITHOUT_CLASSIFICATION	0.999996482746089	WITHOUT_CLASSIFICATION	3.5172539109658345E-6	IMPLEMENTATION
// silence	WITHOUT_CLASSIFICATION	0.9999817067840583	WITHOUT_CLASSIFICATION	1.8293215941744205E-5	IMPLEMENTATION
// silence	WITHOUT_CLASSIFICATION	0.9999817067840583	WITHOUT_CLASSIFICATION	1.8293215941744205E-5	IMPLEMENTATION
// Don't bother	WITHOUT_CLASSIFICATION	0.9977633471661344	WITHOUT_CLASSIFICATION	0.002236652833865632	IMPLEMENTATION
// Don't bother	WITHOUT_CLASSIFICATION	0.9977633471661344	WITHOUT_CLASSIFICATION	0.002236652833865632	IMPLEMENTATION
// For Sockets, only write as much as will fit.	WITHOUT_CLASSIFICATION	0.9997546760318553	WITHOUT_CLASSIFICATION	2.453239681446921E-4	IMPLEMENTATION
// Correct position for read / write buffering (we could invalidate, but expensive)	WITHOUT_CLASSIFICATION	0.9999982669401625	WITHOUT_CLASSIFICATION	1.7330598375489767E-6	IMPLEMENTATION
// Adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999839211420964	WITHOUT_CLASSIFICATION	1.6078857903605118E-5	IMPLEMENTATION
// for SEEK_CUR, need to adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999008942648084	WITHOUT_CLASSIFICATION	9.910573519153736E-5	IMPLEMENTATION
// libc flushes writes on any read from the actual file, so we flush here	WITHOUT_CLASSIFICATION	0.9999681218001256	WITHOUT_CLASSIFICATION	3.1878199874422327E-5	IMPLEMENTATION
// we have read ahead, and need to back up	WITHOUT_CLASSIFICATION	0.9995252352466231	WITHOUT_CLASSIFICATION	4.747647533769594E-4	IMPLEMENTATION
// 128K seems to be the minimum at which the stat+seek is faster than reallocation	WITHOUT_CLASSIFICATION	0.9999953005912631	WITHOUT_CLASSIFICATION	4.699408737021473E-6	IMPLEMENTATION
// // limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations //	WITHOUT_CLASSIFICATION	0.9999232532690925	WITHOUT_CLASSIFICATION	7.67467309074991E-5	IMPLEMENTATION
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9993767374427545	WITHOUT_CLASSIFICATION	6.232625572455904E-4	IMPLEMENTATION
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.999966727435468	WITHOUT_CLASSIFICATION	3.3272564531985384E-5	IMPLEMENTATION
// // Avoid double-copying for reads that are larger than the buffer size //	WITHOUT_CLASSIFICATION	0.999961188103149	WITHOUT_CLASSIFICATION	3.881189685098655E-5	IMPLEMENTATION
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999758163525996	WITHOUT_CLASSIFICATION	2.4183647400411297E-5	IMPLEMENTATION
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999758163525996	WITHOUT_CLASSIFICATION	2.4183647400411297E-5	IMPLEMENTATION
// // Avoid double-copying for reads that are larger than the buffer size, or // the destination is a direct buffer. //	WITHOUT_CLASSIFICATION	0.9999426854733403	WITHOUT_CLASSIFICATION	5.731452665979157E-5	IMPLEMENTATION
// // We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating // a huge temporary native buffer, when doing reads into a heap buffer // If the dst buffer is direct, then no need to limit. //	WITHOUT_CLASSIFICATION	0.9999753319457633	WITHOUT_CLASSIFICATION	2.4668054236630827E-5	IMPLEMENTATION
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999345975759502	WITHOUT_CLASSIFICATION	6.54024240499152E-5	IMPLEMENTATION
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999345975759502	WITHOUT_CLASSIFICATION	6.54024240499152E-5	IMPLEMENTATION
// Doesn't fit in buffer. Write immediately. // ensure nothing left to write	WITHOUT_CLASSIFICATION	0.9999980978165062	WITHOUT_CLASSIFICATION	1.9021834937772035E-6	IMPLEMENTATION
// truncate can't lengthen files, so we save position, seek/write, and go back	WITHOUT_CLASSIFICATION	0.9999757066946167	WITHOUT_CLASSIFICATION	2.4293305383285912E-5	IMPLEMENTATION
// how far ahead we are when reading	WITHOUT_CLASSIFICATION	0.9991562535248425	WITHOUT_CLASSIFICATION	8.437464751574771E-4	IMPLEMENTATION
// if the read buffer is ahead, back up	WITHOUT_CLASSIFICATION	0.9999952165324927	WITHOUT_CLASSIFICATION	4.783467507314672E-6	IMPLEMENTATION
// close without removing from finalizers	WITHOUT_CLASSIFICATION	0.9999833281866503	WITHOUT_CLASSIFICATION	1.667181334974213E-5	IMPLEMENTATION
// putting a bit back, so we're not at EOF anymore	WITHOUT_CLASSIFICATION	0.9999959036854265	WITHOUT_CLASSIFICATION	4.09631457358246E-6	IMPLEMENTATION
// save the ungot	WITHOUT_CLASSIFICATION	0.9998089840709024	WITHOUT_CLASSIFICATION	1.9101592909759538E-4	IMPLEMENTATION
// otherwise, we try an unbuffered read to get whatever's available	WITHOUT_CLASSIFICATION	0.9999714056074456	WITHOUT_CLASSIFICATION	2.859439255441084E-5	IMPLEMENTATION
// ignore this; select() will set the correct mode when it is finished	WITHOUT_CLASSIFICATION	0.9998847721804142	WITHOUT_CLASSIFICATION	1.1522781958585293E-4	IMPLEMENTATION
// flush first	WITHOUT_CLASSIFICATION	0.9993471052592874	WITHOUT_CLASSIFICATION	6.528947407126654E-4	IMPLEMENTATION
// // Wake up any channels that became unblocked //	WITHOUT_CLASSIFICATION	0.9997689456231766	WITHOUT_CLASSIFICATION	2.3105437682341838E-4	IMPLEMENTATION
// // Register any new blocking I/O requests //	WITHOUT_CLASSIFICATION	0.9992447326498001	WITHOUT_CLASSIFICATION	7.552673502000307E-4	IMPLEMENTATION
// Now clear out any previously selected channels	WITHOUT_CLASSIFICATION	0.9998992721363059	WITHOUT_CLASSIFICATION	1.0072786369402389E-4	IMPLEMENTATION
// // Wait for I/O on any channel //	WITHOUT_CLASSIFICATION	0.9998776352806571	WITHOUT_CLASSIFICATION	1.2236471934293043E-4	IMPLEMENTATION
// Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'	WITHOUT_CLASSIFICATION	0.999521202055171	WITHOUT_CLASSIFICATION	4.7879794482896424E-4	IMPLEMENTATION
// Java requires "w" for creating a file that does not exist	WITHOUT_CLASSIFICATION	0.9995285849208833	WITHOUT_CLASSIFICATION	4.714150791167407E-4	IMPLEMENTATION
// seek to force underlying buffer to flush	WITHOUT_CLASSIFICATION	0.9997140734451453	WITHOUT_CLASSIFICATION	2.859265548546432E-4	IMPLEMENTATION
// seek to force read buffer to invalidate	WITHOUT_CLASSIFICATION	0.9998238916243468	WITHOUT_CLASSIFICATION	1.7610837565322775E-4	IMPLEMENTATION
/*        result = eval("arr = Array::['c', 200]; p arr");        assertEquals("[\"c\", 200]", result);        result = eval("arr = Array.['d', 200]; p arr");        assertEquals("[\"d\", 200]", result);        */	WITHOUT_CLASSIFICATION	0.9999638929539021	WITHOUT_CLASSIFICATION	3.6107046097802894E-5	IMPLEMENTATION
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9997550173283638	WITHOUT_CLASSIFICATION	2.449826716362324E-4	IMPLEMENTATION
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.5307796726128509	WITHOUT_CLASSIFICATION	0.46922032738714914	IMPLEMENTATION
// make sure the pipe stream is set to null	WITHOUT_CLASSIFICATION	0.999825262439892	WITHOUT_CLASSIFICATION	1.7473756010793072E-4	IMPLEMENTATION
// make sure the main stream is set to null	WITHOUT_CLASSIFICATION	0.9994906645589853	WITHOUT_CLASSIFICATION	5.093354410146548E-4	IMPLEMENTATION
// first try our custom-generated Unsafe	WITHOUT_CLASSIFICATION	0.999908639763098	WITHOUT_CLASSIFICATION	9.136023690196996E-5	IMPLEMENTATION
// then try Sun's Unsafe	WITHOUT_CLASSIFICATION	0.9998736732858515	WITHOUT_CLASSIFICATION	1.2632671414844945E-4	IMPLEMENTATION
// if we get here, the class and field exist; construct our Unsafe impl // that calls it directly	WITHOUT_CLASSIFICATION	0.9999847048539339	WITHOUT_CLASSIFICATION	1.5295146066163144E-5	IMPLEMENTATION
// else leave it null	WITHOUT_CLASSIFICATION	0.9996329515107365	WITHOUT_CLASSIFICATION	3.670484892634759E-4	IMPLEMENTATION
// TypeMatcher	WITHOUT_CLASSIFICATION	0.9993881635822232	WITHOUT_CLASSIFICATION	6.118364177769137E-4	IMPLEMENTATION
// This is now needed, since module Java // isn't in by default	WITHOUT_CLASSIFICATION	0.9999993456872723	WITHOUT_CLASSIFICATION	6.54312727763677E-7	IMPLEMENTATION
// Iterate over the RubyHash keySet, simultaneously iterating over the values()	WITHOUT_CLASSIFICATION	0.9999099315187084	WITHOUT_CLASSIFICATION	9.006848129148711E-5	IMPLEMENTATION
// Get the value from the map via the key	WITHOUT_CLASSIFICATION	0.9999903320212492	WITHOUT_CLASSIFICATION	9.667978750911417E-6	IMPLEMENTATION
// Get the value from the map via the values iterator	WITHOUT_CLASSIFICATION	0.999999398379534	WITHOUT_CLASSIFICATION	6.016204661124503E-7	IMPLEMENTATION
// Check the 2 values obtained via different means	WITHOUT_CLASSIFICATION	0.9999886440685664	WITHOUT_CLASSIFICATION	1.1355931433617756E-5	IMPLEMENTATION
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999971798307379	WITHOUT_CLASSIFICATION	2.8201692620743235E-6	IMPLEMENTATION
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999971798307379	WITHOUT_CLASSIFICATION	2.8201692620743235E-6	IMPLEMENTATION
// Check the entry.setValue values come back out ok	WITHOUT_CLASSIFICATION	0.9999732371190034	WITHOUT_CLASSIFICATION	2.6762880996455264E-5	IMPLEMENTATION
// If we're running from within an IDE we may not have // the .rb files in our classpath. Try to find them // in the filesystem instead.	WITHOUT_CLASSIFICATION	0.9999835015863553	WITHOUT_CLASSIFICATION	1.649841364469211E-5	IMPLEMENTATION
//assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); //assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));	WITHOUT_CLASSIFICATION	0.9985119792208673	WITHOUT_CLASSIFICATION	0.001488020779132689	IMPLEMENTATION
// Init	WITHOUT_CLASSIFICATION	0.9999824062028891	WITHOUT_CLASSIFICATION	1.7593797110799058E-5	IMPLEMENTATION
// Block	WITHOUT_CLASSIFICATION	0.9999817108336825	WITHOUT_CLASSIFICATION	1.8289166317541784E-5	IMPLEMENTATION
// Copy constructor	WITHOUT_CLASSIFICATION	0.9995724813153819	WITHOUT_CLASSIFICATION	4.2751868461811095E-4	IMPLEMENTATION
// presumably this require should fail	WITHOUT_CLASSIFICATION	0.9980175638466813	WITHOUT_CLASSIFICATION	0.0019824361533186817	IMPLEMENTATION
// JRUBY-646 // presumably this require should fail	WITHOUT_CLASSIFICATION	0.9980175638466813	WITHOUT_CLASSIFICATION	0.0019824361533186817	IMPLEMENTATION
// Test that requiring a normal Java class raises an error (JRUBY-3214	WITHOUT_CLASSIFICATION	0.9999628985488973	WITHOUT_CLASSIFICATION	3.710145110269102E-5	IMPLEMENTATION
// ok	WITHOUT_CLASSIFICATION	0.9999637562713851	WITHOUT_CLASSIFICATION	3.6243728614800775E-5	IMPLEMENTATION
// Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods // from Ruby so they are not really unused).	WITHOUT_CLASSIFICATION	0.9999962549296304	WITHOUT_CLASSIFICATION	3.7450703695600988E-6	IMPLEMENTATION
//load should work several times in a row	WITHOUT_CLASSIFICATION	0.9999560007419231	WITHOUT_CLASSIFICATION	4.39992580768245E-5	IMPLEMENTATION
//reset the $loadTestvar	WITHOUT_CLASSIFICATION	0.999532862714865	WITHOUT_CLASSIFICATION	4.671372851350159E-4	IMPLEMENTATION
//call throwException via JRuby	WITHOUT_CLASSIFICATION	0.9990447645386801	WITHOUT_CLASSIFICATION	9.552354613198516E-4	IMPLEMENTATION
// Notify the calling thread that we're about to go to sleep the first time	WITHOUT_CLASSIFICATION	0.9999981925177551	WITHOUT_CLASSIFICATION	1.8074822449563498E-6	IMPLEMENTATION
// wait for the go signal	WITHOUT_CLASSIFICATION	0.9999819481955775	WITHOUT_CLASSIFICATION	1.805180442244383E-5	IMPLEMENTATION
// run ten separate calls into Ruby, with delay and explicit GC	WITHOUT_CLASSIFICATION	0.9999735979281043	WITHOUT_CLASSIFICATION	2.6402071895738012E-5	IMPLEMENTATION
// wait until thread has initialized	WITHOUT_CLASSIFICATION	0.9999498920815473	WITHOUT_CLASSIFICATION	5.010791845271E-5	IMPLEMENTATION
// notify thread to proceed	WITHOUT_CLASSIFICATION	0.9998938435281588	WITHOUT_CLASSIFICATION	1.0615647184131894E-4	IMPLEMENTATION
// wait until thread has completed	WITHOUT_CLASSIFICATION	0.9999379192921417	WITHOUT_CLASSIFICATION	6.208070785833143E-5	IMPLEMENTATION
// we do preand post load outside the "body" versions to pre-prepare // and pre-push the dynamic scope we need for lastline	WITHOUT_CLASSIFICATION	0.9992710151045124	WITHOUT_CLASSIFICATION	7.289848954875819E-4	IMPLEMENTATION
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999890814388228	WITHOUT_CLASSIFICATION	1.0918561177196822E-5	IMPLEMENTATION
// MRI behavior: raise ArgumentError for 'unknown command' before // checking number of args.	WITHOUT_CLASSIFICATION	0.999982192870388	WITHOUT_CLASSIFICATION	1.7807129611987122E-5	IMPLEMENTATION
// if any exceptions were raised, we fail	WITHOUT_CLASSIFICATION	0.9999284070912074	WITHOUT_CLASSIFICATION	7.1592908792554E-5	IMPLEMENTATION
// there should only be one more thread in thread group than before we started	WITHOUT_CLASSIFICATION	0.999534567621478	WITHOUT_CLASSIFICATION	4.6543237852195954E-4	IMPLEMENTATION
// construct a new cache with thread's classloader and no limit	WITHOUT_CLASSIFICATION	0.999891407495751	WITHOUT_CLASSIFICATION	1.0859250424906119E-4	IMPLEMENTATION
//        Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); //        Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();	WITHOUT_CLASSIFICATION	0.9998189947093606	WITHOUT_CLASSIFICATION	1.8100529063939664E-4	IMPLEMENTATION
//        assertSame(script1, script2);	WITHOUT_CLASSIFICATION	0.9998445909994328	WITHOUT_CLASSIFICATION	1.5540900056726657E-4	IMPLEMENTATION
// void methods should work	WITHOUT_CLASSIFICATION	0.9999207271378386	WITHOUT_CLASSIFICATION	7.927286216134253E-5	IMPLEMENTATION
// methods with required = 4 or higher should bind and be callable using reflection // JRUBY-3649	WITHOUT_CLASSIFICATION	0.9999521855854167	WITHOUT_CLASSIFICATION	4.781441458332932E-5	IMPLEMENTATION
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999871277165656	WITHOUT_CLASSIFICATION	1.2872283434444131E-5	IMPLEMENTATION
// Ensure we have a new interpreter for each test. Previous we were using the //  same interpreter which caused problems as soon as one test failed.	WITHOUT_CLASSIFICATION	0.9999944812492569	WITHOUT_CLASSIFICATION	5.518750743124005E-6	IMPLEMENTATION
// Without a flush Ant will miss some of our output	WITHOUT_CLASSIFICATION	0.9999459515792443	WITHOUT_CLASSIFICATION	5.4048420755587376E-5	IMPLEMENTATION
// assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());	WITHOUT_CLASSIFICATION	0.9998272733107829	WITHOUT_CLASSIFICATION	1.7272668921707108E-4	IMPLEMENTATION
//        int n = 10;	WITHOUT_CLASSIFICATION	0.9999116620239508	WITHOUT_CLASSIFICATION	8.833797604926819E-5	IMPLEMENTATION
// there might be more test classes in a single file, so we iterate over them	WITHOUT_CLASSIFICATION	0.9999984006060915	WITHOUT_CLASSIFICATION	1.5993939085539604E-6	IMPLEMENTATION
//No ClassCastException!	WITHOUT_CLASSIFICATION	0.9994697657671203	WITHOUT_CLASSIFICATION	5.302342328796156E-4	IMPLEMENTATION
// value equality	WITHOUT_CLASSIFICATION	0.9996253087579638	WITHOUT_CLASSIFICATION	3.7469124203610884E-4	IMPLEMENTATION
// identity equality	WITHOUT_CLASSIFICATION	0.9994854777905362	WITHOUT_CLASSIFICATION	5.14522209463864E-4	IMPLEMENTATION
// bench straight-up integer fib(30)	WITHOUT_CLASSIFICATION	0.9998293622669844	WITHOUT_CLASSIFICATION	1.706377330156745E-4	IMPLEMENTATION
// bench Integer fib	WITHOUT_CLASSIFICATION	0.9993881635822232	WITHOUT_CLASSIFICATION	6.118364177769137E-4	IMPLEMENTATION
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9998830445803648	WITHOUT_CLASSIFICATION	1.1695541963519677E-4	IMPLEMENTATION
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9998830445803648	WITHOUT_CLASSIFICATION	1.1695541963519677E-4	IMPLEMENTATION
// bench fixnum-boxed fib	WITHOUT_CLASSIFICATION	0.9998830445803648	WITHOUT_CLASSIFICATION	1.1695541963519677E-4	IMPLEMENTATION
// bench straight-up long fib(30)	WITHOUT_CLASSIFICATION	0.9998545506377973	WITHOUT_CLASSIFICATION	1.4544936220276872E-4	IMPLEMENTATION
// bench Long fib	WITHOUT_CLASSIFICATION	0.999388336397326	WITHOUT_CLASSIFICATION	6.116636026739338E-4	IMPLEMENTATION
// skip this one, probably no 'ls' (windows)	WITHOUT_CLASSIFICATION	0.9992751078632898	WITHOUT_CLASSIFICATION	7.248921367102821E-4	IMPLEMENTATION
// start off with a neutral parent	WITHOUT_CLASSIFICATION	0.9999412230538649	WITHOUT_CLASSIFICATION	5.8776946135057745E-5	IMPLEMENTATION
/*            public class Hello {                public static String getMessage() {                    return ".....";                }            }            */	WITHOUT_CLASSIFICATION	0.9999949243433978	WITHOUT_CLASSIFICATION	5.075656602300074E-6	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999326483330024	WITHOUT_CLASSIFICATION	6.735166699758587E-5	IMPLEMENTATION
// Note: We can't use file.exists() to check whether the symlink // exists or not, because that method returns false for existing // but broken symlink. So, we try without the existence check, // but in the try-catch block. // MRI behavior: symlink? on broken symlink should return true.	WITHOUT_CLASSIFICATION	0.9999917575018833	WITHOUT_CLASSIFICATION	8.242498116652748E-6	IMPLEMENTATION
// We are creating a new IO object that shares the same // IOHandler (and fileno).	WITHOUT_CLASSIFICATION	0.9999760088855022	WITHOUT_CLASSIFICATION	2.399111449776737E-5	IMPLEMENTATION
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999994610368191	WITHOUT_CLASSIFICATION	5.389631808839725E-7	IMPLEMENTATION
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.999162082315616	WITHOUT_CLASSIFICATION	8.37917684384032E-4	IMPLEMENTATION
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9997525967397842	WITHOUT_CLASSIFICATION	2.474032602158302E-4	IMPLEMENTATION
// Translate "x || y" --> "x = (is_true(x) ? x : y)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, true, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9997059426156277	WITHOUT_CLASSIFICATION	2.940573843721967E-4	IMPLEMENTATION
// // Force the client socket to be blocking //	WITHOUT_CLASSIFICATION	0.9999284913339803	WITHOUT_CLASSIFICATION	7.150866601966431E-5	IMPLEMENTATION
// Additional context surrounding tokens that both the lexer and // grammar use.	WITHOUT_CLASSIFICATION	0.9994000140520862	WITHOUT_CLASSIFICATION	5.999859479138244E-4	IMPLEMENTATION
// Enebo:  c can never be antrhign but '.' // Why did I put this here?	WITHOUT_CLASSIFICATION	0.5289376838474799	WITHOUT_CLASSIFICATION	0.4710623161525202	IMPLEMENTATION
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9999729753572278	WITHOUT_CLASSIFICATION	2.7024642772233264E-5	IMPLEMENTATION
//[C,C] //[C, boolean]	WITHOUT_CLASSIFICATION	0.9994325134615626	WITHOUT_CLASSIFICATION	5.674865384373897E-4	IMPLEMENTATION
// Label for the start of the closure (used to implement redo) // Label for the end of the closure (used to implement retry)	WITHOUT_CLASSIFICATION	0.9964666221939711	WITHOUT_CLASSIFICATION	0.003533377806028985	IMPLEMENTATION
// ignore; job was cancelled // FIXME: is this ok?	WITHOUT_CLASSIFICATION	0.9999777309826635	WITHOUT_CLASSIFICATION	2.2269017336483252E-5	IMPLEMENTATION
//                    // check arity //                    checkArity(mv, scope);	WITHOUT_CLASSIFICATION	0.9997325900910444	WITHOUT_CLASSIFICATION	2.6740990895557896E-4	IMPLEMENTATION
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9992067276813918	WITHOUT_CLASSIFICATION	7.93272318608134E-4	IMPLEMENTATION
// we take the first method found as our "n" method, since for any non-specific // arity they'll all error the same. If an actual "n" method is created, we // use that.	WITHOUT_CLASSIFICATION	0.9999903696390945	WITHOUT_CLASSIFICATION	9.63036090560812E-6	IMPLEMENTATION
// Used by our duck-typification of Proc into interface types, to allow // coercing a simple proc into an interface parameter.	WITHOUT_CLASSIFICATION	0.9999997762395588	WITHOUT_CLASSIFICATION	2.2376044119806584E-7	IMPLEMENTATION
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999274532939942	WITHOUT_CLASSIFICATION	7.254670600574075E-5	IMPLEMENTATION
// it's either as converted as we can make it via above logic or it's // not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9353528948818093	WITHOUT_CLASSIFICATION	0.06464710511819076	IMPLEMENTATION
// package scheme 2: separate module for each full package name, constructed  // from the camel-cased package segments: Java::JavaLang::Object, 	WITHOUT_CLASSIFICATION	0.9999978331636588	WITHOUT_CLASSIFICATION	2.1668363413502733E-6	IMPLEMENTATION
// // construct the proxy method //	WITHOUT_CLASSIFICATION	0.9996959564220114	WITHOUT_CLASSIFICATION	3.0404357798869357E-4	IMPLEMENTATION
// line 159 "-" // %token constants	WITHOUT_CLASSIFICATION	0.999915727583958	WITHOUT_CLASSIFICATION	8.427241604211404E-5	IMPLEMENTATION
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999354414428218	WITHOUT_CLASSIFICATION	6.455855717821336E-5	IMPLEMENTATION
// line 152 "-" // %token constants	WITHOUT_CLASSIFICATION	0.999915727583958	WITHOUT_CLASSIFICATION	8.427241604211404E-5	IMPLEMENTATION
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999454384553285	WITHOUT_CLASSIFICATION	5.456154467147189E-5	IMPLEMENTATION
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999354414428218	WITHOUT_CLASSIFICATION	6.455855717821336E-5	IMPLEMENTATION
// We only need to pass in current scope if we are evaluating as a block (which // is only done for evals).  We need to pass this in so that we can appropriately scope // down to captured scopes when we are parsing.	WITHOUT_CLASSIFICATION	0.9999951787078706	WITHOUT_CLASSIFICATION	4.8212921294807755E-6	IMPLEMENTATION
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999603105755699	WITHOUT_CLASSIFICATION	3.9689424430175005E-5	IMPLEMENTATION
// A place to store that special hiding space that bindings need to implement things like: // eval("a = 1", binding); eval("p a").  All binding instances must get access to this // hidden shared scope.  We store it here.  This will be null if no binding has yet // been called.	WITHOUT_CLASSIFICATION	0.9537542454446946	IMPLEMENTATION	0.04624575455530536	WITHOUT_CLASSIFICATION
// TODO: make it 16 now ? // MUST be power of 2!	WITHOUT_CLASSIFICATION	0.6903538361853113	IMPLEMENTATION	0.3096461638146887	WITHOUT_CLASSIFICATION
// check visibility // dup method	WITHOUT_CLASSIFICATION	0.9990091555549407	WITHOUT_CLASSIFICATION	9.90844445059246E-4	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9995691752978717	WITHOUT_CLASSIFICATION	4.308247021283639E-4	IMPLEMENTATION
// unsigned int, native // unsigned long, native	WITHOUT_CLASSIFICATION	0.9998372362991518	WITHOUT_CLASSIFICATION	1.6276370084823414E-4	IMPLEMENTATION
//need padding //I'm fairly sure there is a library call to create a //string filled with a given char with a given length but I couldn't find it	WITHOUT_CLASSIFICATION	0.996591171831648	WITHOUT_CLASSIFICATION	0.0034088281683519878	IMPLEMENTATION
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999745335393833	WITHOUT_CLASSIFICATION	2.5466460616770098E-5	IMPLEMENTATION
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9997550173283638	WITHOUT_CLASSIFICATION	2.449826716362324E-4	IMPLEMENTATION
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.999543857115379	WITHOUT_CLASSIFICATION	4.5614288462109115E-4	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.969580981948471	WITHOUT_CLASSIFICATION	0.030419018051529065	IMPLEMENTATION
// Estimate the square root with the foremost 62 bits of squarD // bi and scale are a tandem	WITHOUT_CLASSIFICATION	0.999964312838402	WITHOUT_CLASSIFICATION	3.568716159788267E-5	IMPLEMENTATION
// captures // begin and end are used when not groups defined // source string	WITHOUT_CLASSIFICATION	0.9999927580922419	WITHOUT_CLASSIFICATION	7.241907758106798E-6	IMPLEMENTATION
// // INSTANCE VARIABLE RUBY METHODS //	WITHOUT_CLASSIFICATION	0.9998272733107829	WITHOUT_CLASSIFICATION	1.7272668921707108E-4	IMPLEMENTATION
// switch // while	WITHOUT_CLASSIFICATION	0.9995488501401345	WITHOUT_CLASSIFICATION	4.5114985986553183E-4	IMPLEMENTATION
// For nodes do not have their own scope so we pass null to indicate this. // 'For's are implemented as blocks in evaluation, but they have no scope so we // just deal with this lack of scope throughout its lifespan.  We should probably // change the way this works to get rid of multiple null checks.	WITHOUT_CLASSIFICATION	0.9920700946272476	WITHOUT_CLASSIFICATION	0.00792990537275236	IMPLEMENTATION
// This field is used during argument processing to avoid putting RubyArray // instances that are purely for utility purposes into ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999926970786405	WITHOUT_CLASSIFICATION	7.302921359444976E-6	IMPLEMENTATION
// Parent container for this context (can be dynamic!!) // If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure // List of IR instructions for this method	WITHOUT_CLASSIFICATION	0.9999226385486106	WITHOUT_CLASSIFICATION	7.736145138938478E-5	IMPLEMENTATION
// Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = false    //    beq(v1, false, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999946682341119	WITHOUT_CLASSIFICATION	5.3317658880292695E-6	IMPLEMENTATION
// expected	WITHOUT_CLASSIFICATION	0.9995594108477511	WITHOUT_CLASSIFICATION	4.4058915224892545E-4	IMPLEMENTATION
// Do nothing	WITHOUT_CLASSIFICATION	0.9997362442552428	WITHOUT_CLASSIFICATION	2.6375574475728445E-4	IMPLEMENTATION
// constructor	WITHOUT_CLASSIFICATION	0.9995332062352928	WITHOUT_CLASSIFICATION	4.667937647071954E-4	IMPLEMENTATION
// If a line is followed by a blank line put // it back.	WITHOUT_CLASSIFICATION	0.9998572671068194	WITHOUT_CLASSIFICATION	1.4273289318061995E-4	IMPLEMENTATION
/* $>: default output handle */	WITHOUT_CLASSIFICATION	0.9999787972945424	WITHOUT_CLASSIFICATION	2.1202705457594903E-5	IMPLEMENTATION
// line 423	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 486	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// Signal uses sun.misc.* classes, this is not allowed // in the security-sensitive environments	WITHOUT_CLASSIFICATION	0.9998616663036295	WITHOUT_CLASSIFICATION	1.3833369637050792E-4	IMPLEMENTATION
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999906958385898	WITHOUT_CLASSIFICATION	9.304161410172967E-6	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.999859841371815	WITHOUT_CLASSIFICATION	1.4015862818492517E-4	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.999859841371815	WITHOUT_CLASSIFICATION	1.4015862818492517E-4	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999939429961668	WITHOUT_CLASSIFICATION	6.057003833139108E-6	IMPLEMENTATION
// if there's no receiver, evaluate and pass in the superclass, or // pass self if it no superclass	WITHOUT_CLASSIFICATION	0.9999797973158888	WITHOUT_CLASSIFICATION	2.020268411123862E-5	IMPLEMENTATION
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9998140767608712	WITHOUT_CLASSIFICATION	1.859232391288746E-4	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.8660918200623108	IMPLEMENTATION	0.13390817993768925	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.8660918200623108	IMPLEMENTATION	0.13390817993768925	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.8660918200623108	IMPLEMENTATION	0.13390817993768925	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.8660918200623108	IMPLEMENTATION	0.13390817993768925	WITHOUT_CLASSIFICATION
// Decrease value to hit upper range.  	WITHOUT_CLASSIFICATION	0.9999189159433525	WITHOUT_CLASSIFICATION	8.10840566475127E-5	IMPLEMENTATION
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9998257165010112	WITHOUT_CLASSIFICATION	1.742834989888201E-4	IMPLEMENTATION
// "else" body	WITHOUT_CLASSIFICATION	0.9998110841223016	WITHOUT_CLASSIFICATION	1.8891587769845737E-4	IMPLEMENTATION
// done // done // done // Nothing to do for 1.8 // done // done // done // done // done // done // done? // done // done // done // done // done // done // done // done // done // done // done //            case DEFINEDNODE: return buildDefined(node, m); // Incomplete // done // done // done // done // done // done // done // done //            case ENSURENODE: return buildEnsureNode(node, m); // DEFERRED // done // done // done // done //            case FLIPNODE: return buildFlip(node, m); // SSS FIXME: What code generates this AST? // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done? // done // done // done // done // done // done -- partially //            case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); // DEFERRED SSS FIXME: What code generates this AST? // done //            case POSTEXENODE: return buildPostExe(node, m); // DEFERRED //            case PREEXENODE: return buildPreExe(node, m); // DEFERRED // done?? // done	WITHOUT_CLASSIFICATION	0.9992225000299805	WITHOUT_CLASSIFICATION	7.7749997001952E-4	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9993881635822232	WITHOUT_CLASSIFICATION	6.118364177769137E-4	IMPLEMENTATION
/* $+: string matches last paren. */	WITHOUT_CLASSIFICATION	0.9999992716751841	WITHOUT_CLASSIFICATION	7.283248158873415E-7	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999962364975818	WITHOUT_CLASSIFICATION	3.763502418309117E-6	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999962364975818	WITHOUT_CLASSIFICATION	3.763502418309117E-6	IMPLEMENTATION
// Ruby code frequently uses a platform check to choose "NUL:" on windows // but since that check doesn't work well on JRuby, we help it out	WITHOUT_CLASSIFICATION	0.9999929983594558	WITHOUT_CLASSIFICATION	7.001640544251574E-6	IMPLEMENTATION
/* 10! */	WITHOUT_CLASSIFICATION	0.9999972368064602	WITHOUT_CLASSIFICATION	2.7631935398027776E-6	IMPLEMENTATION
//            case RESCUENODE: return buildRescue(node, m); // DEFERRED //            case RETRYNODE: return buildRetry(node, m); // DEFERRED // done	WITHOUT_CLASSIFICATION	0.9997980387192071	WITHOUT_CLASSIFICATION	2.0196128079279352E-4	IMPLEMENTATION
// Is this instruction live or dead?  During optimization passes, if this instruction // causes no side-effects and the result of the instruction is not needed by anyone else, // we can remove this instruction altogether without affecting program correctness.	WITHOUT_CLASSIFICATION	0.9135658102269654	IMPLEMENTATION	0.08643418977303453	WITHOUT_CLASSIFICATION
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9998675545983852	WITHOUT_CLASSIFICATION	1.3244540161484858E-4	IMPLEMENTATION
// first, iterate over all required args	WITHOUT_CLASSIFICATION	0.9998176100258424	WITHOUT_CLASSIFICATION	1.8238997415761143E-4	IMPLEMENTATION
// // Determine if the parameter might be passed as a 32bit int parameter. // This just applies to buffer/pointer types. //	WITHOUT_CLASSIFICATION	0.9999992972122781	WITHOUT_CLASSIFICATION	7.027877219580914E-7	IMPLEMENTATION
//Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());	WITHOUT_CLASSIFICATION	0.9992076509726602	WITHOUT_CLASSIFICATION	7.92349027339752E-4	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999454384553285	WITHOUT_CLASSIFICATION	5.456154467147189E-5	IMPLEMENTATION
// line 449	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 495	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// Management/monitoring	WITHOUT_CLASSIFICATION	0.9998830445803648	WITHOUT_CLASSIFICATION	1.1695541963519677E-4	IMPLEMENTATION
// if we've found the last char of the separator, // and we've found at least as many characters as separator length, // and the last n characters of our buffer match the separator, we're done	WITHOUT_CLASSIFICATION	0.9999998445084118	WITHOUT_CLASSIFICATION	1.5549158804302672E-7	IMPLEMENTATION
/* 14! */	WITHOUT_CLASSIFICATION	0.9999972368064602	WITHOUT_CLASSIFICATION	2.7631935398027776E-6	IMPLEMENTATION
// Process any set of annotations // No supported options	WITHOUT_CLASSIFICATION	0.999993539469318	WITHOUT_CLASSIFICATION	6.460530681978155E-6	IMPLEMENTATION
// add to the jitted methods set	WITHOUT_CLASSIFICATION	0.9998883218430837	WITHOUT_CLASSIFICATION	1.1167815691616706E-4	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.999968901911425	WITHOUT_CLASSIFICATION	3.109808857500781E-5	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.999968901911425	WITHOUT_CLASSIFICATION	3.109808857500781E-5	IMPLEMENTATION
//            case SCLASSNODE: return buildSClass(node, m); // DEFERRED // done // done // done // done // done // done // done // done //            case UNDEFNODE: return buildUndef(node, m); // DEFERRED // done //            case VALIASNODE: return buildVAlias(node, m); // DEFERRED // done // done	WITHOUT_CLASSIFICATION	0.9997980387192071	WITHOUT_CLASSIFICATION	2.019612807927937E-4	IMPLEMENTATION
// // Adding a post-invoke for the cb result serves to both keep it alive // until after the function returns, and allows us to clean up the native // trampoline early, instead of letting them accumulate until a GC run //	WITHOUT_CLASSIFICATION	0.9999125026192144	WITHOUT_CLASSIFICATION	8.749738078565037E-5	IMPLEMENTATION
/* The Java method doesn't care what class it is, but we need to               know what to convert it to, so we use the object's own class.               If that doesn't help, we use String to force a call to the               object's "to_s" method. */	WITHOUT_CLASSIFICATION	0.966570062470417	WITHOUT_CLASSIFICATION	0.033429937529582995	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.9998730262994077	WITHOUT_CLASSIFICATION	1.2697370059236692E-4	IMPLEMENTATION
// Atomic integers for symbol and method IDs	WITHOUT_CLASSIFICATION	0.9998360972636676	WITHOUT_CLASSIFICATION	1.6390273633249005E-4	IMPLEMENTATION
/* 18! */	WITHOUT_CLASSIFICATION	0.9999972368064602	WITHOUT_CLASSIFICATION	2.7631935398027776E-6	IMPLEMENTATION
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9138566125607785	WITHOUT_CLASSIFICATION	0.08614338743922147	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999437532607724	WITHOUT_CLASSIFICATION	5.6246739227549816E-5	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999437532607724	WITHOUT_CLASSIFICATION	5.6246739227549816E-5	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999437532607724	WITHOUT_CLASSIFICATION	5.6246739227549816E-5	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999437532607724	WITHOUT_CLASSIFICATION	5.6246739227549816E-5	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999993403003206	WITHOUT_CLASSIFICATION	6.596996794555516E-7	IMPLEMENTATION
/*      * This method takes as input a map of operands to their values, and outputs     * the result of this instruction.     *     * If the value map provides a value for any of the instruction's operands     * the expectation is that the operand will be replaced with the simplified value.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify.     *     * @param valueMap Mapping from operands to their simplified values     * @returns simplified result / output of this instruction     */	WITHOUT_CLASSIFICATION	0.9999999954962161	WITHOUT_CLASSIFICATION	4.503783983338007E-9	IMPLEMENTATION
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9957756742402818	WITHOUT_CLASSIFICATION	0.004224325759718187	IMPLEMENTATION
// An atomic long for generating DynamicMethod serial numbers	WITHOUT_CLASSIFICATION	0.9999019377082681	WITHOUT_CLASSIFICATION	9.806229173190659E-5	IMPLEMENTATION
// MRI behavior: always check whether the file is writable // or not, even if we are to write 0 bytes.	WITHOUT_CLASSIFICATION	0.9999908834997593	WITHOUT_CLASSIFICATION	9.116500240683924E-6	IMPLEMENTATION
/* 22! */	WITHOUT_CLASSIFICATION	0.9999972368064602	WITHOUT_CLASSIFICATION	2.7631935398027776E-6	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.999431391890446	WITHOUT_CLASSIFICATION	5.686081095538633E-4	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999459484637785	WITHOUT_CLASSIFICATION	5.405153622158947E-5	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999459484637785	WITHOUT_CLASSIFICATION	5.405153622158947E-5	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999459484637785	WITHOUT_CLASSIFICATION	5.405153622158947E-5	IMPLEMENTATION
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999996797397104	WITHOUT_CLASSIFICATION	3.2026028969334E-7	IMPLEMENTATION
// Build a new class and add it to the current scope (could be a script / module / class)	WITHOUT_CLASSIFICATION	0.9999383363639741	WITHOUT_CLASSIFICATION	6.16636360259101E-5	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999501601643281	WITHOUT_CLASSIFICATION	4.983983567175684E-5	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999501601643281	WITHOUT_CLASSIFICATION	4.983983567175684E-5	IMPLEMENTATION
// AF_INET	WITHOUT_CLASSIFICATION	0.9999817067840583	WITHOUT_CLASSIFICATION	1.8293215941744205E-5	IMPLEMENTATION
//////////////////////////////////////////////////////////////////////////// // Now we provide default impls of a number of signatures. For each arity, // we first generate a non-block version of the method, which just adds // NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can // potentially take a block, to only generate the block-receiving signature // and still avoid arg boxing. // // We then provide default implementations of each block-accepting method // that in turn call the IRubyObject[]+Block version of call. This then // finally falls back on the minimum implementation requirement for // dynamic method handles. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9828040176628735	WITHOUT_CLASSIFICATION	0.017195982337126558	IMPLEMENTATION
// Because we implement Java interfaces now, we need a new === that's // aware of those additional "virtual" supertypes	WITHOUT_CLASSIFICATION	0.9589524581373846	WITHOUT_CLASSIFICATION	0.04104754186261541	IMPLEMENTATION
// BASE64	WITHOUT_CLASSIFICATION	0.9999817067840583	WITHOUT_CLASSIFICATION	1.8293215941744205E-5	IMPLEMENTATION
/* note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY         * when value is an integer less than 1.         * We treat 0 as a special case to avoid Domain error.         */	WITHOUT_CLASSIFICATION	0.9999979122027379	WITHOUT_CLASSIFICATION	2.0877972621257346E-6	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.999759332890383	WITHOUT_CLASSIFICATION	2.4066710961704213E-4	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999973567971581	WITHOUT_CLASSIFICATION	2.6432028419684403E-6	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999973567971581	WITHOUT_CLASSIFICATION	2.6432028419684403E-6	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9997527246344343	WITHOUT_CLASSIFICATION	2.472753655656376E-4	IMPLEMENTATION
// SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode // We won't get here for argument receives!  So, buildDasgn is called for // assignments to block variables within a block.  As far as the IR is concerned, // this is just a simple copy	WITHOUT_CLASSIFICATION	0.9999999915638077	WITHOUT_CLASSIFICATION	8.436192219165795E-9	IMPLEMENTATION
// getSimplifiedOperand returns the value of this operand, fully simplified // getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away // // The value is used during optimizations and propagated through the IR.  But, it is thrown away after that. // But, the operand form is used for constructing the compound objects represented by the operand. // // Example: a = [1], b = [3,4], c = [a,b], d = [2,c] //   -- getValue(c) = [1,[3,4]];     getSimplifiedOperand(c) = [1, b] //   -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] // // Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. // So, if contents of a or b is modified, the "simplified value"s of c and d also change!  This difference // is captured by these two methods.	WITHOUT_CLASSIFICATION	0.99999999477595	WITHOUT_CLASSIFICATION	5.224049931779568E-9	IMPLEMENTATION
//IRubyObject protocol = args[4];	WITHOUT_CLASSIFICATION	0.9990776620066099	WITHOUT_CLASSIFICATION	9.223379933900758E-4	IMPLEMENTATION
// promise to implement three to N with block	WITHOUT_CLASSIFICATION	0.9825014832930531	WITHOUT_CLASSIFICATION	0.017498516706946975	IMPLEMENTATION
// Ruby's OMG capture all source in a Hash feature // Add each line to buffer when encountering newline or EOF for first time.	WITHOUT_CLASSIFICATION	0.9999990200410886	WITHOUT_CLASSIFICATION	9.799589113058164E-7	IMPLEMENTATION
// carriage return	WITHOUT_CLASSIFICATION	0.9992967911513281	WITHOUT_CLASSIFICATION	7.032088486719865E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.999707888151036	WITHOUT_CLASSIFICATION	2.9211184896400533E-4	IMPLEMENTATION
// String construction routines by NOT byte[] buffer and making the target String shared 	WITHOUT_CLASSIFICATION	0.9999812896597796	WITHOUT_CLASSIFICATION	1.8710340220379767E-5	IMPLEMENTATION
// insert all nodes in sequence, hash them in the final instruction // KEY	WITHOUT_CLASSIFICATION	0.9999876386120795	WITHOUT_CLASSIFICATION	1.2361387920416129E-5	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999819082774364	WITHOUT_CLASSIFICATION	1.8091722563620987E-5	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9034544572011034	WITHOUT_CLASSIFICATION	0.09654554279889656	IMPLEMENTATION
// Basic Block id // CFG that this basic block belongs to // All basic blocks have a starting label // List of non-label instructions	WITHOUT_CLASSIFICATION	0.999895062067021	WITHOUT_CLASSIFICATION	1.0493793297912225E-4	IMPLEMENTATION
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9996088677588695	WITHOUT_CLASSIFICATION	3.9113224113054086E-4	IMPLEMENTATION
// For all uninitialized specific arities, we defer to the "n" method which // should raise appropriate error in all cases.	WITHOUT_CLASSIFICATION	0.9957572045566078	WITHOUT_CLASSIFICATION	0.00424279544339225	IMPLEMENTATION
// implement is called to force this class to create stubs for all // methods in the given interface, so they'll show up in the list // of methods and be invocable without passing through method_missing	WITHOUT_CLASSIFICATION	0.9999791053165132	WITHOUT_CLASSIFICATION	2.0894683486742383E-5	IMPLEMENTATION
// CASE IR instructions are dummy instructions  // -- all when/then clauses have been converted into if-then-else blocks	WITHOUT_CLASSIFICATION	0.9999153720941764	WITHOUT_CLASSIFICATION	8.462790582360701E-5	IMPLEMENTATION
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.999967203691965	WITHOUT_CLASSIFICATION	3.279630803490104E-5	IMPLEMENTATION
// leave it null and fall back on our normal invocation logic	WITHOUT_CLASSIFICATION	0.9994210293127385	WITHOUT_CLASSIFICATION	5.789706872615459E-4	IMPLEMENTATION
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999779979505543	WITHOUT_CLASSIFICATION	2.2002049445638285E-5	IMPLEMENTATION
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9974133468788322	WITHOUT_CLASSIFICATION	0.0025866531211677954	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9993095464430901	WITHOUT_CLASSIFICATION	6.904535569097694E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9993095464430901	WITHOUT_CLASSIFICATION	6.904535569097694E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9993095464430901	WITHOUT_CLASSIFICATION	6.904535569097694E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9993095464430901	WITHOUT_CLASSIFICATION	6.904535569097694E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9993095464430901	WITHOUT_CLASSIFICATION	6.904535569097694E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9993095464430901	WITHOUT_CLASSIFICATION	6.904535569097694E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9993095464430901	WITHOUT_CLASSIFICATION	6.904535569097694E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9993095464430901	WITHOUT_CLASSIFICATION	6.904535569097694E-4	IMPLEMENTATION
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999537255481109	WITHOUT_CLASSIFICATION	4.627445188907995E-5	IMPLEMENTATION
/* fall through */	WITHOUT_CLASSIFICATION	0.999889780456456	WITHOUT_CLASSIFICATION	1.1021954354396298E-4	IMPLEMENTATION
// deal with case when "other" is not a string	WITHOUT_CLASSIFICATION	0.9998485965190699	WITHOUT_CLASSIFICATION	1.5140348093021746E-4	IMPLEMENTATION
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999915240069726	WITHOUT_CLASSIFICATION	8.47599302742301E-6	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999326483330024	WITHOUT_CLASSIFICATION	6.735166699758587E-5	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999326483330024	WITHOUT_CLASSIFICATION	6.735166699758587E-5	IMPLEMENTATION
// store argument count information into scope	WITHOUT_CLASSIFICATION	0.9999940250632273	WITHOUT_CLASSIFICATION	5.9749367726963485E-6	IMPLEMENTATION
// the load method is used for loading as a top-level script, and prepares appropriate scoping around the code	WITHOUT_CLASSIFICATION	0.9999234054491475	WITHOUT_CLASSIFICATION	7.659455085254432E-5	IMPLEMENTATION
// First, build assignments for specific named arguments	WITHOUT_CLASSIFICATION	0.9999650993466931	WITHOUT_CLASSIFICATION	3.490065330699022E-5	IMPLEMENTATION
//        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } //        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }	WITHOUT_CLASSIFICATION	0.9999613824152257	WITHOUT_CLASSIFICATION	3.861758477437504E-5	IMPLEMENTATION
// get current context	WITHOUT_CLASSIFICATION	0.9997177504373048	WITHOUT_CLASSIFICATION	2.8224956269528245E-4	IMPLEMENTATION
// octal constant	WITHOUT_CLASSIFICATION	0.9991004380063135	WITHOUT_CLASSIFICATION	8.99561993686541E-4	IMPLEMENTATION
// read	WITHOUT_CLASSIFICATION	0.9999934811716931	WITHOUT_CLASSIFICATION	6.5188283069676286E-6	IMPLEMENTATION
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9993507748155759	WITHOUT_CLASSIFICATION	6.492251844241277E-4	IMPLEMENTATION
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9994209160386427	WITHOUT_CLASSIFICATION	5.790839613573165E-4	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9997589095028012	WITHOUT_CLASSIFICATION	2.4109049719883778E-4	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9997589095028012	WITHOUT_CLASSIFICATION	2.4109049719883778E-4	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9997589095028012	WITHOUT_CLASSIFICATION	2.4109049719883778E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999565395151844	WITHOUT_CLASSIFICATION	4.346048481569286E-5	IMPLEMENTATION
// at end	WITHOUT_CLASSIFICATION	0.9999889099609497	WITHOUT_CLASSIFICATION	1.1090039050350343E-5	IMPLEMENTATION
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999731055088057	WITHOUT_CLASSIFICATION	2.689449119428033E-5	IMPLEMENTATION
// save blocking state	WITHOUT_CLASSIFICATION	0.99997492620307	WITHOUT_CLASSIFICATION	2.507379692996235E-5	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9998830261535862	WITHOUT_CLASSIFICATION	1.1697384641393215E-4	IMPLEMENTATION
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999566178908069	WITHOUT_CLASSIFICATION	4.338210919296684E-5	IMPLEMENTATION
// fall back on empty env when security disallows environment var access (like in an applet)	WITHOUT_CLASSIFICATION	0.9999972704716119	WITHOUT_CLASSIFICATION	2.72952838818231E-6	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9998700187571089	WITHOUT_CLASSIFICATION	1.2998124289112926E-4	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9998700187571089	WITHOUT_CLASSIFICATION	1.2998124289112926E-4	IMPLEMENTATION
// load null block	WITHOUT_CLASSIFICATION	0.9989383756168487	WITHOUT_CLASSIFICATION	0.0010616243831512455	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999988911141039	WITHOUT_CLASSIFICATION	1.1088858960893554E-6	IMPLEMENTATION
// nothing else to here - the module version will be // included in the class.	WITHOUT_CLASSIFICATION	0.999994001160186	WITHOUT_CLASSIFICATION	5.9988398139899346E-6	IMPLEMENTATION
// JRUBY-1000, fail early when attempting to subclass a final Java class; // solved here by adding an exception-throwing "inherited"	WITHOUT_CLASSIFICATION	0.9999904378537806	WITHOUT_CLASSIFICATION	9.562146219404273E-6	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9985966518893483	WITHOUT_CLASSIFICATION	0.001403348110651645	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9985966518893483	WITHOUT_CLASSIFICATION	0.001403348110651645	IMPLEMENTATION
// Translate ret = (a || b) to ret = (a ? true : b) as follows //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = true //    beq(v1, true, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999930148353883	WITHOUT_CLASSIFICATION	6.985164611719619E-6	IMPLEMENTATION
// Initial precision is that of double numbers 2^63/2 ~ 4E18 // 63-1 an even number of number bits // precision seems 16 to 18 digits	WITHOUT_CLASSIFICATION	0.9999990997768758	WITHOUT_CLASSIFICATION	9.00223124214021E-7	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9996507087342127	WITHOUT_CLASSIFICATION	3.4929126578733534E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.99991120461732	WITHOUT_CLASSIFICATION	8.879538267995327E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.99991120461732	WITHOUT_CLASSIFICATION	8.879538267995327E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.99991120461732	WITHOUT_CLASSIFICATION	8.879538267995327E-5	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.9995307731697002	WITHOUT_CLASSIFICATION	4.692268302997183E-4	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.9997955112954687	WITHOUT_CLASSIFICATION	2.0448870453125304E-4	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.9997955112954687	WITHOUT_CLASSIFICATION	2.0448870453125304E-4	IMPLEMENTATION
// check arity	WITHOUT_CLASSIFICATION	0.9989475686014283	WITHOUT_CLASSIFICATION	0.0010524313985717055	IMPLEMENTATION
// check arity	WITHOUT_CLASSIFICATION	0.9989475686014283	WITHOUT_CLASSIFICATION	0.0010524313985717055	IMPLEMENTATION
// create the class	WITHOUT_CLASSIFICATION	0.9996657411579645	WITHOUT_CLASSIFICATION	3.3425884203547995E-4	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999352382862736	WITHOUT_CLASSIFICATION	6.476171372639072E-5	IMPLEMENTATION
// No hex value after the 'x'.	WITHOUT_CLASSIFICATION	0.9999764983853919	WITHOUT_CLASSIFICATION	2.3501614608087166E-5	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.9999817067840583	WITHOUT_CLASSIFICATION	1.8293215941744205E-5	IMPLEMENTATION
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999823323830926	WITHOUT_CLASSIFICATION	1.7667616907353572E-5	IMPLEMENTATION
// Let m be the exact digits precision in an earlier! loop	WITHOUT_CLASSIFICATION	0.9999995779588651	WITHOUT_CLASSIFICATION	4.2204113502298236E-7	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999849903527567	WITHOUT_CLASSIFICATION	1.5009647243354268E-5	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999730797161539	WITHOUT_CLASSIFICATION	2.6920283846099284E-5	IMPLEMENTATION
// Label for the start of the method // Label for the end of the method	WITHOUT_CLASSIFICATION	0.9997927856362736	WITHOUT_CLASSIFICATION	2.0721436372645182E-4	IMPLEMENTATION
// comparisons & checks // checks if the operand is non-null and non-false // EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...	WITHOUT_CLASSIFICATION	0.9999999161393188	WITHOUT_CLASSIFICATION	8.386068118965737E-8	IMPLEMENTATION
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9993881635822232	WITHOUT_CLASSIFICATION	6.118364177769137E-4	IMPLEMENTATION
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9994660728611751	WITHOUT_CLASSIFICATION	5.339271388249386E-4	IMPLEMENTATION
// all done with lookup attempts, release monitor	WITHOUT_CLASSIFICATION	0.9998883750844765	WITHOUT_CLASSIFICATION	1.1162491552348534E-4	IMPLEMENTATION
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999869220813293	WITHOUT_CLASSIFICATION	1.3077918670752172E-5	IMPLEMENTATION
// Create list of interface names to proxy (and make sure they really are interfaces) // Also build a hashcode from all classes to use for retrieving previously-created impl	WITHOUT_CLASSIFICATION	0.9999997171401275	WITHOUT_CLASSIFICATION	2.828598724648321E-7	IMPLEMENTATION
// Construct local variables based on parameter names passed in	WITHOUT_CLASSIFICATION	0.9999625683136206	WITHOUT_CLASSIFICATION	3.743168637940157E-5	IMPLEMENTATION
// Value of "TZ" property is of a bit different format, // which confuses the Java's TimeZone.getTimeZone(id) method, // and so, we need to convert it.	WITHOUT_CLASSIFICATION	0.9989756955818822	WITHOUT_CLASSIFICATION	0.001024304418117888	IMPLEMENTATION
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9988880946256267	WITHOUT_CLASSIFICATION	0.0011119053743733098	IMPLEMENTATION
// ensure the object is associated with the wrapper we found it in, // so that if it comes back we don't re-wrap it	WITHOUT_CLASSIFICATION	0.999900537935024	WITHOUT_CLASSIFICATION	9.946206497599024E-5	IMPLEMENTATION
// return sqrt(squarD) with precision of rootMC	WITHOUT_CLASSIFICATION	0.9998513283470077	WITHOUT_CLASSIFICATION	1.4867165299221413E-4	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.969580981948471	WITHOUT_CLASSIFICATION	0.030419018051529065	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.99991120461732	WITHOUT_CLASSIFICATION	8.879538267995327E-5	IMPLEMENTATION
// Get a new label using the provided label prefix	WITHOUT_CLASSIFICATION	0.9999969507670883	WITHOUT_CLASSIFICATION	3.049232911751707E-6	IMPLEMENTATION
// normal exit, perform finally and return	WITHOUT_CLASSIFICATION	0.9997483463451032	WITHOUT_CLASSIFICATION	2.5165365489679447E-4	IMPLEMENTATION
// coerce arguments	WITHOUT_CLASSIFICATION	0.999403563600415	WITHOUT_CLASSIFICATION	5.964363995849461E-4	IMPLEMENTATION
// 0.0 is ok // float range // inverted float range? // NaN // +infinity // -infinity	WITHOUT_CLASSIFICATION	0.9996445207385891	WITHOUT_CLASSIFICATION	3.554792614108872E-4	IMPLEMENTATION
/* expected */	WITHOUT_CLASSIFICATION	0.9999334250616634	WITHOUT_CLASSIFICATION	6.657493833661582E-5	IMPLEMENTATION
// set this class's method names in var @__java_ovrd_methods if this // is the new class; otherwise, get method names from there if this is // a proxy superclass.	WITHOUT_CLASSIFICATION	0.9999997804717949	WITHOUT_CLASSIFICATION	2.1952820511233942E-7	IMPLEMENTATION
/* ignore backslashed spaces in %w */	WITHOUT_CLASSIFICATION	0.999997259927884	WITHOUT_CLASSIFICATION	2.7400721160517917E-6	IMPLEMENTATION
// Invert the sign, since TZ format and Java format // use opposite signs, sigh... Also, Java API requires // the sign to be always present, be it "+" or "-".	WITHOUT_CLASSIFICATION	0.9994797294304738	WITHOUT_CLASSIFICATION	5.202705695261775E-4	IMPLEMENTATION
// no binding given, use 0 for both	WITHOUT_CLASSIFICATION	0.9998285358376912	WITHOUT_CLASSIFICATION	1.7146416230886199E-4	IMPLEMENTATION
// <=> may return nil in many circumstances, e.g. 3 <=> NaN        	WITHOUT_CLASSIFICATION	0.9999598886506742	WITHOUT_CLASSIFICATION	4.011134932584251E-5	IMPLEMENTATION
// use numbered access method	WITHOUT_CLASSIFICATION	0.9988868493954056	WITHOUT_CLASSIFICATION	0.0011131506045943748	IMPLEMENTATION
// Always use "GMT" since that's required by Java API.	WITHOUT_CLASSIFICATION	0.9998867330026631	WITHOUT_CLASSIFICATION	1.1326699733689384E-4	IMPLEMENTATION
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9998619473916887	WITHOUT_CLASSIFICATION	1.380526083113938E-4	IMPLEMENTATION
// The dataStruct is a place where custom information can be // contained for core implementations that doesn't necessarily // want to go to the trouble of creating a subclass of // RubyObject. The OpenSSL implementation uses this heavily to // save holder objects containing Java cryptography objects. // Java integration uses this to store the Java object ref. //protected transient Object dataStruct;	WITHOUT_CLASSIFICATION	0.9999601323956442	WITHOUT_CLASSIFICATION	3.986760435587306E-5	IMPLEMENTATION
// Remaining arguments are for the script itself	WITHOUT_CLASSIFICATION	0.9999801894386394	WITHOUT_CLASSIFICATION	1.98105613606154E-5	IMPLEMENTATION
// arg grouping, use slower arg walking logic	WITHOUT_CLASSIFICATION	0.9996966729028263	WITHOUT_CLASSIFICATION	3.033270971737186E-4	IMPLEMENTATION
// build scope names string	WITHOUT_CLASSIFICATION	0.9999918796084702	WITHOUT_CLASSIFICATION	8.120391529681506E-6	IMPLEMENTATION
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999994959955847	WITHOUT_CLASSIFICATION	5.040044154025278E-7	IMPLEMENTATION
// Here we create an "anonymous" exception type used for unrolling the stack. // MRI creates a new one for *every call* to timeout, which can be costly. // We opt to use a single exception type for all cases to avoid this overhead.	WITHOUT_CLASSIFICATION	0.9997938505473091	WITHOUT_CLASSIFICATION	2.0614945269095694E-4	IMPLEMENTATION
// finally	WITHOUT_CLASSIFICATION	0.9999818697192392	WITHOUT_CLASSIFICATION	1.8130280760910503E-5	IMPLEMENTATION
// MRI behavior: With TZ equal to "GMT" or "UTC", Time.now // is *NOT* considered as a proper GMT/UTC time: //   ENV['TZ']="GMT" //   Time.now.gmt? ==> false //   ENV['TZ']="UTC" //   Time.now.utc? ==> false // Hence, we need to adjust for that.	WITHOUT_CLASSIFICATION	0.999950629548378	WITHOUT_CLASSIFICATION	4.937045162211279E-5	IMPLEMENTATION
// ?l  | boolean | True if file1 exists and is a symbolic link	WITHOUT_CLASSIFICATION	0.9999981392707314	WITHOUT_CLASSIFICATION	1.8607292684657382E-6	IMPLEMENTATION
// This try/catch is to allow failing over to the "commands" logic // when running from within a jruby-complete jar file, which has // jruby.home = a jar file URL that does not resolve correctly with // JRubyFile.create.	WITHOUT_CLASSIFICATION	0.9971004466489148	WITHOUT_CLASSIFICATION	0.002899553351085071	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9986811919255475	WITHOUT_CLASSIFICATION	0.001318808074452482	IMPLEMENTATION
// specific arity	WITHOUT_CLASSIFICATION	0.9989891702466039	WITHOUT_CLASSIFICATION	0.0010108297533959975	IMPLEMENTATION
// In the case of two arguments, MRI will discard the portion of // the first argument after a decimal point (i.e., "floor"). // However in the case of a single argument, any portion after // the decimal point is honored.	WITHOUT_CLASSIFICATION	0.9999935856275924	WITHOUT_CLASSIFICATION	6.414372407555192E-6	IMPLEMENTATION
// ?w  | boolean | True if file1 exists and is writable by effective uid/gid	WITHOUT_CLASSIFICATION	0.9999986577236457	WITHOUT_CLASSIFICATION	1.3422763542785549E-6	IMPLEMENTATION
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9998272733107829	WITHOUT_CLASSIFICATION	1.7272668921707108E-4	IMPLEMENTATION
/*    @JRubyMethod    public IRubyObject to_proc() {        return RubyProc.newProc(getRuntime(),                                CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()),                                Block.Type.PROC);    }    */	WITHOUT_CLASSIFICATION	0.9999903927358286	WITHOUT_CLASSIFICATION	9.607264171454576E-6	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9998644460299168	WITHOUT_CLASSIFICATION	1.355539700832243E-4	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9998644460299168	WITHOUT_CLASSIFICATION	1.355539700832243E-4	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999127494548403	WITHOUT_CLASSIFICATION	8.725054515966428E-5	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999127494548403	WITHOUT_CLASSIFICATION	8.725054515966428E-5	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9955528557517055	WITHOUT_CLASSIFICATION	0.004447144248294498	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9955528557517055	WITHOUT_CLASSIFICATION	0.004447144248294498	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999937824034942	WITHOUT_CLASSIFICATION	6.217596505868827E-6	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999937824034942	WITHOUT_CLASSIFICATION	6.217596505868827E-6	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9993881635822232	WITHOUT_CLASSIFICATION	6.118364177769137E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9993881635822232	WITHOUT_CLASSIFICATION	6.118364177769137E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9993881635822232	WITHOUT_CLASSIFICATION	6.118364177769137E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9993881635822232	WITHOUT_CLASSIFICATION	6.118364177769137E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9993881635822232	WITHOUT_CLASSIFICATION	6.118364177769137E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9993881635822232	WITHOUT_CLASSIFICATION	6.118364177769137E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9993881635822232	WITHOUT_CLASSIFICATION	6.118364177769137E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9993881635822232	WITHOUT_CLASSIFICATION	6.118364177769137E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9993881635822232	WITHOUT_CLASSIFICATION	6.118364177769137E-4	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9998915143152792	WITHOUT_CLASSIFICATION	1.0848568472065885E-4	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9998915143152792	WITHOUT_CLASSIFICATION	1.0848568472065885E-4	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9998915143152792	WITHOUT_CLASSIFICATION	1.0848568472065885E-4	IMPLEMENTATION
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9997894407060599	WITHOUT_CLASSIFICATION	2.105592939401188E-4	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999944967302533	WITHOUT_CLASSIFICATION	5.503269746667889E-6	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999944967302533	WITHOUT_CLASSIFICATION	5.503269746667889E-6	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999944967302533	WITHOUT_CLASSIFICATION	5.503269746667889E-6	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9998236345752434	WITHOUT_CLASSIFICATION	1.763654247566843E-4	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9998236345752434	WITHOUT_CLASSIFICATION	1.763654247566843E-4	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9998236345752434	WITHOUT_CLASSIFICATION	1.763654247566843E-4	IMPLEMENTATION
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9998272733107829	WITHOUT_CLASSIFICATION	1.7272668921707108E-4	IMPLEMENTATION
// backspace	WITHOUT_CLASSIFICATION	0.9993889396259201	WITHOUT_CLASSIFICATION	6.110603740798599E-4	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
/* package-private */	WITHOUT_CLASSIFICATION	0.9999823323830926	WITHOUT_CLASSIFICATION	1.7667616907353572E-5	IMPLEMENTATION
// fall through	WITHOUT_CLASSIFICATION	0.999270752153187	WITHOUT_CLASSIFICATION	7.292478468129765E-4	IMPLEMENTATION
// fall through	WITHOUT_CLASSIFICATION	0.999270752153187	WITHOUT_CLASSIFICATION	7.292478468129765E-4	IMPLEMENTATION
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9997738604125012	WITHOUT_CLASSIFICATION	2.2613958749876989E-4	IMPLEMENTATION
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.999561924927213	WITHOUT_CLASSIFICATION	4.3807507278702143E-4	IMPLEMENTATION
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.999561924927213	WITHOUT_CLASSIFICATION	4.3807507278702143E-4	IMPLEMENTATION
/**      * Nested class whose instances act as thunks reacting to to_str method     * called from (Exception#to_str, Exception#message)     * MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!",     * to_str implementation: "name_err_mesg_to_str"     *     * TODO: this class should not be lookupable     */	WITHOUT_CLASSIFICATION	0.9734389385591771	IMPLEMENTATION	0.026561061440822948	WITHOUT_CLASSIFICATION
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9991565511629946	WITHOUT_CLASSIFICATION	8.434488370053535E-4	IMPLEMENTATION
// The name of this source (e.g. a filename: foo.rb)	WITHOUT_CLASSIFICATION	0.9999739232800561	WITHOUT_CLASSIFICATION	2.6076719943859434E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999708713992483	WITHOUT_CLASSIFICATION	2.912860075163108E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999708713992483	WITHOUT_CLASSIFICATION	2.912860075163108E-5	IMPLEMENTATION
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9999975149115851	WITHOUT_CLASSIFICATION	2.4850884148487633E-6	IMPLEMENTATION
// We yield here to hopefully permit the target thread to schedule // MRI immediately schedules it, so this is close but not exact	WITHOUT_CLASSIFICATION	0.999941501719614	WITHOUT_CLASSIFICATION	5.849828038587146E-5	IMPLEMENTATION
// note that addMethod now does its own put, so any change made to // functionality here should be made there as well 	WITHOUT_CLASSIFICATION	0.9999939539875303	WITHOUT_CLASSIFICATION	6.046012469730919E-6	IMPLEMENTATION
/* Currently dead code, but useful when we figure out how to actually perform translit.    private static boolean isTranslit(String encoding) {        return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false;    }*/	WITHOUT_CLASSIFICATION	0.982913050132913	WITHOUT_CLASSIFICATION	0.01708694986708695	IMPLEMENTATION
// empirically it appears that to_ary coersions always return array or nil, so this // should always be an array by now.	WITHOUT_CLASSIFICATION	0.9999162271809302	WITHOUT_CLASSIFICATION	8.377281906974176E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999708713992483	WITHOUT_CLASSIFICATION	2.912860075163108E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999708713992483	WITHOUT_CLASSIFICATION	2.912860075163108E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999708713992483	WITHOUT_CLASSIFICATION	2.912860075163108E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999708713992483	WITHOUT_CLASSIFICATION	2.912860075163108E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999708713992483	WITHOUT_CLASSIFICATION	2.912860075163108E-5	IMPLEMENTATION
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999897041100972	WITHOUT_CLASSIFICATION	1.0295889902766816E-5	IMPLEMENTATION
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.999883670584612	WITHOUT_CLASSIFICATION	1.1632941538786055E-4	IMPLEMENTATION
// if it's an inner class and it's not public, we can't access it; // skip population of declared elements	WITHOUT_CLASSIFICATION	0.9998309024287376	WITHOUT_CLASSIFICATION	1.6909757126244858E-4	IMPLEMENTATION
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999314723926574	WITHOUT_CLASSIFICATION	6.852760734255479E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9892558724642079	WITHOUT_CLASSIFICATION	0.010744127535792182	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9892558724642079	WITHOUT_CLASSIFICATION	0.010744127535792182	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9892558724642079	WITHOUT_CLASSIFICATION	0.010744127535792182	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9892558724642079	WITHOUT_CLASSIFICATION	0.010744127535792182	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9892558724642079	WITHOUT_CLASSIFICATION	0.010744127535792182	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9892558724642079	WITHOUT_CLASSIFICATION	0.010744127535792182	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9892558724642079	WITHOUT_CLASSIFICATION	0.010744127535792182	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9892558724642079	WITHOUT_CLASSIFICATION	0.010744127535792182	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9892558724642079	WITHOUT_CLASSIFICATION	0.010744127535792182	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9892558724642079	WITHOUT_CLASSIFICATION	0.010744127535792182	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9892558724642079	WITHOUT_CLASSIFICATION	0.010744127535792182	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9892558724642079	WITHOUT_CLASSIFICATION	0.010744127535792182	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9892558724642079	WITHOUT_CLASSIFICATION	0.010744127535792182	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9892558724642079	WITHOUT_CLASSIFICATION	0.010744127535792182	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9892558724642079	WITHOUT_CLASSIFICATION	0.010744127535792182	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9892558724642079	WITHOUT_CLASSIFICATION	0.010744127535792182	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9892558724642079	WITHOUT_CLASSIFICATION	0.010744127535792182	IMPLEMENTATION
// MRI behavior on Windows: it treats '/' as a root of // a current drive (but only if SINGLE slash is present!): // E.g., if current work directory is // 'D:/home/directory', then '/' means 'D:/'. // // Basically, '/path' is treated as a *RELATIVE* path, // relative to the current drive. '//path' is treated // as absolute one.	WITHOUT_CLASSIFICATION	0.9999963662127542	WITHOUT_CLASSIFICATION	3.633787245791251E-6	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9892558724642079	WITHOUT_CLASSIFICATION	0.010744127535792182	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9892558724642079	WITHOUT_CLASSIFICATION	0.010744127535792182	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9892558724642079	WITHOUT_CLASSIFICATION	0.010744127535792182	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9892558724642079	WITHOUT_CLASSIFICATION	0.010744127535792182	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9892558724642079	WITHOUT_CLASSIFICATION	0.010744127535792182	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9892558724642079	WITHOUT_CLASSIFICATION	0.010744127535792182	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9892558724642079	WITHOUT_CLASSIFICATION	0.010744127535792182	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9892558724642079	WITHOUT_CLASSIFICATION	0.010744127535792182	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9892558724642079	WITHOUT_CLASSIFICATION	0.010744127535792182	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9892558724642079	WITHOUT_CLASSIFICATION	0.010744127535792182	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9892558724642079	WITHOUT_CLASSIFICATION	0.010744127535792182	IMPLEMENTATION
// This is needed when the enclosing class or module is a singleton. // In that case, we generated a name such as null::Foo, which broke  // Marshalling, among others. The correct thing to do in this situation  // is to insert the generate the name of form #<Class:01xasdfasd> if  // it's a singleton module/class, which this code accomplishes.	WITHOUT_CLASSIFICATION	0.9957515953939368	WITHOUT_CLASSIFICATION	0.0042484046060632845	IMPLEMENTATION
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.99943987556665	WITHOUT_CLASSIFICATION	5.60124433350057E-4	IMPLEMENTATION
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.999949752255734	WITHOUT_CLASSIFICATION	5.024774426599098E-5	IMPLEMENTATION
// get "self"	WITHOUT_CLASSIFICATION	0.9997329379958694	WITHOUT_CLASSIFICATION	2.670620041305624E-4	IMPLEMENTATION
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.999993667773518	WITHOUT_CLASSIFICATION	6.332226482140644E-6	IMPLEMENTATION
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9992067276813918	WITHOUT_CLASSIFICATION	7.93272318608134E-4	IMPLEMENTATION
// only public methods	WITHOUT_CLASSIFICATION	0.9999820844962131	WITHOUT_CLASSIFICATION	1.791550378685891E-5	IMPLEMENTATION
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9997388581513181	WITHOUT_CLASSIFICATION	2.6114184868195907E-4	IMPLEMENTATION
// First try to use drive letter from supplied dir value, // then try current work dir.	WITHOUT_CLASSIFICATION	0.9996715869351874	WITHOUT_CLASSIFICATION	3.2841306481251316E-4	IMPLEMENTATION
// JRUBY-2435: Aliasing eval and other "special" methods should display a warning // We warn because we treat certain method names as "special" for purposes of // optimization. Hopefully this will be enough to convince people not to alias // them.	WITHOUT_CLASSIFICATION	0.9987986406845156	WITHOUT_CLASSIFICATION	0.0012013593154843977	IMPLEMENTATION
// generate a real method signature for the method, with to/from coercions	WITHOUT_CLASSIFICATION	0.999898584614665	WITHOUT_CLASSIFICATION	1.0141538533513535E-4	IMPLEMENTATION
// block argument to the method // closure present // class present // method table mutations, def, defs, undef, alias // likely call to eval // makes calls that are aware of the frame // makes calls that are aware of the frame's self // makes calls that are aware of the frame's visibility // makes calls that are aware of the frame's block // makes calls that are aware of the frame's name // makes calls that set or get backref // makes calls that set or get lastline // makes calls that are aware of the frame's class // optional arguments to the method // rest arg to the method // makes calls that are aware of the scope // makes a zero-argument super call // accesses or sets constants // accesses or sets class variables // makes normal super call // contains a retry	WITHOUT_CLASSIFICATION	0.9998795466158604	WITHOUT_CLASSIFICATION	1.2045338413955367E-4	IMPLEMENTATION
// // Add aliases in Type::*, NativeType::* and FFI::TYPE_* //	WITHOUT_CLASSIFICATION	0.9999829634638779	WITHOUT_CLASSIFICATION	1.703653612216112E-5	IMPLEMENTATION
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999893442907443	WITHOUT_CLASSIFICATION	1.0655709255661825E-5	IMPLEMENTATION
// double-testing args.length here, but it avoids duplicating the proc-setup code in two places	WITHOUT_CLASSIFICATION	0.9999877049342876	WITHOUT_CLASSIFICATION	1.2295065712443418E-5	IMPLEMENTATION
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999981743073597	WITHOUT_CLASSIFICATION	1.8256926403186112E-6	IMPLEMENTATION
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999994610368191	WITHOUT_CLASSIFICATION	5.389631808839725E-7	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9997897363829871	WITHOUT_CLASSIFICATION	2.102636170128765E-4	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9997897363829871	WITHOUT_CLASSIFICATION	2.102636170128765E-4	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9997897363829871	WITHOUT_CLASSIFICATION	2.102636170128765E-4	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9997897363829871	WITHOUT_CLASSIFICATION	2.102636170128765E-4	IMPLEMENTATION
// snapshot of contents of directory // current position in directory	WITHOUT_CLASSIFICATION	0.9999995918374872	WITHOUT_CLASSIFICATION	4.081625128244471E-7	IMPLEMENTATION
// Exclusive locks in Java require the channel to be writable, otherwise // an exception is thrown (terminating JRuby execution). // But flock behavior of MRI is that it allows // exclusive locks even on non-writable file. So we convert exclusive // lock to shared lock if the channel is not writable, to better match // the MRI behavior.	WITHOUT_CLASSIFICATION	0.9957386685487271	WITHOUT_CLASSIFICATION	0.004261331451272964	IMPLEMENTATION
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9998924725271866	WITHOUT_CLASSIFICATION	1.0752747281342302E-4	IMPLEMENTATION
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9998924725271866	WITHOUT_CLASSIFICATION	1.0752747281342302E-4	IMPLEMENTATION
// set self to the class	WITHOUT_CLASSIFICATION	0.9999291041758611	WITHOUT_CLASSIFICATION	7.089582413885405E-5	IMPLEMENTATION
/* ---------- Public fields, methods --------- */	WITHOUT_CLASSIFICATION	0.999990165439553	WITHOUT_CLASSIFICATION	9.834560446995833E-6	IMPLEMENTATION
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999833086809381	WITHOUT_CLASSIFICATION	1.669131906186081E-5	IMPLEMENTATION
// zero args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999643858163947	WITHOUT_CLASSIFICATION	3.56141836053197E-5	IMPLEMENTATION
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999261108933818	WITHOUT_CLASSIFICATION	7.388910661818982E-5	IMPLEMENTATION
// Store each line into this list if not null.	WITHOUT_CLASSIFICATION	0.9998480316721663	WITHOUT_CLASSIFICATION	1.519683278338178E-4	IMPLEMENTATION
// Portion of line right after beginning marker	WITHOUT_CLASSIFICATION	0.9999142539160919	WITHOUT_CLASSIFICATION	8.574608390812215E-5	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9998820705625199	WITHOUT_CLASSIFICATION	1.1792943748013104E-4	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9998820705625199	WITHOUT_CLASSIFICATION	1.1792943748013104E-4	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9998820705625199	WITHOUT_CLASSIFICATION	1.1792943748013104E-4	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9998820705625199	WITHOUT_CLASSIFICATION	1.1792943748013104E-4	IMPLEMENTATION
// If an IO exception occurs (something odd, but possible) // A directory may return null.	WITHOUT_CLASSIFICATION	0.999994671793749	WITHOUT_CLASSIFICATION	5.328206251012444E-6	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999968014385535	WITHOUT_CLASSIFICATION	3.1985614464793926E-6	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999968014385535	WITHOUT_CLASSIFICATION	3.1985614464793926E-6	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999968014385535	WITHOUT_CLASSIFICATION	3.1985614464793926E-6	IMPLEMENTATION
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9993835026093635	WITHOUT_CLASSIFICATION	6.164973906365404E-4	IMPLEMENTATION
// finally with no exception	WITHOUT_CLASSIFICATION	0.9996908889241809	WITHOUT_CLASSIFICATION	3.091110758191202E-4	IMPLEMENTATION
// Now, for all variables used by 'i' mark them live before 'i'	WITHOUT_CLASSIFICATION	0.999993098773302	WITHOUT_CLASSIFICATION	6.901226698026802E-6	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.8660918200623108	IMPLEMENTATION	0.13390817993768925	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.8660918200623108	IMPLEMENTATION	0.13390817993768925	WITHOUT_CLASSIFICATION
/* The counting of slashes that follows is simply a way to adhere to          * Ruby's UNC (or something) compatibility. When Ruby's expand_path is          * called with "//foo//bar" it will return "//foo/bar". JRuby uses          * java.io.File, and hence returns "/foo/bar". In order to retain          * java.io.File in the lower layers and provide full Ruby          * compatibility, the number of extra slashes must be counted and          * prepended to the result.         */	WITHOUT_CLASSIFICATION	0.9999997044464698	WITHOUT_CLASSIFICATION	2.9555353019542703E-7	IMPLEMENTATION
// This is almost always already interned, since it will be called with a symbol in most cases // but when created from Java code, we might get an argument that needs to be interned. // addAccessor has as a precondition that the string MUST be interned	WITHOUT_CLASSIFICATION	0.9999999997721617	WITHOUT_CLASSIFICATION	2.278383709895348E-10	IMPLEMENTATION
/* not a class */	WITHOUT_CLASSIFICATION	0.9993380290808345	WITHOUT_CLASSIFICATION	6.619709191655536E-4	IMPLEMENTATION
/* not a class */	WITHOUT_CLASSIFICATION	0.9993380290808345	WITHOUT_CLASSIFICATION	6.619709191655536E-4	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9997541185451827	WITHOUT_CLASSIFICATION	2.4588145481728224E-4	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9997541185451827	WITHOUT_CLASSIFICATION	2.4588145481728224E-4	IMPLEMENTATION
// io.available() only returns 0 after EOF is encountered // so we need to differentiate between the empty string and EOF	WITHOUT_CLASSIFICATION	0.999996677229089	WITHOUT_CLASSIFICATION	3.3227709109800577E-6	IMPLEMENTATION
// In the current logic, if we get here we know that module is not an // IncludedModuleWrapper, so there's no need to fish out the delegate. But just // in case the logic should change later, let's do it anyway	WITHOUT_CLASSIFICATION	0.9929640870783176	WITHOUT_CLASSIFICATION	0.007035912921682331	IMPLEMENTATION
// rb_iterate((VALUE(*)_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);	WITHOUT_CLASSIFICATION	0.9998272733107829	WITHOUT_CLASSIFICATION	1.7272668921707108E-4	IMPLEMENTATION
// Broken symlinks considered by exists() as non-existing, // so we need to check for symlinks explicitly.	WITHOUT_CLASSIFICATION	0.9998823202877148	WITHOUT_CLASSIFICATION	1.1767971228522758E-4	IMPLEMENTATION
// ////////////////// CONSTANT API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.999814240650084	WITHOUT_CLASSIFICATION	1.8575934991607235E-4	IMPLEMENTATION
// create the default thread group	WITHOUT_CLASSIFICATION	0.9999085712084596	WITHOUT_CLASSIFICATION	9.14287915405189E-5	IMPLEMENTATION
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9998301642962149	WITHOUT_CLASSIFICATION	1.6983570378509614E-4	IMPLEMENTATION
/* ============================     * Here are hash internals     * (This could be extracted to a separate class but it's not too large though)     * ============================     */	WITHOUT_CLASSIFICATION	0.9999996745986641	WITHOUT_CLASSIFICATION	3.254013359179615E-7	IMPLEMENTATION
// ////////////////// LOW-LEVEL CLASS VARIABLE INTERFACE //////////////// // // fetch/store/list class variables for this module //	WITHOUT_CLASSIFICATION	0.9999441217950705	WITHOUT_CLASSIFICATION	5.587820492944105E-5	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999280130780334	WITHOUT_CLASSIFICATION	7.198692196653802E-5	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999280130780334	WITHOUT_CLASSIFICATION	7.198692196653802E-5	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999933881593	WITHOUT_CLASSIFICATION	6.611840699943723E-6	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999933881593	WITHOUT_CLASSIFICATION	6.611840699943723E-6	IMPLEMENTATION
// retuns null when not found to avoid unnecessary getRuntime().getNil() call	WITHOUT_CLASSIFICATION	0.9933503733065322	WITHOUT_CLASSIFICATION	0.006649626693467714	IMPLEMENTATION
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999158671271615	WITHOUT_CLASSIFICATION	8.413287283848832E-5	IMPLEMENTATION
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999075354069781	WITHOUT_CLASSIFICATION	9.246459302188056E-5	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9992447853635568	WITHOUT_CLASSIFICATION	7.552146364432431E-4	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9992447853635568	WITHOUT_CLASSIFICATION	7.552146364432431E-4	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9992447853635568	WITHOUT_CLASSIFICATION	7.552146364432431E-4	IMPLEMENTATION
// line 286	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 476	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 513	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 530	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 533	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 537	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 551	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// end loop	WITHOUT_CLASSIFICATION	0.9995517477135493	WITHOUT_CLASSIFICATION	4.4825228645067997E-4	IMPLEMENTATION
// MRI behavior: we don't print errno for actual Errno errors	WITHOUT_CLASSIFICATION	0.9998930760085053	WITHOUT_CLASSIFICATION	1.0692399149464705E-4	IMPLEMENTATION
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9994059468449071	WITHOUT_CLASSIFICATION	5.940531550928891E-4	IMPLEMENTATION
// Traverse the instructions in this basic block in reverse order! // Mark as dead all instructions whose results are not used! 	WITHOUT_CLASSIFICATION	0.999493638963609	WITHOUT_CLASSIFICATION	5.063610363910423E-4	IMPLEMENTATION
// // fields should really be an immutable map as it is never modified after construction //	WITHOUT_CLASSIFICATION	0.9995144554977803	WITHOUT_CLASSIFICATION	4.855445022197306E-4	IMPLEMENTATION
// load self object as IRubyObject, for recv param	WITHOUT_CLASSIFICATION	0.9999733854882796	WITHOUT_CLASSIFICATION	2.6614511720252265E-5	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.8660918200623108	IMPLEMENTATION	0.13390817993768925	WITHOUT_CLASSIFICATION
// If we define a class in Ruby, but later want to allow it to be defined in Java, // the allocator needs to be updated	WITHOUT_CLASSIFICATION	0.9999591300552402	WITHOUT_CLASSIFICATION	4.0869944759803665E-5	IMPLEMENTATION
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9996740306988096	WITHOUT_CLASSIFICATION	3.2596930119042786E-4	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.999859841371815	WITHOUT_CLASSIFICATION	1.4015862818492517E-4	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.99991120461732	WITHOUT_CLASSIFICATION	8.879538267995327E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.99991120461732	WITHOUT_CLASSIFICATION	8.879538267995327E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.99991120461732	WITHOUT_CLASSIFICATION	8.879538267995327E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.99991120461732	WITHOUT_CLASSIFICATION	8.879538267995327E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.99991120461732	WITHOUT_CLASSIFICATION	8.879538267995327E-5	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9970369204905855	WITHOUT_CLASSIFICATION	0.0029630795094145513	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.99991120461732	WITHOUT_CLASSIFICATION	8.879538267995327E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.99991120461732	WITHOUT_CLASSIFICATION	8.879538267995327E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.99991120461732	WITHOUT_CLASSIFICATION	8.879538267995327E-5	IMPLEMENTATION
// MRI has extra pointer which makes our code look a little bit // more strange in // comparison	WITHOUT_CLASSIFICATION	0.9999745268250689	WITHOUT_CLASSIFICATION	2.5473174930950034E-5	IMPLEMENTATION
// Tempory buffer to build up a potential token.  Consumer takes responsibility to reset  // this before use.	WITHOUT_CLASSIFICATION	0.999905908393539	WITHOUT_CLASSIFICATION	9.409160646105055E-5	IMPLEMENTATION
//tmpPosition is required because getPosition()'s side effects. //if the warning is generated, the getPosition() on line 954 (this line + 18) will create //a wrong position if the "inclusive" flag is not set.	WITHOUT_CLASSIFICATION	0.9972792828137393	WITHOUT_CLASSIFICATION	0.0027207171862606697	IMPLEMENTATION
/* What is \v in C?                    case '\v':                        c2 = 'v';                        break;                        */	WITHOUT_CLASSIFICATION	0.9999821990153547	WITHOUT_CLASSIFICATION	1.780098464535202E-5	IMPLEMENTATION
/* Consider Thread aspects of this */	WITHOUT_CLASSIFICATION	0.9999754594146866	WITHOUT_CLASSIFICATION	2.4540585313378866E-5	IMPLEMENTATION
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999998821607116	WITHOUT_CLASSIFICATION	1.1783928850868885E-7	IMPLEMENTATION
// An interrupt or timeout may have caused us to miss // a notify that we consumed, so do another notify in // case someone else is available to pick it up.	WITHOUT_CLASSIFICATION	0.9985014353146684	WITHOUT_CLASSIFICATION	0.0014985646853315797	IMPLEMENTATION
// line 572	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 601	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 601	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 625	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 649	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 691	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 723	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 732	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 745	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 766	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 785	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 794	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 800	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 812	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 827	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 839	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 845	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 864	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 886	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 896	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 911	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 929	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 952	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 970	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 972	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 991	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1011	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1026	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1038	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1067	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1085	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1097	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1105	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1122	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1133	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1145	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1169	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1201	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1210	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1229	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1261	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1287	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1293	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1307	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1320	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1325	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1363	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1398	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1448	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1456	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1473	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1492	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1513	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1523	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1562	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1582	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1603	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1603	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1615	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1620	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1635	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1652	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1681	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1708	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1716	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1755	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1772	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1789	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9993881635822232	WITHOUT_CLASSIFICATION	6.118364177769137E-4	IMPLEMENTATION
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9993881635822232	WITHOUT_CLASSIFICATION	6.118364177769137E-4	IMPLEMENTATION
/* force for args */	WITHOUT_CLASSIFICATION	0.9998834711394103	WITHOUT_CLASSIFICATION	1.16528860589681E-4	IMPLEMENTATION
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.999391758417927	WITHOUT_CLASSIFICATION	6.082415820728489E-4	IMPLEMENTATION
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9908159290733668	WITHOUT_CLASSIFICATION	0.009184070926633198	IMPLEMENTATION
// We can assign if we already have variable of that name here or we are the only // scope in the chain (which Local scopes always are).	WITHOUT_CLASSIFICATION	0.9999067675009686	WITHOUT_CLASSIFICATION	9.323249903146329E-5	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9996654626505458	WITHOUT_CLASSIFICATION	3.3453734945428673E-4	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9996654626505458	WITHOUT_CLASSIFICATION	3.3453734945428673E-4	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9996654626505458	WITHOUT_CLASSIFICATION	3.3453734945428673E-4	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9996654626505458	WITHOUT_CLASSIFICATION	3.3453734945428673E-4	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9998155477033778	WITHOUT_CLASSIFICATION	1.8445229662220118E-4	IMPLEMENTATION
/*     * This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:)     * into individual whenNodes.  The primary reason for this is to ensure lazy evaluation of     * the arguments (when foo,bar,gar:) to prevent side-effects.  In the old code this was done     * using nested when statements, which was awful for interpreter and compilation.     *     * Notes: This has semantic equivalence but will not be lexically equivalent.  Compiler     * needs to detect same bodies to simplify bytecode generated.     */	WITHOUT_CLASSIFICATION	0.9999995129083531	WITHOUT_CLASSIFICATION	4.870916469920233E-7	IMPLEMENTATION
// line 313	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 339	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 361	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 413	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 451	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 472	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 500	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 515	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 555	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 582	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 619	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 636	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 669	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 703	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 776	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 814	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 823	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 854	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 872	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 905	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 925	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 958	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 992	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1047	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1072	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1081	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1108	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1136	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1168	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1192	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1241	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1267	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1286	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1301	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1314	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1333	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1362	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1395	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1420	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1439	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1476	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1535	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1588	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1618	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1643	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1669	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1728	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1753	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1779	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1794	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1812	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1837	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1895	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1925	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1950	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 1992	WITHOUT_CLASSIFICATION	0.9993927142918074	WITHOUT_CLASSIFICATION	6.072857081926146E-4	IMPLEMENTATION
// line 2014	WITHOUT_CLASSIFICATION	0.9993931213355678	WITHOUT_CLASSIFICATION	6.068786644321531E-4	IMPLEMENTATION
// Whether this scope is used as the "argument scope" for e.g. zsuper	WITHOUT_CLASSIFICATION	0.9999561962865623	WITHOUT_CLASSIFICATION	4.3803713437633305E-5	IMPLEMENTATION
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9994136308946676	WITHOUT_CLASSIFICATION	5.863691053324361E-4	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999951101318448	WITHOUT_CLASSIFICATION	4.889868155246197E-6	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999951101318448	WITHOUT_CLASSIFICATION	4.889868155246197E-6	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999951101318448	WITHOUT_CLASSIFICATION	4.889868155246197E-6	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999951101318448	WITHOUT_CLASSIFICATION	4.889868155246197E-6	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999951101318448	WITHOUT_CLASSIFICATION	4.889868155246197E-6	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999951101318448	WITHOUT_CLASSIFICATION	4.889868155246197E-6	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999951101318448	WITHOUT_CLASSIFICATION	4.889868155246197E-6	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9990625932559419	WITHOUT_CLASSIFICATION	9.374067440579943E-4	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9990625932559419	WITHOUT_CLASSIFICATION	9.374067440579943E-4	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9990625932559419	WITHOUT_CLASSIFICATION	9.374067440579943E-4	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9990625932559419	WITHOUT_CLASSIFICATION	9.374067440579943E-4	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9945275521949262	WITHOUT_CLASSIFICATION	0.005472447805073848	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9945275521949262	WITHOUT_CLASSIFICATION	0.005472447805073848	IMPLEMENTATION
// We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the // 'b' will get put into this new dynamic scope.  The original scope does not see the new // 'b' and successive evals with this binding will.  I take it having the ability to have  // succesive binding evals be able to share same scope makes sense from a programmers  // perspective.   One crappy outcome of this design is it requires Dynamic and Static  // scopes to be mutable for this one case.	WITHOUT_CLASSIFICATION	0.9999989531106085	WITHOUT_CLASSIFICATION	1.0468893915113062E-6	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999976256184553	WITHOUT_CLASSIFICATION	2.3743815447914905E-6	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999976256184553	WITHOUT_CLASSIFICATION	2.3743815447914905E-6	IMPLEMENTATION
// tc // under method // self // under method // name // args	WITHOUT_CLASSIFICATION	0.9988704564478299	WITHOUT_CLASSIFICATION	0.0011295435521701076	IMPLEMENTATION
// allow it to bubble up	WITHOUT_CLASSIFICATION	0.9996787289819138	WITHOUT_CLASSIFICATION	3.2127101808627806E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998479392453741	WITHOUT_CLASSIFICATION	1.520607546258322E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998479392453741	WITHOUT_CLASSIFICATION	1.520607546258322E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998479392453741	WITHOUT_CLASSIFICATION	1.520607546258322E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998479392453741	WITHOUT_CLASSIFICATION	1.520607546258322E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998479392453741	WITHOUT_CLASSIFICATION	1.520607546258322E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998479392453741	WITHOUT_CLASSIFICATION	1.520607546258322E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998479392453741	WITHOUT_CLASSIFICATION	1.520607546258322E-4	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998479392453741	WITHOUT_CLASSIFICATION	1.520607546258322E-4	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998479392453741	WITHOUT_CLASSIFICATION	1.520607546258322E-4	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9983541460679605	WITHOUT_CLASSIFICATION	0.001645853932039495	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9983541460679605	WITHOUT_CLASSIFICATION	0.001645853932039495	IMPLEMENTATION
// Check for a builtin first.	WITHOUT_CLASSIFICATION	0.9999861723570407	WITHOUT_CLASSIFICATION	1.3827642959396876E-5	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9998130819145232	WITHOUT_CLASSIFICATION	1.869180854768375E-4	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9998130819145232	WITHOUT_CLASSIFICATION	1.869180854768375E-4	IMPLEMENTATION
// Unfortunately, the number of digits in the exponent is // not clearly defined in Ruby documentation. This is a // platform/version-dependent behavior. On Linux/Mac/Cygwin/*nix, // two digits are used. On Windows, 3 digits are used. // It is desirable for JRuby to have consistent behavior, and // the two digits behavior was selected. This is also in sync // with "Java-native" sprintf behavior (java.util.Formatter). // E or e	WITHOUT_CLASSIFICATION	0.9999980859958638	WITHOUT_CLASSIFICATION	1.9140041361461483E-6	IMPLEMENTATION
/** * Represents the the dynamic portion of scoping information.  The variableValues are the * values of assigned local or block variables.  The staticScope identifies which sort of * scope this is (block or local). *  * Properties of Dynamic Scopes: * 1. static and dynamic scopes have the same number of names to values * 2. size of variables (and thus names) is determined during parsing.  So those structured do *    not need to change * * FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents.  This * is harmless (other than wasting memory), but we should not do that.  We can fix this in two * ways: * 1. Fix all callers * 2. Check parent that is passed in and make if new instance is local, then its parent is not local */	WITHOUT_CLASSIFICATION	0.9922847274274037	WITHOUT_CLASSIFICATION	0.0077152725725962105	IMPLEMENTATION
// This method handles '**/' patterns and delegates to // fnmatch_helper for the main work.	WITHOUT_CLASSIFICATION	0.9993789089632075	WITHOUT_CLASSIFICATION	6.210910367925757E-4	IMPLEMENTATION
// Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern  // Example: foo{a{c},b}bar -> fooa{c}bar, foobbar	WITHOUT_CLASSIFICATION	0.99999759959333	WITHOUT_CLASSIFICATION	2.400406669999488E-6	IMPLEMENTATION
// double precision, native // double precision, native	WITHOUT_CLASSIFICATION	0.9999854628986937	WITHOUT_CLASSIFICATION	1.4537101306206708E-5	IMPLEMENTATION
// 64-bit number, native (as bignum)	WITHOUT_CLASSIFICATION	0.9998624766868681	WITHOUT_CLASSIFICATION	1.3752331313190557E-4	IMPLEMENTATION
// Next indicates to decode using native encoding format	WITHOUT_CLASSIFICATION	0.9999534657031326	WITHOUT_CLASSIFICATION	4.653429686731785E-5	IMPLEMENTATION
// calculate based on a, b, c and d	WITHOUT_CLASSIFICATION	0.999877744891366	WITHOUT_CLASSIFICATION	1.222551086338483E-4	IMPLEMENTATION
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9992280711574792	WITHOUT_CLASSIFICATION	7.719288425206944E-4	IMPLEMENTATION
// MRI behavior:  for 'Q', do not add trailing nils	WITHOUT_CLASSIFICATION	0.9978102973859092	WITHOUT_CLASSIFICATION	0.002189702614090811	IMPLEMENTATION
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9999992049772358	WITHOUT_CLASSIFICATION	7.950227641648501E-7	IMPLEMENTATION
// exec needs to behave differently in-process, because it's technically // supposed to replace the calling process. So if we're supposed to run // in-process, we allow it to use the default streams and not use // pumpers at all. See JRUBY-2156 and JRUBY-2154.	WITHOUT_CLASSIFICATION	0.9972150554626532	WITHOUT_CLASSIFICATION	0.002784944537346823	IMPLEMENTATION
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999995759467791	WITHOUT_CLASSIFICATION	4.2405322080680134E-7	IMPLEMENTATION
// The problem we trying to solve below: STDIN in Java // is blocked and non-interruptible, so if we invoke read // on it, we might never be able to interrupt such thread. // So, we use in.available() to see if there is any input // ready, and only then read it. But this approach can't // tell whether the end of stream reached or not, so we // might end up looping right at the end of the stream. // Well, at least, we can improve the situation by checking // if some input was ever available, and if so, not // checking for available anymore, and just go to read.	WITHOUT_CLASSIFICATION	0.9999998556354559	WITHOUT_CLASSIFICATION	1.44364544072267E-7	IMPLEMENTATION
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9998464871846604	WITHOUT_CLASSIFICATION	1.5351281533960515E-4	IMPLEMENTATION
// an empirically derived rule: precision applies to // significand length, irrespective of exponent	WITHOUT_CLASSIFICATION	0.9999801921603283	WITHOUT_CLASSIFICATION	1.9807839671733943E-5	IMPLEMENTATION
// an official rule, clarified: if the exponent // <clarif>after adjusting for exponent form</clarif> // is < -4,  or the exponent <clarif>after adjusting  // for exponent form</clarif> is greater than the // precision, use exponent form	WITHOUT_CLASSIFICATION	0.9999967825487762	WITHOUT_CLASSIFICATION	3.2174512237487702E-6	IMPLEMENTATION
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.999979643976553	WITHOUT_CLASSIFICATION	2.0356023446999103E-5	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9987735263989248	WITHOUT_CLASSIFICATION	0.0012264736010751001	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9987735263989248	WITHOUT_CLASSIFICATION	0.0012264736010751001	IMPLEMENTATION
// MRI behavior: validate only the unnumbered arguments	WITHOUT_CLASSIFICATION	0.999780616536995	WITHOUT_CLASSIFICATION	2.1938346300491443E-4	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9998665852573534	WITHOUT_CLASSIFICATION	1.3341474264666847E-4	IMPLEMENTATION
// calculation for simple (and typical) case, // adapted from sun.misc.FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999590843621511	WITHOUT_CLASSIFICATION	4.0915637848893106E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.99991120461732	WITHOUT_CLASSIFICATION	8.879538267995327E-5	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9970371744469209	WITHOUT_CLASSIFICATION	0.0029628255530790965	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9970371744469209	WITHOUT_CLASSIFICATION	0.0029628255530790965	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9970371744469209	WITHOUT_CLASSIFICATION	0.0029628255530790965	IMPLEMENTATION
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9997516226638127	WITHOUT_CLASSIFICATION	2.4837733618739225E-4	IMPLEMENTATION
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9992436919878881	WITHOUT_CLASSIFICATION	7.563080121119196E-4	IMPLEMENTATION
// call chmod after we created the RandomAccesFile // because otherwise, the file could be read-only	WITHOUT_CLASSIFICATION	0.9999140425640458	WITHOUT_CLASSIFICATION	8.595743595421693E-5	IMPLEMENTATION
// attempt to set the permissions, if we have been passed a POSIX instance, // and only if the file was created in this call.	WITHOUT_CLASSIFICATION	0.9999917040374163	WITHOUT_CLASSIFICATION	8.295962583670745E-6	IMPLEMENTATION
// // When reading into a heap buffer, the jvm allocates a temporary // direct ByteBuffer of the requested size.  To avoid allocating // a huge direct buffer when doing ludicrous reads (e.g. 1G or more) // we split the read up into chunks of no more than 1M //	WITHOUT_CLASSIFICATION	0.9999330208546104	WITHOUT_CLASSIFICATION	6.697914538953847E-5	IMPLEMENTATION
// // If it is a file channel, then we can pre-allocate the output buffer // to the total size of buffered + remaining bytes in file //	WITHOUT_CLASSIFICATION	0.9999419053033074	WITHOUT_CLASSIFICATION	5.8094696692696145E-5	IMPLEMENTATION
// // Cannot discern the total read length - allocate at least enough for the buffered data //	WITHOUT_CLASSIFICATION	0.9999853781408132	WITHOUT_CLASSIFICATION	1.4621859186780544E-5	IMPLEMENTATION
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.999966727435468	WITHOUT_CLASSIFICATION	3.3272564531985384E-5	IMPLEMENTATION
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9993767374427545	WITHOUT_CLASSIFICATION	6.232625572455904E-4	IMPLEMENTATION
// already have some bytes buffered, just return those	WITHOUT_CLASSIFICATION	0.9999004283327676	WITHOUT_CLASSIFICATION	9.957166723247874E-5	IMPLEMENTATION
// reset buffer	WITHOUT_CLASSIFICATION	0.9982676576937412	WITHOUT_CLASSIFICATION	0.0017323423062588716	IMPLEMENTATION
// // Synchronize and re-check to avoid creating more than one Selector per provider //	WITHOUT_CLASSIFICATION	0.9951351262320804	WITHOUT_CLASSIFICATION	0.004864873767919527	IMPLEMENTATION
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.5307796726128509	WITHOUT_CLASSIFICATION	0.46922032738714914	IMPLEMENTATION
// Is there something built into JRuby to do this?	WITHOUT_CLASSIFICATION	0.9990464912549313	WITHOUT_CLASSIFICATION	9.535087450688085E-4	IMPLEMENTATION
// Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long // assertTrue(value == valueViaValuesIterator);	WITHOUT_CLASSIFICATION	0.9999531162071088	WITHOUT_CLASSIFICATION	4.688379289116647E-5	IMPLEMENTATION
// value equality //result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); //assertEquals("two", result);	WITHOUT_CLASSIFICATION	0.999890388793399	WITHOUT_CLASSIFICATION	1.0961120660111964E-4	IMPLEMENTATION
// Uncomment the "puts" lines if you want to see more detail	WITHOUT_CLASSIFICATION	0.9998739770373697	WITHOUT_CLASSIFICATION	1.260229626302778E-4	IMPLEMENTATION
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999871277165656	WITHOUT_CLASSIFICATION	1.2872283434444131E-5	IMPLEMENTATION
// change the thread context to include the class	WITHOUT_CLASSIFICATION	0.999809429295989	WITHOUT_CLASSIFICATION	1.9057070401088964E-4	IMPLEMENTATION
