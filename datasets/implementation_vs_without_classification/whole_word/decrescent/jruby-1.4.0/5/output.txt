// TODO: warn "tried to create Proc object without a block"	IMPLEMENTATION	0.5817274705889612	WITHOUT_CLASSIFICATION	0.4182725294110388	IMPLEMENTATION
// TODO: CLONE_SETUP here	IMPLEMENTATION	0.6433657860334941	IMPLEMENTATION	0.3566342139665059	WITHOUT_CLASSIFICATION
// TODO: Someday, enable.	IMPLEMENTATION	0.5584913394256322	IMPLEMENTATION	0.44150866057436783	WITHOUT_CLASSIFICATION
// Bunch of methods still not implemented	IMPLEMENTATION	0.9397276093845793	IMPLEMENTATION	0.06027239061542071	WITHOUT_CLASSIFICATION
// TODO: non-strict option	IMPLEMENTATION	0.566416792991056	WITHOUT_CLASSIFICATION	0.43358320700894415	IMPLEMENTATION
// TODO: opt for 2 and 3 ?	IMPLEMENTATION	0.8927975181381529	WITHOUT_CLASSIFICATION	0.1072024818618472	IMPLEMENTATION
// FIXME: Should we make this work with platform's locale, // or continue hardcoding US?	IMPLEMENTATION	0.6281636721817909	IMPLEMENTATION	0.3718363278182089	WITHOUT_CLASSIFICATION
// TODO: rescan code range ?	IMPLEMENTATION	0.5780065866536255	IMPLEMENTATION	0.42199341334637447	WITHOUT_CLASSIFICATION
// TODO: rescan code range ?	IMPLEMENTATION	0.5780065866536255	IMPLEMENTATION	0.42199341334637447	WITHOUT_CLASSIFICATION
// TODO: pass this in?	IMPLEMENTATION	0.7081695450789713	IMPLEMENTATION	0.29183045492102866	WITHOUT_CLASSIFICATION
// FIXME: Pass block down?	IMPLEMENTATION	0.9581224924057098	WITHOUT_CLASSIFICATION	0.04187750759429022	IMPLEMENTATION
// TODO: do something here?	IMPLEMENTATION	0.7186120952938873	IMPLEMENTATION	0.2813879047061128	WITHOUT_CLASSIFICATION
// TODO: port exact behavior from MRI, and move most locking logic into ChannelDescriptor // TODO: for all LOCK_NB cases, return false if they would block	IMPLEMENTATION	0.9454017248822301	WITHOUT_CLASSIFICATION	0.05459827511776989	IMPLEMENTATION
// TODO: check if too many open files, GC and try again	IMPLEMENTATION	0.8196857669891293	WITHOUT_CLASSIFICATION	0.18031423301087082	IMPLEMENTATION
//TODO deal with UNC names	IMPLEMENTATION	0.5301976820485019	IMPLEMENTATION	0.4698023179514981	WITHOUT_CLASSIFICATION
// FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.531344073567944	WITHOUT_CLASSIFICATION	0.46865592643205606	IMPLEMENTATION
//FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.992134390904691	WITHOUT_CLASSIFICATION	0.007865609095308939	IMPLEMENTATION
// TODO: SafeStringValue here	IMPLEMENTATION	0.6433657860334941	IMPLEMENTATION	0.3566342139665059	WITHOUT_CLASSIFICATION
// TODO: turn off readable? am I reading this right? // This only seems to be used while duping below, since modes gets // reset to actual modes afterward //fptr->mode &= (m & FMODE_READABLE) ? ~FMODE_READABLE : ~FMODE_WRITABLE;	IMPLEMENTATION	0.7385223103296117	IMPLEMENTATION	0.26147768967038837	WITHOUT_CLASSIFICATION
// TODO: check safe, taint on incoming string	IMPLEMENTATION	0.8338475307563173	WITHOUT_CLASSIFICATION	0.16615246924368268	IMPLEMENTATION
// TODO: pipe handler to be reopened with path and "w" mode	IMPLEMENTATION	0.7955148789558356	WITHOUT_CLASSIFICATION	0.20448512104416425	IMPLEMENTATION
// FIXME: add text mode to mode flags	IMPLEMENTATION	0.9737591204459776	WITHOUT_CLASSIFICATION	0.026240879554022385	IMPLEMENTATION
// TODO: Something about pipe buffer length here	IMPLEMENTATION	0.5948404558295889	WITHOUT_CLASSIFICATION	0.4051595441704111	IMPLEMENTATION
// TODO: handle errors in buffered write by retrying until finished or file is closed	IMPLEMENTATION	0.6615498136525405	WITHOUT_CLASSIFICATION	0.3384501863474595	IMPLEMENTATION
// TODO: notify threads waiting on descriptors/IO? probably not...	IMPLEMENTATION	0.8117260867174805	IMPLEMENTATION	0.18827391328251952	WITHOUT_CLASSIFICATION
// TODO: Ruby re-checks that the buffer string hasn't been modified	IMPLEMENTATION	0.7216907533478147	WITHOUT_CLASSIFICATION	0.2783092466521853	IMPLEMENTATION
// TODO: Ruby unlocks the string here	IMPLEMENTATION	0.8931231493210413	WITHOUT_CLASSIFICATION	0.1068768506789587	IMPLEMENTATION
// TODO: Ruby truncates string to specific size here, but our bytelist should handle this already?	IMPLEMENTATION	0.9705634276526641	WITHOUT_CLASSIFICATION	0.02943657234733584	IMPLEMENTATION
// TODO: Ruby unlocks the string here	IMPLEMENTATION	0.8931231493210413	WITHOUT_CLASSIFICATION	0.1068768506789587	IMPLEMENTATION
// TODO: Ruby truncates string to specific size here, but our bytelist should handle this already?	IMPLEMENTATION	0.9705634276526641	WITHOUT_CLASSIFICATION	0.02943657234733584	IMPLEMENTATION
// TODO: ruby locks the string here	IMPLEMENTATION	0.9049288992705363	WITHOUT_CLASSIFICATION	0.09507110072946366	IMPLEMENTATION
// TODO same zero-length checks as file above	IMPLEMENTATION	0.7071942957530357	IMPLEMENTATION	0.29280570424696434	WITHOUT_CLASSIFICATION
// TODO: MRI also can hadle Bignum here	IMPLEMENTATION	0.91077171389149	IMPLEMENTATION	0.08922828610850989	WITHOUT_CLASSIFICATION
// TODO: make threadsafe	IMPLEMENTATION	0.904825043624127	IMPLEMENTATION	0.09517495637587303	WITHOUT_CLASSIFICATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9383070134357235	WITHOUT_CLASSIFICATION	0.06169298656427653	IMPLEMENTATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9383070134357235	WITHOUT_CLASSIFICATION	0.06169298656427653	IMPLEMENTATION
// FIXME: create AttrReaderMethod, AttrWriterMethod, for faster attr access	IMPLEMENTATION	0.8783247179865846	WITHOUT_CLASSIFICATION	0.12167528201341542	IMPLEMENTATION
// Do not clone cached methods // FIXME: MRI copies all methods here	IMPLEMENTATION	0.6359097290555291	WITHOUT_CLASSIFICATION	0.3640902709444709	IMPLEMENTATION
// TODO: don't calculate the same value 3 times	IMPLEMENTATION	0.9502627558736392	WITHOUT_CLASSIFICATION	0.04973724412636081	IMPLEMENTATION
// TODO: 3 times calculate the same value below	IMPLEMENTATION	0.9472916639855039	WITHOUT_CLASSIFICATION	0.05270833601449608	IMPLEMENTATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.930030425268981	IMPLEMENTATION	0.06996957473101897	WITHOUT_CLASSIFICATION
// TODO: Store BEGIN and END information into this node	IMPLEMENTATION	0.5033470557117378	IMPLEMENTATION	0.49665294428826223	WITHOUT_CLASSIFICATION
// TODO: put these nil guards into tree (bigger than I want to do right now)	IMPLEMENTATION	0.9774073518169184	IMPLEMENTATION	0.022592648183081626	WITHOUT_CLASSIFICATION
// FIXME: Make bodyNode non-null in parser	IMPLEMENTATION	0.9818312654900776	WITHOUT_CLASSIFICATION	0.01816873450992245	IMPLEMENTATION
// TODO: call config with scope but no frame	IMPLEMENTATION	0.5949406911384836	IMPLEMENTATION	0.4050593088615165	WITHOUT_CLASSIFICATION
// TODO: add trace call?	IMPLEMENTATION	0.5067934974495043	IMPLEMENTATION	0.4932065025504958	WITHOUT_CLASSIFICATION
// FIXME: missing arity check	IMPLEMENTATION	0.8486127640498677	WITHOUT_CLASSIFICATION	0.15138723595013223	IMPLEMENTATION
// FIXME: optimize for cases where we have no false branch	IMPLEMENTATION	0.9394395225841083	WITHOUT_CLASSIFICATION	0.06056047741589165	IMPLEMENTATION
// FIXME: after jump is not in here.  Will if ever be? //Label afterJmp = new Label();	IMPLEMENTATION	0.987466469398543	WITHOUT_CLASSIFICATION	0.012533530601456972	IMPLEMENTATION
// TODO: build arg list based on number of args, optionals, etc	IMPLEMENTATION	0.5890166526807893	IMPLEMENTATION	0.4109833473192108	WITHOUT_CLASSIFICATION
// FIXME: missing arity check	IMPLEMENTATION	0.8486127640498677	WITHOUT_CLASSIFICATION	0.15138723595013223	IMPLEMENTATION
// SSS FIXME: Traverse up the scope hierarchy to find the constant as long as the parent is a static scope	IMPLEMENTATION	0.997666290248865	WITHOUT_CLASSIFICATION	0.0023337097511349353	IMPLEMENTATION
// SSS FIXME: Should I be returning the operand constructed here?	IMPLEMENTATION	0.5625077097828443	WITHOUT_CLASSIFICATION	0.4374922902171558	IMPLEMENTATION
// TODO: Add IR instructions for checking method arity! // s.getVariableCompiler().checkMethodArity(required, opt, rest);	IMPLEMENTATION	0.8497427457170189	IMPLEMENTATION	0.15025725428298106	WITHOUT_CLASSIFICATION
// FIXME: Ruby 1.9 post args code needs to come here	IMPLEMENTATION	0.819912374941045	WITHOUT_CLASSIFICATION	0.18008762505895504	IMPLEMENTATION
// SSS: FIXME: Somewhere here, we need to record information the type of this operand as String	IMPLEMENTATION	0.9898526760696913	WITHOUT_CLASSIFICATION	0.010147323930308707	IMPLEMENTATION
// FIXME: Translate this call below! // s.unwrapPassedBlock();	IMPLEMENTATION	0.8215419963306412	WITHOUT_CLASSIFICATION	0.17845800366935877	IMPLEMENTATION
// SSS FIXME: We need to build debug information tracking into the IR in some fashion // So, these methods below would have to have equivalents in IR_Scope implementations.	IMPLEMENTATION	0.6663140813059183	WITHOUT_CLASSIFICATION	0.33368591869408176	IMPLEMENTATION
// SSS FIXME: Incomplete!	IMPLEMENTATION	0.9670724859528537	WITHOUT_CLASSIFICATION	0.03292751404714637	IMPLEMENTATION
// SSS FIXME: Pick one of bytelist or string, or add internal conversion methods to convert to the default representation	IMPLEMENTATION	0.9979736367170369	WITHOUT_CLASSIFICATION	0.0020263632829631635	IMPLEMENTATION
// SSS FIXME: To be done	IMPLEMENTATION	0.990086526232866	WITHOUT_CLASSIFICATION	0.00991347376713401	IMPLEMENTATION
//TODO: implement, won't do this now	IMPLEMENTATION	0.9571256528835933	WITHOUT_CLASSIFICATION	0.042874347116406586	IMPLEMENTATION
//TODO: implement, won't do this now	IMPLEMENTATION	0.9571256528835933	WITHOUT_CLASSIFICATION	0.042874347116406586	IMPLEMENTATION
// TODO: validate port as numeric	IMPLEMENTATION	0.5490969255148136	IMPLEMENTATION	0.4509030744851865	WITHOUT_CLASSIFICATION
// TODO: this code should really check if a Ruby equals method is implemented or not.	IMPLEMENTATION	0.9992237784696198	IMPLEMENTATION	7.762215303801769E-4	WITHOUT_CLASSIFICATION
// if not already defined, we add a 'new' that guesses at which signature to use // TODO: just adding first one right now...add in signature-guessing logic	IMPLEMENTATION	0.6910068875841755	IMPLEMENTATION	0.3089931124158245	WITHOUT_CLASSIFICATION
// TODO: deal with varargs	IMPLEMENTATION	0.7694718736120022	IMPLEMENTATION	0.23052812638799774	WITHOUT_CLASSIFICATION
// TODO: deal with varargs	IMPLEMENTATION	0.7694718736120022	IMPLEMENTATION	0.23052812638799774	WITHOUT_CLASSIFICATION
// TODO: other reserved names?	IMPLEMENTATION	0.8823266063286443	IMPLEMENTATION	0.11767339367135568	WITHOUT_CLASSIFICATION
// TODO: we can probably release our references to the constantFields // array and static/instance callback hashes at this point. 	IMPLEMENTATION	0.6661963850042093	IMPLEMENTATION	0.33380361499579075	WITHOUT_CLASSIFICATION
// TODO: Formalize conversion mechanisms between Java and Ruby	IMPLEMENTATION	0.6559603951253805	WITHOUT_CLASSIFICATION	0.34403960487461943	IMPLEMENTATION
// XXX: Check if it's appropriate type?	IMPLEMENTATION	0.998012076664082	WITHOUT_CLASSIFICATION	0.001987923335918071	IMPLEMENTATION
// TODO: call ruby method	IMPLEMENTATION	0.8758850065584025	IMPLEMENTATION	0.12411499344159753	WITHOUT_CLASSIFICATION
// TODO: call ruby method	IMPLEMENTATION	0.8758850065584025	IMPLEMENTATION	0.12411499344159753	WITHOUT_CLASSIFICATION
// TODO: Add safety check for taintedness	IMPLEMENTATION	0.6508943916231725	IMPLEMENTATION	0.34910560837682747	WITHOUT_CLASSIFICATION
// FIXME: Need to detect magic_comment in 1.9 here for encoding	IMPLEMENTATION	0.9788824349951257	WITHOUT_CLASSIFICATION	0.021117565004874304	IMPLEMENTATION
/* xxx shouldn't check if valid option variable */	IMPLEMENTATION	0.9999946480576717	WITHOUT_CLASSIFICATION	5.351942328312863E-6	IMPLEMENTATION
// TODO: this isn't handling multibyte yet	IMPLEMENTATION	0.9523555180550521	IMPLEMENTATION	0.04764448194494791	WITHOUT_CLASSIFICATION
// TODO: This should be something else like a tCHAR	IMPLEMENTATION	0.7841634831845687	IMPLEMENTATION	0.21583651681543123	WITHOUT_CLASSIFICATION
// FIXME: \r logic needed	IMPLEMENTATION	0.9826491708440597	IMPLEMENTATION	0.017350829155940342	WITHOUT_CLASSIFICATION
// TODO: note lack of command.com support for Win 9x...	IMPLEMENTATION	0.792061649373107	IMPLEMENTATION	0.2079383506268931	WITHOUT_CLASSIFICATION
// FIXME: Make thread pool threads daemons if necessary	IMPLEMENTATION	0.8911353956939092	WITHOUT_CLASSIFICATION	0.1088646043060908	IMPLEMENTATION
/* FIXME: We may be intern'ing more than once.*/	IMPLEMENTATION	0.9474342691650653	IMPLEMENTATION	0.052565730834934626	WITHOUT_CLASSIFICATION
/* FIXME: We may be intern'ing more than once.*/	IMPLEMENTATION	0.9474342691650653	IMPLEMENTATION	0.052565730834934626	WITHOUT_CLASSIFICATION
/* FIXME: arg_concat missing for opt_call_args*/	IMPLEMENTATION	0.8419359739737791	IMPLEMENTATION	0.1580640260262209	WITHOUT_CLASSIFICATION
/* FIXME: arg_concat logic missing for opt_call_args*/	IMPLEMENTATION	0.8269177449474873	IMPLEMENTATION	0.17308225505251276	WITHOUT_CLASSIFICATION
// FIXME: This needs to happen for lambdas //            args.checkArgCount(runtime, parameters.length);	IMPLEMENTATION	0.9568078408660966	WITHOUT_CLASSIFICATION	0.04319215913390338	IMPLEMENTATION
// FIXME: This needs to happen for lambdas //            args.checkArgCount(runtime, parameters.length);	IMPLEMENTATION	0.9568078408660966	WITHOUT_CLASSIFICATION	0.04319215913390338	IMPLEMENTATION
// TODO: make it cross runtime safe by COW or eager copy	IMPLEMENTATION	0.7189354988356595	IMPLEMENTATION	0.28106450116434045	WITHOUT_CLASSIFICATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.9367892414262812	WITHOUT_CLASSIFICATION	0.06321075857371886	IMPLEMENTATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.9367892414262812	WITHOUT_CLASSIFICATION	0.06321075857371886	IMPLEMENTATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.9367892414262812	WITHOUT_CLASSIFICATION	0.06321075857371886	IMPLEMENTATION
// TODO: check the return value here	IMPLEMENTATION	0.6383395472929203	WITHOUT_CLASSIFICATION	0.3616604527070796	IMPLEMENTATION
// TODO: check the return value here	IMPLEMENTATION	0.6383395472929203	WITHOUT_CLASSIFICATION	0.3616604527070796	IMPLEMENTATION
// TODO: Make sure all appropriate open flags are added to this check.	IMPLEMENTATION	0.9104574116030808	WITHOUT_CLASSIFICATION	0.08954258839691911	IMPLEMENTATION
//subList.clear(); // Sublist is supposed to share same backing store as list...TODO in RubyArray. //assertTrue(list.size() == 1);	IMPLEMENTATION	0.9999963650630292	WITHOUT_CLASSIFICATION	3.6349369708229897E-6	IMPLEMENTATION
// SSS FIXME: Cannot optimize this without assuming that Range.to_ary method has not redefined. // So for now, return null!	IMPLEMENTATION	0.9228731065196608	IMPLEMENTATION	0.07712689348033923	WITHOUT_CLASSIFICATION
// TODO Auto-generated method stub	IMPLEMENTATION	0.9994525251878911	IMPLEMENTATION	5.474748121090115E-4	WITHOUT_CLASSIFICATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.9934530262526701	IMPLEMENTATION	0.00654697374732998	WITHOUT_CLASSIFICATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.9934530262526701	IMPLEMENTATION	0.00654697374732998	WITHOUT_CLASSIFICATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.9934530262526701	IMPLEMENTATION	0.00654697374732998	WITHOUT_CLASSIFICATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.930030425268981	IMPLEMENTATION	0.06996957473101897	WITHOUT_CLASSIFICATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.930030425268981	IMPLEMENTATION	0.06996957473101897	WITHOUT_CLASSIFICATION
// TODO: check for ascii string	IMPLEMENTATION	0.9572693139322692	WITHOUT_CLASSIFICATION	0.04273068606773078	IMPLEMENTATION
// filter out any Java primitive names // TODO: should check against all Java reserved names here, not just primitives	IMPLEMENTATION	0.6426327989932146	WITHOUT_CLASSIFICATION	0.3573672010067854	IMPLEMENTATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9383070134357235	WITHOUT_CLASSIFICATION	0.06169298656427653	IMPLEMENTATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9383070134357235	WITHOUT_CLASSIFICATION	0.06169298656427653	IMPLEMENTATION
// TODO: missing additional logic for dealing with conflicting protected fields.	IMPLEMENTATION	0.9405207162004956	IMPLEMENTATION	0.05947928379950436	WITHOUT_CLASSIFICATION
// TODO: better detection when path is absolute or not. // If the path isn't absolute, then prepend the current working // directory to the path.	IMPLEMENTATION	0.9647762509950161	WITHOUT_CLASSIFICATION	0.03522374900498395	IMPLEMENTATION
// FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.531344073567944	WITHOUT_CLASSIFICATION	0.46865592643205606	IMPLEMENTATION
// FIX replace type() == ... with isInstanceOf(...)	IMPLEMENTATION	0.9988276031256874	WITHOUT_CLASSIFICATION	0.0011723968743125287	IMPLEMENTATION
/* TODO: MRI is just a when node.  We need this extra logic for IDE consumers (null in casenode statement should be implicit nil)*/	IMPLEMENTATION	0.519738359025369	IMPLEMENTATION	0.48026164097463103	WITHOUT_CLASSIFICATION
// TODO: This and recacheRespondsTo needed to be synchronized for JRUBY-3466, // but this degraded performance nearly 2x. It's still faster than MRI, but // a reanalysis of this code may show a faster way to ensure we're caching // safely.	IMPLEMENTATION	0.9999847731067542	IMPLEMENTATION	1.5226893245912376E-5	WITHOUT_CLASSIFICATION
// TODO: adjust length so it won't fall in the middle  // of a multi-byte character. MRI's sprintf.c uses tables // in a modified version of regex.c, which assume some // particular  encoding for a given installation/application. // (See regex.c#re_mbcinit in ruby-1.8.5-p12)  // // This is only an issue if the user specifies a precision // that causes the string to be truncated. The same issue // would arise taking a substring of a ByteList-backed RubyString.	IMPLEMENTATION	0.9999953573461222	WITHOUT_CLASSIFICATION	4.642653877809343E-6	IMPLEMENTATION
// set constants now that they're initialized	WITHOUT_CLASSIFICATION	0.9999699620198904	WITHOUT_CLASSIFICATION	3.0037980109586034E-5	IMPLEMENTATION
// line 335	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
// Figure end-char.  '\0' is special to indicate begin=end and that no nesting?	WITHOUT_CLASSIFICATION	0.9999626440690238	WITHOUT_CLASSIFICATION	3.735593097622295E-5	IMPLEMENTATION
// line 362	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 372	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
// line 391	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
/* ^D */	WITHOUT_CLASSIFICATION	0.9999981747302832	WITHOUT_CLASSIFICATION	1.8252697168303275E-6	IMPLEMENTATION
/* ^Z */	WITHOUT_CLASSIFICATION	0.9999981747302832	WITHOUT_CLASSIFICATION	1.8252697168303275E-6	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
//Do nothing	WITHOUT_CLASSIFICATION	0.9998241904556637	WITHOUT_CLASSIFICATION	1.7580954433627345E-4	IMPLEMENTATION
//Do nothing	WITHOUT_CLASSIFICATION	0.9998241904556637	WITHOUT_CLASSIFICATION	1.7580954433627345E-4	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999892929154358	WITHOUT_CLASSIFICATION	1.070708456415161E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999892929154358	WITHOUT_CLASSIFICATION	1.070708456415161E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999892929154358	WITHOUT_CLASSIFICATION	1.070708456415161E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999892929154358	WITHOUT_CLASSIFICATION	1.070708456415161E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999892929154358	WITHOUT_CLASSIFICATION	1.070708456415161E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999892929154358	WITHOUT_CLASSIFICATION	1.070708456415161E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999892929154358	WITHOUT_CLASSIFICATION	1.070708456415161E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999892929154358	WITHOUT_CLASSIFICATION	1.070708456415161E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999892929154358	WITHOUT_CLASSIFICATION	1.070708456415161E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999892929154358	WITHOUT_CLASSIFICATION	1.070708456415161E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999892929154358	WITHOUT_CLASSIFICATION	1.070708456415161E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999892929154358	WITHOUT_CLASSIFICATION	1.070708456415161E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999892929154358	WITHOUT_CLASSIFICATION	1.070708456415161E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999892929154358	WITHOUT_CLASSIFICATION	1.070708456415161E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999892929154358	WITHOUT_CLASSIFICATION	1.070708456415161E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999892929154358	WITHOUT_CLASSIFICATION	1.070708456415161E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999892929154358	WITHOUT_CLASSIFICATION	1.070708456415161E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999892929154358	WITHOUT_CLASSIFICATION	1.070708456415161E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999892929154358	WITHOUT_CLASSIFICATION	1.070708456415161E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999892929154358	WITHOUT_CLASSIFICATION	1.070708456415161E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999892929154358	WITHOUT_CLASSIFICATION	1.070708456415161E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999892929154358	WITHOUT_CLASSIFICATION	1.070708456415161E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999892929154358	WITHOUT_CLASSIFICATION	1.070708456415161E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999892929154358	WITHOUT_CLASSIFICATION	1.070708456415161E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999892929154358	WITHOUT_CLASSIFICATION	1.070708456415161E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999892929154358	WITHOUT_CLASSIFICATION	1.070708456415161E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999892929154358	WITHOUT_CLASSIFICATION	1.070708456415161E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999892929154358	WITHOUT_CLASSIFICATION	1.070708456415161E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999892929154358	WITHOUT_CLASSIFICATION	1.070708456415161E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999892929154358	WITHOUT_CLASSIFICATION	1.070708456415161E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999892929154358	WITHOUT_CLASSIFICATION	1.070708456415161E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999892929154358	WITHOUT_CLASSIFICATION	1.070708456415161E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999892929154358	WITHOUT_CLASSIFICATION	1.070708456415161E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999892929154358	WITHOUT_CLASSIFICATION	1.070708456415161E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999892929154358	WITHOUT_CLASSIFICATION	1.070708456415161E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999892929154358	WITHOUT_CLASSIFICATION	1.070708456415161E-5	IMPLEMENTATION
// return result	WITHOUT_CLASSIFICATION	0.9998117570573639	WITHOUT_CLASSIFICATION	1.882429426360224E-4	IMPLEMENTATION
// name	WITHOUT_CLASSIFICATION	0.9999797091973728	WITHOUT_CLASSIFICATION	2.0290802627229135E-5	IMPLEMENTATION
// Define System.getProperties() in ENV_JAVA	WITHOUT_CLASSIFICATION	0.9999745886287869	WITHOUT_CLASSIFICATION	2.5411371213076606E-5	IMPLEMENTATION
// Accessor methods.	WITHOUT_CLASSIFICATION	0.9995463400733812	WITHOUT_CLASSIFICATION	4.536599266188569E-4	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9995020433699049	WITHOUT_CLASSIFICATION	4.979566300951318E-4	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9995020433699049	WITHOUT_CLASSIFICATION	4.979566300951318E-4	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9995020433699049	WITHOUT_CLASSIFICATION	4.979566300951318E-4	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9995020433699049	WITHOUT_CLASSIFICATION	4.979566300951318E-4	IMPLEMENTATION
// call getpwent to fail early if unsupported	WITHOUT_CLASSIFICATION	0.9999523546202896	WITHOUT_CLASSIFICATION	4.764537971036612E-5	IMPLEMENTATION
// fall back on env entry for USER	WITHOUT_CLASSIFICATION	0.999465891333157	WITHOUT_CLASSIFICATION	5.341086668429971E-4	IMPLEMENTATION
// try to read grent to fail fast	WITHOUT_CLASSIFICATION	0.999969941026134	WITHOUT_CLASSIFICATION	3.005897386603987E-5	IMPLEMENTATION
// define ARGV and $* for this runtime	WITHOUT_CLASSIFICATION	0.999963449443188	WITHOUT_CLASSIFICATION	3.655055681196769E-5	IMPLEMENTATION
// Version information:	WITHOUT_CLASSIFICATION	0.9999085012257695	WITHOUT_CLASSIFICATION	9.149877423055118E-5	IMPLEMENTATION
// after defn of $stderr as the call may produce warnings	WITHOUT_CLASSIFICATION	0.9999794623592236	WITHOUT_CLASSIFICATION	2.0537640776413995E-5	IMPLEMENTATION
// ARGF, $< object	WITHOUT_CLASSIFICATION	0.9997997608120237	WITHOUT_CLASSIFICATION	2.002391879761687E-4	IMPLEMENTATION
// if the environment variables can't be obtained, define an empty ENV	WITHOUT_CLASSIFICATION	0.9999984699331372	WITHOUT_CLASSIFICATION	1.5300668627908283E-6	IMPLEMENTATION
// On platforms without a c-library accessable through JNA, getpid will return hashCode  // as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing // $$ on getpid() where available, we have the same semantics as MRI.	WITHOUT_CLASSIFICATION	0.9999876824662574	WITHOUT_CLASSIFICATION	1.2317533742625188E-5	IMPLEMENTATION
//$@ returns nil if $!.backtrace is not an array	WITHOUT_CLASSIFICATION	0.9996008416741095	WITHOUT_CLASSIFICATION	3.991583258905076E-4	IMPLEMENTATION
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9997801534580623	WITHOUT_CLASSIFICATION	2.1984654193779618E-4	IMPLEMENTATION
// MRI behavior: just plain '//' or '\\\\' are considered illegal on Windows.	WITHOUT_CLASSIFICATION	0.9999913754488059	WITHOUT_CLASSIFICATION	8.624551194152377E-6	IMPLEMENTATION
// this _is_ legal (when removing an undef)	WITHOUT_CLASSIFICATION	0.9995942638742342	WITHOUT_CLASSIFICATION	4.057361257657186E-4	IMPLEMENTATION
// What we passed to the constructor for method 'path'	WITHOUT_CLASSIFICATION	0.9972916021868445	WITHOUT_CLASSIFICATION	0.0027083978131554236	IMPLEMENTATION
// ----- Ruby Class Methods ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999578171755601	WITHOUT_CLASSIFICATION	4.2182824439949093E-5	IMPLEMENTATION
// // CONSTANT TABLE METHODS - pass to delegate //	WITHOUT_CLASSIFICATION	0.9998426954902275	WITHOUT_CLASSIFICATION	1.5730450977256496E-4	IMPLEMENTATION
// We get canonical path to try and flatten the path out. // a dir '/subdir/..' should return as '/' // cnutter: Do we want to flatten path out?	WITHOUT_CLASSIFICATION	0.9996235376611464	WITHOUT_CLASSIFICATION	3.7646233885355295E-4	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9995020433699049	WITHOUT_CLASSIFICATION	4.979566300951318E-4	IMPLEMENTATION
// ----- Ruby Instance Methods -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999070817493283	WITHOUT_CLASSIFICATION	9.291825067164006E-5	IMPLEMENTATION
// Make sure any read()s after close fail.	WITHOUT_CLASSIFICATION	0.9999921799702612	WITHOUT_CLASSIFICATION	7.820029738791334E-6	IMPLEMENTATION
// ----- Helper Methods --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999185069453748	WITHOUT_CLASSIFICATION	8.149305462527384E-5	IMPLEMENTATION
// try to use POSIX for this first	WITHOUT_CLASSIFICATION	0.9997108288870952	WITHOUT_CLASSIFICATION	2.891711129048464E-4	IMPLEMENTATION
// otherwise fall back on the old way	WITHOUT_CLASSIFICATION	0.9763611182391512	WITHOUT_CLASSIFICATION	0.023638881760848877	IMPLEMENTATION
// Proc class	WITHOUT_CLASSIFICATION	0.9997513219183983	WITHOUT_CLASSIFICATION	2.4867808160157934E-4	IMPLEMENTATION
// No passed in block, lets check next outer frame for one ('Proc.new')	WITHOUT_CLASSIFICATION	0.9999899841408628	WITHOUT_CLASSIFICATION	1.001585913722248E-5	IMPLEMENTATION
// modify the block with a new backref/lastline-grabbing scope	WITHOUT_CLASSIFICATION	0.9998091715067661	WITHOUT_CLASSIFICATION	1.9082849323394962E-4	IMPLEMENTATION
// for future compatibility as constructors move toward not accepting metaclass?	WITHOUT_CLASSIFICATION	0.9979179822639308	WITHOUT_CLASSIFICATION	0.002082017736069236	IMPLEMENTATION
//        case RUBY_HYBRID: //            backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); //            break;	WITHOUT_CLASSIFICATION	0.9998105412209874	WITHOUT_CLASSIFICATION	1.8945877901252564E-4	IMPLEMENTATION
// This looks wrong, but it's the way MRI does it.	WITHOUT_CLASSIFICATION	0.9999492915283761	WITHOUT_CLASSIFICATION	5.070847162395027E-5	IMPLEMENTATION
// rb_exc_new3	WITHOUT_CLASSIFICATION	0.9994903392551018	WITHOUT_CLASSIFICATION	5.096607448981903E-4	IMPLEMENTATION
// NOTE: The indicies here match exactly the signal values; do not reorder	WITHOUT_CLASSIFICATION	0.9960501926049864	WITHOUT_CLASSIFICATION	0.003949807395013663	IMPLEMENTATION
//registerThreadDumpSignalHandler(runtime);	WITHOUT_CLASSIFICATION	0.9994792531202606	WITHOUT_CLASSIFICATION	5.20746879739313E-4	IMPLEMENTATION
// IOT is also 6	WITHOUT_CLASSIFICATION	0.9998037976578862	WITHOUT_CLASSIFICATION	1.9620234211380238E-4	IMPLEMENTATION
// CLD is also 20	WITHOUT_CLASSIFICATION	0.9997680186733653	WITHOUT_CLASSIFICATION	2.3198132663472236E-4	IMPLEMENTATION
// RubySignal	WITHOUT_CLASSIFICATION	0.9994903392551018	WITHOUT_CLASSIFICATION	5.096607448981903E-4	IMPLEMENTATION
// ZStream actually *isn't* allocatable	WITHOUT_CLASSIFICATION	0.9997933057069491	WITHOUT_CLASSIFICATION	2.0669429305097454E-4	IMPLEMENTATION
// MRI behavior, enforced by tests	WITHOUT_CLASSIFICATION	0.9999506763579674	WITHOUT_CLASSIFICATION	4.9323642032535686E-5	IMPLEMENTATION
// it's safe since adler.update doesn't modify the array	WITHOUT_CLASSIFICATION	0.9999570809577011	WITHOUT_CLASSIFICATION	4.291904229892763E-5	IMPLEMENTATION
// MRI behavior: in finished mode, we work as pass-through	WITHOUT_CLASSIFICATION	0.9999824633008287	WITHOUT_CLASSIFICATION	1.7536699171339903E-5	IMPLEMENTATION
// SYNC_FLUSH	WITHOUT_CLASSIFICATION	0.9994903392551018	WITHOUT_CLASSIFICATION	5.096607448981903E-4	IMPLEMENTATION
// By default, NO_FLUSH	WITHOUT_CLASSIFICATION	0.999885237283477	WITHOUT_CLASSIFICATION	1.1476271652294496E-4	IMPLEMENTATION
//io.finish();	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
// should invoke seek on realIo	WITHOUT_CLASSIFICATION	0.9994073331170752	WITHOUT_CLASSIFICATION	5.926668829248419E-4	IMPLEMENTATION
// hmm...	WITHOUT_CLASSIFICATION	0.9999889436623457	WITHOUT_CLASSIFICATION	1.1056337654331047E-5	IMPLEMENTATION
// Called before any write to make sure the // header is always written before the first bytes	WITHOUT_CLASSIFICATION	0.9999053601918882	WITHOUT_CLASSIFICATION	9.463980811177608E-5	IMPLEMENTATION
// For JDK 1.4 we can use "cal.getTimeInMillis()"	WITHOUT_CLASSIFICATION	0.991787495945823	WITHOUT_CLASSIFICATION	0.008212504054176959	IMPLEMENTATION
// We can just use dt, since it is immutable	WITHOUT_CLASSIFICATION	0.9999601691597396	WITHOUT_CLASSIFICATION	3.9830840260400114E-5	IMPLEMENTATION
// float number of seconds	WITHOUT_CLASSIFICATION	0.9999586074560508	WITHOUT_CLASSIFICATION	4.139254394917265E-5	IMPLEMENTATION
// modified to match how hash is calculated in 1.8.2	WITHOUT_CLASSIFICATION	0.9997712439818047	WITHOUT_CLASSIFICATION	2.2875601819531772E-4	IMPLEMENTATION
// dump usec, not msec	WITHOUT_CLASSIFICATION	0.9979655570358521	WITHOUT_CLASSIFICATION	0.0020344429641478484	IMPLEMENTATION
/* Time class methods */	WITHOUT_CLASSIFICATION	0.9999920471216334	WITHOUT_CLASSIFICATION	7.95287836671972E-6	IMPLEMENTATION
// marsaling dumps usec, not msec	WITHOUT_CLASSIFICATION	0.9965341884325721	WITHOUT_CLASSIFICATION	0.0034658115674279263	IMPLEMENTATION
// MRI accepts additional wday argument which appears to be ignored.	WITHOUT_CLASSIFICATION	0.9999700051260154	WITHOUT_CLASSIFICATION	2.999487398461894E-5	IMPLEMENTATION
// set up with min values and then add to allow rolling over	WITHOUT_CLASSIFICATION	0.9999973181311934	WITHOUT_CLASSIFICATION	2.681868806578687E-6	IMPLEMENTATION
// the instant at which we will ask dtz what the difference between DST and // standard time is	WITHOUT_CLASSIFICATION	0.9996570123960801	WITHOUT_CLASSIFICATION	3.429876039198839E-4	IMPLEMENTATION
// if we might be moving this time from !DST -> DST, the offset is assumed // to be the same as it was just before we last moved from DST -> !DST	WITHOUT_CLASSIFICATION	0.9999999978510911	WITHOUT_CLASSIFICATION	2.148908892416413E-9	IMPLEMENTATION
// Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.	WITHOUT_CLASSIFICATION	0.9970649612921919	WITHOUT_CLASSIFICATION	0.002935038707808148	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999938805580627	WITHOUT_CLASSIFICATION	6.119441937270031E-6	IMPLEMENTATION
/* If the value will fit in a Fixnum, return one of those. */	WITHOUT_CLASSIFICATION	0.9999999531389556	WITHOUT_CLASSIFICATION	4.686104428995956E-8	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999945707039792	WITHOUT_CLASSIFICATION	5.42929602075203E-6	IMPLEMENTATION
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9998220805399509	WITHOUT_CLASSIFICATION	1.7791946004912256E-4	IMPLEMENTATION
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9381684555120565	WITHOUT_CLASSIFICATION	0.061831544487943486	IMPLEMENTATION
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9381684555120565	WITHOUT_CLASSIFICATION	0.061831544487943486	IMPLEMENTATION
// no bignorm here needed	WITHOUT_CLASSIFICATION	0.8166133352130662	WITHOUT_CLASSIFICATION	0.1833866647869338	IMPLEMENTATION
// wow, the only time we can use the java protocol ;)	WITHOUT_CLASSIFICATION	0.9998050083191059	WITHOUT_CLASSIFICATION	1.949916808941274E-4	IMPLEMENTATION
// Pad with a 0	WITHOUT_CLASSIFICATION	0.9996169119583495	WITHOUT_CLASSIFICATION	3.830880416505238E-4	IMPLEMENTATION
// BigInteger required a sign byte in incoming array	WITHOUT_CLASSIFICATION	0.999962542711991	WITHOUT_CLASSIFICATION	3.745728800898198E-5	IMPLEMENTATION
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9999996866401697	WITHOUT_CLASSIFICATION	3.1335983029175093E-7	IMPLEMENTATION
// We do this b/c make_tmpname might be overridden	WITHOUT_CLASSIFICATION	0.9999593474378092	WITHOUT_CLASSIFICATION	4.065256219072076E-5	IMPLEMENTATION
// ???	WITHOUT_CLASSIFICATION	0.9999761476002571	WITHOUT_CLASSIFICATION	2.3852399742907437E-5	IMPLEMENTATION
// PID	WITHOUT_CLASSIFICATION	0.9999889741076787	WITHOUT_CLASSIFICATION	1.1025892321224842E-5	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999945707039792	WITHOUT_CLASSIFICATION	5.42929602075203E-6	IMPLEMENTATION
// elements and trailing nils	WITHOUT_CLASSIFICATION	0.9999871074730655	WITHOUT_CLASSIFICATION	1.28925269345027E-5	IMPLEMENTATION
// Dir::tmpdir	WITHOUT_CLASSIFICATION	0.9994903392551018	WITHOUT_CLASSIFICATION	5.096607448981903E-4	IMPLEMENTATION
// volatile to ensure that initial nil-fill is visible to other threads	WITHOUT_CLASSIFICATION	0.9998478795095014	WITHOUT_CLASSIFICATION	1.5212049049854204E-4	IMPLEMENTATION
/* Ruby arrays default to holding 16 elements, so we create an         * ArrayList of the same size if we're not told otherwise         */	WITHOUT_CLASSIFICATION	0.9999939229826849	WITHOUT_CLASSIFICATION	6.07701731519366E-6	IMPLEMENTATION
/* rb_ary_new2     * just allocates the internal array     */	WITHOUT_CLASSIFICATION	0.9999975196014071	WITHOUT_CLASSIFICATION	2.480398592855227E-6	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999924755513091	WITHOUT_CLASSIFICATION	7.5244486909362735E-6	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999924755513091	WITHOUT_CLASSIFICATION	7.5244486909362735E-6	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999924755513091	WITHOUT_CLASSIFICATION	7.5244486909362735E-6	IMPLEMENTATION
/* Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour     *      */	WITHOUT_CLASSIFICATION	0.9999839744928186	WITHOUT_CLASSIFICATION	1.6025507181388294E-5	IMPLEMENTATION
/* NEWOBJ and OBJSETUP equivalent     * fastest one, for shared arrays, optional objectspace     */	WITHOUT_CLASSIFICATION	0.9999957089799945	WITHOUT_CLASSIFICATION	4.2910200055175944E-6	IMPLEMENTATION
// Create global constants and variables	WITHOUT_CLASSIFICATION	0.9999985369670842	WITHOUT_CLASSIFICATION	1.4630329157881115E-6	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9891717068154474	WITHOUT_CLASSIFICATION	0.010828293184552685	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9891717068154474	WITHOUT_CLASSIFICATION	0.010828293184552685	IMPLEMENTATION
// Windows does not support these functions, so we won't even try // This also matches Ruby behavior for JRUBY-2353.	WITHOUT_CLASSIFICATION	0.9998635340808473	WITHOUT_CLASSIFICATION	1.3646591915276554E-4	IMPLEMENTATION
// There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and // newer one (US/Pacific, America/Los_Angeles). This pattern is to detect // the legacy TZ format in order to convert it to the newer format // understood by Java API.	WITHOUT_CLASSIFICATION	0.9999819491866415	WITHOUT_CLASSIFICATION	1.8050813358520473E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9891717068154474	WITHOUT_CLASSIFICATION	0.010828293184552685	IMPLEMENTATION
// 1.9 seems to just do inspect for to_s now	WITHOUT_CLASSIFICATION	0.9999984196354613	WITHOUT_CLASSIFICATION	1.5803645387096135E-6	IMPLEMENTATION
// possibly should not in object space	WITHOUT_CLASSIFICATION	0.9998920871998532	WITHOUT_CLASSIFICATION	1.0791280014670282E-4	IMPLEMENTATION
// only fill if there actually will remain trailing storage	WITHOUT_CLASSIFICATION	0.9999829130979455	WITHOUT_CLASSIFICATION	1.7086902054520312E-5	IMPLEMENTATION
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9994903392551018	WITHOUT_CLASSIFICATION	5.096607448981903E-4	IMPLEMENTATION
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9994903392551018	WITHOUT_CLASSIFICATION	5.096607448981903E-4	IMPLEMENTATION
// from DUP_SETUP	WITHOUT_CLASSIFICATION	0.9999083234629966	WITHOUT_CLASSIFICATION	9.167653700347796E-5	IMPLEMENTATION
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999456071256381	WITHOUT_CLASSIFICATION	5.4392874361854204E-5	IMPLEMENTATION
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.99993852643765	WITHOUT_CLASSIFICATION	6.147356234995126E-5	IMPLEMENTATION
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.99993852643765	WITHOUT_CLASSIFICATION	6.147356234995126E-5	IMPLEMENTATION
// Satisfy java.util.List interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9998628310076491	WITHOUT_CLASSIFICATION	1.3716899235088808E-4	IMPLEMENTATION
// pre-set for the sake of terminating recursive calls	WITHOUT_CLASSIFICATION	0.9999403692159504	WITHOUT_CLASSIFICATION	5.963078404954791E-5	IMPLEMENTATION
/* root fiber */	WITHOUT_CLASSIFICATION	0.9999142188646086	WITHOUT_CLASSIFICATION	8.578113539129701E-5	IMPLEMENTATION
// GMT+00:00 --> Etc/GMT, see "MRI behavior" // comment below.	WITHOUT_CLASSIFICATION	0.9999140236819504	WITHOUT_CLASSIFICATION	8.597631804957621E-5	IMPLEMENTATION
//  See http://www.gzip.org/zlib/rfc-gzip.html	WITHOUT_CLASSIFICATION	0.9999131226449623	WITHOUT_CLASSIFICATION	8.687735503764637E-5	IMPLEMENTATION
// extras flag	WITHOUT_CLASSIFICATION	0.9992939443084407	WITHOUT_CLASSIFICATION	7.060556915593766E-4	IMPLEMENTATION
// Zlib::NO_FLUSH	WITHOUT_CLASSIFICATION	0.9994903392551018	WITHOUT_CLASSIFICATION	5.096607448981903E-4	IMPLEMENTATION
// ...nothing	WITHOUT_CLASSIFICATION	0.9994903392551018	WITHOUT_CLASSIFICATION	5.096607448981903E-4	IMPLEMENTATION
// utility method	WITHOUT_CLASSIFICATION	0.9988938130404732	WITHOUT_CLASSIFICATION	0.0011061869595267843	IMPLEMENTATION
// Prepare LoadService and load path	WITHOUT_CLASSIFICATION	0.9999487975124179	WITHOUT_CLASSIFICATION	5.120248758203551E-5	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999945707039792	WITHOUT_CLASSIFICATION	5.42929602075203E-6	IMPLEMENTATION
// flags // 4 bytes of modified time	WITHOUT_CLASSIFICATION	0.999965958199345	WITHOUT_CLASSIFICATION	3.404180065490497E-5	IMPLEMENTATION
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.999845193012231	WITHOUT_CLASSIFICATION	1.5480698776896589E-4	IMPLEMENTATION
// 1.8 "include?"	WITHOUT_CLASSIFICATION	0.9994903392551018	WITHOUT_CLASSIFICATION	5.096607448981903E-4	IMPLEMENTATION
// any BigInteger is bigger than Fixnum and we don't have FIXABLE	WITHOUT_CLASSIFICATION	0.9999676927580611	WITHOUT_CLASSIFICATION	3.2307241938929815E-5	IMPLEMENTATION
// beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal	WITHOUT_CLASSIFICATION	0.9999728506292911	WITHOUT_CLASSIFICATION	2.7149370708898857E-5	IMPLEMENTATION
// MRI does it!	WITHOUT_CLASSIFICATION	0.999919870247564	WITHOUT_CLASSIFICATION	8.012975243597262E-5	IMPLEMENTATION
// won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999960771542313	WITHOUT_CLASSIFICATION	3.9228457686437475E-6	IMPLEMENTATION
// it won't hurt fixnums	WITHOUT_CLASSIFICATION	0.999991388581775	WITHOUT_CLASSIFICATION	8.611418224930083E-6	IMPLEMENTATION
// RubyClassPathVariable	WITHOUT_CLASSIFICATION	0.999907900922588	WITHOUT_CLASSIFICATION	9.209907741204226E-5	IMPLEMENTATION
// not to be confused with RubyObject's flags	WITHOUT_CLASSIFICATION	0.998340420078711	WITHOUT_CLASSIFICATION	0.0016595799212889308	IMPLEMENTATION
// second argument is allowed, but ignored (MRI)	WITHOUT_CLASSIFICATION	0.9999843953290957	WITHOUT_CLASSIFICATION	1.560467090437654E-5	IMPLEMENTATION
// we are presumably running a precompiled class; load directly	WITHOUT_CLASSIFICATION	0.9999290445274076	WITHOUT_CLASSIFICATION	7.095547259235918E-5	IMPLEMENTATION
// terminate; tryCompile will have printed out an error and we're done	WITHOUT_CLASSIFICATION	0.9999645694475152	WITHOUT_CLASSIFICATION	3.5430552484800664E-5	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999934475540859	WITHOUT_CLASSIFICATION	6.552445914198797E-6	IMPLEMENTATION
// do nothing, this iteration restarts	WITHOUT_CLASSIFICATION	0.9997366215258974	WITHOUT_CLASSIFICATION	2.6337847410258454E-4	IMPLEMENTATION
// recheck condition	WITHOUT_CLASSIFICATION	0.9995396600497807	WITHOUT_CLASSIFICATION	4.603399502193151E-4	IMPLEMENTATION
// Get the main threadcontext (gets constructed for us)	WITHOUT_CLASSIFICATION	0.9998440200228492	WITHOUT_CLASSIFICATION	1.5597997715076733E-4	IMPLEMENTATION
// Construct key services	WITHOUT_CLASSIFICATION	0.9999000257339585	WITHOUT_CLASSIFICATION	9.9974266041499E-5	IMPLEMENTATION
// initialize the root of the class hierarchy completely	WITHOUT_CLASSIFICATION	0.9999846408125111	WITHOUT_CLASSIFICATION	1.5359187488818622E-5	IMPLEMENTATION
// Construct the top-level execution frame and scope for the main thread	WITHOUT_CLASSIFICATION	0.9997320262266852	WITHOUT_CLASSIFICATION	2.6797377331483206E-4	IMPLEMENTATION
// Initialize all the core classes	WITHOUT_CLASSIFICATION	0.9998958735383268	WITHOUT_CLASSIFICATION	1.0412646167318246E-4	IMPLEMENTATION
// Initialize the "dummy" class used as a marker	WITHOUT_CLASSIFICATION	0.9999560435805481	WITHOUT_CLASSIFICATION	4.395641945183848E-5	IMPLEMENTATION
// Initialize Kernel and include into Object	WITHOUT_CLASSIFICATION	0.9999028504270008	WITHOUT_CLASSIFICATION	9.714957299926105E-5	IMPLEMENTATION
// Object is ready, create top self	WITHOUT_CLASSIFICATION	0.9999161961105585	WITHOUT_CLASSIFICATION	8.380388944153686E-5	IMPLEMENTATION
// Pre-create all the core classes potentially referenced during startup	WITHOUT_CLASSIFICATION	0.9997686420292701	WITHOUT_CLASSIFICATION	2.3135797072988744E-4	IMPLEMENTATION
// Math depends on all numeric types	WITHOUT_CLASSIFICATION	0.9993311242638616	WITHOUT_CLASSIFICATION	6.688757361384588E-4	IMPLEMENTATION
// depends on IO, FileTest	WITHOUT_CLASSIFICATION	0.9996849755592103	WITHOUT_CLASSIFICATION	3.1502444078974375E-4	IMPLEMENTATION
// initialize builtin libraries	WITHOUT_CLASSIFICATION	0.9998938641843962	WITHOUT_CLASSIFICATION	1.0613581560382013E-4	IMPLEMENTATION
// Require in all libraries specified on command line	WITHOUT_CLASSIFICATION	0.9999347136197168	WITHOUT_CLASSIFICATION	6.528638028319646E-5	IMPLEMENTATION
// Bootstrap the top of the hierarchy	WITHOUT_CLASSIFICATION	0.9998823347658296	WITHOUT_CLASSIFICATION	1.1766523417047163E-4	IMPLEMENTATION
// we try to get the classloader that loaded JRuby, falling back on System	WITHOUT_CLASSIFICATION	0.9994481027348706	WITHOUT_CLASSIFICATION	5.518972651293745E-4	IMPLEMENTATION
// determine spacing	WITHOUT_CLASSIFICATION	0.9997706904188488	WITHOUT_CLASSIFICATION	2.2930958115131446E-4	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999978452653895	WITHOUT_CLASSIFICATION	2.154734610513148E-6	IMPLEMENTATION
// For JSR 223 support: see http://scripting.java.net/	WITHOUT_CLASSIFICATION	0.9998832963264778	WITHOUT_CLASSIFICATION	1.1670367352232904E-4	IMPLEMENTATION
// use this for JRuby-internal finalizers	WITHOUT_CLASSIFICATION	0.9996311727736735	WITHOUT_CLASSIFICATION	3.688272263264101E-4	IMPLEMENTATION
// this method is for finalizers registered via ObjectSpace	WITHOUT_CLASSIFICATION	0.9997676433544882	WITHOUT_CLASSIFICATION	2.3235664551192532E-4	IMPLEMENTATION
// new factory methods ------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9998602502599636	WITHOUT_CLASSIFICATION	1.3974974003634456E-4	IMPLEMENTATION
//        assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9636619847853889	WITHOUT_CLASSIFICATION	0.036338015214611025	IMPLEMENTATION
// Equivalent of Data_Wrap_Struct	WITHOUT_CLASSIFICATION	0.9999397805430031	WITHOUT_CLASSIFICATION	6.0219456996777525E-5	IMPLEMENTATION
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999565204500582	WITHOUT_CLASSIFICATION	4.347954994178671E-5	IMPLEMENTATION
// ChannelDescriptors opened by sysopen are cached to avoid collection	WITHOUT_CLASSIFICATION	0.9999032305482896	WITHOUT_CLASSIFICATION	9.67694517105109E-5	IMPLEMENTATION
// Default objects	WITHOUT_CLASSIFICATION	0.9991441225462672	WITHOUT_CLASSIFICATION	8.558774537329011E-4	IMPLEMENTATION
// record separator var, to speed up io ops that use it	WITHOUT_CLASSIFICATION	0.9997023687190122	WITHOUT_CLASSIFICATION	2.976312809878936E-4	IMPLEMENTATION
// former java.lang.System concepts now internalized for MVM	WITHOUT_CLASSIFICATION	0.9999610524967331	WITHOUT_CLASSIFICATION	3.894750326694358E-5	IMPLEMENTATION
// Java support	WITHOUT_CLASSIFICATION	0.9955185199121459	WITHOUT_CLASSIFICATION	0.004481480087854181	IMPLEMENTATION
// Parser stats	WITHOUT_CLASSIFICATION	0.9994955878989064	WITHOUT_CLASSIFICATION	5.044121010936775E-4	IMPLEMENTATION
// Compilation	WITHOUT_CLASSIFICATION	0.9994903392551018	WITHOUT_CLASSIFICATION	5.096607448981903E-4	IMPLEMENTATION
// can't read non-standard properties	WITHOUT_CLASSIFICATION	0.999879994320519	WITHOUT_CLASSIFICATION	1.200056794810371E-4	IMPLEMENTATION
// can't create custom classloaders	WITHOUT_CLASSIFICATION	0.9998211367569103	WITHOUT_CLASSIFICATION	1.7886324308961563E-4	IMPLEMENTATION
// mutex that controls modifications of user-defined finalizers	WITHOUT_CLASSIFICATION	0.9998913401766103	WITHOUT_CLASSIFICATION	1.086598233896498E-4	IMPLEMENTATION
// mutex that controls modifications of internal finalizers	WITHOUT_CLASSIFICATION	0.9998814264033412	WITHOUT_CLASSIFICATION	1.1857359665879758E-4	IMPLEMENTATION
// A thread pool to use for executing this runtime's Ruby threads	WITHOUT_CLASSIFICATION	0.9988261869000605	WITHOUT_CLASSIFICATION	0.0011738130999394147	IMPLEMENTATION
// A global object lock for class hierarchy mutations	WITHOUT_CLASSIFICATION	0.9999989390178313	WITHOUT_CLASSIFICATION	1.0609821687071785E-6	IMPLEMENTATION
// initial spaces // spaces before "at"	WITHOUT_CLASSIFICATION	0.9999467834937276	WITHOUT_CLASSIFICATION	5.321650627236759E-5	IMPLEMENTATION
// event name // filename // line numbers should be 1-based	WITHOUT_CLASSIFICATION	0.999968284601143	WITHOUT_CLASSIFICATION	3.171539885707909E-5	IMPLEMENTATION
// The method is intentionally not public, since it typically should // not be used outside of the core.	WITHOUT_CLASSIFICATION	0.9990231953242252	WITHOUT_CLASSIFICATION	9.768046757746684E-4	IMPLEMENTATION
// Note: this field and the following static initializer // must be located be in this order!	WITHOUT_CLASSIFICATION	0.9999421375711973	WITHOUT_CLASSIFICATION	5.786242880275822E-5	IMPLEMENTATION
// Contains a list of all blocks (as Procs) that should be called when // the runtime environment exits.	WITHOUT_CLASSIFICATION	0.9999974587251538	WITHOUT_CLASSIFICATION	2.5412748462909572E-6	IMPLEMENTATION
// quoted-printable	WITHOUT_CLASSIFICATION	0.9994903392551018	WITHOUT_CLASSIFICATION	5.096607448981903E-4	IMPLEMENTATION
// default options	WITHOUT_CLASSIFICATION	0.9999216331239952	WITHOUT_CLASSIFICATION	7.836687600478216E-5	IMPLEMENTATION
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9994903392551018	WITHOUT_CLASSIFICATION	5.096607448981903E-4	IMPLEMENTATION
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9994903392551018	WITHOUT_CLASSIFICATION	5.096607448981903E-4	IMPLEMENTATION
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9994903392551018	WITHOUT_CLASSIFICATION	5.096607448981903E-4	IMPLEMENTATION
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9994903392551018	WITHOUT_CLASSIFICATION	5.096607448981903E-4	IMPLEMENTATION
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999889436623457	WITHOUT_CLASSIFICATION	1.1056337654331047E-5	IMPLEMENTATION
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999889436623457	WITHOUT_CLASSIFICATION	1.1056337654331047E-5	IMPLEMENTATION
// UTF-8	WITHOUT_CLASSIFICATION	0.9999891050939168	WITHOUT_CLASSIFICATION	1.0894906083148611E-5	IMPLEMENTATION
// UTF-8	WITHOUT_CLASSIFICATION	0.9999891050939168	WITHOUT_CLASSIFICATION	1.0894906083148611E-5	IMPLEMENTATION
// long name option	WITHOUT_CLASSIFICATION	0.9995805670877024	WITHOUT_CLASSIFICATION	4.1943291229770864E-4	IMPLEMENTATION
// conversion	WITHOUT_CLASSIFICATION	0.9997025035546409	WITHOUT_CLASSIFICATION	2.974964453591418E-4	IMPLEMENTATION
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999994490137276	WITHOUT_CLASSIFICATION	5.509862723983551E-6	IMPLEMENTATION
// string doesn't share any resources	WITHOUT_CLASSIFICATION	0.9999990462143727	WITHOUT_CLASSIFICATION	9.537856271764155E-7	IMPLEMENTATION
// string has it's own ByteList, but it's pointing to a shared buffer (byte[])	WITHOUT_CLASSIFICATION	0.9999988768990276	WITHOUT_CLASSIFICATION	1.1231009724128617E-6	IMPLEMENTATION
// string doesn't have it's own ByteList (values)	WITHOUT_CLASSIFICATION	0.9999950204661735	WITHOUT_CLASSIFICATION	4.9795338264706395E-6	IMPLEMENTATION
// ENC_CODERANGE_ASCIIONLY	WITHOUT_CLASSIFICATION	0.999907900922588	WITHOUT_CLASSIFICATION	9.209907741204226E-5	IMPLEMENTATION
// rb_enc_str_asciionly_p	WITHOUT_CLASSIFICATION	0.999907900922588	WITHOUT_CLASSIFICATION	9.209907741204226E-5	IMPLEMENTATION
// rb_enc_str_coderange	WITHOUT_CLASSIFICATION	0.999907900922588	WITHOUT_CLASSIFICATION	9.209907741204226E-5	IMPLEMENTATION
// rb_str_hash_cmp	WITHOUT_CLASSIFICATION	0.9994903392551018	WITHOUT_CLASSIFICATION	5.096607448981903E-4	IMPLEMENTATION
// Deprecated String construction routines	WITHOUT_CLASSIFICATION	0.9998981075073967	WITHOUT_CLASSIFICATION	1.0189249260331604E-4	IMPLEMENTATION
// String construction routines by NOT byte[] buffer and NOT making the target String shared 	WITHOUT_CLASSIFICATION	0.9999862847627488	WITHOUT_CLASSIFICATION	1.3715237251198933E-5	IMPLEMENTATION
/* rb_str_subseq */	WITHOUT_CLASSIFICATION	0.9999158260374922	WITHOUT_CLASSIFICATION	8.4173962507808E-5	IMPLEMENTATION
// no need to assign encoding, same bytelist shared	WITHOUT_CLASSIFICATION	0.9997179530941572	WITHOUT_CLASSIFICATION	2.820469058428626E-4	IMPLEMENTATION
// if len == 0 then shared empty	WITHOUT_CLASSIFICATION	0.9999876767299571	WITHOUT_CLASSIFICATION	1.2323270042938345E-5	IMPLEMENTATION
/* rb_str_cmp_m */	WITHOUT_CLASSIFICATION	0.9999158260374922	WITHOUT_CLASSIFICATION	8.4173962507808E-5	IMPLEMENTATION
// we limit to int because ByteBuffer can only allocate int sizes	WITHOUT_CLASSIFICATION	0.9998608845914861	WITHOUT_CLASSIFICATION	1.3911540851388284E-4	IMPLEMENTATION
// // rb_str_buf_append	WITHOUT_CLASSIFICATION	0.999907900922588	WITHOUT_CLASSIFICATION	9.209907741204226E-5	IMPLEMENTATION
// encoding doesn't have to be copied.	WITHOUT_CLASSIFICATION	0.999980783146832	WITHOUT_CLASSIFICATION	1.9216853167995917E-5	IMPLEMENTATION
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9995336859533992	WITHOUT_CLASSIFICATION	4.663140466006898E-4	IMPLEMENTATION
// must not reallocate	WITHOUT_CLASSIFICATION	0.9961393864899559	WITHOUT_CLASSIFICATION	0.003860613510044034	IMPLEMENTATION
// Illegal combination	WITHOUT_CLASSIFICATION	0.9999079517949588	WITHOUT_CLASSIFICATION	9.204820504116644E-5	IMPLEMENTATION
// use 1.8 impl	WITHOUT_CLASSIFICATION	0.9988586259384363	WITHOUT_CLASSIFICATION	0.0011413740615636788	IMPLEMENTATION
/* RubyString aka rb_string_value */	WITHOUT_CLASSIFICATION	0.9999741139862605	WITHOUT_CLASSIFICATION	2.5886013739515137E-5	IMPLEMENTATION
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999774579887695	WITHOUT_CLASSIFICATION	2.254201123060823E-5	IMPLEMENTATION
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999995035169472	WITHOUT_CLASSIFICATION	4.96483052879271E-7	IMPLEMENTATION
/* len + margin */	WITHOUT_CLASSIFICATION	0.9998909155097755	WITHOUT_CLASSIFICATION	1.0908449022449116E-4	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9990635027223164	WITHOUT_CLASSIFICATION	9.364972776836183E-4	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9990635027223164	WITHOUT_CLASSIFICATION	9.364972776836183E-4	IMPLEMENTATION
/* copy pre-match substr */	WITHOUT_CLASSIFICATION	0.9999928496161008	WITHOUT_CLASSIFICATION	7.1503838991228845E-6	IMPLEMENTATION
// string given	WITHOUT_CLASSIFICATION	0.9999758730567756	WITHOUT_CLASSIFICATION	2.4126943224440704E-5	IMPLEMENTATION
// hash given	WITHOUT_CLASSIFICATION	0.9992858411365181	WITHOUT_CLASSIFICATION	7.141588634819141E-4	IMPLEMENTATION
// This represents left most digit in a set of incremented // values?  Therefore leftmost numeric must be '1' and not '0' // 999 -> 1000, not 999 -> 0000.  whereas chars should be // zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"	WITHOUT_CLASSIFICATION	0.9999986550236747	WITHOUT_CLASSIFICATION	1.3449763253465142E-6	IMPLEMENTATION
/* substring longer than string */	WITHOUT_CLASSIFICATION	0.9999989305834551	WITHOUT_CLASSIFICATION	1.0694165449034402E-6	IMPLEMENTATION
/* rb_str_substr */	WITHOUT_CLASSIFICATION	0.9999158260374922	WITHOUT_CLASSIFICATION	8.4173962507808E-5	IMPLEMENTATION
// nothing	WITHOUT_CLASSIFICATION	0.9999985614229574	WITHOUT_CLASSIFICATION	1.4385770425937494E-6	IMPLEMENTATION
// nothing	WITHOUT_CLASSIFICATION	0.9999985614229574	WITHOUT_CLASSIFICATION	1.4385770425937494E-6	IMPLEMENTATION
/* rb_str_splice */	WITHOUT_CLASSIFICATION	0.9999158260374922	WITHOUT_CLASSIFICATION	8.4173962507808E-5	IMPLEMENTATION
// TODO: keep cr // TODO: rb_str_splice_0	WITHOUT_CLASSIFICATION	0.6548503226339909	IMPLEMENTATION	0.34514967736600927	WITHOUT_CLASSIFICATION
// keep cr ?	WITHOUT_CLASSIFICATION	0.9995980136358174	WITHOUT_CLASSIFICATION	4.019863641826132E-4	IMPLEMENTATION
// keep cr ?	WITHOUT_CLASSIFICATION	0.9995980136358174	WITHOUT_CLASSIFICATION	4.019863641826132E-4	IMPLEMENTATION
/* wrapped to \0...\0.  search next valid char. */	WITHOUT_CLASSIFICATION	0.9999900538468693	WITHOUT_CLASSIFICATION	9.946153130604357E-6	IMPLEMENTATION
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9994036468807257	WITHOUT_CLASSIFICATION	5.963531192744242E-4	IMPLEMENTATION
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9994036468807257	WITHOUT_CLASSIFICATION	5.963531192744242E-4	IMPLEMENTATION
// modified	WITHOUT_CLASSIFICATION	0.9985852951343507	WITHOUT_CLASSIFICATION	0.0014147048656492744	IMPLEMENTATION
// modified	WITHOUT_CLASSIFICATION	0.9985852951343507	WITHOUT_CLASSIFICATION	0.0014147048656492744	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.9999889436623457	WITHOUT_CLASSIFICATION	1.1056337654331047E-5	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.9999889436623457	WITHOUT_CLASSIFICATION	1.1056337654331047E-5	IMPLEMENTATION
// QTRUE	WITHOUT_CLASSIFICATION	0.9999889436623457	WITHOUT_CLASSIFICATION	1.1056337654331047E-5	IMPLEMENTATION
/* retrieve last replacer */	WITHOUT_CLASSIFICATION	0.9999906029149895	WITHOUT_CLASSIFICATION	9.397085010416426E-6	IMPLEMENTATION
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9947946057407973	WITHOUT_CLASSIFICATION	0.005205394259202667	IMPLEMENTATION
// long size * bits in byte	WITHOUT_CLASSIFICATION	0.9999977269432498	WITHOUT_CLASSIFICATION	2.2730567501118625E-6	IMPLEMENTATION
// from encoding, special-casing ASCII* to ASCII	WITHOUT_CLASSIFICATION	0.9999760255345377	WITHOUT_CLASSIFICATION	2.39744654622258E-5	IMPLEMENTATION
// to encoding, same special-casing	WITHOUT_CLASSIFICATION	0.999899268887221	WITHOUT_CLASSIFICATION	1.0073111277902572E-4	IMPLEMENTATION
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.999919006492672	WITHOUT_CLASSIFICATION	8.09935073281203E-5	IMPLEMENTATION
// decode from "from" and encode to "to"	WITHOUT_CLASSIFICATION	0.99998418149747	WITHOUT_CLASSIFICATION	1.581850253001257E-5	IMPLEMENTATION
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.999919006492672	WITHOUT_CLASSIFICATION	8.09935073281203E-5	IMPLEMENTATION
//Kernel is the only Module that doesn't need an implementor	WITHOUT_CLASSIFICATION	0.9998735769332534	WITHOUT_CLASSIFICATION	1.2642306674654443E-4	IMPLEMENTATION
// no binding given, use (eval)	WITHOUT_CLASSIFICATION	0.9996686036242562	WITHOUT_CLASSIFICATION	3.3139637574384264E-4	IMPLEMENTATION
// interned, OK for "fast" methods	WITHOUT_CLASSIFICATION	0.9998090876408192	WITHOUT_CLASSIFICATION	1.9091235918074068E-4	IMPLEMENTATION
// File to be loaded by autoload has already been or is being loaded.	WITHOUT_CLASSIFICATION	0.9999987095319556	WITHOUT_CLASSIFICATION	1.2904680443807632E-6	IMPLEMENTATION
// rb_cstr_to_dbl case	WITHOUT_CLASSIFICATION	0.9998475071384314	WITHOUT_CLASSIFICATION	1.524928615685767E-4	IMPLEMENTATION
// We break if we know this sleep was explicitly woken up/interrupted	WITHOUT_CLASSIFICATION	0.9996472782656182	WITHOUT_CLASSIFICATION	3.5272173438191207E-4	IMPLEMENTATION
// exec process, create IO with process	WITHOUT_CLASSIFICATION	0.99985984822927	WITHOUT_CLASSIFICATION	1.401517707300355E-4	IMPLEMENTATION
// Zero sleeps forever	WITHOUT_CLASSIFICATION	0.9999083503023733	WITHOUT_CLASSIFICATION	9.164969762665477E-5	IMPLEMENTATION
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9986696637013317	WITHOUT_CLASSIFICATION	0.0013303362986683655	IMPLEMENTATION
// Explicit zero in MRI returns immediately	WITHOUT_CLASSIFICATION	0.9999876070625423	WITHOUT_CLASSIFICATION	1.239293745768843E-5	IMPLEMENTATION
// Spurious wakeup-loop	WITHOUT_CLASSIFICATION	0.999907900922588	WITHOUT_CLASSIFICATION	9.209907741204226E-5	IMPLEMENTATION
// adjusts paths started with '/' or '\\', on windows.	WITHOUT_CLASSIFICATION	0.9995213660186144	WITHOUT_CLASSIFICATION	4.786339813856226E-4	IMPLEMENTATION
// file not given	WITHOUT_CLASSIFICATION	0.9740873100483877	WITHOUT_CLASSIFICATION	0.025912689951612323	IMPLEMENTATION
// string to eval	WITHOUT_CLASSIFICATION	0.9999853861486739	WITHOUT_CLASSIFICATION	1.4613851325958199E-5	IMPLEMENTATION
// binding given, use binding's file	WITHOUT_CLASSIFICATION	0.9994073160827897	WITHOUT_CLASSIFICATION	5.926839172103229E-4	IMPLEMENTATION
// ?g  | boolean | True if file1 has the \CF{setgid} bit	WITHOUT_CLASSIFICATION	0.9999961934162913	WITHOUT_CLASSIFICATION	3.8065837087527174E-6	IMPLEMENTATION
// bomb out, it's not a binding or a proc	WITHOUT_CLASSIFICATION	0.9962192237127933	WITHOUT_CLASSIFICATION	0.0037807762872068516	IMPLEMENTATION
// Ordering of array traversal not important, just intuitive	WITHOUT_CLASSIFICATION	0.9998435360961037	WITHOUT_CLASSIFICATION	1.5646390389639916E-4	IMPLEMENTATION
//Catch active, throw for catch to handle	WITHOUT_CLASSIFICATION	0.9978580065178757	WITHOUT_CLASSIFICATION	0.002141993482124219	IMPLEMENTATION
// No catch active for this throw	WITHOUT_CLASSIFICATION	0.9998446912430144	WITHOUT_CLASSIFICATION	1.5530875698549143E-4	IMPLEMENTATION
// without full tracing, many events will not fire	WITHOUT_CLASSIFICATION	0.9959350842283956	WITHOUT_CLASSIFICATION	0.004064915771604392	IMPLEMENTATION
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9998391460577402	WITHOUT_CLASSIFICATION	1.60853942259963E-4	IMPLEMENTATION
// MRI behavior: use first byte of string value if len > 0	WITHOUT_CLASSIFICATION	0.9999997906178996	WITHOUT_CLASSIFICATION	2.09382100555037E-7	IMPLEMENTATION
// MRI behavior: now check arg count	WITHOUT_CLASSIFICATION	0.9999111769429241	WITHOUT_CLASSIFICATION	8.882305707594159E-5	IMPLEMENTATION
// ?A  | Time    | Last access time for file1	WITHOUT_CLASSIFICATION	0.99998816187357	WITHOUT_CLASSIFICATION	1.1838126429970845E-5	IMPLEMENTATION
// ?b  | boolean | True if file1 is a block device	WITHOUT_CLASSIFICATION	0.9999973232238483	WITHOUT_CLASSIFICATION	2.676776151700103E-6	IMPLEMENTATION
// ?c  | boolean | True if file1 is a character device	WITHOUT_CLASSIFICATION	0.9999979962506816	WITHOUT_CLASSIFICATION	2.0037493183650644E-6	IMPLEMENTATION
// ?C  | Time    | Last change time for file1	WITHOUT_CLASSIFICATION	0.9999961533507877	WITHOUT_CLASSIFICATION	3.846649212271169E-6	IMPLEMENTATION
// ?d  | boolean | True if file1 exists and is a directory	WITHOUT_CLASSIFICATION	0.9999998677304157	WITHOUT_CLASSIFICATION	1.3226958427145953E-7	IMPLEMENTATION
// ?e  | boolean | True if file1 exists	WITHOUT_CLASSIFICATION	0.9999948756357449	WITHOUT_CLASSIFICATION	5.124364255124707E-6	IMPLEMENTATION
// ?f  | boolean | True if file1 exists and is a regular file	WITHOUT_CLASSIFICATION	0.9999966137742241	WITHOUT_CLASSIFICATION	3.3862257758971823E-6	IMPLEMENTATION
// ?G  | boolean | True if file1 exists and has a group ownership equal to the caller's group	WITHOUT_CLASSIFICATION	0.9999990640200109	WITHOUT_CLASSIFICATION	9.359799890916407E-7	IMPLEMENTATION
// ?k  | boolean | True if file1 exists and has the sticky bit set	WITHOUT_CLASSIFICATION	0.9999975065616674	WITHOUT_CLASSIFICATION	2.4934383325852886E-6	IMPLEMENTATION
// ?M  | Time    | Last modification time for file1	WITHOUT_CLASSIFICATION	0.9999953559534035	WITHOUT_CLASSIFICATION	4.64404659648466E-6	IMPLEMENTATION
// ?o  | boolean | True if file1 exists and is owned by the caller's effective uid	WITHOUT_CLASSIFICATION	0.9999992506868021	WITHOUT_CLASSIFICATION	7.49313198009354E-7	IMPLEMENTATION
// ?O  | boolean | True if file1 exists and is owned by the caller's real uid 	WITHOUT_CLASSIFICATION	0.9999986908949379	WITHOUT_CLASSIFICATION	1.3091050621097524E-6	IMPLEMENTATION
// ?p  | boolean | True if file1 exists and is a fifo	WITHOUT_CLASSIFICATION	0.9999990854714995	WITHOUT_CLASSIFICATION	9.145285005156025E-7	IMPLEMENTATION
// ?r  | boolean | True if file1 is readable by the effective uid/gid of the caller	WITHOUT_CLASSIFICATION	0.9999995110341202	WITHOUT_CLASSIFICATION	4.889658797040952E-7	IMPLEMENTATION
// ?s  | int/nil | If file1 has nonzero size, return the size, otherwise nil	WITHOUT_CLASSIFICATION	0.9997504395590253	WITHOUT_CLASSIFICATION	2.4956044097467845E-4	IMPLEMENTATION
// ?S  | boolean | True if file1 exists and is a socket	WITHOUT_CLASSIFICATION	0.9999989918370955	WITHOUT_CLASSIFICATION	1.0081629045287701E-6	IMPLEMENTATION
// ?u  | boolean | True if file1 has the setuid bit set	WITHOUT_CLASSIFICATION	0.9999948275485377	WITHOUT_CLASSIFICATION	5.172451462212095E-6	IMPLEMENTATION
// ?x  | boolean | True if file1 exists and is executable by the effective uid/gid	WITHOUT_CLASSIFICATION	0.999999165621445	WITHOUT_CLASSIFICATION	8.343785549700904E-7	IMPLEMENTATION
// ?X  | boolean | True if file1 exists and is executable by the real uid/gid	WITHOUT_CLASSIFICATION	0.9999985422796189	WITHOUT_CLASSIFICATION	1.4577203811622229E-6	IMPLEMENTATION
// ?z  | boolean | True if file1 exists and has a zero length	WITHOUT_CLASSIFICATION	0.9999988055419301	WITHOUT_CLASSIFICATION	1.1944580698221736E-6	IMPLEMENTATION
// ?=  | boolean | True if the modification times of file1 and file2 are equal	WITHOUT_CLASSIFICATION	0.9999996903554261	WITHOUT_CLASSIFICATION	3.0964457389289653E-7	IMPLEMENTATION
// ?<  | boolean | True if the modification time of file1 is prior to that of file2	WITHOUT_CLASSIFICATION	0.9999996544754263	WITHOUT_CLASSIFICATION	3.45524573710021E-7	IMPLEMENTATION
// ?>  | boolean | True if the modification time of file1 is after that of file2	WITHOUT_CLASSIFICATION	0.9999997892939216	WITHOUT_CLASSIFICATION	2.1070607832649242E-7	IMPLEMENTATION
// ?-  | boolean | True if file1 and file2 are identical	WITHOUT_CLASSIFICATION	0.9999981452105838	WITHOUT_CLASSIFICATION	1.8547894161711146E-6	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999005866300201	WITHOUT_CLASSIFICATION	9.941336997987201E-5	IMPLEMENTATION
// Error info is per-thread	WITHOUT_CLASSIFICATION	0.9999772507084704	WITHOUT_CLASSIFICATION	2.2749291529618044E-5	IMPLEMENTATION
// init errorInfo to nil	WITHOUT_CLASSIFICATION	0.9999325589596957	WITHOUT_CLASSIFICATION	6.744104030431679E-5	IMPLEMENTATION
// if we're already aborting, we can receive no further mail	WITHOUT_CLASSIFICATION	0.9999449902924645	WITHOUT_CLASSIFICATION	5.5009707535497545E-5	IMPLEMENTATION
// If this thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9997251886765659	WITHOUT_CLASSIFICATION	2.748113234340945E-4	IMPLEMENTATION
// new interrupt, to hopefully wake it out of any blocking IO	WITHOUT_CLASSIFICATION	0.9999813756863143	WITHOUT_CLASSIFICATION	1.8624313685723894E-5	IMPLEMENTATION
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999586303739083	WITHOUT_CLASSIFICATION	4.1369626091623E-5	IMPLEMENTATION
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999586303739083	WITHOUT_CLASSIFICATION	4.1369626091623E-5	IMPLEMENTATION
// JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.999995729624223	WITHOUT_CLASSIFICATION	4.27037577696813E-6	IMPLEMENTATION
// JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999911049408738	WITHOUT_CLASSIFICATION	8.895059126225948E-6	IMPLEMENTATION
// for Thread::start, which does not call the subclass's initialize	WITHOUT_CLASSIFICATION	0.9991645814032081	WITHOUT_CLASSIFICATION	8.354185967919812E-4	IMPLEMENTATION
// JRUBY-3568, inherit threadgroup or use default	WITHOUT_CLASSIFICATION	0.9999556619641102	WITHOUT_CLASSIFICATION	4.433803588970664E-5	IMPLEMENTATION
// MRI behavior: value given in seconds; converted to Float; less // than or equal to zero returns immediately; returns nil	WITHOUT_CLASSIFICATION	0.9999983724536309	WITHOUT_CLASSIFICATION	1.6275463691309018E-6	IMPLEMENTATION
// If the target thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999106274004482	WITHOUT_CLASSIFICATION	8.937259955181867E-5	IMPLEMENTATION
// We need this loop in order to be able to "unblock" the // join call without actually calling interrupt.	WITHOUT_CLASSIFICATION	0.9999881709360012	WITHOUT_CLASSIFICATION	1.1829063998864683E-5	IMPLEMENTATION
// attempt to decriticalize all if we're the critical thread	WITHOUT_CLASSIFICATION	0.9999038580452998	WITHOUT_CLASSIFICATION	9.614195470017669E-5	IMPLEMENTATION
// not valid for "dead" state	WITHOUT_CLASSIFICATION	0.9998343404663049	WITHOUT_CLASSIFICATION	1.656595336949969E-4	IMPLEMENTATION
// If the killee thread is the same as the killer thread, just die	WITHOUT_CLASSIFICATION	0.99999621163204	WITHOUT_CLASSIFICATION	3.788367959844621E-6	IMPLEMENTATION
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999559627135748	WITHOUT_CLASSIFICATION	4.403728642519158E-5	IMPLEMENTATION
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999559627135748	WITHOUT_CLASSIFICATION	4.403728642519158E-5	IMPLEMENTATION
// ignore; I don't like doing it, but it seems like we // really just need to make all channels non-blocking by // default and use select when implementing blocking ops, // so if this remains set non-blocking, perhaps it's not // such a big deal...	WITHOUT_CLASSIFICATION	0.9971544422630563	WITHOUT_CLASSIFICATION	0.0028455577369437828	IMPLEMENTATION
// can't select, just have to do a blocking call	WITHOUT_CLASSIFICATION	0.9999759260056399	WITHOUT_CLASSIFICATION	2.407399436018491E-5	IMPLEMENTATION
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9997231304518258	WITHOUT_CLASSIFICATION	2.7686954817421946E-4	IMPLEMENTATION
// Create Constants class	WITHOUT_CLASSIFICATION	0.9999827256515333	WITHOUT_CLASSIFICATION	1.7274348466661828E-5	IMPLEMENTATION
// Create constants for open flags	WITHOUT_CLASSIFICATION	0.9999951235305177	WITHOUT_CLASSIFICATION	4.876469482414294E-6	IMPLEMENTATION
// Strip off the O_ prefix, so they become File::RDONLY, and so on	WITHOUT_CLASSIFICATION	0.99996208154417	WITHOUT_CLASSIFICATION	3.791845582990078E-5	IMPLEMENTATION
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999941427102382	WITHOUT_CLASSIFICATION	5.857289761857003E-6	IMPLEMENTATION
// File::Constants module is included in IO.	WITHOUT_CLASSIFICATION	0.9999827626716732	WITHOUT_CLASSIFICATION	1.723732832679673E-5	IMPLEMENTATION
// Make sure any existing lock is released before we try and close the file	WITHOUT_CLASSIFICATION	0.9999968938451063	WITHOUT_CLASSIFICATION	3.1061548937596045E-6	IMPLEMENTATION
// null channel always succeeds for all locking operations	WITHOUT_CLASSIFICATION	0.999796882861029	WITHOUT_CLASSIFICATION	2.03117138971079E-4	IMPLEMENTATION
// Paths which end in "/" or "\\" must be stripped off.	WITHOUT_CLASSIFICATION	0.9999730682875667	WITHOUT_CLASSIFICATION	2.693171243335825E-5	IMPLEMENTATION
// Special case for handling ACCMODE, since constantine will generate // an invalid value if it is not defined by the platform.	WITHOUT_CLASSIFICATION	0.9999869568523435	WITHOUT_CLASSIFICATION	1.3043147656391558E-5	IMPLEMENTATION
// Return false here	WITHOUT_CLASSIFICATION	0.9998745845114411	WITHOUT_CLASSIFICATION	1.2541548855895314E-4	IMPLEMENTATION
// Return false here	WITHOUT_CLASSIFICATION	0.9998745845114411	WITHOUT_CLASSIFICATION	1.2541548855895314E-4	IMPLEMENTATION
// We're not actually a real file, so we can't flock	WITHOUT_CLASSIFICATION	0.995156361762548	WITHOUT_CLASSIFICATION	0.0048436382374520874	IMPLEMENTATION
// Should we do anything?	WITHOUT_CLASSIFICATION	0.9999128341668797	WITHOUT_CLASSIFICATION	8.716583312029063E-5	IMPLEMENTATION
/* File class methods */	WITHOUT_CLASSIFICATION	0.9999976152825242	WITHOUT_CLASSIFICATION	2.3847174757948928E-6	IMPLEMENTATION
// MRI-compatible basename handling for windows drive letter paths	WITHOUT_CLASSIFICATION	0.9998677041066865	WITHOUT_CLASSIFICATION	1.3229589331357984E-4	IMPLEMENTATION
// strip c: away from relative-pathed name	WITHOUT_CLASSIFICATION	0.9998684446049215	WITHOUT_CLASSIFICATION	1.3155539507844448E-4	IMPLEMENTATION
// C:\ is returned unchanged	WITHOUT_CLASSIFICATION	0.9999726027789345	WITHOUT_CLASSIFICATION	2.739722106538795E-5	IMPLEMENTATION
// -1 no match; 0 it is dot file not extension	WITHOUT_CLASSIFICATION	0.9923711888079128	WITHOUT_CLASSIFICATION	0.00762881119208723	IMPLEMENTATION
// trim trailing slashes	WITHOUT_CLASSIFICATION	0.9999121549496348	WITHOUT_CLASSIFICATION	8.784505036510877E-5	IMPLEMENTATION
// Dot is not at beginning and not at end of filename. 	WITHOUT_CLASSIFICATION	0.999586392644395	WITHOUT_CLASSIFICATION	4.136073556050086E-4	IMPLEMENTATION
// Handle ~user paths 	WITHOUT_CLASSIFICATION	0.9999143024841453	WITHOUT_CLASSIFICATION	8.569751585467465E-5	IMPLEMENTATION
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9997231304518258	WITHOUT_CLASSIFICATION	2.7686954817421946E-4	IMPLEMENTATION
// Include additional path separator // (so that dirname of "C:\file.txt" is  "C:\", not "C:")	WITHOUT_CLASSIFICATION	0.9990864640394003	WITHOUT_CLASSIFICATION	9.135359605996815E-4	IMPLEMENTATION
// FNFException can be thrown in both cases, when the file // is not found, or when permission is denied.	WITHOUT_CLASSIFICATION	0.999499209201008	WITHOUT_CLASSIFICATION	5.007907989919863E-4	IMPLEMENTATION
// No directory delimeter.  Rest of string is username	WITHOUT_CLASSIFICATION	0.9999999493162567	WITHOUT_CLASSIFICATION	5.068374336430535E-8	IMPLEMENTATION
// If there's a second argument, it's the path to which the first  // argument is relative.	WITHOUT_CLASSIFICATION	0.9999683849196319	WITHOUT_CLASSIFICATION	3.1615080368053515E-5	IMPLEMENTATION
// Handle ~user paths.	WITHOUT_CLASSIFICATION	0.9999116715402919	WITHOUT_CLASSIFICATION	8.832845970800343E-5	IMPLEMENTATION
// If there's no second argument, simply use the working directory  // of the runtime.	WITHOUT_CLASSIFICATION	0.9999086909636992	WITHOUT_CLASSIFICATION	9.130903630082715E-5	IMPLEMENTATION
// Find out which string to check.	WITHOUT_CLASSIFICATION	0.9999968788479529	WITHOUT_CLASSIFICATION	3.121152047184392E-6	IMPLEMENTATION
// Single '~' as whole path to expand	WITHOUT_CLASSIFICATION	0.9999647888864747	WITHOUT_CLASSIFICATION	3.521111352532108E-5	IMPLEMENTATION
// Count number of extra slashes in the beginning of the string.	WITHOUT_CLASSIFICATION	0.9999865820419782	WITHOUT_CLASSIFICATION	1.341795802188716E-5	IMPLEMENTATION
// '~user/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999747650768835	WITHOUT_CLASSIFICATION	2.523492311639097E-5	IMPLEMENTATION
// '~/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999851769656863	WITHOUT_CLASSIFICATION	1.4823034313791893E-5	IMPLEMENTATION
// Prepare a string with the same number of redundant slashes so that  // we easily can prepend it to the result.	WITHOUT_CLASSIFICATION	0.9999832251241875	WITHOUT_CLASSIFICATION	1.677487581259067E-5	IMPLEMENTATION
// If there are N slashes, then we want N-1.	WITHOUT_CLASSIFICATION	0.9998621447834786	WITHOUT_CLASSIFICATION	1.3785521652144925E-4	IMPLEMENTATION
// no canonical path yet or length is zero, and we have a / followed by a dot...	WITHOUT_CLASSIFICATION	0.9999888196958234	WITHOUT_CLASSIFICATION	1.1180304176573384E-5	IMPLEMENTATION
// we don't have another slash after this, so replace /. with /	WITHOUT_CLASSIFICATION	0.9997553769452353	WITHOUT_CLASSIFICATION	2.4462305476465924E-4	IMPLEMENTATION
// we do have another slash; omit both / and . (JRUBY-1606)	WITHOUT_CLASSIFICATION	0.9999256752184187	WITHOUT_CLASSIFICATION	7.432478158127777E-5	IMPLEMENTATION
// do nothing, we should not delete the drive letter	WITHOUT_CLASSIFICATION	0.9961576420467634	WITHOUT_CLASSIFICATION	0.0038423579532367177	IMPLEMENTATION
/* rb: check_modifiable */	WITHOUT_CLASSIFICATION	0.999984794509925	WITHOUT_CLASSIFICATION	1.5205490075013205E-5	IMPLEMENTATION
/* rb: readable */	WITHOUT_CLASSIFICATION	0.9999159519080937	WITHOUT_CLASSIFICATION	8.40480919063893E-5	IMPLEMENTATION
// rename is successful	WITHOUT_CLASSIFICATION	0.9999662417977055	WITHOUT_CLASSIFICATION	3.375820229442094E-5	IMPLEMENTATION
// rename via Java API call wasn't successful, let's try some tricks, similar to MRI 	WITHOUT_CLASSIFICATION	0.9997962590595594	WITHOUT_CLASSIFICATION	2.037409404406474E-4	IMPLEMENTATION
// try to rename one more time	WITHOUT_CLASSIFICATION	0.9998461937749784	WITHOUT_CLASSIFICATION	1.5380622502168765E-4	IMPLEMENTATION
// Can we produce IOError which bypasses a close?	WITHOUT_CLASSIFICATION	0.9997192934713297	WITHOUT_CLASSIFICATION	2.8070652867040187E-4	IMPLEMENTATION
// Fast path since JNA stat is about 10x slower than this	WITHOUT_CLASSIFICATION	0.9999903205558729	WITHOUT_CLASSIFICATION	9.679444127169787E-6	IMPLEMENTATION
// RubyContinuation	WITHOUT_CLASSIFICATION	0.9994903392551018	WITHOUT_CLASSIFICATION	5.096607448981903E-4	IMPLEMENTATION
/*     *  Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq)     *  it doesn't initialize ifNone field     */	WITHOUT_CLASSIFICATION	0.9999995248457123	WITHOUT_CLASSIFICATION	4.7515428779271596E-7	IMPLEMENTATION
// 16 ?	WITHOUT_CLASSIFICATION	0.9999901098246627	WITHOUT_CLASSIFICATION	9.890175337336396E-6	IMPLEMENTATION
// generation count for O(1) clears	WITHOUT_CLASSIFICATION	0.999938558597299	WITHOUT_CLASSIFICATION	6.144140270111698E-5	IMPLEMENTATION
// size + 1;	WITHOUT_CLASSIFICATION	0.9996698291706232	WITHOUT_CLASSIFICATION	3.3017082937681464E-4	IMPLEMENTATION
// suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen	WITHOUT_CLASSIFICATION	0.9992540610182494	WITHOUT_CLASSIFICATION	7.459389817505988E-4	IMPLEMENTATION
// ------------------------------	WITHOUT_CLASSIFICATION	0.9998436616196468	WITHOUT_CLASSIFICATION	1.5633838035325113E-4	IMPLEMENTATION
// ------------------------------	WITHOUT_CLASSIFICATION	0.9998436616196468	WITHOUT_CLASSIFICATION	1.5633838035325113E-4	IMPLEMENTATION
// put implementation	WITHOUT_CLASSIFICATION	0.9982709287206044	WITHOUT_CLASSIFICATION	0.001729071279395544	IMPLEMENTATION
// get implementation	WITHOUT_CLASSIFICATION	0.9995067321356454	WITHOUT_CLASSIFICATION	4.932678643545513E-4	IMPLEMENTATION
// specialized for value	WITHOUT_CLASSIFICATION	0.9999911190085449	WITHOUT_CLASSIFICATION	8.880991455051038E-6	IMPLEMENTATION
// delete implementation	WITHOUT_CLASSIFICATION	0.9997344554790591	WITHOUT_CLASSIFICATION	2.655445209408608E-4	IMPLEMENTATION
// n.b. we need to recompute the hash in case the key object was modified	WITHOUT_CLASSIFICATION	0.9999391348581398	WITHOUT_CLASSIFICATION	6.086514186021221E-5	IMPLEMENTATION
/* ============================     * End of hash internals     * ============================     */	WITHOUT_CLASSIFICATION	0.9999968434131026	WITHOUT_CLASSIFICATION	3.156586897423121E-6	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================     */	WITHOUT_CLASSIFICATION	0.9999945707039792	WITHOUT_CLASSIFICATION	5.42929602075203E-6	IMPLEMENTATION
// update the hash value	WITHOUT_CLASSIFICATION	0.9999928773804097	WITHOUT_CLASSIFICATION	7.122619590339454E-6	IMPLEMENTATION
// other hash does not contain key	WITHOUT_CLASSIFICATION	0.9884565132159252	WITHOUT_CLASSIFICATION	0.011543486784074667	IMPLEMENTATION
// rb_yield_values(2,...) equivalent	WITHOUT_CLASSIFICATION	0.9996471064195795	WITHOUT_CLASSIFICATION	3.5289358042053646E-4	IMPLEMENTATION
// Satisfy java.util.Set interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999105678970692	WITHOUT_CLASSIFICATION	8.94321029307775E-5	IMPLEMENTATION
// remain where we are	WITHOUT_CLASSIFICATION	0.999883127345642	WITHOUT_CLASSIFICATION	1.1687265435800078E-4	IMPLEMENTATION
// We use file test since it is faster than a stat; also euid == uid in Java always	WITHOUT_CLASSIFICATION	0.9999765530347321	WITHOUT_CLASSIFICATION	2.344696526790306E-5	IMPLEMENTATION
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999565204500582	WITHOUT_CLASSIFICATION	4.347954994178671E-5	IMPLEMENTATION
// once hasNext has been called, we commit to next() returning // the entry it found, even if it were subsequently deleted	WITHOUT_CLASSIFICATION	0.9788034349896232	WITHOUT_CLASSIFICATION	0.021196565010376818	IMPLEMENTATION
// Not exposed by filetest, but so similiar in nature that it is stored here	WITHOUT_CLASSIFICATION	0.9999831066810421	WITHOUT_CLASSIFICATION	1.6893318957950132E-5	IMPLEMENTATION
// We do both writable and writable_real through the same method because // in our java process effective and real userid will always be the same.	WITHOUT_CLASSIFICATION	0.9999982631270556	WITHOUT_CLASSIFICATION	1.7368729443311102E-6	IMPLEMENTATION
// first try as directory	WITHOUT_CLASSIFICATION	0.9999957744585671	WITHOUT_CLASSIFICATION	4.225541432837086E-6	IMPLEMENTATION
// next as regular file	WITHOUT_CLASSIFICATION	0.9997155715113168	WITHOUT_CLASSIFICATION	2.8442848868322044E-4	IMPLEMENTATION
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9994863815322917	WITHOUT_CLASSIFICATION	5.136184677083065E-4	IMPLEMENTATION
// NIO-based	WITHOUT_CLASSIFICATION	0.9994903392551018	WITHOUT_CLASSIFICATION	5.096607448981903E-4	IMPLEMENTATION
// NIO-based	WITHOUT_CLASSIFICATION	0.9994903392551018	WITHOUT_CLASSIFICATION	5.096607448981903E-4	IMPLEMENTATION
// Stream-based	WITHOUT_CLASSIFICATION	0.9994903392551018	WITHOUT_CLASSIFICATION	5.096607448981903E-4	IMPLEMENTATION
// special constructor that accepts stream, not channel	WITHOUT_CLASSIFICATION	0.9947870495412228	WITHOUT_CLASSIFICATION	0.005212950458777273	IMPLEMENTATION
/*     * We use FILE versus IO to match T_FILE in MRI.     */	WITHOUT_CLASSIFICATION	0.9999989789720344	WITHOUT_CLASSIFICATION	1.0210279656469425E-6	IMPLEMENTATION
// Constants for seek	WITHOUT_CLASSIFICATION	0.9999563071807419	WITHOUT_CLASSIFICATION	4.369281925803768E-5	IMPLEMENTATION
// confirm we're not reopening self's channel	WITHOUT_CLASSIFICATION	0.9983273043856817	WITHOUT_CLASSIFICATION	0.0016726956143183428	IMPLEMENTATION
// check if we're a stdio IO, and ensure we're not badly mutilated	WITHOUT_CLASSIFICATION	0.9993954512119121	WITHOUT_CLASSIFICATION	6.04548788087903E-4	IMPLEMENTATION
// dup2 new fd into self to preserve fileno and references to it	WITHOUT_CLASSIFICATION	0.9998528378611468	WITHOUT_CLASSIFICATION	1.471621388531433E-4	IMPLEMENTATION
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999920839496452	WITHOUT_CLASSIFICATION	7.91605035472915E-6	IMPLEMENTATION
// re-register the descriptor	WITHOUT_CLASSIFICATION	0.9998940905826944	WITHOUT_CLASSIFICATION	1.0590941730558846E-4	IMPLEMENTATION
// since we're not actually duping the incoming channel into our handler, we need to // copy the original sync behavior from the other handler	WITHOUT_CLASSIFICATION	0.9997488424545109	WITHOUT_CLASSIFICATION	2.5115754548900673E-4	IMPLEMENTATION
// re-register	WITHOUT_CLASSIFICATION	0.9994903392551018	WITHOUT_CLASSIFICATION	5.096607448981903E-4	IMPLEMENTATION
// A potentially previously close IO is being 'reopened'.	WITHOUT_CLASSIFICATION	0.9999858700554456	WITHOUT_CLASSIFICATION	1.4129944554373932E-5	IMPLEMENTATION
/*     * Ensure that separator is valid otherwise give it the default paragraph separator.     */	WITHOUT_CLASSIFICATION	0.9999883254795018	WITHOUT_CLASSIFICATION	1.1674520498235884E-5	IMPLEMENTATION
// loop until we see the nth separator char	WITHOUT_CLASSIFICATION	0.9999891098247914	WITHOUT_CLASSIFICATION	1.0890175208624328E-5	IMPLEMENTATION
// if we hit EOF or reached limit then we're done	WITHOUT_CLASSIFICATION	0.9999632023386331	WITHOUT_CLASSIFICATION	3.679766136692961E-5	IMPLEMENTATION
// this is for a range check, near as I can tell	WITHOUT_CLASSIFICATION	0.9997568286057747	WITHOUT_CLASSIFICATION	2.4317139422529586E-4	IMPLEMENTATION
// IO class methods.	WITHOUT_CLASSIFICATION	0.999795696434578	WITHOUT_CLASSIFICATION	2.0430356542196925E-4	IMPLEMENTATION
// use original modes	WITHOUT_CLASSIFICATION	0.9996937221747891	WITHOUT_CLASSIFICATION	3.062778252108703E-4	IMPLEMENTATION
// See if we already have this descriptor open. // If so then we can mostly share the handler (keep open // file, but possibly change the mode).	WITHOUT_CLASSIFICATION	0.9999952209911519	WITHOUT_CLASSIFICATION	4.7790088481623095E-6	IMPLEMENTATION
// redundant, done above as well	WITHOUT_CLASSIFICATION	0.9998658816866633	WITHOUT_CLASSIFICATION	1.3411831333664853E-4	IMPLEMENTATION
// MRI behavior: swallow StandardErorrs	WITHOUT_CLASSIFICATION	0.9998473748409391	WITHOUT_CLASSIFICATION	1.5262515906095916E-4	IMPLEMENTATION
// -1 == don't set permissions	WITHOUT_CLASSIFICATION	0.9998990675732828	WITHOUT_CLASSIFICATION	1.0093242671715447E-4	IMPLEMENTATION
// isRetained=true	WITHOUT_CLASSIFICATION	0.9994903392551018	WITHOUT_CLASSIFICATION	5.096607448981903E-4	IMPLEMENTATION
// This appears to be some windows-only mode.  On a java platform this is a no-op	WITHOUT_CLASSIFICATION	0.9999739892508446	WITHOUT_CLASSIFICATION	2.601074915550035E-5	IMPLEMENTATION
// if not sync, we switch to write buffered mode	WITHOUT_CLASSIFICATION	0.9988333355962856	WITHOUT_CLASSIFICATION	0.0011666644037144295	IMPLEMENTATION
/*     * Throw bad file descriptor is we can not read on supplied descriptor.     */	WITHOUT_CLASSIFICATION	0.9994667494870358	WITHOUT_CLASSIFICATION	5.332505129641042E-4	IMPLEMENTATION
//Everything written	WITHOUT_CLASSIFICATION	0.9982205311668442	WITHOUT_CLASSIFICATION	0.0017794688331557499	IMPLEMENTATION
//            return len - n;	WITHOUT_CLASSIFICATION	0.999922481731664	WITHOUT_CLASSIFICATION	7.751826833603095E-5	IMPLEMENTATION
// Claims conversion is done via 'to_s' in docs.	WITHOUT_CLASSIFICATION	0.9999907625845488	WITHOUT_CLASSIFICATION	9.237415451141698E-6	IMPLEMENTATION
// Of course this isn't particularly useful.	WITHOUT_CLASSIFICATION	0.9998308988330008	WITHOUT_CLASSIFICATION	1.691011669991075E-4	IMPLEMENTATION
// Must be back on first line on rewind.	WITHOUT_CLASSIFICATION	0.9995117492582395	WITHOUT_CLASSIFICATION	4.8825074176051984E-4	IMPLEMENTATION
// Register the new descriptor	WITHOUT_CLASSIFICATION	0.9997010011366219	WITHOUT_CLASSIFICATION	2.9899886337810433E-4	IMPLEMENTATION
// cleanup, raising errors if any	WITHOUT_CLASSIFICATION	0.9999453123092342	WITHOUT_CLASSIFICATION	5.468769076568134E-5	IMPLEMENTATION
// hmmmm	WITHOUT_CLASSIFICATION	0.9999889436623457	WITHOUT_CLASSIFICATION	1.1056337654331047E-5	IMPLEMENTATION
// I believe Ruby bails out with a "bug" if closing fails	WITHOUT_CLASSIFICATION	0.9998957057781259	WITHOUT_CLASSIFICATION	1.0429422187413463E-4	IMPLEMENTATION
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec. // And why the hell does webrick pass this in as a first argument!!!!!	WITHOUT_CLASSIFICATION	0.999998846286569	WITHOUT_CLASSIFICATION	1.1537134310893836E-6	IMPLEMENTATION
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec.	WITHOUT_CLASSIFICATION	0.9999965762544438	WITHOUT_CLASSIFICATION	3.42374555619269E-6	IMPLEMENTATION
// Length to read	WITHOUT_CLASSIFICATION	0.9998733552258076	WITHOUT_CLASSIFICATION	1.2664477419251172E-4	IMPLEMENTATION
// String/Buffer to read it into	WITHOUT_CLASSIFICATION	0.999958284271511	WITHOUT_CLASSIFICATION	4.1715728488965586E-5	IMPLEMENTATION
// cryptic for the uninitiated...	WITHOUT_CLASSIFICATION	0.999912347660652	WITHOUT_CLASSIFICATION	8.76523393480407E-5	IMPLEMENTATION
// select until read is ready	WITHOUT_CLASSIFICATION	0.9999746901316918	WITHOUT_CLASSIFICATION	2.530986830820055E-5	IMPLEMENTATION
//        ByteList buffer = null;	WITHOUT_CLASSIFICATION	0.9999052380843468	WITHOUT_CLASSIFICATION	9.476191565325256E-5	IMPLEMENTATION
//            buffer = str.getByteList();	WITHOUT_CLASSIFICATION	0.9998975660488071	WITHOUT_CLASSIFICATION	1.0243395119301999E-4	IMPLEMENTATION
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999834391158264	WITHOUT_CLASSIFICATION	1.656088417356126E-5	IMPLEMENTATION
/* rb: writable */	WITHOUT_CLASSIFICATION	0.9999158260374922	WITHOUT_CLASSIFICATION	8.4173962507808E-5	IMPLEMENTATION
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999834391158264	WITHOUT_CLASSIFICATION	1.656088417356126E-5	IMPLEMENTATION
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.999991090396202	WITHOUT_CLASSIFICATION	8.909603797935479E-6	IMPLEMENTATION
// TODO: read into buffer using all the fread logic //        int read = openFile.getMainStream().fread(buffer);	WITHOUT_CLASSIFICATION	0.8969707979358732	WITHOUT_CLASSIFICATION	0.10302920206412686	IMPLEMENTATION
// truncate buffer string to zero, if provided	WITHOUT_CLASSIFICATION	0.9999987704495212	WITHOUT_CLASSIFICATION	1.2295504787252116E-6	IMPLEMENTATION
// TODO: READ_CHECK from MRI	WITHOUT_CLASSIFICATION	0.8147017570846593	WITHOUT_CLASSIFICATION	0.18529824291534064	IMPLEMENTATION
/* class methods for IO */	WITHOUT_CLASSIFICATION	0.9999964736623813	WITHOUT_CLASSIFICATION	3.5263376188079906E-6	IMPLEMENTATION
// save blocking state	WITHOUT_CLASSIFICATION	0.9999824369816516	WITHOUT_CLASSIFICATION	1.756301834848387E-5	IMPLEMENTATION
// write	WITHOUT_CLASSIFICATION	0.9999904626324982	WITHOUT_CLASSIFICATION	9.537367501749095E-6	IMPLEMENTATION
// Java's select doesn't do anything about this, so we leave it be.	WITHOUT_CLASSIFICATION	0.9998834804132474	WITHOUT_CLASSIFICATION	1.1651958675266117E-4	IMPLEMENTATION
// make all sockets blocking as configured again // close unregisters all channels, so we can safely reset blocking modes	WITHOUT_CLASSIFICATION	0.9997163214102164	WITHOUT_CLASSIFICATION	2.836785897835522E-4	IMPLEMENTATION
// FIXME: process options	WITHOUT_CLASSIFICATION	0.9844284482159351	WITHOUT_CLASSIFICATION	0.01557155178406479	IMPLEMENTATION
// Enebo: annotation processing forced me to do pangea method here...	WITHOUT_CLASSIFICATION	0.9998353620923225	WITHOUT_CLASSIFICATION	1.6463790767757004E-4	IMPLEMENTATION
// NIO based pipe	WITHOUT_CLASSIFICATION	0.9995914120074643	WITHOUT_CLASSIFICATION	4.085879925358016E-4	IMPLEMENTATION
// not using remove(Object) here to avoid the equals() call	WITHOUT_CLASSIFICATION	0.9842621557094792	WITHOUT_CLASSIFICATION	0.015737844290520754	IMPLEMENTATION
// raise will also wake the thread from selection	WITHOUT_CLASSIFICATION	0.9999814952231367	WITHOUT_CLASSIFICATION	1.850477686325318E-5	IMPLEMENTATION
/* may need to handle ENC_CODERANGE_BROKEN */	WITHOUT_CLASSIFICATION	0.999238134651905	WITHOUT_CLASSIFICATION	7.618653480950452E-4	IMPLEMENTATION
// TODO: rb_usascii_str_new2	WITHOUT_CLASSIFICATION	0.5584913394256322	IMPLEMENTATION	0.44150866057436783	WITHOUT_CLASSIFICATION
// If we know what method was being called, strip everything // before the call. This hides the JRuby and reflection internals.	WITHOUT_CLASSIFICATION	0.9637088421799602	WITHOUT_CLASSIFICATION	0.036291157820039686	IMPLEMENTATION
// The class of this object	WITHOUT_CLASSIFICATION	0.999988988653929	WITHOUT_CLASSIFICATION	1.1011346070997487E-5	IMPLEMENTATION
// zeroed by jvm	WITHOUT_CLASSIFICATION	0.9997502192751381	WITHOUT_CLASSIFICATION	2.497807248619676E-4	IMPLEMENTATION
//objectClass.defineAnnotatedMethods(BasicObjectMethods.class);	WITHOUT_CLASSIFICATION	0.9994792531202606	WITHOUT_CLASSIFICATION	5.20746879739313E-4	IMPLEMENTATION
// JRUBY-4113: callers should not call setTaint on immediate objects	WITHOUT_CLASSIFICATION	0.9372730960145791	WITHOUT_CLASSIFICATION	0.06272690398542086	IMPLEMENTATION
// rb_class_boot	WITHOUT_CLASSIFICATION	0.9994903392551018	WITHOUT_CLASSIFICATION	5.096607448981903E-4	IMPLEMENTATION
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.999984794509925	WITHOUT_CLASSIFICATION	1.5205490075013205E-5	IMPLEMENTATION
// 1.9 rb_check_to_integer	WITHOUT_CLASSIFICATION	0.999907900922588	WITHOUT_CLASSIFICATION	9.209907741204226E-5	IMPLEMENTATION
// for interface impls	WITHOUT_CLASSIFICATION	0.9999817390484044	WITHOUT_CLASSIFICATION	1.8260951595658413E-5	IMPLEMENTATION
// We're cloning ourselves, so we know the result should be a RubyObject	WITHOUT_CLASSIFICATION	0.9993385497957531	WITHOUT_CLASSIFICATION	6.614502042468504E-4	IMPLEMENTATION
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.999985912348162	WITHOUT_CLASSIFICATION	1.4087651837885823E-5	IMPLEMENTATION
// can't use -v and stdin	WITHOUT_CLASSIFICATION	0.9998490875394048	WITHOUT_CLASSIFICATION	1.5091246059519082E-4	IMPLEMENTATION
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9997801534580623	WITHOUT_CLASSIFICATION	2.1984654193779618E-4	IMPLEMENTATION
// Equivalent of Data_Get_Struct // This will first check that the object in question is actually a T_DATA equivalent.	WITHOUT_CLASSIFICATION	0.9999973201950971	WITHOUT_CLASSIFICATION	2.679804902957416E-6	IMPLEMENTATION
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9998442935603923	WITHOUT_CLASSIFICATION	1.5570643960777388E-4	IMPLEMENTATION
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9998442935603923	WITHOUT_CLASSIFICATION	1.5570643960777388E-4	IMPLEMENTATION
// // INSTANCE VARIABLE API METHODS //	WITHOUT_CLASSIFICATION	0.9998113626507293	WITHOUT_CLASSIFICATION	1.886373492706536E-4	IMPLEMENTATION
// Struct methods	WITHOUT_CLASSIFICATION	0.9994486692957658	WITHOUT_CLASSIFICATION	5.513307042342118E-4	IMPLEMENTATION
//runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);	WITHOUT_CLASSIFICATION	0.9993884755518412	WITHOUT_CLASSIFICATION	6.115244481587216E-4	IMPLEMENTATION
// define access methods.	WITHOUT_CLASSIFICATION	0.9999312658909145	WITHOUT_CLASSIFICATION	6.87341090854537E-5	IMPLEMENTATION
// if we are storing a name as well, index is one too high for values	WITHOUT_CLASSIFICATION	0.9999998363492618	WITHOUT_CLASSIFICATION	1.6365073806264409E-7	IMPLEMENTATION
// Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999903729364714	WITHOUT_CLASSIFICATION	9.627063528721715E-6	IMPLEMENTATION
// For binding purposes on the newly created struct types	WITHOUT_CLASSIFICATION	0.9990559781829332	WITHOUT_CLASSIFICATION	9.440218170668709E-4	IMPLEMENTATION
// OBJ_INFECT        	WITHOUT_CLASSIFICATION	0.999907900922588	WITHOUT_CLASSIFICATION	9.209907741204226E-5	IMPLEMENTATION
// These call* assume ThreadContext = receiver.getRuntime().getCurrentContext()	WITHOUT_CLASSIFICATION	0.9998161171848169	WITHOUT_CLASSIFICATION	1.8388281518314032E-4	IMPLEMENTATION
// Execute iterateMethod again.	WITHOUT_CLASSIFICATION	0.9999154751844233	WITHOUT_CLASSIFICATION	8.45248155767582E-5	IMPLEMENTATION
/*     * @param nv number of times to cycle or -1 to cycle indefinitely     */	WITHOUT_CLASSIFICATION	0.9999991972071172	WITHOUT_CLASSIFICATION	8.027928828270352E-7	IMPLEMENTATION
// Atomic ?	WITHOUT_CLASSIFICATION	0.9995437532518467	WITHOUT_CLASSIFICATION	4.562467481531731E-4	IMPLEMENTATION
// Atomic ?	WITHOUT_CLASSIFICATION	0.9995437532518467	WITHOUT_CLASSIFICATION	4.562467481531731E-4	IMPLEMENTATION
// MUST NOT be used across threads	WITHOUT_CLASSIFICATION	0.9999426229539538	WITHOUT_CLASSIFICATION	5.737704604633869E-5	IMPLEMENTATION
// superClass may be null.	WITHOUT_CLASSIFICATION	0.9999432533449082	WITHOUT_CLASSIFICATION	5.6746655091758503E-5	IMPLEMENTATION
// Containing class...The parent of Object is null. Object should always be last in chain.	WITHOUT_CLASSIFICATION	0.99999846771563	WITHOUT_CLASSIFICATION	1.5322843700335457E-6	IMPLEMENTATION
// ClassId is the name of the class/module sans where it is located. // If it is null, then it an anonymous class.	WITHOUT_CLASSIFICATION	0.9999855487557451	WITHOUT_CLASSIFICATION	1.4451244255001932E-5	IMPLEMENTATION
// ClassProviders return Java class/module (in #defineOrGetClassUnder and // #defineOrGetModuleUnder) when class/module is opened using colon syntax. 	WITHOUT_CLASSIFICATION	0.9999915321824916	WITHOUT_CLASSIFICATION	8.467817508499637E-6	IMPLEMENTATION
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999921418522758	WITHOUT_CLASSIFICATION	7.858147724204829E-6	IMPLEMENTATION
// Make sure the module we include does not already exist	WITHOUT_CLASSIFICATION	0.9769755782837931	WITHOUT_CLASSIFICATION	0.02302442171620682	IMPLEMENTATION
// MRI checks all types first:	WITHOUT_CLASSIFICATION	0.999900051646565	WITHOUT_CLASSIFICATION	9.994835343500118E-5	IMPLEMENTATION
// we need full traces, use default (slow) populator	WITHOUT_CLASSIFICATION	0.9996459835402897	WITHOUT_CLASSIFICATION	3.5401645971035357E-4	IMPLEMENTATION
// module/singleton methods are all defined public	WITHOUT_CLASSIFICATION	0.9999865667463881	WITHOUT_CLASSIFICATION	1.3433253611963338E-5	IMPLEMENTATION
// See if module is in chain...Cannot match against itself so start at superClass.	WITHOUT_CLASSIFICATION	0.9999998778382934	WITHOUT_CLASSIFICATION	1.221617066088589E-7	IMPLEMENTATION
// We can safely reference methods here instead of doing getMethods() since if we // are adding we are not using a IncludedModuleWrapper.	WITHOUT_CLASSIFICATION	0.9998238543964696	WITHOUT_CLASSIFICATION	1.7614560353036048E-4	IMPLEMENTATION
// we grab serial number first; the worst that will happen is we cache a later // update with an earlier serial number, which would just flush anyway	WITHOUT_CLASSIFICATION	0.9997805153742091	WITHOUT_CLASSIFICATION	2.1948462579097518E-4	IMPLEMENTATION
// update all hierarchies into which this module has been included	WITHOUT_CLASSIFICATION	0.9999246274573753	WITHOUT_CLASSIFICATION	7.53725426246407E-5	IMPLEMENTATION
// This method is intended only for defining new classes in Ruby code, // so it uses the allocator of the specified superclass or default to // the Object allocator. It should NOT be used to define classes that require a native allocator.	WITHOUT_CLASSIFICATION	0.9999996432242131	WITHOUT_CLASSIFICATION	3.567757869659005E-7	IMPLEMENTATION
// need to skip IncludedModuleWrappers	WITHOUT_CLASSIFICATION	0.9997078808872739	WITHOUT_CLASSIFICATION	2.9211911272603274E-4	IMPLEMENTATION
// superClazz = null;	WITHOUT_CLASSIFICATION	0.9999216018010088	WITHOUT_CLASSIFICATION	7.839819899121136E-5	IMPLEMENTATION
// reopen a java class	WITHOUT_CLASSIFICATION	0.9999740734912848	WITHOUT_CLASSIFICATION	2.5926508715204715E-5	IMPLEMENTATION
// This method is intended only for defining new modules in Ruby code	WITHOUT_CLASSIFICATION	0.9999955273832785	WITHOUT_CLASSIFICATION	4.47261672152271E-6	IMPLEMENTATION
// reopen a java module	WITHOUT_CLASSIFICATION	0.999936491799893	WITHOUT_CLASSIFICATION	6.35082001069881E-5	IMPLEMENTATION
//FIXME warning	WITHOUT_CLASSIFICATION	0.9984350600888938	WITHOUT_CLASSIFICATION	0.0015649399111062068	IMPLEMENTATION
// FIXME warning	WITHOUT_CLASSIFICATION	0.9943284872240803	WITHOUT_CLASSIFICATION	0.0056715127759196194	IMPLEMENTATION
// a normal block passed to define_method changes to do arity checking; make it a lambda	WITHOUT_CLASSIFICATION	0.9846360951978869	WITHOUT_CLASSIFICATION	0.015363904802113087	IMPLEMENTATION
// for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope	WITHOUT_CLASSIFICATION	0.9999880902411332	WITHOUT_CLASSIFICATION	1.1909758866886452E-5	IMPLEMENTATION
// just using required is broken...but no more broken than before zsuper refactoring	WITHOUT_CLASSIFICATION	0.9999453710282639	WITHOUT_CLASSIFICATION	5.4628971736037806E-5	IMPLEMENTATION
// class and module bodies default to public, so make the block's visibility public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999836556057752	WITHOUT_CLASSIFICATION	1.634439422477499E-5	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999995113533876	WITHOUT_CLASSIFICATION	4.886466124629241E-7	IMPLEMENTATION
// MRI error message says Class, even though Module is ok 	WITHOUT_CLASSIFICATION	0.999604779256476	WITHOUT_CLASSIFICATION	3.952207435241204E-4	IMPLEMENTATION
// scan class hierarchy for module	WITHOUT_CLASSIFICATION	0.999974771525352	WITHOUT_CLASSIFICATION	2.522847464809214E-5	IMPLEMENTATION
/* Module class methods */	WITHOUT_CLASSIFICATION	0.9999919759139038	WITHOUT_CLASSIFICATION	8.024086096243231E-6	IMPLEMENTATION
// Note: we change current frames visibility here because the methods which call // this method are all "fast" (e.g. they do not created their own frame).	WITHOUT_CLASSIFICATION	0.9992176551088994	WITHOUT_CLASSIFICATION	7.823448911006658E-4	IMPLEMENTATION
// next in hierarchy is an included version of the module we're attempting, // so we skip including it	WITHOUT_CLASSIFICATION	0.9999972950133318	WITHOUT_CLASSIFICATION	2.704986668154726E-6	IMPLEMENTATION
// if we haven't encountered a real superclass, use the found module as the new inclusion point	WITHOUT_CLASSIFICATION	0.9999346759682768	WITHOUT_CLASSIFICATION	6.532403172315687E-5	IMPLEMENTATION
// build a list of all modules to consider for inclusion	WITHOUT_CLASSIFICATION	0.9999893726736289	WITHOUT_CLASSIFICATION	1.0627326371119705E-5	IMPLEMENTATION
// if the insertion point is a class, update subclass lists	WITHOUT_CLASSIFICATION	0.99999909188346	WITHOUT_CLASSIFICATION	9.081165400989584E-7	IMPLEMENTATION
// if there's a non-null superclass, we're including into a normal class hierarchy; // update subclass relationships to avoid stale parent/child relationships	WITHOUT_CLASSIFICATION	0.9999902933673004	WITHOUT_CLASSIFICATION	9.706632699652715E-6	IMPLEMENTATION
// ////////////////// CLASS VARIABLE RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9998613719051821	WITHOUT_CLASSIFICATION	1.386280948180251E-4	IMPLEMENTATION
// ////////////////// CONSTANT RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9998582785491825	WITHOUT_CLASSIFICATION	1.417214508175842E-4	IMPLEMENTATION
// Note: includes part of fix for JRUBY-1339	WITHOUT_CLASSIFICATION	0.9999751798967572	WITHOUT_CLASSIFICATION	2.4820103242818672E-5	IMPLEMENTATION
// ////////////////// CLASS VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9998320523487907	WITHOUT_CLASSIFICATION	1.6794765120933304E-4	IMPLEMENTATION
// Wrong Parameter ?	WITHOUT_CLASSIFICATION	0.999551084329139	WITHOUT_CLASSIFICATION	4.489156708609525E-4	IMPLEMENTATION
// not actually called anywhere (all known uses call the fast version)	WITHOUT_CLASSIFICATION	0.9988130195161847	WITHOUT_CLASSIFICATION	0.0011869804838152214	IMPLEMENTATION
// Not that is loaded loop around to resolve it next pass	WITHOUT_CLASSIFICATION	0.9996658781077717	WITHOUT_CLASSIFICATION	3.341218922282048E-4	IMPLEMENTATION
// if adding a module under a constant name, set that module's basename to the constant name	WITHOUT_CLASSIFICATION	0.9995901080632411	WITHOUT_CLASSIFICATION	4.098919367589831E-4	IMPLEMENTATION
// Fix for JRUBY-1339 - search hierarchy for constant	WITHOUT_CLASSIFICATION	0.9999262279261073	WITHOUT_CLASSIFICATION	7.377207389268332E-5	IMPLEMENTATION
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999748083550994	WITHOUT_CLASSIFICATION	2.5191644900507386E-5	IMPLEMENTATION
// removes and returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999858724492646	WITHOUT_CLASSIFICATION	1.4127550735283096E-5	IMPLEMENTATION
// we can't rename a file while it's open in windows	WITHOUT_CLASSIFICATION	0.9999691519255341	WITHOUT_CLASSIFICATION	3.084807446573517E-5	IMPLEMENTATION
//reopen	WITHOUT_CLASSIFICATION	0.9999632642966054	WITHOUT_CLASSIFICATION	3.673570339455358E-5	IMPLEMENTATION
// ARGF methods	WITHOUT_CLASSIFICATION	0.9994486692957658	WITHOUT_CLASSIFICATION	5.513307042342118E-4	IMPLEMENTATION
//         data.currentFile.callMethod(context, "lineno=", line);	WITHOUT_CLASSIFICATION	0.9998698428613526	WITHOUT_CLASSIFICATION	1.3015713864744795E-4	IMPLEMENTATION
// one optional, one required args	WITHOUT_CLASSIFICATION	0.9995989547404265	WITHOUT_CLASSIFICATION	4.010452595735773E-4	IMPLEMENTATION
// one optional and no required args	WITHOUT_CLASSIFICATION	0.9997576509694671	WITHOUT_CLASSIFICATION	2.423490305328307E-4	IMPLEMENTATION
// try to get errno value out of the class	WITHOUT_CLASSIFICATION	0.9999988799223155	WITHOUT_CLASSIFICATION	1.1200776844472705E-6	IMPLEMENTATION
// we got a valid errno value	WITHOUT_CLASSIFICATION	0.9999919979661613	WITHOUT_CLASSIFICATION	8.002033838623307E-6	IMPLEMENTATION
// Ensure we're not running on GCJ, since it's not supported and leads to weird errors	WITHOUT_CLASSIFICATION	0.9991572714918979	WITHOUT_CLASSIFICATION	8.427285081019732E-4	IMPLEMENTATION
// print out as a nice Ruby backtrace	WITHOUT_CLASSIFICATION	0.9999875652634032	WITHOUT_CLASSIFICATION	1.2434736596777637E-5	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9993881271084951	WITHOUT_CLASSIFICATION	6.118728915049491E-4	IMPLEMENTATION
// set thread context JRuby classloader here, for the main thread	WITHOUT_CLASSIFICATION	0.9995965351135335	WITHOUT_CLASSIFICATION	4.034648864664073E-4	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9998777421496526	WITHOUT_CLASSIFICATION	1.2225785034739912E-4	IMPLEMENTATION
// no script to run, return success below	WITHOUT_CLASSIFICATION	0.999972226563278	WITHOUT_CLASSIFICATION	2.7773436721959997E-5	IMPLEMENTATION
// Skip /usr/bin/env if it's first	WITHOUT_CLASSIFICATION	0.9998881803931007	WITHOUT_CLASSIFICATION	1.1181960689940383E-4	IMPLEMENTATION
// Skip any assignments if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999984819522949	WITHOUT_CLASSIFICATION	1.5180477050195898E-6	IMPLEMENTATION
// Skip any commandline args if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999985620280103	WITHOUT_CLASSIFICATION	1.4379719896819384E-6	IMPLEMENTATION
// ignore error	WITHOUT_CLASSIFICATION	0.9972032096317315	WITHOUT_CLASSIFICATION	0.002796790368268492	IMPLEMENTATION
// ////////////////// COMMON CONSTANT / CVAR METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999686986512555	WITHOUT_CLASSIFICATION	3.13013487446003E-5	IMPLEMENTATION
// ////////////////// INTERNAL MODULE VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9998283048667167	WITHOUT_CLASSIFICATION	1.7169513328337658E-4	IMPLEMENTATION
// ////////////////// LOW-LEVEL CONSTANT INTERFACE //////////////// // // fetch/store/list constants for this module //	WITHOUT_CLASSIFICATION	0.9999399028147341	WITHOUT_CLASSIFICATION	6.0097185265972706E-5	IMPLEMENTATION
// odd	WITHOUT_CLASSIFICATION	0.9999889467405912	WITHOUT_CLASSIFICATION	1.1053259408797236E-5	IMPLEMENTATION
// JRubyClient	WITHOUT_CLASSIFICATION	0.9994903392551018	WITHOUT_CLASSIFICATION	5.096607448981903E-4	IMPLEMENTATION
/*     * x = mantissa * 2 ** exponent     *     * Where mantissa is in the range of [.5, 1)     *     */	WITHOUT_CLASSIFICATION	0.9999999204363592	WITHOUT_CLASSIFICATION	7.956364073674342E-8	IMPLEMENTATION
// Make mantissa same sign so we only have one code path.	WITHOUT_CLASSIFICATION	0.9998927545785534	WITHOUT_CLASSIFICATION	1.0724542144658017E-4	IMPLEMENTATION
// Increase value to hit lower range.	WITHOUT_CLASSIFICATION	0.9999848963040687	WITHOUT_CLASSIFICATION	1.5103695931287523E-5	IMPLEMENTATION
/*     * r = x * 2 ** y     */	WITHOUT_CLASSIFICATION	0.999998821099316	WITHOUT_CLASSIFICATION	1.178900683958882E-6	IMPLEMENTATION
/*  0! */	WITHOUT_CLASSIFICATION	0.9999984847404414	WITHOUT_CLASSIFICATION	1.5152595585519677E-6	IMPLEMENTATION
/*  1! */	WITHOUT_CLASSIFICATION	0.9999984847404414	WITHOUT_CLASSIFICATION	1.5152595585519677E-6	IMPLEMENTATION
/*  2! */	WITHOUT_CLASSIFICATION	0.9999984847404414	WITHOUT_CLASSIFICATION	1.5152595585519677E-6	IMPLEMENTATION
/*  3! */	WITHOUT_CLASSIFICATION	0.9999984847404414	WITHOUT_CLASSIFICATION	1.5152595585519677E-6	IMPLEMENTATION
/*  4! */	WITHOUT_CLASSIFICATION	0.9999984847404414	WITHOUT_CLASSIFICATION	1.5152595585519677E-6	IMPLEMENTATION
/*  5! */	WITHOUT_CLASSIFICATION	0.9999984847404414	WITHOUT_CLASSIFICATION	1.5152595585519677E-6	IMPLEMENTATION
/*  6! */	WITHOUT_CLASSIFICATION	0.9999984847404414	WITHOUT_CLASSIFICATION	1.5152595585519677E-6	IMPLEMENTATION
/*  7! */	WITHOUT_CLASSIFICATION	0.9999984847404414	WITHOUT_CLASSIFICATION	1.5152595585519677E-6	IMPLEMENTATION
/*  8! */	WITHOUT_CLASSIFICATION	0.9999984847404414	WITHOUT_CLASSIFICATION	1.5152595585519677E-6	IMPLEMENTATION
/*  9! */	WITHOUT_CLASSIFICATION	0.9999984847404414	WITHOUT_CLASSIFICATION	1.5152595585519677E-6	IMPLEMENTATION
/* 11! */	WITHOUT_CLASSIFICATION	0.9999981747302832	WITHOUT_CLASSIFICATION	1.8252697168303275E-6	IMPLEMENTATION
/* 12! */	WITHOUT_CLASSIFICATION	0.9999981747302832	WITHOUT_CLASSIFICATION	1.8252697168303275E-6	IMPLEMENTATION
/* 13! */	WITHOUT_CLASSIFICATION	0.9999981747302832	WITHOUT_CLASSIFICATION	1.8252697168303275E-6	IMPLEMENTATION
/* 15! */	WITHOUT_CLASSIFICATION	0.9999981747302832	WITHOUT_CLASSIFICATION	1.8252697168303275E-6	IMPLEMENTATION
/* 16! */	WITHOUT_CLASSIFICATION	0.9999981747302832	WITHOUT_CLASSIFICATION	1.8252697168303275E-6	IMPLEMENTATION
/* 17! */	WITHOUT_CLASSIFICATION	0.9999981747302832	WITHOUT_CLASSIFICATION	1.8252697168303275E-6	IMPLEMENTATION
/* 19! */	WITHOUT_CLASSIFICATION	0.9999981747302832	WITHOUT_CLASSIFICATION	1.8252697168303275E-6	IMPLEMENTATION
/* 20! */	WITHOUT_CLASSIFICATION	0.9999981747302832	WITHOUT_CLASSIFICATION	1.8252697168303275E-6	IMPLEMENTATION
/* 21! */	WITHOUT_CLASSIFICATION	0.9999981747302832	WITHOUT_CLASSIFICATION	1.8252697168303275E-6	IMPLEMENTATION
// Static constants	WITHOUT_CLASSIFICATION	0.9998247072526225	WITHOUT_CLASSIFICATION	1.7529274737746614E-4	IMPLEMENTATION
// Clean-up string representation so that it could be understood // by Java's BigDecimal. Not terribly efficient for now. // 1. MRI allows d and D as exponent separators	WITHOUT_CLASSIFICATION	0.9999895553478202	WITHOUT_CLASSIFICATION	1.0444652179843659E-5	IMPLEMENTATION
// 2. MRI allows underscores anywhere	WITHOUT_CLASSIFICATION	0.999872881370149	WITHOUT_CLASSIFICATION	1.271186298510636E-4	IMPLEMENTATION
// 3. MRI ignores the trailing junk	WITHOUT_CLASSIFICATION	0.9997820509953923	WITHOUT_CLASSIFICATION	2.179490046076485E-4	IMPLEMENTATION
// MRI behavior: -0 and +0 are two different things	WITHOUT_CLASSIFICATION	0.9998298673967788	WITHOUT_CLASSIFICATION	1.7013260322124517E-4	IMPLEMENTATION
// Java and MRI definitions of modulo are different.	WITHOUT_CLASSIFICATION	0.9999931802928352	WITHOUT_CLASSIFICATION	6.81970716482916E-6	IMPLEMENTATION
// Java and MRI definitions of remainder are the same.	WITHOUT_CLASSIFICATION	0.9999854472479845	WITHOUT_CLASSIFICATION	1.4552752015359404E-5	IMPLEMENTATION
// Note: MRI has a very non-trivial way of calculating the precision, // so we use very simple approximation here:	WITHOUT_CLASSIFICATION	0.9998269796094992	WITHOUT_CLASSIFICATION	1.730203905008869E-4	IMPLEMENTATION
// Iteration variables, for the square root x and the reciprocal v // initial x:  x0 ~ sqrt() // initial v:  v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999844246111738	WITHOUT_CLASSIFICATION	1.557538882626417E-5	IMPLEMENTATION
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.999560870276024	WITHOUT_CLASSIFICATION	4.391297239759341E-4	IMPLEMENTATION
// TODO: why this: .setResult();	WITHOUT_CLASSIFICATION	0.9361186587297855	IMPLEMENTATION	0.0638813412702146	WITHOUT_CLASSIFICATION
// integer division	WITHOUT_CLASSIFICATION	0.9995084346606308	WITHOUT_CLASSIFICATION	4.915653393693191E-4	IMPLEMENTATION
// MRI behavior: "If digits is 0, the result is the same as the / operator."	WITHOUT_CLASSIFICATION	0.9999982505737471	WITHOUT_CLASSIFICATION	1.749426252936221E-6	IMPLEMENTATION
// rounding neccessary	WITHOUT_CLASSIFICATION	0.999907927048356	WITHOUT_CLASSIFICATION	9.207295164392867E-5	IMPLEMENTATION
// rounding neccessary	WITHOUT_CLASSIFICATION	0.999907927048356	WITHOUT_CLASSIFICATION	9.207295164392867E-5	IMPLEMENTATION
// Java and MRI definitions of divmod are different.        	WITHOUT_CLASSIFICATION	0.9999931802928352	WITHOUT_CLASSIFICATION	6.81970716482916E-6	IMPLEMENTATION
// JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it	WITHOUT_CLASSIFICATION	0.9968670783961819	WITHOUT_CLASSIFICATION	0.003132921603818005	IMPLEMENTATION
// shift the decimal point just to the right of the digit to be rounded to (divide by 10**(abs(scale))) // -1 -> 10's digit, -2 -> 100's digit, etc.	WITHOUT_CLASSIFICATION	0.9999996359129695	WITHOUT_CLASSIFICATION	3.640870305799945E-7	IMPLEMENTATION
// ...round to that digit	WITHOUT_CLASSIFICATION	0.9998538740802325	WITHOUT_CLASSIFICATION	1.4612591976748322E-4	IMPLEMENTATION
// ...and shift the result back to the left (multiply by 10**(abs(scale)))	WITHOUT_CLASSIFICATION	0.9999503994310845	WITHOUT_CLASSIFICATION	4.9600568915399E-5	IMPLEMENTATION
//this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are	WITHOUT_CLASSIFICATION	0.9998624238631713	WITHOUT_CLASSIFICATION	1.375761368287544E-4	IMPLEMENTATION
// sign	WITHOUT_CLASSIFICATION	0.9999890046508432	WITHOUT_CLASSIFICATION	1.0995349156952613E-5	IMPLEMENTATION
// significant digits and exponent	WITHOUT_CLASSIFICATION	0.9999202936992189	WITHOUT_CLASSIFICATION	7.970630078111829E-5	IMPLEMENTATION
// normalize the value	WITHOUT_CLASSIFICATION	0.9999784647120302	WITHOUT_CLASSIFICATION	2.1535287969784763E-5	IMPLEMENTATION
// base	WITHOUT_CLASSIFICATION	0.9999956070975504	WITHOUT_CLASSIFICATION	4.3929024496661565E-6	IMPLEMENTATION
// NOTE: MRI's sqrt precision is limited by 100, // but we allow values more than 100.	WITHOUT_CLASSIFICATION	0.999994294102056	WITHOUT_CLASSIFICATION	5.705897943986315E-6	IMPLEMENTATION
// just in case, add a bit of extra precision	WITHOUT_CLASSIFICATION	0.999999378659695	WITHOUT_CLASSIFICATION	6.213403049331269E-7	IMPLEMENTATION
// eh?!	WITHOUT_CLASSIFICATION	0.9999889436623457	WITHOUT_CLASSIFICATION	1.1056337654331047E-5	IMPLEMENTATION
// Note: #fix has only no-arg form, but truncate allows optional parameter.	WITHOUT_CLASSIFICATION	0.9999942518729398	WITHOUT_CLASSIFICATION	5.748127060205825E-6	IMPLEMENTATION
// General number and precision checking	WITHOUT_CLASSIFICATION	0.9998371026648377	WITHOUT_CLASSIFICATION	1.628973351622612E-4	IMPLEMENTATION
// the requested precision	WITHOUT_CLASSIFICATION	0.9999342719219543	WITHOUT_CLASSIFICATION	6.572807804565919E-5	IMPLEMENTATION
// Proc class	WITHOUT_CLASSIFICATION	0.9997513219183983	WITHOUT_CLASSIFICATION	2.4867808160157934E-4	IMPLEMENTATION
//.append("  -x[directory]   strip off text before #!ruby line and perhaps cd to directory\n")	WITHOUT_CLASSIFICATION	0.999949172505799	WITHOUT_CLASSIFICATION	5.082749420114388E-5	IMPLEMENTATION
// even shift.. // ..floors to 62 or 63 bit BigInteger	WITHOUT_CLASSIFICATION	0.9999201832807815	WITHOUT_CLASSIFICATION	7.981671921860729E-5	IMPLEMENTATION
// 5 -> 2, -5 -> -3 need half a scale more..	WITHOUT_CLASSIFICATION	0.9999673739662815	WITHOUT_CLASSIFICATION	3.262603371847932E-5	IMPLEMENTATION
// ..where 100 -> 10 shifts the scale	WITHOUT_CLASSIFICATION	0.9999799231466018	WITHOUT_CLASSIFICATION	2.007685339829622E-5	IMPLEMENTATION
// Initial x - use double root - multiply by halfBack to unshift - set new scale	WITHOUT_CLASSIFICATION	0.999984089898275	WITHOUT_CLASSIFICATION	1.5910101724948813E-5	IMPLEMENTATION
// x0 ~ sqrt()	WITHOUT_CLASSIFICATION	0.9994964768608405	WITHOUT_CLASSIFICATION	5.035231391594265E-4	IMPLEMENTATION
// for prec 15 root x0 must surely be OK // return small prec roots without iterations	WITHOUT_CLASSIFICATION	0.9999498071118085	WITHOUT_CLASSIFICATION	5.0192888191655576E-5	IMPLEMENTATION
// Initial v - the reciprocal // v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9997073196270969	WITHOUT_CLASSIFICATION	2.926803729031099E-4	IMPLEMENTATION
// Collect iteration precisions beforehand	WITHOUT_CLASSIFICATION	0.9998538739604487	WITHOUT_CLASSIFICATION	1.461260395512213E-4	IMPLEMENTATION
// assume nInit = 16 <= prec	WITHOUT_CLASSIFICATION	0.9999434027680805	WITHOUT_CLASSIFICATION	5.659723191941721E-5	IMPLEMENTATION
// The loop of "Square Root by Coupled Newton Iteration"	WITHOUT_CLASSIFICATION	0.999990978096254	WITHOUT_CLASSIFICATION	9.021903745901942E-6	IMPLEMENTATION
// Increase precision - next iteration supplies n exact digits	WITHOUT_CLASSIFICATION	0.9997093265945142	WITHOUT_CLASSIFICATION	2.906734054858896E-4	IMPLEMENTATION
// Next x                                        // e = d - x^2	WITHOUT_CLASSIFICATION	0.999863353031816	WITHOUT_CLASSIFICATION	1.366469681839614E-4	IMPLEMENTATION
// x += e*v     ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999755645729496	WITHOUT_CLASSIFICATION	2.4435427050466003E-5	IMPLEMENTATION
// root x is ready!	WITHOUT_CLASSIFICATION	0.9998627762092902	WITHOUT_CLASSIFICATION	1.3722379070982697E-4	IMPLEMENTATION
// Next v                                        // g = 1 - 2*x*v	WITHOUT_CLASSIFICATION	0.9998148030590122	WITHOUT_CLASSIFICATION	1.8519694098777315E-4	IMPLEMENTATION
// v += g*v     ~ 1/2/sqrt()	WITHOUT_CLASSIFICATION	0.9999624120487896	WITHOUT_CLASSIFICATION	3.75879512104878E-5	IMPLEMENTATION
// RubyBigdecimal	WITHOUT_CLASSIFICATION	0.9994903392551018	WITHOUT_CLASSIFICATION	5.096607448981903E-4	IMPLEMENTATION
// c: bind_eval	WITHOUT_CLASSIFICATION	0.9994903392551018	WITHOUT_CLASSIFICATION	5.096607448981903E-4	IMPLEMENTATION
/*  ================     *  Module Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999944399359618	WITHOUT_CLASSIFICATION	5.560064038150332E-6	IMPLEMENTATION
// from CommandlineParser	WITHOUT_CLASSIFICATION	0.9999834391158264	WITHOUT_CLASSIFICATION	1.656088417356126E-5	IMPLEMENTATION
// This property is a Boolean, to allow three values, so it can match MRI's nil, false and true	WITHOUT_CLASSIFICATION	0.999860799704013	WITHOUT_CLASSIFICATION	1.392002959869839E-4	IMPLEMENTATION
// default ClassCache using jitMax as a soft upper bound	WITHOUT_CLASSIFICATION	0.9999927603406022	WITHOUT_CLASSIFICATION	7.2396593977676155E-6	IMPLEMENTATION
// Until we get a little more solid on 1.9 support we will only run interpreted mode	WITHOUT_CLASSIFICATION	0.9859346305016966	WITHOUT_CLASSIFICATION	0.014065369498303365	IMPLEMENTATION
// Setting the loader needs to reset the class cache	WITHOUT_CLASSIFICATION	0.9816420932379274	WITHOUT_CLASSIFICATION	0.018357906762072614	IMPLEMENTATION
// try the normal property first	WITHOUT_CLASSIFICATION	0.9996506604070999	WITHOUT_CLASSIFICATION	3.4933959290006227E-4	IMPLEMENTATION
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999228845479334	WITHOUT_CLASSIFICATION	7.71154520664653E-5	IMPLEMENTATION
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999228845479334	WITHOUT_CLASSIFICATION	7.71154520664653E-5	IMPLEMENTATION
// try loading from classloader resources	WITHOUT_CLASSIFICATION	0.9999704580497648	WITHOUT_CLASSIFICATION	2.9541950235190786E-5	IMPLEMENTATION
// otherwise fall back on system temp location	WITHOUT_CLASSIFICATION	0.981292686797326	WITHOUT_CLASSIFICATION	0.018707313202674044	IMPLEMENTATION
// We require the home directory to be absolute	WITHOUT_CLASSIFICATION	0.9999752972390208	WITHOUT_CLASSIFICATION	2.4702760979196773E-5	IMPLEMENTATION
//consume the file name	WITHOUT_CLASSIFICATION	0.998913622489214	WITHOUT_CLASSIFICATION	0.0010863775107859083	IMPLEMENTATION
// Specify something that can't separate	WITHOUT_CLASSIFICATION	0.9999752587134617	WITHOUT_CLASSIFICATION	2.4741286538340485E-5	IMPLEMENTATION
// try cwd first	WITHOUT_CLASSIFICATION	0.9995373062700497	WITHOUT_CLASSIFICATION	4.626937299503464E-4	IMPLEMENTATION
// ruby interpreter compatibilty // Usage: ruby [switches] [--] [programfile] [arguments])	WITHOUT_CLASSIFICATION	0.9998432371918016	WITHOUT_CLASSIFICATION	1.567628081983787E-4	IMPLEMENTATION
// KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 // if Ruby 2.0 encoding pragmas are implemented, this will need to change	WITHOUT_CLASSIFICATION	0.9999937117174775	WITHOUT_CLASSIFICATION	6.288282522488125E-6	IMPLEMENTATION
// @JRubyMethod(name = "complex?")	WITHOUT_CLASSIFICATION	0.9998557352269429	WITHOUT_CLASSIFICATION	1.4426477305703157E-4	IMPLEMENTATION
// @JRubyMethod(name = "exact?")	WITHOUT_CLASSIFICATION	0.9998557352269429	WITHOUT_CLASSIFICATION	1.4426477305703157E-4	IMPLEMENTATION
// @JRubyMethod(name = "inexact?")	WITHOUT_CLASSIFICATION	0.9998557352269429	WITHOUT_CLASSIFICATION	1.4426477305703157E-4	IMPLEMENTATION
// symbol string *must* be interned	WITHOUT_CLASSIFICATION	0.9999980469958445	WITHOUT_CLASSIFICATION	1.953004155490219E-6	IMPLEMENTATION
//        assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";	WITHOUT_CLASSIFICATION	0.9636619847853889	WITHOUT_CLASSIFICATION	0.036338015214611025	IMPLEMENTATION
/* Symbol class methods.     *      */	WITHOUT_CLASSIFICATION	0.9999960901148959	WITHOUT_CLASSIFICATION	3.909885104097034E-6	IMPLEMENTATION
// TODO: 1.9 rb_enc_symname_p	WITHOUT_CLASSIFICATION	0.5584913394256322	IMPLEMENTATION	0.44150866057436783	WITHOUT_CLASSIFICATION
// This is needed to unpack stuff	WITHOUT_CLASSIFICATION	0.9030367922326638	WITHOUT_CLASSIFICATION	0.0969632077673363	IMPLEMENTATION
// we already confirmed above that length > 0	WITHOUT_CLASSIFICATION	0.9958680453166652	WITHOUT_CLASSIFICATION	0.004131954683334784	IMPLEMENTATION
// *must* be power of 2!	WITHOUT_CLASSIFICATION	0.9999864441599774	WITHOUT_CLASSIFICATION	1.3555840022528114E-5	IMPLEMENTATION
// note all fields are final -- rehash creates new entries when necessary. // as documented in java.util.concurrent.ConcurrentHashMap.java, that will // statistically affect only a small percentage (< 20%) of entries for a given rehash.	WITHOUT_CLASSIFICATION	0.9999997893623966	WITHOUT_CLASSIFICATION	2.1063760330656473E-7	IMPLEMENTATION
//            assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9636619847853889	WITHOUT_CLASSIFICATION	0.036338015214611025	IMPLEMENTATION
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999622592875631	WITHOUT_CLASSIFICATION	3.774071243698638E-5	IMPLEMENTATION
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999622592875631	WITHOUT_CLASSIFICATION	3.774071243698638E-5	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9994903392551018	WITHOUT_CLASSIFICATION	5.096607448981903E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9994903392551018	WITHOUT_CLASSIFICATION	5.096607448981903E-4	IMPLEMENTATION
// backwards-compatibility, but threadsafe now	WITHOUT_CLASSIFICATION	0.9999832992684629	WITHOUT_CLASSIFICATION	1.6700731537068127E-5	IMPLEMENTATION
//  Single node on list	WITHOUT_CLASSIFICATION	0.9998248294687039	WITHOUT_CLASSIFICATION	1.751705312961239E-4	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9998796036349088	WITHOUT_CLASSIFICATION	1.2039636509123084E-4	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9998904989264179	WITHOUT_CLASSIFICATION	1.0950107358212745E-4	IMPLEMENTATION
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9947946057407973	WITHOUT_CLASSIFICATION	0.005205394259202667	IMPLEMENTATION
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9981149688410134	WITHOUT_CLASSIFICATION	0.0018850311589866714	IMPLEMENTATION
// not so backwards-compatible here, but no one should have been // calling this anyway.	WITHOUT_CLASSIFICATION	0.9989452642236328	WITHOUT_CLASSIFICATION	0.0010547357763671646	IMPLEMENTATION
// Profile	WITHOUT_CLASSIFICATION	0.999989174188063	WITHOUT_CLASSIFICATION	1.0825811937099794E-5	IMPLEMENTATION
//static private final String TRANSLIT = "//translit";	WITHOUT_CLASSIFICATION	0.9997229591939941	WITHOUT_CLASSIFICATION	2.770408060058933E-4	IMPLEMENTATION
// treat start and end as start...end for end >= 0, start..end for end < 0	WITHOUT_CLASSIFICATION	0.9999729315772882	WITHOUT_CLASSIFICATION	2.706842271188115E-5	IMPLEMENTATION
// invalid ranges result in an empty string	WITHOUT_CLASSIFICATION	0.999999932728309	WITHOUT_CLASSIFICATION	6.727169100585815E-8	IMPLEMENTATION
// Methods of the Nil Class (nil_*):	WITHOUT_CLASSIFICATION	0.9999805961785934	WITHOUT_CLASSIFICATION	1.9403821406601696E-5	IMPLEMENTATION
// Has read/write been closed or is it still open for business	WITHOUT_CLASSIFICATION	0.9995361530516575	WITHOUT_CLASSIFICATION	4.6384694834237605E-4	IMPLEMENTATION
// Support IO modes that this object was opened with	WITHOUT_CLASSIFICATION	0.9999300187246184	WITHOUT_CLASSIFICATION	6.998127538160262E-5	IMPLEMENTATION
// must let original string know we're modifying, so shared buffers aren't damaged	WITHOUT_CLASSIFICATION	0.9999257161705001	WITHOUT_CLASSIFICATION	7.428382949989856E-5	IMPLEMENTATION
// reset the state	WITHOUT_CLASSIFICATION	0.9990127430395993	WITHOUT_CLASSIFICATION	9.872569604006739E-4	IMPLEMENTATION
// Tainting here if we ever want it. (secure 4)	WITHOUT_CLASSIFICATION	0.999444455008027	WITHOUT_CLASSIFICATION	5.555449919728683E-4	IMPLEMENTATION
// rb_match_busy	WITHOUT_CLASSIFICATION	0.9994903392551018	WITHOUT_CLASSIFICATION	5.096607448981903E-4	IMPLEMENTATION
//str is frozen	WITHOUT_CLASSIFICATION	0.9993056733531475	WITHOUT_CLASSIFICATION	6.943266468525938E-4	IMPLEMENTATION
// MRI also does a pointer comparison here	WITHOUT_CLASSIFICATION	0.9999719132217187	WITHOUT_CLASSIFICATION	2.80867782813666E-5	IMPLEMENTATION
// JRubyServer	WITHOUT_CLASSIFICATION	0.9994903392551018	WITHOUT_CLASSIFICATION	5.096607448981903E-4	IMPLEMENTATION
// Class.allocate object is not allocatable before it is initialized	WITHOUT_CLASSIFICATION	0.9995314585729334	WITHOUT_CLASSIFICATION	4.6854142706655497E-4	IMPLEMENTATION
// boot the Object class 	WITHOUT_CLASSIFICATION	0.9999650980202708	WITHOUT_CLASSIFICATION	3.490197972924003E-5	IMPLEMENTATION
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.999985912348162	WITHOUT_CLASSIFICATION	1.4087651837885823E-5	IMPLEMENTATION
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999921418522758	WITHOUT_CLASSIFICATION	7.858147724204829E-6	IMPLEMENTATION
// undo check	WITHOUT_CLASSIFICATION	0.9996148551918399	WITHOUT_CLASSIFICATION	3.8514480816019585E-4	IMPLEMENTATION
// This is a non-standard method; have we decided to start extending Ruby? //classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));	WITHOUT_CLASSIFICATION	0.999962328508955	WITHOUT_CLASSIFICATION	3.767149104498494E-5	IMPLEMENTATION
// boot the Module and Class classes	WITHOUT_CLASSIFICATION	0.9999709993247713	WITHOUT_CLASSIFICATION	2.9000675228637743E-5	IMPLEMENTATION
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9999081171286671	WITHOUT_CLASSIFICATION	9.188287133291912E-5	IMPLEMENTATION
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9997873079028753	WITHOUT_CLASSIFICATION	2.1269209712476266E-4	IMPLEMENTATION
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9997873079028753	WITHOUT_CLASSIFICATION	2.1269209712476266E-4	IMPLEMENTATION
// could be pulled down to RubyClass in future // rb_class_boot	WITHOUT_CLASSIFICATION	0.9999774221114369	WITHOUT_CLASSIFICATION	2.25778885631215E-5	IMPLEMENTATION
// remove us from old superclass's child classes	WITHOUT_CLASSIFICATION	0.9999847628048656	WITHOUT_CLASSIFICATION	1.523719513434396E-5	IMPLEMENTATION
// add us to new superclass's child classes	WITHOUT_CLASSIFICATION	0.99990803825274	WITHOUT_CLASSIFICATION	9.196174726006315E-5	IMPLEMENTATION
// update all subclasses	WITHOUT_CLASSIFICATION	0.9999853965920448	WITHOUT_CLASSIFICATION	1.460340795510734E-5	IMPLEMENTATION
// fields to hold Ruby and RubyClass references	WITHOUT_CLASSIFICATION	0.9998996571471871	WITHOUT_CLASSIFICATION	1.00342852812936E-4	IMPLEMENTATION
// static initializing method	WITHOUT_CLASSIFICATION	0.9997228503686458	WITHOUT_CLASSIFICATION	2.7714963135417925E-4	IMPLEMENTATION
// standard constructor that accepts Ruby, RubyClass	WITHOUT_CLASSIFICATION	0.9998380901260342	WITHOUT_CLASSIFICATION	1.619098739658799E-4	IMPLEMENTATION
// no-arg constructor using static references to Ruby and RubyClass	WITHOUT_CLASSIFICATION	0.9999207389144363	WITHOUT_CLASSIFICATION	7.92610855636132E-5	IMPLEMENTATION
// non-signature signature with just IRubyObject	WITHOUT_CLASSIFICATION	0.9999683756305588	WITHOUT_CLASSIFICATION	3.1624369441128135E-5	IMPLEMENTATION
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999988119574593	WITHOUT_CLASSIFICATION	1.1880425405823682E-6	IMPLEMENTATION
// self // method name	WITHOUT_CLASSIFICATION	0.9995201432584244	WITHOUT_CLASSIFICATION	4.798567415756403E-4	IMPLEMENTATION
// the default allocator	WITHOUT_CLASSIFICATION	0.999981498207431	WITHOUT_CLASSIFICATION	1.8501792569038975E-5	IMPLEMENTATION
// Equivalent of T_DATA	WITHOUT_CLASSIFICATION	0.9999646264837577	WITHOUT_CLASSIFICATION	3.53735162422337E-5	IMPLEMENTATION
// do nothing, leave empty	WITHOUT_CLASSIFICATION	0.9999854925491585	WITHOUT_CLASSIFICATION	1.4507450841530822E-5	IMPLEMENTATION
// Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9999486808161068	WITHOUT_CLASSIFICATION	5.131918389330438E-5	IMPLEMENTATION
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999994490137276	WITHOUT_CLASSIFICATION	5.509862723983551E-6	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999201307158616	WITHOUT_CLASSIFICATION	7.986928413839229E-5	IMPLEMENTATION
// Make sure all arguments are modules before calling the callbacks	WITHOUT_CLASSIFICATION	0.9999931133490719	WITHOUT_CLASSIFICATION	6.886650928120768E-6	IMPLEMENTATION
// MRI extends in order from last to first	WITHOUT_CLASSIFICATION	0.9999974713299948	WITHOUT_CLASSIFICATION	2.528670005157209E-6	IMPLEMENTATION
// NOTE: Serialization is primarily supported for testing purposes, and there is no general // guarantee that serialization will work correctly. Specifically, instance variables pointing // at symbols, threads, modules, classes, and other unserializable types are not detected.	WITHOUT_CLASSIFICATION	0.9999316021568323	WITHOUT_CLASSIFICATION	6.839784316779649E-5	IMPLEMENTATION
// write out ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999816806141503	WITHOUT_CLASSIFICATION	1.831938584971349E-5	IMPLEMENTATION
// rest in ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999803084865683	WITHOUT_CLASSIFICATION	1.9691513431615957E-5	IMPLEMENTATION
// 0x3fff_ffff // -0x4000_0000	WITHOUT_CLASSIFICATION	0.999907900922588	WITHOUT_CLASSIFICATION	9.209907741204226E-5	IMPLEMENTATION
// a gotcha	WITHOUT_CLASSIFICATION	0.9996470739032205	WITHOUT_CLASSIFICATION	3.529260967795595E-4	IMPLEMENTATION
// Java / and % are not the same as ruby	WITHOUT_CLASSIFICATION	0.9999571572246662	WITHOUT_CLASSIFICATION	4.284277533375771E-5	IMPLEMENTATION
// A gotcha for Long.MIN_VALUE: value = -value	WITHOUT_CLASSIFICATION	0.9999726872775563	WITHOUT_CLASSIFICATION	2.7312722443707663E-5	IMPLEMENTATION
// Piece of mri rb_to_id	WITHOUT_CLASSIFICATION	0.9999646264837577	WITHOUT_CLASSIFICATION	3.53735162422337E-5	IMPLEMENTATION
// Java Doubles are 64 bit long:            	WITHOUT_CLASSIFICATION	0.9999651271458088	WITHOUT_CLASSIFICATION	3.487285419130985E-5	IMPLEMENTATION
// Double.MAX_EXPONENT since Java 1.6            	WITHOUT_CLASSIFICATION	0.9999486808161068	WITHOUT_CLASSIFICATION	5.131918389330438E-5	IMPLEMENTATION
// don't override Numeric#div !	WITHOUT_CLASSIFICATION	0.9999086361195618	WITHOUT_CLASSIFICATION	9.136388043818788E-5	IMPLEMENTATION
// Modelled after c ruby implementation (java /,% not same as ruby)	WITHOUT_CLASSIFICATION	0.9980762363866831	WITHOUT_CLASSIFICATION	0.001923763613316996	IMPLEMENTATION
// MRI behavior:	WITHOUT_CLASSIFICATION	0.9994951779290807	WITHOUT_CLASSIFICATION	5.048220709193009E-4	IMPLEMENTATION
// Numeric.equal            	WITHOUT_CLASSIFICATION	0.999907900922588	WITHOUT_CLASSIFICATION	9.209907741204226E-5	IMPLEMENTATION
// provider is not available	WITHOUT_CLASSIFICATION	0.9987377876198645	WITHOUT_CLASSIFICATION	0.0012622123801354684	IMPLEMENTATION
// bouncy castle doesn't support algorithm	WITHOUT_CLASSIFICATION	0.9981671157378273	WITHOUT_CLASSIFICATION	0.001832884262172767	IMPLEMENTATION
// fall back to system JCA providers	WITHOUT_CLASSIFICATION	0.9992412379155343	WITHOUT_CLASSIFICATION	7.587620844657657E-4	IMPLEMENTATION
// RubyDigest	WITHOUT_CLASSIFICATION	0.9994903392551018	WITHOUT_CLASSIFICATION	5.096607448981903E-4	IMPLEMENTATION
// ENEBO: Can these be fast?	WITHOUT_CLASSIFICATION	0.9998215623504463	WITHOUT_CLASSIFICATION	1.784376495536319E-4	IMPLEMENTATION
// synchronize on the RubyThread for threadgroup updates	WITHOUT_CLASSIFICATION	0.9998516620196757	WITHOUT_CLASSIFICATION	1.483379803242395E-4	IMPLEMENTATION
// we only add live threads	WITHOUT_CLASSIFICATION	0.9999161688700694	WITHOUT_CLASSIFICATION	8.383112993053862E-5	IMPLEMENTATION
// use same ClassIndex as metaclass, since we're technically still of that type	WITHOUT_CLASSIFICATION	0.999897662522286	WITHOUT_CLASSIFICATION	1.0233747771399764E-4	IMPLEMENTATION
// handle everything after -- as arguments to the jruby process	WITHOUT_CLASSIFICATION	0.9999232310731084	WITHOUT_CLASSIFICATION	7.676892689158407E-5	IMPLEMENTATION
// JRubyService	WITHOUT_CLASSIFICATION	0.9994903392551018	WITHOUT_CLASSIFICATION	5.096607448981903E-4	IMPLEMENTATION
// while	WITHOUT_CLASSIFICATION	0.9999921955727386	WITHOUT_CLASSIFICATION	7.804427261505791E-6	IMPLEMENTATION
/* \OOO */	WITHOUT_CLASSIFICATION	0.9999981747302832	WITHOUT_CLASSIFICATION	1.8252697168303275E-6	IMPLEMENTATION
// CRuby uses sprintf(buf, "%.*g", FLOAT_DIG, d); // This pattern adjusts the output of String.pattern("%g") to mimic // the C version.	WITHOUT_CLASSIFICATION	0.9999569185764419	WITHOUT_CLASSIFICATION	4.308142355816686E-5	IMPLEMENTATION
// mask off "once" flag	WITHOUT_CLASSIFICATION	0.9999543305735811	WITHOUT_CLASSIFICATION	4.566942641901183E-5	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999562089956032	WITHOUT_CLASSIFICATION	4.3791004396756554E-5	IMPLEMENTATION
// internal usage (Complex/Rational)	WITHOUT_CLASSIFICATION	0.9999375438693694	WITHOUT_CLASSIFICATION	6.245613063057718E-5	IMPLEMENTATION
// silent ?	WITHOUT_CLASSIFICATION	0.9995437532518467	WITHOUT_CLASSIFICATION	4.562467481531731E-4	IMPLEMENTATION
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999981747302832	WITHOUT_CLASSIFICATION	1.8252697168303275E-6	IMPLEMENTATION
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.999984794509925	WITHOUT_CLASSIFICATION	1.5205490075013205E-5	IMPLEMENTATION
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999158260374922	WITHOUT_CLASSIFICATION	8.4173962507808E-5	IMPLEMENTATION
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999158260374922	WITHOUT_CLASSIFICATION	8.4173962507808E-5	IMPLEMENTATION
/* \O, \OO, \OOO or backref */	WITHOUT_CLASSIFICATION	0.999987548015335	WITHOUT_CLASSIFICATION	1.2451984665032441E-5	IMPLEMENTATION
// MBCLEN_NEEDMORE_P	WITHOUT_CLASSIFICATION	0.9994903392551018	WITHOUT_CLASSIFICATION	5.096607448981903E-4	IMPLEMENTATION
// MBCLEN_INVALID_P	WITHOUT_CLASSIFICATION	0.9994903392551018	WITHOUT_CLASSIFICATION	5.096607448981903E-4	IMPLEMENTATION
// Unicode is can be only 21 bits long, int is enough	WITHOUT_CLASSIFICATION	0.9999590013104172	WITHOUT_CLASSIFICATION	4.099868958280385E-5	IMPLEMENTATION
/* Surrogates */	WITHOUT_CLASSIFICATION	0.9999158260374922	WITHOUT_CLASSIFICATION	8.4173962507808E-5	IMPLEMENTATION
// do not load the class if not used	WITHOUT_CLASSIFICATION	0.9994308330368341	WITHOUT_CLASSIFICATION	5.691669631659179E-4	IMPLEMENTATION
/* \0, \0O, \0OO */	WITHOUT_CLASSIFICATION	0.9999158260374922	WITHOUT_CLASSIFICATION	8.4173962507808E-5	IMPLEMENTATION
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999981747302832	WITHOUT_CLASSIFICATION	1.8252697168303275E-6	IMPLEMENTATION
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999158260374922	WITHOUT_CLASSIFICATION	8.4173962507808E-5	IMPLEMENTATION
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.999984794509925	WITHOUT_CLASSIFICATION	1.5205490075013205E-5	IMPLEMENTATION
/* \\u{H HH HHH HHHH HHHHH HHHHHH ...} */	WITHOUT_CLASSIFICATION	0.9999741139862605	WITHOUT_CLASSIFICATION	2.5886013739515137E-5	IMPLEMENTATION
/* \\uHHHH */	WITHOUT_CLASSIFICATION	0.9999158260374922	WITHOUT_CLASSIFICATION	8.4173962507808E-5	IMPLEMENTATION
/* \p{Hiragana} */	WITHOUT_CLASSIFICATION	0.9999158260374922	WITHOUT_CLASSIFICATION	8.4173962507808E-5	IMPLEMENTATION
// inner switch	WITHOUT_CLASSIFICATION	0.9995592236853719	WITHOUT_CLASSIFICATION	4.407763146281342E-4	IMPLEMENTATION
// newInstance here	WITHOUT_CLASSIFICATION	0.999273317643934	WITHOUT_CLASSIFICATION	7.26682356065852E-4	IMPLEMENTATION
// rb_reg_raise	WITHOUT_CLASSIFICATION	0.9994903392551018	WITHOUT_CLASSIFICATION	5.096607448981903E-4	IMPLEMENTATION
// rb_reg_desc	WITHOUT_CLASSIFICATION	0.9994903392551018	WITHOUT_CLASSIFICATION	5.096607448981903E-4	IMPLEMENTATION
// rb_enc_reg_raise	WITHOUT_CLASSIFICATION	0.9994903392551018	WITHOUT_CLASSIFICATION	5.096607448981903E-4	IMPLEMENTATION
// rb_enc_reg_error_desc	WITHOUT_CLASSIFICATION	0.999907900922588	WITHOUT_CLASSIFICATION	9.209907741204226E-5	IMPLEMENTATION
// rb_reg_initialize_str	WITHOUT_CLASSIFICATION	0.999907900922588	WITHOUT_CLASSIFICATION	9.209907741204226E-5	IMPLEMENTATION
// rb_reg_initialize	WITHOUT_CLASSIFICATION	0.9994903392551018	WITHOUT_CLASSIFICATION	5.096607448981903E-4	IMPLEMENTATION
// JRUBY-3625: delay setting backref until the MatchData is completely initialized	WITHOUT_CLASSIFICATION	0.9999935042260829	WITHOUT_CLASSIFICATION	6.495773917027619E-6	IMPLEMENTATION
// rb_reg_expr_str	WITHOUT_CLASSIFICATION	0.9994903392551018	WITHOUT_CLASSIFICATION	5.096607448981903E-4	IMPLEMENTATION
// option_to_str	WITHOUT_CLASSIFICATION	0.9994903392551018	WITHOUT_CLASSIFICATION	5.096607448981903E-4	IMPLEMENTATION
// Don't initialize with class // Don't put in object space and don't taint	WITHOUT_CLASSIFICATION	0.9999922083934505	WITHOUT_CLASSIFICATION	7.791606549558822E-6	IMPLEMENTATION
// args should be before block	WITHOUT_CLASSIFICATION	0.9999510669683145	WITHOUT_CLASSIFICATION	4.8933031685530455E-5	IMPLEMENTATION
// args should be at end	WITHOUT_CLASSIFICATION	0.9999308334513808	WITHOUT_CLASSIFICATION	6.916654861922716E-5	IMPLEMENTATION
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9992226596401554	WITHOUT_CLASSIFICATION	7.773403598445688E-4	IMPLEMENTATION
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9992226596401554	WITHOUT_CLASSIFICATION	7.773403598445688E-4	IMPLEMENTATION
// skip anything not related to jruby	WITHOUT_CLASSIFICATION	0.9937599271895402	WITHOUT_CLASSIFICATION	0.006240072810459848	IMPLEMENTATION
// start a new populator	WITHOUT_CLASSIFICATION	0.999971805239372	WITHOUT_CLASSIFICATION	2.8194760628077408E-5	IMPLEMENTATION
// check for frame field reads or writes	WITHOUT_CLASSIFICATION	0.9999447086280805	WITHOUT_CLASSIFICATION	5.529137191955816E-5	IMPLEMENTATION
// add all names for this annotation	WITHOUT_CLASSIFICATION	0.9998261328483241	WITHOUT_CLASSIFICATION	1.7386715167593504E-4	IMPLEMENTATION
// no annotated methods found, skip	WITHOUT_CLASSIFICATION	0.9998248585727748	WITHOUT_CLASSIFICATION	1.7514142722517865E-4	IMPLEMENTATION
// write out a static initializer for frame names, so it only fires once	WITHOUT_CLASSIFICATION	0.9999823551831032	WITHOUT_CLASSIFICATION	1.7644816896718366E-5	IMPLEMENTATION
// single method, use normal logic	WITHOUT_CLASSIFICATION	0.9989958165990163	WITHOUT_CLASSIFICATION	0.0010041834009837185	IMPLEMENTATION
// multimethod, new logic	WITHOUT_CLASSIFICATION	0.9999166575358364	WITHOUT_CLASSIFICATION	8.33424641636276E-5	IMPLEMENTATION
// declared type returns the qualified name without $ for inner classes!!!	WITHOUT_CLASSIFICATION	0.9998940163991811	WITHOUT_CLASSIFICATION	1.0598360081900878E-4	IMPLEMENTATION
// inner class, use $ to delimit	WITHOUT_CLASSIFICATION	0.9998730051497806	WITHOUT_CLASSIFICATION	1.269948502193889E-4	IMPLEMENTATION
//                        RubyModule singletonClass = module.getSingletonClass();	WITHOUT_CLASSIFICATION	0.999880234760437	WITHOUT_CLASSIFICATION	1.1976523956303011E-4	IMPLEMENTATION
//                }	WITHOUT_CLASSIFICATION	0.9996006393838025	WITHOUT_CLASSIFICATION	3.9936061619751535E-4	IMPLEMENTATION
// fallback on non-pregenerated logic	WITHOUT_CLASSIFICATION	0.9996688099631386	WITHOUT_CLASSIFICATION	3.3119003686133596E-4	IMPLEMENTATION
// refresh call adapter, since it matters if this is iter-based or not	WITHOUT_CLASSIFICATION	0.998453191522565	WITHOUT_CLASSIFICATION	0.00154680847743501	IMPLEMENTATION
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9672646701183142	WITHOUT_CLASSIFICATION	0.03273532988168584	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.9995430574070318	WITHOUT_CLASSIFICATION	4.5694259296819755E-4	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.9997610379440923	WITHOUT_CLASSIFICATION	2.3896205590767186E-4	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.999913895400232	WITHOUT_CLASSIFICATION	8.610459976805307E-5	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.999913895400232	WITHOUT_CLASSIFICATION	8.610459976805307E-5	IMPLEMENTATION
// colon3	WITHOUT_CLASSIFICATION	0.9999889436623457	WITHOUT_CLASSIFICATION	1.1056337654331047E-5	IMPLEMENTATION
// Colon3	WITHOUT_CLASSIFICATION	0.9999889436623457	WITHOUT_CLASSIFICATION	1.1056337654331047E-5	IMPLEMENTATION
// array created for rescue args doesn't need to be in ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999987669262477	WITHOUT_CLASSIFICATION	1.2330737522880945E-6	IMPLEMENTATION
// For b.foo	WITHOUT_CLASSIFICATION	0.9985549110909708	WITHOUT_CLASSIFICATION	0.0014450889090291007	IMPLEMENTATION
// instance config for the script run	WITHOUT_CLASSIFICATION	0.9999516531592574	WITHOUT_CLASSIFICATION	4.834684074260836E-5	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.999913895400232	WITHOUT_CLASSIFICATION	8.610459976805307E-5	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.999913895400232	WITHOUT_CLASSIFICATION	8.610459976805307E-5	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999943098983922	WITHOUT_CLASSIFICATION	5.69010160769583E-6	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999943098983922	WITHOUT_CLASSIFICATION	5.69010160769583E-6	IMPLEMENTATION
//RubyModule module = context.getRubyClass();	WITHOUT_CLASSIFICATION	0.9994274578337335	WITHOUT_CLASSIFICATION	5.725421662664207E-4	IMPLEMENTATION
// For 'b.foo'	WITHOUT_CLASSIFICATION	0.9985549110909708	WITHOUT_CLASSIFICATION	0.0014450889090291007	IMPLEMENTATION
// We define an actual list to get around bug in java integration (1387115)	WITHOUT_CLASSIFICATION	0.9999974388388447	WITHOUT_CLASSIFICATION	2.5611611552865232E-6	IMPLEMENTATION
// something in here is used to build up ruby stack trace...	WITHOUT_CLASSIFICATION	0.9999987344824056	WITHOUT_CLASSIFICATION	1.2655175943584612E-6	IMPLEMENTATION
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999644102264479	WITHOUT_CLASSIFICATION	3.5589773552151134E-5	IMPLEMENTATION
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999644102264479	WITHOUT_CLASSIFICATION	3.5589773552151134E-5	IMPLEMENTATION
// do nothing, allow loop to retry	WITHOUT_CLASSIFICATION	0.9998543762335524	WITHOUT_CLASSIFICATION	1.4562376644757232E-4	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9945897126144203	WITHOUT_CLASSIFICATION	0.005410287385579756	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999595285972137	WITHOUT_CLASSIFICATION	4.047140278617263E-5	IMPLEMENTATION
// never visited, should be fine	WITHOUT_CLASSIFICATION	0.9987049978378817	WITHOUT_CLASSIFICATION	0.0012950021621183044	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999943098983922	WITHOUT_CLASSIFICATION	5.69010160769583E-6	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999447850143643	WITHOUT_CLASSIFICATION	5.5214985635681284E-5	IMPLEMENTATION
// If we have more than one argument, then make sure the array is not ObjectSpaced.	WITHOUT_CLASSIFICATION	0.9346697897837987	WITHOUT_CLASSIFICATION	0.0653302102162013	IMPLEMENTATION
// Only in ruby 1.9 methods	WITHOUT_CLASSIFICATION	0.99998606709815	WITHOUT_CLASSIFICATION	1.3932901850076533E-5	IMPLEMENTATION
// Bind 'normal' parameter values to the local scope for this method.	WITHOUT_CLASSIFICATION	0.9999981850046593	WITHOUT_CLASSIFICATION	1.8149953406608585E-6	IMPLEMENTATION
// no arg grouping, just use bulk assignment methods	WITHOUT_CLASSIFICATION	0.9999560576418562	WITHOUT_CLASSIFICATION	4.394235814371963E-5	IMPLEMENTATION
// optArgs and restArgs require more work, so isolate them and ArrayList creation here	WITHOUT_CLASSIFICATION	0.9982913856473399	WITHOUT_CLASSIFICATION	0.001708614352660134	IMPLEMENTATION
//        arity.checkArity(runtime, argsLength);	WITHOUT_CLASSIFICATION	0.9998698428613526	WITHOUT_CLASSIFICATION	1.3015713864744795E-4	IMPLEMENTATION
// no more values to stick in rest arg	WITHOUT_CLASSIFICATION	0.9999867698019841	WITHOUT_CLASSIFICATION	1.3230198015916115E-5	IMPLEMENTATION
// set argv from main's args	WITHOUT_CLASSIFICATION	0.9999785634781495	WITHOUT_CLASSIFICATION	2.1436521850535586E-5	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.9995430574070318	WITHOUT_CLASSIFICATION	4.5694259296819755E-4	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.999913895400232	WITHOUT_CLASSIFICATION	8.610459976805307E-5	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999943098983922	WITHOUT_CLASSIFICATION	5.69010160769583E-6	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999447850143643	WITHOUT_CLASSIFICATION	5.5214985635681284E-5	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9927348626124466	WITHOUT_CLASSIFICATION	0.0072651373875534785	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9927348626124466	WITHOUT_CLASSIFICATION	0.0072651373875534785	IMPLEMENTATION
// block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] //assert argsNode != null : "argsNode is not null";	WITHOUT_CLASSIFICATION	0.9878666816674567	WITHOUT_CLASSIFICATION	0.012133318332543252	IMPLEMENTATION
// assign given optional arguments to their variables	WITHOUT_CLASSIFICATION	0.9999253296125098	WITHOUT_CLASSIFICATION	7.467038749017004E-5	IMPLEMENTATION
// in-frame EvalState should already have receiver set as self, continue to use it	WITHOUT_CLASSIFICATION	0.9991315438683667	WITHOUT_CLASSIFICATION	8.684561316332333E-4	IMPLEMENTATION
// assign the default values, adding to the end of allArgs	WITHOUT_CLASSIFICATION	0.9999511373247277	WITHOUT_CLASSIFICATION	4.8862675272290024E-5	IMPLEMENTATION
// Make sure the appropriate scope has proper size. See JRUBY-2046.	WITHOUT_CLASSIFICATION	0.9999132305056913	WITHOUT_CLASSIFICATION	8.676949430876319E-5	IMPLEMENTATION
// Experimental class reification support, to create real Java classes // for Ruby classes after the first opening	WITHOUT_CLASSIFICATION	0.9999826144810807	WITHOUT_CLASSIFICATION	1.738551891924403E-5	IMPLEMENTATION
// This should never happen past parse, but just bulletproof this just in case	WITHOUT_CLASSIFICATION	0.9999812478597162	WITHOUT_CLASSIFICATION	1.8752140283862993E-5	IMPLEMENTATION
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9999398282697199	WITHOUT_CLASSIFICATION	6.017173027994267E-5	IMPLEMENTATION
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999702096571932	WITHOUT_CLASSIFICATION	2.9790342806836006E-5	IMPLEMENTATION
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999852217774112	WITHOUT_CLASSIFICATION	1.4778222588698183E-5	IMPLEMENTATION
// never visited, should be ok	WITHOUT_CLASSIFICATION	0.9981455661740242	WITHOUT_CLASSIFICATION	0.001854433825975848	IMPLEMENTATION
// If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil	WITHOUT_CLASSIFICATION	0.9985870958317411	WITHOUT_CLASSIFICATION	0.0014129041682589744	IMPLEMENTATION
// JRUBY-530 until case	WITHOUT_CLASSIFICATION	0.9999178852675482	WITHOUT_CLASSIFICATION	8.211473245173729E-5	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.9997610379440923	WITHOUT_CLASSIFICATION	2.3896205590767186E-4	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999943098983922	WITHOUT_CLASSIFICATION	5.69010160769583E-6	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9945897126144203	WITHOUT_CLASSIFICATION	0.005410287385579756	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999595285972137	WITHOUT_CLASSIFICATION	4.047140278617263E-5	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999595285972137	WITHOUT_CLASSIFICATION	4.047140278617263E-5	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999943098983922	WITHOUT_CLASSIFICATION	5.69010160769583E-6	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999447850143643	WITHOUT_CLASSIFICATION	5.5214985635681284E-5	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999447850143643	WITHOUT_CLASSIFICATION	5.5214985635681284E-5	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9927348626124466	WITHOUT_CLASSIFICATION	0.0072651373875534785	IMPLEMENTATION
// Empirical Observations: // null -> Some arity // argsNode == this.argsNode then check for arity changes // newline(splatnode) -> argspushnode	WITHOUT_CLASSIFICATION	0.9999429149830756	WITHOUT_CLASSIFICATION	5.7085016924352585E-5	IMPLEMENTATION
//assert !(value instanceof RubyArray)  : "Not an array";	WITHOUT_CLASSIFICATION	0.9967585015655839	WITHOUT_CLASSIFICATION	0.0032414984344161313	IMPLEMENTATION
// Serialization killed our dynamic scope.  We can just create an empty one // since serialization cannot serialize an eval (which is the only thing // which is capable of having a non-empty dynamic scope).	WITHOUT_CLASSIFICATION	0.9999999830114443	WITHOUT_CLASSIFICATION	1.6988555685364008E-8	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9993917640613521	WITHOUT_CLASSIFICATION	6.082359386479299E-4	IMPLEMENTATION
// We could probably also detect if LHS value came out of cache and avoid some of this	WITHOUT_CLASSIFICATION	0.9993188148637987	WITHOUT_CLASSIFICATION	6.81185136201323E-4	IMPLEMENTATION
//        assert thenBody != null : "thenBody is not null"; //        assert elseBody != null : "elseBody is not null";	WITHOUT_CLASSIFICATION	0.994855981877535	WITHOUT_CLASSIFICATION	0.005144018122464939	IMPLEMENTATION
// add in reverse order	WITHOUT_CLASSIFICATION	0.9999836628794009	WITHOUT_CLASSIFICATION	1.633712059913038E-5	IMPLEMENTATION
// in order to make pragma's noops we set location to a special value	WITHOUT_CLASSIFICATION	0.9999624721357788	WITHOUT_CLASSIFICATION	3.752786422112159E-5	IMPLEMENTATION
// ignore compiler pragmas	WITHOUT_CLASSIFICATION	0.9999083496414719	WITHOUT_CLASSIFICATION	9.165035852807835E-5	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9945897126144203	WITHOUT_CLASSIFICATION	0.005410287385579756	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999595285972137	WITHOUT_CLASSIFICATION	4.047140278617263E-5	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999595285972137	WITHOUT_CLASSIFICATION	4.047140278617263E-5	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999943098983922	WITHOUT_CLASSIFICATION	5.69010160769583E-6	IMPLEMENTATION
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9999398282697199	WITHOUT_CLASSIFICATION	6.017173027994267E-5	IMPLEMENTATION
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999852217774112	WITHOUT_CLASSIFICATION	1.4778222588698183E-5	IMPLEMENTATION
// No actual test, so do 'when' if when expression is not nil	WITHOUT_CLASSIFICATION	0.999794301606985	WITHOUT_CLASSIFICATION	2.056983930149163E-4	IMPLEMENTATION
// save entering the try if there's nothing to ensure	WITHOUT_CLASSIFICATION	0.9999851370298211	WITHOUT_CLASSIFICATION	1.4862970178945157E-5	IMPLEMENTATION
// For 'foo'	WITHOUT_CLASSIFICATION	0.998562538982891	WITHOUT_CLASSIFICATION	0.0014374610171090083	IMPLEMENTATION
// For 'foo'	WITHOUT_CLASSIFICATION	0.998562538982891	WITHOUT_CLASSIFICATION	0.0014374610171090083	IMPLEMENTATION
// admittedly inefficient	WITHOUT_CLASSIFICATION	0.999907900922588	WITHOUT_CLASSIFICATION	9.209907741204226E-5	IMPLEMENTATION
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9998923541416439	WITHOUT_CLASSIFICATION	1.0764585835617297E-4	IMPLEMENTATION
// What static scoping relationship exists when it comes into being.	WITHOUT_CLASSIFICATION	0.9997341772577492	WITHOUT_CLASSIFICATION	2.658227422508306E-4	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999171866599657	WITHOUT_CLASSIFICATION	8.281334003431504E-5	IMPLEMENTATION
// just rethrow	WITHOUT_CLASSIFICATION	0.9999282557078328	WITHOUT_CLASSIFICATION	7.17442921670538E-5	IMPLEMENTATION
// just rethrow	WITHOUT_CLASSIFICATION	0.9999282557078328	WITHOUT_CLASSIFICATION	7.17442921670538E-5	IMPLEMENTATION
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999622819172408	WITHOUT_CLASSIFICATION	3.7718082759173545E-5	IMPLEMENTATION
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999622819172408	WITHOUT_CLASSIFICATION	3.7718082759173545E-5	IMPLEMENTATION
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999698607016911	WITHOUT_CLASSIFICATION	3.013929830878562E-5	IMPLEMENTATION
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999698607016911	WITHOUT_CLASSIFICATION	3.013929830878562E-5	IMPLEMENTATION
// Execute rescue block	WITHOUT_CLASSIFICATION	0.9998903153790661	WITHOUT_CLASSIFICATION	1.0968462093375694E-4	IMPLEMENTATION
// If no exception is thrown execute else block	WITHOUT_CLASSIFICATION	0.9999768206606227	WITHOUT_CLASSIFICATION	2.3179339377371125E-5	IMPLEMENTATION
// index of variable for this arg	WITHOUT_CLASSIFICATION	0.9998643012163372	WITHOUT_CLASSIFICATION	1.3569878366278762E-4	IMPLEMENTATION
// only a marker interface	WITHOUT_CLASSIFICATION	0.9999771459147557	WITHOUT_CLASSIFICATION	2.2854085244300657E-5	IMPLEMENTATION
// don't attempt to coerce to array, just wrap and return	WITHOUT_CLASSIFICATION	0.9999888522761952	WITHOUT_CLASSIFICATION	1.1147723804865939E-5	IMPLEMENTATION
// pragmas	WITHOUT_CLASSIFICATION	0.9999889436623457	WITHOUT_CLASSIFICATION	1.1056337654331047E-5	IMPLEMENTATION
// The method also needs a scope, do both	WITHOUT_CLASSIFICATION	0.9976292213203457	WITHOUT_CLASSIFICATION	0.002370778679654348	IMPLEMENTATION
// We're doing normal framed compilation or the method needs a frame	WITHOUT_CLASSIFICATION	0.9983959871656517	WITHOUT_CLASSIFICATION	0.001604012834348388	IMPLEMENTATION
// The method doesn't need a scope or static scope; frame only	WITHOUT_CLASSIFICATION	0.9998966033226911	WITHOUT_CLASSIFICATION	1.0339667730888374E-4	IMPLEMENTATION
// The method doesn't need a scope, but has static scope needs; use a dummy scope	WITHOUT_CLASSIFICATION	0.9999347901701656	WITHOUT_CLASSIFICATION	6.520982983428842E-5	IMPLEMENTATION
// Proc.new needs the caller's block to instantiate a proc	WITHOUT_CLASSIFICATION	0.9993268932159959	WITHOUT_CLASSIFICATION	6.73106784004194E-4	IMPLEMENTATION
// check for Proc.new, an especially magic method	WITHOUT_CLASSIFICATION	0.9998506167489317	WITHOUT_CLASSIFICATION	1.4938325106823427E-4	IMPLEMENTATION
// long, slow way causes disabling	WITHOUT_CLASSIFICATION	0.9994565648076288	WITHOUT_CLASSIFICATION	5.434351923712283E-4	IMPLEMENTATION
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9998254101888683	WITHOUT_CLASSIFICATION	1.7458981113171592E-4	IMPLEMENTATION
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9998254101888683	WITHOUT_CLASSIFICATION	1.7458981113171592E-4	IMPLEMENTATION
// long, slow way causes disabling for defined	WITHOUT_CLASSIFICATION	0.9997594104266554	WITHOUT_CLASSIFICATION	2.4058957334457875E-4	IMPLEMENTATION
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9981149688410134	WITHOUT_CLASSIFICATION	0.0018850311589866714	IMPLEMENTATION
// Because Regexp#=== sets backref, we have to make this backref-aware	WITHOUT_CLASSIFICATION	0.9959591100474325	WITHOUT_CLASSIFICATION	0.0040408899525675255	IMPLEMENTATION
// encountered a node we don't recognize, set everything to true to disable optz	WITHOUT_CLASSIFICATION	0.9997366724353945	WITHOUT_CLASSIFICATION	2.633275646054377E-4	IMPLEMENTATION
// only arrays that are "lightweight" are being used as args arrays	WITHOUT_CLASSIFICATION	0.9999792322387884	WITHOUT_CLASSIFICATION	2.0767761211635818E-5	IMPLEMENTATION
// otherwise, it's a literal array	WITHOUT_CLASSIFICATION	0.9998193624507855	WITHOUT_CLASSIFICATION	1.8063754921446152E-4	IMPLEMENTATION
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.99956044117166	WITHOUT_CLASSIFICATION	4.3955882834006515E-4	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999288231168971	WITHOUT_CLASSIFICATION	7.117688310284238E-5	IMPLEMENTATION
// compile first node as non-expr and then second node	WITHOUT_CLASSIFICATION	0.9999453388093418	WITHOUT_CLASSIFICATION	5.466119065822576E-5	IMPLEMENTATION
// last node, either !instanceof WhenNode or null, is the else	WITHOUT_CLASSIFICATION	0.9999951429981386	WITHOUT_CLASSIFICATION	4.857001861280077E-6	IMPLEMENTATION
// compile first node only	WITHOUT_CLASSIFICATION	0.9999237792012835	WITHOUT_CLASSIFICATION	7.62207987165171E-5	IMPLEMENTATION
// splatted when, can't do it yet	WITHOUT_CLASSIFICATION	0.9989486722070374	WITHOUT_CLASSIFICATION	0.0010513277929625328	IMPLEMENTATION
// if __send__ with a literal symbol, compile it as a direct fcall	WITHOUT_CLASSIFICATION	0.9999574782445777	WITHOUT_CLASSIFICATION	4.252175542228042E-5	IMPLEMENTATION
// NOTE: Currently this optimization is limited to the following situations: // * All expressions must be int-ranged literal fixnums // It also still emits the code for the "safe" when logic, which is rather // wasteful (since it essentially doubles each code body). As such it is // normally disabled, but it serves as an example of how this optimization // could be done. Ideally, it should be combined with the when processing // to improve code reuse before it's generally available.	WITHOUT_CLASSIFICATION	0.9998094655963917	WITHOUT_CLASSIFICATION	1.9053440360825997E-4	IMPLEMENTATION
// aggregate when nodes into a list, unfortunately, this is no	WITHOUT_CLASSIFICATION	0.9999759787233526	WITHOUT_CLASSIFICATION	2.402127664740074E-5	IMPLEMENTATION
// one arg but it's an array, treat it as a proper array	WITHOUT_CLASSIFICATION	0.9999281195002873	WITHOUT_CLASSIFICATION	7.188049971272367E-5	IMPLEMENTATION
// can't do it	WITHOUT_CLASSIFICATION	0.9990317189155151	WITHOUT_CLASSIFICATION	9.682810844849344E-4	IMPLEMENTATION
// otherwise, use normal args compiler	WITHOUT_CLASSIFICATION	0.9993611322789925	WITHOUT_CLASSIFICATION	6.388677210075755E-4	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999901309681073	WITHOUT_CLASSIFICATION	9.869031892715523E-6	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999901309681073	WITHOUT_CLASSIFICATION	9.869031892715523E-6	IMPLEMENTATION
// these are all simple cases that don't require the heavier defined logic	WITHOUT_CLASSIFICATION	0.9997994376758953	WITHOUT_CLASSIFICATION	2.0056232410473886E-4	IMPLEMENTATION
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9994792531202606	WITHOUT_CLASSIFICATION	5.20746879739313E-4	IMPLEMENTATION
//[]	WITHOUT_CLASSIFICATION	0.9999632642966054	WITHOUT_CLASSIFICATION	3.673570339455358E-5	IMPLEMENTATION
//[]	WITHOUT_CLASSIFICATION	0.9999632642966054	WITHOUT_CLASSIFICATION	3.673570339455358E-5	IMPLEMENTATION
//          context.swapValues(); //context.consumeCurrentValue();	WITHOUT_CLASSIFICATION	0.9998698428613526	WITHOUT_CLASSIFICATION	1.3015713864744795E-4	IMPLEMENTATION
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[] //[self] //[RubyClass] //[RubyClass, RubyClass]	WITHOUT_CLASSIFICATION	0.9994792531202606	WITHOUT_CLASSIFICATION	5.20746879739313E-4	IMPLEMENTATION
//[RubyClass]	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9994792531202606	WITHOUT_CLASSIFICATION	5.20746879739313E-4	IMPLEMENTATION
// if root of method is rescue, compile as a light rescue	WITHOUT_CLASSIFICATION	0.9999938676732296	WITHOUT_CLASSIFICATION	6.132326770387348E-6	IMPLEMENTATION
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999821969916997	WITHOUT_CLASSIFICATION	1.780300830038459E-5	IMPLEMENTATION
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999821969916997	WITHOUT_CLASSIFICATION	1.780300830038459E-5	IMPLEMENTATION
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9997947484584776	WITHOUT_CLASSIFICATION	2.0525154152247578E-4	IMPLEMENTATION
// if root of method is rescue, compile as light rescue	WITHOUT_CLASSIFICATION	0.9999911429394136	WITHOUT_CLASSIFICATION	8.857060586411053E-6	IMPLEMENTATION
// invoke run with threadcontext and topself	WITHOUT_CLASSIFICATION	0.9998833318171022	WITHOUT_CLASSIFICATION	1.1666818289771942E-4	IMPLEMENTATION
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9994792531202606	WITHOUT_CLASSIFICATION	5.20746879739313E-4	IMPLEMENTATION
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9994792531202606	WITHOUT_CLASSIFICATION	5.20746879739313E-4	IMPLEMENTATION
//[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9994792531202606	WITHOUT_CLASSIFICATION	5.20746879739313E-4	IMPLEMENTATION
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9994792531202606	WITHOUT_CLASSIFICATION	5.20746879739313E-4	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9976896165948119	WITHOUT_CLASSIFICATION	0.002310383405188078	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9998480610421678	WITHOUT_CLASSIFICATION	1.5193895783211327E-4	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9998480610421678	WITHOUT_CLASSIFICATION	1.5193895783211327E-4	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9997912534384309	WITHOUT_CLASSIFICATION	2.0874656156912413E-4	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9997912534384309	WITHOUT_CLASSIFICATION	2.0874656156912413E-4	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9997912534384309	WITHOUT_CLASSIFICATION	2.0874656156912413E-4	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9998480610421678	WITHOUT_CLASSIFICATION	1.5193895783211327E-4	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9998480610421678	WITHOUT_CLASSIFICATION	1.5193895783211327E-4	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9976896165948119	WITHOUT_CLASSIFICATION	0.002310383405188078	IMPLEMENTATION
// force heap-scope behavior, since it uses parent's scope	WITHOUT_CLASSIFICATION	0.9995145643430607	WITHOUT_CLASSIFICATION	4.8543565693918544E-4	IMPLEMENTATION
// always false or nil	WITHOUT_CLASSIFICATION	0.9999403988872524	WITHOUT_CLASSIFICATION	5.9601112747507545E-5	IMPLEMENTATION
// optimizations if we know ahead of time it will always be true or false	WITHOUT_CLASSIFICATION	0.9999464614075121	WITHOUT_CLASSIFICATION	5.353859248799131E-5	IMPLEMENTATION
// normal	WITHOUT_CLASSIFICATION	0.9999778086407567	WITHOUT_CLASSIFICATION	2.219135924333977E-5	IMPLEMENTATION
// compile condition as non-expr and just compile "then" body	WITHOUT_CLASSIFICATION	0.9999983366210461	WITHOUT_CLASSIFICATION	1.6633789538954727E-6	IMPLEMENTATION
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9986833978139422	WITHOUT_CLASSIFICATION	0.0013166021860578831	IMPLEMENTATION
// just push nil for pragmas	WITHOUT_CLASSIFICATION	0.9999938292119933	WITHOUT_CLASSIFICATION	6.170788006631958E-6	IMPLEMENTATION
// "assignment" means the value is already on the stack	WITHOUT_CLASSIFICATION	0.9999798402612645	WITHOUT_CLASSIFICATION	2.01597387354969E-5	IMPLEMENTATION
// compile first node only	WITHOUT_CLASSIFICATION	0.9999237792012835	WITHOUT_CLASSIFICATION	7.62207987165171E-5	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9998480610421678	WITHOUT_CLASSIFICATION	1.5193895783211327E-4	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9998480610421678	WITHOUT_CLASSIFICATION	1.5193895783211327E-4	IMPLEMENTATION
// eval new value, call operator on old value, and assign	WITHOUT_CLASSIFICATION	0.9997656196191115	WITHOUT_CLASSIFICATION	2.3438038088860485E-4	IMPLEMENTATION
// try optz version	WITHOUT_CLASSIFICATION	0.9996454229126709	WITHOUT_CLASSIFICATION	3.545770873290148E-4	IMPLEMENTATION
// sizes must match	WITHOUT_CLASSIFICATION	0.9994167446658263	WITHOUT_CLASSIFICATION	5.832553341737363E-4	IMPLEMENTATION
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999958006026797	WITHOUT_CLASSIFICATION	4.199397320352393E-6	IMPLEMENTATION
// normal items at the "head" of the masgn	WITHOUT_CLASSIFICATION	0.9995337679957812	WITHOUT_CLASSIFICATION	4.6623200421886253E-4	IMPLEMENTATION
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9988465219882005	WITHOUT_CLASSIFICATION	0.0011534780117994977	IMPLEMENTATION
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9996699286719263	WITHOUT_CLASSIFICATION	3.3007132807370896E-4	IMPLEMENTATION
// only supports simple parallel assignment of up to 10 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.999999251397717	WITHOUT_CLASSIFICATION	7.486022829399402E-7	IMPLEMENTATION
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9997714326057964	WITHOUT_CLASSIFICATION	2.285673942036504E-4	IMPLEMENTATION
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999530677729548	WITHOUT_CLASSIFICATION	4.693222704532069E-5	IMPLEMENTATION
//RedoNode redoNode = (RedoNode)node;	WITHOUT_CLASSIFICATION	0.9995208152184256	WITHOUT_CLASSIFICATION	4.791847815743815E-4	IMPLEMENTATION
// done processing args	WITHOUT_CLASSIFICATION	0.9999319067059447	WITHOUT_CLASSIFICATION	6.809329405523651E-5	IMPLEMENTATION
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999323477044184	WITHOUT_CLASSIFICATION	6.765229558151595E-5	IMPLEMENTATION
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9998572662168502	WITHOUT_CLASSIFICATION	1.4273378314979692E-4	IMPLEMENTATION
// if arity 1, just compile the one element to save us the array cost	WITHOUT_CLASSIFICATION	0.999998925887546	WITHOUT_CLASSIFICATION	1.074112453945119E-6	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.9999889436623457	WITHOUT_CLASSIFICATION	1.1056337654331047E-5	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.9999889436623457	WITHOUT_CLASSIFICATION	1.1056337654331047E-5	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.9999889436623457	WITHOUT_CLASSIFICATION	1.1056337654331047E-5	IMPLEMENTATION
// compile into array	WITHOUT_CLASSIFICATION	0.9999647866698524	WITHOUT_CLASSIFICATION	3.5213330147578204E-5	IMPLEMENTATION
// compile first node as non-expr and compile second node	WITHOUT_CLASSIFICATION	0.9999363721942216	WITHOUT_CLASSIFICATION	6.362780577834758E-5	IMPLEMENTATION
// check if it's an immediate, and don't outline	WITHOUT_CLASSIFICATION	0.9999803963198169	WITHOUT_CLASSIFICATION	1.96036801829592E-5	IMPLEMENTATION
// condition is always true, just compile it and not body	WITHOUT_CLASSIFICATION	0.9998648305359227	WITHOUT_CLASSIFICATION	1.3516946407740038E-4	IMPLEMENTATION
// force static scope to claim restarg at 0, so it only implements the [] version of __file__	WITHOUT_CLASSIFICATION	0.9999366399261896	WITHOUT_CLASSIFICATION	6.336007381039384E-5	IMPLEMENTATION
// create method for toplevel of script	WITHOUT_CLASSIFICATION	0.9999143578390537	WITHOUT_CLASSIFICATION	8.564216094634428E-5	IMPLEMENTATION
// it's a multiple-statement body, iterate over all elements in turn and chain if it get too long	WITHOUT_CLASSIFICATION	0.9999996990344342	WITHOUT_CLASSIFICATION	3.0096556580416035E-7	IMPLEMENTATION
// send it along as arity-specific, we don't need the array	WITHOUT_CLASSIFICATION	0.9996707548715248	WITHOUT_CLASSIFICATION	3.292451284752498E-4	IMPLEMENTATION
// single-statement body, just compile it	WITHOUT_CLASSIFICATION	0.9999521961108604	WITHOUT_CLASSIFICATION	4.78038891396186E-5	IMPLEMENTATION
// leave as a normal array	WITHOUT_CLASSIFICATION	0.9999710554380082	WITHOUT_CLASSIFICATION	2.894456199170743E-5	IMPLEMENTATION
// This method has JITed already or has been abandoned. Bail out.	WITHOUT_CLASSIFICATION	0.9988940537174434	WITHOUT_CLASSIFICATION	0.0011059462825565387	IMPLEMENTATION
// The cache is full. Abandon JIT for this method and bail out.	WITHOUT_CLASSIFICATION	0.9969490984264029	WITHOUT_CLASSIFICATION	0.0030509015735971433	IMPLEMENTATION
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9997947484584776	WITHOUT_CLASSIFICATION	2.0525154152247578E-4	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9998480610421678	WITHOUT_CLASSIFICATION	1.5193895783211327E-4	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9998480610421678	WITHOUT_CLASSIFICATION	1.5193895783211327E-4	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9976896165948119	WITHOUT_CLASSIFICATION	0.002310383405188078	IMPLEMENTATION
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9986833978139422	WITHOUT_CLASSIFICATION	0.0013166021860578831	IMPLEMENTATION
// try optz version	WITHOUT_CLASSIFICATION	0.9996454229126709	WITHOUT_CLASSIFICATION	3.545770873290148E-4	IMPLEMENTATION
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999958006026797	WITHOUT_CLASSIFICATION	4.199397320352393E-6	IMPLEMENTATION
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9988465219882005	WITHOUT_CLASSIFICATION	0.0011534780117994977	IMPLEMENTATION
// sizes must match	WITHOUT_CLASSIFICATION	0.9994167446658263	WITHOUT_CLASSIFICATION	5.832553341737363E-4	IMPLEMENTATION
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9996699286719263	WITHOUT_CLASSIFICATION	3.3007132807370896E-4	IMPLEMENTATION
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999530677729548	WITHOUT_CLASSIFICATION	4.693222704532069E-5	IMPLEMENTATION
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9997714326057964	WITHOUT_CLASSIFICATION	2.285673942036504E-4	IMPLEMENTATION
// done processing args	WITHOUT_CLASSIFICATION	0.9999319067059447	WITHOUT_CLASSIFICATION	6.809329405523651E-5	IMPLEMENTATION
// Check if the method has been explicitly excluded	WITHOUT_CLASSIFICATION	0.9995961355001964	WITHOUT_CLASSIFICATION	4.0386449980351236E-4	IMPLEMENTATION
// class could not be found nor generated; give up on JIT and bail out	WITHOUT_CLASSIFICATION	0.9997256683255963	WITHOUT_CLASSIFICATION	2.7433167440374666E-4	IMPLEMENTATION
// successfully got back a jitted method	WITHOUT_CLASSIFICATION	0.9994081489768822	WITHOUT_CLASSIFICATION	5.918510231178128E-4	IMPLEMENTATION
// finally, grab the script	WITHOUT_CLASSIFICATION	0.9999314640951815	WITHOUT_CLASSIFICATION	6.853590481844571E-5	IMPLEMENTATION
// logEvery n methods based on configuration	WITHOUT_CLASSIFICATION	0.9997734716074029	WITHOUT_CLASSIFICATION	2.2652839259701448E-4	IMPLEMENTATION
// Time the compilation	WITHOUT_CLASSIFICATION	0.9999617588398149	WITHOUT_CLASSIFICATION	3.824116018502787E-5	IMPLEMENTATION
// we have a body, do a full-on method	WITHOUT_CLASSIFICATION	0.9994230925631382	WITHOUT_CLASSIFICATION	5.769074368616774E-4	IMPLEMENTATION
// If we don't have a body, check for required or opt args // if opt args, they could have side effects // if required args, need to raise errors if too few args passed // otherwise, method does nothing, make it a nop	WITHOUT_CLASSIFICATION	0.9977850502225322	WITHOUT_CLASSIFICATION	0.002214949777467821	IMPLEMENTATION
// if we haven't already decided on a do-nothing call	WITHOUT_CLASSIFICATION	0.9997529324133164	WITHOUT_CLASSIFICATION	2.470675866835226E-4	IMPLEMENTATION
// only supports simple parallel assignment of up to 4 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999989387201261	WITHOUT_CLASSIFICATION	1.0612798738091789E-6	IMPLEMENTATION
// normal items at the front or back of the masgn	WITHOUT_CLASSIFICATION	0.9993486355050794	WITHOUT_CLASSIFICATION	6.513644949205667E-4	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999569248696799	WITHOUT_CLASSIFICATION	4.3075130320139124E-5	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999423521951334	WITHOUT_CLASSIFICATION	5.7647804866637354E-5	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999969386284367	WITHOUT_CLASSIFICATION	3.0613715631936155E-6	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999978285358698	WITHOUT_CLASSIFICATION	2.1714641301579212E-6	IMPLEMENTATION
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999486372258343	WITHOUT_CLASSIFICATION	5.136277416580541E-5	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.999840874561852	WITHOUT_CLASSIFICATION	1.591254381479798E-4	IMPLEMENTATION
// Define the annotation for the method	WITHOUT_CLASSIFICATION	0.9997249820549178	WITHOUT_CLASSIFICATION	2.750179450822287E-4	IMPLEMENTATION
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999626280801428	WITHOUT_CLASSIFICATION	3.737191985730175E-5	IMPLEMENTATION
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999601498712104	WITHOUT_CLASSIFICATION	3.985012878969918E-5	IMPLEMENTATION
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999610164407694	WITHOUT_CLASSIFICATION	3.898355923064189E-5	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9998255847091816	WITHOUT_CLASSIFICATION	1.7441529081850315E-4	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9998255847091816	WITHOUT_CLASSIFICATION	1.7441529081850315E-4	IMPLEMENTATION
// value is already on stack, save it for later	WITHOUT_CLASSIFICATION	0.9999718018355646	WITHOUT_CLASSIFICATION	2.8198164435375127E-5	IMPLEMENTATION
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9918958106161689	WITHOUT_CLASSIFICATION	0.008104189383831086	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999632642966054	WITHOUT_CLASSIFICATION	3.673570339455358E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999632642966054	WITHOUT_CLASSIFICATION	3.673570339455358E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999632642966054	WITHOUT_CLASSIFICATION	3.673570339455358E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999632642966054	WITHOUT_CLASSIFICATION	3.673570339455358E-5	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999632642966054	WITHOUT_CLASSIFICATION	3.673570339455358E-5	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999632642966054	WITHOUT_CLASSIFICATION	3.673570339455358E-5	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999632642966054	WITHOUT_CLASSIFICATION	3.673570339455358E-5	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.9999632642966054	WITHOUT_CLASSIFICATION	3.673570339455358E-5	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.9999632642966054	WITHOUT_CLASSIFICATION	3.673570339455358E-5	IMPLEMENTATION
/*arg2*/	WITHOUT_CLASSIFICATION	0.9999632642966054	WITHOUT_CLASSIFICATION	3.673570339455358E-5	IMPLEMENTATION
/*args*/	WITHOUT_CLASSIFICATION	0.9999632642966054	WITHOUT_CLASSIFICATION	3.673570339455358E-5	IMPLEMENTATION
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9918958106161689	WITHOUT_CLASSIFICATION	0.008104189383831086	IMPLEMENTATION
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9997685535139985	WITHOUT_CLASSIFICATION	2.3144648600141504E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999632642966054	WITHOUT_CLASSIFICATION	3.673570339455358E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999632642966054	WITHOUT_CLASSIFICATION	3.673570339455358E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999632642966054	WITHOUT_CLASSIFICATION	3.673570339455358E-5	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999632642966054	WITHOUT_CLASSIFICATION	3.673570339455358E-5	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999632642966054	WITHOUT_CLASSIFICATION	3.673570339455358E-5	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.9999632642966054	WITHOUT_CLASSIFICATION	3.673570339455358E-5	IMPLEMENTATION
/*args*/	WITHOUT_CLASSIFICATION	0.9999632642966054	WITHOUT_CLASSIFICATION	3.673570339455358E-5	IMPLEMENTATION
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9995434788971981	WITHOUT_CLASSIFICATION	4.565211028018727E-4	IMPLEMENTATION
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9995434788971981	WITHOUT_CLASSIFICATION	4.565211028018727E-4	IMPLEMENTATION
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999711237962352	WITHOUT_CLASSIFICATION	2.8876203764760066E-5	IMPLEMENTATION
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999711237962352	WITHOUT_CLASSIFICATION	2.8876203764760066E-5	IMPLEMENTATION
// invoke	WITHOUT_CLASSIFICATION	0.9999894229008391	WITHOUT_CLASSIFICATION	1.057709916086344E-5	IMPLEMENTATION
// invoke	WITHOUT_CLASSIFICATION	0.9999894229008391	WITHOUT_CLASSIFICATION	1.057709916086344E-5	IMPLEMENTATION
// check if it's true, ending if so	WITHOUT_CLASSIFICATION	0.9999410385352848	WITHOUT_CLASSIFICATION	5.896146471533005E-5	IMPLEMENTATION
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9995436129808436	WITHOUT_CLASSIFICATION	4.5638701915642687E-4	IMPLEMENTATION
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9995436129808436	WITHOUT_CLASSIFICATION	4.5638701915642687E-4	IMPLEMENTATION
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9997368541254853	WITHOUT_CLASSIFICATION	2.6314587451478324E-4	IMPLEMENTATION
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9997368541254853	WITHOUT_CLASSIFICATION	2.6314587451478324E-4	IMPLEMENTATION
// eval value for assignment	WITHOUT_CLASSIFICATION	0.9999912439152853	WITHOUT_CLASSIFICATION	8.756084714706679E-6	IMPLEMENTATION
// call site	WITHOUT_CLASSIFICATION	0.9991042870207835	WITHOUT_CLASSIFICATION	8.957129792166627E-4	IMPLEMENTATION
// call site	WITHOUT_CLASSIFICATION	0.9991042870207835	WITHOUT_CLASSIFICATION	8.957129792166627E-4	IMPLEMENTATION
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9996053333792823	WITHOUT_CLASSIFICATION	3.9466662071774067E-4	IMPLEMENTATION
// check if it's true, ending if not	WITHOUT_CLASSIFICATION	0.9973524535746437	WITHOUT_CLASSIFICATION	0.0026475464253561914	IMPLEMENTATION
// eval value and save it	WITHOUT_CLASSIFICATION	0.99998907418177	WITHOUT_CLASSIFICATION	1.09258182301099E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999632642966054	WITHOUT_CLASSIFICATION	3.673570339455358E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999632642966054	WITHOUT_CLASSIFICATION	3.673570339455358E-5	IMPLEMENTATION
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9996053333792823	WITHOUT_CLASSIFICATION	3.9466662071774067E-4	IMPLEMENTATION
// receiver, args, result, value	WITHOUT_CLASSIFICATION	0.9999682833125442	WITHOUT_CLASSIFICATION	3.171668745584596E-5	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9994903392551018	WITHOUT_CLASSIFICATION	5.096607448981903E-4	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9994903392551018	WITHOUT_CLASSIFICATION	5.096607448981903E-4	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9994903392551018	WITHOUT_CLASSIFICATION	5.096607448981903E-4	IMPLEMENTATION
// super uses current block if none given	WITHOUT_CLASSIFICATION	0.9998291086807898	WITHOUT_CLASSIFICATION	1.7089131921022924E-4	IMPLEMENTATION
// args	WITHOUT_CLASSIFICATION	0.9999894677100372	WITHOUT_CLASSIFICATION	1.0532289962791369E-5	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999857447876671	WITHOUT_CLASSIFICATION	1.4255212332776936E-5	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999857447876671	WITHOUT_CLASSIFICATION	1.4255212332776936E-5	IMPLEMENTATION
// no args, no block	WITHOUT_CLASSIFICATION	0.9993948972132993	WITHOUT_CLASSIFICATION	6.051027867006332E-4	IMPLEMENTATION
// no args, with block	WITHOUT_CLASSIFICATION	0.9998380101607454	WITHOUT_CLASSIFICATION	1.619898392546012E-4	IMPLEMENTATION
// with args, no block	WITHOUT_CLASSIFICATION	0.9998380101607454	WITHOUT_CLASSIFICATION	1.619898392546012E-4	IMPLEMENTATION
// with args, with block	WITHOUT_CLASSIFICATION	0.9998242893228289	WITHOUT_CLASSIFICATION	1.7571067717118874E-4	IMPLEMENTATION
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9998432178634115	WITHOUT_CLASSIFICATION	1.567821365885727E-4	IMPLEMENTATION
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999893746575335	WITHOUT_CLASSIFICATION	1.0625342466578453E-5	IMPLEMENTATION
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999893746575335	WITHOUT_CLASSIFICATION	1.0625342466578453E-5	IMPLEMENTATION
// arg and receiver already present on the stack	WITHOUT_CLASSIFICATION	0.9994472920361599	WITHOUT_CLASSIFICATION	5.527079638401174E-4	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9999632642966054	WITHOUT_CLASSIFICATION	3.673570339455358E-5	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9999632642966054	WITHOUT_CLASSIFICATION	3.673570339455358E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999632642966054	WITHOUT_CLASSIFICATION	3.673570339455358E-5	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9994903392551018	WITHOUT_CLASSIFICATION	5.096607448981903E-4	IMPLEMENTATION
// args	WITHOUT_CLASSIFICATION	0.9999894677100372	WITHOUT_CLASSIFICATION	1.0532289962791369E-5	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999857447876671	WITHOUT_CLASSIFICATION	1.4255212332776936E-5	IMPLEMENTATION
// no args, no block	WITHOUT_CLASSIFICATION	0.9993948972132993	WITHOUT_CLASSIFICATION	6.051027867006332E-4	IMPLEMENTATION
// no args, with block	WITHOUT_CLASSIFICATION	0.9998380101607454	WITHOUT_CLASSIFICATION	1.619898392546012E-4	IMPLEMENTATION
// with args, no block	WITHOUT_CLASSIFICATION	0.9998380101607454	WITHOUT_CLASSIFICATION	1.619898392546012E-4	IMPLEMENTATION
// with args, with block	WITHOUT_CLASSIFICATION	0.9998242893228289	WITHOUT_CLASSIFICATION	1.7571067717118874E-4	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9999632642966054	WITHOUT_CLASSIFICATION	3.673570339455358E-5	IMPLEMENTATION
// retrieve scope from scopes array	WITHOUT_CLASSIFICATION	0.9999781844140455	WITHOUT_CLASSIFICATION	2.181558595457586E-5	IMPLEMENTATION
// use numbered access method	WITHOUT_CLASSIFICATION	0.9989146667655996	WITHOUT_CLASSIFICATION	0.0010853332344004975	IMPLEMENTATION
// retrieve call site from sites array	WITHOUT_CLASSIFICATION	0.9999608039478438	WITHOUT_CLASSIFICATION	3.9196052156170945E-5	IMPLEMENTATION
// add name to call site list	WITHOUT_CLASSIFICATION	0.9997825492631762	WITHOUT_CLASSIFICATION	2.174507368236424E-4	IMPLEMENTATION
// module is on top of stack	WITHOUT_CLASSIFICATION	0.9999115569211241	WITHOUT_CLASSIFICATION	8.844307887588906E-5	IMPLEMENTATION
// build scope names string	WITHOUT_CLASSIFICATION	0.9999965052919266	WITHOUT_CLASSIFICATION	3.49470807331749E-6	IMPLEMENTATION
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999969553803197	WITHOUT_CLASSIFICATION	3.0446196801881136E-6	IMPLEMENTATION
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999969553803197	WITHOUT_CLASSIFICATION	3.0446196801881136E-6	IMPLEMENTATION
// generate call sites initialization code	WITHOUT_CLASSIFICATION	0.9997982511355847	WITHOUT_CLASSIFICATION	2.0174886441517013E-4	IMPLEMENTATION
// generate symbols initialization code	WITHOUT_CLASSIFICATION	0.9998856768541692	WITHOUT_CLASSIFICATION	1.1432314583082412E-4	IMPLEMENTATION
// generate fixnums initialization code	WITHOUT_CLASSIFICATION	0.9998852392382386	WITHOUT_CLASSIFICATION	1.1476076176140403E-4	IMPLEMENTATION
// generate constants initialization code	WITHOUT_CLASSIFICATION	0.9999602782295289	WITHOUT_CLASSIFICATION	3.972177047112687E-5	IMPLEMENTATION
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9998852392382386	WITHOUT_CLASSIFICATION	1.1476076176140403E-4	IMPLEMENTATION
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9998852392382386	WITHOUT_CLASSIFICATION	1.1476076176140403E-4	IMPLEMENTATION
// generate variable readers initialization code	WITHOUT_CLASSIFICATION	0.9997717828629146	WITHOUT_CLASSIFICATION	2.2821713708539332E-4	IMPLEMENTATION
// generate variable writers initialization code	WITHOUT_CLASSIFICATION	0.9998905731123253	WITHOUT_CLASSIFICATION	1.0942688767478447E-4	IMPLEMENTATION
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9998535076004703	WITHOUT_CLASSIFICATION	1.4649239952967382E-4	IMPLEMENTATION
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9998535076004703	WITHOUT_CLASSIFICATION	1.4649239952967382E-4	IMPLEMENTATION
// generate bytelists initialization code	WITHOUT_CLASSIFICATION	0.9998852392382386	WITHOUT_CLASSIFICATION	1.1476076176140403E-4	IMPLEMENTATION
// generate method cache initialization code	WITHOUT_CLASSIFICATION	0.9950805376165892	WITHOUT_CLASSIFICATION	0.0049194623834108355	IMPLEMENTATION
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9998432178634115	WITHOUT_CLASSIFICATION	1.567821365885727E-4	IMPLEMENTATION
// use IRubyObject[]	WITHOUT_CLASSIFICATION	0.9988230320626004	WITHOUT_CLASSIFICATION	0.0011769679373995934	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999578090119793	WITHOUT_CLASSIFICATION	4.219098802071723E-5	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9996557442554582	WITHOUT_CLASSIFICATION	3.4425574454169286E-4	IMPLEMENTATION
// No point in updating number if last number was same value.	WITHOUT_CLASSIFICATION	0.999999262645325	WITHOUT_CLASSIFICATION	7.373546749933732E-7	IMPLEMENTATION
// load Object under value	WITHOUT_CLASSIFICATION	0.9999836651856719	WITHOUT_CLASSIFICATION	1.6334814328055176E-5	IMPLEMENTATION
// put under object array already present	WITHOUT_CLASSIFICATION	0.9995338419942181	WITHOUT_CLASSIFICATION	4.6615800578189893E-4	IMPLEMENTATION
// if element count is less than 6, use helper methods	WITHOUT_CLASSIFICATION	0.9999873356723528	WITHOUT_CLASSIFICATION	1.2664327647096416E-5	IMPLEMENTATION
// This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements	WITHOUT_CLASSIFICATION	0.9999997180833751	WITHOUT_CLASSIFICATION	2.819166248986796E-7	IMPLEMENTATION
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999549258859031	WITHOUT_CLASSIFICATION	4.507411409693041E-5	IMPLEMENTATION
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999549258859031	WITHOUT_CLASSIFICATION	4.507411409693041E-5	IMPLEMENTATION
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9994492962007233	WITHOUT_CLASSIFICATION	5.507037992765923E-4	IMPLEMENTATION
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9994492962007233	WITHOUT_CLASSIFICATION	5.507037992765923E-4	IMPLEMENTATION
// use specific-arity for as much as possible	WITHOUT_CLASSIFICATION	0.9999545427653465	WITHOUT_CLASSIFICATION	4.545723465346714E-5	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9997187607718964	WITHOUT_CLASSIFICATION	2.8123922810365903E-4	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9997187607718964	WITHOUT_CLASSIFICATION	2.8123922810365903E-4	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9997187607718964	WITHOUT_CLASSIFICATION	2.8123922810365903E-4	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999249245671553	WITHOUT_CLASSIFICATION	7.507543284469113E-5	IMPLEMENTATION
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9998819927577297	WITHOUT_CLASSIFICATION	1.180072422703073E-4	IMPLEMENTATION
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9998819927577297	WITHOUT_CLASSIFICATION	1.180072422703073E-4	IMPLEMENTATION
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999914822245259	WITHOUT_CLASSIFICATION	8.517775474087161E-6	IMPLEMENTATION
// check the condition	WITHOUT_CLASSIFICATION	0.9998716346583922	WITHOUT_CLASSIFICATION	1.2836534160784202E-4	IMPLEMENTATION
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9998975329086991	WITHOUT_CLASSIFICATION	1.0246709130096837E-4	IMPLEMENTATION
// skip catch block	WITHOUT_CLASSIFICATION	0.9992070384424087	WITHOUT_CLASSIFICATION	7.929615575914196E-4	IMPLEMENTATION
// catch logic for flow-control: next, break	WITHOUT_CLASSIFICATION	0.99987917496364	WITHOUT_CLASSIFICATION	1.2082503635997903E-4	IMPLEMENTATION
// next jump	WITHOUT_CLASSIFICATION	0.99879025950024	WITHOUT_CLASSIFICATION	0.0012097404997599367	IMPLEMENTATION
// exceptionNext target is for a next that doesn't push a new value, like this one	WITHOUT_CLASSIFICATION	0.9995525781692959	WITHOUT_CLASSIFICATION	4.474218307042123E-4	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999423521951334	WITHOUT_CLASSIFICATION	5.7647804866637354E-5	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999423521951334	WITHOUT_CLASSIFICATION	5.7647804866637354E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999249245671553	WITHOUT_CLASSIFICATION	7.507543284469113E-5	IMPLEMENTATION
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999914822245259	WITHOUT_CLASSIFICATION	8.517775474087161E-6	IMPLEMENTATION
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999161718686647	WITHOUT_CLASSIFICATION	8.382813133528222E-5	IMPLEMENTATION
// check the condition	WITHOUT_CLASSIFICATION	0.9998716346583922	WITHOUT_CLASSIFICATION	1.2836534160784202E-4	IMPLEMENTATION
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9998975329086991	WITHOUT_CLASSIFICATION	1.0246709130096837E-4	IMPLEMENTATION
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9997779545285151	WITHOUT_CLASSIFICATION	2.2204547148493427E-4	IMPLEMENTATION
// break jump	WITHOUT_CLASSIFICATION	0.9995015650787797	WITHOUT_CLASSIFICATION	4.984349212202801E-4	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999182369213502	WITHOUT_CLASSIFICATION	8.176307864974698E-5	IMPLEMENTATION
//[reg]	WITHOUT_CLASSIFICATION	0.9999632642966054	WITHOUT_CLASSIFICATION	3.673570339455358E-5	IMPLEMENTATION
// for regular expressions with the /o flag	WITHOUT_CLASSIFICATION	0.999637579946259	WITHOUT_CLASSIFICATION	3.624200537410023E-4	IMPLEMENTATION
// inside a loop, jump to body	WITHOUT_CLASSIFICATION	0.9999664321867039	WITHOUT_CLASSIFICATION	3.3567813296138435E-5	IMPLEMENTATION
// inside a loop, jump to conditional	WITHOUT_CLASSIFICATION	0.9998060851840285	WITHOUT_CLASSIFICATION	1.9391481597139934E-4	IMPLEMENTATION
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9997779545285151	WITHOUT_CLASSIFICATION	2.2204547148493427E-4	IMPLEMENTATION
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999885182577015	WITHOUT_CLASSIFICATION	1.1481742298428553E-5	IMPLEMENTATION
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999885182577015	WITHOUT_CLASSIFICATION	1.1481742298428553E-5	IMPLEMENTATION
// if more than 4 vars, get values array too	WITHOUT_CLASSIFICATION	0.9999903780872408	WITHOUT_CLASSIFICATION	9.621912759131576E-6	IMPLEMENTATION
// retry handling in the rescue block	WITHOUT_CLASSIFICATION	0.9998779551052722	WITHOUT_CLASSIFICATION	1.2204489472779649E-4	IMPLEMENTATION
// any exceptions raised must continue to be raised, skipping $! restoration	WITHOUT_CLASSIFICATION	0.9999458525511746	WITHOUT_CLASSIFICATION	5.414744882542812E-5	IMPLEMENTATION
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9997459617729123	WITHOUT_CLASSIFICATION	2.540382270876677E-4	IMPLEMENTATION
// restore the original exception	WITHOUT_CLASSIFICATION	0.999663916568009	WITHOUT_CLASSIFICATION	3.360834319909407E-4	IMPLEMENTATION
// Handle Flow exceptions, just propagating them	WITHOUT_CLASSIFICATION	0.9999921806644616	WITHOUT_CLASSIFICATION	7.819335538433165E-6	IMPLEMENTATION
// rethrow to outer flow catcher	WITHOUT_CLASSIFICATION	0.9999365145821367	WITHOUT_CLASSIFICATION	6.348541786334712E-5	IMPLEMENTATION
// Handle Ruby exceptions (RaiseException)	WITHOUT_CLASSIFICATION	0.9998727205646251	WITHOUT_CLASSIFICATION	1.272794353749755E-4	IMPLEMENTATION
// inside a loop, break out of it // go to end of loop, leaving break value on stack	WITHOUT_CLASSIFICATION	0.9999919527114136	WITHOUT_CLASSIFICATION	8.04728858631636E-6	IMPLEMENTATION
// false // zero	WITHOUT_CLASSIFICATION	0.9997992097744778	WITHOUT_CLASSIFICATION	2.0079022552229548E-4	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999452879217979	WITHOUT_CLASSIFICATION	5.471207820220416E-5	IMPLEMENTATION
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9997459617729123	WITHOUT_CLASSIFICATION	2.540382270876677E-4	IMPLEMENTATION
// restore the original exception	WITHOUT_CLASSIFICATION	0.999663916568009	WITHOUT_CLASSIFICATION	3.360834319909407E-4	IMPLEMENTATION
// retry handling in the rescue blocks	WITHOUT_CLASSIFICATION	0.9999121098316093	WITHOUT_CLASSIFICATION	8.789016839072756E-5	IMPLEMENTATION
// push false	WITHOUT_CLASSIFICATION	0.9997569255299258	WITHOUT_CLASSIFICATION	2.430744700742759E-4	IMPLEMENTATION
//method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));	WITHOUT_CLASSIFICATION	0.9994792531202606	WITHOUT_CLASSIFICATION	5.20746879739313E-4	IMPLEMENTATION
//method.ifnonnull(trueLabel);	WITHOUT_CLASSIFICATION	0.9996940498953022	WITHOUT_CLASSIFICATION	3.059501046977244E-4	IMPLEMENTATION
// EQ == 0 (i.e. false)   //[C]	WITHOUT_CLASSIFICATION	0.9998939004326296	WITHOUT_CLASSIFICATION	1.0609956737045506E-4	IMPLEMENTATION
//[C, C] //[C, C, String] //[C, null|C]	WITHOUT_CLASSIFICATION	0.9994792531202606	WITHOUT_CLASSIFICATION	5.20746879739313E-4	IMPLEMENTATION
//[C]	WITHOUT_CLASSIFICATION	0.9999632642966054	WITHOUT_CLASSIFICATION	3.673570339455358E-5	IMPLEMENTATION
// push true	WITHOUT_CLASSIFICATION	0.9991363971453963	WITHOUT_CLASSIFICATION	8.636028546037219E-4	IMPLEMENTATION
// EQ != 0 (i.e. true)	WITHOUT_CLASSIFICATION	0.9999778672959686	WITHOUT_CLASSIFICATION	2.2132704031396977E-5	IMPLEMENTATION
//[?, ?] //[?, boolean]	WITHOUT_CLASSIFICATION	0.9996940498953022	WITHOUT_CLASSIFICATION	3.059501046977244E-4	IMPLEMENTATION
//[RubyModule] //[RubyModule, String]	WITHOUT_CLASSIFICATION	0.9994792531202606	WITHOUT_CLASSIFICATION	5.20746879739313E-4	IMPLEMENTATION
//[boolean]	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
// no receiver for singleton class	WITHOUT_CLASSIFICATION	0.9999676252272734	WITHOUT_CLASSIFICATION	3.237477272653768E-5	IMPLEMENTATION
// but there's a superclass passed in, use it	WITHOUT_CLASSIFICATION	0.9990636911918437	WITHOUT_CLASSIFICATION	9.363088081562589E-4	IMPLEMENTATION
// we re-set self to the class, but store the old self in a temporary local variable // this is to prevent it GCing in case the singleton is short-lived	WITHOUT_CLASSIFICATION	0.9999832510560631	WITHOUT_CLASSIFICATION	1.6748943936920655E-5	IMPLEMENTATION
// set self to the class	WITHOUT_CLASSIFICATION	0.9999445976018728	WITHOUT_CLASSIFICATION	5.5402398127192274E-5	IMPLEMENTATION
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9995014596226335	WITHOUT_CLASSIFICATION	4.985403773664252E-4	IMPLEMENTATION
// static scope	WITHOUT_CLASSIFICATION	0.9995203954136511	WITHOUT_CLASSIFICATION	4.796045863488327E-4	IMPLEMENTATION
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999596139501522	WITHOUT_CLASSIFICATION	4.03860498477269E-5	IMPLEMENTATION
// new instance to invoke run against	WITHOUT_CLASSIFICATION	0.9999531808155726	WITHOUT_CLASSIFICATION	4.681918442730902E-5	IMPLEMENTATION
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9995014596226335	WITHOUT_CLASSIFICATION	4.985403773664252E-4	IMPLEMENTATION
// static scope	WITHOUT_CLASSIFICATION	0.9995203954136511	WITHOUT_CLASSIFICATION	4.796045863488327E-4	IMPLEMENTATION
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999596139501522	WITHOUT_CLASSIFICATION	4.03860498477269E-5	IMPLEMENTATION
// finally with exception	WITHOUT_CLASSIFICATION	0.999849410851481	WITHOUT_CLASSIFICATION	1.5058914851885546E-4	IMPLEMENTATION
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9987000817582571	WITHOUT_CLASSIFICATION	0.0012999182417428627	IMPLEMENTATION
// otherwise, there's a receiver, so we pass that in directly for the sclass logic	WITHOUT_CLASSIFICATION	0.999938209397463	WITHOUT_CLASSIFICATION	6.179060253700667E-5	IMPLEMENTATION
// original exception is on stack	WITHOUT_CLASSIFICATION	0.9997822639797795	WITHOUT_CLASSIFICATION	2.1773602022041427E-4	IMPLEMENTATION
// RaiseException is on stack, get RubyException out	WITHOUT_CLASSIFICATION	0.9999616173095552	WITHOUT_CLASSIFICATION	3.838269044482895E-5	IMPLEMENTATION
// updating position for same line; skip	WITHOUT_CLASSIFICATION	0.9999381935033976	WITHOUT_CLASSIFICATION	6.180649660236632E-5	IMPLEMENTATION
// callbacks to fill in method body	WITHOUT_CLASSIFICATION	0.9999590869852117	WITHOUT_CLASSIFICATION	4.091301478824566E-5	IMPLEMENTATION
// prepare to call "def" utility method to handle def logic	WITHOUT_CLASSIFICATION	0.9972039547649306	WITHOUT_CLASSIFICATION	0.002796045235069455	IMPLEMENTATION
// script object	WITHOUT_CLASSIFICATION	0.9998481204589154	WITHOUT_CLASSIFICATION	1.518795410845311E-4	IMPLEMENTATION
// arities	WITHOUT_CLASSIFICATION	0.9999889436623457	WITHOUT_CLASSIFICATION	1.1056337654331047E-5	IMPLEMENTATION
// TODO assuming case is a fixnum	WITHOUT_CLASSIFICATION	0.7403402033640558	WITHOUT_CLASSIFICATION	0.2596597966359442	IMPLEMENTATION
// we have an input case, prepare branching logic	WITHOUT_CLASSIFICATION	0.9999154945145121	WITHOUT_CLASSIFICATION	8.450548548785995E-5	IMPLEMENTATION
// we have optimized switch cases, build a lookupswitch	WITHOUT_CLASSIFICATION	0.9994783787609183	WITHOUT_CLASSIFICATION	5.21621239081716E-4	IMPLEMENTATION
// checkcast the value; if match, fast path; otherwise proceed to slow logic	WITHOUT_CLASSIFICATION	0.999080937192209	WITHOUT_CLASSIFICATION	9.190628077910221E-4	IMPLEMENTATION
// expression-based tests + bodies	WITHOUT_CLASSIFICATION	0.9998644368270561	WITHOUT_CLASSIFICATION	1.3556317294384566E-4	IMPLEMENTATION
// normal case, create a new label	WITHOUT_CLASSIFICATION	0.9999656450456927	WITHOUT_CLASSIFICATION	3.435495430718308E-5	IMPLEMENTATION
// last conditional case, use defaultCase	WITHOUT_CLASSIFICATION	0.9998240537568457	WITHOUT_CLASSIFICATION	1.759462431543561E-4	IMPLEMENTATION
// do nothing; arity check is done before call	WITHOUT_CLASSIFICATION	0.9999073298938697	WITHOUT_CLASSIFICATION	9.267010613034286E-5	IMPLEMENTATION
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999927863233248	WITHOUT_CLASSIFICATION	7.213676675283404E-6	IMPLEMENTATION
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.999883044694801	WITHOUT_CLASSIFICATION	1.1695530519902074E-4	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.9999928521341451	WITHOUT_CLASSIFICATION	7.147865854764263E-6	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.9999729374918364	WITHOUT_CLASSIFICATION	2.7062508163620883E-5	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.9999729374918364	WITHOUT_CLASSIFICATION	2.7062508163620883E-5	IMPLEMENTATION
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.999938411183578	WITHOUT_CLASSIFICATION	6.158881642205435E-5	IMPLEMENTATION
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.999938411183578	WITHOUT_CLASSIFICATION	6.158881642205435E-5	IMPLEMENTATION
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9998297221013502	WITHOUT_CLASSIFICATION	1.7027789864973328E-4	IMPLEMENTATION
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9998297221013502	WITHOUT_CLASSIFICATION	1.7027789864973328E-4	IMPLEMENTATION
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999944330774095	WITHOUT_CLASSIFICATION	5.566922590411326E-6	IMPLEMENTATION
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.998609056139964	WITHOUT_CLASSIFICATION	0.0013909438600359777	IMPLEMENTATION
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999971749135161	WITHOUT_CLASSIFICATION	2.8250864837927814E-6	IMPLEMENTATION
// if there's args left and we want them, assign to rest arg	WITHOUT_CLASSIFICATION	0.9990649051758316	WITHOUT_CLASSIFICATION	9.350948241684398E-4	IMPLEMENTATION
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999986534224476	WITHOUT_CLASSIFICATION	1.3465775522648918E-6	IMPLEMENTATION
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999566553083028	WITHOUT_CLASSIFICATION	4.3344691697086425E-5	IMPLEMENTATION
// first, iterate over all pre args	WITHOUT_CLASSIFICATION	0.9999617908472768	WITHOUT_CLASSIFICATION	3.8209152723271454E-5	IMPLEMENTATION
// then optional args	WITHOUT_CLASSIFICATION	0.9999288148423112	WITHOUT_CLASSIFICATION	7.118515768871521E-5	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999423521951334	WITHOUT_CLASSIFICATION	5.7647804866637354E-5	IMPLEMENTATION
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999944330774095	WITHOUT_CLASSIFICATION	5.566922590411326E-6	IMPLEMENTATION
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.998609056139964	WITHOUT_CLASSIFICATION	0.0013909438600359777	IMPLEMENTATION
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999971749135161	WITHOUT_CLASSIFICATION	2.8250864837927814E-6	IMPLEMENTATION
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999986534224476	WITHOUT_CLASSIFICATION	1.3465775522648918E-6	IMPLEMENTATION
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999566553083028	WITHOUT_CLASSIFICATION	4.3344691697086425E-5	IMPLEMENTATION
// if rest args, excluding post args	WITHOUT_CLASSIFICATION	0.9999165769888274	WITHOUT_CLASSIFICATION	8.342301117252302E-5	IMPLEMENTATION
// finally, post args	WITHOUT_CLASSIFICATION	0.9999220653305031	WITHOUT_CLASSIFICATION	7.793466949700828E-5	IMPLEMENTATION
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9968390396271051	WITHOUT_CLASSIFICATION	0.0031609603728949514	IMPLEMENTATION
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9968390396271051	WITHOUT_CLASSIFICATION	0.0031609603728949514	IMPLEMENTATION
// unwrap scopes to appropriate depth	WITHOUT_CLASSIFICATION	0.9998503502352278	WITHOUT_CLASSIFICATION	1.4964976477220213E-4	IMPLEMENTATION
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999973898740345	WITHOUT_CLASSIFICATION	2.610125965556512E-6	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.999539776989048	WITHOUT_CLASSIFICATION	4.602230109520154E-4	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999549671928852	WITHOUT_CLASSIFICATION	4.503280711481105E-5	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999549671928852	WITHOUT_CLASSIFICATION	4.503280711481105E-5	IMPLEMENTATION
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999653372537196	WITHOUT_CLASSIFICATION	3.4662746280477974E-5	IMPLEMENTATION
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999617804388444	WITHOUT_CLASSIFICATION	3.821956115562671E-5	IMPLEMENTATION
// store the local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999853140926381	WITHOUT_CLASSIFICATION	1.468590736180213E-5	IMPLEMENTATION
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999136173090075	WITHOUT_CLASSIFICATION	8.638269099244832E-5	IMPLEMENTATION
// return in a class body raises error	WITHOUT_CLASSIFICATION	0.9999919000900616	WITHOUT_CLASSIFICATION	8.099909938501423E-6	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999969386284367	WITHOUT_CLASSIFICATION	3.0613715631936155E-6	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999978285358698	WITHOUT_CLASSIFICATION	2.1714641301579212E-6	IMPLEMENTATION
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999486372258343	WITHOUT_CLASSIFICATION	5.136277416580541E-5	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.999840874561852	WITHOUT_CLASSIFICATION	1.591254381479798E-4	IMPLEMENTATION
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999601498712104	WITHOUT_CLASSIFICATION	3.985012878969918E-5	IMPLEMENTATION
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999610164407694	WITHOUT_CLASSIFICATION	3.898355923064189E-5	IMPLEMENTATION
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999653372537196	WITHOUT_CLASSIFICATION	3.4662746280477974E-5	IMPLEMENTATION
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999617804388444	WITHOUT_CLASSIFICATION	3.821956115562671E-5	IMPLEMENTATION
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999136173090075	WITHOUT_CLASSIFICATION	8.638269099244832E-5	IMPLEMENTATION
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9948215474825587	WITHOUT_CLASSIFICATION	0.005178452517441347	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.999539776989048	WITHOUT_CLASSIFICATION	4.602230109520154E-4	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.999539776989048	WITHOUT_CLASSIFICATION	4.602230109520154E-4	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999452879217979	WITHOUT_CLASSIFICATION	5.471207820220416E-5	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999452879217979	WITHOUT_CLASSIFICATION	5.471207820220416E-5	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9157465403804731	WITHOUT_CLASSIFICATION	0.08425345961952692	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9157465403804731	WITHOUT_CLASSIFICATION	0.08425345961952692	IMPLEMENTATION
// store the local vars in a local variable if there are any	WITHOUT_CLASSIFICATION	0.9999993216234194	WITHOUT_CLASSIFICATION	6.783765806726649E-7	IMPLEMENTATION
// if more than 4 locals, get and populate the locals array too	WITHOUT_CLASSIFICATION	0.999763503431513	WITHOUT_CLASSIFICATION	2.3649656848706045E-4	IMPLEMENTATION
// fill local vars with nil, to avoid checking every access.	WITHOUT_CLASSIFICATION	0.9949661389525878	WITHOUT_CLASSIFICATION	0.0050338610474121295	IMPLEMENTATION
// default for starting tempVariableIndex is ok	WITHOUT_CLASSIFICATION	0.999985808517626	WITHOUT_CLASSIFICATION	1.4191482373995042E-5	IMPLEMENTATION
// store the local vars in a local variable for preparing the class (using previous scope)	WITHOUT_CLASSIFICATION	0.9999969531468871	WITHOUT_CLASSIFICATION	3.046853112866114E-6	IMPLEMENTATION
// store the new local vars in a local variable	WITHOUT_CLASSIFICATION	0.999985183547208	WITHOUT_CLASSIFICATION	1.4816452791999231E-5	IMPLEMENTATION
// in 1.8 mode, this will be a RubyArray containing the arguments // in 1.9 mode, this will be an IRubyObject[]	WITHOUT_CLASSIFICATION	0.999994907030726	WITHOUT_CLASSIFICATION	5.092969274021961E-6	IMPLEMENTATION
// no variable initialization, because we're reusing parent's scope (flat)	WITHOUT_CLASSIFICATION	0.9999746394131038	WITHOUT_CLASSIFICATION	2.5360586896261158E-5	IMPLEMENTATION
// for specific-index cases, clean up non-expression values	WITHOUT_CLASSIFICATION	0.999994872321813	WITHOUT_CLASSIFICATION	5.12767818692752E-6	IMPLEMENTATION
// set up a local Ruby variable	WITHOUT_CLASSIFICATION	0.9999569248696799	WITHOUT_CLASSIFICATION	4.3075130320139124E-5	IMPLEMENTATION
// if that succeeds, the others should as well	WITHOUT_CLASSIFICATION	0.999988593896491	WITHOUT_CLASSIFICATION	1.1406103509105606E-5	IMPLEMENTATION
// verify the class	WITHOUT_CLASSIFICATION	0.9997774336761949	WITHOUT_CLASSIFICATION	2.2256632380508414E-4	IMPLEMENTATION
// create dir if necessary	WITHOUT_CLASSIFICATION	0.9998888785131743	WITHOUT_CLASSIFICATION	1.1112148682575497E-4	IMPLEMENTATION
// Create the class with the appropriate class name and source file	WITHOUT_CLASSIFICATION	0.9999686882250449	WITHOUT_CLASSIFICATION	3.131177495504351E-5	IMPLEMENTATION
// add setPosition impl, which stores filename as constant to speed updates	WITHOUT_CLASSIFICATION	0.9999920080293314	WITHOUT_CLASSIFICATION	7.991970668599887E-6	IMPLEMENTATION
// thread context	WITHOUT_CLASSIFICATION	0.998376092998722	WITHOUT_CLASSIFICATION	0.0016239070012779115	IMPLEMENTATION
// line number	WITHOUT_CLASSIFICATION	0.9989965302320409	WITHOUT_CLASSIFICATION	0.0010034697679590782	IMPLEMENTATION
// invoke __file__ with threadcontext, self, args (null), and block (null)	WITHOUT_CLASSIFICATION	0.9998109412276731	WITHOUT_CLASSIFICATION	1.8905877232693307E-4	IMPLEMENTATION
// load always uses IRubyObject[], so simple closure offset calculation here	WITHOUT_CLASSIFICATION	0.9998624026066695	WITHOUT_CLASSIFICATION	1.37597393330565E-4	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999978285358698	WITHOUT_CLASSIFICATION	2.1714641301579212E-6	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.999840874561852	WITHOUT_CLASSIFICATION	1.591254381479798E-4	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9998255847091816	WITHOUT_CLASSIFICATION	1.7441529081850315E-4	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999857447876671	WITHOUT_CLASSIFICATION	1.4255212332776936E-5	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999857447876671	WITHOUT_CLASSIFICATION	1.4255212332776936E-5	IMPLEMENTATION
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9948215474825587	WITHOUT_CLASSIFICATION	0.005178452517441347	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.999539776989048	WITHOUT_CLASSIFICATION	4.602230109520154E-4	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999452879217979	WITHOUT_CLASSIFICATION	5.471207820220416E-5	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9157465403804731	WITHOUT_CLASSIFICATION	0.08425345961952692	IMPLEMENTATION
// add Script#run impl, used for running this script with a specified threadcontext and self // root method of a script is always in __file__ method	WITHOUT_CLASSIFICATION	0.9999838749384061	WITHOUT_CLASSIFICATION	1.612506159388719E-5	IMPLEMENTATION
// add main impl, used for detached or command-line execution of this script with a new runtime // root method of a script is always in stub0, method0	WITHOUT_CLASSIFICATION	0.9999707813890125	WITHOUT_CLASSIFICATION	2.9218610987518433E-5	IMPLEMENTATION
// construct static scope list of names	WITHOUT_CLASSIFICATION	0.9999546098815535	WITHOUT_CLASSIFICATION	4.539011844646573E-5	IMPLEMENTATION
// JRUBY-3014: make __FILE__ dynamically determined at load time, but // we provide a reasonable default here	WITHOUT_CLASSIFICATION	0.999881569017014	WITHOUT_CLASSIFICATION	1.184309829859711E-4	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999726807129143	WITHOUT_CLASSIFICATION	2.7319287085661586E-5	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999726807129143	WITHOUT_CLASSIFICATION	2.7319287085661586E-5	IMPLEMENTATION
// lazily create class init only if necessary	WITHOUT_CLASSIFICATION	0.9999804272177185	WITHOUT_CLASSIFICATION	1.9572782281463693E-5	IMPLEMENTATION
// boxed arg list __file__	WITHOUT_CLASSIFICATION	0.9999329088162136	WITHOUT_CLASSIFICATION	6.709118378642558E-5	IMPLEMENTATION
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999152713726623	WITHOUT_CLASSIFICATION	8.472862733765888E-5	IMPLEMENTATION
// exact arg list __file__	WITHOUT_CLASSIFICATION	0.999940058982801	WITHOUT_CLASSIFICATION	5.9941017199010954E-5	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.9995317225979875	WITHOUT_CLASSIFICATION	4.6827740201245286E-4	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.9995317225979875	WITHOUT_CLASSIFICATION	4.6827740201245286E-4	IMPLEMENTATION
// not using a new scope, use saved one for a flat closure	WITHOUT_CLASSIFICATION	0.9988027593072392	WITHOUT_CLASSIFICATION	0.0011972406927608927	IMPLEMENTATION
// normal closure	WITHOUT_CLASSIFICATION	0.998986461612352	WITHOUT_CLASSIFICATION	0.0010135383876479543	IMPLEMENTATION
// end of scoping for closure's vars	WITHOUT_CLASSIFICATION	0.9999556938484497	WITHOUT_CLASSIFICATION	4.430615155022426E-5	IMPLEMENTATION
// we only need full-on redo exception handling if there's logic that might produce it	WITHOUT_CLASSIFICATION	0.9981840828580844	WITHOUT_CLASSIFICATION	0.0018159171419156056	IMPLEMENTATION
// handle redos by restarting the block	WITHOUT_CLASSIFICATION	0.9992957728855315	WITHOUT_CLASSIFICATION	7.042271144683951E-4	IMPLEMENTATION
// jump back to the top of the main body of this closure	WITHOUT_CLASSIFICATION	0.9994049830018482	WITHOUT_CLASSIFICATION	5.950169981517526E-4	IMPLEMENTATION
// Ruby name 	WITHOUT_CLASSIFICATION	0.9990650501978342	WITHOUT_CLASSIFICATION	9.349498021657364E-4	IMPLEMENTATION
// Accumulate call arguments	WITHOUT_CLASSIFICATION	0.9998459249308598	WITHOUT_CLASSIFICATION	1.540750691401796E-4	IMPLEMENTATION
// Fix FileNameCompletor to work mid-line	WITHOUT_CLASSIFICATION	0.9998627050151534	WITHOUT_CLASSIFICATION	1.3729498484661923E-4	IMPLEMENTATION
// We need to ensure that the variable names generated here cannot conflict with ruby variable names! // Hence the "%" tthat is appended to the beginning!	WITHOUT_CLASSIFICATION	0.9996074850611095	WITHOUT_CLASSIFICATION	3.9251493889050105E-4	IMPLEMENTATION
// Does this method define code?  // Default is yes -- which basically leads to pessimistic but safe optimizations // But, for library and internal methods, this might be false.	WITHOUT_CLASSIFICATION	0.9999994794689984	WITHOUT_CLASSIFICATION	5.20531001638905E-7	IMPLEMENTATION
// Map of constants defined in this scope (not valid for methods!)	WITHOUT_CLASSIFICATION	0.9999991395777696	WITHOUT_CLASSIFICATION	8.604222303398867E-7	IMPLEMENTATION
// NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner // with outer loops encountered before inner loops, and inner loops finished before outer ones. // // So, we can keep track of loops in a loop stack which  keeps track of loops as they are encountered. // This lets us implement next/redo/break/retry easily for the non-closure cases	WITHOUT_CLASSIFICATION	0.999999318450682	WITHOUT_CLASSIFICATION	6.81549318011573E-7	IMPLEMENTATION
// Map keep track of the next available variable index for a particular prefix	WITHOUT_CLASSIFICATION	0.9997895971956049	WITHOUT_CLASSIFICATION	2.1040280439502904E-4	IMPLEMENTATION
// Control flow graph for this scope	WITHOUT_CLASSIFICATION	0.9998757486067613	WITHOUT_CLASSIFICATION	1.242513932386388E-4	IMPLEMENTATION
//        _lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;	WITHOUT_CLASSIFICATION	0.997231805779089	WITHOUT_CLASSIFICATION	0.002768194220911051	IMPLEMENTATION
// List of modules, classes, and methods defined in this scope!	WITHOUT_CLASSIFICATION	0.9999818433846726	WITHOUT_CLASSIFICATION	1.815661532735766E-5	IMPLEMENTATION
// Returns the containing parent scope!	WITHOUT_CLASSIFICATION	0.9997628641495284	WITHOUT_CLASSIFICATION	2.3713585047148344E-4	IMPLEMENTATION
// Insert nesting level to ensure variable names don't conflict across nested scopes! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //        return new Variable(prefix + _lexicalNestingLevel + "_" + idx);	WITHOUT_CLASSIFICATION	0.9999614372221094	WITHOUT_CLASSIFICATION	3.8562777890572406E-5	IMPLEMENTATION
// get "self"	WITHOUT_CLASSIFICATION	0.9996179400668253	WITHOUT_CLASSIFICATION	3.820599331746858E-4	IMPLEMENTATION
// variable is never read, variable is never live	WITHOUT_CLASSIFICATION	0.9992822597863701	WITHOUT_CLASSIFICATION	7.177402136299214E-4	IMPLEMENTATION
// inline script	WITHOUT_CLASSIFICATION	0.9995696197866456	WITHOUT_CLASSIFICATION	4.303802133543677E-4	IMPLEMENTATION
// inline script	WITHOUT_CLASSIFICATION	0.9995696197866456	WITHOUT_CLASSIFICATION	4.303802133543677E-4	IMPLEMENTATION
// This method is called to build assignments for a multiple-assignment instruction	WITHOUT_CLASSIFICATION	0.9999844464794224	WITHOUT_CLASSIFICATION	1.5553520577622027E-5	IMPLEMENTATION
// Build the class body!	WITHOUT_CLASSIFICATION	0.9999532997878028	WITHOUT_CLASSIFICATION	4.670021219721372E-5	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999288231168971	WITHOUT_CLASSIFICATION	7.117688310284238E-5	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999288231168971	WITHOUT_CLASSIFICATION	7.117688310284238E-5	IMPLEMENTATION
// SSS FIXME: Can this ever be null?	WITHOUT_CLASSIFICATION	0.9235542432196437	WITHOUT_CLASSIFICATION	0.07644575678035632	IMPLEMENTATION
// Run the pass on the passed in scope!	WITHOUT_CLASSIFICATION	0.9998982569555385	WITHOUT_CLASSIFICATION	1.0174304446153317E-4	IMPLEMENTATION
// done // done // done // done	WITHOUT_CLASSIFICATION	0.9998030730456381	WITHOUT_CLASSIFICATION	1.9692695436190872E-4	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999995953043772	WITHOUT_CLASSIFICATION	4.046956228808805E-7	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999995953043772	WITHOUT_CLASSIFICATION	4.046956228808805E-7	IMPLEMENTATION
// This method is called to build arguments for a block!	WITHOUT_CLASSIFICATION	0.999985196971328	WITHOUT_CLASSIFICATION	1.4803028672081018E-5	IMPLEMENTATION
// build first node (and ignore its result) and then second node	WITHOUT_CLASSIFICATION	0.9997833876955882	WITHOUT_CLASSIFICATION	2.1661230441174235E-4	IMPLEMENTATION
// build first node only and return false	WITHOUT_CLASSIFICATION	0.9999757302234581	WITHOUT_CLASSIFICATION	2.4269776541827756E-5	IMPLEMENTATION
// Value of the last expression in the block 	WITHOUT_CLASSIFICATION	0.9999816016361456	WITHOUT_CLASSIFICATION	1.839836385447214E-5	IMPLEMENTATION
// If this is not a closure, the break is equivalent to jumping to the loop end label	WITHOUT_CLASSIFICATION	0.9996234612463694	WITHOUT_CLASSIFICATION	3.765387536305927E-4	IMPLEMENTATION
// get the incoming case value	WITHOUT_CLASSIFICATION	0.9999756103988519	WITHOUT_CLASSIFICATION	2.4389601148129935E-5	IMPLEMENTATION
// the CASE instruction	WITHOUT_CLASSIFICATION	0.9999135778049476	WITHOUT_CLASSIFICATION	8.642219505245026E-5	IMPLEMENTATION
// lists to aggregate variables and bodies for whens	WITHOUT_CLASSIFICATION	0.999965477613432	WITHOUT_CLASSIFICATION	3.4522386567965056E-5	IMPLEMENTATION
// build each "when"	WITHOUT_CLASSIFICATION	0.9995682760990653	WITHOUT_CLASSIFICATION	4.317239009347477E-4	IMPLEMENTATION
// multiple conditions for when	WITHOUT_CLASSIFICATION	0.9999421930965462	WITHOUT_CLASSIFICATION	5.780690345381858E-5	IMPLEMENTATION
// build "else" if it exists	WITHOUT_CLASSIFICATION	0.9999574770816639	WITHOUT_CLASSIFICATION	4.2522918335972896E-5	IMPLEMENTATION
// now emit bodies	WITHOUT_CLASSIFICATION	0.9997367732040656	WITHOUT_CLASSIFICATION	2.632267959343167E-4	IMPLEMENTATION
// close it out	WITHOUT_CLASSIFICATION	0.9999343383555851	WITHOUT_CLASSIFICATION	6.566164441495416E-5	IMPLEMENTATION
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999570948447469	WITHOUT_CLASSIFICATION	4.290515525309515E-5	IMPLEMENTATION
// Do we have a dynamic container?	WITHOUT_CLASSIFICATION	0.9993234958980746	WITHOUT_CLASSIFICATION	6.765041019253995E-4	IMPLEMENTATION
// Return a meta object corresponding to the class	WITHOUT_CLASSIFICATION	0.9999845903037052	WITHOUT_CLASSIFICATION	1.5409696294668452E-5	IMPLEMENTATION
// 1. Load the module first (lhs of node) // 2. Then load the constant from the module	WITHOUT_CLASSIFICATION	0.999957797540871	WITHOUT_CLASSIFICATION	4.2202459128926664E-5	IMPLEMENTATION
// Build IR for args	WITHOUT_CLASSIFICATION	0.9997952833533323	WITHOUT_CLASSIFICATION	2.0471664666767868E-4	IMPLEMENTATION
// Build IR for body	WITHOUT_CLASSIFICATION	0.9999367656704528	WITHOUT_CLASSIFICATION	6.323432954725396E-5	IMPLEMENTATION
// if root of method is rescue, build as a light rescue	WITHOUT_CLASSIFICATION	0.9999941261084292	WITHOUT_CLASSIFICATION	5.873891570897547E-6	IMPLEMENTATION
// Instance method	WITHOUT_CLASSIFICATION	0.9984224948752982	WITHOUT_CLASSIFICATION	0.0015775051247018564	IMPLEMENTATION
// Class method	WITHOUT_CLASSIFICATION	0.9992812190248431	WITHOUT_CLASSIFICATION	7.18780975156918E-4	IMPLEMENTATION
// Other args begin at index 1	WITHOUT_CLASSIFICATION	0.9998890366964754	WITHOUT_CLASSIFICATION	1.1096330352451124E-4	IMPLEMENTATION
// Both for fixed arity and variable arity methods	WITHOUT_CLASSIFICATION	0.9999337752497125	WITHOUT_CLASSIFICATION	6.622475028750101E-5	IMPLEMENTATION
// Now for the rest	WITHOUT_CLASSIFICATION	0.9991498788788302	WITHOUT_CLASSIFICATION	8.50121121169789E-4	IMPLEMENTATION
// Jump to 'l' if this arg is not null.  If null, fall through and build the default value!	WITHOUT_CLASSIFICATION	0.9999948729843716	WITHOUT_CLASSIFICATION	5.12701562832231E-6	IMPLEMENTATION
// This is not an expression that computes anything	WITHOUT_CLASSIFICATION	0.9909849065905406	WITHOUT_CLASSIFICATION	0.009015093409459479	IMPLEMENTATION
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999214659929975	WITHOUT_CLASSIFICATION	7.853400700245546E-5	IMPLEMENTATION
// Build args	WITHOUT_CLASSIFICATION	0.9995701437411069	WITHOUT_CLASSIFICATION	4.298562588931988E-4	IMPLEMENTATION
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999953292170506	WITHOUT_CLASSIFICATION	4.670782949454769E-6	IMPLEMENTATION
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999752079938844	WITHOUT_CLASSIFICATION	2.4792006115597692E-5	IMPLEMENTATION
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999570948447469	WITHOUT_CLASSIFICATION	4.290515525309515E-5	IMPLEMENTATION
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999214659929975	WITHOUT_CLASSIFICATION	7.853400700245546E-5	IMPLEMENTATION
// Build args	WITHOUT_CLASSIFICATION	0.9995701437411069	WITHOUT_CLASSIFICATION	4.298562588931988E-4	IMPLEMENTATION
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999752079938844	WITHOUT_CLASSIFICATION	2.4792006115597692E-5	IMPLEMENTATION
// Get the container for this new module	WITHOUT_CLASSIFICATION	0.9998827166189955	WITHOUT_CLASSIFICATION	1.1728338100451412E-4	IMPLEMENTATION
// Build the new module	WITHOUT_CLASSIFICATION	0.9998845923454942	WITHOUT_CLASSIFICATION	1.1540765450584186E-4	IMPLEMENTATION
// Build the module body	WITHOUT_CLASSIFICATION	0.9999663429382626	WITHOUT_CLASSIFICATION	3.365706173737666E-5	IMPLEMENTATION
// First, build an assignment for a splat, if any, with the rest of the args!	WITHOUT_CLASSIFICATION	0.9999908250913618	WITHOUT_CLASSIFICATION	9.17490863824167E-6	IMPLEMENTATION
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999816308877483	WITHOUT_CLASSIFICATION	1.8369112251697466E-5	IMPLEMENTATION
// If a closure, the next is simply a return from the closure! // If a regular loop, the next is simply a jump to the end of the iteration	WITHOUT_CLASSIFICATION	0.9999832823512447	WITHOUT_CLASSIFICATION	1.6717648755364953E-5	IMPLEMENTATION
// get attr	WITHOUT_CLASSIFICATION	0.9996179400668253	WITHOUT_CLASSIFICATION	3.820599331746858E-4	IMPLEMENTATION
// call operator	WITHOUT_CLASSIFICATION	0.9991168977607959	WITHOUT_CLASSIFICATION	8.83102239204105E-4	IMPLEMENTATION
// set attr	WITHOUT_CLASSIFICATION	0.9993075898868432	WITHOUT_CLASSIFICATION	6.924101131568785E-4	IMPLEMENTATION
// Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, false, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9996444400988247	WITHOUT_CLASSIFICATION	3.5555990117528113E-4	IMPLEMENTATION
// This does the assignment!	WITHOUT_CLASSIFICATION	0.999959664227626	WITHOUT_CLASSIFICATION	4.033577237392504E-5	IMPLEMENTATION
// This does the assignment!	WITHOUT_CLASSIFICATION	0.999959664227626	WITHOUT_CLASSIFICATION	4.033577237392504E-5	IMPLEMENTATION
// if v1 is defined and true, we are done! 	WITHOUT_CLASSIFICATION	0.9999924229425895	WITHOUT_CLASSIFICATION	7.577057410589291E-6	IMPLEMENTATION
// build first node only and return true	WITHOUT_CLASSIFICATION	0.9999137253490944	WITHOUT_CLASSIFICATION	8.627465090564669E-5	IMPLEMENTATION
// build first node as non-expr and build second node	WITHOUT_CLASSIFICATION	0.9999390535188958	WITHOUT_CLASSIFICATION	6.094648110427578E-5	IMPLEMENTATION
// Top-level script!	WITHOUT_CLASSIFICATION	0.9994903392551018	WITHOUT_CLASSIFICATION	5.096607448981903E-4	IMPLEMENTATION
// we won't enter the loop -- just build the condition node	WITHOUT_CLASSIFICATION	0.9999993652906589	WITHOUT_CLASSIFICATION	6.347093411230245E-7	IMPLEMENTATION
/* ----------- Private Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999814949209334	WITHOUT_CLASSIFICATION	1.8505079066685372E-5	IMPLEMENTATION
// What handles warnings	WITHOUT_CLASSIFICATION	0.999911939602604	WITHOUT_CLASSIFICATION	8.806039739597535E-5	IMPLEMENTATION
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999996426957628	WITHOUT_CLASSIFICATION	3.5730423722355727E-7	IMPLEMENTATION
// For closures, a redo is a jump to the beginning of the closure // For non-closures, a redo is a jump to the beginning of the loop	WITHOUT_CLASSIFICATION	0.9999781875645616	WITHOUT_CLASSIFICATION	2.1812435438361275E-5	IMPLEMENTATION
// The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.999994174190413	WITHOUT_CLASSIFICATION	5.825809586963585E-6	IMPLEMENTATION
// Dummy top-level method for the class	WITHOUT_CLASSIFICATION	0.9998735562246119	WITHOUT_CLASSIFICATION	1.264437753880325E-4	IMPLEMENTATION
// Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999919801665518	WITHOUT_CLASSIFICATION	8.01983344814686E-6	IMPLEMENTATION
// ------ Define the operations below ----	WITHOUT_CLASSIFICATION	0.9998065564838355	WITHOUT_CLASSIFICATION	1.934435161644811E-4	IMPLEMENTATION
// value copy and type conversion operations	WITHOUT_CLASSIFICATION	0.9999899616732593	WITHOUT_CLASSIFICATION	1.0038326740623418E-5	IMPLEMENTATION
// alu operations	WITHOUT_CLASSIFICATION	0.9988151939973057	WITHOUT_CLASSIFICATION	0.0011848060026944187	IMPLEMENTATION
// method handle, arg receive, return value, and  call instructions	WITHOUT_CLASSIFICATION	0.9997473562505261	WITHOUT_CLASSIFICATION	2.5264374947384625E-4	IMPLEMENTATION
// closure instructions	WITHOUT_CLASSIFICATION	0.9999087030651295	WITHOUT_CLASSIFICATION	9.129693487045893E-5	IMPLEMENTATION
// eval instructions	WITHOUT_CLASSIFICATION	0.9994903392551018	WITHOUT_CLASSIFICATION	5.096607448981903E-4	IMPLEMENTATION
// def instructions	WITHOUT_CLASSIFICATION	0.9994904707553722	WITHOUT_CLASSIFICATION	5.095292446278507E-4	IMPLEMENTATION
// exception instructions	WITHOUT_CLASSIFICATION	0.999882987629446	WITHOUT_CLASSIFICATION	1.1701237055384906E-4	IMPLEMENTATION
// Loads	WITHOUT_CLASSIFICATION	0.9999889436623457	WITHOUT_CLASSIFICATION	1.1056337654331047E-5	IMPLEMENTATION
// Stores	WITHOUT_CLASSIFICATION	0.9999889436623457	WITHOUT_CLASSIFICATION	1.1056337654331047E-5	IMPLEMENTATION
// jump and branch operations	WITHOUT_CLASSIFICATION	0.9998581403215756	WITHOUT_CLASSIFICATION	1.4185967842431118E-4	IMPLEMENTATION
// others	WITHOUT_CLASSIFICATION	0.9999891657563356	WITHOUT_CLASSIFICATION	1.08342436644598E-5	IMPLEMENTATION
// a case/when branch	WITHOUT_CLASSIFICATION	0.9999387479017868	WITHOUT_CLASSIFICATION	6.125209821307107E-5	IMPLEMENTATION
// optimization guards	WITHOUT_CLASSIFICATION	0.9999086001663718	WITHOUT_CLASSIFICATION	9.139983362817968E-5	IMPLEMENTATION
// By default, call instructions cannot be deleted even if their results aren't used by anyone // unless we know more about what the call is, what it does, etc. // Similarly for evals, stores, returns.	WITHOUT_CLASSIFICATION	0.8318554929778703	WITHOUT_CLASSIFICATION	0.16814450702212966	IMPLEMENTATION
// Returns the containing parent scope -- can be a dynamic value (hence Operand)!	WITHOUT_CLASSIFICATION	0.9999802917924822	WITHOUT_CLASSIFICATION	1.9708207517814698E-5	IMPLEMENTATION
// scripts	WITHOUT_CLASSIFICATION	0.9999890013252783	WITHOUT_CLASSIFICATION	1.0998674721540965E-5	IMPLEMENTATION
// scripts and modules	WITHOUT_CLASSIFICATION	0.9999691018914254	WITHOUT_CLASSIFICATION	3.089810857463605E-5	IMPLEMENTATION
// scripts, classes, and modules	WITHOUT_CLASSIFICATION	0.9999483753218722	WITHOUT_CLASSIFICATION	5.16246781279447E-5	IMPLEMENTATION
// methods and closures	WITHOUT_CLASSIFICATION	0.9999309610523511	WITHOUT_CLASSIFICATION	6.903894764882744E-5	IMPLEMENTATION
// create a new variable using the prefix	WITHOUT_CLASSIFICATION	0.9998707768710398	WITHOUT_CLASSIFICATION	1.2922312896019092E-4	IMPLEMENTATION
// create a new temporary variable	WITHOUT_CLASSIFICATION	0.9997793936149884	WITHOUT_CLASSIFICATION	2.206063850116543E-4	IMPLEMENTATION
// Get a new label using a generic prefix	WITHOUT_CLASSIFICATION	0.9999915346051571	WITHOUT_CLASSIFICATION	8.465394842949842E-6	IMPLEMENTATION
// Build the CFG for this scope -- supported only by methods & closures	WITHOUT_CLASSIFICATION	0.9999989321499433	WITHOUT_CLASSIFICATION	1.0678500567026768E-6	IMPLEMENTATION
// Get the control flow graph for this scope -- only valid for methods & closures	WITHOUT_CLASSIFICATION	0.9999915089877824	WITHOUT_CLASSIFICATION	8.49101221760878E-6	IMPLEMENTATION
// While processing loops, this returns the loop that we are processing.	WITHOUT_CLASSIFICATION	0.9998998848582176	WITHOUT_CLASSIFICATION	1.0011514178239228E-4	IMPLEMENTATION
// Record the loop we are beginning to process	WITHOUT_CLASSIFICATION	0.9999754494954602	WITHOUT_CLASSIFICATION	2.4550504539783413E-5	IMPLEMENTATION
// Indicate that we are done processing the loop	WITHOUT_CLASSIFICATION	0.9995911291785432	WITHOUT_CLASSIFICATION	4.0887082145676587E-4	IMPLEMENTATION
// Run the passed in compiler pass on this scope!	WITHOUT_CLASSIFICATION	0.9997885637065598	WITHOUT_CLASSIFICATION	2.1143629344028746E-4	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9966670707987205	WITHOUT_CLASSIFICATION	0.0033329292012793756	IMPLEMENTATION
// Readline	WITHOUT_CLASSIFICATION	0.9994903392551018	WITHOUT_CLASSIFICATION	5.096607448981903E-4	IMPLEMENTATION
// If the cfg of the method is around, print the CFG!	WITHOUT_CLASSIFICATION	0.9999459328152747	WITHOUT_CLASSIFICATION	5.40671847252988E-5	IMPLEMENTATION
// Optimize some core class method calls for constant values	WITHOUT_CLASSIFICATION	0.9999602648687467	WITHOUT_CLASSIFICATION	3.973513125330549E-5	IMPLEMENTATION
// If 'r' is not a constant, it could actually be a compound value! // Look in our value map to see if we have a simplified value for the receiver.	WITHOUT_CLASSIFICATION	0.9999981540169117	WITHOUT_CLASSIFICATION	1.8459830882138077E-6	IMPLEMENTATION
// Check if we can optimize this call based on the receiving method and receiver type // Use the simplified receiver!	WITHOUT_CLASSIFICATION	0.9933201724305759	WITHOUT_CLASSIFICATION	0.006679827569424036	IMPLEMENTATION
// If we got a simplified value, mark the call dead and insert a copy in its place!	WITHOUT_CLASSIFICATION	0.9999951541715376	WITHOUT_CLASSIFICATION	4.845828462389343E-6	IMPLEMENTATION
// If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!	WITHOUT_CLASSIFICATION	0.9999629234310256	WITHOUT_CLASSIFICATION	3.707656897437955E-5	IMPLEMENTATION
/* ----------- Public abstract methods ---------- */	WITHOUT_CLASSIFICATION	0.9999771661854558	WITHOUT_CLASSIFICATION	2.283381454422694E-5	IMPLEMENTATION
/* ----------- Public methods with a default implementation ---------- */	WITHOUT_CLASSIFICATION	0.9999691677578335	WITHOUT_CLASSIFICATION	3.083224216640784E-5	IMPLEMENTATION
// Compute meet over all "sources" and compute "destination" basic blocks that should then be processed.  // sources & targets depends on direction of the data flow problem	WITHOUT_CLASSIFICATION	0.9999994553604578	WITHOUT_CLASSIFICATION	5.446395422355354E-7	IMPLEMENTATION
// If the solution has changed, add "dsts" to the work list. // No duplicates please which is why we have bbset.	WITHOUT_CLASSIFICATION	0.9996914144340254	WITHOUT_CLASSIFICATION	3.085855659744844E-4	IMPLEMENTATION
/* --------- Protected fields/methods below --------- */	WITHOUT_CLASSIFICATION	0.9999864561413827	WITHOUT_CLASSIFICATION	1.3543858617290435E-5	IMPLEMENTATION
// Dataflow problem with which this node is associated // CFG node for which this node contains info.	WITHOUT_CLASSIFICATION	0.9999188119233918	WITHOUT_CLASSIFICATION	8.118807660818237E-5	IMPLEMENTATION
/* -------------- Public fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.999991563892733	WITHOUT_CLASSIFICATION	8.436107266974498E-6	IMPLEMENTATION
// ------- Abstract methods without a default implementation -------	WITHOUT_CLASSIFICATION	0.9998397855415871	WITHOUT_CLASSIFICATION	1.6021445841279497E-4	IMPLEMENTATION
// ------- Default implementation methods below -------	WITHOUT_CLASSIFICATION	0.999397635191528	WITHOUT_CLASSIFICATION	6.023648084719763E-4	IMPLEMENTATION
/* Compute Meet Over All Paths solution for this dataflow problem on the input CFG.     * This implements a standard worklist algorithm. */	WITHOUT_CLASSIFICATION	0.9999663254472203	WITHOUT_CLASSIFICATION	3.3674552779731145E-5	IMPLEMENTATION
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9999127445750075	WITHOUT_CLASSIFICATION	8.725542499246709E-5	IMPLEMENTATION
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9999127445750075	WITHOUT_CLASSIFICATION	8.725542499246709E-5	IMPLEMENTATION
/* -------------- Packaged/protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999906269835084	WITHOUT_CLASSIFICATION	9.373016491661543E-6	IMPLEMENTATION
// We want unique ids for dataflow variables	WITHOUT_CLASSIFICATION	0.9995449935784053	WITHOUT_CLASSIFICATION	4.550064215947242E-4	IMPLEMENTATION
/* -------------- Protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999906269835084	WITHOUT_CLASSIFICATION	9.373016491661543E-6	IMPLEMENTATION
/* -------------- Private fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999922093077191	WITHOUT_CLASSIFICATION	7.79069228089749E-6	IMPLEMENTATION
// Initialize all flow graph nodes 	WITHOUT_CLASSIFICATION	0.9998876318545183	WITHOUT_CLASSIFICATION	1.1236814548164098E-4	IMPLEMENTATION
/* Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses */	WITHOUT_CLASSIFICATION	0.9999996671091167	WITHOUT_CLASSIFICATION	3.3289088330125244E-7	IMPLEMENTATION
/* ******************** PUBLIC INTERFACE ******************* */	WITHOUT_CLASSIFICATION	0.9999741139862605	WITHOUT_CLASSIFICATION	2.5886013739515137E-5	IMPLEMENTATION
// Unique ID assigned to this variable	WITHOUT_CLASSIFICATION	0.9989285603476814	WITHOUT_CLASSIFICATION	0.0010714396523186487	IMPLEMENTATION
// start out with a default RubyObject allocator	WITHOUT_CLASSIFICATION	0.9999959449568017	WITHOUT_CLASSIFICATION	4.055043198362933E-6	IMPLEMENTATION
// switch to an allocator based on a default constructor	WITHOUT_CLASSIFICATION	0.9999878561077233	WITHOUT_CLASSIFICATION	1.2143892276621947E-5	IMPLEMENTATION
/* ----------- Public Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999799618971212	WITHOUT_CLASSIFICATION	2.00381028787512E-5	IMPLEMENTATION
// class or module	WITHOUT_CLASSIFICATION	0.9997566553456098	WITHOUT_CLASSIFICATION	2.4334465439014425E-4	IMPLEMENTATION
// OUT = UNION(IN(succs))	WITHOUT_CLASSIFICATION	0.9999152544788279	WITHOUT_CLASSIFICATION	8.47455211721162E-5	IMPLEMENTATION
// Traverse the instructions in this basic block in reverse order!	WITHOUT_CLASSIFICATION	0.999927632258208	WITHOUT_CLASSIFICATION	7.236774179207367E-5	IMPLEMENTATION
// v is defined => It is no longer live before 'i'	WITHOUT_CLASSIFICATION	0.9999943349621274	WITHOUT_CLASSIFICATION	5.665037872561998E-6	IMPLEMENTATION
// IN is the same!	WITHOUT_CLASSIFICATION	0.9997602970512083	WITHOUT_CLASSIFICATION	2.3970294879166075E-4	IMPLEMENTATION
// IN changed!	WITHOUT_CLASSIFICATION	0.9995024232235781	WITHOUT_CLASSIFICATION	4.975767764218285E-4	IMPLEMENTATION
/* ---------- Protected / package fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999902273430661	WITHOUT_CLASSIFICATION	9.772656933915832E-6	IMPLEMENTATION
// If 'v' is not live at the instruction site, and it has no side effects, mark it dead!	WITHOUT_CLASSIFICATION	0.9999091498203163	WITHOUT_CLASSIFICATION	9.085017968371214E-5	IMPLEMENTATION
// Do not mark this instruction's operands live if the instruction itself is dead!	WITHOUT_CLASSIFICATION	0.9978475244377274	WITHOUT_CLASSIFICATION	0.0021524755622725706	IMPLEMENTATION
/* ---------- Private fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999769215424583	WITHOUT_CLASSIFICATION	2.3078457541587403E-5	IMPLEMENTATION
// Variables live at entry of this node // Variables live at exit of node // Temporary set of live variables // Size of the "_in" and "_out" bit sets 	WITHOUT_CLASSIFICATION	0.999877820321812	WITHOUT_CLASSIFICATION	1.2217967818797085E-4	IMPLEMENTATION
// Used during optimization passes to propagate type and other information	WITHOUT_CLASSIFICATION	0.9999399067391687	WITHOUT_CLASSIFICATION	6.0093260831363156E-5	IMPLEMENTATION
// Does this instruction have side effects as a result of its operation // This information is used in optimization phases to impact dead code elimination // and other optimization passes	WITHOUT_CLASSIFICATION	0.9999998745554272	WITHOUT_CLASSIFICATION	1.2544457280492358E-7	IMPLEMENTATION
/* --------- "Abstract"/"please-override" methods --------- */	WITHOUT_CLASSIFICATION	0.9999721409420912	WITHOUT_CLASSIFICATION	2.785905790870575E-5	IMPLEMENTATION
/* Array of all operands for this instruction */	WITHOUT_CLASSIFICATION	0.9999916060918739	WITHOUT_CLASSIFICATION	8.393908126126536E-6	IMPLEMENTATION
/* List of all variables used by all operands of this instruction */	WITHOUT_CLASSIFICATION	0.999987499186468	WITHOUT_CLASSIFICATION	1.2500813532102871E-5	IMPLEMENTATION
/*      * This method takes as input a map of operands to their values, and outputs     *     * If the value map provides a value for any of the instruction's operands     * this method is expected to replace the original operands with the simplified values.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify     */	WITHOUT_CLASSIFICATION	0.9999924710637945	WITHOUT_CLASSIFICATION	7.52893620550524E-6	IMPLEMENTATION
// By default, no simplifications!	WITHOUT_CLASSIFICATION	0.9998198951144116	WITHOUT_CLASSIFICATION	1.8010488558831443E-4	IMPLEMENTATION
// Can this call lead to ruby code getting modified?   // If we don't know what method we are calling, we assume it can (pessimistic, but safe!) // If we do know the target method, we ask the method itself whether it modifies ruby code	WITHOUT_CLASSIFICATION	0.974076856689947	WITHOUT_CLASSIFICATION	0.02592314331005291	IMPLEMENTATION
// By default, return instructions cannot be deleted	WITHOUT_CLASSIFICATION	0.9999270403424421	WITHOUT_CLASSIFICATION	7.295965755787556E-5	IMPLEMENTATION
// If true, returns the rest of the array starting at the index	WITHOUT_CLASSIFICATION	0.9999047532110457	WITHOUT_CLASSIFICATION	9.524678895434313E-5	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9998970394239488	WITHOUT_CLASSIFICATION	1.0296057605116807E-4	IMPLEMENTATION
// Map of label & basic blocks with that label	WITHOUT_CLASSIFICATION	0.9999947782316982	WITHOUT_CLASSIFICATION	5.221768301770897E-6	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9998970394239488	WITHOUT_CLASSIFICATION	1.0296057605116807E-4	IMPLEMENTATION
// You can only value-replace atomic values	WITHOUT_CLASSIFICATION	0.9999934520348395	WITHOUT_CLASSIFICATION	6.547965160488459E-6	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999792182443449	WITHOUT_CLASSIFICATION	2.078175565508469E-5	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999792182443449	WITHOUT_CLASSIFICATION	2.078175565508469E-5	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999792182443449	WITHOUT_CLASSIFICATION	2.078175565508469E-5	IMPLEMENTATION
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999539465435869	WITHOUT_CLASSIFICATION	4.6053456413041565E-5	IMPLEMENTATION
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999539465435869	WITHOUT_CLASSIFICATION	4.6053456413041565E-5	IMPLEMENTATION
// The operand that this attribute targets //    DEFERRED //    AttributeValue _val;       // Attribute value	WITHOUT_CLASSIFICATION	0.9999761961519735	WITHOUT_CLASSIFICATION	2.380384802644572E-5	IMPLEMENTATION
// Arrays, Ranges, etc. are compound values // Variables, fixnums, floats, etc. are "atomic" values	WITHOUT_CLASSIFICATION	0.9999959740651038	WITHOUT_CLASSIFICATION	4.025934896327083E-6	IMPLEMENTATION
// Get the target class of this operand, if we know it!	WITHOUT_CLASSIFICATION	0.9999170288318456	WITHOUT_CLASSIFICATION	8.297116815432108E-5	IMPLEMENTATION
// The following constants capture pre-known static call sites -- used to implement ruby internals	WITHOUT_CLASSIFICATION	0.994491240331377	WITHOUT_CLASSIFICATION	0.005508759668623014	IMPLEMENTATION
/* Nothing to do by default */	WITHOUT_CLASSIFICATION	0.999999372100854	WITHOUT_CLASSIFICATION	6.278991459477509E-7	IMPLEMENTATION
// Map of label & basic blocks which are waiting for a bb with that label	WITHOUT_CLASSIFICATION	0.9999993453861794	WITHOUT_CLASSIFICATION	6.54613820604964E-7	IMPLEMENTATION
// Init before building basic blocks below!	WITHOUT_CLASSIFICATION	0.9999211079204507	WITHOUT_CLASSIFICATION	7.889207954927364E-5	IMPLEMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999886791162894	WITHOUT_CLASSIFICATION	1.1320883710610267E-5	IMPLEMENTATION
// Scope (method/closure) to which this cfg belongs // Entry BB -- dummy // Exit BB -- dummy // The actual graph // Next available basic block id	WITHOUT_CLASSIFICATION	0.9997292594851392	WITHOUT_CLASSIFICATION	2.707405148606779E-4	IMPLEMENTATION
// Jump instruction bbs dont add an edge to the succeeding bb by default	WITHOUT_CLASSIFICATION	0.99999158342706	WITHOUT_CLASSIFICATION	8.416572940091287E-6	IMPLEMENTATION
// Add forward ref. edges	WITHOUT_CLASSIFICATION	0.9999351814901238	WITHOUT_CLASSIFICATION	6.48185098762555E-5	IMPLEMENTATION
// currBB cannot be null!	WITHOUT_CLASSIFICATION	0.9999872783033789	WITHOUT_CLASSIFICATION	1.27216966212471E-5	IMPLEMENTATION
// Add a forward reference from tgt -> currBB	WITHOUT_CLASSIFICATION	0.9999985324130792	WITHOUT_CLASSIFICATION	1.4675869208349455E-6	IMPLEMENTATION
// root-level logic	WITHOUT_CLASSIFICATION	0.9995428405130256	WITHOUT_CLASSIFICATION	4.5715948697444125E-4	IMPLEMENTATION
// root-level methods	WITHOUT_CLASSIFICATION	0.9999003674813395	WITHOUT_CLASSIFICATION	9.963251866045314E-5	IMPLEMENTATION
// root-level classes	WITHOUT_CLASSIFICATION	0.9999528989942225	WITHOUT_CLASSIFICATION	4.710100577760235E-5	IMPLEMENTATION
//        case 4: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); //            break; //        case 5: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); //            break;	WITHOUT_CLASSIFICATION	0.9998168965399967	WITHOUT_CLASSIFICATION	1.831034600032779E-4	IMPLEMENTATION
// load receiver	WITHOUT_CLASSIFICATION	0.9995154162926326	WITHOUT_CLASSIFICATION	4.845837073673581E-4	IMPLEMENTATION
// load receiver	WITHOUT_CLASSIFICATION	0.9995154162926326	WITHOUT_CLASSIFICATION	4.845837073673581E-4	IMPLEMENTATION
// receiver	WITHOUT_CLASSIFICATION	0.9994913611083683	WITHOUT_CLASSIFICATION	5.086388916316205E-4	IMPLEMENTATION
// load arguments	WITHOUT_CLASSIFICATION	0.9995379391118322	WITHOUT_CLASSIFICATION	4.620608881677972E-4	IMPLEMENTATION
// load arguments	WITHOUT_CLASSIFICATION	0.9995379391118322	WITHOUT_CLASSIFICATION	4.620608881677972E-4	IMPLEMENTATION
//        case 4: //        case 5:	WITHOUT_CLASSIFICATION	0.9997847471267677	WITHOUT_CLASSIFICATION	2.1525287323240124E-4	IMPLEMENTATION
// Object[] args	WITHOUT_CLASSIFICATION	0.9995321427004173	WITHOUT_CLASSIFICATION	4.6785729958269374E-4	IMPLEMENTATION
// load handle	WITHOUT_CLASSIFICATION	0.9970650853448972	WITHOUT_CLASSIFICATION	0.0029349146551028962	IMPLEMENTATION
// args array	WITHOUT_CLASSIFICATION	0.9995946709376099	WITHOUT_CLASSIFICATION	4.0532906239010297E-4	IMPLEMENTATION
// i'th argument	WITHOUT_CLASSIFICATION	0.9998815656166872	WITHOUT_CLASSIFICATION	1.1843438331292732E-4	IMPLEMENTATION
// invoke specific arity version	WITHOUT_CLASSIFICATION	0.9997691147705096	WITHOUT_CLASSIFICATION	2.308852294903338E-4	IMPLEMENTATION
// Object arg0	WITHOUT_CLASSIFICATION	0.9996627295614583	WITHOUT_CLASSIFICATION	3.372704385415969E-4	IMPLEMENTATION
// useful for code completion inside the IRB	WITHOUT_CLASSIFICATION	0.9998969791447255	WITHOUT_CLASSIFICATION	1.0302085527452431E-4	IMPLEMENTATION
// No editing before startPos	WITHOUT_CLASSIFICATION	0.9999800429389288	WITHOUT_CLASSIFICATION	1.9957061071072382E-5	IMPLEMENTATION
// no silly ticks!	WITHOUT_CLASSIFICATION	0.9995301993730978	WITHOUT_CLASSIFICATION	4.69800626902206E-4	IMPLEMENTATION
// no candidates? Fail.	WITHOUT_CLASSIFICATION	0.9999150932796927	WITHOUT_CLASSIFICATION	8.490672030721316E-5	IMPLEMENTATION
// at end	WITHOUT_CLASSIFICATION	0.9999874716936727	WITHOUT_CLASSIFICATION	1.2528306327242089E-5	IMPLEMENTATION
// undo check	WITHOUT_CLASSIFICATION	0.9996148551918399	WITHOUT_CLASSIFICATION	3.8514480816019585E-4	IMPLEMENTATION
// Explicit reference to these vars as symbols...	WITHOUT_CLASSIFICATION	0.9999764704713887	WITHOUT_CLASSIFICATION	2.3529528611323674E-5	IMPLEMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999886791162894	WITHOUT_CLASSIFICATION	1.1320883710610267E-5	IMPLEMENTATION
//\t\n\"\\'`@$><=;|&{(	WITHOUT_CLASSIFICATION	0.9996940498953022	WITHOUT_CLASSIFICATION	3.059501046977244E-4	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.9998366967400635	WITHOUT_CLASSIFICATION	1.6330325993640232E-4	IMPLEMENTATION
// no check for '*'	WITHOUT_CLASSIFICATION	0.9997062691298554	WITHOUT_CLASSIFICATION	2.937308701447014E-4	IMPLEMENTATION
// no check for '*'	WITHOUT_CLASSIFICATION	0.9997062691298554	WITHOUT_CLASSIFICATION	2.937308701447014E-4	IMPLEMENTATION
// Binding provided for scope, use it	WITHOUT_CLASSIFICATION	0.9995797225798518	WITHOUT_CLASSIFICATION	4.202774201481784E-4	IMPLEMENTATION
// this is ensured by the callers	WITHOUT_CLASSIFICATION	0.9998728235766143	WITHOUT_CLASSIFICATION	1.2717642338563377E-4	IMPLEMENTATION
// no binding, just eval in "current" frame (caller's frame)	WITHOUT_CLASSIFICATION	0.9999969423009685	WITHOUT_CLASSIFICATION	3.0576990316298913E-6	IMPLEMENTATION
// restore position	WITHOUT_CLASSIFICATION	0.9996794434043001	WITHOUT_CLASSIFICATION	3.20556595699786E-4	IMPLEMENTATION
/* Something like cvar_cbase() from eval.c, factored out for the benefit     * of all the classvar-related node evaluations */	WITHOUT_CLASSIFICATION	0.9999984507490786	WITHOUT_CLASSIFICATION	1.5492509214006414E-6	IMPLEMENTATION
// Used by the compiler to simplify arg processing	WITHOUT_CLASSIFICATION	0.9999924131872002	WITHOUT_CLASSIFICATION	7.5868127997182E-6	IMPLEMENTATION
// JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace	WITHOUT_CLASSIFICATION	0.9999881318057604	WITHOUT_CLASSIFICATION	1.1868194239631915E-5	IMPLEMENTATION
// MRI does similar thing on MacOS X with 'EditLine wrapper'.	WITHOUT_CLASSIFICATION	0.9987748130909224	WITHOUT_CLASSIFICATION	0.0012251869090775132	IMPLEMENTATION
// We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)	WITHOUT_CLASSIFICATION	0.9999581377958906	WITHOUT_CLASSIFICATION	4.1862204109479054E-5	IMPLEMENTATION
// JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)	WITHOUT_CLASSIFICATION	0.9999945217310501	WITHOUT_CLASSIFICATION	5.478268949858124E-6	IMPLEMENTATION
// not overridden, let's go	WITHOUT_CLASSIFICATION	0.999664191871379	WITHOUT_CLASSIFICATION	3.358081286210328E-4	IMPLEMENTATION
/* Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8() */	WITHOUT_CLASSIFICATION	0.9999356176182962	WITHOUT_CLASSIFICATION	6.438238170382668E-5	IMPLEMENTATION
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.8413979888434346	WITHOUT_CLASSIFICATION	0.1586020111565654	IMPLEMENTATION
// Complete using a Proc object	WITHOUT_CLASSIFICATION	0.9999644246593308	WITHOUT_CLASSIFICATION	3.557534066919607E-5	IMPLEMENTATION
// clear basename so it's anonymous when raising	WITHOUT_CLASSIFICATION	0.9999213499599534	WITHOUT_CLASSIFICATION	7.86500400466307E-5	IMPLEMENTATION
// These are not really used by timeout, but exposed for compatibility	WITHOUT_CLASSIFICATION	0.9999145552427215	WITHOUT_CLASSIFICATION	8.544475727838185E-5	IMPLEMENTATION
// Timeout module methods	WITHOUT_CLASSIFICATION	0.9998809477245949	WITHOUT_CLASSIFICATION	1.1905227540517074E-4	IMPLEMENTATION
// Toplevel defines	WITHOUT_CLASSIFICATION	0.9994934800564308	WITHOUT_CLASSIFICATION	5.065199435691221E-4	IMPLEMENTATION
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999925664342338	WITHOUT_CLASSIFICATION	7.433565766175647E-6	IMPLEMENTATION
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999862546586141	WITHOUT_CLASSIFICATION	1.3745341385754123E-5	IMPLEMENTATION
// if it's the exception we're expecting	WITHOUT_CLASSIFICATION	0.9999276221709855	WITHOUT_CLASSIFICATION	7.237782901453226E-5	IMPLEMENTATION
// and we were given a specific exception	WITHOUT_CLASSIFICATION	0.9995158814429971	WITHOUT_CLASSIFICATION	4.84118557002974E-4	IMPLEMENTATION
// otherwise, rethrow	WITHOUT_CLASSIFICATION	0.9999125601617395	WITHOUT_CLASSIFICATION	8.743983826061359E-5	IMPLEMENTATION
// // Remove the Executor task now, to avoid cancelled tasks accumulating // until an Executor thread can schedule and remove them //	WITHOUT_CLASSIFICATION	0.999661832509157	WITHOUT_CLASSIFICATION	3.3816749084305024E-4	IMPLEMENTATION
// // If the task was scheduled, wait for it to finish before polling // for the exception it would have thrown. //	WITHOUT_CLASSIFICATION	0.9969816620795539	WITHOUT_CLASSIFICATION	0.00301833792044615	IMPLEMENTATION
// NetProtocolBufferedIO	WITHOUT_CLASSIFICATION	0.999907900922588	WITHOUT_CLASSIFICATION	9.209907741204226E-5	IMPLEMENTATION
/* When a length is given, read_string acts like get_bytes */	WITHOUT_CLASSIFICATION	0.9998202996219157	WITHOUT_CLASSIFICATION	1.7970037808425277E-4	IMPLEMENTATION
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9991172950629837	WITHOUT_CLASSIFICATION	8.827049370162062E-4	IMPLEMENTATION
// ARRAY and STRUCT are only used internally	WITHOUT_CLASSIFICATION	0.9999787014900448	WITHOUT_CLASSIFICATION	2.1298509955298534E-5	IMPLEMENTATION
// If no release method is defined, then memory leaks will result.	WITHOUT_CLASSIFICATION	0.9999129225267083	WITHOUT_CLASSIFICATION	8.707747329183059E-5	IMPLEMENTATION
/*     * This variant of newStruct is called from StructLayoutBuilder     */	WITHOUT_CLASSIFICATION	0.9999999336514515	WITHOUT_CLASSIFICATION	6.634854844802723E-8	IMPLEMENTATION
// This also handles unsigned int -> negative signed int conversion	WITHOUT_CLASSIFICATION	0.9999962121428995	WITHOUT_CLASSIFICATION	3.787857100393671E-6	IMPLEMENTATION
// Windows is LLP64	WITHOUT_CLASSIFICATION	0.9997944406019138	WITHOUT_CLASSIFICATION	2.0555939808607988E-4	IMPLEMENTATION
// Older JDK on linux map 'c' to 'libc.so' which doesn't work	WITHOUT_CLASSIFICATION	0.9998766147542194	WITHOUT_CLASSIFICATION	1.2338524578051554E-4	IMPLEMENTATION
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999449851872645	WITHOUT_CLASSIFICATION	5.5014812735586064E-5	IMPLEMENTATION
// $blah	WITHOUT_CLASSIFICATION	0.9999889436623457	WITHOUT_CLASSIFICATION	1.1056337654331047E-5	IMPLEMENTATION
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9991172950629837	WITHOUT_CLASSIFICATION	8.827049370162062E-4	IMPLEMENTATION
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999855705662016	WITHOUT_CLASSIFICATION	1.4429433798393527E-5	IMPLEMENTATION
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999449851872645	WITHOUT_CLASSIFICATION	5.5014812735586064E-5	IMPLEMENTATION
// // Keep a reference to the temporary memory in the cache so it does // not get freed by the GC until the struct is freed //	WITHOUT_CLASSIFICATION	0.9998725255191164	WITHOUT_CLASSIFICATION	1.2747448088344733E-4	IMPLEMENTATION
// Add Pointer::NULL as a constant	WITHOUT_CLASSIFICATION	0.9999097333865758	WITHOUT_CLASSIFICATION	9.02666134241803E-5	IMPLEMENTATION
// Create the ordered list of field names from the map	WITHOUT_CLASSIFICATION	0.999997389226786	WITHOUT_CLASSIFICATION	2.610773213972194E-6	IMPLEMENTATION
// Assemble a [ :name, offset ] array	WITHOUT_CLASSIFICATION	0.9999315676029871	WITHOUT_CLASSIFICATION	6.84323970129489E-5	IMPLEMENTATION
//                case FLOAT:	WITHOUT_CLASSIFICATION	0.999873403816927	WITHOUT_CLASSIFICATION	1.265961830729217E-4	IMPLEMENTATION
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999141573715269	WITHOUT_CLASSIFICATION	8.584262847316551E-5	IMPLEMENTATION
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999141573715269	WITHOUT_CLASSIFICATION	8.584262847316551E-5	IMPLEMENTATION
// No auto cleanup needed	WITHOUT_CLASSIFICATION	0.8496270472886557	IMPLEMENTATION	0.15037295271134443	WITHOUT_CLASSIFICATION
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.99967855024041	WITHOUT_CLASSIFICATION	3.214497595901302E-4	IMPLEMENTATION
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999834868113251	WITHOUT_CLASSIFICATION	1.651318867487222E-5	IMPLEMENTATION
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999834868113251	WITHOUT_CLASSIFICATION	1.651318867487222E-5	IMPLEMENTATION
/*         * If there is exactly _one_ callback argument to the function,         * then a block can be given and automatically subsituted for the callback         * parameter.         */	WITHOUT_CLASSIFICATION	0.9999997914046326	WITHOUT_CLASSIFICATION	2.0859536751866988E-7	IMPLEMENTATION
/*------------------------------------------------------------------------*/	WITHOUT_CLASSIFICATION	0.9994792531202606	WITHOUT_CLASSIFICATION	5.20746879739313E-4	IMPLEMENTATION
//AF_INET	WITHOUT_CLASSIFICATION	0.9999632642966054	WITHOUT_CLASSIFICATION	3.673570339455358E-5	IMPLEMENTATION
//AF_INET	WITHOUT_CLASSIFICATION	0.9999632642966054	WITHOUT_CLASSIFICATION	3.673570339455358E-5	IMPLEMENTATION
// RubyUNIXServer	WITHOUT_CLASSIFICATION	0.9994903392551018	WITHOUT_CLASSIFICATION	5.096607448981903E-4	IMPLEMENTATION
// line 321	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// // Set up for potentially fast-int operations //	WITHOUT_CLASSIFICATION	0.9999644545683121	WITHOUT_CLASSIFICATION	3.5545431687904843E-5	IMPLEMENTATION
// // Hook up the MemoryPointer class if its not already there //	WITHOUT_CLASSIFICATION	0.9998360391656179	WITHOUT_CLASSIFICATION	1.6396083438200364E-4	IMPLEMENTATION
// This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and // (2) Socket.getChannel() seems to return null in some cases	WITHOUT_CLASSIFICATION	0.999999799664387	WITHOUT_CLASSIFICATION	2.0033561285841638E-7	IMPLEMENTATION
// no UNIXSockets on Windows	WITHOUT_CLASSIFICATION	0.9998023190780461	WITHOUT_CLASSIFICATION	1.9768092195406595E-4	IMPLEMENTATION
// Sockaddr_un has different structure on different platforms. // See JRUBY-2213 for more details.	WITHOUT_CLASSIFICATION	0.9987912730649791	WITHOUT_CLASSIFICATION	0.001208726935021018	IMPLEMENTATION
// There is something valid in the sun_path component	WITHOUT_CLASSIFICATION	0.999999327063237	WITHOUT_CLASSIFICATION	6.729367629044623E-7	IMPLEMENTATION
// RubyIPSocket	WITHOUT_CLASSIFICATION	0.9994903392551018	WITHOUT_CLASSIFICATION	5.096607448981903E-4	IMPLEMENTATION
// host is nil or the empty string, bind to INADDR_ANY	WITHOUT_CLASSIFICATION	0.9999857321581324	WITHOUT_CLASSIFICATION	1.4267841867698221E-5	IMPLEMENTATION
// host and port given	WITHOUT_CLASSIFICATION	0.9999217445742605	WITHOUT_CLASSIFICATION	7.825542573950822E-5	IMPLEMENTATION
// RubyUDPSocket	WITHOUT_CLASSIFICATION	0.9994903392551018	WITHOUT_CLASSIFICATION	5.096607448981903E-4	IMPLEMENTATION
// By default we always reverse lookup unless do_not_reverse_lookup set.	WITHOUT_CLASSIFICATION	0.9999205535485085	WITHOUT_CLASSIFICATION	7.944645149152566E-5	IMPLEMENTATION
// make sure descriptor is registered	WITHOUT_CLASSIFICATION	0.999822559598332	WITHOUT_CLASSIFICATION	1.7744040166795523E-4	IMPLEMENTATION
// continue with normal initialization	WITHOUT_CLASSIFICATION	0.9992678674142862	WITHOUT_CLASSIFICATION	7.321325857137376E-4	IMPLEMENTATION
// recv returns nil on EOF	WITHOUT_CLASSIFICATION	0.9998454154492538	WITHOUT_CLASSIFICATION	1.5458455074630743E-4	IMPLEMENTATION
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.994866764111875	WITHOUT_CLASSIFICATION	0.005133235888124907	IMPLEMENTATION
// RubyBasicSocket	WITHOUT_CLASSIFICATION	0.9994903392551018	WITHOUT_CLASSIFICATION	5.096607448981903E-4	IMPLEMENTATION
// we don't have to define any that we don't support; see socket.c	WITHOUT_CLASSIFICATION	0.9999808928555992	WITHOUT_CLASSIFICATION	1.910714440076525E-5	IMPLEMENTATION
// mandatory constants we haven't implemented	WITHOUT_CLASSIFICATION	0.8822060324393121	WITHOUT_CLASSIFICATION	0.11779396756068794	IMPLEMENTATION
// constants webrick crashes without	WITHOUT_CLASSIFICATION	0.9999378195025501	WITHOUT_CLASSIFICATION	6.21804974498679E-5	IMPLEMENTATION
// More constants needed by specs	WITHOUT_CLASSIFICATION	0.9558115773811662	WITHOUT_CLASSIFICATION	0.0441884226188339	IMPLEMENTATION
// normal file descriptor..try to work with it	WITHOUT_CLASSIFICATION	0.9983045401113799	WITHOUT_CLASSIFICATION	0.0016954598886201407	IMPLEMENTATION
// AF_INET	WITHOUT_CLASSIFICATION	0.9999889436623457	WITHOUT_CLASSIFICATION	1.1056337654331047E-5	IMPLEMENTATION
// 255.255.255.255	WITHOUT_CLASSIFICATION	0.9994903392551018	WITHOUT_CLASSIFICATION	5.096607448981903E-4	IMPLEMENTATION
// 0.0.0.0	WITHOUT_CLASSIFICATION	0.9999889436623457	WITHOUT_CLASSIFICATION	1.1056337654331047E-5	IMPLEMENTATION
//def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)	WITHOUT_CLASSIFICATION	0.9995968617908405	WITHOUT_CLASSIFICATION	4.0313820915944724E-4	IMPLEMENTATION
// line 323	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9998777421496526	WITHOUT_CLASSIFICATION	1.2225785034739912E-4	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9998777421496526	WITHOUT_CLASSIFICATION	1.2225785034739912E-4	IMPLEMENTATION
// ok, it's a socket...set values accordingly // just using AF_INET since we can't tell from SocketChannel...	WITHOUT_CLASSIFICATION	0.9999998491549628	WITHOUT_CLASSIFICATION	1.5084503720073236E-7	IMPLEMENTATION
// datagram, set accordingly // again, AF_INET	WITHOUT_CLASSIFICATION	0.9998568597108164	WITHOUT_CLASSIFICATION	1.431402891835895E-4	IMPLEMENTATION
//IRubyObject family = args[2];	WITHOUT_CLASSIFICATION	0.9995208152184256	WITHOUT_CLASSIFICATION	4.791847815743815E-4	IMPLEMENTATION
// When Socket::AI_PASSIVE and host is nil, return 'any' address. 	WITHOUT_CLASSIFICATION	0.9999580902054108	WITHOUT_CLASSIFICATION	4.190979458927959E-5	IMPLEMENTATION
// The value of 1 is for Socket::AI_PASSIVE.	WITHOUT_CLASSIFICATION	0.9999983378212046	WITHOUT_CLASSIFICATION	1.6621787954940203E-6	IMPLEMENTATION
// RubySocket	WITHOUT_CLASSIFICATION	0.9994903392551018	WITHOUT_CLASSIFICATION	5.096607448981903E-4	IMPLEMENTATION
// numeric host, use it for port	WITHOUT_CLASSIFICATION	0.999721581028339	WITHOUT_CLASSIFICATION	2.7841897166106373E-4	IMPLEMENTATION
//            e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9998700704790413	WITHOUT_CLASSIFICATION	1.299295209587274E-4	IMPLEMENTATION
// we were woken up without being selected...poll for thread events and go back to sleep	WITHOUT_CLASSIFICATION	0.9999833205705473	WITHOUT_CLASSIFICATION	1.66794294527816E-5	IMPLEMENTATION
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9992734929152437	WITHOUT_CLASSIFICATION	7.265070847562613E-4	IMPLEMENTATION
// no connection immediately accepted, let them try again	WITHOUT_CLASSIFICATION	0.9993361240811088	WITHOUT_CLASSIFICATION	6.638759188911461E-4	IMPLEMENTATION
// do nothing, just exit	WITHOUT_CLASSIFICATION	0.9999936704482294	WITHOUT_CLASSIFICATION	6.329551770620756E-6	IMPLEMENTATION
//nativeThread.setPriority(priority);	WITHOUT_CLASSIFICATION	0.9994792531202606	WITHOUT_CLASSIFICATION	5.20746879739313E-4	IMPLEMENTATION
// set thread context JRuby classloader here, for Ruby-owned thread	WITHOUT_CLASSIFICATION	0.9998910205624165	WITHOUT_CLASSIFICATION	1.0897943758347541E-4	IMPLEMENTATION
// uber-ThreadKill catcher, since it should always just mean "be dead"	WITHOUT_CLASSIFICATION	0.999959956890958	WITHOUT_CLASSIFICATION	4.004310904205097E-5	IMPLEMENTATION
// Call the thread's code	WITHOUT_CLASSIFICATION	0.9999054937943552	WITHOUT_CLASSIFICATION	9.450620564474745E-5	IMPLEMENTATION
// Someone called exit!, so we need to kill the main thread	WITHOUT_CLASSIFICATION	0.9994687748337209	WITHOUT_CLASSIFICATION	5.312251662792273E-4	IMPLEMENTATION
// restore context classloader, in case we're using a thread pool	WITHOUT_CLASSIFICATION	0.9999631454972856	WITHOUT_CLASSIFICATION	3.685450271442749E-5	IMPLEMENTATION
// be dead	WITHOUT_CLASSIFICATION	0.9999953924865663	WITHOUT_CLASSIFICATION	4.607513433625649E-6	IMPLEMENTATION
// loop until a context is available, to clean up softrefs that might have been collected	WITHOUT_CLASSIFICATION	0.9998925689786984	WITHOUT_CLASSIFICATION	1.0743102130157838E-4	IMPLEMENTATION
// all threads in ruby thread group plus main thread	WITHOUT_CLASSIFICATION	0.9998616885878783	WITHOUT_CLASSIFICATION	1.3831141212174096E-4	IMPLEMENTATION
// thread is not alive, skip it	WITHOUT_CLASSIFICATION	0.9965121505759406	WITHOUT_CLASSIFICATION	0.003487849424059366	IMPLEMENTATION
// future is done or cancelled, skip it	WITHOUT_CLASSIFICATION	0.9999221018526364	WITHOUT_CLASSIFICATION	7.789814736356402E-5	IMPLEMENTATION
// first, check if the sender has unreceived mail	WITHOUT_CLASSIFICATION	0.999963382089309	WITHOUT_CLASSIFICATION	3.66179106909209E-5	IMPLEMENTATION
// then deliver mail to the target	WITHOUT_CLASSIFICATION	0.9999209039347318	WITHOUT_CLASSIFICATION	7.909606526828301E-5	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9998856044120242	WITHOUT_CLASSIFICATION	1.1439558797578251E-4	IMPLEMENTATION
// Define a second version that doesn't take a block, so we have unique code paths for both cases.	WITHOUT_CLASSIFICATION	0.9999441258107821	WITHOUT_CLASSIFICATION	5.587418921793176E-5	IMPLEMENTATION
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9997379758649221	WITHOUT_CLASSIFICATION	2.620241350779256E-4	IMPLEMENTATION
// main body	WITHOUT_CLASSIFICATION	0.9995270328058063	WITHOUT_CLASSIFICATION	4.72967194193774E-4	IMPLEMENTATION
// return jump handling	WITHOUT_CLASSIFICATION	0.9998683020370717	WITHOUT_CLASSIFICATION	1.3169796292828744E-4	IMPLEMENTATION
// finally	WITHOUT_CLASSIFICATION	0.9999903946101255	WITHOUT_CLASSIFICATION	9.605389874406524E-6	IMPLEMENTATION
// return result if we're still good	WITHOUT_CLASSIFICATION	0.9998788346789768	WITHOUT_CLASSIFICATION	1.2116532102326115E-4	IMPLEMENTATION
// redo jump handling	WITHOUT_CLASSIFICATION	0.9997802300938327	WITHOUT_CLASSIFICATION	2.1976990616735676E-4	IMPLEMENTATION
// clear the redo	WITHOUT_CLASSIFICATION	0.9995292609783643	WITHOUT_CLASSIFICATION	4.707390216357922E-4	IMPLEMENTATION
// get runtime, create jump error, and throw it	WITHOUT_CLASSIFICATION	0.9997970644923901	WITHOUT_CLASSIFICATION	2.0293550760988065E-4	IMPLEMENTATION
// throw redo error if we're still good	WITHOUT_CLASSIFICATION	0.9984380939394303	WITHOUT_CLASSIFICATION	0.0015619060605696342	IMPLEMENTATION
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999042895390625	WITHOUT_CLASSIFICATION	9.571046093749992E-5	IMPLEMENTATION
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9984532133266143	WITHOUT_CLASSIFICATION	0.0015467866733856342	IMPLEMENTATION
// No required specified, check actual number of required args	WITHOUT_CLASSIFICATION	0.9996944481402409	WITHOUT_CLASSIFICATION	3.055518597591584E-4	IMPLEMENTATION
// actual required is less than 3, so we use specific arity	WITHOUT_CLASSIFICATION	0.9988720421041191	WITHOUT_CLASSIFICATION	0.0011279578958809861	IMPLEMENTATION
// actual required is greater than 3, raise error (we don't support actual required > 3)	WITHOUT_CLASSIFICATION	0.982193330056128	WITHOUT_CLASSIFICATION	0.017806669943872065	IMPLEMENTATION
// simple path, no multimethod	WITHOUT_CLASSIFICATION	0.9999243583423324	WITHOUT_CLASSIFICATION	7.564165766766301E-5	IMPLEMENTATION
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9986415041628303	WITHOUT_CLASSIFICATION	0.0013584958371698163	IMPLEMENTATION
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9986415041628303	WITHOUT_CLASSIFICATION	0.0013584958371698163	IMPLEMENTATION
// normal all-rest method	WITHOUT_CLASSIFICATION	0.999413715789191	WITHOUT_CLASSIFICATION	5.862842108090235E-4	IMPLEMENTATION
// for zero, one, two, three arities, JavaMethod.JavaMethod*.call(...IRubyObject[] args...) will check	WITHOUT_CLASSIFICATION	0.9999585462337345	WITHOUT_CLASSIFICATION	4.145376626559905E-5	IMPLEMENTATION
// promise to implement zero to N	WITHOUT_CLASSIFICATION	0.9928140072788992	WITHOUT_CLASSIFICATION	0.007185992721100676	IMPLEMENTATION
// return	WITHOUT_CLASSIFICATION	0.999993465822169	WITHOUT_CLASSIFICATION	6.534177831010964E-6	IMPLEMENTATION
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999927863233248	WITHOUT_CLASSIFICATION	7.213676675283404E-6	IMPLEMENTATION
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.999883044694801	WITHOUT_CLASSIFICATION	1.1695530519902074E-4	IMPLEMENTATION
// confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999487349234153	WITHOUT_CLASSIFICATION	5.1265076584668E-5	IMPLEMENTATION
// confirm maximum not greater than optional	WITHOUT_CLASSIFICATION	0.9951737836510348	WITHOUT_CLASSIFICATION	0.004826216348965148	IMPLEMENTATION
// Raise an error if arity does not match requirements	WITHOUT_CLASSIFICATION	0.9994556395801242	WITHOUT_CLASSIFICATION	5.443604198758621E-4	IMPLEMENTATION
// tc	WITHOUT_CLASSIFICATION	0.9999889436623457	WITHOUT_CLASSIFICATION	1.1056337654331047E-5	IMPLEMENTATION
// self // name	WITHOUT_CLASSIFICATION	0.9991630999880217	WITHOUT_CLASSIFICATION	8.369000119783478E-4	IMPLEMENTATION
// no args	WITHOUT_CLASSIFICATION	0.9999902902773146	WITHOUT_CLASSIFICATION	9.70972268547738E-6	IMPLEMENTATION
// variable args with block	WITHOUT_CLASSIFICATION	0.9998402272623392	WITHOUT_CLASSIFICATION	1.597727376607606E-4	IMPLEMENTATION
// variable args no block, load null block	WITHOUT_CLASSIFICATION	0.9998423835899545	WITHOUT_CLASSIFICATION	1.5761641004566487E-4	IMPLEMENTATION
// zero args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9998863748099248	WITHOUT_CLASSIFICATION	1.136251900751892E-4	IMPLEMENTATION
// one arg with block	WITHOUT_CLASSIFICATION	0.9998360419421434	WITHOUT_CLASSIFICATION	1.6395805785662454E-4	IMPLEMENTATION
// one arg, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.999869452713921	WITHOUT_CLASSIFICATION	1.3054728607904338E-4	IMPLEMENTATION
// two args with block	WITHOUT_CLASSIFICATION	0.9996468402408646	WITHOUT_CLASSIFICATION	3.531597591353985E-4	IMPLEMENTATION
// two args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9997100694105204	WITHOUT_CLASSIFICATION	2.8993058947958E-4	IMPLEMENTATION
// three args with block	WITHOUT_CLASSIFICATION	0.9998432996590612	WITHOUT_CLASSIFICATION	1.567003409387833E-4	IMPLEMENTATION
// three args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9998713595688261	WITHOUT_CLASSIFICATION	1.2864043117389993E-4	IMPLEMENTATION
// load block if it accepts block	WITHOUT_CLASSIFICATION	0.9998752409963161	WITHOUT_CLASSIFICATION	1.2475900368391927E-4	IMPLEMENTATION
// all other arg cases with block	WITHOUT_CLASSIFICATION	0.9995540426765701	WITHOUT_CLASSIFICATION	4.45957323429865E-4	IMPLEMENTATION
// all other arg cases without block	WITHOUT_CLASSIFICATION	0.9996548021822984	WITHOUT_CLASSIFICATION	3.451978177016024E-4	IMPLEMENTATION
// one arg, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999849134873575	WITHOUT_CLASSIFICATION	1.5086512642451609E-5	IMPLEMENTATION
// two args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999664898567668	WITHOUT_CLASSIFICATION	3.351014323306087E-5	IMPLEMENTATION
// three args, no block; do nothing	WITHOUT_CLASSIFICATION	0.999985133875425	WITHOUT_CLASSIFICATION	1.4866124574997815E-5	IMPLEMENTATION
// load target for invocations	WITHOUT_CLASSIFICATION	0.9999752564082972	WITHOUT_CLASSIFICATION	2.4743591702699614E-5	IMPLEMENTATION
// load receiver as original type for virtual invocation	WITHOUT_CLASSIFICATION	0.999920572581319	WITHOUT_CLASSIFICATION	7.942741868100822E-5	IMPLEMENTATION
// static invocation	WITHOUT_CLASSIFICATION	0.9995210629877593	WITHOUT_CLASSIFICATION	4.789370122405815E-4	IMPLEMENTATION
// virtual invocation	WITHOUT_CLASSIFICATION	0.9997500297250077	WITHOUT_CLASSIFICATION	2.499702749922858E-4	IMPLEMENTATION
// void return type, so we need to load a nil for returning below	WITHOUT_CLASSIFICATION	0.9999772794788385	WITHOUT_CLASSIFICATION	2.272052116145782E-5	IMPLEMENTATION
// normal finally and exit	WITHOUT_CLASSIFICATION	0.9999324786511523	WITHOUT_CLASSIFICATION	6.752134884772659E-5	IMPLEMENTATION
// promise to implement one to N	WITHOUT_CLASSIFICATION	0.9917611134827748	WITHOUT_CLASSIFICATION	0.008238886517225144	IMPLEMENTATION
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9984532133266143	WITHOUT_CLASSIFICATION	0.0015467866733856342	IMPLEMENTATION
// these are only needed if we have a non-noop call config	WITHOUT_CLASSIFICATION	0.9092706912860681	WITHOUT_CLASSIFICATION	0.09072930871393188	IMPLEMENTATION
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9994175821668172	WITHOUT_CLASSIFICATION	5.824178331828383E-4	IMPLEMENTATION
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9994175821668172	WITHOUT_CLASSIFICATION	5.824178331828383E-4	IMPLEMENTATION
// singleton classes don't get their own visibility domain	WITHOUT_CLASSIFICATION	0.9999902141191093	WITHOUT_CLASSIFICATION	9.785880890743084E-6	IMPLEMENTATION
// For visibility we need real meta class and not anonymous one from class << self	WITHOUT_CLASSIFICATION	0.9963092013511713	WITHOUT_CLASSIFICATION	0.0036907986488288057	IMPLEMENTATION
// SimpleInvocationMethod	WITHOUT_CLASSIFICATION	0.999907900922588	WITHOUT_CLASSIFICATION	9.209907741204226E-5	IMPLEMENTATION
// never reached	WITHOUT_CLASSIFICATION	0.9940911386602247	WITHOUT_CLASSIFICATION	0.005908861339775374	IMPLEMENTATION
// promise to implement N with block	WITHOUT_CLASSIFICATION	0.9835387542354959	WITHOUT_CLASSIFICATION	0.016461245764504112	IMPLEMENTATION
// promise to implement zero to N with block	WITHOUT_CLASSIFICATION	0.9863638050593743	WITHOUT_CLASSIFICATION	0.013636194940625753	IMPLEMENTATION
// promise to implement one to N with block	WITHOUT_CLASSIFICATION	0.9843806941355083	WITHOUT_CLASSIFICATION	0.015619305864491648	IMPLEMENTATION
// promise to implement two to N with block	WITHOUT_CLASSIFICATION	0.9659204816130568	WITHOUT_CLASSIFICATION	0.034079518386943265	IMPLEMENTATION
// promise to implement zero to three with block	WITHOUT_CLASSIFICATION	0.9872364497182247	WITHOUT_CLASSIFICATION	0.012763550281775263	IMPLEMENTATION
// promise to implement one to three with block	WITHOUT_CLASSIFICATION	0.9853783661839176	WITHOUT_CLASSIFICATION	0.014621633816082422	IMPLEMENTATION
// promise to implement two to three with block	WITHOUT_CLASSIFICATION	0.968059026348496	WITHOUT_CLASSIFICATION	0.03194097365150394	IMPLEMENTATION
// promise to implement three with block	WITHOUT_CLASSIFICATION	0.9845893626878667	WITHOUT_CLASSIFICATION	0.015410637312133433	IMPLEMENTATION
// promise to implement N	WITHOUT_CLASSIFICATION	0.9948792332188505	WITHOUT_CLASSIFICATION	0.005120766781149493	IMPLEMENTATION
// DumpingInvocationMethodFactory	WITHOUT_CLASSIFICATION	0.9998432178634115	WITHOUT_CLASSIFICATION	1.567821365885727E-4	IMPLEMENTATION
// We promote our box to being its own box since we're changing // visibilities, and need it to be reflected on this method object // independent of any other sharing the box.	WITHOUT_CLASSIFICATION	0.9999771575937513	WITHOUT_CLASSIFICATION	2.2842406248749117E-5	IMPLEMENTATION
// Normally we could leave these to fall back on the superclass, but // since it dispatches through the [] version below, which may // dispatch through the []+block version, we can save it a couple hops // by overriding these here.	WITHOUT_CLASSIFICATION	0.9996183709498803	WITHOUT_CLASSIFICATION	3.8162905011973483E-4	IMPLEMENTATION
// promise to implement two to N	WITHOUT_CLASSIFICATION	0.9818629869420447	WITHOUT_CLASSIFICATION	0.018137013057955426	IMPLEMENTATION
// promise to implement three to N	WITHOUT_CLASSIFICATION	0.9918719963082625	WITHOUT_CLASSIFICATION	0.008128003691737542	IMPLEMENTATION
// promise to implement zero to three	WITHOUT_CLASSIFICATION	0.9932766865761136	WITHOUT_CLASSIFICATION	0.006723313423886446	IMPLEMENTATION
// promise to implement one to three	WITHOUT_CLASSIFICATION	0.9922910583020926	WITHOUT_CLASSIFICATION	0.007708941697907477	IMPLEMENTATION
// promise to implement two to three	WITHOUT_CLASSIFICATION	0.9830187015374638	WITHOUT_CLASSIFICATION	0.016981298462536206	IMPLEMENTATION
// promise to implement three	WITHOUT_CLASSIFICATION	0.9952095819155641	WITHOUT_CLASSIFICATION	0.004790418084435909	IMPLEMENTATION
// all other arities use "n" dispatch path	WITHOUT_CLASSIFICATION	0.9996144242686126	WITHOUT_CLASSIFICATION	3.855757313873795E-4	IMPLEMENTATION
// load up object and add a few useful methods	WITHOUT_CLASSIFICATION	0.9999877008977589	WITHOUT_CLASSIFICATION	1.2299102241210573E-5	IMPLEMENTATION
// open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel	WITHOUT_CLASSIFICATION	0.9999266914246588	WITHOUT_CLASSIFICATION	7.33085753411414E-5	IMPLEMENTATION
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.999934214574981	WITHOUT_CLASSIFICATION	6.578542501893614E-5	IMPLEMENTATION
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.8636320997186856	WITHOUT_CLASSIFICATION	0.13636790028131437	IMPLEMENTATION
// create constructor	WITHOUT_CLASSIFICATION	0.9999001467546909	WITHOUT_CLASSIFICATION	9.985324530910763E-5	IMPLEMENTATION
// wrap self and store the wrapper	WITHOUT_CLASSIFICATION	0.9999106002522172	WITHOUT_CLASSIFICATION	8.939974778277063E-5	IMPLEMENTATION
// end constructor	WITHOUT_CLASSIFICATION	0.999323076535424	WITHOUT_CLASSIFICATION	6.769234645760322E-4	IMPLEMENTATION
// start setup method	WITHOUT_CLASSIFICATION	0.9998909367708947	WITHOUT_CLASSIFICATION	1.0906322910521301E-4	IMPLEMENTATION
// set RubyClass	WITHOUT_CLASSIFICATION	0.9993075898868432	WITHOUT_CLASSIFICATION	6.924101131568785E-4	IMPLEMENTATION
// set Ruby	WITHOUT_CLASSIFICATION	0.9993075898868432	WITHOUT_CLASSIFICATION	6.924101131568785E-4	IMPLEMENTATION
// all methods dispatch to the simple version by default, which is method_missing normally	WITHOUT_CLASSIFICATION	0.9999723369150656	WITHOUT_CLASSIFICATION	2.7663084934331167E-5	IMPLEMENTATION
// try specific name first, falling back on simple name	WITHOUT_CLASSIFICATION	0.9984315661550196	WITHOUT_CLASSIFICATION	0.0015684338449803439	IMPLEMENTATION
// get current context	WITHOUT_CLASSIFICATION	0.9998070091180932	WITHOUT_CLASSIFICATION	1.9299088190679822E-4	IMPLEMENTATION
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999489136880284	WITHOUT_CLASSIFICATION	5.1086311971554294E-5	IMPLEMENTATION
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.999934214574981	WITHOUT_CLASSIFICATION	6.578542501893614E-5	IMPLEMENTATION
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.8636320997186856	WITHOUT_CLASSIFICATION	0.13636790028131437	IMPLEMENTATION
// create constructor	WITHOUT_CLASSIFICATION	0.9999001467546909	WITHOUT_CLASSIFICATION	9.985324530910763E-5	IMPLEMENTATION
// end constructor	WITHOUT_CLASSIFICATION	0.999323076535424	WITHOUT_CLASSIFICATION	6.769234645760322E-4	IMPLEMENTATION
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9962043915104103	WITHOUT_CLASSIFICATION	0.0037956084895898203	IMPLEMENTATION
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999746079256597	WITHOUT_CLASSIFICATION	2.539207434027218E-5	IMPLEMENTATION
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999285647161489	WITHOUT_CLASSIFICATION	7.143528385106048E-5	IMPLEMENTATION
// load null block	WITHOUT_CLASSIFICATION	0.999388186924242	WITHOUT_CLASSIFICATION	6.118130757579122E-4	IMPLEMENTATION
// invoke method	WITHOUT_CLASSIFICATION	0.9984544747926739	WITHOUT_CLASSIFICATION	0.0015455252073261721	IMPLEMENTATION
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9998741213624942	WITHOUT_CLASSIFICATION	1.2587863750585925E-4	IMPLEMENTATION
// end setup method	WITHOUT_CLASSIFICATION	0.9978602069937671	WITHOUT_CLASSIFICATION	0.002139793006232897	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.9996130508941409	WITHOUT_CLASSIFICATION	3.869491058590927E-4	IMPLEMENTATION
// create static init, for a monitor object	WITHOUT_CLASSIFICATION	0.9999752014561045	WITHOUT_CLASSIFICATION	2.47985438954413E-5	IMPLEMENTATION
// store the wrapper	WITHOUT_CLASSIFICATION	0.9995170747320349	WITHOUT_CLASSIFICATION	4.829252679651732E-4	IMPLEMENTATION
// prepare temp locals	WITHOUT_CLASSIFICATION	0.999938236914609	WITHOUT_CLASSIFICATION	6.17630853909476E-5	IMPLEMENTATION
// Try to look up field for simple name // get field; if nonnull, go straight to dispatch	WITHOUT_CLASSIFICATION	0.9999938036256292	WITHOUT_CLASSIFICATION	6.196374370858841E-6	IMPLEMENTATION
// field is null, lock class and try to populate	WITHOUT_CLASSIFICATION	0.9999983865809161	WITHOUT_CLASSIFICATION	1.6134190838763032E-6	IMPLEMENTATION
// try/finally block to ensure unlock	WITHOUT_CLASSIFICATION	0.9996738295249058	WITHOUT_CLASSIFICATION	3.261704750942801E-4	IMPLEMENTATION
// store it	WITHOUT_CLASSIFICATION	0.9990372796196987	WITHOUT_CLASSIFICATION	9.627203803013112E-4	IMPLEMENTATION
// end of try block	WITHOUT_CLASSIFICATION	0.9997106126281385	WITHOUT_CLASSIFICATION	2.893873718614187E-4	IMPLEMENTATION
// finally block to release monitor	WITHOUT_CLASSIFICATION	0.9998652500307477	WITHOUT_CLASSIFICATION	1.3474996925224103E-4	IMPLEMENTATION
// exception handling for monitor release	WITHOUT_CLASSIFICATION	0.9997950535012786	WITHOUT_CLASSIFICATION	2.0494649872132963E-4	IMPLEMENTATION
// re-get, re-check method; if not null now, go to dispatch	WITHOUT_CLASSIFICATION	0.9996125417494481	WITHOUT_CLASSIFICATION	3.874582505518419E-4	IMPLEMENTATION
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999489136880284	WITHOUT_CLASSIFICATION	5.1086311971554294E-5	IMPLEMENTATION
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999746079256597	WITHOUT_CLASSIFICATION	2.539207434027218E-5	IMPLEMENTATION
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999285647161489	WITHOUT_CLASSIFICATION	7.143528385106048E-5	IMPLEMENTATION
// invoke method	WITHOUT_CLASSIFICATION	0.9984544747926739	WITHOUT_CLASSIFICATION	0.0015455252073261721	IMPLEMENTATION
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9998741213624942	WITHOUT_CLASSIFICATION	1.2587863750585925E-4	IMPLEMENTATION
// end setup method	WITHOUT_CLASSIFICATION	0.9978602069937671	WITHOUT_CLASSIFICATION	0.002139793006232897	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.9996130508941409	WITHOUT_CLASSIFICATION	3.869491058590927E-4	IMPLEMENTATION
// create the class	WITHOUT_CLASSIFICATION	0.9996291956025675	WITHOUT_CLASSIFICATION	3.7080439743259445E-4	IMPLEMENTATION
// method still not available, call method_missing	WITHOUT_CLASSIFICATION	0.8713911133683284	WITHOUT_CLASSIFICATION	0.12860888663167164	IMPLEMENTATION
// perform the dispatch	WITHOUT_CLASSIFICATION	0.9999217438631236	WITHOUT_CLASSIFICATION	7.825613687650405E-5	IMPLEMENTATION
// try to load the specified name; only if that fails, try to define the class	WITHOUT_CLASSIFICATION	0.9999919308124284	WITHOUT_CLASSIFICATION	8.069187571593035E-6	IMPLEMENTATION
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999441374643199	WITHOUT_CLASSIFICATION	5.586253568011965E-5	IMPLEMENTATION
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999441374643199	WITHOUT_CLASSIFICATION	5.586253568011965E-5	IMPLEMENTATION
// setup the class	WITHOUT_CLASSIFICATION	0.9997513575740403	WITHOUT_CLASSIFICATION	2.486424259596453E-4	IMPLEMENTATION
// now, create a method_added that can replace the DynamicMethod fields as they're redefined	WITHOUT_CLASSIFICATION	0.9978680003749492	WITHOUT_CLASSIFICATION	0.0021319996250508174	IMPLEMENTATION
// do nothing, it's a non-impl method	WITHOUT_CLASSIFICATION	0.9994176956954829	WITHOUT_CLASSIFICATION	5.823043045171155E-4	IMPLEMENTATION
// probably a primitive	WITHOUT_CLASSIFICATION	0.9999254122474984	WITHOUT_CLASSIFICATION	7.45877525015637E-5	IMPLEMENTATION
// interfaces are handled as modules	WITHOUT_CLASSIFICATION	0.9999954745126395	WITHOUT_CLASSIFICATION	4.525487360433077E-6	IMPLEMENTATION
// construct the mirror class and parent classes	WITHOUT_CLASSIFICATION	0.9999733943785947	WITHOUT_CLASSIFICATION	2.6605621405335222E-5	IMPLEMENTATION
// set the full name	WITHOUT_CLASSIFICATION	0.9985334744280705	WITHOUT_CLASSIFICATION	0.0014665255719294955	IMPLEMENTATION
// include all interfaces	WITHOUT_CLASSIFICATION	0.9997630306901321	WITHOUT_CLASSIFICATION	2.3696930986794244E-4	IMPLEMENTATION
// if it's an array, only add methods for aref, aset, and length	WITHOUT_CLASSIFICATION	0.9999889345813553	WITHOUT_CLASSIFICATION	1.1065418644635719E-5	IMPLEMENTATION
// add array construction methods	WITHOUT_CLASSIFICATION	0.9998504205481334	WITHOUT_CLASSIFICATION	1.495794518664993E-4	IMPLEMENTATION
// add all public constructors (note: getConstructors only returns public ones)	WITHOUT_CLASSIFICATION	0.9999611573029336	WITHOUT_CLASSIFICATION	3.884269706633843E-5	IMPLEMENTATION
// add all instance and static methods	WITHOUT_CLASSIFICATION	0.9999335552432046	WITHOUT_CLASSIFICATION	6.644475679537989E-5	IMPLEMENTATION
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.999968893808323	WITHOUT_CLASSIFICATION	3.110619167699433E-5	IMPLEMENTATION
// too much array creation!	WITHOUT_CLASSIFICATION	0.9999542753437574	WITHOUT_CLASSIFICATION	4.572465624258278E-5	IMPLEMENTATION
// only include static methods if specified	WITHOUT_CLASSIFICATION	0.9999092172422277	WITHOUT_CLASSIFICATION	9.078275777220402E-5	IMPLEMENTATION
// add a few type-specific special methods	WITHOUT_CLASSIFICATION	0.9998790139982024	WITHOUT_CLASSIFICATION	1.209860017976215E-4	IMPLEMENTATION
// add all static variables	WITHOUT_CLASSIFICATION	0.9999200411020205	WITHOUT_CLASSIFICATION	7.995889797955929E-5	IMPLEMENTATION
// only public static fields that are valid constants	WITHOUT_CLASSIFICATION	0.999998495799189	WITHOUT_CLASSIFICATION	1.504200811121735E-6	IMPLEMENTATION
// looks like someone's trying to raise a Java exception. Let them.	WITHOUT_CLASSIFICATION	0.99982605042114	WITHOUT_CLASSIFICATION	1.7394957885986256E-4	IMPLEMENTATION
// NOTE: The five match methods are arity-split to avoid the cost of boxing arguments // when there's already a cached match. Do not condense them into a single // method.	WITHOUT_CLASSIFICATION	0.9995649879779748	WITHOUT_CLASSIFICATION	4.3501202202518493E-4	IMPLEMENTATION
// TODO: This is where we would want to do precision checks to see // if it's non-destructive to coerce a given type into the target // integral primitive	WITHOUT_CLASSIFICATION	0.6025481826444987	IMPLEMENTATION	0.3974518173555012	WITHOUT_CLASSIFICATION
// long first because it's what Fixnum claims to be	WITHOUT_CLASSIFICATION	0.9990499370604596	WITHOUT_CLASSIFICATION	9.500629395403914E-4	IMPLEMENTATION
// double first because it's what float claims to be	WITHOUT_CLASSIFICATION	0.9998959763243387	WITHOUT_CLASSIFICATION	1.0402367566128167E-4	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.875046956537683	IMPLEMENTATION	0.12495304346231689	WITHOUT_CLASSIFICATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9994903392551018	WITHOUT_CLASSIFICATION	5.096607448981903E-4	IMPLEMENTATION
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9976984079128642	WITHOUT_CLASSIFICATION	0.0023015920871358496	IMPLEMENTATION
// we set all Java methods to optional, since many/most have overloads	WITHOUT_CLASSIFICATION	0.9998850810216543	WITHOUT_CLASSIFICATION	1.1491897834573873E-4	IMPLEMENTATION
// If we hold a Java object, we need a java_class accessor	WITHOUT_CLASSIFICATION	0.9997382367057226	WITHOUT_CLASSIFICATION	2.6176329427740754E-4	IMPLEMENTATION
// line 326	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9994903392551018	WITHOUT_CLASSIFICATION	5.096607448981903E-4	IMPLEMENTATION
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9976984079128642	WITHOUT_CLASSIFICATION	0.0023015920871358496	IMPLEMENTATION
// too much array creation!	WITHOUT_CLASSIFICATION	0.9999542753437574	WITHOUT_CLASSIFICATION	4.572465624258278E-5	IMPLEMENTATION
// construct new array proxy (ArrayJavaProxy)	WITHOUT_CLASSIFICATION	0.9999536645389872	WITHOUT_CLASSIFICATION	4.6335461012861406E-5	IMPLEMENTATION
// Get map of all fields we want to define.  	WITHOUT_CLASSIFICATION	0.9998982260883125	WITHOUT_CLASSIFICATION	1.0177391168755183E-4	IMPLEMENTATION
// Look through all mappings to find a match entry for this field	WITHOUT_CLASSIFICATION	0.9996502569699798	WITHOUT_CLASSIFICATION	3.497430300202161E-4	IMPLEMENTATION
// Hit a non-java proxy class (included Modules can be a cause of this...skip)	WITHOUT_CLASSIFICATION	0.9999885314563121	WITHOUT_CLASSIFICATION	1.1468543687875771E-5	IMPLEMENTATION
// We could not find all of them print out first one (we could print them all?)	WITHOUT_CLASSIFICATION	0.9990491229473268	WITHOUT_CLASSIFICATION	9.508770526732123E-4	IMPLEMENTATION
// dummy bodies for default impls	WITHOUT_CLASSIFICATION	0.9999881400698541	WITHOUT_CLASSIFICATION	1.1859930145795333E-5	IMPLEMENTATION
// initialize this if it hasn't been	WITHOUT_CLASSIFICATION	0.9998480259793433	WITHOUT_CLASSIFICATION	1.5197402065664028E-4	IMPLEMENTATION
// initialize these if they haven't been	WITHOUT_CLASSIFICATION	0.9999155592255129	WITHOUT_CLASSIFICATION	8.444077448702072E-5	IMPLEMENTATION
// not allowed for original (non-generated) Java classes // note: not allowing for any previously created class right now; // this restriction might be loosened later for generated classes	WITHOUT_CLASSIFICATION	0.99983111870592	WITHOUT_CLASSIFICATION	1.6888129407991137E-4	IMPLEMENTATION
// setup new, etc unless this is a ConcreteJavaProxy subclass	WITHOUT_CLASSIFICATION	0.9999574387757036	WITHOUT_CLASSIFICATION	4.256122429635947E-5	IMPLEMENTATION
// First we make modifications to the class, to adapt it to being // both a Ruby class and a proxy for a Java type	WITHOUT_CLASSIFICATION	0.9999331679632834	WITHOUT_CLASSIFICATION	6.683203671662404E-5	IMPLEMENTATION
// list of interfaces we implement	WITHOUT_CLASSIFICATION	0.9955143945856596	WITHOUT_CLASSIFICATION	0.00448560541434046	IMPLEMENTATION
// We capture the original "new" and make it private	WITHOUT_CLASSIFICATION	0.9979851041697143	WITHOUT_CLASSIFICATION	0.0020148958302857196	IMPLEMENTATION
// The replacement "new" allocates and inits the Ruby object as before, but // also instantiates our proxified Java object by calling __jcreate!	WITHOUT_CLASSIFICATION	0.9999994696095458	WITHOUT_CLASSIFICATION	5.303904542650637E-7	IMPLEMENTATION
// Next, we define a few private methods that we'll use to manipulate // the Java object contained within this Ruby object	WITHOUT_CLASSIFICATION	0.9998750687341288	WITHOUT_CLASSIFICATION	1.2493126587120068E-4	IMPLEMENTATION
// jcreate instantiates the proxy object which implements all interfaces // and which is wrapped and implemented by this object	WITHOUT_CLASSIFICATION	0.9905340289996288	WITHOUT_CLASSIFICATION	0.009465971000371224	IMPLEMENTATION
// Now we add an "implement" and "implement_all" methods to the class	WITHOUT_CLASSIFICATION	0.9999110558227869	WITHOUT_CLASSIFICATION	8.894417721313155E-5	IMPLEMENTATION
// implement all forces implementation of all interfaces we intend // for this class to implement	WITHOUT_CLASSIFICATION	0.978088572639522	WITHOUT_CLASSIFICATION	0.021911427360478113	IMPLEMENTATION
// we've already done the above priming logic, just add another interface // to the list of intentions unless we're past the point of no return or // already intend to implement the given interface	WITHOUT_CLASSIFICATION	0.9993557270788387	WITHOUT_CLASSIFICATION	6.442729211613908E-4	IMPLEMENTATION
// walk all superclasses aggregating interfaces	WITHOUT_CLASSIFICATION	0.9998853936307307	WITHOUT_CLASSIFICATION	1.14606369269349E-4	IMPLEMENTATION
// construct the new interface impl and set it into the object	WITHOUT_CLASSIFICATION	0.9999738854560927	WITHOUT_CLASSIFICATION	2.6114543907387748E-5	IMPLEMENTATION
// assuming the user wants a collection of interfaces that can be // included together. make it so.	WITHOUT_CLASSIFICATION	0.9960267901057385	WITHOUT_CLASSIFICATION	0.003973209894261461	IMPLEMENTATION
// not allowed for existing Java interface modules	WITHOUT_CLASSIFICATION	0.9993716324868767	WITHOUT_CLASSIFICATION	6.283675131232456E-4	IMPLEMENTATION
// To turn a module into an "interface collection" we add a class instance // variable to hold the list of interfaces, and modify append_features // for this module to call append_features on each of those interfaces as // well	WITHOUT_CLASSIFICATION	0.9999998305670118	WITHOUT_CLASSIFICATION	1.6943298819771024E-7	IMPLEMENTATION
// already set up append_features, just add the interface if we haven't already	WITHOUT_CLASSIFICATION	0.9999965624916829	WITHOUT_CLASSIFICATION	3.437508317021981E-6	IMPLEMENTATION
// array-of-interface-type creation/identity	WITHOUT_CLASSIFICATION	0.9998432178634115	WITHOUT_CLASSIFICATION	1.567821365885727E-4	IMPLEMENTATION
// keep this variant for kind_of? testing	WITHOUT_CLASSIFICATION	0.9998595546406378	WITHOUT_CLASSIFICATION	1.4044535936218243E-4	IMPLEMENTATION
// array creation should use this variant	WITHOUT_CLASSIFICATION	0.9990377896257333	WITHOUT_CLASSIFICATION	9.62210374266704E-4	IMPLEMENTATION
// parent.setConstant(name, proxyClass); // where the name should come from ?	WITHOUT_CLASSIFICATION	0.9998753596521359	WITHOUT_CLASSIFICATION	1.2464034786413203E-4	IMPLEMENTATION
// including interface module so old-style interface "subclasses" will // respond correctly to #kind_of?, etc.	WITHOUT_CLASSIFICATION	0.9999388930409491	WITHOUT_CLASSIFICATION	6.110695905096974E-5	IMPLEMENTATION
// add reference to interface module	WITHOUT_CLASSIFICATION	0.9999775189531493	WITHOUT_CLASSIFICATION	2.2481046850642347E-5	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9996487327988599	WITHOUT_CLASSIFICATION	3.5126720114008863E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9996487327988599	WITHOUT_CLASSIFICATION	3.5126720114008863E-4	IMPLEMENTATION
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.999968893808323	WITHOUT_CLASSIFICATION	3.110619167699433E-5	IMPLEMENTATION
// same as argument_types, but matches name in java.lang.reflect.Constructor/Method	WITHOUT_CLASSIFICATION	0.9999989250474948	WITHOUT_CLASSIFICATION	1.074952505229862E-6	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999995094672613	WITHOUT_CLASSIFICATION	4.905327387110395E-7	IMPLEMENTATION
// weakly reserved names	WITHOUT_CLASSIFICATION	0.9998942369878352	WITHOUT_CLASSIFICATION	1.0576301216482569E-4	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999785541746646	WITHOUT_CLASSIFICATION	2.144582533539804E-5	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999785541746646	WITHOUT_CLASSIFICATION	2.144582533539804E-5	IMPLEMENTATION
// modified only by addMethod; no synchronization required	WITHOUT_CLASSIFICATION	0.9997449044698407	WITHOUT_CLASSIFICATION	2.550955301593498E-4	IMPLEMENTATION
// if there's no constructor, we must prevent construction	WITHOUT_CLASSIFICATION	0.9982788321549316	WITHOUT_CLASSIFICATION	0.0017211678450683606	IMPLEMENTATION
// caching constructors, as they're accessed for each new instance	WITHOUT_CLASSIFICATION	0.9999845792561555	WITHOUT_CLASSIFICATION	1.5420743844604267E-5	IMPLEMENTATION
// proxy module for interfaces	WITHOUT_CLASSIFICATION	0.9999827596596974	WITHOUT_CLASSIFICATION	1.7240340302683457E-5	IMPLEMENTATION
// proxy class for concrete classes.  also used for // "concrete" interfaces, which is why we have two fields	WITHOUT_CLASSIFICATION	0.9999590970198274	WITHOUT_CLASSIFICATION	4.0902980172648615E-5	IMPLEMENTATION
// readable only by thread building proxy, so don't need to be // volatile. used to handle recursive calls to getProxyClass/Module // while proxy is being constructed (usually when a constant // defined by a class is of the same type as that class).	WITHOUT_CLASSIFICATION	0.9999989823212722	WITHOUT_CLASSIFICATION	1.017678727794341E-6	IMPLEMENTATION
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999967282405972	WITHOUT_CLASSIFICATION	3.271759402745938E-6	IMPLEMENTATION
// Now add all aliases for the static methods (fields) as appropriate	WITHOUT_CLASSIFICATION	0.999948412424539	WITHOUT_CLASSIFICATION	5.1587575460937975E-5	IMPLEMENTATION
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.999990208227337	WITHOUT_CLASSIFICATION	9.791772662992952E-6	IMPLEMENTATION
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9997843868156374	WITHOUT_CLASSIFICATION	2.1561318436262063E-4	IMPLEMENTATION
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999427262314662	WITHOUT_CLASSIFICATION	5.727376853373956E-5	IMPLEMENTATION
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999591310503906	WITHOUT_CLASSIFICATION	4.08689496093455E-5	IMPLEMENTATION
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999304254505924	WITHOUT_CLASSIFICATION	6.957454940752721E-5	IMPLEMENTATION
// Additionally add ?-postfixed aliases to any boolean methods and properties.	WITHOUT_CLASSIFICATION	0.9999888554898392	WITHOUT_CLASSIFICATION	1.1144510160814915E-5	IMPLEMENTATION
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9998432178634115	WITHOUT_CLASSIFICATION	1.567821365885727E-4	IMPLEMENTATION
// something?	WITHOUT_CLASSIFICATION	0.9990106064389327	WITHOUT_CLASSIFICATION	9.893935610673758E-4	IMPLEMENTATION
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999972144060029	WITHOUT_CLASSIFICATION	2.785593997064087E-6	IMPLEMENTATION
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999972144060029	WITHOUT_CLASSIFICATION	2.785593997064087E-6	IMPLEMENTATION
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999412174631298	WITHOUT_CLASSIFICATION	5.878253687018578E-5	IMPLEMENTATION
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999412174631298	WITHOUT_CLASSIFICATION	5.878253687018578E-5	IMPLEMENTATION
// create constructorInstaller; if there are no constructors, it will disable construction	WITHOUT_CLASSIFICATION	0.9999853567547587	WITHOUT_CLASSIFICATION	1.4643245241237413E-5	IMPLEMENTATION
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999900563475119	WITHOUT_CLASSIFICATION	9.943652488032008E-6	IMPLEMENTATION
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999192363700906	WITHOUT_CLASSIFICATION	8.076362990932582E-5	IMPLEMENTATION
// now iterate over all installers and make sure they also have appropriate aliases	WITHOUT_CLASSIFICATION	0.9999610351436323	WITHOUT_CLASSIFICATION	3.8964856367768136E-5	IMPLEMENTATION
// old (quasi-deprecated) interface class	WITHOUT_CLASSIFICATION	0.9999794858325671	WITHOUT_CLASSIFICATION	2.051416743288226E-5	IMPLEMENTATION
// 1.9 support for encodings	WITHOUT_CLASSIFICATION	0.9994083178435792	WITHOUT_CLASSIFICATION	5.916821564208529E-4	IMPLEMENTATION
// double-check the cache now that we're synchronized	WITHOUT_CLASSIFICATION	0.9987821482207203	WITHOUT_CLASSIFICATION	0.00121785177927976	IMPLEMENTATION
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999591310503906	WITHOUT_CLASSIFICATION	4.08689496093455E-5	IMPLEMENTATION
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999304254505924	WITHOUT_CLASSIFICATION	6.957454940752721E-5	IMPLEMENTATION
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9998432178634115	WITHOUT_CLASSIFICATION	1.567821365885727E-4	IMPLEMENTATION
// one word type name that starts lower-case...it may be a primitive type	WITHOUT_CLASSIFICATION	0.999880187607269	WITHOUT_CLASSIFICATION	1.198123927309337E-4	IMPLEMENTATION
// Java.getProxyClass deals with sync issues, so we won't duplicate the logic here	WITHOUT_CLASSIFICATION	0.9999912274518535	WITHOUT_CLASSIFICATION	8.772548146402676E-6	IMPLEMENTATION
// note: intentionally returning the actual array returned from Java, rather // than wrapping it in a RubyArray. wave of the future, when java_class will // return the actual class, rather than a JavaClass wrapper.	WITHOUT_CLASSIFICATION	0.9999996751434819	WITHOUT_CLASSIFICATION	3.248565180388195E-7	IMPLEMENTATION
// see note above re: return type	WITHOUT_CLASSIFICATION	0.9998764299755337	WITHOUT_CLASSIFICATION	1.235700244662084E-4	IMPLEMENTATION
// restrictive security policy; no matter, we only want public // classes anyway	WITHOUT_CLASSIFICATION	0.9999523400203296	WITHOUT_CLASSIFICATION	4.7659979670309725E-5	IMPLEMENTATION
// very restrictive policy (disallows Member.PUBLIC) // we'd never actually get this far in that case	WITHOUT_CLASSIFICATION	0.9968550433446437	WITHOUT_CLASSIFICATION	0.0031449566553562124	IMPLEMENTATION
// one-dimensional array	WITHOUT_CLASSIFICATION	0.9999231167328578	WITHOUT_CLASSIFICATION	7.688326714223034E-5	IMPLEMENTATION
// n-dimensional array	WITHOUT_CLASSIFICATION	0.9999231167328578	WITHOUT_CLASSIFICATION	7.688326714223034E-5	IMPLEMENTATION
// if it's an array of arrays, recurse with the component type	WITHOUT_CLASSIFICATION	0.9999889401970852	WITHOUT_CLASSIFICATION	1.1059802914855859E-5	IMPLEMENTATION
// we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods // see JRUBY-3130	WITHOUT_CLASSIFICATION	0.9999860480153338	WITHOUT_CLASSIFICATION	1.3951984666280095E-5	IMPLEMENTATION
// Proc implementing an interface, pull in the catch-all code that lets the proc get invoked // no matter what method is called on the interface	WITHOUT_CLASSIFICATION	0.9999388664549005	WITHOUT_CLASSIFICATION	6.11335450995906E-5	IMPLEMENTATION
// can't be converted any more, return it	WITHOUT_CLASSIFICATION	0.9999559245066135	WITHOUT_CLASSIFICATION	4.4075493386505636E-5	IMPLEMENTATION
// getFooBar() => fooBar?, foo_bar?(*)	WITHOUT_CLASSIFICATION	0.9999304254505924	WITHOUT_CLASSIFICATION	6.957454940752721E-5	IMPLEMENTATION
// If not a property, but is boolean add ?-postfixed aliases.	WITHOUT_CLASSIFICATION	0.9999421545310344	WITHOUT_CLASSIFICATION	5.784546896551241E-5	IMPLEMENTATION
// many cases are ok to convert to float; if not one of these, error	WITHOUT_CLASSIFICATION	0.9982271345823811	WITHOUT_CLASSIFICATION	0.00177286541761884	IMPLEMENTATION
// for Object, default to natural wrapper type	WITHOUT_CLASSIFICATION	0.9999926328673068	WITHOUT_CLASSIFICATION	7.367132693276342E-6	IMPLEMENTATION
// rubyObject is already of the required jruby class (or subclass)	WITHOUT_CLASSIFICATION	0.9999726925124993	WITHOUT_CLASSIFICATION	2.7307487500593904E-5	IMPLEMENTATION
// the converters handle not only primitive types but also their boxed versions, so we should check // if we have a converter before checking for isPrimitive()	WITHOUT_CLASSIFICATION	0.9996837433239213	WITHOUT_CLASSIFICATION	3.1625667607868354E-4	IMPLEMENTATION
// it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9994931945176643	WITHOUT_CLASSIFICATION	5.068054823357711E-4	IMPLEMENTATION
// we've found a Java type to which we've coerced the Ruby value, wrap it	WITHOUT_CLASSIFICATION	0.9998863799444155	WITHOUT_CLASSIFICATION	1.1362005558448283E-4	IMPLEMENTATION
// set of utility methods for Java-based proxy objects	WITHOUT_CLASSIFICATION	0.9999808995914153	WITHOUT_CLASSIFICATION	1.9100408584594144E-5	IMPLEMENTATION
// the proxy (wrapper) type hierarchy	WITHOUT_CLASSIFICATION	0.9999715223862186	WITHOUT_CLASSIFICATION	2.8477613781386503E-5	IMPLEMENTATION
//InterfaceJavaProxy.createInterfaceJavaProxy(context);	WITHOUT_CLASSIFICATION	0.9994792531202606	WITHOUT_CLASSIFICATION	5.20746879739313E-4	IMPLEMENTATION
// also create the JavaProxy* classes	WITHOUT_CLASSIFICATION	0.9998520396981585	WITHOUT_CLASSIFICATION	1.479603018415959E-4	IMPLEMENTATION
// The template for interface modules	WITHOUT_CLASSIFICATION	0.9999897181509287	WITHOUT_CLASSIFICATION	1.0281849071143166E-5	IMPLEMENTATION
// Now attach Java-related extras to core classes	WITHOUT_CLASSIFICATION	0.9998389814255648	WITHOUT_CLASSIFICATION	1.6101857443508877E-4	IMPLEMENTATION
// add all name-to-class mappings	WITHOUT_CLASSIFICATION	0.9986258327041864	WITHOUT_CLASSIFICATION	0.0013741672958136305	IMPLEMENTATION
// add some base Java classes everyone will need	WITHOUT_CLASSIFICATION	0.9999041119864045	WITHOUT_CLASSIFICATION	9.588801359561308E-5	IMPLEMENTATION
// finally, set JavaSupport.isEnabled to true	WITHOUT_CLASSIFICATION	0.9997229163579258	WITHOUT_CLASSIFICATION	2.7708364207419667E-4	IMPLEMENTATION
// shouldn't happen, but if a superclass is specified, it's not ours	WITHOUT_CLASSIFICATION	0.9997426474687934	WITHOUT_CLASSIFICATION	2.5735253120664104E-4	IMPLEMENTATION
// include any interfaces we extend	WITHOUT_CLASSIFICATION	0.9979718461682086	WITHOUT_CLASSIFICATION	0.0020281538317913693	IMPLEMENTATION
// java.lang.Object is added at root of java proxy classes	WITHOUT_CLASSIFICATION	0.9999995622851301	WITHOUT_CLASSIFICATION	4.3771486985927755E-7	IMPLEMENTATION
// other java proxy classes added under their superclass' java proxy	WITHOUT_CLASSIFICATION	0.9999929357003893	WITHOUT_CLASSIFICATION	7.064299610683672E-6	IMPLEMENTATION
// include interface modules into the proxy class	WITHOUT_CLASSIFICATION	0.9999891212951416	WITHOUT_CLASSIFICATION	1.0878704858353586E-5	IMPLEMENTATION
// JRUBY-2938 the proxy class might already exist	WITHOUT_CLASSIFICATION	0.999957680043092	WITHOUT_CLASSIFICATION	4.231995690795743E-5	IMPLEMENTATION
// add java_method for unbound use	WITHOUT_CLASSIFICATION	0.9998026956402195	WITHOUT_CLASSIFICATION	1.9730435978051604E-4	IMPLEMENTATION
// add alias to meta	WITHOUT_CLASSIFICATION	0.9997123754865381	WITHOUT_CLASSIFICATION	2.8762451346188287E-4	IMPLEMENTATION
// we'll only map conventional class names to modules 	WITHOUT_CLASSIFICATION	0.9999919819623274	WITHOUT_CLASSIFICATION	8.018037672577321E-6	IMPLEMENTATION
/* expected */	WITHOUT_CLASSIFICATION	0.9999446458187531	WITHOUT_CLASSIFICATION	5.535418124681887E-5	IMPLEMENTATION
// Haven't found a class, continue on as though it were a package	WITHOUT_CLASSIFICATION	0.9998855685106189	WITHOUT_CLASSIFICATION	1.1443148938099904E-4	IMPLEMENTATION
// upper case name, so most likely a class	WITHOUT_CLASSIFICATION	0.9999536374197416	WITHOUT_CLASSIFICATION	4.636258025848555E-5	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999995094672613	WITHOUT_CLASSIFICATION	4.905327387110395E-7	IMPLEMENTATION
// add alias to meta	WITHOUT_CLASSIFICATION	0.9997123754865381	WITHOUT_CLASSIFICATION	2.8762451346188287E-4	IMPLEMENTATION
// this is where we'll get connected when classes are opened using // package module syntax.	WITHOUT_CLASSIFICATION	0.9999839620818599	WITHOUT_CLASSIFICATION	1.6037918140187243E-5	IMPLEMENTATION
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9999889078736227	WITHOUT_CLASSIFICATION	1.1092126377217893E-5	IMPLEMENTATION
// this covers primitives and (unlikely) lower-case class names	WITHOUT_CLASSIFICATION	0.9998725585079193	WITHOUT_CLASSIFICATION	1.2744149208068805E-4	IMPLEMENTATION
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.999807707085681	WITHOUT_CLASSIFICATION	1.9229291431896531E-4	IMPLEMENTATION
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.999807707085681	WITHOUT_CLASSIFICATION	1.9229291431896531E-4	IMPLEMENTATION
// Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9999871601451626	WITHOUT_CLASSIFICATION	1.2839854837226769E-5	IMPLEMENTATION
// Create list of interfaces to proxy (and make sure they really are interfaces)	WITHOUT_CLASSIFICATION	0.9999968038918386	WITHOUT_CLASSIFICATION	3.196108161355051E-6	IMPLEMENTATION
// hashcode is a combination of the interfaces and the Ruby class we're using // to implement them	WITHOUT_CLASSIFICATION	0.999934272294037	WITHOUT_CLASSIFICATION	6.572770596305385E-5	IMPLEMENTATION
// if it's a singleton class and the real class is proc, we're doing closure conversion // so just use Proc's hashcode	WITHOUT_CLASSIFICATION	0.9999989292216804	WITHOUT_CLASSIFICATION	1.0707783195896378E-6	IMPLEMENTATION
// normal new class implementing interfaces	WITHOUT_CLASSIFICATION	0.999863358595222	WITHOUT_CLASSIFICATION	1.3664140477788125E-4	IMPLEMENTATION
/*         * Initialize some components.         */	WITHOUT_CLASSIFICATION	0.9999810202557851	WITHOUT_CLASSIFICATION	1.8979744214995442E-5	IMPLEMENTATION
// not synchronizing these methods, no harm if these values get set more // than once. // (also note that there's no chance of getting a partially initialized // class/module, as happens-before is guaranteed by volatile write/read // of constants table.)	WITHOUT_CLASSIFICATION	0.9999939721116635	WITHOUT_CLASSIFICATION	6.027888336416168E-6	IMPLEMENTATION
// Java reflection does not allow retrieving constructors like methods	WITHOUT_CLASSIFICATION	0.8931178870541574	WITHOUT_CLASSIFICATION	0.10688211294584261	IMPLEMENTATION
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9992581808938823	WITHOUT_CLASSIFICATION	7.418191061177208E-4	IMPLEMENTATION
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9992581808938823	WITHOUT_CLASSIFICATION	7.418191061177208E-4	IMPLEMENTATION
// no matching ctor found	WITHOUT_CLASSIFICATION	0.9999283852782781	WITHOUT_CLASSIFICATION	7.161472172191161E-5	IMPLEMENTATION
// Create Ruby proxies for any input arguments that are not primitives.	WITHOUT_CLASSIFICATION	0.9998274380304664	WITHOUT_CLASSIFICATION	1.72561969533635E-4	IMPLEMENTATION
// prepare a faster handle if handles are enabled and the method and class are public	WITHOUT_CLASSIFICATION	0.999982136627396	WITHOUT_CLASSIFICATION	1.786337260393211E-5	IMPLEMENTATION
// must be a public method	WITHOUT_CLASSIFICATION	0.9999556651651339	WITHOUT_CLASSIFICATION	4.4334834866155184E-5	IMPLEMENTATION
// must be a public class	WITHOUT_CLASSIFICATION	0.9999931842420208	WITHOUT_CLASSIFICATION	6.815757979236631E-6	IMPLEMENTATION
// must have been loaded from our known classloader hierarchy	WITHOUT_CLASSIFICATION	0.9999861956819756	WITHOUT_CLASSIFICATION	1.3804318024496437E-5	IMPLEMENTATION
// Special classes like Collections.EMPTY_LIST are inner classes that are private but  // implement public interfaces.  Their methods are all public methods for the public  // interface.  Let these public methods execute via setAccessible(true). 	WITHOUT_CLASSIFICATION	0.9995348666725975	WITHOUT_CLASSIFICATION	4.651333274025051E-4	IMPLEMENTATION
// search through all declared methods to find a closest match	WITHOUT_CLASSIFICATION	0.9999683706137924	WITHOUT_CLASSIFICATION	3.162938620759819E-5	IMPLEMENTATION
// no matching method found	WITHOUT_CLASSIFICATION	0.9997709455550842	WITHOUT_CLASSIFICATION	2.290544449158586E-4	IMPLEMENTATION
// this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.9999983276212385	WITHOUT_CLASSIFICATION	1.6723787613940133E-6	IMPLEMENTATION
/*         * First we need to register the JRuby engine.         */	WITHOUT_CLASSIFICATION	0.9999589011972052	WITHOUT_CLASSIFICATION	4.109880279476218E-5	IMPLEMENTATION
/*         * Now we create a new BSFManager.         */	WITHOUT_CLASSIFICATION	0.9999778429387323	WITHOUT_CLASSIFICATION	2.2157061267662067E-5	IMPLEMENTATION
/*         * Initialize a simple Frame.          */	WITHOUT_CLASSIFICATION	0.9999946822870138	WITHOUT_CLASSIFICATION	5.3177129862470145E-6	IMPLEMENTATION
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9996940498953022	WITHOUT_CLASSIFICATION	3.059501046977244E-4	IMPLEMENTATION
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9996940498953022	WITHOUT_CLASSIFICATION	3.059501046977244E-4	IMPLEMENTATION
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9998923541416439	WITHOUT_CLASSIFICATION	1.0764585835617297E-4	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.9996130508941409	WITHOUT_CLASSIFICATION	3.869491058590927E-4	IMPLEMENTATION
// // this test really means, that this is a ruby-defined subclass of a java class //	WITHOUT_CLASSIFICATION	0.9999983276212385	WITHOUT_CLASSIFICATION	1.6723787613940133E-6	IMPLEMENTATION
// for our purposes, Accessibles are also Members, and vice-versa, // so we'll include Member methods here.	WITHOUT_CLASSIFICATION	0.9999878397442347	WITHOUT_CLASSIFICATION	1.2160255765212752E-5	IMPLEMENTATION
/*             * Declare those components as beans in BSF. Then it will be             * possible to access those components in Ruby as global             * variables ($frame, $menubar, ...)             */	WITHOUT_CLASSIFICATION	0.9999999802965673	WITHOUT_CLASSIFICATION	1.970343267775245E-8	IMPLEMENTATION
/*              * Execute a Ruby script (add the menubar to the frame).             */	WITHOUT_CLASSIFICATION	0.9999971035692831	WITHOUT_CLASSIFICATION	2.896430716880018E-6	IMPLEMENTATION
/*                     * Execute Ruby statements.                     */	WITHOUT_CLASSIFICATION	0.9999928383931759	WITHOUT_CLASSIFICATION	7.161606824021689E-6	IMPLEMENTATION
/*                     * Evaluates a Ruby expression and display the result.                     */	WITHOUT_CLASSIFICATION	0.9999948191804022	WITHOUT_CLASSIFICATION	5.180819597753454E-6	IMPLEMENTATION
// Populate values for the parameter names	WITHOUT_CLASSIFICATION	0.9999971361048758	WITHOUT_CLASSIFICATION	2.863895124076345E-6	IMPLEMENTATION
/* package scope */	WITHOUT_CLASSIFICATION	0.9998687357800701	WITHOUT_CLASSIFICATION	1.312642199299818E-4	IMPLEMENTATION
// This point is only reached if there was an exception handler // installed.	WITHOUT_CLASSIFICATION	0.9999995094672613	WITHOUT_CLASSIFICATION	4.905327387110395E-7	IMPLEMENTATION
// // Ruby-level methods //	WITHOUT_CLASSIFICATION	0.9999003674813395	WITHOUT_CLASSIFICATION	9.963251866045314E-5	IMPLEMENTATION
// need names ordered for key generation later	WITHOUT_CLASSIFICATION	0.9994030720113402	WITHOUT_CLASSIFICATION	5.969279886597563E-4	IMPLEMENTATION
// we only collect methods and interfaces for  // user-defined proxy classes.	WITHOUT_CLASSIFICATION	0.9999879884418553	WITHOUT_CLASSIFICATION	1.2011558144553393E-5	IMPLEMENTATION
// get JavaClass if this is the new proxy class; verify it // matches if this is a superclass proxy.	WITHOUT_CLASSIFICATION	0.999994330303728	WITHOUT_CLASSIFICATION	5.669696271969164E-6	IMPLEMENTATION
// get any included interfaces	WITHOUT_CLASSIFICATION	0.9999563288680099	WITHOUT_CLASSIFICATION	4.367113199012607E-5	IMPLEMENTATION
// lock in the overridden methods for the new class, and any as-yet // uninstantiated ancestor class.	WITHOUT_CLASSIFICATION	0.9999985465889741	WITHOUT_CLASSIFICATION	1.4534110258975544E-6	IMPLEMENTATION
// statically initialized below	WITHOUT_CLASSIFICATION	0.9999495013283923	WITHOUT_CLASSIFICATION	5.049867160770954E-5	IMPLEMENTATION
// finish class initializer	WITHOUT_CLASSIFICATION	0.999357424665257	WITHOUT_CLASSIFICATION	6.425753347430472E-4	IMPLEMENTATION
// trigger class initialization for the class	WITHOUT_CLASSIFICATION	0.9999280113986277	WITHOUT_CLASSIFICATION	7.198860137222955E-5	IMPLEMENTATION
// should not happen!	WITHOUT_CLASSIFICATION	0.9966003455813159	WITHOUT_CLASSIFICATION	0.003399654418684142	IMPLEMENTATION
// start class	WITHOUT_CLASSIFICATION	0.9998910052559011	WITHOUT_CLASSIFICATION	1.0899474409883364E-4	IMPLEMENTATION
// make getter for handler	WITHOUT_CLASSIFICATION	0.9997856943990168	WITHOUT_CLASSIFICATION	2.143056009832901E-4	IMPLEMENTATION
// make getter for proxy class	WITHOUT_CLASSIFICATION	0.9999463516401161	WITHOUT_CLASSIFICATION	5.364835988386317E-5	IMPLEMENTATION
// add (potentially) overridden names to the key. // TODO: see note above re: optimizations	WITHOUT_CLASSIFICATION	0.8373560122206885	IMPLEMENTATION	0.16264398777931144	WITHOUT_CLASSIFICATION
// We generate all constructors and let some fail during invocation later	WITHOUT_CLASSIFICATION	0.9994823212553396	WITHOUT_CLASSIFICATION	5.176787446604206E-4	IMPLEMENTATION
// create static private method field	WITHOUT_CLASSIFICATION	0.9997436306218942	WITHOUT_CLASSIFICATION	2.563693781057634E-4	IMPLEMENTATION
// load static empty array	WITHOUT_CLASSIFICATION	0.9999804007150384	WITHOUT_CLASSIFICATION	1.9599284961706883E-5	IMPLEMENTATION
// box arguments	WITHOUT_CLASSIFICATION	0.9997240267580361	WITHOUT_CLASSIFICATION	2.759732419640185E-4	IMPLEMENTATION
// this is a simple rethrow handler	WITHOUT_CLASSIFICATION	0.999933770842601	WITHOUT_CLASSIFICATION	6.622915739895985E-5	IMPLEMENTATION
// // construct the super-proxy method //	WITHOUT_CLASSIFICATION	0.9994505747315983	WITHOUT_CLASSIFICATION	5.494252684017021E-4	IMPLEMENTATION
// do a void return	WITHOUT_CLASSIFICATION	0.9998504721531596	WITHOUT_CLASSIFICATION	1.4952784684043794E-4	IMPLEMENTATION
// // utility methods //	WITHOUT_CLASSIFICATION	0.9999318083458291	WITHOUT_CLASSIFICATION	6.819165417095743E-5	IMPLEMENTATION
// Is there a supplied proc argument or do we assume a block was // supplied	WITHOUT_CLASSIFICATION	0.9999871601451626	WITHOUT_CLASSIFICATION	1.2839854837226769E-5	IMPLEMENTATION
// store call information so method_missing impl can use it	WITHOUT_CLASSIFICATION	0.9991358150946755	WITHOUT_CLASSIFICATION	8.641849053244945E-4	IMPLEMENTATION
// use the same logic as in EvaluationState	WITHOUT_CLASSIFICATION	0.9999820933576257	WITHOUT_CLASSIFICATION	1.7906642374379744E-5	IMPLEMENTATION
// no opt, no rest, exact match	WITHOUT_CLASSIFICATION	0.9999213601592624	WITHOUT_CLASSIFICATION	7.863984073766765E-5	IMPLEMENTATION
// only rest, must be at least required	WITHOUT_CLASSIFICATION	0.9998990959106578	WITHOUT_CLASSIFICATION	1.0090408934220099E-4	IMPLEMENTATION
// opt but no rest, must be at least required and no more than required + opt	WITHOUT_CLASSIFICATION	0.9994604212231456	WITHOUT_CLASSIFICATION	5.395787768544299E-4	IMPLEMENTATION
// opt and rest, must be at least required	WITHOUT_CLASSIFICATION	0.9998553219347602	WITHOUT_CLASSIFICATION	1.446780652397409E-4	IMPLEMENTATION
// No block from a nil proc	WITHOUT_CLASSIFICATION	0.9999916253300632	WITHOUT_CLASSIFICATION	8.374669936762666E-6	IMPLEMENTATION
// If not already a proc then we should try and make it one.	WITHOUT_CLASSIFICATION	0.9682258517749556	WITHOUT_CLASSIFICATION	0.03177414822504453	IMPLEMENTATION
// The current block is already associated with proc.  No need to create a new one	WITHOUT_CLASSIFICATION	0.9998942964051897	WITHOUT_CLASSIFICATION	1.0570359481036924E-4	IMPLEMENTATION
// Has the method that is calling super received a block argument	WITHOUT_CLASSIFICATION	0.9999210318264729	WITHOUT_CLASSIFICATION	7.896817352722741E-5	IMPLEMENTATION
/* NUL */	WITHOUT_CLASSIFICATION	0.9999981747302832	WITHOUT_CLASSIFICATION	1.8252697168303275E-6	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9998796036349088	WITHOUT_CLASSIFICATION	1.2039636509123084E-4	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9998904989264179	WITHOUT_CLASSIFICATION	1.0950107358212745E-4	IMPLEMENTATION
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999702096571932	WITHOUT_CLASSIFICATION	2.9790342806836006E-5	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9993917640613521	WITHOUT_CLASSIFICATION	6.082359386479299E-4	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9994903392551018	WITHOUT_CLASSIFICATION	5.096607448981903E-4	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9994903392551018	WITHOUT_CLASSIFICATION	5.096607448981903E-4	IMPLEMENTATION
// classes are directly in the hierarchy, so no special logic is necessary for implementer	WITHOUT_CLASSIFICATION	0.9999991990520856	WITHOUT_CLASSIFICATION	8.009479143814647E-7	IMPLEMENTATION
// must be power of 2 // must be power of 2	WITHOUT_CLASSIFICATION	0.9999751749774657	WITHOUT_CLASSIFICATION	2.4825022534260604E-5	IMPLEMENTATION
// Find power-of-two sizes best matching arguments	WITHOUT_CLASSIFICATION	0.9998712897982509	WITHOUT_CLASSIFICATION	1.287102017491271E-4	IMPLEMENTATION
// note segmentShift differs from ConcurrentHashMap's calculation due to // issues with System.identityHashCode (upper n bits always 0, at least  // under Java 1.6 / WinXP)	WITHOUT_CLASSIFICATION	0.9999977505105283	WITHOUT_CLASSIFICATION	2.2494894716025435E-6	IMPLEMENTATION
//      System.err.println("***ObjectProxyCache " + id + " started at "+ new java.util.Date());	WITHOUT_CLASSIFICATION	0.9998844010999702	WITHOUT_CLASSIFICATION	1.1559890002967319E-4	IMPLEMENTATION
//    protected void finalize() throws Throwable { //        System.err.println("***ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); //    }	WITHOUT_CLASSIFICATION	0.9997133496699109	WITHOUT_CLASSIFICATION	2.8665033008912677E-4	IMPLEMENTATION
// EntryRefs include hash with key to facilitate lookup by Segment#expunge // after ref is removed from ReferenceQueue	WITHOUT_CLASSIFICATION	0.9996155183851573	WITHOUT_CLASSIFICATION	3.844816148427495E-4	IMPLEMENTATION
// Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather // makes it a final field.  The theory is that doing so should force a happens-before // relationship WRT the WeakReference constructor, guaranteeing that the key will be // visibile to other threads (unless it's been GC'ed).  See JLS 17.5 (final fields) and // 17.4.5 (Happens-before order) to confirm or refute my reasoning here.	WITHOUT_CLASSIFICATION	0.9999448965345615	WITHOUT_CLASSIFICATION	5.510346543848588E-5	IMPLEMENTATION
// references to the Java object and its proxy will either both be // weak or both be soft, since the proxy contains a strong reference // to the object, so it wouldn't make sense for the reference types // to differ.	WITHOUT_CLASSIFICATION	0.9999997183490976	WITHOUT_CLASSIFICATION	2.8165090238722553E-7	IMPLEMENTATION
// ctor used by remove/rehash	WITHOUT_CLASSIFICATION	0.9999462126562617	WITHOUT_CLASSIFICATION	5.37873437383999E-5	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.999985288703112	WITHOUT_CLASSIFICATION	1.4711296887991176E-5	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.999985288703112	WITHOUT_CLASSIFICATION	1.4711296887991176E-5	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.999985288703112	WITHOUT_CLASSIFICATION	1.4711296887991176E-5	IMPLEMENTATION
// note that we'll potentially see the refs for both the java object and // proxy -- whichever we see first will cause the entry to be removed; // the other will not match an entry and will be ignored.	WITHOUT_CLASSIFICATION	0.9999791779109661	WITHOUT_CLASSIFICATION	2.082208903383231E-5	IMPLEMENTATION
// temp method to verify tableSize value // must be called under lock	WITHOUT_CLASSIFICATION	0.9999928811882249	WITHOUT_CLASSIFICATION	7.118811775120097E-6	IMPLEMENTATION
// Single node in list	WITHOUT_CLASSIFICATION	0.9999854065345454	WITHOUT_CLASSIFICATION	1.459346545471143E-5	IMPLEMENTATION
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9998432178634115	WITHOUT_CLASSIFICATION	1.567821365885727E-4	IMPLEMENTATION
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9998432178634115	WITHOUT_CLASSIFICATION	1.567821365885727E-4	IMPLEMENTATION
// entry exists, proxy has been gc'ed. replace entry.	WITHOUT_CLASSIFICATION	0.9995329454281431	WITHOUT_CLASSIFICATION	4.6705457185693377E-4	IMPLEMENTATION
// Where we get new positions from.	WITHOUT_CLASSIFICATION	0.998985873712736	WITHOUT_CLASSIFICATION	0.0010141262872640072	IMPLEMENTATION
// Start of string ([, (, {, <, ', ", \n) 	WITHOUT_CLASSIFICATION	0.9999984506381996	WITHOUT_CLASSIFICATION	1.5493618004595404E-6	IMPLEMENTATION
// Number of newlines read from the reader	WITHOUT_CLASSIFICATION	0.9999969904412427	WITHOUT_CLASSIFICATION	3.009558757234139E-6	IMPLEMENTATION
// How many bytes into the source are we?	WITHOUT_CLASSIFICATION	0.9999860015094474	WITHOUT_CLASSIFICATION	1.3998490552730068E-5	IMPLEMENTATION
// For 'list' and only populated if list is not null.	WITHOUT_CLASSIFICATION	0.9997486088411601	WITHOUT_CLASSIFICATION	2.513911588398652E-4	IMPLEMENTATION
// Last full line read.	WITHOUT_CLASSIFICATION	0.9998671583506807	WITHOUT_CLASSIFICATION	1.3284164931925458E-4	IMPLEMENTATION
// Save sourceLine for error reporting to display line where error occurred	WITHOUT_CLASSIFICATION	0.999063105336318	WITHOUT_CLASSIFICATION	9.368946636819735E-4	IMPLEMENTATION
// Get rest of line. lineBuffer filled as side-effect...	WITHOUT_CLASSIFICATION	0.9999762178997923	WITHOUT_CLASSIFICATION	2.3782100207724643E-5	IMPLEMENTATION
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9998856356909213	WITHOUT_CLASSIFICATION	1.1436430907872373E-4	IMPLEMENTATION
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9998856356909213	WITHOUT_CLASSIFICATION	1.1436430907872373E-4	IMPLEMENTATION
// End of string (], ), }, >, ', ", \0)	WITHOUT_CLASSIFICATION	0.9999983657162775	WITHOUT_CLASSIFICATION	1.6342837224700855E-6	IMPLEMENTATION
// How many strings are nested in the current string term	WITHOUT_CLASSIFICATION	0.999995062413833	WITHOUT_CLASSIFICATION	4.937586167080693E-6	IMPLEMENTATION
// Single-quote fast path	WITHOUT_CLASSIFICATION	0.9999550725600101	WITHOUT_CLASSIFICATION	4.4927439989898674E-5	IMPLEMENTATION
// Regexp engine 'java'	WITHOUT_CLASSIFICATION	0.999917706817123	WITHOUT_CLASSIFICATION	8.229318287696846E-5	IMPLEMENTATION
// Was a goto in original ruby lexer	WITHOUT_CLASSIFICATION	0.9999735924421931	WITHOUT_CLASSIFICATION	2.6407557806967035E-5	IMPLEMENTATION
/* just ignore */	WITHOUT_CLASSIFICATION	0.9999878718616028	WITHOUT_CLASSIFICATION	1.2128138397147176E-5	IMPLEMENTATION
/* octal constant */	WITHOUT_CLASSIFICATION	0.9998696377225033	WITHOUT_CLASSIFICATION	1.3036227749673628E-4	IMPLEMENTATION
/* hex constant */	WITHOUT_CLASSIFICATION	0.9998700570510299	WITHOUT_CLASSIFICATION	1.2994294897009112E-4	IMPLEMENTATION
// PUSH(1)	WITHOUT_CLASSIFICATION	0.9999889436623457	WITHOUT_CLASSIFICATION	1.1056337654331047E-5	IMPLEMENTATION
// POP	WITHOUT_CLASSIFICATION	0.9999889436623457	WITHOUT_CLASSIFICATION	1.1056337654331047E-5	IMPLEMENTATION
// PUSH(0).  If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.	WITHOUT_CLASSIFICATION	0.9999742585944135	WITHOUT_CLASSIFICATION	2.5741405586482585E-5	IMPLEMENTATION
// LEXPOP	WITHOUT_CLASSIFICATION	0.9999889436623457	WITHOUT_CLASSIFICATION	1.1056337654331047E-5	IMPLEMENTATION
// SET_P	WITHOUT_CLASSIFICATION	0.9999889436623457	WITHOUT_CLASSIFICATION	1.1056337654331047E-5	IMPLEMENTATION
// Marker delimiting heredoc boundary	WITHOUT_CLASSIFICATION	0.9998612819176991	WITHOUT_CLASSIFICATION	1.3871808230098018E-4	IMPLEMENTATION
// Found end marker for this heredoc	WITHOUT_CLASSIFICATION	0.9995753643558426	WITHOUT_CLASSIFICATION	4.2463564415746633E-4	IMPLEMENTATION
// Put back lastLine for any elements past start of heredoc marker	WITHOUT_CLASSIFICATION	0.9999957076903643	WITHOUT_CLASSIFICATION	4.292309635659735E-6	IMPLEMENTATION
// Last token read via yylex().	WITHOUT_CLASSIFICATION	0.9999425788075823	WITHOUT_CLASSIFICATION	5.742119241775698E-5	IMPLEMENTATION
// Value of last token which had a value associated with it.	WITHOUT_CLASSIFICATION	0.9999928635858955	WITHOUT_CLASSIFICATION	7.136414104508393E-6	IMPLEMENTATION
// Stream of data that yylex() examines.	WITHOUT_CLASSIFICATION	0.9999735311829772	WITHOUT_CLASSIFICATION	2.646881702277488E-5	IMPLEMENTATION
// Used for tiny smidgen of grammar in lexer (see setParserSupport())	WITHOUT_CLASSIFICATION	0.9999995483976927	WITHOUT_CLASSIFICATION	4.516023072707162E-7	IMPLEMENTATION
// Give a name to a value.  Enebo: This should be used more.	WITHOUT_CLASSIFICATION	0.9998820572554707	WITHOUT_CLASSIFICATION	1.1794274452918233E-4	IMPLEMENTATION
// When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').	WITHOUT_CLASSIFICATION	0.9983393373488837	WITHOUT_CLASSIFICATION	0.001660662651116299	IMPLEMENTATION
// Are we lexing Ruby 1.8 or 1.9+ syntax	WITHOUT_CLASSIFICATION	0.9997793239195613	WITHOUT_CLASSIFICATION	2.2067608043867053E-4	IMPLEMENTATION
// Count of nested parentheses (1.9 only)	WITHOUT_CLASSIFICATION	0.9998547672072216	WITHOUT_CLASSIFICATION	1.452327927785498E-4	IMPLEMENTATION
// 1.9 only	WITHOUT_CLASSIFICATION	0.999757825224735	WITHOUT_CLASSIFICATION	2.4217477526505577E-4	IMPLEMENTATION
// Short-hand (e.g. %{,%.,%!,... versus %Q{).	WITHOUT_CLASSIFICATION	0.9998367060717114	WITHOUT_CLASSIFICATION	1.6329392828854085E-4	IMPLEMENTATION
// Long-hand (e.g. %Q{}).	WITHOUT_CLASSIFICATION	0.9999040754203278	WITHOUT_CLASSIFICATION	9.592457967228428E-5	IMPLEMENTATION
/* no mb || ismbchar(term)*/	WITHOUT_CLASSIFICATION	0.9961469742076436	WITHOUT_CLASSIFICATION	0.0038530257923564213	IMPLEMENTATION
/*     * Not normally used, but is left in here since it can be useful in debugging     * grammar and lexing problems.     *     */	WITHOUT_CLASSIFICATION	0.9999997552632836	WITHOUT_CLASSIFICATION	2.447367163759494E-7	IMPLEMENTATION
// DEBUGGING HELP 	WITHOUT_CLASSIFICATION	0.9994903392551018	WITHOUT_CLASSIFICATION	5.096607448981903E-4	IMPLEMENTATION
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999981747302832	WITHOUT_CLASSIFICATION	1.8252697168303275E-6	IMPLEMENTATION
/* end of script. */	WITHOUT_CLASSIFICATION	0.9999497398163223	WITHOUT_CLASSIFICATION	5.026018367763139E-5	IMPLEMENTATION
/* white spaces */	WITHOUT_CLASSIFICATION	0.9999451572370548	WITHOUT_CLASSIFICATION	5.484276294509911E-5	IMPLEMENTATION
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999981747302832	WITHOUT_CLASSIFICATION	1.8252697168303275E-6	IMPLEMENTATION
/* it's a comment */	WITHOUT_CLASSIFICATION	0.9998869994740945	WITHOUT_CLASSIFICATION	1.1300052590553294E-4	IMPLEMENTATION
// Replace a string of newlines with a single one	WITHOUT_CLASSIFICATION	0.9999950578311446	WITHOUT_CLASSIFICATION	4.942168855430356E-6	IMPLEMENTATION
/* $\: output record separator */	WITHOUT_CLASSIFICATION	0.9999856742658243	WITHOUT_CLASSIFICATION	1.4325734175760323E-5	IMPLEMENTATION
// EOF (ENEBO: After default?	WITHOUT_CLASSIFICATION	0.9998585160230583	WITHOUT_CLASSIFICATION	1.4148397694174275E-4	IMPLEMENTATION
// documentation nodes	WITHOUT_CLASSIFICATION	0.9998908347061177	WITHOUT_CLASSIFICATION	1.0916529388220797E-4	IMPLEMENTATION
// In case last next was the newline.	WITHOUT_CLASSIFICATION	0.9998652644307348	WITHOUT_CLASSIFICATION	1.3473556926519027E-4	IMPLEMENTATION
// Just a plain bang	WITHOUT_CLASSIFICATION	0.9997093423283226	WITHOUT_CLASSIFICATION	2.906576716773352E-4	IMPLEMENTATION
/* $_: last read line string */	WITHOUT_CLASSIFICATION	0.9999997289133368	WITHOUT_CLASSIFICATION	2.710866631552311E-7	IMPLEMENTATION
/* $~: match-data */	WITHOUT_CLASSIFICATION	0.9999158260374922	WITHOUT_CLASSIFICATION	8.4173962507808E-5	IMPLEMENTATION
/* $*: argv */	WITHOUT_CLASSIFICATION	0.9999158260374922	WITHOUT_CLASSIFICATION	8.4173962507808E-5	IMPLEMENTATION
/* $$: pid */	WITHOUT_CLASSIFICATION	0.999916351619863	WITHOUT_CLASSIFICATION	8.364838013694087E-5	IMPLEMENTATION
/* $?: last status */	WITHOUT_CLASSIFICATION	0.9999833657295767	WITHOUT_CLASSIFICATION	1.663427042333381E-5	IMPLEMENTATION
/* $!: error string */	WITHOUT_CLASSIFICATION	0.9999972893496373	WITHOUT_CLASSIFICATION	2.710650362690955E-6	IMPLEMENTATION
/* $@: error position */	WITHOUT_CLASSIFICATION	0.9999464813329049	WITHOUT_CLASSIFICATION	5.351866709517218E-5	IMPLEMENTATION
/* $/: input record separator */	WITHOUT_CLASSIFICATION	0.9999847831391374	WITHOUT_CLASSIFICATION	1.521686086247031E-5	IMPLEMENTATION
/* $;: field separator */	WITHOUT_CLASSIFICATION	0.9999906611495181	WITHOUT_CLASSIFICATION	9.338850481863677E-6	IMPLEMENTATION
/* $,: output field separator */	WITHOUT_CLASSIFICATION	0.9999882387301258	WITHOUT_CLASSIFICATION	1.1761269874276189E-5	IMPLEMENTATION
/* $.: last read line number */	WITHOUT_CLASSIFICATION	0.999989177288704	WITHOUT_CLASSIFICATION	1.0822711295968718E-5	IMPLEMENTATION
/* $=: ignorecase */	WITHOUT_CLASSIFICATION	0.9999158260374922	WITHOUT_CLASSIFICATION	8.4173962507808E-5	IMPLEMENTATION
/* $:: load path */	WITHOUT_CLASSIFICATION	0.9999601364564285	WITHOUT_CLASSIFICATION	3.9863543571565933E-5	IMPLEMENTATION
/* $<: reading filename */	WITHOUT_CLASSIFICATION	0.9999984979320715	WITHOUT_CLASSIFICATION	1.5020679284579375E-6	IMPLEMENTATION
/* $": already loaded files */	WITHOUT_CLASSIFICATION	0.9999973937352163	WITHOUT_CLASSIFICATION	2.60626478361489E-6	IMPLEMENTATION
/* $&: last match */	WITHOUT_CLASSIFICATION	0.9999664737936477	WITHOUT_CLASSIFICATION	3.352620635228104E-5	IMPLEMENTATION
/* $`: string before last match */	WITHOUT_CLASSIFICATION	0.9999997872648435	WITHOUT_CLASSIFICATION	2.1273515644092969E-7	IMPLEMENTATION
/* $': string after last match */	WITHOUT_CLASSIFICATION	0.9999998210503441	WITHOUT_CLASSIFICATION	1.789496558047962E-7	IMPLEMENTATION
// methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop	WITHOUT_CLASSIFICATION	0.9999989604511725	WITHOUT_CLASSIFICATION	1.0395488275279122E-6	IMPLEMENTATION
/* See if it is a reserved word.  */	WITHOUT_CLASSIFICATION	0.9999973781244792	WITHOUT_CLASSIFICATION	2.6218755208670614E-6	IMPLEMENTATION
// enum lex_state	WITHOUT_CLASSIFICATION	0.9994905377912237	WITHOUT_CLASSIFICATION	5.09462208776279E-4	IMPLEMENTATION
// block (primary)	WITHOUT_CLASSIFICATION	0.9993429764523386	WITHOUT_CLASSIFICATION	6.570235476614226E-4	IMPLEMENTATION
// block (expr)	WITHOUT_CLASSIFICATION	0.9993429764523386	WITHOUT_CLASSIFICATION	6.570235476614226E-4	IMPLEMENTATION
// hash	WITHOUT_CLASSIFICATION	0.9999891315694964	WITHOUT_CLASSIFICATION	1.0868430503632856E-5	IMPLEMENTATION
// ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.	WITHOUT_CLASSIFICATION	0.9999693958332683	WITHOUT_CLASSIFICATION	3.0604166731809735E-5	IMPLEMENTATION
// FIXME: peek('u') utf8 stuff for 1.9	WITHOUT_CLASSIFICATION	0.9747812724762976	WITHOUT_CLASSIFICATION	0.02521872752370242	IMPLEMENTATION
// We don't append '+' since Java number parser gets confused	WITHOUT_CLASSIFICATION	0.9999852089539545	WITHOUT_CLASSIFICATION	1.4791046045531755E-5	IMPLEMENTATION
//  hexadecimal	WITHOUT_CLASSIFICATION	0.9995768653124641	WITHOUT_CLASSIFICATION	4.2313468753588535E-4	IMPLEMENTATION
// binary	WITHOUT_CLASSIFICATION	0.9999918464835751	WITHOUT_CLASSIFICATION	8.153516424966766E-6	IMPLEMENTATION
// decimal	WITHOUT_CLASSIFICATION	0.9999916677855745	WITHOUT_CLASSIFICATION	8.332214425508112E-6	IMPLEMENTATION
//Octal	WITHOUT_CLASSIFICATION	0.9999632642966054	WITHOUT_CLASSIFICATION	3.673570339455358E-5	IMPLEMENTATION
//  '_' in number just ignored	WITHOUT_CLASSIFICATION	0.9999864252424329	WITHOUT_CLASSIFICATION	1.3574757567165948E-5	IMPLEMENTATION
// backslash	WITHOUT_CLASSIFICATION	0.9994903692691587	WITHOUT_CLASSIFICATION	5.096307308414033E-4	IMPLEMENTATION
// newline	WITHOUT_CLASSIFICATION	0.9999896162465848	WITHOUT_CLASSIFICATION	1.0383753415188756E-5	IMPLEMENTATION
// horizontal tab	WITHOUT_CLASSIFICATION	0.9984529151793309	WITHOUT_CLASSIFICATION	0.0015470848206690614	IMPLEMENTATION
// form feed	WITHOUT_CLASSIFICATION	0.9994217275790466	WITHOUT_CLASSIFICATION	5.78272420953396E-4	IMPLEMENTATION
// vertical tab	WITHOUT_CLASSIFICATION	0.9982078197643836	WITHOUT_CLASSIFICATION	0.001792180235616338	IMPLEMENTATION
// alarm(bell)	WITHOUT_CLASSIFICATION	0.9994903392551018	WITHOUT_CLASSIFICATION	5.096607448981903E-4	IMPLEMENTATION
// escape	WITHOUT_CLASSIFICATION	0.9999968842220688	WITHOUT_CLASSIFICATION	3.115777931272156E-6	IMPLEMENTATION
// hex constant	WITHOUT_CLASSIFICATION	0.9992133968923694	WITHOUT_CLASSIFICATION	7.866031076306215E-4	IMPLEMENTATION
//char hexValue = scanHex(2);	WITHOUT_CLASSIFICATION	0.9997184733597368	WITHOUT_CLASSIFICATION	2.8152664026314463E-4	IMPLEMENTATION
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999915429676317	WITHOUT_CLASSIFICATION	8.45703236833476E-6	IMPLEMENTATION
// space	WITHOUT_CLASSIFICATION	0.9999966948296073	WITHOUT_CLASSIFICATION	3.3051703926455834E-6	IMPLEMENTATION
// Where we started this marker match	WITHOUT_CLASSIFICATION	0.9993225105093746	WITHOUT_CLASSIFICATION	6.774894906253875E-4	IMPLEMENTATION
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999995352077357	WITHOUT_CLASSIFICATION	4.6479226445447164E-7	IMPLEMENTATION
// We use offset here to keep track of extra newlines for windows	WITHOUT_CLASSIFICATION	0.9999651362785178	WITHOUT_CLASSIFICATION	3.486372148220834E-5	IMPLEMENTATION
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999915429676317	WITHOUT_CLASSIFICATION	8.45703236833476E-6	IMPLEMENTATION
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.5871942810437277	IMPLEMENTATION	0.41280571895627244	WITHOUT_CLASSIFICATION
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.5871942810437277	IMPLEMENTATION	0.41280571895627244	WITHOUT_CLASSIFICATION
// Where we get our newest char's	WITHOUT_CLASSIFICATION	0.9999178568540931	WITHOUT_CLASSIFICATION	8.214314590691905E-5	IMPLEMENTATION
// Our readback/pushback buffer.	WITHOUT_CLASSIFICATION	0.999844486167621	WITHOUT_CLASSIFICATION	1.5551383237893357E-4	IMPLEMENTATION
// index of last character in pushback buffer	WITHOUT_CLASSIFICATION	0.9999874616997307	WITHOUT_CLASSIFICATION	1.2538300269224272E-5	IMPLEMENTATION
// Character read before previous read	WITHOUT_CLASSIFICATION	0.999971460745307	WITHOUT_CLASSIFICATION	2.8539254693023056E-5	IMPLEMENTATION
// keep value of twoAgo around so we can restore after we unread	WITHOUT_CLASSIFICATION	0.9999881238065277	WITHOUT_CLASSIFICATION	1.1876193472315227E-5	IMPLEMENTATION
// NetProtocolBufferedIOLibrary	WITHOUT_CLASSIFICATION	0.9998432178634115	WITHOUT_CLASSIFICATION	1.567821365885727E-4	IMPLEMENTATION
// BigDecimalLibrary	WITHOUT_CLASSIFICATION	0.9994903392551018	WITHOUT_CLASSIFICATION	5.096607448981903E-4	IMPLEMENTATION
// TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. // We did it here for now	WITHOUT_CLASSIFICATION	0.9807859861239409	IMPLEMENTATION	0.019214013876059068	WITHOUT_CLASSIFICATION
// Ruby's designation for some platforms, minus version numbers in some cases	WITHOUT_CLASSIFICATION	0.9999769842692793	WITHOUT_CLASSIFICATION	2.301573072064938E-5	IMPLEMENTATION
// that's what JDK5 produces on Windows Vista	WITHOUT_CLASSIFICATION	0.9915521964947569	WITHOUT_CLASSIFICATION	0.008447803505243014	IMPLEMENTATION
// Rubygems is too specific on host cpu so until we have real need lets default to universal //setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));	WITHOUT_CLASSIFICATION	0.9999096398907803	WITHOUT_CLASSIFICATION	9.03601092197071E-5	IMPLEMENTATION
// Our shell scripts pass in non-canonicalized paths, but even if we didn't // anyone who did would become unhappy because Ruby apps expect no relative // operators in the pathname (rubygems, for example).	WITHOUT_CLASSIFICATION	0.9999932455364051	WITHOUT_CLASSIFICATION	6.754463594891612E-6	IMPLEMENTATION
// this set is only for darwin	WITHOUT_CLASSIFICATION	0.9999751745388228	WITHOUT_CLASSIFICATION	2.4825461177176526E-5	IMPLEMENTATION
// DigestLibrary	WITHOUT_CLASSIFICATION	0.9994903392551018	WITHOUT_CLASSIFICATION	5.096607448981903E-4	IMPLEMENTATION
// all errors, just info; do not prevent loading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9769649722942813	WITHOUT_CLASSIFICATION	0.023035027705718716	IMPLEMENTATION
// all errors, just info; do not prevent unloading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9846163550165259	WITHOUT_CLASSIFICATION	0.015383644983474156	IMPLEMENTATION
// do nothing, return dummy version below	WITHOUT_CLASSIFICATION	0.9999632955565732	WITHOUT_CLASSIFICATION	3.670444342677275E-5	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
// line 329	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9995111659685975	WITHOUT_CLASSIFICATION	4.88834031402657E-4	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999135834577045	WITHOUT_CLASSIFICATION	8.641654229543846E-5	IMPLEMENTATION
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9996989541462629	WITHOUT_CLASSIFICATION	3.010458537371066E-4	IMPLEMENTATION
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999255834615736	WITHOUT_CLASSIFICATION	7.441653842639855E-5	IMPLEMENTATION
// shift to yyN	WITHOUT_CLASSIFICATION	0.9995611407061002	WITHOUT_CLASSIFICATION	4.388592938998174E-4	IMPLEMENTATION
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9995058960174332	WITHOUT_CLASSIFICATION	4.941039825667706E-4	IMPLEMENTATION
// leave stack alone	WITHOUT_CLASSIFICATION	0.9997305670705291	WITHOUT_CLASSIFICATION	2.6943292947090856E-4	IMPLEMENTATION
// line 271	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 274	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 303	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 311	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 314	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 317	WITHOUT_CLASSIFICATION	0.9992426005004029	WITHOUT_CLASSIFICATION	7.573994995969739E-4	IMPLEMENTATION
// line 332	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 338	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 341	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 344	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 351	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 358	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 367	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 372	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 378	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 382	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 407	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 411	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 414	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 417	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 420	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 426	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 434	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 443	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 446	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 452	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 457	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 464	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 467	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 470	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 479	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 484	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 486	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 492	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 498	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 501	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 504	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 507	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 510	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 519	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 525	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
// line 537	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 540	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 543	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 546	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 556	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 559	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 563	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 566	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 569	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 575	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 578	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 587	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 596	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 604	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 607	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 610	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 613	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 616	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 634	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 638	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 643	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 646	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 655	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 660	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 667	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 670	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 672	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 696	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 701	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 717	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 720	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 726	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 729	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 732	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 735	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 738	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 751	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 754	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 757	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 760	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 763	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 769	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 772	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 775	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 782	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 788	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 791	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 794	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 797	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 803	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 806	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 809	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 815	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 818	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 821	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 824	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 830	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 833	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 836	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 839	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 842	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 848	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 852	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 858	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 861	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 868	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 871	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 876	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 879	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 883	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 893	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 896	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 899	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 903	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 907	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 915	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 920	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 923	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 926	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 932	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 936	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 940	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 944	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 948	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 956	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 960	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 964	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 967	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 972	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 978	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 980	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 984	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 986	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 996	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1001	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1004	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1008	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1014	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1029	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1032	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1034	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1045	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1048	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1051	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1058	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1070	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1073	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1076	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1079	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1082	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1089	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1097	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1100	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1103	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1107	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1111	WITHOUT_CLASSIFICATION	0.9992434619285102	WITHOUT_CLASSIFICATION	7.565380714897364E-4	IMPLEMENTATION
// line 1113	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1115	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1119	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1130	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1133	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1135	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1137	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1140	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1151	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1154	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1158	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1164	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1175	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1178	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1187	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1189	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1193	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1204	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1207	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1210	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1214	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1234	WITHOUT_CLASSIFICATION	0.999245811303755	WITHOUT_CLASSIFICATION	7.541886962449946E-4	IMPLEMENTATION
// line 1239	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1243	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1247	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1251	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1263	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1269	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1280	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1283	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1290	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1296	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1299	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1302	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1309	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1313	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1315	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1320	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1328	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1335	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1348	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1352	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1358	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1374	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1381	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1387	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1392	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1415	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1431	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1434	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1440	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1443	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1453	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1456	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1462	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1465	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1470	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1477	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1480	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1485	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1488	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1496	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1502	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1510	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1513	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1516	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1533	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1550	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1553	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1556	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1565	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1568	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1571	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1574	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1577	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1587	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1595	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1598	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1600	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1609	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1623	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1626	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1629	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1632	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1638	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1641	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1644	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1649	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1655	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1658	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1661	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1672	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1677	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1687	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1694	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1705	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1708	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1725	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1733	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1742	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1745	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1749	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1757	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1769	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1772	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1775	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1784	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1808	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1814	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1818	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1822	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
/* force for args */	WITHOUT_CLASSIFICATION	0.9998693099767061	WITHOUT_CLASSIFICATION	1.306900232938643E-4	IMPLEMENTATION
/*XXX 0;*/	WITHOUT_CLASSIFICATION	0.9999632642966054	WITHOUT_CLASSIFICATION	3.673570339455358E-5	IMPLEMENTATION
/*                      $$ = $3;*/	WITHOUT_CLASSIFICATION	0.9942413077949818	WITHOUT_CLASSIFICATION	0.005758692205018152	IMPLEMENTATION
/*                  }*/	WITHOUT_CLASSIFICATION	0.9981348493776039	WITHOUT_CLASSIFICATION	0.0018651506223960105	IMPLEMENTATION
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.999577615669519	WITHOUT_CLASSIFICATION	4.223843304809792E-4	IMPLEMENTATION
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9929767477345698	WITHOUT_CLASSIFICATION	0.0070232522654301854	IMPLEMENTATION
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9877472353722563	WITHOUT_CLASSIFICATION	0.012252764627743756	IMPLEMENTATION
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9877472353722563	WITHOUT_CLASSIFICATION	0.012252764627743756	IMPLEMENTATION
/* NOEX_PRIVATE for toplevel */	WITHOUT_CLASSIFICATION	0.9999879563524249	WITHOUT_CLASSIFICATION	1.2043647575177878E-5	IMPLEMENTATION
/*mirko: check*/	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
/* Include pipes on multiple arg type*/	WITHOUT_CLASSIFICATION	0.9781533645917692	WITHOUT_CLASSIFICATION	0.021846635408230886	IMPLEMENTATION
// line 529	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9955658078164124	WITHOUT_CLASSIFICATION	0.004434192183587691	IMPLEMENTATION
/* XXX*/	WITHOUT_CLASSIFICATION	0.9994656408828937	WITHOUT_CLASSIFICATION	5.343591171061773E-4	IMPLEMENTATION
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999872300016688	WITHOUT_CLASSIFICATION	1.2769998331309364E-5	IMPLEMENTATION
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9957093150599975	WITHOUT_CLASSIFICATION	0.004290684940002433	IMPLEMENTATION
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9955658078164124	WITHOUT_CLASSIFICATION	0.004434192183587691	IMPLEMENTATION
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9924745355929265	WITHOUT_CLASSIFICATION	0.007525464407073536	IMPLEMENTATION
// line 1827 "DefaultRubyParser.y"	WITHOUT_CLASSIFICATION	0.9997669197262109	WITHOUT_CLASSIFICATION	2.330802737890883E-4	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9997995263951971	WITHOUT_CLASSIFICATION	2.004736048028231E-4	IMPLEMENTATION
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9994746264795632	WITHOUT_CLASSIFICATION	5.253735204368959E-4	IMPLEMENTATION
// line 7713 "-"	WITHOUT_CLASSIFICATION	0.9992429459873995	WITHOUT_CLASSIFICATION	7.570540126004336E-4	IMPLEMENTATION
// local scopes are argument scopes by default	WITHOUT_CLASSIFICATION	0.9999990237318249	WITHOUT_CLASSIFICATION	9.762681750235203E-7	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999965828319481	WITHOUT_CLASSIFICATION	3.4171680517807995E-6	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999965828319481	WITHOUT_CLASSIFICATION	3.4171680517807995E-6	IMPLEMENTATION
// We know this is a block scope because a local scope cannot be within a local scope // If topScope was itself it would have created a LocalAsgnNode above.	WITHOUT_CLASSIFICATION	0.9999960051955306	WITHOUT_CLASSIFICATION	3.994804469479789E-6	IMPLEMENTATION
// ENEBO: 1.9 has CURR nodes for local/block variables.  We don't.  I believe we follow proper logic	WITHOUT_CLASSIFICATION	0.9997092460679361	WITHOUT_CLASSIFICATION	2.9075393206393123E-4	IMPLEMENTATION
// odd...but it is odd in ruby too.	WITHOUT_CLASSIFICATION	0.9999778806459235	WITHOUT_CLASSIFICATION	2.211935407647296E-5	IMPLEMENTATION
// What linenumber will the source think it starts from?	WITHOUT_CLASSIFICATION	0.9997127081425354	WITHOUT_CLASSIFICATION	2.8729185746461305E-4	IMPLEMENTATION
// Is this inline source (aka -e "...source...")	WITHOUT_CLASSIFICATION	0.9996246158578588	WITHOUT_CLASSIFICATION	3.7538414214123E-4	IMPLEMENTATION
// We parse evals more often in source so assume an eval parse.	WITHOUT_CLASSIFICATION	0.999991076651122	WITHOUT_CLASSIFICATION	8.923348878029247E-6	IMPLEMENTATION
// Should positions added extra IDE-friendly information and leave in all newline nodes	WITHOUT_CLASSIFICATION	0.999999457428002	WITHOUT_CLASSIFICATION	5.425719980490942E-7	IMPLEMENTATION
// Will parser parse Duby grammar Extensions	WITHOUT_CLASSIFICATION	0.9998649846392096	WITHOUT_CLASSIFICATION	1.3501536079039815E-4	IMPLEMENTATION
// Should we display extra debug information while parsing?	WITHOUT_CLASSIFICATION	0.9999444711981648	WITHOUT_CLASSIFICATION	5.55288018351771E-5	IMPLEMENTATION
// __END__ marker offset (-1 means none present)	WITHOUT_CLASSIFICATION	0.999840171212683	WITHOUT_CLASSIFICATION	1.5982878731701813E-4	IMPLEMENTATION
// Parser states:	WITHOUT_CLASSIFICATION	0.9994940341546579	WITHOUT_CLASSIFICATION	5.059658453421817E-4	IMPLEMENTATION
// Is the parser current within a singleton (value is number of nested singletons)	WITHOUT_CLASSIFICATION	0.9995912969659682	WITHOUT_CLASSIFICATION	4.0870303403189195E-4	IMPLEMENTATION
// Is the parser currently within a method definition	WITHOUT_CLASSIFICATION	0.9946837444348037	WITHOUT_CLASSIFICATION	0.005316255565196376	IMPLEMENTATION
// LOCALVAR	WITHOUT_CLASSIFICATION	0.9994903392551018	WITHOUT_CLASSIFICATION	5.096607448981903E-4	IMPLEMENTATION
// CONSTANT	WITHOUT_CLASSIFICATION	0.9994903392551018	WITHOUT_CLASSIFICATION	5.096607448981903E-4	IMPLEMENTATION
// INSTANCE VARIABLE	WITHOUT_CLASSIFICATION	0.9994903392551018	WITHOUT_CLASSIFICATION	5.096607448981903E-4	IMPLEMENTATION
// Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])	WITHOUT_CLASSIFICATION	0.9997771828049389	WITHOUT_CLASSIFICATION	2.2281719506101844E-4	IMPLEMENTATION
/* MRI: block_append */	WITHOUT_CLASSIFICATION	0.999984794509925	WITHOUT_CLASSIFICATION	1.5205490075013205E-5	IMPLEMENTATION
// Reduces overhead in interp by not set position every single line we encounter. 	WITHOUT_CLASSIFICATION	0.9946023519010949	WITHOUT_CLASSIFICATION	0.005397648098905134	IMPLEMENTATION
// Assumption: tail is never a list node	WITHOUT_CLASSIFICATION	0.9991476583879821	WITHOUT_CLASSIFICATION	8.523416120179817E-4	IMPLEMENTATION
//        return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));	WITHOUT_CLASSIFICATION	0.9999223910115688	WITHOUT_CLASSIFICATION	7.760898843129475E-5	IMPLEMENTATION
// Node	WITHOUT_CLASSIFICATION	0.999989168537467	WITHOUT_CLASSIFICATION	1.0831462532942887E-5	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9412566975828963	WITHOUT_CLASSIFICATION	0.058743302417103634	IMPLEMENTATION
/*case CONSTNODE:                handleUselessWarn(node, "a constant"); return;*/	WITHOUT_CLASSIFICATION	0.999567660477331	WITHOUT_CLASSIFICATION	4.3233952266901626E-4	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9412566975828963	WITHOUT_CLASSIFICATION	0.058743302417103634	IMPLEMENTATION
/*case CLASSNODE: case COLON2NODE:                handleUselessWarn(node, "::"); return;*/	WITHOUT_CLASSIFICATION	0.9992843144005467	WITHOUT_CLASSIFICATION	7.156855994532928E-4	IMPLEMENTATION
/*case SELFNODE:                handleUselessWarn(node, "self"); return;*/	WITHOUT_CLASSIFICATION	0.999567660477331	WITHOUT_CLASSIFICATION	4.3233952266901626E-4	IMPLEMENTATION
// FIXME: DSTR,EVSTR,STR: warning "string literal in condition"	WITHOUT_CLASSIFICATION	0.9913009264113495	WITHOUT_CLASSIFICATION	0.008699073588650536	IMPLEMENTATION
/* MRI: range_op */	WITHOUT_CLASSIFICATION	0.9999158260374922	WITHOUT_CLASSIFICATION	8.4173962507808E-5	IMPLEMENTATION
// Block and block pass passed in at same time....uh oh	WITHOUT_CLASSIFICATION	0.9999826873079888	WITHOUT_CLASSIFICATION	1.731269201123885E-5	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.9999889436623457	WITHOUT_CLASSIFICATION	1.1056337654331047E-5	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.9999889436623457	WITHOUT_CLASSIFICATION	1.1056337654331047E-5	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.9999889436623457	WITHOUT_CLASSIFICATION	1.1056337654331047E-5	IMPLEMENTATION
// tail must be EvStrNode at this point 	WITHOUT_CLASSIFICATION	0.9997887951873801	WITHOUT_CLASSIFICATION	2.1120481262002977E-4	IMPLEMENTATION
//Do not add an empty string node	WITHOUT_CLASSIFICATION	0.9999374455007776	WITHOUT_CLASSIFICATION	6.255449922241881E-5	IMPLEMENTATION
// Zero-Argument declaration	WITHOUT_CLASSIFICATION	0.9999412872223723	WITHOUT_CLASSIFICATION	5.871277762762303E-5	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999135834577045	WITHOUT_CLASSIFICATION	8.641654229543846E-5	IMPLEMENTATION
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999255834615736	WITHOUT_CLASSIFICATION	7.441653842639855E-5	IMPLEMENTATION
// shift to yyN	WITHOUT_CLASSIFICATION	0.9995611407061002	WITHOUT_CLASSIFICATION	4.388592938998174E-4	IMPLEMENTATION
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9995058960174332	WITHOUT_CLASSIFICATION	4.941039825667706E-4	IMPLEMENTATION
// leave stack alone	WITHOUT_CLASSIFICATION	0.9997305670705291	WITHOUT_CLASSIFICATION	2.6943292947090856E-4	IMPLEMENTATION
// line 321	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 351	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 382	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 417	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 420	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 423	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 426	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 280	WITHOUT_CLASSIFICATION	0.9992440455568319	WITHOUT_CLASSIFICATION	7.559544431680846E-4	IMPLEMENTATION
// line 283	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 296	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 324	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 327	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 331	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 333	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 336	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 342	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 345	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 348	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 354	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 368	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 377	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 388	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 392	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 397	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 429	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 432	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 436	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 445	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 448	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 454	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 459	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 466	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 469	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 478	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 481	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 488	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 494	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 497	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 503	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 506	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 509	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 512	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 521	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 526	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 540	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 543	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 546	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 566	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 610	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 672	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 691	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 696	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 772	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 782	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 785	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 788	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 791	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 534	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 549	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 552	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 558	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 561	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 571	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 574	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 579	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 586	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 589	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 592	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 595	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 598	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 623	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 627	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 630	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 633	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 639	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 648	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 657	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 661	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 666	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 678	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 682	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 688	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 699	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 706	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 708	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 727	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 737	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 753	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 779	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 801	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 808	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 811	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 817	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 842	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 845	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 848	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 893	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 899	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 932	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 944	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 960	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 980	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1004	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1038	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 820	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 826	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 829	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 832	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 851	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 857	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 860	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 863	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 866	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 869	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 875	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 884	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 887	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 890	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 902	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 909	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 912	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 916	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 922	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 928	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 941	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 947	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 951	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 955	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 965	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 969	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 977	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 983	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1013	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1023	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1035	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1041	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1043	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1054	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1057	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1060	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1069	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1075	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1105	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1111	WITHOUT_CLASSIFICATION	0.9992434619285102	WITHOUT_CLASSIFICATION	7.565380714897364E-4	IMPLEMENTATION
// line 1122	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1130	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1140	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1158	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1204	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1207	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1247	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1251	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1261	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1078	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1084	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1087	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1090	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1093	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1114	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1116	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1118	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1124	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1126	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1138	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1144	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1149	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1155	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1162	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1173	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1179	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1182	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1190	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1196	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1213	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1217	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1231	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1236	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1244	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1254	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1258	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1264	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1270	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1273	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1276	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1279	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1282	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1289	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1292	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1295	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1298	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1305	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1348	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1387	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1392	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1448	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1462	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1470	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1496	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1502	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1595	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1598	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1308	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1311	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1317	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1323	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1326	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1329	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1337	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1342	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1345	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1354	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1359	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1366	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1369	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1373	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1377	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1383	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1399	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1401	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1406	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1417	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1424	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1427	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1430	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1433	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1436	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1442	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1445	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1458	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1464	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1489	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1493	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1507	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1519	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1532	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1538	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1542	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1557	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1573	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1591	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1615	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1629	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1632	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1705	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1716	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1725	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1742	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1749	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1818	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1822	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1607	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1610	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1622	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1625	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1636	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1639	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1647	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1651	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1657	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1660	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1663	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1678	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1702	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1711	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1719	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1722	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1731	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1734	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1738	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1746	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1756	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1758	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1761	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1767	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1776	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1782	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1785	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1788	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1791	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1797	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1800	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1803	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1806	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1809	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1815	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1825	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1828	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1831	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1847	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9877472353722563	WITHOUT_CLASSIFICATION	0.012252764627743756	IMPLEMENTATION
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9877472353722563	WITHOUT_CLASSIFICATION	0.012252764627743756	IMPLEMENTATION
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9955658078164124	WITHOUT_CLASSIFICATION	0.004434192183587691	IMPLEMENTATION
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999872300016688	WITHOUT_CLASSIFICATION	1.2769998331309364E-5	IMPLEMENTATION
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9957093150599975	WITHOUT_CLASSIFICATION	0.004290684940002433	IMPLEMENTATION
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9955658078164124	WITHOUT_CLASSIFICATION	0.004434192183587691	IMPLEMENTATION
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9924745355929265	WITHOUT_CLASSIFICATION	0.007525464407073536	IMPLEMENTATION
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9998442935603923	WITHOUT_CLASSIFICATION	1.5570643960777388E-4	IMPLEMENTATION
// line 1854	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1869	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1872	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1877	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1886	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1898	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1902	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1905	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1911	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1918	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1935	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1938	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1942	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1948	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1960	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1963	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1968	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1972	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1982	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1995	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 2000	WITHOUT_CLASSIFICATION	0.9992433310475466	WITHOUT_CLASSIFICATION	7.56668952453323E-4	IMPLEMENTATION
// line 2006	WITHOUT_CLASSIFICATION	0.9992429265049769	WITHOUT_CLASSIFICATION	7.570734950231759E-4	IMPLEMENTATION
// line 2010	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
/* We may need to subtract addition offset off of first */	WITHOUT_CLASSIFICATION	0.999990148683328	WITHOUT_CLASSIFICATION	9.851316671966616E-6	IMPLEMENTATION
/* string fragment (we optimistically take one off in*/	WITHOUT_CLASSIFICATION	0.9999208835029884	WITHOUT_CLASSIFICATION	7.911649701166629E-5	IMPLEMENTATION
/* ParserSupport.literal_concat).  Check token length*/	WITHOUT_CLASSIFICATION	0.988957948586764	WITHOUT_CLASSIFICATION	0.011042051413236123	IMPLEMENTATION
/* and subtract as neeeded.*/	WITHOUT_CLASSIFICATION	0.9988130324429799	WITHOUT_CLASSIFICATION	0.001186967557020066	IMPLEMENTATION
/*                    $$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);  */	WITHOUT_CLASSIFICATION	0.9999803637812256	WITHOUT_CLASSIFICATION	1.963621877450089E-5	IMPLEMENTATION
/* ENEBO: arg surrounded by in_defined set/unset*/	WITHOUT_CLASSIFICATION	0.996360519856602	WITHOUT_CLASSIFICATION	0.003639480143398054	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9997995263951971	WITHOUT_CLASSIFICATION	2.004736048028231E-4	IMPLEMENTATION
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9994746264795632	WITHOUT_CLASSIFICATION	5.253735204368959E-4	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999965828319481	WITHOUT_CLASSIFICATION	3.4171680517807995E-6	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999965828319481	WITHOUT_CLASSIFICATION	3.4171680517807995E-6	IMPLEMENTATION
/* ENEBO: Removed !compile_for_eval which probably is to reduce warnings*/	WITHOUT_CLASSIFICATION	0.9706867760479113	WITHOUT_CLASSIFICATION	0.029313223952088626	IMPLEMENTATION
/* was $$ = null;*/	WITHOUT_CLASSIFICATION	0.995317221037203	WITHOUT_CLASSIFICATION	0.004682778962797001	IMPLEMENTATION
// line 2019 "Ruby19Parser.y"	WITHOUT_CLASSIFICATION	0.9998630765309348	WITHOUT_CLASSIFICATION	1.3692346906522804E-4	IMPLEMENTATION
// line 8143 "-"	WITHOUT_CLASSIFICATION	0.9992429459873995	WITHOUT_CLASSIFICATION	7.570540126004336E-4	IMPLEMENTATION
// we know variables cannot be null since localstaticscope will create a 0 length one.	WITHOUT_CLASSIFICATION	0.9999093773804569	WITHOUT_CLASSIFICATION	9.062261954316239E-5	IMPLEMENTATION
// No bit math to store level since we know level is zero for this case	WITHOUT_CLASSIFICATION	0.9991612522363054	WITHOUT_CLASSIFICATION	8.387477636947402E-4	IMPLEMENTATION
// Next immediate scope.  Variable and constant scoping rules make use of this variable // in different ways.	WITHOUT_CLASSIFICATION	0.9991643735011428	WITHOUT_CLASSIFICATION	8.356264988571673E-4	IMPLEMENTATION
// Live reference to module	WITHOUT_CLASSIFICATION	0.9999737601873399	WITHOUT_CLASSIFICATION	2.6239812660205433E-5	IMPLEMENTATION
// Next CRef down the lexical structure	WITHOUT_CLASSIFICATION	0.9999223398499307	WITHOUT_CLASSIFICATION	7.766015006930754E-5	IMPLEMENTATION
// Our name holder (offsets are assigned as variables are added	WITHOUT_CLASSIFICATION	0.999997514761429	WITHOUT_CLASSIFICATION	2.485238571077482E-6	IMPLEMENTATION
// number of variables in this scope representing required arguments	WITHOUT_CLASSIFICATION	0.9998725782650761	WITHOUT_CLASSIFICATION	1.2742173492391612E-4	IMPLEMENTATION
// number of variables in this scope representing optional arguments	WITHOUT_CLASSIFICATION	0.9999575798889175	WITHOUT_CLASSIFICATION	4.242011108241124E-5	IMPLEMENTATION
// index of variable that represents a "rest" arg	WITHOUT_CLASSIFICATION	0.9998488546723786	WITHOUT_CLASSIFICATION	1.5114532762135495E-4	IMPLEMENTATION
// Note that this object equality check is intentional, to ensure // the string and its interned version are the same object.	WITHOUT_CLASSIFICATION	0.9999979352930503	WITHOUT_CLASSIFICATION	2.0647069497922443E-6	IMPLEMENTATION
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999629544488028	WITHOUT_CLASSIFICATION	3.70455511971491E-5	IMPLEMENTATION
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999629544488028	WITHOUT_CLASSIFICATION	3.70455511971491E-5	IMPLEMENTATION
/* Note: Only used by compiler until it can use getConstant again or use some other refactoring */	WITHOUT_CLASSIFICATION	0.9997288932798684	WITHOUT_CLASSIFICATION	2.7110672013164145E-4	IMPLEMENTATION
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9974800784470566	WITHOUT_CLASSIFICATION	0.0025199215529435022	IMPLEMENTATION
/* Try and unload the autoload specified from internedName */	WITHOUT_CLASSIFICATION	0.9999959129905326	WITHOUT_CLASSIFICATION	4.08700946747765E-6	IMPLEMENTATION
// We override that the logic which uses this	WITHOUT_CLASSIFICATION	0.9996504220699309	WITHOUT_CLASSIFICATION	3.4957793006907796E-4	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999943119141076	WITHOUT_CLASSIFICATION	5.688085892470072E-6	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9998887454382027	WITHOUT_CLASSIFICATION	1.1125456179727316E-4	IMPLEMENTATION
// source extensions	WITHOUT_CLASSIFICATION	0.9998683512174931	WITHOUT_CLASSIFICATION	1.316487825070001E-4	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9998887454382027	WITHOUT_CLASSIFICATION	1.1125456179727316E-4	IMPLEMENTATION
// . Array given to rest should pass itself // . Array with rest + other args should extract array // . Array with multiple values and NO rest should extract args if there are more than one argument	WITHOUT_CLASSIFICATION	0.9999678043284093	WITHOUT_CLASSIFICATION	3.219567159068918E-5	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9996377815868499	WITHOUT_CLASSIFICATION	3.6221841315008075E-4	IMPLEMENTATION
// Is this thread currently with in a function trace?	WITHOUT_CLASSIFICATION	0.9997581330188992	WITHOUT_CLASSIFICATION	2.4186698110095471E-4	IMPLEMENTATION
// Is this thread currently doing an defined? defined should set things like $!	WITHOUT_CLASSIFICATION	0.9785498914875665	WITHOUT_CLASSIFICATION	0.021450108512433484	IMPLEMENTATION
//private UnsynchronizedStack parentStack;	WITHOUT_CLASSIFICATION	0.9996113683843595	WITHOUT_CLASSIFICATION	3.886316156404788E-4	IMPLEMENTATION
//private UnsynchronizedStack frameStack;	WITHOUT_CLASSIFICATION	0.9996113683843595	WITHOUT_CLASSIFICATION	3.886316156404788E-4	IMPLEMENTATION
// List of active dynamic scopes.  Each of these may have captured other dynamic scopes // to implement closures.	WITHOUT_CLASSIFICATION	0.9723126710395075	WITHOUT_CLASSIFICATION	0.027687328960492544	IMPLEMENTATION
// File where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999464838777582	WITHOUT_CLASSIFICATION	5.351612224192058E-5	IMPLEMENTATION
// Line where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9998229202050141	WITHOUT_CLASSIFICATION	1.770797949858963E-4	IMPLEMENTATION
// In certain places, like grep, we don't use real frames for the // call blocks. This has the effect of not setting the backref in // the correct frame - this delta is activated to the place where // the grep is running in so that the backref will be set in an // appropriate place.	WITHOUT_CLASSIFICATION	0.9965922451577038	WITHOUT_CLASSIFICATION	0.0034077548422962486	IMPLEMENTATION
// TOPLEVEL self and a few others want a top-level scope.  We create this one right // away and then pass it into top-level parse so it ends up being the top level.	WITHOUT_CLASSIFICATION	0.9998229755877621	WITHOUT_CLASSIFICATION	1.7702441223798977E-4	IMPLEMENTATION
//////////////////// CATCH MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9994835395420296	WITHOUT_CLASSIFICATION	5.164604579703605E-4	IMPLEMENTATION
//////////////////// FRAME MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9994835395420296	WITHOUT_CLASSIFICATION	5.164604579703605E-4	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9934227242795237	WITHOUT_CLASSIFICATION	0.006577275720476249	IMPLEMENTATION
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9998385357656606	WITHOUT_CLASSIFICATION	1.6146423433934686E-4	IMPLEMENTATION
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9998385357656606	WITHOUT_CLASSIFICATION	1.6146423433934686E-4	IMPLEMENTATION
// look for mangling markers for compiled Ruby in method name	WITHOUT_CLASSIFICATION	0.9997327301442486	WITHOUT_CLASSIFICATION	2.672698557514145E-4	IMPLEMENTATION
// if it's not a rescue or ensure, there's a frame associated, so decrement	WITHOUT_CLASSIFICATION	0.9975123125262203	WITHOUT_CLASSIFICATION	0.0024876874737796723	IMPLEMENTATION
// look for __file__ method name for compiled roots	WITHOUT_CLASSIFICATION	0.9990433782826238	WITHOUT_CLASSIFICATION	9.566217173762022E-4	IMPLEMENTATION
// All entries following removed node can stay // in list, but all preceding ones need to be // cloned.	WITHOUT_CLASSIFICATION	0.9998144443373225	WITHOUT_CLASSIFICATION	1.8555566267746456E-4	IMPLEMENTATION
// required and optional only	WITHOUT_CLASSIFICATION	0.9999187635352222	WITHOUT_CLASSIFICATION	8.123646477770414E-5	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9998887454382027	WITHOUT_CLASSIFICATION	1.1125456179727316E-4	IMPLEMENTATION
// look for mangling markers for bound, unframed methods in class name	WITHOUT_CLASSIFICATION	0.9999555305588569	WITHOUT_CLASSIFICATION	4.446944114305927E-5	IMPLEMENTATION
// set the binding's frame's "previous" file and line to current, so // trace will show who called the block	WITHOUT_CLASSIFICATION	0.9999062725565934	WITHOUT_CLASSIFICATION	9.372744340662707E-5	IMPLEMENTATION
// framed invokers will have Ruby frames associated with them	WITHOUT_CLASSIFICATION	0.9999554583888749	WITHOUT_CLASSIFICATION	4.4541611125092865E-5	IMPLEMENTATION
// look for mangling markers for bound, framed methods in class name	WITHOUT_CLASSIFICATION	0.9999555305588569	WITHOUT_CLASSIFICATION	4.446944114305927E-5	IMPLEMENTATION
// unframed invokers have no Ruby frames, so pull from class name // but use current frame as file and line	WITHOUT_CLASSIFICATION	0.9999941629785304	WITHOUT_CLASSIFICATION	5.837021469677804E-6	IMPLEMENTATION
// try to mine out a Ruby frame using our list of interpreter entry-point markers	WITHOUT_CLASSIFICATION	0.9999980415794587	WITHOUT_CLASSIFICATION	1.9584205412975682E-6	IMPLEMENTATION
// Frame matches one of our markers for "interpreted" calls	WITHOUT_CLASSIFICATION	0.9999925396008718	WITHOUT_CLASSIFICATION	7.460399128266275E-6	IMPLEMENTATION
// Frame is extraneous runtime information, skip it unless debug	WITHOUT_CLASSIFICATION	0.9999132830219146	WITHOUT_CLASSIFICATION	8.671697808548234E-5	IMPLEMENTATION
/*     * Determine what sort of assigner should be used for the provided 'iter' (e.g. block).     * Assigner provides just the right logic for assigning values to local parameters of the     * block.     *     * This method also has a second optimization which is to set 'noargblock' in the case that     * the block is a block which accepts no arguments.  The primary reason for this second     * optimization is that in the case of a yield with a RubyArray we will bypass some logic     * processing the RubyArray into a proper form (only to then not do anythign with it).  A     * secondary benefit is that a simple boolean seems to optimize by hotspot much faster     * than the zero arg assigner.     */	WITHOUT_CLASSIFICATION	0.9999995337054695	WITHOUT_CLASSIFICATION	4.662945306404208E-7	IMPLEMENTATION
// new scope for this invocation of the block, based on parent scope	WITHOUT_CLASSIFICATION	0.9998828674105532	WITHOUT_CLASSIFICATION	1.1713258944676123E-4	IMPLEMENTATION
// No argument blocks	WITHOUT_CLASSIFICATION	0.9999886060102028	WITHOUT_CLASSIFICATION	1.1393989797192307E-5	IMPLEMENTATION
// just push the same empty scope, since we won't use one	WITHOUT_CLASSIFICATION	0.9999995575385235	WITHOUT_CLASSIFICATION	4.42461476370865E-7	IMPLEMENTATION
// Not sure if this is actually possible, but better safe than sorry	WITHOUT_CLASSIFICATION	0.9999269904151722	WITHOUT_CLASSIFICATION	7.300958482782185E-5	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9998637264401384	WITHOUT_CLASSIFICATION	1.3627355986154733E-4	IMPLEMENTATION
// This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).	WITHOUT_CLASSIFICATION	0.9999567620227845	WITHOUT_CLASSIFICATION	4.323797721555056E-5	IMPLEMENTATION
// Highest reserved id	WITHOUT_CLASSIFICATION	0.9999516799822104	WITHOUT_CLASSIFICATION	4.8320017789649634E-5	IMPLEMENTATION
// binary typed calls	WITHOUT_CLASSIFICATION	0.9998131011277454	WITHOUT_CLASSIFICATION	1.8689887225470945E-4	IMPLEMENTATION
// id must always be even	WITHOUT_CLASSIFICATION	0.9999503499951898	WITHOUT_CLASSIFICATION	4.9650004810073815E-5	IMPLEMENTATION
// with block pass	WITHOUT_CLASSIFICATION	0.9991270748329153	WITHOUT_CLASSIFICATION	8.72925167084798E-4	IMPLEMENTATION
// no block	WITHOUT_CLASSIFICATION	0.9993942591218069	WITHOUT_CLASSIFICATION	6.057408781930155E-4	IMPLEMENTATION
// with block literal (iter)	WITHOUT_CLASSIFICATION	0.9998242248552384	WITHOUT_CLASSIFICATION	1.7577514476150511E-4	IMPLEMENTATION
//            assert false : "can this happen?";	WITHOUT_CLASSIFICATION	0.9987881929920881	WITHOUT_CLASSIFICATION	0.0012118070079118067	IMPLEMENTATION
// if we have multiple asgn with just *args, need a special type for that	WITHOUT_CLASSIFICATION	0.9999639670674704	WITHOUT_CLASSIFICATION	3.603293252958649E-5	IMPLEMENTATION
// && args.getMaxArgumentsCount() != 1) {	WITHOUT_CLASSIFICATION	0.9999063777371171	WITHOUT_CLASSIFICATION	9.362226288292928E-5	IMPLEMENTATION
//            return warnMultiReturnNil(ruby);	WITHOUT_CLASSIFICATION	0.9999230747695732	WITHOUT_CLASSIFICATION	7.692523042678039E-5	IMPLEMENTATION
// ensure zero is devoted to no method name	WITHOUT_CLASSIFICATION	0.9995400103911259	WITHOUT_CLASSIFICATION	4.599896088741087E-4	IMPLEMENTATION
// predefine a few other methods we invoke directly elsewhere	WITHOUT_CLASSIFICATION	0.999398571756579	WITHOUT_CLASSIFICATION	6.014282434210782E-4	IMPLEMENTATION
// fast and safe respond_to? call site logic	WITHOUT_CLASSIFICATION	0.9998428101043059	WITHOUT_CLASSIFICATION	1.5718989569410562E-4	IMPLEMENTATION
// Static scoping information for this scope	WITHOUT_CLASSIFICATION	0.9999131809228212	WITHOUT_CLASSIFICATION	8.681907717871619E-5	IMPLEMENTATION
// Captured dynamic scopes	WITHOUT_CLASSIFICATION	0.9999281277059566	WITHOUT_CLASSIFICATION	7.187229404338539E-5	IMPLEMENTATION
// Backref for $~, $1, etc	WITHOUT_CLASSIFICATION	0.9999591724955045	WITHOUT_CLASSIFICATION	4.082750449550498E-5	IMPLEMENTATION
// Lastline	WITHOUT_CLASSIFICATION	0.9994903392551018	WITHOUT_CLASSIFICATION	5.096607448981903E-4	IMPLEMENTATION
// No binding scope so we should create one	WITHOUT_CLASSIFICATION	0.9998468590849405	WITHOUT_CLASSIFICATION	1.5314091505941988E-4	IMPLEMENTATION
// bindings scopes must always be ManyVars scopes since evals can grow them	WITHOUT_CLASSIFICATION	0.999859436301402	WITHOUT_CLASSIFICATION	1.4056369859805743E-4	IMPLEMENTATION
// Helper function to give a good view of current dynamic scope with captured scopes	WITHOUT_CLASSIFICATION	0.999955510365038	WITHOUT_CLASSIFICATION	4.4489634961872605E-5	IMPLEMENTATION
// try count specific args to determine required	WITHOUT_CLASSIFICATION	0.9998316292235253	WITHOUT_CLASSIFICATION	1.6837077647459276E-4	IMPLEMENTATION
// Some helper functions:	WITHOUT_CLASSIFICATION	0.9999437629500745	WITHOUT_CLASSIFICATION	5.6237049925419156E-5	IMPLEMENTATION
// silently ignore	WITHOUT_CLASSIFICATION	0.9990553303007215	WITHOUT_CLASSIFICATION	9.446696992785777E-4	IMPLEMENTATION
// used by compiler	WITHOUT_CLASSIFICATION	0.9997083189299568	WITHOUT_CLASSIFICATION	2.916810700432018E-4	IMPLEMENTATION
// initialize the static settings to determine which factory to use	WITHOUT_CLASSIFICATION	0.9999887885262703	WITHOUT_CLASSIFICATION	1.1211473729813264E-5	IMPLEMENTATION
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9998442935603923	WITHOUT_CLASSIFICATION	1.5570643960777388E-4	IMPLEMENTATION
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9999208145521714	WITHOUT_CLASSIFICATION	7.918544782853784E-5	IMPLEMENTATION
//  Single node on list	WITHOUT_CLASSIFICATION	0.9998248294687039	WITHOUT_CLASSIFICATION	1.751705312961239E-4	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9998796036349088	WITHOUT_CLASSIFICATION	1.2039636509123084E-4	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9998904989264179	WITHOUT_CLASSIFICATION	1.0950107358212745E-4	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9996377815868499	WITHOUT_CLASSIFICATION	3.6221841315008075E-4	IMPLEMENTATION
// Note: In Ruby 1.9 all of this logic can go away since they will require explicit // bindings for evals.	WITHOUT_CLASSIFICATION	0.9999172025569875	WITHOUT_CLASSIFICATION	8.279744301261313E-5	IMPLEMENTATION
// We only define one special dynamic scope per 'logical' binding.  So all bindings for // the same scope should share the same dynamic scope.  This allows multiple evals with // different different bindings in the same scope to see the same stuff.	WITHOUT_CLASSIFICATION	0.9999977318714425	WITHOUT_CLASSIFICATION	2.2681285574173218E-6	IMPLEMENTATION
// If the next scope out has the same binding scope as this scope it means // we are evaling within an eval and in that case we should be sharing the same // binding scope.	WITHOUT_CLASSIFICATION	0.9999954998515689	WITHOUT_CLASSIFICATION	4.500148431117516E-6	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999987656896216	WITHOUT_CLASSIFICATION	1.234310378348238E-6	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999987656896216	WITHOUT_CLASSIFICATION	1.234310378348238E-6	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999939221556828	WITHOUT_CLASSIFICATION	6.077844317116573E-6	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999939221556828	WITHOUT_CLASSIFICATION	6.077844317116573E-6	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999939221556828	WITHOUT_CLASSIFICATION	6.077844317116573E-6	IMPLEMENTATION
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999329625093561	WITHOUT_CLASSIFICATION	6.70374906437937E-5	IMPLEMENTATION
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999329625093561	WITHOUT_CLASSIFICATION	6.70374906437937E-5	IMPLEMENTATION
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999272837254295	WITHOUT_CLASSIFICATION	7.271627457047442E-5	IMPLEMENTATION
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999272837254295	WITHOUT_CLASSIFICATION	7.271627457047442E-5	IMPLEMENTATION
/*     * This is the proper behavior for all non-expanded assigners which have a pre > 0.  The rest     * override this.     */	WITHOUT_CLASSIFICATION	0.9999981988698725	WITHOUT_CLASSIFICATION	1.8011301274559683E-6	IMPLEMENTATION
/*     * This is the proper behavior for all non-expanded assigners.     */	WITHOUT_CLASSIFICATION	0.9999976340068993	WITHOUT_CLASSIFICATION	2.3659931006409636E-6	IMPLEMENTATION
// prefill ?	WITHOUT_CLASSIFICATION	0.9995437532518467	WITHOUT_CLASSIFICATION	4.562467481531731E-4	IMPLEMENTATION
// prefill ?	WITHOUT_CLASSIFICATION	0.9995437532518467	WITHOUT_CLASSIFICATION	4.562467481531731E-4	IMPLEMENTATION
// MUST be called from synchronized/locked block! // should only be called by variableTableStore/variableTableFastStore	WITHOUT_CLASSIFICATION	0.999998954078163	WITHOUT_CLASSIFICATION	1.0459218370764144E-6	IMPLEMENTATION
// retrieve method // module // name	WITHOUT_CLASSIFICATION	0.9989674359930942	WITHOUT_CLASSIFICATION	0.0010325640069058521	IMPLEMENTATION
// call is ok, punch it!	WITHOUT_CLASSIFICATION	0.9999709001023626	WITHOUT_CLASSIFICATION	2.9099897637427445E-5	IMPLEMENTATION
// if undefined, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999616165100768	WITHOUT_CLASSIFICATION	3.838348992320815E-5	IMPLEMENTATION
// if we're not attempting to invoke method_missing and method is not visible, branch to method_missing	WITHOUT_CLASSIFICATION	0.9997368706135827	WITHOUT_CLASSIFICATION	2.6312938641732893E-4	IMPLEMENTATION
// method object already present, push various args // tc // self // klazz // name	WITHOUT_CLASSIFICATION	0.9996432816977366	WITHOUT_CLASSIFICATION	3.567183022634505E-4	IMPLEMENTATION
// if it's method_missing, just invoke it	WITHOUT_CLASSIFICATION	0.9999712699725083	WITHOUT_CLASSIFICATION	2.873002749169169E-5	IMPLEMENTATION
// invoke callMethodMissing	WITHOUT_CLASSIFICATION	0.9999118926604009	WITHOUT_CLASSIFICATION	8.81073395990971E-5	IMPLEMENTATION
// caller	WITHOUT_CLASSIFICATION	0.9999918274349479	WITHOUT_CLASSIFICATION	8.172565052104557E-6	IMPLEMENTATION
// calltype // block	WITHOUT_CLASSIFICATION	0.9993429764523386	WITHOUT_CLASSIFICATION	6.570235476614226E-4	IMPLEMENTATION
// if no exception raised, jump to end to leave result on stack for return	WITHOUT_CLASSIFICATION	0.9999840521314025	WITHOUT_CLASSIFICATION	1.5947868597503058E-5	IMPLEMENTATION
// load arity for check	WITHOUT_CLASSIFICATION	0.9999451550339762	WITHOUT_CLASSIFICATION	5.4844966023925335E-5	IMPLEMENTATION
// throw	WITHOUT_CLASSIFICATION	0.9999900527545613	WITHOUT_CLASSIFICATION	9.947245438726929E-6	IMPLEMENTATION
// load arity for error	WITHOUT_CLASSIFICATION	0.9997756204755992	WITHOUT_CLASSIFICATION	2.2437952440083284E-4	IMPLEMENTATION
// arity ok, continue	WITHOUT_CLASSIFICATION	0.9999012342351958	WITHOUT_CLASSIFICATION	9.87657648041434E-5	IMPLEMENTATION
//InvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9996940498953022	WITHOUT_CLASSIFICATION	3.059501046977244E-4	IMPLEMENTATION
// ENEBO: Perhaps slow but simple for now	WITHOUT_CLASSIFICATION	0.9999115412073583	WITHOUT_CLASSIFICATION	8.845879264167639E-5	IMPLEMENTATION
// FastInvocationCallback	WITHOUT_CLASSIFICATION	0.999907900922588	WITHOUT_CLASSIFICATION	9.209907741204226E-5	IMPLEMENTATION
// InvocationCallback	WITHOUT_CLASSIFICATION	0.999907900922588	WITHOUT_CLASSIFICATION	9.209907741204226E-5	IMPLEMENTATION
//DumpingInvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9994792531202606	WITHOUT_CLASSIFICATION	5.20746879739313E-4	IMPLEMENTATION
// for fast lookup: encoding entry => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999702752975839	WITHOUT_CLASSIFICATION	2.972470241608735E-5	IMPLEMENTATION
// for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999674909401876	WITHOUT_CLASSIFICATION	3.250905981251521E-5	IMPLEMENTATION
// load the encoding	WITHOUT_CLASSIFICATION	0.9997239182554707	WITHOUT_CLASSIFICATION	2.7608174452925125E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9998894853540752	WITHOUT_CLASSIFICATION	1.1051464592483886E-4	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9998894853540752	WITHOUT_CLASSIFICATION	1.1051464592483886E-4	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9998894853540752	WITHOUT_CLASSIFICATION	1.1051464592483886E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9998525087745803	WITHOUT_CLASSIFICATION	1.4749122541965693E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9998525087745803	WITHOUT_CLASSIFICATION	1.4749122541965693E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9998525087745803	WITHOUT_CLASSIFICATION	1.4749122541965693E-4	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9998525087745803	WITHOUT_CLASSIFICATION	1.4749122541965693E-4	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9998525087745803	WITHOUT_CLASSIFICATION	1.4749122541965693E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999859498647076	WITHOUT_CLASSIFICATION	1.4050135292404395E-4	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999859498647076	WITHOUT_CLASSIFICATION	1.4050135292404395E-4	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999859498647076	WITHOUT_CLASSIFICATION	1.4050135292404395E-4	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999859498647076	WITHOUT_CLASSIFICATION	1.4050135292404395E-4	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999859498647076	WITHOUT_CLASSIFICATION	1.4050135292404395E-4	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999859498647076	WITHOUT_CLASSIFICATION	1.4050135292404395E-4	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999859498647076	WITHOUT_CLASSIFICATION	1.4050135292404395E-4	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999859498647076	WITHOUT_CLASSIFICATION	1.4050135292404395E-4	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999859498647076	WITHOUT_CLASSIFICATION	1.4050135292404395E-4	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999859498647076	WITHOUT_CLASSIFICATION	1.4050135292404395E-4	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999859498647076	WITHOUT_CLASSIFICATION	1.4050135292404395E-4	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999859498647076	WITHOUT_CLASSIFICATION	1.4050135292404395E-4	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999859498647076	WITHOUT_CLASSIFICATION	1.4050135292404395E-4	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999859498647076	WITHOUT_CLASSIFICATION	1.4050135292404395E-4	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999859498647076	WITHOUT_CLASSIFICATION	1.4050135292404395E-4	IMPLEMENTATION
// If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs	WITHOUT_CLASSIFICATION	0.9999976972197087	WITHOUT_CLASSIFICATION	2.302780291362449E-6	IMPLEMENTATION
// BreakJump, ThreadContext	WITHOUT_CLASSIFICATION	0.999907900922588	WITHOUT_CLASSIFICATION	9.209907741204226E-5	IMPLEMENTATION
// ThreadContext	WITHOUT_CLASSIFICATION	0.9994903392551018	WITHOUT_CLASSIFICATION	5.096607448981903E-4	IMPLEMENTATION
// BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9998432178634115	WITHOUT_CLASSIFICATION	1.567821365885727E-4	IMPLEMENTATION
// Make Java class files in the jar reachable from Ruby	WITHOUT_CLASSIFICATION	0.9999985310788451	WITHOUT_CLASSIFICATION	1.46892115499665E-6	IMPLEMENTATION
// RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9998432178634115	WITHOUT_CLASSIFICATION	1.567821365885727E-4	IMPLEMENTATION
// add all startup load paths to the list first	WITHOUT_CLASSIFICATION	0.9999186967959076	WITHOUT_CLASSIFICATION	8.130320409242194E-5	IMPLEMENTATION
// if it's a compiled JRuby script, instantiate and run it	WITHOUT_CLASSIFICATION	0.999931845565428	WITHOUT_CLASSIFICATION	6.815443457193696E-5	IMPLEMENTATION
// wrap in try/catch for security exceptions in an applet	WITHOUT_CLASSIFICATION	0.9999922968871667	WITHOUT_CLASSIFICATION	7.703112833222975E-6	IMPLEMENTATION
// add $RUBYLIB paths	WITHOUT_CLASSIFICATION	0.9998978281161236	WITHOUT_CLASSIFICATION	1.0217188387643792E-4	IMPLEMENTATION
// Empty paths do not need to be added	WITHOUT_CLASSIFICATION	0.9636301162611793	WITHOUT_CLASSIFICATION	0.03636988373882062	IMPLEMENTATION
// "." dir is used for relative path loads from a given file, as in require '../foo/bar'	WITHOUT_CLASSIFICATION	0.999998330744314	WITHOUT_CLASSIFICATION	1.6692556860152068E-6	IMPLEMENTATION
// Add 1.8 libs	WITHOUT_CLASSIFICATION	0.9992936233178964	WITHOUT_CLASSIFICATION	7.063766821036501E-4	IMPLEMENTATION
// Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.	WITHOUT_CLASSIFICATION	0.9999998263395603	WITHOUT_CLASSIFICATION	1.7366043961786396E-7	IMPLEMENTATION
// Library has already been loaded in some form, bail out	WITHOUT_CLASSIFICATION	0.9999872921646509	WITHOUT_CLASSIFICATION	1.2707835349093843E-5	IMPLEMENTATION
// We don't want a package name beginning with dots, so we remove them	WITHOUT_CLASSIFICATION	0.9997255131871232	WITHOUT_CLASSIFICATION	2.7448681287681415E-4	IMPLEMENTATION
// If there is a jar-file with the required name, we add this to the class path.	WITHOUT_CLASSIFICATION	0.9999000009783077	WITHOUT_CLASSIFICATION	9.99990216922579E-5	IMPLEMENTATION
// quietly try to load the class	WITHOUT_CLASSIFICATION	0.9999455739194386	WITHOUT_CLASSIFICATION	5.4426080561326324E-5	IMPLEMENTATION
// If there was a good library before, we go back to that	WITHOUT_CLASSIFICATION	0.9999724930483813	WITHOUT_CLASSIFICATION	2.750695161859768E-5	IMPLEMENTATION
// no library or extension found, try to load directly as a class	WITHOUT_CLASSIFICATION	0.9999633770146829	WITHOUT_CLASSIFICATION	3.6622985317238054E-5	IMPLEMENTATION
// if an extension is specified, try more targetted searches	WITHOUT_CLASSIFICATION	0.9998344443265024	WITHOUT_CLASSIFICATION	1.6555567349761392E-4	IMPLEMENTATION
// signed short, big-endian	WITHOUT_CLASSIFICATION	0.9999094405195249	WITHOUT_CLASSIFICATION	9.055948047513482E-5	IMPLEMENTATION
// source extensions	WITHOUT_CLASSIFICATION	0.9998683512174931	WITHOUT_CLASSIFICATION	1.316487825070001E-4	IMPLEMENTATION
// We don't support .so, but some stdlib require .so directly // replace it with .jar to look for an extension type we do support	WITHOUT_CLASSIFICATION	0.9428180427340502	WITHOUT_CLASSIFICATION	0.05718195726594986	IMPLEMENTATION
// This code exploits the fact that all .jar files will be found for the JarredScript feature. // This is where the basic extension mechanism gets fixed	WITHOUT_CLASSIFICATION	0.9999924650244374	WITHOUT_CLASSIFICATION	7.534975562621816E-6	IMPLEMENTATION
// Make the class name look nice, by splitting on _ and capitalize each segment, then joining // the, together without anything separating them, and last put on "Service" at the end.	WITHOUT_CLASSIFICATION	0.9936733752825881	WITHOUT_CLASSIFICATION	0.006326624717411938	IMPLEMENTATION
// It's _really_ expensive to check that the class actually exists in the Jar, so // we don't do that now.	WITHOUT_CLASSIFICATION	0.9999937258290095	WITHOUT_CLASSIFICATION	6.274170990503738E-6	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9993956806706381	WITHOUT_CLASSIFICATION	6.043193293619691E-4	IMPLEMENTATION
// extension extensions	WITHOUT_CLASSIFICATION	0.9997907960358263	WITHOUT_CLASSIFICATION	2.0920396417370177E-4	IMPLEMENTATION
// unknown extension, fall back to search with extensions	WITHOUT_CLASSIFICATION	0.9996488099599395	WITHOUT_CLASSIFICATION	3.511900400603941E-4	IMPLEMENTATION
// try all extensions	WITHOUT_CLASSIFICATION	0.999944147218647	WITHOUT_CLASSIFICATION	5.58527813530066E-5	IMPLEMENTATION
// if a source extension is specified, try all source extensions	WITHOUT_CLASSIFICATION	0.999995376254794	WITHOUT_CLASSIFICATION	4.623745206036898E-6	IMPLEMENTATION
// unknown extension, fall back to exact search	WITHOUT_CLASSIFICATION	0.9997865993719056	WITHOUT_CLASSIFICATION	2.1340062809423725E-4	IMPLEMENTATION
// try only literal search	WITHOUT_CLASSIFICATION	0.9999768679874229	WITHOUT_CLASSIFICATION	2.3132012577087156E-5	IMPLEMENTATION
// attempt to load the found library	WITHOUT_CLASSIFICATION	0.9996293984134169	WITHOUT_CLASSIFICATION	3.7060158658301645E-4	IMPLEMENTATION
// otherwise load the library we've found	WITHOUT_CLASSIFICATION	0.9963576295823311	WITHOUT_CLASSIFICATION	0.0036423704176689192	IMPLEMENTATION
// allow MainExitException to propagate out for exec and friends	WITHOUT_CLASSIFICATION	0.999968382647313	WITHOUT_CLASSIFICATION	3.1617352686904284E-5	IMPLEMENTATION
// Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".	WITHOUT_CLASSIFICATION	0.9999230993596014	WITHOUT_CLASSIFICATION	7.690064039859833E-5	IMPLEMENTATION
// check current directory; if file exists, retrieve URL and return resource	WITHOUT_CLASSIFICATION	0.9998125916306979	WITHOUT_CLASSIFICATION	1.8740836930204193E-4	IMPLEMENTATION
// if a jar or file URL, return load service resource directly without further searching	WITHOUT_CLASSIFICATION	0.9999747061205995	WITHOUT_CLASSIFICATION	2.529387940054091E-5	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9998642279189585	WITHOUT_CLASSIFICATION	1.3577208104142508E-4	IMPLEMENTATION
// if it's a ./ baseName, use CWD logic	WITHOUT_CLASSIFICATION	0.9998604874856335	WITHOUT_CLASSIFICATION	1.3951251436648045E-4	IMPLEMENTATION
// if given path is absolute, just try it as-is (with extensions) and no load path	WITHOUT_CLASSIFICATION	0.99999817144946	WITHOUT_CLASSIFICATION	1.828550540016846E-6	IMPLEMENTATION
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9977556632784869	WITHOUT_CLASSIFICATION	0.002244336721513226	IMPLEMENTATION
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9977556632784869	WITHOUT_CLASSIFICATION	0.002244336721513226	IMPLEMENTATION
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9992721299939115	WITHOUT_CLASSIFICATION	7.278700060884339E-4	IMPLEMENTATION
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9992721299939115	WITHOUT_CLASSIFICATION	7.278700060884339E-4	IMPLEMENTATION
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9996878432920078	WITHOUT_CLASSIFICATION	3.1215670799217727E-4	IMPLEMENTATION
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9996878432920078	WITHOUT_CLASSIFICATION	3.1215670799217727E-4	IMPLEMENTATION
//                    actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));	WITHOUT_CLASSIFICATION	0.9998791702605178	WITHOUT_CLASSIFICATION	1.2082973948221674E-4	IMPLEMENTATION
// handle security-sensitive case	WITHOUT_CLASSIFICATION	0.9984291923672198	WITHOUT_CLASSIFICATION	0.0015708076327801415	IMPLEMENTATION
// if entry is an empty string, skip it	WITHOUT_CLASSIFICATION	0.9999930782903381	WITHOUT_CLASSIFICATION	6.921709661841821E-6	IMPLEMENTATION
// if entry starts with a slash, skip it since classloader resources never start with a /	WITHOUT_CLASSIFICATION	0.9999370247023668	WITHOUT_CLASSIFICATION	6.297529763315656E-5	IMPLEMENTATION
// otherwise, try to load from classpath (Note: Jar resources always uses '/')	WITHOUT_CLASSIFICATION	0.9999792450711288	WITHOUT_CLASSIFICATION	2.075492887129887E-5	IMPLEMENTATION
// Make sure this is not a directory or unavailable in some way	WITHOUT_CLASSIFICATION	0.9997082490372835	WITHOUT_CLASSIFICATION	2.9175096271644786E-4	IMPLEMENTATION
// signed short, native	WITHOUT_CLASSIFICATION	0.9997767387052153	WITHOUT_CLASSIFICATION	2.2326129478475183E-4	IMPLEMENTATION
// If we fail to find as a normal Ruby script, we try to find as an extension, // checking for a builtin first.	WITHOUT_CLASSIFICATION	0.9999929515999942	WITHOUT_CLASSIFICATION	7.04840000582519E-6	IMPLEMENTATION
// write `I' instance var signet if class is NOT a direct subclass of Object	WITHOUT_CLASSIFICATION	0.9999995320635968	WITHOUT_CLASSIFICATION	4.67936403112091E-7	IMPLEMENTATION
// if name starts with a / we're done (classloader resources won't load with an initial /)	WITHOUT_CLASSIFICATION	0.9999998832906165	WITHOUT_CLASSIFICATION	1.1670938344166921E-7	IMPLEMENTATION
// Look in classpath next (we do not use File as a test since UNC names will match) // Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")	WITHOUT_CLASSIFICATION	0.9999950543256562	WITHOUT_CLASSIFICATION	4.945674343798135E-6	IMPLEMENTATION
/* Directories and unavailable resources are not able to open a stream. */	WITHOUT_CLASSIFICATION	0.9999744481323714	WITHOUT_CLASSIFICATION	2.5551867628665646E-5	IMPLEMENTATION
// Try to load from classpath without prefix. "A/b.rb" will not load as  // "./A/b.rb" in a jar file.	WITHOUT_CLASSIFICATION	0.9999891020519485	WITHOUT_CLASSIFICATION	1.0897948051560684E-5	IMPLEMENTATION
// object has instance vars and isn't a class, get a snapshot to be marshalled // and output the ivar header here	WITHOUT_CLASSIFICATION	0.9999996086834891	WITHOUT_CLASSIFICATION	3.9131651081482805E-7	IMPLEMENTATION
// flush afer whole dump is complete	WITHOUT_CLASSIFICATION	0.9998602733415878	WITHOUT_CLASSIFICATION	1.3972665841215014E-4	IMPLEMENTATION
//            write('S');	WITHOUT_CLASSIFICATION	0.9999235421779956	WITHOUT_CLASSIFICATION	7.645782200440144E-5	IMPLEMENTATION
// switch on the object's *native type*. This allows use-defined // classes that have extended core native types to piggyback on their // marshalling logic.	WITHOUT_CLASSIFICATION	0.9986314142265494	WITHOUT_CLASSIFICATION	0.0013685857734505185	IMPLEMENTATION
// object is a custom class that extended one of the native types other than Object	WITHOUT_CLASSIFICATION	0.999955588762315	WITHOUT_CLASSIFICATION	4.441123768500466E-5	IMPLEMENTATION
// We do not want to capture cached methods	WITHOUT_CLASSIFICATION	0.9953677409247965	WITHOUT_CLASSIFICATION	0.004632259075203456	IMPLEMENTATION
// w_symbol	WITHOUT_CLASSIFICATION	0.9994903392551018	WITHOUT_CLASSIFICATION	5.096607448981903E-4	IMPLEMENTATION
// w_unique	WITHOUT_CLASSIFICATION	0.9994903392551018	WITHOUT_CLASSIFICATION	5.096607448981903E-4	IMPLEMENTATION
// call the proc, but not for symbols	WITHOUT_CLASSIFICATION	0.9993051865017808	WITHOUT_CLASSIFICATION	6.948134982191791E-4	IMPLEMENTATION
// Major // Minor	WITHOUT_CLASSIFICATION	0.9994903392551018	WITHOUT_CLASSIFICATION	5.096607448981903E-4	IMPLEMENTATION
// any ivars, since we don't have __attached__ ivar now	WITHOUT_CLASSIFICATION	0.9999774129537207	WITHOUT_CLASSIFICATION	2.2587046279354954E-5	IMPLEMENTATION
// "hashdef" object, a hash with a default	WITHOUT_CLASSIFICATION	0.9999742510984467	WITHOUT_CLASSIFICATION	2.574890155318214E-5	IMPLEMENTATION
// All "C" marshalled objects descend from core classes, which are all RubyObject	WITHOUT_CLASSIFICATION	0.9999827114860335	WITHOUT_CLASSIFICATION	1.7288513966580712E-5	IMPLEMENTATION
// sic	WITHOUT_CLASSIFICATION	0.9999889436623457	WITHOUT_CLASSIFICATION	1.1056337654331047E-5	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999251323457571	WITHOUT_CLASSIFICATION	7.486765424287559E-5	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999251323457571	WITHOUT_CLASSIFICATION	7.486765424287559E-5	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999251323457571	WITHOUT_CLASSIFICATION	7.486765424287559E-5	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999879482338322	WITHOUT_CLASSIFICATION	1.2051766167876581E-5	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999879482338322	WITHOUT_CLASSIFICATION	1.2051766167876581E-5	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9998637264401384	WITHOUT_CLASSIFICATION	1.3627355986154733E-4	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9998637264401384	WITHOUT_CLASSIFICATION	1.3627355986154733E-4	IMPLEMENTATION
/*     * If we are setting post arguments we can assume there are no pre or others     */	WITHOUT_CLASSIFICATION	0.9999988522769556	WITHOUT_CLASSIFICATION	1.1477230444519994E-6	IMPLEMENTATION
// XXX: 0xffff0000 on BE?	WITHOUT_CLASSIFICATION	0.997866117682417	WITHOUT_CLASSIFICATION	0.002133882317583046	IMPLEMENTATION
// unsigned short, native	WITHOUT_CLASSIFICATION	0.9997772684965041	WITHOUT_CLASSIFICATION	2.2273150349592339E-4	IMPLEMENTATION
// int, native // long, native	WITHOUT_CLASSIFICATION	0.9997790087385693	WITHOUT_CLASSIFICATION	2.209912614306158E-4	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999251323457571	WITHOUT_CLASSIFICATION	7.486765424287559E-5	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999251323457571	WITHOUT_CLASSIFICATION	7.486765424287559E-5	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999251323457571	WITHOUT_CLASSIFICATION	7.486765424287559E-5	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999879482338322	WITHOUT_CLASSIFICATION	1.2051766167876581E-5	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999879482338322	WITHOUT_CLASSIFICATION	1.2051766167876581E-5	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999879482338322	WITHOUT_CLASSIFICATION	1.2051766167876581E-5	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9998637264401384	WITHOUT_CLASSIFICATION	1.3627355986154733E-4	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9998637264401384	WITHOUT_CLASSIFICATION	1.3627355986154733E-4	IMPLEMENTATION
// Look for slash, starting from 'start' position, until 'end'.	WITHOUT_CLASSIFICATION	0.9999933105931961	WITHOUT_CLASSIFICATION	6.689406803921552E-6	IMPLEMENTATION
// Our values holder (name of variables are kept in staticScope)	WITHOUT_CLASSIFICATION	0.9999999539065633	WITHOUT_CLASSIFICATION	4.6093436633602794E-8	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9957613441816823	WITHOUT_CLASSIFICATION	0.004238655818317723	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9957613441816823	WITHOUT_CLASSIFICATION	0.004238655818317723	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9957613441816823	WITHOUT_CLASSIFICATION	0.004238655818317723	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9957613441816823	WITHOUT_CLASSIFICATION	0.004238655818317723	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9957613441816823	WITHOUT_CLASSIFICATION	0.004238655818317723	IMPLEMENTATION
// SunSignalFacade	WITHOUT_CLASSIFICATION	0.9994903392551018	WITHOUT_CLASSIFICATION	5.096607448981903E-4	IMPLEMENTATION
// All braces pushed..	WITHOUT_CLASSIFICATION	0.9999339968604761	WITHOUT_CLASSIFICATION	6.600313952385788E-5	IMPLEMENTATION
/* failed : try next recursion */	WITHOUT_CLASSIFICATION	0.9990295145578045	WITHOUT_CLASSIFICATION	9.704854421954836E-4	IMPLEMENTATION
// leftToken made us start as nest 1	WITHOUT_CLASSIFICATION	0.9998950110077998	WITHOUT_CLASSIFICATION	1.049889922002852E-4	IMPLEMENTATION
// are we at '**/'	WITHOUT_CLASSIFICATION	0.9997566770435776	WITHOUT_CLASSIFICATION	2.4332295642234163E-4	IMPLEMENTATION
// No or mismatched braces..Move along..nothing to see here	WITHOUT_CLASSIFICATION	0.9999762456161436	WITHOUT_CLASSIFICATION	2.375438385630581E-5	IMPLEMENTATION
// not enough bytes	WITHOUT_CLASSIFICATION	0.9832790189764599	WITHOUT_CLASSIFICATION	0.01672098102354019	IMPLEMENTATION
// Get index of last read byte	WITHOUT_CLASSIFICATION	0.9999900121026308	WITHOUT_CLASSIFICATION	9.987897369051526E-6	IMPLEMENTATION
// skip inner braces	WITHOUT_CLASSIFICATION	0.9997010880679914	WITHOUT_CLASSIFICATION	2.98911932008654E-4	IMPLEMENTATION
/*     * Process {}'s (example: Dir.glob("{jruby,jython}/README*")      */	WITHOUT_CLASSIFICATION	0.999991844141533	WITHOUT_CLASSIFICATION	8.155858467015343E-6	IMPLEMENTATION
/* complete, according to Posix.2 */	WITHOUT_CLASSIFICATION	0.9999812652077225	WITHOUT_CLASSIFICATION	1.8734792277512507E-5	IMPLEMENTATION
/* Only accept an open brace if there is a close */	WITHOUT_CLASSIFICATION	0.9999999075170937	WITHOUT_CLASSIFICATION	9.248290632595471E-8	IMPLEMENTATION
/* brace to match it.  Bracket expressions must be */	WITHOUT_CLASSIFICATION	0.9999849784666389	WITHOUT_CLASSIFICATION	1.5021533361126741E-5	IMPLEMENTATION
// index of left-most brace // index of right-most brace	WITHOUT_CLASSIFICATION	0.9998580411045502	WITHOUT_CLASSIFICATION	1.4195889544983806E-4	IMPLEMENTATION
// Length check is a hack.  We should not be reeiving "" as a filename ever. 	WITHOUT_CLASSIFICATION	0.999989649871222	WITHOUT_CLASSIFICATION	1.0350128778004606E-5	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9995696405670117	WITHOUT_CLASSIFICATION	4.303594329882652E-4	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9995696405670117	WITHOUT_CLASSIFICATION	4.303594329882652E-4	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9995696405670117	WITHOUT_CLASSIFICATION	4.303594329882652E-4	IMPLEMENTATION
// Pickaxe says @ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9996125541116562	WITHOUT_CLASSIFICATION	3.874458883438392E-4	IMPLEMENTATION
// Pickaxe says @@ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9996124636675893	WITHOUT_CLASSIFICATION	3.8753633241080934E-4	IMPLEMENTATION
// SimpleSampler	WITHOUT_CLASSIFICATION	0.9994903392551018	WITHOUT_CLASSIFICATION	5.096607448981903E-4	IMPLEMENTATION
/*     * convert into longs, returning unsigned 64-bit values as signed longs     * ( num2long raises a RangeError on values > Long.MAX_VALUE )     */	WITHOUT_CLASSIFICATION	0.9999997155799003	WITHOUT_CLASSIFICATION	2.8442009975801486E-7	IMPLEMENTATION
// b64_xtable for decoding Base 64	WITHOUT_CLASSIFICATION	0.9999319903555592	WITHOUT_CLASSIFICATION	6.800964444070126E-5	IMPLEMENTATION
// single precision, little-endian	WITHOUT_CLASSIFICATION	0.9996780552055828	WITHOUT_CLASSIFICATION	3.2194479441718054E-4	IMPLEMENTATION
// single precision, big-endian	WITHOUT_CLASSIFICATION	0.9996780552055828	WITHOUT_CLASSIFICATION	3.2194479441718054E-4	IMPLEMENTATION
// single precision, native	WITHOUT_CLASSIFICATION	0.9995337847339099	WITHOUT_CLASSIFICATION	4.662152660901689E-4	IMPLEMENTATION
// single precision, native // single precision, native	WITHOUT_CLASSIFICATION	0.9992065607453148	WITHOUT_CLASSIFICATION	7.934392546852245E-4	IMPLEMENTATION
// double precision, little-endian	WITHOUT_CLASSIFICATION	0.9999872634090213	WITHOUT_CLASSIFICATION	1.2736590978578306E-5	IMPLEMENTATION
// double precision, big-endian	WITHOUT_CLASSIFICATION	0.9999872634090213	WITHOUT_CLASSIFICATION	1.2736590978578306E-5	IMPLEMENTATION
// double precision, native	WITHOUT_CLASSIFICATION	0.9999815533084555	WITHOUT_CLASSIFICATION	1.8446691544436142E-5	IMPLEMENTATION
// signed short, little-endian	WITHOUT_CLASSIFICATION	0.9999094405195249	WITHOUT_CLASSIFICATION	9.055948047513482E-5	IMPLEMENTATION
// signed char	WITHOUT_CLASSIFICATION	0.9996766402933286	WITHOUT_CLASSIFICATION	3.2335970667136705E-4	IMPLEMENTATION
// unsigned char	WITHOUT_CLASSIFICATION	0.9996774075380256	WITHOUT_CLASSIFICATION	3.225924619744723E-4	IMPLEMENTATION
// long, little-endian	WITHOUT_CLASSIFICATION	0.9999088839848671	WITHOUT_CLASSIFICATION	9.11160151329093E-5	IMPLEMENTATION
// long, big-endian	WITHOUT_CLASSIFICATION	0.999495777108232	WITHOUT_CLASSIFICATION	5.042228917680673E-4	IMPLEMENTATION
// unsigned int, native	WITHOUT_CLASSIFICATION	0.9997784254936166	WITHOUT_CLASSIFICATION	2.2157450638333854E-4	IMPLEMENTATION
// int, native	WITHOUT_CLASSIFICATION	0.998764614422581	WITHOUT_CLASSIFICATION	0.0012353855774190222	IMPLEMENTATION
// 64-bit number, native (as fixnum)	WITHOUT_CLASSIFICATION	0.9997281452127024	WITHOUT_CLASSIFICATION	2.7185478729765066E-4	IMPLEMENTATION
// How many occurrences of 'type' we want	WITHOUT_CLASSIFICATION	0.9993686252511147	WITHOUT_CLASSIFICATION	6.313747488853186E-4	IMPLEMENTATION
// See if we have a converter for the job...	WITHOUT_CLASSIFICATION	0.9999768833598802	WITHOUT_CLASSIFICATION	2.3116640119832012E-5	IMPLEMENTATION
// Otherwise the unpack should be here...	WITHOUT_CLASSIFICATION	0.999880083724765	WITHOUT_CLASSIFICATION	1.1991627523502655E-4	IMPLEMENTATION
// Possible Checksum Byte	WITHOUT_CLASSIFICATION	0.9998965969045792	WITHOUT_CLASSIFICATION	1.0340309542079851E-4	IMPLEMENTATION
// obtain a	WITHOUT_CLASSIFICATION	0.9996644130760206	WITHOUT_CLASSIFICATION	3.355869239792914E-4	IMPLEMENTATION
// obtain b	WITHOUT_CLASSIFICATION	0.9995998155091901	WITHOUT_CLASSIFICATION	4.0018449080982626E-4	IMPLEMENTATION
// obtain c	WITHOUT_CLASSIFICATION	0.999749320249601	WITHOUT_CLASSIFICATION	2.5067975039904733E-4	IMPLEMENTATION
// obtain d	WITHOUT_CLASSIFICATION	0.9994879738304	WITHOUT_CLASSIFICATION	5.120261696000617E-4	IMPLEMENTATION
/*encode.limit() - */	WITHOUT_CLASSIFICATION	0.9999981728877557	WITHOUT_CLASSIFICATION	1.8271122442021692E-6	IMPLEMENTATION
/* 1 */	WITHOUT_CLASSIFICATION	0.999998323144927	WITHOUT_CLASSIFICATION	1.6768550729813405E-6	IMPLEMENTATION
/* 2 */	WITHOUT_CLASSIFICATION	0.9999990341722599	WITHOUT_CLASSIFICATION	9.658277400764978E-7	IMPLEMENTATION
/* 3 */	WITHOUT_CLASSIFICATION	0.9999988721331945	WITHOUT_CLASSIFICATION	1.1278668054522264E-6	IMPLEMENTATION
/* 4 */	WITHOUT_CLASSIFICATION	0.9999984229608883	WITHOUT_CLASSIFICATION	1.5770391117549287E-6	IMPLEMENTATION
/* 5 */	WITHOUT_CLASSIFICATION	0.9999989774342826	WITHOUT_CLASSIFICATION	1.0225657174238322E-6	IMPLEMENTATION
/* 6 */	WITHOUT_CLASSIFICATION	0.999998615763277	WITHOUT_CLASSIFICATION	1.3842367230644939E-6	IMPLEMENTATION
/* 7 */	WITHOUT_CLASSIFICATION	0.9999982507282729	WITHOUT_CLASSIFICATION	1.7492717272060062E-6	IMPLEMENTATION
// Skip all whitespace in pack format string	WITHOUT_CLASSIFICATION	0.9999989579284183	WITHOUT_CLASSIFICATION	1.0420715816041726E-6	IMPLEMENTATION
// Skip embedded comments in pack format string	WITHOUT_CLASSIFICATION	0.9999990292404957	WITHOUT_CLASSIFICATION	9.707595043073996E-7	IMPLEMENTATION
// In case when the number of occurences is // explicitly specified, we have to read up // the remaining garbage after the '\0' to // satisfy the requested pattern.	WITHOUT_CLASSIFICATION	0.9999648546807177	WITHOUT_CLASSIFICATION	3.5145319282307756E-5	IMPLEMENTATION
//normal exit, this should be faster than a test at each iterations for string with more than //about 40 char	WITHOUT_CLASSIFICATION	0.9999686230736836	WITHOUT_CLASSIFICATION	3.137692631637253E-5	IMPLEMENTATION
// We encountered '\0' when // were reading the buffer above, // increment the number of read bytes.	WITHOUT_CLASSIFICATION	0.99999099308434	WITHOUT_CLASSIFICATION	9.006915659974724E-6	IMPLEMENTATION
// MRI behavior: Contrary to what seems to be logical, // when '*' is given, MRI calculates the distance // to the end, in order to go backwards.	WITHOUT_CLASSIFICATION	0.9999940353273272	WITHOUT_CLASSIFICATION	5.964672672791898E-6	IMPLEMENTATION
// Determine how many of type are needed (default: 1)	WITHOUT_CLASSIFICATION	0.6137782170762728	WITHOUT_CLASSIFICATION	0.3862217829237271	IMPLEMENTATION
// 'Z' adds extra null pad (versus 'a')	WITHOUT_CLASSIFICATION	0.9998637034494007	WITHOUT_CLASSIFICATION	1.3629655059942605E-4	IMPLEMENTATION
//if the low bit is set //set the high bit of the result	WITHOUT_CLASSIFICATION	0.9999752105790084	WITHOUT_CLASSIFICATION	2.4789420991621222E-5	IMPLEMENTATION
//if the index is not a multiple of 8, we are not on a byte boundary //shift the byte	WITHOUT_CLASSIFICATION	0.9978686464968104	WITHOUT_CLASSIFICATION	0.0021313535031896374	IMPLEMENTATION
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9987728571303796	WITHOUT_CLASSIFICATION	0.0012271428696203947	IMPLEMENTATION
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9987728571303796	WITHOUT_CLASSIFICATION	0.0012271428696203947	IMPLEMENTATION
//do some padding, I don't understand the padding strategy	WITHOUT_CLASSIFICATION	0.9946567874900267	WITHOUT_CLASSIFICATION	0.005343212509973317	IMPLEMENTATION
// we filled up current byte; append it and create next one	WITHOUT_CLASSIFICATION	0.9986577128972312	WITHOUT_CLASSIFICATION	0.0013422871027689476	IMPLEMENTATION
//if the index is not a multiple of 8, we are not on a byte boundary	WITHOUT_CLASSIFICATION	0.9978568927788148	WITHOUT_CLASSIFICATION	0.002143107221185063	IMPLEMENTATION
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.999999779336162	WITHOUT_CLASSIFICATION	2.2066383805184997E-7	IMPLEMENTATION
// we don't deal with negatives.	WITHOUT_CLASSIFICATION	0.9996380583837478	WITHOUT_CLASSIFICATION	3.619416162523245E-4	IMPLEMENTATION
// populate commandline with NG-provided stuff	WITHOUT_CLASSIFICATION	0.9997853997543248	WITHOUT_CLASSIFICATION	2.1460024567517339E-4	IMPLEMENTATION
// are we recursing?	WITHOUT_CLASSIFICATION	0.9996658524144246	WITHOUT_CLASSIFICATION	3.3414758557543246E-4	IMPLEMENTATION
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999998286375291	WITHOUT_CLASSIFICATION	1.7136247086416602E-7	IMPLEMENTATION
// default PidGetter	WITHOUT_CLASSIFICATION	0.9999127658667832	WITHOUT_CLASSIFICATION	8.723413321668795E-5	IMPLEMENTATION
// ignore and try windows version	WITHOUT_CLASSIFICATION	0.9999409758027283	WITHOUT_CLASSIFICATION	5.9024197271690244E-5	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9998616690897336	WITHOUT_CLASSIFICATION	1.3833091026644416E-4	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9998616690897336	WITHOUT_CLASSIFICATION	1.3833091026644416E-4	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9998616690897336	WITHOUT_CLASSIFICATION	1.3833091026644416E-4	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9998616690897336	WITHOUT_CLASSIFICATION	1.3833091026644416E-4	IMPLEMENTATION
// try both	WITHOUT_CLASSIFICATION	0.999400289384558	WITHOUT_CLASSIFICATION	5.997106154419061E-4	IMPLEMENTATION
// just unix	WITHOUT_CLASSIFICATION	0.9999282557078328	WITHOUT_CLASSIFICATION	7.17442921670538E-5	IMPLEMENTATION
// just windows	WITHOUT_CLASSIFICATION	0.9999452763849932	WITHOUT_CLASSIFICATION	5.472361500680744E-5	IMPLEMENTATION
// neither	WITHOUT_CLASSIFICATION	0.9999889639641151	WITHOUT_CLASSIFICATION	1.103603588480688E-5	IMPLEMENTATION
// CON: popen is a case where I think we should just always shell out.	WITHOUT_CLASSIFICATION	0.998455386341026	WITHOUT_CLASSIFICATION	0.0015446136589740253	IMPLEMENTATION
// single string command, pass to sh to expand wildcards	WITHOUT_CLASSIFICATION	0.9999919431500084	WITHOUT_CLASSIFICATION	8.05684999160026E-6	IMPLEMENTATION
// direct invocation of the command	WITHOUT_CLASSIFICATION	0.9999467709278841	WITHOUT_CLASSIFICATION	5.3229072115859936E-5	IMPLEMENTATION
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999641177586884	WITHOUT_CLASSIFICATION	3.5882241311586286E-5	IMPLEMENTATION
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999641177586884	WITHOUT_CLASSIFICATION	3.5882241311586286E-5	IMPLEMENTATION
// close process output // See JRUBY-3405; hooking up to parent process stdin caused // problems for IRB etc using stdin.	WITHOUT_CLASSIFICATION	0.9999993806451963	WITHOUT_CLASSIFICATION	6.193548037013722E-7	IMPLEMENTATION
// ignore, we're on the way out	WITHOUT_CLASSIFICATION	0.9997783334219594	WITHOUT_CLASSIFICATION	2.2166657804045505E-4	IMPLEMENTATION
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9998904175013624	WITHOUT_CLASSIFICATION	1.0958249863752458E-4	IMPLEMENTATION
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999863179207176	WITHOUT_CLASSIFICATION	1.3682079282300055E-5	IMPLEMENTATION
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999863179207176	WITHOUT_CLASSIFICATION	1.3682079282300055E-5	IMPLEMENTATION
// popen caller wants to be able to write, provide subprocess out directly	WITHOUT_CLASSIFICATION	0.9999869901235887	WITHOUT_CLASSIFICATION	1.3009876411203601E-5	IMPLEMENTATION
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999895305475601	WITHOUT_CLASSIFICATION	1.046945243981893E-5	IMPLEMENTATION
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999895305475601	WITHOUT_CLASSIFICATION	1.046945243981893E-5	IMPLEMENTATION
// execute command with sh -c // this does shell expansion of wildcards	WITHOUT_CLASSIFICATION	0.9999701974911647	WITHOUT_CLASSIFICATION	2.9802508835411902E-5	IMPLEMENTATION
// We need to close the out, since some // processes would just wait for the stream // to be closed before they process its content, // and produce the output. E.g.: "cat".	WITHOUT_CLASSIFICATION	0.9999992978567088	WITHOUT_CLASSIFICATION	7.021432911131669E-7	IMPLEMENTATION
// we only close out if it's the slave stream, to avoid // closing a directly-mapped stream from parent process	WITHOUT_CLASSIFICATION	0.9999995551431491	WITHOUT_CLASSIFICATION	4.448568508217478E-7	IMPLEMENTATION
// The assumption here is that the 'in' stream provides // proper available() support. If available() always // returns 0, we'll hang!	WITHOUT_CLASSIFICATION	0.9999574519610211	WITHOUT_CLASSIFICATION	4.254803897882948E-5	IMPLEMENTATION
// Force t3 to quit, just in case if it's stuck. // Note: On some platforms, even interrupt might not // have an effect if the thread is IO blocked.	WITHOUT_CLASSIFICATION	0.9999603590690549	WITHOUT_CLASSIFICATION	3.964093094519451E-5	IMPLEMENTATION
// Check for special shell characters [<>|] at the beginning // and end of each command word and don't run in process if we find them.	WITHOUT_CLASSIFICATION	0.9999995078874574	WITHOUT_CLASSIFICATION	4.921125425764295E-7	IMPLEMENTATION
// Note: this method produces meaningful results // only for RubyIO objects. For everything else returns 0.	WITHOUT_CLASSIFICATION	0.9996248663729232	WITHOUT_CLASSIFICATION	3.751336270768371E-4	IMPLEMENTATION
//sequential	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
// reverse the entire area of the array selected if it's reversed.	WITHOUT_CLASSIFICATION	0.9999819329615957	WITHOUT_CLASSIFICATION	1.806703840433968E-5	IMPLEMENTATION
// do median of 7 if the array is over 200 elements.	WITHOUT_CLASSIFICATION	0.9999967631290564	WITHOUT_CLASSIFICATION	3.2368709436349105E-6	IMPLEMENTATION
// if it's less than 200 do median of 3	WITHOUT_CLASSIFICATION	0.9999829413585797	WITHOUT_CLASSIFICATION	1.7058641420292034E-5	IMPLEMENTATION
// SignalFacade	WITHOUT_CLASSIFICATION	0.9994903392551018	WITHOUT_CLASSIFICATION	5.096607448981903E-4	IMPLEMENTATION
// this is the order in which MRI does these two tests	WITHOUT_CLASSIFICATION	0.9999794521737719	WITHOUT_CLASSIFICATION	2.054782622808004E-5	IMPLEMENTATION
// this is the order in which MRI does these tests	WITHOUT_CLASSIFICATION	0.9999902525790199	WITHOUT_CLASSIFICATION	9.747420980232697E-6	IMPLEMENTATION
// basically just forcing a TypeError here to match MRI	WITHOUT_CLASSIFICATION	0.9999886394689804	WITHOUT_CLASSIFICATION	1.1360531019651138E-5	IMPLEMENTATION
// not saving DFS instance, as it will only be used once (at most) per call	WITHOUT_CLASSIFICATION	0.9974349082172104	WITHOUT_CLASSIFICATION	0.00256509178278966	IMPLEMENTATION
// Args	WITHOUT_CLASSIFICATION	0.9999889436623457	WITHOUT_CLASSIFICATION	1.1056337654331047E-5	IMPLEMENTATION
// static methods only	WITHOUT_CLASSIFICATION	0.9999544830935532	WITHOUT_CLASSIFICATION	4.551690644689024E-5	IMPLEMENTATION
//System.err.println(" calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9992943657530653	WITHOUT_CLASSIFICATION	7.056342469347323E-4	IMPLEMENTATION
// MRI 1.8.6 behavior: null byte after '%' // leads to "%" string. Null byte in // other places, like "%5\0", leads to error.	WITHOUT_CLASSIFICATION	0.999725678462282	WITHOUT_CLASSIFICATION	2.743215377179374E-4	IMPLEMENTATION
// last index (+1) accessed by next() // last index (+1) accessed by get()	WITHOUT_CLASSIFICATION	0.9997276718186315	WITHOUT_CLASSIFICATION	2.723281813684958E-4	IMPLEMENTATION
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly.	WITHOUT_CLASSIFICATION	0.9999841729686151	WITHOUT_CLASSIFICATION	1.582703138493744E-5	IMPLEMENTATION
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly. Version for 1.9.	WITHOUT_CLASSIFICATION	0.9999925132226501	WITHOUT_CLASSIFICATION	7.486777349853096E-6	IMPLEMENTATION
// MRI doesn't flag it as an error if width is given multiple // times as a number (but it does for *)	WITHOUT_CLASSIFICATION	0.9999972047912652	WITHOUT_CLASSIFICATION	2.7952087348223755E-6	IMPLEMENTATION
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999903701727408	WITHOUT_CLASSIFICATION	9.629827259283439E-6	IMPLEMENTATION
// MRI 1.8.5-p12 doesn't support 1-char strings, but // YARV 0.4.1 does. I don't think it hurts to include // this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])	WITHOUT_CLASSIFICATION	0.9984809540082216	WITHOUT_CLASSIFICATION	0.001519045991778372	IMPLEMENTATION
// 'd' and 'i' are the same	WITHOUT_CLASSIFICATION	0.999979340918537	WITHOUT_CLASSIFICATION	2.065908146291942E-5	IMPLEMENTATION
// 'u' with space or plus flags is same as 'd'	WITHOUT_CLASSIFICATION	0.9999941089813831	WITHOUT_CLASSIFICATION	5.89101861687299E-6	IMPLEMENTATION
// We depart here from strict adherence to MRI code, as MRI // uses C-sprintf, in part, to format numeric output, while // we'll use Java's numeric formatting code (and our own).	WITHOUT_CLASSIFICATION	0.9999992735327801	WITHOUT_CLASSIFICATION	7.264672197868971E-7	IMPLEMENTATION
// skip '-' in bytes, will add where appropriate	WITHOUT_CLASSIFICATION	0.9999788026208262	WITHOUT_CLASSIFICATION	2.119737917386509E-5	IMPLEMENTATION
// ..	WITHOUT_CLASSIFICATION	0.9999893725766521	WITHOUT_CLASSIFICATION	1.0627423347909764E-5	IMPLEMENTATION
// the 1 is for the stripped sign char	WITHOUT_CLASSIFICATION	0.999979121436866	WITHOUT_CLASSIFICATION	2.08785631340112E-5	IMPLEMENTATION
// FIXME: what is correct 'recv' argument? // (this does produce the desired behavior)	WITHOUT_CLASSIFICATION	0.828010187384011	WITHOUT_CLASSIFICATION	0.171989812615989	IMPLEMENTATION
// gotta have at least a zero...	WITHOUT_CLASSIFICATION	0.9999208198483982	WITHOUT_CLASSIFICATION	7.918015160184724E-5	IMPLEMENTATION
// OK, we now have the significand in digits[0...nDigits] // and the exponent in exponent.  We're ready to format.	WITHOUT_CLASSIFICATION	0.9999240370801299	WITHOUT_CLASSIFICATION	7.596291987001977E-5	IMPLEMENTATION
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.999982509967868	WITHOUT_CLASSIFICATION	1.749003213196615E-5	IMPLEMENTATION
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999240838698197	WITHOUT_CLASSIFICATION	7.591613018039542E-5	IMPLEMENTATION
//System.err.println(" stringToLong/reading c=" + data[s]);	WITHOUT_CLASSIFICATION	0.9992943657530653	WITHOUT_CLASSIFICATION	7.056342469347323E-4	IMPLEMENTATION
//System.err.println(" stringToLong/converted c=" + c);	WITHOUT_CLASSIFICATION	0.9993092929077816	WITHOUT_CLASSIFICATION	6.907070922183949E-4	IMPLEMENTATION
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.999982509967868	WITHOUT_CLASSIFICATION	1.749003213196615E-5	IMPLEMENTATION
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999240838698197	WITHOUT_CLASSIFICATION	7.591613018039542E-5	IMPLEMENTATION
// precision for G/g includes integer digits	WITHOUT_CLASSIFICATION	0.999952714000504	WITHOUT_CLASSIFICATION	4.728599949614355E-5	IMPLEMENTATION
// deal with length/width	WITHOUT_CLASSIFICATION	0.9997570139435094	WITHOUT_CLASSIFICATION	2.4298605649077158E-4	IMPLEMENTATION
// deal with length/width	WITHOUT_CLASSIFICATION	0.9997570139435094	WITHOUT_CLASSIFICATION	2.4298605649077158E-4	IMPLEMENTATION
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9998710710954312	WITHOUT_CLASSIFICATION	1.289289045688465E-4	IMPLEMENTATION
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.999984970658638	WITHOUT_CLASSIFICATION	1.5029341361978123E-5	IMPLEMENTATION
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999973548697256	WITHOUT_CLASSIFICATION	2.6451302744679004E-6	IMPLEMENTATION
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999774161912334	WITHOUT_CLASSIFICATION	2.2583808766610182E-5	IMPLEMENTATION
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.99996663395625	WITHOUT_CLASSIFICATION	3.3366043749954253E-5	IMPLEMENTATION
// MRI behavior: In this mode // trailing zeroes are removed: // 1.500E+05 -> 1.5E+05 	WITHOUT_CLASSIFICATION	0.9999668810043877	WITHOUT_CLASSIFICATION	3.311899561226294E-5	IMPLEMENTATION
// '.' is printed	WITHOUT_CLASSIFICATION	0.9997961702921471	WITHOUT_CLASSIFICATION	2.0382970785284976E-4	IMPLEMENTATION
// all precision numebers printed	WITHOUT_CLASSIFICATION	0.9998825169393412	WITHOUT_CLASSIFICATION	1.1748306065885806E-4	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9993457459238884	WITHOUT_CLASSIFICATION	6.54254076111628E-4	IMPLEMENTATION
// '.'	WITHOUT_CLASSIFICATION	0.9999892207097506	WITHOUT_CLASSIFICATION	1.0779290249352694E-5	IMPLEMENTATION
// decimal form, like (but not *just* like!) 'f'	WITHOUT_CLASSIFICATION	0.9774964135099264	WITHOUT_CLASSIFICATION	0.022503586490073484	IMPLEMENTATION
// digits array shifted, update all	WITHOUT_CLASSIFICATION	0.9999728897583988	WITHOUT_CLASSIFICATION	2.711024160122628E-5	IMPLEMENTATION
// will have a trailing '.' // g fills trailing zeroes if #	WITHOUT_CLASSIFICATION	0.9999816499198732	WITHOUT_CLASSIFICATION	1.8350080126881254E-5	IMPLEMENTATION
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999528419021626	WITHOUT_CLASSIFICATION	4.7158097837321115E-5	IMPLEMENTATION
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999528419021626	WITHOUT_CLASSIFICATION	4.7158097837321115E-5	IMPLEMENTATION
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9998459171359717	WITHOUT_CLASSIFICATION	1.5408286402825277E-4	IMPLEMENTATION
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9998459171359717	WITHOUT_CLASSIFICATION	1.5408286402825277E-4	IMPLEMENTATION
// digits arr shifted, update all	WITHOUT_CLASSIFICATION	0.9999675241059625	WITHOUT_CLASSIFICATION	3.2475894037592077E-5	IMPLEMENTATION
// (1|intlen).prec	WITHOUT_CLASSIFICATION	0.9994903392551018	WITHOUT_CLASSIFICATION	5.096607448981903E-4	IMPLEMENTATION
// (1|intlen)	WITHOUT_CLASSIFICATION	0.9994903392551018	WITHOUT_CLASSIFICATION	5.096607448981903E-4	IMPLEMENTATION
// will have a trailing '.'	WITHOUT_CLASSIFICATION	0.9999645606750924	WITHOUT_CLASSIFICATION	3.5439324907592324E-5	IMPLEMENTATION
// fill up the rest with zeroes	WITHOUT_CLASSIFICATION	0.9995403426024531	WITHOUT_CLASSIFICATION	4.5965739754689404E-4	IMPLEMENTATION
//System.err.println(" main/len=" + len);	WITHOUT_CLASSIFICATION	0.9992943657530653	WITHOUT_CLASSIFICATION	7.056342469347323E-4	IMPLEMENTATION
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999973548697256	WITHOUT_CLASSIFICATION	2.6451302744679004E-6	IMPLEMENTATION
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999774161912334	WITHOUT_CLASSIFICATION	2.2583808766610182E-5	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9993457459238884	WITHOUT_CLASSIFICATION	6.54254076111628E-4	IMPLEMENTATION
// '.'	WITHOUT_CLASSIFICATION	0.9999892207097506	WITHOUT_CLASSIFICATION	1.0779290249352694E-5	IMPLEMENTATION
// equivalent to MRI case '\0':	WITHOUT_CLASSIFICATION	0.9994954506641566	WITHOUT_CLASSIFICATION	5.045493358433818E-4	IMPLEMENTATION
// '.' and all precision digits printed	WITHOUT_CLASSIFICATION	0.9999400845384789	WITHOUT_CLASSIFICATION	5.991546152100388E-5	IMPLEMENTATION
// \v	WITHOUT_CLASSIFICATION	0.9999889436623457	WITHOUT_CLASSIFICATION	1.1056337654331047E-5	IMPLEMENTATION
// dangling '%' char	WITHOUT_CLASSIFICATION	0.9996769744487188	WITHOUT_CLASSIFICATION	3.2302555128118645E-4	IMPLEMENTATION
// main while loop (offset < length)	WITHOUT_CLASSIFICATION	0.9998466040016096	WITHOUT_CLASSIFICATION	1.5339599839029965E-4	IMPLEMENTATION
// debugging code, keeping for now	WITHOUT_CLASSIFICATION	0.9999761571293345	WITHOUT_CLASSIFICATION	2.3842870665455046E-5	IMPLEMENTATION
// MRI rounds up on nnn5nnn, but not nnn5 -- // except for when they do	WITHOUT_CLASSIFICATION	0.9999351227849095	WITHOUT_CLASSIFICATION	6.487721509060419E-5	IMPLEMENTATION
// "%.0f" % 0.99	WITHOUT_CLASSIFICATION	0.9994969634013726	WITHOUT_CLASSIFICATION	5.030365986273445E-4	IMPLEMENTATION
// limit the length of negatives if possible (also faster)	WITHOUT_CLASSIFICATION	0.9999647482672068	WITHOUT_CLASSIFICATION	3.525173279325862E-5	IMPLEMENTATION
// negative values	WITHOUT_CLASSIFICATION	0.9999865053741569	WITHOUT_CLASSIFICATION	1.3494625843050647E-5	IMPLEMENTATION
// calculation for negatives when %u specified // for values >= Integer.MIN_VALUE * 2, MRI uses (the equivalent of) //   long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val // for smaller values, BigInteger math is required to conform to MRI's // result.	WITHOUT_CLASSIFICATION	0.9999986440732548	WITHOUT_CLASSIFICATION	1.3559267452669305E-6	IMPLEMENTATION
// relatively cheap test for 32-bit values	WITHOUT_CLASSIFICATION	0.9999995574314251	WITHOUT_CLASSIFICATION	4.4256857491706064E-7	IMPLEMENTATION
// no such luck...	WITHOUT_CLASSIFICATION	0.9990361024663862	WITHOUT_CLASSIFICATION	9.638975336139032E-4	IMPLEMENTATION
// ok, now it gets expensive...	WITHOUT_CLASSIFICATION	0.9999283716200795	WITHOUT_CLASSIFICATION	7.162837992053313E-5	IMPLEMENTATION
// go through negated powers of 32 until we find one small enough 	WITHOUT_CLASSIFICATION	0.999981507212892	WITHOUT_CLASSIFICATION	1.849278710797371E-5	IMPLEMENTATION
// add to the corresponding positive power of 32 for the result. // meaningful? no. conformant? yes. I just write the code...	WITHOUT_CLASSIFICATION	0.999952611093764	WITHOUT_CLASSIFICATION	4.73889062361232E-5	IMPLEMENTATION
/* constant vector a */	WITHOUT_CLASSIFICATION	0.9999841596619136	WITHOUT_CLASSIFICATION	1.5840338086487457E-5	IMPLEMENTATION
/* most significant w-r bits */	WITHOUT_CLASSIFICATION	0.9999471832576101	WITHOUT_CLASSIFICATION	5.28167423897994E-5	IMPLEMENTATION
/* least significant r bits */	WITHOUT_CLASSIFICATION	0.999987474212731	WITHOUT_CLASSIFICATION	1.2525787268992574E-5	IMPLEMENTATION
// state[j] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999081922778789	WITHOUT_CLASSIFICATION	9.180772212113562E-5	IMPLEMENTATION
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999081922778789	WITHOUT_CLASSIFICATION	9.180772212113562E-5	IMPLEMENTATION
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999081922778789	WITHOUT_CLASSIFICATION	9.180772212113562E-5	IMPLEMENTATION
/* MSB is 1; assuring non-zero initial array */	WITHOUT_CLASSIFICATION	0.9999951433660816	WITHOUT_CLASSIFICATION	4.856633918359303E-6	IMPLEMENTATION
/* Tempering */	WITHOUT_CLASSIFICATION	0.9999158260374922	WITHOUT_CLASSIFICATION	8.4173962507808E-5	IMPLEMENTATION
// MRI behavior: Week values are monotonous. // So, weeks that effectively belong to previous year, // will get the value of 0, not 52 or 53, as in Java.	WITHOUT_CLASSIFICATION	0.9999999321257392	WITHOUT_CLASSIFICATION	6.787426074817721E-8	IMPLEMENTATION
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9992952131121798	WITHOUT_CLASSIFICATION	7.047868878201739E-4	IMPLEMENTATION
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9992952131121798	WITHOUT_CLASSIFICATION	7.047868878201739E-4	IMPLEMENTATION
// \v	WITHOUT_CLASSIFICATION	0.9999889436623457	WITHOUT_CLASSIFICATION	1.1056337654331047E-5	IMPLEMENTATION
//System.err.println("getSign()");	WITHOUT_CLASSIFICATION	0.9994792531202606	WITHOUT_CLASSIFICATION	5.20746879739313E-4	IMPLEMENTATION
//System.err.println(" getSign/" + sign);	WITHOUT_CLASSIFICATION	0.9992943657530653	WITHOUT_CLASSIFICATION	7.056342469347323E-4	IMPLEMENTATION
//System.err.println("figureOutBase()/base=" + base);	WITHOUT_CLASSIFICATION	0.9992943657530653	WITHOUT_CLASSIFICATION	7.056342469347323E-4	IMPLEMENTATION
//System.err.println(" figureOutBase/base=" + base);	WITHOUT_CLASSIFICATION	0.9992943657530653	WITHOUT_CLASSIFICATION	7.056342469347323E-4	IMPLEMENTATION
//System.err.println("calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9992943657530653	WITHOUT_CLASSIFICATION	7.056342469347323E-4	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999632642966054	WITHOUT_CLASSIFICATION	3.673570339455358E-5	IMPLEMENTATION
//System.err.println(" stringToLong=" + val);	WITHOUT_CLASSIFICATION	0.9992943657530653	WITHOUT_CLASSIFICATION	7.056342469347323E-4	IMPLEMENTATION
// no number	WITHOUT_CLASSIFICATION	0.9993775399594667	WITHOUT_CLASSIFICATION	6.224600405333211E-4	IMPLEMENTATION
// trailing garbage	WITHOUT_CLASSIFICATION	0.9978232635269175	WITHOUT_CLASSIFICATION	0.0021767364730824966	IMPLEMENTATION
//System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);	WITHOUT_CLASSIFICATION	0.9983809999818873	WITHOUT_CLASSIFICATION	0.001619000018112604	IMPLEMENTATION
// it was not found at all!	WITHOUT_CLASSIFICATION	0.9994429592096861	WITHOUT_CLASSIFICATION	5.570407903138478E-4	IMPLEMENTATION
// can be overridden to be informed when objects are removed	WITHOUT_CLASSIFICATION	0.9995101374929725	WITHOUT_CLASSIFICATION	4.898625070275823E-4	IMPLEMENTATION
// we reached the end of a list	WITHOUT_CLASSIFICATION	0.999903403035336	WITHOUT_CLASSIFICATION	9.659696466401449E-5	IMPLEMENTATION
// goto next bucket	WITHOUT_CLASSIFICATION	0.9987871947317487	WITHOUT_CLASSIFICATION	0.0012128052682513339	IMPLEMENTATION
// we reached the end	WITHOUT_CLASSIFICATION	0.9997120461252955	WITHOUT_CLASSIFICATION	2.879538747045443E-4	IMPLEMENTATION
// entry is the first element of this bucket	WITHOUT_CLASSIFICATION	0.9999503511646045	WITHOUT_CLASSIFICATION	4.9648835395470576E-5	IMPLEMENTATION
// states	WITHOUT_CLASSIFICATION	0.9999697956140612	WITHOUT_CLASSIFICATION	3.0204385938894078E-5	IMPLEMENTATION
// remove leading whitespace (includes _ for lax) // get sign, if any	WITHOUT_CLASSIFICATION	0.9999900906666963	WITHOUT_CLASSIFICATION	9.909333303786644E-6	IMPLEMENTATION
// optimistic pass - calculate value as digits are processed // digits - lax rules // decimal digits - lax rules // exponent sign/digits - lax rules // digits - strict rules // decimal digits - strict rules // exponent sign/digits - strict rules // complete calculation if possible	WITHOUT_CLASSIFICATION	0.999999180503146	WITHOUT_CLASSIFICATION	8.194968540042928E-7	IMPLEMENTATION
// fields used for direct (optimistic) calculation // number of significant digits, updated as parsed // zeroes that may go to significand or exponent // offset of decimal pt from start (-1 -> no decimal) // significand, updated as parsed // exponent, updated as parsed	WITHOUT_CLASSIFICATION	0.9999999496783442	WITHOUT_CLASSIFICATION	5.032165592997098E-8	IMPLEMENTATION
// drop through for sign	WITHOUT_CLASSIFICATION	0.9999890884254982	WITHOUT_CLASSIFICATION	1.0911574501874251E-5	IMPLEMENTATION
// switch // will use this if we have to go back the slow way	WITHOUT_CLASSIFICATION	0.9995286294610125	WITHOUT_CLASSIFICATION	4.7137053898747166E-4	IMPLEMENTATION
// drop through for non-strict digits	WITHOUT_CLASSIFICATION	0.9999858993912975	WITHOUT_CLASSIFICATION	1.410060870254111E-5	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999599135438039	WITHOUT_CLASSIFICATION	4.0086456196227376E-5	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9998651743554371	WITHOUT_CLASSIFICATION	1.3482564456296662E-4	IMPLEMENTATION
// no digits, go calc (will return +/- 0.0 for lax)	WITHOUT_CLASSIFICATION	0.999989287375909	WITHOUT_CLASSIFICATION	1.0712624091044199E-5	IMPLEMENTATION
// ignore leading zeroes	WITHOUT_CLASSIFICATION	0.9999182163739544	WITHOUT_CLASSIFICATION	8.17836260456653E-5	IMPLEMENTATION
// just save a count of zeroes for now; if no digit // ends up following them, they'll be applied to the // exponent rather than the significand (and our max // length for optimistic calc).	WITHOUT_CLASSIFICATION	0.9999999712231441	WITHOUT_CLASSIFICATION	2.8776855885443423E-8	IMPLEMENTATION
// ok, got a non-zero, have to own up to our horded zeroes	WITHOUT_CLASSIFICATION	0.9999839085290314	WITHOUT_CLASSIFICATION	1.609147096856473E-5	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.999925799732636	WITHOUT_CLASSIFICATION	7.420026736398715E-5	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.999925799732636	WITHOUT_CLASSIFICATION	7.420026736398715E-5	IMPLEMENTATION
// oh, well, it was worth a try. go let // Double/FloatingDecimal handle it 	WITHOUT_CLASSIFICATION	0.9999397917212977	WITHOUT_CLASSIFICATION	6.0208278702254265E-5	IMPLEMENTATION
// ignore // switch	WITHOUT_CLASSIFICATION	0.999494627057404	WITHOUT_CLASSIFICATION	5.05372942596029E-4	IMPLEMENTATION
// ignore // switch	WITHOUT_CLASSIFICATION	0.999494627057404	WITHOUT_CLASSIFICATION	5.05372942596029E-4	IMPLEMENTATION
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.999977512157159	WITHOUT_CLASSIFICATION	2.2487842840991068E-5	IMPLEMENTATION
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.999977512157159	WITHOUT_CLASSIFICATION	2.2487842840991068E-5	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.99976493261956	WITHOUT_CLASSIFICATION	2.350673804399035E-4	IMPLEMENTATION
// first non_underscore char must be digit	WITHOUT_CLASSIFICATION	0.999904335118903	WITHOUT_CLASSIFICATION	9.566488109705852E-5	IMPLEMENTATION
// no dec digits, end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999792684285722	WITHOUT_CLASSIFICATION	2.0731571427823122E-5	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.9998542956775985	WITHOUT_CLASSIFICATION	1.4570432240141524E-4	IMPLEMENTATION
// difficult case, send to Double/FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999324416845567	WITHOUT_CLASSIFICATION	6.755831544329084E-5	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999857447876671	WITHOUT_CLASSIFICATION	1.4255212332776936E-5	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999857447876671	WITHOUT_CLASSIFICATION	1.4255212332776936E-5	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999599135438039	WITHOUT_CLASSIFICATION	4.0086456196227376E-5	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999599135438039	WITHOUT_CLASSIFICATION	4.0086456196227376E-5	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999599135438039	WITHOUT_CLASSIFICATION	4.0086456196227376E-5	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9998651743554371	WITHOUT_CLASSIFICATION	1.3482564456296662E-4	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.999925799732636	WITHOUT_CLASSIFICATION	7.420026736398715E-5	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.999925799732636	WITHOUT_CLASSIFICATION	7.420026736398715E-5	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.999925799732636	WITHOUT_CLASSIFICATION	7.420026736398715E-5	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.99976493261956	WITHOUT_CLASSIFICATION	2.350673804399035E-4	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.99976493261956	WITHOUT_CLASSIFICATION	2.350673804399035E-4	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.99976493261956	WITHOUT_CLASSIFICATION	2.350673804399035E-4	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.9998542956775985	WITHOUT_CLASSIFICATION	1.4570432240141524E-4	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.9998542956775985	WITHOUT_CLASSIFICATION	1.4570432240141524E-4	IMPLEMENTATION
// lax (str.to_f) allows underscores between e/E and sign	WITHOUT_CLASSIFICATION	0.999904815036649	WITHOUT_CLASSIFICATION	9.518496335101665E-5	IMPLEMENTATION
// switch // for // no exponent, so drop through for calculation	WITHOUT_CLASSIFICATION	0.999991799801083	WITHOUT_CLASSIFICATION	8.200198917025342E-6	IMPLEMENTATION
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9995828288298573	WITHOUT_CLASSIFICATION	4.171711701427454E-4	IMPLEMENTATION
// TODO: it's not clear to me why, in FloatingDecimal, the // "slop" calculation performed above for positive exponents // isn't used for negative exponents as well. Will find out...	WITHOUT_CLASSIFICATION	0.9379090343423141	IMPLEMENTATION	0.0620909656576858	WITHOUT_CLASSIFICATION
// no digits, error	WITHOUT_CLASSIFICATION	0.9974811896252745	WITHOUT_CLASSIFICATION	0.0025188103747255	IMPLEMENTATION
// too big for us	WITHOUT_CLASSIFICATION	0.9997448805293402	WITHOUT_CLASSIFICATION	2.55119470659771E-4	IMPLEMENTATION
// too big for us	WITHOUT_CLASSIFICATION	0.9997448805293402	WITHOUT_CLASSIFICATION	2.55119470659771E-4	IMPLEMENTATION
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999667547934751	WITHOUT_CLASSIFICATION	3.324520652491257E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999632642966054	WITHOUT_CLASSIFICATION	3.673570339455358E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999632642966054	WITHOUT_CLASSIFICATION	3.673570339455358E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999632642966054	WITHOUT_CLASSIFICATION	3.673570339455358E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999632642966054	WITHOUT_CLASSIFICATION	3.673570339455358E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999632642966054	WITHOUT_CLASSIFICATION	3.673570339455358E-5	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999908943137343	WITHOUT_CLASSIFICATION	9.105686265583618E-6	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999908943137343	WITHOUT_CLASSIFICATION	9.105686265583618E-6	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999908943137343	WITHOUT_CLASSIFICATION	9.105686265583618E-6	IMPLEMENTATION
// first char must be digit	WITHOUT_CLASSIFICATION	0.9999438046623654	WITHOUT_CLASSIFICATION	5.619533763453614E-5	IMPLEMENTATION
// no dec digits after '.', error for strict	WITHOUT_CLASSIFICATION	0.9998541398258214	WITHOUT_CLASSIFICATION	1.4586017417853896E-4	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9998651743554371	WITHOUT_CLASSIFICATION	1.3482564456296662E-4	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.99976493261956	WITHOUT_CLASSIFICATION	2.350673804399035E-4	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.99976493261956	WITHOUT_CLASSIFICATION	2.350673804399035E-4	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999632642966054	WITHOUT_CLASSIFICATION	3.673570339455358E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999632642966054	WITHOUT_CLASSIFICATION	3.673570339455358E-5	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999908943137343	WITHOUT_CLASSIFICATION	9.105686265583618E-6	IMPLEMENTATION
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999667547934751	WITHOUT_CLASSIFICATION	3.324520652491257E-5	IMPLEMENTATION
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999749697270506	WITHOUT_CLASSIFICATION	2.5030272949389645E-5	IMPLEMENTATION
// switch //while	WITHOUT_CLASSIFICATION	0.9995070029931873	WITHOUT_CLASSIFICATION	4.929970068126668E-4	IMPLEMENTATION
/*     * All the positive powers of 10 that can be     * represented exactly in double/float.     * (From sun.misc.FloatingDecimal.java)     */	WITHOUT_CLASSIFICATION	0.9999994163059746	WITHOUT_CLASSIFICATION	5.836940254151869E-7	IMPLEMENTATION
// Zlib behavior: negative win_bits means no header and no checksum.	WITHOUT_CLASSIFICATION	0.9999611125700584	WITHOUT_CLASSIFICATION	3.888742994161165E-5	IMPLEMENTATION
// rb_enc_mbclen	WITHOUT_CLASSIFICATION	0.9994903392551018	WITHOUT_CLASSIFICATION	5.096607448981903E-4	IMPLEMENTATION
// rb_enc_precise_mbclen	WITHOUT_CLASSIFICATION	0.999907900922588	WITHOUT_CLASSIFICATION	9.209907741204226E-5	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9983087359813324	WITHOUT_CLASSIFICATION	0.0016912640186675391	IMPLEMENTATION
// arg cannot be negative	WITHOUT_CLASSIFICATION	0.9999897330428297	WITHOUT_CLASSIFICATION	1.0266957170338657E-5	IMPLEMENTATION
// NoFunctionalitySignalFacade	WITHOUT_CLASSIFICATION	0.999907900922588	WITHOUT_CLASSIFICATION	9.209907741204226E-5	IMPLEMENTATION
// Change visibility so others can see it	WITHOUT_CLASSIFICATION	0.999958178249733	WITHOUT_CLASSIFICATION	4.182175026699424E-5	IMPLEMENTATION
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9974793863209895	WITHOUT_CLASSIFICATION	0.0025206136790104946	IMPLEMENTATION
// strip off "_dot_rb" for .rb files	WITHOUT_CLASSIFICATION	0.9999911823958311	WITHOUT_CLASSIFICATION	8.81760416896654E-6	IMPLEMENTATION
// Makes sure the key is not already in the hashtable.	WITHOUT_CLASSIFICATION	0.9998916749291008	WITHOUT_CLASSIFICATION	1.0832507089920962E-4	IMPLEMENTATION
// Rehash the table if the threshold is exceeded	WITHOUT_CLASSIFICATION	0.9999745232751535	WITHOUT_CLASSIFICATION	2.5476724846512302E-5	IMPLEMENTATION
// Creates the new entry.	WITHOUT_CLASSIFICATION	0.99989308208965	WITHOUT_CLASSIFICATION	1.0691791034998218E-4	IMPLEMENTATION
// next entry to return // current slot // current entry	WITHOUT_CLASSIFICATION	0.9994620737620438	WITHOUT_CLASSIFICATION	5.379262379562277E-4	IMPLEMENTATION
// advance to first entry	WITHOUT_CLASSIFICATION	0.9999245034429662	WITHOUT_CLASSIFICATION	7.549655703375661E-5	IMPLEMENTATION
// The reason why we need the stream is to be able to invoke available() on it. // STDIN in Java is non-interruptible, non-selectable, and attempt to read // on such stream might lead to thread being blocked without *any* way to unblock it. // That's where available() comes it, so at least we could check whether // anything is available to be read without blocking.	WITHOUT_CLASSIFICATION	0.9998563925743895	WITHOUT_CLASSIFICATION	1.436074256105682E-4	IMPLEMENTATION
/*package-protected*/	WITHOUT_CLASSIFICATION	0.9996940498953022	WITHOUT_CLASSIFICATION	3.059501046977244E-4	IMPLEMENTATION
// raw file URL, just open directly	WITHOUT_CLASSIFICATION	0.9999794801945159	WITHOUT_CLASSIFICATION	2.051980548415351E-5	IMPLEMENTATION
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9996335252526586	WITHOUT_CLASSIFICATION	3.6647474734139454E-4	IMPLEMENTATION
// if refcount is at or below zero, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999991167980905	WITHOUT_CLASSIFICATION	8.832019095070546E-7	IMPLEMENTATION
// if channel is already closed, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999970800249954	WITHOUT_CLASSIFICATION	2.919975004634412E-6	IMPLEMENTATION
// otherwise decrement and possibly close as normal	WITHOUT_CLASSIFICATION	0.9997397705555365	WITHOUT_CLASSIFICATION	2.6022944446352697E-4	IMPLEMENTATION
// r/w buffer // are we reading or writing?	WITHOUT_CLASSIFICATION	0.9999295959885879	WITHOUT_CLASSIFICATION	7.040401141204057E-5	IMPLEMENTATION
// this constructor is used by fdopen, so we don't increment descriptor ref count	WITHOUT_CLASSIFICATION	0.9999198157825341	WITHOUT_CLASSIFICATION	8.01842174659073E-5	IMPLEMENTATION
// unread back	WITHOUT_CLASSIFICATION	0.9991170448595524	WITHOUT_CLASSIFICATION	8.82955140447532E-4	IMPLEMENTATION
// iterate over remainder of buffer until we find a match	WITHOUT_CLASSIFICATION	0.9999941017625762	WITHOUT_CLASSIFICATION	5.898237423801066E-6	IMPLEMENTATION
// terminate and advance buffer when we find our char	WITHOUT_CLASSIFICATION	0.9999808928553816	WITHOUT_CLASSIFICATION	1.9107144618440682E-5	IMPLEMENTATION
// no match, append remainder of buffer and continue with next block	WITHOUT_CLASSIFICATION	0.9997814527378024	WITHOUT_CLASSIFICATION	2.185472621976011E-4	IMPLEMENTATION
// found a match above, check if remaining separator characters match, appending as we go	WITHOUT_CLASSIFICATION	0.9999953467505406	WITHOUT_CLASSIFICATION	4.653249459402241E-6	IMPLEMENTATION
// // Check file size - special files in /proc have zero size and need to be // handled by the generic read path. //	WITHOUT_CLASSIFICATION	0.999998702116633	WITHOUT_CLASSIFICATION	1.297883366940538E-6	IMPLEMENTATION
// // Copy any buffered data (including ungetc byte) //	WITHOUT_CLASSIFICATION	0.9999825653719923	WITHOUT_CLASSIFICATION	1.7434628007777325E-5	IMPLEMENTATION
// // Now read unbuffered directly from the file //	WITHOUT_CLASSIFICATION	0.9999697676864598	WITHOUT_CLASSIFICATION	3.0232313540155984E-5	IMPLEMENTATION
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999749697270506	WITHOUT_CLASSIFICATION	2.5030272949389645E-5	IMPLEMENTATION
// // Need to clamp source (buffer) size to avoid overrun //	WITHOUT_CLASSIFICATION	0.9997520560874643	WITHOUT_CLASSIFICATION	2.479439125357323E-4	IMPLEMENTATION
// not closing from finalize	WITHOUT_CLASSIFICATION	0.9996541170853305	WITHOUT_CLASSIFICATION	3.458829146694925E-4	IMPLEMENTATION
// clear runtime so it doesn't get stuck in memory (JRUBY-2933)	WITHOUT_CLASSIFICATION	0.9999932906536775	WITHOUT_CLASSIFICATION	6.709346322461311E-6	IMPLEMENTATION
// silence	WITHOUT_CLASSIFICATION	0.9999889436623457	WITHOUT_CLASSIFICATION	1.1056337654331047E-5	IMPLEMENTATION
// silence	WITHOUT_CLASSIFICATION	0.9999889436623457	WITHOUT_CLASSIFICATION	1.1056337654331047E-5	IMPLEMENTATION
// Don't bother	WITHOUT_CLASSIFICATION	0.9976836498844747	WITHOUT_CLASSIFICATION	0.002316350115525336	IMPLEMENTATION
// Don't bother	WITHOUT_CLASSIFICATION	0.9976836498844747	WITHOUT_CLASSIFICATION	0.002316350115525336	IMPLEMENTATION
// For Sockets, only write as much as will fit.	WITHOUT_CLASSIFICATION	0.9999743293619551	WITHOUT_CLASSIFICATION	2.5670638044924353E-5	IMPLEMENTATION
// Correct position for read / write buffering (we could invalidate, but expensive)	WITHOUT_CLASSIFICATION	0.999997402848197	WITHOUT_CLASSIFICATION	2.597151802976757E-6	IMPLEMENTATION
// Adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999897199980392	WITHOUT_CLASSIFICATION	1.028000196076454E-5	IMPLEMENTATION
// for SEEK_CUR, need to adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999587667297768	WITHOUT_CLASSIFICATION	4.1233270223289345E-5	IMPLEMENTATION
// libc flushes writes on any read from the actual file, so we flush here	WITHOUT_CLASSIFICATION	0.9999815891683704	WITHOUT_CLASSIFICATION	1.841083162958276E-5	IMPLEMENTATION
// we have read ahead, and need to back up	WITHOUT_CLASSIFICATION	0.999868224993531	WITHOUT_CLASSIFICATION	1.3177500646897818E-4	IMPLEMENTATION
// 128K seems to be the minimum at which the stat+seek is faster than reallocation	WITHOUT_CLASSIFICATION	0.9999912395854761	WITHOUT_CLASSIFICATION	8.76041452397866E-6	IMPLEMENTATION
// // limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations //	WITHOUT_CLASSIFICATION	0.999912518603552	WITHOUT_CLASSIFICATION	8.748139644804903E-5	IMPLEMENTATION
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9994342290587709	WITHOUT_CLASSIFICATION	5.657709412291669E-4	IMPLEMENTATION
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999644107950328	WITHOUT_CLASSIFICATION	3.55892049671385E-5	IMPLEMENTATION
// // Avoid double-copying for reads that are larger than the buffer size //	WITHOUT_CLASSIFICATION	0.9999715232002904	WITHOUT_CLASSIFICATION	2.8476799709595013E-5	IMPLEMENTATION
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.999965870317682	WITHOUT_CLASSIFICATION	3.412968231799845E-5	IMPLEMENTATION
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.999965870317682	WITHOUT_CLASSIFICATION	3.412968231799845E-5	IMPLEMENTATION
// // Avoid double-copying for reads that are larger than the buffer size, or // the destination is a direct buffer. //	WITHOUT_CLASSIFICATION	0.9999619295774868	WITHOUT_CLASSIFICATION	3.807042251318E-5	IMPLEMENTATION
// // We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating // a huge temporary native buffer, when doing reads into a heap buffer // If the dst buffer is direct, then no need to limit. //	WITHOUT_CLASSIFICATION	0.9998143470166702	WITHOUT_CLASSIFICATION	1.8565298332998232E-4	IMPLEMENTATION
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999563721474661	WITHOUT_CLASSIFICATION	4.362785253380944E-5	IMPLEMENTATION
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999563721474661	WITHOUT_CLASSIFICATION	4.362785253380944E-5	IMPLEMENTATION
// Doesn't fit in buffer. Write immediately. // ensure nothing left to write	WITHOUT_CLASSIFICATION	0.9999975556835591	WITHOUT_CLASSIFICATION	2.4443164409125513E-6	IMPLEMENTATION
// truncate can't lengthen files, so we save position, seek/write, and go back	WITHOUT_CLASSIFICATION	0.9999781419681344	WITHOUT_CLASSIFICATION	2.1858031865575042E-5	IMPLEMENTATION
// how far ahead we are when reading	WITHOUT_CLASSIFICATION	0.9992595269610474	WITHOUT_CLASSIFICATION	7.40473038952529E-4	IMPLEMENTATION
// if the read buffer is ahead, back up	WITHOUT_CLASSIFICATION	0.9999961761972764	WITHOUT_CLASSIFICATION	3.823802723507817E-6	IMPLEMENTATION
// close without removing from finalizers	WITHOUT_CLASSIFICATION	0.9999858199436961	WITHOUT_CLASSIFICATION	1.4180056304022669E-5	IMPLEMENTATION
// putting a bit back, so we're not at EOF anymore	WITHOUT_CLASSIFICATION	0.9999884770269892	WITHOUT_CLASSIFICATION	1.1522973010840954E-5	IMPLEMENTATION
// save the ungot	WITHOUT_CLASSIFICATION	0.9997695177542308	WITHOUT_CLASSIFICATION	2.3048224576903181E-4	IMPLEMENTATION
// otherwise, we try an unbuffered read to get whatever's available	WITHOUT_CLASSIFICATION	0.9999622530121544	WITHOUT_CLASSIFICATION	3.774698784566309E-5	IMPLEMENTATION
// ignore this; select() will set the correct mode when it is finished	WITHOUT_CLASSIFICATION	0.9999640828838184	WITHOUT_CLASSIFICATION	3.591711618158686E-5	IMPLEMENTATION
// flush first	WITHOUT_CLASSIFICATION	0.9996269775368046	WITHOUT_CLASSIFICATION	3.7302246319533244E-4	IMPLEMENTATION
// // Wake up any channels that became unblocked //	WITHOUT_CLASSIFICATION	0.9999455750633397	WITHOUT_CLASSIFICATION	5.4424936660300665E-5	IMPLEMENTATION
// // Register any new blocking I/O requests //	WITHOUT_CLASSIFICATION	0.9993293757920848	WITHOUT_CLASSIFICATION	6.70624207915246E-4	IMPLEMENTATION
// Now clear out any previously selected channels	WITHOUT_CLASSIFICATION	0.9999833262054558	WITHOUT_CLASSIFICATION	1.667379454413848E-5	IMPLEMENTATION
// // Wait for I/O on any channel //	WITHOUT_CLASSIFICATION	0.9999089241204148	WITHOUT_CLASSIFICATION	9.107587958518797E-5	IMPLEMENTATION
// Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'	WITHOUT_CLASSIFICATION	0.999611301439111	WITHOUT_CLASSIFICATION	3.886985608889807E-4	IMPLEMENTATION
// Java requires "w" for creating a file that does not exist	WITHOUT_CLASSIFICATION	0.998669026917883	WITHOUT_CLASSIFICATION	0.0013309730821170825	IMPLEMENTATION
// seek to force underlying buffer to flush	WITHOUT_CLASSIFICATION	0.9998604164854232	WITHOUT_CLASSIFICATION	1.3958351457668748E-4	IMPLEMENTATION
// seek to force read buffer to invalidate	WITHOUT_CLASSIFICATION	0.9998710627782506	WITHOUT_CLASSIFICATION	1.2893722174951423E-4	IMPLEMENTATION
/*        result = eval("arr = Array::['c', 200]; p arr");        assertEquals("[\"c\", 200]", result);        result = eval("arr = Array.['d', 200]; p arr");        assertEquals("[\"d\", 200]", result);        */	WITHOUT_CLASSIFICATION	0.9999730794079584	WITHOUT_CLASSIFICATION	2.6920592041549533E-5	IMPLEMENTATION
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9997795653903203	WITHOUT_CLASSIFICATION	2.2043460967957295E-4	IMPLEMENTATION
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.7406242643384612	WITHOUT_CLASSIFICATION	0.2593757356615387	IMPLEMENTATION
// make sure the pipe stream is set to null	WITHOUT_CLASSIFICATION	0.9997997088571619	WITHOUT_CLASSIFICATION	2.00291142838076E-4	IMPLEMENTATION
// make sure the main stream is set to null	WITHOUT_CLASSIFICATION	0.999368521305753	WITHOUT_CLASSIFICATION	6.314786942468635E-4	IMPLEMENTATION
// first try our custom-generated Unsafe	WITHOUT_CLASSIFICATION	0.99994350995347	WITHOUT_CLASSIFICATION	5.6490046529974965E-5	IMPLEMENTATION
// then try Sun's Unsafe	WITHOUT_CLASSIFICATION	0.9999417142497372	WITHOUT_CLASSIFICATION	5.828575026282778E-5	IMPLEMENTATION
// if we get here, the class and field exist; construct our Unsafe impl // that calls it directly	WITHOUT_CLASSIFICATION	0.9999802064079578	WITHOUT_CLASSIFICATION	1.979359204224947E-5	IMPLEMENTATION
// else leave it null	WITHOUT_CLASSIFICATION	0.9998841755288818	WITHOUT_CLASSIFICATION	1.1582447111815936E-4	IMPLEMENTATION
// TypeMatcher	WITHOUT_CLASSIFICATION	0.9994903392551018	WITHOUT_CLASSIFICATION	5.096607448981903E-4	IMPLEMENTATION
// This is now needed, since module Java // isn't in by default	WITHOUT_CLASSIFICATION	0.9999997140067326	WITHOUT_CLASSIFICATION	2.8599326744154623E-7	IMPLEMENTATION
// Iterate over the RubyHash keySet, simultaneously iterating over the values()	WITHOUT_CLASSIFICATION	0.9998951221737918	WITHOUT_CLASSIFICATION	1.048778262081498E-4	IMPLEMENTATION
// Get the value from the map via the key	WITHOUT_CLASSIFICATION	0.9999957136605153	WITHOUT_CLASSIFICATION	4.286339484678448E-6	IMPLEMENTATION
// Get the value from the map via the values iterator	WITHOUT_CLASSIFICATION	0.9999997842372849	WITHOUT_CLASSIFICATION	2.157627150726411E-7	IMPLEMENTATION
// Check the 2 values obtained via different means	WITHOUT_CLASSIFICATION	0.9999849163680173	WITHOUT_CLASSIFICATION	1.5083631982522705E-5	IMPLEMENTATION
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999984725546027	WITHOUT_CLASSIFICATION	1.5274453972662945E-6	IMPLEMENTATION
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999984725546027	WITHOUT_CLASSIFICATION	1.5274453972662945E-6	IMPLEMENTATION
// Check the entry.setValue values come back out ok	WITHOUT_CLASSIFICATION	0.9999892306970092	WITHOUT_CLASSIFICATION	1.0769302990811053E-5	IMPLEMENTATION
// If we're running from within an IDE we may not have // the .rb files in our classpath. Try to find them // in the filesystem instead.	WITHOUT_CLASSIFICATION	0.9999660245316759	WITHOUT_CLASSIFICATION	3.3975468324061076E-5	IMPLEMENTATION
//assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); //assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));	WITHOUT_CLASSIFICATION	0.9988659253261836	WITHOUT_CLASSIFICATION	0.0011340746738163672	IMPLEMENTATION
// Init	WITHOUT_CLASSIFICATION	0.9999893186444528	WITHOUT_CLASSIFICATION	1.0681355547094658E-5	IMPLEMENTATION
// Block	WITHOUT_CLASSIFICATION	0.9999889472755066	WITHOUT_CLASSIFICATION	1.1052724493421016E-5	IMPLEMENTATION
// Copy constructor	WITHOUT_CLASSIFICATION	0.9995974130370217	WITHOUT_CLASSIFICATION	4.0258696297840554E-4	IMPLEMENTATION
// presumably this require should fail	WITHOUT_CLASSIFICATION	0.9975327171830571	WITHOUT_CLASSIFICATION	0.0024672828169429355	IMPLEMENTATION
// JRUBY-646 // presumably this require should fail	WITHOUT_CLASSIFICATION	0.9975327171830571	WITHOUT_CLASSIFICATION	0.0024672828169429355	IMPLEMENTATION
// Test that requiring a normal Java class raises an error (JRUBY-3214	WITHOUT_CLASSIFICATION	0.9998461002825563	WITHOUT_CLASSIFICATION	1.5389971744380595E-4	IMPLEMENTATION
// ok	WITHOUT_CLASSIFICATION	0.9999733923096855	WITHOUT_CLASSIFICATION	2.660769031453037E-5	IMPLEMENTATION
// Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods // from Ruby so they are not really unused).	WITHOUT_CLASSIFICATION	0.999996241530591	WITHOUT_CLASSIFICATION	3.758469408926403E-6	IMPLEMENTATION
//load should work several times in a row	WITHOUT_CLASSIFICATION	0.9999549124742928	WITHOUT_CLASSIFICATION	4.5087525707184846E-5	IMPLEMENTATION
//reset the $loadTestvar	WITHOUT_CLASSIFICATION	0.9997140029836753	WITHOUT_CLASSIFICATION	2.859970163246521E-4	IMPLEMENTATION
//call throwException via JRuby	WITHOUT_CLASSIFICATION	0.9993769066871065	WITHOUT_CLASSIFICATION	6.230933128934091E-4	IMPLEMENTATION
// Notify the calling thread that we're about to go to sleep the first time	WITHOUT_CLASSIFICATION	0.9999980753141913	WITHOUT_CLASSIFICATION	1.9246858087775844E-6	IMPLEMENTATION
// wait for the go signal	WITHOUT_CLASSIFICATION	0.9999846076653373	WITHOUT_CLASSIFICATION	1.539233466273385E-5	IMPLEMENTATION
// run ten separate calls into Ruby, with delay and explicit GC	WITHOUT_CLASSIFICATION	0.9999786249070374	WITHOUT_CLASSIFICATION	2.1375092962693642E-5	IMPLEMENTATION
// wait until thread has initialized	WITHOUT_CLASSIFICATION	0.9999661653661647	WITHOUT_CLASSIFICATION	3.3834633835252935E-5	IMPLEMENTATION
// notify thread to proceed	WITHOUT_CLASSIFICATION	0.9999209455444362	WITHOUT_CLASSIFICATION	7.905445556380061E-5	IMPLEMENTATION
// wait until thread has completed	WITHOUT_CLASSIFICATION	0.9999455118435195	WITHOUT_CLASSIFICATION	5.448815648048027E-5	IMPLEMENTATION
// we do preand post load outside the "body" versions to pre-prepare // and pre-push the dynamic scope we need for lastline	WITHOUT_CLASSIFICATION	0.9997625169812222	WITHOUT_CLASSIFICATION	2.3748301877782435E-4	IMPLEMENTATION
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999995035169472	WITHOUT_CLASSIFICATION	4.96483052879271E-7	IMPLEMENTATION
// MRI behavior: raise ArgumentError for 'unknown command' before // checking number of args.	WITHOUT_CLASSIFICATION	0.9999708479333833	WITHOUT_CLASSIFICATION	2.9152066616676003E-5	IMPLEMENTATION
// if any exceptions were raised, we fail	WITHOUT_CLASSIFICATION	0.9999578283464671	WITHOUT_CLASSIFICATION	4.217165353296592E-5	IMPLEMENTATION
// there should only be one more thread in thread group than before we started	WITHOUT_CLASSIFICATION	0.9997438416694736	WITHOUT_CLASSIFICATION	2.561583305263727E-4	IMPLEMENTATION
// construct a new cache with thread's classloader and no limit	WITHOUT_CLASSIFICATION	0.9980654400242124	WITHOUT_CLASSIFICATION	0.0019345599757875742	IMPLEMENTATION
//        Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); //        Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();	WITHOUT_CLASSIFICATION	0.999880234760437	WITHOUT_CLASSIFICATION	1.1976523956303011E-4	IMPLEMENTATION
//        assertSame(script1, script2);	WITHOUT_CLASSIFICATION	0.9998698428613526	WITHOUT_CLASSIFICATION	1.3015713864744795E-4	IMPLEMENTATION
// void methods should work	WITHOUT_CLASSIFICATION	0.9998358560118956	WITHOUT_CLASSIFICATION	1.6414398810433788E-4	IMPLEMENTATION
// methods with required = 4 or higher should bind and be callable using reflection // JRUBY-3649	WITHOUT_CLASSIFICATION	0.9996979374149794	WITHOUT_CLASSIFICATION	3.0206258502059975E-4	IMPLEMENTATION
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999876848981791	WITHOUT_CLASSIFICATION	1.2315101820898413E-5	IMPLEMENTATION
// Ensure we have a new interpreter for each test. Previous we were using the //  same interpreter which caused problems as soon as one test failed.	WITHOUT_CLASSIFICATION	0.9999917652158059	WITHOUT_CLASSIFICATION	8.234784194034815E-6	IMPLEMENTATION
// Without a flush Ant will miss some of our output	WITHOUT_CLASSIFICATION	0.999992601611683	WITHOUT_CLASSIFICATION	7.398388317003538E-6	IMPLEMENTATION
// assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());	WITHOUT_CLASSIFICATION	0.9998432178634115	WITHOUT_CLASSIFICATION	1.567821365885727E-4	IMPLEMENTATION
//        int n = 10;	WITHOUT_CLASSIFICATION	0.999958090663244	WITHOUT_CLASSIFICATION	4.1909336756013925E-5	IMPLEMENTATION
// there might be more test classes in a single file, so we iterate over them	WITHOUT_CLASSIFICATION	0.9999991545717914	WITHOUT_CLASSIFICATION	8.454282085206681E-7	IMPLEMENTATION
//No ClassCastException!	WITHOUT_CLASSIFICATION	0.9997080435273106	WITHOUT_CLASSIFICATION	2.9195647268938054E-4	IMPLEMENTATION
// value equality	WITHOUT_CLASSIFICATION	0.9998975326537567	WITHOUT_CLASSIFICATION	1.0246734624330447E-4	IMPLEMENTATION
// identity equality	WITHOUT_CLASSIFICATION	0.9979710069713892	WITHOUT_CLASSIFICATION	0.0020289930286108812	IMPLEMENTATION
// bench straight-up integer fib(30)	WITHOUT_CLASSIFICATION	0.9998486973259779	WITHOUT_CLASSIFICATION	1.5130267402201357E-4	IMPLEMENTATION
// bench Integer fib	WITHOUT_CLASSIFICATION	0.9994966025803492	WITHOUT_CLASSIFICATION	5.03397419650763E-4	IMPLEMENTATION
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.999907900922588	WITHOUT_CLASSIFICATION	9.209907741204226E-5	IMPLEMENTATION
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.999907900922588	WITHOUT_CLASSIFICATION	9.209907741204226E-5	IMPLEMENTATION
// bench fixnum-boxed fib	WITHOUT_CLASSIFICATION	0.999907900922588	WITHOUT_CLASSIFICATION	9.209907741204226E-5	IMPLEMENTATION
// bench straight-up long fib(30)	WITHOUT_CLASSIFICATION	0.9998838269812651	WITHOUT_CLASSIFICATION	1.1617301873494776E-4	IMPLEMENTATION
// bench Long fib	WITHOUT_CLASSIFICATION	0.9994929637358052	WITHOUT_CLASSIFICATION	5.070362641947699E-4	IMPLEMENTATION
// skip this one, probably no 'ls' (windows)	WITHOUT_CLASSIFICATION	0.9997396417261695	WITHOUT_CLASSIFICATION	2.6035827383054074E-4	IMPLEMENTATION
// start off with a neutral parent	WITHOUT_CLASSIFICATION	0.9999768935255278	WITHOUT_CLASSIFICATION	2.3106474472127134E-5	IMPLEMENTATION
/*            public class Hello {                public static String getMessage() {                    return ".....";                }            }            */	WITHOUT_CLASSIFICATION	0.999998063264093	WITHOUT_CLASSIFICATION	1.9367359069652902E-6	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9998255847091816	WITHOUT_CLASSIFICATION	1.7441529081850315E-4	IMPLEMENTATION
// Note: We can't use file.exists() to check whether the symlink // exists or not, because that method returns false for existing // but broken symlink. So, we try without the existence check, // but in the try-catch block. // MRI behavior: symlink? on broken symlink should return true.	WITHOUT_CLASSIFICATION	0.9999994049052673	WITHOUT_CLASSIFICATION	5.950947326595223E-7	IMPLEMENTATION
// We are creating a new IO object that shares the same // IOHandler (and fileno).	WITHOUT_CLASSIFICATION	0.9999785688611824	WITHOUT_CLASSIFICATION	2.1431138817658173E-5	IMPLEMENTATION
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999980978294924	WITHOUT_CLASSIFICATION	1.9021705075500846E-6	IMPLEMENTATION
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9994792531202606	WITHOUT_CLASSIFICATION	5.20746879739313E-4	IMPLEMENTATION
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9997685535139985	WITHOUT_CLASSIFICATION	2.3144648600141504E-4	IMPLEMENTATION
// Translate "x || y" --> "x = (is_true(x) ? x : y)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, true, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9995475272213453	WITHOUT_CLASSIFICATION	4.5247277865462286E-4	IMPLEMENTATION
// // Force the client socket to be blocking //	WITHOUT_CLASSIFICATION	0.9999355931032072	WITHOUT_CLASSIFICATION	6.440689679275902E-5	IMPLEMENTATION
// Additional context surrounding tokens that both the lexer and // grammar use.	WITHOUT_CLASSIFICATION	0.9996234895637549	WITHOUT_CLASSIFICATION	3.7651043624510816E-4	IMPLEMENTATION
// Enebo:  c can never be antrhign but '.' // Why did I put this here?	WITHOUT_CLASSIFICATION	0.8471662502637872	WITHOUT_CLASSIFICATION	0.1528337497362128	IMPLEMENTATION
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9999889078736227	WITHOUT_CLASSIFICATION	1.1092126377217893E-5	IMPLEMENTATION
//[C,C] //[C, boolean]	WITHOUT_CLASSIFICATION	0.9996940498953022	WITHOUT_CLASSIFICATION	3.059501046977244E-4	IMPLEMENTATION
// Label for the start of the closure (used to implement redo) // Label for the end of the closure (used to implement retry)	WITHOUT_CLASSIFICATION	0.9987860916612098	WITHOUT_CLASSIFICATION	0.0012139083387902256	IMPLEMENTATION
// ignore; job was cancelled // FIXME: is this ok?	WITHOUT_CLASSIFICATION	0.9871931116351352	WITHOUT_CLASSIFICATION	0.012806888364864826	IMPLEMENTATION
//                    // check arity //                    checkArity(mv, scope);	WITHOUT_CLASSIFICATION	0.9998291422286532	WITHOUT_CLASSIFICATION	1.7085777134679897E-4	IMPLEMENTATION
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.999562842855572	WITHOUT_CLASSIFICATION	4.3715714442806437E-4	IMPLEMENTATION
// we take the first method found as our "n" method, since for any non-specific // arity they'll all error the same. If an actual "n" method is created, we // use that.	WITHOUT_CLASSIFICATION	0.9999545230345225	WITHOUT_CLASSIFICATION	4.5476965477567255E-5	IMPLEMENTATION
// Used by our duck-typification of Proc into interface types, to allow // coercing a simple proc into an interface parameter.	WITHOUT_CLASSIFICATION	0.9999997826293751	WITHOUT_CLASSIFICATION	2.1737062494789155E-7	IMPLEMENTATION
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.999990208227337	WITHOUT_CLASSIFICATION	9.791772662992952E-6	IMPLEMENTATION
// it's either as converted as we can make it via above logic or it's // not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9784428181457919	WITHOUT_CLASSIFICATION	0.02155718185420799	IMPLEMENTATION
// package scheme 2: separate module for each full package name, constructed  // from the camel-cased package segments: Java::JavaLang::Object, 	WITHOUT_CLASSIFICATION	0.9999965242508789	WITHOUT_CLASSIFICATION	3.4757491211416174E-6	IMPLEMENTATION
// // construct the proxy method //	WITHOUT_CLASSIFICATION	0.9997950602889093	WITHOUT_CLASSIFICATION	2.0493971109083388E-4	IMPLEMENTATION
// line 159 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999193720848288	WITHOUT_CLASSIFICATION	8.062791517120157E-5	IMPLEMENTATION
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999513005224537	WITHOUT_CLASSIFICATION	4.869947754635078E-5	IMPLEMENTATION
// line 152 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999193720848288	WITHOUT_CLASSIFICATION	8.062791517120157E-5	IMPLEMENTATION
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999967218767	WITHOUT_CLASSIFICATION	3.2781232999631873E-6	IMPLEMENTATION
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999513005224537	WITHOUT_CLASSIFICATION	4.869947754635078E-5	IMPLEMENTATION
// We only need to pass in current scope if we are evaluating as a block (which // is only done for evals).  We need to pass this in so that we can appropriately scope // down to captured scopes when we are parsing.	WITHOUT_CLASSIFICATION	0.9999992706470984	WITHOUT_CLASSIFICATION	7.293529016408288E-7	IMPLEMENTATION
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999903701727408	WITHOUT_CLASSIFICATION	9.629827259283439E-6	IMPLEMENTATION
// A place to store that special hiding space that bindings need to implement things like: // eval("a = 1", binding); eval("p a").  All binding instances must get access to this // hidden shared scope.  We store it here.  This will be null if no binding has yet // been called.	WITHOUT_CLASSIFICATION	0.9142843052137158	IMPLEMENTATION	0.08571569478628412	WITHOUT_CLASSIFICATION
// TODO: make it 16 now ? // MUST be power of 2!	WITHOUT_CLASSIFICATION	0.7168507799206547	IMPLEMENTATION	0.28314922007934534	WITHOUT_CLASSIFICATION
// check visibility // dup method	WITHOUT_CLASSIFICATION	0.9995031146946861	WITHOUT_CLASSIFICATION	4.968853053137813E-4	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9957613441816823	WITHOUT_CLASSIFICATION	0.004238655818317723	IMPLEMENTATION
// unsigned int, native // unsigned long, native	WITHOUT_CLASSIFICATION	0.9996268681206351	WITHOUT_CLASSIFICATION	3.731318793649137E-4	IMPLEMENTATION
//need padding //I'm fairly sure there is a library call to create a //string filled with a given char with a given length but I couldn't find it	WITHOUT_CLASSIFICATION	0.999391997565668	WITHOUT_CLASSIFICATION	6.080024343319819E-4	IMPLEMENTATION
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.999984970658638	WITHOUT_CLASSIFICATION	1.5029341361978123E-5	IMPLEMENTATION
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9997795653903203	WITHOUT_CLASSIFICATION	2.2043460967957295E-4	IMPLEMENTATION
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9995828288298573	WITHOUT_CLASSIFICATION	4.171711701427454E-4	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9927348626124466	WITHOUT_CLASSIFICATION	0.0072651373875534785	IMPLEMENTATION
// Estimate the square root with the foremost 62 bits of squarD // bi and scale are a tandem	WITHOUT_CLASSIFICATION	0.9999848520782794	WITHOUT_CLASSIFICATION	1.5147921720536122E-5	IMPLEMENTATION
// captures // begin and end are used when not groups defined // source string	WITHOUT_CLASSIFICATION	0.9999945544798405	WITHOUT_CLASSIFICATION	5.445520159470311E-6	IMPLEMENTATION
// // INSTANCE VARIABLE RUBY METHODS //	WITHOUT_CLASSIFICATION	0.9998442935603923	WITHOUT_CLASSIFICATION	1.5570643960777388E-4	IMPLEMENTATION
// switch // while	WITHOUT_CLASSIFICATION	0.9996515508998142	WITHOUT_CLASSIFICATION	3.4844910018591417E-4	IMPLEMENTATION
// For nodes do not have their own scope so we pass null to indicate this. // 'For's are implemented as blocks in evaluation, but they have no scope so we // just deal with this lack of scope throughout its lifespan.  We should probably // change the way this works to get rid of multiple null checks.	WITHOUT_CLASSIFICATION	0.9968392730723241	WITHOUT_CLASSIFICATION	0.003160726927675909	IMPLEMENTATION
// This field is used during argument processing to avoid putting RubyArray // instances that are purely for utility purposes into ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999949160161784	WITHOUT_CLASSIFICATION	5.083983821642905E-6	IMPLEMENTATION
// Parent container for this context (can be dynamic!!) // If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure // List of IR instructions for this method	WITHOUT_CLASSIFICATION	0.9999462791888396	WITHOUT_CLASSIFICATION	5.372081116036265E-5	IMPLEMENTATION
// Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = false    //    beq(v1, false, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999654450427163	WITHOUT_CLASSIFICATION	3.455495728364508E-5	IMPLEMENTATION
// expected	WITHOUT_CLASSIFICATION	0.9996647898798451	WITHOUT_CLASSIFICATION	3.352101201548596E-4	IMPLEMENTATION
// Do nothing	WITHOUT_CLASSIFICATION	0.999751201680432	WITHOUT_CLASSIFICATION	2.4879831956802097E-4	IMPLEMENTATION
// constructor	WITHOUT_CLASSIFICATION	0.9995649208712837	WITHOUT_CLASSIFICATION	4.3507912871630606E-4	IMPLEMENTATION
// If a line is followed by a blank line put // it back.	WITHOUT_CLASSIFICATION	0.9998858690535011	WITHOUT_CLASSIFICATION	1.1413094649895519E-4	IMPLEMENTATION
/* $>: default output handle */	WITHOUT_CLASSIFICATION	0.9999801480764062	WITHOUT_CLASSIFICATION	1.9851923593691747E-5	IMPLEMENTATION
// line 423	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 486	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// Signal uses sun.misc.* classes, this is not allowed // in the security-sensitive environments	WITHOUT_CLASSIFICATION	0.9996734156641085	WITHOUT_CLASSIFICATION	3.2658433589147207E-4	IMPLEMENTATION
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999920839496452	WITHOUT_CLASSIFICATION	7.91605035472915E-6	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9993881271084951	WITHOUT_CLASSIFICATION	6.118728915049491E-4	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9993881271084951	WITHOUT_CLASSIFICATION	6.118728915049491E-4	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999901309681073	WITHOUT_CLASSIFICATION	9.869031892715523E-6	IMPLEMENTATION
// if there's no receiver, evaluate and pass in the superclass, or // pass self if it no superclass	WITHOUT_CLASSIFICATION	0.9999759028279394	WITHOUT_CLASSIFICATION	2.4097172060737528E-5	IMPLEMENTATION
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.99967855024041	WITHOUT_CLASSIFICATION	3.214497595901302E-4	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.875046956537683	IMPLEMENTATION	0.12495304346231689	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.875046956537683	IMPLEMENTATION	0.12495304346231689	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.875046956537683	IMPLEMENTATION	0.12495304346231689	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.875046956537683	IMPLEMENTATION	0.12495304346231689	WITHOUT_CLASSIFICATION
// Decrease value to hit upper range.  	WITHOUT_CLASSIFICATION	0.999982717846113	WITHOUT_CLASSIFICATION	1.7282153886895897E-5	IMPLEMENTATION
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9998572662168502	WITHOUT_CLASSIFICATION	1.4273378314979692E-4	IMPLEMENTATION
// "else" body	WITHOUT_CLASSIFICATION	0.9998500014614793	WITHOUT_CLASSIFICATION	1.4999853852063882E-4	IMPLEMENTATION
// done // done // done // Nothing to do for 1.8 // done // done // done // done // done // done // done? // done // done // done // done // done // done // done // done // done // done // done //            case DEFINEDNODE: return buildDefined(node, m); // Incomplete // done // done // done // done // done // done // done // done //            case ENSURENODE: return buildEnsureNode(node, m); // DEFERRED // done // done // done // done //            case FLIPNODE: return buildFlip(node, m); // SSS FIXME: What code generates this AST? // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done? // done // done // done // done // done // done -- partially //            case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); // DEFERRED SSS FIXME: What code generates this AST? // done //            case POSTEXENODE: return buildPostExe(node, m); // DEFERRED //            case PREEXENODE: return buildPreExe(node, m); // DEFERRED // done?? // done	WITHOUT_CLASSIFICATION	0.9241194811592511	WITHOUT_CLASSIFICATION	0.07588051884074881	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9994903392551018	WITHOUT_CLASSIFICATION	5.096607448981903E-4	IMPLEMENTATION
/* $+: string matches last paren. */	WITHOUT_CLASSIFICATION	0.999999781428449	WITHOUT_CLASSIFICATION	2.1857155098413432E-7	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999978452653895	WITHOUT_CLASSIFICATION	2.154734610513148E-6	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999978452653895	WITHOUT_CLASSIFICATION	2.154734610513148E-6	IMPLEMENTATION
// Ruby code frequently uses a platform check to choose "NUL:" on windows // but since that check doesn't work well on JRuby, we help it out	WITHOUT_CLASSIFICATION	0.9999991606478614	WITHOUT_CLASSIFICATION	8.393521385507184E-7	IMPLEMENTATION
/* 10! */	WITHOUT_CLASSIFICATION	0.9999981747302832	WITHOUT_CLASSIFICATION	1.8252697168303275E-6	IMPLEMENTATION
//            case RESCUENODE: return buildRescue(node, m); // DEFERRED //            case RETRYNODE: return buildRetry(node, m); // DEFERRED // done	WITHOUT_CLASSIFICATION	0.9998414597118519	WITHOUT_CLASSIFICATION	1.585402881481182E-4	IMPLEMENTATION
// Is this instruction live or dead?  During optimization passes, if this instruction // causes no side-effects and the result of the instruction is not needed by anyone else, // we can remove this instruction altogether without affecting program correctness.	WITHOUT_CLASSIFICATION	0.8611566649930317	IMPLEMENTATION	0.1388433350069683	WITHOUT_CLASSIFICATION
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999323477044184	WITHOUT_CLASSIFICATION	6.765229558151595E-5	IMPLEMENTATION
// first, iterate over all required args	WITHOUT_CLASSIFICATION	0.9998915995441481	WITHOUT_CLASSIFICATION	1.0840045585184782E-4	IMPLEMENTATION
// // Determine if the parameter might be passed as a 32bit int parameter. // This just applies to buffer/pointer types. //	WITHOUT_CLASSIFICATION	0.9999997395429358	WITHOUT_CLASSIFICATION	2.6045706423827977E-7	IMPLEMENTATION
//Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());	WITHOUT_CLASSIFICATION	0.9996698834152495	WITHOUT_CLASSIFICATION	3.301165847504868E-4	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999967218767	WITHOUT_CLASSIFICATION	3.2781232999631873E-6	IMPLEMENTATION
// line 449	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 495	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// Management/monitoring	WITHOUT_CLASSIFICATION	0.999907900922588	WITHOUT_CLASSIFICATION	9.209907741204226E-5	IMPLEMENTATION
// if we've found the last char of the separator, // and we've found at least as many characters as separator length, // and the last n characters of our buffer match the separator, we're done	WITHOUT_CLASSIFICATION	0.9999997354842558	WITHOUT_CLASSIFICATION	2.6451574421385624E-7	IMPLEMENTATION
/* 14! */	WITHOUT_CLASSIFICATION	0.9999981747302832	WITHOUT_CLASSIFICATION	1.8252697168303275E-6	IMPLEMENTATION
// Process any set of annotations // No supported options	WITHOUT_CLASSIFICATION	0.9999971916971575	WITHOUT_CLASSIFICATION	2.8083028424150955E-6	IMPLEMENTATION
// add to the jitted methods set	WITHOUT_CLASSIFICATION	0.9997327476391061	WITHOUT_CLASSIFICATION	2.672523608938021E-4	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.9999928521341451	WITHOUT_CLASSIFICATION	7.147865854764263E-6	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.9999928521341451	WITHOUT_CLASSIFICATION	7.147865854764263E-6	IMPLEMENTATION
//            case SCLASSNODE: return buildSClass(node, m); // DEFERRED // done // done // done // done // done // done // done // done //            case UNDEFNODE: return buildUndef(node, m); // DEFERRED // done //            case VALIASNODE: return buildVAlias(node, m); // DEFERRED // done // done	WITHOUT_CLASSIFICATION	0.9998414597118519	WITHOUT_CLASSIFICATION	1.5854028814811836E-4	IMPLEMENTATION
// // Adding a post-invoke for the cb result serves to both keep it alive // until after the function returns, and allows us to clean up the native // trampoline early, instead of letting them accumulate until a GC run //	WITHOUT_CLASSIFICATION	0.9999782296478766	WITHOUT_CLASSIFICATION	2.177035212333776E-5	IMPLEMENTATION
/* The Java method doesn't care what class it is, but we need to               know what to convert it to, so we use the object's own class.               If that doesn't help, we use String to force a call to the               object's "to_s" method. */	WITHOUT_CLASSIFICATION	0.99246482142956	WITHOUT_CLASSIFICATION	0.007535178570439864	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.9999729374918364	WITHOUT_CLASSIFICATION	2.7062508163620883E-5	IMPLEMENTATION
// Atomic integers for symbol and method IDs	WITHOUT_CLASSIFICATION	0.9998432894773376	WITHOUT_CLASSIFICATION	1.5671052266238406E-4	IMPLEMENTATION
/* 18! */	WITHOUT_CLASSIFICATION	0.9999981747302832	WITHOUT_CLASSIFICATION	1.8252697168303275E-6	IMPLEMENTATION
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9672646701183142	WITHOUT_CLASSIFICATION	0.03273532988168584	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999569248696799	WITHOUT_CLASSIFICATION	4.3075130320139124E-5	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999569248696799	WITHOUT_CLASSIFICATION	4.3075130320139124E-5	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999569248696799	WITHOUT_CLASSIFICATION	4.3075130320139124E-5	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999569248696799	WITHOUT_CLASSIFICATION	4.3075130320139124E-5	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999995953043772	WITHOUT_CLASSIFICATION	4.046956228808805E-7	IMPLEMENTATION
/*      * This method takes as input a map of operands to their values, and outputs     * the result of this instruction.     *     * If the value map provides a value for any of the instruction's operands     * the expectation is that the operand will be replaced with the simplified value.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify.     *     * @param valueMap Mapping from operands to their simplified values     * @returns simplified result / output of this instruction     */	WITHOUT_CLASSIFICATION	0.9999999999819975	WITHOUT_CLASSIFICATION	1.800253518984532E-11	IMPLEMENTATION
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.994866764111875	WITHOUT_CLASSIFICATION	0.005133235888124907	IMPLEMENTATION
// An atomic long for generating DynamicMethod serial numbers	WITHOUT_CLASSIFICATION	0.9999089172247402	WITHOUT_CLASSIFICATION	9.10827752596982E-5	IMPLEMENTATION
// MRI behavior: always check whether the file is writable // or not, even if we are to write 0 bytes.	WITHOUT_CLASSIFICATION	0.9999963637333696	WITHOUT_CLASSIFICATION	3.6362666303646037E-6	IMPLEMENTATION
/* 22! */	WITHOUT_CLASSIFICATION	0.9999981747302832	WITHOUT_CLASSIFICATION	1.8252697168303275E-6	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.9995430574070318	WITHOUT_CLASSIFICATION	4.5694259296819755E-4	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999423521951334	WITHOUT_CLASSIFICATION	5.7647804866637354E-5	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999423521951334	WITHOUT_CLASSIFICATION	5.7647804866637354E-5	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999423521951334	WITHOUT_CLASSIFICATION	5.7647804866637354E-5	IMPLEMENTATION
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999973898740345	WITHOUT_CLASSIFICATION	2.610125965556512E-6	IMPLEMENTATION
// Build a new class and add it to the current scope (could be a script / module / class)	WITHOUT_CLASSIFICATION	0.9999898551443922	WITHOUT_CLASSIFICATION	1.0144855607791275E-5	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9998970394239488	WITHOUT_CLASSIFICATION	1.0296057605116807E-4	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9998970394239488	WITHOUT_CLASSIFICATION	1.0296057605116807E-4	IMPLEMENTATION
// AF_INET	WITHOUT_CLASSIFICATION	0.9999889436623457	WITHOUT_CLASSIFICATION	1.1056337654331047E-5	IMPLEMENTATION
//////////////////////////////////////////////////////////////////////////// // Now we provide default impls of a number of signatures. For each arity, // we first generate a non-block version of the method, which just adds // NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can // potentially take a block, to only generate the block-receiving signature // and still avoid arg boxing. // // We then provide default implementations of each block-accepting method // that in turn call the IRubyObject[]+Block version of call. This then // finally falls back on the minimum implementation requirement for // dynamic method handles. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9985733660607317	WITHOUT_CLASSIFICATION	0.0014266339392684148	IMPLEMENTATION
// Because we implement Java interfaces now, we need a new === that's // aware of those additional "virtual" supertypes	WITHOUT_CLASSIFICATION	0.9688711460017448	WITHOUT_CLASSIFICATION	0.031128853998255195	IMPLEMENTATION
// BASE64	WITHOUT_CLASSIFICATION	0.9999889436623457	WITHOUT_CLASSIFICATION	1.1056337654331047E-5	IMPLEMENTATION
/* note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY         * when value is an integer less than 1.         * We treat 0 as a special case to avoid Domain error.         */	WITHOUT_CLASSIFICATION	0.9999997909357878	WITHOUT_CLASSIFICATION	2.090642121653895E-7	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.9997610379440923	WITHOUT_CLASSIFICATION	2.3896205590767186E-4	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999969386284367	WITHOUT_CLASSIFICATION	3.0613715631936155E-6	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999969386284367	WITHOUT_CLASSIFICATION	3.0613715631936155E-6	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999549671928852	WITHOUT_CLASSIFICATION	4.503280711481105E-5	IMPLEMENTATION
// SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode // We won't get here for argument receives!  So, buildDasgn is called for // assignments to block variables within a block.  As far as the IR is concerned, // this is just a simple copy	WITHOUT_CLASSIFICATION	0.9999999953082971	WITHOUT_CLASSIFICATION	4.6917028255982E-9	IMPLEMENTATION
// getSimplifiedOperand returns the value of this operand, fully simplified // getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away // // The value is used during optimizations and propagated through the IR.  But, it is thrown away after that. // But, the operand form is used for constructing the compound objects represented by the operand. // // Example: a = [1], b = [3,4], c = [a,b], d = [2,c] //   -- getValue(c) = [1,[3,4]];     getSimplifiedOperand(c) = [1, b] //   -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] // // Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. // So, if contents of a or b is modified, the "simplified value"s of c and d also change!  This difference // is captured by these two methods.	WITHOUT_CLASSIFICATION	0.9999999989782105	WITHOUT_CLASSIFICATION	1.0217895209710343E-9	IMPLEMENTATION
//IRubyObject protocol = args[4];	WITHOUT_CLASSIFICATION	0.9995646598054025	WITHOUT_CLASSIFICATION	4.3534019459744584E-4	IMPLEMENTATION
// promise to implement three to N with block	WITHOUT_CLASSIFICATION	0.9845893626878667	WITHOUT_CLASSIFICATION	0.015410637312133433	IMPLEMENTATION
// Ruby's OMG capture all source in a Hash feature // Add each line to buffer when encountering newline or EOF for first time.	WITHOUT_CLASSIFICATION	0.9999972732185302	WITHOUT_CLASSIFICATION	2.726781469833498E-6	IMPLEMENTATION
// carriage return	WITHOUT_CLASSIFICATION	0.9996987344872793	WITHOUT_CLASSIFICATION	3.012655127206652E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9996989541462629	WITHOUT_CLASSIFICATION	3.010458537371066E-4	IMPLEMENTATION
// String construction routines by NOT byte[] buffer and making the target String shared 	WITHOUT_CLASSIFICATION	0.9999862847627488	WITHOUT_CLASSIFICATION	1.3715237251198933E-5	IMPLEMENTATION
// insert all nodes in sequence, hash them in the final instruction // KEY	WITHOUT_CLASSIFICATION	0.999989322982229	WITHOUT_CLASSIFICATION	1.0677017771067009E-5	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999978285358698	WITHOUT_CLASSIFICATION	2.1714641301579212E-6	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9157465403804731	WITHOUT_CLASSIFICATION	0.08425345961952692	IMPLEMENTATION
// Basic Block id // CFG that this basic block belongs to // All basic blocks have a starting label // List of non-label instructions	WITHOUT_CLASSIFICATION	0.9999847866550604	WITHOUT_CLASSIFICATION	1.521334493950538E-5	IMPLEMENTATION
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9992734929152437	WITHOUT_CLASSIFICATION	7.265070847562613E-4	IMPLEMENTATION
// For all uninitialized specific arities, we defer to the "n" method which // should raise appropriate error in all cases.	WITHOUT_CLASSIFICATION	0.9905827352692234	WITHOUT_CLASSIFICATION	0.00941726473077663	IMPLEMENTATION
// implement is called to force this class to create stubs for all // methods in the given interface, so they'll show up in the list // of methods and be invocable without passing through method_missing	WITHOUT_CLASSIFICATION	0.9999943825675475	WITHOUT_CLASSIFICATION	5.61743245254662E-6	IMPLEMENTATION
// CASE IR instructions are dummy instructions  // -- all when/then clauses have been converted into if-then-else blocks	WITHOUT_CLASSIFICATION	0.9999764462716763	WITHOUT_CLASSIFICATION	2.355372832371301E-5	IMPLEMENTATION
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999626280801428	WITHOUT_CLASSIFICATION	3.737191985730175E-5	IMPLEMENTATION
// leave it null and fall back on our normal invocation logic	WITHOUT_CLASSIFICATION	0.9995626234786519	WITHOUT_CLASSIFICATION	4.373765213481225E-4	IMPLEMENTATION
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999953292170506	WITHOUT_CLASSIFICATION	4.670782949454769E-6	IMPLEMENTATION
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9962043915104103	WITHOUT_CLASSIFICATION	0.0037956084895898203	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9996487327988599	WITHOUT_CLASSIFICATION	3.5126720114008863E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9996487327988599	WITHOUT_CLASSIFICATION	3.5126720114008863E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9996487327988599	WITHOUT_CLASSIFICATION	3.5126720114008863E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9996487327988599	WITHOUT_CLASSIFICATION	3.5126720114008863E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9996487327988599	WITHOUT_CLASSIFICATION	3.5126720114008863E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9996487327988599	WITHOUT_CLASSIFICATION	3.5126720114008863E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9996487327988599	WITHOUT_CLASSIFICATION	3.5126720114008863E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9996487327988599	WITHOUT_CLASSIFICATION	3.5126720114008863E-4	IMPLEMENTATION
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999192363700906	WITHOUT_CLASSIFICATION	8.076362990932582E-5	IMPLEMENTATION
/* fall through */	WITHOUT_CLASSIFICATION	0.9999633571278511	WITHOUT_CLASSIFICATION	3.66428721489231E-5	IMPLEMENTATION
// deal with case when "other" is not a string	WITHOUT_CLASSIFICATION	0.999911828054901	WITHOUT_CLASSIFICATION	8.817194509898711E-5	IMPLEMENTATION
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.999991090396202	WITHOUT_CLASSIFICATION	8.909603797935479E-6	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9998255847091816	WITHOUT_CLASSIFICATION	1.7441529081850315E-4	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9998255847091816	WITHOUT_CLASSIFICATION	1.7441529081850315E-4	IMPLEMENTATION
// store argument count information into scope	WITHOUT_CLASSIFICATION	0.9999937086827067	WITHOUT_CLASSIFICATION	6.2913172933485364E-6	IMPLEMENTATION
// the load method is used for loading as a top-level script, and prepares appropriate scoping around the code	WITHOUT_CLASSIFICATION	0.9999688517008208	WITHOUT_CLASSIFICATION	3.1148299179143455E-5	IMPLEMENTATION
// First, build assignments for specific named arguments	WITHOUT_CLASSIFICATION	0.9999584236504391	WITHOUT_CLASSIFICATION	4.1576349560833536E-5	IMPLEMENTATION
//        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } //        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }	WITHOUT_CLASSIFICATION	0.9999642951199404	WITHOUT_CLASSIFICATION	3.570488005949149E-5	IMPLEMENTATION
// get current context	WITHOUT_CLASSIFICATION	0.9998070091180932	WITHOUT_CLASSIFICATION	1.9299088190679822E-4	IMPLEMENTATION
// octal constant	WITHOUT_CLASSIFICATION	0.9992108601806671	WITHOUT_CLASSIFICATION	7.891398193329529E-4	IMPLEMENTATION
// read	WITHOUT_CLASSIFICATION	0.9999964031296158	WITHOUT_CLASSIFICATION	3.5968703841612433E-6	IMPLEMENTATION
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9995336859533992	WITHOUT_CLASSIFICATION	4.663140466006898E-4	IMPLEMENTATION
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.999560870276024	WITHOUT_CLASSIFICATION	4.391297239759341E-4	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.999913895400232	WITHOUT_CLASSIFICATION	8.610459976805307E-5	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.999913895400232	WITHOUT_CLASSIFICATION	8.610459976805307E-5	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.999913895400232	WITHOUT_CLASSIFICATION	8.610459976805307E-5	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999726807129143	WITHOUT_CLASSIFICATION	2.7319287085661586E-5	IMPLEMENTATION
// at end	WITHOUT_CLASSIFICATION	0.9999874716936727	WITHOUT_CLASSIFICATION	1.2528306327242089E-5	IMPLEMENTATION
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999774579887695	WITHOUT_CLASSIFICATION	2.254201123060823E-5	IMPLEMENTATION
// save blocking state	WITHOUT_CLASSIFICATION	0.9999824369816516	WITHOUT_CLASSIFICATION	1.756301834848387E-5	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999152713726623	WITHOUT_CLASSIFICATION	8.472862733765888E-5	IMPLEMENTATION
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999816308877483	WITHOUT_CLASSIFICATION	1.8369112251697466E-5	IMPLEMENTATION
// fall back on empty env when security disallows environment var access (like in an applet)	WITHOUT_CLASSIFICATION	0.9999886366008186	WITHOUT_CLASSIFICATION	1.1363399181397572E-5	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9998856044120242	WITHOUT_CLASSIFICATION	1.1439558797578251E-4	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9998856044120242	WITHOUT_CLASSIFICATION	1.1439558797578251E-4	IMPLEMENTATION
// load null block	WITHOUT_CLASSIFICATION	0.999388186924242	WITHOUT_CLASSIFICATION	6.118130757579122E-4	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999995094672613	WITHOUT_CLASSIFICATION	4.905327387110395E-7	IMPLEMENTATION
// nothing else to here - the module version will be // included in the class.	WITHOUT_CLASSIFICATION	0.9999979100520654	WITHOUT_CLASSIFICATION	2.089947934550915E-6	IMPLEMENTATION
// JRUBY-1000, fail early when attempting to subclass a final Java class; // solved here by adding an exception-throwing "inherited"	WITHOUT_CLASSIFICATION	0.9999857260522443	WITHOUT_CLASSIFICATION	1.4273947755619267E-5	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9990635027223164	WITHOUT_CLASSIFICATION	9.364972776836183E-4	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9990635027223164	WITHOUT_CLASSIFICATION	9.364972776836183E-4	IMPLEMENTATION
// Translate ret = (a || b) to ret = (a ? true : b) as follows //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = true //    beq(v1, true, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999449484319981	WITHOUT_CLASSIFICATION	5.505156800178348E-5	IMPLEMENTATION
// Initial precision is that of double numbers 2^63/2 ~ 4E18 // 63-1 an even number of number bits // precision seems 16 to 18 digits	WITHOUT_CLASSIFICATION	0.9999994367594295	WITHOUT_CLASSIFICATION	5.632405705123169E-7	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9945897126144203	WITHOUT_CLASSIFICATION	0.005410287385579756	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999632642966054	WITHOUT_CLASSIFICATION	3.673570339455358E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999632642966054	WITHOUT_CLASSIFICATION	3.673570339455358E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999632642966054	WITHOUT_CLASSIFICATION	3.673570339455358E-5	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.9995317225979875	WITHOUT_CLASSIFICATION	4.6827740201245286E-4	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.9998366967400635	WITHOUT_CLASSIFICATION	1.6330325993640232E-4	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.9998366967400635	WITHOUT_CLASSIFICATION	1.6330325993640232E-4	IMPLEMENTATION
// check arity	WITHOUT_CLASSIFICATION	0.9993310457967599	WITHOUT_CLASSIFICATION	6.689542032400423E-4	IMPLEMENTATION
// check arity	WITHOUT_CLASSIFICATION	0.9993310457967599	WITHOUT_CLASSIFICATION	6.689542032400423E-4	IMPLEMENTATION
// create the class	WITHOUT_CLASSIFICATION	0.9996291956025675	WITHOUT_CLASSIFICATION	3.7080439743259445E-4	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999785541746646	WITHOUT_CLASSIFICATION	2.144582533539804E-5	IMPLEMENTATION
// No hex value after the 'x'.	WITHOUT_CLASSIFICATION	0.9999934866038275	WITHOUT_CLASSIFICATION	6.513396172548836E-6	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.9999889436623457	WITHOUT_CLASSIFICATION	1.1056337654331047E-5	IMPLEMENTATION
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.999984794509925	WITHOUT_CLASSIFICATION	1.5205490075013205E-5	IMPLEMENTATION
// Let m be the exact digits precision in an earlier! loop	WITHOUT_CLASSIFICATION	0.9999982746760208	WITHOUT_CLASSIFICATION	1.7253239792355593E-6	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999943098983922	WITHOUT_CLASSIFICATION	5.69010160769583E-6	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999857447876671	WITHOUT_CLASSIFICATION	1.4255212332776936E-5	IMPLEMENTATION
// Label for the start of the method // Label for the end of the method	WITHOUT_CLASSIFICATION	0.9999297498987665	WITHOUT_CLASSIFICATION	7.025010123359574E-5	IMPLEMENTATION
// comparisons & checks // checks if the operand is non-null and non-false // EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...	WITHOUT_CLASSIFICATION	0.9999999715023887	WITHOUT_CLASSIFICATION	2.8497611370762024E-8	IMPLEMENTATION
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.8413979888434346	WITHOUT_CLASSIFICATION	0.1586020111565654	IMPLEMENTATION
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9997379758649221	WITHOUT_CLASSIFICATION	2.620241350779256E-4	IMPLEMENTATION
// all done with lookup attempts, release monitor	WITHOUT_CLASSIFICATION	0.9997657720674826	WITHOUT_CLASSIFICATION	2.34227932517438E-4	IMPLEMENTATION
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999967282405972	WITHOUT_CLASSIFICATION	3.271759402745938E-6	IMPLEMENTATION
// Create list of interface names to proxy (and make sure they really are interfaces) // Also build a hashcode from all classes to use for retrieving previously-created impl	WITHOUT_CLASSIFICATION	0.9999999054996053	WITHOUT_CLASSIFICATION	9.450039479426794E-8	IMPLEMENTATION
// Construct local variables based on parameter names passed in	WITHOUT_CLASSIFICATION	0.9999368402772504	WITHOUT_CLASSIFICATION	6.31597227496958E-5	IMPLEMENTATION
// Value of "TZ" property is of a bit different format, // which confuses the Java's TimeZone.getTimeZone(id) method, // and so, we need to convert it.	WITHOUT_CLASSIFICATION	0.9997605645780805	WITHOUT_CLASSIFICATION	2.3943542191943388E-4	IMPLEMENTATION
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9986696637013317	WITHOUT_CLASSIFICATION	0.0013303362986683655	IMPLEMENTATION
// ensure the object is associated with the wrapper we found it in, // so that if it comes back we don't re-wrap it	WITHOUT_CLASSIFICATION	0.9999562808844553	WITHOUT_CLASSIFICATION	4.3719115544651E-5	IMPLEMENTATION
// return sqrt(squarD) with precision of rootMC	WITHOUT_CLASSIFICATION	0.9999523641524164	WITHOUT_CLASSIFICATION	4.763584758359565E-5	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9927348626124466	WITHOUT_CLASSIFICATION	0.0072651373875534785	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9999632642966054	WITHOUT_CLASSIFICATION	3.673570339455358E-5	IMPLEMENTATION
// Get a new label using the provided label prefix	WITHOUT_CLASSIFICATION	0.9999889243103511	WITHOUT_CLASSIFICATION	1.1075689648741636E-5	IMPLEMENTATION
// normal exit, perform finally and return	WITHOUT_CLASSIFICATION	0.9999068331043438	WITHOUT_CLASSIFICATION	9.316689565624678E-5	IMPLEMENTATION
// coerce arguments	WITHOUT_CLASSIFICATION	0.9995150014386661	WITHOUT_CLASSIFICATION	4.8499856133392877E-4	IMPLEMENTATION
// 0.0 is ok // float range // inverted float range? // NaN // +infinity // -infinity	WITHOUT_CLASSIFICATION	0.9997928206325377	WITHOUT_CLASSIFICATION	2.0717936746222505E-4	IMPLEMENTATION
/* expected */	WITHOUT_CLASSIFICATION	0.9999446458187531	WITHOUT_CLASSIFICATION	5.535418124681887E-5	IMPLEMENTATION
// set this class's method names in var @__java_ovrd_methods if this // is the new class; otherwise, get method names from there if this is // a proxy superclass.	WITHOUT_CLASSIFICATION	0.9999989842105738	WITHOUT_CLASSIFICATION	1.0157894262586261E-6	IMPLEMENTATION
/* ignore backslashed spaces in %w */	WITHOUT_CLASSIFICATION	0.9999957768415739	WITHOUT_CLASSIFICATION	4.22315842606369E-6	IMPLEMENTATION
// Invert the sign, since TZ format and Java format // use opposite signs, sigh... Also, Java API requires // the sign to be always present, be it "+" or "-".	WITHOUT_CLASSIFICATION	0.9996244769418522	WITHOUT_CLASSIFICATION	3.7552305814779995E-4	IMPLEMENTATION
// no binding given, use 0 for both	WITHOUT_CLASSIFICATION	0.9998152716363643	WITHOUT_CLASSIFICATION	1.8472836363572765E-4	IMPLEMENTATION
// <=> may return nil in many circumstances, e.g. 3 <=> NaN        	WITHOUT_CLASSIFICATION	0.9999636153432515	WITHOUT_CLASSIFICATION	3.638465674844228E-5	IMPLEMENTATION
// use numbered access method	WITHOUT_CLASSIFICATION	0.9989146667655996	WITHOUT_CLASSIFICATION	0.0010853332344004975	IMPLEMENTATION
// Always use "GMT" since that's required by Java API.	WITHOUT_CLASSIFICATION	0.9998549492980867	WITHOUT_CLASSIFICATION	1.450507019131807E-4	IMPLEMENTATION
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9998391460577402	WITHOUT_CLASSIFICATION	1.60853942259963E-4	IMPLEMENTATION
// The dataStruct is a place where custom information can be // contained for core implementations that doesn't necessarily // want to go to the trouble of creating a subclass of // RubyObject. The OpenSSL implementation uses this heavily to // save holder objects containing Java cryptography objects. // Java integration uses this to store the Java object ref. //protected transient Object dataStruct;	WITHOUT_CLASSIFICATION	0.9999601091979718	WITHOUT_CLASSIFICATION	3.989080202815038E-5	IMPLEMENTATION
// Remaining arguments are for the script itself	WITHOUT_CLASSIFICATION	0.9999842198370025	WITHOUT_CLASSIFICATION	1.5780162997487213E-5	IMPLEMENTATION
// arg grouping, use slower arg walking logic	WITHOUT_CLASSIFICATION	0.9996808602220058	WITHOUT_CLASSIFICATION	3.1913977799432784E-4	IMPLEMENTATION
// build scope names string	WITHOUT_CLASSIFICATION	0.9999965052919266	WITHOUT_CLASSIFICATION	3.49470807331749E-6	IMPLEMENTATION
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999996426957628	WITHOUT_CLASSIFICATION	3.5730423722355727E-7	IMPLEMENTATION
// Here we create an "anonymous" exception type used for unrolling the stack. // MRI creates a new one for *every call* to timeout, which can be costly. // We opt to use a single exception type for all cases to avoid this overhead.	WITHOUT_CLASSIFICATION	0.9995570539231879	WITHOUT_CLASSIFICATION	4.429460768119959E-4	IMPLEMENTATION
// finally	WITHOUT_CLASSIFICATION	0.9999903946101255	WITHOUT_CLASSIFICATION	9.605389874406524E-6	IMPLEMENTATION
// MRI behavior: With TZ equal to "GMT" or "UTC", Time.now // is *NOT* considered as a proper GMT/UTC time: //   ENV['TZ']="GMT" //   Time.now.gmt? ==> false //   ENV['TZ']="UTC" //   Time.now.utc? ==> false // Hence, we need to adjust for that.	WITHOUT_CLASSIFICATION	0.9999974447915879	WITHOUT_CLASSIFICATION	2.555208412100485E-6	IMPLEMENTATION
// ?l  | boolean | True if file1 exists and is a symbolic link	WITHOUT_CLASSIFICATION	0.9999991543985984	WITHOUT_CLASSIFICATION	8.456014016309863E-7	IMPLEMENTATION
// This try/catch is to allow failing over to the "commands" logic // when running from within a jruby-complete jar file, which has // jruby.home = a jar file URL that does not resolve correctly with // JRubyFile.create.	WITHOUT_CLASSIFICATION	0.9989886354695611	WITHOUT_CLASSIFICATION	0.0010113645304389832	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9993917640613521	WITHOUT_CLASSIFICATION	6.082359386479299E-4	IMPLEMENTATION
// specific arity	WITHOUT_CLASSIFICATION	0.9991693454503499	WITHOUT_CLASSIFICATION	8.306545496502667E-4	IMPLEMENTATION
// In the case of two arguments, MRI will discard the portion of // the first argument after a decimal point (i.e., "floor"). // However in the case of a single argument, any portion after // the decimal point is honored.	WITHOUT_CLASSIFICATION	0.9999995178637572	WITHOUT_CLASSIFICATION	4.82136242755271E-7	IMPLEMENTATION
// ?w  | boolean | True if file1 exists and is writable by effective uid/gid	WITHOUT_CLASSIFICATION	0.9999992865538789	WITHOUT_CLASSIFICATION	7.134461210310625E-7	IMPLEMENTATION
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9998442935603923	WITHOUT_CLASSIFICATION	1.5570643960777388E-4	IMPLEMENTATION
/*    @JRubyMethod    public IRubyObject to_proc() {        return RubyProc.newProc(getRuntime(),                                CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()),                                Block.Type.PROC);    }    */	WITHOUT_CLASSIFICATION	0.9999940646167098	WITHOUT_CLASSIFICATION	5.935383290164757E-6	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999171866599657	WITHOUT_CLASSIFICATION	8.281334003431504E-5	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999171866599657	WITHOUT_CLASSIFICATION	8.281334003431504E-5	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999578090119793	WITHOUT_CLASSIFICATION	4.219098802071723E-5	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999578090119793	WITHOUT_CLASSIFICATION	4.219098802071723E-5	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9966670707987205	WITHOUT_CLASSIFICATION	0.0033329292012793756	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9966670707987205	WITHOUT_CLASSIFICATION	0.0033329292012793756	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999938805580627	WITHOUT_CLASSIFICATION	6.119441937270031E-6	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999938805580627	WITHOUT_CLASSIFICATION	6.119441937270031E-6	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9994903392551018	WITHOUT_CLASSIFICATION	5.096607448981903E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9994903392551018	WITHOUT_CLASSIFICATION	5.096607448981903E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9994903392551018	WITHOUT_CLASSIFICATION	5.096607448981903E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9994903392551018	WITHOUT_CLASSIFICATION	5.096607448981903E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9994903392551018	WITHOUT_CLASSIFICATION	5.096607448981903E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9994903392551018	WITHOUT_CLASSIFICATION	5.096607448981903E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9994903392551018	WITHOUT_CLASSIFICATION	5.096607448981903E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9994903392551018	WITHOUT_CLASSIFICATION	5.096607448981903E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9994903392551018	WITHOUT_CLASSIFICATION	5.096607448981903E-4	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9996557442554582	WITHOUT_CLASSIFICATION	3.4425574454169286E-4	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9996557442554582	WITHOUT_CLASSIFICATION	3.4425574454169286E-4	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9996557442554582	WITHOUT_CLASSIFICATION	3.4425574454169286E-4	IMPLEMENTATION
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9997843868156374	WITHOUT_CLASSIFICATION	2.1561318436262063E-4	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999945707039792	WITHOUT_CLASSIFICATION	5.42929602075203E-6	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999945707039792	WITHOUT_CLASSIFICATION	5.42929602075203E-6	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999945707039792	WITHOUT_CLASSIFICATION	5.42929602075203E-6	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999005866300201	WITHOUT_CLASSIFICATION	9.941336997987201E-5	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999005866300201	WITHOUT_CLASSIFICATION	9.941336997987201E-5	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999005866300201	WITHOUT_CLASSIFICATION	9.941336997987201E-5	IMPLEMENTATION
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9998442935603923	WITHOUT_CLASSIFICATION	1.5570643960777388E-4	IMPLEMENTATION
// backspace	WITHOUT_CLASSIFICATION	0.9994908863426493	WITHOUT_CLASSIFICATION	5.091136573507107E-4	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
/* package-private */	WITHOUT_CLASSIFICATION	0.9999848141089687	WITHOUT_CLASSIFICATION	1.5185891031410121E-5	IMPLEMENTATION
// fall through	WITHOUT_CLASSIFICATION	0.9997780795697203	WITHOUT_CLASSIFICATION	2.2192043027982223E-4	IMPLEMENTATION
// fall through	WITHOUT_CLASSIFICATION	0.9997780795697203	WITHOUT_CLASSIFICATION	2.2192043027982223E-4	IMPLEMENTATION
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9998220805399509	WITHOUT_CLASSIFICATION	1.7791946004912256E-4	IMPLEMENTATION
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9989548843465946	WITHOUT_CLASSIFICATION	0.0010451156534054425	IMPLEMENTATION
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9989548843465946	WITHOUT_CLASSIFICATION	0.0010451156534054425	IMPLEMENTATION
/**      * Nested class whose instances act as thunks reacting to to_str method     * called from (Exception#to_str, Exception#message)     * MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!",     * to_str implementation: "name_err_mesg_to_str"     *     * TODO: this class should not be lookupable     */	WITHOUT_CLASSIFICATION	0.9863885108294808	IMPLEMENTATION	0.01361148917051918	WITHOUT_CLASSIFICATION
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9999208145521714	WITHOUT_CLASSIFICATION	7.918544782853784E-5	IMPLEMENTATION
// The name of this source (e.g. a filename: foo.rb)	WITHOUT_CLASSIFICATION	0.9999663171192736	WITHOUT_CLASSIFICATION	3.368288072637367E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999249245671553	WITHOUT_CLASSIFICATION	7.507543284469113E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999249245671553	WITHOUT_CLASSIFICATION	7.507543284469113E-5	IMPLEMENTATION
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9999996866401697	WITHOUT_CLASSIFICATION	3.1335983029175093E-7	IMPLEMENTATION
// We yield here to hopefully permit the target thread to schedule // MRI immediately schedules it, so this is close but not exact	WITHOUT_CLASSIFICATION	0.9999796629907092	WITHOUT_CLASSIFICATION	2.033700929082454E-5	IMPLEMENTATION
// note that addMethod now does its own put, so any change made to // functionality here should be made there as well 	WITHOUT_CLASSIFICATION	0.9999997525457076	WITHOUT_CLASSIFICATION	2.4745429228884037E-7	IMPLEMENTATION
/* Currently dead code, but useful when we figure out how to actually perform translit.    private static boolean isTranslit(String encoding) {        return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false;    }*/	WITHOUT_CLASSIFICATION	0.9888567819674737	WITHOUT_CLASSIFICATION	0.011143218032526298	IMPLEMENTATION
// empirically it appears that to_ary coersions always return array or nil, so this // should always be an array by now.	WITHOUT_CLASSIFICATION	0.9999407742077769	WITHOUT_CLASSIFICATION	5.922579222311831E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999249245671553	WITHOUT_CLASSIFICATION	7.507543284469113E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999249245671553	WITHOUT_CLASSIFICATION	7.507543284469113E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999249245671553	WITHOUT_CLASSIFICATION	7.507543284469113E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999249245671553	WITHOUT_CLASSIFICATION	7.507543284469113E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999249245671553	WITHOUT_CLASSIFICATION	7.507543284469113E-5	IMPLEMENTATION
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999925664342338	WITHOUT_CLASSIFICATION	7.433565766175647E-6	IMPLEMENTATION
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999042895390625	WITHOUT_CLASSIFICATION	9.571046093749992E-5	IMPLEMENTATION
// if it's an inner class and it's not public, we can't access it; // skip population of declared elements	WITHOUT_CLASSIFICATION	0.9999744420141853	WITHOUT_CLASSIFICATION	2.5557985814759773E-5	IMPLEMENTATION
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999427262314662	WITHOUT_CLASSIFICATION	5.727376853373956E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9891717068154474	WITHOUT_CLASSIFICATION	0.010828293184552685	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9891717068154474	WITHOUT_CLASSIFICATION	0.010828293184552685	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9891717068154474	WITHOUT_CLASSIFICATION	0.010828293184552685	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9891717068154474	WITHOUT_CLASSIFICATION	0.010828293184552685	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9891717068154474	WITHOUT_CLASSIFICATION	0.010828293184552685	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9891717068154474	WITHOUT_CLASSIFICATION	0.010828293184552685	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9891717068154474	WITHOUT_CLASSIFICATION	0.010828293184552685	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9891717068154474	WITHOUT_CLASSIFICATION	0.010828293184552685	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9891717068154474	WITHOUT_CLASSIFICATION	0.010828293184552685	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9891717068154474	WITHOUT_CLASSIFICATION	0.010828293184552685	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9891717068154474	WITHOUT_CLASSIFICATION	0.010828293184552685	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9891717068154474	WITHOUT_CLASSIFICATION	0.010828293184552685	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9891717068154474	WITHOUT_CLASSIFICATION	0.010828293184552685	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9891717068154474	WITHOUT_CLASSIFICATION	0.010828293184552685	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9891717068154474	WITHOUT_CLASSIFICATION	0.010828293184552685	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9891717068154474	WITHOUT_CLASSIFICATION	0.010828293184552685	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9891717068154474	WITHOUT_CLASSIFICATION	0.010828293184552685	IMPLEMENTATION
// MRI behavior on Windows: it treats '/' as a root of // a current drive (but only if SINGLE slash is present!): // E.g., if current work directory is // 'D:/home/directory', then '/' means 'D:/'. // // Basically, '/path' is treated as a *RELATIVE* path, // relative to the current drive. '//path' is treated // as absolute one.	WITHOUT_CLASSIFICATION	0.9999996081157994	WITHOUT_CLASSIFICATION	3.9188420063881375E-7	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9891717068154474	WITHOUT_CLASSIFICATION	0.010828293184552685	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9891717068154474	WITHOUT_CLASSIFICATION	0.010828293184552685	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9891717068154474	WITHOUT_CLASSIFICATION	0.010828293184552685	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9891717068154474	WITHOUT_CLASSIFICATION	0.010828293184552685	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9891717068154474	WITHOUT_CLASSIFICATION	0.010828293184552685	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9891717068154474	WITHOUT_CLASSIFICATION	0.010828293184552685	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9891717068154474	WITHOUT_CLASSIFICATION	0.010828293184552685	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9891717068154474	WITHOUT_CLASSIFICATION	0.010828293184552685	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9891717068154474	WITHOUT_CLASSIFICATION	0.010828293184552685	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9891717068154474	WITHOUT_CLASSIFICATION	0.010828293184552685	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9891717068154474	WITHOUT_CLASSIFICATION	0.010828293184552685	IMPLEMENTATION
// This is needed when the enclosing class or module is a singleton. // In that case, we generated a name such as null::Foo, which broke  // Marshalling, among others. The correct thing to do in this situation  // is to insert the generate the name of form #<Class:01xasdfasd> if  // it's a singleton module/class, which this code accomplishes.	WITHOUT_CLASSIFICATION	0.9985984973305352	WITHOUT_CLASSIFICATION	0.0014015026694647746	IMPLEMENTATION
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9999081171286671	WITHOUT_CLASSIFICATION	9.188287133291912E-5	IMPLEMENTATION
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999161718686647	WITHOUT_CLASSIFICATION	8.382813133528222E-5	IMPLEMENTATION
// get "self"	WITHOUT_CLASSIFICATION	0.9996179400668253	WITHOUT_CLASSIFICATION	3.820599331746858E-4	IMPLEMENTATION
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999862546586141	WITHOUT_CLASSIFICATION	1.3745341385754123E-5	IMPLEMENTATION
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.999562842855572	WITHOUT_CLASSIFICATION	4.3715714442806437E-4	IMPLEMENTATION
// only public methods	WITHOUT_CLASSIFICATION	0.9999868793829034	WITHOUT_CLASSIFICATION	1.3120617096715576E-5	IMPLEMENTATION
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999456071256381	WITHOUT_CLASSIFICATION	5.4392874361854204E-5	IMPLEMENTATION
// First try to use drive letter from supplied dir value, // then try current work dir.	WITHOUT_CLASSIFICATION	0.9998236182290093	WITHOUT_CLASSIFICATION	1.7638177099067964E-4	IMPLEMENTATION
// JRUBY-2435: Aliasing eval and other "special" methods should display a warning // We warn because we treat certain method names as "special" for purposes of // optimization. Hopefully this will be enough to convince people not to alias // them.	WITHOUT_CLASSIFICATION	0.9996716594756045	WITHOUT_CLASSIFICATION	3.283405243954342E-4	IMPLEMENTATION
// generate a real method signature for the method, with to/from coercions	WITHOUT_CLASSIFICATION	0.9998450855513958	WITHOUT_CLASSIFICATION	1.5491444860409886E-4	IMPLEMENTATION
// block argument to the method // closure present // class present // method table mutations, def, defs, undef, alias // likely call to eval // makes calls that are aware of the frame // makes calls that are aware of the frame's self // makes calls that are aware of the frame's visibility // makes calls that are aware of the frame's block // makes calls that are aware of the frame's name // makes calls that set or get backref // makes calls that set or get lastline // makes calls that are aware of the frame's class // optional arguments to the method // rest arg to the method // makes calls that are aware of the scope // makes a zero-argument super call // accesses or sets constants // accesses or sets class variables // makes normal super call // contains a retry	WITHOUT_CLASSIFICATION	0.9999603141655345	WITHOUT_CLASSIFICATION	3.9685834465373486E-5	IMPLEMENTATION
// // Add aliases in Type::*, NativeType::* and FFI::TYPE_* //	WITHOUT_CLASSIFICATION	0.9999782095637463	WITHOUT_CLASSIFICATION	2.1790436253804782E-5	IMPLEMENTATION
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999941427102382	WITHOUT_CLASSIFICATION	5.857289761857003E-6	IMPLEMENTATION
// double-testing args.length here, but it avoids duplicating the proc-setup code in two places	WITHOUT_CLASSIFICATION	0.9999913118401669	WITHOUT_CLASSIFICATION	8.688159833168909E-6	IMPLEMENTATION
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999988119574593	WITHOUT_CLASSIFICATION	1.1880425405823682E-6	IMPLEMENTATION
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999980978294924	WITHOUT_CLASSIFICATION	1.9021705075500846E-6	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999182369213502	WITHOUT_CLASSIFICATION	8.176307864974698E-5	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999182369213502	WITHOUT_CLASSIFICATION	8.176307864974698E-5	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999182369213502	WITHOUT_CLASSIFICATION	8.176307864974698E-5	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999182369213502	WITHOUT_CLASSIFICATION	8.176307864974698E-5	IMPLEMENTATION
// snapshot of contents of directory // current position in directory	WITHOUT_CLASSIFICATION	0.9999997872891194	WITHOUT_CLASSIFICATION	2.1271088057308022E-7	IMPLEMENTATION
// Exclusive locks in Java require the channel to be writable, otherwise // an exception is thrown (terminating JRuby execution). // But flock behavior of MRI is that it allows // exclusive locks even on non-writable file. So we convert exclusive // lock to shared lock if the channel is not writable, to better match // the MRI behavior.	WITHOUT_CLASSIFICATION	0.9962000133809995	WITHOUT_CLASSIFICATION	0.003799986619000494	IMPLEMENTATION
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9998582379397647	WITHOUT_CLASSIFICATION	1.4176206023529866E-4	IMPLEMENTATION
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9998582379397647	WITHOUT_CLASSIFICATION	1.4176206023529866E-4	IMPLEMENTATION
// set self to the class	WITHOUT_CLASSIFICATION	0.9999445976018728	WITHOUT_CLASSIFICATION	5.5402398127192274E-5	IMPLEMENTATION
/* ---------- Public fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999750096538566	WITHOUT_CLASSIFICATION	2.4990346143440855E-5	IMPLEMENTATION
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999855705662016	WITHOUT_CLASSIFICATION	1.4429433798393527E-5	IMPLEMENTATION
// zero args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999868692620172	WITHOUT_CLASSIFICATION	1.3130737982895003E-5	IMPLEMENTATION
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999900563475119	WITHOUT_CLASSIFICATION	9.943652488032008E-6	IMPLEMENTATION
// Store each line into this list if not null.	WITHOUT_CLASSIFICATION	0.9992552210578541	WITHOUT_CLASSIFICATION	7.447789421458205E-4	IMPLEMENTATION
// Portion of line right after beginning marker	WITHOUT_CLASSIFICATION	0.9999343352127201	WITHOUT_CLASSIFICATION	6.566478727980516E-5	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999438696353603	WITHOUT_CLASSIFICATION	5.6130364639791566E-5	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999438696353603	WITHOUT_CLASSIFICATION	5.6130364639791566E-5	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999438696353603	WITHOUT_CLASSIFICATION	5.6130364639791566E-5	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999438696353603	WITHOUT_CLASSIFICATION	5.6130364639791566E-5	IMPLEMENTATION
// If an IO exception occurs (something odd, but possible) // A directory may return null.	WITHOUT_CLASSIFICATION	0.9999975235873191	WITHOUT_CLASSIFICATION	2.4764126809077732E-6	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999995113533876	WITHOUT_CLASSIFICATION	4.886466124629241E-7	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999995113533876	WITHOUT_CLASSIFICATION	4.886466124629241E-7	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999995113533876	WITHOUT_CLASSIFICATION	4.886466124629241E-7	IMPLEMENTATION
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.99956044117166	WITHOUT_CLASSIFICATION	4.3955882834006515E-4	IMPLEMENTATION
// finally with no exception	WITHOUT_CLASSIFICATION	0.9998611702800685	WITHOUT_CLASSIFICATION	1.3882971993149645E-4	IMPLEMENTATION
// Now, for all variables used by 'i' mark them live before 'i'	WITHOUT_CLASSIFICATION	0.9999911475036836	WITHOUT_CLASSIFICATION	8.852496316555734E-6	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.875046956537683	IMPLEMENTATION	0.12495304346231689	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.875046956537683	IMPLEMENTATION	0.12495304346231689	WITHOUT_CLASSIFICATION
/* The counting of slashes that follows is simply a way to adhere to          * Ruby's UNC (or something) compatibility. When Ruby's expand_path is          * called with "//foo//bar" it will return "//foo/bar". JRuby uses          * java.io.File, and hence returns "/foo/bar". In order to retain          * java.io.File in the lower layers and provide full Ruby          * compatibility, the number of extra slashes must be counted and          * prepended to the result.         */	WITHOUT_CLASSIFICATION	0.9999998660439975	WITHOUT_CLASSIFICATION	1.3395600247490892E-7	IMPLEMENTATION
// This is almost always already interned, since it will be called with a symbol in most cases // but when created from Java code, we might get an argument that needs to be interned. // addAccessor has as a precondition that the string MUST be interned	WITHOUT_CLASSIFICATION	0.9999999999796445	WITHOUT_CLASSIFICATION	2.035552468526273E-11	IMPLEMENTATION
/* not a class */	WITHOUT_CLASSIFICATION	0.9993696085830408	WITHOUT_CLASSIFICATION	6.303914169591675E-4	IMPLEMENTATION
/* not a class */	WITHOUT_CLASSIFICATION	0.9993696085830408	WITHOUT_CLASSIFICATION	6.303914169591675E-4	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999201307158616	WITHOUT_CLASSIFICATION	7.986928413839229E-5	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999201307158616	WITHOUT_CLASSIFICATION	7.986928413839229E-5	IMPLEMENTATION
// io.available() only returns 0 after EOF is encountered // so we need to differentiate between the empty string and EOF	WITHOUT_CLASSIFICATION	0.9999998584953103	WITHOUT_CLASSIFICATION	1.4150468973271638E-7	IMPLEMENTATION
// In the current logic, if we get here we know that module is not an // IncludedModuleWrapper, so there's no need to fish out the delegate. But just // in case the logic should change later, let's do it anyway	WITHOUT_CLASSIFICATION	0.9985258028722849	WITHOUT_CLASSIFICATION	0.001474197127715117	IMPLEMENTATION
// rb_iterate((VALUE(*)_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);	WITHOUT_CLASSIFICATION	0.9998432178634115	WITHOUT_CLASSIFICATION	1.567821365885727E-4	IMPLEMENTATION
// Broken symlinks considered by exists() as non-existing, // so we need to check for symlinks explicitly.	WITHOUT_CLASSIFICATION	0.9999730081456645	WITHOUT_CLASSIFICATION	2.6991854335524434E-5	IMPLEMENTATION
// ////////////////// CONSTANT API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9998283048667167	WITHOUT_CLASSIFICATION	1.7169513328337658E-4	IMPLEMENTATION
// create the default thread group	WITHOUT_CLASSIFICATION	0.9999104998899145	WITHOUT_CLASSIFICATION	8.950011008550008E-5	IMPLEMENTATION
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.999845193012231	WITHOUT_CLASSIFICATION	1.5480698776896589E-4	IMPLEMENTATION
/* ============================     * Here are hash internals     * (This could be extracted to a separate class but it's not too large though)     * ============================     */	WITHOUT_CLASSIFICATION	0.9999993541718892	WITHOUT_CLASSIFICATION	6.458281108224856E-7	IMPLEMENTATION
// ////////////////// LOW-LEVEL CLASS VARIABLE INTERFACE //////////////// // // fetch/store/list class variables for this module //	WITHOUT_CLASSIFICATION	0.9999211472081727	WITHOUT_CLASSIFICATION	7.885279182732995E-5	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999562089956032	WITHOUT_CLASSIFICATION	4.3791004396756554E-5	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999562089956032	WITHOUT_CLASSIFICATION	4.3791004396756554E-5	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999934475540859	WITHOUT_CLASSIFICATION	6.552445914198797E-6	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999934475540859	WITHOUT_CLASSIFICATION	6.552445914198797E-6	IMPLEMENTATION
// retuns null when not found to avoid unnecessary getRuntime().getNil() call	WITHOUT_CLASSIFICATION	0.9894453029572773	WITHOUT_CLASSIFICATION	0.010554697042722746	IMPLEMENTATION
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999748083550994	WITHOUT_CLASSIFICATION	2.5191644900507386E-5	IMPLEMENTATION
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999158260374922	WITHOUT_CLASSIFICATION	8.4173962507808E-5	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9995111659685975	WITHOUT_CLASSIFICATION	4.88834031402657E-4	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9995111659685975	WITHOUT_CLASSIFICATION	4.88834031402657E-4	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9995111659685975	WITHOUT_CLASSIFICATION	4.88834031402657E-4	IMPLEMENTATION
// line 286	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 476	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 513	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 530	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 533	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 537	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 551	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// end loop	WITHOUT_CLASSIFICATION	0.9996243631809527	WITHOUT_CLASSIFICATION	3.7563681904724164E-4	IMPLEMENTATION
// MRI behavior: we don't print errno for actual Errno errors	WITHOUT_CLASSIFICATION	0.999746303316515	WITHOUT_CLASSIFICATION	2.5369668348500013E-4	IMPLEMENTATION
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9987000817582571	WITHOUT_CLASSIFICATION	0.0012999182417428627	IMPLEMENTATION
// Traverse the instructions in this basic block in reverse order! // Mark as dead all instructions whose results are not used! 	WITHOUT_CLASSIFICATION	0.9995868797570298	WITHOUT_CLASSIFICATION	4.131202429702367E-4	IMPLEMENTATION
// // fields should really be an immutable map as it is never modified after construction //	WITHOUT_CLASSIFICATION	0.9998770903421463	WITHOUT_CLASSIFICATION	1.2290965785362616E-4	IMPLEMENTATION
// load self object as IRubyObject, for recv param	WITHOUT_CLASSIFICATION	0.9999927247728281	WITHOUT_CLASSIFICATION	7.275227171944439E-6	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.875046956537683	IMPLEMENTATION	0.12495304346231689	WITHOUT_CLASSIFICATION
// If we define a class in Ruby, but later want to allow it to be defined in Java, // the allocator needs to be updated	WITHOUT_CLASSIFICATION	0.9999286331883025	WITHOUT_CLASSIFICATION	7.136681169741982E-5	IMPLEMENTATION
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9994863815322917	WITHOUT_CLASSIFICATION	5.136184677083065E-4	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9993881271084951	WITHOUT_CLASSIFICATION	6.118728915049491E-4	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999632642966054	WITHOUT_CLASSIFICATION	3.673570339455358E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999632642966054	WITHOUT_CLASSIFICATION	3.673570339455358E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999632642966054	WITHOUT_CLASSIFICATION	3.673570339455358E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999632642966054	WITHOUT_CLASSIFICATION	3.673570339455358E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999632642966054	WITHOUT_CLASSIFICATION	3.673570339455358E-5	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9983085638829151	WITHOUT_CLASSIFICATION	0.0016914361170848663	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999632642966054	WITHOUT_CLASSIFICATION	3.673570339455358E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999632642966054	WITHOUT_CLASSIFICATION	3.673570339455358E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999632642966054	WITHOUT_CLASSIFICATION	3.673570339455358E-5	IMPLEMENTATION
// MRI has extra pointer which makes our code look a little bit // more strange in // comparison	WITHOUT_CLASSIFICATION	0.9999773874670121	WITHOUT_CLASSIFICATION	2.261253298785444E-5	IMPLEMENTATION
// Tempory buffer to build up a potential token.  Consumer takes responsibility to reset  // this before use.	WITHOUT_CLASSIFICATION	0.9999269247436428	WITHOUT_CLASSIFICATION	7.307525635716565E-5	IMPLEMENTATION
//tmpPosition is required because getPosition()'s side effects. //if the warning is generated, the getPosition() on line 954 (this line + 18) will create //a wrong position if the "inclusive" flag is not set.	WITHOUT_CLASSIFICATION	0.999286431061604	WITHOUT_CLASSIFICATION	7.13568938396001E-4	IMPLEMENTATION
/* What is \v in C?                    case '\v':                        c2 = 'v';                        break;                        */	WITHOUT_CLASSIFICATION	0.9999901184875303	WITHOUT_CLASSIFICATION	9.881512469693884E-6	IMPLEMENTATION
/* Consider Thread aspects of this */	WITHOUT_CLASSIFICATION	0.9999801118596726	WITHOUT_CLASSIFICATION	1.9888140327378823E-5	IMPLEMENTATION
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999995352077357	WITHOUT_CLASSIFICATION	4.6479226445447164E-7	IMPLEMENTATION
// An interrupt or timeout may have caused us to miss // a notify that we consumed, so do another notify in // case someone else is available to pick it up.	WITHOUT_CLASSIFICATION	0.9998427103764675	WITHOUT_CLASSIFICATION	1.572896235324595E-4	IMPLEMENTATION
// line 572	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 601	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 601	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 625	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 649	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 691	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 723	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 732	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 745	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 766	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 785	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 794	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 800	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 812	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 827	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 839	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 845	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 864	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 886	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 896	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 911	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 929	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 952	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 970	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 972	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 991	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1011	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1026	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1038	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1067	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1085	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1097	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1105	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1122	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1133	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1145	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1169	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1201	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1210	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1229	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1261	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1287	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1293	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1307	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1320	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1325	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1363	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1398	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1448	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1456	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1473	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1492	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1513	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1523	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1562	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1582	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1603	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1603	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1615	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1620	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1635	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1652	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1681	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1708	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1716	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1755	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1772	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1789	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9994903392551018	WITHOUT_CLASSIFICATION	5.096607448981903E-4	IMPLEMENTATION
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9994903392551018	WITHOUT_CLASSIFICATION	5.096607448981903E-4	IMPLEMENTATION
/* force for args */	WITHOUT_CLASSIFICATION	0.9998693099767061	WITHOUT_CLASSIFICATION	1.306900232938643E-4	IMPLEMENTATION
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.999577615669519	WITHOUT_CLASSIFICATION	4.223843304809792E-4	IMPLEMENTATION
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9929767477345698	WITHOUT_CLASSIFICATION	0.0070232522654301854	IMPLEMENTATION
// We can assign if we already have variable of that name here or we are the only // scope in the chain (which Local scopes always are).	WITHOUT_CLASSIFICATION	0.999984574465235	WITHOUT_CLASSIFICATION	1.5425534765064867E-5	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9997995263951971	WITHOUT_CLASSIFICATION	2.004736048028231E-4	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9997995263951971	WITHOUT_CLASSIFICATION	2.004736048028231E-4	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9997995263951971	WITHOUT_CLASSIFICATION	2.004736048028231E-4	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9997995263951971	WITHOUT_CLASSIFICATION	2.004736048028231E-4	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9412566975828963	WITHOUT_CLASSIFICATION	0.058743302417103634	IMPLEMENTATION
/*     * This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:)     * into individual whenNodes.  The primary reason for this is to ensure lazy evaluation of     * the arguments (when foo,bar,gar:) to prevent side-effects.  In the old code this was done     * using nested when statements, which was awful for interpreter and compilation.     *     * Notes: This has semantic equivalence but will not be lexically equivalent.  Compiler     * needs to detect same bodies to simplify bytecode generated.     */	WITHOUT_CLASSIFICATION	0.9999988521854724	WITHOUT_CLASSIFICATION	1.1478145276456465E-6	IMPLEMENTATION
// line 313	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 339	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 361	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 413	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 451	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 472	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 500	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 515	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 555	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 582	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 619	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 636	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 669	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 703	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 776	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 814	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 823	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 854	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 872	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 905	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 925	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 958	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 992	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1047	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1072	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1081	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1108	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1136	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1168	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1192	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1241	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1267	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1286	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1301	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1314	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1333	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1362	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1395	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1420	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1439	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1476	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1535	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1588	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1618	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1643	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1669	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1728	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1753	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1779	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1794	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1812	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1837	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1895	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1925	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1950	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 1992	WITHOUT_CLASSIFICATION	0.9992424426093044	WITHOUT_CLASSIFICATION	7.575573906956324E-4	IMPLEMENTATION
// line 2014	WITHOUT_CLASSIFICATION	0.9992430616634734	WITHOUT_CLASSIFICATION	7.569383365266077E-4	IMPLEMENTATION
// Whether this scope is used as the "argument scope" for e.g. zsuper	WITHOUT_CLASSIFICATION	0.9999623426798326	WITHOUT_CLASSIFICATION	3.765732016741387E-5	IMPLEMENTATION
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9974800784470566	WITHOUT_CLASSIFICATION	0.0025199215529435022	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999943119141076	WITHOUT_CLASSIFICATION	5.688085892470072E-6	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999943119141076	WITHOUT_CLASSIFICATION	5.688085892470072E-6	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999943119141076	WITHOUT_CLASSIFICATION	5.688085892470072E-6	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999943119141076	WITHOUT_CLASSIFICATION	5.688085892470072E-6	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999943119141076	WITHOUT_CLASSIFICATION	5.688085892470072E-6	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999943119141076	WITHOUT_CLASSIFICATION	5.688085892470072E-6	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999943119141076	WITHOUT_CLASSIFICATION	5.688085892470072E-6	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9996377815868499	WITHOUT_CLASSIFICATION	3.6221841315008075E-4	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9996377815868499	WITHOUT_CLASSIFICATION	3.6221841315008075E-4	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9996377815868499	WITHOUT_CLASSIFICATION	3.6221841315008075E-4	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9996377815868499	WITHOUT_CLASSIFICATION	3.6221841315008075E-4	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9934227242795237	WITHOUT_CLASSIFICATION	0.006577275720476249	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9934227242795237	WITHOUT_CLASSIFICATION	0.006577275720476249	IMPLEMENTATION
// We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the // 'b' will get put into this new dynamic scope.  The original scope does not see the new // 'b' and successive evals with this binding will.  I take it having the ability to have  // succesive binding evals be able to share same scope makes sense from a programmers  // perspective.   One crappy outcome of this design is it requires Dynamic and Static  // scopes to be mutable for this one case.	WITHOUT_CLASSIFICATION	0.9999991410076423	WITHOUT_CLASSIFICATION	8.58992357836563E-7	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999987656896216	WITHOUT_CLASSIFICATION	1.234310378348238E-6	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999987656896216	WITHOUT_CLASSIFICATION	1.234310378348238E-6	IMPLEMENTATION
// tc // under method // self // under method // name // args	WITHOUT_CLASSIFICATION	0.9989195410365448	WITHOUT_CLASSIFICATION	0.0010804589634552204	IMPLEMENTATION
// allow it to bubble up	WITHOUT_CLASSIFICATION	0.9998645516794008	WITHOUT_CLASSIFICATION	1.3544832059919607E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999859498647076	WITHOUT_CLASSIFICATION	1.4050135292404395E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999859498647076	WITHOUT_CLASSIFICATION	1.4050135292404395E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999859498647076	WITHOUT_CLASSIFICATION	1.4050135292404395E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999859498647076	WITHOUT_CLASSIFICATION	1.4050135292404395E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999859498647076	WITHOUT_CLASSIFICATION	1.4050135292404395E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999859498647076	WITHOUT_CLASSIFICATION	1.4050135292404395E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999859498647076	WITHOUT_CLASSIFICATION	1.4050135292404395E-4	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999859498647076	WITHOUT_CLASSIFICATION	1.4050135292404395E-4	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999859498647076	WITHOUT_CLASSIFICATION	1.4050135292404395E-4	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9993956806706381	WITHOUT_CLASSIFICATION	6.043193293619691E-4	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9993956806706381	WITHOUT_CLASSIFICATION	6.043193293619691E-4	IMPLEMENTATION
// Check for a builtin first.	WITHOUT_CLASSIFICATION	0.9999841197214376	WITHOUT_CLASSIFICATION	1.5880278562351117E-5	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9998642279189585	WITHOUT_CLASSIFICATION	1.3577208104142508E-4	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9998642279189585	WITHOUT_CLASSIFICATION	1.3577208104142508E-4	IMPLEMENTATION
// Unfortunately, the number of digits in the exponent is // not clearly defined in Ruby documentation. This is a // platform/version-dependent behavior. On Linux/Mac/Cygwin/*nix, // two digits are used. On Windows, 3 digits are used. // It is desirable for JRuby to have consistent behavior, and // the two digits behavior was selected. This is also in sync // with "Java-native" sprintf behavior (java.util.Formatter). // E or e	WITHOUT_CLASSIFICATION	0.9999974026669458	WITHOUT_CLASSIFICATION	2.597333054159613E-6	IMPLEMENTATION
/** * Represents the the dynamic portion of scoping information.  The variableValues are the * values of assigned local or block variables.  The staticScope identifies which sort of * scope this is (block or local). *  * Properties of Dynamic Scopes: * 1. static and dynamic scopes have the same number of names to values * 2. size of variables (and thus names) is determined during parsing.  So those structured do *    not need to change * * FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents.  This * is harmless (other than wasting memory), but we should not do that.  We can fix this in two * ways: * 1. Fix all callers * 2. Check parent that is passed in and make if new instance is local, then its parent is not local */	WITHOUT_CLASSIFICATION	0.7121646697665824	IMPLEMENTATION	0.28783533023341745	WITHOUT_CLASSIFICATION
// This method handles '**/' patterns and delegates to // fnmatch_helper for the main work.	WITHOUT_CLASSIFICATION	0.9995417431767839	WITHOUT_CLASSIFICATION	4.582568232161286E-4	IMPLEMENTATION
// Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern  // Example: foo{a{c},b}bar -> fooa{c}bar, foobbar	WITHOUT_CLASSIFICATION	0.999998992250608	WITHOUT_CLASSIFICATION	1.0077493920780671E-6	IMPLEMENTATION
// double precision, native // double precision, native	WITHOUT_CLASSIFICATION	0.999968596196422	WITHOUT_CLASSIFICATION	3.140380357800235E-5	IMPLEMENTATION
// 64-bit number, native (as bignum)	WITHOUT_CLASSIFICATION	0.9997281452127024	WITHOUT_CLASSIFICATION	2.7185478729765066E-4	IMPLEMENTATION
// Next indicates to decode using native encoding format	WITHOUT_CLASSIFICATION	0.9997972015233729	WITHOUT_CLASSIFICATION	2.0279847662709756E-4	IMPLEMENTATION
// calculate based on a, b, c and d	WITHOUT_CLASSIFICATION	0.9999488537493635	WITHOUT_CLASSIFICATION	5.114625063655411E-5	IMPLEMENTATION
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9998904175013624	WITHOUT_CLASSIFICATION	1.0958249863752458E-4	IMPLEMENTATION
// MRI behavior:  for 'Q', do not add trailing nils	WITHOUT_CLASSIFICATION	0.9987349044673279	WITHOUT_CLASSIFICATION	0.0012650955326721537	IMPLEMENTATION
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.999999779336162	WITHOUT_CLASSIFICATION	2.2066383805184997E-7	IMPLEMENTATION
// exec needs to behave differently in-process, because it's technically // supposed to replace the calling process. So if we're supposed to run // in-process, we allow it to use the default streams and not use // pumpers at all. See JRUBY-2156 and JRUBY-2154.	WITHOUT_CLASSIFICATION	0.9944368789932501	WITHOUT_CLASSIFICATION	0.005563121006749833	IMPLEMENTATION
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999998286375291	WITHOUT_CLASSIFICATION	1.7136247086416602E-7	IMPLEMENTATION
// The problem we trying to solve below: STDIN in Java // is blocked and non-interruptible, so if we invoke read // on it, we might never be able to interrupt such thread. // So, we use in.available() to see if there is any input // ready, and only then read it. But this approach can't // tell whether the end of stream reached or not, so we // might end up looping right at the end of the stream. // Well, at least, we can improve the situation by checking // if some input was ever available, and if so, not // checking for available anymore, and just go to read.	WITHOUT_CLASSIFICATION	0.9999999641184215	WITHOUT_CLASSIFICATION	3.5881578506555E-8	IMPLEMENTATION
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9998710710954312	WITHOUT_CLASSIFICATION	1.289289045688465E-4	IMPLEMENTATION
// an empirically derived rule: precision applies to // significand length, irrespective of exponent	WITHOUT_CLASSIFICATION	0.9999834639456772	WITHOUT_CLASSIFICATION	1.6536054322732512E-5	IMPLEMENTATION
// an official rule, clarified: if the exponent // <clarif>after adjusting for exponent form</clarif> // is < -4,  or the exponent <clarif>after adjusting  // for exponent form</clarif> is greater than the // precision, use exponent form	WITHOUT_CLASSIFICATION	0.9999860076457678	WITHOUT_CLASSIFICATION	1.399235423206806E-5	IMPLEMENTATION
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.99996663395625	WITHOUT_CLASSIFICATION	3.3366043749954253E-5	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9993457459238884	WITHOUT_CLASSIFICATION	6.54254076111628E-4	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9993457459238884	WITHOUT_CLASSIFICATION	6.54254076111628E-4	IMPLEMENTATION
// MRI behavior: validate only the unnumbered arguments	WITHOUT_CLASSIFICATION	0.9998354452897961	WITHOUT_CLASSIFICATION	1.6455471020395584E-4	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.999925799732636	WITHOUT_CLASSIFICATION	7.420026736398715E-5	IMPLEMENTATION
// calculation for simple (and typical) case, // adapted from sun.misc.FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999461676585623	WITHOUT_CLASSIFICATION	5.383234143774823E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999632642966054	WITHOUT_CLASSIFICATION	3.673570339455358E-5	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9983087359813324	WITHOUT_CLASSIFICATION	0.0016912640186675391	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9983087359813324	WITHOUT_CLASSIFICATION	0.0016912640186675391	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9983087359813324	WITHOUT_CLASSIFICATION	0.0016912640186675391	IMPLEMENTATION
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9974793863209895	WITHOUT_CLASSIFICATION	0.0025206136790104946	IMPLEMENTATION
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9996335252526586	WITHOUT_CLASSIFICATION	3.6647474734139454E-4	IMPLEMENTATION
// call chmod after we created the RandomAccesFile // because otherwise, the file could be read-only	WITHOUT_CLASSIFICATION	0.9998114992137063	WITHOUT_CLASSIFICATION	1.8850078629382383E-4	IMPLEMENTATION
// attempt to set the permissions, if we have been passed a POSIX instance, // and only if the file was created in this call.	WITHOUT_CLASSIFICATION	0.9999876486206228	WITHOUT_CLASSIFICATION	1.2351379377224659E-5	IMPLEMENTATION
// // When reading into a heap buffer, the jvm allocates a temporary // direct ByteBuffer of the requested size.  To avoid allocating // a huge direct buffer when doing ludicrous reads (e.g. 1G or more) // we split the read up into chunks of no more than 1M //	WITHOUT_CLASSIFICATION	0.9999510541921984	WITHOUT_CLASSIFICATION	4.89458078016186E-5	IMPLEMENTATION
// // If it is a file channel, then we can pre-allocate the output buffer // to the total size of buffered + remaining bytes in file //	WITHOUT_CLASSIFICATION	0.9999696374300582	WITHOUT_CLASSIFICATION	3.0362569941827665E-5	IMPLEMENTATION
// // Cannot discern the total read length - allocate at least enough for the buffered data //	WITHOUT_CLASSIFICATION	0.9999807481942101	WITHOUT_CLASSIFICATION	1.9251805789925862E-5	IMPLEMENTATION
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999644107950328	WITHOUT_CLASSIFICATION	3.55892049671385E-5	IMPLEMENTATION
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9994342290587709	WITHOUT_CLASSIFICATION	5.657709412291669E-4	IMPLEMENTATION
// already have some bytes buffered, just return those	WITHOUT_CLASSIFICATION	0.9999741237203382	WITHOUT_CLASSIFICATION	2.587627966182189E-5	IMPLEMENTATION
// reset buffer	WITHOUT_CLASSIFICATION	0.9985551091157241	WITHOUT_CLASSIFICATION	0.0014448908842759037	IMPLEMENTATION
// // Synchronize and re-check to avoid creating more than one Selector per provider //	WITHOUT_CLASSIFICATION	0.9978117953518952	WITHOUT_CLASSIFICATION	0.002188204648104808	IMPLEMENTATION
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.7406242643384612	WITHOUT_CLASSIFICATION	0.2593757356615387	IMPLEMENTATION
// Is there something built into JRuby to do this?	WITHOUT_CLASSIFICATION	0.9997804957961932	WITHOUT_CLASSIFICATION	2.1950420380675026E-4	IMPLEMENTATION
// Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long // assertTrue(value == valueViaValuesIterator);	WITHOUT_CLASSIFICATION	0.9999634432146632	WITHOUT_CLASSIFICATION	3.655678533664501E-5	IMPLEMENTATION
// value equality //result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); //assertEquals("two", result);	WITHOUT_CLASSIFICATION	0.9999730350000996	WITHOUT_CLASSIFICATION	2.6964999900390962E-5	IMPLEMENTATION
// Uncomment the "puts" lines if you want to see more detail	WITHOUT_CLASSIFICATION	0.9999076249793128	WITHOUT_CLASSIFICATION	9.237502068711974E-5	IMPLEMENTATION
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999876848981791	WITHOUT_CLASSIFICATION	1.2315101820898413E-5	IMPLEMENTATION
// change the thread context to include the class	WITHOUT_CLASSIFICATION	0.9995454076693685	WITHOUT_CLASSIFICATION	4.5459233063147383E-4	IMPLEMENTATION
