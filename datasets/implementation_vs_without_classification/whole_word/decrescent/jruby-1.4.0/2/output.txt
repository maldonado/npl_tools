// TODO: warn "tried to create Proc object without a block"	IMPLEMENTATION	0.5215056017259233	IMPLEMENTATION	0.4784943982740767	WITHOUT_CLASSIFICATION
// TODO: CLONE_SETUP here	IMPLEMENTATION	0.7394219579592599	IMPLEMENTATION	0.26057804204074014	WITHOUT_CLASSIFICATION
// TODO: Someday, enable.	IMPLEMENTATION	0.5865372894595964	IMPLEMENTATION	0.41346271054040357	WITHOUT_CLASSIFICATION
// Bunch of methods still not implemented	IMPLEMENTATION	0.8779605032053909	IMPLEMENTATION	0.12203949679460922	WITHOUT_CLASSIFICATION
// TODO: non-strict option	IMPLEMENTATION	0.5770276819952547	WITHOUT_CLASSIFICATION	0.4229723180047452	IMPLEMENTATION
// TODO: opt for 2 and 3 ?	IMPLEMENTATION	0.9041822348529749	WITHOUT_CLASSIFICATION	0.09581776514702506	IMPLEMENTATION
// FIXME: Should we make this work with platform's locale, // or continue hardcoding US?	IMPLEMENTATION	0.9971921862100797	WITHOUT_CLASSIFICATION	0.0028078137899203684	IMPLEMENTATION
// TODO: rescan code range ?	IMPLEMENTATION	0.6574897573468602	IMPLEMENTATION	0.34251024265313973	WITHOUT_CLASSIFICATION
// TODO: rescan code range ?	IMPLEMENTATION	0.6574897573468602	IMPLEMENTATION	0.34251024265313973	WITHOUT_CLASSIFICATION
// TODO: pass this in?	IMPLEMENTATION	0.7158447048467603	IMPLEMENTATION	0.2841552951532398	WITHOUT_CLASSIFICATION
// FIXME: Pass block down?	IMPLEMENTATION	0.9997477821471086	WITHOUT_CLASSIFICATION	2.5221785289152206E-4	IMPLEMENTATION
// TODO: do something here?	IMPLEMENTATION	0.8895077509116928	IMPLEMENTATION	0.11049224908830728	WITHOUT_CLASSIFICATION
// TODO: port exact behavior from MRI, and move most locking logic into ChannelDescriptor // TODO: for all LOCK_NB cases, return false if they would block	IMPLEMENTATION	0.886564144782842	WITHOUT_CLASSIFICATION	0.11343585521715814	IMPLEMENTATION
// TODO: check if too many open files, GC and try again	IMPLEMENTATION	0.8708061567080241	WITHOUT_CLASSIFICATION	0.1291938432919759	IMPLEMENTATION
//TODO deal with UNC names	IMPLEMENTATION	0.9992507933528898	WITHOUT_CLASSIFICATION	7.49206647110268E-4	IMPLEMENTATION
// FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.9974862589375071	WITHOUT_CLASSIFICATION	0.0025137410624928463	IMPLEMENTATION
//FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.9907804204179275	WITHOUT_CLASSIFICATION	0.009219579582072581	IMPLEMENTATION
// TODO: SafeStringValue here	IMPLEMENTATION	0.7394219579592599	IMPLEMENTATION	0.26057804204074014	WITHOUT_CLASSIFICATION
// TODO: turn off readable? am I reading this right? // This only seems to be used while duping below, since modes gets // reset to actual modes afterward //fptr->mode &= (m & FMODE_READABLE) ? ~FMODE_READABLE : ~FMODE_WRITABLE;	IMPLEMENTATION	0.667288313797011	WITHOUT_CLASSIFICATION	0.33271168620298897	IMPLEMENTATION
// TODO: check safe, taint on incoming string	IMPLEMENTATION	0.7305093203727187	WITHOUT_CLASSIFICATION	0.2694906796272814	IMPLEMENTATION
// TODO: pipe handler to be reopened with path and "w" mode	IMPLEMENTATION	0.6796646570846963	WITHOUT_CLASSIFICATION	0.3203353429153037	IMPLEMENTATION
// FIXME: add text mode to mode flags	IMPLEMENTATION	0.9997215337923229	WITHOUT_CLASSIFICATION	2.7846620767710576E-4	IMPLEMENTATION
// TODO: Something about pipe buffer length here	IMPLEMENTATION	0.6221759755739952	WITHOUT_CLASSIFICATION	0.3778240244260049	IMPLEMENTATION
// TODO: handle errors in buffered write by retrying until finished or file is closed	IMPLEMENTATION	0.6262137972530959	WITHOUT_CLASSIFICATION	0.3737862027469041	IMPLEMENTATION
// TODO: notify threads waiting on descriptors/IO? probably not...	IMPLEMENTATION	0.7345838791796351	IMPLEMENTATION	0.2654161208203649	WITHOUT_CLASSIFICATION
// TODO: Ruby re-checks that the buffer string hasn't been modified	IMPLEMENTATION	0.5872616468531207	IMPLEMENTATION	0.4127383531468794	WITHOUT_CLASSIFICATION
// TODO: Ruby unlocks the string here	IMPLEMENTATION	0.787413217115745	WITHOUT_CLASSIFICATION	0.21258678288425498	IMPLEMENTATION
// TODO: Ruby truncates string to specific size here, but our bytelist should handle this already?	IMPLEMENTATION	0.8750521008154973	WITHOUT_CLASSIFICATION	0.12494789918450261	IMPLEMENTATION
// TODO: Ruby unlocks the string here	IMPLEMENTATION	0.787413217115745	WITHOUT_CLASSIFICATION	0.21258678288425498	IMPLEMENTATION
// TODO: Ruby truncates string to specific size here, but our bytelist should handle this already?	IMPLEMENTATION	0.8750521008154973	WITHOUT_CLASSIFICATION	0.12494789918450261	IMPLEMENTATION
// TODO: ruby locks the string here	IMPLEMENTATION	0.7880426193589549	WITHOUT_CLASSIFICATION	0.21195738064104508	IMPLEMENTATION
// TODO same zero-length checks as file above	IMPLEMENTATION	0.5146916556463978	WITHOUT_CLASSIFICATION	0.4853083443536022	IMPLEMENTATION
// TODO: MRI also can hadle Bignum here	IMPLEMENTATION	0.9619984485341004	IMPLEMENTATION	0.03800155146589952	WITHOUT_CLASSIFICATION
// TODO: make threadsafe	IMPLEMENTATION	0.8032235634416421	IMPLEMENTATION	0.19677643655835791	WITHOUT_CLASSIFICATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9148872204926536	WITHOUT_CLASSIFICATION	0.08511277950734644	IMPLEMENTATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9148872204926536	WITHOUT_CLASSIFICATION	0.08511277950734644	IMPLEMENTATION
// FIXME: create AttrReaderMethod, AttrWriterMethod, for faster attr access	IMPLEMENTATION	0.999719590681166	WITHOUT_CLASSIFICATION	2.804093188340745E-4	IMPLEMENTATION
// Do not clone cached methods // FIXME: MRI copies all methods here	IMPLEMENTATION	0.9991410715836919	WITHOUT_CLASSIFICATION	8.58928416308009E-4	IMPLEMENTATION
// TODO: don't calculate the same value 3 times	IMPLEMENTATION	0.7544407546790172	WITHOUT_CLASSIFICATION	0.24555924532098275	IMPLEMENTATION
// TODO: 3 times calculate the same value below	IMPLEMENTATION	0.8312455556428792	WITHOUT_CLASSIFICATION	0.1687544443571208	IMPLEMENTATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.9641367253766694	IMPLEMENTATION	0.03586327462333061	WITHOUT_CLASSIFICATION
// TODO: Store BEGIN and END information into this node	IMPLEMENTATION	0.6068652152203985	IMPLEMENTATION	0.39313478477960156	WITHOUT_CLASSIFICATION
// TODO: put these nil guards into tree (bigger than I want to do right now)	IMPLEMENTATION	0.9886062185279577	IMPLEMENTATION	0.011393781472042258	WITHOUT_CLASSIFICATION
// FIXME: Make bodyNode non-null in parser	IMPLEMENTATION	0.9999508843330446	WITHOUT_CLASSIFICATION	4.9115666955451106E-5	IMPLEMENTATION
// TODO: call config with scope but no frame	IMPLEMENTATION	0.5533717984093023	IMPLEMENTATION	0.44662820159069777	WITHOUT_CLASSIFICATION
// TODO: add trace call?	IMPLEMENTATION	0.6202875718520359	IMPLEMENTATION	0.3797124281479642	WITHOUT_CLASSIFICATION
// FIXME: missing arity check	IMPLEMENTATION	0.9992229098797315	WITHOUT_CLASSIFICATION	7.770901202684599E-4	IMPLEMENTATION
// FIXME: optimize for cases where we have no false branch	IMPLEMENTATION	0.9997904077275018	WITHOUT_CLASSIFICATION	2.095922724980503E-4	IMPLEMENTATION
// FIXME: after jump is not in here.  Will if ever be? //Label afterJmp = new Label();	IMPLEMENTATION	0.9999443950700451	WITHOUT_CLASSIFICATION	5.560492995501636E-5	IMPLEMENTATION
// TODO: build arg list based on number of args, optionals, etc	IMPLEMENTATION	0.560035652110073	WITHOUT_CLASSIFICATION	0.43996434788992694	IMPLEMENTATION
// FIXME: missing arity check	IMPLEMENTATION	0.9992229098797315	WITHOUT_CLASSIFICATION	7.770901202684599E-4	IMPLEMENTATION
// SSS FIXME: Traverse up the scope hierarchy to find the constant as long as the parent is a static scope	IMPLEMENTATION	0.9999241898611833	WITHOUT_CLASSIFICATION	7.581013881676416E-5	IMPLEMENTATION
// SSS FIXME: Should I be returning the operand constructed here?	IMPLEMENTATION	0.9966985881464027	WITHOUT_CLASSIFICATION	0.00330141185359727	IMPLEMENTATION
// TODO: Add IR instructions for checking method arity! // s.getVariableCompiler().checkMethodArity(required, opt, rest);	IMPLEMENTATION	0.9105942552505729	IMPLEMENTATION	0.089405744749427	WITHOUT_CLASSIFICATION
// FIXME: Ruby 1.9 post args code needs to come here	IMPLEMENTATION	0.9974604196577009	WITHOUT_CLASSIFICATION	0.002539580342299013	IMPLEMENTATION
// SSS: FIXME: Somewhere here, we need to record information the type of this operand as String	IMPLEMENTATION	0.9999000225168266	WITHOUT_CLASSIFICATION	9.997748317328514E-5	IMPLEMENTATION
// FIXME: Translate this call below! // s.unwrapPassedBlock();	IMPLEMENTATION	0.9993556644089879	WITHOUT_CLASSIFICATION	6.443355910121145E-4	IMPLEMENTATION
// SSS FIXME: We need to build debug information tracking into the IR in some fashion // So, these methods below would have to have equivalents in IR_Scope implementations.	IMPLEMENTATION	0.9995971182861928	WITHOUT_CLASSIFICATION	4.028817138071435E-4	IMPLEMENTATION
// SSS FIXME: Incomplete!	IMPLEMENTATION	0.9997877334300682	WITHOUT_CLASSIFICATION	2.1226656993181153E-4	IMPLEMENTATION
// SSS FIXME: Pick one of bytelist or string, or add internal conversion methods to convert to the default representation	IMPLEMENTATION	0.9999950714628202	WITHOUT_CLASSIFICATION	4.928537179837019E-6	IMPLEMENTATION
// SSS FIXME: To be done	IMPLEMENTATION	0.9999524316300303	WITHOUT_CLASSIFICATION	4.756836996974673E-5	IMPLEMENTATION
//TODO: implement, won't do this now	IMPLEMENTATION	0.9983988578084997	WITHOUT_CLASSIFICATION	0.001601142191500308	IMPLEMENTATION
//TODO: implement, won't do this now	IMPLEMENTATION	0.9983988578084997	WITHOUT_CLASSIFICATION	0.001601142191500308	IMPLEMENTATION
// TODO: validate port as numeric	IMPLEMENTATION	0.5227342115206987	WITHOUT_CLASSIFICATION	0.4772657884793013	IMPLEMENTATION
// TODO: this code should really check if a Ruby equals method is implemented or not.	IMPLEMENTATION	0.9998015937521121	IMPLEMENTATION	1.9840624788788487E-4	WITHOUT_CLASSIFICATION
// if not already defined, we add a 'new' that guesses at which signature to use // TODO: just adding first one right now...add in signature-guessing logic	IMPLEMENTATION	0.7248581685901925	WITHOUT_CLASSIFICATION	0.27514183140980747	IMPLEMENTATION
// TODO: deal with varargs	IMPLEMENTATION	0.7547126971641464	IMPLEMENTATION	0.24528730283585373	WITHOUT_CLASSIFICATION
// TODO: deal with varargs	IMPLEMENTATION	0.7547126971641464	IMPLEMENTATION	0.24528730283585373	WITHOUT_CLASSIFICATION
// TODO: other reserved names?	IMPLEMENTATION	0.9140993063734115	IMPLEMENTATION	0.08590069362658846	WITHOUT_CLASSIFICATION
// TODO: we can probably release our references to the constantFields // array and static/instance callback hashes at this point. 	IMPLEMENTATION	0.6320688268641883	IMPLEMENTATION	0.3679311731358117	WITHOUT_CLASSIFICATION
// TODO: Formalize conversion mechanisms between Java and Ruby	IMPLEMENTATION	0.671852867811804	WITHOUT_CLASSIFICATION	0.328147132188196	IMPLEMENTATION
// XXX: Check if it's appropriate type?	IMPLEMENTATION	0.9986172164998133	WITHOUT_CLASSIFICATION	0.0013827835001866437	IMPLEMENTATION
// TODO: call ruby method	IMPLEMENTATION	0.9637601858657932	IMPLEMENTATION	0.03623981413420682	WITHOUT_CLASSIFICATION
// TODO: call ruby method	IMPLEMENTATION	0.9637601858657932	IMPLEMENTATION	0.03623981413420682	WITHOUT_CLASSIFICATION
// TODO: Add safety check for taintedness	IMPLEMENTATION	0.5683524531375896	IMPLEMENTATION	0.4316475468624104	WITHOUT_CLASSIFICATION
// FIXME: Need to detect magic_comment in 1.9 here for encoding	IMPLEMENTATION	0.9998955017967153	WITHOUT_CLASSIFICATION	1.0449820328476665E-4	IMPLEMENTATION
/* xxx shouldn't check if valid option variable */	IMPLEMENTATION	0.9999950740017236	WITHOUT_CLASSIFICATION	4.925998276427428E-6	IMPLEMENTATION
// TODO: this isn't handling multibyte yet	IMPLEMENTATION	0.9453544148147119	IMPLEMENTATION	0.05464558518528806	WITHOUT_CLASSIFICATION
// TODO: This should be something else like a tCHAR	IMPLEMENTATION	0.9422044910967468	IMPLEMENTATION	0.05779550890325326	WITHOUT_CLASSIFICATION
// FIXME: \r logic needed	IMPLEMENTATION	0.7135642221157835	WITHOUT_CLASSIFICATION	0.28643577788421654	IMPLEMENTATION
// TODO: note lack of command.com support for Win 9x...	IMPLEMENTATION	0.8511518282455869	IMPLEMENTATION	0.14884817175441312	WITHOUT_CLASSIFICATION
// FIXME: Make thread pool threads daemons if necessary	IMPLEMENTATION	0.9997720528205543	WITHOUT_CLASSIFICATION	2.2794717944582028E-4	IMPLEMENTATION
/* FIXME: We may be intern'ing more than once.*/	IMPLEMENTATION	0.9540924816100246	WITHOUT_CLASSIFICATION	0.04590751838997534	IMPLEMENTATION
/* FIXME: We may be intern'ing more than once.*/	IMPLEMENTATION	0.9540924816100246	WITHOUT_CLASSIFICATION	0.04590751838997534	IMPLEMENTATION
/* FIXME: arg_concat missing for opt_call_args*/	IMPLEMENTATION	0.9914067579974046	WITHOUT_CLASSIFICATION	0.008593242002595395	IMPLEMENTATION
/* FIXME: arg_concat logic missing for opt_call_args*/	IMPLEMENTATION	0.991934536982482	WITHOUT_CLASSIFICATION	0.008065463017517904	IMPLEMENTATION
// FIXME: This needs to happen for lambdas //            args.checkArgCount(runtime, parameters.length);	IMPLEMENTATION	0.999472465565353	WITHOUT_CLASSIFICATION	5.275344346469497E-4	IMPLEMENTATION
// FIXME: This needs to happen for lambdas //            args.checkArgCount(runtime, parameters.length);	IMPLEMENTATION	0.999472465565353	WITHOUT_CLASSIFICATION	5.275344346469497E-4	IMPLEMENTATION
// TODO: make it cross runtime safe by COW or eager copy	IMPLEMENTATION	0.8196376879862697	IMPLEMENTATION	0.18036231201373037	WITHOUT_CLASSIFICATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.9996658307807554	WITHOUT_CLASSIFICATION	3.341692192445253E-4	IMPLEMENTATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.9996658307807554	WITHOUT_CLASSIFICATION	3.341692192445253E-4	IMPLEMENTATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.9996658307807554	WITHOUT_CLASSIFICATION	3.341692192445253E-4	IMPLEMENTATION
// TODO: check the return value here	IMPLEMENTATION	0.8396095074654103	IMPLEMENTATION	0.1603904925345896	WITHOUT_CLASSIFICATION
// TODO: check the return value here	IMPLEMENTATION	0.8396095074654103	IMPLEMENTATION	0.1603904925345896	WITHOUT_CLASSIFICATION
// TODO: Make sure all appropriate open flags are added to this check.	IMPLEMENTATION	0.8106672116118204	WITHOUT_CLASSIFICATION	0.18933278838817952	IMPLEMENTATION
//subList.clear(); // Sublist is supposed to share same backing store as list...TODO in RubyArray. //assertTrue(list.size() == 1);	IMPLEMENTATION	0.9999972577980342	WITHOUT_CLASSIFICATION	2.742201965871729E-6	IMPLEMENTATION
// SSS FIXME: Cannot optimize this without assuming that Range.to_ary method has not redefined. // So for now, return null!	IMPLEMENTATION	0.9280937866430933	WITHOUT_CLASSIFICATION	0.07190621335690665	IMPLEMENTATION
// TODO Auto-generated method stub	IMPLEMENTATION	0.9994936821417617	IMPLEMENTATION	5.063178582383017E-4	WITHOUT_CLASSIFICATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.9716650700466156	IMPLEMENTATION	0.02833492995338427	WITHOUT_CLASSIFICATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.9716650700466156	IMPLEMENTATION	0.02833492995338427	WITHOUT_CLASSIFICATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.9716650700466156	IMPLEMENTATION	0.02833492995338427	WITHOUT_CLASSIFICATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.9641367253766694	IMPLEMENTATION	0.03586327462333061	WITHOUT_CLASSIFICATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.9641367253766694	IMPLEMENTATION	0.03586327462333061	WITHOUT_CLASSIFICATION
// TODO: check for ascii string	IMPLEMENTATION	0.9210015285935222	WITHOUT_CLASSIFICATION	0.07899847140647774	IMPLEMENTATION
// filter out any Java primitive names // TODO: should check against all Java reserved names here, not just primitives	IMPLEMENTATION	0.8013583335240062	IMPLEMENTATION	0.19864166647599374	WITHOUT_CLASSIFICATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9148872204926536	WITHOUT_CLASSIFICATION	0.08511277950734644	IMPLEMENTATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9148872204926536	WITHOUT_CLASSIFICATION	0.08511277950734644	IMPLEMENTATION
// TODO: missing additional logic for dealing with conflicting protected fields.	IMPLEMENTATION	0.8544794244147059	IMPLEMENTATION	0.1455205755852941	WITHOUT_CLASSIFICATION
// TODO: better detection when path is absolute or not. // If the path isn't absolute, then prepend the current working // directory to the path.	IMPLEMENTATION	0.782428903196008	WITHOUT_CLASSIFICATION	0.217571096803992	IMPLEMENTATION
// FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.9974862589375071	WITHOUT_CLASSIFICATION	0.0025137410624928463	IMPLEMENTATION
// FIX replace type() == ... with isInstanceOf(...)	IMPLEMENTATION	0.9997745718418185	WITHOUT_CLASSIFICATION	2.2542815818151312E-4	IMPLEMENTATION
/* TODO: MRI is just a when node.  We need this extra logic for IDE consumers (null in casenode statement should be implicit nil)*/	IMPLEMENTATION	0.6076697811353075	IMPLEMENTATION	0.39233021886469266	WITHOUT_CLASSIFICATION
// TODO: This and recacheRespondsTo needed to be synchronized for JRUBY-3466, // but this degraded performance nearly 2x. It's still faster than MRI, but // a reanalysis of this code may show a faster way to ensure we're caching // safely.	IMPLEMENTATION	0.9995926010343436	IMPLEMENTATION	4.0739896565639264E-4	WITHOUT_CLASSIFICATION
// TODO: adjust length so it won't fall in the middle  // of a multi-byte character. MRI's sprintf.c uses tables // in a modified version of regex.c, which assume some // particular  encoding for a given installation/application. // (See regex.c#re_mbcinit in ruby-1.8.5-p12)  // // This is only an issue if the user specifies a precision // that causes the string to be truncated. The same issue // would arise taking a substring of a ByteList-backed RubyString.	IMPLEMENTATION	0.9999189069924241	WITHOUT_CLASSIFICATION	8.109300757597487E-5	IMPLEMENTATION
// set constants now that they're initialized	WITHOUT_CLASSIFICATION	0.9997725711161194	WITHOUT_CLASSIFICATION	2.2742888388056233E-4	IMPLEMENTATION
// line 335	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
// Figure end-char.  '\0' is special to indicate begin=end and that no nesting?	WITHOUT_CLASSIFICATION	0.9997448768777104	WITHOUT_CLASSIFICATION	2.551231222895892E-4	IMPLEMENTATION
// line 362	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 372	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
// line 391	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
/* ^D */	WITHOUT_CLASSIFICATION	0.999995249009219	WITHOUT_CLASSIFICATION	4.75099078097611E-6	IMPLEMENTATION
/* ^Z */	WITHOUT_CLASSIFICATION	0.999995249009219	WITHOUT_CLASSIFICATION	4.75099078097611E-6	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
//Do nothing	WITHOUT_CLASSIFICATION	0.999603847592778	WITHOUT_CLASSIFICATION	3.9615240722201147E-4	IMPLEMENTATION
//Do nothing	WITHOUT_CLASSIFICATION	0.999603847592778	WITHOUT_CLASSIFICATION	3.9615240722201147E-4	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999719315563279	WITHOUT_CLASSIFICATION	2.8068443672158084E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999719315563279	WITHOUT_CLASSIFICATION	2.8068443672158084E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999719315563279	WITHOUT_CLASSIFICATION	2.8068443672158084E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999719315563279	WITHOUT_CLASSIFICATION	2.8068443672158084E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999719315563279	WITHOUT_CLASSIFICATION	2.8068443672158084E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999719315563279	WITHOUT_CLASSIFICATION	2.8068443672158084E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999719315563279	WITHOUT_CLASSIFICATION	2.8068443672158084E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999719315563279	WITHOUT_CLASSIFICATION	2.8068443672158084E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999719315563279	WITHOUT_CLASSIFICATION	2.8068443672158084E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999719315563279	WITHOUT_CLASSIFICATION	2.8068443672158084E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999719315563279	WITHOUT_CLASSIFICATION	2.8068443672158084E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999719315563279	WITHOUT_CLASSIFICATION	2.8068443672158084E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999719315563279	WITHOUT_CLASSIFICATION	2.8068443672158084E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999719315563279	WITHOUT_CLASSIFICATION	2.8068443672158084E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999719315563279	WITHOUT_CLASSIFICATION	2.8068443672158084E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999719315563279	WITHOUT_CLASSIFICATION	2.8068443672158084E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999719315563279	WITHOUT_CLASSIFICATION	2.8068443672158084E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999719315563279	WITHOUT_CLASSIFICATION	2.8068443672158084E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999719315563279	WITHOUT_CLASSIFICATION	2.8068443672158084E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999719315563279	WITHOUT_CLASSIFICATION	2.8068443672158084E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999719315563279	WITHOUT_CLASSIFICATION	2.8068443672158084E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999719315563279	WITHOUT_CLASSIFICATION	2.8068443672158084E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999719315563279	WITHOUT_CLASSIFICATION	2.8068443672158084E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999719315563279	WITHOUT_CLASSIFICATION	2.8068443672158084E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999719315563279	WITHOUT_CLASSIFICATION	2.8068443672158084E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999719315563279	WITHOUT_CLASSIFICATION	2.8068443672158084E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999719315563279	WITHOUT_CLASSIFICATION	2.8068443672158084E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999719315563279	WITHOUT_CLASSIFICATION	2.8068443672158084E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999719315563279	WITHOUT_CLASSIFICATION	2.8068443672158084E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999719315563279	WITHOUT_CLASSIFICATION	2.8068443672158084E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999719315563279	WITHOUT_CLASSIFICATION	2.8068443672158084E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999719315563279	WITHOUT_CLASSIFICATION	2.8068443672158084E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999719315563279	WITHOUT_CLASSIFICATION	2.8068443672158084E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999719315563279	WITHOUT_CLASSIFICATION	2.8068443672158084E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999719315563279	WITHOUT_CLASSIFICATION	2.8068443672158084E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999719315563279	WITHOUT_CLASSIFICATION	2.8068443672158084E-5	IMPLEMENTATION
// return result	WITHOUT_CLASSIFICATION	0.9989995173404363	WITHOUT_CLASSIFICATION	0.00100048265956359	IMPLEMENTATION
// name	WITHOUT_CLASSIFICATION	0.9999492171862553	WITHOUT_CLASSIFICATION	5.078281374475202E-5	IMPLEMENTATION
// Define System.getProperties() in ENV_JAVA	WITHOUT_CLASSIFICATION	0.9999741306413495	WITHOUT_CLASSIFICATION	2.586935865042951E-5	IMPLEMENTATION
// Accessor methods.	WITHOUT_CLASSIFICATION	0.999079839199611	WITHOUT_CLASSIFICATION	9.201608003889589E-4	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9990685674167565	WITHOUT_CLASSIFICATION	9.314325832434179E-4	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9990685674167565	WITHOUT_CLASSIFICATION	9.314325832434179E-4	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9990685674167565	WITHOUT_CLASSIFICATION	9.314325832434179E-4	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9990685674167565	WITHOUT_CLASSIFICATION	9.314325832434179E-4	IMPLEMENTATION
// call getpwent to fail early if unsupported	WITHOUT_CLASSIFICATION	0.9999523561139101	WITHOUT_CLASSIFICATION	4.764388608999312E-5	IMPLEMENTATION
// fall back on env entry for USER	WITHOUT_CLASSIFICATION	0.9995973137244986	WITHOUT_CLASSIFICATION	4.0268627550137077E-4	IMPLEMENTATION
// try to read grent to fail fast	WITHOUT_CLASSIFICATION	0.9998748239876768	WITHOUT_CLASSIFICATION	1.2517601232324362E-4	IMPLEMENTATION
// define ARGV and $* for this runtime	WITHOUT_CLASSIFICATION	0.9999472585459201	WITHOUT_CLASSIFICATION	5.274145407989951E-5	IMPLEMENTATION
// Version information:	WITHOUT_CLASSIFICATION	0.9997896489100359	WITHOUT_CLASSIFICATION	2.103510899641851E-4	IMPLEMENTATION
// after defn of $stderr as the call may produce warnings	WITHOUT_CLASSIFICATION	0.9998916199635933	WITHOUT_CLASSIFICATION	1.0838003640675232E-4	IMPLEMENTATION
// ARGF, $< object	WITHOUT_CLASSIFICATION	0.9993926391568444	WITHOUT_CLASSIFICATION	6.07360843155676E-4	IMPLEMENTATION
// if the environment variables can't be obtained, define an empty ENV	WITHOUT_CLASSIFICATION	0.999998155752553	WITHOUT_CLASSIFICATION	1.8442474469107449E-6	IMPLEMENTATION
// On platforms without a c-library accessable through JNA, getpid will return hashCode  // as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing // $$ on getpid() where available, we have the same semantics as MRI.	WITHOUT_CLASSIFICATION	0.9998595986789324	WITHOUT_CLASSIFICATION	1.4040132106760576E-4	IMPLEMENTATION
//$@ returns nil if $!.backtrace is not an array	WITHOUT_CLASSIFICATION	0.999728998771981	WITHOUT_CLASSIFICATION	2.71001228019109E-4	IMPLEMENTATION
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999137469086219	WITHOUT_CLASSIFICATION	8.625309137811661E-5	IMPLEMENTATION
// MRI behavior: just plain '//' or '\\\\' are considered illegal on Windows.	WITHOUT_CLASSIFICATION	0.9999390957685211	WITHOUT_CLASSIFICATION	6.090423147887861E-5	IMPLEMENTATION
// this _is_ legal (when removing an undef)	WITHOUT_CLASSIFICATION	0.9997818895034775	WITHOUT_CLASSIFICATION	2.1811049652268151E-4	IMPLEMENTATION
// What we passed to the constructor for method 'path'	WITHOUT_CLASSIFICATION	0.9808135427345909	WITHOUT_CLASSIFICATION	0.019186457265409112	IMPLEMENTATION
// ----- Ruby Class Methods ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999063240711983	WITHOUT_CLASSIFICATION	9.367592880170028E-5	IMPLEMENTATION
// // CONSTANT TABLE METHODS - pass to delegate //	WITHOUT_CLASSIFICATION	0.999602075274773	WITHOUT_CLASSIFICATION	3.979247252270836E-4	IMPLEMENTATION
// We get canonical path to try and flatten the path out. // a dir '/subdir/..' should return as '/' // cnutter: Do we want to flatten path out?	WITHOUT_CLASSIFICATION	0.9972899708185322	WITHOUT_CLASSIFICATION	0.002710029181467817	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9990685674167565	WITHOUT_CLASSIFICATION	9.314325832434179E-4	IMPLEMENTATION
// ----- Ruby Instance Methods -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9998490928724737	WITHOUT_CLASSIFICATION	1.5090712752635567E-4	IMPLEMENTATION
// Make sure any read()s after close fail.	WITHOUT_CLASSIFICATION	0.9999288689863158	WITHOUT_CLASSIFICATION	7.11310136841941E-5	IMPLEMENTATION
// ----- Helper Methods --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9998598588886326	WITHOUT_CLASSIFICATION	1.401411113674169E-4	IMPLEMENTATION
// try to use POSIX for this first	WITHOUT_CLASSIFICATION	0.9993585448725524	WITHOUT_CLASSIFICATION	6.414551274475539E-4	IMPLEMENTATION
// otherwise fall back on the old way	WITHOUT_CLASSIFICATION	0.9737954863691628	WITHOUT_CLASSIFICATION	0.02620451363083718	IMPLEMENTATION
// Proc class	WITHOUT_CLASSIFICATION	0.9994935485359389	WITHOUT_CLASSIFICATION	5.064514640612162E-4	IMPLEMENTATION
// No passed in block, lets check next outer frame for one ('Proc.new')	WITHOUT_CLASSIFICATION	0.999980268766758	WITHOUT_CLASSIFICATION	1.9731233241945422E-5	IMPLEMENTATION
// modify the block with a new backref/lastline-grabbing scope	WITHOUT_CLASSIFICATION	0.999795007745812	WITHOUT_CLASSIFICATION	2.0499225418793934E-4	IMPLEMENTATION
// for future compatibility as constructors move toward not accepting metaclass?	WITHOUT_CLASSIFICATION	0.9972380202191031	WITHOUT_CLASSIFICATION	0.0027619797808968696	IMPLEMENTATION
//        case RUBY_HYBRID: //            backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); //            break;	WITHOUT_CLASSIFICATION	0.9996442629230928	WITHOUT_CLASSIFICATION	3.5573707690708347E-4	IMPLEMENTATION
// This looks wrong, but it's the way MRI does it.	WITHOUT_CLASSIFICATION	0.9999399500429921	WITHOUT_CLASSIFICATION	6.004995700791301E-5	IMPLEMENTATION
// rb_exc_new3	WITHOUT_CLASSIFICATION	0.9990652123136763	WITHOUT_CLASSIFICATION	9.347876863236658E-4	IMPLEMENTATION
// NOTE: The indicies here match exactly the signal values; do not reorder	WITHOUT_CLASSIFICATION	0.9838890254074361	WITHOUT_CLASSIFICATION	0.01611097459256388	IMPLEMENTATION
//registerThreadDumpSignalHandler(runtime);	WITHOUT_CLASSIFICATION	0.9990655965962804	WITHOUT_CLASSIFICATION	9.344034037195148E-4	IMPLEMENTATION
// IOT is also 6	WITHOUT_CLASSIFICATION	0.9988621466043169	WITHOUT_CLASSIFICATION	0.0011378533956830845	IMPLEMENTATION
// CLD is also 20	WITHOUT_CLASSIFICATION	0.9987027636126012	WITHOUT_CLASSIFICATION	0.0012972363873986936	IMPLEMENTATION
// RubySignal	WITHOUT_CLASSIFICATION	0.9990652123136763	WITHOUT_CLASSIFICATION	9.347876863236658E-4	IMPLEMENTATION
// ZStream actually *isn't* allocatable	WITHOUT_CLASSIFICATION	0.9997099991737899	WITHOUT_CLASSIFICATION	2.900008262100381E-4	IMPLEMENTATION
// MRI behavior, enforced by tests	WITHOUT_CLASSIFICATION	0.9998162371948909	WITHOUT_CLASSIFICATION	1.8376280510906947E-4	IMPLEMENTATION
// it's safe since adler.update doesn't modify the array	WITHOUT_CLASSIFICATION	0.9997860039906096	WITHOUT_CLASSIFICATION	2.139960093904106E-4	IMPLEMENTATION
// MRI behavior: in finished mode, we work as pass-through	WITHOUT_CLASSIFICATION	0.9999635274946503	WITHOUT_CLASSIFICATION	3.647250534973363E-5	IMPLEMENTATION
// SYNC_FLUSH	WITHOUT_CLASSIFICATION	0.9990652123136763	WITHOUT_CLASSIFICATION	9.347876863236658E-4	IMPLEMENTATION
// By default, NO_FLUSH	WITHOUT_CLASSIFICATION	0.9998328644591531	WITHOUT_CLASSIFICATION	1.671355408468551E-4	IMPLEMENTATION
//io.finish();	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
// should invoke seek on realIo	WITHOUT_CLASSIFICATION	0.9986897505849089	WITHOUT_CLASSIFICATION	0.001310249415091054	IMPLEMENTATION
// hmm...	WITHOUT_CLASSIFICATION	0.999970764908297	WITHOUT_CLASSIFICATION	2.9235091703083797E-5	IMPLEMENTATION
// Called before any write to make sure the // header is always written before the first bytes	WITHOUT_CLASSIFICATION	0.9997021245701155	WITHOUT_CLASSIFICATION	2.978754298844552E-4	IMPLEMENTATION
// For JDK 1.4 we can use "cal.getTimeInMillis()"	WITHOUT_CLASSIFICATION	0.9833209097047616	WITHOUT_CLASSIFICATION	0.016679090295238366	IMPLEMENTATION
// We can just use dt, since it is immutable	WITHOUT_CLASSIFICATION	0.9998204224426166	WITHOUT_CLASSIFICATION	1.7957755738350114E-4	IMPLEMENTATION
// float number of seconds	WITHOUT_CLASSIFICATION	0.9999187646818403	WITHOUT_CLASSIFICATION	8.1235318159748E-5	IMPLEMENTATION
// modified to match how hash is calculated in 1.8.2	WITHOUT_CLASSIFICATION	0.9992457687439538	WITHOUT_CLASSIFICATION	7.542312560463227E-4	IMPLEMENTATION
// dump usec, not msec	WITHOUT_CLASSIFICATION	0.9963979701637843	WITHOUT_CLASSIFICATION	0.0036020298362157742	IMPLEMENTATION
/* Time class methods */	WITHOUT_CLASSIFICATION	0.9999929525589514	WITHOUT_CLASSIFICATION	7.0474410486285E-6	IMPLEMENTATION
// marsaling dumps usec, not msec	WITHOUT_CLASSIFICATION	0.995669976506477	WITHOUT_CLASSIFICATION	0.004330023493522891	IMPLEMENTATION
// MRI accepts additional wday argument which appears to be ignored.	WITHOUT_CLASSIFICATION	0.9997980720167242	WITHOUT_CLASSIFICATION	2.0192798327582634E-4	IMPLEMENTATION
// set up with min values and then add to allow rolling over	WITHOUT_CLASSIFICATION	0.9999934464292293	WITHOUT_CLASSIFICATION	6.553570770670682E-6	IMPLEMENTATION
// the instant at which we will ask dtz what the difference between DST and // standard time is	WITHOUT_CLASSIFICATION	0.997655260102224	WITHOUT_CLASSIFICATION	0.002344739897775929	IMPLEMENTATION
// if we might be moving this time from !DST -> DST, the offset is assumed // to be the same as it was just before we last moved from DST -> !DST	WITHOUT_CLASSIFICATION	0.9999999924754487	WITHOUT_CLASSIFICATION	7.52455122416101E-9	IMPLEMENTATION
// Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.	WITHOUT_CLASSIFICATION	0.9980598210590366	WITHOUT_CLASSIFICATION	0.0019401789409634702	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999834743841721	WITHOUT_CLASSIFICATION	1.6525615827885382E-5	IMPLEMENTATION
/* If the value will fit in a Fixnum, return one of those. */	WITHOUT_CLASSIFICATION	0.9999991020329362	WITHOUT_CLASSIFICATION	8.979670639129204E-7	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999864650872056	WITHOUT_CLASSIFICATION	1.353491279433704E-5	IMPLEMENTATION
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.999355037879927	WITHOUT_CLASSIFICATION	6.449621200731404E-4	IMPLEMENTATION
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.7375640262666445	WITHOUT_CLASSIFICATION	0.2624359737333556	IMPLEMENTATION
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.7375640262666445	WITHOUT_CLASSIFICATION	0.2624359737333556	IMPLEMENTATION
// no bignorm here needed	WITHOUT_CLASSIFICATION	0.5076138261286782	WITHOUT_CLASSIFICATION	0.49238617387132183	IMPLEMENTATION
// wow, the only time we can use the java protocol ;)	WITHOUT_CLASSIFICATION	0.9984390557316776	WITHOUT_CLASSIFICATION	0.0015609442683224293	IMPLEMENTATION
// Pad with a 0	WITHOUT_CLASSIFICATION	0.9994309932515582	WITHOUT_CLASSIFICATION	5.690067484418822E-4	IMPLEMENTATION
// BigInteger required a sign byte in incoming array	WITHOUT_CLASSIFICATION	0.9999581839130142	WITHOUT_CLASSIFICATION	4.181608698588519E-5	IMPLEMENTATION
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9999840704991213	WITHOUT_CLASSIFICATION	1.5929500878719573E-5	IMPLEMENTATION
// We do this b/c make_tmpname might be overridden	WITHOUT_CLASSIFICATION	0.9998151164741791	WITHOUT_CLASSIFICATION	1.8488352582092215E-4	IMPLEMENTATION
// ???	WITHOUT_CLASSIFICATION	0.9999735215303213	WITHOUT_CLASSIFICATION	2.6478469678698294E-5	IMPLEMENTATION
// PID	WITHOUT_CLASSIFICATION	0.9999708917695811	WITHOUT_CLASSIFICATION	2.9108230418912364E-5	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999864650872056	WITHOUT_CLASSIFICATION	1.353491279433704E-5	IMPLEMENTATION
// elements and trailing nils	WITHOUT_CLASSIFICATION	0.9999490794582401	WITHOUT_CLASSIFICATION	5.092054175999828E-5	IMPLEMENTATION
// Dir::tmpdir	WITHOUT_CLASSIFICATION	0.9990652123136763	WITHOUT_CLASSIFICATION	9.347876863236658E-4	IMPLEMENTATION
// volatile to ensure that initial nil-fill is visible to other threads	WITHOUT_CLASSIFICATION	0.998933299385115	WITHOUT_CLASSIFICATION	0.001066700614885046	IMPLEMENTATION
/* Ruby arrays default to holding 16 elements, so we create an         * ArrayList of the same size if we're not told otherwise         */	WITHOUT_CLASSIFICATION	0.9999965224106656	WITHOUT_CLASSIFICATION	3.47758933445279E-6	IMPLEMENTATION
/* rb_ary_new2     * just allocates the internal array     */	WITHOUT_CLASSIFICATION	0.9999913549264711	WITHOUT_CLASSIFICATION	8.645073528865137E-6	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.999980947528214	WITHOUT_CLASSIFICATION	1.9052471786095434E-5	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.999980947528214	WITHOUT_CLASSIFICATION	1.9052471786095434E-5	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.999980947528214	WITHOUT_CLASSIFICATION	1.9052471786095434E-5	IMPLEMENTATION
/* Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour     *      */	WITHOUT_CLASSIFICATION	0.9999487888991977	WITHOUT_CLASSIFICATION	5.121110080235556E-5	IMPLEMENTATION
/* NEWOBJ and OBJSETUP equivalent     * fastest one, for shared arrays, optional objectspace     */	WITHOUT_CLASSIFICATION	0.9999842269666348	WITHOUT_CLASSIFICATION	1.577303336515248E-5	IMPLEMENTATION
// Create global constants and variables	WITHOUT_CLASSIFICATION	0.9999952102572558	WITHOUT_CLASSIFICATION	4.7897427441622925E-6	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9849675290921915	WITHOUT_CLASSIFICATION	0.015032470907808522	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9849675290921915	WITHOUT_CLASSIFICATION	0.015032470907808522	IMPLEMENTATION
// Windows does not support these functions, so we won't even try // This also matches Ruby behavior for JRUBY-2353.	WITHOUT_CLASSIFICATION	0.9991848853209337	WITHOUT_CLASSIFICATION	8.151146790662357E-4	IMPLEMENTATION
// There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and // newer one (US/Pacific, America/Los_Angeles). This pattern is to detect // the legacy TZ format in order to convert it to the newer format // understood by Java API.	WITHOUT_CLASSIFICATION	0.9998403142405463	WITHOUT_CLASSIFICATION	1.5968575945379492E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9849675290921915	WITHOUT_CLASSIFICATION	0.015032470907808522	IMPLEMENTATION
// 1.9 seems to just do inspect for to_s now	WITHOUT_CLASSIFICATION	0.9999868568865573	WITHOUT_CLASSIFICATION	1.3143113442691453E-5	IMPLEMENTATION
// possibly should not in object space	WITHOUT_CLASSIFICATION	0.999632424798339	WITHOUT_CLASSIFICATION	3.67575201661059E-4	IMPLEMENTATION
// only fill if there actually will remain trailing storage	WITHOUT_CLASSIFICATION	0.9999921414292745	WITHOUT_CLASSIFICATION	7.858570725373675E-6	IMPLEMENTATION
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9990652123136763	WITHOUT_CLASSIFICATION	9.347876863236658E-4	IMPLEMENTATION
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9990652123136763	WITHOUT_CLASSIFICATION	9.347876863236658E-4	IMPLEMENTATION
// from DUP_SETUP	WITHOUT_CLASSIFICATION	0.9998002937813276	WITHOUT_CLASSIFICATION	1.997062186724091E-4	IMPLEMENTATION
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999136888297357	WITHOUT_CLASSIFICATION	8.631117026425073E-5	IMPLEMENTATION
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9998496523540031	WITHOUT_CLASSIFICATION	1.5034764599679274E-4	IMPLEMENTATION
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9998496523540031	WITHOUT_CLASSIFICATION	1.5034764599679274E-4	IMPLEMENTATION
// Satisfy java.util.List interface (for Java integration)	WITHOUT_CLASSIFICATION	0.999786027990433	WITHOUT_CLASSIFICATION	2.1397200956700565E-4	IMPLEMENTATION
// pre-set for the sake of terminating recursive calls	WITHOUT_CLASSIFICATION	0.9998949486600525	WITHOUT_CLASSIFICATION	1.050513399474905E-4	IMPLEMENTATION
/* root fiber */	WITHOUT_CLASSIFICATION	0.9998329943001526	WITHOUT_CLASSIFICATION	1.6700569984751186E-4	IMPLEMENTATION
// GMT+00:00 --> Etc/GMT, see "MRI behavior" // comment below.	WITHOUT_CLASSIFICATION	0.999921166642469	WITHOUT_CLASSIFICATION	7.883335753100607E-5	IMPLEMENTATION
//  See http://www.gzip.org/zlib/rfc-gzip.html	WITHOUT_CLASSIFICATION	0.999878122809045	WITHOUT_CLASSIFICATION	1.2187719095494584E-4	IMPLEMENTATION
// extras flag	WITHOUT_CLASSIFICATION	0.997962550221041	WITHOUT_CLASSIFICATION	0.002037449778959012	IMPLEMENTATION
// Zlib::NO_FLUSH	WITHOUT_CLASSIFICATION	0.9990652123136763	WITHOUT_CLASSIFICATION	9.347876863236658E-4	IMPLEMENTATION
// ...nothing	WITHOUT_CLASSIFICATION	0.9990652123136763	WITHOUT_CLASSIFICATION	9.347876863236658E-4	IMPLEMENTATION
// utility method	WITHOUT_CLASSIFICATION	0.9939857475529897	WITHOUT_CLASSIFICATION	0.006014252447010288	IMPLEMENTATION
// Prepare LoadService and load path	WITHOUT_CLASSIFICATION	0.9998880295655412	WITHOUT_CLASSIFICATION	1.119704344586545E-4	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999864650872056	WITHOUT_CLASSIFICATION	1.353491279433704E-5	IMPLEMENTATION
// flags // 4 bytes of modified time	WITHOUT_CLASSIFICATION	0.9998447938376779	WITHOUT_CLASSIFICATION	1.5520616232209163E-4	IMPLEMENTATION
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9997530594065932	WITHOUT_CLASSIFICATION	2.469405934067514E-4	IMPLEMENTATION
// 1.8 "include?"	WITHOUT_CLASSIFICATION	0.9990652123136763	WITHOUT_CLASSIFICATION	9.347876863236658E-4	IMPLEMENTATION
// any BigInteger is bigger than Fixnum and we don't have FIXABLE	WITHOUT_CLASSIFICATION	0.9997761654642155	WITHOUT_CLASSIFICATION	2.2383453578438969E-4	IMPLEMENTATION
// beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal	WITHOUT_CLASSIFICATION	0.9995943334987624	WITHOUT_CLASSIFICATION	4.056665012376216E-4	IMPLEMENTATION
// MRI does it!	WITHOUT_CLASSIFICATION	0.9998132112440775	WITHOUT_CLASSIFICATION	1.867887559224314E-4	IMPLEMENTATION
// won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999802151572338	WITHOUT_CLASSIFICATION	1.9784842766191925E-5	IMPLEMENTATION
// it won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999548999518484	WITHOUT_CLASSIFICATION	4.510004815166005E-5	IMPLEMENTATION
// RubyClassPathVariable	WITHOUT_CLASSIFICATION	0.9997877334300682	WITHOUT_CLASSIFICATION	2.1226656993181153E-4	IMPLEMENTATION
// not to be confused with RubyObject's flags	WITHOUT_CLASSIFICATION	0.9969357700019978	WITHOUT_CLASSIFICATION	0.003064229998002227	IMPLEMENTATION
// second argument is allowed, but ignored (MRI)	WITHOUT_CLASSIFICATION	0.999917090446787	WITHOUT_CLASSIFICATION	8.290955321287854E-5	IMPLEMENTATION
// we are presumably running a precompiled class; load directly	WITHOUT_CLASSIFICATION	0.9998340554412953	WITHOUT_CLASSIFICATION	1.6594455870465728E-4	IMPLEMENTATION
// terminate; tryCompile will have printed out an error and we're done	WITHOUT_CLASSIFICATION	0.9999882438626699	WITHOUT_CLASSIFICATION	1.1756137330039234E-5	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999877960886371	WITHOUT_CLASSIFICATION	1.2203911362974169E-5	IMPLEMENTATION
// do nothing, this iteration restarts	WITHOUT_CLASSIFICATION	0.9994356427308038	WITHOUT_CLASSIFICATION	5.643572691963596E-4	IMPLEMENTATION
// recheck condition	WITHOUT_CLASSIFICATION	0.9991378567948014	WITHOUT_CLASSIFICATION	8.621432051985643E-4	IMPLEMENTATION
// Get the main threadcontext (gets constructed for us)	WITHOUT_CLASSIFICATION	0.9998928284956874	WITHOUT_CLASSIFICATION	1.0717150431262326E-4	IMPLEMENTATION
// Construct key services	WITHOUT_CLASSIFICATION	0.9997577521754801	WITHOUT_CLASSIFICATION	2.422478245198283E-4	IMPLEMENTATION
// initialize the root of the class hierarchy completely	WITHOUT_CLASSIFICATION	0.9999458291664205	WITHOUT_CLASSIFICATION	5.41708335795567E-5	IMPLEMENTATION
// Construct the top-level execution frame and scope for the main thread	WITHOUT_CLASSIFICATION	0.9998269516026373	WITHOUT_CLASSIFICATION	1.7304839736261506E-4	IMPLEMENTATION
// Initialize all the core classes	WITHOUT_CLASSIFICATION	0.9998735024808638	WITHOUT_CLASSIFICATION	1.2649751913609584E-4	IMPLEMENTATION
// Initialize the "dummy" class used as a marker	WITHOUT_CLASSIFICATION	0.9999406656127173	WITHOUT_CLASSIFICATION	5.933438728263016E-5	IMPLEMENTATION
// Initialize Kernel and include into Object	WITHOUT_CLASSIFICATION	0.9998758539841461	WITHOUT_CLASSIFICATION	1.2414601585386157E-4	IMPLEMENTATION
// Object is ready, create top self	WITHOUT_CLASSIFICATION	0.99968648850401	WITHOUT_CLASSIFICATION	3.135114959901092E-4	IMPLEMENTATION
// Pre-create all the core classes potentially referenced during startup	WITHOUT_CLASSIFICATION	0.9999185013702498	WITHOUT_CLASSIFICATION	8.149862975009009E-5	IMPLEMENTATION
// Math depends on all numeric types	WITHOUT_CLASSIFICATION	0.9991202310203564	WITHOUT_CLASSIFICATION	8.797689796436769E-4	IMPLEMENTATION
// depends on IO, FileTest	WITHOUT_CLASSIFICATION	0.9994963733474602	WITHOUT_CLASSIFICATION	5.0362665253975E-4	IMPLEMENTATION
// initialize builtin libraries	WITHOUT_CLASSIFICATION	0.9997725505737975	WITHOUT_CLASSIFICATION	2.2744942620241078E-4	IMPLEMENTATION
// Require in all libraries specified on command line	WITHOUT_CLASSIFICATION	0.9999663310539559	WITHOUT_CLASSIFICATION	3.366894604395959E-5	IMPLEMENTATION
// Bootstrap the top of the hierarchy	WITHOUT_CLASSIFICATION	0.9997363232874367	WITHOUT_CLASSIFICATION	2.636767125633421E-4	IMPLEMENTATION
// we try to get the classloader that loaded JRuby, falling back on System	WITHOUT_CLASSIFICATION	0.998554130550851	WITHOUT_CLASSIFICATION	0.001445869449149117	IMPLEMENTATION
// determine spacing	WITHOUT_CLASSIFICATION	0.9994759776574597	WITHOUT_CLASSIFICATION	5.24022342540255E-4	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999904143642196	WITHOUT_CLASSIFICATION	9.585635780467372E-6	IMPLEMENTATION
// For JSR 223 support: see http://scripting.java.net/	WITHOUT_CLASSIFICATION	0.999845328736944	WITHOUT_CLASSIFICATION	1.5467126305595955E-4	IMPLEMENTATION
// use this for JRuby-internal finalizers	WITHOUT_CLASSIFICATION	0.9996135105641529	WITHOUT_CLASSIFICATION	3.864894358471082E-4	IMPLEMENTATION
// this method is for finalizers registered via ObjectSpace	WITHOUT_CLASSIFICATION	0.9989138132242755	WITHOUT_CLASSIFICATION	0.0010861867757244966	IMPLEMENTATION
// new factory methods ------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999417450588935	WITHOUT_CLASSIFICATION	5.825494110654009E-5	IMPLEMENTATION
//        assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9980564087939726	WITHOUT_CLASSIFICATION	0.0019435912060274802	IMPLEMENTATION
// Equivalent of Data_Wrap_Struct	WITHOUT_CLASSIFICATION	0.9998614852050581	WITHOUT_CLASSIFICATION	1.3851479494188547E-4	IMPLEMENTATION
// default: don't retain	WITHOUT_CLASSIFICATION	0.9998166310568821	WITHOUT_CLASSIFICATION	1.8336894311784437E-4	IMPLEMENTATION
// ChannelDescriptors opened by sysopen are cached to avoid collection	WITHOUT_CLASSIFICATION	0.9994319608502739	WITHOUT_CLASSIFICATION	5.680391497261356E-4	IMPLEMENTATION
// Default objects	WITHOUT_CLASSIFICATION	0.9986554337445012	WITHOUT_CLASSIFICATION	0.0013445662554988104	IMPLEMENTATION
// record separator var, to speed up io ops that use it	WITHOUT_CLASSIFICATION	0.9988546771133321	WITHOUT_CLASSIFICATION	0.0011453228866679305	IMPLEMENTATION
// former java.lang.System concepts now internalized for MVM	WITHOUT_CLASSIFICATION	0.9999150262204703	WITHOUT_CLASSIFICATION	8.497377952966409E-5	IMPLEMENTATION
// Java support	WITHOUT_CLASSIFICATION	0.9884867456992948	WITHOUT_CLASSIFICATION	0.011513254300705255	IMPLEMENTATION
// Parser stats	WITHOUT_CLASSIFICATION	0.9990711964453131	WITHOUT_CLASSIFICATION	9.288035546869744E-4	IMPLEMENTATION
// Compilation	WITHOUT_CLASSIFICATION	0.9990652123136763	WITHOUT_CLASSIFICATION	9.347876863236658E-4	IMPLEMENTATION
// can't read non-standard properties	WITHOUT_CLASSIFICATION	0.9998849431516235	WITHOUT_CLASSIFICATION	1.1505684837662087E-4	IMPLEMENTATION
// can't create custom classloaders	WITHOUT_CLASSIFICATION	0.9994408152494613	WITHOUT_CLASSIFICATION	5.591847505386852E-4	IMPLEMENTATION
// mutex that controls modifications of user-defined finalizers	WITHOUT_CLASSIFICATION	0.9997094093789154	WITHOUT_CLASSIFICATION	2.905906210846591E-4	IMPLEMENTATION
// mutex that controls modifications of internal finalizers	WITHOUT_CLASSIFICATION	0.9997591849513916	WITHOUT_CLASSIFICATION	2.4081504860846837E-4	IMPLEMENTATION
// A thread pool to use for executing this runtime's Ruby threads	WITHOUT_CLASSIFICATION	0.9987616377270607	WITHOUT_CLASSIFICATION	0.0012383622729392708	IMPLEMENTATION
// A global object lock for class hierarchy mutations	WITHOUT_CLASSIFICATION	0.9999955268903499	WITHOUT_CLASSIFICATION	4.4731096501510764E-6	IMPLEMENTATION
// initial spaces // spaces before "at"	WITHOUT_CLASSIFICATION	0.9999070881071647	WITHOUT_CLASSIFICATION	9.291189283535244E-5	IMPLEMENTATION
// event name // filename // line numbers should be 1-based	WITHOUT_CLASSIFICATION	0.9999474881647963	WITHOUT_CLASSIFICATION	5.251183520370314E-5	IMPLEMENTATION
// The method is intentionally not public, since it typically should // not be used outside of the core.	WITHOUT_CLASSIFICATION	0.9888584001247631	WITHOUT_CLASSIFICATION	0.011141599875236826	IMPLEMENTATION
// Note: this field and the following static initializer // must be located be in this order!	WITHOUT_CLASSIFICATION	0.9999576630798922	WITHOUT_CLASSIFICATION	4.2336920107911184E-5	IMPLEMENTATION
// Contains a list of all blocks (as Procs) that should be called when // the runtime environment exits.	WITHOUT_CLASSIFICATION	0.9999801108822967	WITHOUT_CLASSIFICATION	1.9889117703275375E-5	IMPLEMENTATION
// quoted-printable	WITHOUT_CLASSIFICATION	0.9990652123136763	WITHOUT_CLASSIFICATION	9.347876863236658E-4	IMPLEMENTATION
// default options	WITHOUT_CLASSIFICATION	0.9998518074925165	WITHOUT_CLASSIFICATION	1.4819250748353838E-4	IMPLEMENTATION
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9990652123136763	WITHOUT_CLASSIFICATION	9.347876863236658E-4	IMPLEMENTATION
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9990652123136763	WITHOUT_CLASSIFICATION	9.347876863236658E-4	IMPLEMENTATION
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9990652123136763	WITHOUT_CLASSIFICATION	9.347876863236658E-4	IMPLEMENTATION
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9990652123136763	WITHOUT_CLASSIFICATION	9.347876863236658E-4	IMPLEMENTATION
// EUC-JP	WITHOUT_CLASSIFICATION	0.999970764908297	WITHOUT_CLASSIFICATION	2.9235091703083797E-5	IMPLEMENTATION
// EUC-JP	WITHOUT_CLASSIFICATION	0.999970764908297	WITHOUT_CLASSIFICATION	2.9235091703083797E-5	IMPLEMENTATION
// UTF-8	WITHOUT_CLASSIFICATION	0.999970764908297	WITHOUT_CLASSIFICATION	2.9235091703083797E-5	IMPLEMENTATION
// UTF-8	WITHOUT_CLASSIFICATION	0.999970764908297	WITHOUT_CLASSIFICATION	2.9235091703083797E-5	IMPLEMENTATION
// long name option	WITHOUT_CLASSIFICATION	0.9992739863321798	WITHOUT_CLASSIFICATION	7.260136678202409E-4	IMPLEMENTATION
// conversion	WITHOUT_CLASSIFICATION	0.999535667642922	WITHOUT_CLASSIFICATION	4.6433235707800814E-4	IMPLEMENTATION
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999860047334836	WITHOUT_CLASSIFICATION	1.3995266516305264E-5	IMPLEMENTATION
// string doesn't share any resources	WITHOUT_CLASSIFICATION	0.9999910977008367	WITHOUT_CLASSIFICATION	8.90229916338482E-6	IMPLEMENTATION
// string has it's own ByteList, but it's pointing to a shared buffer (byte[])	WITHOUT_CLASSIFICATION	0.9999983208480432	WITHOUT_CLASSIFICATION	1.6791519568553588E-6	IMPLEMENTATION
// string doesn't have it's own ByteList (values)	WITHOUT_CLASSIFICATION	0.9999641100082949	WITHOUT_CLASSIFICATION	3.5889991705137824E-5	IMPLEMENTATION
// ENC_CODERANGE_ASCIIONLY	WITHOUT_CLASSIFICATION	0.9997877334300682	WITHOUT_CLASSIFICATION	2.1226656993181153E-4	IMPLEMENTATION
// rb_enc_str_asciionly_p	WITHOUT_CLASSIFICATION	0.9997877334300682	WITHOUT_CLASSIFICATION	2.1226656993181153E-4	IMPLEMENTATION
// rb_enc_str_coderange	WITHOUT_CLASSIFICATION	0.9997877334300682	WITHOUT_CLASSIFICATION	2.1226656993181153E-4	IMPLEMENTATION
// rb_str_hash_cmp	WITHOUT_CLASSIFICATION	0.9990652123136763	WITHOUT_CLASSIFICATION	9.347876863236658E-4	IMPLEMENTATION
// Deprecated String construction routines	WITHOUT_CLASSIFICATION	0.9998076934175901	WITHOUT_CLASSIFICATION	1.923065824099022E-4	IMPLEMENTATION
// String construction routines by NOT byte[] buffer and NOT making the target String shared 	WITHOUT_CLASSIFICATION	0.9999257505147429	WITHOUT_CLASSIFICATION	7.424948525708582E-5	IMPLEMENTATION
/* rb_str_subseq */	WITHOUT_CLASSIFICATION	0.9998479724803608	WITHOUT_CLASSIFICATION	1.5202751963920946E-4	IMPLEMENTATION
// no need to assign encoding, same bytelist shared	WITHOUT_CLASSIFICATION	0.9991401345481008	WITHOUT_CLASSIFICATION	8.59865451899162E-4	IMPLEMENTATION
// if len == 0 then shared empty	WITHOUT_CLASSIFICATION	0.9999971599412426	WITHOUT_CLASSIFICATION	2.840058757423042E-6	IMPLEMENTATION
/* rb_str_cmp_m */	WITHOUT_CLASSIFICATION	0.9998479724803608	WITHOUT_CLASSIFICATION	1.5202751963920946E-4	IMPLEMENTATION
// we limit to int because ByteBuffer can only allocate int sizes	WITHOUT_CLASSIFICATION	0.9992548848912427	WITHOUT_CLASSIFICATION	7.451151087573223E-4	IMPLEMENTATION
// // rb_str_buf_append	WITHOUT_CLASSIFICATION	0.9997877334300682	WITHOUT_CLASSIFICATION	2.1226656993181153E-4	IMPLEMENTATION
// encoding doesn't have to be copied.	WITHOUT_CLASSIFICATION	0.9999012697423184	WITHOUT_CLASSIFICATION	9.873025768162422E-5	IMPLEMENTATION
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9984208990522162	WITHOUT_CLASSIFICATION	0.0015791009477837514	IMPLEMENTATION
// must not reallocate	WITHOUT_CLASSIFICATION	0.9932441664532922	WITHOUT_CLASSIFICATION	0.0067558335467078	IMPLEMENTATION
// Illegal combination	WITHOUT_CLASSIFICATION	0.9997877334300682	WITHOUT_CLASSIFICATION	2.1226656993181153E-4	IMPLEMENTATION
// use 1.8 impl	WITHOUT_CLASSIFICATION	0.9978191758418533	WITHOUT_CLASSIFICATION	0.002180824158146689	IMPLEMENTATION
/* RubyString aka rb_string_value */	WITHOUT_CLASSIFICATION	0.9999588403624593	WITHOUT_CLASSIFICATION	4.115963754067716E-5	IMPLEMENTATION
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999565847230621	WITHOUT_CLASSIFICATION	4.341527693779027E-5	IMPLEMENTATION
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999929895121219	WITHOUT_CLASSIFICATION	7.010487878152566E-6	IMPLEMENTATION
/* len + margin */	WITHOUT_CLASSIFICATION	0.9998697985661706	WITHOUT_CLASSIFICATION	1.3020143382945135E-4	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9980910528594661	WITHOUT_CLASSIFICATION	0.0019089471405338467	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9980910528594661	WITHOUT_CLASSIFICATION	0.0019089471405338467	IMPLEMENTATION
/* copy pre-match substr */	WITHOUT_CLASSIFICATION	0.9999833503786789	WITHOUT_CLASSIFICATION	1.6649621321154807E-5	IMPLEMENTATION
// string given	WITHOUT_CLASSIFICATION	0.9998821611759905	WITHOUT_CLASSIFICATION	1.1783882400947652E-4	IMPLEMENTATION
// hash given	WITHOUT_CLASSIFICATION	0.9984246619488203	WITHOUT_CLASSIFICATION	0.0015753380511797695	IMPLEMENTATION
// This represents left most digit in a set of incremented // values?  Therefore leftmost numeric must be '1' and not '0' // 999 -> 1000, not 999 -> 0000.  whereas chars should be // zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"	WITHOUT_CLASSIFICATION	0.9999981688543356	WITHOUT_CLASSIFICATION	1.8311456643989044E-6	IMPLEMENTATION
/* substring longer than string */	WITHOUT_CLASSIFICATION	0.9999974684043685	WITHOUT_CLASSIFICATION	2.531595631485564E-6	IMPLEMENTATION
/* rb_str_substr */	WITHOUT_CLASSIFICATION	0.9998479724803608	WITHOUT_CLASSIFICATION	1.5202751963920946E-4	IMPLEMENTATION
// nothing	WITHOUT_CLASSIFICATION	0.9999966464031659	WITHOUT_CLASSIFICATION	3.3535968340594296E-6	IMPLEMENTATION
// nothing	WITHOUT_CLASSIFICATION	0.9999966464031659	WITHOUT_CLASSIFICATION	3.3535968340594296E-6	IMPLEMENTATION
/* rb_str_splice */	WITHOUT_CLASSIFICATION	0.9998479724803608	WITHOUT_CLASSIFICATION	1.5202751963920946E-4	IMPLEMENTATION
// TODO: keep cr // TODO: rb_str_splice_0	WITHOUT_CLASSIFICATION	0.5367528603092361	IMPLEMENTATION	0.463247139690764	WITHOUT_CLASSIFICATION
// keep cr ?	WITHOUT_CLASSIFICATION	0.9994926949457563	WITHOUT_CLASSIFICATION	5.073050542436324E-4	IMPLEMENTATION
// keep cr ?	WITHOUT_CLASSIFICATION	0.9994926949457563	WITHOUT_CLASSIFICATION	5.073050542436324E-4	IMPLEMENTATION
/* wrapped to \0...\0.  search next valid char. */	WITHOUT_CLASSIFICATION	0.9999595677761869	WITHOUT_CLASSIFICATION	4.043222381315637E-5	IMPLEMENTATION
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9984244262122421	WITHOUT_CLASSIFICATION	0.0015755737877579464	IMPLEMENTATION
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9984244262122421	WITHOUT_CLASSIFICATION	0.0015755737877579464	IMPLEMENTATION
// modified	WITHOUT_CLASSIFICATION	0.9969774864564085	WITHOUT_CLASSIFICATION	0.0030225135435914896	IMPLEMENTATION
// modified	WITHOUT_CLASSIFICATION	0.9969774864564085	WITHOUT_CLASSIFICATION	0.0030225135435914896	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.999970764908297	WITHOUT_CLASSIFICATION	2.9235091703083797E-5	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.999970764908297	WITHOUT_CLASSIFICATION	2.9235091703083797E-5	IMPLEMENTATION
// QTRUE	WITHOUT_CLASSIFICATION	0.999970764908297	WITHOUT_CLASSIFICATION	2.9235091703083797E-5	IMPLEMENTATION
/* retrieve last replacer */	WITHOUT_CLASSIFICATION	0.9999727767870388	WITHOUT_CLASSIFICATION	2.722321296112944E-5	IMPLEMENTATION
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9932403007078724	WITHOUT_CLASSIFICATION	0.006759699292127625	IMPLEMENTATION
// long size * bits in byte	WITHOUT_CLASSIFICATION	0.9999933432730143	WITHOUT_CLASSIFICATION	6.6567269856727204E-6	IMPLEMENTATION
// from encoding, special-casing ASCII* to ASCII	WITHOUT_CLASSIFICATION	0.9999456002134679	WITHOUT_CLASSIFICATION	5.439978653216853E-5	IMPLEMENTATION
// to encoding, same special-casing	WITHOUT_CLASSIFICATION	0.9998201164519764	WITHOUT_CLASSIFICATION	1.7988354802353924E-4	IMPLEMENTATION
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.999829378920102	WITHOUT_CLASSIFICATION	1.7062107989795582E-4	IMPLEMENTATION
// decode from "from" and encode to "to"	WITHOUT_CLASSIFICATION	0.9999589027794924	WITHOUT_CLASSIFICATION	4.1097220507561154E-5	IMPLEMENTATION
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.999829378920102	WITHOUT_CLASSIFICATION	1.7062107989795582E-4	IMPLEMENTATION
//Kernel is the only Module that doesn't need an implementor	WITHOUT_CLASSIFICATION	0.9989648493304132	WITHOUT_CLASSIFICATION	0.0010351506695868472	IMPLEMENTATION
// no binding given, use (eval)	WITHOUT_CLASSIFICATION	0.9993406456723974	WITHOUT_CLASSIFICATION	6.593543276026125E-4	IMPLEMENTATION
// interned, OK for "fast" methods	WITHOUT_CLASSIFICATION	0.9999203780551722	WITHOUT_CLASSIFICATION	7.962194482784636E-5	IMPLEMENTATION
// File to be loaded by autoload has already been or is being loaded.	WITHOUT_CLASSIFICATION	0.9999941658027142	WITHOUT_CLASSIFICATION	5.834197285757365E-6	IMPLEMENTATION
// rb_cstr_to_dbl case	WITHOUT_CLASSIFICATION	0.9996442623297693	WITHOUT_CLASSIFICATION	3.557376702306645E-4	IMPLEMENTATION
// We break if we know this sleep was explicitly woken up/interrupted	WITHOUT_CLASSIFICATION	0.9999158475049487	WITHOUT_CLASSIFICATION	8.415249505135168E-5	IMPLEMENTATION
// exec process, create IO with process	WITHOUT_CLASSIFICATION	0.9997168028445057	WITHOUT_CLASSIFICATION	2.8319715549430705E-4	IMPLEMENTATION
// Zero sleeps forever	WITHOUT_CLASSIFICATION	0.9997905458304807	WITHOUT_CLASSIFICATION	2.0945416951935548E-4	IMPLEMENTATION
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9957963568888493	WITHOUT_CLASSIFICATION	0.004203643111150802	IMPLEMENTATION
// Explicit zero in MRI returns immediately	WITHOUT_CLASSIFICATION	0.9999829167213781	WITHOUT_CLASSIFICATION	1.70832786219445E-5	IMPLEMENTATION
// Spurious wakeup-loop	WITHOUT_CLASSIFICATION	0.9997877334300682	WITHOUT_CLASSIFICATION	2.1226656993181153E-4	IMPLEMENTATION
// adjusts paths started with '/' or '\\', on windows.	WITHOUT_CLASSIFICATION	0.9994644718758089	WITHOUT_CLASSIFICATION	5.355281241911063E-4	IMPLEMENTATION
// file not given	WITHOUT_CLASSIFICATION	0.9593027465342292	WITHOUT_CLASSIFICATION	0.040697253465770904	IMPLEMENTATION
// string to eval	WITHOUT_CLASSIFICATION	0.9999273911840291	WITHOUT_CLASSIFICATION	7.260881597090725E-5	IMPLEMENTATION
// binding given, use binding's file	WITHOUT_CLASSIFICATION	0.9991006629850003	WITHOUT_CLASSIFICATION	8.99337014999546E-4	IMPLEMENTATION
// ?g  | boolean | True if file1 has the \CF{setgid} bit	WITHOUT_CLASSIFICATION	0.9999957764150929	WITHOUT_CLASSIFICATION	4.223584907161892E-6	IMPLEMENTATION
// bomb out, it's not a binding or a proc	WITHOUT_CLASSIFICATION	0.9940585129296594	WITHOUT_CLASSIFICATION	0.005941487070340675	IMPLEMENTATION
// Ordering of array traversal not important, just intuitive	WITHOUT_CLASSIFICATION	0.9994180423748262	WITHOUT_CLASSIFICATION	5.819576251738283E-4	IMPLEMENTATION
//Catch active, throw for catch to handle	WITHOUT_CLASSIFICATION	0.998334968944787	WITHOUT_CLASSIFICATION	0.0016650310552129993	IMPLEMENTATION
// No catch active for this throw	WITHOUT_CLASSIFICATION	0.9999273052762337	WITHOUT_CLASSIFICATION	7.269472376622843E-5	IMPLEMENTATION
// without full tracing, many events will not fire	WITHOUT_CLASSIFICATION	0.9936864534659016	WITHOUT_CLASSIFICATION	0.006313546534098359	IMPLEMENTATION
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9998607717081179	WITHOUT_CLASSIFICATION	1.3922829188205867E-4	IMPLEMENTATION
// MRI behavior: use first byte of string value if len > 0	WITHOUT_CLASSIFICATION	0.9999981436664966	WITHOUT_CLASSIFICATION	1.856333503457355E-6	IMPLEMENTATION
// MRI behavior: now check arg count	WITHOUT_CLASSIFICATION	0.9996900803037531	WITHOUT_CLASSIFICATION	3.099196962468644E-4	IMPLEMENTATION
// ?A  | Time    | Last access time for file1	WITHOUT_CLASSIFICATION	0.9999707414421041	WITHOUT_CLASSIFICATION	2.9258557896016138E-5	IMPLEMENTATION
// ?b  | boolean | True if file1 is a block device	WITHOUT_CLASSIFICATION	0.9999951232731494	WITHOUT_CLASSIFICATION	4.876726850562441E-6	IMPLEMENTATION
// ?c  | boolean | True if file1 is a character device	WITHOUT_CLASSIFICATION	0.9999959799270233	WITHOUT_CLASSIFICATION	4.0200729767614835E-6	IMPLEMENTATION
// ?C  | Time    | Last change time for file1	WITHOUT_CLASSIFICATION	0.9999935067314002	WITHOUT_CLASSIFICATION	6.493268599825955E-6	IMPLEMENTATION
// ?d  | boolean | True if file1 exists and is a directory	WITHOUT_CLASSIFICATION	0.999999676160572	WITHOUT_CLASSIFICATION	3.2383942802389063E-7	IMPLEMENTATION
// ?e  | boolean | True if file1 exists	WITHOUT_CLASSIFICATION	0.9999918644862128	WITHOUT_CLASSIFICATION	8.135513787106985E-6	IMPLEMENTATION
// ?f  | boolean | True if file1 exists and is a regular file	WITHOUT_CLASSIFICATION	0.9999960366624796	WITHOUT_CLASSIFICATION	3.963337520389255E-6	IMPLEMENTATION
// ?G  | boolean | True if file1 exists and has a group ownership equal to the caller's group	WITHOUT_CLASSIFICATION	0.9999971037275944	WITHOUT_CLASSIFICATION	2.896272405596957E-6	IMPLEMENTATION
// ?k  | boolean | True if file1 exists and has the sticky bit set	WITHOUT_CLASSIFICATION	0.9999971493548667	WITHOUT_CLASSIFICATION	2.850645133187036E-6	IMPLEMENTATION
// ?M  | Time    | Last modification time for file1	WITHOUT_CLASSIFICATION	0.9999857947695204	WITHOUT_CLASSIFICATION	1.4205230479561098E-5	IMPLEMENTATION
// ?o  | boolean | True if file1 exists and is owned by the caller's effective uid	WITHOUT_CLASSIFICATION	0.9999953943946154	WITHOUT_CLASSIFICATION	4.605605384577104E-6	IMPLEMENTATION
// ?O  | boolean | True if file1 exists and is owned by the caller's real uid 	WITHOUT_CLASSIFICATION	0.9999909682456686	WITHOUT_CLASSIFICATION	9.03175433147292E-6	IMPLEMENTATION
// ?p  | boolean | True if file1 exists and is a fifo	WITHOUT_CLASSIFICATION	0.9999974194860264	WITHOUT_CLASSIFICATION	2.5805139737551865E-6	IMPLEMENTATION
// ?r  | boolean | True if file1 is readable by the effective uid/gid of the caller	WITHOUT_CLASSIFICATION	0.9999971022247409	WITHOUT_CLASSIFICATION	2.8977752591327273E-6	IMPLEMENTATION
// ?s  | int/nil | If file1 has nonzero size, return the size, otherwise nil	WITHOUT_CLASSIFICATION	0.9990972456529611	WITHOUT_CLASSIFICATION	9.027543470390407E-4	IMPLEMENTATION
// ?S  | boolean | True if file1 exists and is a socket	WITHOUT_CLASSIFICATION	0.9999974194860264	WITHOUT_CLASSIFICATION	2.5805139737551865E-6	IMPLEMENTATION
// ?u  | boolean | True if file1 has the setuid bit set	WITHOUT_CLASSIFICATION	0.9999954648348933	WITHOUT_CLASSIFICATION	4.535165106711339E-6	IMPLEMENTATION
// ?x  | boolean | True if file1 exists and is executable by the effective uid/gid	WITHOUT_CLASSIFICATION	0.9999950919512258	WITHOUT_CLASSIFICATION	4.908048774125725E-6	IMPLEMENTATION
// ?X  | boolean | True if file1 exists and is executable by the real uid/gid	WITHOUT_CLASSIFICATION	0.9999903751463295	WITHOUT_CLASSIFICATION	9.624853670436557E-6	IMPLEMENTATION
// ?z  | boolean | True if file1 exists and has a zero length	WITHOUT_CLASSIFICATION	0.9999977791857094	WITHOUT_CLASSIFICATION	2.2208142905122575E-6	IMPLEMENTATION
// ?=  | boolean | True if the modification times of file1 and file2 are equal	WITHOUT_CLASSIFICATION	0.9999977632826821	WITHOUT_CLASSIFICATION	2.236717317971162E-6	IMPLEMENTATION
// ?<  | boolean | True if the modification time of file1 is prior to that of file2	WITHOUT_CLASSIFICATION	0.9999963615753938	WITHOUT_CLASSIFICATION	3.638424606172582E-6	IMPLEMENTATION
// ?>  | boolean | True if the modification time of file1 is after that of file2	WITHOUT_CLASSIFICATION	0.9999968482020515	WITHOUT_CLASSIFICATION	3.1517979485557707E-6	IMPLEMENTATION
// ?-  | boolean | True if file1 and file2 are identical	WITHOUT_CLASSIFICATION	0.9999959059478994	WITHOUT_CLASSIFICATION	4.094052100620247E-6	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9996891773294205	WITHOUT_CLASSIFICATION	3.1082267057940726E-4	IMPLEMENTATION
// Error info is per-thread	WITHOUT_CLASSIFICATION	0.9999239814566813	WITHOUT_CLASSIFICATION	7.601854331878999E-5	IMPLEMENTATION
// init errorInfo to nil	WITHOUT_CLASSIFICATION	0.9997876288109543	WITHOUT_CLASSIFICATION	2.1237118904564054E-4	IMPLEMENTATION
// if we're already aborting, we can receive no further mail	WITHOUT_CLASSIFICATION	0.999966661955294	WITHOUT_CLASSIFICATION	3.333804470599731E-5	IMPLEMENTATION
// If this thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9992946925152844	WITHOUT_CLASSIFICATION	7.053074847156137E-4	IMPLEMENTATION
// new interrupt, to hopefully wake it out of any blocking IO	WITHOUT_CLASSIFICATION	0.9998057206227934	WITHOUT_CLASSIFICATION	1.942793772066376E-4	IMPLEMENTATION
// set to default thread group	WITHOUT_CLASSIFICATION	0.999892417176143	WITHOUT_CLASSIFICATION	1.0758282385710819E-4	IMPLEMENTATION
// set to default thread group	WITHOUT_CLASSIFICATION	0.999892417176143	WITHOUT_CLASSIFICATION	1.0758282385710819E-4	IMPLEMENTATION
// JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999906001773604	WITHOUT_CLASSIFICATION	9.399822639700791E-6	IMPLEMENTATION
// JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999882061902806	WITHOUT_CLASSIFICATION	1.1793809719378128E-5	IMPLEMENTATION
// for Thread::start, which does not call the subclass's initialize	WITHOUT_CLASSIFICATION	0.9985347526549185	WITHOUT_CLASSIFICATION	0.0014652473450814877	IMPLEMENTATION
// JRUBY-3568, inherit threadgroup or use default	WITHOUT_CLASSIFICATION	0.9998893825627692	WITHOUT_CLASSIFICATION	1.1061743723083917E-4	IMPLEMENTATION
// MRI behavior: value given in seconds; converted to Float; less // than or equal to zero returns immediately; returns nil	WITHOUT_CLASSIFICATION	0.9999879339231391	WITHOUT_CLASSIFICATION	1.2066076860774492E-5	IMPLEMENTATION
// If the target thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9996562093143484	WITHOUT_CLASSIFICATION	3.43790685651619E-4	IMPLEMENTATION
// We need this loop in order to be able to "unblock" the // join call without actually calling interrupt.	WITHOUT_CLASSIFICATION	0.9999781089672168	WITHOUT_CLASSIFICATION	2.1891032783107078E-5	IMPLEMENTATION
// attempt to decriticalize all if we're the critical thread	WITHOUT_CLASSIFICATION	0.9999467816909049	WITHOUT_CLASSIFICATION	5.321830909513822E-5	IMPLEMENTATION
// not valid for "dead" state	WITHOUT_CLASSIFICATION	0.9995818055831466	WITHOUT_CLASSIFICATION	4.18194416853511E-4	IMPLEMENTATION
// If the killee thread is the same as the killer thread, just die	WITHOUT_CLASSIFICATION	0.9999759671733506	WITHOUT_CLASSIFICATION	2.403282664940119E-5	IMPLEMENTATION
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999462653677172	WITHOUT_CLASSIFICATION	5.373463228281459E-5	IMPLEMENTATION
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999462653677172	WITHOUT_CLASSIFICATION	5.373463228281459E-5	IMPLEMENTATION
// ignore; I don't like doing it, but it seems like we // really just need to make all channels non-blocking by // default and use select when implementing blocking ops, // so if this remains set non-blocking, perhaps it's not // such a big deal...	WITHOUT_CLASSIFICATION	0.998035101776337	WITHOUT_CLASSIFICATION	0.001964898223662918	IMPLEMENTATION
// can't select, just have to do a blocking call	WITHOUT_CLASSIFICATION	0.9997344641685058	WITHOUT_CLASSIFICATION	2.655358314943143E-4	IMPLEMENTATION
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9997160902151618	WITHOUT_CLASSIFICATION	2.8390978483816017E-4	IMPLEMENTATION
// Create Constants class	WITHOUT_CLASSIFICATION	0.9999453767269981	WITHOUT_CLASSIFICATION	5.4623273001936916E-5	IMPLEMENTATION
// Create constants for open flags	WITHOUT_CLASSIFICATION	0.9999848124421272	WITHOUT_CLASSIFICATION	1.5187557872789658E-5	IMPLEMENTATION
// Strip off the O_ prefix, so they become File::RDONLY, and so on	WITHOUT_CLASSIFICATION	0.9999224026116348	WITHOUT_CLASSIFICATION	7.759738836520844E-5	IMPLEMENTATION
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999788112153817	WITHOUT_CLASSIFICATION	2.118878461827523E-5	IMPLEMENTATION
// File::Constants module is included in IO.	WITHOUT_CLASSIFICATION	0.9999715241921883	WITHOUT_CLASSIFICATION	2.847580781175983E-5	IMPLEMENTATION
// Make sure any existing lock is released before we try and close the file	WITHOUT_CLASSIFICATION	0.9999517384823757	WITHOUT_CLASSIFICATION	4.826151762439416E-5	IMPLEMENTATION
// null channel always succeeds for all locking operations	WITHOUT_CLASSIFICATION	0.9996942600427272	WITHOUT_CLASSIFICATION	3.057399572727942E-4	IMPLEMENTATION
// Paths which end in "/" or "\\" must be stripped off.	WITHOUT_CLASSIFICATION	0.9999097699301098	WITHOUT_CLASSIFICATION	9.023006989018523E-5	IMPLEMENTATION
// Special case for handling ACCMODE, since constantine will generate // an invalid value if it is not defined by the platform.	WITHOUT_CLASSIFICATION	0.9999701377452087	WITHOUT_CLASSIFICATION	2.9862254791294186E-5	IMPLEMENTATION
// Return false here	WITHOUT_CLASSIFICATION	0.9995349847299156	WITHOUT_CLASSIFICATION	4.65015270084382E-4	IMPLEMENTATION
// Return false here	WITHOUT_CLASSIFICATION	0.9995349847299156	WITHOUT_CLASSIFICATION	4.65015270084382E-4	IMPLEMENTATION
// We're not actually a real file, so we can't flock	WITHOUT_CLASSIFICATION	0.9916504775113348	WITHOUT_CLASSIFICATION	0.008349522488665115	IMPLEMENTATION
// Should we do anything?	WITHOUT_CLASSIFICATION	0.9995722275957467	WITHOUT_CLASSIFICATION	4.2777240425325303E-4	IMPLEMENTATION
/* File class methods */	WITHOUT_CLASSIFICATION	0.9999978502157713	WITHOUT_CLASSIFICATION	2.1497842287476287E-6	IMPLEMENTATION
// MRI-compatible basename handling for windows drive letter paths	WITHOUT_CLASSIFICATION	0.9997514067089514	WITHOUT_CLASSIFICATION	2.485932910485645E-4	IMPLEMENTATION
// strip c: away from relative-pathed name	WITHOUT_CLASSIFICATION	0.9999079799580121	WITHOUT_CLASSIFICATION	9.202004198792153E-5	IMPLEMENTATION
// C:\ is returned unchanged	WITHOUT_CLASSIFICATION	0.9998510756578287	WITHOUT_CLASSIFICATION	1.4892434217122252E-4	IMPLEMENTATION
// -1 no match; 0 it is dot file not extension	WITHOUT_CLASSIFICATION	0.9827990593036051	WITHOUT_CLASSIFICATION	0.017200940696394912	IMPLEMENTATION
// trim trailing slashes	WITHOUT_CLASSIFICATION	0.9997955752248502	WITHOUT_CLASSIFICATION	2.0442477514979066E-4	IMPLEMENTATION
// Dot is not at beginning and not at end of filename. 	WITHOUT_CLASSIFICATION	0.9993034805596263	WITHOUT_CLASSIFICATION	6.965194403737163E-4	IMPLEMENTATION
// Handle ~user paths 	WITHOUT_CLASSIFICATION	0.9998093942887272	WITHOUT_CLASSIFICATION	1.9060571127287238E-4	IMPLEMENTATION
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9997160902151618	WITHOUT_CLASSIFICATION	2.8390978483816017E-4	IMPLEMENTATION
// Include additional path separator // (so that dirname of "C:\file.txt" is  "C:\", not "C:")	WITHOUT_CLASSIFICATION	0.9968093143245396	WITHOUT_CLASSIFICATION	0.0031906856754605225	IMPLEMENTATION
// FNFException can be thrown in both cases, when the file // is not found, or when permission is denied.	WITHOUT_CLASSIFICATION	0.9988449327591659	WITHOUT_CLASSIFICATION	0.001155067240834154	IMPLEMENTATION
// No directory delimeter.  Rest of string is username	WITHOUT_CLASSIFICATION	0.9999997558274223	WITHOUT_CLASSIFICATION	2.441725777222385E-7	IMPLEMENTATION
// If there's a second argument, it's the path to which the first  // argument is relative.	WITHOUT_CLASSIFICATION	0.9998159953742772	WITHOUT_CLASSIFICATION	1.840046257226632E-4	IMPLEMENTATION
// Handle ~user paths.	WITHOUT_CLASSIFICATION	0.9998018965817184	WITHOUT_CLASSIFICATION	1.981034182815861E-4	IMPLEMENTATION
// If there's no second argument, simply use the working directory  // of the runtime.	WITHOUT_CLASSIFICATION	0.9998657536672426	WITHOUT_CLASSIFICATION	1.3424633275746674E-4	IMPLEMENTATION
// Find out which string to check.	WITHOUT_CLASSIFICATION	0.9999257776054724	WITHOUT_CLASSIFICATION	7.42223945276171E-5	IMPLEMENTATION
// Single '~' as whole path to expand	WITHOUT_CLASSIFICATION	0.9998760765386573	WITHOUT_CLASSIFICATION	1.2392346134264053E-4	IMPLEMENTATION
// Count number of extra slashes in the beginning of the string.	WITHOUT_CLASSIFICATION	0.9999906849980815	WITHOUT_CLASSIFICATION	9.315001918441004E-6	IMPLEMENTATION
// '~user/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999025224967539	WITHOUT_CLASSIFICATION	9.74775032460485E-5	IMPLEMENTATION
// '~/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999182919736208	WITHOUT_CLASSIFICATION	8.170802637908068E-5	IMPLEMENTATION
// Prepare a string with the same number of redundant slashes so that  // we easily can prepend it to the result.	WITHOUT_CLASSIFICATION	0.9999570007021865	WITHOUT_CLASSIFICATION	4.299929781361287E-5	IMPLEMENTATION
// If there are N slashes, then we want N-1.	WITHOUT_CLASSIFICATION	0.9998228874511266	WITHOUT_CLASSIFICATION	1.7711254887337554E-4	IMPLEMENTATION
// no canonical path yet or length is zero, and we have a / followed by a dot...	WITHOUT_CLASSIFICATION	0.999769502528362	WITHOUT_CLASSIFICATION	2.304974716378429E-4	IMPLEMENTATION
// we don't have another slash after this, so replace /. with /	WITHOUT_CLASSIFICATION	0.998212891149909	WITHOUT_CLASSIFICATION	0.0017871088500910515	IMPLEMENTATION
// we do have another slash; omit both / and . (JRUBY-1606)	WITHOUT_CLASSIFICATION	0.999020482156797	WITHOUT_CLASSIFICATION	9.795178432030407E-4	IMPLEMENTATION
// do nothing, we should not delete the drive letter	WITHOUT_CLASSIFICATION	0.9889632292359843	WITHOUT_CLASSIFICATION	0.011036770764015635	IMPLEMENTATION
/* rb: check_modifiable */	WITHOUT_CLASSIFICATION	0.9999654992998921	WITHOUT_CLASSIFICATION	3.4500700107862226E-5	IMPLEMENTATION
/* rb: readable */	WITHOUT_CLASSIFICATION	0.9998484743393614	WITHOUT_CLASSIFICATION	1.5152566063856784E-4	IMPLEMENTATION
// rename is successful	WITHOUT_CLASSIFICATION	0.9998655768612696	WITHOUT_CLASSIFICATION	1.3442313873031329E-4	IMPLEMENTATION
// rename via Java API call wasn't successful, let's try some tricks, similar to MRI 	WITHOUT_CLASSIFICATION	0.999408012661801	WITHOUT_CLASSIFICATION	5.919873381989518E-4	IMPLEMENTATION
// try to rename one more time	WITHOUT_CLASSIFICATION	0.9986113943645974	WITHOUT_CLASSIFICATION	0.0013886056354025429	IMPLEMENTATION
// Can we produce IOError which bypasses a close?	WITHOUT_CLASSIFICATION	0.999313173890812	WITHOUT_CLASSIFICATION	6.868261091879792E-4	IMPLEMENTATION
// Fast path since JNA stat is about 10x slower than this	WITHOUT_CLASSIFICATION	0.9999912912054848	WITHOUT_CLASSIFICATION	8.708794515176632E-6	IMPLEMENTATION
// RubyContinuation	WITHOUT_CLASSIFICATION	0.9990652123136763	WITHOUT_CLASSIFICATION	9.347876863236658E-4	IMPLEMENTATION
/*     *  Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq)     *  it doesn't initialize ifNone field     */	WITHOUT_CLASSIFICATION	0.9999986754735072	WITHOUT_CLASSIFICATION	1.3245264927928185E-6	IMPLEMENTATION
// 16 ?	WITHOUT_CLASSIFICATION	0.999976835565582	WITHOUT_CLASSIFICATION	2.3164434418015545E-5	IMPLEMENTATION
// generation count for O(1) clears	WITHOUT_CLASSIFICATION	0.9999097805873594	WITHOUT_CLASSIFICATION	9.021941264064396E-5	IMPLEMENTATION
// size + 1;	WITHOUT_CLASSIFICATION	0.9996297758864117	WITHOUT_CLASSIFICATION	3.7022411358833676E-4	IMPLEMENTATION
// suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen	WITHOUT_CLASSIFICATION	0.9979566021925732	WITHOUT_CLASSIFICATION	0.0020433978074268716	IMPLEMENTATION
// ------------------------------	WITHOUT_CLASSIFICATION	0.999748025496637	WITHOUT_CLASSIFICATION	2.519745033629916E-4	IMPLEMENTATION
// ------------------------------	WITHOUT_CLASSIFICATION	0.999748025496637	WITHOUT_CLASSIFICATION	2.519745033629916E-4	IMPLEMENTATION
// put implementation	WITHOUT_CLASSIFICATION	0.996319625936301	WITHOUT_CLASSIFICATION	0.003680374063698922	IMPLEMENTATION
// get implementation	WITHOUT_CLASSIFICATION	0.9993997560032537	WITHOUT_CLASSIFICATION	6.002439967463459E-4	IMPLEMENTATION
// specialized for value	WITHOUT_CLASSIFICATION	0.999946808666412	WITHOUT_CLASSIFICATION	5.319133358811656E-5	IMPLEMENTATION
// delete implementation	WITHOUT_CLASSIFICATION	0.9995187735299311	WITHOUT_CLASSIFICATION	4.812264700689442E-4	IMPLEMENTATION
// n.b. we need to recompute the hash in case the key object was modified	WITHOUT_CLASSIFICATION	0.9998977700439836	WITHOUT_CLASSIFICATION	1.0222995601640347E-4	IMPLEMENTATION
/* ============================     * End of hash internals     * ============================     */	WITHOUT_CLASSIFICATION	0.9999885656349186	WITHOUT_CLASSIFICATION	1.1434365081418023E-5	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================     */	WITHOUT_CLASSIFICATION	0.9999864650872056	WITHOUT_CLASSIFICATION	1.353491279433704E-5	IMPLEMENTATION
// update the hash value	WITHOUT_CLASSIFICATION	0.9999390062797445	WITHOUT_CLASSIFICATION	6.0993720255511175E-5	IMPLEMENTATION
// other hash does not contain key	WITHOUT_CLASSIFICATION	0.9860271305951916	WITHOUT_CLASSIFICATION	0.013972869404808342	IMPLEMENTATION
// rb_yield_values(2,...) equivalent	WITHOUT_CLASSIFICATION	0.9993563190252065	WITHOUT_CLASSIFICATION	6.436809747935406E-4	IMPLEMENTATION
// Satisfy java.util.Set interface (for Java integration)	WITHOUT_CLASSIFICATION	0.999849507114889	WITHOUT_CLASSIFICATION	1.504928851110548E-4	IMPLEMENTATION
// remain where we are	WITHOUT_CLASSIFICATION	0.9995656829477747	WITHOUT_CLASSIFICATION	4.343170522253986E-4	IMPLEMENTATION
// We use file test since it is faster than a stat; also euid == uid in Java always	WITHOUT_CLASSIFICATION	0.9999952301108842	WITHOUT_CLASSIFICATION	4.769889115868432E-6	IMPLEMENTATION
// default: don't retain	WITHOUT_CLASSIFICATION	0.9998166310568821	WITHOUT_CLASSIFICATION	1.8336894311784437E-4	IMPLEMENTATION
// once hasNext has been called, we commit to next() returning // the entry it found, even if it were subsequently deleted	WITHOUT_CLASSIFICATION	0.9981776698119578	WITHOUT_CLASSIFICATION	0.001822330188042182	IMPLEMENTATION
// Not exposed by filetest, but so similiar in nature that it is stored here	WITHOUT_CLASSIFICATION	0.9999490620106453	WITHOUT_CLASSIFICATION	5.093798935482348E-5	IMPLEMENTATION
// We do both writable and writable_real through the same method because // in our java process effective and real userid will always be the same.	WITHOUT_CLASSIFICATION	0.999871084041266	WITHOUT_CLASSIFICATION	1.2891595873400542E-4	IMPLEMENTATION
// first try as directory	WITHOUT_CLASSIFICATION	0.9999714233282444	WITHOUT_CLASSIFICATION	2.8576671755564656E-5	IMPLEMENTATION
// next as regular file	WITHOUT_CLASSIFICATION	0.9991414075563801	WITHOUT_CLASSIFICATION	8.585924436198799E-4	IMPLEMENTATION
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9994874269907071	WITHOUT_CLASSIFICATION	5.125730092928632E-4	IMPLEMENTATION
// NIO-based	WITHOUT_CLASSIFICATION	0.9990652123136763	WITHOUT_CLASSIFICATION	9.347876863236658E-4	IMPLEMENTATION
// NIO-based	WITHOUT_CLASSIFICATION	0.9990652123136763	WITHOUT_CLASSIFICATION	9.347876863236658E-4	IMPLEMENTATION
// Stream-based	WITHOUT_CLASSIFICATION	0.9990652123136763	WITHOUT_CLASSIFICATION	9.347876863236658E-4	IMPLEMENTATION
// special constructor that accepts stream, not channel	WITHOUT_CLASSIFICATION	0.9920557294315309	WITHOUT_CLASSIFICATION	0.00794427056846906	IMPLEMENTATION
/*     * We use FILE versus IO to match T_FILE in MRI.     */	WITHOUT_CLASSIFICATION	0.9999981781082091	WITHOUT_CLASSIFICATION	1.8218917909105225E-6	IMPLEMENTATION
// Constants for seek	WITHOUT_CLASSIFICATION	0.9999133358238526	WITHOUT_CLASSIFICATION	8.666417614738754E-5	IMPLEMENTATION
// confirm we're not reopening self's channel	WITHOUT_CLASSIFICATION	0.9984572041812279	WITHOUT_CLASSIFICATION	0.001542795818772114	IMPLEMENTATION
// check if we're a stdio IO, and ensure we're not badly mutilated	WITHOUT_CLASSIFICATION	0.999717792900799	WITHOUT_CLASSIFICATION	2.822070992010084E-4	IMPLEMENTATION
// dup2 new fd into self to preserve fileno and references to it	WITHOUT_CLASSIFICATION	0.9989531538302772	WITHOUT_CLASSIFICATION	0.0010468461697228763	IMPLEMENTATION
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999883392788278	WITHOUT_CLASSIFICATION	1.1660721172222534E-5	IMPLEMENTATION
// re-register the descriptor	WITHOUT_CLASSIFICATION	0.9997756125946848	WITHOUT_CLASSIFICATION	2.2438740531510282E-4	IMPLEMENTATION
// since we're not actually duping the incoming channel into our handler, we need to // copy the original sync behavior from the other handler	WITHOUT_CLASSIFICATION	0.9980032650991466	WITHOUT_CLASSIFICATION	0.0019967349008533984	IMPLEMENTATION
// re-register	WITHOUT_CLASSIFICATION	0.9990652123136763	WITHOUT_CLASSIFICATION	9.347876863236658E-4	IMPLEMENTATION
// A potentially previously close IO is being 'reopened'.	WITHOUT_CLASSIFICATION	0.9999684404419138	WITHOUT_CLASSIFICATION	3.155955808612219E-5	IMPLEMENTATION
/*     * Ensure that separator is valid otherwise give it the default paragraph separator.     */	WITHOUT_CLASSIFICATION	0.9999457178000535	WITHOUT_CLASSIFICATION	5.428219994641169E-5	IMPLEMENTATION
// loop until we see the nth separator char	WITHOUT_CLASSIFICATION	0.999988462053964	WITHOUT_CLASSIFICATION	1.1537946035999618E-5	IMPLEMENTATION
// if we hit EOF or reached limit then we're done	WITHOUT_CLASSIFICATION	0.9999939181216387	WITHOUT_CLASSIFICATION	6.081878361222975E-6	IMPLEMENTATION
// this is for a range check, near as I can tell	WITHOUT_CLASSIFICATION	0.9993107795900418	WITHOUT_CLASSIFICATION	6.892204099582225E-4	IMPLEMENTATION
// IO class methods.	WITHOUT_CLASSIFICATION	0.9995668550869686	WITHOUT_CLASSIFICATION	4.3314491303137923E-4	IMPLEMENTATION
// use original modes	WITHOUT_CLASSIFICATION	0.9992572333148536	WITHOUT_CLASSIFICATION	7.427666851463373E-4	IMPLEMENTATION
// See if we already have this descriptor open. // If so then we can mostly share the handler (keep open // file, but possibly change the mode).	WITHOUT_CLASSIFICATION	0.9999969536188562	WITHOUT_CLASSIFICATION	3.0463811436528147E-6	IMPLEMENTATION
// redundant, done above as well	WITHOUT_CLASSIFICATION	0.9999659682836816	WITHOUT_CLASSIFICATION	3.40317163184913E-5	IMPLEMENTATION
// MRI behavior: swallow StandardErorrs	WITHOUT_CLASSIFICATION	0.9997470577563475	WITHOUT_CLASSIFICATION	2.529422436524996E-4	IMPLEMENTATION
// -1 == don't set permissions	WITHOUT_CLASSIFICATION	0.9999265183679924	WITHOUT_CLASSIFICATION	7.348163200762901E-5	IMPLEMENTATION
// isRetained=true	WITHOUT_CLASSIFICATION	0.9990652123136763	WITHOUT_CLASSIFICATION	9.347876863236658E-4	IMPLEMENTATION
// This appears to be some windows-only mode.  On a java platform this is a no-op	WITHOUT_CLASSIFICATION	0.9999463113601146	WITHOUT_CLASSIFICATION	5.3688639885460155E-5	IMPLEMENTATION
// if not sync, we switch to write buffered mode	WITHOUT_CLASSIFICATION	0.9991334271001896	WITHOUT_CLASSIFICATION	8.66572899810474E-4	IMPLEMENTATION
/*     * Throw bad file descriptor is we can not read on supplied descriptor.     */	WITHOUT_CLASSIFICATION	0.9984656742891016	WITHOUT_CLASSIFICATION	0.0015343257108984408	IMPLEMENTATION
//Everything written	WITHOUT_CLASSIFICATION	0.9965259088063827	WITHOUT_CLASSIFICATION	0.0034740911936173113	IMPLEMENTATION
//            return len - n;	WITHOUT_CLASSIFICATION	0.9996776332187488	WITHOUT_CLASSIFICATION	3.223667812512829E-4	IMPLEMENTATION
// Claims conversion is done via 'to_s' in docs.	WITHOUT_CLASSIFICATION	0.9999954141896981	WITHOUT_CLASSIFICATION	4.5858103020016124E-6	IMPLEMENTATION
// Of course this isn't particularly useful.	WITHOUT_CLASSIFICATION	0.9996381808550336	WITHOUT_CLASSIFICATION	3.6181914496635276E-4	IMPLEMENTATION
// Must be back on first line on rewind.	WITHOUT_CLASSIFICATION	0.9995213600665186	WITHOUT_CLASSIFICATION	4.7863993348149495E-4	IMPLEMENTATION
// Register the new descriptor	WITHOUT_CLASSIFICATION	0.9995558677785122	WITHOUT_CLASSIFICATION	4.4413222148782366E-4	IMPLEMENTATION
// cleanup, raising errors if any	WITHOUT_CLASSIFICATION	0.9999386816013927	WITHOUT_CLASSIFICATION	6.131839860728944E-5	IMPLEMENTATION
// hmmmm	WITHOUT_CLASSIFICATION	0.999970764908297	WITHOUT_CLASSIFICATION	2.9235091703083797E-5	IMPLEMENTATION
// I believe Ruby bails out with a "bug" if closing fails	WITHOUT_CLASSIFICATION	0.9998625635778178	WITHOUT_CLASSIFICATION	1.3743642218214615E-4	IMPLEMENTATION
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec. // And why the hell does webrick pass this in as a first argument!!!!!	WITHOUT_CLASSIFICATION	0.9999995770998521	WITHOUT_CLASSIFICATION	4.229001479601334E-7	IMPLEMENTATION
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec.	WITHOUT_CLASSIFICATION	0.9999982566839201	WITHOUT_CLASSIFICATION	1.7433160799000397E-6	IMPLEMENTATION
// Length to read	WITHOUT_CLASSIFICATION	0.999705941253399	WITHOUT_CLASSIFICATION	2.9405874660106443E-4	IMPLEMENTATION
// String/Buffer to read it into	WITHOUT_CLASSIFICATION	0.9997521545410749	WITHOUT_CLASSIFICATION	2.478454589250427E-4	IMPLEMENTATION
// cryptic for the uninitiated...	WITHOUT_CLASSIFICATION	0.9998881561257449	WITHOUT_CLASSIFICATION	1.118438742551946E-4	IMPLEMENTATION
// select until read is ready	WITHOUT_CLASSIFICATION	0.9998938950076092	WITHOUT_CLASSIFICATION	1.061049923907737E-4	IMPLEMENTATION
//        ByteList buffer = null;	WITHOUT_CLASSIFICATION	0.9998289160302377	WITHOUT_CLASSIFICATION	1.7108396976218818E-4	IMPLEMENTATION
//            buffer = str.getByteList();	WITHOUT_CLASSIFICATION	0.9998213303323336	WITHOUT_CLASSIFICATION	1.7866966766648385E-4	IMPLEMENTATION
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.999954677558507	WITHOUT_CLASSIFICATION	4.5322441493041884E-5	IMPLEMENTATION
/* rb: writable */	WITHOUT_CLASSIFICATION	0.9998479724803608	WITHOUT_CLASSIFICATION	1.5202751963920946E-4	IMPLEMENTATION
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.999954677558507	WITHOUT_CLASSIFICATION	4.5322441493041884E-5	IMPLEMENTATION
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999754108019896	WITHOUT_CLASSIFICATION	2.4589198010357976E-5	IMPLEMENTATION
// TODO: read into buffer using all the fread logic //        int read = openFile.getMainStream().fread(buffer);	WITHOUT_CLASSIFICATION	0.8794832307409234	WITHOUT_CLASSIFICATION	0.12051676925907667	IMPLEMENTATION
// truncate buffer string to zero, if provided	WITHOUT_CLASSIFICATION	0.9999977816834595	WITHOUT_CLASSIFICATION	2.2183165404174863E-6	IMPLEMENTATION
// TODO: READ_CHECK from MRI	WITHOUT_CLASSIFICATION	0.7675518122806234	WITHOUT_CLASSIFICATION	0.23244818771937653	IMPLEMENTATION
/* class methods for IO */	WITHOUT_CLASSIFICATION	0.999997464333393	WITHOUT_CLASSIFICATION	2.535666606981076E-6	IMPLEMENTATION
// save blocking state	WITHOUT_CLASSIFICATION	0.999946814350955	WITHOUT_CLASSIFICATION	5.3185649044947656E-5	IMPLEMENTATION
// write	WITHOUT_CLASSIFICATION	0.9999745100863323	WITHOUT_CLASSIFICATION	2.5489913667725532E-5	IMPLEMENTATION
// Java's select doesn't do anything about this, so we leave it be.	WITHOUT_CLASSIFICATION	0.999590404689357	WITHOUT_CLASSIFICATION	4.0959531064304797E-4	IMPLEMENTATION
// make all sockets blocking as configured again // close unregisters all channels, so we can safely reset blocking modes	WITHOUT_CLASSIFICATION	0.9994834322589053	WITHOUT_CLASSIFICATION	5.165677410945925E-4	IMPLEMENTATION
// FIXME: process options	WITHOUT_CLASSIFICATION	0.9998655649285504	WITHOUT_CLASSIFICATION	1.3443507144968083E-4	IMPLEMENTATION
// Enebo: annotation processing forced me to do pangea method here...	WITHOUT_CLASSIFICATION	0.9965722233308808	WITHOUT_CLASSIFICATION	0.0034277766691192253	IMPLEMENTATION
// NIO based pipe	WITHOUT_CLASSIFICATION	0.999083039400327	WITHOUT_CLASSIFICATION	9.169605996729856E-4	IMPLEMENTATION
// not using remove(Object) here to avoid the equals() call	WITHOUT_CLASSIFICATION	0.9907205932373894	WITHOUT_CLASSIFICATION	0.00927940676261065	IMPLEMENTATION
// raise will also wake the thread from selection	WITHOUT_CLASSIFICATION	0.9999116625998618	WITHOUT_CLASSIFICATION	8.833740013834671E-5	IMPLEMENTATION
/* may need to handle ENC_CODERANGE_BROKEN */	WITHOUT_CLASSIFICATION	0.9990160599813803	WITHOUT_CLASSIFICATION	9.839400186197373E-4	IMPLEMENTATION
// TODO: rb_usascii_str_new2	WITHOUT_CLASSIFICATION	0.5865372894595964	IMPLEMENTATION	0.41346271054040357	WITHOUT_CLASSIFICATION
// If we know what method was being called, strip everything // before the call. This hides the JRuby and reflection internals.	WITHOUT_CLASSIFICATION	0.9307705964042687	WITHOUT_CLASSIFICATION	0.06922940359573125	IMPLEMENTATION
// The class of this object	WITHOUT_CLASSIFICATION	0.9999681129492068	WITHOUT_CLASSIFICATION	3.188705079313197E-5	IMPLEMENTATION
// zeroed by jvm	WITHOUT_CLASSIFICATION	0.9989872326940843	WITHOUT_CLASSIFICATION	0.001012767305915687	IMPLEMENTATION
//objectClass.defineAnnotatedMethods(BasicObjectMethods.class);	WITHOUT_CLASSIFICATION	0.9990655965962804	WITHOUT_CLASSIFICATION	9.344034037195148E-4	IMPLEMENTATION
// JRUBY-4113: callers should not call setTaint on immediate objects	WITHOUT_CLASSIFICATION	0.9182245279034077	WITHOUT_CLASSIFICATION	0.0817754720965923	IMPLEMENTATION
// rb_class_boot	WITHOUT_CLASSIFICATION	0.9990652123136763	WITHOUT_CLASSIFICATION	9.347876863236658E-4	IMPLEMENTATION
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999654992998921	WITHOUT_CLASSIFICATION	3.4500700107862226E-5	IMPLEMENTATION
// 1.9 rb_check_to_integer	WITHOUT_CLASSIFICATION	0.9997877334300682	WITHOUT_CLASSIFICATION	2.1226656993181153E-4	IMPLEMENTATION
// for interface impls	WITHOUT_CLASSIFICATION	0.999961964147392	WITHOUT_CLASSIFICATION	3.8035852607932577E-5	IMPLEMENTATION
// We're cloning ourselves, so we know the result should be a RubyObject	WITHOUT_CLASSIFICATION	0.9980915119455046	WITHOUT_CLASSIFICATION	0.0019084880544954323	IMPLEMENTATION
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999713799326111	WITHOUT_CLASSIFICATION	2.862006738885829E-5	IMPLEMENTATION
// can't use -v and stdin	WITHOUT_CLASSIFICATION	0.9992715643199511	WITHOUT_CLASSIFICATION	7.284356800488395E-4	IMPLEMENTATION
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999137469086219	WITHOUT_CLASSIFICATION	8.625309137811661E-5	IMPLEMENTATION
// Equivalent of Data_Get_Struct // This will first check that the object in question is actually a T_DATA equivalent.	WITHOUT_CLASSIFICATION	0.9999812366721662	WITHOUT_CLASSIFICATION	1.8763327833835396E-5	IMPLEMENTATION
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9997467728107063	WITHOUT_CLASSIFICATION	2.5322718929362756E-4	IMPLEMENTATION
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9997467728107063	WITHOUT_CLASSIFICATION	2.5322718929362756E-4	IMPLEMENTATION
// // INSTANCE VARIABLE API METHODS //	WITHOUT_CLASSIFICATION	0.9996754306910777	WITHOUT_CLASSIFICATION	3.245693089224093E-4	IMPLEMENTATION
// Struct methods	WITHOUT_CLASSIFICATION	0.9996427482403523	WITHOUT_CLASSIFICATION	3.572517596478435E-4	IMPLEMENTATION
//runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);	WITHOUT_CLASSIFICATION	0.9993431421409306	WITHOUT_CLASSIFICATION	6.56857859069395E-4	IMPLEMENTATION
// define access methods.	WITHOUT_CLASSIFICATION	0.9997094763261445	WITHOUT_CLASSIFICATION	2.9052367385557756E-4	IMPLEMENTATION
// if we are storing a name as well, index is one too high for values	WITHOUT_CLASSIFICATION	0.999999453153326	WITHOUT_CLASSIFICATION	5.468466740862536E-7	IMPLEMENTATION
// Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999474873302596	WITHOUT_CLASSIFICATION	5.2512669740422383E-5	IMPLEMENTATION
// For binding purposes on the newly created struct types	WITHOUT_CLASSIFICATION	0.9979174109973032	WITHOUT_CLASSIFICATION	0.002082589002696682	IMPLEMENTATION
// OBJ_INFECT        	WITHOUT_CLASSIFICATION	0.9997877334300682	WITHOUT_CLASSIFICATION	2.1226656993181153E-4	IMPLEMENTATION
// These call* assume ThreadContext = receiver.getRuntime().getCurrentContext()	WITHOUT_CLASSIFICATION	0.9995546066320984	WITHOUT_CLASSIFICATION	4.45393367901603E-4	IMPLEMENTATION
// Execute iterateMethod again.	WITHOUT_CLASSIFICATION	0.9998619185761439	WITHOUT_CLASSIFICATION	1.3808142385614774E-4	IMPLEMENTATION
/*     * @param nv number of times to cycle or -1 to cycle indefinitely     */	WITHOUT_CLASSIFICATION	0.9999959851067486	WITHOUT_CLASSIFICATION	4.014893251395885E-6	IMPLEMENTATION
// Atomic ?	WITHOUT_CLASSIFICATION	0.9992591813668483	WITHOUT_CLASSIFICATION	7.408186331517688E-4	IMPLEMENTATION
// Atomic ?	WITHOUT_CLASSIFICATION	0.9992591813668483	WITHOUT_CLASSIFICATION	7.408186331517688E-4	IMPLEMENTATION
// MUST NOT be used across threads	WITHOUT_CLASSIFICATION	0.9999026253707183	WITHOUT_CLASSIFICATION	9.737462928169962E-5	IMPLEMENTATION
// superClass may be null.	WITHOUT_CLASSIFICATION	0.9998746983469825	WITHOUT_CLASSIFICATION	1.2530165301751262E-4	IMPLEMENTATION
// Containing class...The parent of Object is null. Object should always be last in chain.	WITHOUT_CLASSIFICATION	0.9999909018135875	WITHOUT_CLASSIFICATION	9.098186412569723E-6	IMPLEMENTATION
// ClassId is the name of the class/module sans where it is located. // If it is null, then it an anonymous class.	WITHOUT_CLASSIFICATION	0.9999744395518319	WITHOUT_CLASSIFICATION	2.5560448168157722E-5	IMPLEMENTATION
// ClassProviders return Java class/module (in #defineOrGetClassUnder and // #defineOrGetModuleUnder) when class/module is opened using colon syntax. 	WITHOUT_CLASSIFICATION	0.9999659679129019	WITHOUT_CLASSIFICATION	3.403208709812193E-5	IMPLEMENTATION
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999753995778108	WITHOUT_CLASSIFICATION	2.460042218916571E-5	IMPLEMENTATION
// Make sure the module we include does not already exist	WITHOUT_CLASSIFICATION	0.9982640562561591	WITHOUT_CLASSIFICATION	0.0017359437438408925	IMPLEMENTATION
// MRI checks all types first:	WITHOUT_CLASSIFICATION	0.9995987919778758	WITHOUT_CLASSIFICATION	4.0120802212411576E-4	IMPLEMENTATION
// we need full traces, use default (slow) populator	WITHOUT_CLASSIFICATION	0.9992380590432904	WITHOUT_CLASSIFICATION	7.6194095670955E-4	IMPLEMENTATION
// module/singleton methods are all defined public	WITHOUT_CLASSIFICATION	0.9999932881450526	WITHOUT_CLASSIFICATION	6.71185494735764E-6	IMPLEMENTATION
// See if module is in chain...Cannot match against itself so start at superClass.	WITHOUT_CLASSIFICATION	0.999999875213115	WITHOUT_CLASSIFICATION	1.2478688505402768E-7	IMPLEMENTATION
// We can safely reference methods here instead of doing getMethods() since if we // are adding we are not using a IncludedModuleWrapper.	WITHOUT_CLASSIFICATION	0.9999863172439508	WITHOUT_CLASSIFICATION	1.3682756049253348E-5	IMPLEMENTATION
// we grab serial number first; the worst that will happen is we cache a later // update with an earlier serial number, which would just flush anyway	WITHOUT_CLASSIFICATION	0.9997964649055268	WITHOUT_CLASSIFICATION	2.0353509447317724E-4	IMPLEMENTATION
// update all hierarchies into which this module has been included	WITHOUT_CLASSIFICATION	0.99940430023612	WITHOUT_CLASSIFICATION	5.956997638799802E-4	IMPLEMENTATION
// This method is intended only for defining new classes in Ruby code, // so it uses the allocator of the specified superclass or default to // the Object allocator. It should NOT be used to define classes that require a native allocator.	WITHOUT_CLASSIFICATION	0.9999916041490686	WITHOUT_CLASSIFICATION	8.395850931453808E-6	IMPLEMENTATION
// need to skip IncludedModuleWrappers	WITHOUT_CLASSIFICATION	0.9967825877619386	WITHOUT_CLASSIFICATION	0.003217412238061408	IMPLEMENTATION
// superClazz = null;	WITHOUT_CLASSIFICATION	0.9997248311475161	WITHOUT_CLASSIFICATION	2.7516885248391685E-4	IMPLEMENTATION
// reopen a java class	WITHOUT_CLASSIFICATION	0.9999436906860842	WITHOUT_CLASSIFICATION	5.630931391588478E-5	IMPLEMENTATION
// This method is intended only for defining new modules in Ruby code	WITHOUT_CLASSIFICATION	0.9999293452019542	WITHOUT_CLASSIFICATION	7.065479804591221E-5	IMPLEMENTATION
// reopen a java module	WITHOUT_CLASSIFICATION	0.9998860191674948	WITHOUT_CLASSIFICATION	1.1398083250527169E-4	IMPLEMENTATION
//FIXME warning	WITHOUT_CLASSIFICATION	0.9968940235192925	WITHOUT_CLASSIFICATION	0.0031059764807076498	IMPLEMENTATION
// FIXME warning	WITHOUT_CLASSIFICATION	0.9991569316374996	WITHOUT_CLASSIFICATION	8.430683625002863E-4	IMPLEMENTATION
// a normal block passed to define_method changes to do arity checking; make it a lambda	WITHOUT_CLASSIFICATION	0.9835667183965621	WITHOUT_CLASSIFICATION	0.01643328160343795	IMPLEMENTATION
// for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope	WITHOUT_CLASSIFICATION	0.9999897311601756	WITHOUT_CLASSIFICATION	1.0268839824377642E-5	IMPLEMENTATION
// just using required is broken...but no more broken than before zsuper refactoring	WITHOUT_CLASSIFICATION	0.9999096932849085	WITHOUT_CLASSIFICATION	9.030671509148887E-5	IMPLEMENTATION
// class and module bodies default to public, so make the block's visibility public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999827913745176	WITHOUT_CLASSIFICATION	1.7208625482416378E-5	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999936061265416	WITHOUT_CLASSIFICATION	6.393873458373529E-6	IMPLEMENTATION
// MRI error message says Class, even though Module is ok 	WITHOUT_CLASSIFICATION	0.9995950671935803	WITHOUT_CLASSIFICATION	4.049328064197025E-4	IMPLEMENTATION
// scan class hierarchy for module	WITHOUT_CLASSIFICATION	0.9999648325556902	WITHOUT_CLASSIFICATION	3.516744430968698E-5	IMPLEMENTATION
/* Module class methods */	WITHOUT_CLASSIFICATION	0.9999928634404655	WITHOUT_CLASSIFICATION	7.136559534505691E-6	IMPLEMENTATION
// Note: we change current frames visibility here because the methods which call // this method are all "fast" (e.g. they do not created their own frame).	WITHOUT_CLASSIFICATION	0.9520840967223991	WITHOUT_CLASSIFICATION	0.047915903277600896	IMPLEMENTATION
// next in hierarchy is an included version of the module we're attempting, // so we skip including it	WITHOUT_CLASSIFICATION	0.9999826016214056	WITHOUT_CLASSIFICATION	1.7398378594456788E-5	IMPLEMENTATION
// if we haven't encountered a real superclass, use the found module as the new inclusion point	WITHOUT_CLASSIFICATION	0.9998642220509799	WITHOUT_CLASSIFICATION	1.3577794902007467E-4	IMPLEMENTATION
// build a list of all modules to consider for inclusion	WITHOUT_CLASSIFICATION	0.9999744184477679	WITHOUT_CLASSIFICATION	2.558155223207354E-5	IMPLEMENTATION
// if the insertion point is a class, update subclass lists	WITHOUT_CLASSIFICATION	0.9999943002906144	WITHOUT_CLASSIFICATION	5.699709385537727E-6	IMPLEMENTATION
// if there's a non-null superclass, we're including into a normal class hierarchy; // update subclass relationships to avoid stale parent/child relationships	WITHOUT_CLASSIFICATION	0.9999869605543629	WITHOUT_CLASSIFICATION	1.3039445637118022E-5	IMPLEMENTATION
// ////////////////// CLASS VARIABLE RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9997850673714006	WITHOUT_CLASSIFICATION	2.1493262859941054E-4	IMPLEMENTATION
// ////////////////// CONSTANT RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9997850673714006	WITHOUT_CLASSIFICATION	2.1493262859941054E-4	IMPLEMENTATION
// Note: includes part of fix for JRUBY-1339	WITHOUT_CLASSIFICATION	0.9999404338334681	WITHOUT_CLASSIFICATION	5.956616653178748E-5	IMPLEMENTATION
// ////////////////// CLASS VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9997245110694687	WITHOUT_CLASSIFICATION	2.7548893053131016E-4	IMPLEMENTATION
// Wrong Parameter ?	WITHOUT_CLASSIFICATION	0.9992598473516513	WITHOUT_CLASSIFICATION	7.401526483487438E-4	IMPLEMENTATION
// not actually called anywhere (all known uses call the fast version)	WITHOUT_CLASSIFICATION	0.9990893737103066	WITHOUT_CLASSIFICATION	9.106262896934628E-4	IMPLEMENTATION
// Not that is loaded loop around to resolve it next pass	WITHOUT_CLASSIFICATION	0.9971339298155647	WITHOUT_CLASSIFICATION	0.0028660701844352796	IMPLEMENTATION
// if adding a module under a constant name, set that module's basename to the constant name	WITHOUT_CLASSIFICATION	0.9998774276906383	WITHOUT_CLASSIFICATION	1.2257230936163913E-4	IMPLEMENTATION
// Fix for JRUBY-1339 - search hierarchy for constant	WITHOUT_CLASSIFICATION	0.9998763545405478	WITHOUT_CLASSIFICATION	1.236454594521462E-4	IMPLEMENTATION
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9998864406198154	WITHOUT_CLASSIFICATION	1.135593801847354E-4	IMPLEMENTATION
// removes and returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999296984214701	WITHOUT_CLASSIFICATION	7.030157852997165E-5	IMPLEMENTATION
// we can't rename a file while it's open in windows	WITHOUT_CLASSIFICATION	0.9999264238506478	WITHOUT_CLASSIFICATION	7.357614935228452E-5	IMPLEMENTATION
//reopen	WITHOUT_CLASSIFICATION	0.9998920580249556	WITHOUT_CLASSIFICATION	1.0794197504441973E-4	IMPLEMENTATION
// ARGF methods	WITHOUT_CLASSIFICATION	0.9996427482403523	WITHOUT_CLASSIFICATION	3.572517596478435E-4	IMPLEMENTATION
//         data.currentFile.callMethod(context, "lineno=", line);	WITHOUT_CLASSIFICATION	0.9998279270919643	WITHOUT_CLASSIFICATION	1.7207290803563613E-4	IMPLEMENTATION
// one optional, one required args	WITHOUT_CLASSIFICATION	0.999340550611487	WITHOUT_CLASSIFICATION	6.594493885130362E-4	IMPLEMENTATION
// one optional and no required args	WITHOUT_CLASSIFICATION	0.9994487555597958	WITHOUT_CLASSIFICATION	5.512444402041792E-4	IMPLEMENTATION
// try to get errno value out of the class	WITHOUT_CLASSIFICATION	0.999975665100632	WITHOUT_CLASSIFICATION	2.4334899368054166E-5	IMPLEMENTATION
// we got a valid errno value	WITHOUT_CLASSIFICATION	0.999951423164814	WITHOUT_CLASSIFICATION	4.857683518596108E-5	IMPLEMENTATION
// Ensure we're not running on GCJ, since it's not supported and leads to weird errors	WITHOUT_CLASSIFICATION	0.999047108086339	WITHOUT_CLASSIFICATION	9.528919136611277E-4	IMPLEMENTATION
// print out as a nice Ruby backtrace	WITHOUT_CLASSIFICATION	0.9999222464764914	WITHOUT_CLASSIFICATION	7.775352350859468E-5	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.999857310114494	WITHOUT_CLASSIFICATION	1.4268988550605625E-4	IMPLEMENTATION
// set thread context JRuby classloader here, for the main thread	WITHOUT_CLASSIFICATION	0.9995432529750348	WITHOUT_CLASSIFICATION	4.5674702496522473E-4	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9995514768671837	WITHOUT_CLASSIFICATION	4.4852313281634184E-4	IMPLEMENTATION
// no script to run, return success below	WITHOUT_CLASSIFICATION	0.9998398246260067	WITHOUT_CLASSIFICATION	1.6017537399323526E-4	IMPLEMENTATION
// Skip /usr/bin/env if it's first	WITHOUT_CLASSIFICATION	0.9998885949384445	WITHOUT_CLASSIFICATION	1.1140506155542178E-4	IMPLEMENTATION
// Skip any assignments if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999978061551286	WITHOUT_CLASSIFICATION	2.1938448714933733E-6	IMPLEMENTATION
// Skip any commandline args if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.999997953919094	WITHOUT_CLASSIFICATION	2.04608090604512E-6	IMPLEMENTATION
// ignore error	WITHOUT_CLASSIFICATION	0.9983943851434087	WITHOUT_CLASSIFICATION	0.001605614856591316	IMPLEMENTATION
// ////////////////// COMMON CONSTANT / CVAR METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9998618173784836	WITHOUT_CLASSIFICATION	1.3818262151639758E-4	IMPLEMENTATION
// ////////////////// INTERNAL MODULE VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9997245110694687	WITHOUT_CLASSIFICATION	2.7548893053131016E-4	IMPLEMENTATION
// ////////////////// LOW-LEVEL CONSTANT INTERFACE //////////////// // // fetch/store/list constants for this module //	WITHOUT_CLASSIFICATION	0.9999210540180478	WITHOUT_CLASSIFICATION	7.89459819521976E-5	IMPLEMENTATION
// odd	WITHOUT_CLASSIFICATION	0.999970764908297	WITHOUT_CLASSIFICATION	2.9235091703083797E-5	IMPLEMENTATION
// JRubyClient	WITHOUT_CLASSIFICATION	0.9990652123136763	WITHOUT_CLASSIFICATION	9.347876863236658E-4	IMPLEMENTATION
/*     * x = mantissa * 2 ** exponent     *     * Where mantissa is in the range of [.5, 1)     *     */	WITHOUT_CLASSIFICATION	0.9999993702645062	WITHOUT_CLASSIFICATION	6.29735493673312E-7	IMPLEMENTATION
// Make mantissa same sign so we only have one code path.	WITHOUT_CLASSIFICATION	0.9993873370222152	WITHOUT_CLASSIFICATION	6.126629777849473E-4	IMPLEMENTATION
// Increase value to hit lower range.	WITHOUT_CLASSIFICATION	0.9998870388365106	WITHOUT_CLASSIFICATION	1.129611634893226E-4	IMPLEMENTATION
/*     * r = x * 2 ** y     */	WITHOUT_CLASSIFICATION	0.9999945046765814	WITHOUT_CLASSIFICATION	5.495323418628373E-6	IMPLEMENTATION
/*  0! */	WITHOUT_CLASSIFICATION	0.9999967718644651	WITHOUT_CLASSIFICATION	3.228135535016978E-6	IMPLEMENTATION
/*  1! */	WITHOUT_CLASSIFICATION	0.9999967718644651	WITHOUT_CLASSIFICATION	3.228135535016978E-6	IMPLEMENTATION
/*  2! */	WITHOUT_CLASSIFICATION	0.9999967718644651	WITHOUT_CLASSIFICATION	3.228135535016978E-6	IMPLEMENTATION
/*  3! */	WITHOUT_CLASSIFICATION	0.9999967718644651	WITHOUT_CLASSIFICATION	3.228135535016978E-6	IMPLEMENTATION
/*  4! */	WITHOUT_CLASSIFICATION	0.9999967718644651	WITHOUT_CLASSIFICATION	3.228135535016978E-6	IMPLEMENTATION
/*  5! */	WITHOUT_CLASSIFICATION	0.9999967718644651	WITHOUT_CLASSIFICATION	3.228135535016978E-6	IMPLEMENTATION
/*  6! */	WITHOUT_CLASSIFICATION	0.9999967718644651	WITHOUT_CLASSIFICATION	3.228135535016978E-6	IMPLEMENTATION
/*  7! */	WITHOUT_CLASSIFICATION	0.9999967718644651	WITHOUT_CLASSIFICATION	3.228135535016978E-6	IMPLEMENTATION
/*  8! */	WITHOUT_CLASSIFICATION	0.9999967718644651	WITHOUT_CLASSIFICATION	3.228135535016978E-6	IMPLEMENTATION
/*  9! */	WITHOUT_CLASSIFICATION	0.9999967718644651	WITHOUT_CLASSIFICATION	3.228135535016978E-6	IMPLEMENTATION
/* 11! */	WITHOUT_CLASSIFICATION	0.999995249009219	WITHOUT_CLASSIFICATION	4.75099078097611E-6	IMPLEMENTATION
/* 12! */	WITHOUT_CLASSIFICATION	0.999995249009219	WITHOUT_CLASSIFICATION	4.75099078097611E-6	IMPLEMENTATION
/* 13! */	WITHOUT_CLASSIFICATION	0.999995249009219	WITHOUT_CLASSIFICATION	4.75099078097611E-6	IMPLEMENTATION
/* 15! */	WITHOUT_CLASSIFICATION	0.999995249009219	WITHOUT_CLASSIFICATION	4.75099078097611E-6	IMPLEMENTATION
/* 16! */	WITHOUT_CLASSIFICATION	0.999995249009219	WITHOUT_CLASSIFICATION	4.75099078097611E-6	IMPLEMENTATION
/* 17! */	WITHOUT_CLASSIFICATION	0.999995249009219	WITHOUT_CLASSIFICATION	4.75099078097611E-6	IMPLEMENTATION
/* 19! */	WITHOUT_CLASSIFICATION	0.999995249009219	WITHOUT_CLASSIFICATION	4.75099078097611E-6	IMPLEMENTATION
/* 20! */	WITHOUT_CLASSIFICATION	0.999995249009219	WITHOUT_CLASSIFICATION	4.75099078097611E-6	IMPLEMENTATION
/* 21! */	WITHOUT_CLASSIFICATION	0.999995249009219	WITHOUT_CLASSIFICATION	4.75099078097611E-6	IMPLEMENTATION
// Static constants	WITHOUT_CLASSIFICATION	0.9995273658878672	WITHOUT_CLASSIFICATION	4.726341121327816E-4	IMPLEMENTATION
// Clean-up string representation so that it could be understood // by Java's BigDecimal. Not terribly efficient for now. // 1. MRI allows d and D as exponent separators	WITHOUT_CLASSIFICATION	0.9999778825611099	WITHOUT_CLASSIFICATION	2.2117438890072473E-5	IMPLEMENTATION
// 2. MRI allows underscores anywhere	WITHOUT_CLASSIFICATION	0.9998059917933991	WITHOUT_CLASSIFICATION	1.9400820660075594E-4	IMPLEMENTATION
// 3. MRI ignores the trailing junk	WITHOUT_CLASSIFICATION	0.9997064297279518	WITHOUT_CLASSIFICATION	2.935702720482468E-4	IMPLEMENTATION
// MRI behavior: -0 and +0 are two different things	WITHOUT_CLASSIFICATION	0.9996378017722005	WITHOUT_CLASSIFICATION	3.621982277994856E-4	IMPLEMENTATION
// Java and MRI definitions of modulo are different.	WITHOUT_CLASSIFICATION	0.9999677922974206	WITHOUT_CLASSIFICATION	3.2207702579444904E-5	IMPLEMENTATION
// Java and MRI definitions of remainder are the same.	WITHOUT_CLASSIFICATION	0.9999538918089642	WITHOUT_CLASSIFICATION	4.610819103582261E-5	IMPLEMENTATION
// Note: MRI has a very non-trivial way of calculating the precision, // so we use very simple approximation here:	WITHOUT_CLASSIFICATION	0.9996084958554619	WITHOUT_CLASSIFICATION	3.915041445380821E-4	IMPLEMENTATION
// Iteration variables, for the square root x and the reciprocal v // initial x:  x0 ~ sqrt() // initial v:  v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999553820906653	WITHOUT_CLASSIFICATION	4.461790933477885E-5	IMPLEMENTATION
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9992106594520854	WITHOUT_CLASSIFICATION	7.893405479145108E-4	IMPLEMENTATION
// TODO: why this: .setResult();	WITHOUT_CLASSIFICATION	0.8866256943446408	IMPLEMENTATION	0.1133743056553592	WITHOUT_CLASSIFICATION
// integer division	WITHOUT_CLASSIFICATION	0.9990822477255856	WITHOUT_CLASSIFICATION	9.177522744143814E-4	IMPLEMENTATION
// MRI behavior: "If digits is 0, the result is the same as the / operator."	WITHOUT_CLASSIFICATION	0.9999725180180796	WITHOUT_CLASSIFICATION	2.74819819203344E-5	IMPLEMENTATION
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9997877334300682	WITHOUT_CLASSIFICATION	2.1226656993181153E-4	IMPLEMENTATION
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9997877334300682	WITHOUT_CLASSIFICATION	2.1226656993181153E-4	IMPLEMENTATION
// Java and MRI definitions of divmod are different.        	WITHOUT_CLASSIFICATION	0.9999677922974206	WITHOUT_CLASSIFICATION	3.2207702579444904E-5	IMPLEMENTATION
// JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it	WITHOUT_CLASSIFICATION	0.9943187143880179	WITHOUT_CLASSIFICATION	0.005681285611982097	IMPLEMENTATION
// shift the decimal point just to the right of the digit to be rounded to (divide by 10**(abs(scale))) // -1 -> 10's digit, -2 -> 100's digit, etc.	WITHOUT_CLASSIFICATION	0.9999926040184269	WITHOUT_CLASSIFICATION	7.395981573161027E-6	IMPLEMENTATION
// ...round to that digit	WITHOUT_CLASSIFICATION	0.9995052729096886	WITHOUT_CLASSIFICATION	4.947270903114512E-4	IMPLEMENTATION
// ...and shift the result back to the left (multiply by 10**(abs(scale)))	WITHOUT_CLASSIFICATION	0.9997224571100874	WITHOUT_CLASSIFICATION	2.7754288991249486E-4	IMPLEMENTATION
//this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are	WITHOUT_CLASSIFICATION	0.9995379616772224	WITHOUT_CLASSIFICATION	4.620383227775289E-4	IMPLEMENTATION
// sign	WITHOUT_CLASSIFICATION	0.999970764908297	WITHOUT_CLASSIFICATION	2.9235091703083797E-5	IMPLEMENTATION
// significant digits and exponent	WITHOUT_CLASSIFICATION	0.9998625162479499	WITHOUT_CLASSIFICATION	1.374837520501216E-4	IMPLEMENTATION
// normalize the value	WITHOUT_CLASSIFICATION	0.9998644890552952	WITHOUT_CLASSIFICATION	1.3551094470480015E-4	IMPLEMENTATION
// base	WITHOUT_CLASSIFICATION	0.9999891319010196	WITHOUT_CLASSIFICATION	1.0868098980505314E-5	IMPLEMENTATION
// NOTE: MRI's sqrt precision is limited by 100, // but we allow values more than 100.	WITHOUT_CLASSIFICATION	0.9999681086547418	WITHOUT_CLASSIFICATION	3.189134525806192E-5	IMPLEMENTATION
// just in case, add a bit of extra precision	WITHOUT_CLASSIFICATION	0.9999983853147258	WITHOUT_CLASSIFICATION	1.6146852742119009E-6	IMPLEMENTATION
// eh?!	WITHOUT_CLASSIFICATION	0.999970764908297	WITHOUT_CLASSIFICATION	2.9235091703083797E-5	IMPLEMENTATION
// Note: #fix has only no-arg form, but truncate allows optional parameter.	WITHOUT_CLASSIFICATION	0.9999712903236392	WITHOUT_CLASSIFICATION	2.870967636085279E-5	IMPLEMENTATION
// General number and precision checking	WITHOUT_CLASSIFICATION	0.9998585163810212	WITHOUT_CLASSIFICATION	1.414836189787918E-4	IMPLEMENTATION
// the requested precision	WITHOUT_CLASSIFICATION	0.9998374206939061	WITHOUT_CLASSIFICATION	1.6257930609388078E-4	IMPLEMENTATION
// Proc class	WITHOUT_CLASSIFICATION	0.9994935485359389	WITHOUT_CLASSIFICATION	5.064514640612162E-4	IMPLEMENTATION
//.append("  -x[directory]   strip off text before #!ruby line and perhaps cd to directory\n")	WITHOUT_CLASSIFICATION	0.9999235891261117	WITHOUT_CLASSIFICATION	7.641087388826043E-5	IMPLEMENTATION
// even shift.. // ..floors to 62 or 63 bit BigInteger	WITHOUT_CLASSIFICATION	0.9997487400949285	WITHOUT_CLASSIFICATION	2.5125990507136615E-4	IMPLEMENTATION
// 5 -> 2, -5 -> -3 need half a scale more..	WITHOUT_CLASSIFICATION	0.9999519873703769	WITHOUT_CLASSIFICATION	4.8012629623008116E-5	IMPLEMENTATION
// ..where 100 -> 10 shifts the scale	WITHOUT_CLASSIFICATION	0.9999791664660614	WITHOUT_CLASSIFICATION	2.0833533938487237E-5	IMPLEMENTATION
// Initial x - use double root - multiply by halfBack to unshift - set new scale	WITHOUT_CLASSIFICATION	0.9999416516165008	WITHOUT_CLASSIFICATION	5.834838349919741E-5	IMPLEMENTATION
// x0 ~ sqrt()	WITHOUT_CLASSIFICATION	0.9990655372417471	WITHOUT_CLASSIFICATION	9.344627582529168E-4	IMPLEMENTATION
// for prec 15 root x0 must surely be OK // return small prec roots without iterations	WITHOUT_CLASSIFICATION	0.9997908756868886	WITHOUT_CLASSIFICATION	2.0912431311130418E-4	IMPLEMENTATION
// Initial v - the reciprocal // v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9993812641577765	WITHOUT_CLASSIFICATION	6.187358422235587E-4	IMPLEMENTATION
// Collect iteration precisions beforehand	WITHOUT_CLASSIFICATION	0.9997788853649379	WITHOUT_CLASSIFICATION	2.2111463506222355E-4	IMPLEMENTATION
// assume nInit = 16 <= prec	WITHOUT_CLASSIFICATION	0.9997702644519884	WITHOUT_CLASSIFICATION	2.2973554801168758E-4	IMPLEMENTATION
// The loop of "Square Root by Coupled Newton Iteration"	WITHOUT_CLASSIFICATION	0.9999632620045857	WITHOUT_CLASSIFICATION	3.673799541427674E-5	IMPLEMENTATION
// Increase precision - next iteration supplies n exact digits	WITHOUT_CLASSIFICATION	0.9990523773542874	WITHOUT_CLASSIFICATION	9.476226457124553E-4	IMPLEMENTATION
// Next x                                        // e = d - x^2	WITHOUT_CLASSIFICATION	0.9997486087448538	WITHOUT_CLASSIFICATION	2.513912551462067E-4	IMPLEMENTATION
// x += e*v     ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999506445991541	WITHOUT_CLASSIFICATION	4.935540084591729E-5	IMPLEMENTATION
// root x is ready!	WITHOUT_CLASSIFICATION	0.9995094247990362	WITHOUT_CLASSIFICATION	4.905752009637951E-4	IMPLEMENTATION
// Next v                                        // g = 1 - 2*x*v	WITHOUT_CLASSIFICATION	0.9995628064868334	WITHOUT_CLASSIFICATION	4.371935131666398E-4	IMPLEMENTATION
// v += g*v     ~ 1/2/sqrt()	WITHOUT_CLASSIFICATION	0.9999281501097107	WITHOUT_CLASSIFICATION	7.184989028926376E-5	IMPLEMENTATION
// RubyBigdecimal	WITHOUT_CLASSIFICATION	0.9990652123136763	WITHOUT_CLASSIFICATION	9.347876863236658E-4	IMPLEMENTATION
// c: bind_eval	WITHOUT_CLASSIFICATION	0.9990652123136763	WITHOUT_CLASSIFICATION	9.347876863236658E-4	IMPLEMENTATION
/*  ================     *  Module Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999860001405421	WITHOUT_CLASSIFICATION	1.3999859457983693E-5	IMPLEMENTATION
// from CommandlineParser	WITHOUT_CLASSIFICATION	0.999954677558507	WITHOUT_CLASSIFICATION	4.5322441493041884E-5	IMPLEMENTATION
// This property is a Boolean, to allow three values, so it can match MRI's nil, false and true	WITHOUT_CLASSIFICATION	0.9997821691512844	WITHOUT_CLASSIFICATION	2.178308487157559E-4	IMPLEMENTATION
// default ClassCache using jitMax as a soft upper bound	WITHOUT_CLASSIFICATION	0.9999866276309612	WITHOUT_CLASSIFICATION	1.3372369038695871E-5	IMPLEMENTATION
// Until we get a little more solid on 1.9 support we will only run interpreted mode	WITHOUT_CLASSIFICATION	0.9600466012147663	WITHOUT_CLASSIFICATION	0.039953398785233726	IMPLEMENTATION
// Setting the loader needs to reset the class cache	WITHOUT_CLASSIFICATION	0.9959274408722555	WITHOUT_CLASSIFICATION	0.004072559127744521	IMPLEMENTATION
// try the normal property first	WITHOUT_CLASSIFICATION	0.9995576732922629	WITHOUT_CLASSIFICATION	4.4232670773721464E-4	IMPLEMENTATION
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999419632909046	WITHOUT_CLASSIFICATION	5.803670909556361E-5	IMPLEMENTATION
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999419632909046	WITHOUT_CLASSIFICATION	5.803670909556361E-5	IMPLEMENTATION
// try loading from classloader resources	WITHOUT_CLASSIFICATION	0.9998896582191462	WITHOUT_CLASSIFICATION	1.1034178085384342E-4	IMPLEMENTATION
// otherwise fall back on system temp location	WITHOUT_CLASSIFICATION	0.9642407666376954	WITHOUT_CLASSIFICATION	0.03575923336230466	IMPLEMENTATION
// We require the home directory to be absolute	WITHOUT_CLASSIFICATION	0.999957541847152	WITHOUT_CLASSIFICATION	4.2458152848054904E-5	IMPLEMENTATION
//consume the file name	WITHOUT_CLASSIFICATION	0.997731600139218	WITHOUT_CLASSIFICATION	0.002268399860782009	IMPLEMENTATION
// Specify something that can't separate	WITHOUT_CLASSIFICATION	0.9998014561867141	WITHOUT_CLASSIFICATION	1.985438132860291E-4	IMPLEMENTATION
// try cwd first	WITHOUT_CLASSIFICATION	0.9985239892880379	WITHOUT_CLASSIFICATION	0.0014760107119621997	IMPLEMENTATION
// ruby interpreter compatibilty // Usage: ruby [switches] [--] [programfile] [arguments])	WITHOUT_CLASSIFICATION	0.9997467728107063	WITHOUT_CLASSIFICATION	2.5322718929362756E-4	IMPLEMENTATION
// KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 // if Ruby 2.0 encoding pragmas are implemented, this will need to change	WITHOUT_CLASSIFICATION	0.9999797893876052	WITHOUT_CLASSIFICATION	2.0210612394738745E-5	IMPLEMENTATION
// @JRubyMethod(name = "complex?")	WITHOUT_CLASSIFICATION	0.9996571838951194	WITHOUT_CLASSIFICATION	3.428161048805715E-4	IMPLEMENTATION
// @JRubyMethod(name = "exact?")	WITHOUT_CLASSIFICATION	0.9996571838951194	WITHOUT_CLASSIFICATION	3.428161048805715E-4	IMPLEMENTATION
// @JRubyMethod(name = "inexact?")	WITHOUT_CLASSIFICATION	0.9996571838951194	WITHOUT_CLASSIFICATION	3.428161048805715E-4	IMPLEMENTATION
// symbol string *must* be interned	WITHOUT_CLASSIFICATION	0.9999901315112012	WITHOUT_CLASSIFICATION	9.868488798791088E-6	IMPLEMENTATION
//        assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";	WITHOUT_CLASSIFICATION	0.9980564087939726	WITHOUT_CLASSIFICATION	0.0019435912060274802	IMPLEMENTATION
/* Symbol class methods.     *      */	WITHOUT_CLASSIFICATION	0.9999881922222087	WITHOUT_CLASSIFICATION	1.1807777791369374E-5	IMPLEMENTATION
// TODO: 1.9 rb_enc_symname_p	WITHOUT_CLASSIFICATION	0.5865372894595964	IMPLEMENTATION	0.41346271054040357	WITHOUT_CLASSIFICATION
// This is needed to unpack stuff	WITHOUT_CLASSIFICATION	0.5804301407726868	WITHOUT_CLASSIFICATION	0.4195698592273131	IMPLEMENTATION
// we already confirmed above that length > 0	WITHOUT_CLASSIFICATION	0.9988777209721343	WITHOUT_CLASSIFICATION	0.0011222790278656223	IMPLEMENTATION
// *must* be power of 2!	WITHOUT_CLASSIFICATION	0.9999361254903756	WITHOUT_CLASSIFICATION	6.387450962445847E-5	IMPLEMENTATION
// note all fields are final -- rehash creates new entries when necessary. // as documented in java.util.concurrent.ConcurrentHashMap.java, that will // statistically affect only a small percentage (< 20%) of entries for a given rehash.	WITHOUT_CLASSIFICATION	0.9999915390073707	WITHOUT_CLASSIFICATION	8.460992629336964E-6	IMPLEMENTATION
//            assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9980564087939726	WITHOUT_CLASSIFICATION	0.0019435912060274802	IMPLEMENTATION
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9998486627177889	WITHOUT_CLASSIFICATION	1.5133728221113806E-4	IMPLEMENTATION
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9998486627177889	WITHOUT_CLASSIFICATION	1.5133728221113806E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9990652123136763	WITHOUT_CLASSIFICATION	9.347876863236658E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9990652123136763	WITHOUT_CLASSIFICATION	9.347876863236658E-4	IMPLEMENTATION
// backwards-compatibility, but threadsafe now	WITHOUT_CLASSIFICATION	0.9999549586216306	WITHOUT_CLASSIFICATION	4.504137836949985E-5	IMPLEMENTATION
//  Single node on list	WITHOUT_CLASSIFICATION	0.9995603101527855	WITHOUT_CLASSIFICATION	4.396898472145045E-4	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999019671606303	WITHOUT_CLASSIFICATION	9.803283936966692E-5	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9995986238106177	WITHOUT_CLASSIFICATION	4.0137618938225234E-4	IMPLEMENTATION
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9932403007078724	WITHOUT_CLASSIFICATION	0.006759699292127625	IMPLEMENTATION
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9989227380098039	WITHOUT_CLASSIFICATION	0.001077261990196076	IMPLEMENTATION
// not so backwards-compatible here, but no one should have been // calling this anyway.	WITHOUT_CLASSIFICATION	0.9974819829769833	WITHOUT_CLASSIFICATION	0.002518017023016738	IMPLEMENTATION
// Profile	WITHOUT_CLASSIFICATION	0.9999737751715473	WITHOUT_CLASSIFICATION	2.622482845275593E-5	IMPLEMENTATION
//static private final String TRANSLIT = "//translit";	WITHOUT_CLASSIFICATION	0.998689491184309	WITHOUT_CLASSIFICATION	0.0013105088156909756	IMPLEMENTATION
// treat start and end as start...end for end >= 0, start..end for end < 0	WITHOUT_CLASSIFICATION	0.9998094213502239	WITHOUT_CLASSIFICATION	1.905786497760324E-4	IMPLEMENTATION
// invalid ranges result in an empty string	WITHOUT_CLASSIFICATION	0.9999999004412664	WITHOUT_CLASSIFICATION	9.955873350599788E-8	IMPLEMENTATION
// Methods of the Nil Class (nil_*):	WITHOUT_CLASSIFICATION	0.9999430211203025	WITHOUT_CLASSIFICATION	5.697887969737968E-5	IMPLEMENTATION
// Has read/write been closed or is it still open for business	WITHOUT_CLASSIFICATION	0.9986243192754081	WITHOUT_CLASSIFICATION	0.0013756807245918778	IMPLEMENTATION
// Support IO modes that this object was opened with	WITHOUT_CLASSIFICATION	0.9999121680515825	WITHOUT_CLASSIFICATION	8.783194841762592E-5	IMPLEMENTATION
// must let original string know we're modifying, so shared buffers aren't damaged	WITHOUT_CLASSIFICATION	0.9997755231316543	WITHOUT_CLASSIFICATION	2.2447686834582223E-4	IMPLEMENTATION
// reset the state	WITHOUT_CLASSIFICATION	0.9973876181314691	WITHOUT_CLASSIFICATION	0.0026123818685309243	IMPLEMENTATION
// Tainting here if we ever want it. (secure 4)	WITHOUT_CLASSIFICATION	0.9995146653425079	WITHOUT_CLASSIFICATION	4.8533465749205063E-4	IMPLEMENTATION
// rb_match_busy	WITHOUT_CLASSIFICATION	0.9990652123136763	WITHOUT_CLASSIFICATION	9.347876863236658E-4	IMPLEMENTATION
//str is frozen	WITHOUT_CLASSIFICATION	0.99760402336362	WITHOUT_CLASSIFICATION	0.0023959766363800855	IMPLEMENTATION
// MRI also does a pointer comparison here	WITHOUT_CLASSIFICATION	0.9999479011369509	WITHOUT_CLASSIFICATION	5.2098863049192335E-5	IMPLEMENTATION
// JRubyServer	WITHOUT_CLASSIFICATION	0.9990652123136763	WITHOUT_CLASSIFICATION	9.347876863236658E-4	IMPLEMENTATION
// Class.allocate object is not allocatable before it is initialized	WITHOUT_CLASSIFICATION	0.9981621572655571	WITHOUT_CLASSIFICATION	0.00183784273444286	IMPLEMENTATION
// boot the Object class 	WITHOUT_CLASSIFICATION	0.9999305798996839	WITHOUT_CLASSIFICATION	6.942010031606773E-5	IMPLEMENTATION
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999713799326111	WITHOUT_CLASSIFICATION	2.862006738885829E-5	IMPLEMENTATION
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999753995778108	WITHOUT_CLASSIFICATION	2.460042218916571E-5	IMPLEMENTATION
// undo check	WITHOUT_CLASSIFICATION	0.999160920506865	WITHOUT_CLASSIFICATION	8.390794931350984E-4	IMPLEMENTATION
// This is a non-standard method; have we decided to start extending Ruby? //classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));	WITHOUT_CLASSIFICATION	0.9997753296061095	WITHOUT_CLASSIFICATION	2.2467039389039697E-4	IMPLEMENTATION
// boot the Module and Class classes	WITHOUT_CLASSIFICATION	0.9999343460002825	WITHOUT_CLASSIFICATION	6.565399971757207E-5	IMPLEMENTATION
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9987364673204308	WITHOUT_CLASSIFICATION	0.0012635326795691732	IMPLEMENTATION
// use parent's marshal	WITHOUT_CLASSIFICATION	0.999504227924465	WITHOUT_CLASSIFICATION	4.957720755349473E-4	IMPLEMENTATION
// use parent's marshal	WITHOUT_CLASSIFICATION	0.999504227924465	WITHOUT_CLASSIFICATION	4.957720755349473E-4	IMPLEMENTATION
// could be pulled down to RubyClass in future // rb_class_boot	WITHOUT_CLASSIFICATION	0.9999918307963364	WITHOUT_CLASSIFICATION	8.16920366361637E-6	IMPLEMENTATION
// remove us from old superclass's child classes	WITHOUT_CLASSIFICATION	0.999978325631423	WITHOUT_CLASSIFICATION	2.1674368577004196E-5	IMPLEMENTATION
// add us to new superclass's child classes	WITHOUT_CLASSIFICATION	0.9997792031572098	WITHOUT_CLASSIFICATION	2.2079684279019984E-4	IMPLEMENTATION
// update all subclasses	WITHOUT_CLASSIFICATION	0.9999398925069394	WITHOUT_CLASSIFICATION	6.0107493060643894E-5	IMPLEMENTATION
// fields to hold Ruby and RubyClass references	WITHOUT_CLASSIFICATION	0.9996844868104164	WITHOUT_CLASSIFICATION	3.15513189583532E-4	IMPLEMENTATION
// static initializing method	WITHOUT_CLASSIFICATION	0.9971287173278095	WITHOUT_CLASSIFICATION	0.002871282672190496	IMPLEMENTATION
// standard constructor that accepts Ruby, RubyClass	WITHOUT_CLASSIFICATION	0.9997303727072185	WITHOUT_CLASSIFICATION	2.6962729278143374E-4	IMPLEMENTATION
// no-arg constructor using static references to Ruby and RubyClass	WITHOUT_CLASSIFICATION	0.9998754024444473	WITHOUT_CLASSIFICATION	1.2459755555270855E-4	IMPLEMENTATION
// non-signature signature with just IRubyObject	WITHOUT_CLASSIFICATION	0.9999244038054078	WITHOUT_CLASSIFICATION	7.559619459225152E-5	IMPLEMENTATION
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999963605785424	WITHOUT_CLASSIFICATION	3.639421457736156E-6	IMPLEMENTATION
// self // method name	WITHOUT_CLASSIFICATION	0.9965398841514855	WITHOUT_CLASSIFICATION	0.0034601158485143826	IMPLEMENTATION
// the default allocator	WITHOUT_CLASSIFICATION	0.9999561450694576	WITHOUT_CLASSIFICATION	4.38549305423279E-5	IMPLEMENTATION
// Equivalent of T_DATA	WITHOUT_CLASSIFICATION	0.9998838927415382	WITHOUT_CLASSIFICATION	1.1610725846168267E-4	IMPLEMENTATION
// do nothing, leave empty	WITHOUT_CLASSIFICATION	0.9999071058976043	WITHOUT_CLASSIFICATION	9.289410239563611E-5	IMPLEMENTATION
// Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9999184188049804	WITHOUT_CLASSIFICATION	8.158119501954316E-5	IMPLEMENTATION
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999860047334836	WITHOUT_CLASSIFICATION	1.3995266516305264E-5	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9996215024605402	WITHOUT_CLASSIFICATION	3.7849753945978494E-4	IMPLEMENTATION
// Make sure all arguments are modules before calling the callbacks	WITHOUT_CLASSIFICATION	0.9999699044061265	WITHOUT_CLASSIFICATION	3.0095593873482104E-5	IMPLEMENTATION
// MRI extends in order from last to first	WITHOUT_CLASSIFICATION	0.9999934931020921	WITHOUT_CLASSIFICATION	6.506897907927862E-6	IMPLEMENTATION
// NOTE: Serialization is primarily supported for testing purposes, and there is no general // guarantee that serialization will work correctly. Specifically, instance variables pointing // at symbols, threads, modules, classes, and other unserializable types are not detected.	WITHOUT_CLASSIFICATION	0.9998853548131137	WITHOUT_CLASSIFICATION	1.1464518688622723E-4	IMPLEMENTATION
// write out ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9998415647740376	WITHOUT_CLASSIFICATION	1.5843522596232053E-4	IMPLEMENTATION
// rest in ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999626617356482	WITHOUT_CLASSIFICATION	3.733826435181238E-5	IMPLEMENTATION
// 0x3fff_ffff // -0x4000_0000	WITHOUT_CLASSIFICATION	0.9997877334300682	WITHOUT_CLASSIFICATION	2.1226656993181153E-4	IMPLEMENTATION
// a gotcha	WITHOUT_CLASSIFICATION	0.9994284463000966	WITHOUT_CLASSIFICATION	5.71553699903385E-4	IMPLEMENTATION
// Java / and % are not the same as ruby	WITHOUT_CLASSIFICATION	0.9994981890149455	WITHOUT_CLASSIFICATION	5.018109850545634E-4	IMPLEMENTATION
// A gotcha for Long.MIN_VALUE: value = -value	WITHOUT_CLASSIFICATION	0.9998321033310674	WITHOUT_CLASSIFICATION	1.6789666893263843E-4	IMPLEMENTATION
// Piece of mri rb_to_id	WITHOUT_CLASSIFICATION	0.9998838927415382	WITHOUT_CLASSIFICATION	1.1610725846168267E-4	IMPLEMENTATION
// Java Doubles are 64 bit long:            	WITHOUT_CLASSIFICATION	0.9998839615390226	WITHOUT_CLASSIFICATION	1.1603846097738786E-4	IMPLEMENTATION
// Double.MAX_EXPONENT since Java 1.6            	WITHOUT_CLASSIFICATION	0.9999184188049804	WITHOUT_CLASSIFICATION	8.158119501954316E-5	IMPLEMENTATION
// don't override Numeric#div !	WITHOUT_CLASSIFICATION	0.9997273713397583	WITHOUT_CLASSIFICATION	2.7262866024176373E-4	IMPLEMENTATION
// Modelled after c ruby implementation (java /,% not same as ruby)	WITHOUT_CLASSIFICATION	0.9914438362362871	WITHOUT_CLASSIFICATION	0.008556163763713038	IMPLEMENTATION
// MRI behavior:	WITHOUT_CLASSIFICATION	0.9990662634736747	WITHOUT_CLASSIFICATION	9.337365263254339E-4	IMPLEMENTATION
// Numeric.equal            	WITHOUT_CLASSIFICATION	0.9997877334300682	WITHOUT_CLASSIFICATION	2.1226656993181153E-4	IMPLEMENTATION
// provider is not available	WITHOUT_CLASSIFICATION	0.9977095245516509	WITHOUT_CLASSIFICATION	0.00229047544834909	IMPLEMENTATION
// bouncy castle doesn't support algorithm	WITHOUT_CLASSIFICATION	0.9956687004486495	WITHOUT_CLASSIFICATION	0.004331299551350541	IMPLEMENTATION
// fall back to system JCA providers	WITHOUT_CLASSIFICATION	0.9985164444078818	WITHOUT_CLASSIFICATION	0.0014835555921181602	IMPLEMENTATION
// RubyDigest	WITHOUT_CLASSIFICATION	0.9990652123136763	WITHOUT_CLASSIFICATION	9.347876863236658E-4	IMPLEMENTATION
// ENEBO: Can these be fast?	WITHOUT_CLASSIFICATION	0.999729121714948	WITHOUT_CLASSIFICATION	2.7087828505208166E-4	IMPLEMENTATION
// synchronize on the RubyThread for threadgroup updates	WITHOUT_CLASSIFICATION	0.9998071851181001	WITHOUT_CLASSIFICATION	1.9281488190000203E-4	IMPLEMENTATION
// we only add live threads	WITHOUT_CLASSIFICATION	0.9994145237765462	WITHOUT_CLASSIFICATION	5.854762234539457E-4	IMPLEMENTATION
// use same ClassIndex as metaclass, since we're technically still of that type	WITHOUT_CLASSIFICATION	0.9998123228208198	WITHOUT_CLASSIFICATION	1.8767717918020997E-4	IMPLEMENTATION
// handle everything after -- as arguments to the jruby process	WITHOUT_CLASSIFICATION	0.999388784145211	WITHOUT_CLASSIFICATION	6.112158547890824E-4	IMPLEMENTATION
// JRubyService	WITHOUT_CLASSIFICATION	0.9990652123136763	WITHOUT_CLASSIFICATION	9.347876863236658E-4	IMPLEMENTATION
// while	WITHOUT_CLASSIFICATION	0.9999794433702875	WITHOUT_CLASSIFICATION	2.0556629712463954E-5	IMPLEMENTATION
/* \OOO */	WITHOUT_CLASSIFICATION	0.999995249009219	WITHOUT_CLASSIFICATION	4.75099078097611E-6	IMPLEMENTATION
// CRuby uses sprintf(buf, "%.*g", FLOAT_DIG, d); // This pattern adjusts the output of String.pattern("%g") to mimic // the C version.	WITHOUT_CLASSIFICATION	0.9999117414488047	WITHOUT_CLASSIFICATION	8.825855119538893E-5	IMPLEMENTATION
// mask off "once" flag	WITHOUT_CLASSIFICATION	0.9997460863510171	WITHOUT_CLASSIFICATION	2.539136489828298E-4	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.999756975213214	WITHOUT_CLASSIFICATION	2.4302478678582236E-4	IMPLEMENTATION
// internal usage (Complex/Rational)	WITHOUT_CLASSIFICATION	0.9999175045706594	WITHOUT_CLASSIFICATION	8.249542934058763E-5	IMPLEMENTATION
// silent ?	WITHOUT_CLASSIFICATION	0.9992591813668483	WITHOUT_CLASSIFICATION	7.408186331517688E-4	IMPLEMENTATION
/* \xHH */	WITHOUT_CLASSIFICATION	0.999995249009219	WITHOUT_CLASSIFICATION	4.75099078097611E-6	IMPLEMENTATION
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999654992998921	WITHOUT_CLASSIFICATION	3.4500700107862226E-5	IMPLEMENTATION
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9998479724803608	WITHOUT_CLASSIFICATION	1.5202751963920946E-4	IMPLEMENTATION
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9998479724803608	WITHOUT_CLASSIFICATION	1.5202751963920946E-4	IMPLEMENTATION
/* \O, \OO, \OOO or backref */	WITHOUT_CLASSIFICATION	0.9999659520885527	WITHOUT_CLASSIFICATION	3.4047911447295914E-5	IMPLEMENTATION
// MBCLEN_NEEDMORE_P	WITHOUT_CLASSIFICATION	0.9990652123136763	WITHOUT_CLASSIFICATION	9.347876863236658E-4	IMPLEMENTATION
// MBCLEN_INVALID_P	WITHOUT_CLASSIFICATION	0.9990652123136763	WITHOUT_CLASSIFICATION	9.347876863236658E-4	IMPLEMENTATION
// Unicode is can be only 21 bits long, int is enough	WITHOUT_CLASSIFICATION	0.9996179434252398	WITHOUT_CLASSIFICATION	3.820565747601434E-4	IMPLEMENTATION
/* Surrogates */	WITHOUT_CLASSIFICATION	0.9998479724803608	WITHOUT_CLASSIFICATION	1.5202751963920946E-4	IMPLEMENTATION
// do not load the class if not used	WITHOUT_CLASSIFICATION	0.9993314493168723	WITHOUT_CLASSIFICATION	6.685506831275675E-4	IMPLEMENTATION
/* \0, \0O, \0OO */	WITHOUT_CLASSIFICATION	0.9998479724803608	WITHOUT_CLASSIFICATION	1.5202751963920946E-4	IMPLEMENTATION
/* \xHH */	WITHOUT_CLASSIFICATION	0.999995249009219	WITHOUT_CLASSIFICATION	4.75099078097611E-6	IMPLEMENTATION
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9998479724803608	WITHOUT_CLASSIFICATION	1.5202751963920946E-4	IMPLEMENTATION
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999654992998921	WITHOUT_CLASSIFICATION	3.4500700107862226E-5	IMPLEMENTATION
/* \\u{H HH HHH HHHH HHHHH HHHHHH ...} */	WITHOUT_CLASSIFICATION	0.9999588403624593	WITHOUT_CLASSIFICATION	4.115963754067716E-5	IMPLEMENTATION
/* \\uHHHH */	WITHOUT_CLASSIFICATION	0.9998479724803608	WITHOUT_CLASSIFICATION	1.5202751963920946E-4	IMPLEMENTATION
/* \p{Hiragana} */	WITHOUT_CLASSIFICATION	0.9998479724803608	WITHOUT_CLASSIFICATION	1.5202751963920946E-4	IMPLEMENTATION
// inner switch	WITHOUT_CLASSIFICATION	0.9991941063774048	WITHOUT_CLASSIFICATION	8.058936225951692E-4	IMPLEMENTATION
// newInstance here	WITHOUT_CLASSIFICATION	0.9981318905220153	WITHOUT_CLASSIFICATION	0.0018681094779845918	IMPLEMENTATION
// rb_reg_raise	WITHOUT_CLASSIFICATION	0.9990652123136763	WITHOUT_CLASSIFICATION	9.347876863236658E-4	IMPLEMENTATION
// rb_reg_desc	WITHOUT_CLASSIFICATION	0.9990652123136763	WITHOUT_CLASSIFICATION	9.347876863236658E-4	IMPLEMENTATION
// rb_enc_reg_raise	WITHOUT_CLASSIFICATION	0.9990652123136763	WITHOUT_CLASSIFICATION	9.347876863236658E-4	IMPLEMENTATION
// rb_enc_reg_error_desc	WITHOUT_CLASSIFICATION	0.9997877334300682	WITHOUT_CLASSIFICATION	2.1226656993181153E-4	IMPLEMENTATION
// rb_reg_initialize_str	WITHOUT_CLASSIFICATION	0.9997877334300682	WITHOUT_CLASSIFICATION	2.1226656993181153E-4	IMPLEMENTATION
// rb_reg_initialize	WITHOUT_CLASSIFICATION	0.9990652123136763	WITHOUT_CLASSIFICATION	9.347876863236658E-4	IMPLEMENTATION
// JRUBY-3625: delay setting backref until the MatchData is completely initialized	WITHOUT_CLASSIFICATION	0.9999752430562401	WITHOUT_CLASSIFICATION	2.475694375996555E-5	IMPLEMENTATION
// rb_reg_expr_str	WITHOUT_CLASSIFICATION	0.9990652123136763	WITHOUT_CLASSIFICATION	9.347876863236658E-4	IMPLEMENTATION
// option_to_str	WITHOUT_CLASSIFICATION	0.9990652123136763	WITHOUT_CLASSIFICATION	9.347876863236658E-4	IMPLEMENTATION
// Don't initialize with class // Don't put in object space and don't taint	WITHOUT_CLASSIFICATION	0.9999785538922608	WITHOUT_CLASSIFICATION	2.1446107739227998E-5	IMPLEMENTATION
// args should be before block	WITHOUT_CLASSIFICATION	0.9998217630222268	WITHOUT_CLASSIFICATION	1.78236977773188E-4	IMPLEMENTATION
// args should be at end	WITHOUT_CLASSIFICATION	0.999801529738308	WITHOUT_CLASSIFICATION	1.984702616920486E-4	IMPLEMENTATION
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9987248577257407	WITHOUT_CLASSIFICATION	0.0012751422742592344	IMPLEMENTATION
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9987248577257407	WITHOUT_CLASSIFICATION	0.0012751422742592344	IMPLEMENTATION
// skip anything not related to jruby	WITHOUT_CLASSIFICATION	0.962108252893741	WITHOUT_CLASSIFICATION	0.03789174710625906	IMPLEMENTATION
// start a new populator	WITHOUT_CLASSIFICATION	0.9999054031385769	WITHOUT_CLASSIFICATION	9.459686142318823E-5	IMPLEMENTATION
// check for frame field reads or writes	WITHOUT_CLASSIFICATION	0.9999092164295342	WITHOUT_CLASSIFICATION	9.07835704657686E-5	IMPLEMENTATION
// add all names for this annotation	WITHOUT_CLASSIFICATION	0.9999058736181912	WITHOUT_CLASSIFICATION	9.41263818087849E-5	IMPLEMENTATION
// no annotated methods found, skip	WITHOUT_CLASSIFICATION	0.9995545083727523	WITHOUT_CLASSIFICATION	4.4549162724777895E-4	IMPLEMENTATION
// write out a static initializer for frame names, so it only fires once	WITHOUT_CLASSIFICATION	0.9999532858179108	WITHOUT_CLASSIFICATION	4.671418208925762E-5	IMPLEMENTATION
// single method, use normal logic	WITHOUT_CLASSIFICATION	0.998533712411865	WITHOUT_CLASSIFICATION	0.0014662875881351295	IMPLEMENTATION
// multimethod, new logic	WITHOUT_CLASSIFICATION	0.999828710679727	WITHOUT_CLASSIFICATION	1.7128932027294015E-4	IMPLEMENTATION
// declared type returns the qualified name without $ for inner classes!!!	WITHOUT_CLASSIFICATION	0.9998863632887471	WITHOUT_CLASSIFICATION	1.1363671125285184E-4	IMPLEMENTATION
// inner class, use $ to delimit	WITHOUT_CLASSIFICATION	0.9994242038189954	WITHOUT_CLASSIFICATION	5.757961810046572E-4	IMPLEMENTATION
//                        RubyModule singletonClass = module.getSingletonClass();	WITHOUT_CLASSIFICATION	0.9997670429530036	WITHOUT_CLASSIFICATION	2.3295704699650177E-4	IMPLEMENTATION
//                }	WITHOUT_CLASSIFICATION	0.9994060696597376	WITHOUT_CLASSIFICATION	5.939303402624972E-4	IMPLEMENTATION
// fallback on non-pregenerated logic	WITHOUT_CLASSIFICATION	0.999569476554101	WITHOUT_CLASSIFICATION	4.3052344589901816E-4	IMPLEMENTATION
// refresh call adapter, since it matters if this is iter-based or not	WITHOUT_CLASSIFICATION	0.9989106089349411	WITHOUT_CLASSIFICATION	0.0010893910650588558	IMPLEMENTATION
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.8812359299008777	WITHOUT_CLASSIFICATION	0.1187640700991223	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.999113323060785	WITHOUT_CLASSIFICATION	8.86676939214944E-4	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.999644373480127	WITHOUT_CLASSIFICATION	3.556265198730602E-4	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9994678162786536	WITHOUT_CLASSIFICATION	5.321837213465198E-4	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9994678162786536	WITHOUT_CLASSIFICATION	5.321837213465198E-4	IMPLEMENTATION
// colon3	WITHOUT_CLASSIFICATION	0.999970764908297	WITHOUT_CLASSIFICATION	2.9235091703083797E-5	IMPLEMENTATION
// Colon3	WITHOUT_CLASSIFICATION	0.999970764908297	WITHOUT_CLASSIFICATION	2.9235091703083797E-5	IMPLEMENTATION
// array created for rescue args doesn't need to be in ObjectSpace.	WITHOUT_CLASSIFICATION	0.999992379010301	WITHOUT_CLASSIFICATION	7.620989698946823E-6	IMPLEMENTATION
// For b.foo	WITHOUT_CLASSIFICATION	0.9975194310989233	WITHOUT_CLASSIFICATION	0.002480568901076779	IMPLEMENTATION
// instance config for the script run	WITHOUT_CLASSIFICATION	0.9999287306407577	WITHOUT_CLASSIFICATION	7.126935924222586E-5	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9994678162786536	WITHOUT_CLASSIFICATION	5.321837213465198E-4	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9994678162786536	WITHOUT_CLASSIFICATION	5.321837213465198E-4	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999738222494304	WITHOUT_CLASSIFICATION	2.6177750569644133E-5	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999738222494304	WITHOUT_CLASSIFICATION	2.6177750569644133E-5	IMPLEMENTATION
//RubyModule module = context.getRubyClass();	WITHOUT_CLASSIFICATION	0.9986137451597453	WITHOUT_CLASSIFICATION	0.001386254840254674	IMPLEMENTATION
// For 'b.foo'	WITHOUT_CLASSIFICATION	0.9975194310989233	WITHOUT_CLASSIFICATION	0.002480568901076779	IMPLEMENTATION
// We define an actual list to get around bug in java integration (1387115)	WITHOUT_CLASSIFICATION	0.9999994843189154	WITHOUT_CLASSIFICATION	5.1568108457057E-7	IMPLEMENTATION
// something in here is used to build up ruby stack trace...	WITHOUT_CLASSIFICATION	0.9999924921500134	WITHOUT_CLASSIFICATION	7.507849986593096E-6	IMPLEMENTATION
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9998073083459327	WITHOUT_CLASSIFICATION	1.9269165406735642E-4	IMPLEMENTATION
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9998073083459327	WITHOUT_CLASSIFICATION	1.9269165406735642E-4	IMPLEMENTATION
// do nothing, allow loop to retry	WITHOUT_CLASSIFICATION	0.9995168773010735	WITHOUT_CLASSIFICATION	4.83122698926472E-4	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9995625216673062	WITHOUT_CLASSIFICATION	4.3747833269391917E-4	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9998377941763886	WITHOUT_CLASSIFICATION	1.6220582361138887E-4	IMPLEMENTATION
// never visited, should be fine	WITHOUT_CLASSIFICATION	0.995095105250456	WITHOUT_CLASSIFICATION	0.004904894749544027	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999738222494304	WITHOUT_CLASSIFICATION	2.6177750569644133E-5	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999000394904741	WITHOUT_CLASSIFICATION	9.996050952585005E-5	IMPLEMENTATION
// If we have more than one argument, then make sure the array is not ObjectSpaced.	WITHOUT_CLASSIFICATION	0.8987171823981283	WITHOUT_CLASSIFICATION	0.10128281760187169	IMPLEMENTATION
// Only in ruby 1.9 methods	WITHOUT_CLASSIFICATION	0.9999948523061136	WITHOUT_CLASSIFICATION	5.147693886277085E-6	IMPLEMENTATION
// Bind 'normal' parameter values to the local scope for this method.	WITHOUT_CLASSIFICATION	0.9999975208750344	WITHOUT_CLASSIFICATION	2.479124965570857E-6	IMPLEMENTATION
// no arg grouping, just use bulk assignment methods	WITHOUT_CLASSIFICATION	0.9999402367522178	WITHOUT_CLASSIFICATION	5.976324778225865E-5	IMPLEMENTATION
// optArgs and restArgs require more work, so isolate them and ArrayList creation here	WITHOUT_CLASSIFICATION	0.9957002754267826	WITHOUT_CLASSIFICATION	0.004299724573217402	IMPLEMENTATION
//        arity.checkArity(runtime, argsLength);	WITHOUT_CLASSIFICATION	0.9998279270919643	WITHOUT_CLASSIFICATION	1.7207290803563613E-4	IMPLEMENTATION
// no more values to stick in rest arg	WITHOUT_CLASSIFICATION	0.9999793773202346	WITHOUT_CLASSIFICATION	2.0622679765508385E-5	IMPLEMENTATION
// set argv from main's args	WITHOUT_CLASSIFICATION	0.9999546118898174	WITHOUT_CLASSIFICATION	4.5388110182640857E-5	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.999113323060785	WITHOUT_CLASSIFICATION	8.86676939214944E-4	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9994678162786536	WITHOUT_CLASSIFICATION	5.321837213465198E-4	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999738222494304	WITHOUT_CLASSIFICATION	2.6177750569644133E-5	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999000394904741	WITHOUT_CLASSIFICATION	9.996050952585005E-5	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9690303726621317	WITHOUT_CLASSIFICATION	0.03096962733786836	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9690303726621317	WITHOUT_CLASSIFICATION	0.03096962733786836	IMPLEMENTATION
// block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] //assert argsNode != null : "argsNode is not null";	WITHOUT_CLASSIFICATION	0.992677210557842	WITHOUT_CLASSIFICATION	0.007322789442157962	IMPLEMENTATION
// assign given optional arguments to their variables	WITHOUT_CLASSIFICATION	0.9997502484720677	WITHOUT_CLASSIFICATION	2.497515279321879E-4	IMPLEMENTATION
// in-frame EvalState should already have receiver set as self, continue to use it	WITHOUT_CLASSIFICATION	0.9975340477529614	WITHOUT_CLASSIFICATION	0.002465952247038548	IMPLEMENTATION
// assign the default values, adding to the end of allArgs	WITHOUT_CLASSIFICATION	0.9999116038656127	WITHOUT_CLASSIFICATION	8.839613438734653E-5	IMPLEMENTATION
// Make sure the appropriate scope has proper size. See JRUBY-2046.	WITHOUT_CLASSIFICATION	0.9997268433984803	WITHOUT_CLASSIFICATION	2.7315660151971645E-4	IMPLEMENTATION
// Experimental class reification support, to create real Java classes // for Ruby classes after the first opening	WITHOUT_CLASSIFICATION	0.9999200681014065	WITHOUT_CLASSIFICATION	7.993189859345663E-5	IMPLEMENTATION
// This should never happen past parse, but just bulletproof this just in case	WITHOUT_CLASSIFICATION	0.9998474223189636	WITHOUT_CLASSIFICATION	1.5257768103643185E-4	IMPLEMENTATION
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9999160725659376	WITHOUT_CLASSIFICATION	8.392743406243969E-5	IMPLEMENTATION
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9998999508655538	WITHOUT_CLASSIFICATION	1.0004913444616512E-4	IMPLEMENTATION
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999789553819792	WITHOUT_CLASSIFICATION	2.1044618020699724E-5	IMPLEMENTATION
// never visited, should be ok	WITHOUT_CLASSIFICATION	0.9916117109112821	WITHOUT_CLASSIFICATION	0.008388289088717908	IMPLEMENTATION
// If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil	WITHOUT_CLASSIFICATION	0.9966587521104766	WITHOUT_CLASSIFICATION	0.0033412478895233403	IMPLEMENTATION
// JRUBY-530 until case	WITHOUT_CLASSIFICATION	0.9998177048250082	WITHOUT_CLASSIFICATION	1.8229517499173965E-4	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.999644373480127	WITHOUT_CLASSIFICATION	3.556265198730602E-4	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999738222494304	WITHOUT_CLASSIFICATION	2.6177750569644133E-5	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9995625216673062	WITHOUT_CLASSIFICATION	4.3747833269391917E-4	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9998377941763886	WITHOUT_CLASSIFICATION	1.6220582361138887E-4	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9998377941763886	WITHOUT_CLASSIFICATION	1.6220582361138887E-4	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999738222494304	WITHOUT_CLASSIFICATION	2.6177750569644133E-5	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999000394904741	WITHOUT_CLASSIFICATION	9.996050952585005E-5	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999000394904741	WITHOUT_CLASSIFICATION	9.996050952585005E-5	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9690303726621317	WITHOUT_CLASSIFICATION	0.03096962733786836	IMPLEMENTATION
// Empirical Observations: // null -> Some arity // argsNode == this.argsNode then check for arity changes // newline(splatnode) -> argspushnode	WITHOUT_CLASSIFICATION	0.9999844299328949	WITHOUT_CLASSIFICATION	1.5570067105020307E-5	IMPLEMENTATION
//assert !(value instanceof RubyArray)  : "Not an array";	WITHOUT_CLASSIFICATION	0.9995138785460856	WITHOUT_CLASSIFICATION	4.861214539142434E-4	IMPLEMENTATION
// Serialization killed our dynamic scope.  We can just create an empty one // since serialization cannot serialize an eval (which is the only thing // which is capable of having a non-empty dynamic scope).	WITHOUT_CLASSIFICATION	0.9999998522689869	WITHOUT_CLASSIFICATION	1.4773101313540535E-7	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9980312623604638	WITHOUT_CLASSIFICATION	0.0019687376395361895	IMPLEMENTATION
// We could probably also detect if LHS value came out of cache and avoid some of this	WITHOUT_CLASSIFICATION	0.9999471031954112	WITHOUT_CLASSIFICATION	5.289680458870577E-5	IMPLEMENTATION
//        assert thenBody != null : "thenBody is not null"; //        assert elseBody != null : "elseBody is not null";	WITHOUT_CLASSIFICATION	0.9983638420961466	WITHOUT_CLASSIFICATION	0.001636157903853473	IMPLEMENTATION
// add in reverse order	WITHOUT_CLASSIFICATION	0.9999682786374221	WITHOUT_CLASSIFICATION	3.172136257784404E-5	IMPLEMENTATION
// in order to make pragma's noops we set location to a special value	WITHOUT_CLASSIFICATION	0.99994626394641	WITHOUT_CLASSIFICATION	5.3736053590051235E-5	IMPLEMENTATION
// ignore compiler pragmas	WITHOUT_CLASSIFICATION	0.999746930630306	WITHOUT_CLASSIFICATION	2.530693696940389E-4	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9995625216673062	WITHOUT_CLASSIFICATION	4.3747833269391917E-4	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9998377941763886	WITHOUT_CLASSIFICATION	1.6220582361138887E-4	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9998377941763886	WITHOUT_CLASSIFICATION	1.6220582361138887E-4	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999738222494304	WITHOUT_CLASSIFICATION	2.6177750569644133E-5	IMPLEMENTATION
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9999160725659376	WITHOUT_CLASSIFICATION	8.392743406243969E-5	IMPLEMENTATION
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999789553819792	WITHOUT_CLASSIFICATION	2.1044618020699724E-5	IMPLEMENTATION
// No actual test, so do 'when' if when expression is not nil	WITHOUT_CLASSIFICATION	0.9999333273788085	WITHOUT_CLASSIFICATION	6.667262119157897E-5	IMPLEMENTATION
// save entering the try if there's nothing to ensure	WITHOUT_CLASSIFICATION	0.9999887309310348	WITHOUT_CLASSIFICATION	1.1269068965218925E-5	IMPLEMENTATION
// For 'foo'	WITHOUT_CLASSIFICATION	0.9975194310989233	WITHOUT_CLASSIFICATION	0.002480568901076779	IMPLEMENTATION
// For 'foo'	WITHOUT_CLASSIFICATION	0.9975194310989233	WITHOUT_CLASSIFICATION	0.002480568901076779	IMPLEMENTATION
// admittedly inefficient	WITHOUT_CLASSIFICATION	0.9997877334300682	WITHOUT_CLASSIFICATION	2.1226656993181153E-4	IMPLEMENTATION
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9997498391146628	WITHOUT_CLASSIFICATION	2.5016088533726214E-4	IMPLEMENTATION
// What static scoping relationship exists when it comes into being.	WITHOUT_CLASSIFICATION	0.9972908478228761	WITHOUT_CLASSIFICATION	0.002709152177123762	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9997061763850394	WITHOUT_CLASSIFICATION	2.9382361496051743E-4	IMPLEMENTATION
// just rethrow	WITHOUT_CLASSIFICATION	0.9997820632430333	WITHOUT_CLASSIFICATION	2.1793675696666153E-4	IMPLEMENTATION
// just rethrow	WITHOUT_CLASSIFICATION	0.9997820632430333	WITHOUT_CLASSIFICATION	2.1793675696666153E-4	IMPLEMENTATION
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.999819483545825	WITHOUT_CLASSIFICATION	1.805164541750061E-4	IMPLEMENTATION
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.999819483545825	WITHOUT_CLASSIFICATION	1.805164541750061E-4	IMPLEMENTATION
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9998801890043252	WITHOUT_CLASSIFICATION	1.1981099567489211E-4	IMPLEMENTATION
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9998801890043252	WITHOUT_CLASSIFICATION	1.1981099567489211E-4	IMPLEMENTATION
// Execute rescue block	WITHOUT_CLASSIFICATION	0.9997668490128863	WITHOUT_CLASSIFICATION	2.3315098711370623E-4	IMPLEMENTATION
// If no exception is thrown execute else block	WITHOUT_CLASSIFICATION	0.999660204940905	WITHOUT_CLASSIFICATION	3.3979505909493033E-4	IMPLEMENTATION
// index of variable for this arg	WITHOUT_CLASSIFICATION	0.9997467765618333	WITHOUT_CLASSIFICATION	2.532234381667882E-4	IMPLEMENTATION
// only a marker interface	WITHOUT_CLASSIFICATION	0.999921969234048	WITHOUT_CLASSIFICATION	7.803076595207845E-5	IMPLEMENTATION
// don't attempt to coerce to array, just wrap and return	WITHOUT_CLASSIFICATION	0.9998577185173922	WITHOUT_CLASSIFICATION	1.4228148260770333E-4	IMPLEMENTATION
// pragmas	WITHOUT_CLASSIFICATION	0.999970764908297	WITHOUT_CLASSIFICATION	2.9235091703083797E-5	IMPLEMENTATION
// The method also needs a scope, do both	WITHOUT_CLASSIFICATION	0.9735610194900923	WITHOUT_CLASSIFICATION	0.026438980509907672	IMPLEMENTATION
// We're doing normal framed compilation or the method needs a frame	WITHOUT_CLASSIFICATION	0.9913218519785562	WITHOUT_CLASSIFICATION	0.00867814802144383	IMPLEMENTATION
// The method doesn't need a scope or static scope; frame only	WITHOUT_CLASSIFICATION	0.9972570044651969	WITHOUT_CLASSIFICATION	0.0027429955348031386	IMPLEMENTATION
// The method doesn't need a scope, but has static scope needs; use a dummy scope	WITHOUT_CLASSIFICATION	0.9995006904924801	WITHOUT_CLASSIFICATION	4.993095075199273E-4	IMPLEMENTATION
// Proc.new needs the caller's block to instantiate a proc	WITHOUT_CLASSIFICATION	0.998829997701707	WITHOUT_CLASSIFICATION	0.0011700022982930227	IMPLEMENTATION
// check for Proc.new, an especially magic method	WITHOUT_CLASSIFICATION	0.999567415751805	WITHOUT_CLASSIFICATION	4.325842481950744E-4	IMPLEMENTATION
// long, slow way causes disabling	WITHOUT_CLASSIFICATION	0.999177724751558	WITHOUT_CLASSIFICATION	8.222752484419405E-4	IMPLEMENTATION
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9995327475631214	WITHOUT_CLASSIFICATION	4.672524368785305E-4	IMPLEMENTATION
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9995327475631214	WITHOUT_CLASSIFICATION	4.672524368785305E-4	IMPLEMENTATION
// long, slow way causes disabling for defined	WITHOUT_CLASSIFICATION	0.9998526266262181	WITHOUT_CLASSIFICATION	1.473733737819255E-4	IMPLEMENTATION
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9989227380098039	WITHOUT_CLASSIFICATION	0.001077261990196076	IMPLEMENTATION
// Because Regexp#=== sets backref, we have to make this backref-aware	WITHOUT_CLASSIFICATION	0.9975029036673576	WITHOUT_CLASSIFICATION	0.002497096332642385	IMPLEMENTATION
// encountered a node we don't recognize, set everything to true to disable optz	WITHOUT_CLASSIFICATION	0.999294668913661	WITHOUT_CLASSIFICATION	7.053310863388683E-4	IMPLEMENTATION
// only arrays that are "lightweight" are being used as args arrays	WITHOUT_CLASSIFICATION	0.9997237519443729	WITHOUT_CLASSIFICATION	2.762480556271409E-4	IMPLEMENTATION
// otherwise, it's a literal array	WITHOUT_CLASSIFICATION	0.999555865688079	WITHOUT_CLASSIFICATION	4.441343119209818E-4	IMPLEMENTATION
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9989472873749592	WITHOUT_CLASSIFICATION	0.001052712625040843	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.999957532542151	WITHOUT_CLASSIFICATION	4.246745784900578E-5	IMPLEMENTATION
// compile first node as non-expr and then second node	WITHOUT_CLASSIFICATION	0.9998199894998326	WITHOUT_CLASSIFICATION	1.8001050016737012E-4	IMPLEMENTATION
// last node, either !instanceof WhenNode or null, is the else	WITHOUT_CLASSIFICATION	0.9999776304160368	WITHOUT_CLASSIFICATION	2.2369583963177814E-5	IMPLEMENTATION
// compile first node only	WITHOUT_CLASSIFICATION	0.9992888371778941	WITHOUT_CLASSIFICATION	7.111628221059425E-4	IMPLEMENTATION
// splatted when, can't do it yet	WITHOUT_CLASSIFICATION	0.9960174916143059	WITHOUT_CLASSIFICATION	0.003982508385694171	IMPLEMENTATION
// if __send__ with a literal symbol, compile it as a direct fcall	WITHOUT_CLASSIFICATION	0.9999531562775463	WITHOUT_CLASSIFICATION	4.684372245362157E-5	IMPLEMENTATION
// NOTE: Currently this optimization is limited to the following situations: // * All expressions must be int-ranged literal fixnums // It also still emits the code for the "safe" when logic, which is rather // wasteful (since it essentially doubles each code body). As such it is // normally disabled, but it serves as an example of how this optimization // could be done. Ideally, it should be combined with the when processing // to improve code reuse before it's generally available.	WITHOUT_CLASSIFICATION	0.999224430314811	WITHOUT_CLASSIFICATION	7.755696851889448E-4	IMPLEMENTATION
// aggregate when nodes into a list, unfortunately, this is no	WITHOUT_CLASSIFICATION	0.9998303225174787	WITHOUT_CLASSIFICATION	1.6967748252118555E-4	IMPLEMENTATION
// one arg but it's an array, treat it as a proper array	WITHOUT_CLASSIFICATION	0.9997646427326441	WITHOUT_CLASSIFICATION	2.3535726735578115E-4	IMPLEMENTATION
// can't do it	WITHOUT_CLASSIFICATION	0.99338315748572	WITHOUT_CLASSIFICATION	0.006616842514279919	IMPLEMENTATION
// otherwise, use normal args compiler	WITHOUT_CLASSIFICATION	0.9992134110136384	WITHOUT_CLASSIFICATION	7.865889863615117E-4	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999878720873101	WITHOUT_CLASSIFICATION	1.212791268986833E-5	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999878720873101	WITHOUT_CLASSIFICATION	1.212791268986833E-5	IMPLEMENTATION
// these are all simple cases that don't require the heavier defined logic	WITHOUT_CLASSIFICATION	0.9997515567242734	WITHOUT_CLASSIFICATION	2.4844327572661986E-4	IMPLEMENTATION
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9990655965962804	WITHOUT_CLASSIFICATION	9.344034037195148E-4	IMPLEMENTATION
//[]	WITHOUT_CLASSIFICATION	0.9998920580249556	WITHOUT_CLASSIFICATION	1.0794197504441973E-4	IMPLEMENTATION
//[]	WITHOUT_CLASSIFICATION	0.9998920580249556	WITHOUT_CLASSIFICATION	1.0794197504441973E-4	IMPLEMENTATION
//          context.swapValues(); //context.consumeCurrentValue();	WITHOUT_CLASSIFICATION	0.9998279270919643	WITHOUT_CLASSIFICATION	1.7207290803563613E-4	IMPLEMENTATION
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[] //[self] //[RubyClass] //[RubyClass, RubyClass]	WITHOUT_CLASSIFICATION	0.9990655965962804	WITHOUT_CLASSIFICATION	9.344034037195148E-4	IMPLEMENTATION
//[RubyClass]	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9990655965962804	WITHOUT_CLASSIFICATION	9.344034037195148E-4	IMPLEMENTATION
// if root of method is rescue, compile as a light rescue	WITHOUT_CLASSIFICATION	0.9999245567269042	WITHOUT_CLASSIFICATION	7.544327309586025E-5	IMPLEMENTATION
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999507790006087	WITHOUT_CLASSIFICATION	4.922099939130567E-5	IMPLEMENTATION
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999507790006087	WITHOUT_CLASSIFICATION	4.922099939130567E-5	IMPLEMENTATION
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9995519481451178	WITHOUT_CLASSIFICATION	4.4805185488226414E-4	IMPLEMENTATION
// if root of method is rescue, compile as light rescue	WITHOUT_CLASSIFICATION	0.9998765720567155	WITHOUT_CLASSIFICATION	1.2342794328445286E-4	IMPLEMENTATION
// invoke run with threadcontext and topself	WITHOUT_CLASSIFICATION	0.9998242018857789	WITHOUT_CLASSIFICATION	1.7579811422112454E-4	IMPLEMENTATION
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9990655965962804	WITHOUT_CLASSIFICATION	9.344034037195148E-4	IMPLEMENTATION
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9990655965962804	WITHOUT_CLASSIFICATION	9.344034037195148E-4	IMPLEMENTATION
//[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9990655965962804	WITHOUT_CLASSIFICATION	9.344034037195148E-4	IMPLEMENTATION
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9990655965962804	WITHOUT_CLASSIFICATION	9.344034037195148E-4	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9919483790847584	WITHOUT_CLASSIFICATION	0.008051620915241586	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9996758628674707	WITHOUT_CLASSIFICATION	3.2413713252927765E-4	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9996758628674707	WITHOUT_CLASSIFICATION	3.2413713252927765E-4	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9995119679472502	WITHOUT_CLASSIFICATION	4.880320527498595E-4	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9995119679472502	WITHOUT_CLASSIFICATION	4.880320527498595E-4	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9995119679472502	WITHOUT_CLASSIFICATION	4.880320527498595E-4	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9996758628674707	WITHOUT_CLASSIFICATION	3.2413713252927765E-4	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9996758628674707	WITHOUT_CLASSIFICATION	3.2413713252927765E-4	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9919483790847584	WITHOUT_CLASSIFICATION	0.008051620915241586	IMPLEMENTATION
// force heap-scope behavior, since it uses parent's scope	WITHOUT_CLASSIFICATION	0.9996026028270597	WITHOUT_CLASSIFICATION	3.973971729402965E-4	IMPLEMENTATION
// always false or nil	WITHOUT_CLASSIFICATION	0.9998132458110994	WITHOUT_CLASSIFICATION	1.8675418890064723E-4	IMPLEMENTATION
// optimizations if we know ahead of time it will always be true or false	WITHOUT_CLASSIFICATION	0.9998589804944311	WITHOUT_CLASSIFICATION	1.4101950556883187E-4	IMPLEMENTATION
// normal	WITHOUT_CLASSIFICATION	0.9999568735729181	WITHOUT_CLASSIFICATION	4.312642708192915E-5	IMPLEMENTATION
// compile condition as non-expr and just compile "then" body	WITHOUT_CLASSIFICATION	0.9999900539239898	WITHOUT_CLASSIFICATION	9.946076010349881E-6	IMPLEMENTATION
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9965802606789301	WITHOUT_CLASSIFICATION	0.0034197393210698337	IMPLEMENTATION
// just push nil for pragmas	WITHOUT_CLASSIFICATION	0.9999797719917848	WITHOUT_CLASSIFICATION	2.02280082152107E-5	IMPLEMENTATION
// "assignment" means the value is already on the stack	WITHOUT_CLASSIFICATION	0.999936103537058	WITHOUT_CLASSIFICATION	6.389646294205826E-5	IMPLEMENTATION
// compile first node only	WITHOUT_CLASSIFICATION	0.9992888371778941	WITHOUT_CLASSIFICATION	7.111628221059425E-4	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9996758628674707	WITHOUT_CLASSIFICATION	3.2413713252927765E-4	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9996758628674707	WITHOUT_CLASSIFICATION	3.2413713252927765E-4	IMPLEMENTATION
// eval new value, call operator on old value, and assign	WITHOUT_CLASSIFICATION	0.9997256910061939	WITHOUT_CLASSIFICATION	2.743089938061525E-4	IMPLEMENTATION
// try optz version	WITHOUT_CLASSIFICATION	0.9985008576751692	WITHOUT_CLASSIFICATION	0.0014991423248308696	IMPLEMENTATION
// sizes must match	WITHOUT_CLASSIFICATION	0.9989549533624041	WITHOUT_CLASSIFICATION	0.0010450466375958906	IMPLEMENTATION
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999594300366699	WITHOUT_CLASSIFICATION	4.056996333012944E-5	IMPLEMENTATION
// normal items at the "head" of the masgn	WITHOUT_CLASSIFICATION	0.999615400079349	WITHOUT_CLASSIFICATION	3.845999206509457E-4	IMPLEMENTATION
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9987424974550433	WITHOUT_CLASSIFICATION	0.0012575025449566366	IMPLEMENTATION
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9992513474013598	WITHOUT_CLASSIFICATION	7.486525986403025E-4	IMPLEMENTATION
// only supports simple parallel assignment of up to 10 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999977212011263	WITHOUT_CLASSIFICATION	2.2787988737370937E-6	IMPLEMENTATION
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9992004680343725	WITHOUT_CLASSIFICATION	7.995319656274848E-4	IMPLEMENTATION
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999687194070588	WITHOUT_CLASSIFICATION	3.128059294132171E-5	IMPLEMENTATION
//RedoNode redoNode = (RedoNode)node;	WITHOUT_CLASSIFICATION	0.9987353200955884	WITHOUT_CLASSIFICATION	0.0012646799044115655	IMPLEMENTATION
// done processing args	WITHOUT_CLASSIFICATION	0.999905700884994	WITHOUT_CLASSIFICATION	9.42991150059931E-5	IMPLEMENTATION
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9997987497915192	WITHOUT_CLASSIFICATION	2.0125020848079636E-4	IMPLEMENTATION
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9997442246811261	WITHOUT_CLASSIFICATION	2.557753188738749E-4	IMPLEMENTATION
// if arity 1, just compile the one element to save us the array cost	WITHOUT_CLASSIFICATION	0.9999976571627026	WITHOUT_CLASSIFICATION	2.3428372974453817E-6	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.999970764908297	WITHOUT_CLASSIFICATION	2.9235091703083797E-5	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.999970764908297	WITHOUT_CLASSIFICATION	2.9235091703083797E-5	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.999970764908297	WITHOUT_CLASSIFICATION	2.9235091703083797E-5	IMPLEMENTATION
// compile into array	WITHOUT_CLASSIFICATION	0.99970106602176	WITHOUT_CLASSIFICATION	2.989339782399751E-4	IMPLEMENTATION
// compile first node as non-expr and compile second node	WITHOUT_CLASSIFICATION	0.9997866592471696	WITHOUT_CLASSIFICATION	2.1334075283044286E-4	IMPLEMENTATION
// check if it's an immediate, and don't outline	WITHOUT_CLASSIFICATION	0.9999772506002489	WITHOUT_CLASSIFICATION	2.274939975114629E-5	IMPLEMENTATION
// condition is always true, just compile it and not body	WITHOUT_CLASSIFICATION	0.9994121998242333	WITHOUT_CLASSIFICATION	5.878001757665396E-4	IMPLEMENTATION
// force static scope to claim restarg at 0, so it only implements the [] version of __file__	WITHOUT_CLASSIFICATION	0.999760648895071	WITHOUT_CLASSIFICATION	2.3935110492901378E-4	IMPLEMENTATION
// create method for toplevel of script	WITHOUT_CLASSIFICATION	0.9994038134187209	WITHOUT_CLASSIFICATION	5.96186581279195E-4	IMPLEMENTATION
// it's a multiple-statement body, iterate over all elements in turn and chain if it get too long	WITHOUT_CLASSIFICATION	0.9999997277844291	WITHOUT_CLASSIFICATION	2.722155707867424E-7	IMPLEMENTATION
// send it along as arity-specific, we don't need the array	WITHOUT_CLASSIFICATION	0.9973511572837384	WITHOUT_CLASSIFICATION	0.00264884271626169	IMPLEMENTATION
// single-statement body, just compile it	WITHOUT_CLASSIFICATION	0.9998661293508541	WITHOUT_CLASSIFICATION	1.3387064914592475E-4	IMPLEMENTATION
// leave as a normal array	WITHOUT_CLASSIFICATION	0.9998700265583436	WITHOUT_CLASSIFICATION	1.2997344165638299E-4	IMPLEMENTATION
// This method has JITed already or has been abandoned. Bail out.	WITHOUT_CLASSIFICATION	0.9972917411160975	WITHOUT_CLASSIFICATION	0.002708258883902396	IMPLEMENTATION
// The cache is full. Abandon JIT for this method and bail out.	WITHOUT_CLASSIFICATION	0.9986226368699875	WITHOUT_CLASSIFICATION	0.00137736313001249	IMPLEMENTATION
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9995519481451178	WITHOUT_CLASSIFICATION	4.4805185488226414E-4	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9996758628674707	WITHOUT_CLASSIFICATION	3.2413713252927765E-4	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9996758628674707	WITHOUT_CLASSIFICATION	3.2413713252927765E-4	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9919483790847584	WITHOUT_CLASSIFICATION	0.008051620915241586	IMPLEMENTATION
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9965802606789301	WITHOUT_CLASSIFICATION	0.0034197393210698337	IMPLEMENTATION
// try optz version	WITHOUT_CLASSIFICATION	0.9985008576751692	WITHOUT_CLASSIFICATION	0.0014991423248308696	IMPLEMENTATION
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999594300366699	WITHOUT_CLASSIFICATION	4.056996333012944E-5	IMPLEMENTATION
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9987424974550433	WITHOUT_CLASSIFICATION	0.0012575025449566366	IMPLEMENTATION
// sizes must match	WITHOUT_CLASSIFICATION	0.9989549533624041	WITHOUT_CLASSIFICATION	0.0010450466375958906	IMPLEMENTATION
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9992513474013598	WITHOUT_CLASSIFICATION	7.486525986403025E-4	IMPLEMENTATION
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999687194070588	WITHOUT_CLASSIFICATION	3.128059294132171E-5	IMPLEMENTATION
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9992004680343725	WITHOUT_CLASSIFICATION	7.995319656274848E-4	IMPLEMENTATION
// done processing args	WITHOUT_CLASSIFICATION	0.999905700884994	WITHOUT_CLASSIFICATION	9.42991150059931E-5	IMPLEMENTATION
// Check if the method has been explicitly excluded	WITHOUT_CLASSIFICATION	0.9992036266650504	WITHOUT_CLASSIFICATION	7.963733349496606E-4	IMPLEMENTATION
// class could not be found nor generated; give up on JIT and bail out	WITHOUT_CLASSIFICATION	0.9997622559951073	WITHOUT_CLASSIFICATION	2.3774400489262192E-4	IMPLEMENTATION
// successfully got back a jitted method	WITHOUT_CLASSIFICATION	0.9965909443225137	WITHOUT_CLASSIFICATION	0.0034090556774862956	IMPLEMENTATION
// finally, grab the script	WITHOUT_CLASSIFICATION	0.9998444305147737	WITHOUT_CLASSIFICATION	1.5556948522636824E-4	IMPLEMENTATION
// logEvery n methods based on configuration	WITHOUT_CLASSIFICATION	0.9998172666366281	WITHOUT_CLASSIFICATION	1.8273336337194763E-4	IMPLEMENTATION
// Time the compilation	WITHOUT_CLASSIFICATION	0.9997736521628736	WITHOUT_CLASSIFICATION	2.2634783712625637E-4	IMPLEMENTATION
// we have a body, do a full-on method	WITHOUT_CLASSIFICATION	0.9938784770913448	WITHOUT_CLASSIFICATION	0.006121522908655249	IMPLEMENTATION
// If we don't have a body, check for required or opt args // if opt args, they could have side effects // if required args, need to raise errors if too few args passed // otherwise, method does nothing, make it a nop	WITHOUT_CLASSIFICATION	0.9992233697287076	WITHOUT_CLASSIFICATION	7.766302712923281E-4	IMPLEMENTATION
// if we haven't already decided on a do-nothing call	WITHOUT_CLASSIFICATION	0.9999476160925999	WITHOUT_CLASSIFICATION	5.2383907400179175E-5	IMPLEMENTATION
// only supports simple parallel assignment of up to 4 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999963865194267	WITHOUT_CLASSIFICATION	3.6134805732949385E-6	IMPLEMENTATION
// normal items at the front or back of the masgn	WITHOUT_CLASSIFICATION	0.9992757182275434	WITHOUT_CLASSIFICATION	7.242817724566758E-4	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999299422951748	WITHOUT_CLASSIFICATION	7.00577048252371E-5	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999140693352692	WITHOUT_CLASSIFICATION	8.593066473073556E-5	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999124209920068	WITHOUT_CLASSIFICATION	8.757900799317009E-5	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999635634348194	WITHOUT_CLASSIFICATION	3.643656518048075E-5	IMPLEMENTATION
// end of variable scope	WITHOUT_CLASSIFICATION	0.9998025748177157	WITHOUT_CLASSIFICATION	1.9742518228439243E-4	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9981027436669508	WITHOUT_CLASSIFICATION	0.001897256333049057	IMPLEMENTATION
// Define the annotation for the method	WITHOUT_CLASSIFICATION	0.9987113788759384	WITHOUT_CLASSIFICATION	0.0012886211240615197	IMPLEMENTATION
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.999940499221664	WITHOUT_CLASSIFICATION	5.9500778336119835E-5	IMPLEMENTATION
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9994260067919841	WITHOUT_CLASSIFICATION	5.739932080157578E-4	IMPLEMENTATION
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9996773864947707	WITHOUT_CLASSIFICATION	3.2261350522932644E-4	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9996802362611005	WITHOUT_CLASSIFICATION	3.1976373889949875E-4	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9996802362611005	WITHOUT_CLASSIFICATION	3.1976373889949875E-4	IMPLEMENTATION
// value is already on stack, save it for later	WITHOUT_CLASSIFICATION	0.9999604257210202	WITHOUT_CLASSIFICATION	3.957427897977479E-5	IMPLEMENTATION
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9738447290673458	WITHOUT_CLASSIFICATION	0.026155270932654292	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9998920580249556	WITHOUT_CLASSIFICATION	1.0794197504441973E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9998920580249556	WITHOUT_CLASSIFICATION	1.0794197504441973E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9998920580249556	WITHOUT_CLASSIFICATION	1.0794197504441973E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9998920580249556	WITHOUT_CLASSIFICATION	1.0794197504441973E-4	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9998920580249556	WITHOUT_CLASSIFICATION	1.0794197504441973E-4	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9998920580249556	WITHOUT_CLASSIFICATION	1.0794197504441973E-4	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9998920580249556	WITHOUT_CLASSIFICATION	1.0794197504441973E-4	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.9998920580249556	WITHOUT_CLASSIFICATION	1.0794197504441973E-4	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.9998920580249556	WITHOUT_CLASSIFICATION	1.0794197504441973E-4	IMPLEMENTATION
/*arg2*/	WITHOUT_CLASSIFICATION	0.9998920580249556	WITHOUT_CLASSIFICATION	1.0794197504441973E-4	IMPLEMENTATION
/*args*/	WITHOUT_CLASSIFICATION	0.9998920580249556	WITHOUT_CLASSIFICATION	1.0794197504441973E-4	IMPLEMENTATION
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9738447290673458	WITHOUT_CLASSIFICATION	0.026155270932654292	IMPLEMENTATION
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9996146339162473	WITHOUT_CLASSIFICATION	3.8536608375274784E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9998920580249556	WITHOUT_CLASSIFICATION	1.0794197504441973E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9998920580249556	WITHOUT_CLASSIFICATION	1.0794197504441973E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9998920580249556	WITHOUT_CLASSIFICATION	1.0794197504441973E-4	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9998920580249556	WITHOUT_CLASSIFICATION	1.0794197504441973E-4	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9998920580249556	WITHOUT_CLASSIFICATION	1.0794197504441973E-4	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.9998920580249556	WITHOUT_CLASSIFICATION	1.0794197504441973E-4	IMPLEMENTATION
/*args*/	WITHOUT_CLASSIFICATION	0.9998920580249556	WITHOUT_CLASSIFICATION	1.0794197504441973E-4	IMPLEMENTATION
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9995336591673778	WITHOUT_CLASSIFICATION	4.663408326221272E-4	IMPLEMENTATION
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9995336591673778	WITHOUT_CLASSIFICATION	4.663408326221272E-4	IMPLEMENTATION
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.999943253898477	WITHOUT_CLASSIFICATION	5.674610152304617E-5	IMPLEMENTATION
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.999943253898477	WITHOUT_CLASSIFICATION	5.674610152304617E-5	IMPLEMENTATION
// invoke	WITHOUT_CLASSIFICATION	0.9999715264852088	WITHOUT_CLASSIFICATION	2.8473514791069676E-5	IMPLEMENTATION
// invoke	WITHOUT_CLASSIFICATION	0.9999715264852088	WITHOUT_CLASSIFICATION	2.8473514791069676E-5	IMPLEMENTATION
// check if it's true, ending if so	WITHOUT_CLASSIFICATION	0.9999284481356958	WITHOUT_CLASSIFICATION	7.155186430417536E-5	IMPLEMENTATION
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.99815385579484	WITHOUT_CLASSIFICATION	0.0018461442051601494	IMPLEMENTATION
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.99815385579484	WITHOUT_CLASSIFICATION	0.0018461442051601494	IMPLEMENTATION
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9996225827287624	WITHOUT_CLASSIFICATION	3.7741727123759175E-4	IMPLEMENTATION
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9996225827287624	WITHOUT_CLASSIFICATION	3.7741727123759175E-4	IMPLEMENTATION
// eval value for assignment	WITHOUT_CLASSIFICATION	0.999946808666412	WITHOUT_CLASSIFICATION	5.319133358811656E-5	IMPLEMENTATION
// call site	WITHOUT_CLASSIFICATION	0.9985034763466042	WITHOUT_CLASSIFICATION	0.0014965236533957852	IMPLEMENTATION
// call site	WITHOUT_CLASSIFICATION	0.9985034763466042	WITHOUT_CLASSIFICATION	0.0014965236533957852	IMPLEMENTATION
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9984775724591511	WITHOUT_CLASSIFICATION	0.0015224275408489002	IMPLEMENTATION
// check if it's true, ending if not	WITHOUT_CLASSIFICATION	0.9973898760236135	WITHOUT_CLASSIFICATION	0.002610123976386352	IMPLEMENTATION
// eval value and save it	WITHOUT_CLASSIFICATION	0.9999271850987539	WITHOUT_CLASSIFICATION	7.281490124602201E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9998920580249556	WITHOUT_CLASSIFICATION	1.0794197504441973E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9998920580249556	WITHOUT_CLASSIFICATION	1.0794197504441973E-4	IMPLEMENTATION
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9984775724591511	WITHOUT_CLASSIFICATION	0.0015224275408489002	IMPLEMENTATION
// receiver, args, result, value	WITHOUT_CLASSIFICATION	0.9998448467035518	WITHOUT_CLASSIFICATION	1.551532964482496E-4	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9990652123136763	WITHOUT_CLASSIFICATION	9.347876863236658E-4	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9990652123136763	WITHOUT_CLASSIFICATION	9.347876863236658E-4	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9990652123136763	WITHOUT_CLASSIFICATION	9.347876863236658E-4	IMPLEMENTATION
// super uses current block if none given	WITHOUT_CLASSIFICATION	0.9997906974850242	WITHOUT_CLASSIFICATION	2.093025149756384E-4	IMPLEMENTATION
// args	WITHOUT_CLASSIFICATION	0.9999727339555111	WITHOUT_CLASSIFICATION	2.7266044488919892E-5	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.99996496030933	WITHOUT_CLASSIFICATION	3.5039690669922656E-5	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.99996496030933	WITHOUT_CLASSIFICATION	3.5039690669922656E-5	IMPLEMENTATION
// no args, no block	WITHOUT_CLASSIFICATION	0.998730741803957	WITHOUT_CLASSIFICATION	0.0012692581960429077	IMPLEMENTATION
// no args, with block	WITHOUT_CLASSIFICATION	0.9996306630507239	WITHOUT_CLASSIFICATION	3.693369492760943E-4	IMPLEMENTATION
// with args, no block	WITHOUT_CLASSIFICATION	0.9996306630507239	WITHOUT_CLASSIFICATION	3.6933694927609464E-4	IMPLEMENTATION
// with args, with block	WITHOUT_CLASSIFICATION	0.9996740751086896	WITHOUT_CLASSIFICATION	3.259248913105278E-4	IMPLEMENTATION
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9997467728107063	WITHOUT_CLASSIFICATION	2.5322718929362756E-4	IMPLEMENTATION
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999241233864276	WITHOUT_CLASSIFICATION	7.587661357246926E-5	IMPLEMENTATION
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999241233864276	WITHOUT_CLASSIFICATION	7.587661357246926E-5	IMPLEMENTATION
// arg and receiver already present on the stack	WITHOUT_CLASSIFICATION	0.9996075853461948	WITHOUT_CLASSIFICATION	3.9241465380529365E-4	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9998920580249556	WITHOUT_CLASSIFICATION	1.0794197504441973E-4	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9998920580249556	WITHOUT_CLASSIFICATION	1.0794197504441973E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9998920580249556	WITHOUT_CLASSIFICATION	1.0794197504441973E-4	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9990652123136763	WITHOUT_CLASSIFICATION	9.347876863236658E-4	IMPLEMENTATION
// args	WITHOUT_CLASSIFICATION	0.9999727339555111	WITHOUT_CLASSIFICATION	2.7266044488919892E-5	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.99996496030933	WITHOUT_CLASSIFICATION	3.5039690669922656E-5	IMPLEMENTATION
// no args, no block	WITHOUT_CLASSIFICATION	0.998730741803957	WITHOUT_CLASSIFICATION	0.0012692581960429077	IMPLEMENTATION
// no args, with block	WITHOUT_CLASSIFICATION	0.9996306630507239	WITHOUT_CLASSIFICATION	3.693369492760943E-4	IMPLEMENTATION
// with args, no block	WITHOUT_CLASSIFICATION	0.9996306630507239	WITHOUT_CLASSIFICATION	3.6933694927609464E-4	IMPLEMENTATION
// with args, with block	WITHOUT_CLASSIFICATION	0.9996740751086896	WITHOUT_CLASSIFICATION	3.259248913105278E-4	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9998920580249556	WITHOUT_CLASSIFICATION	1.0794197504441973E-4	IMPLEMENTATION
// retrieve scope from scopes array	WITHOUT_CLASSIFICATION	0.9999449849915827	WITHOUT_CLASSIFICATION	5.5015008417196174E-5	IMPLEMENTATION
// use numbered access method	WITHOUT_CLASSIFICATION	0.9881844083373227	WITHOUT_CLASSIFICATION	0.011815591662677294	IMPLEMENTATION
// retrieve call site from sites array	WITHOUT_CLASSIFICATION	0.9999091225672871	WITHOUT_CLASSIFICATION	9.087743271279077E-5	IMPLEMENTATION
// add name to call site list	WITHOUT_CLASSIFICATION	0.9992623821158207	WITHOUT_CLASSIFICATION	7.376178841791196E-4	IMPLEMENTATION
// module is on top of stack	WITHOUT_CLASSIFICATION	0.9995852039778259	WITHOUT_CLASSIFICATION	4.1479602217410754E-4	IMPLEMENTATION
// build scope names string	WITHOUT_CLASSIFICATION	0.9999946197692584	WITHOUT_CLASSIFICATION	5.380230741612274E-6	IMPLEMENTATION
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999876816840664	WITHOUT_CLASSIFICATION	1.231831593363723E-5	IMPLEMENTATION
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999876816840664	WITHOUT_CLASSIFICATION	1.231831593363723E-5	IMPLEMENTATION
// generate call sites initialization code	WITHOUT_CLASSIFICATION	0.9996003583973792	WITHOUT_CLASSIFICATION	3.996416026209184E-4	IMPLEMENTATION
// generate symbols initialization code	WITHOUT_CLASSIFICATION	0.9997504709875659	WITHOUT_CLASSIFICATION	2.495290124341904E-4	IMPLEMENTATION
// generate fixnums initialization code	WITHOUT_CLASSIFICATION	0.9997504709875659	WITHOUT_CLASSIFICATION	2.495290124341904E-4	IMPLEMENTATION
// generate constants initialization code	WITHOUT_CLASSIFICATION	0.9998720425479741	WITHOUT_CLASSIFICATION	1.2795745202588652E-4	IMPLEMENTATION
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9997504709875659	WITHOUT_CLASSIFICATION	2.495290124341904E-4	IMPLEMENTATION
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9997504709875659	WITHOUT_CLASSIFICATION	2.495290124341904E-4	IMPLEMENTATION
// generate variable readers initialization code	WITHOUT_CLASSIFICATION	0.9995531882012284	WITHOUT_CLASSIFICATION	4.4681179877169964E-4	IMPLEMENTATION
// generate variable writers initialization code	WITHOUT_CLASSIFICATION	0.9997656305833434	WITHOUT_CLASSIFICATION	2.3436941665666474E-4	IMPLEMENTATION
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9997059242939432	WITHOUT_CLASSIFICATION	2.9407570605677954E-4	IMPLEMENTATION
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9997059242939432	WITHOUT_CLASSIFICATION	2.9407570605677954E-4	IMPLEMENTATION
// generate bytelists initialization code	WITHOUT_CLASSIFICATION	0.9997504709875659	WITHOUT_CLASSIFICATION	2.495290124341904E-4	IMPLEMENTATION
// generate method cache initialization code	WITHOUT_CLASSIFICATION	0.9960008361779741	WITHOUT_CLASSIFICATION	0.003999163822025916	IMPLEMENTATION
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9997467728107063	WITHOUT_CLASSIFICATION	2.5322718929362756E-4	IMPLEMENTATION
// use IRubyObject[]	WITHOUT_CLASSIFICATION	0.9978188051770039	WITHOUT_CLASSIFICATION	0.0021811948229960103	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9998869585948379	WITHOUT_CLASSIFICATION	1.1304140516205312E-4	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.999891270535609	WITHOUT_CLASSIFICATION	1.0872946439107703E-4	IMPLEMENTATION
// No point in updating number if last number was same value.	WITHOUT_CLASSIFICATION	0.999999870111175	WITHOUT_CLASSIFICATION	1.2988882496452174E-7	IMPLEMENTATION
// load Object under value	WITHOUT_CLASSIFICATION	0.9998986118400248	WITHOUT_CLASSIFICATION	1.013881599751651E-4	IMPLEMENTATION
// put under object array already present	WITHOUT_CLASSIFICATION	0.9992612430445175	WITHOUT_CLASSIFICATION	7.38756955482494E-4	IMPLEMENTATION
// if element count is less than 6, use helper methods	WITHOUT_CLASSIFICATION	0.9999955548130861	WITHOUT_CLASSIFICATION	4.445186913825433E-6	IMPLEMENTATION
// This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements	WITHOUT_CLASSIFICATION	0.9999999626644467	WITHOUT_CLASSIFICATION	3.733555339899463E-8	IMPLEMENTATION
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999753721630215	WITHOUT_CLASSIFICATION	2.4627836978601528E-5	IMPLEMENTATION
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999753721630215	WITHOUT_CLASSIFICATION	2.4627836978601528E-5	IMPLEMENTATION
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9993410589483669	WITHOUT_CLASSIFICATION	6.589410516332045E-4	IMPLEMENTATION
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9993410589483669	WITHOUT_CLASSIFICATION	6.589410516332045E-4	IMPLEMENTATION
// use specific-arity for as much as possible	WITHOUT_CLASSIFICATION	0.9998074608455635	WITHOUT_CLASSIFICATION	1.9253915443653854E-4	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.999488103841449	WITHOUT_CLASSIFICATION	5.118961585510355E-4	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.999488103841449	WITHOUT_CLASSIFICATION	5.118961585510355E-4	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.999488103841449	WITHOUT_CLASSIFICATION	5.118961585510355E-4	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999459775051336	WITHOUT_CLASSIFICATION	5.402249486647505E-5	IMPLEMENTATION
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9996288090899667	WITHOUT_CLASSIFICATION	3.7119091003336597E-4	IMPLEMENTATION
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9996288090899667	WITHOUT_CLASSIFICATION	3.7119091003336597E-4	IMPLEMENTATION
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999325126209615	WITHOUT_CLASSIFICATION	6.748737903847037E-5	IMPLEMENTATION
// check the condition	WITHOUT_CLASSIFICATION	0.9996447839508794	WITHOUT_CLASSIFICATION	3.5521604912058384E-4	IMPLEMENTATION
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999304703179571	WITHOUT_CLASSIFICATION	6.95296820428478E-5	IMPLEMENTATION
// skip catch block	WITHOUT_CLASSIFICATION	0.9962567178352109	WITHOUT_CLASSIFICATION	0.003743282164789123	IMPLEMENTATION
// catch logic for flow-control: next, break	WITHOUT_CLASSIFICATION	0.9998861619799168	WITHOUT_CLASSIFICATION	1.1383802008327002E-4	IMPLEMENTATION
// next jump	WITHOUT_CLASSIFICATION	0.9964355309600936	WITHOUT_CLASSIFICATION	0.0035644690399063224	IMPLEMENTATION
// exceptionNext target is for a next that doesn't push a new value, like this one	WITHOUT_CLASSIFICATION	0.9966173485780581	WITHOUT_CLASSIFICATION	0.0033826514219419887	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999140693352692	WITHOUT_CLASSIFICATION	8.593066473073556E-5	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999140693352692	WITHOUT_CLASSIFICATION	8.593066473073556E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999459775051336	WITHOUT_CLASSIFICATION	5.402249486647505E-5	IMPLEMENTATION
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999325126209615	WITHOUT_CLASSIFICATION	6.748737903847037E-5	IMPLEMENTATION
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999550650927573	WITHOUT_CLASSIFICATION	4.493490724270811E-5	IMPLEMENTATION
// check the condition	WITHOUT_CLASSIFICATION	0.9996447839508794	WITHOUT_CLASSIFICATION	3.5521604912058384E-4	IMPLEMENTATION
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999304703179571	WITHOUT_CLASSIFICATION	6.95296820428478E-5	IMPLEMENTATION
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9998541592619519	WITHOUT_CLASSIFICATION	1.4584073804799696E-4	IMPLEMENTATION
// break jump	WITHOUT_CLASSIFICATION	0.9990847265032149	WITHOUT_CLASSIFICATION	9.152734967850616E-4	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9996838484926936	WITHOUT_CLASSIFICATION	3.161515073064181E-4	IMPLEMENTATION
//[reg]	WITHOUT_CLASSIFICATION	0.9998920580249556	WITHOUT_CLASSIFICATION	1.0794197504441973E-4	IMPLEMENTATION
// for regular expressions with the /o flag	WITHOUT_CLASSIFICATION	0.9996897001387857	WITHOUT_CLASSIFICATION	3.102998612142755E-4	IMPLEMENTATION
// inside a loop, jump to body	WITHOUT_CLASSIFICATION	0.9999640396850736	WITHOUT_CLASSIFICATION	3.596031492643181E-5	IMPLEMENTATION
// inside a loop, jump to conditional	WITHOUT_CLASSIFICATION	0.9998711762408486	WITHOUT_CLASSIFICATION	1.288237591512764E-4	IMPLEMENTATION
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9998541592619519	WITHOUT_CLASSIFICATION	1.4584073804799696E-4	IMPLEMENTATION
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999766713176957	WITHOUT_CLASSIFICATION	2.3328682304285873E-5	IMPLEMENTATION
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999766713176957	WITHOUT_CLASSIFICATION	2.3328682304285873E-5	IMPLEMENTATION
// if more than 4 vars, get values array too	WITHOUT_CLASSIFICATION	0.9999963766969961	WITHOUT_CLASSIFICATION	3.6233030038790166E-6	IMPLEMENTATION
// retry handling in the rescue block	WITHOUT_CLASSIFICATION	0.9998558779076215	WITHOUT_CLASSIFICATION	1.4412209237850418E-4	IMPLEMENTATION
// any exceptions raised must continue to be raised, skipping $! restoration	WITHOUT_CLASSIFICATION	0.9997024556213076	WITHOUT_CLASSIFICATION	2.975443786924435E-4	IMPLEMENTATION
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9989122656023527	WITHOUT_CLASSIFICATION	0.0010877343976472803	IMPLEMENTATION
// restore the original exception	WITHOUT_CLASSIFICATION	0.999172427497859	WITHOUT_CLASSIFICATION	8.275725021410556E-4	IMPLEMENTATION
// Handle Flow exceptions, just propagating them	WITHOUT_CLASSIFICATION	0.9999737613697488	WITHOUT_CLASSIFICATION	2.623863025121412E-5	IMPLEMENTATION
// rethrow to outer flow catcher	WITHOUT_CLASSIFICATION	0.9998529795136305	WITHOUT_CLASSIFICATION	1.4702048636950225E-4	IMPLEMENTATION
// Handle Ruby exceptions (RaiseException)	WITHOUT_CLASSIFICATION	0.9997666419116021	WITHOUT_CLASSIFICATION	2.3335808839790572E-4	IMPLEMENTATION
// inside a loop, break out of it // go to end of loop, leaving break value on stack	WITHOUT_CLASSIFICATION	0.9999464404443253	WITHOUT_CLASSIFICATION	5.355955567466341E-5	IMPLEMENTATION
// false // zero	WITHOUT_CLASSIFICATION	0.9994985300396944	WITHOUT_CLASSIFICATION	5.01469960305711E-4	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9996408202716367	WITHOUT_CLASSIFICATION	3.591797283632321E-4	IMPLEMENTATION
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9989122656023527	WITHOUT_CLASSIFICATION	0.0010877343976472803	IMPLEMENTATION
// restore the original exception	WITHOUT_CLASSIFICATION	0.999172427497859	WITHOUT_CLASSIFICATION	8.275725021410556E-4	IMPLEMENTATION
// retry handling in the rescue blocks	WITHOUT_CLASSIFICATION	0.9998798216456758	WITHOUT_CLASSIFICATION	1.2017835432424647E-4	IMPLEMENTATION
// push false	WITHOUT_CLASSIFICATION	0.9994709942704025	WITHOUT_CLASSIFICATION	5.290057295974263E-4	IMPLEMENTATION
//method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));	WITHOUT_CLASSIFICATION	0.9990655965962804	WITHOUT_CLASSIFICATION	9.344034037195148E-4	IMPLEMENTATION
//method.ifnonnull(trueLabel);	WITHOUT_CLASSIFICATION	0.999216654151653	WITHOUT_CLASSIFICATION	7.833458483471001E-4	IMPLEMENTATION
// EQ == 0 (i.e. false)   //[C]	WITHOUT_CLASSIFICATION	0.9999562082281666	WITHOUT_CLASSIFICATION	4.379177183336793E-5	IMPLEMENTATION
//[C, C] //[C, C, String] //[C, null|C]	WITHOUT_CLASSIFICATION	0.9990655965962804	WITHOUT_CLASSIFICATION	9.344034037195148E-4	IMPLEMENTATION
//[C]	WITHOUT_CLASSIFICATION	0.9998920580249556	WITHOUT_CLASSIFICATION	1.0794197504441973E-4	IMPLEMENTATION
// push true	WITHOUT_CLASSIFICATION	0.9990556636800834	WITHOUT_CLASSIFICATION	9.443363199167636E-4	IMPLEMENTATION
// EQ != 0 (i.e. true)	WITHOUT_CLASSIFICATION	0.9999281244772847	WITHOUT_CLASSIFICATION	7.187552271523366E-5	IMPLEMENTATION
//[?, ?] //[?, boolean]	WITHOUT_CLASSIFICATION	0.999216654151653	WITHOUT_CLASSIFICATION	7.833458483471001E-4	IMPLEMENTATION
//[RubyModule] //[RubyModule, String]	WITHOUT_CLASSIFICATION	0.9990655965962804	WITHOUT_CLASSIFICATION	9.344034037195148E-4	IMPLEMENTATION
//[boolean]	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
// no receiver for singleton class	WITHOUT_CLASSIFICATION	0.9999404422224576	WITHOUT_CLASSIFICATION	5.9557777542445874E-5	IMPLEMENTATION
// but there's a superclass passed in, use it	WITHOUT_CLASSIFICATION	0.9989867513070742	WITHOUT_CLASSIFICATION	0.0010132486929259334	IMPLEMENTATION
// we re-set self to the class, but store the old self in a temporary local variable // this is to prevent it GCing in case the singleton is short-lived	WITHOUT_CLASSIFICATION	0.999978573476123	WITHOUT_CLASSIFICATION	2.142652387704183E-5	IMPLEMENTATION
// set self to the class	WITHOUT_CLASSIFICATION	0.9998873183757946	WITHOUT_CLASSIFICATION	1.1268162420539435E-4	IMPLEMENTATION
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9990652123136763	WITHOUT_CLASSIFICATION	9.347876863236658E-4	IMPLEMENTATION
// static scope	WITHOUT_CLASSIFICATION	0.9989496532535035	WITHOUT_CLASSIFICATION	0.0010503467464965327	IMPLEMENTATION
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999829771057616	WITHOUT_CLASSIFICATION	1.7022894238442393E-5	IMPLEMENTATION
// new instance to invoke run against	WITHOUT_CLASSIFICATION	0.9998662957040613	WITHOUT_CLASSIFICATION	1.3370429593882125E-4	IMPLEMENTATION
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9990652123136763	WITHOUT_CLASSIFICATION	9.347876863236658E-4	IMPLEMENTATION
// static scope	WITHOUT_CLASSIFICATION	0.9989496532535035	WITHOUT_CLASSIFICATION	0.0010503467464965327	IMPLEMENTATION
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999829771057616	WITHOUT_CLASSIFICATION	1.7022894238442393E-5	IMPLEMENTATION
// finally with exception	WITHOUT_CLASSIFICATION	0.99944139178281	WITHOUT_CLASSIFICATION	5.586082171899118E-4	IMPLEMENTATION
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9973732537943609	WITHOUT_CLASSIFICATION	0.002626746205638977	IMPLEMENTATION
// otherwise, there's a receiver, so we pass that in directly for the sclass logic	WITHOUT_CLASSIFICATION	0.9999564776401871	WITHOUT_CLASSIFICATION	4.352235981299163E-5	IMPLEMENTATION
// original exception is on stack	WITHOUT_CLASSIFICATION	0.9991386886846503	WITHOUT_CLASSIFICATION	8.61311315349694E-4	IMPLEMENTATION
// RaiseException is on stack, get RubyException out	WITHOUT_CLASSIFICATION	0.9998831735852202	WITHOUT_CLASSIFICATION	1.1682641477983718E-4	IMPLEMENTATION
// updating position for same line; skip	WITHOUT_CLASSIFICATION	0.9997151264114884	WITHOUT_CLASSIFICATION	2.8487358851160386E-4	IMPLEMENTATION
// callbacks to fill in method body	WITHOUT_CLASSIFICATION	0.9999512828540884	WITHOUT_CLASSIFICATION	4.871714591158693E-5	IMPLEMENTATION
// prepare to call "def" utility method to handle def logic	WITHOUT_CLASSIFICATION	0.9903238614920528	WITHOUT_CLASSIFICATION	0.009676138507947237	IMPLEMENTATION
// script object	WITHOUT_CLASSIFICATION	0.9995647136908177	WITHOUT_CLASSIFICATION	4.35286309182202E-4	IMPLEMENTATION
// arities	WITHOUT_CLASSIFICATION	0.999970764908297	WITHOUT_CLASSIFICATION	2.9235091703083797E-5	IMPLEMENTATION
// TODO assuming case is a fixnum	WITHOUT_CLASSIFICATION	0.7085525095791604	WITHOUT_CLASSIFICATION	0.2914474904208396	IMPLEMENTATION
// we have an input case, prepare branching logic	WITHOUT_CLASSIFICATION	0.9999329770689759	WITHOUT_CLASSIFICATION	6.702293102402432E-5	IMPLEMENTATION
// we have optimized switch cases, build a lookupswitch	WITHOUT_CLASSIFICATION	0.999619907152202	WITHOUT_CLASSIFICATION	3.8009284779799983E-4	IMPLEMENTATION
// checkcast the value; if match, fast path; otherwise proceed to slow logic	WITHOUT_CLASSIFICATION	0.9992562635149507	WITHOUT_CLASSIFICATION	7.437364850494012E-4	IMPLEMENTATION
// expression-based tests + bodies	WITHOUT_CLASSIFICATION	0.9998499279668741	WITHOUT_CLASSIFICATION	1.5007203312590437E-4	IMPLEMENTATION
// normal case, create a new label	WITHOUT_CLASSIFICATION	0.9998213650866161	WITHOUT_CLASSIFICATION	1.7863491338393665E-4	IMPLEMENTATION
// last conditional case, use defaultCase	WITHOUT_CLASSIFICATION	0.9996387656495593	WITHOUT_CLASSIFICATION	3.612343504407064E-4	IMPLEMENTATION
// do nothing; arity check is done before call	WITHOUT_CLASSIFICATION	0.9998245403199202	WITHOUT_CLASSIFICATION	1.7545968007969727E-4	IMPLEMENTATION
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999773643016212	WITHOUT_CLASSIFICATION	2.263569837870776E-5	IMPLEMENTATION
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999218275949384	WITHOUT_CLASSIFICATION	7.817240506163335E-5	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.9999264612672705	WITHOUT_CLASSIFICATION	7.353873272954063E-5	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.9997826417283519	WITHOUT_CLASSIFICATION	2.1735827164819207E-4	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.9997826417283519	WITHOUT_CLASSIFICATION	2.1735827164819207E-4	IMPLEMENTATION
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999042477751888	WITHOUT_CLASSIFICATION	9.575222481122916E-5	IMPLEMENTATION
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999042477751888	WITHOUT_CLASSIFICATION	9.575222481122916E-5	IMPLEMENTATION
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9994320594964925	WITHOUT_CLASSIFICATION	5.679405035075349E-4	IMPLEMENTATION
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9994320594964925	WITHOUT_CLASSIFICATION	5.679405035075349E-4	IMPLEMENTATION
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999615874454763	WITHOUT_CLASSIFICATION	3.8412554523782216E-5	IMPLEMENTATION
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9965368258002497	WITHOUT_CLASSIFICATION	0.003463174199750184	IMPLEMENTATION
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999914532985943	WITHOUT_CLASSIFICATION	8.546701405705524E-6	IMPLEMENTATION
// if there's args left and we want them, assign to rest arg	WITHOUT_CLASSIFICATION	0.9994862595601539	WITHOUT_CLASSIFICATION	5.137404398460435E-4	IMPLEMENTATION
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999962456683856	WITHOUT_CLASSIFICATION	3.7543316143688866E-6	IMPLEMENTATION
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999697482888399	WITHOUT_CLASSIFICATION	3.0251711160064125E-5	IMPLEMENTATION
// first, iterate over all pre args	WITHOUT_CLASSIFICATION	0.9998773011304086	WITHOUT_CLASSIFICATION	1.2269886959132264E-4	IMPLEMENTATION
// then optional args	WITHOUT_CLASSIFICATION	0.9998349662948484	WITHOUT_CLASSIFICATION	1.6503370515157348E-4	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999140693352692	WITHOUT_CLASSIFICATION	8.593066473073556E-5	IMPLEMENTATION
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999615874454763	WITHOUT_CLASSIFICATION	3.8412554523782216E-5	IMPLEMENTATION
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9965368258002497	WITHOUT_CLASSIFICATION	0.003463174199750184	IMPLEMENTATION
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999914532985943	WITHOUT_CLASSIFICATION	8.546701405705524E-6	IMPLEMENTATION
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999962456683856	WITHOUT_CLASSIFICATION	3.7543316143688866E-6	IMPLEMENTATION
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999697482888399	WITHOUT_CLASSIFICATION	3.0251711160064125E-5	IMPLEMENTATION
// if rest args, excluding post args	WITHOUT_CLASSIFICATION	0.9999447255309061	WITHOUT_CLASSIFICATION	5.5274469093908336E-5	IMPLEMENTATION
// finally, post args	WITHOUT_CLASSIFICATION	0.9998106170098051	WITHOUT_CLASSIFICATION	1.8938299019492517E-4	IMPLEMENTATION
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9970743287298562	WITHOUT_CLASSIFICATION	0.002925671270143653	IMPLEMENTATION
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9970743287298562	WITHOUT_CLASSIFICATION	0.002925671270143653	IMPLEMENTATION
// unwrap scopes to appropriate depth	WITHOUT_CLASSIFICATION	0.9997260969345582	WITHOUT_CLASSIFICATION	2.739030654418422E-4	IMPLEMENTATION
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999991498841714	WITHOUT_CLASSIFICATION	8.501158284981126E-7	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.988873817194786	WITHOUT_CLASSIFICATION	0.01112618280521401	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9995187095708523	WITHOUT_CLASSIFICATION	4.8129042914775286E-4	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9995187095708523	WITHOUT_CLASSIFICATION	4.8129042914775286E-4	IMPLEMENTATION
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999426994140911	WITHOUT_CLASSIFICATION	5.730058590877173E-5	IMPLEMENTATION
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9996499753843703	WITHOUT_CLASSIFICATION	3.500246156297378E-4	IMPLEMENTATION
// store the local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999876885269248	WITHOUT_CLASSIFICATION	1.2311473075220854E-5	IMPLEMENTATION
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9996008065828825	WITHOUT_CLASSIFICATION	3.9919341711744486E-4	IMPLEMENTATION
// return in a class body raises error	WITHOUT_CLASSIFICATION	0.9999943470906356	WITHOUT_CLASSIFICATION	5.652909364359438E-6	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999124209920068	WITHOUT_CLASSIFICATION	8.757900799317009E-5	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999635634348194	WITHOUT_CLASSIFICATION	3.643656518048075E-5	IMPLEMENTATION
// end of variable scope	WITHOUT_CLASSIFICATION	0.9998025748177157	WITHOUT_CLASSIFICATION	1.9742518228439243E-4	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9981027436669508	WITHOUT_CLASSIFICATION	0.001897256333049057	IMPLEMENTATION
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9994260067919841	WITHOUT_CLASSIFICATION	5.739932080157578E-4	IMPLEMENTATION
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9996773864947707	WITHOUT_CLASSIFICATION	3.2261350522932644E-4	IMPLEMENTATION
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999426994140911	WITHOUT_CLASSIFICATION	5.730058590877173E-5	IMPLEMENTATION
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9996499753843703	WITHOUT_CLASSIFICATION	3.500246156297378E-4	IMPLEMENTATION
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9996008065828825	WITHOUT_CLASSIFICATION	3.9919341711744486E-4	IMPLEMENTATION
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9897293066306417	WITHOUT_CLASSIFICATION	0.01027069336935824	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.988873817194786	WITHOUT_CLASSIFICATION	0.01112618280521401	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.988873817194786	WITHOUT_CLASSIFICATION	0.01112618280521401	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9996408202716367	WITHOUT_CLASSIFICATION	3.591797283632321E-4	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9996408202716367	WITHOUT_CLASSIFICATION	3.591797283632321E-4	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.8582290205151861	WITHOUT_CLASSIFICATION	0.14177097948481387	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.8582290205151861	WITHOUT_CLASSIFICATION	0.14177097948481387	IMPLEMENTATION
// store the local vars in a local variable if there are any	WITHOUT_CLASSIFICATION	0.9999995903741049	WITHOUT_CLASSIFICATION	4.0962589517283457E-7	IMPLEMENTATION
// if more than 4 locals, get and populate the locals array too	WITHOUT_CLASSIFICATION	0.9999188279171264	WITHOUT_CLASSIFICATION	8.117208287360314E-5	IMPLEMENTATION
// fill local vars with nil, to avoid checking every access.	WITHOUT_CLASSIFICATION	0.999124351354514	WITHOUT_CLASSIFICATION	8.756486454859398E-4	IMPLEMENTATION
// default for starting tempVariableIndex is ok	WITHOUT_CLASSIFICATION	0.999968728229414	WITHOUT_CLASSIFICATION	3.12717705859422E-5	IMPLEMENTATION
// store the local vars in a local variable for preparing the class (using previous scope)	WITHOUT_CLASSIFICATION	0.9999973363510749	WITHOUT_CLASSIFICATION	2.6636489251290397E-6	IMPLEMENTATION
// store the new local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999894098886485	WITHOUT_CLASSIFICATION	1.0590111351442637E-5	IMPLEMENTATION
// in 1.8 mode, this will be a RubyArray containing the arguments // in 1.9 mode, this will be an IRubyObject[]	WITHOUT_CLASSIFICATION	0.999996742796515	WITHOUT_CLASSIFICATION	3.257203485041758E-6	IMPLEMENTATION
// no variable initialization, because we're reusing parent's scope (flat)	WITHOUT_CLASSIFICATION	0.9999438742010327	WITHOUT_CLASSIFICATION	5.612579896719834E-5	IMPLEMENTATION
// for specific-index cases, clean up non-expression values	WITHOUT_CLASSIFICATION	0.9999907953397851	WITHOUT_CLASSIFICATION	9.20466021494308E-6	IMPLEMENTATION
// set up a local Ruby variable	WITHOUT_CLASSIFICATION	0.9999299422951748	WITHOUT_CLASSIFICATION	7.00577048252371E-5	IMPLEMENTATION
// if that succeeds, the others should as well	WITHOUT_CLASSIFICATION	0.9999734433931291	WITHOUT_CLASSIFICATION	2.6556606870844818E-5	IMPLEMENTATION
// verify the class	WITHOUT_CLASSIFICATION	0.999597130734063	WITHOUT_CLASSIFICATION	4.0286926593703187E-4	IMPLEMENTATION
// create dir if necessary	WITHOUT_CLASSIFICATION	0.9998985448376154	WITHOUT_CLASSIFICATION	1.0145516238459543E-4	IMPLEMENTATION
// Create the class with the appropriate class name and source file	WITHOUT_CLASSIFICATION	0.9999478885060226	WITHOUT_CLASSIFICATION	5.2111493977436785E-5	IMPLEMENTATION
// add setPosition impl, which stores filename as constant to speed updates	WITHOUT_CLASSIFICATION	0.9999208510869435	WITHOUT_CLASSIFICATION	7.914891305650197E-5	IMPLEMENTATION
// thread context	WITHOUT_CLASSIFICATION	0.996726351197031	WITHOUT_CLASSIFICATION	0.0032736488029690334	IMPLEMENTATION
// line number	WITHOUT_CLASSIFICATION	0.9994573378345651	WITHOUT_CLASSIFICATION	5.426621654348341E-4	IMPLEMENTATION
// invoke __file__ with threadcontext, self, args (null), and block (null)	WITHOUT_CLASSIFICATION	0.9997363112046193	WITHOUT_CLASSIFICATION	2.636887953807332E-4	IMPLEMENTATION
// load always uses IRubyObject[], so simple closure offset calculation here	WITHOUT_CLASSIFICATION	0.9996849282644636	WITHOUT_CLASSIFICATION	3.1507173553631577E-4	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999635634348194	WITHOUT_CLASSIFICATION	3.643656518048075E-5	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9981027436669508	WITHOUT_CLASSIFICATION	0.001897256333049057	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9996802362611005	WITHOUT_CLASSIFICATION	3.1976373889949875E-4	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.99996496030933	WITHOUT_CLASSIFICATION	3.5039690669922656E-5	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.99996496030933	WITHOUT_CLASSIFICATION	3.5039690669922656E-5	IMPLEMENTATION
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9897293066306417	WITHOUT_CLASSIFICATION	0.01027069336935824	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.988873817194786	WITHOUT_CLASSIFICATION	0.01112618280521401	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9996408202716367	WITHOUT_CLASSIFICATION	3.591797283632321E-4	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.8582290205151861	WITHOUT_CLASSIFICATION	0.14177097948481387	IMPLEMENTATION
// add Script#run impl, used for running this script with a specified threadcontext and self // root method of a script is always in __file__ method	WITHOUT_CLASSIFICATION	0.999926047909184	WITHOUT_CLASSIFICATION	7.395209081603443E-5	IMPLEMENTATION
// add main impl, used for detached or command-line execution of this script with a new runtime // root method of a script is always in stub0, method0	WITHOUT_CLASSIFICATION	0.9998972578450311	WITHOUT_CLASSIFICATION	1.0274215496874042E-4	IMPLEMENTATION
// construct static scope list of names	WITHOUT_CLASSIFICATION	0.9999402377318025	WITHOUT_CLASSIFICATION	5.976226819749832E-5	IMPLEMENTATION
// JRUBY-3014: make __FILE__ dynamically determined at load time, but // we provide a reasonable default here	WITHOUT_CLASSIFICATION	0.9999692590399786	WITHOUT_CLASSIFICATION	3.0740960021491286E-5	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999082083708365	WITHOUT_CLASSIFICATION	9.17916291635264E-5	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999082083708365	WITHOUT_CLASSIFICATION	9.17916291635264E-5	IMPLEMENTATION
// lazily create class init only if necessary	WITHOUT_CLASSIFICATION	0.9999399643958135	WITHOUT_CLASSIFICATION	6.003560418652083E-5	IMPLEMENTATION
// boxed arg list __file__	WITHOUT_CLASSIFICATION	0.9998059297833837	WITHOUT_CLASSIFICATION	1.9407021661629547E-4	IMPLEMENTATION
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9997604194499176	WITHOUT_CLASSIFICATION	2.395805500825079E-4	IMPLEMENTATION
// exact arg list __file__	WITHOUT_CLASSIFICATION	0.999830505876885	WITHOUT_CLASSIFICATION	1.6949412311484082E-4	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.9994172810865479	WITHOUT_CLASSIFICATION	5.827189134520439E-4	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.9994172810865479	WITHOUT_CLASSIFICATION	5.827189134520439E-4	IMPLEMENTATION
// not using a new scope, use saved one for a flat closure	WITHOUT_CLASSIFICATION	0.9993556145344377	WITHOUT_CLASSIFICATION	6.443854655622215E-4	IMPLEMENTATION
// normal closure	WITHOUT_CLASSIFICATION	0.9986216320461143	WITHOUT_CLASSIFICATION	0.0013783679538856676	IMPLEMENTATION
// end of scoping for closure's vars	WITHOUT_CLASSIFICATION	0.9998949644992579	WITHOUT_CLASSIFICATION	1.0503550074217571E-4	IMPLEMENTATION
// we only need full-on redo exception handling if there's logic that might produce it	WITHOUT_CLASSIFICATION	0.9829477661067908	WITHOUT_CLASSIFICATION	0.017052233893209097	IMPLEMENTATION
// handle redos by restarting the block	WITHOUT_CLASSIFICATION	0.9986595166739246	WITHOUT_CLASSIFICATION	0.0013404833260754552	IMPLEMENTATION
// jump back to the top of the main body of this closure	WITHOUT_CLASSIFICATION	0.9990939970139343	WITHOUT_CLASSIFICATION	9.060029860655853E-4	IMPLEMENTATION
// Ruby name 	WITHOUT_CLASSIFICATION	0.9983773101985898	WITHOUT_CLASSIFICATION	0.0016226898014101232	IMPLEMENTATION
// Accumulate call arguments	WITHOUT_CLASSIFICATION	0.999669564909533	WITHOUT_CLASSIFICATION	3.3043509046702375E-4	IMPLEMENTATION
// Fix FileNameCompletor to work mid-line	WITHOUT_CLASSIFICATION	0.9997178363046306	WITHOUT_CLASSIFICATION	2.821636953693712E-4	IMPLEMENTATION
// We need to ensure that the variable names generated here cannot conflict with ruby variable names! // Hence the "%" tthat is appended to the beginning!	WITHOUT_CLASSIFICATION	0.9994794538617621	WITHOUT_CLASSIFICATION	5.205461382378205E-4	IMPLEMENTATION
// Does this method define code?  // Default is yes -- which basically leads to pessimistic but safe optimizations // But, for library and internal methods, this might be false.	WITHOUT_CLASSIFICATION	0.999919216187681	WITHOUT_CLASSIFICATION	8.07838123190112E-5	IMPLEMENTATION
// Map of constants defined in this scope (not valid for methods!)	WITHOUT_CLASSIFICATION	0.9999993464449438	WITHOUT_CLASSIFICATION	6.535550562399172E-7	IMPLEMENTATION
// NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner // with outer loops encountered before inner loops, and inner loops finished before outer ones. // // So, we can keep track of loops in a loop stack which  keeps track of loops as they are encountered. // This lets us implement next/redo/break/retry easily for the non-closure cases	WITHOUT_CLASSIFICATION	0.9999973482993566	WITHOUT_CLASSIFICATION	2.6517006433468188E-6	IMPLEMENTATION
// Map keep track of the next available variable index for a particular prefix	WITHOUT_CLASSIFICATION	0.9998289574453119	WITHOUT_CLASSIFICATION	1.7104255468810658E-4	IMPLEMENTATION
// Control flow graph for this scope	WITHOUT_CLASSIFICATION	0.9998659518428696	WITHOUT_CLASSIFICATION	1.340481571303287E-4	IMPLEMENTATION
//        _lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;	WITHOUT_CLASSIFICATION	0.9998663295144702	WITHOUT_CLASSIFICATION	1.3367048552974587E-4	IMPLEMENTATION
// List of modules, classes, and methods defined in this scope!	WITHOUT_CLASSIFICATION	0.9999964628545822	WITHOUT_CLASSIFICATION	3.537145417869791E-6	IMPLEMENTATION
// Returns the containing parent scope!	WITHOUT_CLASSIFICATION	0.9996514156849278	WITHOUT_CLASSIFICATION	3.485843150722751E-4	IMPLEMENTATION
// Insert nesting level to ensure variable names don't conflict across nested scopes! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //        return new Variable(prefix + _lexicalNestingLevel + "_" + idx);	WITHOUT_CLASSIFICATION	0.9999774100390555	WITHOUT_CLASSIFICATION	2.2589960944519632E-5	IMPLEMENTATION
// get "self"	WITHOUT_CLASSIFICATION	0.9995895812130824	WITHOUT_CLASSIFICATION	4.104187869175523E-4	IMPLEMENTATION
// variable is never read, variable is never live	WITHOUT_CLASSIFICATION	0.9980456525203423	WITHOUT_CLASSIFICATION	0.0019543474796577184	IMPLEMENTATION
// inline script	WITHOUT_CLASSIFICATION	0.9992009968130021	WITHOUT_CLASSIFICATION	7.990031869978549E-4	IMPLEMENTATION
// inline script	WITHOUT_CLASSIFICATION	0.9992009968130021	WITHOUT_CLASSIFICATION	7.990031869978549E-4	IMPLEMENTATION
// This method is called to build assignments for a multiple-assignment instruction	WITHOUT_CLASSIFICATION	0.9999124297696885	WITHOUT_CLASSIFICATION	8.757023031153875E-5	IMPLEMENTATION
// Build the class body!	WITHOUT_CLASSIFICATION	0.999882914040556	WITHOUT_CLASSIFICATION	1.1708595944406073E-4	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.999957532542151	WITHOUT_CLASSIFICATION	4.246745784900578E-5	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.999957532542151	WITHOUT_CLASSIFICATION	4.246745784900578E-5	IMPLEMENTATION
// SSS FIXME: Can this ever be null?	WITHOUT_CLASSIFICATION	0.999623240002006	WITHOUT_CLASSIFICATION	3.767599979940151E-4	IMPLEMENTATION
// Run the pass on the passed in scope!	WITHOUT_CLASSIFICATION	0.9999039140617718	WITHOUT_CLASSIFICATION	9.608593822810268E-5	IMPLEMENTATION
// done // done // done // done	WITHOUT_CLASSIFICATION	0.999853986705924	WITHOUT_CLASSIFICATION	1.460132940761133E-4	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.999999056857448	WITHOUT_CLASSIFICATION	9.431425520594217E-7	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.999999056857448	WITHOUT_CLASSIFICATION	9.431425520594217E-7	IMPLEMENTATION
// This method is called to build arguments for a block!	WITHOUT_CLASSIFICATION	0.9999148701641165	WITHOUT_CLASSIFICATION	8.512983588347639E-5	IMPLEMENTATION
// build first node (and ignore its result) and then second node	WITHOUT_CLASSIFICATION	0.9996851401220076	WITHOUT_CLASSIFICATION	3.148598779923804E-4	IMPLEMENTATION
// build first node only and return false	WITHOUT_CLASSIFICATION	0.999630377227896	WITHOUT_CLASSIFICATION	3.696227721039371E-4	IMPLEMENTATION
// Value of the last expression in the block 	WITHOUT_CLASSIFICATION	0.9999821871672062	WITHOUT_CLASSIFICATION	1.7812832793708196E-5	IMPLEMENTATION
// If this is not a closure, the break is equivalent to jumping to the loop end label	WITHOUT_CLASSIFICATION	0.9944448473797936	WITHOUT_CLASSIFICATION	0.005555152620206471	IMPLEMENTATION
// get the incoming case value	WITHOUT_CLASSIFICATION	0.9998998452151964	WITHOUT_CLASSIFICATION	1.0015478480360295E-4	IMPLEMENTATION
// the CASE instruction	WITHOUT_CLASSIFICATION	0.9997708344165054	WITHOUT_CLASSIFICATION	2.2916558349459924E-4	IMPLEMENTATION
// lists to aggregate variables and bodies for whens	WITHOUT_CLASSIFICATION	0.9999453772505645	WITHOUT_CLASSIFICATION	5.4622749435454016E-5	IMPLEMENTATION
// build each "when"	WITHOUT_CLASSIFICATION	0.9994027194513968	WITHOUT_CLASSIFICATION	5.972805486032322E-4	IMPLEMENTATION
// multiple conditions for when	WITHOUT_CLASSIFICATION	0.9999544431817862	WITHOUT_CLASSIFICATION	4.5556818213853945E-5	IMPLEMENTATION
// build "else" if it exists	WITHOUT_CLASSIFICATION	0.9999534061021869	WITHOUT_CLASSIFICATION	4.6593897813038825E-5	IMPLEMENTATION
// now emit bodies	WITHOUT_CLASSIFICATION	0.9992455841308143	WITHOUT_CLASSIFICATION	7.544158691857055E-4	IMPLEMENTATION
// close it out	WITHOUT_CLASSIFICATION	0.9996410036366741	WITHOUT_CLASSIFICATION	3.5899636332587247E-4	IMPLEMENTATION
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.999951453206989	WITHOUT_CLASSIFICATION	4.85467930110172E-5	IMPLEMENTATION
// Do we have a dynamic container?	WITHOUT_CLASSIFICATION	0.9988217702852678	WITHOUT_CLASSIFICATION	0.0011782297147322142	IMPLEMENTATION
// Return a meta object corresponding to the class	WITHOUT_CLASSIFICATION	0.9999544310518863	WITHOUT_CLASSIFICATION	4.5568948113814795E-5	IMPLEMENTATION
// 1. Load the module first (lhs of node) // 2. Then load the constant from the module	WITHOUT_CLASSIFICATION	0.9999000253199692	WITHOUT_CLASSIFICATION	9.997468003070287E-5	IMPLEMENTATION
// Build IR for args	WITHOUT_CLASSIFICATION	0.9996635219290632	WITHOUT_CLASSIFICATION	3.3647807093691864E-4	IMPLEMENTATION
// Build IR for body	WITHOUT_CLASSIFICATION	0.9998798378697261	WITHOUT_CLASSIFICATION	1.2016213027385558E-4	IMPLEMENTATION
// if root of method is rescue, build as a light rescue	WITHOUT_CLASSIFICATION	0.9999440738455241	WITHOUT_CLASSIFICATION	5.592615447583577E-5	IMPLEMENTATION
// Instance method	WITHOUT_CLASSIFICATION	0.9895242278747337	WITHOUT_CLASSIFICATION	0.010475772125266262	IMPLEMENTATION
// Class method	WITHOUT_CLASSIFICATION	0.9934414307252177	WITHOUT_CLASSIFICATION	0.006558569274782196	IMPLEMENTATION
// Other args begin at index 1	WITHOUT_CLASSIFICATION	0.9998216654172698	WITHOUT_CLASSIFICATION	1.7833458273029397E-4	IMPLEMENTATION
// Both for fixed arity and variable arity methods	WITHOUT_CLASSIFICATION	0.9999734454766385	WITHOUT_CLASSIFICATION	2.6554523361434235E-5	IMPLEMENTATION
// Now for the rest	WITHOUT_CLASSIFICATION	0.9985923646026039	WITHOUT_CLASSIFICATION	0.0014076353973960791	IMPLEMENTATION
// Jump to 'l' if this arg is not null.  If null, fall through and build the default value!	WITHOUT_CLASSIFICATION	0.9999903724939436	WITHOUT_CLASSIFICATION	9.627506056333273E-6	IMPLEMENTATION
// This is not an expression that computes anything	WITHOUT_CLASSIFICATION	0.9940880421282139	WITHOUT_CLASSIFICATION	0.00591195787178611	IMPLEMENTATION
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9998443624476354	WITHOUT_CLASSIFICATION	1.5563755236461176E-4	IMPLEMENTATION
// Build args	WITHOUT_CLASSIFICATION	0.9991776370894622	WITHOUT_CLASSIFICATION	8.223629105378688E-4	IMPLEMENTATION
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999624604096911	WITHOUT_CLASSIFICATION	3.75395903090227E-5	IMPLEMENTATION
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999180319146979	WITHOUT_CLASSIFICATION	8.196808530214798E-5	IMPLEMENTATION
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.999951453206989	WITHOUT_CLASSIFICATION	4.85467930110172E-5	IMPLEMENTATION
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9998443624476354	WITHOUT_CLASSIFICATION	1.5563755236461176E-4	IMPLEMENTATION
// Build args	WITHOUT_CLASSIFICATION	0.9991776370894622	WITHOUT_CLASSIFICATION	8.223629105378688E-4	IMPLEMENTATION
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999180319146979	WITHOUT_CLASSIFICATION	8.196808530214798E-5	IMPLEMENTATION
// Get the container for this new module	WITHOUT_CLASSIFICATION	0.9999213431525518	WITHOUT_CLASSIFICATION	7.865684744827139E-5	IMPLEMENTATION
// Build the new module	WITHOUT_CLASSIFICATION	0.9997961392939605	WITHOUT_CLASSIFICATION	2.038607060394351E-4	IMPLEMENTATION
// Build the module body	WITHOUT_CLASSIFICATION	0.9999210718832575	WITHOUT_CLASSIFICATION	7.89281167425868E-5	IMPLEMENTATION
// First, build an assignment for a splat, if any, with the rest of the args!	WITHOUT_CLASSIFICATION	0.9999980753629261	WITHOUT_CLASSIFICATION	1.924637073906344E-6	IMPLEMENTATION
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999307852336357	WITHOUT_CLASSIFICATION	6.921476636437289E-5	IMPLEMENTATION
// If a closure, the next is simply a return from the closure! // If a regular loop, the next is simply a jump to the end of the iteration	WITHOUT_CLASSIFICATION	0.9997785744423365	WITHOUT_CLASSIFICATION	2.2142555766353859E-4	IMPLEMENTATION
// get attr	WITHOUT_CLASSIFICATION	0.9995895812130824	WITHOUT_CLASSIFICATION	4.104187869175523E-4	IMPLEMENTATION
// call operator	WITHOUT_CLASSIFICATION	0.9985048635383332	WITHOUT_CLASSIFICATION	0.0014951364616667376	IMPLEMENTATION
// set attr	WITHOUT_CLASSIFICATION	0.9989963205246363	WITHOUT_CLASSIFICATION	0.001003679475363683	IMPLEMENTATION
// Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, false, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9994326077976187	WITHOUT_CLASSIFICATION	5.673922023813286E-4	IMPLEMENTATION
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999355352437679	WITHOUT_CLASSIFICATION	6.446475623206345E-5	IMPLEMENTATION
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999355352437679	WITHOUT_CLASSIFICATION	6.446475623206345E-5	IMPLEMENTATION
// if v1 is defined and true, we are done! 	WITHOUT_CLASSIFICATION	0.9999924291797657	WITHOUT_CLASSIFICATION	7.570820234244271E-6	IMPLEMENTATION
// build first node only and return true	WITHOUT_CLASSIFICATION	0.999340098045762	WITHOUT_CLASSIFICATION	6.599019542380456E-4	IMPLEMENTATION
// build first node as non-expr and build second node	WITHOUT_CLASSIFICATION	0.9998418446987469	WITHOUT_CLASSIFICATION	1.5815530125296487E-4	IMPLEMENTATION
// Top-level script!	WITHOUT_CLASSIFICATION	0.9990652123136763	WITHOUT_CLASSIFICATION	9.347876863236658E-4	IMPLEMENTATION
// we won't enter the loop -- just build the condition node	WITHOUT_CLASSIFICATION	0.9999957918364415	WITHOUT_CLASSIFICATION	4.208163558453977E-6	IMPLEMENTATION
/* ----------- Private Interface ------------ */	WITHOUT_CLASSIFICATION	0.999974617317984	WITHOUT_CLASSIFICATION	2.5382682016118875E-5	IMPLEMENTATION
// What handles warnings	WITHOUT_CLASSIFICATION	0.9996793061735944	WITHOUT_CLASSIFICATION	3.2069382640565695E-4	IMPLEMENTATION
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999984363144993	WITHOUT_CLASSIFICATION	1.5636855006785794E-6	IMPLEMENTATION
// For closures, a redo is a jump to the beginning of the closure // For non-closures, a redo is a jump to the beginning of the loop	WITHOUT_CLASSIFICATION	0.9999203588461677	WITHOUT_CLASSIFICATION	7.964115383233543E-5	IMPLEMENTATION
// The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.999923793781359	WITHOUT_CLASSIFICATION	7.620621864099671E-5	IMPLEMENTATION
// Dummy top-level method for the class	WITHOUT_CLASSIFICATION	0.9993732987948817	WITHOUT_CLASSIFICATION	6.267012051183074E-4	IMPLEMENTATION
// Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9998727290935092	WITHOUT_CLASSIFICATION	1.272709064907126E-4	IMPLEMENTATION
// ------ Define the operations below ----	WITHOUT_CLASSIFICATION	0.9996396064453701	WITHOUT_CLASSIFICATION	3.603935546299599E-4	IMPLEMENTATION
// value copy and type conversion operations	WITHOUT_CLASSIFICATION	0.9999628413945153	WITHOUT_CLASSIFICATION	3.7158605484723956E-5	IMPLEMENTATION
// alu operations	WITHOUT_CLASSIFICATION	0.9976929569436738	WITHOUT_CLASSIFICATION	0.0023070430563262305	IMPLEMENTATION
// method handle, arg receive, return value, and  call instructions	WITHOUT_CLASSIFICATION	0.9966913372023088	WITHOUT_CLASSIFICATION	0.0033086627976911423	IMPLEMENTATION
// closure instructions	WITHOUT_CLASSIFICATION	0.9997877334300682	WITHOUT_CLASSIFICATION	2.1226656993181153E-4	IMPLEMENTATION
// eval instructions	WITHOUT_CLASSIFICATION	0.9990652123136763	WITHOUT_CLASSIFICATION	9.347876863236658E-4	IMPLEMENTATION
// def instructions	WITHOUT_CLASSIFICATION	0.9990653487413863	WITHOUT_CLASSIFICATION	9.34651258613708E-4	IMPLEMENTATION
// exception instructions	WITHOUT_CLASSIFICATION	0.9995569787885227	WITHOUT_CLASSIFICATION	4.4302121147738664E-4	IMPLEMENTATION
// Loads	WITHOUT_CLASSIFICATION	0.999970764908297	WITHOUT_CLASSIFICATION	2.9235091703083797E-5	IMPLEMENTATION
// Stores	WITHOUT_CLASSIFICATION	0.999970764908297	WITHOUT_CLASSIFICATION	2.9235091703083797E-5	IMPLEMENTATION
// jump and branch operations	WITHOUT_CLASSIFICATION	0.999633453446996	WITHOUT_CLASSIFICATION	3.665465530040568E-4	IMPLEMENTATION
// others	WITHOUT_CLASSIFICATION	0.9999710307203822	WITHOUT_CLASSIFICATION	2.8969279617890365E-5	IMPLEMENTATION
// a case/when branch	WITHOUT_CLASSIFICATION	0.9998766831668721	WITHOUT_CLASSIFICATION	1.2331683312792103E-4	IMPLEMENTATION
// optimization guards	WITHOUT_CLASSIFICATION	0.999787756925546	WITHOUT_CLASSIFICATION	2.1224307445395096E-4	IMPLEMENTATION
// By default, call instructions cannot be deleted even if their results aren't used by anyone // unless we know more about what the call is, what it does, etc. // Similarly for evals, stores, returns.	WITHOUT_CLASSIFICATION	0.7877477054705029	WITHOUT_CLASSIFICATION	0.2122522945294972	IMPLEMENTATION
// Returns the containing parent scope -- can be a dynamic value (hence Operand)!	WITHOUT_CLASSIFICATION	0.9998003632481011	WITHOUT_CLASSIFICATION	1.9963675189888335E-4	IMPLEMENTATION
// scripts	WITHOUT_CLASSIFICATION	0.999970870620095	WITHOUT_CLASSIFICATION	2.9129379905035844E-5	IMPLEMENTATION
// scripts and modules	WITHOUT_CLASSIFICATION	0.9999121514515239	WITHOUT_CLASSIFICATION	8.78485484761219E-5	IMPLEMENTATION
// scripts, classes, and modules	WITHOUT_CLASSIFICATION	0.9998982034035043	WITHOUT_CLASSIFICATION	1.0179659649563167E-4	IMPLEMENTATION
// methods and closures	WITHOUT_CLASSIFICATION	0.9999394651611722	WITHOUT_CLASSIFICATION	6.053483882782715E-5	IMPLEMENTATION
// create a new variable using the prefix	WITHOUT_CLASSIFICATION	0.9999336633669864	WITHOUT_CLASSIFICATION	6.63366330135123E-5	IMPLEMENTATION
// create a new temporary variable	WITHOUT_CLASSIFICATION	0.999840272004852	WITHOUT_CLASSIFICATION	1.5972799514796376E-4	IMPLEMENTATION
// Get a new label using a generic prefix	WITHOUT_CLASSIFICATION	0.9999771606808989	WITHOUT_CLASSIFICATION	2.2839319101038005E-5	IMPLEMENTATION
// Build the CFG for this scope -- supported only by methods & closures	WITHOUT_CLASSIFICATION	0.9999954994077517	WITHOUT_CLASSIFICATION	4.500592248341725E-6	IMPLEMENTATION
// Get the control flow graph for this scope -- only valid for methods & closures	WITHOUT_CLASSIFICATION	0.9999903368992916	WITHOUT_CLASSIFICATION	9.663100708277696E-6	IMPLEMENTATION
// While processing loops, this returns the loop that we are processing.	WITHOUT_CLASSIFICATION	0.9996918887665127	WITHOUT_CLASSIFICATION	3.0811123348728557E-4	IMPLEMENTATION
// Record the loop we are beginning to process	WITHOUT_CLASSIFICATION	0.9999003885720928	WITHOUT_CLASSIFICATION	9.961142790714791E-5	IMPLEMENTATION
// Indicate that we are done processing the loop	WITHOUT_CLASSIFICATION	0.9991785513240071	WITHOUT_CLASSIFICATION	8.214486759928286E-4	IMPLEMENTATION
// Run the passed in compiler pass on this scope!	WITHOUT_CLASSIFICATION	0.9998493268975979	WITHOUT_CLASSIFICATION	1.506731024021752E-4	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9949916302465118	WITHOUT_CLASSIFICATION	0.005008369753488258	IMPLEMENTATION
// Readline	WITHOUT_CLASSIFICATION	0.9990652123136763	WITHOUT_CLASSIFICATION	9.347876863236658E-4	IMPLEMENTATION
// If the cfg of the method is around, print the CFG!	WITHOUT_CLASSIFICATION	0.9991464630156375	WITHOUT_CLASSIFICATION	8.535369843624964E-4	IMPLEMENTATION
// Optimize some core class method calls for constant values	WITHOUT_CLASSIFICATION	0.9998725105698476	WITHOUT_CLASSIFICATION	1.2748943015238075E-4	IMPLEMENTATION
// If 'r' is not a constant, it could actually be a compound value! // Look in our value map to see if we have a simplified value for the receiver.	WITHOUT_CLASSIFICATION	0.9999991593451344	WITHOUT_CLASSIFICATION	8.406548656789699E-7	IMPLEMENTATION
// Check if we can optimize this call based on the receiving method and receiver type // Use the simplified receiver!	WITHOUT_CLASSIFICATION	0.9915042621160556	WITHOUT_CLASSIFICATION	0.008495737883944449	IMPLEMENTATION
// If we got a simplified value, mark the call dead and insert a copy in its place!	WITHOUT_CLASSIFICATION	0.9999931890325272	WITHOUT_CLASSIFICATION	6.810967472674073E-6	IMPLEMENTATION
// If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!	WITHOUT_CLASSIFICATION	0.9999839428963788	WITHOUT_CLASSIFICATION	1.60571036211434E-5	IMPLEMENTATION
/* ----------- Public abstract methods ---------- */	WITHOUT_CLASSIFICATION	0.9999878907277358	WITHOUT_CLASSIFICATION	1.210927226422878E-5	IMPLEMENTATION
/* ----------- Public methods with a default implementation ---------- */	WITHOUT_CLASSIFICATION	0.999987186730689	WITHOUT_CLASSIFICATION	1.2813269311068508E-5	IMPLEMENTATION
// Compute meet over all "sources" and compute "destination" basic blocks that should then be processed.  // sources & targets depends on direction of the data flow problem	WITHOUT_CLASSIFICATION	0.9999923554157497	WITHOUT_CLASSIFICATION	7.644584250303705E-6	IMPLEMENTATION
// If the solution has changed, add "dsts" to the work list. // No duplicates please which is why we have bbset.	WITHOUT_CLASSIFICATION	0.9985938358532951	WITHOUT_CLASSIFICATION	0.0014061641467047966	IMPLEMENTATION
/* --------- Protected fields/methods below --------- */	WITHOUT_CLASSIFICATION	0.9999779019257071	WITHOUT_CLASSIFICATION	2.2098074292835387E-5	IMPLEMENTATION
// Dataflow problem with which this node is associated // CFG node for which this node contains info.	WITHOUT_CLASSIFICATION	0.9996573795820776	WITHOUT_CLASSIFICATION	3.4262041792245003E-4	IMPLEMENTATION
/* -------------- Public fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.999995240330602	WITHOUT_CLASSIFICATION	4.759669397916453E-6	IMPLEMENTATION
// ------- Abstract methods without a default implementation -------	WITHOUT_CLASSIFICATION	0.9999192622022592	WITHOUT_CLASSIFICATION	8.073779774081419E-5	IMPLEMENTATION
// ------- Default implementation methods below -------	WITHOUT_CLASSIFICATION	0.9996885174689505	WITHOUT_CLASSIFICATION	3.1148253104957207E-4	IMPLEMENTATION
/* Compute Meet Over All Paths solution for this dataflow problem on the input CFG.     * This implements a standard worklist algorithm. */	WITHOUT_CLASSIFICATION	0.9999732533187718	WITHOUT_CLASSIFICATION	2.6746681228115365E-5	IMPLEMENTATION
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9997894025690001	WITHOUT_CLASSIFICATION	2.1059743100003463E-4	IMPLEMENTATION
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9997894025690001	WITHOUT_CLASSIFICATION	2.1059743100003463E-4	IMPLEMENTATION
/* -------------- Packaged/protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.999994572191692	WITHOUT_CLASSIFICATION	5.42780830798198E-6	IMPLEMENTATION
// We want unique ids for dataflow variables	WITHOUT_CLASSIFICATION	0.9997097069535181	WITHOUT_CLASSIFICATION	2.9029304648182534E-4	IMPLEMENTATION
/* -------------- Protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.999994572191692	WITHOUT_CLASSIFICATION	5.42780830798198E-6	IMPLEMENTATION
/* -------------- Private fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999958373318472	WITHOUT_CLASSIFICATION	4.162668152800291E-6	IMPLEMENTATION
// Initialize all flow graph nodes 	WITHOUT_CLASSIFICATION	0.9997191314451418	WITHOUT_CLASSIFICATION	2.808685548582079E-4	IMPLEMENTATION
/* Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses */	WITHOUT_CLASSIFICATION	0.9999994177717729	WITHOUT_CLASSIFICATION	5.82228227101242E-7	IMPLEMENTATION
/* ******************** PUBLIC INTERFACE ******************* */	WITHOUT_CLASSIFICATION	0.9999588403624593	WITHOUT_CLASSIFICATION	4.115963754067716E-5	IMPLEMENTATION
// Unique ID assigned to this variable	WITHOUT_CLASSIFICATION	0.9993040856166489	WITHOUT_CLASSIFICATION	6.959143833512027E-4	IMPLEMENTATION
// start out with a default RubyObject allocator	WITHOUT_CLASSIFICATION	0.9999731729569128	WITHOUT_CLASSIFICATION	2.68270430872002E-5	IMPLEMENTATION
// switch to an allocator based on a default constructor	WITHOUT_CLASSIFICATION	0.9999917391911534	WITHOUT_CLASSIFICATION	8.260808846670232E-6	IMPLEMENTATION
/* ----------- Public Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999709770746262	WITHOUT_CLASSIFICATION	2.902292537373386E-5	IMPLEMENTATION
// class or module	WITHOUT_CLASSIFICATION	0.9994521047669918	WITHOUT_CLASSIFICATION	5.478952330081531E-4	IMPLEMENTATION
// OUT = UNION(IN(succs))	WITHOUT_CLASSIFICATION	0.999712631752925	WITHOUT_CLASSIFICATION	2.8736824707495146E-4	IMPLEMENTATION
// Traverse the instructions in this basic block in reverse order!	WITHOUT_CLASSIFICATION	0.999948676835293	WITHOUT_CLASSIFICATION	5.132316470702943E-5	IMPLEMENTATION
// v is defined => It is no longer live before 'i'	WITHOUT_CLASSIFICATION	0.9999930741555303	WITHOUT_CLASSIFICATION	6.925844469748209E-6	IMPLEMENTATION
// IN is the same!	WITHOUT_CLASSIFICATION	0.9992992624512063	WITHOUT_CLASSIFICATION	7.007375487937596E-4	IMPLEMENTATION
// IN changed!	WITHOUT_CLASSIFICATION	0.999066921108302	WITHOUT_CLASSIFICATION	9.330788916979467E-4	IMPLEMENTATION
/* ---------- Protected / package fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999879326500904	WITHOUT_CLASSIFICATION	1.2067349909569398E-5	IMPLEMENTATION
// If 'v' is not live at the instruction site, and it has no side effects, mark it dead!	WITHOUT_CLASSIFICATION	0.999876950351961	WITHOUT_CLASSIFICATION	1.2304964803900182E-4	IMPLEMENTATION
// Do not mark this instruction's operands live if the instruction itself is dead!	WITHOUT_CLASSIFICATION	0.9985112582381573	WITHOUT_CLASSIFICATION	0.0014887417618426797	IMPLEMENTATION
/* ---------- Private fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999881172234505	WITHOUT_CLASSIFICATION	1.1882776549586325E-5	IMPLEMENTATION
// Variables live at entry of this node // Variables live at exit of node // Temporary set of live variables // Size of the "_in" and "_out" bit sets 	WITHOUT_CLASSIFICATION	0.9998878151246727	WITHOUT_CLASSIFICATION	1.1218487532734157E-4	IMPLEMENTATION
// Used during optimization passes to propagate type and other information	WITHOUT_CLASSIFICATION	0.9999474917264111	WITHOUT_CLASSIFICATION	5.250827358887623E-5	IMPLEMENTATION
// Does this instruction have side effects as a result of its operation // This information is used in optimization phases to impact dead code elimination // and other optimization passes	WITHOUT_CLASSIFICATION	0.9999981597589291	WITHOUT_CLASSIFICATION	1.8402410708579157E-6	IMPLEMENTATION
/* --------- "Abstract"/"please-override" methods --------- */	WITHOUT_CLASSIFICATION	0.9999843481088102	WITHOUT_CLASSIFICATION	1.565189118978402E-5	IMPLEMENTATION
/* Array of all operands for this instruction */	WITHOUT_CLASSIFICATION	0.9999853282554889	WITHOUT_CLASSIFICATION	1.4671744511019128E-5	IMPLEMENTATION
/* List of all variables used by all operands of this instruction */	WITHOUT_CLASSIFICATION	0.9999504496131271	WITHOUT_CLASSIFICATION	4.955038687287072E-5	IMPLEMENTATION
/*      * This method takes as input a map of operands to their values, and outputs     *     * If the value map provides a value for any of the instruction's operands     * this method is expected to replace the original operands with the simplified values.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify     */	WITHOUT_CLASSIFICATION	0.9975876724080458	WITHOUT_CLASSIFICATION	0.0024123275919541707	IMPLEMENTATION
// By default, no simplifications!	WITHOUT_CLASSIFICATION	0.9997740492033609	WITHOUT_CLASSIFICATION	2.2595079663907097E-4	IMPLEMENTATION
// Can this call lead to ruby code getting modified?   // If we don't know what method we are calling, we assume it can (pessimistic, but safe!) // If we do know the target method, we ask the method itself whether it modifies ruby code	WITHOUT_CLASSIFICATION	0.527198120545797	IMPLEMENTATION	0.4728018794542032	WITHOUT_CLASSIFICATION
// By default, return instructions cannot be deleted	WITHOUT_CLASSIFICATION	0.9998139822525831	WITHOUT_CLASSIFICATION	1.8601774741698268E-4	IMPLEMENTATION
// If true, returns the rest of the array starting at the index	WITHOUT_CLASSIFICATION	0.9998349210175739	WITHOUT_CLASSIFICATION	1.6507898242604184E-4	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999464713939216	WITHOUT_CLASSIFICATION	5.352860607853233E-5	IMPLEMENTATION
// Map of label & basic blocks with that label	WITHOUT_CLASSIFICATION	0.9999040602953344	WITHOUT_CLASSIFICATION	9.593970466561413E-5	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999464713939216	WITHOUT_CLASSIFICATION	5.352860607853233E-5	IMPLEMENTATION
// You can only value-replace atomic values	WITHOUT_CLASSIFICATION	0.9999581739575175	WITHOUT_CLASSIFICATION	4.1826042482433955E-5	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9998812254751454	WITHOUT_CLASSIFICATION	1.1877452485475129E-4	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9998812254751454	WITHOUT_CLASSIFICATION	1.1877452485475129E-4	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9998812254751454	WITHOUT_CLASSIFICATION	1.1877452485475129E-4	IMPLEMENTATION
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.99996692273788	WITHOUT_CLASSIFICATION	3.307726211996894E-5	IMPLEMENTATION
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.99996692273788	WITHOUT_CLASSIFICATION	3.307726211996894E-5	IMPLEMENTATION
// The operand that this attribute targets //    DEFERRED //    AttributeValue _val;       // Attribute value	WITHOUT_CLASSIFICATION	0.9999293670751036	WITHOUT_CLASSIFICATION	7.063292489638635E-5	IMPLEMENTATION
// Arrays, Ranges, etc. are compound values // Variables, fixnums, floats, etc. are "atomic" values	WITHOUT_CLASSIFICATION	0.9999856429960182	WITHOUT_CLASSIFICATION	1.435700398166904E-5	IMPLEMENTATION
// Get the target class of this operand, if we know it!	WITHOUT_CLASSIFICATION	0.9999010968377362	WITHOUT_CLASSIFICATION	9.890316226382611E-5	IMPLEMENTATION
// The following constants capture pre-known static call sites -- used to implement ruby internals	WITHOUT_CLASSIFICATION	0.994503628255273	WITHOUT_CLASSIFICATION	0.005496371744726954	IMPLEMENTATION
/* Nothing to do by default */	WITHOUT_CLASSIFICATION	0.9999927518315725	WITHOUT_CLASSIFICATION	7.248168427379425E-6	IMPLEMENTATION
// Map of label & basic blocks which are waiting for a bb with that label	WITHOUT_CLASSIFICATION	0.9999736199433149	WITHOUT_CLASSIFICATION	2.6380056685084356E-5	IMPLEMENTATION
// Init before building basic blocks below!	WITHOUT_CLASSIFICATION	0.9998833458153685	WITHOUT_CLASSIFICATION	1.166541846315087E-4	IMPLEMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999644894594512	WITHOUT_CLASSIFICATION	3.55105405488383E-5	IMPLEMENTATION
// Scope (method/closure) to which this cfg belongs // Entry BB -- dummy // Exit BB -- dummy // The actual graph // Next available basic block id	WITHOUT_CLASSIFICATION	0.9997805111858835	WITHOUT_CLASSIFICATION	2.1948881411662283E-4	IMPLEMENTATION
// Jump instruction bbs dont add an edge to the succeeding bb by default	WITHOUT_CLASSIFICATION	0.999983944148763	WITHOUT_CLASSIFICATION	1.6055851236947322E-5	IMPLEMENTATION
// Add forward ref. edges	WITHOUT_CLASSIFICATION	0.9998412708915339	WITHOUT_CLASSIFICATION	1.5872910846619445E-4	IMPLEMENTATION
// currBB cannot be null!	WITHOUT_CLASSIFICATION	0.9999669578003584	WITHOUT_CLASSIFICATION	3.304219964163968E-5	IMPLEMENTATION
// Add a forward reference from tgt -> currBB	WITHOUT_CLASSIFICATION	0.9999985193625921	WITHOUT_CLASSIFICATION	1.4806374078595355E-6	IMPLEMENTATION
// root-level logic	WITHOUT_CLASSIFICATION	0.9991230410892297	WITHOUT_CLASSIFICATION	8.769589107703278E-4	IMPLEMENTATION
// root-level methods	WITHOUT_CLASSIFICATION	0.9999189134184056	WITHOUT_CLASSIFICATION	8.108658159435348E-5	IMPLEMENTATION
// root-level classes	WITHOUT_CLASSIFICATION	0.9998867731645736	WITHOUT_CLASSIFICATION	1.1322683542629882E-4	IMPLEMENTATION
//        case 4: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); //            break; //        case 5: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); //            break;	WITHOUT_CLASSIFICATION	0.9996442797347158	WITHOUT_CLASSIFICATION	3.5572026528421274E-4	IMPLEMENTATION
// load receiver	WITHOUT_CLASSIFICATION	0.9989775827036955	WITHOUT_CLASSIFICATION	0.00102241729630444	IMPLEMENTATION
// load receiver	WITHOUT_CLASSIFICATION	0.9989775827036955	WITHOUT_CLASSIFICATION	0.00102241729630444	IMPLEMENTATION
// receiver	WITHOUT_CLASSIFICATION	0.9990701457290215	WITHOUT_CLASSIFICATION	9.298542709785002E-4	IMPLEMENTATION
// load arguments	WITHOUT_CLASSIFICATION	0.9990009674794639	WITHOUT_CLASSIFICATION	9.990325205360983E-4	IMPLEMENTATION
// load arguments	WITHOUT_CLASSIFICATION	0.9990009674794639	WITHOUT_CLASSIFICATION	9.990325205360983E-4	IMPLEMENTATION
//        case 4: //        case 5:	WITHOUT_CLASSIFICATION	0.9997116150753461	WITHOUT_CLASSIFICATION	2.883849246539071E-4	IMPLEMENTATION
// Object[] args	WITHOUT_CLASSIFICATION	0.9991776765900894	WITHOUT_CLASSIFICATION	8.223234099105677E-4	IMPLEMENTATION
// load handle	WITHOUT_CLASSIFICATION	0.9961268553054385	WITHOUT_CLASSIFICATION	0.003873144694561589	IMPLEMENTATION
// args array	WITHOUT_CLASSIFICATION	0.9990759572891594	WITHOUT_CLASSIFICATION	9.240427108404896E-4	IMPLEMENTATION
// i'th argument	WITHOUT_CLASSIFICATION	0.9996901180147841	WITHOUT_CLASSIFICATION	3.098819852158498E-4	IMPLEMENTATION
// invoke specific arity version	WITHOUT_CLASSIFICATION	0.9992994023645729	WITHOUT_CLASSIFICATION	7.005976354270582E-4	IMPLEMENTATION
// Object arg0	WITHOUT_CLASSIFICATION	0.9994770784500876	WITHOUT_CLASSIFICATION	5.229215499123909E-4	IMPLEMENTATION
// useful for code completion inside the IRB	WITHOUT_CLASSIFICATION	0.999966124750593	WITHOUT_CLASSIFICATION	3.3875249406966064E-5	IMPLEMENTATION
// No editing before startPos	WITHOUT_CLASSIFICATION	0.9999839706914427	WITHOUT_CLASSIFICATION	1.6029308557248456E-5	IMPLEMENTATION
// no silly ticks!	WITHOUT_CLASSIFICATION	0.9989407877849154	WITHOUT_CLASSIFICATION	0.0010592122150847282	IMPLEMENTATION
// no candidates? Fail.	WITHOUT_CLASSIFICATION	0.9997594566210677	WITHOUT_CLASSIFICATION	2.4054337893229547E-4	IMPLEMENTATION
// at end	WITHOUT_CLASSIFICATION	0.9999818462761061	WITHOUT_CLASSIFICATION	1.8153723893907688E-5	IMPLEMENTATION
// undo check	WITHOUT_CLASSIFICATION	0.999160920506865	WITHOUT_CLASSIFICATION	8.390794931350984E-4	IMPLEMENTATION
// Explicit reference to these vars as symbols...	WITHOUT_CLASSIFICATION	0.9999549723107181	WITHOUT_CLASSIFICATION	4.50276892820008E-5	IMPLEMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999644894594512	WITHOUT_CLASSIFICATION	3.55105405488383E-5	IMPLEMENTATION
//\t\n\"\\'`@$><=;|&{(	WITHOUT_CLASSIFICATION	0.999216654151653	WITHOUT_CLASSIFICATION	7.833458483471001E-4	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.9996282838762223	WITHOUT_CLASSIFICATION	3.717161237776822E-4	IMPLEMENTATION
// no check for '*'	WITHOUT_CLASSIFICATION	0.9992719607118835	WITHOUT_CLASSIFICATION	7.280392881163818E-4	IMPLEMENTATION
// no check for '*'	WITHOUT_CLASSIFICATION	0.9992719607118835	WITHOUT_CLASSIFICATION	7.280392881163818E-4	IMPLEMENTATION
// Binding provided for scope, use it	WITHOUT_CLASSIFICATION	0.9994021903974963	WITHOUT_CLASSIFICATION	5.978096025036927E-4	IMPLEMENTATION
// this is ensured by the callers	WITHOUT_CLASSIFICATION	0.9994809596212307	WITHOUT_CLASSIFICATION	5.190403787691763E-4	IMPLEMENTATION
// no binding, just eval in "current" frame (caller's frame)	WITHOUT_CLASSIFICATION	0.9999937327083017	WITHOUT_CLASSIFICATION	6.267291698402443E-6	IMPLEMENTATION
// restore position	WITHOUT_CLASSIFICATION	0.9993707736260714	WITHOUT_CLASSIFICATION	6.2922637392861E-4	IMPLEMENTATION
/* Something like cvar_cbase() from eval.c, factored out for the benefit     * of all the classvar-related node evaluations */	WITHOUT_CLASSIFICATION	0.9999730842779736	WITHOUT_CLASSIFICATION	2.691572202641056E-5	IMPLEMENTATION
// Used by the compiler to simplify arg processing	WITHOUT_CLASSIFICATION	0.9999555122604856	WITHOUT_CLASSIFICATION	4.448773951437679E-5	IMPLEMENTATION
// JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace	WITHOUT_CLASSIFICATION	0.9999891761658675	WITHOUT_CLASSIFICATION	1.0823834132436277E-5	IMPLEMENTATION
// MRI does similar thing on MacOS X with 'EditLine wrapper'.	WITHOUT_CLASSIFICATION	0.9991591540422534	WITHOUT_CLASSIFICATION	8.408459577465299E-4	IMPLEMENTATION
// We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)	WITHOUT_CLASSIFICATION	0.9999663035235509	WITHOUT_CLASSIFICATION	3.369647644910851E-5	IMPLEMENTATION
// JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)	WITHOUT_CLASSIFICATION	0.9997889337437017	WITHOUT_CLASSIFICATION	2.1106625629833408E-4	IMPLEMENTATION
// not overridden, let's go	WITHOUT_CLASSIFICATION	0.9995257355647049	WITHOUT_CLASSIFICATION	4.742644352950326E-4	IMPLEMENTATION
/* Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8() */	WITHOUT_CLASSIFICATION	0.9999272566243048	WITHOUT_CLASSIFICATION	7.274337569525177E-5	IMPLEMENTATION
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9990652123136763	WITHOUT_CLASSIFICATION	9.347876863236658E-4	IMPLEMENTATION
// Complete using a Proc object	WITHOUT_CLASSIFICATION	0.999962121309375	WITHOUT_CLASSIFICATION	3.787869062502871E-5	IMPLEMENTATION
// clear basename so it's anonymous when raising	WITHOUT_CLASSIFICATION	0.9998408222298665	WITHOUT_CLASSIFICATION	1.5917777013338386E-4	IMPLEMENTATION
// These are not really used by timeout, but exposed for compatibility	WITHOUT_CLASSIFICATION	0.9995972188350898	WITHOUT_CLASSIFICATION	4.027811649101868E-4	IMPLEMENTATION
// Timeout module methods	WITHOUT_CLASSIFICATION	0.9999111083578479	WITHOUT_CLASSIFICATION	8.889164215212341E-5	IMPLEMENTATION
// Toplevel defines	WITHOUT_CLASSIFICATION	0.999066370994124	WITHOUT_CLASSIFICATION	9.33629005876043E-4	IMPLEMENTATION
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999800467556625	WITHOUT_CLASSIFICATION	1.995324433747818E-5	IMPLEMENTATION
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999899163580069	WITHOUT_CLASSIFICATION	1.0083641993070694E-5	IMPLEMENTATION
// if it's the exception we're expecting	WITHOUT_CLASSIFICATION	0.9999187909180814	WITHOUT_CLASSIFICATION	8.120908191853551E-5	IMPLEMENTATION
// and we were given a specific exception	WITHOUT_CLASSIFICATION	0.998139199538007	WITHOUT_CLASSIFICATION	0.0018608004619929857	IMPLEMENTATION
// otherwise, rethrow	WITHOUT_CLASSIFICATION	0.9997909035778916	WITHOUT_CLASSIFICATION	2.0909642210839121E-4	IMPLEMENTATION
// // Remove the Executor task now, to avoid cancelled tasks accumulating // until an Executor thread can schedule and remove them //	WITHOUT_CLASSIFICATION	0.9998862211429843	WITHOUT_CLASSIFICATION	1.1377885701566086E-4	IMPLEMENTATION
// // If the task was scheduled, wait for it to finish before polling // for the exception it would have thrown. //	WITHOUT_CLASSIFICATION	0.9988913177310231	WITHOUT_CLASSIFICATION	0.0011086822689769164	IMPLEMENTATION
// NetProtocolBufferedIO	WITHOUT_CLASSIFICATION	0.9997877334300682	WITHOUT_CLASSIFICATION	2.1226656993181153E-4	IMPLEMENTATION
/* When a length is given, read_string acts like get_bytes */	WITHOUT_CLASSIFICATION	0.9994860094129626	WITHOUT_CLASSIFICATION	5.139905870374781E-4	IMPLEMENTATION
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9954925326626781	WITHOUT_CLASSIFICATION	0.0045074673373218304	IMPLEMENTATION
// ARRAY and STRUCT are only used internally	WITHOUT_CLASSIFICATION	0.999838234573168	WITHOUT_CLASSIFICATION	1.617654268320182E-4	IMPLEMENTATION
// If no release method is defined, then memory leaks will result.	WITHOUT_CLASSIFICATION	0.9978990710409195	WITHOUT_CLASSIFICATION	0.0021009289590804858	IMPLEMENTATION
/*     * This variant of newStruct is called from StructLayoutBuilder     */	WITHOUT_CLASSIFICATION	0.9999996373001866	WITHOUT_CLASSIFICATION	3.626998134090332E-7	IMPLEMENTATION
// This also handles unsigned int -> negative signed int conversion	WITHOUT_CLASSIFICATION	0.9999930721193984	WITHOUT_CLASSIFICATION	6.9278806016768645E-6	IMPLEMENTATION
// Windows is LLP64	WITHOUT_CLASSIFICATION	0.9993771861220148	WITHOUT_CLASSIFICATION	6.22813877985283E-4	IMPLEMENTATION
// Older JDK on linux map 'c' to 'libc.so' which doesn't work	WITHOUT_CLASSIFICATION	0.9994373038788189	WITHOUT_CLASSIFICATION	5.626961211811372E-4	IMPLEMENTATION
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999087603309763	WITHOUT_CLASSIFICATION	9.12396690236525E-5	IMPLEMENTATION
// $blah	WITHOUT_CLASSIFICATION	0.999970764908297	WITHOUT_CLASSIFICATION	2.9235091703083797E-5	IMPLEMENTATION
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9954925326626781	WITHOUT_CLASSIFICATION	0.0045074673373218304	IMPLEMENTATION
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999034709132224	WITHOUT_CLASSIFICATION	9.652908677755318E-5	IMPLEMENTATION
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999087603309763	WITHOUT_CLASSIFICATION	9.12396690236525E-5	IMPLEMENTATION
// // Keep a reference to the temporary memory in the cache so it does // not get freed by the GC until the struct is freed //	WITHOUT_CLASSIFICATION	0.9999910120273303	WITHOUT_CLASSIFICATION	8.987972669599514E-6	IMPLEMENTATION
// Add Pointer::NULL as a constant	WITHOUT_CLASSIFICATION	0.9998205243774192	WITHOUT_CLASSIFICATION	1.7947562258073126E-4	IMPLEMENTATION
// Create the ordered list of field names from the map	WITHOUT_CLASSIFICATION	0.9999971370687847	WITHOUT_CLASSIFICATION	2.8629312153646367E-6	IMPLEMENTATION
// Assemble a [ :name, offset ] array	WITHOUT_CLASSIFICATION	0.9998943164493344	WITHOUT_CLASSIFICATION	1.0568355066561327E-4	IMPLEMENTATION
//                case FLOAT:	WITHOUT_CLASSIFICATION	0.9997582612390121	WITHOUT_CLASSIFICATION	2.4173876098791103E-4	IMPLEMENTATION
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999426286151649	WITHOUT_CLASSIFICATION	5.737138483515415E-5	IMPLEMENTATION
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999426286151649	WITHOUT_CLASSIFICATION	5.737138483515415E-5	IMPLEMENTATION
// No auto cleanup needed	WITHOUT_CLASSIFICATION	0.6222490610785649	WITHOUT_CLASSIFICATION	0.3777509389214351	IMPLEMENTATION
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9996677541308308	WITHOUT_CLASSIFICATION	3.3224586916920395E-4	IMPLEMENTATION
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999756644781203	WITHOUT_CLASSIFICATION	2.4335521879712527E-5	IMPLEMENTATION
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999756644781203	WITHOUT_CLASSIFICATION	2.4335521879712527E-5	IMPLEMENTATION
/*         * If there is exactly _one_ callback argument to the function,         * then a block can be given and automatically subsituted for the callback         * parameter.         */	WITHOUT_CLASSIFICATION	0.9999983302484591	WITHOUT_CLASSIFICATION	1.6697515409136992E-6	IMPLEMENTATION
/*------------------------------------------------------------------------*/	WITHOUT_CLASSIFICATION	0.9990655965962804	WITHOUT_CLASSIFICATION	9.344034037195148E-4	IMPLEMENTATION
//AF_INET	WITHOUT_CLASSIFICATION	0.9998920580249556	WITHOUT_CLASSIFICATION	1.0794197504441973E-4	IMPLEMENTATION
//AF_INET	WITHOUT_CLASSIFICATION	0.9998920580249556	WITHOUT_CLASSIFICATION	1.0794197504441973E-4	IMPLEMENTATION
// RubyUNIXServer	WITHOUT_CLASSIFICATION	0.9990652123136763	WITHOUT_CLASSIFICATION	9.347876863236658E-4	IMPLEMENTATION
// line 321	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// // Set up for potentially fast-int operations //	WITHOUT_CLASSIFICATION	0.9999462442207538	WITHOUT_CLASSIFICATION	5.375577924619965E-5	IMPLEMENTATION
// // Hook up the MemoryPointer class if its not already there //	WITHOUT_CLASSIFICATION	0.9999590362283637	WITHOUT_CLASSIFICATION	4.0963771636295734E-5	IMPLEMENTATION
// This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and // (2) Socket.getChannel() seems to return null in some cases	WITHOUT_CLASSIFICATION	0.999996489206701	WITHOUT_CLASSIFICATION	3.5107932989576834E-6	IMPLEMENTATION
// no UNIXSockets on Windows	WITHOUT_CLASSIFICATION	0.9995823010678464	WITHOUT_CLASSIFICATION	4.1769893215361437E-4	IMPLEMENTATION
// Sockaddr_un has different structure on different platforms. // See JRUBY-2213 for more details.	WITHOUT_CLASSIFICATION	0.9988257932845421	WITHOUT_CLASSIFICATION	0.0011742067154579055	IMPLEMENTATION
// There is something valid in the sun_path component	WITHOUT_CLASSIFICATION	0.9999989047972418	WITHOUT_CLASSIFICATION	1.095202758173912E-6	IMPLEMENTATION
// RubyIPSocket	WITHOUT_CLASSIFICATION	0.9990652123136763	WITHOUT_CLASSIFICATION	9.347876863236658E-4	IMPLEMENTATION
// host is nil or the empty string, bind to INADDR_ANY	WITHOUT_CLASSIFICATION	0.9999372099117271	WITHOUT_CLASSIFICATION	6.279008827295766E-5	IMPLEMENTATION
// host and port given	WITHOUT_CLASSIFICATION	0.9997617849934354	WITHOUT_CLASSIFICATION	2.3821500656466226E-4	IMPLEMENTATION
// RubyUDPSocket	WITHOUT_CLASSIFICATION	0.9990652123136763	WITHOUT_CLASSIFICATION	9.347876863236658E-4	IMPLEMENTATION
// By default we always reverse lookup unless do_not_reverse_lookup set.	WITHOUT_CLASSIFICATION	0.9999075147804755	WITHOUT_CLASSIFICATION	9.248521952451069E-5	IMPLEMENTATION
// make sure descriptor is registered	WITHOUT_CLASSIFICATION	0.9997008314697784	WITHOUT_CLASSIFICATION	2.9916853022161286E-4	IMPLEMENTATION
// continue with normal initialization	WITHOUT_CLASSIFICATION	0.9991663499894757	WITHOUT_CLASSIFICATION	8.33650010524382E-4	IMPLEMENTATION
// recv returns nil on EOF	WITHOUT_CLASSIFICATION	0.999707638937322	WITHOUT_CLASSIFICATION	2.923610626781195E-4	IMPLEMENTATION
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9923780801175357	WITHOUT_CLASSIFICATION	0.0076219198824642445	IMPLEMENTATION
// RubyBasicSocket	WITHOUT_CLASSIFICATION	0.9990652123136763	WITHOUT_CLASSIFICATION	9.347876863236658E-4	IMPLEMENTATION
// we don't have to define any that we don't support; see socket.c	WITHOUT_CLASSIFICATION	0.999824028771293	WITHOUT_CLASSIFICATION	1.7597122870703356E-4	IMPLEMENTATION
// mandatory constants we haven't implemented	WITHOUT_CLASSIFICATION	0.809059374379912	WITHOUT_CLASSIFICATION	0.1909406256200879	IMPLEMENTATION
// constants webrick crashes without	WITHOUT_CLASSIFICATION	0.9998451841838284	WITHOUT_CLASSIFICATION	1.5481581617152407E-4	IMPLEMENTATION
// More constants needed by specs	WITHOUT_CLASSIFICATION	0.7792251116954921	WITHOUT_CLASSIFICATION	0.2207748883045079	IMPLEMENTATION
// normal file descriptor..try to work with it	WITHOUT_CLASSIFICATION	0.997742175270447	WITHOUT_CLASSIFICATION	0.002257824729553059	IMPLEMENTATION
// AF_INET	WITHOUT_CLASSIFICATION	0.999970764908297	WITHOUT_CLASSIFICATION	2.9235091703083797E-5	IMPLEMENTATION
// 255.255.255.255	WITHOUT_CLASSIFICATION	0.9990652123136763	WITHOUT_CLASSIFICATION	9.347876863236658E-4	IMPLEMENTATION
// 0.0.0.0	WITHOUT_CLASSIFICATION	0.999970764908297	WITHOUT_CLASSIFICATION	2.9235091703083797E-5	IMPLEMENTATION
//def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)	WITHOUT_CLASSIFICATION	0.9987353200955884	WITHOUT_CLASSIFICATION	0.0012646799044115655	IMPLEMENTATION
// line 323	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9995514768671837	WITHOUT_CLASSIFICATION	4.4852313281634184E-4	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9995514768671837	WITHOUT_CLASSIFICATION	4.4852313281634184E-4	IMPLEMENTATION
// ok, it's a socket...set values accordingly // just using AF_INET since we can't tell from SocketChannel...	WITHOUT_CLASSIFICATION	0.9999996706875209	WITHOUT_CLASSIFICATION	3.2931247902894626E-7	IMPLEMENTATION
// datagram, set accordingly // again, AF_INET	WITHOUT_CLASSIFICATION	0.999806885919621	WITHOUT_CLASSIFICATION	1.931140803790742E-4	IMPLEMENTATION
//IRubyObject family = args[2];	WITHOUT_CLASSIFICATION	0.9987353200955884	WITHOUT_CLASSIFICATION	0.0012646799044115655	IMPLEMENTATION
// When Socket::AI_PASSIVE and host is nil, return 'any' address. 	WITHOUT_CLASSIFICATION	0.999759965876647	WITHOUT_CLASSIFICATION	2.4003412335320227E-4	IMPLEMENTATION
// The value of 1 is for Socket::AI_PASSIVE.	WITHOUT_CLASSIFICATION	0.9999862902392165	WITHOUT_CLASSIFICATION	1.3709760783600641E-5	IMPLEMENTATION
// RubySocket	WITHOUT_CLASSIFICATION	0.9990652123136763	WITHOUT_CLASSIFICATION	9.347876863236658E-4	IMPLEMENTATION
// numeric host, use it for port	WITHOUT_CLASSIFICATION	0.9995618237605987	WITHOUT_CLASSIFICATION	4.381762394014289E-4	IMPLEMENTATION
//            e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9998279270919643	WITHOUT_CLASSIFICATION	1.7207290803563613E-4	IMPLEMENTATION
// we were woken up without being selected...poll for thread events and go back to sleep	WITHOUT_CLASSIFICATION	0.9999723044342178	WITHOUT_CLASSIFICATION	2.769556578213579E-5	IMPLEMENTATION
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9991413743742353	WITHOUT_CLASSIFICATION	8.586256257646919E-4	IMPLEMENTATION
// no connection immediately accepted, let them try again	WITHOUT_CLASSIFICATION	0.9939725683577725	WITHOUT_CLASSIFICATION	0.0060274316422275235	IMPLEMENTATION
// do nothing, just exit	WITHOUT_CLASSIFICATION	0.9999312663871901	WITHOUT_CLASSIFICATION	6.873361280991236E-5	IMPLEMENTATION
//nativeThread.setPriority(priority);	WITHOUT_CLASSIFICATION	0.9990655965962804	WITHOUT_CLASSIFICATION	9.344034037195148E-4	IMPLEMENTATION
// set thread context JRuby classloader here, for Ruby-owned thread	WITHOUT_CLASSIFICATION	0.9997759151982115	WITHOUT_CLASSIFICATION	2.2408480178846238E-4	IMPLEMENTATION
// uber-ThreadKill catcher, since it should always just mean "be dead"	WITHOUT_CLASSIFICATION	0.9998089375174437	WITHOUT_CLASSIFICATION	1.9106248255640213E-4	IMPLEMENTATION
// Call the thread's code	WITHOUT_CLASSIFICATION	0.9997725935909297	WITHOUT_CLASSIFICATION	2.27406409070229E-4	IMPLEMENTATION
// Someone called exit!, so we need to kill the main thread	WITHOUT_CLASSIFICATION	0.9995182951734023	WITHOUT_CLASSIFICATION	4.8170482659763366E-4	IMPLEMENTATION
// restore context classloader, in case we're using a thread pool	WITHOUT_CLASSIFICATION	0.9999875559505284	WITHOUT_CLASSIFICATION	1.2444049471558579E-5	IMPLEMENTATION
// be dead	WITHOUT_CLASSIFICATION	0.9999839137088447	WITHOUT_CLASSIFICATION	1.6086291155382896E-5	IMPLEMENTATION
// loop until a context is available, to clean up softrefs that might have been collected	WITHOUT_CLASSIFICATION	0.9991313635052983	WITHOUT_CLASSIFICATION	8.686364947016029E-4	IMPLEMENTATION
// all threads in ruby thread group plus main thread	WITHOUT_CLASSIFICATION	0.999888023544727	WITHOUT_CLASSIFICATION	1.1197645527297329E-4	IMPLEMENTATION
// thread is not alive, skip it	WITHOUT_CLASSIFICATION	0.9727222130173214	WITHOUT_CLASSIFICATION	0.027277786982678506	IMPLEMENTATION
// future is done or cancelled, skip it	WITHOUT_CLASSIFICATION	0.9992609912086229	WITHOUT_CLASSIFICATION	7.390087913770494E-4	IMPLEMENTATION
// first, check if the sender has unreceived mail	WITHOUT_CLASSIFICATION	0.9999582088963431	WITHOUT_CLASSIFICATION	4.179110365689059E-5	IMPLEMENTATION
// then deliver mail to the target	WITHOUT_CLASSIFICATION	0.9998252088265819	WITHOUT_CLASSIFICATION	1.747911734180706E-4	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9995912315833974	WITHOUT_CLASSIFICATION	4.087684166026838E-4	IMPLEMENTATION
// Define a second version that doesn't take a block, so we have unique code paths for both cases.	WITHOUT_CLASSIFICATION	0.9998378457026887	WITHOUT_CLASSIFICATION	1.6215429731119508E-4	IMPLEMENTATION
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9955791366741181	WITHOUT_CLASSIFICATION	0.004420863325881779	IMPLEMENTATION
// main body	WITHOUT_CLASSIFICATION	0.9994120999197885	WITHOUT_CLASSIFICATION	5.879000802114094E-4	IMPLEMENTATION
// return jump handling	WITHOUT_CLASSIFICATION	0.999064199765271	WITHOUT_CLASSIFICATION	9.358002347288553E-4	IMPLEMENTATION
// finally	WITHOUT_CLASSIFICATION	0.9999712253065045	WITHOUT_CLASSIFICATION	2.8774693495437294E-5	IMPLEMENTATION
// return result if we're still good	WITHOUT_CLASSIFICATION	0.9998222433485189	WITHOUT_CLASSIFICATION	1.7775665148112244E-4	IMPLEMENTATION
// redo jump handling	WITHOUT_CLASSIFICATION	0.9993271671716175	WITHOUT_CLASSIFICATION	6.728328283824976E-4	IMPLEMENTATION
// clear the redo	WITHOUT_CLASSIFICATION	0.9991655106061428	WITHOUT_CLASSIFICATION	8.344893938572248E-4	IMPLEMENTATION
// get runtime, create jump error, and throw it	WITHOUT_CLASSIFICATION	0.9997723704901664	WITHOUT_CLASSIFICATION	2.2762950983348294E-4	IMPLEMENTATION
// throw redo error if we're still good	WITHOUT_CLASSIFICATION	0.9997810768659526	WITHOUT_CLASSIFICATION	2.1892313404727864E-4	IMPLEMENTATION
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.999676089735341	WITHOUT_CLASSIFICATION	3.239102646590343E-4	IMPLEMENTATION
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9803109182574906	WITHOUT_CLASSIFICATION	0.019689081742509402	IMPLEMENTATION
// No required specified, check actual number of required args	WITHOUT_CLASSIFICATION	0.9998696771766071	WITHOUT_CLASSIFICATION	1.303228233928979E-4	IMPLEMENTATION
// actual required is less than 3, so we use specific arity	WITHOUT_CLASSIFICATION	0.9989185894974509	WITHOUT_CLASSIFICATION	0.0010814105025489915	IMPLEMENTATION
// actual required is greater than 3, raise error (we don't support actual required > 3)	WITHOUT_CLASSIFICATION	0.9926931864889964	WITHOUT_CLASSIFICATION	0.007306813511003638	IMPLEMENTATION
// simple path, no multimethod	WITHOUT_CLASSIFICATION	0.9997834360914695	WITHOUT_CLASSIFICATION	2.1656390853064342E-4	IMPLEMENTATION
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9986923897775564	WITHOUT_CLASSIFICATION	0.0013076102224435853	IMPLEMENTATION
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9986923897775564	WITHOUT_CLASSIFICATION	0.0013076102224435853	IMPLEMENTATION
// normal all-rest method	WITHOUT_CLASSIFICATION	0.9963479328438392	WITHOUT_CLASSIFICATION	0.003652067156160852	IMPLEMENTATION
// for zero, one, two, three arities, JavaMethod.JavaMethod*.call(...IRubyObject[] args...) will check	WITHOUT_CLASSIFICATION	0.9998661077345841	WITHOUT_CLASSIFICATION	1.3389226541589031E-4	IMPLEMENTATION
// promise to implement zero to N	WITHOUT_CLASSIFICATION	0.9910116743890789	WITHOUT_CLASSIFICATION	0.00898832561092104	IMPLEMENTATION
// return	WITHOUT_CLASSIFICATION	0.9999593285395587	WITHOUT_CLASSIFICATION	4.06714604413081E-5	IMPLEMENTATION
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999773643016212	WITHOUT_CLASSIFICATION	2.263569837870776E-5	IMPLEMENTATION
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999218275949384	WITHOUT_CLASSIFICATION	7.817240506163335E-5	IMPLEMENTATION
// confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999028471518816	WITHOUT_CLASSIFICATION	9.715284811832784E-5	IMPLEMENTATION
// confirm maximum not greater than optional	WITHOUT_CLASSIFICATION	0.996065661487836	WITHOUT_CLASSIFICATION	0.003934338512163996	IMPLEMENTATION
// Raise an error if arity does not match requirements	WITHOUT_CLASSIFICATION	0.9999701596505154	WITHOUT_CLASSIFICATION	2.9840349484641783E-5	IMPLEMENTATION
// tc	WITHOUT_CLASSIFICATION	0.999970764908297	WITHOUT_CLASSIFICATION	2.9235091703083797E-5	IMPLEMENTATION
// self // name	WITHOUT_CLASSIFICATION	0.9986942351763737	WITHOUT_CLASSIFICATION	0.0013057648236263015	IMPLEMENTATION
// no args	WITHOUT_CLASSIFICATION	0.9999691009839768	WITHOUT_CLASSIFICATION	3.089901602309955E-5	IMPLEMENTATION
// variable args with block	WITHOUT_CLASSIFICATION	0.9997144874420673	WITHOUT_CLASSIFICATION	2.8551255793277347E-4	IMPLEMENTATION
// variable args no block, load null block	WITHOUT_CLASSIFICATION	0.999712924721266	WITHOUT_CLASSIFICATION	2.870752787338857E-4	IMPLEMENTATION
// zero args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9997008833375735	WITHOUT_CLASSIFICATION	2.9911666242658867E-4	IMPLEMENTATION
// one arg with block	WITHOUT_CLASSIFICATION	0.9996456327928342	WITHOUT_CLASSIFICATION	3.5436720716579886E-4	IMPLEMENTATION
// one arg, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9996574517046167	WITHOUT_CLASSIFICATION	3.42548295383242E-4	IMPLEMENTATION
// two args with block	WITHOUT_CLASSIFICATION	0.9993260872445804	WITHOUT_CLASSIFICATION	6.739127554196293E-4	IMPLEMENTATION
// two args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9993004567617382	WITHOUT_CLASSIFICATION	6.995432382617404E-4	IMPLEMENTATION
// three args with block	WITHOUT_CLASSIFICATION	0.9996980671607164	WITHOUT_CLASSIFICATION	3.0193283928356445E-4	IMPLEMENTATION
// three args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9996865795095801	WITHOUT_CLASSIFICATION	3.1342049041990425E-4	IMPLEMENTATION
// load block if it accepts block	WITHOUT_CLASSIFICATION	0.9998925445553218	WITHOUT_CLASSIFICATION	1.0745544467818075E-4	IMPLEMENTATION
// all other arg cases with block	WITHOUT_CLASSIFICATION	0.9990593234776737	WITHOUT_CLASSIFICATION	9.40676522326272E-4	IMPLEMENTATION
// all other arg cases without block	WITHOUT_CLASSIFICATION	0.9991242666155964	WITHOUT_CLASSIFICATION	8.757333844036595E-4	IMPLEMENTATION
// one arg, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999432998416987	WITHOUT_CLASSIFICATION	5.670015830126049E-5	IMPLEMENTATION
// two args, no block; do nothing	WITHOUT_CLASSIFICATION	0.999884173891497	WITHOUT_CLASSIFICATION	1.1582610850299344E-4	IMPLEMENTATION
// three args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999481224703957	WITHOUT_CLASSIFICATION	5.187752960435072E-5	IMPLEMENTATION
// load target for invocations	WITHOUT_CLASSIFICATION	0.9999311729455194	WITHOUT_CLASSIFICATION	6.882705448060706E-5	IMPLEMENTATION
// load receiver as original type for virtual invocation	WITHOUT_CLASSIFICATION	0.9999372510282903	WITHOUT_CLASSIFICATION	6.274897170960971E-5	IMPLEMENTATION
// static invocation	WITHOUT_CLASSIFICATION	0.9989168365152127	WITHOUT_CLASSIFICATION	0.001083163484787301	IMPLEMENTATION
// virtual invocation	WITHOUT_CLASSIFICATION	0.9997877334300682	WITHOUT_CLASSIFICATION	2.1226656993181153E-4	IMPLEMENTATION
// void return type, so we need to load a nil for returning below	WITHOUT_CLASSIFICATION	0.9998725067605814	WITHOUT_CLASSIFICATION	1.274932394186934E-4	IMPLEMENTATION
// normal finally and exit	WITHOUT_CLASSIFICATION	0.9997729237086895	WITHOUT_CLASSIFICATION	2.2707629131044947E-4	IMPLEMENTATION
// promise to implement one to N	WITHOUT_CLASSIFICATION	0.989719547128808	WITHOUT_CLASSIFICATION	0.010280452871191953	IMPLEMENTATION
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9803109182574906	WITHOUT_CLASSIFICATION	0.019689081742509402	IMPLEMENTATION
// these are only needed if we have a non-noop call config	WITHOUT_CLASSIFICATION	0.8334237617120652	WITHOUT_CLASSIFICATION	0.16657623828793477	IMPLEMENTATION
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9970340499180039	WITHOUT_CLASSIFICATION	0.0029659500819961978	IMPLEMENTATION
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9970340499180039	WITHOUT_CLASSIFICATION	0.0029659500819961978	IMPLEMENTATION
// singleton classes don't get their own visibility domain	WITHOUT_CLASSIFICATION	0.9999725106491095	WITHOUT_CLASSIFICATION	2.7489350890569087E-5	IMPLEMENTATION
// For visibility we need real meta class and not anonymous one from class << self	WITHOUT_CLASSIFICATION	0.9889477330681115	WITHOUT_CLASSIFICATION	0.011052266931888476	IMPLEMENTATION
// SimpleInvocationMethod	WITHOUT_CLASSIFICATION	0.9997877334300682	WITHOUT_CLASSIFICATION	2.1226656993181153E-4	IMPLEMENTATION
// never reached	WITHOUT_CLASSIFICATION	0.9891243413093386	WITHOUT_CLASSIFICATION	0.01087565869066154	IMPLEMENTATION
// promise to implement N with block	WITHOUT_CLASSIFICATION	0.9855196836851645	WITHOUT_CLASSIFICATION	0.014480316314835463	IMPLEMENTATION
// promise to implement zero to N with block	WITHOUT_CLASSIFICATION	0.9862634314238006	WITHOUT_CLASSIFICATION	0.013736568576199343	IMPLEMENTATION
// promise to implement one to N with block	WITHOUT_CLASSIFICATION	0.9842995291163636	WITHOUT_CLASSIFICATION	0.015700470883636353	IMPLEMENTATION
// promise to implement two to N with block	WITHOUT_CLASSIFICATION	0.9684421816472013	WITHOUT_CLASSIFICATION	0.031557818352798646	IMPLEMENTATION
// promise to implement zero to three with block	WITHOUT_CLASSIFICATION	0.9863546710773374	WITHOUT_CLASSIFICATION	0.013645328922662653	IMPLEMENTATION
// promise to implement one to three with block	WITHOUT_CLASSIFICATION	0.9844036069244867	WITHOUT_CLASSIFICATION	0.015596393075513248	IMPLEMENTATION
// promise to implement two to three with block	WITHOUT_CLASSIFICATION	0.9686480289753828	WITHOUT_CLASSIFICATION	0.03135197102461718	IMPLEMENTATION
// promise to implement three with block	WITHOUT_CLASSIFICATION	0.9856157913367349	WITHOUT_CLASSIFICATION	0.014384208663265025	IMPLEMENTATION
// promise to implement N	WITHOUT_CLASSIFICATION	0.9920436896049546	WITHOUT_CLASSIFICATION	0.00795631039504537	IMPLEMENTATION
// DumpingInvocationMethodFactory	WITHOUT_CLASSIFICATION	0.9997467728107063	WITHOUT_CLASSIFICATION	2.5322718929362756E-4	IMPLEMENTATION
// We promote our box to being its own box since we're changing // visibilities, and need it to be reflected on this method object // independent of any other sharing the box.	WITHOUT_CLASSIFICATION	0.9995338346226184	WITHOUT_CLASSIFICATION	4.661653773817205E-4	IMPLEMENTATION
// Normally we could leave these to fall back on the superclass, but // since it dispatches through the [] version below, which may // dispatch through the []+block version, we can save it a couple hops // by overriding these here.	WITHOUT_CLASSIFICATION	0.9991904180299148	WITHOUT_CLASSIFICATION	8.095819700851855E-4	IMPLEMENTATION
// promise to implement two to N	WITHOUT_CLASSIFICATION	0.9792208103250221	WITHOUT_CLASSIFICATION	0.020779189674978018	IMPLEMENTATION
// promise to implement three to N	WITHOUT_CLASSIFICATION	0.9905857635528479	WITHOUT_CLASSIFICATION	0.00941423644715223	IMPLEMENTATION
// promise to implement zero to three	WITHOUT_CLASSIFICATION	0.9910716612475103	WITHOUT_CLASSIFICATION	0.008928338752489683	IMPLEMENTATION
// promise to implement one to three	WITHOUT_CLASSIFICATION	0.9897880686071205	WITHOUT_CLASSIFICATION	0.010211931392879474	IMPLEMENTATION
// promise to implement two to three	WITHOUT_CLASSIFICATION	0.9793578487248574	WITHOUT_CLASSIFICATION	0.020642151275142524	IMPLEMENTATION
// promise to implement three	WITHOUT_CLASSIFICATION	0.9920968438615969	WITHOUT_CLASSIFICATION	0.007903156138403101	IMPLEMENTATION
// all other arities use "n" dispatch path	WITHOUT_CLASSIFICATION	0.9989757368985878	WITHOUT_CLASSIFICATION	0.001024263101412247	IMPLEMENTATION
// load up object and add a few useful methods	WITHOUT_CLASSIFICATION	0.9999894461914085	WITHOUT_CLASSIFICATION	1.0553808591457116E-5	IMPLEMENTATION
// open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel	WITHOUT_CLASSIFICATION	0.9999625845365312	WITHOUT_CLASSIFICATION	3.7415463468892306E-5	IMPLEMENTATION
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9997313536627629	WITHOUT_CLASSIFICATION	2.6864633723711675E-4	IMPLEMENTATION
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9085263031243197	WITHOUT_CLASSIFICATION	0.09147369687568026	IMPLEMENTATION
// create constructor	WITHOUT_CLASSIFICATION	0.9997963908701681	WITHOUT_CLASSIFICATION	2.0360912983180679E-4	IMPLEMENTATION
// wrap self and store the wrapper	WITHOUT_CLASSIFICATION	0.9998646737059795	WITHOUT_CLASSIFICATION	1.3532629402044377E-4	IMPLEMENTATION
// end constructor	WITHOUT_CLASSIFICATION	0.9987273413304313	WITHOUT_CLASSIFICATION	0.0012726586695687135	IMPLEMENTATION
// start setup method	WITHOUT_CLASSIFICATION	0.9981242542619932	WITHOUT_CLASSIFICATION	0.0018757457380068343	IMPLEMENTATION
// set RubyClass	WITHOUT_CLASSIFICATION	0.9989963205246363	WITHOUT_CLASSIFICATION	0.001003679475363683	IMPLEMENTATION
// set Ruby	WITHOUT_CLASSIFICATION	0.9989963205246363	WITHOUT_CLASSIFICATION	0.001003679475363683	IMPLEMENTATION
// all methods dispatch to the simple version by default, which is method_missing normally	WITHOUT_CLASSIFICATION	0.9998893706169834	WITHOUT_CLASSIFICATION	1.106293830166262E-4	IMPLEMENTATION
// try specific name first, falling back on simple name	WITHOUT_CLASSIFICATION	0.993747766319671	WITHOUT_CLASSIFICATION	0.006252233680329075	IMPLEMENTATION
// get current context	WITHOUT_CLASSIFICATION	0.999494107027509	WITHOUT_CLASSIFICATION	5.058929724910588E-4	IMPLEMENTATION
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9996875013324351	WITHOUT_CLASSIFICATION	3.124986675648762E-4	IMPLEMENTATION
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9997313536627629	WITHOUT_CLASSIFICATION	2.6864633723711675E-4	IMPLEMENTATION
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9085263031243197	WITHOUT_CLASSIFICATION	0.09147369687568026	IMPLEMENTATION
// create constructor	WITHOUT_CLASSIFICATION	0.9997963908701681	WITHOUT_CLASSIFICATION	2.0360912983180679E-4	IMPLEMENTATION
// end constructor	WITHOUT_CLASSIFICATION	0.9987273413304313	WITHOUT_CLASSIFICATION	0.0012726586695687135	IMPLEMENTATION
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9899710125037702	WITHOUT_CLASSIFICATION	0.010028987496229828	IMPLEMENTATION
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9998938890531716	WITHOUT_CLASSIFICATION	1.0611094682851648E-4	IMPLEMENTATION
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9998240693857647	WITHOUT_CLASSIFICATION	1.7593061423526584E-4	IMPLEMENTATION
// load null block	WITHOUT_CLASSIFICATION	0.9989325654287621	WITHOUT_CLASSIFICATION	0.0010674345712378306	IMPLEMENTATION
// invoke method	WITHOUT_CLASSIFICATION	0.9894474588841043	WITHOUT_CLASSIFICATION	0.010552541115895674	IMPLEMENTATION
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.999710362256834	WITHOUT_CLASSIFICATION	2.8963774316609044E-4	IMPLEMENTATION
// end setup method	WITHOUT_CLASSIFICATION	0.9820817716506463	WITHOUT_CLASSIFICATION	0.017918228349353756	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.9990547908465232	WITHOUT_CLASSIFICATION	9.45209153476948E-4	IMPLEMENTATION
// create static init, for a monitor object	WITHOUT_CLASSIFICATION	0.9999373320857184	WITHOUT_CLASSIFICATION	6.266791428156623E-5	IMPLEMENTATION
// store the wrapper	WITHOUT_CLASSIFICATION	0.9991575006222473	WITHOUT_CLASSIFICATION	8.424993777527591E-4	IMPLEMENTATION
// prepare temp locals	WITHOUT_CLASSIFICATION	0.9997982294348179	WITHOUT_CLASSIFICATION	2.0177056518207818E-4	IMPLEMENTATION
// Try to look up field for simple name // get field; if nonnull, go straight to dispatch	WITHOUT_CLASSIFICATION	0.9999982621164393	WITHOUT_CLASSIFICATION	1.7378835607007563E-6	IMPLEMENTATION
// field is null, lock class and try to populate	WITHOUT_CLASSIFICATION	0.9999879613130643	WITHOUT_CLASSIFICATION	1.203868693566393E-5	IMPLEMENTATION
// try/finally block to ensure unlock	WITHOUT_CLASSIFICATION	0.9994708175335976	WITHOUT_CLASSIFICATION	5.291824664024598E-4	IMPLEMENTATION
// store it	WITHOUT_CLASSIFICATION	0.9981860875280864	WITHOUT_CLASSIFICATION	0.0018139124719136982	IMPLEMENTATION
// end of try block	WITHOUT_CLASSIFICATION	0.9985423679043828	WITHOUT_CLASSIFICATION	0.0014576320956171365	IMPLEMENTATION
// finally block to release monitor	WITHOUT_CLASSIFICATION	0.999697571490616	WITHOUT_CLASSIFICATION	3.0242850938396566E-4	IMPLEMENTATION
// exception handling for monitor release	WITHOUT_CLASSIFICATION	0.9993296364946286	WITHOUT_CLASSIFICATION	6.70363505371394E-4	IMPLEMENTATION
// re-get, re-check method; if not null now, go to dispatch	WITHOUT_CLASSIFICATION	0.9998618449449339	WITHOUT_CLASSIFICATION	1.3815505506607978E-4	IMPLEMENTATION
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9996875013324351	WITHOUT_CLASSIFICATION	3.124986675648762E-4	IMPLEMENTATION
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9998938890531716	WITHOUT_CLASSIFICATION	1.0611094682851648E-4	IMPLEMENTATION
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9998240693857647	WITHOUT_CLASSIFICATION	1.7593061423526584E-4	IMPLEMENTATION
// invoke method	WITHOUT_CLASSIFICATION	0.9894474588841043	WITHOUT_CLASSIFICATION	0.010552541115895674	IMPLEMENTATION
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.999710362256834	WITHOUT_CLASSIFICATION	2.8963774316609044E-4	IMPLEMENTATION
// end setup method	WITHOUT_CLASSIFICATION	0.9820817716506463	WITHOUT_CLASSIFICATION	0.017918228349353756	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.9990547908465232	WITHOUT_CLASSIFICATION	9.45209153476948E-4	IMPLEMENTATION
// create the class	WITHOUT_CLASSIFICATION	0.9992809640574504	WITHOUT_CLASSIFICATION	7.190359425496411E-4	IMPLEMENTATION
// method still not available, call method_missing	WITHOUT_CLASSIFICATION	0.6285805481374933	WITHOUT_CLASSIFICATION	0.37141945186250674	IMPLEMENTATION
// perform the dispatch	WITHOUT_CLASSIFICATION	0.9998209906809108	WITHOUT_CLASSIFICATION	1.7900931908911583E-4	IMPLEMENTATION
// try to load the specified name; only if that fails, try to define the class	WITHOUT_CLASSIFICATION	0.999924485054103	WITHOUT_CLASSIFICATION	7.551494589705819E-5	IMPLEMENTATION
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.999885600505709	WITHOUT_CLASSIFICATION	1.143994942910229E-4	IMPLEMENTATION
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.999885600505709	WITHOUT_CLASSIFICATION	1.143994942910229E-4	IMPLEMENTATION
// setup the class	WITHOUT_CLASSIFICATION	0.9995119741858495	WITHOUT_CLASSIFICATION	4.880258141506169E-4	IMPLEMENTATION
// now, create a method_added that can replace the DynamicMethod fields as they're redefined	WITHOUT_CLASSIFICATION	0.9953755645651632	WITHOUT_CLASSIFICATION	0.004624435434836859	IMPLEMENTATION
// do nothing, it's a non-impl method	WITHOUT_CLASSIFICATION	0.9930284201539997	WITHOUT_CLASSIFICATION	0.00697157984600028	IMPLEMENTATION
// probably a primitive	WITHOUT_CLASSIFICATION	0.9999049690547339	WITHOUT_CLASSIFICATION	9.503094526606375E-5	IMPLEMENTATION
// interfaces are handled as modules	WITHOUT_CLASSIFICATION	0.9999620330904637	WITHOUT_CLASSIFICATION	3.7966909536273515E-5	IMPLEMENTATION
// construct the mirror class and parent classes	WITHOUT_CLASSIFICATION	0.999939647575486	WITHOUT_CLASSIFICATION	6.035242451401103E-5	IMPLEMENTATION
// set the full name	WITHOUT_CLASSIFICATION	0.9982146593234471	WITHOUT_CLASSIFICATION	0.0017853406765529442	IMPLEMENTATION
// include all interfaces	WITHOUT_CLASSIFICATION	0.9997812384985696	WITHOUT_CLASSIFICATION	2.1876150143044644E-4	IMPLEMENTATION
// if it's an array, only add methods for aref, aset, and length	WITHOUT_CLASSIFICATION	0.9999937964842638	WITHOUT_CLASSIFICATION	6.203515736209321E-6	IMPLEMENTATION
// add array construction methods	WITHOUT_CLASSIFICATION	0.9998699159891132	WITHOUT_CLASSIFICATION	1.3008401088673141E-4	IMPLEMENTATION
// add all public constructors (note: getConstructors only returns public ones)	WITHOUT_CLASSIFICATION	0.9997663634855132	WITHOUT_CLASSIFICATION	2.3363651448674217E-4	IMPLEMENTATION
// add all instance and static methods	WITHOUT_CLASSIFICATION	0.9999210482860679	WITHOUT_CLASSIFICATION	7.895171393219171E-5	IMPLEMENTATION
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9996944395536348	WITHOUT_CLASSIFICATION	3.0556044636517754E-4	IMPLEMENTATION
// too much array creation!	WITHOUT_CLASSIFICATION	0.9998722081802418	WITHOUT_CLASSIFICATION	1.2779181975819656E-4	IMPLEMENTATION
// only include static methods if specified	WITHOUT_CLASSIFICATION	0.9999726259187922	WITHOUT_CLASSIFICATION	2.7374081207793944E-5	IMPLEMENTATION
// add a few type-specific special methods	WITHOUT_CLASSIFICATION	0.999915398419517	WITHOUT_CLASSIFICATION	8.46015804829885E-5	IMPLEMENTATION
// add all static variables	WITHOUT_CLASSIFICATION	0.9997027235711077	WITHOUT_CLASSIFICATION	2.9727642889234337E-4	IMPLEMENTATION
// only public static fields that are valid constants	WITHOUT_CLASSIFICATION	0.9999768366565372	WITHOUT_CLASSIFICATION	2.3163343462765846E-5	IMPLEMENTATION
// looks like someone's trying to raise a Java exception. Let them.	WITHOUT_CLASSIFICATION	0.9995156432547924	WITHOUT_CLASSIFICATION	4.843567452076375E-4	IMPLEMENTATION
// NOTE: The five match methods are arity-split to avoid the cost of boxing arguments // when there's already a cached match. Do not condense them into a single // method.	WITHOUT_CLASSIFICATION	0.9996121002501939	WITHOUT_CLASSIFICATION	3.878997498061379E-4	IMPLEMENTATION
// TODO: This is where we would want to do precision checks to see // if it's non-destructive to coerce a given type into the target // integral primitive	WITHOUT_CLASSIFICATION	0.8561103257429749	IMPLEMENTATION	0.14388967425702515	WITHOUT_CLASSIFICATION
// long first because it's what Fixnum claims to be	WITHOUT_CLASSIFICATION	0.9950778507291156	WITHOUT_CLASSIFICATION	0.004922149270884449	IMPLEMENTATION
// double first because it's what float claims to be	WITHOUT_CLASSIFICATION	0.9995385245241518	WITHOUT_CLASSIFICATION	4.6147547584827336E-4	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.8621030793719444	IMPLEMENTATION	0.1378969206280555	WITHOUT_CLASSIFICATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9990652123136763	WITHOUT_CLASSIFICATION	9.347876863236658E-4	IMPLEMENTATION
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9969783363349913	WITHOUT_CLASSIFICATION	0.003021663665008624	IMPLEMENTATION
// we set all Java methods to optional, since many/most have overloads	WITHOUT_CLASSIFICATION	0.9999182409862462	WITHOUT_CLASSIFICATION	8.175901375376011E-5	IMPLEMENTATION
// If we hold a Java object, we need a java_class accessor	WITHOUT_CLASSIFICATION	0.9993035710283956	WITHOUT_CLASSIFICATION	6.964289716045137E-4	IMPLEMENTATION
// line 326	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9990652123136763	WITHOUT_CLASSIFICATION	9.347876863236658E-4	IMPLEMENTATION
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9969783363349913	WITHOUT_CLASSIFICATION	0.003021663665008624	IMPLEMENTATION
// too much array creation!	WITHOUT_CLASSIFICATION	0.9998722081802418	WITHOUT_CLASSIFICATION	1.2779181975819656E-4	IMPLEMENTATION
// construct new array proxy (ArrayJavaProxy)	WITHOUT_CLASSIFICATION	0.9998794572360842	WITHOUT_CLASSIFICATION	1.205427639158528E-4	IMPLEMENTATION
// Get map of all fields we want to define.  	WITHOUT_CLASSIFICATION	0.9997606202591579	WITHOUT_CLASSIFICATION	2.3937974084201326E-4	IMPLEMENTATION
// Look through all mappings to find a match entry for this field	WITHOUT_CLASSIFICATION	0.9999105134507719	WITHOUT_CLASSIFICATION	8.948654922822184E-5	IMPLEMENTATION
// Hit a non-java proxy class (included Modules can be a cause of this...skip)	WITHOUT_CLASSIFICATION	0.9999319129498851	WITHOUT_CLASSIFICATION	6.808705011480223E-5	IMPLEMENTATION
// We could not find all of them print out first one (we could print them all?)	WITHOUT_CLASSIFICATION	0.9988226821624213	WITHOUT_CLASSIFICATION	0.0011773178375786952	IMPLEMENTATION
// dummy bodies for default impls	WITHOUT_CLASSIFICATION	0.9999808374364132	WITHOUT_CLASSIFICATION	1.9162563586836536E-5	IMPLEMENTATION
// initialize this if it hasn't been	WITHOUT_CLASSIFICATION	0.9997796179372616	WITHOUT_CLASSIFICATION	2.20382062738514E-4	IMPLEMENTATION
// initialize these if they haven't been	WITHOUT_CLASSIFICATION	0.9999509560261416	WITHOUT_CLASSIFICATION	4.904397385841588E-5	IMPLEMENTATION
// not allowed for original (non-generated) Java classes // note: not allowing for any previously created class right now; // this restriction might be loosened later for generated classes	WITHOUT_CLASSIFICATION	0.9992252265719654	WITHOUT_CLASSIFICATION	7.747734280346444E-4	IMPLEMENTATION
// setup new, etc unless this is a ConcreteJavaProxy subclass	WITHOUT_CLASSIFICATION	0.9999061358137206	WITHOUT_CLASSIFICATION	9.38641862794281E-5	IMPLEMENTATION
// First we make modifications to the class, to adapt it to being // both a Ruby class and a proxy for a Java type	WITHOUT_CLASSIFICATION	0.9998936465756351	WITHOUT_CLASSIFICATION	1.0635342436483486E-4	IMPLEMENTATION
// list of interfaces we implement	WITHOUT_CLASSIFICATION	0.9926395610754737	WITHOUT_CLASSIFICATION	0.007360438924526325	IMPLEMENTATION
// We capture the original "new" and make it private	WITHOUT_CLASSIFICATION	0.9980877868238869	WITHOUT_CLASSIFICATION	0.0019122131761130983	IMPLEMENTATION
// The replacement "new" allocates and inits the Ruby object as before, but // also instantiates our proxified Java object by calling __jcreate!	WITHOUT_CLASSIFICATION	0.9999916995007687	WITHOUT_CLASSIFICATION	8.300499231212922E-6	IMPLEMENTATION
// Next, we define a few private methods that we'll use to manipulate // the Java object contained within this Ruby object	WITHOUT_CLASSIFICATION	0.999394470747074	WITHOUT_CLASSIFICATION	6.055292529260656E-4	IMPLEMENTATION
// jcreate instantiates the proxy object which implements all interfaces // and which is wrapped and implemented by this object	WITHOUT_CLASSIFICATION	0.8260607826581274	WITHOUT_CLASSIFICATION	0.17393921734187265	IMPLEMENTATION
// Now we add an "implement" and "implement_all" methods to the class	WITHOUT_CLASSIFICATION	0.9999580200837341	WITHOUT_CLASSIFICATION	4.197991626581751E-5	IMPLEMENTATION
// implement all forces implementation of all interfaces we intend // for this class to implement	WITHOUT_CLASSIFICATION	0.9734473169191699	WITHOUT_CLASSIFICATION	0.026552683080830128	IMPLEMENTATION
// we've already done the above priming logic, just add another interface // to the list of intentions unless we're past the point of no return or // already intend to implement the given interface	WITHOUT_CLASSIFICATION	0.9993477533570586	WITHOUT_CLASSIFICATION	6.522466429415097E-4	IMPLEMENTATION
// walk all superclasses aggregating interfaces	WITHOUT_CLASSIFICATION	0.9997523801056278	WITHOUT_CLASSIFICATION	2.476198943721501E-4	IMPLEMENTATION
// construct the new interface impl and set it into the object	WITHOUT_CLASSIFICATION	0.9998546243934048	WITHOUT_CLASSIFICATION	1.4537560659529453E-4	IMPLEMENTATION
// assuming the user wants a collection of interfaces that can be // included together. make it so.	WITHOUT_CLASSIFICATION	0.9915245632649552	WITHOUT_CLASSIFICATION	0.008475436735044873	IMPLEMENTATION
// not allowed for existing Java interface modules	WITHOUT_CLASSIFICATION	0.9994643931626374	WITHOUT_CLASSIFICATION	5.356068373626247E-4	IMPLEMENTATION
// To turn a module into an "interface collection" we add a class instance // variable to hold the list of interfaces, and modify append_features // for this module to call append_features on each of those interfaces as // well	WITHOUT_CLASSIFICATION	0.9999991040800997	WITHOUT_CLASSIFICATION	8.959199002102672E-7	IMPLEMENTATION
// already set up append_features, just add the interface if we haven't already	WITHOUT_CLASSIFICATION	0.9999976988992327	WITHOUT_CLASSIFICATION	2.3011007673378677E-6	IMPLEMENTATION
// array-of-interface-type creation/identity	WITHOUT_CLASSIFICATION	0.9997467728107063	WITHOUT_CLASSIFICATION	2.5322718929362756E-4	IMPLEMENTATION
// keep this variant for kind_of? testing	WITHOUT_CLASSIFICATION	0.9998885826214247	WITHOUT_CLASSIFICATION	1.1141737857532069E-4	IMPLEMENTATION
// array creation should use this variant	WITHOUT_CLASSIFICATION	0.9974609204185584	WITHOUT_CLASSIFICATION	0.0025390795814416237	IMPLEMENTATION
// parent.setConstant(name, proxyClass); // where the name should come from ?	WITHOUT_CLASSIFICATION	0.999552650433706	WITHOUT_CLASSIFICATION	4.4734956629397156E-4	IMPLEMENTATION
// including interface module so old-style interface "subclasses" will // respond correctly to #kind_of?, etc.	WITHOUT_CLASSIFICATION	0.9997886977705267	WITHOUT_CLASSIFICATION	2.1130222947330762E-4	IMPLEMENTATION
// add reference to interface module	WITHOUT_CLASSIFICATION	0.9999534031013219	WITHOUT_CLASSIFICATION	4.659689867818973E-5	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9984093723251959	WITHOUT_CLASSIFICATION	0.0015906276748040456	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9984093723251959	WITHOUT_CLASSIFICATION	0.0015906276748040456	IMPLEMENTATION
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9996944395536348	WITHOUT_CLASSIFICATION	3.0556044636517754E-4	IMPLEMENTATION
// same as argument_types, but matches name in java.lang.reflect.Constructor/Method	WITHOUT_CLASSIFICATION	0.9999973587880217	WITHOUT_CLASSIFICATION	2.6412119783138285E-6	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999992127217344	WITHOUT_CLASSIFICATION	7.872782656166848E-7	IMPLEMENTATION
// weakly reserved names	WITHOUT_CLASSIFICATION	0.9999063906840157	WITHOUT_CLASSIFICATION	9.360931598434254E-5	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9997929512826901	WITHOUT_CLASSIFICATION	2.070487173100169E-4	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9997929512826901	WITHOUT_CLASSIFICATION	2.070487173100169E-4	IMPLEMENTATION
// modified only by addMethod; no synchronization required	WITHOUT_CLASSIFICATION	0.9964972196757416	WITHOUT_CLASSIFICATION	0.0035027803242584712	IMPLEMENTATION
// if there's no constructor, we must prevent construction	WITHOUT_CLASSIFICATION	0.9989832805390273	WITHOUT_CLASSIFICATION	0.0010167194609726996	IMPLEMENTATION
// caching constructors, as they're accessed for each new instance	WITHOUT_CLASSIFICATION	0.9999622111951607	WITHOUT_CLASSIFICATION	3.778880483925849E-5	IMPLEMENTATION
// proxy module for interfaces	WITHOUT_CLASSIFICATION	0.9999489232675473	WITHOUT_CLASSIFICATION	5.1076732452782044E-5	IMPLEMENTATION
// proxy class for concrete classes.  also used for // "concrete" interfaces, which is why we have two fields	WITHOUT_CLASSIFICATION	0.9997025927208416	WITHOUT_CLASSIFICATION	2.9740727915830636E-4	IMPLEMENTATION
// readable only by thread building proxy, so don't need to be // volatile. used to handle recursive calls to getProxyClass/Module // while proxy is being constructed (usually when a constant // defined by a class is of the same type as that class).	WITHOUT_CLASSIFICATION	0.9999711582295436	WITHOUT_CLASSIFICATION	2.8841770456409626E-5	IMPLEMENTATION
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999778444494105	WITHOUT_CLASSIFICATION	2.215555058951458E-5	IMPLEMENTATION
// Now add all aliases for the static methods (fields) as appropriate	WITHOUT_CLASSIFICATION	0.9999085991166874	WITHOUT_CLASSIFICATION	9.140088331261084E-5	IMPLEMENTATION
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9998798398217034	WITHOUT_CLASSIFICATION	1.2016017829667021E-4	IMPLEMENTATION
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9997125429452681	WITHOUT_CLASSIFICATION	2.8745705473190783E-4	IMPLEMENTATION
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999230943228994	WITHOUT_CLASSIFICATION	7.690567710066134E-5	IMPLEMENTATION
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999047938547755	WITHOUT_CLASSIFICATION	9.520614522449628E-5	IMPLEMENTATION
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9998864195653362	WITHOUT_CLASSIFICATION	1.1358043466375905E-4	IMPLEMENTATION
// Additionally add ?-postfixed aliases to any boolean methods and properties.	WITHOUT_CLASSIFICATION	0.9999651540954291	WITHOUT_CLASSIFICATION	3.4845904570905264E-5	IMPLEMENTATION
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9997467728107063	WITHOUT_CLASSIFICATION	2.5322718929362756E-4	IMPLEMENTATION
// something?	WITHOUT_CLASSIFICATION	0.998213016424753	WITHOUT_CLASSIFICATION	0.001786983575246992	IMPLEMENTATION
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.999993981196702	WITHOUT_CLASSIFICATION	6.018803297985553E-6	IMPLEMENTATION
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.999993981196702	WITHOUT_CLASSIFICATION	6.018803297985553E-6	IMPLEMENTATION
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.999923427496751	WITHOUT_CLASSIFICATION	7.657250324901853E-5	IMPLEMENTATION
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.999923427496751	WITHOUT_CLASSIFICATION	7.657250324901853E-5	IMPLEMENTATION
// create constructorInstaller; if there are no constructors, it will disable construction	WITHOUT_CLASSIFICATION	0.9999744130647843	WITHOUT_CLASSIFICATION	2.5586935215792312E-5	IMPLEMENTATION
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9998595780419047	WITHOUT_CLASSIFICATION	1.4042195809527142E-4	IMPLEMENTATION
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999467309108406	WITHOUT_CLASSIFICATION	5.3269089159296416E-5	IMPLEMENTATION
// now iterate over all installers and make sure they also have appropriate aliases	WITHOUT_CLASSIFICATION	0.9997228439040906	WITHOUT_CLASSIFICATION	2.7715609590935725E-4	IMPLEMENTATION
// old (quasi-deprecated) interface class	WITHOUT_CLASSIFICATION	0.9999638836903642	WITHOUT_CLASSIFICATION	3.611630963573343E-5	IMPLEMENTATION
// 1.9 support for encodings	WITHOUT_CLASSIFICATION	0.9986893252949547	WITHOUT_CLASSIFICATION	0.0013106747050453957	IMPLEMENTATION
// double-check the cache now that we're synchronized	WITHOUT_CLASSIFICATION	0.9997460688347081	WITHOUT_CLASSIFICATION	2.539311652919176E-4	IMPLEMENTATION
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999047938547755	WITHOUT_CLASSIFICATION	9.520614522449628E-5	IMPLEMENTATION
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9998864195653362	WITHOUT_CLASSIFICATION	1.1358043466375905E-4	IMPLEMENTATION
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9997467728107063	WITHOUT_CLASSIFICATION	2.5322718929362756E-4	IMPLEMENTATION
// one word type name that starts lower-case...it may be a primitive type	WITHOUT_CLASSIFICATION	0.9998216470769649	WITHOUT_CLASSIFICATION	1.783529230350268E-4	IMPLEMENTATION
// Java.getProxyClass deals with sync issues, so we won't duplicate the logic here	WITHOUT_CLASSIFICATION	0.999953611038878	WITHOUT_CLASSIFICATION	4.6388961121868254E-5	IMPLEMENTATION
// note: intentionally returning the actual array returned from Java, rather // than wrapping it in a RubyArray. wave of the future, when java_class will // return the actual class, rather than a JavaClass wrapper.	WITHOUT_CLASSIFICATION	0.9999982788448413	WITHOUT_CLASSIFICATION	1.7211551588095715E-6	IMPLEMENTATION
// see note above re: return type	WITHOUT_CLASSIFICATION	0.9999027318345037	WITHOUT_CLASSIFICATION	9.726816549624674E-5	IMPLEMENTATION
// restrictive security policy; no matter, we only want public // classes anyway	WITHOUT_CLASSIFICATION	0.9997707902727379	WITHOUT_CLASSIFICATION	2.2920972726217615E-4	IMPLEMENTATION
// very restrictive policy (disallows Member.PUBLIC) // we'd never actually get this far in that case	WITHOUT_CLASSIFICATION	0.9990434223214522	WITHOUT_CLASSIFICATION	9.565776785477722E-4	IMPLEMENTATION
// one-dimensional array	WITHOUT_CLASSIFICATION	0.9997750253161379	WITHOUT_CLASSIFICATION	2.249746838620174E-4	IMPLEMENTATION
// n-dimensional array	WITHOUT_CLASSIFICATION	0.9997750253161379	WITHOUT_CLASSIFICATION	2.249746838620174E-4	IMPLEMENTATION
// if it's an array of arrays, recurse with the component type	WITHOUT_CLASSIFICATION	0.9999964396744377	WITHOUT_CLASSIFICATION	3.560325562265017E-6	IMPLEMENTATION
// we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods // see JRUBY-3130	WITHOUT_CLASSIFICATION	0.9999937795890087	WITHOUT_CLASSIFICATION	6.220410991209778E-6	IMPLEMENTATION
// Proc implementing an interface, pull in the catch-all code that lets the proc get invoked // no matter what method is called on the interface	WITHOUT_CLASSIFICATION	0.9998755125979666	WITHOUT_CLASSIFICATION	1.2448740203341633E-4	IMPLEMENTATION
// can't be converted any more, return it	WITHOUT_CLASSIFICATION	0.9992072994915451	WITHOUT_CLASSIFICATION	7.92700508454896E-4	IMPLEMENTATION
// getFooBar() => fooBar?, foo_bar?(*)	WITHOUT_CLASSIFICATION	0.9998864195653362	WITHOUT_CLASSIFICATION	1.1358043466375905E-4	IMPLEMENTATION
// If not a property, but is boolean add ?-postfixed aliases.	WITHOUT_CLASSIFICATION	0.9996969344250723	WITHOUT_CLASSIFICATION	3.030655749276237E-4	IMPLEMENTATION
// many cases are ok to convert to float; if not one of these, error	WITHOUT_CLASSIFICATION	0.9994705678116464	WITHOUT_CLASSIFICATION	5.294321883535726E-4	IMPLEMENTATION
// for Object, default to natural wrapper type	WITHOUT_CLASSIFICATION	0.9999889965689119	WITHOUT_CLASSIFICATION	1.100343108803601E-5	IMPLEMENTATION
// rubyObject is already of the required jruby class (or subclass)	WITHOUT_CLASSIFICATION	0.999951926982831	WITHOUT_CLASSIFICATION	4.807301716897983E-5	IMPLEMENTATION
// the converters handle not only primitive types but also their boxed versions, so we should check // if we have a converter before checking for isPrimitive()	WITHOUT_CLASSIFICATION	0.9992341769135802	WITHOUT_CLASSIFICATION	7.658230864198967E-4	IMPLEMENTATION
// it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9943644561252929	WITHOUT_CLASSIFICATION	0.0056355438747071355	IMPLEMENTATION
// we've found a Java type to which we've coerced the Ruby value, wrap it	WITHOUT_CLASSIFICATION	0.9995327841804492	WITHOUT_CLASSIFICATION	4.672158195507619E-4	IMPLEMENTATION
// set of utility methods for Java-based proxy objects	WITHOUT_CLASSIFICATION	0.9999890844237179	WITHOUT_CLASSIFICATION	1.0915576282056983E-5	IMPLEMENTATION
// the proxy (wrapper) type hierarchy	WITHOUT_CLASSIFICATION	0.9999525116561915	WITHOUT_CLASSIFICATION	4.7488343808484845E-5	IMPLEMENTATION
//InterfaceJavaProxy.createInterfaceJavaProxy(context);	WITHOUT_CLASSIFICATION	0.9990655965962804	WITHOUT_CLASSIFICATION	9.344034037195148E-4	IMPLEMENTATION
// also create the JavaProxy* classes	WITHOUT_CLASSIFICATION	0.9995768598307971	WITHOUT_CLASSIFICATION	4.231401692028869E-4	IMPLEMENTATION
// The template for interface modules	WITHOUT_CLASSIFICATION	0.9999886760779135	WITHOUT_CLASSIFICATION	1.1323922086402887E-5	IMPLEMENTATION
// Now attach Java-related extras to core classes	WITHOUT_CLASSIFICATION	0.999722511117622	WITHOUT_CLASSIFICATION	2.774888823779254E-4	IMPLEMENTATION
// add all name-to-class mappings	WITHOUT_CLASSIFICATION	0.9996709347146597	WITHOUT_CLASSIFICATION	3.2906528534027227E-4	IMPLEMENTATION
// add some base Java classes everyone will need	WITHOUT_CLASSIFICATION	0.9995781272066001	WITHOUT_CLASSIFICATION	4.2187279339980376E-4	IMPLEMENTATION
// finally, set JavaSupport.isEnabled to true	WITHOUT_CLASSIFICATION	0.9997238847169718	WITHOUT_CLASSIFICATION	2.7611528302824744E-4	IMPLEMENTATION
// shouldn't happen, but if a superclass is specified, it's not ours	WITHOUT_CLASSIFICATION	0.9995917340627631	WITHOUT_CLASSIFICATION	4.0826593723680487E-4	IMPLEMENTATION
// include any interfaces we extend	WITHOUT_CLASSIFICATION	0.9981932467335933	WITHOUT_CLASSIFICATION	0.0018067532664066803	IMPLEMENTATION
// java.lang.Object is added at root of java proxy classes	WITHOUT_CLASSIFICATION	0.999998867109621	WITHOUT_CLASSIFICATION	1.132890378920013E-6	IMPLEMENTATION
// other java proxy classes added under their superclass' java proxy	WITHOUT_CLASSIFICATION	0.9999735697322795	WITHOUT_CLASSIFICATION	2.6430267720532042E-5	IMPLEMENTATION
// include interface modules into the proxy class	WITHOUT_CLASSIFICATION	0.9999740505204006	WITHOUT_CLASSIFICATION	2.5949479599391493E-5	IMPLEMENTATION
// JRUBY-2938 the proxy class might already exist	WITHOUT_CLASSIFICATION	0.9999698449408442	WITHOUT_CLASSIFICATION	3.015505915588333E-5	IMPLEMENTATION
// add java_method for unbound use	WITHOUT_CLASSIFICATION	0.9996848556725164	WITHOUT_CLASSIFICATION	3.151443274836408E-4	IMPLEMENTATION
// add alias to meta	WITHOUT_CLASSIFICATION	0.9992522968544827	WITHOUT_CLASSIFICATION	7.477031455173365E-4	IMPLEMENTATION
// we'll only map conventional class names to modules 	WITHOUT_CLASSIFICATION	0.9999599297459583	WITHOUT_CLASSIFICATION	4.0070254041763274E-5	IMPLEMENTATION
/* expected */	WITHOUT_CLASSIFICATION	0.9999058545929629	WITHOUT_CLASSIFICATION	9.414540703704772E-5	IMPLEMENTATION
// Haven't found a class, continue on as though it were a package	WITHOUT_CLASSIFICATION	0.9994044530180551	WITHOUT_CLASSIFICATION	5.955469819449092E-4	IMPLEMENTATION
// upper case name, so most likely a class	WITHOUT_CLASSIFICATION	0.9999101463690142	WITHOUT_CLASSIFICATION	8.985363098580768E-5	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999992127217344	WITHOUT_CLASSIFICATION	7.872782656166848E-7	IMPLEMENTATION
// add alias to meta	WITHOUT_CLASSIFICATION	0.9992522968544827	WITHOUT_CLASSIFICATION	7.477031455173365E-4	IMPLEMENTATION
// this is where we'll get connected when classes are opened using // package module syntax.	WITHOUT_CLASSIFICATION	0.9999808120727992	WITHOUT_CLASSIFICATION	1.9187927200726497E-5	IMPLEMENTATION
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9996738965512745	WITHOUT_CLASSIFICATION	3.261034487256148E-4	IMPLEMENTATION
// this covers primitives and (unlikely) lower-case class names	WITHOUT_CLASSIFICATION	0.9999293808061231	WITHOUT_CLASSIFICATION	7.061919387689083E-5	IMPLEMENTATION
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9997243902656624	WITHOUT_CLASSIFICATION	2.756097343376503E-4	IMPLEMENTATION
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9997243902656624	WITHOUT_CLASSIFICATION	2.756097343376503E-4	IMPLEMENTATION
// Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9999762967236091	WITHOUT_CLASSIFICATION	2.3703276390929397E-5	IMPLEMENTATION
// Create list of interfaces to proxy (and make sure they really are interfaces)	WITHOUT_CLASSIFICATION	0.999977087896068	WITHOUT_CLASSIFICATION	2.291210393210585E-5	IMPLEMENTATION
// hashcode is a combination of the interfaces and the Ruby class we're using // to implement them	WITHOUT_CLASSIFICATION	0.9999123490303166	WITHOUT_CLASSIFICATION	8.765096968348851E-5	IMPLEMENTATION
// if it's a singleton class and the real class is proc, we're doing closure conversion // so just use Proc's hashcode	WITHOUT_CLASSIFICATION	0.9999990793871764	WITHOUT_CLASSIFICATION	9.206128235629909E-7	IMPLEMENTATION
// normal new class implementing interfaces	WITHOUT_CLASSIFICATION	0.9998293858422052	WITHOUT_CLASSIFICATION	1.706141577949121E-4	IMPLEMENTATION
/*         * Initialize some components.         */	WITHOUT_CLASSIFICATION	0.9999584202691572	WITHOUT_CLASSIFICATION	4.1579730842899345E-5	IMPLEMENTATION
// not synchronizing these methods, no harm if these values get set more // than once. // (also note that there's no chance of getting a partially initialized // class/module, as happens-before is guaranteed by volatile write/read // of constants table.)	WITHOUT_CLASSIFICATION	0.9999804546016745	WITHOUT_CLASSIFICATION	1.9545398325404775E-5	IMPLEMENTATION
// Java reflection does not allow retrieving constructors like methods	WITHOUT_CLASSIFICATION	0.9517154415738559	WITHOUT_CLASSIFICATION	0.04828455842614416	IMPLEMENTATION
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9985327569250707	WITHOUT_CLASSIFICATION	0.001467243074929357	IMPLEMENTATION
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9985327569250707	WITHOUT_CLASSIFICATION	0.001467243074929357	IMPLEMENTATION
// no matching ctor found	WITHOUT_CLASSIFICATION	0.9997321728958375	WITHOUT_CLASSIFICATION	2.678271041625308E-4	IMPLEMENTATION
// Create Ruby proxies for any input arguments that are not primitives.	WITHOUT_CLASSIFICATION	0.9992272820215441	WITHOUT_CLASSIFICATION	7.727179784557883E-4	IMPLEMENTATION
// prepare a faster handle if handles are enabled and the method and class are public	WITHOUT_CLASSIFICATION	0.9999806851884285	WITHOUT_CLASSIFICATION	1.9314811571543366E-5	IMPLEMENTATION
// must be a public method	WITHOUT_CLASSIFICATION	0.9995872597968243	WITHOUT_CLASSIFICATION	4.127402031756996E-4	IMPLEMENTATION
// must be a public class	WITHOUT_CLASSIFICATION	0.9999808936568828	WITHOUT_CLASSIFICATION	1.9106343117222273E-5	IMPLEMENTATION
// must have been loaded from our known classloader hierarchy	WITHOUT_CLASSIFICATION	0.9999475414403622	WITHOUT_CLASSIFICATION	5.2458559637683856E-5	IMPLEMENTATION
// Special classes like Collections.EMPTY_LIST are inner classes that are private but  // implement public interfaces.  Their methods are all public methods for the public  // interface.  Let these public methods execute via setAccessible(true). 	WITHOUT_CLASSIFICATION	0.9996858772163455	WITHOUT_CLASSIFICATION	3.141227836544719E-4	IMPLEMENTATION
// search through all declared methods to find a closest match	WITHOUT_CLASSIFICATION	0.9999038614608762	WITHOUT_CLASSIFICATION	9.613853912374568E-5	IMPLEMENTATION
// no matching method found	WITHOUT_CLASSIFICATION	0.9968674259677154	WITHOUT_CLASSIFICATION	0.0031325740322846723	IMPLEMENTATION
// this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.9999906665345749	WITHOUT_CLASSIFICATION	9.33346542502112E-6	IMPLEMENTATION
/*         * First we need to register the JRuby engine.         */	WITHOUT_CLASSIFICATION	0.9997913276617004	WITHOUT_CLASSIFICATION	2.086723382995085E-4	IMPLEMENTATION
/*         * Now we create a new BSFManager.         */	WITHOUT_CLASSIFICATION	0.9999478174422664	WITHOUT_CLASSIFICATION	5.2182557733774525E-5	IMPLEMENTATION
/*         * Initialize a simple Frame.          */	WITHOUT_CLASSIFICATION	0.9999881820231963	WITHOUT_CLASSIFICATION	1.1817976803820522E-5	IMPLEMENTATION
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.999216654151653	WITHOUT_CLASSIFICATION	7.833458483471001E-4	IMPLEMENTATION
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.999216654151653	WITHOUT_CLASSIFICATION	7.833458483471001E-4	IMPLEMENTATION
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9997498391146628	WITHOUT_CLASSIFICATION	2.5016088533726214E-4	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.9990547908465232	WITHOUT_CLASSIFICATION	9.45209153476948E-4	IMPLEMENTATION
// // this test really means, that this is a ruby-defined subclass of a java class //	WITHOUT_CLASSIFICATION	0.9999906665345749	WITHOUT_CLASSIFICATION	9.33346542502112E-6	IMPLEMENTATION
// for our purposes, Accessibles are also Members, and vice-versa, // so we'll include Member methods here.	WITHOUT_CLASSIFICATION	0.9999821416232602	WITHOUT_CLASSIFICATION	1.78583767399216E-5	IMPLEMENTATION
/*             * Declare those components as beans in BSF. Then it will be             * possible to access those components in Ruby as global             * variables ($frame, $menubar, ...)             */	WITHOUT_CLASSIFICATION	0.9999996360188597	WITHOUT_CLASSIFICATION	3.639811402685116E-7	IMPLEMENTATION
/*              * Execute a Ruby script (add the menubar to the frame).             */	WITHOUT_CLASSIFICATION	0.9999935695017448	WITHOUT_CLASSIFICATION	6.4304982552703846E-6	IMPLEMENTATION
/*                     * Execute Ruby statements.                     */	WITHOUT_CLASSIFICATION	0.9999830543510747	WITHOUT_CLASSIFICATION	1.69456489252281E-5	IMPLEMENTATION
/*                     * Evaluates a Ruby expression and display the result.                     */	WITHOUT_CLASSIFICATION	0.9999922189016727	WITHOUT_CLASSIFICATION	7.781098327293258E-6	IMPLEMENTATION
// Populate values for the parameter names	WITHOUT_CLASSIFICATION	0.9999984070368886	WITHOUT_CLASSIFICATION	1.5929631114230287E-6	IMPLEMENTATION
/* package scope */	WITHOUT_CLASSIFICATION	0.9998214095860741	WITHOUT_CLASSIFICATION	1.7859041392589173E-4	IMPLEMENTATION
// This point is only reached if there was an exception handler // installed.	WITHOUT_CLASSIFICATION	0.9999992127217344	WITHOUT_CLASSIFICATION	7.872782656166848E-7	IMPLEMENTATION
// // Ruby-level methods //	WITHOUT_CLASSIFICATION	0.9999189134184056	WITHOUT_CLASSIFICATION	8.108658159435348E-5	IMPLEMENTATION
// need names ordered for key generation later	WITHOUT_CLASSIFICATION	0.9997333947310663	WITHOUT_CLASSIFICATION	2.666052689337484E-4	IMPLEMENTATION
// we only collect methods and interfaces for  // user-defined proxy classes.	WITHOUT_CLASSIFICATION	0.9999761619053915	WITHOUT_CLASSIFICATION	2.3838094608576786E-5	IMPLEMENTATION
// get JavaClass if this is the new proxy class; verify it // matches if this is a superclass proxy.	WITHOUT_CLASSIFICATION	0.9999948908844274	WITHOUT_CLASSIFICATION	5.10911557264533E-6	IMPLEMENTATION
// get any included interfaces	WITHOUT_CLASSIFICATION	0.9998769690846672	WITHOUT_CLASSIFICATION	1.230309153328835E-4	IMPLEMENTATION
// lock in the overridden methods for the new class, and any as-yet // uninstantiated ancestor class.	WITHOUT_CLASSIFICATION	0.9999974747566702	WITHOUT_CLASSIFICATION	2.5252433297841593E-6	IMPLEMENTATION
// statically initialized below	WITHOUT_CLASSIFICATION	0.9998797220077065	WITHOUT_CLASSIFICATION	1.2027799229358106E-4	IMPLEMENTATION
// finish class initializer	WITHOUT_CLASSIFICATION	0.9994912397339561	WITHOUT_CLASSIFICATION	5.087602660439229E-4	IMPLEMENTATION
// trigger class initialization for the class	WITHOUT_CLASSIFICATION	0.9999027028847702	WITHOUT_CLASSIFICATION	9.729711522979973E-5	IMPLEMENTATION
// should not happen!	WITHOUT_CLASSIFICATION	0.9894025055871285	WITHOUT_CLASSIFICATION	0.01059749441287146	IMPLEMENTATION
// start class	WITHOUT_CLASSIFICATION	0.9995707212121678	WITHOUT_CLASSIFICATION	4.292787878321495E-4	IMPLEMENTATION
// make getter for handler	WITHOUT_CLASSIFICATION	0.9997583964445711	WITHOUT_CLASSIFICATION	2.4160355542898564E-4	IMPLEMENTATION
// make getter for proxy class	WITHOUT_CLASSIFICATION	0.9999259465641752	WITHOUT_CLASSIFICATION	7.405343582473176E-5	IMPLEMENTATION
// add (potentially) overridden names to the key. // TODO: see note above re: optimizations	WITHOUT_CLASSIFICATION	0.6459655812561356	WITHOUT_CLASSIFICATION	0.3540344187438644	IMPLEMENTATION
// We generate all constructors and let some fail during invocation later	WITHOUT_CLASSIFICATION	0.9991837233354376	WITHOUT_CLASSIFICATION	8.162766645622728E-4	IMPLEMENTATION
// create static private method field	WITHOUT_CLASSIFICATION	0.997905401241095	WITHOUT_CLASSIFICATION	0.002094598758905087	IMPLEMENTATION
// load static empty array	WITHOUT_CLASSIFICATION	0.9999055742709745	WITHOUT_CLASSIFICATION	9.442572902561377E-5	IMPLEMENTATION
// box arguments	WITHOUT_CLASSIFICATION	0.9995416882884255	WITHOUT_CLASSIFICATION	4.583117115745127E-4	IMPLEMENTATION
// this is a simple rethrow handler	WITHOUT_CLASSIFICATION	0.9998401839766612	WITHOUT_CLASSIFICATION	1.5981602333875895E-4	IMPLEMENTATION
// // construct the super-proxy method //	WITHOUT_CLASSIFICATION	0.9969562373539173	WITHOUT_CLASSIFICATION	0.003043762646082688	IMPLEMENTATION
// do a void return	WITHOUT_CLASSIFICATION	0.9989960347038914	WITHOUT_CLASSIFICATION	0.0010039652961086293	IMPLEMENTATION
// // utility methods //	WITHOUT_CLASSIFICATION	0.9999551937890615	WITHOUT_CLASSIFICATION	4.480621093854814E-5	IMPLEMENTATION
// Is there a supplied proc argument or do we assume a block was // supplied	WITHOUT_CLASSIFICATION	0.9999762967236091	WITHOUT_CLASSIFICATION	2.3703276390929397E-5	IMPLEMENTATION
// store call information so method_missing impl can use it	WITHOUT_CLASSIFICATION	0.9989930269142171	WITHOUT_CLASSIFICATION	0.0010069730857829285	IMPLEMENTATION
// use the same logic as in EvaluationState	WITHOUT_CLASSIFICATION	0.9999717050187998	WITHOUT_CLASSIFICATION	2.8294981200103176E-5	IMPLEMENTATION
// no opt, no rest, exact match	WITHOUT_CLASSIFICATION	0.9998488553086656	WITHOUT_CLASSIFICATION	1.5114469133442924E-4	IMPLEMENTATION
// only rest, must be at least required	WITHOUT_CLASSIFICATION	0.9997524073811571	WITHOUT_CLASSIFICATION	2.475926188428357E-4	IMPLEMENTATION
// opt but no rest, must be at least required and no more than required + opt	WITHOUT_CLASSIFICATION	0.9996906758724697	WITHOUT_CLASSIFICATION	3.0932412753034813E-4	IMPLEMENTATION
// opt and rest, must be at least required	WITHOUT_CLASSIFICATION	0.9998636379286975	WITHOUT_CLASSIFICATION	1.3636207130260632E-4	IMPLEMENTATION
// No block from a nil proc	WITHOUT_CLASSIFICATION	0.999986776768545	WITHOUT_CLASSIFICATION	1.3223231455034545E-5	IMPLEMENTATION
// If not already a proc then we should try and make it one.	WITHOUT_CLASSIFICATION	0.9772617288931507	WITHOUT_CLASSIFICATION	0.022738271106849242	IMPLEMENTATION
// The current block is already associated with proc.  No need to create a new one	WITHOUT_CLASSIFICATION	0.9998990217655811	WITHOUT_CLASSIFICATION	1.0097823441892583E-4	IMPLEMENTATION
// Has the method that is calling super received a block argument	WITHOUT_CLASSIFICATION	0.999364554315212	WITHOUT_CLASSIFICATION	6.354456847880787E-4	IMPLEMENTATION
/* NUL */	WITHOUT_CLASSIFICATION	0.999995249009219	WITHOUT_CLASSIFICATION	4.75099078097611E-6	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999019671606303	WITHOUT_CLASSIFICATION	9.803283936966692E-5	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9995986238106177	WITHOUT_CLASSIFICATION	4.0137618938225234E-4	IMPLEMENTATION
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9998999508655538	WITHOUT_CLASSIFICATION	1.0004913444616512E-4	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9980312623604638	WITHOUT_CLASSIFICATION	0.0019687376395361895	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9990652123136763	WITHOUT_CLASSIFICATION	9.347876863236658E-4	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9990652123136763	WITHOUT_CLASSIFICATION	9.347876863236658E-4	IMPLEMENTATION
// classes are directly in the hierarchy, so no special logic is necessary for implementer	WITHOUT_CLASSIFICATION	0.9999973458949727	WITHOUT_CLASSIFICATION	2.654105027410718E-6	IMPLEMENTATION
// must be power of 2 // must be power of 2	WITHOUT_CLASSIFICATION	0.9999395165338524	WITHOUT_CLASSIFICATION	6.048346614774442E-5	IMPLEMENTATION
// Find power-of-two sizes best matching arguments	WITHOUT_CLASSIFICATION	0.9995982185648056	WITHOUT_CLASSIFICATION	4.0178143519446183E-4	IMPLEMENTATION
// note segmentShift differs from ConcurrentHashMap's calculation due to // issues with System.identityHashCode (upper n bits always 0, at least  // under Java 1.6 / WinXP)	WITHOUT_CLASSIFICATION	0.9999885924069446	WITHOUT_CLASSIFICATION	1.1407593055314736E-5	IMPLEMENTATION
//      System.err.println("***ObjectProxyCache " + id + " started at "+ new java.util.Date());	WITHOUT_CLASSIFICATION	0.9999428550545582	WITHOUT_CLASSIFICATION	5.714494544172573E-5	IMPLEMENTATION
//    protected void finalize() throws Throwable { //        System.err.println("***ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); //    }	WITHOUT_CLASSIFICATION	0.9998067321424985	WITHOUT_CLASSIFICATION	1.932678575015351E-4	IMPLEMENTATION
// EntryRefs include hash with key to facilitate lookup by Segment#expunge // after ref is removed from ReferenceQueue	WITHOUT_CLASSIFICATION	0.9997733494317836	WITHOUT_CLASSIFICATION	2.266505682162091E-4	IMPLEMENTATION
// Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather // makes it a final field.  The theory is that doing so should force a happens-before // relationship WRT the WeakReference constructor, guaranteeing that the key will be // visibile to other threads (unless it's been GC'ed).  See JLS 17.5 (final fields) and // 17.4.5 (Happens-before order) to confirm or refute my reasoning here.	WITHOUT_CLASSIFICATION	0.9994054191808299	WITHOUT_CLASSIFICATION	5.945808191701136E-4	IMPLEMENTATION
// references to the Java object and its proxy will either both be // weak or both be soft, since the proxy contains a strong reference // to the object, so it wouldn't make sense for the reference types // to differ.	WITHOUT_CLASSIFICATION	0.9999953926913611	WITHOUT_CLASSIFICATION	4.607308638859543E-6	IMPLEMENTATION
// ctor used by remove/rehash	WITHOUT_CLASSIFICATION	0.9997553351309755	WITHOUT_CLASSIFICATION	2.4466486902447934E-4	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.999949371447708	WITHOUT_CLASSIFICATION	5.062855229199543E-5	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.999949371447708	WITHOUT_CLASSIFICATION	5.062855229199543E-5	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.999949371447708	WITHOUT_CLASSIFICATION	5.062855229199543E-5	IMPLEMENTATION
// note that we'll potentially see the refs for both the java object and // proxy -- whichever we see first will cause the entry to be removed; // the other will not match an entry and will be ignored.	WITHOUT_CLASSIFICATION	0.999838912884963	WITHOUT_CLASSIFICATION	1.6108711503714805E-4	IMPLEMENTATION
// temp method to verify tableSize value // must be called under lock	WITHOUT_CLASSIFICATION	0.9996814048773977	WITHOUT_CLASSIFICATION	3.185951226023441E-4	IMPLEMENTATION
// Single node in list	WITHOUT_CLASSIFICATION	0.9999632656014907	WITHOUT_CLASSIFICATION	3.673439850920649E-5	IMPLEMENTATION
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9997467728107063	WITHOUT_CLASSIFICATION	2.5322718929362756E-4	IMPLEMENTATION
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9997467728107063	WITHOUT_CLASSIFICATION	2.5322718929362756E-4	IMPLEMENTATION
// entry exists, proxy has been gc'ed. replace entry.	WITHOUT_CLASSIFICATION	0.9996590211391364	WITHOUT_CLASSIFICATION	3.409788608635546E-4	IMPLEMENTATION
// Where we get new positions from.	WITHOUT_CLASSIFICATION	0.9994331399770496	WITHOUT_CLASSIFICATION	5.668600229503598E-4	IMPLEMENTATION
// Start of string ([, (, {, <, ', ", \n) 	WITHOUT_CLASSIFICATION	0.9999911416765874	WITHOUT_CLASSIFICATION	8.858323412590566E-6	IMPLEMENTATION
// Number of newlines read from the reader	WITHOUT_CLASSIFICATION	0.999990150490189	WITHOUT_CLASSIFICATION	9.849509810936971E-6	IMPLEMENTATION
// How many bytes into the source are we?	WITHOUT_CLASSIFICATION	0.9999194958964275	WITHOUT_CLASSIFICATION	8.050410357255173E-5	IMPLEMENTATION
// For 'list' and only populated if list is not null.	WITHOUT_CLASSIFICATION	0.9992033972826541	WITHOUT_CLASSIFICATION	7.966027173459719E-4	IMPLEMENTATION
// Last full line read.	WITHOUT_CLASSIFICATION	0.9998427745241815	WITHOUT_CLASSIFICATION	1.5722547581859778E-4	IMPLEMENTATION
// Save sourceLine for error reporting to display line where error occurred	WITHOUT_CLASSIFICATION	0.9997157231313987	WITHOUT_CLASSIFICATION	2.8427686860140096E-4	IMPLEMENTATION
// Get rest of line. lineBuffer filled as side-effect...	WITHOUT_CLASSIFICATION	0.9999241995762322	WITHOUT_CLASSIFICATION	7.580042376783916E-5	IMPLEMENTATION
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.999783564544917	WITHOUT_CLASSIFICATION	2.1643545508289849E-4	IMPLEMENTATION
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.999783564544917	WITHOUT_CLASSIFICATION	2.1643545508289849E-4	IMPLEMENTATION
// End of string (], ), }, >, ', ", \0)	WITHOUT_CLASSIFICATION	0.9999912955537709	WITHOUT_CLASSIFICATION	8.704446229170993E-6	IMPLEMENTATION
// How many strings are nested in the current string term	WITHOUT_CLASSIFICATION	0.9999825627214808	WITHOUT_CLASSIFICATION	1.7437278519168214E-5	IMPLEMENTATION
// Single-quote fast path	WITHOUT_CLASSIFICATION	0.9998871940174028	WITHOUT_CLASSIFICATION	1.1280598259714913E-4	IMPLEMENTATION
// Regexp engine 'java'	WITHOUT_CLASSIFICATION	0.9997952181825536	WITHOUT_CLASSIFICATION	2.0478181744654014E-4	IMPLEMENTATION
// Was a goto in original ruby lexer	WITHOUT_CLASSIFICATION	0.9999766429467773	WITHOUT_CLASSIFICATION	2.3357053222599532E-5	IMPLEMENTATION
/* just ignore */	WITHOUT_CLASSIFICATION	0.9999569739875266	WITHOUT_CLASSIFICATION	4.302601247341679E-5	IMPLEMENTATION
/* octal constant */	WITHOUT_CLASSIFICATION	0.9997710729688661	WITHOUT_CLASSIFICATION	2.2892703113393516E-4	IMPLEMENTATION
/* hex constant */	WITHOUT_CLASSIFICATION	0.9997738484647428	WITHOUT_CLASSIFICATION	2.261515352571505E-4	IMPLEMENTATION
// PUSH(1)	WITHOUT_CLASSIFICATION	0.999970764908297	WITHOUT_CLASSIFICATION	2.9235091703083797E-5	IMPLEMENTATION
// POP	WITHOUT_CLASSIFICATION	0.999970764908297	WITHOUT_CLASSIFICATION	2.9235091703083797E-5	IMPLEMENTATION
// PUSH(0).  If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.	WITHOUT_CLASSIFICATION	0.9999712855380062	WITHOUT_CLASSIFICATION	2.8714461993898365E-5	IMPLEMENTATION
// LEXPOP	WITHOUT_CLASSIFICATION	0.999970764908297	WITHOUT_CLASSIFICATION	2.9235091703083797E-5	IMPLEMENTATION
// SET_P	WITHOUT_CLASSIFICATION	0.999970764908297	WITHOUT_CLASSIFICATION	2.9235091703083797E-5	IMPLEMENTATION
// Marker delimiting heredoc boundary	WITHOUT_CLASSIFICATION	0.9997474516710078	WITHOUT_CLASSIFICATION	2.525483289921951E-4	IMPLEMENTATION
// Found end marker for this heredoc	WITHOUT_CLASSIFICATION	0.9996932655380121	WITHOUT_CLASSIFICATION	3.067344619879874E-4	IMPLEMENTATION
// Put back lastLine for any elements past start of heredoc marker	WITHOUT_CLASSIFICATION	0.9999616654587833	WITHOUT_CLASSIFICATION	3.833454121673048E-5	IMPLEMENTATION
// Last token read via yylex().	WITHOUT_CLASSIFICATION	0.9999284451044665	WITHOUT_CLASSIFICATION	7.155489553342011E-5	IMPLEMENTATION
// Value of last token which had a value associated with it.	WITHOUT_CLASSIFICATION	0.999883894334784	WITHOUT_CLASSIFICATION	1.1610566521609925E-4	IMPLEMENTATION
// Stream of data that yylex() examines.	WITHOUT_CLASSIFICATION	0.9998994538421739	WITHOUT_CLASSIFICATION	1.0054615782610799E-4	IMPLEMENTATION
// Used for tiny smidgen of grammar in lexer (see setParserSupport())	WITHOUT_CLASSIFICATION	0.9999990285122035	WITHOUT_CLASSIFICATION	9.71487796617239E-7	IMPLEMENTATION
// Give a name to a value.  Enebo: This should be used more.	WITHOUT_CLASSIFICATION	0.9996607235861644	WITHOUT_CLASSIFICATION	3.3927641383552575E-4	IMPLEMENTATION
// When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').	WITHOUT_CLASSIFICATION	0.9992246555858928	WITHOUT_CLASSIFICATION	7.753444141071097E-4	IMPLEMENTATION
// Are we lexing Ruby 1.8 or 1.9+ syntax	WITHOUT_CLASSIFICATION	0.999589540690124	WITHOUT_CLASSIFICATION	4.1045930987594474E-4	IMPLEMENTATION
// Count of nested parentheses (1.9 only)	WITHOUT_CLASSIFICATION	0.9996326483630715	WITHOUT_CLASSIFICATION	3.6735163692840534E-4	IMPLEMENTATION
// 1.9 only	WITHOUT_CLASSIFICATION	0.9987331986289504	WITHOUT_CLASSIFICATION	0.0012668013710496367	IMPLEMENTATION
// Short-hand (e.g. %{,%.,%!,... versus %Q{).	WITHOUT_CLASSIFICATION	0.9997568724729684	WITHOUT_CLASSIFICATION	2.4312752703150486E-4	IMPLEMENTATION
// Long-hand (e.g. %Q{}).	WITHOUT_CLASSIFICATION	0.9997961997602556	WITHOUT_CLASSIFICATION	2.0380023974434088E-4	IMPLEMENTATION
/* no mb || ismbchar(term)*/	WITHOUT_CLASSIFICATION	0.9912187931281243	WITHOUT_CLASSIFICATION	0.008781206871875755	IMPLEMENTATION
/*     * Not normally used, but is left in here since it can be useful in debugging     * grammar and lexing problems.     *     */	WITHOUT_CLASSIFICATION	0.9999995225508566	WITHOUT_CLASSIFICATION	4.774491433863874E-7	IMPLEMENTATION
// DEBUGGING HELP 	WITHOUT_CLASSIFICATION	0.9990652123136763	WITHOUT_CLASSIFICATION	9.347876863236658E-4	IMPLEMENTATION
/* '\v' */	WITHOUT_CLASSIFICATION	0.999995249009219	WITHOUT_CLASSIFICATION	4.75099078097611E-6	IMPLEMENTATION
/* end of script. */	WITHOUT_CLASSIFICATION	0.9998448813310182	WITHOUT_CLASSIFICATION	1.5511866898184468E-4	IMPLEMENTATION
/* white spaces */	WITHOUT_CLASSIFICATION	0.999896645952666	WITHOUT_CLASSIFICATION	1.0335404733398172E-4	IMPLEMENTATION
/* '\v' */	WITHOUT_CLASSIFICATION	0.999995249009219	WITHOUT_CLASSIFICATION	4.75099078097611E-6	IMPLEMENTATION
/* it's a comment */	WITHOUT_CLASSIFICATION	0.9997941140300508	WITHOUT_CLASSIFICATION	2.0588596994921857E-4	IMPLEMENTATION
// Replace a string of newlines with a single one	WITHOUT_CLASSIFICATION	0.9999757091673186	WITHOUT_CLASSIFICATION	2.4290832681478917E-5	IMPLEMENTATION
/* $\: output record separator */	WITHOUT_CLASSIFICATION	0.9999732756307043	WITHOUT_CLASSIFICATION	2.6724369295681783E-5	IMPLEMENTATION
// EOF (ENEBO: After default?	WITHOUT_CLASSIFICATION	0.9996977213028416	WITHOUT_CLASSIFICATION	3.022786971583836E-4	IMPLEMENTATION
// documentation nodes	WITHOUT_CLASSIFICATION	0.9996950104095124	WITHOUT_CLASSIFICATION	3.0498959048761267E-4	IMPLEMENTATION
// In case last next was the newline.	WITHOUT_CLASSIFICATION	0.9998194908788106	WITHOUT_CLASSIFICATION	1.8050912118941105E-4	IMPLEMENTATION
// Just a plain bang	WITHOUT_CLASSIFICATION	0.9995893483386297	WITHOUT_CLASSIFICATION	4.1065166137022486E-4	IMPLEMENTATION
/* $_: last read line string */	WITHOUT_CLASSIFICATION	0.9999993565324781	WITHOUT_CLASSIFICATION	6.434675218893643E-7	IMPLEMENTATION
/* $~: match-data */	WITHOUT_CLASSIFICATION	0.9998479724803608	WITHOUT_CLASSIFICATION	1.5202751963920946E-4	IMPLEMENTATION
/* $*: argv */	WITHOUT_CLASSIFICATION	0.9998479724803608	WITHOUT_CLASSIFICATION	1.5202751963920946E-4	IMPLEMENTATION
/* $$: pid */	WITHOUT_CLASSIFICATION	0.9998493717473593	WITHOUT_CLASSIFICATION	1.5062825264058102E-4	IMPLEMENTATION
/* $?: last status */	WITHOUT_CLASSIFICATION	0.9999689090685364	WITHOUT_CLASSIFICATION	3.1090931463601436E-5	IMPLEMENTATION
/* $!: error string */	WITHOUT_CLASSIFICATION	0.999996394379261	WITHOUT_CLASSIFICATION	3.6056207390285914E-6	IMPLEMENTATION
/* $@: error position */	WITHOUT_CLASSIFICATION	0.9999658970128379	WITHOUT_CLASSIFICATION	3.410298716217728E-5	IMPLEMENTATION
/* $/: input record separator */	WITHOUT_CLASSIFICATION	0.9999776767244085	WITHOUT_CLASSIFICATION	2.232327559159509E-5	IMPLEMENTATION
/* $;: field separator */	WITHOUT_CLASSIFICATION	0.9999852168628938	WITHOUT_CLASSIFICATION	1.4783137106193463E-5	IMPLEMENTATION
/* $,: output field separator */	WITHOUT_CLASSIFICATION	0.9999843532160149	WITHOUT_CLASSIFICATION	1.5646783985158164E-5	IMPLEMENTATION
/* $.: last read line number */	WITHOUT_CLASSIFICATION	0.9999936632283735	WITHOUT_CLASSIFICATION	6.336771626568786E-6	IMPLEMENTATION
/* $=: ignorecase */	WITHOUT_CLASSIFICATION	0.9998479724803608	WITHOUT_CLASSIFICATION	1.5202751963920946E-4	IMPLEMENTATION
/* $:: load path */	WITHOUT_CLASSIFICATION	0.9999097411020973	WITHOUT_CLASSIFICATION	9.025889790275778E-5	IMPLEMENTATION
/* $<: reading filename */	WITHOUT_CLASSIFICATION	0.9999954499159724	WITHOUT_CLASSIFICATION	4.5500840275492725E-6	IMPLEMENTATION
/* $": already loaded files */	WITHOUT_CLASSIFICATION	0.9999949714028601	WITHOUT_CLASSIFICATION	5.028597139931888E-6	IMPLEMENTATION
/* $&: last match */	WITHOUT_CLASSIFICATION	0.9999267834730963	WITHOUT_CLASSIFICATION	7.32165269037905E-5	IMPLEMENTATION
/* $`: string before last match */	WITHOUT_CLASSIFICATION	0.9999993189050271	WITHOUT_CLASSIFICATION	6.810949728086913E-7	IMPLEMENTATION
/* $': string after last match */	WITHOUT_CLASSIFICATION	0.9999986836700564	WITHOUT_CLASSIFICATION	1.3163299436226625E-6	IMPLEMENTATION
// methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop	WITHOUT_CLASSIFICATION	0.9999972046104769	WITHOUT_CLASSIFICATION	2.795389523068504E-6	IMPLEMENTATION
/* See if it is a reserved word.  */	WITHOUT_CLASSIFICATION	0.9999972906972168	WITHOUT_CLASSIFICATION	2.709302783111275E-6	IMPLEMENTATION
// enum lex_state	WITHOUT_CLASSIFICATION	0.9990652123136763	WITHOUT_CLASSIFICATION	9.347876863236658E-4	IMPLEMENTATION
// block (primary)	WITHOUT_CLASSIFICATION	0.9988798125413142	WITHOUT_CLASSIFICATION	0.0011201874586857842	IMPLEMENTATION
// block (expr)	WITHOUT_CLASSIFICATION	0.9988798125413142	WITHOUT_CLASSIFICATION	0.0011201874586857842	IMPLEMENTATION
// hash	WITHOUT_CLASSIFICATION	0.9999710933575803	WITHOUT_CLASSIFICATION	2.890664241983059E-5	IMPLEMENTATION
// ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.	WITHOUT_CLASSIFICATION	0.9998934356355268	WITHOUT_CLASSIFICATION	1.0656436447325907E-4	IMPLEMENTATION
// FIXME: peek('u') utf8 stuff for 1.9	WITHOUT_CLASSIFICATION	0.9998099655973737	WITHOUT_CLASSIFICATION	1.9003440262622948E-4	IMPLEMENTATION
// We don't append '+' since Java number parser gets confused	WITHOUT_CLASSIFICATION	0.9999762856256553	WITHOUT_CLASSIFICATION	2.3714374344647417E-5	IMPLEMENTATION
//  hexadecimal	WITHOUT_CLASSIFICATION	0.9993646543766322	WITHOUT_CLASSIFICATION	6.353456233677609E-4	IMPLEMENTATION
// binary	WITHOUT_CLASSIFICATION	0.999978813326759	WITHOUT_CLASSIFICATION	2.11866732410828E-5	IMPLEMENTATION
// decimal	WITHOUT_CLASSIFICATION	0.9999787421997478	WITHOUT_CLASSIFICATION	2.1257800252270618E-5	IMPLEMENTATION
//Octal	WITHOUT_CLASSIFICATION	0.9998920580249556	WITHOUT_CLASSIFICATION	1.0794197504441973E-4	IMPLEMENTATION
//  '_' in number just ignored	WITHOUT_CLASSIFICATION	0.9999754319683012	WITHOUT_CLASSIFICATION	2.4568031698792363E-5	IMPLEMENTATION
// backslash	WITHOUT_CLASSIFICATION	0.9990652020265169	WITHOUT_CLASSIFICATION	9.347979734830021E-4	IMPLEMENTATION
// newline	WITHOUT_CLASSIFICATION	0.9999730565066828	WITHOUT_CLASSIFICATION	2.694349331723575E-5	IMPLEMENTATION
// horizontal tab	WITHOUT_CLASSIFICATION	0.9975660292756567	WITHOUT_CLASSIFICATION	0.0024339707243433407	IMPLEMENTATION
// form feed	WITHOUT_CLASSIFICATION	0.9989101437612355	WITHOUT_CLASSIFICATION	0.0010898562387643507	IMPLEMENTATION
// vertical tab	WITHOUT_CLASSIFICATION	0.9972487835887949	WITHOUT_CLASSIFICATION	0.0027512164112051	IMPLEMENTATION
// alarm(bell)	WITHOUT_CLASSIFICATION	0.9990652123136763	WITHOUT_CLASSIFICATION	9.347876863236658E-4	IMPLEMENTATION
// escape	WITHOUT_CLASSIFICATION	0.9999713393396151	WITHOUT_CLASSIFICATION	2.8660660384806897E-5	IMPLEMENTATION
// hex constant	WITHOUT_CLASSIFICATION	0.9986099687268385	WITHOUT_CLASSIFICATION	0.0013900312731615326	IMPLEMENTATION
//char hexValue = scanHex(2);	WITHOUT_CLASSIFICATION	0.9989397141570684	WITHOUT_CLASSIFICATION	0.0010602858429316023	IMPLEMENTATION
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999709780204018	WITHOUT_CLASSIFICATION	2.9021979598213306E-5	IMPLEMENTATION
// space	WITHOUT_CLASSIFICATION	0.9999891909253087	WITHOUT_CLASSIFICATION	1.0809074691435848E-5	IMPLEMENTATION
// Where we started this marker match	WITHOUT_CLASSIFICATION	0.9996133046765586	WITHOUT_CLASSIFICATION	3.866953234414312E-4	IMPLEMENTATION
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999997188761933	WITHOUT_CLASSIFICATION	2.8112380674288295E-7	IMPLEMENTATION
// We use offset here to keep track of extra newlines for windows	WITHOUT_CLASSIFICATION	0.9999463456320804	WITHOUT_CLASSIFICATION	5.365436791944423E-5	IMPLEMENTATION
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999709780204018	WITHOUT_CLASSIFICATION	2.9021979598213306E-5	IMPLEMENTATION
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.993398100046978	WITHOUT_CLASSIFICATION	0.006601899953021955	IMPLEMENTATION
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.993398100046978	WITHOUT_CLASSIFICATION	0.006601899953021955	IMPLEMENTATION
// Where we get our newest char's	WITHOUT_CLASSIFICATION	0.9999104078908327	WITHOUT_CLASSIFICATION	8.959210916735612E-5	IMPLEMENTATION
// Our readback/pushback buffer.	WITHOUT_CLASSIFICATION	0.9997538029439775	WITHOUT_CLASSIFICATION	2.4619705602256417E-4	IMPLEMENTATION
// index of last character in pushback buffer	WITHOUT_CLASSIFICATION	0.9999744016174837	WITHOUT_CLASSIFICATION	2.559838251626092E-5	IMPLEMENTATION
// Character read before previous read	WITHOUT_CLASSIFICATION	0.9999607536022748	WITHOUT_CLASSIFICATION	3.92463977253479E-5	IMPLEMENTATION
// keep value of twoAgo around so we can restore after we unread	WITHOUT_CLASSIFICATION	0.999879576927003	WITHOUT_CLASSIFICATION	1.2042307299692767E-4	IMPLEMENTATION
// NetProtocolBufferedIOLibrary	WITHOUT_CLASSIFICATION	0.9997467728107063	WITHOUT_CLASSIFICATION	2.5322718929362756E-4	IMPLEMENTATION
// BigDecimalLibrary	WITHOUT_CLASSIFICATION	0.9990652123136763	WITHOUT_CLASSIFICATION	9.347876863236658E-4	IMPLEMENTATION
// TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. // We did it here for now	WITHOUT_CLASSIFICATION	0.9962271950823147	IMPLEMENTATION	0.0037728049176852393	WITHOUT_CLASSIFICATION
// Ruby's designation for some platforms, minus version numbers in some cases	WITHOUT_CLASSIFICATION	0.9999794308439485	WITHOUT_CLASSIFICATION	2.0569156051526033E-5	IMPLEMENTATION
// that's what JDK5 produces on Windows Vista	WITHOUT_CLASSIFICATION	0.9919848068334688	WITHOUT_CLASSIFICATION	0.008015193166531152	IMPLEMENTATION
// Rubygems is too specific on host cpu so until we have real need lets default to universal //setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));	WITHOUT_CLASSIFICATION	0.9997002493281422	WITHOUT_CLASSIFICATION	2.997506718578468E-4	IMPLEMENTATION
// Our shell scripts pass in non-canonicalized paths, but even if we didn't // anyone who did would become unhappy because Ruby apps expect no relative // operators in the pathname (rubygems, for example).	WITHOUT_CLASSIFICATION	0.9999845999630204	WITHOUT_CLASSIFICATION	1.540003697959238E-5	IMPLEMENTATION
// this set is only for darwin	WITHOUT_CLASSIFICATION	0.9998596503100992	WITHOUT_CLASSIFICATION	1.4034968990082693E-4	IMPLEMENTATION
// DigestLibrary	WITHOUT_CLASSIFICATION	0.9990652123136763	WITHOUT_CLASSIFICATION	9.347876863236658E-4	IMPLEMENTATION
// all errors, just info; do not prevent loading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9852201040205418	WITHOUT_CLASSIFICATION	0.014779895979458153	IMPLEMENTATION
// all errors, just info; do not prevent unloading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.990885562022486	WITHOUT_CLASSIFICATION	0.009114437977514062	IMPLEMENTATION
// do nothing, return dummy version below	WITHOUT_CLASSIFICATION	0.9996637457181989	WITHOUT_CLASSIFICATION	3.362542818011384E-4	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
// line 329	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9991225331279616	WITHOUT_CLASSIFICATION	8.774668720383485E-4	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
// dynamically increase	WITHOUT_CLASSIFICATION	0.9998010426490844	WITHOUT_CLASSIFICATION	1.9895735091552793E-4	IMPLEMENTATION
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9997287169677056	WITHOUT_CLASSIFICATION	2.7128303229443117E-4	IMPLEMENTATION
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9997797630030565	WITHOUT_CLASSIFICATION	2.2023699694343472E-4	IMPLEMENTATION
// shift to yyN	WITHOUT_CLASSIFICATION	0.9990246340354387	WITHOUT_CLASSIFICATION	9.753659645612239E-4	IMPLEMENTATION
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9991179849182712	WITHOUT_CLASSIFICATION	8.820150817288926E-4	IMPLEMENTATION
// leave stack alone	WITHOUT_CLASSIFICATION	0.9992419516047093	WITHOUT_CLASSIFICATION	7.580483952907064E-4	IMPLEMENTATION
// line 271	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 274	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 303	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 311	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 314	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 317	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 332	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 338	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 341	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 344	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 351	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 358	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 367	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 372	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 378	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 382	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 407	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 411	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 414	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 417	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 420	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 426	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 434	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 443	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 446	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 452	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 457	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 464	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 467	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 470	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 479	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 484	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 486	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 492	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 498	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 501	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 504	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 507	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 510	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 519	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 525	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
// line 537	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 540	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 543	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 546	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 556	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 559	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 563	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 566	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 569	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 575	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 578	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 587	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 596	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 604	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 607	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 610	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 613	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 616	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 634	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 638	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 643	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 646	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 655	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 660	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 667	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 670	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 672	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 696	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 701	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 717	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 720	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 726	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 729	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 732	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 735	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 738	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 751	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 754	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 757	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 760	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 763	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 769	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 772	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 775	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 782	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 788	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 791	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 794	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 797	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 803	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 806	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 809	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 815	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 818	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 821	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 824	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 830	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 833	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 836	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 839	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 842	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 848	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 852	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 858	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 861	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 868	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 871	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 876	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 879	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 883	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 893	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 896	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 899	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 903	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 907	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 915	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 920	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 923	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 926	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 932	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 936	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 940	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 944	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 948	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 956	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 960	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 964	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 967	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 972	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 978	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 980	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 984	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 986	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 996	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1001	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1004	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1008	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1014	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1029	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1032	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1034	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1045	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1048	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1051	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1058	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1070	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1073	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1076	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1079	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1082	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1089	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1097	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1100	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1103	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1107	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1111	WITHOUT_CLASSIFICATION	0.999260251132426	WITHOUT_CLASSIFICATION	7.397488675739981E-4	IMPLEMENTATION
// line 1113	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1115	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1119	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1130	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1133	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1135	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1137	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1140	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1151	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1154	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1158	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1164	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1175	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1178	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1187	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1189	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1193	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1204	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1207	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1210	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1214	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1234	WITHOUT_CLASSIFICATION	0.9992577764891544	WITHOUT_CLASSIFICATION	7.42223510845601E-4	IMPLEMENTATION
// line 1239	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1243	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1247	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1251	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1263	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1269	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1280	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1283	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1290	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1296	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1299	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1302	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1309	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1313	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1315	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1320	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1328	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1335	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1348	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1352	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1358	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1374	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1381	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1387	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1392	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1415	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1431	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1434	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1440	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1443	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1453	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1456	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1462	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1465	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1470	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1477	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1480	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1485	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1488	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1496	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1502	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1510	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1513	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1516	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1533	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1550	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1553	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1556	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1565	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1568	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1571	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1574	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1577	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1587	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1595	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1598	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1600	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1609	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1623	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1626	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1629	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1632	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1638	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1641	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1644	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1649	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1655	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1658	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1661	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1672	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1677	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1687	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1694	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1705	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1708	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1725	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1733	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1742	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1745	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1749	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1757	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1769	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1772	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1775	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1784	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1808	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1814	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1818	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1822	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
/* force for args */	WITHOUT_CLASSIFICATION	0.9998698167654801	WITHOUT_CLASSIFICATION	1.30183234519791E-4	IMPLEMENTATION
/*XXX 0;*/	WITHOUT_CLASSIFICATION	0.9998920580249556	WITHOUT_CLASSIFICATION	1.0794197504441973E-4	IMPLEMENTATION
/*                      $$ = $3;*/	WITHOUT_CLASSIFICATION	0.9911362214730066	WITHOUT_CLASSIFICATION	0.008863778526993315	IMPLEMENTATION
/*                  }*/	WITHOUT_CLASSIFICATION	0.9972516504055944	WITHOUT_CLASSIFICATION	0.0027483495944057262	IMPLEMENTATION
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9991076731380282	WITHOUT_CLASSIFICATION	8.923268619717764E-4	IMPLEMENTATION
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9910370646434836	WITHOUT_CLASSIFICATION	0.008962935356516372	IMPLEMENTATION
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9992185217004423	WITHOUT_CLASSIFICATION	7.814782995576732E-4	IMPLEMENTATION
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9992185217004423	WITHOUT_CLASSIFICATION	7.814782995576732E-4	IMPLEMENTATION
/* NOEX_PRIVATE for toplevel */	WITHOUT_CLASSIFICATION	0.9999839284348567	WITHOUT_CLASSIFICATION	1.6071565143255658E-5	IMPLEMENTATION
/*mirko: check*/	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
/* Include pipes on multiple arg type*/	WITHOUT_CLASSIFICATION	0.9875568149054897	WITHOUT_CLASSIFICATION	0.012443185094510256	IMPLEMENTATION
// line 529	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9919172757200225	WITHOUT_CLASSIFICATION	0.008082724279977414	IMPLEMENTATION
/* XXX*/	WITHOUT_CLASSIFICATION	0.9988791728891276	WITHOUT_CLASSIFICATION	0.0011208271108723324	IMPLEMENTATION
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999502337939942	WITHOUT_CLASSIFICATION	4.976620600589045E-5	IMPLEMENTATION
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9919652182183439	WITHOUT_CLASSIFICATION	0.00803478178165605	IMPLEMENTATION
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9919172757200225	WITHOUT_CLASSIFICATION	0.008082724279977414	IMPLEMENTATION
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9903721952421577	WITHOUT_CLASSIFICATION	0.009627804757842275	IMPLEMENTATION
// line 1827 "DefaultRubyParser.y"	WITHOUT_CLASSIFICATION	0.9997979491686375	WITHOUT_CLASSIFICATION	2.020508313625891E-4	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9993994938508141	WITHOUT_CLASSIFICATION	6.00506149185828E-4	IMPLEMENTATION
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9991961390827029	WITHOUT_CLASSIFICATION	8.038609172970613E-4	IMPLEMENTATION
// line 7713 "-"	WITHOUT_CLASSIFICATION	0.9992542992006974	WITHOUT_CLASSIFICATION	7.457007993026422E-4	IMPLEMENTATION
// local scopes are argument scopes by default	WITHOUT_CLASSIFICATION	0.9999906167849589	WITHOUT_CLASSIFICATION	9.383215041177893E-6	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999942769601641	WITHOUT_CLASSIFICATION	5.723039835894074E-6	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999942769601641	WITHOUT_CLASSIFICATION	5.723039835894074E-6	IMPLEMENTATION
// We know this is a block scope because a local scope cannot be within a local scope // If topScope was itself it would have created a LocalAsgnNode above.	WITHOUT_CLASSIFICATION	0.9999842617851793	WITHOUT_CLASSIFICATION	1.5738214820737974E-5	IMPLEMENTATION
// ENEBO: 1.9 has CURR nodes for local/block variables.  We don't.  I believe we follow proper logic	WITHOUT_CLASSIFICATION	0.9996121634546958	WITHOUT_CLASSIFICATION	3.878365453041863E-4	IMPLEMENTATION
// odd...but it is odd in ruby too.	WITHOUT_CLASSIFICATION	0.9999608767131609	WITHOUT_CLASSIFICATION	3.912328683900542E-5	IMPLEMENTATION
// What linenumber will the source think it starts from?	WITHOUT_CLASSIFICATION	0.9989597214214394	WITHOUT_CLASSIFICATION	0.0010402785785606663	IMPLEMENTATION
// Is this inline source (aka -e "...source...")	WITHOUT_CLASSIFICATION	0.9993590928827681	WITHOUT_CLASSIFICATION	6.409071172318253E-4	IMPLEMENTATION
// We parse evals more often in source so assume an eval parse.	WITHOUT_CLASSIFICATION	0.9999909717135239	WITHOUT_CLASSIFICATION	9.02828647609699E-6	IMPLEMENTATION
// Should positions added extra IDE-friendly information and leave in all newline nodes	WITHOUT_CLASSIFICATION	0.9999991947392997	WITHOUT_CLASSIFICATION	8.052607004223591E-7	IMPLEMENTATION
// Will parser parse Duby grammar Extensions	WITHOUT_CLASSIFICATION	0.9995419086996459	WITHOUT_CLASSIFICATION	4.5809130035412546E-4	IMPLEMENTATION
// Should we display extra debug information while parsing?	WITHOUT_CLASSIFICATION	0.9999302066558898	WITHOUT_CLASSIFICATION	6.979334411016704E-5	IMPLEMENTATION
// __END__ marker offset (-1 means none present)	WITHOUT_CLASSIFICATION	0.999825784168428	WITHOUT_CLASSIFICATION	1.7421583157183618E-4	IMPLEMENTATION
// Parser states:	WITHOUT_CLASSIFICATION	0.9990652123136763	WITHOUT_CLASSIFICATION	9.347876863236658E-4	IMPLEMENTATION
// Is the parser current within a singleton (value is number of nested singletons)	WITHOUT_CLASSIFICATION	0.998132740411329	WITHOUT_CLASSIFICATION	0.0018672595886709772	IMPLEMENTATION
// Is the parser currently within a method definition	WITHOUT_CLASSIFICATION	0.9895894047805643	WITHOUT_CLASSIFICATION	0.01041059521943575	IMPLEMENTATION
// LOCALVAR	WITHOUT_CLASSIFICATION	0.9990652123136763	WITHOUT_CLASSIFICATION	9.347876863236658E-4	IMPLEMENTATION
// CONSTANT	WITHOUT_CLASSIFICATION	0.9990652123136763	WITHOUT_CLASSIFICATION	9.347876863236658E-4	IMPLEMENTATION
// INSTANCE VARIABLE	WITHOUT_CLASSIFICATION	0.9990652123136763	WITHOUT_CLASSIFICATION	9.347876863236658E-4	IMPLEMENTATION
// Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])	WITHOUT_CLASSIFICATION	0.9992045590388865	WITHOUT_CLASSIFICATION	7.954409611134807E-4	IMPLEMENTATION
/* MRI: block_append */	WITHOUT_CLASSIFICATION	0.9999654992998921	WITHOUT_CLASSIFICATION	3.4500700107862226E-5	IMPLEMENTATION
// Reduces overhead in interp by not set position every single line we encounter. 	WITHOUT_CLASSIFICATION	0.996385278522745	WITHOUT_CLASSIFICATION	0.003614721477254953	IMPLEMENTATION
// Assumption: tail is never a list node	WITHOUT_CLASSIFICATION	0.9967952770673413	WITHOUT_CLASSIFICATION	0.003204722932658675	IMPLEMENTATION
//        return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));	WITHOUT_CLASSIFICATION	0.9997940898127594	WITHOUT_CLASSIFICATION	2.0591018724055294E-4	IMPLEMENTATION
// Node	WITHOUT_CLASSIFICATION	0.999971088485286	WITHOUT_CLASSIFICATION	2.8911514713927487E-5	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9997439674466599	WITHOUT_CLASSIFICATION	2.560325533400232E-4	IMPLEMENTATION
/*case CONSTNODE:                handleUselessWarn(node, "a constant"); return;*/	WITHOUT_CLASSIFICATION	0.9993649156396142	WITHOUT_CLASSIFICATION	6.350843603857699E-4	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9997439674466599	WITHOUT_CLASSIFICATION	2.560325533400232E-4	IMPLEMENTATION
/*case CLASSNODE: case COLON2NODE:                handleUselessWarn(node, "::"); return;*/	WITHOUT_CLASSIFICATION	0.9989359658916009	WITHOUT_CLASSIFICATION	0.0010640341083990189	IMPLEMENTATION
/*case SELFNODE:                handleUselessWarn(node, "self"); return;*/	WITHOUT_CLASSIFICATION	0.9993649156396142	WITHOUT_CLASSIFICATION	6.350843603857699E-4	IMPLEMENTATION
// FIXME: DSTR,EVSTR,STR: warning "string literal in condition"	WITHOUT_CLASSIFICATION	0.9999765303074735	WITHOUT_CLASSIFICATION	2.346969252658128E-5	IMPLEMENTATION
/* MRI: range_op */	WITHOUT_CLASSIFICATION	0.9998479724803608	WITHOUT_CLASSIFICATION	1.5202751963920946E-4	IMPLEMENTATION
// Block and block pass passed in at same time....uh oh	WITHOUT_CLASSIFICATION	0.9999900686879425	WITHOUT_CLASSIFICATION	9.931312057386144E-6	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.999970764908297	WITHOUT_CLASSIFICATION	2.9235091703083797E-5	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.999970764908297	WITHOUT_CLASSIFICATION	2.9235091703083797E-5	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.999970764908297	WITHOUT_CLASSIFICATION	2.9235091703083797E-5	IMPLEMENTATION
// tail must be EvStrNode at this point 	WITHOUT_CLASSIFICATION	0.9997900546710295	WITHOUT_CLASSIFICATION	2.0994532897052024E-4	IMPLEMENTATION
//Do not add an empty string node	WITHOUT_CLASSIFICATION	0.9997998767584029	WITHOUT_CLASSIFICATION	2.0012324159721063E-4	IMPLEMENTATION
// Zero-Argument declaration	WITHOUT_CLASSIFICATION	0.9998419070485557	WITHOUT_CLASSIFICATION	1.580929514442781E-4	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
// dynamically increase	WITHOUT_CLASSIFICATION	0.9998010426490844	WITHOUT_CLASSIFICATION	1.9895735091552793E-4	IMPLEMENTATION
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9997797630030565	WITHOUT_CLASSIFICATION	2.2023699694343472E-4	IMPLEMENTATION
// shift to yyN	WITHOUT_CLASSIFICATION	0.9990246340354387	WITHOUT_CLASSIFICATION	9.753659645612239E-4	IMPLEMENTATION
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9991179849182712	WITHOUT_CLASSIFICATION	8.820150817288926E-4	IMPLEMENTATION
// leave stack alone	WITHOUT_CLASSIFICATION	0.9992419516047093	WITHOUT_CLASSIFICATION	7.580483952907064E-4	IMPLEMENTATION
// line 321	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 351	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 382	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 417	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 420	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 423	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 426	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 280	WITHOUT_CLASSIFICATION	0.9992561785415459	WITHOUT_CLASSIFICATION	7.43821458454203E-4	IMPLEMENTATION
// line 283	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 296	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 324	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 327	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 331	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 333	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 336	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 342	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 345	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 348	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 354	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 368	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 377	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 388	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 392	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 397	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 429	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 432	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 436	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 445	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 448	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 454	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 459	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 466	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 469	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 478	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 481	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 488	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 494	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 497	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 503	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 506	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 509	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 512	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 521	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 526	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 540	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 543	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 546	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 566	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 610	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 672	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 691	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 696	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 772	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 782	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 785	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 788	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 791	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 534	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 549	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 552	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 558	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 561	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 571	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 574	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 579	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 586	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 589	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 592	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 595	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 598	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 623	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 627	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 630	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 633	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 639	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 648	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 657	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 661	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 666	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 678	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 682	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 688	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 699	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 706	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 708	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 727	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 737	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 753	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 779	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 801	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 808	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 811	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 817	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 842	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 845	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 848	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 893	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 899	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 932	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 944	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 960	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 980	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1004	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1038	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 820	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 826	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 829	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 832	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 851	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 857	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 860	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 863	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 866	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 869	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 875	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 884	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 887	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 890	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 902	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 909	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 912	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 916	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 922	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 928	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 941	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 947	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 951	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 955	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 965	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 969	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 977	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 983	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1013	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1023	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1035	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1041	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1043	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1054	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1057	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1060	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1069	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1075	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1105	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1111	WITHOUT_CLASSIFICATION	0.999260251132426	WITHOUT_CLASSIFICATION	7.397488675739981E-4	IMPLEMENTATION
// line 1122	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1130	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1140	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1158	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1204	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1207	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1247	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1251	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1261	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1078	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1084	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1087	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1090	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1093	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1114	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1116	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1118	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1124	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1126	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1138	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1144	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1149	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1155	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1162	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1173	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1179	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1182	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1190	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1196	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1213	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1217	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1231	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1236	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1244	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1254	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1258	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1264	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1270	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1273	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1276	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1279	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1282	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1289	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1292	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1295	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1298	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1305	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1348	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1387	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1392	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1448	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1462	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1470	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1496	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1502	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1595	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1598	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1308	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1311	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1317	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1323	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1326	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1329	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1337	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1342	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1345	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1354	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1359	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1366	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1369	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1373	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1377	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1383	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1399	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1401	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1406	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1417	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1424	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1427	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1430	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1433	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1436	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1442	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1445	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1458	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1464	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1489	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1493	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1507	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1519	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1532	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1538	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1542	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1557	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1573	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1591	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1615	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1629	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1632	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1705	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1716	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1725	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1742	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1749	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1818	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1822	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1607	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1610	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1622	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1625	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1636	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1639	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1647	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1651	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1657	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1660	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1663	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1678	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1702	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1711	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1719	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1722	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1731	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1734	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1738	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1746	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1756	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1758	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1761	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1767	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1776	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1782	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1785	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1788	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1791	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1797	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1800	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1803	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1806	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1809	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1815	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1825	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1828	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1831	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1847	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9992185217004423	WITHOUT_CLASSIFICATION	7.814782995576732E-4	IMPLEMENTATION
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9992185217004423	WITHOUT_CLASSIFICATION	7.814782995576732E-4	IMPLEMENTATION
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9919172757200225	WITHOUT_CLASSIFICATION	0.008082724279977414	IMPLEMENTATION
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999502337939942	WITHOUT_CLASSIFICATION	4.976620600589045E-5	IMPLEMENTATION
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9919652182183439	WITHOUT_CLASSIFICATION	0.00803478178165605	IMPLEMENTATION
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9919172757200225	WITHOUT_CLASSIFICATION	0.008082724279977414	IMPLEMENTATION
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9903721952421577	WITHOUT_CLASSIFICATION	0.009627804757842275	IMPLEMENTATION
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9997467728107063	WITHOUT_CLASSIFICATION	2.5322718929362756E-4	IMPLEMENTATION
// line 1854	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1869	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1872	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1877	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1886	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1898	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1902	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1905	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1911	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1918	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1935	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1938	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1942	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1948	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1960	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1963	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1968	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1972	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1982	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1995	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 2000	WITHOUT_CLASSIFICATION	0.9992560749429183	WITHOUT_CLASSIFICATION	7.439250570817153E-4	IMPLEMENTATION
// line 2006	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 2010	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
/* We may need to subtract addition offset off of first */	WITHOUT_CLASSIFICATION	0.9999546948233082	WITHOUT_CLASSIFICATION	4.530517669166852E-5	IMPLEMENTATION
/* string fragment (we optimistically take one off in*/	WITHOUT_CLASSIFICATION	0.9994055090256899	WITHOUT_CLASSIFICATION	5.944909743100728E-4	IMPLEMENTATION
/* ParserSupport.literal_concat).  Check token length*/	WITHOUT_CLASSIFICATION	0.9870635734368726	WITHOUT_CLASSIFICATION	0.012936426563127506	IMPLEMENTATION
/* and subtract as neeeded.*/	WITHOUT_CLASSIFICATION	0.9958968690439438	WITHOUT_CLASSIFICATION	0.004103130956056208	IMPLEMENTATION
/*                    $$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);  */	WITHOUT_CLASSIFICATION	0.9999677675635024	WITHOUT_CLASSIFICATION	3.223243649768755E-5	IMPLEMENTATION
/* ENEBO: arg surrounded by in_defined set/unset*/	WITHOUT_CLASSIFICATION	0.9895605528969666	WITHOUT_CLASSIFICATION	0.010439447103033343	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9993994938508141	WITHOUT_CLASSIFICATION	6.00506149185828E-4	IMPLEMENTATION
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9991961390827029	WITHOUT_CLASSIFICATION	8.038609172970613E-4	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999942769601641	WITHOUT_CLASSIFICATION	5.723039835894074E-6	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999942769601641	WITHOUT_CLASSIFICATION	5.723039835894074E-6	IMPLEMENTATION
/* ENEBO: Removed !compile_for_eval which probably is to reduce warnings*/	WITHOUT_CLASSIFICATION	0.9174588330374273	WITHOUT_CLASSIFICATION	0.08254116696257276	IMPLEMENTATION
/* was $$ = null;*/	WITHOUT_CLASSIFICATION	0.994093702785223	WITHOUT_CLASSIFICATION	0.005906297214777058	IMPLEMENTATION
// line 2019 "Ruby19Parser.y"	WITHOUT_CLASSIFICATION	0.9998306331878278	WITHOUT_CLASSIFICATION	1.6936681217215245E-4	IMPLEMENTATION
// line 8143 "-"	WITHOUT_CLASSIFICATION	0.9992542992006974	WITHOUT_CLASSIFICATION	7.457007993026422E-4	IMPLEMENTATION
// we know variables cannot be null since localstaticscope will create a 0 length one.	WITHOUT_CLASSIFICATION	0.9998372845239267	WITHOUT_CLASSIFICATION	1.6271547607323172E-4	IMPLEMENTATION
// No bit math to store level since we know level is zero for this case	WITHOUT_CLASSIFICATION	0.9990224023401687	WITHOUT_CLASSIFICATION	9.775976598312588E-4	IMPLEMENTATION
// Next immediate scope.  Variable and constant scoping rules make use of this variable // in different ways.	WITHOUT_CLASSIFICATION	0.9997771195951101	WITHOUT_CLASSIFICATION	2.228804048899136E-4	IMPLEMENTATION
// Live reference to module	WITHOUT_CLASSIFICATION	0.9999325954504468	WITHOUT_CLASSIFICATION	6.740454955321669E-5	IMPLEMENTATION
// Next CRef down the lexical structure	WITHOUT_CLASSIFICATION	0.9998301344663569	WITHOUT_CLASSIFICATION	1.698655336429343E-4	IMPLEMENTATION
// Our name holder (offsets are assigned as variables are added	WITHOUT_CLASSIFICATION	0.9999888535472675	WITHOUT_CLASSIFICATION	1.1146452732430658E-5	IMPLEMENTATION
// number of variables in this scope representing required arguments	WITHOUT_CLASSIFICATION	0.9999515857695189	WITHOUT_CLASSIFICATION	4.8414230481044E-5	IMPLEMENTATION
// number of variables in this scope representing optional arguments	WITHOUT_CLASSIFICATION	0.9999814103163728	WITHOUT_CLASSIFICATION	1.8589683627202194E-5	IMPLEMENTATION
// index of variable that represents a "rest" arg	WITHOUT_CLASSIFICATION	0.999526549698231	WITHOUT_CLASSIFICATION	4.734503017689852E-4	IMPLEMENTATION
// Note that this object equality check is intentional, to ensure // the string and its interned version are the same object.	WITHOUT_CLASSIFICATION	0.999927736945339	WITHOUT_CLASSIFICATION	7.226305466095688E-5	IMPLEMENTATION
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9998968462442828	WITHOUT_CLASSIFICATION	1.0315375571722433E-4	IMPLEMENTATION
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9998968462442828	WITHOUT_CLASSIFICATION	1.0315375571722433E-4	IMPLEMENTATION
/* Note: Only used by compiler until it can use getConstant again or use some other refactoring */	WITHOUT_CLASSIFICATION	0.998643356624671	WITHOUT_CLASSIFICATION	0.001356643375329018	IMPLEMENTATION
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9990155390388314	WITHOUT_CLASSIFICATION	9.844609611686368E-4	IMPLEMENTATION
/* Try and unload the autoload specified from internedName */	WITHOUT_CLASSIFICATION	0.9999915982093306	WITHOUT_CLASSIFICATION	8.401790669401057E-6	IMPLEMENTATION
// We override that the logic which uses this	WITHOUT_CLASSIFICATION	0.9989940278698028	WITHOUT_CLASSIFICATION	0.0010059721301971232	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999941472071813	WITHOUT_CLASSIFICATION	5.85279281870885E-6	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9996360782735974	WITHOUT_CLASSIFICATION	3.639217264026056E-4	IMPLEMENTATION
// source extensions	WITHOUT_CLASSIFICATION	0.9997404581100592	WITHOUT_CLASSIFICATION	2.5954188994076535E-4	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9996360782735974	WITHOUT_CLASSIFICATION	3.639217264026056E-4	IMPLEMENTATION
// . Array given to rest should pass itself // . Array with rest + other args should extract array // . Array with multiple values and NO rest should extract args if there are more than one argument	WITHOUT_CLASSIFICATION	0.9999605504736622	WITHOUT_CLASSIFICATION	3.944952633793985E-5	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9976484522410732	WITHOUT_CLASSIFICATION	0.0023515477589267702	IMPLEMENTATION
// Is this thread currently with in a function trace?	WITHOUT_CLASSIFICATION	0.9998416605103306	WITHOUT_CLASSIFICATION	1.5833948966936952E-4	IMPLEMENTATION
// Is this thread currently doing an defined? defined should set things like $!	WITHOUT_CLASSIFICATION	0.9963635021902023	WITHOUT_CLASSIFICATION	0.0036364978097975856	IMPLEMENTATION
//private UnsynchronizedStack parentStack;	WITHOUT_CLASSIFICATION	0.9992398671418122	WITHOUT_CLASSIFICATION	7.601328581877126E-4	IMPLEMENTATION
//private UnsynchronizedStack frameStack;	WITHOUT_CLASSIFICATION	0.9992398671418122	WITHOUT_CLASSIFICATION	7.601328581877126E-4	IMPLEMENTATION
// List of active dynamic scopes.  Each of these may have captured other dynamic scopes // to implement closures.	WITHOUT_CLASSIFICATION	0.967691270614423	WITHOUT_CLASSIFICATION	0.03230872938557701	IMPLEMENTATION
// File where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.999818782633373	WITHOUT_CLASSIFICATION	1.812173666271159E-4	IMPLEMENTATION
// Line where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9994003523946098	WITHOUT_CLASSIFICATION	5.996476053902473E-4	IMPLEMENTATION
// In certain places, like grep, we don't use real frames for the // call blocks. This has the effect of not setting the backref in // the correct frame - this delta is activated to the place where // the grep is running in so that the backref will be set in an // appropriate place.	WITHOUT_CLASSIFICATION	0.9969965065934682	WITHOUT_CLASSIFICATION	0.0030034934065319	IMPLEMENTATION
// TOPLEVEL self and a few others want a top-level scope.  We create this one right // away and then pass it into top-level parse so it ends up being the top level.	WITHOUT_CLASSIFICATION	0.9995527311157644	WITHOUT_CLASSIFICATION	4.472688842355479E-4	IMPLEMENTATION
//////////////////// CATCH MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.999072526090938	WITHOUT_CLASSIFICATION	9.274739090619735E-4	IMPLEMENTATION
//////////////////// FRAME MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.999072526090938	WITHOUT_CLASSIFICATION	9.274739090619735E-4	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9924425852157556	WITHOUT_CLASSIFICATION	0.007557414784244455	IMPLEMENTATION
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999076385349512	WITHOUT_CLASSIFICATION	9.236146504886241E-5	IMPLEMENTATION
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999076385349512	WITHOUT_CLASSIFICATION	9.236146504886241E-5	IMPLEMENTATION
// look for mangling markers for compiled Ruby in method name	WITHOUT_CLASSIFICATION	0.9993203553789762	WITHOUT_CLASSIFICATION	6.796446210237954E-4	IMPLEMENTATION
// if it's not a rescue or ensure, there's a frame associated, so decrement	WITHOUT_CLASSIFICATION	0.9984866966484794	WITHOUT_CLASSIFICATION	0.0015133033515205884	IMPLEMENTATION
// look for __file__ method name for compiled roots	WITHOUT_CLASSIFICATION	0.9962826276956902	WITHOUT_CLASSIFICATION	0.003717372304309703	IMPLEMENTATION
// All entries following removed node can stay // in list, but all preceding ones need to be // cloned.	WITHOUT_CLASSIFICATION	0.999297654764841	WITHOUT_CLASSIFICATION	7.023452351590028E-4	IMPLEMENTATION
// required and optional only	WITHOUT_CLASSIFICATION	0.9994540833526553	WITHOUT_CLASSIFICATION	5.459166473446983E-4	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9996360782735974	WITHOUT_CLASSIFICATION	3.639217264026056E-4	IMPLEMENTATION
// look for mangling markers for bound, unframed methods in class name	WITHOUT_CLASSIFICATION	0.9999879750895942	WITHOUT_CLASSIFICATION	1.2024910405771567E-5	IMPLEMENTATION
// set the binding's frame's "previous" file and line to current, so // trace will show who called the block	WITHOUT_CLASSIFICATION	0.9999534593984302	WITHOUT_CLASSIFICATION	4.6540601569771114E-5	IMPLEMENTATION
// framed invokers will have Ruby frames associated with them	WITHOUT_CLASSIFICATION	0.9998092401787115	WITHOUT_CLASSIFICATION	1.9075982128841917E-4	IMPLEMENTATION
// look for mangling markers for bound, framed methods in class name	WITHOUT_CLASSIFICATION	0.9999879750895942	WITHOUT_CLASSIFICATION	1.2024910405771567E-5	IMPLEMENTATION
// unframed invokers have no Ruby frames, so pull from class name // but use current frame as file and line	WITHOUT_CLASSIFICATION	0.9999757789540388	WITHOUT_CLASSIFICATION	2.4221045961238203E-5	IMPLEMENTATION
// try to mine out a Ruby frame using our list of interpreter entry-point markers	WITHOUT_CLASSIFICATION	0.9999855512556001	WITHOUT_CLASSIFICATION	1.4448744399894261E-5	IMPLEMENTATION
// Frame matches one of our markers for "interpreted" calls	WITHOUT_CLASSIFICATION	0.9999697852848246	WITHOUT_CLASSIFICATION	3.021471517537487E-5	IMPLEMENTATION
// Frame is extraneous runtime information, skip it unless debug	WITHOUT_CLASSIFICATION	0.9989157474546707	WITHOUT_CLASSIFICATION	0.0010842525453293008	IMPLEMENTATION
/*     * Determine what sort of assigner should be used for the provided 'iter' (e.g. block).     * Assigner provides just the right logic for assigning values to local parameters of the     * block.     *     * This method also has a second optimization which is to set 'noargblock' in the case that     * the block is a block which accepts no arguments.  The primary reason for this second     * optimization is that in the case of a yield with a RubyArray we will bypass some logic     * processing the RubyArray into a proper form (only to then not do anythign with it).  A     * secondary benefit is that a simple boolean seems to optimize by hotspot much faster     * than the zero arg assigner.     */	WITHOUT_CLASSIFICATION	0.9996481408923932	WITHOUT_CLASSIFICATION	3.5185910760684465E-4	IMPLEMENTATION
// new scope for this invocation of the block, based on parent scope	WITHOUT_CLASSIFICATION	0.9998444896168623	WITHOUT_CLASSIFICATION	1.555103831376886E-4	IMPLEMENTATION
// No argument blocks	WITHOUT_CLASSIFICATION	0.9999716430657342	WITHOUT_CLASSIFICATION	2.8356934265854757E-5	IMPLEMENTATION
// just push the same empty scope, since we won't use one	WITHOUT_CLASSIFICATION	0.9999978256624249	WITHOUT_CLASSIFICATION	2.174337575037219E-6	IMPLEMENTATION
// Not sure if this is actually possible, but better safe than sorry	WITHOUT_CLASSIFICATION	0.9999043934779052	WITHOUT_CLASSIFICATION	9.560652209485077E-5	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9996368651329156	WITHOUT_CLASSIFICATION	3.6313486708435075E-4	IMPLEMENTATION
// This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).	WITHOUT_CLASSIFICATION	0.9995037117685159	WITHOUT_CLASSIFICATION	4.962882314841534E-4	IMPLEMENTATION
// Highest reserved id	WITHOUT_CLASSIFICATION	0.999812486267211	WITHOUT_CLASSIFICATION	1.8751373278911874E-4	IMPLEMENTATION
// binary typed calls	WITHOUT_CLASSIFICATION	0.9994637810062362	WITHOUT_CLASSIFICATION	5.362189937637259E-4	IMPLEMENTATION
// id must always be even	WITHOUT_CLASSIFICATION	0.9996880506136384	WITHOUT_CLASSIFICATION	3.119493863614788E-4	IMPLEMENTATION
// with block pass	WITHOUT_CLASSIFICATION	0.9984054588562032	WITHOUT_CLASSIFICATION	0.0015945411437968374	IMPLEMENTATION
// no block	WITHOUT_CLASSIFICATION	0.998730741803957	WITHOUT_CLASSIFICATION	0.0012692581960429077	IMPLEMENTATION
// with block literal (iter)	WITHOUT_CLASSIFICATION	0.9996744150898303	WITHOUT_CLASSIFICATION	3.2558491016973853E-4	IMPLEMENTATION
//            assert false : "can this happen?";	WITHOUT_CLASSIFICATION	0.9997219479057144	WITHOUT_CLASSIFICATION	2.7805209428558616E-4	IMPLEMENTATION
// if we have multiple asgn with just *args, need a special type for that	WITHOUT_CLASSIFICATION	0.9999732377657826	WITHOUT_CLASSIFICATION	2.676223421734291E-5	IMPLEMENTATION
// && args.getMaxArgumentsCount() != 1) {	WITHOUT_CLASSIFICATION	0.9997847286868174	WITHOUT_CLASSIFICATION	2.152713131826408E-4	IMPLEMENTATION
//            return warnMultiReturnNil(ruby);	WITHOUT_CLASSIFICATION	0.9997606278951848	WITHOUT_CLASSIFICATION	2.3937210481514296E-4	IMPLEMENTATION
// ensure zero is devoted to no method name	WITHOUT_CLASSIFICATION	0.9933382774521823	WITHOUT_CLASSIFICATION	0.006661722547817666	IMPLEMENTATION
// predefine a few other methods we invoke directly elsewhere	WITHOUT_CLASSIFICATION	0.999632593895982	WITHOUT_CLASSIFICATION	3.674061040179367E-4	IMPLEMENTATION
// fast and safe respond_to? call site logic	WITHOUT_CLASSIFICATION	0.999623260381547	WITHOUT_CLASSIFICATION	3.7673961845299765E-4	IMPLEMENTATION
// Static scoping information for this scope	WITHOUT_CLASSIFICATION	0.9999456417968858	WITHOUT_CLASSIFICATION	5.4358203114178536E-5	IMPLEMENTATION
// Captured dynamic scopes	WITHOUT_CLASSIFICATION	0.9997880897203862	WITHOUT_CLASSIFICATION	2.1191027961366268E-4	IMPLEMENTATION
// Backref for $~, $1, etc	WITHOUT_CLASSIFICATION	0.9999223399809373	WITHOUT_CLASSIFICATION	7.766001906272747E-5	IMPLEMENTATION
// Lastline	WITHOUT_CLASSIFICATION	0.9990652123136763	WITHOUT_CLASSIFICATION	9.347876863236658E-4	IMPLEMENTATION
// No binding scope so we should create one	WITHOUT_CLASSIFICATION	0.9996806907768632	WITHOUT_CLASSIFICATION	3.193092231368006E-4	IMPLEMENTATION
// bindings scopes must always be ManyVars scopes since evals can grow them	WITHOUT_CLASSIFICATION	0.9996434168311084	WITHOUT_CLASSIFICATION	3.565831688915814E-4	IMPLEMENTATION
// Helper function to give a good view of current dynamic scope with captured scopes	WITHOUT_CLASSIFICATION	0.9997979868196663	WITHOUT_CLASSIFICATION	2.0201318033372296E-4	IMPLEMENTATION
// try count specific args to determine required	WITHOUT_CLASSIFICATION	0.9990860767960403	WITHOUT_CLASSIFICATION	9.139232039597876E-4	IMPLEMENTATION
// Some helper functions:	WITHOUT_CLASSIFICATION	0.9998625520777993	WITHOUT_CLASSIFICATION	1.3744792220079429E-4	IMPLEMENTATION
// silently ignore	WITHOUT_CLASSIFICATION	0.9978613129396582	WITHOUT_CLASSIFICATION	0.00213868706034178	IMPLEMENTATION
// used by compiler	WITHOUT_CLASSIFICATION	0.9989400947704985	WITHOUT_CLASSIFICATION	0.0010599052295014195	IMPLEMENTATION
// initialize the static settings to determine which factory to use	WITHOUT_CLASSIFICATION	0.9999080263984259	WITHOUT_CLASSIFICATION	9.197360157411974E-5	IMPLEMENTATION
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9997467728107063	WITHOUT_CLASSIFICATION	2.5322718929362756E-4	IMPLEMENTATION
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9995722137919058	WITHOUT_CLASSIFICATION	4.277862080942681E-4	IMPLEMENTATION
//  Single node on list	WITHOUT_CLASSIFICATION	0.9995603101527855	WITHOUT_CLASSIFICATION	4.396898472145045E-4	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999019671606303	WITHOUT_CLASSIFICATION	9.803283936966692E-5	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9995986238106177	WITHOUT_CLASSIFICATION	4.0137618938225234E-4	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9976484522410732	WITHOUT_CLASSIFICATION	0.0023515477589267702	IMPLEMENTATION
// Note: In Ruby 1.9 all of this logic can go away since they will require explicit // bindings for evals.	WITHOUT_CLASSIFICATION	0.9999334420642771	WITHOUT_CLASSIFICATION	6.655793572283546E-5	IMPLEMENTATION
// We only define one special dynamic scope per 'logical' binding.  So all bindings for // the same scope should share the same dynamic scope.  This allows multiple evals with // different different bindings in the same scope to see the same stuff.	WITHOUT_CLASSIFICATION	0.9999921109403095	WITHOUT_CLASSIFICATION	7.889059690499254E-6	IMPLEMENTATION
// If the next scope out has the same binding scope as this scope it means // we are evaling within an eval and in that case we should be sharing the same // binding scope.	WITHOUT_CLASSIFICATION	0.999938728498856	WITHOUT_CLASSIFICATION	6.12715011439879E-5	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.999997395598461	WITHOUT_CLASSIFICATION	2.6044015389850056E-6	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.999997395598461	WITHOUT_CLASSIFICATION	2.6044015389850056E-6	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999950480175704	WITHOUT_CLASSIFICATION	4.9519824296677515E-6	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999950480175704	WITHOUT_CLASSIFICATION	4.9519824296677515E-6	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999950480175704	WITHOUT_CLASSIFICATION	4.9519824296677515E-6	IMPLEMENTATION
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9998584014418039	WITHOUT_CLASSIFICATION	1.415985581960866E-4	IMPLEMENTATION
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9998584014418039	WITHOUT_CLASSIFICATION	1.415985581960866E-4	IMPLEMENTATION
// extra args for rest	WITHOUT_CLASSIFICATION	0.9998750483563104	WITHOUT_CLASSIFICATION	1.2495164368975944E-4	IMPLEMENTATION
// extra args for rest	WITHOUT_CLASSIFICATION	0.9998750483563104	WITHOUT_CLASSIFICATION	1.2495164368975944E-4	IMPLEMENTATION
/*     * This is the proper behavior for all non-expanded assigners which have a pre > 0.  The rest     * override this.     */	WITHOUT_CLASSIFICATION	0.9999856631534283	WITHOUT_CLASSIFICATION	1.433684657175767E-5	IMPLEMENTATION
/*     * This is the proper behavior for all non-expanded assigners.     */	WITHOUT_CLASSIFICATION	0.9999861108088831	WITHOUT_CLASSIFICATION	1.3889191116946296E-5	IMPLEMENTATION
// prefill ?	WITHOUT_CLASSIFICATION	0.9992591813668483	WITHOUT_CLASSIFICATION	7.408186331517688E-4	IMPLEMENTATION
// prefill ?	WITHOUT_CLASSIFICATION	0.9992591813668483	WITHOUT_CLASSIFICATION	7.408186331517688E-4	IMPLEMENTATION
// MUST be called from synchronized/locked block! // should only be called by variableTableStore/variableTableFastStore	WITHOUT_CLASSIFICATION	0.9999755750460838	WITHOUT_CLASSIFICATION	2.442495391613821E-5	IMPLEMENTATION
// retrieve method // module // name	WITHOUT_CLASSIFICATION	0.9944423729822085	WITHOUT_CLASSIFICATION	0.005557627017791546	IMPLEMENTATION
// call is ok, punch it!	WITHOUT_CLASSIFICATION	0.9998231398224666	WITHOUT_CLASSIFICATION	1.7686017753346987E-4	IMPLEMENTATION
// if undefined, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999642779939107	WITHOUT_CLASSIFICATION	3.572200608923886E-5	IMPLEMENTATION
// if we're not attempting to invoke method_missing and method is not visible, branch to method_missing	WITHOUT_CLASSIFICATION	0.9988727254681541	WITHOUT_CLASSIFICATION	0.0011272745318459403	IMPLEMENTATION
// method object already present, push various args // tc // self // klazz // name	WITHOUT_CLASSIFICATION	0.9985012745555887	WITHOUT_CLASSIFICATION	0.0014987254444113146	IMPLEMENTATION
// if it's method_missing, just invoke it	WITHOUT_CLASSIFICATION	0.9999490884440742	WITHOUT_CLASSIFICATION	5.0911555925816965E-5	IMPLEMENTATION
// invoke callMethodMissing	WITHOUT_CLASSIFICATION	0.9997932620085969	WITHOUT_CLASSIFICATION	2.0673799140309953E-4	IMPLEMENTATION
// caller	WITHOUT_CLASSIFICATION	0.9999800473896049	WITHOUT_CLASSIFICATION	1.9952610395160643E-5	IMPLEMENTATION
// calltype // block	WITHOUT_CLASSIFICATION	0.9988798125413142	WITHOUT_CLASSIFICATION	0.0011201874586857842	IMPLEMENTATION
// if no exception raised, jump to end to leave result on stack for return	WITHOUT_CLASSIFICATION	0.9998948056525256	WITHOUT_CLASSIFICATION	1.0519434747433795E-4	IMPLEMENTATION
// load arity for check	WITHOUT_CLASSIFICATION	0.9998396087142584	WITHOUT_CLASSIFICATION	1.6039128574162924E-4	IMPLEMENTATION
// throw	WITHOUT_CLASSIFICATION	0.9999727636068634	WITHOUT_CLASSIFICATION	2.7236393136586468E-5	IMPLEMENTATION
// load arity for error	WITHOUT_CLASSIFICATION	0.9998649124491906	WITHOUT_CLASSIFICATION	1.3508755080928467E-4	IMPLEMENTATION
// arity ok, continue	WITHOUT_CLASSIFICATION	0.9997503234128525	WITHOUT_CLASSIFICATION	2.4967658714743256E-4	IMPLEMENTATION
//InvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.999216654151653	WITHOUT_CLASSIFICATION	7.833458483471001E-4	IMPLEMENTATION
// ENEBO: Perhaps slow but simple for now	WITHOUT_CLASSIFICATION	0.9998396809147613	WITHOUT_CLASSIFICATION	1.6031908523875623E-4	IMPLEMENTATION
// FastInvocationCallback	WITHOUT_CLASSIFICATION	0.9997877334300682	WITHOUT_CLASSIFICATION	2.1226656993181153E-4	IMPLEMENTATION
// InvocationCallback	WITHOUT_CLASSIFICATION	0.9997877334300682	WITHOUT_CLASSIFICATION	2.1226656993181153E-4	IMPLEMENTATION
//DumpingInvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9990655965962804	WITHOUT_CLASSIFICATION	9.344034037195148E-4	IMPLEMENTATION
// for fast lookup: encoding entry => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999694545394526	WITHOUT_CLASSIFICATION	3.054546054735056E-5	IMPLEMENTATION
// for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999542769715903	WITHOUT_CLASSIFICATION	4.5723028409706515E-5	IMPLEMENTATION
// load the encoding	WITHOUT_CLASSIFICATION	0.9994140779191268	WITHOUT_CLASSIFICATION	5.859220808731747E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9998025668261347	WITHOUT_CLASSIFICATION	1.9743317386538002E-4	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9998025668261347	WITHOUT_CLASSIFICATION	1.9743317386538002E-4	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9998025668261347	WITHOUT_CLASSIFICATION	1.9743317386538002E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9997488534104652	WITHOUT_CLASSIFICATION	2.511465895349295E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9997488534104652	WITHOUT_CLASSIFICATION	2.511465895349295E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9997488534104652	WITHOUT_CLASSIFICATION	2.511465895349295E-4	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9997488534104652	WITHOUT_CLASSIFICATION	2.511465895349295E-4	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9997488534104652	WITHOUT_CLASSIFICATION	2.511465895349295E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999765765180218	WITHOUT_CLASSIFICATION	2.342348197820783E-4	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999765765180218	WITHOUT_CLASSIFICATION	2.342348197820783E-4	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999765765180218	WITHOUT_CLASSIFICATION	2.342348197820783E-4	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999765765180218	WITHOUT_CLASSIFICATION	2.342348197820783E-4	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999765765180218	WITHOUT_CLASSIFICATION	2.342348197820783E-4	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999765765180218	WITHOUT_CLASSIFICATION	2.342348197820783E-4	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999765765180218	WITHOUT_CLASSIFICATION	2.342348197820783E-4	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999765765180218	WITHOUT_CLASSIFICATION	2.342348197820783E-4	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999765765180218	WITHOUT_CLASSIFICATION	2.342348197820783E-4	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999765765180218	WITHOUT_CLASSIFICATION	2.342348197820783E-4	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999765765180218	WITHOUT_CLASSIFICATION	2.342348197820783E-4	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999765765180218	WITHOUT_CLASSIFICATION	2.342348197820783E-4	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999765765180218	WITHOUT_CLASSIFICATION	2.342348197820783E-4	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999765765180218	WITHOUT_CLASSIFICATION	2.342348197820783E-4	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999765765180218	WITHOUT_CLASSIFICATION	2.342348197820783E-4	IMPLEMENTATION
// If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs	WITHOUT_CLASSIFICATION	0.9999974772361699	WITHOUT_CLASSIFICATION	2.522763830115975E-6	IMPLEMENTATION
// BreakJump, ThreadContext	WITHOUT_CLASSIFICATION	0.9997877334300682	WITHOUT_CLASSIFICATION	2.1226656993181153E-4	IMPLEMENTATION
// ThreadContext	WITHOUT_CLASSIFICATION	0.9990652123136763	WITHOUT_CLASSIFICATION	9.347876863236658E-4	IMPLEMENTATION
// BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9997467728107063	WITHOUT_CLASSIFICATION	2.5322718929362756E-4	IMPLEMENTATION
// Make Java class files in the jar reachable from Ruby	WITHOUT_CLASSIFICATION	0.9999972027641985	WITHOUT_CLASSIFICATION	2.79723580146779E-6	IMPLEMENTATION
// RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9997467728107063	WITHOUT_CLASSIFICATION	2.5322718929362756E-4	IMPLEMENTATION
// add all startup load paths to the list first	WITHOUT_CLASSIFICATION	0.999698286891082	WITHOUT_CLASSIFICATION	3.017131089180778E-4	IMPLEMENTATION
// if it's a compiled JRuby script, instantiate and run it	WITHOUT_CLASSIFICATION	0.9999266481733979	WITHOUT_CLASSIFICATION	7.335182660197057E-5	IMPLEMENTATION
// wrap in try/catch for security exceptions in an applet	WITHOUT_CLASSIFICATION	0.999997145493585	WITHOUT_CLASSIFICATION	2.854506415025984E-6	IMPLEMENTATION
// add $RUBYLIB paths	WITHOUT_CLASSIFICATION	0.9997339769596932	WITHOUT_CLASSIFICATION	2.660230403066732E-4	IMPLEMENTATION
// Empty paths do not need to be added	WITHOUT_CLASSIFICATION	0.8941009095744652	WITHOUT_CLASSIFICATION	0.10589909042553473	IMPLEMENTATION
// "." dir is used for relative path loads from a given file, as in require '../foo/bar'	WITHOUT_CLASSIFICATION	0.9999972017515029	WITHOUT_CLASSIFICATION	2.7982484971819522E-6	IMPLEMENTATION
// Add 1.8 libs	WITHOUT_CLASSIFICATION	0.9989416755318706	WITHOUT_CLASSIFICATION	0.0010583244681294237	IMPLEMENTATION
// Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.	WITHOUT_CLASSIFICATION	0.9999978268602557	WITHOUT_CLASSIFICATION	2.1731397443196026E-6	IMPLEMENTATION
// Library has already been loaded in some form, bail out	WITHOUT_CLASSIFICATION	0.999985691064902	WITHOUT_CLASSIFICATION	1.4308935097992613E-5	IMPLEMENTATION
// We don't want a package name beginning with dots, so we remove them	WITHOUT_CLASSIFICATION	0.9997524031119563	WITHOUT_CLASSIFICATION	2.475968880436059E-4	IMPLEMENTATION
// If there is a jar-file with the required name, we add this to the class path.	WITHOUT_CLASSIFICATION	0.9998863041012267	WITHOUT_CLASSIFICATION	1.1369589877335087E-4	IMPLEMENTATION
// quietly try to load the class	WITHOUT_CLASSIFICATION	0.9997818822968443	WITHOUT_CLASSIFICATION	2.1811770315567348E-4	IMPLEMENTATION
// If there was a good library before, we go back to that	WITHOUT_CLASSIFICATION	0.9999827049935021	WITHOUT_CLASSIFICATION	1.729500649802855E-5	IMPLEMENTATION
// no library or extension found, try to load directly as a class	WITHOUT_CLASSIFICATION	0.9997653521824332	WITHOUT_CLASSIFICATION	2.3464781756684045E-4	IMPLEMENTATION
// if an extension is specified, try more targetted searches	WITHOUT_CLASSIFICATION	0.9998469877309132	WITHOUT_CLASSIFICATION	1.5301226908691226E-4	IMPLEMENTATION
// signed short, big-endian	WITHOUT_CLASSIFICATION	0.9997978657609927	WITHOUT_CLASSIFICATION	2.021342390071945E-4	IMPLEMENTATION
// source extensions	WITHOUT_CLASSIFICATION	0.9997404581100592	WITHOUT_CLASSIFICATION	2.5954188994076535E-4	IMPLEMENTATION
// We don't support .so, but some stdlib require .so directly // replace it with .jar to look for an extension type we do support	WITHOUT_CLASSIFICATION	0.9719468953123673	WITHOUT_CLASSIFICATION	0.028053104687632724	IMPLEMENTATION
// This code exploits the fact that all .jar files will be found for the JarredScript feature. // This is where the basic extension mechanism gets fixed	WITHOUT_CLASSIFICATION	0.9998855568202452	WITHOUT_CLASSIFICATION	1.1444317975484843E-4	IMPLEMENTATION
// Make the class name look nice, by splitting on _ and capitalize each segment, then joining // the, together without anything separating them, and last put on "Service" at the end.	WITHOUT_CLASSIFICATION	0.9923957766556866	WITHOUT_CLASSIFICATION	0.007604223344313473	IMPLEMENTATION
// It's _really_ expensive to check that the class actually exists in the Jar, so // we don't do that now.	WITHOUT_CLASSIFICATION	0.9999582010130158	WITHOUT_CLASSIFICATION	4.179898698423626E-5	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9976650557636056	WITHOUT_CLASSIFICATION	0.0023349442363943575	IMPLEMENTATION
// extension extensions	WITHOUT_CLASSIFICATION	0.9995712996062579	WITHOUT_CLASSIFICATION	4.287003937420016E-4	IMPLEMENTATION
// unknown extension, fall back to search with extensions	WITHOUT_CLASSIFICATION	0.9992862409490448	WITHOUT_CLASSIFICATION	7.137590509551499E-4	IMPLEMENTATION
// try all extensions	WITHOUT_CLASSIFICATION	0.9997318343712117	WITHOUT_CLASSIFICATION	2.681656287882674E-4	IMPLEMENTATION
// if a source extension is specified, try all source extensions	WITHOUT_CLASSIFICATION	0.9999893548760428	WITHOUT_CLASSIFICATION	1.0645123957147443E-5	IMPLEMENTATION
// unknown extension, fall back to exact search	WITHOUT_CLASSIFICATION	0.9995101841970035	WITHOUT_CLASSIFICATION	4.898158029964097E-4	IMPLEMENTATION
// try only literal search	WITHOUT_CLASSIFICATION	0.999645659379817	WITHOUT_CLASSIFICATION	3.5434062018299006E-4	IMPLEMENTATION
// attempt to load the found library	WITHOUT_CLASSIFICATION	0.999092451822683	WITHOUT_CLASSIFICATION	9.075481773169355E-4	IMPLEMENTATION
// otherwise load the library we've found	WITHOUT_CLASSIFICATION	0.9921938450048909	WITHOUT_CLASSIFICATION	0.00780615499510903	IMPLEMENTATION
// allow MainExitException to propagate out for exec and friends	WITHOUT_CLASSIFICATION	0.9998708068213498	WITHOUT_CLASSIFICATION	1.2919317865017942E-4	IMPLEMENTATION
// Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".	WITHOUT_CLASSIFICATION	0.9997881046613161	WITHOUT_CLASSIFICATION	2.1189533868391867E-4	IMPLEMENTATION
// check current directory; if file exists, retrieve URL and return resource	WITHOUT_CLASSIFICATION	0.9992111670515447	WITHOUT_CLASSIFICATION	7.888329484553816E-4	IMPLEMENTATION
// if a jar or file URL, return load service resource directly without further searching	WITHOUT_CLASSIFICATION	0.9999417300359317	WITHOUT_CLASSIFICATION	5.8269964068267756E-5	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9996153682632261	WITHOUT_CLASSIFICATION	3.8463173677395654E-4	IMPLEMENTATION
// if it's a ./ baseName, use CWD logic	WITHOUT_CLASSIFICATION	0.9998681638598741	WITHOUT_CLASSIFICATION	1.3183614012602114E-4	IMPLEMENTATION
// if given path is absolute, just try it as-is (with extensions) and no load path	WITHOUT_CLASSIFICATION	0.999985582361733	WITHOUT_CLASSIFICATION	1.441763826705568E-5	IMPLEMENTATION
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9984237775649327	WITHOUT_CLASSIFICATION	0.0015762224350672508	IMPLEMENTATION
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9984237775649327	WITHOUT_CLASSIFICATION	0.0015762224350672508	IMPLEMENTATION
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9993085701032667	WITHOUT_CLASSIFICATION	6.914298967333962E-4	IMPLEMENTATION
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9993085701032667	WITHOUT_CLASSIFICATION	6.914298967333962E-4	IMPLEMENTATION
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999121744046463	WITHOUT_CLASSIFICATION	8.782559535377513E-5	IMPLEMENTATION
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999121744046463	WITHOUT_CLASSIFICATION	8.782559535377513E-5	IMPLEMENTATION
//                    actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));	WITHOUT_CLASSIFICATION	0.9997996082869528	WITHOUT_CLASSIFICATION	2.0039171304729985E-4	IMPLEMENTATION
// handle security-sensitive case	WITHOUT_CLASSIFICATION	0.9983981897072904	WITHOUT_CLASSIFICATION	0.0016018102927095779	IMPLEMENTATION
// if entry is an empty string, skip it	WITHOUT_CLASSIFICATION	0.9999857750753016	WITHOUT_CLASSIFICATION	1.4224924698373758E-5	IMPLEMENTATION
// if entry starts with a slash, skip it since classloader resources never start with a /	WITHOUT_CLASSIFICATION	0.9994669921830256	WITHOUT_CLASSIFICATION	5.330078169744382E-4	IMPLEMENTATION
// otherwise, try to load from classpath (Note: Jar resources always uses '/')	WITHOUT_CLASSIFICATION	0.9999037471150087	WITHOUT_CLASSIFICATION	9.625288499122746E-5	IMPLEMENTATION
// Make sure this is not a directory or unavailable in some way	WITHOUT_CLASSIFICATION	0.9996286080461858	WITHOUT_CLASSIFICATION	3.713919538141877E-4	IMPLEMENTATION
// signed short, native	WITHOUT_CLASSIFICATION	0.9997991075445247	WITHOUT_CLASSIFICATION	2.0089245547514576E-4	IMPLEMENTATION
// If we fail to find as a normal Ruby script, we try to find as an extension, // checking for a builtin first.	WITHOUT_CLASSIFICATION	0.9999894023945354	WITHOUT_CLASSIFICATION	1.0597605464555932E-5	IMPLEMENTATION
// write `I' instance var signet if class is NOT a direct subclass of Object	WITHOUT_CLASSIFICATION	0.9999989662497858	WITHOUT_CLASSIFICATION	1.033750214152264E-6	IMPLEMENTATION
// if name starts with a / we're done (classloader resources won't load with an initial /)	WITHOUT_CLASSIFICATION	0.999999895776472	WITHOUT_CLASSIFICATION	1.0422352809532411E-7	IMPLEMENTATION
// Look in classpath next (we do not use File as a test since UNC names will match) // Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")	WITHOUT_CLASSIFICATION	0.9999934191999162	WITHOUT_CLASSIFICATION	6.580800083753959E-6	IMPLEMENTATION
/* Directories and unavailable resources are not able to open a stream. */	WITHOUT_CLASSIFICATION	0.9999254854691387	WITHOUT_CLASSIFICATION	7.451453086123184E-5	IMPLEMENTATION
// Try to load from classpath without prefix. "A/b.rb" will not load as  // "./A/b.rb" in a jar file.	WITHOUT_CLASSIFICATION	0.9999637630599711	WITHOUT_CLASSIFICATION	3.623694002889311E-5	IMPLEMENTATION
// object has instance vars and isn't a class, get a snapshot to be marshalled // and output the ivar header here	WITHOUT_CLASSIFICATION	0.9999905765244723	WITHOUT_CLASSIFICATION	9.423475527633952E-6	IMPLEMENTATION
// flush afer whole dump is complete	WITHOUT_CLASSIFICATION	0.9997928016187594	WITHOUT_CLASSIFICATION	2.0719838124074534E-4	IMPLEMENTATION
//            write('S');	WITHOUT_CLASSIFICATION	0.9998557625408103	WITHOUT_CLASSIFICATION	1.4423745918969765E-4	IMPLEMENTATION
// switch on the object's *native type*. This allows use-defined // classes that have extended core native types to piggyback on their // marshalling logic.	WITHOUT_CLASSIFICATION	0.9995277143814784	WITHOUT_CLASSIFICATION	4.7228561852167005E-4	IMPLEMENTATION
// object is a custom class that extended one of the native types other than Object	WITHOUT_CLASSIFICATION	0.9999081818748751	WITHOUT_CLASSIFICATION	9.181812512487534E-5	IMPLEMENTATION
// We do not want to capture cached methods	WITHOUT_CLASSIFICATION	0.9956511788063542	WITHOUT_CLASSIFICATION	0.0043488211936457775	IMPLEMENTATION
// w_symbol	WITHOUT_CLASSIFICATION	0.9990652123136763	WITHOUT_CLASSIFICATION	9.347876863236658E-4	IMPLEMENTATION
// w_unique	WITHOUT_CLASSIFICATION	0.9990652123136763	WITHOUT_CLASSIFICATION	9.347876863236658E-4	IMPLEMENTATION
// call the proc, but not for symbols	WITHOUT_CLASSIFICATION	0.9993327503405742	WITHOUT_CLASSIFICATION	6.672496594257721E-4	IMPLEMENTATION
// Major // Minor	WITHOUT_CLASSIFICATION	0.9990652123136763	WITHOUT_CLASSIFICATION	9.347876863236658E-4	IMPLEMENTATION
// any ivars, since we don't have __attached__ ivar now	WITHOUT_CLASSIFICATION	0.9998461554313394	WITHOUT_CLASSIFICATION	1.5384456866069022E-4	IMPLEMENTATION
// "hashdef" object, a hash with a default	WITHOUT_CLASSIFICATION	0.9999641268163585	WITHOUT_CLASSIFICATION	3.5873183641539245E-5	IMPLEMENTATION
// All "C" marshalled objects descend from core classes, which are all RubyObject	WITHOUT_CLASSIFICATION	0.9999148484903138	WITHOUT_CLASSIFICATION	8.51515096862902E-5	IMPLEMENTATION
// sic	WITHOUT_CLASSIFICATION	0.999970764908297	WITHOUT_CLASSIFICATION	2.9235091703083797E-5	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.999933732064844	WITHOUT_CLASSIFICATION	6.626793515589999E-5	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.999933732064844	WITHOUT_CLASSIFICATION	6.626793515589999E-5	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.999933732064844	WITHOUT_CLASSIFICATION	6.626793515589999E-5	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999318615196062	WITHOUT_CLASSIFICATION	6.813848039367931E-5	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999318615196062	WITHOUT_CLASSIFICATION	6.813848039367931E-5	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9996368651329156	WITHOUT_CLASSIFICATION	3.6313486708435075E-4	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9996368651329156	WITHOUT_CLASSIFICATION	3.6313486708435075E-4	IMPLEMENTATION
/*     * If we are setting post arguments we can assume there are no pre or others     */	WITHOUT_CLASSIFICATION	0.9999945156577977	WITHOUT_CLASSIFICATION	5.4843422023128895E-6	IMPLEMENTATION
// XXX: 0xffff0000 on BE?	WITHOUT_CLASSIFICATION	0.9974246182378068	WITHOUT_CLASSIFICATION	0.0025753817621931414	IMPLEMENTATION
// unsigned short, native	WITHOUT_CLASSIFICATION	0.9998007233515777	WITHOUT_CLASSIFICATION	1.9927664842236308E-4	IMPLEMENTATION
// int, native // long, native	WITHOUT_CLASSIFICATION	0.9998005228870848	WITHOUT_CLASSIFICATION	1.9947711291526176E-4	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.999933732064844	WITHOUT_CLASSIFICATION	6.626793515589999E-5	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.999933732064844	WITHOUT_CLASSIFICATION	6.626793515589999E-5	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.999933732064844	WITHOUT_CLASSIFICATION	6.626793515589999E-5	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999318615196062	WITHOUT_CLASSIFICATION	6.813848039367931E-5	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999318615196062	WITHOUT_CLASSIFICATION	6.813848039367931E-5	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999318615196062	WITHOUT_CLASSIFICATION	6.813848039367931E-5	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9996368651329156	WITHOUT_CLASSIFICATION	3.6313486708435075E-4	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9996368651329156	WITHOUT_CLASSIFICATION	3.6313486708435075E-4	IMPLEMENTATION
// Look for slash, starting from 'start' position, until 'end'.	WITHOUT_CLASSIFICATION	0.9999894751961863	WITHOUT_CLASSIFICATION	1.0524803813745643E-5	IMPLEMENTATION
// Our values holder (name of variables are kept in staticScope)	WITHOUT_CLASSIFICATION	0.9999998597581151	WITHOUT_CLASSIFICATION	1.4024188490843952E-7	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9992850856952142	WITHOUT_CLASSIFICATION	7.149143047858048E-4	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9992850856952142	WITHOUT_CLASSIFICATION	7.149143047858048E-4	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9992850856952142	WITHOUT_CLASSIFICATION	7.149143047858048E-4	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9992850856952142	WITHOUT_CLASSIFICATION	7.149143047858048E-4	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9992850856952142	WITHOUT_CLASSIFICATION	7.149143047858048E-4	IMPLEMENTATION
// SunSignalFacade	WITHOUT_CLASSIFICATION	0.9990652123136763	WITHOUT_CLASSIFICATION	9.347876863236658E-4	IMPLEMENTATION
// All braces pushed..	WITHOUT_CLASSIFICATION	0.9998047986071004	WITHOUT_CLASSIFICATION	1.9520139289966172E-4	IMPLEMENTATION
/* failed : try next recursion */	WITHOUT_CLASSIFICATION	0.9989497800388374	WITHOUT_CLASSIFICATION	0.001050219961162598	IMPLEMENTATION
// leftToken made us start as nest 1	WITHOUT_CLASSIFICATION	0.9992343269127713	WITHOUT_CLASSIFICATION	7.656730872287458E-4	IMPLEMENTATION
// are we at '**/'	WITHOUT_CLASSIFICATION	0.9996901214618877	WITHOUT_CLASSIFICATION	3.0987853811220934E-4	IMPLEMENTATION
// No or mismatched braces..Move along..nothing to see here	WITHOUT_CLASSIFICATION	0.9999512951216833	WITHOUT_CLASSIFICATION	4.8704878316550966E-5	IMPLEMENTATION
// not enough bytes	WITHOUT_CLASSIFICATION	0.9815134894658789	WITHOUT_CLASSIFICATION	0.018486510534121054	IMPLEMENTATION
// Get index of last read byte	WITHOUT_CLASSIFICATION	0.999953648062823	WITHOUT_CLASSIFICATION	4.63519371769322E-5	IMPLEMENTATION
// skip inner braces	WITHOUT_CLASSIFICATION	0.9976176413469756	WITHOUT_CLASSIFICATION	0.0023823586530244763	IMPLEMENTATION
/*     * Process {}'s (example: Dir.glob("{jruby,jython}/README*")      */	WITHOUT_CLASSIFICATION	0.9999791785788992	WITHOUT_CLASSIFICATION	2.082142110079269E-5	IMPLEMENTATION
/* complete, according to Posix.2 */	WITHOUT_CLASSIFICATION	0.9999648410839445	WITHOUT_CLASSIFICATION	3.5158916055536444E-5	IMPLEMENTATION
/* Only accept an open brace if there is a close */	WITHOUT_CLASSIFICATION	0.9999999794990476	WITHOUT_CLASSIFICATION	2.0500952446547906E-8	IMPLEMENTATION
/* brace to match it.  Bracket expressions must be */	WITHOUT_CLASSIFICATION	0.99996766421268	WITHOUT_CLASSIFICATION	3.23357873199637E-5	IMPLEMENTATION
// index of left-most brace // index of right-most brace	WITHOUT_CLASSIFICATION	0.9995880690826074	WITHOUT_CLASSIFICATION	4.119309173926192E-4	IMPLEMENTATION
// Length check is a hack.  We should not be reeiving "" as a filename ever. 	WITHOUT_CLASSIFICATION	0.9999013931275657	WITHOUT_CLASSIFICATION	9.860687243437897E-5	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9992303224136739	WITHOUT_CLASSIFICATION	7.696775863260578E-4	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9992303224136739	WITHOUT_CLASSIFICATION	7.696775863260578E-4	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9992303224136739	WITHOUT_CLASSIFICATION	7.696775863260578E-4	IMPLEMENTATION
// Pickaxe says @ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9993985683572291	WITHOUT_CLASSIFICATION	6.014316427708847E-4	IMPLEMENTATION
// Pickaxe says @@ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9993985683572291	WITHOUT_CLASSIFICATION	6.014316427708847E-4	IMPLEMENTATION
// SimpleSampler	WITHOUT_CLASSIFICATION	0.9990652123136763	WITHOUT_CLASSIFICATION	9.347876863236658E-4	IMPLEMENTATION
/*     * convert into longs, returning unsigned 64-bit values as signed longs     * ( num2long raises a RangeError on values > Long.MAX_VALUE )     */	WITHOUT_CLASSIFICATION	0.9999992902317477	WITHOUT_CLASSIFICATION	7.097682522644692E-7	IMPLEMENTATION
// b64_xtable for decoding Base 64	WITHOUT_CLASSIFICATION	0.9998966313509213	WITHOUT_CLASSIFICATION	1.0336864907873663E-4	IMPLEMENTATION
// single precision, little-endian	WITHOUT_CLASSIFICATION	0.9994123040294044	WITHOUT_CLASSIFICATION	5.876959705955817E-4	IMPLEMENTATION
// single precision, big-endian	WITHOUT_CLASSIFICATION	0.9994123040294044	WITHOUT_CLASSIFICATION	5.876959705955817E-4	IMPLEMENTATION
// single precision, native	WITHOUT_CLASSIFICATION	0.9995103655101241	WITHOUT_CLASSIFICATION	4.896344898759179E-4	IMPLEMENTATION
// single precision, native // single precision, native	WITHOUT_CLASSIFICATION	0.9994159130739364	WITHOUT_CLASSIFICATION	5.840869260636666E-4	IMPLEMENTATION
// double precision, little-endian	WITHOUT_CLASSIFICATION	0.9999795280497414	WITHOUT_CLASSIFICATION	2.047195025858469E-5	IMPLEMENTATION
// double precision, big-endian	WITHOUT_CLASSIFICATION	0.9999795280497414	WITHOUT_CLASSIFICATION	2.047195025858469E-5	IMPLEMENTATION
// double precision, native	WITHOUT_CLASSIFICATION	0.9999829455632686	WITHOUT_CLASSIFICATION	1.7054436731384692E-5	IMPLEMENTATION
// signed short, little-endian	WITHOUT_CLASSIFICATION	0.9997978657609927	WITHOUT_CLASSIFICATION	2.021342390071945E-4	IMPLEMENTATION
// signed char	WITHOUT_CLASSIFICATION	0.9994576248588654	WITHOUT_CLASSIFICATION	5.423751411347046E-4	IMPLEMENTATION
// unsigned char	WITHOUT_CLASSIFICATION	0.9994619857825068	WITHOUT_CLASSIFICATION	5.380142174932336E-4	IMPLEMENTATION
// long, little-endian	WITHOUT_CLASSIFICATION	0.9997967038323672	WITHOUT_CLASSIFICATION	2.0329616763279466E-4	IMPLEMENTATION
// long, big-endian	WITHOUT_CLASSIFICATION	0.9991046891733559	WITHOUT_CLASSIFICATION	8.953108266440095E-4	IMPLEMENTATION
// unsigned int, native	WITHOUT_CLASSIFICATION	0.9997942591201415	WITHOUT_CLASSIFICATION	2.057408798584257E-4	IMPLEMENTATION
// int, native	WITHOUT_CLASSIFICATION	0.9990827603198067	WITHOUT_CLASSIFICATION	9.172396801932283E-4	IMPLEMENTATION
// 64-bit number, native (as fixnum)	WITHOUT_CLASSIFICATION	0.9998007750189852	WITHOUT_CLASSIFICATION	1.9922498101466638E-4	IMPLEMENTATION
// How many occurrences of 'type' we want	WITHOUT_CLASSIFICATION	0.9989675144318545	WITHOUT_CLASSIFICATION	0.0010324855681454565	IMPLEMENTATION
// See if we have a converter for the job...	WITHOUT_CLASSIFICATION	0.9999851748997713	WITHOUT_CLASSIFICATION	1.4825100228694721E-5	IMPLEMENTATION
// Otherwise the unpack should be here...	WITHOUT_CLASSIFICATION	0.9996438408603916	WITHOUT_CLASSIFICATION	3.561591396084089E-4	IMPLEMENTATION
// Possible Checksum Byte	WITHOUT_CLASSIFICATION	0.9997634876122314	WITHOUT_CLASSIFICATION	2.365123877686438E-4	IMPLEMENTATION
// obtain a	WITHOUT_CLASSIFICATION	0.9994293156371908	WITHOUT_CLASSIFICATION	5.706843628090995E-4	IMPLEMENTATION
// obtain b	WITHOUT_CLASSIFICATION	0.9992347121178506	WITHOUT_CLASSIFICATION	7.652878821494321E-4	IMPLEMENTATION
// obtain c	WITHOUT_CLASSIFICATION	0.9993046247697972	WITHOUT_CLASSIFICATION	6.953752302027773E-4	IMPLEMENTATION
// obtain d	WITHOUT_CLASSIFICATION	0.9990878079414702	WITHOUT_CLASSIFICATION	9.121920585297642E-4	IMPLEMENTATION
/*encode.limit() - */	WITHOUT_CLASSIFICATION	0.9999944169575454	WITHOUT_CLASSIFICATION	5.583042454513691E-6	IMPLEMENTATION
/* 1 */	WITHOUT_CLASSIFICATION	0.9999944756746151	WITHOUT_CLASSIFICATION	5.524325384884129E-6	IMPLEMENTATION
/* 2 */	WITHOUT_CLASSIFICATION	0.9999979766794621	WITHOUT_CLASSIFICATION	2.023320537940491E-6	IMPLEMENTATION
/* 3 */	WITHOUT_CLASSIFICATION	0.9999965549777058	WITHOUT_CLASSIFICATION	3.4450222942629896E-6	IMPLEMENTATION
/* 4 */	WITHOUT_CLASSIFICATION	0.9999956791486759	WITHOUT_CLASSIFICATION	4.320851324000119E-6	IMPLEMENTATION
/* 5 */	WITHOUT_CLASSIFICATION	0.9999972440254078	WITHOUT_CLASSIFICATION	2.755974592182967E-6	IMPLEMENTATION
/* 6 */	WITHOUT_CLASSIFICATION	0.9999962291155462	WITHOUT_CLASSIFICATION	3.770884453849673E-6	IMPLEMENTATION
/* 7 */	WITHOUT_CLASSIFICATION	0.9999952530490502	WITHOUT_CLASSIFICATION	4.746950949767867E-6	IMPLEMENTATION
// Skip all whitespace in pack format string	WITHOUT_CLASSIFICATION	0.9999965494923838	WITHOUT_CLASSIFICATION	3.450507616066161E-6	IMPLEMENTATION
// Skip embedded comments in pack format string	WITHOUT_CLASSIFICATION	0.9999968732793483	WITHOUT_CLASSIFICATION	3.126720651674504E-6	IMPLEMENTATION
// In case when the number of occurences is // explicitly specified, we have to read up // the remaining garbage after the '\0' to // satisfy the requested pattern.	WITHOUT_CLASSIFICATION	0.999893320100278	WITHOUT_CLASSIFICATION	1.0667989972206332E-4	IMPLEMENTATION
//normal exit, this should be faster than a test at each iterations for string with more than //about 40 char	WITHOUT_CLASSIFICATION	0.9999808179207209	WITHOUT_CLASSIFICATION	1.91820792791183E-5	IMPLEMENTATION
// We encountered '\0' when // were reading the buffer above, // increment the number of read bytes.	WITHOUT_CLASSIFICATION	0.9999890140911386	WITHOUT_CLASSIFICATION	1.0985908861434599E-5	IMPLEMENTATION
// MRI behavior: Contrary to what seems to be logical, // when '*' is given, MRI calculates the distance // to the end, in order to go backwards.	WITHOUT_CLASSIFICATION	0.9999866541195368	WITHOUT_CLASSIFICATION	1.334588046322369E-5	IMPLEMENTATION
// Determine how many of type are needed (default: 1)	WITHOUT_CLASSIFICATION	0.7472882899460517	IMPLEMENTATION	0.25271171005394844	WITHOUT_CLASSIFICATION
// 'Z' adds extra null pad (versus 'a')	WITHOUT_CLASSIFICATION	0.9997681877005872	WITHOUT_CLASSIFICATION	2.3181229941279365E-4	IMPLEMENTATION
//if the low bit is set //set the high bit of the result	WITHOUT_CLASSIFICATION	0.999739913531722	WITHOUT_CLASSIFICATION	2.600864682779349E-4	IMPLEMENTATION
//if the index is not a multiple of 8, we are not on a byte boundary //shift the byte	WITHOUT_CLASSIFICATION	0.9859979983660815	WITHOUT_CLASSIFICATION	0.014002001633918565	IMPLEMENTATION
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9867364839210082	WITHOUT_CLASSIFICATION	0.013263516078991759	IMPLEMENTATION
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9867364839210082	WITHOUT_CLASSIFICATION	0.013263516078991759	IMPLEMENTATION
//do some padding, I don't understand the padding strategy	WITHOUT_CLASSIFICATION	0.9892446120481653	WITHOUT_CLASSIFICATION	0.010755387951834847	IMPLEMENTATION
// we filled up current byte; append it and create next one	WITHOUT_CLASSIFICATION	0.9905622057388928	WITHOUT_CLASSIFICATION	0.00943779426110727	IMPLEMENTATION
//if the index is not a multiple of 8, we are not on a byte boundary	WITHOUT_CLASSIFICATION	0.9858747875043813	WITHOUT_CLASSIFICATION	0.01412521249561865	IMPLEMENTATION
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9999984359378499	WITHOUT_CLASSIFICATION	1.5640621501102732E-6	IMPLEMENTATION
// we don't deal with negatives.	WITHOUT_CLASSIFICATION	0.999210380447532	WITHOUT_CLASSIFICATION	7.896195524679936E-4	IMPLEMENTATION
// populate commandline with NG-provided stuff	WITHOUT_CLASSIFICATION	0.9994048847175	WITHOUT_CLASSIFICATION	5.951152824999719E-4	IMPLEMENTATION
// are we recursing?	WITHOUT_CLASSIFICATION	0.9990687938933681	WITHOUT_CLASSIFICATION	9.312061066318529E-4	IMPLEMENTATION
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999991993906728	WITHOUT_CLASSIFICATION	8.006093271557228E-7	IMPLEMENTATION
// default PidGetter	WITHOUT_CLASSIFICATION	0.9998210437991291	WITHOUT_CLASSIFICATION	1.789562008709863E-4	IMPLEMENTATION
// ignore and try windows version	WITHOUT_CLASSIFICATION	0.9997090956084053	WITHOUT_CLASSIFICATION	2.9090439159474007E-4	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9995504218941357	WITHOUT_CLASSIFICATION	4.495781058642939E-4	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9995504218941357	WITHOUT_CLASSIFICATION	4.495781058642939E-4	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9995504218941357	WITHOUT_CLASSIFICATION	4.495781058642939E-4	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9995504218941357	WITHOUT_CLASSIFICATION	4.495781058642939E-4	IMPLEMENTATION
// try both	WITHOUT_CLASSIFICATION	0.9981823052486378	WITHOUT_CLASSIFICATION	0.0018176947513622115	IMPLEMENTATION
// just unix	WITHOUT_CLASSIFICATION	0.9997820632430333	WITHOUT_CLASSIFICATION	2.1793675696666153E-4	IMPLEMENTATION
// just windows	WITHOUT_CLASSIFICATION	0.9998279207850649	WITHOUT_CLASSIFICATION	1.7207921493514816E-4	IMPLEMENTATION
// neither	WITHOUT_CLASSIFICATION	0.9999708229876079	WITHOUT_CLASSIFICATION	2.9177012392112173E-5	IMPLEMENTATION
// CON: popen is a case where I think we should just always shell out.	WITHOUT_CLASSIFICATION	0.9927669950988051	WITHOUT_CLASSIFICATION	0.007233004901194976	IMPLEMENTATION
// single string command, pass to sh to expand wildcards	WITHOUT_CLASSIFICATION	0.9999493339282948	WITHOUT_CLASSIFICATION	5.0666071705198907E-5	IMPLEMENTATION
// direct invocation of the command	WITHOUT_CLASSIFICATION	0.9998893988822254	WITHOUT_CLASSIFICATION	1.1060111777460105E-4	IMPLEMENTATION
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9998626978058517	WITHOUT_CLASSIFICATION	1.3730219414833414E-4	IMPLEMENTATION
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9998626978058517	WITHOUT_CLASSIFICATION	1.3730219414833414E-4	IMPLEMENTATION
// close process output // See JRUBY-3405; hooking up to parent process stdin caused // problems for IRB etc using stdin.	WITHOUT_CLASSIFICATION	0.9999981263272982	WITHOUT_CLASSIFICATION	1.8736727017844939E-6	IMPLEMENTATION
// ignore, we're on the way out	WITHOUT_CLASSIFICATION	0.9995875938022836	WITHOUT_CLASSIFICATION	4.124061977164406E-4	IMPLEMENTATION
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9989086253982564	WITHOUT_CLASSIFICATION	0.001091374601743531	IMPLEMENTATION
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999843798279167	WITHOUT_CLASSIFICATION	1.5620172083385054E-5	IMPLEMENTATION
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999843798279167	WITHOUT_CLASSIFICATION	1.5620172083385054E-5	IMPLEMENTATION
// popen caller wants to be able to write, provide subprocess out directly	WITHOUT_CLASSIFICATION	0.9999448265076558	WITHOUT_CLASSIFICATION	5.517349234414961E-5	IMPLEMENTATION
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.999957140423686	WITHOUT_CLASSIFICATION	4.285957631398235E-5	IMPLEMENTATION
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.999957140423686	WITHOUT_CLASSIFICATION	4.285957631398235E-5	IMPLEMENTATION
// execute command with sh -c // this does shell expansion of wildcards	WITHOUT_CLASSIFICATION	0.9999533914431796	WITHOUT_CLASSIFICATION	4.660855682041553E-5	IMPLEMENTATION
// We need to close the out, since some // processes would just wait for the stream // to be closed before they process its content, // and produce the output. E.g.: "cat".	WITHOUT_CLASSIFICATION	0.9999952335390747	WITHOUT_CLASSIFICATION	4.766460925243733E-6	IMPLEMENTATION
// we only close out if it's the slave stream, to avoid // closing a directly-mapped stream from parent process	WITHOUT_CLASSIFICATION	0.9999941691024403	WITHOUT_CLASSIFICATION	5.830897559615628E-6	IMPLEMENTATION
// The assumption here is that the 'in' stream provides // proper available() support. If available() always // returns 0, we'll hang!	WITHOUT_CLASSIFICATION	0.999386333132049	WITHOUT_CLASSIFICATION	6.136668679509172E-4	IMPLEMENTATION
// Force t3 to quit, just in case if it's stuck. // Note: On some platforms, even interrupt might not // have an effect if the thread is IO blocked.	WITHOUT_CLASSIFICATION	0.9999689455231464	WITHOUT_CLASSIFICATION	3.1054476853487494E-5	IMPLEMENTATION
// Check for special shell characters [<>|] at the beginning // and end of each command word and don't run in process if we find them.	WITHOUT_CLASSIFICATION	0.999999498368501	WITHOUT_CLASSIFICATION	5.016314990029134E-7	IMPLEMENTATION
// Note: this method produces meaningful results // only for RubyIO objects. For everything else returns 0.	WITHOUT_CLASSIFICATION	0.9900083233897948	WITHOUT_CLASSIFICATION	0.009991676610205101	IMPLEMENTATION
//sequential	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
// reverse the entire area of the array selected if it's reversed.	WITHOUT_CLASSIFICATION	0.9999440244958999	WITHOUT_CLASSIFICATION	5.597550410001503E-5	IMPLEMENTATION
// do median of 7 if the array is over 200 elements.	WITHOUT_CLASSIFICATION	0.9999841336666674	WITHOUT_CLASSIFICATION	1.5866333332590327E-5	IMPLEMENTATION
// if it's less than 200 do median of 3	WITHOUT_CLASSIFICATION	0.9999603076898292	WITHOUT_CLASSIFICATION	3.9692310170804736E-5	IMPLEMENTATION
// SignalFacade	WITHOUT_CLASSIFICATION	0.9990652123136763	WITHOUT_CLASSIFICATION	9.347876863236658E-4	IMPLEMENTATION
// this is the order in which MRI does these two tests	WITHOUT_CLASSIFICATION	0.9999747461150896	WITHOUT_CLASSIFICATION	2.5253884910355746E-5	IMPLEMENTATION
// this is the order in which MRI does these tests	WITHOUT_CLASSIFICATION	0.9999886128854181	WITHOUT_CLASSIFICATION	1.1387114581963522E-5	IMPLEMENTATION
// basically just forcing a TypeError here to match MRI	WITHOUT_CLASSIFICATION	0.99995446256666	WITHOUT_CLASSIFICATION	4.553743334011322E-5	IMPLEMENTATION
// not saving DFS instance, as it will only be used once (at most) per call	WITHOUT_CLASSIFICATION	0.9904338088764365	WITHOUT_CLASSIFICATION	0.009566191123563373	IMPLEMENTATION
// Args	WITHOUT_CLASSIFICATION	0.999970764908297	WITHOUT_CLASSIFICATION	2.9235091703083797E-5	IMPLEMENTATION
// static methods only	WITHOUT_CLASSIFICATION	0.9998726161685406	WITHOUT_CLASSIFICATION	1.2738383145930197E-4	IMPLEMENTATION
//System.err.println(" calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9991591199555704	WITHOUT_CLASSIFICATION	8.408800444296763E-4	IMPLEMENTATION
// MRI 1.8.6 behavior: null byte after '%' // leads to "%" string. Null byte in // other places, like "%5\0", leads to error.	WITHOUT_CLASSIFICATION	0.9992287059511799	WITHOUT_CLASSIFICATION	7.712940488201049E-4	IMPLEMENTATION
// last index (+1) accessed by next() // last index (+1) accessed by get()	WITHOUT_CLASSIFICATION	0.9983450101134224	WITHOUT_CLASSIFICATION	0.001654989886577595	IMPLEMENTATION
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly.	WITHOUT_CLASSIFICATION	0.9999583539000296	WITHOUT_CLASSIFICATION	4.1646099970391714E-5	IMPLEMENTATION
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly. Version for 1.9.	WITHOUT_CLASSIFICATION	0.9999831216675139	WITHOUT_CLASSIFICATION	1.6878332486091536E-5	IMPLEMENTATION
// MRI doesn't flag it as an error if width is given multiple // times as a number (but it does for *)	WITHOUT_CLASSIFICATION	0.9999993479943311	WITHOUT_CLASSIFICATION	6.520056689640762E-7	IMPLEMENTATION
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999453252194547	WITHOUT_CLASSIFICATION	5.467478054522393E-5	IMPLEMENTATION
// MRI 1.8.5-p12 doesn't support 1-char strings, but // YARV 0.4.1 does. I don't think it hurts to include // this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])	WITHOUT_CLASSIFICATION	0.9969996310879724	WITHOUT_CLASSIFICATION	0.0030003689120275206	IMPLEMENTATION
// 'd' and 'i' are the same	WITHOUT_CLASSIFICATION	0.999930734776695	WITHOUT_CLASSIFICATION	6.926522330493176E-5	IMPLEMENTATION
// 'u' with space or plus flags is same as 'd'	WITHOUT_CLASSIFICATION	0.9999623769884928	WITHOUT_CLASSIFICATION	3.7623011507190866E-5	IMPLEMENTATION
// We depart here from strict adherence to MRI code, as MRI // uses C-sprintf, in part, to format numeric output, while // we'll use Java's numeric formatting code (and our own).	WITHOUT_CLASSIFICATION	0.9999940903448785	WITHOUT_CLASSIFICATION	5.9096551214407185E-6	IMPLEMENTATION
// skip '-' in bytes, will add where appropriate	WITHOUT_CLASSIFICATION	0.9998261608757583	WITHOUT_CLASSIFICATION	1.738391242417437E-4	IMPLEMENTATION
// ..	WITHOUT_CLASSIFICATION	0.9999708135563147	WITHOUT_CLASSIFICATION	2.9186443685362892E-5	IMPLEMENTATION
// the 1 is for the stripped sign char	WITHOUT_CLASSIFICATION	0.9999476756054969	WITHOUT_CLASSIFICATION	5.232439450310319E-5	IMPLEMENTATION
// FIXME: what is correct 'recv' argument? // (this does produce the desired behavior)	WITHOUT_CLASSIFICATION	0.9983291349237815	WITHOUT_CLASSIFICATION	0.0016708650762185463	IMPLEMENTATION
// gotta have at least a zero...	WITHOUT_CLASSIFICATION	0.9999405894963874	WITHOUT_CLASSIFICATION	5.941050361256714E-5	IMPLEMENTATION
// OK, we now have the significand in digits[0...nDigits] // and the exponent in exponent.  We're ready to format.	WITHOUT_CLASSIFICATION	0.9998650808825045	WITHOUT_CLASSIFICATION	1.3491911749556116E-4	IMPLEMENTATION
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9999484951498313	WITHOUT_CLASSIFICATION	5.150485016883514E-5	IMPLEMENTATION
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9997980241022603	WITHOUT_CLASSIFICATION	2.0197589773977254E-4	IMPLEMENTATION
//System.err.println(" stringToLong/reading c=" + data[s]);	WITHOUT_CLASSIFICATION	0.9991591199555704	WITHOUT_CLASSIFICATION	8.408800444296763E-4	IMPLEMENTATION
//System.err.println(" stringToLong/converted c=" + c);	WITHOUT_CLASSIFICATION	0.9991897405798091	WITHOUT_CLASSIFICATION	8.102594201908492E-4	IMPLEMENTATION
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9999484951498313	WITHOUT_CLASSIFICATION	5.150485016883514E-5	IMPLEMENTATION
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9997980241022603	WITHOUT_CLASSIFICATION	2.0197589773977254E-4	IMPLEMENTATION
// precision for G/g includes integer digits	WITHOUT_CLASSIFICATION	0.9999337927553187	WITHOUT_CLASSIFICATION	6.620724468133385E-5	IMPLEMENTATION
// deal with length/width	WITHOUT_CLASSIFICATION	0.9995397209969393	WITHOUT_CLASSIFICATION	4.6027900306073067E-4	IMPLEMENTATION
// deal with length/width	WITHOUT_CLASSIFICATION	0.9995397209969393	WITHOUT_CLASSIFICATION	4.6027900306073067E-4	IMPLEMENTATION
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9996612626602932	WITHOUT_CLASSIFICATION	3.3873733970679344E-4	IMPLEMENTATION
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999050169309448	WITHOUT_CLASSIFICATION	9.49830690551255E-5	IMPLEMENTATION
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999882697685246	WITHOUT_CLASSIFICATION	1.1730231475255587E-5	IMPLEMENTATION
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999189567927719	WITHOUT_CLASSIFICATION	8.104320722814494E-5	IMPLEMENTATION
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9999551204563485	WITHOUT_CLASSIFICATION	4.487954365151619E-5	IMPLEMENTATION
// MRI behavior: In this mode // trailing zeroes are removed: // 1.500E+05 -> 1.5E+05 	WITHOUT_CLASSIFICATION	0.9999661398388321	WITHOUT_CLASSIFICATION	3.38601611679537E-5	IMPLEMENTATION
// '.' is printed	WITHOUT_CLASSIFICATION	0.9993541316367767	WITHOUT_CLASSIFICATION	6.458683632232456E-4	IMPLEMENTATION
// all precision numebers printed	WITHOUT_CLASSIFICATION	0.9997659106590739	WITHOUT_CLASSIFICATION	2.3408934092595702E-4	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9983158159115848	WITHOUT_CLASSIFICATION	0.0016841840884151912	IMPLEMENTATION
// '.'	WITHOUT_CLASSIFICATION	0.9999709514246233	WITHOUT_CLASSIFICATION	2.904857537677101E-5	IMPLEMENTATION
// decimal form, like (but not *just* like!) 'f'	WITHOUT_CLASSIFICATION	0.9537219014142346	WITHOUT_CLASSIFICATION	0.046278098585765336	IMPLEMENTATION
// digits array shifted, update all	WITHOUT_CLASSIFICATION	0.999914464430699	WITHOUT_CLASSIFICATION	8.553556930106564E-5	IMPLEMENTATION
// will have a trailing '.' // g fills trailing zeroes if #	WITHOUT_CLASSIFICATION	0.9999734333547837	WITHOUT_CLASSIFICATION	2.6566645216267424E-5	IMPLEMENTATION
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999292292429016	WITHOUT_CLASSIFICATION	7.077075709842878E-5	IMPLEMENTATION
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999292292429016	WITHOUT_CLASSIFICATION	7.077075709842878E-5	IMPLEMENTATION
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9998143289510347	WITHOUT_CLASSIFICATION	1.8567104896524713E-4	IMPLEMENTATION
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9998143289510347	WITHOUT_CLASSIFICATION	1.8567104896524713E-4	IMPLEMENTATION
// digits arr shifted, update all	WITHOUT_CLASSIFICATION	0.9999192967024024	WITHOUT_CLASSIFICATION	8.070329759750225E-5	IMPLEMENTATION
// (1|intlen).prec	WITHOUT_CLASSIFICATION	0.9990652123136763	WITHOUT_CLASSIFICATION	9.347876863236658E-4	IMPLEMENTATION
// (1|intlen)	WITHOUT_CLASSIFICATION	0.9990652123136763	WITHOUT_CLASSIFICATION	9.347876863236658E-4	IMPLEMENTATION
// will have a trailing '.'	WITHOUT_CLASSIFICATION	0.9998538549887453	WITHOUT_CLASSIFICATION	1.4614501125452228E-4	IMPLEMENTATION
// fill up the rest with zeroes	WITHOUT_CLASSIFICATION	0.9998672240373842	WITHOUT_CLASSIFICATION	1.3277596261586678E-4	IMPLEMENTATION
//System.err.println(" main/len=" + len);	WITHOUT_CLASSIFICATION	0.9991591199555704	WITHOUT_CLASSIFICATION	8.408800444296763E-4	IMPLEMENTATION
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999882697685246	WITHOUT_CLASSIFICATION	1.1730231475255587E-5	IMPLEMENTATION
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999189567927719	WITHOUT_CLASSIFICATION	8.104320722814494E-5	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9983158159115848	WITHOUT_CLASSIFICATION	0.0016841840884151912	IMPLEMENTATION
// '.'	WITHOUT_CLASSIFICATION	0.9999709514246233	WITHOUT_CLASSIFICATION	2.904857537677101E-5	IMPLEMENTATION
// equivalent to MRI case '\0':	WITHOUT_CLASSIFICATION	0.9988668274085912	WITHOUT_CLASSIFICATION	0.0011331725914087963	IMPLEMENTATION
// '.' and all precision digits printed	WITHOUT_CLASSIFICATION	0.9998737185589162	WITHOUT_CLASSIFICATION	1.2628144108385242E-4	IMPLEMENTATION
// \v	WITHOUT_CLASSIFICATION	0.999970764908297	WITHOUT_CLASSIFICATION	2.9235091703083797E-5	IMPLEMENTATION
// dangling '%' char	WITHOUT_CLASSIFICATION	0.9994597499805954	WITHOUT_CLASSIFICATION	5.402500194046252E-4	IMPLEMENTATION
// main while loop (offset < length)	WITHOUT_CLASSIFICATION	0.9998347537022574	WITHOUT_CLASSIFICATION	1.6524629774253876E-4	IMPLEMENTATION
// debugging code, keeping for now	WITHOUT_CLASSIFICATION	0.9999477123889469	WITHOUT_CLASSIFICATION	5.228761105319809E-5	IMPLEMENTATION
// MRI rounds up on nnn5nnn, but not nnn5 -- // except for when they do	WITHOUT_CLASSIFICATION	0.9998014002333506	WITHOUT_CLASSIFICATION	1.9859976664934688E-4	IMPLEMENTATION
// "%.0f" % 0.99	WITHOUT_CLASSIFICATION	0.9990811574179767	WITHOUT_CLASSIFICATION	9.18842582023425E-4	IMPLEMENTATION
// limit the length of negatives if possible (also faster)	WITHOUT_CLASSIFICATION	0.9999653983290624	WITHOUT_CLASSIFICATION	3.4601670937702914E-5	IMPLEMENTATION
// negative values	WITHOUT_CLASSIFICATION	0.9999664244625024	WITHOUT_CLASSIFICATION	3.35755374975608E-5	IMPLEMENTATION
// calculation for negatives when %u specified // for values >= Integer.MIN_VALUE * 2, MRI uses (the equivalent of) //   long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val // for smaller values, BigInteger math is required to conform to MRI's // result.	WITHOUT_CLASSIFICATION	0.9999888674622032	WITHOUT_CLASSIFICATION	1.1132537796731806E-5	IMPLEMENTATION
// relatively cheap test for 32-bit values	WITHOUT_CLASSIFICATION	0.9999991924295297	WITHOUT_CLASSIFICATION	8.075704702084618E-7	IMPLEMENTATION
// no such luck...	WITHOUT_CLASSIFICATION	0.9989844859202118	WITHOUT_CLASSIFICATION	0.001015514079788187	IMPLEMENTATION
// ok, now it gets expensive...	WITHOUT_CLASSIFICATION	0.9998061408879482	WITHOUT_CLASSIFICATION	1.9385911205170142E-4	IMPLEMENTATION
// go through negated powers of 32 until we find one small enough 	WITHOUT_CLASSIFICATION	0.9999074495045223	WITHOUT_CLASSIFICATION	9.255049547771993E-5	IMPLEMENTATION
// add to the corresponding positive power of 32 for the result. // meaningful? no. conformant? yes. I just write the code...	WITHOUT_CLASSIFICATION	0.9998654237062826	WITHOUT_CLASSIFICATION	1.3457629371731042E-4	IMPLEMENTATION
/* constant vector a */	WITHOUT_CLASSIFICATION	0.9999683221426607	WITHOUT_CLASSIFICATION	3.167785733932607E-5	IMPLEMENTATION
/* most significant w-r bits */	WITHOUT_CLASSIFICATION	0.9998841900033213	WITHOUT_CLASSIFICATION	1.1580999667867354E-4	IMPLEMENTATION
/* least significant r bits */	WITHOUT_CLASSIFICATION	0.9999716630865374	WITHOUT_CLASSIFICATION	2.833691346261295E-5	IMPLEMENTATION
// state[j] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9997878072663313	WITHOUT_CLASSIFICATION	2.121927336686601E-4	IMPLEMENTATION
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9997878072663313	WITHOUT_CLASSIFICATION	2.121927336686601E-4	IMPLEMENTATION
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9997878072663313	WITHOUT_CLASSIFICATION	2.121927336686601E-4	IMPLEMENTATION
/* MSB is 1; assuring non-zero initial array */	WITHOUT_CLASSIFICATION	0.9999756509463025	WITHOUT_CLASSIFICATION	2.434905369749924E-5	IMPLEMENTATION
/* Tempering */	WITHOUT_CLASSIFICATION	0.9998479724803608	WITHOUT_CLASSIFICATION	1.5202751963920946E-4	IMPLEMENTATION
// MRI behavior: Week values are monotonous. // So, weeks that effectively belong to previous year, // will get the value of 0, not 52 or 53, as in Java.	WITHOUT_CLASSIFICATION	0.9999985429609067	WITHOUT_CLASSIFICATION	1.4570390933215776E-6	IMPLEMENTATION
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9991591199555704	WITHOUT_CLASSIFICATION	8.408800444296763E-4	IMPLEMENTATION
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9991591199555704	WITHOUT_CLASSIFICATION	8.408800444296763E-4	IMPLEMENTATION
// \v	WITHOUT_CLASSIFICATION	0.999970764908297	WITHOUT_CLASSIFICATION	2.9235091703083797E-5	IMPLEMENTATION
//System.err.println("getSign()");	WITHOUT_CLASSIFICATION	0.9990655965962804	WITHOUT_CLASSIFICATION	9.344034037195148E-4	IMPLEMENTATION
//System.err.println(" getSign/" + sign);	WITHOUT_CLASSIFICATION	0.9991591199555704	WITHOUT_CLASSIFICATION	8.408800444296763E-4	IMPLEMENTATION
//System.err.println("figureOutBase()/base=" + base);	WITHOUT_CLASSIFICATION	0.9991591199555704	WITHOUT_CLASSIFICATION	8.408800444296763E-4	IMPLEMENTATION
//System.err.println(" figureOutBase/base=" + base);	WITHOUT_CLASSIFICATION	0.9991591199555704	WITHOUT_CLASSIFICATION	8.408800444296763E-4	IMPLEMENTATION
//System.err.println("calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9991591199555704	WITHOUT_CLASSIFICATION	8.408800444296763E-4	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9998920580249556	WITHOUT_CLASSIFICATION	1.0794197504441973E-4	IMPLEMENTATION
//System.err.println(" stringToLong=" + val);	WITHOUT_CLASSIFICATION	0.9991591199555704	WITHOUT_CLASSIFICATION	8.408800444296763E-4	IMPLEMENTATION
// no number	WITHOUT_CLASSIFICATION	0.999229404444014	WITHOUT_CLASSIFICATION	7.705955559860895E-4	IMPLEMENTATION
// trailing garbage	WITHOUT_CLASSIFICATION	0.9979084191497943	WITHOUT_CLASSIFICATION	0.002091580850205743	IMPLEMENTATION
//System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);	WITHOUT_CLASSIFICATION	0.9983612144033848	WITHOUT_CLASSIFICATION	0.001638785596615207	IMPLEMENTATION
// it was not found at all!	WITHOUT_CLASSIFICATION	0.999624070654935	WITHOUT_CLASSIFICATION	3.759293450650451E-4	IMPLEMENTATION
// can be overridden to be informed when objects are removed	WITHOUT_CLASSIFICATION	0.998166897057611	WITHOUT_CLASSIFICATION	0.001833102942388936	IMPLEMENTATION
// we reached the end of a list	WITHOUT_CLASSIFICATION	0.9997541144130389	WITHOUT_CLASSIFICATION	2.4588558696125146E-4	IMPLEMENTATION
// goto next bucket	WITHOUT_CLASSIFICATION	0.9963812408442562	WITHOUT_CLASSIFICATION	0.0036187591557438493	IMPLEMENTATION
// we reached the end	WITHOUT_CLASSIFICATION	0.9993248750303735	WITHOUT_CLASSIFICATION	6.751249696265367E-4	IMPLEMENTATION
// entry is the first element of this bucket	WITHOUT_CLASSIFICATION	0.9999076954636595	WITHOUT_CLASSIFICATION	9.230453634048967E-5	IMPLEMENTATION
// states	WITHOUT_CLASSIFICATION	0.9999278829720047	WITHOUT_CLASSIFICATION	7.211702799528319E-5	IMPLEMENTATION
// remove leading whitespace (includes _ for lax) // get sign, if any	WITHOUT_CLASSIFICATION	0.9999946240047595	WITHOUT_CLASSIFICATION	5.375995240486353E-6	IMPLEMENTATION
// optimistic pass - calculate value as digits are processed // digits - lax rules // decimal digits - lax rules // exponent sign/digits - lax rules // digits - strict rules // decimal digits - strict rules // exponent sign/digits - strict rules // complete calculation if possible	WITHOUT_CLASSIFICATION	0.9999923050999072	WITHOUT_CLASSIFICATION	7.694900092719035E-6	IMPLEMENTATION
// fields used for direct (optimistic) calculation // number of significant digits, updated as parsed // zeroes that may go to significand or exponent // offset of decimal pt from start (-1 -> no decimal) // significand, updated as parsed // exponent, updated as parsed	WITHOUT_CLASSIFICATION	0.9999997537750288	WITHOUT_CLASSIFICATION	2.4622497121056167E-7	IMPLEMENTATION
// drop through for sign	WITHOUT_CLASSIFICATION	0.9999415920928875	WITHOUT_CLASSIFICATION	5.84079071124445E-5	IMPLEMENTATION
// switch // will use this if we have to go back the slow way	WITHOUT_CLASSIFICATION	0.9995345159066508	WITHOUT_CLASSIFICATION	4.6548409334923525E-4	IMPLEMENTATION
// drop through for non-strict digits	WITHOUT_CLASSIFICATION	0.9999493283760664	WITHOUT_CLASSIFICATION	5.0671623933663426E-5	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9998593180011718	WITHOUT_CLASSIFICATION	1.4068199882812902E-4	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9997070125281194	WITHOUT_CLASSIFICATION	2.929874718805495E-4	IMPLEMENTATION
// no digits, go calc (will return +/- 0.0 for lax)	WITHOUT_CLASSIFICATION	0.9999636946737112	WITHOUT_CLASSIFICATION	3.630532628889956E-5	IMPLEMENTATION
// ignore leading zeroes	WITHOUT_CLASSIFICATION	0.9997441971889239	WITHOUT_CLASSIFICATION	2.558028110760447E-4	IMPLEMENTATION
// just save a count of zeroes for now; if no digit // ends up following them, they'll be applied to the // exponent rather than the significand (and our max // length for optimistic calc).	WITHOUT_CLASSIFICATION	0.9999999631739507	WITHOUT_CLASSIFICATION	3.682604926706434E-8	IMPLEMENTATION
// ok, got a non-zero, have to own up to our horded zeroes	WITHOUT_CLASSIFICATION	0.9999484397256716	WITHOUT_CLASSIFICATION	5.1560274328446326E-5	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9998516260966039	WITHOUT_CLASSIFICATION	1.4837390339602738E-4	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9998516260966039	WITHOUT_CLASSIFICATION	1.4837390339602738E-4	IMPLEMENTATION
// oh, well, it was worth a try. go let // Double/FloatingDecimal handle it 	WITHOUT_CLASSIFICATION	0.9999575452560826	WITHOUT_CLASSIFICATION	4.2454743917482076E-5	IMPLEMENTATION
// ignore // switch	WITHOUT_CLASSIFICATION	0.9989100302783263	WITHOUT_CLASSIFICATION	0.0010899697216738386	IMPLEMENTATION
// ignore // switch	WITHOUT_CLASSIFICATION	0.9989100302783263	WITHOUT_CLASSIFICATION	0.0010899697216738386	IMPLEMENTATION
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999403218719175	WITHOUT_CLASSIFICATION	5.967812808262706E-5	IMPLEMENTATION
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999403218719175	WITHOUT_CLASSIFICATION	5.967812808262706E-5	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9996327556684473	WITHOUT_CLASSIFICATION	3.672443315526623E-4	IMPLEMENTATION
// first non_underscore char must be digit	WITHOUT_CLASSIFICATION	0.9998153444858353	WITHOUT_CLASSIFICATION	1.8465551416462143E-4	IMPLEMENTATION
// no dec digits, end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999323705544135	WITHOUT_CLASSIFICATION	6.762944558648518E-5	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.9998731574584946	WITHOUT_CLASSIFICATION	1.2684254150546062E-4	IMPLEMENTATION
// difficult case, send to Double/FloatingDecimal	WITHOUT_CLASSIFICATION	0.999811374595081	WITHOUT_CLASSIFICATION	1.8862540491917137E-4	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.99996496030933	WITHOUT_CLASSIFICATION	3.5039690669922656E-5	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.99996496030933	WITHOUT_CLASSIFICATION	3.5039690669922656E-5	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9998593180011718	WITHOUT_CLASSIFICATION	1.4068199882812902E-4	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9998593180011718	WITHOUT_CLASSIFICATION	1.4068199882812902E-4	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9998593180011718	WITHOUT_CLASSIFICATION	1.4068199882812902E-4	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9997070125281194	WITHOUT_CLASSIFICATION	2.929874718805495E-4	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9998516260966039	WITHOUT_CLASSIFICATION	1.4837390339602738E-4	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9998516260966039	WITHOUT_CLASSIFICATION	1.4837390339602738E-4	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9998516260966039	WITHOUT_CLASSIFICATION	1.4837390339602738E-4	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9996327556684473	WITHOUT_CLASSIFICATION	3.672443315526623E-4	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9996327556684473	WITHOUT_CLASSIFICATION	3.672443315526623E-4	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9996327556684473	WITHOUT_CLASSIFICATION	3.672443315526623E-4	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.9998731574584946	WITHOUT_CLASSIFICATION	1.2684254150546062E-4	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.9998731574584946	WITHOUT_CLASSIFICATION	1.2684254150546062E-4	IMPLEMENTATION
// lax (str.to_f) allows underscores between e/E and sign	WITHOUT_CLASSIFICATION	0.9998271586328675	WITHOUT_CLASSIFICATION	1.728413671324959E-4	IMPLEMENTATION
// switch // for // no exponent, so drop through for calculation	WITHOUT_CLASSIFICATION	0.9999644076045994	WITHOUT_CLASSIFICATION	3.559239540064963E-5	IMPLEMENTATION
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9994009610000116	WITHOUT_CLASSIFICATION	5.990389999883569E-4	IMPLEMENTATION
// TODO: it's not clear to me why, in FloatingDecimal, the // "slop" calculation performed above for positive exponents // isn't used for negative exponents as well. Will find out...	WITHOUT_CLASSIFICATION	0.8833678316350849	IMPLEMENTATION	0.11663216836491516	WITHOUT_CLASSIFICATION
// no digits, error	WITHOUT_CLASSIFICATION	0.9985018453038651	WITHOUT_CLASSIFICATION	0.0014981546961349585	IMPLEMENTATION
// too big for us	WITHOUT_CLASSIFICATION	0.9996117062230834	WITHOUT_CLASSIFICATION	3.8829377691657134E-4	IMPLEMENTATION
// too big for us	WITHOUT_CLASSIFICATION	0.9996117062230834	WITHOUT_CLASSIFICATION	3.8829377691657134E-4	IMPLEMENTATION
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999689080956795	WITHOUT_CLASSIFICATION	3.109190432049992E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9998920580249556	WITHOUT_CLASSIFICATION	1.0794197504441973E-4	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9998920580249556	WITHOUT_CLASSIFICATION	1.0794197504441973E-4	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9998920580249556	WITHOUT_CLASSIFICATION	1.0794197504441973E-4	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9998920580249556	WITHOUT_CLASSIFICATION	1.0794197504441973E-4	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9998920580249556	WITHOUT_CLASSIFICATION	1.0794197504441973E-4	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9998496279229384	WITHOUT_CLASSIFICATION	1.5037207706159307E-4	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9998496279229384	WITHOUT_CLASSIFICATION	1.5037207706159307E-4	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9998496279229384	WITHOUT_CLASSIFICATION	1.5037207706159307E-4	IMPLEMENTATION
// first char must be digit	WITHOUT_CLASSIFICATION	0.9998452150503289	WITHOUT_CLASSIFICATION	1.5478494967117323E-4	IMPLEMENTATION
// no dec digits after '.', error for strict	WITHOUT_CLASSIFICATION	0.9998914823220119	WITHOUT_CLASSIFICATION	1.0851767798817507E-4	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9997070125281194	WITHOUT_CLASSIFICATION	2.929874718805495E-4	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9996327556684473	WITHOUT_CLASSIFICATION	3.672443315526623E-4	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9996327556684473	WITHOUT_CLASSIFICATION	3.672443315526623E-4	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9998920580249556	WITHOUT_CLASSIFICATION	1.0794197504441973E-4	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9998920580249556	WITHOUT_CLASSIFICATION	1.0794197504441973E-4	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9998496279229384	WITHOUT_CLASSIFICATION	1.5037207706159307E-4	IMPLEMENTATION
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999689080956795	WITHOUT_CLASSIFICATION	3.109190432049992E-5	IMPLEMENTATION
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9998242061204038	WITHOUT_CLASSIFICATION	1.757938795960998E-4	IMPLEMENTATION
// switch //while	WITHOUT_CLASSIFICATION	0.999105055272883	WITHOUT_CLASSIFICATION	8.949447271169717E-4	IMPLEMENTATION
/*     * All the positive powers of 10 that can be     * represented exactly in double/float.     * (From sun.misc.FloatingDecimal.java)     */	WITHOUT_CLASSIFICATION	0.9999962477892184	WITHOUT_CLASSIFICATION	3.7522107816351035E-6	IMPLEMENTATION
// Zlib behavior: negative win_bits means no header and no checksum.	WITHOUT_CLASSIFICATION	0.9998582293538946	WITHOUT_CLASSIFICATION	1.4177064610547603E-4	IMPLEMENTATION
// rb_enc_mbclen	WITHOUT_CLASSIFICATION	0.9990652123136763	WITHOUT_CLASSIFICATION	9.347876863236658E-4	IMPLEMENTATION
// rb_enc_precise_mbclen	WITHOUT_CLASSIFICATION	0.9997877334300682	WITHOUT_CLASSIFICATION	2.1226656993181153E-4	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9965570583364438	WITHOUT_CLASSIFICATION	0.003442941663556206	IMPLEMENTATION
// arg cannot be negative	WITHOUT_CLASSIFICATION	0.9999669939939032	WITHOUT_CLASSIFICATION	3.300600609673308E-5	IMPLEMENTATION
// NoFunctionalitySignalFacade	WITHOUT_CLASSIFICATION	0.9997877334300682	WITHOUT_CLASSIFICATION	2.1226656993181153E-4	IMPLEMENTATION
// Change visibility so others can see it	WITHOUT_CLASSIFICATION	0.999897363431841	WITHOUT_CLASSIFICATION	1.0263656815908376E-4	IMPLEMENTATION
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9994635873112743	WITHOUT_CLASSIFICATION	5.364126887256881E-4	IMPLEMENTATION
// strip off "_dot_rb" for .rb files	WITHOUT_CLASSIFICATION	0.9999762114098573	WITHOUT_CLASSIFICATION	2.3788590142706966E-5	IMPLEMENTATION
// Makes sure the key is not already in the hashtable.	WITHOUT_CLASSIFICATION	0.9998746663201912	WITHOUT_CLASSIFICATION	1.2533367980880993E-4	IMPLEMENTATION
// Rehash the table if the threshold is exceeded	WITHOUT_CLASSIFICATION	0.9999804184597366	WITHOUT_CLASSIFICATION	1.958154026332956E-5	IMPLEMENTATION
// Creates the new entry.	WITHOUT_CLASSIFICATION	0.9998053828210598	WITHOUT_CLASSIFICATION	1.9461717894018164E-4	IMPLEMENTATION
// next entry to return // current slot // current entry	WITHOUT_CLASSIFICATION	0.9959908677240822	WITHOUT_CLASSIFICATION	0.004009132275917815	IMPLEMENTATION
// advance to first entry	WITHOUT_CLASSIFICATION	0.9996500421257405	WITHOUT_CLASSIFICATION	3.4995787425946145E-4	IMPLEMENTATION
// The reason why we need the stream is to be able to invoke available() on it. // STDIN in Java is non-interruptible, non-selectable, and attempt to read // on such stream might lead to thread being blocked without *any* way to unblock it. // That's where available() comes it, so at least we could check whether // anything is available to be read without blocking.	WITHOUT_CLASSIFICATION	0.9999912560851387	WITHOUT_CLASSIFICATION	8.743914861286092E-6	IMPLEMENTATION
/*package-protected*/	WITHOUT_CLASSIFICATION	0.999216654151653	WITHOUT_CLASSIFICATION	7.833458483471001E-4	IMPLEMENTATION
// raw file URL, just open directly	WITHOUT_CLASSIFICATION	0.9999466372047997	WITHOUT_CLASSIFICATION	5.3362795200214075E-5	IMPLEMENTATION
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9984071702521282	WITHOUT_CLASSIFICATION	0.0015928297478717654	IMPLEMENTATION
// if refcount is at or below zero, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999993783702439	WITHOUT_CLASSIFICATION	6.216297561332758E-7	IMPLEMENTATION
// if channel is already closed, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999983027990167	WITHOUT_CLASSIFICATION	1.6972009832860203E-6	IMPLEMENTATION
// otherwise decrement and possibly close as normal	WITHOUT_CLASSIFICATION	0.9991368569366839	WITHOUT_CLASSIFICATION	8.631430633160796E-4	IMPLEMENTATION
// r/w buffer // are we reading or writing?	WITHOUT_CLASSIFICATION	0.9997873592847892	WITHOUT_CLASSIFICATION	2.1264071521073254E-4	IMPLEMENTATION
// this constructor is used by fdopen, so we don't increment descriptor ref count	WITHOUT_CLASSIFICATION	0.9998637245910115	WITHOUT_CLASSIFICATION	1.3627540898847264E-4	IMPLEMENTATION
// unread back	WITHOUT_CLASSIFICATION	0.9981912355268564	WITHOUT_CLASSIFICATION	0.0018087644731435099	IMPLEMENTATION
// iterate over remainder of buffer until we find a match	WITHOUT_CLASSIFICATION	0.9999862177436268	WITHOUT_CLASSIFICATION	1.3782256373261173E-5	IMPLEMENTATION
// terminate and advance buffer when we find our char	WITHOUT_CLASSIFICATION	0.9999154247968776	WITHOUT_CLASSIFICATION	8.457520312241966E-5	IMPLEMENTATION
// no match, append remainder of buffer and continue with next block	WITHOUT_CLASSIFICATION	0.9991673713463596	WITHOUT_CLASSIFICATION	8.326286536404824E-4	IMPLEMENTATION
// found a match above, check if remaining separator characters match, appending as we go	WITHOUT_CLASSIFICATION	0.9999929128786597	WITHOUT_CLASSIFICATION	7.08712134023724E-6	IMPLEMENTATION
// // Check file size - special files in /proc have zero size and need to be // handled by the generic read path. //	WITHOUT_CLASSIFICATION	0.9999825791159391	WITHOUT_CLASSIFICATION	1.7420884060921748E-5	IMPLEMENTATION
// // Copy any buffered data (including ungetc byte) //	WITHOUT_CLASSIFICATION	0.9999315700181316	WITHOUT_CLASSIFICATION	6.84299818684508E-5	IMPLEMENTATION
// // Now read unbuffered directly from the file //	WITHOUT_CLASSIFICATION	0.9999395215938928	WITHOUT_CLASSIFICATION	6.047840610716657E-5	IMPLEMENTATION
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9998242061204038	WITHOUT_CLASSIFICATION	1.757938795960998E-4	IMPLEMENTATION
// // Need to clamp source (buffer) size to avoid overrun //	WITHOUT_CLASSIFICATION	0.9995750340515785	WITHOUT_CLASSIFICATION	4.249659484214464E-4	IMPLEMENTATION
// not closing from finalize	WITHOUT_CLASSIFICATION	0.9992412406944208	WITHOUT_CLASSIFICATION	7.587593055792186E-4	IMPLEMENTATION
// clear runtime so it doesn't get stuck in memory (JRUBY-2933)	WITHOUT_CLASSIFICATION	0.999994451316434	WITHOUT_CLASSIFICATION	5.548683565940065E-6	IMPLEMENTATION
// silence	WITHOUT_CLASSIFICATION	0.999970764908297	WITHOUT_CLASSIFICATION	2.9235091703083797E-5	IMPLEMENTATION
// silence	WITHOUT_CLASSIFICATION	0.999970764908297	WITHOUT_CLASSIFICATION	2.9235091703083797E-5	IMPLEMENTATION
// Don't bother	WITHOUT_CLASSIFICATION	0.9970780139513384	WITHOUT_CLASSIFICATION	0.0029219860486614908	IMPLEMENTATION
// Don't bother	WITHOUT_CLASSIFICATION	0.9970780139513384	WITHOUT_CLASSIFICATION	0.0029219860486614908	IMPLEMENTATION
// For Sockets, only write as much as will fit.	WITHOUT_CLASSIFICATION	0.999604657400531	WITHOUT_CLASSIFICATION	3.953425994689765E-4	IMPLEMENTATION
// Correct position for read / write buffering (we could invalidate, but expensive)	WITHOUT_CLASSIFICATION	0.999998273739587	WITHOUT_CLASSIFICATION	1.7262604129590982E-6	IMPLEMENTATION
// Adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999720328608425	WITHOUT_CLASSIFICATION	2.7967139157592965E-5	IMPLEMENTATION
// for SEEK_CUR, need to adjust for buffered data	WITHOUT_CLASSIFICATION	0.9998672286637915	WITHOUT_CLASSIFICATION	1.3277133620849906E-4	IMPLEMENTATION
// libc flushes writes on any read from the actual file, so we flush here	WITHOUT_CLASSIFICATION	0.9999613309904073	WITHOUT_CLASSIFICATION	3.866900959271181E-5	IMPLEMENTATION
// we have read ahead, and need to back up	WITHOUT_CLASSIFICATION	0.9993660841860897	WITHOUT_CLASSIFICATION	6.3391581391024E-4	IMPLEMENTATION
// 128K seems to be the minimum at which the stat+seek is faster than reallocation	WITHOUT_CLASSIFICATION	0.9999901016440704	WITHOUT_CLASSIFICATION	9.898355929567352E-6	IMPLEMENTATION
// // limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations //	WITHOUT_CLASSIFICATION	0.9999103030492835	WITHOUT_CLASSIFICATION	8.969695071645276E-5	IMPLEMENTATION
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9972062524669238	WITHOUT_CLASSIFICATION	0.0027937475330760886	IMPLEMENTATION
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999852827917601	WITHOUT_CLASSIFICATION	1.4717208239745227E-5	IMPLEMENTATION
// // Avoid double-copying for reads that are larger than the buffer size //	WITHOUT_CLASSIFICATION	0.9999547240435943	WITHOUT_CLASSIFICATION	4.527595640575841E-5	IMPLEMENTATION
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999178871854578	WITHOUT_CLASSIFICATION	8.211281454220287E-5	IMPLEMENTATION
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999178871854578	WITHOUT_CLASSIFICATION	8.211281454220287E-5	IMPLEMENTATION
// // Avoid double-copying for reads that are larger than the buffer size, or // the destination is a direct buffer. //	WITHOUT_CLASSIFICATION	0.9999141470459457	WITHOUT_CLASSIFICATION	8.585295405426649E-5	IMPLEMENTATION
// // We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating // a huge temporary native buffer, when doing reads into a heap buffer // If the dst buffer is direct, then no need to limit. //	WITHOUT_CLASSIFICATION	0.9998949074524086	WITHOUT_CLASSIFICATION	1.0509254759138977E-4	IMPLEMENTATION
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999165963566173	WITHOUT_CLASSIFICATION	8.340364338271395E-5	IMPLEMENTATION
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999165963566173	WITHOUT_CLASSIFICATION	8.340364338271395E-5	IMPLEMENTATION
// Doesn't fit in buffer. Write immediately. // ensure nothing left to write	WITHOUT_CLASSIFICATION	0.9999977264995352	WITHOUT_CLASSIFICATION	2.2735004648088143E-6	IMPLEMENTATION
// truncate can't lengthen files, so we save position, seek/write, and go back	WITHOUT_CLASSIFICATION	0.9999560583125886	WITHOUT_CLASSIFICATION	4.39416874113141E-5	IMPLEMENTATION
// how far ahead we are when reading	WITHOUT_CLASSIFICATION	0.9983306317317396	WITHOUT_CLASSIFICATION	0.00166936826826036	IMPLEMENTATION
// if the read buffer is ahead, back up	WITHOUT_CLASSIFICATION	0.9999933889515649	WITHOUT_CLASSIFICATION	6.611048435176123E-6	IMPLEMENTATION
// close without removing from finalizers	WITHOUT_CLASSIFICATION	0.9999666886014926	WITHOUT_CLASSIFICATION	3.3311398507441984E-5	IMPLEMENTATION
// putting a bit back, so we're not at EOF anymore	WITHOUT_CLASSIFICATION	0.9998669842921467	WITHOUT_CLASSIFICATION	1.3301570785330768E-4	IMPLEMENTATION
// save the ungot	WITHOUT_CLASSIFICATION	0.999667722977345	WITHOUT_CLASSIFICATION	3.322770226550668E-4	IMPLEMENTATION
// otherwise, we try an unbuffered read to get whatever's available	WITHOUT_CLASSIFICATION	0.9999837966667412	WITHOUT_CLASSIFICATION	1.6203333258757874E-5	IMPLEMENTATION
// ignore this; select() will set the correct mode when it is finished	WITHOUT_CLASSIFICATION	0.9997646145091399	WITHOUT_CLASSIFICATION	2.3538549086016242E-4	IMPLEMENTATION
// flush first	WITHOUT_CLASSIFICATION	0.9988416482226403	WITHOUT_CLASSIFICATION	0.001158351777359672	IMPLEMENTATION
// // Wake up any channels that became unblocked //	WITHOUT_CLASSIFICATION	0.9997333004200945	WITHOUT_CLASSIFICATION	2.666995799055235E-4	IMPLEMENTATION
// // Register any new blocking I/O requests //	WITHOUT_CLASSIFICATION	0.9988893720984563	WITHOUT_CLASSIFICATION	0.0011106279015436905	IMPLEMENTATION
// Now clear out any previously selected channels	WITHOUT_CLASSIFICATION	0.999830627992185	WITHOUT_CLASSIFICATION	1.6937200781501626E-4	IMPLEMENTATION
// // Wait for I/O on any channel //	WITHOUT_CLASSIFICATION	0.9998290422177507	WITHOUT_CLASSIFICATION	1.7095778224937732E-4	IMPLEMENTATION
// Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'	WITHOUT_CLASSIFICATION	0.9983192744671835	WITHOUT_CLASSIFICATION	0.0016807255328165132	IMPLEMENTATION
// Java requires "w" for creating a file that does not exist	WITHOUT_CLASSIFICATION	0.9993309325982478	WITHOUT_CLASSIFICATION	6.690674017520937E-4	IMPLEMENTATION
// seek to force underlying buffer to flush	WITHOUT_CLASSIFICATION	0.9995553928293708	WITHOUT_CLASSIFICATION	4.446071706291811E-4	IMPLEMENTATION
// seek to force read buffer to invalidate	WITHOUT_CLASSIFICATION	0.9998474795743251	WITHOUT_CLASSIFICATION	1.5252042567488348E-4	IMPLEMENTATION
/*        result = eval("arr = Array::['c', 200]; p arr");        assertEquals("[\"c\", 200]", result);        result = eval("arr = Array.['d', 200]; p arr");        assertEquals("[\"d\", 200]", result);        */	WITHOUT_CLASSIFICATION	0.999945850746463	WITHOUT_CLASSIFICATION	5.4149253536972313E-5	IMPLEMENTATION
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9995817058650485	WITHOUT_CLASSIFICATION	4.1829413495161747E-4	IMPLEMENTATION
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.5701708817281751	IMPLEMENTATION	0.42982911827182485	WITHOUT_CLASSIFICATION
// make sure the pipe stream is set to null	WITHOUT_CLASSIFICATION	0.9997075484112163	WITHOUT_CLASSIFICATION	2.924515887836795E-4	IMPLEMENTATION
// make sure the main stream is set to null	WITHOUT_CLASSIFICATION	0.9994479895845214	WITHOUT_CLASSIFICATION	5.520104154786092E-4	IMPLEMENTATION
// first try our custom-generated Unsafe	WITHOUT_CLASSIFICATION	0.9998049928848245	WITHOUT_CLASSIFICATION	1.950071151754511E-4	IMPLEMENTATION
// then try Sun's Unsafe	WITHOUT_CLASSIFICATION	0.9997717181612652	WITHOUT_CLASSIFICATION	2.282818387348364E-4	IMPLEMENTATION
// if we get here, the class and field exist; construct our Unsafe impl // that calls it directly	WITHOUT_CLASSIFICATION	0.9999846833037518	WITHOUT_CLASSIFICATION	1.5316696248239222E-5	IMPLEMENTATION
// else leave it null	WITHOUT_CLASSIFICATION	0.9995649702579983	WITHOUT_CLASSIFICATION	4.35029742001708E-4	IMPLEMENTATION
// TypeMatcher	WITHOUT_CLASSIFICATION	0.9990652123136763	WITHOUT_CLASSIFICATION	9.347876863236658E-4	IMPLEMENTATION
// This is now needed, since module Java // isn't in by default	WITHOUT_CLASSIFICATION	0.9999977739053623	WITHOUT_CLASSIFICATION	2.2260946376716964E-6	IMPLEMENTATION
// Iterate over the RubyHash keySet, simultaneously iterating over the values()	WITHOUT_CLASSIFICATION	0.9998308518869324	WITHOUT_CLASSIFICATION	1.6914811306751747E-4	IMPLEMENTATION
// Get the value from the map via the key	WITHOUT_CLASSIFICATION	0.9999835549669361	WITHOUT_CLASSIFICATION	1.6445033063804962E-5	IMPLEMENTATION
// Get the value from the map via the values iterator	WITHOUT_CLASSIFICATION	0.9999991909475284	WITHOUT_CLASSIFICATION	8.090524716581296E-7	IMPLEMENTATION
// Check the 2 values obtained via different means	WITHOUT_CLASSIFICATION	0.9999881050631071	WITHOUT_CLASSIFICATION	1.1894936892943543E-5	IMPLEMENTATION
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999956032008913	WITHOUT_CLASSIFICATION	4.3967991086805526E-6	IMPLEMENTATION
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999956032008913	WITHOUT_CLASSIFICATION	4.3967991086805526E-6	IMPLEMENTATION
// Check the entry.setValue values come back out ok	WITHOUT_CLASSIFICATION	0.9999424615258505	WITHOUT_CLASSIFICATION	5.753847414944368E-5	IMPLEMENTATION
// If we're running from within an IDE we may not have // the .rb files in our classpath. Try to find them // in the filesystem instead.	WITHOUT_CLASSIFICATION	0.9999729842144081	WITHOUT_CLASSIFICATION	2.7015785591879185E-5	IMPLEMENTATION
//assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); //assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));	WITHOUT_CLASSIFICATION	0.9982645143180681	WITHOUT_CLASSIFICATION	0.0017354856819319095	IMPLEMENTATION
// Init	WITHOUT_CLASSIFICATION	0.999970795243706	WITHOUT_CLASSIFICATION	2.9204756294020374E-5	IMPLEMENTATION
// Block	WITHOUT_CLASSIFICATION	0.9999707637831345	WITHOUT_CLASSIFICATION	2.9236216865490913E-5	IMPLEMENTATION
// Copy constructor	WITHOUT_CLASSIFICATION	0.9993685245776686	WITHOUT_CLASSIFICATION	6.314754223314634E-4	IMPLEMENTATION
// presumably this require should fail	WITHOUT_CLASSIFICATION	0.9950831602701212	WITHOUT_CLASSIFICATION	0.004916839729878703	IMPLEMENTATION
// JRUBY-646 // presumably this require should fail	WITHOUT_CLASSIFICATION	0.9950831602701212	WITHOUT_CLASSIFICATION	0.004916839729878703	IMPLEMENTATION
// Test that requiring a normal Java class raises an error (JRUBY-3214	WITHOUT_CLASSIFICATION	0.9999670927286031	WITHOUT_CLASSIFICATION	3.29072713969219E-5	IMPLEMENTATION
// ok	WITHOUT_CLASSIFICATION	0.9999417619240331	WITHOUT_CLASSIFICATION	5.8238075967020266E-5	IMPLEMENTATION
// Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods // from Ruby so they are not really unused).	WITHOUT_CLASSIFICATION	0.9999940567076627	WITHOUT_CLASSIFICATION	5.943292337162036E-6	IMPLEMENTATION
//load should work several times in a row	WITHOUT_CLASSIFICATION	0.9999145879697323	WITHOUT_CLASSIFICATION	8.541203026761716E-5	IMPLEMENTATION
//reset the $loadTestvar	WITHOUT_CLASSIFICATION	0.9991664703244636	WITHOUT_CLASSIFICATION	8.335296755364069E-4	IMPLEMENTATION
//call throwException via JRuby	WITHOUT_CLASSIFICATION	0.9991733795925056	WITHOUT_CLASSIFICATION	8.266204074943132E-4	IMPLEMENTATION
// Notify the calling thread that we're about to go to sleep the first time	WITHOUT_CLASSIFICATION	0.9999976002312572	WITHOUT_CLASSIFICATION	2.399768742735989E-6	IMPLEMENTATION
// wait for the go signal	WITHOUT_CLASSIFICATION	0.999965035518836	WITHOUT_CLASSIFICATION	3.4964481164089955E-5	IMPLEMENTATION
// run ten separate calls into Ruby, with delay and explicit GC	WITHOUT_CLASSIFICATION	0.999874560516256	WITHOUT_CLASSIFICATION	1.2543948374386355E-4	IMPLEMENTATION
// wait until thread has initialized	WITHOUT_CLASSIFICATION	0.9999332299570847	WITHOUT_CLASSIFICATION	6.677004291533376E-5	IMPLEMENTATION
// notify thread to proceed	WITHOUT_CLASSIFICATION	0.9997675511520455	WITHOUT_CLASSIFICATION	2.3244884795453586E-4	IMPLEMENTATION
// wait until thread has completed	WITHOUT_CLASSIFICATION	0.9999255807128122	WITHOUT_CLASSIFICATION	7.441928718766968E-5	IMPLEMENTATION
// we do preand post load outside the "body" versions to pre-prepare // and pre-push the dynamic scope we need for lastline	WITHOUT_CLASSIFICATION	0.9987889032921569	WITHOUT_CLASSIFICATION	0.0012110967078431188	IMPLEMENTATION
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999929895121219	WITHOUT_CLASSIFICATION	7.010487878152566E-6	IMPLEMENTATION
// MRI behavior: raise ArgumentError for 'unknown command' before // checking number of args.	WITHOUT_CLASSIFICATION	0.9999788089408052	WITHOUT_CLASSIFICATION	2.1191059194942518E-5	IMPLEMENTATION
// if any exceptions were raised, we fail	WITHOUT_CLASSIFICATION	0.9999250196970584	WITHOUT_CLASSIFICATION	7.498030294152801E-5	IMPLEMENTATION
// there should only be one more thread in thread group than before we started	WITHOUT_CLASSIFICATION	0.9995360451227757	WITHOUT_CLASSIFICATION	4.6395487722431395E-4	IMPLEMENTATION
// construct a new cache with thread's classloader and no limit	WITHOUT_CLASSIFICATION	0.9998386794620051	WITHOUT_CLASSIFICATION	1.6132053799485307E-4	IMPLEMENTATION
//        Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); //        Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();	WITHOUT_CLASSIFICATION	0.9997670429530036	WITHOUT_CLASSIFICATION	2.3295704699650177E-4	IMPLEMENTATION
//        assertSame(script1, script2);	WITHOUT_CLASSIFICATION	0.9998279270919643	WITHOUT_CLASSIFICATION	1.7207290803563613E-4	IMPLEMENTATION
// void methods should work	WITHOUT_CLASSIFICATION	0.9997582587199043	WITHOUT_CLASSIFICATION	2.4174128009576685E-4	IMPLEMENTATION
// methods with required = 4 or higher should bind and be callable using reflection // JRUBY-3649	WITHOUT_CLASSIFICATION	0.9997382646633409	WITHOUT_CLASSIFICATION	2.6173533665906486E-4	IMPLEMENTATION
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999607348178181	WITHOUT_CLASSIFICATION	3.926518218196351E-5	IMPLEMENTATION
// Ensure we have a new interpreter for each test. Previous we were using the //  same interpreter which caused problems as soon as one test failed.	WITHOUT_CLASSIFICATION	0.9999887952484415	WITHOUT_CLASSIFICATION	1.1204751558490843E-5	IMPLEMENTATION
// Without a flush Ant will miss some of our output	WITHOUT_CLASSIFICATION	0.999948218577231	WITHOUT_CLASSIFICATION	5.178142276899876E-5	IMPLEMENTATION
// assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());	WITHOUT_CLASSIFICATION	0.9997467728107063	WITHOUT_CLASSIFICATION	2.5322718929362756E-4	IMPLEMENTATION
//        int n = 10;	WITHOUT_CLASSIFICATION	0.9998582505542405	WITHOUT_CLASSIFICATION	1.4174944575943873E-4	IMPLEMENTATION
// there might be more test classes in a single file, so we iterate over them	WITHOUT_CLASSIFICATION	0.9999983800698481	WITHOUT_CLASSIFICATION	1.6199301519599212E-6	IMPLEMENTATION
//No ClassCastException!	WITHOUT_CLASSIFICATION	0.9992708245704505	WITHOUT_CLASSIFICATION	7.291754295495235E-4	IMPLEMENTATION
// value equality	WITHOUT_CLASSIFICATION	0.999430126069942	WITHOUT_CLASSIFICATION	5.698739300580339E-4	IMPLEMENTATION
// identity equality	WITHOUT_CLASSIFICATION	0.9991768794748124	WITHOUT_CLASSIFICATION	8.231205251875919E-4	IMPLEMENTATION
// bench straight-up integer fib(30)	WITHOUT_CLASSIFICATION	0.9997513906707398	WITHOUT_CLASSIFICATION	2.4860932926021914E-4	IMPLEMENTATION
// bench Integer fib	WITHOUT_CLASSIFICATION	0.9990652123136763	WITHOUT_CLASSIFICATION	9.347876863236658E-4	IMPLEMENTATION
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9997877334300682	WITHOUT_CLASSIFICATION	2.1226656993181153E-4	IMPLEMENTATION
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9997877334300682	WITHOUT_CLASSIFICATION	2.1226656993181153E-4	IMPLEMENTATION
// bench fixnum-boxed fib	WITHOUT_CLASSIFICATION	0.9997877334300682	WITHOUT_CLASSIFICATION	2.1226656993181153E-4	IMPLEMENTATION
// bench straight-up long fib(30)	WITHOUT_CLASSIFICATION	0.9997809271464629	WITHOUT_CLASSIFICATION	2.1907285353704986E-4	IMPLEMENTATION
// bench Long fib	WITHOUT_CLASSIFICATION	0.9990657116724626	WITHOUT_CLASSIFICATION	9.342883275374375E-4	IMPLEMENTATION
// skip this one, probably no 'ls' (windows)	WITHOUT_CLASSIFICATION	0.9987810591871232	WITHOUT_CLASSIFICATION	0.0012189408128767817	IMPLEMENTATION
// start off with a neutral parent	WITHOUT_CLASSIFICATION	0.999900982109841	WITHOUT_CLASSIFICATION	9.901789015895487E-5	IMPLEMENTATION
/*            public class Hello {                public static String getMessage() {                    return ".....";                }            }            */	WITHOUT_CLASSIFICATION	0.9999920692357388	WITHOUT_CLASSIFICATION	7.930764261256644E-6	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9996802362611005	WITHOUT_CLASSIFICATION	3.1976373889949875E-4	IMPLEMENTATION
// Note: We can't use file.exists() to check whether the symlink // exists or not, because that method returns false for existing // but broken symlink. So, we try without the existence check, // but in the try-catch block. // MRI behavior: symlink? on broken symlink should return true.	WITHOUT_CLASSIFICATION	0.9999069957577215	WITHOUT_CLASSIFICATION	9.300424227850376E-5	IMPLEMENTATION
// We are creating a new IO object that shares the same // IOHandler (and fileno).	WITHOUT_CLASSIFICATION	0.9999546280938854	WITHOUT_CLASSIFICATION	4.537190611469658E-5	IMPLEMENTATION
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.999998756496668	WITHOUT_CLASSIFICATION	1.2435033320280519E-6	IMPLEMENTATION
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9990655965962804	WITHOUT_CLASSIFICATION	9.344034037195148E-4	IMPLEMENTATION
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9996146339162473	WITHOUT_CLASSIFICATION	3.8536608375274784E-4	IMPLEMENTATION
// Translate "x || y" --> "x = (is_true(x) ? x : y)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, true, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9993000916648869	WITHOUT_CLASSIFICATION	6.999083351132474E-4	IMPLEMENTATION
// // Force the client socket to be blocking //	WITHOUT_CLASSIFICATION	0.9998519269227472	WITHOUT_CLASSIFICATION	1.4807307725281258E-4	IMPLEMENTATION
// Additional context surrounding tokens that both the lexer and // grammar use.	WITHOUT_CLASSIFICATION	0.9989756500484401	WITHOUT_CLASSIFICATION	0.0010243499515598324	IMPLEMENTATION
// Enebo:  c can never be antrhign but '.' // Why did I put this here?	WITHOUT_CLASSIFICATION	0.6573843466044776	WITHOUT_CLASSIFICATION	0.34261565339552236	IMPLEMENTATION
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9996738965512745	WITHOUT_CLASSIFICATION	3.261034487256148E-4	IMPLEMENTATION
//[C,C] //[C, boolean]	WITHOUT_CLASSIFICATION	0.999216654151653	WITHOUT_CLASSIFICATION	7.833458483471001E-4	IMPLEMENTATION
// Label for the start of the closure (used to implement redo) // Label for the end of the closure (used to implement retry)	WITHOUT_CLASSIFICATION	0.9963656218015186	WITHOUT_CLASSIFICATION	0.003634378198481489	IMPLEMENTATION
// ignore; job was cancelled // FIXME: is this ok?	WITHOUT_CLASSIFICATION	0.9999544559116379	WITHOUT_CLASSIFICATION	4.554408836203926E-5	IMPLEMENTATION
//                    // check arity //                    checkArity(mv, scope);	WITHOUT_CLASSIFICATION	0.9997109302404057	WITHOUT_CLASSIFICATION	2.8906975959433197E-4	IMPLEMENTATION
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9987960852960868	WITHOUT_CLASSIFICATION	0.0012039147039132462	IMPLEMENTATION
// we take the first method found as our "n" method, since for any non-specific // arity they'll all error the same. If an actual "n" method is created, we // use that.	WITHOUT_CLASSIFICATION	0.9999316549144064	WITHOUT_CLASSIFICATION	6.834508559370711E-5	IMPLEMENTATION
// Used by our duck-typification of Proc into interface types, to allow // coercing a simple proc into an interface parameter.	WITHOUT_CLASSIFICATION	0.9999982336967795	WITHOUT_CLASSIFICATION	1.7663032204326756E-6	IMPLEMENTATION
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9998798398217034	WITHOUT_CLASSIFICATION	1.2016017829667021E-4	IMPLEMENTATION
// it's either as converted as we can make it via above logic or it's // not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9543091149105156	WITHOUT_CLASSIFICATION	0.04569088508948435	IMPLEMENTATION
// package scheme 2: separate module for each full package name, constructed  // from the camel-cased package segments: Java::JavaLang::Object, 	WITHOUT_CLASSIFICATION	0.9999971007517205	WITHOUT_CLASSIFICATION	2.8992482794983104E-6	IMPLEMENTATION
// // construct the proxy method //	WITHOUT_CLASSIFICATION	0.9983316458962631	WITHOUT_CLASSIFICATION	0.0016683541037369601	IMPLEMENTATION
// line 159 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9998964293966287	WITHOUT_CLASSIFICATION	1.0357060337130936E-4	IMPLEMENTATION
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9998790229552063	WITHOUT_CLASSIFICATION	1.2097704479370284E-4	IMPLEMENTATION
// line 152 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9998964293966287	WITHOUT_CLASSIFICATION	1.0357060337130936E-4	IMPLEMENTATION
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999360422775465	WITHOUT_CLASSIFICATION	6.395772245351274E-5	IMPLEMENTATION
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9998790229552063	WITHOUT_CLASSIFICATION	1.2097704479370284E-4	IMPLEMENTATION
// We only need to pass in current scope if we are evaluating as a block (which // is only done for evals).  We need to pass this in so that we can appropriately scope // down to captured scopes when we are parsing.	WITHOUT_CLASSIFICATION	0.9999959288155326	WITHOUT_CLASSIFICATION	4.0711844674415775E-6	IMPLEMENTATION
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999453252194547	WITHOUT_CLASSIFICATION	5.467478054522393E-5	IMPLEMENTATION
// A place to store that special hiding space that bindings need to implement things like: // eval("a = 1", binding); eval("p a").  All binding instances must get access to this // hidden shared scope.  We store it here.  This will be null if no binding has yet // been called.	WITHOUT_CLASSIFICATION	0.7876616383805902	IMPLEMENTATION	0.2123383616194098	WITHOUT_CLASSIFICATION
// TODO: make it 16 now ? // MUST be power of 2!	WITHOUT_CLASSIFICATION	0.6843105909673003	IMPLEMENTATION	0.3156894090326998	WITHOUT_CLASSIFICATION
// check visibility // dup method	WITHOUT_CLASSIFICATION	0.9951230452379632	WITHOUT_CLASSIFICATION	0.004876954762036686	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9992850856952142	WITHOUT_CLASSIFICATION	7.149143047858048E-4	IMPLEMENTATION
// unsigned int, native // unsigned long, native	WITHOUT_CLASSIFICATION	0.999764929532559	WITHOUT_CLASSIFICATION	2.3507046744112743E-4	IMPLEMENTATION
//need padding //I'm fairly sure there is a library call to create a //string filled with a given char with a given length but I couldn't find it	WITHOUT_CLASSIFICATION	0.9981750576678277	WITHOUT_CLASSIFICATION	0.0018249423321722957	IMPLEMENTATION
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999050169309448	WITHOUT_CLASSIFICATION	9.49830690551255E-5	IMPLEMENTATION
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9995817058650485	WITHOUT_CLASSIFICATION	4.1829413495161747E-4	IMPLEMENTATION
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9994009610000116	WITHOUT_CLASSIFICATION	5.990389999883569E-4	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9690303726621317	WITHOUT_CLASSIFICATION	0.03096962733786836	IMPLEMENTATION
// Estimate the square root with the foremost 62 bits of squarD // bi and scale are a tandem	WITHOUT_CLASSIFICATION	0.9999471907852228	WITHOUT_CLASSIFICATION	5.280921477728129E-5	IMPLEMENTATION
// captures // begin and end are used when not groups defined // source string	WITHOUT_CLASSIFICATION	0.9999855523213476	WITHOUT_CLASSIFICATION	1.4447678652463205E-5	IMPLEMENTATION
// // INSTANCE VARIABLE RUBY METHODS //	WITHOUT_CLASSIFICATION	0.9997467728107063	WITHOUT_CLASSIFICATION	2.5322718929362756E-4	IMPLEMENTATION
// switch // while	WITHOUT_CLASSIFICATION	0.9993687491736691	WITHOUT_CLASSIFICATION	6.312508263310041E-4	IMPLEMENTATION
// For nodes do not have their own scope so we pass null to indicate this. // 'For's are implemented as blocks in evaluation, but they have no scope so we // just deal with this lack of scope throughout its lifespan.  We should probably // change the way this works to get rid of multiple null checks.	WITHOUT_CLASSIFICATION	0.9812164192460321	WITHOUT_CLASSIFICATION	0.018783580753967962	IMPLEMENTATION
// This field is used during argument processing to avoid putting RubyArray // instances that are purely for utility purposes into ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999747726407184	WITHOUT_CLASSIFICATION	2.5227359281499484E-5	IMPLEMENTATION
// Parent container for this context (can be dynamic!!) // If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure // List of IR instructions for this method	WITHOUT_CLASSIFICATION	0.9995843805406219	WITHOUT_CLASSIFICATION	4.1561945937813063E-4	IMPLEMENTATION
// Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = false    //    beq(v1, false, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999834462085907	WITHOUT_CLASSIFICATION	1.6553791409324822E-5	IMPLEMENTATION
// expected	WITHOUT_CLASSIFICATION	0.9994209455820302	WITHOUT_CLASSIFICATION	5.790544179698659E-4	IMPLEMENTATION
// Do nothing	WITHOUT_CLASSIFICATION	0.9996486697189086	WITHOUT_CLASSIFICATION	3.513302810913712E-4	IMPLEMENTATION
// constructor	WITHOUT_CLASSIFICATION	0.9993179944129769	WITHOUT_CLASSIFICATION	6.8200558702309E-4	IMPLEMENTATION
// If a line is followed by a blank line put // it back.	WITHOUT_CLASSIFICATION	0.9996269348422822	WITHOUT_CLASSIFICATION	3.730651577178445E-4	IMPLEMENTATION
/* $>: default output handle */	WITHOUT_CLASSIFICATION	0.9999736019402781	WITHOUT_CLASSIFICATION	2.6398059721964926E-5	IMPLEMENTATION
// line 423	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 486	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// Signal uses sun.misc.* classes, this is not allowed // in the security-sensitive environments	WITHOUT_CLASSIFICATION	0.9997331204007426	WITHOUT_CLASSIFICATION	2.6687959925741786E-4	IMPLEMENTATION
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999883392788278	WITHOUT_CLASSIFICATION	1.1660721172222534E-5	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.999857310114494	WITHOUT_CLASSIFICATION	1.4268988550605625E-4	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.999857310114494	WITHOUT_CLASSIFICATION	1.4268988550605625E-4	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999878720873101	WITHOUT_CLASSIFICATION	1.212791268986833E-5	IMPLEMENTATION
// if there's no receiver, evaluate and pass in the superclass, or // pass self if it no superclass	WITHOUT_CLASSIFICATION	0.999977857110579	WITHOUT_CLASSIFICATION	2.214288942110445E-5	IMPLEMENTATION
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9996677541308308	WITHOUT_CLASSIFICATION	3.3224586916920395E-4	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.8621030793719444	IMPLEMENTATION	0.1378969206280555	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.8621030793719444	IMPLEMENTATION	0.1378969206280555	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.8621030793719444	IMPLEMENTATION	0.1378969206280555	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.8621030793719444	IMPLEMENTATION	0.1378969206280555	WITHOUT_CLASSIFICATION
// Decrease value to hit upper range.  	WITHOUT_CLASSIFICATION	0.9998833576190552	WITHOUT_CLASSIFICATION	1.166423809448719E-4	IMPLEMENTATION
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9997442246811261	WITHOUT_CLASSIFICATION	2.557753188738749E-4	IMPLEMENTATION
// "else" body	WITHOUT_CLASSIFICATION	0.9996885290371584	WITHOUT_CLASSIFICATION	3.114709628416105E-4	IMPLEMENTATION
// done // done // done // Nothing to do for 1.8 // done // done // done // done // done // done // done? // done // done // done // done // done // done // done // done // done // done // done //            case DEFINEDNODE: return buildDefined(node, m); // Incomplete // done // done // done // done // done // done // done // done //            case ENSURENODE: return buildEnsureNode(node, m); // DEFERRED // done // done // done // done //            case FLIPNODE: return buildFlip(node, m); // SSS FIXME: What code generates this AST? // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done? // done // done // done // done // done // done -- partially //            case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); // DEFERRED SSS FIXME: What code generates this AST? // done //            case POSTEXENODE: return buildPostExe(node, m); // DEFERRED //            case PREEXENODE: return buildPreExe(node, m); // DEFERRED // done?? // done	WITHOUT_CLASSIFICATION	0.9991287606170196	WITHOUT_CLASSIFICATION	8.71239382980412E-4	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9990652123136763	WITHOUT_CLASSIFICATION	9.347876863236658E-4	IMPLEMENTATION
/* $+: string matches last paren. */	WITHOUT_CLASSIFICATION	0.9999985782565798	WITHOUT_CLASSIFICATION	1.4217434202664298E-6	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999904143642196	WITHOUT_CLASSIFICATION	9.585635780467372E-6	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999904143642196	WITHOUT_CLASSIFICATION	9.585635780467372E-6	IMPLEMENTATION
// Ruby code frequently uses a platform check to choose "NUL:" on windows // but since that check doesn't work well on JRuby, we help it out	WITHOUT_CLASSIFICATION	0.9999898772369179	WITHOUT_CLASSIFICATION	1.0122763081989245E-5	IMPLEMENTATION
/* 10! */	WITHOUT_CLASSIFICATION	0.999995249009219	WITHOUT_CLASSIFICATION	4.75099078097611E-6	IMPLEMENTATION
//            case RESCUENODE: return buildRescue(node, m); // DEFERRED //            case RETRYNODE: return buildRetry(node, m); // DEFERRED // done	WITHOUT_CLASSIFICATION	0.9997686747141665	WITHOUT_CLASSIFICATION	2.3132528583354121E-4	IMPLEMENTATION
// Is this instruction live or dead?  During optimization passes, if this instruction // causes no side-effects and the result of the instruction is not needed by anyone else, // we can remove this instruction altogether without affecting program correctness.	WITHOUT_CLASSIFICATION	0.9682380375353269	IMPLEMENTATION	0.03176196246467302	WITHOUT_CLASSIFICATION
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9997987497915192	WITHOUT_CLASSIFICATION	2.0125020848079636E-4	IMPLEMENTATION
// first, iterate over all required args	WITHOUT_CLASSIFICATION	0.9996843433806585	WITHOUT_CLASSIFICATION	3.156566193415598E-4	IMPLEMENTATION
// // Determine if the parameter might be passed as a 32bit int parameter. // This just applies to buffer/pointer types. //	WITHOUT_CLASSIFICATION	0.9999987384299517	WITHOUT_CLASSIFICATION	1.2615700483185955E-6	IMPLEMENTATION
//Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());	WITHOUT_CLASSIFICATION	0.998965945934653	WITHOUT_CLASSIFICATION	0.0010340540653469518	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999360422775465	WITHOUT_CLASSIFICATION	6.395772245351274E-5	IMPLEMENTATION
// line 449	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 495	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// Management/monitoring	WITHOUT_CLASSIFICATION	0.9997877334300682	WITHOUT_CLASSIFICATION	2.1226656993181153E-4	IMPLEMENTATION
// if we've found the last char of the separator, // and we've found at least as many characters as separator length, // and the last n characters of our buffer match the separator, we're done	WITHOUT_CLASSIFICATION	0.9999998811386794	WITHOUT_CLASSIFICATION	1.1886132055728204E-7	IMPLEMENTATION
/* 14! */	WITHOUT_CLASSIFICATION	0.999995249009219	WITHOUT_CLASSIFICATION	4.75099078097611E-6	IMPLEMENTATION
// Process any set of annotations // No supported options	WITHOUT_CLASSIFICATION	0.9999901753659316	WITHOUT_CLASSIFICATION	9.8246340684491E-6	IMPLEMENTATION
// add to the jitted methods set	WITHOUT_CLASSIFICATION	0.9998464738690661	WITHOUT_CLASSIFICATION	1.53526130933933E-4	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.9999264612672705	WITHOUT_CLASSIFICATION	7.353873272954063E-5	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.9999264612672705	WITHOUT_CLASSIFICATION	7.353873272954063E-5	IMPLEMENTATION
//            case SCLASSNODE: return buildSClass(node, m); // DEFERRED // done // done // done // done // done // done // done // done //            case UNDEFNODE: return buildUndef(node, m); // DEFERRED // done //            case VALIASNODE: return buildVAlias(node, m); // DEFERRED // done // done	WITHOUT_CLASSIFICATION	0.9997686747141665	WITHOUT_CLASSIFICATION	2.3132528583354143E-4	IMPLEMENTATION
// // Adding a post-invoke for the cb result serves to both keep it alive // until after the function returns, and allows us to clean up the native // trampoline early, instead of letting them accumulate until a GC run //	WITHOUT_CLASSIFICATION	0.9999367377653083	WITHOUT_CLASSIFICATION	6.3262234691588E-5	IMPLEMENTATION
/* The Java method doesn't care what class it is, but we need to               know what to convert it to, so we use the object's own class.               If that doesn't help, we use String to force a call to the               object's "to_s" method. */	WITHOUT_CLASSIFICATION	0.9679554876106721	WITHOUT_CLASSIFICATION	0.032044512389327935	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.9997826417283519	WITHOUT_CLASSIFICATION	2.1735827164819207E-4	IMPLEMENTATION
// Atomic integers for symbol and method IDs	WITHOUT_CLASSIFICATION	0.9990309488061998	WITHOUT_CLASSIFICATION	9.690511938001745E-4	IMPLEMENTATION
/* 18! */	WITHOUT_CLASSIFICATION	0.999995249009219	WITHOUT_CLASSIFICATION	4.75099078097611E-6	IMPLEMENTATION
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.8812359299008777	WITHOUT_CLASSIFICATION	0.1187640700991223	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999299422951748	WITHOUT_CLASSIFICATION	7.00577048252371E-5	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999299422951748	WITHOUT_CLASSIFICATION	7.00577048252371E-5	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999299422951748	WITHOUT_CLASSIFICATION	7.00577048252371E-5	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999299422951748	WITHOUT_CLASSIFICATION	7.00577048252371E-5	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.999999056857448	WITHOUT_CLASSIFICATION	9.431425520594217E-7	IMPLEMENTATION
/*      * This method takes as input a map of operands to their values, and outputs     * the result of this instruction.     *     * If the value map provides a value for any of the instruction's operands     * the expectation is that the operand will be replaced with the simplified value.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify.     *     * @param valueMap Mapping from operands to their simplified values     * @returns simplified result / output of this instruction     */	WITHOUT_CLASSIFICATION	0.9999997965599088	WITHOUT_CLASSIFICATION	2.0344009109689187E-7	IMPLEMENTATION
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9923780801175357	WITHOUT_CLASSIFICATION	0.0076219198824642445	IMPLEMENTATION
// An atomic long for generating DynamicMethod serial numbers	WITHOUT_CLASSIFICATION	0.9998797367899132	WITHOUT_CLASSIFICATION	1.202632100868577E-4	IMPLEMENTATION
// MRI behavior: always check whether the file is writable // or not, even if we are to write 0 bytes.	WITHOUT_CLASSIFICATION	0.9999822308247449	WITHOUT_CLASSIFICATION	1.7769175255077288E-5	IMPLEMENTATION
/* 22! */	WITHOUT_CLASSIFICATION	0.999995249009219	WITHOUT_CLASSIFICATION	4.75099078097611E-6	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.999113323060785	WITHOUT_CLASSIFICATION	8.86676939214944E-4	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999140693352692	WITHOUT_CLASSIFICATION	8.593066473073556E-5	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999140693352692	WITHOUT_CLASSIFICATION	8.593066473073556E-5	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999140693352692	WITHOUT_CLASSIFICATION	8.593066473073556E-5	IMPLEMENTATION
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999991498841714	WITHOUT_CLASSIFICATION	8.501158284981126E-7	IMPLEMENTATION
// Build a new class and add it to the current scope (could be a script / module / class)	WITHOUT_CLASSIFICATION	0.9998993007609043	WITHOUT_CLASSIFICATION	1.0069923909576838E-4	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999464713939216	WITHOUT_CLASSIFICATION	5.352860607853233E-5	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999464713939216	WITHOUT_CLASSIFICATION	5.352860607853233E-5	IMPLEMENTATION
// AF_INET	WITHOUT_CLASSIFICATION	0.999970764908297	WITHOUT_CLASSIFICATION	2.9235091703083797E-5	IMPLEMENTATION
//////////////////////////////////////////////////////////////////////////// // Now we provide default impls of a number of signatures. For each arity, // we first generate a non-block version of the method, which just adds // NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can // potentially take a block, to only generate the block-receiving signature // and still avoid arg boxing. // // We then provide default implementations of each block-accepting method // that in turn call the IRubyObject[]+Block version of call. This then // finally falls back on the minimum implementation requirement for // dynamic method handles. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9363723877464913	WITHOUT_CLASSIFICATION	0.06362761225350867	IMPLEMENTATION
// Because we implement Java interfaces now, we need a new === that's // aware of those additional "virtual" supertypes	WITHOUT_CLASSIFICATION	0.9632732426156292	WITHOUT_CLASSIFICATION	0.03672675738437077	IMPLEMENTATION
// BASE64	WITHOUT_CLASSIFICATION	0.999970764908297	WITHOUT_CLASSIFICATION	2.9235091703083797E-5	IMPLEMENTATION
/* note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY         * when value is an integer less than 1.         * We treat 0 as a special case to avoid Domain error.         */	WITHOUT_CLASSIFICATION	0.9999943078163687	WITHOUT_CLASSIFICATION	5.692183631324634E-6	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.999644373480127	WITHOUT_CLASSIFICATION	3.556265198730602E-4	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999124209920068	WITHOUT_CLASSIFICATION	8.757900799317009E-5	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999124209920068	WITHOUT_CLASSIFICATION	8.757900799317009E-5	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9995187095708523	WITHOUT_CLASSIFICATION	4.8129042914775286E-4	IMPLEMENTATION
// SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode // We won't get here for argument receives!  So, buildDasgn is called for // assignments to block variables within a block.  As far as the IR is concerned, // this is just a simple copy	WITHOUT_CLASSIFICATION	0.9999999877347651	WITHOUT_CLASSIFICATION	1.2265234910772682E-8	IMPLEMENTATION
// getSimplifiedOperand returns the value of this operand, fully simplified // getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away // // The value is used during optimizations and propagated through the IR.  But, it is thrown away after that. // But, the operand form is used for constructing the compound objects represented by the operand. // // Example: a = [1], b = [3,4], c = [a,b], d = [2,c] //   -- getValue(c) = [1,[3,4]];     getSimplifiedOperand(c) = [1, b] //   -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] // // Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. // So, if contents of a or b is modified, the "simplified value"s of c and d also change!  This difference // is captured by these two methods.	WITHOUT_CLASSIFICATION	0.9999999027908936	WITHOUT_CLASSIFICATION	9.720910644300859E-8	IMPLEMENTATION
//IRubyObject protocol = args[4];	WITHOUT_CLASSIFICATION	0.9987353200955884	WITHOUT_CLASSIFICATION	0.0012646799044115655	IMPLEMENTATION
// promise to implement three to N with block	WITHOUT_CLASSIFICATION	0.9856157913367349	WITHOUT_CLASSIFICATION	0.014384208663265025	IMPLEMENTATION
// Ruby's OMG capture all source in a Hash feature // Add each line to buffer when encountering newline or EOF for first time.	WITHOUT_CLASSIFICATION	0.9999984236549284	WITHOUT_CLASSIFICATION	1.576345071609084E-6	IMPLEMENTATION
// carriage return	WITHOUT_CLASSIFICATION	0.9986999966595034	WITHOUT_CLASSIFICATION	0.001300003340496595	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9997287169677056	WITHOUT_CLASSIFICATION	2.7128303229443117E-4	IMPLEMENTATION
// String construction routines by NOT byte[] buffer and making the target String shared 	WITHOUT_CLASSIFICATION	0.9999257505147429	WITHOUT_CLASSIFICATION	7.424948525708582E-5	IMPLEMENTATION
// insert all nodes in sequence, hash them in the final instruction // KEY	WITHOUT_CLASSIFICATION	0.9999783609289309	WITHOUT_CLASSIFICATION	2.163907106911642E-5	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999635634348194	WITHOUT_CLASSIFICATION	3.643656518048075E-5	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.8582290205151861	WITHOUT_CLASSIFICATION	0.14177097948481387	IMPLEMENTATION
// Basic Block id // CFG that this basic block belongs to // All basic blocks have a starting label // List of non-label instructions	WITHOUT_CLASSIFICATION	0.999466290361722	WITHOUT_CLASSIFICATION	5.337096382780992E-4	IMPLEMENTATION
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9991413743742353	WITHOUT_CLASSIFICATION	8.586256257646919E-4	IMPLEMENTATION
// For all uninitialized specific arities, we defer to the "n" method which // should raise appropriate error in all cases.	WITHOUT_CLASSIFICATION	0.9520460686266694	WITHOUT_CLASSIFICATION	0.047953931373330545	IMPLEMENTATION
// implement is called to force this class to create stubs for all // methods in the given interface, so they'll show up in the list // of methods and be invocable without passing through method_missing	WITHOUT_CLASSIFICATION	0.9999832649702581	WITHOUT_CLASSIFICATION	1.673502974187444E-5	IMPLEMENTATION
// CASE IR instructions are dummy instructions  // -- all when/then clauses have been converted into if-then-else blocks	WITHOUT_CLASSIFICATION	0.99972542412066	WITHOUT_CLASSIFICATION	2.745758793400507E-4	IMPLEMENTATION
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.999940499221664	WITHOUT_CLASSIFICATION	5.9500778336119835E-5	IMPLEMENTATION
// leave it null and fall back on our normal invocation logic	WITHOUT_CLASSIFICATION	0.9992562709611991	WITHOUT_CLASSIFICATION	7.437290388009664E-4	IMPLEMENTATION
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999624604096911	WITHOUT_CLASSIFICATION	3.75395903090227E-5	IMPLEMENTATION
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9899710125037702	WITHOUT_CLASSIFICATION	0.010028987496229828	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9984093723251959	WITHOUT_CLASSIFICATION	0.0015906276748040456	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9984093723251959	WITHOUT_CLASSIFICATION	0.0015906276748040456	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9984093723251959	WITHOUT_CLASSIFICATION	0.0015906276748040456	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9984093723251959	WITHOUT_CLASSIFICATION	0.0015906276748040456	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9984093723251959	WITHOUT_CLASSIFICATION	0.0015906276748040456	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9984093723251959	WITHOUT_CLASSIFICATION	0.0015906276748040456	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9984093723251959	WITHOUT_CLASSIFICATION	0.0015906276748040456	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9984093723251959	WITHOUT_CLASSIFICATION	0.0015906276748040456	IMPLEMENTATION
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999467309108406	WITHOUT_CLASSIFICATION	5.3269089159296416E-5	IMPLEMENTATION
/* fall through */	WITHOUT_CLASSIFICATION	0.9998194813704692	WITHOUT_CLASSIFICATION	1.8051862953075728E-4	IMPLEMENTATION
// deal with case when "other" is not a string	WITHOUT_CLASSIFICATION	0.99969250067257	WITHOUT_CLASSIFICATION	3.074993274300492E-4	IMPLEMENTATION
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999754108019896	WITHOUT_CLASSIFICATION	2.4589198010357976E-5	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9996802362611005	WITHOUT_CLASSIFICATION	3.1976373889949875E-4	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9996802362611005	WITHOUT_CLASSIFICATION	3.1976373889949875E-4	IMPLEMENTATION
// store argument count information into scope	WITHOUT_CLASSIFICATION	0.9999740481220574	WITHOUT_CLASSIFICATION	2.5951877942521806E-5	IMPLEMENTATION
// the load method is used for loading as a top-level script, and prepares appropriate scoping around the code	WITHOUT_CLASSIFICATION	0.9995654198349049	WITHOUT_CLASSIFICATION	4.345801650951771E-4	IMPLEMENTATION
// First, build assignments for specific named arguments	WITHOUT_CLASSIFICATION	0.9999348506789472	WITHOUT_CLASSIFICATION	6.514932105280057E-5	IMPLEMENTATION
//        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } //        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }	WITHOUT_CLASSIFICATION	0.9999626524652013	WITHOUT_CLASSIFICATION	3.7347534798531774E-5	IMPLEMENTATION
// get current context	WITHOUT_CLASSIFICATION	0.999494107027509	WITHOUT_CLASSIFICATION	5.058929724910588E-4	IMPLEMENTATION
// octal constant	WITHOUT_CLASSIFICATION	0.9985929293566952	WITHOUT_CLASSIFICATION	0.00140707064330479	IMPLEMENTATION
// read	WITHOUT_CLASSIFICATION	0.999990268417724	WITHOUT_CLASSIFICATION	9.731582276022997E-6	IMPLEMENTATION
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9984208990522162	WITHOUT_CLASSIFICATION	0.0015791009477837514	IMPLEMENTATION
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9992106594520854	WITHOUT_CLASSIFICATION	7.893405479145108E-4	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9994678162786536	WITHOUT_CLASSIFICATION	5.321837213465198E-4	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9994678162786536	WITHOUT_CLASSIFICATION	5.321837213465198E-4	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9994678162786536	WITHOUT_CLASSIFICATION	5.321837213465198E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999082083708365	WITHOUT_CLASSIFICATION	9.17916291635264E-5	IMPLEMENTATION
// at end	WITHOUT_CLASSIFICATION	0.9999818462761061	WITHOUT_CLASSIFICATION	1.8153723893907688E-5	IMPLEMENTATION
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999565847230621	WITHOUT_CLASSIFICATION	4.341527693779027E-5	IMPLEMENTATION
// save blocking state	WITHOUT_CLASSIFICATION	0.999946814350955	WITHOUT_CLASSIFICATION	5.3185649044947656E-5	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9997604194499176	WITHOUT_CLASSIFICATION	2.395805500825079E-4	IMPLEMENTATION
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999307852336357	WITHOUT_CLASSIFICATION	6.921476636437289E-5	IMPLEMENTATION
// fall back on empty env when security disallows environment var access (like in an applet)	WITHOUT_CLASSIFICATION	0.9999930324988846	WITHOUT_CLASSIFICATION	6.967501115485996E-6	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9995912315833974	WITHOUT_CLASSIFICATION	4.087684166026838E-4	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9995912315833974	WITHOUT_CLASSIFICATION	4.087684166026838E-4	IMPLEMENTATION
// load null block	WITHOUT_CLASSIFICATION	0.9989325654287621	WITHOUT_CLASSIFICATION	0.0010674345712378306	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999992127217344	WITHOUT_CLASSIFICATION	7.872782656166848E-7	IMPLEMENTATION
// nothing else to here - the module version will be // included in the class.	WITHOUT_CLASSIFICATION	0.9999889423759173	WITHOUT_CLASSIFICATION	1.105762408274417E-5	IMPLEMENTATION
// JRUBY-1000, fail early when attempting to subclass a final Java class; // solved here by adding an exception-throwing "inherited"	WITHOUT_CLASSIFICATION	0.9999631634354079	WITHOUT_CLASSIFICATION	3.683656459212528E-5	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9980910528594661	WITHOUT_CLASSIFICATION	0.0019089471405338467	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9980910528594661	WITHOUT_CLASSIFICATION	0.0019089471405338467	IMPLEMENTATION
// Translate ret = (a || b) to ret = (a ? true : b) as follows //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = true //    beq(v1, true, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999767188723637	WITHOUT_CLASSIFICATION	2.328112763627184E-5	IMPLEMENTATION
// Initial precision is that of double numbers 2^63/2 ~ 4E18 // 63-1 an even number of number bits // precision seems 16 to 18 digits	WITHOUT_CLASSIFICATION	0.9999990656092895	WITHOUT_CLASSIFICATION	9.343907104032472E-7	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9995625216673062	WITHOUT_CLASSIFICATION	4.3747833269391917E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9998920580249556	WITHOUT_CLASSIFICATION	1.0794197504441973E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9998920580249556	WITHOUT_CLASSIFICATION	1.0794197504441973E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9998920580249556	WITHOUT_CLASSIFICATION	1.0794197504441973E-4	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.9994172810865479	WITHOUT_CLASSIFICATION	5.827189134520439E-4	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.9996282838762223	WITHOUT_CLASSIFICATION	3.717161237776822E-4	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.9996282838762223	WITHOUT_CLASSIFICATION	3.717161237776822E-4	IMPLEMENTATION
// check arity	WITHOUT_CLASSIFICATION	0.9984304399182617	WITHOUT_CLASSIFICATION	0.0015695600817382874	IMPLEMENTATION
// check arity	WITHOUT_CLASSIFICATION	0.9984304399182617	WITHOUT_CLASSIFICATION	0.0015695600817382874	IMPLEMENTATION
// create the class	WITHOUT_CLASSIFICATION	0.9992809640574504	WITHOUT_CLASSIFICATION	7.190359425496411E-4	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9997929512826901	WITHOUT_CLASSIFICATION	2.070487173100169E-4	IMPLEMENTATION
// No hex value after the 'x'.	WITHOUT_CLASSIFICATION	0.9999497521020753	WITHOUT_CLASSIFICATION	5.024789792483266E-5	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.999970764908297	WITHOUT_CLASSIFICATION	2.9235091703083797E-5	IMPLEMENTATION
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999654992998921	WITHOUT_CLASSIFICATION	3.4500700107862226E-5	IMPLEMENTATION
// Let m be the exact digits precision in an earlier! loop	WITHOUT_CLASSIFICATION	0.9999990470502113	WITHOUT_CLASSIFICATION	9.529497886835282E-7	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999738222494304	WITHOUT_CLASSIFICATION	2.6177750569644133E-5	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.99996496030933	WITHOUT_CLASSIFICATION	3.5039690669922656E-5	IMPLEMENTATION
// Label for the start of the method // Label for the end of the method	WITHOUT_CLASSIFICATION	0.9988711853702671	WITHOUT_CLASSIFICATION	0.0011288146297329022	IMPLEMENTATION
// comparisons & checks // checks if the operand is non-null and non-false // EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...	WITHOUT_CLASSIFICATION	0.9999998700765366	WITHOUT_CLASSIFICATION	1.2992346342717508E-7	IMPLEMENTATION
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9990652123136763	WITHOUT_CLASSIFICATION	9.347876863236658E-4	IMPLEMENTATION
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9955791366741181	WITHOUT_CLASSIFICATION	0.004420863325881779	IMPLEMENTATION
// all done with lookup attempts, release monitor	WITHOUT_CLASSIFICATION	0.9998572209450061	WITHOUT_CLASSIFICATION	1.4277905499396936E-4	IMPLEMENTATION
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999778444494105	WITHOUT_CLASSIFICATION	2.215555058951458E-5	IMPLEMENTATION
// Create list of interface names to proxy (and make sure they really are interfaces) // Also build a hashcode from all classes to use for retrieving previously-created impl	WITHOUT_CLASSIFICATION	0.9999997642699544	WITHOUT_CLASSIFICATION	2.357300455908216E-7	IMPLEMENTATION
// Construct local variables based on parameter names passed in	WITHOUT_CLASSIFICATION	0.9999740474915584	WITHOUT_CLASSIFICATION	2.5952508441540496E-5	IMPLEMENTATION
// Value of "TZ" property is of a bit different format, // which confuses the Java's TimeZone.getTimeZone(id) method, // and so, we need to convert it.	WITHOUT_CLASSIFICATION	0.9989333281694647	WITHOUT_CLASSIFICATION	0.001066671830535348	IMPLEMENTATION
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9957963568888493	WITHOUT_CLASSIFICATION	0.004203643111150802	IMPLEMENTATION
// ensure the object is associated with the wrapper we found it in, // so that if it comes back we don't re-wrap it	WITHOUT_CLASSIFICATION	0.9997961519141277	WITHOUT_CLASSIFICATION	2.0384808587230546E-4	IMPLEMENTATION
// return sqrt(squarD) with precision of rootMC	WITHOUT_CLASSIFICATION	0.9997712543464586	WITHOUT_CLASSIFICATION	2.2874565354139356E-4	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9690303726621317	WITHOUT_CLASSIFICATION	0.03096962733786836	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9998920580249556	WITHOUT_CLASSIFICATION	1.0794197504441973E-4	IMPLEMENTATION
// Get a new label using the provided label prefix	WITHOUT_CLASSIFICATION	0.9999730997257966	WITHOUT_CLASSIFICATION	2.690027420340722E-5	IMPLEMENTATION
// normal exit, perform finally and return	WITHOUT_CLASSIFICATION	0.9996181699744029	WITHOUT_CLASSIFICATION	3.818300255969859E-4	IMPLEMENTATION
// coerce arguments	WITHOUT_CLASSIFICATION	0.9990914153245247	WITHOUT_CLASSIFICATION	9.085846754751445E-4	IMPLEMENTATION
// 0.0 is ok // float range // inverted float range? // NaN // +infinity // -infinity	WITHOUT_CLASSIFICATION	0.999400014729187	WITHOUT_CLASSIFICATION	5.999852708129211E-4	IMPLEMENTATION
/* expected */	WITHOUT_CLASSIFICATION	0.9999058545929629	WITHOUT_CLASSIFICATION	9.414540703704772E-5	IMPLEMENTATION
// set this class's method names in var @__java_ovrd_methods if this // is the new class; otherwise, get method names from there if this is // a proxy superclass.	WITHOUT_CLASSIFICATION	0.9999997371177487	WITHOUT_CLASSIFICATION	2.628822512839415E-7	IMPLEMENTATION
/* ignore backslashed spaces in %w */	WITHOUT_CLASSIFICATION	0.9999950646293227	WITHOUT_CLASSIFICATION	4.935370677179522E-6	IMPLEMENTATION
// Invert the sign, since TZ format and Java format // use opposite signs, sigh... Also, Java API requires // the sign to be always present, be it "+" or "-".	WITHOUT_CLASSIFICATION	0.998353539717109	WITHOUT_CLASSIFICATION	0.0016464602828908824	IMPLEMENTATION
// no binding given, use 0 for both	WITHOUT_CLASSIFICATION	0.9996799738507149	WITHOUT_CLASSIFICATION	3.200261492851203E-4	IMPLEMENTATION
// <=> may return nil in many circumstances, e.g. 3 <=> NaN        	WITHOUT_CLASSIFICATION	0.9999242650547878	WITHOUT_CLASSIFICATION	7.573494521220392E-5	IMPLEMENTATION
// use numbered access method	WITHOUT_CLASSIFICATION	0.9881844083373227	WITHOUT_CLASSIFICATION	0.011815591662677294	IMPLEMENTATION
// Always use "GMT" since that's required by Java API.	WITHOUT_CLASSIFICATION	0.9995575817541232	WITHOUT_CLASSIFICATION	4.4241824587683493E-4	IMPLEMENTATION
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9998607717081179	WITHOUT_CLASSIFICATION	1.3922829188205867E-4	IMPLEMENTATION
// The dataStruct is a place where custom information can be // contained for core implementations that doesn't necessarily // want to go to the trouble of creating a subclass of // RubyObject. The OpenSSL implementation uses this heavily to // save holder objects containing Java cryptography objects. // Java integration uses this to store the Java object ref. //protected transient Object dataStruct;	WITHOUT_CLASSIFICATION	0.9999216734783053	WITHOUT_CLASSIFICATION	7.832652169474458E-5	IMPLEMENTATION
// Remaining arguments are for the script itself	WITHOUT_CLASSIFICATION	0.9999669847435346	WITHOUT_CLASSIFICATION	3.3015256465325866E-5	IMPLEMENTATION
// arg grouping, use slower arg walking logic	WITHOUT_CLASSIFICATION	0.9994443268886399	WITHOUT_CLASSIFICATION	5.556731113601196E-4	IMPLEMENTATION
// build scope names string	WITHOUT_CLASSIFICATION	0.9999946197692584	WITHOUT_CLASSIFICATION	5.380230741612274E-6	IMPLEMENTATION
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999984363144993	WITHOUT_CLASSIFICATION	1.5636855006785794E-6	IMPLEMENTATION
// Here we create an "anonymous" exception type used for unrolling the stack. // MRI creates a new one for *every call* to timeout, which can be costly. // We opt to use a single exception type for all cases to avoid this overhead.	WITHOUT_CLASSIFICATION	0.9994616741664059	WITHOUT_CLASSIFICATION	5.383258335941145E-4	IMPLEMENTATION
// finally	WITHOUT_CLASSIFICATION	0.9999712253065045	WITHOUT_CLASSIFICATION	2.8774693495437294E-5	IMPLEMENTATION
// MRI behavior: With TZ equal to "GMT" or "UTC", Time.now // is *NOT* considered as a proper GMT/UTC time: //   ENV['TZ']="GMT" //   Time.now.gmt? ==> false //   ENV['TZ']="UTC" //   Time.now.utc? ==> false // Hence, we need to adjust for that.	WITHOUT_CLASSIFICATION	0.9999240419815034	WITHOUT_CLASSIFICATION	7.595801849657582E-5	IMPLEMENTATION
// ?l  | boolean | True if file1 exists and is a symbolic link	WITHOUT_CLASSIFICATION	0.9999977822965888	WITHOUT_CLASSIFICATION	2.217703411338012E-6	IMPLEMENTATION
// This try/catch is to allow failing over to the "commands" logic // when running from within a jruby-complete jar file, which has // jruby.home = a jar file URL that does not resolve correctly with // JRubyFile.create.	WITHOUT_CLASSIFICATION	0.9940295168674137	WITHOUT_CLASSIFICATION	0.005970483132586335	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9980312623604638	WITHOUT_CLASSIFICATION	0.0019687376395361895	IMPLEMENTATION
// specific arity	WITHOUT_CLASSIFICATION	0.9978921917534131	WITHOUT_CLASSIFICATION	0.0021078082465868387	IMPLEMENTATION
// In the case of two arguments, MRI will discard the portion of // the first argument after a decimal point (i.e., "floor"). // However in the case of a single argument, any portion after // the decimal point is honored.	WITHOUT_CLASSIFICATION	0.9999867345242488	WITHOUT_CLASSIFICATION	1.3265475751284633E-5	IMPLEMENTATION
// ?w  | boolean | True if file1 exists and is writable by effective uid/gid	WITHOUT_CLASSIFICATION	0.999995425435554	WITHOUT_CLASSIFICATION	4.574564446045255E-6	IMPLEMENTATION
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9997467728107063	WITHOUT_CLASSIFICATION	2.5322718929362756E-4	IMPLEMENTATION
/*    @JRubyMethod    public IRubyObject to_proc() {        return RubyProc.newProc(getRuntime(),                                CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()),                                Block.Type.PROC);    }    */	WITHOUT_CLASSIFICATION	0.9999860577645774	WITHOUT_CLASSIFICATION	1.3942235422637224E-5	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9997061763850394	WITHOUT_CLASSIFICATION	2.9382361496051743E-4	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9997061763850394	WITHOUT_CLASSIFICATION	2.9382361496051743E-4	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9998869585948379	WITHOUT_CLASSIFICATION	1.1304140516205312E-4	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9998869585948379	WITHOUT_CLASSIFICATION	1.1304140516205312E-4	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9949916302465118	WITHOUT_CLASSIFICATION	0.005008369753488258	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9949916302465118	WITHOUT_CLASSIFICATION	0.005008369753488258	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999834743841721	WITHOUT_CLASSIFICATION	1.6525615827885382E-5	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999834743841721	WITHOUT_CLASSIFICATION	1.6525615827885382E-5	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9990652123136763	WITHOUT_CLASSIFICATION	9.347876863236658E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9990652123136763	WITHOUT_CLASSIFICATION	9.347876863236658E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9990652123136763	WITHOUT_CLASSIFICATION	9.347876863236658E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9990652123136763	WITHOUT_CLASSIFICATION	9.347876863236658E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9990652123136763	WITHOUT_CLASSIFICATION	9.347876863236658E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9990652123136763	WITHOUT_CLASSIFICATION	9.347876863236658E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9990652123136763	WITHOUT_CLASSIFICATION	9.347876863236658E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9990652123136763	WITHOUT_CLASSIFICATION	9.347876863236658E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9990652123136763	WITHOUT_CLASSIFICATION	9.347876863236658E-4	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.999891270535609	WITHOUT_CLASSIFICATION	1.0872946439107703E-4	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.999891270535609	WITHOUT_CLASSIFICATION	1.0872946439107703E-4	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.999891270535609	WITHOUT_CLASSIFICATION	1.0872946439107703E-4	IMPLEMENTATION
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9997125429452681	WITHOUT_CLASSIFICATION	2.8745705473190783E-4	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999864650872056	WITHOUT_CLASSIFICATION	1.353491279433704E-5	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999864650872056	WITHOUT_CLASSIFICATION	1.353491279433704E-5	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999864650872056	WITHOUT_CLASSIFICATION	1.353491279433704E-5	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9996891773294205	WITHOUT_CLASSIFICATION	3.1082267057940726E-4	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9996891773294205	WITHOUT_CLASSIFICATION	3.1082267057940726E-4	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9996891773294205	WITHOUT_CLASSIFICATION	3.1082267057940726E-4	IMPLEMENTATION
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9997467728107063	WITHOUT_CLASSIFICATION	2.5322718929362756E-4	IMPLEMENTATION
// backspace	WITHOUT_CLASSIFICATION	0.9990671212812176	WITHOUT_CLASSIFICATION	9.328787187824985E-4	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
/* package-private */	WITHOUT_CLASSIFICATION	0.9999654992998921	WITHOUT_CLASSIFICATION	3.4500700107862226E-5	IMPLEMENTATION
// fall through	WITHOUT_CLASSIFICATION	0.9988901888421757	WITHOUT_CLASSIFICATION	0.0011098111578242609	IMPLEMENTATION
// fall through	WITHOUT_CLASSIFICATION	0.9988901888421757	WITHOUT_CLASSIFICATION	0.0011098111578242609	IMPLEMENTATION
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.999355037879927	WITHOUT_CLASSIFICATION	6.449621200731404E-4	IMPLEMENTATION
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.999217844297997	WITHOUT_CLASSIFICATION	7.821557020029434E-4	IMPLEMENTATION
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.999217844297997	WITHOUT_CLASSIFICATION	7.821557020029434E-4	IMPLEMENTATION
/**      * Nested class whose instances act as thunks reacting to to_str method     * called from (Exception#to_str, Exception#message)     * MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!",     * to_str implementation: "name_err_mesg_to_str"     *     * TODO: this class should not be lookupable     */	WITHOUT_CLASSIFICATION	0.9818720133807145	IMPLEMENTATION	0.018127986619285413	WITHOUT_CLASSIFICATION
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9995722137919058	WITHOUT_CLASSIFICATION	4.277862080942681E-4	IMPLEMENTATION
// The name of this source (e.g. a filename: foo.rb)	WITHOUT_CLASSIFICATION	0.9999692117344798	WITHOUT_CLASSIFICATION	3.07882655200423E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999459775051336	WITHOUT_CLASSIFICATION	5.402249486647505E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999459775051336	WITHOUT_CLASSIFICATION	5.402249486647505E-5	IMPLEMENTATION
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9999840704991213	WITHOUT_CLASSIFICATION	1.5929500878719573E-5	IMPLEMENTATION
// We yield here to hopefully permit the target thread to schedule // MRI immediately schedules it, so this is close but not exact	WITHOUT_CLASSIFICATION	0.9999281934171836	WITHOUT_CLASSIFICATION	7.180658281633822E-5	IMPLEMENTATION
// note that addMethod now does its own put, so any change made to // functionality here should be made there as well 	WITHOUT_CLASSIFICATION	0.9999954020621032	WITHOUT_CLASSIFICATION	4.597937896807235E-6	IMPLEMENTATION
/* Currently dead code, but useful when we figure out how to actually perform translit.    private static boolean isTranslit(String encoding) {        return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false;    }*/	WITHOUT_CLASSIFICATION	0.9810897769221355	WITHOUT_CLASSIFICATION	0.018910223077864524	IMPLEMENTATION
// empirically it appears that to_ary coersions always return array or nil, so this // should always be an array by now.	WITHOUT_CLASSIFICATION	0.9993870887402677	WITHOUT_CLASSIFICATION	6.129112597322876E-4	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999459775051336	WITHOUT_CLASSIFICATION	5.402249486647505E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999459775051336	WITHOUT_CLASSIFICATION	5.402249486647505E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999459775051336	WITHOUT_CLASSIFICATION	5.402249486647505E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999459775051336	WITHOUT_CLASSIFICATION	5.402249486647505E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999459775051336	WITHOUT_CLASSIFICATION	5.402249486647505E-5	IMPLEMENTATION
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999800467556625	WITHOUT_CLASSIFICATION	1.995324433747818E-5	IMPLEMENTATION
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.999676089735341	WITHOUT_CLASSIFICATION	3.239102646590343E-4	IMPLEMENTATION
// if it's an inner class and it's not public, we can't access it; // skip population of declared elements	WITHOUT_CLASSIFICATION	0.999757618082759	WITHOUT_CLASSIFICATION	2.4238191724106225E-4	IMPLEMENTATION
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999230943228994	WITHOUT_CLASSIFICATION	7.690567710066134E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9849675290921915	WITHOUT_CLASSIFICATION	0.015032470907808522	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9849675290921915	WITHOUT_CLASSIFICATION	0.015032470907808522	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9849675290921915	WITHOUT_CLASSIFICATION	0.015032470907808522	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9849675290921915	WITHOUT_CLASSIFICATION	0.015032470907808522	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9849675290921915	WITHOUT_CLASSIFICATION	0.015032470907808522	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9849675290921915	WITHOUT_CLASSIFICATION	0.015032470907808522	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9849675290921915	WITHOUT_CLASSIFICATION	0.015032470907808522	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9849675290921915	WITHOUT_CLASSIFICATION	0.015032470907808522	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9849675290921915	WITHOUT_CLASSIFICATION	0.015032470907808522	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9849675290921915	WITHOUT_CLASSIFICATION	0.015032470907808522	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9849675290921915	WITHOUT_CLASSIFICATION	0.015032470907808522	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9849675290921915	WITHOUT_CLASSIFICATION	0.015032470907808522	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9849675290921915	WITHOUT_CLASSIFICATION	0.015032470907808522	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9849675290921915	WITHOUT_CLASSIFICATION	0.015032470907808522	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9849675290921915	WITHOUT_CLASSIFICATION	0.015032470907808522	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9849675290921915	WITHOUT_CLASSIFICATION	0.015032470907808522	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9849675290921915	WITHOUT_CLASSIFICATION	0.015032470907808522	IMPLEMENTATION
// MRI behavior on Windows: it treats '/' as a root of // a current drive (but only if SINGLE slash is present!): // E.g., if current work directory is // 'D:/home/directory', then '/' means 'D:/'. // // Basically, '/path' is treated as a *RELATIVE* path, // relative to the current drive. '//path' is treated // as absolute one.	WITHOUT_CLASSIFICATION	0.9999937037769093	WITHOUT_CLASSIFICATION	6.2962230906230474E-6	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9849675290921915	WITHOUT_CLASSIFICATION	0.015032470907808522	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9849675290921915	WITHOUT_CLASSIFICATION	0.015032470907808522	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9849675290921915	WITHOUT_CLASSIFICATION	0.015032470907808522	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9849675290921915	WITHOUT_CLASSIFICATION	0.015032470907808522	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9849675290921915	WITHOUT_CLASSIFICATION	0.015032470907808522	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9849675290921915	WITHOUT_CLASSIFICATION	0.015032470907808522	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9849675290921915	WITHOUT_CLASSIFICATION	0.015032470907808522	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9849675290921915	WITHOUT_CLASSIFICATION	0.015032470907808522	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9849675290921915	WITHOUT_CLASSIFICATION	0.015032470907808522	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9849675290921915	WITHOUT_CLASSIFICATION	0.015032470907808522	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9849675290921915	WITHOUT_CLASSIFICATION	0.015032470907808522	IMPLEMENTATION
// This is needed when the enclosing class or module is a singleton. // In that case, we generated a name such as null::Foo, which broke  // Marshalling, among others. The correct thing to do in this situation  // is to insert the generate the name of form #<Class:01xasdfasd> if  // it's a singleton module/class, which this code accomplishes.	WITHOUT_CLASSIFICATION	0.9969578363628874	WITHOUT_CLASSIFICATION	0.0030421636371126127	IMPLEMENTATION
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9987364673204308	WITHOUT_CLASSIFICATION	0.0012635326795691732	IMPLEMENTATION
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999550650927573	WITHOUT_CLASSIFICATION	4.493490724270811E-5	IMPLEMENTATION
// get "self"	WITHOUT_CLASSIFICATION	0.9995895812130824	WITHOUT_CLASSIFICATION	4.104187869175523E-4	IMPLEMENTATION
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999899163580069	WITHOUT_CLASSIFICATION	1.0083641993070694E-5	IMPLEMENTATION
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9987960852960868	WITHOUT_CLASSIFICATION	0.0012039147039132462	IMPLEMENTATION
// only public methods	WITHOUT_CLASSIFICATION	0.9999708477998832	WITHOUT_CLASSIFICATION	2.9152200116794183E-5	IMPLEMENTATION
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999136888297357	WITHOUT_CLASSIFICATION	8.631117026425073E-5	IMPLEMENTATION
// First try to use drive letter from supplied dir value, // then try current work dir.	WITHOUT_CLASSIFICATION	0.9992130878327707	WITHOUT_CLASSIFICATION	7.869121672291979E-4	IMPLEMENTATION
// JRUBY-2435: Aliasing eval and other "special" methods should display a warning // We warn because we treat certain method names as "special" for purposes of // optimization. Hopefully this will be enough to convince people not to alias // them.	WITHOUT_CLASSIFICATION	0.9975516158817909	WITHOUT_CLASSIFICATION	0.0024483841182090806	IMPLEMENTATION
// generate a real method signature for the method, with to/from coercions	WITHOUT_CLASSIFICATION	0.999324397982761	WITHOUT_CLASSIFICATION	6.756020172389397E-4	IMPLEMENTATION
// block argument to the method // closure present // class present // method table mutations, def, defs, undef, alias // likely call to eval // makes calls that are aware of the frame // makes calls that are aware of the frame's self // makes calls that are aware of the frame's visibility // makes calls that are aware of the frame's block // makes calls that are aware of the frame's name // makes calls that set or get backref // makes calls that set or get lastline // makes calls that are aware of the frame's class // optional arguments to the method // rest arg to the method // makes calls that are aware of the scope // makes a zero-argument super call // accesses or sets constants // accesses or sets class variables // makes normal super call // contains a retry	WITHOUT_CLASSIFICATION	0.9995019460246553	WITHOUT_CLASSIFICATION	4.98053975344792E-4	IMPLEMENTATION
// // Add aliases in Type::*, NativeType::* and FFI::TYPE_* //	WITHOUT_CLASSIFICATION	0.9999781575326392	WITHOUT_CLASSIFICATION	2.1842467360860026E-5	IMPLEMENTATION
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999788112153817	WITHOUT_CLASSIFICATION	2.118878461827523E-5	IMPLEMENTATION
// double-testing args.length here, but it avoids duplicating the proc-setup code in two places	WITHOUT_CLASSIFICATION	0.9999825700426815	WITHOUT_CLASSIFICATION	1.742995731845312E-5	IMPLEMENTATION
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999963605785424	WITHOUT_CLASSIFICATION	3.639421457736156E-6	IMPLEMENTATION
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.999998756496668	WITHOUT_CLASSIFICATION	1.2435033320280519E-6	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9996838484926936	WITHOUT_CLASSIFICATION	3.161515073064181E-4	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9996838484926936	WITHOUT_CLASSIFICATION	3.161515073064181E-4	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9996838484926936	WITHOUT_CLASSIFICATION	3.161515073064181E-4	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9996838484926936	WITHOUT_CLASSIFICATION	3.161515073064181E-4	IMPLEMENTATION
// snapshot of contents of directory // current position in directory	WITHOUT_CLASSIFICATION	0.9999995046960662	WITHOUT_CLASSIFICATION	4.95303933848494E-7	IMPLEMENTATION
// Exclusive locks in Java require the channel to be writable, otherwise // an exception is thrown (terminating JRuby execution). // But flock behavior of MRI is that it allows // exclusive locks even on non-writable file. So we convert exclusive // lock to shared lock if the channel is not writable, to better match // the MRI behavior.	WITHOUT_CLASSIFICATION	0.9899052895414527	WITHOUT_CLASSIFICATION	0.010094710458547242	IMPLEMENTATION
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9998706221796227	WITHOUT_CLASSIFICATION	1.2937782037729175E-4	IMPLEMENTATION
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9998706221796227	WITHOUT_CLASSIFICATION	1.2937782037729175E-4	IMPLEMENTATION
// set self to the class	WITHOUT_CLASSIFICATION	0.9998873183757946	WITHOUT_CLASSIFICATION	1.1268162420539435E-4	IMPLEMENTATION
/* ---------- Public fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999864130352919	WITHOUT_CLASSIFICATION	1.3586964708171806E-5	IMPLEMENTATION
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999034709132224	WITHOUT_CLASSIFICATION	9.652908677755318E-5	IMPLEMENTATION
// zero args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999504906389063	WITHOUT_CLASSIFICATION	4.9509361093678284E-5	IMPLEMENTATION
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9998595780419047	WITHOUT_CLASSIFICATION	1.4042195809527142E-4	IMPLEMENTATION
// Store each line into this list if not null.	WITHOUT_CLASSIFICATION	0.9994727653859192	WITHOUT_CLASSIFICATION	5.272346140807875E-4	IMPLEMENTATION
// Portion of line right after beginning marker	WITHOUT_CLASSIFICATION	0.999894143065149	WITHOUT_CLASSIFICATION	1.0585693485100229E-4	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9998297696313165	WITHOUT_CLASSIFICATION	1.702303686834856E-4	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9998297696313165	WITHOUT_CLASSIFICATION	1.702303686834856E-4	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9998297696313165	WITHOUT_CLASSIFICATION	1.702303686834856E-4	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9998297696313165	WITHOUT_CLASSIFICATION	1.702303686834856E-4	IMPLEMENTATION
// If an IO exception occurs (something odd, but possible) // A directory may return null.	WITHOUT_CLASSIFICATION	0.9999940090958167	WITHOUT_CLASSIFICATION	5.990904183370761E-6	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999936061265416	WITHOUT_CLASSIFICATION	6.393873458373529E-6	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999936061265416	WITHOUT_CLASSIFICATION	6.393873458373529E-6	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999936061265416	WITHOUT_CLASSIFICATION	6.393873458373529E-6	IMPLEMENTATION
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9989472873749592	WITHOUT_CLASSIFICATION	0.001052712625040843	IMPLEMENTATION
// finally with no exception	WITHOUT_CLASSIFICATION	0.999367006742466	WITHOUT_CLASSIFICATION	6.329932575340086E-4	IMPLEMENTATION
// Now, for all variables used by 'i' mark them live before 'i'	WITHOUT_CLASSIFICATION	0.9999700880461229	WITHOUT_CLASSIFICATION	2.99119538772074E-5	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.8621030793719444	IMPLEMENTATION	0.1378969206280555	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.8621030793719444	IMPLEMENTATION	0.1378969206280555	WITHOUT_CLASSIFICATION
/* The counting of slashes that follows is simply a way to adhere to          * Ruby's UNC (or something) compatibility. When Ruby's expand_path is          * called with "//foo//bar" it will return "//foo/bar". JRuby uses          * java.io.File, and hence returns "/foo/bar". In order to retain          * java.io.File in the lower layers and provide full Ruby          * compatibility, the number of extra slashes must be counted and          * prepended to the result.         */	WITHOUT_CLASSIFICATION	0.9999994615764174	WITHOUT_CLASSIFICATION	5.384235825613451E-7	IMPLEMENTATION
// This is almost always already interned, since it will be called with a symbol in most cases // but when created from Java code, we might get an argument that needs to be interned. // addAccessor has as a precondition that the string MUST be interned	WITHOUT_CLASSIFICATION	0.9999999998043989	WITHOUT_CLASSIFICATION	1.9560117242154272E-10	IMPLEMENTATION
/* not a class */	WITHOUT_CLASSIFICATION	0.9991353319115968	WITHOUT_CLASSIFICATION	8.646680884033358E-4	IMPLEMENTATION
/* not a class */	WITHOUT_CLASSIFICATION	0.9991353319115968	WITHOUT_CLASSIFICATION	8.646680884033358E-4	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9996215024605402	WITHOUT_CLASSIFICATION	3.7849753945978494E-4	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9996215024605402	WITHOUT_CLASSIFICATION	3.7849753945978494E-4	IMPLEMENTATION
// io.available() only returns 0 after EOF is encountered // so we need to differentiate between the empty string and EOF	WITHOUT_CLASSIFICATION	0.9999915068621567	WITHOUT_CLASSIFICATION	8.493137843389106E-6	IMPLEMENTATION
// In the current logic, if we get here we know that module is not an // IncludedModuleWrapper, so there's no need to fish out the delegate. But just // in case the logic should change later, let's do it anyway	WITHOUT_CLASSIFICATION	0.9936331871363294	WITHOUT_CLASSIFICATION	0.006366812863670514	IMPLEMENTATION
// rb_iterate((VALUE(*)_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);	WITHOUT_CLASSIFICATION	0.9997467728107063	WITHOUT_CLASSIFICATION	2.5322718929362756E-4	IMPLEMENTATION
// Broken symlinks considered by exists() as non-existing, // so we need to check for symlinks explicitly.	WITHOUT_CLASSIFICATION	0.9995647815484836	WITHOUT_CLASSIFICATION	4.352184515164401E-4	IMPLEMENTATION
// ////////////////// CONSTANT API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9997245110694687	WITHOUT_CLASSIFICATION	2.7548893053131016E-4	IMPLEMENTATION
// create the default thread group	WITHOUT_CLASSIFICATION	0.9998384780319521	WITHOUT_CLASSIFICATION	1.6152196804779503E-4	IMPLEMENTATION
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9997530594065932	WITHOUT_CLASSIFICATION	2.469405934067514E-4	IMPLEMENTATION
/* ============================     * Here are hash internals     * (This could be extracted to a separate class but it's not too large though)     * ============================     */	WITHOUT_CLASSIFICATION	0.9999993983080541	WITHOUT_CLASSIFICATION	6.016919460541546E-7	IMPLEMENTATION
// ////////////////// LOW-LEVEL CLASS VARIABLE INTERFACE //////////////// // // fetch/store/list class variables for this module //	WITHOUT_CLASSIFICATION	0.9999224568940838	WITHOUT_CLASSIFICATION	7.754310591619647E-5	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.999756975213214	WITHOUT_CLASSIFICATION	2.4302478678582236E-4	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.999756975213214	WITHOUT_CLASSIFICATION	2.4302478678582236E-4	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999877960886371	WITHOUT_CLASSIFICATION	1.2203911362974169E-5	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999877960886371	WITHOUT_CLASSIFICATION	1.2203911362974169E-5	IMPLEMENTATION
// retuns null when not found to avoid unnecessary getRuntime().getNil() call	WITHOUT_CLASSIFICATION	0.9930309667715962	WITHOUT_CLASSIFICATION	0.006969033228403816	IMPLEMENTATION
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9998864406198154	WITHOUT_CLASSIFICATION	1.135593801847354E-4	IMPLEMENTATION
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9998479724803608	WITHOUT_CLASSIFICATION	1.5202751963920946E-4	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9991225331279616	WITHOUT_CLASSIFICATION	8.774668720383485E-4	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9991225331279616	WITHOUT_CLASSIFICATION	8.774668720383485E-4	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9991225331279616	WITHOUT_CLASSIFICATION	8.774668720383485E-4	IMPLEMENTATION
// line 286	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 476	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 513	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 530	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 533	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 537	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 551	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// end loop	WITHOUT_CLASSIFICATION	0.9991257094482895	WITHOUT_CLASSIFICATION	8.742905517104743E-4	IMPLEMENTATION
// MRI behavior: we don't print errno for actual Errno errors	WITHOUT_CLASSIFICATION	0.999800979185638	WITHOUT_CLASSIFICATION	1.9902081436202392E-4	IMPLEMENTATION
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9973732537943609	WITHOUT_CLASSIFICATION	0.002626746205638977	IMPLEMENTATION
// Traverse the instructions in this basic block in reverse order! // Mark as dead all instructions whose results are not used! 	WITHOUT_CLASSIFICATION	0.9990346221666883	WITHOUT_CLASSIFICATION	9.653778333117587E-4	IMPLEMENTATION
// // fields should really be an immutable map as it is never modified after construction //	WITHOUT_CLASSIFICATION	0.9985239614574348	WITHOUT_CLASSIFICATION	0.0014760385425651443	IMPLEMENTATION
// load self object as IRubyObject, for recv param	WITHOUT_CLASSIFICATION	0.999961705270579	WITHOUT_CLASSIFICATION	3.8294729420983287E-5	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.8621030793719444	IMPLEMENTATION	0.1378969206280555	WITHOUT_CLASSIFICATION
// If we define a class in Ruby, but later want to allow it to be defined in Java, // the allocator needs to be updated	WITHOUT_CLASSIFICATION	0.9999357547939511	WITHOUT_CLASSIFICATION	6.424520604882197E-5	IMPLEMENTATION
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9994874269907071	WITHOUT_CLASSIFICATION	5.125730092928632E-4	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.999857310114494	WITHOUT_CLASSIFICATION	1.4268988550605625E-4	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9998920580249556	WITHOUT_CLASSIFICATION	1.0794197504441973E-4	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9998920580249556	WITHOUT_CLASSIFICATION	1.0794197504441973E-4	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9998920580249556	WITHOUT_CLASSIFICATION	1.0794197504441973E-4	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9998920580249556	WITHOUT_CLASSIFICATION	1.0794197504441973E-4	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9998920580249556	WITHOUT_CLASSIFICATION	1.0794197504441973E-4	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9965569656219369	WITHOUT_CLASSIFICATION	0.0034430343780632467	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9998920580249556	WITHOUT_CLASSIFICATION	1.0794197504441973E-4	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9998920580249556	WITHOUT_CLASSIFICATION	1.0794197504441973E-4	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9998920580249556	WITHOUT_CLASSIFICATION	1.0794197504441973E-4	IMPLEMENTATION
// MRI has extra pointer which makes our code look a little bit // more strange in // comparison	WITHOUT_CLASSIFICATION	0.9999673999747377	WITHOUT_CLASSIFICATION	3.2600025262286755E-5	IMPLEMENTATION
// Tempory buffer to build up a potential token.  Consumer takes responsibility to reset  // this before use.	WITHOUT_CLASSIFICATION	0.9999149622101466	WITHOUT_CLASSIFICATION	8.503778985341788E-5	IMPLEMENTATION
//tmpPosition is required because getPosition()'s side effects. //if the warning is generated, the getPosition() on line 954 (this line + 18) will create //a wrong position if the "inclusive" flag is not set.	WITHOUT_CLASSIFICATION	0.9968746710501859	WITHOUT_CLASSIFICATION	0.003125328949814128	IMPLEMENTATION
/* What is \v in C?                    case '\v':                        c2 = 'v';                        break;                        */	WITHOUT_CLASSIFICATION	0.9999715803063459	WITHOUT_CLASSIFICATION	2.8419693654106468E-5	IMPLEMENTATION
/* Consider Thread aspects of this */	WITHOUT_CLASSIFICATION	0.9999666769094209	WITHOUT_CLASSIFICATION	3.3323090579037265E-5	IMPLEMENTATION
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999997188761933	WITHOUT_CLASSIFICATION	2.8112380674288295E-7	IMPLEMENTATION
// An interrupt or timeout may have caused us to miss // a notify that we consumed, so do another notify in // case someone else is available to pick it up.	WITHOUT_CLASSIFICATION	0.9989388588555279	WITHOUT_CLASSIFICATION	0.0010611411444721524	IMPLEMENTATION
// line 572	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 601	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 601	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 625	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 649	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 691	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 723	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 732	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 745	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 766	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 785	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 794	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 800	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 812	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 827	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 839	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 845	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 864	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 886	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 896	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 911	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 929	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 952	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 970	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 972	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 991	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1011	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1026	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1038	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1067	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1085	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1097	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1105	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1122	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1133	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1145	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1169	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1201	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1210	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1229	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1261	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1287	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1293	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1307	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1320	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1325	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1363	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1398	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1448	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1456	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1473	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1492	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1513	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1523	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1562	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1582	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1603	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1603	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1615	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1620	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1635	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1652	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1681	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1708	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1716	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1755	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1772	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1789	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9990652123136763	WITHOUT_CLASSIFICATION	9.347876863236658E-4	IMPLEMENTATION
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9990652123136763	WITHOUT_CLASSIFICATION	9.347876863236658E-4	IMPLEMENTATION
/* force for args */	WITHOUT_CLASSIFICATION	0.9998698167654801	WITHOUT_CLASSIFICATION	1.30183234519791E-4	IMPLEMENTATION
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9991076731380282	WITHOUT_CLASSIFICATION	8.923268619717764E-4	IMPLEMENTATION
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9910370646434836	WITHOUT_CLASSIFICATION	0.008962935356516372	IMPLEMENTATION
// We can assign if we already have variable of that name here or we are the only // scope in the chain (which Local scopes always are).	WITHOUT_CLASSIFICATION	0.9999488001881854	WITHOUT_CLASSIFICATION	5.1199811814651854E-5	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9993994938508141	WITHOUT_CLASSIFICATION	6.00506149185828E-4	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9993994938508141	WITHOUT_CLASSIFICATION	6.00506149185828E-4	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9993994938508141	WITHOUT_CLASSIFICATION	6.00506149185828E-4	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9993994938508141	WITHOUT_CLASSIFICATION	6.00506149185828E-4	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9997439674466599	WITHOUT_CLASSIFICATION	2.560325533400232E-4	IMPLEMENTATION
/*     * This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:)     * into individual whenNodes.  The primary reason for this is to ensure lazy evaluation of     * the arguments (when foo,bar,gar:) to prevent side-effects.  In the old code this was done     * using nested when statements, which was awful for interpreter and compilation.     *     * Notes: This has semantic equivalence but will not be lexically equivalent.  Compiler     * needs to detect same bodies to simplify bytecode generated.     */	WITHOUT_CLASSIFICATION	0.9999908939805834	WITHOUT_CLASSIFICATION	9.106019416629209E-6	IMPLEMENTATION
// line 313	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 339	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 361	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 413	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 451	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 472	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 500	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 515	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 555	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 582	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 619	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 636	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 669	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 703	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 776	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 814	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 823	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 854	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 872	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 905	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 925	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 958	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 992	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1047	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1072	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1081	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1108	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1136	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1168	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1192	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1241	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1267	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1286	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1301	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1314	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1333	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1362	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1395	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1420	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1439	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1476	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1535	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1588	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1618	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1643	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1669	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1728	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1753	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1779	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1794	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1812	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1837	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1895	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1925	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1950	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 1992	WITHOUT_CLASSIFICATION	0.9992540269642255	WITHOUT_CLASSIFICATION	7.459730357744928E-4	IMPLEMENTATION
// line 2014	WITHOUT_CLASSIFICATION	0.9992546481234448	WITHOUT_CLASSIFICATION	7.45351876555286E-4	IMPLEMENTATION
// Whether this scope is used as the "argument scope" for e.g. zsuper	WITHOUT_CLASSIFICATION	0.9999026491288909	WITHOUT_CLASSIFICATION	9.735087110907088E-5	IMPLEMENTATION
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9990155390388314	WITHOUT_CLASSIFICATION	9.844609611686368E-4	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999941472071813	WITHOUT_CLASSIFICATION	5.85279281870885E-6	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999941472071813	WITHOUT_CLASSIFICATION	5.85279281870885E-6	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999941472071813	WITHOUT_CLASSIFICATION	5.85279281870885E-6	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999941472071813	WITHOUT_CLASSIFICATION	5.85279281870885E-6	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999941472071813	WITHOUT_CLASSIFICATION	5.85279281870885E-6	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999941472071813	WITHOUT_CLASSIFICATION	5.85279281870885E-6	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999941472071813	WITHOUT_CLASSIFICATION	5.85279281870885E-6	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9976484522410732	WITHOUT_CLASSIFICATION	0.0023515477589267702	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9976484522410732	WITHOUT_CLASSIFICATION	0.0023515477589267702	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9976484522410732	WITHOUT_CLASSIFICATION	0.0023515477589267702	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9976484522410732	WITHOUT_CLASSIFICATION	0.0023515477589267702	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9924425852157556	WITHOUT_CLASSIFICATION	0.007557414784244455	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9924425852157556	WITHOUT_CLASSIFICATION	0.007557414784244455	IMPLEMENTATION
// We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the // 'b' will get put into this new dynamic scope.  The original scope does not see the new // 'b' and successive evals with this binding will.  I take it having the ability to have  // succesive binding evals be able to share same scope makes sense from a programmers  // perspective.   One crappy outcome of this design is it requires Dynamic and Static  // scopes to be mutable for this one case.	WITHOUT_CLASSIFICATION	0.9999946810906855	WITHOUT_CLASSIFICATION	5.318909314475443E-6	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.999997395598461	WITHOUT_CLASSIFICATION	2.6044015389850056E-6	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.999997395598461	WITHOUT_CLASSIFICATION	2.6044015389850056E-6	IMPLEMENTATION
// tc // under method // self // under method // name // args	WITHOUT_CLASSIFICATION	0.9951259646270256	WITHOUT_CLASSIFICATION	0.004874035372974378	IMPLEMENTATION
// allow it to bubble up	WITHOUT_CLASSIFICATION	0.9995090292959696	WITHOUT_CLASSIFICATION	4.90970704030338E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999765765180218	WITHOUT_CLASSIFICATION	2.342348197820783E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999765765180218	WITHOUT_CLASSIFICATION	2.342348197820783E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999765765180218	WITHOUT_CLASSIFICATION	2.342348197820783E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999765765180218	WITHOUT_CLASSIFICATION	2.342348197820783E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999765765180218	WITHOUT_CLASSIFICATION	2.342348197820783E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999765765180218	WITHOUT_CLASSIFICATION	2.342348197820783E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999765765180218	WITHOUT_CLASSIFICATION	2.342348197820783E-4	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999765765180218	WITHOUT_CLASSIFICATION	2.342348197820783E-4	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999765765180218	WITHOUT_CLASSIFICATION	2.342348197820783E-4	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9976650557636056	WITHOUT_CLASSIFICATION	0.0023349442363943575	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9976650557636056	WITHOUT_CLASSIFICATION	0.0023349442363943575	IMPLEMENTATION
// Check for a builtin first.	WITHOUT_CLASSIFICATION	0.999976089787998	WITHOUT_CLASSIFICATION	2.3910212001977574E-5	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9996153682632261	WITHOUT_CLASSIFICATION	3.8463173677395654E-4	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9996153682632261	WITHOUT_CLASSIFICATION	3.8463173677395654E-4	IMPLEMENTATION
// Unfortunately, the number of digits in the exponent is // not clearly defined in Ruby documentation. This is a // platform/version-dependent behavior. On Linux/Mac/Cygwin/*nix, // two digits are used. On Windows, 3 digits are used. // It is desirable for JRuby to have consistent behavior, and // the two digits behavior was selected. This is also in sync // with "Java-native" sprintf behavior (java.util.Formatter). // E or e	WITHOUT_CLASSIFICATION	0.9999956156861625	WITHOUT_CLASSIFICATION	4.384313837577026E-6	IMPLEMENTATION
/** * Represents the the dynamic portion of scoping information.  The variableValues are the * values of assigned local or block variables.  The staticScope identifies which sort of * scope this is (block or local). *  * Properties of Dynamic Scopes: * 1. static and dynamic scopes have the same number of names to values * 2. size of variables (and thus names) is determined during parsing.  So those structured do *    not need to change * * FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents.  This * is harmless (other than wasting memory), but we should not do that.  We can fix this in two * ways: * 1. Fix all callers * 2. Check parent that is passed in and make if new instance is local, then its parent is not local */	WITHOUT_CLASSIFICATION	0.9989300395057459	WITHOUT_CLASSIFICATION	0.001069960494254133	IMPLEMENTATION
// This method handles '**/' patterns and delegates to // fnmatch_helper for the main work.	WITHOUT_CLASSIFICATION	0.9983636047371641	WITHOUT_CLASSIFICATION	0.0016363952628359558	IMPLEMENTATION
// Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern  // Example: foo{a{c},b}bar -> fooa{c}bar, foobbar	WITHOUT_CLASSIFICATION	0.9999969035997187	WITHOUT_CLASSIFICATION	3.0964002811842845E-6	IMPLEMENTATION
// double precision, native // double precision, native	WITHOUT_CLASSIFICATION	0.9999796538390265	WITHOUT_CLASSIFICATION	2.0346160973471797E-5	IMPLEMENTATION
// 64-bit number, native (as bignum)	WITHOUT_CLASSIFICATION	0.9998007750189852	WITHOUT_CLASSIFICATION	1.9922498101466638E-4	IMPLEMENTATION
// Next indicates to decode using native encoding format	WITHOUT_CLASSIFICATION	0.9998973132927726	WITHOUT_CLASSIFICATION	1.0268670722736665E-4	IMPLEMENTATION
// calculate based on a, b, c and d	WITHOUT_CLASSIFICATION	0.9998193350491775	WITHOUT_CLASSIFICATION	1.8066495082248355E-4	IMPLEMENTATION
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9989086253982564	WITHOUT_CLASSIFICATION	0.001091374601743531	IMPLEMENTATION
// MRI behavior:  for 'Q', do not add trailing nils	WITHOUT_CLASSIFICATION	0.9975870050474573	WITHOUT_CLASSIFICATION	0.002412994952542552	IMPLEMENTATION
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9999984359378499	WITHOUT_CLASSIFICATION	1.5640621501102732E-6	IMPLEMENTATION
// exec needs to behave differently in-process, because it's technically // supposed to replace the calling process. So if we're supposed to run // in-process, we allow it to use the default streams and not use // pumpers at all. See JRUBY-2156 and JRUBY-2154.	WITHOUT_CLASSIFICATION	0.9989564200624843	WITHOUT_CLASSIFICATION	0.0010435799375156899	IMPLEMENTATION
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999991993906728	WITHOUT_CLASSIFICATION	8.006093271557228E-7	IMPLEMENTATION
// The problem we trying to solve below: STDIN in Java // is blocked and non-interruptible, so if we invoke read // on it, we might never be able to interrupt such thread. // So, we use in.available() to see if there is any input // ready, and only then read it. But this approach can't // tell whether the end of stream reached or not, so we // might end up looping right at the end of the stream. // Well, at least, we can improve the situation by checking // if some input was ever available, and if so, not // checking for available anymore, and just go to read.	WITHOUT_CLASSIFICATION	0.9999999144934837	WITHOUT_CLASSIFICATION	8.550651638719723E-8	IMPLEMENTATION
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9996612626602932	WITHOUT_CLASSIFICATION	3.3873733970679344E-4	IMPLEMENTATION
// an empirically derived rule: precision applies to // significand length, irrespective of exponent	WITHOUT_CLASSIFICATION	0.9999765989101879	WITHOUT_CLASSIFICATION	2.3401089812167725E-5	IMPLEMENTATION
// an official rule, clarified: if the exponent // <clarif>after adjusting for exponent form</clarif> // is < -4,  or the exponent <clarif>after adjusting  // for exponent form</clarif> is greater than the // precision, use exponent form	WITHOUT_CLASSIFICATION	0.9999959301348518	WITHOUT_CLASSIFICATION	4.0698651483007975E-6	IMPLEMENTATION
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9999551204563485	WITHOUT_CLASSIFICATION	4.487954365151619E-5	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9983158159115848	WITHOUT_CLASSIFICATION	0.0016841840884151912	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9983158159115848	WITHOUT_CLASSIFICATION	0.0016841840884151912	IMPLEMENTATION
// MRI behavior: validate only the unnumbered arguments	WITHOUT_CLASSIFICATION	0.9996401560578223	WITHOUT_CLASSIFICATION	3.598439421776124E-4	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9998516260966039	WITHOUT_CLASSIFICATION	1.4837390339602738E-4	IMPLEMENTATION
// calculation for simple (and typical) case, // adapted from sun.misc.FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999272608072867	WITHOUT_CLASSIFICATION	7.273919271334343E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9998920580249556	WITHOUT_CLASSIFICATION	1.0794197504441973E-4	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9965570583364438	WITHOUT_CLASSIFICATION	0.003442941663556206	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9965570583364438	WITHOUT_CLASSIFICATION	0.003442941663556206	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9965570583364438	WITHOUT_CLASSIFICATION	0.003442941663556206	IMPLEMENTATION
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9994635873112743	WITHOUT_CLASSIFICATION	5.364126887256881E-4	IMPLEMENTATION
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9984071702521282	WITHOUT_CLASSIFICATION	0.0015928297478717654	IMPLEMENTATION
// call chmod after we created the RandomAccesFile // because otherwise, the file could be read-only	WITHOUT_CLASSIFICATION	0.9998129971609702	WITHOUT_CLASSIFICATION	1.8700283902997963E-4	IMPLEMENTATION
// attempt to set the permissions, if we have been passed a POSIX instance, // and only if the file was created in this call.	WITHOUT_CLASSIFICATION	0.9999906528030941	WITHOUT_CLASSIFICATION	9.347196906051543E-6	IMPLEMENTATION
// // When reading into a heap buffer, the jvm allocates a temporary // direct ByteBuffer of the requested size.  To avoid allocating // a huge direct buffer when doing ludicrous reads (e.g. 1G or more) // we split the read up into chunks of no more than 1M //	WITHOUT_CLASSIFICATION	0.999865221387533	WITHOUT_CLASSIFICATION	1.3477861246703732E-4	IMPLEMENTATION
// // If it is a file channel, then we can pre-allocate the output buffer // to the total size of buffered + remaining bytes in file //	WITHOUT_CLASSIFICATION	0.9998803680771343	WITHOUT_CLASSIFICATION	1.1963192286570266E-4	IMPLEMENTATION
// // Cannot discern the total read length - allocate at least enough for the buffered data //	WITHOUT_CLASSIFICATION	0.9999782526929191	WITHOUT_CLASSIFICATION	2.1747307080936095E-5	IMPLEMENTATION
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999852827917601	WITHOUT_CLASSIFICATION	1.4717208239745227E-5	IMPLEMENTATION
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9972062524669238	WITHOUT_CLASSIFICATION	0.0027937475330760886	IMPLEMENTATION
// already have some bytes buffered, just return those	WITHOUT_CLASSIFICATION	0.9999260221169094	WITHOUT_CLASSIFICATION	7.397788309057773E-5	IMPLEMENTATION
// reset buffer	WITHOUT_CLASSIFICATION	0.9975631459271654	WITHOUT_CLASSIFICATION	0.0024368540728345683	IMPLEMENTATION
// // Synchronize and re-check to avoid creating more than one Selector per provider //	WITHOUT_CLASSIFICATION	0.9946530491763884	WITHOUT_CLASSIFICATION	0.005346950823611514	IMPLEMENTATION
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.5701708817281751	IMPLEMENTATION	0.42982911827182485	WITHOUT_CLASSIFICATION
// Is there something built into JRuby to do this?	WITHOUT_CLASSIFICATION	0.9979238475991665	WITHOUT_CLASSIFICATION	0.002076152400833539	IMPLEMENTATION
// Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long // assertTrue(value == valueViaValuesIterator);	WITHOUT_CLASSIFICATION	0.9999545930157797	WITHOUT_CLASSIFICATION	4.540698422027717E-5	IMPLEMENTATION
// value equality //result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); //assertEquals("two", result);	WITHOUT_CLASSIFICATION	0.9998219258683063	WITHOUT_CLASSIFICATION	1.780741316937618E-4	IMPLEMENTATION
// Uncomment the "puts" lines if you want to see more detail	WITHOUT_CLASSIFICATION	0.9998802857671347	WITHOUT_CLASSIFICATION	1.1971423286525213E-4	IMPLEMENTATION
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999607348178181	WITHOUT_CLASSIFICATION	3.926518218196351E-5	IMPLEMENTATION
// change the thread context to include the class	WITHOUT_CLASSIFICATION	0.9997369175906823	WITHOUT_CLASSIFICATION	2.630824093176517E-4	IMPLEMENTATION
