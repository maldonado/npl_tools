// TODO: warn "tried to create Proc object without a block"	IMPLEMENTATION	0.9624758553390834	WITHOUT_CLASSIFICATION	0.03752414466091665	IMPLEMENTATION
// TODO: CLONE_SETUP here	IMPLEMENTATION	0.8623184848067582	WITHOUT_CLASSIFICATION	0.13768151519324176	IMPLEMENTATION
// TODO: Someday, enable.	IMPLEMENTATION	0.8671550942603141	WITHOUT_CLASSIFICATION	0.13284490573968588	IMPLEMENTATION
// Bunch of methods still not implemented	IMPLEMENTATION	0.8528409867942073	IMPLEMENTATION	0.14715901320579267	WITHOUT_CLASSIFICATION
// TODO: non-strict option	IMPLEMENTATION	0.7573969942369648	WITHOUT_CLASSIFICATION	0.24260300576303526	IMPLEMENTATION
// TODO: opt for 2 and 3 ?	IMPLEMENTATION	0.8878042036014149	WITHOUT_CLASSIFICATION	0.11219579639858511	IMPLEMENTATION
// FIXME: Should we make this work with platform's locale, // or continue hardcoding US?	IMPLEMENTATION	0.9977388134801621	WITHOUT_CLASSIFICATION	0.0022611865198378187	IMPLEMENTATION
// TODO: rescan code range ?	IMPLEMENTATION	0.9044126468308913	WITHOUT_CLASSIFICATION	0.09558735316910866	IMPLEMENTATION
// TODO: rescan code range ?	IMPLEMENTATION	0.9044126468308913	WITHOUT_CLASSIFICATION	0.09558735316910866	IMPLEMENTATION
// TODO: pass this in?	IMPLEMENTATION	0.8219639853478294	WITHOUT_CLASSIFICATION	0.17803601465217048	IMPLEMENTATION
// FIXME: Pass block down?	IMPLEMENTATION	0.9994952257395209	WITHOUT_CLASSIFICATION	5.047742604790716E-4	IMPLEMENTATION
// TODO: do something here?	IMPLEMENTATION	0.6394060260066042	WITHOUT_CLASSIFICATION	0.36059397399339566	IMPLEMENTATION
// TODO: port exact behavior from MRI, and move most locking logic into ChannelDescriptor // TODO: for all LOCK_NB cases, return false if they would block	IMPLEMENTATION	0.7640235496127824	WITHOUT_CLASSIFICATION	0.2359764503872176	IMPLEMENTATION
// TODO: check if too many open files, GC and try again	IMPLEMENTATION	0.5463035429536243	IMPLEMENTATION	0.45369645704637585	WITHOUT_CLASSIFICATION
//TODO deal with UNC names	IMPLEMENTATION	0.9997030791773859	WITHOUT_CLASSIFICATION	2.969208226141445E-4	IMPLEMENTATION
// FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.9988564455067652	WITHOUT_CLASSIFICATION	0.001143554493234701	IMPLEMENTATION
//FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.9995678184897383	WITHOUT_CLASSIFICATION	4.321815102617221E-4	IMPLEMENTATION
// TODO: SafeStringValue here	IMPLEMENTATION	0.8647456140716552	WITHOUT_CLASSIFICATION	0.13525438592834488	IMPLEMENTATION
// TODO: turn off readable? am I reading this right? // This only seems to be used while duping below, since modes gets // reset to actual modes afterward //fptr->mode &= (m & FMODE_READABLE) ? ~FMODE_READABLE : ~FMODE_WRITABLE;	IMPLEMENTATION	0.9659519877594861	WITHOUT_CLASSIFICATION	0.034048012240513806	IMPLEMENTATION
// TODO: check safe, taint on incoming string	IMPLEMENTATION	0.6129233956103282	WITHOUT_CLASSIFICATION	0.3870766043896719	IMPLEMENTATION
// TODO: pipe handler to be reopened with path and "w" mode	IMPLEMENTATION	0.8955584906277995	WITHOUT_CLASSIFICATION	0.10444150937220059	IMPLEMENTATION
// FIXME: add text mode to mode flags	IMPLEMENTATION	0.9997242165325425	WITHOUT_CLASSIFICATION	2.757834674574615E-4	IMPLEMENTATION
// TODO: Something about pipe buffer length here	IMPLEMENTATION	0.9237279529325422	WITHOUT_CLASSIFICATION	0.07627204706745783	IMPLEMENTATION
// TODO: handle errors in buffered write by retrying until finished or file is closed	IMPLEMENTATION	0.9363163983921208	IMPLEMENTATION	0.06368360160787938	WITHOUT_CLASSIFICATION
// TODO: notify threads waiting on descriptors/IO? probably not...	IMPLEMENTATION	0.6645286022581866	WITHOUT_CLASSIFICATION	0.3354713977418135	IMPLEMENTATION
// TODO: Ruby re-checks that the buffer string hasn't been modified	IMPLEMENTATION	0.9143424430966551	WITHOUT_CLASSIFICATION	0.08565755690334488	IMPLEMENTATION
// TODO: Ruby unlocks the string here	IMPLEMENTATION	0.8510633578562555	WITHOUT_CLASSIFICATION	0.14893664214374444	IMPLEMENTATION
// TODO: Ruby truncates string to specific size here, but our bytelist should handle this already?	IMPLEMENTATION	0.7154088882966326	WITHOUT_CLASSIFICATION	0.2845911117033673	IMPLEMENTATION
// TODO: Ruby unlocks the string here	IMPLEMENTATION	0.8510633578562555	WITHOUT_CLASSIFICATION	0.14893664214374444	IMPLEMENTATION
// TODO: Ruby truncates string to specific size here, but our bytelist should handle this already?	IMPLEMENTATION	0.7154088882966326	WITHOUT_CLASSIFICATION	0.2845911117033673	IMPLEMENTATION
// TODO: ruby locks the string here	IMPLEMENTATION	0.9466616281613334	WITHOUT_CLASSIFICATION	0.053338371838666715	IMPLEMENTATION
// TODO same zero-length checks as file above	IMPLEMENTATION	0.9822299182373285	WITHOUT_CLASSIFICATION	0.01777008176267148	IMPLEMENTATION
// TODO: MRI also can hadle Bignum here	IMPLEMENTATION	0.8255593281341764	WITHOUT_CLASSIFICATION	0.1744406718658235	IMPLEMENTATION
// TODO: make threadsafe	IMPLEMENTATION	0.7182086333278401	WITHOUT_CLASSIFICATION	0.28179136667215976	IMPLEMENTATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9339731658610261	WITHOUT_CLASSIFICATION	0.06602683413897388	IMPLEMENTATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9339731658610261	WITHOUT_CLASSIFICATION	0.06602683413897388	IMPLEMENTATION
// FIXME: create AttrReaderMethod, AttrWriterMethod, for faster attr access	IMPLEMENTATION	0.9996501141523851	WITHOUT_CLASSIFICATION	3.498858476148883E-4	IMPLEMENTATION
// Do not clone cached methods // FIXME: MRI copies all methods here	IMPLEMENTATION	0.9997896260357784	WITHOUT_CLASSIFICATION	2.1037396422159197E-4	IMPLEMENTATION
// TODO: don't calculate the same value 3 times	IMPLEMENTATION	0.9883745896290341	WITHOUT_CLASSIFICATION	0.01162541037096596	IMPLEMENTATION
// TODO: 3 times calculate the same value below	IMPLEMENTATION	0.9839019883761649	WITHOUT_CLASSIFICATION	0.016098011623835017	IMPLEMENTATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.8352635266332782	WITHOUT_CLASSIFICATION	0.1647364733667218	IMPLEMENTATION
// TODO: Store BEGIN and END information into this node	IMPLEMENTATION	0.9430772133426722	WITHOUT_CLASSIFICATION	0.05692278665732776	IMPLEMENTATION
// TODO: put these nil guards into tree (bigger than I want to do right now)	IMPLEMENTATION	0.7659005772156273	WITHOUT_CLASSIFICATION	0.23409942278437276	IMPLEMENTATION
// FIXME: Make bodyNode non-null in parser	IMPLEMENTATION	0.9995901685179157	WITHOUT_CLASSIFICATION	4.098314820843095E-4	IMPLEMENTATION
// TODO: call config with scope but no frame	IMPLEMENTATION	0.8534679735477576	WITHOUT_CLASSIFICATION	0.14653202645224242	IMPLEMENTATION
// TODO: add trace call?	IMPLEMENTATION	0.5127670446615673	IMPLEMENTATION	0.4872329553384328	WITHOUT_CLASSIFICATION
// FIXME: missing arity check	IMPLEMENTATION	0.9995628083614536	WITHOUT_CLASSIFICATION	4.37191638546386E-4	IMPLEMENTATION
// FIXME: optimize for cases where we have no false branch	IMPLEMENTATION	0.999452382151211	WITHOUT_CLASSIFICATION	5.476178487890118E-4	IMPLEMENTATION
// FIXME: after jump is not in here.  Will if ever be? //Label afterJmp = new Label();	IMPLEMENTATION	0.9997823154346566	WITHOUT_CLASSIFICATION	2.1768456534340268E-4	IMPLEMENTATION
// TODO: build arg list based on number of args, optionals, etc	IMPLEMENTATION	0.954533033526785	WITHOUT_CLASSIFICATION	0.04546696647321498	IMPLEMENTATION
// FIXME: missing arity check	IMPLEMENTATION	0.9995628083614536	WITHOUT_CLASSIFICATION	4.37191638546386E-4	IMPLEMENTATION
// SSS FIXME: Traverse up the scope hierarchy to find the constant as long as the parent is a static scope	IMPLEMENTATION	0.9999873326404308	WITHOUT_CLASSIFICATION	1.2667359569136538E-5	IMPLEMENTATION
// SSS FIXME: Should I be returning the operand constructed here?	IMPLEMENTATION	0.9998320104987773	WITHOUT_CLASSIFICATION	1.6798950122270045E-4	IMPLEMENTATION
// TODO: Add IR instructions for checking method arity! // s.getVariableCompiler().checkMethodArity(required, opt, rest);	IMPLEMENTATION	0.8017885950489796	WITHOUT_CLASSIFICATION	0.1982114049510205	IMPLEMENTATION
// FIXME: Ruby 1.9 post args code needs to come here	IMPLEMENTATION	0.999391967336802	WITHOUT_CLASSIFICATION	6.080326631979272E-4	IMPLEMENTATION
// SSS: FIXME: Somewhere here, we need to record information the type of this operand as String	IMPLEMENTATION	0.9999420441360524	WITHOUT_CLASSIFICATION	5.795586394760324E-5	IMPLEMENTATION
// FIXME: Translate this call below! // s.unwrapPassedBlock();	IMPLEMENTATION	0.9993223803911888	WITHOUT_CLASSIFICATION	6.77619608811309E-4	IMPLEMENTATION
// SSS FIXME: We need to build debug information tracking into the IR in some fashion // So, these methods below would have to have equivalents in IR_Scope implementations.	IMPLEMENTATION	0.9803935439360595	WITHOUT_CLASSIFICATION	0.01960645606394049	IMPLEMENTATION
// SSS FIXME: Incomplete!	IMPLEMENTATION	0.9997157512750915	WITHOUT_CLASSIFICATION	2.842487249085069E-4	IMPLEMENTATION
// SSS FIXME: Pick one of bytelist or string, or add internal conversion methods to convert to the default representation	IMPLEMENTATION	0.9999788181259812	WITHOUT_CLASSIFICATION	2.118187401871394E-5	IMPLEMENTATION
// SSS FIXME: To be done	IMPLEMENTATION	0.9997826370246067	WITHOUT_CLASSIFICATION	2.1736297539325173E-4	IMPLEMENTATION
//TODO: implement, won't do this now	IMPLEMENTATION	0.9404764832770004	IMPLEMENTATION	0.05952351672299967	WITHOUT_CLASSIFICATION
//TODO: implement, won't do this now	IMPLEMENTATION	0.9404764832770004	IMPLEMENTATION	0.05952351672299967	WITHOUT_CLASSIFICATION
// TODO: validate port as numeric	IMPLEMENTATION	0.9474396054037577	WITHOUT_CLASSIFICATION	0.05256039459624236	IMPLEMENTATION
// TODO: this code should really check if a Ruby equals method is implemented or not.	IMPLEMENTATION	0.9820668990149964	IMPLEMENTATION	0.01793310098500359	WITHOUT_CLASSIFICATION
// if not already defined, we add a 'new' that guesses at which signature to use // TODO: just adding first one right now...add in signature-guessing logic	IMPLEMENTATION	0.9918760707390779	WITHOUT_CLASSIFICATION	0.008123929260922097	IMPLEMENTATION
// TODO: deal with varargs	IMPLEMENTATION	0.883679779623431	WITHOUT_CLASSIFICATION	0.116320220376569	IMPLEMENTATION
// TODO: deal with varargs	IMPLEMENTATION	0.883679779623431	WITHOUT_CLASSIFICATION	0.116320220376569	IMPLEMENTATION
// TODO: other reserved names?	IMPLEMENTATION	0.8811583627730905	WITHOUT_CLASSIFICATION	0.1188416372269095	IMPLEMENTATION
// TODO: we can probably release our references to the constantFields // array and static/instance callback hashes at this point. 	IMPLEMENTATION	0.9939963211887854	WITHOUT_CLASSIFICATION	0.006003678811214575	IMPLEMENTATION
// TODO: Formalize conversion mechanisms between Java and Ruby	IMPLEMENTATION	0.934548223454294	WITHOUT_CLASSIFICATION	0.06545177654570596	IMPLEMENTATION
// XXX: Check if it's appropriate type?	IMPLEMENTATION	0.999772527106219	WITHOUT_CLASSIFICATION	2.2747289378102398E-4	IMPLEMENTATION
// TODO: call ruby method	IMPLEMENTATION	0.8341254822090524	WITHOUT_CLASSIFICATION	0.16587451779094775	IMPLEMENTATION
// TODO: call ruby method	IMPLEMENTATION	0.8341254822090524	WITHOUT_CLASSIFICATION	0.16587451779094775	IMPLEMENTATION
// TODO: Add safety check for taintedness	IMPLEMENTATION	0.8188522904506776	WITHOUT_CLASSIFICATION	0.18114770954932238	IMPLEMENTATION
// FIXME: Need to detect magic_comment in 1.9 here for encoding	IMPLEMENTATION	0.999409919573581	WITHOUT_CLASSIFICATION	5.900804264189865E-4	IMPLEMENTATION
/* xxx shouldn't check if valid option variable */	IMPLEMENTATION	0.9998991736075116	WITHOUT_CLASSIFICATION	1.008263924883537E-4	IMPLEMENTATION
// TODO: this isn't handling multibyte yet	IMPLEMENTATION	0.7655156659811924	WITHOUT_CLASSIFICATION	0.2344843340188076	IMPLEMENTATION
// TODO: This should be something else like a tCHAR	IMPLEMENTATION	0.8358386563176892	IMPLEMENTATION	0.16416134368231075	WITHOUT_CLASSIFICATION
// FIXME: \r logic needed	IMPLEMENTATION	0.9974021417196313	WITHOUT_CLASSIFICATION	0.0025978582803688373	IMPLEMENTATION
// TODO: note lack of command.com support for Win 9x...	IMPLEMENTATION	0.6705388928219439	IMPLEMENTATION	0.329461107178056	WITHOUT_CLASSIFICATION
// FIXME: Make thread pool threads daemons if necessary	IMPLEMENTATION	0.999585991131962	WITHOUT_CLASSIFICATION	4.1400886803804574E-4	IMPLEMENTATION
/* FIXME: We may be intern'ing more than once.*/	IMPLEMENTATION	0.9996841660729848	WITHOUT_CLASSIFICATION	3.1583392701515947E-4	IMPLEMENTATION
/* FIXME: We may be intern'ing more than once.*/	IMPLEMENTATION	0.9996841660729848	WITHOUT_CLASSIFICATION	3.1583392701515947E-4	IMPLEMENTATION
/* FIXME: arg_concat missing for opt_call_args*/	IMPLEMENTATION	0.9997930226635913	WITHOUT_CLASSIFICATION	2.069773364086713E-4	IMPLEMENTATION
/* FIXME: arg_concat logic missing for opt_call_args*/	IMPLEMENTATION	0.9998004271242106	WITHOUT_CLASSIFICATION	1.9957287578945403E-4	IMPLEMENTATION
// FIXME: This needs to happen for lambdas //            args.checkArgCount(runtime, parameters.length);	IMPLEMENTATION	0.9994687256378728	WITHOUT_CLASSIFICATION	5.31274362127203E-4	IMPLEMENTATION
// FIXME: This needs to happen for lambdas //            args.checkArgCount(runtime, parameters.length);	IMPLEMENTATION	0.9994687256378728	WITHOUT_CLASSIFICATION	5.31274362127203E-4	IMPLEMENTATION
// TODO: make it cross runtime safe by COW or eager copy	IMPLEMENTATION	0.8597922844200235	WITHOUT_CLASSIFICATION	0.14020771557997652	IMPLEMENTATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.9996110204258581	WITHOUT_CLASSIFICATION	3.8897957414184487E-4	IMPLEMENTATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.9996110204258581	WITHOUT_CLASSIFICATION	3.8897957414184487E-4	IMPLEMENTATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.9996110204258581	WITHOUT_CLASSIFICATION	3.8897957414184487E-4	IMPLEMENTATION
// TODO: check the return value here	IMPLEMENTATION	0.6784408511854446	IMPLEMENTATION	0.32155914881455533	WITHOUT_CLASSIFICATION
// TODO: check the return value here	IMPLEMENTATION	0.6784408511854446	IMPLEMENTATION	0.32155914881455533	WITHOUT_CLASSIFICATION
// TODO: Make sure all appropriate open flags are added to this check.	IMPLEMENTATION	0.6499335018975302	WITHOUT_CLASSIFICATION	0.3500664981024699	IMPLEMENTATION
//subList.clear(); // Sublist is supposed to share same backing store as list...TODO in RubyArray. //assertTrue(list.size() == 1);	IMPLEMENTATION	0.9998835103549526	WITHOUT_CLASSIFICATION	1.1648964504733929E-4	IMPLEMENTATION
// SSS FIXME: Cannot optimize this without assuming that Range.to_ary method has not redefined. // So for now, return null!	IMPLEMENTATION	0.9996326858481078	WITHOUT_CLASSIFICATION	3.6731415189219813E-4	IMPLEMENTATION
// TODO Auto-generated method stub	IMPLEMENTATION	0.9999940633651323	IMPLEMENTATION	5.93663486772534E-6	WITHOUT_CLASSIFICATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.9999348933505084	IMPLEMENTATION	6.510664949159489E-5	WITHOUT_CLASSIFICATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.9999348933505084	IMPLEMENTATION	6.510664949159489E-5	WITHOUT_CLASSIFICATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.9999348933505084	IMPLEMENTATION	6.510664949159489E-5	WITHOUT_CLASSIFICATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.8352635266332782	WITHOUT_CLASSIFICATION	0.1647364733667218	IMPLEMENTATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.8352635266332782	WITHOUT_CLASSIFICATION	0.1647364733667218	IMPLEMENTATION
// TODO: check for ascii string	IMPLEMENTATION	0.6939097140848488	WITHOUT_CLASSIFICATION	0.3060902859151512	IMPLEMENTATION
// filter out any Java primitive names // TODO: should check against all Java reserved names here, not just primitives	IMPLEMENTATION	0.9569172160536786	WITHOUT_CLASSIFICATION	0.043082783946321444	IMPLEMENTATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9339731658610261	WITHOUT_CLASSIFICATION	0.06602683413897388	IMPLEMENTATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9339731658610261	WITHOUT_CLASSIFICATION	0.06602683413897388	IMPLEMENTATION
// TODO: missing additional logic for dealing with conflicting protected fields.	IMPLEMENTATION	0.926444608337888	WITHOUT_CLASSIFICATION	0.07355539166211195	IMPLEMENTATION
// TODO: better detection when path is absolute or not. // If the path isn't absolute, then prepend the current working // directory to the path.	IMPLEMENTATION	0.9937003518355279	WITHOUT_CLASSIFICATION	0.006299648164472253	IMPLEMENTATION
// FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.9988564455067652	WITHOUT_CLASSIFICATION	0.001143554493234701	IMPLEMENTATION
// FIX replace type() == ... with isInstanceOf(...)	IMPLEMENTATION	0.9999031106946346	WITHOUT_CLASSIFICATION	9.688930536550916E-5	IMPLEMENTATION
/* TODO: MRI is just a when node.  We need this extra logic for IDE consumers (null in casenode statement should be implicit nil)*/	IMPLEMENTATION	0.9541600248807748	WITHOUT_CLASSIFICATION	0.04583997511922525	IMPLEMENTATION
// TODO: This and recacheRespondsTo needed to be synchronized for JRUBY-3466, // but this degraded performance nearly 2x. It's still faster than MRI, but // a reanalysis of this code may show a faster way to ensure we're caching // safely.	IMPLEMENTATION	0.623966741094884	IMPLEMENTATION	0.37603325890511613	WITHOUT_CLASSIFICATION
// TODO: adjust length so it won't fall in the middle  // of a multi-byte character. MRI's sprintf.c uses tables // in a modified version of regex.c, which assume some // particular  encoding for a given installation/application. // (See regex.c#re_mbcinit in ruby-1.8.5-p12)  // // This is only an issue if the user specifies a precision // that causes the string to be truncated. The same issue // would arise taking a substring of a ByteList-backed RubyString.	IMPLEMENTATION	0.9984597736382481	WITHOUT_CLASSIFICATION	0.0015402263617518965	IMPLEMENTATION
// set constants now that they're initialized	WITHOUT_CLASSIFICATION	0.9999750376063975	WITHOUT_CLASSIFICATION	2.4962393602420187E-5	IMPLEMENTATION
// line 335	WITHOUT_CLASSIFICATION	0.9998871047884604	WITHOUT_CLASSIFICATION	1.1289521153963082E-4	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9998415686846777	WITHOUT_CLASSIFICATION	1.5843131532233462E-4	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9998415686846777	WITHOUT_CLASSIFICATION	1.5843131532233462E-4	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9998415686846777	WITHOUT_CLASSIFICATION	1.5843131532233462E-4	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9998415686846777	WITHOUT_CLASSIFICATION	1.5843131532233462E-4	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9998415686846777	WITHOUT_CLASSIFICATION	1.5843131532233462E-4	IMPLEMENTATION
// Figure end-char.  '\0' is special to indicate begin=end and that no nesting?	WITHOUT_CLASSIFICATION	0.9999127514759344	WITHOUT_CLASSIFICATION	8.724852406551883E-5	IMPLEMENTATION
// line 362	WITHOUT_CLASSIFICATION	0.9998871047884604	WITHOUT_CLASSIFICATION	1.1289521153963082E-4	IMPLEMENTATION
// line 372	WITHOUT_CLASSIFICATION	0.9998871047884604	WITHOUT_CLASSIFICATION	1.1289521153963082E-4	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9998406729925768	WITHOUT_CLASSIFICATION	1.593270074231714E-4	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9998406729925768	WITHOUT_CLASSIFICATION	1.593270074231714E-4	IMPLEMENTATION
// line 391	WITHOUT_CLASSIFICATION	0.9998871047884604	WITHOUT_CLASSIFICATION	1.1289521153963082E-4	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9998406729925768	WITHOUT_CLASSIFICATION	1.593270074231714E-4	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9998406729925768	WITHOUT_CLASSIFICATION	1.593270074231714E-4	IMPLEMENTATION
/* ^D */	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
/* ^Z */	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9998415686846777	WITHOUT_CLASSIFICATION	1.5843131532233462E-4	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9998415686846777	WITHOUT_CLASSIFICATION	1.5843131532233462E-4	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9998415686846777	WITHOUT_CLASSIFICATION	1.5843131532233462E-4	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9998415686846777	WITHOUT_CLASSIFICATION	1.5843131532233462E-4	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9998415686846777	WITHOUT_CLASSIFICATION	1.5843131532233462E-4	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9998415686846777	WITHOUT_CLASSIFICATION	1.5843131532233462E-4	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9998415686846777	WITHOUT_CLASSIFICATION	1.5843131532233462E-4	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9998415686846777	WITHOUT_CLASSIFICATION	1.5843131532233462E-4	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9998415686846777	WITHOUT_CLASSIFICATION	1.5843131532233462E-4	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9998415686846777	WITHOUT_CLASSIFICATION	1.5843131532233462E-4	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9998415686846777	WITHOUT_CLASSIFICATION	1.5843131532233462E-4	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9998415686846777	WITHOUT_CLASSIFICATION	1.5843131532233462E-4	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9998415686846777	WITHOUT_CLASSIFICATION	1.5843131532233462E-4	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9998415686846777	WITHOUT_CLASSIFICATION	1.5843131532233462E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998415686846777	WITHOUT_CLASSIFICATION	1.5843131532233462E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998415686846777	WITHOUT_CLASSIFICATION	1.5843131532233462E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998415686846777	WITHOUT_CLASSIFICATION	1.5843131532233462E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998415686846777	WITHOUT_CLASSIFICATION	1.5843131532233462E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998415686846777	WITHOUT_CLASSIFICATION	1.5843131532233462E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998415686846777	WITHOUT_CLASSIFICATION	1.5843131532233462E-4	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9998406729925768	WITHOUT_CLASSIFICATION	1.593270074231714E-4	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9998406729925768	WITHOUT_CLASSIFICATION	1.593270074231714E-4	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9998406729925768	WITHOUT_CLASSIFICATION	1.593270074231714E-4	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9998406729925768	WITHOUT_CLASSIFICATION	1.593270074231714E-4	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9998406729925768	WITHOUT_CLASSIFICATION	1.593270074231714E-4	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9998406729925768	WITHOUT_CLASSIFICATION	1.593270074231714E-4	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9998406729925768	WITHOUT_CLASSIFICATION	1.593270074231714E-4	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9998406729925768	WITHOUT_CLASSIFICATION	1.593270074231714E-4	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9998406729925768	WITHOUT_CLASSIFICATION	1.593270074231714E-4	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9998406729925768	WITHOUT_CLASSIFICATION	1.593270074231714E-4	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9998406729925768	WITHOUT_CLASSIFICATION	1.593270074231714E-4	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9998406729925768	WITHOUT_CLASSIFICATION	1.593270074231714E-4	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9998406729925768	WITHOUT_CLASSIFICATION	1.593270074231714E-4	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9998406729925768	WITHOUT_CLASSIFICATION	1.593270074231714E-4	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9998406729925768	WITHOUT_CLASSIFICATION	1.593270074231714E-4	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9998406729925768	WITHOUT_CLASSIFICATION	1.593270074231714E-4	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9998406729925768	WITHOUT_CLASSIFICATION	1.593270074231714E-4	IMPLEMENTATION
//Do nothing	WITHOUT_CLASSIFICATION	0.999953735535355	WITHOUT_CLASSIFICATION	4.626446464484525E-5	IMPLEMENTATION
//Do nothing	WITHOUT_CLASSIFICATION	0.999953735535355	WITHOUT_CLASSIFICATION	4.626446464484525E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9979767080534173	WITHOUT_CLASSIFICATION	0.002023291946582685	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9979767080534173	WITHOUT_CLASSIFICATION	0.002023291946582685	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9979767080534173	WITHOUT_CLASSIFICATION	0.002023291946582685	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9979767080534173	WITHOUT_CLASSIFICATION	0.002023291946582685	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9979767080534173	WITHOUT_CLASSIFICATION	0.002023291946582685	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9979767080534173	WITHOUT_CLASSIFICATION	0.002023291946582685	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9979767080534173	WITHOUT_CLASSIFICATION	0.002023291946582685	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9979767080534173	WITHOUT_CLASSIFICATION	0.002023291946582685	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9979767080534173	WITHOUT_CLASSIFICATION	0.002023291946582685	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9979767080534173	WITHOUT_CLASSIFICATION	0.002023291946582685	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9979767080534173	WITHOUT_CLASSIFICATION	0.002023291946582685	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9979767080534173	WITHOUT_CLASSIFICATION	0.002023291946582685	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9979767080534173	WITHOUT_CLASSIFICATION	0.002023291946582685	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9979767080534173	WITHOUT_CLASSIFICATION	0.002023291946582685	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9979767080534173	WITHOUT_CLASSIFICATION	0.002023291946582685	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9979767080534173	WITHOUT_CLASSIFICATION	0.002023291946582685	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9979767080534173	WITHOUT_CLASSIFICATION	0.002023291946582685	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9979767080534173	WITHOUT_CLASSIFICATION	0.002023291946582685	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9979767080534173	WITHOUT_CLASSIFICATION	0.002023291946582685	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9979767080534173	WITHOUT_CLASSIFICATION	0.002023291946582685	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9979767080534173	WITHOUT_CLASSIFICATION	0.002023291946582685	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9979767080534173	WITHOUT_CLASSIFICATION	0.002023291946582685	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9979767080534173	WITHOUT_CLASSIFICATION	0.002023291946582685	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9979767080534173	WITHOUT_CLASSIFICATION	0.002023291946582685	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9979767080534173	WITHOUT_CLASSIFICATION	0.002023291946582685	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9979767080534173	WITHOUT_CLASSIFICATION	0.002023291946582685	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9979767080534173	WITHOUT_CLASSIFICATION	0.002023291946582685	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9979767080534173	WITHOUT_CLASSIFICATION	0.002023291946582685	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9979767080534173	WITHOUT_CLASSIFICATION	0.002023291946582685	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9979767080534173	WITHOUT_CLASSIFICATION	0.002023291946582685	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9979767080534173	WITHOUT_CLASSIFICATION	0.002023291946582685	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9979767080534173	WITHOUT_CLASSIFICATION	0.002023291946582685	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9979767080534173	WITHOUT_CLASSIFICATION	0.002023291946582685	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9979767080534173	WITHOUT_CLASSIFICATION	0.002023291946582685	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9979767080534173	WITHOUT_CLASSIFICATION	0.002023291946582685	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9979767080534173	WITHOUT_CLASSIFICATION	0.002023291946582685	IMPLEMENTATION
// return result	WITHOUT_CLASSIFICATION	0.9999777380341939	WITHOUT_CLASSIFICATION	2.2261965806154282E-5	IMPLEMENTATION
// name	WITHOUT_CLASSIFICATION	0.9971791198527167	WITHOUT_CLASSIFICATION	0.002820880147283319	IMPLEMENTATION
// Define System.getProperties() in ENV_JAVA	WITHOUT_CLASSIFICATION	0.9999133470732531	WITHOUT_CLASSIFICATION	8.665292674697264E-5	IMPLEMENTATION
// Accessor methods.	WITHOUT_CLASSIFICATION	0.9998778024196776	WITHOUT_CLASSIFICATION	1.2219758032235538E-4	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9998618413518703	WITHOUT_CLASSIFICATION	1.3815864812978784E-4	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9998618413518703	WITHOUT_CLASSIFICATION	1.3815864812978784E-4	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9998618413518703	WITHOUT_CLASSIFICATION	1.3815864812978784E-4	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9998618413518703	WITHOUT_CLASSIFICATION	1.3815864812978784E-4	IMPLEMENTATION
// call getpwent to fail early if unsupported	WITHOUT_CLASSIFICATION	0.9999184425607541	WITHOUT_CLASSIFICATION	8.155743924581118E-5	IMPLEMENTATION
// fall back on env entry for USER	WITHOUT_CLASSIFICATION	0.9998914961608798	WITHOUT_CLASSIFICATION	1.085038391201452E-4	IMPLEMENTATION
// try to read grent to fail fast	WITHOUT_CLASSIFICATION	0.9999535942886053	WITHOUT_CLASSIFICATION	4.640571139471769E-5	IMPLEMENTATION
// define ARGV and $* for this runtime	WITHOUT_CLASSIFICATION	0.9999454295377588	WITHOUT_CLASSIFICATION	5.457046224115222E-5	IMPLEMENTATION
// Version information:	WITHOUT_CLASSIFICATION	0.9999316243253098	WITHOUT_CLASSIFICATION	6.837567469020761E-5	IMPLEMENTATION
// after defn of $stderr as the call may produce warnings	WITHOUT_CLASSIFICATION	0.9999348814942096	WITHOUT_CLASSIFICATION	6.511850579039204E-5	IMPLEMENTATION
// ARGF, $< object	WITHOUT_CLASSIFICATION	0.9998818159037333	WITHOUT_CLASSIFICATION	1.1818409626670231E-4	IMPLEMENTATION
// if the environment variables can't be obtained, define an empty ENV	WITHOUT_CLASSIFICATION	0.9999827943822656	WITHOUT_CLASSIFICATION	1.7205617734440564E-5	IMPLEMENTATION
// On platforms without a c-library accessable through JNA, getpid will return hashCode  // as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing // $$ on getpid() where available, we have the same semantics as MRI.	WITHOUT_CLASSIFICATION	0.9999872410455034	WITHOUT_CLASSIFICATION	1.2758954496684745E-5	IMPLEMENTATION
//$@ returns nil if $!.backtrace is not an array	WITHOUT_CLASSIFICATION	0.9999562084770365	WITHOUT_CLASSIFICATION	4.379152296358619E-5	IMPLEMENTATION
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999280640555817	WITHOUT_CLASSIFICATION	7.193594441837718E-5	IMPLEMENTATION
// MRI behavior: just plain '//' or '\\\\' are considered illegal on Windows.	WITHOUT_CLASSIFICATION	0.9999212501537375	WITHOUT_CLASSIFICATION	7.874984626265032E-5	IMPLEMENTATION
// this _is_ legal (when removing an undef)	WITHOUT_CLASSIFICATION	0.9998903992575255	WITHOUT_CLASSIFICATION	1.0960074247436103E-4	IMPLEMENTATION
// What we passed to the constructor for method 'path'	WITHOUT_CLASSIFICATION	0.9999449393666993	WITHOUT_CLASSIFICATION	5.506063330062952E-5	IMPLEMENTATION
// ----- Ruby Class Methods ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999822384802678	WITHOUT_CLASSIFICATION	1.776151973220532E-5	IMPLEMENTATION
// // CONSTANT TABLE METHODS - pass to delegate //	WITHOUT_CLASSIFICATION	0.9999166528631763	WITHOUT_CLASSIFICATION	8.334713682366137E-5	IMPLEMENTATION
// We get canonical path to try and flatten the path out. // a dir '/subdir/..' should return as '/' // cnutter: Do we want to flatten path out?	WITHOUT_CLASSIFICATION	0.9997217676919192	WITHOUT_CLASSIFICATION	2.782323080808425E-4	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9998618413518703	WITHOUT_CLASSIFICATION	1.3815864812978784E-4	IMPLEMENTATION
// ----- Ruby Instance Methods -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999846924878848	WITHOUT_CLASSIFICATION	1.5307512115182727E-5	IMPLEMENTATION
// Make sure any read()s after close fail.	WITHOUT_CLASSIFICATION	0.9999553813832673	WITHOUT_CLASSIFICATION	4.4618616732627565E-5	IMPLEMENTATION
// ----- Helper Methods --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999859718611268	WITHOUT_CLASSIFICATION	1.4028138873137892E-5	IMPLEMENTATION
// try to use POSIX for this first	WITHOUT_CLASSIFICATION	0.999962188450949	WITHOUT_CLASSIFICATION	3.7811549051127006E-5	IMPLEMENTATION
// otherwise fall back on the old way	WITHOUT_CLASSIFICATION	0.9999237730455555	WITHOUT_CLASSIFICATION	7.622695444452192E-5	IMPLEMENTATION
// Proc class	WITHOUT_CLASSIFICATION	0.9998879530266036	WITHOUT_CLASSIFICATION	1.1204697339648339E-4	IMPLEMENTATION
// No passed in block, lets check next outer frame for one ('Proc.new')	WITHOUT_CLASSIFICATION	0.999933702604982	WITHOUT_CLASSIFICATION	6.62973950179632E-5	IMPLEMENTATION
// modify the block with a new backref/lastline-grabbing scope	WITHOUT_CLASSIFICATION	0.9999108267529847	WITHOUT_CLASSIFICATION	8.917324701532034E-5	IMPLEMENTATION
// for future compatibility as constructors move toward not accepting metaclass?	WITHOUT_CLASSIFICATION	0.9998872837581281	WITHOUT_CLASSIFICATION	1.1271624187187403E-4	IMPLEMENTATION
//        case RUBY_HYBRID: //            backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); //            break;	WITHOUT_CLASSIFICATION	0.999985433831415	WITHOUT_CLASSIFICATION	1.4566168584834781E-5	IMPLEMENTATION
// This looks wrong, but it's the way MRI does it.	WITHOUT_CLASSIFICATION	0.9999758903022541	WITHOUT_CLASSIFICATION	2.4109697745867783E-5	IMPLEMENTATION
// rb_exc_new3	WITHOUT_CLASSIFICATION	0.9998415686846777	WITHOUT_CLASSIFICATION	1.5843131532233462E-4	IMPLEMENTATION
// NOTE: The indicies here match exactly the signal values; do not reorder	WITHOUT_CLASSIFICATION	0.9999663624058582	WITHOUT_CLASSIFICATION	3.3637594141788E-5	IMPLEMENTATION
//registerThreadDumpSignalHandler(runtime);	WITHOUT_CLASSIFICATION	0.9999105712075923	WITHOUT_CLASSIFICATION	8.942879240770813E-5	IMPLEMENTATION
// IOT is also 6	WITHOUT_CLASSIFICATION	0.9998501521567954	WITHOUT_CLASSIFICATION	1.4984784320463975E-4	IMPLEMENTATION
// CLD is also 20	WITHOUT_CLASSIFICATION	0.9998500697408713	WITHOUT_CLASSIFICATION	1.4993025912871945E-4	IMPLEMENTATION
// RubySignal	WITHOUT_CLASSIFICATION	0.9998433881947391	WITHOUT_CLASSIFICATION	1.566118052609449E-4	IMPLEMENTATION
// ZStream actually *isn't* allocatable	WITHOUT_CLASSIFICATION	0.999838741734995	WITHOUT_CLASSIFICATION	1.6125826500513256E-4	IMPLEMENTATION
// MRI behavior, enforced by tests	WITHOUT_CLASSIFICATION	0.9999040546915106	WITHOUT_CLASSIFICATION	9.594530848945618E-5	IMPLEMENTATION
// it's safe since adler.update doesn't modify the array	WITHOUT_CLASSIFICATION	0.999961135035844	WITHOUT_CLASSIFICATION	3.8864964155974615E-5	IMPLEMENTATION
// MRI behavior: in finished mode, we work as pass-through	WITHOUT_CLASSIFICATION	0.9998611210252588	WITHOUT_CLASSIFICATION	1.388789747412967E-4	IMPLEMENTATION
// SYNC_FLUSH	WITHOUT_CLASSIFICATION	0.9998415686846777	WITHOUT_CLASSIFICATION	1.5843131532233462E-4	IMPLEMENTATION
// By default, NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999322769250109	WITHOUT_CLASSIFICATION	6.772307498909099E-5	IMPLEMENTATION
//io.finish();	WITHOUT_CLASSIFICATION	0.9998311880777693	WITHOUT_CLASSIFICATION	1.6881192223067095E-4	IMPLEMENTATION
// should invoke seek on realIo	WITHOUT_CLASSIFICATION	0.9999201020948328	WITHOUT_CLASSIFICATION	7.989790516713043E-5	IMPLEMENTATION
// hmm...	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
// Called before any write to make sure the // header is always written before the first bytes	WITHOUT_CLASSIFICATION	0.9999876893824284	WITHOUT_CLASSIFICATION	1.2310617571576683E-5	IMPLEMENTATION
// For JDK 1.4 we can use "cal.getTimeInMillis()"	WITHOUT_CLASSIFICATION	0.9998886999822293	WITHOUT_CLASSIFICATION	1.1130001777074873E-4	IMPLEMENTATION
// We can just use dt, since it is immutable	WITHOUT_CLASSIFICATION	0.9999103482274622	WITHOUT_CLASSIFICATION	8.96517725378804E-5	IMPLEMENTATION
// float number of seconds	WITHOUT_CLASSIFICATION	0.9999820273393782	WITHOUT_CLASSIFICATION	1.7972660621769484E-5	IMPLEMENTATION
// modified to match how hash is calculated in 1.8.2	WITHOUT_CLASSIFICATION	0.9999518347152213	WITHOUT_CLASSIFICATION	4.816528477879266E-5	IMPLEMENTATION
// dump usec, not msec	WITHOUT_CLASSIFICATION	0.9998714227992107	WITHOUT_CLASSIFICATION	1.2857720078928762E-4	IMPLEMENTATION
/* Time class methods */	WITHOUT_CLASSIFICATION	0.9999277415659774	WITHOUT_CLASSIFICATION	7.225843402262909E-5	IMPLEMENTATION
// marsaling dumps usec, not msec	WITHOUT_CLASSIFICATION	0.9998869355110206	WITHOUT_CLASSIFICATION	1.130644889793719E-4	IMPLEMENTATION
// MRI accepts additional wday argument which appears to be ignored.	WITHOUT_CLASSIFICATION	0.9999669142775307	WITHOUT_CLASSIFICATION	3.3085722469419575E-5	IMPLEMENTATION
// set up with min values and then add to allow rolling over	WITHOUT_CLASSIFICATION	0.9999570224222083	WITHOUT_CLASSIFICATION	4.297757779164487E-5	IMPLEMENTATION
// the instant at which we will ask dtz what the difference between DST and // standard time is	WITHOUT_CLASSIFICATION	0.999966233554046	WITHOUT_CLASSIFICATION	3.3766445953940166E-5	IMPLEMENTATION
// if we might be moving this time from !DST -> DST, the offset is assumed // to be the same as it was just before we last moved from DST -> !DST	WITHOUT_CLASSIFICATION	0.9999750149900214	WITHOUT_CLASSIFICATION	2.4985009978603825E-5	IMPLEMENTATION
// Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.	WITHOUT_CLASSIFICATION	0.9999904886877483	WITHOUT_CLASSIFICATION	9.511312251808116E-6	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999308016405121	WITHOUT_CLASSIFICATION	6.919835948787694E-5	IMPLEMENTATION
/* If the value will fit in a Fixnum, return one of those. */	WITHOUT_CLASSIFICATION	0.9999785897657698	WITHOUT_CLASSIFICATION	2.141023423017786E-5	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999447133116101	WITHOUT_CLASSIFICATION	5.528668839002397E-5	IMPLEMENTATION
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9998577477143887	WITHOUT_CLASSIFICATION	1.4225228561120184E-4	IMPLEMENTATION
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.941463535962475	WITHOUT_CLASSIFICATION	0.0585364640375249	IMPLEMENTATION
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.941463535962475	WITHOUT_CLASSIFICATION	0.0585364640375249	IMPLEMENTATION
// no bignorm here needed	WITHOUT_CLASSIFICATION	0.9994957777645381	WITHOUT_CLASSIFICATION	5.042222354618857E-4	IMPLEMENTATION
// wow, the only time we can use the java protocol ;)	WITHOUT_CLASSIFICATION	0.9999134362940411	WITHOUT_CLASSIFICATION	8.656370595889176E-5	IMPLEMENTATION
// Pad with a 0	WITHOUT_CLASSIFICATION	0.9998582475871872	WITHOUT_CLASSIFICATION	1.4175241281282378E-4	IMPLEMENTATION
// BigInteger required a sign byte in incoming array	WITHOUT_CLASSIFICATION	0.9999079096850744	WITHOUT_CLASSIFICATION	9.209031492565356E-5	IMPLEMENTATION
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9999839193518657	WITHOUT_CLASSIFICATION	1.608064813426762E-5	IMPLEMENTATION
// We do this b/c make_tmpname might be overridden	WITHOUT_CLASSIFICATION	0.9998988800959645	WITHOUT_CLASSIFICATION	1.011199040355218E-4	IMPLEMENTATION
// ???	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
// PID	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999447133116101	WITHOUT_CLASSIFICATION	5.528668839002397E-5	IMPLEMENTATION
// elements and trailing nils	WITHOUT_CLASSIFICATION	0.9999481617470529	WITHOUT_CLASSIFICATION	5.183825294718321E-5	IMPLEMENTATION
// Dir::tmpdir	WITHOUT_CLASSIFICATION	0.9998417071537915	WITHOUT_CLASSIFICATION	1.5829284620857525E-4	IMPLEMENTATION
// volatile to ensure that initial nil-fill is visible to other threads	WITHOUT_CLASSIFICATION	0.9998389336498726	WITHOUT_CLASSIFICATION	1.6106635012722844E-4	IMPLEMENTATION
/* Ruby arrays default to holding 16 elements, so we create an         * ArrayList of the same size if we're not told otherwise         */	WITHOUT_CLASSIFICATION	0.9999981356762772	WITHOUT_CLASSIFICATION	1.8643237228496924E-6	IMPLEMENTATION
/* rb_ary_new2     * just allocates the internal array     */	WITHOUT_CLASSIFICATION	0.9999383924618286	WITHOUT_CLASSIFICATION	6.16075381713796E-5	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999704602316282	WITHOUT_CLASSIFICATION	2.9539768371790157E-5	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999704602316282	WITHOUT_CLASSIFICATION	2.9539768371790157E-5	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999704602316282	WITHOUT_CLASSIFICATION	2.9539768371790157E-5	IMPLEMENTATION
/* Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour     *      */	WITHOUT_CLASSIFICATION	0.9999239051703518	WITHOUT_CLASSIFICATION	7.609482964818623E-5	IMPLEMENTATION
/* NEWOBJ and OBJSETUP equivalent     * fastest one, for shared arrays, optional objectspace     */	WITHOUT_CLASSIFICATION	0.9999283935929669	WITHOUT_CLASSIFICATION	7.160640703310471E-5	IMPLEMENTATION
// Create global constants and variables	WITHOUT_CLASSIFICATION	0.9999672123021556	WITHOUT_CLASSIFICATION	3.278769784438789E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9995467303284251	WITHOUT_CLASSIFICATION	4.5326967157488377E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9995467303284251	WITHOUT_CLASSIFICATION	4.5326967157488377E-4	IMPLEMENTATION
// Windows does not support these functions, so we won't even try // This also matches Ruby behavior for JRUBY-2353.	WITHOUT_CLASSIFICATION	0.999897509060323	WITHOUT_CLASSIFICATION	1.0249093967698298E-4	IMPLEMENTATION
// There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and // newer one (US/Pacific, America/Los_Angeles). This pattern is to detect // the legacy TZ format in order to convert it to the newer format // understood by Java API.	WITHOUT_CLASSIFICATION	0.999988963858591	WITHOUT_CLASSIFICATION	1.1036141409028878E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9995467303284251	WITHOUT_CLASSIFICATION	4.5326967157488377E-4	IMPLEMENTATION
// 1.9 seems to just do inspect for to_s now	WITHOUT_CLASSIFICATION	0.9999052178320019	WITHOUT_CLASSIFICATION	9.478216799802783E-5	IMPLEMENTATION
// possibly should not in object space	WITHOUT_CLASSIFICATION	0.9999361507386335	WITHOUT_CLASSIFICATION	6.384926136639397E-5	IMPLEMENTATION
// only fill if there actually will remain trailing storage	WITHOUT_CLASSIFICATION	0.9999467721470204	WITHOUT_CLASSIFICATION	5.3227852979431604E-5	IMPLEMENTATION
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9998415686846777	WITHOUT_CLASSIFICATION	1.5843131532233462E-4	IMPLEMENTATION
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9998415686846777	WITHOUT_CLASSIFICATION	1.5843131532233462E-4	IMPLEMENTATION
// from DUP_SETUP	WITHOUT_CLASSIFICATION	0.999870649119927	WITHOUT_CLASSIFICATION	1.2935088007308247E-4	IMPLEMENTATION
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999647297391369	WITHOUT_CLASSIFICATION	3.527026086316969E-5	IMPLEMENTATION
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9998757874303553	WITHOUT_CLASSIFICATION	1.2421256964466408E-4	IMPLEMENTATION
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9998757874303553	WITHOUT_CLASSIFICATION	1.2421256964466408E-4	IMPLEMENTATION
// Satisfy java.util.List interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999288382432275	WITHOUT_CLASSIFICATION	7.116175677247973E-5	IMPLEMENTATION
// pre-set for the sake of terminating recursive calls	WITHOUT_CLASSIFICATION	0.9999638545910784	WITHOUT_CLASSIFICATION	3.614540892162624E-5	IMPLEMENTATION
/* root fiber */	WITHOUT_CLASSIFICATION	0.9998442339988932	WITHOUT_CLASSIFICATION	1.5576600110672956E-4	IMPLEMENTATION
// GMT+00:00 --> Etc/GMT, see "MRI behavior" // comment below.	WITHOUT_CLASSIFICATION	0.9999222748941261	WITHOUT_CLASSIFICATION	7.772510587386685E-5	IMPLEMENTATION
//  See http://www.gzip.org/zlib/rfc-gzip.html	WITHOUT_CLASSIFICATION	0.9998784211454708	WITHOUT_CLASSIFICATION	1.2157885452926353E-4	IMPLEMENTATION
// extras flag	WITHOUT_CLASSIFICATION	0.999869011209381	WITHOUT_CLASSIFICATION	1.309887906190442E-4	IMPLEMENTATION
// Zlib::NO_FLUSH	WITHOUT_CLASSIFICATION	0.9998415686846777	WITHOUT_CLASSIFICATION	1.5843131532233462E-4	IMPLEMENTATION
// ...nothing	WITHOUT_CLASSIFICATION	0.9999268049991391	WITHOUT_CLASSIFICATION	7.319500086080177E-5	IMPLEMENTATION
// utility method	WITHOUT_CLASSIFICATION	0.999867511399036	WITHOUT_CLASSIFICATION	1.3248860096397267E-4	IMPLEMENTATION
// Prepare LoadService and load path	WITHOUT_CLASSIFICATION	0.9998969574420021	WITHOUT_CLASSIFICATION	1.030425579979143E-4	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999447133116101	WITHOUT_CLASSIFICATION	5.528668839002397E-5	IMPLEMENTATION
// flags // 4 bytes of modified time	WITHOUT_CLASSIFICATION	0.9998873180810119	WITHOUT_CLASSIFICATION	1.126819189880316E-4	IMPLEMENTATION
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999456374247019	WITHOUT_CLASSIFICATION	5.43625752980411E-5	IMPLEMENTATION
// 1.8 "include?"	WITHOUT_CLASSIFICATION	0.9998449113496276	WITHOUT_CLASSIFICATION	1.5508865037233994E-4	IMPLEMENTATION
// any BigInteger is bigger than Fixnum and we don't have FIXABLE	WITHOUT_CLASSIFICATION	0.9999306724361298	WITHOUT_CLASSIFICATION	6.932756387024995E-5	IMPLEMENTATION
// beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal	WITHOUT_CLASSIFICATION	0.9999018504320619	WITHOUT_CLASSIFICATION	9.814956793804911E-5	IMPLEMENTATION
// MRI does it!	WITHOUT_CLASSIFICATION	0.999843304856182	WITHOUT_CLASSIFICATION	1.5669514381813008E-4	IMPLEMENTATION
// won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9998836857320296	WITHOUT_CLASSIFICATION	1.1631426797041548E-4	IMPLEMENTATION
// it won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9998978054615021	WITHOUT_CLASSIFICATION	1.0219453849801062E-4	IMPLEMENTATION
// RubyClassPathVariable	WITHOUT_CLASSIFICATION	0.9998683898543486	WITHOUT_CLASSIFICATION	1.3161014565148983E-4	IMPLEMENTATION
// not to be confused with RubyObject's flags	WITHOUT_CLASSIFICATION	0.9997668818576658	WITHOUT_CLASSIFICATION	2.331181423341588E-4	IMPLEMENTATION
// second argument is allowed, but ignored (MRI)	WITHOUT_CLASSIFICATION	0.9999884483725955	WITHOUT_CLASSIFICATION	1.1551627404592377E-5	IMPLEMENTATION
// we are presumably running a precompiled class; load directly	WITHOUT_CLASSIFICATION	0.9999628022814969	WITHOUT_CLASSIFICATION	3.719771850308545E-5	IMPLEMENTATION
// terminate; tryCompile will have printed out an error and we're done	WITHOUT_CLASSIFICATION	0.9999230936751702	WITHOUT_CLASSIFICATION	7.690632482980044E-5	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999543799574377	WITHOUT_CLASSIFICATION	4.562004256224169E-5	IMPLEMENTATION
// do nothing, this iteration restarts	WITHOUT_CLASSIFICATION	0.9999851029157921	WITHOUT_CLASSIFICATION	1.4897084207784242E-5	IMPLEMENTATION
// recheck condition	WITHOUT_CLASSIFICATION	0.9998813871832124	WITHOUT_CLASSIFICATION	1.1861281678754395E-4	IMPLEMENTATION
// Get the main threadcontext (gets constructed for us)	WITHOUT_CLASSIFICATION	0.9999664597668501	WITHOUT_CLASSIFICATION	3.354023314993257E-5	IMPLEMENTATION
// Construct key services	WITHOUT_CLASSIFICATION	0.9999258106010823	WITHOUT_CLASSIFICATION	7.418939891761269E-5	IMPLEMENTATION
// initialize the root of the class hierarchy completely	WITHOUT_CLASSIFICATION	0.9999910081658926	WITHOUT_CLASSIFICATION	8.991834107352806E-6	IMPLEMENTATION
// Construct the top-level execution frame and scope for the main thread	WITHOUT_CLASSIFICATION	0.999977108233728	WITHOUT_CLASSIFICATION	2.289176627201447E-5	IMPLEMENTATION
// Initialize all the core classes	WITHOUT_CLASSIFICATION	0.9999784700210519	WITHOUT_CLASSIFICATION	2.1529978948148297E-5	IMPLEMENTATION
// Initialize the "dummy" class used as a marker	WITHOUT_CLASSIFICATION	0.9999752402322571	WITHOUT_CLASSIFICATION	2.475976774291122E-5	IMPLEMENTATION
// Initialize Kernel and include into Object	WITHOUT_CLASSIFICATION	0.9999585859150255	WITHOUT_CLASSIFICATION	4.1414084974534E-5	IMPLEMENTATION
// Object is ready, create top self	WITHOUT_CLASSIFICATION	0.9999311909117098	WITHOUT_CLASSIFICATION	6.880908829023905E-5	IMPLEMENTATION
// Pre-create all the core classes potentially referenced during startup	WITHOUT_CLASSIFICATION	0.9999852136977745	WITHOUT_CLASSIFICATION	1.4786302225477233E-5	IMPLEMENTATION
// Math depends on all numeric types	WITHOUT_CLASSIFICATION	0.9999068827306107	WITHOUT_CLASSIFICATION	9.311726938926386E-5	IMPLEMENTATION
// depends on IO, FileTest	WITHOUT_CLASSIFICATION	0.9998941389678023	WITHOUT_CLASSIFICATION	1.0586103219772945E-4	IMPLEMENTATION
// initialize builtin libraries	WITHOUT_CLASSIFICATION	0.9999703672202331	WITHOUT_CLASSIFICATION	2.9632779766911374E-5	IMPLEMENTATION
// Require in all libraries specified on command line	WITHOUT_CLASSIFICATION	0.9999572258000354	WITHOUT_CLASSIFICATION	4.2774199964546184E-5	IMPLEMENTATION
// Bootstrap the top of the hierarchy	WITHOUT_CLASSIFICATION	0.9999498936110369	WITHOUT_CLASSIFICATION	5.0106388962946335E-5	IMPLEMENTATION
// we try to get the classloader that loaded JRuby, falling back on System	WITHOUT_CLASSIFICATION	0.9999728727784373	WITHOUT_CLASSIFICATION	2.7127221562747566E-5	IMPLEMENTATION
// determine spacing	WITHOUT_CLASSIFICATION	0.9999016470830507	WITHOUT_CLASSIFICATION	9.835291694915348E-5	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.999872743273026	WITHOUT_CLASSIFICATION	1.2725672697398832E-4	IMPLEMENTATION
// For JSR 223 support: see http://scripting.java.net/	WITHOUT_CLASSIFICATION	0.9998042055325912	WITHOUT_CLASSIFICATION	1.957944674087694E-4	IMPLEMENTATION
// use this for JRuby-internal finalizers	WITHOUT_CLASSIFICATION	0.999859103436557	WITHOUT_CLASSIFICATION	1.4089656344308787E-4	IMPLEMENTATION
// this method is for finalizers registered via ObjectSpace	WITHOUT_CLASSIFICATION	0.9998694598098972	WITHOUT_CLASSIFICATION	1.30540190102784E-4	IMPLEMENTATION
// new factory methods ------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999818061788185	WITHOUT_CLASSIFICATION	1.8193821181570673E-5	IMPLEMENTATION
//        assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999756735662985	WITHOUT_CLASSIFICATION	2.4326433701475778E-5	IMPLEMENTATION
// Equivalent of Data_Wrap_Struct	WITHOUT_CLASSIFICATION	0.9998492751233413	WITHOUT_CLASSIFICATION	1.5072487665871036E-4	IMPLEMENTATION
// default: don't retain	WITHOUT_CLASSIFICATION	0.999969713526674	WITHOUT_CLASSIFICATION	3.0286473326025368E-5	IMPLEMENTATION
// ChannelDescriptors opened by sysopen are cached to avoid collection	WITHOUT_CLASSIFICATION	0.9999445934842642	WITHOUT_CLASSIFICATION	5.5406515735657764E-5	IMPLEMENTATION
// Default objects	WITHOUT_CLASSIFICATION	0.9999661980261735	WITHOUT_CLASSIFICATION	3.380197382653164E-5	IMPLEMENTATION
// record separator var, to speed up io ops that use it	WITHOUT_CLASSIFICATION	0.9999316450924504	WITHOUT_CLASSIFICATION	6.835490754968448E-5	IMPLEMENTATION
// former java.lang.System concepts now internalized for MVM	WITHOUT_CLASSIFICATION	0.9999331089157155	WITHOUT_CLASSIFICATION	6.689108428454502E-5	IMPLEMENTATION
// Java support	WITHOUT_CLASSIFICATION	0.999723366673788	WITHOUT_CLASSIFICATION	2.7663332621189325E-4	IMPLEMENTATION
// Parser stats	WITHOUT_CLASSIFICATION	0.9998582375575421	WITHOUT_CLASSIFICATION	1.4176244245800044E-4	IMPLEMENTATION
// Compilation	WITHOUT_CLASSIFICATION	0.9998711626523493	WITHOUT_CLASSIFICATION	1.2883734765070206E-4	IMPLEMENTATION
// can't read non-standard properties	WITHOUT_CLASSIFICATION	0.9999193577165834	WITHOUT_CLASSIFICATION	8.064228341654855E-5	IMPLEMENTATION
// can't create custom classloaders	WITHOUT_CLASSIFICATION	0.9999678098133549	WITHOUT_CLASSIFICATION	3.219018664511601E-5	IMPLEMENTATION
// mutex that controls modifications of user-defined finalizers	WITHOUT_CLASSIFICATION	0.9999407700296828	WITHOUT_CLASSIFICATION	5.9229970317170286E-5	IMPLEMENTATION
// mutex that controls modifications of internal finalizers	WITHOUT_CLASSIFICATION	0.9999457307024341	WITHOUT_CLASSIFICATION	5.426929756587279E-5	IMPLEMENTATION
// A thread pool to use for executing this runtime's Ruby threads	WITHOUT_CLASSIFICATION	0.9998842039925183	WITHOUT_CLASSIFICATION	1.1579600748173657E-4	IMPLEMENTATION
// A global object lock for class hierarchy mutations	WITHOUT_CLASSIFICATION	0.9999770784639089	WITHOUT_CLASSIFICATION	2.2921536091100087E-5	IMPLEMENTATION
// initial spaces // spaces before "at"	WITHOUT_CLASSIFICATION	0.9999459513006717	WITHOUT_CLASSIFICATION	5.404869932839238E-5	IMPLEMENTATION
// event name // filename // line numbers should be 1-based	WITHOUT_CLASSIFICATION	0.9999745063556496	WITHOUT_CLASSIFICATION	2.549364435039932E-5	IMPLEMENTATION
// The method is intentionally not public, since it typically should // not be used outside of the core.	WITHOUT_CLASSIFICATION	0.9999655187660538	WITHOUT_CLASSIFICATION	3.448123394616278E-5	IMPLEMENTATION
// Note: this field and the following static initializer // must be located be in this order!	WITHOUT_CLASSIFICATION	0.9999901992179717	WITHOUT_CLASSIFICATION	9.80078202829447E-6	IMPLEMENTATION
// Contains a list of all blocks (as Procs) that should be called when // the runtime environment exits.	WITHOUT_CLASSIFICATION	0.9999625334607295	WITHOUT_CLASSIFICATION	3.7466539270465024E-5	IMPLEMENTATION
// quoted-printable	WITHOUT_CLASSIFICATION	0.9998505409751243	WITHOUT_CLASSIFICATION	1.4945902487576435E-4	IMPLEMENTATION
// default options	WITHOUT_CLASSIFICATION	0.9999759411726501	WITHOUT_CLASSIFICATION	2.4058827349923345E-5	IMPLEMENTATION
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9998415686846777	WITHOUT_CLASSIFICATION	1.5843131532233462E-4	IMPLEMENTATION
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9998415686846777	WITHOUT_CLASSIFICATION	1.5843131532233462E-4	IMPLEMENTATION
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9998422884125361	WITHOUT_CLASSIFICATION	1.577115874638715E-4	IMPLEMENTATION
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9998422884125361	WITHOUT_CLASSIFICATION	1.577115874638715E-4	IMPLEMENTATION
// EUC-JP	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
// EUC-JP	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
// UTF-8	WITHOUT_CLASSIFICATION	0.9958189961605989	WITHOUT_CLASSIFICATION	0.004181003839401112	IMPLEMENTATION
// UTF-8	WITHOUT_CLASSIFICATION	0.9958189961605989	WITHOUT_CLASSIFICATION	0.004181003839401112	IMPLEMENTATION
// long name option	WITHOUT_CLASSIFICATION	0.999931258810925	WITHOUT_CLASSIFICATION	6.874118907491506E-5	IMPLEMENTATION
// conversion	WITHOUT_CLASSIFICATION	0.9999204304958602	WITHOUT_CLASSIFICATION	7.956950413978452E-5	IMPLEMENTATION
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999936365688659	WITHOUT_CLASSIFICATION	6.363431134103628E-5	IMPLEMENTATION
// string doesn't share any resources	WITHOUT_CLASSIFICATION	0.999965931172806	WITHOUT_CLASSIFICATION	3.406882719403352E-5	IMPLEMENTATION
// string has it's own ByteList, but it's pointing to a shared buffer (byte[])	WITHOUT_CLASSIFICATION	0.9999529826088596	WITHOUT_CLASSIFICATION	4.701739114039596E-5	IMPLEMENTATION
// string doesn't have it's own ByteList (values)	WITHOUT_CLASSIFICATION	0.999963138073393	WITHOUT_CLASSIFICATION	3.686192660710692E-5	IMPLEMENTATION
// ENC_CODERANGE_ASCIIONLY	WITHOUT_CLASSIFICATION	0.9998679650049139	WITHOUT_CLASSIFICATION	1.3203499508607967E-4	IMPLEMENTATION
// rb_enc_str_asciionly_p	WITHOUT_CLASSIFICATION	0.9998679022243461	WITHOUT_CLASSIFICATION	1.320977756538609E-4	IMPLEMENTATION
// rb_enc_str_coderange	WITHOUT_CLASSIFICATION	0.9998680222589825	WITHOUT_CLASSIFICATION	1.3197774101749002E-4	IMPLEMENTATION
// rb_str_hash_cmp	WITHOUT_CLASSIFICATION	0.9998415686846777	WITHOUT_CLASSIFICATION	1.5843131532233462E-4	IMPLEMENTATION
// Deprecated String construction routines	WITHOUT_CLASSIFICATION	0.9999362841070789	WITHOUT_CLASSIFICATION	6.371589292110259E-5	IMPLEMENTATION
// String construction routines by NOT byte[] buffer and NOT making the target String shared 	WITHOUT_CLASSIFICATION	0.9999783242380754	WITHOUT_CLASSIFICATION	2.1675761924567623E-5	IMPLEMENTATION
/* rb_str_subseq */	WITHOUT_CLASSIFICATION	0.999841745391885	WITHOUT_CLASSIFICATION	1.582546081149912E-4	IMPLEMENTATION
// no need to assign encoding, same bytelist shared	WITHOUT_CLASSIFICATION	0.99990454853416	WITHOUT_CLASSIFICATION	9.545146583998168E-5	IMPLEMENTATION
// if len == 0 then shared empty	WITHOUT_CLASSIFICATION	0.9999133871175769	WITHOUT_CLASSIFICATION	8.661288242314117E-5	IMPLEMENTATION
/* rb_str_cmp_m */	WITHOUT_CLASSIFICATION	0.9998415686846777	WITHOUT_CLASSIFICATION	1.5843131532233462E-4	IMPLEMENTATION
// we limit to int because ByteBuffer can only allocate int sizes	WITHOUT_CLASSIFICATION	0.9999215384281411	WITHOUT_CLASSIFICATION	7.846157185894157E-5	IMPLEMENTATION
// // rb_str_buf_append	WITHOUT_CLASSIFICATION	0.9998874600160211	WITHOUT_CLASSIFICATION	1.1253998397883435E-4	IMPLEMENTATION
// encoding doesn't have to be copied.	WITHOUT_CLASSIFICATION	0.9999636112398066	WITHOUT_CLASSIFICATION	3.638876019347388E-5	IMPLEMENTATION
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9998225695938672	WITHOUT_CLASSIFICATION	1.7743040613283812E-4	IMPLEMENTATION
// must not reallocate	WITHOUT_CLASSIFICATION	0.9999010254382183	WITHOUT_CLASSIFICATION	9.897456178172282E-5	IMPLEMENTATION
// Illegal combination	WITHOUT_CLASSIFICATION	0.999882931486352	WITHOUT_CLASSIFICATION	1.1706851364810303E-4	IMPLEMENTATION
// use 1.8 impl	WITHOUT_CLASSIFICATION	0.9998761344685416	WITHOUT_CLASSIFICATION	1.2386553145835762E-4	IMPLEMENTATION
/* RubyString aka rb_string_value */	WITHOUT_CLASSIFICATION	0.9999104002893207	WITHOUT_CLASSIFICATION	8.959971067931141E-5	IMPLEMENTATION
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999095481174433	WITHOUT_CLASSIFICATION	9.045188255676006E-5	IMPLEMENTATION
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999499119817945	WITHOUT_CLASSIFICATION	5.008801820548468E-5	IMPLEMENTATION
/* len + margin */	WITHOUT_CLASSIFICATION	0.9998630896810465	WITHOUT_CLASSIFICATION	1.3691031895335574E-4	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9998447719181367	WITHOUT_CLASSIFICATION	1.5522808186323577E-4	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9998447719181367	WITHOUT_CLASSIFICATION	1.5522808186323577E-4	IMPLEMENTATION
/* copy pre-match substr */	WITHOUT_CLASSIFICATION	0.9998766544737733	WITHOUT_CLASSIFICATION	1.2334552622673349E-4	IMPLEMENTATION
// string given	WITHOUT_CLASSIFICATION	0.9999158302553274	WITHOUT_CLASSIFICATION	8.416974467260562E-5	IMPLEMENTATION
// hash given	WITHOUT_CLASSIFICATION	0.9998471944551317	WITHOUT_CLASSIFICATION	1.5280554486826438E-4	IMPLEMENTATION
// This represents left most digit in a set of incremented // values?  Therefore leftmost numeric must be '1' and not '0' // 999 -> 1000, not 999 -> 0000.  whereas chars should be // zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"	WITHOUT_CLASSIFICATION	0.9999866315006497	WITHOUT_CLASSIFICATION	1.336849935030453E-5	IMPLEMENTATION
/* substring longer than string */	WITHOUT_CLASSIFICATION	0.9999251000001236	WITHOUT_CLASSIFICATION	7.489999987644002E-5	IMPLEMENTATION
/* rb_str_substr */	WITHOUT_CLASSIFICATION	0.9998420394461875	WITHOUT_CLASSIFICATION	1.579605538124593E-4	IMPLEMENTATION
// nothing	WITHOUT_CLASSIFICATION	0.9979722936118584	WITHOUT_CLASSIFICATION	0.00202770638814166	IMPLEMENTATION
// nothing	WITHOUT_CLASSIFICATION	0.9979722936118584	WITHOUT_CLASSIFICATION	0.00202770638814166	IMPLEMENTATION
/* rb_str_splice */	WITHOUT_CLASSIFICATION	0.9998416812780792	WITHOUT_CLASSIFICATION	1.583187219208495E-4	IMPLEMENTATION
// TODO: keep cr // TODO: rb_str_splice_0	WITHOUT_CLASSIFICATION	0.8472559950626025	WITHOUT_CLASSIFICATION	0.15274400493739757	IMPLEMENTATION
// keep cr ?	WITHOUT_CLASSIFICATION	0.9998549945994762	WITHOUT_CLASSIFICATION	1.4500540052370936E-4	IMPLEMENTATION
// keep cr ?	WITHOUT_CLASSIFICATION	0.9998549945994762	WITHOUT_CLASSIFICATION	1.4500540052370936E-4	IMPLEMENTATION
/* wrapped to \0...\0.  search next valid char. */	WITHOUT_CLASSIFICATION	0.9999228545596999	WITHOUT_CLASSIFICATION	7.714544030006628E-5	IMPLEMENTATION
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9999088455318103	WITHOUT_CLASSIFICATION	9.115446818966748E-5	IMPLEMENTATION
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9999088455318103	WITHOUT_CLASSIFICATION	9.115446818966748E-5	IMPLEMENTATION
// modified	WITHOUT_CLASSIFICATION	0.9998628813711735	WITHOUT_CLASSIFICATION	1.371186288264594E-4	IMPLEMENTATION
// modified	WITHOUT_CLASSIFICATION	0.9998628813711735	WITHOUT_CLASSIFICATION	1.371186288264594E-4	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
// QTRUE	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
/* retrieve last replacer */	WITHOUT_CLASSIFICATION	0.9999155029805589	WITHOUT_CLASSIFICATION	8.44970194410551E-5	IMPLEMENTATION
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999569185010683	WITHOUT_CLASSIFICATION	4.308149893173201E-5	IMPLEMENTATION
// long size * bits in byte	WITHOUT_CLASSIFICATION	0.9999342939123441	WITHOUT_CLASSIFICATION	6.570608765590005E-5	IMPLEMENTATION
// from encoding, special-casing ASCII* to ASCII	WITHOUT_CLASSIFICATION	0.9999140848055453	WITHOUT_CLASSIFICATION	8.591519445469397E-5	IMPLEMENTATION
// to encoding, same special-casing	WITHOUT_CLASSIFICATION	0.999907058789587	WITHOUT_CLASSIFICATION	9.294121041311998E-5	IMPLEMENTATION
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999837856837223	WITHOUT_CLASSIFICATION	1.621431627770671E-5	IMPLEMENTATION
// decode from "from" and encode to "to"	WITHOUT_CLASSIFICATION	0.9999198484022794	WITHOUT_CLASSIFICATION	8.015159772056915E-5	IMPLEMENTATION
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999837856837223	WITHOUT_CLASSIFICATION	1.621431627770671E-5	IMPLEMENTATION
//Kernel is the only Module that doesn't need an implementor	WITHOUT_CLASSIFICATION	0.9983004794301096	WITHOUT_CLASSIFICATION	0.001699520569890455	IMPLEMENTATION
// no binding given, use (eval)	WITHOUT_CLASSIFICATION	0.9999104512871715	WITHOUT_CLASSIFICATION	8.954871282852638E-5	IMPLEMENTATION
// interned, OK for "fast" methods	WITHOUT_CLASSIFICATION	0.9999217572972672	WITHOUT_CLASSIFICATION	7.824270273272294E-5	IMPLEMENTATION
// File to be loaded by autoload has already been or is being loaded.	WITHOUT_CLASSIFICATION	0.9999373203854938	WITHOUT_CLASSIFICATION	6.267961450621103E-5	IMPLEMENTATION
// rb_cstr_to_dbl case	WITHOUT_CLASSIFICATION	0.9998685803716798	WITHOUT_CLASSIFICATION	1.3141962832020418E-4	IMPLEMENTATION
// We break if we know this sleep was explicitly woken up/interrupted	WITHOUT_CLASSIFICATION	0.9998774659568271	WITHOUT_CLASSIFICATION	1.2253404317277847E-4	IMPLEMENTATION
// exec process, create IO with process	WITHOUT_CLASSIFICATION	0.9999436357876078	WITHOUT_CLASSIFICATION	5.636421239233705E-5	IMPLEMENTATION
// Zero sleeps forever	WITHOUT_CLASSIFICATION	0.9999027613976657	WITHOUT_CLASSIFICATION	9.723860233433313E-5	IMPLEMENTATION
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999106166452	WITHOUT_CLASSIFICATION	8.938335480006988E-5	IMPLEMENTATION
// Explicit zero in MRI returns immediately	WITHOUT_CLASSIFICATION	0.9999472910363527	WITHOUT_CLASSIFICATION	5.270896364728255E-5	IMPLEMENTATION
// Spurious wakeup-loop	WITHOUT_CLASSIFICATION	0.9998688968469135	WITHOUT_CLASSIFICATION	1.3110315308648452E-4	IMPLEMENTATION
// adjusts paths started with '/' or '\\', on windows.	WITHOUT_CLASSIFICATION	0.9999222306864596	WITHOUT_CLASSIFICATION	7.77693135404617E-5	IMPLEMENTATION
// file not given	WITHOUT_CLASSIFICATION	0.9998687190731921	WITHOUT_CLASSIFICATION	1.3128092680799255E-4	IMPLEMENTATION
// string to eval	WITHOUT_CLASSIFICATION	0.9999331711428013	WITHOUT_CLASSIFICATION	6.682885719862947E-5	IMPLEMENTATION
// binding given, use binding's file	WITHOUT_CLASSIFICATION	0.9998809900312134	WITHOUT_CLASSIFICATION	1.1900996878652126E-4	IMPLEMENTATION
// ?g  | boolean | True if file1 has the \CF{setgid} bit	WITHOUT_CLASSIFICATION	0.9999333245911493	WITHOUT_CLASSIFICATION	6.667540885073848E-5	IMPLEMENTATION
// bomb out, it's not a binding or a proc	WITHOUT_CLASSIFICATION	0.9999079923695073	WITHOUT_CLASSIFICATION	9.200763049263654E-5	IMPLEMENTATION
// Ordering of array traversal not important, just intuitive	WITHOUT_CLASSIFICATION	0.9997645333584294	WITHOUT_CLASSIFICATION	2.354666415705183E-4	IMPLEMENTATION
//Catch active, throw for catch to handle	WITHOUT_CLASSIFICATION	0.999868059161794	WITHOUT_CLASSIFICATION	1.3194083820600893E-4	IMPLEMENTATION
// No catch active for this throw	WITHOUT_CLASSIFICATION	0.9999119575512772	WITHOUT_CLASSIFICATION	8.80424487228105E-5	IMPLEMENTATION
// without full tracing, many events will not fire	WITHOUT_CLASSIFICATION	0.9999301246117326	WITHOUT_CLASSIFICATION	6.987538826739776E-5	IMPLEMENTATION
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999924594744768	WITHOUT_CLASSIFICATION	7.540525523169907E-6	IMPLEMENTATION
// MRI behavior: use first byte of string value if len > 0	WITHOUT_CLASSIFICATION	0.99996983572678	WITHOUT_CLASSIFICATION	3.016427322002782E-5	IMPLEMENTATION
// MRI behavior: now check arg count	WITHOUT_CLASSIFICATION	0.9999200485614707	WITHOUT_CLASSIFICATION	7.99514385293065E-5	IMPLEMENTATION
// ?A  | Time    | Last access time for file1	WITHOUT_CLASSIFICATION	0.9998766739881607	WITHOUT_CLASSIFICATION	1.2332601183938068E-4	IMPLEMENTATION
// ?b  | boolean | True if file1 is a block device	WITHOUT_CLASSIFICATION	0.9999252480737516	WITHOUT_CLASSIFICATION	7.475192624834617E-5	IMPLEMENTATION
// ?c  | boolean | True if file1 is a character device	WITHOUT_CLASSIFICATION	0.9999507471541308	WITHOUT_CLASSIFICATION	4.9252845869091976E-5	IMPLEMENTATION
// ?C  | Time    | Last change time for file1	WITHOUT_CLASSIFICATION	0.9999166408245335	WITHOUT_CLASSIFICATION	8.335917546657093E-5	IMPLEMENTATION
// ?d  | boolean | True if file1 exists and is a directory	WITHOUT_CLASSIFICATION	0.9999746804799926	WITHOUT_CLASSIFICATION	2.5319520007343798E-5	IMPLEMENTATION
// ?e  | boolean | True if file1 exists	WITHOUT_CLASSIFICATION	0.9999287170213139	WITHOUT_CLASSIFICATION	7.128297868616112E-5	IMPLEMENTATION
// ?f  | boolean | True if file1 exists and is a regular file	WITHOUT_CLASSIFICATION	0.9999436853087553	WITHOUT_CLASSIFICATION	5.631469124463734E-5	IMPLEMENTATION
// ?G  | boolean | True if file1 exists and has a group ownership equal to the caller's group	WITHOUT_CLASSIFICATION	0.9999772268259194	WITHOUT_CLASSIFICATION	2.2773174080596116E-5	IMPLEMENTATION
// ?k  | boolean | True if file1 exists and has the sticky bit set	WITHOUT_CLASSIFICATION	0.9999571346954659	WITHOUT_CLASSIFICATION	4.286530453415277E-5	IMPLEMENTATION
// ?M  | Time    | Last modification time for file1	WITHOUT_CLASSIFICATION	0.9999295539042417	WITHOUT_CLASSIFICATION	7.044609575831782E-5	IMPLEMENTATION
// ?o  | boolean | True if file1 exists and is owned by the caller's effective uid	WITHOUT_CLASSIFICATION	0.9999763615475419	WITHOUT_CLASSIFICATION	2.36384524581352E-5	IMPLEMENTATION
// ?O  | boolean | True if file1 exists and is owned by the caller's real uid 	WITHOUT_CLASSIFICATION	0.9999772575985848	WITHOUT_CLASSIFICATION	2.2742401415198634E-5	IMPLEMENTATION
// ?p  | boolean | True if file1 exists and is a fifo	WITHOUT_CLASSIFICATION	0.9999467242765597	WITHOUT_CLASSIFICATION	5.327572344030316E-5	IMPLEMENTATION
// ?r  | boolean | True if file1 is readable by the effective uid/gid of the caller	WITHOUT_CLASSIFICATION	0.9999707383735789	WITHOUT_CLASSIFICATION	2.926162642108298E-5	IMPLEMENTATION
// ?s  | int/nil | If file1 has nonzero size, return the size, otherwise nil	WITHOUT_CLASSIFICATION	0.9999237277982911	WITHOUT_CLASSIFICATION	7.627220170894533E-5	IMPLEMENTATION
// ?S  | boolean | True if file1 exists and is a socket	WITHOUT_CLASSIFICATION	0.9999468758227019	WITHOUT_CLASSIFICATION	5.312417729806095E-5	IMPLEMENTATION
// ?u  | boolean | True if file1 has the setuid bit set	WITHOUT_CLASSIFICATION	0.999944154267561	WITHOUT_CLASSIFICATION	5.584573243903518E-5	IMPLEMENTATION
// ?x  | boolean | True if file1 exists and is executable by the effective uid/gid	WITHOUT_CLASSIFICATION	0.9999629826835837	WITHOUT_CLASSIFICATION	3.701731641623004E-5	IMPLEMENTATION
// ?X  | boolean | True if file1 exists and is executable by the real uid/gid	WITHOUT_CLASSIFICATION	0.999966578765162	WITHOUT_CLASSIFICATION	3.3421234837881675E-5	IMPLEMENTATION
// ?z  | boolean | True if file1 exists and has a zero length	WITHOUT_CLASSIFICATION	0.9999549223323968	WITHOUT_CLASSIFICATION	4.507766760319093E-5	IMPLEMENTATION
// ?=  | boolean | True if the modification times of file1 and file2 are equal	WITHOUT_CLASSIFICATION	0.9999836597139812	WITHOUT_CLASSIFICATION	1.6340286018869683E-5	IMPLEMENTATION
// ?<  | boolean | True if the modification time of file1 is prior to that of file2	WITHOUT_CLASSIFICATION	0.9999828468933976	WITHOUT_CLASSIFICATION	1.715310660241779E-5	IMPLEMENTATION
// ?>  | boolean | True if the modification time of file1 is after that of file2	WITHOUT_CLASSIFICATION	0.9999844556914353	WITHOUT_CLASSIFICATION	1.554430856470308E-5	IMPLEMENTATION
// ?-  | boolean | True if file1 and file2 are identical	WITHOUT_CLASSIFICATION	0.9999381983782429	WITHOUT_CLASSIFICATION	6.180162175698741E-5	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999222599690087	WITHOUT_CLASSIFICATION	7.774003099124477E-5	IMPLEMENTATION
// Error info is per-thread	WITHOUT_CLASSIFICATION	0.9999573365378988	WITHOUT_CLASSIFICATION	4.2663462101284214E-5	IMPLEMENTATION
// init errorInfo to nil	WITHOUT_CLASSIFICATION	0.9999163655668033	WITHOUT_CLASSIFICATION	8.363443319674436E-5	IMPLEMENTATION
// if we're already aborting, we can receive no further mail	WITHOUT_CLASSIFICATION	0.9999448074911288	WITHOUT_CLASSIFICATION	5.519250887130783E-5	IMPLEMENTATION
// If this thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9998999090009041	WITHOUT_CLASSIFICATION	1.0009099909589892E-4	IMPLEMENTATION
// new interrupt, to hopefully wake it out of any blocking IO	WITHOUT_CLASSIFICATION	0.9999214312425696	WITHOUT_CLASSIFICATION	7.856875743045063E-5	IMPLEMENTATION
// set to default thread group	WITHOUT_CLASSIFICATION	0.999982459668153	WITHOUT_CLASSIFICATION	1.754033184699405E-5	IMPLEMENTATION
// set to default thread group	WITHOUT_CLASSIFICATION	0.999982459668153	WITHOUT_CLASSIFICATION	1.754033184699405E-5	IMPLEMENTATION
// JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999615995088547	WITHOUT_CLASSIFICATION	3.840049114533258E-5	IMPLEMENTATION
// JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999646347014656	WITHOUT_CLASSIFICATION	3.536529853446541E-5	IMPLEMENTATION
// for Thread::start, which does not call the subclass's initialize	WITHOUT_CLASSIFICATION	0.9999888004973292	WITHOUT_CLASSIFICATION	1.1199502670932506E-5	IMPLEMENTATION
// JRUBY-3568, inherit threadgroup or use default	WITHOUT_CLASSIFICATION	0.9999447178448213	WITHOUT_CLASSIFICATION	5.528215517877105E-5	IMPLEMENTATION
// MRI behavior: value given in seconds; converted to Float; less // than or equal to zero returns immediately; returns nil	WITHOUT_CLASSIFICATION	0.9999868226770929	WITHOUT_CLASSIFICATION	1.3177322907078781E-5	IMPLEMENTATION
// If the target thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999591797353746	WITHOUT_CLASSIFICATION	4.0820264625285964E-5	IMPLEMENTATION
// We need this loop in order to be able to "unblock" the // join call without actually calling interrupt.	WITHOUT_CLASSIFICATION	0.9999034365544754	WITHOUT_CLASSIFICATION	9.656344552454421E-5	IMPLEMENTATION
// attempt to decriticalize all if we're the critical thread	WITHOUT_CLASSIFICATION	0.9999598918474797	WITHOUT_CLASSIFICATION	4.01081525204383E-5	IMPLEMENTATION
// not valid for "dead" state	WITHOUT_CLASSIFICATION	0.9996788546434658	WITHOUT_CLASSIFICATION	3.211453565341501E-4	IMPLEMENTATION
// If the killee thread is the same as the killer thread, just die	WITHOUT_CLASSIFICATION	0.9999533398832995	WITHOUT_CLASSIFICATION	4.66601167005711E-5	IMPLEMENTATION
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999896038901206	WITHOUT_CLASSIFICATION	1.0396109879361649E-5	IMPLEMENTATION
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999896038901206	WITHOUT_CLASSIFICATION	1.0396109879361649E-5	IMPLEMENTATION
// ignore; I don't like doing it, but it seems like we // really just need to make all channels non-blocking by // default and use select when implementing blocking ops, // so if this remains set non-blocking, perhaps it's not // such a big deal...	WITHOUT_CLASSIFICATION	0.9999676035524624	WITHOUT_CLASSIFICATION	3.239644753760028E-5	IMPLEMENTATION
// can't select, just have to do a blocking call	WITHOUT_CLASSIFICATION	0.9999603314400957	WITHOUT_CLASSIFICATION	3.966855990439946E-5	IMPLEMENTATION
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9999290990967793	WITHOUT_CLASSIFICATION	7.090090322069117E-5	IMPLEMENTATION
// Create Constants class	WITHOUT_CLASSIFICATION	0.9999643612606836	WITHOUT_CLASSIFICATION	3.5638739316423274E-5	IMPLEMENTATION
// Create constants for open flags	WITHOUT_CLASSIFICATION	0.9999673649913837	WITHOUT_CLASSIFICATION	3.263500861627923E-5	IMPLEMENTATION
// Strip off the O_ prefix, so they become File::RDONLY, and so on	WITHOUT_CLASSIFICATION	0.9999272208226917	WITHOUT_CLASSIFICATION	7.277917730838132E-5	IMPLEMENTATION
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999636905994568	WITHOUT_CLASSIFICATION	3.6309400543179334E-5	IMPLEMENTATION
// File::Constants module is included in IO.	WITHOUT_CLASSIFICATION	0.9999270645863813	WITHOUT_CLASSIFICATION	7.293541361883613E-5	IMPLEMENTATION
// Make sure any existing lock is released before we try and close the file	WITHOUT_CLASSIFICATION	0.9999845873304405	WITHOUT_CLASSIFICATION	1.5412669559472706E-5	IMPLEMENTATION
// null channel always succeeds for all locking operations	WITHOUT_CLASSIFICATION	0.9999556370473758	WITHOUT_CLASSIFICATION	4.436295262423038E-5	IMPLEMENTATION
// Paths which end in "/" or "\\" must be stripped off.	WITHOUT_CLASSIFICATION	0.9999059853251685	WITHOUT_CLASSIFICATION	9.401467483155438E-5	IMPLEMENTATION
// Special case for handling ACCMODE, since constantine will generate // an invalid value if it is not defined by the platform.	WITHOUT_CLASSIFICATION	0.9999964006542769	WITHOUT_CLASSIFICATION	3.59934572308196E-6	IMPLEMENTATION
// Return false here	WITHOUT_CLASSIFICATION	0.999891019382196	WITHOUT_CLASSIFICATION	1.0898061780392553E-4	IMPLEMENTATION
// Return false here	WITHOUT_CLASSIFICATION	0.999891019382196	WITHOUT_CLASSIFICATION	1.0898061780392553E-4	IMPLEMENTATION
// We're not actually a real file, so we can't flock	WITHOUT_CLASSIFICATION	0.9998260278233668	WITHOUT_CLASSIFICATION	1.7397217663317233E-4	IMPLEMENTATION
// Should we do anything?	WITHOUT_CLASSIFICATION	0.9997351259263839	WITHOUT_CLASSIFICATION	2.6487407361604307E-4	IMPLEMENTATION
/* File class methods */	WITHOUT_CLASSIFICATION	0.999927299469518	WITHOUT_CLASSIFICATION	7.270053048201257E-5	IMPLEMENTATION
// MRI-compatible basename handling for windows drive letter paths	WITHOUT_CLASSIFICATION	0.9998908414527024	WITHOUT_CLASSIFICATION	1.0915854729771161E-4	IMPLEMENTATION
// strip c: away from relative-pathed name	WITHOUT_CLASSIFICATION	0.9999311975143728	WITHOUT_CLASSIFICATION	6.88024856272821E-5	IMPLEMENTATION
// C:\ is returned unchanged	WITHOUT_CLASSIFICATION	0.9999468276108291	WITHOUT_CLASSIFICATION	5.317238917100115E-5	IMPLEMENTATION
// -1 no match; 0 it is dot file not extension	WITHOUT_CLASSIFICATION	0.9999156209990963	WITHOUT_CLASSIFICATION	8.437900090372969E-5	IMPLEMENTATION
// trim trailing slashes	WITHOUT_CLASSIFICATION	0.9998886686050132	WITHOUT_CLASSIFICATION	1.1133139498675128E-4	IMPLEMENTATION
// Dot is not at beginning and not at end of filename. 	WITHOUT_CLASSIFICATION	0.9999657780543519	WITHOUT_CLASSIFICATION	3.4221945648024686E-5	IMPLEMENTATION
// Handle ~user paths 	WITHOUT_CLASSIFICATION	0.9998950503747706	WITHOUT_CLASSIFICATION	1.0494962522950433E-4	IMPLEMENTATION
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9999290990967793	WITHOUT_CLASSIFICATION	7.090090322069117E-5	IMPLEMENTATION
// Include additional path separator // (so that dirname of "C:\file.txt" is  "C:\", not "C:")	WITHOUT_CLASSIFICATION	0.9999089019577188	WITHOUT_CLASSIFICATION	9.109804228134278E-5	IMPLEMENTATION
// FNFException can be thrown in both cases, when the file // is not found, or when permission is denied.	WITHOUT_CLASSIFICATION	0.9999894875088153	WITHOUT_CLASSIFICATION	1.051249118461069E-5	IMPLEMENTATION
// No directory delimeter.  Rest of string is username	WITHOUT_CLASSIFICATION	0.9999674278453887	WITHOUT_CLASSIFICATION	3.257215461122697E-5	IMPLEMENTATION
// If there's a second argument, it's the path to which the first  // argument is relative.	WITHOUT_CLASSIFICATION	0.99998907594101	WITHOUT_CLASSIFICATION	1.0924058989894274E-5	IMPLEMENTATION
// Handle ~user paths.	WITHOUT_CLASSIFICATION	0.9998949373316153	WITHOUT_CLASSIFICATION	1.0506266838464607E-4	IMPLEMENTATION
// If there's no second argument, simply use the working directory  // of the runtime.	WITHOUT_CLASSIFICATION	0.9999872812711942	WITHOUT_CLASSIFICATION	1.271872880585281E-5	IMPLEMENTATION
// Find out which string to check.	WITHOUT_CLASSIFICATION	0.9999620501857912	WITHOUT_CLASSIFICATION	3.794981420887377E-5	IMPLEMENTATION
// Single '~' as whole path to expand	WITHOUT_CLASSIFICATION	0.9998975075804071	WITHOUT_CLASSIFICATION	1.024924195928977E-4	IMPLEMENTATION
// Count number of extra slashes in the beginning of the string.	WITHOUT_CLASSIFICATION	0.9999892596513867	WITHOUT_CLASSIFICATION	1.074034861316657E-5	IMPLEMENTATION
// '~user/...' as path to expand	WITHOUT_CLASSIFICATION	0.9998836474508799	WITHOUT_CLASSIFICATION	1.1635254912018075E-4	IMPLEMENTATION
// '~/...' as path to expand	WITHOUT_CLASSIFICATION	0.9998815621702887	WITHOUT_CLASSIFICATION	1.1843782971129612E-4	IMPLEMENTATION
// Prepare a string with the same number of redundant slashes so that  // we easily can prepend it to the result.	WITHOUT_CLASSIFICATION	0.9999830466608194	WITHOUT_CLASSIFICATION	1.695333918070276E-5	IMPLEMENTATION
// If there are N slashes, then we want N-1.	WITHOUT_CLASSIFICATION	0.9999491990064036	WITHOUT_CLASSIFICATION	5.0800993596399684E-5	IMPLEMENTATION
// no canonical path yet or length is zero, and we have a / followed by a dot...	WITHOUT_CLASSIFICATION	0.9999454844372272	WITHOUT_CLASSIFICATION	5.451556277289872E-5	IMPLEMENTATION
// we don't have another slash after this, so replace /. with /	WITHOUT_CLASSIFICATION	0.9999610879575507	WITHOUT_CLASSIFICATION	3.8912042449438715E-5	IMPLEMENTATION
// we do have another slash; omit both / and . (JRUBY-1606)	WITHOUT_CLASSIFICATION	0.9998667081489347	WITHOUT_CLASSIFICATION	1.3329185106522826E-4	IMPLEMENTATION
// do nothing, we should not delete the drive letter	WITHOUT_CLASSIFICATION	0.999993425646175	WITHOUT_CLASSIFICATION	6.574353824973684E-6	IMPLEMENTATION
/* rb: check_modifiable */	WITHOUT_CLASSIFICATION	0.999889131766869	WITHOUT_CLASSIFICATION	1.1086823313098677E-4	IMPLEMENTATION
/* rb: readable */	WITHOUT_CLASSIFICATION	0.9998454261064189	WITHOUT_CLASSIFICATION	1.54573893581179E-4	IMPLEMENTATION
// rename is successful	WITHOUT_CLASSIFICATION	0.9999456199295618	WITHOUT_CLASSIFICATION	5.438007043825713E-5	IMPLEMENTATION
// rename via Java API call wasn't successful, let's try some tricks, similar to MRI 	WITHOUT_CLASSIFICATION	0.9999538141796894	WITHOUT_CLASSIFICATION	4.618582031054426E-5	IMPLEMENTATION
// try to rename one more time	WITHOUT_CLASSIFICATION	0.9999390646502115	WITHOUT_CLASSIFICATION	6.093534978843891E-5	IMPLEMENTATION
// Can we produce IOError which bypasses a close?	WITHOUT_CLASSIFICATION	0.9998861450823182	WITHOUT_CLASSIFICATION	1.1385491768175041E-4	IMPLEMENTATION
// Fast path since JNA stat is about 10x slower than this	WITHOUT_CLASSIFICATION	0.9999040855052438	WITHOUT_CLASSIFICATION	9.591449475619969E-5	IMPLEMENTATION
// RubyContinuation	WITHOUT_CLASSIFICATION	0.9998427419871702	WITHOUT_CLASSIFICATION	1.5725801282988634E-4	IMPLEMENTATION
/*     *  Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq)     *  it doesn't initialize ifNone field     */	WITHOUT_CLASSIFICATION	0.9999968087966877	WITHOUT_CLASSIFICATION	3.1912033122431423E-6	IMPLEMENTATION
// 16 ?	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
// generation count for O(1) clears	WITHOUT_CLASSIFICATION	0.9999706652954603	WITHOUT_CLASSIFICATION	2.9334704539761144E-5	IMPLEMENTATION
// size + 1;	WITHOUT_CLASSIFICATION	0.9998775577601579	WITHOUT_CLASSIFICATION	1.2244223984221044E-4	IMPLEMENTATION
// suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen	WITHOUT_CLASSIFICATION	0.999895510518487	WITHOUT_CLASSIFICATION	1.0448948151300618E-4	IMPLEMENTATION
// ------------------------------	WITHOUT_CLASSIFICATION	0.9999855111548319	WITHOUT_CLASSIFICATION	1.448884516810772E-5	IMPLEMENTATION
// ------------------------------	WITHOUT_CLASSIFICATION	0.9999855111548319	WITHOUT_CLASSIFICATION	1.448884516810772E-5	IMPLEMENTATION
// put implementation	WITHOUT_CLASSIFICATION	0.9914005585512697	WITHOUT_CLASSIFICATION	0.00859944144873022	IMPLEMENTATION
// get implementation	WITHOUT_CLASSIFICATION	0.9959747339437847	WITHOUT_CLASSIFICATION	0.004025266056215329	IMPLEMENTATION
// specialized for value	WITHOUT_CLASSIFICATION	0.9999549991874568	WITHOUT_CLASSIFICATION	4.5000812543111906E-5	IMPLEMENTATION
// delete implementation	WITHOUT_CLASSIFICATION	0.9977928487084015	WITHOUT_CLASSIFICATION	0.002207151291598521	IMPLEMENTATION
// n.b. we need to recompute the hash in case the key object was modified	WITHOUT_CLASSIFICATION	0.9999414461707029	WITHOUT_CLASSIFICATION	5.8553829297131285E-5	IMPLEMENTATION
/* ============================     * End of hash internals     * ============================     */	WITHOUT_CLASSIFICATION	0.9999364636837875	WITHOUT_CLASSIFICATION	6.35363162124898E-5	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================     */	WITHOUT_CLASSIFICATION	0.999936936014604	WITHOUT_CLASSIFICATION	6.306398539608659E-5	IMPLEMENTATION
// update the hash value	WITHOUT_CLASSIFICATION	0.9999857936085013	WITHOUT_CLASSIFICATION	1.4206391498705891E-5	IMPLEMENTATION
// other hash does not contain key	WITHOUT_CLASSIFICATION	0.9999126996526423	WITHOUT_CLASSIFICATION	8.730034735768977E-5	IMPLEMENTATION
// rb_yield_values(2,...) equivalent	WITHOUT_CLASSIFICATION	0.9997772853877573	WITHOUT_CLASSIFICATION	2.2271461224272738E-4	IMPLEMENTATION
// Satisfy java.util.Set interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999394544603838	WITHOUT_CLASSIFICATION	6.0545539616107946E-5	IMPLEMENTATION
// remain where we are	WITHOUT_CLASSIFICATION	0.9999148672205226	WITHOUT_CLASSIFICATION	8.51327794774231E-5	IMPLEMENTATION
// We use file test since it is faster than a stat; also euid == uid in Java always	WITHOUT_CLASSIFICATION	0.9999170909267778	WITHOUT_CLASSIFICATION	8.290907322223221E-5	IMPLEMENTATION
// default: don't retain	WITHOUT_CLASSIFICATION	0.999969713526674	WITHOUT_CLASSIFICATION	3.0286473326025368E-5	IMPLEMENTATION
// once hasNext has been called, we commit to next() returning // the entry it found, even if it were subsequently deleted	WITHOUT_CLASSIFICATION	0.9999743236296443	WITHOUT_CLASSIFICATION	2.567637035573998E-5	IMPLEMENTATION
// Not exposed by filetest, but so similiar in nature that it is stored here	WITHOUT_CLASSIFICATION	0.9998670158137334	WITHOUT_CLASSIFICATION	1.3298418626660408E-4	IMPLEMENTATION
// We do both writable and writable_real through the same method because // in our java process effective and real userid will always be the same.	WITHOUT_CLASSIFICATION	0.999978128454538	WITHOUT_CLASSIFICATION	2.187154546197022E-5	IMPLEMENTATION
// first try as directory	WITHOUT_CLASSIFICATION	0.9999634578343332	WITHOUT_CLASSIFICATION	3.654216566686257E-5	IMPLEMENTATION
// next as regular file	WITHOUT_CLASSIFICATION	0.9998685445602319	WITHOUT_CLASSIFICATION	1.3145543976810281E-4	IMPLEMENTATION
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9999578479348696	WITHOUT_CLASSIFICATION	4.215206513039391E-5	IMPLEMENTATION
// NIO-based	WITHOUT_CLASSIFICATION	0.9998452716963772	WITHOUT_CLASSIFICATION	1.547283036228302E-4	IMPLEMENTATION
// NIO-based	WITHOUT_CLASSIFICATION	0.9998452716963772	WITHOUT_CLASSIFICATION	1.547283036228302E-4	IMPLEMENTATION
// Stream-based	WITHOUT_CLASSIFICATION	0.9998592868859472	WITHOUT_CLASSIFICATION	1.4071311405292934E-4	IMPLEMENTATION
// special constructor that accepts stream, not channel	WITHOUT_CLASSIFICATION	0.9999345460973662	WITHOUT_CLASSIFICATION	6.545390263382531E-5	IMPLEMENTATION
/*     * We use FILE versus IO to match T_FILE in MRI.     */	WITHOUT_CLASSIFICATION	0.9999642130985555	WITHOUT_CLASSIFICATION	3.578690144456732E-5	IMPLEMENTATION
// Constants for seek	WITHOUT_CLASSIFICATION	0.9999236839331729	WITHOUT_CLASSIFICATION	7.631606682705449E-5	IMPLEMENTATION
// confirm we're not reopening self's channel	WITHOUT_CLASSIFICATION	0.9999264175105802	WITHOUT_CLASSIFICATION	7.358248941976626E-5	IMPLEMENTATION
// check if we're a stdio IO, and ensure we're not badly mutilated	WITHOUT_CLASSIFICATION	0.9999795089034541	WITHOUT_CLASSIFICATION	2.0491096545870444E-5	IMPLEMENTATION
// dup2 new fd into self to preserve fileno and references to it	WITHOUT_CLASSIFICATION	0.9999550788870846	WITHOUT_CLASSIFICATION	4.492111291535077E-5	IMPLEMENTATION
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999538259489136	WITHOUT_CLASSIFICATION	4.6174051086523773E-5	IMPLEMENTATION
// re-register the descriptor	WITHOUT_CLASSIFICATION	0.9999498696388744	WITHOUT_CLASSIFICATION	5.0130361125621956E-5	IMPLEMENTATION
// since we're not actually duping the incoming channel into our handler, we need to // copy the original sync behavior from the other handler	WITHOUT_CLASSIFICATION	0.9999680066116392	WITHOUT_CLASSIFICATION	3.199338836080428E-5	IMPLEMENTATION
// re-register	WITHOUT_CLASSIFICATION	0.9998802866114378	WITHOUT_CLASSIFICATION	1.1971338856232531E-4	IMPLEMENTATION
// A potentially previously close IO is being 'reopened'.	WITHOUT_CLASSIFICATION	0.9999214979370521	WITHOUT_CLASSIFICATION	7.850206294792307E-5	IMPLEMENTATION
/*     * Ensure that separator is valid otherwise give it the default paragraph separator.     */	WITHOUT_CLASSIFICATION	0.999995641110389	WITHOUT_CLASSIFICATION	4.358889611134367E-6	IMPLEMENTATION
// loop until we see the nth separator char	WITHOUT_CLASSIFICATION	0.9999417836961606	WITHOUT_CLASSIFICATION	5.821630383926579E-5	IMPLEMENTATION
// if we hit EOF or reached limit then we're done	WITHOUT_CLASSIFICATION	0.9999262683780015	WITHOUT_CLASSIFICATION	7.373162199848083E-5	IMPLEMENTATION
// this is for a range check, near as I can tell	WITHOUT_CLASSIFICATION	0.9999567512792435	WITHOUT_CLASSIFICATION	4.324872075640372E-5	IMPLEMENTATION
// IO class methods.	WITHOUT_CLASSIFICATION	0.9999025450794412	WITHOUT_CLASSIFICATION	9.745492055875182E-5	IMPLEMENTATION
// use original modes	WITHOUT_CLASSIFICATION	0.9999308846903757	WITHOUT_CLASSIFICATION	6.911530962426097E-5	IMPLEMENTATION
// See if we already have this descriptor open. // If so then we can mostly share the handler (keep open // file, but possibly change the mode).	WITHOUT_CLASSIFICATION	0.9999759235830123	WITHOUT_CLASSIFICATION	2.4076416987592016E-5	IMPLEMENTATION
// redundant, done above as well	WITHOUT_CLASSIFICATION	0.9998550480027544	WITHOUT_CLASSIFICATION	1.4495199724562767E-4	IMPLEMENTATION
// MRI behavior: swallow StandardErorrs	WITHOUT_CLASSIFICATION	0.9999117002620651	WITHOUT_CLASSIFICATION	8.829973793490963E-5	IMPLEMENTATION
// -1 == don't set permissions	WITHOUT_CLASSIFICATION	0.9999033914035544	WITHOUT_CLASSIFICATION	9.660859644556379E-5	IMPLEMENTATION
// isRetained=true	WITHOUT_CLASSIFICATION	0.9998449808920223	WITHOUT_CLASSIFICATION	1.5501910797757206E-4	IMPLEMENTATION
// This appears to be some windows-only mode.  On a java platform this is a no-op	WITHOUT_CLASSIFICATION	0.9999719325163171	WITHOUT_CLASSIFICATION	2.8067483682789483E-5	IMPLEMENTATION
// if not sync, we switch to write buffered mode	WITHOUT_CLASSIFICATION	0.9999547720478169	WITHOUT_CLASSIFICATION	4.522795218315891E-5	IMPLEMENTATION
/*     * Throw bad file descriptor is we can not read on supplied descriptor.     */	WITHOUT_CLASSIFICATION	0.9999599325768204	WITHOUT_CLASSIFICATION	4.006742317961296E-5	IMPLEMENTATION
//Everything written	WITHOUT_CLASSIFICATION	0.999892390971357	WITHOUT_CLASSIFICATION	1.0760902864303427E-4	IMPLEMENTATION
//            return len - n;	WITHOUT_CLASSIFICATION	0.9999845723002113	WITHOUT_CLASSIFICATION	1.5427699788735378E-5	IMPLEMENTATION
// Claims conversion is done via 'to_s' in docs.	WITHOUT_CLASSIFICATION	0.9999387792728838	WITHOUT_CLASSIFICATION	6.122072711624009E-5	IMPLEMENTATION
// Of course this isn't particularly useful.	WITHOUT_CLASSIFICATION	0.9997971645292656	WITHOUT_CLASSIFICATION	2.0283547073437274E-4	IMPLEMENTATION
// Must be back on first line on rewind.	WITHOUT_CLASSIFICATION	0.9999277450072838	WITHOUT_CLASSIFICATION	7.225499271624288E-5	IMPLEMENTATION
// Register the new descriptor	WITHOUT_CLASSIFICATION	0.9999571820772617	WITHOUT_CLASSIFICATION	4.2817922738320215E-5	IMPLEMENTATION
// cleanup, raising errors if any	WITHOUT_CLASSIFICATION	0.9998962813709731	WITHOUT_CLASSIFICATION	1.0371862902698225E-4	IMPLEMENTATION
// hmmmm	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
// I believe Ruby bails out with a "bug" if closing fails	WITHOUT_CLASSIFICATION	0.999884256403973	WITHOUT_CLASSIFICATION	1.1574359602705763E-4	IMPLEMENTATION
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec. // And why the hell does webrick pass this in as a first argument!!!!!	WITHOUT_CLASSIFICATION	0.9999877361171523	WITHOUT_CLASSIFICATION	1.226388284766458E-5	IMPLEMENTATION
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec.	WITHOUT_CLASSIFICATION	0.9999891350608167	WITHOUT_CLASSIFICATION	1.086493918337544E-5	IMPLEMENTATION
// Length to read	WITHOUT_CLASSIFICATION	0.9999185381341914	WITHOUT_CLASSIFICATION	8.146186580853068E-5	IMPLEMENTATION
// String/Buffer to read it into	WITHOUT_CLASSIFICATION	0.999937280887346	WITHOUT_CLASSIFICATION	6.271911265395685E-5	IMPLEMENTATION
// cryptic for the uninitiated...	WITHOUT_CLASSIFICATION	0.9999190485623062	WITHOUT_CLASSIFICATION	8.095143769380502E-5	IMPLEMENTATION
// select until read is ready	WITHOUT_CLASSIFICATION	0.9999602630400224	WITHOUT_CLASSIFICATION	3.97369599776943E-5	IMPLEMENTATION
//        ByteList buffer = null;	WITHOUT_CLASSIFICATION	0.9999589347531225	WITHOUT_CLASSIFICATION	4.106524687758551E-5	IMPLEMENTATION
//            buffer = str.getByteList();	WITHOUT_CLASSIFICATION	0.9999568147690298	WITHOUT_CLASSIFICATION	4.318523097015223E-5	IMPLEMENTATION
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9998867432546749	WITHOUT_CLASSIFICATION	1.1325674532520368E-4	IMPLEMENTATION
/* rb: writable */	WITHOUT_CLASSIFICATION	0.999859274544006	WITHOUT_CLASSIFICATION	1.407254559940561E-4	IMPLEMENTATION
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9998867432546749	WITHOUT_CLASSIFICATION	1.1325674532520368E-4	IMPLEMENTATION
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999797334903959	WITHOUT_CLASSIFICATION	2.0266509604085705E-5	IMPLEMENTATION
// TODO: read into buffer using all the fread logic //        int read = openFile.getMainStream().fread(buffer);	WITHOUT_CLASSIFICATION	0.9654287423359287	WITHOUT_CLASSIFICATION	0.03457125766407142	IMPLEMENTATION
// truncate buffer string to zero, if provided	WITHOUT_CLASSIFICATION	0.9999533678148476	WITHOUT_CLASSIFICATION	4.663218515249899E-5	IMPLEMENTATION
// TODO: READ_CHECK from MRI	WITHOUT_CLASSIFICATION	0.7103033399684642	WITHOUT_CLASSIFICATION	0.28969666003153577	IMPLEMENTATION
/* class methods for IO */	WITHOUT_CLASSIFICATION	0.9999326498046583	WITHOUT_CLASSIFICATION	6.735019534162575E-5	IMPLEMENTATION
// save blocking state	WITHOUT_CLASSIFICATION	0.9999328564776746	WITHOUT_CLASSIFICATION	6.714352232540892E-5	IMPLEMENTATION
// write	WITHOUT_CLASSIFICATION	0.9960640196035128	WITHOUT_CLASSIFICATION	0.0039359803964872505	IMPLEMENTATION
// Java's select doesn't do anything about this, so we leave it be.	WITHOUT_CLASSIFICATION	0.9999840126128676	WITHOUT_CLASSIFICATION	1.5987387132341214E-5	IMPLEMENTATION
// make all sockets blocking as configured again // close unregisters all channels, so we can safely reset blocking modes	WITHOUT_CLASSIFICATION	0.9999534684967133	WITHOUT_CLASSIFICATION	4.653150328683824E-5	IMPLEMENTATION
// FIXME: process options	WITHOUT_CLASSIFICATION	0.9997153340659752	WITHOUT_CLASSIFICATION	2.8466593402473925E-4	IMPLEMENTATION
// Enebo: annotation processing forced me to do pangea method here...	WITHOUT_CLASSIFICATION	0.9999202426288498	WITHOUT_CLASSIFICATION	7.975737115027156E-5	IMPLEMENTATION
// NIO based pipe	WITHOUT_CLASSIFICATION	0.9998479169523251	WITHOUT_CLASSIFICATION	1.5208304767490242E-4	IMPLEMENTATION
// not using remove(Object) here to avoid the equals() call	WITHOUT_CLASSIFICATION	0.9996980604644972	WITHOUT_CLASSIFICATION	3.019395355027629E-4	IMPLEMENTATION
// raise will also wake the thread from selection	WITHOUT_CLASSIFICATION	0.9999595592559983	WITHOUT_CLASSIFICATION	4.044074400169975E-5	IMPLEMENTATION
/* may need to handle ENC_CODERANGE_BROKEN */	WITHOUT_CLASSIFICATION	0.9997789807615509	WITHOUT_CLASSIFICATION	2.2101923844910072E-4	IMPLEMENTATION
// TODO: rb_usascii_str_new2	WITHOUT_CLASSIFICATION	0.8892454887885095	WITHOUT_CLASSIFICATION	0.11075451121149046	IMPLEMENTATION
// If we know what method was being called, strip everything // before the call. This hides the JRuby and reflection internals.	WITHOUT_CLASSIFICATION	0.9999569832806579	WITHOUT_CLASSIFICATION	4.301671934207902E-5	IMPLEMENTATION
// The class of this object	WITHOUT_CLASSIFICATION	0.9999738026423587	WITHOUT_CLASSIFICATION	2.6197357641255024E-5	IMPLEMENTATION
// zeroed by jvm	WITHOUT_CLASSIFICATION	0.9998475498751659	WITHOUT_CLASSIFICATION	1.5245012483408482E-4	IMPLEMENTATION
//objectClass.defineAnnotatedMethods(BasicObjectMethods.class);	WITHOUT_CLASSIFICATION	0.9999041137560445	WITHOUT_CLASSIFICATION	9.588624395552106E-5	IMPLEMENTATION
// JRUBY-4113: callers should not call setTaint on immediate objects	WITHOUT_CLASSIFICATION	0.9999349919221472	WITHOUT_CLASSIFICATION	6.500807785278166E-5	IMPLEMENTATION
// rb_class_boot	WITHOUT_CLASSIFICATION	0.9998416249398302	WITHOUT_CLASSIFICATION	1.5837506016977909E-4	IMPLEMENTATION
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9998679022243461	WITHOUT_CLASSIFICATION	1.320977756538609E-4	IMPLEMENTATION
// 1.9 rb_check_to_integer	WITHOUT_CLASSIFICATION	0.9998701816360954	WITHOUT_CLASSIFICATION	1.2981836390461927E-4	IMPLEMENTATION
// for interface impls	WITHOUT_CLASSIFICATION	0.9999717443484155	WITHOUT_CLASSIFICATION	2.825565158440294E-5	IMPLEMENTATION
// We're cloning ourselves, so we know the result should be a RubyObject	WITHOUT_CLASSIFICATION	0.9999181297315032	WITHOUT_CLASSIFICATION	8.187026849676866E-5	IMPLEMENTATION
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999645143659918	WITHOUT_CLASSIFICATION	3.548563400827004E-5	IMPLEMENTATION
// can't use -v and stdin	WITHOUT_CLASSIFICATION	0.9999258946742571	WITHOUT_CLASSIFICATION	7.410532574291461E-5	IMPLEMENTATION
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999280640555817	WITHOUT_CLASSIFICATION	7.193594441837718E-5	IMPLEMENTATION
// Equivalent of Data_Get_Struct // This will first check that the object in question is actually a T_DATA equivalent.	WITHOUT_CLASSIFICATION	0.9999745856473093	WITHOUT_CLASSIFICATION	2.541435269059992E-5	IMPLEMENTATION
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9998842480913991	WITHOUT_CLASSIFICATION	1.1575190860102471E-4	IMPLEMENTATION
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9998835483538413	WITHOUT_CLASSIFICATION	1.1645164615873116E-4	IMPLEMENTATION
// // INSTANCE VARIABLE API METHODS //	WITHOUT_CLASSIFICATION	0.9998834009606948	WITHOUT_CLASSIFICATION	1.1659903930509294E-4	IMPLEMENTATION
// Struct methods	WITHOUT_CLASSIFICATION	0.9998842222545075	WITHOUT_CLASSIFICATION	1.1577774549255983E-4	IMPLEMENTATION
//runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);	WITHOUT_CLASSIFICATION	0.9999133138981094	WITHOUT_CLASSIFICATION	8.668610189060705E-5	IMPLEMENTATION
// define access methods.	WITHOUT_CLASSIFICATION	0.9999207942463331	WITHOUT_CLASSIFICATION	7.920575366696626E-5	IMPLEMENTATION
// if we are storing a name as well, index is one too high for values	WITHOUT_CLASSIFICATION	0.9999600890288352	WITHOUT_CLASSIFICATION	3.991097116493582E-5	IMPLEMENTATION
// Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999715795164497	WITHOUT_CLASSIFICATION	2.8420483550309222E-5	IMPLEMENTATION
// For binding purposes on the newly created struct types	WITHOUT_CLASSIFICATION	0.9999410936790494	WITHOUT_CLASSIFICATION	5.890632095066193E-5	IMPLEMENTATION
// OBJ_INFECT        	WITHOUT_CLASSIFICATION	0.9998937633546026	WITHOUT_CLASSIFICATION	1.0623664539732832E-4	IMPLEMENTATION
// These call* assume ThreadContext = receiver.getRuntime().getCurrentContext()	WITHOUT_CLASSIFICATION	0.9999162391486396	WITHOUT_CLASSIFICATION	8.376085136044574E-5	IMPLEMENTATION
// Execute iterateMethod again.	WITHOUT_CLASSIFICATION	0.9999184602492442	WITHOUT_CLASSIFICATION	8.153975075570338E-5	IMPLEMENTATION
/*     * @param nv number of times to cycle or -1 to cycle indefinitely     */	WITHOUT_CLASSIFICATION	0.9999744760013111	WITHOUT_CLASSIFICATION	2.5523998688832247E-5	IMPLEMENTATION
// Atomic ?	WITHOUT_CLASSIFICATION	0.9998415686846777	WITHOUT_CLASSIFICATION	1.5843131532233462E-4	IMPLEMENTATION
// Atomic ?	WITHOUT_CLASSIFICATION	0.9998415686846777	WITHOUT_CLASSIFICATION	1.5843131532233462E-4	IMPLEMENTATION
// MUST NOT be used across threads	WITHOUT_CLASSIFICATION	0.9998695216652856	WITHOUT_CLASSIFICATION	1.3047833471439895E-4	IMPLEMENTATION
// superClass may be null.	WITHOUT_CLASSIFICATION	0.9999010243508459	WITHOUT_CLASSIFICATION	9.897564915399069E-5	IMPLEMENTATION
// Containing class...The parent of Object is null. Object should always be last in chain.	WITHOUT_CLASSIFICATION	0.9999425011667044	WITHOUT_CLASSIFICATION	5.7498833295583866E-5	IMPLEMENTATION
// ClassId is the name of the class/module sans where it is located. // If it is null, then it an anonymous class.	WITHOUT_CLASSIFICATION	0.999991543689798	WITHOUT_CLASSIFICATION	8.456310201952907E-6	IMPLEMENTATION
// ClassProviders return Java class/module (in #defineOrGetClassUnder and // #defineOrGetModuleUnder) when class/module is opened using colon syntax. 	WITHOUT_CLASSIFICATION	0.9999777185672369	WITHOUT_CLASSIFICATION	2.2281432763127795E-5	IMPLEMENTATION
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999819187032024	WITHOUT_CLASSIFICATION	1.808129679759065E-5	IMPLEMENTATION
// Make sure the module we include does not already exist	WITHOUT_CLASSIFICATION	0.9999873417511562	WITHOUT_CLASSIFICATION	1.2658248843725826E-5	IMPLEMENTATION
// MRI checks all types first:	WITHOUT_CLASSIFICATION	0.9998934808408865	WITHOUT_CLASSIFICATION	1.0651915911343915E-4	IMPLEMENTATION
// we need full traces, use default (slow) populator	WITHOUT_CLASSIFICATION	0.9999598994007819	WITHOUT_CLASSIFICATION	4.010059921797073E-5	IMPLEMENTATION
// module/singleton methods are all defined public	WITHOUT_CLASSIFICATION	0.9999440954575438	WITHOUT_CLASSIFICATION	5.590454245623303E-5	IMPLEMENTATION
// See if module is in chain...Cannot match against itself so start at superClass.	WITHOUT_CLASSIFICATION	0.9999429782738799	WITHOUT_CLASSIFICATION	5.7021726120141914E-5	IMPLEMENTATION
// We can safely reference methods here instead of doing getMethods() since if we // are adding we are not using a IncludedModuleWrapper.	WITHOUT_CLASSIFICATION	0.9999831063309196	WITHOUT_CLASSIFICATION	1.6893669080346627E-5	IMPLEMENTATION
// we grab serial number first; the worst that will happen is we cache a later // update with an earlier serial number, which would just flush anyway	WITHOUT_CLASSIFICATION	0.9999792431933183	WITHOUT_CLASSIFICATION	2.0756806681629043E-5	IMPLEMENTATION
// update all hierarchies into which this module has been included	WITHOUT_CLASSIFICATION	0.9999746217043194	WITHOUT_CLASSIFICATION	2.5378295680529957E-5	IMPLEMENTATION
// This method is intended only for defining new classes in Ruby code, // so it uses the allocator of the specified superclass or default to // the Object allocator. It should NOT be used to define classes that require a native allocator.	WITHOUT_CLASSIFICATION	0.9999943702261708	WITHOUT_CLASSIFICATION	5.6297738293014104E-6	IMPLEMENTATION
// need to skip IncludedModuleWrappers	WITHOUT_CLASSIFICATION	0.9998685174466692	WITHOUT_CLASSIFICATION	1.3148255333084332E-4	IMPLEMENTATION
// superClazz = null;	WITHOUT_CLASSIFICATION	0.9998980065502053	WITHOUT_CLASSIFICATION	1.0199344979467283E-4	IMPLEMENTATION
// reopen a java class	WITHOUT_CLASSIFICATION	0.9999194176022808	WITHOUT_CLASSIFICATION	8.058239771929028E-5	IMPLEMENTATION
// This method is intended only for defining new modules in Ruby code	WITHOUT_CLASSIFICATION	0.9998859848158758	WITHOUT_CLASSIFICATION	1.1401518412431245E-4	IMPLEMENTATION
// reopen a java module	WITHOUT_CLASSIFICATION	0.9998876012915989	WITHOUT_CLASSIFICATION	1.1239870840109496E-4	IMPLEMENTATION
//FIXME warning	WITHOUT_CLASSIFICATION	0.9998481858027781	WITHOUT_CLASSIFICATION	1.518141972218022E-4	IMPLEMENTATION
// FIXME warning	WITHOUT_CLASSIFICATION	0.9997940978741643	WITHOUT_CLASSIFICATION	2.0590212583568068E-4	IMPLEMENTATION
// a normal block passed to define_method changes to do arity checking; make it a lambda	WITHOUT_CLASSIFICATION	0.9999069133820282	WITHOUT_CLASSIFICATION	9.308661797178106E-5	IMPLEMENTATION
// for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope	WITHOUT_CLASSIFICATION	0.9999462842467793	WITHOUT_CLASSIFICATION	5.371575322065993E-5	IMPLEMENTATION
// just using required is broken...but no more broken than before zsuper refactoring	WITHOUT_CLASSIFICATION	0.9999431919725005	WITHOUT_CLASSIFICATION	5.680802749956385E-5	IMPLEMENTATION
// class and module bodies default to public, so make the block's visibility public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999841954716083	WITHOUT_CLASSIFICATION	1.5804528391676936E-5	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999940370102126	WITHOUT_CLASSIFICATION	5.962989787390735E-6	IMPLEMENTATION
// MRI error message says Class, even though Module is ok 	WITHOUT_CLASSIFICATION	0.9999532903872527	WITHOUT_CLASSIFICATION	4.6709612747202454E-5	IMPLEMENTATION
// scan class hierarchy for module	WITHOUT_CLASSIFICATION	0.9999424041172651	WITHOUT_CLASSIFICATION	5.759588273482219E-5	IMPLEMENTATION
/* Module class methods */	WITHOUT_CLASSIFICATION	0.9999249732340753	WITHOUT_CLASSIFICATION	7.50267659247748E-5	IMPLEMENTATION
// Note: we change current frames visibility here because the methods which call // this method are all "fast" (e.g. they do not created their own frame).	WITHOUT_CLASSIFICATION	0.9999852975988784	WITHOUT_CLASSIFICATION	1.4702401121530694E-5	IMPLEMENTATION
// next in hierarchy is an included version of the module we're attempting, // so we skip including it	WITHOUT_CLASSIFICATION	0.9999878034466274	WITHOUT_CLASSIFICATION	1.2196553372537692E-5	IMPLEMENTATION
// if we haven't encountered a real superclass, use the found module as the new inclusion point	WITHOUT_CLASSIFICATION	0.9999786912365491	WITHOUT_CLASSIFICATION	2.130876345090554E-5	IMPLEMENTATION
// build a list of all modules to consider for inclusion	WITHOUT_CLASSIFICATION	0.9999238176373726	WITHOUT_CLASSIFICATION	7.61823626274724E-5	IMPLEMENTATION
// if the insertion point is a class, update subclass lists	WITHOUT_CLASSIFICATION	0.9999928266475516	WITHOUT_CLASSIFICATION	7.173352448268476E-6	IMPLEMENTATION
// if there's a non-null superclass, we're including into a normal class hierarchy; // update subclass relationships to avoid stale parent/child relationships	WITHOUT_CLASSIFICATION	0.9999974478502377	WITHOUT_CLASSIFICATION	2.5521497623268022E-6	IMPLEMENTATION
// ////////////////// CLASS VARIABLE RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.999995183934492	WITHOUT_CLASSIFICATION	4.8160655080226956E-6	IMPLEMENTATION
// ////////////////// CONSTANT RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999950942996898	WITHOUT_CLASSIFICATION	4.905700310119904E-6	IMPLEMENTATION
// Note: includes part of fix for JRUBY-1339	WITHOUT_CLASSIFICATION	0.9998836629284287	WITHOUT_CLASSIFICATION	1.1633707157138161E-4	IMPLEMENTATION
// ////////////////// CLASS VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999951839552966	WITHOUT_CLASSIFICATION	4.8160447033529825E-6	IMPLEMENTATION
// Wrong Parameter ?	WITHOUT_CLASSIFICATION	0.9998842868544605	WITHOUT_CLASSIFICATION	1.1571314553942481E-4	IMPLEMENTATION
// not actually called anywhere (all known uses call the fast version)	WITHOUT_CLASSIFICATION	0.9997293318079309	WITHOUT_CLASSIFICATION	2.7066819206912927E-4	IMPLEMENTATION
// Not that is loaded loop around to resolve it next pass	WITHOUT_CLASSIFICATION	0.9998170994693861	WITHOUT_CLASSIFICATION	1.829005306138749E-4	IMPLEMENTATION
// if adding a module under a constant name, set that module's basename to the constant name	WITHOUT_CLASSIFICATION	0.9999562087692494	WITHOUT_CLASSIFICATION	4.379123075060417E-5	IMPLEMENTATION
// Fix for JRUBY-1339 - search hierarchy for constant	WITHOUT_CLASSIFICATION	0.9999378747215018	WITHOUT_CLASSIFICATION	6.21252784982354E-5	IMPLEMENTATION
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999937037414437	WITHOUT_CLASSIFICATION	6.296258556387287E-6	IMPLEMENTATION
// removes and returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999899688822896	WITHOUT_CLASSIFICATION	1.0031117710363913E-5	IMPLEMENTATION
// we can't rename a file while it's open in windows	WITHOUT_CLASSIFICATION	0.999929384077858	WITHOUT_CLASSIFICATION	7.061592214195213E-5	IMPLEMENTATION
//reopen	WITHOUT_CLASSIFICATION	0.9958370510859276	WITHOUT_CLASSIFICATION	0.004162948914072373	IMPLEMENTATION
// ARGF methods	WITHOUT_CLASSIFICATION	0.999870975169695	WITHOUT_CLASSIFICATION	1.2902483030493984E-4	IMPLEMENTATION
//         data.currentFile.callMethod(context, "lineno=", line);	WITHOUT_CLASSIFICATION	0.9999617103526178	WITHOUT_CLASSIFICATION	3.8289647382075904E-5	IMPLEMENTATION
// one optional, one required args	WITHOUT_CLASSIFICATION	0.9999185961507308	WITHOUT_CLASSIFICATION	8.14038492692253E-5	IMPLEMENTATION
// one optional and no required args	WITHOUT_CLASSIFICATION	0.9999241043565222	WITHOUT_CLASSIFICATION	7.589564347780648E-5	IMPLEMENTATION
// try to get errno value out of the class	WITHOUT_CLASSIFICATION	0.9999879037685473	WITHOUT_CLASSIFICATION	1.2096231452667413E-5	IMPLEMENTATION
// we got a valid errno value	WITHOUT_CLASSIFICATION	0.9999481782724783	WITHOUT_CLASSIFICATION	5.1821727521730424E-5	IMPLEMENTATION
// Ensure we're not running on GCJ, since it's not supported and leads to weird errors	WITHOUT_CLASSIFICATION	0.9999582472429872	WITHOUT_CLASSIFICATION	4.1752757012776144E-5	IMPLEMENTATION
// print out as a nice Ruby backtrace	WITHOUT_CLASSIFICATION	0.999902934964066	WITHOUT_CLASSIFICATION	9.706503593398301E-5	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999025777223158	WITHOUT_CLASSIFICATION	9.742227768410012E-5	IMPLEMENTATION
// set thread context JRuby classloader here, for the main thread	WITHOUT_CLASSIFICATION	0.9999664616463164	WITHOUT_CLASSIFICATION	3.353835368353652E-5	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999409857539188	WITHOUT_CLASSIFICATION	5.9014246081135505E-5	IMPLEMENTATION
// no script to run, return success below	WITHOUT_CLASSIFICATION	0.9999699941012948	WITHOUT_CLASSIFICATION	3.000589870514566E-5	IMPLEMENTATION
// Skip /usr/bin/env if it's first	WITHOUT_CLASSIFICATION	0.9998960130819513	WITHOUT_CLASSIFICATION	1.0398691804874017E-4	IMPLEMENTATION
// Skip any assignments if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999033999695023	WITHOUT_CLASSIFICATION	9.660003049772569E-5	IMPLEMENTATION
// Skip any commandline args if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.999920285743424	WITHOUT_CLASSIFICATION	7.971425657600029E-5	IMPLEMENTATION
// ignore error	WITHOUT_CLASSIFICATION	0.999983473614069	WITHOUT_CLASSIFICATION	1.65263859309402E-5	IMPLEMENTATION
// ////////////////// COMMON CONSTANT / CVAR METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999951027803698	WITHOUT_CLASSIFICATION	4.897219630158749E-6	IMPLEMENTATION
// ////////////////// INTERNAL MODULE VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999950755084637	WITHOUT_CLASSIFICATION	4.924491536299618E-6	IMPLEMENTATION
// ////////////////// LOW-LEVEL CONSTANT INTERFACE //////////////// // // fetch/store/list constants for this module //	WITHOUT_CLASSIFICATION	0.9999986935136611	WITHOUT_CLASSIFICATION	1.3064863389480017E-6	IMPLEMENTATION
// odd	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
// JRubyClient	WITHOUT_CLASSIFICATION	0.9998417894686956	WITHOUT_CLASSIFICATION	1.582105313043615E-4	IMPLEMENTATION
/*     * x = mantissa * 2 ** exponent     *     * Where mantissa is in the range of [.5, 1)     *     */	WITHOUT_CLASSIFICATION	0.9999686852391927	WITHOUT_CLASSIFICATION	3.131476080738006E-5	IMPLEMENTATION
// Make mantissa same sign so we only have one code path.	WITHOUT_CLASSIFICATION	0.9999317902047051	WITHOUT_CLASSIFICATION	6.820979529481042E-5	IMPLEMENTATION
// Increase value to hit lower range.	WITHOUT_CLASSIFICATION	0.9999559764269276	WITHOUT_CLASSIFICATION	4.4023573072432534E-5	IMPLEMENTATION
/*     * r = x * 2 ** y     */	WITHOUT_CLASSIFICATION	0.9999609961751079	WITHOUT_CLASSIFICATION	3.900382489207387E-5	IMPLEMENTATION
/*  0! */	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
/*  1! */	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
/*  2! */	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
/*  3! */	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
/*  4! */	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
/*  5! */	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
/*  6! */	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
/*  7! */	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
/*  8! */	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
/*  9! */	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
/* 11! */	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
/* 12! */	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
/* 13! */	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
/* 15! */	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
/* 16! */	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
/* 17! */	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
/* 19! */	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
/* 20! */	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
/* 21! */	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
// Static constants	WITHOUT_CLASSIFICATION	0.9999218831246617	WITHOUT_CLASSIFICATION	7.811687533838909E-5	IMPLEMENTATION
// Clean-up string representation so that it could be understood // by Java's BigDecimal. Not terribly efficient for now. // 1. MRI allows d and D as exponent separators	WITHOUT_CLASSIFICATION	0.9996818291506551	WITHOUT_CLASSIFICATION	3.181708493449609E-4	IMPLEMENTATION
// 2. MRI allows underscores anywhere	WITHOUT_CLASSIFICATION	0.9998785913441	WITHOUT_CLASSIFICATION	1.2140865590003982E-4	IMPLEMENTATION
// 3. MRI ignores the trailing junk	WITHOUT_CLASSIFICATION	0.9999522870834846	WITHOUT_CLASSIFICATION	4.7712916515435594E-5	IMPLEMENTATION
// MRI behavior: -0 and +0 are two different things	WITHOUT_CLASSIFICATION	0.9998772462550407	WITHOUT_CLASSIFICATION	1.2275374495927883E-4	IMPLEMENTATION
// Java and MRI definitions of modulo are different.	WITHOUT_CLASSIFICATION	0.9998664614985138	WITHOUT_CLASSIFICATION	1.335385014861264E-4	IMPLEMENTATION
// Java and MRI definitions of remainder are the same.	WITHOUT_CLASSIFICATION	0.9999228507028088	WITHOUT_CLASSIFICATION	7.714929719118119E-5	IMPLEMENTATION
// Note: MRI has a very non-trivial way of calculating the precision, // so we use very simple approximation here:	WITHOUT_CLASSIFICATION	0.9999427577400818	WITHOUT_CLASSIFICATION	5.724225991825586E-5	IMPLEMENTATION
// Iteration variables, for the square root x and the reciprocal v // initial x:  x0 ~ sqrt() // initial v:  v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999842992516843	WITHOUT_CLASSIFICATION	1.5700748315602198E-5	IMPLEMENTATION
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999359328374693	WITHOUT_CLASSIFICATION	6.406716253069125E-5	IMPLEMENTATION
// TODO: why this: .setResult();	WITHOUT_CLASSIFICATION	0.9016778002219393	WITHOUT_CLASSIFICATION	0.09832219977806068	IMPLEMENTATION
// integer division	WITHOUT_CLASSIFICATION	0.9998790953829033	WITHOUT_CLASSIFICATION	1.209046170966863E-4	IMPLEMENTATION
// MRI behavior: "If digits is 0, the result is the same as the / operator."	WITHOUT_CLASSIFICATION	0.9999614701645496	WITHOUT_CLASSIFICATION	3.852983545043283E-5	IMPLEMENTATION
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9998815511262515	WITHOUT_CLASSIFICATION	1.1844887374844044E-4	IMPLEMENTATION
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9998815511262515	WITHOUT_CLASSIFICATION	1.1844887374844044E-4	IMPLEMENTATION
// Java and MRI definitions of divmod are different.        	WITHOUT_CLASSIFICATION	0.9999076702961309	WITHOUT_CLASSIFICATION	9.232970386901168E-5	IMPLEMENTATION
// JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it	WITHOUT_CLASSIFICATION	0.9999704629735268	WITHOUT_CLASSIFICATION	2.9537026473215057E-5	IMPLEMENTATION
// shift the decimal point just to the right of the digit to be rounded to (divide by 10**(abs(scale))) // -1 -> 10's digit, -2 -> 100's digit, etc.	WITHOUT_CLASSIFICATION	0.9999794435236837	WITHOUT_CLASSIFICATION	2.055647631629945E-5	IMPLEMENTATION
// ...round to that digit	WITHOUT_CLASSIFICATION	0.9999180253689748	WITHOUT_CLASSIFICATION	8.197463102519195E-5	IMPLEMENTATION
// ...and shift the result back to the left (multiply by 10**(abs(scale)))	WITHOUT_CLASSIFICATION	0.9999716714729775	WITHOUT_CLASSIFICATION	2.8328527022549778E-5	IMPLEMENTATION
//this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are	WITHOUT_CLASSIFICATION	0.9999473568339732	WITHOUT_CLASSIFICATION	5.2643166026814866E-5	IMPLEMENTATION
// sign	WITHOUT_CLASSIFICATION	0.9958676093456478	WITHOUT_CLASSIFICATION	0.004132390654352236	IMPLEMENTATION
// significant digits and exponent	WITHOUT_CLASSIFICATION	0.9998982785673262	WITHOUT_CLASSIFICATION	1.017214326739041E-4	IMPLEMENTATION
// normalize the value	WITHOUT_CLASSIFICATION	0.9999511405245093	WITHOUT_CLASSIFICATION	4.88594754907067E-5	IMPLEMENTATION
// base	WITHOUT_CLASSIFICATION	0.9964591188259105	WITHOUT_CLASSIFICATION	0.003540881174089522	IMPLEMENTATION
// NOTE: MRI's sqrt precision is limited by 100, // but we allow values more than 100.	WITHOUT_CLASSIFICATION	0.9999471314139977	WITHOUT_CLASSIFICATION	5.2868586002194445E-5	IMPLEMENTATION
// just in case, add a bit of extra precision	WITHOUT_CLASSIFICATION	0.9999506601331039	WITHOUT_CLASSIFICATION	4.933986689606904E-5	IMPLEMENTATION
// eh?!	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
// Note: #fix has only no-arg form, but truncate allows optional parameter.	WITHOUT_CLASSIFICATION	0.9999536739853884	WITHOUT_CLASSIFICATION	4.63260146116627E-5	IMPLEMENTATION
// General number and precision checking	WITHOUT_CLASSIFICATION	0.999933301476945	WITHOUT_CLASSIFICATION	6.66985230550261E-5	IMPLEMENTATION
// the requested precision	WITHOUT_CLASSIFICATION	0.9999348248784944	WITHOUT_CLASSIFICATION	6.517512150568857E-5	IMPLEMENTATION
// Proc class	WITHOUT_CLASSIFICATION	0.9998879530266036	WITHOUT_CLASSIFICATION	1.1204697339648339E-4	IMPLEMENTATION
//.append("  -x[directory]   strip off text before #!ruby line and perhaps cd to directory\n")	WITHOUT_CLASSIFICATION	0.9999395477891454	WITHOUT_CLASSIFICATION	6.0452210854707985E-5	IMPLEMENTATION
// even shift.. // ..floors to 62 or 63 bit BigInteger	WITHOUT_CLASSIFICATION	0.9998987184376547	WITHOUT_CLASSIFICATION	1.0128156234539366E-4	IMPLEMENTATION
// 5 -> 2, -5 -> -3 need half a scale more..	WITHOUT_CLASSIFICATION	0.9998625763204948	WITHOUT_CLASSIFICATION	1.3742367950513238E-4	IMPLEMENTATION
// ..where 100 -> 10 shifts the scale	WITHOUT_CLASSIFICATION	0.9999020825327709	WITHOUT_CLASSIFICATION	9.791746722914717E-5	IMPLEMENTATION
// Initial x - use double root - multiply by halfBack to unshift - set new scale	WITHOUT_CLASSIFICATION	0.9999505889335853	WITHOUT_CLASSIFICATION	4.941106641450311E-5	IMPLEMENTATION
// x0 ~ sqrt()	WITHOUT_CLASSIFICATION	0.9998415686846777	WITHOUT_CLASSIFICATION	1.5843131532233462E-4	IMPLEMENTATION
// for prec 15 root x0 must surely be OK // return small prec roots without iterations	WITHOUT_CLASSIFICATION	0.9999845890184317	WITHOUT_CLASSIFICATION	1.5410981568254455E-5	IMPLEMENTATION
// Initial v - the reciprocal // v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.999922374362203	WITHOUT_CLASSIFICATION	7.762563779699899E-5	IMPLEMENTATION
// Collect iteration precisions beforehand	WITHOUT_CLASSIFICATION	0.9999545994337273	WITHOUT_CLASSIFICATION	4.5400566272520844E-5	IMPLEMENTATION
// assume nInit = 16 <= prec	WITHOUT_CLASSIFICATION	0.999901384296751	WITHOUT_CLASSIFICATION	9.8615703249081E-5	IMPLEMENTATION
// The loop of "Square Root by Coupled Newton Iteration"	WITHOUT_CLASSIFICATION	0.9999441756037862	WITHOUT_CLASSIFICATION	5.5824396213712995E-5	IMPLEMENTATION
// Increase precision - next iteration supplies n exact digits	WITHOUT_CLASSIFICATION	0.9999416430136608	WITHOUT_CLASSIFICATION	5.835698633926832E-5	IMPLEMENTATION
// Next x                                        // e = d - x^2	WITHOUT_CLASSIFICATION	0.9998989838152648	WITHOUT_CLASSIFICATION	1.010161847352086E-4	IMPLEMENTATION
// x += e*v     ~ sqrt()	WITHOUT_CLASSIFICATION	0.9998679022243461	WITHOUT_CLASSIFICATION	1.320977756538609E-4	IMPLEMENTATION
// root x is ready!	WITHOUT_CLASSIFICATION	0.9999012713490354	WITHOUT_CLASSIFICATION	9.872865096457164E-5	IMPLEMENTATION
// Next v                                        // g = 1 - 2*x*v	WITHOUT_CLASSIFICATION	0.9998989389767843	WITHOUT_CLASSIFICATION	1.0106102321572784E-4	IMPLEMENTATION
// v += g*v     ~ 1/2/sqrt()	WITHOUT_CLASSIFICATION	0.9998679022243461	WITHOUT_CLASSIFICATION	1.320977756538609E-4	IMPLEMENTATION
// RubyBigdecimal	WITHOUT_CLASSIFICATION	0.9998436427010569	WITHOUT_CLASSIFICATION	1.5635729894312645E-4	IMPLEMENTATION
// c: bind_eval	WITHOUT_CLASSIFICATION	0.999838761195124	WITHOUT_CLASSIFICATION	1.6123880487595835E-4	IMPLEMENTATION
/*  ================     *  Module Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999301980571	WITHOUT_CLASSIFICATION	6.980194289993046E-5	IMPLEMENTATION
// from CommandlineParser	WITHOUT_CLASSIFICATION	0.9999138542012231	WITHOUT_CLASSIFICATION	8.61457987768314E-5	IMPLEMENTATION
// This property is a Boolean, to allow three values, so it can match MRI's nil, false and true	WITHOUT_CLASSIFICATION	0.999972383338548	WITHOUT_CLASSIFICATION	2.7616661452027134E-5	IMPLEMENTATION
// default ClassCache using jitMax as a soft upper bound	WITHOUT_CLASSIFICATION	0.9999840937849904	WITHOUT_CLASSIFICATION	1.5906215009630356E-5	IMPLEMENTATION
// Until we get a little more solid on 1.9 support we will only run interpreted mode	WITHOUT_CLASSIFICATION	0.999747443433282	WITHOUT_CLASSIFICATION	2.525565667179206E-4	IMPLEMENTATION
// Setting the loader needs to reset the class cache	WITHOUT_CLASSIFICATION	0.9999608860039013	WITHOUT_CLASSIFICATION	3.911399609865207E-5	IMPLEMENTATION
// try the normal property first	WITHOUT_CLASSIFICATION	0.9999544789256173	WITHOUT_CLASSIFICATION	4.552107438279849E-5	IMPLEMENTATION
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999329103414434	WITHOUT_CLASSIFICATION	6.708965855660578E-5	IMPLEMENTATION
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999329103414434	WITHOUT_CLASSIFICATION	6.708965855660578E-5	IMPLEMENTATION
// try loading from classloader resources	WITHOUT_CLASSIFICATION	0.9999675835573991	WITHOUT_CLASSIFICATION	3.241644260083364E-5	IMPLEMENTATION
// otherwise fall back on system temp location	WITHOUT_CLASSIFICATION	0.9999276095230653	WITHOUT_CLASSIFICATION	7.239047693469237E-5	IMPLEMENTATION
// We require the home directory to be absolute	WITHOUT_CLASSIFICATION	0.9999752292001264	WITHOUT_CLASSIFICATION	2.4770799873674197E-5	IMPLEMENTATION
//consume the file name	WITHOUT_CLASSIFICATION	0.9999277600328271	WITHOUT_CLASSIFICATION	7.223996717287645E-5	IMPLEMENTATION
// Specify something that can't separate	WITHOUT_CLASSIFICATION	0.9999265066562154	WITHOUT_CLASSIFICATION	7.349334378451391E-5	IMPLEMENTATION
// try cwd first	WITHOUT_CLASSIFICATION	0.9999069457514806	WITHOUT_CLASSIFICATION	9.305424851945373E-5	IMPLEMENTATION
// ruby interpreter compatibilty // Usage: ruby [switches] [--] [programfile] [arguments])	WITHOUT_CLASSIFICATION	0.9999192089951685	WITHOUT_CLASSIFICATION	8.079100483153775E-5	IMPLEMENTATION
// KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 // if Ruby 2.0 encoding pragmas are implemented, this will need to change	WITHOUT_CLASSIFICATION	0.9807915737324561	WITHOUT_CLASSIFICATION	0.019208426267543932	IMPLEMENTATION
// @JRubyMethod(name = "complex?")	WITHOUT_CLASSIFICATION	0.9998680766264879	WITHOUT_CLASSIFICATION	1.3192337351200346E-4	IMPLEMENTATION
// @JRubyMethod(name = "exact?")	WITHOUT_CLASSIFICATION	0.999872893115491	WITHOUT_CLASSIFICATION	1.2710688450894036E-4	IMPLEMENTATION
// @JRubyMethod(name = "inexact?")	WITHOUT_CLASSIFICATION	0.9998729759581781	WITHOUT_CLASSIFICATION	1.2702404182194112E-4	IMPLEMENTATION
// symbol string *must* be interned	WITHOUT_CLASSIFICATION	0.9999120924515518	WITHOUT_CLASSIFICATION	8.790754844829215E-5	IMPLEMENTATION
//        assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";	WITHOUT_CLASSIFICATION	0.9999753880528772	WITHOUT_CLASSIFICATION	2.4611947122803768E-5	IMPLEMENTATION
/* Symbol class methods.     *      */	WITHOUT_CLASSIFICATION	0.9998764362182166	WITHOUT_CLASSIFICATION	1.2356378178335993E-4	IMPLEMENTATION
// TODO: 1.9 rb_enc_symname_p	WITHOUT_CLASSIFICATION	0.8957815038284471	WITHOUT_CLASSIFICATION	0.10421849617155296	IMPLEMENTATION
// This is needed to unpack stuff	WITHOUT_CLASSIFICATION	0.9999257831062512	WITHOUT_CLASSIFICATION	7.42168937487223E-5	IMPLEMENTATION
// we already confirmed above that length > 0	WITHOUT_CLASSIFICATION	0.9999541423865874	WITHOUT_CLASSIFICATION	4.5857613412526995E-5	IMPLEMENTATION
// *must* be power of 2!	WITHOUT_CLASSIFICATION	0.9998818612282574	WITHOUT_CLASSIFICATION	1.1813877174267676E-4	IMPLEMENTATION
// note all fields are final -- rehash creates new entries when necessary. // as documented in java.util.concurrent.ConcurrentHashMap.java, that will // statistically affect only a small percentage (< 20%) of entries for a given rehash.	WITHOUT_CLASSIFICATION	0.9999880629498721	WITHOUT_CLASSIFICATION	1.1937050127999515E-5	IMPLEMENTATION
//            assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999748487349663	WITHOUT_CLASSIFICATION	2.5151265033694698E-5	IMPLEMENTATION
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999124482984811	WITHOUT_CLASSIFICATION	8.7551701518864E-5	IMPLEMENTATION
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999124482984811	WITHOUT_CLASSIFICATION	8.7551701518864E-5	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9998522173114113	WITHOUT_CLASSIFICATION	1.477826885886248E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9998522173114113	WITHOUT_CLASSIFICATION	1.477826885886248E-4	IMPLEMENTATION
// backwards-compatibility, but threadsafe now	WITHOUT_CLASSIFICATION	0.9999015341860323	WITHOUT_CLASSIFICATION	9.846581396761179E-5	IMPLEMENTATION
//  Single node on list	WITHOUT_CLASSIFICATION	0.9998756958451019	WITHOUT_CLASSIFICATION	1.2430415489795443E-4	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999218743525962	WITHOUT_CLASSIFICATION	7.812564740387751E-5	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999020084312471	WITHOUT_CLASSIFICATION	9.799156875282267E-5	IMPLEMENTATION
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999569185010683	WITHOUT_CLASSIFICATION	4.308149893173201E-5	IMPLEMENTATION
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999033873690052	WITHOUT_CLASSIFICATION	9.661263099477876E-5	IMPLEMENTATION
// not so backwards-compatible here, but no one should have been // calling this anyway.	WITHOUT_CLASSIFICATION	0.9996284144204094	WITHOUT_CLASSIFICATION	3.7158557959065906E-4	IMPLEMENTATION
// Profile	WITHOUT_CLASSIFICATION	0.9961894279864977	WITHOUT_CLASSIFICATION	0.003810572013502377	IMPLEMENTATION
//static private final String TRANSLIT = "//translit";	WITHOUT_CLASSIFICATION	0.9999649245957893	WITHOUT_CLASSIFICATION	3.5075404210586117E-5	IMPLEMENTATION
// treat start and end as start...end for end >= 0, start..end for end < 0	WITHOUT_CLASSIFICATION	0.9999264709888733	WITHOUT_CLASSIFICATION	7.352901112664581E-5	IMPLEMENTATION
// invalid ranges result in an empty string	WITHOUT_CLASSIFICATION	0.9999738649367372	WITHOUT_CLASSIFICATION	2.613506326279602E-5	IMPLEMENTATION
// Methods of the Nil Class (nil_*):	WITHOUT_CLASSIFICATION	0.9999393109842577	WITHOUT_CLASSIFICATION	6.068901574229064E-5	IMPLEMENTATION
// Has read/write been closed or is it still open for business	WITHOUT_CLASSIFICATION	0.9999088045938304	WITHOUT_CLASSIFICATION	9.119540616967119E-5	IMPLEMENTATION
// Support IO modes that this object was opened with	WITHOUT_CLASSIFICATION	0.9998988121387516	WITHOUT_CLASSIFICATION	1.0118786124839648E-4	IMPLEMENTATION
// must let original string know we're modifying, so shared buffers aren't damaged	WITHOUT_CLASSIFICATION	0.9999365695907944	WITHOUT_CLASSIFICATION	6.343040920566532E-5	IMPLEMENTATION
// reset the state	WITHOUT_CLASSIFICATION	0.9999437276483591	WITHOUT_CLASSIFICATION	5.627235164071121E-5	IMPLEMENTATION
// Tainting here if we ever want it. (secure 4)	WITHOUT_CLASSIFICATION	0.9998365978779302	WITHOUT_CLASSIFICATION	1.6340212206973888E-4	IMPLEMENTATION
// rb_match_busy	WITHOUT_CLASSIFICATION	0.9998415686846777	WITHOUT_CLASSIFICATION	1.5843131532233462E-4	IMPLEMENTATION
//str is frozen	WITHOUT_CLASSIFICATION	0.9998423634939514	WITHOUT_CLASSIFICATION	1.576365060485325E-4	IMPLEMENTATION
// MRI also does a pointer comparison here	WITHOUT_CLASSIFICATION	0.99990194285847	WITHOUT_CLASSIFICATION	9.805714152996555E-5	IMPLEMENTATION
// JRubyServer	WITHOUT_CLASSIFICATION	0.9998425649193593	WITHOUT_CLASSIFICATION	1.5743508064057892E-4	IMPLEMENTATION
// Class.allocate object is not allocatable before it is initialized	WITHOUT_CLASSIFICATION	0.9999893736754296	WITHOUT_CLASSIFICATION	1.0626324570449157E-5	IMPLEMENTATION
// boot the Object class 	WITHOUT_CLASSIFICATION	0.9999460466905361	WITHOUT_CLASSIFICATION	5.3953309463791015E-5	IMPLEMENTATION
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999645143659918	WITHOUT_CLASSIFICATION	3.548563400827004E-5	IMPLEMENTATION
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999819187032024	WITHOUT_CLASSIFICATION	1.808129679759065E-5	IMPLEMENTATION
// undo check	WITHOUT_CLASSIFICATION	0.9998616808185461	WITHOUT_CLASSIFICATION	1.3831918145396262E-4	IMPLEMENTATION
// This is a non-standard method; have we decided to start extending Ruby? //classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));	WITHOUT_CLASSIFICATION	0.9999878687377566	WITHOUT_CLASSIFICATION	1.2131262243411243E-5	IMPLEMENTATION
// boot the Module and Class classes	WITHOUT_CLASSIFICATION	0.9999377578600391	WITHOUT_CLASSIFICATION	6.224213996080852E-5	IMPLEMENTATION
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9999913711620574	WITHOUT_CLASSIFICATION	8.628837942609071E-6	IMPLEMENTATION
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9999047106995288	WITHOUT_CLASSIFICATION	9.528930047124564E-5	IMPLEMENTATION
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9999047106995288	WITHOUT_CLASSIFICATION	9.528930047124564E-5	IMPLEMENTATION
// could be pulled down to RubyClass in future // rb_class_boot	WITHOUT_CLASSIFICATION	0.999706725246945	WITHOUT_CLASSIFICATION	2.9327475305493926E-4	IMPLEMENTATION
// remove us from old superclass's child classes	WITHOUT_CLASSIFICATION	0.99998274891328	WITHOUT_CLASSIFICATION	1.7251086719960265E-5	IMPLEMENTATION
// add us to new superclass's child classes	WITHOUT_CLASSIFICATION	0.9999739740588394	WITHOUT_CLASSIFICATION	2.6025941160696106E-5	IMPLEMENTATION
// update all subclasses	WITHOUT_CLASSIFICATION	0.999975155654087	WITHOUT_CLASSIFICATION	2.4844345913071317E-5	IMPLEMENTATION
// fields to hold Ruby and RubyClass references	WITHOUT_CLASSIFICATION	0.9999408111539981	WITHOUT_CLASSIFICATION	5.918884600185866E-5	IMPLEMENTATION
// static initializing method	WITHOUT_CLASSIFICATION	0.9999592835139376	WITHOUT_CLASSIFICATION	4.071648606240406E-5	IMPLEMENTATION
// standard constructor that accepts Ruby, RubyClass	WITHOUT_CLASSIFICATION	0.9999345081409983	WITHOUT_CLASSIFICATION	6.549185900174776E-5	IMPLEMENTATION
// no-arg constructor using static references to Ruby and RubyClass	WITHOUT_CLASSIFICATION	0.9999521053911983	WITHOUT_CLASSIFICATION	4.789460880165515E-5	IMPLEMENTATION
// non-signature signature with just IRubyObject	WITHOUT_CLASSIFICATION	0.9999164513947507	WITHOUT_CLASSIFICATION	8.354860524933833E-5	IMPLEMENTATION
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999379848990844	WITHOUT_CLASSIFICATION	6.20151009156431E-5	IMPLEMENTATION
// self // method name	WITHOUT_CLASSIFICATION	0.9998949005133274	WITHOUT_CLASSIFICATION	1.0509948667266167E-4	IMPLEMENTATION
// the default allocator	WITHOUT_CLASSIFICATION	0.9999798113325137	WITHOUT_CLASSIFICATION	2.018866748626258E-5	IMPLEMENTATION
// Equivalent of T_DATA	WITHOUT_CLASSIFICATION	0.9998460704266163	WITHOUT_CLASSIFICATION	1.5392957338378503E-4	IMPLEMENTATION
// do nothing, leave empty	WITHOUT_CLASSIFICATION	0.9999814668287157	WITHOUT_CLASSIFICATION	1.8533171284318682E-5	IMPLEMENTATION
// Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9998759618339295	WITHOUT_CLASSIFICATION	1.2403816607055486E-4	IMPLEMENTATION
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999936365688659	WITHOUT_CLASSIFICATION	6.363431134103628E-5	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999501415414129	WITHOUT_CLASSIFICATION	4.985845858713036E-5	IMPLEMENTATION
// Make sure all arguments are modules before calling the callbacks	WITHOUT_CLASSIFICATION	0.999986445542763	WITHOUT_CLASSIFICATION	1.3554457237155748E-5	IMPLEMENTATION
// MRI extends in order from last to first	WITHOUT_CLASSIFICATION	0.9999404905860617	WITHOUT_CLASSIFICATION	5.950941393825374E-5	IMPLEMENTATION
// NOTE: Serialization is primarily supported for testing purposes, and there is no general // guarantee that serialization will work correctly. Specifically, instance variables pointing // at symbols, threads, modules, classes, and other unserializable types are not detected.	WITHOUT_CLASSIFICATION	0.9999975499727699	WITHOUT_CLASSIFICATION	2.4500272301671913E-6	IMPLEMENTATION
// write out ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999190043260507	WITHOUT_CLASSIFICATION	8.099567394922834E-5	IMPLEMENTATION
// rest in ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999179501785531	WITHOUT_CLASSIFICATION	8.204982144678582E-5	IMPLEMENTATION
// 0x3fff_ffff // -0x4000_0000	WITHOUT_CLASSIFICATION	0.9998679035550031	WITHOUT_CLASSIFICATION	1.3209644499688906E-4	IMPLEMENTATION
// a gotcha	WITHOUT_CLASSIFICATION	0.9998415686846777	WITHOUT_CLASSIFICATION	1.5843131532233462E-4	IMPLEMENTATION
// Java / and % are not the same as ruby	WITHOUT_CLASSIFICATION	0.9999383667983314	WITHOUT_CLASSIFICATION	6.163320166855575E-5	IMPLEMENTATION
// A gotcha for Long.MIN_VALUE: value = -value	WITHOUT_CLASSIFICATION	0.9999332207445089	WITHOUT_CLASSIFICATION	6.677925549115259E-5	IMPLEMENTATION
// Piece of mri rb_to_id	WITHOUT_CLASSIFICATION	0.9998692487318555	WITHOUT_CLASSIFICATION	1.3075126814451554E-4	IMPLEMENTATION
// Java Doubles are 64 bit long:            	WITHOUT_CLASSIFICATION	0.999918747011047	WITHOUT_CLASSIFICATION	8.125298895292457E-5	IMPLEMENTATION
// Double.MAX_EXPONENT since Java 1.6            	WITHOUT_CLASSIFICATION	0.999910628396535	WITHOUT_CLASSIFICATION	8.937160346503776E-5	IMPLEMENTATION
// don't override Numeric#div !	WITHOUT_CLASSIFICATION	0.9999400977724844	WITHOUT_CLASSIFICATION	5.9902227515657224E-5	IMPLEMENTATION
// Modelled after c ruby implementation (java /,% not same as ruby)	WITHOUT_CLASSIFICATION	0.9937835558981054	WITHOUT_CLASSIFICATION	0.006216444101894602	IMPLEMENTATION
// MRI behavior:	WITHOUT_CLASSIFICATION	0.9998624547643671	WITHOUT_CLASSIFICATION	1.3754523563289808E-4	IMPLEMENTATION
// Numeric.equal            	WITHOUT_CLASSIFICATION	0.9999067777820206	WITHOUT_CLASSIFICATION	9.322221797931297E-5	IMPLEMENTATION
// provider is not available	WITHOUT_CLASSIFICATION	0.9999497115375757	WITHOUT_CLASSIFICATION	5.028846242421246E-5	IMPLEMENTATION
// bouncy castle doesn't support algorithm	WITHOUT_CLASSIFICATION	0.999841035194483	WITHOUT_CLASSIFICATION	1.589648055170557E-4	IMPLEMENTATION
// fall back to system JCA providers	WITHOUT_CLASSIFICATION	0.9999287548126286	WITHOUT_CLASSIFICATION	7.124518737145437E-5	IMPLEMENTATION
// RubyDigest	WITHOUT_CLASSIFICATION	0.9998415686846777	WITHOUT_CLASSIFICATION	1.5843131532233462E-4	IMPLEMENTATION
// ENEBO: Can these be fast?	WITHOUT_CLASSIFICATION	0.9998373129291945	WITHOUT_CLASSIFICATION	1.6268707080553113E-4	IMPLEMENTATION
// synchronize on the RubyThread for threadgroup updates	WITHOUT_CLASSIFICATION	0.9999517856906239	WITHOUT_CLASSIFICATION	4.821430937608203E-5	IMPLEMENTATION
// we only add live threads	WITHOUT_CLASSIFICATION	0.9999222633171523	WITHOUT_CLASSIFICATION	7.773668284777404E-5	IMPLEMENTATION
// use same ClassIndex as metaclass, since we're technically still of that type	WITHOUT_CLASSIFICATION	0.9999499370816888	WITHOUT_CLASSIFICATION	5.006291831119127E-5	IMPLEMENTATION
// handle everything after -- as arguments to the jruby process	WITHOUT_CLASSIFICATION	0.9999777623305522	WITHOUT_CLASSIFICATION	2.223766944774921E-5	IMPLEMENTATION
// JRubyService	WITHOUT_CLASSIFICATION	0.9998429507304093	WITHOUT_CLASSIFICATION	1.5704926959070076E-4	IMPLEMENTATION
// while	WITHOUT_CLASSIFICATION	0.996137901388304	WITHOUT_CLASSIFICATION	0.0038620986116959816	IMPLEMENTATION
/* \OOO */	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
// CRuby uses sprintf(buf, "%.*g", FLOAT_DIG, d); // This pattern adjusts the output of String.pattern("%g") to mimic // the C version.	WITHOUT_CLASSIFICATION	0.9999544495372221	WITHOUT_CLASSIFICATION	4.5550462777890474E-5	IMPLEMENTATION
// mask off "once" flag	WITHOUT_CLASSIFICATION	0.9998691795309936	WITHOUT_CLASSIFICATION	1.308204690063281E-4	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999543937214727	WITHOUT_CLASSIFICATION	4.5606278527264156E-5	IMPLEMENTATION
// internal usage (Complex/Rational)	WITHOUT_CLASSIFICATION	0.9999241098090096	WITHOUT_CLASSIFICATION	7.58901909904572E-5	IMPLEMENTATION
// silent ?	WITHOUT_CLASSIFICATION	0.9998409987840361	WITHOUT_CLASSIFICATION	1.5900121596401146E-4	IMPLEMENTATION
/* \xHH */	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9998679022243461	WITHOUT_CLASSIFICATION	1.320977756538609E-4	IMPLEMENTATION
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9998415686846777	WITHOUT_CLASSIFICATION	1.5843131532233462E-4	IMPLEMENTATION
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9998415686846777	WITHOUT_CLASSIFICATION	1.5843131532233462E-4	IMPLEMENTATION
/* \O, \OO, \OOO or backref */	WITHOUT_CLASSIFICATION	0.9998683333815045	WITHOUT_CLASSIFICATION	1.3166661849541594E-4	IMPLEMENTATION
// MBCLEN_NEEDMORE_P	WITHOUT_CLASSIFICATION	0.9998415686846777	WITHOUT_CLASSIFICATION	1.5843131532233462E-4	IMPLEMENTATION
// MBCLEN_INVALID_P	WITHOUT_CLASSIFICATION	0.999841756206234	WITHOUT_CLASSIFICATION	1.5824379376604524E-4	IMPLEMENTATION
// Unicode is can be only 21 bits long, int is enough	WITHOUT_CLASSIFICATION	0.999926457406229	WITHOUT_CLASSIFICATION	7.354259377097001E-5	IMPLEMENTATION
/* Surrogates */	WITHOUT_CLASSIFICATION	0.9998432210981164	WITHOUT_CLASSIFICATION	1.5677890188351356E-4	IMPLEMENTATION
// do not load the class if not used	WITHOUT_CLASSIFICATION	0.9999719552901899	WITHOUT_CLASSIFICATION	2.8044709810096572E-5	IMPLEMENTATION
/* \0, \0O, \0OO */	WITHOUT_CLASSIFICATION	0.9998415686846777	WITHOUT_CLASSIFICATION	1.5843131532233462E-4	IMPLEMENTATION
/* \xHH */	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9998415686846777	WITHOUT_CLASSIFICATION	1.5843131532233462E-4	IMPLEMENTATION
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9998679022243461	WITHOUT_CLASSIFICATION	1.320977756538609E-4	IMPLEMENTATION
/* \\u{H HH HHH HHHH HHHHH HHHHHH ...} */	WITHOUT_CLASSIFICATION	0.9998702279781311	WITHOUT_CLASSIFICATION	1.2977202186893123E-4	IMPLEMENTATION
/* \\uHHHH */	WITHOUT_CLASSIFICATION	0.9998415686846777	WITHOUT_CLASSIFICATION	1.5843131532233462E-4	IMPLEMENTATION
/* \p{Hiragana} */	WITHOUT_CLASSIFICATION	0.9998415686846777	WITHOUT_CLASSIFICATION	1.5843131532233462E-4	IMPLEMENTATION
// inner switch	WITHOUT_CLASSIFICATION	0.9998836894505769	WITHOUT_CLASSIFICATION	1.1631054942308995E-4	IMPLEMENTATION
// newInstance here	WITHOUT_CLASSIFICATION	0.9998950248729882	WITHOUT_CLASSIFICATION	1.0497512701185415E-4	IMPLEMENTATION
// rb_reg_raise	WITHOUT_CLASSIFICATION	0.9998415686846777	WITHOUT_CLASSIFICATION	1.5843131532233462E-4	IMPLEMENTATION
// rb_reg_desc	WITHOUT_CLASSIFICATION	0.9998415686846777	WITHOUT_CLASSIFICATION	1.5843131532233462E-4	IMPLEMENTATION
// rb_enc_reg_raise	WITHOUT_CLASSIFICATION	0.9998415686846777	WITHOUT_CLASSIFICATION	1.5843131532233462E-4	IMPLEMENTATION
// rb_enc_reg_error_desc	WITHOUT_CLASSIFICATION	0.9998679022243461	WITHOUT_CLASSIFICATION	1.320977756538609E-4	IMPLEMENTATION
// rb_reg_initialize_str	WITHOUT_CLASSIFICATION	0.9999221527189357	WITHOUT_CLASSIFICATION	7.784728106425159E-5	IMPLEMENTATION
// rb_reg_initialize	WITHOUT_CLASSIFICATION	0.9999066329431003	WITHOUT_CLASSIFICATION	9.336705689957682E-5	IMPLEMENTATION
// JRUBY-3625: delay setting backref until the MatchData is completely initialized	WITHOUT_CLASSIFICATION	0.999925598450052	WITHOUT_CLASSIFICATION	7.440154994792987E-5	IMPLEMENTATION
// rb_reg_expr_str	WITHOUT_CLASSIFICATION	0.9998415686846777	WITHOUT_CLASSIFICATION	1.5843131532233462E-4	IMPLEMENTATION
// option_to_str	WITHOUT_CLASSIFICATION	0.999866862374416	WITHOUT_CLASSIFICATION	1.3313762558404195E-4	IMPLEMENTATION
// Don't initialize with class // Don't put in object space and don't taint	WITHOUT_CLASSIFICATION	0.9999844079333936	WITHOUT_CLASSIFICATION	1.5592066606328128E-5	IMPLEMENTATION
// args should be before block	WITHOUT_CLASSIFICATION	0.9998651706849151	WITHOUT_CLASSIFICATION	1.3482931508485772E-4	IMPLEMENTATION
// args should be at end	WITHOUT_CLASSIFICATION	0.9998746547585987	WITHOUT_CLASSIFICATION	1.253452414012565E-4	IMPLEMENTATION
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999001938763028	WITHOUT_CLASSIFICATION	9.980612369729245E-5	IMPLEMENTATION
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999001938763028	WITHOUT_CLASSIFICATION	9.980612369729245E-5	IMPLEMENTATION
// skip anything not related to jruby	WITHOUT_CLASSIFICATION	0.9999396337672178	WITHOUT_CLASSIFICATION	6.0366232782050056E-5	IMPLEMENTATION
// start a new populator	WITHOUT_CLASSIFICATION	0.999948958391532	WITHOUT_CLASSIFICATION	5.1041608468021825E-5	IMPLEMENTATION
// check for frame field reads or writes	WITHOUT_CLASSIFICATION	0.9999809142609849	WITHOUT_CLASSIFICATION	1.9085739015090708E-5	IMPLEMENTATION
// add all names for this annotation	WITHOUT_CLASSIFICATION	0.9999633995027047	WITHOUT_CLASSIFICATION	3.660049729532249E-5	IMPLEMENTATION
// no annotated methods found, skip	WITHOUT_CLASSIFICATION	0.9998961167976447	WITHOUT_CLASSIFICATION	1.0388320235522662E-4	IMPLEMENTATION
// write out a static initializer for frame names, so it only fires once	WITHOUT_CLASSIFICATION	0.9999712605205957	WITHOUT_CLASSIFICATION	2.873947940433317E-5	IMPLEMENTATION
// single method, use normal logic	WITHOUT_CLASSIFICATION	0.9999021598745328	WITHOUT_CLASSIFICATION	9.78401254672451E-5	IMPLEMENTATION
// multimethod, new logic	WITHOUT_CLASSIFICATION	0.9998794085746902	WITHOUT_CLASSIFICATION	1.2059142530978384E-4	IMPLEMENTATION
// declared type returns the qualified name without $ for inner classes!!!	WITHOUT_CLASSIFICATION	0.9999374005425237	WITHOUT_CLASSIFICATION	6.259945747632158E-5	IMPLEMENTATION
// inner class, use $ to delimit	WITHOUT_CLASSIFICATION	0.9999352532074239	WITHOUT_CLASSIFICATION	6.474679257614329E-5	IMPLEMENTATION
//                        RubyModule singletonClass = module.getSingletonClass();	WITHOUT_CLASSIFICATION	0.9999583458428972	WITHOUT_CLASSIFICATION	4.1654157102867416E-5	IMPLEMENTATION
//                }	WITHOUT_CLASSIFICATION	0.9999399875123501	WITHOUT_CLASSIFICATION	6.001248764981295E-5	IMPLEMENTATION
// fallback on non-pregenerated logic	WITHOUT_CLASSIFICATION	0.999790593561231	WITHOUT_CLASSIFICATION	2.094064387690413E-4	IMPLEMENTATION
// refresh call adapter, since it matters if this is iter-based or not	WITHOUT_CLASSIFICATION	0.999917331201	WITHOUT_CLASSIFICATION	8.266879900006673E-5	IMPLEMENTATION
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9999632149526103	WITHOUT_CLASSIFICATION	3.678504738975225E-5	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.9998866547821184	WITHOUT_CLASSIFICATION	1.1334521788167553E-4	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.999876705722472	WITHOUT_CLASSIFICATION	1.232942775279121E-4	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999404343913487	WITHOUT_CLASSIFICATION	5.9565608651165766E-5	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999404343913487	WITHOUT_CLASSIFICATION	5.9565608651165766E-5	IMPLEMENTATION
// colon3	WITHOUT_CLASSIFICATION	0.9960154928977043	WITHOUT_CLASSIFICATION	0.00398450710229573	IMPLEMENTATION
// Colon3	WITHOUT_CLASSIFICATION	0.9966978991566889	WITHOUT_CLASSIFICATION	0.0033021008433110114	IMPLEMENTATION
// array created for rescue args doesn't need to be in ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999411351451453	WITHOUT_CLASSIFICATION	5.8864854854741056E-5	IMPLEMENTATION
// For b.foo	WITHOUT_CLASSIFICATION	0.9998345524350134	WITHOUT_CLASSIFICATION	1.6544756498655078E-4	IMPLEMENTATION
// instance config for the script run	WITHOUT_CLASSIFICATION	0.9999670937683566	WITHOUT_CLASSIFICATION	3.29062316434132E-5	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999404343913487	WITHOUT_CLASSIFICATION	5.9565608651165766E-5	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999404343913487	WITHOUT_CLASSIFICATION	5.9565608651165766E-5	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999600711466466	WITHOUT_CLASSIFICATION	3.9928853353353836E-5	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999600711466466	WITHOUT_CLASSIFICATION	3.9928853353353836E-5	IMPLEMENTATION
//RubyModule module = context.getRubyClass();	WITHOUT_CLASSIFICATION	0.9998855980511944	WITHOUT_CLASSIFICATION	1.1440194880568547E-4	IMPLEMENTATION
// For 'b.foo'	WITHOUT_CLASSIFICATION	0.999841613287984	WITHOUT_CLASSIFICATION	1.583867120159918E-4	IMPLEMENTATION
// We define an actual list to get around bug in java integration (1387115)	WITHOUT_CLASSIFICATION	0.99994129928633	WITHOUT_CLASSIFICATION	5.870071366986122E-5	IMPLEMENTATION
// something in here is used to build up ruby stack trace...	WITHOUT_CLASSIFICATION	0.999949263122733	WITHOUT_CLASSIFICATION	5.07368772670139E-5	IMPLEMENTATION
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999322208392423	WITHOUT_CLASSIFICATION	6.777916075780082E-5	IMPLEMENTATION
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999322208392423	WITHOUT_CLASSIFICATION	6.777916075780082E-5	IMPLEMENTATION
// do nothing, allow loop to retry	WITHOUT_CLASSIFICATION	0.9999776447518139	WITHOUT_CLASSIFICATION	2.2355248186062266E-5	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9998291251309289	WITHOUT_CLASSIFICATION	1.7087486907107742E-4	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.999905996242862	WITHOUT_CLASSIFICATION	9.400375713805778E-5	IMPLEMENTATION
// never visited, should be fine	WITHOUT_CLASSIFICATION	0.9998696153351218	WITHOUT_CLASSIFICATION	1.30384664878229E-4	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999600711466466	WITHOUT_CLASSIFICATION	3.9928853353353836E-5	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.999968356475785	WITHOUT_CLASSIFICATION	3.1643524214994935E-5	IMPLEMENTATION
// If we have more than one argument, then make sure the array is not ObjectSpaced.	WITHOUT_CLASSIFICATION	0.9999473313194852	WITHOUT_CLASSIFICATION	5.266868051487356E-5	IMPLEMENTATION
// Only in ruby 1.9 methods	WITHOUT_CLASSIFICATION	0.9999162811534033	WITHOUT_CLASSIFICATION	8.371884659677348E-5	IMPLEMENTATION
// Bind 'normal' parameter values to the local scope for this method.	WITHOUT_CLASSIFICATION	0.9999870772806885	WITHOUT_CLASSIFICATION	1.2922719311601391E-5	IMPLEMENTATION
// no arg grouping, just use bulk assignment methods	WITHOUT_CLASSIFICATION	0.9999437902490353	WITHOUT_CLASSIFICATION	5.620975096459444E-5	IMPLEMENTATION
// optArgs and restArgs require more work, so isolate them and ArrayList creation here	WITHOUT_CLASSIFICATION	0.9999038457075115	WITHOUT_CLASSIFICATION	9.615429248860474E-5	IMPLEMENTATION
//        arity.checkArity(runtime, argsLength);	WITHOUT_CLASSIFICATION	0.9999569330340475	WITHOUT_CLASSIFICATION	4.306696595239994E-5	IMPLEMENTATION
// no more values to stick in rest arg	WITHOUT_CLASSIFICATION	0.9999558125701935	WITHOUT_CLASSIFICATION	4.418742980639841E-5	IMPLEMENTATION
// set argv from main's args	WITHOUT_CLASSIFICATION	0.999941656954405	WITHOUT_CLASSIFICATION	5.834304559515777E-5	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.9998866547821184	WITHOUT_CLASSIFICATION	1.1334521788167553E-4	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999404343913487	WITHOUT_CLASSIFICATION	5.9565608651165766E-5	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999600711466466	WITHOUT_CLASSIFICATION	3.9928853353353836E-5	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.999968356475785	WITHOUT_CLASSIFICATION	3.1643524214994935E-5	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999838155487664	WITHOUT_CLASSIFICATION	1.618445123368361E-5	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999838155487664	WITHOUT_CLASSIFICATION	1.618445123368361E-5	IMPLEMENTATION
// block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] //assert argsNode != null : "argsNode is not null";	WITHOUT_CLASSIFICATION	0.9999671652713207	WITHOUT_CLASSIFICATION	3.283472867926579E-5	IMPLEMENTATION
// assign given optional arguments to their variables	WITHOUT_CLASSIFICATION	0.9999561360352656	WITHOUT_CLASSIFICATION	4.38639647343916E-5	IMPLEMENTATION
// in-frame EvalState should already have receiver set as self, continue to use it	WITHOUT_CLASSIFICATION	0.9999202750060604	WITHOUT_CLASSIFICATION	7.97249939396065E-5	IMPLEMENTATION
// assign the default values, adding to the end of allArgs	WITHOUT_CLASSIFICATION	0.999993634346992	WITHOUT_CLASSIFICATION	6.365653008092122E-6	IMPLEMENTATION
// Make sure the appropriate scope has proper size. See JRUBY-2046.	WITHOUT_CLASSIFICATION	0.9999366395994121	WITHOUT_CLASSIFICATION	6.336040058780772E-5	IMPLEMENTATION
// Experimental class reification support, to create real Java classes // for Ruby classes after the first opening	WITHOUT_CLASSIFICATION	0.9999811245410148	WITHOUT_CLASSIFICATION	1.887545898516289E-5	IMPLEMENTATION
// This should never happen past parse, but just bulletproof this just in case	WITHOUT_CLASSIFICATION	0.9999747823543486	WITHOUT_CLASSIFICATION	2.5217645651543893E-5	IMPLEMENTATION
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9999322593637886	WITHOUT_CLASSIFICATION	6.774063621132277E-5	IMPLEMENTATION
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9998934719032468	WITHOUT_CLASSIFICATION	1.0652809675320516E-4	IMPLEMENTATION
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999324995972168	WITHOUT_CLASSIFICATION	6.750040278325125E-5	IMPLEMENTATION
// never visited, should be ok	WITHOUT_CLASSIFICATION	0.9998500350073783	WITHOUT_CLASSIFICATION	1.4996499262170783E-4	IMPLEMENTATION
// If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil	WITHOUT_CLASSIFICATION	0.9999315939698008	WITHOUT_CLASSIFICATION	6.840603019912849E-5	IMPLEMENTATION
// JRUBY-530 until case	WITHOUT_CLASSIFICATION	0.9998728446020944	WITHOUT_CLASSIFICATION	1.2715539790553225E-4	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.999876705722472	WITHOUT_CLASSIFICATION	1.232942775279121E-4	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999600711466466	WITHOUT_CLASSIFICATION	3.9928853353353836E-5	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9998291251309289	WITHOUT_CLASSIFICATION	1.7087486907107742E-4	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.999905996242862	WITHOUT_CLASSIFICATION	9.400375713805778E-5	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.999905996242862	WITHOUT_CLASSIFICATION	9.400375713805778E-5	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999600711466466	WITHOUT_CLASSIFICATION	3.9928853353353836E-5	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.999968356475785	WITHOUT_CLASSIFICATION	3.1643524214994935E-5	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.999968356475785	WITHOUT_CLASSIFICATION	3.1643524214994935E-5	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999838155487664	WITHOUT_CLASSIFICATION	1.618445123368361E-5	IMPLEMENTATION
// Empirical Observations: // null -> Some arity // argsNode == this.argsNode then check for arity changes // newline(splatnode) -> argspushnode	WITHOUT_CLASSIFICATION	0.9999595472053521	WITHOUT_CLASSIFICATION	4.0452794647859625E-5	IMPLEMENTATION
//assert !(value instanceof RubyArray)  : "Not an array";	WITHOUT_CLASSIFICATION	0.9999355870925924	WITHOUT_CLASSIFICATION	6.441290740757328E-5	IMPLEMENTATION
// Serialization killed our dynamic scope.  We can just create an empty one // since serialization cannot serialize an eval (which is the only thing // which is capable of having a non-empty dynamic scope).	WITHOUT_CLASSIFICATION	0.9999937066799905	WITHOUT_CLASSIFICATION	6.293320009434068E-6	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9998587598949422	WITHOUT_CLASSIFICATION	1.41240105057694E-4	IMPLEMENTATION
// We could probably also detect if LHS value came out of cache and avoid some of this	WITHOUT_CLASSIFICATION	0.9999668667054831	WITHOUT_CLASSIFICATION	3.3133294516943774E-5	IMPLEMENTATION
//        assert thenBody != null : "thenBody is not null"; //        assert elseBody != null : "elseBody is not null";	WITHOUT_CLASSIFICATION	0.999980725707025	WITHOUT_CLASSIFICATION	1.9274292974894557E-5	IMPLEMENTATION
// add in reverse order	WITHOUT_CLASSIFICATION	0.9999517050426651	WITHOUT_CLASSIFICATION	4.829495733495621E-5	IMPLEMENTATION
// in order to make pragma's noops we set location to a special value	WITHOUT_CLASSIFICATION	0.9999759956114744	WITHOUT_CLASSIFICATION	2.4004388525639733E-5	IMPLEMENTATION
// ignore compiler pragmas	WITHOUT_CLASSIFICATION	0.9999888991249017	WITHOUT_CLASSIFICATION	1.1100875098298843E-5	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9998291251309289	WITHOUT_CLASSIFICATION	1.7087486907107742E-4	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.999905996242862	WITHOUT_CLASSIFICATION	9.400375713805778E-5	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.999905996242862	WITHOUT_CLASSIFICATION	9.400375713805778E-5	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999600711466466	WITHOUT_CLASSIFICATION	3.9928853353353836E-5	IMPLEMENTATION
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9999322593637886	WITHOUT_CLASSIFICATION	6.774063621132277E-5	IMPLEMENTATION
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999324995972168	WITHOUT_CLASSIFICATION	6.750040278325125E-5	IMPLEMENTATION
// No actual test, so do 'when' if when expression is not nil	WITHOUT_CLASSIFICATION	0.9999013016535077	WITHOUT_CLASSIFICATION	9.869834649236911E-5	IMPLEMENTATION
// save entering the try if there's nothing to ensure	WITHOUT_CLASSIFICATION	0.9999901572915167	WITHOUT_CLASSIFICATION	9.84270848324995E-6	IMPLEMENTATION
// For 'foo'	WITHOUT_CLASSIFICATION	0.9998416467430535	WITHOUT_CLASSIFICATION	1.5835325694640517E-4	IMPLEMENTATION
// For 'foo'	WITHOUT_CLASSIFICATION	0.9998416467430535	WITHOUT_CLASSIFICATION	1.5835325694640517E-4	IMPLEMENTATION
// admittedly inefficient	WITHOUT_CLASSIFICATION	0.9998557446894961	WITHOUT_CLASSIFICATION	1.4425531050380152E-4	IMPLEMENTATION
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9998810990952517	WITHOUT_CLASSIFICATION	1.1890090474832303E-4	IMPLEMENTATION
// What static scoping relationship exists when it comes into being.	WITHOUT_CLASSIFICATION	0.9999027217374921	WITHOUT_CLASSIFICATION	9.72782625079256E-5	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9998846248157786	WITHOUT_CLASSIFICATION	1.153751842214881E-4	IMPLEMENTATION
// just rethrow	WITHOUT_CLASSIFICATION	0.9998966845804227	WITHOUT_CLASSIFICATION	1.0331541957722397E-4	IMPLEMENTATION
// just rethrow	WITHOUT_CLASSIFICATION	0.9998966845804227	WITHOUT_CLASSIFICATION	1.0331541957722397E-4	IMPLEMENTATION
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.999955107593762	WITHOUT_CLASSIFICATION	4.489240623792988E-5	IMPLEMENTATION
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.999955107593762	WITHOUT_CLASSIFICATION	4.489240623792988E-5	IMPLEMENTATION
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999041166809308	WITHOUT_CLASSIFICATION	9.588331906916111E-5	IMPLEMENTATION
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999041166809308	WITHOUT_CLASSIFICATION	9.588331906916111E-5	IMPLEMENTATION
// Execute rescue block	WITHOUT_CLASSIFICATION	0.9999043560333065	WITHOUT_CLASSIFICATION	9.564396669342953E-5	IMPLEMENTATION
// If no exception is thrown execute else block	WITHOUT_CLASSIFICATION	0.9999621348878245	WITHOUT_CLASSIFICATION	3.786511217550078E-5	IMPLEMENTATION
// index of variable for this arg	WITHOUT_CLASSIFICATION	0.9999296437822098	WITHOUT_CLASSIFICATION	7.035621779022139E-5	IMPLEMENTATION
// only a marker interface	WITHOUT_CLASSIFICATION	0.9999526707376315	WITHOUT_CLASSIFICATION	4.732926236852415E-5	IMPLEMENTATION
// don't attempt to coerce to array, just wrap and return	WITHOUT_CLASSIFICATION	0.9999661561883518	WITHOUT_CLASSIFICATION	3.384381164815024E-5	IMPLEMENTATION
// pragmas	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
// The method also needs a scope, do both	WITHOUT_CLASSIFICATION	0.9999147566817395	WITHOUT_CLASSIFICATION	8.52433182604907E-5	IMPLEMENTATION
// We're doing normal framed compilation or the method needs a frame	WITHOUT_CLASSIFICATION	0.9999012579525889	WITHOUT_CLASSIFICATION	9.874204741113652E-5	IMPLEMENTATION
// The method doesn't need a scope or static scope; frame only	WITHOUT_CLASSIFICATION	0.9999589719479467	WITHOUT_CLASSIFICATION	4.102805205325735E-5	IMPLEMENTATION
// The method doesn't need a scope, but has static scope needs; use a dummy scope	WITHOUT_CLASSIFICATION	0.999952875958247	WITHOUT_CLASSIFICATION	4.7124041752957264E-5	IMPLEMENTATION
// Proc.new needs the caller's block to instantiate a proc	WITHOUT_CLASSIFICATION	0.999956269970222	WITHOUT_CLASSIFICATION	4.3730029777951667E-5	IMPLEMENTATION
// check for Proc.new, an especially magic method	WITHOUT_CLASSIFICATION	0.9999798813884179	WITHOUT_CLASSIFICATION	2.0118611582098786E-5	IMPLEMENTATION
// long, slow way causes disabling	WITHOUT_CLASSIFICATION	0.9999338443426896	WITHOUT_CLASSIFICATION	6.615565731035168E-5	IMPLEMENTATION
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9998762204112407	WITHOUT_CLASSIFICATION	1.2377958875930967E-4	IMPLEMENTATION
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9998762204112407	WITHOUT_CLASSIFICATION	1.2377958875930967E-4	IMPLEMENTATION
// long, slow way causes disabling for defined	WITHOUT_CLASSIFICATION	0.9999456414433355	WITHOUT_CLASSIFICATION	5.435855666445609E-5	IMPLEMENTATION
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999033873690052	WITHOUT_CLASSIFICATION	9.661263099477876E-5	IMPLEMENTATION
// Because Regexp#=== sets backref, we have to make this backref-aware	WITHOUT_CLASSIFICATION	0.9995986241607531	WITHOUT_CLASSIFICATION	4.0137583924694807E-4	IMPLEMENTATION
// encountered a node we don't recognize, set everything to true to disable optz	WITHOUT_CLASSIFICATION	0.999972034591744	WITHOUT_CLASSIFICATION	2.7965408256003298E-5	IMPLEMENTATION
// only arrays that are "lightweight" are being used as args arrays	WITHOUT_CLASSIFICATION	0.9999394486881448	WITHOUT_CLASSIFICATION	6.0551311855187666E-5	IMPLEMENTATION
// otherwise, it's a literal array	WITHOUT_CLASSIFICATION	0.9999243682433713	WITHOUT_CLASSIFICATION	7.563175662864203E-5	IMPLEMENTATION
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999155172248788	WITHOUT_CLASSIFICATION	8.448277512122324E-5	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999101109817623	WITHOUT_CLASSIFICATION	8.988901823770238E-5	IMPLEMENTATION
// compile first node as non-expr and then second node	WITHOUT_CLASSIFICATION	0.9999476686895509	WITHOUT_CLASSIFICATION	5.2331310449036186E-5	IMPLEMENTATION
// last node, either !instanceof WhenNode or null, is the else	WITHOUT_CLASSIFICATION	0.9999423443395343	WITHOUT_CLASSIFICATION	5.76556604656058E-5	IMPLEMENTATION
// compile first node only	WITHOUT_CLASSIFICATION	0.9999223637339194	WITHOUT_CLASSIFICATION	7.763626608054929E-5	IMPLEMENTATION
// splatted when, can't do it yet	WITHOUT_CLASSIFICATION	0.9998974801003571	WITHOUT_CLASSIFICATION	1.0251989964289906E-4	IMPLEMENTATION
// if __send__ with a literal symbol, compile it as a direct fcall	WITHOUT_CLASSIFICATION	0.9999287574043519	WITHOUT_CLASSIFICATION	7.124259564800619E-5	IMPLEMENTATION
// NOTE: Currently this optimization is limited to the following situations: // * All expressions must be int-ranged literal fixnums // It also still emits the code for the "safe" when logic, which is rather // wasteful (since it essentially doubles each code body). As such it is // normally disabled, but it serves as an example of how this optimization // could be done. Ideally, it should be combined with the when processing // to improve code reuse before it's generally available.	WITHOUT_CLASSIFICATION	0.9999939206608571	WITHOUT_CLASSIFICATION	6.079339142886294E-6	IMPLEMENTATION
// aggregate when nodes into a list, unfortunately, this is no	WITHOUT_CLASSIFICATION	0.9999184390025964	WITHOUT_CLASSIFICATION	8.156099740365626E-5	IMPLEMENTATION
// one arg but it's an array, treat it as a proper array	WITHOUT_CLASSIFICATION	0.999902486083074	WITHOUT_CLASSIFICATION	9.751391692600363E-5	IMPLEMENTATION
// can't do it	WITHOUT_CLASSIFICATION	0.9999069834118681	WITHOUT_CLASSIFICATION	9.301658813190089E-5	IMPLEMENTATION
// otherwise, use normal args compiler	WITHOUT_CLASSIFICATION	0.9999196902867316	WITHOUT_CLASSIFICATION	8.030971326840649E-5	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9998910778335558	WITHOUT_CLASSIFICATION	1.0892216644421054E-4	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9998910778335558	WITHOUT_CLASSIFICATION	1.0892216644421054E-4	IMPLEMENTATION
// these are all simple cases that don't require the heavier defined logic	WITHOUT_CLASSIFICATION	0.9999668849022488	WITHOUT_CLASSIFICATION	3.311509775127918E-5	IMPLEMENTATION
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9999101191755531	WITHOUT_CLASSIFICATION	8.988082444702657E-5	IMPLEMENTATION
//[]	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
//[]	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
//          context.swapValues(); //context.consumeCurrentValue();	WITHOUT_CLASSIFICATION	0.9999582682987499	WITHOUT_CLASSIFICATION	4.173170124996354E-5	IMPLEMENTATION
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[] //[self] //[RubyClass] //[RubyClass, RubyClass]	WITHOUT_CLASSIFICATION	0.9998724603870655	WITHOUT_CLASSIFICATION	1.2753961293446382E-4	IMPLEMENTATION
//[RubyClass]	WITHOUT_CLASSIFICATION	0.9998416094174756	WITHOUT_CLASSIFICATION	1.5839058252442212E-4	IMPLEMENTATION
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9998724603870655	WITHOUT_CLASSIFICATION	1.2753961293446382E-4	IMPLEMENTATION
// if root of method is rescue, compile as a light rescue	WITHOUT_CLASSIFICATION	0.9999038511417555	WITHOUT_CLASSIFICATION	9.614885824454953E-5	IMPLEMENTATION
// inspect body and args	WITHOUT_CLASSIFICATION	0.9998962441602909	WITHOUT_CLASSIFICATION	1.0375583970913184E-4	IMPLEMENTATION
// inspect body and args	WITHOUT_CLASSIFICATION	0.9998962441602909	WITHOUT_CLASSIFICATION	1.0375583970913184E-4	IMPLEMENTATION
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999792833437404	WITHOUT_CLASSIFICATION	2.071665625960237E-5	IMPLEMENTATION
// if root of method is rescue, compile as light rescue	WITHOUT_CLASSIFICATION	0.9998980723583161	WITHOUT_CLASSIFICATION	1.0192764168400574E-4	IMPLEMENTATION
// invoke run with threadcontext and topself	WITHOUT_CLASSIFICATION	0.9998919402974767	WITHOUT_CLASSIFICATION	1.0805970252321867E-4	IMPLEMENTATION
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9999112139914689	WITHOUT_CLASSIFICATION	8.878600853115004E-5	IMPLEMENTATION
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9999101191755531	WITHOUT_CLASSIFICATION	8.988082444702657E-5	IMPLEMENTATION
//[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9998416094174756	WITHOUT_CLASSIFICATION	1.5839058252442212E-4	IMPLEMENTATION
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9998917543596472	WITHOUT_CLASSIFICATION	1.0824564035275359E-4	IMPLEMENTATION
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9998917543596472	WITHOUT_CLASSIFICATION	1.0824564035275359E-4	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999448717322937	WITHOUT_CLASSIFICATION	5.512826770639027E-5	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999942556540486	WITHOUT_CLASSIFICATION	5.744345951359975E-6	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999942556540486	WITHOUT_CLASSIFICATION	5.744345951359975E-6	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9998611799991546	WITHOUT_CLASSIFICATION	1.3882000084531235E-4	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9998611799991546	WITHOUT_CLASSIFICATION	1.3882000084531235E-4	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9998611799991546	WITHOUT_CLASSIFICATION	1.3882000084531235E-4	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999942556540486	WITHOUT_CLASSIFICATION	5.744345951359975E-6	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999942556540486	WITHOUT_CLASSIFICATION	5.744345951359975E-6	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999448717322937	WITHOUT_CLASSIFICATION	5.512826770639027E-5	IMPLEMENTATION
// force heap-scope behavior, since it uses parent's scope	WITHOUT_CLASSIFICATION	0.9999367207212344	WITHOUT_CLASSIFICATION	6.327927876566191E-5	IMPLEMENTATION
// always false or nil	WITHOUT_CLASSIFICATION	0.9998875822028003	WITHOUT_CLASSIFICATION	1.1241779719979418E-4	IMPLEMENTATION
// optimizations if we know ahead of time it will always be true or false	WITHOUT_CLASSIFICATION	0.9999427149121038	WITHOUT_CLASSIFICATION	5.728508789614413E-5	IMPLEMENTATION
// normal	WITHOUT_CLASSIFICATION	0.9963648131640341	WITHOUT_CLASSIFICATION	0.003635186835965904	IMPLEMENTATION
// compile condition as non-expr and just compile "then" body	WITHOUT_CLASSIFICATION	0.9999230662630704	WITHOUT_CLASSIFICATION	7.693373692952983E-5	IMPLEMENTATION
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9999111932619519	WITHOUT_CLASSIFICATION	8.880673804810149E-5	IMPLEMENTATION
// just push nil for pragmas	WITHOUT_CLASSIFICATION	0.9999011836817343	WITHOUT_CLASSIFICATION	9.88163182656574E-5	IMPLEMENTATION
// "assignment" means the value is already on the stack	WITHOUT_CLASSIFICATION	0.9999735985865315	WITHOUT_CLASSIFICATION	2.6401413468598176E-5	IMPLEMENTATION
// compile first node only	WITHOUT_CLASSIFICATION	0.9999223637339194	WITHOUT_CLASSIFICATION	7.763626608054929E-5	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999942556540486	WITHOUT_CLASSIFICATION	5.744345951359975E-6	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999942556540486	WITHOUT_CLASSIFICATION	5.744345951359975E-6	IMPLEMENTATION
// eval new value, call operator on old value, and assign	WITHOUT_CLASSIFICATION	0.9999317627558774	WITHOUT_CLASSIFICATION	6.82372441227065E-5	IMPLEMENTATION
// try optz version	WITHOUT_CLASSIFICATION	0.9999131658894553	WITHOUT_CLASSIFICATION	8.683411054466881E-5	IMPLEMENTATION
// sizes must match	WITHOUT_CLASSIFICATION	0.9998879605320112	WITHOUT_CLASSIFICATION	1.1203946798879651E-4	IMPLEMENTATION
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999735392012015	WITHOUT_CLASSIFICATION	2.6460798798570896E-5	IMPLEMENTATION
// normal items at the "head" of the masgn	WITHOUT_CLASSIFICATION	0.9999567383733917	WITHOUT_CLASSIFICATION	4.3261626608198425E-5	IMPLEMENTATION
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999525850311105	WITHOUT_CLASSIFICATION	4.741496888948494E-5	IMPLEMENTATION
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999066536243132	WITHOUT_CLASSIFICATION	9.334637568673134E-5	IMPLEMENTATION
// only supports simple parallel assignment of up to 10 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999843214299848	WITHOUT_CLASSIFICATION	1.567857001510972E-5	IMPLEMENTATION
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.999960206465716	WITHOUT_CLASSIFICATION	3.9793534283855205E-5	IMPLEMENTATION
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.99993530683622	WITHOUT_CLASSIFICATION	6.469316377991285E-5	IMPLEMENTATION
//RedoNode redoNode = (RedoNode)node;	WITHOUT_CLASSIFICATION	0.99987133589984	WITHOUT_CLASSIFICATION	1.286641001600483E-4	IMPLEMENTATION
// done processing args	WITHOUT_CLASSIFICATION	0.9999200356612429	WITHOUT_CLASSIFICATION	7.996433875706338E-5	IMPLEMENTATION
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999194080340462	WITHOUT_CLASSIFICATION	8.059196595382649E-5	IMPLEMENTATION
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9998301208671839	WITHOUT_CLASSIFICATION	1.6987913281606195E-4	IMPLEMENTATION
// if arity 1, just compile the one element to save us the array cost	WITHOUT_CLASSIFICATION	0.9999621208495791	WITHOUT_CLASSIFICATION	3.7879150420914264E-5	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
// compile into array	WITHOUT_CLASSIFICATION	0.9999104181421306	WITHOUT_CLASSIFICATION	8.95818578694139E-5	IMPLEMENTATION
// compile first node as non-expr and compile second node	WITHOUT_CLASSIFICATION	0.9999491766310498	WITHOUT_CLASSIFICATION	5.082336895028776E-5	IMPLEMENTATION
// check if it's an immediate, and don't outline	WITHOUT_CLASSIFICATION	0.9999800703578263	WITHOUT_CLASSIFICATION	1.992964217372639E-5	IMPLEMENTATION
// condition is always true, just compile it and not body	WITHOUT_CLASSIFICATION	0.9999449378928087	WITHOUT_CLASSIFICATION	5.5062107191386866E-5	IMPLEMENTATION
// force static scope to claim restarg at 0, so it only implements the [] version of __file__	WITHOUT_CLASSIFICATION	0.9977076921840239	WITHOUT_CLASSIFICATION	0.0022923078159760506	IMPLEMENTATION
// create method for toplevel of script	WITHOUT_CLASSIFICATION	0.9999741279488121	WITHOUT_CLASSIFICATION	2.587205118793416E-5	IMPLEMENTATION
// it's a multiple-statement body, iterate over all elements in turn and chain if it get too long	WITHOUT_CLASSIFICATION	0.9999611412098168	WITHOUT_CLASSIFICATION	3.8858790183166586E-5	IMPLEMENTATION
// send it along as arity-specific, we don't need the array	WITHOUT_CLASSIFICATION	0.9999609221374546	WITHOUT_CLASSIFICATION	3.90778625453593E-5	IMPLEMENTATION
// single-statement body, just compile it	WITHOUT_CLASSIFICATION	0.9999136332624289	WITHOUT_CLASSIFICATION	8.636673757104759E-5	IMPLEMENTATION
// leave as a normal array	WITHOUT_CLASSIFICATION	0.9998986239473746	WITHOUT_CLASSIFICATION	1.0137605262530513E-4	IMPLEMENTATION
// This method has JITed already or has been abandoned. Bail out.	WITHOUT_CLASSIFICATION	0.9999443166033654	WITHOUT_CLASSIFICATION	5.5683396634700644E-5	IMPLEMENTATION
// The cache is full. Abandon JIT for this method and bail out.	WITHOUT_CLASSIFICATION	0.9999094060339263	WITHOUT_CLASSIFICATION	9.059396607367008E-5	IMPLEMENTATION
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999792833437404	WITHOUT_CLASSIFICATION	2.071665625960237E-5	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999942556540486	WITHOUT_CLASSIFICATION	5.744345951359975E-6	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999942556540486	WITHOUT_CLASSIFICATION	5.744345951359975E-6	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999448717322937	WITHOUT_CLASSIFICATION	5.512826770639027E-5	IMPLEMENTATION
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9999111932619519	WITHOUT_CLASSIFICATION	8.880673804810149E-5	IMPLEMENTATION
// try optz version	WITHOUT_CLASSIFICATION	0.9999131658894553	WITHOUT_CLASSIFICATION	8.683411054466881E-5	IMPLEMENTATION
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999735392012015	WITHOUT_CLASSIFICATION	2.6460798798570896E-5	IMPLEMENTATION
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999525850311105	WITHOUT_CLASSIFICATION	4.741496888948494E-5	IMPLEMENTATION
// sizes must match	WITHOUT_CLASSIFICATION	0.9998879605320112	WITHOUT_CLASSIFICATION	1.1203946798879651E-4	IMPLEMENTATION
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999066536243132	WITHOUT_CLASSIFICATION	9.334637568673134E-5	IMPLEMENTATION
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.99993530683622	WITHOUT_CLASSIFICATION	6.469316377991285E-5	IMPLEMENTATION
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.999960206465716	WITHOUT_CLASSIFICATION	3.9793534283855205E-5	IMPLEMENTATION
// done processing args	WITHOUT_CLASSIFICATION	0.9999200356612429	WITHOUT_CLASSIFICATION	7.996433875706338E-5	IMPLEMENTATION
// Check if the method has been explicitly excluded	WITHOUT_CLASSIFICATION	0.9999766123479348	WITHOUT_CLASSIFICATION	2.3387652065183554E-5	IMPLEMENTATION
// class could not be found nor generated; give up on JIT and bail out	WITHOUT_CLASSIFICATION	0.9999190923734456	WITHOUT_CLASSIFICATION	8.090762655441979E-5	IMPLEMENTATION
// successfully got back a jitted method	WITHOUT_CLASSIFICATION	0.9999740167757009	WITHOUT_CLASSIFICATION	2.5983224299151628E-5	IMPLEMENTATION
// finally, grab the script	WITHOUT_CLASSIFICATION	0.9999246895985425	WITHOUT_CLASSIFICATION	7.531040145750669E-5	IMPLEMENTATION
// logEvery n methods based on configuration	WITHOUT_CLASSIFICATION	0.999945842446238	WITHOUT_CLASSIFICATION	5.41575537620307E-5	IMPLEMENTATION
// Time the compilation	WITHOUT_CLASSIFICATION	0.9999168743264174	WITHOUT_CLASSIFICATION	8.312567358263941E-5	IMPLEMENTATION
// we have a body, do a full-on method	WITHOUT_CLASSIFICATION	0.9999404356750514	WITHOUT_CLASSIFICATION	5.956432494855718E-5	IMPLEMENTATION
// If we don't have a body, check for required or opt args // if opt args, they could have side effects // if required args, need to raise errors if too few args passed // otherwise, method does nothing, make it a nop	WITHOUT_CLASSIFICATION	0.999987474708881	WITHOUT_CLASSIFICATION	1.252529111893408E-5	IMPLEMENTATION
// if we haven't already decided on a do-nothing call	WITHOUT_CLASSIFICATION	0.9999761375923495	WITHOUT_CLASSIFICATION	2.386240765048217E-5	IMPLEMENTATION
// only supports simple parallel assignment of up to 4 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999848594243038	WITHOUT_CLASSIFICATION	1.5140575696228713E-5	IMPLEMENTATION
// normal items at the front or back of the masgn	WITHOUT_CLASSIFICATION	0.9999632436468144	WITHOUT_CLASSIFICATION	3.675635318553495E-5	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999470210895157	WITHOUT_CLASSIFICATION	5.2978910484279435E-5	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999090245936375	WITHOUT_CLASSIFICATION	9.097540636250354E-5	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.999955950979306	WITHOUT_CLASSIFICATION	4.40490206939285E-5	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999924531860226	WITHOUT_CLASSIFICATION	7.546813977321172E-6	IMPLEMENTATION
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999443108486216	WITHOUT_CLASSIFICATION	5.568915137843357E-5	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999151277804925	WITHOUT_CLASSIFICATION	8.487221950742105E-5	IMPLEMENTATION
// Define the annotation for the method	WITHOUT_CLASSIFICATION	0.9999706905333592	WITHOUT_CLASSIFICATION	2.930946664089358E-5	IMPLEMENTATION
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.999977849496796	WITHOUT_CLASSIFICATION	2.2150503204021064E-5	IMPLEMENTATION
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999559252925951	WITHOUT_CLASSIFICATION	4.407470740482554E-5	IMPLEMENTATION
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999419310477167	WITHOUT_CLASSIFICATION	5.8068952283261835E-5	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999479085352848	WITHOUT_CLASSIFICATION	5.209146471511656E-5	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999479085352848	WITHOUT_CLASSIFICATION	5.209146471511656E-5	IMPLEMENTATION
// value is already on stack, save it for later	WITHOUT_CLASSIFICATION	0.9999836794112412	WITHOUT_CLASSIFICATION	1.6320588758810805E-5	IMPLEMENTATION
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9998812540534895	WITHOUT_CLASSIFICATION	1.1874594651050905E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998440808726581	WITHOUT_CLASSIFICATION	1.5591912734188982E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998440808726581	WITHOUT_CLASSIFICATION	1.5591912734188982E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998440808726581	WITHOUT_CLASSIFICATION	1.5591912734188982E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
/*arg2*/	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
/*args*/	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9998812540534895	WITHOUT_CLASSIFICATION	1.1874594651050905E-4	IMPLEMENTATION
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999666415861678	WITHOUT_CLASSIFICATION	3.3358413832355226E-5	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998440808726581	WITHOUT_CLASSIFICATION	1.5591912734188982E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998440808726581	WITHOUT_CLASSIFICATION	1.5591912734188982E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
/*args*/	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999394335089558	WITHOUT_CLASSIFICATION	6.0566491044342736E-5	IMPLEMENTATION
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999394335089558	WITHOUT_CLASSIFICATION	6.0566491044342736E-5	IMPLEMENTATION
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999035201347928	WITHOUT_CLASSIFICATION	9.647986520724433E-5	IMPLEMENTATION
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999035201347928	WITHOUT_CLASSIFICATION	9.647986520724433E-5	IMPLEMENTATION
// invoke	WITHOUT_CLASSIFICATION	0.9966148074004267	WITHOUT_CLASSIFICATION	0.0033851925995732235	IMPLEMENTATION
// invoke	WITHOUT_CLASSIFICATION	0.9966148074004267	WITHOUT_CLASSIFICATION	0.0033851925995732235	IMPLEMENTATION
// check if it's true, ending if so	WITHOUT_CLASSIFICATION	0.9999660886651502	WITHOUT_CLASSIFICATION	3.3911334849794866E-5	IMPLEMENTATION
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9998132238882326	WITHOUT_CLASSIFICATION	1.867761117674595E-4	IMPLEMENTATION
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9998132238882326	WITHOUT_CLASSIFICATION	1.867761117674595E-4	IMPLEMENTATION
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999149151185129	WITHOUT_CLASSIFICATION	8.508488148701683E-5	IMPLEMENTATION
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999149151185129	WITHOUT_CLASSIFICATION	8.508488148701683E-5	IMPLEMENTATION
// eval value for assignment	WITHOUT_CLASSIFICATION	0.9999480551649337	WITHOUT_CLASSIFICATION	5.1944835066384554E-5	IMPLEMENTATION
// call site	WITHOUT_CLASSIFICATION	0.9998512645269446	WITHOUT_CLASSIFICATION	1.4873547305539387E-4	IMPLEMENTATION
// call site	WITHOUT_CLASSIFICATION	0.9998512645269446	WITHOUT_CLASSIFICATION	1.4873547305539387E-4	IMPLEMENTATION
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999267521792294	WITHOUT_CLASSIFICATION	7.324782077055085E-5	IMPLEMENTATION
// check if it's true, ending if not	WITHOUT_CLASSIFICATION	0.9999678577807991	WITHOUT_CLASSIFICATION	3.2142219200974177E-5	IMPLEMENTATION
// eval value and save it	WITHOUT_CLASSIFICATION	0.9999428125854287	WITHOUT_CLASSIFICATION	5.718741457135182E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999267521792294	WITHOUT_CLASSIFICATION	7.324782077055085E-5	IMPLEMENTATION
// receiver, args, result, value	WITHOUT_CLASSIFICATION	0.9999295582556132	WITHOUT_CLASSIFICATION	7.044174438675215E-5	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9998381122361083	WITHOUT_CLASSIFICATION	1.618877638915975E-4	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9998381122361083	WITHOUT_CLASSIFICATION	1.618877638915975E-4	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9998381122361083	WITHOUT_CLASSIFICATION	1.618877638915975E-4	IMPLEMENTATION
// super uses current block if none given	WITHOUT_CLASSIFICATION	0.9999343266661243	WITHOUT_CLASSIFICATION	6.567333387572823E-5	IMPLEMENTATION
// args	WITHOUT_CLASSIFICATION	0.995899740931668	WITHOUT_CLASSIFICATION	0.004100259068332056	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9958745320667561	WITHOUT_CLASSIFICATION	0.004125467933243896	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9958745320667561	WITHOUT_CLASSIFICATION	0.004125467933243896	IMPLEMENTATION
// no args, no block	WITHOUT_CLASSIFICATION	0.9998813827573009	WITHOUT_CLASSIFICATION	1.186172426991175E-4	IMPLEMENTATION
// no args, with block	WITHOUT_CLASSIFICATION	0.9999016262551911	WITHOUT_CLASSIFICATION	9.837374480887902E-5	IMPLEMENTATION
// with args, no block	WITHOUT_CLASSIFICATION	0.9998843827942301	WITHOUT_CLASSIFICATION	1.1561720576995074E-4	IMPLEMENTATION
// with args, with block	WITHOUT_CLASSIFICATION	0.9998778360716304	WITHOUT_CLASSIFICATION	1.2216392836960618E-4	IMPLEMENTATION
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9998632159849835	WITHOUT_CLASSIFICATION	1.3678401501654637E-4	IMPLEMENTATION
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999189471747225	WITHOUT_CLASSIFICATION	8.105282527744866E-5	IMPLEMENTATION
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999189471747225	WITHOUT_CLASSIFICATION	8.105282527744866E-5	IMPLEMENTATION
// arg and receiver already present on the stack	WITHOUT_CLASSIFICATION	0.9999036510205946	WITHOUT_CLASSIFICATION	9.634897940539517E-5	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9998381122361083	WITHOUT_CLASSIFICATION	1.618877638915975E-4	IMPLEMENTATION
// args	WITHOUT_CLASSIFICATION	0.995899740931668	WITHOUT_CLASSIFICATION	0.004100259068332056	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9958745320667561	WITHOUT_CLASSIFICATION	0.004125467933243896	IMPLEMENTATION
// no args, no block	WITHOUT_CLASSIFICATION	0.9998813827573009	WITHOUT_CLASSIFICATION	1.186172426991175E-4	IMPLEMENTATION
// no args, with block	WITHOUT_CLASSIFICATION	0.9999016262551911	WITHOUT_CLASSIFICATION	9.837374480887902E-5	IMPLEMENTATION
// with args, no block	WITHOUT_CLASSIFICATION	0.9998843827942301	WITHOUT_CLASSIFICATION	1.1561720576995074E-4	IMPLEMENTATION
// with args, with block	WITHOUT_CLASSIFICATION	0.9998778360716304	WITHOUT_CLASSIFICATION	1.2216392836960618E-4	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
// retrieve scope from scopes array	WITHOUT_CLASSIFICATION	0.9999617837461015	WITHOUT_CLASSIFICATION	3.821625389848687E-5	IMPLEMENTATION
// use numbered access method	WITHOUT_CLASSIFICATION	0.9999107804120276	WITHOUT_CLASSIFICATION	8.921958797246031E-5	IMPLEMENTATION
// retrieve call site from sites array	WITHOUT_CLASSIFICATION	0.9999580107380658	WITHOUT_CLASSIFICATION	4.1989261934270485E-5	IMPLEMENTATION
// add name to call site list	WITHOUT_CLASSIFICATION	0.9999399128997041	WITHOUT_CLASSIFICATION	6.0087100295786896E-5	IMPLEMENTATION
// module is on top of stack	WITHOUT_CLASSIFICATION	0.9998929851016817	WITHOUT_CLASSIFICATION	1.0701489831839638E-4	IMPLEMENTATION
// build scope names string	WITHOUT_CLASSIFICATION	0.9999307282179839	WITHOUT_CLASSIFICATION	6.927178201611644E-5	IMPLEMENTATION
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999383407113337	WITHOUT_CLASSIFICATION	6.165928866636601E-5	IMPLEMENTATION
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999383407113337	WITHOUT_CLASSIFICATION	6.165928866636601E-5	IMPLEMENTATION
// generate call sites initialization code	WITHOUT_CLASSIFICATION	0.9999749350531674	WITHOUT_CLASSIFICATION	2.506494683274205E-5	IMPLEMENTATION
// generate symbols initialization code	WITHOUT_CLASSIFICATION	0.9999768551600217	WITHOUT_CLASSIFICATION	2.3144839978227853E-5	IMPLEMENTATION
// generate fixnums initialization code	WITHOUT_CLASSIFICATION	0.9999769760489285	WITHOUT_CLASSIFICATION	2.3023951071486346E-5	IMPLEMENTATION
// generate constants initialization code	WITHOUT_CLASSIFICATION	0.9999827602644867	WITHOUT_CLASSIFICATION	1.723973551330534E-5	IMPLEMENTATION
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999767941666452	WITHOUT_CLASSIFICATION	2.3205833354873714E-5	IMPLEMENTATION
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999767941666452	WITHOUT_CLASSIFICATION	2.3205833354873714E-5	IMPLEMENTATION
// generate variable readers initialization code	WITHOUT_CLASSIFICATION	0.9999748004313209	WITHOUT_CLASSIFICATION	2.5199568679000937E-5	IMPLEMENTATION
// generate variable writers initialization code	WITHOUT_CLASSIFICATION	0.9999758929656661	WITHOUT_CLASSIFICATION	2.4107034333873816E-5	IMPLEMENTATION
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999763746982129	WITHOUT_CLASSIFICATION	2.3625301787119415E-5	IMPLEMENTATION
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999763746982129	WITHOUT_CLASSIFICATION	2.3625301787119415E-5	IMPLEMENTATION
// generate bytelists initialization code	WITHOUT_CLASSIFICATION	0.9999768315708547	WITHOUT_CLASSIFICATION	2.316842914527884E-5	IMPLEMENTATION
// generate method cache initialization code	WITHOUT_CLASSIFICATION	0.9999737878172889	WITHOUT_CLASSIFICATION	2.6212182711170808E-5	IMPLEMENTATION
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9998632159849835	WITHOUT_CLASSIFICATION	1.3678401501654637E-4	IMPLEMENTATION
// use IRubyObject[]	WITHOUT_CLASSIFICATION	0.9998851050446746	WITHOUT_CLASSIFICATION	1.1489495532537428E-4	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999922439904003	WITHOUT_CLASSIFICATION	7.756009599712703E-6	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.999944823105502	WITHOUT_CLASSIFICATION	5.51768944980786E-5	IMPLEMENTATION
// No point in updating number if last number was same value.	WITHOUT_CLASSIFICATION	0.9999583927806115	WITHOUT_CLASSIFICATION	4.160721938846587E-5	IMPLEMENTATION
// load Object under value	WITHOUT_CLASSIFICATION	0.9999577624138846	WITHOUT_CLASSIFICATION	4.2237586115429414E-5	IMPLEMENTATION
// put under object array already present	WITHOUT_CLASSIFICATION	0.9999386358173747	WITHOUT_CLASSIFICATION	6.136418262517136E-5	IMPLEMENTATION
// if element count is less than 6, use helper methods	WITHOUT_CLASSIFICATION	0.9999662556996638	WITHOUT_CLASSIFICATION	3.374430033610869E-5	IMPLEMENTATION
// This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements	WITHOUT_CLASSIFICATION	0.9999779763826177	WITHOUT_CLASSIFICATION	2.2023617382364086E-5	IMPLEMENTATION
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999706173738524	WITHOUT_CLASSIFICATION	2.9382626147571862E-5	IMPLEMENTATION
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999706173738524	WITHOUT_CLASSIFICATION	2.9382626147571862E-5	IMPLEMENTATION
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9999124769807375	WITHOUT_CLASSIFICATION	8.752301926246053E-5	IMPLEMENTATION
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9999124769807375	WITHOUT_CLASSIFICATION	8.752301926246053E-5	IMPLEMENTATION
// use specific-arity for as much as possible	WITHOUT_CLASSIFICATION	0.9999274941218815	WITHOUT_CLASSIFICATION	7.25058781184914E-5	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.999913605863836	WITHOUT_CLASSIFICATION	8.63941361639126E-5	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.999913605863836	WITHOUT_CLASSIFICATION	8.63941361639126E-5	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.999913605863836	WITHOUT_CLASSIFICATION	8.63941361639126E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9998877342357109	WITHOUT_CLASSIFICATION	1.122657642891302E-4	IMPLEMENTATION
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999199744152067	WITHOUT_CLASSIFICATION	8.002558479327157E-5	IMPLEMENTATION
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999199744152067	WITHOUT_CLASSIFICATION	8.002558479327157E-5	IMPLEMENTATION
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999792396162323	WITHOUT_CLASSIFICATION	2.076038376776637E-5	IMPLEMENTATION
// check the condition	WITHOUT_CLASSIFICATION	0.9999671138728854	WITHOUT_CLASSIFICATION	3.2886127114615156E-5	IMPLEMENTATION
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9998698632556916	WITHOUT_CLASSIFICATION	1.3013674430831606E-4	IMPLEMENTATION
// skip catch block	WITHOUT_CLASSIFICATION	0.9998177232761066	WITHOUT_CLASSIFICATION	1.822767238933387E-4	IMPLEMENTATION
// catch logic for flow-control: next, break	WITHOUT_CLASSIFICATION	0.9998892322491031	WITHOUT_CLASSIFICATION	1.1076775089692994E-4	IMPLEMENTATION
// next jump	WITHOUT_CLASSIFICATION	0.9998483805391076	WITHOUT_CLASSIFICATION	1.5161946089240676E-4	IMPLEMENTATION
// exceptionNext target is for a next that doesn't push a new value, like this one	WITHOUT_CLASSIFICATION	0.9999505588034613	WITHOUT_CLASSIFICATION	4.9441196538623304E-5	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999090245936375	WITHOUT_CLASSIFICATION	9.097540636250354E-5	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999090245936375	WITHOUT_CLASSIFICATION	9.097540636250354E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9998877342357109	WITHOUT_CLASSIFICATION	1.122657642891302E-4	IMPLEMENTATION
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999792396162323	WITHOUT_CLASSIFICATION	2.076038376776637E-5	IMPLEMENTATION
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999370452971214	WITHOUT_CLASSIFICATION	6.29547028786684E-5	IMPLEMENTATION
// check the condition	WITHOUT_CLASSIFICATION	0.9999671138728854	WITHOUT_CLASSIFICATION	3.2886127114615156E-5	IMPLEMENTATION
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9998698632556916	WITHOUT_CLASSIFICATION	1.3013674430831606E-4	IMPLEMENTATION
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999416935822368	WITHOUT_CLASSIFICATION	5.830641776308868E-5	IMPLEMENTATION
// break jump	WITHOUT_CLASSIFICATION	0.9999353570251036	WITHOUT_CLASSIFICATION	6.464297489640957E-5	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999041874779524	WITHOUT_CLASSIFICATION	9.581252204753768E-5	IMPLEMENTATION
//[reg]	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
// for regular expressions with the /o flag	WITHOUT_CLASSIFICATION	0.9994567919793	WITHOUT_CLASSIFICATION	5.432080206998753E-4	IMPLEMENTATION
// inside a loop, jump to body	WITHOUT_CLASSIFICATION	0.9998926262796888	WITHOUT_CLASSIFICATION	1.0737372031123604E-4	IMPLEMENTATION
// inside a loop, jump to conditional	WITHOUT_CLASSIFICATION	0.9999086101241442	WITHOUT_CLASSIFICATION	9.138987585572981E-5	IMPLEMENTATION
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999416935822368	WITHOUT_CLASSIFICATION	5.830641776308868E-5	IMPLEMENTATION
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999831773290463	WITHOUT_CLASSIFICATION	1.6822670953670782E-5	IMPLEMENTATION
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999831773290463	WITHOUT_CLASSIFICATION	1.6822670953670782E-5	IMPLEMENTATION
// if more than 4 vars, get values array too	WITHOUT_CLASSIFICATION	0.9999457204680884	WITHOUT_CLASSIFICATION	5.427953191160966E-5	IMPLEMENTATION
// retry handling in the rescue block	WITHOUT_CLASSIFICATION	0.999926725238798	WITHOUT_CLASSIFICATION	7.327476120198148E-5	IMPLEMENTATION
// any exceptions raised must continue to be raised, skipping $! restoration	WITHOUT_CLASSIFICATION	0.9999563956858636	WITHOUT_CLASSIFICATION	4.360431413638974E-5	IMPLEMENTATION
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9999449012950067	WITHOUT_CLASSIFICATION	5.5098704993256786E-5	IMPLEMENTATION
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999762890181868	WITHOUT_CLASSIFICATION	2.371098181314216E-5	IMPLEMENTATION
// Handle Flow exceptions, just propagating them	WITHOUT_CLASSIFICATION	0.9999505276386463	WITHOUT_CLASSIFICATION	4.9472361353633664E-5	IMPLEMENTATION
// rethrow to outer flow catcher	WITHOUT_CLASSIFICATION	0.9999002700912514	WITHOUT_CLASSIFICATION	9.972990874865955E-5	IMPLEMENTATION
// Handle Ruby exceptions (RaiseException)	WITHOUT_CLASSIFICATION	0.9999535515085134	WITHOUT_CLASSIFICATION	4.644849148670342E-5	IMPLEMENTATION
// inside a loop, break out of it // go to end of loop, leaving break value on stack	WITHOUT_CLASSIFICATION	0.9999584729583892	WITHOUT_CLASSIFICATION	4.152704161066834E-5	IMPLEMENTATION
// false // zero	WITHOUT_CLASSIFICATION	0.9998927907326123	WITHOUT_CLASSIFICATION	1.0720926738761278E-4	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999539724484788	WITHOUT_CLASSIFICATION	4.602755152106983E-5	IMPLEMENTATION
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9999449012950067	WITHOUT_CLASSIFICATION	5.5098704993256786E-5	IMPLEMENTATION
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999762890181868	WITHOUT_CLASSIFICATION	2.371098181314216E-5	IMPLEMENTATION
// retry handling in the rescue blocks	WITHOUT_CLASSIFICATION	0.9999284126449637	WITHOUT_CLASSIFICATION	7.158735503627678E-5	IMPLEMENTATION
// push false	WITHOUT_CLASSIFICATION	0.999853749799644	WITHOUT_CLASSIFICATION	1.4625020035595015E-4	IMPLEMENTATION
//method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));	WITHOUT_CLASSIFICATION	0.9999608603803035	WITHOUT_CLASSIFICATION	3.9139619696500724E-5	IMPLEMENTATION
//method.ifnonnull(trueLabel);	WITHOUT_CLASSIFICATION	0.9998759875050012	WITHOUT_CLASSIFICATION	1.2401249499891908E-4	IMPLEMENTATION
// EQ == 0 (i.e. false)   //[C]	WITHOUT_CLASSIFICATION	0.9998897517663926	WITHOUT_CLASSIFICATION	1.1024823360732082E-4	IMPLEMENTATION
//[C, C] //[C, C, String] //[C, null|C]	WITHOUT_CLASSIFICATION	0.999893277704773	WITHOUT_CLASSIFICATION	1.067222952270666E-4	IMPLEMENTATION
//[C]	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
// push true	WITHOUT_CLASSIFICATION	0.9998416901867273	WITHOUT_CLASSIFICATION	1.583098132726872E-4	IMPLEMENTATION
// EQ != 0 (i.e. true)	WITHOUT_CLASSIFICATION	0.9998698317957344	WITHOUT_CLASSIFICATION	1.301682042655868E-4	IMPLEMENTATION
//[?, ?] //[?, boolean]	WITHOUT_CLASSIFICATION	0.9999156937070309	WITHOUT_CLASSIFICATION	8.430629296910133E-5	IMPLEMENTATION
//[RubyModule] //[RubyModule, String]	WITHOUT_CLASSIFICATION	0.999893963164767	WITHOUT_CLASSIFICATION	1.0603683523292133E-4	IMPLEMENTATION
//[boolean]	WITHOUT_CLASSIFICATION	0.9998703418589647	WITHOUT_CLASSIFICATION	1.29658141035246E-4	IMPLEMENTATION
// no receiver for singleton class	WITHOUT_CLASSIFICATION	0.9999266994925056	WITHOUT_CLASSIFICATION	7.330050749444578E-5	IMPLEMENTATION
// but there's a superclass passed in, use it	WITHOUT_CLASSIFICATION	0.9999350442656859	WITHOUT_CLASSIFICATION	6.495573431410439E-5	IMPLEMENTATION
// we re-set self to the class, but store the old self in a temporary local variable // this is to prevent it GCing in case the singleton is short-lived	WITHOUT_CLASSIFICATION	0.9999949902835007	WITHOUT_CLASSIFICATION	5.00971649932523E-6	IMPLEMENTATION
// set self to the class	WITHOUT_CLASSIFICATION	0.9999700041241089	WITHOUT_CLASSIFICATION	2.999587589121105E-5	IMPLEMENTATION
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9998470859925465	WITHOUT_CLASSIFICATION	1.5291400745356314E-4	IMPLEMENTATION
// static scope	WITHOUT_CLASSIFICATION	0.9998990846833501	WITHOUT_CLASSIFICATION	1.0091531664981372E-4	IMPLEMENTATION
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999710545221582	WITHOUT_CLASSIFICATION	2.8945477841801858E-5	IMPLEMENTATION
// new instance to invoke run against	WITHOUT_CLASSIFICATION	0.9999311783950396	WITHOUT_CLASSIFICATION	6.88216049603098E-5	IMPLEMENTATION
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9998470859925465	WITHOUT_CLASSIFICATION	1.5291400745356314E-4	IMPLEMENTATION
// static scope	WITHOUT_CLASSIFICATION	0.9998990846833501	WITHOUT_CLASSIFICATION	1.0091531664981372E-4	IMPLEMENTATION
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999710545221582	WITHOUT_CLASSIFICATION	2.8945477841801858E-5	IMPLEMENTATION
// finally with exception	WITHOUT_CLASSIFICATION	0.9999410237034663	WITHOUT_CLASSIFICATION	5.8976296533794555E-5	IMPLEMENTATION
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999402125350139	WITHOUT_CLASSIFICATION	5.978746498618375E-5	IMPLEMENTATION
// otherwise, there's a receiver, so we pass that in directly for the sclass logic	WITHOUT_CLASSIFICATION	0.9999740274660391	WITHOUT_CLASSIFICATION	2.59725339609135E-5	IMPLEMENTATION
// original exception is on stack	WITHOUT_CLASSIFICATION	0.9999560924203036	WITHOUT_CLASSIFICATION	4.390757969640382E-5	IMPLEMENTATION
// RaiseException is on stack, get RubyException out	WITHOUT_CLASSIFICATION	0.9999483987406438	WITHOUT_CLASSIFICATION	5.16012593560936E-5	IMPLEMENTATION
// updating position for same line; skip	WITHOUT_CLASSIFICATION	0.9999572072212315	WITHOUT_CLASSIFICATION	4.2792778768551795E-5	IMPLEMENTATION
// callbacks to fill in method body	WITHOUT_CLASSIFICATION	0.9998559425059352	WITHOUT_CLASSIFICATION	1.4405749406481115E-4	IMPLEMENTATION
// prepare to call "def" utility method to handle def logic	WITHOUT_CLASSIFICATION	0.9998794346707296	WITHOUT_CLASSIFICATION	1.2056532927033018E-4	IMPLEMENTATION
// script object	WITHOUT_CLASSIFICATION	0.9998958592371003	WITHOUT_CLASSIFICATION	1.0414076289964903E-4	IMPLEMENTATION
// arities	WITHOUT_CLASSIFICATION	0.9958170497039265	WITHOUT_CLASSIFICATION	0.004182950296073474	IMPLEMENTATION
// TODO assuming case is a fixnum	WITHOUT_CLASSIFICATION	0.9905082240820993	WITHOUT_CLASSIFICATION	0.009491775917900772	IMPLEMENTATION
// we have an input case, prepare branching logic	WITHOUT_CLASSIFICATION	0.9999127950154458	WITHOUT_CLASSIFICATION	8.720498455421355E-5	IMPLEMENTATION
// we have optimized switch cases, build a lookupswitch	WITHOUT_CLASSIFICATION	0.9998638794517821	WITHOUT_CLASSIFICATION	1.3612054821786625E-4	IMPLEMENTATION
// checkcast the value; if match, fast path; otherwise proceed to slow logic	WITHOUT_CLASSIFICATION	0.999977833904772	WITHOUT_CLASSIFICATION	2.216609522801969E-5	IMPLEMENTATION
// expression-based tests + bodies	WITHOUT_CLASSIFICATION	0.9998772452670422	WITHOUT_CLASSIFICATION	1.2275473295772572E-4	IMPLEMENTATION
// normal case, create a new label	WITHOUT_CLASSIFICATION	0.9999793432160742	WITHOUT_CLASSIFICATION	2.0656783925793352E-5	IMPLEMENTATION
// last conditional case, use defaultCase	WITHOUT_CLASSIFICATION	0.9999521211501031	WITHOUT_CLASSIFICATION	4.787884989692899E-5	IMPLEMENTATION
// do nothing; arity check is done before call	WITHOUT_CLASSIFICATION	0.9999786602686349	WITHOUT_CLASSIFICATION	2.1339731365054964E-5	IMPLEMENTATION
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999131035691167	WITHOUT_CLASSIFICATION	8.68964308833365E-5	IMPLEMENTATION
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.999917849472543	WITHOUT_CLASSIFICATION	8.215052745695522E-5	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.9999332316763917	WITHOUT_CLASSIFICATION	6.676832360827948E-5	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.999925456526908	WITHOUT_CLASSIFICATION	7.454347309196265E-5	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.999925456526908	WITHOUT_CLASSIFICATION	7.454347309196265E-5	IMPLEMENTATION
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999267350574756	WITHOUT_CLASSIFICATION	7.326494252433727E-5	IMPLEMENTATION
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999267350574756	WITHOUT_CLASSIFICATION	7.326494252433727E-5	IMPLEMENTATION
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.999954565363456	WITHOUT_CLASSIFICATION	4.543463654399377E-5	IMPLEMENTATION
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.999954565363456	WITHOUT_CLASSIFICATION	4.543463654399377E-5	IMPLEMENTATION
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999687922996169	WITHOUT_CLASSIFICATION	3.120770038307223E-5	IMPLEMENTATION
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999722477048474	WITHOUT_CLASSIFICATION	2.775229515265483E-5	IMPLEMENTATION
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999677169429915	WITHOUT_CLASSIFICATION	3.228305700845444E-5	IMPLEMENTATION
// if there's args left and we want them, assign to rest arg	WITHOUT_CLASSIFICATION	0.999939640588959	WITHOUT_CLASSIFICATION	6.0359411041081376E-5	IMPLEMENTATION
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999664666430385	WITHOUT_CLASSIFICATION	3.353335696145672E-5	IMPLEMENTATION
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.999947679625961	WITHOUT_CLASSIFICATION	5.232037403900311E-5	IMPLEMENTATION
// first, iterate over all pre args	WITHOUT_CLASSIFICATION	0.9999422638714176	WITHOUT_CLASSIFICATION	5.773612858239172E-5	IMPLEMENTATION
// then optional args	WITHOUT_CLASSIFICATION	0.999929600424211	WITHOUT_CLASSIFICATION	7.03995757889576E-5	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999090245936375	WITHOUT_CLASSIFICATION	9.097540636250354E-5	IMPLEMENTATION
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999687922996169	WITHOUT_CLASSIFICATION	3.120770038307223E-5	IMPLEMENTATION
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999722477048474	WITHOUT_CLASSIFICATION	2.775229515265483E-5	IMPLEMENTATION
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999677169429915	WITHOUT_CLASSIFICATION	3.228305700845444E-5	IMPLEMENTATION
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999664666430385	WITHOUT_CLASSIFICATION	3.353335696145672E-5	IMPLEMENTATION
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.999947679625961	WITHOUT_CLASSIFICATION	5.232037403900311E-5	IMPLEMENTATION
// if rest args, excluding post args	WITHOUT_CLASSIFICATION	0.999906459805748	WITHOUT_CLASSIFICATION	9.354019425199166E-5	IMPLEMENTATION
// finally, post args	WITHOUT_CLASSIFICATION	0.9998987898445949	WITHOUT_CLASSIFICATION	1.012101554050141E-4	IMPLEMENTATION
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9997424196591782	WITHOUT_CLASSIFICATION	2.575803408218239E-4	IMPLEMENTATION
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9997424196591782	WITHOUT_CLASSIFICATION	2.575803408218239E-4	IMPLEMENTATION
// unwrap scopes to appropriate depth	WITHOUT_CLASSIFICATION	0.9998588623631599	WITHOUT_CLASSIFICATION	1.4113763684002567E-4	IMPLEMENTATION
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999169823667384	WITHOUT_CLASSIFICATION	8.301763326152897E-5	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999713712203375	WITHOUT_CLASSIFICATION	2.8628779662505497E-5	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999211068214087	WITHOUT_CLASSIFICATION	7.889317859134284E-5	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999211068214087	WITHOUT_CLASSIFICATION	7.889317859134284E-5	IMPLEMENTATION
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999118134035619	WITHOUT_CLASSIFICATION	8.818659643809954E-5	IMPLEMENTATION
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999278766469388	WITHOUT_CLASSIFICATION	7.212335306112518E-5	IMPLEMENTATION
// store the local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999611375153203	WITHOUT_CLASSIFICATION	3.886248467969918E-5	IMPLEMENTATION
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999397306382352	WITHOUT_CLASSIFICATION	6.0269361764795585E-5	IMPLEMENTATION
// return in a class body raises error	WITHOUT_CLASSIFICATION	0.9999886940811671	WITHOUT_CLASSIFICATION	1.130591883292595E-5	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.999955950979306	WITHOUT_CLASSIFICATION	4.40490206939285E-5	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999924531860226	WITHOUT_CLASSIFICATION	7.546813977321172E-6	IMPLEMENTATION
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999443108486216	WITHOUT_CLASSIFICATION	5.568915137843357E-5	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999151277804925	WITHOUT_CLASSIFICATION	8.487221950742105E-5	IMPLEMENTATION
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999559252925951	WITHOUT_CLASSIFICATION	4.407470740482554E-5	IMPLEMENTATION
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999419310477167	WITHOUT_CLASSIFICATION	5.8068952283261835E-5	IMPLEMENTATION
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999118134035619	WITHOUT_CLASSIFICATION	8.818659643809954E-5	IMPLEMENTATION
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999278766469388	WITHOUT_CLASSIFICATION	7.212335306112518E-5	IMPLEMENTATION
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999397306382352	WITHOUT_CLASSIFICATION	6.0269361764795585E-5	IMPLEMENTATION
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.999913531728155	WITHOUT_CLASSIFICATION	8.646827184504845E-5	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999713712203375	WITHOUT_CLASSIFICATION	2.8628779662505497E-5	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999713712203375	WITHOUT_CLASSIFICATION	2.8628779662505497E-5	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999539724484788	WITHOUT_CLASSIFICATION	4.602755152106983E-5	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999539724484788	WITHOUT_CLASSIFICATION	4.602755152106983E-5	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999178905674544	WITHOUT_CLASSIFICATION	8.210943254570524E-5	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999178905674544	WITHOUT_CLASSIFICATION	8.210943254570524E-5	IMPLEMENTATION
// store the local vars in a local variable if there are any	WITHOUT_CLASSIFICATION	0.9999876123855048	WITHOUT_CLASSIFICATION	1.238761449525674E-5	IMPLEMENTATION
// if more than 4 locals, get and populate the locals array too	WITHOUT_CLASSIFICATION	0.9999509238638745	WITHOUT_CLASSIFICATION	4.9076136125441013E-5	IMPLEMENTATION
// fill local vars with nil, to avoid checking every access.	WITHOUT_CLASSIFICATION	0.9999350157664306	WITHOUT_CLASSIFICATION	6.498423356940435E-5	IMPLEMENTATION
// default for starting tempVariableIndex is ok	WITHOUT_CLASSIFICATION	0.9999798757132056	WITHOUT_CLASSIFICATION	2.0124286794446633E-5	IMPLEMENTATION
// store the local vars in a local variable for preparing the class (using previous scope)	WITHOUT_CLASSIFICATION	0.9999897598076756	WITHOUT_CLASSIFICATION	1.024019232450563E-5	IMPLEMENTATION
// store the new local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999678449304187	WITHOUT_CLASSIFICATION	3.215506958130872E-5	IMPLEMENTATION
// in 1.8 mode, this will be a RubyArray containing the arguments // in 1.9 mode, this will be an IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999663280730825	WITHOUT_CLASSIFICATION	3.3671926917445065E-5	IMPLEMENTATION
// no variable initialization, because we're reusing parent's scope (flat)	WITHOUT_CLASSIFICATION	0.9999803648964776	WITHOUT_CLASSIFICATION	1.9635103522527926E-5	IMPLEMENTATION
// for specific-index cases, clean up non-expression values	WITHOUT_CLASSIFICATION	0.9999493355602771	WITHOUT_CLASSIFICATION	5.066443972286466E-5	IMPLEMENTATION
// set up a local Ruby variable	WITHOUT_CLASSIFICATION	0.9999469947201067	WITHOUT_CLASSIFICATION	5.300527989325039E-5	IMPLEMENTATION
// if that succeeds, the others should as well	WITHOUT_CLASSIFICATION	0.9999280908153967	WITHOUT_CLASSIFICATION	7.19091846033409E-5	IMPLEMENTATION
// verify the class	WITHOUT_CLASSIFICATION	0.9999457159678644	WITHOUT_CLASSIFICATION	5.428403213571586E-5	IMPLEMENTATION
// create dir if necessary	WITHOUT_CLASSIFICATION	0.9999838682782698	WITHOUT_CLASSIFICATION	1.6131721730139427E-5	IMPLEMENTATION
// Create the class with the appropriate class name and source file	WITHOUT_CLASSIFICATION	0.9999696381315578	WITHOUT_CLASSIFICATION	3.036186844219965E-5	IMPLEMENTATION
// add setPosition impl, which stores filename as constant to speed updates	WITHOUT_CLASSIFICATION	0.9999877563788377	WITHOUT_CLASSIFICATION	1.2243621162270366E-5	IMPLEMENTATION
// thread context	WITHOUT_CLASSIFICATION	0.9998532920072838	WITHOUT_CLASSIFICATION	1.4670799271614414E-4	IMPLEMENTATION
// line number	WITHOUT_CLASSIFICATION	0.9999059287441526	WITHOUT_CLASSIFICATION	9.407125584739416E-5	IMPLEMENTATION
// invoke __file__ with threadcontext, self, args (null), and block (null)	WITHOUT_CLASSIFICATION	0.9998801679146946	WITHOUT_CLASSIFICATION	1.1983208530539136E-4	IMPLEMENTATION
// load always uses IRubyObject[], so simple closure offset calculation here	WITHOUT_CLASSIFICATION	0.9999561699427572	WITHOUT_CLASSIFICATION	4.3830057242923E-5	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999924531860226	WITHOUT_CLASSIFICATION	7.546813977321172E-6	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999151277804925	WITHOUT_CLASSIFICATION	8.487221950742105E-5	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999479085352848	WITHOUT_CLASSIFICATION	5.209146471511656E-5	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9958745320667561	WITHOUT_CLASSIFICATION	0.004125467933243896	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9958745320667561	WITHOUT_CLASSIFICATION	0.004125467933243896	IMPLEMENTATION
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.999913531728155	WITHOUT_CLASSIFICATION	8.646827184504845E-5	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999713712203375	WITHOUT_CLASSIFICATION	2.8628779662505497E-5	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999539724484788	WITHOUT_CLASSIFICATION	4.602755152106983E-5	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999178905674544	WITHOUT_CLASSIFICATION	8.210943254570524E-5	IMPLEMENTATION
// add Script#run impl, used for running this script with a specified threadcontext and self // root method of a script is always in __file__ method	WITHOUT_CLASSIFICATION	0.9999855856863387	WITHOUT_CLASSIFICATION	1.441431366132662E-5	IMPLEMENTATION
// add main impl, used for detached or command-line execution of this script with a new runtime // root method of a script is always in stub0, method0	WITHOUT_CLASSIFICATION	0.9999921885160359	WITHOUT_CLASSIFICATION	7.811483964088442E-6	IMPLEMENTATION
// construct static scope list of names	WITHOUT_CLASSIFICATION	0.9999482102224023	WITHOUT_CLASSIFICATION	5.17897775976453E-5	IMPLEMENTATION
// JRUBY-3014: make __FILE__ dynamically determined at load time, but // we provide a reasonable default here	WITHOUT_CLASSIFICATION	0.9999785576674959	WITHOUT_CLASSIFICATION	2.1442332504053437E-5	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999922264475907	WITHOUT_CLASSIFICATION	7.773552409357154E-6	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999922264475907	WITHOUT_CLASSIFICATION	7.773552409357154E-6	IMPLEMENTATION
// lazily create class init only if necessary	WITHOUT_CLASSIFICATION	0.999981741409477	WITHOUT_CLASSIFICATION	1.8258590522987186E-5	IMPLEMENTATION
// boxed arg list __file__	WITHOUT_CLASSIFICATION	0.9998730335434489	WITHOUT_CLASSIFICATION	1.2696645655112953E-4	IMPLEMENTATION
// invoke static __file__	WITHOUT_CLASSIFICATION	0.999898117105432	WITHOUT_CLASSIFICATION	1.0188289456804494E-4	IMPLEMENTATION
// exact arg list __file__	WITHOUT_CLASSIFICATION	0.9998829784407061	WITHOUT_CLASSIFICATION	1.1702155929406992E-4	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.9999020479258981	WITHOUT_CLASSIFICATION	9.795207410188924E-5	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.9999020479258981	WITHOUT_CLASSIFICATION	9.795207410188924E-5	IMPLEMENTATION
// not using a new scope, use saved one for a flat closure	WITHOUT_CLASSIFICATION	0.9997064768797843	WITHOUT_CLASSIFICATION	2.935231202156817E-4	IMPLEMENTATION
// normal closure	WITHOUT_CLASSIFICATION	0.9998652940655155	WITHOUT_CLASSIFICATION	1.34705934484595E-4	IMPLEMENTATION
// end of scoping for closure's vars	WITHOUT_CLASSIFICATION	0.9999504488615439	WITHOUT_CLASSIFICATION	4.95511384559443E-5	IMPLEMENTATION
// we only need full-on redo exception handling if there's logic that might produce it	WITHOUT_CLASSIFICATION	0.9999721422956859	WITHOUT_CLASSIFICATION	2.785770431400361E-5	IMPLEMENTATION
// handle redos by restarting the block	WITHOUT_CLASSIFICATION	0.99993255213689	WITHOUT_CLASSIFICATION	6.744786310998457E-5	IMPLEMENTATION
// jump back to the top of the main body of this closure	WITHOUT_CLASSIFICATION	0.9999691460407637	WITHOUT_CLASSIFICATION	3.0853959236345605E-5	IMPLEMENTATION
// Ruby name 	WITHOUT_CLASSIFICATION	0.9998468716675865	WITHOUT_CLASSIFICATION	1.531283324136017E-4	IMPLEMENTATION
// Accumulate call arguments	WITHOUT_CLASSIFICATION	0.99991045335004	WITHOUT_CLASSIFICATION	8.954664995995863E-5	IMPLEMENTATION
// Fix FileNameCompletor to work mid-line	WITHOUT_CLASSIFICATION	0.9998717648314124	WITHOUT_CLASSIFICATION	1.2823516858767548E-4	IMPLEMENTATION
// We need to ensure that the variable names generated here cannot conflict with ruby variable names! // Hence the "%" tthat is appended to the beginning!	WITHOUT_CLASSIFICATION	0.9998974213434964	WITHOUT_CLASSIFICATION	1.0257865650364343E-4	IMPLEMENTATION
// Does this method define code?  // Default is yes -- which basically leads to pessimistic but safe optimizations // But, for library and internal methods, this might be false.	WITHOUT_CLASSIFICATION	0.9999681880750532	WITHOUT_CLASSIFICATION	3.1811924946874115E-5	IMPLEMENTATION
// Map of constants defined in this scope (not valid for methods!)	WITHOUT_CLASSIFICATION	0.9999863263217799	WITHOUT_CLASSIFICATION	1.3673678220144047E-5	IMPLEMENTATION
// NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner // with outer loops encountered before inner loops, and inner loops finished before outer ones. // // So, we can keep track of loops in a loop stack which  keeps track of loops as they are encountered. // This lets us implement next/redo/break/retry easily for the non-closure cases	WITHOUT_CLASSIFICATION	0.9992424228019695	WITHOUT_CLASSIFICATION	7.575771980305685E-4	IMPLEMENTATION
// Map keep track of the next available variable index for a particular prefix	WITHOUT_CLASSIFICATION	0.999944613570096	WITHOUT_CLASSIFICATION	5.538642990402402E-5	IMPLEMENTATION
// Control flow graph for this scope	WITHOUT_CLASSIFICATION	0.9999350040987004	WITHOUT_CLASSIFICATION	6.499590129961456E-5	IMPLEMENTATION
//        _lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;	WITHOUT_CLASSIFICATION	0.999960871153185	WITHOUT_CLASSIFICATION	3.9128846814937164E-5	IMPLEMENTATION
// List of modules, classes, and methods defined in this scope!	WITHOUT_CLASSIFICATION	0.9999738501184123	WITHOUT_CLASSIFICATION	2.614988158765016E-5	IMPLEMENTATION
// Returns the containing parent scope!	WITHOUT_CLASSIFICATION	0.9999489241386337	WITHOUT_CLASSIFICATION	5.1075861366463936E-5	IMPLEMENTATION
// Insert nesting level to ensure variable names don't conflict across nested scopes! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //        return new Variable(prefix + _lexicalNestingLevel + "_" + idx);	WITHOUT_CLASSIFICATION	0.9999903810984297	WITHOUT_CLASSIFICATION	9.618901570170093E-6	IMPLEMENTATION
// get "self"	WITHOUT_CLASSIFICATION	0.99991786027059	WITHOUT_CLASSIFICATION	8.21397294098672E-5	IMPLEMENTATION
// variable is never read, variable is never live	WITHOUT_CLASSIFICATION	0.9997820756277489	WITHOUT_CLASSIFICATION	2.1792437225113019E-4	IMPLEMENTATION
// inline script	WITHOUT_CLASSIFICATION	0.9998525448007825	WITHOUT_CLASSIFICATION	1.474551992175082E-4	IMPLEMENTATION
// inline script	WITHOUT_CLASSIFICATION	0.9998525448007825	WITHOUT_CLASSIFICATION	1.474551992175082E-4	IMPLEMENTATION
// This method is called to build assignments for a multiple-assignment instruction	WITHOUT_CLASSIFICATION	0.9999184921377803	WITHOUT_CLASSIFICATION	8.150786221971963E-5	IMPLEMENTATION
// Build the class body!	WITHOUT_CLASSIFICATION	0.9999448355283802	WITHOUT_CLASSIFICATION	5.5164471619814554E-5	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999101109817623	WITHOUT_CLASSIFICATION	8.988901823770238E-5	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999101109817623	WITHOUT_CLASSIFICATION	8.988901823770238E-5	IMPLEMENTATION
// SSS FIXME: Can this ever be null?	WITHOUT_CLASSIFICATION	0.9996582687307631	WITHOUT_CLASSIFICATION	3.417312692368842E-4	IMPLEMENTATION
// Run the pass on the passed in scope!	WITHOUT_CLASSIFICATION	0.999934595068503	WITHOUT_CLASSIFICATION	6.540493149701223E-5	IMPLEMENTATION
// done // done // done // done	WITHOUT_CLASSIFICATION	0.9998769167410361	WITHOUT_CLASSIFICATION	1.2308325896400883E-4	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999845767406251	WITHOUT_CLASSIFICATION	1.5423259374854437E-5	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999845767406251	WITHOUT_CLASSIFICATION	1.5423259374854437E-5	IMPLEMENTATION
// This method is called to build arguments for a block!	WITHOUT_CLASSIFICATION	0.9999315427548227	WITHOUT_CLASSIFICATION	6.845724517726441E-5	IMPLEMENTATION
// build first node (and ignore its result) and then second node	WITHOUT_CLASSIFICATION	0.999980965986963	WITHOUT_CLASSIFICATION	1.9034013037000974E-5	IMPLEMENTATION
// build first node only and return false	WITHOUT_CLASSIFICATION	0.9999727765481663	WITHOUT_CLASSIFICATION	2.722345183379633E-5	IMPLEMENTATION
// Value of the last expression in the block 	WITHOUT_CLASSIFICATION	0.9999655765811329	WITHOUT_CLASSIFICATION	3.442341886715692E-5	IMPLEMENTATION
// If this is not a closure, the break is equivalent to jumping to the loop end label	WITHOUT_CLASSIFICATION	0.9999805957107496	WITHOUT_CLASSIFICATION	1.9404289250331527E-5	IMPLEMENTATION
// get the incoming case value	WITHOUT_CLASSIFICATION	0.9999820255955278	WITHOUT_CLASSIFICATION	1.7974404472167952E-5	IMPLEMENTATION
// the CASE instruction	WITHOUT_CLASSIFICATION	0.9999300677188162	WITHOUT_CLASSIFICATION	6.99322811838438E-5	IMPLEMENTATION
// lists to aggregate variables and bodies for whens	WITHOUT_CLASSIFICATION	0.9999128768806688	WITHOUT_CLASSIFICATION	8.7123119331254E-5	IMPLEMENTATION
// build each "when"	WITHOUT_CLASSIFICATION	0.9998912901074675	WITHOUT_CLASSIFICATION	1.0870989253265471E-4	IMPLEMENTATION
// multiple conditions for when	WITHOUT_CLASSIFICATION	0.9998278290024712	WITHOUT_CLASSIFICATION	1.7217099752862697E-4	IMPLEMENTATION
// build "else" if it exists	WITHOUT_CLASSIFICATION	0.9999220057969193	WITHOUT_CLASSIFICATION	7.799420308070756E-5	IMPLEMENTATION
// now emit bodies	WITHOUT_CLASSIFICATION	0.999872226204603	WITHOUT_CLASSIFICATION	1.277737953969405E-4	IMPLEMENTATION
// close it out	WITHOUT_CLASSIFICATION	0.9999237529809069	WITHOUT_CLASSIFICATION	7.62470190931277E-5	IMPLEMENTATION
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999886177391809	WITHOUT_CLASSIFICATION	1.1382260819035325E-5	IMPLEMENTATION
// Do we have a dynamic container?	WITHOUT_CLASSIFICATION	0.9991726359110034	WITHOUT_CLASSIFICATION	8.273640889966574E-4	IMPLEMENTATION
// Return a meta object corresponding to the class	WITHOUT_CLASSIFICATION	0.9999791076938114	WITHOUT_CLASSIFICATION	2.0892306188589466E-5	IMPLEMENTATION
// 1. Load the module first (lhs of node) // 2. Then load the constant from the module	WITHOUT_CLASSIFICATION	0.999973032785247	WITHOUT_CLASSIFICATION	2.696721475298327E-5	IMPLEMENTATION
// Build IR for args	WITHOUT_CLASSIFICATION	0.9998653090764764	WITHOUT_CLASSIFICATION	1.3469092352360037E-4	IMPLEMENTATION
// Build IR for body	WITHOUT_CLASSIFICATION	0.99986216132637	WITHOUT_CLASSIFICATION	1.378386736299742E-4	IMPLEMENTATION
// if root of method is rescue, build as a light rescue	WITHOUT_CLASSIFICATION	0.9999104972130124	WITHOUT_CLASSIFICATION	8.950278698756459E-5	IMPLEMENTATION
// Instance method	WITHOUT_CLASSIFICATION	0.9999147030559803	WITHOUT_CLASSIFICATION	8.529694401968955E-5	IMPLEMENTATION
// Class method	WITHOUT_CLASSIFICATION	0.9999126284167767	WITHOUT_CLASSIFICATION	8.73715832232053E-5	IMPLEMENTATION
// Other args begin at index 1	WITHOUT_CLASSIFICATION	0.9998879469616471	WITHOUT_CLASSIFICATION	1.1205303835302919E-4	IMPLEMENTATION
// Both for fixed arity and variable arity methods	WITHOUT_CLASSIFICATION	0.9999028100384463	WITHOUT_CLASSIFICATION	9.71899615537025E-5	IMPLEMENTATION
// Now for the rest	WITHOUT_CLASSIFICATION	0.9999108998198881	WITHOUT_CLASSIFICATION	8.910018011185742E-5	IMPLEMENTATION
// Jump to 'l' if this arg is not null.  If null, fall through and build the default value!	WITHOUT_CLASSIFICATION	0.9999950055666058	WITHOUT_CLASSIFICATION	4.9944333941174096E-6	IMPLEMENTATION
// This is not an expression that computes anything	WITHOUT_CLASSIFICATION	0.999965616119693	WITHOUT_CLASSIFICATION	3.4383880306964286E-5	IMPLEMENTATION
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999859073936104	WITHOUT_CLASSIFICATION	1.4092606389592829E-5	IMPLEMENTATION
// Build args	WITHOUT_CLASSIFICATION	0.999861858340132	WITHOUT_CLASSIFICATION	1.3814165986805743E-4	IMPLEMENTATION
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999792702622896	WITHOUT_CLASSIFICATION	2.0729737710355E-5	IMPLEMENTATION
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999858407360397	WITHOUT_CLASSIFICATION	1.415926396042335E-5	IMPLEMENTATION
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999886177391809	WITHOUT_CLASSIFICATION	1.1382260819035325E-5	IMPLEMENTATION
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999859073936104	WITHOUT_CLASSIFICATION	1.4092606389592829E-5	IMPLEMENTATION
// Build args	WITHOUT_CLASSIFICATION	0.999861858340132	WITHOUT_CLASSIFICATION	1.3814165986805743E-4	IMPLEMENTATION
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999858407360397	WITHOUT_CLASSIFICATION	1.415926396042335E-5	IMPLEMENTATION
// Get the container for this new module	WITHOUT_CLASSIFICATION	0.9999833832082604	WITHOUT_CLASSIFICATION	1.6616791739620488E-5	IMPLEMENTATION
// Build the new module	WITHOUT_CLASSIFICATION	0.999937512948272	WITHOUT_CLASSIFICATION	6.248705172795306E-5	IMPLEMENTATION
// Build the module body	WITHOUT_CLASSIFICATION	0.9999285578617342	WITHOUT_CLASSIFICATION	7.144213826581244E-5	IMPLEMENTATION
// First, build an assignment for a splat, if any, with the rest of the args!	WITHOUT_CLASSIFICATION	0.9998994508419453	WITHOUT_CLASSIFICATION	1.0054915805469963E-4	IMPLEMENTATION
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999618999133242	WITHOUT_CLASSIFICATION	3.8100086675817115E-5	IMPLEMENTATION
// If a closure, the next is simply a return from the closure! // If a regular loop, the next is simply a jump to the end of the iteration	WITHOUT_CLASSIFICATION	0.9999927836170346	WITHOUT_CLASSIFICATION	7.2163829653738E-6	IMPLEMENTATION
// get attr	WITHOUT_CLASSIFICATION	0.9999188792577245	WITHOUT_CLASSIFICATION	8.112074227550056E-5	IMPLEMENTATION
// call operator	WITHOUT_CLASSIFICATION	0.9998725774302146	WITHOUT_CLASSIFICATION	1.274225697853985E-4	IMPLEMENTATION
// set attr	WITHOUT_CLASSIFICATION	0.9999165512887389	WITHOUT_CLASSIFICATION	8.344871126109686E-5	IMPLEMENTATION
// Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, false, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.999955386062386	WITHOUT_CLASSIFICATION	4.461393761401526E-5	IMPLEMENTATION
// This does the assignment!	WITHOUT_CLASSIFICATION	0.999932088317469	WITHOUT_CLASSIFICATION	6.791168253091614E-5	IMPLEMENTATION
// This does the assignment!	WITHOUT_CLASSIFICATION	0.999932088317469	WITHOUT_CLASSIFICATION	6.791168253091614E-5	IMPLEMENTATION
// if v1 is defined and true, we are done! 	WITHOUT_CLASSIFICATION	0.9999356223227374	WITHOUT_CLASSIFICATION	6.437767726254949E-5	IMPLEMENTATION
// build first node only and return true	WITHOUT_CLASSIFICATION	0.999968836941938	WITHOUT_CLASSIFICATION	3.116305806196695E-5	IMPLEMENTATION
// build first node as non-expr and build second node	WITHOUT_CLASSIFICATION	0.9999571042685289	WITHOUT_CLASSIFICATION	4.289573147100614E-5	IMPLEMENTATION
// Top-level script!	WITHOUT_CLASSIFICATION	0.999859522953584	WITHOUT_CLASSIFICATION	1.4047704641599558E-4	IMPLEMENTATION
// we won't enter the loop -- just build the condition node	WITHOUT_CLASSIFICATION	0.999968284542155	WITHOUT_CLASSIFICATION	3.171545784498027E-5	IMPLEMENTATION
/* ----------- Private Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999752904467563	WITHOUT_CLASSIFICATION	2.470955324373044E-5	IMPLEMENTATION
// What handles warnings	WITHOUT_CLASSIFICATION	0.9998835433891768	WITHOUT_CLASSIFICATION	1.1645661082323612E-4	IMPLEMENTATION
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.999998124292194	WITHOUT_CLASSIFICATION	1.8757078059370075E-6	IMPLEMENTATION
// For closures, a redo is a jump to the beginning of the closure // For non-closures, a redo is a jump to the beginning of the loop	WITHOUT_CLASSIFICATION	0.9999694881535932	WITHOUT_CLASSIFICATION	3.0511846406807018E-5	IMPLEMENTATION
// The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999774445233199	WITHOUT_CLASSIFICATION	2.255547668006252E-5	IMPLEMENTATION
// Dummy top-level method for the class	WITHOUT_CLASSIFICATION	0.9999526842315759	WITHOUT_CLASSIFICATION	4.731576842408645E-5	IMPLEMENTATION
// Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999796669786606	WITHOUT_CLASSIFICATION	2.033302133945804E-5	IMPLEMENTATION
// ------ Define the operations below ----	WITHOUT_CLASSIFICATION	0.9999686434796935	WITHOUT_CLASSIFICATION	3.1356520306438345E-5	IMPLEMENTATION
// value copy and type conversion operations	WITHOUT_CLASSIFICATION	0.9999890061991847	WITHOUT_CLASSIFICATION	1.0993800815211293E-5	IMPLEMENTATION
// alu operations	WITHOUT_CLASSIFICATION	0.9998909434552008	WITHOUT_CLASSIFICATION	1.0905654479916717E-4	IMPLEMENTATION
// method handle, arg receive, return value, and  call instructions	WITHOUT_CLASSIFICATION	0.9999346872470127	WITHOUT_CLASSIFICATION	6.531275298723684E-5	IMPLEMENTATION
// closure instructions	WITHOUT_CLASSIFICATION	0.9999237164298578	WITHOUT_CLASSIFICATION	7.628357014220472E-5	IMPLEMENTATION
// eval instructions	WITHOUT_CLASSIFICATION	0.9998735090989659	WITHOUT_CLASSIFICATION	1.2649090103408758E-4	IMPLEMENTATION
// def instructions	WITHOUT_CLASSIFICATION	0.9998880941089161	WITHOUT_CLASSIFICATION	1.1190589108397574E-4	IMPLEMENTATION
// exception instructions	WITHOUT_CLASSIFICATION	0.9999382830041145	WITHOUT_CLASSIFICATION	6.171699588546244E-5	IMPLEMENTATION
// Loads	WITHOUT_CLASSIFICATION	0.9961283618102653	WITHOUT_CLASSIFICATION	0.0038716381897347264	IMPLEMENTATION
// Stores	WITHOUT_CLASSIFICATION	0.9959698437610867	WITHOUT_CLASSIFICATION	0.004030156238913335	IMPLEMENTATION
// jump and branch operations	WITHOUT_CLASSIFICATION	0.9999110146249884	WITHOUT_CLASSIFICATION	8.898537501162477E-5	IMPLEMENTATION
// others	WITHOUT_CLASSIFICATION	0.996222078171695	WITHOUT_CLASSIFICATION	0.0037779218283050735	IMPLEMENTATION
// a case/when branch	WITHOUT_CLASSIFICATION	0.9998711484046087	WITHOUT_CLASSIFICATION	1.2885159539131454E-4	IMPLEMENTATION
// optimization guards	WITHOUT_CLASSIFICATION	0.9998645907683346	WITHOUT_CLASSIFICATION	1.3540923166551142E-4	IMPLEMENTATION
// By default, call instructions cannot be deleted even if their results aren't used by anyone // unless we know more about what the call is, what it does, etc. // Similarly for evals, stores, returns.	WITHOUT_CLASSIFICATION	0.999989703673103	WITHOUT_CLASSIFICATION	1.0296326896952368E-5	IMPLEMENTATION
// Returns the containing parent scope -- can be a dynamic value (hence Operand)!	WITHOUT_CLASSIFICATION	0.9999742153608326	WITHOUT_CLASSIFICATION	2.578463916731879E-5	IMPLEMENTATION
// scripts	WITHOUT_CLASSIFICATION	0.9961975655979022	WITHOUT_CLASSIFICATION	0.0038024344020979556	IMPLEMENTATION
// scripts and modules	WITHOUT_CLASSIFICATION	0.9998961257574364	WITHOUT_CLASSIFICATION	1.0387424256362099E-4	IMPLEMENTATION
// scripts, classes, and modules	WITHOUT_CLASSIFICATION	0.999926608697615	WITHOUT_CLASSIFICATION	7.339130238513442E-5	IMPLEMENTATION
// methods and closures	WITHOUT_CLASSIFICATION	0.9999096882421589	WITHOUT_CLASSIFICATION	9.031175784112199E-5	IMPLEMENTATION
// create a new variable using the prefix	WITHOUT_CLASSIFICATION	0.9999946015978816	WITHOUT_CLASSIFICATION	5.39840211850188E-6	IMPLEMENTATION
// create a new temporary variable	WITHOUT_CLASSIFICATION	0.999989211065228	WITHOUT_CLASSIFICATION	1.0788934772043964E-5	IMPLEMENTATION
// Get a new label using a generic prefix	WITHOUT_CLASSIFICATION	0.9999507624413301	WITHOUT_CLASSIFICATION	4.923755866998934E-5	IMPLEMENTATION
// Build the CFG for this scope -- supported only by methods & closures	WITHOUT_CLASSIFICATION	0.9999516270135941	WITHOUT_CLASSIFICATION	4.8372986405995523E-5	IMPLEMENTATION
// Get the control flow graph for this scope -- only valid for methods & closures	WITHOUT_CLASSIFICATION	0.9999850302676406	WITHOUT_CLASSIFICATION	1.496973235941165E-5	IMPLEMENTATION
// While processing loops, this returns the loop that we are processing.	WITHOUT_CLASSIFICATION	0.9999650303159673	WITHOUT_CLASSIFICATION	3.4969684032612E-5	IMPLEMENTATION
// Record the loop we are beginning to process	WITHOUT_CLASSIFICATION	0.9999470439725011	WITHOUT_CLASSIFICATION	5.2956027498875145E-5	IMPLEMENTATION
// Indicate that we are done processing the loop	WITHOUT_CLASSIFICATION	0.9999521251848018	WITHOUT_CLASSIFICATION	4.787481519814428E-5	IMPLEMENTATION
// Run the passed in compiler pass on this scope!	WITHOUT_CLASSIFICATION	0.9999352601704576	WITHOUT_CLASSIFICATION	6.473982954229982E-5	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9999493414741731	WITHOUT_CLASSIFICATION	5.065852582695879E-5	IMPLEMENTATION
// Readline	WITHOUT_CLASSIFICATION	0.9998458030812073	WITHOUT_CLASSIFICATION	1.5419691879270847E-4	IMPLEMENTATION
// If the cfg of the method is around, print the CFG!	WITHOUT_CLASSIFICATION	0.9999686356315549	WITHOUT_CLASSIFICATION	3.136436844500892E-5	IMPLEMENTATION
// Optimize some core class method calls for constant values	WITHOUT_CLASSIFICATION	0.999956679484072	WITHOUT_CLASSIFICATION	4.332051592797189E-5	IMPLEMENTATION
// If 'r' is not a constant, it could actually be a compound value! // Look in our value map to see if we have a simplified value for the receiver.	WITHOUT_CLASSIFICATION	0.9999925475717023	WITHOUT_CLASSIFICATION	7.452428297697971E-6	IMPLEMENTATION
// Check if we can optimize this call based on the receiving method and receiver type // Use the simplified receiver!	WITHOUT_CLASSIFICATION	0.9998756499900951	WITHOUT_CLASSIFICATION	1.243500099047826E-4	IMPLEMENTATION
// If we got a simplified value, mark the call dead and insert a copy in its place!	WITHOUT_CLASSIFICATION	0.9999624851986643	WITHOUT_CLASSIFICATION	3.751480133571773E-5	IMPLEMENTATION
// If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!	WITHOUT_CLASSIFICATION	0.9999482192335037	WITHOUT_CLASSIFICATION	5.178076649623424E-5	IMPLEMENTATION
/* ----------- Public abstract methods ---------- */	WITHOUT_CLASSIFICATION	0.9999683573829085	WITHOUT_CLASSIFICATION	3.164261709149362E-5	IMPLEMENTATION
/* ----------- Public methods with a default implementation ---------- */	WITHOUT_CLASSIFICATION	0.999822152991135	WITHOUT_CLASSIFICATION	1.7784700886513513E-4	IMPLEMENTATION
// Compute meet over all "sources" and compute "destination" basic blocks that should then be processed.  // sources & targets depends on direction of the data flow problem	WITHOUT_CLASSIFICATION	0.9999900331179731	WITHOUT_CLASSIFICATION	9.966882026871995E-6	IMPLEMENTATION
// If the solution has changed, add "dsts" to the work list. // No duplicates please which is why we have bbset.	WITHOUT_CLASSIFICATION	0.9999814764741356	WITHOUT_CLASSIFICATION	1.852352586434127E-5	IMPLEMENTATION
/* --------- Protected fields/methods below --------- */	WITHOUT_CLASSIFICATION	0.9999484669645293	WITHOUT_CLASSIFICATION	5.153303547069331E-5	IMPLEMENTATION
// Dataflow problem with which this node is associated // CFG node for which this node contains info.	WITHOUT_CLASSIFICATION	0.9999805642834532	WITHOUT_CLASSIFICATION	1.9435716546905286E-5	IMPLEMENTATION
/* -------------- Public fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999724914001223	WITHOUT_CLASSIFICATION	2.7508599877712437E-5	IMPLEMENTATION
// ------- Abstract methods without a default implementation -------	WITHOUT_CLASSIFICATION	0.9998413447146918	WITHOUT_CLASSIFICATION	1.5865528530827893E-4	IMPLEMENTATION
// ------- Default implementation methods below -------	WITHOUT_CLASSIFICATION	0.9995282982585865	WITHOUT_CLASSIFICATION	4.717017414134416E-4	IMPLEMENTATION
/* Compute Meet Over All Paths solution for this dataflow problem on the input CFG.     * This implements a standard worklist algorithm. */	WITHOUT_CLASSIFICATION	0.9979383303880536	WITHOUT_CLASSIFICATION	0.0020616696119465255	IMPLEMENTATION
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9998569079140684	WITHOUT_CLASSIFICATION	1.4309208593150995E-4	IMPLEMENTATION
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9998569079140684	WITHOUT_CLASSIFICATION	1.4309208593150995E-4	IMPLEMENTATION
/* -------------- Packaged/protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999765934184368	WITHOUT_CLASSIFICATION	2.3406581563222922E-5	IMPLEMENTATION
// We want unique ids for dataflow variables	WITHOUT_CLASSIFICATION	0.9998680966001325	WITHOUT_CLASSIFICATION	1.319033998675523E-4	IMPLEMENTATION
/* -------------- Protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999739513735102	WITHOUT_CLASSIFICATION	2.6048626489824304E-5	IMPLEMENTATION
/* -------------- Private fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999772794069287	WITHOUT_CLASSIFICATION	2.2720593071329093E-5	IMPLEMENTATION
// Initialize all flow graph nodes 	WITHOUT_CLASSIFICATION	0.9999563439395959	WITHOUT_CLASSIFICATION	4.3656060404224066E-5	IMPLEMENTATION
/* Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses */	WITHOUT_CLASSIFICATION	0.9999494571222143	WITHOUT_CLASSIFICATION	5.0542877785743274E-5	IMPLEMENTATION
/* ******************** PUBLIC INTERFACE ******************* */	WITHOUT_CLASSIFICATION	0.9999092246511456	WITHOUT_CLASSIFICATION	9.077534885429237E-5	IMPLEMENTATION
// Unique ID assigned to this variable	WITHOUT_CLASSIFICATION	0.9998845369568882	WITHOUT_CLASSIFICATION	1.1546304311184149E-4	IMPLEMENTATION
// start out with a default RubyObject allocator	WITHOUT_CLASSIFICATION	0.9999824879757596	WITHOUT_CLASSIFICATION	1.7512024240429912E-5	IMPLEMENTATION
// switch to an allocator based on a default constructor	WITHOUT_CLASSIFICATION	0.9999554045262676	WITHOUT_CLASSIFICATION	4.4595473732254714E-5	IMPLEMENTATION
/* ----------- Public Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999705297178186	WITHOUT_CLASSIFICATION	2.947028218136883E-5	IMPLEMENTATION
// class or module	WITHOUT_CLASSIFICATION	0.9998974324408473	WITHOUT_CLASSIFICATION	1.0256755915275247E-4	IMPLEMENTATION
// OUT = UNION(IN(succs))	WITHOUT_CLASSIFICATION	0.9998695249437842	WITHOUT_CLASSIFICATION	1.304750562157718E-4	IMPLEMENTATION
// Traverse the instructions in this basic block in reverse order!	WITHOUT_CLASSIFICATION	0.9999481629125899	WITHOUT_CLASSIFICATION	5.1837087410040874E-5	IMPLEMENTATION
// v is defined => It is no longer live before 'i'	WITHOUT_CLASSIFICATION	0.9999176590201313	WITHOUT_CLASSIFICATION	8.23409798687151E-5	IMPLEMENTATION
// IN is the same!	WITHOUT_CLASSIFICATION	0.9998902385627894	WITHOUT_CLASSIFICATION	1.097614372107028E-4	IMPLEMENTATION
// IN changed!	WITHOUT_CLASSIFICATION	0.9999014147679076	WITHOUT_CLASSIFICATION	9.858523209234326E-5	IMPLEMENTATION
/* ---------- Protected / package fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999595879859626	WITHOUT_CLASSIFICATION	4.041201403744699E-5	IMPLEMENTATION
// If 'v' is not live at the instruction site, and it has no side effects, mark it dead!	WITHOUT_CLASSIFICATION	0.9999602188876376	WITHOUT_CLASSIFICATION	3.9781112362352845E-5	IMPLEMENTATION
// Do not mark this instruction's operands live if the instruction itself is dead!	WITHOUT_CLASSIFICATION	0.9999528959825927	WITHOUT_CLASSIFICATION	4.710401740731618E-5	IMPLEMENTATION
/* ---------- Private fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999636673534531	WITHOUT_CLASSIFICATION	3.633264654679019E-5	IMPLEMENTATION
// Variables live at entry of this node // Variables live at exit of node // Temporary set of live variables // Size of the "_in" and "_out" bit sets 	WITHOUT_CLASSIFICATION	0.9999421508209994	WITHOUT_CLASSIFICATION	5.7849179000678464E-5	IMPLEMENTATION
// Used during optimization passes to propagate type and other information	WITHOUT_CLASSIFICATION	0.999952597040694	WITHOUT_CLASSIFICATION	4.740295930596602E-5	IMPLEMENTATION
// Does this instruction have side effects as a result of its operation // This information is used in optimization phases to impact dead code elimination // and other optimization passes	WITHOUT_CLASSIFICATION	0.9999879235626425	WITHOUT_CLASSIFICATION	1.2076437357458795E-5	IMPLEMENTATION
/* --------- "Abstract"/"please-override" methods --------- */	WITHOUT_CLASSIFICATION	0.9999526057902317	WITHOUT_CLASSIFICATION	4.739420976818487E-5	IMPLEMENTATION
/* Array of all operands for this instruction */	WITHOUT_CLASSIFICATION	0.9999218966552839	WITHOUT_CLASSIFICATION	7.810334471608743E-5	IMPLEMENTATION
/* List of all variables used by all operands of this instruction */	WITHOUT_CLASSIFICATION	0.999933193168143	WITHOUT_CLASSIFICATION	6.680683185693372E-5	IMPLEMENTATION
/*      * This method takes as input a map of operands to their values, and outputs     *     * If the value map provides a value for any of the instruction's operands     * this method is expected to replace the original operands with the simplified values.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify     */	WITHOUT_CLASSIFICATION	0.9999829861083668	WITHOUT_CLASSIFICATION	1.7013891633213366E-5	IMPLEMENTATION
// By default, no simplifications!	WITHOUT_CLASSIFICATION	0.9999473858010253	WITHOUT_CLASSIFICATION	5.261419897469832E-5	IMPLEMENTATION
// Can this call lead to ruby code getting modified?   // If we don't know what method we are calling, we assume it can (pessimistic, but safe!) // If we do know the target method, we ask the method itself whether it modifies ruby code	WITHOUT_CLASSIFICATION	0.9998405270148645	WITHOUT_CLASSIFICATION	1.5947298513543644E-4	IMPLEMENTATION
// By default, return instructions cannot be deleted	WITHOUT_CLASSIFICATION	0.9999847313567689	WITHOUT_CLASSIFICATION	1.5268643231090543E-5	IMPLEMENTATION
// If true, returns the rest of the array starting at the index	WITHOUT_CLASSIFICATION	0.9999792665812781	WITHOUT_CLASSIFICATION	2.0733418721843493E-5	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.999971679360427	WITHOUT_CLASSIFICATION	2.8320639572994632E-5	IMPLEMENTATION
// Map of label & basic blocks with that label	WITHOUT_CLASSIFICATION	0.9998948253437324	WITHOUT_CLASSIFICATION	1.0517465626761147E-4	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.999971679360427	WITHOUT_CLASSIFICATION	2.8320639572994632E-5	IMPLEMENTATION
// You can only value-replace atomic values	WITHOUT_CLASSIFICATION	0.9999462097858298	WITHOUT_CLASSIFICATION	5.3790214170044904E-5	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999020471994253	WITHOUT_CLASSIFICATION	9.795280057468828E-5	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999020471994253	WITHOUT_CLASSIFICATION	9.795280057468828E-5	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999020471994253	WITHOUT_CLASSIFICATION	9.795280057468828E-5	IMPLEMENTATION
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999753538987352	WITHOUT_CLASSIFICATION	2.4646101264834575E-5	IMPLEMENTATION
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999753538987352	WITHOUT_CLASSIFICATION	2.4646101264834575E-5	IMPLEMENTATION
// The operand that this attribute targets //    DEFERRED //    AttributeValue _val;       // Attribute value	WITHOUT_CLASSIFICATION	0.9999772237011136	WITHOUT_CLASSIFICATION	2.277629888640922E-5	IMPLEMENTATION
// Arrays, Ranges, etc. are compound values // Variables, fixnums, floats, etc. are "atomic" values	WITHOUT_CLASSIFICATION	0.999957666955111	WITHOUT_CLASSIFICATION	4.233304488909138E-5	IMPLEMENTATION
// Get the target class of this operand, if we know it!	WITHOUT_CLASSIFICATION	0.9999858813650707	WITHOUT_CLASSIFICATION	1.411863492928991E-5	IMPLEMENTATION
// The following constants capture pre-known static call sites -- used to implement ruby internals	WITHOUT_CLASSIFICATION	0.9971879601733327	WITHOUT_CLASSIFICATION	0.0028120398266673957	IMPLEMENTATION
/* Nothing to do by default */	WITHOUT_CLASSIFICATION	0.9999797715959343	WITHOUT_CLASSIFICATION	2.0228404065679567E-5	IMPLEMENTATION
// Map of label & basic blocks which are waiting for a bb with that label	WITHOUT_CLASSIFICATION	0.9999193523489565	WITHOUT_CLASSIFICATION	8.064765104347902E-5	IMPLEMENTATION
// Init before building basic blocks below!	WITHOUT_CLASSIFICATION	0.9998970446962382	WITHOUT_CLASSIFICATION	1.0295530376187093E-4	IMPLEMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9997127732378198	WITHOUT_CLASSIFICATION	2.8722676218025274E-4	IMPLEMENTATION
// Scope (method/closure) to which this cfg belongs // Entry BB -- dummy // Exit BB -- dummy // The actual graph // Next available basic block id	WITHOUT_CLASSIFICATION	0.9999325871342067	WITHOUT_CLASSIFICATION	6.741286579328038E-5	IMPLEMENTATION
// Jump instruction bbs dont add an edge to the succeeding bb by default	WITHOUT_CLASSIFICATION	0.9999780962895494	WITHOUT_CLASSIFICATION	2.1903710450612728E-5	IMPLEMENTATION
// Add forward ref. edges	WITHOUT_CLASSIFICATION	0.9999361560277658	WITHOUT_CLASSIFICATION	6.384397223425867E-5	IMPLEMENTATION
// currBB cannot be null!	WITHOUT_CLASSIFICATION	0.9999186876931664	WITHOUT_CLASSIFICATION	8.131230683353653E-5	IMPLEMENTATION
// Add a forward reference from tgt -> currBB	WITHOUT_CLASSIFICATION	0.9999675702921	WITHOUT_CLASSIFICATION	3.2429707899933575E-5	IMPLEMENTATION
// root-level logic	WITHOUT_CLASSIFICATION	0.9998996421829189	WITHOUT_CLASSIFICATION	1.0035781708097871E-4	IMPLEMENTATION
// root-level methods	WITHOUT_CLASSIFICATION	0.9999319123945999	WITHOUT_CLASSIFICATION	6.808760540015964E-5	IMPLEMENTATION
// root-level classes	WITHOUT_CLASSIFICATION	0.9999416790713278	WITHOUT_CLASSIFICATION	5.832092867215465E-5	IMPLEMENTATION
//        case 4: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); //            break; //        case 5: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); //            break;	WITHOUT_CLASSIFICATION	0.9999858603632257	WITHOUT_CLASSIFICATION	1.413963677432563E-5	IMPLEMENTATION
// load receiver	WITHOUT_CLASSIFICATION	0.9998914052010207	WITHOUT_CLASSIFICATION	1.0859479897921765E-4	IMPLEMENTATION
// load receiver	WITHOUT_CLASSIFICATION	0.9998914052010207	WITHOUT_CLASSIFICATION	1.0859479897921765E-4	IMPLEMENTATION
// receiver	WITHOUT_CLASSIFICATION	0.9998525737390909	WITHOUT_CLASSIFICATION	1.4742626090918427E-4	IMPLEMENTATION
// load arguments	WITHOUT_CLASSIFICATION	0.9999141134654959	WITHOUT_CLASSIFICATION	8.588653450422675E-5	IMPLEMENTATION
// load arguments	WITHOUT_CLASSIFICATION	0.9999141134654959	WITHOUT_CLASSIFICATION	8.588653450422675E-5	IMPLEMENTATION
//        case 4: //        case 5:	WITHOUT_CLASSIFICATION	0.9999583106350773	WITHOUT_CLASSIFICATION	4.168936492258811E-5	IMPLEMENTATION
// Object[] args	WITHOUT_CLASSIFICATION	0.9998811604358749	WITHOUT_CLASSIFICATION	1.1883956412508267E-4	IMPLEMENTATION
// load handle	WITHOUT_CLASSIFICATION	0.9998838792266403	WITHOUT_CLASSIFICATION	1.1612077335969203E-4	IMPLEMENTATION
// args array	WITHOUT_CLASSIFICATION	0.9998567806107275	WITHOUT_CLASSIFICATION	1.4321938927252945E-4	IMPLEMENTATION
// i'th argument	WITHOUT_CLASSIFICATION	0.9998669012313655	WITHOUT_CLASSIFICATION	1.3309876863448644E-4	IMPLEMENTATION
// invoke specific arity version	WITHOUT_CLASSIFICATION	0.9999192822358239	WITHOUT_CLASSIFICATION	8.071776417607888E-5	IMPLEMENTATION
// Object arg0	WITHOUT_CLASSIFICATION	0.9998784816559179	WITHOUT_CLASSIFICATION	1.2151834408208986E-4	IMPLEMENTATION
// useful for code completion inside the IRB	WITHOUT_CLASSIFICATION	0.9999049781460496	WITHOUT_CLASSIFICATION	9.502185395029577E-5	IMPLEMENTATION
// No editing before startPos	WITHOUT_CLASSIFICATION	0.9999148711987731	WITHOUT_CLASSIFICATION	8.512880122691438E-5	IMPLEMENTATION
// no silly ticks!	WITHOUT_CLASSIFICATION	0.9998847098571205	WITHOUT_CLASSIFICATION	1.1529014287947061E-4	IMPLEMENTATION
// no candidates? Fail.	WITHOUT_CLASSIFICATION	0.9999067448714817	WITHOUT_CLASSIFICATION	9.325512851832752E-5	IMPLEMENTATION
// at end	WITHOUT_CLASSIFICATION	0.9958836221145816	WITHOUT_CLASSIFICATION	0.004116377885418409	IMPLEMENTATION
// undo check	WITHOUT_CLASSIFICATION	0.9998616808185461	WITHOUT_CLASSIFICATION	1.3831918145396262E-4	IMPLEMENTATION
// Explicit reference to these vars as symbols...	WITHOUT_CLASSIFICATION	0.9999512243300055	WITHOUT_CLASSIFICATION	4.877566999459889E-5	IMPLEMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9997127732378198	WITHOUT_CLASSIFICATION	2.8722676218025274E-4	IMPLEMENTATION
//\t\n\"\\'`@$><=;|&{(	WITHOUT_CLASSIFICATION	0.9998679022243461	WITHOUT_CLASSIFICATION	1.320977756538609E-4	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999424102813822	WITHOUT_CLASSIFICATION	5.758971861769761E-5	IMPLEMENTATION
// no check for '*'	WITHOUT_CLASSIFICATION	0.999940278573152	WITHOUT_CLASSIFICATION	5.972142684788929E-5	IMPLEMENTATION
// no check for '*'	WITHOUT_CLASSIFICATION	0.999940278573152	WITHOUT_CLASSIFICATION	5.972142684788929E-5	IMPLEMENTATION
// Binding provided for scope, use it	WITHOUT_CLASSIFICATION	0.9999158796051097	WITHOUT_CLASSIFICATION	8.412039489026224E-5	IMPLEMENTATION
// this is ensured by the callers	WITHOUT_CLASSIFICATION	0.9999761340455244	WITHOUT_CLASSIFICATION	2.386595447560627E-5	IMPLEMENTATION
// no binding, just eval in "current" frame (caller's frame)	WITHOUT_CLASSIFICATION	0.999934212025704	WITHOUT_CLASSIFICATION	6.578797429606296E-5	IMPLEMENTATION
// restore position	WITHOUT_CLASSIFICATION	0.9999282378118012	WITHOUT_CLASSIFICATION	7.1762188198814E-5	IMPLEMENTATION
/* Something like cvar_cbase() from eval.c, factored out for the benefit     * of all the classvar-related node evaluations */	WITHOUT_CLASSIFICATION	0.999963340836513	WITHOUT_CLASSIFICATION	3.665916348713984E-5	IMPLEMENTATION
// Used by the compiler to simplify arg processing	WITHOUT_CLASSIFICATION	0.9999716321131572	WITHOUT_CLASSIFICATION	2.836788684271845E-5	IMPLEMENTATION
// JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace	WITHOUT_CLASSIFICATION	0.9999470958483633	WITHOUT_CLASSIFICATION	5.2904151636719207E-5	IMPLEMENTATION
// MRI does similar thing on MacOS X with 'EditLine wrapper'.	WITHOUT_CLASSIFICATION	0.9998972661728802	WITHOUT_CLASSIFICATION	1.027338271197438E-4	IMPLEMENTATION
// We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)	WITHOUT_CLASSIFICATION	0.9999732299590904	WITHOUT_CLASSIFICATION	2.6770040909542148E-5	IMPLEMENTATION
// JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)	WITHOUT_CLASSIFICATION	0.9999502465926722	WITHOUT_CLASSIFICATION	4.975340732783469E-5	IMPLEMENTATION
// not overridden, let's go	WITHOUT_CLASSIFICATION	0.9996738778763574	WITHOUT_CLASSIFICATION	3.2612212364252144E-4	IMPLEMENTATION
/* Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8() */	WITHOUT_CLASSIFICATION	0.9999000782629215	WITHOUT_CLASSIFICATION	9.992173707842357E-5	IMPLEMENTATION
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9994080547512612	WITHOUT_CLASSIFICATION	5.919452487388822E-4	IMPLEMENTATION
// Complete using a Proc object	WITHOUT_CLASSIFICATION	0.9999137027198928	WITHOUT_CLASSIFICATION	8.629728010717307E-5	IMPLEMENTATION
// clear basename so it's anonymous when raising	WITHOUT_CLASSIFICATION	0.9999412311376302	WITHOUT_CLASSIFICATION	5.8768862369793756E-5	IMPLEMENTATION
// These are not really used by timeout, but exposed for compatibility	WITHOUT_CLASSIFICATION	0.999977485008867	WITHOUT_CLASSIFICATION	2.2514991132992358E-5	IMPLEMENTATION
// Timeout module methods	WITHOUT_CLASSIFICATION	0.999903102416268	WITHOUT_CLASSIFICATION	9.689758373201611E-5	IMPLEMENTATION
// Toplevel defines	WITHOUT_CLASSIFICATION	0.9998573973983371	WITHOUT_CLASSIFICATION	1.4260260166281592E-4	IMPLEMENTATION
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999246469705202	WITHOUT_CLASSIFICATION	7.535302947981699E-5	IMPLEMENTATION
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999056886520904	WITHOUT_CLASSIFICATION	9.43113479095433E-5	IMPLEMENTATION
// if it's the exception we're expecting	WITHOUT_CLASSIFICATION	0.9999064683617163	WITHOUT_CLASSIFICATION	9.353163828373118E-5	IMPLEMENTATION
// and we were given a specific exception	WITHOUT_CLASSIFICATION	0.9999212449266919	WITHOUT_CLASSIFICATION	7.875507330815778E-5	IMPLEMENTATION
// otherwise, rethrow	WITHOUT_CLASSIFICATION	0.9999065253005609	WITHOUT_CLASSIFICATION	9.347469943913402E-5	IMPLEMENTATION
// // Remove the Executor task now, to avoid cancelled tasks accumulating // until an Executor thread can schedule and remove them //	WITHOUT_CLASSIFICATION	0.9999734902167495	WITHOUT_CLASSIFICATION	2.6509783250433753E-5	IMPLEMENTATION
// // If the task was scheduled, wait for it to finish before polling // for the exception it would have thrown. //	WITHOUT_CLASSIFICATION	0.9999499896877095	WITHOUT_CLASSIFICATION	5.0010312290541406E-5	IMPLEMENTATION
// NetProtocolBufferedIO	WITHOUT_CLASSIFICATION	0.9998813937190593	WITHOUT_CLASSIFICATION	1.1860628094068637E-4	IMPLEMENTATION
/* When a length is given, read_string acts like get_bytes */	WITHOUT_CLASSIFICATION	0.9999139056164181	WITHOUT_CLASSIFICATION	8.609438358189949E-5	IMPLEMENTATION
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9999341753943427	WITHOUT_CLASSIFICATION	6.582460565723068E-5	IMPLEMENTATION
// ARRAY and STRUCT are only used internally	WITHOUT_CLASSIFICATION	0.9999145223677091	WITHOUT_CLASSIFICATION	8.547763229093757E-5	IMPLEMENTATION
// If no release method is defined, then memory leaks will result.	WITHOUT_CLASSIFICATION	0.9999177202502056	WITHOUT_CLASSIFICATION	8.227974979441186E-5	IMPLEMENTATION
/*     * This variant of newStruct is called from StructLayoutBuilder     */	WITHOUT_CLASSIFICATION	0.999965247376949	WITHOUT_CLASSIFICATION	3.475262305094793E-5	IMPLEMENTATION
// This also handles unsigned int -> negative signed int conversion	WITHOUT_CLASSIFICATION	0.999959731626108	WITHOUT_CLASSIFICATION	4.0268373891944404E-5	IMPLEMENTATION
// Windows is LLP64	WITHOUT_CLASSIFICATION	0.9998511095148775	WITHOUT_CLASSIFICATION	1.488904851224479E-4	IMPLEMENTATION
// Older JDK on linux map 'c' to 'libc.so' which doesn't work	WITHOUT_CLASSIFICATION	0.9999367096578528	WITHOUT_CLASSIFICATION	6.329034214719712E-5	IMPLEMENTATION
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999011641603488	WITHOUT_CLASSIFICATION	9.883583965112391E-5	IMPLEMENTATION
// $blah	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9999341753943427	WITHOUT_CLASSIFICATION	6.582460565723068E-5	IMPLEMENTATION
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999461807105067	WITHOUT_CLASSIFICATION	5.3819289493325986E-5	IMPLEMENTATION
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999011641603488	WITHOUT_CLASSIFICATION	9.883583965112391E-5	IMPLEMENTATION
// // Keep a reference to the temporary memory in the cache so it does // not get freed by the GC until the struct is freed //	WITHOUT_CLASSIFICATION	0.999983326306578	WITHOUT_CLASSIFICATION	1.667369342199755E-5	IMPLEMENTATION
// Add Pointer::NULL as a constant	WITHOUT_CLASSIFICATION	0.9999479572174095	WITHOUT_CLASSIFICATION	5.204278259052817E-5	IMPLEMENTATION
// Create the ordered list of field names from the map	WITHOUT_CLASSIFICATION	0.9999895022471237	WITHOUT_CLASSIFICATION	1.0497752876251159E-5	IMPLEMENTATION
// Assemble a [ :name, offset ] array	WITHOUT_CLASSIFICATION	0.9998987338251154	WITHOUT_CLASSIFICATION	1.0126617488457076E-4	IMPLEMENTATION
//                case FLOAT:	WITHOUT_CLASSIFICATION	0.9999556391225142	WITHOUT_CLASSIFICATION	4.436087748581544E-5	IMPLEMENTATION
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999566275417368	WITHOUT_CLASSIFICATION	4.3372458263118266E-5	IMPLEMENTATION
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999566275417368	WITHOUT_CLASSIFICATION	4.3372458263118266E-5	IMPLEMENTATION
// No auto cleanup needed	WITHOUT_CLASSIFICATION	0.9984173316292131	WITHOUT_CLASSIFICATION	0.0015826683707868751	IMPLEMENTATION
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.999778684220316	WITHOUT_CLASSIFICATION	2.21315779683948E-4	IMPLEMENTATION
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999872578191025	WITHOUT_CLASSIFICATION	1.2742180897482082E-5	IMPLEMENTATION
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999872578191025	WITHOUT_CLASSIFICATION	1.2742180897482082E-5	IMPLEMENTATION
/*         * If there is exactly _one_ callback argument to the function,         * then a block can be given and automatically subsituted for the callback         * parameter.         */	WITHOUT_CLASSIFICATION	0.999999524259232	WITHOUT_CLASSIFICATION	4.757407680017631E-7	IMPLEMENTATION
/*------------------------------------------------------------------------*/	WITHOUT_CLASSIFICATION	0.9999211465984837	WITHOUT_CLASSIFICATION	7.885340151630299E-5	IMPLEMENTATION
//AF_INET	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
//AF_INET	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
// RubyUNIXServer	WITHOUT_CLASSIFICATION	0.9998425649193593	WITHOUT_CLASSIFICATION	1.5743508064057892E-4	IMPLEMENTATION
// line 321	WITHOUT_CLASSIFICATION	0.9998871047884604	WITHOUT_CLASSIFICATION	1.1289521153963082E-4	IMPLEMENTATION
// // Set up for potentially fast-int operations //	WITHOUT_CLASSIFICATION	0.9999538011864407	WITHOUT_CLASSIFICATION	4.619881355933038E-5	IMPLEMENTATION
// // Hook up the MemoryPointer class if its not already there //	WITHOUT_CLASSIFICATION	0.9999815985900313	WITHOUT_CLASSIFICATION	1.8401409968646852E-5	IMPLEMENTATION
// This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and // (2) Socket.getChannel() seems to return null in some cases	WITHOUT_CLASSIFICATION	0.9999909022375529	WITHOUT_CLASSIFICATION	9.09776244714457E-6	IMPLEMENTATION
// no UNIXSockets on Windows	WITHOUT_CLASSIFICATION	0.9999087470974508	WITHOUT_CLASSIFICATION	9.12529025492217E-5	IMPLEMENTATION
// Sockaddr_un has different structure on different platforms. // See JRUBY-2213 for more details.	WITHOUT_CLASSIFICATION	0.9999251626563924	WITHOUT_CLASSIFICATION	7.48373436076196E-5	IMPLEMENTATION
// There is something valid in the sun_path component	WITHOUT_CLASSIFICATION	0.9999868365564692	WITHOUT_CLASSIFICATION	1.316344353078608E-5	IMPLEMENTATION
// RubyIPSocket	WITHOUT_CLASSIFICATION	0.9998415686846777	WITHOUT_CLASSIFICATION	1.5843131532233462E-4	IMPLEMENTATION
// host is nil or the empty string, bind to INADDR_ANY	WITHOUT_CLASSIFICATION	0.9999730613269372	WITHOUT_CLASSIFICATION	2.6938673062875445E-5	IMPLEMENTATION
// host and port given	WITHOUT_CLASSIFICATION	0.9998750871489533	WITHOUT_CLASSIFICATION	1.2491285104657517E-4	IMPLEMENTATION
// RubyUDPSocket	WITHOUT_CLASSIFICATION	0.9998415686846777	WITHOUT_CLASSIFICATION	1.5843131532233462E-4	IMPLEMENTATION
// By default we always reverse lookup unless do_not_reverse_lookup set.	WITHOUT_CLASSIFICATION	0.9999563190335478	WITHOUT_CLASSIFICATION	4.368096645221126E-5	IMPLEMENTATION
// make sure descriptor is registered	WITHOUT_CLASSIFICATION	0.9999712537229423	WITHOUT_CLASSIFICATION	2.8746277057815257E-5	IMPLEMENTATION
// continue with normal initialization	WITHOUT_CLASSIFICATION	0.9999732058502317	WITHOUT_CLASSIFICATION	2.6794149768297578E-5	IMPLEMENTATION
// recv returns nil on EOF	WITHOUT_CLASSIFICATION	0.9999163116929369	WITHOUT_CLASSIFICATION	8.368830706305482E-5	IMPLEMENTATION
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9998690037778631	WITHOUT_CLASSIFICATION	1.309962221368787E-4	IMPLEMENTATION
// RubyBasicSocket	WITHOUT_CLASSIFICATION	0.9998416375866352	WITHOUT_CLASSIFICATION	1.583624133648735E-4	IMPLEMENTATION
// we don't have to define any that we don't support; see socket.c	WITHOUT_CLASSIFICATION	0.9999706740581153	WITHOUT_CLASSIFICATION	2.932594188462332E-5	IMPLEMENTATION
// mandatory constants we haven't implemented	WITHOUT_CLASSIFICATION	0.916637893243433	WITHOUT_CLASSIFICATION	0.08336210675656697	IMPLEMENTATION
// constants webrick crashes without	WITHOUT_CLASSIFICATION	0.9999236455430025	WITHOUT_CLASSIFICATION	7.635445699755546E-5	IMPLEMENTATION
// More constants needed by specs	WITHOUT_CLASSIFICATION	0.9998958719200037	WITHOUT_CLASSIFICATION	1.0412807999624322E-4	IMPLEMENTATION
// normal file descriptor..try to work with it	WITHOUT_CLASSIFICATION	0.9999257927451359	WITHOUT_CLASSIFICATION	7.420725486411396E-5	IMPLEMENTATION
// AF_INET	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
// 255.255.255.255	WITHOUT_CLASSIFICATION	0.9998415686846777	WITHOUT_CLASSIFICATION	1.5843131532233462E-4	IMPLEMENTATION
// 0.0.0.0	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
//def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)	WITHOUT_CLASSIFICATION	0.9998776329504586	WITHOUT_CLASSIFICATION	1.2236704954145423E-4	IMPLEMENTATION
// line 323	WITHOUT_CLASSIFICATION	0.9998871047884604	WITHOUT_CLASSIFICATION	1.1289521153963082E-4	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999409857539188	WITHOUT_CLASSIFICATION	5.9014246081135505E-5	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999409857539188	WITHOUT_CLASSIFICATION	5.9014246081135505E-5	IMPLEMENTATION
// ok, it's a socket...set values accordingly // just using AF_INET since we can't tell from SocketChannel...	WITHOUT_CLASSIFICATION	0.999951751102634	WITHOUT_CLASSIFICATION	4.824889736598885E-5	IMPLEMENTATION
// datagram, set accordingly // again, AF_INET	WITHOUT_CLASSIFICATION	0.9999515135547213	WITHOUT_CLASSIFICATION	4.8486445278657E-5	IMPLEMENTATION
//IRubyObject family = args[2];	WITHOUT_CLASSIFICATION	0.9998873770687742	WITHOUT_CLASSIFICATION	1.1262293122573028E-4	IMPLEMENTATION
// When Socket::AI_PASSIVE and host is nil, return 'any' address. 	WITHOUT_CLASSIFICATION	0.9999290484013156	WITHOUT_CLASSIFICATION	7.095159868445031E-5	IMPLEMENTATION
// The value of 1 is for Socket::AI_PASSIVE.	WITHOUT_CLASSIFICATION	0.9999638725126067	WITHOUT_CLASSIFICATION	3.612748739337468E-5	IMPLEMENTATION
// RubySocket	WITHOUT_CLASSIFICATION	0.9998415686846777	WITHOUT_CLASSIFICATION	1.5843131532233462E-4	IMPLEMENTATION
// numeric host, use it for port	WITHOUT_CLASSIFICATION	0.9999042153598111	WITHOUT_CLASSIFICATION	9.578464018898238E-5	IMPLEMENTATION
//            e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999634997929457	WITHOUT_CLASSIFICATION	3.650020705437127E-5	IMPLEMENTATION
// we were woken up without being selected...poll for thread events and go back to sleep	WITHOUT_CLASSIFICATION	0.9999783325490644	WITHOUT_CLASSIFICATION	2.1667450935520228E-5	IMPLEMENTATION
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999854424096474	WITHOUT_CLASSIFICATION	1.4557590352741684E-5	IMPLEMENTATION
// no connection immediately accepted, let them try again	WITHOUT_CLASSIFICATION	0.9999225549430419	WITHOUT_CLASSIFICATION	7.74450569580706E-5	IMPLEMENTATION
// do nothing, just exit	WITHOUT_CLASSIFICATION	0.9999794397626285	WITHOUT_CLASSIFICATION	2.0560237371486385E-5	IMPLEMENTATION
//nativeThread.setPriority(priority);	WITHOUT_CLASSIFICATION	0.9998566278924751	WITHOUT_CLASSIFICATION	1.4337210752500402E-4	IMPLEMENTATION
// set thread context JRuby classloader here, for Ruby-owned thread	WITHOUT_CLASSIFICATION	0.999949126807655	WITHOUT_CLASSIFICATION	5.087319234499705E-5	IMPLEMENTATION
// uber-ThreadKill catcher, since it should always just mean "be dead"	WITHOUT_CLASSIFICATION	0.9997456502053468	WITHOUT_CLASSIFICATION	2.5434979465326237E-4	IMPLEMENTATION
// Call the thread's code	WITHOUT_CLASSIFICATION	0.9999069785709545	WITHOUT_CLASSIFICATION	9.30214290455079E-5	IMPLEMENTATION
// Someone called exit!, so we need to kill the main thread	WITHOUT_CLASSIFICATION	0.9998518692243259	WITHOUT_CLASSIFICATION	1.4813077567401222E-4	IMPLEMENTATION
// restore context classloader, in case we're using a thread pool	WITHOUT_CLASSIFICATION	0.9999652578078215	WITHOUT_CLASSIFICATION	3.4742192178344514E-5	IMPLEMENTATION
// be dead	WITHOUT_CLASSIFICATION	0.9958409803212819	WITHOUT_CLASSIFICATION	0.004159019678718182	IMPLEMENTATION
// loop until a context is available, to clean up softrefs that might have been collected	WITHOUT_CLASSIFICATION	0.9999476974632402	WITHOUT_CLASSIFICATION	5.2302536759805055E-5	IMPLEMENTATION
// all threads in ruby thread group plus main thread	WITHOUT_CLASSIFICATION	0.9998971101203853	WITHOUT_CLASSIFICATION	1.0288987961475504E-4	IMPLEMENTATION
// thread is not alive, skip it	WITHOUT_CLASSIFICATION	0.9999341373685632	WITHOUT_CLASSIFICATION	6.586263143685068E-5	IMPLEMENTATION
// future is done or cancelled, skip it	WITHOUT_CLASSIFICATION	0.9999202442381392	WITHOUT_CLASSIFICATION	7.975576186083479E-5	IMPLEMENTATION
// first, check if the sender has unreceived mail	WITHOUT_CLASSIFICATION	0.9999682691105334	WITHOUT_CLASSIFICATION	3.173088946666908E-5	IMPLEMENTATION
// then deliver mail to the target	WITHOUT_CLASSIFICATION	0.9999589877722195	WITHOUT_CLASSIFICATION	4.101222778046568E-5	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9998871062863063	WITHOUT_CLASSIFICATION	1.1289371369368253E-4	IMPLEMENTATION
// Define a second version that doesn't take a block, so we have unique code paths for both cases.	WITHOUT_CLASSIFICATION	0.9999483981525868	WITHOUT_CLASSIFICATION	5.1601847413192585E-5	IMPLEMENTATION
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9998225289835034	WITHOUT_CLASSIFICATION	1.774710164965197E-4	IMPLEMENTATION
// main body	WITHOUT_CLASSIFICATION	0.9998465433016871	WITHOUT_CLASSIFICATION	1.5345669831289625E-4	IMPLEMENTATION
// return jump handling	WITHOUT_CLASSIFICATION	0.9999750068549847	WITHOUT_CLASSIFICATION	2.499314501521535E-5	IMPLEMENTATION
// finally	WITHOUT_CLASSIFICATION	0.9965773329960974	WITHOUT_CLASSIFICATION	0.0034226670039026715	IMPLEMENTATION
// return result if we're still good	WITHOUT_CLASSIFICATION	0.9999864283782428	WITHOUT_CLASSIFICATION	1.3571621757157728E-5	IMPLEMENTATION
// redo jump handling	WITHOUT_CLASSIFICATION	0.9998607796306536	WITHOUT_CLASSIFICATION	1.3922036934643114E-4	IMPLEMENTATION
// clear the redo	WITHOUT_CLASSIFICATION	0.9999389751405707	WITHOUT_CLASSIFICATION	6.102485942922863E-5	IMPLEMENTATION
// get runtime, create jump error, and throw it	WITHOUT_CLASSIFICATION	0.9999638760418222	WITHOUT_CLASSIFICATION	3.612395817777947E-5	IMPLEMENTATION
// throw redo error if we're still good	WITHOUT_CLASSIFICATION	0.9999085497016984	WITHOUT_CLASSIFICATION	9.145029830154407E-5	IMPLEMENTATION
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9998886086980525	WITHOUT_CLASSIFICATION	1.1139130194749826E-4	IMPLEMENTATION
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9998522129423314	WITHOUT_CLASSIFICATION	1.477870576685079E-4	IMPLEMENTATION
// No required specified, check actual number of required args	WITHOUT_CLASSIFICATION	0.9999663387906752	WITHOUT_CLASSIFICATION	3.366120932488045E-5	IMPLEMENTATION
// actual required is less than 3, so we use specific arity	WITHOUT_CLASSIFICATION	0.9999327919388513	WITHOUT_CLASSIFICATION	6.720806114862814E-5	IMPLEMENTATION
// actual required is greater than 3, raise error (we don't support actual required > 3)	WITHOUT_CLASSIFICATION	0.9998892625111048	WITHOUT_CLASSIFICATION	1.1073748889524335E-4	IMPLEMENTATION
// simple path, no multimethod	WITHOUT_CLASSIFICATION	0.9998968710144924	WITHOUT_CLASSIFICATION	1.0312898550757368E-4	IMPLEMENTATION
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9998300175634526	WITHOUT_CLASSIFICATION	1.6998243654748875E-4	IMPLEMENTATION
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9998300175634526	WITHOUT_CLASSIFICATION	1.6998243654748875E-4	IMPLEMENTATION
// normal all-rest method	WITHOUT_CLASSIFICATION	0.9998986781874446	WITHOUT_CLASSIFICATION	1.0132181255534045E-4	IMPLEMENTATION
// for zero, one, two, three arities, JavaMethod.JavaMethod*.call(...IRubyObject[] args...) will check	WITHOUT_CLASSIFICATION	0.999929813136899	WITHOUT_CLASSIFICATION	7.018686310094291E-5	IMPLEMENTATION
// promise to implement zero to N	WITHOUT_CLASSIFICATION	0.9867494229281653	WITHOUT_CLASSIFICATION	0.013250577071834883	IMPLEMENTATION
// return	WITHOUT_CLASSIFICATION	0.9993769888143426	WITHOUT_CLASSIFICATION	6.230111856574592E-4	IMPLEMENTATION
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999131035691167	WITHOUT_CLASSIFICATION	8.68964308833365E-5	IMPLEMENTATION
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.999917849472543	WITHOUT_CLASSIFICATION	8.215052745695522E-5	IMPLEMENTATION
// confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999084979598756	WITHOUT_CLASSIFICATION	9.15020401243304E-5	IMPLEMENTATION
// confirm maximum not greater than optional	WITHOUT_CLASSIFICATION	0.9999506714602704	WITHOUT_CLASSIFICATION	4.932853972974652E-5	IMPLEMENTATION
// Raise an error if arity does not match requirements	WITHOUT_CLASSIFICATION	0.9999440050032433	WITHOUT_CLASSIFICATION	5.599499675659823E-5	IMPLEMENTATION
// tc	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
// self // name	WITHOUT_CLASSIFICATION	0.9998935080811665	WITHOUT_CLASSIFICATION	1.064919188334729E-4	IMPLEMENTATION
// no args	WITHOUT_CLASSIFICATION	0.9969461478697718	WITHOUT_CLASSIFICATION	0.003053852130228264	IMPLEMENTATION
// variable args with block	WITHOUT_CLASSIFICATION	0.999872272729307	WITHOUT_CLASSIFICATION	1.2772727069304237E-4	IMPLEMENTATION
// variable args no block, load null block	WITHOUT_CLASSIFICATION	0.9998867956753006	WITHOUT_CLASSIFICATION	1.132043246994355E-4	IMPLEMENTATION
// zero args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9998770681761119	WITHOUT_CLASSIFICATION	1.2293182388812185E-4	IMPLEMENTATION
// one arg with block	WITHOUT_CLASSIFICATION	0.9998642566822044	WITHOUT_CLASSIFICATION	1.357433177955847E-4	IMPLEMENTATION
// one arg, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9998784965376771	WITHOUT_CLASSIFICATION	1.2150346232295164E-4	IMPLEMENTATION
// two args with block	WITHOUT_CLASSIFICATION	0.9998721343974902	WITHOUT_CLASSIFICATION	1.278656025097743E-4	IMPLEMENTATION
// two args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9998770886281374	WITHOUT_CLASSIFICATION	1.229113718625957E-4	IMPLEMENTATION
// three args with block	WITHOUT_CLASSIFICATION	0.9998755089665918	WITHOUT_CLASSIFICATION	1.2449103340810542E-4	IMPLEMENTATION
// three args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9998803324631523	WITHOUT_CLASSIFICATION	1.1966753684758885E-4	IMPLEMENTATION
// load block if it accepts block	WITHOUT_CLASSIFICATION	0.9999100313684518	WITHOUT_CLASSIFICATION	8.996863154822992E-5	IMPLEMENTATION
// all other arg cases with block	WITHOUT_CLASSIFICATION	0.9998673533496445	WITHOUT_CLASSIFICATION	1.3264665035554033E-4	IMPLEMENTATION
// all other arg cases without block	WITHOUT_CLASSIFICATION	0.9998785435100379	WITHOUT_CLASSIFICATION	1.2145648996216449E-4	IMPLEMENTATION
// one arg, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999688420980155	WITHOUT_CLASSIFICATION	3.115790198440704E-5	IMPLEMENTATION
// two args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999684810258598	WITHOUT_CLASSIFICATION	3.1518974140293874E-5	IMPLEMENTATION
// three args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999693129379038	WITHOUT_CLASSIFICATION	3.0687062096146157E-5	IMPLEMENTATION
// load target for invocations	WITHOUT_CLASSIFICATION	0.9999474263186672	WITHOUT_CLASSIFICATION	5.2573681332850056E-5	IMPLEMENTATION
// load receiver as original type for virtual invocation	WITHOUT_CLASSIFICATION	0.9999506123044211	WITHOUT_CLASSIFICATION	4.938769557894585E-5	IMPLEMENTATION
// static invocation	WITHOUT_CLASSIFICATION	0.9999179295794051	WITHOUT_CLASSIFICATION	8.20704205949927E-5	IMPLEMENTATION
// virtual invocation	WITHOUT_CLASSIFICATION	0.9998896336951926	WITHOUT_CLASSIFICATION	1.1036630480742125E-4	IMPLEMENTATION
// void return type, so we need to load a nil for returning below	WITHOUT_CLASSIFICATION	0.9999151081855573	WITHOUT_CLASSIFICATION	8.489181444267751E-5	IMPLEMENTATION
// normal finally and exit	WITHOUT_CLASSIFICATION	0.9998953171173878	WITHOUT_CLASSIFICATION	1.0468288261224056E-4	IMPLEMENTATION
// promise to implement one to N	WITHOUT_CLASSIFICATION	0.984615591139994	WITHOUT_CLASSIFICATION	0.015384408860005905	IMPLEMENTATION
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9998522129423314	WITHOUT_CLASSIFICATION	1.477870576685079E-4	IMPLEMENTATION
// these are only needed if we have a non-noop call config	WITHOUT_CLASSIFICATION	0.999968734020022	WITHOUT_CLASSIFICATION	3.1265979978103365E-5	IMPLEMENTATION
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999302070793777	WITHOUT_CLASSIFICATION	6.979292062233685E-5	IMPLEMENTATION
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999302070793777	WITHOUT_CLASSIFICATION	6.979292062233685E-5	IMPLEMENTATION
// singleton classes don't get their own visibility domain	WITHOUT_CLASSIFICATION	0.9999747728722637	WITHOUT_CLASSIFICATION	2.522712773633614E-5	IMPLEMENTATION
// For visibility we need real meta class and not anonymous one from class << self	WITHOUT_CLASSIFICATION	0.9999668393192452	WITHOUT_CLASSIFICATION	3.316068075481964E-5	IMPLEMENTATION
// SimpleInvocationMethod	WITHOUT_CLASSIFICATION	0.9998879570970074	WITHOUT_CLASSIFICATION	1.120429029925683E-4	IMPLEMENTATION
// never reached	WITHOUT_CLASSIFICATION	0.9998442717489511	WITHOUT_CLASSIFICATION	1.5572825104899566E-4	IMPLEMENTATION
// promise to implement N with block	WITHOUT_CLASSIFICATION	0.9861674438404042	WITHOUT_CLASSIFICATION	0.013832556159595732	IMPLEMENTATION
// promise to implement zero to N with block	WITHOUT_CLASSIFICATION	0.9864475383542859	WITHOUT_CLASSIFICATION	0.013552461645714104	IMPLEMENTATION
// promise to implement one to N with block	WITHOUT_CLASSIFICATION	0.9842658671911293	WITHOUT_CLASSIFICATION	0.01573413280887068	IMPLEMENTATION
// promise to implement two to N with block	WITHOUT_CLASSIFICATION	0.9824903467958876	WITHOUT_CLASSIFICATION	0.017509653204112307	IMPLEMENTATION
// promise to implement zero to three with block	WITHOUT_CLASSIFICATION	0.988089689928339	WITHOUT_CLASSIFICATION	0.01191031007166102	IMPLEMENTATION
// promise to implement one to three with block	WITHOUT_CLASSIFICATION	0.9858866764652754	WITHOUT_CLASSIFICATION	0.014113323534724526	IMPLEMENTATION
// promise to implement two to three with block	WITHOUT_CLASSIFICATION	0.9846045077641788	WITHOUT_CLASSIFICATION	0.015395492235821245	IMPLEMENTATION
// promise to implement three with block	WITHOUT_CLASSIFICATION	0.9781332256424011	WITHOUT_CLASSIFICATION	0.021866774357598893	IMPLEMENTATION
// promise to implement N	WITHOUT_CLASSIFICATION	0.9862364022628703	WITHOUT_CLASSIFICATION	0.013763597737129525	IMPLEMENTATION
// DumpingInvocationMethodFactory	WITHOUT_CLASSIFICATION	0.9999027344982178	WITHOUT_CLASSIFICATION	9.726550178232475E-5	IMPLEMENTATION
// We promote our box to being its own box since we're changing // visibilities, and need it to be reflected on this method object // independent of any other sharing the box.	WITHOUT_CLASSIFICATION	0.9999867739581004	WITHOUT_CLASSIFICATION	1.3226041899695153E-5	IMPLEMENTATION
// Normally we could leave these to fall back on the superclass, but // since it dispatches through the [] version below, which may // dispatch through the []+block version, we can save it a couple hops // by overriding these here.	WITHOUT_CLASSIFICATION	0.9999504132764573	WITHOUT_CLASSIFICATION	4.9586723542718364E-5	IMPLEMENTATION
// promise to implement two to N	WITHOUT_CLASSIFICATION	0.9828788489108016	WITHOUT_CLASSIFICATION	0.017121151089198372	IMPLEMENTATION
// promise to implement three to N	WITHOUT_CLASSIFICATION	0.9772586429347899	WITHOUT_CLASSIFICATION	0.022741357065210015	IMPLEMENTATION
// promise to implement zero to three	WITHOUT_CLASSIFICATION	0.9874138179735357	WITHOUT_CLASSIFICATION	0.01258618202646426	IMPLEMENTATION
// promise to implement one to three	WITHOUT_CLASSIFICATION	0.9850876772713306	WITHOUT_CLASSIFICATION	0.01491232272866932	IMPLEMENTATION
// promise to implement two to three	WITHOUT_CLASSIFICATION	0.9837341186102574	WITHOUT_CLASSIFICATION	0.016265881389742578	IMPLEMENTATION
// promise to implement three	WITHOUT_CLASSIFICATION	0.9764946356770452	WITHOUT_CLASSIFICATION	0.023505364322954865	IMPLEMENTATION
// all other arities use "n" dispatch path	WITHOUT_CLASSIFICATION	0.9998885441994578	WITHOUT_CLASSIFICATION	1.1145580054218928E-4	IMPLEMENTATION
// load up object and add a few useful methods	WITHOUT_CLASSIFICATION	0.9999659956833581	WITHOUT_CLASSIFICATION	3.400431664198165E-5	IMPLEMENTATION
// open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel	WITHOUT_CLASSIFICATION	0.9999484373773492	WITHOUT_CLASSIFICATION	5.1562622650889634E-5	IMPLEMENTATION
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.998451832729554	WITHOUT_CLASSIFICATION	0.0015481672704460317	IMPLEMENTATION
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9998663540278875	WITHOUT_CLASSIFICATION	1.3364597211260886E-4	IMPLEMENTATION
// create constructor	WITHOUT_CLASSIFICATION	0.999982569034753	WITHOUT_CLASSIFICATION	1.7430965246915394E-5	IMPLEMENTATION
// wrap self and store the wrapper	WITHOUT_CLASSIFICATION	0.9999252524768815	WITHOUT_CLASSIFICATION	7.474752311844715E-5	IMPLEMENTATION
// end constructor	WITHOUT_CLASSIFICATION	0.9999112833620398	WITHOUT_CLASSIFICATION	8.871663796019266E-5	IMPLEMENTATION
// start setup method	WITHOUT_CLASSIFICATION	0.9999482269136499	WITHOUT_CLASSIFICATION	5.1773086350091364E-5	IMPLEMENTATION
// set RubyClass	WITHOUT_CLASSIFICATION	0.9999146164811576	WITHOUT_CLASSIFICATION	8.538351884235385E-5	IMPLEMENTATION
// set Ruby	WITHOUT_CLASSIFICATION	0.9999145945217484	WITHOUT_CLASSIFICATION	8.540547825168316E-5	IMPLEMENTATION
// all methods dispatch to the simple version by default, which is method_missing normally	WITHOUT_CLASSIFICATION	0.9999829927782342	WITHOUT_CLASSIFICATION	1.700722176572273E-5	IMPLEMENTATION
// try specific name first, falling back on simple name	WITHOUT_CLASSIFICATION	0.999942064137007	WITHOUT_CLASSIFICATION	5.793586299303207E-5	IMPLEMENTATION
// get current context	WITHOUT_CLASSIFICATION	0.9999631297823947	WITHOUT_CLASSIFICATION	3.68702176054188E-5	IMPLEMENTATION
// load self, class, and name	WITHOUT_CLASSIFICATION	0.999935364585016	WITHOUT_CLASSIFICATION	6.463541498403796E-5	IMPLEMENTATION
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.998451832729554	WITHOUT_CLASSIFICATION	0.0015481672704460317	IMPLEMENTATION
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9998663540278875	WITHOUT_CLASSIFICATION	1.3364597211260886E-4	IMPLEMENTATION
// create constructor	WITHOUT_CLASSIFICATION	0.999982569034753	WITHOUT_CLASSIFICATION	1.7430965246915394E-5	IMPLEMENTATION
// end constructor	WITHOUT_CLASSIFICATION	0.9999112833620398	WITHOUT_CLASSIFICATION	8.871663796019266E-5	IMPLEMENTATION
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9975566421272886	WITHOUT_CLASSIFICATION	0.0024433578727113075	IMPLEMENTATION
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999451745528065	WITHOUT_CLASSIFICATION	5.482544719348734E-5	IMPLEMENTATION
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999378688768837	WITHOUT_CLASSIFICATION	6.21311231163085E-5	IMPLEMENTATION
// load null block	WITHOUT_CLASSIFICATION	0.9998971608771169	WITHOUT_CLASSIFICATION	1.0283912288307246E-4	IMPLEMENTATION
// invoke method	WITHOUT_CLASSIFICATION	0.9998912834421284	WITHOUT_CLASSIFICATION	1.0871655787149575E-4	IMPLEMENTATION
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.999933808237187	WITHOUT_CLASSIFICATION	6.619176281299097E-5	IMPLEMENTATION
// end setup method	WITHOUT_CLASSIFICATION	0.9999118673616715	WITHOUT_CLASSIFICATION	8.81326383284661E-5	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.9999541027420615	WITHOUT_CLASSIFICATION	4.5897257938473326E-5	IMPLEMENTATION
// create static init, for a monitor object	WITHOUT_CLASSIFICATION	0.9999857568045862	WITHOUT_CLASSIFICATION	1.4243195413810407E-5	IMPLEMENTATION
// store the wrapper	WITHOUT_CLASSIFICATION	0.9999271474405284	WITHOUT_CLASSIFICATION	7.285255947162994E-5	IMPLEMENTATION
// prepare temp locals	WITHOUT_CLASSIFICATION	0.9999062553759189	WITHOUT_CLASSIFICATION	9.374462408104673E-5	IMPLEMENTATION
// Try to look up field for simple name // get field; if nonnull, go straight to dispatch	WITHOUT_CLASSIFICATION	0.9999646659215047	WITHOUT_CLASSIFICATION	3.533407849529027E-5	IMPLEMENTATION
// field is null, lock class and try to populate	WITHOUT_CLASSIFICATION	0.999964660555149	WITHOUT_CLASSIFICATION	3.533944485098052E-5	IMPLEMENTATION
// try/finally block to ensure unlock	WITHOUT_CLASSIFICATION	0.9999019855182052	WITHOUT_CLASSIFICATION	9.801448179480938E-5	IMPLEMENTATION
// store it	WITHOUT_CLASSIFICATION	0.9998942975485761	WITHOUT_CLASSIFICATION	1.0570245142404498E-4	IMPLEMENTATION
// end of try block	WITHOUT_CLASSIFICATION	0.999926627692761	WITHOUT_CLASSIFICATION	7.337230723904097E-5	IMPLEMENTATION
// finally block to release monitor	WITHOUT_CLASSIFICATION	0.9999099680145004	WITHOUT_CLASSIFICATION	9.003198549966158E-5	IMPLEMENTATION
// exception handling for monitor release	WITHOUT_CLASSIFICATION	0.9999002127070805	WITHOUT_CLASSIFICATION	9.978729291950849E-5	IMPLEMENTATION
// re-get, re-check method; if not null now, go to dispatch	WITHOUT_CLASSIFICATION	0.9999021741781069	WITHOUT_CLASSIFICATION	9.782582189310881E-5	IMPLEMENTATION
// load self, class, and name	WITHOUT_CLASSIFICATION	0.999935364585016	WITHOUT_CLASSIFICATION	6.463541498403796E-5	IMPLEMENTATION
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999451745528065	WITHOUT_CLASSIFICATION	5.482544719348734E-5	IMPLEMENTATION
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999378688768837	WITHOUT_CLASSIFICATION	6.21311231163085E-5	IMPLEMENTATION
// invoke method	WITHOUT_CLASSIFICATION	0.9998912834421284	WITHOUT_CLASSIFICATION	1.0871655787149575E-4	IMPLEMENTATION
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.999933808237187	WITHOUT_CLASSIFICATION	6.619176281299097E-5	IMPLEMENTATION
// end setup method	WITHOUT_CLASSIFICATION	0.9999118673616715	WITHOUT_CLASSIFICATION	8.81326383284661E-5	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.9999541027420615	WITHOUT_CLASSIFICATION	4.5897257938473326E-5	IMPLEMENTATION
// create the class	WITHOUT_CLASSIFICATION	0.9999813577468952	WITHOUT_CLASSIFICATION	1.86422531046895E-5	IMPLEMENTATION
// method still not available, call method_missing	WITHOUT_CLASSIFICATION	0.9998908257140903	WITHOUT_CLASSIFICATION	1.0917428590983076E-4	IMPLEMENTATION
// perform the dispatch	WITHOUT_CLASSIFICATION	0.99993682533269	WITHOUT_CLASSIFICATION	6.31746673099404E-5	IMPLEMENTATION
// try to load the specified name; only if that fails, try to define the class	WITHOUT_CLASSIFICATION	0.9999939385690968	WITHOUT_CLASSIFICATION	6.061430903116052E-6	IMPLEMENTATION
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9998748192792671	WITHOUT_CLASSIFICATION	1.251807207328754E-4	IMPLEMENTATION
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9998748192792671	WITHOUT_CLASSIFICATION	1.251807207328754E-4	IMPLEMENTATION
// setup the class	WITHOUT_CLASSIFICATION	0.9999615664350198	WITHOUT_CLASSIFICATION	3.843356498027503E-5	IMPLEMENTATION
// now, create a method_added that can replace the DynamicMethod fields as they're redefined	WITHOUT_CLASSIFICATION	0.9999360571936479	WITHOUT_CLASSIFICATION	6.394280635216931E-5	IMPLEMENTATION
// do nothing, it's a non-impl method	WITHOUT_CLASSIFICATION	0.9999802472645776	WITHOUT_CLASSIFICATION	1.975273542244578E-5	IMPLEMENTATION
// probably a primitive	WITHOUT_CLASSIFICATION	0.9998924234366043	WITHOUT_CLASSIFICATION	1.0757656339571817E-4	IMPLEMENTATION
// interfaces are handled as modules	WITHOUT_CLASSIFICATION	0.9999505808613736	WITHOUT_CLASSIFICATION	4.9419138626392126E-5	IMPLEMENTATION
// construct the mirror class and parent classes	WITHOUT_CLASSIFICATION	0.9999842523100693	WITHOUT_CLASSIFICATION	1.5747689930798067E-5	IMPLEMENTATION
// set the full name	WITHOUT_CLASSIFICATION	0.9999284762921982	WITHOUT_CLASSIFICATION	7.152370780189069E-5	IMPLEMENTATION
// include all interfaces	WITHOUT_CLASSIFICATION	0.999950754207544	WITHOUT_CLASSIFICATION	4.924579245607254E-5	IMPLEMENTATION
// if it's an array, only add methods for aref, aset, and length	WITHOUT_CLASSIFICATION	0.9999580405218382	WITHOUT_CLASSIFICATION	4.195947816178703E-5	IMPLEMENTATION
// add array construction methods	WITHOUT_CLASSIFICATION	0.9999734651504564	WITHOUT_CLASSIFICATION	2.653484954362819E-5	IMPLEMENTATION
// add all public constructors (note: getConstructors only returns public ones)	WITHOUT_CLASSIFICATION	0.999982270762772	WITHOUT_CLASSIFICATION	1.772923722797471E-5	IMPLEMENTATION
// add all instance and static methods	WITHOUT_CLASSIFICATION	0.9999784635607304	WITHOUT_CLASSIFICATION	2.1536439269627805E-5	IMPLEMENTATION
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9998518942682937	WITHOUT_CLASSIFICATION	1.4810573170628605E-4	IMPLEMENTATION
// too much array creation!	WITHOUT_CLASSIFICATION	0.9999104784397314	WITHOUT_CLASSIFICATION	8.952156026870532E-5	IMPLEMENTATION
// only include static methods if specified	WITHOUT_CLASSIFICATION	0.999953900675575	WITHOUT_CLASSIFICATION	4.609932442513322E-5	IMPLEMENTATION
// add a few type-specific special methods	WITHOUT_CLASSIFICATION	0.9999728864374446	WITHOUT_CLASSIFICATION	2.711356255531087E-5	IMPLEMENTATION
// add all static variables	WITHOUT_CLASSIFICATION	0.9999561398856746	WITHOUT_CLASSIFICATION	4.3860114325395075E-5	IMPLEMENTATION
// only public static fields that are valid constants	WITHOUT_CLASSIFICATION	0.999959523731717	WITHOUT_CLASSIFICATION	4.047626828299284E-5	IMPLEMENTATION
// looks like someone's trying to raise a Java exception. Let them.	WITHOUT_CLASSIFICATION	0.9999442208151652	WITHOUT_CLASSIFICATION	5.577918483472971E-5	IMPLEMENTATION
// NOTE: The five match methods are arity-split to avoid the cost of boxing arguments // when there's already a cached match. Do not condense them into a single // method.	WITHOUT_CLASSIFICATION	0.9999924897396925	WITHOUT_CLASSIFICATION	7.510260307497983E-6	IMPLEMENTATION
// TODO: This is where we would want to do precision checks to see // if it's non-destructive to coerce a given type into the target // integral primitive	WITHOUT_CLASSIFICATION	0.5511204295016747	WITHOUT_CLASSIFICATION	0.44887957049832516	IMPLEMENTATION
// long first because it's what Fixnum claims to be	WITHOUT_CLASSIFICATION	0.9999690009960537	WITHOUT_CLASSIFICATION	3.0999003946390956E-5	IMPLEMENTATION
// double first because it's what float claims to be	WITHOUT_CLASSIFICATION	0.999986677333083	WITHOUT_CLASSIFICATION	1.3322666916993505E-5	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9333230184927425	WITHOUT_CLASSIFICATION	0.06667698150725745	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.999855109221339	WITHOUT_CLASSIFICATION	1.4489077866100251E-4	IMPLEMENTATION
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999828900008608	WITHOUT_CLASSIFICATION	1.7109999139234637E-5	IMPLEMENTATION
// we set all Java methods to optional, since many/most have overloads	WITHOUT_CLASSIFICATION	0.999947348500189	WITHOUT_CLASSIFICATION	5.265149981110253E-5	IMPLEMENTATION
// If we hold a Java object, we need a java_class accessor	WITHOUT_CLASSIFICATION	0.9999081091821882	WITHOUT_CLASSIFICATION	9.189081781180019E-5	IMPLEMENTATION
// line 326	WITHOUT_CLASSIFICATION	0.9998871047884604	WITHOUT_CLASSIFICATION	1.1289521153963082E-4	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.999855109221339	WITHOUT_CLASSIFICATION	1.4489077866100251E-4	IMPLEMENTATION
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999828900008608	WITHOUT_CLASSIFICATION	1.7109999139234637E-5	IMPLEMENTATION
// too much array creation!	WITHOUT_CLASSIFICATION	0.9999104784397314	WITHOUT_CLASSIFICATION	8.952156026870532E-5	IMPLEMENTATION
// construct new array proxy (ArrayJavaProxy)	WITHOUT_CLASSIFICATION	0.9999426025260455	WITHOUT_CLASSIFICATION	5.7397473954446334E-5	IMPLEMENTATION
// Get map of all fields we want to define.  	WITHOUT_CLASSIFICATION	0.9998769715389267	WITHOUT_CLASSIFICATION	1.2302846107322912E-4	IMPLEMENTATION
// Look through all mappings to find a match entry for this field	WITHOUT_CLASSIFICATION	0.9999213160158673	WITHOUT_CLASSIFICATION	7.86839841327823E-5	IMPLEMENTATION
// Hit a non-java proxy class (included Modules can be a cause of this...skip)	WITHOUT_CLASSIFICATION	0.9999572509600847	WITHOUT_CLASSIFICATION	4.274903991532686E-5	IMPLEMENTATION
// We could not find all of them print out first one (we could print them all?)	WITHOUT_CLASSIFICATION	0.9999705947771149	WITHOUT_CLASSIFICATION	2.9405222885115028E-5	IMPLEMENTATION
// dummy bodies for default impls	WITHOUT_CLASSIFICATION	0.9999583164590046	WITHOUT_CLASSIFICATION	4.168354099541219E-5	IMPLEMENTATION
// initialize this if it hasn't been	WITHOUT_CLASSIFICATION	0.9999711693428185	WITHOUT_CLASSIFICATION	2.8830657181466954E-5	IMPLEMENTATION
// initialize these if they haven't been	WITHOUT_CLASSIFICATION	0.9999780357726614	WITHOUT_CLASSIFICATION	2.1964227338648684E-5	IMPLEMENTATION
// not allowed for original (non-generated) Java classes // note: not allowing for any previously created class right now; // this restriction might be loosened later for generated classes	WITHOUT_CLASSIFICATION	0.9999690250887088	WITHOUT_CLASSIFICATION	3.0974911291293625E-5	IMPLEMENTATION
// setup new, etc unless this is a ConcreteJavaProxy subclass	WITHOUT_CLASSIFICATION	0.999971447694423	WITHOUT_CLASSIFICATION	2.855230557688407E-5	IMPLEMENTATION
// First we make modifications to the class, to adapt it to being // both a Ruby class and a proxy for a Java type	WITHOUT_CLASSIFICATION	0.9999876140990877	WITHOUT_CLASSIFICATION	1.2385900912407436E-5	IMPLEMENTATION
// list of interfaces we implement	WITHOUT_CLASSIFICATION	0.9978716204973201	WITHOUT_CLASSIFICATION	0.002128379502679934	IMPLEMENTATION
// We capture the original "new" and make it private	WITHOUT_CLASSIFICATION	0.9999215466143346	WITHOUT_CLASSIFICATION	7.845338566542714E-5	IMPLEMENTATION
// The replacement "new" allocates and inits the Ruby object as before, but // also instantiates our proxified Java object by calling __jcreate!	WITHOUT_CLASSIFICATION	0.9999830037614854	WITHOUT_CLASSIFICATION	1.699623851460733E-5	IMPLEMENTATION
// Next, we define a few private methods that we'll use to manipulate // the Java object contained within this Ruby object	WITHOUT_CLASSIFICATION	0.9999881509314804	WITHOUT_CLASSIFICATION	1.184906851971848E-5	IMPLEMENTATION
// jcreate instantiates the proxy object which implements all interfaces // and which is wrapped and implemented by this object	WITHOUT_CLASSIFICATION	0.9995996180439806	WITHOUT_CLASSIFICATION	4.0038195601945934E-4	IMPLEMENTATION
// Now we add an "implement" and "implement_all" methods to the class	WITHOUT_CLASSIFICATION	0.9996279609377027	WITHOUT_CLASSIFICATION	3.720390622973053E-4	IMPLEMENTATION
// implement all forces implementation of all interfaces we intend // for this class to implement	WITHOUT_CLASSIFICATION	0.999489558802884	WITHOUT_CLASSIFICATION	5.104411971159282E-4	IMPLEMENTATION
// we've already done the above priming logic, just add another interface // to the list of intentions unless we're past the point of no return or // already intend to implement the given interface	WITHOUT_CLASSIFICATION	0.9995615602874268	WITHOUT_CLASSIFICATION	4.3843971257312257E-4	IMPLEMENTATION
// walk all superclasses aggregating interfaces	WITHOUT_CLASSIFICATION	0.9999630757085136	WITHOUT_CLASSIFICATION	3.6924291486432255E-5	IMPLEMENTATION
// construct the new interface impl and set it into the object	WITHOUT_CLASSIFICATION	0.9999959003029376	WITHOUT_CLASSIFICATION	4.099697062385962E-6	IMPLEMENTATION
// assuming the user wants a collection of interfaces that can be // included together. make it so.	WITHOUT_CLASSIFICATION	0.999986179865071	WITHOUT_CLASSIFICATION	1.3820134928950362E-5	IMPLEMENTATION
// not allowed for existing Java interface modules	WITHOUT_CLASSIFICATION	0.9999367436276183	WITHOUT_CLASSIFICATION	6.325637238172826E-5	IMPLEMENTATION
// To turn a module into an "interface collection" we add a class instance // variable to hold the list of interfaces, and modify append_features // for this module to call append_features on each of those interfaces as // well	WITHOUT_CLASSIFICATION	0.9999970425637854	WITHOUT_CLASSIFICATION	2.957436214632587E-6	IMPLEMENTATION
// already set up append_features, just add the interface if we haven't already	WITHOUT_CLASSIFICATION	0.9999878405802739	WITHOUT_CLASSIFICATION	1.2159419726212292E-5	IMPLEMENTATION
// array-of-interface-type creation/identity	WITHOUT_CLASSIFICATION	0.9999428221045554	WITHOUT_CLASSIFICATION	5.717789544465513E-5	IMPLEMENTATION
// keep this variant for kind_of? testing	WITHOUT_CLASSIFICATION	0.9998915736895848	WITHOUT_CLASSIFICATION	1.0842631041526016E-4	IMPLEMENTATION
// array creation should use this variant	WITHOUT_CLASSIFICATION	0.9997917305887105	WITHOUT_CLASSIFICATION	2.0826941128954815E-4	IMPLEMENTATION
// parent.setConstant(name, proxyClass); // where the name should come from ?	WITHOUT_CLASSIFICATION	0.9999623731270384	WITHOUT_CLASSIFICATION	3.762687296158716E-5	IMPLEMENTATION
// including interface module so old-style interface "subclasses" will // respond correctly to #kind_of?, etc.	WITHOUT_CLASSIFICATION	0.9999781221387968	WITHOUT_CLASSIFICATION	2.1877861203228933E-5	IMPLEMENTATION
// add reference to interface module	WITHOUT_CLASSIFICATION	0.9999822484460292	WITHOUT_CLASSIFICATION	1.7751553970727695E-5	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999074404324435	WITHOUT_CLASSIFICATION	9.255956755646234E-5	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999074404324435	WITHOUT_CLASSIFICATION	9.255956755646234E-5	IMPLEMENTATION
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9998518942682937	WITHOUT_CLASSIFICATION	1.4810573170628605E-4	IMPLEMENTATION
// same as argument_types, but matches name in java.lang.reflect.Constructor/Method	WITHOUT_CLASSIFICATION	0.9999487310145719	WITHOUT_CLASSIFICATION	5.1268985428129604E-5	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999882549612509	WITHOUT_CLASSIFICATION	1.174503874915838E-5	IMPLEMENTATION
// weakly reserved names	WITHOUT_CLASSIFICATION	0.9998685109329261	WITHOUT_CLASSIFICATION	1.3148906707398343E-4	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999687974049277	WITHOUT_CLASSIFICATION	3.120259507230706E-5	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999687974049277	WITHOUT_CLASSIFICATION	3.120259507230706E-5	IMPLEMENTATION
// modified only by addMethod; no synchronization required	WITHOUT_CLASSIFICATION	0.9999547373897951	WITHOUT_CLASSIFICATION	4.526261020487682E-5	IMPLEMENTATION
// if there's no constructor, we must prevent construction	WITHOUT_CLASSIFICATION	0.9999546773062399	WITHOUT_CLASSIFICATION	4.532269376015151E-5	IMPLEMENTATION
// caching constructors, as they're accessed for each new instance	WITHOUT_CLASSIFICATION	0.999924216171707	WITHOUT_CLASSIFICATION	7.578382829301746E-5	IMPLEMENTATION
// proxy module for interfaces	WITHOUT_CLASSIFICATION	0.999953849363745	WITHOUT_CLASSIFICATION	4.615063625500248E-5	IMPLEMENTATION
// proxy class for concrete classes.  also used for // "concrete" interfaces, which is why we have two fields	WITHOUT_CLASSIFICATION	0.9999876902208014	WITHOUT_CLASSIFICATION	1.2309779198699875E-5	IMPLEMENTATION
// readable only by thread building proxy, so don't need to be // volatile. used to handle recursive calls to getProxyClass/Module // while proxy is being constructed (usually when a constant // defined by a class is of the same type as that class).	WITHOUT_CLASSIFICATION	0.9999968317106304	WITHOUT_CLASSIFICATION	3.1682893696988243E-6	IMPLEMENTATION
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999677642399449	WITHOUT_CLASSIFICATION	3.223576005512236E-5	IMPLEMENTATION
// Now add all aliases for the static methods (fields) as appropriate	WITHOUT_CLASSIFICATION	0.9999566587462012	WITHOUT_CLASSIFICATION	4.334125379885997E-5	IMPLEMENTATION
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999470748288747	WITHOUT_CLASSIFICATION	5.292517112530858E-5	IMPLEMENTATION
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999499746405757	WITHOUT_CLASSIFICATION	5.002535942439331E-5	IMPLEMENTATION
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999065894853878	WITHOUT_CLASSIFICATION	9.341051461221414E-5	IMPLEMENTATION
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999070667687122	WITHOUT_CLASSIFICATION	9.293323128777166E-5	IMPLEMENTATION
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9998702279781311	WITHOUT_CLASSIFICATION	1.2977202186893123E-4	IMPLEMENTATION
// Additionally add ?-postfixed aliases to any boolean methods and properties.	WITHOUT_CLASSIFICATION	0.9999569452071746	WITHOUT_CLASSIFICATION	4.30547928253197E-5	IMPLEMENTATION
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9998918232381458	WITHOUT_CLASSIFICATION	1.0817676185416128E-4	IMPLEMENTATION
// something?	WITHOUT_CLASSIFICATION	0.9998778024520911	WITHOUT_CLASSIFICATION	1.2219754790893773E-4	IMPLEMENTATION
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999836542884906	WITHOUT_CLASSIFICATION	1.63457115094495E-5	IMPLEMENTATION
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999836542884906	WITHOUT_CLASSIFICATION	1.63457115094495E-5	IMPLEMENTATION
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999928820423264	WITHOUT_CLASSIFICATION	7.117957673546256E-6	IMPLEMENTATION
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999928820423264	WITHOUT_CLASSIFICATION	7.117957673546256E-6	IMPLEMENTATION
// create constructorInstaller; if there are no constructors, it will disable construction	WITHOUT_CLASSIFICATION	0.999995866742619	WITHOUT_CLASSIFICATION	4.133257381037986E-6	IMPLEMENTATION
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999752705935141	WITHOUT_CLASSIFICATION	2.4729406485914E-5	IMPLEMENTATION
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999485644780889	WITHOUT_CLASSIFICATION	5.143552191116111E-5	IMPLEMENTATION
// now iterate over all installers and make sure they also have appropriate aliases	WITHOUT_CLASSIFICATION	0.9999265639699357	WITHOUT_CLASSIFICATION	7.343603006422104E-5	IMPLEMENTATION
// old (quasi-deprecated) interface class	WITHOUT_CLASSIFICATION	0.9999591275162287	WITHOUT_CLASSIFICATION	4.087248377122282E-5	IMPLEMENTATION
// 1.9 support for encodings	WITHOUT_CLASSIFICATION	0.9995362131483211	WITHOUT_CLASSIFICATION	4.637868516789474E-4	IMPLEMENTATION
// double-check the cache now that we're synchronized	WITHOUT_CLASSIFICATION	0.9999746052660792	WITHOUT_CLASSIFICATION	2.5394733920769408E-5	IMPLEMENTATION
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999070667687122	WITHOUT_CLASSIFICATION	9.293323128777166E-5	IMPLEMENTATION
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9998702279781311	WITHOUT_CLASSIFICATION	1.2977202186893123E-4	IMPLEMENTATION
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9998918232381458	WITHOUT_CLASSIFICATION	1.0817676185416128E-4	IMPLEMENTATION
// one word type name that starts lower-case...it may be a primitive type	WITHOUT_CLASSIFICATION	0.999965198428644	WITHOUT_CLASSIFICATION	3.4801571356062134E-5	IMPLEMENTATION
// Java.getProxyClass deals with sync issues, so we won't duplicate the logic here	WITHOUT_CLASSIFICATION	0.9999402643633422	WITHOUT_CLASSIFICATION	5.9735636657724603E-5	IMPLEMENTATION
// note: intentionally returning the actual array returned from Java, rather // than wrapping it in a RubyArray. wave of the future, when java_class will // return the actual class, rather than a JavaClass wrapper.	WITHOUT_CLASSIFICATION	0.9999962920497751	WITHOUT_CLASSIFICATION	3.707950224941901E-6	IMPLEMENTATION
// see note above re: return type	WITHOUT_CLASSIFICATION	0.9999208920997871	WITHOUT_CLASSIFICATION	7.910790021298888E-5	IMPLEMENTATION
// restrictive security policy; no matter, we only want public // classes anyway	WITHOUT_CLASSIFICATION	0.9999668555539784	WITHOUT_CLASSIFICATION	3.314444602170118E-5	IMPLEMENTATION
// very restrictive policy (disallows Member.PUBLIC) // we'd never actually get this far in that case	WITHOUT_CLASSIFICATION	0.9997620587962747	WITHOUT_CLASSIFICATION	2.3794120372544738E-4	IMPLEMENTATION
// one-dimensional array	WITHOUT_CLASSIFICATION	0.9998959502582893	WITHOUT_CLASSIFICATION	1.0404974171074872E-4	IMPLEMENTATION
// n-dimensional array	WITHOUT_CLASSIFICATION	0.9998949600890393	WITHOUT_CLASSIFICATION	1.0503991096068843E-4	IMPLEMENTATION
// if it's an array of arrays, recurse with the component type	WITHOUT_CLASSIFICATION	0.9999561878997908	WITHOUT_CLASSIFICATION	4.3812100209334496E-5	IMPLEMENTATION
// we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods // see JRUBY-3130	WITHOUT_CLASSIFICATION	0.9999777815806573	WITHOUT_CLASSIFICATION	2.2218419342699867E-5	IMPLEMENTATION
// Proc implementing an interface, pull in the catch-all code that lets the proc get invoked // no matter what method is called on the interface	WITHOUT_CLASSIFICATION	0.9993246293347253	WITHOUT_CLASSIFICATION	6.753706652747588E-4	IMPLEMENTATION
// can't be converted any more, return it	WITHOUT_CLASSIFICATION	0.9999640682824406	WITHOUT_CLASSIFICATION	3.5931717559428446E-5	IMPLEMENTATION
// getFooBar() => fooBar?, foo_bar?(*)	WITHOUT_CLASSIFICATION	0.9999034821447805	WITHOUT_CLASSIFICATION	9.651785521946266E-5	IMPLEMENTATION
// If not a property, but is boolean add ?-postfixed aliases.	WITHOUT_CLASSIFICATION	0.9999536522824121	WITHOUT_CLASSIFICATION	4.634771758801382E-5	IMPLEMENTATION
// many cases are ok to convert to float; if not one of these, error	WITHOUT_CLASSIFICATION	0.9999535611820999	WITHOUT_CLASSIFICATION	4.643881790005689E-5	IMPLEMENTATION
// for Object, default to natural wrapper type	WITHOUT_CLASSIFICATION	0.9999714180924197	WITHOUT_CLASSIFICATION	2.858190758021761E-5	IMPLEMENTATION
// rubyObject is already of the required jruby class (or subclass)	WITHOUT_CLASSIFICATION	0.9999787993187585	WITHOUT_CLASSIFICATION	2.1200681241339236E-5	IMPLEMENTATION
// the converters handle not only primitive types but also their boxed versions, so we should check // if we have a converter before checking for isPrimitive()	WITHOUT_CLASSIFICATION	0.9999921659085447	WITHOUT_CLASSIFICATION	7.834091455322865E-6	IMPLEMENTATION
// it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999693360258037	WITHOUT_CLASSIFICATION	3.066397419623712E-5	IMPLEMENTATION
// we've found a Java type to which we've coerced the Ruby value, wrap it	WITHOUT_CLASSIFICATION	0.9999453837930555	WITHOUT_CLASSIFICATION	5.4616206944582015E-5	IMPLEMENTATION
// set of utility methods for Java-based proxy objects	WITHOUT_CLASSIFICATION	0.9999704788512255	WITHOUT_CLASSIFICATION	2.952114877453626E-5	IMPLEMENTATION
// the proxy (wrapper) type hierarchy	WITHOUT_CLASSIFICATION	0.9999418146111007	WITHOUT_CLASSIFICATION	5.818538889943632E-5	IMPLEMENTATION
//InterfaceJavaProxy.createInterfaceJavaProxy(context);	WITHOUT_CLASSIFICATION	0.9999285743433936	WITHOUT_CLASSIFICATION	7.142565660634354E-5	IMPLEMENTATION
// also create the JavaProxy* classes	WITHOUT_CLASSIFICATION	0.9999571559458049	WITHOUT_CLASSIFICATION	4.284405419506335E-5	IMPLEMENTATION
// The template for interface modules	WITHOUT_CLASSIFICATION	0.999980318975085	WITHOUT_CLASSIFICATION	1.9681024914952087E-5	IMPLEMENTATION
// Now attach Java-related extras to core classes	WITHOUT_CLASSIFICATION	0.9999336157699581	WITHOUT_CLASSIFICATION	6.638423004191392E-5	IMPLEMENTATION
// add all name-to-class mappings	WITHOUT_CLASSIFICATION	0.9999277897842704	WITHOUT_CLASSIFICATION	7.221021572958616E-5	IMPLEMENTATION
// add some base Java classes everyone will need	WITHOUT_CLASSIFICATION	0.9999616899501925	WITHOUT_CLASSIFICATION	3.831004980747728E-5	IMPLEMENTATION
// finally, set JavaSupport.isEnabled to true	WITHOUT_CLASSIFICATION	0.9998989226698826	WITHOUT_CLASSIFICATION	1.01077330117356E-4	IMPLEMENTATION
// shouldn't happen, but if a superclass is specified, it's not ours	WITHOUT_CLASSIFICATION	0.9999688359566202	WITHOUT_CLASSIFICATION	3.1164043379779276E-5	IMPLEMENTATION
// include any interfaces we extend	WITHOUT_CLASSIFICATION	0.9999512832822351	WITHOUT_CLASSIFICATION	4.871671776474242E-5	IMPLEMENTATION
// java.lang.Object is added at root of java proxy classes	WITHOUT_CLASSIFICATION	0.9999596430473677	WITHOUT_CLASSIFICATION	4.03569526321713E-5	IMPLEMENTATION
// other java proxy classes added under their superclass' java proxy	WITHOUT_CLASSIFICATION	0.9999549130656797	WITHOUT_CLASSIFICATION	4.5086934320275914E-5	IMPLEMENTATION
// include interface modules into the proxy class	WITHOUT_CLASSIFICATION	0.9999805446584511	WITHOUT_CLASSIFICATION	1.9455341548879707E-5	IMPLEMENTATION
// JRUBY-2938 the proxy class might already exist	WITHOUT_CLASSIFICATION	0.9999570943044712	WITHOUT_CLASSIFICATION	4.2905695528735385E-5	IMPLEMENTATION
// add java_method for unbound use	WITHOUT_CLASSIFICATION	0.9999404227285675	WITHOUT_CLASSIFICATION	5.957727143255369E-5	IMPLEMENTATION
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999398816929297	WITHOUT_CLASSIFICATION	6.011830707043342E-5	IMPLEMENTATION
// we'll only map conventional class names to modules 	WITHOUT_CLASSIFICATION	0.9999374722584323	WITHOUT_CLASSIFICATION	6.252774156771703E-5	IMPLEMENTATION
/* expected */	WITHOUT_CLASSIFICATION	0.9999112158505437	WITHOUT_CLASSIFICATION	8.878414945625025E-5	IMPLEMENTATION
// Haven't found a class, continue on as though it were a package	WITHOUT_CLASSIFICATION	0.9999580415522533	WITHOUT_CLASSIFICATION	4.1958447746717754E-5	IMPLEMENTATION
// upper case name, so most likely a class	WITHOUT_CLASSIFICATION	0.999954194660435	WITHOUT_CLASSIFICATION	4.5805339565098234E-5	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999882549612509	WITHOUT_CLASSIFICATION	1.174503874915838E-5	IMPLEMENTATION
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999398816929297	WITHOUT_CLASSIFICATION	6.011830707043342E-5	IMPLEMENTATION
// this is where we'll get connected when classes are opened using // package module syntax.	WITHOUT_CLASSIFICATION	0.9999808141715328	WITHOUT_CLASSIFICATION	1.918582846719474E-5	IMPLEMENTATION
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.999981406159651	WITHOUT_CLASSIFICATION	1.8593840348942786E-5	IMPLEMENTATION
// this covers primitives and (unlikely) lower-case class names	WITHOUT_CLASSIFICATION	0.9999508628605182	WITHOUT_CLASSIFICATION	4.9137139481868466E-5	IMPLEMENTATION
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999303308619251	WITHOUT_CLASSIFICATION	6.96691380749566E-5	IMPLEMENTATION
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999303308619251	WITHOUT_CLASSIFICATION	6.96691380749566E-5	IMPLEMENTATION
// Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9999441423972353	WITHOUT_CLASSIFICATION	5.5857602764637754E-5	IMPLEMENTATION
// Create list of interfaces to proxy (and make sure they really are interfaces)	WITHOUT_CLASSIFICATION	0.9999868106627642	WITHOUT_CLASSIFICATION	1.3189337235843011E-5	IMPLEMENTATION
// hashcode is a combination of the interfaces and the Ruby class we're using // to implement them	WITHOUT_CLASSIFICATION	0.9983458423832005	WITHOUT_CLASSIFICATION	0.0016541576167994774	IMPLEMENTATION
// if it's a singleton class and the real class is proc, we're doing closure conversion // so just use Proc's hashcode	WITHOUT_CLASSIFICATION	0.9999842683010249	WITHOUT_CLASSIFICATION	1.5731698975063975E-5	IMPLEMENTATION
// normal new class implementing interfaces	WITHOUT_CLASSIFICATION	0.998586416368607	WITHOUT_CLASSIFICATION	0.001413583631392943	IMPLEMENTATION
/*         * Initialize some components.         */	WITHOUT_CLASSIFICATION	0.999994300889204	WITHOUT_CLASSIFICATION	5.6991107959677085E-6	IMPLEMENTATION
// not synchronizing these methods, no harm if these values get set more // than once. // (also note that there's no chance of getting a partially initialized // class/module, as happens-before is guaranteed by volatile write/read // of constants table.)	WITHOUT_CLASSIFICATION	0.9999867998574914	WITHOUT_CLASSIFICATION	1.3200142508574894E-5	IMPLEMENTATION
// Java reflection does not allow retrieving constructors like methods	WITHOUT_CLASSIFICATION	0.999949620275202	WITHOUT_CLASSIFICATION	5.0379724798141915E-5	IMPLEMENTATION
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999352716015126	WITHOUT_CLASSIFICATION	6.472839848736562E-5	IMPLEMENTATION
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999352716015126	WITHOUT_CLASSIFICATION	6.472839848736562E-5	IMPLEMENTATION
// no matching ctor found	WITHOUT_CLASSIFICATION	0.9999370976379566	WITHOUT_CLASSIFICATION	6.290236204341408E-5	IMPLEMENTATION
// Create Ruby proxies for any input arguments that are not primitives.	WITHOUT_CLASSIFICATION	0.9999198871848265	WITHOUT_CLASSIFICATION	8.01128151734738E-5	IMPLEMENTATION
// prepare a faster handle if handles are enabled and the method and class are public	WITHOUT_CLASSIFICATION	0.99997141706432	WITHOUT_CLASSIFICATION	2.8582935680013452E-5	IMPLEMENTATION
// must be a public method	WITHOUT_CLASSIFICATION	0.9999241045099565	WITHOUT_CLASSIFICATION	7.589549004349542E-5	IMPLEMENTATION
// must be a public class	WITHOUT_CLASSIFICATION	0.9999372543431269	WITHOUT_CLASSIFICATION	6.274565687310639E-5	IMPLEMENTATION
// must have been loaded from our known classloader hierarchy	WITHOUT_CLASSIFICATION	0.999894722098016	WITHOUT_CLASSIFICATION	1.0527790198395382E-4	IMPLEMENTATION
// Special classes like Collections.EMPTY_LIST are inner classes that are private but  // implement public interfaces.  Their methods are all public methods for the public  // interface.  Let these public methods execute via setAccessible(true). 	WITHOUT_CLASSIFICATION	0.9999384973300919	WITHOUT_CLASSIFICATION	6.150266990802839E-5	IMPLEMENTATION
// search through all declared methods to find a closest match	WITHOUT_CLASSIFICATION	0.9999685388136458	WITHOUT_CLASSIFICATION	3.146118635425412E-5	IMPLEMENTATION
// no matching method found	WITHOUT_CLASSIFICATION	0.9999376589822989	WITHOUT_CLASSIFICATION	6.23410177010791E-5	IMPLEMENTATION
// this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.9999829418891124	WITHOUT_CLASSIFICATION	1.7058110887486657E-5	IMPLEMENTATION
/*         * First we need to register the JRuby engine.         */	WITHOUT_CLASSIFICATION	0.9999848382080039	WITHOUT_CLASSIFICATION	1.5161791996234641E-5	IMPLEMENTATION
/*         * Now we create a new BSFManager.         */	WITHOUT_CLASSIFICATION	0.9999967679357179	WITHOUT_CLASSIFICATION	3.2320642821705723E-6	IMPLEMENTATION
/*         * Initialize a simple Frame.          */	WITHOUT_CLASSIFICATION	0.9999890730763628	WITHOUT_CLASSIFICATION	1.0926923637225585E-5	IMPLEMENTATION
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9998964310079941	WITHOUT_CLASSIFICATION	1.035689920059322E-4	IMPLEMENTATION
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9998964310079941	WITHOUT_CLASSIFICATION	1.035689920059322E-4	IMPLEMENTATION
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9998810990952517	WITHOUT_CLASSIFICATION	1.1890090474832303E-4	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.9999541027420615	WITHOUT_CLASSIFICATION	4.5897257938473326E-5	IMPLEMENTATION
// // this test really means, that this is a ruby-defined subclass of a java class //	WITHOUT_CLASSIFICATION	0.999978911191226	WITHOUT_CLASSIFICATION	2.1088808774117474E-5	IMPLEMENTATION
// for our purposes, Accessibles are also Members, and vice-versa, // so we'll include Member methods here.	WITHOUT_CLASSIFICATION	0.9999535396647853	WITHOUT_CLASSIFICATION	4.646033521466601E-5	IMPLEMENTATION
/*             * Declare those components as beans in BSF. Then it will be             * possible to access those components in Ruby as global             * variables ($frame, $menubar, ...)             */	WITHOUT_CLASSIFICATION	0.9999943433798758	WITHOUT_CLASSIFICATION	5.656620124301361E-6	IMPLEMENTATION
/*              * Execute a Ruby script (add the menubar to the frame).             */	WITHOUT_CLASSIFICATION	0.9999935897861127	WITHOUT_CLASSIFICATION	6.4102138872668875E-6	IMPLEMENTATION
/*                     * Execute Ruby statements.                     */	WITHOUT_CLASSIFICATION	0.9999873991417234	WITHOUT_CLASSIFICATION	1.2600858276533521E-5	IMPLEMENTATION
/*                     * Evaluates a Ruby expression and display the result.                     */	WITHOUT_CLASSIFICATION	0.9999836704041715	WITHOUT_CLASSIFICATION	1.632959582849214E-5	IMPLEMENTATION
// Populate values for the parameter names	WITHOUT_CLASSIFICATION	0.9999810737871966	WITHOUT_CLASSIFICATION	1.8926212803509736E-5	IMPLEMENTATION
/* package scope */	WITHOUT_CLASSIFICATION	0.9998691074015991	WITHOUT_CLASSIFICATION	1.308925984010217E-4	IMPLEMENTATION
// This point is only reached if there was an exception handler // installed.	WITHOUT_CLASSIFICATION	0.9999899149490791	WITHOUT_CLASSIFICATION	1.0085050920861763E-5	IMPLEMENTATION
// // Ruby-level methods //	WITHOUT_CLASSIFICATION	0.9999010916316688	WITHOUT_CLASSIFICATION	9.890836833111681E-5	IMPLEMENTATION
// need names ordered for key generation later	WITHOUT_CLASSIFICATION	0.999946577508759	WITHOUT_CLASSIFICATION	5.3422491240870916E-5	IMPLEMENTATION
// we only collect methods and interfaces for  // user-defined proxy classes.	WITHOUT_CLASSIFICATION	0.9999900438988034	WITHOUT_CLASSIFICATION	9.956101196531297E-6	IMPLEMENTATION
// get JavaClass if this is the new proxy class; verify it // matches if this is a superclass proxy.	WITHOUT_CLASSIFICATION	0.9999953181933011	WITHOUT_CLASSIFICATION	4.681806698847175E-6	IMPLEMENTATION
// get any included interfaces	WITHOUT_CLASSIFICATION	0.9999700104141659	WITHOUT_CLASSIFICATION	2.9989585834203397E-5	IMPLEMENTATION
// lock in the overridden methods for the new class, and any as-yet // uninstantiated ancestor class.	WITHOUT_CLASSIFICATION	0.9999903234815882	WITHOUT_CLASSIFICATION	9.676518411778502E-6	IMPLEMENTATION
// statically initialized below	WITHOUT_CLASSIFICATION	0.9999570207652437	WITHOUT_CLASSIFICATION	4.297923475619462E-5	IMPLEMENTATION
// finish class initializer	WITHOUT_CLASSIFICATION	0.9999439424337976	WITHOUT_CLASSIFICATION	5.6057566202528156E-5	IMPLEMENTATION
// trigger class initialization for the class	WITHOUT_CLASSIFICATION	0.9999853841148372	WITHOUT_CLASSIFICATION	1.4615885162788756E-5	IMPLEMENTATION
// should not happen!	WITHOUT_CLASSIFICATION	0.9999518061218431	WITHOUT_CLASSIFICATION	4.819387815701363E-5	IMPLEMENTATION
// start class	WITHOUT_CLASSIFICATION	0.9999413014166117	WITHOUT_CLASSIFICATION	5.869858338839465E-5	IMPLEMENTATION
// make getter for handler	WITHOUT_CLASSIFICATION	0.9999149521913425	WITHOUT_CLASSIFICATION	8.5047808657458E-5	IMPLEMENTATION
// make getter for proxy class	WITHOUT_CLASSIFICATION	0.9999387229518146	WITHOUT_CLASSIFICATION	6.12770481853541E-5	IMPLEMENTATION
// add (potentially) overridden names to the key. // TODO: see note above re: optimizations	WITHOUT_CLASSIFICATION	0.985157803753294	WITHOUT_CLASSIFICATION	0.014842196246705918	IMPLEMENTATION
// We generate all constructors and let some fail during invocation later	WITHOUT_CLASSIFICATION	0.9999477001945732	WITHOUT_CLASSIFICATION	5.22998054267627E-5	IMPLEMENTATION
// create static private method field	WITHOUT_CLASSIFICATION	0.9999883176623008	WITHOUT_CLASSIFICATION	1.1682337699214135E-5	IMPLEMENTATION
// load static empty array	WITHOUT_CLASSIFICATION	0.9999385233722199	WITHOUT_CLASSIFICATION	6.14766277800553E-5	IMPLEMENTATION
// box arguments	WITHOUT_CLASSIFICATION	0.9998719692225518	WITHOUT_CLASSIFICATION	1.2803077744816783E-4	IMPLEMENTATION
// this is a simple rethrow handler	WITHOUT_CLASSIFICATION	0.9999619148498107	WITHOUT_CLASSIFICATION	3.8085150189320885E-5	IMPLEMENTATION
// // construct the super-proxy method //	WITHOUT_CLASSIFICATION	0.9999552057068246	WITHOUT_CLASSIFICATION	4.47942931754116E-5	IMPLEMENTATION
// do a void return	WITHOUT_CLASSIFICATION	0.9999219899919175	WITHOUT_CLASSIFICATION	7.80100080825493E-5	IMPLEMENTATION
// // utility methods //	WITHOUT_CLASSIFICATION	0.9999073696999332	WITHOUT_CLASSIFICATION	9.263030006673378E-5	IMPLEMENTATION
// Is there a supplied proc argument or do we assume a block was // supplied	WITHOUT_CLASSIFICATION	0.999947543630231	WITHOUT_CLASSIFICATION	5.2456369769090077E-5	IMPLEMENTATION
// store call information so method_missing impl can use it	WITHOUT_CLASSIFICATION	0.9999479249987107	WITHOUT_CLASSIFICATION	5.2075001289239534E-5	IMPLEMENTATION
// use the same logic as in EvaluationState	WITHOUT_CLASSIFICATION	0.9999210369033137	WITHOUT_CLASSIFICATION	7.896309668640191E-5	IMPLEMENTATION
// no opt, no rest, exact match	WITHOUT_CLASSIFICATION	0.9999228824254054	WITHOUT_CLASSIFICATION	7.711757459458844E-5	IMPLEMENTATION
// only rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999368038448628	WITHOUT_CLASSIFICATION	6.319615513719833E-5	IMPLEMENTATION
// opt but no rest, must be at least required and no more than required + opt	WITHOUT_CLASSIFICATION	0.9999207333293786	WITHOUT_CLASSIFICATION	7.926667062142011E-5	IMPLEMENTATION
// opt and rest, must be at least required	WITHOUT_CLASSIFICATION	0.999914411226961	WITHOUT_CLASSIFICATION	8.558877303898183E-5	IMPLEMENTATION
// No block from a nil proc	WITHOUT_CLASSIFICATION	0.999898013462384	WITHOUT_CLASSIFICATION	1.0198653761598365E-4	IMPLEMENTATION
// If not already a proc then we should try and make it one.	WITHOUT_CLASSIFICATION	0.9998940796254043	WITHOUT_CLASSIFICATION	1.0592037459571663E-4	IMPLEMENTATION
// The current block is already associated with proc.  No need to create a new one	WITHOUT_CLASSIFICATION	0.9999962141154274	WITHOUT_CLASSIFICATION	3.7858845726127906E-6	IMPLEMENTATION
// Has the method that is calling super received a block argument	WITHOUT_CLASSIFICATION	0.9999203790535857	WITHOUT_CLASSIFICATION	7.962094641433935E-5	IMPLEMENTATION
/* NUL */	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999218743525962	WITHOUT_CLASSIFICATION	7.812564740387751E-5	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999020084312471	WITHOUT_CLASSIFICATION	9.799156875282267E-5	IMPLEMENTATION
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9998934719032468	WITHOUT_CLASSIFICATION	1.0652809675320516E-4	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9998587598949422	WITHOUT_CLASSIFICATION	1.41240105057694E-4	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.999855109221339	WITHOUT_CLASSIFICATION	1.4489077866100251E-4	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.999855109221339	WITHOUT_CLASSIFICATION	1.4489077866100251E-4	IMPLEMENTATION
// classes are directly in the hierarchy, so no special logic is necessary for implementer	WITHOUT_CLASSIFICATION	0.9974375908070868	WITHOUT_CLASSIFICATION	0.002562409192913088	IMPLEMENTATION
// must be power of 2 // must be power of 2	WITHOUT_CLASSIFICATION	0.9998972024149002	WITHOUT_CLASSIFICATION	1.0279758509984276E-4	IMPLEMENTATION
// Find power-of-two sizes best matching arguments	WITHOUT_CLASSIFICATION	0.9999338818645332	WITHOUT_CLASSIFICATION	6.611813546681296E-5	IMPLEMENTATION
// note segmentShift differs from ConcurrentHashMap's calculation due to // issues with System.identityHashCode (upper n bits always 0, at least  // under Java 1.6 / WinXP)	WITHOUT_CLASSIFICATION	0.9999652226260306	WITHOUT_CLASSIFICATION	3.477737396940381E-5	IMPLEMENTATION
//      System.err.println("***ObjectProxyCache " + id + " started at "+ new java.util.Date());	WITHOUT_CLASSIFICATION	0.9999590228219339	WITHOUT_CLASSIFICATION	4.0977178066060273E-5	IMPLEMENTATION
//    protected void finalize() throws Throwable { //        System.err.println("***ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); //    }	WITHOUT_CLASSIFICATION	0.9999747562736743	WITHOUT_CLASSIFICATION	2.524372632565948E-5	IMPLEMENTATION
// EntryRefs include hash with key to facilitate lookup by Segment#expunge // after ref is removed from ReferenceQueue	WITHOUT_CLASSIFICATION	0.9997781800883337	WITHOUT_CLASSIFICATION	2.2181991166620203E-4	IMPLEMENTATION
// Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather // makes it a final field.  The theory is that doing so should force a happens-before // relationship WRT the WeakReference constructor, guaranteeing that the key will be // visibile to other threads (unless it's been GC'ed).  See JLS 17.5 (final fields) and // 17.4.5 (Happens-before order) to confirm or refute my reasoning here.	WITHOUT_CLASSIFICATION	0.9999906965960011	WITHOUT_CLASSIFICATION	9.303403998920772E-6	IMPLEMENTATION
// references to the Java object and its proxy will either both be // weak or both be soft, since the proxy contains a strong reference // to the object, so it wouldn't make sense for the reference types // to differ.	WITHOUT_CLASSIFICATION	0.9999965315397444	WITHOUT_CLASSIFICATION	3.4684602556468594E-6	IMPLEMENTATION
// ctor used by remove/rehash	WITHOUT_CLASSIFICATION	0.999894186315727	WITHOUT_CLASSIFICATION	1.0581368427307242E-4	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999324339404956	WITHOUT_CLASSIFICATION	6.756605950443523E-5	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999324339404956	WITHOUT_CLASSIFICATION	6.756605950443523E-5	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999324339404956	WITHOUT_CLASSIFICATION	6.756605950443523E-5	IMPLEMENTATION
// note that we'll potentially see the refs for both the java object and // proxy -- whichever we see first will cause the entry to be removed; // the other will not match an entry and will be ignored.	WITHOUT_CLASSIFICATION	0.9999899764765033	WITHOUT_CLASSIFICATION	1.002352349664288E-5	IMPLEMENTATION
// temp method to verify tableSize value // must be called under lock	WITHOUT_CLASSIFICATION	0.9999764214166718	WITHOUT_CLASSIFICATION	2.3578583328170286E-5	IMPLEMENTATION
// Single node in list	WITHOUT_CLASSIFICATION	0.9998874373771091	WITHOUT_CLASSIFICATION	1.1256262289096918E-4	IMPLEMENTATION
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.999876693327466	WITHOUT_CLASSIFICATION	1.2330667253406409E-4	IMPLEMENTATION
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.999876693327466	WITHOUT_CLASSIFICATION	1.2330667253406409E-4	IMPLEMENTATION
// entry exists, proxy has been gc'ed. replace entry.	WITHOUT_CLASSIFICATION	0.9999237994108793	WITHOUT_CLASSIFICATION	7.620058912074947E-5	IMPLEMENTATION
// Where we get new positions from.	WITHOUT_CLASSIFICATION	0.9999357571371904	WITHOUT_CLASSIFICATION	6.424286280958268E-5	IMPLEMENTATION
// Start of string ([, (, {, <, ', ", \n) 	WITHOUT_CLASSIFICATION	0.9999554577568704	WITHOUT_CLASSIFICATION	4.4542243129538734E-5	IMPLEMENTATION
// Number of newlines read from the reader	WITHOUT_CLASSIFICATION	0.9999573331794279	WITHOUT_CLASSIFICATION	4.266682057212956E-5	IMPLEMENTATION
// How many bytes into the source are we?	WITHOUT_CLASSIFICATION	0.9999507305917692	WITHOUT_CLASSIFICATION	4.9269408230794755E-5	IMPLEMENTATION
// For 'list' and only populated if list is not null.	WITHOUT_CLASSIFICATION	0.9999376641666501	WITHOUT_CLASSIFICATION	6.233583334998227E-5	IMPLEMENTATION
// Last full line read.	WITHOUT_CLASSIFICATION	0.9998784202298902	WITHOUT_CLASSIFICATION	1.215797701099093E-4	IMPLEMENTATION
// Save sourceLine for error reporting to display line where error occurred	WITHOUT_CLASSIFICATION	0.999944289763094	WITHOUT_CLASSIFICATION	5.5710236905940015E-5	IMPLEMENTATION
// Get rest of line. lineBuffer filled as side-effect...	WITHOUT_CLASSIFICATION	0.9999144942286504	WITHOUT_CLASSIFICATION	8.55057713495394E-5	IMPLEMENTATION
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9998944374782517	WITHOUT_CLASSIFICATION	1.0556252174836056E-4	IMPLEMENTATION
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9998944374782517	WITHOUT_CLASSIFICATION	1.0556252174836056E-4	IMPLEMENTATION
// End of string (], ), }, >, ', ", \0)	WITHOUT_CLASSIFICATION	0.9999251628183607	WITHOUT_CLASSIFICATION	7.483718163919266E-5	IMPLEMENTATION
// How many strings are nested in the current string term	WITHOUT_CLASSIFICATION	0.9999885499054066	WITHOUT_CLASSIFICATION	1.145009459327099E-5	IMPLEMENTATION
// Single-quote fast path	WITHOUT_CLASSIFICATION	0.9998794705661503	WITHOUT_CLASSIFICATION	1.2052943384959257E-4	IMPLEMENTATION
// Regexp engine 'java'	WITHOUT_CLASSIFICATION	0.999874908223707	WITHOUT_CLASSIFICATION	1.25091776293078E-4	IMPLEMENTATION
// Was a goto in original ruby lexer	WITHOUT_CLASSIFICATION	0.9999035031429416	WITHOUT_CLASSIFICATION	9.64968570584448E-5	IMPLEMENTATION
/* just ignore */	WITHOUT_CLASSIFICATION	0.9999304955939019	WITHOUT_CLASSIFICATION	6.950440609812589E-5	IMPLEMENTATION
/* octal constant */	WITHOUT_CLASSIFICATION	0.9998600832331798	WITHOUT_CLASSIFICATION	1.3991676682025055E-4	IMPLEMENTATION
/* hex constant */	WITHOUT_CLASSIFICATION	0.9998598101207528	WITHOUT_CLASSIFICATION	1.401898792472639E-4	IMPLEMENTATION
// PUSH(1)	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
// POP	WITHOUT_CLASSIFICATION	0.995842511921268	WITHOUT_CLASSIFICATION	0.00415748807873191	IMPLEMENTATION
// PUSH(0).  If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.	WITHOUT_CLASSIFICATION	0.9998503740040229	WITHOUT_CLASSIFICATION	1.4962599597711642E-4	IMPLEMENTATION
// LEXPOP	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
// SET_P	WITHOUT_CLASSIFICATION	0.9958292005063907	WITHOUT_CLASSIFICATION	0.004170799493609396	IMPLEMENTATION
// Marker delimiting heredoc boundary	WITHOUT_CLASSIFICATION	0.9998824244976956	WITHOUT_CLASSIFICATION	1.1757550230439943E-4	IMPLEMENTATION
// Found end marker for this heredoc	WITHOUT_CLASSIFICATION	0.9999225800872846	WITHOUT_CLASSIFICATION	7.741991271534316E-5	IMPLEMENTATION
// Put back lastLine for any elements past start of heredoc marker	WITHOUT_CLASSIFICATION	0.9999579170621926	WITHOUT_CLASSIFICATION	4.208293780742147E-5	IMPLEMENTATION
// Last token read via yylex().	WITHOUT_CLASSIFICATION	0.9998879558408256	WITHOUT_CLASSIFICATION	1.1204415917433163E-4	IMPLEMENTATION
// Value of last token which had a value associated with it.	WITHOUT_CLASSIFICATION	0.9999734619329647	WITHOUT_CLASSIFICATION	2.6538067035404075E-5	IMPLEMENTATION
// Stream of data that yylex() examines.	WITHOUT_CLASSIFICATION	0.9999089289178351	WITHOUT_CLASSIFICATION	9.107108216481697E-5	IMPLEMENTATION
// Used for tiny smidgen of grammar in lexer (see setParserSupport())	WITHOUT_CLASSIFICATION	0.9999110255735942	WITHOUT_CLASSIFICATION	8.897442640566356E-5	IMPLEMENTATION
// Give a name to a value.  Enebo: This should be used more.	WITHOUT_CLASSIFICATION	0.999895453606334	WITHOUT_CLASSIFICATION	1.0454639366596011E-4	IMPLEMENTATION
// When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').	WITHOUT_CLASSIFICATION	0.9999468232588425	WITHOUT_CLASSIFICATION	5.3176741157438835E-5	IMPLEMENTATION
// Are we lexing Ruby 1.8 or 1.9+ syntax	WITHOUT_CLASSIFICATION	0.9998812551304481	WITHOUT_CLASSIFICATION	1.187448695518996E-4	IMPLEMENTATION
// Count of nested parentheses (1.9 only)	WITHOUT_CLASSIFICATION	0.99988164467668	WITHOUT_CLASSIFICATION	1.1835532332006563E-4	IMPLEMENTATION
// 1.9 only	WITHOUT_CLASSIFICATION	0.9998415686846777	WITHOUT_CLASSIFICATION	1.5843131532233462E-4	IMPLEMENTATION
// Short-hand (e.g. %{,%.,%!,... versus %Q{).	WITHOUT_CLASSIFICATION	0.9998777057427368	WITHOUT_CLASSIFICATION	1.2229425726308706E-4	IMPLEMENTATION
// Long-hand (e.g. %Q{}).	WITHOUT_CLASSIFICATION	0.9998685469143259	WITHOUT_CLASSIFICATION	1.3145308567407546E-4	IMPLEMENTATION
/* no mb || ismbchar(term)*/	WITHOUT_CLASSIFICATION	0.9998679210494813	WITHOUT_CLASSIFICATION	1.3207895051867643E-4	IMPLEMENTATION
/*     * Not normally used, but is left in here since it can be useful in debugging     * grammar and lexing problems.     *     */	WITHOUT_CLASSIFICATION	0.999948736749257	WITHOUT_CLASSIFICATION	5.126325074304339E-5	IMPLEMENTATION
// DEBUGGING HELP 	WITHOUT_CLASSIFICATION	0.9998415686846777	WITHOUT_CLASSIFICATION	1.5843131532233462E-4	IMPLEMENTATION
/* '\v' */	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
/* end of script. */	WITHOUT_CLASSIFICATION	0.999897691449621	WITHOUT_CLASSIFICATION	1.023085503789394E-4	IMPLEMENTATION
/* white spaces */	WITHOUT_CLASSIFICATION	0.9998733525855428	WITHOUT_CLASSIFICATION	1.2664741445721678E-4	IMPLEMENTATION
/* '\v' */	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
/* it's a comment */	WITHOUT_CLASSIFICATION	0.9998849740611078	WITHOUT_CLASSIFICATION	1.150259388921284E-4	IMPLEMENTATION
// Replace a string of newlines with a single one	WITHOUT_CLASSIFICATION	0.9999351220357323	WITHOUT_CLASSIFICATION	6.487796426765605E-5	IMPLEMENTATION
/* $\: output record separator */	WITHOUT_CLASSIFICATION	0.9999240118845205	WITHOUT_CLASSIFICATION	7.59881154794557E-5	IMPLEMENTATION
// EOF (ENEBO: After default?	WITHOUT_CLASSIFICATION	0.9999171281419338	WITHOUT_CLASSIFICATION	8.287185806619611E-5	IMPLEMENTATION
// documentation nodes	WITHOUT_CLASSIFICATION	0.9999063531900466	WITHOUT_CLASSIFICATION	9.364680995341612E-5	IMPLEMENTATION
// In case last next was the newline.	WITHOUT_CLASSIFICATION	0.9999431416026769	WITHOUT_CLASSIFICATION	5.6858397323115195E-5	IMPLEMENTATION
// Just a plain bang	WITHOUT_CLASSIFICATION	0.9998772445707067	WITHOUT_CLASSIFICATION	1.2275542929320304E-4	IMPLEMENTATION
/* $_: last read line string */	WITHOUT_CLASSIFICATION	0.9999332869364081	WITHOUT_CLASSIFICATION	6.671306359192712E-5	IMPLEMENTATION
/* $~: match-data */	WITHOUT_CLASSIFICATION	0.9998596491442904	WITHOUT_CLASSIFICATION	1.403508557096641E-4	IMPLEMENTATION
/* $*: argv */	WITHOUT_CLASSIFICATION	0.9998415686846777	WITHOUT_CLASSIFICATION	1.5843131532233462E-4	IMPLEMENTATION
/* $$: pid */	WITHOUT_CLASSIFICATION	0.9998415686846777	WITHOUT_CLASSIFICATION	1.5843131532233462E-4	IMPLEMENTATION
/* $?: last status */	WITHOUT_CLASSIFICATION	0.9998857029373642	WITHOUT_CLASSIFICATION	1.1429706263576441E-4	IMPLEMENTATION
/* $!: error string */	WITHOUT_CLASSIFICATION	0.9999170836770417	WITHOUT_CLASSIFICATION	8.291632295832312E-5	IMPLEMENTATION
/* $@: error position */	WITHOUT_CLASSIFICATION	0.9999279485973002	WITHOUT_CLASSIFICATION	7.20514026997987E-5	IMPLEMENTATION
/* $/: input record separator */	WITHOUT_CLASSIFICATION	0.9999196987889415	WITHOUT_CLASSIFICATION	8.030121105857227E-5	IMPLEMENTATION
/* $;: field separator */	WITHOUT_CLASSIFICATION	0.999922364308696	WITHOUT_CLASSIFICATION	7.763569130400284E-5	IMPLEMENTATION
/* $,: output field separator */	WITHOUT_CLASSIFICATION	0.9999353804207816	WITHOUT_CLASSIFICATION	6.461957921848178E-5	IMPLEMENTATION
/* $.: last read line number */	WITHOUT_CLASSIFICATION	0.9999176812087514	WITHOUT_CLASSIFICATION	8.231879124864558E-5	IMPLEMENTATION
/* $=: ignorecase */	WITHOUT_CLASSIFICATION	0.9999174409850615	WITHOUT_CLASSIFICATION	8.25590149384105E-5	IMPLEMENTATION
/* $:: load path */	WITHOUT_CLASSIFICATION	0.9998580127875328	WITHOUT_CLASSIFICATION	1.4198721246715118E-4	IMPLEMENTATION
/* $<: reading filename */	WITHOUT_CLASSIFICATION	0.9999331427808171	WITHOUT_CLASSIFICATION	6.685721918290429E-5	IMPLEMENTATION
/* $": already loaded files */	WITHOUT_CLASSIFICATION	0.9999333458833387	WITHOUT_CLASSIFICATION	6.665411666129432E-5	IMPLEMENTATION
/* $&: last match */	WITHOUT_CLASSIFICATION	0.9998691766316261	WITHOUT_CLASSIFICATION	1.308233683738542E-4	IMPLEMENTATION
/* $`: string before last match */	WITHOUT_CLASSIFICATION	0.9999393614688259	WITHOUT_CLASSIFICATION	6.063853117411245E-5	IMPLEMENTATION
/* $': string after last match */	WITHOUT_CLASSIFICATION	0.9999366251053134	WITHOUT_CLASSIFICATION	6.337489468651425E-5	IMPLEMENTATION
// methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop	WITHOUT_CLASSIFICATION	0.9999341252460233	WITHOUT_CLASSIFICATION	6.587475397666352E-5	IMPLEMENTATION
/* See if it is a reserved word.  */	WITHOUT_CLASSIFICATION	0.9999206894594576	WITHOUT_CLASSIFICATION	7.931054054245402E-5	IMPLEMENTATION
// enum lex_state	WITHOUT_CLASSIFICATION	0.9998430604897832	WITHOUT_CLASSIFICATION	1.5693951021675563E-4	IMPLEMENTATION
// block (primary)	WITHOUT_CLASSIFICATION	0.9998473560049298	WITHOUT_CLASSIFICATION	1.5264399507023438E-4	IMPLEMENTATION
// block (expr)	WITHOUT_CLASSIFICATION	0.9998448209899551	WITHOUT_CLASSIFICATION	1.5517901004493117E-4	IMPLEMENTATION
// hash	WITHOUT_CLASSIFICATION	0.9959424714888204	WITHOUT_CLASSIFICATION	0.0040575285111795895	IMPLEMENTATION
// ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.	WITHOUT_CLASSIFICATION	0.9995749813514097	WITHOUT_CLASSIFICATION	4.2501864859034147E-4	IMPLEMENTATION
// FIXME: peek('u') utf8 stuff for 1.9	WITHOUT_CLASSIFICATION	0.9995249349896835	WITHOUT_CLASSIFICATION	4.750650103164581E-4	IMPLEMENTATION
// We don't append '+' since Java number parser gets confused	WITHOUT_CLASSIFICATION	0.9999563502179756	WITHOUT_CLASSIFICATION	4.3649782024555025E-5	IMPLEMENTATION
//  hexadecimal	WITHOUT_CLASSIFICATION	0.9998436427010569	WITHOUT_CLASSIFICATION	1.5635729894312645E-4	IMPLEMENTATION
// binary	WITHOUT_CLASSIFICATION	0.9962354814224395	WITHOUT_CLASSIFICATION	0.0037645185775605225	IMPLEMENTATION
// decimal	WITHOUT_CLASSIFICATION	0.9960088443242022	WITHOUT_CLASSIFICATION	0.003991155675797757	IMPLEMENTATION
//Octal	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
//  '_' in number just ignored	WITHOUT_CLASSIFICATION	0.9999751335265095	WITHOUT_CLASSIFICATION	2.4866473490582492E-5	IMPLEMENTATION
// backslash	WITHOUT_CLASSIFICATION	0.9998532313967332	WITHOUT_CLASSIFICATION	1.4676860326678058E-4	IMPLEMENTATION
// newline	WITHOUT_CLASSIFICATION	0.9967051846747405	WITHOUT_CLASSIFICATION	0.0032948153252596373	IMPLEMENTATION
// horizontal tab	WITHOUT_CLASSIFICATION	0.9999187053829985	WITHOUT_CLASSIFICATION	8.129461700147445E-5	IMPLEMENTATION
// form feed	WITHOUT_CLASSIFICATION	0.9998679769427847	WITHOUT_CLASSIFICATION	1.3202305721523406E-4	IMPLEMENTATION
// vertical tab	WITHOUT_CLASSIFICATION	0.9999082361905561	WITHOUT_CLASSIFICATION	9.176380944390721E-5	IMPLEMENTATION
// alarm(bell)	WITHOUT_CLASSIFICATION	0.9998415686846777	WITHOUT_CLASSIFICATION	1.5843131532233462E-4	IMPLEMENTATION
// escape	WITHOUT_CLASSIFICATION	0.9959123506130574	WITHOUT_CLASSIFICATION	0.004087649386942661	IMPLEMENTATION
// hex constant	WITHOUT_CLASSIFICATION	0.9998604935459827	WITHOUT_CLASSIFICATION	1.395064540173269E-4	IMPLEMENTATION
//char hexValue = scanHex(2);	WITHOUT_CLASSIFICATION	0.9998715236391487	WITHOUT_CLASSIFICATION	1.284763608513799E-4	IMPLEMENTATION
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9998989618520016	WITHOUT_CLASSIFICATION	1.0103814799849274E-4	IMPLEMENTATION
// space	WITHOUT_CLASSIFICATION	0.996051591833762	WITHOUT_CLASSIFICATION	0.003948408166238057	IMPLEMENTATION
// Where we started this marker match	WITHOUT_CLASSIFICATION	0.9998871496540405	WITHOUT_CLASSIFICATION	1.128503459595101E-4	IMPLEMENTATION
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999970119742597	WITHOUT_CLASSIFICATION	2.988025740372706E-6	IMPLEMENTATION
// We use offset here to keep track of extra newlines for windows	WITHOUT_CLASSIFICATION	0.9999181599564279	WITHOUT_CLASSIFICATION	8.184004357223103E-5	IMPLEMENTATION
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9998989618520016	WITHOUT_CLASSIFICATION	1.0103814799849274E-4	IMPLEMENTATION
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9996520991585943	WITHOUT_CLASSIFICATION	3.4790084140558887E-4	IMPLEMENTATION
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9996520991585943	WITHOUT_CLASSIFICATION	3.4790084140558887E-4	IMPLEMENTATION
// Where we get our newest char's	WITHOUT_CLASSIFICATION	0.9998967241074909	WITHOUT_CLASSIFICATION	1.032758925091533E-4	IMPLEMENTATION
// Our readback/pushback buffer.	WITHOUT_CLASSIFICATION	0.9998802295786599	WITHOUT_CLASSIFICATION	1.1977042134014807E-4	IMPLEMENTATION
// index of last character in pushback buffer	WITHOUT_CLASSIFICATION	0.9999307026401052	WITHOUT_CLASSIFICATION	6.929735989471975E-5	IMPLEMENTATION
// Character read before previous read	WITHOUT_CLASSIFICATION	0.9999360205125244	WITHOUT_CLASSIFICATION	6.397948747558088E-5	IMPLEMENTATION
// keep value of twoAgo around so we can restore after we unread	WITHOUT_CLASSIFICATION	0.9999469852353344	WITHOUT_CLASSIFICATION	5.30147646655387E-5	IMPLEMENTATION
// NetProtocolBufferedIOLibrary	WITHOUT_CLASSIFICATION	0.9998842641894633	WITHOUT_CLASSIFICATION	1.1573581053677287E-4	IMPLEMENTATION
// BigDecimalLibrary	WITHOUT_CLASSIFICATION	0.9998443106589755	WITHOUT_CLASSIFICATION	1.556893410245353E-4	IMPLEMENTATION
// TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. // We did it here for now	WITHOUT_CLASSIFICATION	0.9057131587820402	WITHOUT_CLASSIFICATION	0.0942868412179598	IMPLEMENTATION
// Ruby's designation for some platforms, minus version numbers in some cases	WITHOUT_CLASSIFICATION	0.9999424232903955	WITHOUT_CLASSIFICATION	5.757670960440629E-5	IMPLEMENTATION
// that's what JDK5 produces on Windows Vista	WITHOUT_CLASSIFICATION	0.9998806260571258	WITHOUT_CLASSIFICATION	1.1937394287421077E-4	IMPLEMENTATION
// Rubygems is too specific on host cpu so until we have real need lets default to universal //setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));	WITHOUT_CLASSIFICATION	0.9999811321077245	WITHOUT_CLASSIFICATION	1.8867892275403456E-5	IMPLEMENTATION
// Our shell scripts pass in non-canonicalized paths, but even if we didn't // anyone who did would become unhappy because Ruby apps expect no relative // operators in the pathname (rubygems, for example).	WITHOUT_CLASSIFICATION	0.999980906023486	WITHOUT_CLASSIFICATION	1.9093976513996667E-5	IMPLEMENTATION
// this set is only for darwin	WITHOUT_CLASSIFICATION	0.9999284318936874	WITHOUT_CLASSIFICATION	7.15681063125905E-5	IMPLEMENTATION
// DigestLibrary	WITHOUT_CLASSIFICATION	0.999842632242497	WITHOUT_CLASSIFICATION	1.5736775750284853E-4	IMPLEMENTATION
// all errors, just info; do not prevent loading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9997633630987509	WITHOUT_CLASSIFICATION	2.366369012491326E-4	IMPLEMENTATION
// all errors, just info; do not prevent unloading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9998490631825881	WITHOUT_CLASSIFICATION	1.5093681741192407E-4	IMPLEMENTATION
// do nothing, return dummy version below	WITHOUT_CLASSIFICATION	0.9999891387643433	WITHOUT_CLASSIFICATION	1.0861235656784137E-5	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9998415686846777	WITHOUT_CLASSIFICATION	1.5843131532233462E-4	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9998415686846777	WITHOUT_CLASSIFICATION	1.5843131532233462E-4	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9998415686846777	WITHOUT_CLASSIFICATION	1.5843131532233462E-4	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9998415686846777	WITHOUT_CLASSIFICATION	1.5843131532233462E-4	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9998415686846777	WITHOUT_CLASSIFICATION	1.5843131532233462E-4	IMPLEMENTATION
// line 329	WITHOUT_CLASSIFICATION	0.9998871047884604	WITHOUT_CLASSIFICATION	1.1289521153963082E-4	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999476725441212	WITHOUT_CLASSIFICATION	5.2327455878900224E-5	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9998406729925768	WITHOUT_CLASSIFICATION	1.593270074231714E-4	IMPLEMENTATION
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999018567980335	WITHOUT_CLASSIFICATION	9.814320196644673E-5	IMPLEMENTATION
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9999551373030696	WITHOUT_CLASSIFICATION	4.4862696930315926E-5	IMPLEMENTATION
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999149785717434	WITHOUT_CLASSIFICATION	8.502142825652654E-5	IMPLEMENTATION
// shift to yyN	WITHOUT_CLASSIFICATION	0.9998450503534466	WITHOUT_CLASSIFICATION	1.54949646553383E-4	IMPLEMENTATION
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9998453453782035	WITHOUT_CLASSIFICATION	1.5465462179647572E-4	IMPLEMENTATION
// leave stack alone	WITHOUT_CLASSIFICATION	0.9998638001498107	WITHOUT_CLASSIFICATION	1.3619985018934104E-4	IMPLEMENTATION
// line 271	WITHOUT_CLASSIFICATION	0.9998871241110194	WITHOUT_CLASSIFICATION	1.128758889806384E-4	IMPLEMENTATION
// line 274	WITHOUT_CLASSIFICATION	0.9998871241110194	WITHOUT_CLASSIFICATION	1.128758889806384E-4	IMPLEMENTATION
// line 303	WITHOUT_CLASSIFICATION	0.9998871047884604	WITHOUT_CLASSIFICATION	1.1289521153963082E-4	IMPLEMENTATION
// line 311	WITHOUT_CLASSIFICATION	0.999887149714284	WITHOUT_CLASSIFICATION	1.1285028571603756E-4	IMPLEMENTATION
// line 314	WITHOUT_CLASSIFICATION	0.999887149714284	WITHOUT_CLASSIFICATION	1.1285028571603756E-4	IMPLEMENTATION
// line 317	WITHOUT_CLASSIFICATION	0.9998872095875764	WITHOUT_CLASSIFICATION	1.127904124236177E-4	IMPLEMENTATION
// line 332	WITHOUT_CLASSIFICATION	0.9998871047884604	WITHOUT_CLASSIFICATION	1.1289521153963082E-4	IMPLEMENTATION
// line 338	WITHOUT_CLASSIFICATION	0.9998871047884604	WITHOUT_CLASSIFICATION	1.1289521153963082E-4	IMPLEMENTATION
// line 341	WITHOUT_CLASSIFICATION	0.9998871047884604	WITHOUT_CLASSIFICATION	1.1289521153963082E-4	IMPLEMENTATION
// line 344	WITHOUT_CLASSIFICATION	0.9998871047884604	WITHOUT_CLASSIFICATION	1.1289521153963082E-4	IMPLEMENTATION
// line 351	WITHOUT_CLASSIFICATION	0.9998871047884604	WITHOUT_CLASSIFICATION	1.1289521153963082E-4	IMPLEMENTATION
// line 358	WITHOUT_CLASSIFICATION	0.9998871047884604	WITHOUT_CLASSIFICATION	1.1289521153963082E-4	IMPLEMENTATION
// line 367	WITHOUT_CLASSIFICATION	0.9998871047884604	WITHOUT_CLASSIFICATION	1.1289521153963082E-4	IMPLEMENTATION
// line 372	WITHOUT_CLASSIFICATION	0.9998871047884604	WITHOUT_CLASSIFICATION	1.1289521153963082E-4	IMPLEMENTATION
// line 378	WITHOUT_CLASSIFICATION	0.9998871047884604	WITHOUT_CLASSIFICATION	1.1289521153963082E-4	IMPLEMENTATION
// line 382	WITHOUT_CLASSIFICATION	0.9998871047884604	WITHOUT_CLASSIFICATION	1.1289521153963082E-4	IMPLEMENTATION
// line 407	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 411	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 414	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 417	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 420	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 426	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 434	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 443	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 446	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 452	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 457	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 464	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 467	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 470	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 479	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 484	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 486	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 492	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 498	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 501	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 504	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 507	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 510	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 519	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 525	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9998406729925768	WITHOUT_CLASSIFICATION	1.593270074231714E-4	IMPLEMENTATION
// line 537	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 540	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 543	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 546	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 556	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 559	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 563	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 566	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 569	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 575	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 578	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 587	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 596	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 604	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 607	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 610	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 613	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 616	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 634	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 638	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 643	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 646	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 655	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 660	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 667	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 670	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 672	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 696	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 701	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 717	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 720	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 726	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 729	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 732	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 735	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 738	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 751	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 754	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 757	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 760	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 763	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 769	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 772	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 775	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 782	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 788	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 791	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 794	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 797	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 803	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 806	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 809	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 815	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 818	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 821	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 824	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 830	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 833	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 836	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 839	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 842	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 848	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 852	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 858	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 861	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 868	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 871	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 876	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 879	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 883	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 893	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 896	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 899	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 903	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 907	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 915	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 920	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 923	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 926	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 932	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 936	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 940	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 944	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 948	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 956	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 960	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 964	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 967	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 972	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 978	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 980	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 984	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 986	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 996	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 1001	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1004	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1008	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1014	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1029	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1032	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1034	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1045	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1048	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1051	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1058	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1070	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1073	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1076	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1079	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1082	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1089	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1097	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1100	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1103	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1107	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1111	WITHOUT_CLASSIFICATION	0.9998871734528934	WITHOUT_CLASSIFICATION	1.1282654710668985E-4	IMPLEMENTATION
// line 1113	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1115	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1119	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1130	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1133	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1135	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1137	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1140	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1151	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1154	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1158	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1164	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1175	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1178	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1187	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1189	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1193	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1204	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1207	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1210	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1214	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1234	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1239	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1243	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1247	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1251	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1263	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1269	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1280	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1283	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1290	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1296	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1299	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1302	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1309	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1313	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1315	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1320	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1328	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1335	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1348	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1352	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1358	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1374	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1381	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1387	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1392	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1415	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1431	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1434	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1440	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1443	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1453	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1456	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1462	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1465	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1470	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1477	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1480	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1485	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1488	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1496	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1502	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1510	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1513	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1516	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1533	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1550	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1553	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1556	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1565	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1568	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1571	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1574	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1577	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1587	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1595	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1598	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1600	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1609	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1623	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1626	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1629	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1632	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1638	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1641	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1644	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1649	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1655	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1658	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1661	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1672	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1677	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1687	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1694	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1705	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1708	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1725	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1733	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1742	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1745	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1749	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1757	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1769	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1772	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1775	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1784	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1808	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1814	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1818	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1822	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
/* force for args */	WITHOUT_CLASSIFICATION	0.9998613845205286	WITHOUT_CLASSIFICATION	1.38615479471285E-4	IMPLEMENTATION
/*XXX 0;*/	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
/*                      $$ = $3;*/	WITHOUT_CLASSIFICATION	0.9999598865888389	WITHOUT_CLASSIFICATION	4.0113411161036025E-5	IMPLEMENTATION
/*                  }*/	WITHOUT_CLASSIFICATION	0.9999609542329998	WITHOUT_CLASSIFICATION	3.9045767000248704E-5	IMPLEMENTATION
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9998498051321905	WITHOUT_CLASSIFICATION	1.5019486780950308E-4	IMPLEMENTATION
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9999395866390837	WITHOUT_CLASSIFICATION	6.041336091627002E-5	IMPLEMENTATION
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.999893285469369	WITHOUT_CLASSIFICATION	1.0671453063111982E-4	IMPLEMENTATION
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.999893285469369	WITHOUT_CLASSIFICATION	1.0671453063111982E-4	IMPLEMENTATION
/* NOEX_PRIVATE for toplevel */	WITHOUT_CLASSIFICATION	0.999880978581147	WITHOUT_CLASSIFICATION	1.1902141885292817E-4	IMPLEMENTATION
/*mirko: check*/	WITHOUT_CLASSIFICATION	0.9998599397302392	WITHOUT_CLASSIFICATION	1.4006026976076972E-4	IMPLEMENTATION
/* Include pipes on multiple arg type*/	WITHOUT_CLASSIFICATION	0.9998122818649062	WITHOUT_CLASSIFICATION	1.8771813509381262E-4	IMPLEMENTATION
// line 529	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9998700050010179	WITHOUT_CLASSIFICATION	1.2999499898218476E-4	IMPLEMENTATION
/* XXX*/	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999081997582525	WITHOUT_CLASSIFICATION	9.180024174745019E-5	IMPLEMENTATION
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9998580581379557	WITHOUT_CLASSIFICATION	1.4194186204428164E-4	IMPLEMENTATION
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9998628494337191	WITHOUT_CLASSIFICATION	1.3715056628103755E-4	IMPLEMENTATION
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9998568619549093	WITHOUT_CLASSIFICATION	1.4313804509079583E-4	IMPLEMENTATION
// line 1827 "DefaultRubyParser.y"	WITHOUT_CLASSIFICATION	0.9999306270720744	WITHOUT_CLASSIFICATION	6.937292792561594E-5	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999835586960911	WITHOUT_CLASSIFICATION	1.6441303908859918E-5	IMPLEMENTATION
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9998712393776429	WITHOUT_CLASSIFICATION	1.2876062235705807E-4	IMPLEMENTATION
// line 7713 "-"	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325357E-4	IMPLEMENTATION
// local scopes are argument scopes by default	WITHOUT_CLASSIFICATION	0.9999785126575903	WITHOUT_CLASSIFICATION	2.148734240979285E-5	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999512032686922	WITHOUT_CLASSIFICATION	4.8796731307821204E-5	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999512032686922	WITHOUT_CLASSIFICATION	4.8796731307821204E-5	IMPLEMENTATION
// We know this is a block scope because a local scope cannot be within a local scope // If topScope was itself it would have created a LocalAsgnNode above.	WITHOUT_CLASSIFICATION	0.9999817541699988	WITHOUT_CLASSIFICATION	1.8245830001153306E-5	IMPLEMENTATION
// ENEBO: 1.9 has CURR nodes for local/block variables.  We don't.  I believe we follow proper logic	WITHOUT_CLASSIFICATION	0.9999018564616009	WITHOUT_CLASSIFICATION	9.814353839910038E-5	IMPLEMENTATION
// odd...but it is odd in ruby too.	WITHOUT_CLASSIFICATION	0.9998833979072376	WITHOUT_CLASSIFICATION	1.1660209276255364E-4	IMPLEMENTATION
// What linenumber will the source think it starts from?	WITHOUT_CLASSIFICATION	0.9999421188505839	WITHOUT_CLASSIFICATION	5.7881149416027196E-5	IMPLEMENTATION
// Is this inline source (aka -e "...source...")	WITHOUT_CLASSIFICATION	0.9998377715370499	WITHOUT_CLASSIFICATION	1.622284629501837E-4	IMPLEMENTATION
// We parse evals more often in source so assume an eval parse.	WITHOUT_CLASSIFICATION	0.9999002211037423	WITHOUT_CLASSIFICATION	9.977889625757893E-5	IMPLEMENTATION
// Should positions added extra IDE-friendly information and leave in all newline nodes	WITHOUT_CLASSIFICATION	0.9999764173351646	WITHOUT_CLASSIFICATION	2.3582664835342167E-5	IMPLEMENTATION
// Will parser parse Duby grammar Extensions	WITHOUT_CLASSIFICATION	0.9998868243261957	WITHOUT_CLASSIFICATION	1.1317567380434043E-4	IMPLEMENTATION
// Should we display extra debug information while parsing?	WITHOUT_CLASSIFICATION	0.9999188618497448	WITHOUT_CLASSIFICATION	8.113815025517772E-5	IMPLEMENTATION
// __END__ marker offset (-1 means none present)	WITHOUT_CLASSIFICATION	0.9998322889953373	WITHOUT_CLASSIFICATION	1.677110046626389E-4	IMPLEMENTATION
// Parser states:	WITHOUT_CLASSIFICATION	0.9998678969547081	WITHOUT_CLASSIFICATION	1.3210304529188985E-4	IMPLEMENTATION
// Is the parser current within a singleton (value is number of nested singletons)	WITHOUT_CLASSIFICATION	0.9999803342500351	WITHOUT_CLASSIFICATION	1.9665749964853788E-5	IMPLEMENTATION
// Is the parser currently within a method definition	WITHOUT_CLASSIFICATION	0.9999472657502815	WITHOUT_CLASSIFICATION	5.273424971853374E-5	IMPLEMENTATION
// LOCALVAR	WITHOUT_CLASSIFICATION	0.9998417828921572	WITHOUT_CLASSIFICATION	1.5821710784278165E-4	IMPLEMENTATION
// CONSTANT	WITHOUT_CLASSIFICATION	0.9998429965952732	WITHOUT_CLASSIFICATION	1.57003404726787E-4	IMPLEMENTATION
// INSTANCE VARIABLE	WITHOUT_CLASSIFICATION	0.9998419916648248	WITHOUT_CLASSIFICATION	1.580083351753218E-4	IMPLEMENTATION
// Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])	WITHOUT_CLASSIFICATION	0.9999463188407192	WITHOUT_CLASSIFICATION	5.368115928088059E-5	IMPLEMENTATION
/* MRI: block_append */	WITHOUT_CLASSIFICATION	0.9998694709270346	WITHOUT_CLASSIFICATION	1.3052907296537362E-4	IMPLEMENTATION
// Reduces overhead in interp by not set position every single line we encounter. 	WITHOUT_CLASSIFICATION	0.9999373040151137	WITHOUT_CLASSIFICATION	6.269598488624932E-5	IMPLEMENTATION
// Assumption: tail is never a list node	WITHOUT_CLASSIFICATION	0.9997923672477467	WITHOUT_CLASSIFICATION	2.076327522532908E-4	IMPLEMENTATION
//        return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));	WITHOUT_CLASSIFICATION	0.9999745536854222	WITHOUT_CLASSIFICATION	2.544631457780795E-5	IMPLEMENTATION
// Node	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9996201490387174	WITHOUT_CLASSIFICATION	3.798509612824903E-4	IMPLEMENTATION
/*case CONSTNODE:                handleUselessWarn(node, "a constant"); return;*/	WITHOUT_CLASSIFICATION	0.9999357022770249	WITHOUT_CLASSIFICATION	6.42977229751434E-5	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9996201490387174	WITHOUT_CLASSIFICATION	3.798509612824903E-4	IMPLEMENTATION
/*case CLASSNODE: case COLON2NODE:                handleUselessWarn(node, "::"); return;*/	WITHOUT_CLASSIFICATION	0.9999366024787687	WITHOUT_CLASSIFICATION	6.339752123137322E-5	IMPLEMENTATION
/*case SELFNODE:                handleUselessWarn(node, "self"); return;*/	WITHOUT_CLASSIFICATION	0.9999264456225873	WITHOUT_CLASSIFICATION	7.355437741279489E-5	IMPLEMENTATION
// FIXME: DSTR,EVSTR,STR: warning "string literal in condition"	WITHOUT_CLASSIFICATION	0.9996893391944099	WITHOUT_CLASSIFICATION	3.1066080559004133E-4	IMPLEMENTATION
/* MRI: range_op */	WITHOUT_CLASSIFICATION	0.9998584082366256	WITHOUT_CLASSIFICATION	1.4159176337430801E-4	IMPLEMENTATION
// Block and block pass passed in at same time....uh oh	WITHOUT_CLASSIFICATION	0.9999155080145656	WITHOUT_CLASSIFICATION	8.449198543427296E-5	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.9958169725905546	WITHOUT_CLASSIFICATION	0.004183027409445401	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.9958169725905546	WITHOUT_CLASSIFICATION	0.004183027409445401	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.9958169725905546	WITHOUT_CLASSIFICATION	0.004183027409445401	IMPLEMENTATION
// tail must be EvStrNode at this point 	WITHOUT_CLASSIFICATION	0.999903675461522	WITHOUT_CLASSIFICATION	9.632453847792163E-5	IMPLEMENTATION
//Do not add an empty string node	WITHOUT_CLASSIFICATION	0.999973944334002	WITHOUT_CLASSIFICATION	2.6055665997982275E-5	IMPLEMENTATION
// Zero-Argument declaration	WITHOUT_CLASSIFICATION	0.9999120427921655	WITHOUT_CLASSIFICATION	8.795720783446348E-5	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9998415686846777	WITHOUT_CLASSIFICATION	1.5843131532233462E-4	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9998415686846777	WITHOUT_CLASSIFICATION	1.5843131532233462E-4	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9998415686846777	WITHOUT_CLASSIFICATION	1.5843131532233462E-4	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9998415686846777	WITHOUT_CLASSIFICATION	1.5843131532233462E-4	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9998415686846777	WITHOUT_CLASSIFICATION	1.5843131532233462E-4	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9998415686846777	WITHOUT_CLASSIFICATION	1.5843131532233462E-4	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9998415686846777	WITHOUT_CLASSIFICATION	1.5843131532233462E-4	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9998415686846777	WITHOUT_CLASSIFICATION	1.5843131532233462E-4	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9998415686846777	WITHOUT_CLASSIFICATION	1.5843131532233462E-4	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9998415686846777	WITHOUT_CLASSIFICATION	1.5843131532233462E-4	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9998415686846777	WITHOUT_CLASSIFICATION	1.5843131532233462E-4	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9998415686846777	WITHOUT_CLASSIFICATION	1.5843131532233462E-4	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9998415686846777	WITHOUT_CLASSIFICATION	1.5843131532233462E-4	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9998415686846777	WITHOUT_CLASSIFICATION	1.5843131532233462E-4	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9998415686846777	WITHOUT_CLASSIFICATION	1.5843131532233462E-4	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9998415686846777	WITHOUT_CLASSIFICATION	1.5843131532233462E-4	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9998415686846777	WITHOUT_CLASSIFICATION	1.5843131532233462E-4	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9998415686846777	WITHOUT_CLASSIFICATION	1.5843131532233462E-4	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9998415686846777	WITHOUT_CLASSIFICATION	1.5843131532233462E-4	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9998415686846777	WITHOUT_CLASSIFICATION	1.5843131532233462E-4	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9998415686846777	WITHOUT_CLASSIFICATION	1.5843131532233462E-4	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9998415686846777	WITHOUT_CLASSIFICATION	1.5843131532233462E-4	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9998406729925768	WITHOUT_CLASSIFICATION	1.593270074231714E-4	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9998406729925768	WITHOUT_CLASSIFICATION	1.593270074231714E-4	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9998406729925768	WITHOUT_CLASSIFICATION	1.593270074231714E-4	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9998406729925768	WITHOUT_CLASSIFICATION	1.593270074231714E-4	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9998406729925768	WITHOUT_CLASSIFICATION	1.593270074231714E-4	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9998406729925768	WITHOUT_CLASSIFICATION	1.593270074231714E-4	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9998406729925768	WITHOUT_CLASSIFICATION	1.593270074231714E-4	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9998406729925768	WITHOUT_CLASSIFICATION	1.593270074231714E-4	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9998406729925768	WITHOUT_CLASSIFICATION	1.593270074231714E-4	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9998406729925768	WITHOUT_CLASSIFICATION	1.593270074231714E-4	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9998406729925768	WITHOUT_CLASSIFICATION	1.593270074231714E-4	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9998406729925768	WITHOUT_CLASSIFICATION	1.593270074231714E-4	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9998406729925768	WITHOUT_CLASSIFICATION	1.593270074231714E-4	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9998406729925768	WITHOUT_CLASSIFICATION	1.593270074231714E-4	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9998406729925768	WITHOUT_CLASSIFICATION	1.593270074231714E-4	IMPLEMENTATION
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999018567980335	WITHOUT_CLASSIFICATION	9.814320196644673E-5	IMPLEMENTATION
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999149785717434	WITHOUT_CLASSIFICATION	8.502142825652654E-5	IMPLEMENTATION
// shift to yyN	WITHOUT_CLASSIFICATION	0.9998450503534466	WITHOUT_CLASSIFICATION	1.54949646553383E-4	IMPLEMENTATION
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9998453453782035	WITHOUT_CLASSIFICATION	1.5465462179647572E-4	IMPLEMENTATION
// leave stack alone	WITHOUT_CLASSIFICATION	0.9998638001498107	WITHOUT_CLASSIFICATION	1.3619985018934104E-4	IMPLEMENTATION
// line 321	WITHOUT_CLASSIFICATION	0.9998871047884604	WITHOUT_CLASSIFICATION	1.1289521153963082E-4	IMPLEMENTATION
// line 351	WITHOUT_CLASSIFICATION	0.9998871047884604	WITHOUT_CLASSIFICATION	1.1289521153963082E-4	IMPLEMENTATION
// line 382	WITHOUT_CLASSIFICATION	0.9998871047884604	WITHOUT_CLASSIFICATION	1.1289521153963082E-4	IMPLEMENTATION
// line 417	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 420	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 423	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 426	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 280	WITHOUT_CLASSIFICATION	0.999887296432372	WITHOUT_CLASSIFICATION	1.1270356762796287E-4	IMPLEMENTATION
// line 283	WITHOUT_CLASSIFICATION	0.9998871979952629	WITHOUT_CLASSIFICATION	1.1280200473712636E-4	IMPLEMENTATION
// line 296	WITHOUT_CLASSIFICATION	0.9998871241110194	WITHOUT_CLASSIFICATION	1.128758889806384E-4	IMPLEMENTATION
// line 324	WITHOUT_CLASSIFICATION	0.9998871047884604	WITHOUT_CLASSIFICATION	1.1289521153963082E-4	IMPLEMENTATION
// line 327	WITHOUT_CLASSIFICATION	0.9998871047884604	WITHOUT_CLASSIFICATION	1.1289521153963082E-4	IMPLEMENTATION
// line 331	WITHOUT_CLASSIFICATION	0.9998871047884604	WITHOUT_CLASSIFICATION	1.1289521153963082E-4	IMPLEMENTATION
// line 333	WITHOUT_CLASSIFICATION	0.9998871047884604	WITHOUT_CLASSIFICATION	1.1289521153963082E-4	IMPLEMENTATION
// line 336	WITHOUT_CLASSIFICATION	0.9998871047884604	WITHOUT_CLASSIFICATION	1.1289521153963082E-4	IMPLEMENTATION
// line 342	WITHOUT_CLASSIFICATION	0.9998871047884604	WITHOUT_CLASSIFICATION	1.1289521153963082E-4	IMPLEMENTATION
// line 345	WITHOUT_CLASSIFICATION	0.9998871047884604	WITHOUT_CLASSIFICATION	1.1289521153963082E-4	IMPLEMENTATION
// line 348	WITHOUT_CLASSIFICATION	0.9998871047884604	WITHOUT_CLASSIFICATION	1.1289521153963082E-4	IMPLEMENTATION
// line 354	WITHOUT_CLASSIFICATION	0.9998871047884604	WITHOUT_CLASSIFICATION	1.1289521153963082E-4	IMPLEMENTATION
// line 368	WITHOUT_CLASSIFICATION	0.9998871047884604	WITHOUT_CLASSIFICATION	1.1289521153963082E-4	IMPLEMENTATION
// line 377	WITHOUT_CLASSIFICATION	0.9998871047884604	WITHOUT_CLASSIFICATION	1.1289521153963082E-4	IMPLEMENTATION
// line 388	WITHOUT_CLASSIFICATION	0.9998871047884604	WITHOUT_CLASSIFICATION	1.1289521153963082E-4	IMPLEMENTATION
// line 392	WITHOUT_CLASSIFICATION	0.9998871047884604	WITHOUT_CLASSIFICATION	1.1289521153963082E-4	IMPLEMENTATION
// line 397	WITHOUT_CLASSIFICATION	0.9998871047884604	WITHOUT_CLASSIFICATION	1.1289521153963082E-4	IMPLEMENTATION
// line 429	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 432	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 436	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 445	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 448	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 454	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 459	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 466	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 469	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 478	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 481	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 488	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 494	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 497	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 503	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 506	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 509	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 512	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 521	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 526	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 540	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 543	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 546	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 566	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 610	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 672	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 691	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 696	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 772	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 782	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 785	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 788	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 791	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 534	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 549	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 552	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 558	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 561	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 571	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 574	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 579	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 586	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 589	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 592	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 595	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 598	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 623	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 627	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 630	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 633	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 639	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 648	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 657	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 661	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 666	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 678	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 682	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 688	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 699	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 706	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 708	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 727	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 737	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 753	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 779	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 801	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 808	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 811	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 817	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 842	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 845	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 848	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 893	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 899	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 932	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 944	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 960	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 980	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 1004	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1038	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 820	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 826	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 829	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 832	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 851	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 857	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 860	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 863	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 866	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 869	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 875	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 884	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 887	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 890	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 902	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 909	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 912	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 916	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 922	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 928	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 941	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 947	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 951	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 955	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 965	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 969	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 977	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 983	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 1013	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1023	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1035	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1041	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1043	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1054	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1057	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1060	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1069	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1075	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1105	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1111	WITHOUT_CLASSIFICATION	0.9998871734528934	WITHOUT_CLASSIFICATION	1.1282654710668985E-4	IMPLEMENTATION
// line 1122	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1130	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1140	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1158	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1204	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1207	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1247	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1251	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1261	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1078	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1084	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1087	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1090	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1093	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1114	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1116	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1118	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1124	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1126	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1138	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1144	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1149	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1155	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1162	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1173	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1179	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1182	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1190	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1196	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1213	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1217	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1231	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1236	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1244	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1254	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1258	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1264	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1270	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1273	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1276	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1279	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1282	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1289	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1292	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1295	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1298	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1305	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1348	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1387	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1392	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1448	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1462	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1470	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1496	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1502	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1595	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1598	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1308	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1311	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1317	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1323	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1326	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1329	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1337	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1342	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1345	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1354	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1359	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1366	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1369	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1373	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1377	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1383	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1399	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1401	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1406	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1417	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1424	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1427	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1430	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1433	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1436	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1442	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1445	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1458	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1464	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1489	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1493	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1507	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1519	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1532	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1538	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1542	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1557	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1573	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1591	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1615	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1629	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1632	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1705	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1716	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1725	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1742	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1749	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1818	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1822	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1607	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1610	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1622	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1625	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1636	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1639	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1647	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1651	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1657	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1660	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1663	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1678	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1702	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1711	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1719	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1722	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1731	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1734	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1738	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1746	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1756	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1758	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1761	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1767	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1776	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1782	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1785	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1788	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1791	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1797	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1800	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1803	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1806	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1809	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1815	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1825	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1828	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1831	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1847	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.999893285469369	WITHOUT_CLASSIFICATION	1.0671453063111982E-4	IMPLEMENTATION
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.999893285469369	WITHOUT_CLASSIFICATION	1.0671453063111982E-4	IMPLEMENTATION
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9998700050010179	WITHOUT_CLASSIFICATION	1.2999499898218476E-4	IMPLEMENTATION
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999081997582525	WITHOUT_CLASSIFICATION	9.180024174745019E-5	IMPLEMENTATION
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9998580581379557	WITHOUT_CLASSIFICATION	1.4194186204428164E-4	IMPLEMENTATION
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9998628494337191	WITHOUT_CLASSIFICATION	1.3715056628103755E-4	IMPLEMENTATION
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9998568619549093	WITHOUT_CLASSIFICATION	1.4313804509079583E-4	IMPLEMENTATION
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9998834004570589	WITHOUT_CLASSIFICATION	1.1659954294106098E-4	IMPLEMENTATION
// line 1854	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1869	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1872	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1877	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1886	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1898	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1902	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1905	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1911	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1918	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1935	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1938	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1942	WITHOUT_CLASSIFICATION	0.9998863601643949	WITHOUT_CLASSIFICATION	1.1363983560513244E-4	IMPLEMENTATION
// line 1948	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1960	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1963	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1968	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1972	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1982	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1995	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 2000	WITHOUT_CLASSIFICATION	0.9998871421572689	WITHOUT_CLASSIFICATION	1.1285784273107768E-4	IMPLEMENTATION
// line 2006	WITHOUT_CLASSIFICATION	0.9998871354663738	WITHOUT_CLASSIFICATION	1.1286453362621751E-4	IMPLEMENTATION
// line 2010	WITHOUT_CLASSIFICATION	0.9998871241110194	WITHOUT_CLASSIFICATION	1.128758889806384E-4	IMPLEMENTATION
/* We may need to subtract addition offset off of first */	WITHOUT_CLASSIFICATION	0.9998918731340202	WITHOUT_CLASSIFICATION	1.0812686597976934E-4	IMPLEMENTATION
/* string fragment (we optimistically take one off in*/	WITHOUT_CLASSIFICATION	0.9999049565472162	WITHOUT_CLASSIFICATION	9.504345278384645E-5	IMPLEMENTATION
/* ParserSupport.literal_concat).  Check token length*/	WITHOUT_CLASSIFICATION	0.9998898101764726	WITHOUT_CLASSIFICATION	1.1018982352744251E-4	IMPLEMENTATION
/* and subtract as neeeded.*/	WITHOUT_CLASSIFICATION	0.9998772109659316	WITHOUT_CLASSIFICATION	1.2278903406840523E-4	IMPLEMENTATION
/*                    $$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);  */	WITHOUT_CLASSIFICATION	0.9999757696623764	WITHOUT_CLASSIFICATION	2.4230337623509943E-5	IMPLEMENTATION
/* ENEBO: arg surrounded by in_defined set/unset*/	WITHOUT_CLASSIFICATION	0.999897026469953	WITHOUT_CLASSIFICATION	1.0297353004692899E-4	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999835586960911	WITHOUT_CLASSIFICATION	1.6441303908859918E-5	IMPLEMENTATION
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9998712393776429	WITHOUT_CLASSIFICATION	1.2876062235705807E-4	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999512032686922	WITHOUT_CLASSIFICATION	4.8796731307821204E-5	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999512032686922	WITHOUT_CLASSIFICATION	4.8796731307821204E-5	IMPLEMENTATION
/* ENEBO: Removed !compile_for_eval which probably is to reduce warnings*/	WITHOUT_CLASSIFICATION	0.9998549782689867	WITHOUT_CLASSIFICATION	1.4502173101322327E-4	IMPLEMENTATION
/* was $$ = null;*/	WITHOUT_CLASSIFICATION	0.9998533776878415	WITHOUT_CLASSIFICATION	1.4662231215837682E-4	IMPLEMENTATION
// line 2019 "Ruby19Parser.y"	WITHOUT_CLASSIFICATION	0.9999070324076357	WITHOUT_CLASSIFICATION	9.296759236438414E-5	IMPLEMENTATION
// line 8143 "-"	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325357E-4	IMPLEMENTATION
// we know variables cannot be null since localstaticscope will create a 0 length one.	WITHOUT_CLASSIFICATION	0.999982431210018	WITHOUT_CLASSIFICATION	1.756878998205385E-5	IMPLEMENTATION
// No bit math to store level since we know level is zero for this case	WITHOUT_CLASSIFICATION	0.9999458291794692	WITHOUT_CLASSIFICATION	5.417082053073982E-5	IMPLEMENTATION
// Next immediate scope.  Variable and constant scoping rules make use of this variable // in different ways.	WITHOUT_CLASSIFICATION	0.9999663085453897	WITHOUT_CLASSIFICATION	3.369145461018236E-5	IMPLEMENTATION
// Live reference to module	WITHOUT_CLASSIFICATION	0.9999459737588543	WITHOUT_CLASSIFICATION	5.402624114572988E-5	IMPLEMENTATION
// Next CRef down the lexical structure	WITHOUT_CLASSIFICATION	0.9999180791297917	WITHOUT_CLASSIFICATION	8.19208702083538E-5	IMPLEMENTATION
// Our name holder (offsets are assigned as variables are added	WITHOUT_CLASSIFICATION	0.9999221953041542	WITHOUT_CLASSIFICATION	7.780469584584204E-5	IMPLEMENTATION
// number of variables in this scope representing required arguments	WITHOUT_CLASSIFICATION	0.9999680832144608	WITHOUT_CLASSIFICATION	3.1916785539231276E-5	IMPLEMENTATION
// number of variables in this scope representing optional arguments	WITHOUT_CLASSIFICATION	0.9999740969878219	WITHOUT_CLASSIFICATION	2.5903012178022346E-5	IMPLEMENTATION
// index of variable that represents a "rest" arg	WITHOUT_CLASSIFICATION	0.9998947059414587	WITHOUT_CLASSIFICATION	1.0529405854134024E-4	IMPLEMENTATION
// Note that this object equality check is intentional, to ensure // the string and its interned version are the same object.	WITHOUT_CLASSIFICATION	0.999994778030844	WITHOUT_CLASSIFICATION	5.221969155939769E-6	IMPLEMENTATION
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.999873963418589	WITHOUT_CLASSIFICATION	1.260365814109417E-4	IMPLEMENTATION
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.999873963418589	WITHOUT_CLASSIFICATION	1.260365814109417E-4	IMPLEMENTATION
/* Note: Only used by compiler until it can use getConstant again or use some other refactoring */	WITHOUT_CLASSIFICATION	0.9999149937220243	WITHOUT_CLASSIFICATION	8.500627797570163E-5	IMPLEMENTATION
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999724608773272	WITHOUT_CLASSIFICATION	2.753912267282374E-5	IMPLEMENTATION
/* Try and unload the autoload specified from internedName */	WITHOUT_CLASSIFICATION	0.9999455383153903	WITHOUT_CLASSIFICATION	5.446168460967276E-5	IMPLEMENTATION
// We override that the logic which uses this	WITHOUT_CLASSIFICATION	0.9999533173974346	WITHOUT_CLASSIFICATION	4.668260256538895E-5	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999584764554785	WITHOUT_CLASSIFICATION	4.152354452148664E-5	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999785090083558	WITHOUT_CLASSIFICATION	2.14909916442088E-5	IMPLEMENTATION
// source extensions	WITHOUT_CLASSIFICATION	0.9998989811517649	WITHOUT_CLASSIFICATION	1.0101884823501798E-4	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999785090083558	WITHOUT_CLASSIFICATION	2.14909916442088E-5	IMPLEMENTATION
// . Array given to rest should pass itself // . Array with rest + other args should extract array // . Array with multiple values and NO rest should extract args if there are more than one argument	WITHOUT_CLASSIFICATION	0.9999242229205222	WITHOUT_CLASSIFICATION	7.577707947779998E-5	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999558993512875	WITHOUT_CLASSIFICATION	4.4100648712496286E-5	IMPLEMENTATION
// Is this thread currently with in a function trace?	WITHOUT_CLASSIFICATION	0.9998878828896752	WITHOUT_CLASSIFICATION	1.1211711032476741E-4	IMPLEMENTATION
// Is this thread currently doing an defined? defined should set things like $!	WITHOUT_CLASSIFICATION	0.9998557125806647	WITHOUT_CLASSIFICATION	1.4428741933527147E-4	IMPLEMENTATION
//private UnsynchronizedStack parentStack;	WITHOUT_CLASSIFICATION	0.9999617360668345	WITHOUT_CLASSIFICATION	3.8263933165538056E-5	IMPLEMENTATION
//private UnsynchronizedStack frameStack;	WITHOUT_CLASSIFICATION	0.9999594766965074	WITHOUT_CLASSIFICATION	4.0523303492566986E-5	IMPLEMENTATION
// List of active dynamic scopes.  Each of these may have captured other dynamic scopes // to implement closures.	WITHOUT_CLASSIFICATION	0.9859667754881958	WITHOUT_CLASSIFICATION	0.014033224511804302	IMPLEMENTATION
// File where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999451117752429	WITHOUT_CLASSIFICATION	5.488822475703275E-5	IMPLEMENTATION
// Line where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999496596267943	WITHOUT_CLASSIFICATION	5.034037320572606E-5	IMPLEMENTATION
// In certain places, like grep, we don't use real frames for the // call blocks. This has the effect of not setting the backref in // the correct frame - this delta is activated to the place where // the grep is running in so that the backref will be set in an // appropriate place.	WITHOUT_CLASSIFICATION	0.9999987720361756	WITHOUT_CLASSIFICATION	1.2279638243954848E-6	IMPLEMENTATION
// TOPLEVEL self and a few others want a top-level scope.  We create this one right // away and then pass it into top-level parse so it ends up being the top level.	WITHOUT_CLASSIFICATION	0.9999273783343465	WITHOUT_CLASSIFICATION	7.262166565345913E-5	IMPLEMENTATION
//////////////////// CATCH MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9999894027427477	WITHOUT_CLASSIFICATION	1.0597257252358518E-5	IMPLEMENTATION
//////////////////// FRAME MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9999894091425456	WITHOUT_CLASSIFICATION	1.0590857454281613E-5	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9999212503933512	WITHOUT_CLASSIFICATION	7.874960664873441E-5	IMPLEMENTATION
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9998781261986607	WITHOUT_CLASSIFICATION	1.2187380133939845E-4	IMPLEMENTATION
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9998781261986607	WITHOUT_CLASSIFICATION	1.2187380133939845E-4	IMPLEMENTATION
// look for mangling markers for compiled Ruby in method name	WITHOUT_CLASSIFICATION	0.9998056907406182	WITHOUT_CLASSIFICATION	1.9430925938173905E-4	IMPLEMENTATION
// if it's not a rescue or ensure, there's a frame associated, so decrement	WITHOUT_CLASSIFICATION	0.9999660904543861	WITHOUT_CLASSIFICATION	3.3909545613899544E-5	IMPLEMENTATION
// look for __file__ method name for compiled roots	WITHOUT_CLASSIFICATION	0.9998841995128765	WITHOUT_CLASSIFICATION	1.1580048712349804E-4	IMPLEMENTATION
// All entries following removed node can stay // in list, but all preceding ones need to be // cloned.	WITHOUT_CLASSIFICATION	0.9998559805499116	WITHOUT_CLASSIFICATION	1.440194500882738E-4	IMPLEMENTATION
// required and optional only	WITHOUT_CLASSIFICATION	0.9999205679891411	WITHOUT_CLASSIFICATION	7.943201085885766E-5	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999785090083558	WITHOUT_CLASSIFICATION	2.14909916442088E-5	IMPLEMENTATION
// look for mangling markers for bound, unframed methods in class name	WITHOUT_CLASSIFICATION	0.9999477247856664	WITHOUT_CLASSIFICATION	5.227521433357304E-5	IMPLEMENTATION
// set the binding's frame's "previous" file and line to current, so // trace will show who called the block	WITHOUT_CLASSIFICATION	0.9999808629079185	WITHOUT_CLASSIFICATION	1.9137092081400346E-5	IMPLEMENTATION
// framed invokers will have Ruby frames associated with them	WITHOUT_CLASSIFICATION	0.99994989967882	WITHOUT_CLASSIFICATION	5.010032118014686E-5	IMPLEMENTATION
// look for mangling markers for bound, framed methods in class name	WITHOUT_CLASSIFICATION	0.9999512899102145	WITHOUT_CLASSIFICATION	4.8710089785500465E-5	IMPLEMENTATION
// unframed invokers have no Ruby frames, so pull from class name // but use current frame as file and line	WITHOUT_CLASSIFICATION	0.999977162838299	WITHOUT_CLASSIFICATION	2.2837161700999147E-5	IMPLEMENTATION
// try to mine out a Ruby frame using our list of interpreter entry-point markers	WITHOUT_CLASSIFICATION	0.9999690793172172	WITHOUT_CLASSIFICATION	3.092068278277909E-5	IMPLEMENTATION
// Frame matches one of our markers for "interpreted" calls	WITHOUT_CLASSIFICATION	0.999898065823643	WITHOUT_CLASSIFICATION	1.0193417635705827E-4	IMPLEMENTATION
// Frame is extraneous runtime information, skip it unless debug	WITHOUT_CLASSIFICATION	0.9999377786219636	WITHOUT_CLASSIFICATION	6.222137803637597E-5	IMPLEMENTATION
/*     * Determine what sort of assigner should be used for the provided 'iter' (e.g. block).     * Assigner provides just the right logic for assigning values to local parameters of the     * block.     *     * This method also has a second optimization which is to set 'noargblock' in the case that     * the block is a block which accepts no arguments.  The primary reason for this second     * optimization is that in the case of a yield with a RubyArray we will bypass some logic     * processing the RubyArray into a proper form (only to then not do anythign with it).  A     * secondary benefit is that a simple boolean seems to optimize by hotspot much faster     * than the zero arg assigner.     */	WITHOUT_CLASSIFICATION	0.9999997939161751	WITHOUT_CLASSIFICATION	2.0608382480546325E-7	IMPLEMENTATION
// new scope for this invocation of the block, based on parent scope	WITHOUT_CLASSIFICATION	0.9999870965189167	WITHOUT_CLASSIFICATION	1.2903481083255125E-5	IMPLEMENTATION
// No argument blocks	WITHOUT_CLASSIFICATION	0.9999049810336832	WITHOUT_CLASSIFICATION	9.501896631686611E-5	IMPLEMENTATION
// just push the same empty scope, since we won't use one	WITHOUT_CLASSIFICATION	0.999957953868393	WITHOUT_CLASSIFICATION	4.2046131606982416E-5	IMPLEMENTATION
// Not sure if this is actually possible, but better safe than sorry	WITHOUT_CLASSIFICATION	0.9999385418453514	WITHOUT_CLASSIFICATION	6.145815464861923E-5	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999034990880055	WITHOUT_CLASSIFICATION	9.650091199457113E-5	IMPLEMENTATION
// This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).	WITHOUT_CLASSIFICATION	0.9999223626196957	WITHOUT_CLASSIFICATION	7.763738030435191E-5	IMPLEMENTATION
// Highest reserved id	WITHOUT_CLASSIFICATION	0.9998689696340768	WITHOUT_CLASSIFICATION	1.3103036592310098E-4	IMPLEMENTATION
// binary typed calls	WITHOUT_CLASSIFICATION	0.9998859826787287	WITHOUT_CLASSIFICATION	1.1401732127126793E-4	IMPLEMENTATION
// id must always be even	WITHOUT_CLASSIFICATION	0.9998960356686	WITHOUT_CLASSIFICATION	1.0396433140004987E-4	IMPLEMENTATION
// with block pass	WITHOUT_CLASSIFICATION	0.9998537836497465	WITHOUT_CLASSIFICATION	1.4621635025344304E-4	IMPLEMENTATION
// no block	WITHOUT_CLASSIFICATION	0.9998780607363692	WITHOUT_CLASSIFICATION	1.2193926363086177E-4	IMPLEMENTATION
// with block literal (iter)	WITHOUT_CLASSIFICATION	0.9998756733424049	WITHOUT_CLASSIFICATION	1.243266575951309E-4	IMPLEMENTATION
//            assert false : "can this happen?";	WITHOUT_CLASSIFICATION	0.9999651347067667	WITHOUT_CLASSIFICATION	3.486529323326805E-5	IMPLEMENTATION
// if we have multiple asgn with just *args, need a special type for that	WITHOUT_CLASSIFICATION	0.9999555887759352	WITHOUT_CLASSIFICATION	4.441122406492143E-5	IMPLEMENTATION
// && args.getMaxArgumentsCount() != 1) {	WITHOUT_CLASSIFICATION	0.9998848930491653	WITHOUT_CLASSIFICATION	1.1510695083467947E-4	IMPLEMENTATION
//            return warnMultiReturnNil(ruby);	WITHOUT_CLASSIFICATION	0.9999849617331833	WITHOUT_CLASSIFICATION	1.5038266816607654E-5	IMPLEMENTATION
// ensure zero is devoted to no method name	WITHOUT_CLASSIFICATION	0.9998929297864821	WITHOUT_CLASSIFICATION	1.070702135179021E-4	IMPLEMENTATION
// predefine a few other methods we invoke directly elsewhere	WITHOUT_CLASSIFICATION	0.9999341010145405	WITHOUT_CLASSIFICATION	6.589898545943337E-5	IMPLEMENTATION
// fast and safe respond_to? call site logic	WITHOUT_CLASSIFICATION	0.9998783329979767	WITHOUT_CLASSIFICATION	1.2166700202332108E-4	IMPLEMENTATION
// Static scoping information for this scope	WITHOUT_CLASSIFICATION	0.9999769148317863	WITHOUT_CLASSIFICATION	2.3085168213634953E-5	IMPLEMENTATION
// Captured dynamic scopes	WITHOUT_CLASSIFICATION	0.9998900131242542	WITHOUT_CLASSIFICATION	1.0998687574583891E-4	IMPLEMENTATION
// Backref for $~, $1, etc	WITHOUT_CLASSIFICATION	0.9998713072226931	WITHOUT_CLASSIFICATION	1.2869277730687088E-4	IMPLEMENTATION
// Lastline	WITHOUT_CLASSIFICATION	0.9998446278421514	WITHOUT_CLASSIFICATION	1.5537215784857048E-4	IMPLEMENTATION
// No binding scope so we should create one	WITHOUT_CLASSIFICATION	0.9999382911335963	WITHOUT_CLASSIFICATION	6.170886640368648E-5	IMPLEMENTATION
// bindings scopes must always be ManyVars scopes since evals can grow them	WITHOUT_CLASSIFICATION	0.9999038780854638	WITHOUT_CLASSIFICATION	9.612191453617304E-5	IMPLEMENTATION
// Helper function to give a good view of current dynamic scope with captured scopes	WITHOUT_CLASSIFICATION	0.9999799340130342	WITHOUT_CLASSIFICATION	2.0065986965761815E-5	IMPLEMENTATION
// try count specific args to determine required	WITHOUT_CLASSIFICATION	0.9999502097078188	WITHOUT_CLASSIFICATION	4.97902921811369E-5	IMPLEMENTATION
// Some helper functions:	WITHOUT_CLASSIFICATION	0.9999113550962682	WITHOUT_CLASSIFICATION	8.864490373188108E-5	IMPLEMENTATION
// silently ignore	WITHOUT_CLASSIFICATION	0.9999285306838573	WITHOUT_CLASSIFICATION	7.146931614275233E-5	IMPLEMENTATION
// used by compiler	WITHOUT_CLASSIFICATION	0.9998852500063697	WITHOUT_CLASSIFICATION	1.1474999363020147E-4	IMPLEMENTATION
// initialize the static settings to determine which factory to use	WITHOUT_CLASSIFICATION	0.9999969194146134	WITHOUT_CLASSIFICATION	3.0805853864963777E-6	IMPLEMENTATION
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9998834004570589	WITHOUT_CLASSIFICATION	1.1659954294106098E-4	IMPLEMENTATION
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9999214626778131	WITHOUT_CLASSIFICATION	7.853732218678755E-5	IMPLEMENTATION
//  Single node on list	WITHOUT_CLASSIFICATION	0.9998756958451019	WITHOUT_CLASSIFICATION	1.2430415489795443E-4	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999218743525962	WITHOUT_CLASSIFICATION	7.812564740387751E-5	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999020084312471	WITHOUT_CLASSIFICATION	9.799156875282267E-5	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999558993512875	WITHOUT_CLASSIFICATION	4.4100648712496286E-5	IMPLEMENTATION
// Note: In Ruby 1.9 all of this logic can go away since they will require explicit // bindings for evals.	WITHOUT_CLASSIFICATION	0.9999134571840623	WITHOUT_CLASSIFICATION	8.654281593759836E-5	IMPLEMENTATION
// We only define one special dynamic scope per 'logical' binding.  So all bindings for // the same scope should share the same dynamic scope.  This allows multiple evals with // different different bindings in the same scope to see the same stuff.	WITHOUT_CLASSIFICATION	0.9999777959954704	WITHOUT_CLASSIFICATION	2.2204004529600507E-5	IMPLEMENTATION
// If the next scope out has the same binding scope as this scope it means // we are evaling within an eval and in that case we should be sharing the same // binding scope.	WITHOUT_CLASSIFICATION	0.9999809146083732	WITHOUT_CLASSIFICATION	1.9085391626795915E-5	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999736315423667	WITHOUT_CLASSIFICATION	2.6368457633226845E-5	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999736315423667	WITHOUT_CLASSIFICATION	2.6368457633226845E-5	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999352276413841	WITHOUT_CLASSIFICATION	6.477235861589301E-5	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999352276413841	WITHOUT_CLASSIFICATION	6.477235861589301E-5	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999352276413841	WITHOUT_CLASSIFICATION	6.477235861589301E-5	IMPLEMENTATION
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999184101282708	WITHOUT_CLASSIFICATION	8.158987172929424E-5	IMPLEMENTATION
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999184101282708	WITHOUT_CLASSIFICATION	8.158987172929424E-5	IMPLEMENTATION
// extra args for rest	WITHOUT_CLASSIFICATION	0.9998980800919716	WITHOUT_CLASSIFICATION	1.0191990802842574E-4	IMPLEMENTATION
// extra args for rest	WITHOUT_CLASSIFICATION	0.9998980800919716	WITHOUT_CLASSIFICATION	1.0191990802842574E-4	IMPLEMENTATION
/*     * This is the proper behavior for all non-expanded assigners which have a pre > 0.  The rest     * override this.     */	WITHOUT_CLASSIFICATION	0.9999920091709054	WITHOUT_CLASSIFICATION	7.990829094651408E-6	IMPLEMENTATION
/*     * This is the proper behavior for all non-expanded assigners.     */	WITHOUT_CLASSIFICATION	0.9999832080567232	WITHOUT_CLASSIFICATION	1.679194327675141E-5	IMPLEMENTATION
// prefill ?	WITHOUT_CLASSIFICATION	0.9998604202472575	WITHOUT_CLASSIFICATION	1.3957975274257793E-4	IMPLEMENTATION
// prefill ?	WITHOUT_CLASSIFICATION	0.9998604202472575	WITHOUT_CLASSIFICATION	1.3957975274257793E-4	IMPLEMENTATION
// MUST be called from synchronized/locked block! // should only be called by variableTableStore/variableTableFastStore	WITHOUT_CLASSIFICATION	0.9999395065842467	WITHOUT_CLASSIFICATION	6.0493415753174765E-5	IMPLEMENTATION
// retrieve method // module // name	WITHOUT_CLASSIFICATION	0.999961659357789	WITHOUT_CLASSIFICATION	3.8340642211077214E-5	IMPLEMENTATION
// call is ok, punch it!	WITHOUT_CLASSIFICATION	0.9998625153279691	WITHOUT_CLASSIFICATION	1.374846720309519E-4	IMPLEMENTATION
// if undefined, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999082521019519	WITHOUT_CLASSIFICATION	9.174789804818782E-5	IMPLEMENTATION
// if we're not attempting to invoke method_missing and method is not visible, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999818440029229	WITHOUT_CLASSIFICATION	1.815599707707217E-5	IMPLEMENTATION
// method object already present, push various args // tc // self // klazz // name	WITHOUT_CLASSIFICATION	0.9999593153372579	WITHOUT_CLASSIFICATION	4.068466274212503E-5	IMPLEMENTATION
// if it's method_missing, just invoke it	WITHOUT_CLASSIFICATION	0.9999232462465373	WITHOUT_CLASSIFICATION	7.675375346264423E-5	IMPLEMENTATION
// invoke callMethodMissing	WITHOUT_CLASSIFICATION	0.9998986540435284	WITHOUT_CLASSIFICATION	1.0134595647154434E-4	IMPLEMENTATION
// caller	WITHOUT_CLASSIFICATION	0.9960754870585034	WITHOUT_CLASSIFICATION	0.003924512941496666	IMPLEMENTATION
// calltype // block	WITHOUT_CLASSIFICATION	0.9998525437752542	WITHOUT_CLASSIFICATION	1.474562247456844E-4	IMPLEMENTATION
// if no exception raised, jump to end to leave result on stack for return	WITHOUT_CLASSIFICATION	0.9999811964103561	WITHOUT_CLASSIFICATION	1.880358964388904E-5	IMPLEMENTATION
// load arity for check	WITHOUT_CLASSIFICATION	0.9999246484665474	WITHOUT_CLASSIFICATION	7.535153345266399E-5	IMPLEMENTATION
// throw	WITHOUT_CLASSIFICATION	0.9959164069474207	WITHOUT_CLASSIFICATION	0.0040835930525792916	IMPLEMENTATION
// load arity for error	WITHOUT_CLASSIFICATION	0.9999181571213874	WITHOUT_CLASSIFICATION	8.184287861259999E-5	IMPLEMENTATION
// arity ok, continue	WITHOUT_CLASSIFICATION	0.9998783369289391	WITHOUT_CLASSIFICATION	1.2166307106081812E-4	IMPLEMENTATION
//InvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9998956337979125	WITHOUT_CLASSIFICATION	1.0436620208750122E-4	IMPLEMENTATION
// ENEBO: Perhaps slow but simple for now	WITHOUT_CLASSIFICATION	0.9998420415463541	WITHOUT_CLASSIFICATION	1.5795845364584692E-4	IMPLEMENTATION
// FastInvocationCallback	WITHOUT_CLASSIFICATION	0.999891708873168	WITHOUT_CLASSIFICATION	1.0829112683197373E-4	IMPLEMENTATION
// InvocationCallback	WITHOUT_CLASSIFICATION	0.9998929756027486	WITHOUT_CLASSIFICATION	1.0702439725143964E-4	IMPLEMENTATION
//DumpingInvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9998975895966229	WITHOUT_CLASSIFICATION	1.0241040337711526E-4	IMPLEMENTATION
// for fast lookup: encoding entry => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999176965786697	WITHOUT_CLASSIFICATION	8.230342133027505E-5	IMPLEMENTATION
// for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999129284128855	WITHOUT_CLASSIFICATION	8.707158711462696E-5	IMPLEMENTATION
// load the encoding	WITHOUT_CLASSIFICATION	0.9999281877002483	WITHOUT_CLASSIFICATION	7.181229975177787E-5	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999211441616676	WITHOUT_CLASSIFICATION	7.885583833240517E-5	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.999917732045115	WITHOUT_CLASSIFICATION	8.226795488497607E-5	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999162031001432	WITHOUT_CLASSIFICATION	8.379689985681882E-5	IMPLEMENTATION
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999110839611159	WITHOUT_CLASSIFICATION	8.891603888397167E-5	IMPLEMENTATION
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999112838254699	WITHOUT_CLASSIFICATION	8.871617453003208E-5	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999202645532662	WITHOUT_CLASSIFICATION	7.973544673374403E-5	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999168143789521	WITHOUT_CLASSIFICATION	8.318562104795395E-5	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999152683806551	WITHOUT_CLASSIFICATION	8.473161934480351E-5	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999193168253776	WITHOUT_CLASSIFICATION	8.068317462234566E-5	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999158256460738	WITHOUT_CLASSIFICATION	8.417435392611258E-5	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999142612738291	WITHOUT_CLASSIFICATION	8.573872617097226E-5	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999158256460738	WITHOUT_CLASSIFICATION	8.417435392611258E-5	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999158256460738	WITHOUT_CLASSIFICATION	8.417435392611258E-5	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999158256460738	WITHOUT_CLASSIFICATION	8.417435392611258E-5	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999158256460738	WITHOUT_CLASSIFICATION	8.417435392611258E-5	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999158256460738	WITHOUT_CLASSIFICATION	8.417435392611258E-5	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999158256460738	WITHOUT_CLASSIFICATION	8.417435392611258E-5	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999142612738291	WITHOUT_CLASSIFICATION	8.573872617097226E-5	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999142612738291	WITHOUT_CLASSIFICATION	8.573872617097226E-5	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999142612738291	WITHOUT_CLASSIFICATION	8.573872617097226E-5	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999142612738291	WITHOUT_CLASSIFICATION	8.573872617097226E-5	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999142612738291	WITHOUT_CLASSIFICATION	8.573872617097226E-5	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999142612738291	WITHOUT_CLASSIFICATION	8.573872617097226E-5	IMPLEMENTATION
// If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs	WITHOUT_CLASSIFICATION	0.9999340418654233	WITHOUT_CLASSIFICATION	6.595813457664323E-5	IMPLEMENTATION
// BreakJump, ThreadContext	WITHOUT_CLASSIFICATION	0.9998740877588901	WITHOUT_CLASSIFICATION	1.2591224110997045E-4	IMPLEMENTATION
// ThreadContext	WITHOUT_CLASSIFICATION	0.9998566580754428	WITHOUT_CLASSIFICATION	1.4334192455718887E-4	IMPLEMENTATION
// BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9998982776853239	WITHOUT_CLASSIFICATION	1.017223146760446E-4	IMPLEMENTATION
// Make Java class files in the jar reachable from Ruby	WITHOUT_CLASSIFICATION	0.999973062802763	WITHOUT_CLASSIFICATION	2.6937197237033055E-5	IMPLEMENTATION
// RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999002997839402	WITHOUT_CLASSIFICATION	9.970021605966126E-5	IMPLEMENTATION
// add all startup load paths to the list first	WITHOUT_CLASSIFICATION	0.9999709001445247	WITHOUT_CLASSIFICATION	2.9099855475213574E-5	IMPLEMENTATION
// if it's a compiled JRuby script, instantiate and run it	WITHOUT_CLASSIFICATION	0.9999512329719393	WITHOUT_CLASSIFICATION	4.876702806068545E-5	IMPLEMENTATION
// wrap in try/catch for security exceptions in an applet	WITHOUT_CLASSIFICATION	0.9999180770746391	WITHOUT_CLASSIFICATION	8.192292536101754E-5	IMPLEMENTATION
// add $RUBYLIB paths	WITHOUT_CLASSIFICATION	0.9999359639227715	WITHOUT_CLASSIFICATION	6.403607722854093E-5	IMPLEMENTATION
// Empty paths do not need to be added	WITHOUT_CLASSIFICATION	0.998739261995125	WITHOUT_CLASSIFICATION	0.00126073800487498	IMPLEMENTATION
// "." dir is used for relative path loads from a given file, as in require '../foo/bar'	WITHOUT_CLASSIFICATION	0.9999474488116132	WITHOUT_CLASSIFICATION	5.2551188386805185E-5	IMPLEMENTATION
// Add 1.8 libs	WITHOUT_CLASSIFICATION	0.9999137448428573	WITHOUT_CLASSIFICATION	8.625515714264427E-5	IMPLEMENTATION
// Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.	WITHOUT_CLASSIFICATION	0.9999914373372807	WITHOUT_CLASSIFICATION	8.562662719237786E-6	IMPLEMENTATION
// Library has already been loaded in some form, bail out	WITHOUT_CLASSIFICATION	0.9999560834616066	WITHOUT_CLASSIFICATION	4.391653839350535E-5	IMPLEMENTATION
// We don't want a package name beginning with dots, so we remove them	WITHOUT_CLASSIFICATION	0.9999761688372832	WITHOUT_CLASSIFICATION	2.3831162716757233E-5	IMPLEMENTATION
// If there is a jar-file with the required name, we add this to the class path.	WITHOUT_CLASSIFICATION	0.9999692260431332	WITHOUT_CLASSIFICATION	3.07739568667034E-5	IMPLEMENTATION
// quietly try to load the class	WITHOUT_CLASSIFICATION	0.999967482985918	WITHOUT_CLASSIFICATION	3.2517014081964436E-5	IMPLEMENTATION
// If there was a good library before, we go back to that	WITHOUT_CLASSIFICATION	0.9999641774409787	WITHOUT_CLASSIFICATION	3.582255902138789E-5	IMPLEMENTATION
// no library or extension found, try to load directly as a class	WITHOUT_CLASSIFICATION	0.9999794302452553	WITHOUT_CLASSIFICATION	2.0569754744747185E-5	IMPLEMENTATION
// if an extension is specified, try more targetted searches	WITHOUT_CLASSIFICATION	0.9999689684366311	WITHOUT_CLASSIFICATION	3.103156336892236E-5	IMPLEMENTATION
// signed short, big-endian	WITHOUT_CLASSIFICATION	0.9998844569701002	WITHOUT_CLASSIFICATION	1.1554302989983982E-4	IMPLEMENTATION
// source extensions	WITHOUT_CLASSIFICATION	0.9998989811517649	WITHOUT_CLASSIFICATION	1.0101884823501798E-4	IMPLEMENTATION
// We don't support .so, but some stdlib require .so directly // replace it with .jar to look for an extension type we do support	WITHOUT_CLASSIFICATION	0.9999169786591336	WITHOUT_CLASSIFICATION	8.302134086635472E-5	IMPLEMENTATION
// This code exploits the fact that all .jar files will be found for the JarredScript feature. // This is where the basic extension mechanism gets fixed	WITHOUT_CLASSIFICATION	0.9999870684295948	WITHOUT_CLASSIFICATION	1.293157040522675E-5	IMPLEMENTATION
// Make the class name look nice, by splitting on _ and capitalize each segment, then joining // the, together without anything separating them, and last put on "Service" at the end.	WITHOUT_CLASSIFICATION	0.9999898040068758	WITHOUT_CLASSIFICATION	1.0195993124193544E-5	IMPLEMENTATION
// It's _really_ expensive to check that the class actually exists in the Jar, so // we don't do that now.	WITHOUT_CLASSIFICATION	0.9999903873986282	WITHOUT_CLASSIFICATION	9.612601371867248E-6	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999211088576767	WITHOUT_CLASSIFICATION	7.88911423233119E-5	IMPLEMENTATION
// extension extensions	WITHOUT_CLASSIFICATION	0.9999435808539708	WITHOUT_CLASSIFICATION	5.641914602914889E-5	IMPLEMENTATION
// unknown extension, fall back to search with extensions	WITHOUT_CLASSIFICATION	0.9999581078073697	WITHOUT_CLASSIFICATION	4.189219263027427E-5	IMPLEMENTATION
// try all extensions	WITHOUT_CLASSIFICATION	0.9999418582009071	WITHOUT_CLASSIFICATION	5.814179909286053E-5	IMPLEMENTATION
// if a source extension is specified, try all source extensions	WITHOUT_CLASSIFICATION	0.9999695510977948	WITHOUT_CLASSIFICATION	3.0448902205174637E-5	IMPLEMENTATION
// unknown extension, fall back to exact search	WITHOUT_CLASSIFICATION	0.9999444622622433	WITHOUT_CLASSIFICATION	5.553773775664058E-5	IMPLEMENTATION
// try only literal search	WITHOUT_CLASSIFICATION	0.9999370390560742	WITHOUT_CLASSIFICATION	6.296094392577665E-5	IMPLEMENTATION
// attempt to load the found library	WITHOUT_CLASSIFICATION	0.9999691421434956	WITHOUT_CLASSIFICATION	3.085785650434535E-5	IMPLEMENTATION
// otherwise load the library we've found	WITHOUT_CLASSIFICATION	0.9999523224893422	WITHOUT_CLASSIFICATION	4.7677510657839586E-5	IMPLEMENTATION
// allow MainExitException to propagate out for exec and friends	WITHOUT_CLASSIFICATION	0.9999606222594231	WITHOUT_CLASSIFICATION	3.9377740576818185E-5	IMPLEMENTATION
// Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".	WITHOUT_CLASSIFICATION	0.9999384741772621	WITHOUT_CLASSIFICATION	6.152582273798278E-5	IMPLEMENTATION
// check current directory; if file exists, retrieve URL and return resource	WITHOUT_CLASSIFICATION	0.9999956810847674	WITHOUT_CLASSIFICATION	4.318915232504117E-6	IMPLEMENTATION
// if a jar or file URL, return load service resource directly without further searching	WITHOUT_CLASSIFICATION	0.9999725043744585	WITHOUT_CLASSIFICATION	2.7495625541540388E-5	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999401651971406	WITHOUT_CLASSIFICATION	5.98348028593961E-5	IMPLEMENTATION
// if it's a ./ baseName, use CWD logic	WITHOUT_CLASSIFICATION	0.9999008090717719	WITHOUT_CLASSIFICATION	9.919092822810627E-5	IMPLEMENTATION
// if given path is absolute, just try it as-is (with extensions) and no load path	WITHOUT_CLASSIFICATION	0.99994226725358	WITHOUT_CLASSIFICATION	5.7732746420021266E-5	IMPLEMENTATION
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9999679905284843	WITHOUT_CLASSIFICATION	3.200947151559325E-5	IMPLEMENTATION
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9999679905284843	WITHOUT_CLASSIFICATION	3.200947151559325E-5	IMPLEMENTATION
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9998921702447637	WITHOUT_CLASSIFICATION	1.07829755236285E-4	IMPLEMENTATION
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9998921702447637	WITHOUT_CLASSIFICATION	1.07829755236285E-4	IMPLEMENTATION
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999867267921306	WITHOUT_CLASSIFICATION	1.3273207869291426E-5	IMPLEMENTATION
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999867267921306	WITHOUT_CLASSIFICATION	1.3273207869291426E-5	IMPLEMENTATION
//                    actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));	WITHOUT_CLASSIFICATION	0.9999577271064949	WITHOUT_CLASSIFICATION	4.2272893505039336E-5	IMPLEMENTATION
// handle security-sensitive case	WITHOUT_CLASSIFICATION	0.9999067872574793	WITHOUT_CLASSIFICATION	9.321274252067173E-5	IMPLEMENTATION
// if entry is an empty string, skip it	WITHOUT_CLASSIFICATION	0.9999676523236721	WITHOUT_CLASSIFICATION	3.23476763278457E-5	IMPLEMENTATION
// if entry starts with a slash, skip it since classloader resources never start with a /	WITHOUT_CLASSIFICATION	0.9999726410127148	WITHOUT_CLASSIFICATION	2.7358987285183977E-5	IMPLEMENTATION
// otherwise, try to load from classpath (Note: Jar resources always uses '/')	WITHOUT_CLASSIFICATION	0.9999694496663848	WITHOUT_CLASSIFICATION	3.055033361509976E-5	IMPLEMENTATION
// Make sure this is not a directory or unavailable in some way	WITHOUT_CLASSIFICATION	0.9999894181629674	WITHOUT_CLASSIFICATION	1.0581837032526301E-5	IMPLEMENTATION
// signed short, native	WITHOUT_CLASSIFICATION	0.9998525220831227	WITHOUT_CLASSIFICATION	1.4747791687725172E-4	IMPLEMENTATION
// If we fail to find as a normal Ruby script, we try to find as an extension, // checking for a builtin first.	WITHOUT_CLASSIFICATION	0.9999777326009314	WITHOUT_CLASSIFICATION	2.2267399068677794E-5	IMPLEMENTATION
// write `I' instance var signet if class is NOT a direct subclass of Object	WITHOUT_CLASSIFICATION	0.999973992636971	WITHOUT_CLASSIFICATION	2.600736302897387E-5	IMPLEMENTATION
// if name starts with a / we're done (classloader resources won't load with an initial /)	WITHOUT_CLASSIFICATION	0.9999756018591114	WITHOUT_CLASSIFICATION	2.4398140888550435E-5	IMPLEMENTATION
// Look in classpath next (we do not use File as a test since UNC names will match) // Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")	WITHOUT_CLASSIFICATION	0.9999795007878886	WITHOUT_CLASSIFICATION	2.0499212111409452E-5	IMPLEMENTATION
/* Directories and unavailable resources are not able to open a stream. */	WITHOUT_CLASSIFICATION	0.9999507439306278	WITHOUT_CLASSIFICATION	4.9256069372235235E-5	IMPLEMENTATION
// Try to load from classpath without prefix. "A/b.rb" will not load as  // "./A/b.rb" in a jar file.	WITHOUT_CLASSIFICATION	0.9999349947985656	WITHOUT_CLASSIFICATION	6.500520143444895E-5	IMPLEMENTATION
// object has instance vars and isn't a class, get a snapshot to be marshalled // and output the ivar header here	WITHOUT_CLASSIFICATION	0.9999900528896698	WITHOUT_CLASSIFICATION	9.947110330183816E-6	IMPLEMENTATION
// flush afer whole dump is complete	WITHOUT_CLASSIFICATION	0.9996913713074896	WITHOUT_CLASSIFICATION	3.0862869251033247E-4	IMPLEMENTATION
//            write('S');	WITHOUT_CLASSIFICATION	0.999952533500689	WITHOUT_CLASSIFICATION	4.7466499310964315E-5	IMPLEMENTATION
// switch on the object's *native type*. This allows use-defined // classes that have extended core native types to piggyback on their // marshalling logic.	WITHOUT_CLASSIFICATION	0.9999683962873971	WITHOUT_CLASSIFICATION	3.160371260292265E-5	IMPLEMENTATION
// object is a custom class that extended one of the native types other than Object	WITHOUT_CLASSIFICATION	0.9999794309815839	WITHOUT_CLASSIFICATION	2.0569018416028403E-5	IMPLEMENTATION
// We do not want to capture cached methods	WITHOUT_CLASSIFICATION	0.9999205602813716	WITHOUT_CLASSIFICATION	7.94397186284709E-5	IMPLEMENTATION
// w_symbol	WITHOUT_CLASSIFICATION	0.9998418666084805	WITHOUT_CLASSIFICATION	1.5813339151952963E-4	IMPLEMENTATION
// w_unique	WITHOUT_CLASSIFICATION	0.9998414797384689	WITHOUT_CLASSIFICATION	1.5852026153103196E-4	IMPLEMENTATION
// call the proc, but not for symbols	WITHOUT_CLASSIFICATION	0.9999164795778789	WITHOUT_CLASSIFICATION	8.352042212107895E-5	IMPLEMENTATION
// Major // Minor	WITHOUT_CLASSIFICATION	0.999846125363548	WITHOUT_CLASSIFICATION	1.5387463645190425E-4	IMPLEMENTATION
// any ivars, since we don't have __attached__ ivar now	WITHOUT_CLASSIFICATION	0.9999395670425077	WITHOUT_CLASSIFICATION	6.0432957492191714E-5	IMPLEMENTATION
// "hashdef" object, a hash with a default	WITHOUT_CLASSIFICATION	0.9999647600566209	WITHOUT_CLASSIFICATION	3.52399433790656E-5	IMPLEMENTATION
// All "C" marshalled objects descend from core classes, which are all RubyObject	WITHOUT_CLASSIFICATION	0.9999634762899875	WITHOUT_CLASSIFICATION	3.652371001251339E-5	IMPLEMENTATION
// sic	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999674030771015	WITHOUT_CLASSIFICATION	3.259692289844104E-5	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999674030771015	WITHOUT_CLASSIFICATION	3.259692289844104E-5	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999674030771015	WITHOUT_CLASSIFICATION	3.259692289844104E-5	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999692087469323	WITHOUT_CLASSIFICATION	3.079125306773504E-5	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999692087469323	WITHOUT_CLASSIFICATION	3.079125306773504E-5	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999034990880055	WITHOUT_CLASSIFICATION	9.650091199457113E-5	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999034990880055	WITHOUT_CLASSIFICATION	9.650091199457113E-5	IMPLEMENTATION
/*     * If we are setting post arguments we can assume there are no pre or others     */	WITHOUT_CLASSIFICATION	0.9999943950936268	WITHOUT_CLASSIFICATION	5.604906373320749E-6	IMPLEMENTATION
// XXX: 0xffff0000 on BE?	WITHOUT_CLASSIFICATION	0.9998362074471847	WITHOUT_CLASSIFICATION	1.6379255281531035E-4	IMPLEMENTATION
// unsigned short, native	WITHOUT_CLASSIFICATION	0.9998585986434284	WITHOUT_CLASSIFICATION	1.4140135657153874E-4	IMPLEMENTATION
// int, native // long, native	WITHOUT_CLASSIFICATION	0.9998795163125411	WITHOUT_CLASSIFICATION	1.2048368745886455E-4	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999674030771015	WITHOUT_CLASSIFICATION	3.259692289844104E-5	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999674030771015	WITHOUT_CLASSIFICATION	3.259692289844104E-5	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999674030771015	WITHOUT_CLASSIFICATION	3.259692289844104E-5	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999692087469323	WITHOUT_CLASSIFICATION	3.079125306773504E-5	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999692087469323	WITHOUT_CLASSIFICATION	3.079125306773504E-5	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999692087469323	WITHOUT_CLASSIFICATION	3.079125306773504E-5	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999034990880055	WITHOUT_CLASSIFICATION	9.650091199457113E-5	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999034990880055	WITHOUT_CLASSIFICATION	9.650091199457113E-5	IMPLEMENTATION
// Look for slash, starting from 'start' position, until 'end'.	WITHOUT_CLASSIFICATION	0.9999586624584634	WITHOUT_CLASSIFICATION	4.1337541536595766E-5	IMPLEMENTATION
// Our values holder (name of variables are kept in staticScope)	WITHOUT_CLASSIFICATION	0.9999454474221563	WITHOUT_CLASSIFICATION	5.455257784371092E-5	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999832353204425	WITHOUT_CLASSIFICATION	1.676467955745405E-5	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999832353204425	WITHOUT_CLASSIFICATION	1.676467955745405E-5	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999832353204425	WITHOUT_CLASSIFICATION	1.676467955745405E-5	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999832353204425	WITHOUT_CLASSIFICATION	1.676467955745405E-5	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999832353204425	WITHOUT_CLASSIFICATION	1.676467955745405E-5	IMPLEMENTATION
// SunSignalFacade	WITHOUT_CLASSIFICATION	0.9998451061762248	WITHOUT_CLASSIFICATION	1.5489382377513515E-4	IMPLEMENTATION
// All braces pushed..	WITHOUT_CLASSIFICATION	0.9998733966326921	WITHOUT_CLASSIFICATION	1.2660336730784092E-4	IMPLEMENTATION
/* failed : try next recursion */	WITHOUT_CLASSIFICATION	0.9999027690605081	WITHOUT_CLASSIFICATION	9.723093949191217E-5	IMPLEMENTATION
// leftToken made us start as nest 1	WITHOUT_CLASSIFICATION	0.9999322652656658	WITHOUT_CLASSIFICATION	6.773473433422343E-5	IMPLEMENTATION
// are we at '**/'	WITHOUT_CLASSIFICATION	0.9998546481227112	WITHOUT_CLASSIFICATION	1.453518772887372E-4	IMPLEMENTATION
// No or mismatched braces..Move along..nothing to see here	WITHOUT_CLASSIFICATION	0.9999586243213746	WITHOUT_CLASSIFICATION	4.137567862536216E-5	IMPLEMENTATION
// not enough bytes	WITHOUT_CLASSIFICATION	0.9994480434014797	WITHOUT_CLASSIFICATION	5.519565985202342E-4	IMPLEMENTATION
// Get index of last read byte	WITHOUT_CLASSIFICATION	0.9999106667387138	WITHOUT_CLASSIFICATION	8.933326128620215E-5	IMPLEMENTATION
// skip inner braces	WITHOUT_CLASSIFICATION	0.9999104050468386	WITHOUT_CLASSIFICATION	8.959495316137067E-5	IMPLEMENTATION
/*     * Process {}'s (example: Dir.glob("{jruby,jython}/README*")      */	WITHOUT_CLASSIFICATION	0.9999758805231135	WITHOUT_CLASSIFICATION	2.4119476886575064E-5	IMPLEMENTATION
/* complete, according to Posix.2 */	WITHOUT_CLASSIFICATION	0.9998389826953913	WITHOUT_CLASSIFICATION	1.6101730460883038E-4	IMPLEMENTATION
/* Only accept an open brace if there is a close */	WITHOUT_CLASSIFICATION	0.9999587856006564	WITHOUT_CLASSIFICATION	4.121439934365737E-5	IMPLEMENTATION
/* brace to match it.  Bracket expressions must be */	WITHOUT_CLASSIFICATION	0.9998968408561197	WITHOUT_CLASSIFICATION	1.0315914388025499E-4	IMPLEMENTATION
// index of left-most brace // index of right-most brace	WITHOUT_CLASSIFICATION	0.9998973424635617	WITHOUT_CLASSIFICATION	1.0265753643832539E-4	IMPLEMENTATION
// Length check is a hack.  We should not be reeiving "" as a filename ever. 	WITHOUT_CLASSIFICATION	0.9999603778122836	WITHOUT_CLASSIFICATION	3.962218771637282E-5	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9998496433278966	WITHOUT_CLASSIFICATION	1.503566721033937E-4	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9998496433278966	WITHOUT_CLASSIFICATION	1.503566721033937E-4	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9998496433278966	WITHOUT_CLASSIFICATION	1.503566721033937E-4	IMPLEMENTATION
// Pickaxe says @ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9999346953426901	WITHOUT_CLASSIFICATION	6.5304657309891E-5	IMPLEMENTATION
// Pickaxe says @@ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9999346953426901	WITHOUT_CLASSIFICATION	6.5304657309891E-5	IMPLEMENTATION
// SimpleSampler	WITHOUT_CLASSIFICATION	0.9998449561927629	WITHOUT_CLASSIFICATION	1.5504380723708485E-4	IMPLEMENTATION
/*     * convert into longs, returning unsigned 64-bit values as signed longs     * ( num2long raises a RangeError on values > Long.MAX_VALUE )     */	WITHOUT_CLASSIFICATION	0.9999906293142878	WITHOUT_CLASSIFICATION	9.370685712164327E-6	IMPLEMENTATION
// b64_xtable for decoding Base 64	WITHOUT_CLASSIFICATION	0.9999075489235119	WITHOUT_CLASSIFICATION	9.245107648811429E-5	IMPLEMENTATION
// single precision, little-endian	WITHOUT_CLASSIFICATION	0.999900058068194	WITHOUT_CLASSIFICATION	9.994193180591079E-5	IMPLEMENTATION
// single precision, big-endian	WITHOUT_CLASSIFICATION	0.9998996961361746	WITHOUT_CLASSIFICATION	1.0030386382538106E-4	IMPLEMENTATION
// single precision, native	WITHOUT_CLASSIFICATION	0.9998697898682598	WITHOUT_CLASSIFICATION	1.3021013174011728E-4	IMPLEMENTATION
// single precision, native // single precision, native	WITHOUT_CLASSIFICATION	0.9998383552726751	WITHOUT_CLASSIFICATION	1.6164472732487916E-4	IMPLEMENTATION
// double precision, little-endian	WITHOUT_CLASSIFICATION	0.9999681467694089	WITHOUT_CLASSIFICATION	3.185323059109354E-5	IMPLEMENTATION
// double precision, big-endian	WITHOUT_CLASSIFICATION	0.9999680314075006	WITHOUT_CLASSIFICATION	3.196859249937671E-5	IMPLEMENTATION
// double precision, native	WITHOUT_CLASSIFICATION	0.9999584989121609	WITHOUT_CLASSIFICATION	4.150108783909571E-5	IMPLEMENTATION
// signed short, little-endian	WITHOUT_CLASSIFICATION	0.9998848637992614	WITHOUT_CLASSIFICATION	1.1513620073854833E-4	IMPLEMENTATION
// signed char	WITHOUT_CLASSIFICATION	0.9998491349762527	WITHOUT_CLASSIFICATION	1.5086502374734128E-4	IMPLEMENTATION
// unsigned char	WITHOUT_CLASSIFICATION	0.9998553510759687	WITHOUT_CLASSIFICATION	1.4464892403127884E-4	IMPLEMENTATION
// long, little-endian	WITHOUT_CLASSIFICATION	0.9999312575113316	WITHOUT_CLASSIFICATION	6.874248866833994E-5	IMPLEMENTATION
// long, big-endian	WITHOUT_CLASSIFICATION	0.999917186619828	WITHOUT_CLASSIFICATION	8.281338017195346E-5	IMPLEMENTATION
// unsigned int, native	WITHOUT_CLASSIFICATION	0.9998517145071096	WITHOUT_CLASSIFICATION	1.4828549289022498E-4	IMPLEMENTATION
// int, native	WITHOUT_CLASSIFICATION	0.9998280813338044	WITHOUT_CLASSIFICATION	1.7191866619557038E-4	IMPLEMENTATION
// 64-bit number, native (as fixnum)	WITHOUT_CLASSIFICATION	0.9998164138506344	WITHOUT_CLASSIFICATION	1.8358614936565275E-4	IMPLEMENTATION
// How many occurrences of 'type' we want	WITHOUT_CLASSIFICATION	0.9998825074485433	WITHOUT_CLASSIFICATION	1.1749255145665263E-4	IMPLEMENTATION
// See if we have a converter for the job...	WITHOUT_CLASSIFICATION	0.999969861833099	WITHOUT_CLASSIFICATION	3.0138166900935226E-5	IMPLEMENTATION
// Otherwise the unpack should be here...	WITHOUT_CLASSIFICATION	0.9999106920732076	WITHOUT_CLASSIFICATION	8.930792679244309E-5	IMPLEMENTATION
// Possible Checksum Byte	WITHOUT_CLASSIFICATION	0.9998754031621541	WITHOUT_CLASSIFICATION	1.2459683784587643E-4	IMPLEMENTATION
// obtain a	WITHOUT_CLASSIFICATION	0.9998413359421372	WITHOUT_CLASSIFICATION	1.5866405786281966E-4	IMPLEMENTATION
// obtain b	WITHOUT_CLASSIFICATION	0.9998424286620892	WITHOUT_CLASSIFICATION	1.5757133791079734E-4	IMPLEMENTATION
// obtain c	WITHOUT_CLASSIFICATION	0.9998426676949368	WITHOUT_CLASSIFICATION	1.573323050633192E-4	IMPLEMENTATION
// obtain d	WITHOUT_CLASSIFICATION	0.9998420179558722	WITHOUT_CLASSIFICATION	1.5798204412784385E-4	IMPLEMENTATION
/*encode.limit() - */	WITHOUT_CLASSIFICATION	0.9998683809798957	WITHOUT_CLASSIFICATION	1.3161902010433926E-4	IMPLEMENTATION
/* 1 */	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
/* 2 */	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
/* 3 */	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
/* 4 */	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
/* 5 */	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
/* 6 */	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
/* 7 */	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
// Skip all whitespace in pack format string	WITHOUT_CLASSIFICATION	0.9999445593357852	WITHOUT_CLASSIFICATION	5.544066421473799E-5	IMPLEMENTATION
// Skip embedded comments in pack format string	WITHOUT_CLASSIFICATION	0.999957409879449	WITHOUT_CLASSIFICATION	4.259012055109793E-5	IMPLEMENTATION
// In case when the number of occurences is // explicitly specified, we have to read up // the remaining garbage after the '\0' to // satisfy the requested pattern.	WITHOUT_CLASSIFICATION	0.9999951323179327	WITHOUT_CLASSIFICATION	4.867682067249513E-6	IMPLEMENTATION
//normal exit, this should be faster than a test at each iterations for string with more than //about 40 char	WITHOUT_CLASSIFICATION	0.9999716006904159	WITHOUT_CLASSIFICATION	2.8399309584148604E-5	IMPLEMENTATION
// We encountered '\0' when // were reading the buffer above, // increment the number of read bytes.	WITHOUT_CLASSIFICATION	0.9999833346333009	WITHOUT_CLASSIFICATION	1.6665366699075287E-5	IMPLEMENTATION
// MRI behavior: Contrary to what seems to be logical, // when '*' is given, MRI calculates the distance // to the end, in order to go backwards.	WITHOUT_CLASSIFICATION	0.9999914263336298	WITHOUT_CLASSIFICATION	8.573666370259718E-6	IMPLEMENTATION
// Determine how many of type are needed (default: 1)	WITHOUT_CLASSIFICATION	0.9999332313898014	WITHOUT_CLASSIFICATION	6.676861019852118E-5	IMPLEMENTATION
// 'Z' adds extra null pad (versus 'a')	WITHOUT_CLASSIFICATION	0.9998886718221321	WITHOUT_CLASSIFICATION	1.1132817786781141E-4	IMPLEMENTATION
//if the low bit is set //set the high bit of the result	WITHOUT_CLASSIFICATION	0.9999725588613577	WITHOUT_CLASSIFICATION	2.744113864229309E-5	IMPLEMENTATION
//if the index is not a multiple of 8, we are not on a byte boundary //shift the byte	WITHOUT_CLASSIFICATION	0.9999635144000291	WITHOUT_CLASSIFICATION	3.6485599971020104E-5	IMPLEMENTATION
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9999418069532532	WITHOUT_CLASSIFICATION	5.819304674684275E-5	IMPLEMENTATION
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9999418069532532	WITHOUT_CLASSIFICATION	5.819304674684275E-5	IMPLEMENTATION
//do some padding, I don't understand the padding strategy	WITHOUT_CLASSIFICATION	0.9998447175331379	WITHOUT_CLASSIFICATION	1.5528246686215326E-4	IMPLEMENTATION
// we filled up current byte; append it and create next one	WITHOUT_CLASSIFICATION	0.9999686443979617	WITHOUT_CLASSIFICATION	3.135560203824165E-5	IMPLEMENTATION
//if the index is not a multiple of 8, we are not on a byte boundary	WITHOUT_CLASSIFICATION	0.9999507807221105	WITHOUT_CLASSIFICATION	4.921927788949063E-5	IMPLEMENTATION
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9999402812999045	WITHOUT_CLASSIFICATION	5.971870009539272E-5	IMPLEMENTATION
// we don't deal with negatives.	WITHOUT_CLASSIFICATION	0.9999526129054034	WITHOUT_CLASSIFICATION	4.738709459664132E-5	IMPLEMENTATION
// populate commandline with NG-provided stuff	WITHOUT_CLASSIFICATION	0.9999393609900005	WITHOUT_CLASSIFICATION	6.063900999951469E-5	IMPLEMENTATION
// are we recursing?	WITHOUT_CLASSIFICATION	0.9998682794733948	WITHOUT_CLASSIFICATION	1.317205266051707E-4	IMPLEMENTATION
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999942491484103	WITHOUT_CLASSIFICATION	5.750851589596706E-6	IMPLEMENTATION
// default PidGetter	WITHOUT_CLASSIFICATION	0.9999683667593946	WITHOUT_CLASSIFICATION	3.163324060538713E-5	IMPLEMENTATION
// ignore and try windows version	WITHOUT_CLASSIFICATION	0.9999913813763726	WITHOUT_CLASSIFICATION	8.618623627469085E-6	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999886891700627	WITHOUT_CLASSIFICATION	1.1310829937267245E-5	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999886891700627	WITHOUT_CLASSIFICATION	1.1310829937267245E-5	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999886891700627	WITHOUT_CLASSIFICATION	1.1310829937267245E-5	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999886891700627	WITHOUT_CLASSIFICATION	1.1310829937267245E-5	IMPLEMENTATION
// try both	WITHOUT_CLASSIFICATION	0.9998940099463747	WITHOUT_CLASSIFICATION	1.0599005362527998E-4	IMPLEMENTATION
// just unix	WITHOUT_CLASSIFICATION	0.99987641528769	WITHOUT_CLASSIFICATION	1.2358471231001042E-4	IMPLEMENTATION
// just windows	WITHOUT_CLASSIFICATION	0.999895592354272	WITHOUT_CLASSIFICATION	1.0440764572804175E-4	IMPLEMENTATION
// neither	WITHOUT_CLASSIFICATION	0.9958870592301012	WITHOUT_CLASSIFICATION	0.004112940769898679	IMPLEMENTATION
// CON: popen is a case where I think we should just always shell out.	WITHOUT_CLASSIFICATION	0.9999386091444344	WITHOUT_CLASSIFICATION	6.139085556548973E-5	IMPLEMENTATION
// single string command, pass to sh to expand wildcards	WITHOUT_CLASSIFICATION	0.9999467061827424	WITHOUT_CLASSIFICATION	5.3293817257655626E-5	IMPLEMENTATION
// direct invocation of the command	WITHOUT_CLASSIFICATION	0.9999784549546858	WITHOUT_CLASSIFICATION	2.1545045314159256E-5	IMPLEMENTATION
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999505850332643	WITHOUT_CLASSIFICATION	4.941496673568205E-5	IMPLEMENTATION
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999505850332643	WITHOUT_CLASSIFICATION	4.941496673568205E-5	IMPLEMENTATION
// close process output // See JRUBY-3405; hooking up to parent process stdin caused // problems for IRB etc using stdin.	WITHOUT_CLASSIFICATION	0.9999753349384223	WITHOUT_CLASSIFICATION	2.4665061577715876E-5	IMPLEMENTATION
// ignore, we're on the way out	WITHOUT_CLASSIFICATION	0.9999891604841411	WITHOUT_CLASSIFICATION	1.083951585887166E-5	IMPLEMENTATION
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999614496998389	WITHOUT_CLASSIFICATION	3.855030016108762E-5	IMPLEMENTATION
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999594033164294	WITHOUT_CLASSIFICATION	4.059668357054369E-5	IMPLEMENTATION
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999594033164294	WITHOUT_CLASSIFICATION	4.059668357054369E-5	IMPLEMENTATION
// popen caller wants to be able to write, provide subprocess out directly	WITHOUT_CLASSIFICATION	0.9999635731488673	WITHOUT_CLASSIFICATION	3.642685113268225E-5	IMPLEMENTATION
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999366711964515	WITHOUT_CLASSIFICATION	6.332880354855345E-5	IMPLEMENTATION
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999366711964515	WITHOUT_CLASSIFICATION	6.332880354855345E-5	IMPLEMENTATION
// execute command with sh -c // this does shell expansion of wildcards	WITHOUT_CLASSIFICATION	0.9999784026153399	WITHOUT_CLASSIFICATION	2.1597384660040755E-5	IMPLEMENTATION
// We need to close the out, since some // processes would just wait for the stream // to be closed before they process its content, // and produce the output. E.g.: "cat".	WITHOUT_CLASSIFICATION	0.9999949378896712	WITHOUT_CLASSIFICATION	5.062110328831935E-6	IMPLEMENTATION
// we only close out if it's the slave stream, to avoid // closing a directly-mapped stream from parent process	WITHOUT_CLASSIFICATION	0.9999910381904241	WITHOUT_CLASSIFICATION	8.961809575863636E-6	IMPLEMENTATION
// The assumption here is that the 'in' stream provides // proper available() support. If available() always // returns 0, we'll hang!	WITHOUT_CLASSIFICATION	0.9999878633911579	WITHOUT_CLASSIFICATION	1.2136608842266146E-5	IMPLEMENTATION
// Force t3 to quit, just in case if it's stuck. // Note: On some platforms, even interrupt might not // have an effect if the thread is IO blocked.	WITHOUT_CLASSIFICATION	0.9999799705740993	WITHOUT_CLASSIFICATION	2.00294259007662E-5	IMPLEMENTATION
// Check for special shell characters [<>|] at the beginning // and end of each command word and don't run in process if we find them.	WITHOUT_CLASSIFICATION	0.9999959159671751	WITHOUT_CLASSIFICATION	4.0840328249945055E-6	IMPLEMENTATION
// Note: this method produces meaningful results // only for RubyIO objects. For everything else returns 0.	WITHOUT_CLASSIFICATION	0.9999425624757524	WITHOUT_CLASSIFICATION	5.743752424766986E-5	IMPLEMENTATION
//sequential	WITHOUT_CLASSIFICATION	0.9998480620692116	WITHOUT_CLASSIFICATION	1.5193793078841427E-4	IMPLEMENTATION
// reverse the entire area of the array selected if it's reversed.	WITHOUT_CLASSIFICATION	0.999980336644641	WITHOUT_CLASSIFICATION	1.9663355358892873E-5	IMPLEMENTATION
// do median of 7 if the array is over 200 elements.	WITHOUT_CLASSIFICATION	0.9999646349034517	WITHOUT_CLASSIFICATION	3.536509654839088E-5	IMPLEMENTATION
// if it's less than 200 do median of 3	WITHOUT_CLASSIFICATION	0.9999197468477851	WITHOUT_CLASSIFICATION	8.025315221496736E-5	IMPLEMENTATION
// SignalFacade	WITHOUT_CLASSIFICATION	0.9998478175164771	WITHOUT_CLASSIFICATION	1.5218248352288325E-4	IMPLEMENTATION
// this is the order in which MRI does these two tests	WITHOUT_CLASSIFICATION	0.9999686526080063	WITHOUT_CLASSIFICATION	3.1347391993768117E-5	IMPLEMENTATION
// this is the order in which MRI does these tests	WITHOUT_CLASSIFICATION	0.9999696762179773	WITHOUT_CLASSIFICATION	3.0323782022760592E-5	IMPLEMENTATION
// basically just forcing a TypeError here to match MRI	WITHOUT_CLASSIFICATION	0.9999186760163776	WITHOUT_CLASSIFICATION	8.132398362235801E-5	IMPLEMENTATION
// not saving DFS instance, as it will only be used once (at most) per call	WITHOUT_CLASSIFICATION	0.9997369074467211	WITHOUT_CLASSIFICATION	2.6309255327893757E-4	IMPLEMENTATION
// Args	WITHOUT_CLASSIFICATION	0.9958286035877476	WITHOUT_CLASSIFICATION	0.004171396412252299	IMPLEMENTATION
// static methods only	WITHOUT_CLASSIFICATION	0.9999317328024602	WITHOUT_CLASSIFICATION	6.82671975398026E-5	IMPLEMENTATION
//System.err.println(" calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999611620322566	WITHOUT_CLASSIFICATION	3.8837967743262364E-5	IMPLEMENTATION
// MRI 1.8.6 behavior: null byte after '%' // leads to "%" string. Null byte in // other places, like "%5\0", leads to error.	WITHOUT_CLASSIFICATION	0.9999311580181907	WITHOUT_CLASSIFICATION	6.884198180931754E-5	IMPLEMENTATION
// last index (+1) accessed by next() // last index (+1) accessed by get()	WITHOUT_CLASSIFICATION	0.9998796982635995	WITHOUT_CLASSIFICATION	1.203017364005123E-4	IMPLEMENTATION
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly.	WITHOUT_CLASSIFICATION	0.9999709404214103	WITHOUT_CLASSIFICATION	2.9059578589668636E-5	IMPLEMENTATION
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly. Version for 1.9.	WITHOUT_CLASSIFICATION	0.9999766063446803	WITHOUT_CLASSIFICATION	2.339365531967364E-5	IMPLEMENTATION
// MRI doesn't flag it as an error if width is given multiple // times as a number (but it does for *)	WITHOUT_CLASSIFICATION	0.9999414682013663	WITHOUT_CLASSIFICATION	5.85317986336128E-5	IMPLEMENTATION
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999755609706817	WITHOUT_CLASSIFICATION	2.443902931828786E-5	IMPLEMENTATION
// MRI 1.8.5-p12 doesn't support 1-char strings, but // YARV 0.4.1 does. I don't think it hurts to include // this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])	WITHOUT_CLASSIFICATION	0.9999148545697213	WITHOUT_CLASSIFICATION	8.51454302786998E-5	IMPLEMENTATION
// 'd' and 'i' are the same	WITHOUT_CLASSIFICATION	0.9999130851438754	WITHOUT_CLASSIFICATION	8.691485612455551E-5	IMPLEMENTATION
// 'u' with space or plus flags is same as 'd'	WITHOUT_CLASSIFICATION	0.9998946103269638	WITHOUT_CLASSIFICATION	1.0538967303626436E-4	IMPLEMENTATION
// We depart here from strict adherence to MRI code, as MRI // uses C-sprintf, in part, to format numeric output, while // we'll use Java's numeric formatting code (and our own).	WITHOUT_CLASSIFICATION	0.9999680974435673	WITHOUT_CLASSIFICATION	3.190255643278292E-5	IMPLEMENTATION
// skip '-' in bytes, will add where appropriate	WITHOUT_CLASSIFICATION	0.999912255861983	WITHOUT_CLASSIFICATION	8.774413801696954E-5	IMPLEMENTATION
// ..	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
// the 1 is for the stripped sign char	WITHOUT_CLASSIFICATION	0.999963104257963	WITHOUT_CLASSIFICATION	3.689574203702977E-5	IMPLEMENTATION
// FIXME: what is correct 'recv' argument? // (this does produce the desired behavior)	WITHOUT_CLASSIFICATION	0.9998012804588445	WITHOUT_CLASSIFICATION	1.9871954115534973E-4	IMPLEMENTATION
// gotta have at least a zero...	WITHOUT_CLASSIFICATION	0.9999129023735117	WITHOUT_CLASSIFICATION	8.70976264882363E-5	IMPLEMENTATION
// OK, we now have the significand in digits[0...nDigits] // and the exponent in exponent.  We're ready to format.	WITHOUT_CLASSIFICATION	0.9999632928664032	WITHOUT_CLASSIFICATION	3.670713359669613E-5	IMPLEMENTATION
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9998202054821874	WITHOUT_CLASSIFICATION	1.7979451781247787E-4	IMPLEMENTATION
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9998433445618184	WITHOUT_CLASSIFICATION	1.566554381815436E-4	IMPLEMENTATION
//System.err.println(" stringToLong/reading c=" + data[s]);	WITHOUT_CLASSIFICATION	0.9999526019929755	WITHOUT_CLASSIFICATION	4.7398007024375137E-5	IMPLEMENTATION
//System.err.println(" stringToLong/converted c=" + c);	WITHOUT_CLASSIFICATION	0.9999550135198944	WITHOUT_CLASSIFICATION	4.498648010562258E-5	IMPLEMENTATION
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9998202054821874	WITHOUT_CLASSIFICATION	1.7979451781247787E-4	IMPLEMENTATION
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9998433445618184	WITHOUT_CLASSIFICATION	1.566554381815436E-4	IMPLEMENTATION
// precision for G/g includes integer digits	WITHOUT_CLASSIFICATION	0.9999185313272029	WITHOUT_CLASSIFICATION	8.146867279714027E-5	IMPLEMENTATION
// deal with length/width	WITHOUT_CLASSIFICATION	0.999878918304377	WITHOUT_CLASSIFICATION	1.2108169562285271E-4	IMPLEMENTATION
// deal with length/width	WITHOUT_CLASSIFICATION	0.999878918304377	WITHOUT_CLASSIFICATION	1.2108169562285271E-4	IMPLEMENTATION
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999438327003849	WITHOUT_CLASSIFICATION	5.616729961506145E-5	IMPLEMENTATION
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999897284557541	WITHOUT_CLASSIFICATION	1.0271544245902201E-5	IMPLEMENTATION
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9998679022243461	WITHOUT_CLASSIFICATION	1.320977756538609E-4	IMPLEMENTATION
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9998415686846777	WITHOUT_CLASSIFICATION	1.5843131532233462E-4	IMPLEMENTATION
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9999152944900055	WITHOUT_CLASSIFICATION	8.470550999457569E-5	IMPLEMENTATION
// MRI behavior: In this mode // trailing zeroes are removed: // 1.500E+05 -> 1.5E+05 	WITHOUT_CLASSIFICATION	0.9998876964335182	WITHOUT_CLASSIFICATION	1.1230356648186853E-4	IMPLEMENTATION
// '.' is printed	WITHOUT_CLASSIFICATION	0.9998481412836712	WITHOUT_CLASSIFICATION	1.5185871632886623E-4	IMPLEMENTATION
// all precision numebers printed	WITHOUT_CLASSIFICATION	0.9998962292879138	WITHOUT_CLASSIFICATION	1.0377071208626074E-4	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9998838488841543	WITHOUT_CLASSIFICATION	1.1615111584577783E-4	IMPLEMENTATION
// '.'	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
// decimal form, like (but not *just* like!) 'f'	WITHOUT_CLASSIFICATION	0.9998675232816137	WITHOUT_CLASSIFICATION	1.3247671838635677E-4	IMPLEMENTATION
// digits array shifted, update all	WITHOUT_CLASSIFICATION	0.9999377741848583	WITHOUT_CLASSIFICATION	6.222581514169014E-5	IMPLEMENTATION
// will have a trailing '.' // g fills trailing zeroes if #	WITHOUT_CLASSIFICATION	0.9999179412471975	WITHOUT_CLASSIFICATION	8.205875280248417E-5	IMPLEMENTATION
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9998891417369874	WITHOUT_CLASSIFICATION	1.1085826301260146E-4	IMPLEMENTATION
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9998891417369874	WITHOUT_CLASSIFICATION	1.1085826301260146E-4	IMPLEMENTATION
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9998858036306105	WITHOUT_CLASSIFICATION	1.1419636938948236E-4	IMPLEMENTATION
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9998858036306105	WITHOUT_CLASSIFICATION	1.1419636938948236E-4	IMPLEMENTATION
// digits arr shifted, update all	WITHOUT_CLASSIFICATION	0.9999312029193512	WITHOUT_CLASSIFICATION	6.879708064881014E-5	IMPLEMENTATION
// (1|intlen).prec	WITHOUT_CLASSIFICATION	0.9998415686846777	WITHOUT_CLASSIFICATION	1.5843131532233462E-4	IMPLEMENTATION
// (1|intlen)	WITHOUT_CLASSIFICATION	0.9998415686846777	WITHOUT_CLASSIFICATION	1.5843131532233462E-4	IMPLEMENTATION
// will have a trailing '.'	WITHOUT_CLASSIFICATION	0.9999174873428502	WITHOUT_CLASSIFICATION	8.251265714979659E-5	IMPLEMENTATION
// fill up the rest with zeroes	WITHOUT_CLASSIFICATION	0.999934786261594	WITHOUT_CLASSIFICATION	6.521373840594948E-5	IMPLEMENTATION
//System.err.println(" main/len=" + len);	WITHOUT_CLASSIFICATION	0.9999405428737433	WITHOUT_CLASSIFICATION	5.945712625662987E-5	IMPLEMENTATION
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9998679022243461	WITHOUT_CLASSIFICATION	1.320977756538609E-4	IMPLEMENTATION
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9998415686846777	WITHOUT_CLASSIFICATION	1.5843131532233462E-4	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9998838488841543	WITHOUT_CLASSIFICATION	1.1615111584577783E-4	IMPLEMENTATION
// '.'	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
// equivalent to MRI case '\0':	WITHOUT_CLASSIFICATION	0.9998693321508748	WITHOUT_CLASSIFICATION	1.306678491252954E-4	IMPLEMENTATION
// '.' and all precision digits printed	WITHOUT_CLASSIFICATION	0.9998990460540471	WITHOUT_CLASSIFICATION	1.0095394595289239E-4	IMPLEMENTATION
// \v	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
// dangling '%' char	WITHOUT_CLASSIFICATION	0.9998452710315375	WITHOUT_CLASSIFICATION	1.547289684623893E-4	IMPLEMENTATION
// main while loop (offset < length)	WITHOUT_CLASSIFICATION	0.9999139402422327	WITHOUT_CLASSIFICATION	8.605975776724637E-5	IMPLEMENTATION
// debugging code, keeping for now	WITHOUT_CLASSIFICATION	0.9999090009779544	WITHOUT_CLASSIFICATION	9.099902204554455E-5	IMPLEMENTATION
// MRI rounds up on nnn5nnn, but not nnn5 -- // except for when they do	WITHOUT_CLASSIFICATION	0.9998631697894077	WITHOUT_CLASSIFICATION	1.3683021059230255E-4	IMPLEMENTATION
// "%.0f" % 0.99	WITHOUT_CLASSIFICATION	0.9998415686846777	WITHOUT_CLASSIFICATION	1.5843131532233462E-4	IMPLEMENTATION
// limit the length of negatives if possible (also faster)	WITHOUT_CLASSIFICATION	0.9999449390197331	WITHOUT_CLASSIFICATION	5.506098026693483E-5	IMPLEMENTATION
// negative values	WITHOUT_CLASSIFICATION	0.9999517051057767	WITHOUT_CLASSIFICATION	4.829489422326732E-5	IMPLEMENTATION
// calculation for negatives when %u specified // for values >= Integer.MIN_VALUE * 2, MRI uses (the equivalent of) //   long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val // for smaller values, BigInteger math is required to conform to MRI's // result.	WITHOUT_CLASSIFICATION	0.9999903315633659	WITHOUT_CLASSIFICATION	9.668436634087232E-6	IMPLEMENTATION
// relatively cheap test for 32-bit values	WITHOUT_CLASSIFICATION	0.999951633822999	WITHOUT_CLASSIFICATION	4.836617700088792E-5	IMPLEMENTATION
// no such luck...	WITHOUT_CLASSIFICATION	0.9998888694409971	WITHOUT_CLASSIFICATION	1.1113055900285521E-4	IMPLEMENTATION
// ok, now it gets expensive...	WITHOUT_CLASSIFICATION	0.999863370017192	WITHOUT_CLASSIFICATION	1.3662998280802464E-4	IMPLEMENTATION
// go through negated powers of 32 until we find one small enough 	WITHOUT_CLASSIFICATION	0.9999157947936137	WITHOUT_CLASSIFICATION	8.420520638625684E-5	IMPLEMENTATION
// add to the corresponding positive power of 32 for the result. // meaningful? no. conformant? yes. I just write the code...	WITHOUT_CLASSIFICATION	0.9999939987085702	WITHOUT_CLASSIFICATION	6.0012914297142645E-6	IMPLEMENTATION
/* constant vector a */	WITHOUT_CLASSIFICATION	0.9998882430676173	WITHOUT_CLASSIFICATION	1.1175693238279835E-4	IMPLEMENTATION
/* most significant w-r bits */	WITHOUT_CLASSIFICATION	0.9998734037334408	WITHOUT_CLASSIFICATION	1.2659626655923338E-4	IMPLEMENTATION
/* least significant r bits */	WITHOUT_CLASSIFICATION	0.9998777954007626	WITHOUT_CLASSIFICATION	1.2220459923731886E-4	IMPLEMENTATION
// state[j] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999214277117108	WITHOUT_CLASSIFICATION	7.857228828925256E-5	IMPLEMENTATION
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999214277117108	WITHOUT_CLASSIFICATION	7.857228828925256E-5	IMPLEMENTATION
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999214277117108	WITHOUT_CLASSIFICATION	7.857228828925256E-5	IMPLEMENTATION
/* MSB is 1; assuring non-zero initial array */	WITHOUT_CLASSIFICATION	0.9999167381961085	WITHOUT_CLASSIFICATION	8.326180389146177E-5	IMPLEMENTATION
/* Tempering */	WITHOUT_CLASSIFICATION	0.9998477889851802	WITHOUT_CLASSIFICATION	1.5221101481975997E-4	IMPLEMENTATION
// MRI behavior: Week values are monotonous. // So, weeks that effectively belong to previous year, // will get the value of 0, not 52 or 53, as in Java.	WITHOUT_CLASSIFICATION	0.9999888729448565	WITHOUT_CLASSIFICATION	1.1127055143455464E-5	IMPLEMENTATION
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999405570658544	WITHOUT_CLASSIFICATION	5.9442934145536536E-5	IMPLEMENTATION
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999405570658544	WITHOUT_CLASSIFICATION	5.9442934145536536E-5	IMPLEMENTATION
// \v	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
//System.err.println("getSign()");	WITHOUT_CLASSIFICATION	0.999940528523716	WITHOUT_CLASSIFICATION	5.947147628411972E-5	IMPLEMENTATION
//System.err.println(" getSign/" + sign);	WITHOUT_CLASSIFICATION	0.999940635270983	WITHOUT_CLASSIFICATION	5.9364729016982154E-5	IMPLEMENTATION
//System.err.println("figureOutBase()/base=" + base);	WITHOUT_CLASSIFICATION	0.9999419506881919	WITHOUT_CLASSIFICATION	5.804931180809997E-5	IMPLEMENTATION
//System.err.println(" figureOutBase/base=" + base);	WITHOUT_CLASSIFICATION	0.9999412102841806	WITHOUT_CLASSIFICATION	5.8789715819425194E-5	IMPLEMENTATION
//System.err.println("calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999574831735977	WITHOUT_CLASSIFICATION	4.251682640231002E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9961455906382863	WITHOUT_CLASSIFICATION	0.0038544093617136313	IMPLEMENTATION
//System.err.println(" stringToLong=" + val);	WITHOUT_CLASSIFICATION	0.9999498531079073	WITHOUT_CLASSIFICATION	5.014689209276011E-5	IMPLEMENTATION
// no number	WITHOUT_CLASSIFICATION	0.9998992489800026	WITHOUT_CLASSIFICATION	1.0075101999743234E-4	IMPLEMENTATION
// trailing garbage	WITHOUT_CLASSIFICATION	0.9998605144146269	WITHOUT_CLASSIFICATION	1.394855853731318E-4	IMPLEMENTATION
//System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);	WITHOUT_CLASSIFICATION	0.9999530533993353	WITHOUT_CLASSIFICATION	4.694660066474298E-5	IMPLEMENTATION
// it was not found at all!	WITHOUT_CLASSIFICATION	0.9999270295820674	WITHOUT_CLASSIFICATION	7.297041793268542E-5	IMPLEMENTATION
// can be overridden to be informed when objects are removed	WITHOUT_CLASSIFICATION	0.9999660324746007	WITHOUT_CLASSIFICATION	3.3967525399313854E-5	IMPLEMENTATION
// we reached the end of a list	WITHOUT_CLASSIFICATION	0.9999228682739307	WITHOUT_CLASSIFICATION	7.713172606927166E-5	IMPLEMENTATION
// goto next bucket	WITHOUT_CLASSIFICATION	0.9998580737188214	WITHOUT_CLASSIFICATION	1.4192628117857815E-4	IMPLEMENTATION
// we reached the end	WITHOUT_CLASSIFICATION	0.9999171400593465	WITHOUT_CLASSIFICATION	8.285994065358638E-5	IMPLEMENTATION
// entry is the first element of this bucket	WITHOUT_CLASSIFICATION	0.9999676533172612	WITHOUT_CLASSIFICATION	3.234668273879928E-5	IMPLEMENTATION
// states	WITHOUT_CLASSIFICATION	0.9974353313653779	WITHOUT_CLASSIFICATION	0.0025646686346221218	IMPLEMENTATION
// remove leading whitespace (includes _ for lax) // get sign, if any	WITHOUT_CLASSIFICATION	0.999983846197251	WITHOUT_CLASSIFICATION	1.6153802748958807E-5	IMPLEMENTATION
// optimistic pass - calculate value as digits are processed // digits - lax rules // decimal digits - lax rules // exponent sign/digits - lax rules // digits - strict rules // decimal digits - strict rules // exponent sign/digits - strict rules // complete calculation if possible	WITHOUT_CLASSIFICATION	0.9999772606579757	WITHOUT_CLASSIFICATION	2.2739342024303946E-5	IMPLEMENTATION
// fields used for direct (optimistic) calculation // number of significant digits, updated as parsed // zeroes that may go to significand or exponent // offset of decimal pt from start (-1 -> no decimal) // significand, updated as parsed // exponent, updated as parsed	WITHOUT_CLASSIFICATION	0.9999945907561983	WITHOUT_CLASSIFICATION	5.409243801639744E-6	IMPLEMENTATION
// drop through for sign	WITHOUT_CLASSIFICATION	0.9999046692701908	WITHOUT_CLASSIFICATION	9.533072980909492E-5	IMPLEMENTATION
// switch // will use this if we have to go back the slow way	WITHOUT_CLASSIFICATION	0.9999641194853846	WITHOUT_CLASSIFICATION	3.5880514615391305E-5	IMPLEMENTATION
// drop through for non-strict digits	WITHOUT_CLASSIFICATION	0.9999017541579739	WITHOUT_CLASSIFICATION	9.824584202616988E-5	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999502139417121	WITHOUT_CLASSIFICATION	4.978605828784233E-5	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.999994251577124	WITHOUT_CLASSIFICATION	5.748422876059497E-6	IMPLEMENTATION
// no digits, go calc (will return +/- 0.0 for lax)	WITHOUT_CLASSIFICATION	0.9999405464182856	WITHOUT_CLASSIFICATION	5.94535817144608E-5	IMPLEMENTATION
// ignore leading zeroes	WITHOUT_CLASSIFICATION	0.9999894895655347	WITHOUT_CLASSIFICATION	1.0510434465309652E-5	IMPLEMENTATION
// just save a count of zeroes for now; if no digit // ends up following them, they'll be applied to the // exponent rather than the significand (and our max // length for optimistic calc).	WITHOUT_CLASSIFICATION	0.9999858185592133	WITHOUT_CLASSIFICATION	1.4181440786718425E-5	IMPLEMENTATION
// ok, got a non-zero, have to own up to our horded zeroes	WITHOUT_CLASSIFICATION	0.9999181010977174	WITHOUT_CLASSIFICATION	8.189890228264548E-5	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9998677256195327	WITHOUT_CLASSIFICATION	1.322743804671536E-4	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9998677256195327	WITHOUT_CLASSIFICATION	1.322743804671536E-4	IMPLEMENTATION
// oh, well, it was worth a try. go let // Double/FloatingDecimal handle it 	WITHOUT_CLASSIFICATION	0.9998399467358162	WITHOUT_CLASSIFICATION	1.6005326418384823E-4	IMPLEMENTATION
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999921175816312	WITHOUT_CLASSIFICATION	7.882418368757483E-6	IMPLEMENTATION
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999921175816312	WITHOUT_CLASSIFICATION	7.882418368757483E-6	IMPLEMENTATION
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999506136412649	WITHOUT_CLASSIFICATION	4.938635873517169E-5	IMPLEMENTATION
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999506136412649	WITHOUT_CLASSIFICATION	4.938635873517169E-5	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999237535955265	WITHOUT_CLASSIFICATION	7.624640447343558E-5	IMPLEMENTATION
// first non_underscore char must be digit	WITHOUT_CLASSIFICATION	0.9999390990255621	WITHOUT_CLASSIFICATION	6.0900974437963895E-5	IMPLEMENTATION
// no dec digits, end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999336818821416	WITHOUT_CLASSIFICATION	6.631811785841951E-5	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.9999152033721717	WITHOUT_CLASSIFICATION	8.47966278283851E-5	IMPLEMENTATION
// difficult case, send to Double/FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999057124531631	WITHOUT_CLASSIFICATION	9.428754683691597E-5	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9958745320667561	WITHOUT_CLASSIFICATION	0.004125467933243896	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9958745320667561	WITHOUT_CLASSIFICATION	0.004125467933243896	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999502139417121	WITHOUT_CLASSIFICATION	4.978605828784233E-5	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999502139417121	WITHOUT_CLASSIFICATION	4.978605828784233E-5	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999502139417121	WITHOUT_CLASSIFICATION	4.978605828784233E-5	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.999994251577124	WITHOUT_CLASSIFICATION	5.748422876059497E-6	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9998677256195327	WITHOUT_CLASSIFICATION	1.322743804671536E-4	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9998677256195327	WITHOUT_CLASSIFICATION	1.322743804671536E-4	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9998677256195327	WITHOUT_CLASSIFICATION	1.322743804671536E-4	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999237535955265	WITHOUT_CLASSIFICATION	7.624640447343558E-5	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999237535955265	WITHOUT_CLASSIFICATION	7.624640447343558E-5	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999237535955265	WITHOUT_CLASSIFICATION	7.624640447343558E-5	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.9999152033721717	WITHOUT_CLASSIFICATION	8.47966278283851E-5	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.9999152033721717	WITHOUT_CLASSIFICATION	8.47966278283851E-5	IMPLEMENTATION
// lax (str.to_f) allows underscores between e/E and sign	WITHOUT_CLASSIFICATION	0.9998828428990498	WITHOUT_CLASSIFICATION	1.171571009500887E-4	IMPLEMENTATION
// switch // for // no exponent, so drop through for calculation	WITHOUT_CLASSIFICATION	0.9999749372458382	WITHOUT_CLASSIFICATION	2.5062754161869247E-5	IMPLEMENTATION
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999602699653354	WITHOUT_CLASSIFICATION	3.973003466453741E-5	IMPLEMENTATION
// TODO: it's not clear to me why, in FloatingDecimal, the // "slop" calculation performed above for positive exponents // isn't used for negative exponents as well. Will find out...	WITHOUT_CLASSIFICATION	0.943627353458534	WITHOUT_CLASSIFICATION	0.05637264654146604	IMPLEMENTATION
// no digits, error	WITHOUT_CLASSIFICATION	0.9998884759815758	WITHOUT_CLASSIFICATION	1.1152401842426955E-4	IMPLEMENTATION
// too big for us	WITHOUT_CLASSIFICATION	0.9998729051097228	WITHOUT_CLASSIFICATION	1.2709489027722454E-4	IMPLEMENTATION
// too big for us	WITHOUT_CLASSIFICATION	0.9998729051097228	WITHOUT_CLASSIFICATION	1.2709489027722454E-4	IMPLEMENTATION
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999405358894388	WITHOUT_CLASSIFICATION	5.946411056132245E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9961455906382863	WITHOUT_CLASSIFICATION	0.0038544093617136313	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9961455906382863	WITHOUT_CLASSIFICATION	0.0038544093617136313	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9961455906382863	WITHOUT_CLASSIFICATION	0.0038544093617136313	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9961455906382863	WITHOUT_CLASSIFICATION	0.0038544093617136313	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9961455906382863	WITHOUT_CLASSIFICATION	0.0038544093617136313	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.999975746511474	WITHOUT_CLASSIFICATION	2.4253488525985632E-5	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.999975746511474	WITHOUT_CLASSIFICATION	2.4253488525985632E-5	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.999975746511474	WITHOUT_CLASSIFICATION	2.4253488525985632E-5	IMPLEMENTATION
// first char must be digit	WITHOUT_CLASSIFICATION	0.9999424514483308	WITHOUT_CLASSIFICATION	5.7548551669150254E-5	IMPLEMENTATION
// no dec digits after '.', error for strict	WITHOUT_CLASSIFICATION	0.999932545682145	WITHOUT_CLASSIFICATION	6.745431785500696E-5	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.999994251577124	WITHOUT_CLASSIFICATION	5.748422876059497E-6	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999237535955265	WITHOUT_CLASSIFICATION	7.624640447343558E-5	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999237535955265	WITHOUT_CLASSIFICATION	7.624640447343558E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9961455906382863	WITHOUT_CLASSIFICATION	0.0038544093617136313	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9961455906382863	WITHOUT_CLASSIFICATION	0.0038544093617136313	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.999975746511474	WITHOUT_CLASSIFICATION	2.4253488525985632E-5	IMPLEMENTATION
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999405358894388	WITHOUT_CLASSIFICATION	5.946411056132245E-5	IMPLEMENTATION
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999055257864503	WITHOUT_CLASSIFICATION	9.447421354965264E-5	IMPLEMENTATION
// switch //while	WITHOUT_CLASSIFICATION	0.9999337082416722	WITHOUT_CLASSIFICATION	6.629175832790483E-5	IMPLEMENTATION
/*     * All the positive powers of 10 that can be     * represented exactly in double/float.     * (From sun.misc.FloatingDecimal.java)     */	WITHOUT_CLASSIFICATION	0.9999845303546101	WITHOUT_CLASSIFICATION	1.5469645389896894E-5	IMPLEMENTATION
// Zlib behavior: negative win_bits means no header and no checksum.	WITHOUT_CLASSIFICATION	0.9999586517023019	WITHOUT_CLASSIFICATION	4.134829769796346E-5	IMPLEMENTATION
// rb_enc_mbclen	WITHOUT_CLASSIFICATION	0.9998415686846777	WITHOUT_CLASSIFICATION	1.5843131532233462E-4	IMPLEMENTATION
// rb_enc_precise_mbclen	WITHOUT_CLASSIFICATION	0.9998684291406269	WITHOUT_CLASSIFICATION	1.31570859373077E-4	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9998415770766831	WITHOUT_CLASSIFICATION	1.584229233168815E-4	IMPLEMENTATION
// arg cannot be negative	WITHOUT_CLASSIFICATION	0.9999394683431274	WITHOUT_CLASSIFICATION	6.053165687265646E-5	IMPLEMENTATION
// NoFunctionalitySignalFacade	WITHOUT_CLASSIFICATION	0.9999034684599425	WITHOUT_CLASSIFICATION	9.653154005747257E-5	IMPLEMENTATION
// Change visibility so others can see it	WITHOUT_CLASSIFICATION	0.9999372528288003	WITHOUT_CLASSIFICATION	6.274717119966592E-5	IMPLEMENTATION
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9998549978632716	WITHOUT_CLASSIFICATION	1.4500213672836437E-4	IMPLEMENTATION
// strip off "_dot_rb" for .rb files	WITHOUT_CLASSIFICATION	0.9999203285437819	WITHOUT_CLASSIFICATION	7.967145621812455E-5	IMPLEMENTATION
// Makes sure the key is not already in the hashtable.	WITHOUT_CLASSIFICATION	0.9999810596958174	WITHOUT_CLASSIFICATION	1.8940304182645663E-5	IMPLEMENTATION
// Rehash the table if the threshold is exceeded	WITHOUT_CLASSIFICATION	0.9999634688175209	WITHOUT_CLASSIFICATION	3.653118247912788E-5	IMPLEMENTATION
// Creates the new entry.	WITHOUT_CLASSIFICATION	0.999959058586681	WITHOUT_CLASSIFICATION	4.094141331902257E-5	IMPLEMENTATION
// next entry to return // current slot // current entry	WITHOUT_CLASSIFICATION	0.9999658143032649	WITHOUT_CLASSIFICATION	3.418569673507119E-5	IMPLEMENTATION
// advance to first entry	WITHOUT_CLASSIFICATION	0.9999318746491401	WITHOUT_CLASSIFICATION	6.812535085976178E-5	IMPLEMENTATION
// The reason why we need the stream is to be able to invoke available() on it. // STDIN in Java is non-interruptible, non-selectable, and attempt to read // on such stream might lead to thread being blocked without *any* way to unblock it. // That's where available() comes it, so at least we could check whether // anything is available to be read without blocking.	WITHOUT_CLASSIFICATION	0.9999965271401888	WITHOUT_CLASSIFICATION	3.472859811117493E-6	IMPLEMENTATION
/*package-protected*/	WITHOUT_CLASSIFICATION	0.9999035821596736	WITHOUT_CLASSIFICATION	9.641784032648091E-5	IMPLEMENTATION
// raw file URL, just open directly	WITHOUT_CLASSIFICATION	0.9999052048904797	WITHOUT_CLASSIFICATION	9.479510952030488E-5	IMPLEMENTATION
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999051347533687	WITHOUT_CLASSIFICATION	9.486524663121669E-5	IMPLEMENTATION
// if refcount is at or below zero, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999376727889865	WITHOUT_CLASSIFICATION	6.232721101341577E-5	IMPLEMENTATION
// if channel is already closed, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999586303094757	WITHOUT_CLASSIFICATION	4.13696905243918E-5	IMPLEMENTATION
// otherwise decrement and possibly close as normal	WITHOUT_CLASSIFICATION	0.9999386880063541	WITHOUT_CLASSIFICATION	6.131199364586198E-5	IMPLEMENTATION
// r/w buffer // are we reading or writing?	WITHOUT_CLASSIFICATION	0.9998953888242756	WITHOUT_CLASSIFICATION	1.046111757243212E-4	IMPLEMENTATION
// this constructor is used by fdopen, so we don't increment descriptor ref count	WITHOUT_CLASSIFICATION	0.9999586164432955	WITHOUT_CLASSIFICATION	4.13835567043452E-5	IMPLEMENTATION
// unread back	WITHOUT_CLASSIFICATION	0.9998450248375739	WITHOUT_CLASSIFICATION	1.5497516242621255E-4	IMPLEMENTATION
// iterate over remainder of buffer until we find a match	WITHOUT_CLASSIFICATION	0.9999523785721985	WITHOUT_CLASSIFICATION	4.762142780145568E-5	IMPLEMENTATION
// terminate and advance buffer when we find our char	WITHOUT_CLASSIFICATION	0.9999178565621399	WITHOUT_CLASSIFICATION	8.214343786009146E-5	IMPLEMENTATION
// no match, append remainder of buffer and continue with next block	WITHOUT_CLASSIFICATION	0.9999646264911245	WITHOUT_CLASSIFICATION	3.5373508875525595E-5	IMPLEMENTATION
// found a match above, check if remaining separator characters match, appending as we go	WITHOUT_CLASSIFICATION	0.9999873018969991	WITHOUT_CLASSIFICATION	1.2698103000861745E-5	IMPLEMENTATION
// // Check file size - special files in /proc have zero size and need to be // handled by the generic read path. //	WITHOUT_CLASSIFICATION	0.9999681404421614	WITHOUT_CLASSIFICATION	3.18595578385959E-5	IMPLEMENTATION
// // Copy any buffered data (including ungetc byte) //	WITHOUT_CLASSIFICATION	0.9999166754090162	WITHOUT_CLASSIFICATION	8.332459098372052E-5	IMPLEMENTATION
// // Now read unbuffered directly from the file //	WITHOUT_CLASSIFICATION	0.9999669282586888	WITHOUT_CLASSIFICATION	3.3071741311160165E-5	IMPLEMENTATION
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999055257864503	WITHOUT_CLASSIFICATION	9.447421354965264E-5	IMPLEMENTATION
// // Need to clamp source (buffer) size to avoid overrun //	WITHOUT_CLASSIFICATION	0.9998970812029626	WITHOUT_CLASSIFICATION	1.0291879703744892E-4	IMPLEMENTATION
// not closing from finalize	WITHOUT_CLASSIFICATION	0.9997183701751128	WITHOUT_CLASSIFICATION	2.816298248872058E-4	IMPLEMENTATION
// clear runtime so it doesn't get stuck in memory (JRUBY-2933)	WITHOUT_CLASSIFICATION	0.9999644079771416	WITHOUT_CLASSIFICATION	3.5592022858510265E-5	IMPLEMENTATION
// silence	WITHOUT_CLASSIFICATION	0.9958095602533922	WITHOUT_CLASSIFICATION	0.004190439746607733	IMPLEMENTATION
// silence	WITHOUT_CLASSIFICATION	0.9958095602533922	WITHOUT_CLASSIFICATION	0.004190439746607733	IMPLEMENTATION
// Don't bother	WITHOUT_CLASSIFICATION	0.9998372212292972	WITHOUT_CLASSIFICATION	1.6277877070284755E-4	IMPLEMENTATION
// Don't bother	WITHOUT_CLASSIFICATION	0.9998372212292972	WITHOUT_CLASSIFICATION	1.6277877070284755E-4	IMPLEMENTATION
// For Sockets, only write as much as will fit.	WITHOUT_CLASSIFICATION	0.9999050385401632	WITHOUT_CLASSIFICATION	9.496145983679828E-5	IMPLEMENTATION
// Correct position for read / write buffering (we could invalidate, but expensive)	WITHOUT_CLASSIFICATION	0.999953911930296	WITHOUT_CLASSIFICATION	4.608806970393502E-5	IMPLEMENTATION
// Adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999014642835407	WITHOUT_CLASSIFICATION	9.853571645937767E-5	IMPLEMENTATION
// for SEEK_CUR, need to adjust for buffered data	WITHOUT_CLASSIFICATION	0.9998945207253468	WITHOUT_CLASSIFICATION	1.0547927465316852E-4	IMPLEMENTATION
// libc flushes writes on any read from the actual file, so we flush here	WITHOUT_CLASSIFICATION	0.9999531197924874	WITHOUT_CLASSIFICATION	4.688020751269471E-5	IMPLEMENTATION
// we have read ahead, and need to back up	WITHOUT_CLASSIFICATION	0.9998885101012231	WITHOUT_CLASSIFICATION	1.1148989877685276E-4	IMPLEMENTATION
// 128K seems to be the minimum at which the stat+seek is faster than reallocation	WITHOUT_CLASSIFICATION	0.9999743771139861	WITHOUT_CLASSIFICATION	2.562288601393028E-5	IMPLEMENTATION
// // limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations //	WITHOUT_CLASSIFICATION	0.9999522759968237	WITHOUT_CLASSIFICATION	4.7724003176322695E-5	IMPLEMENTATION
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999444865698724	WITHOUT_CLASSIFICATION	5.551343012748339E-5	IMPLEMENTATION
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999795067809996	WITHOUT_CLASSIFICATION	2.0493219000451778E-5	IMPLEMENTATION
// // Avoid double-copying for reads that are larger than the buffer size //	WITHOUT_CLASSIFICATION	0.999966531442961	WITHOUT_CLASSIFICATION	3.346855703896054E-5	IMPLEMENTATION
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999533655999846	WITHOUT_CLASSIFICATION	4.663440001530704E-5	IMPLEMENTATION
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999533655999846	WITHOUT_CLASSIFICATION	4.663440001530704E-5	IMPLEMENTATION
// // Avoid double-copying for reads that are larger than the buffer size, or // the destination is a direct buffer. //	WITHOUT_CLASSIFICATION	0.9999880297227729	WITHOUT_CLASSIFICATION	1.1970277227160489E-5	IMPLEMENTATION
// // We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating // a huge temporary native buffer, when doing reads into a heap buffer // If the dst buffer is direct, then no need to limit. //	WITHOUT_CLASSIFICATION	0.9999371771124705	WITHOUT_CLASSIFICATION	6.28228875295505E-5	IMPLEMENTATION
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999474290794313	WITHOUT_CLASSIFICATION	5.257092056864323E-5	IMPLEMENTATION
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999474290794313	WITHOUT_CLASSIFICATION	5.257092056864323E-5	IMPLEMENTATION
// Doesn't fit in buffer. Write immediately. // ensure nothing left to write	WITHOUT_CLASSIFICATION	0.999982368091362	WITHOUT_CLASSIFICATION	1.7631908638059624E-5	IMPLEMENTATION
// truncate can't lengthen files, so we save position, seek/write, and go back	WITHOUT_CLASSIFICATION	0.999965693465827	WITHOUT_CLASSIFICATION	3.430653417310158E-5	IMPLEMENTATION
// how far ahead we are when reading	WITHOUT_CLASSIFICATION	0.9999004932839555	WITHOUT_CLASSIFICATION	9.950671604461894E-5	IMPLEMENTATION
// if the read buffer is ahead, back up	WITHOUT_CLASSIFICATION	0.9999617308928209	WITHOUT_CLASSIFICATION	3.826910717904369E-5	IMPLEMENTATION
// close without removing from finalizers	WITHOUT_CLASSIFICATION	0.9999505094742002	WITHOUT_CLASSIFICATION	4.949052579984623E-5	IMPLEMENTATION
// putting a bit back, so we're not at EOF anymore	WITHOUT_CLASSIFICATION	0.9999597890222406	WITHOUT_CLASSIFICATION	4.0210977759396786E-5	IMPLEMENTATION
// save the ungot	WITHOUT_CLASSIFICATION	0.9999282259788494	WITHOUT_CLASSIFICATION	7.177402115053779E-5	IMPLEMENTATION
// otherwise, we try an unbuffered read to get whatever's available	WITHOUT_CLASSIFICATION	0.9999390270259996	WITHOUT_CLASSIFICATION	6.097297400034738E-5	IMPLEMENTATION
// ignore this; select() will set the correct mode when it is finished	WITHOUT_CLASSIFICATION	0.9999954127998382	WITHOUT_CLASSIFICATION	4.587200161793881E-6	IMPLEMENTATION
// flush first	WITHOUT_CLASSIFICATION	0.9998614934337513	WITHOUT_CLASSIFICATION	1.385065662487272E-4	IMPLEMENTATION
// // Wake up any channels that became unblocked //	WITHOUT_CLASSIFICATION	0.9999017278517052	WITHOUT_CLASSIFICATION	9.827214829483944E-5	IMPLEMENTATION
// // Register any new blocking I/O requests //	WITHOUT_CLASSIFICATION	0.9999186850051194	WITHOUT_CLASSIFICATION	8.131499488059329E-5	IMPLEMENTATION
// Now clear out any previously selected channels	WITHOUT_CLASSIFICATION	0.9999752628522454	WITHOUT_CLASSIFICATION	2.4737147754592954E-5	IMPLEMENTATION
// // Wait for I/O on any channel //	WITHOUT_CLASSIFICATION	0.9999055231021803	WITHOUT_CLASSIFICATION	9.447689781967858E-5	IMPLEMENTATION
// Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'	WITHOUT_CLASSIFICATION	0.9999731314656419	WITHOUT_CLASSIFICATION	2.686853435808896E-5	IMPLEMENTATION
// Java requires "w" for creating a file that does not exist	WITHOUT_CLASSIFICATION	0.9999379968974774	WITHOUT_CLASSIFICATION	6.200310252265025E-5	IMPLEMENTATION
// seek to force underlying buffer to flush	WITHOUT_CLASSIFICATION	0.9998926660665239	WITHOUT_CLASSIFICATION	1.0733393347610491E-4	IMPLEMENTATION
// seek to force read buffer to invalidate	WITHOUT_CLASSIFICATION	0.999882562589386	WITHOUT_CLASSIFICATION	1.1743741061408144E-4	IMPLEMENTATION
/*        result = eval("arr = Array::['c', 200]; p arr");        assertEquals("[\"c\", 200]", result);        result = eval("arr = Array.['d', 200]; p arr");        assertEquals("[\"d\", 200]", result);        */	WITHOUT_CLASSIFICATION	0.9999878755090631	WITHOUT_CLASSIFICATION	1.2124490936921034E-5	IMPLEMENTATION
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999575338435575	WITHOUT_CLASSIFICATION	4.246615644259321E-5	IMPLEMENTATION
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.8405453686735588	WITHOUT_CLASSIFICATION	0.15945463132644117	IMPLEMENTATION
// make sure the pipe stream is set to null	WITHOUT_CLASSIFICATION	0.9999687531136557	WITHOUT_CLASSIFICATION	3.124688634425493E-5	IMPLEMENTATION
// make sure the main stream is set to null	WITHOUT_CLASSIFICATION	0.9999620752392612	WITHOUT_CLASSIFICATION	3.7924760738816374E-5	IMPLEMENTATION
// first try our custom-generated Unsafe	WITHOUT_CLASSIFICATION	0.9997843696162692	WITHOUT_CLASSIFICATION	2.1563038373084261E-4	IMPLEMENTATION
// then try Sun's Unsafe	WITHOUT_CLASSIFICATION	0.9999080639933263	WITHOUT_CLASSIFICATION	9.193600667363751E-5	IMPLEMENTATION
// if we get here, the class and field exist; construct our Unsafe impl // that calls it directly	WITHOUT_CLASSIFICATION	0.9999775989765566	WITHOUT_CLASSIFICATION	2.240102344345281E-5	IMPLEMENTATION
// else leave it null	WITHOUT_CLASSIFICATION	0.9998879258008859	WITHOUT_CLASSIFICATION	1.1207419911411334E-4	IMPLEMENTATION
// TypeMatcher	WITHOUT_CLASSIFICATION	0.9998459922777344	WITHOUT_CLASSIFICATION	1.540077222655168E-4	IMPLEMENTATION
// This is now needed, since module Java // isn't in by default	WITHOUT_CLASSIFICATION	0.9999542520841419	WITHOUT_CLASSIFICATION	4.574791585802671E-5	IMPLEMENTATION
// Iterate over the RubyHash keySet, simultaneously iterating over the values()	WITHOUT_CLASSIFICATION	0.9999625262039025	WITHOUT_CLASSIFICATION	3.747379609753116E-5	IMPLEMENTATION
// Get the value from the map via the key	WITHOUT_CLASSIFICATION	0.9999881141507169	WITHOUT_CLASSIFICATION	1.1885849283112294E-5	IMPLEMENTATION
// Get the value from the map via the values iterator	WITHOUT_CLASSIFICATION	0.9999923499515815	WITHOUT_CLASSIFICATION	7.650048418523114E-6	IMPLEMENTATION
// Check the 2 values obtained via different means	WITHOUT_CLASSIFICATION	0.9999558519389842	WITHOUT_CLASSIFICATION	4.4148061015772084E-5	IMPLEMENTATION
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.999965012000209	WITHOUT_CLASSIFICATION	3.498799979087358E-5	IMPLEMENTATION
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.999965012000209	WITHOUT_CLASSIFICATION	3.498799979087358E-5	IMPLEMENTATION
// Check the entry.setValue values come back out ok	WITHOUT_CLASSIFICATION	0.9999642438828072	WITHOUT_CLASSIFICATION	3.575611719280632E-5	IMPLEMENTATION
// If we're running from within an IDE we may not have // the .rb files in our classpath. Try to find them // in the filesystem instead.	WITHOUT_CLASSIFICATION	0.999989836055724	WITHOUT_CLASSIFICATION	1.0163944275996929E-5	IMPLEMENTATION
//assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); //assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));	WITHOUT_CLASSIFICATION	0.9998997708846159	WITHOUT_CLASSIFICATION	1.002291153840147E-4	IMPLEMENTATION
// Init	WITHOUT_CLASSIFICATION	0.9961828066801627	WITHOUT_CLASSIFICATION	0.0038171933198371624	IMPLEMENTATION
// Block	WITHOUT_CLASSIFICATION	0.9958272130057174	WITHOUT_CLASSIFICATION	0.004172786994282663	IMPLEMENTATION
// Copy constructor	WITHOUT_CLASSIFICATION	0.9998956546796165	WITHOUT_CLASSIFICATION	1.0434532038352742E-4	IMPLEMENTATION
// presumably this require should fail	WITHOUT_CLASSIFICATION	0.9998371371279364	WITHOUT_CLASSIFICATION	1.6286287206369475E-4	IMPLEMENTATION
// JRUBY-646 // presumably this require should fail	WITHOUT_CLASSIFICATION	0.9998314804706451	WITHOUT_CLASSIFICATION	1.6851952935489271E-4	IMPLEMENTATION
// Test that requiring a normal Java class raises an error (JRUBY-3214	WITHOUT_CLASSIFICATION	0.9999626560215615	WITHOUT_CLASSIFICATION	3.734397843856904E-5	IMPLEMENTATION
// ok	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
// Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods // from Ruby so they are not really unused).	WITHOUT_CLASSIFICATION	0.9999599337454241	WITHOUT_CLASSIFICATION	4.006625457588363E-5	IMPLEMENTATION
//load should work several times in a row	WITHOUT_CLASSIFICATION	0.999839509528634	WITHOUT_CLASSIFICATION	1.604904713660351E-4	IMPLEMENTATION
//reset the $loadTestvar	WITHOUT_CLASSIFICATION	0.9998979966615648	WITHOUT_CLASSIFICATION	1.0200333843531525E-4	IMPLEMENTATION
//call throwException via JRuby	WITHOUT_CLASSIFICATION	0.9999361330362533	WITHOUT_CLASSIFICATION	6.386696374667483E-5	IMPLEMENTATION
// Notify the calling thread that we're about to go to sleep the first time	WITHOUT_CLASSIFICATION	0.9999771429171793	WITHOUT_CLASSIFICATION	2.2857082820623157E-5	IMPLEMENTATION
// wait for the go signal	WITHOUT_CLASSIFICATION	0.9999277716575729	WITHOUT_CLASSIFICATION	7.22283424271349E-5	IMPLEMENTATION
// run ten separate calls into Ruby, with delay and explicit GC	WITHOUT_CLASSIFICATION	0.9999293300008006	WITHOUT_CLASSIFICATION	7.066999919935376E-5	IMPLEMENTATION
// wait until thread has initialized	WITHOUT_CLASSIFICATION	0.9999373853674535	WITHOUT_CLASSIFICATION	6.261463254650684E-5	IMPLEMENTATION
// notify thread to proceed	WITHOUT_CLASSIFICATION	0.9998885456760963	WITHOUT_CLASSIFICATION	1.1145432390368189E-4	IMPLEMENTATION
// wait until thread has completed	WITHOUT_CLASSIFICATION	0.9997805975488675	WITHOUT_CLASSIFICATION	2.1940245113260363E-4	IMPLEMENTATION
// we do preand post load outside the "body" versions to pre-prepare // and pre-push the dynamic scope we need for lastline	WITHOUT_CLASSIFICATION	0.9999325154249226	WITHOUT_CLASSIFICATION	6.748457507738483E-5	IMPLEMENTATION
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999499119817945	WITHOUT_CLASSIFICATION	5.008801820548468E-5	IMPLEMENTATION
// MRI behavior: raise ArgumentError for 'unknown command' before // checking number of args.	WITHOUT_CLASSIFICATION	0.9999794096856499	WITHOUT_CLASSIFICATION	2.059031435015253E-5	IMPLEMENTATION
// if any exceptions were raised, we fail	WITHOUT_CLASSIFICATION	0.9999487953567588	WITHOUT_CLASSIFICATION	5.120464324117676E-5	IMPLEMENTATION
// there should only be one more thread in thread group than before we started	WITHOUT_CLASSIFICATION	0.9999484334748783	WITHOUT_CLASSIFICATION	5.1566525121648903E-5	IMPLEMENTATION
// construct a new cache with thread's classloader and no limit	WITHOUT_CLASSIFICATION	0.9999478689807872	WITHOUT_CLASSIFICATION	5.213101921287438E-5	IMPLEMENTATION
//        Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); //        Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();	WITHOUT_CLASSIFICATION	0.999979792472888	WITHOUT_CLASSIFICATION	2.020752711199577E-5	IMPLEMENTATION
//        assertSame(script1, script2);	WITHOUT_CLASSIFICATION	0.9999636605259977	WITHOUT_CLASSIFICATION	3.6339474002250304E-5	IMPLEMENTATION
// void methods should work	WITHOUT_CLASSIFICATION	0.9998571947419829	WITHOUT_CLASSIFICATION	1.428052580170733E-4	IMPLEMENTATION
// methods with required = 4 or higher should bind and be callable using reflection // JRUBY-3649	WITHOUT_CLASSIFICATION	0.9999445547057462	WITHOUT_CLASSIFICATION	5.5445294253777284E-5	IMPLEMENTATION
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.999992538841191	WITHOUT_CLASSIFICATION	7.461158808910627E-6	IMPLEMENTATION
// Ensure we have a new interpreter for each test. Previous we were using the //  same interpreter which caused problems as soon as one test failed.	WITHOUT_CLASSIFICATION	0.9999826030568391	WITHOUT_CLASSIFICATION	1.7396943161013845E-5	IMPLEMENTATION
// Without a flush Ant will miss some of our output	WITHOUT_CLASSIFICATION	0.999901579414952	WITHOUT_CLASSIFICATION	9.842058504807529E-5	IMPLEMENTATION
// assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());	WITHOUT_CLASSIFICATION	0.9999142005076274	WITHOUT_CLASSIFICATION	8.579949237255508E-5	IMPLEMENTATION
//        int n = 10;	WITHOUT_CLASSIFICATION	0.9999501642800548	WITHOUT_CLASSIFICATION	4.9835719945259983E-5	IMPLEMENTATION
// there might be more test classes in a single file, so we iterate over them	WITHOUT_CLASSIFICATION	0.9999771472782067	WITHOUT_CLASSIFICATION	2.2852721793213717E-5	IMPLEMENTATION
//No ClassCastException!	WITHOUT_CLASSIFICATION	0.9999366960541719	WITHOUT_CLASSIFICATION	6.33039458280968E-5	IMPLEMENTATION
// value equality	WITHOUT_CLASSIFICATION	0.9999669885207424	WITHOUT_CLASSIFICATION	3.301147925755628E-5	IMPLEMENTATION
// identity equality	WITHOUT_CLASSIFICATION	0.9998919451799845	WITHOUT_CLASSIFICATION	1.0805482001548575E-4	IMPLEMENTATION
// bench straight-up integer fib(30)	WITHOUT_CLASSIFICATION	0.9998798308533544	WITHOUT_CLASSIFICATION	1.2016914664563922E-4	IMPLEMENTATION
// bench Integer fib	WITHOUT_CLASSIFICATION	0.9998434328205634	WITHOUT_CLASSIFICATION	1.565671794366361E-4	IMPLEMENTATION
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9998682057184937	WITHOUT_CLASSIFICATION	1.3179428150629125E-4	IMPLEMENTATION
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9998682057184937	WITHOUT_CLASSIFICATION	1.3179428150629125E-4	IMPLEMENTATION
// bench fixnum-boxed fib	WITHOUT_CLASSIFICATION	0.9998679022243461	WITHOUT_CLASSIFICATION	1.320977756538609E-4	IMPLEMENTATION
// bench straight-up long fib(30)	WITHOUT_CLASSIFICATION	0.9998745146519062	WITHOUT_CLASSIFICATION	1.2548534809370127E-4	IMPLEMENTATION
// bench Long fib	WITHOUT_CLASSIFICATION	0.9998421924733557	WITHOUT_CLASSIFICATION	1.578075266443181E-4	IMPLEMENTATION
// skip this one, probably no 'ls' (windows)	WITHOUT_CLASSIFICATION	0.999937149402939	WITHOUT_CLASSIFICATION	6.28505970610201E-5	IMPLEMENTATION
// start off with a neutral parent	WITHOUT_CLASSIFICATION	0.9999543742752873	WITHOUT_CLASSIFICATION	4.562572471263799E-5	IMPLEMENTATION
/*            public class Hello {                public static String getMessage() {                    return ".....";                }            }            */	WITHOUT_CLASSIFICATION	0.9999987119505999	WITHOUT_CLASSIFICATION	1.288049400103656E-6	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999479085352848	WITHOUT_CLASSIFICATION	5.209146471511656E-5	IMPLEMENTATION
// Note: We can't use file.exists() to check whether the symlink // exists or not, because that method returns false for existing // but broken symlink. So, we try without the existence check, // but in the try-catch block. // MRI behavior: symlink? on broken symlink should return true.	WITHOUT_CLASSIFICATION	0.9999969508852938	WITHOUT_CLASSIFICATION	3.049114706294692E-6	IMPLEMENTATION
// We are creating a new IO object that shares the same // IOHandler (and fileno).	WITHOUT_CLASSIFICATION	0.9999441001274794	WITHOUT_CLASSIFICATION	5.5899872520720646E-5	IMPLEMENTATION
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999097318348058	WITHOUT_CLASSIFICATION	9.02681651941994E-5	IMPLEMENTATION
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9999112139914689	WITHOUT_CLASSIFICATION	8.878600853115004E-5	IMPLEMENTATION
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999666415861678	WITHOUT_CLASSIFICATION	3.3358413832355226E-5	IMPLEMENTATION
// Translate "x || y" --> "x = (is_true(x) ? x : y)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, true, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.999950711790156	WITHOUT_CLASSIFICATION	4.9288209843916427E-5	IMPLEMENTATION
// // Force the client socket to be blocking //	WITHOUT_CLASSIFICATION	0.9999314126476222	WITHOUT_CLASSIFICATION	6.858735237785092E-5	IMPLEMENTATION
// Additional context surrounding tokens that both the lexer and // grammar use.	WITHOUT_CLASSIFICATION	0.9999340937077632	WITHOUT_CLASSIFICATION	6.590629223676734E-5	IMPLEMENTATION
// Enebo:  c can never be antrhign but '.' // Why did I put this here?	WITHOUT_CLASSIFICATION	0.9997899351016992	WITHOUT_CLASSIFICATION	2.1006489830086621E-4	IMPLEMENTATION
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.999981406159651	WITHOUT_CLASSIFICATION	1.8593840348942786E-5	IMPLEMENTATION
//[C,C] //[C, boolean]	WITHOUT_CLASSIFICATION	0.9999156937070309	WITHOUT_CLASSIFICATION	8.430629296910125E-5	IMPLEMENTATION
// Label for the start of the closure (used to implement redo) // Label for the end of the closure (used to implement retry)	WITHOUT_CLASSIFICATION	0.9986487497071761	WITHOUT_CLASSIFICATION	0.0013512502928238863	IMPLEMENTATION
// ignore; job was cancelled // FIXME: is this ok?	WITHOUT_CLASSIFICATION	0.9999646757124359	WITHOUT_CLASSIFICATION	3.532428756405371E-5	IMPLEMENTATION
//                    // check arity //                    checkArity(mv, scope);	WITHOUT_CLASSIFICATION	0.9999742346082716	WITHOUT_CLASSIFICATION	2.57653917282621E-5	IMPLEMENTATION
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9999386822339174	WITHOUT_CLASSIFICATION	6.131776608268452E-5	IMPLEMENTATION
// we take the first method found as our "n" method, since for any non-specific // arity they'll all error the same. If an actual "n" method is created, we // use that.	WITHOUT_CLASSIFICATION	0.9999841967899065	WITHOUT_CLASSIFICATION	1.580321009351315E-5	IMPLEMENTATION
// Used by our duck-typification of Proc into interface types, to allow // coercing a simple proc into an interface parameter.	WITHOUT_CLASSIFICATION	0.9999856682717506	WITHOUT_CLASSIFICATION	1.4331728249435974E-5	IMPLEMENTATION
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999470748288747	WITHOUT_CLASSIFICATION	5.292517112530858E-5	IMPLEMENTATION
// it's either as converted as we can make it via above logic or it's // not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.999935559357895	WITHOUT_CLASSIFICATION	6.444064210498907E-5	IMPLEMENTATION
// package scheme 2: separate module for each full package name, constructed  // from the camel-cased package segments: Java::JavaLang::Object, 	WITHOUT_CLASSIFICATION	0.9999841796456458	WITHOUT_CLASSIFICATION	1.5820354354187975E-5	IMPLEMENTATION
// // construct the proxy method //	WITHOUT_CLASSIFICATION	0.9999460871433123	WITHOUT_CLASSIFICATION	5.391285668756595E-5	IMPLEMENTATION
// line 159 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999252836556783	WITHOUT_CLASSIFICATION	7.471634432160775E-5	IMPLEMENTATION
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999438106109876	WITHOUT_CLASSIFICATION	5.618938901241264E-5	IMPLEMENTATION
// line 152 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999252836556783	WITHOUT_CLASSIFICATION	7.471634432160775E-5	IMPLEMENTATION
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999927180593039	WITHOUT_CLASSIFICATION	7.281940696087333E-6	IMPLEMENTATION
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999438106109876	WITHOUT_CLASSIFICATION	5.618938901241264E-5	IMPLEMENTATION
// We only need to pass in current scope if we are evaluating as a block (which // is only done for evals).  We need to pass this in so that we can appropriately scope // down to captured scopes when we are parsing.	WITHOUT_CLASSIFICATION	0.9999493383116232	WITHOUT_CLASSIFICATION	5.066168837680955E-5	IMPLEMENTATION
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999755609706817	WITHOUT_CLASSIFICATION	2.443902931828786E-5	IMPLEMENTATION
// A place to store that special hiding space that bindings need to implement things like: // eval("a = 1", binding); eval("p a").  All binding instances must get access to this // hidden shared scope.  We store it here.  This will be null if no binding has yet // been called.	WITHOUT_CLASSIFICATION	0.9652474055846821	WITHOUT_CLASSIFICATION	0.034752594415317854	IMPLEMENTATION
// TODO: make it 16 now ? // MUST be power of 2!	WITHOUT_CLASSIFICATION	0.8557124635577718	WITHOUT_CLASSIFICATION	0.14428753644222828	IMPLEMENTATION
// check visibility // dup method	WITHOUT_CLASSIFICATION	0.9999786187511467	WITHOUT_CLASSIFICATION	2.1381248853407134E-5	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999832353204425	WITHOUT_CLASSIFICATION	1.676467955745405E-5	IMPLEMENTATION
// unsigned int, native // unsigned long, native	WITHOUT_CLASSIFICATION	0.9998182435722545	WITHOUT_CLASSIFICATION	1.8175642774549352E-4	IMPLEMENTATION
//need padding //I'm fairly sure there is a library call to create a //string filled with a given char with a given length but I couldn't find it	WITHOUT_CLASSIFICATION	0.9999912694291174	WITHOUT_CLASSIFICATION	8.730570882565815E-6	IMPLEMENTATION
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999897284557541	WITHOUT_CLASSIFICATION	1.0271544245902201E-5	IMPLEMENTATION
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999575338435575	WITHOUT_CLASSIFICATION	4.246615644259321E-5	IMPLEMENTATION
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999602699653354	WITHOUT_CLASSIFICATION	3.973003466453741E-5	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999838155487664	WITHOUT_CLASSIFICATION	1.618445123368361E-5	IMPLEMENTATION
// Estimate the square root with the foremost 62 bits of squarD // bi and scale are a tandem	WITHOUT_CLASSIFICATION	0.9999039307241588	WITHOUT_CLASSIFICATION	9.606927584115292E-5	IMPLEMENTATION
// captures // begin and end are used when not groups defined // source string	WITHOUT_CLASSIFICATION	0.999961289316964	WITHOUT_CLASSIFICATION	3.871068303599911E-5	IMPLEMENTATION
// // INSTANCE VARIABLE RUBY METHODS //	WITHOUT_CLASSIFICATION	0.9998834004570589	WITHOUT_CLASSIFICATION	1.1659954294106076E-4	IMPLEMENTATION
// switch // while	WITHOUT_CLASSIFICATION	0.9999218757435205	WITHOUT_CLASSIFICATION	7.81242564795539E-5	IMPLEMENTATION
// For nodes do not have their own scope so we pass null to indicate this. // 'For's are implemented as blocks in evaluation, but they have no scope so we // just deal with this lack of scope throughout its lifespan.  We should probably // change the way this works to get rid of multiple null checks.	WITHOUT_CLASSIFICATION	0.9986902734860267	WITHOUT_CLASSIFICATION	0.0013097265139732897	IMPLEMENTATION
// This field is used during argument processing to avoid putting RubyArray // instances that are purely for utility purposes into ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999857723255668	WITHOUT_CLASSIFICATION	1.422767443326432E-5	IMPLEMENTATION
// Parent container for this context (can be dynamic!!) // If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure // List of IR instructions for this method	WITHOUT_CLASSIFICATION	0.999988418129898	WITHOUT_CLASSIFICATION	1.158187010199021E-5	IMPLEMENTATION
// Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = false    //    beq(v1, false, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999392560478464	WITHOUT_CLASSIFICATION	6.074395215369156E-5	IMPLEMENTATION
// expected	WITHOUT_CLASSIFICATION	0.999944260624634	WITHOUT_CLASSIFICATION	5.573937536603692E-5	IMPLEMENTATION
// Do nothing	WITHOUT_CLASSIFICATION	0.9999751854439226	WITHOUT_CLASSIFICATION	2.4814556077361123E-5	IMPLEMENTATION
// constructor	WITHOUT_CLASSIFICATION	0.9999110134151014	WITHOUT_CLASSIFICATION	8.898658489868534E-5	IMPLEMENTATION
// If a line is followed by a blank line put // it back.	WITHOUT_CLASSIFICATION	0.9999080932826121	WITHOUT_CLASSIFICATION	9.190671738795222E-5	IMPLEMENTATION
/* $>: default output handle */	WITHOUT_CLASSIFICATION	0.9999511133232944	WITHOUT_CLASSIFICATION	4.888667670554195E-5	IMPLEMENTATION
// line 423	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 486	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// Signal uses sun.misc.* classes, this is not allowed // in the security-sensitive environments	WITHOUT_CLASSIFICATION	0.999985884244523	WITHOUT_CLASSIFICATION	1.4115755477095912E-5	IMPLEMENTATION
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999538259489136	WITHOUT_CLASSIFICATION	4.6174051086523773E-5	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999025777223158	WITHOUT_CLASSIFICATION	9.742227768410012E-5	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999025777223158	WITHOUT_CLASSIFICATION	9.742227768410012E-5	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9998910778335558	WITHOUT_CLASSIFICATION	1.0892216644421054E-4	IMPLEMENTATION
// if there's no receiver, evaluate and pass in the superclass, or // pass self if it no superclass	WITHOUT_CLASSIFICATION	0.9999870505323325	WITHOUT_CLASSIFICATION	1.2949467667440372E-5	IMPLEMENTATION
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.999778684220316	WITHOUT_CLASSIFICATION	2.21315779683948E-4	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9333230184927425	WITHOUT_CLASSIFICATION	0.06667698150725745	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9333230184927425	WITHOUT_CLASSIFICATION	0.06667698150725745	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9333230184927425	WITHOUT_CLASSIFICATION	0.06667698150725745	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9333230184927425	WITHOUT_CLASSIFICATION	0.06667698150725745	IMPLEMENTATION
// Decrease value to hit upper range.  	WITHOUT_CLASSIFICATION	0.9999452539514831	WITHOUT_CLASSIFICATION	5.474604851691739E-5	IMPLEMENTATION
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9998301208671839	WITHOUT_CLASSIFICATION	1.6987913281606195E-4	IMPLEMENTATION
// "else" body	WITHOUT_CLASSIFICATION	0.9998415686846777	WITHOUT_CLASSIFICATION	1.5843131532233462E-4	IMPLEMENTATION
// done // done // done // Nothing to do for 1.8 // done // done // done // done // done // done // done? // done // done // done // done // done // done // done // done // done // done // done //            case DEFINEDNODE: return buildDefined(node, m); // Incomplete // done // done // done // done // done // done // done // done //            case ENSURENODE: return buildEnsureNode(node, m); // DEFERRED // done // done // done // done //            case FLIPNODE: return buildFlip(node, m); // SSS FIXME: What code generates this AST? // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done? // done // done // done // done // done // done -- partially //            case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); // DEFERRED SSS FIXME: What code generates this AST? // done //            case POSTEXENODE: return buildPostExe(node, m); // DEFERRED //            case PREEXENODE: return buildPreExe(node, m); // DEFERRED // done?? // done	WITHOUT_CLASSIFICATION	0.9999527575496616	WITHOUT_CLASSIFICATION	4.724245033844373E-5	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.999855109221339	WITHOUT_CLASSIFICATION	1.4489077866100251E-4	IMPLEMENTATION
/* $+: string matches last paren. */	WITHOUT_CLASSIFICATION	0.9999369299485632	WITHOUT_CLASSIFICATION	6.307005143685731E-5	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.999872743273026	WITHOUT_CLASSIFICATION	1.2725672697398832E-4	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.999872743273026	WITHOUT_CLASSIFICATION	1.2725672697398832E-4	IMPLEMENTATION
// Ruby code frequently uses a platform check to choose "NUL:" on windows // but since that check doesn't work well on JRuby, we help it out	WITHOUT_CLASSIFICATION	0.999957476256519	WITHOUT_CLASSIFICATION	4.252374348098095E-5	IMPLEMENTATION
/* 10! */	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
//            case RESCUENODE: return buildRescue(node, m); // DEFERRED //            case RETRYNODE: return buildRetry(node, m); // DEFERRED // done	WITHOUT_CLASSIFICATION	0.999968412474306	WITHOUT_CLASSIFICATION	3.158752569402265E-5	IMPLEMENTATION
// Is this instruction live or dead?  During optimization passes, if this instruction // causes no side-effects and the result of the instruction is not needed by anyone else, // we can remove this instruction altogether without affecting program correctness.	WITHOUT_CLASSIFICATION	0.9985459007565095	WITHOUT_CLASSIFICATION	0.0014540992434905074	IMPLEMENTATION
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999194080340462	WITHOUT_CLASSIFICATION	8.059196595382649E-5	IMPLEMENTATION
// first, iterate over all required args	WITHOUT_CLASSIFICATION	0.9999521775951056	WITHOUT_CLASSIFICATION	4.782240489443512E-5	IMPLEMENTATION
// // Determine if the parameter might be passed as a 32bit int parameter. // This just applies to buffer/pointer types. //	WITHOUT_CLASSIFICATION	0.9999925217763398	WITHOUT_CLASSIFICATION	7.478223660158125E-6	IMPLEMENTATION
//Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());	WITHOUT_CLASSIFICATION	0.9999000871399528	WITHOUT_CLASSIFICATION	9.991286004723004E-5	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9998415686846777	WITHOUT_CLASSIFICATION	1.5843131532233462E-4	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9998415686846777	WITHOUT_CLASSIFICATION	1.5843131532233462E-4	IMPLEMENTATION
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999927180593039	WITHOUT_CLASSIFICATION	7.281940696087333E-6	IMPLEMENTATION
// line 449	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 495	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// Management/monitoring	WITHOUT_CLASSIFICATION	0.9998783597771028	WITHOUT_CLASSIFICATION	1.2164022289710477E-4	IMPLEMENTATION
// if we've found the last char of the separator, // and we've found at least as many characters as separator length, // and the last n characters of our buffer match the separator, we're done	WITHOUT_CLASSIFICATION	0.9999972195165897	WITHOUT_CLASSIFICATION	2.780483410344949E-6	IMPLEMENTATION
/* 14! */	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
// Process any set of annotations // No supported options	WITHOUT_CLASSIFICATION	0.9999451917403519	WITHOUT_CLASSIFICATION	5.4808259648191485E-5	IMPLEMENTATION
// add to the jitted methods set	WITHOUT_CLASSIFICATION	0.999965708680003	WITHOUT_CLASSIFICATION	3.429131999692122E-5	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.9999332316763917	WITHOUT_CLASSIFICATION	6.676832360827948E-5	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.9999332316763917	WITHOUT_CLASSIFICATION	6.676832360827948E-5	IMPLEMENTATION
//            case SCLASSNODE: return buildSClass(node, m); // DEFERRED // done // done // done // done // done // done // done // done //            case UNDEFNODE: return buildUndef(node, m); // DEFERRED // done //            case VALIASNODE: return buildVAlias(node, m); // DEFERRED // done // done	WITHOUT_CLASSIFICATION	0.9999699267595745	WITHOUT_CLASSIFICATION	3.0073240425541094E-5	IMPLEMENTATION
// // Adding a post-invoke for the cb result serves to both keep it alive // until after the function returns, and allows us to clean up the native // trampoline early, instead of letting them accumulate until a GC run //	WITHOUT_CLASSIFICATION	0.999992789660197	WITHOUT_CLASSIFICATION	7.210339803023722E-6	IMPLEMENTATION
/* The Java method doesn't care what class it is, but we need to               know what to convert it to, so we use the object's own class.               If that doesn't help, we use String to force a call to the               object's "to_s" method. */	WITHOUT_CLASSIFICATION	0.9999283953591505	WITHOUT_CLASSIFICATION	7.160464084957642E-5	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.999925456526908	WITHOUT_CLASSIFICATION	7.454347309196265E-5	IMPLEMENTATION
// Atomic integers for symbol and method IDs	WITHOUT_CLASSIFICATION	0.9998459202606528	WITHOUT_CLASSIFICATION	1.5407973934716045E-4	IMPLEMENTATION
/* 18! */	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9999632149526103	WITHOUT_CLASSIFICATION	3.678504738975225E-5	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999470210895157	WITHOUT_CLASSIFICATION	5.2978910484279435E-5	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999470210895157	WITHOUT_CLASSIFICATION	5.2978910484279435E-5	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999470210895157	WITHOUT_CLASSIFICATION	5.2978910484279435E-5	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999470210895157	WITHOUT_CLASSIFICATION	5.2978910484279435E-5	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999845767406251	WITHOUT_CLASSIFICATION	1.5423259374854437E-5	IMPLEMENTATION
/*      * This method takes as input a map of operands to their values, and outputs     * the result of this instruction.     *     * If the value map provides a value for any of the instruction's operands     * the expectation is that the operand will be replaced with the simplified value.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify.     *     * @param valueMap Mapping from operands to their simplified values     * @returns simplified result / output of this instruction     */	WITHOUT_CLASSIFICATION	0.9999960692964387	WITHOUT_CLASSIFICATION	3.930703561357144E-6	IMPLEMENTATION
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9998690037778631	WITHOUT_CLASSIFICATION	1.309962221368787E-4	IMPLEMENTATION
// An atomic long for generating DynamicMethod serial numbers	WITHOUT_CLASSIFICATION	0.9998805789610061	WITHOUT_CLASSIFICATION	1.194210389939884E-4	IMPLEMENTATION
// MRI behavior: always check whether the file is writable // or not, even if we are to write 0 bytes.	WITHOUT_CLASSIFICATION	0.9999842077892358	WITHOUT_CLASSIFICATION	1.579221076428776E-5	IMPLEMENTATION
/* 22! */	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.9998866547821184	WITHOUT_CLASSIFICATION	1.1334521788167553E-4	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999090245936375	WITHOUT_CLASSIFICATION	9.097540636250354E-5	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999090245936375	WITHOUT_CLASSIFICATION	9.097540636250354E-5	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999090245936375	WITHOUT_CLASSIFICATION	9.097540636250354E-5	IMPLEMENTATION
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999169823667384	WITHOUT_CLASSIFICATION	8.301763326152897E-5	IMPLEMENTATION
// Build a new class and add it to the current scope (could be a script / module / class)	WITHOUT_CLASSIFICATION	0.9999901093619629	WITHOUT_CLASSIFICATION	9.890638037079562E-6	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.999971679360427	WITHOUT_CLASSIFICATION	2.8320639572994632E-5	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.999971679360427	WITHOUT_CLASSIFICATION	2.8320639572994632E-5	IMPLEMENTATION
// AF_INET	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
//////////////////////////////////////////////////////////////////////////// // Now we provide default impls of a number of signatures. For each arity, // we first generate a non-block version of the method, which just adds // NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can // potentially take a block, to only generate the block-receiving signature // and still avoid arg boxing. // // We then provide default implementations of each block-accepting method // that in turn call the IRubyObject[]+Block version of call. This then // finally falls back on the minimum implementation requirement for // dynamic method handles. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999997798997977	WITHOUT_CLASSIFICATION	2.2010020225020745E-7	IMPLEMENTATION
// Because we implement Java interfaces now, we need a new === that's // aware of those additional "virtual" supertypes	WITHOUT_CLASSIFICATION	0.9963793035659305	WITHOUT_CLASSIFICATION	0.0036206964340693816	IMPLEMENTATION
// BASE64	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
/* note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY         * when value is an integer less than 1.         * We treat 0 as a special case to avoid Domain error.         */	WITHOUT_CLASSIFICATION	0.9999909032283973	WITHOUT_CLASSIFICATION	9.096771602578408E-6	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.999876705722472	WITHOUT_CLASSIFICATION	1.232942775279121E-4	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.999955950979306	WITHOUT_CLASSIFICATION	4.40490206939285E-5	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.999955950979306	WITHOUT_CLASSIFICATION	4.40490206939285E-5	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999211068214087	WITHOUT_CLASSIFICATION	7.889317859134284E-5	IMPLEMENTATION
// SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode // We won't get here for argument receives!  So, buildDasgn is called for // assignments to block variables within a block.  As far as the IR is concerned, // this is just a simple copy	WITHOUT_CLASSIFICATION	0.9999907678671508	WITHOUT_CLASSIFICATION	9.23213284912395E-6	IMPLEMENTATION
// getSimplifiedOperand returns the value of this operand, fully simplified // getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away // // The value is used during optimizations and propagated through the IR.  But, it is thrown away after that. // But, the operand form is used for constructing the compound objects represented by the operand. // // Example: a = [1], b = [3,4], c = [a,b], d = [2,c] //   -- getValue(c) = [1,[3,4]];     getSimplifiedOperand(c) = [1, b] //   -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] // // Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. // So, if contents of a or b is modified, the "simplified value"s of c and d also change!  This difference // is captured by these two methods.	WITHOUT_CLASSIFICATION	0.9999999562279086	WITHOUT_CLASSIFICATION	4.3772091386367186E-8	IMPLEMENTATION
//IRubyObject protocol = args[4];	WITHOUT_CLASSIFICATION	0.999883262023626	WITHOUT_CLASSIFICATION	1.1673797637405708E-4	IMPLEMENTATION
// promise to implement three to N with block	WITHOUT_CLASSIFICATION	0.9767456280233228	WITHOUT_CLASSIFICATION	0.023254371976677245	IMPLEMENTATION
// Ruby's OMG capture all source in a Hash feature // Add each line to buffer when encountering newline or EOF for first time.	WITHOUT_CLASSIFICATION	0.9999761997668217	WITHOUT_CLASSIFICATION	2.3800233178168623E-5	IMPLEMENTATION
// carriage return	WITHOUT_CLASSIFICATION	0.999899392842155	WITHOUT_CLASSIFICATION	1.0060715784495292E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998415686846777	WITHOUT_CLASSIFICATION	1.5843131532233462E-4	IMPLEMENTATION
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9999551373030696	WITHOUT_CLASSIFICATION	4.4862696930315926E-5	IMPLEMENTATION
// String construction routines by NOT byte[] buffer and making the target String shared 	WITHOUT_CLASSIFICATION	0.9999765857756018	WITHOUT_CLASSIFICATION	2.3414224398173657E-5	IMPLEMENTATION
// insert all nodes in sequence, hash them in the final instruction // KEY	WITHOUT_CLASSIFICATION	0.9999814617610971	WITHOUT_CLASSIFICATION	1.8538238902766694E-5	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999924531860226	WITHOUT_CLASSIFICATION	7.546813977321172E-6	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999178905674544	WITHOUT_CLASSIFICATION	8.210943254570524E-5	IMPLEMENTATION
// Basic Block id // CFG that this basic block belongs to // All basic blocks have a starting label // List of non-label instructions	WITHOUT_CLASSIFICATION	0.9999348772106065	WITHOUT_CLASSIFICATION	6.512278939361427E-5	IMPLEMENTATION
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999854424096474	WITHOUT_CLASSIFICATION	1.4557590352741684E-5	IMPLEMENTATION
// For all uninitialized specific arities, we defer to the "n" method which // should raise appropriate error in all cases.	WITHOUT_CLASSIFICATION	0.999964788321266	WITHOUT_CLASSIFICATION	3.52116787340573E-5	IMPLEMENTATION
// implement is called to force this class to create stubs for all // methods in the given interface, so they'll show up in the list // of methods and be invocable without passing through method_missing	WITHOUT_CLASSIFICATION	0.9998647490409692	WITHOUT_CLASSIFICATION	1.3525095903082349E-4	IMPLEMENTATION
// CASE IR instructions are dummy instructions  // -- all when/then clauses have been converted into if-then-else blocks	WITHOUT_CLASSIFICATION	0.9999569723972556	WITHOUT_CLASSIFICATION	4.3027602744475574E-5	IMPLEMENTATION
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.999977849496796	WITHOUT_CLASSIFICATION	2.2150503204021064E-5	IMPLEMENTATION
// leave it null and fall back on our normal invocation logic	WITHOUT_CLASSIFICATION	0.9999417059806994	WITHOUT_CLASSIFICATION	5.829401930056142E-5	IMPLEMENTATION
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999792702622896	WITHOUT_CLASSIFICATION	2.0729737710355E-5	IMPLEMENTATION
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9975566421272886	WITHOUT_CLASSIFICATION	0.0024433578727113075	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999074404324435	WITHOUT_CLASSIFICATION	9.255956755646234E-5	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999074404324435	WITHOUT_CLASSIFICATION	9.255956755646234E-5	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999074404324435	WITHOUT_CLASSIFICATION	9.255956755646234E-5	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999074404324435	WITHOUT_CLASSIFICATION	9.255956755646234E-5	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999074404324435	WITHOUT_CLASSIFICATION	9.255956755646234E-5	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999074404324435	WITHOUT_CLASSIFICATION	9.255956755646234E-5	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999074404324435	WITHOUT_CLASSIFICATION	9.255956755646234E-5	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999074404324435	WITHOUT_CLASSIFICATION	9.255956755646234E-5	IMPLEMENTATION
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999485644780889	WITHOUT_CLASSIFICATION	5.143552191116111E-5	IMPLEMENTATION
/* fall through */	WITHOUT_CLASSIFICATION	0.9998863298763974	WITHOUT_CLASSIFICATION	1.136701236026429E-4	IMPLEMENTATION
// deal with case when "other" is not a string	WITHOUT_CLASSIFICATION	0.9999518060425603	WITHOUT_CLASSIFICATION	4.819395743976759E-5	IMPLEMENTATION
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999797334903959	WITHOUT_CLASSIFICATION	2.0266509604085705E-5	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999479085352848	WITHOUT_CLASSIFICATION	5.209146471511656E-5	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999479085352848	WITHOUT_CLASSIFICATION	5.209146471511656E-5	IMPLEMENTATION
// store argument count information into scope	WITHOUT_CLASSIFICATION	0.9999771948847656	WITHOUT_CLASSIFICATION	2.2805115234507547E-5	IMPLEMENTATION
// the load method is used for loading as a top-level script, and prepares appropriate scoping around the code	WITHOUT_CLASSIFICATION	0.9999646636382418	WITHOUT_CLASSIFICATION	3.533636175825459E-5	IMPLEMENTATION
// First, build assignments for specific named arguments	WITHOUT_CLASSIFICATION	0.9999478085232582	WITHOUT_CLASSIFICATION	5.2191476741831324E-5	IMPLEMENTATION
//        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } //        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }	WITHOUT_CLASSIFICATION	0.9999720367053712	WITHOUT_CLASSIFICATION	2.7963294628912515E-5	IMPLEMENTATION
// get current context	WITHOUT_CLASSIFICATION	0.9999631297823947	WITHOUT_CLASSIFICATION	3.68702176054188E-5	IMPLEMENTATION
// octal constant	WITHOUT_CLASSIFICATION	0.9998608419454614	WITHOUT_CLASSIFICATION	1.3915805453853594E-4	IMPLEMENTATION
// read	WITHOUT_CLASSIFICATION	0.9961481185434129	WITHOUT_CLASSIFICATION	0.003851881456587156	IMPLEMENTATION
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9998225695938672	WITHOUT_CLASSIFICATION	1.7743040613283812E-4	IMPLEMENTATION
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999359328374693	WITHOUT_CLASSIFICATION	6.406716253069125E-5	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999404343913487	WITHOUT_CLASSIFICATION	5.9565608651165766E-5	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999404343913487	WITHOUT_CLASSIFICATION	5.9565608651165766E-5	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999404343913487	WITHOUT_CLASSIFICATION	5.9565608651165766E-5	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998440808726581	WITHOUT_CLASSIFICATION	1.5591912734188982E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998440808726581	WITHOUT_CLASSIFICATION	1.5591912734188982E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998440808726581	WITHOUT_CLASSIFICATION	1.5591912734188982E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998440808726581	WITHOUT_CLASSIFICATION	1.5591912734188982E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998440808726581	WITHOUT_CLASSIFICATION	1.5591912734188982E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998440808726581	WITHOUT_CLASSIFICATION	1.5591912734188982E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998440808726581	WITHOUT_CLASSIFICATION	1.5591912734188982E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998440808726581	WITHOUT_CLASSIFICATION	1.5591912734188982E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998440808726581	WITHOUT_CLASSIFICATION	1.5591912734188982E-4	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999922264475907	WITHOUT_CLASSIFICATION	7.773552409357154E-6	IMPLEMENTATION
// at end	WITHOUT_CLASSIFICATION	0.9958836221145816	WITHOUT_CLASSIFICATION	0.004116377885418409	IMPLEMENTATION
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999095481174433	WITHOUT_CLASSIFICATION	9.045188255676006E-5	IMPLEMENTATION
// save blocking state	WITHOUT_CLASSIFICATION	0.9999328564776746	WITHOUT_CLASSIFICATION	6.714352232540892E-5	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998440808726581	WITHOUT_CLASSIFICATION	1.5591912734188982E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998440808726581	WITHOUT_CLASSIFICATION	1.5591912734188982E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998440808726581	WITHOUT_CLASSIFICATION	1.5591912734188982E-4	IMPLEMENTATION
// invoke static __file__	WITHOUT_CLASSIFICATION	0.999898117105432	WITHOUT_CLASSIFICATION	1.0188289456804494E-4	IMPLEMENTATION
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999618999133242	WITHOUT_CLASSIFICATION	3.8100086675817115E-5	IMPLEMENTATION
// fall back on empty env when security disallows environment var access (like in an applet)	WITHOUT_CLASSIFICATION	0.9999389143483488	WITHOUT_CLASSIFICATION	6.108565165117252E-5	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9998871062863063	WITHOUT_CLASSIFICATION	1.1289371369368253E-4	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9998871062863063	WITHOUT_CLASSIFICATION	1.1289371369368253E-4	IMPLEMENTATION
// load null block	WITHOUT_CLASSIFICATION	0.9998971608771169	WITHOUT_CLASSIFICATION	1.0283912288307246E-4	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999882549612509	WITHOUT_CLASSIFICATION	1.174503874915838E-5	IMPLEMENTATION
// nothing else to here - the module version will be // included in the class.	WITHOUT_CLASSIFICATION	0.9999932696749048	WITHOUT_CLASSIFICATION	6.730325095222981E-6	IMPLEMENTATION
// JRUBY-1000, fail early when attempting to subclass a final Java class; // solved here by adding an exception-throwing "inherited"	WITHOUT_CLASSIFICATION	0.9999666569149256	WITHOUT_CLASSIFICATION	3.334308507440139E-5	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9998447719181367	WITHOUT_CLASSIFICATION	1.5522808186323577E-4	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9998447719181367	WITHOUT_CLASSIFICATION	1.5522808186323577E-4	IMPLEMENTATION
// Translate ret = (a || b) to ret = (a ? true : b) as follows //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = true //    beq(v1, true, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.999932571556878	WITHOUT_CLASSIFICATION	6.742844312204691E-5	IMPLEMENTATION
// Initial precision is that of double numbers 2^63/2 ~ 4E18 // 63-1 an even number of number bits // precision seems 16 to 18 digits	WITHOUT_CLASSIFICATION	0.9999819101380941	WITHOUT_CLASSIFICATION	1.8089861905865766E-5	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9998291251309289	WITHOUT_CLASSIFICATION	1.7087486907107742E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.9999020479258981	WITHOUT_CLASSIFICATION	9.795207410188924E-5	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999424102813822	WITHOUT_CLASSIFICATION	5.758971861769761E-5	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999424102813822	WITHOUT_CLASSIFICATION	5.758971861769761E-5	IMPLEMENTATION
// check arity	WITHOUT_CLASSIFICATION	0.9999580542702109	WITHOUT_CLASSIFICATION	4.1945729789168596E-5	IMPLEMENTATION
// check arity	WITHOUT_CLASSIFICATION	0.9999580542702109	WITHOUT_CLASSIFICATION	4.1945729789168596E-5	IMPLEMENTATION
// create the class	WITHOUT_CLASSIFICATION	0.9999813577468952	WITHOUT_CLASSIFICATION	1.86422531046895E-5	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999687974049277	WITHOUT_CLASSIFICATION	3.120259507230706E-5	IMPLEMENTATION
// No hex value after the 'x'.	WITHOUT_CLASSIFICATION	0.9999472596679942	WITHOUT_CLASSIFICATION	5.2740332005740425E-5	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9998679022243461	WITHOUT_CLASSIFICATION	1.320977756538609E-4	IMPLEMENTATION
// Let m be the exact digits precision in an earlier! loop	WITHOUT_CLASSIFICATION	0.9999106459617189	WITHOUT_CLASSIFICATION	8.935403828110318E-5	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999600711466466	WITHOUT_CLASSIFICATION	3.9928853353353836E-5	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9958745320667561	WITHOUT_CLASSIFICATION	0.004125467933243896	IMPLEMENTATION
// Label for the start of the method // Label for the end of the method	WITHOUT_CLASSIFICATION	0.9999933955534991	WITHOUT_CLASSIFICATION	6.604446500912352E-6	IMPLEMENTATION
// comparisons & checks // checks if the operand is non-null and non-false // EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...	WITHOUT_CLASSIFICATION	0.9999901589910954	WITHOUT_CLASSIFICATION	9.84100890443563E-6	IMPLEMENTATION
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9994080547512612	WITHOUT_CLASSIFICATION	5.919452487388822E-4	IMPLEMENTATION
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9998225289835034	WITHOUT_CLASSIFICATION	1.774710164965197E-4	IMPLEMENTATION
// all done with lookup attempts, release monitor	WITHOUT_CLASSIFICATION	0.9999267615991068	WITHOUT_CLASSIFICATION	7.323840089331245E-5	IMPLEMENTATION
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999677642399449	WITHOUT_CLASSIFICATION	3.223576005512236E-5	IMPLEMENTATION
// Create list of interface names to proxy (and make sure they really are interfaces) // Also build a hashcode from all classes to use for retrieving previously-created impl	WITHOUT_CLASSIFICATION	0.9999978994649854	WITHOUT_CLASSIFICATION	2.1005350146859707E-6	IMPLEMENTATION
// Construct local variables based on parameter names passed in	WITHOUT_CLASSIFICATION	0.999975564342608	WITHOUT_CLASSIFICATION	2.44356573918599E-5	IMPLEMENTATION
// Value of "TZ" property is of a bit different format, // which confuses the Java's TimeZone.getTimeZone(id) method, // and so, we need to convert it.	WITHOUT_CLASSIFICATION	0.9999479644018598	WITHOUT_CLASSIFICATION	5.2035598140253364E-5	IMPLEMENTATION
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999106166452	WITHOUT_CLASSIFICATION	8.938335480006988E-5	IMPLEMENTATION
// ensure the object is associated with the wrapper we found it in, // so that if it comes back we don't re-wrap it	WITHOUT_CLASSIFICATION	0.9999856791338798	WITHOUT_CLASSIFICATION	1.4320866120295813E-5	IMPLEMENTATION
// return sqrt(squarD) with precision of rootMC	WITHOUT_CLASSIFICATION	0.9999840003651277	WITHOUT_CLASSIFICATION	1.599963487238602E-5	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999838155487664	WITHOUT_CLASSIFICATION	1.618445123368361E-5	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
// Get a new label using the provided label prefix	WITHOUT_CLASSIFICATION	0.9999634834738904	WITHOUT_CLASSIFICATION	3.651652610964997E-5	IMPLEMENTATION
// normal exit, perform finally and return	WITHOUT_CLASSIFICATION	0.9999492626409184	WITHOUT_CLASSIFICATION	5.0737359081524096E-5	IMPLEMENTATION
// coerce arguments	WITHOUT_CLASSIFICATION	0.9998773448146703	WITHOUT_CLASSIFICATION	1.2265518532975883E-4	IMPLEMENTATION
// 0.0 is ok // float range // inverted float range? // NaN // +infinity // -infinity	WITHOUT_CLASSIFICATION	0.9999398930047054	WITHOUT_CLASSIFICATION	6.0106995294562245E-5	IMPLEMENTATION
/* expected */	WITHOUT_CLASSIFICATION	0.9999112158505437	WITHOUT_CLASSIFICATION	8.878414945625025E-5	IMPLEMENTATION
// set this class's method names in var @__java_ovrd_methods if this // is the new class; otherwise, get method names from there if this is // a proxy superclass.	WITHOUT_CLASSIFICATION	0.9999948423783824	WITHOUT_CLASSIFICATION	5.1576216176002985E-6	IMPLEMENTATION
/* ignore backslashed spaces in %w */	WITHOUT_CLASSIFICATION	0.9999371670433045	WITHOUT_CLASSIFICATION	6.2832956695469E-5	IMPLEMENTATION
// Invert the sign, since TZ format and Java format // use opposite signs, sigh... Also, Java API requires // the sign to be always present, be it "+" or "-".	WITHOUT_CLASSIFICATION	0.9999238302002312	WITHOUT_CLASSIFICATION	7.616979976872997E-5	IMPLEMENTATION
// no binding given, use 0 for both	WITHOUT_CLASSIFICATION	0.9999096865955522	WITHOUT_CLASSIFICATION	9.031340444777081E-5	IMPLEMENTATION
// <=> may return nil in many circumstances, e.g. 3 <=> NaN        	WITHOUT_CLASSIFICATION	0.9999253185846142	WITHOUT_CLASSIFICATION	7.46814153857879E-5	IMPLEMENTATION
// use numbered access method	WITHOUT_CLASSIFICATION	0.9999107804120276	WITHOUT_CLASSIFICATION	8.921958797246031E-5	IMPLEMENTATION
// Always use "GMT" since that's required by Java API.	WITHOUT_CLASSIFICATION	0.9999218331646826	WITHOUT_CLASSIFICATION	7.816683531735939E-5	IMPLEMENTATION
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999924594744768	WITHOUT_CLASSIFICATION	7.540525523169907E-6	IMPLEMENTATION
// The dataStruct is a place where custom information can be // contained for core implementations that doesn't necessarily // want to go to the trouble of creating a subclass of // RubyObject. The OpenSSL implementation uses this heavily to // save holder objects containing Java cryptography objects. // Java integration uses this to store the Java object ref. //protected transient Object dataStruct;	WITHOUT_CLASSIFICATION	0.9999955782789073	WITHOUT_CLASSIFICATION	4.421721092804296E-6	IMPLEMENTATION
// Remaining arguments are for the script itself	WITHOUT_CLASSIFICATION	0.9999709198771285	WITHOUT_CLASSIFICATION	2.9080122871455573E-5	IMPLEMENTATION
// arg grouping, use slower arg walking logic	WITHOUT_CLASSIFICATION	0.9998894138844203	WITHOUT_CLASSIFICATION	1.1058611557975424E-4	IMPLEMENTATION
// build scope names string	WITHOUT_CLASSIFICATION	0.9999307282179839	WITHOUT_CLASSIFICATION	6.927178201611644E-5	IMPLEMENTATION
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.999998124292194	WITHOUT_CLASSIFICATION	1.8757078059370075E-6	IMPLEMENTATION
// Here we create an "anonymous" exception type used for unrolling the stack. // MRI creates a new one for *every call* to timeout, which can be costly. // We opt to use a single exception type for all cases to avoid this overhead.	WITHOUT_CLASSIFICATION	0.999985562834426	WITHOUT_CLASSIFICATION	1.443716557399187E-5	IMPLEMENTATION
// finally	WITHOUT_CLASSIFICATION	0.9965773329960974	WITHOUT_CLASSIFICATION	0.0034226670039026715	IMPLEMENTATION
// MRI behavior: With TZ equal to "GMT" or "UTC", Time.now // is *NOT* considered as a proper GMT/UTC time: //   ENV['TZ']="GMT" //   Time.now.gmt? ==> false //   ENV['TZ']="UTC" //   Time.now.utc? ==> false // Hence, we need to adjust for that.	WITHOUT_CLASSIFICATION	0.999901409301718	WITHOUT_CLASSIFICATION	9.859069828201404E-5	IMPLEMENTATION
// ?l  | boolean | True if file1 exists and is a symbolic link	WITHOUT_CLASSIFICATION	0.9999470805022699	WITHOUT_CLASSIFICATION	5.291949773021714E-5	IMPLEMENTATION
// This try/catch is to allow failing over to the "commands" logic // when running from within a jruby-complete jar file, which has // jruby.home = a jar file URL that does not resolve correctly with // JRubyFile.create.	WITHOUT_CLASSIFICATION	0.9999832342509172	WITHOUT_CLASSIFICATION	1.6765749082756673E-5	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9998587598949422	WITHOUT_CLASSIFICATION	1.41240105057694E-4	IMPLEMENTATION
// specific arity	WITHOUT_CLASSIFICATION	0.9998784605884962	WITHOUT_CLASSIFICATION	1.2153941150376129E-4	IMPLEMENTATION
// In the case of two arguments, MRI will discard the portion of // the first argument after a decimal point (i.e., "floor"). // However in the case of a single argument, any portion after // the decimal point is honored.	WITHOUT_CLASSIFICATION	0.9999974466164043	WITHOUT_CLASSIFICATION	2.5533835957184634E-6	IMPLEMENTATION
// ?w  | boolean | True if file1 exists and is writable by effective uid/gid	WITHOUT_CLASSIFICATION	0.9999466908198188	WITHOUT_CLASSIFICATION	5.330918018116278E-5	IMPLEMENTATION
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9998842480913991	WITHOUT_CLASSIFICATION	1.1575190860102471E-4	IMPLEMENTATION
/*    @JRubyMethod    public IRubyObject to_proc() {        return RubyProc.newProc(getRuntime(),                                CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()),                                Block.Type.PROC);    }    */	WITHOUT_CLASSIFICATION	0.9999853094823751	WITHOUT_CLASSIFICATION	1.4690517624841336E-5	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9998846248157786	WITHOUT_CLASSIFICATION	1.153751842214881E-4	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9998846248157786	WITHOUT_CLASSIFICATION	1.153751842214881E-4	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999922439904003	WITHOUT_CLASSIFICATION	7.756009599712703E-6	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999922439904003	WITHOUT_CLASSIFICATION	7.756009599712703E-6	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9999493414741731	WITHOUT_CLASSIFICATION	5.065852582695879E-5	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9999493414741731	WITHOUT_CLASSIFICATION	5.065852582695879E-5	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999308016405121	WITHOUT_CLASSIFICATION	6.919835948787694E-5	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999308016405121	WITHOUT_CLASSIFICATION	6.919835948787694E-5	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9998522173114113	WITHOUT_CLASSIFICATION	1.477826885886248E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9998522173114113	WITHOUT_CLASSIFICATION	1.477826885886248E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9998522173114113	WITHOUT_CLASSIFICATION	1.477826885886248E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9998522173114113	WITHOUT_CLASSIFICATION	1.477826885886248E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9998522173114113	WITHOUT_CLASSIFICATION	1.477826885886248E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9998522173114113	WITHOUT_CLASSIFICATION	1.477826885886248E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9998522173114113	WITHOUT_CLASSIFICATION	1.477826885886248E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9998522173114113	WITHOUT_CLASSIFICATION	1.477826885886248E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9998522173114113	WITHOUT_CLASSIFICATION	1.477826885886248E-4	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.999944823105502	WITHOUT_CLASSIFICATION	5.51768944980786E-5	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.999944823105502	WITHOUT_CLASSIFICATION	5.51768944980786E-5	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.999944823105502	WITHOUT_CLASSIFICATION	5.51768944980786E-5	IMPLEMENTATION
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999499746405757	WITHOUT_CLASSIFICATION	5.002535942439331E-5	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999447133116101	WITHOUT_CLASSIFICATION	5.528668839002397E-5	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999447133116101	WITHOUT_CLASSIFICATION	5.528668839002397E-5	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999447133116101	WITHOUT_CLASSIFICATION	5.528668839002397E-5	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999222599690087	WITHOUT_CLASSIFICATION	7.774003099124477E-5	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999222599690087	WITHOUT_CLASSIFICATION	7.774003099124477E-5	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999222599690087	WITHOUT_CLASSIFICATION	7.774003099124477E-5	IMPLEMENTATION
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9998835483538413	WITHOUT_CLASSIFICATION	1.1645164615873116E-4	IMPLEMENTATION
// backspace	WITHOUT_CLASSIFICATION	0.9998590883215628	WITHOUT_CLASSIFICATION	1.4091167843730803E-4	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9998406729925768	WITHOUT_CLASSIFICATION	1.593270074231714E-4	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9998406729925768	WITHOUT_CLASSIFICATION	1.593270074231714E-4	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9998406729925768	WITHOUT_CLASSIFICATION	1.593270074231714E-4	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9998406729925768	WITHOUT_CLASSIFICATION	1.593270074231714E-4	IMPLEMENTATION
/* package-private */	WITHOUT_CLASSIFICATION	0.9999454217475868	WITHOUT_CLASSIFICATION	5.457825241312313E-5	IMPLEMENTATION
// fall through	WITHOUT_CLASSIFICATION	0.9998991855965579	WITHOUT_CLASSIFICATION	1.0081440344208364E-4	IMPLEMENTATION
// fall through	WITHOUT_CLASSIFICATION	0.9998991855965579	WITHOUT_CLASSIFICATION	1.0081440344208364E-4	IMPLEMENTATION
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9998577477143887	WITHOUT_CLASSIFICATION	1.4225228561120184E-4	IMPLEMENTATION
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999895563704597	WITHOUT_CLASSIFICATION	1.044362954033145E-5	IMPLEMENTATION
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999895563704597	WITHOUT_CLASSIFICATION	1.044362954033145E-5	IMPLEMENTATION
/**      * Nested class whose instances act as thunks reacting to to_str method     * called from (Exception#to_str, Exception#message)     * MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!",     * to_str implementation: "name_err_mesg_to_str"     *     * TODO: this class should not be lookupable     */	WITHOUT_CLASSIFICATION	0.8085832382997448	IMPLEMENTATION	0.19141676170025523	WITHOUT_CLASSIFICATION
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9999214626778131	WITHOUT_CLASSIFICATION	7.853732218678755E-5	IMPLEMENTATION
// The name of this source (e.g. a filename: foo.rb)	WITHOUT_CLASSIFICATION	0.9999728283313624	WITHOUT_CLASSIFICATION	2.7171668637655437E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9998877342357109	WITHOUT_CLASSIFICATION	1.122657642891302E-4	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9998877342357109	WITHOUT_CLASSIFICATION	1.122657642891302E-4	IMPLEMENTATION
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9999839193518657	WITHOUT_CLASSIFICATION	1.608064813426762E-5	IMPLEMENTATION
// We yield here to hopefully permit the target thread to schedule // MRI immediately schedules it, so this is close but not exact	WITHOUT_CLASSIFICATION	0.9999760657517556	WITHOUT_CLASSIFICATION	2.3934248244373894E-5	IMPLEMENTATION
// note that addMethod now does its own put, so any change made to // functionality here should be made there as well 	WITHOUT_CLASSIFICATION	0.9999327994389008	WITHOUT_CLASSIFICATION	6.720056109910275E-5	IMPLEMENTATION
/* Currently dead code, but useful when we figure out how to actually perform translit.    private static boolean isTranslit(String encoding) {        return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false;    }*/	WITHOUT_CLASSIFICATION	0.9999890704348908	WITHOUT_CLASSIFICATION	1.0929565109191057E-5	IMPLEMENTATION
// empirically it appears that to_ary coersions always return array or nil, so this // should always be an array by now.	WITHOUT_CLASSIFICATION	0.9999731289618572	WITHOUT_CLASSIFICATION	2.687103814282407E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9998877342357109	WITHOUT_CLASSIFICATION	1.122657642891302E-4	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9998877342357109	WITHOUT_CLASSIFICATION	1.122657642891302E-4	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9998877342357109	WITHOUT_CLASSIFICATION	1.122657642891302E-4	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9998877342357109	WITHOUT_CLASSIFICATION	1.122657642891302E-4	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9998877342357109	WITHOUT_CLASSIFICATION	1.122657642891302E-4	IMPLEMENTATION
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999246469705202	WITHOUT_CLASSIFICATION	7.535302947981699E-5	IMPLEMENTATION
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9998886086980525	WITHOUT_CLASSIFICATION	1.1139130194749826E-4	IMPLEMENTATION
// if it's an inner class and it's not public, we can't access it; // skip population of declared elements	WITHOUT_CLASSIFICATION	0.9999908813881814	WITHOUT_CLASSIFICATION	9.118611818748917E-6	IMPLEMENTATION
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999065894853878	WITHOUT_CLASSIFICATION	9.341051461221414E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9995467303284251	WITHOUT_CLASSIFICATION	4.5326967157488377E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9995467303284251	WITHOUT_CLASSIFICATION	4.5326967157488377E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9995467303284251	WITHOUT_CLASSIFICATION	4.5326967157488377E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9995467303284251	WITHOUT_CLASSIFICATION	4.5326967157488377E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9995467303284251	WITHOUT_CLASSIFICATION	4.5326967157488377E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9995467303284251	WITHOUT_CLASSIFICATION	4.5326967157488377E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9995467303284251	WITHOUT_CLASSIFICATION	4.5326967157488377E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9995467303284251	WITHOUT_CLASSIFICATION	4.5326967157488377E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9995467303284251	WITHOUT_CLASSIFICATION	4.5326967157488377E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9995467303284251	WITHOUT_CLASSIFICATION	4.5326967157488377E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9995467303284251	WITHOUT_CLASSIFICATION	4.5326967157488377E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9995467303284251	WITHOUT_CLASSIFICATION	4.5326967157488377E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9995467303284251	WITHOUT_CLASSIFICATION	4.5326967157488377E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9995467303284251	WITHOUT_CLASSIFICATION	4.5326967157488377E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9995467303284251	WITHOUT_CLASSIFICATION	4.5326967157488377E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9995467303284251	WITHOUT_CLASSIFICATION	4.5326967157488377E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9995467303284251	WITHOUT_CLASSIFICATION	4.5326967157488377E-4	IMPLEMENTATION
// MRI behavior on Windows: it treats '/' as a root of // a current drive (but only if SINGLE slash is present!): // E.g., if current work directory is // 'D:/home/directory', then '/' means 'D:/'. // // Basically, '/path' is treated as a *RELATIVE* path, // relative to the current drive. '//path' is treated // as absolute one.	WITHOUT_CLASSIFICATION	0.9999925675631696	WITHOUT_CLASSIFICATION	7.432436830505557E-6	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9995467303284251	WITHOUT_CLASSIFICATION	4.5326967157488377E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9995467303284251	WITHOUT_CLASSIFICATION	4.5326967157488377E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9995467303284251	WITHOUT_CLASSIFICATION	4.5326967157488377E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9995467303284251	WITHOUT_CLASSIFICATION	4.5326967157488377E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9995467303284251	WITHOUT_CLASSIFICATION	4.5326967157488377E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9995467303284251	WITHOUT_CLASSIFICATION	4.5326967157488377E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9995467303284251	WITHOUT_CLASSIFICATION	4.5326967157488377E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9995467303284251	WITHOUT_CLASSIFICATION	4.5326967157488377E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9995467303284251	WITHOUT_CLASSIFICATION	4.5326967157488377E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9995467303284251	WITHOUT_CLASSIFICATION	4.5326967157488377E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9995467303284251	WITHOUT_CLASSIFICATION	4.5326967157488377E-4	IMPLEMENTATION
// This is needed when the enclosing class or module is a singleton. // In that case, we generated a name such as null::Foo, which broke  // Marshalling, among others. The correct thing to do in this situation  // is to insert the generate the name of form #<Class:01xasdfasd> if  // it's a singleton module/class, which this code accomplishes.	WITHOUT_CLASSIFICATION	0.9999947876215523	WITHOUT_CLASSIFICATION	5.212378447682619E-6	IMPLEMENTATION
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9999913711620574	WITHOUT_CLASSIFICATION	8.628837942609071E-6	IMPLEMENTATION
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999370452971214	WITHOUT_CLASSIFICATION	6.29547028786684E-5	IMPLEMENTATION
// get "self"	WITHOUT_CLASSIFICATION	0.99991786027059	WITHOUT_CLASSIFICATION	8.21397294098672E-5	IMPLEMENTATION
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999056886520904	WITHOUT_CLASSIFICATION	9.43113479095433E-5	IMPLEMENTATION
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9999386822339174	WITHOUT_CLASSIFICATION	6.131776608268452E-5	IMPLEMENTATION
// only public methods	WITHOUT_CLASSIFICATION	0.9999363484386348	WITHOUT_CLASSIFICATION	6.365156136514169E-5	IMPLEMENTATION
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999647297391369	WITHOUT_CLASSIFICATION	3.527026086316969E-5	IMPLEMENTATION
// First try to use drive letter from supplied dir value, // then try current work dir.	WITHOUT_CLASSIFICATION	0.999978501385262	WITHOUT_CLASSIFICATION	2.149861473801895E-5	IMPLEMENTATION
// JRUBY-2435: Aliasing eval and other "special" methods should display a warning // We warn because we treat certain method names as "special" for purposes of // optimization. Hopefully this will be enough to convince people not to alias // them.	WITHOUT_CLASSIFICATION	0.9999336809683399	WITHOUT_CLASSIFICATION	6.631903166006343E-5	IMPLEMENTATION
// generate a real method signature for the method, with to/from coercions	WITHOUT_CLASSIFICATION	0.9999715437911689	WITHOUT_CLASSIFICATION	2.8456208831072565E-5	IMPLEMENTATION
// block argument to the method // closure present // class present // method table mutations, def, defs, undef, alias // likely call to eval // makes calls that are aware of the frame // makes calls that are aware of the frame's self // makes calls that are aware of the frame's visibility // makes calls that are aware of the frame's block // makes calls that are aware of the frame's name // makes calls that set or get backref // makes calls that set or get lastline // makes calls that are aware of the frame's class // optional arguments to the method // rest arg to the method // makes calls that are aware of the scope // makes a zero-argument super call // accesses or sets constants // accesses or sets class variables // makes normal super call // contains a retry	WITHOUT_CLASSIFICATION	0.9999992863776572	WITHOUT_CLASSIFICATION	7.136223426663493E-7	IMPLEMENTATION
// // Add aliases in Type::*, NativeType::* and FFI::TYPE_* //	WITHOUT_CLASSIFICATION	0.9999260019639888	WITHOUT_CLASSIFICATION	7.39980360111738E-5	IMPLEMENTATION
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999636905994568	WITHOUT_CLASSIFICATION	3.6309400543179334E-5	IMPLEMENTATION
// double-testing args.length here, but it avoids duplicating the proc-setup code in two places	WITHOUT_CLASSIFICATION	0.9999801553333424	WITHOUT_CLASSIFICATION	1.9844666657561455E-5	IMPLEMENTATION
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999379848990844	WITHOUT_CLASSIFICATION	6.20151009156431E-5	IMPLEMENTATION
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999097318348058	WITHOUT_CLASSIFICATION	9.02681651941994E-5	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999041874779524	WITHOUT_CLASSIFICATION	9.581252204753768E-5	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999041874779524	WITHOUT_CLASSIFICATION	9.581252204753768E-5	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999041874779524	WITHOUT_CLASSIFICATION	9.581252204753768E-5	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999041874779524	WITHOUT_CLASSIFICATION	9.581252204753768E-5	IMPLEMENTATION
// snapshot of contents of directory // current position in directory	WITHOUT_CLASSIFICATION	0.9999934391764579	WITHOUT_CLASSIFICATION	6.560823542203441E-6	IMPLEMENTATION
// Exclusive locks in Java require the channel to be writable, otherwise // an exception is thrown (terminating JRuby execution). // But flock behavior of MRI is that it allows // exclusive locks even on non-writable file. So we convert exclusive // lock to shared lock if the channel is not writable, to better match // the MRI behavior.	WITHOUT_CLASSIFICATION	0.9999970991783894	WITHOUT_CLASSIFICATION	2.9008216105623368E-6	IMPLEMENTATION
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999257090276894	WITHOUT_CLASSIFICATION	7.429097231053955E-5	IMPLEMENTATION
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999257090276894	WITHOUT_CLASSIFICATION	7.429097231053955E-5	IMPLEMENTATION
// set self to the class	WITHOUT_CLASSIFICATION	0.9999700041241089	WITHOUT_CLASSIFICATION	2.999587589121105E-5	IMPLEMENTATION
/* ---------- Public fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999552917565837	WITHOUT_CLASSIFICATION	4.470824341629469E-5	IMPLEMENTATION
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999461807105067	WITHOUT_CLASSIFICATION	5.3819289493325986E-5	IMPLEMENTATION
// zero args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999684757807324	WITHOUT_CLASSIFICATION	3.1524219267615625E-5	IMPLEMENTATION
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999752705935141	WITHOUT_CLASSIFICATION	2.4729406485914E-5	IMPLEMENTATION
// Store each line into this list if not null.	WITHOUT_CLASSIFICATION	0.9998997248267443	WITHOUT_CLASSIFICATION	1.0027517325571683E-4	IMPLEMENTATION
// Portion of line right after beginning marker	WITHOUT_CLASSIFICATION	0.9999228876269155	WITHOUT_CLASSIFICATION	7.711237308453102E-5	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999753551620443	WITHOUT_CLASSIFICATION	2.46448379557175E-5	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999753551620443	WITHOUT_CLASSIFICATION	2.46448379557175E-5	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999753551620443	WITHOUT_CLASSIFICATION	2.46448379557175E-5	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999753551620443	WITHOUT_CLASSIFICATION	2.46448379557175E-5	IMPLEMENTATION
// If an IO exception occurs (something odd, but possible) // A directory may return null.	WITHOUT_CLASSIFICATION	0.9999854670443754	WITHOUT_CLASSIFICATION	1.4532955624514463E-5	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999940370102126	WITHOUT_CLASSIFICATION	5.962989787390735E-6	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999940370102126	WITHOUT_CLASSIFICATION	5.962989787390735E-6	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999940370102126	WITHOUT_CLASSIFICATION	5.962989787390735E-6	IMPLEMENTATION
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999155172248788	WITHOUT_CLASSIFICATION	8.448277512122324E-5	IMPLEMENTATION
// finally with no exception	WITHOUT_CLASSIFICATION	0.999945387247241	WITHOUT_CLASSIFICATION	5.46127527590322E-5	IMPLEMENTATION
// Now, for all variables used by 'i' mark them live before 'i'	WITHOUT_CLASSIFICATION	0.9999337820439563	WITHOUT_CLASSIFICATION	6.621795604368186E-5	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9333230184927425	WITHOUT_CLASSIFICATION	0.06667698150725745	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9333230184927425	WITHOUT_CLASSIFICATION	0.06667698150725745	IMPLEMENTATION
/* The counting of slashes that follows is simply a way to adhere to          * Ruby's UNC (or something) compatibility. When Ruby's expand_path is          * called with "//foo//bar" it will return "//foo/bar". JRuby uses          * java.io.File, and hence returns "/foo/bar". In order to retain          * java.io.File in the lower layers and provide full Ruby          * compatibility, the number of extra slashes must be counted and          * prepended to the result.         */	WITHOUT_CLASSIFICATION	0.9999994330942145	WITHOUT_CLASSIFICATION	5.66905785575236E-7	IMPLEMENTATION
// This is almost always already interned, since it will be called with a symbol in most cases // but when created from Java code, we might get an argument that needs to be interned. // addAccessor has as a precondition that the string MUST be interned	WITHOUT_CLASSIFICATION	0.9999979649664634	WITHOUT_CLASSIFICATION	2.035033536626953E-6	IMPLEMENTATION
/* not a class */	WITHOUT_CLASSIFICATION	0.9999200102856022	WITHOUT_CLASSIFICATION	7.998971439785074E-5	IMPLEMENTATION
/* not a class */	WITHOUT_CLASSIFICATION	0.9999200102856022	WITHOUT_CLASSIFICATION	7.998971439785074E-5	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999501415414129	WITHOUT_CLASSIFICATION	4.985845858713036E-5	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999501415414129	WITHOUT_CLASSIFICATION	4.985845858713036E-5	IMPLEMENTATION
// io.available() only returns 0 after EOF is encountered // so we need to differentiate between the empty string and EOF	WITHOUT_CLASSIFICATION	0.999985539282956	WITHOUT_CLASSIFICATION	1.4460717044062244E-5	IMPLEMENTATION
// In the current logic, if we get here we know that module is not an // IncludedModuleWrapper, so there's no need to fish out the delegate. But just // in case the logic should change later, let's do it anyway	WITHOUT_CLASSIFICATION	0.9999977754424677	WITHOUT_CLASSIFICATION	2.2245575322713105E-6	IMPLEMENTATION
// rb_iterate((VALUE(*)_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);	WITHOUT_CLASSIFICATION	0.999878267852855	WITHOUT_CLASSIFICATION	1.2173214714505186E-4	IMPLEMENTATION
// Broken symlinks considered by exists() as non-existing, // so we need to check for symlinks explicitly.	WITHOUT_CLASSIFICATION	0.9999398155440434	WITHOUT_CLASSIFICATION	6.018445595669245E-5	IMPLEMENTATION
// ////////////////// CONSTANT API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999950942996898	WITHOUT_CLASSIFICATION	4.905700310119904E-6	IMPLEMENTATION
// create the default thread group	WITHOUT_CLASSIFICATION	0.999994886384506	WITHOUT_CLASSIFICATION	5.113615494054963E-6	IMPLEMENTATION
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999456374247019	WITHOUT_CLASSIFICATION	5.43625752980411E-5	IMPLEMENTATION
/* ============================     * Here are hash internals     * (This could be extracted to a separate class but it's not too large though)     * ============================     */	WITHOUT_CLASSIFICATION	0.9999639415377519	WITHOUT_CLASSIFICATION	3.605846224807682E-5	IMPLEMENTATION
// ////////////////// LOW-LEVEL CLASS VARIABLE INTERFACE //////////////// // // fetch/store/list class variables for this module //	WITHOUT_CLASSIFICATION	0.9999989191411095	WITHOUT_CLASSIFICATION	1.080858890551624E-6	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999543937214727	WITHOUT_CLASSIFICATION	4.5606278527264156E-5	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999543937214727	WITHOUT_CLASSIFICATION	4.5606278527264156E-5	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999543799574377	WITHOUT_CLASSIFICATION	4.562004256224169E-5	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999543799574377	WITHOUT_CLASSIFICATION	4.562004256224169E-5	IMPLEMENTATION
// retuns null when not found to avoid unnecessary getRuntime().getNil() call	WITHOUT_CLASSIFICATION	0.9999537832713759	WITHOUT_CLASSIFICATION	4.621672862411574E-5	IMPLEMENTATION
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999937037414437	WITHOUT_CLASSIFICATION	6.296258556387287E-6	IMPLEMENTATION
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9998415686846777	WITHOUT_CLASSIFICATION	1.5843131532233462E-4	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999476725441212	WITHOUT_CLASSIFICATION	5.2327455878900224E-5	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999476725441212	WITHOUT_CLASSIFICATION	5.2327455878900224E-5	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999476725441212	WITHOUT_CLASSIFICATION	5.2327455878900224E-5	IMPLEMENTATION
// line 286	WITHOUT_CLASSIFICATION	0.9998871979952629	WITHOUT_CLASSIFICATION	1.1280200473712636E-4	IMPLEMENTATION
// line 476	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 513	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 530	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 533	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 537	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 551	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// end loop	WITHOUT_CLASSIFICATION	0.9998893128617223	WITHOUT_CLASSIFICATION	1.1068713827769086E-4	IMPLEMENTATION
// MRI behavior: we don't print errno for actual Errno errors	WITHOUT_CLASSIFICATION	0.9999423611205199	WITHOUT_CLASSIFICATION	5.763887948003043E-5	IMPLEMENTATION
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999402125350139	WITHOUT_CLASSIFICATION	5.978746498618375E-5	IMPLEMENTATION
// Traverse the instructions in this basic block in reverse order! // Mark as dead all instructions whose results are not used! 	WITHOUT_CLASSIFICATION	0.9999703294175882	WITHOUT_CLASSIFICATION	2.9670582411759742E-5	IMPLEMENTATION
// // fields should really be an immutable map as it is never modified after construction //	WITHOUT_CLASSIFICATION	0.999868448154809	WITHOUT_CLASSIFICATION	1.3155184519103604E-4	IMPLEMENTATION
// load self object as IRubyObject, for recv param	WITHOUT_CLASSIFICATION	0.9999475455340773	WITHOUT_CLASSIFICATION	5.245446592287158E-5	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9333230184927425	WITHOUT_CLASSIFICATION	0.06667698150725745	IMPLEMENTATION
// If we define a class in Ruby, but later want to allow it to be defined in Java, // the allocator needs to be updated	WITHOUT_CLASSIFICATION	0.9999679642551879	WITHOUT_CLASSIFICATION	3.203574481208707E-5	IMPLEMENTATION
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9999578479348696	WITHOUT_CLASSIFICATION	4.215206513039391E-5	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999025777223158	WITHOUT_CLASSIFICATION	9.742227768410012E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9998415686846777	WITHOUT_CLASSIFICATION	1.5843131532233462E-4	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9958160924063314	WITHOUT_CLASSIFICATION	0.004183907593668568	IMPLEMENTATION
// MRI has extra pointer which makes our code look a little bit // more strange in // comparison	WITHOUT_CLASSIFICATION	0.99990467113178	WITHOUT_CLASSIFICATION	9.532886821996231E-5	IMPLEMENTATION
// Tempory buffer to build up a potential token.  Consumer takes responsibility to reset  // this before use.	WITHOUT_CLASSIFICATION	0.9999146415836436	WITHOUT_CLASSIFICATION	8.535841635628984E-5	IMPLEMENTATION
//tmpPosition is required because getPosition()'s side effects. //if the warning is generated, the getPosition() on line 954 (this line + 18) will create //a wrong position if the "inclusive" flag is not set.	WITHOUT_CLASSIFICATION	0.9999923036593635	WITHOUT_CLASSIFICATION	7.69634063644519E-6	IMPLEMENTATION
/* What is \v in C?                    case '\v':                        c2 = 'v';                        break;                        */	WITHOUT_CLASSIFICATION	0.9999635049144421	WITHOUT_CLASSIFICATION	3.649508555794999E-5	IMPLEMENTATION
/* Consider Thread aspects of this */	WITHOUT_CLASSIFICATION	0.9998918919775986	WITHOUT_CLASSIFICATION	1.0810802240130145E-4	IMPLEMENTATION
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999970119742597	WITHOUT_CLASSIFICATION	2.988025740372706E-6	IMPLEMENTATION
// An interrupt or timeout may have caused us to miss // a notify that we consumed, so do another notify in // case someone else is available to pick it up.	WITHOUT_CLASSIFICATION	0.999984482398041	WITHOUT_CLASSIFICATION	1.55176019588538E-5	IMPLEMENTATION
// line 572	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 601	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 601	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 625	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 649	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 691	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 723	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 732	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 745	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 766	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 785	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 794	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 800	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 812	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 827	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 839	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 845	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 864	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 886	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 896	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 911	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 929	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 952	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 970	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 972	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 991	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 1011	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1026	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1038	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1067	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1085	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1097	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1105	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1122	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1133	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1145	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1169	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1201	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1210	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1229	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1261	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1287	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1293	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1307	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1320	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1325	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1363	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1398	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1448	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1456	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1473	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1492	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1513	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1523	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1562	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1582	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1603	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1603	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1615	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1620	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1635	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1652	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1681	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1708	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1716	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1755	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1772	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1789	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9998445501374205	WITHOUT_CLASSIFICATION	1.554498625794567E-4	IMPLEMENTATION
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9998445501374205	WITHOUT_CLASSIFICATION	1.554498625794567E-4	IMPLEMENTATION
/* force for args */	WITHOUT_CLASSIFICATION	0.9998613845205286	WITHOUT_CLASSIFICATION	1.38615479471285E-4	IMPLEMENTATION
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9998498051321905	WITHOUT_CLASSIFICATION	1.5019486780950308E-4	IMPLEMENTATION
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9999395866390837	WITHOUT_CLASSIFICATION	6.041336091627002E-5	IMPLEMENTATION
// We can assign if we already have variable of that name here or we are the only // scope in the chain (which Local scopes always are).	WITHOUT_CLASSIFICATION	0.9999876590790273	WITHOUT_CLASSIFICATION	1.2340920972604359E-5	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999835586960911	WITHOUT_CLASSIFICATION	1.6441303908859918E-5	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999835586960911	WITHOUT_CLASSIFICATION	1.6441303908859918E-5	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999835586960911	WITHOUT_CLASSIFICATION	1.6441303908859918E-5	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999835586960911	WITHOUT_CLASSIFICATION	1.6441303908859918E-5	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9996201490387174	WITHOUT_CLASSIFICATION	3.798509612824903E-4	IMPLEMENTATION
/*     * This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:)     * into individual whenNodes.  The primary reason for this is to ensure lazy evaluation of     * the arguments (when foo,bar,gar:) to prevent side-effects.  In the old code this was done     * using nested when statements, which was awful for interpreter and compilation.     *     * Notes: This has semantic equivalence but will not be lexically equivalent.  Compiler     * needs to detect same bodies to simplify bytecode generated.     */	WITHOUT_CLASSIFICATION	0.9999905775854675	WITHOUT_CLASSIFICATION	9.422414532492915E-6	IMPLEMENTATION
// line 313	WITHOUT_CLASSIFICATION	0.999887149714284	WITHOUT_CLASSIFICATION	1.1285028571603756E-4	IMPLEMENTATION
// line 339	WITHOUT_CLASSIFICATION	0.9998871047884604	WITHOUT_CLASSIFICATION	1.1289521153963082E-4	IMPLEMENTATION
// line 361	WITHOUT_CLASSIFICATION	0.9998871047884604	WITHOUT_CLASSIFICATION	1.1289521153963082E-4	IMPLEMENTATION
// line 413	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 451	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 472	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 500	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 515	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 555	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 582	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 619	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 636	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 669	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 703	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 776	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 814	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 823	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 854	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 872	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 905	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 925	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 958	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 992	WITHOUT_CLASSIFICATION	0.9998870748279768	WITHOUT_CLASSIFICATION	1.1292517202325367E-4	IMPLEMENTATION
// line 1047	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1072	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1081	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1108	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1136	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1168	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1192	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1241	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1267	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1286	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1301	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1314	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1333	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1362	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1395	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1420	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1439	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1476	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1535	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1588	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1618	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1643	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1669	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1728	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1753	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1779	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1794	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1812	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1837	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1895	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1925	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1950	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 1992	WITHOUT_CLASSIFICATION	0.9998870765021024	WITHOUT_CLASSIFICATION	1.1292349789769848E-4	IMPLEMENTATION
// line 2014	WITHOUT_CLASSIFICATION	0.9998871241110194	WITHOUT_CLASSIFICATION	1.128758889806384E-4	IMPLEMENTATION
// Whether this scope is used as the "argument scope" for e.g. zsuper	WITHOUT_CLASSIFICATION	0.9999408018088777	WITHOUT_CLASSIFICATION	5.9198191122289305E-5	IMPLEMENTATION
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999724608773272	WITHOUT_CLASSIFICATION	2.753912267282374E-5	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999584764554785	WITHOUT_CLASSIFICATION	4.152354452148664E-5	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999584764554785	WITHOUT_CLASSIFICATION	4.152354452148664E-5	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999584764554785	WITHOUT_CLASSIFICATION	4.152354452148664E-5	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999584764554785	WITHOUT_CLASSIFICATION	4.152354452148664E-5	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999584764554785	WITHOUT_CLASSIFICATION	4.152354452148664E-5	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999584764554785	WITHOUT_CLASSIFICATION	4.152354452148664E-5	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999584764554785	WITHOUT_CLASSIFICATION	4.152354452148664E-5	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999558993512875	WITHOUT_CLASSIFICATION	4.4100648712496286E-5	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999558993512875	WITHOUT_CLASSIFICATION	4.4100648712496286E-5	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999558993512875	WITHOUT_CLASSIFICATION	4.4100648712496286E-5	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999558993512875	WITHOUT_CLASSIFICATION	4.4100648712496286E-5	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9999212503933512	WITHOUT_CLASSIFICATION	7.874960664873441E-5	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9999212503933512	WITHOUT_CLASSIFICATION	7.874960664873441E-5	IMPLEMENTATION
// We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the // 'b' will get put into this new dynamic scope.  The original scope does not see the new // 'b' and successive evals with this binding will.  I take it having the ability to have  // succesive binding evals be able to share same scope makes sense from a programmers  // perspective.   One crappy outcome of this design is it requires Dynamic and Static  // scopes to be mutable for this one case.	WITHOUT_CLASSIFICATION	0.9999998971220783	WITHOUT_CLASSIFICATION	1.0287792170481742E-7	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999736315423667	WITHOUT_CLASSIFICATION	2.6368457633226845E-5	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999736315423667	WITHOUT_CLASSIFICATION	2.6368457633226845E-5	IMPLEMENTATION
// tc // under method // self // under method // name // args	WITHOUT_CLASSIFICATION	0.999915711030359	WITHOUT_CLASSIFICATION	8.428896964092729E-5	IMPLEMENTATION
// allow it to bubble up	WITHOUT_CLASSIFICATION	0.9998878826855955	WITHOUT_CLASSIFICATION	1.1211731440448516E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999193168253776	WITHOUT_CLASSIFICATION	8.068317462234566E-5	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999193168253776	WITHOUT_CLASSIFICATION	8.068317462234566E-5	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999193168253776	WITHOUT_CLASSIFICATION	8.068317462234566E-5	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999193168253776	WITHOUT_CLASSIFICATION	8.068317462234566E-5	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999193168253776	WITHOUT_CLASSIFICATION	8.068317462234566E-5	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999193168253776	WITHOUT_CLASSIFICATION	8.068317462234566E-5	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999193168253776	WITHOUT_CLASSIFICATION	8.068317462234566E-5	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999158256460738	WITHOUT_CLASSIFICATION	8.417435392611258E-5	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999142612738291	WITHOUT_CLASSIFICATION	8.573872617097226E-5	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999211088576767	WITHOUT_CLASSIFICATION	7.88911423233119E-5	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999211088576767	WITHOUT_CLASSIFICATION	7.88911423233119E-5	IMPLEMENTATION
// Check for a builtin first.	WITHOUT_CLASSIFICATION	0.9999541735890703	WITHOUT_CLASSIFICATION	4.582641092973626E-5	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999401651971406	WITHOUT_CLASSIFICATION	5.98348028593961E-5	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999401651971406	WITHOUT_CLASSIFICATION	5.98348028593961E-5	IMPLEMENTATION
// Unfortunately, the number of digits in the exponent is // not clearly defined in Ruby documentation. This is a // platform/version-dependent behavior. On Linux/Mac/Cygwin/*nix, // two digits are used. On Windows, 3 digits are used. // It is desirable for JRuby to have consistent behavior, and // the two digits behavior was selected. This is also in sync // with "Java-native" sprintf behavior (java.util.Formatter). // E or e	WITHOUT_CLASSIFICATION	0.9999976053077552	WITHOUT_CLASSIFICATION	2.3946922447803024E-6	IMPLEMENTATION
/** * Represents the the dynamic portion of scoping information.  The variableValues are the * values of assigned local or block variables.  The staticScope identifies which sort of * scope this is (block or local). *  * Properties of Dynamic Scopes: * 1. static and dynamic scopes have the same number of names to values * 2. size of variables (and thus names) is determined during parsing.  So those structured do *    not need to change * * FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents.  This * is harmless (other than wasting memory), but we should not do that.  We can fix this in two * ways: * 1. Fix all callers * 2. Check parent that is passed in and make if new instance is local, then its parent is not local */	WITHOUT_CLASSIFICATION	0.9999959969089842	WITHOUT_CLASSIFICATION	4.003091015728939E-6	IMPLEMENTATION
// This method handles '**/' patterns and delegates to // fnmatch_helper for the main work.	WITHOUT_CLASSIFICATION	0.999949658031072	WITHOUT_CLASSIFICATION	5.0341968927957085E-5	IMPLEMENTATION
// Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern  // Example: foo{a{c},b}bar -> fooa{c}bar, foobbar	WITHOUT_CLASSIFICATION	0.9998911514050227	WITHOUT_CLASSIFICATION	1.0884859497740034E-4	IMPLEMENTATION
// double precision, native // double precision, native	WITHOUT_CLASSIFICATION	0.999948612365279	WITHOUT_CLASSIFICATION	5.138763472111189E-5	IMPLEMENTATION
// 64-bit number, native (as bignum)	WITHOUT_CLASSIFICATION	0.9998165035572807	WITHOUT_CLASSIFICATION	1.8349644271941276E-4	IMPLEMENTATION
// Next indicates to decode using native encoding format	WITHOUT_CLASSIFICATION	0.999894961121389	WITHOUT_CLASSIFICATION	1.0503887861104585E-4	IMPLEMENTATION
// calculate based on a, b, c and d	WITHOUT_CLASSIFICATION	0.9999586826714986	WITHOUT_CLASSIFICATION	4.1317328501390265E-5	IMPLEMENTATION
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999614496998389	WITHOUT_CLASSIFICATION	3.855030016108762E-5	IMPLEMENTATION
// MRI behavior:  for 'Q', do not add trailing nils	WITHOUT_CLASSIFICATION	0.9999322780008602	WITHOUT_CLASSIFICATION	6.772199913984135E-5	IMPLEMENTATION
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9999402812999045	WITHOUT_CLASSIFICATION	5.971870009539272E-5	IMPLEMENTATION
// exec needs to behave differently in-process, because it's technically // supposed to replace the calling process. So if we're supposed to run // in-process, we allow it to use the default streams and not use // pumpers at all. See JRUBY-2156 and JRUBY-2154.	WITHOUT_CLASSIFICATION	0.9999849878559894	WITHOUT_CLASSIFICATION	1.5012144010542521E-5	IMPLEMENTATION
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999942491484103	WITHOUT_CLASSIFICATION	5.750851589596706E-6	IMPLEMENTATION
// The problem we trying to solve below: STDIN in Java // is blocked and non-interruptible, so if we invoke read // on it, we might never be able to interrupt such thread. // So, we use in.available() to see if there is any input // ready, and only then read it. But this approach can't // tell whether the end of stream reached or not, so we // might end up looping right at the end of the stream. // Well, at least, we can improve the situation by checking // if some input was ever available, and if so, not // checking for available anymore, and just go to read.	WITHOUT_CLASSIFICATION	0.9999998822766459	WITHOUT_CLASSIFICATION	1.1772335400112446E-7	IMPLEMENTATION
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999438327003849	WITHOUT_CLASSIFICATION	5.616729961506145E-5	IMPLEMENTATION
// an empirically derived rule: precision applies to // significand length, irrespective of exponent	WITHOUT_CLASSIFICATION	0.9999212516570899	WITHOUT_CLASSIFICATION	7.874834291013215E-5	IMPLEMENTATION
// an official rule, clarified: if the exponent // <clarif>after adjusting for exponent form</clarif> // is < -4,  or the exponent <clarif>after adjusting  // for exponent form</clarif> is greater than the // precision, use exponent form	WITHOUT_CLASSIFICATION	0.9999833242997963	WITHOUT_CLASSIFICATION	1.6675700203733437E-5	IMPLEMENTATION
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9999152944900055	WITHOUT_CLASSIFICATION	8.470550999457569E-5	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9998838488841543	WITHOUT_CLASSIFICATION	1.1615111584577783E-4	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9998838488841543	WITHOUT_CLASSIFICATION	1.1615111584577783E-4	IMPLEMENTATION
// MRI behavior: validate only the unnumbered arguments	WITHOUT_CLASSIFICATION	0.9999164735472104	WITHOUT_CLASSIFICATION	8.352645278954299E-5	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9998677256195327	WITHOUT_CLASSIFICATION	1.322743804671536E-4	IMPLEMENTATION
// calculation for simple (and typical) case, // adapted from sun.misc.FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999091108838255	WITHOUT_CLASSIFICATION	9.088911617451848E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9961455906382863	WITHOUT_CLASSIFICATION	0.0038544093617136313	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9998415770766831	WITHOUT_CLASSIFICATION	1.584229233168815E-4	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9998415770766831	WITHOUT_CLASSIFICATION	1.584229233168815E-4	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9998415770766831	WITHOUT_CLASSIFICATION	1.584229233168815E-4	IMPLEMENTATION
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9998549978632716	WITHOUT_CLASSIFICATION	1.4500213672836437E-4	IMPLEMENTATION
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999051347533687	WITHOUT_CLASSIFICATION	9.486524663121669E-5	IMPLEMENTATION
// call chmod after we created the RandomAccesFile // because otherwise, the file could be read-only	WITHOUT_CLASSIFICATION	0.9999486895398056	WITHOUT_CLASSIFICATION	5.131046019441536E-5	IMPLEMENTATION
// attempt to set the permissions, if we have been passed a POSIX instance, // and only if the file was created in this call.	WITHOUT_CLASSIFICATION	0.9999975462036809	WITHOUT_CLASSIFICATION	2.453796319112032E-6	IMPLEMENTATION
// // When reading into a heap buffer, the jvm allocates a temporary // direct ByteBuffer of the requested size.  To avoid allocating // a huge direct buffer when doing ludicrous reads (e.g. 1G or more) // we split the read up into chunks of no more than 1M //	WITHOUT_CLASSIFICATION	0.9999739796291491	WITHOUT_CLASSIFICATION	2.6020370850761377E-5	IMPLEMENTATION
// // If it is a file channel, then we can pre-allocate the output buffer // to the total size of buffered + remaining bytes in file //	WITHOUT_CLASSIFICATION	0.9999604118847331	WITHOUT_CLASSIFICATION	3.958811526692489E-5	IMPLEMENTATION
// // Cannot discern the total read length - allocate at least enough for the buffered data //	WITHOUT_CLASSIFICATION	0.9999599991681581	WITHOUT_CLASSIFICATION	4.000083184181584E-5	IMPLEMENTATION
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999795067809996	WITHOUT_CLASSIFICATION	2.0493219000451778E-5	IMPLEMENTATION
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999444865698724	WITHOUT_CLASSIFICATION	5.551343012748339E-5	IMPLEMENTATION
// already have some bytes buffered, just return those	WITHOUT_CLASSIFICATION	0.9999787234619798	WITHOUT_CLASSIFICATION	2.1276538020128717E-5	IMPLEMENTATION
// reset buffer	WITHOUT_CLASSIFICATION	0.9999093930908588	WITHOUT_CLASSIFICATION	9.060690914121368E-5	IMPLEMENTATION
// // Synchronize and re-check to avoid creating more than one Selector per provider //	WITHOUT_CLASSIFICATION	0.9998740158765038	WITHOUT_CLASSIFICATION	1.2598412349616766E-4	IMPLEMENTATION
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.8405453686735588	WITHOUT_CLASSIFICATION	0.15945463132644117	IMPLEMENTATION
// Is there something built into JRuby to do this?	WITHOUT_CLASSIFICATION	0.9998759481916469	WITHOUT_CLASSIFICATION	1.2405180835306444E-4	IMPLEMENTATION
// Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long // assertTrue(value == valueViaValuesIterator);	WITHOUT_CLASSIFICATION	0.9999953816822932	WITHOUT_CLASSIFICATION	4.618317706749562E-6	IMPLEMENTATION
// value equality //result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); //assertEquals("two", result);	WITHOUT_CLASSIFICATION	0.9999832323205459	WITHOUT_CLASSIFICATION	1.6767679454152335E-5	IMPLEMENTATION
// Uncomment the "puts" lines if you want to see more detail	WITHOUT_CLASSIFICATION	0.9999185098549958	WITHOUT_CLASSIFICATION	8.149014500423608E-5	IMPLEMENTATION
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.999992538841191	WITHOUT_CLASSIFICATION	7.461158808910627E-6	IMPLEMENTATION
// change the thread context to include the class	WITHOUT_CLASSIFICATION	0.9999301862307869	WITHOUT_CLASSIFICATION	6.981376921317184E-5	IMPLEMENTATION
