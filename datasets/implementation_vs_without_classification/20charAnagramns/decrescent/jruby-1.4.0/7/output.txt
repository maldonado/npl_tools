// TODO: warn "tried to create Proc object without a block"	IMPLEMENTATION	0.9648975629066308	WITHOUT_CLASSIFICATION	0.03510243709336935	IMPLEMENTATION
// TODO: CLONE_SETUP here	IMPLEMENTATION	0.8690234619622851	WITHOUT_CLASSIFICATION	0.13097653803771478	IMPLEMENTATION
// TODO: Someday, enable.	IMPLEMENTATION	0.8743711679600384	WITHOUT_CLASSIFICATION	0.12562883203996153	IMPLEMENTATION
// Bunch of methods still not implemented	IMPLEMENTATION	0.8169708810790915	IMPLEMENTATION	0.18302911892090848	WITHOUT_CLASSIFICATION
// TODO: non-strict option	IMPLEMENTATION	0.7740110467864423	WITHOUT_CLASSIFICATION	0.22598895321355764	IMPLEMENTATION
// TODO: opt for 2 and 3 ?	IMPLEMENTATION	0.8938489800037349	WITHOUT_CLASSIFICATION	0.10615101999626508	IMPLEMENTATION
// FIXME: Should we make this work with platform's locale, // or continue hardcoding US?	IMPLEMENTATION	0.998594865016736	WITHOUT_CLASSIFICATION	0.001405134983263931	IMPLEMENTATION
// TODO: rescan code range ?	IMPLEMENTATION	0.9074765843207963	WITHOUT_CLASSIFICATION	0.09252341567920375	IMPLEMENTATION
// TODO: rescan code range ?	IMPLEMENTATION	0.9074765843207963	WITHOUT_CLASSIFICATION	0.09252341567920375	IMPLEMENTATION
// TODO: pass this in?	IMPLEMENTATION	0.8335612145787283	WITHOUT_CLASSIFICATION	0.1664387854212717	IMPLEMENTATION
// FIXME: Pass block down?	IMPLEMENTATION	0.9996388147207731	WITHOUT_CLASSIFICATION	3.6118527922688064E-4	IMPLEMENTATION
// TODO: do something here?	IMPLEMENTATION	0.6500179592497097	WITHOUT_CLASSIFICATION	0.3499820407502904	IMPLEMENTATION
// TODO: port exact behavior from MRI, and move most locking logic into ChannelDescriptor // TODO: for all LOCK_NB cases, return false if they would block	IMPLEMENTATION	0.7932780546392209	WITHOUT_CLASSIFICATION	0.20672194536077917	IMPLEMENTATION
// TODO: check if too many open files, GC and try again	IMPLEMENTATION	0.5169737392792363	IMPLEMENTATION	0.48302626072076377	WITHOUT_CLASSIFICATION
//TODO deal with UNC names	IMPLEMENTATION	0.9998171363774444	WITHOUT_CLASSIFICATION	1.8286362255549223E-4	IMPLEMENTATION
// FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.9993522836458438	WITHOUT_CLASSIFICATION	6.4771635415612E-4	IMPLEMENTATION
//FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.9997709814991455	WITHOUT_CLASSIFICATION	2.2901850085448535E-4	IMPLEMENTATION
// TODO: SafeStringValue here	IMPLEMENTATION	0.8733295328128511	WITHOUT_CLASSIFICATION	0.12667046718714892	IMPLEMENTATION
// TODO: turn off readable? am I reading this right? // This only seems to be used while duping below, since modes gets // reset to actual modes afterward //fptr->mode &= (m & FMODE_READABLE) ? ~FMODE_READABLE : ~FMODE_WRITABLE;	IMPLEMENTATION	0.9783578180305603	WITHOUT_CLASSIFICATION	0.021642181969439657	IMPLEMENTATION
// TODO: check safe, taint on incoming string	IMPLEMENTATION	0.6152851059625359	WITHOUT_CLASSIFICATION	0.3847148940374641	IMPLEMENTATION
// TODO: pipe handler to be reopened with path and "w" mode	IMPLEMENTATION	0.8860300894282758	WITHOUT_CLASSIFICATION	0.11396991057172427	IMPLEMENTATION
// FIXME: add text mode to mode flags	IMPLEMENTATION	0.9998016653385966	WITHOUT_CLASSIFICATION	1.9833466140340613E-4	IMPLEMENTATION
// TODO: Something about pipe buffer length here	IMPLEMENTATION	0.9287733759717699	WITHOUT_CLASSIFICATION	0.07122662402823014	IMPLEMENTATION
// TODO: handle errors in buffered write by retrying until finished or file is closed	IMPLEMENTATION	0.934509941109865	IMPLEMENTATION	0.065490058890135	WITHOUT_CLASSIFICATION
// TODO: notify threads waiting on descriptors/IO? probably not...	IMPLEMENTATION	0.7807228596735448	WITHOUT_CLASSIFICATION	0.21927714032645504	IMPLEMENTATION
// TODO: Ruby re-checks that the buffer string hasn't been modified	IMPLEMENTATION	0.9151820639310034	WITHOUT_CLASSIFICATION	0.08481793606899657	IMPLEMENTATION
// TODO: Ruby unlocks the string here	IMPLEMENTATION	0.8630772452468138	WITHOUT_CLASSIFICATION	0.13692275475318627	IMPLEMENTATION
// TODO: Ruby truncates string to specific size here, but our bytelist should handle this already?	IMPLEMENTATION	0.6853109789233303	WITHOUT_CLASSIFICATION	0.3146890210766699	IMPLEMENTATION
// TODO: Ruby unlocks the string here	IMPLEMENTATION	0.8630772452468138	WITHOUT_CLASSIFICATION	0.13692275475318627	IMPLEMENTATION
// TODO: Ruby truncates string to specific size here, but our bytelist should handle this already?	IMPLEMENTATION	0.6853109789233303	WITHOUT_CLASSIFICATION	0.3146890210766699	IMPLEMENTATION
// TODO: ruby locks the string here	IMPLEMENTATION	0.9513745118252989	WITHOUT_CLASSIFICATION	0.04862548817470119	IMPLEMENTATION
// TODO same zero-length checks as file above	IMPLEMENTATION	0.9782008712674378	WITHOUT_CLASSIFICATION	0.021799128732562293	IMPLEMENTATION
// TODO: MRI also can hadle Bignum here	IMPLEMENTATION	0.8415373189389012	WITHOUT_CLASSIFICATION	0.15846268106109884	IMPLEMENTATION
// TODO: make threadsafe	IMPLEMENTATION	0.7666717151386572	WITHOUT_CLASSIFICATION	0.23332828486134277	IMPLEMENTATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9440737743736376	WITHOUT_CLASSIFICATION	0.055926225626362513	IMPLEMENTATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9440737743736376	WITHOUT_CLASSIFICATION	0.055926225626362513	IMPLEMENTATION
// FIXME: create AttrReaderMethod, AttrWriterMethod, for faster attr access	IMPLEMENTATION	0.9997774018413053	WITHOUT_CLASSIFICATION	2.225981586946459E-4	IMPLEMENTATION
// Do not clone cached methods // FIXME: MRI copies all methods here	IMPLEMENTATION	0.9998677326536457	WITHOUT_CLASSIFICATION	1.3226734635427999E-4	IMPLEMENTATION
// TODO: don't calculate the same value 3 times	IMPLEMENTATION	0.9898529102561753	WITHOUT_CLASSIFICATION	0.010147089743824778	IMPLEMENTATION
// TODO: 3 times calculate the same value below	IMPLEMENTATION	0.9857694624583696	WITHOUT_CLASSIFICATION	0.014230537541630405	IMPLEMENTATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.859230089373765	WITHOUT_CLASSIFICATION	0.1407699106262351	IMPLEMENTATION
// TODO: Store BEGIN and END information into this node	IMPLEMENTATION	0.943352679278545	WITHOUT_CLASSIFICATION	0.05664732072145499	IMPLEMENTATION
// TODO: put these nil guards into tree (bigger than I want to do right now)	IMPLEMENTATION	0.7906653999831271	WITHOUT_CLASSIFICATION	0.2093346000168729	IMPLEMENTATION
// FIXME: Make bodyNode non-null in parser	IMPLEMENTATION	0.9997027344315599	WITHOUT_CLASSIFICATION	2.972655684401329E-4	IMPLEMENTATION
// TODO: call config with scope but no frame	IMPLEMENTATION	0.8667798742089656	WITHOUT_CLASSIFICATION	0.13322012579103443	IMPLEMENTATION
// TODO: add trace call?	IMPLEMENTATION	0.6126289934566788	IMPLEMENTATION	0.38737100654332124	WITHOUT_CLASSIFICATION
// FIXME: missing arity check	IMPLEMENTATION	0.9997219131994162	WITHOUT_CLASSIFICATION	2.78086800583812E-4	IMPLEMENTATION
// FIXME: optimize for cases where we have no false branch	IMPLEMENTATION	0.9996205065749597	WITHOUT_CLASSIFICATION	3.7949342504031263E-4	IMPLEMENTATION
// FIXME: after jump is not in here.  Will if ever be? //Label afterJmp = new Label();	IMPLEMENTATION	0.9998130474126149	WITHOUT_CLASSIFICATION	1.8695258738507737E-4	IMPLEMENTATION
// TODO: build arg list based on number of args, optionals, etc	IMPLEMENTATION	0.9417052989702656	WITHOUT_CLASSIFICATION	0.05829470102973438	IMPLEMENTATION
// FIXME: missing arity check	IMPLEMENTATION	0.9997219131994162	WITHOUT_CLASSIFICATION	2.78086800583812E-4	IMPLEMENTATION
// SSS FIXME: Traverse up the scope hierarchy to find the constant as long as the parent is a static scope	IMPLEMENTATION	0.9999942204007232	WITHOUT_CLASSIFICATION	5.7795992768684155E-6	IMPLEMENTATION
// SSS FIXME: Should I be returning the operand constructed here?	IMPLEMENTATION	0.9998859720217134	WITHOUT_CLASSIFICATION	1.1402797828664231E-4	IMPLEMENTATION
// TODO: Add IR instructions for checking method arity! // s.getVariableCompiler().checkMethodArity(required, opt, rest);	IMPLEMENTATION	0.8409283657345694	WITHOUT_CLASSIFICATION	0.1590716342654306	IMPLEMENTATION
// FIXME: Ruby 1.9 post args code needs to come here	IMPLEMENTATION	0.9996139671787595	WITHOUT_CLASSIFICATION	3.860328212405562E-4	IMPLEMENTATION
// SSS: FIXME: Somewhere here, we need to record information the type of this operand as String	IMPLEMENTATION	0.9999594670182831	WITHOUT_CLASSIFICATION	4.0532981716974875E-5	IMPLEMENTATION
// FIXME: Translate this call below! // s.unwrapPassedBlock();	IMPLEMENTATION	0.9995234379413829	WITHOUT_CLASSIFICATION	4.765620586170389E-4	IMPLEMENTATION
// SSS FIXME: We need to build debug information tracking into the IR in some fashion // So, these methods below would have to have equivalents in IR_Scope implementations.	IMPLEMENTATION	0.9943876601436534	WITHOUT_CLASSIFICATION	0.005612339856346601	IMPLEMENTATION
// SSS FIXME: Incomplete!	IMPLEMENTATION	0.9998073277080521	WITHOUT_CLASSIFICATION	1.926722919478779E-4	IMPLEMENTATION
// SSS FIXME: Pick one of bytelist or string, or add internal conversion methods to convert to the default representation	IMPLEMENTATION	0.9999848612590231	WITHOUT_CLASSIFICATION	1.5138740977019496E-5	IMPLEMENTATION
// SSS FIXME: To be done	IMPLEMENTATION	0.9998593518196152	WITHOUT_CLASSIFICATION	1.406481803848305E-4	IMPLEMENTATION
//TODO: implement, won't do this now	IMPLEMENTATION	0.9252982267607941	IMPLEMENTATION	0.07470177323920593	WITHOUT_CLASSIFICATION
//TODO: implement, won't do this now	IMPLEMENTATION	0.9252982267607941	IMPLEMENTATION	0.07470177323920593	WITHOUT_CLASSIFICATION
// TODO: validate port as numeric	IMPLEMENTATION	0.9585852628872501	WITHOUT_CLASSIFICATION	0.04141473711274985	IMPLEMENTATION
// TODO: this code should really check if a Ruby equals method is implemented or not.	IMPLEMENTATION	0.9799313437092549	IMPLEMENTATION	0.020068656290745085	WITHOUT_CLASSIFICATION
// if not already defined, we add a 'new' that guesses at which signature to use // TODO: just adding first one right now...add in signature-guessing logic	IMPLEMENTATION	0.99280018822261	WITHOUT_CLASSIFICATION	0.007199811777390034	IMPLEMENTATION
// TODO: deal with varargs	IMPLEMENTATION	0.9070264859858238	WITHOUT_CLASSIFICATION	0.0929735140141762	IMPLEMENTATION
// TODO: deal with varargs	IMPLEMENTATION	0.9070264859858238	WITHOUT_CLASSIFICATION	0.0929735140141762	IMPLEMENTATION
// TODO: other reserved names?	IMPLEMENTATION	0.8917112237302621	WITHOUT_CLASSIFICATION	0.10828877626973793	IMPLEMENTATION
// TODO: we can probably release our references to the constantFields // array and static/instance callback hashes at this point. 	IMPLEMENTATION	0.9945491132142183	WITHOUT_CLASSIFICATION	0.005450886785781657	IMPLEMENTATION
// TODO: Formalize conversion mechanisms between Java and Ruby	IMPLEMENTATION	0.9422311343339542	WITHOUT_CLASSIFICATION	0.05776886566604582	IMPLEMENTATION
// XXX: Check if it's appropriate type?	IMPLEMENTATION	0.9998399009322329	WITHOUT_CLASSIFICATION	1.6009906776721504E-4	IMPLEMENTATION
// TODO: call ruby method	IMPLEMENTATION	0.8476658585835969	WITHOUT_CLASSIFICATION	0.15233414141640322	IMPLEMENTATION
// TODO: call ruby method	IMPLEMENTATION	0.8476658585835969	WITHOUT_CLASSIFICATION	0.15233414141640322	IMPLEMENTATION
// TODO: Add safety check for taintedness	IMPLEMENTATION	0.829409828712413	WITHOUT_CLASSIFICATION	0.17059017128758705	IMPLEMENTATION
// FIXME: Need to detect magic_comment in 1.9 here for encoding	IMPLEMENTATION	0.9996546821507342	WITHOUT_CLASSIFICATION	3.45317849265841E-4	IMPLEMENTATION
/* xxx shouldn't check if valid option variable */	IMPLEMENTATION	0.9999511885691933	WITHOUT_CLASSIFICATION	4.881143080661657E-5	IMPLEMENTATION
// TODO: this isn't handling multibyte yet	IMPLEMENTATION	0.7378746378640496	WITHOUT_CLASSIFICATION	0.26212536213595033	IMPLEMENTATION
// TODO: This should be something else like a tCHAR	IMPLEMENTATION	0.822045499236708	IMPLEMENTATION	0.17795450076329197	WITHOUT_CLASSIFICATION
// FIXME: \r logic needed	IMPLEMENTATION	0.998158984286081	WITHOUT_CLASSIFICATION	0.0018410157139190193	IMPLEMENTATION
// TODO: note lack of command.com support for Win 9x...	IMPLEMENTATION	0.6604743136880625	IMPLEMENTATION	0.3395256863119375	WITHOUT_CLASSIFICATION
// FIXME: Make thread pool threads daemons if necessary	IMPLEMENTATION	0.9998048151017103	WITHOUT_CLASSIFICATION	1.9518489828973531E-4	IMPLEMENTATION
/* FIXME: We may be intern'ing more than once.*/	IMPLEMENTATION	0.9997881897330505	WITHOUT_CLASSIFICATION	2.1181026694944374E-4	IMPLEMENTATION
/* FIXME: We may be intern'ing more than once.*/	IMPLEMENTATION	0.9997881897330505	WITHOUT_CLASSIFICATION	2.1181026694944374E-4	IMPLEMENTATION
/* FIXME: arg_concat missing for opt_call_args*/	IMPLEMENTATION	0.9998725876713802	WITHOUT_CLASSIFICATION	1.2741232861972513E-4	IMPLEMENTATION
/* FIXME: arg_concat logic missing for opt_call_args*/	IMPLEMENTATION	0.9998796250926918	WITHOUT_CLASSIFICATION	1.2037490730811869E-4	IMPLEMENTATION
// FIXME: This needs to happen for lambdas //            args.checkArgCount(runtime, parameters.length);	IMPLEMENTATION	0.9997259665777457	WITHOUT_CLASSIFICATION	2.740334222543335E-4	IMPLEMENTATION
// FIXME: This needs to happen for lambdas //            args.checkArgCount(runtime, parameters.length);	IMPLEMENTATION	0.9997259665777457	WITHOUT_CLASSIFICATION	2.740334222543335E-4	IMPLEMENTATION
// TODO: make it cross runtime safe by COW or eager copy	IMPLEMENTATION	0.8740571430645105	WITHOUT_CLASSIFICATION	0.12594285693548937	IMPLEMENTATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.9997377942988803	WITHOUT_CLASSIFICATION	2.6220570111967767E-4	IMPLEMENTATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.9997377942988803	WITHOUT_CLASSIFICATION	2.6220570111967767E-4	IMPLEMENTATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.9997377942988803	WITHOUT_CLASSIFICATION	2.6220570111967767E-4	IMPLEMENTATION
// TODO: check the return value here	IMPLEMENTATION	0.6813185403199127	IMPLEMENTATION	0.3186814596800873	WITHOUT_CLASSIFICATION
// TODO: check the return value here	IMPLEMENTATION	0.6813185403199127	IMPLEMENTATION	0.3186814596800873	WITHOUT_CLASSIFICATION
// TODO: Make sure all appropriate open flags are added to this check.	IMPLEMENTATION	0.6495562358851774	WITHOUT_CLASSIFICATION	0.35044376411482253	IMPLEMENTATION
//subList.clear(); // Sublist is supposed to share same backing store as list...TODO in RubyArray. //assertTrue(list.size() == 1);	IMPLEMENTATION	0.9999327544079243	WITHOUT_CLASSIFICATION	6.724559207570143E-5	IMPLEMENTATION
// SSS FIXME: Cannot optimize this without assuming that Range.to_ary method has not redefined. // So for now, return null!	IMPLEMENTATION	0.9997747064188104	WITHOUT_CLASSIFICATION	2.2529358118962388E-4	IMPLEMENTATION
// TODO Auto-generated method stub	IMPLEMENTATION	0.999994467152403	IMPLEMENTATION	5.532847596954491E-6	WITHOUT_CLASSIFICATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.9999397663967198	IMPLEMENTATION	6.0233603280108206E-5	WITHOUT_CLASSIFICATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.9999397663967198	IMPLEMENTATION	6.0233603280108206E-5	WITHOUT_CLASSIFICATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.9999397663967198	IMPLEMENTATION	6.0233603280108206E-5	WITHOUT_CLASSIFICATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.859230089373765	WITHOUT_CLASSIFICATION	0.1407699106262351	IMPLEMENTATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.859230089373765	WITHOUT_CLASSIFICATION	0.1407699106262351	IMPLEMENTATION
// TODO: check for ascii string	IMPLEMENTATION	0.6921625708841055	WITHOUT_CLASSIFICATION	0.3078374291158946	IMPLEMENTATION
// filter out any Java primitive names // TODO: should check against all Java reserved names here, not just primitives	IMPLEMENTATION	0.9129899381360003	WITHOUT_CLASSIFICATION	0.08701006186399972	IMPLEMENTATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9440737743736376	WITHOUT_CLASSIFICATION	0.055926225626362513	IMPLEMENTATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9440737743736376	WITHOUT_CLASSIFICATION	0.055926225626362513	IMPLEMENTATION
// TODO: missing additional logic for dealing with conflicting protected fields.	IMPLEMENTATION	0.9459173236884706	WITHOUT_CLASSIFICATION	0.054082676311529444	IMPLEMENTATION
// TODO: better detection when path is absolute or not. // If the path isn't absolute, then prepend the current working // directory to the path.	IMPLEMENTATION	0.9955357396419655	WITHOUT_CLASSIFICATION	0.0044642603580345	IMPLEMENTATION
// FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.9993522836458438	WITHOUT_CLASSIFICATION	6.4771635415612E-4	IMPLEMENTATION
// FIX replace type() == ... with isInstanceOf(...)	IMPLEMENTATION	0.9999307030117445	WITHOUT_CLASSIFICATION	6.929698825553667E-5	IMPLEMENTATION
/* TODO: MRI is just a when node.  We need this extra logic for IDE consumers (null in casenode statement should be implicit nil)*/	IMPLEMENTATION	0.9652021578217164	WITHOUT_CLASSIFICATION	0.03479784217828365	IMPLEMENTATION
// TODO: This and recacheRespondsTo needed to be synchronized for JRUBY-3466, // but this degraded performance nearly 2x. It's still faster than MRI, but // a reanalysis of this code may show a faster way to ensure we're caching // safely.	IMPLEMENTATION	0.5287666804888009	WITHOUT_CLASSIFICATION	0.47123331951119907	IMPLEMENTATION
// TODO: adjust length so it won't fall in the middle  // of a multi-byte character. MRI's sprintf.c uses tables // in a modified version of regex.c, which assume some // particular  encoding for a given installation/application. // (See regex.c#re_mbcinit in ruby-1.8.5-p12)  // // This is only an issue if the user specifies a precision // that causes the string to be truncated. The same issue // would arise taking a substring of a ByteList-backed RubyString.	IMPLEMENTATION	0.9990438127806054	WITHOUT_CLASSIFICATION	9.56187219394606E-4	IMPLEMENTATION
// set constants now that they're initialized	WITHOUT_CLASSIFICATION	0.9999814559690314	WITHOUT_CLASSIFICATION	1.8544030968474937E-5	IMPLEMENTATION
// line 335	WITHOUT_CLASSIFICATION	0.9999250208232384	WITHOUT_CLASSIFICATION	7.497917676152598E-5	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9998955649324311	WITHOUT_CLASSIFICATION	1.0443506756891177E-4	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9998955649324311	WITHOUT_CLASSIFICATION	1.0443506756891177E-4	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9998955649324311	WITHOUT_CLASSIFICATION	1.0443506756891177E-4	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9998955649324311	WITHOUT_CLASSIFICATION	1.0443506756891177E-4	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9998955649324311	WITHOUT_CLASSIFICATION	1.0443506756891177E-4	IMPLEMENTATION
// Figure end-char.  '\0' is special to indicate begin=end and that no nesting?	WITHOUT_CLASSIFICATION	0.9999455404414845	WITHOUT_CLASSIFICATION	5.445955851550058E-5	IMPLEMENTATION
// line 362	WITHOUT_CLASSIFICATION	0.9999250208232384	WITHOUT_CLASSIFICATION	7.497917676152598E-5	IMPLEMENTATION
// line 372	WITHOUT_CLASSIFICATION	0.9999250208232384	WITHOUT_CLASSIFICATION	7.497917676152598E-5	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9998946064448642	WITHOUT_CLASSIFICATION	1.0539355513591248E-4	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9998946064448642	WITHOUT_CLASSIFICATION	1.0539355513591248E-4	IMPLEMENTATION
// line 391	WITHOUT_CLASSIFICATION	0.9999250208232384	WITHOUT_CLASSIFICATION	7.497917676152598E-5	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9998946064448642	WITHOUT_CLASSIFICATION	1.0539355513591248E-4	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9998946064448642	WITHOUT_CLASSIFICATION	1.0539355513591248E-4	IMPLEMENTATION
/* ^D */	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
/* ^Z */	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9998955649324311	WITHOUT_CLASSIFICATION	1.0443506756891177E-4	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9998955649324311	WITHOUT_CLASSIFICATION	1.0443506756891177E-4	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9998955649324311	WITHOUT_CLASSIFICATION	1.0443506756891177E-4	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9998955649324311	WITHOUT_CLASSIFICATION	1.0443506756891177E-4	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9998955649324311	WITHOUT_CLASSIFICATION	1.0443506756891177E-4	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9998955649324311	WITHOUT_CLASSIFICATION	1.0443506756891177E-4	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9998955649324311	WITHOUT_CLASSIFICATION	1.0443506756891177E-4	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9998955649324311	WITHOUT_CLASSIFICATION	1.0443506756891177E-4	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9998955649324311	WITHOUT_CLASSIFICATION	1.0443506756891177E-4	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9998955649324311	WITHOUT_CLASSIFICATION	1.0443506756891177E-4	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9998955649324311	WITHOUT_CLASSIFICATION	1.0443506756891177E-4	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9998955649324311	WITHOUT_CLASSIFICATION	1.0443506756891177E-4	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9998955649324311	WITHOUT_CLASSIFICATION	1.0443506756891177E-4	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9998955649324311	WITHOUT_CLASSIFICATION	1.0443506756891177E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998955649324311	WITHOUT_CLASSIFICATION	1.0443506756891177E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998955649324311	WITHOUT_CLASSIFICATION	1.0443506756891177E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998955649324311	WITHOUT_CLASSIFICATION	1.0443506756891177E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998955649324311	WITHOUT_CLASSIFICATION	1.0443506756891177E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998955649324311	WITHOUT_CLASSIFICATION	1.0443506756891177E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998955649324311	WITHOUT_CLASSIFICATION	1.0443506756891177E-4	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9998946064448642	WITHOUT_CLASSIFICATION	1.0539355513591248E-4	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9998946064448642	WITHOUT_CLASSIFICATION	1.0539355513591248E-4	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9998946064448642	WITHOUT_CLASSIFICATION	1.0539355513591248E-4	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9998946064448642	WITHOUT_CLASSIFICATION	1.0539355513591248E-4	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9998946064448642	WITHOUT_CLASSIFICATION	1.0539355513591248E-4	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9998946064448642	WITHOUT_CLASSIFICATION	1.0539355513591248E-4	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9998946064448642	WITHOUT_CLASSIFICATION	1.0539355513591248E-4	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9998946064448642	WITHOUT_CLASSIFICATION	1.0539355513591248E-4	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9998946064448642	WITHOUT_CLASSIFICATION	1.0539355513591248E-4	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9998946064448642	WITHOUT_CLASSIFICATION	1.0539355513591248E-4	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9998946064448642	WITHOUT_CLASSIFICATION	1.0539355513591248E-4	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9998946064448642	WITHOUT_CLASSIFICATION	1.0539355513591248E-4	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9998946064448642	WITHOUT_CLASSIFICATION	1.0539355513591248E-4	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9998946064448642	WITHOUT_CLASSIFICATION	1.0539355513591248E-4	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9998946064448642	WITHOUT_CLASSIFICATION	1.0539355513591248E-4	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9998946064448642	WITHOUT_CLASSIFICATION	1.0539355513591248E-4	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9998946064448642	WITHOUT_CLASSIFICATION	1.0539355513591248E-4	IMPLEMENTATION
//Do nothing	WITHOUT_CLASSIFICATION	0.9999671160386197	WITHOUT_CLASSIFICATION	3.2883961380310115E-5	IMPLEMENTATION
//Do nothing	WITHOUT_CLASSIFICATION	0.9999671160386197	WITHOUT_CLASSIFICATION	3.2883961380310115E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.998128704523295	WITHOUT_CLASSIFICATION	0.001871295476705024	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.998128704523295	WITHOUT_CLASSIFICATION	0.001871295476705024	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.998128704523295	WITHOUT_CLASSIFICATION	0.001871295476705024	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.998128704523295	WITHOUT_CLASSIFICATION	0.001871295476705024	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.998128704523295	WITHOUT_CLASSIFICATION	0.001871295476705024	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.998128704523295	WITHOUT_CLASSIFICATION	0.001871295476705024	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.998128704523295	WITHOUT_CLASSIFICATION	0.001871295476705024	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.998128704523295	WITHOUT_CLASSIFICATION	0.001871295476705024	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.998128704523295	WITHOUT_CLASSIFICATION	0.001871295476705024	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.998128704523295	WITHOUT_CLASSIFICATION	0.001871295476705024	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.998128704523295	WITHOUT_CLASSIFICATION	0.001871295476705024	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.998128704523295	WITHOUT_CLASSIFICATION	0.001871295476705024	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.998128704523295	WITHOUT_CLASSIFICATION	0.001871295476705024	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.998128704523295	WITHOUT_CLASSIFICATION	0.001871295476705024	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.998128704523295	WITHOUT_CLASSIFICATION	0.001871295476705024	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.998128704523295	WITHOUT_CLASSIFICATION	0.001871295476705024	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.998128704523295	WITHOUT_CLASSIFICATION	0.001871295476705024	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.998128704523295	WITHOUT_CLASSIFICATION	0.001871295476705024	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.998128704523295	WITHOUT_CLASSIFICATION	0.001871295476705024	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.998128704523295	WITHOUT_CLASSIFICATION	0.001871295476705024	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.998128704523295	WITHOUT_CLASSIFICATION	0.001871295476705024	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.998128704523295	WITHOUT_CLASSIFICATION	0.001871295476705024	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.998128704523295	WITHOUT_CLASSIFICATION	0.001871295476705024	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.998128704523295	WITHOUT_CLASSIFICATION	0.001871295476705024	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.998128704523295	WITHOUT_CLASSIFICATION	0.001871295476705024	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.998128704523295	WITHOUT_CLASSIFICATION	0.001871295476705024	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.998128704523295	WITHOUT_CLASSIFICATION	0.001871295476705024	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.998128704523295	WITHOUT_CLASSIFICATION	0.001871295476705024	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.998128704523295	WITHOUT_CLASSIFICATION	0.001871295476705024	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.998128704523295	WITHOUT_CLASSIFICATION	0.001871295476705024	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.998128704523295	WITHOUT_CLASSIFICATION	0.001871295476705024	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.998128704523295	WITHOUT_CLASSIFICATION	0.001871295476705024	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.998128704523295	WITHOUT_CLASSIFICATION	0.001871295476705024	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.998128704523295	WITHOUT_CLASSIFICATION	0.001871295476705024	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.998128704523295	WITHOUT_CLASSIFICATION	0.001871295476705024	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.998128704523295	WITHOUT_CLASSIFICATION	0.001871295476705024	IMPLEMENTATION
// return result	WITHOUT_CLASSIFICATION	0.9999843357853881	WITHOUT_CLASSIFICATION	1.566421461184679E-5	IMPLEMENTATION
// name	WITHOUT_CLASSIFICATION	0.9974737259231549	WITHOUT_CLASSIFICATION	0.0025262740768451776	IMPLEMENTATION
// Define System.getProperties() in ENV_JAVA	WITHOUT_CLASSIFICATION	0.9999529303569036	WITHOUT_CLASSIFICATION	4.7069643096414045E-5	IMPLEMENTATION
// Accessor methods.	WITHOUT_CLASSIFICATION	0.9999233071794511	WITHOUT_CLASSIFICATION	7.669282054880993E-5	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999111873905092	WITHOUT_CLASSIFICATION	8.881260949079196E-5	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999111873905092	WITHOUT_CLASSIFICATION	8.881260949079196E-5	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999111873905092	WITHOUT_CLASSIFICATION	8.881260949079196E-5	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999111873905092	WITHOUT_CLASSIFICATION	8.881260949079196E-5	IMPLEMENTATION
// call getpwent to fail early if unsupported	WITHOUT_CLASSIFICATION	0.9999445156391453	WITHOUT_CLASSIFICATION	5.548436085478396E-5	IMPLEMENTATION
// fall back on env entry for USER	WITHOUT_CLASSIFICATION	0.9999291993561967	WITHOUT_CLASSIFICATION	7.080064380325469E-5	IMPLEMENTATION
// try to read grent to fail fast	WITHOUT_CLASSIFICATION	0.999969429148574	WITHOUT_CLASSIFICATION	3.057085142604102E-5	IMPLEMENTATION
// define ARGV and $* for this runtime	WITHOUT_CLASSIFICATION	0.9999648478475976	WITHOUT_CLASSIFICATION	3.515215240227975E-5	IMPLEMENTATION
// Version information:	WITHOUT_CLASSIFICATION	0.9999542701067615	WITHOUT_CLASSIFICATION	4.5729893238523975E-5	IMPLEMENTATION
// after defn of $stderr as the call may produce warnings	WITHOUT_CLASSIFICATION	0.9999651592596911	WITHOUT_CLASSIFICATION	3.484074030896158E-5	IMPLEMENTATION
// ARGF, $< object	WITHOUT_CLASSIFICATION	0.9999212207370081	WITHOUT_CLASSIFICATION	7.877926299196643E-5	IMPLEMENTATION
// if the environment variables can't be obtained, define an empty ENV	WITHOUT_CLASSIFICATION	0.9999942213568705	WITHOUT_CLASSIFICATION	5.778643129485544E-6	IMPLEMENTATION
// On platforms without a c-library accessable through JNA, getpid will return hashCode  // as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing // $$ on getpid() where available, we have the same semantics as MRI.	WITHOUT_CLASSIFICATION	0.9999950210535363	WITHOUT_CLASSIFICATION	4.978946463657839E-6	IMPLEMENTATION
//$@ returns nil if $!.backtrace is not an array	WITHOUT_CLASSIFICATION	0.9999657298717874	WITHOUT_CLASSIFICATION	3.4270128212531306E-5	IMPLEMENTATION
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999486564225047	WITHOUT_CLASSIFICATION	5.134357749526013E-5	IMPLEMENTATION
// MRI behavior: just plain '//' or '\\\\' are considered illegal on Windows.	WITHOUT_CLASSIFICATION	0.9999526902525931	WITHOUT_CLASSIFICATION	4.730974740683979E-5	IMPLEMENTATION
// this _is_ legal (when removing an undef)	WITHOUT_CLASSIFICATION	0.9999253810331085	WITHOUT_CLASSIFICATION	7.461896689155384E-5	IMPLEMENTATION
// What we passed to the constructor for method 'path'	WITHOUT_CLASSIFICATION	0.9999709790180731	WITHOUT_CLASSIFICATION	2.9020981926911312E-5	IMPLEMENTATION
// ----- Ruby Class Methods ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999900422383762	WITHOUT_CLASSIFICATION	9.957761623767468E-6	IMPLEMENTATION
// // CONSTANT TABLE METHODS - pass to delegate //	WITHOUT_CLASSIFICATION	0.9999472795589179	WITHOUT_CLASSIFICATION	5.2720441082087043E-5	IMPLEMENTATION
// We get canonical path to try and flatten the path out. // a dir '/subdir/..' should return as '/' // cnutter: Do we want to flatten path out?	WITHOUT_CLASSIFICATION	0.9997868121885392	WITHOUT_CLASSIFICATION	2.1318781146080644E-4	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999111873905092	WITHOUT_CLASSIFICATION	8.881260949079196E-5	IMPLEMENTATION
// ----- Ruby Instance Methods -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999903603030315	WITHOUT_CLASSIFICATION	9.639696968569422E-6	IMPLEMENTATION
// Make sure any read()s after close fail.	WITHOUT_CLASSIFICATION	0.9999739000944449	WITHOUT_CLASSIFICATION	2.609990555517855E-5	IMPLEMENTATION
// ----- Helper Methods --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999919190355935	WITHOUT_CLASSIFICATION	8.080964406642352E-6	IMPLEMENTATION
// try to use POSIX for this first	WITHOUT_CLASSIFICATION	0.999975064961346	WITHOUT_CLASSIFICATION	2.493503865391075E-5	IMPLEMENTATION
// otherwise fall back on the old way	WITHOUT_CLASSIFICATION	0.9999458812521528	WITHOUT_CLASSIFICATION	5.411874784714065E-5	IMPLEMENTATION
// Proc class	WITHOUT_CLASSIFICATION	0.9999308073373566	WITHOUT_CLASSIFICATION	6.919266264338096E-5	IMPLEMENTATION
// No passed in block, lets check next outer frame for one ('Proc.new')	WITHOUT_CLASSIFICATION	0.9999600988604632	WITHOUT_CLASSIFICATION	3.9901139536750864E-5	IMPLEMENTATION
// modify the block with a new backref/lastline-grabbing scope	WITHOUT_CLASSIFICATION	0.99994200331209	WITHOUT_CLASSIFICATION	5.799668790982322E-5	IMPLEMENTATION
// for future compatibility as constructors move toward not accepting metaclass?	WITHOUT_CLASSIFICATION	0.9999433437922948	WITHOUT_CLASSIFICATION	5.665620770517148E-5	IMPLEMENTATION
//        case RUBY_HYBRID: //            backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); //            break;	WITHOUT_CLASSIFICATION	0.9999915873399202	WITHOUT_CLASSIFICATION	8.412660079855517E-6	IMPLEMENTATION
// This looks wrong, but it's the way MRI does it.	WITHOUT_CLASSIFICATION	0.9999866111278848	WITHOUT_CLASSIFICATION	1.3388872115218297E-5	IMPLEMENTATION
// rb_exc_new3	WITHOUT_CLASSIFICATION	0.9998955649324311	WITHOUT_CLASSIFICATION	1.0443506756891177E-4	IMPLEMENTATION
// NOTE: The indicies here match exactly the signal values; do not reorder	WITHOUT_CLASSIFICATION	0.9999764679340986	WITHOUT_CLASSIFICATION	2.3532065901462124E-5	IMPLEMENTATION
//registerThreadDumpSignalHandler(runtime);	WITHOUT_CLASSIFICATION	0.9999434680332806	WITHOUT_CLASSIFICATION	5.653196671946619E-5	IMPLEMENTATION
// IOT is also 6	WITHOUT_CLASSIFICATION	0.999901564006749	WITHOUT_CLASSIFICATION	9.843599325108342E-5	IMPLEMENTATION
// CLD is also 20	WITHOUT_CLASSIFICATION	0.9999015321029168	WITHOUT_CLASSIFICATION	9.846789708327412E-5	IMPLEMENTATION
// RubySignal	WITHOUT_CLASSIFICATION	0.9998967967179512	WITHOUT_CLASSIFICATION	1.0320328204888622E-4	IMPLEMENTATION
// ZStream actually *isn't* allocatable	WITHOUT_CLASSIFICATION	0.9999002513265329	WITHOUT_CLASSIFICATION	9.974867346705764E-5	IMPLEMENTATION
// MRI behavior, enforced by tests	WITHOUT_CLASSIFICATION	0.9999439738992	WITHOUT_CLASSIFICATION	5.60261007999821E-5	IMPLEMENTATION
// it's safe since adler.update doesn't modify the array	WITHOUT_CLASSIFICATION	0.9999720398335803	WITHOUT_CLASSIFICATION	2.796016641979264E-5	IMPLEMENTATION
// MRI behavior: in finished mode, we work as pass-through	WITHOUT_CLASSIFICATION	0.999918343695643	WITHOUT_CLASSIFICATION	8.165630435702281E-5	IMPLEMENTATION
// SYNC_FLUSH	WITHOUT_CLASSIFICATION	0.9998955649324311	WITHOUT_CLASSIFICATION	1.0443506756891177E-4	IMPLEMENTATION
// By default, NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999615424413313	WITHOUT_CLASSIFICATION	3.84575586686235E-5	IMPLEMENTATION
//io.finish();	WITHOUT_CLASSIFICATION	0.9998889246966464	WITHOUT_CLASSIFICATION	1.1107530335354132E-4	IMPLEMENTATION
// should invoke seek on realIo	WITHOUT_CLASSIFICATION	0.999954098349185	WITHOUT_CLASSIFICATION	4.59016508150107E-5	IMPLEMENTATION
// hmm...	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
// Called before any write to make sure the // header is always written before the first bytes	WITHOUT_CLASSIFICATION	0.9999943274944562	WITHOUT_CLASSIFICATION	5.672505543942229E-6	IMPLEMENTATION
// For JDK 1.4 we can use "cal.getTimeInMillis()"	WITHOUT_CLASSIFICATION	0.9999372448343449	WITHOUT_CLASSIFICATION	6.275516565512436E-5	IMPLEMENTATION
// We can just use dt, since it is immutable	WITHOUT_CLASSIFICATION	0.9999424594296458	WITHOUT_CLASSIFICATION	5.754057035421336E-5	IMPLEMENTATION
// float number of seconds	WITHOUT_CLASSIFICATION	0.9999882627256124	WITHOUT_CLASSIFICATION	1.1737274387758941E-5	IMPLEMENTATION
// modified to match how hash is calculated in 1.8.2	WITHOUT_CLASSIFICATION	0.99996269091785	WITHOUT_CLASSIFICATION	3.7309082150067305E-5	IMPLEMENTATION
// dump usec, not msec	WITHOUT_CLASSIFICATION	0.9999153886894623	WITHOUT_CLASSIFICATION	8.461131053771567E-5	IMPLEMENTATION
/* Time class methods */	WITHOUT_CLASSIFICATION	0.9999582762060523	WITHOUT_CLASSIFICATION	4.172379394778948E-5	IMPLEMENTATION
// marsaling dumps usec, not msec	WITHOUT_CLASSIFICATION	0.9999270770975113	WITHOUT_CLASSIFICATION	7.29229024886515E-5	IMPLEMENTATION
// MRI accepts additional wday argument which appears to be ignored.	WITHOUT_CLASSIFICATION	0.9999874949361377	WITHOUT_CLASSIFICATION	1.2505063862321237E-5	IMPLEMENTATION
// set up with min values and then add to allow rolling over	WITHOUT_CLASSIFICATION	0.9999588409760337	WITHOUT_CLASSIFICATION	4.1159023966268535E-5	IMPLEMENTATION
// the instant at which we will ask dtz what the difference between DST and // standard time is	WITHOUT_CLASSIFICATION	0.9999815889235818	WITHOUT_CLASSIFICATION	1.8411076418259508E-5	IMPLEMENTATION
// if we might be moving this time from !DST -> DST, the offset is assumed // to be the same as it was just before we last moved from DST -> !DST	WITHOUT_CLASSIFICATION	0.9999863550740776	WITHOUT_CLASSIFICATION	1.3644925922448704E-5	IMPLEMENTATION
// Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.	WITHOUT_CLASSIFICATION	0.9999969800233915	WITHOUT_CLASSIFICATION	3.0199766083755284E-6	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999748289066932	WITHOUT_CLASSIFICATION	2.5171093306798425E-5	IMPLEMENTATION
/* If the value will fit in a Fixnum, return one of those. */	WITHOUT_CLASSIFICATION	0.9999863489973503	WITHOUT_CLASSIFICATION	1.3651002649797403E-5	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999773761383295	WITHOUT_CLASSIFICATION	2.2623861670601746E-5	IMPLEMENTATION
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9999128394226408	WITHOUT_CLASSIFICATION	8.716057735922118E-5	IMPLEMENTATION
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.959038104302406	WITHOUT_CLASSIFICATION	0.04096189569759409	IMPLEMENTATION
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.959038104302406	WITHOUT_CLASSIFICATION	0.04096189569759409	IMPLEMENTATION
// no bignorm here needed	WITHOUT_CLASSIFICATION	0.9996488811035407	WITHOUT_CLASSIFICATION	3.511188964593198E-4	IMPLEMENTATION
// wow, the only time we can use the java protocol ;)	WITHOUT_CLASSIFICATION	0.9999560086830335	WITHOUT_CLASSIFICATION	4.399131696649632E-5	IMPLEMENTATION
// Pad with a 0	WITHOUT_CLASSIFICATION	0.9999072705537981	WITHOUT_CLASSIFICATION	9.272944620190767E-5	IMPLEMENTATION
// BigInteger required a sign byte in incoming array	WITHOUT_CLASSIFICATION	0.9999509925472396	WITHOUT_CLASSIFICATION	4.90074527603755E-5	IMPLEMENTATION
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9999931491199456	WITHOUT_CLASSIFICATION	6.8508800543076955E-6	IMPLEMENTATION
// We do this b/c make_tmpname might be overridden	WITHOUT_CLASSIFICATION	0.9999416266329354	WITHOUT_CLASSIFICATION	5.8373367064571235E-5	IMPLEMENTATION
// ???	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
// PID	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999773761383295	WITHOUT_CLASSIFICATION	2.2623861670601746E-5	IMPLEMENTATION
// elements and trailing nils	WITHOUT_CLASSIFICATION	0.9999707378528482	WITHOUT_CLASSIFICATION	2.9262147151860865E-5	IMPLEMENTATION
// Dir::tmpdir	WITHOUT_CLASSIFICATION	0.9998957038873365	WITHOUT_CLASSIFICATION	1.0429611266348583E-4	IMPLEMENTATION
// volatile to ensure that initial nil-fill is visible to other threads	WITHOUT_CLASSIFICATION	0.9999355489172157	WITHOUT_CLASSIFICATION	6.445108278437735E-5	IMPLEMENTATION
/* Ruby arrays default to holding 16 elements, so we create an         * ArrayList of the same size if we're not told otherwise         */	WITHOUT_CLASSIFICATION	0.9999989278141131	WITHOUT_CLASSIFICATION	1.0721858868808712E-6	IMPLEMENTATION
/* rb_ary_new2     * just allocates the internal array     */	WITHOUT_CLASSIFICATION	0.9999625802545978	WITHOUT_CLASSIFICATION	3.741974540219011E-5	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999811712081262	WITHOUT_CLASSIFICATION	1.8828791873819992E-5	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999811712081262	WITHOUT_CLASSIFICATION	1.8828791873819992E-5	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999811712081262	WITHOUT_CLASSIFICATION	1.8828791873819992E-5	IMPLEMENTATION
/* Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour     *      */	WITHOUT_CLASSIFICATION	0.9999631203044071	WITHOUT_CLASSIFICATION	3.6879695592811145E-5	IMPLEMENTATION
/* NEWOBJ and OBJSETUP equivalent     * fastest one, for shared arrays, optional objectspace     */	WITHOUT_CLASSIFICATION	0.9999600066578579	WITHOUT_CLASSIFICATION	3.999334214206725E-5	IMPLEMENTATION
// Create global constants and variables	WITHOUT_CLASSIFICATION	0.9999886993533049	WITHOUT_CLASSIFICATION	1.1300646694984132E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9996232021338811	WITHOUT_CLASSIFICATION	3.767978661188872E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9996232021338811	WITHOUT_CLASSIFICATION	3.767978661188872E-4	IMPLEMENTATION
// Windows does not support these functions, so we won't even try // This also matches Ruby behavior for JRUBY-2353.	WITHOUT_CLASSIFICATION	0.9999655000758942	WITHOUT_CLASSIFICATION	3.449992410571316E-5	IMPLEMENTATION
// There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and // newer one (US/Pacific, America/Los_Angeles). This pattern is to detect // the legacy TZ format in order to convert it to the newer format // understood by Java API.	WITHOUT_CLASSIFICATION	0.9999938745415976	WITHOUT_CLASSIFICATION	6.125458402454975E-6	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9996232021338811	WITHOUT_CLASSIFICATION	3.767978661188872E-4	IMPLEMENTATION
// 1.9 seems to just do inspect for to_s now	WITHOUT_CLASSIFICATION	0.9999360230304701	WITHOUT_CLASSIFICATION	6.397696952985782E-5	IMPLEMENTATION
// possibly should not in object space	WITHOUT_CLASSIFICATION	0.9999649195861012	WITHOUT_CLASSIFICATION	3.508041389889454E-5	IMPLEMENTATION
// only fill if there actually will remain trailing storage	WITHOUT_CLASSIFICATION	0.9999738917129767	WITHOUT_CLASSIFICATION	2.6108287023340477E-5	IMPLEMENTATION
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9998955649324311	WITHOUT_CLASSIFICATION	1.0443506756891177E-4	IMPLEMENTATION
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9998955649324311	WITHOUT_CLASSIFICATION	1.0443506756891177E-4	IMPLEMENTATION
// from DUP_SETUP	WITHOUT_CLASSIFICATION	0.9999145833265697	WITHOUT_CLASSIFICATION	8.54166734302759E-5	IMPLEMENTATION
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999822505095074	WITHOUT_CLASSIFICATION	1.7749490492558938E-5	IMPLEMENTATION
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.999916965216921	WITHOUT_CLASSIFICATION	8.303478307895601E-5	IMPLEMENTATION
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.999916965216921	WITHOUT_CLASSIFICATION	8.303478307895601E-5	IMPLEMENTATION
// Satisfy java.util.List interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999566401697322	WITHOUT_CLASSIFICATION	4.335983026785938E-5	IMPLEMENTATION
// pre-set for the sake of terminating recursive calls	WITHOUT_CLASSIFICATION	0.9999842146169794	WITHOUT_CLASSIFICATION	1.5785383020574264E-5	IMPLEMENTATION
/* root fiber */	WITHOUT_CLASSIFICATION	0.999897399658812	WITHOUT_CLASSIFICATION	1.0260034118803785E-4	IMPLEMENTATION
// GMT+00:00 --> Etc/GMT, see "MRI behavior" // comment below.	WITHOUT_CLASSIFICATION	0.9999424138842059	WITHOUT_CLASSIFICATION	5.758611579415908E-5	IMPLEMENTATION
//  See http://www.gzip.org/zlib/rfc-gzip.html	WITHOUT_CLASSIFICATION	0.9999278890733477	WITHOUT_CLASSIFICATION	7.211092665221327E-5	IMPLEMENTATION
// extras flag	WITHOUT_CLASSIFICATION	0.9999161840902974	WITHOUT_CLASSIFICATION	8.381590970264898E-5	IMPLEMENTATION
// Zlib::NO_FLUSH	WITHOUT_CLASSIFICATION	0.9998955649324311	WITHOUT_CLASSIFICATION	1.0443506756891177E-4	IMPLEMENTATION
// ...nothing	WITHOUT_CLASSIFICATION	0.9999514403673315	WITHOUT_CLASSIFICATION	4.8559632668464574E-5	IMPLEMENTATION
// utility method	WITHOUT_CLASSIFICATION	0.9999155585958948	WITHOUT_CLASSIFICATION	8.444140410526249E-5	IMPLEMENTATION
// Prepare LoadService and load path	WITHOUT_CLASSIFICATION	0.9999422166287133	WITHOUT_CLASSIFICATION	5.77833712867596E-5	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999773761383295	WITHOUT_CLASSIFICATION	2.2623861670601746E-5	IMPLEMENTATION
// flags // 4 bytes of modified time	WITHOUT_CLASSIFICATION	0.9999190541734573	WITHOUT_CLASSIFICATION	8.094582654277628E-5	IMPLEMENTATION
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999627200969234	WITHOUT_CLASSIFICATION	3.7279903076446536E-5	IMPLEMENTATION
// 1.8 "include?"	WITHOUT_CLASSIFICATION	0.999896881207756	WITHOUT_CLASSIFICATION	1.0311879224400267E-4	IMPLEMENTATION
// any BigInteger is bigger than Fixnum and we don't have FIXABLE	WITHOUT_CLASSIFICATION	0.9999589061812634	WITHOUT_CLASSIFICATION	4.109381873664459E-5	IMPLEMENTATION
// beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal	WITHOUT_CLASSIFICATION	0.9999447935288387	WITHOUT_CLASSIFICATION	5.520647116137398E-5	IMPLEMENTATION
// MRI does it!	WITHOUT_CLASSIFICATION	0.9998991138845	WITHOUT_CLASSIFICATION	1.00886115500004E-4	IMPLEMENTATION
// won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999231170599949	WITHOUT_CLASSIFICATION	7.68829400050387E-5	IMPLEMENTATION
// it won't hurt fixnums	WITHOUT_CLASSIFICATION	0.999934642831395	WITHOUT_CLASSIFICATION	6.535716860495245E-5	IMPLEMENTATION
// RubyClassPathVariable	WITHOUT_CLASSIFICATION	0.9999186887351942	WITHOUT_CLASSIFICATION	8.131126480576947E-5	IMPLEMENTATION
// not to be confused with RubyObject's flags	WITHOUT_CLASSIFICATION	0.9998235010840268	WITHOUT_CLASSIFICATION	1.7649891597316996E-4	IMPLEMENTATION
// second argument is allowed, but ignored (MRI)	WITHOUT_CLASSIFICATION	0.999994550446186	WITHOUT_CLASSIFICATION	5.449553813940136E-6	IMPLEMENTATION
// we are presumably running a precompiled class; load directly	WITHOUT_CLASSIFICATION	0.9999810322297602	WITHOUT_CLASSIFICATION	1.8967770239813723E-5	IMPLEMENTATION
// terminate; tryCompile will have printed out an error and we're done	WITHOUT_CLASSIFICATION	0.9999554916941784	WITHOUT_CLASSIFICATION	4.450830582166547E-5	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999774418723095	WITHOUT_CLASSIFICATION	2.2558127690479172E-5	IMPLEMENTATION
// do nothing, this iteration restarts	WITHOUT_CLASSIFICATION	0.9999893332159026	WITHOUT_CLASSIFICATION	1.0666784097436747E-5	IMPLEMENTATION
// recheck condition	WITHOUT_CLASSIFICATION	0.9999166836199865	WITHOUT_CLASSIFICATION	8.331638001346674E-5	IMPLEMENTATION
// Get the main threadcontext (gets constructed for us)	WITHOUT_CLASSIFICATION	0.9999848984554823	WITHOUT_CLASSIFICATION	1.5101544517744018E-5	IMPLEMENTATION
// Construct key services	WITHOUT_CLASSIFICATION	0.9999572942773368	WITHOUT_CLASSIFICATION	4.270572266325308E-5	IMPLEMENTATION
// initialize the root of the class hierarchy completely	WITHOUT_CLASSIFICATION	0.9999949065219319	WITHOUT_CLASSIFICATION	5.093478068118593E-6	IMPLEMENTATION
// Construct the top-level execution frame and scope for the main thread	WITHOUT_CLASSIFICATION	0.9999901300204613	WITHOUT_CLASSIFICATION	9.869979538586321E-6	IMPLEMENTATION
// Initialize all the core classes	WITHOUT_CLASSIFICATION	0.9999874215876607	WITHOUT_CLASSIFICATION	1.2578412339281035E-5	IMPLEMENTATION
// Initialize the "dummy" class used as a marker	WITHOUT_CLASSIFICATION	0.9999862089867618	WITHOUT_CLASSIFICATION	1.379101323821796E-5	IMPLEMENTATION
// Initialize Kernel and include into Object	WITHOUT_CLASSIFICATION	0.9999686480330526	WITHOUT_CLASSIFICATION	3.1351966947430666E-5	IMPLEMENTATION
// Object is ready, create top self	WITHOUT_CLASSIFICATION	0.9999537254923244	WITHOUT_CLASSIFICATION	4.6274507675495126E-5	IMPLEMENTATION
// Pre-create all the core classes potentially referenced during startup	WITHOUT_CLASSIFICATION	0.9999927356382109	WITHOUT_CLASSIFICATION	7.264361789153191E-6	IMPLEMENTATION
// Math depends on all numeric types	WITHOUT_CLASSIFICATION	0.9999402102676088	WITHOUT_CLASSIFICATION	5.978973239123408E-5	IMPLEMENTATION
// depends on IO, FileTest	WITHOUT_CLASSIFICATION	0.9999285926046634	WITHOUT_CLASSIFICATION	7.140739533663741E-5	IMPLEMENTATION
// initialize builtin libraries	WITHOUT_CLASSIFICATION	0.99997759418309	WITHOUT_CLASSIFICATION	2.2405816910030506E-5	IMPLEMENTATION
// Require in all libraries specified on command line	WITHOUT_CLASSIFICATION	0.9999837327679822	WITHOUT_CLASSIFICATION	1.6267232017793848E-5	IMPLEMENTATION
// Bootstrap the top of the hierarchy	WITHOUT_CLASSIFICATION	0.9999654796452014	WITHOUT_CLASSIFICATION	3.45203547985364E-5	IMPLEMENTATION
// we try to get the classloader that loaded JRuby, falling back on System	WITHOUT_CLASSIFICATION	0.9999839181842608	WITHOUT_CLASSIFICATION	1.6081815739207435E-5	IMPLEMENTATION
// determine spacing	WITHOUT_CLASSIFICATION	0.9999319721168889	WITHOUT_CLASSIFICATION	6.802788311108941E-5	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999202088094193	WITHOUT_CLASSIFICATION	7.979119058073072E-5	IMPLEMENTATION
// For JSR 223 support: see http://scripting.java.net/	WITHOUT_CLASSIFICATION	0.9998894901191462	WITHOUT_CLASSIFICATION	1.1050988085376156E-4	IMPLEMENTATION
// use this for JRuby-internal finalizers	WITHOUT_CLASSIFICATION	0.9999142336183071	WITHOUT_CLASSIFICATION	8.576638169290901E-5	IMPLEMENTATION
// this method is for finalizers registered via ObjectSpace	WITHOUT_CLASSIFICATION	0.9998991449987892	WITHOUT_CLASSIFICATION	1.0085500121075237E-4	IMPLEMENTATION
// new factory methods ------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999878547168702	WITHOUT_CLASSIFICATION	1.2145283129912171E-5	IMPLEMENTATION
//        assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999823309285398	WITHOUT_CLASSIFICATION	1.7669071460168203E-5	IMPLEMENTATION
// Equivalent of Data_Wrap_Struct	WITHOUT_CLASSIFICATION	0.999904583801006	WITHOUT_CLASSIFICATION	9.541619899393285E-5	IMPLEMENTATION
// default: don't retain	WITHOUT_CLASSIFICATION	0.99998327841893	WITHOUT_CLASSIFICATION	1.6721581070089558E-5	IMPLEMENTATION
// ChannelDescriptors opened by sysopen are cached to avoid collection	WITHOUT_CLASSIFICATION	0.9999690832910033	WITHOUT_CLASSIFICATION	3.0916708996637055E-5	IMPLEMENTATION
// Default objects	WITHOUT_CLASSIFICATION	0.9999789085086006	WITHOUT_CLASSIFICATION	2.109149139942519E-5	IMPLEMENTATION
// record separator var, to speed up io ops that use it	WITHOUT_CLASSIFICATION	0.9999594921863145	WITHOUT_CLASSIFICATION	4.050781368551949E-5	IMPLEMENTATION
// former java.lang.System concepts now internalized for MVM	WITHOUT_CLASSIFICATION	0.9999617381068625	WITHOUT_CLASSIFICATION	3.826189313749906E-5	IMPLEMENTATION
// Java support	WITHOUT_CLASSIFICATION	0.9998125648399794	WITHOUT_CLASSIFICATION	1.874351600205981E-4	IMPLEMENTATION
// Parser stats	WITHOUT_CLASSIFICATION	0.9999149179445901	WITHOUT_CLASSIFICATION	8.508205541002163E-5	IMPLEMENTATION
// Compilation	WITHOUT_CLASSIFICATION	0.9999136071525809	WITHOUT_CLASSIFICATION	8.639284741906684E-5	IMPLEMENTATION
// can't read non-standard properties	WITHOUT_CLASSIFICATION	0.9999598100729572	WITHOUT_CLASSIFICATION	4.018992704277847E-5	IMPLEMENTATION
// can't create custom classloaders	WITHOUT_CLASSIFICATION	0.9999731371902446	WITHOUT_CLASSIFICATION	2.686280975532957E-5	IMPLEMENTATION
// mutex that controls modifications of user-defined finalizers	WITHOUT_CLASSIFICATION	0.9999621529209506	WITHOUT_CLASSIFICATION	3.7847079049340965E-5	IMPLEMENTATION
// mutex that controls modifications of internal finalizers	WITHOUT_CLASSIFICATION	0.9999645245285417	WITHOUT_CLASSIFICATION	3.547547145835085E-5	IMPLEMENTATION
// A thread pool to use for executing this runtime's Ruby threads	WITHOUT_CLASSIFICATION	0.9999505741786225	WITHOUT_CLASSIFICATION	4.9425821377587326E-5	IMPLEMENTATION
// A global object lock for class hierarchy mutations	WITHOUT_CLASSIFICATION	0.9999853269967545	WITHOUT_CLASSIFICATION	1.467300324538309E-5	IMPLEMENTATION
// initial spaces // spaces before "at"	WITHOUT_CLASSIFICATION	0.9999645707559036	WITHOUT_CLASSIFICATION	3.542924409638544E-5	IMPLEMENTATION
// event name // filename // line numbers should be 1-based	WITHOUT_CLASSIFICATION	0.9999786457695713	WITHOUT_CLASSIFICATION	2.135423042871054E-5	IMPLEMENTATION
// The method is intentionally not public, since it typically should // not be used outside of the core.	WITHOUT_CLASSIFICATION	0.9999807389477287	WITHOUT_CLASSIFICATION	1.9261052271286757E-5	IMPLEMENTATION
// Note: this field and the following static initializer // must be located be in this order!	WITHOUT_CLASSIFICATION	0.9999945170596755	WITHOUT_CLASSIFICATION	5.482940324599321E-6	IMPLEMENTATION
// Contains a list of all blocks (as Procs) that should be called when // the runtime environment exits.	WITHOUT_CLASSIFICATION	0.9999829357220177	WITHOUT_CLASSIFICATION	1.7064277982260797E-5	IMPLEMENTATION
// quoted-printable	WITHOUT_CLASSIFICATION	0.9999016339039024	WITHOUT_CLASSIFICATION	9.836609609750793E-5	IMPLEMENTATION
// default options	WITHOUT_CLASSIFICATION	0.9999851557463488	WITHOUT_CLASSIFICATION	1.484425365132304E-5	IMPLEMENTATION
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9998955649324311	WITHOUT_CLASSIFICATION	1.0443506756891177E-4	IMPLEMENTATION
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9998955649324311	WITHOUT_CLASSIFICATION	1.0443506756891177E-4	IMPLEMENTATION
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9998958510738613	WITHOUT_CLASSIFICATION	1.0414892613867724E-4	IMPLEMENTATION
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9998958510738613	WITHOUT_CLASSIFICATION	1.0414892613867724E-4	IMPLEMENTATION
// EUC-JP	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
// EUC-JP	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
// UTF-8	WITHOUT_CLASSIFICATION	0.996433349477927	WITHOUT_CLASSIFICATION	0.0035666505220729155	IMPLEMENTATION
// UTF-8	WITHOUT_CLASSIFICATION	0.996433349477927	WITHOUT_CLASSIFICATION	0.0035666505220729155	IMPLEMENTATION
// long name option	WITHOUT_CLASSIFICATION	0.9999549896811593	WITHOUT_CLASSIFICATION	4.5010318840815584E-5	IMPLEMENTATION
// conversion	WITHOUT_CLASSIFICATION	0.9999463539873925	WITHOUT_CLASSIFICATION	5.364601260744752E-5	IMPLEMENTATION
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999976956119607	WITHOUT_CLASSIFICATION	2.3043880392877757E-5	IMPLEMENTATION
// string doesn't share any resources	WITHOUT_CLASSIFICATION	0.9999828297451235	WITHOUT_CLASSIFICATION	1.7170254876523993E-5	IMPLEMENTATION
// string has it's own ByteList, but it's pointing to a shared buffer (byte[])	WITHOUT_CLASSIFICATION	0.9999721407573919	WITHOUT_CLASSIFICATION	2.7859242608050063E-5	IMPLEMENTATION
// string doesn't have it's own ByteList (values)	WITHOUT_CLASSIFICATION	0.999974854224415	WITHOUT_CLASSIFICATION	2.514577558503496E-5	IMPLEMENTATION
// ENC_CODERANGE_ASCIIONLY	WITHOUT_CLASSIFICATION	0.9999117106255536	WITHOUT_CLASSIFICATION	8.828937444647239E-5	IMPLEMENTATION
// rb_enc_str_asciionly_p	WITHOUT_CLASSIFICATION	0.9999116762068144	WITHOUT_CLASSIFICATION	8.832379318558368E-5	IMPLEMENTATION
// rb_enc_str_coderange	WITHOUT_CLASSIFICATION	0.999911926462581	WITHOUT_CLASSIFICATION	8.807353741898797E-5	IMPLEMENTATION
// rb_str_hash_cmp	WITHOUT_CLASSIFICATION	0.9998955649324311	WITHOUT_CLASSIFICATION	1.0443506756891177E-4	IMPLEMENTATION
// Deprecated String construction routines	WITHOUT_CLASSIFICATION	0.9999621181554513	WITHOUT_CLASSIFICATION	3.788184454863789E-5	IMPLEMENTATION
// String construction routines by NOT byte[] buffer and NOT making the target String shared 	WITHOUT_CLASSIFICATION	0.9999890266975957	WITHOUT_CLASSIFICATION	1.0973302404349139E-5	IMPLEMENTATION
/* rb_str_subseq */	WITHOUT_CLASSIFICATION	0.9998958101104686	WITHOUT_CLASSIFICATION	1.0418988953148012E-4	IMPLEMENTATION
// no need to assign encoding, same bytelist shared	WITHOUT_CLASSIFICATION	0.9999619173797739	WITHOUT_CLASSIFICATION	3.8082620226151476E-5	IMPLEMENTATION
// if len == 0 then shared empty	WITHOUT_CLASSIFICATION	0.9999537115371295	WITHOUT_CLASSIFICATION	4.628846287043709E-5	IMPLEMENTATION
/* rb_str_cmp_m */	WITHOUT_CLASSIFICATION	0.9998955649324311	WITHOUT_CLASSIFICATION	1.0443506756891177E-4	IMPLEMENTATION
// we limit to int because ByteBuffer can only allocate int sizes	WITHOUT_CLASSIFICATION	0.9999499353623661	WITHOUT_CLASSIFICATION	5.006463763382472E-5	IMPLEMENTATION
// // rb_str_buf_append	WITHOUT_CLASSIFICATION	0.9999252322526165	WITHOUT_CLASSIFICATION	7.476774738345037E-5	IMPLEMENTATION
// encoding doesn't have to be copied.	WITHOUT_CLASSIFICATION	0.9999808056152669	WITHOUT_CLASSIFICATION	1.919438473302154E-5	IMPLEMENTATION
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9999063724493142	WITHOUT_CLASSIFICATION	9.362755068582385E-5	IMPLEMENTATION
// must not reallocate	WITHOUT_CLASSIFICATION	0.9999436585134783	WITHOUT_CLASSIFICATION	5.634148652173562E-5	IMPLEMENTATION
// Illegal combination	WITHOUT_CLASSIFICATION	0.9999225938067662	WITHOUT_CLASSIFICATION	7.740619323386684E-5	IMPLEMENTATION
// use 1.8 impl	WITHOUT_CLASSIFICATION	0.9999225659539333	WITHOUT_CLASSIFICATION	7.743404606665484E-5	IMPLEMENTATION
/* RubyString aka rb_string_value */	WITHOUT_CLASSIFICATION	0.999943376946142	WITHOUT_CLASSIFICATION	5.6623053858012623E-5	IMPLEMENTATION
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.999943394358314	WITHOUT_CLASSIFICATION	5.6605641685949396E-5	IMPLEMENTATION
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999733952805818	WITHOUT_CLASSIFICATION	2.660471941822512E-5	IMPLEMENTATION
/* len + margin */	WITHOUT_CLASSIFICATION	0.9999044055732311	WITHOUT_CLASSIFICATION	9.559442676885968E-5	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9998964644412323	WITHOUT_CLASSIFICATION	1.0353555876773941E-4	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9998964644412323	WITHOUT_CLASSIFICATION	1.0353555876773941E-4	IMPLEMENTATION
/* copy pre-match substr */	WITHOUT_CLASSIFICATION	0.9999176607059457	WITHOUT_CLASSIFICATION	8.233929405435195E-5	IMPLEMENTATION
// string given	WITHOUT_CLASSIFICATION	0.9999429986976762	WITHOUT_CLASSIFICATION	5.7001302323882514E-5	IMPLEMENTATION
// hash given	WITHOUT_CLASSIFICATION	0.9998994481696034	WITHOUT_CLASSIFICATION	1.0055183039664834E-4	IMPLEMENTATION
// This represents left most digit in a set of incremented // values?  Therefore leftmost numeric must be '1' and not '0' // 999 -> 1000, not 999 -> 0000.  whereas chars should be // zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"	WITHOUT_CLASSIFICATION	0.9999933234658129	WITHOUT_CLASSIFICATION	6.676534187071646E-6	IMPLEMENTATION
/* substring longer than string */	WITHOUT_CLASSIFICATION	0.9999540491143284	WITHOUT_CLASSIFICATION	4.595088567151642E-5	IMPLEMENTATION
/* rb_str_substr */	WITHOUT_CLASSIFICATION	0.9998958077363813	WITHOUT_CLASSIFICATION	1.0419226361870934E-4	IMPLEMENTATION
// nothing	WITHOUT_CLASSIFICATION	0.9978607096818983	WITHOUT_CLASSIFICATION	0.0021392903181017137	IMPLEMENTATION
// nothing	WITHOUT_CLASSIFICATION	0.9978607096818983	WITHOUT_CLASSIFICATION	0.0021392903181017137	IMPLEMENTATION
/* rb_str_splice */	WITHOUT_CLASSIFICATION	0.9998956188072204	WITHOUT_CLASSIFICATION	1.0438119277949708E-4	IMPLEMENTATION
// TODO: keep cr // TODO: rb_str_splice_0	WITHOUT_CLASSIFICATION	0.8539193388681556	WITHOUT_CLASSIFICATION	0.14608066113184437	IMPLEMENTATION
// keep cr ?	WITHOUT_CLASSIFICATION	0.9999056451646009	WITHOUT_CLASSIFICATION	9.4354835399074E-5	IMPLEMENTATION
// keep cr ?	WITHOUT_CLASSIFICATION	0.9999056451646009	WITHOUT_CLASSIFICATION	9.4354835399074E-5	IMPLEMENTATION
/* wrapped to \0...\0.  search next valid char. */	WITHOUT_CLASSIFICATION	0.9999485597931422	WITHOUT_CLASSIFICATION	5.1440206857852274E-5	IMPLEMENTATION
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.999943523896457	WITHOUT_CLASSIFICATION	5.64761035429396E-5	IMPLEMENTATION
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.999943523896457	WITHOUT_CLASSIFICATION	5.64761035429396E-5	IMPLEMENTATION
// modified	WITHOUT_CLASSIFICATION	0.9999027429659274	WITHOUT_CLASSIFICATION	9.725703407259286E-5	IMPLEMENTATION
// modified	WITHOUT_CLASSIFICATION	0.9999027429659274	WITHOUT_CLASSIFICATION	9.725703407259286E-5	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
// QTRUE	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
/* retrieve last replacer */	WITHOUT_CLASSIFICATION	0.9999419611594051	WITHOUT_CLASSIFICATION	5.803884059484514E-5	IMPLEMENTATION
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999845180447936	WITHOUT_CLASSIFICATION	1.548195520640173E-5	IMPLEMENTATION
// long size * bits in byte	WITHOUT_CLASSIFICATION	0.9999540631582113	WITHOUT_CLASSIFICATION	4.5936841788604E-5	IMPLEMENTATION
// from encoding, special-casing ASCII* to ASCII	WITHOUT_CLASSIFICATION	0.9999550144916786	WITHOUT_CLASSIFICATION	4.49855083213926E-5	IMPLEMENTATION
// to encoding, same special-casing	WITHOUT_CLASSIFICATION	0.9999522135328629	WITHOUT_CLASSIFICATION	4.778646713711609E-5	IMPLEMENTATION
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999868367779734	WITHOUT_CLASSIFICATION	1.3163222026622537E-5	IMPLEMENTATION
// decode from "from" and encode to "to"	WITHOUT_CLASSIFICATION	0.9999510601412822	WITHOUT_CLASSIFICATION	4.893985871775597E-5	IMPLEMENTATION
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999868367779734	WITHOUT_CLASSIFICATION	1.3163222026622537E-5	IMPLEMENTATION
//Kernel is the only Module that doesn't need an implementor	WITHOUT_CLASSIFICATION	0.9990802707850586	WITHOUT_CLASSIFICATION	9.197292149414448E-4	IMPLEMENTATION
// no binding given, use (eval)	WITHOUT_CLASSIFICATION	0.999942170185841	WITHOUT_CLASSIFICATION	5.7829814159100785E-5	IMPLEMENTATION
// interned, OK for "fast" methods	WITHOUT_CLASSIFICATION	0.9999537646117702	WITHOUT_CLASSIFICATION	4.623538822985586E-5	IMPLEMENTATION
// File to be loaded by autoload has already been or is being loaded.	WITHOUT_CLASSIFICATION	0.9999647784044122	WITHOUT_CLASSIFICATION	3.522159558776959E-5	IMPLEMENTATION
// rb_cstr_to_dbl case	WITHOUT_CLASSIFICATION	0.9999121712726099	WITHOUT_CLASSIFICATION	8.78287273900086E-5	IMPLEMENTATION
// We break if we know this sleep was explicitly woken up/interrupted	WITHOUT_CLASSIFICATION	0.9999374069959661	WITHOUT_CLASSIFICATION	6.259300403378408E-5	IMPLEMENTATION
// exec process, create IO with process	WITHOUT_CLASSIFICATION	0.9999698359973813	WITHOUT_CLASSIFICATION	3.0164002618716192E-5	IMPLEMENTATION
// Zero sleeps forever	WITHOUT_CLASSIFICATION	0.9999333748259521	WITHOUT_CLASSIFICATION	6.66251740478746E-5	IMPLEMENTATION
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999501399416211	WITHOUT_CLASSIFICATION	4.986005837881178E-5	IMPLEMENTATION
// Explicit zero in MRI returns immediately	WITHOUT_CLASSIFICATION	0.9999651953876776	WITHOUT_CLASSIFICATION	3.480461232251254E-5	IMPLEMENTATION
// Spurious wakeup-loop	WITHOUT_CLASSIFICATION	0.9999126634626636	WITHOUT_CLASSIFICATION	8.73365373364072E-5	IMPLEMENTATION
// adjusts paths started with '/' or '\\', on windows.	WITHOUT_CLASSIFICATION	0.9999532809202313	WITHOUT_CLASSIFICATION	4.67190797686966E-5	IMPLEMENTATION
// file not given	WITHOUT_CLASSIFICATION	0.999923235331101	WITHOUT_CLASSIFICATION	7.676466889896433E-5	IMPLEMENTATION
// string to eval	WITHOUT_CLASSIFICATION	0.9999533645008215	WITHOUT_CLASSIFICATION	4.6635499178404934E-5	IMPLEMENTATION
// binding given, use binding's file	WITHOUT_CLASSIFICATION	0.9999248495596866	WITHOUT_CLASSIFICATION	7.515044031331704E-5	IMPLEMENTATION
// ?g  | boolean | True if file1 has the \CF{setgid} bit	WITHOUT_CLASSIFICATION	0.9999580021238795	WITHOUT_CLASSIFICATION	4.199787612043177E-5	IMPLEMENTATION
// bomb out, it's not a binding or a proc	WITHOUT_CLASSIFICATION	0.9999360889349129	WITHOUT_CLASSIFICATION	6.39110650869887E-5	IMPLEMENTATION
// Ordering of array traversal not important, just intuitive	WITHOUT_CLASSIFICATION	0.9998384526564574	WITHOUT_CLASSIFICATION	1.615473435426712E-4	IMPLEMENTATION
//Catch active, throw for catch to handle	WITHOUT_CLASSIFICATION	0.9998907786539097	WITHOUT_CLASSIFICATION	1.0922134609034587E-4	IMPLEMENTATION
// No catch active for this throw	WITHOUT_CLASSIFICATION	0.9999520466028806	WITHOUT_CLASSIFICATION	4.79533971193418E-5	IMPLEMENTATION
// without full tracing, many events will not fire	WITHOUT_CLASSIFICATION	0.9999555545953862	WITHOUT_CLASSIFICATION	4.444540461375104E-5	IMPLEMENTATION
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999968192899354	WITHOUT_CLASSIFICATION	3.1807100645072867E-6	IMPLEMENTATION
// MRI behavior: use first byte of string value if len > 0	WITHOUT_CLASSIFICATION	0.9999817239985053	WITHOUT_CLASSIFICATION	1.8276001494704214E-5	IMPLEMENTATION
// MRI behavior: now check arg count	WITHOUT_CLASSIFICATION	0.9999473121034197	WITHOUT_CLASSIFICATION	5.268789658020562E-5	IMPLEMENTATION
// ?A  | Time    | Last access time for file1	WITHOUT_CLASSIFICATION	0.9999401912962077	WITHOUT_CLASSIFICATION	5.980870379230253E-5	IMPLEMENTATION
// ?b  | boolean | True if file1 is a block device	WITHOUT_CLASSIFICATION	0.9999504659057527	WITHOUT_CLASSIFICATION	4.9534094247408994E-5	IMPLEMENTATION
// ?c  | boolean | True if file1 is a character device	WITHOUT_CLASSIFICATION	0.9999720689726107	WITHOUT_CLASSIFICATION	2.7931027389396663E-5	IMPLEMENTATION
// ?C  | Time    | Last change time for file1	WITHOUT_CLASSIFICATION	0.9999527470763596	WITHOUT_CLASSIFICATION	4.7252923640500754E-5	IMPLEMENTATION
// ?d  | boolean | True if file1 exists and is a directory	WITHOUT_CLASSIFICATION	0.99998533799501	WITHOUT_CLASSIFICATION	1.4662004990054629E-5	IMPLEMENTATION
// ?e  | boolean | True if file1 exists	WITHOUT_CLASSIFICATION	0.9999529365002754	WITHOUT_CLASSIFICATION	4.706349972460583E-5	IMPLEMENTATION
// ?f  | boolean | True if file1 exists and is a regular file	WITHOUT_CLASSIFICATION	0.9999669330102117	WITHOUT_CLASSIFICATION	3.3066989788314255E-5	IMPLEMENTATION
// ?G  | boolean | True if file1 exists and has a group ownership equal to the caller's group	WITHOUT_CLASSIFICATION	0.9999853347401092	WITHOUT_CLASSIFICATION	1.4665259890796588E-5	IMPLEMENTATION
// ?k  | boolean | True if file1 exists and has the sticky bit set	WITHOUT_CLASSIFICATION	0.9999727018874456	WITHOUT_CLASSIFICATION	2.7298112554486746E-5	IMPLEMENTATION
// ?M  | Time    | Last modification time for file1	WITHOUT_CLASSIFICATION	0.9999589270901061	WITHOUT_CLASSIFICATION	4.1072909893944026E-5	IMPLEMENTATION
// ?o  | boolean | True if file1 exists and is owned by the caller's effective uid	WITHOUT_CLASSIFICATION	0.999985752655954	WITHOUT_CLASSIFICATION	1.4247344045980925E-5	IMPLEMENTATION
// ?O  | boolean | True if file1 exists and is owned by the caller's real uid 	WITHOUT_CLASSIFICATION	0.9999858935413801	WITHOUT_CLASSIFICATION	1.4106458619883239E-5	IMPLEMENTATION
// ?p  | boolean | True if file1 exists and is a fifo	WITHOUT_CLASSIFICATION	0.9999653058138772	WITHOUT_CLASSIFICATION	3.469418612275759E-5	IMPLEMENTATION
// ?r  | boolean | True if file1 is readable by the effective uid/gid of the caller	WITHOUT_CLASSIFICATION	0.9999813688812016	WITHOUT_CLASSIFICATION	1.863111879841271E-5	IMPLEMENTATION
// ?s  | int/nil | If file1 has nonzero size, return the size, otherwise nil	WITHOUT_CLASSIFICATION	0.9999421444647565	WITHOUT_CLASSIFICATION	5.785553524364885E-5	IMPLEMENTATION
// ?S  | boolean | True if file1 exists and is a socket	WITHOUT_CLASSIFICATION	0.9999663202584901	WITHOUT_CLASSIFICATION	3.3679741509858886E-5	IMPLEMENTATION
// ?u  | boolean | True if file1 has the setuid bit set	WITHOUT_CLASSIFICATION	0.9999647969361235	WITHOUT_CLASSIFICATION	3.520306387655627E-5	IMPLEMENTATION
// ?x  | boolean | True if file1 exists and is executable by the effective uid/gid	WITHOUT_CLASSIFICATION	0.9999791017852314	WITHOUT_CLASSIFICATION	2.0898214768617376E-5	IMPLEMENTATION
// ?X  | boolean | True if file1 exists and is executable by the real uid/gid	WITHOUT_CLASSIFICATION	0.9999814338655729	WITHOUT_CLASSIFICATION	1.85661344271574E-5	IMPLEMENTATION
// ?z  | boolean | True if file1 exists and has a zero length	WITHOUT_CLASSIFICATION	0.9999711968816689	WITHOUT_CLASSIFICATION	2.8803118331059485E-5	IMPLEMENTATION
// ?=  | boolean | True if the modification times of file1 and file2 are equal	WITHOUT_CLASSIFICATION	0.9999883902609525	WITHOUT_CLASSIFICATION	1.1609739047533627E-5	IMPLEMENTATION
// ?<  | boolean | True if the modification time of file1 is prior to that of file2	WITHOUT_CLASSIFICATION	0.9999879547872086	WITHOUT_CLASSIFICATION	1.2045212791375851E-5	IMPLEMENTATION
// ?>  | boolean | True if the modification time of file1 is after that of file2	WITHOUT_CLASSIFICATION	0.9999892057618782	WITHOUT_CLASSIFICATION	1.0794238121886318E-5	IMPLEMENTATION
// ?-  | boolean | True if file1 and file2 are identical	WITHOUT_CLASSIFICATION	0.9999585520405851	WITHOUT_CLASSIFICATION	4.1447959414858294E-5	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999533888301744	WITHOUT_CLASSIFICATION	4.6611169825667836E-5	IMPLEMENTATION
// Error info is per-thread	WITHOUT_CLASSIFICATION	0.9999751491228278	WITHOUT_CLASSIFICATION	2.4850877172107578E-5	IMPLEMENTATION
// init errorInfo to nil	WITHOUT_CLASSIFICATION	0.9999381562256957	WITHOUT_CLASSIFICATION	6.184377430433111E-5	IMPLEMENTATION
// if we're already aborting, we can receive no further mail	WITHOUT_CLASSIFICATION	0.9999692847283571	WITHOUT_CLASSIFICATION	3.071527164291237E-5	IMPLEMENTATION
// If this thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.999945476554366	WITHOUT_CLASSIFICATION	5.4523445633865705E-5	IMPLEMENTATION
// new interrupt, to hopefully wake it out of any blocking IO	WITHOUT_CLASSIFICATION	0.9999497397510512	WITHOUT_CLASSIFICATION	5.026024894875901E-5	IMPLEMENTATION
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999906529683368	WITHOUT_CLASSIFICATION	9.347031663198809E-6	IMPLEMENTATION
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999906529683368	WITHOUT_CLASSIFICATION	9.347031663198809E-6	IMPLEMENTATION
// JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999735035280274	WITHOUT_CLASSIFICATION	2.6496471972546354E-5	IMPLEMENTATION
// JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999799870760423	WITHOUT_CLASSIFICATION	2.0012923957688853E-5	IMPLEMENTATION
// for Thread::start, which does not call the subclass's initialize	WITHOUT_CLASSIFICATION	0.9999937167305378	WITHOUT_CLASSIFICATION	6.283269462202471E-6	IMPLEMENTATION
// JRUBY-3568, inherit threadgroup or use default	WITHOUT_CLASSIFICATION	0.9999771651174283	WITHOUT_CLASSIFICATION	2.2834882571685848E-5	IMPLEMENTATION
// MRI behavior: value given in seconds; converted to Float; less // than or equal to zero returns immediately; returns nil	WITHOUT_CLASSIFICATION	0.9999907826959583	WITHOUT_CLASSIFICATION	9.217304041757913E-6	IMPLEMENTATION
// If the target thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999802717439369	WITHOUT_CLASSIFICATION	1.972825606313338E-5	IMPLEMENTATION
// We need this loop in order to be able to "unblock" the // join call without actually calling interrupt.	WITHOUT_CLASSIFICATION	0.9999522358350693	WITHOUT_CLASSIFICATION	4.7764164930540964E-5	IMPLEMENTATION
// attempt to decriticalize all if we're the critical thread	WITHOUT_CLASSIFICATION	0.9999760834324066	WITHOUT_CLASSIFICATION	2.3916567593356128E-5	IMPLEMENTATION
// not valid for "dead" state	WITHOUT_CLASSIFICATION	0.9996869902558091	WITHOUT_CLASSIFICATION	3.130097441909297E-4	IMPLEMENTATION
// If the killee thread is the same as the killer thread, just die	WITHOUT_CLASSIFICATION	0.9999805406620026	WITHOUT_CLASSIFICATION	1.9459337997437816E-5	IMPLEMENTATION
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.999994400415313	WITHOUT_CLASSIFICATION	5.599584687014141E-6	IMPLEMENTATION
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.999994400415313	WITHOUT_CLASSIFICATION	5.599584687014141E-6	IMPLEMENTATION
// ignore; I don't like doing it, but it seems like we // really just need to make all channels non-blocking by // default and use select when implementing blocking ops, // so if this remains set non-blocking, perhaps it's not // such a big deal...	WITHOUT_CLASSIFICATION	0.9999885542333502	WITHOUT_CLASSIFICATION	1.1445766649782122E-5	IMPLEMENTATION
// can't select, just have to do a blocking call	WITHOUT_CLASSIFICATION	0.99997244974419	WITHOUT_CLASSIFICATION	2.755025581011882E-5	IMPLEMENTATION
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.999962828200108	WITHOUT_CLASSIFICATION	3.717179989196687E-5	IMPLEMENTATION
// Create Constants class	WITHOUT_CLASSIFICATION	0.9999812985657843	WITHOUT_CLASSIFICATION	1.870143421572047E-5	IMPLEMENTATION
// Create constants for open flags	WITHOUT_CLASSIFICATION	0.9999826351842229	WITHOUT_CLASSIFICATION	1.7364815777044076E-5	IMPLEMENTATION
// Strip off the O_ prefix, so they become File::RDONLY, and so on	WITHOUT_CLASSIFICATION	0.9999568867715504	WITHOUT_CLASSIFICATION	4.3113228449735974E-5	IMPLEMENTATION
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999799621766365	WITHOUT_CLASSIFICATION	2.0037823363521505E-5	IMPLEMENTATION
// File::Constants module is included in IO.	WITHOUT_CLASSIFICATION	0.9999564664203114	WITHOUT_CLASSIFICATION	4.353357968843485E-5	IMPLEMENTATION
// Make sure any existing lock is released before we try and close the file	WITHOUT_CLASSIFICATION	0.9999907552751336	WITHOUT_CLASSIFICATION	9.244724866523532E-6	IMPLEMENTATION
// null channel always succeeds for all locking operations	WITHOUT_CLASSIFICATION	0.9999738902102906	WITHOUT_CLASSIFICATION	2.610978970950611E-5	IMPLEMENTATION
// Paths which end in "/" or "\\" must be stripped off.	WITHOUT_CLASSIFICATION	0.9999500450158001	WITHOUT_CLASSIFICATION	4.995498419993197E-5	IMPLEMENTATION
// Special case for handling ACCMODE, since constantine will generate // an invalid value if it is not defined by the platform.	WITHOUT_CLASSIFICATION	0.9999946753536262	WITHOUT_CLASSIFICATION	5.324646373847398E-6	IMPLEMENTATION
// Return false here	WITHOUT_CLASSIFICATION	0.9999270910524727	WITHOUT_CLASSIFICATION	7.290894752730536E-5	IMPLEMENTATION
// Return false here	WITHOUT_CLASSIFICATION	0.9999270910524727	WITHOUT_CLASSIFICATION	7.290894752730536E-5	IMPLEMENTATION
// We're not actually a real file, so we can't flock	WITHOUT_CLASSIFICATION	0.9999115771963439	WITHOUT_CLASSIFICATION	8.842280365609148E-5	IMPLEMENTATION
// Should we do anything?	WITHOUT_CLASSIFICATION	0.9998005328783729	WITHOUT_CLASSIFICATION	1.9946712162705364E-4	IMPLEMENTATION
/* File class methods */	WITHOUT_CLASSIFICATION	0.9999582955722038	WITHOUT_CLASSIFICATION	4.170442779622936E-5	IMPLEMENTATION
// MRI-compatible basename handling for windows drive letter paths	WITHOUT_CLASSIFICATION	0.9999459132068457	WITHOUT_CLASSIFICATION	5.408679315440298E-5	IMPLEMENTATION
// strip c: away from relative-pathed name	WITHOUT_CLASSIFICATION	0.9999600455738189	WITHOUT_CLASSIFICATION	3.995442618101306E-5	IMPLEMENTATION
// C:\ is returned unchanged	WITHOUT_CLASSIFICATION	0.9999621105670192	WITHOUT_CLASSIFICATION	3.788943298082929E-5	IMPLEMENTATION
// -1 no match; 0 it is dot file not extension	WITHOUT_CLASSIFICATION	0.9999525861307729	WITHOUT_CLASSIFICATION	4.741386922713373E-5	IMPLEMENTATION
// trim trailing slashes	WITHOUT_CLASSIFICATION	0.9999326832467326	WITHOUT_CLASSIFICATION	6.731675326743189E-5	IMPLEMENTATION
// Dot is not at beginning and not at end of filename. 	WITHOUT_CLASSIFICATION	0.9999235603500345	WITHOUT_CLASSIFICATION	7.643964996549221E-5	IMPLEMENTATION
// Handle ~user paths 	WITHOUT_CLASSIFICATION	0.9999302551617035	WITHOUT_CLASSIFICATION	6.974483829647583E-5	IMPLEMENTATION
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.999962828200108	WITHOUT_CLASSIFICATION	3.717179989196687E-5	IMPLEMENTATION
// Include additional path separator // (so that dirname of "C:\file.txt" is  "C:\", not "C:")	WITHOUT_CLASSIFICATION	0.9999419752318353	WITHOUT_CLASSIFICATION	5.8024768164733705E-5	IMPLEMENTATION
// FNFException can be thrown in both cases, when the file // is not found, or when permission is denied.	WITHOUT_CLASSIFICATION	0.999991940103068	WITHOUT_CLASSIFICATION	8.05989693199993E-6	IMPLEMENTATION
// No directory delimeter.  Rest of string is username	WITHOUT_CLASSIFICATION	0.9999836326516816	WITHOUT_CLASSIFICATION	1.636734831845056E-5	IMPLEMENTATION
// If there's a second argument, it's the path to which the first  // argument is relative.	WITHOUT_CLASSIFICATION	0.9999943297253236	WITHOUT_CLASSIFICATION	5.670274676278263E-6	IMPLEMENTATION
// Handle ~user paths.	WITHOUT_CLASSIFICATION	0.9999296334062492	WITHOUT_CLASSIFICATION	7.036659375083285E-5	IMPLEMENTATION
// If there's no second argument, simply use the working directory  // of the runtime.	WITHOUT_CLASSIFICATION	0.9999962349228587	WITHOUT_CLASSIFICATION	3.765077141336715E-6	IMPLEMENTATION
// Find out which string to check.	WITHOUT_CLASSIFICATION	0.9999727988737005	WITHOUT_CLASSIFICATION	2.720112629953647E-5	IMPLEMENTATION
// Single '~' as whole path to expand	WITHOUT_CLASSIFICATION	0.9999097635714503	WITHOUT_CLASSIFICATION	9.023642854958469E-5	IMPLEMENTATION
// Count number of extra slashes in the beginning of the string.	WITHOUT_CLASSIFICATION	0.9999941085401335	WITHOUT_CLASSIFICATION	5.891459866508305E-6	IMPLEMENTATION
// '~user/...' as path to expand	WITHOUT_CLASSIFICATION	0.999897650522433	WITHOUT_CLASSIFICATION	1.0234947756699605E-4	IMPLEMENTATION
// '~/...' as path to expand	WITHOUT_CLASSIFICATION	0.9998915080382967	WITHOUT_CLASSIFICATION	1.0849196170330193E-4	IMPLEMENTATION
// Prepare a string with the same number of redundant slashes so that  // we easily can prepend it to the result.	WITHOUT_CLASSIFICATION	0.9999938540299403	WITHOUT_CLASSIFICATION	6.145970059579378E-6	IMPLEMENTATION
// If there are N slashes, then we want N-1.	WITHOUT_CLASSIFICATION	0.9999821512017605	WITHOUT_CLASSIFICATION	1.7848798239431324E-5	IMPLEMENTATION
// no canonical path yet or length is zero, and we have a / followed by a dot...	WITHOUT_CLASSIFICATION	0.9999713899585432	WITHOUT_CLASSIFICATION	2.861004145680428E-5	IMPLEMENTATION
// we don't have another slash after this, so replace /. with /	WITHOUT_CLASSIFICATION	0.9999790725592455	WITHOUT_CLASSIFICATION	2.0927440754562193E-5	IMPLEMENTATION
// we do have another slash; omit both / and . (JRUBY-1606)	WITHOUT_CLASSIFICATION	0.9999221312487233	WITHOUT_CLASSIFICATION	7.786875127666465E-5	IMPLEMENTATION
// do nothing, we should not delete the drive letter	WITHOUT_CLASSIFICATION	0.9999948580787063	WITHOUT_CLASSIFICATION	5.141921293779457E-6	IMPLEMENTATION
/* rb: check_modifiable */	WITHOUT_CLASSIFICATION	0.9999233406334634	WITHOUT_CLASSIFICATION	7.665936653659072E-5	IMPLEMENTATION
/* rb: readable */	WITHOUT_CLASSIFICATION	0.9998998199350593	WITHOUT_CLASSIFICATION	1.0018006494072757E-4	IMPLEMENTATION
// rename is successful	WITHOUT_CLASSIFICATION	0.99996671737482	WITHOUT_CLASSIFICATION	3.328262518007472E-5	IMPLEMENTATION
// rename via Java API call wasn't successful, let's try some tricks, similar to MRI 	WITHOUT_CLASSIFICATION	0.9999734379188838	WITHOUT_CLASSIFICATION	2.6562081116227004E-5	IMPLEMENTATION
// try to rename one more time	WITHOUT_CLASSIFICATION	0.9999594640194662	WITHOUT_CLASSIFICATION	4.053598053384554E-5	IMPLEMENTATION
// Can we produce IOError which bypasses a close?	WITHOUT_CLASSIFICATION	0.9999297021580776	WITHOUT_CLASSIFICATION	7.029784192234392E-5	IMPLEMENTATION
// Fast path since JNA stat is about 10x slower than this	WITHOUT_CLASSIFICATION	0.9999371224527932	WITHOUT_CLASSIFICATION	6.287754720680815E-5	IMPLEMENTATION
// RubyContinuation	WITHOUT_CLASSIFICATION	0.9999013512322674	WITHOUT_CLASSIFICATION	9.864876773245805E-5	IMPLEMENTATION
/*     *  Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq)     *  it doesn't initialize ifNone field     */	WITHOUT_CLASSIFICATION	0.9999975877542766	WITHOUT_CLASSIFICATION	2.412245723423985E-6	IMPLEMENTATION
// 16 ?	WITHOUT_CLASSIFICATION	0.9963615982301933	WITHOUT_CLASSIFICATION	0.0036384017698065534	IMPLEMENTATION
// generation count for O(1) clears	WITHOUT_CLASSIFICATION	0.9999799443144797	WITHOUT_CLASSIFICATION	2.005568552031111E-5	IMPLEMENTATION
// size + 1;	WITHOUT_CLASSIFICATION	0.9999162328062141	WITHOUT_CLASSIFICATION	8.376719378586486E-5	IMPLEMENTATION
// suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen	WITHOUT_CLASSIFICATION	0.9999398377376063	WITHOUT_CLASSIFICATION	6.016226239359691E-5	IMPLEMENTATION
// ------------------------------	WITHOUT_CLASSIFICATION	0.9999895820763284	WITHOUT_CLASSIFICATION	1.0417923671633617E-5	IMPLEMENTATION
// ------------------------------	WITHOUT_CLASSIFICATION	0.9999895820763284	WITHOUT_CLASSIFICATION	1.0417923671633617E-5	IMPLEMENTATION
// put implementation	WITHOUT_CLASSIFICATION	0.9963589406944716	WITHOUT_CLASSIFICATION	0.003641059305528346	IMPLEMENTATION
// get implementation	WITHOUT_CLASSIFICATION	0.9981455228990399	WITHOUT_CLASSIFICATION	0.0018544771009600571	IMPLEMENTATION
// specialized for value	WITHOUT_CLASSIFICATION	0.9999735787565085	WITHOUT_CLASSIFICATION	2.642124349149487E-5	IMPLEMENTATION
// delete implementation	WITHOUT_CLASSIFICATION	0.9987543968358918	WITHOUT_CLASSIFICATION	0.0012456031641081794	IMPLEMENTATION
// n.b. we need to recompute the hash in case the key object was modified	WITHOUT_CLASSIFICATION	0.9999688574372857	WITHOUT_CLASSIFICATION	3.1142562714211315E-5	IMPLEMENTATION
/* ============================     * End of hash internals     * ============================     */	WITHOUT_CLASSIFICATION	0.9999758260516645	WITHOUT_CLASSIFICATION	2.4173948335446088E-5	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================     */	WITHOUT_CLASSIFICATION	0.9999738583065282	WITHOUT_CLASSIFICATION	2.6141693471832678E-5	IMPLEMENTATION
// update the hash value	WITHOUT_CLASSIFICATION	0.9999884459341336	WITHOUT_CLASSIFICATION	1.1554065866312487E-5	IMPLEMENTATION
// other hash does not contain key	WITHOUT_CLASSIFICATION	0.9999573345930839	WITHOUT_CLASSIFICATION	4.266540691622154E-5	IMPLEMENTATION
// rb_yield_values(2,...) equivalent	WITHOUT_CLASSIFICATION	0.9998590364952578	WITHOUT_CLASSIFICATION	1.409635047423061E-4	IMPLEMENTATION
// Satisfy java.util.Set interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999630481429738	WITHOUT_CLASSIFICATION	3.695185702618279E-5	IMPLEMENTATION
// remain where we are	WITHOUT_CLASSIFICATION	0.9999418466760234	WITHOUT_CLASSIFICATION	5.8153323976513033E-5	IMPLEMENTATION
// We use file test since it is faster than a stat; also euid == uid in Java always	WITHOUT_CLASSIFICATION	0.9999563705330398	WITHOUT_CLASSIFICATION	4.362946696025131E-5	IMPLEMENTATION
// default: don't retain	WITHOUT_CLASSIFICATION	0.99998327841893	WITHOUT_CLASSIFICATION	1.6721581070089558E-5	IMPLEMENTATION
// once hasNext has been called, we commit to next() returning // the entry it found, even if it were subsequently deleted	WITHOUT_CLASSIFICATION	0.9999807620900469	WITHOUT_CLASSIFICATION	1.9237909953007125E-5	IMPLEMENTATION
// Not exposed by filetest, but so similiar in nature that it is stored here	WITHOUT_CLASSIFICATION	0.9999317400993577	WITHOUT_CLASSIFICATION	6.82599006423089E-5	IMPLEMENTATION
// We do both writable and writable_real through the same method because // in our java process effective and real userid will always be the same.	WITHOUT_CLASSIFICATION	0.9999912879816862	WITHOUT_CLASSIFICATION	8.712018313827716E-6	IMPLEMENTATION
// first try as directory	WITHOUT_CLASSIFICATION	0.9999795123863124	WITHOUT_CLASSIFICATION	2.0487613687451255E-5	IMPLEMENTATION
// next as regular file	WITHOUT_CLASSIFICATION	0.9999213676441018	WITHOUT_CLASSIFICATION	7.863235589819151E-5	IMPLEMENTATION
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9999735854698035	WITHOUT_CLASSIFICATION	2.6414530196581515E-5	IMPLEMENTATION
// NIO-based	WITHOUT_CLASSIFICATION	0.9999062207265815	WITHOUT_CLASSIFICATION	9.377927341850502E-5	IMPLEMENTATION
// NIO-based	WITHOUT_CLASSIFICATION	0.9999062207265815	WITHOUT_CLASSIFICATION	9.377927341850502E-5	IMPLEMENTATION
// Stream-based	WITHOUT_CLASSIFICATION	0.9999159658468142	WITHOUT_CLASSIFICATION	8.403415318585218E-5	IMPLEMENTATION
// special constructor that accepts stream, not channel	WITHOUT_CLASSIFICATION	0.9999634660188	WITHOUT_CLASSIFICATION	3.653398119993831E-5	IMPLEMENTATION
/*     * We use FILE versus IO to match T_FILE in MRI.     */	WITHOUT_CLASSIFICATION	0.9999785998934811	WITHOUT_CLASSIFICATION	2.140010651882396E-5	IMPLEMENTATION
// Constants for seek	WITHOUT_CLASSIFICATION	0.9999515931391749	WITHOUT_CLASSIFICATION	4.840686082505655E-5	IMPLEMENTATION
// confirm we're not reopening self's channel	WITHOUT_CLASSIFICATION	0.9999514603076228	WITHOUT_CLASSIFICATION	4.853969237711914E-5	IMPLEMENTATION
// check if we're a stdio IO, and ensure we're not badly mutilated	WITHOUT_CLASSIFICATION	0.9999865489623029	WITHOUT_CLASSIFICATION	1.3451037697106157E-5	IMPLEMENTATION
// dup2 new fd into self to preserve fileno and references to it	WITHOUT_CLASSIFICATION	0.9999667876399535	WITHOUT_CLASSIFICATION	3.321236004654896E-5	IMPLEMENTATION
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999667379027547	WITHOUT_CLASSIFICATION	3.3262097245278834E-5	IMPLEMENTATION
// re-register the descriptor	WITHOUT_CLASSIFICATION	0.9999729980617525	WITHOUT_CLASSIFICATION	2.700193824752213E-5	IMPLEMENTATION
// since we're not actually duping the incoming channel into our handler, we need to // copy the original sync behavior from the other handler	WITHOUT_CLASSIFICATION	0.999976587707298	WITHOUT_CLASSIFICATION	2.341229270192894E-5	IMPLEMENTATION
// re-register	WITHOUT_CLASSIFICATION	0.9999189557119654	WITHOUT_CLASSIFICATION	8.104428803457566E-5	IMPLEMENTATION
// A potentially previously close IO is being 'reopened'.	WITHOUT_CLASSIFICATION	0.9999539906370392	WITHOUT_CLASSIFICATION	4.6009362960875845E-5	IMPLEMENTATION
/*     * Ensure that separator is valid otherwise give it the default paragraph separator.     */	WITHOUT_CLASSIFICATION	0.9999975047576362	WITHOUT_CLASSIFICATION	2.4952423637317084E-6	IMPLEMENTATION
// loop until we see the nth separator char	WITHOUT_CLASSIFICATION	0.9999660410563157	WITHOUT_CLASSIFICATION	3.395894368431815E-5	IMPLEMENTATION
// if we hit EOF or reached limit then we're done	WITHOUT_CLASSIFICATION	0.9999512800194456	WITHOUT_CLASSIFICATION	4.871998055441437E-5	IMPLEMENTATION
// this is for a range check, near as I can tell	WITHOUT_CLASSIFICATION	0.9999690340354118	WITHOUT_CLASSIFICATION	3.096596458809727E-5	IMPLEMENTATION
// IO class methods.	WITHOUT_CLASSIFICATION	0.9999440526592969	WITHOUT_CLASSIFICATION	5.594734070320197E-5	IMPLEMENTATION
// use original modes	WITHOUT_CLASSIFICATION	0.9999585338875764	WITHOUT_CLASSIFICATION	4.1466112423633126E-5	IMPLEMENTATION
// See if we already have this descriptor open. // If so then we can mostly share the handler (keep open // file, but possibly change the mode).	WITHOUT_CLASSIFICATION	0.9999855757995011	WITHOUT_CLASSIFICATION	1.4424200498935606E-5	IMPLEMENTATION
// redundant, done above as well	WITHOUT_CLASSIFICATION	0.9999109507571338	WITHOUT_CLASSIFICATION	8.904924286624326E-5	IMPLEMENTATION
// MRI behavior: swallow StandardErorrs	WITHOUT_CLASSIFICATION	0.9999619804703893	WITHOUT_CLASSIFICATION	3.801952961079131E-5	IMPLEMENTATION
// -1 == don't set permissions	WITHOUT_CLASSIFICATION	0.9999444215267059	WITHOUT_CLASSIFICATION	5.5578473294078146E-5	IMPLEMENTATION
// isRetained=true	WITHOUT_CLASSIFICATION	0.9998971975040436	WITHOUT_CLASSIFICATION	1.0280249595641959E-4	IMPLEMENTATION
// This appears to be some windows-only mode.  On a java platform this is a no-op	WITHOUT_CLASSIFICATION	0.9999873933458642	WITHOUT_CLASSIFICATION	1.2606654135884713E-5	IMPLEMENTATION
// if not sync, we switch to write buffered mode	WITHOUT_CLASSIFICATION	0.9999707828622575	WITHOUT_CLASSIFICATION	2.9217137742548072E-5	IMPLEMENTATION
/*     * Throw bad file descriptor is we can not read on supplied descriptor.     */	WITHOUT_CLASSIFICATION	0.9999813721689985	WITHOUT_CLASSIFICATION	1.8627831001513143E-5	IMPLEMENTATION
//Everything written	WITHOUT_CLASSIFICATION	0.9999274308498768	WITHOUT_CLASSIFICATION	7.256915012325919E-5	IMPLEMENTATION
//            return len - n;	WITHOUT_CLASSIFICATION	0.9999892261913104	WITHOUT_CLASSIFICATION	1.077380868958323E-5	IMPLEMENTATION
// Claims conversion is done via 'to_s' in docs.	WITHOUT_CLASSIFICATION	0.9999592534950444	WITHOUT_CLASSIFICATION	4.0746504955561135E-5	IMPLEMENTATION
// Of course this isn't particularly useful.	WITHOUT_CLASSIFICATION	0.9998753100003457	WITHOUT_CLASSIFICATION	1.2468999965433746E-4	IMPLEMENTATION
// Must be back on first line on rewind.	WITHOUT_CLASSIFICATION	0.9999634603680608	WITHOUT_CLASSIFICATION	3.6539631939211074E-5	IMPLEMENTATION
// Register the new descriptor	WITHOUT_CLASSIFICATION	0.999973958561371	WITHOUT_CLASSIFICATION	2.6041438629106134E-5	IMPLEMENTATION
// cleanup, raising errors if any	WITHOUT_CLASSIFICATION	0.9999377273883394	WITHOUT_CLASSIFICATION	6.22726116606565E-5	IMPLEMENTATION
// hmmmm	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
// I believe Ruby bails out with a "bug" if closing fails	WITHOUT_CLASSIFICATION	0.9999276937994077	WITHOUT_CLASSIFICATION	7.230620059222172E-5	IMPLEMENTATION
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec. // And why the hell does webrick pass this in as a first argument!!!!!	WITHOUT_CLASSIFICATION	0.9999925260842081	WITHOUT_CLASSIFICATION	7.473915792020088E-6	IMPLEMENTATION
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec.	WITHOUT_CLASSIFICATION	0.9999920901734528	WITHOUT_CLASSIFICATION	7.909826547206958E-6	IMPLEMENTATION
// Length to read	WITHOUT_CLASSIFICATION	0.9999399355095525	WITHOUT_CLASSIFICATION	6.00644904474366E-5	IMPLEMENTATION
// String/Buffer to read it into	WITHOUT_CLASSIFICATION	0.9999593443490687	WITHOUT_CLASSIFICATION	4.0655650931344785E-5	IMPLEMENTATION
// cryptic for the uninitiated...	WITHOUT_CLASSIFICATION	0.9999460037093119	WITHOUT_CLASSIFICATION	5.399629068825179E-5	IMPLEMENTATION
// select until read is ready	WITHOUT_CLASSIFICATION	0.9999704022784458	WITHOUT_CLASSIFICATION	2.9597721554179017E-5	IMPLEMENTATION
//        ByteList buffer = null;	WITHOUT_CLASSIFICATION	0.9999737351620864	WITHOUT_CLASSIFICATION	2.6264837913542937E-5	IMPLEMENTATION
//            buffer = str.getByteList();	WITHOUT_CLASSIFICATION	0.999972120285897	WITHOUT_CLASSIFICATION	2.7879714102930514E-5	IMPLEMENTATION
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999256075981073	WITHOUT_CLASSIFICATION	7.439240189272891E-5	IMPLEMENTATION
/* rb: writable */	WITHOUT_CLASSIFICATION	0.9999073360615854	WITHOUT_CLASSIFICATION	9.266393841462056E-5	IMPLEMENTATION
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999256075981073	WITHOUT_CLASSIFICATION	7.439240189272891E-5	IMPLEMENTATION
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999792983093914	WITHOUT_CLASSIFICATION	2.07016906086878E-5	IMPLEMENTATION
// TODO: read into buffer using all the fread logic //        int read = openFile.getMainStream().fread(buffer);	WITHOUT_CLASSIFICATION	0.9715833642547677	WITHOUT_CLASSIFICATION	0.028416635745232406	IMPLEMENTATION
// truncate buffer string to zero, if provided	WITHOUT_CLASSIFICATION	0.9999718048659276	WITHOUT_CLASSIFICATION	2.8195134072372233E-5	IMPLEMENTATION
// TODO: READ_CHECK from MRI	WITHOUT_CLASSIFICATION	0.7262996339007146	WITHOUT_CLASSIFICATION	0.2737003660992854	IMPLEMENTATION
/* class methods for IO */	WITHOUT_CLASSIFICATION	0.9999570959307584	WITHOUT_CLASSIFICATION	4.290406924164607E-5	IMPLEMENTATION
// save blocking state	WITHOUT_CLASSIFICATION	0.9999491083789308	WITHOUT_CLASSIFICATION	5.0891621069166586E-5	IMPLEMENTATION
// write	WITHOUT_CLASSIFICATION	0.996919761947679	WITHOUT_CLASSIFICATION	0.0030802380523210415	IMPLEMENTATION
// Java's select doesn't do anything about this, so we leave it be.	WITHOUT_CLASSIFICATION	0.9999865476551493	WITHOUT_CLASSIFICATION	1.3452344850841038E-5	IMPLEMENTATION
// make all sockets blocking as configured again // close unregisters all channels, so we can safely reset blocking modes	WITHOUT_CLASSIFICATION	0.9999767215674313	WITHOUT_CLASSIFICATION	2.3278432568637722E-5	IMPLEMENTATION
// FIXME: process options	WITHOUT_CLASSIFICATION	0.9997997035580409	WITHOUT_CLASSIFICATION	2.0029644195895902E-4	IMPLEMENTATION
// Enebo: annotation processing forced me to do pangea method here...	WITHOUT_CLASSIFICATION	0.9999501776041285	WITHOUT_CLASSIFICATION	4.982239587150636E-5	IMPLEMENTATION
// NIO based pipe	WITHOUT_CLASSIFICATION	0.9999004854279288	WITHOUT_CLASSIFICATION	9.95145720712951E-5	IMPLEMENTATION
// not using remove(Object) here to avoid the equals() call	WITHOUT_CLASSIFICATION	0.9997850919957147	WITHOUT_CLASSIFICATION	2.1490800428526646E-4	IMPLEMENTATION
// raise will also wake the thread from selection	WITHOUT_CLASSIFICATION	0.999978719036332	WITHOUT_CLASSIFICATION	2.1280963668014354E-5	IMPLEMENTATION
/* may need to handle ENC_CODERANGE_BROKEN */	WITHOUT_CLASSIFICATION	0.9998150851496717	WITHOUT_CLASSIFICATION	1.8491485032821363E-4	IMPLEMENTATION
// TODO: rb_usascii_str_new2	WITHOUT_CLASSIFICATION	0.8954836722180454	WITHOUT_CLASSIFICATION	0.10451632778195463	IMPLEMENTATION
// If we know what method was being called, strip everything // before the call. This hides the JRuby and reflection internals.	WITHOUT_CLASSIFICATION	0.9999786517938403	WITHOUT_CLASSIFICATION	2.1348206159710915E-5	IMPLEMENTATION
// The class of this object	WITHOUT_CLASSIFICATION	0.9999839912447035	WITHOUT_CLASSIFICATION	1.600875529645698E-5	IMPLEMENTATION
// zeroed by jvm	WITHOUT_CLASSIFICATION	0.9999028054211566	WITHOUT_CLASSIFICATION	9.719457884329616E-5	IMPLEMENTATION
//objectClass.defineAnnotatedMethods(BasicObjectMethods.class);	WITHOUT_CLASSIFICATION	0.9999383648672796	WITHOUT_CLASSIFICATION	6.163513272030575E-5	IMPLEMENTATION
// JRUBY-4113: callers should not call setTaint on immediate objects	WITHOUT_CLASSIFICATION	0.9999637273156017	WITHOUT_CLASSIFICATION	3.627268439819826E-5	IMPLEMENTATION
// rb_class_boot	WITHOUT_CLASSIFICATION	0.9998956521728275	WITHOUT_CLASSIFICATION	1.0434782717242484E-4	IMPLEMENTATION
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999116762068144	WITHOUT_CLASSIFICATION	8.832379318558368E-5	IMPLEMENTATION
// 1.9 rb_check_to_integer	WITHOUT_CLASSIFICATION	0.9999133001413538	WITHOUT_CLASSIFICATION	8.669985864620088E-5	IMPLEMENTATION
// for interface impls	WITHOUT_CLASSIFICATION	0.9999814076398832	WITHOUT_CLASSIFICATION	1.859236011689514E-5	IMPLEMENTATION
// We're cloning ourselves, so we know the result should be a RubyObject	WITHOUT_CLASSIFICATION	0.9999581396614462	WITHOUT_CLASSIFICATION	4.1860338553759174E-5	IMPLEMENTATION
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999805914361833	WITHOUT_CLASSIFICATION	1.9408563816605235E-5	IMPLEMENTATION
// can't use -v and stdin	WITHOUT_CLASSIFICATION	0.9999511807890916	WITHOUT_CLASSIFICATION	4.881921090843609E-5	IMPLEMENTATION
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999486564225047	WITHOUT_CLASSIFICATION	5.134357749526013E-5	IMPLEMENTATION
// Equivalent of Data_Get_Struct // This will first check that the object in question is actually a T_DATA equivalent.	WITHOUT_CLASSIFICATION	0.9999810846897159	WITHOUT_CLASSIFICATION	1.8915310284066904E-5	IMPLEMENTATION
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999264977254501	WITHOUT_CLASSIFICATION	7.350227454997412E-5	IMPLEMENTATION
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.999926647710526	WITHOUT_CLASSIFICATION	7.335228947399669E-5	IMPLEMENTATION
// // INSTANCE VARIABLE API METHODS //	WITHOUT_CLASSIFICATION	0.9999265857106693	WITHOUT_CLASSIFICATION	7.34142893306989E-5	IMPLEMENTATION
// Struct methods	WITHOUT_CLASSIFICATION	0.9999261791922708	WITHOUT_CLASSIFICATION	7.382080772913104E-5	IMPLEMENTATION
//runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);	WITHOUT_CLASSIFICATION	0.9999485331256565	WITHOUT_CLASSIFICATION	5.1466874343446194E-5	IMPLEMENTATION
// define access methods.	WITHOUT_CLASSIFICATION	0.9999545197806605	WITHOUT_CLASSIFICATION	4.548021933934931E-5	IMPLEMENTATION
// if we are storing a name as well, index is one too high for values	WITHOUT_CLASSIFICATION	0.9999764089180729	WITHOUT_CLASSIFICATION	2.35910819271136E-5	IMPLEMENTATION
// Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999862539640201	WITHOUT_CLASSIFICATION	1.3746035979966567E-5	IMPLEMENTATION
// For binding purposes on the newly created struct types	WITHOUT_CLASSIFICATION	0.9999678354612309	WITHOUT_CLASSIFICATION	3.216453876900095E-5	IMPLEMENTATION
// OBJ_INFECT        	WITHOUT_CLASSIFICATION	0.9999297861599202	WITHOUT_CLASSIFICATION	7.021384007970059E-5	IMPLEMENTATION
// These call* assume ThreadContext = receiver.getRuntime().getCurrentContext()	WITHOUT_CLASSIFICATION	0.999958947730203	WITHOUT_CLASSIFICATION	4.105226979699324E-5	IMPLEMENTATION
// Execute iterateMethod again.	WITHOUT_CLASSIFICATION	0.9999494473572844	WITHOUT_CLASSIFICATION	5.0552642715550784E-5	IMPLEMENTATION
/*     * @param nv number of times to cycle or -1 to cycle indefinitely     */	WITHOUT_CLASSIFICATION	0.9999865582611649	WITHOUT_CLASSIFICATION	1.344173883516316E-5	IMPLEMENTATION
// Atomic ?	WITHOUT_CLASSIFICATION	0.9998955649324311	WITHOUT_CLASSIFICATION	1.0443506756891177E-4	IMPLEMENTATION
// Atomic ?	WITHOUT_CLASSIFICATION	0.9998955649324311	WITHOUT_CLASSIFICATION	1.0443506756891177E-4	IMPLEMENTATION
// MUST NOT be used across threads	WITHOUT_CLASSIFICATION	0.9999324436124846	WITHOUT_CLASSIFICATION	6.755638751542206E-5	IMPLEMENTATION
// superClass may be null.	WITHOUT_CLASSIFICATION	0.9999489555623061	WITHOUT_CLASSIFICATION	5.104443769398331E-5	IMPLEMENTATION
// Containing class...The parent of Object is null. Object should always be last in chain.	WITHOUT_CLASSIFICATION	0.9999694833554368	WITHOUT_CLASSIFICATION	3.0516644563226077E-5	IMPLEMENTATION
// ClassId is the name of the class/module sans where it is located. // If it is null, then it an anonymous class.	WITHOUT_CLASSIFICATION	0.9999932395445151	WITHOUT_CLASSIFICATION	6.760455484950502E-6	IMPLEMENTATION
// ClassProviders return Java class/module (in #defineOrGetClassUnder and // #defineOrGetModuleUnder) when class/module is opened using colon syntax. 	WITHOUT_CLASSIFICATION	0.9999854897004148	WITHOUT_CLASSIFICATION	1.4510299585323737E-5	IMPLEMENTATION
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999862473439564	WITHOUT_CLASSIFICATION	1.3752656043590507E-5	IMPLEMENTATION
// Make sure the module we include does not already exist	WITHOUT_CLASSIFICATION	0.999992146084166	WITHOUT_CLASSIFICATION	7.853915834008312E-6	IMPLEMENTATION
// MRI checks all types first:	WITHOUT_CLASSIFICATION	0.9999321900725509	WITHOUT_CLASSIFICATION	6.780992744920923E-5	IMPLEMENTATION
// we need full traces, use default (slow) populator	WITHOUT_CLASSIFICATION	0.9999785400009034	WITHOUT_CLASSIFICATION	2.1459999096567213E-5	IMPLEMENTATION
// module/singleton methods are all defined public	WITHOUT_CLASSIFICATION	0.9999642959363467	WITHOUT_CLASSIFICATION	3.57040636531656E-5	IMPLEMENTATION
// See if module is in chain...Cannot match against itself so start at superClass.	WITHOUT_CLASSIFICATION	0.9999696775732684	WITHOUT_CLASSIFICATION	3.0322426731601192E-5	IMPLEMENTATION
// We can safely reference methods here instead of doing getMethods() since if we // are adding we are not using a IncludedModuleWrapper.	WITHOUT_CLASSIFICATION	0.9999875001259683	WITHOUT_CLASSIFICATION	1.2499874031609382E-5	IMPLEMENTATION
// we grab serial number first; the worst that will happen is we cache a later // update with an earlier serial number, which would just flush anyway	WITHOUT_CLASSIFICATION	0.9999907083973983	WITHOUT_CLASSIFICATION	9.291602601581019E-6	IMPLEMENTATION
// update all hierarchies into which this module has been included	WITHOUT_CLASSIFICATION	0.9999722356666647	WITHOUT_CLASSIFICATION	2.7764333335179334E-5	IMPLEMENTATION
// This method is intended only for defining new classes in Ruby code, // so it uses the allocator of the specified superclass or default to // the Object allocator. It should NOT be used to define classes that require a native allocator.	WITHOUT_CLASSIFICATION	0.9999986083211265	WITHOUT_CLASSIFICATION	1.3916788734255147E-6	IMPLEMENTATION
// need to skip IncludedModuleWrappers	WITHOUT_CLASSIFICATION	0.9999324070498005	WITHOUT_CLASSIFICATION	6.759295019952381E-5	IMPLEMENTATION
// superClazz = null;	WITHOUT_CLASSIFICATION	0.9999364360021027	WITHOUT_CLASSIFICATION	6.356399789727164E-5	IMPLEMENTATION
// reopen a java class	WITHOUT_CLASSIFICATION	0.9999463395684188	WITHOUT_CLASSIFICATION	5.3660431581084975E-5	IMPLEMENTATION
// This method is intended only for defining new modules in Ruby code	WITHOUT_CLASSIFICATION	0.999926635469142	WITHOUT_CLASSIFICATION	7.336453085809079E-5	IMPLEMENTATION
// reopen a java module	WITHOUT_CLASSIFICATION	0.9999219948908099	WITHOUT_CLASSIFICATION	7.800510919008113E-5	IMPLEMENTATION
//FIXME warning	WITHOUT_CLASSIFICATION	0.999902820472786	WITHOUT_CLASSIFICATION	9.717952721396304E-5	IMPLEMENTATION
// FIXME warning	WITHOUT_CLASSIFICATION	0.9998603010936575	WITHOUT_CLASSIFICATION	1.3969890634243264E-4	IMPLEMENTATION
// a normal block passed to define_method changes to do arity checking; make it a lambda	WITHOUT_CLASSIFICATION	0.9999457870156373	WITHOUT_CLASSIFICATION	5.421298436269928E-5	IMPLEMENTATION
// for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope	WITHOUT_CLASSIFICATION	0.9999725601667743	WITHOUT_CLASSIFICATION	2.7439833225742762E-5	IMPLEMENTATION
// just using required is broken...but no more broken than before zsuper refactoring	WITHOUT_CLASSIFICATION	0.9999677005049751	WITHOUT_CLASSIFICATION	3.2299495025010746E-5	IMPLEMENTATION
// class and module bodies default to public, so make the block's visibility public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999931561303995	WITHOUT_CLASSIFICATION	6.843869600454123E-6	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999985758143958	WITHOUT_CLASSIFICATION	1.4241856042982332E-6	IMPLEMENTATION
// MRI error message says Class, even though Module is ok 	WITHOUT_CLASSIFICATION	0.9999670326784673	WITHOUT_CLASSIFICATION	3.29673215327371E-5	IMPLEMENTATION
// scan class hierarchy for module	WITHOUT_CLASSIFICATION	0.9999632616703427	WITHOUT_CLASSIFICATION	3.6738329657378536E-5	IMPLEMENTATION
/* Module class methods */	WITHOUT_CLASSIFICATION	0.9999564890132103	WITHOUT_CLASSIFICATION	4.3510986789717866E-5	IMPLEMENTATION
// Note: we change current frames visibility here because the methods which call // this method are all "fast" (e.g. they do not created their own frame).	WITHOUT_CLASSIFICATION	0.9999907264104186	WITHOUT_CLASSIFICATION	9.273589581283489E-6	IMPLEMENTATION
// next in hierarchy is an included version of the module we're attempting, // so we skip including it	WITHOUT_CLASSIFICATION	0.9999919948337909	WITHOUT_CLASSIFICATION	8.005166209151177E-6	IMPLEMENTATION
// if we haven't encountered a real superclass, use the found module as the new inclusion point	WITHOUT_CLASSIFICATION	0.9999895325014683	WITHOUT_CLASSIFICATION	1.0467498531740544E-5	IMPLEMENTATION
// build a list of all modules to consider for inclusion	WITHOUT_CLASSIFICATION	0.9999465285581246	WITHOUT_CLASSIFICATION	5.347144187539548E-5	IMPLEMENTATION
// if the insertion point is a class, update subclass lists	WITHOUT_CLASSIFICATION	0.9999949799526794	WITHOUT_CLASSIFICATION	5.020047320548921E-6	IMPLEMENTATION
// if there's a non-null superclass, we're including into a normal class hierarchy; // update subclass relationships to avoid stale parent/child relationships	WITHOUT_CLASSIFICATION	0.9999981842933833	WITHOUT_CLASSIFICATION	1.815706616764029E-6	IMPLEMENTATION
// ////////////////// CLASS VARIABLE RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999958790815597	WITHOUT_CLASSIFICATION	4.120918440286676E-6	IMPLEMENTATION
// ////////////////// CONSTANT RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999958453571011	WITHOUT_CLASSIFICATION	4.154642899006963E-6	IMPLEMENTATION
// Note: includes part of fix for JRUBY-1339	WITHOUT_CLASSIFICATION	0.9999325282923315	WITHOUT_CLASSIFICATION	6.747170766852494E-5	IMPLEMENTATION
// ////////////////// CLASS VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999958791211995	WITHOUT_CLASSIFICATION	4.120878800546766E-6	IMPLEMENTATION
// Wrong Parameter ?	WITHOUT_CLASSIFICATION	0.9999307316425305	WITHOUT_CLASSIFICATION	6.926835746947321E-5	IMPLEMENTATION
// not actually called anywhere (all known uses call the fast version)	WITHOUT_CLASSIFICATION	0.9998144481373372	WITHOUT_CLASSIFICATION	1.855518626627755E-4	IMPLEMENTATION
// Not that is loaded loop around to resolve it next pass	WITHOUT_CLASSIFICATION	0.9998972673321228	WITHOUT_CLASSIFICATION	1.0273266787717984E-4	IMPLEMENTATION
// if adding a module under a constant name, set that module's basename to the constant name	WITHOUT_CLASSIFICATION	0.999974618219499	WITHOUT_CLASSIFICATION	2.5381780501058278E-5	IMPLEMENTATION
// Fix for JRUBY-1339 - search hierarchy for constant	WITHOUT_CLASSIFICATION	0.999951557128062	WITHOUT_CLASSIFICATION	4.84428719379959E-5	IMPLEMENTATION
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999964173076211	WITHOUT_CLASSIFICATION	3.582692378749196E-6	IMPLEMENTATION
// removes and returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999942829455	WITHOUT_CLASSIFICATION	5.717054499997299E-6	IMPLEMENTATION
// we can't rename a file while it's open in windows	WITHOUT_CLASSIFICATION	0.999965222317454	WITHOUT_CLASSIFICATION	3.4777682545993285E-5	IMPLEMENTATION
//reopen	WITHOUT_CLASSIFICATION	0.9963757026021525	WITHOUT_CLASSIFICATION	0.0036242973978474675	IMPLEMENTATION
// ARGF methods	WITHOUT_CLASSIFICATION	0.9999167150533077	WITHOUT_CLASSIFICATION	8.328494669230583E-5	IMPLEMENTATION
//         data.currentFile.callMethod(context, "lineno=", line);	WITHOUT_CLASSIFICATION	0.9999745376562877	WITHOUT_CLASSIFICATION	2.546234371224393E-5	IMPLEMENTATION
// one optional, one required args	WITHOUT_CLASSIFICATION	0.9999589068267549	WITHOUT_CLASSIFICATION	4.10931732450002E-5	IMPLEMENTATION
// one optional and no required args	WITHOUT_CLASSIFICATION	0.9999625499553193	WITHOUT_CLASSIFICATION	3.745004468069884E-5	IMPLEMENTATION
// try to get errno value out of the class	WITHOUT_CLASSIFICATION	0.9999935277670252	WITHOUT_CLASSIFICATION	6.472232974721141E-6	IMPLEMENTATION
// we got a valid errno value	WITHOUT_CLASSIFICATION	0.9999478366603831	WITHOUT_CLASSIFICATION	5.216333961701728E-5	IMPLEMENTATION
// Ensure we're not running on GCJ, since it's not supported and leads to weird errors	WITHOUT_CLASSIFICATION	0.9999721822777723	WITHOUT_CLASSIFICATION	2.7817722227586074E-5	IMPLEMENTATION
// print out as a nice Ruby backtrace	WITHOUT_CLASSIFICATION	0.9999337240170252	WITHOUT_CLASSIFICATION	6.627598297484074E-5	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999441042936557	WITHOUT_CLASSIFICATION	5.5895706344245375E-5	IMPLEMENTATION
// set thread context JRuby classloader here, for the main thread	WITHOUT_CLASSIFICATION	0.9999788308371935	WITHOUT_CLASSIFICATION	2.1169162806433086E-5	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999477314680227	WITHOUT_CLASSIFICATION	5.226853197739755E-5	IMPLEMENTATION
// no script to run, return success below	WITHOUT_CLASSIFICATION	0.9999827944491407	WITHOUT_CLASSIFICATION	1.7205550859297435E-5	IMPLEMENTATION
// Skip /usr/bin/env if it's first	WITHOUT_CLASSIFICATION	0.999936209740946	WITHOUT_CLASSIFICATION	6.379025905410247E-5	IMPLEMENTATION
// Skip any assignments if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.999942672908053	WITHOUT_CLASSIFICATION	5.732709194692751E-5	IMPLEMENTATION
// Skip any commandline args if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999563123513031	WITHOUT_CLASSIFICATION	4.3687648696844413E-5	IMPLEMENTATION
// ignore error	WITHOUT_CLASSIFICATION	0.999994110454197	WITHOUT_CLASSIFICATION	5.889545803074626E-6	IMPLEMENTATION
// ////////////////// COMMON CONSTANT / CVAR METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999958427085635	WITHOUT_CLASSIFICATION	4.157291436537153E-6	IMPLEMENTATION
// ////////////////// INTERNAL MODULE VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999957950594099	WITHOUT_CLASSIFICATION	4.204940590055849E-6	IMPLEMENTATION
// ////////////////// LOW-LEVEL CONSTANT INTERFACE //////////////// // // fetch/store/list constants for this module //	WITHOUT_CLASSIFICATION	0.9999988855723718	WITHOUT_CLASSIFICATION	1.114427628185792E-6	IMPLEMENTATION
// odd	WITHOUT_CLASSIFICATION	0.9963700316488091	WITHOUT_CLASSIFICATION	0.003629968351191014	IMPLEMENTATION
// JRubyClient	WITHOUT_CLASSIFICATION	0.9999040183938455	WITHOUT_CLASSIFICATION	9.598160615460709E-5	IMPLEMENTATION
/*     * x = mantissa * 2 ** exponent     *     * Where mantissa is in the range of [.5, 1)     *     */	WITHOUT_CLASSIFICATION	0.999982359485286	WITHOUT_CLASSIFICATION	1.7640514713993734E-5	IMPLEMENTATION
// Make mantissa same sign so we only have one code path.	WITHOUT_CLASSIFICATION	0.999959450068148	WITHOUT_CLASSIFICATION	4.05499318519631E-5	IMPLEMENTATION
// Increase value to hit lower range.	WITHOUT_CLASSIFICATION	0.999968886901119	WITHOUT_CLASSIFICATION	3.1113098881110004E-5	IMPLEMENTATION
/*     * r = x * 2 ** y     */	WITHOUT_CLASSIFICATION	0.9999754261100224	WITHOUT_CLASSIFICATION	2.4573889977633263E-5	IMPLEMENTATION
/*  0! */	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
/*  1! */	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
/*  2! */	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
/*  3! */	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
/*  4! */	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
/*  5! */	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
/*  6! */	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
/*  7! */	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
/*  8! */	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
/*  9! */	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
/* 11! */	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
/* 12! */	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
/* 13! */	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
/* 15! */	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
/* 16! */	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
/* 17! */	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
/* 19! */	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
/* 20! */	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
/* 21! */	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
// Static constants	WITHOUT_CLASSIFICATION	0.999951864292264	WITHOUT_CLASSIFICATION	4.813570773596829E-5	IMPLEMENTATION
// Clean-up string representation so that it could be understood // by Java's BigDecimal. Not terribly efficient for now. // 1. MRI allows d and D as exponent separators	WITHOUT_CLASSIFICATION	0.9997362391389615	WITHOUT_CLASSIFICATION	2.6376086103850843E-4	IMPLEMENTATION
// 2. MRI allows underscores anywhere	WITHOUT_CLASSIFICATION	0.9999242230697077	WITHOUT_CLASSIFICATION	7.577693029217857E-5	IMPLEMENTATION
// 3. MRI ignores the trailing junk	WITHOUT_CLASSIFICATION	0.9999770008681022	WITHOUT_CLASSIFICATION	2.2999131897862164E-5	IMPLEMENTATION
// MRI behavior: -0 and +0 are two different things	WITHOUT_CLASSIFICATION	0.9999256635994936	WITHOUT_CLASSIFICATION	7.433640050631079E-5	IMPLEMENTATION
// Java and MRI definitions of modulo are different.	WITHOUT_CLASSIFICATION	0.999921208073198	WITHOUT_CLASSIFICATION	7.879192680202107E-5	IMPLEMENTATION
// Java and MRI definitions of remainder are the same.	WITHOUT_CLASSIFICATION	0.9999549660400561	WITHOUT_CLASSIFICATION	4.5033959943839276E-5	IMPLEMENTATION
// Note: MRI has a very non-trivial way of calculating the precision, // so we use very simple approximation here:	WITHOUT_CLASSIFICATION	0.9999642153783547	WITHOUT_CLASSIFICATION	3.578462164531606E-5	IMPLEMENTATION
// Iteration variables, for the square root x and the reciprocal v // initial x:  x0 ~ sqrt() // initial v:  v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999939717193895	WITHOUT_CLASSIFICATION	6.0282806105520776E-6	IMPLEMENTATION
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999120047498435	WITHOUT_CLASSIFICATION	8.799525015640902E-5	IMPLEMENTATION
// TODO: why this: .setResult();	WITHOUT_CLASSIFICATION	0.9101593790229612	WITHOUT_CLASSIFICATION	0.08984062097703888	IMPLEMENTATION
// integer division	WITHOUT_CLASSIFICATION	0.9999241439440569	WITHOUT_CLASSIFICATION	7.585605594311681E-5	IMPLEMENTATION
// MRI behavior: "If digits is 0, the result is the same as the / operator."	WITHOUT_CLASSIFICATION	0.9999813835064363	WITHOUT_CLASSIFICATION	1.861649356376246E-5	IMPLEMENTATION
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999405145545032	WITHOUT_CLASSIFICATION	5.948544549688996E-5	IMPLEMENTATION
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999405145545032	WITHOUT_CLASSIFICATION	5.948544549688996E-5	IMPLEMENTATION
// Java and MRI definitions of divmod are different.        	WITHOUT_CLASSIFICATION	0.9999419951457534	WITHOUT_CLASSIFICATION	5.800485424649332E-5	IMPLEMENTATION
// JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it	WITHOUT_CLASSIFICATION	0.9999787018491937	WITHOUT_CLASSIFICATION	2.1298150806347212E-5	IMPLEMENTATION
// shift the decimal point just to the right of the digit to be rounded to (divide by 10**(abs(scale))) // -1 -> 10's digit, -2 -> 100's digit, etc.	WITHOUT_CLASSIFICATION	0.9999877839312296	WITHOUT_CLASSIFICATION	1.2216068770533332E-5	IMPLEMENTATION
// ...round to that digit	WITHOUT_CLASSIFICATION	0.9999456205571204	WITHOUT_CLASSIFICATION	5.43794428796016E-5	IMPLEMENTATION
// ...and shift the result back to the left (multiply by 10**(abs(scale)))	WITHOUT_CLASSIFICATION	0.9999834563466387	WITHOUT_CLASSIFICATION	1.654365336136242E-5	IMPLEMENTATION
//this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are	WITHOUT_CLASSIFICATION	0.9999661620029333	WITHOUT_CLASSIFICATION	3.3837997066721804E-5	IMPLEMENTATION
// sign	WITHOUT_CLASSIFICATION	0.9963900561385151	WITHOUT_CLASSIFICATION	0.003609943861484974	IMPLEMENTATION
// significant digits and exponent	WITHOUT_CLASSIFICATION	0.9999384861659161	WITHOUT_CLASSIFICATION	6.151383408387215E-5	IMPLEMENTATION
// normalize the value	WITHOUT_CLASSIFICATION	0.9999679543626099	WITHOUT_CLASSIFICATION	3.204563739003996E-5	IMPLEMENTATION
// base	WITHOUT_CLASSIFICATION	0.9968582827407207	WITHOUT_CLASSIFICATION	0.0031417172592793008	IMPLEMENTATION
// NOTE: MRI's sqrt precision is limited by 100, // but we allow values more than 100.	WITHOUT_CLASSIFICATION	0.9999597300677235	WITHOUT_CLASSIFICATION	4.026993227648131E-5	IMPLEMENTATION
// just in case, add a bit of extra precision	WITHOUT_CLASSIFICATION	0.9999717438902979	WITHOUT_CLASSIFICATION	2.825610970218701E-5	IMPLEMENTATION
// eh?!	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
// Note: #fix has only no-arg form, but truncate allows optional parameter.	WITHOUT_CLASSIFICATION	0.9999742498713334	WITHOUT_CLASSIFICATION	2.5750128666570463E-5	IMPLEMENTATION
// General number and precision checking	WITHOUT_CLASSIFICATION	0.9999683373794396	WITHOUT_CLASSIFICATION	3.166262056047624E-5	IMPLEMENTATION
// the requested precision	WITHOUT_CLASSIFICATION	0.9999716238357432	WITHOUT_CLASSIFICATION	2.8376164256806084E-5	IMPLEMENTATION
// Proc class	WITHOUT_CLASSIFICATION	0.9999308073373566	WITHOUT_CLASSIFICATION	6.919266264338096E-5	IMPLEMENTATION
//.append("  -x[directory]   strip off text before #!ruby line and perhaps cd to directory\n")	WITHOUT_CLASSIFICATION	0.9999569837412978	WITHOUT_CLASSIFICATION	4.301625870218796E-5	IMPLEMENTATION
// even shift.. // ..floors to 62 or 63 bit BigInteger	WITHOUT_CLASSIFICATION	0.999934428798195	WITHOUT_CLASSIFICATION	6.55712018049472E-5	IMPLEMENTATION
// 5 -> 2, -5 -> -3 need half a scale more..	WITHOUT_CLASSIFICATION	0.9999118767746287	WITHOUT_CLASSIFICATION	8.812322537129664E-5	IMPLEMENTATION
// ..where 100 -> 10 shifts the scale	WITHOUT_CLASSIFICATION	0.9999372185360171	WITHOUT_CLASSIFICATION	6.278146398295118E-5	IMPLEMENTATION
// Initial x - use double root - multiply by halfBack to unshift - set new scale	WITHOUT_CLASSIFICATION	0.9999663245965237	WITHOUT_CLASSIFICATION	3.367540347627045E-5	IMPLEMENTATION
// x0 ~ sqrt()	WITHOUT_CLASSIFICATION	0.9998955649324311	WITHOUT_CLASSIFICATION	1.0443506756891177E-4	IMPLEMENTATION
// for prec 15 root x0 must surely be OK // return small prec roots without iterations	WITHOUT_CLASSIFICATION	0.9999907436032005	WITHOUT_CLASSIFICATION	9.256396799484755E-6	IMPLEMENTATION
// Initial v - the reciprocal // v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999520496924326	WITHOUT_CLASSIFICATION	4.795030756744546E-5	IMPLEMENTATION
// Collect iteration precisions beforehand	WITHOUT_CLASSIFICATION	0.9999675958532939	WITHOUT_CLASSIFICATION	3.2404146706132204E-5	IMPLEMENTATION
// assume nInit = 16 <= prec	WITHOUT_CLASSIFICATION	0.9999418258455222	WITHOUT_CLASSIFICATION	5.817415447795714E-5	IMPLEMENTATION
// The loop of "Square Root by Coupled Newton Iteration"	WITHOUT_CLASSIFICATION	0.9999651742587716	WITHOUT_CLASSIFICATION	3.482574122834321E-5	IMPLEMENTATION
// Increase precision - next iteration supplies n exact digits	WITHOUT_CLASSIFICATION	0.9999570274780654	WITHOUT_CLASSIFICATION	4.297252193462528E-5	IMPLEMENTATION
// Next x                                        // e = d - x^2	WITHOUT_CLASSIFICATION	0.9999418883634112	WITHOUT_CLASSIFICATION	5.811163658884931E-5	IMPLEMENTATION
// x += e*v     ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999116762068144	WITHOUT_CLASSIFICATION	8.832379318558368E-5	IMPLEMENTATION
// root x is ready!	WITHOUT_CLASSIFICATION	0.9999330802016569	WITHOUT_CLASSIFICATION	6.691979834297365E-5	IMPLEMENTATION
// Next v                                        // g = 1 - 2*x*v	WITHOUT_CLASSIFICATION	0.999941845663687	WITHOUT_CLASSIFICATION	5.8154336312979946E-5	IMPLEMENTATION
// v += g*v     ~ 1/2/sqrt()	WITHOUT_CLASSIFICATION	0.9999116762068144	WITHOUT_CLASSIFICATION	8.832379318558368E-5	IMPLEMENTATION
// RubyBigdecimal	WITHOUT_CLASSIFICATION	0.9998967721111539	WITHOUT_CLASSIFICATION	1.0322788884619878E-4	IMPLEMENTATION
// c: bind_eval	WITHOUT_CLASSIFICATION	0.9998936695856484	WITHOUT_CLASSIFICATION	1.063304143514971E-4	IMPLEMENTATION
/*  ================     *  Module Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999747117709702	WITHOUT_CLASSIFICATION	2.5288229029859855E-5	IMPLEMENTATION
// from CommandlineParser	WITHOUT_CLASSIFICATION	0.9999435894231674	WITHOUT_CLASSIFICATION	5.641057683253247E-5	IMPLEMENTATION
// This property is a Boolean, to allow three values, so it can match MRI's nil, false and true	WITHOUT_CLASSIFICATION	0.9999620229582612	WITHOUT_CLASSIFICATION	3.797704173874898E-5	IMPLEMENTATION
// default ClassCache using jitMax as a soft upper bound	WITHOUT_CLASSIFICATION	0.999989801397839	WITHOUT_CLASSIFICATION	1.019860216098116E-5	IMPLEMENTATION
// Until we get a little more solid on 1.9 support we will only run interpreted mode	WITHOUT_CLASSIFICATION	0.9998504675161951	WITHOUT_CLASSIFICATION	1.4953248380489997E-4	IMPLEMENTATION
// Setting the loader needs to reset the class cache	WITHOUT_CLASSIFICATION	0.9999866236621126	WITHOUT_CLASSIFICATION	1.337633788751479E-5	IMPLEMENTATION
// try the normal property first	WITHOUT_CLASSIFICATION	0.999974114530938	WITHOUT_CLASSIFICATION	2.5885469061993484E-5	IMPLEMENTATION
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999545479469215	WITHOUT_CLASSIFICATION	4.545205307849364E-5	IMPLEMENTATION
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999545479469215	WITHOUT_CLASSIFICATION	4.545205307849364E-5	IMPLEMENTATION
// try loading from classloader resources	WITHOUT_CLASSIFICATION	0.9999813131541075	WITHOUT_CLASSIFICATION	1.8686845892402226E-5	IMPLEMENTATION
// otherwise fall back on system temp location	WITHOUT_CLASSIFICATION	0.9999478734378822	WITHOUT_CLASSIFICATION	5.212656211778587E-5	IMPLEMENTATION
// We require the home directory to be absolute	WITHOUT_CLASSIFICATION	0.9999902620523549	WITHOUT_CLASSIFICATION	9.737947645246959E-6	IMPLEMENTATION
//consume the file name	WITHOUT_CLASSIFICATION	0.9999525722520658	WITHOUT_CLASSIFICATION	4.742774793413859E-5	IMPLEMENTATION
// Specify something that can't separate	WITHOUT_CLASSIFICATION	0.9999584539050912	WITHOUT_CLASSIFICATION	4.1546094908819836E-5	IMPLEMENTATION
// try cwd first	WITHOUT_CLASSIFICATION	0.9999366335797301	WITHOUT_CLASSIFICATION	6.336642026996492E-5	IMPLEMENTATION
// ruby interpreter compatibilty // Usage: ruby [switches] [--] [programfile] [arguments])	WITHOUT_CLASSIFICATION	0.9999612675911047	WITHOUT_CLASSIFICATION	3.8732408895302066E-5	IMPLEMENTATION
// KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 // if Ruby 2.0 encoding pragmas are implemented, this will need to change	WITHOUT_CLASSIFICATION	0.9933623493057058	WITHOUT_CLASSIFICATION	0.006637650694294267	IMPLEMENTATION
// @JRubyMethod(name = "complex?")	WITHOUT_CLASSIFICATION	0.9999161894631184	WITHOUT_CLASSIFICATION	8.381053688157586E-5	IMPLEMENTATION
// @JRubyMethod(name = "exact?")	WITHOUT_CLASSIFICATION	0.9999193240842067	WITHOUT_CLASSIFICATION	8.067591579323403E-5	IMPLEMENTATION
// @JRubyMethod(name = "inexact?")	WITHOUT_CLASSIFICATION	0.999919369357701	WITHOUT_CLASSIFICATION	8.063064229912429E-5	IMPLEMENTATION
// symbol string *must* be interned	WITHOUT_CLASSIFICATION	0.9999431750701496	WITHOUT_CLASSIFICATION	5.6824929850447816E-5	IMPLEMENTATION
//        assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";	WITHOUT_CLASSIFICATION	0.9999821468483644	WITHOUT_CLASSIFICATION	1.785315163562512E-5	IMPLEMENTATION
/* Symbol class methods.     *      */	WITHOUT_CLASSIFICATION	0.9999398491384459	WITHOUT_CLASSIFICATION	6.01508615540842E-5	IMPLEMENTATION
// TODO: 1.9 rb_enc_symname_p	WITHOUT_CLASSIFICATION	0.9017333599025984	WITHOUT_CLASSIFICATION	0.09826664009740166	IMPLEMENTATION
// This is needed to unpack stuff	WITHOUT_CLASSIFICATION	0.9999644366419905	WITHOUT_CLASSIFICATION	3.55633580094992E-5	IMPLEMENTATION
// we already confirmed above that length > 0	WITHOUT_CLASSIFICATION	0.9999712339501828	WITHOUT_CLASSIFICATION	2.8766049817173995E-5	IMPLEMENTATION
// *must* be power of 2!	WITHOUT_CLASSIFICATION	0.9999193535837655	WITHOUT_CLASSIFICATION	8.064641623451382E-5	IMPLEMENTATION
// note all fields are final -- rehash creates new entries when necessary. // as documented in java.util.concurrent.ConcurrentHashMap.java, that will // statistically affect only a small percentage (< 20%) of entries for a given rehash.	WITHOUT_CLASSIFICATION	0.9999944974747589	WITHOUT_CLASSIFICATION	5.5025252411828725E-6	IMPLEMENTATION
//            assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999819972433012	WITHOUT_CLASSIFICATION	1.800275669883749E-5	IMPLEMENTATION
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999399104771862	WITHOUT_CLASSIFICATION	6.0089522813790334E-5	IMPLEMENTATION
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999399104771862	WITHOUT_CLASSIFICATION	6.0089522813790334E-5	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999147708895909	WITHOUT_CLASSIFICATION	8.52291104090285E-5	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999147708895909	WITHOUT_CLASSIFICATION	8.52291104090285E-5	IMPLEMENTATION
// backwards-compatibility, but threadsafe now	WITHOUT_CLASSIFICATION	0.9999496739562782	WITHOUT_CLASSIFICATION	5.032604372180295E-5	IMPLEMENTATION
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999182946608438	WITHOUT_CLASSIFICATION	8.170533915625506E-5	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999544261588714	WITHOUT_CLASSIFICATION	4.5573841128632E-5	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999406078363104	WITHOUT_CLASSIFICATION	5.939216368952925E-5	IMPLEMENTATION
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999845180447936	WITHOUT_CLASSIFICATION	1.548195520640173E-5	IMPLEMENTATION
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999457117312744	WITHOUT_CLASSIFICATION	5.4288268725612576E-5	IMPLEMENTATION
// not so backwards-compatible here, but no one should have been // calling this anyway.	WITHOUT_CLASSIFICATION	0.999805694084138	WITHOUT_CLASSIFICATION	1.9430591586206515E-4	IMPLEMENTATION
// Profile	WITHOUT_CLASSIFICATION	0.996712981519804	WITHOUT_CLASSIFICATION	0.003287018480196036	IMPLEMENTATION
//static private final String TRANSLIT = "//translit";	WITHOUT_CLASSIFICATION	0.9999821780973933	WITHOUT_CLASSIFICATION	1.7821902606667465E-5	IMPLEMENTATION
// treat start and end as start...end for end >= 0, start..end for end < 0	WITHOUT_CLASSIFICATION	0.9999579355350982	WITHOUT_CLASSIFICATION	4.206446490173717E-5	IMPLEMENTATION
// invalid ranges result in an empty string	WITHOUT_CLASSIFICATION	0.9999899345895735	WITHOUT_CLASSIFICATION	1.0065410426494907E-5	IMPLEMENTATION
// Methods of the Nil Class (nil_*):	WITHOUT_CLASSIFICATION	0.9999649389794809	WITHOUT_CLASSIFICATION	3.5061020519166995E-5	IMPLEMENTATION
// Has read/write been closed or is it still open for business	WITHOUT_CLASSIFICATION	0.9999438557549003	WITHOUT_CLASSIFICATION	5.614424509965367E-5	IMPLEMENTATION
// Support IO modes that this object was opened with	WITHOUT_CLASSIFICATION	0.9999284551983084	WITHOUT_CLASSIFICATION	7.15448016915957E-5	IMPLEMENTATION
// must let original string know we're modifying, so shared buffers aren't damaged	WITHOUT_CLASSIFICATION	0.9999684678328125	WITHOUT_CLASSIFICATION	3.153216718749868E-5	IMPLEMENTATION
// reset the state	WITHOUT_CLASSIFICATION	0.9999702640047227	WITHOUT_CLASSIFICATION	2.9735995277303002E-5	IMPLEMENTATION
// Tainting here if we ever want it. (secure 4)	WITHOUT_CLASSIFICATION	0.9998998943689161	WITHOUT_CLASSIFICATION	1.0010563108380082E-4	IMPLEMENTATION
// rb_match_busy	WITHOUT_CLASSIFICATION	0.9998955649324311	WITHOUT_CLASSIFICATION	1.0443506756891177E-4	IMPLEMENTATION
//str is frozen	WITHOUT_CLASSIFICATION	0.99989656804755	WITHOUT_CLASSIFICATION	1.034319524499787E-4	IMPLEMENTATION
// MRI also does a pointer comparison here	WITHOUT_CLASSIFICATION	0.9999377696272477	WITHOUT_CLASSIFICATION	6.223037275225244E-5	IMPLEMENTATION
// JRubyServer	WITHOUT_CLASSIFICATION	0.9998964553660203	WITHOUT_CLASSIFICATION	1.0354463397963335E-4	IMPLEMENTATION
// Class.allocate object is not allocatable before it is initialized	WITHOUT_CLASSIFICATION	0.9999868318804123	WITHOUT_CLASSIFICATION	1.3168119587691185E-5	IMPLEMENTATION
// boot the Object class 	WITHOUT_CLASSIFICATION	0.9999657312348637	WITHOUT_CLASSIFICATION	3.426876513640389E-5	IMPLEMENTATION
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999805914361833	WITHOUT_CLASSIFICATION	1.9408563816605235E-5	IMPLEMENTATION
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999862473439564	WITHOUT_CLASSIFICATION	1.3752656043590507E-5	IMPLEMENTATION
// undo check	WITHOUT_CLASSIFICATION	0.9999076927269396	WITHOUT_CLASSIFICATION	9.23072730604037E-5	IMPLEMENTATION
// This is a non-standard method; have we decided to start extending Ruby? //classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));	WITHOUT_CLASSIFICATION	0.9999938832036342	WITHOUT_CLASSIFICATION	6.1167963657705805E-6	IMPLEMENTATION
// boot the Module and Class classes	WITHOUT_CLASSIFICATION	0.9999642405402351	WITHOUT_CLASSIFICATION	3.575945976481737E-5	IMPLEMENTATION
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.999995506251501	WITHOUT_CLASSIFICATION	4.493748498952953E-6	IMPLEMENTATION
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9999375008556658	WITHOUT_CLASSIFICATION	6.249914433418649E-5	IMPLEMENTATION
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9999375008556658	WITHOUT_CLASSIFICATION	6.249914433418649E-5	IMPLEMENTATION
// could be pulled down to RubyClass in future // rb_class_boot	WITHOUT_CLASSIFICATION	0.9997866242930437	WITHOUT_CLASSIFICATION	2.1337570695627965E-4	IMPLEMENTATION
// remove us from old superclass's child classes	WITHOUT_CLASSIFICATION	0.9999895382772384	WITHOUT_CLASSIFICATION	1.0461722761528217E-5	IMPLEMENTATION
// add us to new superclass's child classes	WITHOUT_CLASSIFICATION	0.9999844490029993	WITHOUT_CLASSIFICATION	1.5550997000739764E-5	IMPLEMENTATION
// update all subclasses	WITHOUT_CLASSIFICATION	0.9999804424422281	WITHOUT_CLASSIFICATION	1.9557557771949263E-5	IMPLEMENTATION
// fields to hold Ruby and RubyClass references	WITHOUT_CLASSIFICATION	0.9999593701841559	WITHOUT_CLASSIFICATION	4.062981584402952E-5	IMPLEMENTATION
// static initializing method	WITHOUT_CLASSIFICATION	0.9999723777819274	WITHOUT_CLASSIFICATION	2.7622218072568396E-5	IMPLEMENTATION
// standard constructor that accepts Ruby, RubyClass	WITHOUT_CLASSIFICATION	0.9999530266245226	WITHOUT_CLASSIFICATION	4.6973375477451844E-5	IMPLEMENTATION
// no-arg constructor using static references to Ruby and RubyClass	WITHOUT_CLASSIFICATION	0.9999731387295778	WITHOUT_CLASSIFICATION	2.6861270422140266E-5	IMPLEMENTATION
// non-signature signature with just IRubyObject	WITHOUT_CLASSIFICATION	0.9999468547322292	WITHOUT_CLASSIFICATION	5.314526777077322E-5	IMPLEMENTATION
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999575945116793	WITHOUT_CLASSIFICATION	4.240548832075157E-5	IMPLEMENTATION
// self // method name	WITHOUT_CLASSIFICATION	0.9999333209302897	WITHOUT_CLASSIFICATION	6.667906971023234E-5	IMPLEMENTATION
// the default allocator	WITHOUT_CLASSIFICATION	0.9999874824477023	WITHOUT_CLASSIFICATION	1.2517552297645291E-5	IMPLEMENTATION
// Equivalent of T_DATA	WITHOUT_CLASSIFICATION	0.999898625026578	WITHOUT_CLASSIFICATION	1.0137497342197158E-4	IMPLEMENTATION
// do nothing, leave empty	WITHOUT_CLASSIFICATION	0.9999880500628876	WITHOUT_CLASSIFICATION	1.1949937112414178E-5	IMPLEMENTATION
// Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9999226995617304	WITHOUT_CLASSIFICATION	7.730043826961737E-5	IMPLEMENTATION
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999976956119607	WITHOUT_CLASSIFICATION	2.3043880392877757E-5	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999625409149662	WITHOUT_CLASSIFICATION	3.745908503380441E-5	IMPLEMENTATION
// Make sure all arguments are modules before calling the callbacks	WITHOUT_CLASSIFICATION	0.9999932315572027	WITHOUT_CLASSIFICATION	6.768442797265361E-6	IMPLEMENTATION
// MRI extends in order from last to first	WITHOUT_CLASSIFICATION	0.9999651075665524	WITHOUT_CLASSIFICATION	3.489243344762294E-5	IMPLEMENTATION
// NOTE: Serialization is primarily supported for testing purposes, and there is no general // guarantee that serialization will work correctly. Specifically, instance variables pointing // at symbols, threads, modules, classes, and other unserializable types are not detected.	WITHOUT_CLASSIFICATION	0.9999985127096647	WITHOUT_CLASSIFICATION	1.4872903353243214E-6	IMPLEMENTATION
// write out ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999594342046585	WITHOUT_CLASSIFICATION	4.056579534158905E-5	IMPLEMENTATION
// rest in ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999538239856799	WITHOUT_CLASSIFICATION	4.6176014320121904E-5	IMPLEMENTATION
// 0x3fff_ffff // -0x4000_0000	WITHOUT_CLASSIFICATION	0.9999116815332845	WITHOUT_CLASSIFICATION	8.831846671559415E-5	IMPLEMENTATION
// a gotcha	WITHOUT_CLASSIFICATION	0.9998955649324311	WITHOUT_CLASSIFICATION	1.0443506756891177E-4	IMPLEMENTATION
// Java / and % are not the same as ruby	WITHOUT_CLASSIFICATION	0.9999608143028967	WITHOUT_CLASSIFICATION	3.918569710321555E-5	IMPLEMENTATION
// A gotcha for Long.MIN_VALUE: value = -value	WITHOUT_CLASSIFICATION	0.9999585386913001	WITHOUT_CLASSIFICATION	4.1461308699800675E-5	IMPLEMENTATION
// Piece of mri rb_to_id	WITHOUT_CLASSIFICATION	0.9999129292349658	WITHOUT_CLASSIFICATION	8.707076503425214E-5	IMPLEMENTATION
// Java Doubles are 64 bit long:            	WITHOUT_CLASSIFICATION	0.9999511984614206	WITHOUT_CLASSIFICATION	4.880153857944762E-5	IMPLEMENTATION
// Double.MAX_EXPONENT since Java 1.6            	WITHOUT_CLASSIFICATION	0.9999458264733148	WITHOUT_CLASSIFICATION	5.4173526685319426E-5	IMPLEMENTATION
// don't override Numeric#div !	WITHOUT_CLASSIFICATION	0.9999611840610496	WITHOUT_CLASSIFICATION	3.881593895031988E-5	IMPLEMENTATION
// Modelled after c ruby implementation (java /,% not same as ruby)	WITHOUT_CLASSIFICATION	0.9970798975012196	WITHOUT_CLASSIFICATION	0.002920102498780442	IMPLEMENTATION
// MRI behavior:	WITHOUT_CLASSIFICATION	0.9999114606011886	WITHOUT_CLASSIFICATION	8.853939881134845E-5	IMPLEMENTATION
// Numeric.equal            	WITHOUT_CLASSIFICATION	0.9999396191054057	WITHOUT_CLASSIFICATION	6.0380894594208093E-5	IMPLEMENTATION
// provider is not available	WITHOUT_CLASSIFICATION	0.9999601605860877	WITHOUT_CLASSIFICATION	3.9839413912346864E-5	IMPLEMENTATION
// bouncy castle doesn't support algorithm	WITHOUT_CLASSIFICATION	0.9998982122163063	WITHOUT_CLASSIFICATION	1.0178778369380312E-4	IMPLEMENTATION
// fall back to system JCA providers	WITHOUT_CLASSIFICATION	0.9999526132732821	WITHOUT_CLASSIFICATION	4.738672671778715E-5	IMPLEMENTATION
// RubyDigest	WITHOUT_CLASSIFICATION	0.9998956280700838	WITHOUT_CLASSIFICATION	1.0437192991619124E-4	IMPLEMENTATION
// ENEBO: Can these be fast?	WITHOUT_CLASSIFICATION	0.9998889565345228	WITHOUT_CLASSIFICATION	1.1104346547717941E-4	IMPLEMENTATION
// synchronize on the RubyThread for threadgroup updates	WITHOUT_CLASSIFICATION	0.9999756227774196	WITHOUT_CLASSIFICATION	2.4377222580420624E-5	IMPLEMENTATION
// we only add live threads	WITHOUT_CLASSIFICATION	0.9999618796884256	WITHOUT_CLASSIFICATION	3.812031157439006E-5	IMPLEMENTATION
// use same ClassIndex as metaclass, since we're technically still of that type	WITHOUT_CLASSIFICATION	0.9999692767394648	WITHOUT_CLASSIFICATION	3.0723260535169146E-5	IMPLEMENTATION
// handle everything after -- as arguments to the jruby process	WITHOUT_CLASSIFICATION	0.9999834494946783	WITHOUT_CLASSIFICATION	1.6550505321743792E-5	IMPLEMENTATION
// JRubyService	WITHOUT_CLASSIFICATION	0.9998985981965948	WITHOUT_CLASSIFICATION	1.0140180340515069E-4	IMPLEMENTATION
// while	WITHOUT_CLASSIFICATION	0.9978566559351493	WITHOUT_CLASSIFICATION	0.002143344064850658	IMPLEMENTATION
/* \OOO */	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
// CRuby uses sprintf(buf, "%.*g", FLOAT_DIG, d); // This pattern adjusts the output of String.pattern("%g") to mimic // the C version.	WITHOUT_CLASSIFICATION	0.9999803630637862	WITHOUT_CLASSIFICATION	1.9636936213728873E-5	IMPLEMENTATION
// mask off "once" flag	WITHOUT_CLASSIFICATION	0.9999125417359412	WITHOUT_CLASSIFICATION	8.745826405878934E-5	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999802903118392	WITHOUT_CLASSIFICATION	1.970968816085816E-5	IMPLEMENTATION
// internal usage (Complex/Rational)	WITHOUT_CLASSIFICATION	0.9999549676802831	WITHOUT_CLASSIFICATION	4.503231971688968E-5	IMPLEMENTATION
// silent ?	WITHOUT_CLASSIFICATION	0.9998971738875366	WITHOUT_CLASSIFICATION	1.0282611246340595E-4	IMPLEMENTATION
/* \xHH */	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999116762068144	WITHOUT_CLASSIFICATION	8.832379318558368E-5	IMPLEMENTATION
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9998955649324311	WITHOUT_CLASSIFICATION	1.0443506756891177E-4	IMPLEMENTATION
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9998955649324311	WITHOUT_CLASSIFICATION	1.0443506756891177E-4	IMPLEMENTATION
/* \O, \OO, \OOO or backref */	WITHOUT_CLASSIFICATION	0.9999116258318402	WITHOUT_CLASSIFICATION	8.837416815973129E-5	IMPLEMENTATION
// MBCLEN_NEEDMORE_P	WITHOUT_CLASSIFICATION	0.9998955649324311	WITHOUT_CLASSIFICATION	1.0443506756891177E-4	IMPLEMENTATION
// MBCLEN_INVALID_P	WITHOUT_CLASSIFICATION	0.9998961566691469	WITHOUT_CLASSIFICATION	1.0384333085321237E-4	IMPLEMENTATION
// Unicode is can be only 21 bits long, int is enough	WITHOUT_CLASSIFICATION	0.9999518610185146	WITHOUT_CLASSIFICATION	4.8138981485477634E-5	IMPLEMENTATION
/* Surrogates */	WITHOUT_CLASSIFICATION	0.9998964789195187	WITHOUT_CLASSIFICATION	1.0352108048131995E-4	IMPLEMENTATION
// do not load the class if not used	WITHOUT_CLASSIFICATION	0.9999866342137604	WITHOUT_CLASSIFICATION	1.3365786239535495E-5	IMPLEMENTATION
/* \0, \0O, \0OO */	WITHOUT_CLASSIFICATION	0.9998955649324311	WITHOUT_CLASSIFICATION	1.0443506756891177E-4	IMPLEMENTATION
/* \xHH */	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9998955649324311	WITHOUT_CLASSIFICATION	1.0443506756891177E-4	IMPLEMENTATION
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999116762068144	WITHOUT_CLASSIFICATION	8.832379318558368E-5	IMPLEMENTATION
/* \\u{H HH HHH HHHH HHHHH HHHHHH ...} */	WITHOUT_CLASSIFICATION	0.9999166497202283	WITHOUT_CLASSIFICATION	8.335027977164542E-5	IMPLEMENTATION
/* \\uHHHH */	WITHOUT_CLASSIFICATION	0.9998955649324311	WITHOUT_CLASSIFICATION	1.0443506756891177E-4	IMPLEMENTATION
/* \p{Hiragana} */	WITHOUT_CLASSIFICATION	0.9998955649324311	WITHOUT_CLASSIFICATION	1.0443506756891177E-4	IMPLEMENTATION
// inner switch	WITHOUT_CLASSIFICATION	0.999922677882344	WITHOUT_CLASSIFICATION	7.732211765599022E-5	IMPLEMENTATION
// newInstance here	WITHOUT_CLASSIFICATION	0.9998867811455727	WITHOUT_CLASSIFICATION	1.1321885442734944E-4	IMPLEMENTATION
// rb_reg_raise	WITHOUT_CLASSIFICATION	0.9998955649324311	WITHOUT_CLASSIFICATION	1.0443506756891177E-4	IMPLEMENTATION
// rb_reg_desc	WITHOUT_CLASSIFICATION	0.9998955649324311	WITHOUT_CLASSIFICATION	1.0443506756891177E-4	IMPLEMENTATION
// rb_enc_reg_raise	WITHOUT_CLASSIFICATION	0.9998955649324311	WITHOUT_CLASSIFICATION	1.0443506756891177E-4	IMPLEMENTATION
// rb_enc_reg_error_desc	WITHOUT_CLASSIFICATION	0.9999116762068144	WITHOUT_CLASSIFICATION	8.832379318558368E-5	IMPLEMENTATION
// rb_reg_initialize_str	WITHOUT_CLASSIFICATION	0.9999435655275702	WITHOUT_CLASSIFICATION	5.643447242968519E-5	IMPLEMENTATION
// rb_reg_initialize	WITHOUT_CLASSIFICATION	0.9999332708433841	WITHOUT_CLASSIFICATION	6.67291566158202E-5	IMPLEMENTATION
// JRUBY-3625: delay setting backref until the MatchData is completely initialized	WITHOUT_CLASSIFICATION	0.999943416759705	WITHOUT_CLASSIFICATION	5.658324029492004E-5	IMPLEMENTATION
// rb_reg_expr_str	WITHOUT_CLASSIFICATION	0.9998955649324311	WITHOUT_CLASSIFICATION	1.0443506756891177E-4	IMPLEMENTATION
// option_to_str	WITHOUT_CLASSIFICATION	0.9999148861696439	WITHOUT_CLASSIFICATION	8.511383035615357E-5	IMPLEMENTATION
// Don't initialize with class // Don't put in object space and don't taint	WITHOUT_CLASSIFICATION	0.9999918562930963	WITHOUT_CLASSIFICATION	8.143706903767667E-6	IMPLEMENTATION
// args should be before block	WITHOUT_CLASSIFICATION	0.9999106735612885	WITHOUT_CLASSIFICATION	8.932643871148223E-5	IMPLEMENTATION
// args should be at end	WITHOUT_CLASSIFICATION	0.9999106369046022	WITHOUT_CLASSIFICATION	8.936309539786839E-5	IMPLEMENTATION
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999357551892875	WITHOUT_CLASSIFICATION	6.424481071260063E-5	IMPLEMENTATION
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999357551892875	WITHOUT_CLASSIFICATION	6.424481071260063E-5	IMPLEMENTATION
// skip anything not related to jruby	WITHOUT_CLASSIFICATION	0.9999645787441332	WITHOUT_CLASSIFICATION	3.542125586677759E-5	IMPLEMENTATION
// start a new populator	WITHOUT_CLASSIFICATION	0.9999643907478659	WITHOUT_CLASSIFICATION	3.5609252134190476E-5	IMPLEMENTATION
// check for frame field reads or writes	WITHOUT_CLASSIFICATION	0.9999860253771481	WITHOUT_CLASSIFICATION	1.3974622851921297E-5	IMPLEMENTATION
// add all names for this annotation	WITHOUT_CLASSIFICATION	0.9999717536131559	WITHOUT_CLASSIFICATION	2.8246386844172442E-5	IMPLEMENTATION
// no annotated methods found, skip	WITHOUT_CLASSIFICATION	0.9999306664646915	WITHOUT_CLASSIFICATION	6.933353530847979E-5	IMPLEMENTATION
// write out a static initializer for frame names, so it only fires once	WITHOUT_CLASSIFICATION	0.9999839482283525	WITHOUT_CLASSIFICATION	1.6051771647577236E-5	IMPLEMENTATION
// single method, use normal logic	WITHOUT_CLASSIFICATION	0.9999427447437494	WITHOUT_CLASSIFICATION	5.725525625058643E-5	IMPLEMENTATION
// multimethod, new logic	WITHOUT_CLASSIFICATION	0.9999230345967559	WITHOUT_CLASSIFICATION	7.696540324404644E-5	IMPLEMENTATION
// declared type returns the qualified name without $ for inner classes!!!	WITHOUT_CLASSIFICATION	0.9999659200653911	WITHOUT_CLASSIFICATION	3.407993460898313E-5	IMPLEMENTATION
// inner class, use $ to delimit	WITHOUT_CLASSIFICATION	0.9999649719425552	WITHOUT_CLASSIFICATION	3.5028057444781005E-5	IMPLEMENTATION
//                        RubyModule singletonClass = module.getSingletonClass();	WITHOUT_CLASSIFICATION	0.9999740043907104	WITHOUT_CLASSIFICATION	2.5995609289709443E-5	IMPLEMENTATION
//                }	WITHOUT_CLASSIFICATION	0.9999605787853191	WITHOUT_CLASSIFICATION	3.942121468085669E-5	IMPLEMENTATION
// fallback on non-pregenerated logic	WITHOUT_CLASSIFICATION	0.9998731934505223	WITHOUT_CLASSIFICATION	1.2680654947764476E-4	IMPLEMENTATION
// refresh call adapter, since it matters if this is iter-based or not	WITHOUT_CLASSIFICATION	0.9999545745527199	WITHOUT_CLASSIFICATION	4.542544728010401E-5	IMPLEMENTATION
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9999775892836794	WITHOUT_CLASSIFICATION	2.2410716320683874E-5	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.9999469351456203	WITHOUT_CLASSIFICATION	5.306485437965514E-5	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.999915142904383	WITHOUT_CLASSIFICATION	8.485709561705787E-5	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999681486970686	WITHOUT_CLASSIFICATION	3.185130293128185E-5	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999681486970686	WITHOUT_CLASSIFICATION	3.185130293128185E-5	IMPLEMENTATION
// colon3	WITHOUT_CLASSIFICATION	0.9965411832993984	WITHOUT_CLASSIFICATION	0.0034588167006016583	IMPLEMENTATION
// Colon3	WITHOUT_CLASSIFICATION	0.9970902153499936	WITHOUT_CLASSIFICATION	0.0029097846500063065	IMPLEMENTATION
// array created for rescue args doesn't need to be in ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999669185696922	WITHOUT_CLASSIFICATION	3.308143030778371E-5	IMPLEMENTATION
// For b.foo	WITHOUT_CLASSIFICATION	0.9998999091022996	WITHOUT_CLASSIFICATION	1.0009089770031405E-4	IMPLEMENTATION
// instance config for the script run	WITHOUT_CLASSIFICATION	0.9999799971028417	WITHOUT_CLASSIFICATION	2.000289715841404E-5	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999681486970686	WITHOUT_CLASSIFICATION	3.185130293128185E-5	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999681486970686	WITHOUT_CLASSIFICATION	3.185130293128185E-5	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999831385459839	WITHOUT_CLASSIFICATION	1.686145401618725E-5	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999831385459839	WITHOUT_CLASSIFICATION	1.686145401618725E-5	IMPLEMENTATION
//RubyModule module = context.getRubyClass();	WITHOUT_CLASSIFICATION	0.9999268587195729	WITHOUT_CLASSIFICATION	7.314128042706842E-5	IMPLEMENTATION
// For 'b.foo'	WITHOUT_CLASSIFICATION	0.9999042601154733	WITHOUT_CLASSIFICATION	9.573988452669722E-5	IMPLEMENTATION
// We define an actual list to get around bug in java integration (1387115)	WITHOUT_CLASSIFICATION	0.9999635944145178	WITHOUT_CLASSIFICATION	3.640558548223179E-5	IMPLEMENTATION
// something in here is used to build up ruby stack trace...	WITHOUT_CLASSIFICATION	0.999974457385582	WITHOUT_CLASSIFICATION	2.5542614418032288E-5	IMPLEMENTATION
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999578522642244	WITHOUT_CLASSIFICATION	4.214773577567383E-5	IMPLEMENTATION
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999578522642244	WITHOUT_CLASSIFICATION	4.214773577567383E-5	IMPLEMENTATION
// do nothing, allow loop to retry	WITHOUT_CLASSIFICATION	0.9999825957061952	WITHOUT_CLASSIFICATION	1.7404293804756895E-5	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999075646357903	WITHOUT_CLASSIFICATION	9.243536420968036E-5	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999461164096494	WITHOUT_CLASSIFICATION	5.3883590350731054E-5	IMPLEMENTATION
// never visited, should be fine	WITHOUT_CLASSIFICATION	0.9999204458698415	WITHOUT_CLASSIFICATION	7.955413015844048E-5	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999831385459839	WITHOUT_CLASSIFICATION	1.686145401618725E-5	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999827483360177	WITHOUT_CLASSIFICATION	1.7251663982264612E-5	IMPLEMENTATION
// If we have more than one argument, then make sure the array is not ObjectSpaced.	WITHOUT_CLASSIFICATION	0.9999703174347753	WITHOUT_CLASSIFICATION	2.968256522477E-5	IMPLEMENTATION
// Only in ruby 1.9 methods	WITHOUT_CLASSIFICATION	0.9999506280005483	WITHOUT_CLASSIFICATION	4.937199945173482E-5	IMPLEMENTATION
// Bind 'normal' parameter values to the local scope for this method.	WITHOUT_CLASSIFICATION	0.9999916337861344	WITHOUT_CLASSIFICATION	8.366213865598671E-6	IMPLEMENTATION
// no arg grouping, just use bulk assignment methods	WITHOUT_CLASSIFICATION	0.9999660785571596	WITHOUT_CLASSIFICATION	3.392144284034564E-5	IMPLEMENTATION
// optArgs and restArgs require more work, so isolate them and ArrayList creation here	WITHOUT_CLASSIFICATION	0.9999344366717602	WITHOUT_CLASSIFICATION	6.556332823976796E-5	IMPLEMENTATION
//        arity.checkArity(runtime, argsLength);	WITHOUT_CLASSIFICATION	0.9999711475759538	WITHOUT_CLASSIFICATION	2.885242404604456E-5	IMPLEMENTATION
// no more values to stick in rest arg	WITHOUT_CLASSIFICATION	0.9999692534309114	WITHOUT_CLASSIFICATION	3.0746569088667575E-5	IMPLEMENTATION
// set argv from main's args	WITHOUT_CLASSIFICATION	0.9999594927852061	WITHOUT_CLASSIFICATION	4.050721479389045E-5	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.9999469351456203	WITHOUT_CLASSIFICATION	5.306485437965514E-5	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999681486970686	WITHOUT_CLASSIFICATION	3.185130293128185E-5	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999831385459839	WITHOUT_CLASSIFICATION	1.686145401618725E-5	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999827483360177	WITHOUT_CLASSIFICATION	1.7251663982264612E-5	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999912796499804	WITHOUT_CLASSIFICATION	8.720350019724116E-6	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999912796499804	WITHOUT_CLASSIFICATION	8.720350019724116E-6	IMPLEMENTATION
// block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] //assert argsNode != null : "argsNode is not null";	WITHOUT_CLASSIFICATION	0.9999772573916627	WITHOUT_CLASSIFICATION	2.274260833739159E-5	IMPLEMENTATION
// assign given optional arguments to their variables	WITHOUT_CLASSIFICATION	0.9999844556603246	WITHOUT_CLASSIFICATION	1.554433967532742E-5	IMPLEMENTATION
// in-frame EvalState should already have receiver set as self, continue to use it	WITHOUT_CLASSIFICATION	0.9999573055340457	WITHOUT_CLASSIFICATION	4.269446595430174E-5	IMPLEMENTATION
// assign the default values, adding to the end of allArgs	WITHOUT_CLASSIFICATION	0.9999961189866646	WITHOUT_CLASSIFICATION	3.881013335384004E-6	IMPLEMENTATION
// Make sure the appropriate scope has proper size. See JRUBY-2046.	WITHOUT_CLASSIFICATION	0.9999750209141415	WITHOUT_CLASSIFICATION	2.497908585851862E-5	IMPLEMENTATION
// Experimental class reification support, to create real Java classes // for Ruby classes after the first opening	WITHOUT_CLASSIFICATION	0.9999898901023594	WITHOUT_CLASSIFICATION	1.0109897640562193E-5	IMPLEMENTATION
// This should never happen past parse, but just bulletproof this just in case	WITHOUT_CLASSIFICATION	0.9999899321355474	WITHOUT_CLASSIFICATION	1.0067864452585234E-5	IMPLEMENTATION
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9999520994231497	WITHOUT_CLASSIFICATION	4.790057685039898E-5	IMPLEMENTATION
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999356557674407	WITHOUT_CLASSIFICATION	6.434423255936554E-5	IMPLEMENTATION
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999596637251388	WITHOUT_CLASSIFICATION	4.0336274861292826E-5	IMPLEMENTATION
// never visited, should be ok	WITHOUT_CLASSIFICATION	0.9999054463304281	WITHOUT_CLASSIFICATION	9.455366957195211E-5	IMPLEMENTATION
// If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil	WITHOUT_CLASSIFICATION	0.999971607370716	WITHOUT_CLASSIFICATION	2.839262928392691E-5	IMPLEMENTATION
// JRUBY-530 until case	WITHOUT_CLASSIFICATION	0.99991469417424	WITHOUT_CLASSIFICATION	8.530582576000655E-5	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.999915142904383	WITHOUT_CLASSIFICATION	8.485709561705787E-5	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999831385459839	WITHOUT_CLASSIFICATION	1.686145401618725E-5	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999075646357903	WITHOUT_CLASSIFICATION	9.243536420968036E-5	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999461164096494	WITHOUT_CLASSIFICATION	5.3883590350731054E-5	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999461164096494	WITHOUT_CLASSIFICATION	5.3883590350731054E-5	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999831385459839	WITHOUT_CLASSIFICATION	1.686145401618725E-5	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999827483360177	WITHOUT_CLASSIFICATION	1.7251663982264612E-5	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999827483360177	WITHOUT_CLASSIFICATION	1.7251663982264612E-5	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999912796499804	WITHOUT_CLASSIFICATION	8.720350019724116E-6	IMPLEMENTATION
// Empirical Observations: // null -> Some arity // argsNode == this.argsNode then check for arity changes // newline(splatnode) -> argspushnode	WITHOUT_CLASSIFICATION	0.9999769628890582	WITHOUT_CLASSIFICATION	2.303711094170042E-5	IMPLEMENTATION
//assert !(value instanceof RubyArray)  : "Not an array";	WITHOUT_CLASSIFICATION	0.9999571836912354	WITHOUT_CLASSIFICATION	4.2816308764583215E-5	IMPLEMENTATION
// Serialization killed our dynamic scope.  We can just create an empty one // since serialization cannot serialize an eval (which is the only thing // which is capable of having a non-empty dynamic scope).	WITHOUT_CLASSIFICATION	0.9999954255014386	WITHOUT_CLASSIFICATION	4.5744985614037825E-6	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999105332552161	WITHOUT_CLASSIFICATION	8.946674478389253E-5	IMPLEMENTATION
// We could probably also detect if LHS value came out of cache and avoid some of this	WITHOUT_CLASSIFICATION	0.9999835606897386	WITHOUT_CLASSIFICATION	1.6439310261395392E-5	IMPLEMENTATION
//        assert thenBody != null : "thenBody is not null"; //        assert elseBody != null : "elseBody is not null";	WITHOUT_CLASSIFICATION	0.9999878430378503	WITHOUT_CLASSIFICATION	1.2156962149691012E-5	IMPLEMENTATION
// add in reverse order	WITHOUT_CLASSIFICATION	0.9999632635263587	WITHOUT_CLASSIFICATION	3.673647364123816E-5	IMPLEMENTATION
// in order to make pragma's noops we set location to a special value	WITHOUT_CLASSIFICATION	0.9999870713524848	WITHOUT_CLASSIFICATION	1.2928647515180323E-5	IMPLEMENTATION
// ignore compiler pragmas	WITHOUT_CLASSIFICATION	0.999996364200336	WITHOUT_CLASSIFICATION	3.6357996641006877E-6	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999075646357903	WITHOUT_CLASSIFICATION	9.243536420968036E-5	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999461164096494	WITHOUT_CLASSIFICATION	5.3883590350731054E-5	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999461164096494	WITHOUT_CLASSIFICATION	5.3883590350731054E-5	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999831385459839	WITHOUT_CLASSIFICATION	1.686145401618725E-5	IMPLEMENTATION
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9999520994231497	WITHOUT_CLASSIFICATION	4.790057685039898E-5	IMPLEMENTATION
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999596637251388	WITHOUT_CLASSIFICATION	4.0336274861292826E-5	IMPLEMENTATION
// No actual test, so do 'when' if when expression is not nil	WITHOUT_CLASSIFICATION	0.9999387171736774	WITHOUT_CLASSIFICATION	6.128282632252943E-5	IMPLEMENTATION
// save entering the try if there's nothing to ensure	WITHOUT_CLASSIFICATION	0.9999929684004847	WITHOUT_CLASSIFICATION	7.031599515291192E-6	IMPLEMENTATION
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999042746372414	WITHOUT_CLASSIFICATION	9.572536275859233E-5	IMPLEMENTATION
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999042746372414	WITHOUT_CLASSIFICATION	9.572536275859233E-5	IMPLEMENTATION
// admittedly inefficient	WITHOUT_CLASSIFICATION	0.9999045113630548	WITHOUT_CLASSIFICATION	9.548863694515732E-5	IMPLEMENTATION
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999226625999467	WITHOUT_CLASSIFICATION	7.733740005325415E-5	IMPLEMENTATION
// What static scoping relationship exists when it comes into being.	WITHOUT_CLASSIFICATION	0.9999462171123457	WITHOUT_CLASSIFICATION	5.378288765440736E-5	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999282483276098	WITHOUT_CLASSIFICATION	7.175167239024423E-5	IMPLEMENTATION
// just rethrow	WITHOUT_CLASSIFICATION	0.9999426785373837	WITHOUT_CLASSIFICATION	5.732146261612189E-5	IMPLEMENTATION
// just rethrow	WITHOUT_CLASSIFICATION	0.9999426785373837	WITHOUT_CLASSIFICATION	5.732146261612189E-5	IMPLEMENTATION
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9998844773003788	WITHOUT_CLASSIFICATION	1.1552269962132158E-4	IMPLEMENTATION
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9998844773003788	WITHOUT_CLASSIFICATION	1.1552269962132158E-4	IMPLEMENTATION
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999355916647696	WITHOUT_CLASSIFICATION	6.440833523034435E-5	IMPLEMENTATION
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999355916647696	WITHOUT_CLASSIFICATION	6.440833523034435E-5	IMPLEMENTATION
// Execute rescue block	WITHOUT_CLASSIFICATION	0.999937297078918	WITHOUT_CLASSIFICATION	6.270292108202438E-5	IMPLEMENTATION
// If no exception is thrown execute else block	WITHOUT_CLASSIFICATION	0.9999619138137493	WITHOUT_CLASSIFICATION	3.808618625071814E-5	IMPLEMENTATION
// index of variable for this arg	WITHOUT_CLASSIFICATION	0.9999638337739593	WITHOUT_CLASSIFICATION	3.6166226040777884E-5	IMPLEMENTATION
// only a marker interface	WITHOUT_CLASSIFICATION	0.9999709218854934	WITHOUT_CLASSIFICATION	2.9078114506564006E-5	IMPLEMENTATION
// don't attempt to coerce to array, just wrap and return	WITHOUT_CLASSIFICATION	0.9999798268423942	WITHOUT_CLASSIFICATION	2.017315760581426E-5	IMPLEMENTATION
// pragmas	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
// The method also needs a scope, do both	WITHOUT_CLASSIFICATION	0.9999472555693155	WITHOUT_CLASSIFICATION	5.274443068451495E-5	IMPLEMENTATION
// We're doing normal framed compilation or the method needs a frame	WITHOUT_CLASSIFICATION	0.9999416062111933	WITHOUT_CLASSIFICATION	5.839378880670611E-5	IMPLEMENTATION
// The method doesn't need a scope or static scope; frame only	WITHOUT_CLASSIFICATION	0.9999723643342551	WITHOUT_CLASSIFICATION	2.7635665744838532E-5	IMPLEMENTATION
// The method doesn't need a scope, but has static scope needs; use a dummy scope	WITHOUT_CLASSIFICATION	0.9999703783011795	WITHOUT_CLASSIFICATION	2.9621698820487408E-5	IMPLEMENTATION
// Proc.new needs the caller's block to instantiate a proc	WITHOUT_CLASSIFICATION	0.9999769711242454	WITHOUT_CLASSIFICATION	2.3028875754593966E-5	IMPLEMENTATION
// check for Proc.new, an especially magic method	WITHOUT_CLASSIFICATION	0.9999870020788539	WITHOUT_CLASSIFICATION	1.2997921146137055E-5	IMPLEMENTATION
// long, slow way causes disabling	WITHOUT_CLASSIFICATION	0.9999554168275844	WITHOUT_CLASSIFICATION	4.458317241571345E-5	IMPLEMENTATION
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999170731278695	WITHOUT_CLASSIFICATION	8.292687213050141E-5	IMPLEMENTATION
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999170731278695	WITHOUT_CLASSIFICATION	8.292687213050141E-5	IMPLEMENTATION
// long, slow way causes disabling for defined	WITHOUT_CLASSIFICATION	0.9999633390822367	WITHOUT_CLASSIFICATION	3.666091776328669E-5	IMPLEMENTATION
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999457117312744	WITHOUT_CLASSIFICATION	5.4288268725612576E-5	IMPLEMENTATION
// Because Regexp#=== sets backref, we have to make this backref-aware	WITHOUT_CLASSIFICATION	0.999718181948513	WITHOUT_CLASSIFICATION	2.818180514869093E-4	IMPLEMENTATION
// encountered a node we don't recognize, set everything to true to disable optz	WITHOUT_CLASSIFICATION	0.99998298007029	WITHOUT_CLASSIFICATION	1.701992971007276E-5	IMPLEMENTATION
// only arrays that are "lightweight" are being used as args arrays	WITHOUT_CLASSIFICATION	0.9999665785903884	WITHOUT_CLASSIFICATION	3.3421409611574264E-5	IMPLEMENTATION
// otherwise, it's a literal array	WITHOUT_CLASSIFICATION	0.9999447130655865	WITHOUT_CLASSIFICATION	5.528693441349114E-5	IMPLEMENTATION
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999474154953016	WITHOUT_CLASSIFICATION	5.258450469848934E-5	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999453777795182	WITHOUT_CLASSIFICATION	5.4622220481869524E-5	IMPLEMENTATION
// compile first node as non-expr and then second node	WITHOUT_CLASSIFICATION	0.9999711986271267	WITHOUT_CLASSIFICATION	2.8801372873300986E-5	IMPLEMENTATION
// last node, either !instanceof WhenNode or null, is the else	WITHOUT_CLASSIFICATION	0.9999644663209841	WITHOUT_CLASSIFICATION	3.553367901600283E-5	IMPLEMENTATION
// compile first node only	WITHOUT_CLASSIFICATION	0.9999527158201209	WITHOUT_CLASSIFICATION	4.728417987909757E-5	IMPLEMENTATION
// splatted when, can't do it yet	WITHOUT_CLASSIFICATION	0.9999353664885811	WITHOUT_CLASSIFICATION	6.463351141896377E-5	IMPLEMENTATION
// if __send__ with a literal symbol, compile it as a direct fcall	WITHOUT_CLASSIFICATION	0.9999559288507246	WITHOUT_CLASSIFICATION	4.407114927551994E-5	IMPLEMENTATION
// NOTE: Currently this optimization is limited to the following situations: // * All expressions must be int-ranged literal fixnums // It also still emits the code for the "safe" when logic, which is rather // wasteful (since it essentially doubles each code body). As such it is // normally disabled, but it serves as an example of how this optimization // could be done. Ideally, it should be combined with the when processing // to improve code reuse before it's generally available.	WITHOUT_CLASSIFICATION	0.9999970101958765	WITHOUT_CLASSIFICATION	2.989804123477652E-6	IMPLEMENTATION
// aggregate when nodes into a list, unfortunately, this is no	WITHOUT_CLASSIFICATION	0.9999426820332217	WITHOUT_CLASSIFICATION	5.731796677821474E-5	IMPLEMENTATION
// one arg but it's an array, treat it as a proper array	WITHOUT_CLASSIFICATION	0.9999364137123603	WITHOUT_CLASSIFICATION	6.35862876396309E-5	IMPLEMENTATION
// can't do it	WITHOUT_CLASSIFICATION	0.9999387030664157	WITHOUT_CLASSIFICATION	6.129693358421284E-5	IMPLEMENTATION
// otherwise, use normal args compiler	WITHOUT_CLASSIFICATION	0.9999513019491001	WITHOUT_CLASSIFICATION	4.869805089988735E-5	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999263186386357	WITHOUT_CLASSIFICATION	7.36813613643014E-5	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999263186386357	WITHOUT_CLASSIFICATION	7.36813613643014E-5	IMPLEMENTATION
// these are all simple cases that don't require the heavier defined logic	WITHOUT_CLASSIFICATION	0.9999807203089754	WITHOUT_CLASSIFICATION	1.9279691024547408E-5	IMPLEMENTATION
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9999454836874694	WITHOUT_CLASSIFICATION	5.451631253067807E-5	IMPLEMENTATION
//[]	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
//[]	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
//          context.swapValues(); //context.consumeCurrentValue();	WITHOUT_CLASSIFICATION	0.9999727413060846	WITHOUT_CLASSIFICATION	2.725869391542309E-5	IMPLEMENTATION
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[] //[self] //[RubyClass] //[RubyClass, RubyClass]	WITHOUT_CLASSIFICATION	0.9999178125383821	WITHOUT_CLASSIFICATION	8.218746161792366E-5	IMPLEMENTATION
//[RubyClass]	WITHOUT_CLASSIFICATION	0.9998955870617158	WITHOUT_CLASSIFICATION	1.0441293828415667E-4	IMPLEMENTATION
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9999178125383821	WITHOUT_CLASSIFICATION	8.218746161792366E-5	IMPLEMENTATION
// if root of method is rescue, compile as a light rescue	WITHOUT_CLASSIFICATION	0.9999417559912512	WITHOUT_CLASSIFICATION	5.824400874882057E-5	IMPLEMENTATION
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999323013466066	WITHOUT_CLASSIFICATION	6.76986533934003E-5	IMPLEMENTATION
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999323013466066	WITHOUT_CLASSIFICATION	6.76986533934003E-5	IMPLEMENTATION
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.999985673640011	WITHOUT_CLASSIFICATION	1.4326359988952687E-5	IMPLEMENTATION
// if root of method is rescue, compile as light rescue	WITHOUT_CLASSIFICATION	0.9999388186464561	WITHOUT_CLASSIFICATION	6.118135354400239E-5	IMPLEMENTATION
// invoke run with threadcontext and topself	WITHOUT_CLASSIFICATION	0.9999450574947824	WITHOUT_CLASSIFICATION	5.494250521766692E-5	IMPLEMENTATION
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9999462280164623	WITHOUT_CLASSIFICATION	5.3771983537736556E-5	IMPLEMENTATION
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9999454836874694	WITHOUT_CLASSIFICATION	5.451631253067807E-5	IMPLEMENTATION
//[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9998955870617158	WITHOUT_CLASSIFICATION	1.0441293828415667E-4	IMPLEMENTATION
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9999286030871153	WITHOUT_CLASSIFICATION	7.139691288467849E-5	IMPLEMENTATION
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9999286030871153	WITHOUT_CLASSIFICATION	7.139691288467849E-5	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999688943398444	WITHOUT_CLASSIFICATION	3.110566015565759E-5	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999970327587996	WITHOUT_CLASSIFICATION	2.9672412003763534E-6	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999970327587996	WITHOUT_CLASSIFICATION	2.9672412003763534E-6	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999335114686845	WITHOUT_CLASSIFICATION	6.648853131545401E-5	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999335114686845	WITHOUT_CLASSIFICATION	6.648853131545401E-5	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999335114686845	WITHOUT_CLASSIFICATION	6.648853131545401E-5	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999970327587996	WITHOUT_CLASSIFICATION	2.9672412003763534E-6	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999970327587996	WITHOUT_CLASSIFICATION	2.9672412003763534E-6	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999688943398444	WITHOUT_CLASSIFICATION	3.110566015565759E-5	IMPLEMENTATION
// force heap-scope behavior, since it uses parent's scope	WITHOUT_CLASSIFICATION	0.999959399137318	WITHOUT_CLASSIFICATION	4.060086268203292E-5	IMPLEMENTATION
// always false or nil	WITHOUT_CLASSIFICATION	0.9999322440351137	WITHOUT_CLASSIFICATION	6.775596488628104E-5	IMPLEMENTATION
// optimizations if we know ahead of time it will always be true or false	WITHOUT_CLASSIFICATION	0.9999643701591963	WITHOUT_CLASSIFICATION	3.56298408037577E-5	IMPLEMENTATION
// normal	WITHOUT_CLASSIFICATION	0.9968311803158943	WITHOUT_CLASSIFICATION	0.0031688196841056625	IMPLEMENTATION
// compile condition as non-expr and just compile "then" body	WITHOUT_CLASSIFICATION	0.9999539726490808	WITHOUT_CLASSIFICATION	4.602735091908224E-5	IMPLEMENTATION
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9999505546515631	WITHOUT_CLASSIFICATION	4.944534843684501E-5	IMPLEMENTATION
// just push nil for pragmas	WITHOUT_CLASSIFICATION	0.9999331632611453	WITHOUT_CLASSIFICATION	6.68367388546634E-5	IMPLEMENTATION
// "assignment" means the value is already on the stack	WITHOUT_CLASSIFICATION	0.9999816606811461	WITHOUT_CLASSIFICATION	1.8339318853789243E-5	IMPLEMENTATION
// compile first node only	WITHOUT_CLASSIFICATION	0.9999527158201209	WITHOUT_CLASSIFICATION	4.728417987909757E-5	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999970327587996	WITHOUT_CLASSIFICATION	2.9672412003763534E-6	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999970327587996	WITHOUT_CLASSIFICATION	2.9672412003763534E-6	IMPLEMENTATION
// eval new value, call operator on old value, and assign	WITHOUT_CLASSIFICATION	0.9999557302017911	WITHOUT_CLASSIFICATION	4.426979820893942E-5	IMPLEMENTATION
// try optz version	WITHOUT_CLASSIFICATION	0.9999426794333454	WITHOUT_CLASSIFICATION	5.732056665463512E-5	IMPLEMENTATION
// sizes must match	WITHOUT_CLASSIFICATION	0.9999363252618871	WITHOUT_CLASSIFICATION	6.367473811288144E-5	IMPLEMENTATION
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999829633072548	WITHOUT_CLASSIFICATION	1.7036692745225994E-5	IMPLEMENTATION
// normal items at the "head" of the masgn	WITHOUT_CLASSIFICATION	0.9999720978110826	WITHOUT_CLASSIFICATION	2.7902188917394547E-5	IMPLEMENTATION
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999817357567929	WITHOUT_CLASSIFICATION	1.8264243207058425E-5	IMPLEMENTATION
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999424989101157	WITHOUT_CLASSIFICATION	5.750108988435863E-5	IMPLEMENTATION
// only supports simple parallel assignment of up to 10 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999898012385935	WITHOUT_CLASSIFICATION	1.0198761406437224E-5	IMPLEMENTATION
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999732473882997	WITHOUT_CLASSIFICATION	2.6752611700254513E-5	IMPLEMENTATION
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999574247697695	WITHOUT_CLASSIFICATION	4.2575230230569884E-5	IMPLEMENTATION
//RedoNode redoNode = (RedoNode)node;	WITHOUT_CLASSIFICATION	0.9999171964524286	WITHOUT_CLASSIFICATION	8.280354757135405E-5	IMPLEMENTATION
// done processing args	WITHOUT_CLASSIFICATION	0.9999553663919164	WITHOUT_CLASSIFICATION	4.4633608083559896E-5	IMPLEMENTATION
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999505717878121	WITHOUT_CLASSIFICATION	4.9428212187901386E-5	IMPLEMENTATION
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999212800666438	WITHOUT_CLASSIFICATION	7.871993335617275E-5	IMPLEMENTATION
// if arity 1, just compile the one element to save us the array cost	WITHOUT_CLASSIFICATION	0.9999780548515893	WITHOUT_CLASSIFICATION	2.194514841063255E-5	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
// compile into array	WITHOUT_CLASSIFICATION	0.9999432503120248	WITHOUT_CLASSIFICATION	5.6749687975237815E-5	IMPLEMENTATION
// compile first node as non-expr and compile second node	WITHOUT_CLASSIFICATION	0.99996992518231	WITHOUT_CLASSIFICATION	3.0074817690027668E-5	IMPLEMENTATION
// check if it's an immediate, and don't outline	WITHOUT_CLASSIFICATION	0.9999848848662022	WITHOUT_CLASSIFICATION	1.511513379779103E-5	IMPLEMENTATION
// condition is always true, just compile it and not body	WITHOUT_CLASSIFICATION	0.9999710651088987	WITHOUT_CLASSIFICATION	2.8934891101347033E-5	IMPLEMENTATION
// force static scope to claim restarg at 0, so it only implements the [] version of __file__	WITHOUT_CLASSIFICATION	0.9989228138922859	WITHOUT_CLASSIFICATION	0.0010771861077141325	IMPLEMENTATION
// create method for toplevel of script	WITHOUT_CLASSIFICATION	0.9999780151199232	WITHOUT_CLASSIFICATION	2.1984880076795916E-5	IMPLEMENTATION
// it's a multiple-statement body, iterate over all elements in turn and chain if it get too long	WITHOUT_CLASSIFICATION	0.9999698227609255	WITHOUT_CLASSIFICATION	3.0177239074561267E-5	IMPLEMENTATION
// send it along as arity-specific, we don't need the array	WITHOUT_CLASSIFICATION	0.9999750463033605	WITHOUT_CLASSIFICATION	2.495369663941204E-5	IMPLEMENTATION
// single-statement body, just compile it	WITHOUT_CLASSIFICATION	0.9999460680130021	WITHOUT_CLASSIFICATION	5.3931986997927184E-5	IMPLEMENTATION
// leave as a normal array	WITHOUT_CLASSIFICATION	0.9999318677121801	WITHOUT_CLASSIFICATION	6.813228781987773E-5	IMPLEMENTATION
// This method has JITed already or has been abandoned. Bail out.	WITHOUT_CLASSIFICATION	0.999944173132546	WITHOUT_CLASSIFICATION	5.5826867454090184E-5	IMPLEMENTATION
// The cache is full. Abandon JIT for this method and bail out.	WITHOUT_CLASSIFICATION	0.9999510630007278	WITHOUT_CLASSIFICATION	4.893699927218284E-5	IMPLEMENTATION
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.999985673640011	WITHOUT_CLASSIFICATION	1.4326359988952687E-5	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999970327587996	WITHOUT_CLASSIFICATION	2.9672412003763534E-6	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999970327587996	WITHOUT_CLASSIFICATION	2.9672412003763534E-6	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999688943398444	WITHOUT_CLASSIFICATION	3.110566015565759E-5	IMPLEMENTATION
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9999505546515631	WITHOUT_CLASSIFICATION	4.944534843684501E-5	IMPLEMENTATION
// try optz version	WITHOUT_CLASSIFICATION	0.9999426794333454	WITHOUT_CLASSIFICATION	5.732056665463512E-5	IMPLEMENTATION
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999829633072548	WITHOUT_CLASSIFICATION	1.7036692745225994E-5	IMPLEMENTATION
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999817357567929	WITHOUT_CLASSIFICATION	1.8264243207058425E-5	IMPLEMENTATION
// sizes must match	WITHOUT_CLASSIFICATION	0.9999363252618871	WITHOUT_CLASSIFICATION	6.367473811288144E-5	IMPLEMENTATION
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999424989101157	WITHOUT_CLASSIFICATION	5.750108988435863E-5	IMPLEMENTATION
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999574247697695	WITHOUT_CLASSIFICATION	4.2575230230569884E-5	IMPLEMENTATION
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999732473882997	WITHOUT_CLASSIFICATION	2.6752611700254513E-5	IMPLEMENTATION
// done processing args	WITHOUT_CLASSIFICATION	0.9999553663919164	WITHOUT_CLASSIFICATION	4.4633608083559896E-5	IMPLEMENTATION
// Check if the method has been explicitly excluded	WITHOUT_CLASSIFICATION	0.9999921838912325	WITHOUT_CLASSIFICATION	7.816108767578168E-6	IMPLEMENTATION
// class could not be found nor generated; give up on JIT and bail out	WITHOUT_CLASSIFICATION	0.9999592209285463	WITHOUT_CLASSIFICATION	4.077907145373048E-5	IMPLEMENTATION
// successfully got back a jitted method	WITHOUT_CLASSIFICATION	0.9999847930633489	WITHOUT_CLASSIFICATION	1.5206936651125494E-5	IMPLEMENTATION
// finally, grab the script	WITHOUT_CLASSIFICATION	0.9999577617740499	WITHOUT_CLASSIFICATION	4.2238225950013065E-5	IMPLEMENTATION
// logEvery n methods based on configuration	WITHOUT_CLASSIFICATION	0.9999646481685578	WITHOUT_CLASSIFICATION	3.535183144231184E-5	IMPLEMENTATION
// Time the compilation	WITHOUT_CLASSIFICATION	0.9999528013709721	WITHOUT_CLASSIFICATION	4.7198629027933146E-5	IMPLEMENTATION
// we have a body, do a full-on method	WITHOUT_CLASSIFICATION	0.999968716218591	WITHOUT_CLASSIFICATION	3.128378140908504E-5	IMPLEMENTATION
// If we don't have a body, check for required or opt args // if opt args, they could have side effects // if required args, need to raise errors if too few args passed // otherwise, method does nothing, make it a nop	WITHOUT_CLASSIFICATION	0.9999947567015274	WITHOUT_CLASSIFICATION	5.243298472603803E-6	IMPLEMENTATION
// if we haven't already decided on a do-nothing call	WITHOUT_CLASSIFICATION	0.9999840950275769	WITHOUT_CLASSIFICATION	1.5904972423082198E-5	IMPLEMENTATION
// only supports simple parallel assignment of up to 4 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999900508793759	WITHOUT_CLASSIFICATION	9.949120624147856E-6	IMPLEMENTATION
// normal items at the front or back of the masgn	WITHOUT_CLASSIFICATION	0.9999761526662817	WITHOUT_CLASSIFICATION	2.3847333718337663E-5	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999723831352989	WITHOUT_CLASSIFICATION	2.7616864701142223E-5	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999630282993709	WITHOUT_CLASSIFICATION	3.697170062917802E-5	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999751586556459	WITHOUT_CLASSIFICATION	2.4841344354014973E-5	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999952018644159	WITHOUT_CLASSIFICATION	4.7981355841049094E-6	IMPLEMENTATION
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999675387943946	WITHOUT_CLASSIFICATION	3.246120560539561E-5	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.999959676358164	WITHOUT_CLASSIFICATION	4.032364183607732E-5	IMPLEMENTATION
// Define the annotation for the method	WITHOUT_CLASSIFICATION	0.999982953747292	WITHOUT_CLASSIFICATION	1.704625270806121E-5	IMPLEMENTATION
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999886202268662	WITHOUT_CLASSIFICATION	1.1379773133767866E-5	IMPLEMENTATION
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999714929422208	WITHOUT_CLASSIFICATION	2.850705777925502E-5	IMPLEMENTATION
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.999964110305729	WITHOUT_CLASSIFICATION	3.588969427098797E-5	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999694149730028	WITHOUT_CLASSIFICATION	3.0585026997148135E-5	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999694149730028	WITHOUT_CLASSIFICATION	3.0585026997148135E-5	IMPLEMENTATION
// value is already on stack, save it for later	WITHOUT_CLASSIFICATION	0.9999887673705116	WITHOUT_CLASSIFICATION	1.1232629488435424E-5	IMPLEMENTATION
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9999335709750079	WITHOUT_CLASSIFICATION	6.642902499207203E-5	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998981199030209	WITHOUT_CLASSIFICATION	1.0188009697909219E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998981199030209	WITHOUT_CLASSIFICATION	1.0188009697909219E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998981199030209	WITHOUT_CLASSIFICATION	1.0188009697909219E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
/*arg2*/	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
/*args*/	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9999335709750079	WITHOUT_CLASSIFICATION	6.642902499207203E-5	IMPLEMENTATION
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.999977263753402	WITHOUT_CLASSIFICATION	2.273624659794351E-5	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998981199030209	WITHOUT_CLASSIFICATION	1.0188009697909219E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998981199030209	WITHOUT_CLASSIFICATION	1.0188009697909219E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
/*args*/	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999659887587222	WITHOUT_CLASSIFICATION	3.401124127780196E-5	IMPLEMENTATION
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999659887587222	WITHOUT_CLASSIFICATION	3.401124127780196E-5	IMPLEMENTATION
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999472673853695	WITHOUT_CLASSIFICATION	5.273261463047927E-5	IMPLEMENTATION
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999472673853695	WITHOUT_CLASSIFICATION	5.273261463047927E-5	IMPLEMENTATION
// invoke	WITHOUT_CLASSIFICATION	0.9971031739710244	WITHOUT_CLASSIFICATION	0.0028968260289756863	IMPLEMENTATION
// invoke	WITHOUT_CLASSIFICATION	0.9971031739710244	WITHOUT_CLASSIFICATION	0.0028968260289756863	IMPLEMENTATION
// check if it's true, ending if so	WITHOUT_CLASSIFICATION	0.9999753144063577	WITHOUT_CLASSIFICATION	2.468559364226409E-5	IMPLEMENTATION
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9998506427438237	WITHOUT_CLASSIFICATION	1.4935725617618782E-4	IMPLEMENTATION
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9998506427438237	WITHOUT_CLASSIFICATION	1.4935725617618782E-4	IMPLEMENTATION
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999597021416169	WITHOUT_CLASSIFICATION	4.029785838302615E-5	IMPLEMENTATION
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999597021416169	WITHOUT_CLASSIFICATION	4.029785838302615E-5	IMPLEMENTATION
// eval value for assignment	WITHOUT_CLASSIFICATION	0.9999653793932187	WITHOUT_CLASSIFICATION	3.462060678117151E-5	IMPLEMENTATION
// call site	WITHOUT_CLASSIFICATION	0.9999059117094132	WITHOUT_CLASSIFICATION	9.408829058677635E-5	IMPLEMENTATION
// call site	WITHOUT_CLASSIFICATION	0.9999059117094132	WITHOUT_CLASSIFICATION	9.408829058677635E-5	IMPLEMENTATION
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999658684603954	WITHOUT_CLASSIFICATION	3.413153960471414E-5	IMPLEMENTATION
// check if it's true, ending if not	WITHOUT_CLASSIFICATION	0.9999766686881119	WITHOUT_CLASSIFICATION	2.3331311888133674E-5	IMPLEMENTATION
// eval value and save it	WITHOUT_CLASSIFICATION	0.999961475239665	WITHOUT_CLASSIFICATION	3.852476033492109E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999658684603954	WITHOUT_CLASSIFICATION	3.413153960471414E-5	IMPLEMENTATION
// receiver, args, result, value	WITHOUT_CLASSIFICATION	0.9999560441288284	WITHOUT_CLASSIFICATION	4.3955871171552325E-5	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.999893842699759	WITHOUT_CLASSIFICATION	1.0615730024103293E-4	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.999893842699759	WITHOUT_CLASSIFICATION	1.0615730024103293E-4	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.999893842699759	WITHOUT_CLASSIFICATION	1.0615730024103293E-4	IMPLEMENTATION
// super uses current block if none given	WITHOUT_CLASSIFICATION	0.9999526881095148	WITHOUT_CLASSIFICATION	4.731189048517568E-5	IMPLEMENTATION
// args	WITHOUT_CLASSIFICATION	0.9964124395893713	WITHOUT_CLASSIFICATION	0.003587560410628781	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9963598452300426	WITHOUT_CLASSIFICATION	0.003640154769957477	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9963598452300426	WITHOUT_CLASSIFICATION	0.003640154769957477	IMPLEMENTATION
// no args, no block	WITHOUT_CLASSIFICATION	0.9999228274914885	WITHOUT_CLASSIFICATION	7.717250851146536E-5	IMPLEMENTATION
// no args, with block	WITHOUT_CLASSIFICATION	0.99993833067622	WITHOUT_CLASSIFICATION	6.166932377998761E-5	IMPLEMENTATION
// with args, no block	WITHOUT_CLASSIFICATION	0.9999236336859345	WITHOUT_CLASSIFICATION	7.636631406556084E-5	IMPLEMENTATION
// with args, with block	WITHOUT_CLASSIFICATION	0.9999218343650723	WITHOUT_CLASSIFICATION	7.816563492763321E-5	IMPLEMENTATION
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999137443260973	WITHOUT_CLASSIFICATION	8.625567390268747E-5	IMPLEMENTATION
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999457598334319	WITHOUT_CLASSIFICATION	5.424016656809646E-5	IMPLEMENTATION
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999457598334319	WITHOUT_CLASSIFICATION	5.424016656809646E-5	IMPLEMENTATION
// arg and receiver already present on the stack	WITHOUT_CLASSIFICATION	0.9999437974299028	WITHOUT_CLASSIFICATION	5.620257009730398E-5	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.999893842699759	WITHOUT_CLASSIFICATION	1.0615730024103293E-4	IMPLEMENTATION
// args	WITHOUT_CLASSIFICATION	0.9964124395893713	WITHOUT_CLASSIFICATION	0.003587560410628781	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9963598452300426	WITHOUT_CLASSIFICATION	0.003640154769957477	IMPLEMENTATION
// no args, no block	WITHOUT_CLASSIFICATION	0.9999228274914885	WITHOUT_CLASSIFICATION	7.717250851146536E-5	IMPLEMENTATION
// no args, with block	WITHOUT_CLASSIFICATION	0.99993833067622	WITHOUT_CLASSIFICATION	6.166932377998761E-5	IMPLEMENTATION
// with args, no block	WITHOUT_CLASSIFICATION	0.9999236336859345	WITHOUT_CLASSIFICATION	7.636631406556084E-5	IMPLEMENTATION
// with args, with block	WITHOUT_CLASSIFICATION	0.9999218343650723	WITHOUT_CLASSIFICATION	7.816563492763321E-5	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
// retrieve scope from scopes array	WITHOUT_CLASSIFICATION	0.9999726722789463	WITHOUT_CLASSIFICATION	2.7327721053791315E-5	IMPLEMENTATION
// use numbered access method	WITHOUT_CLASSIFICATION	0.9999536720866053	WITHOUT_CLASSIFICATION	4.632791339477335E-5	IMPLEMENTATION
// retrieve call site from sites array	WITHOUT_CLASSIFICATION	0.9999704726805305	WITHOUT_CLASSIFICATION	2.9527319469430907E-5	IMPLEMENTATION
// add name to call site list	WITHOUT_CLASSIFICATION	0.9999584690268214	WITHOUT_CLASSIFICATION	4.1530973178531085E-5	IMPLEMENTATION
// module is on top of stack	WITHOUT_CLASSIFICATION	0.9999269027687538	WITHOUT_CLASSIFICATION	7.309723124621236E-5	IMPLEMENTATION
// build scope names string	WITHOUT_CLASSIFICATION	0.9999524551651034	WITHOUT_CLASSIFICATION	4.754483489646986E-5	IMPLEMENTATION
// build descriptor string	WITHOUT_CLASSIFICATION	0.999964440271675	WITHOUT_CLASSIFICATION	3.5559728325088624E-5	IMPLEMENTATION
// build descriptor string	WITHOUT_CLASSIFICATION	0.999964440271675	WITHOUT_CLASSIFICATION	3.5559728325088624E-5	IMPLEMENTATION
// generate call sites initialization code	WITHOUT_CLASSIFICATION	0.9999721857040966	WITHOUT_CLASSIFICATION	2.7814295903474746E-5	IMPLEMENTATION
// generate symbols initialization code	WITHOUT_CLASSIFICATION	0.9999739146711089	WITHOUT_CLASSIFICATION	2.608532889118918E-5	IMPLEMENTATION
// generate fixnums initialization code	WITHOUT_CLASSIFICATION	0.9999740369744335	WITHOUT_CLASSIFICATION	2.596302556642233E-5	IMPLEMENTATION
// generate constants initialization code	WITHOUT_CLASSIFICATION	0.9999810186254722	WITHOUT_CLASSIFICATION	1.898137452791515E-5	IMPLEMENTATION
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999743917815918	WITHOUT_CLASSIFICATION	2.5608218408307305E-5	IMPLEMENTATION
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999743917815918	WITHOUT_CLASSIFICATION	2.5608218408307305E-5	IMPLEMENTATION
// generate variable readers initialization code	WITHOUT_CLASSIFICATION	0.9999785088706415	WITHOUT_CLASSIFICATION	2.14911293584645E-5	IMPLEMENTATION
// generate variable writers initialization code	WITHOUT_CLASSIFICATION	0.9999790541618941	WITHOUT_CLASSIFICATION	2.0945838105782563E-5	IMPLEMENTATION
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999734032382211	WITHOUT_CLASSIFICATION	2.6596761778896088E-5	IMPLEMENTATION
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999734032382211	WITHOUT_CLASSIFICATION	2.6596761778896088E-5	IMPLEMENTATION
// generate bytelists initialization code	WITHOUT_CLASSIFICATION	0.9999740986009417	WITHOUT_CLASSIFICATION	2.5901399058357063E-5	IMPLEMENTATION
// generate method cache initialization code	WITHOUT_CLASSIFICATION	0.9999731201909058	WITHOUT_CLASSIFICATION	2.687980909421564E-5	IMPLEMENTATION
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999137443260973	WITHOUT_CLASSIFICATION	8.625567390268747E-5	IMPLEMENTATION
// use IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999274118734274	WITHOUT_CLASSIFICATION	7.258812657255786E-5	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999956388985638	WITHOUT_CLASSIFICATION	4.361101436134819E-6	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999628569610349	WITHOUT_CLASSIFICATION	3.714303896509549E-5	IMPLEMENTATION
// No point in updating number if last number was same value.	WITHOUT_CLASSIFICATION	0.9999776392959088	WITHOUT_CLASSIFICATION	2.2360704091190105E-5	IMPLEMENTATION
// load Object under value	WITHOUT_CLASSIFICATION	0.9999685035808112	WITHOUT_CLASSIFICATION	3.149641918887855E-5	IMPLEMENTATION
// put under object array already present	WITHOUT_CLASSIFICATION	0.9999642344832108	WITHOUT_CLASSIFICATION	3.5765516789196134E-5	IMPLEMENTATION
// if element count is less than 6, use helper methods	WITHOUT_CLASSIFICATION	0.9999794478024836	WITHOUT_CLASSIFICATION	2.055219751639939E-5	IMPLEMENTATION
// This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements	WITHOUT_CLASSIFICATION	0.9999838907564015	WITHOUT_CLASSIFICATION	1.610924359847132E-5	IMPLEMENTATION
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999848349008935	WITHOUT_CLASSIFICATION	1.5165099106502245E-5	IMPLEMENTATION
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999848349008935	WITHOUT_CLASSIFICATION	1.5165099106502245E-5	IMPLEMENTATION
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9999417309406483	WITHOUT_CLASSIFICATION	5.826905935167046E-5	IMPLEMENTATION
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9999417309406483	WITHOUT_CLASSIFICATION	5.826905935167046E-5	IMPLEMENTATION
// use specific-arity for as much as possible	WITHOUT_CLASSIFICATION	0.999962056214358	WITHOUT_CLASSIFICATION	3.794378564201746E-5	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.999951779770836	WITHOUT_CLASSIFICATION	4.822022916405061E-5	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.999951779770836	WITHOUT_CLASSIFICATION	4.822022916405061E-5	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.999951779770836	WITHOUT_CLASSIFICATION	4.822022916405061E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999249937714898	WITHOUT_CLASSIFICATION	7.500622851021793E-5	IMPLEMENTATION
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999534611917761	WITHOUT_CLASSIFICATION	4.6538808223817964E-5	IMPLEMENTATION
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999534611917761	WITHOUT_CLASSIFICATION	4.6538808223817964E-5	IMPLEMENTATION
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999878147969752	WITHOUT_CLASSIFICATION	1.2185203024759406E-5	IMPLEMENTATION
// check the condition	WITHOUT_CLASSIFICATION	0.9999777432159145	WITHOUT_CLASSIFICATION	2.225678408551892E-5	IMPLEMENTATION
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999133238267076	WITHOUT_CLASSIFICATION	8.667617329245239E-5	IMPLEMENTATION
// skip catch block	WITHOUT_CLASSIFICATION	0.9998896120921928	WITHOUT_CLASSIFICATION	1.1038790780722865E-4	IMPLEMENTATION
// catch logic for flow-control: next, break	WITHOUT_CLASSIFICATION	0.9999307652937035	WITHOUT_CLASSIFICATION	6.92347062964416E-5	IMPLEMENTATION
// next jump	WITHOUT_CLASSIFICATION	0.9998998207684897	WITHOUT_CLASSIFICATION	1.0017923151030369E-4	IMPLEMENTATION
// exceptionNext target is for a next that doesn't push a new value, like this one	WITHOUT_CLASSIFICATION	0.9999045874346296	WITHOUT_CLASSIFICATION	9.541256537046078E-5	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999630282993709	WITHOUT_CLASSIFICATION	3.697170062917802E-5	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999630282993709	WITHOUT_CLASSIFICATION	3.697170062917802E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999249937714898	WITHOUT_CLASSIFICATION	7.500622851021793E-5	IMPLEMENTATION
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999878147969752	WITHOUT_CLASSIFICATION	1.2185203024759406E-5	IMPLEMENTATION
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999685013716755	WITHOUT_CLASSIFICATION	3.149862832456185E-5	IMPLEMENTATION
// check the condition	WITHOUT_CLASSIFICATION	0.9999777432159145	WITHOUT_CLASSIFICATION	2.225678408551892E-5	IMPLEMENTATION
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999133238267076	WITHOUT_CLASSIFICATION	8.667617329245239E-5	IMPLEMENTATION
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999703641540173	WITHOUT_CLASSIFICATION	2.963584598276199E-5	IMPLEMENTATION
// break jump	WITHOUT_CLASSIFICATION	0.9999560326961222	WITHOUT_CLASSIFICATION	4.3967303877890144E-5	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999640198200547	WITHOUT_CLASSIFICATION	3.59801799452816E-5	IMPLEMENTATION
//[reg]	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
// for regular expressions with the /o flag	WITHOUT_CLASSIFICATION	0.9997660453080376	WITHOUT_CLASSIFICATION	2.3395469196252724E-4	IMPLEMENTATION
// inside a loop, jump to body	WITHOUT_CLASSIFICATION	0.9999279019623512	WITHOUT_CLASSIFICATION	7.209803764885272E-5	IMPLEMENTATION
// inside a loop, jump to conditional	WITHOUT_CLASSIFICATION	0.9999424490638945	WITHOUT_CLASSIFICATION	5.755093610539772E-5	IMPLEMENTATION
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999703641540173	WITHOUT_CLASSIFICATION	2.963584598276199E-5	IMPLEMENTATION
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.999980159237097	WITHOUT_CLASSIFICATION	1.9840762903007965E-5	IMPLEMENTATION
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.999980159237097	WITHOUT_CLASSIFICATION	1.9840762903007965E-5	IMPLEMENTATION
// if more than 4 vars, get values array too	WITHOUT_CLASSIFICATION	0.9999622170377798	WITHOUT_CLASSIFICATION	3.778296222021474E-5	IMPLEMENTATION
// retry handling in the rescue block	WITHOUT_CLASSIFICATION	0.9999557428637071	WITHOUT_CLASSIFICATION	4.42571362928263E-5	IMPLEMENTATION
// any exceptions raised must continue to be raised, skipping $! restoration	WITHOUT_CLASSIFICATION	0.9999115600368407	WITHOUT_CLASSIFICATION	8.843996315935151E-5	IMPLEMENTATION
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9998891699854691	WITHOUT_CLASSIFICATION	1.1083001453103087E-4	IMPLEMENTATION
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999774224430841	WITHOUT_CLASSIFICATION	2.257755691596744E-5	IMPLEMENTATION
// Handle Flow exceptions, just propagating them	WITHOUT_CLASSIFICATION	0.9998864017858793	WITHOUT_CLASSIFICATION	1.1359821412071154E-4	IMPLEMENTATION
// rethrow to outer flow catcher	WITHOUT_CLASSIFICATION	0.9999455259816769	WITHOUT_CLASSIFICATION	5.4474018323186766E-5	IMPLEMENTATION
// Handle Ruby exceptions (RaiseException)	WITHOUT_CLASSIFICATION	0.9998975419520483	WITHOUT_CLASSIFICATION	1.0245804795170984E-4	IMPLEMENTATION
// inside a loop, break out of it // go to end of loop, leaving break value on stack	WITHOUT_CLASSIFICATION	0.9999725740270041	WITHOUT_CLASSIFICATION	2.7425972995881198E-5	IMPLEMENTATION
// false // zero	WITHOUT_CLASSIFICATION	0.9999281554844904	WITHOUT_CLASSIFICATION	7.184451550953945E-5	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.999976165560316	WITHOUT_CLASSIFICATION	2.3834439684096145E-5	IMPLEMENTATION
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9998891699854691	WITHOUT_CLASSIFICATION	1.1083001453103087E-4	IMPLEMENTATION
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999774224430841	WITHOUT_CLASSIFICATION	2.257755691596744E-5	IMPLEMENTATION
// retry handling in the rescue blocks	WITHOUT_CLASSIFICATION	0.9999568407788202	WITHOUT_CLASSIFICATION	4.315922117970504E-5	IMPLEMENTATION
// push false	WITHOUT_CLASSIFICATION	0.9999037950870374	WITHOUT_CLASSIFICATION	9.620491296248787E-5	IMPLEMENTATION
//method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));	WITHOUT_CLASSIFICATION	0.9999725236927225	WITHOUT_CLASSIFICATION	2.7476307277519333E-5	IMPLEMENTATION
//method.ifnonnull(trueLabel);	WITHOUT_CLASSIFICATION	0.999916476813506	WITHOUT_CLASSIFICATION	8.352318649394344E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)   //[C]	WITHOUT_CLASSIFICATION	0.9999292158674262	WITHOUT_CLASSIFICATION	7.07841325737156E-5	IMPLEMENTATION
//[C, C] //[C, C, String] //[C, null|C]	WITHOUT_CLASSIFICATION	0.9999327557671052	WITHOUT_CLASSIFICATION	6.724423289486956E-5	IMPLEMENTATION
//[C]	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
// push true	WITHOUT_CLASSIFICATION	0.9998957198988129	WITHOUT_CLASSIFICATION	1.0428010118720418E-4	IMPLEMENTATION
// EQ != 0 (i.e. true)	WITHOUT_CLASSIFICATION	0.9999130611182077	WITHOUT_CLASSIFICATION	8.693888179227794E-5	IMPLEMENTATION
//[?, ?] //[?, boolean]	WITHOUT_CLASSIFICATION	0.9999413694988095	WITHOUT_CLASSIFICATION	5.86305011903963E-5	IMPLEMENTATION
//[RubyModule] //[RubyModule, String]	WITHOUT_CLASSIFICATION	0.9999330975534149	WITHOUT_CLASSIFICATION	6.690244658516601E-5	IMPLEMENTATION
//[boolean]	WITHOUT_CLASSIFICATION	0.9999130712786	WITHOUT_CLASSIFICATION	8.692872139998515E-5	IMPLEMENTATION
// no receiver for singleton class	WITHOUT_CLASSIFICATION	0.9999558151073354	WITHOUT_CLASSIFICATION	4.418489266458616E-5	IMPLEMENTATION
// but there's a superclass passed in, use it	WITHOUT_CLASSIFICATION	0.9999648684321985	WITHOUT_CLASSIFICATION	3.5131567801485794E-5	IMPLEMENTATION
// we re-set self to the class, but store the old self in a temporary local variable // this is to prevent it GCing in case the singleton is short-lived	WITHOUT_CLASSIFICATION	0.999998529791476	WITHOUT_CLASSIFICATION	1.4702085240091752E-6	IMPLEMENTATION
// set self to the class	WITHOUT_CLASSIFICATION	0.9999823078804586	WITHOUT_CLASSIFICATION	1.7692119541379358E-5	IMPLEMENTATION
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9998983981281937	WITHOUT_CLASSIFICATION	1.0160187180634019E-4	IMPLEMENTATION
// static scope	WITHOUT_CLASSIFICATION	0.999936250881915	WITHOUT_CLASSIFICATION	6.374911808503933E-5	IMPLEMENTATION
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999868924804747	WITHOUT_CLASSIFICATION	1.3107519525438833E-5	IMPLEMENTATION
// new instance to invoke run against	WITHOUT_CLASSIFICATION	0.9999519106228847	WITHOUT_CLASSIFICATION	4.808937711523458E-5	IMPLEMENTATION
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9998983981281937	WITHOUT_CLASSIFICATION	1.0160187180634019E-4	IMPLEMENTATION
// static scope	WITHOUT_CLASSIFICATION	0.999936250881915	WITHOUT_CLASSIFICATION	6.374911808503933E-5	IMPLEMENTATION
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999868924804747	WITHOUT_CLASSIFICATION	1.3107519525438833E-5	IMPLEMENTATION
// finally with exception	WITHOUT_CLASSIFICATION	0.999924751916775	WITHOUT_CLASSIFICATION	7.524808322504301E-5	IMPLEMENTATION
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999691867104502	WITHOUT_CLASSIFICATION	3.0813289549820635E-5	IMPLEMENTATION
// otherwise, there's a receiver, so we pass that in directly for the sclass logic	WITHOUT_CLASSIFICATION	0.9999847326214346	WITHOUT_CLASSIFICATION	1.5267378565346264E-5	IMPLEMENTATION
// original exception is on stack	WITHOUT_CLASSIFICATION	0.9999505078783871	WITHOUT_CLASSIFICATION	4.949212161295211E-5	IMPLEMENTATION
// RaiseException is on stack, get RubyException out	WITHOUT_CLASSIFICATION	0.999964150892628	WITHOUT_CLASSIFICATION	3.5849107372014785E-5	IMPLEMENTATION
// updating position for same line; skip	WITHOUT_CLASSIFICATION	0.9999684158748284	WITHOUT_CLASSIFICATION	3.158412517160277E-5	IMPLEMENTATION
// callbacks to fill in method body	WITHOUT_CLASSIFICATION	0.9999133662326222	WITHOUT_CLASSIFICATION	8.663376737780785E-5	IMPLEMENTATION
// prepare to call "def" utility method to handle def logic	WITHOUT_CLASSIFICATION	0.9999099155041061	WITHOUT_CLASSIFICATION	9.008449589389985E-5	IMPLEMENTATION
// script object	WITHOUT_CLASSIFICATION	0.9999392074007037	WITHOUT_CLASSIFICATION	6.079259929637189E-5	IMPLEMENTATION
// arities	WITHOUT_CLASSIFICATION	0.9963634158980078	WITHOUT_CLASSIFICATION	0.0036365841019922397	IMPLEMENTATION
// TODO assuming case is a fixnum	WITHOUT_CLASSIFICATION	0.9915103628278492	WITHOUT_CLASSIFICATION	0.00848963717215077	IMPLEMENTATION
// we have an input case, prepare branching logic	WITHOUT_CLASSIFICATION	0.9999543764993438	WITHOUT_CLASSIFICATION	4.56235006561975E-5	IMPLEMENTATION
// we have optimized switch cases, build a lookupswitch	WITHOUT_CLASSIFICATION	0.9999145839361869	WITHOUT_CLASSIFICATION	8.54160638131254E-5	IMPLEMENTATION
// checkcast the value; if match, fast path; otherwise proceed to slow logic	WITHOUT_CLASSIFICATION	0.9999842301846414	WITHOUT_CLASSIFICATION	1.576981535854885E-5	IMPLEMENTATION
// expression-based tests + bodies	WITHOUT_CLASSIFICATION	0.9999244445337547	WITHOUT_CLASSIFICATION	7.555546624534839E-5	IMPLEMENTATION
// normal case, create a new label	WITHOUT_CLASSIFICATION	0.9999844011447527	WITHOUT_CLASSIFICATION	1.5598855247271873E-5	IMPLEMENTATION
// last conditional case, use defaultCase	WITHOUT_CLASSIFICATION	0.9999746188339617	WITHOUT_CLASSIFICATION	2.53811660383692E-5	IMPLEMENTATION
// do nothing; arity check is done before call	WITHOUT_CLASSIFICATION	0.9999861862288142	WITHOUT_CLASSIFICATION	1.381377118571621E-5	IMPLEMENTATION
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999475070334939	WITHOUT_CLASSIFICATION	5.2492966505989606E-5	IMPLEMENTATION
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999566666283057	WITHOUT_CLASSIFICATION	4.3333371694281656E-5	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.9999589275895077	WITHOUT_CLASSIFICATION	4.107241049236193E-5	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.9999510297596065	WITHOUT_CLASSIFICATION	4.897024039340663E-5	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.9999510297596065	WITHOUT_CLASSIFICATION	4.897024039340663E-5	IMPLEMENTATION
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999559541056737	WITHOUT_CLASSIFICATION	4.404589432623171E-5	IMPLEMENTATION
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999559541056737	WITHOUT_CLASSIFICATION	4.404589432623171E-5	IMPLEMENTATION
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999704791761895	WITHOUT_CLASSIFICATION	2.9520823810355082E-5	IMPLEMENTATION
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999704791761895	WITHOUT_CLASSIFICATION	2.9520823810355082E-5	IMPLEMENTATION
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999813957843151	WITHOUT_CLASSIFICATION	1.8604215684813278E-5	IMPLEMENTATION
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999874370422216	WITHOUT_CLASSIFICATION	1.2562957778415009E-5	IMPLEMENTATION
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999818108554205	WITHOUT_CLASSIFICATION	1.8189144579501045E-5	IMPLEMENTATION
// if there's args left and we want them, assign to rest arg	WITHOUT_CLASSIFICATION	0.9999615299245583	WITHOUT_CLASSIFICATION	3.847007544158205E-5	IMPLEMENTATION
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999847013390791	WITHOUT_CLASSIFICATION	1.5298660920893435E-5	IMPLEMENTATION
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999702914175772	WITHOUT_CLASSIFICATION	2.9708582422862516E-5	IMPLEMENTATION
// first, iterate over all pre args	WITHOUT_CLASSIFICATION	0.9999603150477517	WITHOUT_CLASSIFICATION	3.9684952248165027E-5	IMPLEMENTATION
// then optional args	WITHOUT_CLASSIFICATION	0.9999589089490589	WITHOUT_CLASSIFICATION	4.10910509411537E-5	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999630282993709	WITHOUT_CLASSIFICATION	3.697170062917802E-5	IMPLEMENTATION
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999813957843151	WITHOUT_CLASSIFICATION	1.8604215684813278E-5	IMPLEMENTATION
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999874370422216	WITHOUT_CLASSIFICATION	1.2562957778415009E-5	IMPLEMENTATION
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999818108554205	WITHOUT_CLASSIFICATION	1.8189144579501045E-5	IMPLEMENTATION
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999847013390791	WITHOUT_CLASSIFICATION	1.5298660920893435E-5	IMPLEMENTATION
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999702914175772	WITHOUT_CLASSIFICATION	2.9708582422862516E-5	IMPLEMENTATION
// if rest args, excluding post args	WITHOUT_CLASSIFICATION	0.9999416083246292	WITHOUT_CLASSIFICATION	5.8391675370709536E-5	IMPLEMENTATION
// finally, post args	WITHOUT_CLASSIFICATION	0.9999358450801394	WITHOUT_CLASSIFICATION	6.415491986050582E-5	IMPLEMENTATION
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.999859953382483	WITHOUT_CLASSIFICATION	1.400466175169248E-4	IMPLEMENTATION
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.999859953382483	WITHOUT_CLASSIFICATION	1.400466175169248E-4	IMPLEMENTATION
// unwrap scopes to appropriate depth	WITHOUT_CLASSIFICATION	0.9999158213273642	WITHOUT_CLASSIFICATION	8.41786726357095E-5	IMPLEMENTATION
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999616321117101	WITHOUT_CLASSIFICATION	3.836788828987018E-5	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.999978812585251	WITHOUT_CLASSIFICATION	2.1187414748906825E-5	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999547762835383	WITHOUT_CLASSIFICATION	4.5223716461631136E-5	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999547762835383	WITHOUT_CLASSIFICATION	4.5223716461631136E-5	IMPLEMENTATION
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999483802639477	WITHOUT_CLASSIFICATION	5.161973605220719E-5	IMPLEMENTATION
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999603465193143	WITHOUT_CLASSIFICATION	3.965348068557361E-5	IMPLEMENTATION
// store the local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999833662628935	WITHOUT_CLASSIFICATION	1.6633737106448122E-5	IMPLEMENTATION
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.999961122814305	WITHOUT_CLASSIFICATION	3.8877185694932915E-5	IMPLEMENTATION
// return in a class body raises error	WITHOUT_CLASSIFICATION	0.9999926426010443	WITHOUT_CLASSIFICATION	7.35739895581362E-6	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999751586556459	WITHOUT_CLASSIFICATION	2.4841344354014973E-5	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999952018644159	WITHOUT_CLASSIFICATION	4.7981355841049094E-6	IMPLEMENTATION
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999675387943946	WITHOUT_CLASSIFICATION	3.246120560539561E-5	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.999959676358164	WITHOUT_CLASSIFICATION	4.032364183607732E-5	IMPLEMENTATION
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999714929422208	WITHOUT_CLASSIFICATION	2.850705777925502E-5	IMPLEMENTATION
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.999964110305729	WITHOUT_CLASSIFICATION	3.588969427098797E-5	IMPLEMENTATION
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999483802639477	WITHOUT_CLASSIFICATION	5.161973605220719E-5	IMPLEMENTATION
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999603465193143	WITHOUT_CLASSIFICATION	3.965348068557361E-5	IMPLEMENTATION
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.999961122814305	WITHOUT_CLASSIFICATION	3.8877185694932915E-5	IMPLEMENTATION
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.999954072721692	WITHOUT_CLASSIFICATION	4.592727830789725E-5	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.999978812585251	WITHOUT_CLASSIFICATION	2.1187414748906825E-5	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.999978812585251	WITHOUT_CLASSIFICATION	2.1187414748906825E-5	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.999976165560316	WITHOUT_CLASSIFICATION	2.3834439684096145E-5	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.999976165560316	WITHOUT_CLASSIFICATION	2.3834439684096145E-5	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999613762090559	WITHOUT_CLASSIFICATION	3.862379094416806E-5	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999613762090559	WITHOUT_CLASSIFICATION	3.862379094416806E-5	IMPLEMENTATION
// store the local vars in a local variable if there are any	WITHOUT_CLASSIFICATION	0.999995086140201	WITHOUT_CLASSIFICATION	4.913859798937739E-6	IMPLEMENTATION
// if more than 4 locals, get and populate the locals array too	WITHOUT_CLASSIFICATION	0.9999714498117535	WITHOUT_CLASSIFICATION	2.8550188246499043E-5	IMPLEMENTATION
// fill local vars with nil, to avoid checking every access.	WITHOUT_CLASSIFICATION	0.9999658010481672	WITHOUT_CLASSIFICATION	3.419895183281998E-5	IMPLEMENTATION
// default for starting tempVariableIndex is ok	WITHOUT_CLASSIFICATION	0.9999896775110441	WITHOUT_CLASSIFICATION	1.0322488955853523E-5	IMPLEMENTATION
// store the local vars in a local variable for preparing the class (using previous scope)	WITHOUT_CLASSIFICATION	0.999996780597854	WITHOUT_CLASSIFICATION	3.219402145956669E-6	IMPLEMENTATION
// store the new local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999855946419376	WITHOUT_CLASSIFICATION	1.4405358062415054E-5	IMPLEMENTATION
// in 1.8 mode, this will be a RubyArray containing the arguments // in 1.9 mode, this will be an IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999856723433158	WITHOUT_CLASSIFICATION	1.4327656684112456E-5	IMPLEMENTATION
// no variable initialization, because we're reusing parent's scope (flat)	WITHOUT_CLASSIFICATION	0.999979573706167	WITHOUT_CLASSIFICATION	2.042629383301603E-5	IMPLEMENTATION
// for specific-index cases, clean up non-expression values	WITHOUT_CLASSIFICATION	0.9999718797823461	WITHOUT_CLASSIFICATION	2.812021765384923E-5	IMPLEMENTATION
// set up a local Ruby variable	WITHOUT_CLASSIFICATION	0.9999723743669079	WITHOUT_CLASSIFICATION	2.7625633092138484E-5	IMPLEMENTATION
// if that succeeds, the others should as well	WITHOUT_CLASSIFICATION	0.9999578953490108	WITHOUT_CLASSIFICATION	4.2104650989110385E-5	IMPLEMENTATION
// verify the class	WITHOUT_CLASSIFICATION	0.9999703001145764	WITHOUT_CLASSIFICATION	2.9699885423544333E-5	IMPLEMENTATION
// create dir if necessary	WITHOUT_CLASSIFICATION	0.9999879354433541	WITHOUT_CLASSIFICATION	1.2064556646011818E-5	IMPLEMENTATION
// Create the class with the appropriate class name and source file	WITHOUT_CLASSIFICATION	0.9999941163638744	WITHOUT_CLASSIFICATION	5.88363612558425E-6	IMPLEMENTATION
// add setPosition impl, which stores filename as constant to speed updates	WITHOUT_CLASSIFICATION	0.999987350459999	WITHOUT_CLASSIFICATION	1.2649540001040408E-5	IMPLEMENTATION
// thread context	WITHOUT_CLASSIFICATION	0.9999209837568708	WITHOUT_CLASSIFICATION	7.901624312924775E-5	IMPLEMENTATION
// line number	WITHOUT_CLASSIFICATION	0.9999385839624948	WITHOUT_CLASSIFICATION	6.141603750524869E-5	IMPLEMENTATION
// invoke __file__ with threadcontext, self, args (null), and block (null)	WITHOUT_CLASSIFICATION	0.9999365738248399	WITHOUT_CLASSIFICATION	6.342617516000523E-5	IMPLEMENTATION
// load always uses IRubyObject[], so simple closure offset calculation here	WITHOUT_CLASSIFICATION	0.9999710267765181	WITHOUT_CLASSIFICATION	2.8973223481973062E-5	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999952018644159	WITHOUT_CLASSIFICATION	4.7981355841049094E-6	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.999959676358164	WITHOUT_CLASSIFICATION	4.032364183607732E-5	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999694149730028	WITHOUT_CLASSIFICATION	3.0585026997148135E-5	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9963598452300426	WITHOUT_CLASSIFICATION	0.003640154769957477	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9963598452300426	WITHOUT_CLASSIFICATION	0.003640154769957477	IMPLEMENTATION
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.999954072721692	WITHOUT_CLASSIFICATION	4.592727830789725E-5	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.999978812585251	WITHOUT_CLASSIFICATION	2.1187414748906825E-5	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.999976165560316	WITHOUT_CLASSIFICATION	2.3834439684096145E-5	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999613762090559	WITHOUT_CLASSIFICATION	3.862379094416806E-5	IMPLEMENTATION
// add Script#run impl, used for running this script with a specified threadcontext and self // root method of a script is always in __file__ method	WITHOUT_CLASSIFICATION	0.9999953819622139	WITHOUT_CLASSIFICATION	4.618037786041598E-6	IMPLEMENTATION
// add main impl, used for detached or command-line execution of this script with a new runtime // root method of a script is always in stub0, method0	WITHOUT_CLASSIFICATION	0.9999963285358435	WITHOUT_CLASSIFICATION	3.671464156475486E-6	IMPLEMENTATION
// construct static scope list of names	WITHOUT_CLASSIFICATION	0.9999673136002261	WITHOUT_CLASSIFICATION	3.268639977389408E-5	IMPLEMENTATION
// JRUBY-3014: make __FILE__ dynamically determined at load time, but // we provide a reasonable default here	WITHOUT_CLASSIFICATION	0.9999893801166315	WITHOUT_CLASSIFICATION	1.0619883368593922E-5	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999973160495882	WITHOUT_CLASSIFICATION	2.68395041178032E-6	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999973160495882	WITHOUT_CLASSIFICATION	2.68395041178032E-6	IMPLEMENTATION
// lazily create class init only if necessary	WITHOUT_CLASSIFICATION	0.9999896126176134	WITHOUT_CLASSIFICATION	1.0387382386518112E-5	IMPLEMENTATION
// boxed arg list __file__	WITHOUT_CLASSIFICATION	0.9998581601082822	WITHOUT_CLASSIFICATION	1.4183989171787884E-4	IMPLEMENTATION
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999377921658852	WITHOUT_CLASSIFICATION	6.220783411474557E-5	IMPLEMENTATION
// exact arg list __file__	WITHOUT_CLASSIFICATION	0.999836109098912	WITHOUT_CLASSIFICATION	1.638909010880955E-4	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.9999351610879865	WITHOUT_CLASSIFICATION	6.483891201345292E-5	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.9999351610879865	WITHOUT_CLASSIFICATION	6.483891201345292E-5	IMPLEMENTATION
// not using a new scope, use saved one for a flat closure	WITHOUT_CLASSIFICATION	0.9997445351323249	WITHOUT_CLASSIFICATION	2.554648676750919E-4	IMPLEMENTATION
// normal closure	WITHOUT_CLASSIFICATION	0.9999115969967465	WITHOUT_CLASSIFICATION	8.840300325351872E-5	IMPLEMENTATION
// end of scoping for closure's vars	WITHOUT_CLASSIFICATION	0.9999652174606052	WITHOUT_CLASSIFICATION	3.4782539394792104E-5	IMPLEMENTATION
// we only need full-on redo exception handling if there's logic that might produce it	WITHOUT_CLASSIFICATION	0.9999677780492106	WITHOUT_CLASSIFICATION	3.2221950789382354E-5	IMPLEMENTATION
// handle redos by restarting the block	WITHOUT_CLASSIFICATION	0.9999386804357112	WITHOUT_CLASSIFICATION	6.131956428884067E-5	IMPLEMENTATION
// jump back to the top of the main body of this closure	WITHOUT_CLASSIFICATION	0.9999813012153058	WITHOUT_CLASSIFICATION	1.869878469411695E-5	IMPLEMENTATION
// Ruby name 	WITHOUT_CLASSIFICATION	0.9999003945845016	WITHOUT_CLASSIFICATION	9.960541549829037E-5	IMPLEMENTATION
// Accumulate call arguments	WITHOUT_CLASSIFICATION	0.9999550657067667	WITHOUT_CLASSIFICATION	4.493429323331118E-5	IMPLEMENTATION
// Fix FileNameCompletor to work mid-line	WITHOUT_CLASSIFICATION	0.9999040337655298	WITHOUT_CLASSIFICATION	9.596623447015456E-5	IMPLEMENTATION
// We need to ensure that the variable names generated here cannot conflict with ruby variable names! // Hence the "%" tthat is appended to the beginning!	WITHOUT_CLASSIFICATION	0.9999663675952324	WITHOUT_CLASSIFICATION	3.363240476767374E-5	IMPLEMENTATION
// Does this method define code?  // Default is yes -- which basically leads to pessimistic but safe optimizations // But, for library and internal methods, this might be false.	WITHOUT_CLASSIFICATION	0.999982640265868	WITHOUT_CLASSIFICATION	1.7359734131909002E-5	IMPLEMENTATION
// Map of constants defined in this scope (not valid for methods!)	WITHOUT_CLASSIFICATION	0.9999904950884088	WITHOUT_CLASSIFICATION	9.50491159131036E-6	IMPLEMENTATION
// NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner // with outer loops encountered before inner loops, and inner loops finished before outer ones. // // So, we can keep track of loops in a loop stack which  keeps track of loops as they are encountered. // This lets us implement next/redo/break/retry easily for the non-closure cases	WITHOUT_CLASSIFICATION	0.9998458302932786	WITHOUT_CLASSIFICATION	1.5416970672149687E-4	IMPLEMENTATION
// Map keep track of the next available variable index for a particular prefix	WITHOUT_CLASSIFICATION	0.9999769584852636	WITHOUT_CLASSIFICATION	2.3041514736476694E-5	IMPLEMENTATION
// Control flow graph for this scope	WITHOUT_CLASSIFICATION	0.9999587987418692	WITHOUT_CLASSIFICATION	4.1201258130874166E-5	IMPLEMENTATION
//        _lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;	WITHOUT_CLASSIFICATION	0.999975667208655	WITHOUT_CLASSIFICATION	2.4332791344943025E-5	IMPLEMENTATION
// List of modules, classes, and methods defined in this scope!	WITHOUT_CLASSIFICATION	0.9999859709580848	WITHOUT_CLASSIFICATION	1.4029041915196893E-5	IMPLEMENTATION
// Returns the containing parent scope!	WITHOUT_CLASSIFICATION	0.9999692039071728	WITHOUT_CLASSIFICATION	3.079609282713372E-5	IMPLEMENTATION
// Insert nesting level to ensure variable names don't conflict across nested scopes! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //        return new Variable(prefix + _lexicalNestingLevel + "_" + idx);	WITHOUT_CLASSIFICATION	0.999991654916436	WITHOUT_CLASSIFICATION	8.345083563969074E-6	IMPLEMENTATION
// get "self"	WITHOUT_CLASSIFICATION	0.9999410764857227	WITHOUT_CLASSIFICATION	5.8923514277262016E-5	IMPLEMENTATION
// variable is never read, variable is never live	WITHOUT_CLASSIFICATION	0.9998927074404119	WITHOUT_CLASSIFICATION	1.0729255958803687E-4	IMPLEMENTATION
// inline script	WITHOUT_CLASSIFICATION	0.9999169015753773	WITHOUT_CLASSIFICATION	8.309842462269816E-5	IMPLEMENTATION
// inline script	WITHOUT_CLASSIFICATION	0.9999169015753773	WITHOUT_CLASSIFICATION	8.309842462269816E-5	IMPLEMENTATION
// This method is called to build assignments for a multiple-assignment instruction	WITHOUT_CLASSIFICATION	0.9999424498732036	WITHOUT_CLASSIFICATION	5.755012679650284E-5	IMPLEMENTATION
// Build the class body!	WITHOUT_CLASSIFICATION	0.999972619292182	WITHOUT_CLASSIFICATION	2.7380707818065446E-5	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999453777795182	WITHOUT_CLASSIFICATION	5.4622220481869524E-5	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999453777795182	WITHOUT_CLASSIFICATION	5.4622220481869524E-5	IMPLEMENTATION
// SSS FIXME: Can this ever be null?	WITHOUT_CLASSIFICATION	0.9997891213170957	WITHOUT_CLASSIFICATION	2.1087868290435533E-4	IMPLEMENTATION
// Run the pass on the passed in scope!	WITHOUT_CLASSIFICATION	0.9999587579116972	WITHOUT_CLASSIFICATION	4.124208830284451E-5	IMPLEMENTATION
// done // done // done // done	WITHOUT_CLASSIFICATION	0.9999220403071438	WITHOUT_CLASSIFICATION	7.795969285610463E-5	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999923700946439	WITHOUT_CLASSIFICATION	7.629905356062446E-6	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999923700946439	WITHOUT_CLASSIFICATION	7.629905356062446E-6	IMPLEMENTATION
// This method is called to build arguments for a block!	WITHOUT_CLASSIFICATION	0.9999664830287108	WITHOUT_CLASSIFICATION	3.3516971289143924E-5	IMPLEMENTATION
// build first node (and ignore its result) and then second node	WITHOUT_CLASSIFICATION	0.9999912235972812	WITHOUT_CLASSIFICATION	8.776402718753756E-6	IMPLEMENTATION
// build first node only and return false	WITHOUT_CLASSIFICATION	0.9999827571735583	WITHOUT_CLASSIFICATION	1.7242826441664952E-5	IMPLEMENTATION
// Value of the last expression in the block 	WITHOUT_CLASSIFICATION	0.9999771660242225	WITHOUT_CLASSIFICATION	2.2833975777572465E-5	IMPLEMENTATION
// If this is not a closure, the break is equivalent to jumping to the loop end label	WITHOUT_CLASSIFICATION	0.9999855866196554	WITHOUT_CLASSIFICATION	1.4413380344653532E-5	IMPLEMENTATION
// get the incoming case value	WITHOUT_CLASSIFICATION	0.9999868952667166	WITHOUT_CLASSIFICATION	1.3104733283443023E-5	IMPLEMENTATION
// the CASE instruction	WITHOUT_CLASSIFICATION	0.999952552462751	WITHOUT_CLASSIFICATION	4.744753724890938E-5	IMPLEMENTATION
// lists to aggregate variables and bodies for whens	WITHOUT_CLASSIFICATION	0.9999605478388162	WITHOUT_CLASSIFICATION	3.945216118392698E-5	IMPLEMENTATION
// build each "when"	WITHOUT_CLASSIFICATION	0.9999272103349569	WITHOUT_CLASSIFICATION	7.278966504317199E-5	IMPLEMENTATION
// multiple conditions for when	WITHOUT_CLASSIFICATION	0.9998803611296324	WITHOUT_CLASSIFICATION	1.196388703676655E-4	IMPLEMENTATION
// build "else" if it exists	WITHOUT_CLASSIFICATION	0.9999447808452459	WITHOUT_CLASSIFICATION	5.5219154754116864E-5	IMPLEMENTATION
// now emit bodies	WITHOUT_CLASSIFICATION	0.9999169066519622	WITHOUT_CLASSIFICATION	8.309334803780291E-5	IMPLEMENTATION
// close it out	WITHOUT_CLASSIFICATION	0.999947340708837	WITHOUT_CLASSIFICATION	5.2659291163061216E-5	IMPLEMENTATION
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999942510700612	WITHOUT_CLASSIFICATION	5.748929938711118E-6	IMPLEMENTATION
// Do we have a dynamic container?	WITHOUT_CLASSIFICATION	0.9994802512173281	WITHOUT_CLASSIFICATION	5.197487826719397E-4	IMPLEMENTATION
// Return a meta object corresponding to the class	WITHOUT_CLASSIFICATION	0.9999891730893881	WITHOUT_CLASSIFICATION	1.082691061189323E-5	IMPLEMENTATION
// 1. Load the module first (lhs of node) // 2. Then load the constant from the module	WITHOUT_CLASSIFICATION	0.9999852699026299	WITHOUT_CLASSIFICATION	1.473009736996589E-5	IMPLEMENTATION
// Build IR for args	WITHOUT_CLASSIFICATION	0.9999108329337347	WITHOUT_CLASSIFICATION	8.916706626533775E-5	IMPLEMENTATION
// Build IR for body	WITHOUT_CLASSIFICATION	0.99991020064068	WITHOUT_CLASSIFICATION	8.979935931999077E-5	IMPLEMENTATION
// if root of method is rescue, build as a light rescue	WITHOUT_CLASSIFICATION	0.9999414614154885	WITHOUT_CLASSIFICATION	5.853858451151952E-5	IMPLEMENTATION
// Instance method	WITHOUT_CLASSIFICATION	0.99994117865951	WITHOUT_CLASSIFICATION	5.882134048992813E-5	IMPLEMENTATION
// Class method	WITHOUT_CLASSIFICATION	0.9999446901144787	WITHOUT_CLASSIFICATION	5.5309885521172206E-5	IMPLEMENTATION
// Other args begin at index 1	WITHOUT_CLASSIFICATION	0.9999218900931669	WITHOUT_CLASSIFICATION	7.810990683310966E-5	IMPLEMENTATION
// Both for fixed arity and variable arity methods	WITHOUT_CLASSIFICATION	0.9999509740850041	WITHOUT_CLASSIFICATION	4.902591499591125E-5	IMPLEMENTATION
// Now for the rest	WITHOUT_CLASSIFICATION	0.9999487778077844	WITHOUT_CLASSIFICATION	5.122219221566821E-5	IMPLEMENTATION
// Jump to 'l' if this arg is not null.  If null, fall through and build the default value!	WITHOUT_CLASSIFICATION	0.9999974864521168	WITHOUT_CLASSIFICATION	2.513547883090006E-6	IMPLEMENTATION
// This is not an expression that computes anything	WITHOUT_CLASSIFICATION	0.9999794750768818	WITHOUT_CLASSIFICATION	2.0524923118198925E-5	IMPLEMENTATION
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999908898910104	WITHOUT_CLASSIFICATION	9.110108989607347E-6	IMPLEMENTATION
// Build args	WITHOUT_CLASSIFICATION	0.999908163100711	WITHOUT_CLASSIFICATION	9.183689928907111E-5	IMPLEMENTATION
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999887610421615	WITHOUT_CLASSIFICATION	1.123895783855357E-5	IMPLEMENTATION
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999931570263932	WITHOUT_CLASSIFICATION	6.8429736066982505E-6	IMPLEMENTATION
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999942510700612	WITHOUT_CLASSIFICATION	5.748929938711118E-6	IMPLEMENTATION
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999908898910104	WITHOUT_CLASSIFICATION	9.110108989607347E-6	IMPLEMENTATION
// Build args	WITHOUT_CLASSIFICATION	0.999908163100711	WITHOUT_CLASSIFICATION	9.183689928907111E-5	IMPLEMENTATION
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999931570263932	WITHOUT_CLASSIFICATION	6.8429736066982505E-6	IMPLEMENTATION
// Get the container for this new module	WITHOUT_CLASSIFICATION	0.9999902036100604	WITHOUT_CLASSIFICATION	9.79638993961733E-6	IMPLEMENTATION
// Build the new module	WITHOUT_CLASSIFICATION	0.99995703488253	WITHOUT_CLASSIFICATION	4.296511747000531E-5	IMPLEMENTATION
// Build the module body	WITHOUT_CLASSIFICATION	0.9999524170945908	WITHOUT_CLASSIFICATION	4.758290540908307E-5	IMPLEMENTATION
// First, build an assignment for a splat, if any, with the rest of the args!	WITHOUT_CLASSIFICATION	0.9999508663789622	WITHOUT_CLASSIFICATION	4.913362103773461E-5	IMPLEMENTATION
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999784970026592	WITHOUT_CLASSIFICATION	2.1502997340817468E-5	IMPLEMENTATION
// If a closure, the next is simply a return from the closure! // If a regular loop, the next is simply a jump to the end of the iteration	WITHOUT_CLASSIFICATION	0.9999943442774317	WITHOUT_CLASSIFICATION	5.655722568338117E-6	IMPLEMENTATION
// get attr	WITHOUT_CLASSIFICATION	0.9999418921231957	WITHOUT_CLASSIFICATION	5.8107876804288264E-5	IMPLEMENTATION
// call operator	WITHOUT_CLASSIFICATION	0.999915802536966	WITHOUT_CLASSIFICATION	8.419746303407817E-5	IMPLEMENTATION
// set attr	WITHOUT_CLASSIFICATION	0.9999410984955099	WITHOUT_CLASSIFICATION	5.890150448994866E-5	IMPLEMENTATION
// Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, false, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9999763428656328	WITHOUT_CLASSIFICATION	2.3657134367200337E-5	IMPLEMENTATION
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999576643018318	WITHOUT_CLASSIFICATION	4.233569816837338E-5	IMPLEMENTATION
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999576643018318	WITHOUT_CLASSIFICATION	4.233569816837338E-5	IMPLEMENTATION
// if v1 is defined and true, we are done! 	WITHOUT_CLASSIFICATION	0.9999577379533034	WITHOUT_CLASSIFICATION	4.22620466965268E-5	IMPLEMENTATION
// build first node only and return true	WITHOUT_CLASSIFICATION	0.9999805537031943	WITHOUT_CLASSIFICATION	1.944629680574887E-5	IMPLEMENTATION
// build first node as non-expr and build second node	WITHOUT_CLASSIFICATION	0.9999727216150117	WITHOUT_CLASSIFICATION	2.727838498819473E-5	IMPLEMENTATION
// Top-level script!	WITHOUT_CLASSIFICATION	0.9999109943506682	WITHOUT_CLASSIFICATION	8.900564933173507E-5	IMPLEMENTATION
// we won't enter the loop -- just build the condition node	WITHOUT_CLASSIFICATION	0.9999849842023125	WITHOUT_CLASSIFICATION	1.501579768739931E-5	IMPLEMENTATION
/* ----------- Private Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999879659023603	WITHOUT_CLASSIFICATION	1.203409763976748E-5	IMPLEMENTATION
// What handles warnings	WITHOUT_CLASSIFICATION	0.9998617553838398	WITHOUT_CLASSIFICATION	1.3824461616030565E-4	IMPLEMENTATION
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999987679847937	WITHOUT_CLASSIFICATION	1.2320152063873345E-6	IMPLEMENTATION
// For closures, a redo is a jump to the beginning of the closure // For non-closures, a redo is a jump to the beginning of the loop	WITHOUT_CLASSIFICATION	0.9999822436153216	WITHOUT_CLASSIFICATION	1.775638467841146E-5	IMPLEMENTATION
// The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999882598378936	WITHOUT_CLASSIFICATION	1.1740162106410915E-5	IMPLEMENTATION
// Dummy top-level method for the class	WITHOUT_CLASSIFICATION	0.9999806808386409	WITHOUT_CLASSIFICATION	1.931916135902794E-5	IMPLEMENTATION
// Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999904592908416	WITHOUT_CLASSIFICATION	9.540709158404514E-6	IMPLEMENTATION
// ------ Define the operations below ----	WITHOUT_CLASSIFICATION	0.9999797017664159	WITHOUT_CLASSIFICATION	2.0298233584171944E-5	IMPLEMENTATION
// value copy and type conversion operations	WITHOUT_CLASSIFICATION	0.9999911093678684	WITHOUT_CLASSIFICATION	8.890632131620462E-6	IMPLEMENTATION
// alu operations	WITHOUT_CLASSIFICATION	0.9999234238707817	WITHOUT_CLASSIFICATION	7.657612921825996E-5	IMPLEMENTATION
// method handle, arg receive, return value, and  call instructions	WITHOUT_CLASSIFICATION	0.9999417331027841	WITHOUT_CLASSIFICATION	5.826689721586649E-5	IMPLEMENTATION
// closure instructions	WITHOUT_CLASSIFICATION	0.9999496215786439	WITHOUT_CLASSIFICATION	5.037842135605152E-5	IMPLEMENTATION
// eval instructions	WITHOUT_CLASSIFICATION	0.9999204966668039	WITHOUT_CLASSIFICATION	7.950333319600781E-5	IMPLEMENTATION
// def instructions	WITHOUT_CLASSIFICATION	0.9999281678065378	WITHOUT_CLASSIFICATION	7.183219346210967E-5	IMPLEMENTATION
// exception instructions	WITHOUT_CLASSIFICATION	0.9999275538557266	WITHOUT_CLASSIFICATION	7.244614427335344E-5	IMPLEMENTATION
// Loads	WITHOUT_CLASSIFICATION	0.996573654071109	WITHOUT_CLASSIFICATION	0.0034263459288911423	IMPLEMENTATION
// Stores	WITHOUT_CLASSIFICATION	0.9966282279967053	WITHOUT_CLASSIFICATION	0.003371772003294719	IMPLEMENTATION
// jump and branch operations	WITHOUT_CLASSIFICATION	0.9999390394095361	WITHOUT_CLASSIFICATION	6.096059046379693E-5	IMPLEMENTATION
// others	WITHOUT_CLASSIFICATION	0.9968294299391097	WITHOUT_CLASSIFICATION	0.003170570060890277	IMPLEMENTATION
// a case/when branch	WITHOUT_CLASSIFICATION	0.9999197875960569	WITHOUT_CLASSIFICATION	8.021240394299236E-5	IMPLEMENTATION
// optimization guards	WITHOUT_CLASSIFICATION	0.9998980291048409	WITHOUT_CLASSIFICATION	1.0197089515904933E-4	IMPLEMENTATION
// By default, call instructions cannot be deleted even if their results aren't used by anyone // unless we know more about what the call is, what it does, etc. // Similarly for evals, stores, returns.	WITHOUT_CLASSIFICATION	0.9999953118677313	WITHOUT_CLASSIFICATION	4.688132268696543E-6	IMPLEMENTATION
// Returns the containing parent scope -- can be a dynamic value (hence Operand)!	WITHOUT_CLASSIFICATION	0.9999832614489436	WITHOUT_CLASSIFICATION	1.673855105647765E-5	IMPLEMENTATION
// scripts	WITHOUT_CLASSIFICATION	0.9970107373513638	WITHOUT_CLASSIFICATION	0.002989262648636209	IMPLEMENTATION
// scripts and modules	WITHOUT_CLASSIFICATION	0.9999369376386892	WITHOUT_CLASSIFICATION	6.306236131091935E-5	IMPLEMENTATION
// scripts, classes, and modules	WITHOUT_CLASSIFICATION	0.9999603522348093	WITHOUT_CLASSIFICATION	3.96477651906499E-5	IMPLEMENTATION
// methods and closures	WITHOUT_CLASSIFICATION	0.9999374849990378	WITHOUT_CLASSIFICATION	6.251500096213583E-5	IMPLEMENTATION
// create a new variable using the prefix	WITHOUT_CLASSIFICATION	0.9999960787889858	WITHOUT_CLASSIFICATION	3.921211014247675E-6	IMPLEMENTATION
// create a new temporary variable	WITHOUT_CLASSIFICATION	0.9999933798842937	WITHOUT_CLASSIFICATION	6.620115706212502E-6	IMPLEMENTATION
// Get a new label using a generic prefix	WITHOUT_CLASSIFICATION	0.9999691323570433	WITHOUT_CLASSIFICATION	3.0867642956730325E-5	IMPLEMENTATION
// Build the CFG for this scope -- supported only by methods & closures	WITHOUT_CLASSIFICATION	0.9999627849085853	WITHOUT_CLASSIFICATION	3.721509141471696E-5	IMPLEMENTATION
// Get the control flow graph for this scope -- only valid for methods & closures	WITHOUT_CLASSIFICATION	0.9999902879112008	WITHOUT_CLASSIFICATION	9.712088799175147E-6	IMPLEMENTATION
// While processing loops, this returns the loop that we are processing.	WITHOUT_CLASSIFICATION	0.9999817376713772	WITHOUT_CLASSIFICATION	1.8262328622738053E-5	IMPLEMENTATION
// Record the loop we are beginning to process	WITHOUT_CLASSIFICATION	0.999972969406803	WITHOUT_CLASSIFICATION	2.7030593196923874E-5	IMPLEMENTATION
// Indicate that we are done processing the loop	WITHOUT_CLASSIFICATION	0.9999755469266589	WITHOUT_CLASSIFICATION	2.445307334107049E-5	IMPLEMENTATION
// Run the passed in compiler pass on this scope!	WITHOUT_CLASSIFICATION	0.9999634882296499	WITHOUT_CLASSIFICATION	3.6511770350135044E-5	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9999645646162656	WITHOUT_CLASSIFICATION	3.5435383734291476E-5	IMPLEMENTATION
// Readline	WITHOUT_CLASSIFICATION	0.9999002138210933	WITHOUT_CLASSIFICATION	9.978617890668256E-5	IMPLEMENTATION
// If the cfg of the method is around, print the CFG!	WITHOUT_CLASSIFICATION	0.9999831168753923	WITHOUT_CLASSIFICATION	1.6883124607680715E-5	IMPLEMENTATION
// Optimize some core class method calls for constant values	WITHOUT_CLASSIFICATION	0.999976659966411	WITHOUT_CLASSIFICATION	2.3340033588948002E-5	IMPLEMENTATION
// If 'r' is not a constant, it could actually be a compound value! // Look in our value map to see if we have a simplified value for the receiver.	WITHOUT_CLASSIFICATION	0.9999953996598153	WITHOUT_CLASSIFICATION	4.600340184683065E-6	IMPLEMENTATION
// Check if we can optimize this call based on the receiving method and receiver type // Use the simplified receiver!	WITHOUT_CLASSIFICATION	0.9999674229499863	WITHOUT_CLASSIFICATION	3.257705001362655E-5	IMPLEMENTATION
// If we got a simplified value, mark the call dead and insert a copy in its place!	WITHOUT_CLASSIFICATION	0.9999784624899729	WITHOUT_CLASSIFICATION	2.153751002703012E-5	IMPLEMENTATION
// If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!	WITHOUT_CLASSIFICATION	0.9999551035898041	WITHOUT_CLASSIFICATION	4.4896410195917786E-5	IMPLEMENTATION
/* ----------- Public abstract methods ---------- */	WITHOUT_CLASSIFICATION	0.9999833569377817	WITHOUT_CLASSIFICATION	1.664306221829799E-5	IMPLEMENTATION
/* ----------- Public methods with a default implementation ---------- */	WITHOUT_CLASSIFICATION	0.9999386612909195	WITHOUT_CLASSIFICATION	6.133870908060795E-5	IMPLEMENTATION
// Compute meet over all "sources" and compute "destination" basic blocks that should then be processed.  // sources & targets depends on direction of the data flow problem	WITHOUT_CLASSIFICATION	0.9999935399966738	WITHOUT_CLASSIFICATION	6.460003326086813E-6	IMPLEMENTATION
// If the solution has changed, add "dsts" to the work list. // No duplicates please which is why we have bbset.	WITHOUT_CLASSIFICATION	0.9999904723181431	WITHOUT_CLASSIFICATION	9.527681856931317E-6	IMPLEMENTATION
/* --------- Protected fields/methods below --------- */	WITHOUT_CLASSIFICATION	0.999975710011003	WITHOUT_CLASSIFICATION	2.4289988996890026E-5	IMPLEMENTATION
// Dataflow problem with which this node is associated // CFG node for which this node contains info.	WITHOUT_CLASSIFICATION	0.9999844691967111	WITHOUT_CLASSIFICATION	1.5530803288938787E-5	IMPLEMENTATION
/* -------------- Public fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999886287961253	WITHOUT_CLASSIFICATION	1.1371203874707784E-5	IMPLEMENTATION
// ------- Abstract methods without a default implementation -------	WITHOUT_CLASSIFICATION	0.9999309166374748	WITHOUT_CLASSIFICATION	6.90833625251671E-5	IMPLEMENTATION
// ------- Default implementation methods below -------	WITHOUT_CLASSIFICATION	0.9998314916066773	WITHOUT_CLASSIFICATION	1.6850839332276302E-4	IMPLEMENTATION
/* Compute Meet Over All Paths solution for this dataflow problem on the input CFG.     * This implements a standard worklist algorithm. */	WITHOUT_CLASSIFICATION	0.9989662150205546	WITHOUT_CLASSIFICATION	0.0010337849794453818	IMPLEMENTATION
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9999018125250067	WITHOUT_CLASSIFICATION	9.818747499338483E-5	IMPLEMENTATION
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9999018125250067	WITHOUT_CLASSIFICATION	9.818747499338483E-5	IMPLEMENTATION
/* -------------- Packaged/protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.999991106537145	WITHOUT_CLASSIFICATION	8.893462854983974E-6	IMPLEMENTATION
// We want unique ids for dataflow variables	WITHOUT_CLASSIFICATION	0.9999424388495253	WITHOUT_CLASSIFICATION	5.756115047479254E-5	IMPLEMENTATION
/* -------------- Protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999898425633805	WITHOUT_CLASSIFICATION	1.0157436619457457E-5	IMPLEMENTATION
/* -------------- Private fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999907011875374	WITHOUT_CLASSIFICATION	9.29881246259852E-6	IMPLEMENTATION
// Initialize all flow graph nodes 	WITHOUT_CLASSIFICATION	0.9999684095353298	WITHOUT_CLASSIFICATION	3.159046467005222E-5	IMPLEMENTATION
/* Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses */	WITHOUT_CLASSIFICATION	0.9999714985059753	WITHOUT_CLASSIFICATION	2.8501494024686662E-5	IMPLEMENTATION
/* ******************** PUBLIC INTERFACE ******************* */	WITHOUT_CLASSIFICATION	0.9999377503645526	WITHOUT_CLASSIFICATION	6.224963544738467E-5	IMPLEMENTATION
// Unique ID assigned to this variable	WITHOUT_CLASSIFICATION	0.9999346959137958	WITHOUT_CLASSIFICATION	6.53040862042087E-5	IMPLEMENTATION
// start out with a default RubyObject allocator	WITHOUT_CLASSIFICATION	0.9999891879149352	WITHOUT_CLASSIFICATION	1.0812085064845204E-5	IMPLEMENTATION
// switch to an allocator based on a default constructor	WITHOUT_CLASSIFICATION	0.9999707767026402	WITHOUT_CLASSIFICATION	2.9223297359694967E-5	IMPLEMENTATION
/* ----------- Public Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999855029752366	WITHOUT_CLASSIFICATION	1.4497024763509896E-5	IMPLEMENTATION
// class or module	WITHOUT_CLASSIFICATION	0.9999388374586953	WITHOUT_CLASSIFICATION	6.116254130472242E-5	IMPLEMENTATION
// OUT = UNION(IN(succs))	WITHOUT_CLASSIFICATION	0.9999124963275011	WITHOUT_CLASSIFICATION	8.750367249889305E-5	IMPLEMENTATION
// Traverse the instructions in this basic block in reverse order!	WITHOUT_CLASSIFICATION	0.9999666622141191	WITHOUT_CLASSIFICATION	3.333778588083858E-5	IMPLEMENTATION
// v is defined => It is no longer live before 'i'	WITHOUT_CLASSIFICATION	0.9999433164975486	WITHOUT_CLASSIFICATION	5.66835024513182E-5	IMPLEMENTATION
// IN is the same!	WITHOUT_CLASSIFICATION	0.9999296846154684	WITHOUT_CLASSIFICATION	7.031538453169436E-5	IMPLEMENTATION
// IN changed!	WITHOUT_CLASSIFICATION	0.9999339257822661	WITHOUT_CLASSIFICATION	6.607421773390943E-5	IMPLEMENTATION
/* ---------- Protected / package fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999825028611036	WITHOUT_CLASSIFICATION	1.74971388964196E-5	IMPLEMENTATION
// If 'v' is not live at the instruction site, and it has no side effects, mark it dead!	WITHOUT_CLASSIFICATION	0.999971613178067	WITHOUT_CLASSIFICATION	2.838682193299625E-5	IMPLEMENTATION
// Do not mark this instruction's operands live if the instruction itself is dead!	WITHOUT_CLASSIFICATION	0.9999683251540683	WITHOUT_CLASSIFICATION	3.1674845931633893E-5	IMPLEMENTATION
/* ---------- Private fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999814639562925	WITHOUT_CLASSIFICATION	1.8536043707509342E-5	IMPLEMENTATION
// Variables live at entry of this node // Variables live at exit of node // Temporary set of live variables // Size of the "_in" and "_out" bit sets 	WITHOUT_CLASSIFICATION	0.9999723990700383	WITHOUT_CLASSIFICATION	2.7600929961666654E-5	IMPLEMENTATION
// Used during optimization passes to propagate type and other information	WITHOUT_CLASSIFICATION	0.9999689929452149	WITHOUT_CLASSIFICATION	3.100705478510324E-5	IMPLEMENTATION
// Does this instruction have side effects as a result of its operation // This information is used in optimization phases to impact dead code elimination // and other optimization passes	WITHOUT_CLASSIFICATION	0.9999923411474106	WITHOUT_CLASSIFICATION	7.65885258931355E-6	IMPLEMENTATION
/* --------- "Abstract"/"please-override" methods --------- */	WITHOUT_CLASSIFICATION	0.9999754701148407	WITHOUT_CLASSIFICATION	2.4529885159304433E-5	IMPLEMENTATION
/* Array of all operands for this instruction */	WITHOUT_CLASSIFICATION	0.9999437065147073	WITHOUT_CLASSIFICATION	5.629348529259527E-5	IMPLEMENTATION
/* List of all variables used by all operands of this instruction */	WITHOUT_CLASSIFICATION	0.9999717834657793	WITHOUT_CLASSIFICATION	2.8216534220698385E-5	IMPLEMENTATION
/*      * This method takes as input a map of operands to their values, and outputs     *     * If the value map provides a value for any of the instruction's operands     * this method is expected to replace the original operands with the simplified values.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify     */	WITHOUT_CLASSIFICATION	0.9999943309123378	WITHOUT_CLASSIFICATION	5.66908766217174E-6	IMPLEMENTATION
// By default, no simplifications!	WITHOUT_CLASSIFICATION	0.9999715039777196	WITHOUT_CLASSIFICATION	2.8496022280357307E-5	IMPLEMENTATION
// Can this call lead to ruby code getting modified?   // If we don't know what method we are calling, we assume it can (pessimistic, but safe!) // If we do know the target method, we ask the method itself whether it modifies ruby code	WITHOUT_CLASSIFICATION	0.9999161256391752	WITHOUT_CLASSIFICATION	8.387436082488836E-5	IMPLEMENTATION
// By default, return instructions cannot be deleted	WITHOUT_CLASSIFICATION	0.9999909215189241	WITHOUT_CLASSIFICATION	9.078481075934067E-6	IMPLEMENTATION
// If true, returns the rest of the array starting at the index	WITHOUT_CLASSIFICATION	0.9999877419064981	WITHOUT_CLASSIFICATION	1.2258093501965693E-5	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999848732966307	WITHOUT_CLASSIFICATION	1.5126703369299438E-5	IMPLEMENTATION
// Map of label & basic blocks with that label	WITHOUT_CLASSIFICATION	0.9999337663867405	WITHOUT_CLASSIFICATION	6.623361325954921E-5	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999848732966307	WITHOUT_CLASSIFICATION	1.5126703369299438E-5	IMPLEMENTATION
// You can only value-replace atomic values	WITHOUT_CLASSIFICATION	0.9999671036490603	WITHOUT_CLASSIFICATION	3.2896350939687634E-5	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999421291458396	WITHOUT_CLASSIFICATION	5.7870854160433925E-5	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999421291458396	WITHOUT_CLASSIFICATION	5.7870854160433925E-5	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999421291458396	WITHOUT_CLASSIFICATION	5.7870854160433925E-5	IMPLEMENTATION
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.999986430706654	WITHOUT_CLASSIFICATION	1.3569293345812983E-5	IMPLEMENTATION
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.999986430706654	WITHOUT_CLASSIFICATION	1.3569293345812983E-5	IMPLEMENTATION
// The operand that this attribute targets //    DEFERRED //    AttributeValue _val;       // Attribute value	WITHOUT_CLASSIFICATION	0.9999908957558249	WITHOUT_CLASSIFICATION	9.104244175126536E-6	IMPLEMENTATION
// Arrays, Ranges, etc. are compound values // Variables, fixnums, floats, etc. are "atomic" values	WITHOUT_CLASSIFICATION	0.9999743695304466	WITHOUT_CLASSIFICATION	2.5630469553387017E-5	IMPLEMENTATION
// Get the target class of this operand, if we know it!	WITHOUT_CLASSIFICATION	0.9999922807067766	WITHOUT_CLASSIFICATION	7.719293223420068E-6	IMPLEMENTATION
// The following constants capture pre-known static call sites -- used to implement ruby internals	WITHOUT_CLASSIFICATION	0.9990623976209642	WITHOUT_CLASSIFICATION	9.376023790356827E-4	IMPLEMENTATION
/* Nothing to do by default */	WITHOUT_CLASSIFICATION	0.999986712962708	WITHOUT_CLASSIFICATION	1.3287037291877077E-5	IMPLEMENTATION
// Map of label & basic blocks which are waiting for a bb with that label	WITHOUT_CLASSIFICATION	0.9999502580022778	WITHOUT_CLASSIFICATION	4.9741997722104726E-5	IMPLEMENTATION
// Init before building basic blocks below!	WITHOUT_CLASSIFICATION	0.9999330150274588	WITHOUT_CLASSIFICATION	6.698497254122021E-5	IMPLEMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999030042229905	WITHOUT_CLASSIFICATION	9.699577700951341E-5	IMPLEMENTATION
// Scope (method/closure) to which this cfg belongs // Entry BB -- dummy // Exit BB -- dummy // The actual graph // Next available basic block id	WITHOUT_CLASSIFICATION	0.9999556423042549	WITHOUT_CLASSIFICATION	4.43576957450235E-5	IMPLEMENTATION
// Jump instruction bbs dont add an edge to the succeeding bb by default	WITHOUT_CLASSIFICATION	0.9999887290352549	WITHOUT_CLASSIFICATION	1.1270964745069717E-5	IMPLEMENTATION
// Add forward ref. edges	WITHOUT_CLASSIFICATION	0.9999580890302964	WITHOUT_CLASSIFICATION	4.191096970375269E-5	IMPLEMENTATION
// currBB cannot be null!	WITHOUT_CLASSIFICATION	0.9999555452421831	WITHOUT_CLASSIFICATION	4.4454757816898025E-5	IMPLEMENTATION
// Add a forward reference from tgt -> currBB	WITHOUT_CLASSIFICATION	0.9999786970079885	WITHOUT_CLASSIFICATION	2.1302992011523057E-5	IMPLEMENTATION
// root-level logic	WITHOUT_CLASSIFICATION	0.9999320974181896	WITHOUT_CLASSIFICATION	6.790258181045883E-5	IMPLEMENTATION
// root-level methods	WITHOUT_CLASSIFICATION	0.9999536912652511	WITHOUT_CLASSIFICATION	4.630873474894222E-5	IMPLEMENTATION
// root-level classes	WITHOUT_CLASSIFICATION	0.9999622618609679	WITHOUT_CLASSIFICATION	3.7738139032107635E-5	IMPLEMENTATION
//        case 4: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); //            break; //        case 5: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); //            break;	WITHOUT_CLASSIFICATION	0.9999903208493993	WITHOUT_CLASSIFICATION	9.679150600613628E-6	IMPLEMENTATION
// load receiver	WITHOUT_CLASSIFICATION	0.9999251220273854	WITHOUT_CLASSIFICATION	7.487797261466857E-5	IMPLEMENTATION
// load receiver	WITHOUT_CLASSIFICATION	0.9999251220273854	WITHOUT_CLASSIFICATION	7.487797261466857E-5	IMPLEMENTATION
// receiver	WITHOUT_CLASSIFICATION	0.9999040249908345	WITHOUT_CLASSIFICATION	9.59750091655575E-5	IMPLEMENTATION
// load arguments	WITHOUT_CLASSIFICATION	0.9999531620173479	WITHOUT_CLASSIFICATION	4.68379826522227E-5	IMPLEMENTATION
// load arguments	WITHOUT_CLASSIFICATION	0.9999531620173479	WITHOUT_CLASSIFICATION	4.68379826522227E-5	IMPLEMENTATION
//        case 4: //        case 5:	WITHOUT_CLASSIFICATION	0.9999726859398059	WITHOUT_CLASSIFICATION	2.731406019414474E-5	IMPLEMENTATION
// Object[] args	WITHOUT_CLASSIFICATION	0.9999166543003872	WITHOUT_CLASSIFICATION	8.334569961282095E-5	IMPLEMENTATION
// load handle	WITHOUT_CLASSIFICATION	0.9998846564706607	WITHOUT_CLASSIFICATION	1.1534352933935337E-4	IMPLEMENTATION
// args array	WITHOUT_CLASSIFICATION	0.9999049336054714	WITHOUT_CLASSIFICATION	9.506639452865713E-5	IMPLEMENTATION
// i'th argument	WITHOUT_CLASSIFICATION	0.9999237960331457	WITHOUT_CLASSIFICATION	7.620396685429671E-5	IMPLEMENTATION
// invoke specific arity version	WITHOUT_CLASSIFICATION	0.9999575740638442	WITHOUT_CLASSIFICATION	4.2425936155774524E-5	IMPLEMENTATION
// Object arg0	WITHOUT_CLASSIFICATION	0.9999165193792301	WITHOUT_CLASSIFICATION	8.348062076984886E-5	IMPLEMENTATION
// useful for code completion inside the IRB	WITHOUT_CLASSIFICATION	0.9999411119920131	WITHOUT_CLASSIFICATION	5.8888007986942375E-5	IMPLEMENTATION
// No editing before startPos	WITHOUT_CLASSIFICATION	0.999952441442487	WITHOUT_CLASSIFICATION	4.7558557512983846E-5	IMPLEMENTATION
// no silly ticks!	WITHOUT_CLASSIFICATION	0.9999241490346591	WITHOUT_CLASSIFICATION	7.585096534097571E-5	IMPLEMENTATION
// no candidates? Fail.	WITHOUT_CLASSIFICATION	0.9999361219899684	WITHOUT_CLASSIFICATION	6.387801003159958E-5	IMPLEMENTATION
// at end	WITHOUT_CLASSIFICATION	0.9961401366249227	WITHOUT_CLASSIFICATION	0.003859863375077283	IMPLEMENTATION
// undo check	WITHOUT_CLASSIFICATION	0.9999076927269396	WITHOUT_CLASSIFICATION	9.23072730604037E-5	IMPLEMENTATION
// Explicit reference to these vars as symbols...	WITHOUT_CLASSIFICATION	0.9999628268439168	WITHOUT_CLASSIFICATION	3.7173156083312546E-5	IMPLEMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999030042229905	WITHOUT_CLASSIFICATION	9.699577700951341E-5	IMPLEMENTATION
//\t\n\"\\'`@$><=;|&{(	WITHOUT_CLASSIFICATION	0.9999116762068144	WITHOUT_CLASSIFICATION	8.832379318558368E-5	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999621092670736	WITHOUT_CLASSIFICATION	3.78907329263273E-5	IMPLEMENTATION
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999574728353037	WITHOUT_CLASSIFICATION	4.252716469632961E-5	IMPLEMENTATION
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999574728353037	WITHOUT_CLASSIFICATION	4.252716469632961E-5	IMPLEMENTATION
// Binding provided for scope, use it	WITHOUT_CLASSIFICATION	0.9999606737292384	WITHOUT_CLASSIFICATION	3.9326270761683266E-5	IMPLEMENTATION
// this is ensured by the callers	WITHOUT_CLASSIFICATION	0.9999853027709181	WITHOUT_CLASSIFICATION	1.4697229081804394E-5	IMPLEMENTATION
// no binding, just eval in "current" frame (caller's frame)	WITHOUT_CLASSIFICATION	0.9999549108666729	WITHOUT_CLASSIFICATION	4.5089133327062764E-5	IMPLEMENTATION
// restore position	WITHOUT_CLASSIFICATION	0.9999552316329879	WITHOUT_CLASSIFICATION	4.4768367012162674E-5	IMPLEMENTATION
/* Something like cvar_cbase() from eval.c, factored out for the benefit     * of all the classvar-related node evaluations */	WITHOUT_CLASSIFICATION	0.9999839837881922	WITHOUT_CLASSIFICATION	1.601621180779311E-5	IMPLEMENTATION
// Used by the compiler to simplify arg processing	WITHOUT_CLASSIFICATION	0.9999916242109266	WITHOUT_CLASSIFICATION	8.375789073479578E-6	IMPLEMENTATION
// JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace	WITHOUT_CLASSIFICATION	0.9999351696787601	WITHOUT_CLASSIFICATION	6.483032123987635E-5	IMPLEMENTATION
// MRI does similar thing on MacOS X with 'EditLine wrapper'.	WITHOUT_CLASSIFICATION	0.9999380447212881	WITHOUT_CLASSIFICATION	6.195527871191604E-5	IMPLEMENTATION
// We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)	WITHOUT_CLASSIFICATION	0.9999776812551101	WITHOUT_CLASSIFICATION	2.231874488993861E-5	IMPLEMENTATION
// JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)	WITHOUT_CLASSIFICATION	0.999977064147589	WITHOUT_CLASSIFICATION	2.2935852410992672E-5	IMPLEMENTATION
// not overridden, let's go	WITHOUT_CLASSIFICATION	0.9997122870661673	WITHOUT_CLASSIFICATION	2.8771293383268514E-4	IMPLEMENTATION
/* Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8() */	WITHOUT_CLASSIFICATION	0.9999353088597035	WITHOUT_CLASSIFICATION	6.469114029649001E-5	IMPLEMENTATION
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9995805601351709	WITHOUT_CLASSIFICATION	4.194398648290899E-4	IMPLEMENTATION
// Complete using a Proc object	WITHOUT_CLASSIFICATION	0.9999350528225371	WITHOUT_CLASSIFICATION	6.494717746288972E-5	IMPLEMENTATION
// clear basename so it's anonymous when raising	WITHOUT_CLASSIFICATION	0.9999601329593436	WITHOUT_CLASSIFICATION	3.986704065644047E-5	IMPLEMENTATION
// These are not really used by timeout, but exposed for compatibility	WITHOUT_CLASSIFICATION	0.9999920383841913	WITHOUT_CLASSIFICATION	7.961615808626523E-6	IMPLEMENTATION
// Timeout module methods	WITHOUT_CLASSIFICATION	0.999939580021123	WITHOUT_CLASSIFICATION	6.041997887684565E-5	IMPLEMENTATION
// Toplevel defines	WITHOUT_CLASSIFICATION	0.9999063180901787	WITHOUT_CLASSIFICATION	9.368190982126923E-5	IMPLEMENTATION
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999540462066642	WITHOUT_CLASSIFICATION	4.595379333594329E-5	IMPLEMENTATION
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999493608731785	WITHOUT_CLASSIFICATION	5.0639126821436E-5	IMPLEMENTATION
// if it's the exception we're expecting	WITHOUT_CLASSIFICATION	0.9999140522699961	WITHOUT_CLASSIFICATION	8.594773000394085E-5	IMPLEMENTATION
// and we were given a specific exception	WITHOUT_CLASSIFICATION	0.9999052048752047	WITHOUT_CLASSIFICATION	9.479512479534523E-5	IMPLEMENTATION
// otherwise, rethrow	WITHOUT_CLASSIFICATION	0.9999445209969111	WITHOUT_CLASSIFICATION	5.5479003088973246E-5	IMPLEMENTATION
// // Remove the Executor task now, to avoid cancelled tasks accumulating // until an Executor thread can schedule and remove them //	WITHOUT_CLASSIFICATION	0.9999880653376314	WITHOUT_CLASSIFICATION	1.1934662368648494E-5	IMPLEMENTATION
// // If the task was scheduled, wait for it to finish before polling // for the exception it would have thrown. //	WITHOUT_CLASSIFICATION	0.9999727359779557	WITHOUT_CLASSIFICATION	2.726402204437084E-5	IMPLEMENTATION
// NetProtocolBufferedIO	WITHOUT_CLASSIFICATION	0.9999214003530652	WITHOUT_CLASSIFICATION	7.859964693474556E-5	IMPLEMENTATION
/* When a length is given, read_string acts like get_bytes */	WITHOUT_CLASSIFICATION	0.9999466132734508	WITHOUT_CLASSIFICATION	5.338672654926E-5	IMPLEMENTATION
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.999937834242443	WITHOUT_CLASSIFICATION	6.216575755707786E-5	IMPLEMENTATION
// ARRAY and STRUCT are only used internally	WITHOUT_CLASSIFICATION	0.9999509797458815	WITHOUT_CLASSIFICATION	4.902025411845718E-5	IMPLEMENTATION
// If no release method is defined, then memory leaks will result.	WITHOUT_CLASSIFICATION	0.9999532952329763	WITHOUT_CLASSIFICATION	4.670476702374242E-5	IMPLEMENTATION
/*     * This variant of newStruct is called from StructLayoutBuilder     */	WITHOUT_CLASSIFICATION	0.9999823648554886	WITHOUT_CLASSIFICATION	1.7635144511334963E-5	IMPLEMENTATION
// This also handles unsigned int -> negative signed int conversion	WITHOUT_CLASSIFICATION	0.9999649662726181	WITHOUT_CLASSIFICATION	3.503372738187538E-5	IMPLEMENTATION
// Windows is LLP64	WITHOUT_CLASSIFICATION	0.9999187503417881	WITHOUT_CLASSIFICATION	8.124965821192063E-5	IMPLEMENTATION
// Older JDK on linux map 'c' to 'libc.so' which doesn't work	WITHOUT_CLASSIFICATION	0.9999529093014231	WITHOUT_CLASSIFICATION	4.709069857678326E-5	IMPLEMENTATION
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999504441059366	WITHOUT_CLASSIFICATION	4.955589406331461E-5	IMPLEMENTATION
// $blah	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.999937834242443	WITHOUT_CLASSIFICATION	6.216575755707786E-5	IMPLEMENTATION
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999728100219342	WITHOUT_CLASSIFICATION	2.7189978065856346E-5	IMPLEMENTATION
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999504441059366	WITHOUT_CLASSIFICATION	4.955589406331461E-5	IMPLEMENTATION
// // Keep a reference to the temporary memory in the cache so it does // not get freed by the GC until the struct is freed //	WITHOUT_CLASSIFICATION	0.9999893481881125	WITHOUT_CLASSIFICATION	1.0651811887534389E-5	IMPLEMENTATION
// Add Pointer::NULL as a constant	WITHOUT_CLASSIFICATION	0.9999676344144296	WITHOUT_CLASSIFICATION	3.2365585570334286E-5	IMPLEMENTATION
// Create the ordered list of field names from the map	WITHOUT_CLASSIFICATION	0.9999949095765632	WITHOUT_CLASSIFICATION	5.0904234367188475E-6	IMPLEMENTATION
// Assemble a [ :name, offset ] array	WITHOUT_CLASSIFICATION	0.9999362087086819	WITHOUT_CLASSIFICATION	6.379129131806428E-5	IMPLEMENTATION
//                case FLOAT:	WITHOUT_CLASSIFICATION	0.9999703770012519	WITHOUT_CLASSIFICATION	2.9622998747993263E-5	IMPLEMENTATION
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999735143465807	WITHOUT_CLASSIFICATION	2.648565341932475E-5	IMPLEMENTATION
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999735143465807	WITHOUT_CLASSIFICATION	2.648565341932475E-5	IMPLEMENTATION
// No auto cleanup needed	WITHOUT_CLASSIFICATION	0.9991062032265309	WITHOUT_CLASSIFICATION	8.937967734690899E-4	IMPLEMENTATION
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9998696993093559	WITHOUT_CLASSIFICATION	1.3030069064410283E-4	IMPLEMENTATION
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999921213657933	WITHOUT_CLASSIFICATION	7.878634206729227E-6	IMPLEMENTATION
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999921213657933	WITHOUT_CLASSIFICATION	7.878634206729227E-6	IMPLEMENTATION
/*         * If there is exactly _one_ callback argument to the function,         * then a block can be given and automatically subsituted for the callback         * parameter.         */	WITHOUT_CLASSIFICATION	0.9999997514478611	WITHOUT_CLASSIFICATION	2.485521389547684E-7	IMPLEMENTATION
/*------------------------------------------------------------------------*/	WITHOUT_CLASSIFICATION	0.9999530512577659	WITHOUT_CLASSIFICATION	4.694874223406209E-5	IMPLEMENTATION
//AF_INET	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
//AF_INET	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
// RubyUNIXServer	WITHOUT_CLASSIFICATION	0.9998964553660203	WITHOUT_CLASSIFICATION	1.0354463397963335E-4	IMPLEMENTATION
// line 321	WITHOUT_CLASSIFICATION	0.9999250208232384	WITHOUT_CLASSIFICATION	7.497917676152598E-5	IMPLEMENTATION
// // Set up for potentially fast-int operations //	WITHOUT_CLASSIFICATION	0.9999782940307165	WITHOUT_CLASSIFICATION	2.1705969283453698E-5	IMPLEMENTATION
// // Hook up the MemoryPointer class if its not already there //	WITHOUT_CLASSIFICATION	0.9999894363307263	WITHOUT_CLASSIFICATION	1.0563669273624294E-5	IMPLEMENTATION
// This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and // (2) Socket.getChannel() seems to return null in some cases	WITHOUT_CLASSIFICATION	0.9999951214697206	WITHOUT_CLASSIFICATION	4.878530279459415E-6	IMPLEMENTATION
// no UNIXSockets on Windows	WITHOUT_CLASSIFICATION	0.9999430206413245	WITHOUT_CLASSIFICATION	5.697935867553803E-5	IMPLEMENTATION
// Sockaddr_un has different structure on different platforms. // See JRUBY-2213 for more details.	WITHOUT_CLASSIFICATION	0.9999558780538802	WITHOUT_CLASSIFICATION	4.412194611982818E-5	IMPLEMENTATION
// There is something valid in the sun_path component	WITHOUT_CLASSIFICATION	0.9999916167109095	WITHOUT_CLASSIFICATION	8.383289090417863E-6	IMPLEMENTATION
// RubyIPSocket	WITHOUT_CLASSIFICATION	0.9998958405190128	WITHOUT_CLASSIFICATION	1.0415948098719462E-4	IMPLEMENTATION
// host is nil or the empty string, bind to INADDR_ANY	WITHOUT_CLASSIFICATION	0.9999772955181323	WITHOUT_CLASSIFICATION	2.270448186763642E-5	IMPLEMENTATION
// host and port given	WITHOUT_CLASSIFICATION	0.9999208067044799	WITHOUT_CLASSIFICATION	7.919329552011676E-5	IMPLEMENTATION
// RubyUDPSocket	WITHOUT_CLASSIFICATION	0.9998958405190128	WITHOUT_CLASSIFICATION	1.0415948098719462E-4	IMPLEMENTATION
// By default we always reverse lookup unless do_not_reverse_lookup set.	WITHOUT_CLASSIFICATION	0.9999768093168939	WITHOUT_CLASSIFICATION	2.3190683106061977E-5	IMPLEMENTATION
// make sure descriptor is registered	WITHOUT_CLASSIFICATION	0.9999859526191478	WITHOUT_CLASSIFICATION	1.404738085218845E-5	IMPLEMENTATION
// continue with normal initialization	WITHOUT_CLASSIFICATION	0.9999739134502899	WITHOUT_CLASSIFICATION	2.6086549710219348E-5	IMPLEMENTATION
// recv returns nil on EOF	WITHOUT_CLASSIFICATION	0.9999436000188491	WITHOUT_CLASSIFICATION	5.6399981150920383E-5	IMPLEMENTATION
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9999242454695402	WITHOUT_CLASSIFICATION	7.575453045979521E-5	IMPLEMENTATION
// RubyBasicSocket	WITHOUT_CLASSIFICATION	0.9998958886649448	WITHOUT_CLASSIFICATION	1.0411133505512669E-4	IMPLEMENTATION
// we don't have to define any that we don't support; see socket.c	WITHOUT_CLASSIFICATION	0.9999822072102876	WITHOUT_CLASSIFICATION	1.779278971247036E-5	IMPLEMENTATION
// mandatory constants we haven't implemented	WITHOUT_CLASSIFICATION	0.9453261887215411	WITHOUT_CLASSIFICATION	0.05467381127845902	IMPLEMENTATION
// constants webrick crashes without	WITHOUT_CLASSIFICATION	0.9999527932608641	WITHOUT_CLASSIFICATION	4.7206739136036707E-5	IMPLEMENTATION
// More constants needed by specs	WITHOUT_CLASSIFICATION	0.9999477457855831	WITHOUT_CLASSIFICATION	5.22542144168974E-5	IMPLEMENTATION
// normal file descriptor..try to work with it	WITHOUT_CLASSIFICATION	0.9999643802351156	WITHOUT_CLASSIFICATION	3.561976488447825E-5	IMPLEMENTATION
// AF_INET	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
// 255.255.255.255	WITHOUT_CLASSIFICATION	0.9998955649324311	WITHOUT_CLASSIFICATION	1.0443506756891177E-4	IMPLEMENTATION
// 0.0.0.0	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
//def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)	WITHOUT_CLASSIFICATION	0.9999264446632458	WITHOUT_CLASSIFICATION	7.355533675423556E-5	IMPLEMENTATION
// line 323	WITHOUT_CLASSIFICATION	0.9999250208232384	WITHOUT_CLASSIFICATION	7.497917676152598E-5	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999477314680227	WITHOUT_CLASSIFICATION	5.226853197739755E-5	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999477314680227	WITHOUT_CLASSIFICATION	5.226853197739755E-5	IMPLEMENTATION
// ok, it's a socket...set values accordingly // just using AF_INET since we can't tell from SocketChannel...	WITHOUT_CLASSIFICATION	0.9999703521161097	WITHOUT_CLASSIFICATION	2.9647883890330688E-5	IMPLEMENTATION
// datagram, set accordingly // again, AF_INET	WITHOUT_CLASSIFICATION	0.9999676880626972	WITHOUT_CLASSIFICATION	3.2311937302706684E-5	IMPLEMENTATION
//IRubyObject family = args[2];	WITHOUT_CLASSIFICATION	0.9999267054191315	WITHOUT_CLASSIFICATION	7.329458086855525E-5	IMPLEMENTATION
// When Socket::AI_PASSIVE and host is nil, return 'any' address. 	WITHOUT_CLASSIFICATION	0.9999438824284573	WITHOUT_CLASSIFICATION	5.611757154258747E-5	IMPLEMENTATION
// The value of 1 is for Socket::AI_PASSIVE.	WITHOUT_CLASSIFICATION	0.9999757752316086	WITHOUT_CLASSIFICATION	2.422476839136838E-5	IMPLEMENTATION
// RubySocket	WITHOUT_CLASSIFICATION	0.9998958405190128	WITHOUT_CLASSIFICATION	1.0415948098719462E-4	IMPLEMENTATION
// numeric host, use it for port	WITHOUT_CLASSIFICATION	0.9999414421730483	WITHOUT_CLASSIFICATION	5.855782695168891E-5	IMPLEMENTATION
//            e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999797651816378	WITHOUT_CLASSIFICATION	2.0234818362202795E-5	IMPLEMENTATION
// we were woken up without being selected...poll for thread events and go back to sleep	WITHOUT_CLASSIFICATION	0.9999879257270462	WITHOUT_CLASSIFICATION	1.20742729537429E-5	IMPLEMENTATION
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999890997085504	WITHOUT_CLASSIFICATION	1.0900291449566437E-5	IMPLEMENTATION
// no connection immediately accepted, let them try again	WITHOUT_CLASSIFICATION	0.9999480751152003	WITHOUT_CLASSIFICATION	5.1924884799777316E-5	IMPLEMENTATION
// do nothing, just exit	WITHOUT_CLASSIFICATION	0.999984859651223	WITHOUT_CLASSIFICATION	1.514034877694829E-5	IMPLEMENTATION
//nativeThread.setPriority(priority);	WITHOUT_CLASSIFICATION	0.9999133614920601	WITHOUT_CLASSIFICATION	8.663850793986082E-5	IMPLEMENTATION
// set thread context JRuby classloader here, for Ruby-owned thread	WITHOUT_CLASSIFICATION	0.9999662824680942	WITHOUT_CLASSIFICATION	3.3717531905737564E-5	IMPLEMENTATION
// uber-ThreadKill catcher, since it should always just mean "be dead"	WITHOUT_CLASSIFICATION	0.999869563161711	WITHOUT_CLASSIFICATION	1.3043683828902798E-4	IMPLEMENTATION
// Call the thread's code	WITHOUT_CLASSIFICATION	0.9999488593362815	WITHOUT_CLASSIFICATION	5.1140663718378125E-5	IMPLEMENTATION
// Someone called exit!, so we need to kill the main thread	WITHOUT_CLASSIFICATION	0.9999259600509162	WITHOUT_CLASSIFICATION	7.403994908380299E-5	IMPLEMENTATION
// restore context classloader, in case we're using a thread pool	WITHOUT_CLASSIFICATION	0.999979757209755	WITHOUT_CLASSIFICATION	2.0242790245055872E-5	IMPLEMENTATION
// be dead	WITHOUT_CLASSIFICATION	0.9963886105322841	WITHOUT_CLASSIFICATION	0.003611389467715916	IMPLEMENTATION
// loop until a context is available, to clean up softrefs that might have been collected	WITHOUT_CLASSIFICATION	0.9999672899450498	WITHOUT_CLASSIFICATION	3.2710054950239776E-5	IMPLEMENTATION
// all threads in ruby thread group plus main thread	WITHOUT_CLASSIFICATION	0.9999600460116186	WITHOUT_CLASSIFICATION	3.9953988381475184E-5	IMPLEMENTATION
// thread is not alive, skip it	WITHOUT_CLASSIFICATION	0.9999543413513322	WITHOUT_CLASSIFICATION	4.565864866771805E-5	IMPLEMENTATION
// future is done or cancelled, skip it	WITHOUT_CLASSIFICATION	0.9999477707583463	WITHOUT_CLASSIFICATION	5.222924165370603E-5	IMPLEMENTATION
// first, check if the sender has unreceived mail	WITHOUT_CLASSIFICATION	0.9999792670624394	WITHOUT_CLASSIFICATION	2.0732937560627175E-5	IMPLEMENTATION
// then deliver mail to the target	WITHOUT_CLASSIFICATION	0.9999764224905223	WITHOUT_CLASSIFICATION	2.357750947772963E-5	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999302117618522	WITHOUT_CLASSIFICATION	6.978823814791155E-5	IMPLEMENTATION
// Define a second version that doesn't take a block, so we have unique code paths for both cases.	WITHOUT_CLASSIFICATION	0.9999681345813219	WITHOUT_CLASSIFICATION	3.186541867807613E-5	IMPLEMENTATION
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9998885859494879	WITHOUT_CLASSIFICATION	1.1141405051204648E-4	IMPLEMENTATION
// main body	WITHOUT_CLASSIFICATION	0.9999018311697347	WITHOUT_CLASSIFICATION	9.816883026529347E-5	IMPLEMENTATION
// return jump handling	WITHOUT_CLASSIFICATION	0.9999816240837636	WITHOUT_CLASSIFICATION	1.8375916236508043E-5	IMPLEMENTATION
// finally	WITHOUT_CLASSIFICATION	0.9971156734346637	WITHOUT_CLASSIFICATION	0.002884326565336332	IMPLEMENTATION
// return result if we're still good	WITHOUT_CLASSIFICATION	0.9999904839477306	WITHOUT_CLASSIFICATION	9.516052269319246E-6	IMPLEMENTATION
// redo jump handling	WITHOUT_CLASSIFICATION	0.9999049649909212	WITHOUT_CLASSIFICATION	9.503500907877561E-5	IMPLEMENTATION
// clear the redo	WITHOUT_CLASSIFICATION	0.9999607732088096	WITHOUT_CLASSIFICATION	3.9226791190437676E-5	IMPLEMENTATION
// get runtime, create jump error, and throw it	WITHOUT_CLASSIFICATION	0.9999749545597099	WITHOUT_CLASSIFICATION	2.5045440290144853E-5	IMPLEMENTATION
// throw redo error if we're still good	WITHOUT_CLASSIFICATION	0.9999486908469118	WITHOUT_CLASSIFICATION	5.130915308813427E-5	IMPLEMENTATION
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.999930005542958	WITHOUT_CLASSIFICATION	6.999445704210389E-5	IMPLEMENTATION
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.999862127559851	WITHOUT_CLASSIFICATION	1.3787244014891773E-4	IMPLEMENTATION
// No required specified, check actual number of required args	WITHOUT_CLASSIFICATION	0.9999882094005206	WITHOUT_CLASSIFICATION	1.179059947932469E-5	IMPLEMENTATION
// actual required is less than 3, so we use specific arity	WITHOUT_CLASSIFICATION	0.9999661526874006	WITHOUT_CLASSIFICATION	3.3847312599296095E-5	IMPLEMENTATION
// actual required is greater than 3, raise error (we don't support actual required > 3)	WITHOUT_CLASSIFICATION	0.9999402502310176	WITHOUT_CLASSIFICATION	5.97497689822741E-5	IMPLEMENTATION
// simple path, no multimethod	WITHOUT_CLASSIFICATION	0.9999346451466546	WITHOUT_CLASSIFICATION	6.535485334537721E-5	IMPLEMENTATION
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999291082002557	WITHOUT_CLASSIFICATION	7.089179974423963E-5	IMPLEMENTATION
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999291082002557	WITHOUT_CLASSIFICATION	7.089179974423963E-5	IMPLEMENTATION
// normal all-rest method	WITHOUT_CLASSIFICATION	0.9999374273627575	WITHOUT_CLASSIFICATION	6.257263724247397E-5	IMPLEMENTATION
// for zero, one, two, three arities, JavaMethod.JavaMethod*.call(...IRubyObject[] args...) will check	WITHOUT_CLASSIFICATION	0.9999561322643202	WITHOUT_CLASSIFICATION	4.386773567990435E-5	IMPLEMENTATION
// promise to implement zero to N	WITHOUT_CLASSIFICATION	0.9932852458971484	WITHOUT_CLASSIFICATION	0.006714754102851509	IMPLEMENTATION
// return	WITHOUT_CLASSIFICATION	0.9994268719375797	WITHOUT_CLASSIFICATION	5.731280624203369E-4	IMPLEMENTATION
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999475070334939	WITHOUT_CLASSIFICATION	5.2492966505989606E-5	IMPLEMENTATION
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999566666283057	WITHOUT_CLASSIFICATION	4.3333371694281656E-5	IMPLEMENTATION
// confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999462254099171	WITHOUT_CLASSIFICATION	5.3774590082922206E-5	IMPLEMENTATION
// confirm maximum not greater than optional	WITHOUT_CLASSIFICATION	0.9999695614963251	WITHOUT_CLASSIFICATION	3.0438503674859716E-5	IMPLEMENTATION
// Raise an error if arity does not match requirements	WITHOUT_CLASSIFICATION	0.9999700946592889	WITHOUT_CLASSIFICATION	2.9905340711140957E-5	IMPLEMENTATION
// tc	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
// self // name	WITHOUT_CLASSIFICATION	0.9999270515225369	WITHOUT_CLASSIFICATION	7.294847746315223E-5	IMPLEMENTATION
// no args	WITHOUT_CLASSIFICATION	0.9973867572746655	WITHOUT_CLASSIFICATION	0.002613242725334482	IMPLEMENTATION
// variable args with block	WITHOUT_CLASSIFICATION	0.9999355353451931	WITHOUT_CLASSIFICATION	6.446465480692372E-5	IMPLEMENTATION
// variable args no block, load null block	WITHOUT_CLASSIFICATION	0.9999446111533349	WITHOUT_CLASSIFICATION	5.538884666516696E-5	IMPLEMENTATION
// zero args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999206210488368	WITHOUT_CLASSIFICATION	7.93789511631912E-5	IMPLEMENTATION
// one arg with block	WITHOUT_CLASSIFICATION	0.9999120438594197	WITHOUT_CLASSIFICATION	8.795614058037735E-5	IMPLEMENTATION
// one arg, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999212942183152	WITHOUT_CLASSIFICATION	7.870578168479515E-5	IMPLEMENTATION
// two args with block	WITHOUT_CLASSIFICATION	0.9999184314441336	WITHOUT_CLASSIFICATION	8.156855586637501E-5	IMPLEMENTATION
// two args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.999921056786859	WITHOUT_CLASSIFICATION	7.89432131409916E-5	IMPLEMENTATION
// three args with block	WITHOUT_CLASSIFICATION	0.9999229929682146	WITHOUT_CLASSIFICATION	7.7007031785363E-5	IMPLEMENTATION
// three args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999254420981608	WITHOUT_CLASSIFICATION	7.455790183918391E-5	IMPLEMENTATION
// load block if it accepts block	WITHOUT_CLASSIFICATION	0.9999373513250376	WITHOUT_CLASSIFICATION	6.264867496237631E-5	IMPLEMENTATION
// all other arg cases with block	WITHOUT_CLASSIFICATION	0.9999165293812329	WITHOUT_CLASSIFICATION	8.347061876716443E-5	IMPLEMENTATION
// all other arg cases without block	WITHOUT_CLASSIFICATION	0.9999155608474118	WITHOUT_CLASSIFICATION	8.443915258815127E-5	IMPLEMENTATION
// one arg, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999785223550217	WITHOUT_CLASSIFICATION	2.147764497829466E-5	IMPLEMENTATION
// two args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999784575597659	WITHOUT_CLASSIFICATION	2.1542440234122666E-5	IMPLEMENTATION
// three args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999796543115156	WITHOUT_CLASSIFICATION	2.0345688484421617E-5	IMPLEMENTATION
// load target for invocations	WITHOUT_CLASSIFICATION	0.9999629920257782	WITHOUT_CLASSIFICATION	3.700797422186037E-5	IMPLEMENTATION
// load receiver as original type for virtual invocation	WITHOUT_CLASSIFICATION	0.9999679580013494	WITHOUT_CLASSIFICATION	3.204199865063033E-5	IMPLEMENTATION
// static invocation	WITHOUT_CLASSIFICATION	0.9999476285068466	WITHOUT_CLASSIFICATION	5.2371493153361874E-5	IMPLEMENTATION
// virtual invocation	WITHOUT_CLASSIFICATION	0.999922451314969	WITHOUT_CLASSIFICATION	7.754868503093266E-5	IMPLEMENTATION
// void return type, so we need to load a nil for returning below	WITHOUT_CLASSIFICATION	0.9999472308646624	WITHOUT_CLASSIFICATION	5.276913533757351E-5	IMPLEMENTATION
// normal finally and exit	WITHOUT_CLASSIFICATION	0.9999342458302469	WITHOUT_CLASSIFICATION	6.575416975308258E-5	IMPLEMENTATION
// promise to implement one to N	WITHOUT_CLASSIFICATION	0.9921209786207952	WITHOUT_CLASSIFICATION	0.007879021379204872	IMPLEMENTATION
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.999862127559851	WITHOUT_CLASSIFICATION	1.3787244014891773E-4	IMPLEMENTATION
// these are only needed if we have a non-noop call config	WITHOUT_CLASSIFICATION	0.9999831844482987	WITHOUT_CLASSIFICATION	1.6815551701308238E-5	IMPLEMENTATION
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999598543314658	WITHOUT_CLASSIFICATION	4.014566853415142E-5	IMPLEMENTATION
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999598543314658	WITHOUT_CLASSIFICATION	4.014566853415142E-5	IMPLEMENTATION
// singleton classes don't get their own visibility domain	WITHOUT_CLASSIFICATION	0.9999864090785937	WITHOUT_CLASSIFICATION	1.3590921406407221E-5	IMPLEMENTATION
// For visibility we need real meta class and not anonymous one from class << self	WITHOUT_CLASSIFICATION	0.9999830195804755	WITHOUT_CLASSIFICATION	1.698041952452197E-5	IMPLEMENTATION
// SimpleInvocationMethod	WITHOUT_CLASSIFICATION	0.9999258431350857	WITHOUT_CLASSIFICATION	7.41568649143951E-5	IMPLEMENTATION
// never reached	WITHOUT_CLASSIFICATION	0.9999002926560432	WITHOUT_CLASSIFICATION	9.970734395690557E-5	IMPLEMENTATION
// promise to implement N with block	WITHOUT_CLASSIFICATION	0.9932342879489406	WITHOUT_CLASSIFICATION	0.006765712051059315	IMPLEMENTATION
// promise to implement zero to N with block	WITHOUT_CLASSIFICATION	0.9933715177354397	WITHOUT_CLASSIFICATION	0.00662848226456022	IMPLEMENTATION
// promise to implement one to N with block	WITHOUT_CLASSIFICATION	0.9922220919492186	WITHOUT_CLASSIFICATION	0.0077779080507813705	IMPLEMENTATION
// promise to implement two to N with block	WITHOUT_CLASSIFICATION	0.991352118119078	WITHOUT_CLASSIFICATION	0.00864788188092197	IMPLEMENTATION
// promise to implement zero to three with block	WITHOUT_CLASSIFICATION	0.994271157611645	WITHOUT_CLASSIFICATION	0.005728842388355002	IMPLEMENTATION
// promise to implement one to three with block	WITHOUT_CLASSIFICATION	0.9930314028538098	WITHOUT_CLASSIFICATION	0.0069685971461901875	IMPLEMENTATION
// promise to implement two to three with block	WITHOUT_CLASSIFICATION	0.9925237749393848	WITHOUT_CLASSIFICATION	0.007476225060615198	IMPLEMENTATION
// promise to implement three with block	WITHOUT_CLASSIFICATION	0.9892301238912447	WITHOUT_CLASSIFICATION	0.01076987610875532	IMPLEMENTATION
// promise to implement N	WITHOUT_CLASSIFICATION	0.9927402115710842	WITHOUT_CLASSIFICATION	0.007259788428915861	IMPLEMENTATION
// DumpingInvocationMethodFactory	WITHOUT_CLASSIFICATION	0.999940599064145	WITHOUT_CLASSIFICATION	5.9400935854958246E-5	IMPLEMENTATION
// We promote our box to being its own box since we're changing // visibilities, and need it to be reflected on this method object // independent of any other sharing the box.	WITHOUT_CLASSIFICATION	0.9999915978694006	WITHOUT_CLASSIFICATION	8.402130599432426E-6	IMPLEMENTATION
// Normally we could leave these to fall back on the superclass, but // since it dispatches through the [] version below, which may // dispatch through the []+block version, we can save it a couple hops // by overriding these here.	WITHOUT_CLASSIFICATION	0.9999775235334563	WITHOUT_CLASSIFICATION	2.2476466543771172E-5	IMPLEMENTATION
// promise to implement two to N	WITHOUT_CLASSIFICATION	0.9912397949243715	WITHOUT_CLASSIFICATION	0.008760205075628504	IMPLEMENTATION
// promise to implement three to N	WITHOUT_CLASSIFICATION	0.988165037350314	WITHOUT_CLASSIFICATION	0.011834962649685928	IMPLEMENTATION
// promise to implement zero to three	WITHOUT_CLASSIFICATION	0.9935917695402032	WITHOUT_CLASSIFICATION	0.0064082304597967415	IMPLEMENTATION
// promise to implement one to three	WITHOUT_CLASSIFICATION	0.9922061437413859	WITHOUT_CLASSIFICATION	0.007793856258614096	IMPLEMENTATION
// promise to implement two to three	WITHOUT_CLASSIFICATION	0.9916389059362256	WITHOUT_CLASSIFICATION	0.008361094063774424	IMPLEMENTATION
// promise to implement three	WITHOUT_CLASSIFICATION	0.9872478919114186	WITHOUT_CLASSIFICATION	0.012752108088581304	IMPLEMENTATION
// all other arities use "n" dispatch path	WITHOUT_CLASSIFICATION	0.9999261199863083	WITHOUT_CLASSIFICATION	7.388001369174745E-5	IMPLEMENTATION
// load up object and add a few useful methods	WITHOUT_CLASSIFICATION	0.9999767300660042	WITHOUT_CLASSIFICATION	2.326993399578419E-5	IMPLEMENTATION
// open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel	WITHOUT_CLASSIFICATION	0.9999667984552194	WITHOUT_CLASSIFICATION	3.320154478061669E-5	IMPLEMENTATION
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9992978538443683	WITHOUT_CLASSIFICATION	7.0214615563169E-4	IMPLEMENTATION
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999606329934388	WITHOUT_CLASSIFICATION	3.936700656110193E-5	IMPLEMENTATION
// create constructor	WITHOUT_CLASSIFICATION	0.9999852431981021	WITHOUT_CLASSIFICATION	1.4756801897926012E-5	IMPLEMENTATION
// wrap self and store the wrapper	WITHOUT_CLASSIFICATION	0.999960141392669	WITHOUT_CLASSIFICATION	3.9858607331082984E-5	IMPLEMENTATION
// end constructor	WITHOUT_CLASSIFICATION	0.9999386085241582	WITHOUT_CLASSIFICATION	6.13914758417903E-5	IMPLEMENTATION
// start setup method	WITHOUT_CLASSIFICATION	0.9999653149787984	WITHOUT_CLASSIFICATION	3.4685021201632854E-5	IMPLEMENTATION
// set RubyClass	WITHOUT_CLASSIFICATION	0.9999398266129701	WITHOUT_CLASSIFICATION	6.017338702983421E-5	IMPLEMENTATION
// set Ruby	WITHOUT_CLASSIFICATION	0.9999398138592543	WITHOUT_CLASSIFICATION	6.01861407456658E-5	IMPLEMENTATION
// all methods dispatch to the simple version by default, which is method_missing normally	WITHOUT_CLASSIFICATION	0.9999911409297321	WITHOUT_CLASSIFICATION	8.859070267970466E-6	IMPLEMENTATION
// try specific name first, falling back on simple name	WITHOUT_CLASSIFICATION	0.9999682049352273	WITHOUT_CLASSIFICATION	3.179506477266532E-5	IMPLEMENTATION
// get current context	WITHOUT_CLASSIFICATION	0.9999698757546948	WITHOUT_CLASSIFICATION	3.012424530523675E-5	IMPLEMENTATION
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999557666530495	WITHOUT_CLASSIFICATION	4.4233346950412236E-5	IMPLEMENTATION
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9992978538443683	WITHOUT_CLASSIFICATION	7.0214615563169E-4	IMPLEMENTATION
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999606329934388	WITHOUT_CLASSIFICATION	3.936700656110193E-5	IMPLEMENTATION
// create constructor	WITHOUT_CLASSIFICATION	0.9999852431981021	WITHOUT_CLASSIFICATION	1.4756801897926012E-5	IMPLEMENTATION
// end constructor	WITHOUT_CLASSIFICATION	0.9999386085241582	WITHOUT_CLASSIFICATION	6.13914758417903E-5	IMPLEMENTATION
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9989778058007419	WITHOUT_CLASSIFICATION	0.0010221941992580167	IMPLEMENTATION
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999694810977253	WITHOUT_CLASSIFICATION	3.0518902274734014E-5	IMPLEMENTATION
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999505751291448	WITHOUT_CLASSIFICATION	4.942487085519249E-5	IMPLEMENTATION
// load null block	WITHOUT_CLASSIFICATION	0.9999305658351528	WITHOUT_CLASSIFICATION	6.943416484711679E-5	IMPLEMENTATION
// invoke method	WITHOUT_CLASSIFICATION	0.9999341939890982	WITHOUT_CLASSIFICATION	6.580601090177425E-5	IMPLEMENTATION
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999546075177201	WITHOUT_CLASSIFICATION	4.539248227982304E-5	IMPLEMENTATION
// end setup method	WITHOUT_CLASSIFICATION	0.9999445807241985	WITHOUT_CLASSIFICATION	5.541927580165785E-5	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.999967812516154	WITHOUT_CLASSIFICATION	3.2187483845991615E-5	IMPLEMENTATION
// create static init, for a monitor object	WITHOUT_CLASSIFICATION	0.9999898293844122	WITHOUT_CLASSIFICATION	1.0170615587813193E-5	IMPLEMENTATION
// store the wrapper	WITHOUT_CLASSIFICATION	0.9999590760925163	WITHOUT_CLASSIFICATION	4.092390748366846E-5	IMPLEMENTATION
// prepare temp locals	WITHOUT_CLASSIFICATION	0.9999434762008254	WITHOUT_CLASSIFICATION	5.652379917450508E-5	IMPLEMENTATION
// Try to look up field for simple name // get field; if nonnull, go straight to dispatch	WITHOUT_CLASSIFICATION	0.9999758087004751	WITHOUT_CLASSIFICATION	2.4191299524944272E-5	IMPLEMENTATION
// field is null, lock class and try to populate	WITHOUT_CLASSIFICATION	0.9999776037681921	WITHOUT_CLASSIFICATION	2.239623180787052E-5	IMPLEMENTATION
// try/finally block to ensure unlock	WITHOUT_CLASSIFICATION	0.9999456549802936	WITHOUT_CLASSIFICATION	5.43450197062572E-5	IMPLEMENTATION
// store it	WITHOUT_CLASSIFICATION	0.9999290679619913	WITHOUT_CLASSIFICATION	7.093203800873577E-5	IMPLEMENTATION
// end of try block	WITHOUT_CLASSIFICATION	0.9999487281088668	WITHOUT_CLASSIFICATION	5.127189113309697E-5	IMPLEMENTATION
// finally block to release monitor	WITHOUT_CLASSIFICATION	0.9999429351214566	WITHOUT_CLASSIFICATION	5.706487854339724E-5	IMPLEMENTATION
// exception handling for monitor release	WITHOUT_CLASSIFICATION	0.9998706153953676	WITHOUT_CLASSIFICATION	1.2938460463234028E-4	IMPLEMENTATION
// re-get, re-check method; if not null now, go to dispatch	WITHOUT_CLASSIFICATION	0.9999454729322287	WITHOUT_CLASSIFICATION	5.452706777121235E-5	IMPLEMENTATION
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999557666530495	WITHOUT_CLASSIFICATION	4.4233346950412236E-5	IMPLEMENTATION
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999694810977253	WITHOUT_CLASSIFICATION	3.0518902274734014E-5	IMPLEMENTATION
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999505751291448	WITHOUT_CLASSIFICATION	4.942487085519249E-5	IMPLEMENTATION
// invoke method	WITHOUT_CLASSIFICATION	0.9999341939890982	WITHOUT_CLASSIFICATION	6.580601090177425E-5	IMPLEMENTATION
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999546075177201	WITHOUT_CLASSIFICATION	4.539248227982304E-5	IMPLEMENTATION
// end setup method	WITHOUT_CLASSIFICATION	0.9999445807241985	WITHOUT_CLASSIFICATION	5.541927580165785E-5	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.999967812516154	WITHOUT_CLASSIFICATION	3.2187483845991615E-5	IMPLEMENTATION
// create the class	WITHOUT_CLASSIFICATION	0.9999893024665323	WITHOUT_CLASSIFICATION	1.069753346777525E-5	IMPLEMENTATION
// method still not available, call method_missing	WITHOUT_CLASSIFICATION	0.9999309715258397	WITHOUT_CLASSIFICATION	6.902847416033802E-5	IMPLEMENTATION
// perform the dispatch	WITHOUT_CLASSIFICATION	0.9999574133960091	WITHOUT_CLASSIFICATION	4.2586603990914244E-5	IMPLEMENTATION
// try to load the specified name; only if that fails, try to define the class	WITHOUT_CLASSIFICATION	0.9999978699217373	WITHOUT_CLASSIFICATION	2.1300782627224787E-6	IMPLEMENTATION
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999213067513671	WITHOUT_CLASSIFICATION	7.869324863292023E-5	IMPLEMENTATION
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999213067513671	WITHOUT_CLASSIFICATION	7.869324863292023E-5	IMPLEMENTATION
// setup the class	WITHOUT_CLASSIFICATION	0.9999785417657867	WITHOUT_CLASSIFICATION	2.1458234213205176E-5	IMPLEMENTATION
// now, create a method_added that can replace the DynamicMethod fields as they're redefined	WITHOUT_CLASSIFICATION	0.9999604649074236	WITHOUT_CLASSIFICATION	3.9535092576346905E-5	IMPLEMENTATION
// do nothing, it's a non-impl method	WITHOUT_CLASSIFICATION	0.9999868097091723	WITHOUT_CLASSIFICATION	1.3190290827563877E-5	IMPLEMENTATION
// probably a primitive	WITHOUT_CLASSIFICATION	0.9999376887598235	WITHOUT_CLASSIFICATION	6.23112401765454E-5	IMPLEMENTATION
// interfaces are handled as modules	WITHOUT_CLASSIFICATION	0.9999481922828642	WITHOUT_CLASSIFICATION	5.180771713583883E-5	IMPLEMENTATION
// construct the mirror class and parent classes	WITHOUT_CLASSIFICATION	0.9999915363081091	WITHOUT_CLASSIFICATION	8.463691890929707E-6	IMPLEMENTATION
// set the full name	WITHOUT_CLASSIFICATION	0.9999527098945691	WITHOUT_CLASSIFICATION	4.729010543078878E-5	IMPLEMENTATION
// include all interfaces	WITHOUT_CLASSIFICATION	0.9999453211223336	WITHOUT_CLASSIFICATION	5.46788776664144E-5	IMPLEMENTATION
// if it's an array, only add methods for aref, aset, and length	WITHOUT_CLASSIFICATION	0.9999731525033654	WITHOUT_CLASSIFICATION	2.684749663458432E-5	IMPLEMENTATION
// add array construction methods	WITHOUT_CLASSIFICATION	0.9999805352822542	WITHOUT_CLASSIFICATION	1.946471774587858E-5	IMPLEMENTATION
// add all public constructors (note: getConstructors only returns public ones)	WITHOUT_CLASSIFICATION	0.9999887669935291	WITHOUT_CLASSIFICATION	1.1233006470897391E-5	IMPLEMENTATION
// add all instance and static methods	WITHOUT_CLASSIFICATION	0.999985319251112	WITHOUT_CLASSIFICATION	1.4680748888118803E-5	IMPLEMENTATION
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999065171473501	WITHOUT_CLASSIFICATION	9.348285264983234E-5	IMPLEMENTATION
// too much array creation!	WITHOUT_CLASSIFICATION	0.9999411447267175	WITHOUT_CLASSIFICATION	5.885527328264741E-5	IMPLEMENTATION
// only include static methods if specified	WITHOUT_CLASSIFICATION	0.999979605973301	WITHOUT_CLASSIFICATION	2.039402669887491E-5	IMPLEMENTATION
// add a few type-specific special methods	WITHOUT_CLASSIFICATION	0.9999835124833627	WITHOUT_CLASSIFICATION	1.648751663732103E-5	IMPLEMENTATION
// add all static variables	WITHOUT_CLASSIFICATION	0.9999778274614707	WITHOUT_CLASSIFICATION	2.2172538529312812E-5	IMPLEMENTATION
// only public static fields that are valid constants	WITHOUT_CLASSIFICATION	0.999985705605829	WITHOUT_CLASSIFICATION	1.429439417107279E-5	IMPLEMENTATION
// looks like someone's trying to raise a Java exception. Let them.	WITHOUT_CLASSIFICATION	0.9999200284257672	WITHOUT_CLASSIFICATION	7.997157423275222E-5	IMPLEMENTATION
// NOTE: The five match methods are arity-split to avoid the cost of boxing arguments // when there's already a cached match. Do not condense them into a single // method.	WITHOUT_CLASSIFICATION	0.9999962110357395	WITHOUT_CLASSIFICATION	3.788964260494261E-6	IMPLEMENTATION
// TODO: This is where we would want to do precision checks to see // if it's non-destructive to coerce a given type into the target // integral primitive	WITHOUT_CLASSIFICATION	0.576357831905576	WITHOUT_CLASSIFICATION	0.42364216809442395	IMPLEMENTATION
// long first because it's what Fixnum claims to be	WITHOUT_CLASSIFICATION	0.9999784890121234	WITHOUT_CLASSIFICATION	2.1510987876655515E-5	IMPLEMENTATION
// double first because it's what float claims to be	WITHOUT_CLASSIFICATION	0.9999906253530496	WITHOUT_CLASSIFICATION	9.374646950402193E-6	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9371311660692782	WITHOUT_CLASSIFICATION	0.06286883393072194	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999093848410134	WITHOUT_CLASSIFICATION	9.061515898652722E-5	IMPLEMENTATION
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.999989432033419	WITHOUT_CLASSIFICATION	1.0567966581163181E-5	IMPLEMENTATION
// we set all Java methods to optional, since many/most have overloads	WITHOUT_CLASSIFICATION	0.9999740029463172	WITHOUT_CLASSIFICATION	2.599705368279536E-5	IMPLEMENTATION
// If we hold a Java object, we need a java_class accessor	WITHOUT_CLASSIFICATION	0.9999484615588905	WITHOUT_CLASSIFICATION	5.153844110943496E-5	IMPLEMENTATION
// line 326	WITHOUT_CLASSIFICATION	0.9999250208232384	WITHOUT_CLASSIFICATION	7.497917676152598E-5	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999093848410134	WITHOUT_CLASSIFICATION	9.061515898652722E-5	IMPLEMENTATION
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.999989432033419	WITHOUT_CLASSIFICATION	1.0567966581163181E-5	IMPLEMENTATION
// too much array creation!	WITHOUT_CLASSIFICATION	0.9999411447267175	WITHOUT_CLASSIFICATION	5.885527328264741E-5	IMPLEMENTATION
// construct new array proxy (ArrayJavaProxy)	WITHOUT_CLASSIFICATION	0.9999615866715689	WITHOUT_CLASSIFICATION	3.8413328431125435E-5	IMPLEMENTATION
// Get map of all fields we want to define.  	WITHOUT_CLASSIFICATION	0.9999285547380521	WITHOUT_CLASSIFICATION	7.144526194793747E-5	IMPLEMENTATION
// Look through all mappings to find a match entry for this field	WITHOUT_CLASSIFICATION	0.9999536647150951	WITHOUT_CLASSIFICATION	4.6335284904900835E-5	IMPLEMENTATION
// Hit a non-java proxy class (included Modules can be a cause of this...skip)	WITHOUT_CLASSIFICATION	0.9999714655801603	WITHOUT_CLASSIFICATION	2.8534419839700963E-5	IMPLEMENTATION
// We could not find all of them print out first one (we could print them all?)	WITHOUT_CLASSIFICATION	0.9999820408492859	WITHOUT_CLASSIFICATION	1.7959150714122682E-5	IMPLEMENTATION
// dummy bodies for default impls	WITHOUT_CLASSIFICATION	0.999977673407696	WITHOUT_CLASSIFICATION	2.2326592303981685E-5	IMPLEMENTATION
// initialize this if it hasn't been	WITHOUT_CLASSIFICATION	0.9999772242036669	WITHOUT_CLASSIFICATION	2.2775796333145036E-5	IMPLEMENTATION
// initialize these if they haven't been	WITHOUT_CLASSIFICATION	0.9999839463807536	WITHOUT_CLASSIFICATION	1.6053619246453428E-5	IMPLEMENTATION
// not allowed for original (non-generated) Java classes // note: not allowing for any previously created class right now; // this restriction might be loosened later for generated classes	WITHOUT_CLASSIFICATION	0.999976079833069	WITHOUT_CLASSIFICATION	2.3920166930985966E-5	IMPLEMENTATION
// setup new, etc unless this is a ConcreteJavaProxy subclass	WITHOUT_CLASSIFICATION	0.9999809231853459	WITHOUT_CLASSIFICATION	1.907681465412413E-5	IMPLEMENTATION
// First we make modifications to the class, to adapt it to being // both a Ruby class and a proxy for a Java type	WITHOUT_CLASSIFICATION	0.9999937014975635	WITHOUT_CLASSIFICATION	6.29850243651813E-6	IMPLEMENTATION
// list of interfaces we implement	WITHOUT_CLASSIFICATION	0.998748223956588	WITHOUT_CLASSIFICATION	0.0012517760434119776	IMPLEMENTATION
// We capture the original "new" and make it private	WITHOUT_CLASSIFICATION	0.9999598559655498	WITHOUT_CLASSIFICATION	4.01440344502473E-5	IMPLEMENTATION
// The replacement "new" allocates and inits the Ruby object as before, but // also instantiates our proxified Java object by calling __jcreate!	WITHOUT_CLASSIFICATION	0.9999913569469582	WITHOUT_CLASSIFICATION	8.643053041801828E-6	IMPLEMENTATION
// Next, we define a few private methods that we'll use to manipulate // the Java object contained within this Ruby object	WITHOUT_CLASSIFICATION	0.9999926345289354	WITHOUT_CLASSIFICATION	7.365471064672082E-6	IMPLEMENTATION
// jcreate instantiates the proxy object which implements all interfaces // and which is wrapped and implemented by this object	WITHOUT_CLASSIFICATION	0.9998384307760825	WITHOUT_CLASSIFICATION	1.6156922391758776E-4	IMPLEMENTATION
// Now we add an "implement" and "implement_all" methods to the class	WITHOUT_CLASSIFICATION	0.9998213906078968	WITHOUT_CLASSIFICATION	1.7860939210315014E-4	IMPLEMENTATION
// implement all forces implementation of all interfaces we intend // for this class to implement	WITHOUT_CLASSIFICATION	0.9997918164976753	WITHOUT_CLASSIFICATION	2.08183502324614E-4	IMPLEMENTATION
// we've already done the above priming logic, just add another interface // to the list of intentions unless we're past the point of no return or // already intend to implement the given interface	WITHOUT_CLASSIFICATION	0.9997974412466563	WITHOUT_CLASSIFICATION	2.025587533438249E-4	IMPLEMENTATION
// walk all superclasses aggregating interfaces	WITHOUT_CLASSIFICATION	0.999979008565192	WITHOUT_CLASSIFICATION	2.0991434808064705E-5	IMPLEMENTATION
// construct the new interface impl and set it into the object	WITHOUT_CLASSIFICATION	0.9999969075461744	WITHOUT_CLASSIFICATION	3.09245382552932E-6	IMPLEMENTATION
// assuming the user wants a collection of interfaces that can be // included together. make it so.	WITHOUT_CLASSIFICATION	0.9999855359490369	WITHOUT_CLASSIFICATION	1.4464050963052753E-5	IMPLEMENTATION
// not allowed for existing Java interface modules	WITHOUT_CLASSIFICATION	0.9999400796428303	WITHOUT_CLASSIFICATION	5.992035716979508E-5	IMPLEMENTATION
// To turn a module into an "interface collection" we add a class instance // variable to hold the list of interfaces, and modify append_features // for this module to call append_features on each of those interfaces as // well	WITHOUT_CLASSIFICATION	0.9999984899911581	WITHOUT_CLASSIFICATION	1.5100088418059795E-6	IMPLEMENTATION
// already set up append_features, just add the interface if we haven't already	WITHOUT_CLASSIFICATION	0.9999937715824827	WITHOUT_CLASSIFICATION	6.228417517398292E-6	IMPLEMENTATION
// array-of-interface-type creation/identity	WITHOUT_CLASSIFICATION	0.9999628322684981	WITHOUT_CLASSIFICATION	3.7167731501796594E-5	IMPLEMENTATION
// keep this variant for kind_of? testing	WITHOUT_CLASSIFICATION	0.9999359230670829	WITHOUT_CLASSIFICATION	6.407693291706912E-5	IMPLEMENTATION
// array creation should use this variant	WITHOUT_CLASSIFICATION	0.9998666516072411	WITHOUT_CLASSIFICATION	1.3334839275884442E-4	IMPLEMENTATION
// parent.setConstant(name, proxyClass); // where the name should come from ?	WITHOUT_CLASSIFICATION	0.9999789963633449	WITHOUT_CLASSIFICATION	2.100363665518334E-5	IMPLEMENTATION
// including interface module so old-style interface "subclasses" will // respond correctly to #kind_of?, etc.	WITHOUT_CLASSIFICATION	0.9999878362995706	WITHOUT_CLASSIFICATION	1.2163700429438356E-5	IMPLEMENTATION
// add reference to interface module	WITHOUT_CLASSIFICATION	0.9999870114544649	WITHOUT_CLASSIFICATION	1.2988545535147136E-5	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999345829312601	WITHOUT_CLASSIFICATION	6.541706873987558E-5	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999345829312601	WITHOUT_CLASSIFICATION	6.541706873987558E-5	IMPLEMENTATION
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999065171473501	WITHOUT_CLASSIFICATION	9.348285264983234E-5	IMPLEMENTATION
// same as argument_types, but matches name in java.lang.reflect.Constructor/Method	WITHOUT_CLASSIFICATION	0.9999785341505409	WITHOUT_CLASSIFICATION	2.1465849459002473E-5	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999724892361511	WITHOUT_CLASSIFICATION	2.751076384898896E-5	IMPLEMENTATION
// weakly reserved names	WITHOUT_CLASSIFICATION	0.9999160393027693	WITHOUT_CLASSIFICATION	8.396069723073042E-5	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999823965669768	WITHOUT_CLASSIFICATION	1.760343302314654E-5	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999823965669768	WITHOUT_CLASSIFICATION	1.760343302314654E-5	IMPLEMENTATION
// modified only by addMethod; no synchronization required	WITHOUT_CLASSIFICATION	0.9999716606245189	WITHOUT_CLASSIFICATION	2.8339375481004827E-5	IMPLEMENTATION
// if there's no constructor, we must prevent construction	WITHOUT_CLASSIFICATION	0.9999709005629303	WITHOUT_CLASSIFICATION	2.909943706973307E-5	IMPLEMENTATION
// caching constructors, as they're accessed for each new instance	WITHOUT_CLASSIFICATION	0.9999625044297004	WITHOUT_CLASSIFICATION	3.749557029974907E-5	IMPLEMENTATION
// proxy module for interfaces	WITHOUT_CLASSIFICATION	0.9999699614246347	WITHOUT_CLASSIFICATION	3.003857536529022E-5	IMPLEMENTATION
// proxy class for concrete classes.  also used for // "concrete" interfaces, which is why we have two fields	WITHOUT_CLASSIFICATION	0.9999939674664244	WITHOUT_CLASSIFICATION	6.032533575527507E-6	IMPLEMENTATION
// readable only by thread building proxy, so don't need to be // volatile. used to handle recursive calls to getProxyClass/Module // while proxy is being constructed (usually when a constant // defined by a class is of the same type as that class).	WITHOUT_CLASSIFICATION	0.9999988496919701	WITHOUT_CLASSIFICATION	1.1503080299238229E-6	IMPLEMENTATION
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999796908021436	WITHOUT_CLASSIFICATION	2.0309197856473726E-5	IMPLEMENTATION
// Now add all aliases for the static methods (fields) as appropriate	WITHOUT_CLASSIFICATION	0.999977201415753	WITHOUT_CLASSIFICATION	2.2798584247030334E-5	IMPLEMENTATION
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999703846433191	WITHOUT_CLASSIFICATION	2.9615356680983286E-5	IMPLEMENTATION
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999737590037179	WITHOUT_CLASSIFICATION	2.6240996282143714E-5	IMPLEMENTATION
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999381190287471	WITHOUT_CLASSIFICATION	6.188097125293346E-5	IMPLEMENTATION
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.99993565683734	WITHOUT_CLASSIFICATION	6.43431626599895E-5	IMPLEMENTATION
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999166506423233	WITHOUT_CLASSIFICATION	8.33493576766875E-5	IMPLEMENTATION
// Additionally add ?-postfixed aliases to any boolean methods and properties.	WITHOUT_CLASSIFICATION	0.9999776781645514	WITHOUT_CLASSIFICATION	2.2321835448597315E-5	IMPLEMENTATION
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999306572396817	WITHOUT_CLASSIFICATION	6.934276031831779E-5	IMPLEMENTATION
// something?	WITHOUT_CLASSIFICATION	0.9999196181463886	WITHOUT_CLASSIFICATION	8.038185361139447E-5	IMPLEMENTATION
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999914415875033	WITHOUT_CLASSIFICATION	8.558412496648182E-6	IMPLEMENTATION
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999914415875033	WITHOUT_CLASSIFICATION	8.558412496648182E-6	IMPLEMENTATION
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999976819855088	WITHOUT_CLASSIFICATION	2.3180144913022597E-6	IMPLEMENTATION
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999976819855088	WITHOUT_CLASSIFICATION	2.3180144913022597E-6	IMPLEMENTATION
// create constructorInstaller; if there are no constructors, it will disable construction	WITHOUT_CLASSIFICATION	0.9999974411750401	WITHOUT_CLASSIFICATION	2.558824959804668E-6	IMPLEMENTATION
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.999987791595701	WITHOUT_CLASSIFICATION	1.2208404299034307E-5	IMPLEMENTATION
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999683648331341	WITHOUT_CLASSIFICATION	3.163516686589924E-5	IMPLEMENTATION
// now iterate over all installers and make sure they also have appropriate aliases	WITHOUT_CLASSIFICATION	0.9999628907264734	WITHOUT_CLASSIFICATION	3.710927352658699E-5	IMPLEMENTATION
// old (quasi-deprecated) interface class	WITHOUT_CLASSIFICATION	0.9999766415666174	WITHOUT_CLASSIFICATION	2.3358433382600266E-5	IMPLEMENTATION
// 1.9 support for encodings	WITHOUT_CLASSIFICATION	0.9997142557218043	WITHOUT_CLASSIFICATION	2.85744278195727E-4	IMPLEMENTATION
// double-check the cache now that we're synchronized	WITHOUT_CLASSIFICATION	0.9999861265356816	WITHOUT_CLASSIFICATION	1.3873464318314966E-5	IMPLEMENTATION
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.99993565683734	WITHOUT_CLASSIFICATION	6.43431626599895E-5	IMPLEMENTATION
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999166506423233	WITHOUT_CLASSIFICATION	8.33493576766875E-5	IMPLEMENTATION
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999306572396817	WITHOUT_CLASSIFICATION	6.934276031831779E-5	IMPLEMENTATION
// one word type name that starts lower-case...it may be a primitive type	WITHOUT_CLASSIFICATION	0.9999794977600961	WITHOUT_CLASSIFICATION	2.0502239903852803E-5	IMPLEMENTATION
// Java.getProxyClass deals with sync issues, so we won't duplicate the logic here	WITHOUT_CLASSIFICATION	0.999968505756511	WITHOUT_CLASSIFICATION	3.1494243488933836E-5	IMPLEMENTATION
// note: intentionally returning the actual array returned from Java, rather // than wrapping it in a RubyArray. wave of the future, when java_class will // return the actual class, rather than a JavaClass wrapper.	WITHOUT_CLASSIFICATION	0.9999979279530756	WITHOUT_CLASSIFICATION	2.0720469243139593E-6	IMPLEMENTATION
// see note above re: return type	WITHOUT_CLASSIFICATION	0.9999452794310821	WITHOUT_CLASSIFICATION	5.472056891800427E-5	IMPLEMENTATION
// restrictive security policy; no matter, we only want public // classes anyway	WITHOUT_CLASSIFICATION	0.9999856317291905	WITHOUT_CLASSIFICATION	1.4368270809469505E-5	IMPLEMENTATION
// very restrictive policy (disallows Member.PUBLIC) // we'd never actually get this far in that case	WITHOUT_CLASSIFICATION	0.9998813366476098	WITHOUT_CLASSIFICATION	1.1866335239017979E-4	IMPLEMENTATION
// one-dimensional array	WITHOUT_CLASSIFICATION	0.9999313028594823	WITHOUT_CLASSIFICATION	6.869714051770401E-5	IMPLEMENTATION
// n-dimensional array	WITHOUT_CLASSIFICATION	0.9999306901351495	WITHOUT_CLASSIFICATION	6.930986485056285E-5	IMPLEMENTATION
// if it's an array of arrays, recurse with the component type	WITHOUT_CLASSIFICATION	0.9999762464611589	WITHOUT_CLASSIFICATION	2.3753538841190036E-5	IMPLEMENTATION
// we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods // see JRUBY-3130	WITHOUT_CLASSIFICATION	0.9999903483338621	WITHOUT_CLASSIFICATION	9.651666137899686E-6	IMPLEMENTATION
// Proc implementing an interface, pull in the catch-all code that lets the proc get invoked // no matter what method is called on the interface	WITHOUT_CLASSIFICATION	0.999715229881737	WITHOUT_CLASSIFICATION	2.8477011826296165E-4	IMPLEMENTATION
// can't be converted any more, return it	WITHOUT_CLASSIFICATION	0.9999751408473655	WITHOUT_CLASSIFICATION	2.4859152634453064E-5	IMPLEMENTATION
// getFooBar() => fooBar?, foo_bar?(*)	WITHOUT_CLASSIFICATION	0.9999355540827346	WITHOUT_CLASSIFICATION	6.444591726541916E-5	IMPLEMENTATION
// If not a property, but is boolean add ?-postfixed aliases.	WITHOUT_CLASSIFICATION	0.9999745238530218	WITHOUT_CLASSIFICATION	2.5476146978220184E-5	IMPLEMENTATION
// many cases are ok to convert to float; if not one of these, error	WITHOUT_CLASSIFICATION	0.999964773332092	WITHOUT_CLASSIFICATION	3.5226667908035144E-5	IMPLEMENTATION
// for Object, default to natural wrapper type	WITHOUT_CLASSIFICATION	0.9999853863207423	WITHOUT_CLASSIFICATION	1.4613679257811025E-5	IMPLEMENTATION
// rubyObject is already of the required jruby class (or subclass)	WITHOUT_CLASSIFICATION	0.9999924567278311	WITHOUT_CLASSIFICATION	7.543272168835709E-6	IMPLEMENTATION
// the converters handle not only primitive types but also their boxed versions, so we should check // if we have a converter before checking for isPrimitive()	WITHOUT_CLASSIFICATION	0.9999890015460827	WITHOUT_CLASSIFICATION	1.0998453917171854E-5	IMPLEMENTATION
// it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999771262677813	WITHOUT_CLASSIFICATION	2.2873732218615377E-5	IMPLEMENTATION
// we've found a Java type to which we've coerced the Ruby value, wrap it	WITHOUT_CLASSIFICATION	0.9999621666462583	WITHOUT_CLASSIFICATION	3.783335374184767E-5	IMPLEMENTATION
// set of utility methods for Java-based proxy objects	WITHOUT_CLASSIFICATION	0.9999793701655812	WITHOUT_CLASSIFICATION	2.0629834418783616E-5	IMPLEMENTATION
// the proxy (wrapper) type hierarchy	WITHOUT_CLASSIFICATION	0.9999617734753572	WITHOUT_CLASSIFICATION	3.822652464281261E-5	IMPLEMENTATION
//InterfaceJavaProxy.createInterfaceJavaProxy(context);	WITHOUT_CLASSIFICATION	0.9999538765644991	WITHOUT_CLASSIFICATION	4.612343550080396E-5	IMPLEMENTATION
// also create the JavaProxy* classes	WITHOUT_CLASSIFICATION	0.9999773180517734	WITHOUT_CLASSIFICATION	2.2681948226727774E-5	IMPLEMENTATION
// The template for interface modules	WITHOUT_CLASSIFICATION	0.9999884095605944	WITHOUT_CLASSIFICATION	1.1590439405454573E-5	IMPLEMENTATION
// Now attach Java-related extras to core classes	WITHOUT_CLASSIFICATION	0.9999629947830366	WITHOUT_CLASSIFICATION	3.700521696341997E-5	IMPLEMENTATION
// add all name-to-class mappings	WITHOUT_CLASSIFICATION	0.9999477241458512	WITHOUT_CLASSIFICATION	5.2275854148892955E-5	IMPLEMENTATION
// add some base Java classes everyone will need	WITHOUT_CLASSIFICATION	0.9999776551606591	WITHOUT_CLASSIFICATION	2.2344839340857466E-5	IMPLEMENTATION
// finally, set JavaSupport.isEnabled to true	WITHOUT_CLASSIFICATION	0.9999383551873303	WITHOUT_CLASSIFICATION	6.164481266961197E-5	IMPLEMENTATION
// shouldn't happen, but if a superclass is specified, it's not ours	WITHOUT_CLASSIFICATION	0.9999889672545128	WITHOUT_CLASSIFICATION	1.1032745487112795E-5	IMPLEMENTATION
// include any interfaces we extend	WITHOUT_CLASSIFICATION	0.9999638860048495	WITHOUT_CLASSIFICATION	3.611399515038028E-5	IMPLEMENTATION
// java.lang.Object is added at root of java proxy classes	WITHOUT_CLASSIFICATION	0.9999852728419567	WITHOUT_CLASSIFICATION	1.472715804324684E-5	IMPLEMENTATION
// other java proxy classes added under their superclass' java proxy	WITHOUT_CLASSIFICATION	0.9999762230540258	WITHOUT_CLASSIFICATION	2.3776945974235807E-5	IMPLEMENTATION
// include interface modules into the proxy class	WITHOUT_CLASSIFICATION	0.9999868932908496	WITHOUT_CLASSIFICATION	1.3106709150484274E-5	IMPLEMENTATION
// JRUBY-2938 the proxy class might already exist	WITHOUT_CLASSIFICATION	0.9999735085731268	WITHOUT_CLASSIFICATION	2.6491426873159177E-5	IMPLEMENTATION
// add java_method for unbound use	WITHOUT_CLASSIFICATION	0.9999529275953559	WITHOUT_CLASSIFICATION	4.7072404643943304E-5	IMPLEMENTATION
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999563809328598	WITHOUT_CLASSIFICATION	4.361906714015768E-5	IMPLEMENTATION
// we'll only map conventional class names to modules 	WITHOUT_CLASSIFICATION	0.9999668192462328	WITHOUT_CLASSIFICATION	3.3180753767274554E-5	IMPLEMENTATION
/* expected */	WITHOUT_CLASSIFICATION	0.999942480058372	WITHOUT_CLASSIFICATION	5.751994162796697E-5	IMPLEMENTATION
// Haven't found a class, continue on as though it were a package	WITHOUT_CLASSIFICATION	0.9999748593779484	WITHOUT_CLASSIFICATION	2.5140622051575634E-5	IMPLEMENTATION
// upper case name, so most likely a class	WITHOUT_CLASSIFICATION	0.9999726999933916	WITHOUT_CLASSIFICATION	2.7300006608398436E-5	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999724892361511	WITHOUT_CLASSIFICATION	2.751076384898896E-5	IMPLEMENTATION
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999563809328598	WITHOUT_CLASSIFICATION	4.361906714015768E-5	IMPLEMENTATION
// this is where we'll get connected when classes are opened using // package module syntax.	WITHOUT_CLASSIFICATION	0.9999881875089236	WITHOUT_CLASSIFICATION	1.1812491076437445E-5	IMPLEMENTATION
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9999905433819415	WITHOUT_CLASSIFICATION	9.456618058514602E-6	IMPLEMENTATION
// this covers primitives and (unlikely) lower-case class names	WITHOUT_CLASSIFICATION	0.9999723443797579	WITHOUT_CLASSIFICATION	2.7655620242023888E-5	IMPLEMENTATION
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999582209650875	WITHOUT_CLASSIFICATION	4.177903491261736E-5	IMPLEMENTATION
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999582209650875	WITHOUT_CLASSIFICATION	4.177903491261736E-5	IMPLEMENTATION
// Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9999747491515539	WITHOUT_CLASSIFICATION	2.525084844602507E-5	IMPLEMENTATION
// Create list of interfaces to proxy (and make sure they really are interfaces)	WITHOUT_CLASSIFICATION	0.9999937775227294	WITHOUT_CLASSIFICATION	6.2224772705919406E-6	IMPLEMENTATION
// hashcode is a combination of the interfaces and the Ruby class we're using // to implement them	WITHOUT_CLASSIFICATION	0.9992477135709968	WITHOUT_CLASSIFICATION	7.522864290031637E-4	IMPLEMENTATION
// if it's a singleton class and the real class is proc, we're doing closure conversion // so just use Proc's hashcode	WITHOUT_CLASSIFICATION	0.9999914608030751	WITHOUT_CLASSIFICATION	8.53919692483841E-6	IMPLEMENTATION
// normal new class implementing interfaces	WITHOUT_CLASSIFICATION	0.9993603996133611	WITHOUT_CLASSIFICATION	6.396003866389378E-4	IMPLEMENTATION
/*         * Initialize some components.         */	WITHOUT_CLASSIFICATION	0.9999957945688547	WITHOUT_CLASSIFICATION	4.205431145332179E-6	IMPLEMENTATION
// not synchronizing these methods, no harm if these values get set more // than once. // (also note that there's no chance of getting a partially initialized // class/module, as happens-before is guaranteed by volatile write/read // of constants table.)	WITHOUT_CLASSIFICATION	0.9999912940677905	WITHOUT_CLASSIFICATION	8.705932209400326E-6	IMPLEMENTATION
// Java reflection does not allow retrieving constructors like methods	WITHOUT_CLASSIFICATION	0.9999656428727264	WITHOUT_CLASSIFICATION	3.4357127273632554E-5	IMPLEMENTATION
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999628084098273	WITHOUT_CLASSIFICATION	3.719159017269682E-5	IMPLEMENTATION
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999628084098273	WITHOUT_CLASSIFICATION	3.719159017269682E-5	IMPLEMENTATION
// no matching ctor found	WITHOUT_CLASSIFICATION	0.9999611450077049	WITHOUT_CLASSIFICATION	3.8854992295098674E-5	IMPLEMENTATION
// Create Ruby proxies for any input arguments that are not primitives.	WITHOUT_CLASSIFICATION	0.9999663638162579	WITHOUT_CLASSIFICATION	3.363618374216976E-5	IMPLEMENTATION
// prepare a faster handle if handles are enabled and the method and class are public	WITHOUT_CLASSIFICATION	0.999980642731481	WITHOUT_CLASSIFICATION	1.9357268518977084E-5	IMPLEMENTATION
// must be a public method	WITHOUT_CLASSIFICATION	0.9999691157547065	WITHOUT_CLASSIFICATION	3.0884245293598114E-5	IMPLEMENTATION
// must be a public class	WITHOUT_CLASSIFICATION	0.9999727077993872	WITHOUT_CLASSIFICATION	2.7292200612853687E-5	IMPLEMENTATION
// must have been loaded from our known classloader hierarchy	WITHOUT_CLASSIFICATION	0.9999290865921279	WITHOUT_CLASSIFICATION	7.091340787216546E-5	IMPLEMENTATION
// Special classes like Collections.EMPTY_LIST are inner classes that are private but  // implement public interfaces.  Their methods are all public methods for the public  // interface.  Let these public methods execute via setAccessible(true). 	WITHOUT_CLASSIFICATION	0.9999798530290427	WITHOUT_CLASSIFICATION	2.0146970957278995E-5	IMPLEMENTATION
// search through all declared methods to find a closest match	WITHOUT_CLASSIFICATION	0.9999822035218879	WITHOUT_CLASSIFICATION	1.7796478112143254E-5	IMPLEMENTATION
// no matching method found	WITHOUT_CLASSIFICATION	0.999957266516462	WITHOUT_CLASSIFICATION	4.273348353810731E-5	IMPLEMENTATION
// this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.9999889144546137	WITHOUT_CLASSIFICATION	1.108554538627561E-5	IMPLEMENTATION
/*         * First we need to register the JRuby engine.         */	WITHOUT_CLASSIFICATION	0.999989747755768	WITHOUT_CLASSIFICATION	1.025224423195738E-5	IMPLEMENTATION
/*         * Now we create a new BSFManager.         */	WITHOUT_CLASSIFICATION	0.9999972268342474	WITHOUT_CLASSIFICATION	2.773165752697799E-6	IMPLEMENTATION
/*         * Initialize a simple Frame.          */	WITHOUT_CLASSIFICATION	0.9999923182256686	WITHOUT_CLASSIFICATION	7.681774331373455E-6	IMPLEMENTATION
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999409525080349	WITHOUT_CLASSIFICATION	5.904749196510135E-5	IMPLEMENTATION
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999409525080349	WITHOUT_CLASSIFICATION	5.904749196510135E-5	IMPLEMENTATION
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999226625999467	WITHOUT_CLASSIFICATION	7.733740005325415E-5	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.999967812516154	WITHOUT_CLASSIFICATION	3.2187483845991615E-5	IMPLEMENTATION
// // this test really means, that this is a ruby-defined subclass of a java class //	WITHOUT_CLASSIFICATION	0.9999871061311957	WITHOUT_CLASSIFICATION	1.2893868804344216E-5	IMPLEMENTATION
// for our purposes, Accessibles are also Members, and vice-versa, // so we'll include Member methods here.	WITHOUT_CLASSIFICATION	0.9999789622754429	WITHOUT_CLASSIFICATION	2.1037724557041666E-5	IMPLEMENTATION
/*             * Declare those components as beans in BSF. Then it will be             * possible to access those components in Ruby as global             * variables ($frame, $menubar, ...)             */	WITHOUT_CLASSIFICATION	0.9999981395499417	WITHOUT_CLASSIFICATION	1.8604500582972295E-6	IMPLEMENTATION
/*              * Execute a Ruby script (add the menubar to the frame).             */	WITHOUT_CLASSIFICATION	0.9999967866247426	WITHOUT_CLASSIFICATION	3.2133752574474396E-6	IMPLEMENTATION
/*                     * Execute Ruby statements.                     */	WITHOUT_CLASSIFICATION	0.9999934589930132	WITHOUT_CLASSIFICATION	6.541006986899795E-6	IMPLEMENTATION
/*                     * Evaluates a Ruby expression and display the result.                     */	WITHOUT_CLASSIFICATION	0.999992172465795	WITHOUT_CLASSIFICATION	7.827534205109835E-6	IMPLEMENTATION
// Populate values for the parameter names	WITHOUT_CLASSIFICATION	0.9999893633274074	WITHOUT_CLASSIFICATION	1.0636672592611065E-5	IMPLEMENTATION
/* package scope */	WITHOUT_CLASSIFICATION	0.9999203464471779	WITHOUT_CLASSIFICATION	7.965355282213662E-5	IMPLEMENTATION
// This point is only reached if there was an exception handler // installed.	WITHOUT_CLASSIFICATION	0.9999760805769332	WITHOUT_CLASSIFICATION	2.391942306679664E-5	IMPLEMENTATION
// // Ruby-level methods //	WITHOUT_CLASSIFICATION	0.9999351729698532	WITHOUT_CLASSIFICATION	6.482703014669002E-5	IMPLEMENTATION
// need names ordered for key generation later	WITHOUT_CLASSIFICATION	0.9999705941640435	WITHOUT_CLASSIFICATION	2.940583595648048E-5	IMPLEMENTATION
// we only collect methods and interfaces for  // user-defined proxy classes.	WITHOUT_CLASSIFICATION	0.999994979189728	WITHOUT_CLASSIFICATION	5.020810271998701E-6	IMPLEMENTATION
// get JavaClass if this is the new proxy class; verify it // matches if this is a superclass proxy.	WITHOUT_CLASSIFICATION	0.9999972970510228	WITHOUT_CLASSIFICATION	2.7029489770913996E-6	IMPLEMENTATION
// get any included interfaces	WITHOUT_CLASSIFICATION	0.9999797033608453	WITHOUT_CLASSIFICATION	2.0296639154682438E-5	IMPLEMENTATION
// lock in the overridden methods for the new class, and any as-yet // uninstantiated ancestor class.	WITHOUT_CLASSIFICATION	0.9999939070743821	WITHOUT_CLASSIFICATION	6.0929256179125406E-6	IMPLEMENTATION
// statically initialized below	WITHOUT_CLASSIFICATION	0.9999666033501743	WITHOUT_CLASSIFICATION	3.3396649825639747E-5	IMPLEMENTATION
// finish class initializer	WITHOUT_CLASSIFICATION	0.9999631371451985	WITHOUT_CLASSIFICATION	3.686285480154754E-5	IMPLEMENTATION
// trigger class initialization for the class	WITHOUT_CLASSIFICATION	0.9999879405240446	WITHOUT_CLASSIFICATION	1.205947595535748E-5	IMPLEMENTATION
// should not happen!	WITHOUT_CLASSIFICATION	0.9999809183774141	WITHOUT_CLASSIFICATION	1.908162258592215E-5	IMPLEMENTATION
// start class	WITHOUT_CLASSIFICATION	0.9999609919358738	WITHOUT_CLASSIFICATION	3.900806412620665E-5	IMPLEMENTATION
// make getter for handler	WITHOUT_CLASSIFICATION	0.9999224791492489	WITHOUT_CLASSIFICATION	7.75208507510876E-5	IMPLEMENTATION
// make getter for proxy class	WITHOUT_CLASSIFICATION	0.9999614755207785	WITHOUT_CLASSIFICATION	3.852447922138749E-5	IMPLEMENTATION
// add (potentially) overridden names to the key. // TODO: see note above re: optimizations	WITHOUT_CLASSIFICATION	0.9844997443116408	WITHOUT_CLASSIFICATION	0.015500255688359273	IMPLEMENTATION
// We generate all constructors and let some fail during invocation later	WITHOUT_CLASSIFICATION	0.9999697261609305	WITHOUT_CLASSIFICATION	3.0273839069529477E-5	IMPLEMENTATION
// create static private method field	WITHOUT_CLASSIFICATION	0.9999916282964821	WITHOUT_CLASSIFICATION	8.371703517881812E-6	IMPLEMENTATION
// load static empty array	WITHOUT_CLASSIFICATION	0.9999639861835806	WITHOUT_CLASSIFICATION	3.601381641936227E-5	IMPLEMENTATION
// box arguments	WITHOUT_CLASSIFICATION	0.9999338368462766	WITHOUT_CLASSIFICATION	6.616315372348106E-5	IMPLEMENTATION
// this is a simple rethrow handler	WITHOUT_CLASSIFICATION	0.9999686326248517	WITHOUT_CLASSIFICATION	3.136737514826764E-5	IMPLEMENTATION
// // construct the super-proxy method //	WITHOUT_CLASSIFICATION	0.9999703846521821	WITHOUT_CLASSIFICATION	2.9615347817764807E-5	IMPLEMENTATION
// do a void return	WITHOUT_CLASSIFICATION	0.9999491153070047	WITHOUT_CLASSIFICATION	5.0884692995225524E-5	IMPLEMENTATION
// // utility methods //	WITHOUT_CLASSIFICATION	0.9999384220941825	WITHOUT_CLASSIFICATION	6.157790581744957E-5	IMPLEMENTATION
// Is there a supplied proc argument or do we assume a block was // supplied	WITHOUT_CLASSIFICATION	0.9999768590325465	WITHOUT_CLASSIFICATION	2.314096745346845E-5	IMPLEMENTATION
// store call information so method_missing impl can use it	WITHOUT_CLASSIFICATION	0.9999654300537143	WITHOUT_CLASSIFICATION	3.456994628571018E-5	IMPLEMENTATION
// use the same logic as in EvaluationState	WITHOUT_CLASSIFICATION	0.9999596432617881	WITHOUT_CLASSIFICATION	4.035673821190876E-5	IMPLEMENTATION
// no opt, no rest, exact match	WITHOUT_CLASSIFICATION	0.9999545003759597	WITHOUT_CLASSIFICATION	4.5499624040392494E-5	IMPLEMENTATION
// only rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999726923977439	WITHOUT_CLASSIFICATION	2.7307602256186695E-5	IMPLEMENTATION
// opt but no rest, must be at least required and no more than required + opt	WITHOUT_CLASSIFICATION	0.9999614846790332	WITHOUT_CLASSIFICATION	3.851532096670091E-5	IMPLEMENTATION
// opt and rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999616066878776	WITHOUT_CLASSIFICATION	3.8393312122366144E-5	IMPLEMENTATION
// No block from a nil proc	WITHOUT_CLASSIFICATION	0.9999395869944739	WITHOUT_CLASSIFICATION	6.04130055260674E-5	IMPLEMENTATION
// If not already a proc then we should try and make it one.	WITHOUT_CLASSIFICATION	0.9999452759939147	WITHOUT_CLASSIFICATION	5.4724006085192286E-5	IMPLEMENTATION
// The current block is already associated with proc.  No need to create a new one	WITHOUT_CLASSIFICATION	0.9999970747041769	WITHOUT_CLASSIFICATION	2.925295823069761E-6	IMPLEMENTATION
// Has the method that is calling super received a block argument	WITHOUT_CLASSIFICATION	0.999966608723827	WITHOUT_CLASSIFICATION	3.339127617304224E-5	IMPLEMENTATION
/* NUL */	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999544261588714	WITHOUT_CLASSIFICATION	4.5573841128632E-5	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999406078363104	WITHOUT_CLASSIFICATION	5.939216368952925E-5	IMPLEMENTATION
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999356557674407	WITHOUT_CLASSIFICATION	6.434423255936554E-5	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999105332552161	WITHOUT_CLASSIFICATION	8.946674478389253E-5	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999093848410134	WITHOUT_CLASSIFICATION	9.061515898652722E-5	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999093848410134	WITHOUT_CLASSIFICATION	9.061515898652722E-5	IMPLEMENTATION
// classes are directly in the hierarchy, so no special logic is necessary for implementer	WITHOUT_CLASSIFICATION	0.9988456578762769	WITHOUT_CLASSIFICATION	0.0011543421237230887	IMPLEMENTATION
// must be power of 2 // must be power of 2	WITHOUT_CLASSIFICATION	0.9999525820048247	WITHOUT_CLASSIFICATION	4.7417995175307447E-5	IMPLEMENTATION
// Find power-of-two sizes best matching arguments	WITHOUT_CLASSIFICATION	0.9999698529967211	WITHOUT_CLASSIFICATION	3.014700327889656E-5	IMPLEMENTATION
// note segmentShift differs from ConcurrentHashMap's calculation due to // issues with System.identityHashCode (upper n bits always 0, at least  // under Java 1.6 / WinXP)	WITHOUT_CLASSIFICATION	0.9999854390348092	WITHOUT_CLASSIFICATION	1.4560965190815907E-5	IMPLEMENTATION
//      System.err.println("***ObjectProxyCache " + id + " started at "+ new java.util.Date());	WITHOUT_CLASSIFICATION	0.9999716876452641	WITHOUT_CLASSIFICATION	2.831235473592878E-5	IMPLEMENTATION
//    protected void finalize() throws Throwable { //        System.err.println("***ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); //    }	WITHOUT_CLASSIFICATION	0.9999852756101609	WITHOUT_CLASSIFICATION	1.4724389839111904E-5	IMPLEMENTATION
// EntryRefs include hash with key to facilitate lookup by Segment#expunge // after ref is removed from ReferenceQueue	WITHOUT_CLASSIFICATION	0.9998494027666929	WITHOUT_CLASSIFICATION	1.5059723330705505E-4	IMPLEMENTATION
// Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather // makes it a final field.  The theory is that doing so should force a happens-before // relationship WRT the WeakReference constructor, guaranteeing that the key will be // visibile to other threads (unless it's been GC'ed).  See JLS 17.5 (final fields) and // 17.4.5 (Happens-before order) to confirm or refute my reasoning here.	WITHOUT_CLASSIFICATION	0.9999973110682783	WITHOUT_CLASSIFICATION	2.688931721759784E-6	IMPLEMENTATION
// references to the Java object and its proxy will either both be // weak or both be soft, since the proxy contains a strong reference // to the object, so it wouldn't make sense for the reference types // to differ.	WITHOUT_CLASSIFICATION	0.999998165605535	WITHOUT_CLASSIFICATION	1.8343944649792362E-6	IMPLEMENTATION
// ctor used by remove/rehash	WITHOUT_CLASSIFICATION	0.9999365679889678	WITHOUT_CLASSIFICATION	6.343201103213061E-5	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999675711533588	WITHOUT_CLASSIFICATION	3.242884664123573E-5	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999675711533588	WITHOUT_CLASSIFICATION	3.242884664123573E-5	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999675711533588	WITHOUT_CLASSIFICATION	3.242884664123573E-5	IMPLEMENTATION
// note that we'll potentially see the refs for both the java object and // proxy -- whichever we see first will cause the entry to be removed; // the other will not match an entry and will be ignored.	WITHOUT_CLASSIFICATION	0.9999968462448864	WITHOUT_CLASSIFICATION	3.1537551135438056E-6	IMPLEMENTATION
// temp method to verify tableSize value // must be called under lock	WITHOUT_CLASSIFICATION	0.9999893685792666	WITHOUT_CLASSIFICATION	1.063142073345001E-5	IMPLEMENTATION
// Single node in list	WITHOUT_CLASSIFICATION	0.9999255989866588	WITHOUT_CLASSIFICATION	7.440101334112545E-5	IMPLEMENTATION
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999259488485233	WITHOUT_CLASSIFICATION	7.405115147667606E-5	IMPLEMENTATION
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999259488485233	WITHOUT_CLASSIFICATION	7.405115147667606E-5	IMPLEMENTATION
// entry exists, proxy has been gc'ed. replace entry.	WITHOUT_CLASSIFICATION	0.9999433787854424	WITHOUT_CLASSIFICATION	5.6621214557742896E-5	IMPLEMENTATION
// Where we get new positions from.	WITHOUT_CLASSIFICATION	0.9999549476000964	WITHOUT_CLASSIFICATION	4.505239990365475E-5	IMPLEMENTATION
// Start of string ([, (, {, <, ', ", \n) 	WITHOUT_CLASSIFICATION	0.9999712879671183	WITHOUT_CLASSIFICATION	2.871203288170028E-5	IMPLEMENTATION
// Number of newlines read from the reader	WITHOUT_CLASSIFICATION	0.9999778433938691	WITHOUT_CLASSIFICATION	2.2156606130953452E-5	IMPLEMENTATION
// How many bytes into the source are we?	WITHOUT_CLASSIFICATION	0.9999717506737641	WITHOUT_CLASSIFICATION	2.824932623590768E-5	IMPLEMENTATION
// For 'list' and only populated if list is not null.	WITHOUT_CLASSIFICATION	0.9999558270241286	WITHOUT_CLASSIFICATION	4.417297587142313E-5	IMPLEMENTATION
// Last full line read.	WITHOUT_CLASSIFICATION	0.9999198415374327	WITHOUT_CLASSIFICATION	8.015846256716784E-5	IMPLEMENTATION
// Save sourceLine for error reporting to display line where error occurred	WITHOUT_CLASSIFICATION	0.9999725485138828	WITHOUT_CLASSIFICATION	2.7451486117173413E-5	IMPLEMENTATION
// Get rest of line. lineBuffer filled as side-effect...	WITHOUT_CLASSIFICATION	0.999947414055836	WITHOUT_CLASSIFICATION	5.2585944163937644E-5	IMPLEMENTATION
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999452468931961	WITHOUT_CLASSIFICATION	5.475310680391341E-5	IMPLEMENTATION
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999452468931961	WITHOUT_CLASSIFICATION	5.475310680391341E-5	IMPLEMENTATION
// End of string (], ), }, >, ', ", \0)	WITHOUT_CLASSIFICATION	0.9999533815357976	WITHOUT_CLASSIFICATION	4.661846420242693E-5	IMPLEMENTATION
// How many strings are nested in the current string term	WITHOUT_CLASSIFICATION	0.9999921865172826	WITHOUT_CLASSIFICATION	7.813482717326587E-6	IMPLEMENTATION
// Single-quote fast path	WITHOUT_CLASSIFICATION	0.9999193094305099	WITHOUT_CLASSIFICATION	8.069056949012863E-5	IMPLEMENTATION
// Regexp engine 'java'	WITHOUT_CLASSIFICATION	0.999916820615409	WITHOUT_CLASSIFICATION	8.317938459094439E-5	IMPLEMENTATION
// Was a goto in original ruby lexer	WITHOUT_CLASSIFICATION	0.9999436444844584	WITHOUT_CLASSIFICATION	5.6355515541728826E-5	IMPLEMENTATION
/* just ignore */	WITHOUT_CLASSIFICATION	0.999961423953188	WITHOUT_CLASSIFICATION	3.857604681202277E-5	IMPLEMENTATION
/* octal constant */	WITHOUT_CLASSIFICATION	0.999913967804317	WITHOUT_CLASSIFICATION	8.603219568303948E-5	IMPLEMENTATION
/* hex constant */	WITHOUT_CLASSIFICATION	0.9999136842987529	WITHOUT_CLASSIFICATION	8.631570124705714E-5	IMPLEMENTATION
// PUSH(1)	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
// POP	WITHOUT_CLASSIFICATION	0.996375729199522	WITHOUT_CLASSIFICATION	0.003624270800478096	IMPLEMENTATION
// PUSH(0).  If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.	WITHOUT_CLASSIFICATION	0.9999079222343309	WITHOUT_CLASSIFICATION	9.207776566914298E-5	IMPLEMENTATION
// LEXPOP	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
// SET_P	WITHOUT_CLASSIFICATION	0.996368170929243	WITHOUT_CLASSIFICATION	0.003631829070756984	IMPLEMENTATION
// Marker delimiting heredoc boundary	WITHOUT_CLASSIFICATION	0.9999225185435896	WITHOUT_CLASSIFICATION	7.748145641038035E-5	IMPLEMENTATION
// Found end marker for this heredoc	WITHOUT_CLASSIFICATION	0.9999489245504385	WITHOUT_CLASSIFICATION	5.107544956154107E-5	IMPLEMENTATION
// Put back lastLine for any elements past start of heredoc marker	WITHOUT_CLASSIFICATION	0.999975790472055	WITHOUT_CLASSIFICATION	2.420952794501915E-5	IMPLEMENTATION
// Last token read via yylex().	WITHOUT_CLASSIFICATION	0.9999285506033903	WITHOUT_CLASSIFICATION	7.144939660968817E-5	IMPLEMENTATION
// Value of last token which had a value associated with it.	WITHOUT_CLASSIFICATION	0.9999816050469389	WITHOUT_CLASSIFICATION	1.83949530611283E-5	IMPLEMENTATION
// Stream of data that yylex() examines.	WITHOUT_CLASSIFICATION	0.9999421802969259	WITHOUT_CLASSIFICATION	5.781970307402541E-5	IMPLEMENTATION
// Used for tiny smidgen of grammar in lexer (see setParserSupport())	WITHOUT_CLASSIFICATION	0.999957458109077	WITHOUT_CLASSIFICATION	4.254189092310171E-5	IMPLEMENTATION
// Give a name to a value.  Enebo: This should be used more.	WITHOUT_CLASSIFICATION	0.9999343824921499	WITHOUT_CLASSIFICATION	6.561750785009834E-5	IMPLEMENTATION
// When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').	WITHOUT_CLASSIFICATION	0.9999679241583841	WITHOUT_CLASSIFICATION	3.2075841615804446E-5	IMPLEMENTATION
// Are we lexing Ruby 1.8 or 1.9+ syntax	WITHOUT_CLASSIFICATION	0.9999261004699248	WITHOUT_CLASSIFICATION	7.389953007517358E-5	IMPLEMENTATION
// Count of nested parentheses (1.9 only)	WITHOUT_CLASSIFICATION	0.9999242764120061	WITHOUT_CLASSIFICATION	7.572358799395609E-5	IMPLEMENTATION
// 1.9 only	WITHOUT_CLASSIFICATION	0.9998955649324311	WITHOUT_CLASSIFICATION	1.0443506756891177E-4	IMPLEMENTATION
// Short-hand (e.g. %{,%.,%!,... versus %Q{).	WITHOUT_CLASSIFICATION	0.9999227518832966	WITHOUT_CLASSIFICATION	7.724811670338345E-5	IMPLEMENTATION
// Long-hand (e.g. %Q{}).	WITHOUT_CLASSIFICATION	0.9999130727845907	WITHOUT_CLASSIFICATION	8.692721540926308E-5	IMPLEMENTATION
/* no mb || ismbchar(term)*/	WITHOUT_CLASSIFICATION	0.9999116850437273	WITHOUT_CLASSIFICATION	8.831495627266593E-5	IMPLEMENTATION
/*     * Not normally used, but is left in here since it can be useful in debugging     * grammar and lexing problems.     *     */	WITHOUT_CLASSIFICATION	0.9999720730287989	WITHOUT_CLASSIFICATION	2.792697120116053E-5	IMPLEMENTATION
// DEBUGGING HELP 	WITHOUT_CLASSIFICATION	0.9998955893558965	WITHOUT_CLASSIFICATION	1.0441064410352118E-4	IMPLEMENTATION
/* '\v' */	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
/* end of script. */	WITHOUT_CLASSIFICATION	0.9999282258144077	WITHOUT_CLASSIFICATION	7.177418559225972E-5	IMPLEMENTATION
/* white spaces */	WITHOUT_CLASSIFICATION	0.9999137234377052	WITHOUT_CLASSIFICATION	8.627656229473897E-5	IMPLEMENTATION
/* '\v' */	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
/* it's a comment */	WITHOUT_CLASSIFICATION	0.9999132968099619	WITHOUT_CLASSIFICATION	8.670319003811397E-5	IMPLEMENTATION
// Replace a string of newlines with a single one	WITHOUT_CLASSIFICATION	0.9999633477263246	WITHOUT_CLASSIFICATION	3.6652273675404015E-5	IMPLEMENTATION
/* $\: output record separator */	WITHOUT_CLASSIFICATION	0.9999581798529149	WITHOUT_CLASSIFICATION	4.182014708519084E-5	IMPLEMENTATION
// EOF (ENEBO: After default?	WITHOUT_CLASSIFICATION	0.999957625286049	WITHOUT_CLASSIFICATION	4.237471395091268E-5	IMPLEMENTATION
// documentation nodes	WITHOUT_CLASSIFICATION	0.9999475238393576	WITHOUT_CLASSIFICATION	5.247616064232994E-5	IMPLEMENTATION
// In case last next was the newline.	WITHOUT_CLASSIFICATION	0.9999654790800532	WITHOUT_CLASSIFICATION	3.452091994684463E-5	IMPLEMENTATION
// Just a plain bang	WITHOUT_CLASSIFICATION	0.9999180579586159	WITHOUT_CLASSIFICATION	8.19420413840721E-5	IMPLEMENTATION
/* $_: last read line string */	WITHOUT_CLASSIFICATION	0.9999581767341871	WITHOUT_CLASSIFICATION	4.182326581292987E-5	IMPLEMENTATION
/* $~: match-data */	WITHOUT_CLASSIFICATION	0.9999095846284118	WITHOUT_CLASSIFICATION	9.04153715881429E-5	IMPLEMENTATION
/* $*: argv */	WITHOUT_CLASSIFICATION	0.9998955649324311	WITHOUT_CLASSIFICATION	1.0443506756891177E-4	IMPLEMENTATION
/* $$: pid */	WITHOUT_CLASSIFICATION	0.9998955649324311	WITHOUT_CLASSIFICATION	1.0443506756891177E-4	IMPLEMENTATION
/* $?: last status */	WITHOUT_CLASSIFICATION	0.9999197107339928	WITHOUT_CLASSIFICATION	8.028926600723581E-5	IMPLEMENTATION
/* $!: error string */	WITHOUT_CLASSIFICATION	0.9999443987289444	WITHOUT_CLASSIFICATION	5.560127105560706E-5	IMPLEMENTATION
/* $@: error position */	WITHOUT_CLASSIFICATION	0.9999469554999975	WITHOUT_CLASSIFICATION	5.3044500002537856E-5	IMPLEMENTATION
/* $/: input record separator */	WITHOUT_CLASSIFICATION	0.9999514170320835	WITHOUT_CLASSIFICATION	4.8582967916436356E-5	IMPLEMENTATION
/* $;: field separator */	WITHOUT_CLASSIFICATION	0.999947429152204	WITHOUT_CLASSIFICATION	5.257084779588921E-5	IMPLEMENTATION
/* $,: output field separator */	WITHOUT_CLASSIFICATION	0.9999614945721977	WITHOUT_CLASSIFICATION	3.8505427802234025E-5	IMPLEMENTATION
/* $.: last read line number */	WITHOUT_CLASSIFICATION	0.9999488095533646	WITHOUT_CLASSIFICATION	5.1190446635434396E-5	IMPLEMENTATION
/* $=: ignorecase */	WITHOUT_CLASSIFICATION	0.9999560683091294	WITHOUT_CLASSIFICATION	4.393169087054783E-5	IMPLEMENTATION
/* $:: load path */	WITHOUT_CLASSIFICATION	0.9999041975815292	WITHOUT_CLASSIFICATION	9.580241847079799E-5	IMPLEMENTATION
/* $<: reading filename */	WITHOUT_CLASSIFICATION	0.9999374795990769	WITHOUT_CLASSIFICATION	6.252040092317867E-5	IMPLEMENTATION
/* $": already loaded files */	WITHOUT_CLASSIFICATION	0.9999565094371333	WITHOUT_CLASSIFICATION	4.349056286658905E-5	IMPLEMENTATION
/* $&: last match */	WITHOUT_CLASSIFICATION	0.9999201847801824	WITHOUT_CLASSIFICATION	7.981521981752152E-5	IMPLEMENTATION
/* $`: string before last match */	WITHOUT_CLASSIFICATION	0.9999646127744384	WITHOUT_CLASSIFICATION	3.538722556160046E-5	IMPLEMENTATION
/* $': string after last match */	WITHOUT_CLASSIFICATION	0.9999626842642622	WITHOUT_CLASSIFICATION	3.731573573777549E-5	IMPLEMENTATION
// methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop	WITHOUT_CLASSIFICATION	0.9999574027882995	WITHOUT_CLASSIFICATION	4.2597211700506327E-5	IMPLEMENTATION
/* See if it is a reserved word.  */	WITHOUT_CLASSIFICATION	0.9999305488665589	WITHOUT_CLASSIFICATION	6.94511334410696E-5	IMPLEMENTATION
// enum lex_state	WITHOUT_CLASSIFICATION	0.9998964015965995	WITHOUT_CLASSIFICATION	1.0359840340039496E-4	IMPLEMENTATION
// block (primary)	WITHOUT_CLASSIFICATION	0.9998982178939999	WITHOUT_CLASSIFICATION	1.0178210600010234E-4	IMPLEMENTATION
// block (expr)	WITHOUT_CLASSIFICATION	0.9998963635383412	WITHOUT_CLASSIFICATION	1.0363646165876567E-4	IMPLEMENTATION
// hash	WITHOUT_CLASSIFICATION	0.9964686567894552	WITHOUT_CLASSIFICATION	0.0035313432105448734	IMPLEMENTATION
// ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.	WITHOUT_CLASSIFICATION	0.9997411983081416	WITHOUT_CLASSIFICATION	2.588016918584789E-4	IMPLEMENTATION
// FIXME: peek('u') utf8 stuff for 1.9	WITHOUT_CLASSIFICATION	0.9996732589619731	WITHOUT_CLASSIFICATION	3.267410380268555E-4	IMPLEMENTATION
// We don't append '+' since Java number parser gets confused	WITHOUT_CLASSIFICATION	0.9999773239391407	WITHOUT_CLASSIFICATION	2.2676060859321778E-5	IMPLEMENTATION
//  hexadecimal	WITHOUT_CLASSIFICATION	0.9998967721111539	WITHOUT_CLASSIFICATION	1.0322788884619878E-4	IMPLEMENTATION
// binary	WITHOUT_CLASSIFICATION	0.9966860215880141	WITHOUT_CLASSIFICATION	0.003313978411985956	IMPLEMENTATION
// decimal	WITHOUT_CLASSIFICATION	0.9965147233608946	WITHOUT_CLASSIFICATION	0.0034852766391054333	IMPLEMENTATION
//Octal	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
//  '_' in number just ignored	WITHOUT_CLASSIFICATION	0.9999873043421035	WITHOUT_CLASSIFICATION	1.2695657896488904E-5	IMPLEMENTATION
// backslash	WITHOUT_CLASSIFICATION	0.999907411499278	WITHOUT_CLASSIFICATION	9.258850072208595E-5	IMPLEMENTATION
// newline	WITHOUT_CLASSIFICATION	0.9970858817440814	WITHOUT_CLASSIFICATION	0.0029141182559186568	IMPLEMENTATION
// horizontal tab	WITHOUT_CLASSIFICATION	0.9999393391700798	WITHOUT_CLASSIFICATION	6.066082992018444E-5	IMPLEMENTATION
// form feed	WITHOUT_CLASSIFICATION	0.9999140717059042	WITHOUT_CLASSIFICATION	8.592829409585995E-5	IMPLEMENTATION
// vertical tab	WITHOUT_CLASSIFICATION	0.9999362159684023	WITHOUT_CLASSIFICATION	6.378403159773006E-5	IMPLEMENTATION
// alarm(bell)	WITHOUT_CLASSIFICATION	0.9998955649324311	WITHOUT_CLASSIFICATION	1.0443506756891177E-4	IMPLEMENTATION
// escape	WITHOUT_CLASSIFICATION	0.9964640828037401	WITHOUT_CLASSIFICATION	0.0035359171962599453	IMPLEMENTATION
// hex constant	WITHOUT_CLASSIFICATION	0.9999120952924283	WITHOUT_CLASSIFICATION	8.790470757160472E-5	IMPLEMENTATION
//char hexValue = scanHex(2);	WITHOUT_CLASSIFICATION	0.9999135964833564	WITHOUT_CLASSIFICATION	8.640351664356021E-5	IMPLEMENTATION
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999388329582702	WITHOUT_CLASSIFICATION	6.116704172976978E-5	IMPLEMENTATION
// space	WITHOUT_CLASSIFICATION	0.9966059659743746	WITHOUT_CLASSIFICATION	0.0033940340256253675	IMPLEMENTATION
// Where we started this marker match	WITHOUT_CLASSIFICATION	0.9999310886011824	WITHOUT_CLASSIFICATION	6.891139881758596E-5	IMPLEMENTATION
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999987606273372	WITHOUT_CLASSIFICATION	1.2393726628661713E-6	IMPLEMENTATION
// We use offset here to keep track of extra newlines for windows	WITHOUT_CLASSIFICATION	0.9999545053688866	WITHOUT_CLASSIFICATION	4.549463111344459E-5	IMPLEMENTATION
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999388329582702	WITHOUT_CLASSIFICATION	6.116704172976978E-5	IMPLEMENTATION
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9997485301466325	WITHOUT_CLASSIFICATION	2.514698533676037E-4	IMPLEMENTATION
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9997485301466325	WITHOUT_CLASSIFICATION	2.514698533676037E-4	IMPLEMENTATION
// Where we get our newest char's	WITHOUT_CLASSIFICATION	0.9999327482517911	WITHOUT_CLASSIFICATION	6.725174820877899E-5	IMPLEMENTATION
// Our readback/pushback buffer.	WITHOUT_CLASSIFICATION	0.9999229433011807	WITHOUT_CLASSIFICATION	7.705669881930856E-5	IMPLEMENTATION
// index of last character in pushback buffer	WITHOUT_CLASSIFICATION	0.9999647692275866	WITHOUT_CLASSIFICATION	3.523077241337421E-5	IMPLEMENTATION
// Character read before previous read	WITHOUT_CLASSIFICATION	0.999971187296023	WITHOUT_CLASSIFICATION	2.8812703977029975E-5	IMPLEMENTATION
// keep value of twoAgo around so we can restore after we unread	WITHOUT_CLASSIFICATION	0.9999684526249364	WITHOUT_CLASSIFICATION	3.1547375063544006E-5	IMPLEMENTATION
// NetProtocolBufferedIOLibrary	WITHOUT_CLASSIFICATION	0.9999262565094871	WITHOUT_CLASSIFICATION	7.374349051291712E-5	IMPLEMENTATION
// BigDecimalLibrary	WITHOUT_CLASSIFICATION	0.9998971406316279	WITHOUT_CLASSIFICATION	1.0285936837204156E-4	IMPLEMENTATION
// TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. // We did it here for now	WITHOUT_CLASSIFICATION	0.9261891201234326	WITHOUT_CLASSIFICATION	0.07381087987656744	IMPLEMENTATION
// Ruby's designation for some platforms, minus version numbers in some cases	WITHOUT_CLASSIFICATION	0.9999650970727977	WITHOUT_CLASSIFICATION	3.490292720221161E-5	IMPLEMENTATION
// that's what JDK5 produces on Windows Vista	WITHOUT_CLASSIFICATION	0.9999313515784859	WITHOUT_CLASSIFICATION	6.864842151409545E-5	IMPLEMENTATION
// Rubygems is too specific on host cpu so until we have real need lets default to universal //setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));	WITHOUT_CLASSIFICATION	0.9999912627744136	WITHOUT_CLASSIFICATION	8.737225586387401E-6	IMPLEMENTATION
// Our shell scripts pass in non-canonicalized paths, but even if we didn't // anyone who did would become unhappy because Ruby apps expect no relative // operators in the pathname (rubygems, for example).	WITHOUT_CLASSIFICATION	0.9999910315737525	WITHOUT_CLASSIFICATION	8.968426247413543E-6	IMPLEMENTATION
// this set is only for darwin	WITHOUT_CLASSIFICATION	0.9999535644799827	WITHOUT_CLASSIFICATION	4.6435520017257755E-5	IMPLEMENTATION
// DigestLibrary	WITHOUT_CLASSIFICATION	0.999896358784759	WITHOUT_CLASSIFICATION	1.0364121524096364E-4	IMPLEMENTATION
// all errors, just info; do not prevent loading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9998829646255699	WITHOUT_CLASSIFICATION	1.170353744301686E-4	IMPLEMENTATION
// all errors, just info; do not prevent unloading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9999217275493946	WITHOUT_CLASSIFICATION	7.827245060542798E-5	IMPLEMENTATION
// do nothing, return dummy version below	WITHOUT_CLASSIFICATION	0.99999259451268	WITHOUT_CLASSIFICATION	7.405487320022719E-6	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9998955649324311	WITHOUT_CLASSIFICATION	1.0443506756891177E-4	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9998955649324311	WITHOUT_CLASSIFICATION	1.0443506756891177E-4	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9998955649324311	WITHOUT_CLASSIFICATION	1.0443506756891177E-4	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9998955649324311	WITHOUT_CLASSIFICATION	1.0443506756891177E-4	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9998955649324311	WITHOUT_CLASSIFICATION	1.0443506756891177E-4	IMPLEMENTATION
// line 329	WITHOUT_CLASSIFICATION	0.9999250208232384	WITHOUT_CLASSIFICATION	7.497917676152598E-5	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999631253470339	WITHOUT_CLASSIFICATION	3.687465296612205E-5	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9998946064448642	WITHOUT_CLASSIFICATION	1.0539355513591248E-4	IMPLEMENTATION
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999317321137433	WITHOUT_CLASSIFICATION	6.826788625669226E-5	IMPLEMENTATION
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9999769181870807	WITHOUT_CLASSIFICATION	2.3081812919374134E-5	IMPLEMENTATION
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999665999541543	WITHOUT_CLASSIFICATION	3.3400045845739476E-5	IMPLEMENTATION
// shift to yyN	WITHOUT_CLASSIFICATION	0.9998973608654952	WITHOUT_CLASSIFICATION	1.0263913450481415E-4	IMPLEMENTATION
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9998977372264964	WITHOUT_CLASSIFICATION	1.0226277350366012E-4	IMPLEMENTATION
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999095848305296	WITHOUT_CLASSIFICATION	9.041516947031814E-5	IMPLEMENTATION
// line 271	WITHOUT_CLASSIFICATION	0.9999254100583856	WITHOUT_CLASSIFICATION	7.458994161434433E-5	IMPLEMENTATION
// line 274	WITHOUT_CLASSIFICATION	0.9999254100583856	WITHOUT_CLASSIFICATION	7.458994161434433E-5	IMPLEMENTATION
// line 303	WITHOUT_CLASSIFICATION	0.9999250208232384	WITHOUT_CLASSIFICATION	7.497917676152598E-5	IMPLEMENTATION
// line 311	WITHOUT_CLASSIFICATION	0.9999250468632185	WITHOUT_CLASSIFICATION	7.495313678153052E-5	IMPLEMENTATION
// line 314	WITHOUT_CLASSIFICATION	0.9999250468632185	WITHOUT_CLASSIFICATION	7.495313678153052E-5	IMPLEMENTATION
// line 317	WITHOUT_CLASSIFICATION	0.9999250815691255	WITHOUT_CLASSIFICATION	7.491843087440522E-5	IMPLEMENTATION
// line 332	WITHOUT_CLASSIFICATION	0.9999250208232384	WITHOUT_CLASSIFICATION	7.497917676152598E-5	IMPLEMENTATION
// line 338	WITHOUT_CLASSIFICATION	0.9999250208232384	WITHOUT_CLASSIFICATION	7.497917676152598E-5	IMPLEMENTATION
// line 341	WITHOUT_CLASSIFICATION	0.9999250208232384	WITHOUT_CLASSIFICATION	7.497917676152598E-5	IMPLEMENTATION
// line 344	WITHOUT_CLASSIFICATION	0.9999250208232384	WITHOUT_CLASSIFICATION	7.497917676152598E-5	IMPLEMENTATION
// line 351	WITHOUT_CLASSIFICATION	0.9999250208232384	WITHOUT_CLASSIFICATION	7.497917676152598E-5	IMPLEMENTATION
// line 358	WITHOUT_CLASSIFICATION	0.9999250208232384	WITHOUT_CLASSIFICATION	7.497917676152598E-5	IMPLEMENTATION
// line 367	WITHOUT_CLASSIFICATION	0.9999250208232384	WITHOUT_CLASSIFICATION	7.497917676152598E-5	IMPLEMENTATION
// line 372	WITHOUT_CLASSIFICATION	0.9999250208232384	WITHOUT_CLASSIFICATION	7.497917676152598E-5	IMPLEMENTATION
// line 378	WITHOUT_CLASSIFICATION	0.9999250208232384	WITHOUT_CLASSIFICATION	7.497917676152598E-5	IMPLEMENTATION
// line 382	WITHOUT_CLASSIFICATION	0.9999250208232384	WITHOUT_CLASSIFICATION	7.497917676152598E-5	IMPLEMENTATION
// line 407	WITHOUT_CLASSIFICATION	0.9999250034582264	WITHOUT_CLASSIFICATION	7.499654177355423E-5	IMPLEMENTATION
// line 411	WITHOUT_CLASSIFICATION	0.9999250034582264	WITHOUT_CLASSIFICATION	7.499654177355423E-5	IMPLEMENTATION
// line 414	WITHOUT_CLASSIFICATION	0.9999250034582264	WITHOUT_CLASSIFICATION	7.499654177355423E-5	IMPLEMENTATION
// line 417	WITHOUT_CLASSIFICATION	0.9999250034582264	WITHOUT_CLASSIFICATION	7.499654177355423E-5	IMPLEMENTATION
// line 420	WITHOUT_CLASSIFICATION	0.9999250034582264	WITHOUT_CLASSIFICATION	7.499654177355423E-5	IMPLEMENTATION
// line 426	WITHOUT_CLASSIFICATION	0.9999250034582264	WITHOUT_CLASSIFICATION	7.499654177355423E-5	IMPLEMENTATION
// line 434	WITHOUT_CLASSIFICATION	0.9999250034582264	WITHOUT_CLASSIFICATION	7.499654177355423E-5	IMPLEMENTATION
// line 443	WITHOUT_CLASSIFICATION	0.9999250034582264	WITHOUT_CLASSIFICATION	7.499654177355423E-5	IMPLEMENTATION
// line 446	WITHOUT_CLASSIFICATION	0.9999250034582264	WITHOUT_CLASSIFICATION	7.499654177355423E-5	IMPLEMENTATION
// line 452	WITHOUT_CLASSIFICATION	0.9999250034582264	WITHOUT_CLASSIFICATION	7.499654177355423E-5	IMPLEMENTATION
// line 457	WITHOUT_CLASSIFICATION	0.9999250034582264	WITHOUT_CLASSIFICATION	7.499654177355423E-5	IMPLEMENTATION
// line 464	WITHOUT_CLASSIFICATION	0.9999250034582264	WITHOUT_CLASSIFICATION	7.499654177355423E-5	IMPLEMENTATION
// line 467	WITHOUT_CLASSIFICATION	0.9999250034582264	WITHOUT_CLASSIFICATION	7.499654177355423E-5	IMPLEMENTATION
// line 470	WITHOUT_CLASSIFICATION	0.9999250034582264	WITHOUT_CLASSIFICATION	7.499654177355423E-5	IMPLEMENTATION
// line 479	WITHOUT_CLASSIFICATION	0.9999250034582264	WITHOUT_CLASSIFICATION	7.499654177355423E-5	IMPLEMENTATION
// line 484	WITHOUT_CLASSIFICATION	0.9999250034582264	WITHOUT_CLASSIFICATION	7.499654177355423E-5	IMPLEMENTATION
// line 486	WITHOUT_CLASSIFICATION	0.9999250034582264	WITHOUT_CLASSIFICATION	7.499654177355423E-5	IMPLEMENTATION
// line 492	WITHOUT_CLASSIFICATION	0.9999250034582264	WITHOUT_CLASSIFICATION	7.499654177355423E-5	IMPLEMENTATION
// line 498	WITHOUT_CLASSIFICATION	0.9999250034582264	WITHOUT_CLASSIFICATION	7.499654177355423E-5	IMPLEMENTATION
// line 501	WITHOUT_CLASSIFICATION	0.9999250034582264	WITHOUT_CLASSIFICATION	7.499654177355423E-5	IMPLEMENTATION
// line 504	WITHOUT_CLASSIFICATION	0.9999250034582264	WITHOUT_CLASSIFICATION	7.499654177355423E-5	IMPLEMENTATION
// line 507	WITHOUT_CLASSIFICATION	0.9999250034582264	WITHOUT_CLASSIFICATION	7.499654177355423E-5	IMPLEMENTATION
// line 510	WITHOUT_CLASSIFICATION	0.9999250034582264	WITHOUT_CLASSIFICATION	7.499654177355423E-5	IMPLEMENTATION
// line 519	WITHOUT_CLASSIFICATION	0.9999250034582264	WITHOUT_CLASSIFICATION	7.499654177355423E-5	IMPLEMENTATION
// line 525	WITHOUT_CLASSIFICATION	0.9999250034582264	WITHOUT_CLASSIFICATION	7.499654177355423E-5	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9998946064448642	WITHOUT_CLASSIFICATION	1.0539355513591248E-4	IMPLEMENTATION
// line 537	WITHOUT_CLASSIFICATION	0.9999250034582264	WITHOUT_CLASSIFICATION	7.499654177355423E-5	IMPLEMENTATION
// line 540	WITHOUT_CLASSIFICATION	0.9999250034582264	WITHOUT_CLASSIFICATION	7.499654177355423E-5	IMPLEMENTATION
// line 543	WITHOUT_CLASSIFICATION	0.9999250034582264	WITHOUT_CLASSIFICATION	7.499654177355423E-5	IMPLEMENTATION
// line 546	WITHOUT_CLASSIFICATION	0.9999250034582264	WITHOUT_CLASSIFICATION	7.499654177355423E-5	IMPLEMENTATION
// line 556	WITHOUT_CLASSIFICATION	0.9999250034582264	WITHOUT_CLASSIFICATION	7.499654177355423E-5	IMPLEMENTATION
// line 559	WITHOUT_CLASSIFICATION	0.9999250034582264	WITHOUT_CLASSIFICATION	7.499654177355423E-5	IMPLEMENTATION
// line 563	WITHOUT_CLASSIFICATION	0.9999250034582264	WITHOUT_CLASSIFICATION	7.499654177355423E-5	IMPLEMENTATION
// line 566	WITHOUT_CLASSIFICATION	0.9999250034582264	WITHOUT_CLASSIFICATION	7.499654177355423E-5	IMPLEMENTATION
// line 569	WITHOUT_CLASSIFICATION	0.9999250034582264	WITHOUT_CLASSIFICATION	7.499654177355423E-5	IMPLEMENTATION
// line 575	WITHOUT_CLASSIFICATION	0.9999250034582264	WITHOUT_CLASSIFICATION	7.499654177355423E-5	IMPLEMENTATION
// line 578	WITHOUT_CLASSIFICATION	0.9999250034582264	WITHOUT_CLASSIFICATION	7.499654177355423E-5	IMPLEMENTATION
// line 587	WITHOUT_CLASSIFICATION	0.9999250034582264	WITHOUT_CLASSIFICATION	7.499654177355423E-5	IMPLEMENTATION
// line 596	WITHOUT_CLASSIFICATION	0.9999250034582264	WITHOUT_CLASSIFICATION	7.499654177355423E-5	IMPLEMENTATION
// line 604	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 607	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 610	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 613	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 616	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 634	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 638	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 643	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 646	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 655	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 660	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 667	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 670	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 672	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 696	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 701	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 717	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 720	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 726	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 729	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 732	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 735	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 738	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 751	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 754	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 757	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 760	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 763	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 769	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 772	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 775	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 782	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 788	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 791	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 794	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 797	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 803	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 806	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 809	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 815	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 818	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 821	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 824	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 830	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 833	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 836	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 839	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 842	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 848	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 852	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 858	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 861	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 868	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 871	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 876	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 879	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 883	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 893	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 896	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 899	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 903	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 907	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 915	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 920	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 923	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 926	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 932	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 936	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 940	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 944	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 948	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 956	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 960	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 964	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 967	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 972	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 978	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 980	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 984	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 986	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 996	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 1001	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1004	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1008	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1014	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1029	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1032	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1034	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1045	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1048	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1051	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1058	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1070	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1073	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1076	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1079	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1082	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1089	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1097	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1100	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1103	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1107	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1111	WITHOUT_CLASSIFICATION	0.9999256241455842	WITHOUT_CLASSIFICATION	7.43758544158916E-5	IMPLEMENTATION
// line 1113	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1115	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1119	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1130	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1133	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1135	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1137	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1140	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1151	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1154	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1158	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1164	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1175	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1178	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1187	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1189	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1193	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1204	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1207	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1210	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1214	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1234	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1239	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1243	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1247	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1251	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1263	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1269	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1280	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1283	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1290	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1296	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1299	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1302	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1309	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1313	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1315	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1320	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1328	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1335	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1348	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1352	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1358	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1374	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1381	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1387	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1392	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1415	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1431	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1434	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1440	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1443	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1453	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1456	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1462	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1465	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1470	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1477	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1480	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1485	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1488	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1496	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1502	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1510	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1513	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1516	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1533	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1550	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1553	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1556	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1565	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1568	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1571	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1574	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1577	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1587	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1595	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1598	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1600	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1609	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1623	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1626	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1629	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1632	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1638	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1641	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1644	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1649	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1655	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1658	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1661	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1672	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1677	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1687	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1694	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1705	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1708	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1725	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1733	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1742	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1745	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1749	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1757	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1769	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1772	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1775	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1784	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1808	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1814	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1818	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1822	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
/* force for args */	WITHOUT_CLASSIFICATION	0.9999105014437526	WITHOUT_CLASSIFICATION	8.949855624735227E-5	IMPLEMENTATION
/*XXX 0;*/	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
/*                      $$ = $3;*/	WITHOUT_CLASSIFICATION	0.9999750191639616	WITHOUT_CLASSIFICATION	2.498083603838071E-5	IMPLEMENTATION
/*                  }*/	WITHOUT_CLASSIFICATION	0.9999743504270678	WITHOUT_CLASSIFICATION	2.564957293210478E-5	IMPLEMENTATION
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9999147139602765	WITHOUT_CLASSIFICATION	8.528603972348573E-5	IMPLEMENTATION
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9999595084993459	WITHOUT_CLASSIFICATION	4.0491500654146784E-5	IMPLEMENTATION
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9999343977915103	WITHOUT_CLASSIFICATION	6.560220848975436E-5	IMPLEMENTATION
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9999343977915103	WITHOUT_CLASSIFICATION	6.560220848975436E-5	IMPLEMENTATION
/* NOEX_PRIVATE for toplevel */	WITHOUT_CLASSIFICATION	0.999923083881552	WITHOUT_CLASSIFICATION	7.691611844798167E-5	IMPLEMENTATION
/*mirko: check*/	WITHOUT_CLASSIFICATION	0.9999056107398308	WITHOUT_CLASSIFICATION	9.43892601691842E-5	IMPLEMENTATION
/* Include pipes on multiple arg type*/	WITHOUT_CLASSIFICATION	0.999870026861889	WITHOUT_CLASSIFICATION	1.2997313811105728E-4	IMPLEMENTATION
// line 529	WITHOUT_CLASSIFICATION	0.9999250034582264	WITHOUT_CLASSIFICATION	7.499654177355423E-5	IMPLEMENTATION
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999128952131701	WITHOUT_CLASSIFICATION	8.710478682995862E-5	IMPLEMENTATION
/* XXX*/	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999394708262366	WITHOUT_CLASSIFICATION	6.052917376338422E-5	IMPLEMENTATION
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.999905796303437	WITHOUT_CLASSIFICATION	9.420369656294199E-5	IMPLEMENTATION
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9999081198275093	WITHOUT_CLASSIFICATION	9.1880172490742E-5	IMPLEMENTATION
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999064038713903	WITHOUT_CLASSIFICATION	9.359612860970633E-5	IMPLEMENTATION
// line 1827 "DefaultRubyParser.y"	WITHOUT_CLASSIFICATION	0.9999578664680402	WITHOUT_CLASSIFICATION	4.2133531959768686E-5	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999943545071801	WITHOUT_CLASSIFICATION	5.645492819909188E-6	IMPLEMENTATION
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999139410201267	WITHOUT_CLASSIFICATION	8.605897987344464E-5	IMPLEMENTATION
// line 7713 "-"	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// local scopes are argument scopes by default	WITHOUT_CLASSIFICATION	0.9999908350025128	WITHOUT_CLASSIFICATION	9.164997487070131E-6	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999676865335485	WITHOUT_CLASSIFICATION	3.2313466451459496E-5	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999676865335485	WITHOUT_CLASSIFICATION	3.2313466451459496E-5	IMPLEMENTATION
// We know this is a block scope because a local scope cannot be within a local scope // If topScope was itself it would have created a LocalAsgnNode above.	WITHOUT_CLASSIFICATION	0.999990229445251	WITHOUT_CLASSIFICATION	9.770554748996825E-6	IMPLEMENTATION
// ENEBO: 1.9 has CURR nodes for local/block variables.  We don't.  I believe we follow proper logic	WITHOUT_CLASSIFICATION	0.999957971692606	WITHOUT_CLASSIFICATION	4.202830739395579E-5	IMPLEMENTATION
// odd...but it is odd in ruby too.	WITHOUT_CLASSIFICATION	0.9999237505730064	WITHOUT_CLASSIFICATION	7.62494269935538E-5	IMPLEMENTATION
// What linenumber will the source think it starts from?	WITHOUT_CLASSIFICATION	0.9999685102094034	WITHOUT_CLASSIFICATION	3.148979059667201E-5	IMPLEMENTATION
// Is this inline source (aka -e "...source...")	WITHOUT_CLASSIFICATION	0.9999104816142009	WITHOUT_CLASSIFICATION	8.9518385799059E-5	IMPLEMENTATION
// We parse evals more often in source so assume an eval parse.	WITHOUT_CLASSIFICATION	0.9999490613486083	WITHOUT_CLASSIFICATION	5.093865139170108E-5	IMPLEMENTATION
// Should positions added extra IDE-friendly information and leave in all newline nodes	WITHOUT_CLASSIFICATION	0.9999859276247496	WITHOUT_CLASSIFICATION	1.4072375250389977E-5	IMPLEMENTATION
// Will parser parse Duby grammar Extensions	WITHOUT_CLASSIFICATION	0.9999408383122849	WITHOUT_CLASSIFICATION	5.916168771526015E-5	IMPLEMENTATION
// Should we display extra debug information while parsing?	WITHOUT_CLASSIFICATION	0.9999480936919887	WITHOUT_CLASSIFICATION	5.190630801129923E-5	IMPLEMENTATION
// __END__ marker offset (-1 means none present)	WITHOUT_CLASSIFICATION	0.9999069989672758	WITHOUT_CLASSIFICATION	9.300103272427017E-5	IMPLEMENTATION
// Parser states:	WITHOUT_CLASSIFICATION	0.9999197598425361	WITHOUT_CLASSIFICATION	8.024015746387627E-5	IMPLEMENTATION
// Is the parser current within a singleton (value is number of nested singletons)	WITHOUT_CLASSIFICATION	0.999989312125933	WITHOUT_CLASSIFICATION	1.0687874067045814E-5	IMPLEMENTATION
// Is the parser currently within a method definition	WITHOUT_CLASSIFICATION	0.999963704605441	WITHOUT_CLASSIFICATION	3.629539455901763E-5	IMPLEMENTATION
// LOCALVAR	WITHOUT_CLASSIFICATION	0.9998956797113572	WITHOUT_CLASSIFICATION	1.043202886429032E-4	IMPLEMENTATION
// CONSTANT	WITHOUT_CLASSIFICATION	0.9998971469291895	WITHOUT_CLASSIFICATION	1.0285307081049955E-4	IMPLEMENTATION
// INSTANCE VARIABLE	WITHOUT_CLASSIFICATION	0.9998957893360572	WITHOUT_CLASSIFICATION	1.0421066394281347E-4	IMPLEMENTATION
// Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])	WITHOUT_CLASSIFICATION	0.9999686085384053	WITHOUT_CLASSIFICATION	3.139146159466405E-5	IMPLEMENTATION
/* MRI: block_append */	WITHOUT_CLASSIFICATION	0.9999127712918101	WITHOUT_CLASSIFICATION	8.722870818987762E-5	IMPLEMENTATION
// Reduces overhead in interp by not set position every single line we encounter. 	WITHOUT_CLASSIFICATION	0.9999608159390634	WITHOUT_CLASSIFICATION	3.918406093649226E-5	IMPLEMENTATION
// Assumption: tail is never a list node	WITHOUT_CLASSIFICATION	0.9998749559043562	WITHOUT_CLASSIFICATION	1.2504409564381025E-4	IMPLEMENTATION
//        return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));	WITHOUT_CLASSIFICATION	0.9999816685073101	WITHOUT_CLASSIFICATION	1.8331492689987533E-5	IMPLEMENTATION
// Node	WITHOUT_CLASSIFICATION	0.9963680174425942	WITHOUT_CLASSIFICATION	0.00363198255740573	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9997395581688815	WITHOUT_CLASSIFICATION	2.6044183111851216E-4	IMPLEMENTATION
/*case CONSTNODE:                handleUselessWarn(node, "a constant"); return;*/	WITHOUT_CLASSIFICATION	0.9999449556783278	WITHOUT_CLASSIFICATION	5.5044321672190136E-5	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9997395581688815	WITHOUT_CLASSIFICATION	2.6044183111851216E-4	IMPLEMENTATION
/*case CLASSNODE: case COLON2NODE:                handleUselessWarn(node, "::"); return;*/	WITHOUT_CLASSIFICATION	0.999943284605291	WITHOUT_CLASSIFICATION	5.671539470891797E-5	IMPLEMENTATION
/*case SELFNODE:                handleUselessWarn(node, "self"); return;*/	WITHOUT_CLASSIFICATION	0.9999343251988975	WITHOUT_CLASSIFICATION	6.567480110256212E-5	IMPLEMENTATION
// FIXME: DSTR,EVSTR,STR: warning "string literal in condition"	WITHOUT_CLASSIFICATION	0.9997928124506631	WITHOUT_CLASSIFICATION	2.0718754933683926E-4	IMPLEMENTATION
/* MRI: range_op */	WITHOUT_CLASSIFICATION	0.9999052813037301	WITHOUT_CLASSIFICATION	9.471869626988075E-5	IMPLEMENTATION
// Block and block pass passed in at same time....uh oh	WITHOUT_CLASSIFICATION	0.9999513161818122	WITHOUT_CLASSIFICATION	4.8683818187857765E-5	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.9963597676159426	WITHOUT_CLASSIFICATION	0.0036402323840574752	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.9963597676159426	WITHOUT_CLASSIFICATION	0.0036402323840574752	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.9963597676159426	WITHOUT_CLASSIFICATION	0.0036402323840574752	IMPLEMENTATION
// tail must be EvStrNode at this point 	WITHOUT_CLASSIFICATION	0.999945576585615	WITHOUT_CLASSIFICATION	5.442341438503949E-5	IMPLEMENTATION
//Do not add an empty string node	WITHOUT_CLASSIFICATION	0.9999805530942414	WITHOUT_CLASSIFICATION	1.9446905758625044E-5	IMPLEMENTATION
// Zero-Argument declaration	WITHOUT_CLASSIFICATION	0.9999456974218582	WITHOUT_CLASSIFICATION	5.430257814168116E-5	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9998955649324311	WITHOUT_CLASSIFICATION	1.0443506756891177E-4	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9998955649324311	WITHOUT_CLASSIFICATION	1.0443506756891177E-4	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9998955649324311	WITHOUT_CLASSIFICATION	1.0443506756891177E-4	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9998955649324311	WITHOUT_CLASSIFICATION	1.0443506756891177E-4	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9998955649324311	WITHOUT_CLASSIFICATION	1.0443506756891177E-4	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9998955649324311	WITHOUT_CLASSIFICATION	1.0443506756891177E-4	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9998955649324311	WITHOUT_CLASSIFICATION	1.0443506756891177E-4	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9998955649324311	WITHOUT_CLASSIFICATION	1.0443506756891177E-4	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9998955649324311	WITHOUT_CLASSIFICATION	1.0443506756891177E-4	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9998955649324311	WITHOUT_CLASSIFICATION	1.0443506756891177E-4	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9998955649324311	WITHOUT_CLASSIFICATION	1.0443506756891177E-4	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9998955649324311	WITHOUT_CLASSIFICATION	1.0443506756891177E-4	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9998955649324311	WITHOUT_CLASSIFICATION	1.0443506756891177E-4	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9998955649324311	WITHOUT_CLASSIFICATION	1.0443506756891177E-4	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9998955649324311	WITHOUT_CLASSIFICATION	1.0443506756891177E-4	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9998955649324311	WITHOUT_CLASSIFICATION	1.0443506756891177E-4	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9998955649324311	WITHOUT_CLASSIFICATION	1.0443506756891177E-4	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9998955649324311	WITHOUT_CLASSIFICATION	1.0443506756891177E-4	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9998955649324311	WITHOUT_CLASSIFICATION	1.0443506756891177E-4	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9998955649324311	WITHOUT_CLASSIFICATION	1.0443506756891177E-4	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9998955649324311	WITHOUT_CLASSIFICATION	1.0443506756891177E-4	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9998955649324311	WITHOUT_CLASSIFICATION	1.0443506756891177E-4	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9998946064448642	WITHOUT_CLASSIFICATION	1.0539355513591248E-4	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9998946064448642	WITHOUT_CLASSIFICATION	1.0539355513591248E-4	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9998946064448642	WITHOUT_CLASSIFICATION	1.0539355513591248E-4	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9998946064448642	WITHOUT_CLASSIFICATION	1.0539355513591248E-4	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9998946064448642	WITHOUT_CLASSIFICATION	1.0539355513591248E-4	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9998946064448642	WITHOUT_CLASSIFICATION	1.0539355513591248E-4	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9998946064448642	WITHOUT_CLASSIFICATION	1.0539355513591248E-4	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9998946064448642	WITHOUT_CLASSIFICATION	1.0539355513591248E-4	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9998946064448642	WITHOUT_CLASSIFICATION	1.0539355513591248E-4	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9998946064448642	WITHOUT_CLASSIFICATION	1.0539355513591248E-4	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9998946064448642	WITHOUT_CLASSIFICATION	1.0539355513591248E-4	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9998946064448642	WITHOUT_CLASSIFICATION	1.0539355513591248E-4	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9998946064448642	WITHOUT_CLASSIFICATION	1.0539355513591248E-4	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9998946064448642	WITHOUT_CLASSIFICATION	1.0539355513591248E-4	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9998946064448642	WITHOUT_CLASSIFICATION	1.0539355513591248E-4	IMPLEMENTATION
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999317321137433	WITHOUT_CLASSIFICATION	6.826788625669226E-5	IMPLEMENTATION
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999665999541543	WITHOUT_CLASSIFICATION	3.3400045845739476E-5	IMPLEMENTATION
// shift to yyN	WITHOUT_CLASSIFICATION	0.9998973608654952	WITHOUT_CLASSIFICATION	1.0263913450481415E-4	IMPLEMENTATION
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9998977372264964	WITHOUT_CLASSIFICATION	1.0226277350366012E-4	IMPLEMENTATION
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999095848305296	WITHOUT_CLASSIFICATION	9.041516947031814E-5	IMPLEMENTATION
// line 321	WITHOUT_CLASSIFICATION	0.9999250208232384	WITHOUT_CLASSIFICATION	7.497917676152598E-5	IMPLEMENTATION
// line 351	WITHOUT_CLASSIFICATION	0.9999250208232384	WITHOUT_CLASSIFICATION	7.497917676152598E-5	IMPLEMENTATION
// line 382	WITHOUT_CLASSIFICATION	0.9999250208232384	WITHOUT_CLASSIFICATION	7.497917676152598E-5	IMPLEMENTATION
// line 417	WITHOUT_CLASSIFICATION	0.9999250034582264	WITHOUT_CLASSIFICATION	7.499654177355423E-5	IMPLEMENTATION
// line 420	WITHOUT_CLASSIFICATION	0.9999250034582264	WITHOUT_CLASSIFICATION	7.499654177355423E-5	IMPLEMENTATION
// line 423	WITHOUT_CLASSIFICATION	0.9999250034582264	WITHOUT_CLASSIFICATION	7.499654177355423E-5	IMPLEMENTATION
// line 426	WITHOUT_CLASSIFICATION	0.9999250034582264	WITHOUT_CLASSIFICATION	7.499654177355423E-5	IMPLEMENTATION
// line 280	WITHOUT_CLASSIFICATION	0.9999254600506111	WITHOUT_CLASSIFICATION	7.453994938886602E-5	IMPLEMENTATION
// line 283	WITHOUT_CLASSIFICATION	0.999925431487729	WITHOUT_CLASSIFICATION	7.45685122709235E-5	IMPLEMENTATION
// line 296	WITHOUT_CLASSIFICATION	0.9999254100583856	WITHOUT_CLASSIFICATION	7.458994161434433E-5	IMPLEMENTATION
// line 324	WITHOUT_CLASSIFICATION	0.9999250208232384	WITHOUT_CLASSIFICATION	7.497917676152598E-5	IMPLEMENTATION
// line 327	WITHOUT_CLASSIFICATION	0.9999250208232384	WITHOUT_CLASSIFICATION	7.497917676152598E-5	IMPLEMENTATION
// line 331	WITHOUT_CLASSIFICATION	0.9999250208232384	WITHOUT_CLASSIFICATION	7.497917676152598E-5	IMPLEMENTATION
// line 333	WITHOUT_CLASSIFICATION	0.9999250208232384	WITHOUT_CLASSIFICATION	7.497917676152598E-5	IMPLEMENTATION
// line 336	WITHOUT_CLASSIFICATION	0.9999250208232384	WITHOUT_CLASSIFICATION	7.497917676152598E-5	IMPLEMENTATION
// line 342	WITHOUT_CLASSIFICATION	0.9999250208232384	WITHOUT_CLASSIFICATION	7.497917676152598E-5	IMPLEMENTATION
// line 345	WITHOUT_CLASSIFICATION	0.9999250208232384	WITHOUT_CLASSIFICATION	7.497917676152598E-5	IMPLEMENTATION
// line 348	WITHOUT_CLASSIFICATION	0.9999250208232384	WITHOUT_CLASSIFICATION	7.497917676152598E-5	IMPLEMENTATION
// line 354	WITHOUT_CLASSIFICATION	0.9999250208232384	WITHOUT_CLASSIFICATION	7.497917676152598E-5	IMPLEMENTATION
// line 368	WITHOUT_CLASSIFICATION	0.9999250208232384	WITHOUT_CLASSIFICATION	7.497917676152598E-5	IMPLEMENTATION
// line 377	WITHOUT_CLASSIFICATION	0.9999250208232384	WITHOUT_CLASSIFICATION	7.497917676152598E-5	IMPLEMENTATION
// line 388	WITHOUT_CLASSIFICATION	0.9999250208232384	WITHOUT_CLASSIFICATION	7.497917676152598E-5	IMPLEMENTATION
// line 392	WITHOUT_CLASSIFICATION	0.9999250208232384	WITHOUT_CLASSIFICATION	7.497917676152598E-5	IMPLEMENTATION
// line 397	WITHOUT_CLASSIFICATION	0.9999250208232384	WITHOUT_CLASSIFICATION	7.497917676152598E-5	IMPLEMENTATION
// line 429	WITHOUT_CLASSIFICATION	0.9999250034582264	WITHOUT_CLASSIFICATION	7.499654177355423E-5	IMPLEMENTATION
// line 432	WITHOUT_CLASSIFICATION	0.9999250034582264	WITHOUT_CLASSIFICATION	7.499654177355423E-5	IMPLEMENTATION
// line 436	WITHOUT_CLASSIFICATION	0.9999250034582264	WITHOUT_CLASSIFICATION	7.499654177355423E-5	IMPLEMENTATION
// line 445	WITHOUT_CLASSIFICATION	0.9999250034582264	WITHOUT_CLASSIFICATION	7.499654177355423E-5	IMPLEMENTATION
// line 448	WITHOUT_CLASSIFICATION	0.9999250034582264	WITHOUT_CLASSIFICATION	7.499654177355423E-5	IMPLEMENTATION
// line 454	WITHOUT_CLASSIFICATION	0.9999250034582264	WITHOUT_CLASSIFICATION	7.499654177355423E-5	IMPLEMENTATION
// line 459	WITHOUT_CLASSIFICATION	0.9999250034582264	WITHOUT_CLASSIFICATION	7.499654177355423E-5	IMPLEMENTATION
// line 466	WITHOUT_CLASSIFICATION	0.9999250034582264	WITHOUT_CLASSIFICATION	7.499654177355423E-5	IMPLEMENTATION
// line 469	WITHOUT_CLASSIFICATION	0.9999250034582264	WITHOUT_CLASSIFICATION	7.499654177355423E-5	IMPLEMENTATION
// line 478	WITHOUT_CLASSIFICATION	0.9999250034582264	WITHOUT_CLASSIFICATION	7.499654177355423E-5	IMPLEMENTATION
// line 481	WITHOUT_CLASSIFICATION	0.9999250034582264	WITHOUT_CLASSIFICATION	7.499654177355423E-5	IMPLEMENTATION
// line 488	WITHOUT_CLASSIFICATION	0.9999250034582264	WITHOUT_CLASSIFICATION	7.499654177355423E-5	IMPLEMENTATION
// line 494	WITHOUT_CLASSIFICATION	0.9999250034582264	WITHOUT_CLASSIFICATION	7.499654177355423E-5	IMPLEMENTATION
// line 497	WITHOUT_CLASSIFICATION	0.9999250034582264	WITHOUT_CLASSIFICATION	7.499654177355423E-5	IMPLEMENTATION
// line 503	WITHOUT_CLASSIFICATION	0.9999250034582264	WITHOUT_CLASSIFICATION	7.499654177355423E-5	IMPLEMENTATION
// line 506	WITHOUT_CLASSIFICATION	0.9999250034582264	WITHOUT_CLASSIFICATION	7.499654177355423E-5	IMPLEMENTATION
// line 509	WITHOUT_CLASSIFICATION	0.9999250034582264	WITHOUT_CLASSIFICATION	7.499654177355423E-5	IMPLEMENTATION
// line 512	WITHOUT_CLASSIFICATION	0.9999250034582264	WITHOUT_CLASSIFICATION	7.499654177355423E-5	IMPLEMENTATION
// line 521	WITHOUT_CLASSIFICATION	0.9999250034582264	WITHOUT_CLASSIFICATION	7.499654177355423E-5	IMPLEMENTATION
// line 526	WITHOUT_CLASSIFICATION	0.9999250034582264	WITHOUT_CLASSIFICATION	7.499654177355423E-5	IMPLEMENTATION
// line 540	WITHOUT_CLASSIFICATION	0.9999250034582264	WITHOUT_CLASSIFICATION	7.499654177355423E-5	IMPLEMENTATION
// line 543	WITHOUT_CLASSIFICATION	0.9999250034582264	WITHOUT_CLASSIFICATION	7.499654177355423E-5	IMPLEMENTATION
// line 546	WITHOUT_CLASSIFICATION	0.9999250034582264	WITHOUT_CLASSIFICATION	7.499654177355423E-5	IMPLEMENTATION
// line 566	WITHOUT_CLASSIFICATION	0.9999250034582264	WITHOUT_CLASSIFICATION	7.499654177355423E-5	IMPLEMENTATION
// line 610	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 672	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 691	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 696	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 772	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 782	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 785	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 788	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 791	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 534	WITHOUT_CLASSIFICATION	0.9999250034582264	WITHOUT_CLASSIFICATION	7.499654177355423E-5	IMPLEMENTATION
// line 549	WITHOUT_CLASSIFICATION	0.9999250034582264	WITHOUT_CLASSIFICATION	7.499654177355423E-5	IMPLEMENTATION
// line 552	WITHOUT_CLASSIFICATION	0.9999250034582264	WITHOUT_CLASSIFICATION	7.499654177355423E-5	IMPLEMENTATION
// line 558	WITHOUT_CLASSIFICATION	0.9999250034582264	WITHOUT_CLASSIFICATION	7.499654177355423E-5	IMPLEMENTATION
// line 561	WITHOUT_CLASSIFICATION	0.9999250034582264	WITHOUT_CLASSIFICATION	7.499654177355423E-5	IMPLEMENTATION
// line 571	WITHOUT_CLASSIFICATION	0.9999250034582264	WITHOUT_CLASSIFICATION	7.499654177355423E-5	IMPLEMENTATION
// line 574	WITHOUT_CLASSIFICATION	0.9999250034582264	WITHOUT_CLASSIFICATION	7.499654177355423E-5	IMPLEMENTATION
// line 579	WITHOUT_CLASSIFICATION	0.9999250034582264	WITHOUT_CLASSIFICATION	7.499654177355423E-5	IMPLEMENTATION
// line 586	WITHOUT_CLASSIFICATION	0.9999250034582264	WITHOUT_CLASSIFICATION	7.499654177355423E-5	IMPLEMENTATION
// line 589	WITHOUT_CLASSIFICATION	0.9999250034582264	WITHOUT_CLASSIFICATION	7.499654177355423E-5	IMPLEMENTATION
// line 592	WITHOUT_CLASSIFICATION	0.9999250034582264	WITHOUT_CLASSIFICATION	7.499654177355423E-5	IMPLEMENTATION
// line 595	WITHOUT_CLASSIFICATION	0.9999250034582264	WITHOUT_CLASSIFICATION	7.499654177355423E-5	IMPLEMENTATION
// line 598	WITHOUT_CLASSIFICATION	0.9999250034582264	WITHOUT_CLASSIFICATION	7.499654177355423E-5	IMPLEMENTATION
// line 623	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 627	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 630	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 633	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 639	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 648	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 657	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 661	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 666	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 678	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 682	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 688	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 699	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 706	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 708	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 727	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 737	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 753	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 779	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 801	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 808	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 811	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 817	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 842	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 845	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 848	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 893	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 899	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 932	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 944	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 960	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 980	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 1004	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1038	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 820	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 826	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 829	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 832	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 851	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 857	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 860	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 863	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 866	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 869	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 875	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 884	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 887	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 890	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 902	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 909	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 912	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 916	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 922	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 928	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 941	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 947	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 951	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 955	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 965	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 969	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 977	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 983	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 1013	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1023	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1035	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1041	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1043	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1054	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1057	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1060	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1069	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1075	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1105	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1111	WITHOUT_CLASSIFICATION	0.9999256241455842	WITHOUT_CLASSIFICATION	7.43758544158916E-5	IMPLEMENTATION
// line 1122	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1130	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1140	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1158	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1204	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1207	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1247	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1251	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1261	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1078	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1084	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1087	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1090	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1093	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1114	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1116	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1118	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1124	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1126	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1138	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1144	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1149	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1155	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1162	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1173	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1179	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1182	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1190	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1196	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1213	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1217	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1231	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1236	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1244	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1254	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1258	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1264	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1270	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1273	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1276	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1279	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1282	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1289	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1292	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1295	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1298	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1305	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1348	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1387	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1392	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1448	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1462	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1470	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1496	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1502	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1595	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1598	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1308	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1311	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1317	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1323	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1326	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1329	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1337	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1342	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1345	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1354	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1359	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1366	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1369	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1373	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1377	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1383	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1399	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1401	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1406	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1417	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1424	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1427	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1430	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1433	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1436	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1442	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1445	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1458	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1464	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1489	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1493	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1507	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1519	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1532	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1538	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1542	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1557	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1573	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1591	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1615	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1629	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1632	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1705	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1716	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1725	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1742	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1749	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1818	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1822	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1607	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1610	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1622	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1625	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1636	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1639	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1647	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1651	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1657	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1660	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1663	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1678	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1702	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1711	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1719	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1722	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1731	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1734	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1738	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1746	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1756	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1758	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1761	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1767	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1776	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1782	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1785	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1788	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1791	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1797	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1800	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1803	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1806	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1809	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1815	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1825	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1828	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1831	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1847	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9999343977915103	WITHOUT_CLASSIFICATION	6.560220848975436E-5	IMPLEMENTATION
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9999343977915103	WITHOUT_CLASSIFICATION	6.560220848975436E-5	IMPLEMENTATION
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999128952131701	WITHOUT_CLASSIFICATION	8.710478682995862E-5	IMPLEMENTATION
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999394708262366	WITHOUT_CLASSIFICATION	6.052917376338422E-5	IMPLEMENTATION
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.999905796303437	WITHOUT_CLASSIFICATION	9.420369656294199E-5	IMPLEMENTATION
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9999081198275093	WITHOUT_CLASSIFICATION	9.1880172490742E-5	IMPLEMENTATION
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999064038713903	WITHOUT_CLASSIFICATION	9.359612860970633E-5	IMPLEMENTATION
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999265850045284	WITHOUT_CLASSIFICATION	7.341499547174808E-5	IMPLEMENTATION
// line 1854	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1869	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1872	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1877	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1886	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1898	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1902	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1905	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1911	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1918	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1935	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1938	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1942	WITHOUT_CLASSIFICATION	0.99992510097027	WITHOUT_CLASSIFICATION	7.489902973007282E-5	IMPLEMENTATION
// line 1948	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1960	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1963	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1968	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1972	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1982	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1995	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 2000	WITHOUT_CLASSIFICATION	0.9999254207710403	WITHOUT_CLASSIFICATION	7.457922895968692E-5	IMPLEMENTATION
// line 2006	WITHOUT_CLASSIFICATION	0.9999254142427234	WITHOUT_CLASSIFICATION	7.45857572766516E-5	IMPLEMENTATION
// line 2010	WITHOUT_CLASSIFICATION	0.9999254100583856	WITHOUT_CLASSIFICATION	7.458994161434433E-5	IMPLEMENTATION
/* We may need to subtract addition offset off of first */	WITHOUT_CLASSIFICATION	0.9999394319468283	WITHOUT_CLASSIFICATION	6.0568053171751555E-5	IMPLEMENTATION
/* string fragment (we optimistically take one off in*/	WITHOUT_CLASSIFICATION	0.9999309097593102	WITHOUT_CLASSIFICATION	6.909024068972605E-5	IMPLEMENTATION
/* ParserSupport.literal_concat).  Check token length*/	WITHOUT_CLASSIFICATION	0.9999374903858328	WITHOUT_CLASSIFICATION	6.250961416713385E-5	IMPLEMENTATION
/* and subtract as neeeded.*/	WITHOUT_CLASSIFICATION	0.9999184650542858	WITHOUT_CLASSIFICATION	8.15349457141575E-5	IMPLEMENTATION
/*                    $$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);  */	WITHOUT_CLASSIFICATION	0.9999835540598568	WITHOUT_CLASSIFICATION	1.6445940143258412E-5	IMPLEMENTATION
/* ENEBO: arg surrounded by in_defined set/unset*/	WITHOUT_CLASSIFICATION	0.9999360282809373	WITHOUT_CLASSIFICATION	6.397171906278675E-5	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999943545071801	WITHOUT_CLASSIFICATION	5.645492819909188E-6	IMPLEMENTATION
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999139410201267	WITHOUT_CLASSIFICATION	8.605897987344464E-5	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999676865335485	WITHOUT_CLASSIFICATION	3.2313466451459496E-5	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999676865335485	WITHOUT_CLASSIFICATION	3.2313466451459496E-5	IMPLEMENTATION
/* ENEBO: Removed !compile_for_eval which probably is to reduce warnings*/	WITHOUT_CLASSIFICATION	0.9999189469742976	WITHOUT_CLASSIFICATION	8.105302570246133E-5	IMPLEMENTATION
/* was $$ = null;*/	WITHOUT_CLASSIFICATION	0.9999050453116777	WITHOUT_CLASSIFICATION	9.495468832230588E-5	IMPLEMENTATION
// line 2019 "Ruby19Parser.y"	WITHOUT_CLASSIFICATION	0.9999376350424523	WITHOUT_CLASSIFICATION	6.236495754768336E-5	IMPLEMENTATION
// line 8143 "-"	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// we know variables cannot be null since localstaticscope will create a 0 length one.	WITHOUT_CLASSIFICATION	0.9999947153246871	WITHOUT_CLASSIFICATION	5.284675312821285E-6	IMPLEMENTATION
// No bit math to store level since we know level is zero for this case	WITHOUT_CLASSIFICATION	0.9999666550107522	WITHOUT_CLASSIFICATION	3.3344989247908055E-5	IMPLEMENTATION
// Next immediate scope.  Variable and constant scoping rules make use of this variable // in different ways.	WITHOUT_CLASSIFICATION	0.9999800114872887	WITHOUT_CLASSIFICATION	1.99885127113468E-5	IMPLEMENTATION
// Live reference to module	WITHOUT_CLASSIFICATION	0.9999606545519153	WITHOUT_CLASSIFICATION	3.934544808483292E-5	IMPLEMENTATION
// Next CRef down the lexical structure	WITHOUT_CLASSIFICATION	0.9999481843172704	WITHOUT_CLASSIFICATION	5.181568272948421E-5	IMPLEMENTATION
// Our name holder (offsets are assigned as variables are added	WITHOUT_CLASSIFICATION	0.999967453171875	WITHOUT_CLASSIFICATION	3.254682812503681E-5	IMPLEMENTATION
// number of variables in this scope representing required arguments	WITHOUT_CLASSIFICATION	0.9999919095240926	WITHOUT_CLASSIFICATION	8.090475907501188E-6	IMPLEMENTATION
// number of variables in this scope representing optional arguments	WITHOUT_CLASSIFICATION	0.9999933217474964	WITHOUT_CLASSIFICATION	6.6782525036034714E-6	IMPLEMENTATION
// index of variable that represents a "rest" arg	WITHOUT_CLASSIFICATION	0.999943384881714	WITHOUT_CLASSIFICATION	5.6615118286041504E-5	IMPLEMENTATION
// Note that this object equality check is intentional, to ensure // the string and its interned version are the same object.	WITHOUT_CLASSIFICATION	0.9999971361510247	WITHOUT_CLASSIFICATION	2.8638489754092367E-6	IMPLEMENTATION
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999322264278644	WITHOUT_CLASSIFICATION	6.777357213557854E-5	IMPLEMENTATION
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999322264278644	WITHOUT_CLASSIFICATION	6.777357213557854E-5	IMPLEMENTATION
/* Note: Only used by compiler until it can use getConstant again or use some other refactoring */	WITHOUT_CLASSIFICATION	0.9999599638309298	WITHOUT_CLASSIFICATION	4.0036169070292333E-5	IMPLEMENTATION
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999866259391803	WITHOUT_CLASSIFICATION	1.3374060819748353E-5	IMPLEMENTATION
/* Try and unload the autoload specified from internedName */	WITHOUT_CLASSIFICATION	0.9999785855067459	WITHOUT_CLASSIFICATION	2.141449325399658E-5	IMPLEMENTATION
// We override that the logic which uses this	WITHOUT_CLASSIFICATION	0.9999722254319607	WITHOUT_CLASSIFICATION	2.7774568039228433E-5	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999808196247443	WITHOUT_CLASSIFICATION	1.9180375255673018E-5	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999831123274957	WITHOUT_CLASSIFICATION	1.6887672504285308E-5	IMPLEMENTATION
// source extensions	WITHOUT_CLASSIFICATION	0.9999396158349487	WITHOUT_CLASSIFICATION	6.0384165051326423E-5	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999831123274957	WITHOUT_CLASSIFICATION	1.6887672504285308E-5	IMPLEMENTATION
// . Array given to rest should pass itself // . Array with rest + other args should extract array // . Array with multiple values and NO rest should extract args if there are more than one argument	WITHOUT_CLASSIFICATION	0.9999568461922667	WITHOUT_CLASSIFICATION	4.315380773344066E-5	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999707181764743	WITHOUT_CLASSIFICATION	2.928182352570448E-5	IMPLEMENTATION
// Is this thread currently with in a function trace?	WITHOUT_CLASSIFICATION	0.9999242854445237	WITHOUT_CLASSIFICATION	7.57145554762164E-5	IMPLEMENTATION
// Is this thread currently doing an defined? defined should set things like $!	WITHOUT_CLASSIFICATION	0.9999080845990345	WITHOUT_CLASSIFICATION	9.191540096559073E-5	IMPLEMENTATION
//private UnsynchronizedStack parentStack;	WITHOUT_CLASSIFICATION	0.9999743368816504	WITHOUT_CLASSIFICATION	2.5663118349552124E-5	IMPLEMENTATION
//private UnsynchronizedStack frameStack;	WITHOUT_CLASSIFICATION	0.9999733247617327	WITHOUT_CLASSIFICATION	2.6675238267380016E-5	IMPLEMENTATION
// List of active dynamic scopes.  Each of these may have captured other dynamic scopes // to implement closures.	WITHOUT_CLASSIFICATION	0.99459625463283	WITHOUT_CLASSIFICATION	0.0054037453671701065	IMPLEMENTATION
// File where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.999966412874271	WITHOUT_CLASSIFICATION	3.3587125729027066E-5	IMPLEMENTATION
// Line where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999676874720551	WITHOUT_CLASSIFICATION	3.231252794487652E-5	IMPLEMENTATION
// In certain places, like grep, we don't use real frames for the // call blocks. This has the effect of not setting the backref in // the correct frame - this delta is activated to the place where // the grep is running in so that the backref will be set in an // appropriate place.	WITHOUT_CLASSIFICATION	0.9999994124116613	WITHOUT_CLASSIFICATION	5.875883387257522E-7	IMPLEMENTATION
// TOPLEVEL self and a few others want a top-level scope.  We create this one right // away and then pass it into top-level parse so it ends up being the top level.	WITHOUT_CLASSIFICATION	0.9999529926438199	WITHOUT_CLASSIFICATION	4.7007356180128786E-5	IMPLEMENTATION
//////////////////// CATCH MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9999908408257249	WITHOUT_CLASSIFICATION	9.15917427519837E-6	IMPLEMENTATION
//////////////////// FRAME MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.999990823288941	WITHOUT_CLASSIFICATION	9.176711059001527E-6	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9998578639481988	WITHOUT_CLASSIFICATION	1.4213605180137112E-4	IMPLEMENTATION
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999218793208899	WITHOUT_CLASSIFICATION	7.812067911007719E-5	IMPLEMENTATION
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999218793208899	WITHOUT_CLASSIFICATION	7.812067911007719E-5	IMPLEMENTATION
// look for mangling markers for compiled Ruby in method name	WITHOUT_CLASSIFICATION	0.9998966702026318	WITHOUT_CLASSIFICATION	1.0332979736812313E-4	IMPLEMENTATION
// if it's not a rescue or ensure, there's a frame associated, so decrement	WITHOUT_CLASSIFICATION	0.9999756228724107	WITHOUT_CLASSIFICATION	2.4377127589208432E-5	IMPLEMENTATION
// look for __file__ method name for compiled roots	WITHOUT_CLASSIFICATION	0.9999394550451238	WITHOUT_CLASSIFICATION	6.0544954876127185E-5	IMPLEMENTATION
// All entries following removed node can stay // in list, but all preceding ones need to be // cloned.	WITHOUT_CLASSIFICATION	0.999928355185595	WITHOUT_CLASSIFICATION	7.164481440498164E-5	IMPLEMENTATION
// required and optional only	WITHOUT_CLASSIFICATION	0.9999610511611531	WITHOUT_CLASSIFICATION	3.894883884702715E-5	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999831123274957	WITHOUT_CLASSIFICATION	1.6887672504285308E-5	IMPLEMENTATION
// look for mangling markers for bound, unframed methods in class name	WITHOUT_CLASSIFICATION	0.9999731362370334	WITHOUT_CLASSIFICATION	2.6863762966621065E-5	IMPLEMENTATION
// set the binding's frame's "previous" file and line to current, so // trace will show who called the block	WITHOUT_CLASSIFICATION	0.9999900198251025	WITHOUT_CLASSIFICATION	9.980174897386617E-6	IMPLEMENTATION
// framed invokers will have Ruby frames associated with them	WITHOUT_CLASSIFICATION	0.9999688526616963	WITHOUT_CLASSIFICATION	3.114733830368775E-5	IMPLEMENTATION
// look for mangling markers for bound, framed methods in class name	WITHOUT_CLASSIFICATION	0.9999747361358903	WITHOUT_CLASSIFICATION	2.5263864109666554E-5	IMPLEMENTATION
// unframed invokers have no Ruby frames, so pull from class name // but use current frame as file and line	WITHOUT_CLASSIFICATION	0.9999882606749635	WITHOUT_CLASSIFICATION	1.1739325036565885E-5	IMPLEMENTATION
// try to mine out a Ruby frame using our list of interpreter entry-point markers	WITHOUT_CLASSIFICATION	0.9999783404565181	WITHOUT_CLASSIFICATION	2.165954348185744E-5	IMPLEMENTATION
// Frame matches one of our markers for "interpreted" calls	WITHOUT_CLASSIFICATION	0.9999393814924075	WITHOUT_CLASSIFICATION	6.06185075924458E-5	IMPLEMENTATION
// Frame is extraneous runtime information, skip it unless debug	WITHOUT_CLASSIFICATION	0.9999647938866246	WITHOUT_CLASSIFICATION	3.5206113375410115E-5	IMPLEMENTATION
/*     * Determine what sort of assigner should be used for the provided 'iter' (e.g. block).     * Assigner provides just the right logic for assigning values to local parameters of the     * block.     *     * This method also has a second optimization which is to set 'noargblock' in the case that     * the block is a block which accepts no arguments.  The primary reason for this second     * optimization is that in the case of a yield with a RubyArray we will bypass some logic     * processing the RubyArray into a proper form (only to then not do anythign with it).  A     * secondary benefit is that a simple boolean seems to optimize by hotspot much faster     * than the zero arg assigner.     */	WITHOUT_CLASSIFICATION	0.9999999284969809	WITHOUT_CLASSIFICATION	7.150301909517985E-8	IMPLEMENTATION
// new scope for this invocation of the block, based on parent scope	WITHOUT_CLASSIFICATION	0.9999911244048366	WITHOUT_CLASSIFICATION	8.875595163316355E-6	IMPLEMENTATION
// No argument blocks	WITHOUT_CLASSIFICATION	0.9999508190540127	WITHOUT_CLASSIFICATION	4.9180945987252725E-5	IMPLEMENTATION
// just push the same empty scope, since we won't use one	WITHOUT_CLASSIFICATION	0.9999755246356185	WITHOUT_CLASSIFICATION	2.447536438158406E-5	IMPLEMENTATION
// Not sure if this is actually possible, but better safe than sorry	WITHOUT_CLASSIFICATION	0.9999663311599013	WITHOUT_CLASSIFICATION	3.366884009875617E-5	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999461136961417	WITHOUT_CLASSIFICATION	5.388630385831002E-5	IMPLEMENTATION
// This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).	WITHOUT_CLASSIFICATION	0.9999548393680335	WITHOUT_CLASSIFICATION	4.516063196652084E-5	IMPLEMENTATION
// Highest reserved id	WITHOUT_CLASSIFICATION	0.9999156003296045	WITHOUT_CLASSIFICATION	8.439967039555442E-5	IMPLEMENTATION
// binary typed calls	WITHOUT_CLASSIFICATION	0.9999200776534951	WITHOUT_CLASSIFICATION	7.992234650489235E-5	IMPLEMENTATION
// id must always be even	WITHOUT_CLASSIFICATION	0.9999420857042125	WITHOUT_CLASSIFICATION	5.791429578749644E-5	IMPLEMENTATION
// with block pass	WITHOUT_CLASSIFICATION	0.9999076915249926	WITHOUT_CLASSIFICATION	9.230847500740266E-5	IMPLEMENTATION
// no block	WITHOUT_CLASSIFICATION	0.9999188686454554	WITHOUT_CLASSIFICATION	8.113135454462476E-5	IMPLEMENTATION
// with block literal (iter)	WITHOUT_CLASSIFICATION	0.9999195557284034	WITHOUT_CLASSIFICATION	8.044427159659835E-5	IMPLEMENTATION
//            assert false : "can this happen?";	WITHOUT_CLASSIFICATION	0.9999789896650643	WITHOUT_CLASSIFICATION	2.1010334935755106E-5	IMPLEMENTATION
// if we have multiple asgn with just *args, need a special type for that	WITHOUT_CLASSIFICATION	0.9999735970344892	WITHOUT_CLASSIFICATION	2.6402965510715326E-5	IMPLEMENTATION
// && args.getMaxArgumentsCount() != 1) {	WITHOUT_CLASSIFICATION	0.999933711147465	WITHOUT_CLASSIFICATION	6.628885253495275E-5	IMPLEMENTATION
//            return warnMultiReturnNil(ruby);	WITHOUT_CLASSIFICATION	0.9999899351081322	WITHOUT_CLASSIFICATION	1.0064891867821041E-5	IMPLEMENTATION
// ensure zero is devoted to no method name	WITHOUT_CLASSIFICATION	0.9999389372640162	WITHOUT_CLASSIFICATION	6.106273598383604E-5	IMPLEMENTATION
// predefine a few other methods we invoke directly elsewhere	WITHOUT_CLASSIFICATION	0.9999632028195394	WITHOUT_CLASSIFICATION	3.679718046062611E-5	IMPLEMENTATION
// fast and safe respond_to? call site logic	WITHOUT_CLASSIFICATION	0.9999289279608707	WITHOUT_CLASSIFICATION	7.107203912926317E-5	IMPLEMENTATION
// Static scoping information for this scope	WITHOUT_CLASSIFICATION	0.9999847972398231	WITHOUT_CLASSIFICATION	1.5202760176897209E-5	IMPLEMENTATION
// Captured dynamic scopes	WITHOUT_CLASSIFICATION	0.9999259582136618	WITHOUT_CLASSIFICATION	7.404178633819499E-5	IMPLEMENTATION
// Backref for $~, $1, etc	WITHOUT_CLASSIFICATION	0.9999144673374337	WITHOUT_CLASSIFICATION	8.55326625663122E-5	IMPLEMENTATION
// Lastline	WITHOUT_CLASSIFICATION	0.999897135679158	WITHOUT_CLASSIFICATION	1.0286432084202444E-4	IMPLEMENTATION
// No binding scope so we should create one	WITHOUT_CLASSIFICATION	0.999970042665816	WITHOUT_CLASSIFICATION	2.9957334183986525E-5	IMPLEMENTATION
// bindings scopes must always be ManyVars scopes since evals can grow them	WITHOUT_CLASSIFICATION	0.9999476638415289	WITHOUT_CLASSIFICATION	5.233615847104593E-5	IMPLEMENTATION
// Helper function to give a good view of current dynamic scope with captured scopes	WITHOUT_CLASSIFICATION	0.9999864620487277	WITHOUT_CLASSIFICATION	1.3537951272269645E-5	IMPLEMENTATION
// try count specific args to determine required	WITHOUT_CLASSIFICATION	0.9999747418527044	WITHOUT_CLASSIFICATION	2.5258147295528853E-5	IMPLEMENTATION
// Some helper functions:	WITHOUT_CLASSIFICATION	0.999941763054709	WITHOUT_CLASSIFICATION	5.823694529097608E-5	IMPLEMENTATION
// silently ignore	WITHOUT_CLASSIFICATION	0.9999709620600179	WITHOUT_CLASSIFICATION	2.9037939982203822E-5	IMPLEMENTATION
// used by compiler	WITHOUT_CLASSIFICATION	0.9999472214438507	WITHOUT_CLASSIFICATION	5.277855614927614E-5	IMPLEMENTATION
// initialize the static settings to determine which factory to use	WITHOUT_CLASSIFICATION	0.9999975428236921	WITHOUT_CLASSIFICATION	2.457176307810266E-6	IMPLEMENTATION
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999265850045284	WITHOUT_CLASSIFICATION	7.341499547174808E-5	IMPLEMENTATION
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9999266473676631	WITHOUT_CLASSIFICATION	7.33526323368654E-5	IMPLEMENTATION
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999182946608438	WITHOUT_CLASSIFICATION	8.170533915625506E-5	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999544261588714	WITHOUT_CLASSIFICATION	4.5573841128632E-5	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999406078363104	WITHOUT_CLASSIFICATION	5.939216368952925E-5	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999707181764743	WITHOUT_CLASSIFICATION	2.928182352570448E-5	IMPLEMENTATION
// Note: In Ruby 1.9 all of this logic can go away since they will require explicit // bindings for evals.	WITHOUT_CLASSIFICATION	0.99994978823227	WITHOUT_CLASSIFICATION	5.021176773005303E-5	IMPLEMENTATION
// We only define one special dynamic scope per 'logical' binding.  So all bindings for // the same scope should share the same dynamic scope.  This allows multiple evals with // different different bindings in the same scope to see the same stuff.	WITHOUT_CLASSIFICATION	0.9999901392226056	WITHOUT_CLASSIFICATION	9.86077739441627E-6	IMPLEMENTATION
// If the next scope out has the same binding scope as this scope it means // we are evaling within an eval and in that case we should be sharing the same // binding scope.	WITHOUT_CLASSIFICATION	0.9999932314121596	WITHOUT_CLASSIFICATION	6.768587840344514E-6	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999881447815259	WITHOUT_CLASSIFICATION	1.1855218474111353E-5	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999881447815259	WITHOUT_CLASSIFICATION	1.1855218474111353E-5	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999634572764298	WITHOUT_CLASSIFICATION	3.6542723570229805E-5	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999634572764298	WITHOUT_CLASSIFICATION	3.6542723570229805E-5	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999634572764298	WITHOUT_CLASSIFICATION	3.6542723570229805E-5	IMPLEMENTATION
// no extra args for rest	WITHOUT_CLASSIFICATION	0.999947881533634	WITHOUT_CLASSIFICATION	5.211846636604677E-5	IMPLEMENTATION
// no extra args for rest	WITHOUT_CLASSIFICATION	0.999947881533634	WITHOUT_CLASSIFICATION	5.211846636604677E-5	IMPLEMENTATION
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999367362565307	WITHOUT_CLASSIFICATION	6.326374346932896E-5	IMPLEMENTATION
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999367362565307	WITHOUT_CLASSIFICATION	6.326374346932896E-5	IMPLEMENTATION
/*     * This is the proper behavior for all non-expanded assigners which have a pre > 0.  The rest     * override this.     */	WITHOUT_CLASSIFICATION	0.9999957343062433	WITHOUT_CLASSIFICATION	4.265693756723366E-6	IMPLEMENTATION
/*     * This is the proper behavior for all non-expanded assigners.     */	WITHOUT_CLASSIFICATION	0.9999909990937645	WITHOUT_CLASSIFICATION	9.000906235478781E-6	IMPLEMENTATION
// prefill ?	WITHOUT_CLASSIFICATION	0.9999138683543753	WITHOUT_CLASSIFICATION	8.613164562461052E-5	IMPLEMENTATION
// prefill ?	WITHOUT_CLASSIFICATION	0.9999138683543753	WITHOUT_CLASSIFICATION	8.613164562461052E-5	IMPLEMENTATION
// MUST be called from synchronized/locked block! // should only be called by variableTableStore/variableTableFastStore	WITHOUT_CLASSIFICATION	0.9999841051940299	WITHOUT_CLASSIFICATION	1.5894805970002717E-5	IMPLEMENTATION
// retrieve method // module // name	WITHOUT_CLASSIFICATION	0.9999721857914051	WITHOUT_CLASSIFICATION	2.7814208594865127E-5	IMPLEMENTATION
// call is ok, punch it!	WITHOUT_CLASSIFICATION	0.99991174074	WITHOUT_CLASSIFICATION	8.825925999988875E-5	IMPLEMENTATION
// if undefined, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999447645034235	WITHOUT_CLASSIFICATION	5.523549657661875E-5	IMPLEMENTATION
// if we're not attempting to invoke method_missing and method is not visible, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999841133784881	WITHOUT_CLASSIFICATION	1.5886621511945807E-5	IMPLEMENTATION
// method object already present, push various args // tc // self // klazz // name	WITHOUT_CLASSIFICATION	0.9999745937800747	WITHOUT_CLASSIFICATION	2.540621992536817E-5	IMPLEMENTATION
// if it's method_missing, just invoke it	WITHOUT_CLASSIFICATION	0.9999519141299686	WITHOUT_CLASSIFICATION	4.8085870031258854E-5	IMPLEMENTATION
// invoke callMethodMissing	WITHOUT_CLASSIFICATION	0.9999346702837775	WITHOUT_CLASSIFICATION	6.532971622249351E-5	IMPLEMENTATION
// caller	WITHOUT_CLASSIFICATION	0.9967280480298562	WITHOUT_CLASSIFICATION	0.0032719519701438476	IMPLEMENTATION
// calltype // block	WITHOUT_CLASSIFICATION	0.9999028493313763	WITHOUT_CLASSIFICATION	9.715066862364574E-5	IMPLEMENTATION
// if no exception raised, jump to end to leave result on stack for return	WITHOUT_CLASSIFICATION	0.9999783656087616	WITHOUT_CLASSIFICATION	2.163439123838735E-5	IMPLEMENTATION
// load arity for check	WITHOUT_CLASSIFICATION	0.9999453381469957	WITHOUT_CLASSIFICATION	5.4661853004310385E-5	IMPLEMENTATION
// throw	WITHOUT_CLASSIFICATION	0.9968384100665202	WITHOUT_CLASSIFICATION	0.0031615899334797807	IMPLEMENTATION
// load arity for error	WITHOUT_CLASSIFICATION	0.9999430890635266	WITHOUT_CLASSIFICATION	5.691093647331461E-5	IMPLEMENTATION
// arity ok, continue	WITHOUT_CLASSIFICATION	0.9999228484716628	WITHOUT_CLASSIFICATION	7.715152833719965E-5	IMPLEMENTATION
//InvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9999282902697697	WITHOUT_CLASSIFICATION	7.170973023031547E-5	IMPLEMENTATION
// ENEBO: Perhaps slow but simple for now	WITHOUT_CLASSIFICATION	0.9999003926024848	WITHOUT_CLASSIFICATION	9.960739751525297E-5	IMPLEMENTATION
// FastInvocationCallback	WITHOUT_CLASSIFICATION	0.9999255195885928	WITHOUT_CLASSIFICATION	7.448041140720475E-5	IMPLEMENTATION
// InvocationCallback	WITHOUT_CLASSIFICATION	0.9999264480464252	WITHOUT_CLASSIFICATION	7.355195357485077E-5	IMPLEMENTATION
//DumpingInvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9999324572450828	WITHOUT_CLASSIFICATION	6.754275491718447E-5	IMPLEMENTATION
// for fast lookup: encoding entry => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999593195602532	WITHOUT_CLASSIFICATION	4.068043974672207E-5	IMPLEMENTATION
// for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999531481456774	WITHOUT_CLASSIFICATION	4.685185432269443E-5	IMPLEMENTATION
// load the encoding	WITHOUT_CLASSIFICATION	0.9999655889471584	WITHOUT_CLASSIFICATION	3.4411052841614256E-5	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999551680237975	WITHOUT_CLASSIFICATION	4.483197620241497E-5	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999521040735485	WITHOUT_CLASSIFICATION	4.789592645145247E-5	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999513956499583	WITHOUT_CLASSIFICATION	4.8604350041606626E-5	IMPLEMENTATION
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999493699264033	WITHOUT_CLASSIFICATION	5.063007359677212E-5	IMPLEMENTATION
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999493962205999	WITHOUT_CLASSIFICATION	5.060377940010236E-5	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999540193135318	WITHOUT_CLASSIFICATION	4.59806864682603E-5	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.999950876860872	WITHOUT_CLASSIFICATION	4.9123139127900976E-5	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999501502866136	WITHOUT_CLASSIFICATION	4.984971338626017E-5	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999536341128971	WITHOUT_CLASSIFICATION	4.636588710303256E-5	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999504653358195	WITHOUT_CLASSIFICATION	4.953466418035784E-5	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999497326750512	WITHOUT_CLASSIFICATION	5.026732494874567E-5	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999504653358195	WITHOUT_CLASSIFICATION	4.953466418035784E-5	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999504653358195	WITHOUT_CLASSIFICATION	4.953466418035784E-5	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999504653358195	WITHOUT_CLASSIFICATION	4.953466418035784E-5	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999504653358195	WITHOUT_CLASSIFICATION	4.953466418035784E-5	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999504653358195	WITHOUT_CLASSIFICATION	4.953466418035784E-5	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999504653358195	WITHOUT_CLASSIFICATION	4.953466418035784E-5	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999497326750512	WITHOUT_CLASSIFICATION	5.026732494874567E-5	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999497326750512	WITHOUT_CLASSIFICATION	5.026732494874567E-5	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999497326750512	WITHOUT_CLASSIFICATION	5.026732494874567E-5	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999497326750512	WITHOUT_CLASSIFICATION	5.026732494874567E-5	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999497326750512	WITHOUT_CLASSIFICATION	5.026732494874567E-5	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999497326750512	WITHOUT_CLASSIFICATION	5.026732494874567E-5	IMPLEMENTATION
// If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs	WITHOUT_CLASSIFICATION	0.9999625867864873	WITHOUT_CLASSIFICATION	3.741321351269827E-5	IMPLEMENTATION
// BreakJump, ThreadContext	WITHOUT_CLASSIFICATION	0.9999236605510756	WITHOUT_CLASSIFICATION	7.63394489244702E-5	IMPLEMENTATION
// ThreadContext	WITHOUT_CLASSIFICATION	0.9999159047539529	WITHOUT_CLASSIFICATION	8.40952460471342E-5	IMPLEMENTATION
// BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999396118681003	WITHOUT_CLASSIFICATION	6.038813189957734E-5	IMPLEMENTATION
// Make Java class files in the jar reachable from Ruby	WITHOUT_CLASSIFICATION	0.9999880317879494	WITHOUT_CLASSIFICATION	1.196821205060199E-5	IMPLEMENTATION
// RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999408458721603	WITHOUT_CLASSIFICATION	5.915412783973034E-5	IMPLEMENTATION
// add all startup load paths to the list first	WITHOUT_CLASSIFICATION	0.999976779303274	WITHOUT_CLASSIFICATION	2.322069672595229E-5	IMPLEMENTATION
// if it's a compiled JRuby script, instantiate and run it	WITHOUT_CLASSIFICATION	0.9999761065054382	WITHOUT_CLASSIFICATION	2.389349456182873E-5	IMPLEMENTATION
// wrap in try/catch for security exceptions in an applet	WITHOUT_CLASSIFICATION	0.999833084046998	WITHOUT_CLASSIFICATION	1.6691595300204898E-4	IMPLEMENTATION
// add $RUBYLIB paths	WITHOUT_CLASSIFICATION	0.9999550372593518	WITHOUT_CLASSIFICATION	4.4962740648268215E-5	IMPLEMENTATION
// Empty paths do not need to be added	WITHOUT_CLASSIFICATION	0.9994717577678394	WITHOUT_CLASSIFICATION	5.282422321605711E-4	IMPLEMENTATION
// "." dir is used for relative path loads from a given file, as in require '../foo/bar'	WITHOUT_CLASSIFICATION	0.9999822566370644	WITHOUT_CLASSIFICATION	1.7743362935564966E-5	IMPLEMENTATION
// Add 1.8 libs	WITHOUT_CLASSIFICATION	0.9999432522876905	WITHOUT_CLASSIFICATION	5.67477123094739E-5	IMPLEMENTATION
// Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.	WITHOUT_CLASSIFICATION	0.9999962187228504	WITHOUT_CLASSIFICATION	3.7812771496214216E-6	IMPLEMENTATION
// Library has already been loaded in some form, bail out	WITHOUT_CLASSIFICATION	0.9999711694251552	WITHOUT_CLASSIFICATION	2.883057484487047E-5	IMPLEMENTATION
// We don't want a package name beginning with dots, so we remove them	WITHOUT_CLASSIFICATION	0.9999874627235911	WITHOUT_CLASSIFICATION	1.2537276408840785E-5	IMPLEMENTATION
// If there is a jar-file with the required name, we add this to the class path.	WITHOUT_CLASSIFICATION	0.99999310296913	WITHOUT_CLASSIFICATION	6.897030870028643E-6	IMPLEMENTATION
// quietly try to load the class	WITHOUT_CLASSIFICATION	0.999983588951658	WITHOUT_CLASSIFICATION	1.6411048342030915E-5	IMPLEMENTATION
// If there was a good library before, we go back to that	WITHOUT_CLASSIFICATION	0.999976970969355	WITHOUT_CLASSIFICATION	2.3029030644950982E-5	IMPLEMENTATION
// no library or extension found, try to load directly as a class	WITHOUT_CLASSIFICATION	0.9999877160839676	WITHOUT_CLASSIFICATION	1.2283916032370518E-5	IMPLEMENTATION
// if an extension is specified, try more targetted searches	WITHOUT_CLASSIFICATION	0.9999856508369656	WITHOUT_CLASSIFICATION	1.4349163034455335E-5	IMPLEMENTATION
// signed short, big-endian	WITHOUT_CLASSIFICATION	0.999920843740025	WITHOUT_CLASSIFICATION	7.915625997505618E-5	IMPLEMENTATION
// source extensions	WITHOUT_CLASSIFICATION	0.9999396158349487	WITHOUT_CLASSIFICATION	6.0384165051326423E-5	IMPLEMENTATION
// We don't support .so, but some stdlib require .so directly // replace it with .jar to look for an extension type we do support	WITHOUT_CLASSIFICATION	0.9999587663422946	WITHOUT_CLASSIFICATION	4.123365770540856E-5	IMPLEMENTATION
// This code exploits the fact that all .jar files will be found for the JarredScript feature. // This is where the basic extension mechanism gets fixed	WITHOUT_CLASSIFICATION	0.9999948122324267	WITHOUT_CLASSIFICATION	5.18776757322849E-6	IMPLEMENTATION
// Make the class name look nice, by splitting on _ and capitalize each segment, then joining // the, together without anything separating them, and last put on "Service" at the end.	WITHOUT_CLASSIFICATION	0.9999959122554568	WITHOUT_CLASSIFICATION	4.0877445432032356E-6	IMPLEMENTATION
// It's _really_ expensive to check that the class actually exists in the Jar, so // we don't do that now.	WITHOUT_CLASSIFICATION	0.9999950518080238	WITHOUT_CLASSIFICATION	4.948191976247017E-6	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999515001875595	WITHOUT_CLASSIFICATION	4.849981244050329E-5	IMPLEMENTATION
// extension extensions	WITHOUT_CLASSIFICATION	0.999962757853857	WITHOUT_CLASSIFICATION	3.724214614304229E-5	IMPLEMENTATION
// unknown extension, fall back to search with extensions	WITHOUT_CLASSIFICATION	0.9999738509214106	WITHOUT_CLASSIFICATION	2.6149078589329858E-5	IMPLEMENTATION
// try all extensions	WITHOUT_CLASSIFICATION	0.9999596590396421	WITHOUT_CLASSIFICATION	4.034096035790607E-5	IMPLEMENTATION
// if a source extension is specified, try all source extensions	WITHOUT_CLASSIFICATION	0.9999864942204223	WITHOUT_CLASSIFICATION	1.3505779577840047E-5	IMPLEMENTATION
// unknown extension, fall back to exact search	WITHOUT_CLASSIFICATION	0.9999652450115178	WITHOUT_CLASSIFICATION	3.475498848220587E-5	IMPLEMENTATION
// try only literal search	WITHOUT_CLASSIFICATION	0.9999563033725619	WITHOUT_CLASSIFICATION	4.369662743794598E-5	IMPLEMENTATION
// attempt to load the found library	WITHOUT_CLASSIFICATION	0.999979868230303	WITHOUT_CLASSIFICATION	2.0131769696964192E-5	IMPLEMENTATION
// otherwise load the library we've found	WITHOUT_CLASSIFICATION	0.9999672357779847	WITHOUT_CLASSIFICATION	3.2764222015276524E-5	IMPLEMENTATION
// allow MainExitException to propagate out for exec and friends	WITHOUT_CLASSIFICATION	0.9999678563418288	WITHOUT_CLASSIFICATION	3.214365817125221E-5	IMPLEMENTATION
// Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".	WITHOUT_CLASSIFICATION	0.9999689145739228	WITHOUT_CLASSIFICATION	3.1085426077222066E-5	IMPLEMENTATION
// check current directory; if file exists, retrieve URL and return resource	WITHOUT_CLASSIFICATION	0.9999976802045637	WITHOUT_CLASSIFICATION	2.3197954363532985E-6	IMPLEMENTATION
// if a jar or file URL, return load service resource directly without further searching	WITHOUT_CLASSIFICATION	0.9999907275123366	WITHOUT_CLASSIFICATION	9.27248766343263E-6	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999586909368768	WITHOUT_CLASSIFICATION	4.130906312314758E-5	IMPLEMENTATION
// if it's a ./ baseName, use CWD logic	WITHOUT_CLASSIFICATION	0.9999356692883214	WITHOUT_CLASSIFICATION	6.433071167852116E-5	IMPLEMENTATION
// if given path is absolute, just try it as-is (with extensions) and no load path	WITHOUT_CLASSIFICATION	0.9999666377191657	WITHOUT_CLASSIFICATION	3.3362280834349025E-5	IMPLEMENTATION
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9999853969389313	WITHOUT_CLASSIFICATION	1.4603061068802691E-5	IMPLEMENTATION
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9999853969389313	WITHOUT_CLASSIFICATION	1.4603061068802691E-5	IMPLEMENTATION
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999439066437572	WITHOUT_CLASSIFICATION	5.609335624273277E-5	IMPLEMENTATION
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999439066437572	WITHOUT_CLASSIFICATION	5.609335624273277E-5	IMPLEMENTATION
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999890929992752	WITHOUT_CLASSIFICATION	1.0907000724783036E-5	IMPLEMENTATION
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999890929992752	WITHOUT_CLASSIFICATION	1.0907000724783036E-5	IMPLEMENTATION
//                    actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));	WITHOUT_CLASSIFICATION	0.9999727987040183	WITHOUT_CLASSIFICATION	2.7201295981655207E-5	IMPLEMENTATION
// handle security-sensitive case	WITHOUT_CLASSIFICATION	0.9999152652045624	WITHOUT_CLASSIFICATION	8.473479543757694E-5	IMPLEMENTATION
// if entry is an empty string, skip it	WITHOUT_CLASSIFICATION	0.9999772296131184	WITHOUT_CLASSIFICATION	2.277038688162307E-5	IMPLEMENTATION
// if entry starts with a slash, skip it since classloader resources never start with a /	WITHOUT_CLASSIFICATION	0.9999849501797514	WITHOUT_CLASSIFICATION	1.5049820248544396E-5	IMPLEMENTATION
// otherwise, try to load from classpath (Note: Jar resources always uses '/')	WITHOUT_CLASSIFICATION	0.99998988135061	WITHOUT_CLASSIFICATION	1.0118649390026948E-5	IMPLEMENTATION
// Make sure this is not a directory or unavailable in some way	WITHOUT_CLASSIFICATION	0.9999921416173729	WITHOUT_CLASSIFICATION	7.858382626984887E-6	IMPLEMENTATION
// signed short, native	WITHOUT_CLASSIFICATION	0.9998983650797028	WITHOUT_CLASSIFICATION	1.0163492029731554E-4	IMPLEMENTATION
// If we fail to find as a normal Ruby script, we try to find as an extension, // checking for a builtin first.	WITHOUT_CLASSIFICATION	0.999988769496307	WITHOUT_CLASSIFICATION	1.1230503693068368E-5	IMPLEMENTATION
// write `I' instance var signet if class is NOT a direct subclass of Object	WITHOUT_CLASSIFICATION	0.9999862545651197	WITHOUT_CLASSIFICATION	1.3745434880220567E-5	IMPLEMENTATION
// if name starts with a / we're done (classloader resources won't load with an initial /)	WITHOUT_CLASSIFICATION	0.9999861814819927	WITHOUT_CLASSIFICATION	1.3818518007182523E-5	IMPLEMENTATION
// Look in classpath next (we do not use File as a test since UNC names will match) // Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")	WITHOUT_CLASSIFICATION	0.9999953225217485	WITHOUT_CLASSIFICATION	4.677478251449779E-6	IMPLEMENTATION
/* Directories and unavailable resources are not able to open a stream. */	WITHOUT_CLASSIFICATION	0.9999773076015583	WITHOUT_CLASSIFICATION	2.2692398441598602E-5	IMPLEMENTATION
// Try to load from classpath without prefix. "A/b.rb" will not load as  // "./A/b.rb" in a jar file.	WITHOUT_CLASSIFICATION	0.9999751144439424	WITHOUT_CLASSIFICATION	2.4885556057616442E-5	IMPLEMENTATION
// object has instance vars and isn't a class, get a snapshot to be marshalled // and output the ivar header here	WITHOUT_CLASSIFICATION	0.9999939319151392	WITHOUT_CLASSIFICATION	6.068084860796431E-6	IMPLEMENTATION
// flush afer whole dump is complete	WITHOUT_CLASSIFICATION	0.9998619012713077	WITHOUT_CLASSIFICATION	1.380987286922297E-4	IMPLEMENTATION
//            write('S');	WITHOUT_CLASSIFICATION	0.9999683231400376	WITHOUT_CLASSIFICATION	3.1676859962398316E-5	IMPLEMENTATION
// switch on the object's *native type*. This allows use-defined // classes that have extended core native types to piggyback on their // marshalling logic.	WITHOUT_CLASSIFICATION	0.9999815359580645	WITHOUT_CLASSIFICATION	1.846404193552913E-5	IMPLEMENTATION
// object is a custom class that extended one of the native types other than Object	WITHOUT_CLASSIFICATION	0.9999880460970981	WITHOUT_CLASSIFICATION	1.1953902901827801E-5	IMPLEMENTATION
// We do not want to capture cached methods	WITHOUT_CLASSIFICATION	0.9999629616658026	WITHOUT_CLASSIFICATION	3.703833419755775E-5	IMPLEMENTATION
// w_symbol	WITHOUT_CLASSIFICATION	0.9998958456288372	WITHOUT_CLASSIFICATION	1.041543711627777E-4	IMPLEMENTATION
// w_unique	WITHOUT_CLASSIFICATION	0.9998951314585452	WITHOUT_CLASSIFICATION	1.0486854145476312E-4	IMPLEMENTATION
// call the proc, but not for symbols	WITHOUT_CLASSIFICATION	0.9999520014213054	WITHOUT_CLASSIFICATION	4.7998578694731014E-5	IMPLEMENTATION
// Major // Minor	WITHOUT_CLASSIFICATION	0.999898634958066	WITHOUT_CLASSIFICATION	1.0136504193408971E-4	IMPLEMENTATION
// any ivars, since we don't have __attached__ ivar now	WITHOUT_CLASSIFICATION	0.9999626502844915	WITHOUT_CLASSIFICATION	3.734971550842042E-5	IMPLEMENTATION
// "hashdef" object, a hash with a default	WITHOUT_CLASSIFICATION	0.9999827933024227	WITHOUT_CLASSIFICATION	1.7206697577348872E-5	IMPLEMENTATION
// All "C" marshalled objects descend from core classes, which are all RubyObject	WITHOUT_CLASSIFICATION	0.9999804938741922	WITHOUT_CLASSIFICATION	1.9506125807705375E-5	IMPLEMENTATION
// sic	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999784510616985	WITHOUT_CLASSIFICATION	2.1548938301489018E-5	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999784510616985	WITHOUT_CLASSIFICATION	2.1548938301489018E-5	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999784510616985	WITHOUT_CLASSIFICATION	2.1548938301489018E-5	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999866091386672	WITHOUT_CLASSIFICATION	1.3390861332864422E-5	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999866091386672	WITHOUT_CLASSIFICATION	1.3390861332864422E-5	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999461136961417	WITHOUT_CLASSIFICATION	5.388630385831002E-5	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999461136961417	WITHOUT_CLASSIFICATION	5.388630385831002E-5	IMPLEMENTATION
/*     * If we are setting post arguments we can assume there are no pre or others     */	WITHOUT_CLASSIFICATION	0.999998512921888	WITHOUT_CLASSIFICATION	1.4870781119579966E-6	IMPLEMENTATION
// XXX: 0xffff0000 on BE?	WITHOUT_CLASSIFICATION	0.9998574254327479	WITHOUT_CLASSIFICATION	1.4257456725214293E-4	IMPLEMENTATION
// unsigned short, native	WITHOUT_CLASSIFICATION	0.9999033434403506	WITHOUT_CLASSIFICATION	9.665655964949353E-5	IMPLEMENTATION
// int, native // long, native	WITHOUT_CLASSIFICATION	0.9999228665142507	WITHOUT_CLASSIFICATION	7.71334857493042E-5	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999784510616985	WITHOUT_CLASSIFICATION	2.1548938301489018E-5	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999784510616985	WITHOUT_CLASSIFICATION	2.1548938301489018E-5	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999784510616985	WITHOUT_CLASSIFICATION	2.1548938301489018E-5	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999866091386672	WITHOUT_CLASSIFICATION	1.3390861332864422E-5	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999866091386672	WITHOUT_CLASSIFICATION	1.3390861332864422E-5	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999866091386672	WITHOUT_CLASSIFICATION	1.3390861332864422E-5	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999461136961417	WITHOUT_CLASSIFICATION	5.388630385831002E-5	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999461136961417	WITHOUT_CLASSIFICATION	5.388630385831002E-5	IMPLEMENTATION
// Look for slash, starting from 'start' position, until 'end'.	WITHOUT_CLASSIFICATION	0.9999749291509076	WITHOUT_CLASSIFICATION	2.5070849092379048E-5	IMPLEMENTATION
// Our values holder (name of variables are kept in staticScope)	WITHOUT_CLASSIFICATION	0.9999761497846049	WITHOUT_CLASSIFICATION	2.3850215395135376E-5	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999909007181998	WITHOUT_CLASSIFICATION	9.099281800174938E-6	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999909007181998	WITHOUT_CLASSIFICATION	9.099281800174938E-6	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999909007181998	WITHOUT_CLASSIFICATION	9.099281800174938E-6	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999909007181998	WITHOUT_CLASSIFICATION	9.099281800174938E-6	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999909007181998	WITHOUT_CLASSIFICATION	9.099281800174938E-6	IMPLEMENTATION
// SunSignalFacade	WITHOUT_CLASSIFICATION	0.9998977695370241	WITHOUT_CLASSIFICATION	1.0223046297589722E-4	IMPLEMENTATION
// All braces pushed..	WITHOUT_CLASSIFICATION	0.999920387189837	WITHOUT_CLASSIFICATION	7.961281016303075E-5	IMPLEMENTATION
/* failed : try next recursion */	WITHOUT_CLASSIFICATION	0.999939041271214	WITHOUT_CLASSIFICATION	6.0958728785949146E-5	IMPLEMENTATION
// leftToken made us start as nest 1	WITHOUT_CLASSIFICATION	0.9999568003671824	WITHOUT_CLASSIFICATION	4.319963281763374E-5	IMPLEMENTATION
// are we at '**/'	WITHOUT_CLASSIFICATION	0.9999062245322664	WITHOUT_CLASSIFICATION	9.377546773347953E-5	IMPLEMENTATION
// No or mismatched braces..Move along..nothing to see here	WITHOUT_CLASSIFICATION	0.9999757291813791	WITHOUT_CLASSIFICATION	2.427081862083113E-5	IMPLEMENTATION
// not enough bytes	WITHOUT_CLASSIFICATION	0.9995394601166219	WITHOUT_CLASSIFICATION	4.6053988337812265E-4	IMPLEMENTATION
// Get index of last read byte	WITHOUT_CLASSIFICATION	0.9999425799385941	WITHOUT_CLASSIFICATION	5.7420061405797164E-5	IMPLEMENTATION
// skip inner braces	WITHOUT_CLASSIFICATION	0.9999461107293027	WITHOUT_CLASSIFICATION	5.388927069718851E-5	IMPLEMENTATION
/*     * Process {}'s (example: Dir.glob("{jruby,jython}/README*")      */	WITHOUT_CLASSIFICATION	0.9999862260794883	WITHOUT_CLASSIFICATION	1.3773920511592023E-5	IMPLEMENTATION
/* complete, according to Posix.2 */	WITHOUT_CLASSIFICATION	0.9999087627735764	WITHOUT_CLASSIFICATION	9.123722642353063E-5	IMPLEMENTATION
/* Only accept an open brace if there is a close */	WITHOUT_CLASSIFICATION	0.9999742846965796	WITHOUT_CLASSIFICATION	2.5715303420403274E-5	IMPLEMENTATION
/* brace to match it.  Bracket expressions must be */	WITHOUT_CLASSIFICATION	0.9999440432965915	WITHOUT_CLASSIFICATION	5.5956703408628745E-5	IMPLEMENTATION
// index of left-most brace // index of right-most brace	WITHOUT_CLASSIFICATION	0.9999326358001015	WITHOUT_CLASSIFICATION	6.736419989846688E-5	IMPLEMENTATION
// Length check is a hack.  We should not be reeiving "" as a filename ever. 	WITHOUT_CLASSIFICATION	0.9999690896808235	WITHOUT_CLASSIFICATION	3.091031917640989E-5	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999008513794647	WITHOUT_CLASSIFICATION	9.91486205352685E-5	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999008513794647	WITHOUT_CLASSIFICATION	9.91486205352685E-5	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999008513794647	WITHOUT_CLASSIFICATION	9.91486205352685E-5	IMPLEMENTATION
// Pickaxe says @ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9999779355315775	WITHOUT_CLASSIFICATION	2.2064468422366173E-5	IMPLEMENTATION
// Pickaxe says @@ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9999779355315775	WITHOUT_CLASSIFICATION	2.2064468422366173E-5	IMPLEMENTATION
// SimpleSampler	WITHOUT_CLASSIFICATION	0.9999074710250255	WITHOUT_CLASSIFICATION	9.252897497451256E-5	IMPLEMENTATION
/*     * convert into longs, returning unsigned 64-bit values as signed longs     * ( num2long raises a RangeError on values > Long.MAX_VALUE )     */	WITHOUT_CLASSIFICATION	0.9999932392371034	WITHOUT_CLASSIFICATION	6.760762896585939E-6	IMPLEMENTATION
// b64_xtable for decoding Base 64	WITHOUT_CLASSIFICATION	0.9999424816118717	WITHOUT_CLASSIFICATION	5.7518388128348885E-5	IMPLEMENTATION
// single precision, little-endian	WITHOUT_CLASSIFICATION	0.9999341444454957	WITHOUT_CLASSIFICATION	6.585555450434335E-5	IMPLEMENTATION
// single precision, big-endian	WITHOUT_CLASSIFICATION	0.9999338504831055	WITHOUT_CLASSIFICATION	6.614951689447726E-5	IMPLEMENTATION
// single precision, native	WITHOUT_CLASSIFICATION	0.9999099291507042	WITHOUT_CLASSIFICATION	9.007084929578494E-5	IMPLEMENTATION
// single precision, native // single precision, native	WITHOUT_CLASSIFICATION	0.9998946498252876	WITHOUT_CLASSIFICATION	1.0535017471236801E-4	IMPLEMENTATION
// double precision, little-endian	WITHOUT_CLASSIFICATION	0.9999782602790142	WITHOUT_CLASSIFICATION	2.1739720985878858E-5	IMPLEMENTATION
// double precision, big-endian	WITHOUT_CLASSIFICATION	0.9999781632341468	WITHOUT_CLASSIFICATION	2.183676585318622E-5	IMPLEMENTATION
// double precision, native	WITHOUT_CLASSIFICATION	0.99997026603278	WITHOUT_CLASSIFICATION	2.973396721995271E-5	IMPLEMENTATION
// signed short, little-endian	WITHOUT_CLASSIFICATION	0.9999213133985025	WITHOUT_CLASSIFICATION	7.868660149748385E-5	IMPLEMENTATION
// signed char	WITHOUT_CLASSIFICATION	0.9998998655537704	WITHOUT_CLASSIFICATION	1.0013444622952409E-4	IMPLEMENTATION
// unsigned char	WITHOUT_CLASSIFICATION	0.9999047704240313	WITHOUT_CLASSIFICATION	9.522957596869223E-5	IMPLEMENTATION
// long, little-endian	WITHOUT_CLASSIFICATION	0.9999520572761155	WITHOUT_CLASSIFICATION	4.794272388457945E-5	IMPLEMENTATION
// long, big-endian	WITHOUT_CLASSIFICATION	0.9999429318257091	WITHOUT_CLASSIFICATION	5.7068174290874054E-5	IMPLEMENTATION
// unsigned int, native	WITHOUT_CLASSIFICATION	0.9998992150045622	WITHOUT_CLASSIFICATION	1.0078499543770934E-4	IMPLEMENTATION
// int, native	WITHOUT_CLASSIFICATION	0.9998931211821451	WITHOUT_CLASSIFICATION	1.068788178549195E-4	IMPLEMENTATION
// 64-bit number, native (as fixnum)	WITHOUT_CLASSIFICATION	0.9998847934961996	WITHOUT_CLASSIFICATION	1.1520650380040875E-4	IMPLEMENTATION
// How many occurrences of 'type' we want	WITHOUT_CLASSIFICATION	0.9999246930214007	WITHOUT_CLASSIFICATION	7.530697859927456E-5	IMPLEMENTATION
// See if we have a converter for the job...	WITHOUT_CLASSIFICATION	0.9999794948165268	WITHOUT_CLASSIFICATION	2.050518347319354E-5	IMPLEMENTATION
// Otherwise the unpack should be here...	WITHOUT_CLASSIFICATION	0.9999348615104	WITHOUT_CLASSIFICATION	6.513848959994786E-5	IMPLEMENTATION
// Possible Checksum Byte	WITHOUT_CLASSIFICATION	0.9999210301214854	WITHOUT_CLASSIFICATION	7.896987851465667E-5	IMPLEMENTATION
// obtain a	WITHOUT_CLASSIFICATION	0.9998974815245865	WITHOUT_CLASSIFICATION	1.0251847541362394E-4	IMPLEMENTATION
// obtain b	WITHOUT_CLASSIFICATION	0.9998975114286293	WITHOUT_CLASSIFICATION	1.024885713707213E-4	IMPLEMENTATION
// obtain c	WITHOUT_CLASSIFICATION	0.9998976113936197	WITHOUT_CLASSIFICATION	1.0238860638045606E-4	IMPLEMENTATION
// obtain d	WITHOUT_CLASSIFICATION	0.9998972918977852	WITHOUT_CLASSIFICATION	1.0270810221478557E-4	IMPLEMENTATION
/*encode.limit() - */	WITHOUT_CLASSIFICATION	0.9999123870420747	WITHOUT_CLASSIFICATION	8.761295792516673E-5	IMPLEMENTATION
/* 1 */	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
/* 2 */	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
/* 3 */	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
/* 4 */	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
/* 5 */	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
/* 6 */	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
/* 7 */	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
// Skip all whitespace in pack format string	WITHOUT_CLASSIFICATION	0.9999628811828672	WITHOUT_CLASSIFICATION	3.7118817132715576E-5	IMPLEMENTATION
// Skip embedded comments in pack format string	WITHOUT_CLASSIFICATION	0.9999722451033302	WITHOUT_CLASSIFICATION	2.775489666982655E-5	IMPLEMENTATION
// In case when the number of occurences is // explicitly specified, we have to read up // the remaining garbage after the '\0' to // satisfy the requested pattern.	WITHOUT_CLASSIFICATION	0.9999988158651266	WITHOUT_CLASSIFICATION	1.184134873400035E-6	IMPLEMENTATION
//normal exit, this should be faster than a test at each iterations for string with more than //about 40 char	WITHOUT_CLASSIFICATION	0.9999816626444162	WITHOUT_CLASSIFICATION	1.833735558371952E-5	IMPLEMENTATION
// We encountered '\0' when // were reading the buffer above, // increment the number of read bytes.	WITHOUT_CLASSIFICATION	0.9999912896924641	WITHOUT_CLASSIFICATION	8.710307535802528E-6	IMPLEMENTATION
// MRI behavior: Contrary to what seems to be logical, // when '*' is given, MRI calculates the distance // to the end, in order to go backwards.	WITHOUT_CLASSIFICATION	0.9999948199994912	WITHOUT_CLASSIFICATION	5.180000508772559E-6	IMPLEMENTATION
// Determine how many of type are needed (default: 1)	WITHOUT_CLASSIFICATION	0.9999710155278863	WITHOUT_CLASSIFICATION	2.8984472113792297E-5	IMPLEMENTATION
// 'Z' adds extra null pad (versus 'a')	WITHOUT_CLASSIFICATION	0.999933071522517	WITHOUT_CLASSIFICATION	6.692847748295332E-5	IMPLEMENTATION
//if the low bit is set //set the high bit of the result	WITHOUT_CLASSIFICATION	0.999985354076662	WITHOUT_CLASSIFICATION	1.4645923338074576E-5	IMPLEMENTATION
//if the index is not a multiple of 8, we are not on a byte boundary //shift the byte	WITHOUT_CLASSIFICATION	0.9999527249194428	WITHOUT_CLASSIFICATION	4.727508055720321E-5	IMPLEMENTATION
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9999459259966355	WITHOUT_CLASSIFICATION	5.407400336454344E-5	IMPLEMENTATION
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9999459259966355	WITHOUT_CLASSIFICATION	5.407400336454344E-5	IMPLEMENTATION
//do some padding, I don't understand the padding strategy	WITHOUT_CLASSIFICATION	0.9999224527806677	WITHOUT_CLASSIFICATION	7.754721933226248E-5	IMPLEMENTATION
// we filled up current byte; append it and create next one	WITHOUT_CLASSIFICATION	0.9999783335028918	WITHOUT_CLASSIFICATION	2.1666497108227306E-5	IMPLEMENTATION
//if the index is not a multiple of 8, we are not on a byte boundary	WITHOUT_CLASSIFICATION	0.999936274733202	WITHOUT_CLASSIFICATION	6.37252667980667E-5	IMPLEMENTATION
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9999682397005369	WITHOUT_CLASSIFICATION	3.176029946308399E-5	IMPLEMENTATION
// we don't deal with negatives.	WITHOUT_CLASSIFICATION	0.9999757283878423	WITHOUT_CLASSIFICATION	2.4271612157607813E-5	IMPLEMENTATION
// populate commandline with NG-provided stuff	WITHOUT_CLASSIFICATION	0.9999691441421187	WITHOUT_CLASSIFICATION	3.085585788132739E-5	IMPLEMENTATION
// are we recursing?	WITHOUT_CLASSIFICATION	0.9999137290827413	WITHOUT_CLASSIFICATION	8.627091725868303E-5	IMPLEMENTATION
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999975050242462	WITHOUT_CLASSIFICATION	2.4949757538434283E-6	IMPLEMENTATION
// default PidGetter	WITHOUT_CLASSIFICATION	0.9999815690379672	WITHOUT_CLASSIFICATION	1.843096203280138E-5	IMPLEMENTATION
// ignore and try windows version	WITHOUT_CLASSIFICATION	0.9999971320980637	WITHOUT_CLASSIFICATION	2.8679019363404076E-6	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999960223617053	WITHOUT_CLASSIFICATION	3.97763829477234E-6	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999960223617053	WITHOUT_CLASSIFICATION	3.97763829477234E-6	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999960223617053	WITHOUT_CLASSIFICATION	3.97763829477234E-6	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999960223617053	WITHOUT_CLASSIFICATION	3.97763829477234E-6	IMPLEMENTATION
// try both	WITHOUT_CLASSIFICATION	0.9999273711053291	WITHOUT_CLASSIFICATION	7.262889467082662E-5	IMPLEMENTATION
// just unix	WITHOUT_CLASSIFICATION	0.9999172585529907	WITHOUT_CLASSIFICATION	8.274144700924867E-5	IMPLEMENTATION
// just windows	WITHOUT_CLASSIFICATION	0.9999283243103935	WITHOUT_CLASSIFICATION	7.167568960654604E-5	IMPLEMENTATION
// neither	WITHOUT_CLASSIFICATION	0.9970036909586345	WITHOUT_CLASSIFICATION	0.0029963090413655316	IMPLEMENTATION
// CON: popen is a case where I think we should just always shell out.	WITHOUT_CLASSIFICATION	0.9999721007148592	WITHOUT_CLASSIFICATION	2.7899285140753038E-5	IMPLEMENTATION
// single string command, pass to sh to expand wildcards	WITHOUT_CLASSIFICATION	0.9999694489079285	WITHOUT_CLASSIFICATION	3.0551092071521556E-5	IMPLEMENTATION
// direct invocation of the command	WITHOUT_CLASSIFICATION	0.9999882799170643	WITHOUT_CLASSIFICATION	1.1720082935640295E-5	IMPLEMENTATION
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999681395231947	WITHOUT_CLASSIFICATION	3.186047680525286E-5	IMPLEMENTATION
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999681395231947	WITHOUT_CLASSIFICATION	3.186047680525286E-5	IMPLEMENTATION
// close process output // See JRUBY-3405; hooking up to parent process stdin caused // problems for IRB etc using stdin.	WITHOUT_CLASSIFICATION	0.9999879367324234	WITHOUT_CLASSIFICATION	1.2063267576484324E-5	IMPLEMENTATION
// ignore, we're on the way out	WITHOUT_CLASSIFICATION	0.9999960871814291	WITHOUT_CLASSIFICATION	3.912818570981394E-6	IMPLEMENTATION
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999842184837108	WITHOUT_CLASSIFICATION	1.5781516289231867E-5	IMPLEMENTATION
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999792751942088	WITHOUT_CLASSIFICATION	2.07248057911645E-5	IMPLEMENTATION
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999792751942088	WITHOUT_CLASSIFICATION	2.07248057911645E-5	IMPLEMENTATION
// popen caller wants to be able to write, provide subprocess out directly	WITHOUT_CLASSIFICATION	0.9999822528326269	WITHOUT_CLASSIFICATION	1.7747167373157798E-5	IMPLEMENTATION
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999643946439256	WITHOUT_CLASSIFICATION	3.5605356074346124E-5	IMPLEMENTATION
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999643946439256	WITHOUT_CLASSIFICATION	3.5605356074346124E-5	IMPLEMENTATION
// execute command with sh -c // this does shell expansion of wildcards	WITHOUT_CLASSIFICATION	0.9999902531483414	WITHOUT_CLASSIFICATION	9.746851658459323E-6	IMPLEMENTATION
// We need to close the out, since some // processes would just wait for the stream // to be closed before they process its content, // and produce the output. E.g.: "cat".	WITHOUT_CLASSIFICATION	0.9999986526384295	WITHOUT_CLASSIFICATION	1.3473615705973293E-6	IMPLEMENTATION
// we only close out if it's the slave stream, to avoid // closing a directly-mapped stream from parent process	WITHOUT_CLASSIFICATION	0.9999953211215564	WITHOUT_CLASSIFICATION	4.678878443546035E-6	IMPLEMENTATION
// The assumption here is that the 'in' stream provides // proper available() support. If available() always // returns 0, we'll hang!	WITHOUT_CLASSIFICATION	0.9999928135620167	WITHOUT_CLASSIFICATION	7.186437983182308E-6	IMPLEMENTATION
// Force t3 to quit, just in case if it's stuck. // Note: On some platforms, even interrupt might not // have an effect if the thread is IO blocked.	WITHOUT_CLASSIFICATION	0.9999923776099828	WITHOUT_CLASSIFICATION	7.622390017157522E-6	IMPLEMENTATION
// Check for special shell characters [<>|] at the beginning // and end of each command word and don't run in process if we find them.	WITHOUT_CLASSIFICATION	0.9999988795137192	WITHOUT_CLASSIFICATION	1.1204862807286689E-6	IMPLEMENTATION
// Note: this method produces meaningful results // only for RubyIO objects. For everything else returns 0.	WITHOUT_CLASSIFICATION	0.9999704771253569	WITHOUT_CLASSIFICATION	2.952287464311885E-5	IMPLEMENTATION
//sequential	WITHOUT_CLASSIFICATION	0.9998999308036743	WITHOUT_CLASSIFICATION	1.0006919632556871E-4	IMPLEMENTATION
// reverse the entire area of the array selected if it's reversed.	WITHOUT_CLASSIFICATION	0.9999901510028928	WITHOUT_CLASSIFICATION	9.84899710719683E-6	IMPLEMENTATION
// do median of 7 if the array is over 200 elements.	WITHOUT_CLASSIFICATION	0.9999773094429685	WITHOUT_CLASSIFICATION	2.2690557031536153E-5	IMPLEMENTATION
// if it's less than 200 do median of 3	WITHOUT_CLASSIFICATION	0.9999460850532353	WITHOUT_CLASSIFICATION	5.3914946764634924E-5	IMPLEMENTATION
// SignalFacade	WITHOUT_CLASSIFICATION	0.9998996297423969	WITHOUT_CLASSIFICATION	1.0037025760312568E-4	IMPLEMENTATION
// this is the order in which MRI does these two tests	WITHOUT_CLASSIFICATION	0.9999792917192092	WITHOUT_CLASSIFICATION	2.070828079083525E-5	IMPLEMENTATION
// this is the order in which MRI does these tests	WITHOUT_CLASSIFICATION	0.9999801951139579	WITHOUT_CLASSIFICATION	1.9804886042069832E-5	IMPLEMENTATION
// basically just forcing a TypeError here to match MRI	WITHOUT_CLASSIFICATION	0.9999458691960181	WITHOUT_CLASSIFICATION	5.413080398191419E-5	IMPLEMENTATION
// not saving DFS instance, as it will only be used once (at most) per call	WITHOUT_CLASSIFICATION	0.9998095032485921	WITHOUT_CLASSIFICATION	1.9049675140787623E-4	IMPLEMENTATION
// Args	WITHOUT_CLASSIFICATION	0.9963862269766699	WITHOUT_CLASSIFICATION	0.0036137730233301926	IMPLEMENTATION
// static methods only	WITHOUT_CLASSIFICATION	0.9999585890431912	WITHOUT_CLASSIFICATION	4.141095680885155E-5	IMPLEMENTATION
//System.err.println(" calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999772368166993	WITHOUT_CLASSIFICATION	2.2763183300686345E-5	IMPLEMENTATION
// MRI 1.8.6 behavior: null byte after '%' // leads to "%" string. Null byte in // other places, like "%5\0", leads to error.	WITHOUT_CLASSIFICATION	0.9999610881611626	WITHOUT_CLASSIFICATION	3.89118388374805E-5	IMPLEMENTATION
// last index (+1) accessed by next() // last index (+1) accessed by get()	WITHOUT_CLASSIFICATION	0.9999343687958545	WITHOUT_CLASSIFICATION	6.563120414555412E-5	IMPLEMENTATION
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly.	WITHOUT_CLASSIFICATION	0.999975528069557	WITHOUT_CLASSIFICATION	2.4471930442949338E-5	IMPLEMENTATION
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly. Version for 1.9.	WITHOUT_CLASSIFICATION	0.9999808279115321	WITHOUT_CLASSIFICATION	1.9172088467933156E-5	IMPLEMENTATION
// MRI doesn't flag it as an error if width is given multiple // times as a number (but it does for *)	WITHOUT_CLASSIFICATION	0.9999457593630061	WITHOUT_CLASSIFICATION	5.424063699378072E-5	IMPLEMENTATION
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999865780293532	WITHOUT_CLASSIFICATION	1.342197064674516E-5	IMPLEMENTATION
// MRI 1.8.5-p12 doesn't support 1-char strings, but // YARV 0.4.1 does. I don't think it hurts to include // this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])	WITHOUT_CLASSIFICATION	0.9999397737813926	WITHOUT_CLASSIFICATION	6.022621860745076E-5	IMPLEMENTATION
// 'd' and 'i' are the same	WITHOUT_CLASSIFICATION	0.9999456480821592	WITHOUT_CLASSIFICATION	5.4351917840773974E-5	IMPLEMENTATION
// 'u' with space or plus flags is same as 'd'	WITHOUT_CLASSIFICATION	0.9999363582164534	WITHOUT_CLASSIFICATION	6.364178354659016E-5	IMPLEMENTATION
// We depart here from strict adherence to MRI code, as MRI // uses C-sprintf, in part, to format numeric output, while // we'll use Java's numeric formatting code (and our own).	WITHOUT_CLASSIFICATION	0.9999841884697922	WITHOUT_CLASSIFICATION	1.581153020785027E-5	IMPLEMENTATION
// skip '-' in bytes, will add where appropriate	WITHOUT_CLASSIFICATION	0.9999538918196351	WITHOUT_CLASSIFICATION	4.610818036487867E-5	IMPLEMENTATION
// ..	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
// the 1 is for the stripped sign char	WITHOUT_CLASSIFICATION	0.9999757397986941	WITHOUT_CLASSIFICATION	2.426020130579221E-5	IMPLEMENTATION
// FIXME: what is correct 'recv' argument? // (this does produce the desired behavior)	WITHOUT_CLASSIFICATION	0.9998850846058828	WITHOUT_CLASSIFICATION	1.149153941172746E-4	IMPLEMENTATION
// gotta have at least a zero...	WITHOUT_CLASSIFICATION	0.9999447177024475	WITHOUT_CLASSIFICATION	5.528229755260786E-5	IMPLEMENTATION
// OK, we now have the significand in digits[0...nDigits] // and the exponent in exponent.  We're ready to format.	WITHOUT_CLASSIFICATION	0.9999807208187755	WITHOUT_CLASSIFICATION	1.927918122442253E-5	IMPLEMENTATION
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9999104551677552	WITHOUT_CLASSIFICATION	8.954483224485346E-5	IMPLEMENTATION
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9998977740664095	WITHOUT_CLASSIFICATION	1.022259335906193E-4	IMPLEMENTATION
//System.err.println(" stringToLong/reading c=" + data[s]);	WITHOUT_CLASSIFICATION	0.9999728946836128	WITHOUT_CLASSIFICATION	2.7105316387272276E-5	IMPLEMENTATION
//System.err.println(" stringToLong/converted c=" + c);	WITHOUT_CLASSIFICATION	0.9999731354582443	WITHOUT_CLASSIFICATION	2.6864541755726467E-5	IMPLEMENTATION
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9999104551677552	WITHOUT_CLASSIFICATION	8.954483224485346E-5	IMPLEMENTATION
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9998977740664095	WITHOUT_CLASSIFICATION	1.022259335906193E-4	IMPLEMENTATION
// precision for G/g includes integer digits	WITHOUT_CLASSIFICATION	0.9999506016809525	WITHOUT_CLASSIFICATION	4.939831904758227E-5	IMPLEMENTATION
// deal with length/width	WITHOUT_CLASSIFICATION	0.9999430690050614	WITHOUT_CLASSIFICATION	5.693099493859846E-5	IMPLEMENTATION
// deal with length/width	WITHOUT_CLASSIFICATION	0.9999430690050614	WITHOUT_CLASSIFICATION	5.693099493859846E-5	IMPLEMENTATION
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999675908152871	WITHOUT_CLASSIFICATION	3.24091847130491E-5	IMPLEMENTATION
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999928406119536	WITHOUT_CLASSIFICATION	7.159388046353406E-6	IMPLEMENTATION
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999116762068144	WITHOUT_CLASSIFICATION	8.832379318558368E-5	IMPLEMENTATION
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9998955649324311	WITHOUT_CLASSIFICATION	1.0443506756891177E-4	IMPLEMENTATION
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9999522751587064	WITHOUT_CLASSIFICATION	4.772484129358663E-5	IMPLEMENTATION
// MRI behavior: In this mode // trailing zeroes are removed: // 1.500E+05 -> 1.5E+05 	WITHOUT_CLASSIFICATION	0.999940777427334	WITHOUT_CLASSIFICATION	5.922257266606945E-5	IMPLEMENTATION
// '.' is printed	WITHOUT_CLASSIFICATION	0.9998996623432731	WITHOUT_CLASSIFICATION	1.0033765672696259E-4	IMPLEMENTATION
// all precision numebers printed	WITHOUT_CLASSIFICATION	0.9999311641395061	WITHOUT_CLASSIFICATION	6.883586049383549E-5	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9999264644089719	WITHOUT_CLASSIFICATION	7.353559102807435E-5	IMPLEMENTATION
// '.'	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
// decimal form, like (but not *just* like!) 'f'	WITHOUT_CLASSIFICATION	0.999916207630211	WITHOUT_CLASSIFICATION	8.379236978898262E-5	IMPLEMENTATION
// digits array shifted, update all	WITHOUT_CLASSIFICATION	0.9999560894880916	WITHOUT_CLASSIFICATION	4.391051190835203E-5	IMPLEMENTATION
// will have a trailing '.' // g fills trailing zeroes if #	WITHOUT_CLASSIFICATION	0.9999577454223559	WITHOUT_CLASSIFICATION	4.2254577644091196E-5	IMPLEMENTATION
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999274621873759	WITHOUT_CLASSIFICATION	7.253781262409546E-5	IMPLEMENTATION
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999274621873759	WITHOUT_CLASSIFICATION	7.253781262409546E-5	IMPLEMENTATION
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9999267684287246	WITHOUT_CLASSIFICATION	7.32315712753012E-5	IMPLEMENTATION
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9999267684287246	WITHOUT_CLASSIFICATION	7.32315712753012E-5	IMPLEMENTATION
// digits arr shifted, update all	WITHOUT_CLASSIFICATION	0.9999517133987493	WITHOUT_CLASSIFICATION	4.828660125056702E-5	IMPLEMENTATION
// (1|intlen).prec	WITHOUT_CLASSIFICATION	0.9998955649324311	WITHOUT_CLASSIFICATION	1.0443506756891177E-4	IMPLEMENTATION
// (1|intlen)	WITHOUT_CLASSIFICATION	0.9998955649324311	WITHOUT_CLASSIFICATION	1.0443506756891177E-4	IMPLEMENTATION
// will have a trailing '.'	WITHOUT_CLASSIFICATION	0.9999555923932357	WITHOUT_CLASSIFICATION	4.440760676438816E-5	IMPLEMENTATION
// fill up the rest with zeroes	WITHOUT_CLASSIFICATION	0.9999623203032779	WITHOUT_CLASSIFICATION	3.767969672203411E-5	IMPLEMENTATION
//System.err.println(" main/len=" + len);	WITHOUT_CLASSIFICATION	0.9999660579557221	WITHOUT_CLASSIFICATION	3.394204427789733E-5	IMPLEMENTATION
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999116762068144	WITHOUT_CLASSIFICATION	8.832379318558368E-5	IMPLEMENTATION
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9998955649324311	WITHOUT_CLASSIFICATION	1.0443506756891177E-4	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9999264644089719	WITHOUT_CLASSIFICATION	7.353559102807435E-5	IMPLEMENTATION
// '.'	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
// equivalent to MRI case '\0':	WITHOUT_CLASSIFICATION	0.9999206701497413	WITHOUT_CLASSIFICATION	7.932985025873183E-5	IMPLEMENTATION
// '.' and all precision digits printed	WITHOUT_CLASSIFICATION	0.9999334878368293	WITHOUT_CLASSIFICATION	6.65121631707282E-5	IMPLEMENTATION
// \v	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
// dangling '%' char	WITHOUT_CLASSIFICATION	0.9998982719646418	WITHOUT_CLASSIFICATION	1.0172803535825553E-4	IMPLEMENTATION
// main while loop (offset < length)	WITHOUT_CLASSIFICATION	0.9999491853622895	WITHOUT_CLASSIFICATION	5.0814637710512284E-5	IMPLEMENTATION
// debugging code, keeping for now	WITHOUT_CLASSIFICATION	0.9999422002089516	WITHOUT_CLASSIFICATION	5.779979104839748E-5	IMPLEMENTATION
// MRI rounds up on nnn5nnn, but not nnn5 -- // except for when they do	WITHOUT_CLASSIFICATION	0.9999081986307341	WITHOUT_CLASSIFICATION	9.180136926593529E-5	IMPLEMENTATION
// "%.0f" % 0.99	WITHOUT_CLASSIFICATION	0.9998955649324311	WITHOUT_CLASSIFICATION	1.0443506756891177E-4	IMPLEMENTATION
// limit the length of negatives if possible (also faster)	WITHOUT_CLASSIFICATION	0.9999673876586934	WITHOUT_CLASSIFICATION	3.2612341306627355E-5	IMPLEMENTATION
// negative values	WITHOUT_CLASSIFICATION	0.9999658080873315	WITHOUT_CLASSIFICATION	3.419191266851344E-5	IMPLEMENTATION
// calculation for negatives when %u specified // for values >= Integer.MIN_VALUE * 2, MRI uses (the equivalent of) //   long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val // for smaller values, BigInteger math is required to conform to MRI's // result.	WITHOUT_CLASSIFICATION	0.9999969659197845	WITHOUT_CLASSIFICATION	3.0340802155299875E-6	IMPLEMENTATION
// relatively cheap test for 32-bit values	WITHOUT_CLASSIFICATION	0.9999744422400918	WITHOUT_CLASSIFICATION	2.5557759908242972E-5	IMPLEMENTATION
// no such luck...	WITHOUT_CLASSIFICATION	0.9999255422030313	WITHOUT_CLASSIFICATION	7.445779696866528E-5	IMPLEMENTATION
// ok, now it gets expensive...	WITHOUT_CLASSIFICATION	0.999917109588803	WITHOUT_CLASSIFICATION	8.289041119700082E-5	IMPLEMENTATION
// go through negated powers of 32 until we find one small enough 	WITHOUT_CLASSIFICATION	0.9999493568913549	WITHOUT_CLASSIFICATION	5.064310864511018E-5	IMPLEMENTATION
// add to the corresponding positive power of 32 for the result. // meaningful? no. conformant? yes. I just write the code...	WITHOUT_CLASSIFICATION	0.9999969992541147	WITHOUT_CLASSIFICATION	3.0007458853101414E-6	IMPLEMENTATION
/* constant vector a */	WITHOUT_CLASSIFICATION	0.9999293768484175	WITHOUT_CLASSIFICATION	7.062315158246889E-5	IMPLEMENTATION
/* most significant w-r bits */	WITHOUT_CLASSIFICATION	0.9999246849877589	WITHOUT_CLASSIFICATION	7.531501224112691E-5	IMPLEMENTATION
/* least significant r bits */	WITHOUT_CLASSIFICATION	0.9999235772138712	WITHOUT_CLASSIFICATION	7.64227861288262E-5	IMPLEMENTATION
// state[j] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.999945049583047	WITHOUT_CLASSIFICATION	5.495041695304101E-5	IMPLEMENTATION
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.999945049583047	WITHOUT_CLASSIFICATION	5.495041695304101E-5	IMPLEMENTATION
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.999945049583047	WITHOUT_CLASSIFICATION	5.495041695304101E-5	IMPLEMENTATION
/* MSB is 1; assuring non-zero initial array */	WITHOUT_CLASSIFICATION	0.9999466970325624	WITHOUT_CLASSIFICATION	5.3302967437503675E-5	IMPLEMENTATION
/* Tempering */	WITHOUT_CLASSIFICATION	0.9998989354454192	WITHOUT_CLASSIFICATION	1.0106455458077027E-4	IMPLEMENTATION
// MRI behavior: Week values are monotonous. // So, weeks that effectively belong to previous year, // will get the value of 0, not 52 or 53, as in Java.	WITHOUT_CLASSIFICATION	0.9999931929825121	WITHOUT_CLASSIFICATION	6.8070174878792225E-6	IMPLEMENTATION
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999663520227736	WITHOUT_CLASSIFICATION	3.3647977226479145E-5	IMPLEMENTATION
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999663520227736	WITHOUT_CLASSIFICATION	3.3647977226479145E-5	IMPLEMENTATION
// \v	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
//System.err.println("getSign()");	WITHOUT_CLASSIFICATION	0.9999660510019939	WITHOUT_CLASSIFICATION	3.394899800608846E-5	IMPLEMENTATION
//System.err.println(" getSign/" + sign);	WITHOUT_CLASSIFICATION	0.9999660965477292	WITHOUT_CLASSIFICATION	3.390345227079405E-5	IMPLEMENTATION
//System.err.println("figureOutBase()/base=" + base);	WITHOUT_CLASSIFICATION	0.9999669553533576	WITHOUT_CLASSIFICATION	3.3044646642488115E-5	IMPLEMENTATION
//System.err.println(" figureOutBase/base=" + base);	WITHOUT_CLASSIFICATION	0.9999665110213206	WITHOUT_CLASSIFICATION	3.348897867941611E-5	IMPLEMENTATION
//System.err.println("calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999750868013075	WITHOUT_CLASSIFICATION	2.4913198692370896E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9966252646073278	WITHOUT_CLASSIFICATION	0.0033747353926723103	IMPLEMENTATION
//System.err.println(" stringToLong=" + val);	WITHOUT_CLASSIFICATION	0.999970962350746	WITHOUT_CLASSIFICATION	2.9037649253917152E-5	IMPLEMENTATION
// no number	WITHOUT_CLASSIFICATION	0.9999355031163806	WITHOUT_CLASSIFICATION	6.449688361936113E-5	IMPLEMENTATION
// trailing garbage	WITHOUT_CLASSIFICATION	0.9999184194186753	WITHOUT_CLASSIFICATION	8.158058132467227E-5	IMPLEMENTATION
//System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);	WITHOUT_CLASSIFICATION	0.9999743376727112	WITHOUT_CLASSIFICATION	2.566232728879052E-5	IMPLEMENTATION
// it was not found at all!	WITHOUT_CLASSIFICATION	0.9999515862426189	WITHOUT_CLASSIFICATION	4.8413757381079604E-5	IMPLEMENTATION
// can be overridden to be informed when objects are removed	WITHOUT_CLASSIFICATION	0.9999785136630998	WITHOUT_CLASSIFICATION	2.1486336900136075E-5	IMPLEMENTATION
// we reached the end of a list	WITHOUT_CLASSIFICATION	0.9999266632106555	WITHOUT_CLASSIFICATION	7.333678934444799E-5	IMPLEMENTATION
// goto next bucket	WITHOUT_CLASSIFICATION	0.9999063362797403	WITHOUT_CLASSIFICATION	9.36637202597093E-5	IMPLEMENTATION
// we reached the end	WITHOUT_CLASSIFICATION	0.9999213230192889	WITHOUT_CLASSIFICATION	7.86769807110722E-5	IMPLEMENTATION
// entry is the first element of this bucket	WITHOUT_CLASSIFICATION	0.9999775492071944	WITHOUT_CLASSIFICATION	2.2450792805690265E-5	IMPLEMENTATION
// states	WITHOUT_CLASSIFICATION	0.9976609177285206	WITHOUT_CLASSIFICATION	0.0023390822714793873	IMPLEMENTATION
// remove leading whitespace (includes _ for lax) // get sign, if any	WITHOUT_CLASSIFICATION	0.999987536057997	WITHOUT_CLASSIFICATION	1.2463942003044122E-5	IMPLEMENTATION
// optimistic pass - calculate value as digits are processed // digits - lax rules // decimal digits - lax rules // exponent sign/digits - lax rules // digits - strict rules // decimal digits - strict rules // exponent sign/digits - strict rules // complete calculation if possible	WITHOUT_CLASSIFICATION	0.9999877992954861	WITHOUT_CLASSIFICATION	1.220070451385432E-5	IMPLEMENTATION
// fields used for direct (optimistic) calculation // number of significant digits, updated as parsed // zeroes that may go to significand or exponent // offset of decimal pt from start (-1 -> no decimal) // significand, updated as parsed // exponent, updated as parsed	WITHOUT_CLASSIFICATION	0.999997735676983	WITHOUT_CLASSIFICATION	2.2643230169167185E-6	IMPLEMENTATION
// drop through for sign	WITHOUT_CLASSIFICATION	0.9999411678207865	WITHOUT_CLASSIFICATION	5.8832179213484414E-5	IMPLEMENTATION
// switch // will use this if we have to go back the slow way	WITHOUT_CLASSIFICATION	0.9999749903248165	WITHOUT_CLASSIFICATION	2.5009675183458606E-5	IMPLEMENTATION
// drop through for non-strict digits	WITHOUT_CLASSIFICATION	0.9999420292606626	WITHOUT_CLASSIFICATION	5.797073933745054E-5	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999736710522189	WITHOUT_CLASSIFICATION	2.6328947781167435E-5	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999978926075854	WITHOUT_CLASSIFICATION	2.1073924146892952E-6	IMPLEMENTATION
// no digits, go calc (will return +/- 0.0 for lax)	WITHOUT_CLASSIFICATION	0.9999620732385044	WITHOUT_CLASSIFICATION	3.792676149569513E-5	IMPLEMENTATION
// ignore leading zeroes	WITHOUT_CLASSIFICATION	0.9999961610749551	WITHOUT_CLASSIFICATION	3.838925044898004E-6	IMPLEMENTATION
// just save a count of zeroes for now; if no digit // ends up following them, they'll be applied to the // exponent rather than the significand (and our max // length for optimistic calc).	WITHOUT_CLASSIFICATION	0.9999902382237775	WITHOUT_CLASSIFICATION	9.76177622238228E-6	IMPLEMENTATION
// ok, got a non-zero, have to own up to our horded zeroes	WITHOUT_CLASSIFICATION	0.999946884018027	WITHOUT_CLASSIFICATION	5.311598197306697E-5	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999397481319289	WITHOUT_CLASSIFICATION	6.025186807124822E-5	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999397481319289	WITHOUT_CLASSIFICATION	6.025186807124822E-5	IMPLEMENTATION
// oh, well, it was worth a try. go let // Double/FloatingDecimal handle it 	WITHOUT_CLASSIFICATION	0.999837887571573	WITHOUT_CLASSIFICATION	1.6211242842696636E-4	IMPLEMENTATION
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999969846563947	WITHOUT_CLASSIFICATION	3.0153436052117E-6	IMPLEMENTATION
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999969846563947	WITHOUT_CLASSIFICATION	3.0153436052117E-6	IMPLEMENTATION
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999691605080364	WITHOUT_CLASSIFICATION	3.083949196369447E-5	IMPLEMENTATION
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999691605080364	WITHOUT_CLASSIFICATION	3.083949196369447E-5	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999467871002754	WITHOUT_CLASSIFICATION	5.3212899724578516E-5	IMPLEMENTATION
// first non_underscore char must be digit	WITHOUT_CLASSIFICATION	0.999968541435121	WITHOUT_CLASSIFICATION	3.14585648788612E-5	IMPLEMENTATION
// no dec digits, end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999568832505514	WITHOUT_CLASSIFICATION	4.311674944865032E-5	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.9999407769332609	WITHOUT_CLASSIFICATION	5.922306673907313E-5	IMPLEMENTATION
// difficult case, send to Double/FloatingDecimal	WITHOUT_CLASSIFICATION	0.999938162900615	WITHOUT_CLASSIFICATION	6.183709938507815E-5	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9963598452300426	WITHOUT_CLASSIFICATION	0.003640154769957477	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9963598452300426	WITHOUT_CLASSIFICATION	0.003640154769957477	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999736710522189	WITHOUT_CLASSIFICATION	2.6328947781167435E-5	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999736710522189	WITHOUT_CLASSIFICATION	2.6328947781167435E-5	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999736710522189	WITHOUT_CLASSIFICATION	2.6328947781167435E-5	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999978926075854	WITHOUT_CLASSIFICATION	2.1073924146892952E-6	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999397481319289	WITHOUT_CLASSIFICATION	6.025186807124822E-5	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999397481319289	WITHOUT_CLASSIFICATION	6.025186807124822E-5	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999397481319289	WITHOUT_CLASSIFICATION	6.025186807124822E-5	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999467871002754	WITHOUT_CLASSIFICATION	5.3212899724578516E-5	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999467871002754	WITHOUT_CLASSIFICATION	5.3212899724578516E-5	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999467871002754	WITHOUT_CLASSIFICATION	5.3212899724578516E-5	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.9999407769332609	WITHOUT_CLASSIFICATION	5.922306673907313E-5	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.9999407769332609	WITHOUT_CLASSIFICATION	5.922306673907313E-5	IMPLEMENTATION
// lax (str.to_f) allows underscores between e/E and sign	WITHOUT_CLASSIFICATION	0.9999323894141238	WITHOUT_CLASSIFICATION	6.761058587625194E-5	IMPLEMENTATION
// switch // for // no exponent, so drop through for calculation	WITHOUT_CLASSIFICATION	0.9999852513744927	WITHOUT_CLASSIFICATION	1.4748625507232045E-5	IMPLEMENTATION
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999728540079522	WITHOUT_CLASSIFICATION	2.714599204766681E-5	IMPLEMENTATION
// TODO: it's not clear to me why, in FloatingDecimal, the // "slop" calculation performed above for positive exponents // isn't used for negative exponents as well. Will find out...	WITHOUT_CLASSIFICATION	0.9484561451163758	WITHOUT_CLASSIFICATION	0.051543854883624174	IMPLEMENTATION
// no digits, error	WITHOUT_CLASSIFICATION	0.9999254832515614	WITHOUT_CLASSIFICATION	7.451674843861857E-5	IMPLEMENTATION
// too big for us	WITHOUT_CLASSIFICATION	0.9999151187638494	WITHOUT_CLASSIFICATION	8.488123615060337E-5	IMPLEMENTATION
// too big for us	WITHOUT_CLASSIFICATION	0.9999151187638494	WITHOUT_CLASSIFICATION	8.488123615060337E-5	IMPLEMENTATION
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999737578809702	WITHOUT_CLASSIFICATION	2.6242119029836017E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9966252646073278	WITHOUT_CLASSIFICATION	0.0033747353926723103	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9966252646073278	WITHOUT_CLASSIFICATION	0.0033747353926723103	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9966252646073278	WITHOUT_CLASSIFICATION	0.0033747353926723103	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9966252646073278	WITHOUT_CLASSIFICATION	0.0033747353926723103	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9966252646073278	WITHOUT_CLASSIFICATION	0.0033747353926723103	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999832798003242	WITHOUT_CLASSIFICATION	1.6720199675833653E-5	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999832798003242	WITHOUT_CLASSIFICATION	1.6720199675833653E-5	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999832798003242	WITHOUT_CLASSIFICATION	1.6720199675833653E-5	IMPLEMENTATION
// first char must be digit	WITHOUT_CLASSIFICATION	0.9999685908840401	WITHOUT_CLASSIFICATION	3.1409115959929095E-5	IMPLEMENTATION
// no dec digits after '.', error for strict	WITHOUT_CLASSIFICATION	0.9999561279698713	WITHOUT_CLASSIFICATION	4.3872030128562286E-5	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999978926075854	WITHOUT_CLASSIFICATION	2.1073924146892952E-6	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999467871002754	WITHOUT_CLASSIFICATION	5.3212899724578516E-5	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999467871002754	WITHOUT_CLASSIFICATION	5.3212899724578516E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9966252646073278	WITHOUT_CLASSIFICATION	0.0033747353926723103	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9966252646073278	WITHOUT_CLASSIFICATION	0.0033747353926723103	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999832798003242	WITHOUT_CLASSIFICATION	1.6720199675833653E-5	IMPLEMENTATION
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999737578809702	WITHOUT_CLASSIFICATION	2.6242119029836017E-5	IMPLEMENTATION
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999409171684569	WITHOUT_CLASSIFICATION	5.908283154308637E-5	IMPLEMENTATION
// switch //while	WITHOUT_CLASSIFICATION	0.9999525188031475	WITHOUT_CLASSIFICATION	4.748119685249998E-5	IMPLEMENTATION
/*     * All the positive powers of 10 that can be     * represented exactly in double/float.     * (From sun.misc.FloatingDecimal.java)     */	WITHOUT_CLASSIFICATION	0.9999885917093544	WITHOUT_CLASSIFICATION	1.1408290645594963E-5	IMPLEMENTATION
// Zlib behavior: negative win_bits means no header and no checksum.	WITHOUT_CLASSIFICATION	0.9999744737991451	WITHOUT_CLASSIFICATION	2.5526200854904214E-5	IMPLEMENTATION
// rb_enc_mbclen	WITHOUT_CLASSIFICATION	0.9998955649324311	WITHOUT_CLASSIFICATION	1.0443506756891177E-4	IMPLEMENTATION
// rb_enc_precise_mbclen	WITHOUT_CLASSIFICATION	0.9999123697745661	WITHOUT_CLASSIFICATION	8.763022543385698E-5	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9998956684882685	WITHOUT_CLASSIFICATION	1.0433151173145658E-4	IMPLEMENTATION
// arg cannot be negative	WITHOUT_CLASSIFICATION	0.9999587747264592	WITHOUT_CLASSIFICATION	4.122527354075923E-5	IMPLEMENTATION
// NoFunctionalitySignalFacade	WITHOUT_CLASSIFICATION	0.9999336662463332	WITHOUT_CLASSIFICATION	6.633375366681491E-5	IMPLEMENTATION
// Change visibility so others can see it	WITHOUT_CLASSIFICATION	0.9999642982280074	WITHOUT_CLASSIFICATION	3.570177199265307E-5	IMPLEMENTATION
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9999023885254564	WITHOUT_CLASSIFICATION	9.761147454355724E-5	IMPLEMENTATION
// strip off "_dot_rb" for .rb files	WITHOUT_CLASSIFICATION	0.9999505004503553	WITHOUT_CLASSIFICATION	4.949954964471515E-5	IMPLEMENTATION
// Makes sure the key is not already in the hashtable.	WITHOUT_CLASSIFICATION	0.999986075741769	WITHOUT_CLASSIFICATION	1.3924258230915181E-5	IMPLEMENTATION
// Rehash the table if the threshold is exceeded	WITHOUT_CLASSIFICATION	0.9999745539680164	WITHOUT_CLASSIFICATION	2.544603198354891E-5	IMPLEMENTATION
// Creates the new entry.	WITHOUT_CLASSIFICATION	0.9999766947769996	WITHOUT_CLASSIFICATION	2.3305223000366502E-5	IMPLEMENTATION
// next entry to return // current slot // current entry	WITHOUT_CLASSIFICATION	0.9999753861224243	WITHOUT_CLASSIFICATION	2.461387757565814E-5	IMPLEMENTATION
// advance to first entry	WITHOUT_CLASSIFICATION	0.9999541402129154	WITHOUT_CLASSIFICATION	4.5859787084559674E-5	IMPLEMENTATION
// The reason why we need the stream is to be able to invoke available() on it. // STDIN in Java is non-interruptible, non-selectable, and attempt to read // on such stream might lead to thread being blocked without *any* way to unblock it. // That's where available() comes it, so at least we could check whether // anything is available to be read without blocking.	WITHOUT_CLASSIFICATION	0.9999961789968007	WITHOUT_CLASSIFICATION	3.8210031992372884E-6	IMPLEMENTATION
/*package-protected*/	WITHOUT_CLASSIFICATION	0.9999470353065381	WITHOUT_CLASSIFICATION	5.296469346199326E-5	IMPLEMENTATION
// raw file URL, just open directly	WITHOUT_CLASSIFICATION	0.9999449671662771	WITHOUT_CLASSIFICATION	5.503283372292974E-5	IMPLEMENTATION
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999517496041294	WITHOUT_CLASSIFICATION	4.825039587049587E-5	IMPLEMENTATION
// if refcount is at or below zero, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999615556495363	WITHOUT_CLASSIFICATION	3.844435046362843E-5	IMPLEMENTATION
// if channel is already closed, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999727610864635	WITHOUT_CLASSIFICATION	2.7238913536482327E-5	IMPLEMENTATION
// otherwise decrement and possibly close as normal	WITHOUT_CLASSIFICATION	0.9999591849141389	WITHOUT_CLASSIFICATION	4.081508586104074E-5	IMPLEMENTATION
// r/w buffer // are we reading or writing?	WITHOUT_CLASSIFICATION	0.9999318702645784	WITHOUT_CLASSIFICATION	6.812973542151828E-5	IMPLEMENTATION
// this constructor is used by fdopen, so we don't increment descriptor ref count	WITHOUT_CLASSIFICATION	0.9999823929288056	WITHOUT_CLASSIFICATION	1.7607071194332364E-5	IMPLEMENTATION
// unread back	WITHOUT_CLASSIFICATION	0.9998986024801654	WITHOUT_CLASSIFICATION	1.0139751983465841E-4	IMPLEMENTATION
// iterate over remainder of buffer until we find a match	WITHOUT_CLASSIFICATION	0.9999724121343471	WITHOUT_CLASSIFICATION	2.7587865652988678E-5	IMPLEMENTATION
// terminate and advance buffer when we find our char	WITHOUT_CLASSIFICATION	0.9999578495559415	WITHOUT_CLASSIFICATION	4.215044405863318E-5	IMPLEMENTATION
// no match, append remainder of buffer and continue with next block	WITHOUT_CLASSIFICATION	0.9999817454408391	WITHOUT_CLASSIFICATION	1.825455916089474E-5	IMPLEMENTATION
// found a match above, check if remaining separator characters match, appending as we go	WITHOUT_CLASSIFICATION	0.9999938666356898	WITHOUT_CLASSIFICATION	6.133364310178719E-6	IMPLEMENTATION
// // Check file size - special files in /proc have zero size and need to be // handled by the generic read path. //	WITHOUT_CLASSIFICATION	0.999985622359679	WITHOUT_CLASSIFICATION	1.437764032086026E-5	IMPLEMENTATION
// // Copy any buffered data (including ungetc byte) //	WITHOUT_CLASSIFICATION	0.9999484433809924	WITHOUT_CLASSIFICATION	5.1556619007545484E-5	IMPLEMENTATION
// // Now read unbuffered directly from the file //	WITHOUT_CLASSIFICATION	0.9999810797228865	WITHOUT_CLASSIFICATION	1.8920277113410955E-5	IMPLEMENTATION
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999409171684569	WITHOUT_CLASSIFICATION	5.908283154308637E-5	IMPLEMENTATION
// // Need to clamp source (buffer) size to avoid overrun //	WITHOUT_CLASSIFICATION	0.9999471958430132	WITHOUT_CLASSIFICATION	5.280415698685731E-5	IMPLEMENTATION
// not closing from finalize	WITHOUT_CLASSIFICATION	0.9997743055962427	WITHOUT_CLASSIFICATION	2.256944037572726E-4	IMPLEMENTATION
// clear runtime so it doesn't get stuck in memory (JRUBY-2933)	WITHOUT_CLASSIFICATION	0.9999734683245299	WITHOUT_CLASSIFICATION	2.653167547005065E-5	IMPLEMENTATION
// silence	WITHOUT_CLASSIFICATION	0.9963817301726715	WITHOUT_CLASSIFICATION	0.003618269827328481	IMPLEMENTATION
// silence	WITHOUT_CLASSIFICATION	0.9963817301726715	WITHOUT_CLASSIFICATION	0.003618269827328481	IMPLEMENTATION
// Don't bother	WITHOUT_CLASSIFICATION	0.99990780553525	WITHOUT_CLASSIFICATION	9.219446474990605E-5	IMPLEMENTATION
// Don't bother	WITHOUT_CLASSIFICATION	0.99990780553525	WITHOUT_CLASSIFICATION	9.219446474990605E-5	IMPLEMENTATION
// For Sockets, only write as much as will fit.	WITHOUT_CLASSIFICATION	0.9999486938009461	WITHOUT_CLASSIFICATION	5.1306199053909355E-5	IMPLEMENTATION
// Correct position for read / write buffering (we could invalidate, but expensive)	WITHOUT_CLASSIFICATION	0.9999817056613233	WITHOUT_CLASSIFICATION	1.8294338676699435E-5	IMPLEMENTATION
// Adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999342406299077	WITHOUT_CLASSIFICATION	6.575937009235499E-5	IMPLEMENTATION
// for SEEK_CUR, need to adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999364967657323	WITHOUT_CLASSIFICATION	6.35032342677177E-5	IMPLEMENTATION
// libc flushes writes on any read from the actual file, so we flush here	WITHOUT_CLASSIFICATION	0.9999776188923386	WITHOUT_CLASSIFICATION	2.2381107661407287E-5	IMPLEMENTATION
// we have read ahead, and need to back up	WITHOUT_CLASSIFICATION	0.999932366699218	WITHOUT_CLASSIFICATION	6.763330078194049E-5	IMPLEMENTATION
// 128K seems to be the minimum at which the stat+seek is faster than reallocation	WITHOUT_CLASSIFICATION	0.9999834101553984	WITHOUT_CLASSIFICATION	1.6589844601623388E-5	IMPLEMENTATION
// // limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations //	WITHOUT_CLASSIFICATION	0.9999727073790992	WITHOUT_CLASSIFICATION	2.729262090094321E-5	IMPLEMENTATION
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999402538292028	WITHOUT_CLASSIFICATION	5.9746170797325095E-5	IMPLEMENTATION
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.999987000122815	WITHOUT_CLASSIFICATION	1.2999877184881066E-5	IMPLEMENTATION
// // Avoid double-copying for reads that are larger than the buffer size //	WITHOUT_CLASSIFICATION	0.9999815211278061	WITHOUT_CLASSIFICATION	1.8478872193891466E-5	IMPLEMENTATION
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999807641504059	WITHOUT_CLASSIFICATION	1.9235849594065155E-5	IMPLEMENTATION
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999807641504059	WITHOUT_CLASSIFICATION	1.9235849594065155E-5	IMPLEMENTATION
// // Avoid double-copying for reads that are larger than the buffer size, or // the destination is a direct buffer. //	WITHOUT_CLASSIFICATION	0.9999940985783787	WITHOUT_CLASSIFICATION	5.901421621279203E-6	IMPLEMENTATION
// // We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating // a huge temporary native buffer, when doing reads into a heap buffer // If the dst buffer is direct, then no need to limit. //	WITHOUT_CLASSIFICATION	0.9999750344623234	WITHOUT_CLASSIFICATION	2.496553767668826E-5	IMPLEMENTATION
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999742860847711	WITHOUT_CLASSIFICATION	2.5713915228881715E-5	IMPLEMENTATION
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999742860847711	WITHOUT_CLASSIFICATION	2.5713915228881715E-5	IMPLEMENTATION
// Doesn't fit in buffer. Write immediately. // ensure nothing left to write	WITHOUT_CLASSIFICATION	0.9999900776808555	WITHOUT_CLASSIFICATION	9.922319144590733E-6	IMPLEMENTATION
// truncate can't lengthen files, so we save position, seek/write, and go back	WITHOUT_CLASSIFICATION	0.9999780238615755	WITHOUT_CLASSIFICATION	2.197613842446772E-5	IMPLEMENTATION
// how far ahead we are when reading	WITHOUT_CLASSIFICATION	0.9999383377289126	WITHOUT_CLASSIFICATION	6.166227108737091E-5	IMPLEMENTATION
// if the read buffer is ahead, back up	WITHOUT_CLASSIFICATION	0.9999764433294009	WITHOUT_CLASSIFICATION	2.355667059910492E-5	IMPLEMENTATION
// close without removing from finalizers	WITHOUT_CLASSIFICATION	0.9999685912542154	WITHOUT_CLASSIFICATION	3.140874578453376E-5	IMPLEMENTATION
// putting a bit back, so we're not at EOF anymore	WITHOUT_CLASSIFICATION	0.9999715053886223	WITHOUT_CLASSIFICATION	2.8494611377589734E-5	IMPLEMENTATION
// save the ungot	WITHOUT_CLASSIFICATION	0.999950594475169	WITHOUT_CLASSIFICATION	4.940552483107454E-5	IMPLEMENTATION
// otherwise, we try an unbuffered read to get whatever's available	WITHOUT_CLASSIFICATION	0.9999593433734784	WITHOUT_CLASSIFICATION	4.06566265217137E-5	IMPLEMENTATION
// ignore this; select() will set the correct mode when it is finished	WITHOUT_CLASSIFICATION	0.9999984474495376	WITHOUT_CLASSIFICATION	1.5525504624693304E-6	IMPLEMENTATION
// flush first	WITHOUT_CLASSIFICATION	0.9999367118416684	WITHOUT_CLASSIFICATION	6.328815833150534E-5	IMPLEMENTATION
// // Wake up any channels that became unblocked //	WITHOUT_CLASSIFICATION	0.9999378554837061	WITHOUT_CLASSIFICATION	6.214451629396322E-5	IMPLEMENTATION
// // Register any new blocking I/O requests //	WITHOUT_CLASSIFICATION	0.999950185256349	WITHOUT_CLASSIFICATION	4.981474365094033E-5	IMPLEMENTATION
// Now clear out any previously selected channels	WITHOUT_CLASSIFICATION	0.9999831958701599	WITHOUT_CLASSIFICATION	1.6804129840073792E-5	IMPLEMENTATION
// // Wait for I/O on any channel //	WITHOUT_CLASSIFICATION	0.9999434104837258	WITHOUT_CLASSIFICATION	5.658951627416483E-5	IMPLEMENTATION
// Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'	WITHOUT_CLASSIFICATION	0.9999909217506936	WITHOUT_CLASSIFICATION	9.078249306499158E-6	IMPLEMENTATION
// Java requires "w" for creating a file that does not exist	WITHOUT_CLASSIFICATION	0.9999737500223997	WITHOUT_CLASSIFICATION	2.6249977600259888E-5	IMPLEMENTATION
// seek to force underlying buffer to flush	WITHOUT_CLASSIFICATION	0.9999332677320879	WITHOUT_CLASSIFICATION	6.673226791214863E-5	IMPLEMENTATION
// seek to force read buffer to invalidate	WITHOUT_CLASSIFICATION	0.9999546942832973	WITHOUT_CLASSIFICATION	4.530571670275796E-5	IMPLEMENTATION
/*        result = eval("arr = Array::['c', 200]; p arr");        assertEquals("[\"c\", 200]", result);        result = eval("arr = Array.['d', 200]; p arr");        assertEquals("[\"d\", 200]", result);        */	WITHOUT_CLASSIFICATION	0.9999942014367303	WITHOUT_CLASSIFICATION	5.798563269580978E-6	IMPLEMENTATION
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999788639424038	WITHOUT_CLASSIFICATION	2.1136057596311213E-5	IMPLEMENTATION
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.8512627459849513	WITHOUT_CLASSIFICATION	0.14873725401504878	IMPLEMENTATION
// make sure the pipe stream is set to null	WITHOUT_CLASSIFICATION	0.9999837289089434	WITHOUT_CLASSIFICATION	1.627109105663831E-5	IMPLEMENTATION
// make sure the main stream is set to null	WITHOUT_CLASSIFICATION	0.9999811783825189	WITHOUT_CLASSIFICATION	1.8821617481052375E-5	IMPLEMENTATION
// first try our custom-generated Unsafe	WITHOUT_CLASSIFICATION	0.9998723750077994	WITHOUT_CLASSIFICATION	1.276249922006502E-4	IMPLEMENTATION
// then try Sun's Unsafe	WITHOUT_CLASSIFICATION	0.9999403120673821	WITHOUT_CLASSIFICATION	5.968793261782195E-5	IMPLEMENTATION
// if we get here, the class and field exist; construct our Unsafe impl // that calls it directly	WITHOUT_CLASSIFICATION	0.9999883454823885	WITHOUT_CLASSIFICATION	1.1654517611593309E-5	IMPLEMENTATION
// else leave it null	WITHOUT_CLASSIFICATION	0.9999483208190559	WITHOUT_CLASSIFICATION	5.1679180943999345E-5	IMPLEMENTATION
// TypeMatcher	WITHOUT_CLASSIFICATION	0.9998981490446558	WITHOUT_CLASSIFICATION	1.0185095534422957E-4	IMPLEMENTATION
// This is now needed, since module Java // isn't in by default	WITHOUT_CLASSIFICATION	0.9999775900166783	WITHOUT_CLASSIFICATION	2.2409983321617804E-5	IMPLEMENTATION
// Iterate over the RubyHash keySet, simultaneously iterating over the values()	WITHOUT_CLASSIFICATION	0.9999763855667747	WITHOUT_CLASSIFICATION	2.3614433225288547E-5	IMPLEMENTATION
// Get the value from the map via the key	WITHOUT_CLASSIFICATION	0.9999934519382956	WITHOUT_CLASSIFICATION	6.548061704383623E-6	IMPLEMENTATION
// Get the value from the map via the values iterator	WITHOUT_CLASSIFICATION	0.9999956847734736	WITHOUT_CLASSIFICATION	4.315226526462781E-6	IMPLEMENTATION
// Check the 2 values obtained via different means	WITHOUT_CLASSIFICATION	0.99998447643228	WITHOUT_CLASSIFICATION	1.5523567720061558E-5	IMPLEMENTATION
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999811033484511	WITHOUT_CLASSIFICATION	1.8896651548854925E-5	IMPLEMENTATION
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999811033484511	WITHOUT_CLASSIFICATION	1.8896651548854925E-5	IMPLEMENTATION
// Check the entry.setValue values come back out ok	WITHOUT_CLASSIFICATION	0.9999870416956115	WITHOUT_CLASSIFICATION	1.295830438850075E-5	IMPLEMENTATION
// If we're running from within an IDE we may not have // the .rb files in our classpath. Try to find them // in the filesystem instead.	WITHOUT_CLASSIFICATION	0.9999966507556496	WITHOUT_CLASSIFICATION	3.3492443503673508E-6	IMPLEMENTATION
//assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); //assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));	WITHOUT_CLASSIFICATION	0.9999534669504839	WITHOUT_CLASSIFICATION	4.6533049516127353E-5	IMPLEMENTATION
// Init	WITHOUT_CLASSIFICATION	0.9966412335330126	WITHOUT_CLASSIFICATION	0.0033587664669872826	IMPLEMENTATION
// Block	WITHOUT_CLASSIFICATION	0.9963660324011864	WITHOUT_CLASSIFICATION	0.0036339675988135973	IMPLEMENTATION
// Copy constructor	WITHOUT_CLASSIFICATION	0.9999294089366874	WITHOUT_CLASSIFICATION	7.059106331266134E-5	IMPLEMENTATION
// presumably this require should fail	WITHOUT_CLASSIFICATION	0.9999251146873974	WITHOUT_CLASSIFICATION	7.488531260264051E-5	IMPLEMENTATION
// JRUBY-646 // presumably this require should fail	WITHOUT_CLASSIFICATION	0.9999200194921697	WITHOUT_CLASSIFICATION	7.998050783024033E-5	IMPLEMENTATION
// Test that requiring a normal Java class raises an error (JRUBY-3214	WITHOUT_CLASSIFICATION	0.9999759511198133	WITHOUT_CLASSIFICATION	2.40488801867114E-5	IMPLEMENTATION
// ok	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
// Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods // from Ruby so they are not really unused).	WITHOUT_CLASSIFICATION	0.9999750021464812	WITHOUT_CLASSIFICATION	2.499785351887629E-5	IMPLEMENTATION
//load should work several times in a row	WITHOUT_CLASSIFICATION	0.9998966616803705	WITHOUT_CLASSIFICATION	1.0333831962948002E-4	IMPLEMENTATION
//reset the $loadTestvar	WITHOUT_CLASSIFICATION	0.999931934080209	WITHOUT_CLASSIFICATION	6.806591979094982E-5	IMPLEMENTATION
//call throwException via JRuby	WITHOUT_CLASSIFICATION	0.9999554692360019	WITHOUT_CLASSIFICATION	4.453076399814402E-5	IMPLEMENTATION
// Notify the calling thread that we're about to go to sleep the first time	WITHOUT_CLASSIFICATION	0.9999881437751782	WITHOUT_CLASSIFICATION	1.1856224821728032E-5	IMPLEMENTATION
// wait for the go signal	WITHOUT_CLASSIFICATION	0.9999608606969219	WITHOUT_CLASSIFICATION	3.9139303078051045E-5	IMPLEMENTATION
// run ten separate calls into Ruby, with delay and explicit GC	WITHOUT_CLASSIFICATION	0.9999616114158352	WITHOUT_CLASSIFICATION	3.8388584164943264E-5	IMPLEMENTATION
// wait until thread has initialized	WITHOUT_CLASSIFICATION	0.9999635822594395	WITHOUT_CLASSIFICATION	3.6417740560575246E-5	IMPLEMENTATION
// notify thread to proceed	WITHOUT_CLASSIFICATION	0.9999263184408911	WITHOUT_CLASSIFICATION	7.368155910884372E-5	IMPLEMENTATION
// wait until thread has completed	WITHOUT_CLASSIFICATION	0.9998866229305385	WITHOUT_CLASSIFICATION	1.1337706946146785E-4	IMPLEMENTATION
// we do preand post load outside the "body" versions to pre-prepare // and pre-push the dynamic scope we need for lastline	WITHOUT_CLASSIFICATION	0.9999670438037577	WITHOUT_CLASSIFICATION	3.2956196242248974E-5	IMPLEMENTATION
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999733952805818	WITHOUT_CLASSIFICATION	2.660471941822512E-5	IMPLEMENTATION
// MRI behavior: raise ArgumentError for 'unknown command' before // checking number of args.	WITHOUT_CLASSIFICATION	0.9999893340450849	WITHOUT_CLASSIFICATION	1.0665954915128625E-5	IMPLEMENTATION
// if any exceptions were raised, we fail	WITHOUT_CLASSIFICATION	0.9998845886759163	WITHOUT_CLASSIFICATION	1.1541132408355932E-4	IMPLEMENTATION
// there should only be one more thread in thread group than before we started	WITHOUT_CLASSIFICATION	0.9999814209748626	WITHOUT_CLASSIFICATION	1.8579025137259647E-5	IMPLEMENTATION
// construct a new cache with thread's classloader and no limit	WITHOUT_CLASSIFICATION	0.9999654641643047	WITHOUT_CLASSIFICATION	3.4535835695243286E-5	IMPLEMENTATION
//        Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); //        Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();	WITHOUT_CLASSIFICATION	0.999987909814924	WITHOUT_CLASSIFICATION	1.2090185076050942E-5	IMPLEMENTATION
//        assertSame(script1, script2);	WITHOUT_CLASSIFICATION	0.9999772864879303	WITHOUT_CLASSIFICATION	2.2713512069741845E-5	IMPLEMENTATION
// void methods should work	WITHOUT_CLASSIFICATION	0.9999085756981261	WITHOUT_CLASSIFICATION	9.142430187387254E-5	IMPLEMENTATION
// methods with required = 4 or higher should bind and be callable using reflection // JRUBY-3649	WITHOUT_CLASSIFICATION	0.9999652110149425	WITHOUT_CLASSIFICATION	3.4788985057489204E-5	IMPLEMENTATION
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.999995923791034	WITHOUT_CLASSIFICATION	4.076208966006391E-6	IMPLEMENTATION
// Ensure we have a new interpreter for each test. Previous we were using the //  same interpreter which caused problems as soon as one test failed.	WITHOUT_CLASSIFICATION	0.9999909357404501	WITHOUT_CLASSIFICATION	9.064259549884728E-6	IMPLEMENTATION
// Without a flush Ant will miss some of our output	WITHOUT_CLASSIFICATION	0.9999441125585747	WITHOUT_CLASSIFICATION	5.588744142523198E-5	IMPLEMENTATION
// assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());	WITHOUT_CLASSIFICATION	0.999942750983154	WITHOUT_CLASSIFICATION	5.724901684602767E-5	IMPLEMENTATION
//        int n = 10;	WITHOUT_CLASSIFICATION	0.999965491787273	WITHOUT_CLASSIFICATION	3.4508212726943186E-5	IMPLEMENTATION
// there might be more test classes in a single file, so we iterate over them	WITHOUT_CLASSIFICATION	0.9999879595072788	WITHOUT_CLASSIFICATION	1.2040492721207596E-5	IMPLEMENTATION
//No ClassCastException!	WITHOUT_CLASSIFICATION	0.9999451769450162	WITHOUT_CLASSIFICATION	5.4823054983787E-5	IMPLEMENTATION
// value equality	WITHOUT_CLASSIFICATION	0.9999763465472767	WITHOUT_CLASSIFICATION	2.365345272330132E-5	IMPLEMENTATION
// identity equality	WITHOUT_CLASSIFICATION	0.9999237157329262	WITHOUT_CLASSIFICATION	7.628426707384414E-5	IMPLEMENTATION
// bench straight-up integer fib(30)	WITHOUT_CLASSIFICATION	0.9999218712436945	WITHOUT_CLASSIFICATION	7.812875630541796E-5	IMPLEMENTATION
// bench Integer fib	WITHOUT_CLASSIFICATION	0.9998984876675268	WITHOUT_CLASSIFICATION	1.0151233247335191E-4	IMPLEMENTATION
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999119871596555	WITHOUT_CLASSIFICATION	8.801284034453404E-5	IMPLEMENTATION
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999119871596555	WITHOUT_CLASSIFICATION	8.801284034453404E-5	IMPLEMENTATION
// bench fixnum-boxed fib	WITHOUT_CLASSIFICATION	0.9999118654889663	WITHOUT_CLASSIFICATION	8.813451103366236E-5	IMPLEMENTATION
// bench straight-up long fib(30)	WITHOUT_CLASSIFICATION	0.999919091846435	WITHOUT_CLASSIFICATION	8.090815356499524E-5	IMPLEMENTATION
// bench Long fib	WITHOUT_CLASSIFICATION	0.9998961307754752	WITHOUT_CLASSIFICATION	1.0386922452477519E-4	IMPLEMENTATION
// skip this one, probably no 'ls' (windows)	WITHOUT_CLASSIFICATION	0.9999634248548597	WITHOUT_CLASSIFICATION	3.657514514024995E-5	IMPLEMENTATION
// start off with a neutral parent	WITHOUT_CLASSIFICATION	0.9999681597851526	WITHOUT_CLASSIFICATION	3.18402148473998E-5	IMPLEMENTATION
/*            public class Hello {                public static String getMessage() {                    return ".....";                }            }            */	WITHOUT_CLASSIFICATION	0.9999994959992722	WITHOUT_CLASSIFICATION	5.040007278554999E-7	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999694149730028	WITHOUT_CLASSIFICATION	3.0585026997148135E-5	IMPLEMENTATION
// Note: We can't use file.exists() to check whether the symlink // exists or not, because that method returns false for existing // but broken symlink. So, we try without the existence check, // but in the try-catch block. // MRI behavior: symlink? on broken symlink should return true.	WITHOUT_CLASSIFICATION	0.9999979479132892	WITHOUT_CLASSIFICATION	2.052086710864077E-6	IMPLEMENTATION
// We are creating a new IO object that shares the same // IOHandler (and fileno).	WITHOUT_CLASSIFICATION	0.9999632083254684	WITHOUT_CLASSIFICATION	3.679167453151441E-5	IMPLEMENTATION
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999560050014091	WITHOUT_CLASSIFICATION	4.399499859073478E-5	IMPLEMENTATION
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9999462280164623	WITHOUT_CLASSIFICATION	5.3771983537736556E-5	IMPLEMENTATION
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.999977263753402	WITHOUT_CLASSIFICATION	2.273624659794351E-5	IMPLEMENTATION
// Translate "x || y" --> "x = (is_true(x) ? x : y)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, true, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9999736621403478	WITHOUT_CLASSIFICATION	2.633785965224501E-5	IMPLEMENTATION
// // Force the client socket to be blocking //	WITHOUT_CLASSIFICATION	0.9999647615921483	WITHOUT_CLASSIFICATION	3.523840785177012E-5	IMPLEMENTATION
// Additional context surrounding tokens that both the lexer and // grammar use.	WITHOUT_CLASSIFICATION	0.9999630973209136	WITHOUT_CLASSIFICATION	3.690267908639794E-5	IMPLEMENTATION
// Enebo:  c can never be antrhign but '.' // Why did I put this here?	WITHOUT_CLASSIFICATION	0.9998251459883621	WITHOUT_CLASSIFICATION	1.748540116378338E-4	IMPLEMENTATION
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9999905433819415	WITHOUT_CLASSIFICATION	9.456618058514602E-6	IMPLEMENTATION
//[C,C] //[C, boolean]	WITHOUT_CLASSIFICATION	0.9999413694988095	WITHOUT_CLASSIFICATION	5.86305011903963E-5	IMPLEMENTATION
// Label for the start of the closure (used to implement redo) // Label for the end of the closure (used to implement retry)	WITHOUT_CLASSIFICATION	0.9993503314934087	WITHOUT_CLASSIFICATION	6.496685065913069E-4	IMPLEMENTATION
// ignore; job was cancelled // FIXME: is this ok?	WITHOUT_CLASSIFICATION	0.9999852010086568	WITHOUT_CLASSIFICATION	1.4798991343147655E-5	IMPLEMENTATION
//                    // check arity //                    checkArity(mv, scope);	WITHOUT_CLASSIFICATION	0.999983272448645	WITHOUT_CLASSIFICATION	1.6727551354944452E-5	IMPLEMENTATION
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9999412215902538	WITHOUT_CLASSIFICATION	5.877840974632262E-5	IMPLEMENTATION
// we take the first method found as our "n" method, since for any non-specific // arity they'll all error the same. If an actual "n" method is created, we // use that.	WITHOUT_CLASSIFICATION	0.9999913912818215	WITHOUT_CLASSIFICATION	8.608718178574856E-6	IMPLEMENTATION
// Used by our duck-typification of Proc into interface types, to allow // coercing a simple proc into an interface parameter.	WITHOUT_CLASSIFICATION	0.9999899839489148	WITHOUT_CLASSIFICATION	1.0016051085245475E-5	IMPLEMENTATION
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999703846433191	WITHOUT_CLASSIFICATION	2.9615356680983286E-5	IMPLEMENTATION
// it's either as converted as we can make it via above logic or it's // not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999523725037832	WITHOUT_CLASSIFICATION	4.7627496216768484E-5	IMPLEMENTATION
// package scheme 2: separate module for each full package name, constructed  // from the camel-cased package segments: Java::JavaLang::Object, 	WITHOUT_CLASSIFICATION	0.9999907037915651	WITHOUT_CLASSIFICATION	9.296208434927574E-6	IMPLEMENTATION
// // construct the proxy method //	WITHOUT_CLASSIFICATION	0.999965777109603	WITHOUT_CLASSIFICATION	3.422289039694297E-5	IMPLEMENTATION
// line 159 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999541172837078	WITHOUT_CLASSIFICATION	4.588271629230325E-5	IMPLEMENTATION
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999631514037655	WITHOUT_CLASSIFICATION	3.6848596234538436E-5	IMPLEMENTATION
// line 152 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999541172837078	WITHOUT_CLASSIFICATION	4.588271629230325E-5	IMPLEMENTATION
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999940253793104	WITHOUT_CLASSIFICATION	5.974620689548885E-6	IMPLEMENTATION
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999631514037655	WITHOUT_CLASSIFICATION	3.6848596234538436E-5	IMPLEMENTATION
// We only need to pass in current scope if we are evaluating as a block (which // is only done for evals).  We need to pass this in so that we can appropriately scope // down to captured scopes when we are parsing.	WITHOUT_CLASSIFICATION	0.9999740520868605	WITHOUT_CLASSIFICATION	2.5947913139452386E-5	IMPLEMENTATION
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999865780293532	WITHOUT_CLASSIFICATION	1.342197064674516E-5	IMPLEMENTATION
// A place to store that special hiding space that bindings need to implement things like: // eval("a = 1", binding); eval("p a").  All binding instances must get access to this // hidden shared scope.  We store it here.  This will be null if no binding has yet // been called.	WITHOUT_CLASSIFICATION	0.9937213101994256	WITHOUT_CLASSIFICATION	0.006278689800574454	IMPLEMENTATION
// TODO: make it 16 now ? // MUST be power of 2!	WITHOUT_CLASSIFICATION	0.8660848328741789	WITHOUT_CLASSIFICATION	0.13391516712582108	IMPLEMENTATION
// check visibility // dup method	WITHOUT_CLASSIFICATION	0.9999860739316757	WITHOUT_CLASSIFICATION	1.3926068324197405E-5	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999909007181998	WITHOUT_CLASSIFICATION	9.099281800174938E-6	IMPLEMENTATION
// unsigned int, native // unsigned long, native	WITHOUT_CLASSIFICATION	0.9998829765249686	WITHOUT_CLASSIFICATION	1.1702347503135812E-4	IMPLEMENTATION
//need padding //I'm fairly sure there is a library call to create a //string filled with a given char with a given length but I couldn't find it	WITHOUT_CLASSIFICATION	0.9999958129433769	WITHOUT_CLASSIFICATION	4.187056623032861E-6	IMPLEMENTATION
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999928406119536	WITHOUT_CLASSIFICATION	7.159388046353406E-6	IMPLEMENTATION
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999788639424038	WITHOUT_CLASSIFICATION	2.1136057596311213E-5	IMPLEMENTATION
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999728540079522	WITHOUT_CLASSIFICATION	2.714599204766681E-5	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999912796499804	WITHOUT_CLASSIFICATION	8.720350019724116E-6	IMPLEMENTATION
// Estimate the square root with the foremost 62 bits of squarD // bi and scale are a tandem	WITHOUT_CLASSIFICATION	0.9999473257893653	WITHOUT_CLASSIFICATION	5.2674210634764924E-5	IMPLEMENTATION
// captures // begin and end are used when not groups defined // source string	WITHOUT_CLASSIFICATION	0.9999800708075082	WITHOUT_CLASSIFICATION	1.9929192491879002E-5	IMPLEMENTATION
// // INSTANCE VARIABLE RUBY METHODS //	WITHOUT_CLASSIFICATION	0.9999265850045284	WITHOUT_CLASSIFICATION	7.341499547174812E-5	IMPLEMENTATION
// switch // while	WITHOUT_CLASSIFICATION	0.9999610715902798	WITHOUT_CLASSIFICATION	3.892840972019755E-5	IMPLEMENTATION
// For nodes do not have their own scope so we pass null to indicate this. // 'For's are implemented as blocks in evaluation, but they have no scope so we // just deal with this lack of scope throughout its lifespan.  We should probably // change the way this works to get rid of multiple null checks.	WITHOUT_CLASSIFICATION	0.9996344348697951	WITHOUT_CLASSIFICATION	3.655651302049091E-4	IMPLEMENTATION
// This field is used during argument processing to avoid putting RubyArray // instances that are purely for utility purposes into ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999943836066469	WITHOUT_CLASSIFICATION	5.616393353090994E-6	IMPLEMENTATION
// Parent container for this context (can be dynamic!!) // If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure // List of IR instructions for this method	WITHOUT_CLASSIFICATION	0.999995248291767	WITHOUT_CLASSIFICATION	4.751708232964679E-6	IMPLEMENTATION
// Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = false    //    beq(v1, false, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999788176323462	WITHOUT_CLASSIFICATION	2.1182367653810118E-5	IMPLEMENTATION
// expected	WITHOUT_CLASSIFICATION	0.9999601440286694	WITHOUT_CLASSIFICATION	3.985597133061885E-5	IMPLEMENTATION
// Do nothing	WITHOUT_CLASSIFICATION	0.9999816875079338	WITHOUT_CLASSIFICATION	1.8312492066239223E-5	IMPLEMENTATION
// constructor	WITHOUT_CLASSIFICATION	0.9999383935589523	WITHOUT_CLASSIFICATION	6.16064410477201E-5	IMPLEMENTATION
// If a line is followed by a blank line put // it back.	WITHOUT_CLASSIFICATION	0.9999516935164205	WITHOUT_CLASSIFICATION	4.8306483579462736E-5	IMPLEMENTATION
/* $>: default output handle */	WITHOUT_CLASSIFICATION	0.9999470098033199	WITHOUT_CLASSIFICATION	5.299019668003483E-5	IMPLEMENTATION
// line 423	WITHOUT_CLASSIFICATION	0.9999250034582264	WITHOUT_CLASSIFICATION	7.499654177355423E-5	IMPLEMENTATION
// line 486	WITHOUT_CLASSIFICATION	0.9999250034582264	WITHOUT_CLASSIFICATION	7.499654177355423E-5	IMPLEMENTATION
// Signal uses sun.misc.* classes, this is not allowed // in the security-sensitive environments	WITHOUT_CLASSIFICATION	0.9999894678805276	WITHOUT_CLASSIFICATION	1.0532119472375466E-5	IMPLEMENTATION
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999667379027547	WITHOUT_CLASSIFICATION	3.3262097245278834E-5	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999441042936557	WITHOUT_CLASSIFICATION	5.5895706344245375E-5	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999441042936557	WITHOUT_CLASSIFICATION	5.5895706344245375E-5	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999263186386357	WITHOUT_CLASSIFICATION	7.36813613643014E-5	IMPLEMENTATION
// if there's no receiver, evaluate and pass in the superclass, or // pass self if it no superclass	WITHOUT_CLASSIFICATION	0.9999927907708371	WITHOUT_CLASSIFICATION	7.209229162758615E-6	IMPLEMENTATION
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9998696993093559	WITHOUT_CLASSIFICATION	1.3030069064410283E-4	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9371311660692782	WITHOUT_CLASSIFICATION	0.06286883393072194	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9371311660692782	WITHOUT_CLASSIFICATION	0.06286883393072194	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9371311660692782	WITHOUT_CLASSIFICATION	0.06286883393072194	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9371311660692782	WITHOUT_CLASSIFICATION	0.06286883393072194	IMPLEMENTATION
// Decrease value to hit upper range.  	WITHOUT_CLASSIFICATION	0.9999626763077519	WITHOUT_CLASSIFICATION	3.732369224807749E-5	IMPLEMENTATION
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999212800666438	WITHOUT_CLASSIFICATION	7.871993335617275E-5	IMPLEMENTATION
// "else" body	WITHOUT_CLASSIFICATION	0.9998955649324311	WITHOUT_CLASSIFICATION	1.0443506756891177E-4	IMPLEMENTATION
// done // done // done // Nothing to do for 1.8 // done // done // done // done // done // done // done? // done // done // done // done // done // done // done // done // done // done // done //            case DEFINEDNODE: return buildDefined(node, m); // Incomplete // done // done // done // done // done // done // done // done //            case ENSURENODE: return buildEnsureNode(node, m); // DEFERRED // done // done // done // done //            case FLIPNODE: return buildFlip(node, m); // SSS FIXME: What code generates this AST? // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done? // done // done // done // done // done // done -- partially //            case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); // DEFERRED SSS FIXME: What code generates this AST? // done //            case POSTEXENODE: return buildPostExe(node, m); // DEFERRED //            case PREEXENODE: return buildPreExe(node, m); // DEFERRED // done?? // done	WITHOUT_CLASSIFICATION	0.9999743668248671	WITHOUT_CLASSIFICATION	2.5633175132881992E-5	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999093848410134	WITHOUT_CLASSIFICATION	9.061515898652722E-5	IMPLEMENTATION
/* $+: string matches last paren. */	WITHOUT_CLASSIFICATION	0.9999611474060169	WITHOUT_CLASSIFICATION	3.885259398309858E-5	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999202088094193	WITHOUT_CLASSIFICATION	7.979119058073072E-5	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999202088094193	WITHOUT_CLASSIFICATION	7.979119058073072E-5	IMPLEMENTATION
// Ruby code frequently uses a platform check to choose "NUL:" on windows // but since that check doesn't work well on JRuby, we help it out	WITHOUT_CLASSIFICATION	0.9999681106485805	WITHOUT_CLASSIFICATION	3.1889351419439907E-5	IMPLEMENTATION
/* 10! */	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
//            case RESCUENODE: return buildRescue(node, m); // DEFERRED //            case RETRYNODE: return buildRetry(node, m); // DEFERRED // done	WITHOUT_CLASSIFICATION	0.999979893150552	WITHOUT_CLASSIFICATION	2.0106849448013618E-5	IMPLEMENTATION
// Is this instruction live or dead?  During optimization passes, if this instruction // causes no side-effects and the result of the instruction is not needed by anyone else, // we can remove this instruction altogether without affecting program correctness.	WITHOUT_CLASSIFICATION	0.9993218225198398	WITHOUT_CLASSIFICATION	6.781774801601109E-4	IMPLEMENTATION
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999505717878121	WITHOUT_CLASSIFICATION	4.9428212187901386E-5	IMPLEMENTATION
// first, iterate over all required args	WITHOUT_CLASSIFICATION	0.9999729471162653	WITHOUT_CLASSIFICATION	2.705288373468595E-5	IMPLEMENTATION
// // Determine if the parameter might be passed as a 32bit int parameter. // This just applies to buffer/pointer types. //	WITHOUT_CLASSIFICATION	0.9999945373869267	WITHOUT_CLASSIFICATION	5.462613073260107E-6	IMPLEMENTATION
//Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());	WITHOUT_CLASSIFICATION	0.9999341652415641	WITHOUT_CLASSIFICATION	6.583475843589636E-5	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9998955649324311	WITHOUT_CLASSIFICATION	1.0443506756891177E-4	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9998955649324311	WITHOUT_CLASSIFICATION	1.0443506756891177E-4	IMPLEMENTATION
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999940253793104	WITHOUT_CLASSIFICATION	5.974620689548885E-6	IMPLEMENTATION
// line 449	WITHOUT_CLASSIFICATION	0.9999250034582264	WITHOUT_CLASSIFICATION	7.499654177355423E-5	IMPLEMENTATION
// line 495	WITHOUT_CLASSIFICATION	0.9999250034582264	WITHOUT_CLASSIFICATION	7.499654177355423E-5	IMPLEMENTATION
// Management/monitoring	WITHOUT_CLASSIFICATION	0.9999194437044504	WITHOUT_CLASSIFICATION	8.055629554959873E-5	IMPLEMENTATION
// if we've found the last char of the separator, // and we've found at least as many characters as separator length, // and the last n characters of our buffer match the separator, we're done	WITHOUT_CLASSIFICATION	0.9999987324644507	WITHOUT_CLASSIFICATION	1.2675355494081977E-6	IMPLEMENTATION
/* 14! */	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
// Process any set of annotations // No supported options	WITHOUT_CLASSIFICATION	0.9999605788264373	WITHOUT_CLASSIFICATION	3.9421173562710185E-5	IMPLEMENTATION
// add to the jitted methods set	WITHOUT_CLASSIFICATION	0.9999759596156722	WITHOUT_CLASSIFICATION	2.404038432783887E-5	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.9999589275895077	WITHOUT_CLASSIFICATION	4.107241049236193E-5	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.9999589275895077	WITHOUT_CLASSIFICATION	4.107241049236193E-5	IMPLEMENTATION
//            case SCLASSNODE: return buildSClass(node, m); // DEFERRED // done // done // done // done // done // done // done // done //            case UNDEFNODE: return buildUndef(node, m); // DEFERRED // done //            case VALIASNODE: return buildVAlias(node, m); // DEFERRED // done // done	WITHOUT_CLASSIFICATION	0.9999813620603242	WITHOUT_CLASSIFICATION	1.8637939675806928E-5	IMPLEMENTATION
// // Adding a post-invoke for the cb result serves to both keep it alive // until after the function returns, and allows us to clean up the native // trampoline early, instead of letting them accumulate until a GC run //	WITHOUT_CLASSIFICATION	0.9999958717353399	WITHOUT_CLASSIFICATION	4.128264660145722E-6	IMPLEMENTATION
/* The Java method doesn't care what class it is, but we need to               know what to convert it to, so we use the object's own class.               If that doesn't help, we use String to force a call to the               object's "to_s" method. */	WITHOUT_CLASSIFICATION	0.9999480629360314	WITHOUT_CLASSIFICATION	5.1937063968506356E-5	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.9999510297596065	WITHOUT_CLASSIFICATION	4.897024039340663E-5	IMPLEMENTATION
// Atomic integers for symbol and method IDs	WITHOUT_CLASSIFICATION	0.9999030695925284	WITHOUT_CLASSIFICATION	9.693040747158613E-5	IMPLEMENTATION
/* 18! */	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9999775892836794	WITHOUT_CLASSIFICATION	2.2410716320683874E-5	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999723831352989	WITHOUT_CLASSIFICATION	2.7616864701142223E-5	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999723831352989	WITHOUT_CLASSIFICATION	2.7616864701142223E-5	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999723831352989	WITHOUT_CLASSIFICATION	2.7616864701142223E-5	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999723831352989	WITHOUT_CLASSIFICATION	2.7616864701142223E-5	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999923700946439	WITHOUT_CLASSIFICATION	7.629905356062446E-6	IMPLEMENTATION
/*      * This method takes as input a map of operands to their values, and outputs     * the result of this instruction.     *     * If the value map provides a value for any of the instruction's operands     * the expectation is that the operand will be replaced with the simplified value.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify.     *     * @param valueMap Mapping from operands to their simplified values     * @returns simplified result / output of this instruction     */	WITHOUT_CLASSIFICATION	0.9999988509171555	WITHOUT_CLASSIFICATION	1.1490828445884583E-6	IMPLEMENTATION
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9999242454695402	WITHOUT_CLASSIFICATION	7.575453045979521E-5	IMPLEMENTATION
// An atomic long for generating DynamicMethod serial numbers	WITHOUT_CLASSIFICATION	0.9999328392536195	WITHOUT_CLASSIFICATION	6.71607463804648E-5	IMPLEMENTATION
// MRI behavior: always check whether the file is writable // or not, even if we are to write 0 bytes.	WITHOUT_CLASSIFICATION	0.9999899215692067	WITHOUT_CLASSIFICATION	1.007843079338245E-5	IMPLEMENTATION
/* 22! */	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.9999469351456203	WITHOUT_CLASSIFICATION	5.306485437965514E-5	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999630282993709	WITHOUT_CLASSIFICATION	3.697170062917802E-5	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999630282993709	WITHOUT_CLASSIFICATION	3.697170062917802E-5	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999630282993709	WITHOUT_CLASSIFICATION	3.697170062917802E-5	IMPLEMENTATION
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999616321117101	WITHOUT_CLASSIFICATION	3.836788828987018E-5	IMPLEMENTATION
// Build a new class and add it to the current scope (could be a script / module / class)	WITHOUT_CLASSIFICATION	0.9999936212588564	WITHOUT_CLASSIFICATION	6.378741143660988E-6	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999848732966307	WITHOUT_CLASSIFICATION	1.5126703369299438E-5	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999848732966307	WITHOUT_CLASSIFICATION	1.5126703369299438E-5	IMPLEMENTATION
// AF_INET	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
//////////////////////////////////////////////////////////////////////////// // Now we provide default impls of a number of signatures. For each arity, // we first generate a non-block version of the method, which just adds // NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can // potentially take a block, to only generate the block-receiving signature // and still avoid arg boxing. // // We then provide default implementations of each block-accepting method // that in turn call the IRubyObject[]+Block version of call. This then // finally falls back on the minimum implementation requirement for // dynamic method handles. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999566207218	WITHOUT_CLASSIFICATION	4.3379278255460614E-8	IMPLEMENTATION
// Because we implement Java interfaces now, we need a new === that's // aware of those additional "virtual" supertypes	WITHOUT_CLASSIFICATION	0.997951209577193	WITHOUT_CLASSIFICATION	0.0020487904228070532	IMPLEMENTATION
// BASE64	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
/* note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY         * when value is an integer less than 1.         * We treat 0 as a special case to avoid Domain error.         */	WITHOUT_CLASSIFICATION	0.999994151926336	WITHOUT_CLASSIFICATION	5.848073663935278E-6	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.999915142904383	WITHOUT_CLASSIFICATION	8.485709561705787E-5	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999751586556459	WITHOUT_CLASSIFICATION	2.4841344354014973E-5	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999751586556459	WITHOUT_CLASSIFICATION	2.4841344354014973E-5	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999547762835383	WITHOUT_CLASSIFICATION	4.5223716461631136E-5	IMPLEMENTATION
// SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode // We won't get here for argument receives!  So, buildDasgn is called for // assignments to block variables within a block.  As far as the IR is concerned, // this is just a simple copy	WITHOUT_CLASSIFICATION	0.9999974908971663	WITHOUT_CLASSIFICATION	2.5091028338026097E-6	IMPLEMENTATION
// getSimplifiedOperand returns the value of this operand, fully simplified // getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away // // The value is used during optimizations and propagated through the IR.  But, it is thrown away after that. // But, the operand form is used for constructing the compound objects represented by the operand. // // Example: a = [1], b = [3,4], c = [a,b], d = [2,c] //   -- getValue(c) = [1,[3,4]];     getSimplifiedOperand(c) = [1, b] //   -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] // // Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. // So, if contents of a or b is modified, the "simplified value"s of c and d also change!  This difference // is captured by these two methods.	WITHOUT_CLASSIFICATION	0.9999999692367219	WITHOUT_CLASSIFICATION	3.076327810057451E-8	IMPLEMENTATION
//IRubyObject protocol = args[4];	WITHOUT_CLASSIFICATION	0.9999293799256	WITHOUT_CLASSIFICATION	7.062007439995897E-5	IMPLEMENTATION
// promise to implement three to N with block	WITHOUT_CLASSIFICATION	0.988316320338417	WITHOUT_CLASSIFICATION	0.011683679661583013	IMPLEMENTATION
// Ruby's OMG capture all source in a Hash feature // Add each line to buffer when encountering newline or EOF for first time.	WITHOUT_CLASSIFICATION	0.9999870000877612	WITHOUT_CLASSIFICATION	1.2999912238728201E-5	IMPLEMENTATION
// carriage return	WITHOUT_CLASSIFICATION	0.9999349731563041	WITHOUT_CLASSIFICATION	6.502684369580668E-5	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998955649324311	WITHOUT_CLASSIFICATION	1.0443506756891177E-4	IMPLEMENTATION
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9999769181870807	WITHOUT_CLASSIFICATION	2.3081812919374134E-5	IMPLEMENTATION
// String construction routines by NOT byte[] buffer and making the target String shared 	WITHOUT_CLASSIFICATION	0.999988104403496	WITHOUT_CLASSIFICATION	1.1895596504009472E-5	IMPLEMENTATION
// insert all nodes in sequence, hash them in the final instruction // KEY	WITHOUT_CLASSIFICATION	0.9999868388356877	WITHOUT_CLASSIFICATION	1.3161164312320126E-5	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999952018644159	WITHOUT_CLASSIFICATION	4.7981355841049094E-6	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999613762090559	WITHOUT_CLASSIFICATION	3.862379094416806E-5	IMPLEMENTATION
// Basic Block id // CFG that this basic block belongs to // All basic blocks have a starting label // List of non-label instructions	WITHOUT_CLASSIFICATION	0.9999635466499011	WITHOUT_CLASSIFICATION	3.64533500989556E-5	IMPLEMENTATION
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999890997085504	WITHOUT_CLASSIFICATION	1.0900291449566437E-5	IMPLEMENTATION
// For all uninitialized specific arities, we defer to the "n" method which // should raise appropriate error in all cases.	WITHOUT_CLASSIFICATION	0.999983424932802	WITHOUT_CLASSIFICATION	1.657506719801617E-5	IMPLEMENTATION
// implement is called to force this class to create stubs for all // methods in the given interface, so they'll show up in the list // of methods and be invocable without passing through method_missing	WITHOUT_CLASSIFICATION	0.9999391790485583	WITHOUT_CLASSIFICATION	6.082095144163271E-5	IMPLEMENTATION
// CASE IR instructions are dummy instructions  // -- all when/then clauses have been converted into if-then-else blocks	WITHOUT_CLASSIFICATION	0.999968272525725	WITHOUT_CLASSIFICATION	3.1727474275127E-5	IMPLEMENTATION
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999886202268662	WITHOUT_CLASSIFICATION	1.1379773133767866E-5	IMPLEMENTATION
// leave it null and fall back on our normal invocation logic	WITHOUT_CLASSIFICATION	0.9999648213107938	WITHOUT_CLASSIFICATION	3.517868920614891E-5	IMPLEMENTATION
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999887610421615	WITHOUT_CLASSIFICATION	1.123895783855357E-5	IMPLEMENTATION
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9989778058007419	WITHOUT_CLASSIFICATION	0.0010221941992580167	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999345829312601	WITHOUT_CLASSIFICATION	6.541706873987558E-5	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999345829312601	WITHOUT_CLASSIFICATION	6.541706873987558E-5	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999345829312601	WITHOUT_CLASSIFICATION	6.541706873987558E-5	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999345829312601	WITHOUT_CLASSIFICATION	6.541706873987558E-5	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999345829312601	WITHOUT_CLASSIFICATION	6.541706873987558E-5	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999345829312601	WITHOUT_CLASSIFICATION	6.541706873987558E-5	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999345829312601	WITHOUT_CLASSIFICATION	6.541706873987558E-5	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999345829312601	WITHOUT_CLASSIFICATION	6.541706873987558E-5	IMPLEMENTATION
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999683648331341	WITHOUT_CLASSIFICATION	3.163516686589924E-5	IMPLEMENTATION
/* fall through */	WITHOUT_CLASSIFICATION	0.9999391062810045	WITHOUT_CLASSIFICATION	6.0893718995583036E-5	IMPLEMENTATION
// deal with case when "other" is not a string	WITHOUT_CLASSIFICATION	0.9999693271956683	WITHOUT_CLASSIFICATION	3.0672804331698136E-5	IMPLEMENTATION
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999792983093914	WITHOUT_CLASSIFICATION	2.07016906086878E-5	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999694149730028	WITHOUT_CLASSIFICATION	3.0585026997148135E-5	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999694149730028	WITHOUT_CLASSIFICATION	3.0585026997148135E-5	IMPLEMENTATION
// store argument count information into scope	WITHOUT_CLASSIFICATION	0.9999861917503514	WITHOUT_CLASSIFICATION	1.3808249648717267E-5	IMPLEMENTATION
// the load method is used for loading as a top-level script, and prepares appropriate scoping around the code	WITHOUT_CLASSIFICATION	0.9999843242957159	WITHOUT_CLASSIFICATION	1.5675704284084517E-5	IMPLEMENTATION
// First, build assignments for specific named arguments	WITHOUT_CLASSIFICATION	0.9999781380595221	WITHOUT_CLASSIFICATION	2.1861940477929285E-5	IMPLEMENTATION
//        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } //        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }	WITHOUT_CLASSIFICATION	0.9999825281962128	WITHOUT_CLASSIFICATION	1.7471803787123543E-5	IMPLEMENTATION
// get current context	WITHOUT_CLASSIFICATION	0.9999698757546948	WITHOUT_CLASSIFICATION	3.012424530523675E-5	IMPLEMENTATION
// octal constant	WITHOUT_CLASSIFICATION	0.9999123718916761	WITHOUT_CLASSIFICATION	8.762810832378004E-5	IMPLEMENTATION
// read	WITHOUT_CLASSIFICATION	0.9967209568308794	WITHOUT_CLASSIFICATION	0.0032790431691206924	IMPLEMENTATION
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9999063724493142	WITHOUT_CLASSIFICATION	9.362755068582385E-5	IMPLEMENTATION
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999120047498435	WITHOUT_CLASSIFICATION	8.799525015640902E-5	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999681486970686	WITHOUT_CLASSIFICATION	3.185130293128185E-5	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999681486970686	WITHOUT_CLASSIFICATION	3.185130293128185E-5	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999681486970686	WITHOUT_CLASSIFICATION	3.185130293128185E-5	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998981199030209	WITHOUT_CLASSIFICATION	1.0188009697909219E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998981199030209	WITHOUT_CLASSIFICATION	1.0188009697909219E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998981199030209	WITHOUT_CLASSIFICATION	1.0188009697909219E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998981199030209	WITHOUT_CLASSIFICATION	1.0188009697909219E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998981199030209	WITHOUT_CLASSIFICATION	1.0188009697909219E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998981199030209	WITHOUT_CLASSIFICATION	1.0188009697909219E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998981199030209	WITHOUT_CLASSIFICATION	1.0188009697909219E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998981199030209	WITHOUT_CLASSIFICATION	1.0188009697909219E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998981199030209	WITHOUT_CLASSIFICATION	1.0188009697909219E-4	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999973160495882	WITHOUT_CLASSIFICATION	2.68395041178032E-6	IMPLEMENTATION
// at end	WITHOUT_CLASSIFICATION	0.9961401366249227	WITHOUT_CLASSIFICATION	0.003859863375077283	IMPLEMENTATION
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.999943394358314	WITHOUT_CLASSIFICATION	5.6605641685949396E-5	IMPLEMENTATION
// save blocking state	WITHOUT_CLASSIFICATION	0.9999491083789308	WITHOUT_CLASSIFICATION	5.0891621069166586E-5	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998981199030209	WITHOUT_CLASSIFICATION	1.0188009697909219E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998981199030209	WITHOUT_CLASSIFICATION	1.0188009697909219E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998981199030209	WITHOUT_CLASSIFICATION	1.0188009697909219E-4	IMPLEMENTATION
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999377921658852	WITHOUT_CLASSIFICATION	6.220783411474557E-5	IMPLEMENTATION
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999784970026592	WITHOUT_CLASSIFICATION	2.1502997340817468E-5	IMPLEMENTATION
// fall back on empty env when security disallows environment var access (like in an applet)	WITHOUT_CLASSIFICATION	0.9999723260076545	WITHOUT_CLASSIFICATION	2.7673992345464872E-5	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999302117618522	WITHOUT_CLASSIFICATION	6.978823814791155E-5	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999302117618522	WITHOUT_CLASSIFICATION	6.978823814791155E-5	IMPLEMENTATION
// load null block	WITHOUT_CLASSIFICATION	0.9999305658351528	WITHOUT_CLASSIFICATION	6.943416484711679E-5	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999724892361511	WITHOUT_CLASSIFICATION	2.751076384898896E-5	IMPLEMENTATION
// nothing else to here - the module version will be // included in the class.	WITHOUT_CLASSIFICATION	0.9999962764911055	WITHOUT_CLASSIFICATION	3.7235088945219225E-6	IMPLEMENTATION
// JRUBY-1000, fail early when attempting to subclass a final Java class; // solved here by adding an exception-throwing "inherited"	WITHOUT_CLASSIFICATION	0.9999311006781775	WITHOUT_CLASSIFICATION	6.889932182250772E-5	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9998964644412323	WITHOUT_CLASSIFICATION	1.0353555876773941E-4	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9998964644412323	WITHOUT_CLASSIFICATION	1.0353555876773941E-4	IMPLEMENTATION
// Translate ret = (a || b) to ret = (a ? true : b) as follows //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = true //    beq(v1, true, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999776842195923	WITHOUT_CLASSIFICATION	2.231578040770073E-5	IMPLEMENTATION
// Initial precision is that of double numbers 2^63/2 ~ 4E18 // 63-1 an even number of number bits // precision seems 16 to 18 digits	WITHOUT_CLASSIFICATION	0.9999888043124604	WITHOUT_CLASSIFICATION	1.1195687539662676E-5	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999075646357903	WITHOUT_CLASSIFICATION	9.243536420968036E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.9999351610879865	WITHOUT_CLASSIFICATION	6.483891201345292E-5	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999621092670736	WITHOUT_CLASSIFICATION	3.78907329263273E-5	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999621092670736	WITHOUT_CLASSIFICATION	3.78907329263273E-5	IMPLEMENTATION
// check arity	WITHOUT_CLASSIFICATION	0.9999694768448676	WITHOUT_CLASSIFICATION	3.052315513240658E-5	IMPLEMENTATION
// check arity	WITHOUT_CLASSIFICATION	0.9999694768448676	WITHOUT_CLASSIFICATION	3.052315513240658E-5	IMPLEMENTATION
// create the class	WITHOUT_CLASSIFICATION	0.9999893024665323	WITHOUT_CLASSIFICATION	1.069753346777525E-5	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999823965669768	WITHOUT_CLASSIFICATION	1.760343302314654E-5	IMPLEMENTATION
// No hex value after the 'x'.	WITHOUT_CLASSIFICATION	0.9999676767765725	WITHOUT_CLASSIFICATION	3.23232234275913E-5	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999116762068144	WITHOUT_CLASSIFICATION	8.832379318558368E-5	IMPLEMENTATION
// Let m be the exact digits precision in an earlier! loop	WITHOUT_CLASSIFICATION	0.9999469290216085	WITHOUT_CLASSIFICATION	5.307097839152603E-5	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999831385459839	WITHOUT_CLASSIFICATION	1.686145401618725E-5	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9963598452300426	WITHOUT_CLASSIFICATION	0.003640154769957477	IMPLEMENTATION
// Label for the start of the method // Label for the end of the method	WITHOUT_CLASSIFICATION	0.9999954674200777	WITHOUT_CLASSIFICATION	4.532579922336237E-6	IMPLEMENTATION
// comparisons & checks // checks if the operand is non-null and non-false // EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...	WITHOUT_CLASSIFICATION	0.9999920910482265	WITHOUT_CLASSIFICATION	7.908951773533387E-6	IMPLEMENTATION
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9995805601351709	WITHOUT_CLASSIFICATION	4.194398648290899E-4	IMPLEMENTATION
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9998885859494879	WITHOUT_CLASSIFICATION	1.1141405051204648E-4	IMPLEMENTATION
// all done with lookup attempts, release monitor	WITHOUT_CLASSIFICATION	0.9999534498148783	WITHOUT_CLASSIFICATION	4.65501851217591E-5	IMPLEMENTATION
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999796908021436	WITHOUT_CLASSIFICATION	2.0309197856473726E-5	IMPLEMENTATION
// Create list of interface names to proxy (and make sure they really are interfaces) // Also build a hashcode from all classes to use for retrieving previously-created impl	WITHOUT_CLASSIFICATION	0.9999993620198898	WITHOUT_CLASSIFICATION	6.379801102770855E-7	IMPLEMENTATION
// Construct local variables based on parameter names passed in	WITHOUT_CLASSIFICATION	0.9999921634961759	WITHOUT_CLASSIFICATION	7.836503824198054E-6	IMPLEMENTATION
// Value of "TZ" property is of a bit different format, // which confuses the Java's TimeZone.getTimeZone(id) method, // and so, we need to convert it.	WITHOUT_CLASSIFICATION	0.9999720784797104	WITHOUT_CLASSIFICATION	2.7921520289633977E-5	IMPLEMENTATION
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999501399416211	WITHOUT_CLASSIFICATION	4.986005837881178E-5	IMPLEMENTATION
// ensure the object is associated with the wrapper we found it in, // so that if it comes back we don't re-wrap it	WITHOUT_CLASSIFICATION	0.9999931840315925	WITHOUT_CLASSIFICATION	6.815968407558587E-6	IMPLEMENTATION
// return sqrt(squarD) with precision of rootMC	WITHOUT_CLASSIFICATION	0.9999887081767463	WITHOUT_CLASSIFICATION	1.129182325361264E-5	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999912796499804	WITHOUT_CLASSIFICATION	8.720350019724116E-6	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
// Get a new label using the provided label prefix	WITHOUT_CLASSIFICATION	0.9999793874008361	WITHOUT_CLASSIFICATION	2.061259916393741E-5	IMPLEMENTATION
// normal exit, perform finally and return	WITHOUT_CLASSIFICATION	0.9999711205904621	WITHOUT_CLASSIFICATION	2.8879409537920292E-5	IMPLEMENTATION
// coerce arguments	WITHOUT_CLASSIFICATION	0.999937401250453	WITHOUT_CLASSIFICATION	6.259874954688672E-5	IMPLEMENTATION
// 0.0 is ok // float range // inverted float range? // NaN // +infinity // -infinity	WITHOUT_CLASSIFICATION	0.9999603636106645	WITHOUT_CLASSIFICATION	3.963638933550523E-5	IMPLEMENTATION
/* expected */	WITHOUT_CLASSIFICATION	0.999942480058372	WITHOUT_CLASSIFICATION	5.751994162796697E-5	IMPLEMENTATION
// set this class's method names in var @__java_ovrd_methods if this // is the new class; otherwise, get method names from there if this is // a proxy superclass.	WITHOUT_CLASSIFICATION	0.9999968932892515	WITHOUT_CLASSIFICATION	3.106710748468554E-6	IMPLEMENTATION
/* ignore backslashed spaces in %w */	WITHOUT_CLASSIFICATION	0.999969724171697	WITHOUT_CLASSIFICATION	3.0275828302973672E-5	IMPLEMENTATION
// Invert the sign, since TZ format and Java format // use opposite signs, sigh... Also, Java API requires // the sign to be always present, be it "+" or "-".	WITHOUT_CLASSIFICATION	0.9999643993438878	WITHOUT_CLASSIFICATION	3.5600656112294565E-5	IMPLEMENTATION
// no binding given, use 0 for both	WITHOUT_CLASSIFICATION	0.9999439815725036	WITHOUT_CLASSIFICATION	5.601842749631918E-5	IMPLEMENTATION
// <=> may return nil in many circumstances, e.g. 3 <=> NaN        	WITHOUT_CLASSIFICATION	0.9999516721052981	WITHOUT_CLASSIFICATION	4.832789470184512E-5	IMPLEMENTATION
// use numbered access method	WITHOUT_CLASSIFICATION	0.9999536720866053	WITHOUT_CLASSIFICATION	4.632791339477335E-5	IMPLEMENTATION
// Always use "GMT" since that's required by Java API.	WITHOUT_CLASSIFICATION	0.9999622671544872	WITHOUT_CLASSIFICATION	3.7732845512859194E-5	IMPLEMENTATION
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999968192899354	WITHOUT_CLASSIFICATION	3.1807100645072867E-6	IMPLEMENTATION
// The dataStruct is a place where custom information can be // contained for core implementations that doesn't necessarily // want to go to the trouble of creating a subclass of // RubyObject. The OpenSSL implementation uses this heavily to // save holder objects containing Java cryptography objects. // Java integration uses this to store the Java object ref. //protected transient Object dataStruct;	WITHOUT_CLASSIFICATION	0.9999983077521172	WITHOUT_CLASSIFICATION	1.6922478828611362E-6	IMPLEMENTATION
// Remaining arguments are for the script itself	WITHOUT_CLASSIFICATION	0.9999885360967423	WITHOUT_CLASSIFICATION	1.146390325769589E-5	IMPLEMENTATION
// arg grouping, use slower arg walking logic	WITHOUT_CLASSIFICATION	0.9999290851362493	WITHOUT_CLASSIFICATION	7.091486375063447E-5	IMPLEMENTATION
// build scope names string	WITHOUT_CLASSIFICATION	0.9999524551651034	WITHOUT_CLASSIFICATION	4.754483489646986E-5	IMPLEMENTATION
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999987679847937	WITHOUT_CLASSIFICATION	1.2320152063873345E-6	IMPLEMENTATION
// Here we create an "anonymous" exception type used for unrolling the stack. // MRI creates a new one for *every call* to timeout, which can be costly. // We opt to use a single exception type for all cases to avoid this overhead.	WITHOUT_CLASSIFICATION	0.9999855953314346	WITHOUT_CLASSIFICATION	1.440466856537344E-5	IMPLEMENTATION
// finally	WITHOUT_CLASSIFICATION	0.9971156734346637	WITHOUT_CLASSIFICATION	0.002884326565336332	IMPLEMENTATION
// MRI behavior: With TZ equal to "GMT" or "UTC", Time.now // is *NOT* considered as a proper GMT/UTC time: //   ENV['TZ']="GMT" //   Time.now.gmt? ==> false //   ENV['TZ']="UTC" //   Time.now.utc? ==> false // Hence, we need to adjust for that.	WITHOUT_CLASSIFICATION	0.999949018804446	WITHOUT_CLASSIFICATION	5.098119555387946E-5	IMPLEMENTATION
// ?l  | boolean | True if file1 exists and is a symbolic link	WITHOUT_CLASSIFICATION	0.9999654660015261	WITHOUT_CLASSIFICATION	3.4533998473862194E-5	IMPLEMENTATION
// This try/catch is to allow failing over to the "commands" logic // when running from within a jruby-complete jar file, which has // jruby.home = a jar file URL that does not resolve correctly with // JRubyFile.create.	WITHOUT_CLASSIFICATION	0.9999914859032969	WITHOUT_CLASSIFICATION	8.514096703144909E-6	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999105332552161	WITHOUT_CLASSIFICATION	8.946674478389253E-5	IMPLEMENTATION
// specific arity	WITHOUT_CLASSIFICATION	0.9999316994841161	WITHOUT_CLASSIFICATION	6.830051588388951E-5	IMPLEMENTATION
// In the case of two arguments, MRI will discard the portion of // the first argument after a decimal point (i.e., "floor"). // However in the case of a single argument, any portion after // the decimal point is honored.	WITHOUT_CLASSIFICATION	0.9999988885819171	WITHOUT_CLASSIFICATION	1.1114180828470855E-6	IMPLEMENTATION
// ?w  | boolean | True if file1 exists and is writable by effective uid/gid	WITHOUT_CLASSIFICATION	0.9999656490744272	WITHOUT_CLASSIFICATION	3.435092557281537E-5	IMPLEMENTATION
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999264977254501	WITHOUT_CLASSIFICATION	7.350227454997412E-5	IMPLEMENTATION
/*    @JRubyMethod    public IRubyObject to_proc() {        return RubyProc.newProc(getRuntime(),                                CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()),                                Block.Type.PROC);    }    */	WITHOUT_CLASSIFICATION	0.999991817984735	WITHOUT_CLASSIFICATION	8.18201526505694E-6	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999282483276098	WITHOUT_CLASSIFICATION	7.175167239024423E-5	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999282483276098	WITHOUT_CLASSIFICATION	7.175167239024423E-5	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999956388985638	WITHOUT_CLASSIFICATION	4.361101436134819E-6	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999956388985638	WITHOUT_CLASSIFICATION	4.361101436134819E-6	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9999645646162656	WITHOUT_CLASSIFICATION	3.5435383734291476E-5	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9999645646162656	WITHOUT_CLASSIFICATION	3.5435383734291476E-5	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999748289066932	WITHOUT_CLASSIFICATION	2.5171093306798425E-5	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999748289066932	WITHOUT_CLASSIFICATION	2.5171093306798425E-5	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999147708895909	WITHOUT_CLASSIFICATION	8.52291104090285E-5	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999147708895909	WITHOUT_CLASSIFICATION	8.52291104090285E-5	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999147708895909	WITHOUT_CLASSIFICATION	8.52291104090285E-5	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999147708895909	WITHOUT_CLASSIFICATION	8.52291104090285E-5	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999147708895909	WITHOUT_CLASSIFICATION	8.52291104090285E-5	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999147708895909	WITHOUT_CLASSIFICATION	8.52291104090285E-5	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999147708895909	WITHOUT_CLASSIFICATION	8.52291104090285E-5	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999147708895909	WITHOUT_CLASSIFICATION	8.52291104090285E-5	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999147708895909	WITHOUT_CLASSIFICATION	8.52291104090285E-5	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999628569610349	WITHOUT_CLASSIFICATION	3.714303896509549E-5	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999628569610349	WITHOUT_CLASSIFICATION	3.714303896509549E-5	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999628569610349	WITHOUT_CLASSIFICATION	3.714303896509549E-5	IMPLEMENTATION
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999737590037179	WITHOUT_CLASSIFICATION	2.6240996282143714E-5	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999773761383295	WITHOUT_CLASSIFICATION	2.2623861670601746E-5	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999773761383295	WITHOUT_CLASSIFICATION	2.2623861670601746E-5	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999773761383295	WITHOUT_CLASSIFICATION	2.2623861670601746E-5	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999533888301744	WITHOUT_CLASSIFICATION	4.6611169825667836E-5	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999533888301744	WITHOUT_CLASSIFICATION	4.6611169825667836E-5	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999533888301744	WITHOUT_CLASSIFICATION	4.6611169825667836E-5	IMPLEMENTATION
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.999926647710526	WITHOUT_CLASSIFICATION	7.335228947399669E-5	IMPLEMENTATION
// backspace	WITHOUT_CLASSIFICATION	0.9999040705493828	WITHOUT_CLASSIFICATION	9.592945061721015E-5	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9998946064448642	WITHOUT_CLASSIFICATION	1.0539355513591248E-4	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9998946064448642	WITHOUT_CLASSIFICATION	1.0539355513591248E-4	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9998946064448642	WITHOUT_CLASSIFICATION	1.0539355513591248E-4	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9998946064448642	WITHOUT_CLASSIFICATION	1.0539355513591248E-4	IMPLEMENTATION
/* package-private */	WITHOUT_CLASSIFICATION	0.9999676202020128	WITHOUT_CLASSIFICATION	3.2379797987172674E-5	IMPLEMENTATION
// fall through	WITHOUT_CLASSIFICATION	0.9999524958308695	WITHOUT_CLASSIFICATION	4.750416913053285E-5	IMPLEMENTATION
// fall through	WITHOUT_CLASSIFICATION	0.9999524958308695	WITHOUT_CLASSIFICATION	4.750416913053285E-5	IMPLEMENTATION
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9999128394226408	WITHOUT_CLASSIFICATION	8.716057735922118E-5	IMPLEMENTATION
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999949354353049	WITHOUT_CLASSIFICATION	5.064564694971812E-6	IMPLEMENTATION
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999949354353049	WITHOUT_CLASSIFICATION	5.064564694971812E-6	IMPLEMENTATION
/**      * Nested class whose instances act as thunks reacting to to_str method     * called from (Exception#to_str, Exception#message)     * MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!",     * to_str implementation: "name_err_mesg_to_str"     *     * TODO: this class should not be lookupable     */	WITHOUT_CLASSIFICATION	0.6901327411104384	IMPLEMENTATION	0.3098672588895616	WITHOUT_CLASSIFICATION
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9999266473676631	WITHOUT_CLASSIFICATION	7.33526323368654E-5	IMPLEMENTATION
// The name of this source (e.g. a filename: foo.rb)	WITHOUT_CLASSIFICATION	0.9999758909584477	WITHOUT_CLASSIFICATION	2.4109041552291E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999249937714898	WITHOUT_CLASSIFICATION	7.500622851021793E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999249937714898	WITHOUT_CLASSIFICATION	7.500622851021793E-5	IMPLEMENTATION
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9999931491199456	WITHOUT_CLASSIFICATION	6.8508800543076955E-6	IMPLEMENTATION
// We yield here to hopefully permit the target thread to schedule // MRI immediately schedules it, so this is close but not exact	WITHOUT_CLASSIFICATION	0.999988304773902	WITHOUT_CLASSIFICATION	1.1695226098023139E-5	IMPLEMENTATION
// note that addMethod now does its own put, so any change made to // functionality here should be made there as well 	WITHOUT_CLASSIFICATION	0.9999577992155608	WITHOUT_CLASSIFICATION	4.220078443919805E-5	IMPLEMENTATION
/* Currently dead code, but useful when we figure out how to actually perform translit.    private static boolean isTranslit(String encoding) {        return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false;    }*/	WITHOUT_CLASSIFICATION	0.9999945932196871	WITHOUT_CLASSIFICATION	5.4067803128793475E-6	IMPLEMENTATION
// empirically it appears that to_ary coersions always return array or nil, so this // should always be an array by now.	WITHOUT_CLASSIFICATION	0.9999878840806816	WITHOUT_CLASSIFICATION	1.2115919318332434E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999249937714898	WITHOUT_CLASSIFICATION	7.500622851021793E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999249937714898	WITHOUT_CLASSIFICATION	7.500622851021793E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999249937714898	WITHOUT_CLASSIFICATION	7.500622851021793E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999249937714898	WITHOUT_CLASSIFICATION	7.500622851021793E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999249937714898	WITHOUT_CLASSIFICATION	7.500622851021793E-5	IMPLEMENTATION
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999540462066642	WITHOUT_CLASSIFICATION	4.595379333594329E-5	IMPLEMENTATION
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.999930005542958	WITHOUT_CLASSIFICATION	6.999445704210389E-5	IMPLEMENTATION
// if it's an inner class and it's not public, we can't access it; // skip population of declared elements	WITHOUT_CLASSIFICATION	0.9999965368505418	WITHOUT_CLASSIFICATION	3.463149458249893E-6	IMPLEMENTATION
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999381190287471	WITHOUT_CLASSIFICATION	6.188097125293346E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9996232021338811	WITHOUT_CLASSIFICATION	3.767978661188872E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9996232021338811	WITHOUT_CLASSIFICATION	3.767978661188872E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9996232021338811	WITHOUT_CLASSIFICATION	3.767978661188872E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9996232021338811	WITHOUT_CLASSIFICATION	3.767978661188872E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9996232021338811	WITHOUT_CLASSIFICATION	3.767978661188872E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9996232021338811	WITHOUT_CLASSIFICATION	3.767978661188872E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9996232021338811	WITHOUT_CLASSIFICATION	3.767978661188872E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9996232021338811	WITHOUT_CLASSIFICATION	3.767978661188872E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9996232021338811	WITHOUT_CLASSIFICATION	3.767978661188872E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9996232021338811	WITHOUT_CLASSIFICATION	3.767978661188872E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9996232021338811	WITHOUT_CLASSIFICATION	3.767978661188872E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9996232021338811	WITHOUT_CLASSIFICATION	3.767978661188872E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9996232021338811	WITHOUT_CLASSIFICATION	3.767978661188872E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9996232021338811	WITHOUT_CLASSIFICATION	3.767978661188872E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9996232021338811	WITHOUT_CLASSIFICATION	3.767978661188872E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9996232021338811	WITHOUT_CLASSIFICATION	3.767978661188872E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9996232021338811	WITHOUT_CLASSIFICATION	3.767978661188872E-4	IMPLEMENTATION
// MRI behavior on Windows: it treats '/' as a root of // a current drive (but only if SINGLE slash is present!): // E.g., if current work directory is // 'D:/home/directory', then '/' means 'D:/'. // // Basically, '/path' is treated as a *RELATIVE* path, // relative to the current drive. '//path' is treated // as absolute one.	WITHOUT_CLASSIFICATION	0.9999976314034604	WITHOUT_CLASSIFICATION	2.3685965395326765E-6	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9996232021338811	WITHOUT_CLASSIFICATION	3.767978661188872E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9996232021338811	WITHOUT_CLASSIFICATION	3.767978661188872E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9996232021338811	WITHOUT_CLASSIFICATION	3.767978661188872E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9996232021338811	WITHOUT_CLASSIFICATION	3.767978661188872E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9996232021338811	WITHOUT_CLASSIFICATION	3.767978661188872E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9996232021338811	WITHOUT_CLASSIFICATION	3.767978661188872E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9996232021338811	WITHOUT_CLASSIFICATION	3.767978661188872E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9996232021338811	WITHOUT_CLASSIFICATION	3.767978661188872E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9996232021338811	WITHOUT_CLASSIFICATION	3.767978661188872E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9996232021338811	WITHOUT_CLASSIFICATION	3.767978661188872E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9996232021338811	WITHOUT_CLASSIFICATION	3.767978661188872E-4	IMPLEMENTATION
// This is needed when the enclosing class or module is a singleton. // In that case, we generated a name such as null::Foo, which broke  // Marshalling, among others. The correct thing to do in this situation  // is to insert the generate the name of form #<Class:01xasdfasd> if  // it's a singleton module/class, which this code accomplishes.	WITHOUT_CLASSIFICATION	0.9999973857084076	WITHOUT_CLASSIFICATION	2.6142915924436404E-6	IMPLEMENTATION
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.999995506251501	WITHOUT_CLASSIFICATION	4.493748498952953E-6	IMPLEMENTATION
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999685013716755	WITHOUT_CLASSIFICATION	3.149862832456185E-5	IMPLEMENTATION
// get "self"	WITHOUT_CLASSIFICATION	0.9999410764857227	WITHOUT_CLASSIFICATION	5.8923514277262016E-5	IMPLEMENTATION
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999493608731785	WITHOUT_CLASSIFICATION	5.0639126821436E-5	IMPLEMENTATION
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9999412215902538	WITHOUT_CLASSIFICATION	5.877840974632262E-5	IMPLEMENTATION
// only public methods	WITHOUT_CLASSIFICATION	0.9999643033800312	WITHOUT_CLASSIFICATION	3.5696619968793356E-5	IMPLEMENTATION
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999822505095074	WITHOUT_CLASSIFICATION	1.7749490492558938E-5	IMPLEMENTATION
// First try to use drive letter from supplied dir value, // then try current work dir.	WITHOUT_CLASSIFICATION	0.9999883008497183	WITHOUT_CLASSIFICATION	1.169915028160759E-5	IMPLEMENTATION
// JRUBY-2435: Aliasing eval and other "special" methods should display a warning // We warn because we treat certain method names as "special" for purposes of // optimization. Hopefully this will be enough to convince people not to alias // them.	WITHOUT_CLASSIFICATION	0.9999639549986471	WITHOUT_CLASSIFICATION	3.604500135293354E-5	IMPLEMENTATION
// generate a real method signature for the method, with to/from coercions	WITHOUT_CLASSIFICATION	0.9999860792476996	WITHOUT_CLASSIFICATION	1.3920752300458191E-5	IMPLEMENTATION
// block argument to the method // closure present // class present // method table mutations, def, defs, undef, alias // likely call to eval // makes calls that are aware of the frame // makes calls that are aware of the frame's self // makes calls that are aware of the frame's visibility // makes calls that are aware of the frame's block // makes calls that are aware of the frame's name // makes calls that set or get backref // makes calls that set or get lastline // makes calls that are aware of the frame's class // optional arguments to the method // rest arg to the method // makes calls that are aware of the scope // makes a zero-argument super call // accesses or sets constants // accesses or sets class variables // makes normal super call // contains a retry	WITHOUT_CLASSIFICATION	0.9999998456408459	WITHOUT_CLASSIFICATION	1.5435915417289244E-7	IMPLEMENTATION
// // Add aliases in Type::*, NativeType::* and FFI::TYPE_* //	WITHOUT_CLASSIFICATION	0.9999528724025925	WITHOUT_CLASSIFICATION	4.712759740753132E-5	IMPLEMENTATION
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999799621766365	WITHOUT_CLASSIFICATION	2.0037823363521505E-5	IMPLEMENTATION
// double-testing args.length here, but it avoids duplicating the proc-setup code in two places	WITHOUT_CLASSIFICATION	0.9999898262549721	WITHOUT_CLASSIFICATION	1.0173745027879632E-5	IMPLEMENTATION
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999575945116793	WITHOUT_CLASSIFICATION	4.240548832075157E-5	IMPLEMENTATION
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999560050014091	WITHOUT_CLASSIFICATION	4.399499859073478E-5	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999640198200547	WITHOUT_CLASSIFICATION	3.59801799452816E-5	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999640198200547	WITHOUT_CLASSIFICATION	3.59801799452816E-5	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999640198200547	WITHOUT_CLASSIFICATION	3.59801799452816E-5	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999640198200547	WITHOUT_CLASSIFICATION	3.59801799452816E-5	IMPLEMENTATION
// snapshot of contents of directory // current position in directory	WITHOUT_CLASSIFICATION	0.9999958867686441	WITHOUT_CLASSIFICATION	4.1132313557743255E-6	IMPLEMENTATION
// Exclusive locks in Java require the channel to be writable, otherwise // an exception is thrown (terminating JRuby execution). // But flock behavior of MRI is that it allows // exclusive locks even on non-writable file. So we convert exclusive // lock to shared lock if the channel is not writable, to better match // the MRI behavior.	WITHOUT_CLASSIFICATION	0.999995651931036	WITHOUT_CLASSIFICATION	4.348068963972887E-6	IMPLEMENTATION
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.999953148912726	WITHOUT_CLASSIFICATION	4.685108727406713E-5	IMPLEMENTATION
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.999953148912726	WITHOUT_CLASSIFICATION	4.685108727406713E-5	IMPLEMENTATION
// set self to the class	WITHOUT_CLASSIFICATION	0.9999823078804586	WITHOUT_CLASSIFICATION	1.7692119541379358E-5	IMPLEMENTATION
/* ---------- Public fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999770797398068	WITHOUT_CLASSIFICATION	2.2920260193219893E-5	IMPLEMENTATION
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999728100219342	WITHOUT_CLASSIFICATION	2.7189978065856346E-5	IMPLEMENTATION
// zero args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999783386464134	WITHOUT_CLASSIFICATION	2.1661353586613657E-5	IMPLEMENTATION
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.999987791595701	WITHOUT_CLASSIFICATION	1.2208404299034307E-5	IMPLEMENTATION
// Store each line into this list if not null.	WITHOUT_CLASSIFICATION	0.9999383863221228	WITHOUT_CLASSIFICATION	6.1613677877166E-5	IMPLEMENTATION
// Portion of line right after beginning marker	WITHOUT_CLASSIFICATION	0.999949275314685	WITHOUT_CLASSIFICATION	5.0724685314827555E-5	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999822923698174	WITHOUT_CLASSIFICATION	1.7707630182647752E-5	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999822923698174	WITHOUT_CLASSIFICATION	1.7707630182647752E-5	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999822923698174	WITHOUT_CLASSIFICATION	1.7707630182647752E-5	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999822923698174	WITHOUT_CLASSIFICATION	1.7707630182647752E-5	IMPLEMENTATION
// If an IO exception occurs (something odd, but possible) // A directory may return null.	WITHOUT_CLASSIFICATION	0.9999872839426189	WITHOUT_CLASSIFICATION	1.2716057381035592E-5	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999985758143958	WITHOUT_CLASSIFICATION	1.4241856042982332E-6	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999985758143958	WITHOUT_CLASSIFICATION	1.4241856042982332E-6	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999985758143958	WITHOUT_CLASSIFICATION	1.4241856042982332E-6	IMPLEMENTATION
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999474154953016	WITHOUT_CLASSIFICATION	5.258450469848934E-5	IMPLEMENTATION
// finally with no exception	WITHOUT_CLASSIFICATION	0.9999342407707886	WITHOUT_CLASSIFICATION	6.575922921139894E-5	IMPLEMENTATION
// Now, for all variables used by 'i' mark them live before 'i'	WITHOUT_CLASSIFICATION	0.9999752377241587	WITHOUT_CLASSIFICATION	2.4762275841253296E-5	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9371311660692782	WITHOUT_CLASSIFICATION	0.06286883393072194	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9371311660692782	WITHOUT_CLASSIFICATION	0.06286883393072194	IMPLEMENTATION
/* The counting of slashes that follows is simply a way to adhere to          * Ruby's UNC (or something) compatibility. When Ruby's expand_path is          * called with "//foo//bar" it will return "//foo/bar". JRuby uses          * java.io.File, and hence returns "/foo/bar". In order to retain          * java.io.File in the lower layers and provide full Ruby          * compatibility, the number of extra slashes must be counted and          * prepended to the result.         */	WITHOUT_CLASSIFICATION	0.9999998261965114	WITHOUT_CLASSIFICATION	1.738034886301802E-7	IMPLEMENTATION
// This is almost always already interned, since it will be called with a symbol in most cases // but when created from Java code, we might get an argument that needs to be interned. // addAccessor has as a precondition that the string MUST be interned	WITHOUT_CLASSIFICATION	0.9999994529744002	WITHOUT_CLASSIFICATION	5.470255998780965E-7	IMPLEMENTATION
/* not a class */	WITHOUT_CLASSIFICATION	0.9999485580352157	WITHOUT_CLASSIFICATION	5.14419647842815E-5	IMPLEMENTATION
/* not a class */	WITHOUT_CLASSIFICATION	0.9999485580352157	WITHOUT_CLASSIFICATION	5.14419647842815E-5	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999625409149662	WITHOUT_CLASSIFICATION	3.745908503380441E-5	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999625409149662	WITHOUT_CLASSIFICATION	3.745908503380441E-5	IMPLEMENTATION
// io.available() only returns 0 after EOF is encountered // so we need to differentiate between the empty string and EOF	WITHOUT_CLASSIFICATION	0.9999934716880012	WITHOUT_CLASSIFICATION	6.528311998662858E-6	IMPLEMENTATION
// In the current logic, if we get here we know that module is not an // IncludedModuleWrapper, so there's no need to fish out the delegate. But just // in case the logic should change later, let's do it anyway	WITHOUT_CLASSIFICATION	0.9999988390025729	WITHOUT_CLASSIFICATION	1.1609974270400569E-6	IMPLEMENTATION
// rb_iterate((VALUE(*)_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);	WITHOUT_CLASSIFICATION	0.9999216422772935	WITHOUT_CLASSIFICATION	7.835772270646727E-5	IMPLEMENTATION
// Broken symlinks considered by exists() as non-existing, // so we need to check for symlinks explicitly.	WITHOUT_CLASSIFICATION	0.9999640931063729	WITHOUT_CLASSIFICATION	3.5906893627086566E-5	IMPLEMENTATION
// ////////////////// CONSTANT API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999958453571011	WITHOUT_CLASSIFICATION	4.154642899006963E-6	IMPLEMENTATION
// create the default thread group	WITHOUT_CLASSIFICATION	0.999997528093629	WITHOUT_CLASSIFICATION	2.4719063709998004E-6	IMPLEMENTATION
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999627200969234	WITHOUT_CLASSIFICATION	3.7279903076446536E-5	IMPLEMENTATION
/* ============================     * Here are hash internals     * (This could be extracted to a separate class but it's not too large though)     * ============================     */	WITHOUT_CLASSIFICATION	0.9999895447254189	WITHOUT_CLASSIFICATION	1.0455274581155292E-5	IMPLEMENTATION
// ////////////////// LOW-LEVEL CLASS VARIABLE INTERFACE //////////////// // // fetch/store/list class variables for this module //	WITHOUT_CLASSIFICATION	0.9999993720955556	WITHOUT_CLASSIFICATION	6.279044444699777E-7	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999802903118392	WITHOUT_CLASSIFICATION	1.970968816085816E-5	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999802903118392	WITHOUT_CLASSIFICATION	1.970968816085816E-5	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999774418723095	WITHOUT_CLASSIFICATION	2.2558127690479172E-5	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999774418723095	WITHOUT_CLASSIFICATION	2.2558127690479172E-5	IMPLEMENTATION
// retuns null when not found to avoid unnecessary getRuntime().getNil() call	WITHOUT_CLASSIFICATION	0.9999727118197972	WITHOUT_CLASSIFICATION	2.7288180202793382E-5	IMPLEMENTATION
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999964173076211	WITHOUT_CLASSIFICATION	3.582692378749196E-6	IMPLEMENTATION
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9998955649324311	WITHOUT_CLASSIFICATION	1.0443506756891177E-4	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999631253470339	WITHOUT_CLASSIFICATION	3.687465296612205E-5	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999631253470339	WITHOUT_CLASSIFICATION	3.687465296612205E-5	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999631253470339	WITHOUT_CLASSIFICATION	3.687465296612205E-5	IMPLEMENTATION
// line 286	WITHOUT_CLASSIFICATION	0.999925431487729	WITHOUT_CLASSIFICATION	7.45685122709235E-5	IMPLEMENTATION
// line 476	WITHOUT_CLASSIFICATION	0.9999250034582264	WITHOUT_CLASSIFICATION	7.499654177355423E-5	IMPLEMENTATION
// line 513	WITHOUT_CLASSIFICATION	0.9999250034582264	WITHOUT_CLASSIFICATION	7.499654177355423E-5	IMPLEMENTATION
// line 530	WITHOUT_CLASSIFICATION	0.9999250034582264	WITHOUT_CLASSIFICATION	7.499654177355423E-5	IMPLEMENTATION
// line 533	WITHOUT_CLASSIFICATION	0.9999250034582264	WITHOUT_CLASSIFICATION	7.499654177355423E-5	IMPLEMENTATION
// line 537	WITHOUT_CLASSIFICATION	0.9999250034582264	WITHOUT_CLASSIFICATION	7.499654177355423E-5	IMPLEMENTATION
// line 551	WITHOUT_CLASSIFICATION	0.9999250034582264	WITHOUT_CLASSIFICATION	7.499654177355423E-5	IMPLEMENTATION
// end loop	WITHOUT_CLASSIFICATION	0.9999268978843532	WITHOUT_CLASSIFICATION	7.310211564684603E-5	IMPLEMENTATION
// MRI behavior: we don't print errno for actual Errno errors	WITHOUT_CLASSIFICATION	0.9999650927407718	WITHOUT_CLASSIFICATION	3.490725922818184E-5	IMPLEMENTATION
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999691867104502	WITHOUT_CLASSIFICATION	3.0813289549820635E-5	IMPLEMENTATION
// Traverse the instructions in this basic block in reverse order! // Mark as dead all instructions whose results are not used! 	WITHOUT_CLASSIFICATION	0.9999787969386944	WITHOUT_CLASSIFICATION	2.1203061305587604E-5	IMPLEMENTATION
// // fields should really be an immutable map as it is never modified after construction //	WITHOUT_CLASSIFICATION	0.9998963267143679	WITHOUT_CLASSIFICATION	1.0367328563221324E-4	IMPLEMENTATION
// load self object as IRubyObject, for recv param	WITHOUT_CLASSIFICATION	0.9999637128377562	WITHOUT_CLASSIFICATION	3.6287162243812284E-5	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9371311660692782	WITHOUT_CLASSIFICATION	0.06286883393072194	IMPLEMENTATION
// If we define a class in Ruby, but later want to allow it to be defined in Java, // the allocator needs to be updated	WITHOUT_CLASSIFICATION	0.9999793721558252	WITHOUT_CLASSIFICATION	2.0627844174895532E-5	IMPLEMENTATION
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9999735854698035	WITHOUT_CLASSIFICATION	2.6414530196581515E-5	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999441042936557	WITHOUT_CLASSIFICATION	5.5895706344245375E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9998955649324311	WITHOUT_CLASSIFICATION	1.0443506756891177E-4	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9963592173417951	WITHOUT_CLASSIFICATION	0.0036407826582048096	IMPLEMENTATION
// MRI has extra pointer which makes our code look a little bit // more strange in // comparison	WITHOUT_CLASSIFICATION	0.9999329559742661	WITHOUT_CLASSIFICATION	6.704402573386995E-5	IMPLEMENTATION
// Tempory buffer to build up a potential token.  Consumer takes responsibility to reset  // this before use.	WITHOUT_CLASSIFICATION	0.9999578996031002	WITHOUT_CLASSIFICATION	4.2100396899831055E-5	IMPLEMENTATION
//tmpPosition is required because getPosition()'s side effects. //if the warning is generated, the getPosition() on line 954 (this line + 18) will create //a wrong position if the "inclusive" flag is not set.	WITHOUT_CLASSIFICATION	0.9999959340164587	WITHOUT_CLASSIFICATION	4.06598354131792E-6	IMPLEMENTATION
/* What is \v in C?                    case '\v':                        c2 = 'v';                        break;                        */	WITHOUT_CLASSIFICATION	0.999980762467513	WITHOUT_CLASSIFICATION	1.923753248703216E-5	IMPLEMENTATION
/* Consider Thread aspects of this */	WITHOUT_CLASSIFICATION	0.999929628181957	WITHOUT_CLASSIFICATION	7.037181804305666E-5	IMPLEMENTATION
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999987606273372	WITHOUT_CLASSIFICATION	1.2393726628661713E-6	IMPLEMENTATION
// An interrupt or timeout may have caused us to miss // a notify that we consumed, so do another notify in // case someone else is available to pick it up.	WITHOUT_CLASSIFICATION	0.9999914357241264	WITHOUT_CLASSIFICATION	8.56427587368461E-6	IMPLEMENTATION
// line 572	WITHOUT_CLASSIFICATION	0.9999250034582264	WITHOUT_CLASSIFICATION	7.499654177355423E-5	IMPLEMENTATION
// line 601	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 601	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 625	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 649	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 691	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 723	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 732	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 745	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 766	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 785	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 794	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 800	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 812	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 827	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 839	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 845	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 864	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 886	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 896	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 911	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 929	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 952	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 970	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 972	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 991	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 1011	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1026	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1038	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1067	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1085	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1097	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1105	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1122	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1133	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1145	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1169	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1201	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1210	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1229	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1261	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1287	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1293	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1307	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1320	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1325	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1363	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1398	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1448	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1456	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1473	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1492	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1513	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1523	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1562	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1582	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1603	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1603	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1615	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1620	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1635	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1652	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1681	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1708	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1716	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1755	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1772	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1789	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9998971846720002	WITHOUT_CLASSIFICATION	1.0281532799980089E-4	IMPLEMENTATION
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9998971846720002	WITHOUT_CLASSIFICATION	1.0281532799980089E-4	IMPLEMENTATION
/* force for args */	WITHOUT_CLASSIFICATION	0.9999105014437526	WITHOUT_CLASSIFICATION	8.949855624735227E-5	IMPLEMENTATION
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9999147139602765	WITHOUT_CLASSIFICATION	8.528603972348573E-5	IMPLEMENTATION
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9999595084993459	WITHOUT_CLASSIFICATION	4.0491500654146784E-5	IMPLEMENTATION
// We can assign if we already have variable of that name here or we are the only // scope in the chain (which Local scopes always are).	WITHOUT_CLASSIFICATION	0.9999951453581704	WITHOUT_CLASSIFICATION	4.85464182970398E-6	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999943545071801	WITHOUT_CLASSIFICATION	5.645492819909188E-6	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999943545071801	WITHOUT_CLASSIFICATION	5.645492819909188E-6	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999943545071801	WITHOUT_CLASSIFICATION	5.645492819909188E-6	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999943545071801	WITHOUT_CLASSIFICATION	5.645492819909188E-6	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9997395581688815	WITHOUT_CLASSIFICATION	2.6044183111851216E-4	IMPLEMENTATION
/*     * This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:)     * into individual whenNodes.  The primary reason for this is to ensure lazy evaluation of     * the arguments (when foo,bar,gar:) to prevent side-effects.  In the old code this was done     * using nested when statements, which was awful for interpreter and compilation.     *     * Notes: This has semantic equivalence but will not be lexically equivalent.  Compiler     * needs to detect same bodies to simplify bytecode generated.     */	WITHOUT_CLASSIFICATION	0.9999962714261696	WITHOUT_CLASSIFICATION	3.7285738303306964E-6	IMPLEMENTATION
// line 313	WITHOUT_CLASSIFICATION	0.9999250468632185	WITHOUT_CLASSIFICATION	7.495313678153052E-5	IMPLEMENTATION
// line 339	WITHOUT_CLASSIFICATION	0.9999250208232384	WITHOUT_CLASSIFICATION	7.497917676152598E-5	IMPLEMENTATION
// line 361	WITHOUT_CLASSIFICATION	0.9999250208232384	WITHOUT_CLASSIFICATION	7.497917676152598E-5	IMPLEMENTATION
// line 413	WITHOUT_CLASSIFICATION	0.9999250034582264	WITHOUT_CLASSIFICATION	7.499654177355423E-5	IMPLEMENTATION
// line 451	WITHOUT_CLASSIFICATION	0.9999250034582264	WITHOUT_CLASSIFICATION	7.499654177355423E-5	IMPLEMENTATION
// line 472	WITHOUT_CLASSIFICATION	0.9999250034582264	WITHOUT_CLASSIFICATION	7.499654177355423E-5	IMPLEMENTATION
// line 500	WITHOUT_CLASSIFICATION	0.9999250034582264	WITHOUT_CLASSIFICATION	7.499654177355423E-5	IMPLEMENTATION
// line 515	WITHOUT_CLASSIFICATION	0.9999250034582264	WITHOUT_CLASSIFICATION	7.499654177355423E-5	IMPLEMENTATION
// line 555	WITHOUT_CLASSIFICATION	0.9999250034582264	WITHOUT_CLASSIFICATION	7.499654177355423E-5	IMPLEMENTATION
// line 582	WITHOUT_CLASSIFICATION	0.9999250034582264	WITHOUT_CLASSIFICATION	7.499654177355423E-5	IMPLEMENTATION
// line 619	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 636	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 669	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 703	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 776	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 814	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 823	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 854	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 872	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 905	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 925	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 958	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 992	WITHOUT_CLASSIFICATION	0.9999249692725167	WITHOUT_CLASSIFICATION	7.503072748330681E-5	IMPLEMENTATION
// line 1047	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1072	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1081	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1108	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1136	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1168	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1192	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1241	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1267	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1286	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1301	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1314	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1333	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1362	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1395	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1420	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1439	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1476	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1535	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1588	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1618	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1643	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1669	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1728	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1753	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1779	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1794	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1812	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1837	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1895	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1925	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1950	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 1992	WITHOUT_CLASSIFICATION	0.9999255731835562	WITHOUT_CLASSIFICATION	7.442681644378569E-5	IMPLEMENTATION
// line 2014	WITHOUT_CLASSIFICATION	0.9999254100583856	WITHOUT_CLASSIFICATION	7.458994161434433E-5	IMPLEMENTATION
// Whether this scope is used as the "argument scope" for e.g. zsuper	WITHOUT_CLASSIFICATION	0.9999707092727551	WITHOUT_CLASSIFICATION	2.9290727244951403E-5	IMPLEMENTATION
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999866259391803	WITHOUT_CLASSIFICATION	1.3374060819748353E-5	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999808196247443	WITHOUT_CLASSIFICATION	1.9180375255673018E-5	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999808196247443	WITHOUT_CLASSIFICATION	1.9180375255673018E-5	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999808196247443	WITHOUT_CLASSIFICATION	1.9180375255673018E-5	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999808196247443	WITHOUT_CLASSIFICATION	1.9180375255673018E-5	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999808196247443	WITHOUT_CLASSIFICATION	1.9180375255673018E-5	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999808196247443	WITHOUT_CLASSIFICATION	1.9180375255673018E-5	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999808196247443	WITHOUT_CLASSIFICATION	1.9180375255673018E-5	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999707181764743	WITHOUT_CLASSIFICATION	2.928182352570448E-5	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999707181764743	WITHOUT_CLASSIFICATION	2.928182352570448E-5	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999707181764743	WITHOUT_CLASSIFICATION	2.928182352570448E-5	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999707181764743	WITHOUT_CLASSIFICATION	2.928182352570448E-5	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9998578639481988	WITHOUT_CLASSIFICATION	1.4213605180137112E-4	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9998578639481988	WITHOUT_CLASSIFICATION	1.4213605180137112E-4	IMPLEMENTATION
// We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the // 'b' will get put into this new dynamic scope.  The original scope does not see the new // 'b' and successive evals with this binding will.  I take it having the ability to have  // succesive binding evals be able to share same scope makes sense from a programmers  // perspective.   One crappy outcome of this design is it requires Dynamic and Static  // scopes to be mutable for this one case.	WITHOUT_CLASSIFICATION	0.9999999550033751	WITHOUT_CLASSIFICATION	4.4996624920508465E-8	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999881447815259	WITHOUT_CLASSIFICATION	1.1855218474111353E-5	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999881447815259	WITHOUT_CLASSIFICATION	1.1855218474111353E-5	IMPLEMENTATION
// tc // under method // self // under method // name // args	WITHOUT_CLASSIFICATION	0.9999456839614229	WITHOUT_CLASSIFICATION	5.43160385770277E-5	IMPLEMENTATION
// allow it to bubble up	WITHOUT_CLASSIFICATION	0.9999181182294686	WITHOUT_CLASSIFICATION	8.188177053148327E-5	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999536341128971	WITHOUT_CLASSIFICATION	4.636588710303256E-5	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999536341128971	WITHOUT_CLASSIFICATION	4.636588710303256E-5	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999536341128971	WITHOUT_CLASSIFICATION	4.636588710303256E-5	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999536341128971	WITHOUT_CLASSIFICATION	4.636588710303256E-5	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999536341128971	WITHOUT_CLASSIFICATION	4.636588710303256E-5	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999536341128971	WITHOUT_CLASSIFICATION	4.636588710303256E-5	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999536341128971	WITHOUT_CLASSIFICATION	4.636588710303256E-5	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999504653358195	WITHOUT_CLASSIFICATION	4.953466418035784E-5	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999497326750512	WITHOUT_CLASSIFICATION	5.026732494874567E-5	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999515001875595	WITHOUT_CLASSIFICATION	4.849981244050329E-5	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999515001875595	WITHOUT_CLASSIFICATION	4.849981244050329E-5	IMPLEMENTATION
// Check for a builtin first.	WITHOUT_CLASSIFICATION	0.9999812424599158	WITHOUT_CLASSIFICATION	1.8757540084204115E-5	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999586909368768	WITHOUT_CLASSIFICATION	4.130906312314758E-5	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999586909368768	WITHOUT_CLASSIFICATION	4.130906312314758E-5	IMPLEMENTATION
// Unfortunately, the number of digits in the exponent is // not clearly defined in Ruby documentation. This is a // platform/version-dependent behavior. On Linux/Mac/Cygwin/*nix, // two digits are used. On Windows, 3 digits are used. // It is desirable for JRuby to have consistent behavior, and // the two digits behavior was selected. This is also in sync // with "Java-native" sprintf behavior (java.util.Formatter). // E or e	WITHOUT_CLASSIFICATION	0.9999986087522118	WITHOUT_CLASSIFICATION	1.3912477881733627E-6	IMPLEMENTATION
/** * Represents the the dynamic portion of scoping information.  The variableValues are the * values of assigned local or block variables.  The staticScope identifies which sort of * scope this is (block or local). *  * Properties of Dynamic Scopes: * 1. static and dynamic scopes have the same number of names to values * 2. size of variables (and thus names) is determined during parsing.  So those structured do *    not need to change * * FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents.  This * is harmless (other than wasting memory), but we should not do that.  We can fix this in two * ways: * 1. Fix all callers * 2. Check parent that is passed in and make if new instance is local, then its parent is not local */	WITHOUT_CLASSIFICATION	0.9999990863287801	WITHOUT_CLASSIFICATION	9.136712199165451E-7	IMPLEMENTATION
// This method handles '**/' patterns and delegates to // fnmatch_helper for the main work.	WITHOUT_CLASSIFICATION	0.9999545998458178	WITHOUT_CLASSIFICATION	4.540015418221323E-5	IMPLEMENTATION
// Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern  // Example: foo{a{c},b}bar -> fooa{c}bar, foobbar	WITHOUT_CLASSIFICATION	0.9999377947637029	WITHOUT_CLASSIFICATION	6.220523629704285E-5	IMPLEMENTATION
// double precision, native // double precision, native	WITHOUT_CLASSIFICATION	0.9999650318718627	WITHOUT_CLASSIFICATION	3.496812813728412E-5	IMPLEMENTATION
// 64-bit number, native (as bignum)	WITHOUT_CLASSIFICATION	0.9998848345808237	WITHOUT_CLASSIFICATION	1.1516541917623563E-4	IMPLEMENTATION
// Next indicates to decode using native encoding format	WITHOUT_CLASSIFICATION	0.999945287552547	WITHOUT_CLASSIFICATION	5.47124474530414E-5	IMPLEMENTATION
// calculate based on a, b, c and d	WITHOUT_CLASSIFICATION	0.9999707373929235	WITHOUT_CLASSIFICATION	2.9262607076408873E-5	IMPLEMENTATION
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999842184837108	WITHOUT_CLASSIFICATION	1.5781516289231867E-5	IMPLEMENTATION
// MRI behavior:  for 'Q', do not add trailing nils	WITHOUT_CLASSIFICATION	0.9999607193539275	WITHOUT_CLASSIFICATION	3.92806460724032E-5	IMPLEMENTATION
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9999682397005369	WITHOUT_CLASSIFICATION	3.176029946308399E-5	IMPLEMENTATION
// exec needs to behave differently in-process, because it's technically // supposed to replace the calling process. So if we're supposed to run // in-process, we allow it to use the default streams and not use // pumpers at all. See JRUBY-2156 and JRUBY-2154.	WITHOUT_CLASSIFICATION	0.999994550861427	WITHOUT_CLASSIFICATION	5.4491385730171966E-6	IMPLEMENTATION
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999975050242462	WITHOUT_CLASSIFICATION	2.4949757538434283E-6	IMPLEMENTATION
// The problem we trying to solve below: STDIN in Java // is blocked and non-interruptible, so if we invoke read // on it, we might never be able to interrupt such thread. // So, we use in.available() to see if there is any input // ready, and only then read it. But this approach can't // tell whether the end of stream reached or not, so we // might end up looping right at the end of the stream. // Well, at least, we can improve the situation by checking // if some input was ever available, and if so, not // checking for available anymore, and just go to read.	WITHOUT_CLASSIFICATION	0.9999999389088459	WITHOUT_CLASSIFICATION	6.109115415360496E-8	IMPLEMENTATION
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999675908152871	WITHOUT_CLASSIFICATION	3.24091847130491E-5	IMPLEMENTATION
// an empirically derived rule: precision applies to // significand length, irrespective of exponent	WITHOUT_CLASSIFICATION	0.999929564289361	WITHOUT_CLASSIFICATION	7.043571063904735E-5	IMPLEMENTATION
// an official rule, clarified: if the exponent // <clarif>after adjusting for exponent form</clarif> // is < -4,  or the exponent <clarif>after adjusting  // for exponent form</clarif> is greater than the // precision, use exponent form	WITHOUT_CLASSIFICATION	0.9999896100735164	WITHOUT_CLASSIFICATION	1.038992648355403E-5	IMPLEMENTATION
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9999522751587064	WITHOUT_CLASSIFICATION	4.772484129358663E-5	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9999264644089719	WITHOUT_CLASSIFICATION	7.353559102807435E-5	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9999264644089719	WITHOUT_CLASSIFICATION	7.353559102807435E-5	IMPLEMENTATION
// MRI behavior: validate only the unnumbered arguments	WITHOUT_CLASSIFICATION	0.9999661101518214	WITHOUT_CLASSIFICATION	3.3889848178626347E-5	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999397481319289	WITHOUT_CLASSIFICATION	6.025186807124822E-5	IMPLEMENTATION
// calculation for simple (and typical) case, // adapted from sun.misc.FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999540544118887	WITHOUT_CLASSIFICATION	4.594558811130974E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9966252646073278	WITHOUT_CLASSIFICATION	0.0033747353926723103	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9998956684882685	WITHOUT_CLASSIFICATION	1.0433151173145658E-4	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9998956684882685	WITHOUT_CLASSIFICATION	1.0433151173145658E-4	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9998956684882685	WITHOUT_CLASSIFICATION	1.0433151173145658E-4	IMPLEMENTATION
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9999023885254564	WITHOUT_CLASSIFICATION	9.761147454355724E-5	IMPLEMENTATION
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999517496041294	WITHOUT_CLASSIFICATION	4.825039587049587E-5	IMPLEMENTATION
// call chmod after we created the RandomAccesFile // because otherwise, the file could be read-only	WITHOUT_CLASSIFICATION	0.9999694746098055	WITHOUT_CLASSIFICATION	3.0525390194506375E-5	IMPLEMENTATION
// attempt to set the permissions, if we have been passed a POSIX instance, // and only if the file was created in this call.	WITHOUT_CLASSIFICATION	0.9999986380446234	WITHOUT_CLASSIFICATION	1.3619553766267732E-6	IMPLEMENTATION
// // When reading into a heap buffer, the jvm allocates a temporary // direct ByteBuffer of the requested size.  To avoid allocating // a huge direct buffer when doing ludicrous reads (e.g. 1G or more) // we split the read up into chunks of no more than 1M //	WITHOUT_CLASSIFICATION	0.9999930832680852	WITHOUT_CLASSIFICATION	6.91673191479931E-6	IMPLEMENTATION
// // If it is a file channel, then we can pre-allocate the output buffer // to the total size of buffered + remaining bytes in file //	WITHOUT_CLASSIFICATION	0.9999880272820161	WITHOUT_CLASSIFICATION	1.1972717983871895E-5	IMPLEMENTATION
// // Cannot discern the total read length - allocate at least enough for the buffered data //	WITHOUT_CLASSIFICATION	0.9999774374106758	WITHOUT_CLASSIFICATION	2.256258932423213E-5	IMPLEMENTATION
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.999987000122815	WITHOUT_CLASSIFICATION	1.2999877184881066E-5	IMPLEMENTATION
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999402538292028	WITHOUT_CLASSIFICATION	5.9746170797325095E-5	IMPLEMENTATION
// already have some bytes buffered, just return those	WITHOUT_CLASSIFICATION	0.9999876532967789	WITHOUT_CLASSIFICATION	1.2346703221100158E-5	IMPLEMENTATION
// reset buffer	WITHOUT_CLASSIFICATION	0.9999514801028239	WITHOUT_CLASSIFICATION	4.8519897176064344E-5	IMPLEMENTATION
// // Synchronize and re-check to avoid creating more than one Selector per provider //	WITHOUT_CLASSIFICATION	0.9999289227589832	WITHOUT_CLASSIFICATION	7.10772410168432E-5	IMPLEMENTATION
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.8512627459849513	WITHOUT_CLASSIFICATION	0.14873725401504878	IMPLEMENTATION
// Is there something built into JRuby to do this?	WITHOUT_CLASSIFICATION	0.9999333166033196	WITHOUT_CLASSIFICATION	6.668339668042696E-5	IMPLEMENTATION
// Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long // assertTrue(value == valueViaValuesIterator);	WITHOUT_CLASSIFICATION	0.9999954982469913	WITHOUT_CLASSIFICATION	4.50175300876693E-6	IMPLEMENTATION
// value equality //result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); //assertEquals("two", result);	WITHOUT_CLASSIFICATION	0.9999914297896869	WITHOUT_CLASSIFICATION	8.570210313128227E-6	IMPLEMENTATION
// Uncomment the "puts" lines if you want to see more detail	WITHOUT_CLASSIFICATION	0.9999447388072996	WITHOUT_CLASSIFICATION	5.526119270027086E-5	IMPLEMENTATION
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.999995923791034	WITHOUT_CLASSIFICATION	4.076208966006391E-6	IMPLEMENTATION
// change the thread context to include the class	WITHOUT_CLASSIFICATION	0.9999696718946554	WITHOUT_CLASSIFICATION	3.032810534467211E-5	IMPLEMENTATION
