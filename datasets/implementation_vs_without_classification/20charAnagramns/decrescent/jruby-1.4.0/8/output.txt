// TODO: warn "tried to create Proc object without a block"	IMPLEMENTATION	0.9696408596959509	WITHOUT_CLASSIFICATION	0.030359140304049022	IMPLEMENTATION
// TODO: CLONE_SETUP here	IMPLEMENTATION	0.8683609768112731	WITHOUT_CLASSIFICATION	0.13163902318872697	IMPLEMENTATION
// TODO: Someday, enable.	IMPLEMENTATION	0.872739308158665	WITHOUT_CLASSIFICATION	0.12726069184133504	IMPLEMENTATION
// Bunch of methods still not implemented	IMPLEMENTATION	0.7953098663356123	IMPLEMENTATION	0.20469013366438765	WITHOUT_CLASSIFICATION
// TODO: non-strict option	IMPLEMENTATION	0.7706763840941093	WITHOUT_CLASSIFICATION	0.2293236159058908	IMPLEMENTATION
// TODO: opt for 2 and 3 ?	IMPLEMENTATION	0.8925620812573762	WITHOUT_CLASSIFICATION	0.10743791874262373	IMPLEMENTATION
// FIXME: Should we make this work with platform's locale, // or continue hardcoding US?	IMPLEMENTATION	0.9986532778247766	WITHOUT_CLASSIFICATION	0.0013467221752233318	IMPLEMENTATION
// TODO: rescan code range ?	IMPLEMENTATION	0.9039328123685758	WITHOUT_CLASSIFICATION	0.09606718763142426	IMPLEMENTATION
// TODO: rescan code range ?	IMPLEMENTATION	0.9039328123685758	WITHOUT_CLASSIFICATION	0.09606718763142426	IMPLEMENTATION
// TODO: pass this in?	IMPLEMENTATION	0.8326249321627976	WITHOUT_CLASSIFICATION	0.16737506783720235	IMPLEMENTATION
// FIXME: Pass block down?	IMPLEMENTATION	0.999618798180805	WITHOUT_CLASSIFICATION	3.8120181919497966E-4	IMPLEMENTATION
// TODO: do something here?	IMPLEMENTATION	0.64468698843801	WITHOUT_CLASSIFICATION	0.3553130115619901	IMPLEMENTATION
// TODO: port exact behavior from MRI, and move most locking logic into ChannelDescriptor // TODO: for all LOCK_NB cases, return false if they would block	IMPLEMENTATION	0.8006929407607422	WITHOUT_CLASSIFICATION	0.1993070592392578	IMPLEMENTATION
// TODO: check if too many open files, GC and try again	IMPLEMENTATION	0.5205583291542962	IMPLEMENTATION	0.4794416708457038	WITHOUT_CLASSIFICATION
//TODO deal with UNC names	IMPLEMENTATION	0.9998190272855331	WITHOUT_CLASSIFICATION	1.809727144668796E-4	IMPLEMENTATION
// FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.9993522187217367	WITHOUT_CLASSIFICATION	6.477812782631941E-4	IMPLEMENTATION
//FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.9997908039086563	WITHOUT_CLASSIFICATION	2.0919609134374594E-4	IMPLEMENTATION
// TODO: SafeStringValue here	IMPLEMENTATION	0.874661026217895	WITHOUT_CLASSIFICATION	0.125338973782105	IMPLEMENTATION
// TODO: turn off readable? am I reading this right? // This only seems to be used while duping below, since modes gets // reset to actual modes afterward //fptr->mode &= (m & FMODE_READABLE) ? ~FMODE_READABLE : ~FMODE_WRITABLE;	IMPLEMENTATION	0.9791657047600771	WITHOUT_CLASSIFICATION	0.020834295239922855	IMPLEMENTATION
// TODO: check safe, taint on incoming string	IMPLEMENTATION	0.6075817264242823	WITHOUT_CLASSIFICATION	0.39241827357571757	IMPLEMENTATION
// TODO: pipe handler to be reopened with path and "w" mode	IMPLEMENTATION	0.8940853647270726	WITHOUT_CLASSIFICATION	0.10591463527292744	IMPLEMENTATION
// FIXME: add text mode to mode flags	IMPLEMENTATION	0.9998019211353903	WITHOUT_CLASSIFICATION	1.9807886460955777E-4	IMPLEMENTATION
// TODO: Something about pipe buffer length here	IMPLEMENTATION	0.9299745520870576	WITHOUT_CLASSIFICATION	0.07002544791294245	IMPLEMENTATION
// TODO: handle errors in buffered write by retrying until finished or file is closed	IMPLEMENTATION	0.9320688284070616	IMPLEMENTATION	0.06793117159293838	WITHOUT_CLASSIFICATION
// TODO: notify threads waiting on descriptors/IO? probably not...	IMPLEMENTATION	0.7785511594369172	WITHOUT_CLASSIFICATION	0.22144884056308287	IMPLEMENTATION
// TODO: Ruby re-checks that the buffer string hasn't been modified	IMPLEMENTATION	0.9236924814695647	WITHOUT_CLASSIFICATION	0.07630751853043521	IMPLEMENTATION
// TODO: Ruby unlocks the string here	IMPLEMENTATION	0.8676118092139788	WITHOUT_CLASSIFICATION	0.13238819078602113	IMPLEMENTATION
// TODO: Ruby truncates string to specific size here, but our bytelist should handle this already?	IMPLEMENTATION	0.6928604776164604	WITHOUT_CLASSIFICATION	0.30713952238353964	IMPLEMENTATION
// TODO: Ruby unlocks the string here	IMPLEMENTATION	0.8676118092139788	WITHOUT_CLASSIFICATION	0.13238819078602113	IMPLEMENTATION
// TODO: Ruby truncates string to specific size here, but our bytelist should handle this already?	IMPLEMENTATION	0.6928604776164604	WITHOUT_CLASSIFICATION	0.30713952238353964	IMPLEMENTATION
// TODO: ruby locks the string here	IMPLEMENTATION	0.9528429877294733	WITHOUT_CLASSIFICATION	0.04715701227052671	IMPLEMENTATION
// TODO same zero-length checks as file above	IMPLEMENTATION	0.9648811362151858	WITHOUT_CLASSIFICATION	0.035118863784814276	IMPLEMENTATION
// TODO: MRI also can hadle Bignum here	IMPLEMENTATION	0.8446121790699255	WITHOUT_CLASSIFICATION	0.1553878209300746	IMPLEMENTATION
// TODO: make threadsafe	IMPLEMENTATION	0.7581651788433845	WITHOUT_CLASSIFICATION	0.24183482115661542	IMPLEMENTATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9063192384379303	WITHOUT_CLASSIFICATION	0.09368076156206975	IMPLEMENTATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9063192384379303	WITHOUT_CLASSIFICATION	0.09368076156206975	IMPLEMENTATION
// FIXME: create AttrReaderMethod, AttrWriterMethod, for faster attr access	IMPLEMENTATION	0.9997772250812628	WITHOUT_CLASSIFICATION	2.2277491873727107E-4	IMPLEMENTATION
// Do not clone cached methods // FIXME: MRI copies all methods here	IMPLEMENTATION	0.9999001628242357	WITHOUT_CLASSIFICATION	9.983717576429767E-5	IMPLEMENTATION
// TODO: don't calculate the same value 3 times	IMPLEMENTATION	0.9903078180193082	WITHOUT_CLASSIFICATION	0.009692181980691737	IMPLEMENTATION
// TODO: 3 times calculate the same value below	IMPLEMENTATION	0.986670877585557	WITHOUT_CLASSIFICATION	0.013329122414443026	IMPLEMENTATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.8607978067023586	WITHOUT_CLASSIFICATION	0.13920219329764133	IMPLEMENTATION
// TODO: Store BEGIN and END information into this node	IMPLEMENTATION	0.948122245890394	WITHOUT_CLASSIFICATION	0.05187775410960611	IMPLEMENTATION
// TODO: put these nil guards into tree (bigger than I want to do right now)	IMPLEMENTATION	0.7927639288223807	WITHOUT_CLASSIFICATION	0.20723607117761922	IMPLEMENTATION
// FIXME: Make bodyNode non-null in parser	IMPLEMENTATION	0.9997108063303137	WITHOUT_CLASSIFICATION	2.891936696861763E-4	IMPLEMENTATION
// TODO: call config with scope but no frame	IMPLEMENTATION	0.8671103420455745	WITHOUT_CLASSIFICATION	0.1328896579544256	IMPLEMENTATION
// TODO: add trace call?	IMPLEMENTATION	0.6166876290098972	IMPLEMENTATION	0.3833123709901028	WITHOUT_CLASSIFICATION
// FIXME: missing arity check	IMPLEMENTATION	0.9997078634615302	WITHOUT_CLASSIFICATION	2.921365384698016E-4	IMPLEMENTATION
// FIXME: optimize for cases where we have no false branch	IMPLEMENTATION	0.9996054031044188	WITHOUT_CLASSIFICATION	3.945968955811509E-4	IMPLEMENTATION
// FIXME: after jump is not in here.  Will if ever be? //Label afterJmp = new Label();	IMPLEMENTATION	0.9998123003267674	WITHOUT_CLASSIFICATION	1.8769967323259683E-4	IMPLEMENTATION
// TODO: build arg list based on number of args, optionals, etc	IMPLEMENTATION	0.9436714806290342	WITHOUT_CLASSIFICATION	0.05632851937096582	IMPLEMENTATION
// FIXME: missing arity check	IMPLEMENTATION	0.9997078634615302	WITHOUT_CLASSIFICATION	2.921365384698016E-4	IMPLEMENTATION
// SSS FIXME: Traverse up the scope hierarchy to find the constant as long as the parent is a static scope	IMPLEMENTATION	0.9999938737110049	WITHOUT_CLASSIFICATION	6.126288995102423E-6	IMPLEMENTATION
// SSS FIXME: Should I be returning the operand constructed here?	IMPLEMENTATION	0.9998913514221545	WITHOUT_CLASSIFICATION	1.0864857784554414E-4	IMPLEMENTATION
// TODO: Add IR instructions for checking method arity! // s.getVariableCompiler().checkMethodArity(required, opt, rest);	IMPLEMENTATION	0.7870442274405995	WITHOUT_CLASSIFICATION	0.21295577255940046	IMPLEMENTATION
// FIXME: Ruby 1.9 post args code needs to come here	IMPLEMENTATION	0.9996076937311676	WITHOUT_CLASSIFICATION	3.9230626883234916E-4	IMPLEMENTATION
// SSS: FIXME: Somewhere here, we need to record information the type of this operand as String	IMPLEMENTATION	0.9999554720147411	WITHOUT_CLASSIFICATION	4.452798525879287E-5	IMPLEMENTATION
// FIXME: Translate this call below! // s.unwrapPassedBlock();	IMPLEMENTATION	0.9993367347927753	WITHOUT_CLASSIFICATION	6.632652072248042E-4	IMPLEMENTATION
// SSS FIXME: We need to build debug information tracking into the IR in some fashion // So, these methods below would have to have equivalents in IR_Scope implementations.	IMPLEMENTATION	0.9959321707814914	WITHOUT_CLASSIFICATION	0.004067829218508548	IMPLEMENTATION
// SSS FIXME: Incomplete!	IMPLEMENTATION	0.9998143361859131	WITHOUT_CLASSIFICATION	1.8566381408696635E-4	IMPLEMENTATION
// SSS FIXME: Pick one of bytelist or string, or add internal conversion methods to convert to the default representation	IMPLEMENTATION	0.99998829245452	WITHOUT_CLASSIFICATION	1.1707545479937427E-5	IMPLEMENTATION
// SSS FIXME: To be done	IMPLEMENTATION	0.9998622781562281	WITHOUT_CLASSIFICATION	1.377218437718274E-4	IMPLEMENTATION
//TODO: implement, won't do this now	IMPLEMENTATION	0.9140392988594489	IMPLEMENTATION	0.08596070114055109	WITHOUT_CLASSIFICATION
//TODO: implement, won't do this now	IMPLEMENTATION	0.9140392988594489	IMPLEMENTATION	0.08596070114055109	WITHOUT_CLASSIFICATION
// TODO: validate port as numeric	IMPLEMENTATION	0.962541118355308	WITHOUT_CLASSIFICATION	0.037458881644692084	IMPLEMENTATION
// TODO: this code should really check if a Ruby equals method is implemented or not.	IMPLEMENTATION	0.9796160365615122	IMPLEMENTATION	0.02038396343848781	WITHOUT_CLASSIFICATION
// if not already defined, we add a 'new' that guesses at which signature to use // TODO: just adding first one right now...add in signature-guessing logic	IMPLEMENTATION	0.9938480529918129	WITHOUT_CLASSIFICATION	0.006151947008187167	IMPLEMENTATION
// TODO: deal with varargs	IMPLEMENTATION	0.9055821932686552	WITHOUT_CLASSIFICATION	0.0944178067313449	IMPLEMENTATION
// TODO: deal with varargs	IMPLEMENTATION	0.9055821932686552	WITHOUT_CLASSIFICATION	0.0944178067313449	IMPLEMENTATION
// TODO: other reserved names?	IMPLEMENTATION	0.8871429043527785	WITHOUT_CLASSIFICATION	0.11285709564722148	IMPLEMENTATION
// TODO: we can probably release our references to the constantFields // array and static/instance callback hashes at this point. 	IMPLEMENTATION	0.9951880538362835	WITHOUT_CLASSIFICATION	0.004811946163716531	IMPLEMENTATION
// TODO: Formalize conversion mechanisms between Java and Ruby	IMPLEMENTATION	0.9424857068035472	WITHOUT_CLASSIFICATION	0.05751429319645275	IMPLEMENTATION
// XXX: Check if it's appropriate type?	IMPLEMENTATION	0.9997919709390457	WITHOUT_CLASSIFICATION	2.0802906095427126E-4	IMPLEMENTATION
// TODO: call ruby method	IMPLEMENTATION	0.8472509754182264	WITHOUT_CLASSIFICATION	0.15274902458177356	IMPLEMENTATION
// TODO: call ruby method	IMPLEMENTATION	0.8472509754182264	WITHOUT_CLASSIFICATION	0.15274902458177356	IMPLEMENTATION
// TODO: Add safety check for taintedness	IMPLEMENTATION	0.8338877040395413	WITHOUT_CLASSIFICATION	0.16611229596045862	IMPLEMENTATION
// FIXME: Need to detect magic_comment in 1.9 here for encoding	IMPLEMENTATION	0.9996094588388059	WITHOUT_CLASSIFICATION	3.905411611939895E-4	IMPLEMENTATION
/* xxx shouldn't check if valid option variable */	IMPLEMENTATION	0.9999551517650677	WITHOUT_CLASSIFICATION	4.484823493244544E-5	IMPLEMENTATION
// TODO: this isn't handling multibyte yet	IMPLEMENTATION	0.7355787063601683	WITHOUT_CLASSIFICATION	0.26442129363983163	IMPLEMENTATION
// TODO: This should be something else like a tCHAR	IMPLEMENTATION	0.844646974710542	IMPLEMENTATION	0.1553530252894581	WITHOUT_CLASSIFICATION
// FIXME: \r logic needed	IMPLEMENTATION	0.9980361718352521	WITHOUT_CLASSIFICATION	0.0019638281647479097	IMPLEMENTATION
// TODO: note lack of command.com support for Win 9x...	IMPLEMENTATION	0.6271218190845009	IMPLEMENTATION	0.372878180915499	WITHOUT_CLASSIFICATION
// FIXME: Make thread pool threads daemons if necessary	IMPLEMENTATION	0.9998083663868333	WITHOUT_CLASSIFICATION	1.9163361316667892E-4	IMPLEMENTATION
/* FIXME: We may be intern'ing more than once.*/	IMPLEMENTATION	0.9998134136165527	WITHOUT_CLASSIFICATION	1.8658638344720482E-4	IMPLEMENTATION
/* FIXME: We may be intern'ing more than once.*/	IMPLEMENTATION	0.9998134136165527	WITHOUT_CLASSIFICATION	1.8658638344720482E-4	IMPLEMENTATION
/* FIXME: arg_concat missing for opt_call_args*/	IMPLEMENTATION	0.9998809462264343	WITHOUT_CLASSIFICATION	1.1905377356575991E-4	IMPLEMENTATION
/* FIXME: arg_concat logic missing for opt_call_args*/	IMPLEMENTATION	0.9998854305535612	WITHOUT_CLASSIFICATION	1.1456944643884758E-4	IMPLEMENTATION
// FIXME: This needs to happen for lambdas //            args.checkArgCount(runtime, parameters.length);	IMPLEMENTATION	0.9997458691722796	WITHOUT_CLASSIFICATION	2.5413082772035556E-4	IMPLEMENTATION
// FIXME: This needs to happen for lambdas //            args.checkArgCount(runtime, parameters.length);	IMPLEMENTATION	0.9997458691722796	WITHOUT_CLASSIFICATION	2.5413082772035556E-4	IMPLEMENTATION
// TODO: make it cross runtime safe by COW or eager copy	IMPLEMENTATION	0.8786174828407384	WITHOUT_CLASSIFICATION	0.12138251715926159	IMPLEMENTATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.9997310549967479	WITHOUT_CLASSIFICATION	2.689450032521366E-4	IMPLEMENTATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.9997310549967479	WITHOUT_CLASSIFICATION	2.689450032521366E-4	IMPLEMENTATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.9997310549967479	WITHOUT_CLASSIFICATION	2.689450032521366E-4	IMPLEMENTATION
// TODO: check the return value here	IMPLEMENTATION	0.6886254837319798	IMPLEMENTATION	0.3113745162680202	WITHOUT_CLASSIFICATION
// TODO: check the return value here	IMPLEMENTATION	0.6886254837319798	IMPLEMENTATION	0.3113745162680202	WITHOUT_CLASSIFICATION
// TODO: Make sure all appropriate open flags are added to this check.	IMPLEMENTATION	0.5759461619868523	WITHOUT_CLASSIFICATION	0.4240538380131478	IMPLEMENTATION
//subList.clear(); // Sublist is supposed to share same backing store as list...TODO in RubyArray. //assertTrue(list.size() == 1);	IMPLEMENTATION	0.9999427293095804	WITHOUT_CLASSIFICATION	5.727069041962996E-5	IMPLEMENTATION
// SSS FIXME: Cannot optimize this without assuming that Range.to_ary method has not redefined. // So for now, return null!	IMPLEMENTATION	0.9997658295663457	WITHOUT_CLASSIFICATION	2.3417043365417967E-4	IMPLEMENTATION
// TODO Auto-generated method stub	IMPLEMENTATION	0.9999944739789136	IMPLEMENTATION	5.5260210864268866E-6	WITHOUT_CLASSIFICATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.99993996507613	IMPLEMENTATION	6.0034923869951145E-5	WITHOUT_CLASSIFICATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.99993996507613	IMPLEMENTATION	6.0034923869951145E-5	WITHOUT_CLASSIFICATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.99993996507613	IMPLEMENTATION	6.0034923869951145E-5	WITHOUT_CLASSIFICATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.8607978067023586	WITHOUT_CLASSIFICATION	0.13920219329764133	IMPLEMENTATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.8607978067023586	WITHOUT_CLASSIFICATION	0.13920219329764133	IMPLEMENTATION
// TODO: check for ascii string	IMPLEMENTATION	0.6950607367301798	WITHOUT_CLASSIFICATION	0.30493926326982007	IMPLEMENTATION
// filter out any Java primitive names // TODO: should check against all Java reserved names here, not just primitives	IMPLEMENTATION	0.8659673192139654	WITHOUT_CLASSIFICATION	0.13403268078603453	IMPLEMENTATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9063192384379303	WITHOUT_CLASSIFICATION	0.09368076156206975	IMPLEMENTATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9063192384379303	WITHOUT_CLASSIFICATION	0.09368076156206975	IMPLEMENTATION
// TODO: missing additional logic for dealing with conflicting protected fields.	IMPLEMENTATION	0.9519256896024257	WITHOUT_CLASSIFICATION	0.04807431039757421	IMPLEMENTATION
// TODO: better detection when path is absolute or not. // If the path isn't absolute, then prepend the current working // directory to the path.	IMPLEMENTATION	0.9958525312843711	WITHOUT_CLASSIFICATION	0.004147468715628915	IMPLEMENTATION
// FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.9993522187217367	WITHOUT_CLASSIFICATION	6.477812782631941E-4	IMPLEMENTATION
// FIX replace type() == ... with isInstanceOf(...)	IMPLEMENTATION	0.9999369072179946	WITHOUT_CLASSIFICATION	6.309278200542443E-5	IMPLEMENTATION
/* TODO: MRI is just a when node.  We need this extra logic for IDE consumers (null in casenode statement should be implicit nil)*/	IMPLEMENTATION	0.9638342286574766	WITHOUT_CLASSIFICATION	0.03616577134252338	IMPLEMENTATION
// TODO: This and recacheRespondsTo needed to be synchronized for JRUBY-3466, // but this degraded performance nearly 2x. It's still faster than MRI, but // a reanalysis of this code may show a faster way to ensure we're caching // safely.	IMPLEMENTATION	0.5495892870413649	WITHOUT_CLASSIFICATION	0.4504107129586352	IMPLEMENTATION
// TODO: adjust length so it won't fall in the middle  // of a multi-byte character. MRI's sprintf.c uses tables // in a modified version of regex.c, which assume some // particular  encoding for a given installation/application. // (See regex.c#re_mbcinit in ruby-1.8.5-p12)  // // This is only an issue if the user specifies a precision // that causes the string to be truncated. The same issue // would arise taking a substring of a ByteList-backed RubyString.	IMPLEMENTATION	0.9994243346193878	WITHOUT_CLASSIFICATION	5.756653806122003E-4	IMPLEMENTATION
// set constants now that they're initialized	WITHOUT_CLASSIFICATION	0.9999844729615788	WITHOUT_CLASSIFICATION	1.5527038421195305E-5	IMPLEMENTATION
// line 335	WITHOUT_CLASSIFICATION	0.9999303072217124	WITHOUT_CLASSIFICATION	6.969277828760286E-5	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999053960346399	WITHOUT_CLASSIFICATION	9.460396536004441E-5	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999053960346399	WITHOUT_CLASSIFICATION	9.460396536004441E-5	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999053960346399	WITHOUT_CLASSIFICATION	9.460396536004441E-5	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999053960346399	WITHOUT_CLASSIFICATION	9.460396536004441E-5	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999053960346399	WITHOUT_CLASSIFICATION	9.460396536004441E-5	IMPLEMENTATION
// Figure end-char.  '\0' is special to indicate begin=end and that no nesting?	WITHOUT_CLASSIFICATION	0.9999541335501662	WITHOUT_CLASSIFICATION	4.5866449833818656E-5	IMPLEMENTATION
// line 362	WITHOUT_CLASSIFICATION	0.9999303072217124	WITHOUT_CLASSIFICATION	6.969277828760286E-5	IMPLEMENTATION
// line 372	WITHOUT_CLASSIFICATION	0.9999303072217124	WITHOUT_CLASSIFICATION	6.969277828760286E-5	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.999904698401697	WITHOUT_CLASSIFICATION	9.530159830288174E-5	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.999904698401697	WITHOUT_CLASSIFICATION	9.530159830288174E-5	IMPLEMENTATION
// line 391	WITHOUT_CLASSIFICATION	0.9999303072217124	WITHOUT_CLASSIFICATION	6.969277828760286E-5	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.999904698401697	WITHOUT_CLASSIFICATION	9.530159830288174E-5	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.999904698401697	WITHOUT_CLASSIFICATION	9.530159830288174E-5	IMPLEMENTATION
/* ^D */	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
/* ^Z */	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999053960346399	WITHOUT_CLASSIFICATION	9.460396536004441E-5	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999053960346399	WITHOUT_CLASSIFICATION	9.460396536004441E-5	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999053960346399	WITHOUT_CLASSIFICATION	9.460396536004441E-5	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999053960346399	WITHOUT_CLASSIFICATION	9.460396536004441E-5	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999053960346399	WITHOUT_CLASSIFICATION	9.460396536004441E-5	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999053960346399	WITHOUT_CLASSIFICATION	9.460396536004441E-5	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999053960346399	WITHOUT_CLASSIFICATION	9.460396536004441E-5	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999053960346399	WITHOUT_CLASSIFICATION	9.460396536004441E-5	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999053960346399	WITHOUT_CLASSIFICATION	9.460396536004441E-5	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999053960346399	WITHOUT_CLASSIFICATION	9.460396536004441E-5	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999053960346399	WITHOUT_CLASSIFICATION	9.460396536004441E-5	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999053960346399	WITHOUT_CLASSIFICATION	9.460396536004441E-5	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999053960346399	WITHOUT_CLASSIFICATION	9.460396536004441E-5	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999053960346399	WITHOUT_CLASSIFICATION	9.460396536004441E-5	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999053960346399	WITHOUT_CLASSIFICATION	9.460396536004441E-5	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999053960346399	WITHOUT_CLASSIFICATION	9.460396536004441E-5	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999053960346399	WITHOUT_CLASSIFICATION	9.460396536004441E-5	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999053960346399	WITHOUT_CLASSIFICATION	9.460396536004441E-5	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999053960346399	WITHOUT_CLASSIFICATION	9.460396536004441E-5	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999053960346399	WITHOUT_CLASSIFICATION	9.460396536004441E-5	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.999904698401697	WITHOUT_CLASSIFICATION	9.530159830288174E-5	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.999904698401697	WITHOUT_CLASSIFICATION	9.530159830288174E-5	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.999904698401697	WITHOUT_CLASSIFICATION	9.530159830288174E-5	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.999904698401697	WITHOUT_CLASSIFICATION	9.530159830288174E-5	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.999904698401697	WITHOUT_CLASSIFICATION	9.530159830288174E-5	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.999904698401697	WITHOUT_CLASSIFICATION	9.530159830288174E-5	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.999904698401697	WITHOUT_CLASSIFICATION	9.530159830288174E-5	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.999904698401697	WITHOUT_CLASSIFICATION	9.530159830288174E-5	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.999904698401697	WITHOUT_CLASSIFICATION	9.530159830288174E-5	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.999904698401697	WITHOUT_CLASSIFICATION	9.530159830288174E-5	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.999904698401697	WITHOUT_CLASSIFICATION	9.530159830288174E-5	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.999904698401697	WITHOUT_CLASSIFICATION	9.530159830288174E-5	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.999904698401697	WITHOUT_CLASSIFICATION	9.530159830288174E-5	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.999904698401697	WITHOUT_CLASSIFICATION	9.530159830288174E-5	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.999904698401697	WITHOUT_CLASSIFICATION	9.530159830288174E-5	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.999904698401697	WITHOUT_CLASSIFICATION	9.530159830288174E-5	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.999904698401697	WITHOUT_CLASSIFICATION	9.530159830288174E-5	IMPLEMENTATION
//Do nothing	WITHOUT_CLASSIFICATION	0.9999742219367524	WITHOUT_CLASSIFICATION	2.5778063247496304E-5	IMPLEMENTATION
//Do nothing	WITHOUT_CLASSIFICATION	0.9999742219367524	WITHOUT_CLASSIFICATION	2.5778063247496304E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9981783711906661	WITHOUT_CLASSIFICATION	0.0018216288093339545	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9981783711906661	WITHOUT_CLASSIFICATION	0.0018216288093339545	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9981783711906661	WITHOUT_CLASSIFICATION	0.0018216288093339545	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9981783711906661	WITHOUT_CLASSIFICATION	0.0018216288093339545	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9981783711906661	WITHOUT_CLASSIFICATION	0.0018216288093339545	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9981783711906661	WITHOUT_CLASSIFICATION	0.0018216288093339545	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9981783711906661	WITHOUT_CLASSIFICATION	0.0018216288093339545	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9981783711906661	WITHOUT_CLASSIFICATION	0.0018216288093339545	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9981783711906661	WITHOUT_CLASSIFICATION	0.0018216288093339545	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9981783711906661	WITHOUT_CLASSIFICATION	0.0018216288093339545	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9981783711906661	WITHOUT_CLASSIFICATION	0.0018216288093339545	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9981783711906661	WITHOUT_CLASSIFICATION	0.0018216288093339545	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9981783711906661	WITHOUT_CLASSIFICATION	0.0018216288093339545	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9981783711906661	WITHOUT_CLASSIFICATION	0.0018216288093339545	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9981783711906661	WITHOUT_CLASSIFICATION	0.0018216288093339545	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9981783711906661	WITHOUT_CLASSIFICATION	0.0018216288093339545	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9981783711906661	WITHOUT_CLASSIFICATION	0.0018216288093339545	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9981783711906661	WITHOUT_CLASSIFICATION	0.0018216288093339545	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9981783711906661	WITHOUT_CLASSIFICATION	0.0018216288093339545	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9981783711906661	WITHOUT_CLASSIFICATION	0.0018216288093339545	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9981783711906661	WITHOUT_CLASSIFICATION	0.0018216288093339545	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9981783711906661	WITHOUT_CLASSIFICATION	0.0018216288093339545	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9981783711906661	WITHOUT_CLASSIFICATION	0.0018216288093339545	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9981783711906661	WITHOUT_CLASSIFICATION	0.0018216288093339545	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9981783711906661	WITHOUT_CLASSIFICATION	0.0018216288093339545	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9981783711906661	WITHOUT_CLASSIFICATION	0.0018216288093339545	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9981783711906661	WITHOUT_CLASSIFICATION	0.0018216288093339545	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9981783711906661	WITHOUT_CLASSIFICATION	0.0018216288093339545	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9981783711906661	WITHOUT_CLASSIFICATION	0.0018216288093339545	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9981783711906661	WITHOUT_CLASSIFICATION	0.0018216288093339545	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9981783711906661	WITHOUT_CLASSIFICATION	0.0018216288093339545	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9981783711906661	WITHOUT_CLASSIFICATION	0.0018216288093339545	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9981783711906661	WITHOUT_CLASSIFICATION	0.0018216288093339545	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9981783711906661	WITHOUT_CLASSIFICATION	0.0018216288093339545	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9981783711906661	WITHOUT_CLASSIFICATION	0.0018216288093339545	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9981783711906661	WITHOUT_CLASSIFICATION	0.0018216288093339545	IMPLEMENTATION
// return result	WITHOUT_CLASSIFICATION	0.9999849334937112	WITHOUT_CLASSIFICATION	1.5066506288777988E-5	IMPLEMENTATION
// name	WITHOUT_CLASSIFICATION	0.9975634342186356	WITHOUT_CLASSIFICATION	0.0024365657813643646	IMPLEMENTATION
// Define System.getProperties() in ENV_JAVA	WITHOUT_CLASSIFICATION	0.9999563890522702	WITHOUT_CLASSIFICATION	4.361094772982109E-5	IMPLEMENTATION
// Accessor methods.	WITHOUT_CLASSIFICATION	0.9999344456595496	WITHOUT_CLASSIFICATION	6.55543404504288E-5	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999188071666546	WITHOUT_CLASSIFICATION	8.11928333453346E-5	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999188071666546	WITHOUT_CLASSIFICATION	8.11928333453346E-5	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999188071666546	WITHOUT_CLASSIFICATION	8.11928333453346E-5	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999188071666546	WITHOUT_CLASSIFICATION	8.11928333453346E-5	IMPLEMENTATION
// call getpwent to fail early if unsupported	WITHOUT_CLASSIFICATION	0.9999452044498439	WITHOUT_CLASSIFICATION	5.4795550156235435E-5	IMPLEMENTATION
// fall back on env entry for USER	WITHOUT_CLASSIFICATION	0.9999349786250898	WITHOUT_CLASSIFICATION	6.502137491015639E-5	IMPLEMENTATION
// try to read grent to fail fast	WITHOUT_CLASSIFICATION	0.9999687277475539	WITHOUT_CLASSIFICATION	3.127225244610221E-5	IMPLEMENTATION
// define ARGV and $* for this runtime	WITHOUT_CLASSIFICATION	0.9999677065355687	WITHOUT_CLASSIFICATION	3.229346443129591E-5	IMPLEMENTATION
// Version information:	WITHOUT_CLASSIFICATION	0.9999584844427792	WITHOUT_CLASSIFICATION	4.151555722074869E-5	IMPLEMENTATION
// after defn of $stderr as the call may produce warnings	WITHOUT_CLASSIFICATION	0.9999714699948677	WITHOUT_CLASSIFICATION	2.8530005132296074E-5	IMPLEMENTATION
// ARGF, $< object	WITHOUT_CLASSIFICATION	0.9999315735228446	WITHOUT_CLASSIFICATION	6.842647715540515E-5	IMPLEMENTATION
// if the environment variables can't be obtained, define an empty ENV	WITHOUT_CLASSIFICATION	0.9999949594960421	WITHOUT_CLASSIFICATION	5.040503957941738E-6	IMPLEMENTATION
// On platforms without a c-library accessable through JNA, getpid will return hashCode  // as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing // $$ on getpid() where available, we have the same semantics as MRI.	WITHOUT_CLASSIFICATION	0.9999955300322222	WITHOUT_CLASSIFICATION	4.469967777824631E-6	IMPLEMENTATION
//$@ returns nil if $!.backtrace is not an array	WITHOUT_CLASSIFICATION	0.9999683948325757	WITHOUT_CLASSIFICATION	3.16051674242732E-5	IMPLEMENTATION
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.999953332998396	WITHOUT_CLASSIFICATION	4.666700160413075E-5	IMPLEMENTATION
// MRI behavior: just plain '//' or '\\\\' are considered illegal on Windows.	WITHOUT_CLASSIFICATION	0.9999573548535124	WITHOUT_CLASSIFICATION	4.264514648752742E-5	IMPLEMENTATION
// this _is_ legal (when removing an undef)	WITHOUT_CLASSIFICATION	0.9999356157750564	WITHOUT_CLASSIFICATION	6.438422494352694E-5	IMPLEMENTATION
// What we passed to the constructor for method 'path'	WITHOUT_CLASSIFICATION	0.9999755507257704	WITHOUT_CLASSIFICATION	2.4449274229675683E-5	IMPLEMENTATION
// ----- Ruby Class Methods ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.999990401032072	WITHOUT_CLASSIFICATION	9.598967927973044E-6	IMPLEMENTATION
// // CONSTANT TABLE METHODS - pass to delegate //	WITHOUT_CLASSIFICATION	0.9999451213970211	WITHOUT_CLASSIFICATION	5.487860297877658E-5	IMPLEMENTATION
// We get canonical path to try and flatten the path out. // a dir '/subdir/..' should return as '/' // cnutter: Do we want to flatten path out?	WITHOUT_CLASSIFICATION	0.9998004688948295	WITHOUT_CLASSIFICATION	1.995311051705549E-4	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999188071666546	WITHOUT_CLASSIFICATION	8.11928333453346E-5	IMPLEMENTATION
// ----- Ruby Instance Methods -------------------------------------------------	WITHOUT_CLASSIFICATION	0.999990565571982	WITHOUT_CLASSIFICATION	9.434428018119392E-6	IMPLEMENTATION
// Make sure any read()s after close fail.	WITHOUT_CLASSIFICATION	0.9999784134954788	WITHOUT_CLASSIFICATION	2.1586504521222556E-5	IMPLEMENTATION
// ----- Helper Methods --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999921137821294	WITHOUT_CLASSIFICATION	7.88621787058142E-6	IMPLEMENTATION
// try to use POSIX for this first	WITHOUT_CLASSIFICATION	0.999977329593871	WITHOUT_CLASSIFICATION	2.2670406129053657E-5	IMPLEMENTATION
// otherwise fall back on the old way	WITHOUT_CLASSIFICATION	0.9999508031191574	WITHOUT_CLASSIFICATION	4.9196880842641856E-5	IMPLEMENTATION
// Proc class	WITHOUT_CLASSIFICATION	0.9999375083801314	WITHOUT_CLASSIFICATION	6.249161986859491E-5	IMPLEMENTATION
// No passed in block, lets check next outer frame for one ('Proc.new')	WITHOUT_CLASSIFICATION	0.9999608255965544	WITHOUT_CLASSIFICATION	3.9174403445478056E-5	IMPLEMENTATION
// modify the block with a new backref/lastline-grabbing scope	WITHOUT_CLASSIFICATION	0.9999459837917322	WITHOUT_CLASSIFICATION	5.4016208267756644E-5	IMPLEMENTATION
// for future compatibility as constructors move toward not accepting metaclass?	WITHOUT_CLASSIFICATION	0.9999340857942484	WITHOUT_CLASSIFICATION	6.591420575164063E-5	IMPLEMENTATION
//        case RUBY_HYBRID: //            backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); //            break;	WITHOUT_CLASSIFICATION	0.9999924140573585	WITHOUT_CLASSIFICATION	7.58594264158698E-6	IMPLEMENTATION
// This looks wrong, but it's the way MRI does it.	WITHOUT_CLASSIFICATION	0.9999889952976122	WITHOUT_CLASSIFICATION	1.100470238771968E-5	IMPLEMENTATION
// rb_exc_new3	WITHOUT_CLASSIFICATION	0.9999053960346399	WITHOUT_CLASSIFICATION	9.460396536004441E-5	IMPLEMENTATION
// NOTE: The indicies here match exactly the signal values; do not reorder	WITHOUT_CLASSIFICATION	0.9999790094375094	WITHOUT_CLASSIFICATION	2.099056249062075E-5	IMPLEMENTATION
//registerThreadDumpSignalHandler(runtime);	WITHOUT_CLASSIFICATION	0.9999496588280741	WITHOUT_CLASSIFICATION	5.0341171925833404E-5	IMPLEMENTATION
// IOT is also 6	WITHOUT_CLASSIFICATION	0.999910671303108	WITHOUT_CLASSIFICATION	8.932869689200825E-5	IMPLEMENTATION
// CLD is also 20	WITHOUT_CLASSIFICATION	0.9999106444241102	WITHOUT_CLASSIFICATION	8.935557588978187E-5	IMPLEMENTATION
// RubySignal	WITHOUT_CLASSIFICATION	0.9999065463058389	WITHOUT_CLASSIFICATION	9.345369416113228E-5	IMPLEMENTATION
// ZStream actually *isn't* allocatable	WITHOUT_CLASSIFICATION	0.9999097970438171	WITHOUT_CLASSIFICATION	9.020295618281553E-5	IMPLEMENTATION
// MRI behavior, enforced by tests	WITHOUT_CLASSIFICATION	0.9999475494750449	WITHOUT_CLASSIFICATION	5.245052495504655E-5	IMPLEMENTATION
// it's safe since adler.update doesn't modify the array	WITHOUT_CLASSIFICATION	0.9999751669244884	WITHOUT_CLASSIFICATION	2.4833075511584467E-5	IMPLEMENTATION
// MRI behavior: in finished mode, we work as pass-through	WITHOUT_CLASSIFICATION	0.9999243355509245	WITHOUT_CLASSIFICATION	7.566444907553002E-5	IMPLEMENTATION
// SYNC_FLUSH	WITHOUT_CLASSIFICATION	0.9999053960346399	WITHOUT_CLASSIFICATION	9.460396536004441E-5	IMPLEMENTATION
// By default, NO_FLUSH	WITHOUT_CLASSIFICATION	0.999963185699521	WITHOUT_CLASSIFICATION	3.681430047892821E-5	IMPLEMENTATION
//io.finish();	WITHOUT_CLASSIFICATION	0.9998993389524075	WITHOUT_CLASSIFICATION	1.0066104759254865E-4	IMPLEMENTATION
// should invoke seek on realIo	WITHOUT_CLASSIFICATION	0.9999540529492315	WITHOUT_CLASSIFICATION	4.5947050768528195E-5	IMPLEMENTATION
// hmm...	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
// Called before any write to make sure the // header is always written before the first bytes	WITHOUT_CLASSIFICATION	0.9999946199235751	WITHOUT_CLASSIFICATION	5.380076424857284E-6	IMPLEMENTATION
// For JDK 1.4 we can use "cal.getTimeInMillis()"	WITHOUT_CLASSIFICATION	0.9999427088665301	WITHOUT_CLASSIFICATION	5.729113346985975E-5	IMPLEMENTATION
// We can just use dt, since it is immutable	WITHOUT_CLASSIFICATION	0.9999546821188466	WITHOUT_CLASSIFICATION	4.5317881153322E-5	IMPLEMENTATION
// float number of seconds	WITHOUT_CLASSIFICATION	0.9999878790352008	WITHOUT_CLASSIFICATION	1.2120964799230422E-5	IMPLEMENTATION
// modified to match how hash is calculated in 1.8.2	WITHOUT_CLASSIFICATION	0.9999655282657033	WITHOUT_CLASSIFICATION	3.44717342966022E-5	IMPLEMENTATION
// dump usec, not msec	WITHOUT_CLASSIFICATION	0.9999195571528677	WITHOUT_CLASSIFICATION	8.044284713222736E-5	IMPLEMENTATION
/* Time class methods */	WITHOUT_CLASSIFICATION	0.9999620775249429	WITHOUT_CLASSIFICATION	3.7922475057116516E-5	IMPLEMENTATION
// marsaling dumps usec, not msec	WITHOUT_CLASSIFICATION	0.9999321557818419	WITHOUT_CLASSIFICATION	6.784421815813341E-5	IMPLEMENTATION
// MRI accepts additional wday argument which appears to be ignored.	WITHOUT_CLASSIFICATION	0.999974868919791	WITHOUT_CLASSIFICATION	2.513108020897373E-5	IMPLEMENTATION
// set up with min values and then add to allow rolling over	WITHOUT_CLASSIFICATION	0.9999621114271016	WITHOUT_CLASSIFICATION	3.78885728984196E-5	IMPLEMENTATION
// the instant at which we will ask dtz what the difference between DST and // standard time is	WITHOUT_CLASSIFICATION	0.9999821885697532	WITHOUT_CLASSIFICATION	1.7811430246796526E-5	IMPLEMENTATION
// if we might be moving this time from !DST -> DST, the offset is assumed // to be the same as it was just before we last moved from DST -> !DST	WITHOUT_CLASSIFICATION	0.99998526405486	WITHOUT_CLASSIFICATION	1.4735945139876844E-5	IMPLEMENTATION
// Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.	WITHOUT_CLASSIFICATION	0.9999984621194673	WITHOUT_CLASSIFICATION	1.5378805326339457E-6	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999783125190216	WITHOUT_CLASSIFICATION	2.1687480978452146E-5	IMPLEMENTATION
/* If the value will fit in a Fixnum, return one of those. */	WITHOUT_CLASSIFICATION	0.9999882590570787	WITHOUT_CLASSIFICATION	1.1740942921437217E-5	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999980121892418	WITHOUT_CLASSIFICATION	1.987810758194028E-5	IMPLEMENTATION
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9999208984015695	WITHOUT_CLASSIFICATION	7.910159843051231E-5	IMPLEMENTATION
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9638500003048982	WITHOUT_CLASSIFICATION	0.03614999969510176	IMPLEMENTATION
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9638500003048982	WITHOUT_CLASSIFICATION	0.03614999969510176	IMPLEMENTATION
// no bignorm here needed	WITHOUT_CLASSIFICATION	0.9996674435674294	WITHOUT_CLASSIFICATION	3.325564325705259E-4	IMPLEMENTATION
// wow, the only time we can use the java protocol ;)	WITHOUT_CLASSIFICATION	0.9999603505526646	WITHOUT_CLASSIFICATION	3.964944733538358E-5	IMPLEMENTATION
// Pad with a 0	WITHOUT_CLASSIFICATION	0.9999172929912319	WITHOUT_CLASSIFICATION	8.270700876817353E-5	IMPLEMENTATION
// BigInteger required a sign byte in incoming array	WITHOUT_CLASSIFICATION	0.9999530393308609	WITHOUT_CLASSIFICATION	4.696066913905171E-5	IMPLEMENTATION
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9999950410569101	WITHOUT_CLASSIFICATION	4.958943089896739E-6	IMPLEMENTATION
// We do this b/c make_tmpname might be overridden	WITHOUT_CLASSIFICATION	0.9999482445399166	WITHOUT_CLASSIFICATION	5.175546008343295E-5	IMPLEMENTATION
// ???	WITHOUT_CLASSIFICATION	0.997025609870531	WITHOUT_CLASSIFICATION	0.0029743901294690543	IMPLEMENTATION
// PID	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999980121892418	WITHOUT_CLASSIFICATION	1.987810758194028E-5	IMPLEMENTATION
// elements and trailing nils	WITHOUT_CLASSIFICATION	0.9999726263035422	WITHOUT_CLASSIFICATION	2.737369645779083E-5	IMPLEMENTATION
// Dir::tmpdir	WITHOUT_CLASSIFICATION	0.9999055093784198	WITHOUT_CLASSIFICATION	9.449062158009958E-5	IMPLEMENTATION
// volatile to ensure that initial nil-fill is visible to other threads	WITHOUT_CLASSIFICATION	0.9998972570610242	WITHOUT_CLASSIFICATION	1.0274293897582467E-4	IMPLEMENTATION
/* Ruby arrays default to holding 16 elements, so we create an         * ArrayList of the same size if we're not told otherwise         */	WITHOUT_CLASSIFICATION	0.9999990737714627	WITHOUT_CLASSIFICATION	9.262285373540377E-7	IMPLEMENTATION
/* rb_ary_new2     * just allocates the internal array     */	WITHOUT_CLASSIFICATION	0.9999678758102598	WITHOUT_CLASSIFICATION	3.212418974028667E-5	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999835839139495	WITHOUT_CLASSIFICATION	1.6416086050554032E-5	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999835839139495	WITHOUT_CLASSIFICATION	1.6416086050554032E-5	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999835839139495	WITHOUT_CLASSIFICATION	1.6416086050554032E-5	IMPLEMENTATION
/* Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour     *      */	WITHOUT_CLASSIFICATION	0.9999681080670967	WITHOUT_CLASSIFICATION	3.1891932903317426E-5	IMPLEMENTATION
/* NEWOBJ and OBJSETUP equivalent     * fastest one, for shared arrays, optional objectspace     */	WITHOUT_CLASSIFICATION	0.9999660816026792	WITHOUT_CLASSIFICATION	3.391839732082808E-5	IMPLEMENTATION
// Create global constants and variables	WITHOUT_CLASSIFICATION	0.9999912478891192	WITHOUT_CLASSIFICATION	8.752110880698024E-6	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9996467834816601	WITHOUT_CLASSIFICATION	3.532165183397556E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9996467834816601	WITHOUT_CLASSIFICATION	3.532165183397556E-4	IMPLEMENTATION
// Windows does not support these functions, so we won't even try // This also matches Ruby behavior for JRUBY-2353.	WITHOUT_CLASSIFICATION	0.999969810980158	WITHOUT_CLASSIFICATION	3.018901984188281E-5	IMPLEMENTATION
// There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and // newer one (US/Pacific, America/Los_Angeles). This pattern is to detect // the legacy TZ format in order to convert it to the newer format // understood by Java API.	WITHOUT_CLASSIFICATION	0.9999955204665122	WITHOUT_CLASSIFICATION	4.479533487817538E-6	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9996467834816601	WITHOUT_CLASSIFICATION	3.532165183397556E-4	IMPLEMENTATION
// 1.9 seems to just do inspect for to_s now	WITHOUT_CLASSIFICATION	0.9999412199882101	WITHOUT_CLASSIFICATION	5.878001179000992E-5	IMPLEMENTATION
// possibly should not in object space	WITHOUT_CLASSIFICATION	0.9999677430070519	WITHOUT_CLASSIFICATION	3.225699294808237E-5	IMPLEMENTATION
// only fill if there actually will remain trailing storage	WITHOUT_CLASSIFICATION	0.9999770814844549	WITHOUT_CLASSIFICATION	2.2918515545086835E-5	IMPLEMENTATION
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999053960346399	WITHOUT_CLASSIFICATION	9.460396536004441E-5	IMPLEMENTATION
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999053960346399	WITHOUT_CLASSIFICATION	9.460396536004441E-5	IMPLEMENTATION
// from DUP_SETUP	WITHOUT_CLASSIFICATION	0.9999218901978307	WITHOUT_CLASSIFICATION	7.810980216932944E-5	IMPLEMENTATION
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.999987017909034	WITHOUT_CLASSIFICATION	1.2982090966041532E-5	IMPLEMENTATION
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999206649111038	WITHOUT_CLASSIFICATION	7.93350888961819E-5	IMPLEMENTATION
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999206649111038	WITHOUT_CLASSIFICATION	7.93350888961819E-5	IMPLEMENTATION
// Satisfy java.util.List interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999660875360663	WITHOUT_CLASSIFICATION	3.391246393363072E-5	IMPLEMENTATION
// pre-set for the sake of terminating recursive calls	WITHOUT_CLASSIFICATION	0.999985933298182	WITHOUT_CLASSIFICATION	1.4066701818067305E-5	IMPLEMENTATION
/* root fiber */	WITHOUT_CLASSIFICATION	0.9999074531464682	WITHOUT_CLASSIFICATION	9.254685353175246E-5	IMPLEMENTATION
// GMT+00:00 --> Etc/GMT, see "MRI behavior" // comment below.	WITHOUT_CLASSIFICATION	0.9999437887976318	WITHOUT_CLASSIFICATION	5.621120236832003E-5	IMPLEMENTATION
//  See http://www.gzip.org/zlib/rfc-gzip.html	WITHOUT_CLASSIFICATION	0.9999342443310848	WITHOUT_CLASSIFICATION	6.57556689152099E-5	IMPLEMENTATION
// extras flag	WITHOUT_CLASSIFICATION	0.9999237873530972	WITHOUT_CLASSIFICATION	7.621264690283861E-5	IMPLEMENTATION
// Zlib::NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999053960346399	WITHOUT_CLASSIFICATION	9.460396536004441E-5	IMPLEMENTATION
// ...nothing	WITHOUT_CLASSIFICATION	0.9999578308951012	WITHOUT_CLASSIFICATION	4.216910489886673E-5	IMPLEMENTATION
// utility method	WITHOUT_CLASSIFICATION	0.9999230527400135	WITHOUT_CLASSIFICATION	7.694725998652847E-5	IMPLEMENTATION
// Prepare LoadService and load path	WITHOUT_CLASSIFICATION	0.9999469932204205	WITHOUT_CLASSIFICATION	5.3006779579535095E-5	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999980121892418	WITHOUT_CLASSIFICATION	1.987810758194028E-5	IMPLEMENTATION
// flags // 4 bytes of modified time	WITHOUT_CLASSIFICATION	0.9999234907629572	WITHOUT_CLASSIFICATION	7.65092370428596E-5	IMPLEMENTATION
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999636136818262	WITHOUT_CLASSIFICATION	3.6386318173822345E-5	IMPLEMENTATION
// 1.8 "include?"	WITHOUT_CLASSIFICATION	0.9999055568989642	WITHOUT_CLASSIFICATION	9.444310103588784E-5	IMPLEMENTATION
// any BigInteger is bigger than Fixnum and we don't have FIXABLE	WITHOUT_CLASSIFICATION	0.9999624050365574	WITHOUT_CLASSIFICATION	3.759496344261048E-5	IMPLEMENTATION
// beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal	WITHOUT_CLASSIFICATION	0.9999521141786923	WITHOUT_CLASSIFICATION	4.7885821307608084E-5	IMPLEMENTATION
// MRI does it!	WITHOUT_CLASSIFICATION	0.9999083935130428	WITHOUT_CLASSIFICATION	9.160648695713805E-5	IMPLEMENTATION
// won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999267143807596	WITHOUT_CLASSIFICATION	7.32856192403224E-5	IMPLEMENTATION
// it won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999379134863202	WITHOUT_CLASSIFICATION	6.208651367982117E-5	IMPLEMENTATION
// RubyClassPathVariable	WITHOUT_CLASSIFICATION	0.9999227718520867	WITHOUT_CLASSIFICATION	7.722814791332453E-5	IMPLEMENTATION
// not to be confused with RubyObject's flags	WITHOUT_CLASSIFICATION	0.9998340481835433	WITHOUT_CLASSIFICATION	1.6595181645681634E-4	IMPLEMENTATION
// second argument is allowed, but ignored (MRI)	WITHOUT_CLASSIFICATION	0.9999943938930499	WITHOUT_CLASSIFICATION	5.606106950206668E-6	IMPLEMENTATION
// we are presumably running a precompiled class; load directly	WITHOUT_CLASSIFICATION	0.9999825037246298	WITHOUT_CLASSIFICATION	1.7496275370276244E-5	IMPLEMENTATION
// terminate; tryCompile will have printed out an error and we're done	WITHOUT_CLASSIFICATION	0.9999627141309795	WITHOUT_CLASSIFICATION	3.728586902049406E-5	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999800771726497	WITHOUT_CLASSIFICATION	1.9922827350395652E-5	IMPLEMENTATION
// do nothing, this iteration restarts	WITHOUT_CLASSIFICATION	0.9999907842056168	WITHOUT_CLASSIFICATION	9.215794383090238E-6	IMPLEMENTATION
// recheck condition	WITHOUT_CLASSIFICATION	0.9999252930915131	WITHOUT_CLASSIFICATION	7.470690848688171E-5	IMPLEMENTATION
// Get the main threadcontext (gets constructed for us)	WITHOUT_CLASSIFICATION	0.9999861399480245	WITHOUT_CLASSIFICATION	1.3860051975515044E-5	IMPLEMENTATION
// Construct key services	WITHOUT_CLASSIFICATION	0.9999600573059615	WITHOUT_CLASSIFICATION	3.994269403850049E-5	IMPLEMENTATION
// initialize the root of the class hierarchy completely	WITHOUT_CLASSIFICATION	0.9999964063189936	WITHOUT_CLASSIFICATION	3.5936810065333897E-6	IMPLEMENTATION
// Construct the top-level execution frame and scope for the main thread	WITHOUT_CLASSIFICATION	0.9999908513063703	WITHOUT_CLASSIFICATION	9.148693629673419E-6	IMPLEMENTATION
// Initialize all the core classes	WITHOUT_CLASSIFICATION	0.9999916538310684	WITHOUT_CLASSIFICATION	8.346168931720337E-6	IMPLEMENTATION
// Initialize the "dummy" class used as a marker	WITHOUT_CLASSIFICATION	0.999991003531572	WITHOUT_CLASSIFICATION	8.996468427970864E-6	IMPLEMENTATION
// Initialize Kernel and include into Object	WITHOUT_CLASSIFICATION	0.9999800075205703	WITHOUT_CLASSIFICATION	1.999247942970286E-5	IMPLEMENTATION
// Object is ready, create top self	WITHOUT_CLASSIFICATION	0.9999605192890039	WITHOUT_CLASSIFICATION	3.948071099613341E-5	IMPLEMENTATION
// Pre-create all the core classes potentially referenced during startup	WITHOUT_CLASSIFICATION	0.9999936655650417	WITHOUT_CLASSIFICATION	6.334434958424328E-6	IMPLEMENTATION
// Math depends on all numeric types	WITHOUT_CLASSIFICATION	0.9999458375662406	WITHOUT_CLASSIFICATION	5.416243375941711E-5	IMPLEMENTATION
// depends on IO, FileTest	WITHOUT_CLASSIFICATION	0.9999315982768225	WITHOUT_CLASSIFICATION	6.840172317755148E-5	IMPLEMENTATION
// initialize builtin libraries	WITHOUT_CLASSIFICATION	0.9999802638486373	WITHOUT_CLASSIFICATION	1.973615136273702E-5	IMPLEMENTATION
// Require in all libraries specified on command line	WITHOUT_CLASSIFICATION	0.9999864997899894	WITHOUT_CLASSIFICATION	1.3500210010441401E-5	IMPLEMENTATION
// Bootstrap the top of the hierarchy	WITHOUT_CLASSIFICATION	0.9999708549280665	WITHOUT_CLASSIFICATION	2.9145071933561748E-5	IMPLEMENTATION
// we try to get the classloader that loaded JRuby, falling back on System	WITHOUT_CLASSIFICATION	0.9999856466659478	WITHOUT_CLASSIFICATION	1.4353334052214828E-5	IMPLEMENTATION
// determine spacing	WITHOUT_CLASSIFICATION	0.9999390265119166	WITHOUT_CLASSIFICATION	6.097348808337481E-5	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999190068224347	WITHOUT_CLASSIFICATION	8.099317756523308E-5	IMPLEMENTATION
// For JSR 223 support: see http://scripting.java.net/	WITHOUT_CLASSIFICATION	0.9999035732704775	WITHOUT_CLASSIFICATION	9.642672952243514E-5	IMPLEMENTATION
// use this for JRuby-internal finalizers	WITHOUT_CLASSIFICATION	0.9999213551219331	WITHOUT_CLASSIFICATION	7.864487806688007E-5	IMPLEMENTATION
// this method is for finalizers registered via ObjectSpace	WITHOUT_CLASSIFICATION	0.9999122238875895	WITHOUT_CLASSIFICATION	8.777611241054174E-5	IMPLEMENTATION
// new factory methods ------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999895101208593	WITHOUT_CLASSIFICATION	1.0489879140639557E-5	IMPLEMENTATION
//        assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999832780510212	WITHOUT_CLASSIFICATION	1.6721948978770702E-5	IMPLEMENTATION
// Equivalent of Data_Wrap_Struct	WITHOUT_CLASSIFICATION	0.9999123481174873	WITHOUT_CLASSIFICATION	8.765188251270345E-5	IMPLEMENTATION
// default: don't retain	WITHOUT_CLASSIFICATION	0.999983347939788	WITHOUT_CLASSIFICATION	1.6652060211965506E-5	IMPLEMENTATION
// ChannelDescriptors opened by sysopen are cached to avoid collection	WITHOUT_CLASSIFICATION	0.9999729574519278	WITHOUT_CLASSIFICATION	2.7042548072196293E-5	IMPLEMENTATION
// Default objects	WITHOUT_CLASSIFICATION	0.9999816879001352	WITHOUT_CLASSIFICATION	1.8312099864808666E-5	IMPLEMENTATION
// record separator var, to speed up io ops that use it	WITHOUT_CLASSIFICATION	0.9999622134691208	WITHOUT_CLASSIFICATION	3.7786530879174355E-5	IMPLEMENTATION
// former java.lang.System concepts now internalized for MVM	WITHOUT_CLASSIFICATION	0.9999682137202381	WITHOUT_CLASSIFICATION	3.178627976177293E-5	IMPLEMENTATION
// Java support	WITHOUT_CLASSIFICATION	0.9998362613291176	WITHOUT_CLASSIFICATION	1.63738670882396E-4	IMPLEMENTATION
// Parser stats	WITHOUT_CLASSIFICATION	0.999925178291455	WITHOUT_CLASSIFICATION	7.48217085449988E-5	IMPLEMENTATION
// Compilation	WITHOUT_CLASSIFICATION	0.9999011384578516	WITHOUT_CLASSIFICATION	9.886154214854196E-5	IMPLEMENTATION
// can't read non-standard properties	WITHOUT_CLASSIFICATION	0.9999631203278028	WITHOUT_CLASSIFICATION	3.687967219720355E-5	IMPLEMENTATION
// can't create custom classloaders	WITHOUT_CLASSIFICATION	0.9999758784774674	WITHOUT_CLASSIFICATION	2.412152253268678E-5	IMPLEMENTATION
// mutex that controls modifications of user-defined finalizers	WITHOUT_CLASSIFICATION	0.9999642397930145	WITHOUT_CLASSIFICATION	3.576020698542233E-5	IMPLEMENTATION
// mutex that controls modifications of internal finalizers	WITHOUT_CLASSIFICATION	0.9999669365669323	WITHOUT_CLASSIFICATION	3.306343306770408E-5	IMPLEMENTATION
// A thread pool to use for executing this runtime's Ruby threads	WITHOUT_CLASSIFICATION	0.9999495456436337	WITHOUT_CLASSIFICATION	5.0454356366306576E-5	IMPLEMENTATION
// A global object lock for class hierarchy mutations	WITHOUT_CLASSIFICATION	0.999987989607676	WITHOUT_CLASSIFICATION	1.2010392323986142E-5	IMPLEMENTATION
// initial spaces // spaces before "at"	WITHOUT_CLASSIFICATION	0.9999669565634363	WITHOUT_CLASSIFICATION	3.304343656381917E-5	IMPLEMENTATION
// event name // filename // line numbers should be 1-based	WITHOUT_CLASSIFICATION	0.9999774362685443	WITHOUT_CLASSIFICATION	2.2563731455732864E-5	IMPLEMENTATION
// The method is intentionally not public, since it typically should // not be used outside of the core.	WITHOUT_CLASSIFICATION	0.999984101064899	WITHOUT_CLASSIFICATION	1.5898935100977922E-5	IMPLEMENTATION
// Note: this field and the following static initializer // must be located be in this order!	WITHOUT_CLASSIFICATION	0.99999518006543	WITHOUT_CLASSIFICATION	4.81993457003952E-6	IMPLEMENTATION
// Contains a list of all blocks (as Procs) that should be called when // the runtime environment exits.	WITHOUT_CLASSIFICATION	0.999983509720605	WITHOUT_CLASSIFICATION	1.6490279394999625E-5	IMPLEMENTATION
// quoted-printable	WITHOUT_CLASSIFICATION	0.999910829145109	WITHOUT_CLASSIFICATION	8.917085489100357E-5	IMPLEMENTATION
// default options	WITHOUT_CLASSIFICATION	0.9999865425200347	WITHOUT_CLASSIFICATION	1.3457479965348373E-5	IMPLEMENTATION
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999055405310282	WITHOUT_CLASSIFICATION	9.4459468971899E-5	IMPLEMENTATION
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999055405310282	WITHOUT_CLASSIFICATION	9.4459468971899E-5	IMPLEMENTATION
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999056734755001	WITHOUT_CLASSIFICATION	9.432652449983261E-5	IMPLEMENTATION
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999056734755001	WITHOUT_CLASSIFICATION	9.432652449983261E-5	IMPLEMENTATION
// EUC-JP	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
// EUC-JP	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
// UTF-8	WITHOUT_CLASSIFICATION	0.9966580913353869	WITHOUT_CLASSIFICATION	0.003341908664613168	IMPLEMENTATION
// UTF-8	WITHOUT_CLASSIFICATION	0.9966580913353869	WITHOUT_CLASSIFICATION	0.003341908664613168	IMPLEMENTATION
// long name option	WITHOUT_CLASSIFICATION	0.9999559667001203	WITHOUT_CLASSIFICATION	4.4033299879789705E-5	IMPLEMENTATION
// conversion	WITHOUT_CLASSIFICATION	0.9999505493741052	WITHOUT_CLASSIFICATION	4.9450625894801396E-5	IMPLEMENTATION
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999799721867279	WITHOUT_CLASSIFICATION	2.0027813272200286E-5	IMPLEMENTATION
// string doesn't share any resources	WITHOUT_CLASSIFICATION	0.9999849917006274	WITHOUT_CLASSIFICATION	1.500829937273737E-5	IMPLEMENTATION
// string has it's own ByteList, but it's pointing to a shared buffer (byte[])	WITHOUT_CLASSIFICATION	0.9999741427450797	WITHOUT_CLASSIFICATION	2.5857254920326825E-5	IMPLEMENTATION
// string doesn't have it's own ByteList (values)	WITHOUT_CLASSIFICATION	0.999977145354117	WITHOUT_CLASSIFICATION	2.2854645883012382E-5	IMPLEMENTATION
// ENC_CODERANGE_ASCIIONLY	WITHOUT_CLASSIFICATION	0.999915705626812	WITHOUT_CLASSIFICATION	8.429437318811082E-5	IMPLEMENTATION
// rb_enc_str_asciionly_p	WITHOUT_CLASSIFICATION	0.9999156743149097	WITHOUT_CLASSIFICATION	8.432568509039663E-5	IMPLEMENTATION
// rb_enc_str_coderange	WITHOUT_CLASSIFICATION	0.9999158932502987	WITHOUT_CLASSIFICATION	8.410674970138014E-5	IMPLEMENTATION
// rb_str_hash_cmp	WITHOUT_CLASSIFICATION	0.9999053960346399	WITHOUT_CLASSIFICATION	9.460396536004441E-5	IMPLEMENTATION
// Deprecated String construction routines	WITHOUT_CLASSIFICATION	0.9999616748967775	WITHOUT_CLASSIFICATION	3.832510322255795E-5	IMPLEMENTATION
// String construction routines by NOT byte[] buffer and NOT making the target String shared 	WITHOUT_CLASSIFICATION	0.9999895532887805	WITHOUT_CLASSIFICATION	1.0446711219580614E-5	IMPLEMENTATION
/* rb_str_subseq */	WITHOUT_CLASSIFICATION	0.9999056063259643	WITHOUT_CLASSIFICATION	9.439367403580599E-5	IMPLEMENTATION
// no need to assign encoding, same bytelist shared	WITHOUT_CLASSIFICATION	0.9999671859387359	WITHOUT_CLASSIFICATION	3.281406126403626E-5	IMPLEMENTATION
// if len == 0 then shared empty	WITHOUT_CLASSIFICATION	0.9999560988884951	WITHOUT_CLASSIFICATION	4.390111150484237E-5	IMPLEMENTATION
/* rb_str_cmp_m */	WITHOUT_CLASSIFICATION	0.9999053960346399	WITHOUT_CLASSIFICATION	9.460396536004441E-5	IMPLEMENTATION
// we limit to int because ByteBuffer can only allocate int sizes	WITHOUT_CLASSIFICATION	0.9999524951102401	WITHOUT_CLASSIFICATION	4.750488975991203E-5	IMPLEMENTATION
// // rb_str_buf_append	WITHOUT_CLASSIFICATION	0.9999302143096529	WITHOUT_CLASSIFICATION	6.978569034707747E-5	IMPLEMENTATION
// encoding doesn't have to be copied.	WITHOUT_CLASSIFICATION	0.9999822626973003	WITHOUT_CLASSIFICATION	1.7737302699649644E-5	IMPLEMENTATION
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.999912295679743	WITHOUT_CLASSIFICATION	8.770432025698178E-5	IMPLEMENTATION
// must not reallocate	WITHOUT_CLASSIFICATION	0.9999456078785336	WITHOUT_CLASSIFICATION	5.43921214663063E-5	IMPLEMENTATION
// Illegal combination	WITHOUT_CLASSIFICATION	0.9999255486940061	WITHOUT_CLASSIFICATION	7.445130599400124E-5	IMPLEMENTATION
// use 1.8 impl	WITHOUT_CLASSIFICATION	0.9999298057132372	WITHOUT_CLASSIFICATION	7.019428676283985E-5	IMPLEMENTATION
/* RubyString aka rb_string_value */	WITHOUT_CLASSIFICATION	0.9999490291755277	WITHOUT_CLASSIFICATION	5.0970824472166227E-5	IMPLEMENTATION
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999494006278157	WITHOUT_CLASSIFICATION	5.059937218427472E-5	IMPLEMENTATION
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999759515493657	WITHOUT_CLASSIFICATION	2.4048450634338944E-5	IMPLEMENTATION
/* len + margin */	WITHOUT_CLASSIFICATION	0.9999123923419699	WITHOUT_CLASSIFICATION	8.760765802997059E-5	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9999059812796572	WITHOUT_CLASSIFICATION	9.401872034284583E-5	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9999059812796572	WITHOUT_CLASSIFICATION	9.401872034284583E-5	IMPLEMENTATION
/* copy pre-match substr */	WITHOUT_CLASSIFICATION	0.999920088241583	WITHOUT_CLASSIFICATION	7.991175841699383E-5	IMPLEMENTATION
// string given	WITHOUT_CLASSIFICATION	0.9999490561383049	WITHOUT_CLASSIFICATION	5.094386169507848E-5	IMPLEMENTATION
// hash given	WITHOUT_CLASSIFICATION	0.9999089777151842	WITHOUT_CLASSIFICATION	9.102228481575595E-5	IMPLEMENTATION
// This represents left most digit in a set of incremented // values?  Therefore leftmost numeric must be '1' and not '0' // 999 -> 1000, not 999 -> 0000.  whereas chars should be // zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"	WITHOUT_CLASSIFICATION	0.9999939646102648	WITHOUT_CLASSIFICATION	6.035389735269196E-6	IMPLEMENTATION
/* substring longer than string */	WITHOUT_CLASSIFICATION	0.9999578143549566	WITHOUT_CLASSIFICATION	4.2185645043423396E-5	IMPLEMENTATION
/* rb_str_substr */	WITHOUT_CLASSIFICATION	0.9999056081398827	WITHOUT_CLASSIFICATION	9.439186011722835E-5	IMPLEMENTATION
// nothing	WITHOUT_CLASSIFICATION	0.9981050386350494	WITHOUT_CLASSIFICATION	0.0018949613649506243	IMPLEMENTATION
// nothing	WITHOUT_CLASSIFICATION	0.9981050386350494	WITHOUT_CLASSIFICATION	0.0018949613649506243	IMPLEMENTATION
/* rb_str_splice */	WITHOUT_CLASSIFICATION	0.9999054402283841	WITHOUT_CLASSIFICATION	9.455977161588393E-5	IMPLEMENTATION
// TODO: keep cr // TODO: rb_str_splice_0	WITHOUT_CLASSIFICATION	0.8596333724312605	WITHOUT_CLASSIFICATION	0.14036662756873952	IMPLEMENTATION
// keep cr ?	WITHOUT_CLASSIFICATION	0.999915474524657	WITHOUT_CLASSIFICATION	8.452547534302627E-5	IMPLEMENTATION
// keep cr ?	WITHOUT_CLASSIFICATION	0.999915474524657	WITHOUT_CLASSIFICATION	8.452547534302627E-5	IMPLEMENTATION
/* wrapped to \0...\0.  search next valid char. */	WITHOUT_CLASSIFICATION	0.9999538382479678	WITHOUT_CLASSIFICATION	4.6161752032121E-5	IMPLEMENTATION
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9999485558416534	WITHOUT_CLASSIFICATION	5.1444158346632644E-5	IMPLEMENTATION
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9999485558416534	WITHOUT_CLASSIFICATION	5.1444158346632644E-5	IMPLEMENTATION
// modified	WITHOUT_CLASSIFICATION	0.9999119767935128	WITHOUT_CLASSIFICATION	8.802320648720718E-5	IMPLEMENTATION
// modified	WITHOUT_CLASSIFICATION	0.9999119767935128	WITHOUT_CLASSIFICATION	8.802320648720718E-5	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
// QTRUE	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
/* retrieve last replacer */	WITHOUT_CLASSIFICATION	0.9999456171048134	WITHOUT_CLASSIFICATION	5.43828951866004E-5	IMPLEMENTATION
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999867883024313	WITHOUT_CLASSIFICATION	1.3211697568765005E-5	IMPLEMENTATION
// long size * bits in byte	WITHOUT_CLASSIFICATION	0.9999542588995516	WITHOUT_CLASSIFICATION	4.5741100448446166E-5	IMPLEMENTATION
// from encoding, special-casing ASCII* to ASCII	WITHOUT_CLASSIFICATION	0.9999614092156582	WITHOUT_CLASSIFICATION	3.859078434181335E-5	IMPLEMENTATION
// to encoding, same special-casing	WITHOUT_CLASSIFICATION	0.9999594311591199	WITHOUT_CLASSIFICATION	4.056884088015636E-5	IMPLEMENTATION
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999876325465443	WITHOUT_CLASSIFICATION	1.2367453455708167E-5	IMPLEMENTATION
// decode from "from" and encode to "to"	WITHOUT_CLASSIFICATION	0.9999540389199777	WITHOUT_CLASSIFICATION	4.596108002230797E-5	IMPLEMENTATION
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999876325465443	WITHOUT_CLASSIFICATION	1.2367453455708167E-5	IMPLEMENTATION
//Kernel is the only Module that doesn't need an implementor	WITHOUT_CLASSIFICATION	0.9992061379800955	WITHOUT_CLASSIFICATION	7.938620199045993E-4	IMPLEMENTATION
// no binding given, use (eval)	WITHOUT_CLASSIFICATION	0.9999468296746878	WITHOUT_CLASSIFICATION	5.317032531216022E-5	IMPLEMENTATION
// interned, OK for "fast" methods	WITHOUT_CLASSIFICATION	0.9999577585457445	WITHOUT_CLASSIFICATION	4.224145425549741E-5	IMPLEMENTATION
// File to be loaded by autoload has already been or is being loaded.	WITHOUT_CLASSIFICATION	0.99997010631331	WITHOUT_CLASSIFICATION	2.98936866900747E-5	IMPLEMENTATION
// rb_cstr_to_dbl case	WITHOUT_CLASSIFICATION	0.9999160140481073	WITHOUT_CLASSIFICATION	8.398595189278376E-5	IMPLEMENTATION
// We break if we know this sleep was explicitly woken up/interrupted	WITHOUT_CLASSIFICATION	0.9999431128832681	WITHOUT_CLASSIFICATION	5.688711673188814E-5	IMPLEMENTATION
// exec process, create IO with process	WITHOUT_CLASSIFICATION	0.9999707619207695	WITHOUT_CLASSIFICATION	2.9238079230520033E-5	IMPLEMENTATION
// Zero sleeps forever	WITHOUT_CLASSIFICATION	0.9999345094863968	WITHOUT_CLASSIFICATION	6.549051360322771E-5	IMPLEMENTATION
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.999954284543184	WITHOUT_CLASSIFICATION	4.57154568159555E-5	IMPLEMENTATION
// Explicit zero in MRI returns immediately	WITHOUT_CLASSIFICATION	0.9999675850286397	WITHOUT_CLASSIFICATION	3.2414971360323995E-5	IMPLEMENTATION
// Spurious wakeup-loop	WITHOUT_CLASSIFICATION	0.9999165424599538	WITHOUT_CLASSIFICATION	8.345754004620706E-5	IMPLEMENTATION
// adjusts paths started with '/' or '\\', on windows.	WITHOUT_CLASSIFICATION	0.9999580399867989	WITHOUT_CLASSIFICATION	4.196001320107188E-5	IMPLEMENTATION
// file not given	WITHOUT_CLASSIFICATION	0.9999283526902717	WITHOUT_CLASSIFICATION	7.164730972831762E-5	IMPLEMENTATION
// string to eval	WITHOUT_CLASSIFICATION	0.9999566695304398	WITHOUT_CLASSIFICATION	4.333046956016773E-5	IMPLEMENTATION
// binding given, use binding's file	WITHOUT_CLASSIFICATION	0.9999310145287963	WITHOUT_CLASSIFICATION	6.898547120367722E-5	IMPLEMENTATION
// ?g  | boolean | True if file1 has the \CF{setgid} bit	WITHOUT_CLASSIFICATION	0.9999622165477291	WITHOUT_CLASSIFICATION	3.778345227086787E-5	IMPLEMENTATION
// bomb out, it's not a binding or a proc	WITHOUT_CLASSIFICATION	0.9999438655851346	WITHOUT_CLASSIFICATION	5.613441486553616E-5	IMPLEMENTATION
// Ordering of array traversal not important, just intuitive	WITHOUT_CLASSIFICATION	0.9998564116218132	WITHOUT_CLASSIFICATION	1.4358837818675385E-4	IMPLEMENTATION
//Catch active, throw for catch to handle	WITHOUT_CLASSIFICATION	0.9999035941727042	WITHOUT_CLASSIFICATION	9.640582729573556E-5	IMPLEMENTATION
// No catch active for this throw	WITHOUT_CLASSIFICATION	0.9999554624027982	WITHOUT_CLASSIFICATION	4.453759720184322E-5	IMPLEMENTATION
// without full tracing, many events will not fire	WITHOUT_CLASSIFICATION	0.9999589687111814	WITHOUT_CLASSIFICATION	4.1031288818566225E-5	IMPLEMENTATION
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999971729500367	WITHOUT_CLASSIFICATION	2.8270499632812864E-6	IMPLEMENTATION
// MRI behavior: use first byte of string value if len > 0	WITHOUT_CLASSIFICATION	0.9999838226966935	WITHOUT_CLASSIFICATION	1.6177303306447565E-5	IMPLEMENTATION
// MRI behavior: now check arg count	WITHOUT_CLASSIFICATION	0.9999488661172147	WITHOUT_CLASSIFICATION	5.1133882785278193E-5	IMPLEMENTATION
// ?A  | Time    | Last access time for file1	WITHOUT_CLASSIFICATION	0.9999414721702173	WITHOUT_CLASSIFICATION	5.852782978271309E-5	IMPLEMENTATION
// ?b  | boolean | True if file1 is a block device	WITHOUT_CLASSIFICATION	0.9999565390765086	WITHOUT_CLASSIFICATION	4.3460923491406075E-5	IMPLEMENTATION
// ?c  | boolean | True if file1 is a character device	WITHOUT_CLASSIFICATION	0.9999795863117478	WITHOUT_CLASSIFICATION	2.0413688252266938E-5	IMPLEMENTATION
// ?C  | Time    | Last change time for file1	WITHOUT_CLASSIFICATION	0.9999520118939997	WITHOUT_CLASSIFICATION	4.79881060003151E-5	IMPLEMENTATION
// ?d  | boolean | True if file1 exists and is a directory	WITHOUT_CLASSIFICATION	0.9999872300370177	WITHOUT_CLASSIFICATION	1.2769962982240323E-5	IMPLEMENTATION
// ?e  | boolean | True if file1 exists	WITHOUT_CLASSIFICATION	0.9999577482753973	WITHOUT_CLASSIFICATION	4.225172460279586E-5	IMPLEMENTATION
// ?f  | boolean | True if file1 exists and is a regular file	WITHOUT_CLASSIFICATION	0.9999710152663882	WITHOUT_CLASSIFICATION	2.8984733611780162E-5	IMPLEMENTATION
// ?G  | boolean | True if file1 exists and has a group ownership equal to the caller's group	WITHOUT_CLASSIFICATION	0.9999878180808652	WITHOUT_CLASSIFICATION	1.2181919134740582E-5	IMPLEMENTATION
// ?k  | boolean | True if file1 exists and has the sticky bit set	WITHOUT_CLASSIFICATION	0.999975797482433	WITHOUT_CLASSIFICATION	2.420251756694513E-5	IMPLEMENTATION
// ?M  | Time    | Last modification time for file1	WITHOUT_CLASSIFICATION	0.9999601340408113	WITHOUT_CLASSIFICATION	3.986595918868176E-5	IMPLEMENTATION
// ?o  | boolean | True if file1 exists and is owned by the caller's effective uid	WITHOUT_CLASSIFICATION	0.9999882594225799	WITHOUT_CLASSIFICATION	1.1740577420189477E-5	IMPLEMENTATION
// ?O  | boolean | True if file1 exists and is owned by the caller's real uid 	WITHOUT_CLASSIFICATION	0.9999883082022002	WITHOUT_CLASSIFICATION	1.1691797799831535E-5	IMPLEMENTATION
// ?p  | boolean | True if file1 exists and is a fifo	WITHOUT_CLASSIFICATION	0.9999697619720824	WITHOUT_CLASSIFICATION	3.0238027917609357E-5	IMPLEMENTATION
// ?r  | boolean | True if file1 is readable by the effective uid/gid of the caller	WITHOUT_CLASSIFICATION	0.9999851195896275	WITHOUT_CLASSIFICATION	1.4880410372449833E-5	IMPLEMENTATION
// ?s  | int/nil | If file1 has nonzero size, return the size, otherwise nil	WITHOUT_CLASSIFICATION	0.9999472363642415	WITHOUT_CLASSIFICATION	5.2763635758465976E-5	IMPLEMENTATION
// ?S  | boolean | True if file1 exists and is a socket	WITHOUT_CLASSIFICATION	0.9999705273557621	WITHOUT_CLASSIFICATION	2.9472644237973605E-5	IMPLEMENTATION
// ?u  | boolean | True if file1 has the setuid bit set	WITHOUT_CLASSIFICATION	0.9999683629702671	WITHOUT_CLASSIFICATION	3.1637029732853334E-5	IMPLEMENTATION
// ?x  | boolean | True if file1 exists and is executable by the effective uid/gid	WITHOUT_CLASSIFICATION	0.9999825759735278	WITHOUT_CLASSIFICATION	1.742402647220492E-5	IMPLEMENTATION
// ?X  | boolean | True if file1 exists and is executable by the real uid/gid	WITHOUT_CLASSIFICATION	0.9999844482990946	WITHOUT_CLASSIFICATION	1.5551700905416193E-5	IMPLEMENTATION
// ?z  | boolean | True if file1 exists and has a zero length	WITHOUT_CLASSIFICATION	0.9999738862320393	WITHOUT_CLASSIFICATION	2.61137679606776E-5	IMPLEMENTATION
// ?=  | boolean | True if the modification times of file1 and file2 are equal	WITHOUT_CLASSIFICATION	0.9999898303206638	WITHOUT_CLASSIFICATION	1.01696793362818E-5	IMPLEMENTATION
// ?<  | boolean | True if the modification time of file1 is prior to that of file2	WITHOUT_CLASSIFICATION	0.9999898042517561	WITHOUT_CLASSIFICATION	1.0195748243889479E-5	IMPLEMENTATION
// ?>  | boolean | True if the modification time of file1 is after that of file2	WITHOUT_CLASSIFICATION	0.9999909804312817	WITHOUT_CLASSIFICATION	9.019568718327551E-6	IMPLEMENTATION
// ?-  | boolean | True if file1 and file2 are identical	WITHOUT_CLASSIFICATION	0.9999623033846515	WITHOUT_CLASSIFICATION	3.769661534847236E-5	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999566254391059	WITHOUT_CLASSIFICATION	4.337456089406928E-5	IMPLEMENTATION
// Error info is per-thread	WITHOUT_CLASSIFICATION	0.9999745352196587	WITHOUT_CLASSIFICATION	2.546478034125941E-5	IMPLEMENTATION
// init errorInfo to nil	WITHOUT_CLASSIFICATION	0.9999394601270346	WITHOUT_CLASSIFICATION	6.053987296554373E-5	IMPLEMENTATION
// if we're already aborting, we can receive no further mail	WITHOUT_CLASSIFICATION	0.9999730363490419	WITHOUT_CLASSIFICATION	2.696365095817072E-5	IMPLEMENTATION
// If this thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.999952364173729	WITHOUT_CLASSIFICATION	4.7635826271014466E-5	IMPLEMENTATION
// new interrupt, to hopefully wake it out of any blocking IO	WITHOUT_CLASSIFICATION	0.9999524666388885	WITHOUT_CLASSIFICATION	4.753336111156996E-5	IMPLEMENTATION
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999907042921398	WITHOUT_CLASSIFICATION	9.295707860227714E-6	IMPLEMENTATION
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999907042921398	WITHOUT_CLASSIFICATION	9.295707860227714E-6	IMPLEMENTATION
// JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999738607896445	WITHOUT_CLASSIFICATION	2.6139210355534158E-5	IMPLEMENTATION
// JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.999978647001979	WITHOUT_CLASSIFICATION	2.13529980209776E-5	IMPLEMENTATION
// for Thread::start, which does not call the subclass's initialize	WITHOUT_CLASSIFICATION	0.999994793190408	WITHOUT_CLASSIFICATION	5.206809592078637E-6	IMPLEMENTATION
// JRUBY-3568, inherit threadgroup or use default	WITHOUT_CLASSIFICATION	0.9999773745879075	WITHOUT_CLASSIFICATION	2.262541209247182E-5	IMPLEMENTATION
// MRI behavior: value given in seconds; converted to Float; less // than or equal to zero returns immediately; returns nil	WITHOUT_CLASSIFICATION	0.9999922156514486	WITHOUT_CLASSIFICATION	7.784348551514362E-6	IMPLEMENTATION
// If the target thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999839706522238	WITHOUT_CLASSIFICATION	1.6029347776316946E-5	IMPLEMENTATION
// We need this loop in order to be able to "unblock" the // join call without actually calling interrupt.	WITHOUT_CLASSIFICATION	0.9999554237487336	WITHOUT_CLASSIFICATION	4.457625126638145E-5	IMPLEMENTATION
// attempt to decriticalize all if we're the critical thread	WITHOUT_CLASSIFICATION	0.9999761952361305	WITHOUT_CLASSIFICATION	2.3804763869569687E-5	IMPLEMENTATION
// not valid for "dead" state	WITHOUT_CLASSIFICATION	0.9996977328238367	WITHOUT_CLASSIFICATION	3.0226717616324393E-4	IMPLEMENTATION
// If the killee thread is the same as the killer thread, just die	WITHOUT_CLASSIFICATION	0.9999823623950723	WITHOUT_CLASSIFICATION	1.763760492769716E-5	IMPLEMENTATION
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999941087882372	WITHOUT_CLASSIFICATION	5.89121176274936E-6	IMPLEMENTATION
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999941087882372	WITHOUT_CLASSIFICATION	5.89121176274936E-6	IMPLEMENTATION
// ignore; I don't like doing it, but it seems like we // really just need to make all channels non-blocking by // default and use select when implementing blocking ops, // so if this remains set non-blocking, perhaps it's not // such a big deal...	WITHOUT_CLASSIFICATION	0.9999898972069874	WITHOUT_CLASSIFICATION	1.0102793012708146E-5	IMPLEMENTATION
// can't select, just have to do a blocking call	WITHOUT_CLASSIFICATION	0.9999731524580291	WITHOUT_CLASSIFICATION	2.684754197098558E-5	IMPLEMENTATION
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.99996413578903	WITHOUT_CLASSIFICATION	3.586421097002112E-5	IMPLEMENTATION
// Create Constants class	WITHOUT_CLASSIFICATION	0.9999847646961989	WITHOUT_CLASSIFICATION	1.5235303801152804E-5	IMPLEMENTATION
// Create constants for open flags	WITHOUT_CLASSIFICATION	0.9999863746691082	WITHOUT_CLASSIFICATION	1.3625330891866195E-5	IMPLEMENTATION
// Strip off the O_ prefix, so they become File::RDONLY, and so on	WITHOUT_CLASSIFICATION	0.9999651612764423	WITHOUT_CLASSIFICATION	3.48387235577745E-5	IMPLEMENTATION
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999838149415253	WITHOUT_CLASSIFICATION	1.6185058474638727E-5	IMPLEMENTATION
// File::Constants module is included in IO.	WITHOUT_CLASSIFICATION	0.9999590725487995	WITHOUT_CLASSIFICATION	4.092745120051515E-5	IMPLEMENTATION
// Make sure any existing lock is released before we try and close the file	WITHOUT_CLASSIFICATION	0.9999921112999218	WITHOUT_CLASSIFICATION	7.88870007827009E-6	IMPLEMENTATION
// null channel always succeeds for all locking operations	WITHOUT_CLASSIFICATION	0.9999777965879744	WITHOUT_CLASSIFICATION	2.2203412025705293E-5	IMPLEMENTATION
// Paths which end in "/" or "\\" must be stripped off.	WITHOUT_CLASSIFICATION	0.9999552189037486	WITHOUT_CLASSIFICATION	4.478109625147198E-5	IMPLEMENTATION
// Special case for handling ACCMODE, since constantine will generate // an invalid value if it is not defined by the platform.	WITHOUT_CLASSIFICATION	0.9999936499309087	WITHOUT_CLASSIFICATION	6.350069091265615E-6	IMPLEMENTATION
// Return false here	WITHOUT_CLASSIFICATION	0.9999365563831897	WITHOUT_CLASSIFICATION	6.344361681032658E-5	IMPLEMENTATION
// Return false here	WITHOUT_CLASSIFICATION	0.9999365563831897	WITHOUT_CLASSIFICATION	6.344361681032658E-5	IMPLEMENTATION
// We're not actually a real file, so we can't flock	WITHOUT_CLASSIFICATION	0.9999167261743269	WITHOUT_CLASSIFICATION	8.327382567304473E-5	IMPLEMENTATION
// Should we do anything?	WITHOUT_CLASSIFICATION	0.9998014351590979	WITHOUT_CLASSIFICATION	1.9856484090207457E-4	IMPLEMENTATION
/* File class methods */	WITHOUT_CLASSIFICATION	0.9999620869905014	WITHOUT_CLASSIFICATION	3.791300949871838E-5	IMPLEMENTATION
// MRI-compatible basename handling for windows drive letter paths	WITHOUT_CLASSIFICATION	0.9999472954426819	WITHOUT_CLASSIFICATION	5.270455731811409E-5	IMPLEMENTATION
// strip c: away from relative-pathed name	WITHOUT_CLASSIFICATION	0.9999634416363883	WITHOUT_CLASSIFICATION	3.655836361171611E-5	IMPLEMENTATION
// C:\ is returned unchanged	WITHOUT_CLASSIFICATION	0.9999636822984327	WITHOUT_CLASSIFICATION	3.631770156736035E-5	IMPLEMENTATION
// -1 no match; 0 it is dot file not extension	WITHOUT_CLASSIFICATION	0.9999552827145239	WITHOUT_CLASSIFICATION	4.4717285475983814E-5	IMPLEMENTATION
// trim trailing slashes	WITHOUT_CLASSIFICATION	0.9999349782709414	WITHOUT_CLASSIFICATION	6.502172905867565E-5	IMPLEMENTATION
// Dot is not at beginning and not at end of filename. 	WITHOUT_CLASSIFICATION	0.9999319982144	WITHOUT_CLASSIFICATION	6.800178559996875E-5	IMPLEMENTATION
// Handle ~user paths 	WITHOUT_CLASSIFICATION	0.9999365450956588	WITHOUT_CLASSIFICATION	6.345490434123426E-5	IMPLEMENTATION
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.99996413578903	WITHOUT_CLASSIFICATION	3.586421097002112E-5	IMPLEMENTATION
// Include additional path separator // (so that dirname of "C:\file.txt" is  "C:\", not "C:")	WITHOUT_CLASSIFICATION	0.9999475954610008	WITHOUT_CLASSIFICATION	5.240453899911788E-5	IMPLEMENTATION
// FNFException can be thrown in both cases, when the file // is not found, or when permission is denied.	WITHOUT_CLASSIFICATION	0.9999928550253333	WITHOUT_CLASSIFICATION	7.144974666785429E-6	IMPLEMENTATION
// No directory delimeter.  Rest of string is username	WITHOUT_CLASSIFICATION	0.9999848037347104	WITHOUT_CLASSIFICATION	1.519626528962395E-5	IMPLEMENTATION
// If there's a second argument, it's the path to which the first  // argument is relative.	WITHOUT_CLASSIFICATION	0.9999955431988572	WITHOUT_CLASSIFICATION	4.45680114282389E-6	IMPLEMENTATION
// Handle ~user paths.	WITHOUT_CLASSIFICATION	0.9999360821873984	WITHOUT_CLASSIFICATION	6.39178126015508E-5	IMPLEMENTATION
// If there's no second argument, simply use the working directory  // of the runtime.	WITHOUT_CLASSIFICATION	0.9999969892464856	WITHOUT_CLASSIFICATION	3.0107535143871205E-6	IMPLEMENTATION
// Find out which string to check.	WITHOUT_CLASSIFICATION	0.9999740403094037	WITHOUT_CLASSIFICATION	2.595969059623281E-5	IMPLEMENTATION
// Single '~' as whole path to expand	WITHOUT_CLASSIFICATION	0.999918586288608	WITHOUT_CLASSIFICATION	8.141371139205167E-5	IMPLEMENTATION
// Count number of extra slashes in the beginning of the string.	WITHOUT_CLASSIFICATION	0.9999949412550745	WITHOUT_CLASSIFICATION	5.058744925618193E-6	IMPLEMENTATION
// '~user/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999054234149024	WITHOUT_CLASSIFICATION	9.457658509762262E-5	IMPLEMENTATION
// '~/...' as path to expand	WITHOUT_CLASSIFICATION	0.9998966603588317	WITHOUT_CLASSIFICATION	1.0333964116826668E-4	IMPLEMENTATION
// Prepare a string with the same number of redundant slashes so that  // we easily can prepend it to the result.	WITHOUT_CLASSIFICATION	0.9999951973706661	WITHOUT_CLASSIFICATION	4.802629333858022E-6	IMPLEMENTATION
// If there are N slashes, then we want N-1.	WITHOUT_CLASSIFICATION	0.999986819368526	WITHOUT_CLASSIFICATION	1.3180631474095528E-5	IMPLEMENTATION
// no canonical path yet or length is zero, and we have a / followed by a dot...	WITHOUT_CLASSIFICATION	0.9999752656415892	WITHOUT_CLASSIFICATION	2.4734358410718822E-5	IMPLEMENTATION
// we don't have another slash after this, so replace /. with /	WITHOUT_CLASSIFICATION	0.9999794577515586	WITHOUT_CLASSIFICATION	2.0542248441453734E-5	IMPLEMENTATION
// we do have another slash; omit both / and . (JRUBY-1606)	WITHOUT_CLASSIFICATION	0.9999172136296745	WITHOUT_CLASSIFICATION	8.278637032554223E-5	IMPLEMENTATION
// do nothing, we should not delete the drive letter	WITHOUT_CLASSIFICATION	0.9999917341602562	WITHOUT_CLASSIFICATION	8.26583974378437E-6	IMPLEMENTATION
/* rb: check_modifiable */	WITHOUT_CLASSIFICATION	0.9999264578703377	WITHOUT_CLASSIFICATION	7.354212966230092E-5	IMPLEMENTATION
/* rb: readable */	WITHOUT_CLASSIFICATION	0.9999087986180328	WITHOUT_CLASSIFICATION	9.120138196712882E-5	IMPLEMENTATION
// rename is successful	WITHOUT_CLASSIFICATION	0.9999671959845172	WITHOUT_CLASSIFICATION	3.280401548273969E-5	IMPLEMENTATION
// rename via Java API call wasn't successful, let's try some tricks, similar to MRI 	WITHOUT_CLASSIFICATION	0.9999744512340635	WITHOUT_CLASSIFICATION	2.5548765936488984E-5	IMPLEMENTATION
// try to rename one more time	WITHOUT_CLASSIFICATION	0.9999605444755342	WITHOUT_CLASSIFICATION	3.945552446591173E-5	IMPLEMENTATION
// Can we produce IOError which bypasses a close?	WITHOUT_CLASSIFICATION	0.9999352004867259	WITHOUT_CLASSIFICATION	6.479951327399565E-5	IMPLEMENTATION
// Fast path since JNA stat is about 10x slower than this	WITHOUT_CLASSIFICATION	0.9999418948898056	WITHOUT_CLASSIFICATION	5.8105110194351636E-5	IMPLEMENTATION
// RubyContinuation	WITHOUT_CLASSIFICATION	0.9999112544875189	WITHOUT_CLASSIFICATION	8.874551248104322E-5	IMPLEMENTATION
/*     *  Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq)     *  it doesn't initialize ifNone field     */	WITHOUT_CLASSIFICATION	0.9999981945975421	WITHOUT_CLASSIFICATION	1.805402457926046E-6	IMPLEMENTATION
// 16 ?	WITHOUT_CLASSIFICATION	0.9965951993621645	WITHOUT_CLASSIFICATION	0.003404800637835676	IMPLEMENTATION
// generation count for O(1) clears	WITHOUT_CLASSIFICATION	0.9999832857941372	WITHOUT_CLASSIFICATION	1.67142058627831E-5	IMPLEMENTATION
// size + 1;	WITHOUT_CLASSIFICATION	0.9999229044123307	WITHOUT_CLASSIFICATION	7.70955876693401E-5	IMPLEMENTATION
// suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen	WITHOUT_CLASSIFICATION	0.9999456488784829	WITHOUT_CLASSIFICATION	5.4351121516948226E-5	IMPLEMENTATION
// ------------------------------	WITHOUT_CLASSIFICATION	0.9999903031489683	WITHOUT_CLASSIFICATION	9.696851031677665E-6	IMPLEMENTATION
// ------------------------------	WITHOUT_CLASSIFICATION	0.9999903031489683	WITHOUT_CLASSIFICATION	9.696851031677665E-6	IMPLEMENTATION
// put implementation	WITHOUT_CLASSIFICATION	0.9968150622601654	WITHOUT_CLASSIFICATION	0.003184937739834701	IMPLEMENTATION
// get implementation	WITHOUT_CLASSIFICATION	0.9983695991822478	WITHOUT_CLASSIFICATION	0.0016304008177522946	IMPLEMENTATION
// specialized for value	WITHOUT_CLASSIFICATION	0.9999759454389824	WITHOUT_CLASSIFICATION	2.4054561017715377E-5	IMPLEMENTATION
// delete implementation	WITHOUT_CLASSIFICATION	0.9988421867775868	WITHOUT_CLASSIFICATION	0.0011578132224130734	IMPLEMENTATION
// n.b. we need to recompute the hash in case the key object was modified	WITHOUT_CLASSIFICATION	0.999972586268366	WITHOUT_CLASSIFICATION	2.7413731633918085E-5	IMPLEMENTATION
/* ============================     * End of hash internals     * ============================     */	WITHOUT_CLASSIFICATION	0.9999798374786892	WITHOUT_CLASSIFICATION	2.0162521310841254E-5	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================     */	WITHOUT_CLASSIFICATION	0.9999769026747855	WITHOUT_CLASSIFICATION	2.3097325214456462E-5	IMPLEMENTATION
// update the hash value	WITHOUT_CLASSIFICATION	0.9999878230729806	WITHOUT_CLASSIFICATION	1.2176927019359383E-5	IMPLEMENTATION
// other hash does not contain key	WITHOUT_CLASSIFICATION	0.9999593614215355	WITHOUT_CLASSIFICATION	4.063857846447545E-5	IMPLEMENTATION
// rb_yield_values(2,...) equivalent	WITHOUT_CLASSIFICATION	0.9998712868833801	WITHOUT_CLASSIFICATION	1.2871311661984648E-4	IMPLEMENTATION
// Satisfy java.util.Set interface (for Java integration)	WITHOUT_CLASSIFICATION	0.999971333890376	WITHOUT_CLASSIFICATION	2.866610962394376E-5	IMPLEMENTATION
// remain where we are	WITHOUT_CLASSIFICATION	0.9999452739539747	WITHOUT_CLASSIFICATION	5.472604602527908E-5	IMPLEMENTATION
// We use file test since it is faster than a stat; also euid == uid in Java always	WITHOUT_CLASSIFICATION	0.9999620600007973	WITHOUT_CLASSIFICATION	3.7939999202527776E-5	IMPLEMENTATION
// default: don't retain	WITHOUT_CLASSIFICATION	0.999983347939788	WITHOUT_CLASSIFICATION	1.6652060211965506E-5	IMPLEMENTATION
// once hasNext has been called, we commit to next() returning // the entry it found, even if it were subsequently deleted	WITHOUT_CLASSIFICATION	0.9999830540895615	WITHOUT_CLASSIFICATION	1.6945910438570716E-5	IMPLEMENTATION
// Not exposed by filetest, but so similiar in nature that it is stored here	WITHOUT_CLASSIFICATION	0.9999375913638405	WITHOUT_CLASSIFICATION	6.240863615946533E-5	IMPLEMENTATION
// We do both writable and writable_real through the same method because // in our java process effective and real userid will always be the same.	WITHOUT_CLASSIFICATION	0.9999915877999366	WITHOUT_CLASSIFICATION	8.412200063374562E-6	IMPLEMENTATION
// first try as directory	WITHOUT_CLASSIFICATION	0.9999800212776268	WITHOUT_CLASSIFICATION	1.997872237327922E-5	IMPLEMENTATION
// next as regular file	WITHOUT_CLASSIFICATION	0.999924973968023	WITHOUT_CLASSIFICATION	7.502603197698742E-5	IMPLEMENTATION
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9999781494299893	WITHOUT_CLASSIFICATION	2.1850570010612447E-5	IMPLEMENTATION
// NIO-based	WITHOUT_CLASSIFICATION	0.9999144035163152	WITHOUT_CLASSIFICATION	8.5596483684746E-5	IMPLEMENTATION
// NIO-based	WITHOUT_CLASSIFICATION	0.9999144035163152	WITHOUT_CLASSIFICATION	8.5596483684746E-5	IMPLEMENTATION
// Stream-based	WITHOUT_CLASSIFICATION	0.9999240817476628	WITHOUT_CLASSIFICATION	7.591825233718912E-5	IMPLEMENTATION
// special constructor that accepts stream, not channel	WITHOUT_CLASSIFICATION	0.9999672574748769	WITHOUT_CLASSIFICATION	3.274252512314986E-5	IMPLEMENTATION
/*     * We use FILE versus IO to match T_FILE in MRI.     */	WITHOUT_CLASSIFICATION	0.9999809546188521	WITHOUT_CLASSIFICATION	1.9045381147889707E-5	IMPLEMENTATION
// Constants for seek	WITHOUT_CLASSIFICATION	0.9999559265671557	WITHOUT_CLASSIFICATION	4.407343284427209E-5	IMPLEMENTATION
// confirm we're not reopening self's channel	WITHOUT_CLASSIFICATION	0.9999523280410966	WITHOUT_CLASSIFICATION	4.767195890337516E-5	IMPLEMENTATION
// check if we're a stdio IO, and ensure we're not badly mutilated	WITHOUT_CLASSIFICATION	0.9999863243136594	WITHOUT_CLASSIFICATION	1.3675686340519749E-5	IMPLEMENTATION
// dup2 new fd into self to preserve fileno and references to it	WITHOUT_CLASSIFICATION	0.9999714876262925	WITHOUT_CLASSIFICATION	2.8512373707484013E-5	IMPLEMENTATION
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999706637948942	WITHOUT_CLASSIFICATION	2.9336205105808956E-5	IMPLEMENTATION
// re-register the descriptor	WITHOUT_CLASSIFICATION	0.9999753554277251	WITHOUT_CLASSIFICATION	2.4644572274874946E-5	IMPLEMENTATION
// since we're not actually duping the incoming channel into our handler, we need to // copy the original sync behavior from the other handler	WITHOUT_CLASSIFICATION	0.9999806623894306	WITHOUT_CLASSIFICATION	1.9337610569306263E-5	IMPLEMENTATION
// re-register	WITHOUT_CLASSIFICATION	0.9999267384760356	WITHOUT_CLASSIFICATION	7.326152396434927E-5	IMPLEMENTATION
// A potentially previously close IO is being 'reopened'.	WITHOUT_CLASSIFICATION	0.9999594578898685	WITHOUT_CLASSIFICATION	4.0542110131509997E-5	IMPLEMENTATION
/*     * Ensure that separator is valid otherwise give it the default paragraph separator.     */	WITHOUT_CLASSIFICATION	0.999997764734114	WITHOUT_CLASSIFICATION	2.235265886093529E-6	IMPLEMENTATION
// loop until we see the nth separator char	WITHOUT_CLASSIFICATION	0.9999687599898881	WITHOUT_CLASSIFICATION	3.124001011198975E-5	IMPLEMENTATION
// if we hit EOF or reached limit then we're done	WITHOUT_CLASSIFICATION	0.9999570688092965	WITHOUT_CLASSIFICATION	4.293119070361242E-5	IMPLEMENTATION
// this is for a range check, near as I can tell	WITHOUT_CLASSIFICATION	0.999972197673122	WITHOUT_CLASSIFICATION	2.7802326878074947E-5	IMPLEMENTATION
// IO class methods.	WITHOUT_CLASSIFICATION	0.9999516069781795	WITHOUT_CLASSIFICATION	4.8393021820522496E-5	IMPLEMENTATION
// use original modes	WITHOUT_CLASSIFICATION	0.9999611111363065	WITHOUT_CLASSIFICATION	3.8888863693410856E-5	IMPLEMENTATION
// See if we already have this descriptor open. // If so then we can mostly share the handler (keep open // file, but possibly change the mode).	WITHOUT_CLASSIFICATION	0.9999883966283093	WITHOUT_CLASSIFICATION	1.1603371690687417E-5	IMPLEMENTATION
// redundant, done above as well	WITHOUT_CLASSIFICATION	0.9999198382139751	WITHOUT_CLASSIFICATION	8.016178602483087E-5	IMPLEMENTATION
// MRI behavior: swallow StandardErorrs	WITHOUT_CLASSIFICATION	0.999963410193844	WITHOUT_CLASSIFICATION	3.658980615601719E-5	IMPLEMENTATION
// -1 == don't set permissions	WITHOUT_CLASSIFICATION	0.9999454617229132	WITHOUT_CLASSIFICATION	5.45382770868023E-5	IMPLEMENTATION
// isRetained=true	WITHOUT_CLASSIFICATION	0.9999068330635782	WITHOUT_CLASSIFICATION	9.316693642175028E-5	IMPLEMENTATION
// This appears to be some windows-only mode.  On a java platform this is a no-op	WITHOUT_CLASSIFICATION	0.9999785376826676	WITHOUT_CLASSIFICATION	2.1462317332304455E-5	IMPLEMENTATION
// if not sync, we switch to write buffered mode	WITHOUT_CLASSIFICATION	0.9999733367243078	WITHOUT_CLASSIFICATION	2.6663275692278863E-5	IMPLEMENTATION
/*     * Throw bad file descriptor is we can not read on supplied descriptor.     */	WITHOUT_CLASSIFICATION	0.9999840515281735	WITHOUT_CLASSIFICATION	1.5948471826600346E-5	IMPLEMENTATION
//Everything written	WITHOUT_CLASSIFICATION	0.9999346475384276	WITHOUT_CLASSIFICATION	6.535246157240244E-5	IMPLEMENTATION
//            return len - n;	WITHOUT_CLASSIFICATION	0.9999893369785939	WITHOUT_CLASSIFICATION	1.0663021406002043E-5	IMPLEMENTATION
// Claims conversion is done via 'to_s' in docs.	WITHOUT_CLASSIFICATION	0.9999610174321282	WITHOUT_CLASSIFICATION	3.898256787190244E-5	IMPLEMENTATION
// Of course this isn't particularly useful.	WITHOUT_CLASSIFICATION	0.9998818789821643	WITHOUT_CLASSIFICATION	1.1812101783575847E-4	IMPLEMENTATION
// Must be back on first line on rewind.	WITHOUT_CLASSIFICATION	0.9999665329436709	WITHOUT_CLASSIFICATION	3.3467056329131006E-5	IMPLEMENTATION
// Register the new descriptor	WITHOUT_CLASSIFICATION	0.9999791945341409	WITHOUT_CLASSIFICATION	2.0805465859117434E-5	IMPLEMENTATION
// cleanup, raising errors if any	WITHOUT_CLASSIFICATION	0.9999406498476486	WITHOUT_CLASSIFICATION	5.935015235131185E-5	IMPLEMENTATION
// hmmmm	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
// I believe Ruby bails out with a "bug" if closing fails	WITHOUT_CLASSIFICATION	0.9999340808766349	WITHOUT_CLASSIFICATION	6.591912336502902E-5	IMPLEMENTATION
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec. // And why the hell does webrick pass this in as a first argument!!!!!	WITHOUT_CLASSIFICATION	0.9999960028681778	WITHOUT_CLASSIFICATION	3.997131822198824E-6	IMPLEMENTATION
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec.	WITHOUT_CLASSIFICATION	0.9999956838650742	WITHOUT_CLASSIFICATION	4.316134925810853E-6	IMPLEMENTATION
// Length to read	WITHOUT_CLASSIFICATION	0.9999416834365458	WITHOUT_CLASSIFICATION	5.831656345427297E-5	IMPLEMENTATION
// String/Buffer to read it into	WITHOUT_CLASSIFICATION	0.999964130094494	WITHOUT_CLASSIFICATION	3.5869905506020214E-5	IMPLEMENTATION
// cryptic for the uninitiated...	WITHOUT_CLASSIFICATION	0.9999524949355589	WITHOUT_CLASSIFICATION	4.7505064441170214E-5	IMPLEMENTATION
// select until read is ready	WITHOUT_CLASSIFICATION	0.999971017205095	WITHOUT_CLASSIFICATION	2.8982794904992047E-5	IMPLEMENTATION
//        ByteList buffer = null;	WITHOUT_CLASSIFICATION	0.9999749060746802	WITHOUT_CLASSIFICATION	2.509392531978486E-5	IMPLEMENTATION
//            buffer = str.getByteList();	WITHOUT_CLASSIFICATION	0.9999730896586607	WITHOUT_CLASSIFICATION	2.691034133924391E-5	IMPLEMENTATION
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999285384695409	WITHOUT_CLASSIFICATION	7.146153045906965E-5	IMPLEMENTATION
/* rb: writable */	WITHOUT_CLASSIFICATION	0.9999155896132486	WITHOUT_CLASSIFICATION	8.441038675150173E-5	IMPLEMENTATION
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999285384695409	WITHOUT_CLASSIFICATION	7.146153045906965E-5	IMPLEMENTATION
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999801583431456	WITHOUT_CLASSIFICATION	1.98416568543781E-5	IMPLEMENTATION
// TODO: read into buffer using all the fread logic //        int read = openFile.getMainStream().fread(buffer);	WITHOUT_CLASSIFICATION	0.9709548677416555	WITHOUT_CLASSIFICATION	0.02904513225834447	IMPLEMENTATION
// truncate buffer string to zero, if provided	WITHOUT_CLASSIFICATION	0.999973549852012	WITHOUT_CLASSIFICATION	2.64501479879396E-5	IMPLEMENTATION
// TODO: READ_CHECK from MRI	WITHOUT_CLASSIFICATION	0.7233970167736474	WITHOUT_CLASSIFICATION	0.2766029832263526	IMPLEMENTATION
/* class methods for IO */	WITHOUT_CLASSIFICATION	0.9999607860290566	WITHOUT_CLASSIFICATION	3.9213970943413945E-5	IMPLEMENTATION
// save blocking state	WITHOUT_CLASSIFICATION	0.9999502182722994	WITHOUT_CLASSIFICATION	4.9781727700659154E-5	IMPLEMENTATION
// write	WITHOUT_CLASSIFICATION	0.9971110673605567	WITHOUT_CLASSIFICATION	0.002888932639443434	IMPLEMENTATION
// Java's select doesn't do anything about this, so we leave it be.	WITHOUT_CLASSIFICATION	0.9999867175693298	WITHOUT_CLASSIFICATION	1.3282430670208572E-5	IMPLEMENTATION
// make all sockets blocking as configured again // close unregisters all channels, so we can safely reset blocking modes	WITHOUT_CLASSIFICATION	0.999976868426307	WITHOUT_CLASSIFICATION	2.3131573693107166E-5	IMPLEMENTATION
// FIXME: process options	WITHOUT_CLASSIFICATION	0.9997714535994199	WITHOUT_CLASSIFICATION	2.2854640058011657E-4	IMPLEMENTATION
// Enebo: annotation processing forced me to do pangea method here...	WITHOUT_CLASSIFICATION	0.9999546989970685	WITHOUT_CLASSIFICATION	4.530100293151277E-5	IMPLEMENTATION
// NIO based pipe	WITHOUT_CLASSIFICATION	0.9999105994519658	WITHOUT_CLASSIFICATION	8.940054803427557E-5	IMPLEMENTATION
// not using remove(Object) here to avoid the equals() call	WITHOUT_CLASSIFICATION	0.9998000338056698	WITHOUT_CLASSIFICATION	1.9996619433005513E-4	IMPLEMENTATION
// raise will also wake the thread from selection	WITHOUT_CLASSIFICATION	0.9999804205400051	WITHOUT_CLASSIFICATION	1.9579459994925936E-5	IMPLEMENTATION
/* may need to handle ENC_CODERANGE_BROKEN */	WITHOUT_CLASSIFICATION	0.9998375371389494	WITHOUT_CLASSIFICATION	1.624628610504871E-4	IMPLEMENTATION
// TODO: rb_usascii_str_new2	WITHOUT_CLASSIFICATION	0.894117702211396	WITHOUT_CLASSIFICATION	0.10588229778860399	IMPLEMENTATION
// If we know what method was being called, strip everything // before the call. This hides the JRuby and reflection internals.	WITHOUT_CLASSIFICATION	0.9999861962418988	WITHOUT_CLASSIFICATION	1.3803758101296362E-5	IMPLEMENTATION
// The class of this object	WITHOUT_CLASSIFICATION	0.9999859314763769	WITHOUT_CLASSIFICATION	1.406852362306027E-5	IMPLEMENTATION
// zeroed by jvm	WITHOUT_CLASSIFICATION	0.999912026226903	WITHOUT_CLASSIFICATION	8.797377309702174E-5	IMPLEMENTATION
//objectClass.defineAnnotatedMethods(BasicObjectMethods.class);	WITHOUT_CLASSIFICATION	0.9999464268788896	WITHOUT_CLASSIFICATION	5.357312111042739E-5	IMPLEMENTATION
// JRUBY-4113: callers should not call setTaint on immediate objects	WITHOUT_CLASSIFICATION	0.9999672649471553	WITHOUT_CLASSIFICATION	3.2735052844713154E-5	IMPLEMENTATION
// rb_class_boot	WITHOUT_CLASSIFICATION	0.9999054657446216	WITHOUT_CLASSIFICATION	9.45342553784101E-5	IMPLEMENTATION
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999156743149097	WITHOUT_CLASSIFICATION	8.432568509039663E-5	IMPLEMENTATION
// 1.9 rb_check_to_integer	WITHOUT_CLASSIFICATION	0.9999170680999838	WITHOUT_CLASSIFICATION	8.293190001613292E-5	IMPLEMENTATION
// for interface impls	WITHOUT_CLASSIFICATION	0.9999842529796721	WITHOUT_CLASSIFICATION	1.57470203280041E-5	IMPLEMENTATION
// We're cloning ourselves, so we know the result should be a RubyObject	WITHOUT_CLASSIFICATION	0.9999578003931695	WITHOUT_CLASSIFICATION	4.2199606830516054E-5	IMPLEMENTATION
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999829565347153	WITHOUT_CLASSIFICATION	1.704346528474803E-5	IMPLEMENTATION
// can't use -v and stdin	WITHOUT_CLASSIFICATION	0.9999535258238464	WITHOUT_CLASSIFICATION	4.647417615349231E-5	IMPLEMENTATION
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.999953332998396	WITHOUT_CLASSIFICATION	4.666700160413075E-5	IMPLEMENTATION
// Equivalent of Data_Get_Struct // This will first check that the object in question is actually a T_DATA equivalent.	WITHOUT_CLASSIFICATION	0.9999878683026916	WITHOUT_CLASSIFICATION	1.2131697308346062E-5	IMPLEMENTATION
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999342204880451	WITHOUT_CLASSIFICATION	6.577951195491736E-5	IMPLEMENTATION
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999348266858641	WITHOUT_CLASSIFICATION	6.517331413600139E-5	IMPLEMENTATION
// // INSTANCE VARIABLE API METHODS //	WITHOUT_CLASSIFICATION	0.9999346551849994	WITHOUT_CLASSIFICATION	6.534481500061923E-5	IMPLEMENTATION
// Struct methods	WITHOUT_CLASSIFICATION	0.9999361562159732	WITHOUT_CLASSIFICATION	6.384378402674716E-5	IMPLEMENTATION
//runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);	WITHOUT_CLASSIFICATION	0.9999519794363657	WITHOUT_CLASSIFICATION	4.8020563634276165E-5	IMPLEMENTATION
// define access methods.	WITHOUT_CLASSIFICATION	0.999957860757707	WITHOUT_CLASSIFICATION	4.213924229300417E-5	IMPLEMENTATION
// if we are storing a name as well, index is one too high for values	WITHOUT_CLASSIFICATION	0.9999797051788508	WITHOUT_CLASSIFICATION	2.029482114915354E-5	IMPLEMENTATION
// Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999854868342881	WITHOUT_CLASSIFICATION	1.4513165711802036E-5	IMPLEMENTATION
// For binding purposes on the newly created struct types	WITHOUT_CLASSIFICATION	0.9999744891722231	WITHOUT_CLASSIFICATION	2.5510827776839063E-5	IMPLEMENTATION
// OBJ_INFECT        	WITHOUT_CLASSIFICATION	0.9999331048446508	WITHOUT_CLASSIFICATION	6.689515534922043E-5	IMPLEMENTATION
// These call* assume ThreadContext = receiver.getRuntime().getCurrentContext()	WITHOUT_CLASSIFICATION	0.999962525732775	WITHOUT_CLASSIFICATION	3.747426722496612E-5	IMPLEMENTATION
// Execute iterateMethod again.	WITHOUT_CLASSIFICATION	0.9999554320928811	WITHOUT_CLASSIFICATION	4.456790711891373E-5	IMPLEMENTATION
/*     * @param nv number of times to cycle or -1 to cycle indefinitely     */	WITHOUT_CLASSIFICATION	0.9999891811695341	WITHOUT_CLASSIFICATION	1.0818830465908922E-5	IMPLEMENTATION
// Atomic ?	WITHOUT_CLASSIFICATION	0.9999053960346399	WITHOUT_CLASSIFICATION	9.460396536004441E-5	IMPLEMENTATION
// Atomic ?	WITHOUT_CLASSIFICATION	0.9999053960346399	WITHOUT_CLASSIFICATION	9.460396536004441E-5	IMPLEMENTATION
// MUST NOT be used across threads	WITHOUT_CLASSIFICATION	0.9999348863104043	WITHOUT_CLASSIFICATION	6.511368959566541E-5	IMPLEMENTATION
// superClass may be null.	WITHOUT_CLASSIFICATION	0.9999522635261076	WITHOUT_CLASSIFICATION	4.773647389249155E-5	IMPLEMENTATION
// Containing class...The parent of Object is null. Object should always be last in chain.	WITHOUT_CLASSIFICATION	0.9999719455648445	WITHOUT_CLASSIFICATION	2.8054435155611034E-5	IMPLEMENTATION
// ClassId is the name of the class/module sans where it is located. // If it is null, then it an anonymous class.	WITHOUT_CLASSIFICATION	0.9999946702382967	WITHOUT_CLASSIFICATION	5.3297617032753745E-6	IMPLEMENTATION
// ClassProviders return Java class/module (in #defineOrGetClassUnder and // #defineOrGetModuleUnder) when class/module is opened using colon syntax. 	WITHOUT_CLASSIFICATION	0.9999857314622727	WITHOUT_CLASSIFICATION	1.4268537727238965E-5	IMPLEMENTATION
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999871086512687	WITHOUT_CLASSIFICATION	1.2891348731317316E-5	IMPLEMENTATION
// Make sure the module we include does not already exist	WITHOUT_CLASSIFICATION	0.9999938519870344	WITHOUT_CLASSIFICATION	6.148012965685284E-6	IMPLEMENTATION
// MRI checks all types first:	WITHOUT_CLASSIFICATION	0.9999335840786459	WITHOUT_CLASSIFICATION	6.641592135424926E-5	IMPLEMENTATION
// we need full traces, use default (slow) populator	WITHOUT_CLASSIFICATION	0.9999801359226717	WITHOUT_CLASSIFICATION	1.9864077328422506E-5	IMPLEMENTATION
// module/singleton methods are all defined public	WITHOUT_CLASSIFICATION	0.999967329643156	WITHOUT_CLASSIFICATION	3.267035684405125E-5	IMPLEMENTATION
// See if module is in chain...Cannot match against itself so start at superClass.	WITHOUT_CLASSIFICATION	0.999973454904586	WITHOUT_CLASSIFICATION	2.6545095414000842E-5	IMPLEMENTATION
// We can safely reference methods here instead of doing getMethods() since if we // are adding we are not using a IncludedModuleWrapper.	WITHOUT_CLASSIFICATION	0.9999898174680221	WITHOUT_CLASSIFICATION	1.0182531978029502E-5	IMPLEMENTATION
// we grab serial number first; the worst that will happen is we cache a later // update with an earlier serial number, which would just flush anyway	WITHOUT_CLASSIFICATION	0.9999918965754714	WITHOUT_CLASSIFICATION	8.103424528550097E-6	IMPLEMENTATION
// update all hierarchies into which this module has been included	WITHOUT_CLASSIFICATION	0.9999763073569908	WITHOUT_CLASSIFICATION	2.369264300910221E-5	IMPLEMENTATION
// This method is intended only for defining new classes in Ruby code, // so it uses the allocator of the specified superclass or default to // the Object allocator. It should NOT be used to define classes that require a native allocator.	WITHOUT_CLASSIFICATION	0.9999986416695594	WITHOUT_CLASSIFICATION	1.3583304406067452E-6	IMPLEMENTATION
// need to skip IncludedModuleWrappers	WITHOUT_CLASSIFICATION	0.999935053017892	WITHOUT_CLASSIFICATION	6.494698210800833E-5	IMPLEMENTATION
// superClazz = null;	WITHOUT_CLASSIFICATION	0.9999389440612645	WITHOUT_CLASSIFICATION	6.105593873551276E-5	IMPLEMENTATION
// reopen a java class	WITHOUT_CLASSIFICATION	0.9999475108673332	WITHOUT_CLASSIFICATION	5.248913266673937E-5	IMPLEMENTATION
// This method is intended only for defining new modules in Ruby code	WITHOUT_CLASSIFICATION	0.9999409936580506	WITHOUT_CLASSIFICATION	5.9006341949348E-5	IMPLEMENTATION
// reopen a java module	WITHOUT_CLASSIFICATION	0.99992471238115	WITHOUT_CLASSIFICATION	7.528761885002187E-5	IMPLEMENTATION
//FIXME warning	WITHOUT_CLASSIFICATION	0.999913609170473	WITHOUT_CLASSIFICATION	8.639082952702794E-5	IMPLEMENTATION
// FIXME warning	WITHOUT_CLASSIFICATION	0.9998669986426059	WITHOUT_CLASSIFICATION	1.3300135739423665E-4	IMPLEMENTATION
// a normal block passed to define_method changes to do arity checking; make it a lambda	WITHOUT_CLASSIFICATION	0.9999494364460458	WITHOUT_CLASSIFICATION	5.056355395415992E-5	IMPLEMENTATION
// for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope	WITHOUT_CLASSIFICATION	0.9999756066632675	WITHOUT_CLASSIFICATION	2.4393336732588256E-5	IMPLEMENTATION
// just using required is broken...but no more broken than before zsuper refactoring	WITHOUT_CLASSIFICATION	0.9999696428524603	WITHOUT_CLASSIFICATION	3.03571475397372E-5	IMPLEMENTATION
// class and module bodies default to public, so make the block's visibility public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999938964710877	WITHOUT_CLASSIFICATION	6.103528912224537E-6	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.999998896775503	WITHOUT_CLASSIFICATION	1.1032244969089695E-6	IMPLEMENTATION
// MRI error message says Class, even though Module is ok 	WITHOUT_CLASSIFICATION	0.9999697591400007	WITHOUT_CLASSIFICATION	3.0240859999180053E-5	IMPLEMENTATION
// scan class hierarchy for module	WITHOUT_CLASSIFICATION	0.9999680124631982	WITHOUT_CLASSIFICATION	3.198753680170442E-5	IMPLEMENTATION
/* Module class methods */	WITHOUT_CLASSIFICATION	0.9999605235403618	WITHOUT_CLASSIFICATION	3.9476459638285725E-5	IMPLEMENTATION
// Note: we change current frames visibility here because the methods which call // this method are all "fast" (e.g. they do not created their own frame).	WITHOUT_CLASSIFICATION	0.9999910720438542	WITHOUT_CLASSIFICATION	8.927956145828067E-6	IMPLEMENTATION
// next in hierarchy is an included version of the module we're attempting, // so we skip including it	WITHOUT_CLASSIFICATION	0.9999931257644472	WITHOUT_CLASSIFICATION	6.874235552815499E-6	IMPLEMENTATION
// if we haven't encountered a real superclass, use the found module as the new inclusion point	WITHOUT_CLASSIFICATION	0.9999904852268295	WITHOUT_CLASSIFICATION	9.514773170500748E-6	IMPLEMENTATION
// build a list of all modules to consider for inclusion	WITHOUT_CLASSIFICATION	0.9999522415360989	WITHOUT_CLASSIFICATION	4.775846390107519E-5	IMPLEMENTATION
// if the insertion point is a class, update subclass lists	WITHOUT_CLASSIFICATION	0.9999953353012946	WITHOUT_CLASSIFICATION	4.664698705394629E-6	IMPLEMENTATION
// if there's a non-null superclass, we're including into a normal class hierarchy; // update subclass relationships to avoid stale parent/child relationships	WITHOUT_CLASSIFICATION	0.9999983743491494	WITHOUT_CLASSIFICATION	1.6256508506174482E-6	IMPLEMENTATION
// ////////////////// CLASS VARIABLE RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999959101708568	WITHOUT_CLASSIFICATION	4.089829143276245E-6	IMPLEMENTATION
// ////////////////// CONSTANT RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999958800612196	WITHOUT_CLASSIFICATION	4.119938780449386E-6	IMPLEMENTATION
// Note: includes part of fix for JRUBY-1339	WITHOUT_CLASSIFICATION	0.9999319641494689	WITHOUT_CLASSIFICATION	6.803585053107556E-5	IMPLEMENTATION
// ////////////////// CLASS VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999959102351715	WITHOUT_CLASSIFICATION	4.089764828466762E-6	IMPLEMENTATION
// Wrong Parameter ?	WITHOUT_CLASSIFICATION	0.9999409338178663	WITHOUT_CLASSIFICATION	5.906618213373353E-5	IMPLEMENTATION
// not actually called anywhere (all known uses call the fast version)	WITHOUT_CLASSIFICATION	0.999818274222723	WITHOUT_CLASSIFICATION	1.8172577727693066E-4	IMPLEMENTATION
// Not that is loaded loop around to resolve it next pass	WITHOUT_CLASSIFICATION	0.9999124675638971	WITHOUT_CLASSIFICATION	8.753243610288072E-5	IMPLEMENTATION
// if adding a module under a constant name, set that module's basename to the constant name	WITHOUT_CLASSIFICATION	0.9999766367278242	WITHOUT_CLASSIFICATION	2.3363272175900077E-5	IMPLEMENTATION
// Fix for JRUBY-1339 - search hierarchy for constant	WITHOUT_CLASSIFICATION	0.9999578950181833	WITHOUT_CLASSIFICATION	4.2104981816774076E-5	IMPLEMENTATION
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.999996244903639	WITHOUT_CLASSIFICATION	3.7550963610451376E-6	IMPLEMENTATION
// removes and returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999946079267524	WITHOUT_CLASSIFICATION	5.392073247515024E-6	IMPLEMENTATION
// we can't rename a file while it's open in windows	WITHOUT_CLASSIFICATION	0.9999685856062476	WITHOUT_CLASSIFICATION	3.141439375246909E-5	IMPLEMENTATION
//reopen	WITHOUT_CLASSIFICATION	0.9966075866988848	WITHOUT_CLASSIFICATION	0.003392413301115106	IMPLEMENTATION
// ARGF methods	WITHOUT_CLASSIFICATION	0.9999267067201066	WITHOUT_CLASSIFICATION	7.3293279893289E-5	IMPLEMENTATION
//         data.currentFile.callMethod(context, "lineno=", line);	WITHOUT_CLASSIFICATION	0.9999755335542303	WITHOUT_CLASSIFICATION	2.4466445769700072E-5	IMPLEMENTATION
// one optional, one required args	WITHOUT_CLASSIFICATION	0.9999603839825392	WITHOUT_CLASSIFICATION	3.961601746069155E-5	IMPLEMENTATION
// one optional and no required args	WITHOUT_CLASSIFICATION	0.9999643490235142	WITHOUT_CLASSIFICATION	3.5650976485824335E-5	IMPLEMENTATION
// try to get errno value out of the class	WITHOUT_CLASSIFICATION	0.9999945651377046	WITHOUT_CLASSIFICATION	5.4348622953998525E-6	IMPLEMENTATION
// we got a valid errno value	WITHOUT_CLASSIFICATION	0.9999502566678754	WITHOUT_CLASSIFICATION	4.9743332124581866E-5	IMPLEMENTATION
// Ensure we're not running on GCJ, since it's not supported and leads to weird errors	WITHOUT_CLASSIFICATION	0.9999781885611999	WITHOUT_CLASSIFICATION	2.181143880018383E-5	IMPLEMENTATION
// print out as a nice Ruby backtrace	WITHOUT_CLASSIFICATION	0.9999394819864111	WITHOUT_CLASSIFICATION	6.0518013588936175E-5	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999527072245055	WITHOUT_CLASSIFICATION	4.729277549445446E-5	IMPLEMENTATION
// set thread context JRuby classloader here, for the main thread	WITHOUT_CLASSIFICATION	0.9999808776973748	WITHOUT_CLASSIFICATION	1.912230262520962E-5	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999489966723485	WITHOUT_CLASSIFICATION	5.100332765161868E-5	IMPLEMENTATION
// no script to run, return success below	WITHOUT_CLASSIFICATION	0.9999796106149701	WITHOUT_CLASSIFICATION	2.0389385029869377E-5	IMPLEMENTATION
// Skip /usr/bin/env if it's first	WITHOUT_CLASSIFICATION	0.9999459003645748	WITHOUT_CLASSIFICATION	5.409963542514775E-5	IMPLEMENTATION
// Skip any assignments if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999520938595278	WITHOUT_CLASSIFICATION	4.790614047210945E-5	IMPLEMENTATION
// Skip any commandline args if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999644425414294	WITHOUT_CLASSIFICATION	3.5557458570685356E-5	IMPLEMENTATION
// ignore error	WITHOUT_CLASSIFICATION	0.9999944371734526	WITHOUT_CLASSIFICATION	5.5628265473299526E-6	IMPLEMENTATION
// ////////////////// COMMON CONSTANT / CVAR METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.999995877315009	WITHOUT_CLASSIFICATION	4.122684991009416E-6	IMPLEMENTATION
// ////////////////// INTERNAL MODULE VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999958473959768	WITHOUT_CLASSIFICATION	4.152604023122239E-6	IMPLEMENTATION
// ////////////////// LOW-LEVEL CONSTANT INTERFACE //////////////// // // fetch/store/list constants for this module //	WITHOUT_CLASSIFICATION	0.9999989108430072	WITHOUT_CLASSIFICATION	1.0891569928141388E-6	IMPLEMENTATION
// odd	WITHOUT_CLASSIFICATION	0.9966023193261451	WITHOUT_CLASSIFICATION	0.003397680673854862	IMPLEMENTATION
// JRubyClient	WITHOUT_CLASSIFICATION	0.9999131505875584	WITHOUT_CLASSIFICATION	8.684941244171855E-5	IMPLEMENTATION
/*     * x = mantissa * 2 ** exponent     *     * Where mantissa is in the range of [.5, 1)     *     */	WITHOUT_CLASSIFICATION	0.9999833991552409	WITHOUT_CLASSIFICATION	1.66008447591211E-5	IMPLEMENTATION
// Make mantissa same sign so we only have one code path.	WITHOUT_CLASSIFICATION	0.9999649369979476	WITHOUT_CLASSIFICATION	3.506300205238483E-5	IMPLEMENTATION
// Increase value to hit lower range.	WITHOUT_CLASSIFICATION	0.999972388292293	WITHOUT_CLASSIFICATION	2.7611707706966533E-5	IMPLEMENTATION
/*     * r = x * 2 ** y     */	WITHOUT_CLASSIFICATION	0.9999777749473949	WITHOUT_CLASSIFICATION	2.22250526051761E-5	IMPLEMENTATION
/*  0! */	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
/*  1! */	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
/*  2! */	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
/*  3! */	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
/*  4! */	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
/*  5! */	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
/*  6! */	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
/*  7! */	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
/*  8! */	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
/*  9! */	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
/* 11! */	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
/* 12! */	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
/* 13! */	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
/* 15! */	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
/* 16! */	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
/* 17! */	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
/* 19! */	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
/* 20! */	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
/* 21! */	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
// Static constants	WITHOUT_CLASSIFICATION	0.9999563746113299	WITHOUT_CLASSIFICATION	4.362538867015061E-5	IMPLEMENTATION
// Clean-up string representation so that it could be understood // by Java's BigDecimal. Not terribly efficient for now. // 1. MRI allows d and D as exponent separators	WITHOUT_CLASSIFICATION	0.9997231446346811	WITHOUT_CLASSIFICATION	2.7685536531887997E-4	IMPLEMENTATION
// 2. MRI allows underscores anywhere	WITHOUT_CLASSIFICATION	0.999929711617807	WITHOUT_CLASSIFICATION	7.028838219295906E-5	IMPLEMENTATION
// 3. MRI ignores the trailing junk	WITHOUT_CLASSIFICATION	0.9999788319077259	WITHOUT_CLASSIFICATION	2.1168092274111323E-5	IMPLEMENTATION
// MRI behavior: -0 and +0 are two different things	WITHOUT_CLASSIFICATION	0.9999317675201526	WITHOUT_CLASSIFICATION	6.823247984740932E-5	IMPLEMENTATION
// Java and MRI definitions of modulo are different.	WITHOUT_CLASSIFICATION	0.9999298715750173	WITHOUT_CLASSIFICATION	7.012842498273903E-5	IMPLEMENTATION
// Java and MRI definitions of remainder are the same.	WITHOUT_CLASSIFICATION	0.9999597203521785	WITHOUT_CLASSIFICATION	4.027964782149146E-5	IMPLEMENTATION
// Note: MRI has a very non-trivial way of calculating the precision, // so we use very simple approximation here:	WITHOUT_CLASSIFICATION	0.9999672499591113	WITHOUT_CLASSIFICATION	3.275004088869945E-5	IMPLEMENTATION
// Iteration variables, for the square root x and the reciprocal v // initial x:  x0 ~ sqrt() // initial v:  v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999952681619717	WITHOUT_CLASSIFICATION	4.731838028257777E-6	IMPLEMENTATION
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999124284780262	WITHOUT_CLASSIFICATION	8.757152197383214E-5	IMPLEMENTATION
// TODO: why this: .setResult();	WITHOUT_CLASSIFICATION	0.9150570074997952	WITHOUT_CLASSIFICATION	0.08494299250020475	IMPLEMENTATION
// integer division	WITHOUT_CLASSIFICATION	0.9999297710748257	WITHOUT_CLASSIFICATION	7.02289251743449E-5	IMPLEMENTATION
// MRI behavior: "If digits is 0, the result is the same as the / operator."	WITHOUT_CLASSIFICATION	0.9999845925877922	WITHOUT_CLASSIFICATION	1.5407412207908994E-5	IMPLEMENTATION
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999424163230828	WITHOUT_CLASSIFICATION	5.7583676917311274E-5	IMPLEMENTATION
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999424163230828	WITHOUT_CLASSIFICATION	5.7583676917311274E-5	IMPLEMENTATION
// Java and MRI definitions of divmod are different.        	WITHOUT_CLASSIFICATION	0.9999486590063619	WITHOUT_CLASSIFICATION	5.134099363813262E-5	IMPLEMENTATION
// JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it	WITHOUT_CLASSIFICATION	0.9999788824854293	WITHOUT_CLASSIFICATION	2.111751457074343E-5	IMPLEMENTATION
// shift the decimal point just to the right of the digit to be rounded to (divide by 10**(abs(scale))) // -1 -> 10's digit, -2 -> 100's digit, etc.	WITHOUT_CLASSIFICATION	0.9999895917124968	WITHOUT_CLASSIFICATION	1.0408287503169525E-5	IMPLEMENTATION
// ...round to that digit	WITHOUT_CLASSIFICATION	0.9999498330144698	WITHOUT_CLASSIFICATION	5.016698553006682E-5	IMPLEMENTATION
// ...and shift the result back to the left (multiply by 10**(abs(scale)))	WITHOUT_CLASSIFICATION	0.9999865458823528	WITHOUT_CLASSIFICATION	1.3454117647234726E-5	IMPLEMENTATION
//this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are	WITHOUT_CLASSIFICATION	0.9999704139944904	WITHOUT_CLASSIFICATION	2.9586005509619038E-5	IMPLEMENTATION
// sign	WITHOUT_CLASSIFICATION	0.9966194084759813	WITHOUT_CLASSIFICATION	0.003380591524018782	IMPLEMENTATION
// significant digits and exponent	WITHOUT_CLASSIFICATION	0.999944283463437	WITHOUT_CLASSIFICATION	5.571653656295941E-5	IMPLEMENTATION
// normalize the value	WITHOUT_CLASSIFICATION	0.999969983000378	WITHOUT_CLASSIFICATION	3.0016999621990288E-5	IMPLEMENTATION
// base	WITHOUT_CLASSIFICATION	0.9970533464737678	WITHOUT_CLASSIFICATION	0.002946653526232162	IMPLEMENTATION
// NOTE: MRI's sqrt precision is limited by 100, // but we allow values more than 100.	WITHOUT_CLASSIFICATION	0.9999652856706194	WITHOUT_CLASSIFICATION	3.471432938070374E-5	IMPLEMENTATION
// just in case, add a bit of extra precision	WITHOUT_CLASSIFICATION	0.9999736371118759	WITHOUT_CLASSIFICATION	2.6362888124065744E-5	IMPLEMENTATION
// eh?!	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
// Note: #fix has only no-arg form, but truncate allows optional parameter.	WITHOUT_CLASSIFICATION	0.9999772027324012	WITHOUT_CLASSIFICATION	2.279726759873666E-5	IMPLEMENTATION
// General number and precision checking	WITHOUT_CLASSIFICATION	0.999970087169523	WITHOUT_CLASSIFICATION	2.9912830477044343E-5	IMPLEMENTATION
// the requested precision	WITHOUT_CLASSIFICATION	0.9999718825390915	WITHOUT_CLASSIFICATION	2.8117460908395175E-5	IMPLEMENTATION
// Proc class	WITHOUT_CLASSIFICATION	0.9999375083801314	WITHOUT_CLASSIFICATION	6.249161986859491E-5	IMPLEMENTATION
//.append("  -x[directory]   strip off text before #!ruby line and perhaps cd to directory\n")	WITHOUT_CLASSIFICATION	0.9999590218919057	WITHOUT_CLASSIFICATION	4.097810809445205E-5	IMPLEMENTATION
// even shift.. // ..floors to 62 or 63 bit BigInteger	WITHOUT_CLASSIFICATION	0.9999370616488276	WITHOUT_CLASSIFICATION	6.293835117240669E-5	IMPLEMENTATION
// 5 -> 2, -5 -> -3 need half a scale more..	WITHOUT_CLASSIFICATION	0.9999184961360732	WITHOUT_CLASSIFICATION	8.15038639268109E-5	IMPLEMENTATION
// ..where 100 -> 10 shifts the scale	WITHOUT_CLASSIFICATION	0.9999420739503287	WITHOUT_CLASSIFICATION	5.792604967132816E-5	IMPLEMENTATION
// Initial x - use double root - multiply by halfBack to unshift - set new scale	WITHOUT_CLASSIFICATION	0.9999728649370027	WITHOUT_CLASSIFICATION	2.7135062997269744E-5	IMPLEMENTATION
// x0 ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999053960346399	WITHOUT_CLASSIFICATION	9.460396536004441E-5	IMPLEMENTATION
// for prec 15 root x0 must surely be OK // return small prec roots without iterations	WITHOUT_CLASSIFICATION	0.9999915159748621	WITHOUT_CLASSIFICATION	8.484025137884103E-6	IMPLEMENTATION
// Initial v - the reciprocal // v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999616332223453	WITHOUT_CLASSIFICATION	3.83667776546033E-5	IMPLEMENTATION
// Collect iteration precisions beforehand	WITHOUT_CLASSIFICATION	0.9999711934270138	WITHOUT_CLASSIFICATION	2.8806572986144017E-5	IMPLEMENTATION
// assume nInit = 16 <= prec	WITHOUT_CLASSIFICATION	0.9999445137094166	WITHOUT_CLASSIFICATION	5.5486290583388844E-5	IMPLEMENTATION
// The loop of "Square Root by Coupled Newton Iteration"	WITHOUT_CLASSIFICATION	0.9999698060410304	WITHOUT_CLASSIFICATION	3.0193958969646124E-5	IMPLEMENTATION
// Increase precision - next iteration supplies n exact digits	WITHOUT_CLASSIFICATION	0.9999623145310615	WITHOUT_CLASSIFICATION	3.768546893849857E-5	IMPLEMENTATION
// Next x                                        // e = d - x^2	WITHOUT_CLASSIFICATION	0.9999452736791447	WITHOUT_CLASSIFICATION	5.47263208552573E-5	IMPLEMENTATION
// x += e*v     ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999156743149097	WITHOUT_CLASSIFICATION	8.432568509039663E-5	IMPLEMENTATION
// root x is ready!	WITHOUT_CLASSIFICATION	0.9999369988520261	WITHOUT_CLASSIFICATION	6.300114797392943E-5	IMPLEMENTATION
// Next v                                        // g = 1 - 2*x*v	WITHOUT_CLASSIFICATION	0.99994525414631	WITHOUT_CLASSIFICATION	5.474585369014014E-5	IMPLEMENTATION
// v += g*v     ~ 1/2/sqrt()	WITHOUT_CLASSIFICATION	0.9999156743149097	WITHOUT_CLASSIFICATION	8.432568509039663E-5	IMPLEMENTATION
// RubyBigdecimal	WITHOUT_CLASSIFICATION	0.9999065705659994	WITHOUT_CLASSIFICATION	9.342943400049876E-5	IMPLEMENTATION
// c: bind_eval	WITHOUT_CLASSIFICATION	0.9999036914227144	WITHOUT_CLASSIFICATION	9.630857728570997E-5	IMPLEMENTATION
/*  ================     *  Module Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999781702962333	WITHOUT_CLASSIFICATION	2.1829703766759425E-5	IMPLEMENTATION
// from CommandlineParser	WITHOUT_CLASSIFICATION	0.999946088772347	WITHOUT_CLASSIFICATION	5.3911227652936784E-5	IMPLEMENTATION
// This property is a Boolean, to allow three values, so it can match MRI's nil, false and true	WITHOUT_CLASSIFICATION	0.9999691717348058	WITHOUT_CLASSIFICATION	3.082826519427921E-5	IMPLEMENTATION
// default ClassCache using jitMax as a soft upper bound	WITHOUT_CLASSIFICATION	0.9999904020737629	WITHOUT_CLASSIFICATION	9.59792623723919E-6	IMPLEMENTATION
// Until we get a little more solid on 1.9 support we will only run interpreted mode	WITHOUT_CLASSIFICATION	0.9998772054153582	WITHOUT_CLASSIFICATION	1.2279458464176552E-4	IMPLEMENTATION
// Setting the loader needs to reset the class cache	WITHOUT_CLASSIFICATION	0.9999884183246397	WITHOUT_CLASSIFICATION	1.1581675360374946E-5	IMPLEMENTATION
// try the normal property first	WITHOUT_CLASSIFICATION	0.999975726272912	WITHOUT_CLASSIFICATION	2.4273727087993233E-5	IMPLEMENTATION
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999567661699523	WITHOUT_CLASSIFICATION	4.323383004762933E-5	IMPLEMENTATION
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999567661699523	WITHOUT_CLASSIFICATION	4.323383004762933E-5	IMPLEMENTATION
// try loading from classloader resources	WITHOUT_CLASSIFICATION	0.999983363745937	WITHOUT_CLASSIFICATION	1.6636254062982706E-5	IMPLEMENTATION
// otherwise fall back on system temp location	WITHOUT_CLASSIFICATION	0.9999500890730576	WITHOUT_CLASSIFICATION	4.9910926942488934E-5	IMPLEMENTATION
// We require the home directory to be absolute	WITHOUT_CLASSIFICATION	0.9999911310222687	WITHOUT_CLASSIFICATION	8.868977731414171E-6	IMPLEMENTATION
//consume the file name	WITHOUT_CLASSIFICATION	0.9999538095400463	WITHOUT_CLASSIFICATION	4.619045995370734E-5	IMPLEMENTATION
// Specify something that can't separate	WITHOUT_CLASSIFICATION	0.9999621940520341	WITHOUT_CLASSIFICATION	3.780594796587638E-5	IMPLEMENTATION
// try cwd first	WITHOUT_CLASSIFICATION	0.99994138144159	WITHOUT_CLASSIFICATION	5.861855841000449E-5	IMPLEMENTATION
// ruby interpreter compatibilty // Usage: ruby [switches] [--] [programfile] [arguments])	WITHOUT_CLASSIFICATION	0.9999591821580128	WITHOUT_CLASSIFICATION	4.081784198724094E-5	IMPLEMENTATION
// KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 // if Ruby 2.0 encoding pragmas are implemented, this will need to change	WITHOUT_CLASSIFICATION	0.9945103024967579	WITHOUT_CLASSIFICATION	0.005489697503242143	IMPLEMENTATION
// @JRubyMethod(name = "complex?")	WITHOUT_CLASSIFICATION	0.9999225352924953	WITHOUT_CLASSIFICATION	7.746470750461386E-5	IMPLEMENTATION
// @JRubyMethod(name = "exact?")	WITHOUT_CLASSIFICATION	0.9999251043648207	WITHOUT_CLASSIFICATION	7.489563517925076E-5	IMPLEMENTATION
// @JRubyMethod(name = "inexact?")	WITHOUT_CLASSIFICATION	0.9999251454354137	WITHOUT_CLASSIFICATION	7.48545645863844E-5	IMPLEMENTATION
// symbol string *must* be interned	WITHOUT_CLASSIFICATION	0.9999487267366874	WITHOUT_CLASSIFICATION	5.1273263312585056E-5	IMPLEMENTATION
//        assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";	WITHOUT_CLASSIFICATION	0.9999830655077269	WITHOUT_CLASSIFICATION	1.6934492273127793E-5	IMPLEMENTATION
/* Symbol class methods.     *      */	WITHOUT_CLASSIFICATION	0.999949362757054	WITHOUT_CLASSIFICATION	5.0637242945876154E-5	IMPLEMENTATION
// TODO: 1.9 rb_enc_symname_p	WITHOUT_CLASSIFICATION	0.9005997382379533	WITHOUT_CLASSIFICATION	0.09940026176204678	IMPLEMENTATION
// This is needed to unpack stuff	WITHOUT_CLASSIFICATION	0.9999713993045066	WITHOUT_CLASSIFICATION	2.8600695493291814E-5	IMPLEMENTATION
// we already confirmed above that length > 0	WITHOUT_CLASSIFICATION	0.999973959360018	WITHOUT_CLASSIFICATION	2.6040639982058337E-5	IMPLEMENTATION
// *must* be power of 2!	WITHOUT_CLASSIFICATION	0.9999224671070059	WITHOUT_CLASSIFICATION	7.753289299412877E-5	IMPLEMENTATION
// note all fields are final -- rehash creates new entries when necessary. // as documented in java.util.concurrent.ConcurrentHashMap.java, that will // statistically affect only a small percentage (< 20%) of entries for a given rehash.	WITHOUT_CLASSIFICATION	0.99999625559363	WITHOUT_CLASSIFICATION	3.74440637001974E-6	IMPLEMENTATION
//            assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999829492079702	WITHOUT_CLASSIFICATION	1.7050792029833193E-5	IMPLEMENTATION
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999421557706591	WITHOUT_CLASSIFICATION	5.7844229340991494E-5	IMPLEMENTATION
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999421557706591	WITHOUT_CLASSIFICATION	5.7844229340991494E-5	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999326262726952	WITHOUT_CLASSIFICATION	6.737372730489569E-5	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999326262726952	WITHOUT_CLASSIFICATION	6.737372730489569E-5	IMPLEMENTATION
// backwards-compatibility, but threadsafe now	WITHOUT_CLASSIFICATION	0.9999330732008062	WITHOUT_CLASSIFICATION	6.692679919386202E-5	IMPLEMENTATION
//  Single node on list	WITHOUT_CLASSIFICATION	0.999922922869684	WITHOUT_CLASSIFICATION	7.707713031610294E-5	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999588257625517	WITHOUT_CLASSIFICATION	4.1174237448402496E-5	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999434579499024	WITHOUT_CLASSIFICATION	5.654205009769806E-5	IMPLEMENTATION
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999867883024313	WITHOUT_CLASSIFICATION	1.3211697568765005E-5	IMPLEMENTATION
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999463323094682	WITHOUT_CLASSIFICATION	5.3667690531832594E-5	IMPLEMENTATION
// not so backwards-compatible here, but no one should have been // calling this anyway.	WITHOUT_CLASSIFICATION	0.9997668688999839	WITHOUT_CLASSIFICATION	2.3313110001612955E-4	IMPLEMENTATION
// Profile	WITHOUT_CLASSIFICATION	0.9969254177846495	WITHOUT_CLASSIFICATION	0.003074582215350501	IMPLEMENTATION
//static private final String TRANSLIT = "//translit";	WITHOUT_CLASSIFICATION	0.999982639021469	WITHOUT_CLASSIFICATION	1.7360978531093475E-5	IMPLEMENTATION
// treat start and end as start...end for end >= 0, start..end for end < 0	WITHOUT_CLASSIFICATION	0.9999612312500445	WITHOUT_CLASSIFICATION	3.876874995544935E-5	IMPLEMENTATION
// invalid ranges result in an empty string	WITHOUT_CLASSIFICATION	0.9999904373422479	WITHOUT_CLASSIFICATION	9.562657752010367E-6	IMPLEMENTATION
// Methods of the Nil Class (nil_*):	WITHOUT_CLASSIFICATION	0.9999683897007594	WITHOUT_CLASSIFICATION	3.1610299240640944E-5	IMPLEMENTATION
// Has read/write been closed or is it still open for business	WITHOUT_CLASSIFICATION	0.999947833990685	WITHOUT_CLASSIFICATION	5.216600931503921E-5	IMPLEMENTATION
// Support IO modes that this object was opened with	WITHOUT_CLASSIFICATION	0.9999432010777245	WITHOUT_CLASSIFICATION	5.679892227551518E-5	IMPLEMENTATION
// must let original string know we're modifying, so shared buffers aren't damaged	WITHOUT_CLASSIFICATION	0.9999725224606164	WITHOUT_CLASSIFICATION	2.7477539383563657E-5	IMPLEMENTATION
// reset the state	WITHOUT_CLASSIFICATION	0.999972492540314	WITHOUT_CLASSIFICATION	2.7507459686010685E-5	IMPLEMENTATION
// Tainting here if we ever want it. (secure 4)	WITHOUT_CLASSIFICATION	0.9999104862047344	WITHOUT_CLASSIFICATION	8.9513795265599E-5	IMPLEMENTATION
// rb_match_busy	WITHOUT_CLASSIFICATION	0.9999053960346399	WITHOUT_CLASSIFICATION	9.460396536004441E-5	IMPLEMENTATION
//str is frozen	WITHOUT_CLASSIFICATION	0.9999063054715223	WITHOUT_CLASSIFICATION	9.369452847781933E-5	IMPLEMENTATION
// MRI also does a pointer comparison here	WITHOUT_CLASSIFICATION	0.9999417017787825	WITHOUT_CLASSIFICATION	5.829822121753546E-5	IMPLEMENTATION
// JRubyServer	WITHOUT_CLASSIFICATION	0.9999062982957819	WITHOUT_CLASSIFICATION	9.370170421799504E-5	IMPLEMENTATION
// Class.allocate object is not allocatable before it is initialized	WITHOUT_CLASSIFICATION	0.9999894702817548	WITHOUT_CLASSIFICATION	1.0529718245289535E-5	IMPLEMENTATION
// boot the Object class 	WITHOUT_CLASSIFICATION	0.999967934666532	WITHOUT_CLASSIFICATION	3.206533346791472E-5	IMPLEMENTATION
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999829565347153	WITHOUT_CLASSIFICATION	1.704346528474803E-5	IMPLEMENTATION
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999871086512687	WITHOUT_CLASSIFICATION	1.2891348731317316E-5	IMPLEMENTATION
// undo check	WITHOUT_CLASSIFICATION	0.9999162771144094	WITHOUT_CLASSIFICATION	8.372288559057278E-5	IMPLEMENTATION
// This is a non-standard method; have we decided to start extending Ruby? //classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));	WITHOUT_CLASSIFICATION	0.999995730655483	WITHOUT_CLASSIFICATION	4.269344517105462E-6	IMPLEMENTATION
// boot the Module and Class classes	WITHOUT_CLASSIFICATION	0.9999630492438878	WITHOUT_CLASSIFICATION	3.695075611227777E-5	IMPLEMENTATION
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9999951213208197	WITHOUT_CLASSIFICATION	4.8786791803159855E-6	IMPLEMENTATION
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9999408808430295	WITHOUT_CLASSIFICATION	5.911915697050683E-5	IMPLEMENTATION
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9999408808430295	WITHOUT_CLASSIFICATION	5.911915697050683E-5	IMPLEMENTATION
// could be pulled down to RubyClass in future // rb_class_boot	WITHOUT_CLASSIFICATION	0.999806390111381	WITHOUT_CLASSIFICATION	1.9360988861914717E-4	IMPLEMENTATION
// remove us from old superclass's child classes	WITHOUT_CLASSIFICATION	0.9999900496091334	WITHOUT_CLASSIFICATION	9.950390866626874E-6	IMPLEMENTATION
// add us to new superclass's child classes	WITHOUT_CLASSIFICATION	0.9999846821165476	WITHOUT_CLASSIFICATION	1.5317883452452926E-5	IMPLEMENTATION
// update all subclasses	WITHOUT_CLASSIFICATION	0.9999810890401175	WITHOUT_CLASSIFICATION	1.891095988242935E-5	IMPLEMENTATION
// fields to hold Ruby and RubyClass references	WITHOUT_CLASSIFICATION	0.9999646039210356	WITHOUT_CLASSIFICATION	3.539607896447416E-5	IMPLEMENTATION
// static initializing method	WITHOUT_CLASSIFICATION	0.9999775923405197	WITHOUT_CLASSIFICATION	2.2407659480168843E-5	IMPLEMENTATION
// standard constructor that accepts Ruby, RubyClass	WITHOUT_CLASSIFICATION	0.9999570858098947	WITHOUT_CLASSIFICATION	4.291419010536764E-5	IMPLEMENTATION
// no-arg constructor using static references to Ruby and RubyClass	WITHOUT_CLASSIFICATION	0.999978944835938	WITHOUT_CLASSIFICATION	2.1055164062130408E-5	IMPLEMENTATION
// non-signature signature with just IRubyObject	WITHOUT_CLASSIFICATION	0.9999520644137894	WITHOUT_CLASSIFICATION	4.793558621063149E-5	IMPLEMENTATION
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999618725220888	WITHOUT_CLASSIFICATION	3.8127477911223226E-5	IMPLEMENTATION
// self // method name	WITHOUT_CLASSIFICATION	0.9999368638593071	WITHOUT_CLASSIFICATION	6.313614069289971E-5	IMPLEMENTATION
// the default allocator	WITHOUT_CLASSIFICATION	0.9999880769175449	WITHOUT_CLASSIFICATION	1.1923082455023382E-5	IMPLEMENTATION
// Equivalent of T_DATA	WITHOUT_CLASSIFICATION	0.9999037686717652	WITHOUT_CLASSIFICATION	9.623132823469942E-5	IMPLEMENTATION
// do nothing, leave empty	WITHOUT_CLASSIFICATION	0.9999889326320913	WITHOUT_CLASSIFICATION	1.1067367908795147E-5	IMPLEMENTATION
// Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9999311411879255	WITHOUT_CLASSIFICATION	6.885881207454938E-5	IMPLEMENTATION
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999799721867279	WITHOUT_CLASSIFICATION	2.0027813272200286E-5	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999573619867622	WITHOUT_CLASSIFICATION	4.2638013237769585E-5	IMPLEMENTATION
// Make sure all arguments are modules before calling the callbacks	WITHOUT_CLASSIFICATION	0.9999936010776795	WITHOUT_CLASSIFICATION	6.398922320455184E-6	IMPLEMENTATION
// MRI extends in order from last to first	WITHOUT_CLASSIFICATION	0.9999680863569896	WITHOUT_CLASSIFICATION	3.1913643010429296E-5	IMPLEMENTATION
// NOTE: Serialization is primarily supported for testing purposes, and there is no general // guarantee that serialization will work correctly. Specifically, instance variables pointing // at symbols, threads, modules, classes, and other unserializable types are not detected.	WITHOUT_CLASSIFICATION	0.9999974922290427	WITHOUT_CLASSIFICATION	2.5077709572599E-6	IMPLEMENTATION
// write out ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999637183179299	WITHOUT_CLASSIFICATION	3.628168207012503E-5	IMPLEMENTATION
// rest in ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999587226386989	WITHOUT_CLASSIFICATION	4.127736130116609E-5	IMPLEMENTATION
// 0x3fff_ffff // -0x4000_0000	WITHOUT_CLASSIFICATION	0.9999156802563799	WITHOUT_CLASSIFICATION	8.431974362011662E-5	IMPLEMENTATION
// a gotcha	WITHOUT_CLASSIFICATION	0.9999053960346399	WITHOUT_CLASSIFICATION	9.460396536004441E-5	IMPLEMENTATION
// Java / and % are not the same as ruby	WITHOUT_CLASSIFICATION	0.9999567678340202	WITHOUT_CLASSIFICATION	4.3232165979890336E-5	IMPLEMENTATION
// A gotcha for Long.MIN_VALUE: value = -value	WITHOUT_CLASSIFICATION	0.9999634137185467	WITHOUT_CLASSIFICATION	3.6586281453237905E-5	IMPLEMENTATION
// Piece of mri rb_to_id	WITHOUT_CLASSIFICATION	0.9999168858698626	WITHOUT_CLASSIFICATION	8.311413013738145E-5	IMPLEMENTATION
// Java Doubles are 64 bit long:            	WITHOUT_CLASSIFICATION	0.999955157113256	WITHOUT_CLASSIFICATION	4.4842886744066984E-5	IMPLEMENTATION
// Double.MAX_EXPONENT since Java 1.6            	WITHOUT_CLASSIFICATION	0.9999517350006694	WITHOUT_CLASSIFICATION	4.826499933069782E-5	IMPLEMENTATION
// don't override Numeric#div !	WITHOUT_CLASSIFICATION	0.9999581354062336	WITHOUT_CLASSIFICATION	4.186459376636171E-5	IMPLEMENTATION
// Modelled after c ruby implementation (java /,% not same as ruby)	WITHOUT_CLASSIFICATION	0.9975066356977423	WITHOUT_CLASSIFICATION	0.0024933643022577497	IMPLEMENTATION
// MRI behavior:	WITHOUT_CLASSIFICATION	0.999919060610836	WITHOUT_CLASSIFICATION	8.093938916406091E-5	IMPLEMENTATION
// Numeric.equal            	WITHOUT_CLASSIFICATION	0.99994224054529	WITHOUT_CLASSIFICATION	5.7759454710037513E-5	IMPLEMENTATION
// provider is not available	WITHOUT_CLASSIFICATION	0.9999652282745392	WITHOUT_CLASSIFICATION	3.4771725460931755E-5	IMPLEMENTATION
// bouncy castle doesn't support algorithm	WITHOUT_CLASSIFICATION	0.9999054256716893	WITHOUT_CLASSIFICATION	9.457432831070521E-5	IMPLEMENTATION
// fall back to system JCA providers	WITHOUT_CLASSIFICATION	0.9999587366829018	WITHOUT_CLASSIFICATION	4.126331709811659E-5	IMPLEMENTATION
// RubyDigest	WITHOUT_CLASSIFICATION	0.999905445857319	WITHOUT_CLASSIFICATION	9.455414268090098E-5	IMPLEMENTATION
// ENEBO: Can these be fast?	WITHOUT_CLASSIFICATION	0.9998943425929757	WITHOUT_CLASSIFICATION	1.0565740702431679E-4	IMPLEMENTATION
// synchronize on the RubyThread for threadgroup updates	WITHOUT_CLASSIFICATION	0.9999756797399514	WITHOUT_CLASSIFICATION	2.4320260048607977E-5	IMPLEMENTATION
// we only add live threads	WITHOUT_CLASSIFICATION	0.9999614438103379	WITHOUT_CLASSIFICATION	3.855618966199021E-5	IMPLEMENTATION
// use same ClassIndex as metaclass, since we're technically still of that type	WITHOUT_CLASSIFICATION	0.9999732859481738	WITHOUT_CLASSIFICATION	2.6714051826112292E-5	IMPLEMENTATION
// handle everything after -- as arguments to the jruby process	WITHOUT_CLASSIFICATION	0.9999845033730467	WITHOUT_CLASSIFICATION	1.549662695336951E-5	IMPLEMENTATION
// JRubyService	WITHOUT_CLASSIFICATION	0.9999079659275054	WITHOUT_CLASSIFICATION	9.203407249454407E-5	IMPLEMENTATION
// while	WITHOUT_CLASSIFICATION	0.9983597379637289	WITHOUT_CLASSIFICATION	0.0016402620362710625	IMPLEMENTATION
/* \OOO */	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
// CRuby uses sprintf(buf, "%.*g", FLOAT_DIG, d); // This pattern adjusts the output of String.pattern("%g") to mimic // the C version.	WITHOUT_CLASSIFICATION	0.9999836716864601	WITHOUT_CLASSIFICATION	1.6328313539874768E-5	IMPLEMENTATION
// mask off "once" flag	WITHOUT_CLASSIFICATION	0.9999164778015391	WITHOUT_CLASSIFICATION	8.352219846086358E-5	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999823954710023	WITHOUT_CLASSIFICATION	1.7604528997610696E-5	IMPLEMENTATION
// internal usage (Complex/Rational)	WITHOUT_CLASSIFICATION	0.9999578313214738	WITHOUT_CLASSIFICATION	4.216867852624935E-5	IMPLEMENTATION
// silent ?	WITHOUT_CLASSIFICATION	0.999906683971266	WITHOUT_CLASSIFICATION	9.331602873400846E-5	IMPLEMENTATION
/* \xHH */	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999156743149097	WITHOUT_CLASSIFICATION	8.432568509039663E-5	IMPLEMENTATION
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999053960346399	WITHOUT_CLASSIFICATION	9.460396536004441E-5	IMPLEMENTATION
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999053960346399	WITHOUT_CLASSIFICATION	9.460396536004441E-5	IMPLEMENTATION
/* \O, \OO, \OOO or backref */	WITHOUT_CLASSIFICATION	0.9999156121617838	WITHOUT_CLASSIFICATION	8.438783821620801E-5	IMPLEMENTATION
// MBCLEN_NEEDMORE_P	WITHOUT_CLASSIFICATION	0.9999053960346399	WITHOUT_CLASSIFICATION	9.460396536004441E-5	IMPLEMENTATION
// MBCLEN_INVALID_P	WITHOUT_CLASSIFICATION	0.9999059048283395	WITHOUT_CLASSIFICATION	9.409517166046004E-5	IMPLEMENTATION
// Unicode is can be only 21 bits long, int is enough	WITHOUT_CLASSIFICATION	0.9999563246823828	WITHOUT_CLASSIFICATION	4.367531761727655E-5	IMPLEMENTATION
/* Surrogates */	WITHOUT_CLASSIFICATION	0.9999065626554234	WITHOUT_CLASSIFICATION	9.343734457654661E-5	IMPLEMENTATION
// do not load the class if not used	WITHOUT_CLASSIFICATION	0.9999883304781852	WITHOUT_CLASSIFICATION	1.166952181468023E-5	IMPLEMENTATION
/* \0, \0O, \0OO */	WITHOUT_CLASSIFICATION	0.9999053960346399	WITHOUT_CLASSIFICATION	9.460396536004441E-5	IMPLEMENTATION
/* \xHH */	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999053960346399	WITHOUT_CLASSIFICATION	9.460396536004441E-5	IMPLEMENTATION
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999156743149097	WITHOUT_CLASSIFICATION	8.432568509039663E-5	IMPLEMENTATION
/* \\u{H HH HHH HHHH HHHHH HHHHHH ...} */	WITHOUT_CLASSIFICATION	0.9999228017202886	WITHOUT_CLASSIFICATION	7.719827971152387E-5	IMPLEMENTATION
/* \\uHHHH */	WITHOUT_CLASSIFICATION	0.9999053960346399	WITHOUT_CLASSIFICATION	9.460396536004441E-5	IMPLEMENTATION
/* \p{Hiragana} */	WITHOUT_CLASSIFICATION	0.9999053960346399	WITHOUT_CLASSIFICATION	9.460396536004441E-5	IMPLEMENTATION
// inner switch	WITHOUT_CLASSIFICATION	0.9999291795856914	WITHOUT_CLASSIFICATION	7.082041430853713E-5	IMPLEMENTATION
// newInstance here	WITHOUT_CLASSIFICATION	0.9998944908976243	WITHOUT_CLASSIFICATION	1.0550910237571515E-4	IMPLEMENTATION
// rb_reg_raise	WITHOUT_CLASSIFICATION	0.9999053960346399	WITHOUT_CLASSIFICATION	9.460396536004441E-5	IMPLEMENTATION
// rb_reg_desc	WITHOUT_CLASSIFICATION	0.9999053960346399	WITHOUT_CLASSIFICATION	9.460396536004441E-5	IMPLEMENTATION
// rb_enc_reg_raise	WITHOUT_CLASSIFICATION	0.9999053960346399	WITHOUT_CLASSIFICATION	9.460396536004441E-5	IMPLEMENTATION
// rb_enc_reg_error_desc	WITHOUT_CLASSIFICATION	0.9999156743149097	WITHOUT_CLASSIFICATION	8.432568509039663E-5	IMPLEMENTATION
// rb_reg_initialize_str	WITHOUT_CLASSIFICATION	0.9999492530199129	WITHOUT_CLASSIFICATION	5.0746980087086336E-5	IMPLEMENTATION
// rb_reg_initialize	WITHOUT_CLASSIFICATION	0.9999430673442848	WITHOUT_CLASSIFICATION	5.69326557150406E-5	IMPLEMENTATION
// JRUBY-3625: delay setting backref until the MatchData is completely initialized	WITHOUT_CLASSIFICATION	0.9999528358078127	WITHOUT_CLASSIFICATION	4.716419218724335E-5	IMPLEMENTATION
// rb_reg_expr_str	WITHOUT_CLASSIFICATION	0.9999053960346399	WITHOUT_CLASSIFICATION	9.460396536004441E-5	IMPLEMENTATION
// option_to_str	WITHOUT_CLASSIFICATION	0.9999219419989346	WITHOUT_CLASSIFICATION	7.805800106534901E-5	IMPLEMENTATION
// Don't initialize with class // Don't put in object space and don't taint	WITHOUT_CLASSIFICATION	0.9999936231518247	WITHOUT_CLASSIFICATION	6.3768481752731355E-6	IMPLEMENTATION
// args should be before block	WITHOUT_CLASSIFICATION	0.9999021144425175	WITHOUT_CLASSIFICATION	9.788555748240924E-5	IMPLEMENTATION
// args should be at end	WITHOUT_CLASSIFICATION	0.99990088469952	WITHOUT_CLASSIFICATION	9.9115300480064E-5	IMPLEMENTATION
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999201442236232	WITHOUT_CLASSIFICATION	7.985577637677565E-5	IMPLEMENTATION
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999201442236232	WITHOUT_CLASSIFICATION	7.985577637677565E-5	IMPLEMENTATION
// skip anything not related to jruby	WITHOUT_CLASSIFICATION	0.9999664320327766	WITHOUT_CLASSIFICATION	3.35679672233243E-5	IMPLEMENTATION
// start a new populator	WITHOUT_CLASSIFICATION	0.9999651168099181	WITHOUT_CLASSIFICATION	3.488319008196742E-5	IMPLEMENTATION
// check for frame field reads or writes	WITHOUT_CLASSIFICATION	0.9999868182698285	WITHOUT_CLASSIFICATION	1.3181730171578446E-5	IMPLEMENTATION
// add all names for this annotation	WITHOUT_CLASSIFICATION	0.9999786829512382	WITHOUT_CLASSIFICATION	2.1317048761817767E-5	IMPLEMENTATION
// no annotated methods found, skip	WITHOUT_CLASSIFICATION	0.9999427762589745	WITHOUT_CLASSIFICATION	5.722374102549631E-5	IMPLEMENTATION
// write out a static initializer for frame names, so it only fires once	WITHOUT_CLASSIFICATION	0.9999879463713496	WITHOUT_CLASSIFICATION	1.2053628650307547E-5	IMPLEMENTATION
// single method, use normal logic	WITHOUT_CLASSIFICATION	0.9999476646634351	WITHOUT_CLASSIFICATION	5.233533656486051E-5	IMPLEMENTATION
// multimethod, new logic	WITHOUT_CLASSIFICATION	0.999926348739046	WITHOUT_CLASSIFICATION	7.365126095398112E-5	IMPLEMENTATION
// declared type returns the qualified name without $ for inner classes!!!	WITHOUT_CLASSIFICATION	0.9999672962926839	WITHOUT_CLASSIFICATION	3.2703707316117814E-5	IMPLEMENTATION
// inner class, use $ to delimit	WITHOUT_CLASSIFICATION	0.9999649568478208	WITHOUT_CLASSIFICATION	3.5043152179205594E-5	IMPLEMENTATION
//                        RubyModule singletonClass = module.getSingletonClass();	WITHOUT_CLASSIFICATION	0.9999745707566746	WITHOUT_CLASSIFICATION	2.5429243325368592E-5	IMPLEMENTATION
//                }	WITHOUT_CLASSIFICATION	0.9999623541820648	WITHOUT_CLASSIFICATION	3.764581793523714E-5	IMPLEMENTATION
// fallback on non-pregenerated logic	WITHOUT_CLASSIFICATION	0.9998813537300231	WITHOUT_CLASSIFICATION	1.186462699770236E-4	IMPLEMENTATION
// refresh call adapter, since it matters if this is iter-based or not	WITHOUT_CLASSIFICATION	0.99995907705591	WITHOUT_CLASSIFICATION	4.092294408997473E-5	IMPLEMENTATION
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9999856501638438	WITHOUT_CLASSIFICATION	1.4349836156273807E-5	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.999954497089339	WITHOUT_CLASSIFICATION	4.550291066099082E-5	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.9999236591270974	WITHOUT_CLASSIFICATION	7.634087290266614E-5	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999745670669974	WITHOUT_CLASSIFICATION	2.543293300251829E-5	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999745670669974	WITHOUT_CLASSIFICATION	2.543293300251829E-5	IMPLEMENTATION
// colon3	WITHOUT_CLASSIFICATION	0.9967755369544352	WITHOUT_CLASSIFICATION	0.0032244630455647376	IMPLEMENTATION
// Colon3	WITHOUT_CLASSIFICATION	0.9972518352387454	WITHOUT_CLASSIFICATION	0.0027481647612546106	IMPLEMENTATION
// array created for rescue args doesn't need to be in ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999718684350452	WITHOUT_CLASSIFICATION	2.813156495488636E-5	IMPLEMENTATION
// For b.foo	WITHOUT_CLASSIFICATION	0.9999108965200467	WITHOUT_CLASSIFICATION	8.910347995326561E-5	IMPLEMENTATION
// instance config for the script run	WITHOUT_CLASSIFICATION	0.9999812632746132	WITHOUT_CLASSIFICATION	1.8736725386776645E-5	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999745670669974	WITHOUT_CLASSIFICATION	2.543293300251829E-5	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999745670669974	WITHOUT_CLASSIFICATION	2.543293300251829E-5	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999845567194575	WITHOUT_CLASSIFICATION	1.5443280542476044E-5	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999845567194575	WITHOUT_CLASSIFICATION	1.5443280542476044E-5	IMPLEMENTATION
//RubyModule module = context.getRubyClass();	WITHOUT_CLASSIFICATION	0.9999335896407623	WITHOUT_CLASSIFICATION	6.641035923778845E-5	IMPLEMENTATION
// For 'b.foo'	WITHOUT_CLASSIFICATION	0.9999147693828854	WITHOUT_CLASSIFICATION	8.523061711469673E-5	IMPLEMENTATION
// We define an actual list to get around bug in java integration (1387115)	WITHOUT_CLASSIFICATION	0.9999680865390261	WITHOUT_CLASSIFICATION	3.191346097381993E-5	IMPLEMENTATION
// something in here is used to build up ruby stack trace...	WITHOUT_CLASSIFICATION	0.9999767231318322	WITHOUT_CLASSIFICATION	2.3276868167896272E-5	IMPLEMENTATION
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999587392938727	WITHOUT_CLASSIFICATION	4.1260706127313374E-5	IMPLEMENTATION
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999587392938727	WITHOUT_CLASSIFICATION	4.1260706127313374E-5	IMPLEMENTATION
// do nothing, allow loop to retry	WITHOUT_CLASSIFICATION	0.9999842757282791	WITHOUT_CLASSIFICATION	1.5724271720872982E-5	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999249222587279	WITHOUT_CLASSIFICATION	7.507774127205205E-5	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999495994641935	WITHOUT_CLASSIFICATION	5.040053580651325E-5	IMPLEMENTATION
// never visited, should be fine	WITHOUT_CLASSIFICATION	0.9999170206590985	WITHOUT_CLASSIFICATION	8.297934090153394E-5	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999845567194575	WITHOUT_CLASSIFICATION	1.5443280542476044E-5	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999844033764009	WITHOUT_CLASSIFICATION	1.5596623599020062E-5	IMPLEMENTATION
// If we have more than one argument, then make sure the array is not ObjectSpaced.	WITHOUT_CLASSIFICATION	0.9999784946761081	WITHOUT_CLASSIFICATION	2.1505323891858915E-5	IMPLEMENTATION
// Only in ruby 1.9 methods	WITHOUT_CLASSIFICATION	0.9999545506338071	WITHOUT_CLASSIFICATION	4.5449366192888815E-5	IMPLEMENTATION
// Bind 'normal' parameter values to the local scope for this method.	WITHOUT_CLASSIFICATION	0.9999931390949773	WITHOUT_CLASSIFICATION	6.860905022687469E-6	IMPLEMENTATION
// no arg grouping, just use bulk assignment methods	WITHOUT_CLASSIFICATION	0.9999707353457615	WITHOUT_CLASSIFICATION	2.926465423852716E-5	IMPLEMENTATION
// optArgs and restArgs require more work, so isolate them and ArrayList creation here	WITHOUT_CLASSIFICATION	0.9999387445902953	WITHOUT_CLASSIFICATION	6.125540970462657E-5	IMPLEMENTATION
//        arity.checkArity(runtime, argsLength);	WITHOUT_CLASSIFICATION	0.9999722862142134	WITHOUT_CLASSIFICATION	2.771378578656418E-5	IMPLEMENTATION
// no more values to stick in rest arg	WITHOUT_CLASSIFICATION	0.9999726866331535	WITHOUT_CLASSIFICATION	2.7313366846450333E-5	IMPLEMENTATION
// set argv from main's args	WITHOUT_CLASSIFICATION	0.9999624483703901	WITHOUT_CLASSIFICATION	3.755162960995084E-5	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.999954497089339	WITHOUT_CLASSIFICATION	4.550291066099082E-5	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999745670669974	WITHOUT_CLASSIFICATION	2.543293300251829E-5	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999845567194575	WITHOUT_CLASSIFICATION	1.5443280542476044E-5	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999844033764009	WITHOUT_CLASSIFICATION	1.5596623599020062E-5	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999931197391564	WITHOUT_CLASSIFICATION	6.880260843617601E-6	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999931197391564	WITHOUT_CLASSIFICATION	6.880260843617601E-6	IMPLEMENTATION
// block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] //assert argsNode != null : "argsNode is not null";	WITHOUT_CLASSIFICATION	0.9999789252487612	WITHOUT_CLASSIFICATION	2.1074751238703818E-5	IMPLEMENTATION
// assign given optional arguments to their variables	WITHOUT_CLASSIFICATION	0.9999859435473494	WITHOUT_CLASSIFICATION	1.40564526506132E-5	IMPLEMENTATION
// in-frame EvalState should already have receiver set as self, continue to use it	WITHOUT_CLASSIFICATION	0.9999578725780461	WITHOUT_CLASSIFICATION	4.212742195385835E-5	IMPLEMENTATION
// assign the default values, adding to the end of allArgs	WITHOUT_CLASSIFICATION	0.9999966851438075	WITHOUT_CLASSIFICATION	3.314856192540667E-6	IMPLEMENTATION
// Make sure the appropriate scope has proper size. See JRUBY-2046.	WITHOUT_CLASSIFICATION	0.9999726348737413	WITHOUT_CLASSIFICATION	2.7365126258764236E-5	IMPLEMENTATION
// Experimental class reification support, to create real Java classes // for Ruby classes after the first opening	WITHOUT_CLASSIFICATION	0.9999918796542648	WITHOUT_CLASSIFICATION	8.12034573518915E-6	IMPLEMENTATION
// This should never happen past parse, but just bulletproof this just in case	WITHOUT_CLASSIFICATION	0.9999918935527483	WITHOUT_CLASSIFICATION	8.106447251731454E-6	IMPLEMENTATION
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.99995497712735	WITHOUT_CLASSIFICATION	4.502287265003097E-5	IMPLEMENTATION
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999421973042307	WITHOUT_CLASSIFICATION	5.7802695769168625E-5	IMPLEMENTATION
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999637522108087	WITHOUT_CLASSIFICATION	3.624778919135187E-5	IMPLEMENTATION
// never visited, should be ok	WITHOUT_CLASSIFICATION	0.9998982909291707	WITHOUT_CLASSIFICATION	1.0170907082930383E-4	IMPLEMENTATION
// If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil	WITHOUT_CLASSIFICATION	0.9999758061403832	WITHOUT_CLASSIFICATION	2.419385961679207E-5	IMPLEMENTATION
// JRUBY-530 until case	WITHOUT_CLASSIFICATION	0.9999192256684531	WITHOUT_CLASSIFICATION	8.077433154686767E-5	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.9999236591270974	WITHOUT_CLASSIFICATION	7.634087290266614E-5	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999845567194575	WITHOUT_CLASSIFICATION	1.5443280542476044E-5	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999249222587279	WITHOUT_CLASSIFICATION	7.507774127205205E-5	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999495994641935	WITHOUT_CLASSIFICATION	5.040053580651325E-5	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999495994641935	WITHOUT_CLASSIFICATION	5.040053580651325E-5	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999845567194575	WITHOUT_CLASSIFICATION	1.5443280542476044E-5	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999844033764009	WITHOUT_CLASSIFICATION	1.5596623599020062E-5	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999844033764009	WITHOUT_CLASSIFICATION	1.5596623599020062E-5	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999931197391564	WITHOUT_CLASSIFICATION	6.880260843617601E-6	IMPLEMENTATION
// Empirical Observations: // null -> Some arity // argsNode == this.argsNode then check for arity changes // newline(splatnode) -> argspushnode	WITHOUT_CLASSIFICATION	0.9999781305287945	WITHOUT_CLASSIFICATION	2.186947120562317E-5	IMPLEMENTATION
//assert !(value instanceof RubyArray)  : "Not an array";	WITHOUT_CLASSIFICATION	0.9999609337383356	WITHOUT_CLASSIFICATION	3.906626166444557E-5	IMPLEMENTATION
// Serialization killed our dynamic scope.  We can just create an empty one // since serialization cannot serialize an eval (which is the only thing // which is capable of having a non-empty dynamic scope).	WITHOUT_CLASSIFICATION	0.9999965881656385	WITHOUT_CLASSIFICATION	3.411834361431717E-6	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999211137008382	WITHOUT_CLASSIFICATION	7.888629916174846E-5	IMPLEMENTATION
// We could probably also detect if LHS value came out of cache and avoid some of this	WITHOUT_CLASSIFICATION	0.9999855657276446	WITHOUT_CLASSIFICATION	1.4434272355392545E-5	IMPLEMENTATION
//        assert thenBody != null : "thenBody is not null"; //        assert elseBody != null : "elseBody is not null";	WITHOUT_CLASSIFICATION	0.9999887314770649	WITHOUT_CLASSIFICATION	1.126852293516116E-5	IMPLEMENTATION
// add in reverse order	WITHOUT_CLASSIFICATION	0.9999658891848927	WITHOUT_CLASSIFICATION	3.411081510726931E-5	IMPLEMENTATION
// in order to make pragma's noops we set location to a special value	WITHOUT_CLASSIFICATION	0.9999888521540211	WITHOUT_CLASSIFICATION	1.1147845978811977E-5	IMPLEMENTATION
// ignore compiler pragmas	WITHOUT_CLASSIFICATION	0.9999963706134484	WITHOUT_CLASSIFICATION	3.6293865517283276E-6	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999249222587279	WITHOUT_CLASSIFICATION	7.507774127205205E-5	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999495994641935	WITHOUT_CLASSIFICATION	5.040053580651325E-5	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999495994641935	WITHOUT_CLASSIFICATION	5.040053580651325E-5	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999845567194575	WITHOUT_CLASSIFICATION	1.5443280542476044E-5	IMPLEMENTATION
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.99995497712735	WITHOUT_CLASSIFICATION	4.502287265003097E-5	IMPLEMENTATION
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999637522108087	WITHOUT_CLASSIFICATION	3.624778919135187E-5	IMPLEMENTATION
// No actual test, so do 'when' if when expression is not nil	WITHOUT_CLASSIFICATION	0.9999416112612614	WITHOUT_CLASSIFICATION	5.838873873854603E-5	IMPLEMENTATION
// save entering the try if there's nothing to ensure	WITHOUT_CLASSIFICATION	0.9999932938842991	WITHOUT_CLASSIFICATION	6.706115700749991E-6	IMPLEMENTATION
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999147825387952	WITHOUT_CLASSIFICATION	8.521746120480684E-5	IMPLEMENTATION
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999147825387952	WITHOUT_CLASSIFICATION	8.521746120480684E-5	IMPLEMENTATION
// admittedly inefficient	WITHOUT_CLASSIFICATION	0.9999093655728931	WITHOUT_CLASSIFICATION	9.063442710694564E-5	IMPLEMENTATION
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999272298660573	WITHOUT_CLASSIFICATION	7.277013394273173E-5	IMPLEMENTATION
// What static scoping relationship exists when it comes into being.	WITHOUT_CLASSIFICATION	0.9999496715611891	WITHOUT_CLASSIFICATION	5.032843881092828E-5	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999334115657806	WITHOUT_CLASSIFICATION	6.658843421927445E-5	IMPLEMENTATION
// just rethrow	WITHOUT_CLASSIFICATION	0.9999484301825807	WITHOUT_CLASSIFICATION	5.156981741922568E-5	IMPLEMENTATION
// just rethrow	WITHOUT_CLASSIFICATION	0.9999484301825807	WITHOUT_CLASSIFICATION	5.156981741922568E-5	IMPLEMENTATION
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9998835034115291	WITHOUT_CLASSIFICATION	1.1649658847095455E-4	IMPLEMENTATION
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9998835034115291	WITHOUT_CLASSIFICATION	1.1649658847095455E-4	IMPLEMENTATION
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999393145400354	WITHOUT_CLASSIFICATION	6.068545996467005E-5	IMPLEMENTATION
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999393145400354	WITHOUT_CLASSIFICATION	6.068545996467005E-5	IMPLEMENTATION
// Execute rescue block	WITHOUT_CLASSIFICATION	0.9999413296203226	WITHOUT_CLASSIFICATION	5.867037967751444E-5	IMPLEMENTATION
// If no exception is thrown execute else block	WITHOUT_CLASSIFICATION	0.9999677203532357	WITHOUT_CLASSIFICATION	3.22796467643755E-5	IMPLEMENTATION
// index of variable for this arg	WITHOUT_CLASSIFICATION	0.9999680780384952	WITHOUT_CLASSIFICATION	3.1921961504914304E-5	IMPLEMENTATION
// only a marker interface	WITHOUT_CLASSIFICATION	0.99997493517734	WITHOUT_CLASSIFICATION	2.5064822660025357E-5	IMPLEMENTATION
// don't attempt to coerce to array, just wrap and return	WITHOUT_CLASSIFICATION	0.9999810170391098	WITHOUT_CLASSIFICATION	1.8982960890290227E-5	IMPLEMENTATION
// pragmas	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
// The method also needs a scope, do both	WITHOUT_CLASSIFICATION	0.9999531606133398	WITHOUT_CLASSIFICATION	4.6839386660187385E-5	IMPLEMENTATION
// We're doing normal framed compilation or the method needs a frame	WITHOUT_CLASSIFICATION	0.9999387162572493	WITHOUT_CLASSIFICATION	6.128374275073657E-5	IMPLEMENTATION
// The method doesn't need a scope or static scope; frame only	WITHOUT_CLASSIFICATION	0.9999753929224946	WITHOUT_CLASSIFICATION	2.4607077505302676E-5	IMPLEMENTATION
// The method doesn't need a scope, but has static scope needs; use a dummy scope	WITHOUT_CLASSIFICATION	0.9999737009258467	WITHOUT_CLASSIFICATION	2.629907415329045E-5	IMPLEMENTATION
// Proc.new needs the caller's block to instantiate a proc	WITHOUT_CLASSIFICATION	0.9999805179536969	WITHOUT_CLASSIFICATION	1.9482046303117852E-5	IMPLEMENTATION
// check for Proc.new, an especially magic method	WITHOUT_CLASSIFICATION	0.9999880532831564	WITHOUT_CLASSIFICATION	1.1946716843600908E-5	IMPLEMENTATION
// long, slow way causes disabling	WITHOUT_CLASSIFICATION	0.9999568940105826	WITHOUT_CLASSIFICATION	4.310598941734561E-5	IMPLEMENTATION
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999205313649814	WITHOUT_CLASSIFICATION	7.94686350186972E-5	IMPLEMENTATION
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999205313649814	WITHOUT_CLASSIFICATION	7.94686350186972E-5	IMPLEMENTATION
// long, slow way causes disabling for defined	WITHOUT_CLASSIFICATION	0.9999643137696757	WITHOUT_CLASSIFICATION	3.5686230324313255E-5	IMPLEMENTATION
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999463323094682	WITHOUT_CLASSIFICATION	5.3667690531832594E-5	IMPLEMENTATION
// Because Regexp#=== sets backref, we have to make this backref-aware	WITHOUT_CLASSIFICATION	0.9997085418411735	WITHOUT_CLASSIFICATION	2.914581588264697E-4	IMPLEMENTATION
// encountered a node we don't recognize, set everything to true to disable optz	WITHOUT_CLASSIFICATION	0.9999836954886945	WITHOUT_CLASSIFICATION	1.630451130556524E-5	IMPLEMENTATION
// only arrays that are "lightweight" are being used as args arrays	WITHOUT_CLASSIFICATION	0.9999706136877948	WITHOUT_CLASSIFICATION	2.9386312205069363E-5	IMPLEMENTATION
// otherwise, it's a literal array	WITHOUT_CLASSIFICATION	0.999948222299476	WITHOUT_CLASSIFICATION	5.177770052405944E-5	IMPLEMENTATION
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999534890805449	WITHOUT_CLASSIFICATION	4.65109194550887E-5	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999502907298041	WITHOUT_CLASSIFICATION	4.970927019585538E-5	IMPLEMENTATION
// compile first node as non-expr and then second node	WITHOUT_CLASSIFICATION	0.999971781664763	WITHOUT_CLASSIFICATION	2.8218335237050078E-5	IMPLEMENTATION
// last node, either !instanceof WhenNode or null, is the else	WITHOUT_CLASSIFICATION	0.999968346860601	WITHOUT_CLASSIFICATION	3.1653139398945244E-5	IMPLEMENTATION
// compile first node only	WITHOUT_CLASSIFICATION	0.9999548127050218	WITHOUT_CLASSIFICATION	4.518729497817759E-5	IMPLEMENTATION
// splatted when, can't do it yet	WITHOUT_CLASSIFICATION	0.999943125872445	WITHOUT_CLASSIFICATION	5.687412755498172E-5	IMPLEMENTATION
// if __send__ with a literal symbol, compile it as a direct fcall	WITHOUT_CLASSIFICATION	0.9999609456705589	WITHOUT_CLASSIFICATION	3.9054329441039406E-5	IMPLEMENTATION
// NOTE: Currently this optimization is limited to the following situations: // * All expressions must be int-ranged literal fixnums // It also still emits the code for the "safe" when logic, which is rather // wasteful (since it essentially doubles each code body). As such it is // normally disabled, but it serves as an example of how this optimization // could be done. Ideally, it should be combined with the when processing // to improve code reuse before it's generally available.	WITHOUT_CLASSIFICATION	0.9999966171285425	WITHOUT_CLASSIFICATION	3.3828714573849332E-6	IMPLEMENTATION
// aggregate when nodes into a list, unfortunately, this is no	WITHOUT_CLASSIFICATION	0.999945440380317	WITHOUT_CLASSIFICATION	5.455961968302416E-5	IMPLEMENTATION
// one arg but it's an array, treat it as a proper array	WITHOUT_CLASSIFICATION	0.9999459165942992	WITHOUT_CLASSIFICATION	5.408340570077035E-5	IMPLEMENTATION
// can't do it	WITHOUT_CLASSIFICATION	0.9999460246107504	WITHOUT_CLASSIFICATION	5.397538924961249E-5	IMPLEMENTATION
// otherwise, use normal args compiler	WITHOUT_CLASSIFICATION	0.9999533888042372	WITHOUT_CLASSIFICATION	4.661119576286782E-5	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999309896673507	WITHOUT_CLASSIFICATION	6.90103326493227E-5	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999309896673507	WITHOUT_CLASSIFICATION	6.90103326493227E-5	IMPLEMENTATION
// these are all simple cases that don't require the heavier defined logic	WITHOUT_CLASSIFICATION	0.9999820449097001	WITHOUT_CLASSIFICATION	1.7955090299960157E-5	IMPLEMENTATION
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9999493845122644	WITHOUT_CLASSIFICATION	5.061548773560568E-5	IMPLEMENTATION
//[]	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
//[]	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
//          context.swapValues(); //context.consumeCurrentValue();	WITHOUT_CLASSIFICATION	0.9999736123567258	WITHOUT_CLASSIFICATION	2.6387643274207058E-5	IMPLEMENTATION
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[] //[self] //[RubyClass] //[RubyClass, RubyClass]	WITHOUT_CLASSIFICATION	0.9999239226629478	WITHOUT_CLASSIFICATION	7.60773370521456E-5	IMPLEMENTATION
//[RubyClass]	WITHOUT_CLASSIFICATION	0.9999054287152918	WITHOUT_CLASSIFICATION	9.457128470817263E-5	IMPLEMENTATION
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9999239226629478	WITHOUT_CLASSIFICATION	7.60773370521456E-5	IMPLEMENTATION
// if root of method is rescue, compile as a light rescue	WITHOUT_CLASSIFICATION	0.9999465391264364	WITHOUT_CLASSIFICATION	5.3460873563697236E-5	IMPLEMENTATION
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999345295597895	WITHOUT_CLASSIFICATION	6.547044021049593E-5	IMPLEMENTATION
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999345295597895	WITHOUT_CLASSIFICATION	6.547044021049593E-5	IMPLEMENTATION
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999860403840267	WITHOUT_CLASSIFICATION	1.3959615973307176E-5	IMPLEMENTATION
// if root of method is rescue, compile as light rescue	WITHOUT_CLASSIFICATION	0.9999437755079562	WITHOUT_CLASSIFICATION	5.622449204371308E-5	IMPLEMENTATION
// invoke run with threadcontext and topself	WITHOUT_CLASSIFICATION	0.9999452559352403	WITHOUT_CLASSIFICATION	5.4744064759690655E-5	IMPLEMENTATION
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9999501413842734	WITHOUT_CLASSIFICATION	4.9858615726664285E-5	IMPLEMENTATION
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9999493845122644	WITHOUT_CLASSIFICATION	5.061548773560568E-5	IMPLEMENTATION
//[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9999054287152918	WITHOUT_CLASSIFICATION	9.457128470817263E-5	IMPLEMENTATION
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9999341913059016	WITHOUT_CLASSIFICATION	6.580869409849098E-5	IMPLEMENTATION
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9999341913059016	WITHOUT_CLASSIFICATION	6.580869409849098E-5	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999692306231438	WITHOUT_CLASSIFICATION	3.076937685616412E-5	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999975037167882	WITHOUT_CLASSIFICATION	2.4962832117109756E-6	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999975037167882	WITHOUT_CLASSIFICATION	2.4962832117109756E-6	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999354754558334	WITHOUT_CLASSIFICATION	6.452454416666445E-5	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999354754558334	WITHOUT_CLASSIFICATION	6.452454416666445E-5	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999354754558334	WITHOUT_CLASSIFICATION	6.452454416666445E-5	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999975037167882	WITHOUT_CLASSIFICATION	2.4962832117109756E-6	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999975037167882	WITHOUT_CLASSIFICATION	2.4962832117109756E-6	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999692306231438	WITHOUT_CLASSIFICATION	3.076937685616412E-5	IMPLEMENTATION
// force heap-scope behavior, since it uses parent's scope	WITHOUT_CLASSIFICATION	0.9999631283621354	WITHOUT_CLASSIFICATION	3.6871637864578004E-5	IMPLEMENTATION
// always false or nil	WITHOUT_CLASSIFICATION	0.9999353969154269	WITHOUT_CLASSIFICATION	6.460308457309235E-5	IMPLEMENTATION
// optimizations if we know ahead of time it will always be true or false	WITHOUT_CLASSIFICATION	0.9999694291705922	WITHOUT_CLASSIFICATION	3.057082940782897E-5	IMPLEMENTATION
// normal	WITHOUT_CLASSIFICATION	0.9970085925582619	WITHOUT_CLASSIFICATION	0.002991407441738217	IMPLEMENTATION
// compile condition as non-expr and just compile "then" body	WITHOUT_CLASSIFICATION	0.999957420875691	WITHOUT_CLASSIFICATION	4.2579124309145754E-5	IMPLEMENTATION
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9999556167728714	WITHOUT_CLASSIFICATION	4.4383227128650514E-5	IMPLEMENTATION
// just push nil for pragmas	WITHOUT_CLASSIFICATION	0.999936721420894	WITHOUT_CLASSIFICATION	6.327857910608245E-5	IMPLEMENTATION
// "assignment" means the value is already on the stack	WITHOUT_CLASSIFICATION	0.9999855687263786	WITHOUT_CLASSIFICATION	1.4431273621327532E-5	IMPLEMENTATION
// compile first node only	WITHOUT_CLASSIFICATION	0.9999548127050218	WITHOUT_CLASSIFICATION	4.518729497817759E-5	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999975037167882	WITHOUT_CLASSIFICATION	2.4962832117109756E-6	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999975037167882	WITHOUT_CLASSIFICATION	2.4962832117109756E-6	IMPLEMENTATION
// eval new value, call operator on old value, and assign	WITHOUT_CLASSIFICATION	0.9999624521747378	WITHOUT_CLASSIFICATION	3.754782526213977E-5	IMPLEMENTATION
// try optz version	WITHOUT_CLASSIFICATION	0.9999466518771283	WITHOUT_CLASSIFICATION	5.334812287174484E-5	IMPLEMENTATION
// sizes must match	WITHOUT_CLASSIFICATION	0.999940434908363	WITHOUT_CLASSIFICATION	5.956509163686508E-5	IMPLEMENTATION
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999843473668153	WITHOUT_CLASSIFICATION	1.5652633184646887E-5	IMPLEMENTATION
// normal items at the "head" of the masgn	WITHOUT_CLASSIFICATION	0.9999754514201615	WITHOUT_CLASSIFICATION	2.4548579838455017E-5	IMPLEMENTATION
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999838515205448	WITHOUT_CLASSIFICATION	1.6148479455228834E-5	IMPLEMENTATION
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999463826733646	WITHOUT_CLASSIFICATION	5.3617326635557745E-5	IMPLEMENTATION
// only supports simple parallel assignment of up to 10 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999914512208795	WITHOUT_CLASSIFICATION	8.548779120522417E-6	IMPLEMENTATION
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999770480980432	WITHOUT_CLASSIFICATION	2.2951901956825726E-5	IMPLEMENTATION
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999620799149047	WITHOUT_CLASSIFICATION	3.792008509522772E-5	IMPLEMENTATION
//RedoNode redoNode = (RedoNode)node;	WITHOUT_CLASSIFICATION	0.9999233869826543	WITHOUT_CLASSIFICATION	7.661301734570275E-5	IMPLEMENTATION
// done processing args	WITHOUT_CLASSIFICATION	0.9999484678101973	WITHOUT_CLASSIFICATION	5.153218980273596E-5	IMPLEMENTATION
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999560346851142	WITHOUT_CLASSIFICATION	4.3965314885811866E-5	IMPLEMENTATION
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9998931316598343	WITHOUT_CLASSIFICATION	1.0686834016572055E-4	IMPLEMENTATION
// if arity 1, just compile the one element to save us the array cost	WITHOUT_CLASSIFICATION	0.9999794765550856	WITHOUT_CLASSIFICATION	2.052344491446072E-5	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
// compile into array	WITHOUT_CLASSIFICATION	0.9999454480766706	WITHOUT_CLASSIFICATION	5.455192332946178E-5	IMPLEMENTATION
// compile first node as non-expr and compile second node	WITHOUT_CLASSIFICATION	0.9999721866333984	WITHOUT_CLASSIFICATION	2.781336660158989E-5	IMPLEMENTATION
// check if it's an immediate, and don't outline	WITHOUT_CLASSIFICATION	0.999985943200024	WITHOUT_CLASSIFICATION	1.4056799976016281E-5	IMPLEMENTATION
// condition is always true, just compile it and not body	WITHOUT_CLASSIFICATION	0.9999733628341972	WITHOUT_CLASSIFICATION	2.663716580269177E-5	IMPLEMENTATION
// force static scope to claim restarg at 0, so it only implements the [] version of __file__	WITHOUT_CLASSIFICATION	0.999153097445259	WITHOUT_CLASSIFICATION	8.469025547409529E-4	IMPLEMENTATION
// create method for toplevel of script	WITHOUT_CLASSIFICATION	0.9999802204168208	WITHOUT_CLASSIFICATION	1.9779583179225263E-5	IMPLEMENTATION
// it's a multiple-statement body, iterate over all elements in turn and chain if it get too long	WITHOUT_CLASSIFICATION	0.9999771661577039	WITHOUT_CLASSIFICATION	2.2833842296009985E-5	IMPLEMENTATION
// send it along as arity-specific, we don't need the array	WITHOUT_CLASSIFICATION	0.9999771953699104	WITHOUT_CLASSIFICATION	2.280463008970268E-5	IMPLEMENTATION
// single-statement body, just compile it	WITHOUT_CLASSIFICATION	0.9999505899892495	WITHOUT_CLASSIFICATION	4.941001075052905E-5	IMPLEMENTATION
// leave as a normal array	WITHOUT_CLASSIFICATION	0.9999351558664566	WITHOUT_CLASSIFICATION	6.484413354335594E-5	IMPLEMENTATION
// This method has JITed already or has been abandoned. Bail out.	WITHOUT_CLASSIFICATION	0.9999580549232556	WITHOUT_CLASSIFICATION	4.194507674439618E-5	IMPLEMENTATION
// The cache is full. Abandon JIT for this method and bail out.	WITHOUT_CLASSIFICATION	0.9999577072776287	WITHOUT_CLASSIFICATION	4.229272237124443E-5	IMPLEMENTATION
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999860403840267	WITHOUT_CLASSIFICATION	1.3959615973307176E-5	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999975037167882	WITHOUT_CLASSIFICATION	2.4962832117109756E-6	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999975037167882	WITHOUT_CLASSIFICATION	2.4962832117109756E-6	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999692306231438	WITHOUT_CLASSIFICATION	3.076937685616412E-5	IMPLEMENTATION
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9999556167728714	WITHOUT_CLASSIFICATION	4.4383227128650514E-5	IMPLEMENTATION
// try optz version	WITHOUT_CLASSIFICATION	0.9999466518771283	WITHOUT_CLASSIFICATION	5.334812287174484E-5	IMPLEMENTATION
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999843473668153	WITHOUT_CLASSIFICATION	1.5652633184646887E-5	IMPLEMENTATION
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999838515205448	WITHOUT_CLASSIFICATION	1.6148479455228834E-5	IMPLEMENTATION
// sizes must match	WITHOUT_CLASSIFICATION	0.999940434908363	WITHOUT_CLASSIFICATION	5.956509163686508E-5	IMPLEMENTATION
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999463826733646	WITHOUT_CLASSIFICATION	5.3617326635557745E-5	IMPLEMENTATION
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999620799149047	WITHOUT_CLASSIFICATION	3.792008509522772E-5	IMPLEMENTATION
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999770480980432	WITHOUT_CLASSIFICATION	2.2951901956825726E-5	IMPLEMENTATION
// done processing args	WITHOUT_CLASSIFICATION	0.9999484678101973	WITHOUT_CLASSIFICATION	5.153218980273596E-5	IMPLEMENTATION
// Check if the method has been explicitly excluded	WITHOUT_CLASSIFICATION	0.99999353258491	WITHOUT_CLASSIFICATION	6.467415090040971E-6	IMPLEMENTATION
// class could not be found nor generated; give up on JIT and bail out	WITHOUT_CLASSIFICATION	0.9999607807825924	WITHOUT_CLASSIFICATION	3.9219217407534E-5	IMPLEMENTATION
// successfully got back a jitted method	WITHOUT_CLASSIFICATION	0.9999854807272549	WITHOUT_CLASSIFICATION	1.451927274498922E-5	IMPLEMENTATION
// finally, grab the script	WITHOUT_CLASSIFICATION	0.999958572015243	WITHOUT_CLASSIFICATION	4.142798475694308E-5	IMPLEMENTATION
// logEvery n methods based on configuration	WITHOUT_CLASSIFICATION	0.9999677964274114	WITHOUT_CLASSIFICATION	3.220357258862042E-5	IMPLEMENTATION
// Time the compilation	WITHOUT_CLASSIFICATION	0.9999408592147664	WITHOUT_CLASSIFICATION	5.914078523367294E-5	IMPLEMENTATION
// we have a body, do a full-on method	WITHOUT_CLASSIFICATION	0.9999707355724269	WITHOUT_CLASSIFICATION	2.926442757304226E-5	IMPLEMENTATION
// If we don't have a body, check for required or opt args // if opt args, they could have side effects // if required args, need to raise errors if too few args passed // otherwise, method does nothing, make it a nop	WITHOUT_CLASSIFICATION	0.999996123710154	WITHOUT_CLASSIFICATION	3.876289845975119E-6	IMPLEMENTATION
// if we haven't already decided on a do-nothing call	WITHOUT_CLASSIFICATION	0.9999863719138278	WITHOUT_CLASSIFICATION	1.3628086172104848E-5	IMPLEMENTATION
// only supports simple parallel assignment of up to 4 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999916533483959	WITHOUT_CLASSIFICATION	8.346651604132321E-6	IMPLEMENTATION
// normal items at the front or back of the masgn	WITHOUT_CLASSIFICATION	0.9999788331901254	WITHOUT_CLASSIFICATION	2.1166809874699852E-5	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999750520229583	WITHOUT_CLASSIFICATION	2.4947977041662802E-5	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999658907079789	WITHOUT_CLASSIFICATION	3.410929202112194E-5	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999712650550083	WITHOUT_CLASSIFICATION	2.8734944991642873E-5	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999954301673329	WITHOUT_CLASSIFICATION	4.569832667082454E-6	IMPLEMENTATION
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999691029527168	WITHOUT_CLASSIFICATION	3.089704728318065E-5	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999650248768897	WITHOUT_CLASSIFICATION	3.497512311037395E-5	IMPLEMENTATION
// Define the annotation for the method	WITHOUT_CLASSIFICATION	0.9999888108409488	WITHOUT_CLASSIFICATION	1.1189159051100174E-5	IMPLEMENTATION
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999890824619757	WITHOUT_CLASSIFICATION	1.0917538024322348E-5	IMPLEMENTATION
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999725536977276	WITHOUT_CLASSIFICATION	2.744630227225763E-5	IMPLEMENTATION
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.999967288635433	WITHOUT_CLASSIFICATION	3.271136456699549E-5	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999728894846878	WITHOUT_CLASSIFICATION	2.7110515312295086E-5	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999728894846878	WITHOUT_CLASSIFICATION	2.7110515312295086E-5	IMPLEMENTATION
// value is already on stack, save it for later	WITHOUT_CLASSIFICATION	0.9999898279529619	WITHOUT_CLASSIFICATION	1.0172047038090239E-5	IMPLEMENTATION
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9999377653474573	WITHOUT_CLASSIFICATION	6.223465254274673E-5	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.99990753180833	WITHOUT_CLASSIFICATION	9.246819167002639E-5	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.99990753180833	WITHOUT_CLASSIFICATION	9.246819167002639E-5	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.99990753180833	WITHOUT_CLASSIFICATION	9.246819167002639E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
/*arg2*/	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
/*args*/	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9999377653474573	WITHOUT_CLASSIFICATION	6.223465254274673E-5	IMPLEMENTATION
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.999966506106632	WITHOUT_CLASSIFICATION	3.349389336802677E-5	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.99990753180833	WITHOUT_CLASSIFICATION	9.246819167002639E-5	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.99990753180833	WITHOUT_CLASSIFICATION	9.246819167002639E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
/*args*/	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
// get call site and thread context	WITHOUT_CLASSIFICATION	0.999967205042084	WITHOUT_CLASSIFICATION	3.279495791595155E-5	IMPLEMENTATION
// get call site and thread context	WITHOUT_CLASSIFICATION	0.999967205042084	WITHOUT_CLASSIFICATION	3.279495791595155E-5	IMPLEMENTATION
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999500856142614	WITHOUT_CLASSIFICATION	4.991438573861658E-5	IMPLEMENTATION
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999500856142614	WITHOUT_CLASSIFICATION	4.991438573861658E-5	IMPLEMENTATION
// invoke	WITHOUT_CLASSIFICATION	0.997253097367876	WITHOUT_CLASSIFICATION	0.0027469026321240574	IMPLEMENTATION
// invoke	WITHOUT_CLASSIFICATION	0.997253097367876	WITHOUT_CLASSIFICATION	0.0027469026321240574	IMPLEMENTATION
// check if it's true, ending if so	WITHOUT_CLASSIFICATION	0.9999769850845944	WITHOUT_CLASSIFICATION	2.3014915405523955E-5	IMPLEMENTATION
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.999863355194835	WITHOUT_CLASSIFICATION	1.366448051649551E-4	IMPLEMENTATION
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.999863355194835	WITHOUT_CLASSIFICATION	1.366448051649551E-4	IMPLEMENTATION
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999613524935577	WITHOUT_CLASSIFICATION	3.86475064423004E-5	IMPLEMENTATION
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999613524935577	WITHOUT_CLASSIFICATION	3.86475064423004E-5	IMPLEMENTATION
// eval value for assignment	WITHOUT_CLASSIFICATION	0.99996724137028	WITHOUT_CLASSIFICATION	3.2758629719950434E-5	IMPLEMENTATION
// call site	WITHOUT_CLASSIFICATION	0.9999144791489328	WITHOUT_CLASSIFICATION	8.552085106717125E-5	IMPLEMENTATION
// call site	WITHOUT_CLASSIFICATION	0.9999144791489328	WITHOUT_CLASSIFICATION	8.552085106717125E-5	IMPLEMENTATION
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999528647662087	WITHOUT_CLASSIFICATION	4.7135233791247275E-5	IMPLEMENTATION
// check if it's true, ending if not	WITHOUT_CLASSIFICATION	0.9999783072647901	WITHOUT_CLASSIFICATION	2.1692735209829318E-5	IMPLEMENTATION
// eval value and save it	WITHOUT_CLASSIFICATION	0.9999641987240753	WITHOUT_CLASSIFICATION	3.580127592474485E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999528647662087	WITHOUT_CLASSIFICATION	4.7135233791247275E-5	IMPLEMENTATION
// receiver, args, result, value	WITHOUT_CLASSIFICATION	0.9999603258244602	WITHOUT_CLASSIFICATION	3.9674175539770525E-5	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999069404067958	WITHOUT_CLASSIFICATION	9.305959320421319E-5	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999069404067958	WITHOUT_CLASSIFICATION	9.305959320421319E-5	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999069404067958	WITHOUT_CLASSIFICATION	9.305959320421319E-5	IMPLEMENTATION
// super uses current block if none given	WITHOUT_CLASSIFICATION	0.9999543938908798	WITHOUT_CLASSIFICATION	4.56061091202525E-5	IMPLEMENTATION
// args	WITHOUT_CLASSIFICATION	0.9966406905791091	WITHOUT_CLASSIFICATION	0.003359309420890908	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9965901650913201	WITHOUT_CLASSIFICATION	0.0034098349086799694	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9965901650913201	WITHOUT_CLASSIFICATION	0.0034098349086799694	IMPLEMENTATION
// no args, no block	WITHOUT_CLASSIFICATION	0.9999306117205972	WITHOUT_CLASSIFICATION	6.938827940281376E-5	IMPLEMENTATION
// no args, with block	WITHOUT_CLASSIFICATION	0.9999417367040432	WITHOUT_CLASSIFICATION	5.8263295956773324E-5	IMPLEMENTATION
// with args, no block	WITHOUT_CLASSIFICATION	0.9999272869100785	WITHOUT_CLASSIFICATION	7.271308992153625E-5	IMPLEMENTATION
// with args, with block	WITHOUT_CLASSIFICATION	0.999925648432535	WITHOUT_CLASSIFICATION	7.435156746509483E-5	IMPLEMENTATION
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999245236083929	WITHOUT_CLASSIFICATION	7.547639160700454E-5	IMPLEMENTATION
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999492715128403	WITHOUT_CLASSIFICATION	5.0728487159754146E-5	IMPLEMENTATION
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999492715128403	WITHOUT_CLASSIFICATION	5.0728487159754146E-5	IMPLEMENTATION
// arg and receiver already present on the stack	WITHOUT_CLASSIFICATION	0.9999550396959145	WITHOUT_CLASSIFICATION	4.496030408557039E-5	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999069404067958	WITHOUT_CLASSIFICATION	9.305959320421319E-5	IMPLEMENTATION
// args	WITHOUT_CLASSIFICATION	0.9966406905791091	WITHOUT_CLASSIFICATION	0.003359309420890908	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9965901650913201	WITHOUT_CLASSIFICATION	0.0034098349086799694	IMPLEMENTATION
// no args, no block	WITHOUT_CLASSIFICATION	0.9999306117205972	WITHOUT_CLASSIFICATION	6.938827940281376E-5	IMPLEMENTATION
// no args, with block	WITHOUT_CLASSIFICATION	0.9999417367040432	WITHOUT_CLASSIFICATION	5.8263295956773324E-5	IMPLEMENTATION
// with args, no block	WITHOUT_CLASSIFICATION	0.9999272869100785	WITHOUT_CLASSIFICATION	7.271308992153625E-5	IMPLEMENTATION
// with args, with block	WITHOUT_CLASSIFICATION	0.999925648432535	WITHOUT_CLASSIFICATION	7.435156746509483E-5	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
// retrieve scope from scopes array	WITHOUT_CLASSIFICATION	0.9999741526816401	WITHOUT_CLASSIFICATION	2.584731835986893E-5	IMPLEMENTATION
// use numbered access method	WITHOUT_CLASSIFICATION	0.9999568058100726	WITHOUT_CLASSIFICATION	4.319418992737654E-5	IMPLEMENTATION
// retrieve call site from sites array	WITHOUT_CLASSIFICATION	0.9999720703643067	WITHOUT_CLASSIFICATION	2.7929635693278822E-5	IMPLEMENTATION
// add name to call site list	WITHOUT_CLASSIFICATION	0.9999603151249712	WITHOUT_CLASSIFICATION	3.968487502884495E-5	IMPLEMENTATION
// module is on top of stack	WITHOUT_CLASSIFICATION	0.9999299625631992	WITHOUT_CLASSIFICATION	7.00374368008295E-5	IMPLEMENTATION
// build scope names string	WITHOUT_CLASSIFICATION	0.9999538318826008	WITHOUT_CLASSIFICATION	4.616811739919968E-5	IMPLEMENTATION
// build descriptor string	WITHOUT_CLASSIFICATION	0.999966265116039	WITHOUT_CLASSIFICATION	3.373488396103376E-5	IMPLEMENTATION
// build descriptor string	WITHOUT_CLASSIFICATION	0.999966265116039	WITHOUT_CLASSIFICATION	3.373488396103376E-5	IMPLEMENTATION
// generate call sites initialization code	WITHOUT_CLASSIFICATION	0.9999721096776156	WITHOUT_CLASSIFICATION	2.789032238434382E-5	IMPLEMENTATION
// generate symbols initialization code	WITHOUT_CLASSIFICATION	0.9999735960886845	WITHOUT_CLASSIFICATION	2.640391131542868E-5	IMPLEMENTATION
// generate fixnums initialization code	WITHOUT_CLASSIFICATION	0.9999737218400419	WITHOUT_CLASSIFICATION	2.62781599581228E-5	IMPLEMENTATION
// generate constants initialization code	WITHOUT_CLASSIFICATION	0.9999788615635261	WITHOUT_CLASSIFICATION	2.113843647388637E-5	IMPLEMENTATION
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999740841698783	WITHOUT_CLASSIFICATION	2.591583012161043E-5	IMPLEMENTATION
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999740841698783	WITHOUT_CLASSIFICATION	2.591583012161043E-5	IMPLEMENTATION
// generate variable readers initialization code	WITHOUT_CLASSIFICATION	0.9999788357476047	WITHOUT_CLASSIFICATION	2.1164252395310617E-5	IMPLEMENTATION
// generate variable writers initialization code	WITHOUT_CLASSIFICATION	0.9999795653713771	WITHOUT_CLASSIFICATION	2.0434628622957238E-5	IMPLEMENTATION
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999729895171232	WITHOUT_CLASSIFICATION	2.7010482876780774E-5	IMPLEMENTATION
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999729895171232	WITHOUT_CLASSIFICATION	2.7010482876780774E-5	IMPLEMENTATION
// generate bytelists initialization code	WITHOUT_CLASSIFICATION	0.9999737871247835	WITHOUT_CLASSIFICATION	2.6212875216559016E-5	IMPLEMENTATION
// generate method cache initialization code	WITHOUT_CLASSIFICATION	0.9999732277978883	WITHOUT_CLASSIFICATION	2.677220211166074E-5	IMPLEMENTATION
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999245236083929	WITHOUT_CLASSIFICATION	7.547639160700454E-5	IMPLEMENTATION
// use IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999348078795364	WITHOUT_CLASSIFICATION	6.519212046373622E-5	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999961690974191	WITHOUT_CLASSIFICATION	3.830902580900203E-6	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999668090182261	WITHOUT_CLASSIFICATION	3.319098177393251E-5	IMPLEMENTATION
// No point in updating number if last number was same value.	WITHOUT_CLASSIFICATION	0.9999806957887221	WITHOUT_CLASSIFICATION	1.9304211277900703E-5	IMPLEMENTATION
// load Object under value	WITHOUT_CLASSIFICATION	0.9999704713314306	WITHOUT_CLASSIFICATION	2.9528668569463218E-5	IMPLEMENTATION
// put under object array already present	WITHOUT_CLASSIFICATION	0.9999703396273781	WITHOUT_CLASSIFICATION	2.9660372621915803E-5	IMPLEMENTATION
// if element count is less than 6, use helper methods	WITHOUT_CLASSIFICATION	0.9999820005020762	WITHOUT_CLASSIFICATION	1.7999497923762505E-5	IMPLEMENTATION
// This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements	WITHOUT_CLASSIFICATION	0.9999877865747374	WITHOUT_CLASSIFICATION	1.221342526266692E-5	IMPLEMENTATION
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.999986304161308	WITHOUT_CLASSIFICATION	1.3695838692159274E-5	IMPLEMENTATION
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.999986304161308	WITHOUT_CLASSIFICATION	1.3695838692159274E-5	IMPLEMENTATION
// brute force construction inline	WITHOUT_CLASSIFICATION	0.99993903715018	WITHOUT_CLASSIFICATION	6.096284982007748E-5	IMPLEMENTATION
// brute force construction inline	WITHOUT_CLASSIFICATION	0.99993903715018	WITHOUT_CLASSIFICATION	6.096284982007748E-5	IMPLEMENTATION
// use specific-arity for as much as possible	WITHOUT_CLASSIFICATION	0.9999667521814954	WITHOUT_CLASSIFICATION	3.3247818504601596E-5	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999572437419232	WITHOUT_CLASSIFICATION	4.275625807684439E-5	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999572437419232	WITHOUT_CLASSIFICATION	4.275625807684439E-5	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999572437419232	WITHOUT_CLASSIFICATION	4.275625807684439E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999280420428835	WITHOUT_CLASSIFICATION	7.195795711643151E-5	IMPLEMENTATION
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.99994503634701	WITHOUT_CLASSIFICATION	5.496365298993644E-5	IMPLEMENTATION
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.99994503634701	WITHOUT_CLASSIFICATION	5.496365298993644E-5	IMPLEMENTATION
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999884112498905	WITHOUT_CLASSIFICATION	1.1588750109459357E-5	IMPLEMENTATION
// check the condition	WITHOUT_CLASSIFICATION	0.9999779495588429	WITHOUT_CLASSIFICATION	2.2050441157163765E-5	IMPLEMENTATION
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999173811995334	WITHOUT_CLASSIFICATION	8.261880046647559E-5	IMPLEMENTATION
// skip catch block	WITHOUT_CLASSIFICATION	0.9998964964108227	WITHOUT_CLASSIFICATION	1.0350358917722411E-4	IMPLEMENTATION
// catch logic for flow-control: next, break	WITHOUT_CLASSIFICATION	0.9999344029650494	WITHOUT_CLASSIFICATION	6.55970349504978E-5	IMPLEMENTATION
// next jump	WITHOUT_CLASSIFICATION	0.9999096801433986	WITHOUT_CLASSIFICATION	9.031985660137355E-5	IMPLEMENTATION
// exceptionNext target is for a next that doesn't push a new value, like this one	WITHOUT_CLASSIFICATION	0.9999269240521759	WITHOUT_CLASSIFICATION	7.307594782413583E-5	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999658907079789	WITHOUT_CLASSIFICATION	3.410929202112194E-5	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999658907079789	WITHOUT_CLASSIFICATION	3.410929202112194E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999280420428835	WITHOUT_CLASSIFICATION	7.195795711643151E-5	IMPLEMENTATION
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999884112498905	WITHOUT_CLASSIFICATION	1.1588750109459357E-5	IMPLEMENTATION
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999724552900636	WITHOUT_CLASSIFICATION	2.7544709936356057E-5	IMPLEMENTATION
// check the condition	WITHOUT_CLASSIFICATION	0.9999779495588429	WITHOUT_CLASSIFICATION	2.2050441157163765E-5	IMPLEMENTATION
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999173811995334	WITHOUT_CLASSIFICATION	8.261880046647559E-5	IMPLEMENTATION
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999763395241803	WITHOUT_CLASSIFICATION	2.366047581976568E-5	IMPLEMENTATION
// break jump	WITHOUT_CLASSIFICATION	0.9999581824164722	WITHOUT_CLASSIFICATION	4.181758352777381E-5	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999543034883959	WITHOUT_CLASSIFICATION	4.569651160414094E-5	IMPLEMENTATION
//[reg]	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
// for regular expressions with the /o flag	WITHOUT_CLASSIFICATION	0.9997810995817905	WITHOUT_CLASSIFICATION	2.1890041820956475E-4	IMPLEMENTATION
// inside a loop, jump to body	WITHOUT_CLASSIFICATION	0.9999301768876537	WITHOUT_CLASSIFICATION	6.982311234622438E-5	IMPLEMENTATION
// inside a loop, jump to conditional	WITHOUT_CLASSIFICATION	0.9999472087639079	WITHOUT_CLASSIFICATION	5.2791236092231685E-5	IMPLEMENTATION
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999763395241803	WITHOUT_CLASSIFICATION	2.366047581976568E-5	IMPLEMENTATION
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999829810434471	WITHOUT_CLASSIFICATION	1.7018956552907777E-5	IMPLEMENTATION
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999829810434471	WITHOUT_CLASSIFICATION	1.7018956552907777E-5	IMPLEMENTATION
// if more than 4 vars, get values array too	WITHOUT_CLASSIFICATION	0.9999675893439808	WITHOUT_CLASSIFICATION	3.241065601928976E-5	IMPLEMENTATION
// retry handling in the rescue block	WITHOUT_CLASSIFICATION	0.9999598596570193	WITHOUT_CLASSIFICATION	4.01403429807508E-5	IMPLEMENTATION
// any exceptions raised must continue to be raised, skipping $! restoration	WITHOUT_CLASSIFICATION	0.999929756823316	WITHOUT_CLASSIFICATION	7.024317668397169E-5	IMPLEMENTATION
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9998895490457949	WITHOUT_CLASSIFICATION	1.1045095420524108E-4	IMPLEMENTATION
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999813792185686	WITHOUT_CLASSIFICATION	1.8620781431482918E-5	IMPLEMENTATION
// Handle Flow exceptions, just propagating them	WITHOUT_CLASSIFICATION	0.9999021051127567	WITHOUT_CLASSIFICATION	9.789488724333797E-5	IMPLEMENTATION
// rethrow to outer flow catcher	WITHOUT_CLASSIFICATION	0.9999489564892539	WITHOUT_CLASSIFICATION	5.104351074618527E-5	IMPLEMENTATION
// Handle Ruby exceptions (RaiseException)	WITHOUT_CLASSIFICATION	0.9999130628970204	WITHOUT_CLASSIFICATION	8.693710297963767E-5	IMPLEMENTATION
// inside a loop, break out of it // go to end of loop, leaving break value on stack	WITHOUT_CLASSIFICATION	0.9999746661986975	WITHOUT_CLASSIFICATION	2.5333801302471038E-5	IMPLEMENTATION
// false // zero	WITHOUT_CLASSIFICATION	0.9999333343502895	WITHOUT_CLASSIFICATION	6.666564971052132E-5	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.999977255886126	WITHOUT_CLASSIFICATION	2.2744113874053834E-5	IMPLEMENTATION
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9998895490457949	WITHOUT_CLASSIFICATION	1.1045095420524108E-4	IMPLEMENTATION
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999813792185686	WITHOUT_CLASSIFICATION	1.8620781431482918E-5	IMPLEMENTATION
// retry handling in the rescue blocks	WITHOUT_CLASSIFICATION	0.9999607665161444	WITHOUT_CLASSIFICATION	3.923348385555908E-5	IMPLEMENTATION
// push false	WITHOUT_CLASSIFICATION	0.9999137708890893	WITHOUT_CLASSIFICATION	8.62291109107038E-5	IMPLEMENTATION
//method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));	WITHOUT_CLASSIFICATION	0.9999770154817087	WITHOUT_CLASSIFICATION	2.2984518291316985E-5	IMPLEMENTATION
//method.ifnonnull(trueLabel);	WITHOUT_CLASSIFICATION	0.9999201474195755	WITHOUT_CLASSIFICATION	7.98525804245142E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)   //[C]	WITHOUT_CLASSIFICATION	0.9999341160724994	WITHOUT_CLASSIFICATION	6.58839275006266E-5	IMPLEMENTATION
//[C, C] //[C, C, String] //[C, null|C]	WITHOUT_CLASSIFICATION	0.9999388065209099	WITHOUT_CLASSIFICATION	6.119347909008834E-5	IMPLEMENTATION
//[C]	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
// push true	WITHOUT_CLASSIFICATION	0.9999067210738939	WITHOUT_CLASSIFICATION	9.327892610606384E-5	IMPLEMENTATION
// EQ != 0 (i.e. true)	WITHOUT_CLASSIFICATION	0.9999171754211758	WITHOUT_CLASSIFICATION	8.28245788242106E-5	IMPLEMENTATION
//[?, ?] //[?, boolean]	WITHOUT_CLASSIFICATION	0.9999457502850386	WITHOUT_CLASSIFICATION	5.424971496128831E-5	IMPLEMENTATION
//[RubyModule] //[RubyModule, String]	WITHOUT_CLASSIFICATION	0.999939022427882	WITHOUT_CLASSIFICATION	6.097757211794635E-5	IMPLEMENTATION
//[boolean]	WITHOUT_CLASSIFICATION	0.9999241291980245	WITHOUT_CLASSIFICATION	7.587080197539834E-5	IMPLEMENTATION
// no receiver for singleton class	WITHOUT_CLASSIFICATION	0.9999588136854175	WITHOUT_CLASSIFICATION	4.118631458245771E-5	IMPLEMENTATION
// but there's a superclass passed in, use it	WITHOUT_CLASSIFICATION	0.9999663661928602	WITHOUT_CLASSIFICATION	3.363380713988521E-5	IMPLEMENTATION
// we re-set self to the class, but store the old self in a temporary local variable // this is to prevent it GCing in case the singleton is short-lived	WITHOUT_CLASSIFICATION	0.9999986779860303	WITHOUT_CLASSIFICATION	1.322013969758152E-6	IMPLEMENTATION
// set self to the class	WITHOUT_CLASSIFICATION	0.9999838779275686	WITHOUT_CLASSIFICATION	1.612207243137299E-5	IMPLEMENTATION
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999077835217169	WITHOUT_CLASSIFICATION	9.221647828305785E-5	IMPLEMENTATION
// static scope	WITHOUT_CLASSIFICATION	0.9999419437783492	WITHOUT_CLASSIFICATION	5.805622165079537E-5	IMPLEMENTATION
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999887401827291	WITHOUT_CLASSIFICATION	1.1259817270865299E-5	IMPLEMENTATION
// new instance to invoke run against	WITHOUT_CLASSIFICATION	0.9999497974385461	WITHOUT_CLASSIFICATION	5.020256145397076E-5	IMPLEMENTATION
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999077835217169	WITHOUT_CLASSIFICATION	9.221647828305785E-5	IMPLEMENTATION
// static scope	WITHOUT_CLASSIFICATION	0.9999419437783492	WITHOUT_CLASSIFICATION	5.805622165079537E-5	IMPLEMENTATION
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999887401827291	WITHOUT_CLASSIFICATION	1.1259817270865299E-5	IMPLEMENTATION
// finally with exception	WITHOUT_CLASSIFICATION	0.9999293646734467	WITHOUT_CLASSIFICATION	7.063532655326843E-5	IMPLEMENTATION
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999710550367534	WITHOUT_CLASSIFICATION	2.8944963246585647E-5	IMPLEMENTATION
// otherwise, there's a receiver, so we pass that in directly for the sclass logic	WITHOUT_CLASSIFICATION	0.9999867224300873	WITHOUT_CLASSIFICATION	1.327756991256021E-5	IMPLEMENTATION
// original exception is on stack	WITHOUT_CLASSIFICATION	0.9999580097444877	WITHOUT_CLASSIFICATION	4.199025551224332E-5	IMPLEMENTATION
// RaiseException is on stack, get RubyException out	WITHOUT_CLASSIFICATION	0.9999677144329383	WITHOUT_CLASSIFICATION	3.228556706172133E-5	IMPLEMENTATION
// updating position for same line; skip	WITHOUT_CLASSIFICATION	0.9999720756722972	WITHOUT_CLASSIFICATION	2.792432770291421E-5	IMPLEMENTATION
// callbacks to fill in method body	WITHOUT_CLASSIFICATION	0.9999198288171751	WITHOUT_CLASSIFICATION	8.017118282492763E-5	IMPLEMENTATION
// prepare to call "def" utility method to handle def logic	WITHOUT_CLASSIFICATION	0.9999185106072165	WITHOUT_CLASSIFICATION	8.14893927834684E-5	IMPLEMENTATION
// script object	WITHOUT_CLASSIFICATION	0.9999473823769331	WITHOUT_CLASSIFICATION	5.261762306682133E-5	IMPLEMENTATION
// arities	WITHOUT_CLASSIFICATION	0.9965990721371595	WITHOUT_CLASSIFICATION	0.00340092786284058	IMPLEMENTATION
// TODO assuming case is a fixnum	WITHOUT_CLASSIFICATION	0.9860605749355008	WITHOUT_CLASSIFICATION	0.013939425064499167	IMPLEMENTATION
// we have an input case, prepare branching logic	WITHOUT_CLASSIFICATION	0.9999574139367159	WITHOUT_CLASSIFICATION	4.2586063284066994E-5	IMPLEMENTATION
// we have optimized switch cases, build a lookupswitch	WITHOUT_CLASSIFICATION	0.9999221502164612	WITHOUT_CLASSIFICATION	7.784978353876612E-5	IMPLEMENTATION
// checkcast the value; if match, fast path; otherwise proceed to slow logic	WITHOUT_CLASSIFICATION	0.9999848620357403	WITHOUT_CLASSIFICATION	1.5137964259618063E-5	IMPLEMENTATION
// expression-based tests + bodies	WITHOUT_CLASSIFICATION	0.9999285661829721	WITHOUT_CLASSIFICATION	7.143381702791274E-5	IMPLEMENTATION
// normal case, create a new label	WITHOUT_CLASSIFICATION	0.9999855219400545	WITHOUT_CLASSIFICATION	1.4478059945453926E-5	IMPLEMENTATION
// last conditional case, use defaultCase	WITHOUT_CLASSIFICATION	0.9999770348657376	WITHOUT_CLASSIFICATION	2.296513426227893E-5	IMPLEMENTATION
// do nothing; arity check is done before call	WITHOUT_CLASSIFICATION	0.9999875246382882	WITHOUT_CLASSIFICATION	1.2475361711679155E-5	IMPLEMENTATION
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.99995201798464	WITHOUT_CLASSIFICATION	4.7982015359924686E-5	IMPLEMENTATION
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999588008742208	WITHOUT_CLASSIFICATION	4.11991257791162E-5	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.9999587673047106	WITHOUT_CLASSIFICATION	4.123269528941239E-5	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.9999562724272645	WITHOUT_CLASSIFICATION	4.3727572735460366E-5	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.9999562724272645	WITHOUT_CLASSIFICATION	4.3727572735460366E-5	IMPLEMENTATION
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999584467428643	WITHOUT_CLASSIFICATION	4.155325713567565E-5	IMPLEMENTATION
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999584467428643	WITHOUT_CLASSIFICATION	4.155325713567565E-5	IMPLEMENTATION
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999740830629206	WITHOUT_CLASSIFICATION	2.5916937079456282E-5	IMPLEMENTATION
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999740830629206	WITHOUT_CLASSIFICATION	2.5916937079456282E-5	IMPLEMENTATION
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999830667061635	WITHOUT_CLASSIFICATION	1.693329383639681E-5	IMPLEMENTATION
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999874393031939	WITHOUT_CLASSIFICATION	1.256069680605598E-5	IMPLEMENTATION
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999828260829263	WITHOUT_CLASSIFICATION	1.7173917073700918E-5	IMPLEMENTATION
// if there's args left and we want them, assign to rest arg	WITHOUT_CLASSIFICATION	0.9999654803161048	WITHOUT_CLASSIFICATION	3.451968389512912E-5	IMPLEMENTATION
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999859728021957	WITHOUT_CLASSIFICATION	1.4027197804186487E-5	IMPLEMENTATION
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999717401949306	WITHOUT_CLASSIFICATION	2.825980506937687E-5	IMPLEMENTATION
// first, iterate over all pre args	WITHOUT_CLASSIFICATION	0.9999660779655218	WITHOUT_CLASSIFICATION	3.392203447819369E-5	IMPLEMENTATION
// then optional args	WITHOUT_CLASSIFICATION	0.9999591350331449	WITHOUT_CLASSIFICATION	4.086496685514093E-5	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999658907079789	WITHOUT_CLASSIFICATION	3.410929202112194E-5	IMPLEMENTATION
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999830667061635	WITHOUT_CLASSIFICATION	1.693329383639681E-5	IMPLEMENTATION
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999874393031939	WITHOUT_CLASSIFICATION	1.256069680605598E-5	IMPLEMENTATION
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999828260829263	WITHOUT_CLASSIFICATION	1.7173917073700918E-5	IMPLEMENTATION
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999859728021957	WITHOUT_CLASSIFICATION	1.4027197804186487E-5	IMPLEMENTATION
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999717401949306	WITHOUT_CLASSIFICATION	2.825980506937687E-5	IMPLEMENTATION
// if rest args, excluding post args	WITHOUT_CLASSIFICATION	0.9999457748380403	WITHOUT_CLASSIFICATION	5.422516195969124E-5	IMPLEMENTATION
// finally, post args	WITHOUT_CLASSIFICATION	0.9999382640103044	WITHOUT_CLASSIFICATION	6.173598969570445E-5	IMPLEMENTATION
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9998642358797479	WITHOUT_CLASSIFICATION	1.3576412025215426E-4	IMPLEMENTATION
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9998642358797479	WITHOUT_CLASSIFICATION	1.3576412025215426E-4	IMPLEMENTATION
// unwrap scopes to appropriate depth	WITHOUT_CLASSIFICATION	0.9998833573163334	WITHOUT_CLASSIFICATION	1.1664268366654079E-4	IMPLEMENTATION
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999627673413279	WITHOUT_CLASSIFICATION	3.72326586721589E-5	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999828213309878	WITHOUT_CLASSIFICATION	1.7178669012196967E-5	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999584003202058	WITHOUT_CLASSIFICATION	4.15996797941508E-5	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999584003202058	WITHOUT_CLASSIFICATION	4.15996797941508E-5	IMPLEMENTATION
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999554850830814	WITHOUT_CLASSIFICATION	4.451491691862664E-5	IMPLEMENTATION
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999650823780581	WITHOUT_CLASSIFICATION	3.4917621941850666E-5	IMPLEMENTATION
// store the local vars in a local variable	WITHOUT_CLASSIFICATION	0.999984453800062	WITHOUT_CLASSIFICATION	1.5546199938032598E-5	IMPLEMENTATION
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999662210357354	WITHOUT_CLASSIFICATION	3.3778964264691756E-5	IMPLEMENTATION
// return in a class body raises error	WITHOUT_CLASSIFICATION	0.9999925466343598	WITHOUT_CLASSIFICATION	7.4533656402495575E-6	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999712650550083	WITHOUT_CLASSIFICATION	2.8734944991642873E-5	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999954301673329	WITHOUT_CLASSIFICATION	4.569832667082454E-6	IMPLEMENTATION
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999691029527168	WITHOUT_CLASSIFICATION	3.089704728318065E-5	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999650248768897	WITHOUT_CLASSIFICATION	3.497512311037395E-5	IMPLEMENTATION
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999725536977276	WITHOUT_CLASSIFICATION	2.744630227225763E-5	IMPLEMENTATION
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.999967288635433	WITHOUT_CLASSIFICATION	3.271136456699549E-5	IMPLEMENTATION
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999554850830814	WITHOUT_CLASSIFICATION	4.451491691862664E-5	IMPLEMENTATION
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999650823780581	WITHOUT_CLASSIFICATION	3.4917621941850666E-5	IMPLEMENTATION
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999662210357354	WITHOUT_CLASSIFICATION	3.3778964264691756E-5	IMPLEMENTATION
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999581042910692	WITHOUT_CLASSIFICATION	4.189570893074236E-5	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999828213309878	WITHOUT_CLASSIFICATION	1.7178669012196967E-5	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999828213309878	WITHOUT_CLASSIFICATION	1.7178669012196967E-5	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.999977255886126	WITHOUT_CLASSIFICATION	2.2744113874053834E-5	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.999977255886126	WITHOUT_CLASSIFICATION	2.2744113874053834E-5	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999659937074694	WITHOUT_CLASSIFICATION	3.4006292530509527E-5	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999659937074694	WITHOUT_CLASSIFICATION	3.4006292530509527E-5	IMPLEMENTATION
// store the local vars in a local variable if there are any	WITHOUT_CLASSIFICATION	0.9999957977409708	WITHOUT_CLASSIFICATION	4.202259029243661E-6	IMPLEMENTATION
// if more than 4 locals, get and populate the locals array too	WITHOUT_CLASSIFICATION	0.9999748585757949	WITHOUT_CLASSIFICATION	2.5141424205055335E-5	IMPLEMENTATION
// fill local vars with nil, to avoid checking every access.	WITHOUT_CLASSIFICATION	0.9999677009655468	WITHOUT_CLASSIFICATION	3.229903445311394E-5	IMPLEMENTATION
// default for starting tempVariableIndex is ok	WITHOUT_CLASSIFICATION	0.9999905825095304	WITHOUT_CLASSIFICATION	9.417490469622707E-6	IMPLEMENTATION
// store the local vars in a local variable for preparing the class (using previous scope)	WITHOUT_CLASSIFICATION	0.9999970877628347	WITHOUT_CLASSIFICATION	2.912237165177868E-6	IMPLEMENTATION
// store the new local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999870961384496	WITHOUT_CLASSIFICATION	1.2903861550457363E-5	IMPLEMENTATION
// in 1.8 mode, this will be a RubyArray containing the arguments // in 1.9 mode, this will be an IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999846932599646	WITHOUT_CLASSIFICATION	1.53067400353057E-5	IMPLEMENTATION
// no variable initialization, because we're reusing parent's scope (flat)	WITHOUT_CLASSIFICATION	0.9999805836434178	WITHOUT_CLASSIFICATION	1.941635658228306E-5	IMPLEMENTATION
// for specific-index cases, clean up non-expression values	WITHOUT_CLASSIFICATION	0.9999765321359507	WITHOUT_CLASSIFICATION	2.3467864049254764E-5	IMPLEMENTATION
// set up a local Ruby variable	WITHOUT_CLASSIFICATION	0.9999750447451377	WITHOUT_CLASSIFICATION	2.495525486237227E-5	IMPLEMENTATION
// if that succeeds, the others should as well	WITHOUT_CLASSIFICATION	0.9999594257312836	WITHOUT_CLASSIFICATION	4.057426871638803E-5	IMPLEMENTATION
// verify the class	WITHOUT_CLASSIFICATION	0.9999727125488803	WITHOUT_CLASSIFICATION	2.7287451119665927E-5	IMPLEMENTATION
// create dir if necessary	WITHOUT_CLASSIFICATION	0.9999894840418908	WITHOUT_CLASSIFICATION	1.0515958109130951E-5	IMPLEMENTATION
// Create the class with the appropriate class name and source file	WITHOUT_CLASSIFICATION	0.9999934463638536	WITHOUT_CLASSIFICATION	6.5536361463973405E-6	IMPLEMENTATION
// add setPosition impl, which stores filename as constant to speed updates	WITHOUT_CLASSIFICATION	0.9999879174275595	WITHOUT_CLASSIFICATION	1.2082572440343561E-5	IMPLEMENTATION
// thread context	WITHOUT_CLASSIFICATION	0.9999274977418576	WITHOUT_CLASSIFICATION	7.250225814232879E-5	IMPLEMENTATION
// line number	WITHOUT_CLASSIFICATION	0.9999433981711369	WITHOUT_CLASSIFICATION	5.66018288631116E-5	IMPLEMENTATION
// invoke __file__ with threadcontext, self, args (null), and block (null)	WITHOUT_CLASSIFICATION	0.9999375991941316	WITHOUT_CLASSIFICATION	6.240080586838632E-5	IMPLEMENTATION
// load always uses IRubyObject[], so simple closure offset calculation here	WITHOUT_CLASSIFICATION	0.9999714716759016	WITHOUT_CLASSIFICATION	2.8528324098372233E-5	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999954301673329	WITHOUT_CLASSIFICATION	4.569832667082454E-6	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999650248768897	WITHOUT_CLASSIFICATION	3.497512311037395E-5	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999728894846878	WITHOUT_CLASSIFICATION	2.7110515312295086E-5	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9965901650913201	WITHOUT_CLASSIFICATION	0.0034098349086799694	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9965901650913201	WITHOUT_CLASSIFICATION	0.0034098349086799694	IMPLEMENTATION
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999581042910692	WITHOUT_CLASSIFICATION	4.189570893074236E-5	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999828213309878	WITHOUT_CLASSIFICATION	1.7178669012196967E-5	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.999977255886126	WITHOUT_CLASSIFICATION	2.2744113874053834E-5	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999659937074694	WITHOUT_CLASSIFICATION	3.4006292530509527E-5	IMPLEMENTATION
// add Script#run impl, used for running this script with a specified threadcontext and self // root method of a script is always in __file__ method	WITHOUT_CLASSIFICATION	0.9999957023369536	WITHOUT_CLASSIFICATION	4.297663046353781E-6	IMPLEMENTATION
// add main impl, used for detached or command-line execution of this script with a new runtime // root method of a script is always in stub0, method0	WITHOUT_CLASSIFICATION	0.9999967543507925	WITHOUT_CLASSIFICATION	3.2456492075803253E-6	IMPLEMENTATION
// construct static scope list of names	WITHOUT_CLASSIFICATION	0.9999693654379151	WITHOUT_CLASSIFICATION	3.06345620848286E-5	IMPLEMENTATION
// JRUBY-3014: make __FILE__ dynamically determined at load time, but // we provide a reasonable default here	WITHOUT_CLASSIFICATION	0.9999906518299645	WITHOUT_CLASSIFICATION	9.348170035587574E-6	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999975841687161	WITHOUT_CLASSIFICATION	2.415831283996203E-6	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999975841687161	WITHOUT_CLASSIFICATION	2.415831283996203E-6	IMPLEMENTATION
// lazily create class init only if necessary	WITHOUT_CLASSIFICATION	0.9999917971301615	WITHOUT_CLASSIFICATION	8.202869838384906E-6	IMPLEMENTATION
// boxed arg list __file__	WITHOUT_CLASSIFICATION	0.999865547707257	WITHOUT_CLASSIFICATION	1.3445229274296902E-4	IMPLEMENTATION
// invoke static __file__	WITHOUT_CLASSIFICATION	0.99994180015266	WITHOUT_CLASSIFICATION	5.8199847339920664E-5	IMPLEMENTATION
// exact arg list __file__	WITHOUT_CLASSIFICATION	0.9998449620626481	WITHOUT_CLASSIFICATION	1.5503793735185896E-4	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.9999440054892375	WITHOUT_CLASSIFICATION	5.5994510762418206E-5	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.9999440054892375	WITHOUT_CLASSIFICATION	5.5994510762418206E-5	IMPLEMENTATION
// not using a new scope, use saved one for a flat closure	WITHOUT_CLASSIFICATION	0.9997470214807409	WITHOUT_CLASSIFICATION	2.5297851925902977E-4	IMPLEMENTATION
// normal closure	WITHOUT_CLASSIFICATION	0.9999191695940436	WITHOUT_CLASSIFICATION	8.083040595642769E-5	IMPLEMENTATION
// end of scoping for closure's vars	WITHOUT_CLASSIFICATION	0.9999668680535254	WITHOUT_CLASSIFICATION	3.3131946474593156E-5	IMPLEMENTATION
// we only need full-on redo exception handling if there's logic that might produce it	WITHOUT_CLASSIFICATION	0.9999702664832307	WITHOUT_CLASSIFICATION	2.97335167693904E-5	IMPLEMENTATION
// handle redos by restarting the block	WITHOUT_CLASSIFICATION	0.9999445482660613	WITHOUT_CLASSIFICATION	5.545173393879357E-5	IMPLEMENTATION
// jump back to the top of the main body of this closure	WITHOUT_CLASSIFICATION	0.9999844841313331	WITHOUT_CLASSIFICATION	1.5515868666829182E-5	IMPLEMENTATION
// Ruby name 	WITHOUT_CLASSIFICATION	0.999909314760858	WITHOUT_CLASSIFICATION	9.068523914210986E-5	IMPLEMENTATION
// Accumulate call arguments	WITHOUT_CLASSIFICATION	0.9999568822361604	WITHOUT_CLASSIFICATION	4.311776383954496E-5	IMPLEMENTATION
// Fix FileNameCompletor to work mid-line	WITHOUT_CLASSIFICATION	0.9999111138628277	WITHOUT_CLASSIFICATION	8.888613717226206E-5	IMPLEMENTATION
// We need to ensure that the variable names generated here cannot conflict with ruby variable names! // Hence the "%" tthat is appended to the beginning!	WITHOUT_CLASSIFICATION	0.9999765123181379	WITHOUT_CLASSIFICATION	2.348768186212235E-5	IMPLEMENTATION
// Does this method define code?  // Default is yes -- which basically leads to pessimistic but safe optimizations // But, for library and internal methods, this might be false.	WITHOUT_CLASSIFICATION	0.9999844806057808	WITHOUT_CLASSIFICATION	1.5519394219227417E-5	IMPLEMENTATION
// Map of constants defined in this scope (not valid for methods!)	WITHOUT_CLASSIFICATION	0.9999905753233489	WITHOUT_CLASSIFICATION	9.424676651146574E-6	IMPLEMENTATION
// NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner // with outer loops encountered before inner loops, and inner loops finished before outer ones. // // So, we can keep track of loops in a loop stack which  keeps track of loops as they are encountered. // This lets us implement next/redo/break/retry easily for the non-closure cases	WITHOUT_CLASSIFICATION	0.9998662081421195	WITHOUT_CLASSIFICATION	1.3379185788052914E-4	IMPLEMENTATION
// Map keep track of the next available variable index for a particular prefix	WITHOUT_CLASSIFICATION	0.9999822938625536	WITHOUT_CLASSIFICATION	1.7706137446383633E-5	IMPLEMENTATION
// Control flow graph for this scope	WITHOUT_CLASSIFICATION	0.9999628013713845	WITHOUT_CLASSIFICATION	3.719862861553466E-5	IMPLEMENTATION
//        _lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;	WITHOUT_CLASSIFICATION	0.9999774866915305	WITHOUT_CLASSIFICATION	2.2513308469483605E-5	IMPLEMENTATION
// List of modules, classes, and methods defined in this scope!	WITHOUT_CLASSIFICATION	0.9999848693424994	WITHOUT_CLASSIFICATION	1.5130657500571027E-5	IMPLEMENTATION
// Returns the containing parent scope!	WITHOUT_CLASSIFICATION	0.9999776440001253	WITHOUT_CLASSIFICATION	2.235599987463454E-5	IMPLEMENTATION
// Insert nesting level to ensure variable names don't conflict across nested scopes! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //        return new Variable(prefix + _lexicalNestingLevel + "_" + idx);	WITHOUT_CLASSIFICATION	0.9999912441287638	WITHOUT_CLASSIFICATION	8.755871236190568E-6	IMPLEMENTATION
// get "self"	WITHOUT_CLASSIFICATION	0.9999466943743146	WITHOUT_CLASSIFICATION	5.330562568548786E-5	IMPLEMENTATION
// variable is never read, variable is never live	WITHOUT_CLASSIFICATION	0.9999043867295063	WITHOUT_CLASSIFICATION	9.561327049363496E-5	IMPLEMENTATION
// inline script	WITHOUT_CLASSIFICATION	0.9999239453462829	WITHOUT_CLASSIFICATION	7.605465371714582E-5	IMPLEMENTATION
// inline script	WITHOUT_CLASSIFICATION	0.9999239453462829	WITHOUT_CLASSIFICATION	7.605465371714582E-5	IMPLEMENTATION
// This method is called to build assignments for a multiple-assignment instruction	WITHOUT_CLASSIFICATION	0.9999434673733468	WITHOUT_CLASSIFICATION	5.653262665326463E-5	IMPLEMENTATION
// Build the class body!	WITHOUT_CLASSIFICATION	0.9999747835659604	WITHOUT_CLASSIFICATION	2.5216434039679825E-5	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999502907298041	WITHOUT_CLASSIFICATION	4.970927019585538E-5	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999502907298041	WITHOUT_CLASSIFICATION	4.970927019585538E-5	IMPLEMENTATION
// SSS FIXME: Can this ever be null?	WITHOUT_CLASSIFICATION	0.9997923530050747	WITHOUT_CLASSIFICATION	2.0764699492540164E-4	IMPLEMENTATION
// Run the pass on the passed in scope!	WITHOUT_CLASSIFICATION	0.9999627963441385	WITHOUT_CLASSIFICATION	3.720365586147715E-5	IMPLEMENTATION
// done // done // done // done	WITHOUT_CLASSIFICATION	0.9999277014418758	WITHOUT_CLASSIFICATION	7.229855812414944E-5	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999927966006991	WITHOUT_CLASSIFICATION	7.203399300907965E-6	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999927966006991	WITHOUT_CLASSIFICATION	7.203399300907965E-6	IMPLEMENTATION
// This method is called to build arguments for a block!	WITHOUT_CLASSIFICATION	0.999973461800067	WITHOUT_CLASSIFICATION	2.6538199932989173E-5	IMPLEMENTATION
// build first node (and ignore its result) and then second node	WITHOUT_CLASSIFICATION	0.9999910992430809	WITHOUT_CLASSIFICATION	8.900756919029148E-6	IMPLEMENTATION
// build first node only and return false	WITHOUT_CLASSIFICATION	0.9999845370436309	WITHOUT_CLASSIFICATION	1.546295636912694E-5	IMPLEMENTATION
// Value of the last expression in the block 	WITHOUT_CLASSIFICATION	0.999979667018443	WITHOUT_CLASSIFICATION	2.0332981557020943E-5	IMPLEMENTATION
// If this is not a closure, the break is equivalent to jumping to the loop end label	WITHOUT_CLASSIFICATION	0.9999868734870163	WITHOUT_CLASSIFICATION	1.3126512983739338E-5	IMPLEMENTATION
// get the incoming case value	WITHOUT_CLASSIFICATION	0.9999873635565111	WITHOUT_CLASSIFICATION	1.2636443488863721E-5	IMPLEMENTATION
// the CASE instruction	WITHOUT_CLASSIFICATION	0.9999405205643044	WITHOUT_CLASSIFICATION	5.9479435695597714E-5	IMPLEMENTATION
// lists to aggregate variables and bodies for whens	WITHOUT_CLASSIFICATION	0.9999647221996723	WITHOUT_CLASSIFICATION	3.527780032762251E-5	IMPLEMENTATION
// build each "when"	WITHOUT_CLASSIFICATION	0.999933477218269	WITHOUT_CLASSIFICATION	6.652278173107691E-5	IMPLEMENTATION
// multiple conditions for when	WITHOUT_CLASSIFICATION	0.9998903852076019	WITHOUT_CLASSIFICATION	1.0961479239812624E-4	IMPLEMENTATION
// build "else" if it exists	WITHOUT_CLASSIFICATION	0.9999473589346309	WITHOUT_CLASSIFICATION	5.264106536899985E-5	IMPLEMENTATION
// now emit bodies	WITHOUT_CLASSIFICATION	0.9999237485272942	WITHOUT_CLASSIFICATION	7.625147270590746E-5	IMPLEMENTATION
// close it out	WITHOUT_CLASSIFICATION	0.9999508501599821	WITHOUT_CLASSIFICATION	4.914984001798895E-5	IMPLEMENTATION
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.999995985167554	WITHOUT_CLASSIFICATION	4.014832446065912E-6	IMPLEMENTATION
// Do we have a dynamic container?	WITHOUT_CLASSIFICATION	0.9995684527315116	WITHOUT_CLASSIFICATION	4.315472684883896E-4	IMPLEMENTATION
// Return a meta object corresponding to the class	WITHOUT_CLASSIFICATION	0.9999922025247713	WITHOUT_CLASSIFICATION	7.797475228652291E-6	IMPLEMENTATION
// 1. Load the module first (lhs of node) // 2. Then load the constant from the module	WITHOUT_CLASSIFICATION	0.9999871647630308	WITHOUT_CLASSIFICATION	1.2835236969154128E-5	IMPLEMENTATION
// Build IR for args	WITHOUT_CLASSIFICATION	0.9999201878546058	WITHOUT_CLASSIFICATION	7.98121453942218E-5	IMPLEMENTATION
// Build IR for body	WITHOUT_CLASSIFICATION	0.9999188680614833	WITHOUT_CLASSIFICATION	8.11319385166335E-5	IMPLEMENTATION
// if root of method is rescue, build as a light rescue	WITHOUT_CLASSIFICATION	0.9999467362017139	WITHOUT_CLASSIFICATION	5.326379828613673E-5	IMPLEMENTATION
// Instance method	WITHOUT_CLASSIFICATION	0.9999455607407958	WITHOUT_CLASSIFICATION	5.443925920431253E-5	IMPLEMENTATION
// Class method	WITHOUT_CLASSIFICATION	0.999948424179598	WITHOUT_CLASSIFICATION	5.157582040198807E-5	IMPLEMENTATION
// Other args begin at index 1	WITHOUT_CLASSIFICATION	0.9999285682005683	WITHOUT_CLASSIFICATION	7.143179943164129E-5	IMPLEMENTATION
// Both for fixed arity and variable arity methods	WITHOUT_CLASSIFICATION	0.9999571853814622	WITHOUT_CLASSIFICATION	4.2814618537828006E-5	IMPLEMENTATION
// Now for the rest	WITHOUT_CLASSIFICATION	0.9999573284089164	WITHOUT_CLASSIFICATION	4.267159108370715E-5	IMPLEMENTATION
// Jump to 'l' if this arg is not null.  If null, fall through and build the default value!	WITHOUT_CLASSIFICATION	0.9999977699055121	WITHOUT_CLASSIFICATION	2.2300944878431015E-6	IMPLEMENTATION
// This is not an expression that computes anything	WITHOUT_CLASSIFICATION	0.9999806779438534	WITHOUT_CLASSIFICATION	1.9322056146650967E-5	IMPLEMENTATION
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999930367970989	WITHOUT_CLASSIFICATION	6.963202900970517E-6	IMPLEMENTATION
// Build args	WITHOUT_CLASSIFICATION	0.9999172147597631	WITHOUT_CLASSIFICATION	8.278524023692024E-5	IMPLEMENTATION
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999915777420442	WITHOUT_CLASSIFICATION	8.422257955794017E-6	IMPLEMENTATION
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999943846206164	WITHOUT_CLASSIFICATION	5.615379383549614E-6	IMPLEMENTATION
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.999995985167554	WITHOUT_CLASSIFICATION	4.014832446065912E-6	IMPLEMENTATION
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999930367970989	WITHOUT_CLASSIFICATION	6.963202900970517E-6	IMPLEMENTATION
// Build args	WITHOUT_CLASSIFICATION	0.9999172147597631	WITHOUT_CLASSIFICATION	8.278524023692024E-5	IMPLEMENTATION
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999943846206164	WITHOUT_CLASSIFICATION	5.615379383549614E-6	IMPLEMENTATION
// Get the container for this new module	WITHOUT_CLASSIFICATION	0.999992910817986	WITHOUT_CLASSIFICATION	7.089182013974876E-6	IMPLEMENTATION
// Build the new module	WITHOUT_CLASSIFICATION	0.9999604806407622	WITHOUT_CLASSIFICATION	3.951935923779796E-5	IMPLEMENTATION
// Build the module body	WITHOUT_CLASSIFICATION	0.9999546377997759	WITHOUT_CLASSIFICATION	4.53622002241119E-5	IMPLEMENTATION
// First, build an assignment for a splat, if any, with the rest of the args!	WITHOUT_CLASSIFICATION	0.9999579287119927	WITHOUT_CLASSIFICATION	4.2071288007287396E-5	IMPLEMENTATION
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999775127020983	WITHOUT_CLASSIFICATION	2.2487297901725613E-5	IMPLEMENTATION
// If a closure, the next is simply a return from the closure! // If a regular loop, the next is simply a jump to the end of the iteration	WITHOUT_CLASSIFICATION	0.9999959269398636	WITHOUT_CLASSIFICATION	4.073060136368289E-6	IMPLEMENTATION
// get attr	WITHOUT_CLASSIFICATION	0.9999473983441369	WITHOUT_CLASSIFICATION	5.2601655863047804E-5	IMPLEMENTATION
// call operator	WITHOUT_CLASSIFICATION	0.9999236208860923	WITHOUT_CLASSIFICATION	7.637911390767227E-5	IMPLEMENTATION
// set attr	WITHOUT_CLASSIFICATION	0.9999478381482502	WITHOUT_CLASSIFICATION	5.216185174980498E-5	IMPLEMENTATION
// Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, false, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9999718999250479	WITHOUT_CLASSIFICATION	2.810007495208806E-5	IMPLEMENTATION
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999640703524567	WITHOUT_CLASSIFICATION	3.592964754332255E-5	IMPLEMENTATION
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999640703524567	WITHOUT_CLASSIFICATION	3.592964754332255E-5	IMPLEMENTATION
// if v1 is defined and true, we are done! 	WITHOUT_CLASSIFICATION	0.9999601446267785	WITHOUT_CLASSIFICATION	3.985537322143317E-5	IMPLEMENTATION
// build first node only and return true	WITHOUT_CLASSIFICATION	0.9999827567639438	WITHOUT_CLASSIFICATION	1.724323605628847E-5	IMPLEMENTATION
// build first node as non-expr and build second node	WITHOUT_CLASSIFICATION	0.9999742067792947	WITHOUT_CLASSIFICATION	2.579322070530733E-5	IMPLEMENTATION
// Top-level script!	WITHOUT_CLASSIFICATION	0.9999190529775803	WITHOUT_CLASSIFICATION	8.0947022419578E-5	IMPLEMENTATION
// we won't enter the loop -- just build the condition node	WITHOUT_CLASSIFICATION	0.9999868202817975	WITHOUT_CLASSIFICATION	1.3179718202431223E-5	IMPLEMENTATION
/* ----------- Private Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999887169530896	WITHOUT_CLASSIFICATION	1.1283046910412826E-5	IMPLEMENTATION
// What handles warnings	WITHOUT_CLASSIFICATION	0.9998723232231591	WITHOUT_CLASSIFICATION	1.2767677684090892E-4	IMPLEMENTATION
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999991640891174	WITHOUT_CLASSIFICATION	8.359108826688949E-7	IMPLEMENTATION
// For closures, a redo is a jump to the beginning of the closure // For non-closures, a redo is a jump to the beginning of the loop	WITHOUT_CLASSIFICATION	0.9999851827241135	WITHOUT_CLASSIFICATION	1.4817275886423274E-5	IMPLEMENTATION
// The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999879944093351	WITHOUT_CLASSIFICATION	1.2005590664886826E-5	IMPLEMENTATION
// Dummy top-level method for the class	WITHOUT_CLASSIFICATION	0.999983040259594	WITHOUT_CLASSIFICATION	1.695974040607187E-5	IMPLEMENTATION
// Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999917464023657	WITHOUT_CLASSIFICATION	8.253597634373722E-6	IMPLEMENTATION
// ------ Define the operations below ----	WITHOUT_CLASSIFICATION	0.9999834097049	WITHOUT_CLASSIFICATION	1.659029509999675E-5	IMPLEMENTATION
// value copy and type conversion operations	WITHOUT_CLASSIFICATION	0.9999921534854189	WITHOUT_CLASSIFICATION	7.846514581178389E-6	IMPLEMENTATION
// alu operations	WITHOUT_CLASSIFICATION	0.9999357319728173	WITHOUT_CLASSIFICATION	6.426802718276318E-5	IMPLEMENTATION
// method handle, arg receive, return value, and  call instructions	WITHOUT_CLASSIFICATION	0.99992740045431	WITHOUT_CLASSIFICATION	7.259954569002535E-5	IMPLEMENTATION
// closure instructions	WITHOUT_CLASSIFICATION	0.9999325140258899	WITHOUT_CLASSIFICATION	6.748597411011104E-5	IMPLEMENTATION
// eval instructions	WITHOUT_CLASSIFICATION	0.9999001695277944	WITHOUT_CLASSIFICATION	9.983047220557748E-5	IMPLEMENTATION
// def instructions	WITHOUT_CLASSIFICATION	0.9999094261120057	WITHOUT_CLASSIFICATION	9.0573887994283E-5	IMPLEMENTATION
// exception instructions	WITHOUT_CLASSIFICATION	0.9999147994446337	WITHOUT_CLASSIFICATION	8.520055536629352E-5	IMPLEMENTATION
// Loads	WITHOUT_CLASSIFICATION	0.9967918718689222	WITHOUT_CLASSIFICATION	0.0032081281310778944	IMPLEMENTATION
// Stores	WITHOUT_CLASSIFICATION	0.9968464091624519	WITHOUT_CLASSIFICATION	0.003153590837548008	IMPLEMENTATION
// jump and branch operations	WITHOUT_CLASSIFICATION	0.9999458002878364	WITHOUT_CLASSIFICATION	5.419971216366954E-5	IMPLEMENTATION
// others	WITHOUT_CLASSIFICATION	0.9969616825366475	WITHOUT_CLASSIFICATION	0.003038317463352459	IMPLEMENTATION
// a case/when branch	WITHOUT_CLASSIFICATION	0.9999226996588706	WITHOUT_CLASSIFICATION	7.730034112949368E-5	IMPLEMENTATION
// optimization guards	WITHOUT_CLASSIFICATION	0.9999065474211134	WITHOUT_CLASSIFICATION	9.345257888662147E-5	IMPLEMENTATION
// By default, call instructions cannot be deleted even if their results aren't used by anyone // unless we know more about what the call is, what it does, etc. // Similarly for evals, stores, returns.	WITHOUT_CLASSIFICATION	0.9999943307137356	WITHOUT_CLASSIFICATION	5.669286264500677E-6	IMPLEMENTATION
// Returns the containing parent scope -- can be a dynamic value (hence Operand)!	WITHOUT_CLASSIFICATION	0.9999891610721127	WITHOUT_CLASSIFICATION	1.0838927887359484E-5	IMPLEMENTATION
// scripts	WITHOUT_CLASSIFICATION	0.997177483362305	WITHOUT_CLASSIFICATION	0.0028225166376949057	IMPLEMENTATION
// scripts and modules	WITHOUT_CLASSIFICATION	0.9999396579950267	WITHOUT_CLASSIFICATION	6.034200497330911E-5	IMPLEMENTATION
// scripts, classes, and modules	WITHOUT_CLASSIFICATION	0.9999609659847132	WITHOUT_CLASSIFICATION	3.9034015286827135E-5	IMPLEMENTATION
// methods and closures	WITHOUT_CLASSIFICATION	0.9999435936445643	WITHOUT_CLASSIFICATION	5.640635543566558E-5	IMPLEMENTATION
// create a new variable using the prefix	WITHOUT_CLASSIFICATION	0.9999965289917314	WITHOUT_CLASSIFICATION	3.471008268530099E-6	IMPLEMENTATION
// create a new temporary variable	WITHOUT_CLASSIFICATION	0.9999940508041602	WITHOUT_CLASSIFICATION	5.949195839834962E-6	IMPLEMENTATION
// Get a new label using a generic prefix	WITHOUT_CLASSIFICATION	0.9999716043958216	WITHOUT_CLASSIFICATION	2.8395604178554617E-5	IMPLEMENTATION
// Build the CFG for this scope -- supported only by methods & closures	WITHOUT_CLASSIFICATION	0.9999701811273715	WITHOUT_CLASSIFICATION	2.981887262857674E-5	IMPLEMENTATION
// Get the control flow graph for this scope -- only valid for methods & closures	WITHOUT_CLASSIFICATION	0.9999925872224449	WITHOUT_CLASSIFICATION	7.412777555082406E-6	IMPLEMENTATION
// While processing loops, this returns the loop that we are processing.	WITHOUT_CLASSIFICATION	0.9999806668257193	WITHOUT_CLASSIFICATION	1.9333174280724695E-5	IMPLEMENTATION
// Record the loop we are beginning to process	WITHOUT_CLASSIFICATION	0.9999752547765403	WITHOUT_CLASSIFICATION	2.4745223459756376E-5	IMPLEMENTATION
// Indicate that we are done processing the loop	WITHOUT_CLASSIFICATION	0.9999726505944112	WITHOUT_CLASSIFICATION	2.7349405588786073E-5	IMPLEMENTATION
// Run the passed in compiler pass on this scope!	WITHOUT_CLASSIFICATION	0.9999641646515752	WITHOUT_CLASSIFICATION	3.583534842471697E-5	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9999546864646387	WITHOUT_CLASSIFICATION	4.531353536127511E-5	IMPLEMENTATION
// Readline	WITHOUT_CLASSIFICATION	0.999910299994896	WITHOUT_CLASSIFICATION	8.970000510395338E-5	IMPLEMENTATION
// If the cfg of the method is around, print the CFG!	WITHOUT_CLASSIFICATION	0.9999871985756885	WITHOUT_CLASSIFICATION	1.2801424311554791E-5	IMPLEMENTATION
// Optimize some core class method calls for constant values	WITHOUT_CLASSIFICATION	0.9999816502086112	WITHOUT_CLASSIFICATION	1.8349791388805735E-5	IMPLEMENTATION
// If 'r' is not a constant, it could actually be a compound value! // Look in our value map to see if we have a simplified value for the receiver.	WITHOUT_CLASSIFICATION	0.9999966155392005	WITHOUT_CLASSIFICATION	3.384460799578582E-6	IMPLEMENTATION
// Check if we can optimize this call based on the receiving method and receiver type // Use the simplified receiver!	WITHOUT_CLASSIFICATION	0.9999770561793024	WITHOUT_CLASSIFICATION	2.294382069760431E-5	IMPLEMENTATION
// If we got a simplified value, mark the call dead and insert a copy in its place!	WITHOUT_CLASSIFICATION	0.9999846025085953	WITHOUT_CLASSIFICATION	1.539749140462484E-5	IMPLEMENTATION
// If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!	WITHOUT_CLASSIFICATION	0.9999663897287109	WITHOUT_CLASSIFICATION	3.361027128924126E-5	IMPLEMENTATION
/* ----------- Public abstract methods ---------- */	WITHOUT_CLASSIFICATION	0.9999859054752709	WITHOUT_CLASSIFICATION	1.409452472908454E-5	IMPLEMENTATION
/* ----------- Public methods with a default implementation ---------- */	WITHOUT_CLASSIFICATION	0.999959568741463	WITHOUT_CLASSIFICATION	4.043125853698775E-5	IMPLEMENTATION
// Compute meet over all "sources" and compute "destination" basic blocks that should then be processed.  // sources & targets depends on direction of the data flow problem	WITHOUT_CLASSIFICATION	0.9999945231588849	WITHOUT_CLASSIFICATION	5.476841115014519E-6	IMPLEMENTATION
// If the solution has changed, add "dsts" to the work list. // No duplicates please which is why we have bbset.	WITHOUT_CLASSIFICATION	0.9999931873410474	WITHOUT_CLASSIFICATION	6.812658952675938E-6	IMPLEMENTATION
/* --------- Protected fields/methods below --------- */	WITHOUT_CLASSIFICATION	0.99997750914176	WITHOUT_CLASSIFICATION	2.249085824002271E-5	IMPLEMENTATION
// Dataflow problem with which this node is associated // CFG node for which this node contains info.	WITHOUT_CLASSIFICATION	0.9999844601845886	WITHOUT_CLASSIFICATION	1.5539815411360135E-5	IMPLEMENTATION
/* -------------- Public fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999903341764419	WITHOUT_CLASSIFICATION	9.66582355810906E-6	IMPLEMENTATION
// ------- Abstract methods without a default implementation -------	WITHOUT_CLASSIFICATION	0.9999519826622884	WITHOUT_CLASSIFICATION	4.8017337711520564E-5	IMPLEMENTATION
// ------- Default implementation methods below -------	WITHOUT_CLASSIFICATION	0.9998694110776097	WITHOUT_CLASSIFICATION	1.3058892239034263E-4	IMPLEMENTATION
/* Compute Meet Over All Paths solution for this dataflow problem on the input CFG.     * This implements a standard worklist algorithm. */	WITHOUT_CLASSIFICATION	0.999294727104781	WITHOUT_CLASSIFICATION	7.052728952189766E-4	IMPLEMENTATION
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.999879982470783	WITHOUT_CLASSIFICATION	1.2001752921696025E-4	IMPLEMENTATION
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.999879982470783	WITHOUT_CLASSIFICATION	1.2001752921696025E-4	IMPLEMENTATION
/* -------------- Packaged/protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999924282335901	WITHOUT_CLASSIFICATION	7.5717664098439545E-6	IMPLEMENTATION
// We want unique ids for dataflow variables	WITHOUT_CLASSIFICATION	0.9999521396036584	WITHOUT_CLASSIFICATION	4.7860396341623095E-5	IMPLEMENTATION
/* -------------- Protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999906289337992	WITHOUT_CLASSIFICATION	9.371066200758726E-6	IMPLEMENTATION
/* -------------- Private fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999914867022978	WITHOUT_CLASSIFICATION	8.513297702217451E-6	IMPLEMENTATION
// Initialize all flow graph nodes 	WITHOUT_CLASSIFICATION	0.9999795178388229	WITHOUT_CLASSIFICATION	2.048216117717315E-5	IMPLEMENTATION
/* Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses */	WITHOUT_CLASSIFICATION	0.999976061488929	WITHOUT_CLASSIFICATION	2.39385110710088E-5	IMPLEMENTATION
/* ******************** PUBLIC INTERFACE ******************* */	WITHOUT_CLASSIFICATION	0.9999474999346295	WITHOUT_CLASSIFICATION	5.2500065370435805E-5	IMPLEMENTATION
// Unique ID assigned to this variable	WITHOUT_CLASSIFICATION	0.9999437234526128	WITHOUT_CLASSIFICATION	5.627654738719917E-5	IMPLEMENTATION
// start out with a default RubyObject allocator	WITHOUT_CLASSIFICATION	0.9999902975174219	WITHOUT_CLASSIFICATION	9.702482578114789E-6	IMPLEMENTATION
// switch to an allocator based on a default constructor	WITHOUT_CLASSIFICATION	0.9999766345889514	WITHOUT_CLASSIFICATION	2.3365411048607218E-5	IMPLEMENTATION
/* ----------- Public Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999875770918815	WITHOUT_CLASSIFICATION	1.2422908118474721E-5	IMPLEMENTATION
// class or module	WITHOUT_CLASSIFICATION	0.9999458742501498	WITHOUT_CLASSIFICATION	5.4125749850254833E-5	IMPLEMENTATION
// OUT = UNION(IN(succs))	WITHOUT_CLASSIFICATION	0.9999165004601895	WITHOUT_CLASSIFICATION	8.349953981049598E-5	IMPLEMENTATION
// Traverse the instructions in this basic block in reverse order!	WITHOUT_CLASSIFICATION	0.9999438321526322	WITHOUT_CLASSIFICATION	5.616784736776493E-5	IMPLEMENTATION
// v is defined => It is no longer live before 'i'	WITHOUT_CLASSIFICATION	0.9999463402538856	WITHOUT_CLASSIFICATION	5.3659746114416455E-5	IMPLEMENTATION
// IN is the same!	WITHOUT_CLASSIFICATION	0.9999374544339472	WITHOUT_CLASSIFICATION	6.25455660528043E-5	IMPLEMENTATION
// IN changed!	WITHOUT_CLASSIFICATION	0.9999412054753185	WITHOUT_CLASSIFICATION	5.8794524681422976E-5	IMPLEMENTATION
/* ---------- Protected / package fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999845261320665	WITHOUT_CLASSIFICATION	1.5473867933472945E-5	IMPLEMENTATION
// If 'v' is not live at the instruction site, and it has no side effects, mark it dead!	WITHOUT_CLASSIFICATION	0.9999672783447587	WITHOUT_CLASSIFICATION	3.2721655241304304E-5	IMPLEMENTATION
// Do not mark this instruction's operands live if the instruction itself is dead!	WITHOUT_CLASSIFICATION	0.9999644747785282	WITHOUT_CLASSIFICATION	3.552522147182848E-5	IMPLEMENTATION
/* ---------- Private fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999833824411345	WITHOUT_CLASSIFICATION	1.661755886545062E-5	IMPLEMENTATION
// Variables live at entry of this node // Variables live at exit of node // Temporary set of live variables // Size of the "_in" and "_out" bit sets 	WITHOUT_CLASSIFICATION	0.9999763001909998	WITHOUT_CLASSIFICATION	2.3699809000192684E-5	IMPLEMENTATION
// Used during optimization passes to propagate type and other information	WITHOUT_CLASSIFICATION	0.9999264705554352	WITHOUT_CLASSIFICATION	7.352944456475084E-5	IMPLEMENTATION
// Does this instruction have side effects as a result of its operation // This information is used in optimization phases to impact dead code elimination // and other optimization passes	WITHOUT_CLASSIFICATION	0.999989941983756	WITHOUT_CLASSIFICATION	1.0058016243974818E-5	IMPLEMENTATION
/* --------- "Abstract"/"please-override" methods --------- */	WITHOUT_CLASSIFICATION	0.9999783388744613	WITHOUT_CLASSIFICATION	2.166112553876211E-5	IMPLEMENTATION
/* Array of all operands for this instruction */	WITHOUT_CLASSIFICATION	0.9999357424363942	WITHOUT_CLASSIFICATION	6.425756360578267E-5	IMPLEMENTATION
/* List of all variables used by all operands of this instruction */	WITHOUT_CLASSIFICATION	0.9999661138292238	WITHOUT_CLASSIFICATION	3.3886170776101973E-5	IMPLEMENTATION
/*      * This method takes as input a map of operands to their values, and outputs     *     * If the value map provides a value for any of the instruction's operands     * this method is expected to replace the original operands with the simplified values.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify     */	WITHOUT_CLASSIFICATION	0.9999945558975947	WITHOUT_CLASSIFICATION	5.444102405334594E-6	IMPLEMENTATION
// By default, no simplifications!	WITHOUT_CLASSIFICATION	0.9999740437977112	WITHOUT_CLASSIFICATION	2.5956202288831258E-5	IMPLEMENTATION
// Can this call lead to ruby code getting modified?   // If we don't know what method we are calling, we assume it can (pessimistic, but safe!) // If we do know the target method, we ask the method itself whether it modifies ruby code	WITHOUT_CLASSIFICATION	0.999920992635362	WITHOUT_CLASSIFICATION	7.900736463795015E-5	IMPLEMENTATION
// By default, return instructions cannot be deleted	WITHOUT_CLASSIFICATION	0.9999865884405159	WITHOUT_CLASSIFICATION	1.3411559484039702E-5	IMPLEMENTATION
// If true, returns the rest of the array starting at the index	WITHOUT_CLASSIFICATION	0.9999915345119664	WITHOUT_CLASSIFICATION	8.465488033488928E-6	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.999986147353475	WITHOUT_CLASSIFICATION	1.3852646525134658E-5	IMPLEMENTATION
// Map of label & basic blocks with that label	WITHOUT_CLASSIFICATION	0.9999407200112778	WITHOUT_CLASSIFICATION	5.927998872223864E-5	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.999986147353475	WITHOUT_CLASSIFICATION	1.3852646525134658E-5	IMPLEMENTATION
// You can only value-replace atomic values	WITHOUT_CLASSIFICATION	0.9999733423388817	WITHOUT_CLASSIFICATION	2.66576611183624E-5	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999482467699311	WITHOUT_CLASSIFICATION	5.175323006894701E-5	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999482467699311	WITHOUT_CLASSIFICATION	5.175323006894701E-5	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999482467699311	WITHOUT_CLASSIFICATION	5.175323006894701E-5	IMPLEMENTATION
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999887560271811	WITHOUT_CLASSIFICATION	1.1243972818880031E-5	IMPLEMENTATION
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999887560271811	WITHOUT_CLASSIFICATION	1.1243972818880031E-5	IMPLEMENTATION
// The operand that this attribute targets //    DEFERRED //    AttributeValue _val;       // Attribute value	WITHOUT_CLASSIFICATION	0.9999930132434256	WITHOUT_CLASSIFICATION	6.986756574447215E-6	IMPLEMENTATION
// Arrays, Ranges, etc. are compound values // Variables, fixnums, floats, etc. are "atomic" values	WITHOUT_CLASSIFICATION	0.9999769838706969	WITHOUT_CLASSIFICATION	2.3016129303116887E-5	IMPLEMENTATION
// Get the target class of this operand, if we know it!	WITHOUT_CLASSIFICATION	0.9999933430286506	WITHOUT_CLASSIFICATION	6.656971349311146E-6	IMPLEMENTATION
// The following constants capture pre-known static call sites -- used to implement ruby internals	WITHOUT_CLASSIFICATION	0.999259599200786	WITHOUT_CLASSIFICATION	7.404007992140435E-4	IMPLEMENTATION
/* Nothing to do by default */	WITHOUT_CLASSIFICATION	0.9999864092454299	WITHOUT_CLASSIFICATION	1.3590754570048169E-5	IMPLEMENTATION
// Map of label & basic blocks which are waiting for a bb with that label	WITHOUT_CLASSIFICATION	0.9999560313120898	WITHOUT_CLASSIFICATION	4.39686879102703E-5	IMPLEMENTATION
// Init before building basic blocks below!	WITHOUT_CLASSIFICATION	0.9999390773261905	WITHOUT_CLASSIFICATION	6.092267380960814E-5	IMPLEMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999097530030144	WITHOUT_CLASSIFICATION	9.024699698550299E-5	IMPLEMENTATION
// Scope (method/closure) to which this cfg belongs // Entry BB -- dummy // Exit BB -- dummy // The actual graph // Next available basic block id	WITHOUT_CLASSIFICATION	0.9999603617526857	WITHOUT_CLASSIFICATION	3.963824731436126E-5	IMPLEMENTATION
// Jump instruction bbs dont add an edge to the succeeding bb by default	WITHOUT_CLASSIFICATION	0.9999863833077368	WITHOUT_CLASSIFICATION	1.3616692263194319E-5	IMPLEMENTATION
// Add forward ref. edges	WITHOUT_CLASSIFICATION	0.9999612771479058	WITHOUT_CLASSIFICATION	3.872285209419936E-5	IMPLEMENTATION
// currBB cannot be null!	WITHOUT_CLASSIFICATION	0.9999568747976979	WITHOUT_CLASSIFICATION	4.3125202302067965E-5	IMPLEMENTATION
// Add a forward reference from tgt -> currBB	WITHOUT_CLASSIFICATION	0.99998193287068	WITHOUT_CLASSIFICATION	1.8067129320017197E-5	IMPLEMENTATION
// root-level logic	WITHOUT_CLASSIFICATION	0.9999356593662669	WITHOUT_CLASSIFICATION	6.434063373304293E-5	IMPLEMENTATION
// root-level methods	WITHOUT_CLASSIFICATION	0.9999552581744817	WITHOUT_CLASSIFICATION	4.474182551815458E-5	IMPLEMENTATION
// root-level classes	WITHOUT_CLASSIFICATION	0.9999609392688145	WITHOUT_CLASSIFICATION	3.906073118544899E-5	IMPLEMENTATION
//        case 4: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); //            break; //        case 5: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); //            break;	WITHOUT_CLASSIFICATION	0.9999908267406856	WITHOUT_CLASSIFICATION	9.17325931430484E-6	IMPLEMENTATION
// load receiver	WITHOUT_CLASSIFICATION	0.9999307610509544	WITHOUT_CLASSIFICATION	6.923894904571669E-5	IMPLEMENTATION
// load receiver	WITHOUT_CLASSIFICATION	0.9999307610509544	WITHOUT_CLASSIFICATION	6.923894904571669E-5	IMPLEMENTATION
// receiver	WITHOUT_CLASSIFICATION	0.9999129147887713	WITHOUT_CLASSIFICATION	8.708521122868729E-5	IMPLEMENTATION
// load arguments	WITHOUT_CLASSIFICATION	0.9999556844160913	WITHOUT_CLASSIFICATION	4.4315583908706554E-5	IMPLEMENTATION
// load arguments	WITHOUT_CLASSIFICATION	0.9999556844160913	WITHOUT_CLASSIFICATION	4.4315583908706554E-5	IMPLEMENTATION
//        case 4: //        case 5:	WITHOUT_CLASSIFICATION	0.9999737700226582	WITHOUT_CLASSIFICATION	2.6229977341826544E-5	IMPLEMENTATION
// Object[] args	WITHOUT_CLASSIFICATION	0.9999251667265504	WITHOUT_CLASSIFICATION	7.483327344954168E-5	IMPLEMENTATION
// load handle	WITHOUT_CLASSIFICATION	0.9998946494632893	WITHOUT_CLASSIFICATION	1.0535053671067479E-4	IMPLEMENTATION
// args array	WITHOUT_CLASSIFICATION	0.999914215520514	WITHOUT_CLASSIFICATION	8.578447948610667E-5	IMPLEMENTATION
// i'th argument	WITHOUT_CLASSIFICATION	0.999930007227836	WITHOUT_CLASSIFICATION	6.999277216396016E-5	IMPLEMENTATION
// invoke specific arity version	WITHOUT_CLASSIFICATION	0.9999603757020589	WITHOUT_CLASSIFICATION	3.962429794104691E-5	IMPLEMENTATION
// Object arg0	WITHOUT_CLASSIFICATION	0.9999264278980011	WITHOUT_CLASSIFICATION	7.357210199889047E-5	IMPLEMENTATION
// useful for code completion inside the IRB	WITHOUT_CLASSIFICATION	0.9999457500063662	WITHOUT_CLASSIFICATION	5.4249993633857826E-5	IMPLEMENTATION
// No editing before startPos	WITHOUT_CLASSIFICATION	0.9999557223852654	WITHOUT_CLASSIFICATION	4.4277614734565935E-5	IMPLEMENTATION
// no silly ticks!	WITHOUT_CLASSIFICATION	0.9999312945357713	WITHOUT_CLASSIFICATION	6.870546422873264E-5	IMPLEMENTATION
// no candidates? Fail.	WITHOUT_CLASSIFICATION	0.9999387228920453	WITHOUT_CLASSIFICATION	6.127710795468796E-5	IMPLEMENTATION
// at end	WITHOUT_CLASSIFICATION	0.9963851245548441	WITHOUT_CLASSIFICATION	0.0036148754451560245	IMPLEMENTATION
// undo check	WITHOUT_CLASSIFICATION	0.9999162771144094	WITHOUT_CLASSIFICATION	8.372288559057278E-5	IMPLEMENTATION
// Explicit reference to these vars as symbols...	WITHOUT_CLASSIFICATION	0.9999673689585666	WITHOUT_CLASSIFICATION	3.2631041433313235E-5	IMPLEMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999097530030144	WITHOUT_CLASSIFICATION	9.024699698550299E-5	IMPLEMENTATION
//\t\n\"\\'`@$><=;|&{(	WITHOUT_CLASSIFICATION	0.9999156743149097	WITHOUT_CLASSIFICATION	8.432568509039663E-5	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999658776948024	WITHOUT_CLASSIFICATION	3.412230519770533E-5	IMPLEMENTATION
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999617076171171	WITHOUT_CLASSIFICATION	3.829238288299029E-5	IMPLEMENTATION
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999617076171171	WITHOUT_CLASSIFICATION	3.829238288299029E-5	IMPLEMENTATION
// Binding provided for scope, use it	WITHOUT_CLASSIFICATION	0.999964426532777	WITHOUT_CLASSIFICATION	3.5573467222935396E-5	IMPLEMENTATION
// this is ensured by the callers	WITHOUT_CLASSIFICATION	0.9999872284771201	WITHOUT_CLASSIFICATION	1.2771522879917936E-5	IMPLEMENTATION
// no binding, just eval in "current" frame (caller's frame)	WITHOUT_CLASSIFICATION	0.9999580277770411	WITHOUT_CLASSIFICATION	4.1972222958830655E-5	IMPLEMENTATION
// restore position	WITHOUT_CLASSIFICATION	0.999959591021507	WITHOUT_CLASSIFICATION	4.0408978492879214E-5	IMPLEMENTATION
/* Something like cvar_cbase() from eval.c, factored out for the benefit     * of all the classvar-related node evaluations */	WITHOUT_CLASSIFICATION	0.9999866289336192	WITHOUT_CLASSIFICATION	1.3371066380753968E-5	IMPLEMENTATION
// Used by the compiler to simplify arg processing	WITHOUT_CLASSIFICATION	0.9999906148537694	WITHOUT_CLASSIFICATION	9.385146230611622E-6	IMPLEMENTATION
// JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace	WITHOUT_CLASSIFICATION	0.9999436206888156	WITHOUT_CLASSIFICATION	5.6379311184349376E-5	IMPLEMENTATION
// MRI does similar thing on MacOS X with 'EditLine wrapper'.	WITHOUT_CLASSIFICATION	0.9999414860188544	WITHOUT_CLASSIFICATION	5.851398114574048E-5	IMPLEMENTATION
// We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)	WITHOUT_CLASSIFICATION	0.9999814811296286	WITHOUT_CLASSIFICATION	1.851887037134956E-5	IMPLEMENTATION
// JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)	WITHOUT_CLASSIFICATION	0.999979157949771	WITHOUT_CLASSIFICATION	2.0842050228962365E-5	IMPLEMENTATION
// not overridden, let's go	WITHOUT_CLASSIFICATION	0.9997082369493687	WITHOUT_CLASSIFICATION	2.917630506312528E-4	IMPLEMENTATION
/* Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8() */	WITHOUT_CLASSIFICATION	0.9999404551983212	WITHOUT_CLASSIFICATION	5.9544801678869594E-5	IMPLEMENTATION
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9995811247016039	WITHOUT_CLASSIFICATION	4.188752983962392E-4	IMPLEMENTATION
// Complete using a Proc object	WITHOUT_CLASSIFICATION	0.9999435428992132	WITHOUT_CLASSIFICATION	5.645710078679043E-5	IMPLEMENTATION
// clear basename so it's anonymous when raising	WITHOUT_CLASSIFICATION	0.9999628170879732	WITHOUT_CLASSIFICATION	3.7182912026872526E-5	IMPLEMENTATION
// These are not really used by timeout, but exposed for compatibility	WITHOUT_CLASSIFICATION	0.9999881142052419	WITHOUT_CLASSIFICATION	1.1885794758055103E-5	IMPLEMENTATION
// Timeout module methods	WITHOUT_CLASSIFICATION	0.9999433998521723	WITHOUT_CLASSIFICATION	5.660014782771461E-5	IMPLEMENTATION
// Toplevel defines	WITHOUT_CLASSIFICATION	0.9999148286729747	WITHOUT_CLASSIFICATION	8.517132702529615E-5	IMPLEMENTATION
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999554021406963	WITHOUT_CLASSIFICATION	4.459785930371851E-5	IMPLEMENTATION
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999527919159562	WITHOUT_CLASSIFICATION	4.720808404392116E-5	IMPLEMENTATION
// if it's the exception we're expecting	WITHOUT_CLASSIFICATION	0.9999258974387617	WITHOUT_CLASSIFICATION	7.410256123835321E-5	IMPLEMENTATION
// and we were given a specific exception	WITHOUT_CLASSIFICATION	0.9999156785423505	WITHOUT_CLASSIFICATION	8.432145764940578E-5	IMPLEMENTATION
// otherwise, rethrow	WITHOUT_CLASSIFICATION	0.9999455135326384	WITHOUT_CLASSIFICATION	5.4486467361570024E-5	IMPLEMENTATION
// // Remove the Executor task now, to avoid cancelled tasks accumulating // until an Executor thread can schedule and remove them //	WITHOUT_CLASSIFICATION	0.9999880898475858	WITHOUT_CLASSIFICATION	1.1910152414177051E-5	IMPLEMENTATION
// // If the task was scheduled, wait for it to finish before polling // for the exception it would have thrown. //	WITHOUT_CLASSIFICATION	0.9999788660806088	WITHOUT_CLASSIFICATION	2.1133919391239432E-5	IMPLEMENTATION
// NetProtocolBufferedIO	WITHOUT_CLASSIFICATION	0.9999246217611576	WITHOUT_CLASSIFICATION	7.537823884237895E-5	IMPLEMENTATION
/* When a length is given, read_string acts like get_bytes */	WITHOUT_CLASSIFICATION	0.9999517633379236	WITHOUT_CLASSIFICATION	4.82366620763881E-5	IMPLEMENTATION
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.999950467715969	WITHOUT_CLASSIFICATION	4.9532284031085374E-5	IMPLEMENTATION
// ARRAY and STRUCT are only used internally	WITHOUT_CLASSIFICATION	0.9999548359236244	WITHOUT_CLASSIFICATION	4.516407637563581E-5	IMPLEMENTATION
// If no release method is defined, then memory leaks will result.	WITHOUT_CLASSIFICATION	0.9999607901983241	WITHOUT_CLASSIFICATION	3.920980167588624E-5	IMPLEMENTATION
/*     * This variant of newStruct is called from StructLayoutBuilder     */	WITHOUT_CLASSIFICATION	0.9999844709966508	WITHOUT_CLASSIFICATION	1.5529003349211706E-5	IMPLEMENTATION
// This also handles unsigned int -> negative signed int conversion	WITHOUT_CLASSIFICATION	0.9999709895203933	WITHOUT_CLASSIFICATION	2.901047960658837E-5	IMPLEMENTATION
// Windows is LLP64	WITHOUT_CLASSIFICATION	0.9999255940585526	WITHOUT_CLASSIFICATION	7.440594144733348E-5	IMPLEMENTATION
// Older JDK on linux map 'c' to 'libc.so' which doesn't work	WITHOUT_CLASSIFICATION	0.9999561295154867	WITHOUT_CLASSIFICATION	4.3870484513335484E-5	IMPLEMENTATION
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999565781178691	WITHOUT_CLASSIFICATION	4.3421882130989704E-5	IMPLEMENTATION
// $blah	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.999950467715969	WITHOUT_CLASSIFICATION	4.9532284031085374E-5	IMPLEMENTATION
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999756815183443	WITHOUT_CLASSIFICATION	2.4318481655709505E-5	IMPLEMENTATION
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999565781178691	WITHOUT_CLASSIFICATION	4.3421882130989704E-5	IMPLEMENTATION
// // Keep a reference to the temporary memory in the cache so it does // not get freed by the GC until the struct is freed //	WITHOUT_CLASSIFICATION	0.9999914507836626	WITHOUT_CLASSIFICATION	8.549216337330363E-6	IMPLEMENTATION
// Add Pointer::NULL as a constant	WITHOUT_CLASSIFICATION	0.9999717631238206	WITHOUT_CLASSIFICATION	2.8236876179265506E-5	IMPLEMENTATION
// Create the ordered list of field names from the map	WITHOUT_CLASSIFICATION	0.9999964870901511	WITHOUT_CLASSIFICATION	3.5129098488550603E-6	IMPLEMENTATION
// Assemble a [ :name, offset ] array	WITHOUT_CLASSIFICATION	0.9999415546135406	WITHOUT_CLASSIFICATION	5.84453864594176E-5	IMPLEMENTATION
//                case FLOAT:	WITHOUT_CLASSIFICATION	0.9999701317433247	WITHOUT_CLASSIFICATION	2.986825667528886E-5	IMPLEMENTATION
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999765989597825	WITHOUT_CLASSIFICATION	2.3401040217427582E-5	IMPLEMENTATION
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999765989597825	WITHOUT_CLASSIFICATION	2.3401040217427582E-5	IMPLEMENTATION
// No auto cleanup needed	WITHOUT_CLASSIFICATION	0.9991379438031129	WITHOUT_CLASSIFICATION	8.620561968871049E-4	IMPLEMENTATION
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9998792383650272	WITHOUT_CLASSIFICATION	1.2076163497268112E-4	IMPLEMENTATION
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999932157575993	WITHOUT_CLASSIFICATION	6.7842424007853036E-6	IMPLEMENTATION
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999932157575993	WITHOUT_CLASSIFICATION	6.7842424007853036E-6	IMPLEMENTATION
/*         * If there is exactly _one_ callback argument to the function,         * then a block can be given and automatically subsituted for the callback         * parameter.         */	WITHOUT_CLASSIFICATION	0.9999998157144265	WITHOUT_CLASSIFICATION	1.8428557346224271E-7	IMPLEMENTATION
/*------------------------------------------------------------------------*/	WITHOUT_CLASSIFICATION	0.9999560990856154	WITHOUT_CLASSIFICATION	4.390091438456419E-5	IMPLEMENTATION
//AF_INET	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
//AF_INET	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
// RubyUNIXServer	WITHOUT_CLASSIFICATION	0.9999062982957819	WITHOUT_CLASSIFICATION	9.370170421799504E-5	IMPLEMENTATION
// line 321	WITHOUT_CLASSIFICATION	0.9999303072217124	WITHOUT_CLASSIFICATION	6.969277828760286E-5	IMPLEMENTATION
// // Set up for potentially fast-int operations //	WITHOUT_CLASSIFICATION	0.9999821623025094	WITHOUT_CLASSIFICATION	1.7837697490700283E-5	IMPLEMENTATION
// // Hook up the MemoryPointer class if its not already there //	WITHOUT_CLASSIFICATION	0.9999908357628758	WITHOUT_CLASSIFICATION	9.164237124191851E-6	IMPLEMENTATION
// This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and // (2) Socket.getChannel() seems to return null in some cases	WITHOUT_CLASSIFICATION	0.9999956745320351	WITHOUT_CLASSIFICATION	4.32546796499062E-6	IMPLEMENTATION
// no UNIXSockets on Windows	WITHOUT_CLASSIFICATION	0.9999454616673874	WITHOUT_CLASSIFICATION	5.45383326125517E-5	IMPLEMENTATION
// Sockaddr_un has different structure on different platforms. // See JRUBY-2213 for more details.	WITHOUT_CLASSIFICATION	0.9999519590146938	WITHOUT_CLASSIFICATION	4.8040985306050624E-5	IMPLEMENTATION
// There is something valid in the sun_path component	WITHOUT_CLASSIFICATION	0.999993080040043	WITHOUT_CLASSIFICATION	6.919959957089465E-6	IMPLEMENTATION
// RubyIPSocket	WITHOUT_CLASSIFICATION	0.9999056161181832	WITHOUT_CLASSIFICATION	9.438388181690223E-5	IMPLEMENTATION
// host is nil or the empty string, bind to INADDR_ANY	WITHOUT_CLASSIFICATION	0.9999798366128475	WITHOUT_CLASSIFICATION	2.0163387152389815E-5	IMPLEMENTATION
// host and port given	WITHOUT_CLASSIFICATION	0.9999255352130868	WITHOUT_CLASSIFICATION	7.446478691324245E-5	IMPLEMENTATION
// RubyUDPSocket	WITHOUT_CLASSIFICATION	0.9999056161181832	WITHOUT_CLASSIFICATION	9.438388181690223E-5	IMPLEMENTATION
// By default we always reverse lookup unless do_not_reverse_lookup set.	WITHOUT_CLASSIFICATION	0.9999791689916091	WITHOUT_CLASSIFICATION	2.0831008390923004E-5	IMPLEMENTATION
// make sure descriptor is registered	WITHOUT_CLASSIFICATION	0.9999868003979657	WITHOUT_CLASSIFICATION	1.3199602034324233E-5	IMPLEMENTATION
// continue with normal initialization	WITHOUT_CLASSIFICATION	0.9999804160859638	WITHOUT_CLASSIFICATION	1.9583914036247673E-5	IMPLEMENTATION
// recv returns nil on EOF	WITHOUT_CLASSIFICATION	0.9999460829099316	WITHOUT_CLASSIFICATION	5.391709006842919E-5	IMPLEMENTATION
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9999350051535965	WITHOUT_CLASSIFICATION	6.499484640355108E-5	IMPLEMENTATION
// RubyBasicSocket	WITHOUT_CLASSIFICATION	0.9999056577788239	WITHOUT_CLASSIFICATION	9.434222117607412E-5	IMPLEMENTATION
// we don't have to define any that we don't support; see socket.c	WITHOUT_CLASSIFICATION	0.9999825648348366	WITHOUT_CLASSIFICATION	1.743516516331328E-5	IMPLEMENTATION
// mandatory constants we haven't implemented	WITHOUT_CLASSIFICATION	0.9498275278924885	WITHOUT_CLASSIFICATION	0.05017247210751154	IMPLEMENTATION
// constants webrick crashes without	WITHOUT_CLASSIFICATION	0.9999558796349377	WITHOUT_CLASSIFICATION	4.412036506230763E-5	IMPLEMENTATION
// More constants needed by specs	WITHOUT_CLASSIFICATION	0.999950127277964	WITHOUT_CLASSIFICATION	4.9872722036046986E-5	IMPLEMENTATION
// normal file descriptor..try to work with it	WITHOUT_CLASSIFICATION	0.9999677099422933	WITHOUT_CLASSIFICATION	3.2290057706659564E-5	IMPLEMENTATION
// AF_INET	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
// 255.255.255.255	WITHOUT_CLASSIFICATION	0.9999053960346399	WITHOUT_CLASSIFICATION	9.460396536004441E-5	IMPLEMENTATION
// 0.0.0.0	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
//def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)	WITHOUT_CLASSIFICATION	0.9999315721094981	WITHOUT_CLASSIFICATION	6.842789050188346E-5	IMPLEMENTATION
// line 323	WITHOUT_CLASSIFICATION	0.9999303072217124	WITHOUT_CLASSIFICATION	6.969277828760286E-5	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999489966723485	WITHOUT_CLASSIFICATION	5.100332765161868E-5	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999489966723485	WITHOUT_CLASSIFICATION	5.100332765161868E-5	IMPLEMENTATION
// ok, it's a socket...set values accordingly // just using AF_INET since we can't tell from SocketChannel...	WITHOUT_CLASSIFICATION	0.99997652298108	WITHOUT_CLASSIFICATION	2.3477018919942977E-5	IMPLEMENTATION
// datagram, set accordingly // again, AF_INET	WITHOUT_CLASSIFICATION	0.99996870886517	WITHOUT_CLASSIFICATION	3.1291134829947014E-5	IMPLEMENTATION
//IRubyObject family = args[2];	WITHOUT_CLASSIFICATION	0.9999333568733498	WITHOUT_CLASSIFICATION	6.664312665011596E-5	IMPLEMENTATION
// When Socket::AI_PASSIVE and host is nil, return 'any' address. 	WITHOUT_CLASSIFICATION	0.9999471353167105	WITHOUT_CLASSIFICATION	5.28646832895643E-5	IMPLEMENTATION
// The value of 1 is for Socket::AI_PASSIVE.	WITHOUT_CLASSIFICATION	0.9999793466155672	WITHOUT_CLASSIFICATION	2.0653384432757028E-5	IMPLEMENTATION
// RubySocket	WITHOUT_CLASSIFICATION	0.9999056161181832	WITHOUT_CLASSIFICATION	9.438388181690223E-5	IMPLEMENTATION
// numeric host, use it for port	WITHOUT_CLASSIFICATION	0.9999457770414473	WITHOUT_CLASSIFICATION	5.422295855281246E-5	IMPLEMENTATION
//            e.printStackTrace();	WITHOUT_CLASSIFICATION	0.99998701234921	WITHOUT_CLASSIFICATION	1.2987650790042074E-5	IMPLEMENTATION
// we were woken up without being selected...poll for thread events and go back to sleep	WITHOUT_CLASSIFICATION	0.9999880496029055	WITHOUT_CLASSIFICATION	1.1950397094507694E-5	IMPLEMENTATION
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999901207224191	WITHOUT_CLASSIFICATION	9.879277580841918E-6	IMPLEMENTATION
// no connection immediately accepted, let them try again	WITHOUT_CLASSIFICATION	0.9999505645937261	WITHOUT_CLASSIFICATION	4.943540627391066E-5	IMPLEMENTATION
// do nothing, just exit	WITHOUT_CLASSIFICATION	0.9999862061852673	WITHOUT_CLASSIFICATION	1.3793814732543803E-5	IMPLEMENTATION
//nativeThread.setPriority(priority);	WITHOUT_CLASSIFICATION	0.9999186985152481	WITHOUT_CLASSIFICATION	8.130148475201167E-5	IMPLEMENTATION
// set thread context JRuby classloader here, for Ruby-owned thread	WITHOUT_CLASSIFICATION	0.9999678725450994	WITHOUT_CLASSIFICATION	3.21274549004746E-5	IMPLEMENTATION
// uber-ThreadKill catcher, since it should always just mean "be dead"	WITHOUT_CLASSIFICATION	0.9998761217011682	WITHOUT_CLASSIFICATION	1.238782988317111E-4	IMPLEMENTATION
// Call the thread's code	WITHOUT_CLASSIFICATION	0.9999480225837984	WITHOUT_CLASSIFICATION	5.197741620158436E-5	IMPLEMENTATION
// Someone called exit!, so we need to kill the main thread	WITHOUT_CLASSIFICATION	0.9999309224704851	WITHOUT_CLASSIFICATION	6.907752951484219E-5	IMPLEMENTATION
// restore context classloader, in case we're using a thread pool	WITHOUT_CLASSIFICATION	0.9999805728424697	WITHOUT_CLASSIFICATION	1.9427157530284572E-5	IMPLEMENTATION
// be dead	WITHOUT_CLASSIFICATION	0.996620531790548	WITHOUT_CLASSIFICATION	0.0033794682094519836	IMPLEMENTATION
// loop until a context is available, to clean up softrefs that might have been collected	WITHOUT_CLASSIFICATION	0.9999664403454679	WITHOUT_CLASSIFICATION	3.355965453204236E-5	IMPLEMENTATION
// all threads in ruby thread group plus main thread	WITHOUT_CLASSIFICATION	0.999961596412019	WITHOUT_CLASSIFICATION	3.840358798101117E-5	IMPLEMENTATION
// thread is not alive, skip it	WITHOUT_CLASSIFICATION	0.9999556875949218	WITHOUT_CLASSIFICATION	4.431240507814538E-5	IMPLEMENTATION
// future is done or cancelled, skip it	WITHOUT_CLASSIFICATION	0.9999510722718816	WITHOUT_CLASSIFICATION	4.8927728118469124E-5	IMPLEMENTATION
// first, check if the sender has unreceived mail	WITHOUT_CLASSIFICATION	0.9999805306933074	WITHOUT_CLASSIFICATION	1.9469306692620372E-5	IMPLEMENTATION
// then deliver mail to the target	WITHOUT_CLASSIFICATION	0.9999776619291411	WITHOUT_CLASSIFICATION	2.233807085889011E-5	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999269067129158	WITHOUT_CLASSIFICATION	7.309328708414149E-5	IMPLEMENTATION
// Define a second version that doesn't take a block, so we have unique code paths for both cases.	WITHOUT_CLASSIFICATION	0.9999699538293115	WITHOUT_CLASSIFICATION	3.0046170688500802E-5	IMPLEMENTATION
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9998949891668714	WITHOUT_CLASSIFICATION	1.0501083312867869E-4	IMPLEMENTATION
// main body	WITHOUT_CLASSIFICATION	0.9999106299503574	WITHOUT_CLASSIFICATION	8.937004964256163E-5	IMPLEMENTATION
// return jump handling	WITHOUT_CLASSIFICATION	0.9999809853378535	WITHOUT_CLASSIFICATION	1.9014662146531064E-5	IMPLEMENTATION
// finally	WITHOUT_CLASSIFICATION	0.9972791676948942	WITHOUT_CLASSIFICATION	0.002720832305105814	IMPLEMENTATION
// return result if we're still good	WITHOUT_CLASSIFICATION	0.9999906252541688	WITHOUT_CLASSIFICATION	9.374745831301333E-6	IMPLEMENTATION
// redo jump handling	WITHOUT_CLASSIFICATION	0.9999086009430677	WITHOUT_CLASSIFICATION	9.139905693240773E-5	IMPLEMENTATION
// clear the redo	WITHOUT_CLASSIFICATION	0.9999646521104016	WITHOUT_CLASSIFICATION	3.534788959841516E-5	IMPLEMENTATION
// get runtime, create jump error, and throw it	WITHOUT_CLASSIFICATION	0.9999775303012566	WITHOUT_CLASSIFICATION	2.24696987434218E-5	IMPLEMENTATION
// throw redo error if we're still good	WITHOUT_CLASSIFICATION	0.9999519090574076	WITHOUT_CLASSIFICATION	4.809094259238604E-5	IMPLEMENTATION
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999336238823511	WITHOUT_CLASSIFICATION	6.637611764889109E-5	IMPLEMENTATION
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9998782747394085	WITHOUT_CLASSIFICATION	1.2172526059144521E-4	IMPLEMENTATION
// No required specified, check actual number of required args	WITHOUT_CLASSIFICATION	0.999989536144145	WITHOUT_CLASSIFICATION	1.0463855855018533E-5	IMPLEMENTATION
// actual required is less than 3, so we use specific arity	WITHOUT_CLASSIFICATION	0.9999683943580127	WITHOUT_CLASSIFICATION	3.160564198734488E-5	IMPLEMENTATION
// actual required is greater than 3, raise error (we don't support actual required > 3)	WITHOUT_CLASSIFICATION	0.9999453158864396	WITHOUT_CLASSIFICATION	5.468411356038248E-5	IMPLEMENTATION
// simple path, no multimethod	WITHOUT_CLASSIFICATION	0.9999393851284759	WITHOUT_CLASSIFICATION	6.061487152407824E-5	IMPLEMENTATION
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999215591840875	WITHOUT_CLASSIFICATION	7.844081591250146E-5	IMPLEMENTATION
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999215591840875	WITHOUT_CLASSIFICATION	7.844081591250146E-5	IMPLEMENTATION
// normal all-rest method	WITHOUT_CLASSIFICATION	0.9999404554171208	WITHOUT_CLASSIFICATION	5.954458287925401E-5	IMPLEMENTATION
// for zero, one, two, three arities, JavaMethod.JavaMethod*.call(...IRubyObject[] args...) will check	WITHOUT_CLASSIFICATION	0.9999619285140507	WITHOUT_CLASSIFICATION	3.807148594922444E-5	IMPLEMENTATION
// promise to implement zero to N	WITHOUT_CLASSIFICATION	0.9945672219047978	WITHOUT_CLASSIFICATION	0.005432778095202159	IMPLEMENTATION
// return	WITHOUT_CLASSIFICATION	0.9994165297833921	WITHOUT_CLASSIFICATION	5.834702166078483E-4	IMPLEMENTATION
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.99995201798464	WITHOUT_CLASSIFICATION	4.7982015359924686E-5	IMPLEMENTATION
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999588008742208	WITHOUT_CLASSIFICATION	4.11991257791162E-5	IMPLEMENTATION
// confirm minimum args provided	WITHOUT_CLASSIFICATION	0.999949940889968	WITHOUT_CLASSIFICATION	5.005911003199553E-5	IMPLEMENTATION
// confirm maximum not greater than optional	WITHOUT_CLASSIFICATION	0.9999714844577057	WITHOUT_CLASSIFICATION	2.851554229430208E-5	IMPLEMENTATION
// Raise an error if arity does not match requirements	WITHOUT_CLASSIFICATION	0.9999711425757319	WITHOUT_CLASSIFICATION	2.8857424268106465E-5	IMPLEMENTATION
// tc	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
// self // name	WITHOUT_CLASSIFICATION	0.9999320891196403	WITHOUT_CLASSIFICATION	6.791088035972203E-5	IMPLEMENTATION
// no args	WITHOUT_CLASSIFICATION	0.9975696797956196	WITHOUT_CLASSIFICATION	0.0024303202043804454	IMPLEMENTATION
// variable args with block	WITHOUT_CLASSIFICATION	0.9999412239391041	WITHOUT_CLASSIFICATION	5.877606089582243E-5	IMPLEMENTATION
// variable args no block, load null block	WITHOUT_CLASSIFICATION	0.9999506771040978	WITHOUT_CLASSIFICATION	4.932289590219356E-5	IMPLEMENTATION
// zero args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999263144197114	WITHOUT_CLASSIFICATION	7.36855802886655E-5	IMPLEMENTATION
// one arg with block	WITHOUT_CLASSIFICATION	0.9999165271810552	WITHOUT_CLASSIFICATION	8.347281894479639E-5	IMPLEMENTATION
// one arg, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999269725786809	WITHOUT_CLASSIFICATION	7.302742131918346E-5	IMPLEMENTATION
// two args with block	WITHOUT_CLASSIFICATION	0.9999224689198544	WITHOUT_CLASSIFICATION	7.753108014571531E-5	IMPLEMENTATION
// two args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999265645611187	WITHOUT_CLASSIFICATION	7.343543888127776E-5	IMPLEMENTATION
// three args with block	WITHOUT_CLASSIFICATION	0.9999269893856187	WITHOUT_CLASSIFICATION	7.301061438128575E-5	IMPLEMENTATION
// three args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999308182787022	WITHOUT_CLASSIFICATION	6.918172129780393E-5	IMPLEMENTATION
// load block if it accepts block	WITHOUT_CLASSIFICATION	0.9999409875993202	WITHOUT_CLASSIFICATION	5.9012400679783044E-5	IMPLEMENTATION
// all other arg cases with block	WITHOUT_CLASSIFICATION	0.9999198582323544	WITHOUT_CLASSIFICATION	8.014176764553212E-5	IMPLEMENTATION
// all other arg cases without block	WITHOUT_CLASSIFICATION	0.9999217809121876	WITHOUT_CLASSIFICATION	7.821908781231562E-5	IMPLEMENTATION
// one arg, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999815494520561	WITHOUT_CLASSIFICATION	1.8450547943910478E-5	IMPLEMENTATION
// two args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999814463598115	WITHOUT_CLASSIFICATION	1.8553640188494833E-5	IMPLEMENTATION
// three args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999825211273554	WITHOUT_CLASSIFICATION	1.7478872644631358E-5	IMPLEMENTATION
// load target for invocations	WITHOUT_CLASSIFICATION	0.9999648127853183	WITHOUT_CLASSIFICATION	3.518721468160973E-5	IMPLEMENTATION
// load receiver as original type for virtual invocation	WITHOUT_CLASSIFICATION	0.9999692618540532	WITHOUT_CLASSIFICATION	3.0738145946782216E-5	IMPLEMENTATION
// static invocation	WITHOUT_CLASSIFICATION	0.9999541133966652	WITHOUT_CLASSIFICATION	4.588660333468307E-5	IMPLEMENTATION
// virtual invocation	WITHOUT_CLASSIFICATION	0.9999256534709124	WITHOUT_CLASSIFICATION	7.434652908760848E-5	IMPLEMENTATION
// void return type, so we need to load a nil for returning below	WITHOUT_CLASSIFICATION	0.9999521199592071	WITHOUT_CLASSIFICATION	4.788004079280497E-5	IMPLEMENTATION
// normal finally and exit	WITHOUT_CLASSIFICATION	0.99993628788555	WITHOUT_CLASSIFICATION	6.371211445002673E-5	IMPLEMENTATION
// promise to implement one to N	WITHOUT_CLASSIFICATION	0.9937544198142212	WITHOUT_CLASSIFICATION	0.0062455801857788295	IMPLEMENTATION
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9998782747394085	WITHOUT_CLASSIFICATION	1.2172526059144521E-4	IMPLEMENTATION
// these are only needed if we have a non-noop call config	WITHOUT_CLASSIFICATION	0.9999841618981422	WITHOUT_CLASSIFICATION	1.5838101857791238E-5	IMPLEMENTATION
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999643731907485	WITHOUT_CLASSIFICATION	3.562680925141035E-5	IMPLEMENTATION
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999643731907485	WITHOUT_CLASSIFICATION	3.562680925141035E-5	IMPLEMENTATION
// singleton classes don't get their own visibility domain	WITHOUT_CLASSIFICATION	0.9999858128054934	WITHOUT_CLASSIFICATION	1.418719450662681E-5	IMPLEMENTATION
// For visibility we need real meta class and not anonymous one from class << self	WITHOUT_CLASSIFICATION	0.9999850522000687	WITHOUT_CLASSIFICATION	1.4947799931393853E-5	IMPLEMENTATION
// SimpleInvocationMethod	WITHOUT_CLASSIFICATION	0.9999313499789542	WITHOUT_CLASSIFICATION	6.865002104580047E-5	IMPLEMENTATION
// never reached	WITHOUT_CLASSIFICATION	0.9999098894192048	WITHOUT_CLASSIFICATION	9.011058079523865E-5	IMPLEMENTATION
// promise to implement N with block	WITHOUT_CLASSIFICATION	0.9945544492495777	WITHOUT_CLASSIFICATION	0.005445550750422291	IMPLEMENTATION
// promise to implement zero to N with block	WITHOUT_CLASSIFICATION	0.9946589543289069	WITHOUT_CLASSIFICATION	0.005341045671093025	IMPLEMENTATION
// promise to implement one to N with block	WITHOUT_CLASSIFICATION	0.9938597916670314	WITHOUT_CLASSIFICATION	0.006140208332968527	IMPLEMENTATION
// promise to implement two to N with block	WITHOUT_CLASSIFICATION	0.9929123993309306	WITHOUT_CLASSIFICATION	0.007087600669069524	IMPLEMENTATION
// promise to implement zero to three with block	WITHOUT_CLASSIFICATION	0.995420400150799	WITHOUT_CLASSIFICATION	0.004579599849201001	IMPLEMENTATION
// promise to implement one to three with block	WITHOUT_CLASSIFICATION	0.994568414548363	WITHOUT_CLASSIFICATION	0.0054315854516370065	IMPLEMENTATION
// promise to implement two to three with block	WITHOUT_CLASSIFICATION	0.9939213209469218	WITHOUT_CLASSIFICATION	0.0060786790530781825	IMPLEMENTATION
// promise to implement three with block	WITHOUT_CLASSIFICATION	0.9910461349444954	WITHOUT_CLASSIFICATION	0.008953865055504563	IMPLEMENTATION
// promise to implement N	WITHOUT_CLASSIFICATION	0.993952581945772	WITHOUT_CLASSIFICATION	0.006047418054228029	IMPLEMENTATION
// DumpingInvocationMethodFactory	WITHOUT_CLASSIFICATION	0.9999495421570735	WITHOUT_CLASSIFICATION	5.045784292647104E-5	IMPLEMENTATION
// We promote our box to being its own box since we're changing // visibilities, and need it to be reflected on this method object // independent of any other sharing the box.	WITHOUT_CLASSIFICATION	0.9999931395728865	WITHOUT_CLASSIFICATION	6.860427113500462E-6	IMPLEMENTATION
// Normally we could leave these to fall back on the superclass, but // since it dispatches through the [] version below, which may // dispatch through the []+block version, we can save it a couple hops // by overriding these here.	WITHOUT_CLASSIFICATION	0.9999828114644105	WITHOUT_CLASSIFICATION	1.7188535589545725E-5	IMPLEMENTATION
// promise to implement two to N	WITHOUT_CLASSIFICATION	0.9927908872497508	WITHOUT_CLASSIFICATION	0.007209112750249144	IMPLEMENTATION
// promise to implement three to N	WITHOUT_CLASSIFICATION	0.9901076166203748	WITHOUT_CLASSIFICATION	0.00989238337962521	IMPLEMENTATION
// promise to implement zero to three	WITHOUT_CLASSIFICATION	0.9948376467508634	WITHOUT_CLASSIFICATION	0.00516235324913656	IMPLEMENTATION
// promise to implement one to three	WITHOUT_CLASSIFICATION	0.993877075887341	WITHOUT_CLASSIFICATION	0.006122924112658949	IMPLEMENTATION
// promise to implement two to three	WITHOUT_CLASSIFICATION	0.9931491228105161	WITHOUT_CLASSIFICATION	0.006850877189483772	IMPLEMENTATION
// promise to implement three	WITHOUT_CLASSIFICATION	0.9889908618508798	WITHOUT_CLASSIFICATION	0.01100913814912024	IMPLEMENTATION
// all other arities use "n" dispatch path	WITHOUT_CLASSIFICATION	0.9999289992004955	WITHOUT_CLASSIFICATION	7.100079950455028E-5	IMPLEMENTATION
// load up object and add a few useful methods	WITHOUT_CLASSIFICATION	0.9999806936426575	WITHOUT_CLASSIFICATION	1.9306357342450936E-5	IMPLEMENTATION
// open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel	WITHOUT_CLASSIFICATION	0.9999709870615786	WITHOUT_CLASSIFICATION	2.901293842148847E-5	IMPLEMENTATION
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9994305493696812	WITHOUT_CLASSIFICATION	5.694506303186714E-4	IMPLEMENTATION
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999641992958562	WITHOUT_CLASSIFICATION	3.580070414377586E-5	IMPLEMENTATION
// create constructor	WITHOUT_CLASSIFICATION	0.9999860049084299	WITHOUT_CLASSIFICATION	1.3995091570001204E-5	IMPLEMENTATION
// wrap self and store the wrapper	WITHOUT_CLASSIFICATION	0.9999645467125902	WITHOUT_CLASSIFICATION	3.545328740988745E-5	IMPLEMENTATION
// end constructor	WITHOUT_CLASSIFICATION	0.9999431008849383	WITHOUT_CLASSIFICATION	5.6899115061618286E-5	IMPLEMENTATION
// start setup method	WITHOUT_CLASSIFICATION	0.9999664648048999	WITHOUT_CLASSIFICATION	3.353519510017329E-5	IMPLEMENTATION
// set RubyClass	WITHOUT_CLASSIFICATION	0.9999463091379112	WITHOUT_CLASSIFICATION	5.369086208894396E-5	IMPLEMENTATION
// set Ruby	WITHOUT_CLASSIFICATION	0.9999462905833981	WITHOUT_CLASSIFICATION	5.3709416601981845E-5	IMPLEMENTATION
// all methods dispatch to the simple version by default, which is method_missing normally	WITHOUT_CLASSIFICATION	0.9999926086440186	WITHOUT_CLASSIFICATION	7.391355981355012E-6	IMPLEMENTATION
// try specific name first, falling back on simple name	WITHOUT_CLASSIFICATION	0.9999707823778569	WITHOUT_CLASSIFICATION	2.921762214307743E-5	IMPLEMENTATION
// get current context	WITHOUT_CLASSIFICATION	0.9999741293432927	WITHOUT_CLASSIFICATION	2.5870656707368848E-5	IMPLEMENTATION
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999569211566188	WITHOUT_CLASSIFICATION	4.3078843381214404E-5	IMPLEMENTATION
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9994305493696812	WITHOUT_CLASSIFICATION	5.694506303186714E-4	IMPLEMENTATION
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999641992958562	WITHOUT_CLASSIFICATION	3.580070414377586E-5	IMPLEMENTATION
// create constructor	WITHOUT_CLASSIFICATION	0.9999860049084299	WITHOUT_CLASSIFICATION	1.3995091570001204E-5	IMPLEMENTATION
// end constructor	WITHOUT_CLASSIFICATION	0.9999431008849383	WITHOUT_CLASSIFICATION	5.6899115061618286E-5	IMPLEMENTATION
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9992543285592569	WITHOUT_CLASSIFICATION	7.45671440743031E-4	IMPLEMENTATION
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999719302645075	WITHOUT_CLASSIFICATION	2.806973549246322E-5	IMPLEMENTATION
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999535491176282	WITHOUT_CLASSIFICATION	4.645088237170723E-5	IMPLEMENTATION
// load null block	WITHOUT_CLASSIFICATION	0.9999361859050215	WITHOUT_CLASSIFICATION	6.38140949785077E-5	IMPLEMENTATION
// invoke method	WITHOUT_CLASSIFICATION	0.9999403341096862	WITHOUT_CLASSIFICATION	5.9665890313676304E-5	IMPLEMENTATION
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.999958210866558	WITHOUT_CLASSIFICATION	4.178913344196577E-5	IMPLEMENTATION
// end setup method	WITHOUT_CLASSIFICATION	0.9999498028503024	WITHOUT_CLASSIFICATION	5.019714969755643E-5	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.9999696100003335	WITHOUT_CLASSIFICATION	3.038999966658004E-5	IMPLEMENTATION
// create static init, for a monitor object	WITHOUT_CLASSIFICATION	0.9999919063361811	WITHOUT_CLASSIFICATION	8.093663818947939E-6	IMPLEMENTATION
// store the wrapper	WITHOUT_CLASSIFICATION	0.9999638722534727	WITHOUT_CLASSIFICATION	3.612774652733302E-5	IMPLEMENTATION
// prepare temp locals	WITHOUT_CLASSIFICATION	0.9999452908942247	WITHOUT_CLASSIFICATION	5.4709105775402916E-5	IMPLEMENTATION
// Try to look up field for simple name // get field; if nonnull, go straight to dispatch	WITHOUT_CLASSIFICATION	0.9999791202238961	WITHOUT_CLASSIFICATION	2.0879776103950134E-5	IMPLEMENTATION
// field is null, lock class and try to populate	WITHOUT_CLASSIFICATION	0.999979861155198	WITHOUT_CLASSIFICATION	2.0138844801975014E-5	IMPLEMENTATION
// try/finally block to ensure unlock	WITHOUT_CLASSIFICATION	0.9999502687793235	WITHOUT_CLASSIFICATION	4.973122067659997E-5	IMPLEMENTATION
// store it	WITHOUT_CLASSIFICATION	0.9999344953758044	WITHOUT_CLASSIFICATION	6.550462419558379E-5	IMPLEMENTATION
// end of try block	WITHOUT_CLASSIFICATION	0.9999522162263695	WITHOUT_CLASSIFICATION	4.7783773630406196E-5	IMPLEMENTATION
// finally block to release monitor	WITHOUT_CLASSIFICATION	0.9999466765839821	WITHOUT_CLASSIFICATION	5.332341601795843E-5	IMPLEMENTATION
// exception handling for monitor release	WITHOUT_CLASSIFICATION	0.9998906369481361	WITHOUT_CLASSIFICATION	1.0936305186392702E-4	IMPLEMENTATION
// re-get, re-check method; if not null now, go to dispatch	WITHOUT_CLASSIFICATION	0.9999501390833088	WITHOUT_CLASSIFICATION	4.9860916691352045E-5	IMPLEMENTATION
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999569211566188	WITHOUT_CLASSIFICATION	4.3078843381214404E-5	IMPLEMENTATION
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999719302645075	WITHOUT_CLASSIFICATION	2.806973549246322E-5	IMPLEMENTATION
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999535491176282	WITHOUT_CLASSIFICATION	4.645088237170723E-5	IMPLEMENTATION
// invoke method	WITHOUT_CLASSIFICATION	0.9999403341096862	WITHOUT_CLASSIFICATION	5.9665890313676304E-5	IMPLEMENTATION
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.999958210866558	WITHOUT_CLASSIFICATION	4.178913344196577E-5	IMPLEMENTATION
// end setup method	WITHOUT_CLASSIFICATION	0.9999498028503024	WITHOUT_CLASSIFICATION	5.019714969755643E-5	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.9999696100003335	WITHOUT_CLASSIFICATION	3.038999966658004E-5	IMPLEMENTATION
// create the class	WITHOUT_CLASSIFICATION	0.9999907720437319	WITHOUT_CLASSIFICATION	9.227956268167634E-6	IMPLEMENTATION
// method still not available, call method_missing	WITHOUT_CLASSIFICATION	0.999939053051139	WITHOUT_CLASSIFICATION	6.0946948861102214E-5	IMPLEMENTATION
// perform the dispatch	WITHOUT_CLASSIFICATION	0.9999584855113957	WITHOUT_CLASSIFICATION	4.15144886042764E-5	IMPLEMENTATION
// try to load the specified name; only if that fails, try to define the class	WITHOUT_CLASSIFICATION	0.9999983079037328	WITHOUT_CLASSIFICATION	1.6920962672658322E-6	IMPLEMENTATION
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999272281859478	WITHOUT_CLASSIFICATION	7.277181405228336E-5	IMPLEMENTATION
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999272281859478	WITHOUT_CLASSIFICATION	7.277181405228336E-5	IMPLEMENTATION
// setup the class	WITHOUT_CLASSIFICATION	0.9999805823019482	WITHOUT_CLASSIFICATION	1.9417698051823244E-5	IMPLEMENTATION
// now, create a method_added that can replace the DynamicMethod fields as they're redefined	WITHOUT_CLASSIFICATION	0.9999656508906437	WITHOUT_CLASSIFICATION	3.434910935622146E-5	IMPLEMENTATION
// do nothing, it's a non-impl method	WITHOUT_CLASSIFICATION	0.9999887372907318	WITHOUT_CLASSIFICATION	1.1262709268194285E-5	IMPLEMENTATION
// probably a primitive	WITHOUT_CLASSIFICATION	0.9999404747424834	WITHOUT_CLASSIFICATION	5.9525257516656325E-5	IMPLEMENTATION
// interfaces are handled as modules	WITHOUT_CLASSIFICATION	0.999955380118154	WITHOUT_CLASSIFICATION	4.461988184603561E-5	IMPLEMENTATION
// construct the mirror class and parent classes	WITHOUT_CLASSIFICATION	0.9999916651548553	WITHOUT_CLASSIFICATION	8.334845144733333E-6	IMPLEMENTATION
// set the full name	WITHOUT_CLASSIFICATION	0.9999581910573093	WITHOUT_CLASSIFICATION	4.180894269080206E-5	IMPLEMENTATION
// include all interfaces	WITHOUT_CLASSIFICATION	0.9999510507900663	WITHOUT_CLASSIFICATION	4.894920993371284E-5	IMPLEMENTATION
// if it's an array, only add methods for aref, aset, and length	WITHOUT_CLASSIFICATION	0.9999783181472125	WITHOUT_CLASSIFICATION	2.1681852787430063E-5	IMPLEMENTATION
// add array construction methods	WITHOUT_CLASSIFICATION	0.9999802482582323	WITHOUT_CLASSIFICATION	1.975174176767498E-5	IMPLEMENTATION
// add all public constructors (note: getConstructors only returns public ones)	WITHOUT_CLASSIFICATION	0.9999897836206725	WITHOUT_CLASSIFICATION	1.0216379327638682E-5	IMPLEMENTATION
// add all instance and static methods	WITHOUT_CLASSIFICATION	0.9999870125944346	WITHOUT_CLASSIFICATION	1.2987405565424796E-5	IMPLEMENTATION
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999135891923508	WITHOUT_CLASSIFICATION	8.641080764917514E-5	IMPLEMENTATION
// too much array creation!	WITHOUT_CLASSIFICATION	0.999943538760578	WITHOUT_CLASSIFICATION	5.646123942199254E-5	IMPLEMENTATION
// only include static methods if specified	WITHOUT_CLASSIFICATION	0.9999845635865827	WITHOUT_CLASSIFICATION	1.543641341728813E-5	IMPLEMENTATION
// add a few type-specific special methods	WITHOUT_CLASSIFICATION	0.9999851210077717	WITHOUT_CLASSIFICATION	1.4878992228251014E-5	IMPLEMENTATION
// add all static variables	WITHOUT_CLASSIFICATION	0.9999796140803129	WITHOUT_CLASSIFICATION	2.03859196870543E-5	IMPLEMENTATION
// only public static fields that are valid constants	WITHOUT_CLASSIFICATION	0.9999889168712133	WITHOUT_CLASSIFICATION	1.1083128786712516E-5	IMPLEMENTATION
// looks like someone's trying to raise a Java exception. Let them.	WITHOUT_CLASSIFICATION	0.9999322244041888	WITHOUT_CLASSIFICATION	6.777559581120309E-5	IMPLEMENTATION
// NOTE: The five match methods are arity-split to avoid the cost of boxing arguments // when there's already a cached match. Do not condense them into a single // method.	WITHOUT_CLASSIFICATION	0.9999963737681782	WITHOUT_CLASSIFICATION	3.6262318218194737E-6	IMPLEMENTATION
// TODO: This is where we would want to do precision checks to see // if it's non-destructive to coerce a given type into the target // integral primitive	WITHOUT_CLASSIFICATION	0.590387007650732	WITHOUT_CLASSIFICATION	0.409612992349268	IMPLEMENTATION
// long first because it's what Fixnum claims to be	WITHOUT_CLASSIFICATION	0.9999770106374588	WITHOUT_CLASSIFICATION	2.29893625411632E-5	IMPLEMENTATION
// double first because it's what float claims to be	WITHOUT_CLASSIFICATION	0.9999897867262098	WITHOUT_CLASSIFICATION	1.0213273790360452E-5	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9418741805737971	WITHOUT_CLASSIFICATION	0.05812581942620288	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999283469799195	WITHOUT_CLASSIFICATION	7.165302008049299E-5	IMPLEMENTATION
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.999992188307209	WITHOUT_CLASSIFICATION	7.811692790916555E-6	IMPLEMENTATION
// we set all Java methods to optional, since many/most have overloads	WITHOUT_CLASSIFICATION	0.9999767691054852	WITHOUT_CLASSIFICATION	2.3230894514748127E-5	IMPLEMENTATION
// If we hold a Java object, we need a java_class accessor	WITHOUT_CLASSIFICATION	0.999962280229804	WITHOUT_CLASSIFICATION	3.771977019584027E-5	IMPLEMENTATION
// line 326	WITHOUT_CLASSIFICATION	0.9999303072217124	WITHOUT_CLASSIFICATION	6.969277828760286E-5	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999283469799195	WITHOUT_CLASSIFICATION	7.165302008049299E-5	IMPLEMENTATION
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.999992188307209	WITHOUT_CLASSIFICATION	7.811692790916555E-6	IMPLEMENTATION
// too much array creation!	WITHOUT_CLASSIFICATION	0.999943538760578	WITHOUT_CLASSIFICATION	5.646123942199254E-5	IMPLEMENTATION
// construct new array proxy (ArrayJavaProxy)	WITHOUT_CLASSIFICATION	0.9999636192394292	WITHOUT_CLASSIFICATION	3.6380760570833514E-5	IMPLEMENTATION
// Get map of all fields we want to define.  	WITHOUT_CLASSIFICATION	0.999934925518408	WITHOUT_CLASSIFICATION	6.50744815919069E-5	IMPLEMENTATION
// Look through all mappings to find a match entry for this field	WITHOUT_CLASSIFICATION	0.99996415663281	WITHOUT_CLASSIFICATION	3.584336719005683E-5	IMPLEMENTATION
// Hit a non-java proxy class (included Modules can be a cause of this...skip)	WITHOUT_CLASSIFICATION	0.9999733231045831	WITHOUT_CLASSIFICATION	2.667689541693276E-5	IMPLEMENTATION
// We could not find all of them print out first one (we could print them all?)	WITHOUT_CLASSIFICATION	0.9999843426944428	WITHOUT_CLASSIFICATION	1.565730555726381E-5	IMPLEMENTATION
// dummy bodies for default impls	WITHOUT_CLASSIFICATION	0.9999798846629807	WITHOUT_CLASSIFICATION	2.0115337019296855E-5	IMPLEMENTATION
// initialize this if it hasn't been	WITHOUT_CLASSIFICATION	0.9999790615111314	WITHOUT_CLASSIFICATION	2.09384888687203E-5	IMPLEMENTATION
// initialize these if they haven't been	WITHOUT_CLASSIFICATION	0.9999859418452632	WITHOUT_CLASSIFICATION	1.4058154736762093E-5	IMPLEMENTATION
// not allowed for original (non-generated) Java classes // note: not allowing for any previously created class right now; // this restriction might be loosened later for generated classes	WITHOUT_CLASSIFICATION	0.9999791963150053	WITHOUT_CLASSIFICATION	2.0803684994786293E-5	IMPLEMENTATION
// setup new, etc unless this is a ConcreteJavaProxy subclass	WITHOUT_CLASSIFICATION	0.9999827230234627	WITHOUT_CLASSIFICATION	1.727697653730876E-5	IMPLEMENTATION
// First we make modifications to the class, to adapt it to being // both a Ruby class and a proxy for a Java type	WITHOUT_CLASSIFICATION	0.9999948351630705	WITHOUT_CLASSIFICATION	5.164836929491096E-6	IMPLEMENTATION
// list of interfaces we implement	WITHOUT_CLASSIFICATION	0.9989771550671687	WITHOUT_CLASSIFICATION	0.0010228449328313835	IMPLEMENTATION
// We capture the original "new" and make it private	WITHOUT_CLASSIFICATION	0.9999658575774759	WITHOUT_CLASSIFICATION	3.414242252400828E-5	IMPLEMENTATION
// The replacement "new" allocates and inits the Ruby object as before, but // also instantiates our proxified Java object by calling __jcreate!	WITHOUT_CLASSIFICATION	0.9999931086794883	WITHOUT_CLASSIFICATION	6.8913205116442126E-6	IMPLEMENTATION
// Next, we define a few private methods that we'll use to manipulate // the Java object contained within this Ruby object	WITHOUT_CLASSIFICATION	0.9999936139931468	WITHOUT_CLASSIFICATION	6.386006853174704E-6	IMPLEMENTATION
// jcreate instantiates the proxy object which implements all interfaces // and which is wrapped and implemented by this object	WITHOUT_CLASSIFICATION	0.9998761922403706	WITHOUT_CLASSIFICATION	1.2380775962931675E-4	IMPLEMENTATION
// Now we add an "implement" and "implement_all" methods to the class	WITHOUT_CLASSIFICATION	0.9998656234198648	WITHOUT_CLASSIFICATION	1.343765801351682E-4	IMPLEMENTATION
// implement all forces implementation of all interfaces we intend // for this class to implement	WITHOUT_CLASSIFICATION	0.999873012053565	WITHOUT_CLASSIFICATION	1.2698794643491778E-4	IMPLEMENTATION
// we've already done the above priming logic, just add another interface // to the list of intentions unless we're past the point of no return or // already intend to implement the given interface	WITHOUT_CLASSIFICATION	0.9998348342813819	WITHOUT_CLASSIFICATION	1.6516571861806517E-4	IMPLEMENTATION
// walk all superclasses aggregating interfaces	WITHOUT_CLASSIFICATION	0.9999805161507004	WITHOUT_CLASSIFICATION	1.948384929969658E-5	IMPLEMENTATION
// construct the new interface impl and set it into the object	WITHOUT_CLASSIFICATION	0.9999975750462806	WITHOUT_CLASSIFICATION	2.4249537192741236E-6	IMPLEMENTATION
// assuming the user wants a collection of interfaces that can be // included together. make it so.	WITHOUT_CLASSIFICATION	0.9999878465562074	WITHOUT_CLASSIFICATION	1.2153443792473487E-5	IMPLEMENTATION
// not allowed for existing Java interface modules	WITHOUT_CLASSIFICATION	0.99994981847735	WITHOUT_CLASSIFICATION	5.0181522650026156E-5	IMPLEMENTATION
// To turn a module into an "interface collection" we add a class instance // variable to hold the list of interfaces, and modify append_features // for this module to call append_features on each of those interfaces as // well	WITHOUT_CLASSIFICATION	0.9999990160986897	WITHOUT_CLASSIFICATION	9.839013102067047E-7	IMPLEMENTATION
// already set up append_features, just add the interface if we haven't already	WITHOUT_CLASSIFICATION	0.9999954900439689	WITHOUT_CLASSIFICATION	4.509956031058569E-6	IMPLEMENTATION
// array-of-interface-type creation/identity	WITHOUT_CLASSIFICATION	0.9999673255479337	WITHOUT_CLASSIFICATION	3.2674452066380016E-5	IMPLEMENTATION
// keep this variant for kind_of? testing	WITHOUT_CLASSIFICATION	0.9999398149634999	WITHOUT_CLASSIFICATION	6.0185036500127086E-5	IMPLEMENTATION
// array creation should use this variant	WITHOUT_CLASSIFICATION	0.999868299758911	WITHOUT_CLASSIFICATION	1.317002410889453E-4	IMPLEMENTATION
// parent.setConstant(name, proxyClass); // where the name should come from ?	WITHOUT_CLASSIFICATION	0.9999675658655445	WITHOUT_CLASSIFICATION	3.24341344555867E-5	IMPLEMENTATION
// including interface module so old-style interface "subclasses" will // respond correctly to #kind_of?, etc.	WITHOUT_CLASSIFICATION	0.9999901337405485	WITHOUT_CLASSIFICATION	9.866259451568623E-6	IMPLEMENTATION
// add reference to interface module	WITHOUT_CLASSIFICATION	0.9999891689316489	WITHOUT_CLASSIFICATION	1.0831068351018049E-5	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999418330257996	WITHOUT_CLASSIFICATION	5.8166974200377315E-5	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999418330257996	WITHOUT_CLASSIFICATION	5.8166974200377315E-5	IMPLEMENTATION
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999135891923508	WITHOUT_CLASSIFICATION	8.641080764917514E-5	IMPLEMENTATION
// same as argument_types, but matches name in java.lang.reflect.Constructor/Method	WITHOUT_CLASSIFICATION	0.9999809383724733	WITHOUT_CLASSIFICATION	1.9061627526737922E-5	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999798717759861	WITHOUT_CLASSIFICATION	2.0128224013954126E-5	IMPLEMENTATION
// weakly reserved names	WITHOUT_CLASSIFICATION	0.9999213072088535	WITHOUT_CLASSIFICATION	7.869279114655013E-5	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999832937137986	WITHOUT_CLASSIFICATION	1.6706286201341945E-5	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999832937137986	WITHOUT_CLASSIFICATION	1.6706286201341945E-5	IMPLEMENTATION
// modified only by addMethod; no synchronization required	WITHOUT_CLASSIFICATION	0.9999728310127913	WITHOUT_CLASSIFICATION	2.7168987208669638E-5	IMPLEMENTATION
// if there's no constructor, we must prevent construction	WITHOUT_CLASSIFICATION	0.9999670714160689	WITHOUT_CLASSIFICATION	3.292858393111057E-5	IMPLEMENTATION
// caching constructors, as they're accessed for each new instance	WITHOUT_CLASSIFICATION	0.9999687191809978	WITHOUT_CLASSIFICATION	3.128081900205477E-5	IMPLEMENTATION
// proxy module for interfaces	WITHOUT_CLASSIFICATION	0.9999722938535619	WITHOUT_CLASSIFICATION	2.7706146438184833E-5	IMPLEMENTATION
// proxy class for concrete classes.  also used for // "concrete" interfaces, which is why we have two fields	WITHOUT_CLASSIFICATION	0.9999947960868943	WITHOUT_CLASSIFICATION	5.203913105663698E-6	IMPLEMENTATION
// readable only by thread building proxy, so don't need to be // volatile. used to handle recursive calls to getProxyClass/Module // while proxy is being constructed (usually when a constant // defined by a class is of the same type as that class).	WITHOUT_CLASSIFICATION	0.9999990125140332	WITHOUT_CLASSIFICATION	9.874859667576284E-7	IMPLEMENTATION
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999805768281209	WITHOUT_CLASSIFICATION	1.94231718791469E-5	IMPLEMENTATION
// Now add all aliases for the static methods (fields) as appropriate	WITHOUT_CLASSIFICATION	0.999978710993223	WITHOUT_CLASSIFICATION	2.128900677699222E-5	IMPLEMENTATION
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999683505173268	WITHOUT_CLASSIFICATION	3.1649482673186096E-5	IMPLEMENTATION
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999748235625181	WITHOUT_CLASSIFICATION	2.5176437481973896E-5	IMPLEMENTATION
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999432831563387	WITHOUT_CLASSIFICATION	5.671684366127514E-5	IMPLEMENTATION
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999385644077146	WITHOUT_CLASSIFICATION	6.143559228541305E-5	IMPLEMENTATION
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999228030500446	WITHOUT_CLASSIFICATION	7.719694995541186E-5	IMPLEMENTATION
// Additionally add ?-postfixed aliases to any boolean methods and properties.	WITHOUT_CLASSIFICATION	0.9999823507028301	WITHOUT_CLASSIFICATION	1.7649297169852805E-5	IMPLEMENTATION
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999392411980309	WITHOUT_CLASSIFICATION	6.075880196921414E-5	IMPLEMENTATION
// something?	WITHOUT_CLASSIFICATION	0.9999275026819222	WITHOUT_CLASSIFICATION	7.249731807782041E-5	IMPLEMENTATION
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999903125169178	WITHOUT_CLASSIFICATION	9.687483082236982E-6	IMPLEMENTATION
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999903125169178	WITHOUT_CLASSIFICATION	9.687483082236982E-6	IMPLEMENTATION
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999984781571265	WITHOUT_CLASSIFICATION	1.521842873490446E-6	IMPLEMENTATION
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999984781571265	WITHOUT_CLASSIFICATION	1.521842873490446E-6	IMPLEMENTATION
// create constructorInstaller; if there are no constructors, it will disable construction	WITHOUT_CLASSIFICATION	0.9999976191423822	WITHOUT_CLASSIFICATION	2.3808576178918645E-6	IMPLEMENTATION
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999885706140469	WITHOUT_CLASSIFICATION	1.142938595317272E-5	IMPLEMENTATION
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999726046069626	WITHOUT_CLASSIFICATION	2.7395393037442003E-5	IMPLEMENTATION
// now iterate over all installers and make sure they also have appropriate aliases	WITHOUT_CLASSIFICATION	0.9999544146356253	WITHOUT_CLASSIFICATION	4.5585364374647816E-5	IMPLEMENTATION
// old (quasi-deprecated) interface class	WITHOUT_CLASSIFICATION	0.9999807437569961	WITHOUT_CLASSIFICATION	1.92562430039303E-5	IMPLEMENTATION
// 1.9 support for encodings	WITHOUT_CLASSIFICATION	0.9997624875368513	WITHOUT_CLASSIFICATION	2.375124631486676E-4	IMPLEMENTATION
// double-check the cache now that we're synchronized	WITHOUT_CLASSIFICATION	0.9999863730615541	WITHOUT_CLASSIFICATION	1.3626938445884734E-5	IMPLEMENTATION
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999385644077146	WITHOUT_CLASSIFICATION	6.143559228541305E-5	IMPLEMENTATION
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999228030500446	WITHOUT_CLASSIFICATION	7.719694995541186E-5	IMPLEMENTATION
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999392411980309	WITHOUT_CLASSIFICATION	6.075880196921414E-5	IMPLEMENTATION
// one word type name that starts lower-case...it may be a primitive type	WITHOUT_CLASSIFICATION	0.9999799820995053	WITHOUT_CLASSIFICATION	2.0017900494646042E-5	IMPLEMENTATION
// Java.getProxyClass deals with sync issues, so we won't duplicate the logic here	WITHOUT_CLASSIFICATION	0.9999714200948393	WITHOUT_CLASSIFICATION	2.8579905160635906E-5	IMPLEMENTATION
// note: intentionally returning the actual array returned from Java, rather // than wrapping it in a RubyArray. wave of the future, when java_class will // return the actual class, rather than a JavaClass wrapper.	WITHOUT_CLASSIFICATION	0.999998504768953	WITHOUT_CLASSIFICATION	1.4952310469648093E-6	IMPLEMENTATION
// see note above re: return type	WITHOUT_CLASSIFICATION	0.9999470589791459	WITHOUT_CLASSIFICATION	5.294102085400101E-5	IMPLEMENTATION
// restrictive security policy; no matter, we only want public // classes anyway	WITHOUT_CLASSIFICATION	0.9999857418699415	WITHOUT_CLASSIFICATION	1.425813005865101E-5	IMPLEMENTATION
// very restrictive policy (disallows Member.PUBLIC) // we'd never actually get this far in that case	WITHOUT_CLASSIFICATION	0.9998903038206456	WITHOUT_CLASSIFICATION	1.0969617935438051E-4	IMPLEMENTATION
// one-dimensional array	WITHOUT_CLASSIFICATION	0.999935123523137	WITHOUT_CLASSIFICATION	6.487647686306047E-5	IMPLEMENTATION
// n-dimensional array	WITHOUT_CLASSIFICATION	0.9999346110562332	WITHOUT_CLASSIFICATION	6.538894376675762E-5	IMPLEMENTATION
// if it's an array of arrays, recurse with the component type	WITHOUT_CLASSIFICATION	0.999977897599095	WITHOUT_CLASSIFICATION	2.2102400905020054E-5	IMPLEMENTATION
// we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods // see JRUBY-3130	WITHOUT_CLASSIFICATION	0.9999912503363976	WITHOUT_CLASSIFICATION	8.749663602421969E-6	IMPLEMENTATION
// Proc implementing an interface, pull in the catch-all code that lets the proc get invoked // no matter what method is called on the interface	WITHOUT_CLASSIFICATION	0.9998182715597448	WITHOUT_CLASSIFICATION	1.817284402553389E-4	IMPLEMENTATION
// can't be converted any more, return it	WITHOUT_CLASSIFICATION	0.9999781406329146	WITHOUT_CLASSIFICATION	2.185936708548002E-5	IMPLEMENTATION
// getFooBar() => fooBar?, foo_bar?(*)	WITHOUT_CLASSIFICATION	0.9999405853229412	WITHOUT_CLASSIFICATION	5.9414677058774724E-5	IMPLEMENTATION
// If not a property, but is boolean add ?-postfixed aliases.	WITHOUT_CLASSIFICATION	0.9999786413388164	WITHOUT_CLASSIFICATION	2.1358661183574726E-5	IMPLEMENTATION
// many cases are ok to convert to float; if not one of these, error	WITHOUT_CLASSIFICATION	0.9999676703045199	WITHOUT_CLASSIFICATION	3.232969548000911E-5	IMPLEMENTATION
// for Object, default to natural wrapper type	WITHOUT_CLASSIFICATION	0.9999881390035391	WITHOUT_CLASSIFICATION	1.186099646094978E-5	IMPLEMENTATION
// rubyObject is already of the required jruby class (or subclass)	WITHOUT_CLASSIFICATION	0.9999940381585251	WITHOUT_CLASSIFICATION	5.961841474912742E-6	IMPLEMENTATION
// the converters handle not only primitive types but also their boxed versions, so we should check // if we have a converter before checking for isPrimitive()	WITHOUT_CLASSIFICATION	0.9999822616633192	WITHOUT_CLASSIFICATION	1.773833668081066E-5	IMPLEMENTATION
// it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999833262340021	WITHOUT_CLASSIFICATION	1.6673765997890386E-5	IMPLEMENTATION
// we've found a Java type to which we've coerced the Ruby value, wrap it	WITHOUT_CLASSIFICATION	0.9999671649360221	WITHOUT_CLASSIFICATION	3.283506397794692E-5	IMPLEMENTATION
// set of utility methods for Java-based proxy objects	WITHOUT_CLASSIFICATION	0.9999829002756839	WITHOUT_CLASSIFICATION	1.7099724316117484E-5	IMPLEMENTATION
// the proxy (wrapper) type hierarchy	WITHOUT_CLASSIFICATION	0.999966782148259	WITHOUT_CLASSIFICATION	3.3217851740965034E-5	IMPLEMENTATION
//InterfaceJavaProxy.createInterfaceJavaProxy(context);	WITHOUT_CLASSIFICATION	0.9999589082360358	WITHOUT_CLASSIFICATION	4.109176396413413E-5	IMPLEMENTATION
// also create the JavaProxy* classes	WITHOUT_CLASSIFICATION	0.9999785235584498	WITHOUT_CLASSIFICATION	2.1476441550183155E-5	IMPLEMENTATION
// The template for interface modules	WITHOUT_CLASSIFICATION	0.9999900128921565	WITHOUT_CLASSIFICATION	9.987107843570228E-6	IMPLEMENTATION
// Now attach Java-related extras to core classes	WITHOUT_CLASSIFICATION	0.9999654377504217	WITHOUT_CLASSIFICATION	3.456224957836243E-5	IMPLEMENTATION
// add all name-to-class mappings	WITHOUT_CLASSIFICATION	0.9999551240877967	WITHOUT_CLASSIFICATION	4.4875912203313855E-5	IMPLEMENTATION
// add some base Java classes everyone will need	WITHOUT_CLASSIFICATION	0.9999780965541405	WITHOUT_CLASSIFICATION	2.1903445859554656E-5	IMPLEMENTATION
// finally, set JavaSupport.isEnabled to true	WITHOUT_CLASSIFICATION	0.9999427055515712	WITHOUT_CLASSIFICATION	5.729444842876781E-5	IMPLEMENTATION
// shouldn't happen, but if a superclass is specified, it's not ours	WITHOUT_CLASSIFICATION	0.9999905046741143	WITHOUT_CLASSIFICATION	9.495325885722697E-6	IMPLEMENTATION
// include any interfaces we extend	WITHOUT_CLASSIFICATION	0.9999686301918005	WITHOUT_CLASSIFICATION	3.1369808199498784E-5	IMPLEMENTATION
// java.lang.Object is added at root of java proxy classes	WITHOUT_CLASSIFICATION	0.9999895254186092	WITHOUT_CLASSIFICATION	1.047458139076989E-5	IMPLEMENTATION
// other java proxy classes added under their superclass' java proxy	WITHOUT_CLASSIFICATION	0.9999752218007697	WITHOUT_CLASSIFICATION	2.47781992303049E-5	IMPLEMENTATION
// include interface modules into the proxy class	WITHOUT_CLASSIFICATION	0.9999886635259676	WITHOUT_CLASSIFICATION	1.1336474032439684E-5	IMPLEMENTATION
// JRUBY-2938 the proxy class might already exist	WITHOUT_CLASSIFICATION	0.9999759753411168	WITHOUT_CLASSIFICATION	2.4024658883171366E-5	IMPLEMENTATION
// add java_method for unbound use	WITHOUT_CLASSIFICATION	0.9999562361403156	WITHOUT_CLASSIFICATION	4.376385968446632E-5	IMPLEMENTATION
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999596687111854	WITHOUT_CLASSIFICATION	4.033128881464067E-5	IMPLEMENTATION
// we'll only map conventional class names to modules 	WITHOUT_CLASSIFICATION	0.9999704631536217	WITHOUT_CLASSIFICATION	2.953684637836146E-5	IMPLEMENTATION
/* expected */	WITHOUT_CLASSIFICATION	0.99994736105389	WITHOUT_CLASSIFICATION	5.2638946109880666E-5	IMPLEMENTATION
// Haven't found a class, continue on as though it were a package	WITHOUT_CLASSIFICATION	0.9999791667112408	WITHOUT_CLASSIFICATION	2.0833288759237237E-5	IMPLEMENTATION
// upper case name, so most likely a class	WITHOUT_CLASSIFICATION	0.9999767739870312	WITHOUT_CLASSIFICATION	2.322601296871578E-5	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999798717759861	WITHOUT_CLASSIFICATION	2.0128224013954126E-5	IMPLEMENTATION
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999596687111854	WITHOUT_CLASSIFICATION	4.033128881464067E-5	IMPLEMENTATION
// this is where we'll get connected when classes are opened using // package module syntax.	WITHOUT_CLASSIFICATION	0.9999879151539578	WITHOUT_CLASSIFICATION	1.2084846042173171E-5	IMPLEMENTATION
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.999990352674465	WITHOUT_CLASSIFICATION	9.647325534942718E-6	IMPLEMENTATION
// this covers primitives and (unlikely) lower-case class names	WITHOUT_CLASSIFICATION	0.9999765509802384	WITHOUT_CLASSIFICATION	2.3449019761670055E-5	IMPLEMENTATION
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999615713920177	WITHOUT_CLASSIFICATION	3.842860798235153E-5	IMPLEMENTATION
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999615713920177	WITHOUT_CLASSIFICATION	3.842860798235153E-5	IMPLEMENTATION
// Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9999762520800208	WITHOUT_CLASSIFICATION	2.3747919979140806E-5	IMPLEMENTATION
// Create list of interfaces to proxy (and make sure they really are interfaces)	WITHOUT_CLASSIFICATION	0.9999953873215914	WITHOUT_CLASSIFICATION	4.6126784084586865E-6	IMPLEMENTATION
// hashcode is a combination of the interfaces and the Ruby class we're using // to implement them	WITHOUT_CLASSIFICATION	0.999442114784161	WITHOUT_CLASSIFICATION	5.578852158389966E-4	IMPLEMENTATION
// if it's a singleton class and the real class is proc, we're doing closure conversion // so just use Proc's hashcode	WITHOUT_CLASSIFICATION	0.9999930514058203	WITHOUT_CLASSIFICATION	6.948594179731395E-6	IMPLEMENTATION
// normal new class implementing interfaces	WITHOUT_CLASSIFICATION	0.9995367121004158	WITHOUT_CLASSIFICATION	4.632878995841851E-4	IMPLEMENTATION
/*         * Initialize some components.         */	WITHOUT_CLASSIFICATION	0.9999968474191977	WITHOUT_CLASSIFICATION	3.1525808023303663E-6	IMPLEMENTATION
// not synchronizing these methods, no harm if these values get set more // than once. // (also note that there's no chance of getting a partially initialized // class/module, as happens-before is guaranteed by volatile write/read // of constants table.)	WITHOUT_CLASSIFICATION	0.9999915170157001	WITHOUT_CLASSIFICATION	8.482984299879516E-6	IMPLEMENTATION
// Java reflection does not allow retrieving constructors like methods	WITHOUT_CLASSIFICATION	0.999970525547674	WITHOUT_CLASSIFICATION	2.9474452326076713E-5	IMPLEMENTATION
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999671550378818	WITHOUT_CLASSIFICATION	3.2844962118069085E-5	IMPLEMENTATION
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999671550378818	WITHOUT_CLASSIFICATION	3.2844962118069085E-5	IMPLEMENTATION
// no matching ctor found	WITHOUT_CLASSIFICATION	0.9999612051900613	WITHOUT_CLASSIFICATION	3.879480993873588E-5	IMPLEMENTATION
// Create Ruby proxies for any input arguments that are not primitives.	WITHOUT_CLASSIFICATION	0.9999697847180499	WITHOUT_CLASSIFICATION	3.0215281950185395E-5	IMPLEMENTATION
// prepare a faster handle if handles are enabled and the method and class are public	WITHOUT_CLASSIFICATION	0.9999822421715808	WITHOUT_CLASSIFICATION	1.7757828419219656E-5	IMPLEMENTATION
// must be a public method	WITHOUT_CLASSIFICATION	0.9999720469670381	WITHOUT_CLASSIFICATION	2.7953032961888517E-5	IMPLEMENTATION
// must be a public class	WITHOUT_CLASSIFICATION	0.9999744692001052	WITHOUT_CLASSIFICATION	2.5530799894727997E-5	IMPLEMENTATION
// must have been loaded from our known classloader hierarchy	WITHOUT_CLASSIFICATION	0.9999367688169533	WITHOUT_CLASSIFICATION	6.32311830467585E-5	IMPLEMENTATION
// Special classes like Collections.EMPTY_LIST are inner classes that are private but  // implement public interfaces.  Their methods are all public methods for the public  // interface.  Let these public methods execute via setAccessible(true). 	WITHOUT_CLASSIFICATION	0.9999844560727729	WITHOUT_CLASSIFICATION	1.55439272270957E-5	IMPLEMENTATION
// search through all declared methods to find a closest match	WITHOUT_CLASSIFICATION	0.9999841420016082	WITHOUT_CLASSIFICATION	1.5857998391709828E-5	IMPLEMENTATION
// no matching method found	WITHOUT_CLASSIFICATION	0.9999582726719904	WITHOUT_CLASSIFICATION	4.172732800960221E-5	IMPLEMENTATION
// this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.9999904202252833	WITHOUT_CLASSIFICATION	9.579774716715976E-6	IMPLEMENTATION
/*         * First we need to register the JRuby engine.         */	WITHOUT_CLASSIFICATION	0.9999916863380275	WITHOUT_CLASSIFICATION	8.313661972556518E-6	IMPLEMENTATION
/*         * Now we create a new BSFManager.         */	WITHOUT_CLASSIFICATION	0.9999976993234281	WITHOUT_CLASSIFICATION	2.3006765719811023E-6	IMPLEMENTATION
/*         * Initialize a simple Frame.          */	WITHOUT_CLASSIFICATION	0.9999943279935383	WITHOUT_CLASSIFICATION	5.6720064617934654E-6	IMPLEMENTATION
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999628625418604	WITHOUT_CLASSIFICATION	3.713745813947967E-5	IMPLEMENTATION
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999628625418604	WITHOUT_CLASSIFICATION	3.713745813947967E-5	IMPLEMENTATION
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999272298660573	WITHOUT_CLASSIFICATION	7.277013394273173E-5	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.9999696100003335	WITHOUT_CLASSIFICATION	3.038999966658004E-5	IMPLEMENTATION
// // this test really means, that this is a ruby-defined subclass of a java class //	WITHOUT_CLASSIFICATION	0.9999892918943368	WITHOUT_CLASSIFICATION	1.0708105663236351E-5	IMPLEMENTATION
// for our purposes, Accessibles are also Members, and vice-versa, // so we'll include Member methods here.	WITHOUT_CLASSIFICATION	0.9999828744107	WITHOUT_CLASSIFICATION	1.7125589300077238E-5	IMPLEMENTATION
/*             * Declare those components as beans in BSF. Then it will be             * possible to access those components in Ruby as global             * variables ($frame, $menubar, ...)             */	WITHOUT_CLASSIFICATION	0.9999984222902711	WITHOUT_CLASSIFICATION	1.5777097288372428E-6	IMPLEMENTATION
/*              * Execute a Ruby script (add the menubar to the frame).             */	WITHOUT_CLASSIFICATION	0.9999971255684739	WITHOUT_CLASSIFICATION	2.8744315261497933E-6	IMPLEMENTATION
/*                     * Execute Ruby statements.                     */	WITHOUT_CLASSIFICATION	0.999994136683148	WITHOUT_CLASSIFICATION	5.863316852070459E-6	IMPLEMENTATION
/*                     * Evaluates a Ruby expression and display the result.                     */	WITHOUT_CLASSIFICATION	0.9999933453118184	WITHOUT_CLASSIFICATION	6.654688181660785E-6	IMPLEMENTATION
// Populate values for the parameter names	WITHOUT_CLASSIFICATION	0.999991657744427	WITHOUT_CLASSIFICATION	8.342255573068592E-6	IMPLEMENTATION
/* package scope */	WITHOUT_CLASSIFICATION	0.9999285972999546	WITHOUT_CLASSIFICATION	7.140270004536462E-5	IMPLEMENTATION
// This point is only reached if there was an exception handler // installed.	WITHOUT_CLASSIFICATION	0.9999823368434063	WITHOUT_CLASSIFICATION	1.766315659359976E-5	IMPLEMENTATION
// // Ruby-level methods //	WITHOUT_CLASSIFICATION	0.9999483577593148	WITHOUT_CLASSIFICATION	5.164224068509848E-5	IMPLEMENTATION
// need names ordered for key generation later	WITHOUT_CLASSIFICATION	0.9999745577724735	WITHOUT_CLASSIFICATION	2.544222752646292E-5	IMPLEMENTATION
// we only collect methods and interfaces for  // user-defined proxy classes.	WITHOUT_CLASSIFICATION	0.9999957394984779	WITHOUT_CLASSIFICATION	4.260501522158861E-6	IMPLEMENTATION
// get JavaClass if this is the new proxy class; verify it // matches if this is a superclass proxy.	WITHOUT_CLASSIFICATION	0.9999974584993605	WITHOUT_CLASSIFICATION	2.541500639458747E-6	IMPLEMENTATION
// get any included interfaces	WITHOUT_CLASSIFICATION	0.9999817770855876	WITHOUT_CLASSIFICATION	1.822291441241703E-5	IMPLEMENTATION
// lock in the overridden methods for the new class, and any as-yet // uninstantiated ancestor class.	WITHOUT_CLASSIFICATION	0.9999952225352481	WITHOUT_CLASSIFICATION	4.777464751996298E-6	IMPLEMENTATION
// statically initialized below	WITHOUT_CLASSIFICATION	0.9999704366787209	WITHOUT_CLASSIFICATION	2.9563321279077152E-5	IMPLEMENTATION
// finish class initializer	WITHOUT_CLASSIFICATION	0.9999679797393725	WITHOUT_CLASSIFICATION	3.202026062754824E-5	IMPLEMENTATION
// trigger class initialization for the class	WITHOUT_CLASSIFICATION	0.9999901051901988	WITHOUT_CLASSIFICATION	9.894809801227828E-6	IMPLEMENTATION
// should not happen!	WITHOUT_CLASSIFICATION	0.9999813428960741	WITHOUT_CLASSIFICATION	1.8657103925957335E-5	IMPLEMENTATION
// start class	WITHOUT_CLASSIFICATION	0.9999635216234173	WITHOUT_CLASSIFICATION	3.647837658274021E-5	IMPLEMENTATION
// make getter for handler	WITHOUT_CLASSIFICATION	0.999927639352813	WITHOUT_CLASSIFICATION	7.236064718701373E-5	IMPLEMENTATION
// make getter for proxy class	WITHOUT_CLASSIFICATION	0.9999629742974365	WITHOUT_CLASSIFICATION	3.702570256338513E-5	IMPLEMENTATION
// add (potentially) overridden names to the key. // TODO: see note above re: optimizations	WITHOUT_CLASSIFICATION	0.9871968023475783	WITHOUT_CLASSIFICATION	0.012803197652421595	IMPLEMENTATION
// We generate all constructors and let some fail during invocation later	WITHOUT_CLASSIFICATION	0.999965909733334	WITHOUT_CLASSIFICATION	3.409026666603266E-5	IMPLEMENTATION
// create static private method field	WITHOUT_CLASSIFICATION	0.9999924330497258	WITHOUT_CLASSIFICATION	7.566950274195748E-6	IMPLEMENTATION
// load static empty array	WITHOUT_CLASSIFICATION	0.999965772008409	WITHOUT_CLASSIFICATION	3.422799159090712E-5	IMPLEMENTATION
// box arguments	WITHOUT_CLASSIFICATION	0.9999386406589	WITHOUT_CLASSIFICATION	6.135934109991381E-5	IMPLEMENTATION
// this is a simple rethrow handler	WITHOUT_CLASSIFICATION	0.9999721585450801	WITHOUT_CLASSIFICATION	2.7841454919858514E-5	IMPLEMENTATION
// // construct the super-proxy method //	WITHOUT_CLASSIFICATION	0.9999730921886252	WITHOUT_CLASSIFICATION	2.690781137475991E-5	IMPLEMENTATION
// do a void return	WITHOUT_CLASSIFICATION	0.9999522152826318	WITHOUT_CLASSIFICATION	4.77847173681889E-5	IMPLEMENTATION
// // utility methods //	WITHOUT_CLASSIFICATION	0.9999501827738306	WITHOUT_CLASSIFICATION	4.981722616938388E-5	IMPLEMENTATION
// Is there a supplied proc argument or do we assume a block was // supplied	WITHOUT_CLASSIFICATION	0.9999781559463107	WITHOUT_CLASSIFICATION	2.1844053689291924E-5	IMPLEMENTATION
// store call information so method_missing impl can use it	WITHOUT_CLASSIFICATION	0.9999728369155634	WITHOUT_CLASSIFICATION	2.716308443671041E-5	IMPLEMENTATION
// use the same logic as in EvaluationState	WITHOUT_CLASSIFICATION	0.9999621229377714	WITHOUT_CLASSIFICATION	3.7877062228504484E-5	IMPLEMENTATION
// no opt, no rest, exact match	WITHOUT_CLASSIFICATION	0.9999581084233686	WITHOUT_CLASSIFICATION	4.189157663129375E-5	IMPLEMENTATION
// only rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999775029207789	WITHOUT_CLASSIFICATION	2.249707922115072E-5	IMPLEMENTATION
// opt but no rest, must be at least required and no more than required + opt	WITHOUT_CLASSIFICATION	0.9999701284179674	WITHOUT_CLASSIFICATION	2.9871582032600385E-5	IMPLEMENTATION
// opt and rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999690357948994	WITHOUT_CLASSIFICATION	3.0964205100655965E-5	IMPLEMENTATION
// No block from a nil proc	WITHOUT_CLASSIFICATION	0.9999365630775122	WITHOUT_CLASSIFICATION	6.343692248774847E-5	IMPLEMENTATION
// If not already a proc then we should try and make it one.	WITHOUT_CLASSIFICATION	0.9999195911815173	WITHOUT_CLASSIFICATION	8.040881848272076E-5	IMPLEMENTATION
// The current block is already associated with proc.  No need to create a new one	WITHOUT_CLASSIFICATION	0.9999974221176098	WITHOUT_CLASSIFICATION	2.577882390293012E-6	IMPLEMENTATION
// Has the method that is calling super received a block argument	WITHOUT_CLASSIFICATION	0.9999692274018076	WITHOUT_CLASSIFICATION	3.0772598192438735E-5	IMPLEMENTATION
/* NUL */	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999588257625517	WITHOUT_CLASSIFICATION	4.1174237448402496E-5	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999434579499024	WITHOUT_CLASSIFICATION	5.654205009769806E-5	IMPLEMENTATION
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999421973042307	WITHOUT_CLASSIFICATION	5.7802695769168625E-5	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999211137008382	WITHOUT_CLASSIFICATION	7.888629916174846E-5	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999283469799195	WITHOUT_CLASSIFICATION	7.165302008049299E-5	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999283469799195	WITHOUT_CLASSIFICATION	7.165302008049299E-5	IMPLEMENTATION
// classes are directly in the hierarchy, so no special logic is necessary for implementer	WITHOUT_CLASSIFICATION	0.999091955838725	WITHOUT_CLASSIFICATION	9.080441612749916E-4	IMPLEMENTATION
// must be power of 2 // must be power of 2	WITHOUT_CLASSIFICATION	0.999956892614813	WITHOUT_CLASSIFICATION	4.310738518701669E-5	IMPLEMENTATION
// Find power-of-two sizes best matching arguments	WITHOUT_CLASSIFICATION	0.9999704114574938	WITHOUT_CLASSIFICATION	2.9588542506259925E-5	IMPLEMENTATION
// note segmentShift differs from ConcurrentHashMap's calculation due to // issues with System.identityHashCode (upper n bits always 0, at least  // under Java 1.6 / WinXP)	WITHOUT_CLASSIFICATION	0.9999873476538006	WITHOUT_CLASSIFICATION	1.2652346199341212E-5	IMPLEMENTATION
//      System.err.println("***ObjectProxyCache " + id + " started at "+ new java.util.Date());	WITHOUT_CLASSIFICATION	0.9999841829951784	WITHOUT_CLASSIFICATION	1.581700482158579E-5	IMPLEMENTATION
//    protected void finalize() throws Throwable { //        System.err.println("***ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); //    }	WITHOUT_CLASSIFICATION	0.9999918990186847	WITHOUT_CLASSIFICATION	8.100981315391002E-6	IMPLEMENTATION
// EntryRefs include hash with key to facilitate lookup by Segment#expunge // after ref is removed from ReferenceQueue	WITHOUT_CLASSIFICATION	0.9998425684378782	WITHOUT_CLASSIFICATION	1.5743156212183563E-4	IMPLEMENTATION
// Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather // makes it a final field.  The theory is that doing so should force a happens-before // relationship WRT the WeakReference constructor, guaranteeing that the key will be // visibile to other threads (unless it's been GC'ed).  See JLS 17.5 (final fields) and // 17.4.5 (Happens-before order) to confirm or refute my reasoning here.	WITHOUT_CLASSIFICATION	0.9999965128208926	WITHOUT_CLASSIFICATION	3.4871791073352996E-6	IMPLEMENTATION
// references to the Java object and its proxy will either both be // weak or both be soft, since the proxy contains a strong reference // to the object, so it wouldn't make sense for the reference types // to differ.	WITHOUT_CLASSIFICATION	0.9999989148329915	WITHOUT_CLASSIFICATION	1.0851670085567386E-6	IMPLEMENTATION
// ctor used by remove/rehash	WITHOUT_CLASSIFICATION	0.9999396123148419	WITHOUT_CLASSIFICATION	6.0387685158150027E-5	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999694465743264	WITHOUT_CLASSIFICATION	3.055342567360514E-5	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999694465743264	WITHOUT_CLASSIFICATION	3.055342567360514E-5	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999694465743264	WITHOUT_CLASSIFICATION	3.055342567360514E-5	IMPLEMENTATION
// note that we'll potentially see the refs for both the java object and // proxy -- whichever we see first will cause the entry to be removed; // the other will not match an entry and will be ignored.	WITHOUT_CLASSIFICATION	0.9999975338608881	WITHOUT_CLASSIFICATION	2.466139112018558E-6	IMPLEMENTATION
// temp method to verify tableSize value // must be called under lock	WITHOUT_CLASSIFICATION	0.9999907594538536	WITHOUT_CLASSIFICATION	9.240546146362304E-6	IMPLEMENTATION
// Single node in list	WITHOUT_CLASSIFICATION	0.9999297627066156	WITHOUT_CLASSIFICATION	7.023729338438407E-5	IMPLEMENTATION
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999347738432032	WITHOUT_CLASSIFICATION	6.522615679690286E-5	IMPLEMENTATION
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999347738432032	WITHOUT_CLASSIFICATION	6.522615679690286E-5	IMPLEMENTATION
// entry exists, proxy has been gc'ed. replace entry.	WITHOUT_CLASSIFICATION	0.9999501985929309	WITHOUT_CLASSIFICATION	4.980140706906026E-5	IMPLEMENTATION
// Where we get new positions from.	WITHOUT_CLASSIFICATION	0.9999593070562988	WITHOUT_CLASSIFICATION	4.069294370124684E-5	IMPLEMENTATION
// Start of string ([, (, {, <, ', ", \n) 	WITHOUT_CLASSIFICATION	0.9999727520699845	WITHOUT_CLASSIFICATION	2.724793001545532E-5	IMPLEMENTATION
// Number of newlines read from the reader	WITHOUT_CLASSIFICATION	0.9999807753098631	WITHOUT_CLASSIFICATION	1.9224690137025457E-5	IMPLEMENTATION
// How many bytes into the source are we?	WITHOUT_CLASSIFICATION	0.9999744096071888	WITHOUT_CLASSIFICATION	2.5590392811198923E-5	IMPLEMENTATION
// For 'list' and only populated if list is not null.	WITHOUT_CLASSIFICATION	0.9999603493732191	WITHOUT_CLASSIFICATION	3.9650626780973614E-5	IMPLEMENTATION
// Last full line read.	WITHOUT_CLASSIFICATION	0.999923761313805	WITHOUT_CLASSIFICATION	7.623868619488402E-5	IMPLEMENTATION
// Save sourceLine for error reporting to display line where error occurred	WITHOUT_CLASSIFICATION	0.9999715837975048	WITHOUT_CLASSIFICATION	2.8416202495158804E-5	IMPLEMENTATION
// Get rest of line. lineBuffer filled as side-effect...	WITHOUT_CLASSIFICATION	0.9999518140080592	WITHOUT_CLASSIFICATION	4.818599194093106E-5	IMPLEMENTATION
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999539430923576	WITHOUT_CLASSIFICATION	4.6056907642373384E-5	IMPLEMENTATION
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999539430923576	WITHOUT_CLASSIFICATION	4.6056907642373384E-5	IMPLEMENTATION
// End of string (], ), }, >, ', ", \0)	WITHOUT_CLASSIFICATION	0.999957564654727	WITHOUT_CLASSIFICATION	4.243534527299588E-5	IMPLEMENTATION
// How many strings are nested in the current string term	WITHOUT_CLASSIFICATION	0.9999926161914162	WITHOUT_CLASSIFICATION	7.383808583810605E-6	IMPLEMENTATION
// Single-quote fast path	WITHOUT_CLASSIFICATION	0.999922969525519	WITHOUT_CLASSIFICATION	7.703047448109482E-5	IMPLEMENTATION
// Regexp engine 'java'	WITHOUT_CLASSIFICATION	0.9999211887965521	WITHOUT_CLASSIFICATION	7.881120344791778E-5	IMPLEMENTATION
// Was a goto in original ruby lexer	WITHOUT_CLASSIFICATION	0.9999487097371117	WITHOUT_CLASSIFICATION	5.129026288822943E-5	IMPLEMENTATION
/* just ignore */	WITHOUT_CLASSIFICATION	0.9999638302419532	WITHOUT_CLASSIFICATION	3.61697580468606E-5	IMPLEMENTATION
/* octal constant */	WITHOUT_CLASSIFICATION	0.9999206880883834	WITHOUT_CLASSIFICATION	7.93119116166253E-5	IMPLEMENTATION
/* hex constant */	WITHOUT_CLASSIFICATION	0.999920457142551	WITHOUT_CLASSIFICATION	7.954285744910955E-5	IMPLEMENTATION
// PUSH(1)	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
// POP	WITHOUT_CLASSIFICATION	0.9966074382712443	WITHOUT_CLASSIFICATION	0.0033925617287556818	IMPLEMENTATION
// PUSH(0).  If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.	WITHOUT_CLASSIFICATION	0.9999163729001461	WITHOUT_CLASSIFICATION	8.362709985390904E-5	IMPLEMENTATION
// LEXPOP	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
// SET_P	WITHOUT_CLASSIFICATION	0.9966010924713035	WITHOUT_CLASSIFICATION	0.0033989075286965553	IMPLEMENTATION
// Marker delimiting heredoc boundary	WITHOUT_CLASSIFICATION	0.9999283844281527	WITHOUT_CLASSIFICATION	7.161557184733585E-5	IMPLEMENTATION
// Found end marker for this heredoc	WITHOUT_CLASSIFICATION	0.9999556347180616	WITHOUT_CLASSIFICATION	4.436528193839865E-5	IMPLEMENTATION
// Put back lastLine for any elements past start of heredoc marker	WITHOUT_CLASSIFICATION	0.9999771682488697	WITHOUT_CLASSIFICATION	2.2831751130243692E-5	IMPLEMENTATION
// Last token read via yylex().	WITHOUT_CLASSIFICATION	0.9999336261031039	WITHOUT_CLASSIFICATION	6.637389689619774E-5	IMPLEMENTATION
// Value of last token which had a value associated with it.	WITHOUT_CLASSIFICATION	0.9999832701344477	WITHOUT_CLASSIFICATION	1.6729865552314482E-5	IMPLEMENTATION
// Stream of data that yylex() examines.	WITHOUT_CLASSIFICATION	0.9999476198007465	WITHOUT_CLASSIFICATION	5.238019925347726E-5	IMPLEMENTATION
// Used for tiny smidgen of grammar in lexer (see setParserSupport())	WITHOUT_CLASSIFICATION	0.9999605931798	WITHOUT_CLASSIFICATION	3.940682019985591E-5	IMPLEMENTATION
// Give a name to a value.  Enebo: This should be used more.	WITHOUT_CLASSIFICATION	0.9999308520563217	WITHOUT_CLASSIFICATION	6.914794367828777E-5	IMPLEMENTATION
// When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').	WITHOUT_CLASSIFICATION	0.9999723593798255	WITHOUT_CLASSIFICATION	2.7640620174465323E-5	IMPLEMENTATION
// Are we lexing Ruby 1.8 or 1.9+ syntax	WITHOUT_CLASSIFICATION	0.9999313626154159	WITHOUT_CLASSIFICATION	6.863738458400044E-5	IMPLEMENTATION
// Count of nested parentheses (1.9 only)	WITHOUT_CLASSIFICATION	0.9999312299223916	WITHOUT_CLASSIFICATION	6.877007760840287E-5	IMPLEMENTATION
// 1.9 only	WITHOUT_CLASSIFICATION	0.9999053960346399	WITHOUT_CLASSIFICATION	9.460396536004441E-5	IMPLEMENTATION
// Short-hand (e.g. %{,%.,%!,... versus %Q{).	WITHOUT_CLASSIFICATION	0.9999282393918242	WITHOUT_CLASSIFICATION	7.176060817577549E-5	IMPLEMENTATION
// Long-hand (e.g. %Q{}).	WITHOUT_CLASSIFICATION	0.99991716534305	WITHOUT_CLASSIFICATION	8.283465695013423E-5	IMPLEMENTATION
/* no mb || ismbchar(term)*/	WITHOUT_CLASSIFICATION	0.9999156816712201	WITHOUT_CLASSIFICATION	8.431832877990809E-5	IMPLEMENTATION
/*     * Not normally used, but is left in here since it can be useful in debugging     * grammar and lexing problems.     *     */	WITHOUT_CLASSIFICATION	0.9999758825316992	WITHOUT_CLASSIFICATION	2.411746830077285E-5	IMPLEMENTATION
// DEBUGGING HELP 	WITHOUT_CLASSIFICATION	0.9999054165555119	WITHOUT_CLASSIFICATION	9.458344448803644E-5	IMPLEMENTATION
/* '\v' */	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
/* end of script. */	WITHOUT_CLASSIFICATION	0.999933962607125	WITHOUT_CLASSIFICATION	6.603739287509028E-5	IMPLEMENTATION
/* white spaces */	WITHOUT_CLASSIFICATION	0.9999271611383544	WITHOUT_CLASSIFICATION	7.283886164552137E-5	IMPLEMENTATION
/* '\v' */	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
/* it's a comment */	WITHOUT_CLASSIFICATION	0.9999210148501152	WITHOUT_CLASSIFICATION	7.898514988483045E-5	IMPLEMENTATION
// Replace a string of newlines with a single one	WITHOUT_CLASSIFICATION	0.9999709792094529	WITHOUT_CLASSIFICATION	2.9020790547117657E-5	IMPLEMENTATION
/* $\: output record separator */	WITHOUT_CLASSIFICATION	0.9999582096689071	WITHOUT_CLASSIFICATION	4.179033109288372E-5	IMPLEMENTATION
// EOF (ENEBO: After default?	WITHOUT_CLASSIFICATION	0.9999591557392117	WITHOUT_CLASSIFICATION	4.0844260788341365E-5	IMPLEMENTATION
// documentation nodes	WITHOUT_CLASSIFICATION	0.9999532597846281	WITHOUT_CLASSIFICATION	4.674021537191008E-5	IMPLEMENTATION
// In case last next was the newline.	WITHOUT_CLASSIFICATION	0.9999688344913535	WITHOUT_CLASSIFICATION	3.116550864639894E-5	IMPLEMENTATION
// Just a plain bang	WITHOUT_CLASSIFICATION	0.9999276189537899	WITHOUT_CLASSIFICATION	7.238104621008784E-5	IMPLEMENTATION
/* $_: last read line string */	WITHOUT_CLASSIFICATION	0.9999616056331793	WITHOUT_CLASSIFICATION	3.839436682069976E-5	IMPLEMENTATION
/* $~: match-data */	WITHOUT_CLASSIFICATION	0.9999182099186716	WITHOUT_CLASSIFICATION	8.179008132826014E-5	IMPLEMENTATION
/* $*: argv */	WITHOUT_CLASSIFICATION	0.9999053960346399	WITHOUT_CLASSIFICATION	9.460396536004441E-5	IMPLEMENTATION
/* $$: pid */	WITHOUT_CLASSIFICATION	0.9999053960346399	WITHOUT_CLASSIFICATION	9.460396536004441E-5	IMPLEMENTATION
/* $?: last status */	WITHOUT_CLASSIFICATION	0.999923310975517	WITHOUT_CLASSIFICATION	7.668902448293597E-5	IMPLEMENTATION
/* $!: error string */	WITHOUT_CLASSIFICATION	0.9999472033717162	WITHOUT_CLASSIFICATION	5.2796628283919195E-5	IMPLEMENTATION
/* $@: error position */	WITHOUT_CLASSIFICATION	0.9999504581897529	WITHOUT_CLASSIFICATION	4.9541810247113115E-5	IMPLEMENTATION
/* $/: input record separator */	WITHOUT_CLASSIFICATION	0.9999519122776	WITHOUT_CLASSIFICATION	4.808772239982787E-5	IMPLEMENTATION
/* $;: field separator */	WITHOUT_CLASSIFICATION	0.9999488973188141	WITHOUT_CLASSIFICATION	5.110268118601121E-5	IMPLEMENTATION
/* $,: output field separator */	WITHOUT_CLASSIFICATION	0.9999633314642553	WITHOUT_CLASSIFICATION	3.6668535744640656E-5	IMPLEMENTATION
/* $.: last read line number */	WITHOUT_CLASSIFICATION	0.9999529899490378	WITHOUT_CLASSIFICATION	4.7010050962277996E-5	IMPLEMENTATION
/* $=: ignorecase */	WITHOUT_CLASSIFICATION	0.9999602465236828	WITHOUT_CLASSIFICATION	3.9753476317181834E-5	IMPLEMENTATION
/* $:: load path */	WITHOUT_CLASSIFICATION	0.9999135020001475	WITHOUT_CLASSIFICATION	8.649799985249787E-5	IMPLEMENTATION
/* $<: reading filename */	WITHOUT_CLASSIFICATION	0.9999425289728353	WITHOUT_CLASSIFICATION	5.747102716464977E-5	IMPLEMENTATION
/* $": already loaded files */	WITHOUT_CLASSIFICATION	0.9999583372378461	WITHOUT_CLASSIFICATION	4.1662762153910494E-5	IMPLEMENTATION
/* $&: last match */	WITHOUT_CLASSIFICATION	0.999927141473358	WITHOUT_CLASSIFICATION	7.285852664197733E-5	IMPLEMENTATION
/* $`: string before last match */	WITHOUT_CLASSIFICATION	0.9999674741580115	WITHOUT_CLASSIFICATION	3.252584198852573E-5	IMPLEMENTATION
/* $': string after last match */	WITHOUT_CLASSIFICATION	0.9999658919675173	WITHOUT_CLASSIFICATION	3.4108032482751934E-5	IMPLEMENTATION
// methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop	WITHOUT_CLASSIFICATION	0.9999652604557735	WITHOUT_CLASSIFICATION	3.473954422647427E-5	IMPLEMENTATION
/* See if it is a reserved word.  */	WITHOUT_CLASSIFICATION	0.9999378304027994	WITHOUT_CLASSIFICATION	6.21695972005771E-5	IMPLEMENTATION
// enum lex_state	WITHOUT_CLASSIFICATION	0.9999060623109614	WITHOUT_CLASSIFICATION	9.393768903855877E-5	IMPLEMENTATION
// block (primary)	WITHOUT_CLASSIFICATION	0.9999071028402324	WITHOUT_CLASSIFICATION	9.289715976751893E-5	IMPLEMENTATION
// block (expr)	WITHOUT_CLASSIFICATION	0.999905649342409	WITHOUT_CLASSIFICATION	9.435065759104125E-5	IMPLEMENTATION
// hash	WITHOUT_CLASSIFICATION	0.9966905362358661	WITHOUT_CLASSIFICATION	0.0033094637641339067	IMPLEMENTATION
// ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.	WITHOUT_CLASSIFICATION	0.9997800517814684	WITHOUT_CLASSIFICATION	2.1994821853149772E-4	IMPLEMENTATION
// FIXME: peek('u') utf8 stuff for 1.9	WITHOUT_CLASSIFICATION	0.9996656914225966	WITHOUT_CLASSIFICATION	3.3430857740331766E-4	IMPLEMENTATION
// We don't append '+' since Java number parser gets confused	WITHOUT_CLASSIFICATION	0.9999802795056574	WITHOUT_CLASSIFICATION	1.9720494342566147E-5	IMPLEMENTATION
//  hexadecimal	WITHOUT_CLASSIFICATION	0.9999078142626514	WITHOUT_CLASSIFICATION	9.218573734868668E-5	IMPLEMENTATION
// binary	WITHOUT_CLASSIFICATION	0.9968854193295942	WITHOUT_CLASSIFICATION	0.003114580670405865	IMPLEMENTATION
// decimal	WITHOUT_CLASSIFICATION	0.9967355811962377	WITHOUT_CLASSIFICATION	0.003264418803762287	IMPLEMENTATION
//Octal	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
//  '_' in number just ignored	WITHOUT_CLASSIFICATION	0.9999875757894606	WITHOUT_CLASSIFICATION	1.2424210539489829E-5	IMPLEMENTATION
// backslash	WITHOUT_CLASSIFICATION	0.9999163763688305	WITHOUT_CLASSIFICATION	8.362363116950839E-5	IMPLEMENTATION
// newline	WITHOUT_CLASSIFICATION	0.9972252839991229	WITHOUT_CLASSIFICATION	0.002774716000877011	IMPLEMENTATION
// horizontal tab	WITHOUT_CLASSIFICATION	0.999944607974725	WITHOUT_CLASSIFICATION	5.5392025275185334E-5	IMPLEMENTATION
// form feed	WITHOUT_CLASSIFICATION	0.9999238080703058	WITHOUT_CLASSIFICATION	7.61919296941587E-5	IMPLEMENTATION
// vertical tab	WITHOUT_CLASSIFICATION	0.9999407657282305	WITHOUT_CLASSIFICATION	5.923427176944372E-5	IMPLEMENTATION
// alarm(bell)	WITHOUT_CLASSIFICATION	0.9999053960346399	WITHOUT_CLASSIFICATION	9.460396536004441E-5	IMPLEMENTATION
// escape	WITHOUT_CLASSIFICATION	0.9968205738543471	WITHOUT_CLASSIFICATION	0.003179426145652938	IMPLEMENTATION
// hex constant	WITHOUT_CLASSIFICATION	0.9999205152246309	WITHOUT_CLASSIFICATION	7.948477536919409E-5	IMPLEMENTATION
//char hexValue = scanHex(2);	WITHOUT_CLASSIFICATION	0.999918156540773	WITHOUT_CLASSIFICATION	8.184345922694336E-5	IMPLEMENTATION
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999455804850674	WITHOUT_CLASSIFICATION	5.441951493257591E-5	IMPLEMENTATION
// space	WITHOUT_CLASSIFICATION	0.9968215263981413	WITHOUT_CLASSIFICATION	0.003178473601858679	IMPLEMENTATION
// Where we started this marker match	WITHOUT_CLASSIFICATION	0.9999372165228797	WITHOUT_CLASSIFICATION	6.278347712029447E-5	IMPLEMENTATION
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.999998292779234	WITHOUT_CLASSIFICATION	1.7072207660536097E-6	IMPLEMENTATION
// We use offset here to keep track of extra newlines for windows	WITHOUT_CLASSIFICATION	0.9999588993587623	WITHOUT_CLASSIFICATION	4.1100641237734464E-5	IMPLEMENTATION
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999455804850674	WITHOUT_CLASSIFICATION	5.441951493257591E-5	IMPLEMENTATION
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9997432099783904	WITHOUT_CLASSIFICATION	2.567900216096118E-4	IMPLEMENTATION
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9997432099783904	WITHOUT_CLASSIFICATION	2.567900216096118E-4	IMPLEMENTATION
// Where we get our newest char's	WITHOUT_CLASSIFICATION	0.9999373995335135	WITHOUT_CLASSIFICATION	6.260046648658026E-5	IMPLEMENTATION
// Our readback/pushback buffer.	WITHOUT_CLASSIFICATION	0.9999283925871784	WITHOUT_CLASSIFICATION	7.1607412821634E-5	IMPLEMENTATION
// index of last character in pushback buffer	WITHOUT_CLASSIFICATION	0.9999726713981681	WITHOUT_CLASSIFICATION	2.7328601831810678E-5	IMPLEMENTATION
// Character read before previous read	WITHOUT_CLASSIFICATION	0.9999765593298698	WITHOUT_CLASSIFICATION	2.34406701301265E-5	IMPLEMENTATION
// keep value of twoAgo around so we can restore after we unread	WITHOUT_CLASSIFICATION	0.9999723436816045	WITHOUT_CLASSIFICATION	2.7656318395509337E-5	IMPLEMENTATION
// NetProtocolBufferedIOLibrary	WITHOUT_CLASSIFICATION	0.9999313579760644	WITHOUT_CLASSIFICATION	6.864202393561988E-5	IMPLEMENTATION
// BigDecimalLibrary	WITHOUT_CLASSIFICATION	0.999906806405578	WITHOUT_CLASSIFICATION	9.31935944219606E-5	IMPLEMENTATION
// TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. // We did it here for now	WITHOUT_CLASSIFICATION	0.7922236525857584	WITHOUT_CLASSIFICATION	0.2077763474142415	IMPLEMENTATION
// Ruby's designation for some platforms, minus version numbers in some cases	WITHOUT_CLASSIFICATION	0.9999684441809574	WITHOUT_CLASSIFICATION	3.155581904261354E-5	IMPLEMENTATION
// that's what JDK5 produces on Windows Vista	WITHOUT_CLASSIFICATION	0.9999370596653114	WITHOUT_CLASSIFICATION	6.294033468856026E-5	IMPLEMENTATION
// Rubygems is too specific on host cpu so until we have real need lets default to universal //setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));	WITHOUT_CLASSIFICATION	0.9999923676956569	WITHOUT_CLASSIFICATION	7.632304343127569E-6	IMPLEMENTATION
// Our shell scripts pass in non-canonicalized paths, but even if we didn't // anyone who did would become unhappy because Ruby apps expect no relative // operators in the pathname (rubygems, for example).	WITHOUT_CLASSIFICATION	0.999992294069541	WITHOUT_CLASSIFICATION	7.705930458950736E-6	IMPLEMENTATION
// this set is only for darwin	WITHOUT_CLASSIFICATION	0.999955892675555	WITHOUT_CLASSIFICATION	4.410732444500429E-5	IMPLEMENTATION
// DigestLibrary	WITHOUT_CLASSIFICATION	0.9999060450340316	WITHOUT_CLASSIFICATION	9.395496596831779E-5	IMPLEMENTATION
// all errors, just info; do not prevent loading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9998915496024215	WITHOUT_CLASSIFICATION	1.0845039757855515E-4	IMPLEMENTATION
// all errors, just info; do not prevent unloading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9999274996134468	WITHOUT_CLASSIFICATION	7.250038655315814E-5	IMPLEMENTATION
// do nothing, return dummy version below	WITHOUT_CLASSIFICATION	0.9999931092148474	WITHOUT_CLASSIFICATION	6.8907851524877145E-6	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999053960346399	WITHOUT_CLASSIFICATION	9.460396536004441E-5	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999053960346399	WITHOUT_CLASSIFICATION	9.460396536004441E-5	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999053960346399	WITHOUT_CLASSIFICATION	9.460396536004441E-5	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999053960346399	WITHOUT_CLASSIFICATION	9.460396536004441E-5	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999053960346399	WITHOUT_CLASSIFICATION	9.460396536004441E-5	IMPLEMENTATION
// line 329	WITHOUT_CLASSIFICATION	0.9999303072217124	WITHOUT_CLASSIFICATION	6.969277828760286E-5	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999785277397367	WITHOUT_CLASSIFICATION	2.147226026333308E-5	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.999904698401697	WITHOUT_CLASSIFICATION	9.530159830288174E-5	IMPLEMENTATION
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999355473319322	WITHOUT_CLASSIFICATION	6.445266806773115E-5	IMPLEMENTATION
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9999780566295783	WITHOUT_CLASSIFICATION	2.194337042176663E-5	IMPLEMENTATION
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999673608026339	WITHOUT_CLASSIFICATION	3.263919736607114E-5	IMPLEMENTATION
// shift to yyN	WITHOUT_CLASSIFICATION	0.9999070067035979	WITHOUT_CLASSIFICATION	9.299329640209366E-5	IMPLEMENTATION
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999074468890621	WITHOUT_CLASSIFICATION	9.255311093785496E-5	IMPLEMENTATION
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999193207083074	WITHOUT_CLASSIFICATION	8.067929169270259E-5	IMPLEMENTATION
// line 271	WITHOUT_CLASSIFICATION	0.9999306636346706	WITHOUT_CLASSIFICATION	6.933636532932711E-5	IMPLEMENTATION
// line 274	WITHOUT_CLASSIFICATION	0.9999306636346706	WITHOUT_CLASSIFICATION	6.933636532932711E-5	IMPLEMENTATION
// line 303	WITHOUT_CLASSIFICATION	0.9999303072217124	WITHOUT_CLASSIFICATION	6.969277828760286E-5	IMPLEMENTATION
// line 311	WITHOUT_CLASSIFICATION	0.9999303307352446	WITHOUT_CLASSIFICATION	6.966926475548282E-5	IMPLEMENTATION
// line 314	WITHOUT_CLASSIFICATION	0.9999303307352446	WITHOUT_CLASSIFICATION	6.966926475548282E-5	IMPLEMENTATION
// line 317	WITHOUT_CLASSIFICATION	0.9999303620742814	WITHOUT_CLASSIFICATION	6.963792571852153E-5	IMPLEMENTATION
// line 332	WITHOUT_CLASSIFICATION	0.9999303072217124	WITHOUT_CLASSIFICATION	6.969277828760286E-5	IMPLEMENTATION
// line 338	WITHOUT_CLASSIFICATION	0.9999303072217124	WITHOUT_CLASSIFICATION	6.969277828760286E-5	IMPLEMENTATION
// line 341	WITHOUT_CLASSIFICATION	0.9999303072217124	WITHOUT_CLASSIFICATION	6.969277828760286E-5	IMPLEMENTATION
// line 344	WITHOUT_CLASSIFICATION	0.9999303072217124	WITHOUT_CLASSIFICATION	6.969277828760286E-5	IMPLEMENTATION
// line 351	WITHOUT_CLASSIFICATION	0.9999303072217124	WITHOUT_CLASSIFICATION	6.969277828760286E-5	IMPLEMENTATION
// line 358	WITHOUT_CLASSIFICATION	0.9999303072217124	WITHOUT_CLASSIFICATION	6.969277828760286E-5	IMPLEMENTATION
// line 367	WITHOUT_CLASSIFICATION	0.9999303072217124	WITHOUT_CLASSIFICATION	6.969277828760286E-5	IMPLEMENTATION
// line 372	WITHOUT_CLASSIFICATION	0.9999303072217124	WITHOUT_CLASSIFICATION	6.969277828760286E-5	IMPLEMENTATION
// line 378	WITHOUT_CLASSIFICATION	0.9999303072217124	WITHOUT_CLASSIFICATION	6.969277828760286E-5	IMPLEMENTATION
// line 382	WITHOUT_CLASSIFICATION	0.9999303072217124	WITHOUT_CLASSIFICATION	6.969277828760286E-5	IMPLEMENTATION
// line 407	WITHOUT_CLASSIFICATION	0.999930291541616	WITHOUT_CLASSIFICATION	6.970845838401249E-5	IMPLEMENTATION
// line 411	WITHOUT_CLASSIFICATION	0.999930291541616	WITHOUT_CLASSIFICATION	6.970845838401249E-5	IMPLEMENTATION
// line 414	WITHOUT_CLASSIFICATION	0.999930291541616	WITHOUT_CLASSIFICATION	6.970845838401249E-5	IMPLEMENTATION
// line 417	WITHOUT_CLASSIFICATION	0.999930291541616	WITHOUT_CLASSIFICATION	6.970845838401249E-5	IMPLEMENTATION
// line 420	WITHOUT_CLASSIFICATION	0.999930291541616	WITHOUT_CLASSIFICATION	6.970845838401249E-5	IMPLEMENTATION
// line 426	WITHOUT_CLASSIFICATION	0.999930291541616	WITHOUT_CLASSIFICATION	6.970845838401249E-5	IMPLEMENTATION
// line 434	WITHOUT_CLASSIFICATION	0.999930291541616	WITHOUT_CLASSIFICATION	6.970845838401249E-5	IMPLEMENTATION
// line 443	WITHOUT_CLASSIFICATION	0.999930291541616	WITHOUT_CLASSIFICATION	6.970845838401249E-5	IMPLEMENTATION
// line 446	WITHOUT_CLASSIFICATION	0.999930291541616	WITHOUT_CLASSIFICATION	6.970845838401249E-5	IMPLEMENTATION
// line 452	WITHOUT_CLASSIFICATION	0.999930291541616	WITHOUT_CLASSIFICATION	6.970845838401249E-5	IMPLEMENTATION
// line 457	WITHOUT_CLASSIFICATION	0.999930291541616	WITHOUT_CLASSIFICATION	6.970845838401249E-5	IMPLEMENTATION
// line 464	WITHOUT_CLASSIFICATION	0.999930291541616	WITHOUT_CLASSIFICATION	6.970845838401249E-5	IMPLEMENTATION
// line 467	WITHOUT_CLASSIFICATION	0.999930291541616	WITHOUT_CLASSIFICATION	6.970845838401249E-5	IMPLEMENTATION
// line 470	WITHOUT_CLASSIFICATION	0.999930291541616	WITHOUT_CLASSIFICATION	6.970845838401249E-5	IMPLEMENTATION
// line 479	WITHOUT_CLASSIFICATION	0.999930291541616	WITHOUT_CLASSIFICATION	6.970845838401249E-5	IMPLEMENTATION
// line 484	WITHOUT_CLASSIFICATION	0.999930291541616	WITHOUT_CLASSIFICATION	6.970845838401249E-5	IMPLEMENTATION
// line 486	WITHOUT_CLASSIFICATION	0.999930291541616	WITHOUT_CLASSIFICATION	6.970845838401249E-5	IMPLEMENTATION
// line 492	WITHOUT_CLASSIFICATION	0.999930291541616	WITHOUT_CLASSIFICATION	6.970845838401249E-5	IMPLEMENTATION
// line 498	WITHOUT_CLASSIFICATION	0.999930291541616	WITHOUT_CLASSIFICATION	6.970845838401249E-5	IMPLEMENTATION
// line 501	WITHOUT_CLASSIFICATION	0.999930291541616	WITHOUT_CLASSIFICATION	6.970845838401249E-5	IMPLEMENTATION
// line 504	WITHOUT_CLASSIFICATION	0.999930291541616	WITHOUT_CLASSIFICATION	6.970845838401249E-5	IMPLEMENTATION
// line 507	WITHOUT_CLASSIFICATION	0.999930291541616	WITHOUT_CLASSIFICATION	6.970845838401249E-5	IMPLEMENTATION
// line 510	WITHOUT_CLASSIFICATION	0.999930291541616	WITHOUT_CLASSIFICATION	6.970845838401249E-5	IMPLEMENTATION
// line 519	WITHOUT_CLASSIFICATION	0.999930291541616	WITHOUT_CLASSIFICATION	6.970845838401249E-5	IMPLEMENTATION
// line 525	WITHOUT_CLASSIFICATION	0.999930291541616	WITHOUT_CLASSIFICATION	6.970845838401249E-5	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.999904698401697	WITHOUT_CLASSIFICATION	9.530159830288174E-5	IMPLEMENTATION
// line 537	WITHOUT_CLASSIFICATION	0.999930291541616	WITHOUT_CLASSIFICATION	6.970845838401249E-5	IMPLEMENTATION
// line 540	WITHOUT_CLASSIFICATION	0.999930291541616	WITHOUT_CLASSIFICATION	6.970845838401249E-5	IMPLEMENTATION
// line 543	WITHOUT_CLASSIFICATION	0.999930291541616	WITHOUT_CLASSIFICATION	6.970845838401249E-5	IMPLEMENTATION
// line 546	WITHOUT_CLASSIFICATION	0.999930291541616	WITHOUT_CLASSIFICATION	6.970845838401249E-5	IMPLEMENTATION
// line 556	WITHOUT_CLASSIFICATION	0.999930291541616	WITHOUT_CLASSIFICATION	6.970845838401249E-5	IMPLEMENTATION
// line 559	WITHOUT_CLASSIFICATION	0.999930291541616	WITHOUT_CLASSIFICATION	6.970845838401249E-5	IMPLEMENTATION
// line 563	WITHOUT_CLASSIFICATION	0.999930291541616	WITHOUT_CLASSIFICATION	6.970845838401249E-5	IMPLEMENTATION
// line 566	WITHOUT_CLASSIFICATION	0.999930291541616	WITHOUT_CLASSIFICATION	6.970845838401249E-5	IMPLEMENTATION
// line 569	WITHOUT_CLASSIFICATION	0.999930291541616	WITHOUT_CLASSIFICATION	6.970845838401249E-5	IMPLEMENTATION
// line 575	WITHOUT_CLASSIFICATION	0.999930291541616	WITHOUT_CLASSIFICATION	6.970845838401249E-5	IMPLEMENTATION
// line 578	WITHOUT_CLASSIFICATION	0.999930291541616	WITHOUT_CLASSIFICATION	6.970845838401249E-5	IMPLEMENTATION
// line 587	WITHOUT_CLASSIFICATION	0.999930291541616	WITHOUT_CLASSIFICATION	6.970845838401249E-5	IMPLEMENTATION
// line 596	WITHOUT_CLASSIFICATION	0.999930291541616	WITHOUT_CLASSIFICATION	6.970845838401249E-5	IMPLEMENTATION
// line 604	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 607	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 610	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 613	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 616	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 634	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 638	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 643	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 646	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 655	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 660	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 667	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 670	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 672	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 696	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 701	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 717	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 720	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 726	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 729	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 732	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 735	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 738	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 751	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 754	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 757	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 760	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 763	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 769	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 772	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 775	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 782	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 788	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 791	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 794	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 797	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 803	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 806	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 809	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 815	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 818	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 821	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 824	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 830	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 833	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 836	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 839	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 842	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 848	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 852	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 858	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 861	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 868	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 871	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 876	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 879	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 883	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 893	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 896	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 899	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 903	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 907	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 915	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 920	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 923	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 926	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 932	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 936	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 940	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 944	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 948	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 956	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 960	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 964	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 967	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 972	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 978	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 980	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 984	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 986	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 996	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 1001	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1004	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1008	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1014	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1029	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1032	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1034	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1045	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1048	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1051	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1058	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1070	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1073	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1076	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1079	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1082	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1089	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1097	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1100	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1103	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1107	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1111	WITHOUT_CLASSIFICATION	0.9999308245452193	WITHOUT_CLASSIFICATION	6.917545478062573E-5	IMPLEMENTATION
// line 1113	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1115	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1119	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1130	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1133	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1135	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1137	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1140	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1151	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1154	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1158	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1164	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1175	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1178	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1187	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1189	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1193	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1204	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1207	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1210	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1214	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1234	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1239	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1243	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1247	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1251	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1263	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1269	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1280	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1283	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1290	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1296	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1299	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1302	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1309	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1313	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1315	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1320	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1328	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1335	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1348	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1352	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1358	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1374	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1381	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1387	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1392	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1415	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1431	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1434	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1440	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1443	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1453	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1456	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1462	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1465	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1470	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1477	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1480	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1485	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1488	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1496	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1502	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1510	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1513	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1516	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1533	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1550	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1553	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1556	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1565	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1568	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1571	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1574	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1577	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1587	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1595	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1598	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1600	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1609	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1623	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1626	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1629	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1632	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1638	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1641	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1644	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1649	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1655	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1658	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1661	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1672	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1677	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1687	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1694	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1705	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1708	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1725	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1733	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1742	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1745	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1749	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1757	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1769	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1772	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1775	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1784	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1808	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1814	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1818	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1822	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
/* force for args */	WITHOUT_CLASSIFICATION	0.9999153987062342	WITHOUT_CLASSIFICATION	8.46012937657019E-5	IMPLEMENTATION
/*XXX 0;*/	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
/*                      $$ = $3;*/	WITHOUT_CLASSIFICATION	0.9999770237440995	WITHOUT_CLASSIFICATION	2.2976255900515684E-5	IMPLEMENTATION
/*                  }*/	WITHOUT_CLASSIFICATION	0.9999757141989705	WITHOUT_CLASSIFICATION	2.4285801029438955E-5	IMPLEMENTATION
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9999172480573176	WITHOUT_CLASSIFICATION	8.275194268237513E-5	IMPLEMENTATION
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9999617275066816	WITHOUT_CLASSIFICATION	3.827249331842157E-5	IMPLEMENTATION
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9999405160058819	WITHOUT_CLASSIFICATION	5.94839941182111E-5	IMPLEMENTATION
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9999405160058819	WITHOUT_CLASSIFICATION	5.94839941182111E-5	IMPLEMENTATION
/* NOEX_PRIVATE for toplevel */	WITHOUT_CLASSIFICATION	0.9999291470562945	WITHOUT_CLASSIFICATION	7.08529437053672E-5	IMPLEMENTATION
/*mirko: check*/	WITHOUT_CLASSIFICATION	0.9999142004911525	WITHOUT_CLASSIFICATION	8.579950884754932E-5	IMPLEMENTATION
/* Include pipes on multiple arg type*/	WITHOUT_CLASSIFICATION	0.9998808705626078	WITHOUT_CLASSIFICATION	1.1912943739226344E-4	IMPLEMENTATION
// line 529	WITHOUT_CLASSIFICATION	0.999930291541616	WITHOUT_CLASSIFICATION	6.970845838401249E-5	IMPLEMENTATION
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999167943994828	WITHOUT_CLASSIFICATION	8.320560051723314E-5	IMPLEMENTATION
/* XXX*/	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999421488140474	WITHOUT_CLASSIFICATION	5.785118595247441E-5	IMPLEMENTATION
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999108658146678	WITHOUT_CLASSIFICATION	8.91341853322169E-5	IMPLEMENTATION
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9999121662312931	WITHOUT_CLASSIFICATION	8.783376870685151E-5	IMPLEMENTATION
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999119136203012	WITHOUT_CLASSIFICATION	8.808637969889676E-5	IMPLEMENTATION
// line 1827 "DefaultRubyParser.y"	WITHOUT_CLASSIFICATION	0.9999596553529435	WITHOUT_CLASSIFICATION	4.0344647056428774E-5	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999947589468533	WITHOUT_CLASSIFICATION	5.241053146767988E-6	IMPLEMENTATION
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999203433617898	WITHOUT_CLASSIFICATION	7.965663821022509E-5	IMPLEMENTATION
// line 7713 "-"	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640234E-5	IMPLEMENTATION
// local scopes are argument scopes by default	WITHOUT_CLASSIFICATION	0.9999899651072912	WITHOUT_CLASSIFICATION	1.0034892708773935E-5	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999708386518901	WITHOUT_CLASSIFICATION	2.9161348110000638E-5	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999708386518901	WITHOUT_CLASSIFICATION	2.9161348110000638E-5	IMPLEMENTATION
// We know this is a block scope because a local scope cannot be within a local scope // If topScope was itself it would have created a LocalAsgnNode above.	WITHOUT_CLASSIFICATION	0.9999914495297437	WITHOUT_CLASSIFICATION	8.55047025637661E-6	IMPLEMENTATION
// ENEBO: 1.9 has CURR nodes for local/block variables.  We don't.  I believe we follow proper logic	WITHOUT_CLASSIFICATION	0.999962604940764	WITHOUT_CLASSIFICATION	3.739505923587011E-5	IMPLEMENTATION
// odd...but it is odd in ruby too.	WITHOUT_CLASSIFICATION	0.9999291259712956	WITHOUT_CLASSIFICATION	7.087402870443133E-5	IMPLEMENTATION
// What linenumber will the source think it starts from?	WITHOUT_CLASSIFICATION	0.9999719045136136	WITHOUT_CLASSIFICATION	2.8095486386302505E-5	IMPLEMENTATION
// Is this inline source (aka -e "...source...")	WITHOUT_CLASSIFICATION	0.999926711695033	WITHOUT_CLASSIFICATION	7.328830496696346E-5	IMPLEMENTATION
// We parse evals more often in source so assume an eval parse.	WITHOUT_CLASSIFICATION	0.9999555749361065	WITHOUT_CLASSIFICATION	4.442506389337138E-5	IMPLEMENTATION
// Should positions added extra IDE-friendly information and leave in all newline nodes	WITHOUT_CLASSIFICATION	0.999987591262981	WITHOUT_CLASSIFICATION	1.2408737019116458E-5	IMPLEMENTATION
// Will parser parse Duby grammar Extensions	WITHOUT_CLASSIFICATION	0.9999473108439314	WITHOUT_CLASSIFICATION	5.26891560686461E-5	IMPLEMENTATION
// Should we display extra debug information while parsing?	WITHOUT_CLASSIFICATION	0.9999526115871693	WITHOUT_CLASSIFICATION	4.738841283056409E-5	IMPLEMENTATION
// __END__ marker offset (-1 means none present)	WITHOUT_CLASSIFICATION	0.9999157235604018	WITHOUT_CLASSIFICATION	8.427643959816713E-5	IMPLEMENTATION
// Parser states:	WITHOUT_CLASSIFICATION	0.9999296731267213	WITHOUT_CLASSIFICATION	7.032687327873333E-5	IMPLEMENTATION
// Is the parser current within a singleton (value is number of nested singletons)	WITHOUT_CLASSIFICATION	0.9999912098984487	WITHOUT_CLASSIFICATION	8.790101551269913E-6	IMPLEMENTATION
// Is the parser currently within a method definition	WITHOUT_CLASSIFICATION	0.9999680385861934	WITHOUT_CLASSIFICATION	3.196141380660806E-5	IMPLEMENTATION
// LOCALVAR	WITHOUT_CLASSIFICATION	0.999905495479312	WITHOUT_CLASSIFICATION	9.450452068803199E-5	IMPLEMENTATION
// CONSTANT	WITHOUT_CLASSIFICATION	0.9999067537289777	WITHOUT_CLASSIFICATION	9.324627102222142E-5	IMPLEMENTATION
// INSTANCE VARIABLE	WITHOUT_CLASSIFICATION	0.9999057416225833	WITHOUT_CLASSIFICATION	9.425837741670911E-5	IMPLEMENTATION
// Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])	WITHOUT_CLASSIFICATION	0.9999733461782275	WITHOUT_CLASSIFICATION	2.6653821772379247E-5	IMPLEMENTATION
/* MRI: block_append */	WITHOUT_CLASSIFICATION	0.9999168541199829	WITHOUT_CLASSIFICATION	8.314588001709083E-5	IMPLEMENTATION
// Reduces overhead in interp by not set position every single line we encounter. 	WITHOUT_CLASSIFICATION	0.9999634178019803	WITHOUT_CLASSIFICATION	3.658219801974887E-5	IMPLEMENTATION
// Assumption: tail is never a list node	WITHOUT_CLASSIFICATION	0.999886906923611	WITHOUT_CLASSIFICATION	1.1309307638893317E-4	IMPLEMENTATION
//        return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));	WITHOUT_CLASSIFICATION	0.9999835513097096	WITHOUT_CLASSIFICATION	1.6448690290370944E-5	IMPLEMENTATION
// Node	WITHOUT_CLASSIFICATION	0.9966005400278303	WITHOUT_CLASSIFICATION	0.0033994599721697094	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9997064169900142	WITHOUT_CLASSIFICATION	2.935830099857768E-4	IMPLEMENTATION
/*case CONSTNODE:                handleUselessWarn(node, "a constant"); return;*/	WITHOUT_CLASSIFICATION	0.9999503889834079	WITHOUT_CLASSIFICATION	4.9611016592106375E-5	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9997064169900142	WITHOUT_CLASSIFICATION	2.935830099857768E-4	IMPLEMENTATION
/*case CLASSNODE: case COLON2NODE:                handleUselessWarn(node, "::"); return;*/	WITHOUT_CLASSIFICATION	0.999948626445448	WITHOUT_CLASSIFICATION	5.1373554551989525E-5	IMPLEMENTATION
/*case SELFNODE:                handleUselessWarn(node, "self"); return;*/	WITHOUT_CLASSIFICATION	0.9999408654706677	WITHOUT_CLASSIFICATION	5.9134529332127115E-5	IMPLEMENTATION
// FIXME: DSTR,EVSTR,STR: warning "string literal in condition"	WITHOUT_CLASSIFICATION	0.9997995411024551	WITHOUT_CLASSIFICATION	2.0045889754497024E-4	IMPLEMENTATION
/* MRI: range_op */	WITHOUT_CLASSIFICATION	0.9999135876822324	WITHOUT_CLASSIFICATION	8.641231776767025E-5	IMPLEMENTATION
// Block and block pass passed in at same time....uh oh	WITHOUT_CLASSIFICATION	0.9999545065951478	WITHOUT_CLASSIFICATION	4.5493404852134374E-5	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.9965936388512507	WITHOUT_CLASSIFICATION	0.003406361148749266	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.9965936388512507	WITHOUT_CLASSIFICATION	0.003406361148749266	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.9965936388512507	WITHOUT_CLASSIFICATION	0.003406361148749266	IMPLEMENTATION
// tail must be EvStrNode at this point 	WITHOUT_CLASSIFICATION	0.9999511387028519	WITHOUT_CLASSIFICATION	4.8861297148088686E-5	IMPLEMENTATION
//Do not add an empty string node	WITHOUT_CLASSIFICATION	0.9999824651608313	WITHOUT_CLASSIFICATION	1.7534839168698592E-5	IMPLEMENTATION
// Zero-Argument declaration	WITHOUT_CLASSIFICATION	0.9999552382120458	WITHOUT_CLASSIFICATION	4.4761787954247024E-5	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999053960346399	WITHOUT_CLASSIFICATION	9.460396536004441E-5	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999053960346399	WITHOUT_CLASSIFICATION	9.460396536004441E-5	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999053960346399	WITHOUT_CLASSIFICATION	9.460396536004441E-5	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999053960346399	WITHOUT_CLASSIFICATION	9.460396536004441E-5	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999053960346399	WITHOUT_CLASSIFICATION	9.460396536004441E-5	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999053960346399	WITHOUT_CLASSIFICATION	9.460396536004441E-5	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999053960346399	WITHOUT_CLASSIFICATION	9.460396536004441E-5	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999053960346399	WITHOUT_CLASSIFICATION	9.460396536004441E-5	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999053960346399	WITHOUT_CLASSIFICATION	9.460396536004441E-5	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999053960346399	WITHOUT_CLASSIFICATION	9.460396536004441E-5	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999053960346399	WITHOUT_CLASSIFICATION	9.460396536004441E-5	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999053960346399	WITHOUT_CLASSIFICATION	9.460396536004441E-5	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999053960346399	WITHOUT_CLASSIFICATION	9.460396536004441E-5	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999053960346399	WITHOUT_CLASSIFICATION	9.460396536004441E-5	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999053960346399	WITHOUT_CLASSIFICATION	9.460396536004441E-5	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999053960346399	WITHOUT_CLASSIFICATION	9.460396536004441E-5	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999053960346399	WITHOUT_CLASSIFICATION	9.460396536004441E-5	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999053960346399	WITHOUT_CLASSIFICATION	9.460396536004441E-5	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999053960346399	WITHOUT_CLASSIFICATION	9.460396536004441E-5	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999053960346399	WITHOUT_CLASSIFICATION	9.460396536004441E-5	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999053960346399	WITHOUT_CLASSIFICATION	9.460396536004441E-5	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999053960346399	WITHOUT_CLASSIFICATION	9.460396536004441E-5	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.999904698401697	WITHOUT_CLASSIFICATION	9.530159830288174E-5	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.999904698401697	WITHOUT_CLASSIFICATION	9.530159830288174E-5	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.999904698401697	WITHOUT_CLASSIFICATION	9.530159830288174E-5	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.999904698401697	WITHOUT_CLASSIFICATION	9.530159830288174E-5	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.999904698401697	WITHOUT_CLASSIFICATION	9.530159830288174E-5	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.999904698401697	WITHOUT_CLASSIFICATION	9.530159830288174E-5	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.999904698401697	WITHOUT_CLASSIFICATION	9.530159830288174E-5	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.999904698401697	WITHOUT_CLASSIFICATION	9.530159830288174E-5	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.999904698401697	WITHOUT_CLASSIFICATION	9.530159830288174E-5	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.999904698401697	WITHOUT_CLASSIFICATION	9.530159830288174E-5	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.999904698401697	WITHOUT_CLASSIFICATION	9.530159830288174E-5	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.999904698401697	WITHOUT_CLASSIFICATION	9.530159830288174E-5	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.999904698401697	WITHOUT_CLASSIFICATION	9.530159830288174E-5	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.999904698401697	WITHOUT_CLASSIFICATION	9.530159830288174E-5	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.999904698401697	WITHOUT_CLASSIFICATION	9.530159830288174E-5	IMPLEMENTATION
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999355473319322	WITHOUT_CLASSIFICATION	6.445266806773115E-5	IMPLEMENTATION
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999673608026339	WITHOUT_CLASSIFICATION	3.263919736607114E-5	IMPLEMENTATION
// shift to yyN	WITHOUT_CLASSIFICATION	0.9999070067035979	WITHOUT_CLASSIFICATION	9.299329640209366E-5	IMPLEMENTATION
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999074468890621	WITHOUT_CLASSIFICATION	9.255311093785496E-5	IMPLEMENTATION
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999193207083074	WITHOUT_CLASSIFICATION	8.067929169270259E-5	IMPLEMENTATION
// line 321	WITHOUT_CLASSIFICATION	0.9999303072217124	WITHOUT_CLASSIFICATION	6.969277828760286E-5	IMPLEMENTATION
// line 351	WITHOUT_CLASSIFICATION	0.9999303072217124	WITHOUT_CLASSIFICATION	6.969277828760286E-5	IMPLEMENTATION
// line 382	WITHOUT_CLASSIFICATION	0.9999303072217124	WITHOUT_CLASSIFICATION	6.969277828760286E-5	IMPLEMENTATION
// line 417	WITHOUT_CLASSIFICATION	0.999930291541616	WITHOUT_CLASSIFICATION	6.970845838401249E-5	IMPLEMENTATION
// line 420	WITHOUT_CLASSIFICATION	0.999930291541616	WITHOUT_CLASSIFICATION	6.970845838401249E-5	IMPLEMENTATION
// line 423	WITHOUT_CLASSIFICATION	0.999930291541616	WITHOUT_CLASSIFICATION	6.970845838401249E-5	IMPLEMENTATION
// line 426	WITHOUT_CLASSIFICATION	0.999930291541616	WITHOUT_CLASSIFICATION	6.970845838401249E-5	IMPLEMENTATION
// line 280	WITHOUT_CLASSIFICATION	0.9999307042800744	WITHOUT_CLASSIFICATION	6.929571992562104E-5	IMPLEMENTATION
// line 283	WITHOUT_CLASSIFICATION	0.9999306810570476	WITHOUT_CLASSIFICATION	6.931894295236096E-5	IMPLEMENTATION
// line 296	WITHOUT_CLASSIFICATION	0.9999306636346706	WITHOUT_CLASSIFICATION	6.933636532932711E-5	IMPLEMENTATION
// line 324	WITHOUT_CLASSIFICATION	0.9999303072217124	WITHOUT_CLASSIFICATION	6.969277828760286E-5	IMPLEMENTATION
// line 327	WITHOUT_CLASSIFICATION	0.9999303072217124	WITHOUT_CLASSIFICATION	6.969277828760286E-5	IMPLEMENTATION
// line 331	WITHOUT_CLASSIFICATION	0.9999303072217124	WITHOUT_CLASSIFICATION	6.969277828760286E-5	IMPLEMENTATION
// line 333	WITHOUT_CLASSIFICATION	0.9999303072217124	WITHOUT_CLASSIFICATION	6.969277828760286E-5	IMPLEMENTATION
// line 336	WITHOUT_CLASSIFICATION	0.9999303072217124	WITHOUT_CLASSIFICATION	6.969277828760286E-5	IMPLEMENTATION
// line 342	WITHOUT_CLASSIFICATION	0.9999303072217124	WITHOUT_CLASSIFICATION	6.969277828760286E-5	IMPLEMENTATION
// line 345	WITHOUT_CLASSIFICATION	0.9999303072217124	WITHOUT_CLASSIFICATION	6.969277828760286E-5	IMPLEMENTATION
// line 348	WITHOUT_CLASSIFICATION	0.9999303072217124	WITHOUT_CLASSIFICATION	6.969277828760286E-5	IMPLEMENTATION
// line 354	WITHOUT_CLASSIFICATION	0.9999303072217124	WITHOUT_CLASSIFICATION	6.969277828760286E-5	IMPLEMENTATION
// line 368	WITHOUT_CLASSIFICATION	0.9999303072217124	WITHOUT_CLASSIFICATION	6.969277828760286E-5	IMPLEMENTATION
// line 377	WITHOUT_CLASSIFICATION	0.9999303072217124	WITHOUT_CLASSIFICATION	6.969277828760286E-5	IMPLEMENTATION
// line 388	WITHOUT_CLASSIFICATION	0.9999303072217124	WITHOUT_CLASSIFICATION	6.969277828760286E-5	IMPLEMENTATION
// line 392	WITHOUT_CLASSIFICATION	0.9999303072217124	WITHOUT_CLASSIFICATION	6.969277828760286E-5	IMPLEMENTATION
// line 397	WITHOUT_CLASSIFICATION	0.9999303072217124	WITHOUT_CLASSIFICATION	6.969277828760286E-5	IMPLEMENTATION
// line 429	WITHOUT_CLASSIFICATION	0.999930291541616	WITHOUT_CLASSIFICATION	6.970845838401249E-5	IMPLEMENTATION
// line 432	WITHOUT_CLASSIFICATION	0.999930291541616	WITHOUT_CLASSIFICATION	6.970845838401249E-5	IMPLEMENTATION
// line 436	WITHOUT_CLASSIFICATION	0.999930291541616	WITHOUT_CLASSIFICATION	6.970845838401249E-5	IMPLEMENTATION
// line 445	WITHOUT_CLASSIFICATION	0.999930291541616	WITHOUT_CLASSIFICATION	6.970845838401249E-5	IMPLEMENTATION
// line 448	WITHOUT_CLASSIFICATION	0.999930291541616	WITHOUT_CLASSIFICATION	6.970845838401249E-5	IMPLEMENTATION
// line 454	WITHOUT_CLASSIFICATION	0.999930291541616	WITHOUT_CLASSIFICATION	6.970845838401249E-5	IMPLEMENTATION
// line 459	WITHOUT_CLASSIFICATION	0.999930291541616	WITHOUT_CLASSIFICATION	6.970845838401249E-5	IMPLEMENTATION
// line 466	WITHOUT_CLASSIFICATION	0.999930291541616	WITHOUT_CLASSIFICATION	6.970845838401249E-5	IMPLEMENTATION
// line 469	WITHOUT_CLASSIFICATION	0.999930291541616	WITHOUT_CLASSIFICATION	6.970845838401249E-5	IMPLEMENTATION
// line 478	WITHOUT_CLASSIFICATION	0.999930291541616	WITHOUT_CLASSIFICATION	6.970845838401249E-5	IMPLEMENTATION
// line 481	WITHOUT_CLASSIFICATION	0.999930291541616	WITHOUT_CLASSIFICATION	6.970845838401249E-5	IMPLEMENTATION
// line 488	WITHOUT_CLASSIFICATION	0.999930291541616	WITHOUT_CLASSIFICATION	6.970845838401249E-5	IMPLEMENTATION
// line 494	WITHOUT_CLASSIFICATION	0.999930291541616	WITHOUT_CLASSIFICATION	6.970845838401249E-5	IMPLEMENTATION
// line 497	WITHOUT_CLASSIFICATION	0.999930291541616	WITHOUT_CLASSIFICATION	6.970845838401249E-5	IMPLEMENTATION
// line 503	WITHOUT_CLASSIFICATION	0.999930291541616	WITHOUT_CLASSIFICATION	6.970845838401249E-5	IMPLEMENTATION
// line 506	WITHOUT_CLASSIFICATION	0.999930291541616	WITHOUT_CLASSIFICATION	6.970845838401249E-5	IMPLEMENTATION
// line 509	WITHOUT_CLASSIFICATION	0.999930291541616	WITHOUT_CLASSIFICATION	6.970845838401249E-5	IMPLEMENTATION
// line 512	WITHOUT_CLASSIFICATION	0.999930291541616	WITHOUT_CLASSIFICATION	6.970845838401249E-5	IMPLEMENTATION
// line 521	WITHOUT_CLASSIFICATION	0.999930291541616	WITHOUT_CLASSIFICATION	6.970845838401249E-5	IMPLEMENTATION
// line 526	WITHOUT_CLASSIFICATION	0.999930291541616	WITHOUT_CLASSIFICATION	6.970845838401249E-5	IMPLEMENTATION
// line 540	WITHOUT_CLASSIFICATION	0.999930291541616	WITHOUT_CLASSIFICATION	6.970845838401249E-5	IMPLEMENTATION
// line 543	WITHOUT_CLASSIFICATION	0.999930291541616	WITHOUT_CLASSIFICATION	6.970845838401249E-5	IMPLEMENTATION
// line 546	WITHOUT_CLASSIFICATION	0.999930291541616	WITHOUT_CLASSIFICATION	6.970845838401249E-5	IMPLEMENTATION
// line 566	WITHOUT_CLASSIFICATION	0.999930291541616	WITHOUT_CLASSIFICATION	6.970845838401249E-5	IMPLEMENTATION
// line 610	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 672	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 691	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 696	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 772	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 782	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 785	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 788	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 791	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 534	WITHOUT_CLASSIFICATION	0.999930291541616	WITHOUT_CLASSIFICATION	6.970845838401249E-5	IMPLEMENTATION
// line 549	WITHOUT_CLASSIFICATION	0.999930291541616	WITHOUT_CLASSIFICATION	6.970845838401249E-5	IMPLEMENTATION
// line 552	WITHOUT_CLASSIFICATION	0.999930291541616	WITHOUT_CLASSIFICATION	6.970845838401249E-5	IMPLEMENTATION
// line 558	WITHOUT_CLASSIFICATION	0.999930291541616	WITHOUT_CLASSIFICATION	6.970845838401249E-5	IMPLEMENTATION
// line 561	WITHOUT_CLASSIFICATION	0.999930291541616	WITHOUT_CLASSIFICATION	6.970845838401249E-5	IMPLEMENTATION
// line 571	WITHOUT_CLASSIFICATION	0.999930291541616	WITHOUT_CLASSIFICATION	6.970845838401249E-5	IMPLEMENTATION
// line 574	WITHOUT_CLASSIFICATION	0.999930291541616	WITHOUT_CLASSIFICATION	6.970845838401249E-5	IMPLEMENTATION
// line 579	WITHOUT_CLASSIFICATION	0.999930291541616	WITHOUT_CLASSIFICATION	6.970845838401249E-5	IMPLEMENTATION
// line 586	WITHOUT_CLASSIFICATION	0.999930291541616	WITHOUT_CLASSIFICATION	6.970845838401249E-5	IMPLEMENTATION
// line 589	WITHOUT_CLASSIFICATION	0.999930291541616	WITHOUT_CLASSIFICATION	6.970845838401249E-5	IMPLEMENTATION
// line 592	WITHOUT_CLASSIFICATION	0.999930291541616	WITHOUT_CLASSIFICATION	6.970845838401249E-5	IMPLEMENTATION
// line 595	WITHOUT_CLASSIFICATION	0.999930291541616	WITHOUT_CLASSIFICATION	6.970845838401249E-5	IMPLEMENTATION
// line 598	WITHOUT_CLASSIFICATION	0.999930291541616	WITHOUT_CLASSIFICATION	6.970845838401249E-5	IMPLEMENTATION
// line 623	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 627	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 630	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 633	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 639	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 648	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 657	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 661	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 666	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 678	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 682	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 688	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 699	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 706	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 708	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 727	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 737	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 753	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 779	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 801	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 808	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 811	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 817	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 842	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 845	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 848	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 893	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 899	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 932	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 944	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 960	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 980	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 1004	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1038	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 820	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 826	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 829	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 832	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 851	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 857	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 860	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 863	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 866	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 869	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 875	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 884	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 887	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 890	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 902	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 909	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 912	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 916	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 922	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 928	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 941	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 947	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 951	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 955	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 965	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 969	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 977	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 983	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 1013	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1023	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1035	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1041	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1043	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1054	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1057	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1060	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1069	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1075	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1105	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1111	WITHOUT_CLASSIFICATION	0.9999308245452193	WITHOUT_CLASSIFICATION	6.917545478062573E-5	IMPLEMENTATION
// line 1122	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1130	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1140	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1158	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1204	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1207	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1247	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1251	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1261	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1078	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1084	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1087	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1090	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1093	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1114	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1116	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1118	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1124	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1126	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1138	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1144	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1149	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1155	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1162	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1173	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1179	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1182	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1190	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1196	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1213	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1217	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1231	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1236	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1244	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1254	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1258	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1264	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1270	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1273	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1276	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1279	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1282	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1289	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1292	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1295	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1298	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1305	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1348	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1387	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1392	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1448	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1462	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1470	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1496	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1502	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1595	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1598	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1308	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1311	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1317	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1323	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1326	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1329	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1337	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1342	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1345	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1354	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1359	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1366	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1369	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1373	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1377	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1383	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1399	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1401	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1406	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1417	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1424	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1427	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1430	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1433	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1436	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1442	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1445	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1458	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1464	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1489	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1493	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1507	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1519	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1532	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1538	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1542	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1557	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1573	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1591	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1615	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1629	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1632	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1705	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1716	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1725	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1742	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1749	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1818	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1822	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1607	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1610	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1622	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1625	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1636	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1639	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1647	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1651	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1657	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1660	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1663	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1678	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1702	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1711	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1719	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1722	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1731	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1734	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1738	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1746	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1756	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1758	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1761	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1767	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1776	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1782	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1785	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1788	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1791	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1797	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1800	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1803	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1806	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1809	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1815	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1825	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1828	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1831	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1847	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9999405160058819	WITHOUT_CLASSIFICATION	5.94839941182111E-5	IMPLEMENTATION
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9999405160058819	WITHOUT_CLASSIFICATION	5.94839941182111E-5	IMPLEMENTATION
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999167943994828	WITHOUT_CLASSIFICATION	8.320560051723314E-5	IMPLEMENTATION
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999421488140474	WITHOUT_CLASSIFICATION	5.785118595247441E-5	IMPLEMENTATION
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999108658146678	WITHOUT_CLASSIFICATION	8.91341853322169E-5	IMPLEMENTATION
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9999121662312931	WITHOUT_CLASSIFICATION	8.783376870685151E-5	IMPLEMENTATION
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999119136203012	WITHOUT_CLASSIFICATION	8.808637969889676E-5	IMPLEMENTATION
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999346541574631	WITHOUT_CLASSIFICATION	6.534584253693606E-5	IMPLEMENTATION
// line 1854	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1869	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1872	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1877	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1886	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1898	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1902	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1905	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1911	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1918	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1935	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1938	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1942	WITHOUT_CLASSIFICATION	0.9999303289604273	WITHOUT_CLASSIFICATION	6.96710395726691E-5	IMPLEMENTATION
// line 1948	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1960	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1963	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1968	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1972	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1982	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1995	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 2000	WITHOUT_CLASSIFICATION	0.999930672911426	WITHOUT_CLASSIFICATION	6.932708857389537E-5	IMPLEMENTATION
// line 2006	WITHOUT_CLASSIFICATION	0.9999306671139978	WITHOUT_CLASSIFICATION	6.933288600215526E-5	IMPLEMENTATION
// line 2010	WITHOUT_CLASSIFICATION	0.9999306636346706	WITHOUT_CLASSIFICATION	6.933636532932711E-5	IMPLEMENTATION
/* We may need to subtract addition offset off of first */	WITHOUT_CLASSIFICATION	0.99994768963172	WITHOUT_CLASSIFICATION	5.2310368280042386E-5	IMPLEMENTATION
/* string fragment (we optimistically take one off in*/	WITHOUT_CLASSIFICATION	0.9999422884230842	WITHOUT_CLASSIFICATION	5.7711576915921906E-5	IMPLEMENTATION
/* ParserSupport.literal_concat).  Check token length*/	WITHOUT_CLASSIFICATION	0.9999427464509042	WITHOUT_CLASSIFICATION	5.725354909588634E-5	IMPLEMENTATION
/* and subtract as neeeded.*/	WITHOUT_CLASSIFICATION	0.9999219033761348	WITHOUT_CLASSIFICATION	7.8096623865103E-5	IMPLEMENTATION
/*                    $$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);  */	WITHOUT_CLASSIFICATION	0.9999865240986292	WITHOUT_CLASSIFICATION	1.3475901370796577E-5	IMPLEMENTATION
/* ENEBO: arg surrounded by in_defined set/unset*/	WITHOUT_CLASSIFICATION	0.9999410183980975	WITHOUT_CLASSIFICATION	5.898160190266361E-5	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999947589468533	WITHOUT_CLASSIFICATION	5.241053146767988E-6	IMPLEMENTATION
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999203433617898	WITHOUT_CLASSIFICATION	7.965663821022509E-5	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999708386518901	WITHOUT_CLASSIFICATION	2.9161348110000638E-5	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999708386518901	WITHOUT_CLASSIFICATION	2.9161348110000638E-5	IMPLEMENTATION
/* ENEBO: Removed !compile_for_eval which probably is to reduce warnings*/	WITHOUT_CLASSIFICATION	0.9999247705756358	WITHOUT_CLASSIFICATION	7.52294243642603E-5	IMPLEMENTATION
/* was $$ = null;*/	WITHOUT_CLASSIFICATION	0.9999143306153186	WITHOUT_CLASSIFICATION	8.566938468138807E-5	IMPLEMENTATION
// line 2019 "Ruby19Parser.y"	WITHOUT_CLASSIFICATION	0.9999388493163025	WITHOUT_CLASSIFICATION	6.115068369744738E-5	IMPLEMENTATION
// line 8143 "-"	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640234E-5	IMPLEMENTATION
// we know variables cannot be null since localstaticscope will create a 0 length one.	WITHOUT_CLASSIFICATION	0.9999955659150643	WITHOUT_CLASSIFICATION	4.4340849356335795E-6	IMPLEMENTATION
// No bit math to store level since we know level is zero for this case	WITHOUT_CLASSIFICATION	0.9999713830597093	WITHOUT_CLASSIFICATION	2.8616940290636906E-5	IMPLEMENTATION
// Next immediate scope.  Variable and constant scoping rules make use of this variable // in different ways.	WITHOUT_CLASSIFICATION	0.9999810670378649	WITHOUT_CLASSIFICATION	1.893296213510018E-5	IMPLEMENTATION
// Live reference to module	WITHOUT_CLASSIFICATION	0.9999640725173452	WITHOUT_CLASSIFICATION	3.592748265484552E-5	IMPLEMENTATION
// Next CRef down the lexical structure	WITHOUT_CLASSIFICATION	0.9999492885063341	WITHOUT_CLASSIFICATION	5.071149366592833E-5	IMPLEMENTATION
// Our name holder (offsets are assigned as variables are added	WITHOUT_CLASSIFICATION	0.9999715666449948	WITHOUT_CLASSIFICATION	2.8433355005332403E-5	IMPLEMENTATION
// number of variables in this scope representing required arguments	WITHOUT_CLASSIFICATION	0.9999897682817265	WITHOUT_CLASSIFICATION	1.0231718273556E-5	IMPLEMENTATION
// number of variables in this scope representing optional arguments	WITHOUT_CLASSIFICATION	0.9999915291140228	WITHOUT_CLASSIFICATION	8.470885977234926E-6	IMPLEMENTATION
// index of variable that represents a "rest" arg	WITHOUT_CLASSIFICATION	0.9999508165723238	WITHOUT_CLASSIFICATION	4.918342767614886E-5	IMPLEMENTATION
// Note that this object equality check is intentional, to ensure // the string and its interned version are the same object.	WITHOUT_CLASSIFICATION	0.9999979897123729	WITHOUT_CLASSIFICATION	2.0102876271617885E-6	IMPLEMENTATION
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999425663892122	WITHOUT_CLASSIFICATION	5.7433610787829206E-5	IMPLEMENTATION
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999425663892122	WITHOUT_CLASSIFICATION	5.7433610787829206E-5	IMPLEMENTATION
/* Note: Only used by compiler until it can use getConstant again or use some other refactoring */	WITHOUT_CLASSIFICATION	0.9999604472997815	WITHOUT_CLASSIFICATION	3.9552700218457575E-5	IMPLEMENTATION
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999894085934226	WITHOUT_CLASSIFICATION	1.0591406577498794E-5	IMPLEMENTATION
/* Try and unload the autoload specified from internedName */	WITHOUT_CLASSIFICATION	0.9999843982371504	WITHOUT_CLASSIFICATION	1.5601762849655398E-5	IMPLEMENTATION
// We override that the logic which uses this	WITHOUT_CLASSIFICATION	0.9999760280402935	WITHOUT_CLASSIFICATION	2.397195970644348E-5	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999844920521573	WITHOUT_CLASSIFICATION	1.550794784272396E-5	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999847084946156	WITHOUT_CLASSIFICATION	1.5291505384403854E-5	IMPLEMENTATION
// source extensions	WITHOUT_CLASSIFICATION	0.9999466123024919	WITHOUT_CLASSIFICATION	5.338769750806414E-5	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999847084946156	WITHOUT_CLASSIFICATION	1.5291505384403854E-5	IMPLEMENTATION
// . Array given to rest should pass itself // . Array with rest + other args should extract array // . Array with multiple values and NO rest should extract args if there are more than one argument	WITHOUT_CLASSIFICATION	0.9999657331365724	WITHOUT_CLASSIFICATION	3.426686342765504E-5	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999739265530936	WITHOUT_CLASSIFICATION	2.6073446906327662E-5	IMPLEMENTATION
// Is this thread currently with in a function trace?	WITHOUT_CLASSIFICATION	0.9999324910858808	WITHOUT_CLASSIFICATION	6.7508914119225E-5	IMPLEMENTATION
// Is this thread currently doing an defined? defined should set things like $!	WITHOUT_CLASSIFICATION	0.9999110883533211	WITHOUT_CLASSIFICATION	8.891164667898622E-5	IMPLEMENTATION
//private UnsynchronizedStack parentStack;	WITHOUT_CLASSIFICATION	0.9999760625133505	WITHOUT_CLASSIFICATION	2.3937486649603734E-5	IMPLEMENTATION
//private UnsynchronizedStack frameStack;	WITHOUT_CLASSIFICATION	0.9999747094916913	WITHOUT_CLASSIFICATION	2.529050830867013E-5	IMPLEMENTATION
// List of active dynamic scopes.  Each of these may have captured other dynamic scopes // to implement closures.	WITHOUT_CLASSIFICATION	0.9952715034513361	WITHOUT_CLASSIFICATION	0.004728496548663914	IMPLEMENTATION
// File where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999700149474099	WITHOUT_CLASSIFICATION	2.998505259005741E-5	IMPLEMENTATION
// Line where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999698525042217	WITHOUT_CLASSIFICATION	3.0147495778446818E-5	IMPLEMENTATION
// In certain places, like grep, we don't use real frames for the // call blocks. This has the effect of not setting the backref in // the correct frame - this delta is activated to the place where // the grep is running in so that the backref will be set in an // appropriate place.	WITHOUT_CLASSIFICATION	0.9999992813782413	WITHOUT_CLASSIFICATION	7.186217586491077E-7	IMPLEMENTATION
// TOPLEVEL self and a few others want a top-level scope.  We create this one right // away and then pass it into top-level parse so it ends up being the top level.	WITHOUT_CLASSIFICATION	0.999944538802244	WITHOUT_CLASSIFICATION	5.5461197756089495E-5	IMPLEMENTATION
//////////////////// CATCH MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9999917201733336	WITHOUT_CLASSIFICATION	8.279826666395563E-6	IMPLEMENTATION
//////////////////// FRAME MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9999917053626199	WITHOUT_CLASSIFICATION	8.294637380059355E-6	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9998464912379896	WITHOUT_CLASSIFICATION	1.5350876201034253E-4	IMPLEMENTATION
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999255806191051	WITHOUT_CLASSIFICATION	7.441938089493149E-5	IMPLEMENTATION
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999255806191051	WITHOUT_CLASSIFICATION	7.441938089493149E-5	IMPLEMENTATION
// look for mangling markers for compiled Ruby in method name	WITHOUT_CLASSIFICATION	0.9999042622619848	WITHOUT_CLASSIFICATION	9.5737738015157E-5	IMPLEMENTATION
// if it's not a rescue or ensure, there's a frame associated, so decrement	WITHOUT_CLASSIFICATION	0.9999783313234879	WITHOUT_CLASSIFICATION	2.1668676512078745E-5	IMPLEMENTATION
// look for __file__ method name for compiled roots	WITHOUT_CLASSIFICATION	0.9999406345315063	WITHOUT_CLASSIFICATION	5.936546849378142E-5	IMPLEMENTATION
// All entries following removed node can stay // in list, but all preceding ones need to be // cloned.	WITHOUT_CLASSIFICATION	0.9999285446435844	WITHOUT_CLASSIFICATION	7.145535641562165E-5	IMPLEMENTATION
// required and optional only	WITHOUT_CLASSIFICATION	0.999960652784704	WITHOUT_CLASSIFICATION	3.934721529596112E-5	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999847084946156	WITHOUT_CLASSIFICATION	1.5291505384403854E-5	IMPLEMENTATION
// look for mangling markers for bound, unframed methods in class name	WITHOUT_CLASSIFICATION	0.9999765240518332	WITHOUT_CLASSIFICATION	2.3475948166679334E-5	IMPLEMENTATION
// set the binding's frame's "previous" file and line to current, so // trace will show who called the block	WITHOUT_CLASSIFICATION	0.9999897480553354	WITHOUT_CLASSIFICATION	1.0251944664562075E-5	IMPLEMENTATION
// framed invokers will have Ruby frames associated with them	WITHOUT_CLASSIFICATION	0.9999697107344091	WITHOUT_CLASSIFICATION	3.0289265590951488E-5	IMPLEMENTATION
// look for mangling markers for bound, framed methods in class name	WITHOUT_CLASSIFICATION	0.9999778187144427	WITHOUT_CLASSIFICATION	2.2181285557304795E-5	IMPLEMENTATION
// unframed invokers have no Ruby frames, so pull from class name // but use current frame as file and line	WITHOUT_CLASSIFICATION	0.9999872554559263	WITHOUT_CLASSIFICATION	1.2744544073691482E-5	IMPLEMENTATION
// try to mine out a Ruby frame using our list of interpreter entry-point markers	WITHOUT_CLASSIFICATION	0.9999801463305574	WITHOUT_CLASSIFICATION	1.9853669442535167E-5	IMPLEMENTATION
// Frame matches one of our markers for "interpreted" calls	WITHOUT_CLASSIFICATION	0.9999447045802301	WITHOUT_CLASSIFICATION	5.5295419769785946E-5	IMPLEMENTATION
// Frame is extraneous runtime information, skip it unless debug	WITHOUT_CLASSIFICATION	0.9999696350932452	WITHOUT_CLASSIFICATION	3.0364906754754177E-5	IMPLEMENTATION
/*     * Determine what sort of assigner should be used for the provided 'iter' (e.g. block).     * Assigner provides just the right logic for assigning values to local parameters of the     * block.     *     * This method also has a second optimization which is to set 'noargblock' in the case that     * the block is a block which accepts no arguments.  The primary reason for this second     * optimization is that in the case of a yield with a RubyArray we will bypass some logic     * processing the RubyArray into a proper form (only to then not do anythign with it).  A     * secondary benefit is that a simple boolean seems to optimize by hotspot much faster     * than the zero arg assigner.     */	WITHOUT_CLASSIFICATION	0.999999943630559	WITHOUT_CLASSIFICATION	5.636944097456267E-8	IMPLEMENTATION
// new scope for this invocation of the block, based on parent scope	WITHOUT_CLASSIFICATION	0.9999921803318025	WITHOUT_CLASSIFICATION	7.819668197574316E-6	IMPLEMENTATION
// No argument blocks	WITHOUT_CLASSIFICATION	0.99995109955486	WITHOUT_CLASSIFICATION	4.8900445140017975E-5	IMPLEMENTATION
// just push the same empty scope, since we won't use one	WITHOUT_CLASSIFICATION	0.9999789911552989	WITHOUT_CLASSIFICATION	2.100884470108081E-5	IMPLEMENTATION
// Not sure if this is actually possible, but better safe than sorry	WITHOUT_CLASSIFICATION	0.9999662640940655	WITHOUT_CLASSIFICATION	3.3735905934421286E-5	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999499973436797	WITHOUT_CLASSIFICATION	5.000265632038272E-5	IMPLEMENTATION
// This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).	WITHOUT_CLASSIFICATION	0.9999598910706504	WITHOUT_CLASSIFICATION	4.0108929349545355E-5	IMPLEMENTATION
// Highest reserved id	WITHOUT_CLASSIFICATION	0.9999208051136342	WITHOUT_CLASSIFICATION	7.919488636577586E-5	IMPLEMENTATION
// binary typed calls	WITHOUT_CLASSIFICATION	0.9999218728006456	WITHOUT_CLASSIFICATION	7.812719935430988E-5	IMPLEMENTATION
// id must always be even	WITHOUT_CLASSIFICATION	0.9999431794177664	WITHOUT_CLASSIFICATION	5.682058223357126E-5	IMPLEMENTATION
// with block pass	WITHOUT_CLASSIFICATION	0.9999158560738876	WITHOUT_CLASSIFICATION	8.4143926112413E-5	IMPLEMENTATION
// no block	WITHOUT_CLASSIFICATION	0.9999268240990649	WITHOUT_CLASSIFICATION	7.31759009351803E-5	IMPLEMENTATION
// with block literal (iter)	WITHOUT_CLASSIFICATION	0.9999237597798971	WITHOUT_CLASSIFICATION	7.624022010284107E-5	IMPLEMENTATION
//            assert false : "can this happen?";	WITHOUT_CLASSIFICATION	0.999980194016077	WITHOUT_CLASSIFICATION	1.980598392300243E-5	IMPLEMENTATION
// if we have multiple asgn with just *args, need a special type for that	WITHOUT_CLASSIFICATION	0.9999762109687194	WITHOUT_CLASSIFICATION	2.378903128063721E-5	IMPLEMENTATION
// && args.getMaxArgumentsCount() != 1) {	WITHOUT_CLASSIFICATION	0.9999380874201567	WITHOUT_CLASSIFICATION	6.191257984332972E-5	IMPLEMENTATION
//            return warnMultiReturnNil(ruby);	WITHOUT_CLASSIFICATION	0.9999903768179266	WITHOUT_CLASSIFICATION	9.62318207349368E-6	IMPLEMENTATION
// ensure zero is devoted to no method name	WITHOUT_CLASSIFICATION	0.9999438814541205	WITHOUT_CLASSIFICATION	5.6118545879423234E-5	IMPLEMENTATION
// predefine a few other methods we invoke directly elsewhere	WITHOUT_CLASSIFICATION	0.999967319842074	WITHOUT_CLASSIFICATION	3.26801579260531E-5	IMPLEMENTATION
// fast and safe respond_to? call site logic	WITHOUT_CLASSIFICATION	0.999934645773275	WITHOUT_CLASSIFICATION	6.535422672511359E-5	IMPLEMENTATION
// Static scoping information for this scope	WITHOUT_CLASSIFICATION	0.9999871818924674	WITHOUT_CLASSIFICATION	1.2818107532729562E-5	IMPLEMENTATION
// Captured dynamic scopes	WITHOUT_CLASSIFICATION	0.9999299804000648	WITHOUT_CLASSIFICATION	7.001959993527403E-5	IMPLEMENTATION
// Backref for $~, $1, etc	WITHOUT_CLASSIFICATION	0.9999185637047369	WITHOUT_CLASSIFICATION	8.143629526312182E-5	IMPLEMENTATION
// Lastline	WITHOUT_CLASSIFICATION	0.9999067092342154	WITHOUT_CLASSIFICATION	9.329076578453936E-5	IMPLEMENTATION
// No binding scope so we should create one	WITHOUT_CLASSIFICATION	0.9999517819039834	WITHOUT_CLASSIFICATION	4.821809601652631E-5	IMPLEMENTATION
// bindings scopes must always be ManyVars scopes since evals can grow them	WITHOUT_CLASSIFICATION	0.9999517529033007	WITHOUT_CLASSIFICATION	4.8247096699263005E-5	IMPLEMENTATION
// Helper function to give a good view of current dynamic scope with captured scopes	WITHOUT_CLASSIFICATION	0.9999863481681814	WITHOUT_CLASSIFICATION	1.3651831818506594E-5	IMPLEMENTATION
// try count specific args to determine required	WITHOUT_CLASSIFICATION	0.9999765462108224	WITHOUT_CLASSIFICATION	2.3453789177577614E-5	IMPLEMENTATION
// Some helper functions:	WITHOUT_CLASSIFICATION	0.9999443010095681	WITHOUT_CLASSIFICATION	5.56989904318112E-5	IMPLEMENTATION
// silently ignore	WITHOUT_CLASSIFICATION	0.999973451033978	WITHOUT_CLASSIFICATION	2.6548966022073072E-5	IMPLEMENTATION
// used by compiler	WITHOUT_CLASSIFICATION	0.9999510777638123	WITHOUT_CLASSIFICATION	4.8922236187686105E-5	IMPLEMENTATION
// initialize the static settings to determine which factory to use	WITHOUT_CLASSIFICATION	0.999998181369849	WITHOUT_CLASSIFICATION	1.8186301509978247E-6	IMPLEMENTATION
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999346541574631	WITHOUT_CLASSIFICATION	6.534584253693606E-5	IMPLEMENTATION
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9999397269657017	WITHOUT_CLASSIFICATION	6.027303429826256E-5	IMPLEMENTATION
//  Single node on list	WITHOUT_CLASSIFICATION	0.999922922869684	WITHOUT_CLASSIFICATION	7.707713031610294E-5	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999588257625517	WITHOUT_CLASSIFICATION	4.1174237448402496E-5	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999434579499024	WITHOUT_CLASSIFICATION	5.654205009769806E-5	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999739265530936	WITHOUT_CLASSIFICATION	2.6073446906327662E-5	IMPLEMENTATION
// Note: In Ruby 1.9 all of this logic can go away since they will require explicit // bindings for evals.	WITHOUT_CLASSIFICATION	0.9999479614546997	WITHOUT_CLASSIFICATION	5.203854530038653E-5	IMPLEMENTATION
// We only define one special dynamic scope per 'logical' binding.  So all bindings for // the same scope should share the same dynamic scope.  This allows multiple evals with // different different bindings in the same scope to see the same stuff.	WITHOUT_CLASSIFICATION	0.9999912993931109	WITHOUT_CLASSIFICATION	8.700606888969183E-6	IMPLEMENTATION
// If the next scope out has the same binding scope as this scope it means // we are evaling within an eval and in that case we should be sharing the same // binding scope.	WITHOUT_CLASSIFICATION	0.9999895886121577	WITHOUT_CLASSIFICATION	1.0411387842234012E-5	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999893892801179	WITHOUT_CLASSIFICATION	1.061071988194027E-5	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999893892801179	WITHOUT_CLASSIFICATION	1.061071988194027E-5	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999692208832894	WITHOUT_CLASSIFICATION	3.077911671058583E-5	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999692208832894	WITHOUT_CLASSIFICATION	3.077911671058583E-5	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999692208832894	WITHOUT_CLASSIFICATION	3.077911671058583E-5	IMPLEMENTATION
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999502754185706	WITHOUT_CLASSIFICATION	4.972458142934268E-5	IMPLEMENTATION
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999502754185706	WITHOUT_CLASSIFICATION	4.972458142934268E-5	IMPLEMENTATION
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999394571066232	WITHOUT_CLASSIFICATION	6.054289337682851E-5	IMPLEMENTATION
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999394571066232	WITHOUT_CLASSIFICATION	6.054289337682851E-5	IMPLEMENTATION
/*     * This is the proper behavior for all non-expanded assigners which have a pre > 0.  The rest     * override this.     */	WITHOUT_CLASSIFICATION	0.9999959146756285	WITHOUT_CLASSIFICATION	4.085324371411039E-6	IMPLEMENTATION
/*     * This is the proper behavior for all non-expanded assigners.     */	WITHOUT_CLASSIFICATION	0.9999921334887272	WITHOUT_CLASSIFICATION	7.866511272902972E-6	IMPLEMENTATION
// prefill ?	WITHOUT_CLASSIFICATION	0.9999217954089282	WITHOUT_CLASSIFICATION	7.820459107171954E-5	IMPLEMENTATION
// prefill ?	WITHOUT_CLASSIFICATION	0.9999217954089282	WITHOUT_CLASSIFICATION	7.820459107171954E-5	IMPLEMENTATION
// MUST be called from synchronized/locked block! // should only be called by variableTableStore/variableTableFastStore	WITHOUT_CLASSIFICATION	0.9999842167539443	WITHOUT_CLASSIFICATION	1.578324605565474E-5	IMPLEMENTATION
// retrieve method // module // name	WITHOUT_CLASSIFICATION	0.9999739901849178	WITHOUT_CLASSIFICATION	2.6009815082108362E-5	IMPLEMENTATION
// call is ok, punch it!	WITHOUT_CLASSIFICATION	0.9999151112446917	WITHOUT_CLASSIFICATION	8.488875530826036E-5	IMPLEMENTATION
// if undefined, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999492896212282	WITHOUT_CLASSIFICATION	5.071037877181089E-5	IMPLEMENTATION
// if we're not attempting to invoke method_missing and method is not visible, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999838348977936	WITHOUT_CLASSIFICATION	1.6165102206295275E-5	IMPLEMENTATION
// method object already present, push various args // tc // self // klazz // name	WITHOUT_CLASSIFICATION	0.9999788692882129	WITHOUT_CLASSIFICATION	2.113071178706607E-5	IMPLEMENTATION
// if it's method_missing, just invoke it	WITHOUT_CLASSIFICATION	0.9999577129474443	WITHOUT_CLASSIFICATION	4.2287052555697956E-5	IMPLEMENTATION
// invoke callMethodMissing	WITHOUT_CLASSIFICATION	0.9999371877317272	WITHOUT_CLASSIFICATION	6.281226827265793E-5	IMPLEMENTATION
// caller	WITHOUT_CLASSIFICATION	0.9969260125106988	WITHOUT_CLASSIFICATION	0.0030739874893012543	IMPLEMENTATION
// calltype // block	WITHOUT_CLASSIFICATION	0.9999122895737357	WITHOUT_CLASSIFICATION	8.771042626433455E-5	IMPLEMENTATION
// if no exception raised, jump to end to leave result on stack for return	WITHOUT_CLASSIFICATION	0.9999804210020194	WITHOUT_CLASSIFICATION	1.957899798051642E-5	IMPLEMENTATION
// load arity for check	WITHOUT_CLASSIFICATION	0.999946631698782	WITHOUT_CLASSIFICATION	5.336830121809774E-5	IMPLEMENTATION
// throw	WITHOUT_CLASSIFICATION	0.9970419480899776	WITHOUT_CLASSIFICATION	0.0029580519100223857	IMPLEMENTATION
// load arity for error	WITHOUT_CLASSIFICATION	0.9999440053859242	WITHOUT_CLASSIFICATION	5.599461407582292E-5	IMPLEMENTATION
// arity ok, continue	WITHOUT_CLASSIFICATION	0.9999288104284038	WITHOUT_CLASSIFICATION	7.118957159626857E-5	IMPLEMENTATION
//InvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9999379163735527	WITHOUT_CLASSIFICATION	6.20836264472801E-5	IMPLEMENTATION
// ENEBO: Perhaps slow but simple for now	WITHOUT_CLASSIFICATION	0.9998588485482109	WITHOUT_CLASSIFICATION	1.4115145178913158E-4	IMPLEMENTATION
// FastInvocationCallback	WITHOUT_CLASSIFICATION	0.9999286521427158	WITHOUT_CLASSIFICATION	7.134785728430601E-5	IMPLEMENTATION
// InvocationCallback	WITHOUT_CLASSIFICATION	0.999929577633007	WITHOUT_CLASSIFICATION	7.042236699297229E-5	IMPLEMENTATION
//DumpingInvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9999432704113022	WITHOUT_CLASSIFICATION	5.672958869780403E-5	IMPLEMENTATION
// for fast lookup: encoding entry => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999672485931554	WITHOUT_CLASSIFICATION	3.275140684458829E-5	IMPLEMENTATION
// for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999610380762894	WITHOUT_CLASSIFICATION	3.896192371046632E-5	IMPLEMENTATION
// load the encoding	WITHOUT_CLASSIFICATION	0.9999710120662847	WITHOUT_CLASSIFICATION	2.898793371524573E-5	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999601831779472	WITHOUT_CLASSIFICATION	3.981682205268577E-5	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999575586395609	WITHOUT_CLASSIFICATION	4.244136043911813E-5	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999569670464779	WITHOUT_CLASSIFICATION	4.303295352225109E-5	IMPLEMENTATION
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999551005843126	WITHOUT_CLASSIFICATION	4.489941568737021E-5	IMPLEMENTATION
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999551429480646	WITHOUT_CLASSIFICATION	4.485705193532351E-5	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999590061218038	WITHOUT_CLASSIFICATION	4.0993878196232645E-5	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999563040007807	WITHOUT_CLASSIFICATION	4.369599921935345E-5	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999556949199749	WITHOUT_CLASSIFICATION	4.430508002508376E-5	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999587132341099	WITHOUT_CLASSIFICATION	4.128676589011975E-5	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999559918081758	WITHOUT_CLASSIFICATION	4.400819182410979E-5	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999553783758953	WITHOUT_CLASSIFICATION	4.462162410460778E-5	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999559918081758	WITHOUT_CLASSIFICATION	4.400819182410979E-5	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999559918081758	WITHOUT_CLASSIFICATION	4.400819182410979E-5	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999559918081758	WITHOUT_CLASSIFICATION	4.400819182410979E-5	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999559918081758	WITHOUT_CLASSIFICATION	4.400819182410979E-5	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999559918081758	WITHOUT_CLASSIFICATION	4.400819182410979E-5	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999559918081758	WITHOUT_CLASSIFICATION	4.400819182410979E-5	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999553783758953	WITHOUT_CLASSIFICATION	4.462162410460778E-5	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999553783758953	WITHOUT_CLASSIFICATION	4.462162410460778E-5	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999553783758953	WITHOUT_CLASSIFICATION	4.462162410460778E-5	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999553783758953	WITHOUT_CLASSIFICATION	4.462162410460778E-5	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999553783758953	WITHOUT_CLASSIFICATION	4.462162410460778E-5	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999553783758953	WITHOUT_CLASSIFICATION	4.462162410460778E-5	IMPLEMENTATION
// If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs	WITHOUT_CLASSIFICATION	0.9999684586799453	WITHOUT_CLASSIFICATION	3.1541320054637796E-5	IMPLEMENTATION
// BreakJump, ThreadContext	WITHOUT_CLASSIFICATION	0.9999286802137627	WITHOUT_CLASSIFICATION	7.13197862372214E-5	IMPLEMENTATION
// ThreadContext	WITHOUT_CLASSIFICATION	0.9999269929915671	WITHOUT_CLASSIFICATION	7.300700843289808E-5	IMPLEMENTATION
// BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999458655878362	WITHOUT_CLASSIFICATION	5.4134412163759794E-5	IMPLEMENTATION
// Make Java class files in the jar reachable from Ruby	WITHOUT_CLASSIFICATION	0.9999882570664346	WITHOUT_CLASSIFICATION	1.1742933565462764E-5	IMPLEMENTATION
// RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999467678191188	WITHOUT_CLASSIFICATION	5.3232180881204364E-5	IMPLEMENTATION
// add all startup load paths to the list first	WITHOUT_CLASSIFICATION	0.9999793064629118	WITHOUT_CLASSIFICATION	2.0693537088317814E-5	IMPLEMENTATION
// if it's a compiled JRuby script, instantiate and run it	WITHOUT_CLASSIFICATION	0.9999791052935129	WITHOUT_CLASSIFICATION	2.089470648720801E-5	IMPLEMENTATION
// wrap in try/catch for security exceptions in an applet	WITHOUT_CLASSIFICATION	0.999850530598616	WITHOUT_CLASSIFICATION	1.4946940138410784E-4	IMPLEMENTATION
// add $RUBYLIB paths	WITHOUT_CLASSIFICATION	0.9999564713609252	WITHOUT_CLASSIFICATION	4.352863907481914E-5	IMPLEMENTATION
// Empty paths do not need to be added	WITHOUT_CLASSIFICATION	0.9996434058068978	WITHOUT_CLASSIFICATION	3.565941931022237E-4	IMPLEMENTATION
// "." dir is used for relative path loads from a given file, as in require '../foo/bar'	WITHOUT_CLASSIFICATION	0.9999845112527594	WITHOUT_CLASSIFICATION	1.5488747240560076E-5	IMPLEMENTATION
// Add 1.8 libs	WITHOUT_CLASSIFICATION	0.9999499573958976	WITHOUT_CLASSIFICATION	5.004260410242894E-5	IMPLEMENTATION
// Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.	WITHOUT_CLASSIFICATION	0.9999968185845617	WITHOUT_CLASSIFICATION	3.181415438334074E-6	IMPLEMENTATION
// Library has already been loaded in some form, bail out	WITHOUT_CLASSIFICATION	0.9999744954609574	WITHOUT_CLASSIFICATION	2.5504539042598676E-5	IMPLEMENTATION
// We don't want a package name beginning with dots, so we remove them	WITHOUT_CLASSIFICATION	0.9999893570343138	WITHOUT_CLASSIFICATION	1.0642965686228816E-5	IMPLEMENTATION
// If there is a jar-file with the required name, we add this to the class path.	WITHOUT_CLASSIFICATION	0.9999951464933629	WITHOUT_CLASSIFICATION	4.853506637090189E-6	IMPLEMENTATION
// quietly try to load the class	WITHOUT_CLASSIFICATION	0.99998499812701	WITHOUT_CLASSIFICATION	1.5001872989986841E-5	IMPLEMENTATION
// If there was a good library before, we go back to that	WITHOUT_CLASSIFICATION	0.9999829400912156	WITHOUT_CLASSIFICATION	1.7059908784421767E-5	IMPLEMENTATION
// no library or extension found, try to load directly as a class	WITHOUT_CLASSIFICATION	0.9999887738779937	WITHOUT_CLASSIFICATION	1.1226122006272016E-5	IMPLEMENTATION
// if an extension is specified, try more targetted searches	WITHOUT_CLASSIFICATION	0.9999876316979215	WITHOUT_CLASSIFICATION	1.2368302078368181E-5	IMPLEMENTATION
// signed short, big-endian	WITHOUT_CLASSIFICATION	0.9999241538533906	WITHOUT_CLASSIFICATION	7.58461466093929E-5	IMPLEMENTATION
// source extensions	WITHOUT_CLASSIFICATION	0.9999466123024919	WITHOUT_CLASSIFICATION	5.338769750806414E-5	IMPLEMENTATION
// We don't support .so, but some stdlib require .so directly // replace it with .jar to look for an extension type we do support	WITHOUT_CLASSIFICATION	0.9999687267933159	WITHOUT_CLASSIFICATION	3.127320668401514E-5	IMPLEMENTATION
// This code exploits the fact that all .jar files will be found for the JarredScript feature. // This is where the basic extension mechanism gets fixed	WITHOUT_CLASSIFICATION	0.9999961500612812	WITHOUT_CLASSIFICATION	3.849938718867174E-6	IMPLEMENTATION
// Make the class name look nice, by splitting on _ and capitalize each segment, then joining // the, together without anything separating them, and last put on "Service" at the end.	WITHOUT_CLASSIFICATION	0.999997184767186	WITHOUT_CLASSIFICATION	2.8152328140348406E-6	IMPLEMENTATION
// It's _really_ expensive to check that the class actually exists in the Jar, so // we don't do that now.	WITHOUT_CLASSIFICATION	0.9999962368993723	WITHOUT_CLASSIFICATION	3.763100627757657E-6	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999542560277328	WITHOUT_CLASSIFICATION	4.574397226715674E-5	IMPLEMENTATION
// extension extensions	WITHOUT_CLASSIFICATION	0.999963621991548	WITHOUT_CLASSIFICATION	3.637800845198124E-5	IMPLEMENTATION
// unknown extension, fall back to search with extensions	WITHOUT_CLASSIFICATION	0.9999764928284339	WITHOUT_CLASSIFICATION	2.3507171566078287E-5	IMPLEMENTATION
// try all extensions	WITHOUT_CLASSIFICATION	0.9999612077168836	WITHOUT_CLASSIFICATION	3.8792283116513276E-5	IMPLEMENTATION
// if a source extension is specified, try all source extensions	WITHOUT_CLASSIFICATION	0.9999885141771924	WITHOUT_CLASSIFICATION	1.1485822807672686E-5	IMPLEMENTATION
// unknown extension, fall back to exact search	WITHOUT_CLASSIFICATION	0.9999686189934336	WITHOUT_CLASSIFICATION	3.138100656647964E-5	IMPLEMENTATION
// try only literal search	WITHOUT_CLASSIFICATION	0.9999582867460844	WITHOUT_CLASSIFICATION	4.171325391561667E-5	IMPLEMENTATION
// attempt to load the found library	WITHOUT_CLASSIFICATION	0.9999798642674225	WITHOUT_CLASSIFICATION	2.0135732577507757E-5	IMPLEMENTATION
// otherwise load the library we've found	WITHOUT_CLASSIFICATION	0.9999681473283716	WITHOUT_CLASSIFICATION	3.185267162847129E-5	IMPLEMENTATION
// allow MainExitException to propagate out for exec and friends	WITHOUT_CLASSIFICATION	0.9999715026031303	WITHOUT_CLASSIFICATION	2.8497396869748573E-5	IMPLEMENTATION
// Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".	WITHOUT_CLASSIFICATION	0.9999746177738691	WITHOUT_CLASSIFICATION	2.5382226130839594E-5	IMPLEMENTATION
// check current directory; if file exists, retrieve URL and return resource	WITHOUT_CLASSIFICATION	0.9999979043695258	WITHOUT_CLASSIFICATION	2.0956304741499753E-6	IMPLEMENTATION
// if a jar or file URL, return load service resource directly without further searching	WITHOUT_CLASSIFICATION	0.9999922031055419	WITHOUT_CLASSIFICATION	7.796894458088391E-6	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999614000948536	WITHOUT_CLASSIFICATION	3.859990514643303E-5	IMPLEMENTATION
// if it's a ./ baseName, use CWD logic	WITHOUT_CLASSIFICATION	0.9999430816625242	WITHOUT_CLASSIFICATION	5.691833747572204E-5	IMPLEMENTATION
// if given path is absolute, just try it as-is (with extensions) and no load path	WITHOUT_CLASSIFICATION	0.9999720964431338	WITHOUT_CLASSIFICATION	2.7903556866230073E-5	IMPLEMENTATION
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9999855336248299	WITHOUT_CLASSIFICATION	1.4466375169993278E-5	IMPLEMENTATION
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9999855336248299	WITHOUT_CLASSIFICATION	1.4466375169993278E-5	IMPLEMENTATION
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999614299030788	WITHOUT_CLASSIFICATION	3.8570096921192194E-5	IMPLEMENTATION
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999614299030788	WITHOUT_CLASSIFICATION	3.8570096921192194E-5	IMPLEMENTATION
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999905956786677	WITHOUT_CLASSIFICATION	9.404321332352696E-6	IMPLEMENTATION
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999905956786677	WITHOUT_CLASSIFICATION	9.404321332352696E-6	IMPLEMENTATION
//                    actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));	WITHOUT_CLASSIFICATION	0.9999733200818672	WITHOUT_CLASSIFICATION	2.66799181327356E-5	IMPLEMENTATION
// handle security-sensitive case	WITHOUT_CLASSIFICATION	0.9999203667961897	WITHOUT_CLASSIFICATION	7.96332038102872E-5	IMPLEMENTATION
// if entry is an empty string, skip it	WITHOUT_CLASSIFICATION	0.9999790641320904	WITHOUT_CLASSIFICATION	2.0935867909668422E-5	IMPLEMENTATION
// if entry starts with a slash, skip it since classloader resources never start with a /	WITHOUT_CLASSIFICATION	0.9999881608605147	WITHOUT_CLASSIFICATION	1.1839139485352735E-5	IMPLEMENTATION
// otherwise, try to load from classpath (Note: Jar resources always uses '/')	WITHOUT_CLASSIFICATION	0.9999908644217536	WITHOUT_CLASSIFICATION	9.135578246443576E-6	IMPLEMENTATION
// Make sure this is not a directory or unavailable in some way	WITHOUT_CLASSIFICATION	0.9999931694788906	WITHOUT_CLASSIFICATION	6.830521109407437E-6	IMPLEMENTATION
// signed short, native	WITHOUT_CLASSIFICATION	0.9999022642175206	WITHOUT_CLASSIFICATION	9.773578247941987E-5	IMPLEMENTATION
// If we fail to find as a normal Ruby script, we try to find as an extension, // checking for a builtin first.	WITHOUT_CLASSIFICATION	0.9999904576444351	WITHOUT_CLASSIFICATION	9.542355564948996E-6	IMPLEMENTATION
// write `I' instance var signet if class is NOT a direct subclass of Object	WITHOUT_CLASSIFICATION	0.9999871862227306	WITHOUT_CLASSIFICATION	1.2813777269480386E-5	IMPLEMENTATION
// if name starts with a / we're done (classloader resources won't load with an initial /)	WITHOUT_CLASSIFICATION	0.9999892150888265	WITHOUT_CLASSIFICATION	1.0784911173451157E-5	IMPLEMENTATION
// Look in classpath next (we do not use File as a test since UNC names will match) // Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")	WITHOUT_CLASSIFICATION	0.9999961698554365	WITHOUT_CLASSIFICATION	3.830144563414072E-6	IMPLEMENTATION
/* Directories and unavailable resources are not able to open a stream. */	WITHOUT_CLASSIFICATION	0.9999747254259234	WITHOUT_CLASSIFICATION	2.5274574076656067E-5	IMPLEMENTATION
// Try to load from classpath without prefix. "A/b.rb" will not load as  // "./A/b.rb" in a jar file.	WITHOUT_CLASSIFICATION	0.9999788420098245	WITHOUT_CLASSIFICATION	2.1157990175466703E-5	IMPLEMENTATION
// object has instance vars and isn't a class, get a snapshot to be marshalled // and output the ivar header here	WITHOUT_CLASSIFICATION	0.9999937622211819	WITHOUT_CLASSIFICATION	6.2377788182032615E-6	IMPLEMENTATION
// flush afer whole dump is complete	WITHOUT_CLASSIFICATION	0.9998704251193453	WITHOUT_CLASSIFICATION	1.2957488065459688E-4	IMPLEMENTATION
//            write('S');	WITHOUT_CLASSIFICATION	0.999968487640084	WITHOUT_CLASSIFICATION	3.151235991602769E-5	IMPLEMENTATION
// switch on the object's *native type*. This allows use-defined // classes that have extended core native types to piggyback on their // marshalling logic.	WITHOUT_CLASSIFICATION	0.9999859679458305	WITHOUT_CLASSIFICATION	1.403205416948433E-5	IMPLEMENTATION
// object is a custom class that extended one of the native types other than Object	WITHOUT_CLASSIFICATION	0.9999900767831342	WITHOUT_CLASSIFICATION	9.923216865697563E-6	IMPLEMENTATION
// We do not want to capture cached methods	WITHOUT_CLASSIFICATION	0.9999689119139676	WITHOUT_CLASSIFICATION	3.108808603225314E-5	IMPLEMENTATION
// w_symbol	WITHOUT_CLASSIFICATION	0.9999056491779672	WITHOUT_CLASSIFICATION	9.435082203270225E-5	IMPLEMENTATION
// w_unique	WITHOUT_CLASSIFICATION	0.9999051349352662	WITHOUT_CLASSIFICATION	9.48650647337112E-5	IMPLEMENTATION
// call the proc, but not for symbols	WITHOUT_CLASSIFICATION	0.9999549449268511	WITHOUT_CLASSIFICATION	4.505507314901439E-5	IMPLEMENTATION
// Major // Minor	WITHOUT_CLASSIFICATION	0.9999078187705869	WITHOUT_CLASSIFICATION	9.218122941314686E-5	IMPLEMENTATION
// any ivars, since we don't have __attached__ ivar now	WITHOUT_CLASSIFICATION	0.9999668697163705	WITHOUT_CLASSIFICATION	3.313028362956044E-5	IMPLEMENTATION
// "hashdef" object, a hash with a default	WITHOUT_CLASSIFICATION	0.9999847332550009	WITHOUT_CLASSIFICATION	1.5266744999114265E-5	IMPLEMENTATION
// All "C" marshalled objects descend from core classes, which are all RubyObject	WITHOUT_CLASSIFICATION	0.9999838115450699	WITHOUT_CLASSIFICATION	1.618845493019754E-5	IMPLEMENTATION
// sic	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999776926878895	WITHOUT_CLASSIFICATION	2.230731211041521E-5	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999776926878895	WITHOUT_CLASSIFICATION	2.230731211041521E-5	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999776926878895	WITHOUT_CLASSIFICATION	2.230731211041521E-5	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999859708458065	WITHOUT_CLASSIFICATION	1.402915419359021E-5	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999859708458065	WITHOUT_CLASSIFICATION	1.402915419359021E-5	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999499973436797	WITHOUT_CLASSIFICATION	5.000265632038272E-5	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999499973436797	WITHOUT_CLASSIFICATION	5.000265632038272E-5	IMPLEMENTATION
/*     * If we are setting post arguments we can assume there are no pre or others     */	WITHOUT_CLASSIFICATION	0.999998686326214	WITHOUT_CLASSIFICATION	1.313673785971524E-6	IMPLEMENTATION
// XXX: 0xffff0000 on BE?	WITHOUT_CLASSIFICATION	0.9998631488203745	WITHOUT_CLASSIFICATION	1.368511796255503E-4	IMPLEMENTATION
// unsigned short, native	WITHOUT_CLASSIFICATION	0.9999067812646638	WITHOUT_CLASSIFICATION	9.321873533621928E-5	IMPLEMENTATION
// int, native // long, native	WITHOUT_CLASSIFICATION	0.999921896580117	WITHOUT_CLASSIFICATION	7.810341988309011E-5	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999776926878895	WITHOUT_CLASSIFICATION	2.230731211041521E-5	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999776926878895	WITHOUT_CLASSIFICATION	2.230731211041521E-5	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999776926878895	WITHOUT_CLASSIFICATION	2.230731211041521E-5	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999859708458065	WITHOUT_CLASSIFICATION	1.402915419359021E-5	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999859708458065	WITHOUT_CLASSIFICATION	1.402915419359021E-5	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999859708458065	WITHOUT_CLASSIFICATION	1.402915419359021E-5	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999499973436797	WITHOUT_CLASSIFICATION	5.000265632038272E-5	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999499973436797	WITHOUT_CLASSIFICATION	5.000265632038272E-5	IMPLEMENTATION
// Look for slash, starting from 'start' position, until 'end'.	WITHOUT_CLASSIFICATION	0.9999809027579333	WITHOUT_CLASSIFICATION	1.909724206677016E-5	IMPLEMENTATION
// Our values holder (name of variables are kept in staticScope)	WITHOUT_CLASSIFICATION	0.999979991008984	WITHOUT_CLASSIFICATION	2.000899101602006E-5	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999909900156995	WITHOUT_CLASSIFICATION	9.009984300430258E-6	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999909900156995	WITHOUT_CLASSIFICATION	9.009984300430258E-6	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999909900156995	WITHOUT_CLASSIFICATION	9.009984300430258E-6	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999909900156995	WITHOUT_CLASSIFICATION	9.009984300430258E-6	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999909900156995	WITHOUT_CLASSIFICATION	9.009984300430258E-6	IMPLEMENTATION
// SunSignalFacade	WITHOUT_CLASSIFICATION	0.9999073553794406	WITHOUT_CLASSIFICATION	9.264462055936009E-5	IMPLEMENTATION
// All braces pushed..	WITHOUT_CLASSIFICATION	0.9999241212468293	WITHOUT_CLASSIFICATION	7.587875317072253E-5	IMPLEMENTATION
/* failed : try next recursion */	WITHOUT_CLASSIFICATION	0.9999437759014888	WITHOUT_CLASSIFICATION	5.622409851116791E-5	IMPLEMENTATION
// leftToken made us start as nest 1	WITHOUT_CLASSIFICATION	0.9999585167480187	WITHOUT_CLASSIFICATION	4.1483251981348557E-5	IMPLEMENTATION
// are we at '**/'	WITHOUT_CLASSIFICATION	0.9999146095656017	WITHOUT_CLASSIFICATION	8.539043439822017E-5	IMPLEMENTATION
// No or mismatched braces..Move along..nothing to see here	WITHOUT_CLASSIFICATION	0.9999754691353796	WITHOUT_CLASSIFICATION	2.4530864620376733E-5	IMPLEMENTATION
// not enough bytes	WITHOUT_CLASSIFICATION	0.9995707909116953	WITHOUT_CLASSIFICATION	4.2920908830472877E-4	IMPLEMENTATION
// Get index of last read byte	WITHOUT_CLASSIFICATION	0.999946229057906	WITHOUT_CLASSIFICATION	5.3770942094132634E-5	IMPLEMENTATION
// skip inner braces	WITHOUT_CLASSIFICATION	0.9999493073838461	WITHOUT_CLASSIFICATION	5.0692616153732814E-5	IMPLEMENTATION
/*     * Process {}'s (example: Dir.glob("{jruby,jython}/README*")      */	WITHOUT_CLASSIFICATION	0.9999881139530173	WITHOUT_CLASSIFICATION	1.1886046982577462E-5	IMPLEMENTATION
/* complete, according to Posix.2 */	WITHOUT_CLASSIFICATION	0.9999187097842108	WITHOUT_CLASSIFICATION	8.129021578917417E-5	IMPLEMENTATION
/* Only accept an open brace if there is a close */	WITHOUT_CLASSIFICATION	0.9999792693793553	WITHOUT_CLASSIFICATION	2.0730620644728055E-5	IMPLEMENTATION
/* brace to match it.  Bracket expressions must be */	WITHOUT_CLASSIFICATION	0.9999500221292676	WITHOUT_CLASSIFICATION	4.997787073231773E-5	IMPLEMENTATION
// index of left-most brace // index of right-most brace	WITHOUT_CLASSIFICATION	0.9999385978653775	WITHOUT_CLASSIFICATION	6.14021346223779E-5	IMPLEMENTATION
// Length check is a hack.  We should not be reeiving "" as a filename ever. 	WITHOUT_CLASSIFICATION	0.9999663664054009	WITHOUT_CLASSIFICATION	3.3633594599124794E-5	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999098276578966	WITHOUT_CLASSIFICATION	9.017234210341479E-5	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999098276578966	WITHOUT_CLASSIFICATION	9.017234210341479E-5	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999098276578966	WITHOUT_CLASSIFICATION	9.017234210341479E-5	IMPLEMENTATION
// Pickaxe says @ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9999806305443343	WITHOUT_CLASSIFICATION	1.9369455665705072E-5	IMPLEMENTATION
// Pickaxe says @@ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9999806305443343	WITHOUT_CLASSIFICATION	1.9369455665705072E-5	IMPLEMENTATION
// SimpleSampler	WITHOUT_CLASSIFICATION	0.9999184139628151	WITHOUT_CLASSIFICATION	8.158603718487932E-5	IMPLEMENTATION
/*     * convert into longs, returning unsigned 64-bit values as signed longs     * ( num2long raises a RangeError on values > Long.MAX_VALUE )     */	WITHOUT_CLASSIFICATION	0.9999944168818403	WITHOUT_CLASSIFICATION	5.583118159741299E-6	IMPLEMENTATION
// b64_xtable for decoding Base 64	WITHOUT_CLASSIFICATION	0.9999446118604864	WITHOUT_CLASSIFICATION	5.538813951358099E-5	IMPLEMENTATION
// single precision, little-endian	WITHOUT_CLASSIFICATION	0.9999387483843696	WITHOUT_CLASSIFICATION	6.125161563037278E-5	IMPLEMENTATION
// single precision, big-endian	WITHOUT_CLASSIFICATION	0.9999385710904749	WITHOUT_CLASSIFICATION	6.142890952507962E-5	IMPLEMENTATION
// single precision, native	WITHOUT_CLASSIFICATION	0.9999135053653284	WITHOUT_CLASSIFICATION	8.649463467158714E-5	IMPLEMENTATION
// single precision, native // single precision, native	WITHOUT_CLASSIFICATION	0.9999019426918032	WITHOUT_CLASSIFICATION	9.805730819684355E-5	IMPLEMENTATION
// double precision, little-endian	WITHOUT_CLASSIFICATION	0.9999783755841458	WITHOUT_CLASSIFICATION	2.162441585419913E-5	IMPLEMENTATION
// double precision, big-endian	WITHOUT_CLASSIFICATION	0.9999783129894004	WITHOUT_CLASSIFICATION	2.1687010599545897E-5	IMPLEMENTATION
// double precision, native	WITHOUT_CLASSIFICATION	0.99996946323002	WITHOUT_CLASSIFICATION	3.053676997999504E-5	IMPLEMENTATION
// signed short, little-endian	WITHOUT_CLASSIFICATION	0.9999244984111674	WITHOUT_CLASSIFICATION	7.550158883257448E-5	IMPLEMENTATION
// signed char	WITHOUT_CLASSIFICATION	0.9999097517090803	WITHOUT_CLASSIFICATION	9.024829091967916E-5	IMPLEMENTATION
// unsigned char	WITHOUT_CLASSIFICATION	0.9999139227371917	WITHOUT_CLASSIFICATION	8.60772628082777E-5	IMPLEMENTATION
// long, little-endian	WITHOUT_CLASSIFICATION	0.999951686838924	WITHOUT_CLASSIFICATION	4.8313161076006235E-5	IMPLEMENTATION
// long, big-endian	WITHOUT_CLASSIFICATION	0.9999455365699172	WITHOUT_CLASSIFICATION	5.446343008267586E-5	IMPLEMENTATION
// unsigned int, native	WITHOUT_CLASSIFICATION	0.999903244277362	WITHOUT_CLASSIFICATION	9.675572263798137E-5	IMPLEMENTATION
// int, native	WITHOUT_CLASSIFICATION	0.9999006874880654	WITHOUT_CLASSIFICATION	9.931251193461727E-5	IMPLEMENTATION
// 64-bit number, native (as fixnum)	WITHOUT_CLASSIFICATION	0.9998927450060495	WITHOUT_CLASSIFICATION	1.0725499395053265E-4	IMPLEMENTATION
// How many occurrences of 'type' we want	WITHOUT_CLASSIFICATION	0.9999295268490269	WITHOUT_CLASSIFICATION	7.047315097305754E-5	IMPLEMENTATION
// See if we have a converter for the job...	WITHOUT_CLASSIFICATION	0.9999829867386733	WITHOUT_CLASSIFICATION	1.7013261326729754E-5	IMPLEMENTATION
// Otherwise the unpack should be here...	WITHOUT_CLASSIFICATION	0.9999380358111686	WITHOUT_CLASSIFICATION	6.196418883141782E-5	IMPLEMENTATION
// Possible Checksum Byte	WITHOUT_CLASSIFICATION	0.9999262373594715	WITHOUT_CLASSIFICATION	7.376264052852115E-5	IMPLEMENTATION
// obtain a	WITHOUT_CLASSIFICATION	0.999907549672105	WITHOUT_CLASSIFICATION	9.245032789485973E-5	IMPLEMENTATION
// obtain b	WITHOUT_CLASSIFICATION	0.9999074910253797	WITHOUT_CLASSIFICATION	9.250897462031927E-5	IMPLEMENTATION
// obtain c	WITHOUT_CLASSIFICATION	0.9999075828997819	WITHOUT_CLASSIFICATION	9.241710021807163E-5	IMPLEMENTATION
// obtain d	WITHOUT_CLASSIFICATION	0.9999073706973479	WITHOUT_CLASSIFICATION	9.262930265207873E-5	IMPLEMENTATION
/*encode.limit() - */	WITHOUT_CLASSIFICATION	0.9999166770486957	WITHOUT_CLASSIFICATION	8.332295130437331E-5	IMPLEMENTATION
/* 1 */	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
/* 2 */	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
/* 3 */	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
/* 4 */	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
/* 5 */	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
/* 6 */	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
/* 7 */	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
// Skip all whitespace in pack format string	WITHOUT_CLASSIFICATION	0.9999704586786504	WITHOUT_CLASSIFICATION	2.9541321349620576E-5	IMPLEMENTATION
// Skip embedded comments in pack format string	WITHOUT_CLASSIFICATION	0.9999710281599066	WITHOUT_CLASSIFICATION	2.8971840093344463E-5	IMPLEMENTATION
// In case when the number of occurences is // explicitly specified, we have to read up // the remaining garbage after the '\0' to // satisfy the requested pattern.	WITHOUT_CLASSIFICATION	0.9999990423081911	WITHOUT_CLASSIFICATION	9.576918088791589E-7	IMPLEMENTATION
//normal exit, this should be faster than a test at each iterations for string with more than //about 40 char	WITHOUT_CLASSIFICATION	0.9999786552923916	WITHOUT_CLASSIFICATION	2.1344707608396605E-5	IMPLEMENTATION
// We encountered '\0' when // were reading the buffer above, // increment the number of read bytes.	WITHOUT_CLASSIFICATION	0.9999923788548081	WITHOUT_CLASSIFICATION	7.621145191873265E-6	IMPLEMENTATION
// MRI behavior: Contrary to what seems to be logical, // when '*' is given, MRI calculates the distance // to the end, in order to go backwards.	WITHOUT_CLASSIFICATION	0.9999949309678651	WITHOUT_CLASSIFICATION	5.069032134865273E-6	IMPLEMENTATION
// Determine how many of type are needed (default: 1)	WITHOUT_CLASSIFICATION	0.9999754623938605	WITHOUT_CLASSIFICATION	2.4537606139519503E-5	IMPLEMENTATION
// 'Z' adds extra null pad (versus 'a')	WITHOUT_CLASSIFICATION	0.9999384227555518	WITHOUT_CLASSIFICATION	6.157724444817914E-5	IMPLEMENTATION
//if the low bit is set //set the high bit of the result	WITHOUT_CLASSIFICATION	0.999987716166743	WITHOUT_CLASSIFICATION	1.2283833257125912E-5	IMPLEMENTATION
//if the index is not a multiple of 8, we are not on a byte boundary //shift the byte	WITHOUT_CLASSIFICATION	0.999952568552777	WITHOUT_CLASSIFICATION	4.74314472229834E-5	IMPLEMENTATION
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9999532879644796	WITHOUT_CLASSIFICATION	4.671203552043397E-5	IMPLEMENTATION
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9999532879644796	WITHOUT_CLASSIFICATION	4.671203552043397E-5	IMPLEMENTATION
//do some padding, I don't understand the padding strategy	WITHOUT_CLASSIFICATION	0.9999212655382117	WITHOUT_CLASSIFICATION	7.873446178821621E-5	IMPLEMENTATION
// we filled up current byte; append it and create next one	WITHOUT_CLASSIFICATION	0.9999811589440297	WITHOUT_CLASSIFICATION	1.8841055970283073E-5	IMPLEMENTATION
//if the index is not a multiple of 8, we are not on a byte boundary	WITHOUT_CLASSIFICATION	0.9999357721277915	WITHOUT_CLASSIFICATION	6.422787220846011E-5	IMPLEMENTATION
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9999713541206648	WITHOUT_CLASSIFICATION	2.8645879335178786E-5	IMPLEMENTATION
// we don't deal with negatives.	WITHOUT_CLASSIFICATION	0.9999766487109483	WITHOUT_CLASSIFICATION	2.3351289051740145E-5	IMPLEMENTATION
// populate commandline with NG-provided stuff	WITHOUT_CLASSIFICATION	0.9999734337491288	WITHOUT_CLASSIFICATION	2.656625087110801E-5	IMPLEMENTATION
// are we recursing?	WITHOUT_CLASSIFICATION	0.9999218796222538	WITHOUT_CLASSIFICATION	7.812037774623942E-5	IMPLEMENTATION
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999977331584652	WITHOUT_CLASSIFICATION	2.266841534863093E-6	IMPLEMENTATION
// default PidGetter	WITHOUT_CLASSIFICATION	0.9999831565421794	WITHOUT_CLASSIFICATION	1.684345782055576E-5	IMPLEMENTATION
// ignore and try windows version	WITHOUT_CLASSIFICATION	0.9999971842388437	WITHOUT_CLASSIFICATION	2.8157611562523806E-6	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999960123013395	WITHOUT_CLASSIFICATION	3.9876986605504755E-6	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999960123013395	WITHOUT_CLASSIFICATION	3.9876986605504755E-6	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999960123013395	WITHOUT_CLASSIFICATION	3.9876986605504755E-6	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999960123013395	WITHOUT_CLASSIFICATION	3.9876986605504755E-6	IMPLEMENTATION
// try both	WITHOUT_CLASSIFICATION	0.9999333504088848	WITHOUT_CLASSIFICATION	6.664959111532889E-5	IMPLEMENTATION
// just unix	WITHOUT_CLASSIFICATION	0.999925565282289	WITHOUT_CLASSIFICATION	7.44347177109475E-5	IMPLEMENTATION
// just windows	WITHOUT_CLASSIFICATION	0.9999354434148504	WITHOUT_CLASSIFICATION	6.455658514968326E-5	IMPLEMENTATION
// neither	WITHOUT_CLASSIFICATION	0.9972008154917169	WITHOUT_CLASSIFICATION	0.0027991845082831045	IMPLEMENTATION
// CON: popen is a case where I think we should just always shell out.	WITHOUT_CLASSIFICATION	0.9999529480390862	WITHOUT_CLASSIFICATION	4.705196091384961E-5	IMPLEMENTATION
// single string command, pass to sh to expand wildcards	WITHOUT_CLASSIFICATION	0.9999731951396359	WITHOUT_CLASSIFICATION	2.6804860364076064E-5	IMPLEMENTATION
// direct invocation of the command	WITHOUT_CLASSIFICATION	0.9999904758880946	WITHOUT_CLASSIFICATION	9.524111905419788E-6	IMPLEMENTATION
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999692041896419	WITHOUT_CLASSIFICATION	3.079581035823111E-5	IMPLEMENTATION
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999692041896419	WITHOUT_CLASSIFICATION	3.079581035823111E-5	IMPLEMENTATION
// close process output // See JRUBY-3405; hooking up to parent process stdin caused // problems for IRB etc using stdin.	WITHOUT_CLASSIFICATION	0.9999880878467848	WITHOUT_CLASSIFICATION	1.191215321515633E-5	IMPLEMENTATION
// ignore, we're on the way out	WITHOUT_CLASSIFICATION	0.9999965369072897	WITHOUT_CLASSIFICATION	3.4630927103207387E-6	IMPLEMENTATION
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999858697101219	WITHOUT_CLASSIFICATION	1.4130289877997032E-5	IMPLEMENTATION
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999762830151986	WITHOUT_CLASSIFICATION	2.371698480134303E-5	IMPLEMENTATION
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999762830151986	WITHOUT_CLASSIFICATION	2.371698480134303E-5	IMPLEMENTATION
// popen caller wants to be able to write, provide subprocess out directly	WITHOUT_CLASSIFICATION	0.9999799914830634	WITHOUT_CLASSIFICATION	2.0008516936623118E-5	IMPLEMENTATION
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999666809279156	WITHOUT_CLASSIFICATION	3.331907208435238E-5	IMPLEMENTATION
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999666809279156	WITHOUT_CLASSIFICATION	3.331907208435238E-5	IMPLEMENTATION
// execute command with sh -c // this does shell expansion of wildcards	WITHOUT_CLASSIFICATION	0.999991412443791	WITHOUT_CLASSIFICATION	8.587556209001165E-6	IMPLEMENTATION
// We need to close the out, since some // processes would just wait for the stream // to be closed before they process its content, // and produce the output. E.g.: "cat".	WITHOUT_CLASSIFICATION	0.999998969215085	WITHOUT_CLASSIFICATION	1.0307849149103267E-6	IMPLEMENTATION
// we only close out if it's the slave stream, to avoid // closing a directly-mapped stream from parent process	WITHOUT_CLASSIFICATION	0.9999956233492155	WITHOUT_CLASSIFICATION	4.3766507844413365E-6	IMPLEMENTATION
// The assumption here is that the 'in' stream provides // proper available() support. If available() always // returns 0, we'll hang!	WITHOUT_CLASSIFICATION	0.9999945740418026	WITHOUT_CLASSIFICATION	5.4259581974362585E-6	IMPLEMENTATION
// Force t3 to quit, just in case if it's stuck. // Note: On some platforms, even interrupt might not // have an effect if the thread is IO blocked.	WITHOUT_CLASSIFICATION	0.9999933535152593	WITHOUT_CLASSIFICATION	6.646484740681475E-6	IMPLEMENTATION
// Check for special shell characters [<>|] at the beginning // and end of each command word and don't run in process if we find them.	WITHOUT_CLASSIFICATION	0.9999991816364344	WITHOUT_CLASSIFICATION	8.183635654814806E-7	IMPLEMENTATION
// Note: this method produces meaningful results // only for RubyIO objects. For everything else returns 0.	WITHOUT_CLASSIFICATION	0.9999756850216556	WITHOUT_CLASSIFICATION	2.4314978344410257E-5	IMPLEMENTATION
//sequential	WITHOUT_CLASSIFICATION	0.999909425529631	WITHOUT_CLASSIFICATION	9.057447036896923E-5	IMPLEMENTATION
// reverse the entire area of the array selected if it's reversed.	WITHOUT_CLASSIFICATION	0.9999921102660821	WITHOUT_CLASSIFICATION	7.88973391783343E-6	IMPLEMENTATION
// do median of 7 if the array is over 200 elements.	WITHOUT_CLASSIFICATION	0.9999804563845565	WITHOUT_CLASSIFICATION	1.9543615443538877E-5	IMPLEMENTATION
// if it's less than 200 do median of 3	WITHOUT_CLASSIFICATION	0.9999513173528457	WITHOUT_CLASSIFICATION	4.86826471543284E-5	IMPLEMENTATION
// SignalFacade	WITHOUT_CLASSIFICATION	0.9999091500943521	WITHOUT_CLASSIFICATION	9.084990564791691E-5	IMPLEMENTATION
// this is the order in which MRI does these two tests	WITHOUT_CLASSIFICATION	0.9999811120902172	WITHOUT_CLASSIFICATION	1.8887909782739383E-5	IMPLEMENTATION
// this is the order in which MRI does these tests	WITHOUT_CLASSIFICATION	0.9999819848058061	WITHOUT_CLASSIFICATION	1.801519419384288E-5	IMPLEMENTATION
// basically just forcing a TypeError here to match MRI	WITHOUT_CLASSIFICATION	0.9999492588694526	WITHOUT_CLASSIFICATION	5.074113054733932E-5	IMPLEMENTATION
// not saving DFS instance, as it will only be used once (at most) per call	WITHOUT_CLASSIFICATION	0.9998301252157485	WITHOUT_CLASSIFICATION	1.6987478425138002E-4	IMPLEMENTATION
// Args	WITHOUT_CLASSIFICATION	0.9966162549677767	WITHOUT_CLASSIFICATION	0.00338374503222321	IMPLEMENTATION
// static methods only	WITHOUT_CLASSIFICATION	0.9999641379513464	WITHOUT_CLASSIFICATION	3.5862048653482755E-5	IMPLEMENTATION
//System.err.println(" calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999880833907345	WITHOUT_CLASSIFICATION	1.1916609265447705E-5	IMPLEMENTATION
// MRI 1.8.6 behavior: null byte after '%' // leads to "%" string. Null byte in // other places, like "%5\0", leads to error.	WITHOUT_CLASSIFICATION	0.9999624870997825	WITHOUT_CLASSIFICATION	3.75129002173887E-5	IMPLEMENTATION
// last index (+1) accessed by next() // last index (+1) accessed by get()	WITHOUT_CLASSIFICATION	0.9999395336872005	WITHOUT_CLASSIFICATION	6.0466312799604185E-5	IMPLEMENTATION
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly.	WITHOUT_CLASSIFICATION	0.999979308019535	WITHOUT_CLASSIFICATION	2.0691980465012905E-5	IMPLEMENTATION
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly. Version for 1.9.	WITHOUT_CLASSIFICATION	0.9999840632863317	WITHOUT_CLASSIFICATION	1.59367136682562E-5	IMPLEMENTATION
// MRI doesn't flag it as an error if width is given multiple // times as a number (but it does for *)	WITHOUT_CLASSIFICATION	0.9999508468345041	WITHOUT_CLASSIFICATION	4.915316549592795E-5	IMPLEMENTATION
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999881100396562	WITHOUT_CLASSIFICATION	1.1889960343842043E-5	IMPLEMENTATION
// MRI 1.8.5-p12 doesn't support 1-char strings, but // YARV 0.4.1 does. I don't think it hurts to include // this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])	WITHOUT_CLASSIFICATION	0.9999407072331339	WITHOUT_CLASSIFICATION	5.9292766866042335E-5	IMPLEMENTATION
// 'd' and 'i' are the same	WITHOUT_CLASSIFICATION	0.9999497683781228	WITHOUT_CLASSIFICATION	5.023162187709399E-5	IMPLEMENTATION
// 'u' with space or plus flags is same as 'd'	WITHOUT_CLASSIFICATION	0.9999410581073008	WITHOUT_CLASSIFICATION	5.894189269920974E-5	IMPLEMENTATION
// We depart here from strict adherence to MRI code, as MRI // uses C-sprintf, in part, to format numeric output, while // we'll use Java's numeric formatting code (and our own).	WITHOUT_CLASSIFICATION	0.999983948842692	WITHOUT_CLASSIFICATION	1.6051157307963445E-5	IMPLEMENTATION
// skip '-' in bytes, will add where appropriate	WITHOUT_CLASSIFICATION	0.9999428603953667	WITHOUT_CLASSIFICATION	5.713960463317525E-5	IMPLEMENTATION
// ..	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
// the 1 is for the stripped sign char	WITHOUT_CLASSIFICATION	0.9999790692871734	WITHOUT_CLASSIFICATION	2.0930712826547742E-5	IMPLEMENTATION
// FIXME: what is correct 'recv' argument? // (this does produce the desired behavior)	WITHOUT_CLASSIFICATION	0.9998848625915764	WITHOUT_CLASSIFICATION	1.1513740842367471E-4	IMPLEMENTATION
// gotta have at least a zero...	WITHOUT_CLASSIFICATION	0.9999496264252112	WITHOUT_CLASSIFICATION	5.03735747888394E-5	IMPLEMENTATION
// OK, we now have the significand in digits[0...nDigits] // and the exponent in exponent.  We're ready to format.	WITHOUT_CLASSIFICATION	0.9999801356456515	WITHOUT_CLASSIFICATION	1.9864354348496073E-5	IMPLEMENTATION
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9999156288393535	WITHOUT_CLASSIFICATION	8.437116064658814E-5	IMPLEMENTATION
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999075794707489	WITHOUT_CLASSIFICATION	9.242052925105925E-5	IMPLEMENTATION
//System.err.println(" stringToLong/reading c=" + data[s]);	WITHOUT_CLASSIFICATION	0.9999859313639369	WITHOUT_CLASSIFICATION	1.4068636063025907E-5	IMPLEMENTATION
//System.err.println(" stringToLong/converted c=" + c);	WITHOUT_CLASSIFICATION	0.9999865195305041	WITHOUT_CLASSIFICATION	1.3480469495981338E-5	IMPLEMENTATION
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9999156288393535	WITHOUT_CLASSIFICATION	8.437116064658814E-5	IMPLEMENTATION
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999075794707489	WITHOUT_CLASSIFICATION	9.242052925105925E-5	IMPLEMENTATION
// precision for G/g includes integer digits	WITHOUT_CLASSIFICATION	0.9999512169759585	WITHOUT_CLASSIFICATION	4.8783024041585675E-5	IMPLEMENTATION
// deal with length/width	WITHOUT_CLASSIFICATION	0.999944333726897	WITHOUT_CLASSIFICATION	5.566627310295962E-5	IMPLEMENTATION
// deal with length/width	WITHOUT_CLASSIFICATION	0.999944333726897	WITHOUT_CLASSIFICATION	5.566627310295962E-5	IMPLEMENTATION
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999690580312303	WITHOUT_CLASSIFICATION	3.0941968769742114E-5	IMPLEMENTATION
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999940920530987	WITHOUT_CLASSIFICATION	5.907946901163142E-6	IMPLEMENTATION
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999156743149097	WITHOUT_CLASSIFICATION	8.432568509039663E-5	IMPLEMENTATION
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999053960346399	WITHOUT_CLASSIFICATION	9.460396536004441E-5	IMPLEMENTATION
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9999485467065861	WITHOUT_CLASSIFICATION	5.145329341400008E-5	IMPLEMENTATION
// MRI behavior: In this mode // trailing zeroes are removed: // 1.500E+05 -> 1.5E+05 	WITHOUT_CLASSIFICATION	0.9999406701656895	WITHOUT_CLASSIFICATION	5.9329834310402395E-5	IMPLEMENTATION
// '.' is printed	WITHOUT_CLASSIFICATION	0.9999092466728127	WITHOUT_CLASSIFICATION	9.075332718725826E-5	IMPLEMENTATION
// all precision numebers printed	WITHOUT_CLASSIFICATION	0.9999350704712029	WITHOUT_CLASSIFICATION	6.492952879710487E-5	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9999324286757508	WITHOUT_CLASSIFICATION	6.757132424913367E-5	IMPLEMENTATION
// '.'	WITHOUT_CLASSIFICATION	0.9965935955078614	WITHOUT_CLASSIFICATION	0.0034064044921384706	IMPLEMENTATION
// decimal form, like (but not *just* like!) 'f'	WITHOUT_CLASSIFICATION	0.9999222346838451	WITHOUT_CLASSIFICATION	7.776531615490413E-5	IMPLEMENTATION
// digits array shifted, update all	WITHOUT_CLASSIFICATION	0.9999587221913694	WITHOUT_CLASSIFICATION	4.127780863054335E-5	IMPLEMENTATION
// will have a trailing '.' // g fills trailing zeroes if #	WITHOUT_CLASSIFICATION	0.9999624130803065	WITHOUT_CLASSIFICATION	3.7586919693565156E-5	IMPLEMENTATION
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999349142367739	WITHOUT_CLASSIFICATION	6.508576322607226E-5	IMPLEMENTATION
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999349142367739	WITHOUT_CLASSIFICATION	6.508576322607226E-5	IMPLEMENTATION
// always need at least a 0	WITHOUT_CLASSIFICATION	0.999931644605501	WITHOUT_CLASSIFICATION	6.835539449893679E-5	IMPLEMENTATION
// always need at least a 0	WITHOUT_CLASSIFICATION	0.999931644605501	WITHOUT_CLASSIFICATION	6.835539449893679E-5	IMPLEMENTATION
// digits arr shifted, update all	WITHOUT_CLASSIFICATION	0.9999541158156411	WITHOUT_CLASSIFICATION	4.588418435905185E-5	IMPLEMENTATION
// (1|intlen).prec	WITHOUT_CLASSIFICATION	0.9999053960346399	WITHOUT_CLASSIFICATION	9.460396536004441E-5	IMPLEMENTATION
// (1|intlen)	WITHOUT_CLASSIFICATION	0.9999053960346399	WITHOUT_CLASSIFICATION	9.460396536004441E-5	IMPLEMENTATION
// will have a trailing '.'	WITHOUT_CLASSIFICATION	0.9999588187610244	WITHOUT_CLASSIFICATION	4.118123897548527E-5	IMPLEMENTATION
// fill up the rest with zeroes	WITHOUT_CLASSIFICATION	0.9999658232555992	WITHOUT_CLASSIFICATION	3.4176744400662374E-5	IMPLEMENTATION
//System.err.println(" main/len=" + len);	WITHOUT_CLASSIFICATION	0.999982253170599	WITHOUT_CLASSIFICATION	1.7746829401096837E-5	IMPLEMENTATION
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999156743149097	WITHOUT_CLASSIFICATION	8.432568509039663E-5	IMPLEMENTATION
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999053960346399	WITHOUT_CLASSIFICATION	9.460396536004441E-5	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9999324286757508	WITHOUT_CLASSIFICATION	6.757132424913367E-5	IMPLEMENTATION
// '.'	WITHOUT_CLASSIFICATION	0.9965935955078614	WITHOUT_CLASSIFICATION	0.0034064044921384706	IMPLEMENTATION
// equivalent to MRI case '\0':	WITHOUT_CLASSIFICATION	0.999920377991944	WITHOUT_CLASSIFICATION	7.962200805607614E-5	IMPLEMENTATION
// '.' and all precision digits printed	WITHOUT_CLASSIFICATION	0.9999378041405453	WITHOUT_CLASSIFICATION	6.219585945462368E-5	IMPLEMENTATION
// \v	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
// dangling '%' char	WITHOUT_CLASSIFICATION	0.9999080787181841	WITHOUT_CLASSIFICATION	9.192128181588735E-5	IMPLEMENTATION
// main while loop (offset < length)	WITHOUT_CLASSIFICATION	0.9999533324515222	WITHOUT_CLASSIFICATION	4.666754847773437E-5	IMPLEMENTATION
// debugging code, keeping for now	WITHOUT_CLASSIFICATION	0.9999316548298635	WITHOUT_CLASSIFICATION	6.8345170136619E-5	IMPLEMENTATION
// MRI rounds up on nnn5nnn, but not nnn5 -- // except for when they do	WITHOUT_CLASSIFICATION	0.9999187076431699	WITHOUT_CLASSIFICATION	8.129235683009269E-5	IMPLEMENTATION
// "%.0f" % 0.99	WITHOUT_CLASSIFICATION	0.9999053960346399	WITHOUT_CLASSIFICATION	9.460396536004441E-5	IMPLEMENTATION
// limit the length of negatives if possible (also faster)	WITHOUT_CLASSIFICATION	0.9999693542434825	WITHOUT_CLASSIFICATION	3.064575651736042E-5	IMPLEMENTATION
// negative values	WITHOUT_CLASSIFICATION	0.9999695205821194	WITHOUT_CLASSIFICATION	3.0479417880549368E-5	IMPLEMENTATION
// calculation for negatives when %u specified // for values >= Integer.MIN_VALUE * 2, MRI uses (the equivalent of) //   long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val // for smaller values, BigInteger math is required to conform to MRI's // result.	WITHOUT_CLASSIFICATION	0.9999973232775321	WITHOUT_CLASSIFICATION	2.6767224679335527E-6	IMPLEMENTATION
// relatively cheap test for 32-bit values	WITHOUT_CLASSIFICATION	0.9999778387801326	WITHOUT_CLASSIFICATION	2.2161219867381548E-5	IMPLEMENTATION
// no such luck...	WITHOUT_CLASSIFICATION	0.9999324856222637	WITHOUT_CLASSIFICATION	6.751437773628437E-5	IMPLEMENTATION
// ok, now it gets expensive...	WITHOUT_CLASSIFICATION	0.9999232134126809	WITHOUT_CLASSIFICATION	7.678658731914241E-5	IMPLEMENTATION
// go through negated powers of 32 until we find one small enough 	WITHOUT_CLASSIFICATION	0.9999544979918317	WITHOUT_CLASSIFICATION	4.5502008168398086E-5	IMPLEMENTATION
// add to the corresponding positive power of 32 for the result. // meaningful? no. conformant? yes. I just write the code...	WITHOUT_CLASSIFICATION	0.9999978669846453	WITHOUT_CLASSIFICATION	2.1330153546310986E-6	IMPLEMENTATION
/* constant vector a */	WITHOUT_CLASSIFICATION	0.9999307078261304	WITHOUT_CLASSIFICATION	6.92921738696928E-5	IMPLEMENTATION
/* most significant w-r bits */	WITHOUT_CLASSIFICATION	0.999930805699088	WITHOUT_CLASSIFICATION	6.9194300911925E-5	IMPLEMENTATION
/* least significant r bits */	WITHOUT_CLASSIFICATION	0.9999276552837232	WITHOUT_CLASSIFICATION	7.234471627689549E-5	IMPLEMENTATION
// state[j] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999457571388423	WITHOUT_CLASSIFICATION	5.424286115771188E-5	IMPLEMENTATION
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999457571388423	WITHOUT_CLASSIFICATION	5.424286115771188E-5	IMPLEMENTATION
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999457571388423	WITHOUT_CLASSIFICATION	5.424286115771188E-5	IMPLEMENTATION
/* MSB is 1; assuring non-zero initial array */	WITHOUT_CLASSIFICATION	0.9999518289084235	WITHOUT_CLASSIFICATION	4.8171091576543905E-5	IMPLEMENTATION
/* Tempering */	WITHOUT_CLASSIFICATION	0.9999081829212184	WITHOUT_CLASSIFICATION	9.181707878153395E-5	IMPLEMENTATION
// MRI behavior: Week values are monotonous. // So, weeks that effectively belong to previous year, // will get the value of 0, not 52 or 53, as in Java.	WITHOUT_CLASSIFICATION	0.9999941859823885	WITHOUT_CLASSIFICATION	5.814017611488307E-6	IMPLEMENTATION
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999824048576319	WITHOUT_CLASSIFICATION	1.7595142368073883E-5	IMPLEMENTATION
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999824048576319	WITHOUT_CLASSIFICATION	1.7595142368073883E-5	IMPLEMENTATION
// \v	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
//System.err.println("getSign()");	WITHOUT_CLASSIFICATION	0.9999822494260769	WITHOUT_CLASSIFICATION	1.7750573922988945E-5	IMPLEMENTATION
//System.err.println(" getSign/" + sign);	WITHOUT_CLASSIFICATION	0.9999822705733978	WITHOUT_CLASSIFICATION	1.7729426602144224E-5	IMPLEMENTATION
//System.err.println("figureOutBase()/base=" + base);	WITHOUT_CLASSIFICATION	0.9999826878629376	WITHOUT_CLASSIFICATION	1.731213706231862E-5	IMPLEMENTATION
//System.err.println(" figureOutBase/base=" + base);	WITHOUT_CLASSIFICATION	0.9999824429109163	WITHOUT_CLASSIFICATION	1.7557089083664238E-5	IMPLEMENTATION
//System.err.println("calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999869765331759	WITHOUT_CLASSIFICATION	1.3023466823946173E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9968295876313907	WITHOUT_CLASSIFICATION	0.0031704123686091554	IMPLEMENTATION
//System.err.println(" stringToLong=" + val);	WITHOUT_CLASSIFICATION	0.999984973847103	WITHOUT_CLASSIFICATION	1.5026152897076173E-5	IMPLEMENTATION
// no number	WITHOUT_CLASSIFICATION	0.9999415341043077	WITHOUT_CLASSIFICATION	5.846589569237474E-5	IMPLEMENTATION
// trailing garbage	WITHOUT_CLASSIFICATION	0.9999267772797038	WITHOUT_CLASSIFICATION	7.322272029627511E-5	IMPLEMENTATION
//System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);	WITHOUT_CLASSIFICATION	0.9999865406536774	WITHOUT_CLASSIFICATION	1.3459346322493493E-5	IMPLEMENTATION
// it was not found at all!	WITHOUT_CLASSIFICATION	0.9999545710541625	WITHOUT_CLASSIFICATION	4.542894583745433E-5	IMPLEMENTATION
// can be overridden to be informed when objects are removed	WITHOUT_CLASSIFICATION	0.9999830092000004	WITHOUT_CLASSIFICATION	1.699079999960548E-5	IMPLEMENTATION
// we reached the end of a list	WITHOUT_CLASSIFICATION	0.9999325313832828	WITHOUT_CLASSIFICATION	6.746861671721796E-5	IMPLEMENTATION
// goto next bucket	WITHOUT_CLASSIFICATION	0.9999150562986935	WITHOUT_CLASSIFICATION	8.494370130650946E-5	IMPLEMENTATION
// we reached the end	WITHOUT_CLASSIFICATION	0.9999246714446526	WITHOUT_CLASSIFICATION	7.532855534741181E-5	IMPLEMENTATION
// entry is the first element of this bucket	WITHOUT_CLASSIFICATION	0.9999797827813479	WITHOUT_CLASSIFICATION	2.0217218652140596E-5	IMPLEMENTATION
// states	WITHOUT_CLASSIFICATION	0.9977362728801131	WITHOUT_CLASSIFICATION	0.0022637271198868427	IMPLEMENTATION
// remove leading whitespace (includes _ for lax) // get sign, if any	WITHOUT_CLASSIFICATION	0.999988857498747	WITHOUT_CLASSIFICATION	1.1142501253055933E-5	IMPLEMENTATION
// optimistic pass - calculate value as digits are processed // digits - lax rules // decimal digits - lax rules // exponent sign/digits - lax rules // digits - strict rules // decimal digits - strict rules // exponent sign/digits - strict rules // complete calculation if possible	WITHOUT_CLASSIFICATION	0.9999879953264129	WITHOUT_CLASSIFICATION	1.2004673587129397E-5	IMPLEMENTATION
// fields used for direct (optimistic) calculation // number of significant digits, updated as parsed // zeroes that may go to significand or exponent // offset of decimal pt from start (-1 -> no decimal) // significand, updated as parsed // exponent, updated as parsed	WITHOUT_CLASSIFICATION	0.9999980000238301	WITHOUT_CLASSIFICATION	1.9999761698298883E-6	IMPLEMENTATION
// drop through for sign	WITHOUT_CLASSIFICATION	0.9999450701389262	WITHOUT_CLASSIFICATION	5.492986107380726E-5	IMPLEMENTATION
// switch // will use this if we have to go back the slow way	WITHOUT_CLASSIFICATION	0.999974230854259	WITHOUT_CLASSIFICATION	2.5769145740990328E-5	IMPLEMENTATION
// drop through for non-strict digits	WITHOUT_CLASSIFICATION	0.9999415461446911	WITHOUT_CLASSIFICATION	5.845385530890714E-5	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999759265480441	WITHOUT_CLASSIFICATION	2.407345195582969E-5	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999979209650426	WITHOUT_CLASSIFICATION	2.079034957343498E-6	IMPLEMENTATION
// no digits, go calc (will return +/- 0.0 for lax)	WITHOUT_CLASSIFICATION	0.9999638659365724	WITHOUT_CLASSIFICATION	3.613406342750221E-5	IMPLEMENTATION
// ignore leading zeroes	WITHOUT_CLASSIFICATION	0.9999962334669263	WITHOUT_CLASSIFICATION	3.7665330736797544E-6	IMPLEMENTATION
// just save a count of zeroes for now; if no digit // ends up following them, they'll be applied to the // exponent rather than the significand (and our max // length for optimistic calc).	WITHOUT_CLASSIFICATION	0.999988890744818	WITHOUT_CLASSIFICATION	1.1109255181975478E-5	IMPLEMENTATION
// ok, got a non-zero, have to own up to our horded zeroes	WITHOUT_CLASSIFICATION	0.9999468410024325	WITHOUT_CLASSIFICATION	5.3158997567480926E-5	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999415449409887	WITHOUT_CLASSIFICATION	5.8455059011272345E-5	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999415449409887	WITHOUT_CLASSIFICATION	5.8455059011272345E-5	IMPLEMENTATION
// oh, well, it was worth a try. go let // Double/FloatingDecimal handle it 	WITHOUT_CLASSIFICATION	0.9998524354967379	WITHOUT_CLASSIFICATION	1.4756450326216335E-4	IMPLEMENTATION
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999970991016714	WITHOUT_CLASSIFICATION	2.9008983285689723E-6	IMPLEMENTATION
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999970991016714	WITHOUT_CLASSIFICATION	2.9008983285689723E-6	IMPLEMENTATION
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999707730950513	WITHOUT_CLASSIFICATION	2.92269049486469E-5	IMPLEMENTATION
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999707730950513	WITHOUT_CLASSIFICATION	2.92269049486469E-5	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.999952058530243	WITHOUT_CLASSIFICATION	4.794146975707792E-5	IMPLEMENTATION
// first non_underscore char must be digit	WITHOUT_CLASSIFICATION	0.9999714840548344	WITHOUT_CLASSIFICATION	2.8515945165627195E-5	IMPLEMENTATION
// no dec digits, end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999608911906405	WITHOUT_CLASSIFICATION	3.9108809359579674E-5	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.9999457418868564	WITHOUT_CLASSIFICATION	5.425811314359185E-5	IMPLEMENTATION
// difficult case, send to Double/FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999426625254011	WITHOUT_CLASSIFICATION	5.7337474598958986E-5	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9965901650913201	WITHOUT_CLASSIFICATION	0.0034098349086799694	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9965901650913201	WITHOUT_CLASSIFICATION	0.0034098349086799694	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999759265480441	WITHOUT_CLASSIFICATION	2.407345195582969E-5	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999759265480441	WITHOUT_CLASSIFICATION	2.407345195582969E-5	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999759265480441	WITHOUT_CLASSIFICATION	2.407345195582969E-5	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999979209650426	WITHOUT_CLASSIFICATION	2.079034957343498E-6	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999415449409887	WITHOUT_CLASSIFICATION	5.8455059011272345E-5	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999415449409887	WITHOUT_CLASSIFICATION	5.8455059011272345E-5	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999415449409887	WITHOUT_CLASSIFICATION	5.8455059011272345E-5	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.999952058530243	WITHOUT_CLASSIFICATION	4.794146975707792E-5	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.999952058530243	WITHOUT_CLASSIFICATION	4.794146975707792E-5	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.999952058530243	WITHOUT_CLASSIFICATION	4.794146975707792E-5	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.9999457418868564	WITHOUT_CLASSIFICATION	5.425811314359185E-5	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.9999457418868564	WITHOUT_CLASSIFICATION	5.425811314359185E-5	IMPLEMENTATION
// lax (str.to_f) allows underscores between e/E and sign	WITHOUT_CLASSIFICATION	0.9999379934144967	WITHOUT_CLASSIFICATION	6.200658550326049E-5	IMPLEMENTATION
// switch // for // no exponent, so drop through for calculation	WITHOUT_CLASSIFICATION	0.9999851435359745	WITHOUT_CLASSIFICATION	1.4856464025580316E-5	IMPLEMENTATION
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999760070576186	WITHOUT_CLASSIFICATION	2.3992942381433393E-5	IMPLEMENTATION
// TODO: it's not clear to me why, in FloatingDecimal, the // "slop" calculation performed above for positive exponents // isn't used for negative exponents as well. Will find out...	WITHOUT_CLASSIFICATION	0.9404647350500471	WITHOUT_CLASSIFICATION	0.05953526494995287	IMPLEMENTATION
// no digits, error	WITHOUT_CLASSIFICATION	0.999932319294213	WITHOUT_CLASSIFICATION	6.768070578694191E-5	IMPLEMENTATION
// too big for us	WITHOUT_CLASSIFICATION	0.9999224995994852	WITHOUT_CLASSIFICATION	7.750040051486846E-5	IMPLEMENTATION
// too big for us	WITHOUT_CLASSIFICATION	0.9999224995994852	WITHOUT_CLASSIFICATION	7.750040051486846E-5	IMPLEMENTATION
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999800110842934	WITHOUT_CLASSIFICATION	1.9988915706606582E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9968295876313907	WITHOUT_CLASSIFICATION	0.0031704123686091554	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9968295876313907	WITHOUT_CLASSIFICATION	0.0031704123686091554	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9968295876313907	WITHOUT_CLASSIFICATION	0.0031704123686091554	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9968295876313907	WITHOUT_CLASSIFICATION	0.0031704123686091554	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9968295876313907	WITHOUT_CLASSIFICATION	0.0031704123686091554	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999861449734022	WITHOUT_CLASSIFICATION	1.385502659780674E-5	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999861449734022	WITHOUT_CLASSIFICATION	1.385502659780674E-5	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999861449734022	WITHOUT_CLASSIFICATION	1.385502659780674E-5	IMPLEMENTATION
// first char must be digit	WITHOUT_CLASSIFICATION	0.9999703722171516	WITHOUT_CLASSIFICATION	2.9627782848382842E-5	IMPLEMENTATION
// no dec digits after '.', error for strict	WITHOUT_CLASSIFICATION	0.9999605795264228	WITHOUT_CLASSIFICATION	3.942047357717696E-5	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999979209650426	WITHOUT_CLASSIFICATION	2.079034957343498E-6	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.999952058530243	WITHOUT_CLASSIFICATION	4.794146975707792E-5	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.999952058530243	WITHOUT_CLASSIFICATION	4.794146975707792E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9968295876313907	WITHOUT_CLASSIFICATION	0.0031704123686091554	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9968295876313907	WITHOUT_CLASSIFICATION	0.0031704123686091554	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999861449734022	WITHOUT_CLASSIFICATION	1.385502659780674E-5	IMPLEMENTATION
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999800110842934	WITHOUT_CLASSIFICATION	1.9988915706606582E-5	IMPLEMENTATION
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999482900843377	WITHOUT_CLASSIFICATION	5.170991566225798E-5	IMPLEMENTATION
// switch //while	WITHOUT_CLASSIFICATION	0.9999555693617204	WITHOUT_CLASSIFICATION	4.443063827953583E-5	IMPLEMENTATION
/*     * All the positive powers of 10 that can be     * represented exactly in double/float.     * (From sun.misc.FloatingDecimal.java)     */	WITHOUT_CLASSIFICATION	0.9999905814030952	WITHOUT_CLASSIFICATION	9.418596904886511E-6	IMPLEMENTATION
// Zlib behavior: negative win_bits means no header and no checksum.	WITHOUT_CLASSIFICATION	0.9999753657641258	WITHOUT_CLASSIFICATION	2.4634235874156634E-5	IMPLEMENTATION
// rb_enc_mbclen	WITHOUT_CLASSIFICATION	0.9999053960346399	WITHOUT_CLASSIFICATION	9.460396536004441E-5	IMPLEMENTATION
// rb_enc_precise_mbclen	WITHOUT_CLASSIFICATION	0.9999162941239699	WITHOUT_CLASSIFICATION	8.370587603003943E-5	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999055665005765	WITHOUT_CLASSIFICATION	9.443349942346017E-5	IMPLEMENTATION
// arg cannot be negative	WITHOUT_CLASSIFICATION	0.9999597311361146	WITHOUT_CLASSIFICATION	4.026886388547976E-5	IMPLEMENTATION
// NoFunctionalitySignalFacade	WITHOUT_CLASSIFICATION	0.9999373799963461	WITHOUT_CLASSIFICATION	6.26200036538185E-5	IMPLEMENTATION
// Change visibility so others can see it	WITHOUT_CLASSIFICATION	0.999966354007508	WITHOUT_CLASSIFICATION	3.364599249195732E-5	IMPLEMENTATION
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9999153312155642	WITHOUT_CLASSIFICATION	8.466878443572506E-5	IMPLEMENTATION
// strip off "_dot_rb" for .rb files	WITHOUT_CLASSIFICATION	0.999953213900854	WITHOUT_CLASSIFICATION	4.6786099145973775E-5	IMPLEMENTATION
// Makes sure the key is not already in the hashtable.	WITHOUT_CLASSIFICATION	0.9999891047330414	WITHOUT_CLASSIFICATION	1.0895266958656436E-5	IMPLEMENTATION
// Rehash the table if the threshold is exceeded	WITHOUT_CLASSIFICATION	0.9999764536227405	WITHOUT_CLASSIFICATION	2.3546377259478937E-5	IMPLEMENTATION
// Creates the new entry.	WITHOUT_CLASSIFICATION	0.9999810882445707	WITHOUT_CLASSIFICATION	1.8911755429349638E-5	IMPLEMENTATION
// next entry to return // current slot // current entry	WITHOUT_CLASSIFICATION	0.9999758346499253	WITHOUT_CLASSIFICATION	2.4165350074641225E-5	IMPLEMENTATION
// advance to first entry	WITHOUT_CLASSIFICATION	0.9999518675047411	WITHOUT_CLASSIFICATION	4.81324952588673E-5	IMPLEMENTATION
// The reason why we need the stream is to be able to invoke available() on it. // STDIN in Java is non-interruptible, non-selectable, and attempt to read // on such stream might lead to thread being blocked without *any* way to unblock it. // That's where available() comes it, so at least we could check whether // anything is available to be read without blocking.	WITHOUT_CLASSIFICATION	0.9999967286974435	WITHOUT_CLASSIFICATION	3.271302556475454E-6	IMPLEMENTATION
/*package-protected*/	WITHOUT_CLASSIFICATION	0.9999501071501421	WITHOUT_CLASSIFICATION	4.989284985798244E-5	IMPLEMENTATION
// raw file URL, just open directly	WITHOUT_CLASSIFICATION	0.9999498250148827	WITHOUT_CLASSIFICATION	5.017498511732453E-5	IMPLEMENTATION
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999573660626632	WITHOUT_CLASSIFICATION	4.263393733685916E-5	IMPLEMENTATION
// if refcount is at or below zero, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999641576434708	WITHOUT_CLASSIFICATION	3.584235652914715E-5	IMPLEMENTATION
// if channel is already closed, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999755042272912	WITHOUT_CLASSIFICATION	2.449577270871083E-5	IMPLEMENTATION
// otherwise decrement and possibly close as normal	WITHOUT_CLASSIFICATION	0.9999611257893783	WITHOUT_CLASSIFICATION	3.887421062168107E-5	IMPLEMENTATION
// r/w buffer // are we reading or writing?	WITHOUT_CLASSIFICATION	0.999937196222996	WITHOUT_CLASSIFICATION	6.280377700395262E-5	IMPLEMENTATION
// this constructor is used by fdopen, so we don't increment descriptor ref count	WITHOUT_CLASSIFICATION	0.9999838395741688	WITHOUT_CLASSIFICATION	1.616042583111228E-5	IMPLEMENTATION
// unread back	WITHOUT_CLASSIFICATION	0.9999078622846608	WITHOUT_CLASSIFICATION	9.213771533925126E-5	IMPLEMENTATION
// iterate over remainder of buffer until we find a match	WITHOUT_CLASSIFICATION	0.999976472453065	WITHOUT_CLASSIFICATION	2.3527546935043818E-5	IMPLEMENTATION
// terminate and advance buffer when we find our char	WITHOUT_CLASSIFICATION	0.9999605042691141	WITHOUT_CLASSIFICATION	3.9495730885943145E-5	IMPLEMENTATION
// no match, append remainder of buffer and continue with next block	WITHOUT_CLASSIFICATION	0.9999858319732634	WITHOUT_CLASSIFICATION	1.4168026736477941E-5	IMPLEMENTATION
// found a match above, check if remaining separator characters match, appending as we go	WITHOUT_CLASSIFICATION	0.9999951965161857	WITHOUT_CLASSIFICATION	4.803483814292504E-6	IMPLEMENTATION
// // Check file size - special files in /proc have zero size and need to be // handled by the generic read path. //	WITHOUT_CLASSIFICATION	0.9999885270103336	WITHOUT_CLASSIFICATION	1.14729896664479E-5	IMPLEMENTATION
// // Copy any buffered data (including ungetc byte) //	WITHOUT_CLASSIFICATION	0.9999554747378566	WITHOUT_CLASSIFICATION	4.452526214346429E-5	IMPLEMENTATION
// // Now read unbuffered directly from the file //	WITHOUT_CLASSIFICATION	0.9999840498915098	WITHOUT_CLASSIFICATION	1.5950108490227325E-5	IMPLEMENTATION
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999482900843377	WITHOUT_CLASSIFICATION	5.170991566225798E-5	IMPLEMENTATION
// // Need to clamp source (buffer) size to avoid overrun //	WITHOUT_CLASSIFICATION	0.9999520532516818	WITHOUT_CLASSIFICATION	4.794674831822591E-5	IMPLEMENTATION
// not closing from finalize	WITHOUT_CLASSIFICATION	0.9997810039413032	WITHOUT_CLASSIFICATION	2.189960586967615E-4	IMPLEMENTATION
// clear runtime so it doesn't get stuck in memory (JRUBY-2933)	WITHOUT_CLASSIFICATION	0.9999739982521548	WITHOUT_CLASSIFICATION	2.600174784527047E-5	IMPLEMENTATION
// silence	WITHOUT_CLASSIFICATION	0.9966117053957888	WITHOUT_CLASSIFICATION	0.0033882946042112453	IMPLEMENTATION
// silence	WITHOUT_CLASSIFICATION	0.9966117053957888	WITHOUT_CLASSIFICATION	0.0033882946042112453	IMPLEMENTATION
// Don't bother	WITHOUT_CLASSIFICATION	0.999920475946323	WITHOUT_CLASSIFICATION	7.952405367689562E-5	IMPLEMENTATION
// Don't bother	WITHOUT_CLASSIFICATION	0.999920475946323	WITHOUT_CLASSIFICATION	7.952405367689562E-5	IMPLEMENTATION
// For Sockets, only write as much as will fit.	WITHOUT_CLASSIFICATION	0.9999546001967667	WITHOUT_CLASSIFICATION	4.5399803233265935E-5	IMPLEMENTATION
// Correct position for read / write buffering (we could invalidate, but expensive)	WITHOUT_CLASSIFICATION	0.9999843379616707	WITHOUT_CLASSIFICATION	1.566203832928513E-5	IMPLEMENTATION
// Adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999366483073904	WITHOUT_CLASSIFICATION	6.33516926096483E-5	IMPLEMENTATION
// for SEEK_CUR, need to adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999459524895822	WITHOUT_CLASSIFICATION	5.4047510417832315E-5	IMPLEMENTATION
// libc flushes writes on any read from the actual file, so we flush here	WITHOUT_CLASSIFICATION	0.9999798971761961	WITHOUT_CLASSIFICATION	2.010282380403236E-5	IMPLEMENTATION
// we have read ahead, and need to back up	WITHOUT_CLASSIFICATION	0.9999410750402555	WITHOUT_CLASSIFICATION	5.8924959744540426E-5	IMPLEMENTATION
// 128K seems to be the minimum at which the stat+seek is faster than reallocation	WITHOUT_CLASSIFICATION	0.9999844293579623	WITHOUT_CLASSIFICATION	1.5570642037772585E-5	IMPLEMENTATION
// // limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations //	WITHOUT_CLASSIFICATION	0.9999775879703477	WITHOUT_CLASSIFICATION	2.241202965225512E-5	IMPLEMENTATION
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999462821147678	WITHOUT_CLASSIFICATION	5.371788523211504E-5	IMPLEMENTATION
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999897455099744	WITHOUT_CLASSIFICATION	1.0254490025490668E-5	IMPLEMENTATION
// // Avoid double-copying for reads that are larger than the buffer size //	WITHOUT_CLASSIFICATION	0.9999840563510362	WITHOUT_CLASSIFICATION	1.594364896386455E-5	IMPLEMENTATION
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999838219780849	WITHOUT_CLASSIFICATION	1.617802191511958E-5	IMPLEMENTATION
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999838219780849	WITHOUT_CLASSIFICATION	1.617802191511958E-5	IMPLEMENTATION
// // Avoid double-copying for reads that are larger than the buffer size, or // the destination is a direct buffer. //	WITHOUT_CLASSIFICATION	0.9999948919260333	WITHOUT_CLASSIFICATION	5.108073966693098E-6	IMPLEMENTATION
// // We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating // a huge temporary native buffer, when doing reads into a heap buffer // If the dst buffer is direct, then no need to limit. //	WITHOUT_CLASSIFICATION	0.9999802592291822	WITHOUT_CLASSIFICATION	1.9740770817773814E-5	IMPLEMENTATION
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999763684411054	WITHOUT_CLASSIFICATION	2.3631558894579415E-5	IMPLEMENTATION
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999763684411054	WITHOUT_CLASSIFICATION	2.3631558894579415E-5	IMPLEMENTATION
// Doesn't fit in buffer. Write immediately. // ensure nothing left to write	WITHOUT_CLASSIFICATION	0.9999907961923487	WITHOUT_CLASSIFICATION	9.203807651465222E-6	IMPLEMENTATION
// truncate can't lengthen files, so we save position, seek/write, and go back	WITHOUT_CLASSIFICATION	0.9999803219335778	WITHOUT_CLASSIFICATION	1.9678066422222445E-5	IMPLEMENTATION
// how far ahead we are when reading	WITHOUT_CLASSIFICATION	0.9999430602612703	WITHOUT_CLASSIFICATION	5.693973872979997E-5	IMPLEMENTATION
// if the read buffer is ahead, back up	WITHOUT_CLASSIFICATION	0.9999791517844165	WITHOUT_CLASSIFICATION	2.084821558345766E-5	IMPLEMENTATION
// close without removing from finalizers	WITHOUT_CLASSIFICATION	0.999971953845705	WITHOUT_CLASSIFICATION	2.8046154295057317E-5	IMPLEMENTATION
// putting a bit back, so we're not at EOF anymore	WITHOUT_CLASSIFICATION	0.9999728347552306	WITHOUT_CLASSIFICATION	2.7165244769365297E-5	IMPLEMENTATION
// save the ungot	WITHOUT_CLASSIFICATION	0.9999540561605836	WITHOUT_CLASSIFICATION	4.594383941639687E-5	IMPLEMENTATION
// otherwise, we try an unbuffered read to get whatever's available	WITHOUT_CLASSIFICATION	0.9999632590678734	WITHOUT_CLASSIFICATION	3.6740932126545476E-5	IMPLEMENTATION
// ignore this; select() will set the correct mode when it is finished	WITHOUT_CLASSIFICATION	0.999998563330546	WITHOUT_CLASSIFICATION	1.4366694540323354E-6	IMPLEMENTATION
// flush first	WITHOUT_CLASSIFICATION	0.999940129367031	WITHOUT_CLASSIFICATION	5.987063296899314E-5	IMPLEMENTATION
// // Wake up any channels that became unblocked //	WITHOUT_CLASSIFICATION	0.9999461601507729	WITHOUT_CLASSIFICATION	5.383984922716599E-5	IMPLEMENTATION
// // Register any new blocking I/O requests //	WITHOUT_CLASSIFICATION	0.9999575906528745	WITHOUT_CLASSIFICATION	4.2409347125614704E-5	IMPLEMENTATION
// Now clear out any previously selected channels	WITHOUT_CLASSIFICATION	0.9999848093255012	WITHOUT_CLASSIFICATION	1.5190674498849448E-5	IMPLEMENTATION
// // Wait for I/O on any channel //	WITHOUT_CLASSIFICATION	0.9999492781488167	WITHOUT_CLASSIFICATION	5.072185118323965E-5	IMPLEMENTATION
// Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'	WITHOUT_CLASSIFICATION	0.9999928776247282	WITHOUT_CLASSIFICATION	7.122375271708696E-6	IMPLEMENTATION
// Java requires "w" for creating a file that does not exist	WITHOUT_CLASSIFICATION	0.9999739583674618	WITHOUT_CLASSIFICATION	2.6041632538135995E-5	IMPLEMENTATION
// seek to force underlying buffer to flush	WITHOUT_CLASSIFICATION	0.9999346362210889	WITHOUT_CLASSIFICATION	6.536377891113887E-5	IMPLEMENTATION
// seek to force read buffer to invalidate	WITHOUT_CLASSIFICATION	0.999954506330596	WITHOUT_CLASSIFICATION	4.549366940398748E-5	IMPLEMENTATION
/*        result = eval("arr = Array::['c', 200]; p arr");        assertEquals("[\"c\", 200]", result);        result = eval("arr = Array.['d', 200]; p arr");        assertEquals("[\"d\", 200]", result);        */	WITHOUT_CLASSIFICATION	0.9999949020599961	WITHOUT_CLASSIFICATION	5.097940003921147E-6	IMPLEMENTATION
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999792856666132	WITHOUT_CLASSIFICATION	2.0714333386805276E-5	IMPLEMENTATION
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.8155399095837944	WITHOUT_CLASSIFICATION	0.18446009041620554	IMPLEMENTATION
// make sure the pipe stream is set to null	WITHOUT_CLASSIFICATION	0.9999849613281844	WITHOUT_CLASSIFICATION	1.5038671815737697E-5	IMPLEMENTATION
// make sure the main stream is set to null	WITHOUT_CLASSIFICATION	0.9999826835910881	WITHOUT_CLASSIFICATION	1.7316408911976912E-5	IMPLEMENTATION
// first try our custom-generated Unsafe	WITHOUT_CLASSIFICATION	0.9998822519326609	WITHOUT_CLASSIFICATION	1.177480673391574E-4	IMPLEMENTATION
// then try Sun's Unsafe	WITHOUT_CLASSIFICATION	0.9999420955000963	WITHOUT_CLASSIFICATION	5.790449990381655E-5	IMPLEMENTATION
// if we get here, the class and field exist; construct our Unsafe impl // that calls it directly	WITHOUT_CLASSIFICATION	0.9999899832669191	WITHOUT_CLASSIFICATION	1.0016733080911029E-5	IMPLEMENTATION
// else leave it null	WITHOUT_CLASSIFICATION	0.9999498493199012	WITHOUT_CLASSIFICATION	5.015068009879913E-5	IMPLEMENTATION
// TypeMatcher	WITHOUT_CLASSIFICATION	0.9999081332366371	WITHOUT_CLASSIFICATION	9.186676336299256E-5	IMPLEMENTATION
// This is now needed, since module Java // isn't in by default	WITHOUT_CLASSIFICATION	0.999982293526365	WITHOUT_CLASSIFICATION	1.770647363495636E-5	IMPLEMENTATION
// Iterate over the RubyHash keySet, simultaneously iterating over the values()	WITHOUT_CLASSIFICATION	0.9999860406714497	WITHOUT_CLASSIFICATION	1.3959328550429033E-5	IMPLEMENTATION
// Get the value from the map via the key	WITHOUT_CLASSIFICATION	0.9999949314246641	WITHOUT_CLASSIFICATION	5.068575335957628E-6	IMPLEMENTATION
// Get the value from the map via the values iterator	WITHOUT_CLASSIFICATION	0.9999967294318556	WITHOUT_CLASSIFICATION	3.2705681443317453E-6	IMPLEMENTATION
// Check the 2 values obtained via different means	WITHOUT_CLASSIFICATION	0.9999872158426972	WITHOUT_CLASSIFICATION	1.2784157302676964E-5	IMPLEMENTATION
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999829224168361	WITHOUT_CLASSIFICATION	1.707758316394267E-5	IMPLEMENTATION
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999829224168361	WITHOUT_CLASSIFICATION	1.707758316394267E-5	IMPLEMENTATION
// Check the entry.setValue values come back out ok	WITHOUT_CLASSIFICATION	0.9999889099329466	WITHOUT_CLASSIFICATION	1.1090067053313804E-5	IMPLEMENTATION
// If we're running from within an IDE we may not have // the .rb files in our classpath. Try to find them // in the filesystem instead.	WITHOUT_CLASSIFICATION	0.999996604886428	WITHOUT_CLASSIFICATION	3.39511357190473E-6	IMPLEMENTATION
//assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); //assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));	WITHOUT_CLASSIFICATION	0.999956767113124	WITHOUT_CLASSIFICATION	4.323288687591304E-5	IMPLEMENTATION
// Init	WITHOUT_CLASSIFICATION	0.9969508758997799	WITHOUT_CLASSIFICATION	0.0030491241002200157	IMPLEMENTATION
// Block	WITHOUT_CLASSIFICATION	0.9965993782290138	WITHOUT_CLASSIFICATION	0.003400621770986224	IMPLEMENTATION
// Copy constructor	WITHOUT_CLASSIFICATION	0.9999360692260604	WITHOUT_CLASSIFICATION	6.393077393964835E-5	IMPLEMENTATION
// presumably this require should fail	WITHOUT_CLASSIFICATION	0.9999121789716309	WITHOUT_CLASSIFICATION	8.782102836913331E-5	IMPLEMENTATION
// JRUBY-646 // presumably this require should fail	WITHOUT_CLASSIFICATION	0.999906708621054	WITHOUT_CLASSIFICATION	9.329137894603262E-5	IMPLEMENTATION
// Test that requiring a normal Java class raises an error (JRUBY-3214	WITHOUT_CLASSIFICATION	0.9999771267918434	WITHOUT_CLASSIFICATION	2.2873208156580466E-5	IMPLEMENTATION
// ok	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
// Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods // from Ruby so they are not really unused).	WITHOUT_CLASSIFICATION	0.9999788724072991	WITHOUT_CLASSIFICATION	2.1127592700904804E-5	IMPLEMENTATION
//load should work several times in a row	WITHOUT_CLASSIFICATION	0.9998942033673652	WITHOUT_CLASSIFICATION	1.0579663263480678E-4	IMPLEMENTATION
//reset the $loadTestvar	WITHOUT_CLASSIFICATION	0.9999349544560423	WITHOUT_CLASSIFICATION	6.504554395771554E-5	IMPLEMENTATION
//call throwException via JRuby	WITHOUT_CLASSIFICATION	0.999960195700332	WITHOUT_CLASSIFICATION	3.980429966803993E-5	IMPLEMENTATION
// Notify the calling thread that we're about to go to sleep the first time	WITHOUT_CLASSIFICATION	0.9999889576903724	WITHOUT_CLASSIFICATION	1.1042309627628499E-5	IMPLEMENTATION
// wait for the go signal	WITHOUT_CLASSIFICATION	0.9999638807781434	WITHOUT_CLASSIFICATION	3.6119221856619174E-5	IMPLEMENTATION
// run ten separate calls into Ruby, with delay and explicit GC	WITHOUT_CLASSIFICATION	0.9999639537505302	WITHOUT_CLASSIFICATION	3.604624946981941E-5	IMPLEMENTATION
// wait until thread has initialized	WITHOUT_CLASSIFICATION	0.999966712492092	WITHOUT_CLASSIFICATION	3.328750790796484E-5	IMPLEMENTATION
// notify thread to proceed	WITHOUT_CLASSIFICATION	0.9999207245291332	WITHOUT_CLASSIFICATION	7.92754708667833E-5	IMPLEMENTATION
// wait until thread has completed	WITHOUT_CLASSIFICATION	0.9998932192608233	WITHOUT_CLASSIFICATION	1.0678073917662108E-4	IMPLEMENTATION
// we do preand post load outside the "body" versions to pre-prepare // and pre-push the dynamic scope we need for lastline	WITHOUT_CLASSIFICATION	0.999968743546049	WITHOUT_CLASSIFICATION	3.125645395092417E-5	IMPLEMENTATION
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999759515493657	WITHOUT_CLASSIFICATION	2.4048450634338944E-5	IMPLEMENTATION
// MRI behavior: raise ArgumentError for 'unknown command' before // checking number of args.	WITHOUT_CLASSIFICATION	0.9999904028307488	WITHOUT_CLASSIFICATION	9.59716925114018E-6	IMPLEMENTATION
// if any exceptions were raised, we fail	WITHOUT_CLASSIFICATION	0.9998971242097543	WITHOUT_CLASSIFICATION	1.0287579024576505E-4	IMPLEMENTATION
// there should only be one more thread in thread group than before we started	WITHOUT_CLASSIFICATION	0.9999779012326823	WITHOUT_CLASSIFICATION	2.209876731765802E-5	IMPLEMENTATION
// construct a new cache with thread's classloader and no limit	WITHOUT_CLASSIFICATION	0.9999648337127605	WITHOUT_CLASSIFICATION	3.5166287239469814E-5	IMPLEMENTATION
//        Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); //        Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();	WITHOUT_CLASSIFICATION	0.9999884063388221	WITHOUT_CLASSIFICATION	1.1593661177775159E-5	IMPLEMENTATION
//        assertSame(script1, script2);	WITHOUT_CLASSIFICATION	0.9999778963914908	WITHOUT_CLASSIFICATION	2.2103608509126407E-5	IMPLEMENTATION
// void methods should work	WITHOUT_CLASSIFICATION	0.9999092590768918	WITHOUT_CLASSIFICATION	9.074092310828588E-5	IMPLEMENTATION
// methods with required = 4 or higher should bind and be callable using reflection // JRUBY-3649	WITHOUT_CLASSIFICATION	0.9999671294466013	WITHOUT_CLASSIFICATION	3.287055339871465E-5	IMPLEMENTATION
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999961886066397	WITHOUT_CLASSIFICATION	3.8113933602095145E-6	IMPLEMENTATION
// Ensure we have a new interpreter for each test. Previous we were using the //  same interpreter which caused problems as soon as one test failed.	WITHOUT_CLASSIFICATION	0.9999924519872777	WITHOUT_CLASSIFICATION	7.548012722263399E-6	IMPLEMENTATION
// Without a flush Ant will miss some of our output	WITHOUT_CLASSIFICATION	0.9999491716928723	WITHOUT_CLASSIFICATION	5.082830712773304E-5	IMPLEMENTATION
// assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());	WITHOUT_CLASSIFICATION	0.9999481680174432	WITHOUT_CLASSIFICATION	5.183198255673633E-5	IMPLEMENTATION
//        int n = 10;	WITHOUT_CLASSIFICATION	0.9999658450710979	WITHOUT_CLASSIFICATION	3.4154928902039745E-5	IMPLEMENTATION
// there might be more test classes in a single file, so we iterate over them	WITHOUT_CLASSIFICATION	0.9999854193160069	WITHOUT_CLASSIFICATION	1.4580683993128168E-5	IMPLEMENTATION
//No ClassCastException!	WITHOUT_CLASSIFICATION	0.999948266791296	WITHOUT_CLASSIFICATION	5.1733208703937285E-5	IMPLEMENTATION
// value equality	WITHOUT_CLASSIFICATION	0.9999784900847593	WITHOUT_CLASSIFICATION	2.150991524083166E-5	IMPLEMENTATION
// identity equality	WITHOUT_CLASSIFICATION	0.9999299893138093	WITHOUT_CLASSIFICATION	7.001068619073076E-5	IMPLEMENTATION
// bench straight-up integer fib(30)	WITHOUT_CLASSIFICATION	0.9999273894003534	WITHOUT_CLASSIFICATION	7.261059964664512E-5	IMPLEMENTATION
// bench Integer fib	WITHOUT_CLASSIFICATION	0.9999076111458727	WITHOUT_CLASSIFICATION	9.238885412729573E-5	IMPLEMENTATION
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999159879594738	WITHOUT_CLASSIFICATION	8.401204052619891E-5	IMPLEMENTATION
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999159879594738	WITHOUT_CLASSIFICATION	8.401204052619891E-5	IMPLEMENTATION
// bench fixnum-boxed fib	WITHOUT_CLASSIFICATION	0.9999158843928662	WITHOUT_CLASSIFICATION	8.411560713383399E-5	IMPLEMENTATION
// bench straight-up long fib(30)	WITHOUT_CLASSIFICATION	0.9999250477458697	WITHOUT_CLASSIFICATION	7.495225413034533E-5	IMPLEMENTATION
// bench Long fib	WITHOUT_CLASSIFICATION	0.9999059195995108	WITHOUT_CLASSIFICATION	9.408040048925307E-5	IMPLEMENTATION
// skip this one, probably no 'ls' (windows)	WITHOUT_CLASSIFICATION	0.9999635998790207	WITHOUT_CLASSIFICATION	3.640012097924075E-5	IMPLEMENTATION
// start off with a neutral parent	WITHOUT_CLASSIFICATION	0.9999699513507487	WITHOUT_CLASSIFICATION	3.004864925136358E-5	IMPLEMENTATION
/*            public class Hello {                public static String getMessage() {                    return ".....";                }            }            */	WITHOUT_CLASSIFICATION	0.9999995985929122	WITHOUT_CLASSIFICATION	4.0140708786719436E-7	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999728894846878	WITHOUT_CLASSIFICATION	2.7110515312295086E-5	IMPLEMENTATION
// Note: We can't use file.exists() to check whether the symlink // exists or not, because that method returns false for existing // but broken symlink. So, we try without the existence check, // but in the try-catch block. // MRI behavior: symlink? on broken symlink should return true.	WITHOUT_CLASSIFICATION	0.9999980899705321	WITHOUT_CLASSIFICATION	1.910029467900736E-6	IMPLEMENTATION
// We are creating a new IO object that shares the same // IOHandler (and fileno).	WITHOUT_CLASSIFICATION	0.9999699970067719	WITHOUT_CLASSIFICATION	3.0002993228087394E-5	IMPLEMENTATION
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999631876508701	WITHOUT_CLASSIFICATION	3.681234912983808E-5	IMPLEMENTATION
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9999501413842734	WITHOUT_CLASSIFICATION	4.9858615726664285E-5	IMPLEMENTATION
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.999966506106632	WITHOUT_CLASSIFICATION	3.349389336802677E-5	IMPLEMENTATION
// Translate "x || y" --> "x = (is_true(x) ? x : y)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, true, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.999969045360501	WITHOUT_CLASSIFICATION	3.095463949892848E-5	IMPLEMENTATION
// // Force the client socket to be blocking //	WITHOUT_CLASSIFICATION	0.9999715715748916	WITHOUT_CLASSIFICATION	2.8428425108500992E-5	IMPLEMENTATION
// Additional context surrounding tokens that both the lexer and // grammar use.	WITHOUT_CLASSIFICATION	0.9999674862435717	WITHOUT_CLASSIFICATION	3.2513756428352334E-5	IMPLEMENTATION
// Enebo:  c can never be antrhign but '.' // Why did I put this here?	WITHOUT_CLASSIFICATION	0.9998414845052098	WITHOUT_CLASSIFICATION	1.5851549479013865E-4	IMPLEMENTATION
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.999990352674465	WITHOUT_CLASSIFICATION	9.647325534942718E-6	IMPLEMENTATION
//[C,C] //[C, boolean]	WITHOUT_CLASSIFICATION	0.9999457502850386	WITHOUT_CLASSIFICATION	5.424971496128841E-5	IMPLEMENTATION
// Label for the start of the closure (used to implement redo) // Label for the end of the closure (used to implement retry)	WITHOUT_CLASSIFICATION	0.9995469432630846	WITHOUT_CLASSIFICATION	4.530567369153757E-4	IMPLEMENTATION
// ignore; job was cancelled // FIXME: is this ok?	WITHOUT_CLASSIFICATION	0.9999850949969271	WITHOUT_CLASSIFICATION	1.490500307283134E-5	IMPLEMENTATION
//                    // check arity //                    checkArity(mv, scope);	WITHOUT_CLASSIFICATION	0.9999827015396949	WITHOUT_CLASSIFICATION	1.7298460305074855E-5	IMPLEMENTATION
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9999488072827319	WITHOUT_CLASSIFICATION	5.119271726812373E-5	IMPLEMENTATION
// we take the first method found as our "n" method, since for any non-specific // arity they'll all error the same. If an actual "n" method is created, we // use that.	WITHOUT_CLASSIFICATION	0.9999930654168474	WITHOUT_CLASSIFICATION	6.934583152616486E-6	IMPLEMENTATION
// Used by our duck-typification of Proc into interface types, to allow // coercing a simple proc into an interface parameter.	WITHOUT_CLASSIFICATION	0.9999924374416472	WITHOUT_CLASSIFICATION	7.562558352750683E-6	IMPLEMENTATION
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999683505173268	WITHOUT_CLASSIFICATION	3.1649482673186096E-5	IMPLEMENTATION
// it's either as converted as we can make it via above logic or it's // not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999663913056236	WITHOUT_CLASSIFICATION	3.360869437642274E-5	IMPLEMENTATION
// package scheme 2: separate module for each full package name, constructed  // from the camel-cased package segments: Java::JavaLang::Object, 	WITHOUT_CLASSIFICATION	0.9999927299519518	WITHOUT_CLASSIFICATION	7.270048048252094E-6	IMPLEMENTATION
// // construct the proxy method //	WITHOUT_CLASSIFICATION	0.9999692491692385	WITHOUT_CLASSIFICATION	3.0750830761558E-5	IMPLEMENTATION
// line 159 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999568568281841	WITHOUT_CLASSIFICATION	4.314317181588697E-5	IMPLEMENTATION
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999631814023173	WITHOUT_CLASSIFICATION	3.6818597682699196E-5	IMPLEMENTATION
// line 152 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999568568281841	WITHOUT_CLASSIFICATION	4.314317181588697E-5	IMPLEMENTATION
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999943831868641	WITHOUT_CLASSIFICATION	5.61681313591813E-6	IMPLEMENTATION
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999631814023173	WITHOUT_CLASSIFICATION	3.6818597682699196E-5	IMPLEMENTATION
// We only need to pass in current scope if we are evaluating as a block (which // is only done for evals).  We need to pass this in so that we can appropriately scope // down to captured scopes when we are parsing.	WITHOUT_CLASSIFICATION	0.9999747018582291	WITHOUT_CLASSIFICATION	2.529814177086495E-5	IMPLEMENTATION
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999881100396562	WITHOUT_CLASSIFICATION	1.1889960343842043E-5	IMPLEMENTATION
// A place to store that special hiding space that bindings need to implement things like: // eval("a = 1", binding); eval("p a").  All binding instances must get access to this // hidden shared scope.  We store it here.  This will be null if no binding has yet // been called.	WITHOUT_CLASSIFICATION	0.9949665396410559	WITHOUT_CLASSIFICATION	0.005033460358944153	IMPLEMENTATION
// TODO: make it 16 now ? // MUST be power of 2!	WITHOUT_CLASSIFICATION	0.8700457171098551	WITHOUT_CLASSIFICATION	0.12995428289014482	IMPLEMENTATION
// check visibility // dup method	WITHOUT_CLASSIFICATION	0.9999863348494817	WITHOUT_CLASSIFICATION	1.3665150518162603E-5	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999909900156995	WITHOUT_CLASSIFICATION	9.009984300430258E-6	IMPLEMENTATION
// unsigned int, native // unsigned long, native	WITHOUT_CLASSIFICATION	0.9998908408212954	WITHOUT_CLASSIFICATION	1.0915917870458625E-4	IMPLEMENTATION
//need padding //I'm fairly sure there is a library call to create a //string filled with a given char with a given length but I couldn't find it	WITHOUT_CLASSIFICATION	0.9999966726691373	WITHOUT_CLASSIFICATION	3.3273308627019034E-6	IMPLEMENTATION
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999940920530987	WITHOUT_CLASSIFICATION	5.907946901163142E-6	IMPLEMENTATION
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999792856666132	WITHOUT_CLASSIFICATION	2.0714333386805276E-5	IMPLEMENTATION
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999760070576186	WITHOUT_CLASSIFICATION	2.3992942381433393E-5	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999931197391564	WITHOUT_CLASSIFICATION	6.880260843617601E-6	IMPLEMENTATION
// Estimate the square root with the foremost 62 bits of squarD // bi and scale are a tandem	WITHOUT_CLASSIFICATION	0.9999500248060651	WITHOUT_CLASSIFICATION	4.997519393482596E-5	IMPLEMENTATION
// captures // begin and end are used when not groups defined // source string	WITHOUT_CLASSIFICATION	0.9999817652755342	WITHOUT_CLASSIFICATION	1.8234724465845606E-5	IMPLEMENTATION
// // INSTANCE VARIABLE RUBY METHODS //	WITHOUT_CLASSIFICATION	0.9999346541574631	WITHOUT_CLASSIFICATION	6.534584253693622E-5	IMPLEMENTATION
// switch // while	WITHOUT_CLASSIFICATION	0.999969417650496	WITHOUT_CLASSIFICATION	3.0582349503983385E-5	IMPLEMENTATION
// For nodes do not have their own scope so we pass null to indicate this. // 'For's are implemented as blocks in evaluation, but they have no scope so we // just deal with this lack of scope throughout its lifespan.  We should probably // change the way this works to get rid of multiple null checks.	WITHOUT_CLASSIFICATION	0.9994715947936076	WITHOUT_CLASSIFICATION	5.28405206392365E-4	IMPLEMENTATION
// This field is used during argument processing to avoid putting RubyArray // instances that are purely for utility purposes into ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999943731182773	WITHOUT_CLASSIFICATION	5.6268817227165135E-6	IMPLEMENTATION
// Parent container for this context (can be dynamic!!) // If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure // List of IR instructions for this method	WITHOUT_CLASSIFICATION	0.9999958360088861	WITHOUT_CLASSIFICATION	4.16399111391072E-6	IMPLEMENTATION
// Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = false    //    beq(v1, false, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999792561384901	WITHOUT_CLASSIFICATION	2.0743861509801243E-5	IMPLEMENTATION
// expected	WITHOUT_CLASSIFICATION	0.9999627703078908	WITHOUT_CLASSIFICATION	3.722969210921414E-5	IMPLEMENTATION
// Do nothing	WITHOUT_CLASSIFICATION	0.9999894541092749	WITHOUT_CLASSIFICATION	1.054589072504473E-5	IMPLEMENTATION
// constructor	WITHOUT_CLASSIFICATION	0.9999428687778146	WITHOUT_CLASSIFICATION	5.713122218534561E-5	IMPLEMENTATION
// If a line is followed by a blank line put // it back.	WITHOUT_CLASSIFICATION	0.999959500904587	WITHOUT_CLASSIFICATION	4.0499095412992814E-5	IMPLEMENTATION
/* $>: default output handle */	WITHOUT_CLASSIFICATION	0.9999505219447192	WITHOUT_CLASSIFICATION	4.9478055280822925E-5	IMPLEMENTATION
// line 423	WITHOUT_CLASSIFICATION	0.999930291541616	WITHOUT_CLASSIFICATION	6.970845838401249E-5	IMPLEMENTATION
// line 486	WITHOUT_CLASSIFICATION	0.999930291541616	WITHOUT_CLASSIFICATION	6.970845838401249E-5	IMPLEMENTATION
// Signal uses sun.misc.* classes, this is not allowed // in the security-sensitive environments	WITHOUT_CLASSIFICATION	0.9999894204236441	WITHOUT_CLASSIFICATION	1.0579576355915562E-5	IMPLEMENTATION
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999706637948942	WITHOUT_CLASSIFICATION	2.9336205105808956E-5	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999527072245055	WITHOUT_CLASSIFICATION	4.729277549445446E-5	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999527072245055	WITHOUT_CLASSIFICATION	4.729277549445446E-5	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999309896673507	WITHOUT_CLASSIFICATION	6.90103326493227E-5	IMPLEMENTATION
// if there's no receiver, evaluate and pass in the superclass, or // pass self if it no superclass	WITHOUT_CLASSIFICATION	0.9999933013705011	WITHOUT_CLASSIFICATION	6.6986294989361524E-6	IMPLEMENTATION
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9998792383650272	WITHOUT_CLASSIFICATION	1.2076163497268112E-4	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9418741805737971	WITHOUT_CLASSIFICATION	0.05812581942620288	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9418741805737971	WITHOUT_CLASSIFICATION	0.05812581942620288	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9418741805737971	WITHOUT_CLASSIFICATION	0.05812581942620288	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9418741805737971	WITHOUT_CLASSIFICATION	0.05812581942620288	IMPLEMENTATION
// Decrease value to hit upper range.  	WITHOUT_CLASSIFICATION	0.999967258203585	WITHOUT_CLASSIFICATION	3.274179641503207E-5	IMPLEMENTATION
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9998931316598343	WITHOUT_CLASSIFICATION	1.0686834016572055E-4	IMPLEMENTATION
// "else" body	WITHOUT_CLASSIFICATION	0.9999053960346399	WITHOUT_CLASSIFICATION	9.460396536004441E-5	IMPLEMENTATION
// done // done // done // Nothing to do for 1.8 // done // done // done // done // done // done // done? // done // done // done // done // done // done // done // done // done // done // done //            case DEFINEDNODE: return buildDefined(node, m); // Incomplete // done // done // done // done // done // done // done // done //            case ENSURENODE: return buildEnsureNode(node, m); // DEFERRED // done // done // done // done //            case FLIPNODE: return buildFlip(node, m); // SSS FIXME: What code generates this AST? // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done? // done // done // done // done // done // done -- partially //            case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); // DEFERRED SSS FIXME: What code generates this AST? // done //            case POSTEXENODE: return buildPostExe(node, m); // DEFERRED //            case PREEXENODE: return buildPreExe(node, m); // DEFERRED // done?? // done	WITHOUT_CLASSIFICATION	0.9999693614996921	WITHOUT_CLASSIFICATION	3.063850030793341E-5	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999283469799195	WITHOUT_CLASSIFICATION	7.165302008049299E-5	IMPLEMENTATION
/* $+: string matches last paren. */	WITHOUT_CLASSIFICATION	0.9999650149875908	WITHOUT_CLASSIFICATION	3.498501240921194E-5	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999190068224347	WITHOUT_CLASSIFICATION	8.099317756523308E-5	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999190068224347	WITHOUT_CLASSIFICATION	8.099317756523308E-5	IMPLEMENTATION
// Ruby code frequently uses a platform check to choose "NUL:" on windows // but since that check doesn't work well on JRuby, we help it out	WITHOUT_CLASSIFICATION	0.9999710628908732	WITHOUT_CLASSIFICATION	2.893710912684203E-5	IMPLEMENTATION
/* 10! */	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
//            case RESCUENODE: return buildRescue(node, m); // DEFERRED //            case RETRYNODE: return buildRetry(node, m); // DEFERRED // done	WITHOUT_CLASSIFICATION	0.9999798565390796	WITHOUT_CLASSIFICATION	2.0143460920483093E-5	IMPLEMENTATION
// Is this instruction live or dead?  During optimization passes, if this instruction // causes no side-effects and the result of the instruction is not needed by anyone else, // we can remove this instruction altogether without affecting program correctness.	WITHOUT_CLASSIFICATION	0.9993020178954164	WITHOUT_CLASSIFICATION	6.979821045835113E-4	IMPLEMENTATION
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999560346851142	WITHOUT_CLASSIFICATION	4.3965314885811866E-5	IMPLEMENTATION
// first, iterate over all required args	WITHOUT_CLASSIFICATION	0.9999766050162523	WITHOUT_CLASSIFICATION	2.3394983747620643E-5	IMPLEMENTATION
// // Determine if the parameter might be passed as a 32bit int parameter. // This just applies to buffer/pointer types. //	WITHOUT_CLASSIFICATION	0.9999967220706466	WITHOUT_CLASSIFICATION	3.2779293533282037E-6	IMPLEMENTATION
//Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());	WITHOUT_CLASSIFICATION	0.999939285351116	WITHOUT_CLASSIFICATION	6.0714648883910134E-5	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999053960346399	WITHOUT_CLASSIFICATION	9.460396536004441E-5	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999053960346399	WITHOUT_CLASSIFICATION	9.460396536004441E-5	IMPLEMENTATION
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999943831868641	WITHOUT_CLASSIFICATION	5.61681313591813E-6	IMPLEMENTATION
// line 449	WITHOUT_CLASSIFICATION	0.999930291541616	WITHOUT_CLASSIFICATION	6.970845838401249E-5	IMPLEMENTATION
// line 495	WITHOUT_CLASSIFICATION	0.999930291541616	WITHOUT_CLASSIFICATION	6.970845838401249E-5	IMPLEMENTATION
// Management/monitoring	WITHOUT_CLASSIFICATION	0.9999229294701252	WITHOUT_CLASSIFICATION	7.707052987477437E-5	IMPLEMENTATION
// if we've found the last char of the separator, // and we've found at least as many characters as separator length, // and the last n characters of our buffer match the separator, we're done	WITHOUT_CLASSIFICATION	0.9999990416426235	WITHOUT_CLASSIFICATION	9.583573764272673E-7	IMPLEMENTATION
/* 14! */	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
// Process any set of annotations // No supported options	WITHOUT_CLASSIFICATION	0.9999755004434776	WITHOUT_CLASSIFICATION	2.4499556522360578E-5	IMPLEMENTATION
// add to the jitted methods set	WITHOUT_CLASSIFICATION	0.9999789417148817	WITHOUT_CLASSIFICATION	2.1058285118307603E-5	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.9999587673047106	WITHOUT_CLASSIFICATION	4.123269528941239E-5	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.9999587673047106	WITHOUT_CLASSIFICATION	4.123269528941239E-5	IMPLEMENTATION
//            case SCLASSNODE: return buildSClass(node, m); // DEFERRED // done // done // done // done // done // done // done // done //            case UNDEFNODE: return buildUndef(node, m); // DEFERRED // done //            case VALIASNODE: return buildVAlias(node, m); // DEFERRED // done // done	WITHOUT_CLASSIFICATION	0.999981333115785	WITHOUT_CLASSIFICATION	1.8666884215067712E-5	IMPLEMENTATION
// // Adding a post-invoke for the cb result serves to both keep it alive // until after the function returns, and allows us to clean up the native // trampoline early, instead of letting them accumulate until a GC run //	WITHOUT_CLASSIFICATION	0.9999967915876193	WITHOUT_CLASSIFICATION	3.208412380667953E-6	IMPLEMENTATION
/* The Java method doesn't care what class it is, but we need to               know what to convert it to, so we use the object's own class.               If that doesn't help, we use String to force a call to the               object's "to_s" method. */	WITHOUT_CLASSIFICATION	0.999952704737158	WITHOUT_CLASSIFICATION	4.729526284193445E-5	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.9999562724272645	WITHOUT_CLASSIFICATION	4.3727572735460366E-5	IMPLEMENTATION
// Atomic integers for symbol and method IDs	WITHOUT_CLASSIFICATION	0.9999122720342527	WITHOUT_CLASSIFICATION	8.772796574723997E-5	IMPLEMENTATION
/* 18! */	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9999856501638438	WITHOUT_CLASSIFICATION	1.4349836156273807E-5	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999750520229583	WITHOUT_CLASSIFICATION	2.4947977041662802E-5	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999750520229583	WITHOUT_CLASSIFICATION	2.4947977041662802E-5	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999750520229583	WITHOUT_CLASSIFICATION	2.4947977041662802E-5	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999750520229583	WITHOUT_CLASSIFICATION	2.4947977041662802E-5	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999927966006991	WITHOUT_CLASSIFICATION	7.203399300907965E-6	IMPLEMENTATION
/*      * This method takes as input a map of operands to their values, and outputs     * the result of this instruction.     *     * If the value map provides a value for any of the instruction's operands     * the expectation is that the operand will be replaced with the simplified value.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify.     *     * @param valueMap Mapping from operands to their simplified values     * @returns simplified result / output of this instruction     */	WITHOUT_CLASSIFICATION	0.9999991774918918	WITHOUT_CLASSIFICATION	8.225081082322432E-7	IMPLEMENTATION
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9999350051535965	WITHOUT_CLASSIFICATION	6.499484640355108E-5	IMPLEMENTATION
// An atomic long for generating DynamicMethod serial numbers	WITHOUT_CLASSIFICATION	0.999936762487535	WITHOUT_CLASSIFICATION	6.32375124649043E-5	IMPLEMENTATION
// MRI behavior: always check whether the file is writable // or not, even if we are to write 0 bytes.	WITHOUT_CLASSIFICATION	0.9999910002905719	WITHOUT_CLASSIFICATION	8.999709428232983E-6	IMPLEMENTATION
/* 22! */	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.999954497089339	WITHOUT_CLASSIFICATION	4.550291066099082E-5	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999658907079789	WITHOUT_CLASSIFICATION	3.410929202112194E-5	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999658907079789	WITHOUT_CLASSIFICATION	3.410929202112194E-5	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999658907079789	WITHOUT_CLASSIFICATION	3.410929202112194E-5	IMPLEMENTATION
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999627673413279	WITHOUT_CLASSIFICATION	3.72326586721589E-5	IMPLEMENTATION
// Build a new class and add it to the current scope (could be a script / module / class)	WITHOUT_CLASSIFICATION	0.9999943728703954	WITHOUT_CLASSIFICATION	5.6271296045174525E-6	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.999986147353475	WITHOUT_CLASSIFICATION	1.3852646525134658E-5	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.999986147353475	WITHOUT_CLASSIFICATION	1.3852646525134658E-5	IMPLEMENTATION
// AF_INET	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
//////////////////////////////////////////////////////////////////////////// // Now we provide default impls of a number of signatures. For each arity, // we first generate a non-block version of the method, which just adds // NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can // potentially take a block, to only generate the block-receiving signature // and still avoid arg boxing. // // We then provide default implementations of each block-accepting method // that in turn call the IRubyObject[]+Block version of call. This then // finally falls back on the minimum implementation requirement for // dynamic method handles. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999685059097	WITHOUT_CLASSIFICATION	3.149409032552225E-8	IMPLEMENTATION
// Because we implement Java interfaces now, we need a new === that's // aware of those additional "virtual" supertypes	WITHOUT_CLASSIFICATION	0.9984372768662069	WITHOUT_CLASSIFICATION	0.0015627231337930893	IMPLEMENTATION
// BASE64	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
/* note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY         * when value is an integer less than 1.         * We treat 0 as a special case to avoid Domain error.         */	WITHOUT_CLASSIFICATION	0.999994688549381	WITHOUT_CLASSIFICATION	5.311450619051048E-6	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.9999236591270974	WITHOUT_CLASSIFICATION	7.634087290266614E-5	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999712650550083	WITHOUT_CLASSIFICATION	2.8734944991642873E-5	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999712650550083	WITHOUT_CLASSIFICATION	2.8734944991642873E-5	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999584003202058	WITHOUT_CLASSIFICATION	4.15996797941508E-5	IMPLEMENTATION
// SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode // We won't get here for argument receives!  So, buildDasgn is called for // assignments to block variables within a block.  As far as the IR is concerned, // this is just a simple copy	WITHOUT_CLASSIFICATION	0.9999975490487587	WITHOUT_CLASSIFICATION	2.4509512412538977E-6	IMPLEMENTATION
// getSimplifiedOperand returns the value of this operand, fully simplified // getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away // // The value is used during optimizations and propagated through the IR.  But, it is thrown away after that. // But, the operand form is used for constructing the compound objects represented by the operand. // // Example: a = [1], b = [3,4], c = [a,b], d = [2,c] //   -- getValue(c) = [1,[3,4]];     getSimplifiedOperand(c) = [1, b] //   -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] // // Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. // So, if contents of a or b is modified, the "simplified value"s of c and d also change!  This difference // is captured by these two methods.	WITHOUT_CLASSIFICATION	0.9999999822949157	WITHOUT_CLASSIFICATION	1.7705084189991428E-8	IMPLEMENTATION
//IRubyObject protocol = args[4];	WITHOUT_CLASSIFICATION	0.9999356378593033	WITHOUT_CLASSIFICATION	6.436214069676747E-5	IMPLEMENTATION
// promise to implement three to N with block	WITHOUT_CLASSIFICATION	0.9902739130728884	WITHOUT_CLASSIFICATION	0.009726086927111544	IMPLEMENTATION
// Ruby's OMG capture all source in a Hash feature // Add each line to buffer when encountering newline or EOF for first time.	WITHOUT_CLASSIFICATION	0.9999902664562981	WITHOUT_CLASSIFICATION	9.733543701824046E-6	IMPLEMENTATION
// carriage return	WITHOUT_CLASSIFICATION	0.9999391154836301	WITHOUT_CLASSIFICATION	6.0884516369788564E-5	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999053960346399	WITHOUT_CLASSIFICATION	9.460396536004441E-5	IMPLEMENTATION
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9999780566295783	WITHOUT_CLASSIFICATION	2.194337042176663E-5	IMPLEMENTATION
// String construction routines by NOT byte[] buffer and making the target String shared 	WITHOUT_CLASSIFICATION	0.9999885934634333	WITHOUT_CLASSIFICATION	1.1406536566773816E-5	IMPLEMENTATION
// insert all nodes in sequence, hash them in the final instruction // KEY	WITHOUT_CLASSIFICATION	0.9999852297728966	WITHOUT_CLASSIFICATION	1.4770227103461161E-5	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999954301673329	WITHOUT_CLASSIFICATION	4.569832667082454E-6	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999659937074694	WITHOUT_CLASSIFICATION	3.4006292530509527E-5	IMPLEMENTATION
// Basic Block id // CFG that this basic block belongs to // All basic blocks have a starting label // List of non-label instructions	WITHOUT_CLASSIFICATION	0.9999551214178216	WITHOUT_CLASSIFICATION	4.487858217834348E-5	IMPLEMENTATION
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999901207224191	WITHOUT_CLASSIFICATION	9.879277580841918E-6	IMPLEMENTATION
// For all uninitialized specific arities, we defer to the "n" method which // should raise appropriate error in all cases.	WITHOUT_CLASSIFICATION	0.9999775986552618	WITHOUT_CLASSIFICATION	2.240134473807741E-5	IMPLEMENTATION
// implement is called to force this class to create stubs for all // methods in the given interface, so they'll show up in the list // of methods and be invocable without passing through method_missing	WITHOUT_CLASSIFICATION	0.9999664762065237	WITHOUT_CLASSIFICATION	3.352379347633849E-5	IMPLEMENTATION
// CASE IR instructions are dummy instructions  // -- all when/then clauses have been converted into if-then-else blocks	WITHOUT_CLASSIFICATION	0.9999377891451598	WITHOUT_CLASSIFICATION	6.221085484012893E-5	IMPLEMENTATION
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999890824619757	WITHOUT_CLASSIFICATION	1.0917538024322348E-5	IMPLEMENTATION
// leave it null and fall back on our normal invocation logic	WITHOUT_CLASSIFICATION	0.9999677288069783	WITHOUT_CLASSIFICATION	3.227119302174058E-5	IMPLEMENTATION
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999915777420442	WITHOUT_CLASSIFICATION	8.422257955794017E-6	IMPLEMENTATION
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9992543285592569	WITHOUT_CLASSIFICATION	7.45671440743031E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999418330257996	WITHOUT_CLASSIFICATION	5.8166974200377315E-5	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999418330257996	WITHOUT_CLASSIFICATION	5.8166974200377315E-5	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999418330257996	WITHOUT_CLASSIFICATION	5.8166974200377315E-5	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999418330257996	WITHOUT_CLASSIFICATION	5.8166974200377315E-5	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999418330257996	WITHOUT_CLASSIFICATION	5.8166974200377315E-5	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999418330257996	WITHOUT_CLASSIFICATION	5.8166974200377315E-5	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999418330257996	WITHOUT_CLASSIFICATION	5.8166974200377315E-5	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999418330257996	WITHOUT_CLASSIFICATION	5.8166974200377315E-5	IMPLEMENTATION
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999726046069626	WITHOUT_CLASSIFICATION	2.7395393037442003E-5	IMPLEMENTATION
/* fall through */	WITHOUT_CLASSIFICATION	0.9999475859907341	WITHOUT_CLASSIFICATION	5.241400926599293E-5	IMPLEMENTATION
// deal with case when "other" is not a string	WITHOUT_CLASSIFICATION	0.9999713643039315	WITHOUT_CLASSIFICATION	2.8635696068548333E-5	IMPLEMENTATION
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999801583431456	WITHOUT_CLASSIFICATION	1.98416568543781E-5	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999728894846878	WITHOUT_CLASSIFICATION	2.7110515312295086E-5	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999728894846878	WITHOUT_CLASSIFICATION	2.7110515312295086E-5	IMPLEMENTATION
// store argument count information into scope	WITHOUT_CLASSIFICATION	0.999986949608783	WITHOUT_CLASSIFICATION	1.3050391216983446E-5	IMPLEMENTATION
// the load method is used for loading as a top-level script, and prepares appropriate scoping around the code	WITHOUT_CLASSIFICATION	0.9999781873883673	WITHOUT_CLASSIFICATION	2.1812611632793953E-5	IMPLEMENTATION
// First, build assignments for specific named arguments	WITHOUT_CLASSIFICATION	0.9999798514860613	WITHOUT_CLASSIFICATION	2.0148513938756347E-5	IMPLEMENTATION
//        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } //        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }	WITHOUT_CLASSIFICATION	0.9999839289682522	WITHOUT_CLASSIFICATION	1.607103174787067E-5	IMPLEMENTATION
// get current context	WITHOUT_CLASSIFICATION	0.9999741293432927	WITHOUT_CLASSIFICATION	2.5870656707368848E-5	IMPLEMENTATION
// octal constant	WITHOUT_CLASSIFICATION	0.9999206964124016	WITHOUT_CLASSIFICATION	7.930358759846242E-5	IMPLEMENTATION
// read	WITHOUT_CLASSIFICATION	0.9969238340457468	WITHOUT_CLASSIFICATION	0.0030761659542531904	IMPLEMENTATION
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.999912295679743	WITHOUT_CLASSIFICATION	8.770432025698178E-5	IMPLEMENTATION
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999124284780262	WITHOUT_CLASSIFICATION	8.757152197383214E-5	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999745670669974	WITHOUT_CLASSIFICATION	2.543293300251829E-5	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999745670669974	WITHOUT_CLASSIFICATION	2.543293300251829E-5	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999745670669974	WITHOUT_CLASSIFICATION	2.543293300251829E-5	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.99990753180833	WITHOUT_CLASSIFICATION	9.246819167002639E-5	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.99990753180833	WITHOUT_CLASSIFICATION	9.246819167002639E-5	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.99990753180833	WITHOUT_CLASSIFICATION	9.246819167002639E-5	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.99990753180833	WITHOUT_CLASSIFICATION	9.246819167002639E-5	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.99990753180833	WITHOUT_CLASSIFICATION	9.246819167002639E-5	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.99990753180833	WITHOUT_CLASSIFICATION	9.246819167002639E-5	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.99990753180833	WITHOUT_CLASSIFICATION	9.246819167002639E-5	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.99990753180833	WITHOUT_CLASSIFICATION	9.246819167002639E-5	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.99990753180833	WITHOUT_CLASSIFICATION	9.246819167002639E-5	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999975841687161	WITHOUT_CLASSIFICATION	2.415831283996203E-6	IMPLEMENTATION
// at end	WITHOUT_CLASSIFICATION	0.9963851245548441	WITHOUT_CLASSIFICATION	0.0036148754451560245	IMPLEMENTATION
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999494006278157	WITHOUT_CLASSIFICATION	5.059937218427472E-5	IMPLEMENTATION
// save blocking state	WITHOUT_CLASSIFICATION	0.9999502182722994	WITHOUT_CLASSIFICATION	4.9781727700659154E-5	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.99990753180833	WITHOUT_CLASSIFICATION	9.246819167002639E-5	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.99990753180833	WITHOUT_CLASSIFICATION	9.246819167002639E-5	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.99990753180833	WITHOUT_CLASSIFICATION	9.246819167002639E-5	IMPLEMENTATION
// invoke static __file__	WITHOUT_CLASSIFICATION	0.99994180015266	WITHOUT_CLASSIFICATION	5.8199847339920664E-5	IMPLEMENTATION
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999775127020983	WITHOUT_CLASSIFICATION	2.2487297901725613E-5	IMPLEMENTATION
// fall back on empty env when security disallows environment var access (like in an applet)	WITHOUT_CLASSIFICATION	0.9999739060663535	WITHOUT_CLASSIFICATION	2.609393364645799E-5	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999269067129158	WITHOUT_CLASSIFICATION	7.309328708414149E-5	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999269067129158	WITHOUT_CLASSIFICATION	7.309328708414149E-5	IMPLEMENTATION
// load null block	WITHOUT_CLASSIFICATION	0.9999361859050215	WITHOUT_CLASSIFICATION	6.38140949785077E-5	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999798717759861	WITHOUT_CLASSIFICATION	2.0128224013954126E-5	IMPLEMENTATION
// nothing else to here - the module version will be // included in the class.	WITHOUT_CLASSIFICATION	0.9999968003643626	WITHOUT_CLASSIFICATION	3.1996356374772834E-6	IMPLEMENTATION
// JRUBY-1000, fail early when attempting to subclass a final Java class; // solved here by adding an exception-throwing "inherited"	WITHOUT_CLASSIFICATION	0.9999353624364409	WITHOUT_CLASSIFICATION	6.463756355913028E-5	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9999059812796572	WITHOUT_CLASSIFICATION	9.401872034284583E-5	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9999059812796572	WITHOUT_CLASSIFICATION	9.401872034284583E-5	IMPLEMENTATION
// Translate ret = (a || b) to ret = (a ? true : b) as follows //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = true //    beq(v1, true, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999783710847087	WITHOUT_CLASSIFICATION	2.1628915291356457E-5	IMPLEMENTATION
// Initial precision is that of double numbers 2^63/2 ~ 4E18 // 63-1 an even number of number bits // precision seems 16 to 18 digits	WITHOUT_CLASSIFICATION	0.9999910306545258	WITHOUT_CLASSIFICATION	8.969345474168789E-6	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999249222587279	WITHOUT_CLASSIFICATION	7.507774127205205E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.9999440054892375	WITHOUT_CLASSIFICATION	5.5994510762418206E-5	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999658776948024	WITHOUT_CLASSIFICATION	3.412230519770533E-5	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999658776948024	WITHOUT_CLASSIFICATION	3.412230519770533E-5	IMPLEMENTATION
// check arity	WITHOUT_CLASSIFICATION	0.9999704121723436	WITHOUT_CLASSIFICATION	2.9587827656352053E-5	IMPLEMENTATION
// check arity	WITHOUT_CLASSIFICATION	0.9999704121723436	WITHOUT_CLASSIFICATION	2.9587827656352053E-5	IMPLEMENTATION
// create the class	WITHOUT_CLASSIFICATION	0.9999907720437319	WITHOUT_CLASSIFICATION	9.227956268167634E-6	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999832937137986	WITHOUT_CLASSIFICATION	1.6706286201341945E-5	IMPLEMENTATION
// No hex value after the 'x'.	WITHOUT_CLASSIFICATION	0.99997215041233	WITHOUT_CLASSIFICATION	2.7849587669984294E-5	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999156743149097	WITHOUT_CLASSIFICATION	8.432568509039663E-5	IMPLEMENTATION
// Let m be the exact digits precision in an earlier! loop	WITHOUT_CLASSIFICATION	0.9999521594356892	WITHOUT_CLASSIFICATION	4.784056431090463E-5	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999845567194575	WITHOUT_CLASSIFICATION	1.5443280542476044E-5	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9965901650913201	WITHOUT_CLASSIFICATION	0.0034098349086799694	IMPLEMENTATION
// Label for the start of the method // Label for the end of the method	WITHOUT_CLASSIFICATION	0.9999962405743358	WITHOUT_CLASSIFICATION	3.7594256641727844E-6	IMPLEMENTATION
// comparisons & checks // checks if the operand is non-null and non-false // EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...	WITHOUT_CLASSIFICATION	0.9999934401577447	WITHOUT_CLASSIFICATION	6.559842255260655E-6	IMPLEMENTATION
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9995811247016039	WITHOUT_CLASSIFICATION	4.188752983962392E-4	IMPLEMENTATION
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9998949891668714	WITHOUT_CLASSIFICATION	1.0501083312867869E-4	IMPLEMENTATION
// all done with lookup attempts, release monitor	WITHOUT_CLASSIFICATION	0.999956811332847	WITHOUT_CLASSIFICATION	4.3188667152909734E-5	IMPLEMENTATION
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999805768281209	WITHOUT_CLASSIFICATION	1.94231718791469E-5	IMPLEMENTATION
// Create list of interface names to proxy (and make sure they really are interfaces) // Also build a hashcode from all classes to use for retrieving previously-created impl	WITHOUT_CLASSIFICATION	0.9999994394896273	WITHOUT_CLASSIFICATION	5.605103727267563E-7	IMPLEMENTATION
// Construct local variables based on parameter names passed in	WITHOUT_CLASSIFICATION	0.9999934699712557	WITHOUT_CLASSIFICATION	6.530028744318723E-6	IMPLEMENTATION
// Value of "TZ" property is of a bit different format, // which confuses the Java's TimeZone.getTimeZone(id) method, // and so, we need to convert it.	WITHOUT_CLASSIFICATION	0.9999766114693293	WITHOUT_CLASSIFICATION	2.3388530670767644E-5	IMPLEMENTATION
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.999954284543184	WITHOUT_CLASSIFICATION	4.57154568159555E-5	IMPLEMENTATION
// ensure the object is associated with the wrapper we found it in, // so that if it comes back we don't re-wrap it	WITHOUT_CLASSIFICATION	0.999994452154278	WITHOUT_CLASSIFICATION	5.5478457220901846E-6	IMPLEMENTATION
// return sqrt(squarD) with precision of rootMC	WITHOUT_CLASSIFICATION	0.9999879773177606	WITHOUT_CLASSIFICATION	1.2022682239323133E-5	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999931197391564	WITHOUT_CLASSIFICATION	6.880260843617601E-6	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
// Get a new label using the provided label prefix	WITHOUT_CLASSIFICATION	0.9999813925751676	WITHOUT_CLASSIFICATION	1.860742483233175E-5	IMPLEMENTATION
// normal exit, perform finally and return	WITHOUT_CLASSIFICATION	0.9999730466638355	WITHOUT_CLASSIFICATION	2.6953336164541432E-5	IMPLEMENTATION
// coerce arguments	WITHOUT_CLASSIFICATION	0.9999411537892066	WITHOUT_CLASSIFICATION	5.884621079351893E-5	IMPLEMENTATION
// 0.0 is ok // float range // inverted float range? // NaN // +infinity // -infinity	WITHOUT_CLASSIFICATION	0.9999618256695634	WITHOUT_CLASSIFICATION	3.817433043663459E-5	IMPLEMENTATION
/* expected */	WITHOUT_CLASSIFICATION	0.99994736105389	WITHOUT_CLASSIFICATION	5.2638946109880666E-5	IMPLEMENTATION
// set this class's method names in var @__java_ovrd_methods if this // is the new class; otherwise, get method names from there if this is // a proxy superclass.	WITHOUT_CLASSIFICATION	0.9999974894859182	WITHOUT_CLASSIFICATION	2.5105140817761194E-6	IMPLEMENTATION
/* ignore backslashed spaces in %w */	WITHOUT_CLASSIFICATION	0.9999707962325094	WITHOUT_CLASSIFICATION	2.9203767490663008E-5	IMPLEMENTATION
// Invert the sign, since TZ format and Java format // use opposite signs, sigh... Also, Java API requires // the sign to be always present, be it "+" or "-".	WITHOUT_CLASSIFICATION	0.999967564461024	WITHOUT_CLASSIFICATION	3.243553897603884E-5	IMPLEMENTATION
// no binding given, use 0 for both	WITHOUT_CLASSIFICATION	0.9999481729655502	WITHOUT_CLASSIFICATION	5.182703444995106E-5	IMPLEMENTATION
// <=> may return nil in many circumstances, e.g. 3 <=> NaN        	WITHOUT_CLASSIFICATION	0.9999542143190063	WITHOUT_CLASSIFICATION	4.5785680993712494E-5	IMPLEMENTATION
// use numbered access method	WITHOUT_CLASSIFICATION	0.9999568058100726	WITHOUT_CLASSIFICATION	4.319418992737654E-5	IMPLEMENTATION
// Always use "GMT" since that's required by Java API.	WITHOUT_CLASSIFICATION	0.9999658718643355	WITHOUT_CLASSIFICATION	3.41281356645427E-5	IMPLEMENTATION
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999971729500367	WITHOUT_CLASSIFICATION	2.8270499632812864E-6	IMPLEMENTATION
// The dataStruct is a place where custom information can be // contained for core implementations that doesn't necessarily // want to go to the trouble of creating a subclass of // RubyObject. The OpenSSL implementation uses this heavily to // save holder objects containing Java cryptography objects. // Java integration uses this to store the Java object ref. //protected transient Object dataStruct;	WITHOUT_CLASSIFICATION	0.9999991171588054	WITHOUT_CLASSIFICATION	8.828411946853793E-7	IMPLEMENTATION
// Remaining arguments are for the script itself	WITHOUT_CLASSIFICATION	0.99998604771251	WITHOUT_CLASSIFICATION	1.3952287489964651E-5	IMPLEMENTATION
// arg grouping, use slower arg walking logic	WITHOUT_CLASSIFICATION	0.999933595175779	WITHOUT_CLASSIFICATION	6.640482422109742E-5	IMPLEMENTATION
// build scope names string	WITHOUT_CLASSIFICATION	0.9999538318826008	WITHOUT_CLASSIFICATION	4.616811739919968E-5	IMPLEMENTATION
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999991640891174	WITHOUT_CLASSIFICATION	8.359108826688949E-7	IMPLEMENTATION
// Here we create an "anonymous" exception type used for unrolling the stack. // MRI creates a new one for *every call* to timeout, which can be costly. // We opt to use a single exception type for all cases to avoid this overhead.	WITHOUT_CLASSIFICATION	0.9999895636315321	WITHOUT_CLASSIFICATION	1.0436368467958352E-5	IMPLEMENTATION
// finally	WITHOUT_CLASSIFICATION	0.9972791676948942	WITHOUT_CLASSIFICATION	0.002720832305105814	IMPLEMENTATION
// MRI behavior: With TZ equal to "GMT" or "UTC", Time.now // is *NOT* considered as a proper GMT/UTC time: //   ENV['TZ']="GMT" //   Time.now.gmt? ==> false //   ENV['TZ']="UTC" //   Time.now.utc? ==> false // Hence, we need to adjust for that.	WITHOUT_CLASSIFICATION	0.9999591245007114	WITHOUT_CLASSIFICATION	4.087549928852468E-5	IMPLEMENTATION
// ?l  | boolean | True if file1 exists and is a symbolic link	WITHOUT_CLASSIFICATION	0.9999698679894088	WITHOUT_CLASSIFICATION	3.0132010591211477E-5	IMPLEMENTATION
// This try/catch is to allow failing over to the "commands" logic // when running from within a jruby-complete jar file, which has // jruby.home = a jar file URL that does not resolve correctly with // JRubyFile.create.	WITHOUT_CLASSIFICATION	0.9999938473694605	WITHOUT_CLASSIFICATION	6.152630539521612E-6	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999211137008382	WITHOUT_CLASSIFICATION	7.888629916174846E-5	IMPLEMENTATION
// specific arity	WITHOUT_CLASSIFICATION	0.9999387669862144	WITHOUT_CLASSIFICATION	6.123301378558625E-5	IMPLEMENTATION
// In the case of two arguments, MRI will discard the portion of // the first argument after a decimal point (i.e., "floor"). // However in the case of a single argument, any portion after // the decimal point is honored.	WITHOUT_CLASSIFICATION	0.9999990635587391	WITHOUT_CLASSIFICATION	9.364412609139141E-7	IMPLEMENTATION
// ?w  | boolean | True if file1 exists and is writable by effective uid/gid	WITHOUT_CLASSIFICATION	0.9999699771719792	WITHOUT_CLASSIFICATION	3.002282802076245E-5	IMPLEMENTATION
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999342204880451	WITHOUT_CLASSIFICATION	6.577951195491736E-5	IMPLEMENTATION
/*    @JRubyMethod    public IRubyObject to_proc() {        return RubyProc.newProc(getRuntime(),                                CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()),                                Block.Type.PROC);    }    */	WITHOUT_CLASSIFICATION	0.9999924945001613	WITHOUT_CLASSIFICATION	7.505499838659595E-6	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999334115657806	WITHOUT_CLASSIFICATION	6.658843421927445E-5	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999334115657806	WITHOUT_CLASSIFICATION	6.658843421927445E-5	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999961690974191	WITHOUT_CLASSIFICATION	3.830902580900203E-6	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999961690974191	WITHOUT_CLASSIFICATION	3.830902580900203E-6	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9999546864646387	WITHOUT_CLASSIFICATION	4.531353536127511E-5	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9999546864646387	WITHOUT_CLASSIFICATION	4.531353536127511E-5	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999783125190216	WITHOUT_CLASSIFICATION	2.1687480978452146E-5	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999783125190216	WITHOUT_CLASSIFICATION	2.1687480978452146E-5	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999326262726952	WITHOUT_CLASSIFICATION	6.737372730489569E-5	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999326262726952	WITHOUT_CLASSIFICATION	6.737372730489569E-5	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999326262726952	WITHOUT_CLASSIFICATION	6.737372730489569E-5	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999326262726952	WITHOUT_CLASSIFICATION	6.737372730489569E-5	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999326262726952	WITHOUT_CLASSIFICATION	6.737372730489569E-5	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999326262726952	WITHOUT_CLASSIFICATION	6.737372730489569E-5	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999326262726952	WITHOUT_CLASSIFICATION	6.737372730489569E-5	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999326262726952	WITHOUT_CLASSIFICATION	6.737372730489569E-5	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999326262726952	WITHOUT_CLASSIFICATION	6.737372730489569E-5	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999668090182261	WITHOUT_CLASSIFICATION	3.319098177393251E-5	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999668090182261	WITHOUT_CLASSIFICATION	3.319098177393251E-5	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999668090182261	WITHOUT_CLASSIFICATION	3.319098177393251E-5	IMPLEMENTATION
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999748235625181	WITHOUT_CLASSIFICATION	2.5176437481973896E-5	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999980121892418	WITHOUT_CLASSIFICATION	1.987810758194028E-5	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999980121892418	WITHOUT_CLASSIFICATION	1.987810758194028E-5	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999980121892418	WITHOUT_CLASSIFICATION	1.987810758194028E-5	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999566254391059	WITHOUT_CLASSIFICATION	4.337456089406928E-5	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999566254391059	WITHOUT_CLASSIFICATION	4.337456089406928E-5	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999566254391059	WITHOUT_CLASSIFICATION	4.337456089406928E-5	IMPLEMENTATION
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999348266858641	WITHOUT_CLASSIFICATION	6.517331413600139E-5	IMPLEMENTATION
// backspace	WITHOUT_CLASSIFICATION	0.9999133628965357	WITHOUT_CLASSIFICATION	8.66371034643536E-5	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.999904698401697	WITHOUT_CLASSIFICATION	9.530159830288174E-5	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.999904698401697	WITHOUT_CLASSIFICATION	9.530159830288174E-5	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.999904698401697	WITHOUT_CLASSIFICATION	9.530159830288174E-5	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.999904698401697	WITHOUT_CLASSIFICATION	9.530159830288174E-5	IMPLEMENTATION
/* package-private */	WITHOUT_CLASSIFICATION	0.9999699940298586	WITHOUT_CLASSIFICATION	3.0005970141394063E-5	IMPLEMENTATION
// fall through	WITHOUT_CLASSIFICATION	0.9999588702596244	WITHOUT_CLASSIFICATION	4.1129740375658614E-5	IMPLEMENTATION
// fall through	WITHOUT_CLASSIFICATION	0.9999588702596244	WITHOUT_CLASSIFICATION	4.1129740375658614E-5	IMPLEMENTATION
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9999208984015695	WITHOUT_CLASSIFICATION	7.910159843051231E-5	IMPLEMENTATION
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999973582249114	WITHOUT_CLASSIFICATION	2.6417750886321815E-6	IMPLEMENTATION
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999973582249114	WITHOUT_CLASSIFICATION	2.6417750886321815E-6	IMPLEMENTATION
/**      * Nested class whose instances act as thunks reacting to to_str method     * called from (Exception#to_str, Exception#message)     * MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!",     * to_str implementation: "name_err_mesg_to_str"     *     * TODO: this class should not be lookupable     */	WITHOUT_CLASSIFICATION	0.6564603076666464	IMPLEMENTATION	0.3435396923333535	WITHOUT_CLASSIFICATION
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9999397269657017	WITHOUT_CLASSIFICATION	6.027303429826256E-5	IMPLEMENTATION
// The name of this source (e.g. a filename: foo.rb)	WITHOUT_CLASSIFICATION	0.9999782446363504	WITHOUT_CLASSIFICATION	2.1755363649577482E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999280420428835	WITHOUT_CLASSIFICATION	7.195795711643151E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999280420428835	WITHOUT_CLASSIFICATION	7.195795711643151E-5	IMPLEMENTATION
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9999950410569101	WITHOUT_CLASSIFICATION	4.958943089896739E-6	IMPLEMENTATION
// We yield here to hopefully permit the target thread to schedule // MRI immediately schedules it, so this is close but not exact	WITHOUT_CLASSIFICATION	0.999989362632907	WITHOUT_CLASSIFICATION	1.0637367093043578E-5	IMPLEMENTATION
// note that addMethod now does its own put, so any change made to // functionality here should be made there as well 	WITHOUT_CLASSIFICATION	0.9999447791673798	WITHOUT_CLASSIFICATION	5.5220832620177906E-5	IMPLEMENTATION
/* Currently dead code, but useful when we figure out how to actually perform translit.    private static boolean isTranslit(String encoding) {        return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false;    }*/	WITHOUT_CLASSIFICATION	0.9999949595713262	WITHOUT_CLASSIFICATION	5.040428673775364E-6	IMPLEMENTATION
// empirically it appears that to_ary coersions always return array or nil, so this // should always be an array by now.	WITHOUT_CLASSIFICATION	0.9999839002038994	WITHOUT_CLASSIFICATION	1.609979610060523E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999280420428835	WITHOUT_CLASSIFICATION	7.195795711643151E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999280420428835	WITHOUT_CLASSIFICATION	7.195795711643151E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999280420428835	WITHOUT_CLASSIFICATION	7.195795711643151E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999280420428835	WITHOUT_CLASSIFICATION	7.195795711643151E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999280420428835	WITHOUT_CLASSIFICATION	7.195795711643151E-5	IMPLEMENTATION
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999554021406963	WITHOUT_CLASSIFICATION	4.459785930371851E-5	IMPLEMENTATION
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999336238823511	WITHOUT_CLASSIFICATION	6.637611764889109E-5	IMPLEMENTATION
// if it's an inner class and it's not public, we can't access it; // skip population of declared elements	WITHOUT_CLASSIFICATION	0.999996961703859	WITHOUT_CLASSIFICATION	3.0382961410629562E-6	IMPLEMENTATION
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999432831563387	WITHOUT_CLASSIFICATION	5.671684366127514E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9996467834816601	WITHOUT_CLASSIFICATION	3.532165183397556E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9996467834816601	WITHOUT_CLASSIFICATION	3.532165183397556E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9996467834816601	WITHOUT_CLASSIFICATION	3.532165183397556E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9996467834816601	WITHOUT_CLASSIFICATION	3.532165183397556E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9996467834816601	WITHOUT_CLASSIFICATION	3.532165183397556E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9996467834816601	WITHOUT_CLASSIFICATION	3.532165183397556E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9996467834816601	WITHOUT_CLASSIFICATION	3.532165183397556E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9996467834816601	WITHOUT_CLASSIFICATION	3.532165183397556E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9996467834816601	WITHOUT_CLASSIFICATION	3.532165183397556E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9996467834816601	WITHOUT_CLASSIFICATION	3.532165183397556E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9996467834816601	WITHOUT_CLASSIFICATION	3.532165183397556E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9996467834816601	WITHOUT_CLASSIFICATION	3.532165183397556E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9996467834816601	WITHOUT_CLASSIFICATION	3.532165183397556E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9996467834816601	WITHOUT_CLASSIFICATION	3.532165183397556E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9996467834816601	WITHOUT_CLASSIFICATION	3.532165183397556E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9996467834816601	WITHOUT_CLASSIFICATION	3.532165183397556E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9996467834816601	WITHOUT_CLASSIFICATION	3.532165183397556E-4	IMPLEMENTATION
// MRI behavior on Windows: it treats '/' as a root of // a current drive (but only if SINGLE slash is present!): // E.g., if current work directory is // 'D:/home/directory', then '/' means 'D:/'. // // Basically, '/path' is treated as a *RELATIVE* path, // relative to the current drive. '//path' is treated // as absolute one.	WITHOUT_CLASSIFICATION	0.9999982194356607	WITHOUT_CLASSIFICATION	1.7805643392600794E-6	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9996467834816601	WITHOUT_CLASSIFICATION	3.532165183397556E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9996467834816601	WITHOUT_CLASSIFICATION	3.532165183397556E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9996467834816601	WITHOUT_CLASSIFICATION	3.532165183397556E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9996467834816601	WITHOUT_CLASSIFICATION	3.532165183397556E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9996467834816601	WITHOUT_CLASSIFICATION	3.532165183397556E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9996467834816601	WITHOUT_CLASSIFICATION	3.532165183397556E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9996467834816601	WITHOUT_CLASSIFICATION	3.532165183397556E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9996467834816601	WITHOUT_CLASSIFICATION	3.532165183397556E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9996467834816601	WITHOUT_CLASSIFICATION	3.532165183397556E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9996467834816601	WITHOUT_CLASSIFICATION	3.532165183397556E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9996467834816601	WITHOUT_CLASSIFICATION	3.532165183397556E-4	IMPLEMENTATION
// This is needed when the enclosing class or module is a singleton. // In that case, we generated a name such as null::Foo, which broke  // Marshalling, among others. The correct thing to do in this situation  // is to insert the generate the name of form #<Class:01xasdfasd> if  // it's a singleton module/class, which this code accomplishes.	WITHOUT_CLASSIFICATION	0.9999956664994172	WITHOUT_CLASSIFICATION	4.333500582815314E-6	IMPLEMENTATION
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9999951213208197	WITHOUT_CLASSIFICATION	4.8786791803159855E-6	IMPLEMENTATION
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999724552900636	WITHOUT_CLASSIFICATION	2.7544709936356057E-5	IMPLEMENTATION
// get "self"	WITHOUT_CLASSIFICATION	0.9999466943743146	WITHOUT_CLASSIFICATION	5.330562568548786E-5	IMPLEMENTATION
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999527919159562	WITHOUT_CLASSIFICATION	4.720808404392116E-5	IMPLEMENTATION
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9999488072827319	WITHOUT_CLASSIFICATION	5.119271726812373E-5	IMPLEMENTATION
// only public methods	WITHOUT_CLASSIFICATION	0.9999674637198417	WITHOUT_CLASSIFICATION	3.253628015837199E-5	IMPLEMENTATION
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.999987017909034	WITHOUT_CLASSIFICATION	1.2982090966041532E-5	IMPLEMENTATION
// First try to use drive letter from supplied dir value, // then try current work dir.	WITHOUT_CLASSIFICATION	0.9999901940907872	WITHOUT_CLASSIFICATION	9.805909212828099E-6	IMPLEMENTATION
// JRUBY-2435: Aliasing eval and other "special" methods should display a warning // We warn because we treat certain method names as "special" for purposes of // optimization. Hopefully this will be enough to convince people not to alias // them.	WITHOUT_CLASSIFICATION	0.9999394740994909	WITHOUT_CLASSIFICATION	6.0525900508958004E-5	IMPLEMENTATION
// generate a real method signature for the method, with to/from coercions	WITHOUT_CLASSIFICATION	0.9999837365390052	WITHOUT_CLASSIFICATION	1.6263460994877407E-5	IMPLEMENTATION
// block argument to the method // closure present // class present // method table mutations, def, defs, undef, alias // likely call to eval // makes calls that are aware of the frame // makes calls that are aware of the frame's self // makes calls that are aware of the frame's visibility // makes calls that are aware of the frame's block // makes calls that are aware of the frame's name // makes calls that set or get backref // makes calls that set or get lastline // makes calls that are aware of the frame's class // optional arguments to the method // rest arg to the method // makes calls that are aware of the scope // makes a zero-argument super call // accesses or sets constants // accesses or sets class variables // makes normal super call // contains a retry	WITHOUT_CLASSIFICATION	0.999999838526638	WITHOUT_CLASSIFICATION	1.6147336210371788E-7	IMPLEMENTATION
// // Add aliases in Type::*, NativeType::* and FFI::TYPE_* //	WITHOUT_CLASSIFICATION	0.9999563340452353	WITHOUT_CLASSIFICATION	4.366595476460267E-5	IMPLEMENTATION
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999838149415253	WITHOUT_CLASSIFICATION	1.6185058474638727E-5	IMPLEMENTATION
// double-testing args.length here, but it avoids duplicating the proc-setup code in two places	WITHOUT_CLASSIFICATION	0.9999901508577832	WITHOUT_CLASSIFICATION	9.849142216747734E-6	IMPLEMENTATION
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999618725220888	WITHOUT_CLASSIFICATION	3.8127477911223226E-5	IMPLEMENTATION
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999631876508701	WITHOUT_CLASSIFICATION	3.681234912983808E-5	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999543034883959	WITHOUT_CLASSIFICATION	4.569651160414094E-5	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999543034883959	WITHOUT_CLASSIFICATION	4.569651160414094E-5	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999543034883959	WITHOUT_CLASSIFICATION	4.569651160414094E-5	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999543034883959	WITHOUT_CLASSIFICATION	4.569651160414094E-5	IMPLEMENTATION
// snapshot of contents of directory // current position in directory	WITHOUT_CLASSIFICATION	0.9999962980098595	WITHOUT_CLASSIFICATION	3.7019901404978395E-6	IMPLEMENTATION
// Exclusive locks in Java require the channel to be writable, otherwise // an exception is thrown (terminating JRuby execution). // But flock behavior of MRI is that it allows // exclusive locks even on non-writable file. So we convert exclusive // lock to shared lock if the channel is not writable, to better match // the MRI behavior.	WITHOUT_CLASSIFICATION	0.9999963211162446	WITHOUT_CLASSIFICATION	3.6788837552797204E-6	IMPLEMENTATION
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999597169415374	WITHOUT_CLASSIFICATION	4.028305846257487E-5	IMPLEMENTATION
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999597169415374	WITHOUT_CLASSIFICATION	4.028305846257487E-5	IMPLEMENTATION
// set self to the class	WITHOUT_CLASSIFICATION	0.9999838779275686	WITHOUT_CLASSIFICATION	1.612207243137299E-5	IMPLEMENTATION
/* ---------- Public fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999809747994246	WITHOUT_CLASSIFICATION	1.9025200575485696E-5	IMPLEMENTATION
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999756815183443	WITHOUT_CLASSIFICATION	2.4318481655709505E-5	IMPLEMENTATION
// zero args, no block; do nothing	WITHOUT_CLASSIFICATION	0.999981383157503	WITHOUT_CLASSIFICATION	1.86168424970031E-5	IMPLEMENTATION
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999885706140469	WITHOUT_CLASSIFICATION	1.142938595317272E-5	IMPLEMENTATION
// Store each line into this list if not null.	WITHOUT_CLASSIFICATION	0.9999464464543499	WITHOUT_CLASSIFICATION	5.355354565002908E-5	IMPLEMENTATION
// Portion of line right after beginning marker	WITHOUT_CLASSIFICATION	0.9999544257395137	WITHOUT_CLASSIFICATION	4.5574260486426626E-5	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999848484636972	WITHOUT_CLASSIFICATION	1.5151536302764789E-5	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999848484636972	WITHOUT_CLASSIFICATION	1.5151536302764789E-5	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999848484636972	WITHOUT_CLASSIFICATION	1.5151536302764789E-5	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999848484636972	WITHOUT_CLASSIFICATION	1.5151536302764789E-5	IMPLEMENTATION
// If an IO exception occurs (something odd, but possible) // A directory may return null.	WITHOUT_CLASSIFICATION	0.9999895463662813	WITHOUT_CLASSIFICATION	1.0453633718625664E-5	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.999998896775503	WITHOUT_CLASSIFICATION	1.1032244969089695E-6	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.999998896775503	WITHOUT_CLASSIFICATION	1.1032244969089695E-6	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.999998896775503	WITHOUT_CLASSIFICATION	1.1032244969089695E-6	IMPLEMENTATION
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999534890805449	WITHOUT_CLASSIFICATION	4.65109194550887E-5	IMPLEMENTATION
// finally with no exception	WITHOUT_CLASSIFICATION	0.9999380784119557	WITHOUT_CLASSIFICATION	6.192158804433488E-5	IMPLEMENTATION
// Now, for all variables used by 'i' mark them live before 'i'	WITHOUT_CLASSIFICATION	0.9999782026876498	WITHOUT_CLASSIFICATION	2.179731235026001E-5	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9418741805737971	WITHOUT_CLASSIFICATION	0.05812581942620288	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9418741805737971	WITHOUT_CLASSIFICATION	0.05812581942620288	IMPLEMENTATION
/* The counting of slashes that follows is simply a way to adhere to          * Ruby's UNC (or something) compatibility. When Ruby's expand_path is          * called with "//foo//bar" it will return "//foo/bar". JRuby uses          * java.io.File, and hence returns "/foo/bar". In order to retain          * java.io.File in the lower layers and provide full Ruby          * compatibility, the number of extra slashes must be counted and          * prepended to the result.         */	WITHOUT_CLASSIFICATION	0.9999998197573023	WITHOUT_CLASSIFICATION	1.802426976719003E-7	IMPLEMENTATION
// This is almost always already interned, since it will be called with a symbol in most cases // but when created from Java code, we might get an argument that needs to be interned. // addAccessor has as a precondition that the string MUST be interned	WITHOUT_CLASSIFICATION	0.999999635833149	WITHOUT_CLASSIFICATION	3.6416685102387926E-7	IMPLEMENTATION
/* not a class */	WITHOUT_CLASSIFICATION	0.9999529922221525	WITHOUT_CLASSIFICATION	4.7007777847528E-5	IMPLEMENTATION
/* not a class */	WITHOUT_CLASSIFICATION	0.9999529922221525	WITHOUT_CLASSIFICATION	4.7007777847528E-5	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999573619867622	WITHOUT_CLASSIFICATION	4.2638013237769585E-5	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999573619867622	WITHOUT_CLASSIFICATION	4.2638013237769585E-5	IMPLEMENTATION
// io.available() only returns 0 after EOF is encountered // so we need to differentiate between the empty string and EOF	WITHOUT_CLASSIFICATION	0.9999944757645878	WITHOUT_CLASSIFICATION	5.524235412212849E-6	IMPLEMENTATION
// In the current logic, if we get here we know that module is not an // IncludedModuleWrapper, so there's no need to fish out the delegate. But just // in case the logic should change later, let's do it anyway	WITHOUT_CLASSIFICATION	0.9999976721049905	WITHOUT_CLASSIFICATION	2.3278950095876983E-6	IMPLEMENTATION
// rb_iterate((VALUE(*)_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);	WITHOUT_CLASSIFICATION	0.9999277352048234	WITHOUT_CLASSIFICATION	7.2264795176665E-5	IMPLEMENTATION
// Broken symlinks considered by exists() as non-existing, // so we need to check for symlinks explicitly.	WITHOUT_CLASSIFICATION	0.9999702613796598	WITHOUT_CLASSIFICATION	2.973862034006933E-5	IMPLEMENTATION
// ////////////////// CONSTANT API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999958800612196	WITHOUT_CLASSIFICATION	4.119938780449386E-6	IMPLEMENTATION
// create the default thread group	WITHOUT_CLASSIFICATION	0.9999976086663122	WITHOUT_CLASSIFICATION	2.3913336878412835E-6	IMPLEMENTATION
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999636136818262	WITHOUT_CLASSIFICATION	3.6386318173822345E-5	IMPLEMENTATION
/* ============================     * Here are hash internals     * (This could be extracted to a separate class but it's not too large though)     * ============================     */	WITHOUT_CLASSIFICATION	0.9999928529632978	WITHOUT_CLASSIFICATION	7.147036702203834E-6	IMPLEMENTATION
// ////////////////// LOW-LEVEL CLASS VARIABLE INTERFACE //////////////// // // fetch/store/list class variables for this module //	WITHOUT_CLASSIFICATION	0.9999994149151328	WITHOUT_CLASSIFICATION	5.85084867258248E-7	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999823954710023	WITHOUT_CLASSIFICATION	1.7604528997610696E-5	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999823954710023	WITHOUT_CLASSIFICATION	1.7604528997610696E-5	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999800771726497	WITHOUT_CLASSIFICATION	1.9922827350395652E-5	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999800771726497	WITHOUT_CLASSIFICATION	1.9922827350395652E-5	IMPLEMENTATION
// retuns null when not found to avoid unnecessary getRuntime().getNil() call	WITHOUT_CLASSIFICATION	0.9999764728740363	WITHOUT_CLASSIFICATION	2.3527125963705663E-5	IMPLEMENTATION
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.999996244903639	WITHOUT_CLASSIFICATION	3.7550963610451376E-6	IMPLEMENTATION
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999053960346399	WITHOUT_CLASSIFICATION	9.460396536004441E-5	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999785277397367	WITHOUT_CLASSIFICATION	2.147226026333308E-5	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999785277397367	WITHOUT_CLASSIFICATION	2.147226026333308E-5	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999785277397367	WITHOUT_CLASSIFICATION	2.147226026333308E-5	IMPLEMENTATION
// line 286	WITHOUT_CLASSIFICATION	0.9999306810570476	WITHOUT_CLASSIFICATION	6.931894295236096E-5	IMPLEMENTATION
// line 476	WITHOUT_CLASSIFICATION	0.999930291541616	WITHOUT_CLASSIFICATION	6.970845838401249E-5	IMPLEMENTATION
// line 513	WITHOUT_CLASSIFICATION	0.999930291541616	WITHOUT_CLASSIFICATION	6.970845838401249E-5	IMPLEMENTATION
// line 530	WITHOUT_CLASSIFICATION	0.999930291541616	WITHOUT_CLASSIFICATION	6.970845838401249E-5	IMPLEMENTATION
// line 533	WITHOUT_CLASSIFICATION	0.999930291541616	WITHOUT_CLASSIFICATION	6.970845838401249E-5	IMPLEMENTATION
// line 537	WITHOUT_CLASSIFICATION	0.999930291541616	WITHOUT_CLASSIFICATION	6.970845838401249E-5	IMPLEMENTATION
// line 551	WITHOUT_CLASSIFICATION	0.999930291541616	WITHOUT_CLASSIFICATION	6.970845838401249E-5	IMPLEMENTATION
// end loop	WITHOUT_CLASSIFICATION	0.9999325471560612	WITHOUT_CLASSIFICATION	6.745284393880352E-5	IMPLEMENTATION
// MRI behavior: we don't print errno for actual Errno errors	WITHOUT_CLASSIFICATION	0.9999668668255459	WITHOUT_CLASSIFICATION	3.31331744540705E-5	IMPLEMENTATION
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999710550367534	WITHOUT_CLASSIFICATION	2.8944963246585647E-5	IMPLEMENTATION
// Traverse the instructions in this basic block in reverse order! // Mark as dead all instructions whose results are not used! 	WITHOUT_CLASSIFICATION	0.9999515609295001	WITHOUT_CLASSIFICATION	4.843907049997387E-5	IMPLEMENTATION
// // fields should really be an immutable map as it is never modified after construction //	WITHOUT_CLASSIFICATION	0.9998954050292614	WITHOUT_CLASSIFICATION	1.0459497073858112E-4	IMPLEMENTATION
// load self object as IRubyObject, for recv param	WITHOUT_CLASSIFICATION	0.9999687351571594	WITHOUT_CLASSIFICATION	3.126484284055276E-5	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9418741805737971	WITHOUT_CLASSIFICATION	0.05812581942620288	IMPLEMENTATION
// If we define a class in Ruby, but later want to allow it to be defined in Java, // the allocator needs to be updated	WITHOUT_CLASSIFICATION	0.9999824488275013	WITHOUT_CLASSIFICATION	1.755117249866291E-5	IMPLEMENTATION
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9999781494299893	WITHOUT_CLASSIFICATION	2.1850570010612447E-5	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999527072245055	WITHOUT_CLASSIFICATION	4.729277549445446E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999053960346399	WITHOUT_CLASSIFICATION	9.460396536004441E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9965931147226144	WITHOUT_CLASSIFICATION	0.0034068852773856194	IMPLEMENTATION
// MRI has extra pointer which makes our code look a little bit // more strange in // comparison	WITHOUT_CLASSIFICATION	0.9999359813496089	WITHOUT_CLASSIFICATION	6.401865039103385E-5	IMPLEMENTATION
// Tempory buffer to build up a potential token.  Consumer takes responsibility to reset  // this before use.	WITHOUT_CLASSIFICATION	0.9999602263274554	WITHOUT_CLASSIFICATION	3.9773672544529725E-5	IMPLEMENTATION
//tmpPosition is required because getPosition()'s side effects. //if the warning is generated, the getPosition() on line 954 (this line + 18) will create //a wrong position if the "inclusive" flag is not set.	WITHOUT_CLASSIFICATION	0.9999961116510222	WITHOUT_CLASSIFICATION	3.8883489778212296E-6	IMPLEMENTATION
/* What is \v in C?                    case '\v':                        c2 = 'v';                        break;                        */	WITHOUT_CLASSIFICATION	0.9999820563095069	WITHOUT_CLASSIFICATION	1.7943690493085097E-5	IMPLEMENTATION
/* Consider Thread aspects of this */	WITHOUT_CLASSIFICATION	0.9999350849173071	WITHOUT_CLASSIFICATION	6.49150826929514E-5	IMPLEMENTATION
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.999998292779234	WITHOUT_CLASSIFICATION	1.7072207660536097E-6	IMPLEMENTATION
// An interrupt or timeout may have caused us to miss // a notify that we consumed, so do another notify in // case someone else is available to pick it up.	WITHOUT_CLASSIFICATION	0.999989624180492	WITHOUT_CLASSIFICATION	1.0375819508129739E-5	IMPLEMENTATION
// line 572	WITHOUT_CLASSIFICATION	0.999930291541616	WITHOUT_CLASSIFICATION	6.970845838401249E-5	IMPLEMENTATION
// line 601	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 601	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 625	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 649	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 691	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 723	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 732	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 745	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 766	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 785	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 794	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 800	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 812	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 827	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 839	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 845	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 864	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 886	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 896	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 911	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 929	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 952	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 970	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 972	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 991	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 1011	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1026	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1038	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1067	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1085	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1097	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1105	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1122	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1133	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1145	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1169	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1201	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1210	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1229	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1261	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1287	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1293	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1307	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1320	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1325	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1363	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1398	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1448	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1456	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1473	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1492	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1513	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1523	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1562	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1582	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1603	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1603	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1615	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1620	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1635	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1652	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1681	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1708	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1716	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1755	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1772	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1789	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999067816120032	WITHOUT_CLASSIFICATION	9.32183879968284E-5	IMPLEMENTATION
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999067816120032	WITHOUT_CLASSIFICATION	9.32183879968284E-5	IMPLEMENTATION
/* force for args */	WITHOUT_CLASSIFICATION	0.9999153987062342	WITHOUT_CLASSIFICATION	8.46012937657019E-5	IMPLEMENTATION
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9999172480573176	WITHOUT_CLASSIFICATION	8.275194268237513E-5	IMPLEMENTATION
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9999617275066816	WITHOUT_CLASSIFICATION	3.827249331842157E-5	IMPLEMENTATION
// We can assign if we already have variable of that name here or we are the only // scope in the chain (which Local scopes always are).	WITHOUT_CLASSIFICATION	0.9999967978748512	WITHOUT_CLASSIFICATION	3.2021251487956587E-6	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999947589468533	WITHOUT_CLASSIFICATION	5.241053146767988E-6	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999947589468533	WITHOUT_CLASSIFICATION	5.241053146767988E-6	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999947589468533	WITHOUT_CLASSIFICATION	5.241053146767988E-6	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999947589468533	WITHOUT_CLASSIFICATION	5.241053146767988E-6	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9997064169900142	WITHOUT_CLASSIFICATION	2.935830099857768E-4	IMPLEMENTATION
/*     * This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:)     * into individual whenNodes.  The primary reason for this is to ensure lazy evaluation of     * the arguments (when foo,bar,gar:) to prevent side-effects.  In the old code this was done     * using nested when statements, which was awful for interpreter and compilation.     *     * Notes: This has semantic equivalence but will not be lexically equivalent.  Compiler     * needs to detect same bodies to simplify bytecode generated.     */	WITHOUT_CLASSIFICATION	0.9999952451938537	WITHOUT_CLASSIFICATION	4.75480614624004E-6	IMPLEMENTATION
// line 313	WITHOUT_CLASSIFICATION	0.9999303307352446	WITHOUT_CLASSIFICATION	6.966926475548282E-5	IMPLEMENTATION
// line 339	WITHOUT_CLASSIFICATION	0.9999303072217124	WITHOUT_CLASSIFICATION	6.969277828760286E-5	IMPLEMENTATION
// line 361	WITHOUT_CLASSIFICATION	0.9999303072217124	WITHOUT_CLASSIFICATION	6.969277828760286E-5	IMPLEMENTATION
// line 413	WITHOUT_CLASSIFICATION	0.999930291541616	WITHOUT_CLASSIFICATION	6.970845838401249E-5	IMPLEMENTATION
// line 451	WITHOUT_CLASSIFICATION	0.999930291541616	WITHOUT_CLASSIFICATION	6.970845838401249E-5	IMPLEMENTATION
// line 472	WITHOUT_CLASSIFICATION	0.999930291541616	WITHOUT_CLASSIFICATION	6.970845838401249E-5	IMPLEMENTATION
// line 500	WITHOUT_CLASSIFICATION	0.999930291541616	WITHOUT_CLASSIFICATION	6.970845838401249E-5	IMPLEMENTATION
// line 515	WITHOUT_CLASSIFICATION	0.999930291541616	WITHOUT_CLASSIFICATION	6.970845838401249E-5	IMPLEMENTATION
// line 555	WITHOUT_CLASSIFICATION	0.999930291541616	WITHOUT_CLASSIFICATION	6.970845838401249E-5	IMPLEMENTATION
// line 582	WITHOUT_CLASSIFICATION	0.999930291541616	WITHOUT_CLASSIFICATION	6.970845838401249E-5	IMPLEMENTATION
// line 619	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 636	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 669	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 703	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 776	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 814	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 823	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 854	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 872	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 905	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 925	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 958	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 992	WITHOUT_CLASSIFICATION	0.9999302585162336	WITHOUT_CLASSIFICATION	6.974148376640241E-5	IMPLEMENTATION
// line 1047	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1072	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1081	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1108	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1136	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1168	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1192	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1241	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1267	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1286	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1301	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1314	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1333	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1362	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1395	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1420	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1439	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1476	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1535	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1588	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1618	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1643	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1669	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1728	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1753	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1779	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1794	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1812	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1837	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1895	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1925	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1950	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 1992	WITHOUT_CLASSIFICATION	0.999930777002667	WITHOUT_CLASSIFICATION	6.922299733296373E-5	IMPLEMENTATION
// line 2014	WITHOUT_CLASSIFICATION	0.9999306636346706	WITHOUT_CLASSIFICATION	6.933636532932711E-5	IMPLEMENTATION
// Whether this scope is used as the "argument scope" for e.g. zsuper	WITHOUT_CLASSIFICATION	0.9999715302461663	WITHOUT_CLASSIFICATION	2.846975383375943E-5	IMPLEMENTATION
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999894085934226	WITHOUT_CLASSIFICATION	1.0591406577498794E-5	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999844920521573	WITHOUT_CLASSIFICATION	1.550794784272396E-5	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999844920521573	WITHOUT_CLASSIFICATION	1.550794784272396E-5	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999844920521573	WITHOUT_CLASSIFICATION	1.550794784272396E-5	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999844920521573	WITHOUT_CLASSIFICATION	1.550794784272396E-5	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999844920521573	WITHOUT_CLASSIFICATION	1.550794784272396E-5	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999844920521573	WITHOUT_CLASSIFICATION	1.550794784272396E-5	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999844920521573	WITHOUT_CLASSIFICATION	1.550794784272396E-5	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999739265530936	WITHOUT_CLASSIFICATION	2.6073446906327662E-5	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999739265530936	WITHOUT_CLASSIFICATION	2.6073446906327662E-5	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999739265530936	WITHOUT_CLASSIFICATION	2.6073446906327662E-5	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999739265530936	WITHOUT_CLASSIFICATION	2.6073446906327662E-5	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9998464912379896	WITHOUT_CLASSIFICATION	1.5350876201034253E-4	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9998464912379896	WITHOUT_CLASSIFICATION	1.5350876201034253E-4	IMPLEMENTATION
// We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the // 'b' will get put into this new dynamic scope.  The original scope does not see the new // 'b' and successive evals with this binding will.  I take it having the ability to have  // succesive binding evals be able to share same scope makes sense from a programmers  // perspective.   One crappy outcome of this design is it requires Dynamic and Static  // scopes to be mutable for this one case.	WITHOUT_CLASSIFICATION	0.9999999463847739	WITHOUT_CLASSIFICATION	5.3615226243902846E-8	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999893892801179	WITHOUT_CLASSIFICATION	1.061071988194027E-5	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999893892801179	WITHOUT_CLASSIFICATION	1.061071988194027E-5	IMPLEMENTATION
// tc // under method // self // under method // name // args	WITHOUT_CLASSIFICATION	0.9999510257862902	WITHOUT_CLASSIFICATION	4.8974213709868476E-5	IMPLEMENTATION
// allow it to bubble up	WITHOUT_CLASSIFICATION	0.9999227932321391	WITHOUT_CLASSIFICATION	7.720676786095781E-5	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999587132341099	WITHOUT_CLASSIFICATION	4.128676589011975E-5	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999587132341099	WITHOUT_CLASSIFICATION	4.128676589011975E-5	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999587132341099	WITHOUT_CLASSIFICATION	4.128676589011975E-5	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999587132341099	WITHOUT_CLASSIFICATION	4.128676589011975E-5	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999587132341099	WITHOUT_CLASSIFICATION	4.128676589011975E-5	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999587132341099	WITHOUT_CLASSIFICATION	4.128676589011975E-5	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999587132341099	WITHOUT_CLASSIFICATION	4.128676589011975E-5	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999559918081758	WITHOUT_CLASSIFICATION	4.400819182410979E-5	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999553783758953	WITHOUT_CLASSIFICATION	4.462162410460778E-5	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999542560277328	WITHOUT_CLASSIFICATION	4.574397226715674E-5	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999542560277328	WITHOUT_CLASSIFICATION	4.574397226715674E-5	IMPLEMENTATION
// Check for a builtin first.	WITHOUT_CLASSIFICATION	0.9999827832814363	WITHOUT_CLASSIFICATION	1.7216718563698753E-5	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999614000948536	WITHOUT_CLASSIFICATION	3.859990514643303E-5	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999614000948536	WITHOUT_CLASSIFICATION	3.859990514643303E-5	IMPLEMENTATION
// Unfortunately, the number of digits in the exponent is // not clearly defined in Ruby documentation. This is a // platform/version-dependent behavior. On Linux/Mac/Cygwin/*nix, // two digits are used. On Windows, 3 digits are used. // It is desirable for JRuby to have consistent behavior, and // the two digits behavior was selected. This is also in sync // with "Java-native" sprintf behavior (java.util.Formatter). // E or e	WITHOUT_CLASSIFICATION	0.9999988830307686	WITHOUT_CLASSIFICATION	1.1169692314575383E-6	IMPLEMENTATION
/** * Represents the the dynamic portion of scoping information.  The variableValues are the * values of assigned local or block variables.  The staticScope identifies which sort of * scope this is (block or local). *  * Properties of Dynamic Scopes: * 1. static and dynamic scopes have the same number of names to values * 2. size of variables (and thus names) is determined during parsing.  So those structured do *    not need to change * * FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents.  This * is harmless (other than wasting memory), but we should not do that.  We can fix this in two * ways: * 1. Fix all callers * 2. Check parent that is passed in and make if new instance is local, then its parent is not local */	WITHOUT_CLASSIFICATION	0.9999986000209057	WITHOUT_CLASSIFICATION	1.3999790942908905E-6	IMPLEMENTATION
// This method handles '**/' patterns and delegates to // fnmatch_helper for the main work.	WITHOUT_CLASSIFICATION	0.999967294458795	WITHOUT_CLASSIFICATION	3.270554120504592E-5	IMPLEMENTATION
// Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern  // Example: foo{a{c},b}bar -> fooa{c}bar, foobbar	WITHOUT_CLASSIFICATION	0.9999441247933676	WITHOUT_CLASSIFICATION	5.587520663243593E-5	IMPLEMENTATION
// double precision, native // double precision, native	WITHOUT_CLASSIFICATION	0.9999651505138374	WITHOUT_CLASSIFICATION	3.484948616252196E-5	IMPLEMENTATION
// 64-bit number, native (as bignum)	WITHOUT_CLASSIFICATION	0.9998927728698931	WITHOUT_CLASSIFICATION	1.072271301069393E-4	IMPLEMENTATION
// Next indicates to decode using native encoding format	WITHOUT_CLASSIFICATION	0.999953739396248	WITHOUT_CLASSIFICATION	4.626060375191513E-5	IMPLEMENTATION
// calculate based on a, b, c and d	WITHOUT_CLASSIFICATION	0.9999728467318973	WITHOUT_CLASSIFICATION	2.7153268102611854E-5	IMPLEMENTATION
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999858697101219	WITHOUT_CLASSIFICATION	1.4130289877997032E-5	IMPLEMENTATION
// MRI behavior:  for 'Q', do not add trailing nils	WITHOUT_CLASSIFICATION	0.9999638018929158	WITHOUT_CLASSIFICATION	3.6198107084220426E-5	IMPLEMENTATION
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9999713541206648	WITHOUT_CLASSIFICATION	2.8645879335178786E-5	IMPLEMENTATION
// exec needs to behave differently in-process, because it's technically // supposed to replace the calling process. So if we're supposed to run // in-process, we allow it to use the default streams and not use // pumpers at all. See JRUBY-2156 and JRUBY-2154.	WITHOUT_CLASSIFICATION	0.9999951665108195	WITHOUT_CLASSIFICATION	4.833489180407713E-6	IMPLEMENTATION
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999977331584652	WITHOUT_CLASSIFICATION	2.266841534863093E-6	IMPLEMENTATION
// The problem we trying to solve below: STDIN in Java // is blocked and non-interruptible, so if we invoke read // on it, we might never be able to interrupt such thread. // So, we use in.available() to see if there is any input // ready, and only then read it. But this approach can't // tell whether the end of stream reached or not, so we // might end up looping right at the end of the stream. // Well, at least, we can improve the situation by checking // if some input was ever available, and if so, not // checking for available anymore, and just go to read.	WITHOUT_CLASSIFICATION	0.9999999422636295	WITHOUT_CLASSIFICATION	5.773637055076821E-8	IMPLEMENTATION
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999690580312303	WITHOUT_CLASSIFICATION	3.0941968769742114E-5	IMPLEMENTATION
// an empirically derived rule: precision applies to // significand length, irrespective of exponent	WITHOUT_CLASSIFICATION	0.9999348216243175	WITHOUT_CLASSIFICATION	6.517837568257582E-5	IMPLEMENTATION
// an official rule, clarified: if the exponent // <clarif>after adjusting for exponent form</clarif> // is < -4,  or the exponent <clarif>after adjusting  // for exponent form</clarif> is greater than the // precision, use exponent form	WITHOUT_CLASSIFICATION	0.9999913066066299	WITHOUT_CLASSIFICATION	8.693393370153567E-6	IMPLEMENTATION
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9999485467065861	WITHOUT_CLASSIFICATION	5.145329341400008E-5	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9999324286757508	WITHOUT_CLASSIFICATION	6.757132424913367E-5	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9999324286757508	WITHOUT_CLASSIFICATION	6.757132424913367E-5	IMPLEMENTATION
// MRI behavior: validate only the unnumbered arguments	WITHOUT_CLASSIFICATION	0.9999697871636213	WITHOUT_CLASSIFICATION	3.0212836378664343E-5	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999415449409887	WITHOUT_CLASSIFICATION	5.8455059011272345E-5	IMPLEMENTATION
// calculation for simple (and typical) case, // adapted from sun.misc.FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999580633076409	WITHOUT_CLASSIFICATION	4.193669235913651E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9968295876313907	WITHOUT_CLASSIFICATION	0.0031704123686091554	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999055665005765	WITHOUT_CLASSIFICATION	9.443349942346017E-5	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999055665005765	WITHOUT_CLASSIFICATION	9.443349942346017E-5	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999055665005765	WITHOUT_CLASSIFICATION	9.443349942346017E-5	IMPLEMENTATION
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9999153312155642	WITHOUT_CLASSIFICATION	8.466878443572506E-5	IMPLEMENTATION
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999573660626632	WITHOUT_CLASSIFICATION	4.263393733685916E-5	IMPLEMENTATION
// call chmod after we created the RandomAccesFile // because otherwise, the file could be read-only	WITHOUT_CLASSIFICATION	0.9999666421148261	WITHOUT_CLASSIFICATION	3.335788517386787E-5	IMPLEMENTATION
// attempt to set the permissions, if we have been passed a POSIX instance, // and only if the file was created in this call.	WITHOUT_CLASSIFICATION	0.9999985094560304	WITHOUT_CLASSIFICATION	1.4905439696575268E-6	IMPLEMENTATION
// // When reading into a heap buffer, the jvm allocates a temporary // direct ByteBuffer of the requested size.  To avoid allocating // a huge direct buffer when doing ludicrous reads (e.g. 1G or more) // we split the read up into chunks of no more than 1M //	WITHOUT_CLASSIFICATION	0.9999944506533945	WITHOUT_CLASSIFICATION	5.5493466054612416E-6	IMPLEMENTATION
// // If it is a file channel, then we can pre-allocate the output buffer // to the total size of buffered + remaining bytes in file //	WITHOUT_CLASSIFICATION	0.9999909798101585	WITHOUT_CLASSIFICATION	9.0201898415304E-6	IMPLEMENTATION
// // Cannot discern the total read length - allocate at least enough for the buffered data //	WITHOUT_CLASSIFICATION	0.9999816965772361	WITHOUT_CLASSIFICATION	1.8303422763933047E-5	IMPLEMENTATION
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999897455099744	WITHOUT_CLASSIFICATION	1.0254490025490668E-5	IMPLEMENTATION
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999462821147678	WITHOUT_CLASSIFICATION	5.371788523211504E-5	IMPLEMENTATION
// already have some bytes buffered, just return those	WITHOUT_CLASSIFICATION	0.9999893276813399	WITHOUT_CLASSIFICATION	1.0672318660116186E-5	IMPLEMENTATION
// reset buffer	WITHOUT_CLASSIFICATION	0.9999537580098876	WITHOUT_CLASSIFICATION	4.624199011233173E-5	IMPLEMENTATION
// // Synchronize and re-check to avoid creating more than one Selector per provider //	WITHOUT_CLASSIFICATION	0.9999420299274442	WITHOUT_CLASSIFICATION	5.797007255573535E-5	IMPLEMENTATION
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.8155399095837944	WITHOUT_CLASSIFICATION	0.18446009041620554	IMPLEMENTATION
// Is there something built into JRuby to do this?	WITHOUT_CLASSIFICATION	0.9999440068160625	WITHOUT_CLASSIFICATION	5.5993183937432747E-5	IMPLEMENTATION
// Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long // assertTrue(value == valueViaValuesIterator);	WITHOUT_CLASSIFICATION	0.9999958919273974	WITHOUT_CLASSIFICATION	4.1080726026289355E-6	IMPLEMENTATION
// value equality //result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); //assertEquals("two", result);	WITHOUT_CLASSIFICATION	0.9999921072187966	WITHOUT_CLASSIFICATION	7.892781203352429E-6	IMPLEMENTATION
// Uncomment the "puts" lines if you want to see more detail	WITHOUT_CLASSIFICATION	0.9999470719344813	WITHOUT_CLASSIFICATION	5.292806551873437E-5	IMPLEMENTATION
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999961886066397	WITHOUT_CLASSIFICATION	3.8113933602095145E-6	IMPLEMENTATION
// change the thread context to include the class	WITHOUT_CLASSIFICATION	0.9999707357049133	WITHOUT_CLASSIFICATION	2.92642950866285E-5	IMPLEMENTATION
