// TODO: warn "tried to create Proc object without a block"	IMPLEMENTATION	0.9641974119131718	WITHOUT_CLASSIFICATION	0.03580258808682823	IMPLEMENTATION
// TODO: CLONE_SETUP here	IMPLEMENTATION	0.8685757333603253	WITHOUT_CLASSIFICATION	0.13142426663967463	IMPLEMENTATION
// TODO: Someday, enable.	IMPLEMENTATION	0.8748348150536315	WITHOUT_CLASSIFICATION	0.12516518494636855	IMPLEMENTATION
// Bunch of methods still not implemented	IMPLEMENTATION	0.815034025122608	IMPLEMENTATION	0.18496597487739197	WITHOUT_CLASSIFICATION
// TODO: non-strict option	IMPLEMENTATION	0.7726069620595972	WITHOUT_CLASSIFICATION	0.22739303794040278	IMPLEMENTATION
// TODO: opt for 2 and 3 ?	IMPLEMENTATION	0.8943237671000888	WITHOUT_CLASSIFICATION	0.10567623289991122	IMPLEMENTATION
// FIXME: Should we make this work with platform's locale, // or continue hardcoding US?	IMPLEMENTATION	0.9982865934228208	WITHOUT_CLASSIFICATION	0.001713406577179253	IMPLEMENTATION
// TODO: rescan code range ?	IMPLEMENTATION	0.9086195074844058	WITHOUT_CLASSIFICATION	0.09138049251559423	IMPLEMENTATION
// TODO: rescan code range ?	IMPLEMENTATION	0.9086195074844058	WITHOUT_CLASSIFICATION	0.09138049251559423	IMPLEMENTATION
// TODO: pass this in?	IMPLEMENTATION	0.8259919477098048	WITHOUT_CLASSIFICATION	0.17400805229019523	IMPLEMENTATION
// FIXME: Pass block down?	IMPLEMENTATION	0.9995733251169489	WITHOUT_CLASSIFICATION	4.266748830511261E-4	IMPLEMENTATION
// TODO: do something here?	IMPLEMENTATION	0.6547542858118406	WITHOUT_CLASSIFICATION	0.34524571418815936	IMPLEMENTATION
// TODO: port exact behavior from MRI, and move most locking logic into ChannelDescriptor // TODO: for all LOCK_NB cases, return false if they would block	IMPLEMENTATION	0.7672734382862061	WITHOUT_CLASSIFICATION	0.23272656171379388	IMPLEMENTATION
// TODO: check if too many open files, GC and try again	IMPLEMENTATION	0.5263978822701812	IMPLEMENTATION	0.47360211772981875	WITHOUT_CLASSIFICATION
//TODO deal with UNC names	IMPLEMENTATION	0.9997759489074431	WITHOUT_CLASSIFICATION	2.2405109255690554E-4	IMPLEMENTATION
// FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.9990912425483132	WITHOUT_CLASSIFICATION	9.087574516868015E-4	IMPLEMENTATION
//FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.9996772749548521	WITHOUT_CLASSIFICATION	3.227250451478473E-4	IMPLEMENTATION
// TODO: SafeStringValue here	IMPLEMENTATION	0.8729843297423325	WITHOUT_CLASSIFICATION	0.12701567025766747	IMPLEMENTATION
// TODO: turn off readable? am I reading this right? // This only seems to be used while duping below, since modes gets // reset to actual modes afterward //fptr->mode &= (m & FMODE_READABLE) ? ~FMODE_READABLE : ~FMODE_WRITABLE;	IMPLEMENTATION	0.9764824625318099	WITHOUT_CLASSIFICATION	0.023517537468190037	IMPLEMENTATION
// TODO: check safe, taint on incoming string	IMPLEMENTATION	0.6211144622445651	WITHOUT_CLASSIFICATION	0.378885537755435	IMPLEMENTATION
// TODO: pipe handler to be reopened with path and "w" mode	IMPLEMENTATION	0.875644039953585	WITHOUT_CLASSIFICATION	0.12435596004641493	IMPLEMENTATION
// FIXME: add text mode to mode flags	IMPLEMENTATION	0.9997670286520004	WITHOUT_CLASSIFICATION	2.3297134799952994E-4	IMPLEMENTATION
// TODO: Something about pipe buffer length here	IMPLEMENTATION	0.9257826461948314	WITHOUT_CLASSIFICATION	0.07421735380516864	IMPLEMENTATION
// TODO: handle errors in buffered write by retrying until finished or file is closed	IMPLEMENTATION	0.9414722725571191	IMPLEMENTATION	0.0585277274428808	WITHOUT_CLASSIFICATION
// TODO: notify threads waiting on descriptors/IO? probably not...	IMPLEMENTATION	0.7586025935553132	WITHOUT_CLASSIFICATION	0.2413974064446867	IMPLEMENTATION
// TODO: Ruby re-checks that the buffer string hasn't been modified	IMPLEMENTATION	0.916747720386206	WITHOUT_CLASSIFICATION	0.08325227961379406	IMPLEMENTATION
// TODO: Ruby unlocks the string here	IMPLEMENTATION	0.8647877524447152	WITHOUT_CLASSIFICATION	0.13521224755528471	IMPLEMENTATION
// TODO: Ruby truncates string to specific size here, but our bytelist should handle this already?	IMPLEMENTATION	0.6463154672558745	WITHOUT_CLASSIFICATION	0.3536845327441253	IMPLEMENTATION
// TODO: Ruby unlocks the string here	IMPLEMENTATION	0.8647877524447152	WITHOUT_CLASSIFICATION	0.13521224755528471	IMPLEMENTATION
// TODO: Ruby truncates string to specific size here, but our bytelist should handle this already?	IMPLEMENTATION	0.6463154672558745	WITHOUT_CLASSIFICATION	0.3536845327441253	IMPLEMENTATION
// TODO: ruby locks the string here	IMPLEMENTATION	0.9520023131114854	WITHOUT_CLASSIFICATION	0.047997686888514676	IMPLEMENTATION
// TODO same zero-length checks as file above	IMPLEMENTATION	0.9742684190732401	WITHOUT_CLASSIFICATION	0.02573158092675983	IMPLEMENTATION
// TODO: MRI also can hadle Bignum here	IMPLEMENTATION	0.834603450769634	WITHOUT_CLASSIFICATION	0.16539654923036587	IMPLEMENTATION
// TODO: make threadsafe	IMPLEMENTATION	0.7731908001958352	WITHOUT_CLASSIFICATION	0.22680919980416486	IMPLEMENTATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9373045673130689	WITHOUT_CLASSIFICATION	0.06269543268693109	IMPLEMENTATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9373045673130689	WITHOUT_CLASSIFICATION	0.06269543268693109	IMPLEMENTATION
// FIXME: create AttrReaderMethod, AttrWriterMethod, for faster attr access	IMPLEMENTATION	0.999730251082576	WITHOUT_CLASSIFICATION	2.697489174240422E-4	IMPLEMENTATION
// Do not clone cached methods // FIXME: MRI copies all methods here	IMPLEMENTATION	0.999848274168094	WITHOUT_CLASSIFICATION	1.5172583190599989E-4	IMPLEMENTATION
// TODO: don't calculate the same value 3 times	IMPLEMENTATION	0.9902353816485182	WITHOUT_CLASSIFICATION	0.009764618351481728	IMPLEMENTATION
// TODO: 3 times calculate the same value below	IMPLEMENTATION	0.9864034039095695	WITHOUT_CLASSIFICATION	0.013596596090430419	IMPLEMENTATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.8576341719199527	WITHOUT_CLASSIFICATION	0.14236582808004733	IMPLEMENTATION
// TODO: Store BEGIN and END information into this node	IMPLEMENTATION	0.9443733026261412	WITHOUT_CLASSIFICATION	0.05562669737385891	IMPLEMENTATION
// TODO: put these nil guards into tree (bigger than I want to do right now)	IMPLEMENTATION	0.7764364643107314	WITHOUT_CLASSIFICATION	0.22356353568926857	IMPLEMENTATION
// FIXME: Make bodyNode non-null in parser	IMPLEMENTATION	0.9996310597973472	WITHOUT_CLASSIFICATION	3.689402026528277E-4	IMPLEMENTATION
// TODO: call config with scope but no frame	IMPLEMENTATION	0.8624737544781056	WITHOUT_CLASSIFICATION	0.13752624552189446	IMPLEMENTATION
// TODO: add trace call?	IMPLEMENTATION	0.5957197068430946	IMPLEMENTATION	0.4042802931569054	WITHOUT_CLASSIFICATION
// FIXME: missing arity check	IMPLEMENTATION	0.9996483485512775	WITHOUT_CLASSIFICATION	3.516514487225369E-4	IMPLEMENTATION
// FIXME: optimize for cases where we have no false branch	IMPLEMENTATION	0.9995341488025441	WITHOUT_CLASSIFICATION	4.6585119745583427E-4	IMPLEMENTATION
// FIXME: after jump is not in here.  Will if ever be? //Label afterJmp = new Label();	IMPLEMENTATION	0.9998187212564813	WITHOUT_CLASSIFICATION	1.812787435187835E-4	IMPLEMENTATION
// TODO: build arg list based on number of args, optionals, etc	IMPLEMENTATION	0.9360952216831427	WITHOUT_CLASSIFICATION	0.06390477831685723	IMPLEMENTATION
// FIXME: missing arity check	IMPLEMENTATION	0.9996483485512775	WITHOUT_CLASSIFICATION	3.516514487225369E-4	IMPLEMENTATION
// SSS FIXME: Traverse up the scope hierarchy to find the constant as long as the parent is a static scope	IMPLEMENTATION	0.9999918286546304	WITHOUT_CLASSIFICATION	8.171345369576146E-6	IMPLEMENTATION
// SSS FIXME: Should I be returning the operand constructed here?	IMPLEMENTATION	0.999860522498312	WITHOUT_CLASSIFICATION	1.3947750168798366E-4	IMPLEMENTATION
// TODO: Add IR instructions for checking method arity! // s.getVariableCompiler().checkMethodArity(required, opt, rest);	IMPLEMENTATION	0.836054789812881	WITHOUT_CLASSIFICATION	0.16394521018711908	IMPLEMENTATION
// FIXME: Ruby 1.9 post args code needs to come here	IMPLEMENTATION	0.9995381310981208	WITHOUT_CLASSIFICATION	4.6186890187908307E-4	IMPLEMENTATION
// SSS: FIXME: Somewhere here, we need to record information the type of this operand as String	IMPLEMENTATION	0.9999502952245144	WITHOUT_CLASSIFICATION	4.970477548564436E-5	IMPLEMENTATION
// FIXME: Translate this call below! // s.unwrapPassedBlock();	IMPLEMENTATION	0.999435712768668	WITHOUT_CLASSIFICATION	5.642872313319999E-4	IMPLEMENTATION
// SSS FIXME: We need to build debug information tracking into the IR in some fashion // So, these methods below would have to have equivalents in IR_Scope implementations.	IMPLEMENTATION	0.9916232625225148	WITHOUT_CLASSIFICATION	0.008376737477485125	IMPLEMENTATION
// SSS FIXME: Incomplete!	IMPLEMENTATION	0.9997766407944764	WITHOUT_CLASSIFICATION	2.2335920552365486E-4	IMPLEMENTATION
// SSS FIXME: Pick one of bytelist or string, or add internal conversion methods to convert to the default representation	IMPLEMENTATION	0.9999824261632111	WITHOUT_CLASSIFICATION	1.75738367888427E-5	IMPLEMENTATION
// SSS FIXME: To be done	IMPLEMENTATION	0.9998367778097041	WITHOUT_CLASSIFICATION	1.6322219029589105E-4	IMPLEMENTATION
//TODO: implement, won't do this now	IMPLEMENTATION	0.934043621486191	IMPLEMENTATION	0.06595637851380899	WITHOUT_CLASSIFICATION
//TODO: implement, won't do this now	IMPLEMENTATION	0.934043621486191	IMPLEMENTATION	0.06595637851380899	WITHOUT_CLASSIFICATION
// TODO: validate port as numeric	IMPLEMENTATION	0.9490322509045964	WITHOUT_CLASSIFICATION	0.05096774909540359	IMPLEMENTATION
// TODO: this code should really check if a Ruby equals method is implemented or not.	IMPLEMENTATION	0.9766350379537733	IMPLEMENTATION	0.023364962046226793	WITHOUT_CLASSIFICATION
// if not already defined, we add a 'new' that guesses at which signature to use // TODO: just adding first one right now...add in signature-guessing logic	IMPLEMENTATION	0.9911739322949837	WITHOUT_CLASSIFICATION	0.00882606770501628	IMPLEMENTATION
// TODO: deal with varargs	IMPLEMENTATION	0.8950553952125557	WITHOUT_CLASSIFICATION	0.10494460478744438	IMPLEMENTATION
// TODO: deal with varargs	IMPLEMENTATION	0.8950553952125557	WITHOUT_CLASSIFICATION	0.10494460478744438	IMPLEMENTATION
// TODO: other reserved names?	IMPLEMENTATION	0.8873007504461868	WITHOUT_CLASSIFICATION	0.1126992495538132	IMPLEMENTATION
// TODO: we can probably release our references to the constantFields // array and static/instance callback hashes at this point. 	IMPLEMENTATION	0.9944745198396279	WITHOUT_CLASSIFICATION	0.0055254801603720665	IMPLEMENTATION
// TODO: Formalize conversion mechanisms between Java and Ruby	IMPLEMENTATION	0.9370234608735202	WITHOUT_CLASSIFICATION	0.06297653912647988	IMPLEMENTATION
// XXX: Check if it's appropriate type?	IMPLEMENTATION	0.999850935301018	WITHOUT_CLASSIFICATION	1.4906469898202728E-4	IMPLEMENTATION
// TODO: call ruby method	IMPLEMENTATION	0.8501460028310779	WITHOUT_CLASSIFICATION	0.1498539971689222	IMPLEMENTATION
// TODO: call ruby method	IMPLEMENTATION	0.8501460028310779	WITHOUT_CLASSIFICATION	0.1498539971689222	IMPLEMENTATION
// TODO: Add safety check for taintedness	IMPLEMENTATION	0.8192504254864701	WITHOUT_CLASSIFICATION	0.18074957451352994	IMPLEMENTATION
// FIXME: Need to detect magic_comment in 1.9 here for encoding	IMPLEMENTATION	0.9996066360584379	WITHOUT_CLASSIFICATION	3.933639415620835E-4	IMPLEMENTATION
/* xxx shouldn't check if valid option variable */	IMPLEMENTATION	0.9999328269631995	WITHOUT_CLASSIFICATION	6.717303680045013E-5	IMPLEMENTATION
// TODO: this isn't handling multibyte yet	IMPLEMENTATION	0.7129243574024071	WITHOUT_CLASSIFICATION	0.28707564259759283	IMPLEMENTATION
// TODO: This should be something else like a tCHAR	IMPLEMENTATION	0.8291805508752673	IMPLEMENTATION	0.1708194491247327	WITHOUT_CLASSIFICATION
// FIXME: \r logic needed	IMPLEMENTATION	0.9978342442620163	WITHOUT_CLASSIFICATION	0.0021657557379837844	IMPLEMENTATION
// TODO: note lack of command.com support for Win 9x...	IMPLEMENTATION	0.6925167979486749	IMPLEMENTATION	0.3074832020513251	WITHOUT_CLASSIFICATION
// FIXME: Make thread pool threads daemons if necessary	IMPLEMENTATION	0.9997702950609305	WITHOUT_CLASSIFICATION	2.2970493906947779E-4	IMPLEMENTATION
/* FIXME: We may be intern'ing more than once.*/	IMPLEMENTATION	0.9997453824348386	WITHOUT_CLASSIFICATION	2.5461756516141946E-4	IMPLEMENTATION
/* FIXME: We may be intern'ing more than once.*/	IMPLEMENTATION	0.9997453824348386	WITHOUT_CLASSIFICATION	2.5461756516141946E-4	IMPLEMENTATION
/* FIXME: arg_concat missing for opt_call_args*/	IMPLEMENTATION	0.999841958178034	WITHOUT_CLASSIFICATION	1.5804182196598E-4	IMPLEMENTATION
/* FIXME: arg_concat logic missing for opt_call_args*/	IMPLEMENTATION	0.999847741431921	WITHOUT_CLASSIFICATION	1.5225856807900054E-4	IMPLEMENTATION
// FIXME: This needs to happen for lambdas //            args.checkArgCount(runtime, parameters.length);	IMPLEMENTATION	0.9996557018814138	WITHOUT_CLASSIFICATION	3.442981185862098E-4	IMPLEMENTATION
// FIXME: This needs to happen for lambdas //            args.checkArgCount(runtime, parameters.length);	IMPLEMENTATION	0.9996557018814138	WITHOUT_CLASSIFICATION	3.442981185862098E-4	IMPLEMENTATION
// TODO: make it cross runtime safe by COW or eager copy	IMPLEMENTATION	0.865143344621262	WITHOUT_CLASSIFICATION	0.13485665537873795	IMPLEMENTATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.9996695491405959	WITHOUT_CLASSIFICATION	3.304508594040611E-4	IMPLEMENTATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.9996695491405959	WITHOUT_CLASSIFICATION	3.304508594040611E-4	IMPLEMENTATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.9996695491405959	WITHOUT_CLASSIFICATION	3.304508594040611E-4	IMPLEMENTATION
// TODO: check the return value here	IMPLEMENTATION	0.6640465049846209	IMPLEMENTATION	0.3359534950153791	WITHOUT_CLASSIFICATION
// TODO: check the return value here	IMPLEMENTATION	0.6640465049846209	IMPLEMENTATION	0.3359534950153791	WITHOUT_CLASSIFICATION
// TODO: Make sure all appropriate open flags are added to this check.	IMPLEMENTATION	0.6785523151653781	WITHOUT_CLASSIFICATION	0.32144768483462205	IMPLEMENTATION
//subList.clear(); // Sublist is supposed to share same backing store as list...TODO in RubyArray. //assertTrue(list.size() == 1);	IMPLEMENTATION	0.9999190217619983	WITHOUT_CLASSIFICATION	8.097823800172721E-5	IMPLEMENTATION
// SSS FIXME: Cannot optimize this without assuming that Range.to_ary method has not redefined. // So for now, return null!	IMPLEMENTATION	0.9997458365778771	WITHOUT_CLASSIFICATION	2.541634221229701E-4	IMPLEMENTATION
// TODO Auto-generated method stub	IMPLEMENTATION	0.9999944037306207	IMPLEMENTATION	5.596269379381276E-6	WITHOUT_CLASSIFICATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.9999389155242759	IMPLEMENTATION	6.108447572408484E-5	WITHOUT_CLASSIFICATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.9999389155242759	IMPLEMENTATION	6.108447572408484E-5	WITHOUT_CLASSIFICATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.9999389155242759	IMPLEMENTATION	6.108447572408484E-5	WITHOUT_CLASSIFICATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.8576341719199527	WITHOUT_CLASSIFICATION	0.14236582808004733	IMPLEMENTATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.8576341719199527	WITHOUT_CLASSIFICATION	0.14236582808004733	IMPLEMENTATION
// TODO: check for ascii string	IMPLEMENTATION	0.6931018585937256	WITHOUT_CLASSIFICATION	0.3068981414062743	IMPLEMENTATION
// filter out any Java primitive names // TODO: should check against all Java reserved names here, not just primitives	IMPLEMENTATION	0.9090425470246062	WITHOUT_CLASSIFICATION	0.0909574529753938	IMPLEMENTATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9373045673130689	WITHOUT_CLASSIFICATION	0.06269543268693109	IMPLEMENTATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9373045673130689	WITHOUT_CLASSIFICATION	0.06269543268693109	IMPLEMENTATION
// TODO: missing additional logic for dealing with conflicting protected fields.	IMPLEMENTATION	0.9381455560188745	WITHOUT_CLASSIFICATION	0.06185444398112546	IMPLEMENTATION
// TODO: better detection when path is absolute or not. // If the path isn't absolute, then prepend the current working // directory to the path.	IMPLEMENTATION	0.9939714200340181	WITHOUT_CLASSIFICATION	0.00602857996598198	IMPLEMENTATION
// FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.9990912425483132	WITHOUT_CLASSIFICATION	9.087574516868015E-4	IMPLEMENTATION
// FIX replace type() == ... with isInstanceOf(...)	IMPLEMENTATION	0.9999209219283735	WITHOUT_CLASSIFICATION	7.907807162658947E-5	IMPLEMENTATION
/* TODO: MRI is just a when node.  We need this extra logic for IDE consumers (null in casenode statement should be implicit nil)*/	IMPLEMENTATION	0.9599101852215004	WITHOUT_CLASSIFICATION	0.04008981477849957	IMPLEMENTATION
// TODO: This and recacheRespondsTo needed to be synchronized for JRUBY-3466, // but this degraded performance nearly 2x. It's still faster than MRI, but // a reanalysis of this code may show a faster way to ensure we're caching // safely.	IMPLEMENTATION	0.559315465279427	WITHOUT_CLASSIFICATION	0.44068453472057306	IMPLEMENTATION
// TODO: adjust length so it won't fall in the middle  // of a multi-byte character. MRI's sprintf.c uses tables // in a modified version of regex.c, which assume some // particular  encoding for a given installation/application. // (See regex.c#re_mbcinit in ruby-1.8.5-p12)  // // This is only an issue if the user specifies a precision // that causes the string to be truncated. The same issue // would arise taking a substring of a ByteList-backed RubyString.	IMPLEMENTATION	0.9988647577583986	WITHOUT_CLASSIFICATION	0.0011352422416013993	IMPLEMENTATION
// set constants now that they're initialized	WITHOUT_CLASSIFICATION	0.9999796238755152	WITHOUT_CLASSIFICATION	2.037612448482832E-5	IMPLEMENTATION
// line 335	WITHOUT_CLASSIFICATION	0.9999109546671153	WITHOUT_CLASSIFICATION	8.904533288467563E-5	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9998766846217828	WITHOUT_CLASSIFICATION	1.2331537821723534E-4	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9998766846217828	WITHOUT_CLASSIFICATION	1.2331537821723534E-4	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9998766846217828	WITHOUT_CLASSIFICATION	1.2331537821723534E-4	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9998766846217828	WITHOUT_CLASSIFICATION	1.2331537821723534E-4	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9998766846217828	WITHOUT_CLASSIFICATION	1.2331537821723534E-4	IMPLEMENTATION
// Figure end-char.  '\0' is special to indicate begin=end and that no nesting?	WITHOUT_CLASSIFICATION	0.9999310092833171	WITHOUT_CLASSIFICATION	6.89907166829246E-5	IMPLEMENTATION
// line 362	WITHOUT_CLASSIFICATION	0.9999109546671153	WITHOUT_CLASSIFICATION	8.904533288467563E-5	IMPLEMENTATION
// line 372	WITHOUT_CLASSIFICATION	0.9999109546671153	WITHOUT_CLASSIFICATION	8.904533288467563E-5	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9998756799413627	WITHOUT_CLASSIFICATION	1.2432005863727548E-4	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9998756799413627	WITHOUT_CLASSIFICATION	1.2432005863727548E-4	IMPLEMENTATION
// line 391	WITHOUT_CLASSIFICATION	0.9999109546671153	WITHOUT_CLASSIFICATION	8.904533288467563E-5	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9998756799413627	WITHOUT_CLASSIFICATION	1.2432005863727548E-4	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9998756799413627	WITHOUT_CLASSIFICATION	1.2432005863727548E-4	IMPLEMENTATION
/* ^D */	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
/* ^Z */	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9998766846217828	WITHOUT_CLASSIFICATION	1.2331537821723534E-4	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9998766846217828	WITHOUT_CLASSIFICATION	1.2331537821723534E-4	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9998766846217828	WITHOUT_CLASSIFICATION	1.2331537821723534E-4	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9998766846217828	WITHOUT_CLASSIFICATION	1.2331537821723534E-4	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9998766846217828	WITHOUT_CLASSIFICATION	1.2331537821723534E-4	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9998766846217828	WITHOUT_CLASSIFICATION	1.2331537821723534E-4	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9998766846217828	WITHOUT_CLASSIFICATION	1.2331537821723534E-4	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9998766846217828	WITHOUT_CLASSIFICATION	1.2331537821723534E-4	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9998766846217828	WITHOUT_CLASSIFICATION	1.2331537821723534E-4	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9998766846217828	WITHOUT_CLASSIFICATION	1.2331537821723534E-4	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9998766846217828	WITHOUT_CLASSIFICATION	1.2331537821723534E-4	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9998766846217828	WITHOUT_CLASSIFICATION	1.2331537821723534E-4	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9998766846217828	WITHOUT_CLASSIFICATION	1.2331537821723534E-4	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9998766846217828	WITHOUT_CLASSIFICATION	1.2331537821723534E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998766846217828	WITHOUT_CLASSIFICATION	1.2331537821723534E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998766846217828	WITHOUT_CLASSIFICATION	1.2331537821723534E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998766846217828	WITHOUT_CLASSIFICATION	1.2331537821723534E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998766846217828	WITHOUT_CLASSIFICATION	1.2331537821723534E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998766846217828	WITHOUT_CLASSIFICATION	1.2331537821723534E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998766846217828	WITHOUT_CLASSIFICATION	1.2331537821723534E-4	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9998756799413627	WITHOUT_CLASSIFICATION	1.2432005863727548E-4	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9998756799413627	WITHOUT_CLASSIFICATION	1.2432005863727548E-4	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9998756799413627	WITHOUT_CLASSIFICATION	1.2432005863727548E-4	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9998756799413627	WITHOUT_CLASSIFICATION	1.2432005863727548E-4	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9998756799413627	WITHOUT_CLASSIFICATION	1.2432005863727548E-4	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9998756799413627	WITHOUT_CLASSIFICATION	1.2432005863727548E-4	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9998756799413627	WITHOUT_CLASSIFICATION	1.2432005863727548E-4	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9998756799413627	WITHOUT_CLASSIFICATION	1.2432005863727548E-4	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9998756799413627	WITHOUT_CLASSIFICATION	1.2432005863727548E-4	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9998756799413627	WITHOUT_CLASSIFICATION	1.2432005863727548E-4	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9998756799413627	WITHOUT_CLASSIFICATION	1.2432005863727548E-4	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9998756799413627	WITHOUT_CLASSIFICATION	1.2432005863727548E-4	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9998756799413627	WITHOUT_CLASSIFICATION	1.2432005863727548E-4	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9998756799413627	WITHOUT_CLASSIFICATION	1.2432005863727548E-4	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9998756799413627	WITHOUT_CLASSIFICATION	1.2432005863727548E-4	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9998756799413627	WITHOUT_CLASSIFICATION	1.2432005863727548E-4	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9998756799413627	WITHOUT_CLASSIFICATION	1.2432005863727548E-4	IMPLEMENTATION
//Do nothing	WITHOUT_CLASSIFICATION	0.9999606860132634	WITHOUT_CLASSIFICATION	3.931398673664952E-5	IMPLEMENTATION
//Do nothing	WITHOUT_CLASSIFICATION	0.9999606860132634	WITHOUT_CLASSIFICATION	3.931398673664952E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9980109492134409	WITHOUT_CLASSIFICATION	0.0019890507865591876	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9980109492134409	WITHOUT_CLASSIFICATION	0.0019890507865591876	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9980109492134409	WITHOUT_CLASSIFICATION	0.0019890507865591876	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9980109492134409	WITHOUT_CLASSIFICATION	0.0019890507865591876	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9980109492134409	WITHOUT_CLASSIFICATION	0.0019890507865591876	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9980109492134409	WITHOUT_CLASSIFICATION	0.0019890507865591876	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9980109492134409	WITHOUT_CLASSIFICATION	0.0019890507865591876	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9980109492134409	WITHOUT_CLASSIFICATION	0.0019890507865591876	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9980109492134409	WITHOUT_CLASSIFICATION	0.0019890507865591876	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9980109492134409	WITHOUT_CLASSIFICATION	0.0019890507865591876	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9980109492134409	WITHOUT_CLASSIFICATION	0.0019890507865591876	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9980109492134409	WITHOUT_CLASSIFICATION	0.0019890507865591876	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9980109492134409	WITHOUT_CLASSIFICATION	0.0019890507865591876	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9980109492134409	WITHOUT_CLASSIFICATION	0.0019890507865591876	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9980109492134409	WITHOUT_CLASSIFICATION	0.0019890507865591876	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9980109492134409	WITHOUT_CLASSIFICATION	0.0019890507865591876	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9980109492134409	WITHOUT_CLASSIFICATION	0.0019890507865591876	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9980109492134409	WITHOUT_CLASSIFICATION	0.0019890507865591876	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9980109492134409	WITHOUT_CLASSIFICATION	0.0019890507865591876	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9980109492134409	WITHOUT_CLASSIFICATION	0.0019890507865591876	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9980109492134409	WITHOUT_CLASSIFICATION	0.0019890507865591876	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9980109492134409	WITHOUT_CLASSIFICATION	0.0019890507865591876	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9980109492134409	WITHOUT_CLASSIFICATION	0.0019890507865591876	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9980109492134409	WITHOUT_CLASSIFICATION	0.0019890507865591876	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9980109492134409	WITHOUT_CLASSIFICATION	0.0019890507865591876	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9980109492134409	WITHOUT_CLASSIFICATION	0.0019890507865591876	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9980109492134409	WITHOUT_CLASSIFICATION	0.0019890507865591876	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9980109492134409	WITHOUT_CLASSIFICATION	0.0019890507865591876	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9980109492134409	WITHOUT_CLASSIFICATION	0.0019890507865591876	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9980109492134409	WITHOUT_CLASSIFICATION	0.0019890507865591876	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9980109492134409	WITHOUT_CLASSIFICATION	0.0019890507865591876	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9980109492134409	WITHOUT_CLASSIFICATION	0.0019890507865591876	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9980109492134409	WITHOUT_CLASSIFICATION	0.0019890507865591876	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9980109492134409	WITHOUT_CLASSIFICATION	0.0019890507865591876	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9980109492134409	WITHOUT_CLASSIFICATION	0.0019890507865591876	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9980109492134409	WITHOUT_CLASSIFICATION	0.0019890507865591876	IMPLEMENTATION
// return result	WITHOUT_CLASSIFICATION	0.9999829589537496	WITHOUT_CLASSIFICATION	1.7041046250461345E-5	IMPLEMENTATION
// name	WITHOUT_CLASSIFICATION	0.9972911160678795	WITHOUT_CLASSIFICATION	0.0027088839321205713	IMPLEMENTATION
// Define System.getProperties() in ENV_JAVA	WITHOUT_CLASSIFICATION	0.9999364824538646	WITHOUT_CLASSIFICATION	6.351754613544861E-5	IMPLEMENTATION
// Accessor methods.	WITHOUT_CLASSIFICATION	0.9999130398750589	WITHOUT_CLASSIFICATION	8.696012494108121E-5	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9998938074481959	WITHOUT_CLASSIFICATION	1.0619255180409221E-4	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9998938074481959	WITHOUT_CLASSIFICATION	1.0619255180409221E-4	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9998938074481959	WITHOUT_CLASSIFICATION	1.0619255180409221E-4	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9998938074481959	WITHOUT_CLASSIFICATION	1.0619255180409221E-4	IMPLEMENTATION
// call getpwent to fail early if unsupported	WITHOUT_CLASSIFICATION	0.9999315027706035	WITHOUT_CLASSIFICATION	6.849722939652275E-5	IMPLEMENTATION
// fall back on env entry for USER	WITHOUT_CLASSIFICATION	0.9999115512761393	WITHOUT_CLASSIFICATION	8.844872386067872E-5	IMPLEMENTATION
// try to read grent to fail fast	WITHOUT_CLASSIFICATION	0.9999619152029847	WITHOUT_CLASSIFICATION	3.80847970151526E-5	IMPLEMENTATION
// define ARGV and $* for this runtime	WITHOUT_CLASSIFICATION	0.9999552986476034	WITHOUT_CLASSIFICATION	4.4701352396570926E-5	IMPLEMENTATION
// Version information:	WITHOUT_CLASSIFICATION	0.9999464296713795	WITHOUT_CLASSIFICATION	5.357032862057284E-5	IMPLEMENTATION
// after defn of $stderr as the call may produce warnings	WITHOUT_CLASSIFICATION	0.9999543972348414	WITHOUT_CLASSIFICATION	4.560276515859651E-5	IMPLEMENTATION
// ARGF, $< object	WITHOUT_CLASSIFICATION	0.9999077959895188	WITHOUT_CLASSIFICATION	9.220401048119343E-5	IMPLEMENTATION
// if the environment variables can't be obtained, define an empty ENV	WITHOUT_CLASSIFICATION	0.9999907722066479	WITHOUT_CLASSIFICATION	9.227793352111331E-6	IMPLEMENTATION
// On platforms without a c-library accessable through JNA, getpid will return hashCode  // as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing // $$ on getpid() where available, we have the same semantics as MRI.	WITHOUT_CLASSIFICATION	0.9999921353182797	WITHOUT_CLASSIFICATION	7.86468172032345E-6	IMPLEMENTATION
//$@ returns nil if $!.backtrace is not an array	WITHOUT_CLASSIFICATION	0.9999661590540403	WITHOUT_CLASSIFICATION	3.3840945959669416E-5	IMPLEMENTATION
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999432418783251	WITHOUT_CLASSIFICATION	5.6758121674904955E-5	IMPLEMENTATION
// MRI behavior: just plain '//' or '\\\\' are considered illegal on Windows.	WITHOUT_CLASSIFICATION	0.9999350104756969	WITHOUT_CLASSIFICATION	6.498952430311241E-5	IMPLEMENTATION
// this _is_ legal (when removing an undef)	WITHOUT_CLASSIFICATION	0.9999085970988872	WITHOUT_CLASSIFICATION	9.140290111277532E-5	IMPLEMENTATION
// What we passed to the constructor for method 'path'	WITHOUT_CLASSIFICATION	0.9999653611641942	WITHOUT_CLASSIFICATION	3.4638835805730245E-5	IMPLEMENTATION
// ----- Ruby Class Methods ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999857830365341	WITHOUT_CLASSIFICATION	1.4216963465819435E-5	IMPLEMENTATION
// // CONSTANT TABLE METHODS - pass to delegate //	WITHOUT_CLASSIFICATION	0.999936586270556	WITHOUT_CLASSIFICATION	6.341372944400362E-5	IMPLEMENTATION
// We get canonical path to try and flatten the path out. // a dir '/subdir/..' should return as '/' // cnutter: Do we want to flatten path out?	WITHOUT_CLASSIFICATION	0.9997146131987248	WITHOUT_CLASSIFICATION	2.853868012751781E-4	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9998938074481959	WITHOUT_CLASSIFICATION	1.0619255180409221E-4	IMPLEMENTATION
// ----- Ruby Instance Methods -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999877734582034	WITHOUT_CLASSIFICATION	1.222654179655597E-5	IMPLEMENTATION
// Make sure any read()s after close fail.	WITHOUT_CLASSIFICATION	0.9999666872268416	WITHOUT_CLASSIFICATION	3.331277315846019E-5	IMPLEMENTATION
// ----- Helper Methods --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999886800582851	WITHOUT_CLASSIFICATION	1.1319941714990584E-5	IMPLEMENTATION
// try to use POSIX for this first	WITHOUT_CLASSIFICATION	0.9999669065380613	WITHOUT_CLASSIFICATION	3.3093461938677634E-5	IMPLEMENTATION
// otherwise fall back on the old way	WITHOUT_CLASSIFICATION	0.9999284395030977	WITHOUT_CLASSIFICATION	7.156049690234383E-5	IMPLEMENTATION
// Proc class	WITHOUT_CLASSIFICATION	0.999915249075349	WITHOUT_CLASSIFICATION	8.475092465097058E-5	IMPLEMENTATION
// No passed in block, lets check next outer frame for one ('Proc.new')	WITHOUT_CLASSIFICATION	0.9999534237734677	WITHOUT_CLASSIFICATION	4.657622653227817E-5	IMPLEMENTATION
// modify the block with a new backref/lastline-grabbing scope	WITHOUT_CLASSIFICATION	0.9999248349279236	WITHOUT_CLASSIFICATION	7.516507207636261E-5	IMPLEMENTATION
// for future compatibility as constructors move toward not accepting metaclass?	WITHOUT_CLASSIFICATION	0.9999187068797114	WITHOUT_CLASSIFICATION	8.129312028857018E-5	IMPLEMENTATION
//        case RUBY_HYBRID: //            backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); //            break;	WITHOUT_CLASSIFICATION	0.9999896974093471	WITHOUT_CLASSIFICATION	1.0302590652972611E-5	IMPLEMENTATION
// This looks wrong, but it's the way MRI does it.	WITHOUT_CLASSIFICATION	0.9999835519868495	WITHOUT_CLASSIFICATION	1.6448013150428682E-5	IMPLEMENTATION
// rb_exc_new3	WITHOUT_CLASSIFICATION	0.9998766846217828	WITHOUT_CLASSIFICATION	1.2331537821723534E-4	IMPLEMENTATION
// NOTE: The indicies here match exactly the signal values; do not reorder	WITHOUT_CLASSIFICATION	0.9999723426029966	WITHOUT_CLASSIFICATION	2.7657397003499255E-5	IMPLEMENTATION
//registerThreadDumpSignalHandler(runtime);	WITHOUT_CLASSIFICATION	0.9999303458575718	WITHOUT_CLASSIFICATION	6.965414242819246E-5	IMPLEMENTATION
// IOT is also 6	WITHOUT_CLASSIFICATION	0.9998845512834426	WITHOUT_CLASSIFICATION	1.1544871655747573E-4	IMPLEMENTATION
// CLD is also 20	WITHOUT_CLASSIFICATION	0.9998845037264353	WITHOUT_CLASSIFICATION	1.154962735647137E-4	IMPLEMENTATION
// RubySignal	WITHOUT_CLASSIFICATION	0.9998780969639969	WITHOUT_CLASSIFICATION	1.2190303600309523E-4	IMPLEMENTATION
// ZStream actually *isn't* allocatable	WITHOUT_CLASSIFICATION	0.9998713434347237	WITHOUT_CLASSIFICATION	1.2865656527628685E-4	IMPLEMENTATION
// MRI behavior, enforced by tests	WITHOUT_CLASSIFICATION	0.9999301935414253	WITHOUT_CLASSIFICATION	6.980645857465624E-5	IMPLEMENTATION
// it's safe since adler.update doesn't modify the array	WITHOUT_CLASSIFICATION	0.9999674684541286	WITHOUT_CLASSIFICATION	3.2531545871339386E-5	IMPLEMENTATION
// MRI behavior: in finished mode, we work as pass-through	WITHOUT_CLASSIFICATION	0.9998923296589203	WITHOUT_CLASSIFICATION	1.0767034107963847E-4	IMPLEMENTATION
// SYNC_FLUSH	WITHOUT_CLASSIFICATION	0.9998766846217828	WITHOUT_CLASSIFICATION	1.2331537821723534E-4	IMPLEMENTATION
// By default, NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999493361954036	WITHOUT_CLASSIFICATION	5.0663804596292166E-5	IMPLEMENTATION
//io.finish();	WITHOUT_CLASSIFICATION	0.9998684080304159	WITHOUT_CLASSIFICATION	1.315919695840475E-4	IMPLEMENTATION
// should invoke seek on realIo	WITHOUT_CLASSIFICATION	0.9999406205771721	WITHOUT_CLASSIFICATION	5.937942282781083E-5	IMPLEMENTATION
// hmm...	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
// Called before any write to make sure the // header is always written before the first bytes	WITHOUT_CLASSIFICATION	0.9999927656509777	WITHOUT_CLASSIFICATION	7.23434902234897E-6	IMPLEMENTATION
// For JDK 1.4 we can use "cal.getTimeInMillis()"	WITHOUT_CLASSIFICATION	0.999923097971035	WITHOUT_CLASSIFICATION	7.690202896505727E-5	IMPLEMENTATION
// We can just use dt, since it is immutable	WITHOUT_CLASSIFICATION	0.9999296506478517	WITHOUT_CLASSIFICATION	7.034935214835872E-5	IMPLEMENTATION
// float number of seconds	WITHOUT_CLASSIFICATION	0.9999864161563536	WITHOUT_CLASSIFICATION	1.3583843646307289E-5	IMPLEMENTATION
// modified to match how hash is calculated in 1.8.2	WITHOUT_CLASSIFICATION	0.9999646619605885	WITHOUT_CLASSIFICATION	3.533803941144102E-5	IMPLEMENTATION
// dump usec, not msec	WITHOUT_CLASSIFICATION	0.9999001198398041	WITHOUT_CLASSIFICATION	9.988016019588396E-5	IMPLEMENTATION
/* Time class methods */	WITHOUT_CLASSIFICATION	0.9999509773261727	WITHOUT_CLASSIFICATION	4.902267382738772E-5	IMPLEMENTATION
// marsaling dumps usec, not msec	WITHOUT_CLASSIFICATION	0.9999113215954125	WITHOUT_CLASSIFICATION	8.867840458749601E-5	IMPLEMENTATION
// MRI accepts additional wday argument which appears to be ignored.	WITHOUT_CLASSIFICATION	0.9999822912746092	WITHOUT_CLASSIFICATION	1.770872539078535E-5	IMPLEMENTATION
// set up with min values and then add to allow rolling over	WITHOUT_CLASSIFICATION	0.9999489007312126	WITHOUT_CLASSIFICATION	5.109926878742978E-5	IMPLEMENTATION
// the instant at which we will ask dtz what the difference between DST and // standard time is	WITHOUT_CLASSIFICATION	0.9999755701087651	WITHOUT_CLASSIFICATION	2.442989123481089E-5	IMPLEMENTATION
// if we might be moving this time from !DST -> DST, the offset is assumed // to be the same as it was just before we last moved from DST -> !DST	WITHOUT_CLASSIFICATION	0.9999839721650662	WITHOUT_CLASSIFICATION	1.6027834933823564E-5	IMPLEMENTATION
// Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.	WITHOUT_CLASSIFICATION	0.9999941565677914	WITHOUT_CLASSIFICATION	5.843432208501707E-6	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999524945143625	WITHOUT_CLASSIFICATION	4.750548563735474E-5	IMPLEMENTATION
/* If the value will fit in a Fixnum, return one of those. */	WITHOUT_CLASSIFICATION	0.9999851831726742	WITHOUT_CLASSIFICATION	1.4816827325839721E-5	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999622086914853	WITHOUT_CLASSIFICATION	3.779130851476816E-5	IMPLEMENTATION
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9998895190407967	WITHOUT_CLASSIFICATION	1.1048095920334739E-4	IMPLEMENTATION
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9574264333488646	WITHOUT_CLASSIFICATION	0.04257356665113539	IMPLEMENTATION
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9574264333488646	WITHOUT_CLASSIFICATION	0.04257356665113539	IMPLEMENTATION
// no bignorm here needed	WITHOUT_CLASSIFICATION	0.9995979487806531	WITHOUT_CLASSIFICATION	4.020512193469562E-4	IMPLEMENTATION
// wow, the only time we can use the java protocol ;)	WITHOUT_CLASSIFICATION	0.9999402630899593	WITHOUT_CLASSIFICATION	5.97369100406493E-5	IMPLEMENTATION
// Pad with a 0	WITHOUT_CLASSIFICATION	0.9998885843706419	WITHOUT_CLASSIFICATION	1.1141562935815307E-4	IMPLEMENTATION
// BigInteger required a sign byte in incoming array	WITHOUT_CLASSIFICATION	0.9999304863331206	WITHOUT_CLASSIFICATION	6.951366687935169E-5	IMPLEMENTATION
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9999919405513845	WITHOUT_CLASSIFICATION	8.059448615570033E-6	IMPLEMENTATION
// We do this b/c make_tmpname might be overridden	WITHOUT_CLASSIFICATION	0.9999271408054479	WITHOUT_CLASSIFICATION	7.285919455215694E-5	IMPLEMENTATION
// ???	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
// PID	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999622086914853	WITHOUT_CLASSIFICATION	3.779130851476816E-5	IMPLEMENTATION
// elements and trailing nils	WITHOUT_CLASSIFICATION	0.9999641468629097	WITHOUT_CLASSIFICATION	3.585313709024665E-5	IMPLEMENTATION
// Dir::tmpdir	WITHOUT_CLASSIFICATION	0.9998767700162636	WITHOUT_CLASSIFICATION	1.2322998373642027E-4	IMPLEMENTATION
// volatile to ensure that initial nil-fill is visible to other threads	WITHOUT_CLASSIFICATION	0.9999213328441767	WITHOUT_CLASSIFICATION	7.866715582319449E-5	IMPLEMENTATION
/* Ruby arrays default to holding 16 elements, so we create an         * ArrayList of the same size if we're not told otherwise         */	WITHOUT_CLASSIFICATION	0.9999983648692118	WITHOUT_CLASSIFICATION	1.635130788325843E-6	IMPLEMENTATION
/* rb_ary_new2     * just allocates the internal array     */	WITHOUT_CLASSIFICATION	0.9999537090083731	WITHOUT_CLASSIFICATION	4.6290991626885896E-5	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.999976984700982	WITHOUT_CLASSIFICATION	2.3015299018142372E-5	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.999976984700982	WITHOUT_CLASSIFICATION	2.3015299018142372E-5	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.999976984700982	WITHOUT_CLASSIFICATION	2.3015299018142372E-5	IMPLEMENTATION
/* Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour     *      */	WITHOUT_CLASSIFICATION	0.9999495717220288	WITHOUT_CLASSIFICATION	5.0428277971212365E-5	IMPLEMENTATION
/* NEWOBJ and OBJSETUP equivalent     * fastest one, for shared arrays, optional objectspace     */	WITHOUT_CLASSIFICATION	0.999952385882966	WITHOUT_CLASSIFICATION	4.761411703405133E-5	IMPLEMENTATION
// Create global constants and variables	WITHOUT_CLASSIFICATION	0.9999819678115408	WITHOUT_CLASSIFICATION	1.8032188459182528E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9995271288783308	WITHOUT_CLASSIFICATION	4.7287112166911123E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9995271288783308	WITHOUT_CLASSIFICATION	4.7287112166911123E-4	IMPLEMENTATION
// Windows does not support these functions, so we won't even try // This also matches Ruby behavior for JRUBY-2353.	WITHOUT_CLASSIFICATION	0.9999520990707574	WITHOUT_CLASSIFICATION	4.7900929242632886E-5	IMPLEMENTATION
// There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and // newer one (US/Pacific, America/Los_Angeles). This pattern is to detect // the legacy TZ format in order to convert it to the newer format // understood by Java API.	WITHOUT_CLASSIFICATION	0.9999913245812773	WITHOUT_CLASSIFICATION	8.675418722746201E-6	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9995271288783308	WITHOUT_CLASSIFICATION	4.7287112166911123E-4	IMPLEMENTATION
// 1.9 seems to just do inspect for to_s now	WITHOUT_CLASSIFICATION	0.9999224432006409	WITHOUT_CLASSIFICATION	7.755679935905094E-5	IMPLEMENTATION
// possibly should not in object space	WITHOUT_CLASSIFICATION	0.9999558983203684	WITHOUT_CLASSIFICATION	4.410167963161524E-5	IMPLEMENTATION
// only fill if there actually will remain trailing storage	WITHOUT_CLASSIFICATION	0.9999653516630886	WITHOUT_CLASSIFICATION	3.464833691138953E-5	IMPLEMENTATION
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9998766846217828	WITHOUT_CLASSIFICATION	1.2331537821723534E-4	IMPLEMENTATION
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9998766846217828	WITHOUT_CLASSIFICATION	1.2331537821723534E-4	IMPLEMENTATION
// from DUP_SETUP	WITHOUT_CLASSIFICATION	0.9998998375268643	WITHOUT_CLASSIFICATION	1.0016247313576443E-4	IMPLEMENTATION
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.999975732203658	WITHOUT_CLASSIFICATION	2.426779634201355E-5	IMPLEMENTATION
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999031471757972	WITHOUT_CLASSIFICATION	9.685282420279824E-5	IMPLEMENTATION
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999031471757972	WITHOUT_CLASSIFICATION	9.685282420279824E-5	IMPLEMENTATION
// Satisfy java.util.List interface (for Java integration)	WITHOUT_CLASSIFICATION	0.999944182910059	WITHOUT_CLASSIFICATION	5.5817089940956854E-5	IMPLEMENTATION
// pre-set for the sake of terminating recursive calls	WITHOUT_CLASSIFICATION	0.9999769246234994	WITHOUT_CLASSIFICATION	2.307537650051694E-5	IMPLEMENTATION
/* root fiber */	WITHOUT_CLASSIFICATION	0.9998787208979667	WITHOUT_CLASSIFICATION	1.2127910203330654E-4	IMPLEMENTATION
// GMT+00:00 --> Etc/GMT, see "MRI behavior" // comment below.	WITHOUT_CLASSIFICATION	0.9999389007724517	WITHOUT_CLASSIFICATION	6.109922754818943E-5	IMPLEMENTATION
//  See http://www.gzip.org/zlib/rfc-gzip.html	WITHOUT_CLASSIFICATION	0.9999131042507398	WITHOUT_CLASSIFICATION	8.68957492602658E-5	IMPLEMENTATION
// extras flag	WITHOUT_CLASSIFICATION	0.9998966961537118	WITHOUT_CLASSIFICATION	1.033038462882464E-4	IMPLEMENTATION
// Zlib::NO_FLUSH	WITHOUT_CLASSIFICATION	0.9998766846217828	WITHOUT_CLASSIFICATION	1.2331537821723534E-4	IMPLEMENTATION
// ...nothing	WITHOUT_CLASSIFICATION	0.9999432532866025	WITHOUT_CLASSIFICATION	5.6746713397587486E-5	IMPLEMENTATION
// utility method	WITHOUT_CLASSIFICATION	0.9999011791507597	WITHOUT_CLASSIFICATION	9.882084924024393E-5	IMPLEMENTATION
// Prepare LoadService and load path	WITHOUT_CLASSIFICATION	0.9999298275542218	WITHOUT_CLASSIFICATION	7.01724457782556E-5	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999622086914853	WITHOUT_CLASSIFICATION	3.779130851476816E-5	IMPLEMENTATION
// flags // 4 bytes of modified time	WITHOUT_CLASSIFICATION	0.9999119760569434	WITHOUT_CLASSIFICATION	8.802394305665488E-5	IMPLEMENTATION
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999551532183087	WITHOUT_CLASSIFICATION	4.4846781691243504E-5	IMPLEMENTATION
// 1.8 "include?"	WITHOUT_CLASSIFICATION	0.9998792424271418	WITHOUT_CLASSIFICATION	1.2075757285817589E-4	IMPLEMENTATION
// any BigInteger is bigger than Fixnum and we don't have FIXABLE	WITHOUT_CLASSIFICATION	0.999948973772585	WITHOUT_CLASSIFICATION	5.102622741509558E-5	IMPLEMENTATION
// beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal	WITHOUT_CLASSIFICATION	0.9999288411198696	WITHOUT_CLASSIFICATION	7.11588801305187E-5	IMPLEMENTATION
// MRI does it!	WITHOUT_CLASSIFICATION	0.999880026482834	WITHOUT_CLASSIFICATION	1.1997351716605968E-4	IMPLEMENTATION
// won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999100435491949	WITHOUT_CLASSIFICATION	8.995645080506715E-5	IMPLEMENTATION
// it won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999230265647127	WITHOUT_CLASSIFICATION	7.697343528734466E-5	IMPLEMENTATION
// RubyClassPathVariable	WITHOUT_CLASSIFICATION	0.9999029167159077	WITHOUT_CLASSIFICATION	9.708328409229508E-5	IMPLEMENTATION
// not to be confused with RubyObject's flags	WITHOUT_CLASSIFICATION	0.9997768474184273	WITHOUT_CLASSIFICATION	2.2315258157264012E-4	IMPLEMENTATION
// second argument is allowed, but ignored (MRI)	WITHOUT_CLASSIFICATION	0.9999926578904623	WITHOUT_CLASSIFICATION	7.342109537624379E-6	IMPLEMENTATION
// we are presumably running a precompiled class; load directly	WITHOUT_CLASSIFICATION	0.9999730942378289	WITHOUT_CLASSIFICATION	2.690576217106684E-5	IMPLEMENTATION
// terminate; tryCompile will have printed out an error and we're done	WITHOUT_CLASSIFICATION	0.9999545091713327	WITHOUT_CLASSIFICATION	4.54908286673893E-5	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999714608314705	WITHOUT_CLASSIFICATION	2.8539168529451485E-5	IMPLEMENTATION
// do nothing, this iteration restarts	WITHOUT_CLASSIFICATION	0.9999873018525585	WITHOUT_CLASSIFICATION	1.2698147441507059E-5	IMPLEMENTATION
// recheck condition	WITHOUT_CLASSIFICATION	0.9999056096746683	WITHOUT_CLASSIFICATION	9.439032533161676E-5	IMPLEMENTATION
// Get the main threadcontext (gets constructed for us)	WITHOUT_CLASSIFICATION	0.9999820546250066	WITHOUT_CLASSIFICATION	1.7945374993447398E-5	IMPLEMENTATION
// Construct key services	WITHOUT_CLASSIFICATION	0.9999515529318315	WITHOUT_CLASSIFICATION	4.844706816860029E-5	IMPLEMENTATION
// initialize the root of the class hierarchy completely	WITHOUT_CLASSIFICATION	0.999993473129588	WITHOUT_CLASSIFICATION	6.526870412125376E-6	IMPLEMENTATION
// Construct the top-level execution frame and scope for the main thread	WITHOUT_CLASSIFICATION	0.9999862168450211	WITHOUT_CLASSIFICATION	1.3783154978866166E-5	IMPLEMENTATION
// Initialize all the core classes	WITHOUT_CLASSIFICATION	0.9999844443326377	WITHOUT_CLASSIFICATION	1.5555667362361427E-5	IMPLEMENTATION
// Initialize the "dummy" class used as a marker	WITHOUT_CLASSIFICATION	0.999983877594019	WITHOUT_CLASSIFICATION	1.612240598101323E-5	IMPLEMENTATION
// Initialize Kernel and include into Object	WITHOUT_CLASSIFICATION	0.9999669043959962	WITHOUT_CLASSIFICATION	3.3095604003790106E-5	IMPLEMENTATION
// Object is ready, create top self	WITHOUT_CLASSIFICATION	0.9999437698439343	WITHOUT_CLASSIFICATION	5.6230156065663446E-5	IMPLEMENTATION
// Pre-create all the core classes potentially referenced during startup	WITHOUT_CLASSIFICATION	0.999990906002085	WITHOUT_CLASSIFICATION	9.093997915008637E-6	IMPLEMENTATION
// Math depends on all numeric types	WITHOUT_CLASSIFICATION	0.9999269269049132	WITHOUT_CLASSIFICATION	7.307309508675907E-5	IMPLEMENTATION
// depends on IO, FileTest	WITHOUT_CLASSIFICATION	0.9999135482509167	WITHOUT_CLASSIFICATION	8.6451749083335E-5	IMPLEMENTATION
// initialize builtin libraries	WITHOUT_CLASSIFICATION	0.9999755703240243	WITHOUT_CLASSIFICATION	2.4429675975747663E-5	IMPLEMENTATION
// Require in all libraries specified on command line	WITHOUT_CLASSIFICATION	0.9999695442217176	WITHOUT_CLASSIFICATION	3.045577828246628E-5	IMPLEMENTATION
// Bootstrap the top of the hierarchy	WITHOUT_CLASSIFICATION	0.9999587925356825	WITHOUT_CLASSIFICATION	4.12074643174331E-5	IMPLEMENTATION
// we try to get the classloader that loaded JRuby, falling back on System	WITHOUT_CLASSIFICATION	0.9999807008987478	WITHOUT_CLASSIFICATION	1.9299101252190473E-5	IMPLEMENTATION
// determine spacing	WITHOUT_CLASSIFICATION	0.999923771683908	WITHOUT_CLASSIFICATION	7.62283160920249E-5	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9998981161148685	WITHOUT_CLASSIFICATION	1.018838851316541E-4	IMPLEMENTATION
// For JSR 223 support: see http://scripting.java.net/	WITHOUT_CLASSIFICATION	0.9998579390530017	WITHOUT_CLASSIFICATION	1.420609469982228E-4	IMPLEMENTATION
// use this for JRuby-internal finalizers	WITHOUT_CLASSIFICATION	0.9998925601953464	WITHOUT_CLASSIFICATION	1.0743980465351137E-4	IMPLEMENTATION
// this method is for finalizers registered via ObjectSpace	WITHOUT_CLASSIFICATION	0.9998873255980792	WITHOUT_CLASSIFICATION	1.1267440192079829E-4	IMPLEMENTATION
// new factory methods ------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999852342067459	WITHOUT_CLASSIFICATION	1.4765793254108672E-5	IMPLEMENTATION
//        assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999808777409132	WITHOUT_CLASSIFICATION	1.9122259086862096E-5	IMPLEMENTATION
// Equivalent of Data_Wrap_Struct	WITHOUT_CLASSIFICATION	0.9998810214333367	WITHOUT_CLASSIFICATION	1.1897856666331043E-4	IMPLEMENTATION
// default: don't retain	WITHOUT_CLASSIFICATION	0.999980129354549	WITHOUT_CLASSIFICATION	1.9870645450942203E-5	IMPLEMENTATION
// ChannelDescriptors opened by sysopen are cached to avoid collection	WITHOUT_CLASSIFICATION	0.9999617059078455	WITHOUT_CLASSIFICATION	3.829409215459008E-5	IMPLEMENTATION
// Default objects	WITHOUT_CLASSIFICATION	0.9999763117984086	WITHOUT_CLASSIFICATION	2.3688201591346627E-5	IMPLEMENTATION
// record separator var, to speed up io ops that use it	WITHOUT_CLASSIFICATION	0.9999507778780956	WITHOUT_CLASSIFICATION	4.9222121904520065E-5	IMPLEMENTATION
// former java.lang.System concepts now internalized for MVM	WITHOUT_CLASSIFICATION	0.9999551273104792	WITHOUT_CLASSIFICATION	4.487268952069375E-5	IMPLEMENTATION
// Java support	WITHOUT_CLASSIFICATION	0.9997663925830813	WITHOUT_CLASSIFICATION	2.336074169186134E-4	IMPLEMENTATION
// Parser stats	WITHOUT_CLASSIFICATION	0.9998917807411697	WITHOUT_CLASSIFICATION	1.0821925883021671E-4	IMPLEMENTATION
// Compilation	WITHOUT_CLASSIFICATION	0.9998992403543692	WITHOUT_CLASSIFICATION	1.0075964563076587E-4	IMPLEMENTATION
// can't read non-standard properties	WITHOUT_CLASSIFICATION	0.9999438271389329	WITHOUT_CLASSIFICATION	5.6172861067052E-5	IMPLEMENTATION
// can't create custom classloaders	WITHOUT_CLASSIFICATION	0.9999738027232334	WITHOUT_CLASSIFICATION	2.6197276766558717E-5	IMPLEMENTATION
// mutex that controls modifications of user-defined finalizers	WITHOUT_CLASSIFICATION	0.9999554386331909	WITHOUT_CLASSIFICATION	4.456136680907891E-5	IMPLEMENTATION
// mutex that controls modifications of internal finalizers	WITHOUT_CLASSIFICATION	0.9999595417287132	WITHOUT_CLASSIFICATION	4.045827128693809E-5	IMPLEMENTATION
// A thread pool to use for executing this runtime's Ruby threads	WITHOUT_CLASSIFICATION	0.999934463695912	WITHOUT_CLASSIFICATION	6.553630408792112E-5	IMPLEMENTATION
// A global object lock for class hierarchy mutations	WITHOUT_CLASSIFICATION	0.9999820646205835	WITHOUT_CLASSIFICATION	1.7935379416552545E-5	IMPLEMENTATION
// initial spaces // spaces before "at"	WITHOUT_CLASSIFICATION	0.9999601645335521	WITHOUT_CLASSIFICATION	3.9835466447888954E-5	IMPLEMENTATION
// event name // filename // line numbers should be 1-based	WITHOUT_CLASSIFICATION	0.9999729587897423	WITHOUT_CLASSIFICATION	2.70412102576737E-5	IMPLEMENTATION
// The method is intentionally not public, since it typically should // not be used outside of the core.	WITHOUT_CLASSIFICATION	0.9999749591115978	WITHOUT_CLASSIFICATION	2.504088840222044E-5	IMPLEMENTATION
// Note: this field and the following static initializer // must be located be in this order!	WITHOUT_CLASSIFICATION	0.9999936710937906	WITHOUT_CLASSIFICATION	6.328906209332852E-6	IMPLEMENTATION
// Contains a list of all blocks (as Procs) that should be called when // the runtime environment exits.	WITHOUT_CLASSIFICATION	0.9999747290745858	WITHOUT_CLASSIFICATION	2.5270925414115557E-5	IMPLEMENTATION
// quoted-printable	WITHOUT_CLASSIFICATION	0.9998844178233045	WITHOUT_CLASSIFICATION	1.1558217669556156E-4	IMPLEMENTATION
// default options	WITHOUT_CLASSIFICATION	0.9999853719935095	WITHOUT_CLASSIFICATION	1.4628006490605714E-5	IMPLEMENTATION
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9998766846217828	WITHOUT_CLASSIFICATION	1.2331537821723534E-4	IMPLEMENTATION
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9998766846217828	WITHOUT_CLASSIFICATION	1.2331537821723534E-4	IMPLEMENTATION
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9998770642929313	WITHOUT_CLASSIFICATION	1.229357070686476E-4	IMPLEMENTATION
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9998770642929313	WITHOUT_CLASSIFICATION	1.229357070686476E-4	IMPLEMENTATION
// EUC-JP	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
// EUC-JP	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
// UTF-8	WITHOUT_CLASSIFICATION	0.9961402048451069	WITHOUT_CLASSIFICATION	0.0038597951548929917	IMPLEMENTATION
// UTF-8	WITHOUT_CLASSIFICATION	0.9961402048451069	WITHOUT_CLASSIFICATION	0.0038597951548929917	IMPLEMENTATION
// long name option	WITHOUT_CLASSIFICATION	0.9999473365866993	WITHOUT_CLASSIFICATION	5.2663413300649015E-5	IMPLEMENTATION
// conversion	WITHOUT_CLASSIFICATION	0.9999345469090064	WITHOUT_CLASSIFICATION	6.545309099361413E-5	IMPLEMENTATION
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999565824451426	WITHOUT_CLASSIFICATION	4.3417554857434454E-5	IMPLEMENTATION
// string doesn't share any resources	WITHOUT_CLASSIFICATION	0.9999773440644087	WITHOUT_CLASSIFICATION	2.265593559123528E-5	IMPLEMENTATION
// string has it's own ByteList, but it's pointing to a shared buffer (byte[])	WITHOUT_CLASSIFICATION	0.9999658042025271	WITHOUT_CLASSIFICATION	3.419579747288943E-5	IMPLEMENTATION
// string doesn't have it's own ByteList (values)	WITHOUT_CLASSIFICATION	0.9999719914573797	WITHOUT_CLASSIFICATION	2.8008542620206404E-5	IMPLEMENTATION
// ENC_CODERANGE_ASCIIONLY	WITHOUT_CLASSIFICATION	0.9998965595051776	WITHOUT_CLASSIFICATION	1.0344049482241293E-4	IMPLEMENTATION
// rb_enc_str_asciionly_p	WITHOUT_CLASSIFICATION	0.9998965151503372	WITHOUT_CLASSIFICATION	1.0348484966281427E-4	IMPLEMENTATION
// rb_enc_str_coderange	WITHOUT_CLASSIFICATION	0.9998968412069136	WITHOUT_CLASSIFICATION	1.0315879308636564E-4	IMPLEMENTATION
// rb_str_hash_cmp	WITHOUT_CLASSIFICATION	0.9998766846217828	WITHOUT_CLASSIFICATION	1.2331537821723534E-4	IMPLEMENTATION
// Deprecated String construction routines	WITHOUT_CLASSIFICATION	0.9999528864174225	WITHOUT_CLASSIFICATION	4.7113582577487114E-5	IMPLEMENTATION
// String construction routines by NOT byte[] buffer and NOT making the target String shared 	WITHOUT_CLASSIFICATION	0.9999839084029228	WITHOUT_CLASSIFICATION	1.6091597077237237E-5	IMPLEMENTATION
/* rb_str_subseq */	WITHOUT_CLASSIFICATION	0.9998769946691201	WITHOUT_CLASSIFICATION	1.230053308799837E-4	IMPLEMENTATION
// no need to assign encoding, same bytelist shared	WITHOUT_CLASSIFICATION	0.9999498861531687	WITHOUT_CLASSIFICATION	5.011384683133861E-5	IMPLEMENTATION
// if len == 0 then shared empty	WITHOUT_CLASSIFICATION	0.9999361197597328	WITHOUT_CLASSIFICATION	6.388024026710327E-5	IMPLEMENTATION
/* rb_str_cmp_m */	WITHOUT_CLASSIFICATION	0.9998766846217828	WITHOUT_CLASSIFICATION	1.2331537821723534E-4	IMPLEMENTATION
// we limit to int because ByteBuffer can only allocate int sizes	WITHOUT_CLASSIFICATION	0.9999387221429008	WITHOUT_CLASSIFICATION	6.127785709917377E-5	IMPLEMENTATION
// // rb_str_buf_append	WITHOUT_CLASSIFICATION	0.9999118562745892	WITHOUT_CLASSIFICATION	8.814372541077671E-5	IMPLEMENTATION
// encoding doesn't have to be copied.	WITHOUT_CLASSIFICATION	0.9999782489155971	WITHOUT_CLASSIFICATION	2.1751084402974317E-5	IMPLEMENTATION
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9998833497061067	WITHOUT_CLASSIFICATION	1.1665029389331487E-4	IMPLEMENTATION
// must not reallocate	WITHOUT_CLASSIFICATION	0.9999293183201083	WITHOUT_CLASSIFICATION	7.068167989161242E-5	IMPLEMENTATION
// Illegal combination	WITHOUT_CLASSIFICATION	0.9999084217222216	WITHOUT_CLASSIFICATION	9.157827777838216E-5	IMPLEMENTATION
// use 1.8 impl	WITHOUT_CLASSIFICATION	0.9999087021228771	WITHOUT_CLASSIFICATION	9.129787712301614E-5	IMPLEMENTATION
/* RubyString aka rb_string_value */	WITHOUT_CLASSIFICATION	0.999931963823005	WITHOUT_CLASSIFICATION	6.803617699503562E-5	IMPLEMENTATION
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999273821183888	WITHOUT_CLASSIFICATION	7.261788161115836E-5	IMPLEMENTATION
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999672287982818	WITHOUT_CLASSIFICATION	3.277120171812424E-5	IMPLEMENTATION
/* len + margin */	WITHOUT_CLASSIFICATION	0.9998877456953102	WITHOUT_CLASSIFICATION	1.1225430468977962E-4	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9998765766087401	WITHOUT_CLASSIFICATION	1.2342339125993645E-4	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9998765766087401	WITHOUT_CLASSIFICATION	1.2342339125993645E-4	IMPLEMENTATION
/* copy pre-match substr */	WITHOUT_CLASSIFICATION	0.9999038485415709	WITHOUT_CLASSIFICATION	9.615145842907532E-5	IMPLEMENTATION
// string given	WITHOUT_CLASSIFICATION	0.9999357805986473	WITHOUT_CLASSIFICATION	6.421940135270308E-5	IMPLEMENTATION
// hash given	WITHOUT_CLASSIFICATION	0.9998805197092259	WITHOUT_CLASSIFICATION	1.1948029077410303E-4	IMPLEMENTATION
// This represents left most digit in a set of incremented // values?  Therefore leftmost numeric must be '1' and not '0' // 999 -> 1000, not 999 -> 0000.  whereas chars should be // zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"	WITHOUT_CLASSIFICATION	0.9999914941970506	WITHOUT_CLASSIFICATION	8.505802949370529E-6	IMPLEMENTATION
/* substring longer than string */	WITHOUT_CLASSIFICATION	0.9999446492218138	WITHOUT_CLASSIFICATION	5.5350778186196875E-5	IMPLEMENTATION
/* rb_str_substr */	WITHOUT_CLASSIFICATION	0.9998769963758776	WITHOUT_CLASSIFICATION	1.230036241224064E-4	IMPLEMENTATION
// nothing	WITHOUT_CLASSIFICATION	0.9977429619197121	WITHOUT_CLASSIFICATION	0.002257038080287863	IMPLEMENTATION
// nothing	WITHOUT_CLASSIFICATION	0.9977429619197121	WITHOUT_CLASSIFICATION	0.002257038080287863	IMPLEMENTATION
/* rb_str_splice */	WITHOUT_CLASSIFICATION	0.9998767656373667	WITHOUT_CLASSIFICATION	1.2323436263332488E-4	IMPLEMENTATION
// TODO: keep cr // TODO: rb_str_splice_0	WITHOUT_CLASSIFICATION	0.8481720568972875	WITHOUT_CLASSIFICATION	0.1518279431027124	IMPLEMENTATION
// keep cr ?	WITHOUT_CLASSIFICATION	0.9998871441777419	WITHOUT_CLASSIFICATION	1.1285582225798517E-4	IMPLEMENTATION
// keep cr ?	WITHOUT_CLASSIFICATION	0.9998871441777419	WITHOUT_CLASSIFICATION	1.1285582225798517E-4	IMPLEMENTATION
/* wrapped to \0...\0.  search next valid char. */	WITHOUT_CLASSIFICATION	0.9999427211046481	WITHOUT_CLASSIFICATION	5.7278895352047145E-5	IMPLEMENTATION
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9999291259428307	WITHOUT_CLASSIFICATION	7.087405716926844E-5	IMPLEMENTATION
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9999291259428307	WITHOUT_CLASSIFICATION	7.087405716926844E-5	IMPLEMENTATION
// modified	WITHOUT_CLASSIFICATION	0.9998910312161646	WITHOUT_CLASSIFICATION	1.0896878383531587E-4	IMPLEMENTATION
// modified	WITHOUT_CLASSIFICATION	0.9998910312161646	WITHOUT_CLASSIFICATION	1.0896878383531587E-4	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
// QTRUE	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
/* retrieve last replacer */	WITHOUT_CLASSIFICATION	0.9999335146598025	WITHOUT_CLASSIFICATION	6.648534019748556E-5	IMPLEMENTATION
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999784808145389	WITHOUT_CLASSIFICATION	2.1519185461064138E-5	IMPLEMENTATION
// long size * bits in byte	WITHOUT_CLASSIFICATION	0.9999467554499961	WITHOUT_CLASSIFICATION	5.3244550003820313E-5	IMPLEMENTATION
// from encoding, special-casing ASCII* to ASCII	WITHOUT_CLASSIFICATION	0.9999448053278102	WITHOUT_CLASSIFICATION	5.519467218988272E-5	IMPLEMENTATION
// to encoding, same special-casing	WITHOUT_CLASSIFICATION	0.9999402664239794	WITHOUT_CLASSIFICATION	5.973357602054675E-5	IMPLEMENTATION
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999856787444276	WITHOUT_CLASSIFICATION	1.4321255572486731E-5	IMPLEMENTATION
// decode from "from" and encode to "to"	WITHOUT_CLASSIFICATION	0.9999404130241942	WITHOUT_CLASSIFICATION	5.958697580590577E-5	IMPLEMENTATION
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999856787444276	WITHOUT_CLASSIFICATION	1.4321255572486731E-5	IMPLEMENTATION
//Kernel is the only Module that doesn't need an implementor	WITHOUT_CLASSIFICATION	0.9988867539949551	WITHOUT_CLASSIFICATION	0.0011132460050449306	IMPLEMENTATION
// no binding given, use (eval)	WITHOUT_CLASSIFICATION	0.9999293413432824	WITHOUT_CLASSIFICATION	7.065865671767585E-5	IMPLEMENTATION
// interned, OK for "fast" methods	WITHOUT_CLASSIFICATION	0.9999469041102698	WITHOUT_CLASSIFICATION	5.309588973017981E-5	IMPLEMENTATION
// File to be loaded by autoload has already been or is being loaded.	WITHOUT_CLASSIFICATION	0.9999514396543682	WITHOUT_CLASSIFICATION	4.8560345631792185E-5	IMPLEMENTATION
// rb_cstr_to_dbl case	WITHOUT_CLASSIFICATION	0.9998970428566234	WITHOUT_CLASSIFICATION	1.0295714337661905E-4	IMPLEMENTATION
// We break if we know this sleep was explicitly woken up/interrupted	WITHOUT_CLASSIFICATION	0.9999115915166052	WITHOUT_CLASSIFICATION	8.840848339475035E-5	IMPLEMENTATION
// exec process, create IO with process	WITHOUT_CLASSIFICATION	0.9999560933619002	WITHOUT_CLASSIFICATION	4.390663809984453E-5	IMPLEMENTATION
// Zero sleeps forever	WITHOUT_CLASSIFICATION	0.9999223391505295	WITHOUT_CLASSIFICATION	7.766084947055038E-5	IMPLEMENTATION
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.999931971339599	WITHOUT_CLASSIFICATION	6.802866040105468E-5	IMPLEMENTATION
// Explicit zero in MRI returns immediately	WITHOUT_CLASSIFICATION	0.9999588016578302	WITHOUT_CLASSIFICATION	4.11983421697957E-5	IMPLEMENTATION
// Spurious wakeup-loop	WITHOUT_CLASSIFICATION	0.9998973621429733	WITHOUT_CLASSIFICATION	1.0263785702665425E-4	IMPLEMENTATION
// adjusts paths started with '/' or '\\', on windows.	WITHOUT_CLASSIFICATION	0.9999395753975894	WITHOUT_CLASSIFICATION	6.04246024106724E-5	IMPLEMENTATION
// file not given	WITHOUT_CLASSIFICATION	0.9999004054327157	WITHOUT_CLASSIFICATION	9.959456728424089E-5	IMPLEMENTATION
// string to eval	WITHOUT_CLASSIFICATION	0.9999479798157328	WITHOUT_CLASSIFICATION	5.202018426723132E-5	IMPLEMENTATION
// binding given, use binding's file	WITHOUT_CLASSIFICATION	0.9999072244148437	WITHOUT_CLASSIFICATION	9.277558515635763E-5	IMPLEMENTATION
// ?g  | boolean | True if file1 has the \CF{setgid} bit	WITHOUT_CLASSIFICATION	0.9999504826075536	WITHOUT_CLASSIFICATION	4.9517392446423266E-5	IMPLEMENTATION
// bomb out, it's not a binding or a proc	WITHOUT_CLASSIFICATION	0.9999312673121484	WITHOUT_CLASSIFICATION	6.873268785153001E-5	IMPLEMENTATION
// Ordering of array traversal not important, just intuitive	WITHOUT_CLASSIFICATION	0.999806246354597	WITHOUT_CLASSIFICATION	1.9375364540286504E-4	IMPLEMENTATION
//Catch active, throw for catch to handle	WITHOUT_CLASSIFICATION	0.9998591194308223	WITHOUT_CLASSIFICATION	1.408805691776827E-4	IMPLEMENTATION
// No catch active for this throw	WITHOUT_CLASSIFICATION	0.9999372793642533	WITHOUT_CLASSIFICATION	6.272063574674568E-5	IMPLEMENTATION
// without full tracing, many events will not fire	WITHOUT_CLASSIFICATION	0.9999453754034956	WITHOUT_CLASSIFICATION	5.46245965044742E-5	IMPLEMENTATION
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.999994731721441	WITHOUT_CLASSIFICATION	5.268278558978477E-6	IMPLEMENTATION
// MRI behavior: use first byte of string value if len > 0	WITHOUT_CLASSIFICATION	0.9999783126896089	WITHOUT_CLASSIFICATION	2.1687310391030563E-5	IMPLEMENTATION
// MRI behavior: now check arg count	WITHOUT_CLASSIFICATION	0.9999356183396219	WITHOUT_CLASSIFICATION	6.438166037809561E-5	IMPLEMENTATION
// ?A  | Time    | Last access time for file1	WITHOUT_CLASSIFICATION	0.9999247544380369	WITHOUT_CLASSIFICATION	7.524556196308693E-5	IMPLEMENTATION
// ?b  | boolean | True if file1 is a block device	WITHOUT_CLASSIFICATION	0.999940902878654	WITHOUT_CLASSIFICATION	5.909712134599998E-5	IMPLEMENTATION
// ?c  | boolean | True if file1 is a character device	WITHOUT_CLASSIFICATION	0.9999631571888772	WITHOUT_CLASSIFICATION	3.6842811122810354E-5	IMPLEMENTATION
// ?C  | Time    | Last change time for file1	WITHOUT_CLASSIFICATION	0.9999410381778808	WITHOUT_CLASSIFICATION	5.896182211920935E-5	IMPLEMENTATION
// ?d  | boolean | True if file1 exists and is a directory	WITHOUT_CLASSIFICATION	0.9999793151030772	WITHOUT_CLASSIFICATION	2.068489692276944E-5	IMPLEMENTATION
// ?e  | boolean | True if file1 exists	WITHOUT_CLASSIFICATION	0.9999440361931021	WITHOUT_CLASSIFICATION	5.59638068978121E-5	IMPLEMENTATION
// ?f  | boolean | True if file1 exists and is a regular file	WITHOUT_CLASSIFICATION	0.9999560342513035	WITHOUT_CLASSIFICATION	4.396574869642037E-5	IMPLEMENTATION
// ?G  | boolean | True if file1 exists and has a group ownership equal to the caller's group	WITHOUT_CLASSIFICATION	0.9999817965047717	WITHOUT_CLASSIFICATION	1.820349522826777E-5	IMPLEMENTATION
// ?k  | boolean | True if file1 exists and has the sticky bit set	WITHOUT_CLASSIFICATION	0.9999677872513768	WITHOUT_CLASSIFICATION	3.221274862315606E-5	IMPLEMENTATION
// ?M  | Time    | Last modification time for file1	WITHOUT_CLASSIFICATION	0.9999482009374108	WITHOUT_CLASSIFICATION	5.179906258922818E-5	IMPLEMENTATION
// ?o  | boolean | True if file1 exists and is owned by the caller's effective uid	WITHOUT_CLASSIFICATION	0.9999827017371059	WITHOUT_CLASSIFICATION	1.7298262894100575E-5	IMPLEMENTATION
// ?O  | boolean | True if file1 exists and is owned by the caller's real uid 	WITHOUT_CLASSIFICATION	0.999982856024517	WITHOUT_CLASSIFICATION	1.71439754830619E-5	IMPLEMENTATION
// ?p  | boolean | True if file1 exists and is a fifo	WITHOUT_CLASSIFICATION	0.9999581858651175	WITHOUT_CLASSIFICATION	4.18141348824271E-5	IMPLEMENTATION
// ?r  | boolean | True if file1 is readable by the effective uid/gid of the caller	WITHOUT_CLASSIFICATION	0.99997719170949	WITHOUT_CLASSIFICATION	2.2808290510156315E-5	IMPLEMENTATION
// ?s  | int/nil | If file1 has nonzero size, return the size, otherwise nil	WITHOUT_CLASSIFICATION	0.9999309019735447	WITHOUT_CLASSIFICATION	6.909802645537987E-5	IMPLEMENTATION
// ?S  | boolean | True if file1 exists and is a socket	WITHOUT_CLASSIFICATION	0.9999595896339529	WITHOUT_CLASSIFICATION	4.041036604706423E-5	IMPLEMENTATION
// ?u  | boolean | True if file1 has the setuid bit set	WITHOUT_CLASSIFICATION	0.9999584517418127	WITHOUT_CLASSIFICATION	4.154825818723303E-5	IMPLEMENTATION
// ?x  | boolean | True if file1 exists and is executable by the effective uid/gid	WITHOUT_CLASSIFICATION	0.9999722935004686	WITHOUT_CLASSIFICATION	2.770649953133055E-5	IMPLEMENTATION
// ?X  | boolean | True if file1 exists and is executable by the real uid/gid	WITHOUT_CLASSIFICATION	0.9999750403643325	WITHOUT_CLASSIFICATION	2.4959635667413468E-5	IMPLEMENTATION
// ?z  | boolean | True if file1 exists and has a zero length	WITHOUT_CLASSIFICATION	0.9999645959413913	WITHOUT_CLASSIFICATION	3.540405860873041E-5	IMPLEMENTATION
// ?=  | boolean | True if the modification times of file1 and file2 are equal	WITHOUT_CLASSIFICATION	0.9999868265125789	WITHOUT_CLASSIFICATION	1.317348742100925E-5	IMPLEMENTATION
// ?<  | boolean | True if the modification time of file1 is prior to that of file2	WITHOUT_CLASSIFICATION	0.9999860089813513	WITHOUT_CLASSIFICATION	1.3991018648873434E-5	IMPLEMENTATION
// ?>  | boolean | True if the modification time of file1 is after that of file2	WITHOUT_CLASSIFICATION	0.9999875739515414	WITHOUT_CLASSIFICATION	1.2426048458674521E-5	IMPLEMENTATION
// ?-  | boolean | True if file1 and file2 are identical	WITHOUT_CLASSIFICATION	0.9999500844518466	WITHOUT_CLASSIFICATION	4.991554815343293E-5	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999380771466938	WITHOUT_CLASSIFICATION	6.192285330619608E-5	IMPLEMENTATION
// Error info is per-thread	WITHOUT_CLASSIFICATION	0.9999697978929232	WITHOUT_CLASSIFICATION	3.020210707691237E-5	IMPLEMENTATION
// init errorInfo to nil	WITHOUT_CLASSIFICATION	0.9999305311984902	WITHOUT_CLASSIFICATION	6.946880150988909E-5	IMPLEMENTATION
// if we're already aborting, we can receive no further mail	WITHOUT_CLASSIFICATION	0.9999589000297786	WITHOUT_CLASSIFICATION	4.1099970221367305E-5	IMPLEMENTATION
// If this thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999340937026491	WITHOUT_CLASSIFICATION	6.590629735086675E-5	IMPLEMENTATION
// new interrupt, to hopefully wake it out of any blocking IO	WITHOUT_CLASSIFICATION	0.9999387036144258	WITHOUT_CLASSIFICATION	6.129638557416045E-5	IMPLEMENTATION
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999894398664704	WITHOUT_CLASSIFICATION	1.056013352959511E-5	IMPLEMENTATION
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999894398664704	WITHOUT_CLASSIFICATION	1.056013352959511E-5	IMPLEMENTATION
// JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999724360970321	WITHOUT_CLASSIFICATION	2.7563902967961267E-5	IMPLEMENTATION
// JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999788044237612	WITHOUT_CLASSIFICATION	2.1195576238774883E-5	IMPLEMENTATION
// for Thread::start, which does not call the subclass's initialize	WITHOUT_CLASSIFICATION	0.9999937903605045	WITHOUT_CLASSIFICATION	6.209639495514826E-6	IMPLEMENTATION
// JRUBY-3568, inherit threadgroup or use default	WITHOUT_CLASSIFICATION	0.9999656096401962	WITHOUT_CLASSIFICATION	3.439035980373702E-5	IMPLEMENTATION
// MRI behavior: value given in seconds; converted to Float; less // than or equal to zero returns immediately; returns nil	WITHOUT_CLASSIFICATION	0.999989492962677	WITHOUT_CLASSIFICATION	1.0507037323002608E-5	IMPLEMENTATION
// If the target thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999736189036967	WITHOUT_CLASSIFICATION	2.63810963032667E-5	IMPLEMENTATION
// We need this loop in order to be able to "unblock" the // join call without actually calling interrupt.	WITHOUT_CLASSIFICATION	0.9999302006305211	WITHOUT_CLASSIFICATION	6.979936947884751E-5	IMPLEMENTATION
// attempt to decriticalize all if we're the critical thread	WITHOUT_CLASSIFICATION	0.9999714409863734	WITHOUT_CLASSIFICATION	2.855901362671573E-5	IMPLEMENTATION
// not valid for "dead" state	WITHOUT_CLASSIFICATION	0.9996914645011433	WITHOUT_CLASSIFICATION	3.085354988565748E-4	IMPLEMENTATION
// If the killee thread is the same as the killer thread, just die	WITHOUT_CLASSIFICATION	0.9999774812033649	WITHOUT_CLASSIFICATION	2.2518796635170286E-5	IMPLEMENTATION
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999931156036101	WITHOUT_CLASSIFICATION	6.884396389908369E-6	IMPLEMENTATION
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999931156036101	WITHOUT_CLASSIFICATION	6.884396389908369E-6	IMPLEMENTATION
// ignore; I don't like doing it, but it seems like we // really just need to make all channels non-blocking by // default and use select when implementing blocking ops, // so if this remains set non-blocking, perhaps it's not // such a big deal...	WITHOUT_CLASSIFICATION	0.9999784287919065	WITHOUT_CLASSIFICATION	2.1571208093500406E-5	IMPLEMENTATION
// can't select, just have to do a blocking call	WITHOUT_CLASSIFICATION	0.9999672377340308	WITHOUT_CLASSIFICATION	3.276226596913956E-5	IMPLEMENTATION
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9999485325594248	WITHOUT_CLASSIFICATION	5.146744057512101E-5	IMPLEMENTATION
// Create Constants class	WITHOUT_CLASSIFICATION	0.9999727042138656	WITHOUT_CLASSIFICATION	2.72957861343959E-5	IMPLEMENTATION
// Create constants for open flags	WITHOUT_CLASSIFICATION	0.9999743814821065	WITHOUT_CLASSIFICATION	2.5618517893575685E-5	IMPLEMENTATION
// Strip off the O_ prefix, so they become File::RDONLY, and so on	WITHOUT_CLASSIFICATION	0.9999447422552529	WITHOUT_CLASSIFICATION	5.5257744747166745E-5	IMPLEMENTATION
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999715747012606	WITHOUT_CLASSIFICATION	2.842529873932963E-5	IMPLEMENTATION
// File::Constants module is included in IO.	WITHOUT_CLASSIFICATION	0.9999422513611822	WITHOUT_CLASSIFICATION	5.774863881778186E-5	IMPLEMENTATION
// Make sure any existing lock is released before we try and close the file	WITHOUT_CLASSIFICATION	0.9999896684905951	WITHOUT_CLASSIFICATION	1.0331509404748027E-5	IMPLEMENTATION
// null channel always succeeds for all locking operations	WITHOUT_CLASSIFICATION	0.9999663848530185	WITHOUT_CLASSIFICATION	3.361514698155828E-5	IMPLEMENTATION
// Paths which end in "/" or "\\" must be stripped off.	WITHOUT_CLASSIFICATION	0.9999318857470676	WITHOUT_CLASSIFICATION	6.811425293235725E-5	IMPLEMENTATION
// Special case for handling ACCMODE, since constantine will generate // an invalid value if it is not defined by the platform.	WITHOUT_CLASSIFICATION	0.9999984718803229	WITHOUT_CLASSIFICATION	1.5281196771319596E-6	IMPLEMENTATION
// Return false here	WITHOUT_CLASSIFICATION	0.9999134225466259	WITHOUT_CLASSIFICATION	8.657745337406046E-5	IMPLEMENTATION
// Return false here	WITHOUT_CLASSIFICATION	0.9999134225466259	WITHOUT_CLASSIFICATION	8.657745337406046E-5	IMPLEMENTATION
// We're not actually a real file, so we can't flock	WITHOUT_CLASSIFICATION	0.9998725949888477	WITHOUT_CLASSIFICATION	1.2740501115232297E-4	IMPLEMENTATION
// Should we do anything?	WITHOUT_CLASSIFICATION	0.9997699723867917	WITHOUT_CLASSIFICATION	2.300276132082526E-4	IMPLEMENTATION
/* File class methods */	WITHOUT_CLASSIFICATION	0.9999507596986751	WITHOUT_CLASSIFICATION	4.924030132496504E-5	IMPLEMENTATION
// MRI-compatible basename handling for windows drive letter paths	WITHOUT_CLASSIFICATION	0.9999189129677566	WITHOUT_CLASSIFICATION	8.108703224342805E-5	IMPLEMENTATION
// strip c: away from relative-pathed name	WITHOUT_CLASSIFICATION	0.9999490092048993	WITHOUT_CLASSIFICATION	5.0990795100845926E-5	IMPLEMENTATION
// C:\ is returned unchanged	WITHOUT_CLASSIFICATION	0.9999587802035711	WITHOUT_CLASSIFICATION	4.1219796428807885E-5	IMPLEMENTATION
// -1 no match; 0 it is dot file not extension	WITHOUT_CLASSIFICATION	0.9999392055876153	WITHOUT_CLASSIFICATION	6.079441238467532E-5	IMPLEMENTATION
// trim trailing slashes	WITHOUT_CLASSIFICATION	0.9999212131523528	WITHOUT_CLASSIFICATION	7.878684764712084E-5	IMPLEMENTATION
// Dot is not at beginning and not at end of filename. 	WITHOUT_CLASSIFICATION	0.9999276284563511	WITHOUT_CLASSIFICATION	7.237154364891026E-5	IMPLEMENTATION
// Handle ~user paths 	WITHOUT_CLASSIFICATION	0.9999198421524266	WITHOUT_CLASSIFICATION	8.015784757342515E-5	IMPLEMENTATION
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9999485325594248	WITHOUT_CLASSIFICATION	5.146744057512101E-5	IMPLEMENTATION
// Include additional path separator // (so that dirname of "C:\file.txt" is  "C:\", not "C:")	WITHOUT_CLASSIFICATION	0.9999295627122076	WITHOUT_CLASSIFICATION	7.043728779238145E-5	IMPLEMENTATION
// FNFException can be thrown in both cases, when the file // is not found, or when permission is denied.	WITHOUT_CLASSIFICATION	0.9999925716729179	WITHOUT_CLASSIFICATION	7.4283270820626435E-6	IMPLEMENTATION
// No directory delimeter.  Rest of string is username	WITHOUT_CLASSIFICATION	0.9999769290500934	WITHOUT_CLASSIFICATION	2.307094990665346E-5	IMPLEMENTATION
// If there's a second argument, it's the path to which the first  // argument is relative.	WITHOUT_CLASSIFICATION	0.9999925214654516	WITHOUT_CLASSIFICATION	7.478534548346218E-6	IMPLEMENTATION
// Handle ~user paths.	WITHOUT_CLASSIFICATION	0.9999195795359294	WITHOUT_CLASSIFICATION	8.04204640707037E-5	IMPLEMENTATION
// If there's no second argument, simply use the working directory  // of the runtime.	WITHOUT_CLASSIFICATION	0.9999936547494964	WITHOUT_CLASSIFICATION	6.345250503687473E-6	IMPLEMENTATION
// Find out which string to check.	WITHOUT_CLASSIFICATION	0.999969815812655	WITHOUT_CLASSIFICATION	3.0184187345054456E-5	IMPLEMENTATION
// Single '~' as whole path to expand	WITHOUT_CLASSIFICATION	0.9998863458595306	WITHOUT_CLASSIFICATION	1.1365414046932021E-4	IMPLEMENTATION
// Count number of extra slashes in the beginning of the string.	WITHOUT_CLASSIFICATION	0.9999928236324503	WITHOUT_CLASSIFICATION	7.176367549697791E-6	IMPLEMENTATION
// '~user/...' as path to expand	WITHOUT_CLASSIFICATION	0.9998720311707441	WITHOUT_CLASSIFICATION	1.279688292559199E-4	IMPLEMENTATION
// '~/...' as path to expand	WITHOUT_CLASSIFICATION	0.9998704284859216	WITHOUT_CLASSIFICATION	1.2957151407848002E-4	IMPLEMENTATION
// Prepare a string with the same number of redundant slashes so that  // we easily can prepend it to the result.	WITHOUT_CLASSIFICATION	0.9999914905554858	WITHOUT_CLASSIFICATION	8.509444514243174E-6	IMPLEMENTATION
// If there are N slashes, then we want N-1.	WITHOUT_CLASSIFICATION	0.999978585972886	WITHOUT_CLASSIFICATION	2.1414027114033473E-5	IMPLEMENTATION
// no canonical path yet or length is zero, and we have a / followed by a dot...	WITHOUT_CLASSIFICATION	0.9999600495695949	WITHOUT_CLASSIFICATION	3.995043040513467E-5	IMPLEMENTATION
// we don't have another slash after this, so replace /. with /	WITHOUT_CLASSIFICATION	0.999972894822872	WITHOUT_CLASSIFICATION	2.7105177128025747E-5	IMPLEMENTATION
// we do have another slash; omit both / and . (JRUBY-1606)	WITHOUT_CLASSIFICATION	0.9999014291222297	WITHOUT_CLASSIFICATION	9.857087777030711E-5	IMPLEMENTATION
// do nothing, we should not delete the drive letter	WITHOUT_CLASSIFICATION	0.9999959941418558	WITHOUT_CLASSIFICATION	4.005858144170791E-6	IMPLEMENTATION
/* rb: check_modifiable */	WITHOUT_CLASSIFICATION	0.9999115267016634	WITHOUT_CLASSIFICATION	8.847329833656862E-5	IMPLEMENTATION
/* rb: readable */	WITHOUT_CLASSIFICATION	0.9998792722414044	WITHOUT_CLASSIFICATION	1.2072775859562594E-4	IMPLEMENTATION
// rename is successful	WITHOUT_CLASSIFICATION	0.9999577814744444	WITHOUT_CLASSIFICATION	4.2218525555602464E-5	IMPLEMENTATION
// rename via Java API call wasn't successful, let's try some tricks, similar to MRI 	WITHOUT_CLASSIFICATION	0.9999645143998677	WITHOUT_CLASSIFICATION	3.548560013236488E-5	IMPLEMENTATION
// try to rename one more time	WITHOUT_CLASSIFICATION	0.9999498069228836	WITHOUT_CLASSIFICATION	5.0193077116494883E-5	IMPLEMENTATION
// Can we produce IOError which bypasses a close?	WITHOUT_CLASSIFICATION	0.9999145898290949	WITHOUT_CLASSIFICATION	8.54101709051677E-5	IMPLEMENTATION
// Fast path since JNA stat is about 10x slower than this	WITHOUT_CLASSIFICATION	0.9999223325335732	WITHOUT_CLASSIFICATION	7.766746642672152E-5	IMPLEMENTATION
// RubyContinuation	WITHOUT_CLASSIFICATION	0.9998784366268071	WITHOUT_CLASSIFICATION	1.2156337319284325E-4	IMPLEMENTATION
/*     *  Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq)     *  it doesn't initialize ifNone field     */	WITHOUT_CLASSIFICATION	0.9999981181195189	WITHOUT_CLASSIFICATION	1.8818804811344207E-6	IMPLEMENTATION
// 16 ?	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
// generation count for O(1) clears	WITHOUT_CLASSIFICATION	0.9999768448536783	WITHOUT_CLASSIFICATION	2.3155146321673837E-5	IMPLEMENTATION
// size + 1;	WITHOUT_CLASSIFICATION	0.9999024716552027	WITHOUT_CLASSIFICATION	9.752834479729802E-5	IMPLEMENTATION
// suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen	WITHOUT_CLASSIFICATION	0.9999238736499967	WITHOUT_CLASSIFICATION	7.612635000335686E-5	IMPLEMENTATION
// ------------------------------	WITHOUT_CLASSIFICATION	0.99998724346849	WITHOUT_CLASSIFICATION	1.275653150994254E-5	IMPLEMENTATION
// ------------------------------	WITHOUT_CLASSIFICATION	0.99998724346849	WITHOUT_CLASSIFICATION	1.275653150994254E-5	IMPLEMENTATION
// put implementation	WITHOUT_CLASSIFICATION	0.9954576158306272	WITHOUT_CLASSIFICATION	0.00454238416937281	IMPLEMENTATION
// get implementation	WITHOUT_CLASSIFICATION	0.9977734092668281	WITHOUT_CLASSIFICATION	0.002226590733171819	IMPLEMENTATION
// specialized for value	WITHOUT_CLASSIFICATION	0.9999694408092648	WITHOUT_CLASSIFICATION	3.0559190735255596E-5	IMPLEMENTATION
// delete implementation	WITHOUT_CLASSIFICATION	0.9986614703265265	WITHOUT_CLASSIFICATION	0.0013385296734734877	IMPLEMENTATION
// n.b. we need to recompute the hash in case the key object was modified	WITHOUT_CLASSIFICATION	0.9999643985985592	WITHOUT_CLASSIFICATION	3.560140144079836E-5	IMPLEMENTATION
/* ============================     * End of hash internals     * ============================     */	WITHOUT_CLASSIFICATION	0.9999537158340903	WITHOUT_CLASSIFICATION	4.62841659096965E-5	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================     */	WITHOUT_CLASSIFICATION	0.9999577658284797	WITHOUT_CLASSIFICATION	4.2234171520297E-5	IMPLEMENTATION
// update the hash value	WITHOUT_CLASSIFICATION	0.9999882194815839	WITHOUT_CLASSIFICATION	1.178051841614362E-5	IMPLEMENTATION
// other hash does not contain key	WITHOUT_CLASSIFICATION	0.9999465531464822	WITHOUT_CLASSIFICATION	5.34468535179127E-5	IMPLEMENTATION
// rb_yield_values(2,...) equivalent	WITHOUT_CLASSIFICATION	0.9998270940805664	WITHOUT_CLASSIFICATION	1.7290591943358737E-4	IMPLEMENTATION
// Satisfy java.util.Set interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999532616133998	WITHOUT_CLASSIFICATION	4.6738386600308656E-5	IMPLEMENTATION
// remain where we are	WITHOUT_CLASSIFICATION	0.9999322051205335	WITHOUT_CLASSIFICATION	6.779487946655222E-5	IMPLEMENTATION
// We use file test since it is faster than a stat; also euid == uid in Java always	WITHOUT_CLASSIFICATION	0.9999456091614468	WITHOUT_CLASSIFICATION	5.4390838553254306E-5	IMPLEMENTATION
// default: don't retain	WITHOUT_CLASSIFICATION	0.999980129354549	WITHOUT_CLASSIFICATION	1.9870645450942203E-5	IMPLEMENTATION
// once hasNext has been called, we commit to next() returning // the entry it found, even if it were subsequently deleted	WITHOUT_CLASSIFICATION	0.9999784360824057	WITHOUT_CLASSIFICATION	2.1563917594343637E-5	IMPLEMENTATION
// Not exposed by filetest, but so similiar in nature that it is stored here	WITHOUT_CLASSIFICATION	0.999915510046489	WITHOUT_CLASSIFICATION	8.448995351096715E-5	IMPLEMENTATION
// We do both writable and writable_real through the same method because // in our java process effective and real userid will always be the same.	WITHOUT_CLASSIFICATION	0.9999871281868228	WITHOUT_CLASSIFICATION	1.2871813177314428E-5	IMPLEMENTATION
// first try as directory	WITHOUT_CLASSIFICATION	0.9999705627164707	WITHOUT_CLASSIFICATION	2.9437283529337154E-5	IMPLEMENTATION
// next as regular file	WITHOUT_CLASSIFICATION	0.9998973259098206	WITHOUT_CLASSIFICATION	1.02674090179442E-4	IMPLEMENTATION
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9999699104654334	WITHOUT_CLASSIFICATION	3.0089534566606952E-5	IMPLEMENTATION
// NIO-based	WITHOUT_CLASSIFICATION	0.9998896526270782	WITHOUT_CLASSIFICATION	1.1034737292178832E-4	IMPLEMENTATION
// NIO-based	WITHOUT_CLASSIFICATION	0.9998896526270782	WITHOUT_CLASSIFICATION	1.1034737292178832E-4	IMPLEMENTATION
// Stream-based	WITHOUT_CLASSIFICATION	0.999899694328251	WITHOUT_CLASSIFICATION	1.0030567174901284E-4	IMPLEMENTATION
// special constructor that accepts stream, not channel	WITHOUT_CLASSIFICATION	0.9999531239353914	WITHOUT_CLASSIFICATION	4.6876064608584816E-5	IMPLEMENTATION
/*     * We use FILE versus IO to match T_FILE in MRI.     */	WITHOUT_CLASSIFICATION	0.9999738877716753	WITHOUT_CLASSIFICATION	2.6112228324757982E-5	IMPLEMENTATION
// Constants for seek	WITHOUT_CLASSIFICATION	0.9999440836220892	WITHOUT_CLASSIFICATION	5.5916377910944384E-5	IMPLEMENTATION
// confirm we're not reopening self's channel	WITHOUT_CLASSIFICATION	0.9999404317648155	WITHOUT_CLASSIFICATION	5.95682351843739E-5	IMPLEMENTATION
// check if we're a stdio IO, and ensure we're not badly mutilated	WITHOUT_CLASSIFICATION	0.9999840089424218	WITHOUT_CLASSIFICATION	1.5991057578216307E-5	IMPLEMENTATION
// dup2 new fd into self to preserve fileno and references to it	WITHOUT_CLASSIFICATION	0.9999588494393138	WITHOUT_CLASSIFICATION	4.11505606861625E-5	IMPLEMENTATION
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999590800310733	WITHOUT_CLASSIFICATION	4.091996892678793E-5	IMPLEMENTATION
// re-register the descriptor	WITHOUT_CLASSIFICATION	0.9999620587424488	WITHOUT_CLASSIFICATION	3.7941257551176846E-5	IMPLEMENTATION
// since we're not actually duping the incoming channel into our handler, we need to // copy the original sync behavior from the other handler	WITHOUT_CLASSIFICATION	0.9999683868905843	WITHOUT_CLASSIFICATION	3.1613109415660774E-5	IMPLEMENTATION
// re-register	WITHOUT_CLASSIFICATION	0.9999046212971019	WITHOUT_CLASSIFICATION	9.537870289812865E-5	IMPLEMENTATION
// A potentially previously close IO is being 'reopened'.	WITHOUT_CLASSIFICATION	0.9999455071163018	WITHOUT_CLASSIFICATION	5.449288369818878E-5	IMPLEMENTATION
/*     * Ensure that separator is valid otherwise give it the default paragraph separator.     */	WITHOUT_CLASSIFICATION	0.9999970214162468	WITHOUT_CLASSIFICATION	2.978583753093378E-6	IMPLEMENTATION
// loop until we see the nth separator char	WITHOUT_CLASSIFICATION	0.9999586267260089	WITHOUT_CLASSIFICATION	4.1373273991052765E-5	IMPLEMENTATION
// if we hit EOF or reached limit then we're done	WITHOUT_CLASSIFICATION	0.9999381242736368	WITHOUT_CLASSIFICATION	6.18757263632549E-5	IMPLEMENTATION
// this is for a range check, near as I can tell	WITHOUT_CLASSIFICATION	0.9999612609979208	WITHOUT_CLASSIFICATION	3.8739002079239846E-5	IMPLEMENTATION
// IO class methods.	WITHOUT_CLASSIFICATION	0.9999350268361819	WITHOUT_CLASSIFICATION	6.497316381823035E-5	IMPLEMENTATION
// use original modes	WITHOUT_CLASSIFICATION	0.9999523954197647	WITHOUT_CLASSIFICATION	4.760458023537355E-5	IMPLEMENTATION
// See if we already have this descriptor open. // If so then we can mostly share the handler (keep open // file, but possibly change the mode).	WITHOUT_CLASSIFICATION	0.9999788796493863	WITHOUT_CLASSIFICATION	2.1120350613744016E-5	IMPLEMENTATION
// redundant, done above as well	WITHOUT_CLASSIFICATION	0.9998891580346404	WITHOUT_CLASSIFICATION	1.1084196535952008E-4	IMPLEMENTATION
// MRI behavior: swallow StandardErorrs	WITHOUT_CLASSIFICATION	0.9999320707811302	WITHOUT_CLASSIFICATION	6.792921886978133E-5	IMPLEMENTATION
// -1 == don't set permissions	WITHOUT_CLASSIFICATION	0.9999252381009067	WITHOUT_CLASSIFICATION	7.476189909334646E-5	IMPLEMENTATION
// isRetained=true	WITHOUT_CLASSIFICATION	0.9998789269135612	WITHOUT_CLASSIFICATION	1.2107308643887053E-4	IMPLEMENTATION
// This appears to be some windows-only mode.  On a java platform this is a no-op	WITHOUT_CLASSIFICATION	0.9999796654346346	WITHOUT_CLASSIFICATION	2.0334565365343485E-5	IMPLEMENTATION
// if not sync, we switch to write buffered mode	WITHOUT_CLASSIFICATION	0.9999638677898307	WITHOUT_CLASSIFICATION	3.613221016937477E-5	IMPLEMENTATION
/*     * Throw bad file descriptor is we can not read on supplied descriptor.     */	WITHOUT_CLASSIFICATION	0.9999744747107099	WITHOUT_CLASSIFICATION	2.5525289290094125E-5	IMPLEMENTATION
//Everything written	WITHOUT_CLASSIFICATION	0.9999129552235505	WITHOUT_CLASSIFICATION	8.704477644950906E-5	IMPLEMENTATION
//            return len - n;	WITHOUT_CLASSIFICATION	0.9999879673734352	WITHOUT_CLASSIFICATION	1.2032626564875644E-5	IMPLEMENTATION
// Claims conversion is done via 'to_s' in docs.	WITHOUT_CLASSIFICATION	0.9999496895022763	WITHOUT_CLASSIFICATION	5.031049772381332E-5	IMPLEMENTATION
// Of course this isn't particularly useful.	WITHOUT_CLASSIFICATION	0.9998373527987334	WITHOUT_CLASSIFICATION	1.626472012664609E-4	IMPLEMENTATION
// Must be back on first line on rewind.	WITHOUT_CLASSIFICATION	0.9999550881870507	WITHOUT_CLASSIFICATION	4.4911812949343786E-5	IMPLEMENTATION
// Register the new descriptor	WITHOUT_CLASSIFICATION	0.9999661045713709	WITHOUT_CLASSIFICATION	3.389542862910586E-5	IMPLEMENTATION
// cleanup, raising errors if any	WITHOUT_CLASSIFICATION	0.9999205586042199	WITHOUT_CLASSIFICATION	7.944139578010736E-5	IMPLEMENTATION
// hmmmm	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
// I believe Ruby bails out with a "bug" if closing fails	WITHOUT_CLASSIFICATION	0.999911212295827	WITHOUT_CLASSIFICATION	8.878770417294424E-5	IMPLEMENTATION
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec. // And why the hell does webrick pass this in as a first argument!!!!!	WITHOUT_CLASSIFICATION	0.9999906362951578	WITHOUT_CLASSIFICATION	9.363704842255411E-6	IMPLEMENTATION
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec.	WITHOUT_CLASSIFICATION	0.9999903679477258	WITHOUT_CLASSIFICATION	9.63205227430101E-6	IMPLEMENTATION
// Length to read	WITHOUT_CLASSIFICATION	0.9999300008054193	WITHOUT_CLASSIFICATION	6.999919458073423E-5	IMPLEMENTATION
// String/Buffer to read it into	WITHOUT_CLASSIFICATION	0.999952747536501	WITHOUT_CLASSIFICATION	4.7252463499021506E-5	IMPLEMENTATION
// cryptic for the uninitiated...	WITHOUT_CLASSIFICATION	0.9999310558997484	WITHOUT_CLASSIFICATION	6.894410025160869E-5	IMPLEMENTATION
// select until read is ready	WITHOUT_CLASSIFICATION	0.9999666935874314	WITHOUT_CLASSIFICATION	3.3306412568641464E-5	IMPLEMENTATION
//        ByteList buffer = null;	WITHOUT_CLASSIFICATION	0.9999682616167308	WITHOUT_CLASSIFICATION	3.173838326910568E-5	IMPLEMENTATION
//            buffer = str.getByteList();	WITHOUT_CLASSIFICATION	0.9999659403670529	WITHOUT_CLASSIFICATION	3.405963294708145E-5	IMPLEMENTATION
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999126618141971	WITHOUT_CLASSIFICATION	8.73381858028577E-5	IMPLEMENTATION
/* rb: writable */	WITHOUT_CLASSIFICATION	0.9998907161677246	WITHOUT_CLASSIFICATION	1.0928383227535674E-4	IMPLEMENTATION
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999126618141971	WITHOUT_CLASSIFICATION	8.73381858028577E-5	IMPLEMENTATION
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.999985969833496	WITHOUT_CLASSIFICATION	1.403016650398451E-5	IMPLEMENTATION
// TODO: read into buffer using all the fread logic //        int read = openFile.getMainStream().fread(buffer);	WITHOUT_CLASSIFICATION	0.9695402452446785	WITHOUT_CLASSIFICATION	0.03045975475532141	IMPLEMENTATION
// truncate buffer string to zero, if provided	WITHOUT_CLASSIFICATION	0.9999678450712729	WITHOUT_CLASSIFICATION	3.215492872707483E-5	IMPLEMENTATION
// TODO: READ_CHECK from MRI	WITHOUT_CLASSIFICATION	0.72581002174927	WITHOUT_CLASSIFICATION	0.27418997825073005	IMPLEMENTATION
/* class methods for IO */	WITHOUT_CLASSIFICATION	0.9999528976045853	WITHOUT_CLASSIFICATION	4.710239541467942E-5	IMPLEMENTATION
// save blocking state	WITHOUT_CLASSIFICATION	0.9999436416548738	WITHOUT_CLASSIFICATION	5.635834512622663E-5	IMPLEMENTATION
// write	WITHOUT_CLASSIFICATION	0.9963318175770296	WITHOUT_CLASSIFICATION	0.0036681824229703227	IMPLEMENTATION
// Java's select doesn't do anything about this, so we leave it be.	WITHOUT_CLASSIFICATION	0.9999860270353357	WITHOUT_CLASSIFICATION	1.397296466439608E-5	IMPLEMENTATION
// make all sockets blocking as configured again // close unregisters all channels, so we can safely reset blocking modes	WITHOUT_CLASSIFICATION	0.9999685470128815	WITHOUT_CLASSIFICATION	3.1452987118489944E-5	IMPLEMENTATION
// FIXME: process options	WITHOUT_CLASSIFICATION	0.9997823220366434	WITHOUT_CLASSIFICATION	2.1767796335664895E-4	IMPLEMENTATION
// Enebo: annotation processing forced me to do pangea method here...	WITHOUT_CLASSIFICATION	0.9999424933799971	WITHOUT_CLASSIFICATION	5.7506620002900936E-5	IMPLEMENTATION
// NIO based pipe	WITHOUT_CLASSIFICATION	0.9998817083833418	WITHOUT_CLASSIFICATION	1.1829161665823383E-4	IMPLEMENTATION
// not using remove(Object) here to avoid the equals() call	WITHOUT_CLASSIFICATION	0.9997433613317319	WITHOUT_CLASSIFICATION	2.56638668268039E-4	IMPLEMENTATION
// raise will also wake the thread from selection	WITHOUT_CLASSIFICATION	0.9999750197440784	WITHOUT_CLASSIFICATION	2.4980255921548078E-5	IMPLEMENTATION
/* may need to handle ENC_CODERANGE_BROKEN */	WITHOUT_CLASSIFICATION	0.9997594385183514	WITHOUT_CLASSIFICATION	2.405614816486077E-4	IMPLEMENTATION
// TODO: rb_usascii_str_new2	WITHOUT_CLASSIFICATION	0.8950919770089791	WITHOUT_CLASSIFICATION	0.10490802299102094	IMPLEMENTATION
// If we know what method was being called, strip everything // before the call. This hides the JRuby and reflection internals.	WITHOUT_CLASSIFICATION	0.9999731382933619	WITHOUT_CLASSIFICATION	2.6861706638089662E-5	IMPLEMENTATION
// The class of this object	WITHOUT_CLASSIFICATION	0.9999794911001961	WITHOUT_CLASSIFICATION	2.0508899803849127E-5	IMPLEMENTATION
// zeroed by jvm	WITHOUT_CLASSIFICATION	0.9998853064534702	WITHOUT_CLASSIFICATION	1.146935465297613E-4	IMPLEMENTATION
//objectClass.defineAnnotatedMethods(BasicObjectMethods.class);	WITHOUT_CLASSIFICATION	0.9999262025591681	WITHOUT_CLASSIFICATION	7.379744083198894E-5	IMPLEMENTATION
// JRUBY-4113: callers should not call setTaint on immediate objects	WITHOUT_CLASSIFICATION	0.9999563332166999	WITHOUT_CLASSIFICATION	4.36667833001681E-5	IMPLEMENTATION
// rb_class_boot	WITHOUT_CLASSIFICATION	0.9998768030065776	WITHOUT_CLASSIFICATION	1.2319699342253461E-4	IMPLEMENTATION
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9998965151503372	WITHOUT_CLASSIFICATION	1.0348484966281427E-4	IMPLEMENTATION
// 1.9 rb_check_to_integer	WITHOUT_CLASSIFICATION	0.9998985339068603	WITHOUT_CLASSIFICATION	1.0146609313962937E-4	IMPLEMENTATION
// for interface impls	WITHOUT_CLASSIFICATION	0.9999779621039082	WITHOUT_CLASSIFICATION	2.2037896091841103E-5	IMPLEMENTATION
// We're cloning ourselves, so we know the result should be a RubyObject	WITHOUT_CLASSIFICATION	0.9999432282908336	WITHOUT_CLASSIFICATION	5.6771709166538226E-5	IMPLEMENTATION
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999761266621242	WITHOUT_CLASSIFICATION	2.387333787579156E-5	IMPLEMENTATION
// can't use -v and stdin	WITHOUT_CLASSIFICATION	0.9999432135250858	WITHOUT_CLASSIFICATION	5.6786474914189E-5	IMPLEMENTATION
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999432418783251	WITHOUT_CLASSIFICATION	5.6758121674904955E-5	IMPLEMENTATION
// Equivalent of Data_Get_Struct // This will first check that the object in question is actually a T_DATA equivalent.	WITHOUT_CLASSIFICATION	0.9999745692085567	WITHOUT_CLASSIFICATION	2.543079144336789E-5	IMPLEMENTATION
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999093234394454	WITHOUT_CLASSIFICATION	9.067656055461046E-5	IMPLEMENTATION
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999093235682442	WITHOUT_CLASSIFICATION	9.06764317558258E-5	IMPLEMENTATION
// // INSTANCE VARIABLE API METHODS //	WITHOUT_CLASSIFICATION	0.999909235564952	WITHOUT_CLASSIFICATION	9.076443504790567E-5	IMPLEMENTATION
// Struct methods	WITHOUT_CLASSIFICATION	0.9999163921272873	WITHOUT_CLASSIFICATION	8.360787271268359E-5	IMPLEMENTATION
//runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);	WITHOUT_CLASSIFICATION	0.9999340364969714	WITHOUT_CLASSIFICATION	6.596350302852872E-5	IMPLEMENTATION
// define access methods.	WITHOUT_CLASSIFICATION	0.9999511220585752	WITHOUT_CLASSIFICATION	4.887794142476401E-5	IMPLEMENTATION
// if we are storing a name as well, index is one too high for values	WITHOUT_CLASSIFICATION	0.9999708606397171	WITHOUT_CLASSIFICATION	2.91393602829587E-5	IMPLEMENTATION
// Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999783256781121	WITHOUT_CLASSIFICATION	2.1674321888004223E-5	IMPLEMENTATION
// For binding purposes on the newly created struct types	WITHOUT_CLASSIFICATION	0.9999596733594344	WITHOUT_CLASSIFICATION	4.032664056558179E-5	IMPLEMENTATION
// OBJ_INFECT        	WITHOUT_CLASSIFICATION	0.9999172722072378	WITHOUT_CLASSIFICATION	8.272779276218959E-5	IMPLEMENTATION
// These call* assume ThreadContext = receiver.getRuntime().getCurrentContext()	WITHOUT_CLASSIFICATION	0.9999500421930252	WITHOUT_CLASSIFICATION	4.995780697484027E-5	IMPLEMENTATION
// Execute iterateMethod again.	WITHOUT_CLASSIFICATION	0.9999384087723986	WITHOUT_CLASSIFICATION	6.159122760146952E-5	IMPLEMENTATION
/*     * @param nv number of times to cycle or -1 to cycle indefinitely     */	WITHOUT_CLASSIFICATION	0.9999824740042853	WITHOUT_CLASSIFICATION	1.752599571477022E-5	IMPLEMENTATION
// Atomic ?	WITHOUT_CLASSIFICATION	0.9998766846217828	WITHOUT_CLASSIFICATION	1.2331537821723534E-4	IMPLEMENTATION
// Atomic ?	WITHOUT_CLASSIFICATION	0.9998766846217828	WITHOUT_CLASSIFICATION	1.2331537821723534E-4	IMPLEMENTATION
// MUST NOT be used across threads	WITHOUT_CLASSIFICATION	0.9999196467031084	WITHOUT_CLASSIFICATION	8.035329689159464E-5	IMPLEMENTATION
// superClass may be null.	WITHOUT_CLASSIFICATION	0.9999390728351409	WITHOUT_CLASSIFICATION	6.092716485914476E-5	IMPLEMENTATION
// Containing class...The parent of Object is null. Object should always be last in chain.	WITHOUT_CLASSIFICATION	0.9999622324307655	WITHOUT_CLASSIFICATION	3.776756923445357E-5	IMPLEMENTATION
// ClassId is the name of the class/module sans where it is located. // If it is null, then it an anonymous class.	WITHOUT_CLASSIFICATION	0.9999939854061606	WITHOUT_CLASSIFICATION	6.014593839540544E-6	IMPLEMENTATION
// ClassProviders return Java class/module (in #defineOrGetClassUnder and // #defineOrGetModuleUnder) when class/module is opened using colon syntax. 	WITHOUT_CLASSIFICATION	0.9999831728395578	WITHOUT_CLASSIFICATION	1.6827160442158257E-5	IMPLEMENTATION
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999860459489474	WITHOUT_CLASSIFICATION	1.3954051052684945E-5	IMPLEMENTATION
// Make sure the module we include does not already exist	WITHOUT_CLASSIFICATION	0.9999914809975375	WITHOUT_CLASSIFICATION	8.519002462571826E-6	IMPLEMENTATION
// MRI checks all types first:	WITHOUT_CLASSIFICATION	0.9999205377501104	WITHOUT_CLASSIFICATION	7.946224988964205E-5	IMPLEMENTATION
// we need full traces, use default (slow) populator	WITHOUT_CLASSIFICATION	0.9999720505972943	WITHOUT_CLASSIFICATION	2.794940270566989E-5	IMPLEMENTATION
// module/singleton methods are all defined public	WITHOUT_CLASSIFICATION	0.9999572090624181	WITHOUT_CLASSIFICATION	4.27909375819215E-5	IMPLEMENTATION
// See if module is in chain...Cannot match against itself so start at superClass.	WITHOUT_CLASSIFICATION	0.9999614338668015	WITHOUT_CLASSIFICATION	3.856613319847065E-5	IMPLEMENTATION
// We can safely reference methods here instead of doing getMethods() since if we // are adding we are not using a IncludedModuleWrapper.	WITHOUT_CLASSIFICATION	0.9999865576383662	WITHOUT_CLASSIFICATION	1.344236163375035E-5	IMPLEMENTATION
// we grab serial number first; the worst that will happen is we cache a later // update with an earlier serial number, which would just flush anyway	WITHOUT_CLASSIFICATION	0.9999873942145829	WITHOUT_CLASSIFICATION	1.2605785417001506E-5	IMPLEMENTATION
// update all hierarchies into which this module has been included	WITHOUT_CLASSIFICATION	0.9999683488963437	WITHOUT_CLASSIFICATION	3.1651103656224025E-5	IMPLEMENTATION
// This method is intended only for defining new classes in Ruby code, // so it uses the allocator of the specified superclass or default to // the Object allocator. It should NOT be used to define classes that require a native allocator.	WITHOUT_CLASSIFICATION	0.9999975082579914	WITHOUT_CLASSIFICATION	2.491742008632572E-6	IMPLEMENTATION
// need to skip IncludedModuleWrappers	WITHOUT_CLASSIFICATION	0.999907132157249	WITHOUT_CLASSIFICATION	9.286784275099206E-5	IMPLEMENTATION
// superClazz = null;	WITHOUT_CLASSIFICATION	0.9999258836795056	WITHOUT_CLASSIFICATION	7.411632049436001E-5	IMPLEMENTATION
// reopen a java class	WITHOUT_CLASSIFICATION	0.9999356094237482	WITHOUT_CLASSIFICATION	6.439057625174485E-5	IMPLEMENTATION
// This method is intended only for defining new modules in Ruby code	WITHOUT_CLASSIFICATION	0.9999200488959047	WITHOUT_CLASSIFICATION	7.995110409531003E-5	IMPLEMENTATION
// reopen a java module	WITHOUT_CLASSIFICATION	0.999909769210293	WITHOUT_CLASSIFICATION	9.023078970710965E-5	IMPLEMENTATION
//FIXME warning	WITHOUT_CLASSIFICATION	0.999882673571788	WITHOUT_CLASSIFICATION	1.1732642821209528E-4	IMPLEMENTATION
// FIXME warning	WITHOUT_CLASSIFICATION	0.9998328349531472	WITHOUT_CLASSIFICATION	1.6716504685282838E-4	IMPLEMENTATION
// a normal block passed to define_method changes to do arity checking; make it a lambda	WITHOUT_CLASSIFICATION	0.9999333662985133	WITHOUT_CLASSIFICATION	6.663370148673676E-5	IMPLEMENTATION
// for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope	WITHOUT_CLASSIFICATION	0.9999670633748047	WITHOUT_CLASSIFICATION	3.2936625195349603E-5	IMPLEMENTATION
// just using required is broken...but no more broken than before zsuper refactoring	WITHOUT_CLASSIFICATION	0.9999585360293195	WITHOUT_CLASSIFICATION	4.1463970680440993E-5	IMPLEMENTATION
// class and module bodies default to public, so make the block's visibility public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999891660708846	WITHOUT_CLASSIFICATION	1.0833929115302683E-5	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999977251097592	WITHOUT_CLASSIFICATION	2.2748902409320765E-6	IMPLEMENTATION
// MRI error message says Class, even though Module is ok 	WITHOUT_CLASSIFICATION	0.9999604401380822	WITHOUT_CLASSIFICATION	3.955986191787435E-5	IMPLEMENTATION
// scan class hierarchy for module	WITHOUT_CLASSIFICATION	0.9999541542221272	WITHOUT_CLASSIFICATION	4.584577787275289E-5	IMPLEMENTATION
/* Module class methods */	WITHOUT_CLASSIFICATION	0.9999490148560585	WITHOUT_CLASSIFICATION	5.098514394154276E-5	IMPLEMENTATION
// Note: we change current frames visibility here because the methods which call // this method are all "fast" (e.g. they do not created their own frame).	WITHOUT_CLASSIFICATION	0.9999895858746973	WITHOUT_CLASSIFICATION	1.0414125302755927E-5	IMPLEMENTATION
// next in hierarchy is an included version of the module we're attempting, // so we skip including it	WITHOUT_CLASSIFICATION	0.9999897174912133	WITHOUT_CLASSIFICATION	1.0282508786565026E-5	IMPLEMENTATION
// if we haven't encountered a real superclass, use the found module as the new inclusion point	WITHOUT_CLASSIFICATION	0.9999868035341447	WITHOUT_CLASSIFICATION	1.319646585535821E-5	IMPLEMENTATION
// build a list of all modules to consider for inclusion	WITHOUT_CLASSIFICATION	0.9999326474944623	WITHOUT_CLASSIFICATION	6.735250553762843E-5	IMPLEMENTATION
// if the insertion point is a class, update subclass lists	WITHOUT_CLASSIFICATION	0.9999939401058177	WITHOUT_CLASSIFICATION	6.059894182333369E-6	IMPLEMENTATION
// if there's a non-null superclass, we're including into a normal class hierarchy; // update subclass relationships to avoid stale parent/child relationships	WITHOUT_CLASSIFICATION	0.9999980613977086	WITHOUT_CLASSIFICATION	1.9386022914344325E-6	IMPLEMENTATION
// ////////////////// CLASS VARIABLE RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999956151506323	WITHOUT_CLASSIFICATION	4.384849367716965E-6	IMPLEMENTATION
// ////////////////// CONSTANT RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999955709922669	WITHOUT_CLASSIFICATION	4.4290077330560095E-6	IMPLEMENTATION
// Note: includes part of fix for JRUBY-1339	WITHOUT_CLASSIFICATION	0.9999168702286053	WITHOUT_CLASSIFICATION	8.312977139469185E-5	IMPLEMENTATION
// ////////////////// CLASS VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999956151957636	WITHOUT_CLASSIFICATION	4.384804236294937E-6	IMPLEMENTATION
// Wrong Parameter ?	WITHOUT_CLASSIFICATION	0.9999185981547648	WITHOUT_CLASSIFICATION	8.140184523520991E-5	IMPLEMENTATION
// not actually called anywhere (all known uses call the fast version)	WITHOUT_CLASSIFICATION	0.9997567703402831	WITHOUT_CLASSIFICATION	2.4322965971692353E-4	IMPLEMENTATION
// Not that is loaded loop around to resolve it next pass	WITHOUT_CLASSIFICATION	0.9998644520471685	WITHOUT_CLASSIFICATION	1.3554795283165103E-4	IMPLEMENTATION
// if adding a module under a constant name, set that module's basename to the constant name	WITHOUT_CLASSIFICATION	0.9999666273911642	WITHOUT_CLASSIFICATION	3.3372608835852703E-5	IMPLEMENTATION
// Fix for JRUBY-1339 - search hierarchy for constant	WITHOUT_CLASSIFICATION	0.9999420047192717	WITHOUT_CLASSIFICATION	5.799528072827984E-5	IMPLEMENTATION
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999957042904385	WITHOUT_CLASSIFICATION	4.295709561503992E-6	IMPLEMENTATION
// removes and returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999930897036255	WITHOUT_CLASSIFICATION	6.910296374367688E-6	IMPLEMENTATION
// we can't rename a file while it's open in windows	WITHOUT_CLASSIFICATION	0.999952467381041	WITHOUT_CLASSIFICATION	4.753261895894509E-5	IMPLEMENTATION
//reopen	WITHOUT_CLASSIFICATION	0.9960679869116378	WITHOUT_CLASSIFICATION	0.003932013088362211	IMPLEMENTATION
// ARGF methods	WITHOUT_CLASSIFICATION	0.9999061568370948	WITHOUT_CLASSIFICATION	9.384316290526692E-5	IMPLEMENTATION
//         data.currentFile.callMethod(context, "lineno=", line);	WITHOUT_CLASSIFICATION	0.9999697696391939	WITHOUT_CLASSIFICATION	3.0230360806006217E-5	IMPLEMENTATION
// one optional, one required args	WITHOUT_CLASSIFICATION	0.9999407011840711	WITHOUT_CLASSIFICATION	5.9298815928872434E-5	IMPLEMENTATION
// one optional and no required args	WITHOUT_CLASSIFICATION	0.999945216747883	WITHOUT_CLASSIFICATION	5.478325211706533E-5	IMPLEMENTATION
// try to get errno value out of the class	WITHOUT_CLASSIFICATION	0.999990833909953	WITHOUT_CLASSIFICATION	9.166090047036925E-6	IMPLEMENTATION
// we got a valid errno value	WITHOUT_CLASSIFICATION	0.99996314358347	WITHOUT_CLASSIFICATION	3.685641652989964E-5	IMPLEMENTATION
// Ensure we're not running on GCJ, since it's not supported and leads to weird errors	WITHOUT_CLASSIFICATION	0.9999656470759813	WITHOUT_CLASSIFICATION	3.435292401859146E-5	IMPLEMENTATION
// print out as a nice Ruby backtrace	WITHOUT_CLASSIFICATION	0.9999211584074752	WITHOUT_CLASSIFICATION	7.884159252480322E-5	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999336062087769	WITHOUT_CLASSIFICATION	6.639379122303934E-5	IMPLEMENTATION
// set thread context JRuby classloader here, for the main thread	WITHOUT_CLASSIFICATION	0.9999781935881953	WITHOUT_CLASSIFICATION	2.1806411804700868E-5	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999538135488255	WITHOUT_CLASSIFICATION	4.6186451174501284E-5	IMPLEMENTATION
// no script to run, return success below	WITHOUT_CLASSIFICATION	0.9999791278056691	WITHOUT_CLASSIFICATION	2.087219433083476E-5	IMPLEMENTATION
// Skip /usr/bin/env if it's first	WITHOUT_CLASSIFICATION	0.9999213401949637	WITHOUT_CLASSIFICATION	7.865980503633997E-5	IMPLEMENTATION
// Skip any assignments if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999278752688229	WITHOUT_CLASSIFICATION	7.212473117716966E-5	IMPLEMENTATION
// Skip any commandline args if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999398059817427	WITHOUT_CLASSIFICATION	6.019401825723026E-5	IMPLEMENTATION
// ignore error	WITHOUT_CLASSIFICATION	0.9999885877281555	WITHOUT_CLASSIFICATION	1.141227184451931E-5	IMPLEMENTATION
// ////////////////// COMMON CONSTANT / CVAR METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999955691081408	WITHOUT_CLASSIFICATION	4.430891859247172E-6	IMPLEMENTATION
// ////////////////// INTERNAL MODULE VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999955157738613	WITHOUT_CLASSIFICATION	4.484226138733282E-6	IMPLEMENTATION
// ////////////////// LOW-LEVEL CONSTANT INTERFACE //////////////// // // fetch/store/list constants for this module //	WITHOUT_CLASSIFICATION	0.999998773259386	WITHOUT_CLASSIFICATION	1.2267406140260808E-6	IMPLEMENTATION
// odd	WITHOUT_CLASSIFICATION	0.9960617738212235	WITHOUT_CLASSIFICATION	0.003938226178776483	IMPLEMENTATION
// JRubyClient	WITHOUT_CLASSIFICATION	0.9998868147673436	WITHOUT_CLASSIFICATION	1.1318523265642419E-4	IMPLEMENTATION
/*     * x = mantissa * 2 ** exponent     *     * Where mantissa is in the range of [.5, 1)     *     */	WITHOUT_CLASSIFICATION	0.9999797127353891	WITHOUT_CLASSIFICATION	2.0287264610917844E-5	IMPLEMENTATION
// Make mantissa same sign so we only have one code path.	WITHOUT_CLASSIFICATION	0.9999500788326281	WITHOUT_CLASSIFICATION	4.992116737190516E-5	IMPLEMENTATION
// Increase value to hit lower range.	WITHOUT_CLASSIFICATION	0.9999648123435554	WITHOUT_CLASSIFICATION	3.5187656444601294E-5	IMPLEMENTATION
/*     * r = x * 2 ** y     */	WITHOUT_CLASSIFICATION	0.9999705117602902	WITHOUT_CLASSIFICATION	2.9488239709753972E-5	IMPLEMENTATION
/*  0! */	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
/*  1! */	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
/*  2! */	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
/*  3! */	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
/*  4! */	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
/*  5! */	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
/*  6! */	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
/*  7! */	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
/*  8! */	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
/*  9! */	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
/* 11! */	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
/* 12! */	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
/* 13! */	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
/* 15! */	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
/* 16! */	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
/* 17! */	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
/* 19! */	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
/* 20! */	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
/* 21! */	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
// Static constants	WITHOUT_CLASSIFICATION	0.9999420979937951	WITHOUT_CLASSIFICATION	5.790200620489525E-5	IMPLEMENTATION
// Clean-up string representation so that it could be understood // by Java's BigDecimal. Not terribly efficient for now. // 1. MRI allows d and D as exponent separators	WITHOUT_CLASSIFICATION	0.9997169923687725	WITHOUT_CLASSIFICATION	2.830076312275007E-4	IMPLEMENTATION
// 2. MRI allows underscores anywhere	WITHOUT_CLASSIFICATION	0.9999037225399333	WITHOUT_CLASSIFICATION	9.627746006667413E-5	IMPLEMENTATION
// 3. MRI ignores the trailing junk	WITHOUT_CLASSIFICATION	0.9999672199776415	WITHOUT_CLASSIFICATION	3.2780022358426825E-5	IMPLEMENTATION
// MRI behavior: -0 and +0 are two different things	WITHOUT_CLASSIFICATION	0.9999063810430465	WITHOUT_CLASSIFICATION	9.361895695358052E-5	IMPLEMENTATION
// Java and MRI definitions of modulo are different.	WITHOUT_CLASSIFICATION	0.9998973084010097	WITHOUT_CLASSIFICATION	1.0269159899040937E-4	IMPLEMENTATION
// Java and MRI definitions of remainder are the same.	WITHOUT_CLASSIFICATION	0.9999444610310265	WITHOUT_CLASSIFICATION	5.5538968973452056E-5	IMPLEMENTATION
// Note: MRI has a very non-trivial way of calculating the precision, // so we use very simple approximation here:	WITHOUT_CLASSIFICATION	0.999961154114289	WITHOUT_CLASSIFICATION	3.8845885711038344E-5	IMPLEMENTATION
// Iteration variables, for the square root x and the reciprocal v // initial x:  x0 ~ sqrt() // initial v:  v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999904928672009	WITHOUT_CLASSIFICATION	9.50713279911557E-6	IMPLEMENTATION
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9998936881024724	WITHOUT_CLASSIFICATION	1.0631189752750957E-4	IMPLEMENTATION
// TODO: why this: .setResult();	WITHOUT_CLASSIFICATION	0.906210836312473	WITHOUT_CLASSIFICATION	0.093789163687527	IMPLEMENTATION
// integer division	WITHOUT_CLASSIFICATION	0.9999119921386297	WITHOUT_CLASSIFICATION	8.80078613702559E-5	IMPLEMENTATION
// MRI behavior: "If digits is 0, the result is the same as the / operator."	WITHOUT_CLASSIFICATION	0.9999775212201654	WITHOUT_CLASSIFICATION	2.2478779834642998E-5	IMPLEMENTATION
// rounding neccessary	WITHOUT_CLASSIFICATION	0.999931278547681	WITHOUT_CLASSIFICATION	6.872145231896049E-5	IMPLEMENTATION
// rounding neccessary	WITHOUT_CLASSIFICATION	0.999931278547681	WITHOUT_CLASSIFICATION	6.872145231896049E-5	IMPLEMENTATION
// Java and MRI definitions of divmod are different.        	WITHOUT_CLASSIFICATION	0.9999247175167245	WITHOUT_CLASSIFICATION	7.528248327543173E-5	IMPLEMENTATION
// JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it	WITHOUT_CLASSIFICATION	0.999977457782795	WITHOUT_CLASSIFICATION	2.254221720501811E-5	IMPLEMENTATION
// shift the decimal point just to the right of the digit to be rounded to (divide by 10**(abs(scale))) // -1 -> 10's digit, -2 -> 100's digit, etc.	WITHOUT_CLASSIFICATION	0.9999851192283284	WITHOUT_CLASSIFICATION	1.4880771671548955E-5	IMPLEMENTATION
// ...round to that digit	WITHOUT_CLASSIFICATION	0.9999365423221663	WITHOUT_CLASSIFICATION	6.345767783367416E-5	IMPLEMENTATION
// ...and shift the result back to the left (multiply by 10**(abs(scale)))	WITHOUT_CLASSIFICATION	0.9999797179329502	WITHOUT_CLASSIFICATION	2.0282067049802945E-5	IMPLEMENTATION
//this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are	WITHOUT_CLASSIFICATION	0.9999569759563597	WITHOUT_CLASSIFICATION	4.3024043640242976E-5	IMPLEMENTATION
// sign	WITHOUT_CLASSIFICATION	0.9960874602580725	WITHOUT_CLASSIFICATION	0.003912539741927552	IMPLEMENTATION
// significant digits and exponent	WITHOUT_CLASSIFICATION	0.9999202648957629	WITHOUT_CLASSIFICATION	7.973510423704431E-5	IMPLEMENTATION
// normalize the value	WITHOUT_CLASSIFICATION	0.9999649188524031	WITHOUT_CLASSIFICATION	3.508114759685646E-5	IMPLEMENTATION
// base	WITHOUT_CLASSIFICATION	0.9965951214644967	WITHOUT_CLASSIFICATION	0.003404878535503259	IMPLEMENTATION
// NOTE: MRI's sqrt precision is limited by 100, // but we allow values more than 100.	WITHOUT_CLASSIFICATION	0.9999550226814974	WITHOUT_CLASSIFICATION	4.49773185026259E-5	IMPLEMENTATION
// just in case, add a bit of extra precision	WITHOUT_CLASSIFICATION	0.9999655874109477	WITHOUT_CLASSIFICATION	3.4412589052381507E-5	IMPLEMENTATION
// eh?!	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
// Note: #fix has only no-arg form, but truncate allows optional parameter.	WITHOUT_CLASSIFICATION	0.999969726035275	WITHOUT_CLASSIFICATION	3.0273964724930373E-5	IMPLEMENTATION
// General number and precision checking	WITHOUT_CLASSIFICATION	0.9999506723263794	WITHOUT_CLASSIFICATION	4.9327673620647866E-5	IMPLEMENTATION
// the requested precision	WITHOUT_CLASSIFICATION	0.9999655997136994	WITHOUT_CLASSIFICATION	3.440028630069852E-5	IMPLEMENTATION
// Proc class	WITHOUT_CLASSIFICATION	0.999915249075349	WITHOUT_CLASSIFICATION	8.475092465097058E-5	IMPLEMENTATION
//.append("  -x[directory]   strip off text before #!ruby line and perhaps cd to directory\n")	WITHOUT_CLASSIFICATION	0.9999495154708355	WITHOUT_CLASSIFICATION	5.0484529164352026E-5	IMPLEMENTATION
// even shift.. // ..floors to 62 or 63 bit BigInteger	WITHOUT_CLASSIFICATION	0.9999203641462067	WITHOUT_CLASSIFICATION	7.963585379334361E-5	IMPLEMENTATION
// 5 -> 2, -5 -> -3 need half a scale more..	WITHOUT_CLASSIFICATION	0.9998925389429123	WITHOUT_CLASSIFICATION	1.0746105708772163E-4	IMPLEMENTATION
// ..where 100 -> 10 shifts the scale	WITHOUT_CLASSIFICATION	0.9999234198868638	WITHOUT_CLASSIFICATION	7.65801131360464E-5	IMPLEMENTATION
// Initial x - use double root - multiply by halfBack to unshift - set new scale	WITHOUT_CLASSIFICATION	0.9999598891746407	WITHOUT_CLASSIFICATION	4.0110825359238054E-5	IMPLEMENTATION
// x0 ~ sqrt()	WITHOUT_CLASSIFICATION	0.9998766846217828	WITHOUT_CLASSIFICATION	1.2331537821723534E-4	IMPLEMENTATION
// for prec 15 root x0 must surely be OK // return small prec roots without iterations	WITHOUT_CLASSIFICATION	0.9999890219274639	WITHOUT_CLASSIFICATION	1.0978072536115564E-5	IMPLEMENTATION
// Initial v - the reciprocal // v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999417774427639	WITHOUT_CLASSIFICATION	5.822255723620444E-5	IMPLEMENTATION
// Collect iteration precisions beforehand	WITHOUT_CLASSIFICATION	0.9999631712002227	WITHOUT_CLASSIFICATION	3.6828799777199187E-5	IMPLEMENTATION
// assume nInit = 16 <= prec	WITHOUT_CLASSIFICATION	0.9999269537077327	WITHOUT_CLASSIFICATION	7.304629226735083E-5	IMPLEMENTATION
// The loop of "Square Root by Coupled Newton Iteration"	WITHOUT_CLASSIFICATION	0.9999580871145339	WITHOUT_CLASSIFICATION	4.1912885466010255E-5	IMPLEMENTATION
// Increase precision - next iteration supplies n exact digits	WITHOUT_CLASSIFICATION	0.999950028107877	WITHOUT_CLASSIFICATION	4.997189212305934E-5	IMPLEMENTATION
// Next x                                        // e = d - x^2	WITHOUT_CLASSIFICATION	0.9999261814007204	WITHOUT_CLASSIFICATION	7.381859927955514E-5	IMPLEMENTATION
// x += e*v     ~ sqrt()	WITHOUT_CLASSIFICATION	0.9998965151503372	WITHOUT_CLASSIFICATION	1.0348484966281427E-4	IMPLEMENTATION
// root x is ready!	WITHOUT_CLASSIFICATION	0.9999217611646505	WITHOUT_CLASSIFICATION	7.823883534951817E-5	IMPLEMENTATION
// Next v                                        // g = 1 - 2*x*v	WITHOUT_CLASSIFICATION	0.9999261272382451	WITHOUT_CLASSIFICATION	7.387276175478792E-5	IMPLEMENTATION
// v += g*v     ~ 1/2/sqrt()	WITHOUT_CLASSIFICATION	0.9998965151503372	WITHOUT_CLASSIFICATION	1.0348484966281427E-4	IMPLEMENTATION
// RubyBigdecimal	WITHOUT_CLASSIFICATION	0.9998782897491113	WITHOUT_CLASSIFICATION	1.2171025088861183E-4	IMPLEMENTATION
// c: bind_eval	WITHOUT_CLASSIFICATION	0.9998744720100105	WITHOUT_CLASSIFICATION	1.2552798998964875E-4	IMPLEMENTATION
/*  ================     *  Module Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999524355721653	WITHOUT_CLASSIFICATION	4.7564427834661044E-5	IMPLEMENTATION
// from CommandlineParser	WITHOUT_CLASSIFICATION	0.999932073972585	WITHOUT_CLASSIFICATION	6.792602741492348E-5	IMPLEMENTATION
// This property is a Boolean, to allow three values, so it can match MRI's nil, false and true	WITHOUT_CLASSIFICATION	0.9999525223940712	WITHOUT_CLASSIFICATION	4.747760592878328E-5	IMPLEMENTATION
// default ClassCache using jitMax as a soft upper bound	WITHOUT_CLASSIFICATION	0.9999892094287333	WITHOUT_CLASSIFICATION	1.079057126668963E-5	IMPLEMENTATION
// Until we get a little more solid on 1.9 support we will only run interpreted mode	WITHOUT_CLASSIFICATION	0.9997943125549168	WITHOUT_CLASSIFICATION	2.0568744508323088E-4	IMPLEMENTATION
// Setting the loader needs to reset the class cache	WITHOUT_CLASSIFICATION	0.9999801334645524	WITHOUT_CLASSIFICATION	1.9866535447589468E-5	IMPLEMENTATION
// try the normal property first	WITHOUT_CLASSIFICATION	0.9999661563676108	WITHOUT_CLASSIFICATION	3.384363238919525E-5	IMPLEMENTATION
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999452745908831	WITHOUT_CLASSIFICATION	5.472540911690485E-5	IMPLEMENTATION
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999452745908831	WITHOUT_CLASSIFICATION	5.472540911690485E-5	IMPLEMENTATION
// try loading from classloader resources	WITHOUT_CLASSIFICATION	0.9999777594873627	WITHOUT_CLASSIFICATION	2.224051263732937E-5	IMPLEMENTATION
// otherwise fall back on system temp location	WITHOUT_CLASSIFICATION	0.9999320943282911	WITHOUT_CLASSIFICATION	6.790567170883846E-5	IMPLEMENTATION
// We require the home directory to be absolute	WITHOUT_CLASSIFICATION	0.9999825356297323	WITHOUT_CLASSIFICATION	1.7464370267766552E-5	IMPLEMENTATION
//consume the file name	WITHOUT_CLASSIFICATION	0.9999520899446404	WITHOUT_CLASSIFICATION	4.791005535965768E-5	IMPLEMENTATION
// Specify something that can't separate	WITHOUT_CLASSIFICATION	0.9999466485911429	WITHOUT_CLASSIFICATION	5.3351408857191834E-5	IMPLEMENTATION
// try cwd first	WITHOUT_CLASSIFICATION	0.9999247452698322	WITHOUT_CLASSIFICATION	7.525473016773638E-5	IMPLEMENTATION
// ruby interpreter compatibilty // Usage: ruby [switches] [--] [programfile] [arguments])	WITHOUT_CLASSIFICATION	0.9999513523564281	WITHOUT_CLASSIFICATION	4.864764357189145E-5	IMPLEMENTATION
// KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 // if Ruby 2.0 encoding pragmas are implemented, this will need to change	WITHOUT_CLASSIFICATION	0.9939848893471206	WITHOUT_CLASSIFICATION	0.00601511065287936	IMPLEMENTATION
// @JRubyMethod(name = "complex?")	WITHOUT_CLASSIFICATION	0.9998973539004232	WITHOUT_CLASSIFICATION	1.0264609957668611E-4	IMPLEMENTATION
// @JRubyMethod(name = "exact?")	WITHOUT_CLASSIFICATION	0.9999009858562448	WITHOUT_CLASSIFICATION	9.901414375519098E-5	IMPLEMENTATION
// @JRubyMethod(name = "inexact?")	WITHOUT_CLASSIFICATION	0.9999010476450143	WITHOUT_CLASSIFICATION	9.89523549855888E-5	IMPLEMENTATION
// symbol string *must* be interned	WITHOUT_CLASSIFICATION	0.9999324072671424	WITHOUT_CLASSIFICATION	6.759273285751915E-5	IMPLEMENTATION
//        assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";	WITHOUT_CLASSIFICATION	0.9999806514861287	WITHOUT_CLASSIFICATION	1.9348513871291132E-5	IMPLEMENTATION
/* Symbol class methods.     *      */	WITHOUT_CLASSIFICATION	0.9999245461090598	WITHOUT_CLASSIFICATION	7.545389094028388E-5	IMPLEMENTATION
// TODO: 1.9 rb_enc_symname_p	WITHOUT_CLASSIFICATION	0.9011935313050142	WITHOUT_CLASSIFICATION	0.09880646869498569	IMPLEMENTATION
// This is needed to unpack stuff	WITHOUT_CLASSIFICATION	0.9999572362776421	WITHOUT_CLASSIFICATION	4.27637223577946E-5	IMPLEMENTATION
// we already confirmed above that length > 0	WITHOUT_CLASSIFICATION	0.999963185253521	WITHOUT_CLASSIFICATION	3.681474647898099E-5	IMPLEMENTATION
// *must* be power of 2!	WITHOUT_CLASSIFICATION	0.9999060252629318	WITHOUT_CLASSIFICATION	9.397473706815379E-5	IMPLEMENTATION
// note all fields are final -- rehash creates new entries when necessary. // as documented in java.util.concurrent.ConcurrentHashMap.java, that will // statistically affect only a small percentage (< 20%) of entries for a given rehash.	WITHOUT_CLASSIFICATION	0.9999936946751904	WITHOUT_CLASSIFICATION	6.305324809670294E-6	IMPLEMENTATION
//            assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999806049866845	WITHOUT_CLASSIFICATION	1.9395013315483004E-5	IMPLEMENTATION
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999294535881981	WITHOUT_CLASSIFICATION	7.054641180186352E-5	IMPLEMENTATION
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999294535881981	WITHOUT_CLASSIFICATION	7.054641180186352E-5	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9998899011135143	WITHOUT_CLASSIFICATION	1.1009888648576026E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9998899011135143	WITHOUT_CLASSIFICATION	1.1009888648576026E-4	IMPLEMENTATION
// backwards-compatibility, but threadsafe now	WITHOUT_CLASSIFICATION	0.9999343598648749	WITHOUT_CLASSIFICATION	6.564013512507312E-5	IMPLEMENTATION
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999048414871031	WITHOUT_CLASSIFICATION	9.515851289685575E-5	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999438391499813	WITHOUT_CLASSIFICATION	5.616085001873667E-5	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999326986605658	WITHOUT_CLASSIFICATION	6.730133943423197E-5	IMPLEMENTATION
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999784808145389	WITHOUT_CLASSIFICATION	2.1519185461064138E-5	IMPLEMENTATION
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999365577726077	WITHOUT_CLASSIFICATION	6.344222739239462E-5	IMPLEMENTATION
// not so backwards-compatible here, but no one should have been // calling this anyway.	WITHOUT_CLASSIFICATION	0.9997454594589129	WITHOUT_CLASSIFICATION	2.545405410871205E-4	IMPLEMENTATION
// Profile	WITHOUT_CLASSIFICATION	0.9964519295909599	WITHOUT_CLASSIFICATION	0.0035480704090401108	IMPLEMENTATION
//static private final String TRANSLIT = "//translit";	WITHOUT_CLASSIFICATION	0.9999792534295279	WITHOUT_CLASSIFICATION	2.074657047210989E-5	IMPLEMENTATION
// treat start and end as start...end for end >= 0, start..end for end < 0	WITHOUT_CLASSIFICATION	0.999947692023465	WITHOUT_CLASSIFICATION	5.2307976534918364E-5	IMPLEMENTATION
// invalid ranges result in an empty string	WITHOUT_CLASSIFICATION	0.9999904961445024	WITHOUT_CLASSIFICATION	9.503855497676535E-6	IMPLEMENTATION
// Methods of the Nil Class (nil_*):	WITHOUT_CLASSIFICATION	0.9999588189689659	WITHOUT_CLASSIFICATION	4.118103103418149E-5	IMPLEMENTATION
// Has read/write been closed or is it still open for business	WITHOUT_CLASSIFICATION	0.9999297677436327	WITHOUT_CLASSIFICATION	7.023225636734669E-5	IMPLEMENTATION
// Support IO modes that this object was opened with	WITHOUT_CLASSIFICATION	0.9999129001548746	WITHOUT_CLASSIFICATION	8.709984512537852E-5	IMPLEMENTATION
// must let original string know we're modifying, so shared buffers aren't damaged	WITHOUT_CLASSIFICATION	0.9999596046606177	WITHOUT_CLASSIFICATION	4.0395339382272355E-5	IMPLEMENTATION
// reset the state	WITHOUT_CLASSIFICATION	0.9999663076209113	WITHOUT_CLASSIFICATION	3.36923790886449E-5	IMPLEMENTATION
// Tainting here if we ever want it. (secure 4)	WITHOUT_CLASSIFICATION	0.9998744442230809	WITHOUT_CLASSIFICATION	1.2555577691915055E-4	IMPLEMENTATION
// rb_match_busy	WITHOUT_CLASSIFICATION	0.9998766846217828	WITHOUT_CLASSIFICATION	1.2331537821723534E-4	IMPLEMENTATION
//str is frozen	WITHOUT_CLASSIFICATION	0.999877994817537	WITHOUT_CLASSIFICATION	1.2200518246290397E-4	IMPLEMENTATION
// MRI also does a pointer comparison here	WITHOUT_CLASSIFICATION	0.9999234908445137	WITHOUT_CLASSIFICATION	7.650915548629984E-5	IMPLEMENTATION
// JRubyServer	WITHOUT_CLASSIFICATION	0.9998778725312927	WITHOUT_CLASSIFICATION	1.2212746870732738E-4	IMPLEMENTATION
// Class.allocate object is not allocatable before it is initialized	WITHOUT_CLASSIFICATION	0.9999911641667143	WITHOUT_CLASSIFICATION	8.835833285615635E-6	IMPLEMENTATION
// boot the Object class 	WITHOUT_CLASSIFICATION	0.9999579012211324	WITHOUT_CLASSIFICATION	4.209877886755812E-5	IMPLEMENTATION
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999761266621242	WITHOUT_CLASSIFICATION	2.387333787579156E-5	IMPLEMENTATION
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999860459489474	WITHOUT_CLASSIFICATION	1.3954051052684945E-5	IMPLEMENTATION
// undo check	WITHOUT_CLASSIFICATION	0.9998910532863375	WITHOUT_CLASSIFICATION	1.0894671366244393E-4	IMPLEMENTATION
// This is a non-standard method; have we decided to start extending Ruby? //classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));	WITHOUT_CLASSIFICATION	0.9999929923116027	WITHOUT_CLASSIFICATION	7.007688397283548E-6	IMPLEMENTATION
// boot the Module and Class classes	WITHOUT_CLASSIFICATION	0.9999531684569353	WITHOUT_CLASSIFICATION	4.6831543064713234E-5	IMPLEMENTATION
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9999944269345004	WITHOUT_CLASSIFICATION	5.573065499684513E-6	IMPLEMENTATION
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9999297170466703	WITHOUT_CLASSIFICATION	7.028295332962081E-5	IMPLEMENTATION
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9999297170466703	WITHOUT_CLASSIFICATION	7.028295332962081E-5	IMPLEMENTATION
// could be pulled down to RubyClass in future // rb_class_boot	WITHOUT_CLASSIFICATION	0.9997447850138504	WITHOUT_CLASSIFICATION	2.552149861495713E-4	IMPLEMENTATION
// remove us from old superclass's child classes	WITHOUT_CLASSIFICATION	0.9999875162502017	WITHOUT_CLASSIFICATION	1.248374979836292E-5	IMPLEMENTATION
// add us to new superclass's child classes	WITHOUT_CLASSIFICATION	0.9999810955940925	WITHOUT_CLASSIFICATION	1.8904405907479317E-5	IMPLEMENTATION
// update all subclasses	WITHOUT_CLASSIFICATION	0.9999795718342676	WITHOUT_CLASSIFICATION	2.042816573246878E-5	IMPLEMENTATION
// fields to hold Ruby and RubyClass references	WITHOUT_CLASSIFICATION	0.9999527542147619	WITHOUT_CLASSIFICATION	4.72457852381999E-5	IMPLEMENTATION
// static initializing method	WITHOUT_CLASSIFICATION	0.9999721354123209	WITHOUT_CLASSIFICATION	2.7864587679125686E-5	IMPLEMENTATION
// standard constructor that accepts Ruby, RubyClass	WITHOUT_CLASSIFICATION	0.9999451629363654	WITHOUT_CLASSIFICATION	5.483706363464689E-5	IMPLEMENTATION
// no-arg constructor using static references to Ruby and RubyClass	WITHOUT_CLASSIFICATION	0.9999620375542322	WITHOUT_CLASSIFICATION	3.796244576783028E-5	IMPLEMENTATION
// non-signature signature with just IRubyObject	WITHOUT_CLASSIFICATION	0.9999317811459626	WITHOUT_CLASSIFICATION	6.821885403749874E-5	IMPLEMENTATION
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999512987512532	WITHOUT_CLASSIFICATION	4.870124874678535E-5	IMPLEMENTATION
// self // method name	WITHOUT_CLASSIFICATION	0.9999268028323302	WITHOUT_CLASSIFICATION	7.319716766984036E-5	IMPLEMENTATION
// the default allocator	WITHOUT_CLASSIFICATION	0.9999851094311919	WITHOUT_CLASSIFICATION	1.4890568808012094E-5	IMPLEMENTATION
// Equivalent of T_DATA	WITHOUT_CLASSIFICATION	0.999879171977482	WITHOUT_CLASSIFICATION	1.20828022517939E-4	IMPLEMENTATION
// do nothing, leave empty	WITHOUT_CLASSIFICATION	0.9999848246068799	WITHOUT_CLASSIFICATION	1.5175393120071692E-5	IMPLEMENTATION
// Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9999005361833571	WITHOUT_CLASSIFICATION	9.946381664298795E-5	IMPLEMENTATION
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999565824451426	WITHOUT_CLASSIFICATION	4.3417554857434454E-5	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999542191460128	WITHOUT_CLASSIFICATION	4.578085398719315E-5	IMPLEMENTATION
// Make sure all arguments are modules before calling the callbacks	WITHOUT_CLASSIFICATION	0.9999918236797902	WITHOUT_CLASSIFICATION	8.176320209697842E-6	IMPLEMENTATION
// MRI extends in order from last to first	WITHOUT_CLASSIFICATION	0.9999563883335348	WITHOUT_CLASSIFICATION	4.3611666465119244E-5	IMPLEMENTATION
// NOTE: Serialization is primarily supported for testing purposes, and there is no general // guarantee that serialization will work correctly. Specifically, instance variables pointing // at symbols, threads, modules, classes, and other unserializable types are not detected.	WITHOUT_CLASSIFICATION	0.999998047415944	WITHOUT_CLASSIFICATION	1.9525840559510063E-6	IMPLEMENTATION
// write out ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999435482977697	WITHOUT_CLASSIFICATION	5.645170223049083E-5	IMPLEMENTATION
// rest in ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.999944125960155	WITHOUT_CLASSIFICATION	5.587403984496777E-5	IMPLEMENTATION
// 0x3fff_ffff // -0x4000_0000	WITHOUT_CLASSIFICATION	0.9998965229827185	WITHOUT_CLASSIFICATION	1.0347701728158647E-4	IMPLEMENTATION
// a gotcha	WITHOUT_CLASSIFICATION	0.9998766846217828	WITHOUT_CLASSIFICATION	1.2331537821723534E-4	IMPLEMENTATION
// Java / and % are not the same as ruby	WITHOUT_CLASSIFICATION	0.9999519950280633	WITHOUT_CLASSIFICATION	4.80049719367786E-5	IMPLEMENTATION
// A gotcha for Long.MIN_VALUE: value = -value	WITHOUT_CLASSIFICATION	0.9999513990897023	WITHOUT_CLASSIFICATION	4.8600910297710585E-5	IMPLEMENTATION
// Piece of mri rb_to_id	WITHOUT_CLASSIFICATION	0.9998979186610858	WITHOUT_CLASSIFICATION	1.020813389140922E-4	IMPLEMENTATION
// Java Doubles are 64 bit long:            	WITHOUT_CLASSIFICATION	0.9999389752802187	WITHOUT_CLASSIFICATION	6.102471978134348E-5	IMPLEMENTATION
// Double.MAX_EXPONENT since Java 1.6            	WITHOUT_CLASSIFICATION	0.9999290470759178	WITHOUT_CLASSIFICATION	7.095292408219508E-5	IMPLEMENTATION
// don't override Numeric#div !	WITHOUT_CLASSIFICATION	0.9999497975794166	WITHOUT_CLASSIFICATION	5.020242058351267E-5	IMPLEMENTATION
// Modelled after c ruby implementation (java /,% not same as ruby)	WITHOUT_CLASSIFICATION	0.9962895878281084	WITHOUT_CLASSIFICATION	0.003710412171891606	IMPLEMENTATION
// MRI behavior:	WITHOUT_CLASSIFICATION	0.999894193996315	WITHOUT_CLASSIFICATION	1.0580600368508088E-4	IMPLEMENTATION
// Numeric.equal            	WITHOUT_CLASSIFICATION	0.9999279490029225	WITHOUT_CLASSIFICATION	7.205099707752204E-5	IMPLEMENTATION
// provider is not available	WITHOUT_CLASSIFICATION	0.9999637805803446	WITHOUT_CLASSIFICATION	3.621941965529507E-5	IMPLEMENTATION
// bouncy castle doesn't support algorithm	WITHOUT_CLASSIFICATION	0.9998522267342326	WITHOUT_CLASSIFICATION	1.4777326576753715E-4	IMPLEMENTATION
// fall back to system JCA providers	WITHOUT_CLASSIFICATION	0.9999418042307106	WITHOUT_CLASSIFICATION	5.819576928943164E-5	IMPLEMENTATION
// RubyDigest	WITHOUT_CLASSIFICATION	0.9998767751758568	WITHOUT_CLASSIFICATION	1.2322482414323547E-4	IMPLEMENTATION
// ENEBO: Can these be fast?	WITHOUT_CLASSIFICATION	0.9998707251580904	WITHOUT_CLASSIFICATION	1.292748419096344E-4	IMPLEMENTATION
// synchronize on the RubyThread for threadgroup updates	WITHOUT_CLASSIFICATION	0.9999724606177178	WITHOUT_CLASSIFICATION	2.7539382282162992E-5	IMPLEMENTATION
// we only add live threads	WITHOUT_CLASSIFICATION	0.9999561966632444	WITHOUT_CLASSIFICATION	4.380333675555645E-5	IMPLEMENTATION
// use same ClassIndex as metaclass, since we're technically still of that type	WITHOUT_CLASSIFICATION	0.9999605267444626	WITHOUT_CLASSIFICATION	3.947325553750305E-5	IMPLEMENTATION
// handle everything after -- as arguments to the jruby process	WITHOUT_CLASSIFICATION	0.999978249874071	WITHOUT_CLASSIFICATION	2.1750125928948086E-5	IMPLEMENTATION
// JRubyService	WITHOUT_CLASSIFICATION	0.9998805622440933	WITHOUT_CLASSIFICATION	1.1943775590674647E-4	IMPLEMENTATION
// while	WITHOUT_CLASSIFICATION	0.996339587503101	WITHOUT_CLASSIFICATION	0.0036604124968989808	IMPLEMENTATION
/* \OOO */	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
// CRuby uses sprintf(buf, "%.*g", FLOAT_DIG, d); // This pattern adjusts the output of String.pattern("%g") to mimic // the C version.	WITHOUT_CLASSIFICATION	0.9999700211092161	WITHOUT_CLASSIFICATION	2.9978890784019166E-5	IMPLEMENTATION
// mask off "once" flag	WITHOUT_CLASSIFICATION	0.9998975554437872	WITHOUT_CLASSIFICATION	1.0244455621275817E-4	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999696680238573	WITHOUT_CLASSIFICATION	3.0331976142640797E-5	IMPLEMENTATION
// internal usage (Complex/Rational)	WITHOUT_CLASSIFICATION	0.9999458318107415	WITHOUT_CLASSIFICATION	5.416818925850881E-5	IMPLEMENTATION
// silent ?	WITHOUT_CLASSIFICATION	0.9998788881856909	WITHOUT_CLASSIFICATION	1.2111181430902487E-4	IMPLEMENTATION
/* \xHH */	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9998965151503372	WITHOUT_CLASSIFICATION	1.0348484966281427E-4	IMPLEMENTATION
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9998766846217828	WITHOUT_CLASSIFICATION	1.2331537821723534E-4	IMPLEMENTATION
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9998766846217828	WITHOUT_CLASSIFICATION	1.2331537821723534E-4	IMPLEMENTATION
/* \O, \OO, \OOO or backref */	WITHOUT_CLASSIFICATION	0.9998962819839831	WITHOUT_CLASSIFICATION	1.037180160169849E-4	IMPLEMENTATION
// MBCLEN_NEEDMORE_P	WITHOUT_CLASSIFICATION	0.9998766846217828	WITHOUT_CLASSIFICATION	1.2331537821723534E-4	IMPLEMENTATION
// MBCLEN_INVALID_P	WITHOUT_CLASSIFICATION	0.9998767810008468	WITHOUT_CLASSIFICATION	1.2321899915326902E-4	IMPLEMENTATION
// Unicode is can be only 21 bits long, int is enough	WITHOUT_CLASSIFICATION	0.9999422976417193	WITHOUT_CLASSIFICATION	5.7702358280809274E-5	IMPLEMENTATION
/* Surrogates */	WITHOUT_CLASSIFICATION	0.9998778869176737	WITHOUT_CLASSIFICATION	1.221130823263242E-4	IMPLEMENTATION
// do not load the class if not used	WITHOUT_CLASSIFICATION	0.9999807859924211	WITHOUT_CLASSIFICATION	1.921400757889854E-5	IMPLEMENTATION
/* \0, \0O, \0OO */	WITHOUT_CLASSIFICATION	0.9998766846217828	WITHOUT_CLASSIFICATION	1.2331537821723534E-4	IMPLEMENTATION
/* \xHH */	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9998766846217828	WITHOUT_CLASSIFICATION	1.2331537821723534E-4	IMPLEMENTATION
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9998965151503372	WITHOUT_CLASSIFICATION	1.0348484966281427E-4	IMPLEMENTATION
/* \\u{H HH HHH HHHH HHHHH HHHHHH ...} */	WITHOUT_CLASSIFICATION	0.9998977951992176	WITHOUT_CLASSIFICATION	1.022048007824503E-4	IMPLEMENTATION
/* \\uHHHH */	WITHOUT_CLASSIFICATION	0.9998766846217828	WITHOUT_CLASSIFICATION	1.2331537821723534E-4	IMPLEMENTATION
/* \p{Hiragana} */	WITHOUT_CLASSIFICATION	0.9998766846217828	WITHOUT_CLASSIFICATION	1.2331537821723534E-4	IMPLEMENTATION
// inner switch	WITHOUT_CLASSIFICATION	0.9999090002032964	WITHOUT_CLASSIFICATION	9.099979670355504E-5	IMPLEMENTATION
// newInstance here	WITHOUT_CLASSIFICATION	0.9999173135608863	WITHOUT_CLASSIFICATION	8.2686439113683E-5	IMPLEMENTATION
// rb_reg_raise	WITHOUT_CLASSIFICATION	0.9998766846217828	WITHOUT_CLASSIFICATION	1.2331537821723534E-4	IMPLEMENTATION
// rb_reg_desc	WITHOUT_CLASSIFICATION	0.9998766846217828	WITHOUT_CLASSIFICATION	1.2331537821723534E-4	IMPLEMENTATION
// rb_enc_reg_raise	WITHOUT_CLASSIFICATION	0.9998766846217828	WITHOUT_CLASSIFICATION	1.2331537821723534E-4	IMPLEMENTATION
// rb_enc_reg_error_desc	WITHOUT_CLASSIFICATION	0.9998965151503372	WITHOUT_CLASSIFICATION	1.0348484966281427E-4	IMPLEMENTATION
// rb_reg_initialize_str	WITHOUT_CLASSIFICATION	0.9999388731789777	WITHOUT_CLASSIFICATION	6.112682102238285E-5	IMPLEMENTATION
// rb_reg_initialize	WITHOUT_CLASSIFICATION	0.9999271590163236	WITHOUT_CLASSIFICATION	7.28409836764307E-5	IMPLEMENTATION
// JRUBY-3625: delay setting backref until the MatchData is completely initialized	WITHOUT_CLASSIFICATION	0.9999425218836134	WITHOUT_CLASSIFICATION	5.747811638655536E-5	IMPLEMENTATION
// rb_reg_expr_str	WITHOUT_CLASSIFICATION	0.9998766846217828	WITHOUT_CLASSIFICATION	1.2331537821723534E-4	IMPLEMENTATION
// option_to_str	WITHOUT_CLASSIFICATION	0.9999002157890137	WITHOUT_CLASSIFICATION	9.978421098633129E-5	IMPLEMENTATION
// Don't initialize with class // Don't put in object space and don't taint	WITHOUT_CLASSIFICATION	0.9999907133014895	WITHOUT_CLASSIFICATION	9.28669851059161E-6	IMPLEMENTATION
// args should be before block	WITHOUT_CLASSIFICATION	0.9998953632932018	WITHOUT_CLASSIFICATION	1.0463670679811451E-4	IMPLEMENTATION
// args should be at end	WITHOUT_CLASSIFICATION	0.9998901967124454	WITHOUT_CLASSIFICATION	1.0980328755466884E-4	IMPLEMENTATION
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999224839444724	WITHOUT_CLASSIFICATION	7.751605552764686E-5	IMPLEMENTATION
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999224839444724	WITHOUT_CLASSIFICATION	7.751605552764686E-5	IMPLEMENTATION
// skip anything not related to jruby	WITHOUT_CLASSIFICATION	0.9999511061703749	WITHOUT_CLASSIFICATION	4.88938296251913E-5	IMPLEMENTATION
// start a new populator	WITHOUT_CLASSIFICATION	0.9999593271645717	WITHOUT_CLASSIFICATION	4.0672835428324636E-5	IMPLEMENTATION
// check for frame field reads or writes	WITHOUT_CLASSIFICATION	0.9999840288394849	WITHOUT_CLASSIFICATION	1.5971160515158867E-5	IMPLEMENTATION
// add all names for this annotation	WITHOUT_CLASSIFICATION	0.9999661635130103	WITHOUT_CLASSIFICATION	3.383648698975626E-5	IMPLEMENTATION
// no annotated methods found, skip	WITHOUT_CLASSIFICATION	0.9999237675164084	WITHOUT_CLASSIFICATION	7.623248359163032E-5	IMPLEMENTATION
// write out a static initializer for frame names, so it only fires once	WITHOUT_CLASSIFICATION	0.999979570858661	WITHOUT_CLASSIFICATION	2.042914133899522E-5	IMPLEMENTATION
// single method, use normal logic	WITHOUT_CLASSIFICATION	0.9999295933058038	WITHOUT_CLASSIFICATION	7.040669419627236E-5	IMPLEMENTATION
// multimethod, new logic	WITHOUT_CLASSIFICATION	0.9999084994148105	WITHOUT_CLASSIFICATION	9.150058518956998E-5	IMPLEMENTATION
// declared type returns the qualified name without $ for inner classes!!!	WITHOUT_CLASSIFICATION	0.9999531675208981	WITHOUT_CLASSIFICATION	4.683247910195651E-5	IMPLEMENTATION
// inner class, use $ to delimit	WITHOUT_CLASSIFICATION	0.9999535224787872	WITHOUT_CLASSIFICATION	4.647752121267697E-5	IMPLEMENTATION
//                        RubyModule singletonClass = module.getSingletonClass();	WITHOUT_CLASSIFICATION	0.9999672027675222	WITHOUT_CLASSIFICATION	3.279723247773995E-5	IMPLEMENTATION
//                }	WITHOUT_CLASSIFICATION	0.9999530103293343	WITHOUT_CLASSIFICATION	4.698967066576802E-5	IMPLEMENTATION
// fallback on non-pregenerated logic	WITHOUT_CLASSIFICATION	0.9998302183486385	WITHOUT_CLASSIFICATION	1.697816513615762E-4	IMPLEMENTATION
// refresh call adapter, since it matters if this is iter-based or not	WITHOUT_CLASSIFICATION	0.999935299564859	WITHOUT_CLASSIFICATION	6.470043514087296E-5	IMPLEMENTATION
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.999973775693027	WITHOUT_CLASSIFICATION	2.6224306972985485E-5	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.9999147972959789	WITHOUT_CLASSIFICATION	8.520270402114218E-5	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.9999000653450345	WITHOUT_CLASSIFICATION	9.993465496558884E-5	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999587242771664	WITHOUT_CLASSIFICATION	4.127572283369368E-5	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999587242771664	WITHOUT_CLASSIFICATION	4.127572283369368E-5	IMPLEMENTATION
// colon3	WITHOUT_CLASSIFICATION	0.9962649929951252	WITHOUT_CLASSIFICATION	0.0037350070048749336	IMPLEMENTATION
// Colon3	WITHOUT_CLASSIFICATION	0.9968578624084066	WITHOUT_CLASSIFICATION	0.0031421375915933925	IMPLEMENTATION
// array created for rescue args doesn't need to be in ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999636725270388	WITHOUT_CLASSIFICATION	3.632747296110122E-5	IMPLEMENTATION
// For b.foo	WITHOUT_CLASSIFICATION	0.9998826306303578	WITHOUT_CLASSIFICATION	1.1736936964230869E-4	IMPLEMENTATION
// instance config for the script run	WITHOUT_CLASSIFICATION	0.9999759262434035	WITHOUT_CLASSIFICATION	2.407375659650276E-5	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999587242771664	WITHOUT_CLASSIFICATION	4.127572283369368E-5	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999587242771664	WITHOUT_CLASSIFICATION	4.127572283369368E-5	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999750809116501	WITHOUT_CLASSIFICATION	2.4919088349893627E-5	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999750809116501	WITHOUT_CLASSIFICATION	2.4919088349893627E-5	IMPLEMENTATION
//RubyModule module = context.getRubyClass();	WITHOUT_CLASSIFICATION	0.9999121033175649	WITHOUT_CLASSIFICATION	8.78966824351446E-5	IMPLEMENTATION
// For 'b.foo'	WITHOUT_CLASSIFICATION	0.9998876970894823	WITHOUT_CLASSIFICATION	1.1230291051775074E-4	IMPLEMENTATION
// We define an actual list to get around bug in java integration (1387115)	WITHOUT_CLASSIFICATION	0.9999549497261986	WITHOUT_CLASSIFICATION	4.5050273801374704E-5	IMPLEMENTATION
// something in here is used to build up ruby stack trace...	WITHOUT_CLASSIFICATION	0.9999663036383077	WITHOUT_CLASSIFICATION	3.3696361692253605E-5	IMPLEMENTATION
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999484724271199	WITHOUT_CLASSIFICATION	5.1527572879997946E-5	IMPLEMENTATION
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999484724271199	WITHOUT_CLASSIFICATION	5.1527572879997946E-5	IMPLEMENTATION
// do nothing, allow loop to retry	WITHOUT_CLASSIFICATION	0.9999801809061641	WITHOUT_CLASSIFICATION	1.9819093835897675E-5	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9998811696403566	WITHOUT_CLASSIFICATION	1.1883035964344438E-4	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999336377361003	WITHOUT_CLASSIFICATION	6.6362263899605E-5	IMPLEMENTATION
// never visited, should be fine	WITHOUT_CLASSIFICATION	0.9999003578171924	WITHOUT_CLASSIFICATION	9.964218280761782E-5	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999750809116501	WITHOUT_CLASSIFICATION	2.4919088349893627E-5	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999825563705258	WITHOUT_CLASSIFICATION	1.7443629474250352E-5	IMPLEMENTATION
// If we have more than one argument, then make sure the array is not ObjectSpaced.	WITHOUT_CLASSIFICATION	0.9999657059026339	WITHOUT_CLASSIFICATION	3.4294097366028726E-5	IMPLEMENTATION
// Only in ruby 1.9 methods	WITHOUT_CLASSIFICATION	0.9999461952144331	WITHOUT_CLASSIFICATION	5.3804785567034825E-5	IMPLEMENTATION
// Bind 'normal' parameter values to the local scope for this method.	WITHOUT_CLASSIFICATION	0.9999907030765418	WITHOUT_CLASSIFICATION	9.29692345817009E-6	IMPLEMENTATION
// no arg grouping, just use bulk assignment methods	WITHOUT_CLASSIFICATION	0.9999593588599026	WITHOUT_CLASSIFICATION	4.064114009746508E-5	IMPLEMENTATION
// optArgs and restArgs require more work, so isolate them and ArrayList creation here	WITHOUT_CLASSIFICATION	0.9999252787925489	WITHOUT_CLASSIFICATION	7.472120745114546E-5	IMPLEMENTATION
//        arity.checkArity(runtime, argsLength);	WITHOUT_CLASSIFICATION	0.9999645716143533	WITHOUT_CLASSIFICATION	3.542838564674003E-5	IMPLEMENTATION
// no more values to stick in rest arg	WITHOUT_CLASSIFICATION	0.9999651692893518	WITHOUT_CLASSIFICATION	3.483071064826531E-5	IMPLEMENTATION
// set argv from main's args	WITHOUT_CLASSIFICATION	0.9999537553544727	WITHOUT_CLASSIFICATION	4.6244645527287826E-5	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.9999147972959789	WITHOUT_CLASSIFICATION	8.520270402114218E-5	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999587242771664	WITHOUT_CLASSIFICATION	4.127572283369368E-5	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999750809116501	WITHOUT_CLASSIFICATION	2.4919088349893627E-5	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999825563705258	WITHOUT_CLASSIFICATION	1.7443629474250352E-5	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.999989462554318	WITHOUT_CLASSIFICATION	1.0537445681939541E-5	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.999989462554318	WITHOUT_CLASSIFICATION	1.0537445681939541E-5	IMPLEMENTATION
// block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] //assert argsNode != null : "argsNode is not null";	WITHOUT_CLASSIFICATION	0.9999742636128637	WITHOUT_CLASSIFICATION	2.5736387136310313E-5	IMPLEMENTATION
// assign given optional arguments to their variables	WITHOUT_CLASSIFICATION	0.9999802168006192	WITHOUT_CLASSIFICATION	1.9783199380810507E-5	IMPLEMENTATION
// in-frame EvalState should already have receiver set as self, continue to use it	WITHOUT_CLASSIFICATION	0.9999486276828686	WITHOUT_CLASSIFICATION	5.13723171314112E-5	IMPLEMENTATION
// assign the default values, adding to the end of allArgs	WITHOUT_CLASSIFICATION	0.9999947531530238	WITHOUT_CLASSIFICATION	5.24684697615462E-6	IMPLEMENTATION
// Make sure the appropriate scope has proper size. See JRUBY-2046.	WITHOUT_CLASSIFICATION	0.9999636317591851	WITHOUT_CLASSIFICATION	3.636824081494437E-5	IMPLEMENTATION
// Experimental class reification support, to create real Java classes // for Ruby classes after the first opening	WITHOUT_CLASSIFICATION	0.9999864620249019	WITHOUT_CLASSIFICATION	1.3537975098025766E-5	IMPLEMENTATION
// This should never happen past parse, but just bulletproof this just in case	WITHOUT_CLASSIFICATION	0.9999885604438206	WITHOUT_CLASSIFICATION	1.1439556179357493E-5	IMPLEMENTATION
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9999444679796395	WITHOUT_CLASSIFICATION	5.553202036039392E-5	IMPLEMENTATION
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999214478939898	WITHOUT_CLASSIFICATION	7.855210601014855E-5	IMPLEMENTATION
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999508199087745	WITHOUT_CLASSIFICATION	4.918009122557703E-5	IMPLEMENTATION
// never visited, should be ok	WITHOUT_CLASSIFICATION	0.9998864532290594	WITHOUT_CLASSIFICATION	1.1354677094055758E-4	IMPLEMENTATION
// If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil	WITHOUT_CLASSIFICATION	0.9999564440750679	WITHOUT_CLASSIFICATION	4.355592493202109E-5	IMPLEMENTATION
// JRUBY-530 until case	WITHOUT_CLASSIFICATION	0.9999001113824351	WITHOUT_CLASSIFICATION	9.988861756487503E-5	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.9999000653450345	WITHOUT_CLASSIFICATION	9.993465496558884E-5	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999750809116501	WITHOUT_CLASSIFICATION	2.4919088349893627E-5	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9998811696403566	WITHOUT_CLASSIFICATION	1.1883035964344438E-4	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999336377361003	WITHOUT_CLASSIFICATION	6.6362263899605E-5	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999336377361003	WITHOUT_CLASSIFICATION	6.6362263899605E-5	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999750809116501	WITHOUT_CLASSIFICATION	2.4919088349893627E-5	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999825563705258	WITHOUT_CLASSIFICATION	1.7443629474250352E-5	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999825563705258	WITHOUT_CLASSIFICATION	1.7443629474250352E-5	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.999989462554318	WITHOUT_CLASSIFICATION	1.0537445681939541E-5	IMPLEMENTATION
// Empirical Observations: // null -> Some arity // argsNode == this.argsNode then check for arity changes // newline(splatnode) -> argspushnode	WITHOUT_CLASSIFICATION	0.9999661620444117	WITHOUT_CLASSIFICATION	3.383795558833533E-5	IMPLEMENTATION
//assert !(value instanceof RubyArray)  : "Not an array";	WITHOUT_CLASSIFICATION	0.9999508822764762	WITHOUT_CLASSIFICATION	4.911772352380811E-5	IMPLEMENTATION
// Serialization killed our dynamic scope.  We can just create an empty one // since serialization cannot serialize an eval (which is the only thing // which is capable of having a non-empty dynamic scope).	WITHOUT_CLASSIFICATION	0.9999953423664689	WITHOUT_CLASSIFICATION	4.657633531104498E-6	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9998845010300316	WITHOUT_CLASSIFICATION	1.1549896996843008E-4	IMPLEMENTATION
// We could probably also detect if LHS value came out of cache and avoid some of this	WITHOUT_CLASSIFICATION	0.9999798883712951	WITHOUT_CLASSIFICATION	2.011162870481223E-5	IMPLEMENTATION
//        assert thenBody != null : "thenBody is not null"; //        assert elseBody != null : "elseBody is not null";	WITHOUT_CLASSIFICATION	0.9999864659745598	WITHOUT_CLASSIFICATION	1.3534025440292593E-5	IMPLEMENTATION
// add in reverse order	WITHOUT_CLASSIFICATION	0.9999604854717088	WITHOUT_CLASSIFICATION	3.9514528291333566E-5	IMPLEMENTATION
// in order to make pragma's noops we set location to a special value	WITHOUT_CLASSIFICATION	0.9999849390821519	WITHOUT_CLASSIFICATION	1.5060917848162759E-5	IMPLEMENTATION
// ignore compiler pragmas	WITHOUT_CLASSIFICATION	0.999992118069161	WITHOUT_CLASSIFICATION	7.881930838941067E-6	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9998811696403566	WITHOUT_CLASSIFICATION	1.1883035964344438E-4	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999336377361003	WITHOUT_CLASSIFICATION	6.6362263899605E-5	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999336377361003	WITHOUT_CLASSIFICATION	6.6362263899605E-5	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999750809116501	WITHOUT_CLASSIFICATION	2.4919088349893627E-5	IMPLEMENTATION
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9999444679796395	WITHOUT_CLASSIFICATION	5.553202036039392E-5	IMPLEMENTATION
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999508199087745	WITHOUT_CLASSIFICATION	4.918009122557703E-5	IMPLEMENTATION
// No actual test, so do 'when' if when expression is not nil	WITHOUT_CLASSIFICATION	0.9999356446617301	WITHOUT_CLASSIFICATION	6.435533826992869E-5	IMPLEMENTATION
// save entering the try if there's nothing to ensure	WITHOUT_CLASSIFICATION	0.9999923159781715	WITHOUT_CLASSIFICATION	7.684021828579003E-6	IMPLEMENTATION
// For 'foo'	WITHOUT_CLASSIFICATION	0.9998877150471771	WITHOUT_CLASSIFICATION	1.1228495282296728E-4	IMPLEMENTATION
// For 'foo'	WITHOUT_CLASSIFICATION	0.9998877150471771	WITHOUT_CLASSIFICATION	1.1228495282296728E-4	IMPLEMENTATION
// admittedly inefficient	WITHOUT_CLASSIFICATION	0.9998875937680127	WITHOUT_CLASSIFICATION	1.124062319872493E-4	IMPLEMENTATION
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.999906580966882	WITHOUT_CLASSIFICATION	9.341903311804224E-5	IMPLEMENTATION
// What static scoping relationship exists when it comes into being.	WITHOUT_CLASSIFICATION	0.9999336662715335	WITHOUT_CLASSIFICATION	6.633372846658429E-5	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999140678526808	WITHOUT_CLASSIFICATION	8.593214731917195E-5	IMPLEMENTATION
// just rethrow	WITHOUT_CLASSIFICATION	0.9999170002255098	WITHOUT_CLASSIFICATION	8.299977449017369E-5	IMPLEMENTATION
// just rethrow	WITHOUT_CLASSIFICATION	0.9999170002255098	WITHOUT_CLASSIFICATION	8.299977449017369E-5	IMPLEMENTATION
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999308876552824	WITHOUT_CLASSIFICATION	6.911234471762654E-5	IMPLEMENTATION
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999308876552824	WITHOUT_CLASSIFICATION	6.911234471762654E-5	IMPLEMENTATION
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.999924417210928	WITHOUT_CLASSIFICATION	7.558278907208752E-5	IMPLEMENTATION
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.999924417210928	WITHOUT_CLASSIFICATION	7.558278907208752E-5	IMPLEMENTATION
// Execute rescue block	WITHOUT_CLASSIFICATION	0.9999255796106997	WITHOUT_CLASSIFICATION	7.442038930028074E-5	IMPLEMENTATION
// If no exception is thrown execute else block	WITHOUT_CLASSIFICATION	0.9999700638508958	WITHOUT_CLASSIFICATION	2.993614910422431E-5	IMPLEMENTATION
// index of variable for this arg	WITHOUT_CLASSIFICATION	0.9999553984594	WITHOUT_CLASSIFICATION	4.4601540599999894E-5	IMPLEMENTATION
// only a marker interface	WITHOUT_CLASSIFICATION	0.9999630955728689	WITHOUT_CLASSIFICATION	3.690442713101033E-5	IMPLEMENTATION
// don't attempt to coerce to array, just wrap and return	WITHOUT_CLASSIFICATION	0.9999729440097538	WITHOUT_CLASSIFICATION	2.7055990246155895E-5	IMPLEMENTATION
// pragmas	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
// The method also needs a scope, do both	WITHOUT_CLASSIFICATION	0.9999387293575025	WITHOUT_CLASSIFICATION	6.127064249751373E-5	IMPLEMENTATION
// We're doing normal framed compilation or the method needs a frame	WITHOUT_CLASSIFICATION	0.9999295759193845	WITHOUT_CLASSIFICATION	7.042408061550164E-5	IMPLEMENTATION
// The method doesn't need a scope or static scope; frame only	WITHOUT_CLASSIFICATION	0.9999729780929324	WITHOUT_CLASSIFICATION	2.7021907067677775E-5	IMPLEMENTATION
// The method doesn't need a scope, but has static scope needs; use a dummy scope	WITHOUT_CLASSIFICATION	0.9999699997666385	WITHOUT_CLASSIFICATION	3.000023336157295E-5	IMPLEMENTATION
// Proc.new needs the caller's block to instantiate a proc	WITHOUT_CLASSIFICATION	0.9999718332467468	WITHOUT_CLASSIFICATION	2.8166753253248368E-5	IMPLEMENTATION
// check for Proc.new, an especially magic method	WITHOUT_CLASSIFICATION	0.9999846679174271	WITHOUT_CLASSIFICATION	1.533208257288311E-5	IMPLEMENTATION
// long, slow way causes disabling	WITHOUT_CLASSIFICATION	0.9999468597114438	WITHOUT_CLASSIFICATION	5.3140288556106584E-5	IMPLEMENTATION
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999032220530166	WITHOUT_CLASSIFICATION	9.677794698335126E-5	IMPLEMENTATION
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999032220530166	WITHOUT_CLASSIFICATION	9.677794698335126E-5	IMPLEMENTATION
// long, slow way causes disabling for defined	WITHOUT_CLASSIFICATION	0.999956974914592	WITHOUT_CLASSIFICATION	4.3025085408034996E-5	IMPLEMENTATION
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999365577726077	WITHOUT_CLASSIFICATION	6.344222739239462E-5	IMPLEMENTATION
// Because Regexp#=== sets backref, we have to make this backref-aware	WITHOUT_CLASSIFICATION	0.9996831093672737	WITHOUT_CLASSIFICATION	3.168906327262662E-4	IMPLEMENTATION
// encountered a node we don't recognize, set everything to true to disable optz	WITHOUT_CLASSIFICATION	0.9999772511317783	WITHOUT_CLASSIFICATION	2.2748868221707097E-5	IMPLEMENTATION
// only arrays that are "lightweight" are being used as args arrays	WITHOUT_CLASSIFICATION	0.9999562411481039	WITHOUT_CLASSIFICATION	4.375885189609091E-5	IMPLEMENTATION
// otherwise, it's a literal array	WITHOUT_CLASSIFICATION	0.9999301397251341	WITHOUT_CLASSIFICATION	6.986027486592433E-5	IMPLEMENTATION
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.999935648589792	WITHOUT_CLASSIFICATION	6.435141020803039E-5	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999322309874044	WITHOUT_CLASSIFICATION	6.776901259566797E-5	IMPLEMENTATION
// compile first node as non-expr and then second node	WITHOUT_CLASSIFICATION	0.999960221364431	WITHOUT_CLASSIFICATION	3.9778635569077196E-5	IMPLEMENTATION
// last node, either !instanceof WhenNode or null, is the else	WITHOUT_CLASSIFICATION	0.9999561557671762	WITHOUT_CLASSIFICATION	4.384423282385506E-5	IMPLEMENTATION
// compile first node only	WITHOUT_CLASSIFICATION	0.9999404955872966	WITHOUT_CLASSIFICATION	5.95044127033722E-5	IMPLEMENTATION
// splatted when, can't do it yet	WITHOUT_CLASSIFICATION	0.9999202017534733	WITHOUT_CLASSIFICATION	7.979824652664464E-5	IMPLEMENTATION
// if __send__ with a literal symbol, compile it as a direct fcall	WITHOUT_CLASSIFICATION	0.9999430298837004	WITHOUT_CLASSIFICATION	5.697011629958656E-5	IMPLEMENTATION
// NOTE: Currently this optimization is limited to the following situations: // * All expressions must be int-ranged literal fixnums // It also still emits the code for the "safe" when logic, which is rather // wasteful (since it essentially doubles each code body). As such it is // normally disabled, but it serves as an example of how this optimization // could be done. Ideally, it should be combined with the when processing // to improve code reuse before it's generally available.	WITHOUT_CLASSIFICATION	0.9999961187320344	WITHOUT_CLASSIFICATION	3.8812679656091956E-6	IMPLEMENTATION
// aggregate when nodes into a list, unfortunately, this is no	WITHOUT_CLASSIFICATION	0.9999311794744735	WITHOUT_CLASSIFICATION	6.882052552651636E-5	IMPLEMENTATION
// one arg but it's an array, treat it as a proper array	WITHOUT_CLASSIFICATION	0.9999239818010033	WITHOUT_CLASSIFICATION	7.601819899662678E-5	IMPLEMENTATION
// can't do it	WITHOUT_CLASSIFICATION	0.9999284619609485	WITHOUT_CLASSIFICATION	7.153803905147E-5	IMPLEMENTATION
// otherwise, use normal args compiler	WITHOUT_CLASSIFICATION	0.9999284037525341	WITHOUT_CLASSIFICATION	7.15962474659353E-5	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999148422928285	WITHOUT_CLASSIFICATION	8.515770717159924E-5	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999148422928285	WITHOUT_CLASSIFICATION	8.515770717159924E-5	IMPLEMENTATION
// these are all simple cases that don't require the heavier defined logic	WITHOUT_CLASSIFICATION	0.9999755359898619	WITHOUT_CLASSIFICATION	2.4464010138156456E-5	IMPLEMENTATION
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.999927210715594	WITHOUT_CLASSIFICATION	7.278928440602087E-5	IMPLEMENTATION
//[]	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
//[]	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
//          context.swapValues(); //context.consumeCurrentValue();	WITHOUT_CLASSIFICATION	0.9999674590920206	WITHOUT_CLASSIFICATION	3.254090797945384E-5	IMPLEMENTATION
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[] //[self] //[RubyClass] //[RubyClass, RubyClass]	WITHOUT_CLASSIFICATION	0.9998993530561533	WITHOUT_CLASSIFICATION	1.0064694384675047E-4	IMPLEMENTATION
//[RubyClass]	WITHOUT_CLASSIFICATION	0.9998767147500441	WITHOUT_CLASSIFICATION	1.2328524995581364E-4	IMPLEMENTATION
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9998993530561533	WITHOUT_CLASSIFICATION	1.0064694384675047E-4	IMPLEMENTATION
// if root of method is rescue, compile as a light rescue	WITHOUT_CLASSIFICATION	0.9999275416442102	WITHOUT_CLASSIFICATION	7.245835578975748E-5	IMPLEMENTATION
// inspect body and args	WITHOUT_CLASSIFICATION	0.999921312932379	WITHOUT_CLASSIFICATION	7.868706762107516E-5	IMPLEMENTATION
// inspect body and args	WITHOUT_CLASSIFICATION	0.999921312932379	WITHOUT_CLASSIFICATION	7.868706762107516E-5	IMPLEMENTATION
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999824728752089	WITHOUT_CLASSIFICATION	1.7527124791089612E-5	IMPLEMENTATION
// if root of method is rescue, compile as light rescue	WITHOUT_CLASSIFICATION	0.9999232913424694	WITHOUT_CLASSIFICATION	7.670865753066102E-5	IMPLEMENTATION
// invoke run with threadcontext and topself	WITHOUT_CLASSIFICATION	0.9999320947612488	WITHOUT_CLASSIFICATION	6.790523875123887E-5	IMPLEMENTATION
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9999279391947358	WITHOUT_CLASSIFICATION	7.206080526422058E-5	IMPLEMENTATION
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.999927210715594	WITHOUT_CLASSIFICATION	7.278928440602087E-5	IMPLEMENTATION
//[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9998767147500441	WITHOUT_CLASSIFICATION	1.2328524995581364E-4	IMPLEMENTATION
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9999143121556513	WITHOUT_CLASSIFICATION	8.568784434880425E-5	IMPLEMENTATION
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9999143121556513	WITHOUT_CLASSIFICATION	8.568784434880425E-5	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.999959090305948	WITHOUT_CLASSIFICATION	4.090969405204629E-5	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999962166310774	WITHOUT_CLASSIFICATION	3.783368922596608E-6	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999962166310774	WITHOUT_CLASSIFICATION	3.783368922596608E-6	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999144225882073	WITHOUT_CLASSIFICATION	8.55774117926199E-5	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999144225882073	WITHOUT_CLASSIFICATION	8.55774117926199E-5	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999144225882073	WITHOUT_CLASSIFICATION	8.55774117926199E-5	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999962166310774	WITHOUT_CLASSIFICATION	3.783368922596608E-6	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999962166310774	WITHOUT_CLASSIFICATION	3.783368922596608E-6	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.999959090305948	WITHOUT_CLASSIFICATION	4.090969405204629E-5	IMPLEMENTATION
// force heap-scope behavior, since it uses parent's scope	WITHOUT_CLASSIFICATION	0.9999504349028829	WITHOUT_CLASSIFICATION	4.956509711697823E-5	IMPLEMENTATION
// always false or nil	WITHOUT_CLASSIFICATION	0.9999166185803711	WITHOUT_CLASSIFICATION	8.338141962885988E-5	IMPLEMENTATION
// optimizations if we know ahead of time it will always be true or false	WITHOUT_CLASSIFICATION	0.9999560203243848	WITHOUT_CLASSIFICATION	4.3979675615239996E-5	IMPLEMENTATION
// normal	WITHOUT_CLASSIFICATION	0.9965327590320696	WITHOUT_CLASSIFICATION	0.0034672409679304132	IMPLEMENTATION
// compile condition as non-expr and just compile "then" body	WITHOUT_CLASSIFICATION	0.9999397787459517	WITHOUT_CLASSIFICATION	6.0221254048111654E-5	IMPLEMENTATION
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9999334456140463	WITHOUT_CLASSIFICATION	6.655438595368924E-5	IMPLEMENTATION
// just push nil for pragmas	WITHOUT_CLASSIFICATION	0.9999207941634789	WITHOUT_CLASSIFICATION	7.920583652100832E-5	IMPLEMENTATION
// "assignment" means the value is already on the stack	WITHOUT_CLASSIFICATION	0.9999812507032332	WITHOUT_CLASSIFICATION	1.8749296766880025E-5	IMPLEMENTATION
// compile first node only	WITHOUT_CLASSIFICATION	0.9999404955872966	WITHOUT_CLASSIFICATION	5.95044127033722E-5	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999962166310774	WITHOUT_CLASSIFICATION	3.783368922596608E-6	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999962166310774	WITHOUT_CLASSIFICATION	3.783368922596608E-6	IMPLEMENTATION
// eval new value, call operator on old value, and assign	WITHOUT_CLASSIFICATION	0.999948020144345	WITHOUT_CLASSIFICATION	5.197985565493617E-5	IMPLEMENTATION
// try optz version	WITHOUT_CLASSIFICATION	0.9999295748927063	WITHOUT_CLASSIFICATION	7.042510729367803E-5	IMPLEMENTATION
// sizes must match	WITHOUT_CLASSIFICATION	0.9999149294343238	WITHOUT_CLASSIFICATION	8.507056567611445E-5	IMPLEMENTATION
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999798495414832	WITHOUT_CLASSIFICATION	2.0150458516707047E-5	IMPLEMENTATION
// normal items at the "head" of the masgn	WITHOUT_CLASSIFICATION	0.9999654427707393	WITHOUT_CLASSIFICATION	3.455722926057853E-5	IMPLEMENTATION
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999754847512251	WITHOUT_CLASSIFICATION	2.4515248774967438E-5	IMPLEMENTATION
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999288119003373	WITHOUT_CLASSIFICATION	7.118809966266194E-5	IMPLEMENTATION
// only supports simple parallel assignment of up to 10 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999860219547075	WITHOUT_CLASSIFICATION	1.3978045292461368E-5	IMPLEMENTATION
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999664443522448	WITHOUT_CLASSIFICATION	3.355564775530002E-5	IMPLEMENTATION
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999460045678573	WITHOUT_CLASSIFICATION	5.3995432142627855E-5	IMPLEMENTATION
//RedoNode redoNode = (RedoNode)node;	WITHOUT_CLASSIFICATION	0.9998985685000079	WITHOUT_CLASSIFICATION	1.0143149999206335E-4	IMPLEMENTATION
// done processing args	WITHOUT_CLASSIFICATION	0.9999449919327961	WITHOUT_CLASSIFICATION	5.500806720401837E-5	IMPLEMENTATION
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999397317515037	WITHOUT_CLASSIFICATION	6.026824849627038E-5	IMPLEMENTATION
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999033717696241	WITHOUT_CLASSIFICATION	9.662823037588864E-5	IMPLEMENTATION
// if arity 1, just compile the one element to save us the array cost	WITHOUT_CLASSIFICATION	0.9999705886517756	WITHOUT_CLASSIFICATION	2.9411348224504364E-5	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
// compile into array	WITHOUT_CLASSIFICATION	0.9999290216971429	WITHOUT_CLASSIFICATION	7.097830285710112E-5	IMPLEMENTATION
// compile first node as non-expr and compile second node	WITHOUT_CLASSIFICATION	0.9999601466682381	WITHOUT_CLASSIFICATION	3.985333176202365E-5	IMPLEMENTATION
// check if it's an immediate, and don't outline	WITHOUT_CLASSIFICATION	0.9999825580592457	WITHOUT_CLASSIFICATION	1.744194075432305E-5	IMPLEMENTATION
// condition is always true, just compile it and not body	WITHOUT_CLASSIFICATION	0.9999594132906963	WITHOUT_CLASSIFICATION	4.058670930374721E-5	IMPLEMENTATION
// force static scope to claim restarg at 0, so it only implements the [] version of __file__	WITHOUT_CLASSIFICATION	0.9986083162636826	WITHOUT_CLASSIFICATION	0.0013916837363173137	IMPLEMENTATION
// create method for toplevel of script	WITHOUT_CLASSIFICATION	0.9999812548874806	WITHOUT_CLASSIFICATION	1.8745112519496044E-5	IMPLEMENTATION
// it's a multiple-statement body, iterate over all elements in turn and chain if it get too long	WITHOUT_CLASSIFICATION	0.9999643845005269	WITHOUT_CLASSIFICATION	3.5615499473127236E-5	IMPLEMENTATION
// send it along as arity-specific, we don't need the array	WITHOUT_CLASSIFICATION	0.9999686631826271	WITHOUT_CLASSIFICATION	3.133681737288732E-5	IMPLEMENTATION
// single-statement body, just compile it	WITHOUT_CLASSIFICATION	0.9999292429770832	WITHOUT_CLASSIFICATION	7.075702291681108E-5	IMPLEMENTATION
// leave as a normal array	WITHOUT_CLASSIFICATION	0.9999215029601431	WITHOUT_CLASSIFICATION	7.84970398568486E-5	IMPLEMENTATION
// This method has JITed already or has been abandoned. Bail out.	WITHOUT_CLASSIFICATION	0.9999361042008028	WITHOUT_CLASSIFICATION	6.389579919726529E-5	IMPLEMENTATION
// The cache is full. Abandon JIT for this method and bail out.	WITHOUT_CLASSIFICATION	0.9999380331184685	WITHOUT_CLASSIFICATION	6.19668815314915E-5	IMPLEMENTATION
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999824728752089	WITHOUT_CLASSIFICATION	1.7527124791089612E-5	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999962166310774	WITHOUT_CLASSIFICATION	3.783368922596608E-6	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999962166310774	WITHOUT_CLASSIFICATION	3.783368922596608E-6	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.999959090305948	WITHOUT_CLASSIFICATION	4.090969405204629E-5	IMPLEMENTATION
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9999334456140463	WITHOUT_CLASSIFICATION	6.655438595368924E-5	IMPLEMENTATION
// try optz version	WITHOUT_CLASSIFICATION	0.9999295748927063	WITHOUT_CLASSIFICATION	7.042510729367803E-5	IMPLEMENTATION
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999798495414832	WITHOUT_CLASSIFICATION	2.0150458516707047E-5	IMPLEMENTATION
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999754847512251	WITHOUT_CLASSIFICATION	2.4515248774967438E-5	IMPLEMENTATION
// sizes must match	WITHOUT_CLASSIFICATION	0.9999149294343238	WITHOUT_CLASSIFICATION	8.507056567611445E-5	IMPLEMENTATION
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999288119003373	WITHOUT_CLASSIFICATION	7.118809966266194E-5	IMPLEMENTATION
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999460045678573	WITHOUT_CLASSIFICATION	5.3995432142627855E-5	IMPLEMENTATION
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999664443522448	WITHOUT_CLASSIFICATION	3.355564775530002E-5	IMPLEMENTATION
// done processing args	WITHOUT_CLASSIFICATION	0.9999449919327961	WITHOUT_CLASSIFICATION	5.500806720401837E-5	IMPLEMENTATION
// Check if the method has been explicitly excluded	WITHOUT_CLASSIFICATION	0.9999890650505537	WITHOUT_CLASSIFICATION	1.093494944634738E-5	IMPLEMENTATION
// class could not be found nor generated; give up on JIT and bail out	WITHOUT_CLASSIFICATION	0.999945621815476	WITHOUT_CLASSIFICATION	5.4378184524093705E-5	IMPLEMENTATION
// successfully got back a jitted method	WITHOUT_CLASSIFICATION	0.9999810601625299	WITHOUT_CLASSIFICATION	1.893983747023622E-5	IMPLEMENTATION
// finally, grab the script	WITHOUT_CLASSIFICATION	0.9999469912594473	WITHOUT_CLASSIFICATION	5.300874055272361E-5	IMPLEMENTATION
// logEvery n methods based on configuration	WITHOUT_CLASSIFICATION	0.9999608452305849	WITHOUT_CLASSIFICATION	3.9154769415065316E-5	IMPLEMENTATION
// Time the compilation	WITHOUT_CLASSIFICATION	0.9999381281487703	WITHOUT_CLASSIFICATION	6.187185122968993E-5	IMPLEMENTATION
// we have a body, do a full-on method	WITHOUT_CLASSIFICATION	0.9999621959078415	WITHOUT_CLASSIFICATION	3.780409215853373E-5	IMPLEMENTATION
// If we don't have a body, check for required or opt args // if opt args, they could have side effects // if required args, need to raise errors if too few args passed // otherwise, method does nothing, make it a nop	WITHOUT_CLASSIFICATION	0.9999925198423147	WITHOUT_CLASSIFICATION	7.480157685231434E-6	IMPLEMENTATION
// if we haven't already decided on a do-nothing call	WITHOUT_CLASSIFICATION	0.9999794750996925	WITHOUT_CLASSIFICATION	2.052490030743444E-5	IMPLEMENTATION
// only supports simple parallel assignment of up to 4 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.999986405590453	WITHOUT_CLASSIFICATION	1.3594409547037683E-5	IMPLEMENTATION
// normal items at the front or back of the masgn	WITHOUT_CLASSIFICATION	0.9999700773076584	WITHOUT_CLASSIFICATION	2.992269234151091E-5	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999644341910761	WITHOUT_CLASSIFICATION	3.556580892403275E-5	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999522887676365	WITHOUT_CLASSIFICATION	4.7711232363487126E-5	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999704102692514	WITHOUT_CLASSIFICATION	2.958973074863651E-5	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999941208648452	WITHOUT_CLASSIFICATION	5.8791351547752744E-6	IMPLEMENTATION
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999601719446541	WITHOUT_CLASSIFICATION	3.9828055345836365E-5	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999500759147215	WITHOUT_CLASSIFICATION	4.992408527845312E-5	IMPLEMENTATION
// Define the annotation for the method	WITHOUT_CLASSIFICATION	0.9999787153299554	WITHOUT_CLASSIFICATION	2.1284670044534323E-5	IMPLEMENTATION
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999863524513037	WITHOUT_CLASSIFICATION	1.3647548696214568E-5	IMPLEMENTATION
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999651740727599	WITHOUT_CLASSIFICATION	3.482592724004197E-5	IMPLEMENTATION
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999584553558599	WITHOUT_CLASSIFICATION	4.1544644140065276E-5	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999634839188032	WITHOUT_CLASSIFICATION	3.651608119672637E-5	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999634839188032	WITHOUT_CLASSIFICATION	3.651608119672637E-5	IMPLEMENTATION
// value is already on stack, save it for later	WITHOUT_CLASSIFICATION	0.9999872159028174	WITHOUT_CLASSIFICATION	1.2784097182622345E-5	IMPLEMENTATION
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9999170057225009	WITHOUT_CLASSIFICATION	8.299427749916988E-5	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998795508624839	WITHOUT_CLASSIFICATION	1.2044913751614891E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998795508624839	WITHOUT_CLASSIFICATION	1.2044913751614891E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998795508624839	WITHOUT_CLASSIFICATION	1.2044913751614891E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
/*arg2*/	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
/*args*/	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9999170057225009	WITHOUT_CLASSIFICATION	8.299427749916988E-5	IMPLEMENTATION
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999737776785589	WITHOUT_CLASSIFICATION	2.6222321441037146E-5	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998795508624839	WITHOUT_CLASSIFICATION	1.2044913751614891E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998795508624839	WITHOUT_CLASSIFICATION	1.2044913751614891E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
/*args*/	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999602102148882	WITHOUT_CLASSIFICATION	3.9789785111705426E-5	IMPLEMENTATION
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999602102148882	WITHOUT_CLASSIFICATION	3.9789785111705426E-5	IMPLEMENTATION
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999310169249772	WITHOUT_CLASSIFICATION	6.898307502276892E-5	IMPLEMENTATION
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999310169249772	WITHOUT_CLASSIFICATION	6.898307502276892E-5	IMPLEMENTATION
// invoke	WITHOUT_CLASSIFICATION	0.9969233890920922	WITHOUT_CLASSIFICATION	0.00307661090790778	IMPLEMENTATION
// invoke	WITHOUT_CLASSIFICATION	0.9969233890920922	WITHOUT_CLASSIFICATION	0.00307661090790778	IMPLEMENTATION
// check if it's true, ending if so	WITHOUT_CLASSIFICATION	0.9999714542492374	WITHOUT_CLASSIFICATION	2.8545750762673748E-5	IMPLEMENTATION
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9998185513060273	WITHOUT_CLASSIFICATION	1.814486939726537E-4	IMPLEMENTATION
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9998185513060273	WITHOUT_CLASSIFICATION	1.814486939726537E-4	IMPLEMENTATION
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999517716581937	WITHOUT_CLASSIFICATION	4.822834180637256E-5	IMPLEMENTATION
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999517716581937	WITHOUT_CLASSIFICATION	4.822834180637256E-5	IMPLEMENTATION
// eval value for assignment	WITHOUT_CLASSIFICATION	0.9999605998631304	WITHOUT_CLASSIFICATION	3.9400136869676924E-5	IMPLEMENTATION
// call site	WITHOUT_CLASSIFICATION	0.9998880365084415	WITHOUT_CLASSIFICATION	1.1196349155844705E-4	IMPLEMENTATION
// call site	WITHOUT_CLASSIFICATION	0.9998880365084415	WITHOUT_CLASSIFICATION	1.1196349155844705E-4	IMPLEMENTATION
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999521433959713	WITHOUT_CLASSIFICATION	4.785660402862495E-5	IMPLEMENTATION
// check if it's true, ending if not	WITHOUT_CLASSIFICATION	0.999972899961458	WITHOUT_CLASSIFICATION	2.7100038541985207E-5	IMPLEMENTATION
// eval value and save it	WITHOUT_CLASSIFICATION	0.9999559230555939	WITHOUT_CLASSIFICATION	4.407694440605265E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999521433959713	WITHOUT_CLASSIFICATION	4.785660402862495E-5	IMPLEMENTATION
// receiver, args, result, value	WITHOUT_CLASSIFICATION	0.9999479204153271	WITHOUT_CLASSIFICATION	5.207958467289064E-5	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9998737622517562	WITHOUT_CLASSIFICATION	1.2623774824388335E-4	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9998737622517562	WITHOUT_CLASSIFICATION	1.2623774824388335E-4	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9998737622517562	WITHOUT_CLASSIFICATION	1.2623774824388335E-4	IMPLEMENTATION
// super uses current block if none given	WITHOUT_CLASSIFICATION	0.9999464867256592	WITHOUT_CLASSIFICATION	5.3513274340739674E-5	IMPLEMENTATION
// args	WITHOUT_CLASSIFICATION	0.996114283352148	WITHOUT_CLASSIFICATION	0.003885716647852011	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9960488871862235	WITHOUT_CLASSIFICATION	0.0039511128137764695	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9960488871862235	WITHOUT_CLASSIFICATION	0.0039511128137764695	IMPLEMENTATION
// no args, no block	WITHOUT_CLASSIFICATION	0.9999092093875795	WITHOUT_CLASSIFICATION	9.07906124204688E-5	IMPLEMENTATION
// no args, with block	WITHOUT_CLASSIFICATION	0.999925722342816	WITHOUT_CLASSIFICATION	7.427765718411811E-5	IMPLEMENTATION
// with args, no block	WITHOUT_CLASSIFICATION	0.9999090061479994	WITHOUT_CLASSIFICATION	9.099385200057545E-5	IMPLEMENTATION
// with args, with block	WITHOUT_CLASSIFICATION	0.99990500842428	WITHOUT_CLASSIFICATION	9.499157572004019E-5	IMPLEMENTATION
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9998914844909697	WITHOUT_CLASSIFICATION	1.0851550903036556E-4	IMPLEMENTATION
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999367941471947	WITHOUT_CLASSIFICATION	6.320585280528183E-5	IMPLEMENTATION
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999367941471947	WITHOUT_CLASSIFICATION	6.320585280528183E-5	IMPLEMENTATION
// arg and receiver already present on the stack	WITHOUT_CLASSIFICATION	0.9999265870249429	WITHOUT_CLASSIFICATION	7.341297505711332E-5	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9998737622517562	WITHOUT_CLASSIFICATION	1.2623774824388335E-4	IMPLEMENTATION
// args	WITHOUT_CLASSIFICATION	0.996114283352148	WITHOUT_CLASSIFICATION	0.003885716647852011	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9960488871862235	WITHOUT_CLASSIFICATION	0.0039511128137764695	IMPLEMENTATION
// no args, no block	WITHOUT_CLASSIFICATION	0.9999092093875795	WITHOUT_CLASSIFICATION	9.07906124204688E-5	IMPLEMENTATION
// no args, with block	WITHOUT_CLASSIFICATION	0.999925722342816	WITHOUT_CLASSIFICATION	7.427765718411811E-5	IMPLEMENTATION
// with args, no block	WITHOUT_CLASSIFICATION	0.9999090061479994	WITHOUT_CLASSIFICATION	9.099385200057545E-5	IMPLEMENTATION
// with args, with block	WITHOUT_CLASSIFICATION	0.99990500842428	WITHOUT_CLASSIFICATION	9.499157572004019E-5	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
// retrieve scope from scopes array	WITHOUT_CLASSIFICATION	0.9999686440970267	WITHOUT_CLASSIFICATION	3.135590297331728E-5	IMPLEMENTATION
// use numbered access method	WITHOUT_CLASSIFICATION	0.9999477685875042	WITHOUT_CLASSIFICATION	5.223141249570677E-5	IMPLEMENTATION
// retrieve call site from sites array	WITHOUT_CLASSIFICATION	0.9999658824034112	WITHOUT_CLASSIFICATION	3.411759658876684E-5	IMPLEMENTATION
// add name to call site list	WITHOUT_CLASSIFICATION	0.9999527355353292	WITHOUT_CLASSIFICATION	4.726446467086069E-5	IMPLEMENTATION
// module is on top of stack	WITHOUT_CLASSIFICATION	0.9999142528042152	WITHOUT_CLASSIFICATION	8.57471957848167E-5	IMPLEMENTATION
// build scope names string	WITHOUT_CLASSIFICATION	0.999945169717779	WITHOUT_CLASSIFICATION	5.483028222097771E-5	IMPLEMENTATION
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999519483044528	WITHOUT_CLASSIFICATION	4.805169554733475E-5	IMPLEMENTATION
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999519483044528	WITHOUT_CLASSIFICATION	4.805169554733475E-5	IMPLEMENTATION
// generate call sites initialization code	WITHOUT_CLASSIFICATION	0.9999796515045312	WITHOUT_CLASSIFICATION	2.034849546894159E-5	IMPLEMENTATION
// generate symbols initialization code	WITHOUT_CLASSIFICATION	0.9999810177603193	WITHOUT_CLASSIFICATION	1.898223968056433E-5	IMPLEMENTATION
// generate fixnums initialization code	WITHOUT_CLASSIFICATION	0.9999810881483255	WITHOUT_CLASSIFICATION	1.89118516744485E-5	IMPLEMENTATION
// generate constants initialization code	WITHOUT_CLASSIFICATION	0.9999858346829864	WITHOUT_CLASSIFICATION	1.4165317013508752E-5	IMPLEMENTATION
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999814434609453	WITHOUT_CLASSIFICATION	1.8556539054693715E-5	IMPLEMENTATION
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999814434609453	WITHOUT_CLASSIFICATION	1.8556539054693715E-5	IMPLEMENTATION
// generate variable readers initialization code	WITHOUT_CLASSIFICATION	0.9999847585159481	WITHOUT_CLASSIFICATION	1.5241484051851782E-5	IMPLEMENTATION
// generate variable writers initialization code	WITHOUT_CLASSIFICATION	0.9999848763958004	WITHOUT_CLASSIFICATION	1.5123604199654147E-5	IMPLEMENTATION
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.999980364466587	WITHOUT_CLASSIFICATION	1.9635533413048172E-5	IMPLEMENTATION
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.999980364466587	WITHOUT_CLASSIFICATION	1.9635533413048172E-5	IMPLEMENTATION
// generate bytelists initialization code	WITHOUT_CLASSIFICATION	0.9999811093388876	WITHOUT_CLASSIFICATION	1.8890661112322866E-5	IMPLEMENTATION
// generate method cache initialization code	WITHOUT_CLASSIFICATION	0.9999805479346836	WITHOUT_CLASSIFICATION	1.945206531646074E-5	IMPLEMENTATION
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9998914844909697	WITHOUT_CLASSIFICATION	1.0851550903036556E-4	IMPLEMENTATION
// use IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999150692088071	WITHOUT_CLASSIFICATION	8.493079119284125E-5	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999938877586434	WITHOUT_CLASSIFICATION	6.1122413566828816E-6	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999545456238065	WITHOUT_CLASSIFICATION	4.545437619350653E-5	IMPLEMENTATION
// No point in updating number if last number was same value.	WITHOUT_CLASSIFICATION	0.9999744866549074	WITHOUT_CLASSIFICATION	2.5513345092537755E-5	IMPLEMENTATION
// load Object under value	WITHOUT_CLASSIFICATION	0.9999653735732489	WITHOUT_CLASSIFICATION	3.462642675109036E-5	IMPLEMENTATION
// put under object array already present	WITHOUT_CLASSIFICATION	0.9999537413464652	WITHOUT_CLASSIFICATION	4.625865353477328E-5	IMPLEMENTATION
// if element count is less than 6, use helper methods	WITHOUT_CLASSIFICATION	0.9999760424892383	WITHOUT_CLASSIFICATION	2.3957510761698196E-5	IMPLEMENTATION
// This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements	WITHOUT_CLASSIFICATION	0.9999846950878863	WITHOUT_CLASSIFICATION	1.5304912113634094E-5	IMPLEMENTATION
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999788604692833	WITHOUT_CLASSIFICATION	2.113953071664057E-5	IMPLEMENTATION
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999788604692833	WITHOUT_CLASSIFICATION	2.113953071664057E-5	IMPLEMENTATION
// brute force construction inline	WITHOUT_CLASSIFICATION	0.999927798012494	WITHOUT_CLASSIFICATION	7.22019875060618E-5	IMPLEMENTATION
// brute force construction inline	WITHOUT_CLASSIFICATION	0.999927798012494	WITHOUT_CLASSIFICATION	7.22019875060618E-5	IMPLEMENTATION
// use specific-arity for as much as possible	WITHOUT_CLASSIFICATION	0.9999462156638663	WITHOUT_CLASSIFICATION	5.378433613383303E-5	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999428875143049	WITHOUT_CLASSIFICATION	5.711248569504124E-5	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999428875143049	WITHOUT_CLASSIFICATION	5.711248569504124E-5	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999428875143049	WITHOUT_CLASSIFICATION	5.711248569504124E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999122424485049	WITHOUT_CLASSIFICATION	8.775755149515946E-5	IMPLEMENTATION
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999432605316676	WITHOUT_CLASSIFICATION	5.673946833242257E-5	IMPLEMENTATION
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999432605316676	WITHOUT_CLASSIFICATION	5.673946833242257E-5	IMPLEMENTATION
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999849665324371	WITHOUT_CLASSIFICATION	1.5033467562975604E-5	IMPLEMENTATION
// check the condition	WITHOUT_CLASSIFICATION	0.9999748778830505	WITHOUT_CLASSIFICATION	2.5122116949461824E-5	IMPLEMENTATION
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9998980492923275	WITHOUT_CLASSIFICATION	1.0195070767255269E-4	IMPLEMENTATION
// skip catch block	WITHOUT_CLASSIFICATION	0.9998510514796675	WITHOUT_CLASSIFICATION	1.4894852033256584E-4	IMPLEMENTATION
// catch logic for flow-control: next, break	WITHOUT_CLASSIFICATION	0.9999135886302106	WITHOUT_CLASSIFICATION	8.641136978934778E-5	IMPLEMENTATION
// next jump	WITHOUT_CLASSIFICATION	0.9998817893026581	WITHOUT_CLASSIFICATION	1.1821069734190279E-4	IMPLEMENTATION
// exceptionNext target is for a next that doesn't push a new value, like this one	WITHOUT_CLASSIFICATION	0.9999541729811836	WITHOUT_CLASSIFICATION	4.582701881644511E-5	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999522887676365	WITHOUT_CLASSIFICATION	4.7711232363487126E-5	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999522887676365	WITHOUT_CLASSIFICATION	4.7711232363487126E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999122424485049	WITHOUT_CLASSIFICATION	8.775755149515946E-5	IMPLEMENTATION
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999849665324371	WITHOUT_CLASSIFICATION	1.5033467562975604E-5	IMPLEMENTATION
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999551105132348	WITHOUT_CLASSIFICATION	4.488948676509051E-5	IMPLEMENTATION
// check the condition	WITHOUT_CLASSIFICATION	0.9999748778830505	WITHOUT_CLASSIFICATION	2.5122116949461824E-5	IMPLEMENTATION
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9998980492923275	WITHOUT_CLASSIFICATION	1.0195070767255269E-4	IMPLEMENTATION
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.999965752917074	WITHOUT_CLASSIFICATION	3.424708292595598E-5	IMPLEMENTATION
// break jump	WITHOUT_CLASSIFICATION	0.9999484525658034	WITHOUT_CLASSIFICATION	5.154743419658547E-5	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.999955364291415	WITHOUT_CLASSIFICATION	4.4635708585125487E-5	IMPLEMENTATION
//[reg]	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
// for regular expressions with the /o flag	WITHOUT_CLASSIFICATION	0.9996615899674991	WITHOUT_CLASSIFICATION	3.384100325008912E-4	IMPLEMENTATION
// inside a loop, jump to body	WITHOUT_CLASSIFICATION	0.9999162277198742	WITHOUT_CLASSIFICATION	8.37722801258238E-5	IMPLEMENTATION
// inside a loop, jump to conditional	WITHOUT_CLASSIFICATION	0.9999284785043205	WITHOUT_CLASSIFICATION	7.152149567938879E-5	IMPLEMENTATION
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.999965752917074	WITHOUT_CLASSIFICATION	3.424708292595598E-5	IMPLEMENTATION
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999875374688804	WITHOUT_CLASSIFICATION	1.246253111961927E-5	IMPLEMENTATION
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999875374688804	WITHOUT_CLASSIFICATION	1.246253111961927E-5	IMPLEMENTATION
// if more than 4 vars, get values array too	WITHOUT_CLASSIFICATION	0.9999568551933629	WITHOUT_CLASSIFICATION	4.314480663717827E-5	IMPLEMENTATION
// retry handling in the rescue block	WITHOUT_CLASSIFICATION	0.9999432877576635	WITHOUT_CLASSIFICATION	5.671224233642309E-5	IMPLEMENTATION
// any exceptions raised must continue to be raised, skipping $! restoration	WITHOUT_CLASSIFICATION	0.999968891332439	WITHOUT_CLASSIFICATION	3.1108667560922726E-5	IMPLEMENTATION
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.999961027712604	WITHOUT_CLASSIFICATION	3.897228739600325E-5	IMPLEMENTATION
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999865124318282	WITHOUT_CLASSIFICATION	1.3487568171682244E-5	IMPLEMENTATION
// Handle Flow exceptions, just propagating them	WITHOUT_CLASSIFICATION	0.9999618058337307	WITHOUT_CLASSIFICATION	3.8194166269307113E-5	IMPLEMENTATION
// rethrow to outer flow catcher	WITHOUT_CLASSIFICATION	0.9999237087004893	WITHOUT_CLASSIFICATION	7.629129951068744E-5	IMPLEMENTATION
// Handle Ruby exceptions (RaiseException)	WITHOUT_CLASSIFICATION	0.9999642970734292	WITHOUT_CLASSIFICATION	3.570292657089268E-5	IMPLEMENTATION
// inside a loop, break out of it // go to end of loop, leaving break value on stack	WITHOUT_CLASSIFICATION	0.9999665725118168	WITHOUT_CLASSIFICATION	3.342748818330108E-5	IMPLEMENTATION
// false // zero	WITHOUT_CLASSIFICATION	0.9999150615314564	WITHOUT_CLASSIFICATION	8.493846854363115E-5	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999705295187323	WITHOUT_CLASSIFICATION	2.9470481267667002E-5	IMPLEMENTATION
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.999961027712604	WITHOUT_CLASSIFICATION	3.897228739600325E-5	IMPLEMENTATION
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999865124318282	WITHOUT_CLASSIFICATION	1.3487568171682244E-5	IMPLEMENTATION
// retry handling in the rescue blocks	WITHOUT_CLASSIFICATION	0.9999446153043221	WITHOUT_CLASSIFICATION	5.5384695677824094E-5	IMPLEMENTATION
// push false	WITHOUT_CLASSIFICATION	0.9998863195103748	WITHOUT_CLASSIFICATION	1.1368048962521825E-4	IMPLEMENTATION
//method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));	WITHOUT_CLASSIFICATION	0.9999700083681647	WITHOUT_CLASSIFICATION	2.9991631835284266E-5	IMPLEMENTATION
//method.ifnonnull(trueLabel);	WITHOUT_CLASSIFICATION	0.9999035321431536	WITHOUT_CLASSIFICATION	9.646785684634195E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)   //[C]	WITHOUT_CLASSIFICATION	0.9999133273148239	WITHOUT_CLASSIFICATION	8.667268517605573E-5	IMPLEMENTATION
//[C, C] //[C, C, String] //[C, null|C]	WITHOUT_CLASSIFICATION	0.9999179427137671	WITHOUT_CLASSIFICATION	8.205728623286345E-5	IMPLEMENTATION
//[C]	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
// push true	WITHOUT_CLASSIFICATION	0.9998767620163489	WITHOUT_CLASSIFICATION	1.232379836511002E-4	IMPLEMENTATION
// EQ != 0 (i.e. true)	WITHOUT_CLASSIFICATION	0.9998980257130488	WITHOUT_CLASSIFICATION	1.0197428695114696E-4	IMPLEMENTATION
//[?, ?] //[?, boolean]	WITHOUT_CLASSIFICATION	0.9999333553807304	WITHOUT_CLASSIFICATION	6.664461926961133E-5	IMPLEMENTATION
//[RubyModule] //[RubyModule, String]	WITHOUT_CLASSIFICATION	0.9999183814110856	WITHOUT_CLASSIFICATION	8.16185889144458E-5	IMPLEMENTATION
//[boolean]	WITHOUT_CLASSIFICATION	0.999898844017196	WITHOUT_CLASSIFICATION	1.0115598280392435E-4	IMPLEMENTATION
// no receiver for singleton class	WITHOUT_CLASSIFICATION	0.9999431688853059	WITHOUT_CLASSIFICATION	5.6831114694107515E-5	IMPLEMENTATION
// but there's a superclass passed in, use it	WITHOUT_CLASSIFICATION	0.9999585111615202	WITHOUT_CLASSIFICATION	4.148883847974764E-5	IMPLEMENTATION
// we re-set self to the class, but store the old self in a temporary local variable // this is to prevent it GCing in case the singleton is short-lived	WITHOUT_CLASSIFICATION	0.9999976534309774	WITHOUT_CLASSIFICATION	2.346569022561522E-6	IMPLEMENTATION
// set self to the class	WITHOUT_CLASSIFICATION	0.9999768052479083	WITHOUT_CLASSIFICATION	2.3194752091630302E-5	IMPLEMENTATION
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9998804382993537	WITHOUT_CLASSIFICATION	1.1956170064625032E-4	IMPLEMENTATION
// static scope	WITHOUT_CLASSIFICATION	0.999925499037733	WITHOUT_CLASSIFICATION	7.450096226700972E-5	IMPLEMENTATION
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999791364922587	WITHOUT_CLASSIFICATION	2.0863507741233687E-5	IMPLEMENTATION
// new instance to invoke run against	WITHOUT_CLASSIFICATION	0.9999469525458936	WITHOUT_CLASSIFICATION	5.304745410643453E-5	IMPLEMENTATION
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9998804382993537	WITHOUT_CLASSIFICATION	1.1956170064625032E-4	IMPLEMENTATION
// static scope	WITHOUT_CLASSIFICATION	0.999925499037733	WITHOUT_CLASSIFICATION	7.450096226700972E-5	IMPLEMENTATION
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999791364922587	WITHOUT_CLASSIFICATION	2.0863507741233687E-5	IMPLEMENTATION
// finally with exception	WITHOUT_CLASSIFICATION	0.9999554373431419	WITHOUT_CLASSIFICATION	4.456265685815146E-5	IMPLEMENTATION
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999588268526456	WITHOUT_CLASSIFICATION	4.117314735450681E-5	IMPLEMENTATION
// otherwise, there's a receiver, so we pass that in directly for the sclass logic	WITHOUT_CLASSIFICATION	0.9999772370189576	WITHOUT_CLASSIFICATION	2.2762981042430564E-5	IMPLEMENTATION
// original exception is on stack	WITHOUT_CLASSIFICATION	0.9999672986426654	WITHOUT_CLASSIFICATION	3.2701357334527843E-5	IMPLEMENTATION
// RaiseException is on stack, get RubyException out	WITHOUT_CLASSIFICATION	0.9999601148265431	WITHOUT_CLASSIFICATION	3.988517345678793E-5	IMPLEMENTATION
// updating position for same line; skip	WITHOUT_CLASSIFICATION	0.9999636084258666	WITHOUT_CLASSIFICATION	3.639157413331184E-5	IMPLEMENTATION
// callbacks to fill in method body	WITHOUT_CLASSIFICATION	0.9998916444832935	WITHOUT_CLASSIFICATION	1.083555167065011E-4	IMPLEMENTATION
// prepare to call "def" utility method to handle def logic	WITHOUT_CLASSIFICATION	0.9998802455504127	WITHOUT_CLASSIFICATION	1.197544495874104E-4	IMPLEMENTATION
// script object	WITHOUT_CLASSIFICATION	0.9999301086329241	WITHOUT_CLASSIFICATION	6.98913670759746E-5	IMPLEMENTATION
// arities	WITHOUT_CLASSIFICATION	0.9960485870670919	WITHOUT_CLASSIFICATION	0.00395141293290812	IMPLEMENTATION
// TODO assuming case is a fixnum	WITHOUT_CLASSIFICATION	0.9907513055440947	WITHOUT_CLASSIFICATION	0.009248694455905345	IMPLEMENTATION
// we have an input case, prepare branching logic	WITHOUT_CLASSIFICATION	0.9999415880757289	WITHOUT_CLASSIFICATION	5.841192427116246E-5	IMPLEMENTATION
// we have optimized switch cases, build a lookupswitch	WITHOUT_CLASSIFICATION	0.9998956277350848	WITHOUT_CLASSIFICATION	1.0437226491519974E-4	IMPLEMENTATION
// checkcast the value; if match, fast path; otherwise proceed to slow logic	WITHOUT_CLASSIFICATION	0.9999819082320878	WITHOUT_CLASSIFICATION	1.8091767912330624E-5	IMPLEMENTATION
// expression-based tests + bodies	WITHOUT_CLASSIFICATION	0.9999098502418771	WITHOUT_CLASSIFICATION	9.01497581229663E-5	IMPLEMENTATION
// normal case, create a new label	WITHOUT_CLASSIFICATION	0.9999815554827317	WITHOUT_CLASSIFICATION	1.84445172683061E-5	IMPLEMENTATION
// last conditional case, use defaultCase	WITHOUT_CLASSIFICATION	0.9999645084713796	WITHOUT_CLASSIFICATION	3.549152862032247E-5	IMPLEMENTATION
// do nothing; arity check is done before call	WITHOUT_CLASSIFICATION	0.9999830021990407	WITHOUT_CLASSIFICATION	1.6997800959340956E-5	IMPLEMENTATION
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999374626379676	WITHOUT_CLASSIFICATION	6.253736203242724E-5	IMPLEMENTATION
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999347204247436	WITHOUT_CLASSIFICATION	6.527957525636233E-5	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.9999476848367739	WITHOUT_CLASSIFICATION	5.23151632261222E-5	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.9999377549062783	WITHOUT_CLASSIFICATION	6.224509372170823E-5	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.9999377549062783	WITHOUT_CLASSIFICATION	6.224509372170823E-5	IMPLEMENTATION
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999422661772658	WITHOUT_CLASSIFICATION	5.7733822734099135E-5	IMPLEMENTATION
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999422661772658	WITHOUT_CLASSIFICATION	5.7733822734099135E-5	IMPLEMENTATION
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999741133425883	WITHOUT_CLASSIFICATION	2.5886657411672364E-5	IMPLEMENTATION
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999741133425883	WITHOUT_CLASSIFICATION	2.5886657411672364E-5	IMPLEMENTATION
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999771436475686	WITHOUT_CLASSIFICATION	2.2856352431396146E-5	IMPLEMENTATION
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999786911322562	WITHOUT_CLASSIFICATION	2.130886774377065E-5	IMPLEMENTATION
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999768893045671	WITHOUT_CLASSIFICATION	2.3110695432912375E-5	IMPLEMENTATION
// if there's args left and we want them, assign to rest arg	WITHOUT_CLASSIFICATION	0.9999524388417714	WITHOUT_CLASSIFICATION	4.7561158228559155E-5	IMPLEMENTATION
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999803081229047	WITHOUT_CLASSIFICATION	1.969187709528815E-5	IMPLEMENTATION
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999656963911322	WITHOUT_CLASSIFICATION	3.4303608867888555E-5	IMPLEMENTATION
// first, iterate over all pre args	WITHOUT_CLASSIFICATION	0.9999523796603016	WITHOUT_CLASSIFICATION	4.762033969852644E-5	IMPLEMENTATION
// then optional args	WITHOUT_CLASSIFICATION	0.9999497138930461	WITHOUT_CLASSIFICATION	5.0286106953801216E-5	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999522887676365	WITHOUT_CLASSIFICATION	4.7711232363487126E-5	IMPLEMENTATION
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999771436475686	WITHOUT_CLASSIFICATION	2.2856352431396146E-5	IMPLEMENTATION
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999786911322562	WITHOUT_CLASSIFICATION	2.130886774377065E-5	IMPLEMENTATION
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999768893045671	WITHOUT_CLASSIFICATION	2.3110695432912375E-5	IMPLEMENTATION
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999803081229047	WITHOUT_CLASSIFICATION	1.969187709528815E-5	IMPLEMENTATION
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999656963911322	WITHOUT_CLASSIFICATION	3.4303608867888555E-5	IMPLEMENTATION
// if rest args, excluding post args	WITHOUT_CLASSIFICATION	0.999927899623052	WITHOUT_CLASSIFICATION	7.210037694805265E-5	IMPLEMENTATION
// finally, post args	WITHOUT_CLASSIFICATION	0.9999223046335778	WITHOUT_CLASSIFICATION	7.769536642227388E-5	IMPLEMENTATION
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9998406722325022	WITHOUT_CLASSIFICATION	1.593277674977541E-4	IMPLEMENTATION
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9998406722325022	WITHOUT_CLASSIFICATION	1.593277674977541E-4	IMPLEMENTATION
// unwrap scopes to appropriate depth	WITHOUT_CLASSIFICATION	0.9998978491153991	WITHOUT_CLASSIFICATION	1.0215088460078537E-4	IMPLEMENTATION
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999404664877055	WITHOUT_CLASSIFICATION	5.953351229434666E-5	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999753395037065	WITHOUT_CLASSIFICATION	2.4660496293481308E-5	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999436274915615	WITHOUT_CLASSIFICATION	5.637250843838062E-5	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999436274915615	WITHOUT_CLASSIFICATION	5.637250843838062E-5	IMPLEMENTATION
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999312553170489	WITHOUT_CLASSIFICATION	6.874468295116019E-5	IMPLEMENTATION
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.999946537809928	WITHOUT_CLASSIFICATION	5.346219007193158E-5	IMPLEMENTATION
// store the local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999781455442219	WITHOUT_CLASSIFICATION	2.1854455778129157E-5	IMPLEMENTATION
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999550519359534	WITHOUT_CLASSIFICATION	4.494806404651477E-5	IMPLEMENTATION
// return in a class body raises error	WITHOUT_CLASSIFICATION	0.9999912634952691	WITHOUT_CLASSIFICATION	8.736504730770863E-6	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999704102692514	WITHOUT_CLASSIFICATION	2.958973074863651E-5	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999941208648452	WITHOUT_CLASSIFICATION	5.8791351547752744E-6	IMPLEMENTATION
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999601719446541	WITHOUT_CLASSIFICATION	3.9828055345836365E-5	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999500759147215	WITHOUT_CLASSIFICATION	4.992408527845312E-5	IMPLEMENTATION
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999651740727599	WITHOUT_CLASSIFICATION	3.482592724004197E-5	IMPLEMENTATION
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999584553558599	WITHOUT_CLASSIFICATION	4.1544644140065276E-5	IMPLEMENTATION
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999312553170489	WITHOUT_CLASSIFICATION	6.874468295116019E-5	IMPLEMENTATION
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.999946537809928	WITHOUT_CLASSIFICATION	5.346219007193158E-5	IMPLEMENTATION
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999550519359534	WITHOUT_CLASSIFICATION	4.494806404651477E-5	IMPLEMENTATION
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999390142308274	WITHOUT_CLASSIFICATION	6.098576917263145E-5	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999753395037065	WITHOUT_CLASSIFICATION	2.4660496293481308E-5	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999753395037065	WITHOUT_CLASSIFICATION	2.4660496293481308E-5	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999705295187323	WITHOUT_CLASSIFICATION	2.9470481267667002E-5	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999705295187323	WITHOUT_CLASSIFICATION	2.9470481267667002E-5	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999557569151616	WITHOUT_CLASSIFICATION	4.424308483838457E-5	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999557569151616	WITHOUT_CLASSIFICATION	4.424308483838457E-5	IMPLEMENTATION
// store the local vars in a local variable if there are any	WITHOUT_CLASSIFICATION	0.9999942125000516	WITHOUT_CLASSIFICATION	5.787499948439694E-6	IMPLEMENTATION
// if more than 4 locals, get and populate the locals array too	WITHOUT_CLASSIFICATION	0.9999648102514413	WITHOUT_CLASSIFICATION	3.518974855862484E-5	IMPLEMENTATION
// fill local vars with nil, to avoid checking every access.	WITHOUT_CLASSIFICATION	0.9999572368867036	WITHOUT_CLASSIFICATION	4.2763113296351525E-5	IMPLEMENTATION
// default for starting tempVariableIndex is ok	WITHOUT_CLASSIFICATION	0.9999875200551368	WITHOUT_CLASSIFICATION	1.2479944863200954E-5	IMPLEMENTATION
// store the local vars in a local variable for preparing the class (using previous scope)	WITHOUT_CLASSIFICATION	0.9999953001810592	WITHOUT_CLASSIFICATION	4.699818940858106E-6	IMPLEMENTATION
// store the new local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999815836518443	WITHOUT_CLASSIFICATION	1.841634815563684E-5	IMPLEMENTATION
// in 1.8 mode, this will be a RubyArray containing the arguments // in 1.9 mode, this will be an IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999834651710294	WITHOUT_CLASSIFICATION	1.653482897058866E-5	IMPLEMENTATION
// no variable initialization, because we're reusing parent's scope (flat)	WITHOUT_CLASSIFICATION	0.9999847633841147	WITHOUT_CLASSIFICATION	1.5236615885312599E-5	IMPLEMENTATION
// for specific-index cases, clean up non-expression values	WITHOUT_CLASSIFICATION	0.9999633795843527	WITHOUT_CLASSIFICATION	3.6620415647327265E-5	IMPLEMENTATION
// set up a local Ruby variable	WITHOUT_CLASSIFICATION	0.99996442116585	WITHOUT_CLASSIFICATION	3.557883415000515E-5	IMPLEMENTATION
// if that succeeds, the others should as well	WITHOUT_CLASSIFICATION	0.9999450987543783	WITHOUT_CLASSIFICATION	5.490124562174559E-5	IMPLEMENTATION
// verify the class	WITHOUT_CLASSIFICATION	0.9999583762026031	WITHOUT_CLASSIFICATION	4.162379739702362E-5	IMPLEMENTATION
// create dir if necessary	WITHOUT_CLASSIFICATION	0.9999869938269178	WITHOUT_CLASSIFICATION	1.3006173082266791E-5	IMPLEMENTATION
// Create the class with the appropriate class name and source file	WITHOUT_CLASSIFICATION	0.999986225963772	WITHOUT_CLASSIFICATION	1.3774036228028733E-5	IMPLEMENTATION
// add setPosition impl, which stores filename as constant to speed updates	WITHOUT_CLASSIFICATION	0.9999850037994095	WITHOUT_CLASSIFICATION	1.499620059044335E-5	IMPLEMENTATION
// thread context	WITHOUT_CLASSIFICATION	0.9999097177423599	WITHOUT_CLASSIFICATION	9.028225764001417E-5	IMPLEMENTATION
// line number	WITHOUT_CLASSIFICATION	0.9999269959534177	WITHOUT_CLASSIFICATION	7.300404658227488E-5	IMPLEMENTATION
// invoke __file__ with threadcontext, self, args (null), and block (null)	WITHOUT_CLASSIFICATION	0.9999222698568766	WITHOUT_CLASSIFICATION	7.773014312338617E-5	IMPLEMENTATION
// load always uses IRubyObject[], so simple closure offset calculation here	WITHOUT_CLASSIFICATION	0.9999687514814031	WITHOUT_CLASSIFICATION	3.124851859686704E-5	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999941208648452	WITHOUT_CLASSIFICATION	5.8791351547752744E-6	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999500759147215	WITHOUT_CLASSIFICATION	4.992408527845312E-5	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999634839188032	WITHOUT_CLASSIFICATION	3.651608119672637E-5	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9960488871862235	WITHOUT_CLASSIFICATION	0.0039511128137764695	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9960488871862235	WITHOUT_CLASSIFICATION	0.0039511128137764695	IMPLEMENTATION
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999390142308274	WITHOUT_CLASSIFICATION	6.098576917263145E-5	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999753395037065	WITHOUT_CLASSIFICATION	2.4660496293481308E-5	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999705295187323	WITHOUT_CLASSIFICATION	2.9470481267667002E-5	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999557569151616	WITHOUT_CLASSIFICATION	4.424308483838457E-5	IMPLEMENTATION
// add Script#run impl, used for running this script with a specified threadcontext and self // root method of a script is always in __file__ method	WITHOUT_CLASSIFICATION	0.9999932773912228	WITHOUT_CLASSIFICATION	6.722608777220582E-6	IMPLEMENTATION
// add main impl, used for detached or command-line execution of this script with a new runtime // root method of a script is always in stub0, method0	WITHOUT_CLASSIFICATION	0.9999949856341543	WITHOUT_CLASSIFICATION	5.014365845609205E-6	IMPLEMENTATION
// construct static scope list of names	WITHOUT_CLASSIFICATION	0.9999577156966536	WITHOUT_CLASSIFICATION	4.228430334641976E-5	IMPLEMENTATION
// JRUBY-3014: make __FILE__ dynamically determined at load time, but // we provide a reasonable default here	WITHOUT_CLASSIFICATION	0.9999861352006932	WITHOUT_CLASSIFICATION	1.3864799306805464E-5	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999946341388428	WITHOUT_CLASSIFICATION	5.3658611571618445E-6	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999946341388428	WITHOUT_CLASSIFICATION	5.3658611571618445E-6	IMPLEMENTATION
// lazily create class init only if necessary	WITHOUT_CLASSIFICATION	0.9999871640806778	WITHOUT_CLASSIFICATION	1.2835919322236685E-5	IMPLEMENTATION
// boxed arg list __file__	WITHOUT_CLASSIFICATION	0.9998361246093815	WITHOUT_CLASSIFICATION	1.6387539061842848E-4	IMPLEMENTATION
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999284234812122	WITHOUT_CLASSIFICATION	7.157651878771992E-5	IMPLEMENTATION
// exact arg list __file__	WITHOUT_CLASSIFICATION	0.9998131324643933	WITHOUT_CLASSIFICATION	1.8686753560664528E-4	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.999928916142402	WITHOUT_CLASSIFICATION	7.108385759806186E-5	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.999928916142402	WITHOUT_CLASSIFICATION	7.108385759806186E-5	IMPLEMENTATION
// not using a new scope, use saved one for a flat closure	WITHOUT_CLASSIFICATION	0.9997208045281699	WITHOUT_CLASSIFICATION	2.7919547183007695E-4	IMPLEMENTATION
// normal closure	WITHOUT_CLASSIFICATION	0.9998941126187849	WITHOUT_CLASSIFICATION	1.0588738121507922E-4	IMPLEMENTATION
// end of scoping for closure's vars	WITHOUT_CLASSIFICATION	0.9999546385404233	WITHOUT_CLASSIFICATION	4.536145957678238E-5	IMPLEMENTATION
// we only need full-on redo exception handling if there's logic that might produce it	WITHOUT_CLASSIFICATION	0.9999788358883811	WITHOUT_CLASSIFICATION	2.1164111618879737E-5	IMPLEMENTATION
// handle redos by restarting the block	WITHOUT_CLASSIFICATION	0.9999258503166291	WITHOUT_CLASSIFICATION	7.414968337100706E-5	IMPLEMENTATION
// jump back to the top of the main body of this closure	WITHOUT_CLASSIFICATION	0.9999778060074673	WITHOUT_CLASSIFICATION	2.219399253255639E-5	IMPLEMENTATION
// Ruby name 	WITHOUT_CLASSIFICATION	0.9998830327371933	WITHOUT_CLASSIFICATION	1.1696726280676297E-4	IMPLEMENTATION
// Accumulate call arguments	WITHOUT_CLASSIFICATION	0.9999488560237245	WITHOUT_CLASSIFICATION	5.114397627542391E-5	IMPLEMENTATION
// Fix FileNameCompletor to work mid-line	WITHOUT_CLASSIFICATION	0.9998840181177904	WITHOUT_CLASSIFICATION	1.1598188220966041E-4	IMPLEMENTATION
// We need to ensure that the variable names generated here cannot conflict with ruby variable names! // Hence the "%" tthat is appended to the beginning!	WITHOUT_CLASSIFICATION	0.9999590407524904	WITHOUT_CLASSIFICATION	4.09592475095447E-5	IMPLEMENTATION
// Does this method define code?  // Default is yes -- which basically leads to pessimistic but safe optimizations // But, for library and internal methods, this might be false.	WITHOUT_CLASSIFICATION	0.9999819801682134	WITHOUT_CLASSIFICATION	1.801983178667757E-5	IMPLEMENTATION
// Map of constants defined in this scope (not valid for methods!)	WITHOUT_CLASSIFICATION	0.9999906519270304	WITHOUT_CLASSIFICATION	9.348072969628315E-6	IMPLEMENTATION
// NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner // with outer loops encountered before inner loops, and inner loops finished before outer ones. // // So, we can keep track of loops in a loop stack which  keeps track of loops as they are encountered. // This lets us implement next/redo/break/retry easily for the non-closure cases	WITHOUT_CLASSIFICATION	0.999768212584567	WITHOUT_CLASSIFICATION	2.317874154330657E-4	IMPLEMENTATION
// Map keep track of the next available variable index for a particular prefix	WITHOUT_CLASSIFICATION	0.999969150895327	WITHOUT_CLASSIFICATION	3.0849104672973396E-5	IMPLEMENTATION
// Control flow graph for this scope	WITHOUT_CLASSIFICATION	0.9999495399993974	WITHOUT_CLASSIFICATION	5.046000060269794E-5	IMPLEMENTATION
//        _lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;	WITHOUT_CLASSIFICATION	0.9999697017833691	WITHOUT_CLASSIFICATION	3.0298216630973468E-5	IMPLEMENTATION
// List of modules, classes, and methods defined in this scope!	WITHOUT_CLASSIFICATION	0.9999828558910833	WITHOUT_CLASSIFICATION	1.7144108916841784E-5	IMPLEMENTATION
// Returns the containing parent scope!	WITHOUT_CLASSIFICATION	0.9999620554044281	WITHOUT_CLASSIFICATION	3.794459557187004E-5	IMPLEMENTATION
// Insert nesting level to ensure variable names don't conflict across nested scopes! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //        return new Variable(prefix + _lexicalNestingLevel + "_" + idx);	WITHOUT_CLASSIFICATION	0.999990840984407	WITHOUT_CLASSIFICATION	9.159015592883108E-6	IMPLEMENTATION
// get "self"	WITHOUT_CLASSIFICATION	0.9999328949825076	WITHOUT_CLASSIFICATION	6.710501749244502E-5	IMPLEMENTATION
// variable is never read, variable is never live	WITHOUT_CLASSIFICATION	0.9998681715179442	WITHOUT_CLASSIFICATION	1.3182848205583168E-4	IMPLEMENTATION
// inline script	WITHOUT_CLASSIFICATION	0.9998912443920703	WITHOUT_CLASSIFICATION	1.0875560792964846E-4	IMPLEMENTATION
// inline script	WITHOUT_CLASSIFICATION	0.9998912443920703	WITHOUT_CLASSIFICATION	1.0875560792964846E-4	IMPLEMENTATION
// This method is called to build assignments for a multiple-assignment instruction	WITHOUT_CLASSIFICATION	0.9999322057517078	WITHOUT_CLASSIFICATION	6.779424829219205E-5	IMPLEMENTATION
// Build the class body!	WITHOUT_CLASSIFICATION	0.9999596990084163	WITHOUT_CLASSIFICATION	4.030099158362454E-5	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999322309874044	WITHOUT_CLASSIFICATION	6.776901259566797E-5	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999322309874044	WITHOUT_CLASSIFICATION	6.776901259566797E-5	IMPLEMENTATION
// SSS FIXME: Can this ever be null?	WITHOUT_CLASSIFICATION	0.9997459382089044	WITHOUT_CLASSIFICATION	2.54061791095563E-4	IMPLEMENTATION
// Run the pass on the passed in scope!	WITHOUT_CLASSIFICATION	0.9999496490314381	WITHOUT_CLASSIFICATION	5.035096856180569E-5	IMPLEMENTATION
// done // done // done // done	WITHOUT_CLASSIFICATION	0.9999043669981392	WITHOUT_CLASSIFICATION	9.56330018608814E-5	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999899571906399	WITHOUT_CLASSIFICATION	1.0042809360135015E-5	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999899571906399	WITHOUT_CLASSIFICATION	1.0042809360135015E-5	IMPLEMENTATION
// This method is called to build arguments for a block!	WITHOUT_CLASSIFICATION	0.9999618741558386	WITHOUT_CLASSIFICATION	3.812584416143916E-5	IMPLEMENTATION
// build first node (and ignore its result) and then second node	WITHOUT_CLASSIFICATION	0.9999857287520645	WITHOUT_CLASSIFICATION	1.4271247935435892E-5	IMPLEMENTATION
// build first node only and return false	WITHOUT_CLASSIFICATION	0.9999781555967485	WITHOUT_CLASSIFICATION	2.1844403251502956E-5	IMPLEMENTATION
// Value of the last expression in the block 	WITHOUT_CLASSIFICATION	0.999974470153346	WITHOUT_CLASSIFICATION	2.5529846654003144E-5	IMPLEMENTATION
// If this is not a closure, the break is equivalent to jumping to the loop end label	WITHOUT_CLASSIFICATION	0.9999855784557466	WITHOUT_CLASSIFICATION	1.4421544253315238E-5	IMPLEMENTATION
// get the incoming case value	WITHOUT_CLASSIFICATION	0.9999855904451818	WITHOUT_CLASSIFICATION	1.4409554818310105E-5	IMPLEMENTATION
// the CASE instruction	WITHOUT_CLASSIFICATION	0.9999457607915483	WITHOUT_CLASSIFICATION	5.4239208451673756E-5	IMPLEMENTATION
// lists to aggregate variables and bodies for whens	WITHOUT_CLASSIFICATION	0.9999522205792106	WITHOUT_CLASSIFICATION	4.777942078940735E-5	IMPLEMENTATION
// build each "when"	WITHOUT_CLASSIFICATION	0.9999107546758748	WITHOUT_CLASSIFICATION	8.924532412522136E-5	IMPLEMENTATION
// multiple conditions for when	WITHOUT_CLASSIFICATION	0.9998464027656664	WITHOUT_CLASSIFICATION	1.5359723433365282E-4	IMPLEMENTATION
// build "else" if it exists	WITHOUT_CLASSIFICATION	0.9999366110271661	WITHOUT_CLASSIFICATION	6.338897283382205E-5	IMPLEMENTATION
// now emit bodies	WITHOUT_CLASSIFICATION	0.9999004297345245	WITHOUT_CLASSIFICATION	9.957026547540201E-5	IMPLEMENTATION
// close it out	WITHOUT_CLASSIFICATION	0.9999395713310465	WITHOUT_CLASSIFICATION	6.042866895358558E-5	IMPLEMENTATION
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999917795060352	WITHOUT_CLASSIFICATION	8.2204939647645E-6	IMPLEMENTATION
// Do we have a dynamic container?	WITHOUT_CLASSIFICATION	0.9993804133590286	WITHOUT_CLASSIFICATION	6.19586640971313E-4	IMPLEMENTATION
// Return a meta object corresponding to the class	WITHOUT_CLASSIFICATION	0.9999836002792319	WITHOUT_CLASSIFICATION	1.6399720768127386E-5	IMPLEMENTATION
// 1. Load the module first (lhs of node) // 2. Then load the constant from the module	WITHOUT_CLASSIFICATION	0.9999812425946277	WITHOUT_CLASSIFICATION	1.875740537228608E-5	IMPLEMENTATION
// Build IR for args	WITHOUT_CLASSIFICATION	0.9998931651670949	WITHOUT_CLASSIFICATION	1.0683483290506871E-4	IMPLEMENTATION
// Build IR for body	WITHOUT_CLASSIFICATION	0.9998929635605572	WITHOUT_CLASSIFICATION	1.0703643944269073E-4	IMPLEMENTATION
// if root of method is rescue, build as a light rescue	WITHOUT_CLASSIFICATION	0.9999294101725721	WITHOUT_CLASSIFICATION	7.058982742791516E-5	IMPLEMENTATION
// Instance method	WITHOUT_CLASSIFICATION	0.9999386523608963	WITHOUT_CLASSIFICATION	6.134763910377345E-5	IMPLEMENTATION
// Class method	WITHOUT_CLASSIFICATION	0.9999377468448731	WITHOUT_CLASSIFICATION	6.225315512694046E-5	IMPLEMENTATION
// Other args begin at index 1	WITHOUT_CLASSIFICATION	0.9999100538440793	WITHOUT_CLASSIFICATION	8.994615592074243E-5	IMPLEMENTATION
// Both for fixed arity and variable arity methods	WITHOUT_CLASSIFICATION	0.9999431706395335	WITHOUT_CLASSIFICATION	5.6829360466371556E-5	IMPLEMENTATION
// Now for the rest	WITHOUT_CLASSIFICATION	0.9999343251820879	WITHOUT_CLASSIFICATION	6.567481791208116E-5	IMPLEMENTATION
// Jump to 'l' if this arg is not null.  If null, fall through and build the default value!	WITHOUT_CLASSIFICATION	0.9999964456439974	WITHOUT_CLASSIFICATION	3.5543560027283226E-6	IMPLEMENTATION
// This is not an expression that computes anything	WITHOUT_CLASSIFICATION	0.9999806988432889	WITHOUT_CLASSIFICATION	1.9301156711028394E-5	IMPLEMENTATION
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999883908149251	WITHOUT_CLASSIFICATION	1.1609185074927641E-5	IMPLEMENTATION
// Build args	WITHOUT_CLASSIFICATION	0.9998904893532233	WITHOUT_CLASSIFICATION	1.0951064677674479E-4	IMPLEMENTATION
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999861555443634	WITHOUT_CLASSIFICATION	1.3844455636583703E-5	IMPLEMENTATION
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999913336855636	WITHOUT_CLASSIFICATION	8.666314436464572E-6	IMPLEMENTATION
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999917795060352	WITHOUT_CLASSIFICATION	8.2204939647645E-6	IMPLEMENTATION
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999883908149251	WITHOUT_CLASSIFICATION	1.1609185074927641E-5	IMPLEMENTATION
// Build args	WITHOUT_CLASSIFICATION	0.9998904893532233	WITHOUT_CLASSIFICATION	1.0951064677674479E-4	IMPLEMENTATION
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999913336855636	WITHOUT_CLASSIFICATION	8.666314436464572E-6	IMPLEMENTATION
// Get the container for this new module	WITHOUT_CLASSIFICATION	0.9999882447565489	WITHOUT_CLASSIFICATION	1.1755243451178032E-5	IMPLEMENTATION
// Build the new module	WITHOUT_CLASSIFICATION	0.9999478689513467	WITHOUT_CLASSIFICATION	5.213104865323895E-5	IMPLEMENTATION
// Build the module body	WITHOUT_CLASSIFICATION	0.9999422127294412	WITHOUT_CLASSIFICATION	5.7787270558785344E-5	IMPLEMENTATION
// First, build an assignment for a splat, if any, with the rest of the args!	WITHOUT_CLASSIFICATION	0.9999243877700743	WITHOUT_CLASSIFICATION	7.561222992572896E-5	IMPLEMENTATION
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999756655350728	WITHOUT_CLASSIFICATION	2.4334464927187902E-5	IMPLEMENTATION
// If a closure, the next is simply a return from the closure! // If a regular loop, the next is simply a jump to the end of the iteration	WITHOUT_CLASSIFICATION	0.9999927268184079	WITHOUT_CLASSIFICATION	7.2731815921630964E-6	IMPLEMENTATION
// get attr	WITHOUT_CLASSIFICATION	0.9999337215954334	WITHOUT_CLASSIFICATION	6.627840456661139E-5	IMPLEMENTATION
// call operator	WITHOUT_CLASSIFICATION	0.9999023225306598	WITHOUT_CLASSIFICATION	9.767746934015232E-5	IMPLEMENTATION
// set attr	WITHOUT_CLASSIFICATION	0.9999322800878023	WITHOUT_CLASSIFICATION	6.771991219769125E-5	IMPLEMENTATION
// Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, false, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9999703843703615	WITHOUT_CLASSIFICATION	2.961562963849195E-5	IMPLEMENTATION
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999508932592751	WITHOUT_CLASSIFICATION	4.910674072484935E-5	IMPLEMENTATION
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999508932592751	WITHOUT_CLASSIFICATION	4.910674072484935E-5	IMPLEMENTATION
// if v1 is defined and true, we are done! 	WITHOUT_CLASSIFICATION	0.9999484230014989	WITHOUT_CLASSIFICATION	5.1576998501149095E-5	IMPLEMENTATION
// build first node only and return true	WITHOUT_CLASSIFICATION	0.9999752614938237	WITHOUT_CLASSIFICATION	2.473850617636816E-5	IMPLEMENTATION
// build first node as non-expr and build second node	WITHOUT_CLASSIFICATION	0.999964812127674	WITHOUT_CLASSIFICATION	3.5187872326005044E-5	IMPLEMENTATION
// Top-level script!	WITHOUT_CLASSIFICATION	0.9998941937318216	WITHOUT_CLASSIFICATION	1.058062681783151E-4	IMPLEMENTATION
// we won't enter the loop -- just build the condition node	WITHOUT_CLASSIFICATION	0.9999796089492383	WITHOUT_CLASSIFICATION	2.0391050761629097E-5	IMPLEMENTATION
/* ----------- Private Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999804172210758	WITHOUT_CLASSIFICATION	1.9582778924157545E-5	IMPLEMENTATION
// What handles warnings	WITHOUT_CLASSIFICATION	0.9998327636137063	WITHOUT_CLASSIFICATION	1.6723638629367456E-4	IMPLEMENTATION
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999987664752091	WITHOUT_CLASSIFICATION	1.23352479091463E-6	IMPLEMENTATION
// For closures, a redo is a jump to the beginning of the closure // For non-closures, a redo is a jump to the beginning of the loop	WITHOUT_CLASSIFICATION	0.9999786462982642	WITHOUT_CLASSIFICATION	2.1353701735838553E-5	IMPLEMENTATION
// The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999837000834049	WITHOUT_CLASSIFICATION	1.629991659507472E-5	IMPLEMENTATION
// Dummy top-level method for the class	WITHOUT_CLASSIFICATION	0.999978890844268	WITHOUT_CLASSIFICATION	2.110915573193782E-5	IMPLEMENTATION
// Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999869822807511	WITHOUT_CLASSIFICATION	1.3017719248912806E-5	IMPLEMENTATION
// ------ Define the operations below ----	WITHOUT_CLASSIFICATION	0.9999743660174267	WITHOUT_CLASSIFICATION	2.5633982573250163E-5	IMPLEMENTATION
// value copy and type conversion operations	WITHOUT_CLASSIFICATION	0.999989559892384	WITHOUT_CLASSIFICATION	1.0440107615977742E-5	IMPLEMENTATION
// alu operations	WITHOUT_CLASSIFICATION	0.9999107168867867	WITHOUT_CLASSIFICATION	8.928311321326136E-5	IMPLEMENTATION
// method handle, arg receive, return value, and  call instructions	WITHOUT_CLASSIFICATION	0.9999355703076274	WITHOUT_CLASSIFICATION	6.442969237260329E-5	IMPLEMENTATION
// closure instructions	WITHOUT_CLASSIFICATION	0.9999426037005122	WITHOUT_CLASSIFICATION	5.73962994877279E-5	IMPLEMENTATION
// eval instructions	WITHOUT_CLASSIFICATION	0.9999066153165828	WITHOUT_CLASSIFICATION	9.338468341724573E-5	IMPLEMENTATION
// def instructions	WITHOUT_CLASSIFICATION	0.9999176005628356	WITHOUT_CLASSIFICATION	8.239943716440393E-5	IMPLEMENTATION
// exception instructions	WITHOUT_CLASSIFICATION	0.9999537569811463	WITHOUT_CLASSIFICATION	4.624301885363687E-5	IMPLEMENTATION
// Loads	WITHOUT_CLASSIFICATION	0.9963182053346687	WITHOUT_CLASSIFICATION	0.0036817946653311933	IMPLEMENTATION
// Stores	WITHOUT_CLASSIFICATION	0.99635937445479	WITHOUT_CLASSIFICATION	0.0036406255452100184	IMPLEMENTATION
// jump and branch operations	WITHOUT_CLASSIFICATION	0.9999274868357505	WITHOUT_CLASSIFICATION	7.251316424949472E-5	IMPLEMENTATION
// others	WITHOUT_CLASSIFICATION	0.9963798766584288	WITHOUT_CLASSIFICATION	0.003620123341571281	IMPLEMENTATION
// a case/when branch	WITHOUT_CLASSIFICATION	0.9999001346519858	WITHOUT_CLASSIFICATION	9.986534801423847E-5	IMPLEMENTATION
// optimization guards	WITHOUT_CLASSIFICATION	0.999889146207848	WITHOUT_CLASSIFICATION	1.1085379215210131E-4	IMPLEMENTATION
// By default, call instructions cannot be deleted even if their results aren't used by anyone // unless we know more about what the call is, what it does, etc. // Similarly for evals, stores, returns.	WITHOUT_CLASSIFICATION	0.9999940772632538	WITHOUT_CLASSIFICATION	5.922736746256159E-6	IMPLEMENTATION
// Returns the containing parent scope -- can be a dynamic value (hence Operand)!	WITHOUT_CLASSIFICATION	0.9999803743058923	WITHOUT_CLASSIFICATION	1.9625694107719543E-5	IMPLEMENTATION
// scripts	WITHOUT_CLASSIFICATION	0.9967868394807118	WITHOUT_CLASSIFICATION	0.0032131605192881837	IMPLEMENTATION
// scripts and modules	WITHOUT_CLASSIFICATION	0.9999264746851614	WITHOUT_CLASSIFICATION	7.352531483863236E-5	IMPLEMENTATION
// scripts, classes, and modules	WITHOUT_CLASSIFICATION	0.9999494718457418	WITHOUT_CLASSIFICATION	5.052815425818412E-5	IMPLEMENTATION
// methods and closures	WITHOUT_CLASSIFICATION	0.9999317340372599	WITHOUT_CLASSIFICATION	6.826596274018122E-5	IMPLEMENTATION
// create a new variable using the prefix	WITHOUT_CLASSIFICATION	0.9999962388673334	WITHOUT_CLASSIFICATION	3.761132666681026E-6	IMPLEMENTATION
// create a new temporary variable	WITHOUT_CLASSIFICATION	0.9999917857812647	WITHOUT_CLASSIFICATION	8.214218735378493E-6	IMPLEMENTATION
// Get a new label using a generic prefix	WITHOUT_CLASSIFICATION	0.999964417649639	WITHOUT_CLASSIFICATION	3.558235036104238E-5	IMPLEMENTATION
// Build the CFG for this scope -- supported only by methods & closures	WITHOUT_CLASSIFICATION	0.9999499729857916	WITHOUT_CLASSIFICATION	5.002701420843709E-5	IMPLEMENTATION
// Get the control flow graph for this scope -- only valid for methods & closures	WITHOUT_CLASSIFICATION	0.9999910460042085	WITHOUT_CLASSIFICATION	8.95399579143628E-6	IMPLEMENTATION
// While processing loops, this returns the loop that we are processing.	WITHOUT_CLASSIFICATION	0.9999767568053048	WITHOUT_CLASSIFICATION	2.3243194695085274E-5	IMPLEMENTATION
// Record the loop we are beginning to process	WITHOUT_CLASSIFICATION	0.9999637832217028	WITHOUT_CLASSIFICATION	3.6216778297351216E-5	IMPLEMENTATION
// Indicate that we are done processing the loop	WITHOUT_CLASSIFICATION	0.9999692490847015	WITHOUT_CLASSIFICATION	3.0750915298389695E-5	IMPLEMENTATION
// Run the passed in compiler pass on this scope!	WITHOUT_CLASSIFICATION	0.9999494145102304	WITHOUT_CLASSIFICATION	5.05854897695225E-5	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9999579376568669	WITHOUT_CLASSIFICATION	4.206234313307918E-5	IMPLEMENTATION
// Readline	WITHOUT_CLASSIFICATION	0.9998822531055809	WITHOUT_CLASSIFICATION	1.1774689441912938E-4	IMPLEMENTATION
// If the cfg of the method is around, print the CFG!	WITHOUT_CLASSIFICATION	0.9999800395180456	WITHOUT_CLASSIFICATION	1.9960481954434683E-5	IMPLEMENTATION
// Optimize some core class method calls for constant values	WITHOUT_CLASSIFICATION	0.9999705218559064	WITHOUT_CLASSIFICATION	2.9478144093700948E-5	IMPLEMENTATION
// If 'r' is not a constant, it could actually be a compound value! // Look in our value map to see if we have a simplified value for the receiver.	WITHOUT_CLASSIFICATION	0.9999951714730755	WITHOUT_CLASSIFICATION	4.828526924587448E-6	IMPLEMENTATION
// Check if we can optimize this call based on the receiving method and receiver type // Use the simplified receiver!	WITHOUT_CLASSIFICATION	0.9999588436109609	WITHOUT_CLASSIFICATION	4.115638903903708E-5	IMPLEMENTATION
// If we got a simplified value, mark the call dead and insert a copy in its place!	WITHOUT_CLASSIFICATION	0.9999722922969091	WITHOUT_CLASSIFICATION	2.7707703090825263E-5	IMPLEMENTATION
// If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!	WITHOUT_CLASSIFICATION	0.9999569184303627	WITHOUT_CLASSIFICATION	4.308156963724251E-5	IMPLEMENTATION
/* ----------- Public abstract methods ---------- */	WITHOUT_CLASSIFICATION	0.9999759119038604	WITHOUT_CLASSIFICATION	2.40880961396299E-5	IMPLEMENTATION
/* ----------- Public methods with a default implementation ---------- */	WITHOUT_CLASSIFICATION	0.9999046891247871	WITHOUT_CLASSIFICATION	9.531087521281274E-5	IMPLEMENTATION
// Compute meet over all "sources" and compute "destination" basic blocks that should then be processed.  // sources & targets depends on direction of the data flow problem	WITHOUT_CLASSIFICATION	0.9999902606416526	WITHOUT_CLASSIFICATION	9.73935834730287E-6	IMPLEMENTATION
// If the solution has changed, add "dsts" to the work list. // No duplicates please which is why we have bbset.	WITHOUT_CLASSIFICATION	0.9999891672342271	WITHOUT_CLASSIFICATION	1.0832765772805044E-5	IMPLEMENTATION
/* --------- Protected fields/methods below --------- */	WITHOUT_CLASSIFICATION	0.9999628579705843	WITHOUT_CLASSIFICATION	3.714202941567637E-5	IMPLEMENTATION
// Dataflow problem with which this node is associated // CFG node for which this node contains info.	WITHOUT_CLASSIFICATION	0.9999815409119276	WITHOUT_CLASSIFICATION	1.8459088072383134E-5	IMPLEMENTATION
/* -------------- Public fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.999981132363989	WITHOUT_CLASSIFICATION	1.886763601098515E-5	IMPLEMENTATION
// ------- Abstract methods without a default implementation -------	WITHOUT_CLASSIFICATION	0.9999113149054678	WITHOUT_CLASSIFICATION	8.86850945321603E-5	IMPLEMENTATION
// ------- Default implementation methods below -------	WITHOUT_CLASSIFICATION	0.9997623071018893	WITHOUT_CLASSIFICATION	2.3769289811064403E-4	IMPLEMENTATION
/* Compute Meet Over All Paths solution for this dataflow problem on the input CFG.     * This implements a standard worklist algorithm. */	WITHOUT_CLASSIFICATION	0.9987108761288124	WITHOUT_CLASSIFICATION	0.0012891238711876247	IMPLEMENTATION
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9998753199086244	WITHOUT_CLASSIFICATION	1.2468009137555188E-4	IMPLEMENTATION
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9998753199086244	WITHOUT_CLASSIFICATION	1.2468009137555188E-4	IMPLEMENTATION
/* -------------- Packaged/protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999848050323147	WITHOUT_CLASSIFICATION	1.5194967685232894E-5	IMPLEMENTATION
// We want unique ids for dataflow variables	WITHOUT_CLASSIFICATION	0.9999266831300184	WITHOUT_CLASSIFICATION	7.331686998161945E-5	IMPLEMENTATION
/* -------------- Protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999827590842282	WITHOUT_CLASSIFICATION	1.7240915771827654E-5	IMPLEMENTATION
/* -------------- Private fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999843793491113	WITHOUT_CLASSIFICATION	1.562065088868251E-5	IMPLEMENTATION
// Initialize all flow graph nodes 	WITHOUT_CLASSIFICATION	0.9999653954451836	WITHOUT_CLASSIFICATION	3.460455481638149E-5	IMPLEMENTATION
/* Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses */	WITHOUT_CLASSIFICATION	0.999966221549977	WITHOUT_CLASSIFICATION	3.37784500230267E-5	IMPLEMENTATION
/* ******************** PUBLIC INTERFACE ******************* */	WITHOUT_CLASSIFICATION	0.9999250977374341	WITHOUT_CLASSIFICATION	7.490226256592821E-5	IMPLEMENTATION
// Unique ID assigned to this variable	WITHOUT_CLASSIFICATION	0.9999240916756067	WITHOUT_CLASSIFICATION	7.590832439324929E-5	IMPLEMENTATION
// start out with a default RubyObject allocator	WITHOUT_CLASSIFICATION	0.9999863895407277	WITHOUT_CLASSIFICATION	1.3610459272328894E-5	IMPLEMENTATION
// switch to an allocator based on a default constructor	WITHOUT_CLASSIFICATION	0.9999623847380162	WITHOUT_CLASSIFICATION	3.761526198384773E-5	IMPLEMENTATION
/* ----------- Public Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999765750116266	WITHOUT_CLASSIFICATION	2.342498837342268E-5	IMPLEMENTATION
// class or module	WITHOUT_CLASSIFICATION	0.9999220438741739	WITHOUT_CLASSIFICATION	7.795612582611709E-5	IMPLEMENTATION
// OUT = UNION(IN(succs))	WITHOUT_CLASSIFICATION	0.9998976115405487	WITHOUT_CLASSIFICATION	1.0238845945131832E-4	IMPLEMENTATION
// Traverse the instructions in this basic block in reverse order!	WITHOUT_CLASSIFICATION	0.9999604970437274	WITHOUT_CLASSIFICATION	3.95029562726698E-5	IMPLEMENTATION
// v is defined => It is no longer live before 'i'	WITHOUT_CLASSIFICATION	0.999939051720284	WITHOUT_CLASSIFICATION	6.0948279716066945E-5	IMPLEMENTATION
// IN is the same!	WITHOUT_CLASSIFICATION	0.9999181198389067	WITHOUT_CLASSIFICATION	8.188016109327627E-5	IMPLEMENTATION
// IN changed!	WITHOUT_CLASSIFICATION	0.9999233494089476	WITHOUT_CLASSIFICATION	7.665059105243102E-5	IMPLEMENTATION
/* ---------- Protected / package fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999730075618515	WITHOUT_CLASSIFICATION	2.699243814847618E-5	IMPLEMENTATION
// If 'v' is not live at the instruction site, and it has no side effects, mark it dead!	WITHOUT_CLASSIFICATION	0.9999706817427474	WITHOUT_CLASSIFICATION	2.9318257252528273E-5	IMPLEMENTATION
// Do not mark this instruction's operands live if the instruction itself is dead!	WITHOUT_CLASSIFICATION	0.9999618620597538	WITHOUT_CLASSIFICATION	3.813794024625935E-5	IMPLEMENTATION
/* ---------- Private fields, methods --------- */	WITHOUT_CLASSIFICATION	0.999973803075513	WITHOUT_CLASSIFICATION	2.6196924487035246E-5	IMPLEMENTATION
// Variables live at entry of this node // Variables live at exit of node // Temporary set of live variables // Size of the "_in" and "_out" bit sets 	WITHOUT_CLASSIFICATION	0.9999657826314919	WITHOUT_CLASSIFICATION	3.421736850806547E-5	IMPLEMENTATION
// Used during optimization passes to propagate type and other information	WITHOUT_CLASSIFICATION	0.9999652280819661	WITHOUT_CLASSIFICATION	3.47719180340014E-5	IMPLEMENTATION
// Does this instruction have side effects as a result of its operation // This information is used in optimization phases to impact dead code elimination // and other optimization passes	WITHOUT_CLASSIFICATION	0.999991562123878	WITHOUT_CLASSIFICATION	8.437876121964373E-6	IMPLEMENTATION
/* --------- "Abstract"/"please-override" methods --------- */	WITHOUT_CLASSIFICATION	0.9999646756233168	WITHOUT_CLASSIFICATION	3.532437668318613E-5	IMPLEMENTATION
/* Array of all operands for this instruction */	WITHOUT_CLASSIFICATION	0.9999323281679963	WITHOUT_CLASSIFICATION	6.767183200371607E-5	IMPLEMENTATION
/* List of all variables used by all operands of this instruction */	WITHOUT_CLASSIFICATION	0.9999658301357117	WITHOUT_CLASSIFICATION	3.416986428823235E-5	IMPLEMENTATION
/*      * This method takes as input a map of operands to their values, and outputs     *     * If the value map provides a value for any of the instruction's operands     * this method is expected to replace the original operands with the simplified values.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify     */	WITHOUT_CLASSIFICATION	0.9999943504739289	WITHOUT_CLASSIFICATION	5.649526071109309E-6	IMPLEMENTATION
// By default, no simplifications!	WITHOUT_CLASSIFICATION	0.9999610853395441	WITHOUT_CLASSIFICATION	3.891466045587652E-5	IMPLEMENTATION
// Can this call lead to ruby code getting modified?   // If we don't know what method we are calling, we assume it can (pessimistic, but safe!) // If we do know the target method, we ask the method itself whether it modifies ruby code	WITHOUT_CLASSIFICATION	0.9998802527470823	WITHOUT_CLASSIFICATION	1.1974725291773349E-4	IMPLEMENTATION
// By default, return instructions cannot be deleted	WITHOUT_CLASSIFICATION	0.9999888285033901	WITHOUT_CLASSIFICATION	1.1171496609826195E-5	IMPLEMENTATION
// If true, returns the rest of the array starting at the index	WITHOUT_CLASSIFICATION	0.999985488563638	WITHOUT_CLASSIFICATION	1.451143636201484E-5	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999793989184829	WITHOUT_CLASSIFICATION	2.0601081517138222E-5	IMPLEMENTATION
// Map of label & basic blocks with that label	WITHOUT_CLASSIFICATION	0.9999155734427273	WITHOUT_CLASSIFICATION	8.442655727271595E-5	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999793989184829	WITHOUT_CLASSIFICATION	2.0601081517138222E-5	IMPLEMENTATION
// You can only value-replace atomic values	WITHOUT_CLASSIFICATION	0.999960397138322	WITHOUT_CLASSIFICATION	3.960286167803207E-5	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999279841271373	WITHOUT_CLASSIFICATION	7.201587286259645E-5	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999279841271373	WITHOUT_CLASSIFICATION	7.201587286259645E-5	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999279841271373	WITHOUT_CLASSIFICATION	7.201587286259645E-5	IMPLEMENTATION
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999817605273811	WITHOUT_CLASSIFICATION	1.8239472618888533E-5	IMPLEMENTATION
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999817605273811	WITHOUT_CLASSIFICATION	1.8239472618888533E-5	IMPLEMENTATION
// The operand that this attribute targets //    DEFERRED //    AttributeValue _val;       // Attribute value	WITHOUT_CLASSIFICATION	0.999982420637388	WITHOUT_CLASSIFICATION	1.757936261207633E-5	IMPLEMENTATION
// Arrays, Ranges, etc. are compound values // Variables, fixnums, floats, etc. are "atomic" values	WITHOUT_CLASSIFICATION	0.9999695904405848	WITHOUT_CLASSIFICATION	3.0409559415291017E-5	IMPLEMENTATION
// Get the target class of this operand, if we know it!	WITHOUT_CLASSIFICATION	0.9999890519859228	WITHOUT_CLASSIFICATION	1.094801407726861E-5	IMPLEMENTATION
// The following constants capture pre-known static call sites -- used to implement ruby internals	WITHOUT_CLASSIFICATION	0.9988696686243094	WITHOUT_CLASSIFICATION	0.0011303313756906629	IMPLEMENTATION
/* Nothing to do by default */	WITHOUT_CLASSIFICATION	0.9999840051621631	WITHOUT_CLASSIFICATION	1.5994837836966915E-5	IMPLEMENTATION
// Map of label & basic blocks which are waiting for a bb with that label	WITHOUT_CLASSIFICATION	0.9999357583504805	WITHOUT_CLASSIFICATION	6.42416495195229E-5	IMPLEMENTATION
// Init before building basic blocks below!	WITHOUT_CLASSIFICATION	0.9999206704679515	WITHOUT_CLASSIFICATION	7.932953204838636E-5	IMPLEMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9997537128523494	WITHOUT_CLASSIFICATION	2.462871476506224E-4	IMPLEMENTATION
// Scope (method/closure) to which this cfg belongs // Entry BB -- dummy // Exit BB -- dummy // The actual graph // Next available basic block id	WITHOUT_CLASSIFICATION	0.9999470792669147	WITHOUT_CLASSIFICATION	5.292073308527373E-5	IMPLEMENTATION
// Jump instruction bbs dont add an edge to the succeeding bb by default	WITHOUT_CLASSIFICATION	0.9999840933023842	WITHOUT_CLASSIFICATION	1.590669761572189E-5	IMPLEMENTATION
// Add forward ref. edges	WITHOUT_CLASSIFICATION	0.9999511751118934	WITHOUT_CLASSIFICATION	4.882488810670093E-5	IMPLEMENTATION
// currBB cannot be null!	WITHOUT_CLASSIFICATION	0.9999500597470731	WITHOUT_CLASSIFICATION	4.9940252926915705E-5	IMPLEMENTATION
// Add a forward reference from tgt -> currBB	WITHOUT_CLASSIFICATION	0.9999747071567323	WITHOUT_CLASSIFICATION	2.5292843267650865E-5	IMPLEMENTATION
// root-level logic	WITHOUT_CLASSIFICATION	0.9999196175544731	WITHOUT_CLASSIFICATION	8.038244552686757E-5	IMPLEMENTATION
// root-level methods	WITHOUT_CLASSIFICATION	0.9999485537303193	WITHOUT_CLASSIFICATION	5.1446269680641684E-5	IMPLEMENTATION
// root-level classes	WITHOUT_CLASSIFICATION	0.9999541403412928	WITHOUT_CLASSIFICATION	4.585965870715276E-5	IMPLEMENTATION
//        case 4: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); //            break; //        case 5: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); //            break;	WITHOUT_CLASSIFICATION	0.9999880640299778	WITHOUT_CLASSIFICATION	1.1935970022184181E-5	IMPLEMENTATION
// load receiver	WITHOUT_CLASSIFICATION	0.9999133165937318	WITHOUT_CLASSIFICATION	8.668340626809772E-5	IMPLEMENTATION
// load receiver	WITHOUT_CLASSIFICATION	0.9999133165937318	WITHOUT_CLASSIFICATION	8.668340626809772E-5	IMPLEMENTATION
// receiver	WITHOUT_CLASSIFICATION	0.9998867222121923	WITHOUT_CLASSIFICATION	1.1327778780767002E-4	IMPLEMENTATION
// load arguments	WITHOUT_CLASSIFICATION	0.9999472998205373	WITHOUT_CLASSIFICATION	5.270017946265442E-5	IMPLEMENTATION
// load arguments	WITHOUT_CLASSIFICATION	0.9999472998205373	WITHOUT_CLASSIFICATION	5.270017946265442E-5	IMPLEMENTATION
//        case 4: //        case 5:	WITHOUT_CLASSIFICATION	0.9999660768943028	WITHOUT_CLASSIFICATION	3.392310569719722E-5	IMPLEMENTATION
// Object[] args	WITHOUT_CLASSIFICATION	0.9999045633644797	WITHOUT_CLASSIFICATION	9.543663552022607E-5	IMPLEMENTATION
// load handle	WITHOUT_CLASSIFICATION	0.9998650878913992	WITHOUT_CLASSIFICATION	1.3491210860076954E-4	IMPLEMENTATION
// args array	WITHOUT_CLASSIFICATION	0.9998884538767654	WITHOUT_CLASSIFICATION	1.1154612323457887E-4	IMPLEMENTATION
// i'th argument	WITHOUT_CLASSIFICATION	0.9999122734463126	WITHOUT_CLASSIFICATION	8.772655368740279E-5	IMPLEMENTATION
// invoke specific arity version	WITHOUT_CLASSIFICATION	0.9999393484274854	WITHOUT_CLASSIFICATION	6.0651572514643365E-5	IMPLEMENTATION
// Object arg0	WITHOUT_CLASSIFICATION	0.9999037140373558	WITHOUT_CLASSIFICATION	9.628596264433015E-5	IMPLEMENTATION
// useful for code completion inside the IRB	WITHOUT_CLASSIFICATION	0.9999309965295835	WITHOUT_CLASSIFICATION	6.900347041655914E-5	IMPLEMENTATION
// No editing before startPos	WITHOUT_CLASSIFICATION	0.9999461225784582	WITHOUT_CLASSIFICATION	5.387742154193632E-5	IMPLEMENTATION
// no silly ticks!	WITHOUT_CLASSIFICATION	0.999910341424464	WITHOUT_CLASSIFICATION	8.965857553603268E-5	IMPLEMENTATION
// no candidates? Fail.	WITHOUT_CLASSIFICATION	0.9999256619169543	WITHOUT_CLASSIFICATION	7.433808304575867E-5	IMPLEMENTATION
// at end	WITHOUT_CLASSIFICATION	0.9958073789714463	WITHOUT_CLASSIFICATION	0.0041926210285535845	IMPLEMENTATION
// undo check	WITHOUT_CLASSIFICATION	0.9998910532863375	WITHOUT_CLASSIFICATION	1.0894671366244393E-4	IMPLEMENTATION
// Explicit reference to these vars as symbols...	WITHOUT_CLASSIFICATION	0.9999562672348704	WITHOUT_CLASSIFICATION	4.3732765129628804E-5	IMPLEMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9997537128523494	WITHOUT_CLASSIFICATION	2.462871476506224E-4	IMPLEMENTATION
//\t\n\"\\'`@$><=;|&{(	WITHOUT_CLASSIFICATION	0.9998965151503372	WITHOUT_CLASSIFICATION	1.0348484966281427E-4	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999586465525656	WITHOUT_CLASSIFICATION	4.135344743431455E-5	IMPLEMENTATION
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999497003990816	WITHOUT_CLASSIFICATION	5.0299600918421055E-5	IMPLEMENTATION
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999497003990816	WITHOUT_CLASSIFICATION	5.0299600918421055E-5	IMPLEMENTATION
// Binding provided for scope, use it	WITHOUT_CLASSIFICATION	0.9999528914198977	WITHOUT_CLASSIFICATION	4.710858010231573E-5	IMPLEMENTATION
// this is ensured by the callers	WITHOUT_CLASSIFICATION	0.9999812901237258	WITHOUT_CLASSIFICATION	1.870987627421116E-5	IMPLEMENTATION
// no binding, just eval in "current" frame (caller's frame)	WITHOUT_CLASSIFICATION	0.9999461596301572	WITHOUT_CLASSIFICATION	5.384036984272084E-5	IMPLEMENTATION
// restore position	WITHOUT_CLASSIFICATION	0.9999502035648218	WITHOUT_CLASSIFICATION	4.979643517815962E-5	IMPLEMENTATION
/* Something like cvar_cbase() from eval.c, factored out for the benefit     * of all the classvar-related node evaluations */	WITHOUT_CLASSIFICATION	0.9999757571992323	WITHOUT_CLASSIFICATION	2.4242800767734185E-5	IMPLEMENTATION
// Used by the compiler to simplify arg processing	WITHOUT_CLASSIFICATION	0.999986785013711	WITHOUT_CLASSIFICATION	1.3214986288936463E-5	IMPLEMENTATION
// JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace	WITHOUT_CLASSIFICATION	0.9999606580676519	WITHOUT_CLASSIFICATION	3.9341932348110935E-5	IMPLEMENTATION
// MRI does similar thing on MacOS X with 'EditLine wrapper'.	WITHOUT_CLASSIFICATION	0.9999217040283925	WITHOUT_CLASSIFICATION	7.829597160755183E-5	IMPLEMENTATION
// We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)	WITHOUT_CLASSIFICATION	0.9999766070361806	WITHOUT_CLASSIFICATION	2.339296381934684E-5	IMPLEMENTATION
// JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)	WITHOUT_CLASSIFICATION	0.9999623852905153	WITHOUT_CLASSIFICATION	3.7614709484732604E-5	IMPLEMENTATION
// not overridden, let's go	WITHOUT_CLASSIFICATION	0.999659512564462	WITHOUT_CLASSIFICATION	3.404874355379811E-4	IMPLEMENTATION
/* Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8() */	WITHOUT_CLASSIFICATION	0.9999215663382112	WITHOUT_CLASSIFICATION	7.843366178878572E-5	IMPLEMENTATION
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9995067624701738	WITHOUT_CLASSIFICATION	4.932375298262736E-4	IMPLEMENTATION
// Complete using a Proc object	WITHOUT_CLASSIFICATION	0.9999350326749596	WITHOUT_CLASSIFICATION	6.496732504040597E-5	IMPLEMENTATION
// clear basename so it's anonymous when raising	WITHOUT_CLASSIFICATION	0.9999517679615004	WITHOUT_CLASSIFICATION	4.8232038499507064E-5	IMPLEMENTATION
// These are not really used by timeout, but exposed for compatibility	WITHOUT_CLASSIFICATION	0.999987514680238	WITHOUT_CLASSIFICATION	1.2485319762009463E-5	IMPLEMENTATION
// Timeout module methods	WITHOUT_CLASSIFICATION	0.9999325815043982	WITHOUT_CLASSIFICATION	6.741849560184127E-5	IMPLEMENTATION
// Toplevel defines	WITHOUT_CLASSIFICATION	0.9998890426254186	WITHOUT_CLASSIFICATION	1.1095737458151702E-4	IMPLEMENTATION
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999459746885638	WITHOUT_CLASSIFICATION	5.402531143605912E-5	IMPLEMENTATION
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999382665271179	WITHOUT_CLASSIFICATION	6.173347288210629E-5	IMPLEMENTATION
// if it's the exception we're expecting	WITHOUT_CLASSIFICATION	0.9999303617543988	WITHOUT_CLASSIFICATION	6.963824560122912E-5	IMPLEMENTATION
// and we were given a specific exception	WITHOUT_CLASSIFICATION	0.9999371174314319	WITHOUT_CLASSIFICATION	6.288256856815465E-5	IMPLEMENTATION
// otherwise, rethrow	WITHOUT_CLASSIFICATION	0.9999179821699288	WITHOUT_CLASSIFICATION	8.201783007124087E-5	IMPLEMENTATION
// // Remove the Executor task now, to avoid cancelled tasks accumulating // until an Executor thread can schedule and remove them //	WITHOUT_CLASSIFICATION	0.9999860826172686	WITHOUT_CLASSIFICATION	1.3917382731341786E-5	IMPLEMENTATION
// // If the task was scheduled, wait for it to finish before polling // for the exception it would have thrown. //	WITHOUT_CLASSIFICATION	0.9999711407481913	WITHOUT_CLASSIFICATION	2.885925180878042E-5	IMPLEMENTATION
// NetProtocolBufferedIO	WITHOUT_CLASSIFICATION	0.999908702301272	WITHOUT_CLASSIFICATION	9.129769872792107E-5	IMPLEMENTATION
/* When a length is given, read_string acts like get_bytes */	WITHOUT_CLASSIFICATION	0.9999333601088212	WITHOUT_CLASSIFICATION	6.663989117886974E-5	IMPLEMENTATION
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9999541826350501	WITHOUT_CLASSIFICATION	4.5817364949955725E-5	IMPLEMENTATION
// ARRAY and STRUCT are only used internally	WITHOUT_CLASSIFICATION	0.9999389312856322	WITHOUT_CLASSIFICATION	6.106871436781537E-5	IMPLEMENTATION
// If no release method is defined, then memory leaks will result.	WITHOUT_CLASSIFICATION	0.9999473944576504	WITHOUT_CLASSIFICATION	5.260554234970176E-5	IMPLEMENTATION
/*     * This variant of newStruct is called from StructLayoutBuilder     */	WITHOUT_CLASSIFICATION	0.9999808164315204	WITHOUT_CLASSIFICATION	1.9183568479705153E-5	IMPLEMENTATION
// This also handles unsigned int -> negative signed int conversion	WITHOUT_CLASSIFICATION	0.9999563708175515	WITHOUT_CLASSIFICATION	4.3629182448513354E-5	IMPLEMENTATION
// Windows is LLP64	WITHOUT_CLASSIFICATION	0.9998870186316896	WITHOUT_CLASSIFICATION	1.1298136831043716E-4	IMPLEMENTATION
// Older JDK on linux map 'c' to 'libc.so' which doesn't work	WITHOUT_CLASSIFICATION	0.999947898824177	WITHOUT_CLASSIFICATION	5.210117582295675E-5	IMPLEMENTATION
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999397571927909	WITHOUT_CLASSIFICATION	6.024280720911212E-5	IMPLEMENTATION
// $blah	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9999541826350501	WITHOUT_CLASSIFICATION	4.5817364949955725E-5	IMPLEMENTATION
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999630626100012	WITHOUT_CLASSIFICATION	3.6937389998865595E-5	IMPLEMENTATION
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999397571927909	WITHOUT_CLASSIFICATION	6.024280720911212E-5	IMPLEMENTATION
// // Keep a reference to the temporary memory in the cache so it does // not get freed by the GC until the struct is freed //	WITHOUT_CLASSIFICATION	0.9999858326285566	WITHOUT_CLASSIFICATION	1.4167371443370734E-5	IMPLEMENTATION
// Add Pointer::NULL as a constant	WITHOUT_CLASSIFICATION	0.9999604581154588	WITHOUT_CLASSIFICATION	3.954188454117673E-5	IMPLEMENTATION
// Create the ordered list of field names from the map	WITHOUT_CLASSIFICATION	0.9999930095451601	WITHOUT_CLASSIFICATION	6.990454839853394E-6	IMPLEMENTATION
// Assemble a [ :name, offset ] array	WITHOUT_CLASSIFICATION	0.9999214366381494	WITHOUT_CLASSIFICATION	7.856336185056684E-5	IMPLEMENTATION
//                case FLOAT:	WITHOUT_CLASSIFICATION	0.999964803964954	WITHOUT_CLASSIFICATION	3.519603504599911E-5	IMPLEMENTATION
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999670145289155	WITHOUT_CLASSIFICATION	3.298547108452536E-5	IMPLEMENTATION
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999670145289155	WITHOUT_CLASSIFICATION	3.298547108452536E-5	IMPLEMENTATION
// No auto cleanup needed	WITHOUT_CLASSIFICATION	0.9988431708524662	WITHOUT_CLASSIFICATION	0.0011568291475337815	IMPLEMENTATION
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9998385098070598	WITHOUT_CLASSIFICATION	1.6149019294019447E-4	IMPLEMENTATION
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999915619953984	WITHOUT_CLASSIFICATION	8.438004601548076E-6	IMPLEMENTATION
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999915619953984	WITHOUT_CLASSIFICATION	8.438004601548076E-6	IMPLEMENTATION
/*         * If there is exactly _one_ callback argument to the function,         * then a block can be given and automatically subsituted for the callback         * parameter.         */	WITHOUT_CLASSIFICATION	0.9999996922199643	WITHOUT_CLASSIFICATION	3.077800356841607E-7	IMPLEMENTATION
/*------------------------------------------------------------------------*/	WITHOUT_CLASSIFICATION	0.9999433121580601	WITHOUT_CLASSIFICATION	5.668784193995706E-5	IMPLEMENTATION
//AF_INET	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
//AF_INET	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
// RubyUNIXServer	WITHOUT_CLASSIFICATION	0.9998778725312927	WITHOUT_CLASSIFICATION	1.2212746870732738E-4	IMPLEMENTATION
// line 321	WITHOUT_CLASSIFICATION	0.9999109546671153	WITHOUT_CLASSIFICATION	8.904533288467563E-5	IMPLEMENTATION
// // Set up for potentially fast-int operations //	WITHOUT_CLASSIFICATION	0.9999718261255853	WITHOUT_CLASSIFICATION	2.8173874414712776E-5	IMPLEMENTATION
// // Hook up the MemoryPointer class if its not already there //	WITHOUT_CLASSIFICATION	0.9999875080460922	WITHOUT_CLASSIFICATION	1.2491953907808633E-5	IMPLEMENTATION
// This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and // (2) Socket.getChannel() seems to return null in some cases	WITHOUT_CLASSIFICATION	0.9999940456499176	WITHOUT_CLASSIFICATION	5.954350082460654E-6	IMPLEMENTATION
// no UNIXSockets on Windows	WITHOUT_CLASSIFICATION	0.9999294565484694	WITHOUT_CLASSIFICATION	7.054345153052257E-5	IMPLEMENTATION
// Sockaddr_un has different structure on different platforms. // See JRUBY-2213 for more details.	WITHOUT_CLASSIFICATION	0.999941589336274	WITHOUT_CLASSIFICATION	5.8410663725998355E-5	IMPLEMENTATION
// There is something valid in the sun_path component	WITHOUT_CLASSIFICATION	0.9999907526901411	WITHOUT_CLASSIFICATION	9.247309858908544E-6	IMPLEMENTATION
// RubyIPSocket	WITHOUT_CLASSIFICATION	0.9998770568964076	WITHOUT_CLASSIFICATION	1.2294310359233591E-4	IMPLEMENTATION
// host is nil or the empty string, bind to INADDR_ANY	WITHOUT_CLASSIFICATION	0.9999766946909564	WITHOUT_CLASSIFICATION	2.3305309043605666E-5	IMPLEMENTATION
// host and port given	WITHOUT_CLASSIFICATION	0.9999069441645799	WITHOUT_CLASSIFICATION	9.305583542006957E-5	IMPLEMENTATION
// RubyUDPSocket	WITHOUT_CLASSIFICATION	0.9998770568964076	WITHOUT_CLASSIFICATION	1.2294310359233591E-4	IMPLEMENTATION
// By default we always reverse lookup unless do_not_reverse_lookup set.	WITHOUT_CLASSIFICATION	0.9999701434140436	WITHOUT_CLASSIFICATION	2.985658595645106E-5	IMPLEMENTATION
// make sure descriptor is registered	WITHOUT_CLASSIFICATION	0.9999758681124633	WITHOUT_CLASSIFICATION	2.4131887536773872E-5	IMPLEMENTATION
// continue with normal initialization	WITHOUT_CLASSIFICATION	0.9999789042477547	WITHOUT_CLASSIFICATION	2.1095752245305276E-5	IMPLEMENTATION
// recv returns nil on EOF	WITHOUT_CLASSIFICATION	0.999934680092604	WITHOUT_CLASSIFICATION	6.531990739610216E-5	IMPLEMENTATION
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9998988121495027	WITHOUT_CLASSIFICATION	1.0118785049731468E-4	IMPLEMENTATION
// RubyBasicSocket	WITHOUT_CLASSIFICATION	0.9998771127165829	WITHOUT_CLASSIFICATION	1.2288728341711548E-4	IMPLEMENTATION
// we don't have to define any that we don't support; see socket.c	WITHOUT_CLASSIFICATION	0.9999768385230537	WITHOUT_CLASSIFICATION	2.316147694631102E-5	IMPLEMENTATION
// mandatory constants we haven't implemented	WITHOUT_CLASSIFICATION	0.9333575698708735	WITHOUT_CLASSIFICATION	0.06664243012912664	IMPLEMENTATION
// constants webrick crashes without	WITHOUT_CLASSIFICATION	0.9999399932394165	WITHOUT_CLASSIFICATION	6.000676058352917E-5	IMPLEMENTATION
// More constants needed by specs	WITHOUT_CLASSIFICATION	0.9999354162739572	WITHOUT_CLASSIFICATION	6.458372604286548E-5	IMPLEMENTATION
// normal file descriptor..try to work with it	WITHOUT_CLASSIFICATION	0.9999473072038642	WITHOUT_CLASSIFICATION	5.269279613586626E-5	IMPLEMENTATION
// AF_INET	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
// 255.255.255.255	WITHOUT_CLASSIFICATION	0.9998766846217828	WITHOUT_CLASSIFICATION	1.2331537821723534E-4	IMPLEMENTATION
// 0.0.0.0	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
//def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)	WITHOUT_CLASSIFICATION	0.9999088762874142	WITHOUT_CLASSIFICATION	9.112371258574923E-5	IMPLEMENTATION
// line 323	WITHOUT_CLASSIFICATION	0.9999109546671153	WITHOUT_CLASSIFICATION	8.904533288467563E-5	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999538135488255	WITHOUT_CLASSIFICATION	4.6186451174501284E-5	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999538135488255	WITHOUT_CLASSIFICATION	4.6186451174501284E-5	IMPLEMENTATION
// ok, it's a socket...set values accordingly // just using AF_INET since we can't tell from SocketChannel...	WITHOUT_CLASSIFICATION	0.9999651412394736	WITHOUT_CLASSIFICATION	3.485876052643549E-5	IMPLEMENTATION
// datagram, set accordingly // again, AF_INET	WITHOUT_CLASSIFICATION	0.9999605693613643	WITHOUT_CLASSIFICATION	3.943063863562744E-5	IMPLEMENTATION
//IRubyObject family = args[2];	WITHOUT_CLASSIFICATION	0.9999108840346614	WITHOUT_CLASSIFICATION	8.911596533860185E-5	IMPLEMENTATION
// When Socket::AI_PASSIVE and host is nil, return 'any' address. 	WITHOUT_CLASSIFICATION	0.9999323382315877	WITHOUT_CLASSIFICATION	6.766176841235812E-5	IMPLEMENTATION
// The value of 1 is for Socket::AI_PASSIVE.	WITHOUT_CLASSIFICATION	0.9999737688307113	WITHOUT_CLASSIFICATION	2.6231169288626547E-5	IMPLEMENTATION
// RubySocket	WITHOUT_CLASSIFICATION	0.9998770568964076	WITHOUT_CLASSIFICATION	1.2294310359233591E-4	IMPLEMENTATION
// numeric host, use it for port	WITHOUT_CLASSIFICATION	0.9999273200341727	WITHOUT_CLASSIFICATION	7.267996582730904E-5	IMPLEMENTATION
//            e.printStackTrace();	WITHOUT_CLASSIFICATION	0.999973589688914	WITHOUT_CLASSIFICATION	2.6410311086040228E-5	IMPLEMENTATION
// we were woken up without being selected...poll for thread events and go back to sleep	WITHOUT_CLASSIFICATION	0.9999855595143589	WITHOUT_CLASSIFICATION	1.4440485641072167E-5	IMPLEMENTATION
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999847594851835	WITHOUT_CLASSIFICATION	1.5240514816518468E-5	IMPLEMENTATION
// no connection immediately accepted, let them try again	WITHOUT_CLASSIFICATION	0.9999424023612505	WITHOUT_CLASSIFICATION	5.7597638749619276E-5	IMPLEMENTATION
// do nothing, just exit	WITHOUT_CLASSIFICATION	0.9999825979887266	WITHOUT_CLASSIFICATION	1.7402011273358468E-5	IMPLEMENTATION
//nativeThread.setPriority(priority);	WITHOUT_CLASSIFICATION	0.9998947964074415	WITHOUT_CLASSIFICATION	1.0520359255854606E-4	IMPLEMENTATION
// set thread context JRuby classloader here, for Ruby-owned thread	WITHOUT_CLASSIFICATION	0.9999677426150196	WITHOUT_CLASSIFICATION	3.225738498041104E-5	IMPLEMENTATION
// uber-ThreadKill catcher, since it should always just mean "be dead"	WITHOUT_CLASSIFICATION	0.9998199564030351	WITHOUT_CLASSIFICATION	1.8004359696493206E-4	IMPLEMENTATION
// Call the thread's code	WITHOUT_CLASSIFICATION	0.9999383082988658	WITHOUT_CLASSIFICATION	6.169170113421417E-5	IMPLEMENTATION
// Someone called exit!, so we need to kill the main thread	WITHOUT_CLASSIFICATION	0.999906606328872	WITHOUT_CLASSIFICATION	9.339367112810233E-5	IMPLEMENTATION
// restore context classloader, in case we're using a thread pool	WITHOUT_CLASSIFICATION	0.9999841315190642	WITHOUT_CLASSIFICATION	1.586848093586239E-5	IMPLEMENTATION
// be dead	WITHOUT_CLASSIFICATION	0.9960642950496152	WITHOUT_CLASSIFICATION	0.003935704950384703	IMPLEMENTATION
// loop until a context is available, to clean up softrefs that might have been collected	WITHOUT_CLASSIFICATION	0.999962310667417	WITHOUT_CLASSIFICATION	3.768933258295293E-5	IMPLEMENTATION
// all threads in ruby thread group plus main thread	WITHOUT_CLASSIFICATION	0.9999510768053632	WITHOUT_CLASSIFICATION	4.892319463687665E-5	IMPLEMENTATION
// thread is not alive, skip it	WITHOUT_CLASSIFICATION	0.9999551534445255	WITHOUT_CLASSIFICATION	4.4846555474538366E-5	IMPLEMENTATION
// future is done or cancelled, skip it	WITHOUT_CLASSIFICATION	0.9999372722440201	WITHOUT_CLASSIFICATION	6.272775597990243E-5	IMPLEMENTATION
// first, check if the sender has unreceived mail	WITHOUT_CLASSIFICATION	0.9999741518511069	WITHOUT_CLASSIFICATION	2.5848148892949857E-5	IMPLEMENTATION
// then deliver mail to the target	WITHOUT_CLASSIFICATION	0.9999654188176358	WITHOUT_CLASSIFICATION	3.458118236421326E-5	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999106722051068	WITHOUT_CLASSIFICATION	8.932779489331391E-5	IMPLEMENTATION
// Define a second version that doesn't take a block, so we have unique code paths for both cases.	WITHOUT_CLASSIFICATION	0.9999602338621888	WITHOUT_CLASSIFICATION	3.976613781116654E-5	IMPLEMENTATION
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9998765236447803	WITHOUT_CLASSIFICATION	1.2347635521967604E-4	IMPLEMENTATION
// main body	WITHOUT_CLASSIFICATION	0.9998839232910567	WITHOUT_CLASSIFICATION	1.1607670894338366E-4	IMPLEMENTATION
// return jump handling	WITHOUT_CLASSIFICATION	0.9999794609938916	WITHOUT_CLASSIFICATION	2.0539006108455258E-5	IMPLEMENTATION
// finally	WITHOUT_CLASSIFICATION	0.9968019375765838	WITHOUT_CLASSIFICATION	0.0031980624234161895	IMPLEMENTATION
// return result if we're still good	WITHOUT_CLASSIFICATION	0.9999891367602243	WITHOUT_CLASSIFICATION	1.0863239775860036E-5	IMPLEMENTATION
// redo jump handling	WITHOUT_CLASSIFICATION	0.9998873806300485	WITHOUT_CLASSIFICATION	1.1261936995144236E-4	IMPLEMENTATION
// clear the redo	WITHOUT_CLASSIFICATION	0.9999533636992333	WITHOUT_CLASSIFICATION	4.6636300766849494E-5	IMPLEMENTATION
// get runtime, create jump error, and throw it	WITHOUT_CLASSIFICATION	0.9999697959367813	WITHOUT_CLASSIFICATION	3.0204063218777402E-5	IMPLEMENTATION
// throw redo error if we're still good	WITHOUT_CLASSIFICATION	0.9999346483984041	WITHOUT_CLASSIFICATION	6.535160159598058E-5	IMPLEMENTATION
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999103359531574	WITHOUT_CLASSIFICATION	8.966404684264858E-5	IMPLEMENTATION
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.999892930155693	WITHOUT_CLASSIFICATION	1.0706984430692517E-4	IMPLEMENTATION
// No required specified, check actual number of required args	WITHOUT_CLASSIFICATION	0.9999786081483715	WITHOUT_CLASSIFICATION	2.1391851628530553E-5	IMPLEMENTATION
// actual required is less than 3, so we use specific arity	WITHOUT_CLASSIFICATION	0.9999456418742314	WITHOUT_CLASSIFICATION	5.43581257686419E-5	IMPLEMENTATION
// actual required is greater than 3, raise error (we don't support actual required > 3)	WITHOUT_CLASSIFICATION	0.9999094873477901	WITHOUT_CLASSIFICATION	9.051265220996181E-5	IMPLEMENTATION
// simple path, no multimethod	WITHOUT_CLASSIFICATION	0.9999205252135988	WITHOUT_CLASSIFICATION	7.947478640123091E-5	IMPLEMENTATION
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9998899432380818	WITHOUT_CLASSIFICATION	1.1005676191815632E-4	IMPLEMENTATION
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9998899432380818	WITHOUT_CLASSIFICATION	1.1005676191815632E-4	IMPLEMENTATION
// normal all-rest method	WITHOUT_CLASSIFICATION	0.9999268932650581	WITHOUT_CLASSIFICATION	7.310673494184165E-5	IMPLEMENTATION
// for zero, one, two, three arities, JavaMethod.JavaMethod*.call(...IRubyObject[] args...) will check	WITHOUT_CLASSIFICATION	0.9999471177464359	WITHOUT_CLASSIFICATION	5.288225356415203E-5	IMPLEMENTATION
// promise to implement zero to N	WITHOUT_CLASSIFICATION	0.9916288546843995	WITHOUT_CLASSIFICATION	0.008371145315600424	IMPLEMENTATION
// return	WITHOUT_CLASSIFICATION	0.9993848326956482	WITHOUT_CLASSIFICATION	6.151673043519407E-4	IMPLEMENTATION
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999374626379676	WITHOUT_CLASSIFICATION	6.253736203242724E-5	IMPLEMENTATION
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999347204247436	WITHOUT_CLASSIFICATION	6.527957525636233E-5	IMPLEMENTATION
// confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999360065554994	WITHOUT_CLASSIFICATION	6.399344450056702E-5	IMPLEMENTATION
// confirm maximum not greater than optional	WITHOUT_CLASSIFICATION	0.999963305452781	WITHOUT_CLASSIFICATION	3.66945472189373E-5	IMPLEMENTATION
// Raise an error if arity does not match requirements	WITHOUT_CLASSIFICATION	0.9999697901280895	WITHOUT_CLASSIFICATION	3.020987191055512E-5	IMPLEMENTATION
// tc	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
// self // name	WITHOUT_CLASSIFICATION	0.9999150667445816	WITHOUT_CLASSIFICATION	8.493325541830759E-5	IMPLEMENTATION
// no args	WITHOUT_CLASSIFICATION	0.9971825878151009	WITHOUT_CLASSIFICATION	0.0028174121848990284	IMPLEMENTATION
// variable args with block	WITHOUT_CLASSIFICATION	0.9999219687755867	WITHOUT_CLASSIFICATION	7.803122441338922E-5	IMPLEMENTATION
// variable args no block, load null block	WITHOUT_CLASSIFICATION	0.9999303236150031	WITHOUT_CLASSIFICATION	6.967638499684774E-5	IMPLEMENTATION
// zero args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999025551536852	WITHOUT_CLASSIFICATION	9.744484631477115E-5	IMPLEMENTATION
// one arg with block	WITHOUT_CLASSIFICATION	0.9998938932541372	WITHOUT_CLASSIFICATION	1.0610674586276977E-4	IMPLEMENTATION
// one arg, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999035419358402	WITHOUT_CLASSIFICATION	9.645806415990408E-5	IMPLEMENTATION
// two args with block	WITHOUT_CLASSIFICATION	0.9999008521376271	WITHOUT_CLASSIFICATION	9.914786237290825E-5	IMPLEMENTATION
// two args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999028622440883	WITHOUT_CLASSIFICATION	9.713775591164681E-5	IMPLEMENTATION
// three args with block	WITHOUT_CLASSIFICATION	0.9999057361887034	WITHOUT_CLASSIFICATION	9.426381129658921E-5	IMPLEMENTATION
// three args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.999907647285911	WITHOUT_CLASSIFICATION	9.235271408909778E-5	IMPLEMENTATION
// load block if it accepts block	WITHOUT_CLASSIFICATION	0.9999286598578007	WITHOUT_CLASSIFICATION	7.134014219936986E-5	IMPLEMENTATION
// all other arg cases with block	WITHOUT_CLASSIFICATION	0.9998947904554522	WITHOUT_CLASSIFICATION	1.0520954454787637E-4	IMPLEMENTATION
// all other arg cases without block	WITHOUT_CLASSIFICATION	0.9998931450326555	WITHOUT_CLASSIFICATION	1.068549673445889E-4	IMPLEMENTATION
// one arg, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999730337889434	WITHOUT_CLASSIFICATION	2.6966211056595827E-5	IMPLEMENTATION
// two args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999728437582375	WITHOUT_CLASSIFICATION	2.7156241762541812E-5	IMPLEMENTATION
// three args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999741815737745	WITHOUT_CLASSIFICATION	2.581842622551433E-5	IMPLEMENTATION
// load target for invocations	WITHOUT_CLASSIFICATION	0.999957363420769	WITHOUT_CLASSIFICATION	4.263657923102486E-5	IMPLEMENTATION
// load receiver as original type for virtual invocation	WITHOUT_CLASSIFICATION	0.9999631280863417	WITHOUT_CLASSIFICATION	3.6871913658412036E-5	IMPLEMENTATION
// static invocation	WITHOUT_CLASSIFICATION	0.9999392918612766	WITHOUT_CLASSIFICATION	6.070813872328931E-5	IMPLEMENTATION
// virtual invocation	WITHOUT_CLASSIFICATION	0.9999112008840997	WITHOUT_CLASSIFICATION	8.879911590028824E-5	IMPLEMENTATION
// void return type, so we need to load a nil for returning below	WITHOUT_CLASSIFICATION	0.9999351159659282	WITHOUT_CLASSIFICATION	6.488403407182171E-5	IMPLEMENTATION
// normal finally and exit	WITHOUT_CLASSIFICATION	0.9999200165358239	WITHOUT_CLASSIFICATION	7.998346417617908E-5	IMPLEMENTATION
// promise to implement one to N	WITHOUT_CLASSIFICATION	0.9902121253181875	WITHOUT_CLASSIFICATION	0.009787874681812494	IMPLEMENTATION
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.999892930155693	WITHOUT_CLASSIFICATION	1.0706984430692517E-4	IMPLEMENTATION
// these are only needed if we have a non-noop call config	WITHOUT_CLASSIFICATION	0.9999800200316814	WITHOUT_CLASSIFICATION	1.997996831853042E-5	IMPLEMENTATION
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.999954288856069	WITHOUT_CLASSIFICATION	4.57111439309829E-5	IMPLEMENTATION
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.999954288856069	WITHOUT_CLASSIFICATION	4.57111439309829E-5	IMPLEMENTATION
// singleton classes don't get their own visibility domain	WITHOUT_CLASSIFICATION	0.9999798794051836	WITHOUT_CLASSIFICATION	2.0120594816422757E-5	IMPLEMENTATION
// For visibility we need real meta class and not anonymous one from class << self	WITHOUT_CLASSIFICATION	0.9999765198641476	WITHOUT_CLASSIFICATION	2.348013585245816E-5	IMPLEMENTATION
// SimpleInvocationMethod	WITHOUT_CLASSIFICATION	0.9999137367708414	WITHOUT_CLASSIFICATION	8.626322915864425E-5	IMPLEMENTATION
// never reached	WITHOUT_CLASSIFICATION	0.9998812671254808	WITHOUT_CLASSIFICATION	1.1873287451931872E-4	IMPLEMENTATION
// promise to implement N with block	WITHOUT_CLASSIFICATION	0.9912681865831294	WITHOUT_CLASSIFICATION	0.008731813416870645	IMPLEMENTATION
// promise to implement zero to N with block	WITHOUT_CLASSIFICATION	0.9914500286309991	WITHOUT_CLASSIFICATION	0.008549971369001036	IMPLEMENTATION
// promise to implement one to N with block	WITHOUT_CLASSIFICATION	0.9900033399107491	WITHOUT_CLASSIFICATION	0.009996660089250934	IMPLEMENTATION
// promise to implement two to N with block	WITHOUT_CLASSIFICATION	0.9890624603894674	WITHOUT_CLASSIFICATION	0.010937539610532513	IMPLEMENTATION
// promise to implement zero to three with block	WITHOUT_CLASSIFICATION	0.9926066821729349	WITHOUT_CLASSIFICATION	0.007393317827065136	IMPLEMENTATION
// promise to implement one to three with block	WITHOUT_CLASSIFICATION	0.9912530718119454	WITHOUT_CLASSIFICATION	0.008746928188054627	IMPLEMENTATION
// promise to implement two to three with block	WITHOUT_CLASSIFICATION	0.9905390257189203	WITHOUT_CLASSIFICATION	0.009460974281079688	IMPLEMENTATION
// promise to implement three with block	WITHOUT_CLASSIFICATION	0.9866042879668856	WITHOUT_CLASSIFICATION	0.01339571203311435	IMPLEMENTATION
// promise to implement N	WITHOUT_CLASSIFICATION	0.9913446255148077	WITHOUT_CLASSIFICATION	0.00865537448519236	IMPLEMENTATION
// DumpingInvocationMethodFactory	WITHOUT_CLASSIFICATION	0.9999283128315697	WITHOUT_CLASSIFICATION	7.168716843032025E-5	IMPLEMENTATION
// We promote our box to being its own box since we're changing // visibilities, and need it to be reflected on this method object // independent of any other sharing the box.	WITHOUT_CLASSIFICATION	0.999989985004158	WITHOUT_CLASSIFICATION	1.001499584202868E-5	IMPLEMENTATION
// Normally we could leave these to fall back on the superclass, but // since it dispatches through the [] version below, which may // dispatch through the []+block version, we can save it a couple hops // by overriding these here.	WITHOUT_CLASSIFICATION	0.999967491433127	WITHOUT_CLASSIFICATION	3.2508566873024556E-5	IMPLEMENTATION
// promise to implement two to N	WITHOUT_CLASSIFICATION	0.9892906839803602	WITHOUT_CLASSIFICATION	0.010709316019639745	IMPLEMENTATION
// promise to implement three to N	WITHOUT_CLASSIFICATION	0.9858160707785623	WITHOUT_CLASSIFICATION	0.014183929221437826	IMPLEMENTATION
// promise to implement zero to three	WITHOUT_CLASSIFICATION	0.9920417327239373	WITHOUT_CLASSIFICATION	0.007958267276062756	IMPLEMENTATION
// promise to implement one to three	WITHOUT_CLASSIFICATION	0.9905856692449574	WITHOUT_CLASSIFICATION	0.009414330755042569	IMPLEMENTATION
// promise to implement two to three	WITHOUT_CLASSIFICATION	0.9898177001141824	WITHOUT_CLASSIFICATION	0.010182299885817604	IMPLEMENTATION
// promise to implement three	WITHOUT_CLASSIFICATION	0.9854055748274795	WITHOUT_CLASSIFICATION	0.014594425172520515	IMPLEMENTATION
// all other arities use "n" dispatch path	WITHOUT_CLASSIFICATION	0.9999093926659953	WITHOUT_CLASSIFICATION	9.060733400475453E-5	IMPLEMENTATION
// load up object and add a few useful methods	WITHOUT_CLASSIFICATION	0.9999735784639138	WITHOUT_CLASSIFICATION	2.642153608620512E-5	IMPLEMENTATION
// open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel	WITHOUT_CLASSIFICATION	0.9999625406166597	WITHOUT_CLASSIFICATION	3.745938334041402E-5	IMPLEMENTATION
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9990420976888486	WITHOUT_CLASSIFICATION	9.579023111515207E-4	IMPLEMENTATION
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999544433191739	WITHOUT_CLASSIFICATION	4.555668082606465E-5	IMPLEMENTATION
// create constructor	WITHOUT_CLASSIFICATION	0.9999839166708493	WITHOUT_CLASSIFICATION	1.6083329150712903E-5	IMPLEMENTATION
// wrap self and store the wrapper	WITHOUT_CLASSIFICATION	0.9999501940713088	WITHOUT_CLASSIFICATION	4.980592869121661E-5	IMPLEMENTATION
// end constructor	WITHOUT_CLASSIFICATION	0.9999270052459777	WITHOUT_CLASSIFICATION	7.299475402233616E-5	IMPLEMENTATION
// start setup method	WITHOUT_CLASSIFICATION	0.9999611046364265	WITHOUT_CLASSIFICATION	3.8895363573598277E-5	IMPLEMENTATION
// set RubyClass	WITHOUT_CLASSIFICATION	0.99993084419402	WITHOUT_CLASSIFICATION	6.915580598007056E-5	IMPLEMENTATION
// set Ruby	WITHOUT_CLASSIFICATION	0.9999308272929144	WITHOUT_CLASSIFICATION	6.917270708563433E-5	IMPLEMENTATION
// all methods dispatch to the simple version by default, which is method_missing normally	WITHOUT_CLASSIFICATION	0.9999881147374611	WITHOUT_CLASSIFICATION	1.188526253890402E-5	IMPLEMENTATION
// try specific name first, falling back on simple name	WITHOUT_CLASSIFICATION	0.9999533015956273	WITHOUT_CLASSIFICATION	4.669840437270074E-5	IMPLEMENTATION
// get current context	WITHOUT_CLASSIFICATION	0.9999682151270505	WITHOUT_CLASSIFICATION	3.1784872949554425E-5	IMPLEMENTATION
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999476464491559	WITHOUT_CLASSIFICATION	5.235355084412966E-5	IMPLEMENTATION
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9990420976888486	WITHOUT_CLASSIFICATION	9.579023111515207E-4	IMPLEMENTATION
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999544433191739	WITHOUT_CLASSIFICATION	4.555668082606465E-5	IMPLEMENTATION
// create constructor	WITHOUT_CLASSIFICATION	0.9999839166708493	WITHOUT_CLASSIFICATION	1.6083329150712903E-5	IMPLEMENTATION
// end constructor	WITHOUT_CLASSIFICATION	0.9999270052459777	WITHOUT_CLASSIFICATION	7.299475402233616E-5	IMPLEMENTATION
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9987802656459452	WITHOUT_CLASSIFICATION	0.0012197343540547405	IMPLEMENTATION
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999652196108831	WITHOUT_CLASSIFICATION	3.478038911691776E-5	IMPLEMENTATION
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999421033786913	WITHOUT_CLASSIFICATION	5.789662130879122E-5	IMPLEMENTATION
// load null block	WITHOUT_CLASSIFICATION	0.9999172360317878	WITHOUT_CLASSIFICATION	8.276396821218274E-5	IMPLEMENTATION
// invoke method	WITHOUT_CLASSIFICATION	0.9999251103740225	WITHOUT_CLASSIFICATION	7.4889625977457E-5	IMPLEMENTATION
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999468951594865	WITHOUT_CLASSIFICATION	5.3104840513373614E-5	IMPLEMENTATION
// end setup method	WITHOUT_CLASSIFICATION	0.9999355725334855	WITHOUT_CLASSIFICATION	6.442746651444047E-5	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.9999617740091016	WITHOUT_CLASSIFICATION	3.8225990898335594E-5	IMPLEMENTATION
// create static init, for a monitor object	WITHOUT_CLASSIFICATION	0.9999883284880366	WITHOUT_CLASSIFICATION	1.1671511963378716E-5	IMPLEMENTATION
// store the wrapper	WITHOUT_CLASSIFICATION	0.9999495520415446	WITHOUT_CLASSIFICATION	5.044795845544326E-5	IMPLEMENTATION
// prepare temp locals	WITHOUT_CLASSIFICATION	0.9999285162145091	WITHOUT_CLASSIFICATION	7.148378549091582E-5	IMPLEMENTATION
// Try to look up field for simple name // get field; if nonnull, go straight to dispatch	WITHOUT_CLASSIFICATION	0.9999729936529932	WITHOUT_CLASSIFICATION	2.7006347006792375E-5	IMPLEMENTATION
// field is null, lock class and try to populate	WITHOUT_CLASSIFICATION	0.9999723144154143	WITHOUT_CLASSIFICATION	2.7685584585628765E-5	IMPLEMENTATION
// try/finally block to ensure unlock	WITHOUT_CLASSIFICATION	0.9999328238299554	WITHOUT_CLASSIFICATION	6.71761700446867E-5	IMPLEMENTATION
// store it	WITHOUT_CLASSIFICATION	0.9999170632905097	WITHOUT_CLASSIFICATION	8.293670949021404E-5	IMPLEMENTATION
// end of try block	WITHOUT_CLASSIFICATION	0.9999275997034603	WITHOUT_CLASSIFICATION	7.240029653965767E-5	IMPLEMENTATION
// finally block to release monitor	WITHOUT_CLASSIFICATION	0.9999313432602787	WITHOUT_CLASSIFICATION	6.865673972135161E-5	IMPLEMENTATION
// exception handling for monitor release	WITHOUT_CLASSIFICATION	0.9999169646736137	WITHOUT_CLASSIFICATION	8.30353263863135E-5	IMPLEMENTATION
// re-get, re-check method; if not null now, go to dispatch	WITHOUT_CLASSIFICATION	0.9999336741742602	WITHOUT_CLASSIFICATION	6.63258257397485E-5	IMPLEMENTATION
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999476464491559	WITHOUT_CLASSIFICATION	5.235355084412966E-5	IMPLEMENTATION
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999652196108831	WITHOUT_CLASSIFICATION	3.478038911691776E-5	IMPLEMENTATION
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999421033786913	WITHOUT_CLASSIFICATION	5.789662130879122E-5	IMPLEMENTATION
// invoke method	WITHOUT_CLASSIFICATION	0.9999251103740225	WITHOUT_CLASSIFICATION	7.4889625977457E-5	IMPLEMENTATION
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999468951594865	WITHOUT_CLASSIFICATION	5.3104840513373614E-5	IMPLEMENTATION
// end setup method	WITHOUT_CLASSIFICATION	0.9999355725334855	WITHOUT_CLASSIFICATION	6.442746651444047E-5	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.9999617740091016	WITHOUT_CLASSIFICATION	3.8225990898335594E-5	IMPLEMENTATION
// create the class	WITHOUT_CLASSIFICATION	0.9999863315142635	WITHOUT_CLASSIFICATION	1.3668485736567427E-5	IMPLEMENTATION
// method still not available, call method_missing	WITHOUT_CLASSIFICATION	0.9999176905602289	WITHOUT_CLASSIFICATION	8.23094397710034E-5	IMPLEMENTATION
// perform the dispatch	WITHOUT_CLASSIFICATION	0.9999520275189907	WITHOUT_CLASSIFICATION	4.797248100916569E-5	IMPLEMENTATION
// try to load the specified name; only if that fails, try to define the class	WITHOUT_CLASSIFICATION	0.999995987842865	WITHOUT_CLASSIFICATION	4.012157134959619E-6	IMPLEMENTATION
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999017945170803	WITHOUT_CLASSIFICATION	9.820548291964439E-5	IMPLEMENTATION
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999017945170803	WITHOUT_CLASSIFICATION	9.820548291964439E-5	IMPLEMENTATION
// setup the class	WITHOUT_CLASSIFICATION	0.9999714461107541	WITHOUT_CLASSIFICATION	2.8553889245913967E-5	IMPLEMENTATION
// now, create a method_added that can replace the DynamicMethod fields as they're redefined	WITHOUT_CLASSIFICATION	0.9999554854557435	WITHOUT_CLASSIFICATION	4.451454425642283E-5	IMPLEMENTATION
// do nothing, it's a non-impl method	WITHOUT_CLASSIFICATION	0.9999843403393537	WITHOUT_CLASSIFICATION	1.56596606463308E-5	IMPLEMENTATION
// probably a primitive	WITHOUT_CLASSIFICATION	0.9999293675693643	WITHOUT_CLASSIFICATION	7.063243063568205E-5	IMPLEMENTATION
// interfaces are handled as modules	WITHOUT_CLASSIFICATION	0.9999368278899844	WITHOUT_CLASSIFICATION	6.317211001559853E-5	IMPLEMENTATION
// construct the mirror class and parent classes	WITHOUT_CLASSIFICATION	0.9999893077686991	WITHOUT_CLASSIFICATION	1.0692231300880229E-5	IMPLEMENTATION
// set the full name	WITHOUT_CLASSIFICATION	0.9999429933108938	WITHOUT_CLASSIFICATION	5.700668910632513E-5	IMPLEMENTATION
// include all interfaces	WITHOUT_CLASSIFICATION	0.9999604233038897	WITHOUT_CLASSIFICATION	3.957669611023371E-5	IMPLEMENTATION
// if it's an array, only add methods for aref, aset, and length	WITHOUT_CLASSIFICATION	0.9999683436756782	WITHOUT_CLASSIFICATION	3.1656324321781064E-5	IMPLEMENTATION
// add array construction methods	WITHOUT_CLASSIFICATION	0.999977826449213	WITHOUT_CLASSIFICATION	2.217355078707629E-5	IMPLEMENTATION
// add all public constructors (note: getConstructors only returns public ones)	WITHOUT_CLASSIFICATION	0.9999856323975864	WITHOUT_CLASSIFICATION	1.436760241358637E-5	IMPLEMENTATION
// add all instance and static methods	WITHOUT_CLASSIFICATION	0.9999841892698845	WITHOUT_CLASSIFICATION	1.5810730115393443E-5	IMPLEMENTATION
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9998884445171503	WITHOUT_CLASSIFICATION	1.1155548284971785E-4	IMPLEMENTATION
// too much array creation!	WITHOUT_CLASSIFICATION	0.9999301247591198	WITHOUT_CLASSIFICATION	6.987524088027255E-5	IMPLEMENTATION
// only include static methods if specified	WITHOUT_CLASSIFICATION	0.9999707394416065	WITHOUT_CLASSIFICATION	2.9260558393445067E-5	IMPLEMENTATION
// add a few type-specific special methods	WITHOUT_CLASSIFICATION	0.9999795100385693	WITHOUT_CLASSIFICATION	2.04899614307276E-5	IMPLEMENTATION
// add all static variables	WITHOUT_CLASSIFICATION	0.9999737876277212	WITHOUT_CLASSIFICATION	2.621237227883377E-5	IMPLEMENTATION
// only public static fields that are valid constants	WITHOUT_CLASSIFICATION	0.9999820673015132	WITHOUT_CLASSIFICATION	1.793269848692413E-5	IMPLEMENTATION
// looks like someone's trying to raise a Java exception. Let them.	WITHOUT_CLASSIFICATION	0.9999557706243083	WITHOUT_CLASSIFICATION	4.422937569168257E-5	IMPLEMENTATION
// NOTE: The five match methods are arity-split to avoid the cost of boxing arguments // when there's already a cached match. Do not condense them into a single // method.	WITHOUT_CLASSIFICATION	0.9999956656203349	WITHOUT_CLASSIFICATION	4.3343796649782835E-6	IMPLEMENTATION
// TODO: This is where we would want to do precision checks to see // if it's non-destructive to coerce a given type into the target // integral primitive	WITHOUT_CLASSIFICATION	0.5195890430477689	WITHOUT_CLASSIFICATION	0.480410956952231	IMPLEMENTATION
// long first because it's what Fixnum claims to be	WITHOUT_CLASSIFICATION	0.9999731923217509	WITHOUT_CLASSIFICATION	2.6807678249142965E-5	IMPLEMENTATION
// double first because it's what float claims to be	WITHOUT_CLASSIFICATION	0.9999884059236622	WITHOUT_CLASSIFICATION	1.1594076337690476E-5	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9368501523217421	WITHOUT_CLASSIFICATION	0.06314984767825789	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.999891906560817	WITHOUT_CLASSIFICATION	1.0809343918316703E-4	IMPLEMENTATION
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999893802645056	WITHOUT_CLASSIFICATION	1.0619735494412239E-5	IMPLEMENTATION
// we set all Java methods to optional, since many/most have overloads	WITHOUT_CLASSIFICATION	0.9999689933880224	WITHOUT_CLASSIFICATION	3.100661197761114E-5	IMPLEMENTATION
// If we hold a Java object, we need a java_class accessor	WITHOUT_CLASSIFICATION	0.9999361808657565	WITHOUT_CLASSIFICATION	6.38191342434337E-5	IMPLEMENTATION
// line 326	WITHOUT_CLASSIFICATION	0.9999109546671153	WITHOUT_CLASSIFICATION	8.904533288467563E-5	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.999891906560817	WITHOUT_CLASSIFICATION	1.0809343918316703E-4	IMPLEMENTATION
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999893802645056	WITHOUT_CLASSIFICATION	1.0619735494412239E-5	IMPLEMENTATION
// too much array creation!	WITHOUT_CLASSIFICATION	0.9999301247591198	WITHOUT_CLASSIFICATION	6.987524088027255E-5	IMPLEMENTATION
// construct new array proxy (ArrayJavaProxy)	WITHOUT_CLASSIFICATION	0.9999528649684835	WITHOUT_CLASSIFICATION	4.713503151643889E-5	IMPLEMENTATION
// Get map of all fields we want to define.  	WITHOUT_CLASSIFICATION	0.9999107876149382	WITHOUT_CLASSIFICATION	8.921238506175006E-5	IMPLEMENTATION
// Look through all mappings to find a match entry for this field	WITHOUT_CLASSIFICATION	0.9999355338868275	WITHOUT_CLASSIFICATION	6.446611317248727E-5	IMPLEMENTATION
// Hit a non-java proxy class (included Modules can be a cause of this...skip)	WITHOUT_CLASSIFICATION	0.9999631036705185	WITHOUT_CLASSIFICATION	3.6896329481512786E-5	IMPLEMENTATION
// We could not find all of them print out first one (we could print them all?)	WITHOUT_CLASSIFICATION	0.9999788730941136	WITHOUT_CLASSIFICATION	2.112690588644159E-5	IMPLEMENTATION
// dummy bodies for default impls	WITHOUT_CLASSIFICATION	0.9999703220310987	WITHOUT_CLASSIFICATION	2.9677968901242766E-5	IMPLEMENTATION
// initialize this if it hasn't been	WITHOUT_CLASSIFICATION	0.9999770020389345	WITHOUT_CLASSIFICATION	2.2997961065557374E-5	IMPLEMENTATION
// initialize these if they haven't been	WITHOUT_CLASSIFICATION	0.9999824724223559	WITHOUT_CLASSIFICATION	1.7527577644062486E-5	IMPLEMENTATION
// not allowed for original (non-generated) Java classes // note: not allowing for any previously created class right now; // this restriction might be loosened later for generated classes	WITHOUT_CLASSIFICATION	0.9999712584948001	WITHOUT_CLASSIFICATION	2.8741505199879748E-5	IMPLEMENTATION
// setup new, etc unless this is a ConcreteJavaProxy subclass	WITHOUT_CLASSIFICATION	0.9999761163508293	WITHOUT_CLASSIFICATION	2.388364917068596E-5	IMPLEMENTATION
// First we make modifications to the class, to adapt it to being // both a Ruby class and a proxy for a Java type	WITHOUT_CLASSIFICATION	0.9999910237130466	WITHOUT_CLASSIFICATION	8.976286953381512E-6	IMPLEMENTATION
// list of interfaces we implement	WITHOUT_CLASSIFICATION	0.9983951062055556	WITHOUT_CLASSIFICATION	0.0016048937944444107	IMPLEMENTATION
// We capture the original "new" and make it private	WITHOUT_CLASSIFICATION	0.9999518799166854	WITHOUT_CLASSIFICATION	4.8120083314679855E-5	IMPLEMENTATION
// The replacement "new" allocates and inits the Ruby object as before, but // also instantiates our proxified Java object by calling __jcreate!	WITHOUT_CLASSIFICATION	0.9999891576770463	WITHOUT_CLASSIFICATION	1.0842322953685181E-5	IMPLEMENTATION
// Next, we define a few private methods that we'll use to manipulate // the Java object contained within this Ruby object	WITHOUT_CLASSIFICATION	0.999991417272377	WITHOUT_CLASSIFICATION	8.582727622927566E-6	IMPLEMENTATION
// jcreate instantiates the proxy object which implements all interfaces // and which is wrapped and implemented by this object	WITHOUT_CLASSIFICATION	0.9998197074807655	WITHOUT_CLASSIFICATION	1.8029251923447776E-4	IMPLEMENTATION
// Now we add an "implement" and "implement_all" methods to the class	WITHOUT_CLASSIFICATION	0.9997666034663216	WITHOUT_CLASSIFICATION	2.333965336783445E-4	IMPLEMENTATION
// implement all forces implementation of all interfaces we intend // for this class to implement	WITHOUT_CLASSIFICATION	0.9996873005575662	WITHOUT_CLASSIFICATION	3.12699442433829E-4	IMPLEMENTATION
// we've already done the above priming logic, just add another interface // to the list of intentions unless we're past the point of no return or // already intend to implement the given interface	WITHOUT_CLASSIFICATION	0.9997423136063387	WITHOUT_CLASSIFICATION	2.576863936613703E-4	IMPLEMENTATION
// walk all superclasses aggregating interfaces	WITHOUT_CLASSIFICATION	0.9999744987177089	WITHOUT_CLASSIFICATION	2.550128229107466E-5	IMPLEMENTATION
// construct the new interface impl and set it into the object	WITHOUT_CLASSIFICATION	0.9999962898830791	WITHOUT_CLASSIFICATION	3.710116920972013E-6	IMPLEMENTATION
// assuming the user wants a collection of interfaces that can be // included together. make it so.	WITHOUT_CLASSIFICATION	0.9999845045742362	WITHOUT_CLASSIFICATION	1.5495425763904797E-5	IMPLEMENTATION
// not allowed for existing Java interface modules	WITHOUT_CLASSIFICATION	0.9999269126464528	WITHOUT_CLASSIFICATION	7.308735354724256E-5	IMPLEMENTATION
// To turn a module into an "interface collection" we add a class instance // variable to hold the list of interfaces, and modify append_features // for this module to call append_features on each of those interfaces as // well	WITHOUT_CLASSIFICATION	0.9999979696019171	WITHOUT_CLASSIFICATION	2.030398082967824E-6	IMPLEMENTATION
// already set up append_features, just add the interface if we haven't already	WITHOUT_CLASSIFICATION	0.9999911499926788	WITHOUT_CLASSIFICATION	8.850007321157843E-6	IMPLEMENTATION
// array-of-interface-type creation/identity	WITHOUT_CLASSIFICATION	0.9999540680909904	WITHOUT_CLASSIFICATION	4.5931909009627686E-5	IMPLEMENTATION
// keep this variant for kind_of? testing	WITHOUT_CLASSIFICATION	0.9999217881779993	WITHOUT_CLASSIFICATION	7.821182200075411E-5	IMPLEMENTATION
// array creation should use this variant	WITHOUT_CLASSIFICATION	0.999829840237235	WITHOUT_CLASSIFICATION	1.701597627651214E-4	IMPLEMENTATION
// parent.setConstant(name, proxyClass); // where the name should come from ?	WITHOUT_CLASSIFICATION	0.9999742462008356	WITHOUT_CLASSIFICATION	2.5753799164284034E-5	IMPLEMENTATION
// including interface module so old-style interface "subclasses" will // respond correctly to #kind_of?, etc.	WITHOUT_CLASSIFICATION	0.9999852645355152	WITHOUT_CLASSIFICATION	1.4735464484892162E-5	IMPLEMENTATION
// add reference to interface module	WITHOUT_CLASSIFICATION	0.99998401431127	WITHOUT_CLASSIFICATION	1.5985688729929543E-5	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999330321010502	WITHOUT_CLASSIFICATION	6.696789894973229E-5	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999330321010502	WITHOUT_CLASSIFICATION	6.696789894973229E-5	IMPLEMENTATION
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9998884445171503	WITHOUT_CLASSIFICATION	1.1155548284971785E-4	IMPLEMENTATION
// same as argument_types, but matches name in java.lang.reflect.Constructor/Method	WITHOUT_CLASSIFICATION	0.9999732108460734	WITHOUT_CLASSIFICATION	2.678915392657899E-5	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999875542857046	WITHOUT_CLASSIFICATION	1.244571429550959E-5	IMPLEMENTATION
// weakly reserved names	WITHOUT_CLASSIFICATION	0.9999001703218953	WITHOUT_CLASSIFICATION	9.982967810483366E-5	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999817874264073	WITHOUT_CLASSIFICATION	1.8212573592669165E-5	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999817874264073	WITHOUT_CLASSIFICATION	1.8212573592669165E-5	IMPLEMENTATION
// modified only by addMethod; no synchronization required	WITHOUT_CLASSIFICATION	0.9999660414717244	WITHOUT_CLASSIFICATION	3.395852827550571E-5	IMPLEMENTATION
// if there's no constructor, we must prevent construction	WITHOUT_CLASSIFICATION	0.9999643913024644	WITHOUT_CLASSIFICATION	3.560869753553631E-5	IMPLEMENTATION
// caching constructors, as they're accessed for each new instance	WITHOUT_CLASSIFICATION	0.9999546333530899	WITHOUT_CLASSIFICATION	4.5366646910108787E-5	IMPLEMENTATION
// proxy module for interfaces	WITHOUT_CLASSIFICATION	0.9999646226724103	WITHOUT_CLASSIFICATION	3.5377327589674697E-5	IMPLEMENTATION
// proxy class for concrete classes.  also used for // "concrete" interfaces, which is why we have two fields	WITHOUT_CLASSIFICATION	0.9999924879152434	WITHOUT_CLASSIFICATION	7.512084756520431E-6	IMPLEMENTATION
// readable only by thread building proxy, so don't need to be // volatile. used to handle recursive calls to getProxyClass/Module // while proxy is being constructed (usually when a constant // defined by a class is of the same type as that class).	WITHOUT_CLASSIFICATION	0.9999981368318202	WITHOUT_CLASSIFICATION	1.8631681797752392E-6	IMPLEMENTATION
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999761329220836	WITHOUT_CLASSIFICATION	2.3867077916356883E-5	IMPLEMENTATION
// Now add all aliases for the static methods (fields) as appropriate	WITHOUT_CLASSIFICATION	0.9999716605893275	WITHOUT_CLASSIFICATION	2.8339410672561323E-5	IMPLEMENTATION
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999652907608316	WITHOUT_CLASSIFICATION	3.4709239168329275E-5	IMPLEMENTATION
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999685574821997	WITHOUT_CLASSIFICATION	3.144251780028773E-5	IMPLEMENTATION
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999245604829577	WITHOUT_CLASSIFICATION	7.543951704233392E-5	IMPLEMENTATION
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999259030905143	WITHOUT_CLASSIFICATION	7.409690948559472E-5	IMPLEMENTATION
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9998977951992176	WITHOUT_CLASSIFICATION	1.022048007824503E-4	IMPLEMENTATION
// Additionally add ?-postfixed aliases to any boolean methods and properties.	WITHOUT_CLASSIFICATION	0.9999704287409664	WITHOUT_CLASSIFICATION	2.957125903354599E-5	IMPLEMENTATION
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999160795023018	WITHOUT_CLASSIFICATION	8.392049769812919E-5	IMPLEMENTATION
// something?	WITHOUT_CLASSIFICATION	0.9999041058129481	WITHOUT_CLASSIFICATION	9.589418705197096E-5	IMPLEMENTATION
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999881538992932	WITHOUT_CLASSIFICATION	1.1846100706694292E-5	IMPLEMENTATION
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999881538992932	WITHOUT_CLASSIFICATION	1.1846100706694292E-5	IMPLEMENTATION
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.999995697354416	WITHOUT_CLASSIFICATION	4.302645584073408E-6	IMPLEMENTATION
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.999995697354416	WITHOUT_CLASSIFICATION	4.302645584073408E-6	IMPLEMENTATION
// create constructorInstaller; if there are no constructors, it will disable construction	WITHOUT_CLASSIFICATION	0.9999973169316436	WITHOUT_CLASSIFICATION	2.6830683563568873E-6	IMPLEMENTATION
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999848489594881	WITHOUT_CLASSIFICATION	1.515104051181478E-5	IMPLEMENTATION
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999625354807586	WITHOUT_CLASSIFICATION	3.746451924143684E-5	IMPLEMENTATION
// now iterate over all installers and make sure they also have appropriate aliases	WITHOUT_CLASSIFICATION	0.9999479803985627	WITHOUT_CLASSIFICATION	5.201960143722257E-5	IMPLEMENTATION
// old (quasi-deprecated) interface class	WITHOUT_CLASSIFICATION	0.9999682122272238	WITHOUT_CLASSIFICATION	3.178777277621906E-5	IMPLEMENTATION
// 1.9 support for encodings	WITHOUT_CLASSIFICATION	0.9996512181492547	WITHOUT_CLASSIFICATION	3.487818507453081E-4	IMPLEMENTATION
// double-check the cache now that we're synchronized	WITHOUT_CLASSIFICATION	0.999982148525923	WITHOUT_CLASSIFICATION	1.785147407696944E-5	IMPLEMENTATION
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999259030905143	WITHOUT_CLASSIFICATION	7.409690948559472E-5	IMPLEMENTATION
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9998977951992176	WITHOUT_CLASSIFICATION	1.022048007824503E-4	IMPLEMENTATION
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999160795023018	WITHOUT_CLASSIFICATION	8.392049769812919E-5	IMPLEMENTATION
// one word type name that starts lower-case...it may be a primitive type	WITHOUT_CLASSIFICATION	0.9999736503756239	WITHOUT_CLASSIFICATION	2.6349624376047692E-5	IMPLEMENTATION
// Java.getProxyClass deals with sync issues, so we won't duplicate the logic here	WITHOUT_CLASSIFICATION	0.9999591742867197	WITHOUT_CLASSIFICATION	4.082571328028402E-5	IMPLEMENTATION
// note: intentionally returning the actual array returned from Java, rather // than wrapping it in a RubyArray. wave of the future, when java_class will // return the actual class, rather than a JavaClass wrapper.	WITHOUT_CLASSIFICATION	0.9999976173886941	WITHOUT_CLASSIFICATION	2.382611305919362E-6	IMPLEMENTATION
// see note above re: return type	WITHOUT_CLASSIFICATION	0.9999344535879868	WITHOUT_CLASSIFICATION	6.554641201318541E-5	IMPLEMENTATION
// restrictive security policy; no matter, we only want public // classes anyway	WITHOUT_CLASSIFICATION	0.9999782362608727	WITHOUT_CLASSIFICATION	2.1763739127316235E-5	IMPLEMENTATION
// very restrictive policy (disallows Member.PUBLIC) // we'd never actually get this far in that case	WITHOUT_CLASSIFICATION	0.9998122225357832	WITHOUT_CLASSIFICATION	1.8777746421678337E-4	IMPLEMENTATION
// one-dimensional array	WITHOUT_CLASSIFICATION	0.9999207323062898	WITHOUT_CLASSIFICATION	7.926769371028962E-5	IMPLEMENTATION
// n-dimensional array	WITHOUT_CLASSIFICATION	0.9999199255601183	WITHOUT_CLASSIFICATION	8.007443988166533E-5	IMPLEMENTATION
// if it's an array of arrays, recurse with the component type	WITHOUT_CLASSIFICATION	0.9999663393837502	WITHOUT_CLASSIFICATION	3.3660616249870936E-5	IMPLEMENTATION
// we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods // see JRUBY-3130	WITHOUT_CLASSIFICATION	0.9999890836209022	WITHOUT_CLASSIFICATION	1.0916379097844213E-5	IMPLEMENTATION
// Proc implementing an interface, pull in the catch-all code that lets the proc get invoked // no matter what method is called on the interface	WITHOUT_CLASSIFICATION	0.9996249913849952	WITHOUT_CLASSIFICATION	3.750086150048044E-4	IMPLEMENTATION
// can't be converted any more, return it	WITHOUT_CLASSIFICATION	0.9999702908561742	WITHOUT_CLASSIFICATION	2.9709143825838507E-5	IMPLEMENTATION
// getFooBar() => fooBar?, foo_bar?(*)	WITHOUT_CLASSIFICATION	0.9999222866314849	WITHOUT_CLASSIFICATION	7.771336851519054E-5	IMPLEMENTATION
// If not a property, but is boolean add ?-postfixed aliases.	WITHOUT_CLASSIFICATION	0.9999691751519766	WITHOUT_CLASSIFICATION	3.0824848023327085E-5	IMPLEMENTATION
// many cases are ok to convert to float; if not one of these, error	WITHOUT_CLASSIFICATION	0.9999559691208725	WITHOUT_CLASSIFICATION	4.4030879127444314E-5	IMPLEMENTATION
// for Object, default to natural wrapper type	WITHOUT_CLASSIFICATION	0.9999810378444876	WITHOUT_CLASSIFICATION	1.8962155512427872E-5	IMPLEMENTATION
// rubyObject is already of the required jruby class (or subclass)	WITHOUT_CLASSIFICATION	0.9999887559808326	WITHOUT_CLASSIFICATION	1.1244019167371103E-5	IMPLEMENTATION
// the converters handle not only primitive types but also their boxed versions, so we should check // if we have a converter before checking for isPrimitive()	WITHOUT_CLASSIFICATION	0.9999864262481655	WITHOUT_CLASSIFICATION	1.3573751834474672E-5	IMPLEMENTATION
// it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999710928203591	WITHOUT_CLASSIFICATION	2.8907179640820668E-5	IMPLEMENTATION
// we've found a Java type to which we've coerced the Ruby value, wrap it	WITHOUT_CLASSIFICATION	0.9999555584565591	WITHOUT_CLASSIFICATION	4.4441543440846424E-5	IMPLEMENTATION
// set of utility methods for Java-based proxy objects	WITHOUT_CLASSIFICATION	0.9999774867398009	WITHOUT_CLASSIFICATION	2.2513260199119368E-5	IMPLEMENTATION
// the proxy (wrapper) type hierarchy	WITHOUT_CLASSIFICATION	0.9999539280664338	WITHOUT_CLASSIFICATION	4.6071933566203726E-5	IMPLEMENTATION
//InterfaceJavaProxy.createInterfaceJavaProxy(context);	WITHOUT_CLASSIFICATION	0.9999435945860853	WITHOUT_CLASSIFICATION	5.640541391464949E-5	IMPLEMENTATION
// also create the JavaProxy* classes	WITHOUT_CLASSIFICATION	0.9999702256402214	WITHOUT_CLASSIFICATION	2.9774359778530772E-5	IMPLEMENTATION
// The template for interface modules	WITHOUT_CLASSIFICATION	0.999985342995304	WITHOUT_CLASSIFICATION	1.4657004696106619E-5	IMPLEMENTATION
// Now attach Java-related extras to core classes	WITHOUT_CLASSIFICATION	0.99995173753336	WITHOUT_CLASSIFICATION	4.826246664013539E-5	IMPLEMENTATION
// add all name-to-class mappings	WITHOUT_CLASSIFICATION	0.9999383179109856	WITHOUT_CLASSIFICATION	6.168208901441197E-5	IMPLEMENTATION
// add some base Java classes everyone will need	WITHOUT_CLASSIFICATION	0.9999709816125075	WITHOUT_CLASSIFICATION	2.90183874924796E-5	IMPLEMENTATION
// finally, set JavaSupport.isEnabled to true	WITHOUT_CLASSIFICATION	0.9999228187068743	WITHOUT_CLASSIFICATION	7.718129312573571E-5	IMPLEMENTATION
// shouldn't happen, but if a superclass is specified, it's not ours	WITHOUT_CLASSIFICATION	0.9999802877837732	WITHOUT_CLASSIFICATION	1.9712216226670338E-5	IMPLEMENTATION
// include any interfaces we extend	WITHOUT_CLASSIFICATION	0.9999608655566419	WITHOUT_CLASSIFICATION	3.9134443358173554E-5	IMPLEMENTATION
// java.lang.Object is added at root of java proxy classes	WITHOUT_CLASSIFICATION	0.9999740466820969	WITHOUT_CLASSIFICATION	2.5953317903174353E-5	IMPLEMENTATION
// other java proxy classes added under their superclass' java proxy	WITHOUT_CLASSIFICATION	0.9999679915594928	WITHOUT_CLASSIFICATION	3.200844050715611E-5	IMPLEMENTATION
// include interface modules into the proxy class	WITHOUT_CLASSIFICATION	0.9999844566613979	WITHOUT_CLASSIFICATION	1.554333860210956E-5	IMPLEMENTATION
// JRUBY-2938 the proxy class might already exist	WITHOUT_CLASSIFICATION	0.9999655381309577	WITHOUT_CLASSIFICATION	3.446186904232443E-5	IMPLEMENTATION
// add java_method for unbound use	WITHOUT_CLASSIFICATION	0.9999552913000258	WITHOUT_CLASSIFICATION	4.470869997415778E-5	IMPLEMENTATION
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999501109762681	WITHOUT_CLASSIFICATION	4.988902373199543E-5	IMPLEMENTATION
// we'll only map conventional class names to modules 	WITHOUT_CLASSIFICATION	0.9999567412039736	WITHOUT_CLASSIFICATION	4.325879602631632E-5	IMPLEMENTATION
/* expected */	WITHOUT_CLASSIFICATION	0.999930460347931	WITHOUT_CLASSIFICATION	6.953965206901303E-5	IMPLEMENTATION
// Haven't found a class, continue on as though it were a package	WITHOUT_CLASSIFICATION	0.99996764472947	WITHOUT_CLASSIFICATION	3.2355270530038154E-5	IMPLEMENTATION
// upper case name, so most likely a class	WITHOUT_CLASSIFICATION	0.9999654001855589	WITHOUT_CLASSIFICATION	3.459981444103254E-5	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999875542857046	WITHOUT_CLASSIFICATION	1.244571429550959E-5	IMPLEMENTATION
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999501109762681	WITHOUT_CLASSIFICATION	4.988902373199543E-5	IMPLEMENTATION
// this is where we'll get connected when classes are opened using // package module syntax.	WITHOUT_CLASSIFICATION	0.9999842014552971	WITHOUT_CLASSIFICATION	1.579854470294893E-5	IMPLEMENTATION
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9999883075409699	WITHOUT_CLASSIFICATION	1.1692459030003618E-5	IMPLEMENTATION
// this covers primitives and (unlikely) lower-case class names	WITHOUT_CLASSIFICATION	0.9999637631590343	WITHOUT_CLASSIFICATION	3.623684096573526E-5	IMPLEMENTATION
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999460441961626	WITHOUT_CLASSIFICATION	5.395580383741531E-5	IMPLEMENTATION
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999460441961626	WITHOUT_CLASSIFICATION	5.395580383741531E-5	IMPLEMENTATION
// Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9999667912182625	WITHOUT_CLASSIFICATION	3.320878173745471E-5	IMPLEMENTATION
// Create list of interfaces to proxy (and make sure they really are interfaces)	WITHOUT_CLASSIFICATION	0.999988426938996	WITHOUT_CLASSIFICATION	1.1573061003927212E-5	IMPLEMENTATION
// hashcode is a combination of the interfaces and the Ruby class we're using // to implement them	WITHOUT_CLASSIFICATION	0.999086663020594	WITHOUT_CLASSIFICATION	9.133369794060209E-4	IMPLEMENTATION
// if it's a singleton class and the real class is proc, we're doing closure conversion // so just use Proc's hashcode	WITHOUT_CLASSIFICATION	0.9999879084572258	WITHOUT_CLASSIFICATION	1.2091542774150938E-5	IMPLEMENTATION
// normal new class implementing interfaces	WITHOUT_CLASSIFICATION	0.999157141636067	WITHOUT_CLASSIFICATION	8.42858363933E-4	IMPLEMENTATION
/*         * Initialize some components.         */	WITHOUT_CLASSIFICATION	0.9999946577460559	WITHOUT_CLASSIFICATION	5.342253944106398E-6	IMPLEMENTATION
// not synchronizing these methods, no harm if these values get set more // than once. // (also note that there's no chance of getting a partially initialized // class/module, as happens-before is guaranteed by volatile write/read // of constants table.)	WITHOUT_CLASSIFICATION	0.9999913370553603	WITHOUT_CLASSIFICATION	8.66294463972582E-6	IMPLEMENTATION
// Java reflection does not allow retrieving constructors like methods	WITHOUT_CLASSIFICATION	0.9999628753714876	WITHOUT_CLASSIFICATION	3.712462851234793E-5	IMPLEMENTATION
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999552648718216	WITHOUT_CLASSIFICATION	4.47351281784108E-5	IMPLEMENTATION
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999552648718216	WITHOUT_CLASSIFICATION	4.47351281784108E-5	IMPLEMENTATION
// no matching ctor found	WITHOUT_CLASSIFICATION	0.9999536819282658	WITHOUT_CLASSIFICATION	4.631807173409131E-5	IMPLEMENTATION
// Create Ruby proxies for any input arguments that are not primitives.	WITHOUT_CLASSIFICATION	0.99994988973822	WITHOUT_CLASSIFICATION	5.011026178006263E-5	IMPLEMENTATION
// prepare a faster handle if handles are enabled and the method and class are public	WITHOUT_CLASSIFICATION	0.9999741939074469	WITHOUT_CLASSIFICATION	2.580609255309057E-5	IMPLEMENTATION
// must be a public method	WITHOUT_CLASSIFICATION	0.999955442813169	WITHOUT_CLASSIFICATION	4.455718683108607E-5	IMPLEMENTATION
// must be a public class	WITHOUT_CLASSIFICATION	0.9999603495316489	WITHOUT_CLASSIFICATION	3.9650468351033826E-5	IMPLEMENTATION
// must have been loaded from our known classloader hierarchy	WITHOUT_CLASSIFICATION	0.9999218684408651	WITHOUT_CLASSIFICATION	7.813155913497057E-5	IMPLEMENTATION
// Special classes like Collections.EMPTY_LIST are inner classes that are private but  // implement public interfaces.  Their methods are all public methods for the public  // interface.  Let these public methods execute via setAccessible(true). 	WITHOUT_CLASSIFICATION	0.9999643016824605	WITHOUT_CLASSIFICATION	3.5698317539423286E-5	IMPLEMENTATION
// search through all declared methods to find a closest match	WITHOUT_CLASSIFICATION	0.9999768959123179	WITHOUT_CLASSIFICATION	2.3104087682178383E-5	IMPLEMENTATION
// no matching method found	WITHOUT_CLASSIFICATION	0.9999565623697483	WITHOUT_CLASSIFICATION	4.343763025178989E-5	IMPLEMENTATION
// this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.9999848631357173	WITHOUT_CLASSIFICATION	1.5136864282791484E-5	IMPLEMENTATION
/*         * First we need to register the JRuby engine.         */	WITHOUT_CLASSIFICATION	0.999984970477964	WITHOUT_CLASSIFICATION	1.5029522036022874E-5	IMPLEMENTATION
/*         * Now we create a new BSFManager.         */	WITHOUT_CLASSIFICATION	0.9999964158839136	WITHOUT_CLASSIFICATION	3.5841160864170073E-6	IMPLEMENTATION
/*         * Initialize a simple Frame.          */	WITHOUT_CLASSIFICATION	0.9999892636800557	WITHOUT_CLASSIFICATION	1.073631994421576E-5	IMPLEMENTATION
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999256163695764	WITHOUT_CLASSIFICATION	7.438363042353955E-5	IMPLEMENTATION
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999256163695764	WITHOUT_CLASSIFICATION	7.438363042353955E-5	IMPLEMENTATION
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.999906580966882	WITHOUT_CLASSIFICATION	9.341903311804224E-5	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.9999617740091016	WITHOUT_CLASSIFICATION	3.8225990898335594E-5	IMPLEMENTATION
// // this test really means, that this is a ruby-defined subclass of a java class //	WITHOUT_CLASSIFICATION	0.9999820199287995	WITHOUT_CLASSIFICATION	1.7980071200519124E-5	IMPLEMENTATION
// for our purposes, Accessibles are also Members, and vice-versa, // so we'll include Member methods here.	WITHOUT_CLASSIFICATION	0.9999682366724228	WITHOUT_CLASSIFICATION	3.1763327577218464E-5	IMPLEMENTATION
/*             * Declare those components as beans in BSF. Then it will be             * possible to access those components in Ruby as global             * variables ($frame, $menubar, ...)             */	WITHOUT_CLASSIFICATION	0.9999970420575005	WITHOUT_CLASSIFICATION	2.9579424994744E-6	IMPLEMENTATION
/*              * Execute a Ruby script (add the menubar to the frame).             */	WITHOUT_CLASSIFICATION	0.9999944937477061	WITHOUT_CLASSIFICATION	5.506252293852301E-6	IMPLEMENTATION
/*                     * Execute Ruby statements.                     */	WITHOUT_CLASSIFICATION	0.9999881305644257	WITHOUT_CLASSIFICATION	1.1869435574323569E-5	IMPLEMENTATION
/*                     * Evaluates a Ruby expression and display the result.                     */	WITHOUT_CLASSIFICATION	0.9999869096390341	WITHOUT_CLASSIFICATION	1.309036096594782E-5	IMPLEMENTATION
// Populate values for the parameter names	WITHOUT_CLASSIFICATION	0.9999868387022212	WITHOUT_CLASSIFICATION	1.3161297778789157E-5	IMPLEMENTATION
/* package scope */	WITHOUT_CLASSIFICATION	0.999897893928552	WITHOUT_CLASSIFICATION	1.0210607144792531E-4	IMPLEMENTATION
// This point is only reached if there was an exception handler // installed.	WITHOUT_CLASSIFICATION	0.9999893967772537	WITHOUT_CLASSIFICATION	1.0603222746202083E-5	IMPLEMENTATION
// // Ruby-level methods //	WITHOUT_CLASSIFICATION	0.9999288395756608	WITHOUT_CLASSIFICATION	7.116042433912864E-5	IMPLEMENTATION
// need names ordered for key generation later	WITHOUT_CLASSIFICATION	0.9999636603740398	WITHOUT_CLASSIFICATION	3.633962596007945E-5	IMPLEMENTATION
// we only collect methods and interfaces for  // user-defined proxy classes.	WITHOUT_CLASSIFICATION	0.9999937860746776	WITHOUT_CLASSIFICATION	6.2139253223211035E-6	IMPLEMENTATION
// get JavaClass if this is the new proxy class; verify it // matches if this is a superclass proxy.	WITHOUT_CLASSIFICATION	0.9999965872004869	WITHOUT_CLASSIFICATION	3.4127995130894844E-6	IMPLEMENTATION
// get any included interfaces	WITHOUT_CLASSIFICATION	0.9999749748944545	WITHOUT_CLASSIFICATION	2.5025105545433255E-5	IMPLEMENTATION
// lock in the overridden methods for the new class, and any as-yet // uninstantiated ancestor class.	WITHOUT_CLASSIFICATION	0.9999926899061529	WITHOUT_CLASSIFICATION	7.310093847057637E-6	IMPLEMENTATION
// statically initialized below	WITHOUT_CLASSIFICATION	0.9999664281417688	WITHOUT_CLASSIFICATION	3.357185823112802E-5	IMPLEMENTATION
// finish class initializer	WITHOUT_CLASSIFICATION	0.9999592433640911	WITHOUT_CLASSIFICATION	4.075663590887508E-5	IMPLEMENTATION
// trigger class initialization for the class	WITHOUT_CLASSIFICATION	0.9999890501365822	WITHOUT_CLASSIFICATION	1.0949863417839237E-5	IMPLEMENTATION
// should not happen!	WITHOUT_CLASSIFICATION	0.9999763535305274	WITHOUT_CLASSIFICATION	2.3646469472633055E-5	IMPLEMENTATION
// start class	WITHOUT_CLASSIFICATION	0.9999528831231731	WITHOUT_CLASSIFICATION	4.7116876826949603E-5	IMPLEMENTATION
// make getter for handler	WITHOUT_CLASSIFICATION	0.9999050827363681	WITHOUT_CLASSIFICATION	9.491726363187382E-5	IMPLEMENTATION
// make getter for proxy class	WITHOUT_CLASSIFICATION	0.9999513640134551	WITHOUT_CLASSIFICATION	4.86359865449001E-5	IMPLEMENTATION
// add (potentially) overridden names to the key. // TODO: see note above re: optimizations	WITHOUT_CLASSIFICATION	0.9845483457600522	WITHOUT_CLASSIFICATION	0.015451654239947744	IMPLEMENTATION
// We generate all constructors and let some fail during invocation later	WITHOUT_CLASSIFICATION	0.9999608637325048	WITHOUT_CLASSIFICATION	3.91362674952348E-5	IMPLEMENTATION
// create static private method field	WITHOUT_CLASSIFICATION	0.9999914492359893	WITHOUT_CLASSIFICATION	8.5507640107329E-6	IMPLEMENTATION
// load static empty array	WITHOUT_CLASSIFICATION	0.9999577055861935	WITHOUT_CLASSIFICATION	4.229441380653253E-5	IMPLEMENTATION
// box arguments	WITHOUT_CLASSIFICATION	0.9999238424612861	WITHOUT_CLASSIFICATION	7.615753871388362E-5	IMPLEMENTATION
// this is a simple rethrow handler	WITHOUT_CLASSIFICATION	0.9999549677237118	WITHOUT_CLASSIFICATION	4.5032276288216235E-5	IMPLEMENTATION
// // construct the super-proxy method //	WITHOUT_CLASSIFICATION	0.9999670970417349	WITHOUT_CLASSIFICATION	3.290295826511461E-5	IMPLEMENTATION
// do a void return	WITHOUT_CLASSIFICATION	0.9999385289970087	WITHOUT_CLASSIFICATION	6.147100299126267E-5	IMPLEMENTATION
// // utility methods //	WITHOUT_CLASSIFICATION	0.9999320105057654	WITHOUT_CLASSIFICATION	6.798949423459198E-5	IMPLEMENTATION
// Is there a supplied proc argument or do we assume a block was // supplied	WITHOUT_CLASSIFICATION	0.9999689477729855	WITHOUT_CLASSIFICATION	3.105222701446523E-5	IMPLEMENTATION
// store call information so method_missing impl can use it	WITHOUT_CLASSIFICATION	0.999960884836245	WITHOUT_CLASSIFICATION	3.9115163755043184E-5	IMPLEMENTATION
// use the same logic as in EvaluationState	WITHOUT_CLASSIFICATION	0.9999442359758582	WITHOUT_CLASSIFICATION	5.576402414183318E-5	IMPLEMENTATION
// no opt, no rest, exact match	WITHOUT_CLASSIFICATION	0.9999397172914612	WITHOUT_CLASSIFICATION	6.028270853868781E-5	IMPLEMENTATION
// only rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999566620370157	WITHOUT_CLASSIFICATION	4.333796298419381E-5	IMPLEMENTATION
// opt but no rest, must be at least required and no more than required + opt	WITHOUT_CLASSIFICATION	0.9999425192220056	WITHOUT_CLASSIFICATION	5.748077799431616E-5	IMPLEMENTATION
// opt and rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999404766377353	WITHOUT_CLASSIFICATION	5.952336226477753E-5	IMPLEMENTATION
// No block from a nil proc	WITHOUT_CLASSIFICATION	0.9999275004623227	WITHOUT_CLASSIFICATION	7.249953767735723E-5	IMPLEMENTATION
// If not already a proc then we should try and make it one.	WITHOUT_CLASSIFICATION	0.9999325169184368	WITHOUT_CLASSIFICATION	6.748308156332423E-5	IMPLEMENTATION
// The current block is already associated with proc.  No need to create a new one	WITHOUT_CLASSIFICATION	0.9999967702918918	WITHOUT_CLASSIFICATION	3.2297081082216837E-6	IMPLEMENTATION
// Has the method that is calling super received a block argument	WITHOUT_CLASSIFICATION	0.9999607261987652	WITHOUT_CLASSIFICATION	3.927380123477883E-5	IMPLEMENTATION
/* NUL */	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999438391499813	WITHOUT_CLASSIFICATION	5.616085001873667E-5	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999326986605658	WITHOUT_CLASSIFICATION	6.730133943423197E-5	IMPLEMENTATION
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999214478939898	WITHOUT_CLASSIFICATION	7.855210601014855E-5	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9998845010300316	WITHOUT_CLASSIFICATION	1.1549896996843008E-4	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.999891906560817	WITHOUT_CLASSIFICATION	1.0809343918316703E-4	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.999891906560817	WITHOUT_CLASSIFICATION	1.0809343918316703E-4	IMPLEMENTATION
// classes are directly in the hierarchy, so no special logic is necessary for implementer	WITHOUT_CLASSIFICATION	0.9984051688468228	WITHOUT_CLASSIFICATION	0.0015948311531771141	IMPLEMENTATION
// must be power of 2 // must be power of 2	WITHOUT_CLASSIFICATION	0.9999316597365271	WITHOUT_CLASSIFICATION	6.83402634729463E-5	IMPLEMENTATION
// Find power-of-two sizes best matching arguments	WITHOUT_CLASSIFICATION	0.9999628254489702	WITHOUT_CLASSIFICATION	3.717455102981827E-5	IMPLEMENTATION
// note segmentShift differs from ConcurrentHashMap's calculation due to // issues with System.identityHashCode (upper n bits always 0, at least  // under Java 1.6 / WinXP)	WITHOUT_CLASSIFICATION	0.9999824739050571	WITHOUT_CLASSIFICATION	1.7526094942927213E-5	IMPLEMENTATION
//      System.err.println("***ObjectProxyCache " + id + " started at "+ new java.util.Date());	WITHOUT_CLASSIFICATION	0.9999724820649675	WITHOUT_CLASSIFICATION	2.751793503255725E-5	IMPLEMENTATION
//    protected void finalize() throws Throwable { //        System.err.println("***ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); //    }	WITHOUT_CLASSIFICATION	0.9999855836513124	WITHOUT_CLASSIFICATION	1.4416348687673996E-5	IMPLEMENTATION
// EntryRefs include hash with key to facilitate lookup by Segment#expunge // after ref is removed from ReferenceQueue	WITHOUT_CLASSIFICATION	0.9998314752569617	WITHOUT_CLASSIFICATION	1.6852474303831583E-4	IMPLEMENTATION
// Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather // makes it a final field.  The theory is that doing so should force a happens-before // relationship WRT the WeakReference constructor, guaranteeing that the key will be // visibile to other threads (unless it's been GC'ed).  See JLS 17.5 (final fields) and // 17.4.5 (Happens-before order) to confirm or refute my reasoning here.	WITHOUT_CLASSIFICATION	0.9999964238918311	WITHOUT_CLASSIFICATION	3.576108169037947E-6	IMPLEMENTATION
// references to the Java object and its proxy will either both be // weak or both be soft, since the proxy contains a strong reference // to the object, so it wouldn't make sense for the reference types // to differ.	WITHOUT_CLASSIFICATION	0.9999973086514232	WITHOUT_CLASSIFICATION	2.69134857685539E-6	IMPLEMENTATION
// ctor used by remove/rehash	WITHOUT_CLASSIFICATION	0.9999273750903388	WITHOUT_CLASSIFICATION	7.262490966122044E-5	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999568573187103	WITHOUT_CLASSIFICATION	4.314268128960109E-5	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999568573187103	WITHOUT_CLASSIFICATION	4.314268128960109E-5	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999568573187103	WITHOUT_CLASSIFICATION	4.314268128960109E-5	IMPLEMENTATION
// note that we'll potentially see the refs for both the java object and // proxy -- whichever we see first will cause the entry to be removed; // the other will not match an entry and will be ignored.	WITHOUT_CLASSIFICATION	0.9999951218194884	WITHOUT_CLASSIFICATION	4.878180511604302E-6	IMPLEMENTATION
// temp method to verify tableSize value // must be called under lock	WITHOUT_CLASSIFICATION	0.9999869381210552	WITHOUT_CLASSIFICATION	1.3061878944796015E-5	IMPLEMENTATION
// Single node in list	WITHOUT_CLASSIFICATION	0.9999131326553139	WITHOUT_CLASSIFICATION	8.686734468605552E-5	IMPLEMENTATION
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999082580689196	WITHOUT_CLASSIFICATION	9.174193108044629E-5	IMPLEMENTATION
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999082580689196	WITHOUT_CLASSIFICATION	9.174193108044629E-5	IMPLEMENTATION
// entry exists, proxy has been gc'ed. replace entry.	WITHOUT_CLASSIFICATION	0.9999264010385649	WITHOUT_CLASSIFICATION	7.359896143509333E-5	IMPLEMENTATION
// Where we get new positions from.	WITHOUT_CLASSIFICATION	0.9999474610752909	WITHOUT_CLASSIFICATION	5.2538924709080484E-5	IMPLEMENTATION
// Start of string ([, (, {, <, ', ", \n) 	WITHOUT_CLASSIFICATION	0.9999666316272876	WITHOUT_CLASSIFICATION	3.33683727124484E-5	IMPLEMENTATION
// Number of newlines read from the reader	WITHOUT_CLASSIFICATION	0.9999730839585795	WITHOUT_CLASSIFICATION	2.69160414204483E-5	IMPLEMENTATION
// How many bytes into the source are we?	WITHOUT_CLASSIFICATION	0.9999633219202473	WITHOUT_CLASSIFICATION	3.667807975279731E-5	IMPLEMENTATION
// For 'list' and only populated if list is not null.	WITHOUT_CLASSIFICATION	0.9999574907565147	WITHOUT_CLASSIFICATION	4.2509243485198206E-5	IMPLEMENTATION
// Last full line read.	WITHOUT_CLASSIFICATION	0.9999062281833097	WITHOUT_CLASSIFICATION	9.377181669033262E-5	IMPLEMENTATION
// Save sourceLine for error reporting to display line where error occurred	WITHOUT_CLASSIFICATION	0.9999663506220797	WITHOUT_CLASSIFICATION	3.3649377920304896E-5	IMPLEMENTATION
// Get rest of line. lineBuffer filled as side-effect...	WITHOUT_CLASSIFICATION	0.9999364094987403	WITHOUT_CLASSIFICATION	6.359050125973112E-5	IMPLEMENTATION
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999305013945339	WITHOUT_CLASSIFICATION	6.949860546619502E-5	IMPLEMENTATION
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999305013945339	WITHOUT_CLASSIFICATION	6.949860546619502E-5	IMPLEMENTATION
// End of string (], ), }, >, ', ", \0)	WITHOUT_CLASSIFICATION	0.9999434318079292	WITHOUT_CLASSIFICATION	5.656819207072322E-5	IMPLEMENTATION
// How many strings are nested in the current string term	WITHOUT_CLASSIFICATION	0.9999913436779814	WITHOUT_CLASSIFICATION	8.656322018618657E-6	IMPLEMENTATION
// Single-quote fast path	WITHOUT_CLASSIFICATION	0.9999055906789681	WITHOUT_CLASSIFICATION	9.440932103188868E-5	IMPLEMENTATION
// Regexp engine 'java'	WITHOUT_CLASSIFICATION	0.9999027973117047	WITHOUT_CLASSIFICATION	9.720268829527799E-5	IMPLEMENTATION
// Was a goto in original ruby lexer	WITHOUT_CLASSIFICATION	0.9999309405640434	WITHOUT_CLASSIFICATION	6.9059435956618E-5	IMPLEMENTATION
/* just ignore */	WITHOUT_CLASSIFICATION	0.9999453225834168	WITHOUT_CLASSIFICATION	5.467741658302489E-5	IMPLEMENTATION
/* octal constant */	WITHOUT_CLASSIFICATION	0.999893621253648	WITHOUT_CLASSIFICATION	1.0637874635194622E-4	IMPLEMENTATION
/* hex constant */	WITHOUT_CLASSIFICATION	0.999893375732851	WITHOUT_CLASSIFICATION	1.0662426714903255E-4	IMPLEMENTATION
// PUSH(1)	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
// POP	WITHOUT_CLASSIFICATION	0.9960686351281243	WITHOUT_CLASSIFICATION	0.003931364871875682	IMPLEMENTATION
// PUSH(0).  If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.	WITHOUT_CLASSIFICATION	0.9998883630307683	WITHOUT_CLASSIFICATION	1.1163696923161287E-4	IMPLEMENTATION
// LEXPOP	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
// SET_P	WITHOUT_CLASSIFICATION	0.9960585938543002	WITHOUT_CLASSIFICATION	0.0039414061456997836	IMPLEMENTATION
// Marker delimiting heredoc boundary	WITHOUT_CLASSIFICATION	0.9999071165849588	WITHOUT_CLASSIFICATION	9.288341504121606E-5	IMPLEMENTATION
// Found end marker for this heredoc	WITHOUT_CLASSIFICATION	0.9999371362462897	WITHOUT_CLASSIFICATION	6.286375371036778E-5	IMPLEMENTATION
// Put back lastLine for any elements past start of heredoc marker	WITHOUT_CLASSIFICATION	0.9999696169689963	WITHOUT_CLASSIFICATION	3.03830310037481E-5	IMPLEMENTATION
// Last token read via yylex().	WITHOUT_CLASSIFICATION	0.9999119685664186	WITHOUT_CLASSIFICATION	8.803143358130856E-5	IMPLEMENTATION
// Value of last token which had a value associated with it.	WITHOUT_CLASSIFICATION	0.9999789884239513	WITHOUT_CLASSIFICATION	2.1011576048736712E-5	IMPLEMENTATION
// Stream of data that yylex() examines.	WITHOUT_CLASSIFICATION	0.9999280636920382	WITHOUT_CLASSIFICATION	7.19363079617516E-5	IMPLEMENTATION
// Used for tiny smidgen of grammar in lexer (see setParserSupport())	WITHOUT_CLASSIFICATION	0.999945541928736	WITHOUT_CLASSIFICATION	5.4458071263990185E-5	IMPLEMENTATION
// Give a name to a value.  Enebo: This should be used more.	WITHOUT_CLASSIFICATION	0.9999228955031653	WITHOUT_CLASSIFICATION	7.710449683471908E-5	IMPLEMENTATION
// When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').	WITHOUT_CLASSIFICATION	0.9999569795080577	WITHOUT_CLASSIFICATION	4.302049194228396E-5	IMPLEMENTATION
// Are we lexing Ruby 1.8 or 1.9+ syntax	WITHOUT_CLASSIFICATION	0.9999097257401873	WITHOUT_CLASSIFICATION	9.02742598126864E-5	IMPLEMENTATION
// Count of nested parentheses (1.9 only)	WITHOUT_CLASSIFICATION	0.9999065558087139	WITHOUT_CLASSIFICATION	9.344419128612676E-5	IMPLEMENTATION
// 1.9 only	WITHOUT_CLASSIFICATION	0.9998766846217828	WITHOUT_CLASSIFICATION	1.2331537821723534E-4	IMPLEMENTATION
// Short-hand (e.g. %{,%.,%!,... versus %Q{).	WITHOUT_CLASSIFICATION	0.9999055819312475	WITHOUT_CLASSIFICATION	9.441806875249713E-5	IMPLEMENTATION
// Long-hand (e.g. %Q{}).	WITHOUT_CLASSIFICATION	0.9998984513896921	WITHOUT_CLASSIFICATION	1.0154861030777849E-4	IMPLEMENTATION
/* no mb || ismbchar(term)*/	WITHOUT_CLASSIFICATION	0.9998965270008536	WITHOUT_CLASSIFICATION	1.0347299914635588E-4	IMPLEMENTATION
/*     * Not normally used, but is left in here since it can be useful in debugging     * grammar and lexing problems.     *     */	WITHOUT_CLASSIFICATION	0.9999602207953766	WITHOUT_CLASSIFICATION	3.977920462341957E-5	IMPLEMENTATION
// DEBUGGING HELP 	WITHOUT_CLASSIFICATION	0.9998767151365038	WITHOUT_CLASSIFICATION	1.2328486349612381E-4	IMPLEMENTATION
/* '\v' */	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
/* end of script. */	WITHOUT_CLASSIFICATION	0.9999125252936235	WITHOUT_CLASSIFICATION	8.747470637650424E-5	IMPLEMENTATION
/* white spaces */	WITHOUT_CLASSIFICATION	0.9998994245535716	WITHOUT_CLASSIFICATION	1.0057544642841926E-4	IMPLEMENTATION
/* '\v' */	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
/* it's a comment */	WITHOUT_CLASSIFICATION	0.999907611264037	WITHOUT_CLASSIFICATION	9.238873596295178E-5	IMPLEMENTATION
// Replace a string of newlines with a single one	WITHOUT_CLASSIFICATION	0.9999559379331255	WITHOUT_CLASSIFICATION	4.406206687455372E-5	IMPLEMENTATION
/* $\: output record separator */	WITHOUT_CLASSIFICATION	0.9999459671683737	WITHOUT_CLASSIFICATION	5.403283162633484E-5	IMPLEMENTATION
// EOF (ENEBO: After default?	WITHOUT_CLASSIFICATION	0.9999457306627098	WITHOUT_CLASSIFICATION	5.426933729031756E-5	IMPLEMENTATION
// documentation nodes	WITHOUT_CLASSIFICATION	0.9999381869361066	WITHOUT_CLASSIFICATION	6.181306389340343E-5	IMPLEMENTATION
// In case last next was the newline.	WITHOUT_CLASSIFICATION	0.999957326494866	WITHOUT_CLASSIFICATION	4.267350513413033E-5	IMPLEMENTATION
// Just a plain bang	WITHOUT_CLASSIFICATION	0.9999018747511074	WITHOUT_CLASSIFICATION	9.812524889255613E-5	IMPLEMENTATION
/* $_: last read line string */	WITHOUT_CLASSIFICATION	0.9999495413148134	WITHOUT_CLASSIFICATION	5.04586851865917E-5	IMPLEMENTATION
/* $~: match-data */	WITHOUT_CLASSIFICATION	0.9998925962830068	WITHOUT_CLASSIFICATION	1.0740371699325344E-4	IMPLEMENTATION
/* $*: argv */	WITHOUT_CLASSIFICATION	0.9998766846217828	WITHOUT_CLASSIFICATION	1.2331537821723534E-4	IMPLEMENTATION
/* $$: pid */	WITHOUT_CLASSIFICATION	0.9998766846217828	WITHOUT_CLASSIFICATION	1.2331537821723534E-4	IMPLEMENTATION
/* $?: last status */	WITHOUT_CLASSIFICATION	0.9999061327573789	WITHOUT_CLASSIFICATION	9.386724262109146E-5	IMPLEMENTATION
/* $!: error string */	WITHOUT_CLASSIFICATION	0.9999366962762147	WITHOUT_CLASSIFICATION	6.330372378534321E-5	IMPLEMENTATION
/* $@: error position */	WITHOUT_CLASSIFICATION	0.9999413630003976	WITHOUT_CLASSIFICATION	5.863699960235832E-5	IMPLEMENTATION
/* $/: input record separator */	WITHOUT_CLASSIFICATION	0.9999421233798458	WITHOUT_CLASSIFICATION	5.7876620154299156E-5	IMPLEMENTATION
/* $;: field separator */	WITHOUT_CLASSIFICATION	0.9999432744190723	WITHOUT_CLASSIFICATION	5.672558092786717E-5	IMPLEMENTATION
/* $,: output field separator */	WITHOUT_CLASSIFICATION	0.9999551450996546	WITHOUT_CLASSIFICATION	4.48549003454945E-5	IMPLEMENTATION
/* $.: last read line number */	WITHOUT_CLASSIFICATION	0.9999367085734725	WITHOUT_CLASSIFICATION	6.329142652753264E-5	IMPLEMENTATION
/* $=: ignorecase */	WITHOUT_CLASSIFICATION	0.9999365594182597	WITHOUT_CLASSIFICATION	6.344058174033328E-5	IMPLEMENTATION
/* $:: load path */	WITHOUT_CLASSIFICATION	0.9998856383556114	WITHOUT_CLASSIFICATION	1.1436164438864335E-4	IMPLEMENTATION
/* $<: reading filename */	WITHOUT_CLASSIFICATION	0.9999249856533334	WITHOUT_CLASSIFICATION	7.501434666653156E-5	IMPLEMENTATION
/* $": already loaded files */	WITHOUT_CLASSIFICATION	0.9999462723296377	WITHOUT_CLASSIFICATION	5.372767036228567E-5	IMPLEMENTATION
/* $&: last match */	WITHOUT_CLASSIFICATION	0.9999018956828565	WITHOUT_CLASSIFICATION	9.810431714346453E-5	IMPLEMENTATION
/* $`: string before last match */	WITHOUT_CLASSIFICATION	0.9999579830356187	WITHOUT_CLASSIFICATION	4.201696438133927E-5	IMPLEMENTATION
/* $': string after last match */	WITHOUT_CLASSIFICATION	0.9999540154124938	WITHOUT_CLASSIFICATION	4.59845875061009E-5	IMPLEMENTATION
// methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop	WITHOUT_CLASSIFICATION	0.9999516505805852	WITHOUT_CLASSIFICATION	4.8349419414675544E-5	IMPLEMENTATION
/* See if it is a reserved word.  */	WITHOUT_CLASSIFICATION	0.9999443100336015	WITHOUT_CLASSIFICATION	5.5689966398346955E-5	IMPLEMENTATION
// enum lex_state	WITHOUT_CLASSIFICATION	0.9998777602747363	WITHOUT_CLASSIFICATION	1.2223972526374143E-4	IMPLEMENTATION
// block (primary)	WITHOUT_CLASSIFICATION	0.9998787184627544	WITHOUT_CLASSIFICATION	1.2128153724555941E-4	IMPLEMENTATION
// block (expr)	WITHOUT_CLASSIFICATION	0.99987698743493	WITHOUT_CLASSIFICATION	1.2301256506986168E-4	IMPLEMENTATION
// hash	WITHOUT_CLASSIFICATION	0.9961635969928535	WITHOUT_CLASSIFICATION	0.0038364030071465207	IMPLEMENTATION
// ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.	WITHOUT_CLASSIFICATION	0.9996560146699729	WITHOUT_CLASSIFICATION	3.439853300271278E-4	IMPLEMENTATION
// FIXME: peek('u') utf8 stuff for 1.9	WITHOUT_CLASSIFICATION	0.9995988026104978	WITHOUT_CLASSIFICATION	4.0119738950215015E-4	IMPLEMENTATION
// We don't append '+' since Java number parser gets confused	WITHOUT_CLASSIFICATION	0.9999718951029807	WITHOUT_CLASSIFICATION	2.8104897019286907E-5	IMPLEMENTATION
//  hexadecimal	WITHOUT_CLASSIFICATION	0.9998782897491113	WITHOUT_CLASSIFICATION	1.2171025088861194E-4	IMPLEMENTATION
// binary	WITHOUT_CLASSIFICATION	0.9964464667353267	WITHOUT_CLASSIFICATION	0.003553533264673392	IMPLEMENTATION
// decimal	WITHOUT_CLASSIFICATION	0.9962372172441528	WITHOUT_CLASSIFICATION	0.0037627827558471424	IMPLEMENTATION
//Octal	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
//  '_' in number just ignored	WITHOUT_CLASSIFICATION	0.9999843304841899	WITHOUT_CLASSIFICATION	1.5669515810102918E-5	IMPLEMENTATION
// backslash	WITHOUT_CLASSIFICATION	0.999891412991797	WITHOUT_CLASSIFICATION	1.0858700820315824E-4	IMPLEMENTATION
// newline	WITHOUT_CLASSIFICATION	0.9968255690066551	WITHOUT_CLASSIFICATION	0.0031744309933448523	IMPLEMENTATION
// horizontal tab	WITHOUT_CLASSIFICATION	0.9999322436705615	WITHOUT_CLASSIFICATION	6.775632943847065E-5	IMPLEMENTATION
// form feed	WITHOUT_CLASSIFICATION	0.9998991745610992	WITHOUT_CLASSIFICATION	1.0082543890074642E-4	IMPLEMENTATION
// vertical tab	WITHOUT_CLASSIFICATION	0.9999239677701705	WITHOUT_CLASSIFICATION	7.60322298295314E-5	IMPLEMENTATION
// alarm(bell)	WITHOUT_CLASSIFICATION	0.9998766846217828	WITHOUT_CLASSIFICATION	1.2331537821723534E-4	IMPLEMENTATION
// escape	WITHOUT_CLASSIFICATION	0.996153861124155	WITHOUT_CLASSIFICATION	0.003846138875845029	IMPLEMENTATION
// hex constant	WITHOUT_CLASSIFICATION	0.9998941023159257	WITHOUT_CLASSIFICATION	1.058976840742831E-4	IMPLEMENTATION
//char hexValue = scanHex(2);	WITHOUT_CLASSIFICATION	0.999899068524711	WITHOUT_CLASSIFICATION	1.0093147528898112E-4	IMPLEMENTATION
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999216723421891	WITHOUT_CLASSIFICATION	7.832765781088889E-5	IMPLEMENTATION
// space	WITHOUT_CLASSIFICATION	0.9963366217989243	WITHOUT_CLASSIFICATION	0.0036633782010756315	IMPLEMENTATION
// Where we started this marker match	WITHOUT_CLASSIFICATION	0.9999135757716481	WITHOUT_CLASSIFICATION	8.642422835187823E-5	IMPLEMENTATION
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999982853144741	WITHOUT_CLASSIFICATION	1.7146855259851452E-6	IMPLEMENTATION
// We use offset here to keep track of extra newlines for windows	WITHOUT_CLASSIFICATION	0.9999368999053101	WITHOUT_CLASSIFICATION	6.310009468979828E-5	IMPLEMENTATION
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999216723421891	WITHOUT_CLASSIFICATION	7.832765781088889E-5	IMPLEMENTATION
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9997099647846007	WITHOUT_CLASSIFICATION	2.9003521539927525E-4	IMPLEMENTATION
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9997099647846007	WITHOUT_CLASSIFICATION	2.9003521539927525E-4	IMPLEMENTATION
// Where we get our newest char's	WITHOUT_CLASSIFICATION	0.9999170087705989	WITHOUT_CLASSIFICATION	8.29912294011833E-5	IMPLEMENTATION
// Our readback/pushback buffer.	WITHOUT_CLASSIFICATION	0.9999054004288659	WITHOUT_CLASSIFICATION	9.459957113412484E-5	IMPLEMENTATION
// index of last character in pushback buffer	WITHOUT_CLASSIFICATION	0.9999503798948638	WITHOUT_CLASSIFICATION	4.9620105136125476E-5	IMPLEMENTATION
// Character read before previous read	WITHOUT_CLASSIFICATION	0.9999596222708618	WITHOUT_CLASSIFICATION	4.037772913820221E-5	IMPLEMENTATION
// keep value of twoAgo around so we can restore after we unread	WITHOUT_CLASSIFICATION	0.999965453538692	WITHOUT_CLASSIFICATION	3.454646130786459E-5	IMPLEMENTATION
// NetProtocolBufferedIOLibrary	WITHOUT_CLASSIFICATION	0.9999103500025878	WITHOUT_CLASSIFICATION	8.964999741224692E-5	IMPLEMENTATION
// BigDecimalLibrary	WITHOUT_CLASSIFICATION	0.9998786576543609	WITHOUT_CLASSIFICATION	1.2134234563914573E-4	IMPLEMENTATION
// TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. // We did it here for now	WITHOUT_CLASSIFICATION	0.9183488932747967	WITHOUT_CLASSIFICATION	0.08165110672520325	IMPLEMENTATION
// Ruby's designation for some platforms, minus version numbers in some cases	WITHOUT_CLASSIFICATION	0.9999545681624632	WITHOUT_CLASSIFICATION	4.543183753675486E-5	IMPLEMENTATION
// that's what JDK5 produces on Windows Vista	WITHOUT_CLASSIFICATION	0.9999060663987848	WITHOUT_CLASSIFICATION	9.393360121514407E-5	IMPLEMENTATION
// Rubygems is too specific on host cpu so until we have real need lets default to universal //setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));	WITHOUT_CLASSIFICATION	0.9999866048109204	WITHOUT_CLASSIFICATION	1.3395189079557473E-5	IMPLEMENTATION
// Our shell scripts pass in non-canonicalized paths, but even if we didn't // anyone who did would become unhappy because Ruby apps expect no relative // operators in the pathname (rubygems, for example).	WITHOUT_CLASSIFICATION	0.9999860259402007	WITHOUT_CLASSIFICATION	1.3974059799298196E-5	IMPLEMENTATION
// this set is only for darwin	WITHOUT_CLASSIFICATION	0.9999462528253776	WITHOUT_CLASSIFICATION	5.374717462226156E-5	IMPLEMENTATION
// DigestLibrary	WITHOUT_CLASSIFICATION	0.9998776634531367	WITHOUT_CLASSIFICATION	1.2233654686332848E-4	IMPLEMENTATION
// all errors, just info; do not prevent loading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9998872147465314	WITHOUT_CLASSIFICATION	1.1278525346866163E-4	IMPLEMENTATION
// all errors, just info; do not prevent unloading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9999249247064925	WITHOUT_CLASSIFICATION	7.507529350749592E-5	IMPLEMENTATION
// do nothing, return dummy version below	WITHOUT_CLASSIFICATION	0.9999909648336083	WITHOUT_CLASSIFICATION	9.035166391769152E-6	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9998766846217828	WITHOUT_CLASSIFICATION	1.2331537821723534E-4	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9998766846217828	WITHOUT_CLASSIFICATION	1.2331537821723534E-4	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9998766846217828	WITHOUT_CLASSIFICATION	1.2331537821723534E-4	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9998766846217828	WITHOUT_CLASSIFICATION	1.2331537821723534E-4	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9998766846217828	WITHOUT_CLASSIFICATION	1.2331537821723534E-4	IMPLEMENTATION
// line 329	WITHOUT_CLASSIFICATION	0.9999109546671153	WITHOUT_CLASSIFICATION	8.904533288467563E-5	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999625497770552	WITHOUT_CLASSIFICATION	3.745022294470053E-5	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9998756799413627	WITHOUT_CLASSIFICATION	1.2432005863727548E-4	IMPLEMENTATION
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999206859228638	WITHOUT_CLASSIFICATION	7.931407713629467E-5	IMPLEMENTATION
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9999740646650844	WITHOUT_CLASSIFICATION	2.593533491549684E-5	IMPLEMENTATION
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999363581493845	WITHOUT_CLASSIFICATION	6.364185061547756E-5	IMPLEMENTATION
// shift to yyN	WITHOUT_CLASSIFICATION	0.9998790620299907	WITHOUT_CLASSIFICATION	1.2093797000929986E-4	IMPLEMENTATION
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9998794482603239	WITHOUT_CLASSIFICATION	1.2055173967610044E-4	IMPLEMENTATION
// leave stack alone	WITHOUT_CLASSIFICATION	0.9998931262455621	WITHOUT_CLASSIFICATION	1.0687375443780645E-4	IMPLEMENTATION
// line 271	WITHOUT_CLASSIFICATION	0.999911487289758	WITHOUT_CLASSIFICATION	8.851271024199951E-5	IMPLEMENTATION
// line 274	WITHOUT_CLASSIFICATION	0.999911487289758	WITHOUT_CLASSIFICATION	8.851271024199951E-5	IMPLEMENTATION
// line 303	WITHOUT_CLASSIFICATION	0.9999109546671153	WITHOUT_CLASSIFICATION	8.904533288467563E-5	IMPLEMENTATION
// line 311	WITHOUT_CLASSIFICATION	0.9999109916420345	WITHOUT_CLASSIFICATION	8.900835796550581E-5	IMPLEMENTATION
// line 314	WITHOUT_CLASSIFICATION	0.9999109916420345	WITHOUT_CLASSIFICATION	8.900835796550581E-5	IMPLEMENTATION
// line 317	WITHOUT_CLASSIFICATION	0.999911040918047	WITHOUT_CLASSIFICATION	8.895908195304991E-5	IMPLEMENTATION
// line 332	WITHOUT_CLASSIFICATION	0.9999109546671153	WITHOUT_CLASSIFICATION	8.904533288467563E-5	IMPLEMENTATION
// line 338	WITHOUT_CLASSIFICATION	0.9999109546671153	WITHOUT_CLASSIFICATION	8.904533288467563E-5	IMPLEMENTATION
// line 341	WITHOUT_CLASSIFICATION	0.9999109546671153	WITHOUT_CLASSIFICATION	8.904533288467563E-5	IMPLEMENTATION
// line 344	WITHOUT_CLASSIFICATION	0.9999109546671153	WITHOUT_CLASSIFICATION	8.904533288467563E-5	IMPLEMENTATION
// line 351	WITHOUT_CLASSIFICATION	0.9999109546671153	WITHOUT_CLASSIFICATION	8.904533288467563E-5	IMPLEMENTATION
// line 358	WITHOUT_CLASSIFICATION	0.9999109546671153	WITHOUT_CLASSIFICATION	8.904533288467563E-5	IMPLEMENTATION
// line 367	WITHOUT_CLASSIFICATION	0.9999109546671153	WITHOUT_CLASSIFICATION	8.904533288467563E-5	IMPLEMENTATION
// line 372	WITHOUT_CLASSIFICATION	0.9999109546671153	WITHOUT_CLASSIFICATION	8.904533288467563E-5	IMPLEMENTATION
// line 378	WITHOUT_CLASSIFICATION	0.9999109546671153	WITHOUT_CLASSIFICATION	8.904533288467563E-5	IMPLEMENTATION
// line 382	WITHOUT_CLASSIFICATION	0.9999109546671153	WITHOUT_CLASSIFICATION	8.904533288467563E-5	IMPLEMENTATION
// line 407	WITHOUT_CLASSIFICATION	0.9999109300086373	WITHOUT_CLASSIFICATION	8.906999136276226E-5	IMPLEMENTATION
// line 411	WITHOUT_CLASSIFICATION	0.9999109300086373	WITHOUT_CLASSIFICATION	8.906999136276226E-5	IMPLEMENTATION
// line 414	WITHOUT_CLASSIFICATION	0.9999109300086373	WITHOUT_CLASSIFICATION	8.906999136276226E-5	IMPLEMENTATION
// line 417	WITHOUT_CLASSIFICATION	0.9999109300086373	WITHOUT_CLASSIFICATION	8.906999136276226E-5	IMPLEMENTATION
// line 420	WITHOUT_CLASSIFICATION	0.9999109300086373	WITHOUT_CLASSIFICATION	8.906999136276226E-5	IMPLEMENTATION
// line 426	WITHOUT_CLASSIFICATION	0.9999109300086373	WITHOUT_CLASSIFICATION	8.906999136276226E-5	IMPLEMENTATION
// line 434	WITHOUT_CLASSIFICATION	0.9999109300086373	WITHOUT_CLASSIFICATION	8.906999136276226E-5	IMPLEMENTATION
// line 443	WITHOUT_CLASSIFICATION	0.9999109300086373	WITHOUT_CLASSIFICATION	8.906999136276226E-5	IMPLEMENTATION
// line 446	WITHOUT_CLASSIFICATION	0.9999109300086373	WITHOUT_CLASSIFICATION	8.906999136276226E-5	IMPLEMENTATION
// line 452	WITHOUT_CLASSIFICATION	0.9999109300086373	WITHOUT_CLASSIFICATION	8.906999136276226E-5	IMPLEMENTATION
// line 457	WITHOUT_CLASSIFICATION	0.9999109300086373	WITHOUT_CLASSIFICATION	8.906999136276226E-5	IMPLEMENTATION
// line 464	WITHOUT_CLASSIFICATION	0.9999109300086373	WITHOUT_CLASSIFICATION	8.906999136276226E-5	IMPLEMENTATION
// line 467	WITHOUT_CLASSIFICATION	0.9999109300086373	WITHOUT_CLASSIFICATION	8.906999136276226E-5	IMPLEMENTATION
// line 470	WITHOUT_CLASSIFICATION	0.9999109300086373	WITHOUT_CLASSIFICATION	8.906999136276226E-5	IMPLEMENTATION
// line 479	WITHOUT_CLASSIFICATION	0.9999109300086373	WITHOUT_CLASSIFICATION	8.906999136276226E-5	IMPLEMENTATION
// line 484	WITHOUT_CLASSIFICATION	0.9999109300086373	WITHOUT_CLASSIFICATION	8.906999136276226E-5	IMPLEMENTATION
// line 486	WITHOUT_CLASSIFICATION	0.9999109300086373	WITHOUT_CLASSIFICATION	8.906999136276226E-5	IMPLEMENTATION
// line 492	WITHOUT_CLASSIFICATION	0.9999109300086373	WITHOUT_CLASSIFICATION	8.906999136276226E-5	IMPLEMENTATION
// line 498	WITHOUT_CLASSIFICATION	0.9999109300086373	WITHOUT_CLASSIFICATION	8.906999136276226E-5	IMPLEMENTATION
// line 501	WITHOUT_CLASSIFICATION	0.9999109300086373	WITHOUT_CLASSIFICATION	8.906999136276226E-5	IMPLEMENTATION
// line 504	WITHOUT_CLASSIFICATION	0.9999109300086373	WITHOUT_CLASSIFICATION	8.906999136276226E-5	IMPLEMENTATION
// line 507	WITHOUT_CLASSIFICATION	0.9999109300086373	WITHOUT_CLASSIFICATION	8.906999136276226E-5	IMPLEMENTATION
// line 510	WITHOUT_CLASSIFICATION	0.9999109300086373	WITHOUT_CLASSIFICATION	8.906999136276226E-5	IMPLEMENTATION
// line 519	WITHOUT_CLASSIFICATION	0.9999109300086373	WITHOUT_CLASSIFICATION	8.906999136276226E-5	IMPLEMENTATION
// line 525	WITHOUT_CLASSIFICATION	0.9999109300086373	WITHOUT_CLASSIFICATION	8.906999136276226E-5	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9998756799413627	WITHOUT_CLASSIFICATION	1.2432005863727548E-4	IMPLEMENTATION
// line 537	WITHOUT_CLASSIFICATION	0.9999109300086373	WITHOUT_CLASSIFICATION	8.906999136276226E-5	IMPLEMENTATION
// line 540	WITHOUT_CLASSIFICATION	0.9999109300086373	WITHOUT_CLASSIFICATION	8.906999136276226E-5	IMPLEMENTATION
// line 543	WITHOUT_CLASSIFICATION	0.9999109300086373	WITHOUT_CLASSIFICATION	8.906999136276226E-5	IMPLEMENTATION
// line 546	WITHOUT_CLASSIFICATION	0.9999109300086373	WITHOUT_CLASSIFICATION	8.906999136276226E-5	IMPLEMENTATION
// line 556	WITHOUT_CLASSIFICATION	0.9999109300086373	WITHOUT_CLASSIFICATION	8.906999136276226E-5	IMPLEMENTATION
// line 559	WITHOUT_CLASSIFICATION	0.9999109300086373	WITHOUT_CLASSIFICATION	8.906999136276226E-5	IMPLEMENTATION
// line 563	WITHOUT_CLASSIFICATION	0.9999109300086373	WITHOUT_CLASSIFICATION	8.906999136276226E-5	IMPLEMENTATION
// line 566	WITHOUT_CLASSIFICATION	0.9999109300086373	WITHOUT_CLASSIFICATION	8.906999136276226E-5	IMPLEMENTATION
// line 569	WITHOUT_CLASSIFICATION	0.9999109300086373	WITHOUT_CLASSIFICATION	8.906999136276226E-5	IMPLEMENTATION
// line 575	WITHOUT_CLASSIFICATION	0.9999109300086373	WITHOUT_CLASSIFICATION	8.906999136276226E-5	IMPLEMENTATION
// line 578	WITHOUT_CLASSIFICATION	0.9999109300086373	WITHOUT_CLASSIFICATION	8.906999136276226E-5	IMPLEMENTATION
// line 587	WITHOUT_CLASSIFICATION	0.9999109300086373	WITHOUT_CLASSIFICATION	8.906999136276226E-5	IMPLEMENTATION
// line 596	WITHOUT_CLASSIFICATION	0.9999109300086373	WITHOUT_CLASSIFICATION	8.906999136276226E-5	IMPLEMENTATION
// line 604	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 607	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 610	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 613	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 616	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 634	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 638	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 643	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 646	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 655	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 660	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 667	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 670	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 672	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 696	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 701	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 717	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 720	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 726	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 729	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 732	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 735	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 738	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 751	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 754	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 757	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 760	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 763	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 769	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 772	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 775	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 782	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 788	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 791	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 794	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 797	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 803	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 806	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 809	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 815	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 818	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 821	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 824	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 830	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 833	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 836	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 839	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 842	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 848	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 852	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 858	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 861	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 868	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 871	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 876	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 879	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 883	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 893	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 896	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 899	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 903	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 907	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 915	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 920	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 923	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 926	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 932	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 936	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 940	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 944	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 948	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 956	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 960	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 964	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 967	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 972	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 978	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 980	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 984	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 986	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 996	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 1001	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1004	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1008	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1014	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1029	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1032	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1034	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1045	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1048	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1051	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1058	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1070	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1073	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1076	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1079	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1082	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1089	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1097	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1100	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1103	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1107	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1111	WITHOUT_CLASSIFICATION	0.9999117811503782	WITHOUT_CLASSIFICATION	8.821884962179653E-5	IMPLEMENTATION
// line 1113	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1115	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1119	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1130	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1133	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1135	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1137	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1140	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1151	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1154	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1158	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1164	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1175	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1178	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1187	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1189	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1193	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1204	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1207	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1210	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1214	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1234	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1239	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1243	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1247	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1251	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1263	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1269	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1280	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1283	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1290	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1296	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1299	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1302	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1309	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1313	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1315	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1320	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1328	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1335	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1348	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1352	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1358	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1374	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1381	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1387	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1392	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1415	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1431	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1434	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1440	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1443	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1453	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1456	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1462	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1465	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1470	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1477	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1480	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1485	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1488	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1496	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1502	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1510	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1513	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1516	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1533	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1550	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1553	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1556	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1565	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1568	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1571	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1574	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1577	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1587	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1595	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1598	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1600	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1609	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1623	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1626	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1629	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1632	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1638	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1641	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1644	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1649	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1655	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1658	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1661	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1672	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1677	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1687	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1694	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1705	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1708	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1725	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1733	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1742	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1745	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1749	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1757	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1769	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1772	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1775	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1784	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1808	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1814	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1818	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1822	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
/* force for args */	WITHOUT_CLASSIFICATION	0.9998933019799133	WITHOUT_CLASSIFICATION	1.0669802008671208E-4	IMPLEMENTATION
/*XXX 0;*/	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
/*                      $$ = $3;*/	WITHOUT_CLASSIFICATION	0.9999664515674552	WITHOUT_CLASSIFICATION	3.354843254481547E-5	IMPLEMENTATION
/*                  }*/	WITHOUT_CLASSIFICATION	0.9999673579499556	WITHOUT_CLASSIFICATION	3.2642050044407735E-5	IMPLEMENTATION
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9999022347641516	WITHOUT_CLASSIFICATION	9.776523584829753E-5	IMPLEMENTATION
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9999525526090083	WITHOUT_CLASSIFICATION	4.74473909917961E-5	IMPLEMENTATION
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.999917729694727	WITHOUT_CLASSIFICATION	8.227030527288799E-5	IMPLEMENTATION
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.999917729694727	WITHOUT_CLASSIFICATION	8.227030527288799E-5	IMPLEMENTATION
/* NOEX_PRIVATE for toplevel */	WITHOUT_CLASSIFICATION	0.9999052655134318	WITHOUT_CLASSIFICATION	9.473448656815845E-5	IMPLEMENTATION
/*mirko: check*/	WITHOUT_CLASSIFICATION	0.9998893048854773	WITHOUT_CLASSIFICATION	1.1069511452263142E-4	IMPLEMENTATION
/* Include pipes on multiple arg type*/	WITHOUT_CLASSIFICATION	0.9998358432835935	WITHOUT_CLASSIFICATION	1.6415671640653549E-4	IMPLEMENTATION
// line 529	WITHOUT_CLASSIFICATION	0.9999109300086373	WITHOUT_CLASSIFICATION	8.906999136276226E-5	IMPLEMENTATION
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9998980306439647	WITHOUT_CLASSIFICATION	1.0196935603526864E-4	IMPLEMENTATION
/* XXX*/	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999272961951717	WITHOUT_CLASSIFICATION	7.270380482826695E-5	IMPLEMENTATION
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9998881575646432	WITHOUT_CLASSIFICATION	1.1184243535668144E-4	IMPLEMENTATION
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9998920071087406	WITHOUT_CLASSIFICATION	1.0799289125941903E-4	IMPLEMENTATION
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9998880372981942	WITHOUT_CLASSIFICATION	1.119627018057385E-4	IMPLEMENTATION
// line 1827 "DefaultRubyParser.y"	WITHOUT_CLASSIFICATION	0.9999460879134052	WITHOUT_CLASSIFICATION	5.39120865947852E-5	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999891972192629	WITHOUT_CLASSIFICATION	1.080278073701203E-5	IMPLEMENTATION
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9998985405846185	WITHOUT_CLASSIFICATION	1.0145941538151959E-4	IMPLEMENTATION
// line 7713 "-"	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.91189546444135E-5	IMPLEMENTATION
// local scopes are argument scopes by default	WITHOUT_CLASSIFICATION	0.9999867907640932	WITHOUT_CLASSIFICATION	1.3209235906753779E-5	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999612752839364	WITHOUT_CLASSIFICATION	3.872471606366405E-5	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999612752839364	WITHOUT_CLASSIFICATION	3.872471606366405E-5	IMPLEMENTATION
// We know this is a block scope because a local scope cannot be within a local scope // If topScope was itself it would have created a LocalAsgnNode above.	WITHOUT_CLASSIFICATION	0.9999875650301472	WITHOUT_CLASSIFICATION	1.2434969852805022E-5	IMPLEMENTATION
// ENEBO: 1.9 has CURR nodes for local/block variables.  We don't.  I believe we follow proper logic	WITHOUT_CLASSIFICATION	0.9999434744140717	WITHOUT_CLASSIFICATION	5.652558592829751E-5	IMPLEMENTATION
// odd...but it is odd in ruby too.	WITHOUT_CLASSIFICATION	0.9999113419911221	WITHOUT_CLASSIFICATION	8.865800887791486E-5	IMPLEMENTATION
// What linenumber will the source think it starts from?	WITHOUT_CLASSIFICATION	0.9999590047651447	WITHOUT_CLASSIFICATION	4.099523485534107E-5	IMPLEMENTATION
// Is this inline source (aka -e "...source...")	WITHOUT_CLASSIFICATION	0.9998775755096219	WITHOUT_CLASSIFICATION	1.224244903782474E-4	IMPLEMENTATION
// We parse evals more often in source so assume an eval parse.	WITHOUT_CLASSIFICATION	0.9999307066482614	WITHOUT_CLASSIFICATION	6.929335173865181E-5	IMPLEMENTATION
// Should positions added extra IDE-friendly information and leave in all newline nodes	WITHOUT_CLASSIFICATION	0.9999830152341569	WITHOUT_CLASSIFICATION	1.698476584318094E-5	IMPLEMENTATION
// Will parser parse Duby grammar Extensions	WITHOUT_CLASSIFICATION	0.9999182426713077	WITHOUT_CLASSIFICATION	8.17573286922138E-5	IMPLEMENTATION
// Should we display extra debug information while parsing?	WITHOUT_CLASSIFICATION	0.9999352655701038	WITHOUT_CLASSIFICATION	6.473442989616959E-5	IMPLEMENTATION
// __END__ marker offset (-1 means none present)	WITHOUT_CLASSIFICATION	0.9998832765759248	WITHOUT_CLASSIFICATION	1.1672342407519334E-4	IMPLEMENTATION
// Parser states:	WITHOUT_CLASSIFICATION	0.9998984267809099	WITHOUT_CLASSIFICATION	1.0157321909002559E-4	IMPLEMENTATION
// Is the parser current within a singleton (value is number of nested singletons)	WITHOUT_CLASSIFICATION	0.9999870340990007	WITHOUT_CLASSIFICATION	1.296590099931899E-5	IMPLEMENTATION
// Is the parser currently within a method definition	WITHOUT_CLASSIFICATION	0.9999578494002224	WITHOUT_CLASSIFICATION	4.2150599777729375E-5	IMPLEMENTATION
// LOCALVAR	WITHOUT_CLASSIFICATION	0.999876833909758	WITHOUT_CLASSIFICATION	1.2316609024197732E-4	IMPLEMENTATION
// CONSTANT	WITHOUT_CLASSIFICATION	0.9998786553717041	WITHOUT_CLASSIFICATION	1.2134462829592766E-4	IMPLEMENTATION
// INSTANCE VARIABLE	WITHOUT_CLASSIFICATION	0.9998769820205267	WITHOUT_CLASSIFICATION	1.2301797947328487E-4	IMPLEMENTATION
// Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])	WITHOUT_CLASSIFICATION	0.9999610094334294	WITHOUT_CLASSIFICATION	3.899056657061958E-5	IMPLEMENTATION
/* MRI: block_append */	WITHOUT_CLASSIFICATION	0.9998968681697918	WITHOUT_CLASSIFICATION	1.0313183020819296E-4	IMPLEMENTATION
// Reduces overhead in interp by not set position every single line we encounter. 	WITHOUT_CLASSIFICATION	0.999952458507685	WITHOUT_CLASSIFICATION	4.7541492314970106E-5	IMPLEMENTATION
// Assumption: tail is never a list node	WITHOUT_CLASSIFICATION	0.9998488979187466	WITHOUT_CLASSIFICATION	1.5110208125336904E-4	IMPLEMENTATION
//        return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));	WITHOUT_CLASSIFICATION	0.9999793697368243	WITHOUT_CLASSIFICATION	2.063026317569129E-5	IMPLEMENTATION
// Node	WITHOUT_CLASSIFICATION	0.9960586784463614	WITHOUT_CLASSIFICATION	0.003941321553638594	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9996655112460382	WITHOUT_CLASSIFICATION	3.3448875396177217E-4	IMPLEMENTATION
/*case CONSTNODE:                handleUselessWarn(node, "a constant"); return;*/	WITHOUT_CLASSIFICATION	0.9999286223355455	WITHOUT_CLASSIFICATION	7.137766445449478E-5	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9996655112460382	WITHOUT_CLASSIFICATION	3.3448875396177217E-4	IMPLEMENTATION
/*case CLASSNODE: case COLON2NODE:                handleUselessWarn(node, "::"); return;*/	WITHOUT_CLASSIFICATION	0.9999280987181454	WITHOUT_CLASSIFICATION	7.1901281854682E-5	IMPLEMENTATION
/*case SELFNODE:                handleUselessWarn(node, "self"); return;*/	WITHOUT_CLASSIFICATION	0.9999167564691231	WITHOUT_CLASSIFICATION	8.32435308768654E-5	IMPLEMENTATION
// FIXME: DSTR,EVSTR,STR: warning "string literal in condition"	WITHOUT_CLASSIFICATION	0.9997422037396626	WITHOUT_CLASSIFICATION	2.577962603374406E-4	IMPLEMENTATION
/* MRI: range_op */	WITHOUT_CLASSIFICATION	0.9998888633215058	WITHOUT_CLASSIFICATION	1.111366784941629E-4	IMPLEMENTATION
// Block and block pass passed in at same time....uh oh	WITHOUT_CLASSIFICATION	0.9999385079437099	WITHOUT_CLASSIFICATION	6.149205629011569E-5	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.9960484801668176	WITHOUT_CLASSIFICATION	0.003951519833182413	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.9960484801668176	WITHOUT_CLASSIFICATION	0.003951519833182413	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.9960484801668176	WITHOUT_CLASSIFICATION	0.003951519833182413	IMPLEMENTATION
// tail must be EvStrNode at this point 	WITHOUT_CLASSIFICATION	0.9999262762203016	WITHOUT_CLASSIFICATION	7.372377969840713E-5	IMPLEMENTATION
//Do not add an empty string node	WITHOUT_CLASSIFICATION	0.9999812018995139	WITHOUT_CLASSIFICATION	1.8798100486119048E-5	IMPLEMENTATION
// Zero-Argument declaration	WITHOUT_CLASSIFICATION	0.9999349570118791	WITHOUT_CLASSIFICATION	6.504298812097166E-5	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9998766846217828	WITHOUT_CLASSIFICATION	1.2331537821723534E-4	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9998766846217828	WITHOUT_CLASSIFICATION	1.2331537821723534E-4	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9998766846217828	WITHOUT_CLASSIFICATION	1.2331537821723534E-4	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9998766846217828	WITHOUT_CLASSIFICATION	1.2331537821723534E-4	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9998766846217828	WITHOUT_CLASSIFICATION	1.2331537821723534E-4	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9998766846217828	WITHOUT_CLASSIFICATION	1.2331537821723534E-4	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9998766846217828	WITHOUT_CLASSIFICATION	1.2331537821723534E-4	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9998766846217828	WITHOUT_CLASSIFICATION	1.2331537821723534E-4	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9998766846217828	WITHOUT_CLASSIFICATION	1.2331537821723534E-4	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9998766846217828	WITHOUT_CLASSIFICATION	1.2331537821723534E-4	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9998766846217828	WITHOUT_CLASSIFICATION	1.2331537821723534E-4	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9998766846217828	WITHOUT_CLASSIFICATION	1.2331537821723534E-4	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9998766846217828	WITHOUT_CLASSIFICATION	1.2331537821723534E-4	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9998766846217828	WITHOUT_CLASSIFICATION	1.2331537821723534E-4	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9998766846217828	WITHOUT_CLASSIFICATION	1.2331537821723534E-4	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9998766846217828	WITHOUT_CLASSIFICATION	1.2331537821723534E-4	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9998766846217828	WITHOUT_CLASSIFICATION	1.2331537821723534E-4	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9998766846217828	WITHOUT_CLASSIFICATION	1.2331537821723534E-4	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9998766846217828	WITHOUT_CLASSIFICATION	1.2331537821723534E-4	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9998766846217828	WITHOUT_CLASSIFICATION	1.2331537821723534E-4	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9998766846217828	WITHOUT_CLASSIFICATION	1.2331537821723534E-4	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9998766846217828	WITHOUT_CLASSIFICATION	1.2331537821723534E-4	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9998756799413627	WITHOUT_CLASSIFICATION	1.2432005863727548E-4	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9998756799413627	WITHOUT_CLASSIFICATION	1.2432005863727548E-4	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9998756799413627	WITHOUT_CLASSIFICATION	1.2432005863727548E-4	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9998756799413627	WITHOUT_CLASSIFICATION	1.2432005863727548E-4	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9998756799413627	WITHOUT_CLASSIFICATION	1.2432005863727548E-4	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9998756799413627	WITHOUT_CLASSIFICATION	1.2432005863727548E-4	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9998756799413627	WITHOUT_CLASSIFICATION	1.2432005863727548E-4	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9998756799413627	WITHOUT_CLASSIFICATION	1.2432005863727548E-4	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9998756799413627	WITHOUT_CLASSIFICATION	1.2432005863727548E-4	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9998756799413627	WITHOUT_CLASSIFICATION	1.2432005863727548E-4	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9998756799413627	WITHOUT_CLASSIFICATION	1.2432005863727548E-4	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9998756799413627	WITHOUT_CLASSIFICATION	1.2432005863727548E-4	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9998756799413627	WITHOUT_CLASSIFICATION	1.2432005863727548E-4	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9998756799413627	WITHOUT_CLASSIFICATION	1.2432005863727548E-4	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9998756799413627	WITHOUT_CLASSIFICATION	1.2432005863727548E-4	IMPLEMENTATION
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999206859228638	WITHOUT_CLASSIFICATION	7.931407713629467E-5	IMPLEMENTATION
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999363581493845	WITHOUT_CLASSIFICATION	6.364185061547756E-5	IMPLEMENTATION
// shift to yyN	WITHOUT_CLASSIFICATION	0.9998790620299907	WITHOUT_CLASSIFICATION	1.2093797000929986E-4	IMPLEMENTATION
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9998794482603239	WITHOUT_CLASSIFICATION	1.2055173967610044E-4	IMPLEMENTATION
// leave stack alone	WITHOUT_CLASSIFICATION	0.9998931262455621	WITHOUT_CLASSIFICATION	1.0687375443780645E-4	IMPLEMENTATION
// line 321	WITHOUT_CLASSIFICATION	0.9999109546671153	WITHOUT_CLASSIFICATION	8.904533288467563E-5	IMPLEMENTATION
// line 351	WITHOUT_CLASSIFICATION	0.9999109546671153	WITHOUT_CLASSIFICATION	8.904533288467563E-5	IMPLEMENTATION
// line 382	WITHOUT_CLASSIFICATION	0.9999109546671153	WITHOUT_CLASSIFICATION	8.904533288467563E-5	IMPLEMENTATION
// line 417	WITHOUT_CLASSIFICATION	0.9999109300086373	WITHOUT_CLASSIFICATION	8.906999136276226E-5	IMPLEMENTATION
// line 420	WITHOUT_CLASSIFICATION	0.9999109300086373	WITHOUT_CLASSIFICATION	8.906999136276226E-5	IMPLEMENTATION
// line 423	WITHOUT_CLASSIFICATION	0.9999109300086373	WITHOUT_CLASSIFICATION	8.906999136276226E-5	IMPLEMENTATION
// line 426	WITHOUT_CLASSIFICATION	0.9999109300086373	WITHOUT_CLASSIFICATION	8.906999136276226E-5	IMPLEMENTATION
// line 280	WITHOUT_CLASSIFICATION	0.9999115667018716	WITHOUT_CLASSIFICATION	8.843329812838042E-5	IMPLEMENTATION
// line 283	WITHOUT_CLASSIFICATION	0.9999115213322484	WITHOUT_CLASSIFICATION	8.847866775154156E-5	IMPLEMENTATION
// line 296	WITHOUT_CLASSIFICATION	0.999911487289758	WITHOUT_CLASSIFICATION	8.851271024199951E-5	IMPLEMENTATION
// line 324	WITHOUT_CLASSIFICATION	0.9999109546671153	WITHOUT_CLASSIFICATION	8.904533288467563E-5	IMPLEMENTATION
// line 327	WITHOUT_CLASSIFICATION	0.9999109546671153	WITHOUT_CLASSIFICATION	8.904533288467563E-5	IMPLEMENTATION
// line 331	WITHOUT_CLASSIFICATION	0.9999109546671153	WITHOUT_CLASSIFICATION	8.904533288467563E-5	IMPLEMENTATION
// line 333	WITHOUT_CLASSIFICATION	0.9999109546671153	WITHOUT_CLASSIFICATION	8.904533288467563E-5	IMPLEMENTATION
// line 336	WITHOUT_CLASSIFICATION	0.9999109546671153	WITHOUT_CLASSIFICATION	8.904533288467563E-5	IMPLEMENTATION
// line 342	WITHOUT_CLASSIFICATION	0.9999109546671153	WITHOUT_CLASSIFICATION	8.904533288467563E-5	IMPLEMENTATION
// line 345	WITHOUT_CLASSIFICATION	0.9999109546671153	WITHOUT_CLASSIFICATION	8.904533288467563E-5	IMPLEMENTATION
// line 348	WITHOUT_CLASSIFICATION	0.9999109546671153	WITHOUT_CLASSIFICATION	8.904533288467563E-5	IMPLEMENTATION
// line 354	WITHOUT_CLASSIFICATION	0.9999109546671153	WITHOUT_CLASSIFICATION	8.904533288467563E-5	IMPLEMENTATION
// line 368	WITHOUT_CLASSIFICATION	0.9999109546671153	WITHOUT_CLASSIFICATION	8.904533288467563E-5	IMPLEMENTATION
// line 377	WITHOUT_CLASSIFICATION	0.9999109546671153	WITHOUT_CLASSIFICATION	8.904533288467563E-5	IMPLEMENTATION
// line 388	WITHOUT_CLASSIFICATION	0.9999109546671153	WITHOUT_CLASSIFICATION	8.904533288467563E-5	IMPLEMENTATION
// line 392	WITHOUT_CLASSIFICATION	0.9999109546671153	WITHOUT_CLASSIFICATION	8.904533288467563E-5	IMPLEMENTATION
// line 397	WITHOUT_CLASSIFICATION	0.9999109546671153	WITHOUT_CLASSIFICATION	8.904533288467563E-5	IMPLEMENTATION
// line 429	WITHOUT_CLASSIFICATION	0.9999109300086373	WITHOUT_CLASSIFICATION	8.906999136276226E-5	IMPLEMENTATION
// line 432	WITHOUT_CLASSIFICATION	0.9999109300086373	WITHOUT_CLASSIFICATION	8.906999136276226E-5	IMPLEMENTATION
// line 436	WITHOUT_CLASSIFICATION	0.9999109300086373	WITHOUT_CLASSIFICATION	8.906999136276226E-5	IMPLEMENTATION
// line 445	WITHOUT_CLASSIFICATION	0.9999109300086373	WITHOUT_CLASSIFICATION	8.906999136276226E-5	IMPLEMENTATION
// line 448	WITHOUT_CLASSIFICATION	0.9999109300086373	WITHOUT_CLASSIFICATION	8.906999136276226E-5	IMPLEMENTATION
// line 454	WITHOUT_CLASSIFICATION	0.9999109300086373	WITHOUT_CLASSIFICATION	8.906999136276226E-5	IMPLEMENTATION
// line 459	WITHOUT_CLASSIFICATION	0.9999109300086373	WITHOUT_CLASSIFICATION	8.906999136276226E-5	IMPLEMENTATION
// line 466	WITHOUT_CLASSIFICATION	0.9999109300086373	WITHOUT_CLASSIFICATION	8.906999136276226E-5	IMPLEMENTATION
// line 469	WITHOUT_CLASSIFICATION	0.9999109300086373	WITHOUT_CLASSIFICATION	8.906999136276226E-5	IMPLEMENTATION
// line 478	WITHOUT_CLASSIFICATION	0.9999109300086373	WITHOUT_CLASSIFICATION	8.906999136276226E-5	IMPLEMENTATION
// line 481	WITHOUT_CLASSIFICATION	0.9999109300086373	WITHOUT_CLASSIFICATION	8.906999136276226E-5	IMPLEMENTATION
// line 488	WITHOUT_CLASSIFICATION	0.9999109300086373	WITHOUT_CLASSIFICATION	8.906999136276226E-5	IMPLEMENTATION
// line 494	WITHOUT_CLASSIFICATION	0.9999109300086373	WITHOUT_CLASSIFICATION	8.906999136276226E-5	IMPLEMENTATION
// line 497	WITHOUT_CLASSIFICATION	0.9999109300086373	WITHOUT_CLASSIFICATION	8.906999136276226E-5	IMPLEMENTATION
// line 503	WITHOUT_CLASSIFICATION	0.9999109300086373	WITHOUT_CLASSIFICATION	8.906999136276226E-5	IMPLEMENTATION
// line 506	WITHOUT_CLASSIFICATION	0.9999109300086373	WITHOUT_CLASSIFICATION	8.906999136276226E-5	IMPLEMENTATION
// line 509	WITHOUT_CLASSIFICATION	0.9999109300086373	WITHOUT_CLASSIFICATION	8.906999136276226E-5	IMPLEMENTATION
// line 512	WITHOUT_CLASSIFICATION	0.9999109300086373	WITHOUT_CLASSIFICATION	8.906999136276226E-5	IMPLEMENTATION
// line 521	WITHOUT_CLASSIFICATION	0.9999109300086373	WITHOUT_CLASSIFICATION	8.906999136276226E-5	IMPLEMENTATION
// line 526	WITHOUT_CLASSIFICATION	0.9999109300086373	WITHOUT_CLASSIFICATION	8.906999136276226E-5	IMPLEMENTATION
// line 540	WITHOUT_CLASSIFICATION	0.9999109300086373	WITHOUT_CLASSIFICATION	8.906999136276226E-5	IMPLEMENTATION
// line 543	WITHOUT_CLASSIFICATION	0.9999109300086373	WITHOUT_CLASSIFICATION	8.906999136276226E-5	IMPLEMENTATION
// line 546	WITHOUT_CLASSIFICATION	0.9999109300086373	WITHOUT_CLASSIFICATION	8.906999136276226E-5	IMPLEMENTATION
// line 566	WITHOUT_CLASSIFICATION	0.9999109300086373	WITHOUT_CLASSIFICATION	8.906999136276226E-5	IMPLEMENTATION
// line 610	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 672	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 691	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 696	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 772	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 782	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 785	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 788	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 791	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 534	WITHOUT_CLASSIFICATION	0.9999109300086373	WITHOUT_CLASSIFICATION	8.906999136276226E-5	IMPLEMENTATION
// line 549	WITHOUT_CLASSIFICATION	0.9999109300086373	WITHOUT_CLASSIFICATION	8.906999136276226E-5	IMPLEMENTATION
// line 552	WITHOUT_CLASSIFICATION	0.9999109300086373	WITHOUT_CLASSIFICATION	8.906999136276226E-5	IMPLEMENTATION
// line 558	WITHOUT_CLASSIFICATION	0.9999109300086373	WITHOUT_CLASSIFICATION	8.906999136276226E-5	IMPLEMENTATION
// line 561	WITHOUT_CLASSIFICATION	0.9999109300086373	WITHOUT_CLASSIFICATION	8.906999136276226E-5	IMPLEMENTATION
// line 571	WITHOUT_CLASSIFICATION	0.9999109300086373	WITHOUT_CLASSIFICATION	8.906999136276226E-5	IMPLEMENTATION
// line 574	WITHOUT_CLASSIFICATION	0.9999109300086373	WITHOUT_CLASSIFICATION	8.906999136276226E-5	IMPLEMENTATION
// line 579	WITHOUT_CLASSIFICATION	0.9999109300086373	WITHOUT_CLASSIFICATION	8.906999136276226E-5	IMPLEMENTATION
// line 586	WITHOUT_CLASSIFICATION	0.9999109300086373	WITHOUT_CLASSIFICATION	8.906999136276226E-5	IMPLEMENTATION
// line 589	WITHOUT_CLASSIFICATION	0.9999109300086373	WITHOUT_CLASSIFICATION	8.906999136276226E-5	IMPLEMENTATION
// line 592	WITHOUT_CLASSIFICATION	0.9999109300086373	WITHOUT_CLASSIFICATION	8.906999136276226E-5	IMPLEMENTATION
// line 595	WITHOUT_CLASSIFICATION	0.9999109300086373	WITHOUT_CLASSIFICATION	8.906999136276226E-5	IMPLEMENTATION
// line 598	WITHOUT_CLASSIFICATION	0.9999109300086373	WITHOUT_CLASSIFICATION	8.906999136276226E-5	IMPLEMENTATION
// line 623	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 627	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 630	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 633	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 639	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 648	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 657	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 661	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 666	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 678	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 682	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 688	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 699	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 706	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 708	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 727	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 737	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 753	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 779	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 801	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 808	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 811	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 817	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 842	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 845	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 848	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 893	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 899	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 932	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 944	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 960	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 980	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 1004	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1038	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 820	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 826	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 829	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 832	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 851	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 857	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 860	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 863	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 866	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 869	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 875	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 884	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 887	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 890	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 902	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 909	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 912	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 916	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 922	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 928	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 941	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 947	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 951	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 955	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 965	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 969	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 977	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 983	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 1013	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1023	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1035	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1041	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1043	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1054	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1057	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1060	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1069	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1075	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1105	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1111	WITHOUT_CLASSIFICATION	0.9999117811503782	WITHOUT_CLASSIFICATION	8.821884962179653E-5	IMPLEMENTATION
// line 1122	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1130	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1140	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1158	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1204	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1207	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1247	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1251	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1261	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1078	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1084	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1087	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1090	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1093	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1114	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1116	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1118	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1124	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1126	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1138	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1144	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1149	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1155	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1162	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1173	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1179	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1182	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1190	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1196	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1213	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1217	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1231	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1236	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1244	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1254	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1258	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1264	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1270	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1273	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1276	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1279	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1282	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1289	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1292	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1295	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1298	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1305	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1348	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1387	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1392	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1448	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1462	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1470	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1496	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1502	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1595	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1598	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1308	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1311	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1317	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1323	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1326	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1329	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1337	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1342	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1345	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1354	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1359	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1366	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1369	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1373	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1377	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1383	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1399	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1401	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1406	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1417	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1424	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1427	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1430	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1433	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1436	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1442	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1445	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1458	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1464	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1489	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1493	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1507	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1519	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1532	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1538	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1542	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1557	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1573	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1591	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1615	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1629	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1632	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1705	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1716	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1725	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1742	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1749	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1818	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1822	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1607	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1610	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1622	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1625	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1636	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1639	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1647	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1651	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1657	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1660	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1663	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1678	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1702	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1711	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1719	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1722	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1731	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1734	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1738	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1746	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1756	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1758	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1761	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1767	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1776	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1782	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1785	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1788	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1791	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1797	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1800	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1803	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1806	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1809	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1815	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1825	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1828	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1831	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1847	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.999917729694727	WITHOUT_CLASSIFICATION	8.227030527288799E-5	IMPLEMENTATION
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.999917729694727	WITHOUT_CLASSIFICATION	8.227030527288799E-5	IMPLEMENTATION
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9998980306439647	WITHOUT_CLASSIFICATION	1.0196935603526864E-4	IMPLEMENTATION
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999272961951717	WITHOUT_CLASSIFICATION	7.270380482826695E-5	IMPLEMENTATION
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9998881575646432	WITHOUT_CLASSIFICATION	1.1184243535668144E-4	IMPLEMENTATION
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9998920071087406	WITHOUT_CLASSIFICATION	1.0799289125941903E-4	IMPLEMENTATION
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9998880372981942	WITHOUT_CLASSIFICATION	1.119627018057385E-4	IMPLEMENTATION
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999092346308227	WITHOUT_CLASSIFICATION	9.076536917722101E-5	IMPLEMENTATION
// line 1854	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1869	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1872	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1877	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1886	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1898	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1902	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1905	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1911	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1918	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1935	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1938	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1942	WITHOUT_CLASSIFICATION	0.9999111514710116	WITHOUT_CLASSIFICATION	8.884852898831835E-5	IMPLEMENTATION
// line 1948	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1960	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1963	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1968	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1972	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1982	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1995	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 2000	WITHOUT_CLASSIFICATION	0.9999115007913288	WITHOUT_CLASSIFICATION	8.849920867116517E-5	IMPLEMENTATION
// line 2006	WITHOUT_CLASSIFICATION	0.9999114940151282	WITHOUT_CLASSIFICATION	8.850598487175874E-5	IMPLEMENTATION
// line 2010	WITHOUT_CLASSIFICATION	0.999911487289758	WITHOUT_CLASSIFICATION	8.851271024199951E-5	IMPLEMENTATION
/* We may need to subtract addition offset off of first */	WITHOUT_CLASSIFICATION	0.9999208171895225	WITHOUT_CLASSIFICATION	7.918281047752137E-5	IMPLEMENTATION
/* string fragment (we optimistically take one off in*/	WITHOUT_CLASSIFICATION	0.999926438888014	WITHOUT_CLASSIFICATION	7.356111198601636E-5	IMPLEMENTATION
/* ParserSupport.literal_concat).  Check token length*/	WITHOUT_CLASSIFICATION	0.9999188956437286	WITHOUT_CLASSIFICATION	8.110435627139474E-5	IMPLEMENTATION
/* and subtract as neeeded.*/	WITHOUT_CLASSIFICATION	0.9999034590125395	WITHOUT_CLASSIFICATION	9.654098746042706E-5	IMPLEMENTATION
/*                    $$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);  */	WITHOUT_CLASSIFICATION	0.9999792412515601	WITHOUT_CLASSIFICATION	2.0758748439946436E-5	IMPLEMENTATION
/* ENEBO: arg surrounded by in_defined set/unset*/	WITHOUT_CLASSIFICATION	0.9999217400911785	WITHOUT_CLASSIFICATION	7.82599088215529E-5	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999891972192629	WITHOUT_CLASSIFICATION	1.080278073701203E-5	IMPLEMENTATION
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9998985405846185	WITHOUT_CLASSIFICATION	1.0145941538151959E-4	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999612752839364	WITHOUT_CLASSIFICATION	3.872471606366405E-5	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999612752839364	WITHOUT_CLASSIFICATION	3.872471606366405E-5	IMPLEMENTATION
/* ENEBO: Removed !compile_for_eval which probably is to reduce warnings*/	WITHOUT_CLASSIFICATION	0.9998983814362097	WITHOUT_CLASSIFICATION	1.0161856379027716E-4	IMPLEMENTATION
/* was $$ = null;*/	WITHOUT_CLASSIFICATION	0.9998891562739227	WITHOUT_CLASSIFICATION	1.1084372607727167E-4	IMPLEMENTATION
// line 2019 "Ruby19Parser.y"	WITHOUT_CLASSIFICATION	0.9999264733249602	WITHOUT_CLASSIFICATION	7.352667503983519E-5	IMPLEMENTATION
// line 8143 "-"	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.91189546444135E-5	IMPLEMENTATION
// we know variables cannot be null since localstaticscope will create a 0 length one.	WITHOUT_CLASSIFICATION	0.999992898342793	WITHOUT_CLASSIFICATION	7.101657206961063E-6	IMPLEMENTATION
// No bit math to store level since we know level is zero for this case	WITHOUT_CLASSIFICATION	0.9999567562813891	WITHOUT_CLASSIFICATION	4.324371861091792E-5	IMPLEMENTATION
// Next immediate scope.  Variable and constant scoping rules make use of this variable // in different ways.	WITHOUT_CLASSIFICATION	0.9999745275067256	WITHOUT_CLASSIFICATION	2.5472493274511497E-5	IMPLEMENTATION
// Live reference to module	WITHOUT_CLASSIFICATION	0.9999552206165139	WITHOUT_CLASSIFICATION	4.477938348602399E-5	IMPLEMENTATION
// Next CRef down the lexical structure	WITHOUT_CLASSIFICATION	0.9999387907099101	WITHOUT_CLASSIFICATION	6.120929008989974E-5	IMPLEMENTATION
// Our name holder (offsets are assigned as variables are added	WITHOUT_CLASSIFICATION	0.999957505076071	WITHOUT_CLASSIFICATION	4.2494923929065596E-5	IMPLEMENTATION
// number of variables in this scope representing required arguments	WITHOUT_CLASSIFICATION	0.9999884663054034	WITHOUT_CLASSIFICATION	1.153369459655195E-5	IMPLEMENTATION
// number of variables in this scope representing optional arguments	WITHOUT_CLASSIFICATION	0.999991645146958	WITHOUT_CLASSIFICATION	8.354853041946622E-6	IMPLEMENTATION
// index of variable that represents a "rest" arg	WITHOUT_CLASSIFICATION	0.9999315258665795	WITHOUT_CLASSIFICATION	6.847413342054647E-5	IMPLEMENTATION
// Note that this object equality check is intentional, to ensure // the string and its interned version are the same object.	WITHOUT_CLASSIFICATION	0.9999965281735215	WITHOUT_CLASSIFICATION	3.4718264785268897E-6	IMPLEMENTATION
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999173480620157	WITHOUT_CLASSIFICATION	8.265193798423399E-5	IMPLEMENTATION
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999173480620157	WITHOUT_CLASSIFICATION	8.265193798423399E-5	IMPLEMENTATION
/* Note: Only used by compiler until it can use getConstant again or use some other refactoring */	WITHOUT_CLASSIFICATION	0.9999430442087716	WITHOUT_CLASSIFICATION	5.695579122834584E-5	IMPLEMENTATION
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999823141486811	WITHOUT_CLASSIFICATION	1.7685851318885938E-5	IMPLEMENTATION
/* Try and unload the autoload specified from internedName */	WITHOUT_CLASSIFICATION	0.9999645135604541	WITHOUT_CLASSIFICATION	3.548643954576793E-5	IMPLEMENTATION
// We override that the logic which uses this	WITHOUT_CLASSIFICATION	0.9999624917928682	WITHOUT_CLASSIFICATION	3.7508207131757595E-5	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999752725746989	WITHOUT_CLASSIFICATION	2.4727425301209614E-5	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999807115130865	WITHOUT_CLASSIFICATION	1.9288486913379627E-5	IMPLEMENTATION
// source extensions	WITHOUT_CLASSIFICATION	0.9999215570033623	WITHOUT_CLASSIFICATION	7.844299663772903E-5	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999807115130865	WITHOUT_CLASSIFICATION	1.9288486913379627E-5	IMPLEMENTATION
// . Array given to rest should pass itself // . Array with rest + other args should extract array // . Array with multiple values and NO rest should extract args if there are more than one argument	WITHOUT_CLASSIFICATION	0.9999465762850104	WITHOUT_CLASSIFICATION	5.342371498954136E-5	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999663680437765	WITHOUT_CLASSIFICATION	3.363195622348929E-5	IMPLEMENTATION
// Is this thread currently with in a function trace?	WITHOUT_CLASSIFICATION	0.9999119988273805	WITHOUT_CLASSIFICATION	8.800117261949139E-5	IMPLEMENTATION
// Is this thread currently doing an defined? defined should set things like $!	WITHOUT_CLASSIFICATION	0.9998822483710954	WITHOUT_CLASSIFICATION	1.1775162890456303E-4	IMPLEMENTATION
//private UnsynchronizedStack parentStack;	WITHOUT_CLASSIFICATION	0.9999708888118293	WITHOUT_CLASSIFICATION	2.9111188170709703E-5	IMPLEMENTATION
//private UnsynchronizedStack frameStack;	WITHOUT_CLASSIFICATION	0.9999688561511404	WITHOUT_CLASSIFICATION	3.114384885964468E-5	IMPLEMENTATION
// List of active dynamic scopes.  Each of these may have captured other dynamic scopes // to implement closures.	WITHOUT_CLASSIFICATION	0.9930092359678586	WITHOUT_CLASSIFICATION	0.006990764032141455	IMPLEMENTATION
// File where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999570138766154	WITHOUT_CLASSIFICATION	4.298612338459969E-5	IMPLEMENTATION
// Line where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999598891128526	WITHOUT_CLASSIFICATION	4.011088714740077E-5	IMPLEMENTATION
// In certain places, like grep, we don't use real frames for the // call blocks. This has the effect of not setting the backref in // the correct frame - this delta is activated to the place where // the grep is running in so that the backref will be set in an // appropriate place.	WITHOUT_CLASSIFICATION	0.9999992499118285	WITHOUT_CLASSIFICATION	7.500881714179932E-7	IMPLEMENTATION
// TOPLEVEL self and a few others want a top-level scope.  We create this one right // away and then pass it into top-level parse so it ends up being the top level.	WITHOUT_CLASSIFICATION	0.9999352595546538	WITHOUT_CLASSIFICATION	6.474044534618686E-5	IMPLEMENTATION
//////////////////// CATCH MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9999902621861457	WITHOUT_CLASSIFICATION	9.737813854200322E-6	IMPLEMENTATION
//////////////////// FRAME MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9999902416303623	WITHOUT_CLASSIFICATION	9.758369637649645E-6	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9999458527552274	WITHOUT_CLASSIFICATION	5.41472447726497E-5	IMPLEMENTATION
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999068614417591	WITHOUT_CLASSIFICATION	9.313855824091443E-5	IMPLEMENTATION
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999068614417591	WITHOUT_CLASSIFICATION	9.313855824091443E-5	IMPLEMENTATION
// look for mangling markers for compiled Ruby in method name	WITHOUT_CLASSIFICATION	0.9998663784191172	WITHOUT_CLASSIFICATION	1.3362158088288818E-4	IMPLEMENTATION
// if it's not a rescue or ensure, there's a frame associated, so decrement	WITHOUT_CLASSIFICATION	0.9999751247619008	WITHOUT_CLASSIFICATION	2.48752380993113E-5	IMPLEMENTATION
// look for __file__ method name for compiled roots	WITHOUT_CLASSIFICATION	0.99992281099632	WITHOUT_CLASSIFICATION	7.71890036801026E-5	IMPLEMENTATION
// All entries following removed node can stay // in list, but all preceding ones need to be // cloned.	WITHOUT_CLASSIFICATION	0.9999156819250002	WITHOUT_CLASSIFICATION	8.43180749998349E-5	IMPLEMENTATION
// required and optional only	WITHOUT_CLASSIFICATION	0.9999423250067092	WITHOUT_CLASSIFICATION	5.767499329087927E-5	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999807115130865	WITHOUT_CLASSIFICATION	1.9288486913379627E-5	IMPLEMENTATION
// look for mangling markers for bound, unframed methods in class name	WITHOUT_CLASSIFICATION	0.9999664046457367	WITHOUT_CLASSIFICATION	3.359535426319599E-5	IMPLEMENTATION
// set the binding's frame's "previous" file and line to current, so // trace will show who called the block	WITHOUT_CLASSIFICATION	0.9999868058137527	WITHOUT_CLASSIFICATION	1.3194186247302097E-5	IMPLEMENTATION
// framed invokers will have Ruby frames associated with them	WITHOUT_CLASSIFICATION	0.9999604582809908	WITHOUT_CLASSIFICATION	3.954171900915993E-5	IMPLEMENTATION
// look for mangling markers for bound, framed methods in class name	WITHOUT_CLASSIFICATION	0.9999684978362293	WITHOUT_CLASSIFICATION	3.1502163770567966E-5	IMPLEMENTATION
// unframed invokers have no Ruby frames, so pull from class name // but use current frame as file and line	WITHOUT_CLASSIFICATION	0.9999850277726146	WITHOUT_CLASSIFICATION	1.4972227385384081E-5	IMPLEMENTATION
// try to mine out a Ruby frame using our list of interpreter entry-point markers	WITHOUT_CLASSIFICATION	0.999974765259646	WITHOUT_CLASSIFICATION	2.523474035402649E-5	IMPLEMENTATION
// Frame matches one of our markers for "interpreted" calls	WITHOUT_CLASSIFICATION	0.9999241123359995	WITHOUT_CLASSIFICATION	7.588766400045145E-5	IMPLEMENTATION
// Frame is extraneous runtime information, skip it unless debug	WITHOUT_CLASSIFICATION	0.9999533812479128	WITHOUT_CLASSIFICATION	4.661875208714023E-5	IMPLEMENTATION
/*     * Determine what sort of assigner should be used for the provided 'iter' (e.g. block).     * Assigner provides just the right logic for assigning values to local parameters of the     * block.     *     * This method also has a second optimization which is to set 'noargblock' in the case that     * the block is a block which accepts no arguments.  The primary reason for this second     * optimization is that in the case of a yield with a RubyArray we will bypass some logic     * processing the RubyArray into a proper form (only to then not do anythign with it).  A     * secondary benefit is that a simple boolean seems to optimize by hotspot much faster     * than the zero arg assigner.     */	WITHOUT_CLASSIFICATION	0.9999999305755802	WITHOUT_CLASSIFICATION	6.942441982304954E-8	IMPLEMENTATION
// new scope for this invocation of the block, based on parent scope	WITHOUT_CLASSIFICATION	0.9999889926364872	WITHOUT_CLASSIFICATION	1.1007363512742014E-5	IMPLEMENTATION
// No argument blocks	WITHOUT_CLASSIFICATION	0.9999433945315664	WITHOUT_CLASSIFICATION	5.6605468433579E-5	IMPLEMENTATION
// just push the same empty scope, since we won't use one	WITHOUT_CLASSIFICATION	0.9999679051149263	WITHOUT_CLASSIFICATION	3.20948850736154E-5	IMPLEMENTATION
// Not sure if this is actually possible, but better safe than sorry	WITHOUT_CLASSIFICATION	0.9999531625960938	WITHOUT_CLASSIFICATION	4.683740390617785E-5	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999308979375534	WITHOUT_CLASSIFICATION	6.910206244663539E-5	IMPLEMENTATION
// This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).	WITHOUT_CLASSIFICATION	0.9999462682705974	WITHOUT_CLASSIFICATION	5.373172940259347E-5	IMPLEMENTATION
// Highest reserved id	WITHOUT_CLASSIFICATION	0.999899504819416	WITHOUT_CLASSIFICATION	1.0049518058388193E-4	IMPLEMENTATION
// binary typed calls	WITHOUT_CLASSIFICATION	0.999908185180589	WITHOUT_CLASSIFICATION	9.18148194109759E-5	IMPLEMENTATION
// id must always be even	WITHOUT_CLASSIFICATION	0.9999302767376208	WITHOUT_CLASSIFICATION	6.972326237915265E-5	IMPLEMENTATION
// with block pass	WITHOUT_CLASSIFICATION	0.9998853942540564	WITHOUT_CLASSIFICATION	1.1460574594360874E-4	IMPLEMENTATION
// no block	WITHOUT_CLASSIFICATION	0.9999041201588105	WITHOUT_CLASSIFICATION	9.587984118953057E-5	IMPLEMENTATION
// with block literal (iter)	WITHOUT_CLASSIFICATION	0.9999012897287517	WITHOUT_CLASSIFICATION	9.87102712482322E-5	IMPLEMENTATION
//            assert false : "can this happen?";	WITHOUT_CLASSIFICATION	0.9999741846101502	WITHOUT_CLASSIFICATION	2.5815389849859134E-5	IMPLEMENTATION
// if we have multiple asgn with just *args, need a special type for that	WITHOUT_CLASSIFICATION	0.9999651654639027	WITHOUT_CLASSIFICATION	3.483453609732715E-5	IMPLEMENTATION
// && args.getMaxArgumentsCount() != 1) {	WITHOUT_CLASSIFICATION	0.999919768938106	WITHOUT_CLASSIFICATION	8.023106189394793E-5	IMPLEMENTATION
//            return warnMultiReturnNil(ruby);	WITHOUT_CLASSIFICATION	0.9999882202385619	WITHOUT_CLASSIFICATION	1.1779761437988538E-5	IMPLEMENTATION
// ensure zero is devoted to no method name	WITHOUT_CLASSIFICATION	0.9999411173223526	WITHOUT_CLASSIFICATION	5.888267764736209E-5	IMPLEMENTATION
// predefine a few other methods we invoke directly elsewhere	WITHOUT_CLASSIFICATION	0.9999505752628102	WITHOUT_CLASSIFICATION	4.9424737189786225E-5	IMPLEMENTATION
// fast and safe respond_to? call site logic	WITHOUT_CLASSIFICATION	0.9999107608322845	WITHOUT_CLASSIFICATION	8.923916771548164E-5	IMPLEMENTATION
// Static scoping information for this scope	WITHOUT_CLASSIFICATION	0.9999810679511406	WITHOUT_CLASSIFICATION	1.8932048859447258E-5	IMPLEMENTATION
// Captured dynamic scopes	WITHOUT_CLASSIFICATION	0.9999135723144006	WITHOUT_CLASSIFICATION	8.642768559939216E-5	IMPLEMENTATION
// Backref for $~, $1, etc	WITHOUT_CLASSIFICATION	0.999900068463888	WITHOUT_CLASSIFICATION	9.99315361120258E-5	IMPLEMENTATION
// Lastline	WITHOUT_CLASSIFICATION	0.999878772768345	WITHOUT_CLASSIFICATION	1.2122723165491447E-4	IMPLEMENTATION
// No binding scope so we should create one	WITHOUT_CLASSIFICATION	0.9999637858837626	WITHOUT_CLASSIFICATION	3.621411623756317E-5	IMPLEMENTATION
// bindings scopes must always be ManyVars scopes since evals can grow them	WITHOUT_CLASSIFICATION	0.9999324256251216	WITHOUT_CLASSIFICATION	6.75743748782854E-5	IMPLEMENTATION
// Helper function to give a good view of current dynamic scope with captured scopes	WITHOUT_CLASSIFICATION	0.9999852670902808	WITHOUT_CLASSIFICATION	1.4732909719196855E-5	IMPLEMENTATION
// try count specific args to determine required	WITHOUT_CLASSIFICATION	0.9999606086789797	WITHOUT_CLASSIFICATION	3.939132102022508E-5	IMPLEMENTATION
// Some helper functions:	WITHOUT_CLASSIFICATION	0.999933671433097	WITHOUT_CLASSIFICATION	6.632856690295434E-5	IMPLEMENTATION
// silently ignore	WITHOUT_CLASSIFICATION	0.9999462567194741	WITHOUT_CLASSIFICATION	5.374328052578843E-5	IMPLEMENTATION
// used by compiler	WITHOUT_CLASSIFICATION	0.9999319073363986	WITHOUT_CLASSIFICATION	6.809266360140194E-5	IMPLEMENTATION
// initialize the static settings to determine which factory to use	WITHOUT_CLASSIFICATION	0.9999976077942391	WITHOUT_CLASSIFICATION	2.392205760832792E-6	IMPLEMENTATION
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999092346308227	WITHOUT_CLASSIFICATION	9.076536917722101E-5	IMPLEMENTATION
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9999085247824625	WITHOUT_CLASSIFICATION	9.147521753758105E-5	IMPLEMENTATION
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999048414871031	WITHOUT_CLASSIFICATION	9.515851289685575E-5	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999438391499813	WITHOUT_CLASSIFICATION	5.616085001873667E-5	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999326986605658	WITHOUT_CLASSIFICATION	6.730133943423197E-5	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999663680437765	WITHOUT_CLASSIFICATION	3.363195622348929E-5	IMPLEMENTATION
// Note: In Ruby 1.9 all of this logic can go away since they will require explicit // bindings for evals.	WITHOUT_CLASSIFICATION	0.999931335844101	WITHOUT_CLASSIFICATION	6.866415589904757E-5	IMPLEMENTATION
// We only define one special dynamic scope per 'logical' binding.  So all bindings for // the same scope should share the same dynamic scope.  This allows multiple evals with // different different bindings in the same scope to see the same stuff.	WITHOUT_CLASSIFICATION	0.9999857237074345	WITHOUT_CLASSIFICATION	1.4276292565499459E-5	IMPLEMENTATION
// If the next scope out has the same binding scope as this scope it means // we are evaling within an eval and in that case we should be sharing the same // binding scope.	WITHOUT_CLASSIFICATION	0.9999914783337258	WITHOUT_CLASSIFICATION	8.521666274264195E-6	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.999984913311173	WITHOUT_CLASSIFICATION	1.5086688826886304E-5	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.999984913311173	WITHOUT_CLASSIFICATION	1.5086688826886304E-5	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999561679013876	WITHOUT_CLASSIFICATION	4.3832098612307356E-5	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999561679013876	WITHOUT_CLASSIFICATION	4.3832098612307356E-5	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999561679013876	WITHOUT_CLASSIFICATION	4.3832098612307356E-5	IMPLEMENTATION
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999375647515278	WITHOUT_CLASSIFICATION	6.243524847213732E-5	IMPLEMENTATION
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999375647515278	WITHOUT_CLASSIFICATION	6.243524847213732E-5	IMPLEMENTATION
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999211379763054	WITHOUT_CLASSIFICATION	7.886202369459123E-5	IMPLEMENTATION
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999211379763054	WITHOUT_CLASSIFICATION	7.886202369459123E-5	IMPLEMENTATION
/*     * This is the proper behavior for all non-expanded assigners which have a pre > 0.  The rest     * override this.     */	WITHOUT_CLASSIFICATION	0.9999944497288561	WITHOUT_CLASSIFICATION	5.550271143977092E-6	IMPLEMENTATION
/*     * This is the proper behavior for all non-expanded assigners.     */	WITHOUT_CLASSIFICATION	0.9999886696989261	WITHOUT_CLASSIFICATION	1.1330301073865606E-5	IMPLEMENTATION
// prefill ?	WITHOUT_CLASSIFICATION	0.9998914794442588	WITHOUT_CLASSIFICATION	1.0852055574115711E-4	IMPLEMENTATION
// prefill ?	WITHOUT_CLASSIFICATION	0.9998914794442588	WITHOUT_CLASSIFICATION	1.0852055574115711E-4	IMPLEMENTATION
// MUST be called from synchronized/locked block! // should only be called by variableTableStore/variableTableFastStore	WITHOUT_CLASSIFICATION	0.9999810519068898	WITHOUT_CLASSIFICATION	1.894809311025289E-5	IMPLEMENTATION
// retrieve method // module // name	WITHOUT_CLASSIFICATION	0.9999697510222539	WITHOUT_CLASSIFICATION	3.0248977746039442E-5	IMPLEMENTATION
// call is ok, punch it!	WITHOUT_CLASSIFICATION	0.999896204970693	WITHOUT_CLASSIFICATION	1.0379502930705586E-4	IMPLEMENTATION
// if undefined, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999340294583734	WITHOUT_CLASSIFICATION	6.597054162661727E-5	IMPLEMENTATION
// if we're not attempting to invoke method_missing and method is not visible, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999845596459377	WITHOUT_CLASSIFICATION	1.5440354062311985E-5	IMPLEMENTATION
// method object already present, push various args // tc // self // klazz // name	WITHOUT_CLASSIFICATION	0.9999692329785251	WITHOUT_CLASSIFICATION	3.0767021474883705E-5	IMPLEMENTATION
// if it's method_missing, just invoke it	WITHOUT_CLASSIFICATION	0.9999432343433663	WITHOUT_CLASSIFICATION	5.676565663376704E-5	IMPLEMENTATION
// invoke callMethodMissing	WITHOUT_CLASSIFICATION	0.9999249322200738	WITHOUT_CLASSIFICATION	7.506777992618546E-5	IMPLEMENTATION
// caller	WITHOUT_CLASSIFICATION	0.99645381872707	WITHOUT_CLASSIFICATION	0.003546181272929962	IMPLEMENTATION
// calltype // block	WITHOUT_CLASSIFICATION	0.9998845805132446	WITHOUT_CLASSIFICATION	1.1541948675536045E-4	IMPLEMENTATION
// if no exception raised, jump to end to leave result on stack for return	WITHOUT_CLASSIFICATION	0.9999861879652487	WITHOUT_CLASSIFICATION	1.38120347512286E-5	IMPLEMENTATION
// load arity for check	WITHOUT_CLASSIFICATION	0.9999373229940847	WITHOUT_CLASSIFICATION	6.26770059152706E-5	IMPLEMENTATION
// throw	WITHOUT_CLASSIFICATION	0.9964963267172852	WITHOUT_CLASSIFICATION	0.003503673282714757	IMPLEMENTATION
// load arity for error	WITHOUT_CLASSIFICATION	0.9999359366044881	WITHOUT_CLASSIFICATION	6.406339551197304E-5	IMPLEMENTATION
// arity ok, continue	WITHOUT_CLASSIFICATION	0.9999087223102613	WITHOUT_CLASSIFICATION	9.127768973865118E-5	IMPLEMENTATION
//InvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9999166713944095	WITHOUT_CLASSIFICATION	8.332860559049598E-5	IMPLEMENTATION
// ENEBO: Perhaps slow but simple for now	WITHOUT_CLASSIFICATION	0.9998767725592266	WITHOUT_CLASSIFICATION	1.232274407734999E-4	IMPLEMENTATION
// FastInvocationCallback	WITHOUT_CLASSIFICATION	0.9999138060420039	WITHOUT_CLASSIFICATION	8.619395799617827E-5	IMPLEMENTATION
// InvocationCallback	WITHOUT_CLASSIFICATION	0.9999146181349278	WITHOUT_CLASSIFICATION	8.538186507224386E-5	IMPLEMENTATION
//DumpingInvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9999177987363863	WITHOUT_CLASSIFICATION	8.220126361376177E-5	IMPLEMENTATION
// for fast lookup: encoding entry => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999513395581856	WITHOUT_CLASSIFICATION	4.86604418144768E-5	IMPLEMENTATION
// for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.999943603396917	WITHOUT_CLASSIFICATION	5.639660308305081E-5	IMPLEMENTATION
// load the encoding	WITHOUT_CLASSIFICATION	0.9999607387218898	WITHOUT_CLASSIFICATION	3.926127811013886E-5	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999466162637294	WITHOUT_CLASSIFICATION	5.338373627067679E-5	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999428622224031	WITHOUT_CLASSIFICATION	5.713777759686735E-5	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999419284184863	WITHOUT_CLASSIFICATION	5.8071581513672285E-5	IMPLEMENTATION
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999396971180472	WITHOUT_CLASSIFICATION	6.030288195292436E-5	IMPLEMENTATION
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999397789360515	WITHOUT_CLASSIFICATION	6.022106394843379E-5	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999454315390898	WITHOUT_CLASSIFICATION	5.4568460910144554E-5	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999415941906408	WITHOUT_CLASSIFICATION	5.840580935931649E-5	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999406396644839	WITHOUT_CLASSIFICATION	5.936033551601293E-5	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999449220143053	WITHOUT_CLASSIFICATION	5.5077985694594836E-5	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999410488373054	WITHOUT_CLASSIFICATION	5.8951162694541194E-5	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999940085398973	WITHOUT_CLASSIFICATION	5.991460102689645E-5	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999410488373054	WITHOUT_CLASSIFICATION	5.8951162694541194E-5	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999410488373054	WITHOUT_CLASSIFICATION	5.8951162694541194E-5	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999410488373054	WITHOUT_CLASSIFICATION	5.8951162694541194E-5	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999410488373054	WITHOUT_CLASSIFICATION	5.8951162694541194E-5	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999410488373054	WITHOUT_CLASSIFICATION	5.8951162694541194E-5	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999410488373054	WITHOUT_CLASSIFICATION	5.8951162694541194E-5	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999940085398973	WITHOUT_CLASSIFICATION	5.991460102689645E-5	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999940085398973	WITHOUT_CLASSIFICATION	5.991460102689645E-5	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999940085398973	WITHOUT_CLASSIFICATION	5.991460102689645E-5	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999940085398973	WITHOUT_CLASSIFICATION	5.991460102689645E-5	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999940085398973	WITHOUT_CLASSIFICATION	5.991460102689645E-5	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999940085398973	WITHOUT_CLASSIFICATION	5.991460102689645E-5	IMPLEMENTATION
// If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs	WITHOUT_CLASSIFICATION	0.9999534387662082	WITHOUT_CLASSIFICATION	4.6561233791722754E-5	IMPLEMENTATION
// BreakJump, ThreadContext	WITHOUT_CLASSIFICATION	0.9999117367188479	WITHOUT_CLASSIFICATION	8.826328115201784E-5	IMPLEMENTATION
// ThreadContext	WITHOUT_CLASSIFICATION	0.9999024245098571	WITHOUT_CLASSIFICATION	9.757549014286191E-5	IMPLEMENTATION
// BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999277930394973	WITHOUT_CLASSIFICATION	7.220696050270396E-5	IMPLEMENTATION
// Make Java class files in the jar reachable from Ruby	WITHOUT_CLASSIFICATION	0.999981156053183	WITHOUT_CLASSIFICATION	1.8843946816883057E-5	IMPLEMENTATION
// RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999290171163039	WITHOUT_CLASSIFICATION	7.098288369618896E-5	IMPLEMENTATION
// add all startup load paths to the list first	WITHOUT_CLASSIFICATION	0.9999718935303137	WITHOUT_CLASSIFICATION	2.8106469686316795E-5	IMPLEMENTATION
// if it's a compiled JRuby script, instantiate and run it	WITHOUT_CLASSIFICATION	0.999967954617752	WITHOUT_CLASSIFICATION	3.204538224803751E-5	IMPLEMENTATION
// wrap in try/catch for security exceptions in an applet	WITHOUT_CLASSIFICATION	0.9999369556284528	WITHOUT_CLASSIFICATION	6.30443715472432E-5	IMPLEMENTATION
// add $RUBYLIB paths	WITHOUT_CLASSIFICATION	0.999947610442277	WITHOUT_CLASSIFICATION	5.238955772312321E-5	IMPLEMENTATION
// Empty paths do not need to be added	WITHOUT_CLASSIFICATION	0.9992499978167011	WITHOUT_CLASSIFICATION	7.500021832989176E-4	IMPLEMENTATION
// "." dir is used for relative path loads from a given file, as in require '../foo/bar'	WITHOUT_CLASSIFICATION	0.9999701573525286	WITHOUT_CLASSIFICATION	2.984264747141304E-5	IMPLEMENTATION
// Add 1.8 libs	WITHOUT_CLASSIFICATION	0.999934054282524	WITHOUT_CLASSIFICATION	6.594571747597862E-5	IMPLEMENTATION
// Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.	WITHOUT_CLASSIFICATION	0.9999938636690183	WITHOUT_CLASSIFICATION	6.136330981717992E-6	IMPLEMENTATION
// Library has already been loaded in some form, bail out	WITHOUT_CLASSIFICATION	0.9999604497387119	WITHOUT_CLASSIFICATION	3.955026128806971E-5	IMPLEMENTATION
// We don't want a package name beginning with dots, so we remove them	WITHOUT_CLASSIFICATION	0.9999844580243324	WITHOUT_CLASSIFICATION	1.5541975667662187E-5	IMPLEMENTATION
// If there is a jar-file with the required name, we add this to the class path.	WITHOUT_CLASSIFICATION	0.9999863735730551	WITHOUT_CLASSIFICATION	1.362642694491223E-5	IMPLEMENTATION
// quietly try to load the class	WITHOUT_CLASSIFICATION	0.9999773093753304	WITHOUT_CLASSIFICATION	2.2690624669699456E-5	IMPLEMENTATION
// If there was a good library before, we go back to that	WITHOUT_CLASSIFICATION	0.9999783468155141	WITHOUT_CLASSIFICATION	2.165318448580095E-5	IMPLEMENTATION
// no library or extension found, try to load directly as a class	WITHOUT_CLASSIFICATION	0.9999831070007634	WITHOUT_CLASSIFICATION	1.6892999236589976E-5	IMPLEMENTATION
// if an extension is specified, try more targetted searches	WITHOUT_CLASSIFICATION	0.9999750343226596	WITHOUT_CLASSIFICATION	2.496567734051229E-5	IMPLEMENTATION
// signed short, big-endian	WITHOUT_CLASSIFICATION	0.9999072806249057	WITHOUT_CLASSIFICATION	9.27193750941797E-5	IMPLEMENTATION
// source extensions	WITHOUT_CLASSIFICATION	0.9999215570033623	WITHOUT_CLASSIFICATION	7.844299663772903E-5	IMPLEMENTATION
// We don't support .so, but some stdlib require .so directly // replace it with .jar to look for an extension type we do support	WITHOUT_CLASSIFICATION	0.9999348865910097	WITHOUT_CLASSIFICATION	6.511340899026571E-5	IMPLEMENTATION
// This code exploits the fact that all .jar files will be found for the JarredScript feature. // This is where the basic extension mechanism gets fixed	WITHOUT_CLASSIFICATION	0.999991395298396	WITHOUT_CLASSIFICATION	8.604701604058426E-6	IMPLEMENTATION
// Make the class name look nice, by splitting on _ and capitalize each segment, then joining // the, together without anything separating them, and last put on "Service" at the end.	WITHOUT_CLASSIFICATION	0.9999940495025971	WITHOUT_CLASSIFICATION	5.950497402948967E-6	IMPLEMENTATION
// It's _really_ expensive to check that the class actually exists in the Jar, so // we don't do that now.	WITHOUT_CLASSIFICATION	0.9999915720262117	WITHOUT_CLASSIFICATION	8.427973788231606E-6	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999397863456495	WITHOUT_CLASSIFICATION	6.021365435045777E-5	IMPLEMENTATION
// extension extensions	WITHOUT_CLASSIFICATION	0.9999539475807712	WITHOUT_CLASSIFICATION	4.605241922874878E-5	IMPLEMENTATION
// unknown extension, fall back to search with extensions	WITHOUT_CLASSIFICATION	0.9999657936810143	WITHOUT_CLASSIFICATION	3.420631898566375E-5	IMPLEMENTATION
// try all extensions	WITHOUT_CLASSIFICATION	0.9999515791781014	WITHOUT_CLASSIFICATION	4.842082189865501E-5	IMPLEMENTATION
// if a source extension is specified, try all source extensions	WITHOUT_CLASSIFICATION	0.9999762315813591	WITHOUT_CLASSIFICATION	2.3768418640976466E-5	IMPLEMENTATION
// unknown extension, fall back to exact search	WITHOUT_CLASSIFICATION	0.9999552635043314	WITHOUT_CLASSIFICATION	4.4736495668503326E-5	IMPLEMENTATION
// try only literal search	WITHOUT_CLASSIFICATION	0.9999498061884262	WITHOUT_CLASSIFICATION	5.019381157376934E-5	IMPLEMENTATION
// attempt to load the found library	WITHOUT_CLASSIFICATION	0.9999756244920327	WITHOUT_CLASSIFICATION	2.4375507967348702E-5	IMPLEMENTATION
// otherwise load the library we've found	WITHOUT_CLASSIFICATION	0.9999577304083692	WITHOUT_CLASSIFICATION	4.226959163075279E-5	IMPLEMENTATION
// allow MainExitException to propagate out for exec and friends	WITHOUT_CLASSIFICATION	0.9999683188824416	WITHOUT_CLASSIFICATION	3.16811175583645E-5	IMPLEMENTATION
// Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".	WITHOUT_CLASSIFICATION	0.9999586414760947	WITHOUT_CLASSIFICATION	4.1358523905288834E-5	IMPLEMENTATION
// check current directory; if file exists, retrieve URL and return resource	WITHOUT_CLASSIFICATION	0.9999964489905794	WITHOUT_CLASSIFICATION	3.5510094207222847E-6	IMPLEMENTATION
// if a jar or file URL, return load service resource directly without further searching	WITHOUT_CLASSIFICATION	0.9999824462337983	WITHOUT_CLASSIFICATION	1.7553766201687254E-5	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999527239251945	WITHOUT_CLASSIFICATION	4.7276074805385735E-5	IMPLEMENTATION
// if it's a ./ baseName, use CWD logic	WITHOUT_CLASSIFICATION	0.9999196601667121	WITHOUT_CLASSIFICATION	8.033983328798284E-5	IMPLEMENTATION
// if given path is absolute, just try it as-is (with extensions) and no load path	WITHOUT_CLASSIFICATION	0.9999529326055469	WITHOUT_CLASSIFICATION	4.7067394453162884E-5	IMPLEMENTATION
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9999829857039404	WITHOUT_CLASSIFICATION	1.7014296059612166E-5	IMPLEMENTATION
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9999829857039404	WITHOUT_CLASSIFICATION	1.7014296059612166E-5	IMPLEMENTATION
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999184110896915	WITHOUT_CLASSIFICATION	8.15889103085391E-5	IMPLEMENTATION
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999184110896915	WITHOUT_CLASSIFICATION	8.15889103085391E-5	IMPLEMENTATION
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999887886332722	WITHOUT_CLASSIFICATION	1.1211366727796949E-5	IMPLEMENTATION
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999887886332722	WITHOUT_CLASSIFICATION	1.1211366727796949E-5	IMPLEMENTATION
//                    actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));	WITHOUT_CLASSIFICATION	0.9999672912275889	WITHOUT_CLASSIFICATION	3.270877241111102E-5	IMPLEMENTATION
// handle security-sensitive case	WITHOUT_CLASSIFICATION	0.9998960957028048	WITHOUT_CLASSIFICATION	1.0390429719518975E-4	IMPLEMENTATION
// if entry is an empty string, skip it	WITHOUT_CLASSIFICATION	0.9999769772249797	WITHOUT_CLASSIFICATION	2.3022775020292284E-5	IMPLEMENTATION
// if entry starts with a slash, skip it since classloader resources never start with a /	WITHOUT_CLASSIFICATION	0.9999809709709798	WITHOUT_CLASSIFICATION	1.9029029020271158E-5	IMPLEMENTATION
// otherwise, try to load from classpath (Note: Jar resources always uses '/')	WITHOUT_CLASSIFICATION	0.9999790329109413	WITHOUT_CLASSIFICATION	2.0967089058759612E-5	IMPLEMENTATION
// Make sure this is not a directory or unavailable in some way	WITHOUT_CLASSIFICATION	0.9999905156173194	WITHOUT_CLASSIFICATION	9.484382680606114E-6	IMPLEMENTATION
// signed short, native	WITHOUT_CLASSIFICATION	0.9998810571247901	WITHOUT_CLASSIFICATION	1.1894287520990361E-4	IMPLEMENTATION
// If we fail to find as a normal Ruby script, we try to find as an extension, // checking for a builtin first.	WITHOUT_CLASSIFICATION	0.9999839102939009	WITHOUT_CLASSIFICATION	1.6089706099089274E-5	IMPLEMENTATION
// write `I' instance var signet if class is NOT a direct subclass of Object	WITHOUT_CLASSIFICATION	0.9999801432765637	WITHOUT_CLASSIFICATION	1.985672343626592E-5	IMPLEMENTATION
// if name starts with a / we're done (classloader resources won't load with an initial /)	WITHOUT_CLASSIFICATION	0.9999844562067073	WITHOUT_CLASSIFICATION	1.5543793292692902E-5	IMPLEMENTATION
// Look in classpath next (we do not use File as a test since UNC names will match) // Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")	WITHOUT_CLASSIFICATION	0.9999900770306954	WITHOUT_CLASSIFICATION	9.922969304587586E-6	IMPLEMENTATION
/* Directories and unavailable resources are not able to open a stream. */	WITHOUT_CLASSIFICATION	0.9999588217697724	WITHOUT_CLASSIFICATION	4.1178230227710524E-5	IMPLEMENTATION
// Try to load from classpath without prefix. "A/b.rb" will not load as  // "./A/b.rb" in a jar file.	WITHOUT_CLASSIFICATION	0.9999547651741562	WITHOUT_CLASSIFICATION	4.523482584382309E-5	IMPLEMENTATION
// object has instance vars and isn't a class, get a snapshot to be marshalled // and output the ivar header here	WITHOUT_CLASSIFICATION	0.9999919020472686	WITHOUT_CLASSIFICATION	8.097952731294072E-6	IMPLEMENTATION
// flush afer whole dump is complete	WITHOUT_CLASSIFICATION	0.9998345781969888	WITHOUT_CLASSIFICATION	1.6542180301102526E-4	IMPLEMENTATION
//            write('S');	WITHOUT_CLASSIFICATION	0.9999625363224646	WITHOUT_CLASSIFICATION	3.746367753538643E-5	IMPLEMENTATION
// switch on the object's *native type*. This allows use-defined // classes that have extended core native types to piggyback on their // marshalling logic.	WITHOUT_CLASSIFICATION	0.999976174052945	WITHOUT_CLASSIFICATION	2.382594705493714E-5	IMPLEMENTATION
// object is a custom class that extended one of the native types other than Object	WITHOUT_CLASSIFICATION	0.9999843525664477	WITHOUT_CLASSIFICATION	1.5647433552373335E-5	IMPLEMENTATION
// We do not want to capture cached methods	WITHOUT_CLASSIFICATION	0.9999524444689508	WITHOUT_CLASSIFICATION	4.755553104914921E-5	IMPLEMENTATION
// w_symbol	WITHOUT_CLASSIFICATION	0.9998770544528668	WITHOUT_CLASSIFICATION	1.229455471332046E-4	IMPLEMENTATION
// w_unique	WITHOUT_CLASSIFICATION	0.9998764322213834	WITHOUT_CLASSIFICATION	1.235677786164914E-4	IMPLEMENTATION
// call the proc, but not for symbols	WITHOUT_CLASSIFICATION	0.9999388858567262	WITHOUT_CLASSIFICATION	6.111414327390482E-5	IMPLEMENTATION
// Major // Minor	WITHOUT_CLASSIFICATION	0.9998803097548574	WITHOUT_CLASSIFICATION	1.1969024514256864E-4	IMPLEMENTATION
// any ivars, since we don't have __attached__ ivar now	WITHOUT_CLASSIFICATION	0.9999522857483654	WITHOUT_CLASSIFICATION	4.771425163471296E-5	IMPLEMENTATION
// "hashdef" object, a hash with a default	WITHOUT_CLASSIFICATION	0.9999744840128809	WITHOUT_CLASSIFICATION	2.5515987119058875E-5	IMPLEMENTATION
// All "C" marshalled objects descend from core classes, which are all RubyObject	WITHOUT_CLASSIFICATION	0.9999755875068432	WITHOUT_CLASSIFICATION	2.4412493156760446E-5	IMPLEMENTATION
// sic	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999749527317526	WITHOUT_CLASSIFICATION	2.5047268247386708E-5	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999749527317526	WITHOUT_CLASSIFICATION	2.5047268247386708E-5	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999749527317526	WITHOUT_CLASSIFICATION	2.5047268247386708E-5	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999824466023679	WITHOUT_CLASSIFICATION	1.755339763207016E-5	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999824466023679	WITHOUT_CLASSIFICATION	1.755339763207016E-5	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999308979375534	WITHOUT_CLASSIFICATION	6.910206244663539E-5	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999308979375534	WITHOUT_CLASSIFICATION	6.910206244663539E-5	IMPLEMENTATION
/*     * If we are setting post arguments we can assume there are no pre or others     */	WITHOUT_CLASSIFICATION	0.9999980023569305	WITHOUT_CLASSIFICATION	1.9976430695467017E-6	IMPLEMENTATION
// XXX: 0xffff0000 on BE?	WITHOUT_CLASSIFICATION	0.9998711039104338	WITHOUT_CLASSIFICATION	1.2889608956626834E-4	IMPLEMENTATION
// unsigned short, native	WITHOUT_CLASSIFICATION	0.999887049558957	WITHOUT_CLASSIFICATION	1.1295044104308565E-4	IMPLEMENTATION
// int, native // long, native	WITHOUT_CLASSIFICATION	0.999910732625969	WITHOUT_CLASSIFICATION	8.926737403110355E-5	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999749527317526	WITHOUT_CLASSIFICATION	2.5047268247386708E-5	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999749527317526	WITHOUT_CLASSIFICATION	2.5047268247386708E-5	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999749527317526	WITHOUT_CLASSIFICATION	2.5047268247386708E-5	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999824466023679	WITHOUT_CLASSIFICATION	1.755339763207016E-5	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999824466023679	WITHOUT_CLASSIFICATION	1.755339763207016E-5	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999824466023679	WITHOUT_CLASSIFICATION	1.755339763207016E-5	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999308979375534	WITHOUT_CLASSIFICATION	6.910206244663539E-5	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999308979375534	WITHOUT_CLASSIFICATION	6.910206244663539E-5	IMPLEMENTATION
// Look for slash, starting from 'start' position, until 'end'.	WITHOUT_CLASSIFICATION	0.9999691746288483	WITHOUT_CLASSIFICATION	3.0825371151822564E-5	IMPLEMENTATION
// Our values holder (name of variables are kept in staticScope)	WITHOUT_CLASSIFICATION	0.9999715721340433	WITHOUT_CLASSIFICATION	2.8427865956623724E-5	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999894111398464	WITHOUT_CLASSIFICATION	1.0588860153627184E-5	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999894111398464	WITHOUT_CLASSIFICATION	1.0588860153627184E-5	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999894111398464	WITHOUT_CLASSIFICATION	1.0588860153627184E-5	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999894111398464	WITHOUT_CLASSIFICATION	1.0588860153627184E-5	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999894111398464	WITHOUT_CLASSIFICATION	1.0588860153627184E-5	IMPLEMENTATION
// SunSignalFacade	WITHOUT_CLASSIFICATION	0.9998792093864113	WITHOUT_CLASSIFICATION	1.2079061358864935E-4	IMPLEMENTATION
// All braces pushed..	WITHOUT_CLASSIFICATION	0.9999076939215873	WITHOUT_CLASSIFICATION	9.230607841259901E-5	IMPLEMENTATION
/* failed : try next recursion */	WITHOUT_CLASSIFICATION	0.9999238571750431	WITHOUT_CLASSIFICATION	7.61428249569736E-5	IMPLEMENTATION
// leftToken made us start as nest 1	WITHOUT_CLASSIFICATION	0.9999471932884806	WITHOUT_CLASSIFICATION	5.2806711519424714E-5	IMPLEMENTATION
// are we at '**/'	WITHOUT_CLASSIFICATION	0.9998894722243986	WITHOUT_CLASSIFICATION	1.105277756014487E-4	IMPLEMENTATION
// No or mismatched braces..Move along..nothing to see here	WITHOUT_CLASSIFICATION	0.9999684329469336	WITHOUT_CLASSIFICATION	3.156705306634201E-5	IMPLEMENTATION
// not enough bytes	WITHOUT_CLASSIFICATION	0.9994461404041145	WITHOUT_CLASSIFICATION	5.538595958855812E-4	IMPLEMENTATION
// Get index of last read byte	WITHOUT_CLASSIFICATION	0.9999327008587616	WITHOUT_CLASSIFICATION	6.729914123836579E-5	IMPLEMENTATION
// skip inner braces	WITHOUT_CLASSIFICATION	0.9999277614796728	WITHOUT_CLASSIFICATION	7.22385203272196E-5	IMPLEMENTATION
/*     * Process {}'s (example: Dir.glob("{jruby,jython}/README*")      */	WITHOUT_CLASSIFICATION	0.9999812907839392	WITHOUT_CLASSIFICATION	1.870921606089375E-5	IMPLEMENTATION
/* complete, according to Posix.2 */	WITHOUT_CLASSIFICATION	0.9998798249670409	WITHOUT_CLASSIFICATION	1.2017503295917874E-4	IMPLEMENTATION
/* Only accept an open brace if there is a close */	WITHOUT_CLASSIFICATION	0.9999696902964669	WITHOUT_CLASSIFICATION	3.0309703533070408E-5	IMPLEMENTATION
/* brace to match it.  Bracket expressions must be */	WITHOUT_CLASSIFICATION	0.9999280467449848	WITHOUT_CLASSIFICATION	7.195325501513758E-5	IMPLEMENTATION
// index of left-most brace // index of right-most brace	WITHOUT_CLASSIFICATION	0.9999183469995612	WITHOUT_CLASSIFICATION	8.165300043890308E-5	IMPLEMENTATION
// Length check is a hack.  We should not be reeiving "" as a filename ever. 	WITHOUT_CLASSIFICATION	0.9999618607877095	WITHOUT_CLASSIFICATION	3.813921229045541E-5	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9998836327782731	WITHOUT_CLASSIFICATION	1.1636722172689496E-4	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9998836327782731	WITHOUT_CLASSIFICATION	1.1636722172689496E-4	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9998836327782731	WITHOUT_CLASSIFICATION	1.1636722172689496E-4	IMPLEMENTATION
// Pickaxe says @ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9999668341464609	WITHOUT_CLASSIFICATION	3.316585353902144E-5	IMPLEMENTATION
// Pickaxe says @@ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9999668341464609	WITHOUT_CLASSIFICATION	3.316585353902144E-5	IMPLEMENTATION
// SimpleSampler	WITHOUT_CLASSIFICATION	0.9998919143898394	WITHOUT_CLASSIFICATION	1.0808561016072497E-4	IMPLEMENTATION
/*     * convert into longs, returning unsigned 64-bit values as signed longs     * ( num2long raises a RangeError on values > Long.MAX_VALUE )     */	WITHOUT_CLASSIFICATION	0.9999916124035049	WITHOUT_CLASSIFICATION	8.387596495056005E-6	IMPLEMENTATION
// b64_xtable for decoding Base 64	WITHOUT_CLASSIFICATION	0.9999315655462326	WITHOUT_CLASSIFICATION	6.843445376745479E-5	IMPLEMENTATION
// single precision, little-endian	WITHOUT_CLASSIFICATION	0.9999186238813943	WITHOUT_CLASSIFICATION	8.137611860572247E-5	IMPLEMENTATION
// single precision, big-endian	WITHOUT_CLASSIFICATION	0.9999186098497238	WITHOUT_CLASSIFICATION	8.139015027610343E-5	IMPLEMENTATION
// single precision, native	WITHOUT_CLASSIFICATION	0.999894203497939	WITHOUT_CLASSIFICATION	1.0579650206104442E-4	IMPLEMENTATION
// single precision, native // single precision, native	WITHOUT_CLASSIFICATION	0.9998689118418497	WITHOUT_CLASSIFICATION	1.3108815815024777E-4	IMPLEMENTATION
// double precision, little-endian	WITHOUT_CLASSIFICATION	0.9999739263503417	WITHOUT_CLASSIFICATION	2.6073649658321157E-5	IMPLEMENTATION
// double precision, big-endian	WITHOUT_CLASSIFICATION	0.999973921854218	WITHOUT_CLASSIFICATION	2.6078145782022118E-5	IMPLEMENTATION
// double precision, native	WITHOUT_CLASSIFICATION	0.9999661012744121	WITHOUT_CLASSIFICATION	3.3898725587906795E-5	IMPLEMENTATION
// signed short, little-endian	WITHOUT_CLASSIFICATION	0.9999074073879652	WITHOUT_CLASSIFICATION	9.259261203475023E-5	IMPLEMENTATION
// signed char	WITHOUT_CLASSIFICATION	0.9998809935963773	WITHOUT_CLASSIFICATION	1.1900640362279272E-4	IMPLEMENTATION
// unsigned char	WITHOUT_CLASSIFICATION	0.999886989230793	WITHOUT_CLASSIFICATION	1.1301076920708105E-4	IMPLEMENTATION
// long, little-endian	WITHOUT_CLASSIFICATION	0.9999442354537704	WITHOUT_CLASSIFICATION	5.576454622953519E-5	IMPLEMENTATION
// long, big-endian	WITHOUT_CLASSIFICATION	0.9999334039534078	WITHOUT_CLASSIFICATION	6.659604659217035E-5	IMPLEMENTATION
// unsigned int, native	WITHOUT_CLASSIFICATION	0.9998818799502812	WITHOUT_CLASSIFICATION	1.1812004971876425E-4	IMPLEMENTATION
// int, native	WITHOUT_CLASSIFICATION	0.9998753070195895	WITHOUT_CLASSIFICATION	1.2469298041060427E-4	IMPLEMENTATION
// 64-bit number, native (as fixnum)	WITHOUT_CLASSIFICATION	0.9998581449209072	WITHOUT_CLASSIFICATION	1.418550790929024E-4	IMPLEMENTATION
// How many occurrences of 'type' we want	WITHOUT_CLASSIFICATION	0.9999090062241581	WITHOUT_CLASSIFICATION	9.099377584189671E-5	IMPLEMENTATION
// See if we have a converter for the job...	WITHOUT_CLASSIFICATION	0.9999737419687126	WITHOUT_CLASSIFICATION	2.625803128739729E-5	IMPLEMENTATION
// Otherwise the unpack should be here...	WITHOUT_CLASSIFICATION	0.9999245281730103	WITHOUT_CLASSIFICATION	7.547182698976799E-5	IMPLEMENTATION
// Possible Checksum Byte	WITHOUT_CLASSIFICATION	0.9999045277462326	WITHOUT_CLASSIFICATION	9.547225376737462E-5	IMPLEMENTATION
// obtain a	WITHOUT_CLASSIFICATION	0.9998793075805161	WITHOUT_CLASSIFICATION	1.2069241948379106E-4	IMPLEMENTATION
// obtain b	WITHOUT_CLASSIFICATION	0.9998791875796978	WITHOUT_CLASSIFICATION	1.208124203021809E-4	IMPLEMENTATION
// obtain c	WITHOUT_CLASSIFICATION	0.9998792742373807	WITHOUT_CLASSIFICATION	1.2072576261938428E-4	IMPLEMENTATION
// obtain d	WITHOUT_CLASSIFICATION	0.9998789361613774	WITHOUT_CLASSIFICATION	1.2106383862268898E-4	IMPLEMENTATION
/*encode.limit() - */	WITHOUT_CLASSIFICATION	0.9998974623403718	WITHOUT_CLASSIFICATION	1.0253765962814818E-4	IMPLEMENTATION
/* 1 */	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
/* 2 */	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
/* 3 */	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
/* 4 */	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
/* 5 */	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
/* 6 */	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
/* 7 */	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
// Skip all whitespace in pack format string	WITHOUT_CLASSIFICATION	0.9999564975200931	WITHOUT_CLASSIFICATION	4.350247990693512E-5	IMPLEMENTATION
// Skip embedded comments in pack format string	WITHOUT_CLASSIFICATION	0.9999698987639082	WITHOUT_CLASSIFICATION	3.0101236091768235E-5	IMPLEMENTATION
// In case when the number of occurences is // explicitly specified, we have to read up // the remaining garbage after the '\0' to // satisfy the requested pattern.	WITHOUT_CLASSIFICATION	0.9999979803197416	WITHOUT_CLASSIFICATION	2.0196802583891207E-6	IMPLEMENTATION
//normal exit, this should be faster than a test at each iterations for string with more than //about 40 char	WITHOUT_CLASSIFICATION	0.9999793355157794	WITHOUT_CLASSIFICATION	2.0664484220585026E-5	IMPLEMENTATION
// We encountered '\0' when // were reading the buffer above, // increment the number of read bytes.	WITHOUT_CLASSIFICATION	0.9999898524342933	WITHOUT_CLASSIFICATION	1.0147565706755547E-5	IMPLEMENTATION
// MRI behavior: Contrary to what seems to be logical, // when '*' is given, MRI calculates the distance // to the end, in order to go backwards.	WITHOUT_CLASSIFICATION	0.999993963707232	WITHOUT_CLASSIFICATION	6.036292767924845E-6	IMPLEMENTATION
// Determine how many of type are needed (default: 1)	WITHOUT_CLASSIFICATION	0.9999573004324387	WITHOUT_CLASSIFICATION	4.2699567561300155E-5	IMPLEMENTATION
// 'Z' adds extra null pad (versus 'a')	WITHOUT_CLASSIFICATION	0.9999134985347345	WITHOUT_CLASSIFICATION	8.650146526550058E-5	IMPLEMENTATION
//if the low bit is set //set the high bit of the result	WITHOUT_CLASSIFICATION	0.9999820423388001	WITHOUT_CLASSIFICATION	1.795766119989679E-5	IMPLEMENTATION
//if the index is not a multiple of 8, we are not on a byte boundary //shift the byte	WITHOUT_CLASSIFICATION	0.9999593175521598	WITHOUT_CLASSIFICATION	4.0682447840162294E-5	IMPLEMENTATION
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9999498949281195	WITHOUT_CLASSIFICATION	5.010507188045843E-5	IMPLEMENTATION
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9999498949281195	WITHOUT_CLASSIFICATION	5.010507188045843E-5	IMPLEMENTATION
//do some padding, I don't understand the padding strategy	WITHOUT_CLASSIFICATION	0.999878326187462	WITHOUT_CLASSIFICATION	1.2167381253809968E-4	IMPLEMENTATION
// we filled up current byte; append it and create next one	WITHOUT_CLASSIFICATION	0.999974226417089	WITHOUT_CLASSIFICATION	2.5773582911105048E-5	IMPLEMENTATION
//if the index is not a multiple of 8, we are not on a byte boundary	WITHOUT_CLASSIFICATION	0.9999445534691054	WITHOUT_CLASSIFICATION	5.544653089466145E-5	IMPLEMENTATION
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.999961930085772	WITHOUT_CLASSIFICATION	3.806991422792204E-5	IMPLEMENTATION
// we don't deal with negatives.	WITHOUT_CLASSIFICATION	0.9999658768082832	WITHOUT_CLASSIFICATION	3.41231917167588E-5	IMPLEMENTATION
// populate commandline with NG-provided stuff	WITHOUT_CLASSIFICATION	0.9999563450487692	WITHOUT_CLASSIFICATION	4.365495123083981E-5	IMPLEMENTATION
// are we recursing?	WITHOUT_CLASSIFICATION	0.9998975706313534	WITHOUT_CLASSIFICATION	1.0242936864657593E-4	IMPLEMENTATION
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999964816311208	WITHOUT_CLASSIFICATION	3.5183688792363543E-6	IMPLEMENTATION
// default PidGetter	WITHOUT_CLASSIFICATION	0.9999788222527844	WITHOUT_CLASSIFICATION	2.117774721553419E-5	IMPLEMENTATION
// ignore and try windows version	WITHOUT_CLASSIFICATION	0.9999937796895267	WITHOUT_CLASSIFICATION	6.220310473212495E-6	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999918331192431	WITHOUT_CLASSIFICATION	8.166880756961613E-6	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999918331192431	WITHOUT_CLASSIFICATION	8.166880756961613E-6	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999918331192431	WITHOUT_CLASSIFICATION	8.166880756961613E-6	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999918331192431	WITHOUT_CLASSIFICATION	8.166880756961613E-6	IMPLEMENTATION
// try both	WITHOUT_CLASSIFICATION	0.9999141955077827	WITHOUT_CLASSIFICATION	8.5804492217382E-5	IMPLEMENTATION
// just unix	WITHOUT_CLASSIFICATION	0.9999010134585169	WITHOUT_CLASSIFICATION	9.898654148319633E-5	IMPLEMENTATION
// just windows	WITHOUT_CLASSIFICATION	0.9999147787218677	WITHOUT_CLASSIFICATION	8.522127813230694E-5	IMPLEMENTATION
// neither	WITHOUT_CLASSIFICATION	0.9961277595071609	WITHOUT_CLASSIFICATION	0.0038722404928390594	IMPLEMENTATION
// CON: popen is a case where I think we should just always shell out.	WITHOUT_CLASSIFICATION	0.9999660525024544	WITHOUT_CLASSIFICATION	3.3947497545638064E-5	IMPLEMENTATION
// single string command, pass to sh to expand wildcards	WITHOUT_CLASSIFICATION	0.9999610134488163	WITHOUT_CLASSIFICATION	3.898655118383426E-5	IMPLEMENTATION
// direct invocation of the command	WITHOUT_CLASSIFICATION	0.9999818838137726	WITHOUT_CLASSIFICATION	1.8116186227426235E-5	IMPLEMENTATION
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.999961109754243	WITHOUT_CLASSIFICATION	3.889024575699023E-5	IMPLEMENTATION
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.999961109754243	WITHOUT_CLASSIFICATION	3.889024575699023E-5	IMPLEMENTATION
// close process output // See JRUBY-3405; hooking up to parent process stdin caused // problems for IRB etc using stdin.	WITHOUT_CLASSIFICATION	0.9999837116853121	WITHOUT_CLASSIFICATION	1.6288314687821988E-5	IMPLEMENTATION
// ignore, we're on the way out	WITHOUT_CLASSIFICATION	0.9999921986119855	WITHOUT_CLASSIFICATION	7.801388014536546E-6	IMPLEMENTATION
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999783987556986	WITHOUT_CLASSIFICATION	2.1601244301420245E-5	IMPLEMENTATION
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999726053129974	WITHOUT_CLASSIFICATION	2.7394687002732313E-5	IMPLEMENTATION
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999726053129974	WITHOUT_CLASSIFICATION	2.7394687002732313E-5	IMPLEMENTATION
// popen caller wants to be able to write, provide subprocess out directly	WITHOUT_CLASSIFICATION	0.999975664771116	WITHOUT_CLASSIFICATION	2.43352288839633E-5	IMPLEMENTATION
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999586473432048	WITHOUT_CLASSIFICATION	4.135265679529035E-5	IMPLEMENTATION
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999586473432048	WITHOUT_CLASSIFICATION	4.135265679529035E-5	IMPLEMENTATION
// execute command with sh -c // this does shell expansion of wildcards	WITHOUT_CLASSIFICATION	0.9999817583427024	WITHOUT_CLASSIFICATION	1.8241657297686976E-5	IMPLEMENTATION
// We need to close the out, since some // processes would just wait for the stream // to be closed before they process its content, // and produce the output. E.g.: "cat".	WITHOUT_CLASSIFICATION	0.9999977051315879	WITHOUT_CLASSIFICATION	2.294868412115963E-6	IMPLEMENTATION
// we only close out if it's the slave stream, to avoid // closing a directly-mapped stream from parent process	WITHOUT_CLASSIFICATION	0.9999943253970115	WITHOUT_CLASSIFICATION	5.6746029885224695E-6	IMPLEMENTATION
// The assumption here is that the 'in' stream provides // proper available() support. If available() always // returns 0, we'll hang!	WITHOUT_CLASSIFICATION	0.9999908224450196	WITHOUT_CLASSIFICATION	9.177554980432894E-6	IMPLEMENTATION
// Force t3 to quit, just in case if it's stuck. // Note: On some platforms, even interrupt might not // have an effect if the thread is IO blocked.	WITHOUT_CLASSIFICATION	0.9999907492904787	WITHOUT_CLASSIFICATION	9.250709521404376E-6	IMPLEMENTATION
// Check for special shell characters [<>|] at the beginning // and end of each command word and don't run in process if we find them.	WITHOUT_CLASSIFICATION	0.9999979062470751	WITHOUT_CLASSIFICATION	2.0937529248905443E-6	IMPLEMENTATION
// Note: this method produces meaningful results // only for RubyIO objects. For everything else returns 0.	WITHOUT_CLASSIFICATION	0.9999641886456572	WITHOUT_CLASSIFICATION	3.581135434274083E-5	IMPLEMENTATION
//sequential	WITHOUT_CLASSIFICATION	0.9998825662138625	WITHOUT_CLASSIFICATION	1.1743378613749473E-4	IMPLEMENTATION
// reverse the entire area of the array selected if it's reversed.	WITHOUT_CLASSIFICATION	0.9999893306281576	WITHOUT_CLASSIFICATION	1.0669371842408026E-5	IMPLEMENTATION
// do median of 7 if the array is over 200 elements.	WITHOUT_CLASSIFICATION	0.9999715442031177	WITHOUT_CLASSIFICATION	2.8455796882240683E-5	IMPLEMENTATION
// if it's less than 200 do median of 3	WITHOUT_CLASSIFICATION	0.9999352025446421	WITHOUT_CLASSIFICATION	6.479745535793015E-5	IMPLEMENTATION
// SignalFacade	WITHOUT_CLASSIFICATION	0.9998814344151399	WITHOUT_CLASSIFICATION	1.1856558486011193E-4	IMPLEMENTATION
// this is the order in which MRI does these two tests	WITHOUT_CLASSIFICATION	0.9999744074460343	WITHOUT_CLASSIFICATION	2.5592553965720377E-5	IMPLEMENTATION
// this is the order in which MRI does these tests	WITHOUT_CLASSIFICATION	0.9999754903577109	WITHOUT_CLASSIFICATION	2.4509642288945844E-5	IMPLEMENTATION
// basically just forcing a TypeError here to match MRI	WITHOUT_CLASSIFICATION	0.9999351021934747	WITHOUT_CLASSIFICATION	6.489780652521264E-5	IMPLEMENTATION
// not saving DFS instance, as it will only be used once (at most) per call	WITHOUT_CLASSIFICATION	0.9997811290787234	WITHOUT_CLASSIFICATION	2.1887092127666986E-4	IMPLEMENTATION
// Args	WITHOUT_CLASSIFICATION	0.9960810659235647	WITHOUT_CLASSIFICATION	0.00391893407643535	IMPLEMENTATION
// static methods only	WITHOUT_CLASSIFICATION	0.9999557865310073	WITHOUT_CLASSIFICATION	4.421346899273222E-5	IMPLEMENTATION
//System.err.println(" calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.999972715106487	WITHOUT_CLASSIFICATION	2.7284893513012787E-5	IMPLEMENTATION
// MRI 1.8.6 behavior: null byte after '%' // leads to "%" string. Null byte in // other places, like "%5\0", leads to error.	WITHOUT_CLASSIFICATION	0.9999493394281718	WITHOUT_CLASSIFICATION	5.066057182828843E-5	IMPLEMENTATION
// last index (+1) accessed by next() // last index (+1) accessed by get()	WITHOUT_CLASSIFICATION	0.9999191351596199	WITHOUT_CLASSIFICATION	8.086484038005217E-5	IMPLEMENTATION
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly.	WITHOUT_CLASSIFICATION	0.9999721426307587	WITHOUT_CLASSIFICATION	2.7857369241256522E-5	IMPLEMENTATION
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly. Version for 1.9.	WITHOUT_CLASSIFICATION	0.9999774349407532	WITHOUT_CLASSIFICATION	2.256505924683907E-5	IMPLEMENTATION
// MRI doesn't flag it as an error if width is given multiple // times as a number (but it does for *)	WITHOUT_CLASSIFICATION	0.9999505164249846	WITHOUT_CLASSIFICATION	4.948357501549326E-5	IMPLEMENTATION
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999824785859215	WITHOUT_CLASSIFICATION	1.7521414078515634E-5	IMPLEMENTATION
// MRI 1.8.5-p12 doesn't support 1-char strings, but // YARV 0.4.1 does. I don't think it hurts to include // this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])	WITHOUT_CLASSIFICATION	0.9999276777098006	WITHOUT_CLASSIFICATION	7.232229019939926E-5	IMPLEMENTATION
// 'd' and 'i' are the same	WITHOUT_CLASSIFICATION	0.9999370475655646	WITHOUT_CLASSIFICATION	6.295243443554429E-5	IMPLEMENTATION
// 'u' with space or plus flags is same as 'd'	WITHOUT_CLASSIFICATION	0.9999217374926263	WITHOUT_CLASSIFICATION	7.826250737375441E-5	IMPLEMENTATION
// We depart here from strict adherence to MRI code, as MRI // uses C-sprintf, in part, to format numeric output, while // we'll use Java's numeric formatting code (and our own).	WITHOUT_CLASSIFICATION	0.9999792749558613	WITHOUT_CLASSIFICATION	2.072504413874824E-5	IMPLEMENTATION
// skip '-' in bytes, will add where appropriate	WITHOUT_CLASSIFICATION	0.9999349240078489	WITHOUT_CLASSIFICATION	6.507599215112648E-5	IMPLEMENTATION
// ..	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
// the 1 is for the stripped sign char	WITHOUT_CLASSIFICATION	0.9999687262577952	WITHOUT_CLASSIFICATION	3.1273742204848E-5	IMPLEMENTATION
// FIXME: what is correct 'recv' argument? // (this does produce the desired behavior)	WITHOUT_CLASSIFICATION	0.9998618700473034	WITHOUT_CLASSIFICATION	1.381299526965698E-4	IMPLEMENTATION
// gotta have at least a zero...	WITHOUT_CLASSIFICATION	0.9999332661661983	WITHOUT_CLASSIFICATION	6.673383380170013E-5	IMPLEMENTATION
// OK, we now have the significand in digits[0...nDigits] // and the exponent in exponent.  We're ready to format.	WITHOUT_CLASSIFICATION	0.9999743943746685	WITHOUT_CLASSIFICATION	2.5605625331522806E-5	IMPLEMENTATION
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9998891477229312	WITHOUT_CLASSIFICATION	1.108522770686461E-4	IMPLEMENTATION
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9998779167443455	WITHOUT_CLASSIFICATION	1.22083255654478E-4	IMPLEMENTATION
//System.err.println(" stringToLong/reading c=" + data[s]);	WITHOUT_CLASSIFICATION	0.9999680120977772	WITHOUT_CLASSIFICATION	3.1987902222826346E-5	IMPLEMENTATION
//System.err.println(" stringToLong/converted c=" + c);	WITHOUT_CLASSIFICATION	0.9999672393245604	WITHOUT_CLASSIFICATION	3.2760675439577646E-5	IMPLEMENTATION
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9998891477229312	WITHOUT_CLASSIFICATION	1.108522770686461E-4	IMPLEMENTATION
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9998779167443455	WITHOUT_CLASSIFICATION	1.22083255654478E-4	IMPLEMENTATION
// precision for G/g includes integer digits	WITHOUT_CLASSIFICATION	0.9999360967311207	WITHOUT_CLASSIFICATION	6.390326887928196E-5	IMPLEMENTATION
// deal with length/width	WITHOUT_CLASSIFICATION	0.999914315912576	WITHOUT_CLASSIFICATION	8.568408742407139E-5	IMPLEMENTATION
// deal with length/width	WITHOUT_CLASSIFICATION	0.999914315912576	WITHOUT_CLASSIFICATION	8.568408742407139E-5	IMPLEMENTATION
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999582949968809	WITHOUT_CLASSIFICATION	4.170500311913315E-5	IMPLEMENTATION
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999939739378502	WITHOUT_CLASSIFICATION	6.026062149844594E-6	IMPLEMENTATION
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9998965151503372	WITHOUT_CLASSIFICATION	1.0348484966281427E-4	IMPLEMENTATION
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9998766846217828	WITHOUT_CLASSIFICATION	1.2331537821723534E-4	IMPLEMENTATION
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9999383807419708	WITHOUT_CLASSIFICATION	6.161925802919216E-5	IMPLEMENTATION
// MRI behavior: In this mode // trailing zeroes are removed: // 1.500E+05 -> 1.5E+05 	WITHOUT_CLASSIFICATION	0.9999261358191722	WITHOUT_CLASSIFICATION	7.386418082778699E-5	IMPLEMENTATION
// '.' is printed	WITHOUT_CLASSIFICATION	0.9998817250664149	WITHOUT_CLASSIFICATION	1.1827493358511923E-4	IMPLEMENTATION
// all precision numebers printed	WITHOUT_CLASSIFICATION	0.9999175689790877	WITHOUT_CLASSIFICATION	8.243102091230699E-5	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9999116388139212	WITHOUT_CLASSIFICATION	8.836118607882577E-5	IMPLEMENTATION
// '.'	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
// decimal form, like (but not *just* like!) 'f'	WITHOUT_CLASSIFICATION	0.9998983064505274	WITHOUT_CLASSIFICATION	1.0169354947269494E-4	IMPLEMENTATION
// digits array shifted, update all	WITHOUT_CLASSIFICATION	0.9999484429948047	WITHOUT_CLASSIFICATION	5.1557005195304054E-5	IMPLEMENTATION
// will have a trailing '.' // g fills trailing zeroes if #	WITHOUT_CLASSIFICATION	0.999946836366528	WITHOUT_CLASSIFICATION	5.316363347198468E-5	IMPLEMENTATION
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.999909817726479	WITHOUT_CLASSIFICATION	9.018227352106421E-5	IMPLEMENTATION
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.999909817726479	WITHOUT_CLASSIFICATION	9.018227352106421E-5	IMPLEMENTATION
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9999138938407224	WITHOUT_CLASSIFICATION	8.610615927763068E-5	IMPLEMENTATION
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9999138938407224	WITHOUT_CLASSIFICATION	8.610615927763068E-5	IMPLEMENTATION
// digits arr shifted, update all	WITHOUT_CLASSIFICATION	0.9999431928001378	WITHOUT_CLASSIFICATION	5.680719986220666E-5	IMPLEMENTATION
// (1|intlen).prec	WITHOUT_CLASSIFICATION	0.9998766846217828	WITHOUT_CLASSIFICATION	1.2331537821723534E-4	IMPLEMENTATION
// (1|intlen)	WITHOUT_CLASSIFICATION	0.9998766846217828	WITHOUT_CLASSIFICATION	1.2331537821723534E-4	IMPLEMENTATION
// will have a trailing '.'	WITHOUT_CLASSIFICATION	0.9999466532424551	WITHOUT_CLASSIFICATION	5.334675754493156E-5	IMPLEMENTATION
// fill up the rest with zeroes	WITHOUT_CLASSIFICATION	0.9999510140588418	WITHOUT_CLASSIFICATION	4.8985941158121834E-5	IMPLEMENTATION
//System.err.println(" main/len=" + len);	WITHOUT_CLASSIFICATION	0.9999583837213282	WITHOUT_CLASSIFICATION	4.1616278671883146E-5	IMPLEMENTATION
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9998965151503372	WITHOUT_CLASSIFICATION	1.0348484966281427E-4	IMPLEMENTATION
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9998766846217828	WITHOUT_CLASSIFICATION	1.2331537821723534E-4	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9999116388139212	WITHOUT_CLASSIFICATION	8.836118607882577E-5	IMPLEMENTATION
// '.'	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
// equivalent to MRI case '\0':	WITHOUT_CLASSIFICATION	0.9999049111101167	WITHOUT_CLASSIFICATION	9.508888988327644E-5	IMPLEMENTATION
// '.' and all precision digits printed	WITHOUT_CLASSIFICATION	0.99991927075265	WITHOUT_CLASSIFICATION	8.072924735003952E-5	IMPLEMENTATION
// \v	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
// dangling '%' char	WITHOUT_CLASSIFICATION	0.9998800498981981	WITHOUT_CLASSIFICATION	1.1995010180188141E-4	IMPLEMENTATION
// main while loop (offset < length)	WITHOUT_CLASSIFICATION	0.9999342827781695	WITHOUT_CLASSIFICATION	6.57172218304364E-5	IMPLEMENTATION
// debugging code, keeping for now	WITHOUT_CLASSIFICATION	0.999930625467093	WITHOUT_CLASSIFICATION	6.937453290695082E-5	IMPLEMENTATION
// MRI rounds up on nnn5nnn, but not nnn5 -- // except for when they do	WITHOUT_CLASSIFICATION	0.9999085077436706	WITHOUT_CLASSIFICATION	9.149225632940312E-5	IMPLEMENTATION
// "%.0f" % 0.99	WITHOUT_CLASSIFICATION	0.9998766846217828	WITHOUT_CLASSIFICATION	1.2331537821723534E-4	IMPLEMENTATION
// limit the length of negatives if possible (also faster)	WITHOUT_CLASSIFICATION	0.9999607561080771	WITHOUT_CLASSIFICATION	3.9243891923003706E-5	IMPLEMENTATION
// negative values	WITHOUT_CLASSIFICATION	0.9999627861501832	WITHOUT_CLASSIFICATION	3.7213849816825435E-5	IMPLEMENTATION
// calculation for negatives when %u specified // for values >= Integer.MIN_VALUE * 2, MRI uses (the equivalent of) //   long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val // for smaller values, BigInteger math is required to conform to MRI's // result.	WITHOUT_CLASSIFICATION	0.999994966088631	WITHOUT_CLASSIFICATION	5.033911369007494E-6	IMPLEMENTATION
// relatively cheap test for 32-bit values	WITHOUT_CLASSIFICATION	0.9999657929175655	WITHOUT_CLASSIFICATION	3.420708243446522E-5	IMPLEMENTATION
// no such luck...	WITHOUT_CLASSIFICATION	0.9999132094424683	WITHOUT_CLASSIFICATION	8.679055753170784E-5	IMPLEMENTATION
// ok, now it gets expensive...	WITHOUT_CLASSIFICATION	0.9998985228209809	WITHOUT_CLASSIFICATION	1.0147717901918635E-4	IMPLEMENTATION
// go through negated powers of 32 until we find one small enough 	WITHOUT_CLASSIFICATION	0.9999340528359677	WITHOUT_CLASSIFICATION	6.594716403231503E-5	IMPLEMENTATION
// add to the corresponding positive power of 32 for the result. // meaningful? no. conformant? yes. I just write the code...	WITHOUT_CLASSIFICATION	0.9999955335625027	WITHOUT_CLASSIFICATION	4.466437497294816E-6	IMPLEMENTATION
/* constant vector a */	WITHOUT_CLASSIFICATION	0.9999139033951905	WITHOUT_CLASSIFICATION	8.609660480952735E-5	IMPLEMENTATION
/* most significant w-r bits */	WITHOUT_CLASSIFICATION	0.9999004802489414	WITHOUT_CLASSIFICATION	9.951975105857532E-5	IMPLEMENTATION
/* least significant r bits */	WITHOUT_CLASSIFICATION	0.9999041148313242	WITHOUT_CLASSIFICATION	9.588516867581252E-5	IMPLEMENTATION
// state[j] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999366699729032	WITHOUT_CLASSIFICATION	6.333002709677799E-5	IMPLEMENTATION
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999366699729032	WITHOUT_CLASSIFICATION	6.333002709677799E-5	IMPLEMENTATION
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999366699729032	WITHOUT_CLASSIFICATION	6.333002709677799E-5	IMPLEMENTATION
/* MSB is 1; assuring non-zero initial array */	WITHOUT_CLASSIFICATION	0.9999370456360224	WITHOUT_CLASSIFICATION	6.295436397764805E-5	IMPLEMENTATION
/* Tempering */	WITHOUT_CLASSIFICATION	0.9998808274756931	WITHOUT_CLASSIFICATION	1.1917252430689551E-4	IMPLEMENTATION
// MRI behavior: Week values are monotonous. // So, weeks that effectively belong to previous year, // will get the value of 0, not 52 or 53, as in Java.	WITHOUT_CLASSIFICATION	0.9999930328125102	WITHOUT_CLASSIFICATION	6.967187489933569E-6	IMPLEMENTATION
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999587756357866	WITHOUT_CLASSIFICATION	4.122436421339709E-5	IMPLEMENTATION
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999587756357866	WITHOUT_CLASSIFICATION	4.122436421339709E-5	IMPLEMENTATION
// \v	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
//System.err.println("getSign()");	WITHOUT_CLASSIFICATION	0.9999583742373397	WITHOUT_CLASSIFICATION	4.16257626603112E-5	IMPLEMENTATION
//System.err.println(" getSign/" + sign);	WITHOUT_CLASSIFICATION	0.9999584370637276	WITHOUT_CLASSIFICATION	4.156293627248487E-5	IMPLEMENTATION
//System.err.println("figureOutBase()/base=" + base);	WITHOUT_CLASSIFICATION	0.9999592496248088	WITHOUT_CLASSIFICATION	4.0750375191221313E-5	IMPLEMENTATION
//System.err.println(" figureOutBase/base=" + base);	WITHOUT_CLASSIFICATION	0.9999587031710413	WITHOUT_CLASSIFICATION	4.1296828958686985E-5	IMPLEMENTATION
//System.err.println("calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999699965419396	WITHOUT_CLASSIFICATION	3.000345806028439E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9963454498675982	WITHOUT_CLASSIFICATION	0.0036545501324018502	IMPLEMENTATION
//System.err.println(" stringToLong=" + val);	WITHOUT_CLASSIFICATION	0.9999654573202431	WITHOUT_CLASSIFICATION	3.454267975683811E-5	IMPLEMENTATION
// no number	WITHOUT_CLASSIFICATION	0.9999240118241128	WITHOUT_CLASSIFICATION	7.598817588724266E-5	IMPLEMENTATION
// trailing garbage	WITHOUT_CLASSIFICATION	0.9999054183390742	WITHOUT_CLASSIFICATION	9.458166092577801E-5	IMPLEMENTATION
//System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);	WITHOUT_CLASSIFICATION	0.9999681935047761	WITHOUT_CLASSIFICATION	3.18064952240084E-5	IMPLEMENTATION
// it was not found at all!	WITHOUT_CLASSIFICATION	0.9999441475461585	WITHOUT_CLASSIFICATION	5.5852453841575296E-5	IMPLEMENTATION
// can be overridden to be informed when objects are removed	WITHOUT_CLASSIFICATION	0.9999760160159088	WITHOUT_CLASSIFICATION	2.398398409113145E-5	IMPLEMENTATION
// we reached the end of a list	WITHOUT_CLASSIFICATION	0.9999054499127836	WITHOUT_CLASSIFICATION	9.455008721626605E-5	IMPLEMENTATION
// goto next bucket	WITHOUT_CLASSIFICATION	0.9998887746158477	WITHOUT_CLASSIFICATION	1.1122538415225674E-4	IMPLEMENTATION
// we reached the end	WITHOUT_CLASSIFICATION	0.9999066563946648	WITHOUT_CLASSIFICATION	9.3343605335192E-5	IMPLEMENTATION
// entry is the first element of this bucket	WITHOUT_CLASSIFICATION	0.9999721764672814	WITHOUT_CLASSIFICATION	2.7823532718666225E-5	IMPLEMENTATION
// states	WITHOUT_CLASSIFICATION	0.9975045627670959	WITHOUT_CLASSIFICATION	0.0024954372329041496	IMPLEMENTATION
// remove leading whitespace (includes _ for lax) // get sign, if any	WITHOUT_CLASSIFICATION	0.9999861343812321	WITHOUT_CLASSIFICATION	1.3865618767882417E-5	IMPLEMENTATION
// optimistic pass - calculate value as digits are processed // digits - lax rules // decimal digits - lax rules // exponent sign/digits - lax rules // digits - strict rules // decimal digits - strict rules // exponent sign/digits - strict rules // complete calculation if possible	WITHOUT_CLASSIFICATION	0.9999863355785238	WITHOUT_CLASSIFICATION	1.3664421476227407E-5	IMPLEMENTATION
// fields used for direct (optimistic) calculation // number of significant digits, updated as parsed // zeroes that may go to significand or exponent // offset of decimal pt from start (-1 -> no decimal) // significand, updated as parsed // exponent, updated as parsed	WITHOUT_CLASSIFICATION	0.99999723821381	WITHOUT_CLASSIFICATION	2.761786190014449E-6	IMPLEMENTATION
// drop through for sign	WITHOUT_CLASSIFICATION	0.9999261695788142	WITHOUT_CLASSIFICATION	7.383042118587389E-5	IMPLEMENTATION
// switch // will use this if we have to go back the slow way	WITHOUT_CLASSIFICATION	0.9999702471651322	WITHOUT_CLASSIFICATION	2.975283486778387E-5	IMPLEMENTATION
// drop through for non-strict digits	WITHOUT_CLASSIFICATION	0.9999243378099097	WITHOUT_CLASSIFICATION	7.56621900903245E-5	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999636570711564	WITHOUT_CLASSIFICATION	3.6342928843567346E-5	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.999995969018667	WITHOUT_CLASSIFICATION	4.030981332889383E-6	IMPLEMENTATION
// no digits, go calc (will return +/- 0.0 for lax)	WITHOUT_CLASSIFICATION	0.9999542997261128	WITHOUT_CLASSIFICATION	4.570027388708815E-5	IMPLEMENTATION
// ignore leading zeroes	WITHOUT_CLASSIFICATION	0.9999928602283599	WITHOUT_CLASSIFICATION	7.139771640193526E-6	IMPLEMENTATION
// just save a count of zeroes for now; if no digit // ends up following them, they'll be applied to the // exponent rather than the significand (and our max // length for optimistic calc).	WITHOUT_CLASSIFICATION	0.9999880803218631	WITHOUT_CLASSIFICATION	1.1919678136864434E-5	IMPLEMENTATION
// ok, got a non-zero, have to own up to our horded zeroes	WITHOUT_CLASSIFICATION	0.9999349697853052	WITHOUT_CLASSIFICATION	6.503021469483155E-5	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9998990398738687	WITHOUT_CLASSIFICATION	1.0096012613129175E-4	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9998990398738687	WITHOUT_CLASSIFICATION	1.0096012613129175E-4	IMPLEMENTATION
// oh, well, it was worth a try. go let // Double/FloatingDecimal handle it 	WITHOUT_CLASSIFICATION	0.9998020601043835	WITHOUT_CLASSIFICATION	1.979398956163838E-4	IMPLEMENTATION
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999942889750674	WITHOUT_CLASSIFICATION	5.7110249325786E-6	IMPLEMENTATION
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999942889750674	WITHOUT_CLASSIFICATION	5.7110249325786E-6	IMPLEMENTATION
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999595382473331	WITHOUT_CLASSIFICATION	4.0461752666966877E-5	IMPLEMENTATION
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999595382473331	WITHOUT_CLASSIFICATION	4.0461752666966877E-5	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999387022975055	WITHOUT_CLASSIFICATION	6.129770249453224E-5	IMPLEMENTATION
// first non_underscore char must be digit	WITHOUT_CLASSIFICATION	0.999955647085588	WITHOUT_CLASSIFICATION	4.4352914412073484E-5	IMPLEMENTATION
// no dec digits, end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999460487875156	WITHOUT_CLASSIFICATION	5.3951212484388414E-5	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.9999315285167405	WITHOUT_CLASSIFICATION	6.847148325950142E-5	IMPLEMENTATION
// difficult case, send to Double/FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999247145367322	WITHOUT_CLASSIFICATION	7.528546326785312E-5	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9960488871862235	WITHOUT_CLASSIFICATION	0.0039511128137764695	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9960488871862235	WITHOUT_CLASSIFICATION	0.0039511128137764695	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999636570711564	WITHOUT_CLASSIFICATION	3.6342928843567346E-5	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999636570711564	WITHOUT_CLASSIFICATION	3.6342928843567346E-5	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999636570711564	WITHOUT_CLASSIFICATION	3.6342928843567346E-5	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.999995969018667	WITHOUT_CLASSIFICATION	4.030981332889383E-6	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9998990398738687	WITHOUT_CLASSIFICATION	1.0096012613129175E-4	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9998990398738687	WITHOUT_CLASSIFICATION	1.0096012613129175E-4	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9998990398738687	WITHOUT_CLASSIFICATION	1.0096012613129175E-4	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999387022975055	WITHOUT_CLASSIFICATION	6.129770249453224E-5	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999387022975055	WITHOUT_CLASSIFICATION	6.129770249453224E-5	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999387022975055	WITHOUT_CLASSIFICATION	6.129770249453224E-5	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.9999315285167405	WITHOUT_CLASSIFICATION	6.847148325950142E-5	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.9999315285167405	WITHOUT_CLASSIFICATION	6.847148325950142E-5	IMPLEMENTATION
// lax (str.to_f) allows underscores between e/E and sign	WITHOUT_CLASSIFICATION	0.9999134865029622	WITHOUT_CLASSIFICATION	8.65134970377868E-5	IMPLEMENTATION
// switch // for // no exponent, so drop through for calculation	WITHOUT_CLASSIFICATION	0.999982042541662	WITHOUT_CLASSIFICATION	1.7957458337966285E-5	IMPLEMENTATION
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999683043406256	WITHOUT_CLASSIFICATION	3.169565937451216E-5	IMPLEMENTATION
// TODO: it's not clear to me why, in FloatingDecimal, the // "slop" calculation performed above for positive exponents // isn't used for negative exponents as well. Will find out...	WITHOUT_CLASSIFICATION	0.9556402978257398	WITHOUT_CLASSIFICATION	0.044359702174260156	IMPLEMENTATION
// no digits, error	WITHOUT_CLASSIFICATION	0.9999137105652665	WITHOUT_CLASSIFICATION	8.628943473350114E-5	IMPLEMENTATION
// too big for us	WITHOUT_CLASSIFICATION	0.999901418744689	WITHOUT_CLASSIFICATION	9.858125531097743E-5	IMPLEMENTATION
// too big for us	WITHOUT_CLASSIFICATION	0.999901418744689	WITHOUT_CLASSIFICATION	9.858125531097743E-5	IMPLEMENTATION
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999630022494458	WITHOUT_CLASSIFICATION	3.699775055412525E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9963454498675982	WITHOUT_CLASSIFICATION	0.0036545501324018502	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9963454498675982	WITHOUT_CLASSIFICATION	0.0036545501324018502	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9963454498675982	WITHOUT_CLASSIFICATION	0.0036545501324018502	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9963454498675982	WITHOUT_CLASSIFICATION	0.0036545501324018502	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9963454498675982	WITHOUT_CLASSIFICATION	0.0036545501324018502	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999798583270422	WITHOUT_CLASSIFICATION	2.014167295786379E-5	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999798583270422	WITHOUT_CLASSIFICATION	2.014167295786379E-5	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999798583270422	WITHOUT_CLASSIFICATION	2.014167295786379E-5	IMPLEMENTATION
// first char must be digit	WITHOUT_CLASSIFICATION	0.9999582886574065	WITHOUT_CLASSIFICATION	4.1711342593483646E-5	IMPLEMENTATION
// no dec digits after '.', error for strict	WITHOUT_CLASSIFICATION	0.9999474459984969	WITHOUT_CLASSIFICATION	5.25540015031952E-5	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.999995969018667	WITHOUT_CLASSIFICATION	4.030981332889383E-6	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999387022975055	WITHOUT_CLASSIFICATION	6.129770249453224E-5	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999387022975055	WITHOUT_CLASSIFICATION	6.129770249453224E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9963454498675982	WITHOUT_CLASSIFICATION	0.0036545501324018502	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9963454498675982	WITHOUT_CLASSIFICATION	0.0036545501324018502	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999798583270422	WITHOUT_CLASSIFICATION	2.014167295786379E-5	IMPLEMENTATION
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999630022494458	WITHOUT_CLASSIFICATION	3.699775055412525E-5	IMPLEMENTATION
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999280027334293	WITHOUT_CLASSIFICATION	7.199726657066785E-5	IMPLEMENTATION
// switch //while	WITHOUT_CLASSIFICATION	0.9999456091012378	WITHOUT_CLASSIFICATION	5.439089876220158E-5	IMPLEMENTATION
/*     * All the positive powers of 10 that can be     * represented exactly in double/float.     * (From sun.misc.FloatingDecimal.java)     */	WITHOUT_CLASSIFICATION	0.9999870651647182	WITHOUT_CLASSIFICATION	1.2934835281738265E-5	IMPLEMENTATION
// Zlib behavior: negative win_bits means no header and no checksum.	WITHOUT_CLASSIFICATION	0.9999683429619436	WITHOUT_CLASSIFICATION	3.165703805629865E-5	IMPLEMENTATION
// rb_enc_mbclen	WITHOUT_CLASSIFICATION	0.9998766846217828	WITHOUT_CLASSIFICATION	1.2331537821723534E-4	IMPLEMENTATION
// rb_enc_precise_mbclen	WITHOUT_CLASSIFICATION	0.9998968574311884	WITHOUT_CLASSIFICATION	1.0314256881169274E-4	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.999876822905167	WITHOUT_CLASSIFICATION	1.2317709483297085E-4	IMPLEMENTATION
// arg cannot be negative	WITHOUT_CLASSIFICATION	0.9999544064938114	WITHOUT_CLASSIFICATION	4.5593506188475455E-5	IMPLEMENTATION
// NoFunctionalitySignalFacade	WITHOUT_CLASSIFICATION	0.9999240500115091	WITHOUT_CLASSIFICATION	7.594998849087654E-5	IMPLEMENTATION
// Change visibility so others can see it	WITHOUT_CLASSIFICATION	0.9999496392664339	WITHOUT_CLASSIFICATION	5.036073356605622E-5	IMPLEMENTATION
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9998715890405031	WITHOUT_CLASSIFICATION	1.2841095949691988E-4	IMPLEMENTATION
// strip off "_dot_rb" for .rb files	WITHOUT_CLASSIFICATION	0.9999379651791975	WITHOUT_CLASSIFICATION	6.203482080247096E-5	IMPLEMENTATION
// Makes sure the key is not already in the hashtable.	WITHOUT_CLASSIFICATION	0.9999857848045197	WITHOUT_CLASSIFICATION	1.4215195480185048E-5	IMPLEMENTATION
// Rehash the table if the threshold is exceeded	WITHOUT_CLASSIFICATION	0.9999703142176402	WITHOUT_CLASSIFICATION	2.9685782359895463E-5	IMPLEMENTATION
// Creates the new entry.	WITHOUT_CLASSIFICATION	0.9999673676456103	WITHOUT_CLASSIFICATION	3.263235438967772E-5	IMPLEMENTATION
// next entry to return // current slot // current entry	WITHOUT_CLASSIFICATION	0.9999727972168949	WITHOUT_CLASSIFICATION	2.7202783105095853E-5	IMPLEMENTATION
// advance to first entry	WITHOUT_CLASSIFICATION	0.9999465079586737	WITHOUT_CLASSIFICATION	5.349204132632558E-5	IMPLEMENTATION
// The reason why we need the stream is to be able to invoke available() on it. // STDIN in Java is non-interruptible, non-selectable, and attempt to read // on such stream might lead to thread being blocked without *any* way to unblock it. // That's where available() comes it, so at least we could check whether // anything is available to be read without blocking.	WITHOUT_CLASSIFICATION	0.9999949773878394	WITHOUT_CLASSIFICATION	5.022612160576231E-6	IMPLEMENTATION
/*package-protected*/	WITHOUT_CLASSIFICATION	0.9999320512583233	WITHOUT_CLASSIFICATION	6.79487416767512E-5	IMPLEMENTATION
// raw file URL, just open directly	WITHOUT_CLASSIFICATION	0.9999284262145683	WITHOUT_CLASSIFICATION	7.157378543171684E-5	IMPLEMENTATION
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999385816917041	WITHOUT_CLASSIFICATION	6.141830829589923E-5	IMPLEMENTATION
// if refcount is at or below zero, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999548318242607	WITHOUT_CLASSIFICATION	4.516817573923809E-5	IMPLEMENTATION
// if channel is already closed, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999686256265742	WITHOUT_CLASSIFICATION	3.137437342583227E-5	IMPLEMENTATION
// otherwise decrement and possibly close as normal	WITHOUT_CLASSIFICATION	0.9999453510793411	WITHOUT_CLASSIFICATION	5.464892065892642E-5	IMPLEMENTATION
// r/w buffer // are we reading or writing?	WITHOUT_CLASSIFICATION	0.9999158182530555	WITHOUT_CLASSIFICATION	8.418174694455818E-5	IMPLEMENTATION
// this constructor is used by fdopen, so we don't increment descriptor ref count	WITHOUT_CLASSIFICATION	0.9999757085274925	WITHOUT_CLASSIFICATION	2.429147250750354E-5	IMPLEMENTATION
// unread back	WITHOUT_CLASSIFICATION	0.9998802315895728	WITHOUT_CLASSIFICATION	1.1976841042721203E-4	IMPLEMENTATION
// iterate over remainder of buffer until we find a match	WITHOUT_CLASSIFICATION	0.9999636416508451	WITHOUT_CLASSIFICATION	3.6358349154938414E-5	IMPLEMENTATION
// terminate and advance buffer when we find our char	WITHOUT_CLASSIFICATION	0.9999467716446455	WITHOUT_CLASSIFICATION	5.322835535455219E-5	IMPLEMENTATION
// no match, append remainder of buffer and continue with next block	WITHOUT_CLASSIFICATION	0.9999743457731705	WITHOUT_CLASSIFICATION	2.565422682948949E-5	IMPLEMENTATION
// found a match above, check if remaining separator characters match, appending as we go	WITHOUT_CLASSIFICATION	0.9999917726779124	WITHOUT_CLASSIFICATION	8.227322087520318E-6	IMPLEMENTATION
// // Check file size - special files in /proc have zero size and need to be // handled by the generic read path. //	WITHOUT_CLASSIFICATION	0.99997666424611	WITHOUT_CLASSIFICATION	2.3335753890089705E-5	IMPLEMENTATION
// // Copy any buffered data (including ungetc byte) //	WITHOUT_CLASSIFICATION	0.9999374852628672	WITHOUT_CLASSIFICATION	6.25147371327799E-5	IMPLEMENTATION
// // Now read unbuffered directly from the file //	WITHOUT_CLASSIFICATION	0.999977920515133	WITHOUT_CLASSIFICATION	2.207948486699825E-5	IMPLEMENTATION
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999280027334293	WITHOUT_CLASSIFICATION	7.199726657066785E-5	IMPLEMENTATION
// // Need to clamp source (buffer) size to avoid overrun //	WITHOUT_CLASSIFICATION	0.9999307319980985	WITHOUT_CLASSIFICATION	6.926800190157235E-5	IMPLEMENTATION
// not closing from finalize	WITHOUT_CLASSIFICATION	0.999736039118748	WITHOUT_CLASSIFICATION	2.639608812520095E-4	IMPLEMENTATION
// clear runtime so it doesn't get stuck in memory (JRUBY-2933)	WITHOUT_CLASSIFICATION	0.9999691090254577	WITHOUT_CLASSIFICATION	3.089097454235652E-5	IMPLEMENTATION
// silence	WITHOUT_CLASSIFICATION	0.99607629137285	WITHOUT_CLASSIFICATION	0.0039237086271499645	IMPLEMENTATION
// silence	WITHOUT_CLASSIFICATION	0.99607629137285	WITHOUT_CLASSIFICATION	0.0039237086271499645	IMPLEMENTATION
// Don't bother	WITHOUT_CLASSIFICATION	0.9998970057071912	WITHOUT_CLASSIFICATION	1.029942928087108E-4	IMPLEMENTATION
// Don't bother	WITHOUT_CLASSIFICATION	0.9998970057071912	WITHOUT_CLASSIFICATION	1.029942928087108E-4	IMPLEMENTATION
// For Sockets, only write as much as will fit.	WITHOUT_CLASSIFICATION	0.999935643844166	WITHOUT_CLASSIFICATION	6.435615583403298E-5	IMPLEMENTATION
// Correct position for read / write buffering (we could invalidate, but expensive)	WITHOUT_CLASSIFICATION	0.9999706196143536	WITHOUT_CLASSIFICATION	2.938038564635408E-5	IMPLEMENTATION
// Adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999241382989844	WITHOUT_CLASSIFICATION	7.586170101558591E-5	IMPLEMENTATION
// for SEEK_CUR, need to adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999244810022697	WITHOUT_CLASSIFICATION	7.551899773025191E-5	IMPLEMENTATION
// libc flushes writes on any read from the actual file, so we flush here	WITHOUT_CLASSIFICATION	0.9999691096367265	WITHOUT_CLASSIFICATION	3.089036327342496E-5	IMPLEMENTATION
// we have read ahead, and need to back up	WITHOUT_CLASSIFICATION	0.9999188567321455	WITHOUT_CLASSIFICATION	8.114326785447069E-5	IMPLEMENTATION
// 128K seems to be the minimum at which the stat+seek is faster than reallocation	WITHOUT_CLASSIFICATION	0.9999811719633008	WITHOUT_CLASSIFICATION	1.882803669913006E-5	IMPLEMENTATION
// // limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations //	WITHOUT_CLASSIFICATION	0.9999676905661307	WITHOUT_CLASSIFICATION	3.23094338692707E-5	IMPLEMENTATION
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999276605384634	WITHOUT_CLASSIFICATION	7.23394615366005E-5	IMPLEMENTATION
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.999984466387557	WITHOUT_CLASSIFICATION	1.5533612442987267E-5	IMPLEMENTATION
// // Avoid double-copying for reads that are larger than the buffer size //	WITHOUT_CLASSIFICATION	0.9999759384258098	WITHOUT_CLASSIFICATION	2.4061574190183344E-5	IMPLEMENTATION
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999813786523674	WITHOUT_CLASSIFICATION	1.862134763266511E-5	IMPLEMENTATION
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999813786523674	WITHOUT_CLASSIFICATION	1.862134763266511E-5	IMPLEMENTATION
// // Avoid double-copying for reads that are larger than the buffer size, or // the destination is a direct buffer. //	WITHOUT_CLASSIFICATION	0.999991217908607	WITHOUT_CLASSIFICATION	8.782091392958619E-6	IMPLEMENTATION
// // We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating // a huge temporary native buffer, when doing reads into a heap buffer // If the dst buffer is direct, then no need to limit. //	WITHOUT_CLASSIFICATION	0.9999660418088162	WITHOUT_CLASSIFICATION	3.3958191183852694E-5	IMPLEMENTATION
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999611470648476	WITHOUT_CLASSIFICATION	3.8852935152323796E-5	IMPLEMENTATION
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999611470648476	WITHOUT_CLASSIFICATION	3.8852935152323796E-5	IMPLEMENTATION
// Doesn't fit in buffer. Write immediately. // ensure nothing left to write	WITHOUT_CLASSIFICATION	0.9999881331539855	WITHOUT_CLASSIFICATION	1.1866846014511631E-5	IMPLEMENTATION
// truncate can't lengthen files, so we save position, seek/write, and go back	WITHOUT_CLASSIFICATION	0.999972698193323	WITHOUT_CLASSIFICATION	2.7301806677035505E-5	IMPLEMENTATION
// how far ahead we are when reading	WITHOUT_CLASSIFICATION	0.999923548657108	WITHOUT_CLASSIFICATION	7.645134289197473E-5	IMPLEMENTATION
// if the read buffer is ahead, back up	WITHOUT_CLASSIFICATION	0.9999699397710333	WITHOUT_CLASSIFICATION	3.0060228966707072E-5	IMPLEMENTATION
// close without removing from finalizers	WITHOUT_CLASSIFICATION	0.9999617411662675	WITHOUT_CLASSIFICATION	3.825883373247514E-5	IMPLEMENTATION
// putting a bit back, so we're not at EOF anymore	WITHOUT_CLASSIFICATION	0.9999656888840721	WITHOUT_CLASSIFICATION	3.4311115927989455E-5	IMPLEMENTATION
// save the ungot	WITHOUT_CLASSIFICATION	0.9999455384601398	WITHOUT_CLASSIFICATION	5.446153986017413E-5	IMPLEMENTATION
// otherwise, we try an unbuffered read to get whatever's available	WITHOUT_CLASSIFICATION	0.9999478262515547	WITHOUT_CLASSIFICATION	5.217374844544454E-5	IMPLEMENTATION
// ignore this; select() will set the correct mode when it is finished	WITHOUT_CLASSIFICATION	0.9999970225498171	WITHOUT_CLASSIFICATION	2.9774501829045674E-6	IMPLEMENTATION
// flush first	WITHOUT_CLASSIFICATION	0.9999258993220829	WITHOUT_CLASSIFICATION	7.410067791717697E-5	IMPLEMENTATION
// // Wake up any channels that became unblocked //	WITHOUT_CLASSIFICATION	0.9999237275333431	WITHOUT_CLASSIFICATION	7.627246665692724E-5	IMPLEMENTATION
// // Register any new blocking I/O requests //	WITHOUT_CLASSIFICATION	0.9999429212075698	WITHOUT_CLASSIFICATION	5.707879243030883E-5	IMPLEMENTATION
// Now clear out any previously selected channels	WITHOUT_CLASSIFICATION	0.9999810937802684	WITHOUT_CLASSIFICATION	1.8906219731549696E-5	IMPLEMENTATION
// // Wait for I/O on any channel //	WITHOUT_CLASSIFICATION	0.99992784978482	WITHOUT_CLASSIFICATION	7.215021518008319E-5	IMPLEMENTATION
// Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'	WITHOUT_CLASSIFICATION	0.9999843341693675	WITHOUT_CLASSIFICATION	1.5665830632508406E-5	IMPLEMENTATION
// Java requires "w" for creating a file that does not exist	WITHOUT_CLASSIFICATION	0.9999649319246617	WITHOUT_CLASSIFICATION	3.5068075338221844E-5	IMPLEMENTATION
// seek to force underlying buffer to flush	WITHOUT_CLASSIFICATION	0.9999215960160354	WITHOUT_CLASSIFICATION	7.840398396455873E-5	IMPLEMENTATION
// seek to force read buffer to invalidate	WITHOUT_CLASSIFICATION	0.9999259382724904	WITHOUT_CLASSIFICATION	7.406172750949615E-5	IMPLEMENTATION
/*        result = eval("arr = Array::['c', 200]; p arr");        assertEquals("[\"c\", 200]", result);        result = eval("arr = Array.['d', 200]; p arr");        assertEquals("[\"d\", 200]", result);        */	WITHOUT_CLASSIFICATION	0.999991989364634	WITHOUT_CLASSIFICATION	8.010635366084804E-6	IMPLEMENTATION
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999656311078643	WITHOUT_CLASSIFICATION	3.436889213575389E-5	IMPLEMENTATION
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.8483839568535261	WITHOUT_CLASSIFICATION	0.15161604314647392	IMPLEMENTATION
// make sure the pipe stream is set to null	WITHOUT_CLASSIFICATION	0.999974692320348	WITHOUT_CLASSIFICATION	2.5307679652131348E-5	IMPLEMENTATION
// make sure the main stream is set to null	WITHOUT_CLASSIFICATION	0.9999702518255738	WITHOUT_CLASSIFICATION	2.9748174426191488E-5	IMPLEMENTATION
// first try our custom-generated Unsafe	WITHOUT_CLASSIFICATION	0.9998306498077458	WITHOUT_CLASSIFICATION	1.6935019225425152E-4	IMPLEMENTATION
// then try Sun's Unsafe	WITHOUT_CLASSIFICATION	0.9999279865152656	WITHOUT_CLASSIFICATION	7.201348473445528E-5	IMPLEMENTATION
// if we get here, the class and field exist; construct our Unsafe impl // that calls it directly	WITHOUT_CLASSIFICATION	0.9999830876877435	WITHOUT_CLASSIFICATION	1.6912312256553046E-5	IMPLEMENTATION
// else leave it null	WITHOUT_CLASSIFICATION	0.9999138322135027	WITHOUT_CLASSIFICATION	8.616778649734387E-5	IMPLEMENTATION
// TypeMatcher	WITHOUT_CLASSIFICATION	0.9998799769604008	WITHOUT_CLASSIFICATION	1.2002303959923807E-4	IMPLEMENTATION
// This is now needed, since module Java // isn't in by default	WITHOUT_CLASSIFICATION	0.9999674441104349	WITHOUT_CLASSIFICATION	3.2555889565091425E-5	IMPLEMENTATION
// Iterate over the RubyHash keySet, simultaneously iterating over the values()	WITHOUT_CLASSIFICATION	0.999973752476373	WITHOUT_CLASSIFICATION	2.6247523626988318E-5	IMPLEMENTATION
// Get the value from the map via the key	WITHOUT_CLASSIFICATION	0.9999928462228985	WITHOUT_CLASSIFICATION	7.153777101466126E-6	IMPLEMENTATION
// Get the value from the map via the values iterator	WITHOUT_CLASSIFICATION	0.999995348341602	WITHOUT_CLASSIFICATION	4.651658398031797E-6	IMPLEMENTATION
// Check the 2 values obtained via different means	WITHOUT_CLASSIFICATION	0.9999793230560114	WITHOUT_CLASSIFICATION	2.0676943988514276E-5	IMPLEMENTATION
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999798828739969	WITHOUT_CLASSIFICATION	2.0117126003114576E-5	IMPLEMENTATION
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999798828739969	WITHOUT_CLASSIFICATION	2.0117126003114576E-5	IMPLEMENTATION
// Check the entry.setValue values come back out ok	WITHOUT_CLASSIFICATION	0.9999837259482147	WITHOUT_CLASSIFICATION	1.6274051785244052E-5	IMPLEMENTATION
// If we're running from within an IDE we may not have // the .rb files in our classpath. Try to find them // in the filesystem instead.	WITHOUT_CLASSIFICATION	0.9999937865705251	WITHOUT_CLASSIFICATION	6.2134294749830475E-6	IMPLEMENTATION
//assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); //assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));	WITHOUT_CLASSIFICATION	0.9999439859815373	WITHOUT_CLASSIFICATION	5.601401846271386E-5	IMPLEMENTATION
// Init	WITHOUT_CLASSIFICATION	0.9963858947518893	WITHOUT_CLASSIFICATION	0.003614105248110747	IMPLEMENTATION
// Block	WITHOUT_CLASSIFICATION	0.9960566242591581	WITHOUT_CLASSIFICATION	0.003943375740841939	IMPLEMENTATION
// Copy constructor	WITHOUT_CLASSIFICATION	0.9999173090723477	WITHOUT_CLASSIFICATION	8.269092765232705E-5	IMPLEMENTATION
// presumably this require should fail	WITHOUT_CLASSIFICATION	0.9998784548679428	WITHOUT_CLASSIFICATION	1.2154513205716649E-4	IMPLEMENTATION
// JRUBY-646 // presumably this require should fail	WITHOUT_CLASSIFICATION	0.9998744203886061	WITHOUT_CLASSIFICATION	1.2557961139387835E-4	IMPLEMENTATION
// Test that requiring a normal Java class raises an error (JRUBY-3214	WITHOUT_CLASSIFICATION	0.9999760571477669	WITHOUT_CLASSIFICATION	2.394285223299431E-5	IMPLEMENTATION
// ok	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
// Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods // from Ruby so they are not really unused).	WITHOUT_CLASSIFICATION	0.9999708633938383	WITHOUT_CLASSIFICATION	2.913660616171108E-5	IMPLEMENTATION
//load should work several times in a row	WITHOUT_CLASSIFICATION	0.999871899742972	WITHOUT_CLASSIFICATION	1.2810025702799768E-4	IMPLEMENTATION
//reset the $loadTestvar	WITHOUT_CLASSIFICATION	0.9999197105992289	WITHOUT_CLASSIFICATION	8.028940077105851E-5	IMPLEMENTATION
//call throwException via JRuby	WITHOUT_CLASSIFICATION	0.999951593502598	WITHOUT_CLASSIFICATION	4.840649740208419E-5	IMPLEMENTATION
// Notify the calling thread that we're about to go to sleep the first time	WITHOUT_CLASSIFICATION	0.9999850281679692	WITHOUT_CLASSIFICATION	1.497183203088527E-5	IMPLEMENTATION
// wait for the go signal	WITHOUT_CLASSIFICATION	0.9999457803929169	WITHOUT_CLASSIFICATION	5.421960708295742E-5	IMPLEMENTATION
// run ten separate calls into Ruby, with delay and explicit GC	WITHOUT_CLASSIFICATION	0.9999498448840022	WITHOUT_CLASSIFICATION	5.0155115997735055E-5	IMPLEMENTATION
// wait until thread has initialized	WITHOUT_CLASSIFICATION	0.9999584352340358	WITHOUT_CLASSIFICATION	4.1564765964280315E-5	IMPLEMENTATION
// notify thread to proceed	WITHOUT_CLASSIFICATION	0.9999175056613446	WITHOUT_CLASSIFICATION	8.249433865531318E-5	IMPLEMENTATION
// wait until thread has completed	WITHOUT_CLASSIFICATION	0.9998567040207649	WITHOUT_CLASSIFICATION	1.432959792350638E-4	IMPLEMENTATION
// we do preand post load outside the "body" versions to pre-prepare // and pre-push the dynamic scope we need for lastline	WITHOUT_CLASSIFICATION	0.9999575639125396	WITHOUT_CLASSIFICATION	4.243608746033688E-5	IMPLEMENTATION
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999672287982818	WITHOUT_CLASSIFICATION	3.277120171812424E-5	IMPLEMENTATION
// MRI behavior: raise ArgumentError for 'unknown command' before // checking number of args.	WITHOUT_CLASSIFICATION	0.9999870618025085	WITHOUT_CLASSIFICATION	1.293819749143164E-5	IMPLEMENTATION
// if any exceptions were raised, we fail	WITHOUT_CLASSIFICATION	0.99995950243128	WITHOUT_CLASSIFICATION	4.049756872002439E-5	IMPLEMENTATION
// there should only be one more thread in thread group than before we started	WITHOUT_CLASSIFICATION	0.9999789836830156	WITHOUT_CLASSIFICATION	2.101631698439403E-5	IMPLEMENTATION
// construct a new cache with thread's classloader and no limit	WITHOUT_CLASSIFICATION	0.9999628443708757	WITHOUT_CLASSIFICATION	3.715562912433084E-5	IMPLEMENTATION
//        Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); //        Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();	WITHOUT_CLASSIFICATION	0.9999851213253476	WITHOUT_CLASSIFICATION	1.4878674652383059E-5	IMPLEMENTATION
//        assertSame(script1, script2);	WITHOUT_CLASSIFICATION	0.9999716916995084	WITHOUT_CLASSIFICATION	2.830830049163399E-5	IMPLEMENTATION
// void methods should work	WITHOUT_CLASSIFICATION	0.9998935610070915	WITHOUT_CLASSIFICATION	1.0643899290848488E-4	IMPLEMENTATION
// methods with required = 4 or higher should bind and be callable using reflection // JRUBY-3649	WITHOUT_CLASSIFICATION	0.9999575297175718	WITHOUT_CLASSIFICATION	4.24702824281505E-5	IMPLEMENTATION
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999943122858007	WITHOUT_CLASSIFICATION	5.687714199379069E-6	IMPLEMENTATION
// Ensure we have a new interpreter for each test. Previous we were using the //  same interpreter which caused problems as soon as one test failed.	WITHOUT_CLASSIFICATION	0.999990687889155	WITHOUT_CLASSIFICATION	9.312110845079038E-6	IMPLEMENTATION
// Without a flush Ant will miss some of our output	WITHOUT_CLASSIFICATION	0.9999287125846198	WITHOUT_CLASSIFICATION	7.128741538019032E-5	IMPLEMENTATION
// assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());	WITHOUT_CLASSIFICATION	0.9999338982238464	WITHOUT_CLASSIFICATION	6.610177615363326E-5	IMPLEMENTATION
//        int n = 10;	WITHOUT_CLASSIFICATION	0.9999599233707721	WITHOUT_CLASSIFICATION	4.007662922788599E-5	IMPLEMENTATION
// there might be more test classes in a single file, so we iterate over them	WITHOUT_CLASSIFICATION	0.9999826105810777	WITHOUT_CLASSIFICATION	1.7389418922222492E-5	IMPLEMENTATION
//No ClassCastException!	WITHOUT_CLASSIFICATION	0.9999504246821899	WITHOUT_CLASSIFICATION	4.957531781015163E-5	IMPLEMENTATION
// value equality	WITHOUT_CLASSIFICATION	0.9999731555538752	WITHOUT_CLASSIFICATION	2.6844446124805865E-5	IMPLEMENTATION
// identity equality	WITHOUT_CLASSIFICATION	0.9999105447357953	WITHOUT_CLASSIFICATION	8.945526420470178E-5	IMPLEMENTATION
// bench straight-up integer fib(30)	WITHOUT_CLASSIFICATION	0.9999046440103107	WITHOUT_CLASSIFICATION	9.535598968934534E-5	IMPLEMENTATION
// bench Integer fib	WITHOUT_CLASSIFICATION	0.9998807049261299	WITHOUT_CLASSIFICATION	1.1929507387004822E-4	IMPLEMENTATION
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9998969834654342	WITHOUT_CLASSIFICATION	1.0301653456577911E-4	IMPLEMENTATION
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9998969834654342	WITHOUT_CLASSIFICATION	1.0301653456577911E-4	IMPLEMENTATION
// bench fixnum-boxed fib	WITHOUT_CLASSIFICATION	0.9998967668403046	WITHOUT_CLASSIFICATION	1.032331596954586E-4	IMPLEMENTATION
// bench straight-up long fib(30)	WITHOUT_CLASSIFICATION	0.9999011981114087	WITHOUT_CLASSIFICATION	9.880188859136881E-5	IMPLEMENTATION
// bench Long fib	WITHOUT_CLASSIFICATION	0.9998774570936766	WITHOUT_CLASSIFICATION	1.225429063235182E-4	IMPLEMENTATION
// skip this one, probably no 'ls' (windows)	WITHOUT_CLASSIFICATION	0.9999508286409298	WITHOUT_CLASSIFICATION	4.917135907027625E-5	IMPLEMENTATION
// start off with a neutral parent	WITHOUT_CLASSIFICATION	0.9999633303749533	WITHOUT_CLASSIFICATION	3.666962504673452E-5	IMPLEMENTATION
/*            public class Hello {                public static String getMessage() {                    return ".....";                }            }            */	WITHOUT_CLASSIFICATION	0.9999992066071055	WITHOUT_CLASSIFICATION	7.933928945488763E-7	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999634839188032	WITHOUT_CLASSIFICATION	3.651608119672637E-5	IMPLEMENTATION
// Note: We can't use file.exists() to check whether the symlink // exists or not, because that method returns false for existing // but broken symlink. So, we try without the existence check, // but in the try-catch block. // MRI behavior: symlink? on broken symlink should return true.	WITHOUT_CLASSIFICATION	0.9999973196556592	WITHOUT_CLASSIFICATION	2.6803443408947072E-6	IMPLEMENTATION
// We are creating a new IO object that shares the same // IOHandler (and fileno).	WITHOUT_CLASSIFICATION	0.9999595931564451	WITHOUT_CLASSIFICATION	4.040684355483429E-5	IMPLEMENTATION
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999423011699101	WITHOUT_CLASSIFICATION	5.769883008996552E-5	IMPLEMENTATION
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9999279391947358	WITHOUT_CLASSIFICATION	7.206080526422058E-5	IMPLEMENTATION
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999737776785589	WITHOUT_CLASSIFICATION	2.6222321441037146E-5	IMPLEMENTATION
// Translate "x || y" --> "x = (is_true(x) ? x : y)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, true, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9999671283219284	WITHOUT_CLASSIFICATION	3.2871678071626745E-5	IMPLEMENTATION
// // Force the client socket to be blocking //	WITHOUT_CLASSIFICATION	0.9999575067334284	WITHOUT_CLASSIFICATION	4.249326657165196E-5	IMPLEMENTATION
// Additional context surrounding tokens that both the lexer and // grammar use.	WITHOUT_CLASSIFICATION	0.999949979167351	WITHOUT_CLASSIFICATION	5.0020832649023046E-5	IMPLEMENTATION
// Enebo:  c can never be antrhign but '.' // Why did I put this here?	WITHOUT_CLASSIFICATION	0.9997972041644821	WITHOUT_CLASSIFICATION	2.0279583551788673E-4	IMPLEMENTATION
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9999883075409699	WITHOUT_CLASSIFICATION	1.1692459030003618E-5	IMPLEMENTATION
//[C,C] //[C, boolean]	WITHOUT_CLASSIFICATION	0.9999333553807304	WITHOUT_CLASSIFICATION	6.664461926961133E-5	IMPLEMENTATION
// Label for the start of the closure (used to implement redo) // Label for the end of the closure (used to implement retry)	WITHOUT_CLASSIFICATION	0.999116002691761	WITHOUT_CLASSIFICATION	8.839973082390224E-4	IMPLEMENTATION
// ignore; job was cancelled // FIXME: is this ok?	WITHOUT_CLASSIFICATION	0.9999711960874897	WITHOUT_CLASSIFICATION	2.880391251037281E-5	IMPLEMENTATION
//                    // check arity //                    checkArity(mv, scope);	WITHOUT_CLASSIFICATION	0.9999790904337936	WITHOUT_CLASSIFICATION	2.0909566206306412E-5	IMPLEMENTATION
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9999542437769173	WITHOUT_CLASSIFICATION	4.5756223082665154E-5	IMPLEMENTATION
// we take the first method found as our "n" method, since for any non-specific // arity they'll all error the same. If an actual "n" method is created, we // use that.	WITHOUT_CLASSIFICATION	0.9999902637488877	WITHOUT_CLASSIFICATION	9.736251112304212E-6	IMPLEMENTATION
// Used by our duck-typification of Proc into interface types, to allow // coercing a simple proc into an interface parameter.	WITHOUT_CLASSIFICATION	0.9999884487118251	WITHOUT_CLASSIFICATION	1.1551288174887272E-5	IMPLEMENTATION
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999652907608316	WITHOUT_CLASSIFICATION	3.4709239168329275E-5	IMPLEMENTATION
// it's either as converted as we can make it via above logic or it's // not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999344000932253	WITHOUT_CLASSIFICATION	6.559990677457424E-5	IMPLEMENTATION
// package scheme 2: separate module for each full package name, constructed  // from the camel-cased package segments: Java::JavaLang::Object, 	WITHOUT_CLASSIFICATION	0.9999883430799769	WITHOUT_CLASSIFICATION	1.1656920023164638E-5	IMPLEMENTATION
// // construct the proxy method //	WITHOUT_CLASSIFICATION	0.9999601254606255	WITHOUT_CLASSIFICATION	3.987453937442702E-5	IMPLEMENTATION
// line 159 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999420159561684	WITHOUT_CLASSIFICATION	5.798404383158502E-5	IMPLEMENTATION
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999585142651115	WITHOUT_CLASSIFICATION	4.14857348884821E-5	IMPLEMENTATION
// line 152 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999420159561684	WITHOUT_CLASSIFICATION	5.798404383158502E-5	IMPLEMENTATION
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999936817015125	WITHOUT_CLASSIFICATION	6.318298487471416E-6	IMPLEMENTATION
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999585142651115	WITHOUT_CLASSIFICATION	4.14857348884821E-5	IMPLEMENTATION
// We only need to pass in current scope if we are evaluating as a block (which // is only done for evals).  We need to pass this in so that we can appropriately scope // down to captured scopes when we are parsing.	WITHOUT_CLASSIFICATION	0.9999678081097961	WITHOUT_CLASSIFICATION	3.219189020385413E-5	IMPLEMENTATION
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999824785859215	WITHOUT_CLASSIFICATION	1.7521414078515634E-5	IMPLEMENTATION
// A place to store that special hiding space that bindings need to implement things like: // eval("a = 1", binding); eval("p a").  All binding instances must get access to this // hidden shared scope.  We store it here.  This will be null if no binding has yet // been called.	WITHOUT_CLASSIFICATION	0.9932080682149675	WITHOUT_CLASSIFICATION	0.0067919317850325366	IMPLEMENTATION
// TODO: make it 16 now ? // MUST be power of 2!	WITHOUT_CLASSIFICATION	0.8614694678004786	WITHOUT_CLASSIFICATION	0.13853053219952136	IMPLEMENTATION
// check visibility // dup method	WITHOUT_CLASSIFICATION	0.9999827833967962	WITHOUT_CLASSIFICATION	1.7216603203774655E-5	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999894111398464	WITHOUT_CLASSIFICATION	1.0588860153627184E-5	IMPLEMENTATION
// unsigned int, native // unsigned long, native	WITHOUT_CLASSIFICATION	0.999855735505682	WITHOUT_CLASSIFICATION	1.4426449431801015E-4	IMPLEMENTATION
//need padding //I'm fairly sure there is a library call to create a //string filled with a given char with a given length but I couldn't find it	WITHOUT_CLASSIFICATION	0.9999934013505152	WITHOUT_CLASSIFICATION	6.598649484727319E-6	IMPLEMENTATION
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999939739378502	WITHOUT_CLASSIFICATION	6.026062149844594E-6	IMPLEMENTATION
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999656311078643	WITHOUT_CLASSIFICATION	3.436889213575389E-5	IMPLEMENTATION
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999683043406256	WITHOUT_CLASSIFICATION	3.169565937451216E-5	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.999989462554318	WITHOUT_CLASSIFICATION	1.0537445681939541E-5	IMPLEMENTATION
// Estimate the square root with the foremost 62 bits of squarD // bi and scale are a tandem	WITHOUT_CLASSIFICATION	0.9999295446497238	WITHOUT_CLASSIFICATION	7.04553502761836E-5	IMPLEMENTATION
// captures // begin and end are used when not groups defined // source string	WITHOUT_CLASSIFICATION	0.9999744734940067	WITHOUT_CLASSIFICATION	2.5526505993281413E-5	IMPLEMENTATION
// // INSTANCE VARIABLE RUBY METHODS //	WITHOUT_CLASSIFICATION	0.9999092346308227	WITHOUT_CLASSIFICATION	9.076536917722085E-5	IMPLEMENTATION
// switch // while	WITHOUT_CLASSIFICATION	0.9999366512653847	WITHOUT_CLASSIFICATION	6.334873461526196E-5	IMPLEMENTATION
// For nodes do not have their own scope so we pass null to indicate this. // 'For's are implemented as blocks in evaluation, but they have no scope so we // just deal with this lack of scope throughout its lifespan.  We should probably // change the way this works to get rid of multiple null checks.	WITHOUT_CLASSIFICATION	0.9994499716506758	WITHOUT_CLASSIFICATION	5.500283493241371E-4	IMPLEMENTATION
// This field is used during argument processing to avoid putting RubyArray // instances that are purely for utility purposes into ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999934147035011	WITHOUT_CLASSIFICATION	6.585296498777204E-6	IMPLEMENTATION
// Parent container for this context (can be dynamic!!) // If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure // List of IR instructions for this method	WITHOUT_CLASSIFICATION	0.9999937710982066	WITHOUT_CLASSIFICATION	6.228901793297174E-6	IMPLEMENTATION
// Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = false    //    beq(v1, false, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999615496493838	WITHOUT_CLASSIFICATION	3.845035061623707E-5	IMPLEMENTATION
// expected	WITHOUT_CLASSIFICATION	0.9999549364053929	WITHOUT_CLASSIFICATION	4.5063594607080545E-5	IMPLEMENTATION
// Do nothing	WITHOUT_CLASSIFICATION	0.999978509146633	WITHOUT_CLASSIFICATION	2.1490853367075307E-5	IMPLEMENTATION
// constructor	WITHOUT_CLASSIFICATION	0.9999267500832415	WITHOUT_CLASSIFICATION	7.324991675849165E-5	IMPLEMENTATION
// If a line is followed by a blank line put // it back.	WITHOUT_CLASSIFICATION	0.9999394539194575	WITHOUT_CLASSIFICATION	6.054608054255943E-5	IMPLEMENTATION
/* $>: default output handle */	WITHOUT_CLASSIFICATION	0.9999242400541482	WITHOUT_CLASSIFICATION	7.575994585184726E-5	IMPLEMENTATION
// line 423	WITHOUT_CLASSIFICATION	0.9999109300086373	WITHOUT_CLASSIFICATION	8.906999136276226E-5	IMPLEMENTATION
// line 486	WITHOUT_CLASSIFICATION	0.9999109300086373	WITHOUT_CLASSIFICATION	8.906999136276226E-5	IMPLEMENTATION
// Signal uses sun.misc.* classes, this is not allowed // in the security-sensitive environments	WITHOUT_CLASSIFICATION	0.9999861215162968	WITHOUT_CLASSIFICATION	1.3878483703110706E-5	IMPLEMENTATION
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999590800310733	WITHOUT_CLASSIFICATION	4.091996892678793E-5	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999336062087769	WITHOUT_CLASSIFICATION	6.639379122303934E-5	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999336062087769	WITHOUT_CLASSIFICATION	6.639379122303934E-5	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999148422928285	WITHOUT_CLASSIFICATION	8.515770717159924E-5	IMPLEMENTATION
// if there's no receiver, evaluate and pass in the superclass, or // pass self if it no superclass	WITHOUT_CLASSIFICATION	0.9999918012275871	WITHOUT_CLASSIFICATION	8.198772412763516E-6	IMPLEMENTATION
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9998385098070598	WITHOUT_CLASSIFICATION	1.6149019294019447E-4	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9368501523217421	WITHOUT_CLASSIFICATION	0.06314984767825789	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9368501523217421	WITHOUT_CLASSIFICATION	0.06314984767825789	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9368501523217421	WITHOUT_CLASSIFICATION	0.06314984767825789	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9368501523217421	WITHOUT_CLASSIFICATION	0.06314984767825789	IMPLEMENTATION
// Decrease value to hit upper range.  	WITHOUT_CLASSIFICATION	0.9999570788907686	WITHOUT_CLASSIFICATION	4.292110923137148E-5	IMPLEMENTATION
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999033717696241	WITHOUT_CLASSIFICATION	9.662823037588864E-5	IMPLEMENTATION
// "else" body	WITHOUT_CLASSIFICATION	0.9998766846217828	WITHOUT_CLASSIFICATION	1.2331537821723534E-4	IMPLEMENTATION
// done // done // done // Nothing to do for 1.8 // done // done // done // done // done // done // done? // done // done // done // done // done // done // done // done // done // done // done //            case DEFINEDNODE: return buildDefined(node, m); // Incomplete // done // done // done // done // done // done // done // done //            case ENSURENODE: return buildEnsureNode(node, m); // DEFERRED // done // done // done // done //            case FLIPNODE: return buildFlip(node, m); // SSS FIXME: What code generates this AST? // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done? // done // done // done // done // done // done -- partially //            case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); // DEFERRED SSS FIXME: What code generates this AST? // done //            case POSTEXENODE: return buildPostExe(node, m); // DEFERRED //            case PREEXENODE: return buildPreExe(node, m); // DEFERRED // done?? // done	WITHOUT_CLASSIFICATION	0.9999669589133913	WITHOUT_CLASSIFICATION	3.304108660875851E-5	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.999891906560817	WITHOUT_CLASSIFICATION	1.0809343918316703E-4	IMPLEMENTATION
/* $+: string matches last paren. */	WITHOUT_CLASSIFICATION	0.9999528454134211	WITHOUT_CLASSIFICATION	4.715458657883928E-5	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9998981161148685	WITHOUT_CLASSIFICATION	1.018838851316541E-4	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9998981161148685	WITHOUT_CLASSIFICATION	1.018838851316541E-4	IMPLEMENTATION
// Ruby code frequently uses a platform check to choose "NUL:" on windows // but since that check doesn't work well on JRuby, we help it out	WITHOUT_CLASSIFICATION	0.9999612280235171	WITHOUT_CLASSIFICATION	3.8771976482887224E-5	IMPLEMENTATION
/* 10! */	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
//            case RESCUENODE: return buildRescue(node, m); // DEFERRED //            case RETRYNODE: return buildRetry(node, m); // DEFERRED // done	WITHOUT_CLASSIFICATION	0.9999750141711328	WITHOUT_CLASSIFICATION	2.4985828867247176E-5	IMPLEMENTATION
// Is this instruction live or dead?  During optimization passes, if this instruction // causes no side-effects and the result of the instruction is not needed by anyone else, // we can remove this instruction altogether without affecting program correctness.	WITHOUT_CLASSIFICATION	0.999345368272445	WITHOUT_CLASSIFICATION	6.546317275549171E-4	IMPLEMENTATION
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999397317515037	WITHOUT_CLASSIFICATION	6.026824849627038E-5	IMPLEMENTATION
// first, iterate over all required args	WITHOUT_CLASSIFICATION	0.9999623628054971	WITHOUT_CLASSIFICATION	3.763719450284517E-5	IMPLEMENTATION
// // Determine if the parameter might be passed as a 32bit int parameter. // This just applies to buffer/pointer types. //	WITHOUT_CLASSIFICATION	0.9999929171625818	WITHOUT_CLASSIFICATION	7.082837418217955E-6	IMPLEMENTATION
//Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());	WITHOUT_CLASSIFICATION	0.9999198165220347	WITHOUT_CLASSIFICATION	8.018347796530835E-5	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9998766846217828	WITHOUT_CLASSIFICATION	1.2331537821723534E-4	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9998766846217828	WITHOUT_CLASSIFICATION	1.2331537821723534E-4	IMPLEMENTATION
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999936817015125	WITHOUT_CLASSIFICATION	6.318298487471416E-6	IMPLEMENTATION
// line 449	WITHOUT_CLASSIFICATION	0.9999109300086373	WITHOUT_CLASSIFICATION	8.906999136276226E-5	IMPLEMENTATION
// line 495	WITHOUT_CLASSIFICATION	0.9999109300086373	WITHOUT_CLASSIFICATION	8.906999136276226E-5	IMPLEMENTATION
// Management/monitoring	WITHOUT_CLASSIFICATION	0.9999061240833145	WITHOUT_CLASSIFICATION	9.387591668553598E-5	IMPLEMENTATION
// if we've found the last char of the separator, // and we've found at least as many characters as separator length, // and the last n characters of our buffer match the separator, we're done	WITHOUT_CLASSIFICATION	0.9999981451478113	WITHOUT_CLASSIFICATION	1.8548521888051446E-6	IMPLEMENTATION
/* 14! */	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
// Process any set of annotations // No supported options	WITHOUT_CLASSIFICATION	0.9999533476953357	WITHOUT_CLASSIFICATION	4.66523046642334E-5	IMPLEMENTATION
// add to the jitted methods set	WITHOUT_CLASSIFICATION	0.9999727954644523	WITHOUT_CLASSIFICATION	2.7204535547682758E-5	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.9999476848367739	WITHOUT_CLASSIFICATION	5.23151632261222E-5	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.9999476848367739	WITHOUT_CLASSIFICATION	5.23151632261222E-5	IMPLEMENTATION
//            case SCLASSNODE: return buildSClass(node, m); // DEFERRED // done // done // done // done // done // done // done // done //            case UNDEFNODE: return buildUndef(node, m); // DEFERRED // done //            case VALIASNODE: return buildVAlias(node, m); // DEFERRED // done // done	WITHOUT_CLASSIFICATION	0.9999765340373489	WITHOUT_CLASSIFICATION	2.3465962651121133E-5	IMPLEMENTATION
// // Adding a post-invoke for the cb result serves to both keep it alive // until after the function returns, and allows us to clean up the native // trampoline early, instead of letting them accumulate until a GC run //	WITHOUT_CLASSIFICATION	0.9999952723452302	WITHOUT_CLASSIFICATION	4.727654769832582E-6	IMPLEMENTATION
/* The Java method doesn't care what class it is, but we need to               know what to convert it to, so we use the object's own class.               If that doesn't help, we use String to force a call to the               object's "to_s" method. */	WITHOUT_CLASSIFICATION	0.9999291312779138	WITHOUT_CLASSIFICATION	7.086872208614176E-5	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.9999377549062783	WITHOUT_CLASSIFICATION	6.224509372170823E-5	IMPLEMENTATION
// Atomic integers for symbol and method IDs	WITHOUT_CLASSIFICATION	0.9998876318908438	WITHOUT_CLASSIFICATION	1.1236810915620029E-4	IMPLEMENTATION
/* 18! */	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.999973775693027	WITHOUT_CLASSIFICATION	2.6224306972985485E-5	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999644341910761	WITHOUT_CLASSIFICATION	3.556580892403275E-5	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999644341910761	WITHOUT_CLASSIFICATION	3.556580892403275E-5	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999644341910761	WITHOUT_CLASSIFICATION	3.556580892403275E-5	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999644341910761	WITHOUT_CLASSIFICATION	3.556580892403275E-5	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999899571906399	WITHOUT_CLASSIFICATION	1.0042809360135015E-5	IMPLEMENTATION
/*      * This method takes as input a map of operands to their values, and outputs     * the result of this instruction.     *     * If the value map provides a value for any of the instruction's operands     * the expectation is that the operand will be replaced with the simplified value.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify.     *     * @param valueMap Mapping from operands to their simplified values     * @returns simplified result / output of this instruction     */	WITHOUT_CLASSIFICATION	0.9999988738594422	WITHOUT_CLASSIFICATION	1.1261405578277002E-6	IMPLEMENTATION
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9998988121495027	WITHOUT_CLASSIFICATION	1.0118785049731468E-4	IMPLEMENTATION
// An atomic long for generating DynamicMethod serial numbers	WITHOUT_CLASSIFICATION	0.9999178144424815	WITHOUT_CLASSIFICATION	8.218555751855559E-5	IMPLEMENTATION
// MRI behavior: always check whether the file is writable // or not, even if we are to write 0 bytes.	WITHOUT_CLASSIFICATION	0.9999893725037929	WITHOUT_CLASSIFICATION	1.062749620696235E-5	IMPLEMENTATION
/* 22! */	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.9999147972959789	WITHOUT_CLASSIFICATION	8.520270402114218E-5	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999522887676365	WITHOUT_CLASSIFICATION	4.7711232363487126E-5	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999522887676365	WITHOUT_CLASSIFICATION	4.7711232363487126E-5	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999522887676365	WITHOUT_CLASSIFICATION	4.7711232363487126E-5	IMPLEMENTATION
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999404664877055	WITHOUT_CLASSIFICATION	5.953351229434666E-5	IMPLEMENTATION
// Build a new class and add it to the current scope (could be a script / module / class)	WITHOUT_CLASSIFICATION	0.9999924625245821	WITHOUT_CLASSIFICATION	7.5374754179613844E-6	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999793989184829	WITHOUT_CLASSIFICATION	2.0601081517138222E-5	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999793989184829	WITHOUT_CLASSIFICATION	2.0601081517138222E-5	IMPLEMENTATION
// AF_INET	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
//////////////////////////////////////////////////////////////////////////// // Now we provide default impls of a number of signatures. For each arity, // we first generate a non-block version of the method, which just adds // NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can // potentially take a block, to only generate the block-receiving signature // and still avoid arg boxing. // // We then provide default implementations of each block-accepting method // that in turn call the IRubyObject[]+Block version of call. This then // finally falls back on the minimum implementation requirement for // dynamic method handles. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999336547404	WITHOUT_CLASSIFICATION	6.63452596459281E-8	IMPLEMENTATION
// Because we implement Java interfaces now, we need a new === that's // aware of those additional "virtual" supertypes	WITHOUT_CLASSIFICATION	0.9972523653562888	WITHOUT_CLASSIFICATION	0.002747634643711161	IMPLEMENTATION
// BASE64	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
/* note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY         * when value is an integer less than 1.         * We treat 0 as a special case to avoid Domain error.         */	WITHOUT_CLASSIFICATION	0.9999927780015978	WITHOUT_CLASSIFICATION	7.22199840216025E-6	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.9999000653450345	WITHOUT_CLASSIFICATION	9.993465496558884E-5	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999704102692514	WITHOUT_CLASSIFICATION	2.958973074863651E-5	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999704102692514	WITHOUT_CLASSIFICATION	2.958973074863651E-5	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999436274915615	WITHOUT_CLASSIFICATION	5.637250843838062E-5	IMPLEMENTATION
// SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode // We won't get here for argument receives!  So, buildDasgn is called for // assignments to block variables within a block.  As far as the IR is concerned, // this is just a simple copy	WITHOUT_CLASSIFICATION	0.9999964635952933	WITHOUT_CLASSIFICATION	3.5364047066240867E-6	IMPLEMENTATION
// getSimplifiedOperand returns the value of this operand, fully simplified // getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away // // The value is used during optimizations and propagated through the IR.  But, it is thrown away after that. // But, the operand form is used for constructing the compound objects represented by the operand. // // Example: a = [1], b = [3,4], c = [a,b], d = [2,c] //   -- getValue(c) = [1,[3,4]];     getSimplifiedOperand(c) = [1, b] //   -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] // // Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. // So, if contents of a or b is modified, the "simplified value"s of c and d also change!  This difference // is captured by these two methods.	WITHOUT_CLASSIFICATION	0.9999999805280846	WITHOUT_CLASSIFICATION	1.9471915468811587E-8	IMPLEMENTATION
//IRubyObject protocol = args[4];	WITHOUT_CLASSIFICATION	0.9999137839755032	WITHOUT_CLASSIFICATION	8.621602449674764E-5	IMPLEMENTATION
// promise to implement three to N with block	WITHOUT_CLASSIFICATION	0.9855148847479439	WITHOUT_CLASSIFICATION	0.01448511525205602	IMPLEMENTATION
// Ruby's OMG capture all source in a Hash feature // Add each line to buffer when encountering newline or EOF for first time.	WITHOUT_CLASSIFICATION	0.9999829197605714	WITHOUT_CLASSIFICATION	1.7080239428673484E-5	IMPLEMENTATION
// carriage return	WITHOUT_CLASSIFICATION	0.9999216861255908	WITHOUT_CLASSIFICATION	7.831387440913236E-5	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998766846217828	WITHOUT_CLASSIFICATION	1.2331537821723534E-4	IMPLEMENTATION
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9999740646650844	WITHOUT_CLASSIFICATION	2.593533491549684E-5	IMPLEMENTATION
// String construction routines by NOT byte[] buffer and making the target String shared 	WITHOUT_CLASSIFICATION	0.9999824788832702	WITHOUT_CLASSIFICATION	1.7521116729833824E-5	IMPLEMENTATION
// insert all nodes in sequence, hash them in the final instruction // KEY	WITHOUT_CLASSIFICATION	0.9999860817539648	WITHOUT_CLASSIFICATION	1.391824603539226E-5	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999941208648452	WITHOUT_CLASSIFICATION	5.8791351547752744E-6	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999557569151616	WITHOUT_CLASSIFICATION	4.424308483838457E-5	IMPLEMENTATION
// Basic Block id // CFG that this basic block belongs to // All basic blocks have a starting label // List of non-label instructions	WITHOUT_CLASSIFICATION	0.9999545325120711	WITHOUT_CLASSIFICATION	4.546748792892335E-5	IMPLEMENTATION
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999847594851835	WITHOUT_CLASSIFICATION	1.5240514816518468E-5	IMPLEMENTATION
// For all uninitialized specific arities, we defer to the "n" method which // should raise appropriate error in all cases.	WITHOUT_CLASSIFICATION	0.9999796779105385	WITHOUT_CLASSIFICATION	2.0322089461483367E-5	IMPLEMENTATION
// implement is called to force this class to create stubs for all // methods in the given interface, so they'll show up in the list // of methods and be invocable without passing through method_missing	WITHOUT_CLASSIFICATION	0.9999215452328047	WITHOUT_CLASSIFICATION	7.845476719520514E-5	IMPLEMENTATION
// CASE IR instructions are dummy instructions  // -- all when/then clauses have been converted into if-then-else blocks	WITHOUT_CLASSIFICATION	0.9999611848845946	WITHOUT_CLASSIFICATION	3.8815115405280364E-5	IMPLEMENTATION
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999863524513037	WITHOUT_CLASSIFICATION	1.3647548696214568E-5	IMPLEMENTATION
// leave it null and fall back on our normal invocation logic	WITHOUT_CLASSIFICATION	0.9999538453814969	WITHOUT_CLASSIFICATION	4.615461850321782E-5	IMPLEMENTATION
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999861555443634	WITHOUT_CLASSIFICATION	1.3844455636583703E-5	IMPLEMENTATION
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9987802656459452	WITHOUT_CLASSIFICATION	0.0012197343540547405	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999330321010502	WITHOUT_CLASSIFICATION	6.696789894973229E-5	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999330321010502	WITHOUT_CLASSIFICATION	6.696789894973229E-5	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999330321010502	WITHOUT_CLASSIFICATION	6.696789894973229E-5	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999330321010502	WITHOUT_CLASSIFICATION	6.696789894973229E-5	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999330321010502	WITHOUT_CLASSIFICATION	6.696789894973229E-5	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999330321010502	WITHOUT_CLASSIFICATION	6.696789894973229E-5	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999330321010502	WITHOUT_CLASSIFICATION	6.696789894973229E-5	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999330321010502	WITHOUT_CLASSIFICATION	6.696789894973229E-5	IMPLEMENTATION
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999625354807586	WITHOUT_CLASSIFICATION	3.746451924143684E-5	IMPLEMENTATION
/* fall through */	WITHOUT_CLASSIFICATION	0.9999111618614804	WITHOUT_CLASSIFICATION	8.883813851955418E-5	IMPLEMENTATION
// deal with case when "other" is not a string	WITHOUT_CLASSIFICATION	0.999968144286137	WITHOUT_CLASSIFICATION	3.185571386301009E-5	IMPLEMENTATION
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.999985969833496	WITHOUT_CLASSIFICATION	1.403016650398451E-5	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999634839188032	WITHOUT_CLASSIFICATION	3.651608119672637E-5	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999634839188032	WITHOUT_CLASSIFICATION	3.651608119672637E-5	IMPLEMENTATION
// store argument count information into scope	WITHOUT_CLASSIFICATION	0.9999845319774754	WITHOUT_CLASSIFICATION	1.546802252456961E-5	IMPLEMENTATION
// the load method is used for loading as a top-level script, and prepares appropriate scoping around the code	WITHOUT_CLASSIFICATION	0.9999813547665878	WITHOUT_CLASSIFICATION	1.8645233412173594E-5	IMPLEMENTATION
// First, build assignments for specific named arguments	WITHOUT_CLASSIFICATION	0.9999689176808648	WITHOUT_CLASSIFICATION	3.10823191351271E-5	IMPLEMENTATION
//        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } //        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }	WITHOUT_CLASSIFICATION	0.9999787094602893	WITHOUT_CLASSIFICATION	2.1290539710615336E-5	IMPLEMENTATION
// get current context	WITHOUT_CLASSIFICATION	0.9999682151270505	WITHOUT_CLASSIFICATION	3.1784872949554425E-5	IMPLEMENTATION
// octal constant	WITHOUT_CLASSIFICATION	0.9998943956782058	WITHOUT_CLASSIFICATION	1.0560432179420408E-4	IMPLEMENTATION
// read	WITHOUT_CLASSIFICATION	0.9963957294831154	WITHOUT_CLASSIFICATION	0.0036042705168844915	IMPLEMENTATION
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9998833497061067	WITHOUT_CLASSIFICATION	1.1665029389331487E-4	IMPLEMENTATION
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9998936881024724	WITHOUT_CLASSIFICATION	1.0631189752750957E-4	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999587242771664	WITHOUT_CLASSIFICATION	4.127572283369368E-5	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999587242771664	WITHOUT_CLASSIFICATION	4.127572283369368E-5	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999587242771664	WITHOUT_CLASSIFICATION	4.127572283369368E-5	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998795508624839	WITHOUT_CLASSIFICATION	1.2044913751614891E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998795508624839	WITHOUT_CLASSIFICATION	1.2044913751614891E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998795508624839	WITHOUT_CLASSIFICATION	1.2044913751614891E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998795508624839	WITHOUT_CLASSIFICATION	1.2044913751614891E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998795508624839	WITHOUT_CLASSIFICATION	1.2044913751614891E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998795508624839	WITHOUT_CLASSIFICATION	1.2044913751614891E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998795508624839	WITHOUT_CLASSIFICATION	1.2044913751614891E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998795508624839	WITHOUT_CLASSIFICATION	1.2044913751614891E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998795508624839	WITHOUT_CLASSIFICATION	1.2044913751614891E-4	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999946341388428	WITHOUT_CLASSIFICATION	5.3658611571618445E-6	IMPLEMENTATION
// at end	WITHOUT_CLASSIFICATION	0.9958073789714463	WITHOUT_CLASSIFICATION	0.0041926210285535845	IMPLEMENTATION
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999273821183888	WITHOUT_CLASSIFICATION	7.261788161115836E-5	IMPLEMENTATION
// save blocking state	WITHOUT_CLASSIFICATION	0.9999436416548738	WITHOUT_CLASSIFICATION	5.635834512622663E-5	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998795508624839	WITHOUT_CLASSIFICATION	1.2044913751614891E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998795508624839	WITHOUT_CLASSIFICATION	1.2044913751614891E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998795508624839	WITHOUT_CLASSIFICATION	1.2044913751614891E-4	IMPLEMENTATION
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999284234812122	WITHOUT_CLASSIFICATION	7.157651878771992E-5	IMPLEMENTATION
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999756655350728	WITHOUT_CLASSIFICATION	2.4334464927187902E-5	IMPLEMENTATION
// fall back on empty env when security disallows environment var access (like in an applet)	WITHOUT_CLASSIFICATION	0.9999588397206303	WITHOUT_CLASSIFICATION	4.116027936972711E-5	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999106722051068	WITHOUT_CLASSIFICATION	8.932779489331391E-5	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999106722051068	WITHOUT_CLASSIFICATION	8.932779489331391E-5	IMPLEMENTATION
// load null block	WITHOUT_CLASSIFICATION	0.9999172360317878	WITHOUT_CLASSIFICATION	8.276396821218274E-5	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999875542857046	WITHOUT_CLASSIFICATION	1.244571429550959E-5	IMPLEMENTATION
// nothing else to here - the module version will be // included in the class.	WITHOUT_CLASSIFICATION	0.9999946374232109	WITHOUT_CLASSIFICATION	5.362576789003328E-6	IMPLEMENTATION
// JRUBY-1000, fail early when attempting to subclass a final Java class; // solved here by adding an exception-throwing "inherited"	WITHOUT_CLASSIFICATION	0.9999686821274374	WITHOUT_CLASSIFICATION	3.131787256256533E-5	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9998765766087401	WITHOUT_CLASSIFICATION	1.2342339125993645E-4	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9998765766087401	WITHOUT_CLASSIFICATION	1.2342339125993645E-4	IMPLEMENTATION
// Translate ret = (a || b) to ret = (a ? true : b) as follows //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = true //    beq(v1, true, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999586457758106	WITHOUT_CLASSIFICATION	4.135422418939565E-5	IMPLEMENTATION
// Initial precision is that of double numbers 2^63/2 ~ 4E18 // 63-1 an even number of number bits // precision seems 16 to 18 digits	WITHOUT_CLASSIFICATION	0.9999865747368969	WITHOUT_CLASSIFICATION	1.3425263103075072E-5	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9998811696403566	WITHOUT_CLASSIFICATION	1.1883035964344438E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.999928916142402	WITHOUT_CLASSIFICATION	7.108385759806186E-5	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999586465525656	WITHOUT_CLASSIFICATION	4.135344743431455E-5	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999586465525656	WITHOUT_CLASSIFICATION	4.135344743431455E-5	IMPLEMENTATION
// check arity	WITHOUT_CLASSIFICATION	0.9999654349916641	WITHOUT_CLASSIFICATION	3.456500833581963E-5	IMPLEMENTATION
// check arity	WITHOUT_CLASSIFICATION	0.9999654349916641	WITHOUT_CLASSIFICATION	3.456500833581963E-5	IMPLEMENTATION
// create the class	WITHOUT_CLASSIFICATION	0.9999863315142635	WITHOUT_CLASSIFICATION	1.3668485736567427E-5	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999817874264073	WITHOUT_CLASSIFICATION	1.8212573592669165E-5	IMPLEMENTATION
// No hex value after the 'x'.	WITHOUT_CLASSIFICATION	0.9999640091618677	WITHOUT_CLASSIFICATION	3.599083813240931E-5	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9998965151503372	WITHOUT_CLASSIFICATION	1.0348484966281427E-4	IMPLEMENTATION
// Let m be the exact digits precision in an earlier! loop	WITHOUT_CLASSIFICATION	0.9999325559008445	WITHOUT_CLASSIFICATION	6.744409915553472E-5	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999750809116501	WITHOUT_CLASSIFICATION	2.4919088349893627E-5	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9960488871862235	WITHOUT_CLASSIFICATION	0.0039511128137764695	IMPLEMENTATION
// Label for the start of the method // Label for the end of the method	WITHOUT_CLASSIFICATION	0.9999941218835945	WITHOUT_CLASSIFICATION	5.878116405562609E-6	IMPLEMENTATION
// comparisons & checks // checks if the operand is non-null and non-false // EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...	WITHOUT_CLASSIFICATION	0.9999908328381185	WITHOUT_CLASSIFICATION	9.167161881422853E-6	IMPLEMENTATION
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9995067624701738	WITHOUT_CLASSIFICATION	4.932375298262736E-4	IMPLEMENTATION
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9998765236447803	WITHOUT_CLASSIFICATION	1.2347635521967604E-4	IMPLEMENTATION
// all done with lookup attempts, release monitor	WITHOUT_CLASSIFICATION	0.9999444637784808	WITHOUT_CLASSIFICATION	5.553622151925473E-5	IMPLEMENTATION
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999761329220836	WITHOUT_CLASSIFICATION	2.3867077916356883E-5	IMPLEMENTATION
// Create list of interface names to proxy (and make sure they really are interfaces) // Also build a hashcode from all classes to use for retrieving previously-created impl	WITHOUT_CLASSIFICATION	0.9999986290354203	WITHOUT_CLASSIFICATION	1.3709645797378293E-6	IMPLEMENTATION
// Construct local variables based on parameter names passed in	WITHOUT_CLASSIFICATION	0.9999907156457436	WITHOUT_CLASSIFICATION	9.284354256357343E-6	IMPLEMENTATION
// Value of "TZ" property is of a bit different format, // which confuses the Java's TimeZone.getTimeZone(id) method, // and so, we need to convert it.	WITHOUT_CLASSIFICATION	0.9999614811394333	WITHOUT_CLASSIFICATION	3.851886056676456E-5	IMPLEMENTATION
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.999931971339599	WITHOUT_CLASSIFICATION	6.802866040105468E-5	IMPLEMENTATION
// ensure the object is associated with the wrapper we found it in, // so that if it comes back we don't re-wrap it	WITHOUT_CLASSIFICATION	0.9999912402698281	WITHOUT_CLASSIFICATION	8.75973017194744E-6	IMPLEMENTATION
// return sqrt(squarD) with precision of rootMC	WITHOUT_CLASSIFICATION	0.9999868593615638	WITHOUT_CLASSIFICATION	1.3140638436214997E-5	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.999989462554318	WITHOUT_CLASSIFICATION	1.0537445681939541E-5	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
// Get a new label using the provided label prefix	WITHOUT_CLASSIFICATION	0.999976010316142	WITHOUT_CLASSIFICATION	2.3989683858058127E-5	IMPLEMENTATION
// normal exit, perform finally and return	WITHOUT_CLASSIFICATION	0.9999617521391573	WITHOUT_CLASSIFICATION	3.8247860842698985E-5	IMPLEMENTATION
// coerce arguments	WITHOUT_CLASSIFICATION	0.9999280985857041	WITHOUT_CLASSIFICATION	7.190141429591408E-5	IMPLEMENTATION
// 0.0 is ok // float range // inverted float range? // NaN // +infinity // -infinity	WITHOUT_CLASSIFICATION	0.999951965267337	WITHOUT_CLASSIFICATION	4.803473266287374E-5	IMPLEMENTATION
/* expected */	WITHOUT_CLASSIFICATION	0.999930460347931	WITHOUT_CLASSIFICATION	6.953965206901303E-5	IMPLEMENTATION
// set this class's method names in var @__java_ovrd_methods if this // is the new class; otherwise, get method names from there if this is // a proxy superclass.	WITHOUT_CLASSIFICATION	0.9999966646460394	WITHOUT_CLASSIFICATION	3.3353539605109846E-6	IMPLEMENTATION
/* ignore backslashed spaces in %w */	WITHOUT_CLASSIFICATION	0.9999545758772792	WITHOUT_CLASSIFICATION	4.542412272083794E-5	IMPLEMENTATION
// Invert the sign, since TZ format and Java format // use opposite signs, sigh... Also, Java API requires // the sign to be always present, be it "+" or "-".	WITHOUT_CLASSIFICATION	0.9999504994313364	WITHOUT_CLASSIFICATION	4.950056866368015E-5	IMPLEMENTATION
// no binding given, use 0 for both	WITHOUT_CLASSIFICATION	0.9999314159709823	WITHOUT_CLASSIFICATION	6.858402901770015E-5	IMPLEMENTATION
// <=> may return nil in many circumstances, e.g. 3 <=> NaN        	WITHOUT_CLASSIFICATION	0.9999431313408589	WITHOUT_CLASSIFICATION	5.686865914103226E-5	IMPLEMENTATION
// use numbered access method	WITHOUT_CLASSIFICATION	0.9999477685875042	WITHOUT_CLASSIFICATION	5.223141249570677E-5	IMPLEMENTATION
// Always use "GMT" since that's required by Java API.	WITHOUT_CLASSIFICATION	0.9999435972145687	WITHOUT_CLASSIFICATION	5.640278543121922E-5	IMPLEMENTATION
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.999994731721441	WITHOUT_CLASSIFICATION	5.268278558978477E-6	IMPLEMENTATION
// The dataStruct is a place where custom information can be // contained for core implementations that doesn't necessarily // want to go to the trouble of creating a subclass of // RubyObject. The OpenSSL implementation uses this heavily to // save holder objects containing Java cryptography objects. // Java integration uses this to store the Java object ref. //protected transient Object dataStruct;	WITHOUT_CLASSIFICATION	0.9999979948586607	WITHOUT_CLASSIFICATION	2.005141339257565E-6	IMPLEMENTATION
// Remaining arguments are for the script itself	WITHOUT_CLASSIFICATION	0.9999852729415833	WITHOUT_CLASSIFICATION	1.4727058416575408E-5	IMPLEMENTATION
// arg grouping, use slower arg walking logic	WITHOUT_CLASSIFICATION	0.9999114626587551	WITHOUT_CLASSIFICATION	8.85373412449623E-5	IMPLEMENTATION
// build scope names string	WITHOUT_CLASSIFICATION	0.999945169717779	WITHOUT_CLASSIFICATION	5.483028222097771E-5	IMPLEMENTATION
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999987664752091	WITHOUT_CLASSIFICATION	1.23352479091463E-6	IMPLEMENTATION
// Here we create an "anonymous" exception type used for unrolling the stack. // MRI creates a new one for *every call* to timeout, which can be costly. // We opt to use a single exception type for all cases to avoid this overhead.	WITHOUT_CLASSIFICATION	0.9999909032243037	WITHOUT_CLASSIFICATION	9.096775696265939E-6	IMPLEMENTATION
// finally	WITHOUT_CLASSIFICATION	0.9968019375765838	WITHOUT_CLASSIFICATION	0.0031980624234161895	IMPLEMENTATION
// MRI behavior: With TZ equal to "GMT" or "UTC", Time.now // is *NOT* considered as a proper GMT/UTC time: //   ENV['TZ']="GMT" //   Time.now.gmt? ==> false //   ENV['TZ']="UTC" //   Time.now.utc? ==> false // Hence, we need to adjust for that.	WITHOUT_CLASSIFICATION	0.9999265945764665	WITHOUT_CLASSIFICATION	7.340542353348973E-5	IMPLEMENTATION
// ?l  | boolean | True if file1 exists and is a symbolic link	WITHOUT_CLASSIFICATION	0.9999584019617505	WITHOUT_CLASSIFICATION	4.1598038249610744E-5	IMPLEMENTATION
// This try/catch is to allow failing over to the "commands" logic // when running from within a jruby-complete jar file, which has // jruby.home = a jar file URL that does not resolve correctly with // JRubyFile.create.	WITHOUT_CLASSIFICATION	0.9999865252289583	WITHOUT_CLASSIFICATION	1.3474771041797589E-5	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9998845010300316	WITHOUT_CLASSIFICATION	1.1549896996843008E-4	IMPLEMENTATION
// specific arity	WITHOUT_CLASSIFICATION	0.9999066249847091	WITHOUT_CLASSIFICATION	9.337501529088441E-5	IMPLEMENTATION
// In the case of two arguments, MRI will discard the portion of // the first argument after a decimal point (i.e., "floor"). // However in the case of a single argument, any portion after // the decimal point is honored.	WITHOUT_CLASSIFICATION	0.9999986700451414	WITHOUT_CLASSIFICATION	1.3299548585583805E-6	IMPLEMENTATION
// ?w  | boolean | True if file1 exists and is writable by effective uid/gid	WITHOUT_CLASSIFICATION	0.999959263203352	WITHOUT_CLASSIFICATION	4.0736796647951705E-5	IMPLEMENTATION
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999093234394454	WITHOUT_CLASSIFICATION	9.067656055461046E-5	IMPLEMENTATION
/*    @JRubyMethod    public IRubyObject to_proc() {        return RubyProc.newProc(getRuntime(),                                CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()),                                Block.Type.PROC);    }    */	WITHOUT_CLASSIFICATION	0.9999901499321325	WITHOUT_CLASSIFICATION	9.850067867498734E-6	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999140678526808	WITHOUT_CLASSIFICATION	8.593214731917195E-5	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999140678526808	WITHOUT_CLASSIFICATION	8.593214731917195E-5	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999938877586434	WITHOUT_CLASSIFICATION	6.1122413566828816E-6	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999938877586434	WITHOUT_CLASSIFICATION	6.1122413566828816E-6	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9999579376568669	WITHOUT_CLASSIFICATION	4.206234313307918E-5	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9999579376568669	WITHOUT_CLASSIFICATION	4.206234313307918E-5	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999524945143625	WITHOUT_CLASSIFICATION	4.750548563735474E-5	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999524945143625	WITHOUT_CLASSIFICATION	4.750548563735474E-5	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9998899011135143	WITHOUT_CLASSIFICATION	1.1009888648576026E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9998899011135143	WITHOUT_CLASSIFICATION	1.1009888648576026E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9998899011135143	WITHOUT_CLASSIFICATION	1.1009888648576026E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9998899011135143	WITHOUT_CLASSIFICATION	1.1009888648576026E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9998899011135143	WITHOUT_CLASSIFICATION	1.1009888648576026E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9998899011135143	WITHOUT_CLASSIFICATION	1.1009888648576026E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9998899011135143	WITHOUT_CLASSIFICATION	1.1009888648576026E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9998899011135143	WITHOUT_CLASSIFICATION	1.1009888648576026E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9998899011135143	WITHOUT_CLASSIFICATION	1.1009888648576026E-4	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999545456238065	WITHOUT_CLASSIFICATION	4.545437619350653E-5	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999545456238065	WITHOUT_CLASSIFICATION	4.545437619350653E-5	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999545456238065	WITHOUT_CLASSIFICATION	4.545437619350653E-5	IMPLEMENTATION
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999685574821997	WITHOUT_CLASSIFICATION	3.144251780028773E-5	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999622086914853	WITHOUT_CLASSIFICATION	3.779130851476816E-5	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999622086914853	WITHOUT_CLASSIFICATION	3.779130851476816E-5	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999622086914853	WITHOUT_CLASSIFICATION	3.779130851476816E-5	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999380771466938	WITHOUT_CLASSIFICATION	6.192285330619608E-5	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999380771466938	WITHOUT_CLASSIFICATION	6.192285330619608E-5	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999380771466938	WITHOUT_CLASSIFICATION	6.192285330619608E-5	IMPLEMENTATION
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999093235682442	WITHOUT_CLASSIFICATION	9.06764317558258E-5	IMPLEMENTATION
// backspace	WITHOUT_CLASSIFICATION	0.9998880804164517	WITHOUT_CLASSIFICATION	1.1191958354829059E-4	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9998756799413627	WITHOUT_CLASSIFICATION	1.2432005863727548E-4	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9998756799413627	WITHOUT_CLASSIFICATION	1.2432005863727548E-4	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9998756799413627	WITHOUT_CLASSIFICATION	1.2432005863727548E-4	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9998756799413627	WITHOUT_CLASSIFICATION	1.2432005863727548E-4	IMPLEMENTATION
/* package-private */	WITHOUT_CLASSIFICATION	0.9999548136859496	WITHOUT_CLASSIFICATION	4.518631405023359E-5	IMPLEMENTATION
// fall through	WITHOUT_CLASSIFICATION	0.9999198478210564	WITHOUT_CLASSIFICATION	8.015217894366617E-5	IMPLEMENTATION
// fall through	WITHOUT_CLASSIFICATION	0.9999198478210564	WITHOUT_CLASSIFICATION	8.015217894366617E-5	IMPLEMENTATION
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9998895190407967	WITHOUT_CLASSIFICATION	1.1048095920334739E-4	IMPLEMENTATION
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999936413377973	WITHOUT_CLASSIFICATION	6.358662202640693E-6	IMPLEMENTATION
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999936413377973	WITHOUT_CLASSIFICATION	6.358662202640693E-6	IMPLEMENTATION
/**      * Nested class whose instances act as thunks reacting to to_str method     * called from (Exception#to_str, Exception#message)     * MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!",     * to_str implementation: "name_err_mesg_to_str"     *     * TODO: this class should not be lookupable     */	WITHOUT_CLASSIFICATION	0.6251466708639045	IMPLEMENTATION	0.3748533291360955	WITHOUT_CLASSIFICATION
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9999085247824625	WITHOUT_CLASSIFICATION	9.147521753758105E-5	IMPLEMENTATION
// The name of this source (e.g. a filename: foo.rb)	WITHOUT_CLASSIFICATION	0.9999703135801883	WITHOUT_CLASSIFICATION	2.9686419811726286E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999122424485049	WITHOUT_CLASSIFICATION	8.775755149515946E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999122424485049	WITHOUT_CLASSIFICATION	8.775755149515946E-5	IMPLEMENTATION
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9999919405513845	WITHOUT_CLASSIFICATION	8.059448615570033E-6	IMPLEMENTATION
// We yield here to hopefully permit the target thread to schedule // MRI immediately schedules it, so this is close but not exact	WITHOUT_CLASSIFICATION	0.9999840136597792	WITHOUT_CLASSIFICATION	1.5986340220908096E-5	IMPLEMENTATION
// note that addMethod now does its own put, so any change made to // functionality here should be made there as well 	WITHOUT_CLASSIFICATION	0.9999510693336101	WITHOUT_CLASSIFICATION	4.893066638997875E-5	IMPLEMENTATION
/* Currently dead code, but useful when we figure out how to actually perform translit.    private static boolean isTranslit(String encoding) {        return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false;    }*/	WITHOUT_CLASSIFICATION	0.9999935619950396	WITHOUT_CLASSIFICATION	6.438004960356089E-6	IMPLEMENTATION
// empirically it appears that to_ary coersions always return array or nil, so this // should always be an array by now.	WITHOUT_CLASSIFICATION	0.9999811578230555	WITHOUT_CLASSIFICATION	1.884217694453423E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999122424485049	WITHOUT_CLASSIFICATION	8.775755149515946E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999122424485049	WITHOUT_CLASSIFICATION	8.775755149515946E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999122424485049	WITHOUT_CLASSIFICATION	8.775755149515946E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999122424485049	WITHOUT_CLASSIFICATION	8.775755149515946E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999122424485049	WITHOUT_CLASSIFICATION	8.775755149515946E-5	IMPLEMENTATION
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999459746885638	WITHOUT_CLASSIFICATION	5.402531143605912E-5	IMPLEMENTATION
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999103359531574	WITHOUT_CLASSIFICATION	8.966404684264858E-5	IMPLEMENTATION
// if it's an inner class and it's not public, we can't access it; // skip population of declared elements	WITHOUT_CLASSIFICATION	0.9999944862920855	WITHOUT_CLASSIFICATION	5.513707914428015E-6	IMPLEMENTATION
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999245604829577	WITHOUT_CLASSIFICATION	7.543951704233392E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9995271288783308	WITHOUT_CLASSIFICATION	4.7287112166911123E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9995271288783308	WITHOUT_CLASSIFICATION	4.7287112166911123E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9995271288783308	WITHOUT_CLASSIFICATION	4.7287112166911123E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9995271288783308	WITHOUT_CLASSIFICATION	4.7287112166911123E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9995271288783308	WITHOUT_CLASSIFICATION	4.7287112166911123E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9995271288783308	WITHOUT_CLASSIFICATION	4.7287112166911123E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9995271288783308	WITHOUT_CLASSIFICATION	4.7287112166911123E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9995271288783308	WITHOUT_CLASSIFICATION	4.7287112166911123E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9995271288783308	WITHOUT_CLASSIFICATION	4.7287112166911123E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9995271288783308	WITHOUT_CLASSIFICATION	4.7287112166911123E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9995271288783308	WITHOUT_CLASSIFICATION	4.7287112166911123E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9995271288783308	WITHOUT_CLASSIFICATION	4.7287112166911123E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9995271288783308	WITHOUT_CLASSIFICATION	4.7287112166911123E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9995271288783308	WITHOUT_CLASSIFICATION	4.7287112166911123E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9995271288783308	WITHOUT_CLASSIFICATION	4.7287112166911123E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9995271288783308	WITHOUT_CLASSIFICATION	4.7287112166911123E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9995271288783308	WITHOUT_CLASSIFICATION	4.7287112166911123E-4	IMPLEMENTATION
// MRI behavior on Windows: it treats '/' as a root of // a current drive (but only if SINGLE slash is present!): // E.g., if current work directory is // 'D:/home/directory', then '/' means 'D:/'. // // Basically, '/path' is treated as a *RELATIVE* path, // relative to the current drive. '//path' is treated // as absolute one.	WITHOUT_CLASSIFICATION	0.9999955606856668	WITHOUT_CLASSIFICATION	4.439314333255887E-6	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9995271288783308	WITHOUT_CLASSIFICATION	4.7287112166911123E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9995271288783308	WITHOUT_CLASSIFICATION	4.7287112166911123E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9995271288783308	WITHOUT_CLASSIFICATION	4.7287112166911123E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9995271288783308	WITHOUT_CLASSIFICATION	4.7287112166911123E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9995271288783308	WITHOUT_CLASSIFICATION	4.7287112166911123E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9995271288783308	WITHOUT_CLASSIFICATION	4.7287112166911123E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9995271288783308	WITHOUT_CLASSIFICATION	4.7287112166911123E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9995271288783308	WITHOUT_CLASSIFICATION	4.7287112166911123E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9995271288783308	WITHOUT_CLASSIFICATION	4.7287112166911123E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9995271288783308	WITHOUT_CLASSIFICATION	4.7287112166911123E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9995271288783308	WITHOUT_CLASSIFICATION	4.7287112166911123E-4	IMPLEMENTATION
// This is needed when the enclosing class or module is a singleton. // In that case, we generated a name such as null::Foo, which broke  // Marshalling, among others. The correct thing to do in this situation  // is to insert the generate the name of form #<Class:01xasdfasd> if  // it's a singleton module/class, which this code accomplishes.	WITHOUT_CLASSIFICATION	0.9999970511111376	WITHOUT_CLASSIFICATION	2.948888862551873E-6	IMPLEMENTATION
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9999944269345004	WITHOUT_CLASSIFICATION	5.573065499684513E-6	IMPLEMENTATION
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999551105132348	WITHOUT_CLASSIFICATION	4.488948676509051E-5	IMPLEMENTATION
// get "self"	WITHOUT_CLASSIFICATION	0.9999328949825076	WITHOUT_CLASSIFICATION	6.710501749244502E-5	IMPLEMENTATION
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999382665271179	WITHOUT_CLASSIFICATION	6.173347288210629E-5	IMPLEMENTATION
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9999542437769173	WITHOUT_CLASSIFICATION	4.5756223082665154E-5	IMPLEMENTATION
// only public methods	WITHOUT_CLASSIFICATION	0.9999555409029073	WITHOUT_CLASSIFICATION	4.445909709271214E-5	IMPLEMENTATION
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.999975732203658	WITHOUT_CLASSIFICATION	2.426779634201355E-5	IMPLEMENTATION
// First try to use drive letter from supplied dir value, // then try current work dir.	WITHOUT_CLASSIFICATION	0.9999831361756162	WITHOUT_CLASSIFICATION	1.686382438383594E-5	IMPLEMENTATION
// JRUBY-2435: Aliasing eval and other "special" methods should display a warning // We warn because we treat certain method names as "special" for purposes of // optimization. Hopefully this will be enough to convince people not to alias // them.	WITHOUT_CLASSIFICATION	0.9999587176758615	WITHOUT_CLASSIFICATION	4.1282324138555334E-5	IMPLEMENTATION
// generate a real method signature for the method, with to/from coercions	WITHOUT_CLASSIFICATION	0.9999813090188014	WITHOUT_CLASSIFICATION	1.8690981198477013E-5	IMPLEMENTATION
// block argument to the method // closure present // class present // method table mutations, def, defs, undef, alias // likely call to eval // makes calls that are aware of the frame // makes calls that are aware of the frame's self // makes calls that are aware of the frame's visibility // makes calls that are aware of the frame's block // makes calls that are aware of the frame's name // makes calls that set or get backref // makes calls that set or get lastline // makes calls that are aware of the frame's class // optional arguments to the method // rest arg to the method // makes calls that are aware of the scope // makes a zero-argument super call // accesses or sets constants // accesses or sets class variables // makes normal super call // contains a retry	WITHOUT_CLASSIFICATION	0.9999998001509772	WITHOUT_CLASSIFICATION	1.998490228254414E-7	IMPLEMENTATION
// // Add aliases in Type::*, NativeType::* and FFI::TYPE_* //	WITHOUT_CLASSIFICATION	0.9999438475586504	WITHOUT_CLASSIFICATION	5.615244134959966E-5	IMPLEMENTATION
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999715747012606	WITHOUT_CLASSIFICATION	2.842529873932963E-5	IMPLEMENTATION
// double-testing args.length here, but it avoids duplicating the proc-setup code in two places	WITHOUT_CLASSIFICATION	0.9999871480268882	WITHOUT_CLASSIFICATION	1.2851973111848157E-5	IMPLEMENTATION
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999512987512532	WITHOUT_CLASSIFICATION	4.870124874678535E-5	IMPLEMENTATION
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999423011699101	WITHOUT_CLASSIFICATION	5.769883008996552E-5	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.999955364291415	WITHOUT_CLASSIFICATION	4.4635708585125487E-5	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.999955364291415	WITHOUT_CLASSIFICATION	4.4635708585125487E-5	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.999955364291415	WITHOUT_CLASSIFICATION	4.4635708585125487E-5	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.999955364291415	WITHOUT_CLASSIFICATION	4.4635708585125487E-5	IMPLEMENTATION
// snapshot of contents of directory // current position in directory	WITHOUT_CLASSIFICATION	0.9999946999187841	WITHOUT_CLASSIFICATION	5.300081215878725E-6	IMPLEMENTATION
// Exclusive locks in Java require the channel to be writable, otherwise // an exception is thrown (terminating JRuby execution). // But flock behavior of MRI is that it allows // exclusive locks even on non-writable file. So we convert exclusive // lock to shared lock if the channel is not writable, to better match // the MRI behavior.	WITHOUT_CLASSIFICATION	0.999997007898889	WITHOUT_CLASSIFICATION	2.9921011109983487E-6	IMPLEMENTATION
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999432098681373	WITHOUT_CLASSIFICATION	5.679013186263831E-5	IMPLEMENTATION
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999432098681373	WITHOUT_CLASSIFICATION	5.679013186263831E-5	IMPLEMENTATION
// set self to the class	WITHOUT_CLASSIFICATION	0.9999768052479083	WITHOUT_CLASSIFICATION	2.3194752091630302E-5	IMPLEMENTATION
/* ---------- Public fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999678284275554	WITHOUT_CLASSIFICATION	3.217157244456394E-5	IMPLEMENTATION
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999630626100012	WITHOUT_CLASSIFICATION	3.6937389998865595E-5	IMPLEMENTATION
// zero args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999727579007184	WITHOUT_CLASSIFICATION	2.7242099281683217E-5	IMPLEMENTATION
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999848489594881	WITHOUT_CLASSIFICATION	1.515104051181478E-5	IMPLEMENTATION
// Store each line into this list if not null.	WITHOUT_CLASSIFICATION	0.9999273924966381	WITHOUT_CLASSIFICATION	7.260750336187988E-5	IMPLEMENTATION
// Portion of line right after beginning marker	WITHOUT_CLASSIFICATION	0.9999389281956507	WITHOUT_CLASSIFICATION	6.107180434924933E-5	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.999979093843561	WITHOUT_CLASSIFICATION	2.0906156439030705E-5	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.999979093843561	WITHOUT_CLASSIFICATION	2.0906156439030705E-5	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.999979093843561	WITHOUT_CLASSIFICATION	2.0906156439030705E-5	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.999979093843561	WITHOUT_CLASSIFICATION	2.0906156439030705E-5	IMPLEMENTATION
// If an IO exception occurs (something odd, but possible) // A directory may return null.	WITHOUT_CLASSIFICATION	0.9999898824905771	WITHOUT_CLASSIFICATION	1.011750942297685E-5	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999977251097592	WITHOUT_CLASSIFICATION	2.2748902409320765E-6	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999977251097592	WITHOUT_CLASSIFICATION	2.2748902409320765E-6	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999977251097592	WITHOUT_CLASSIFICATION	2.2748902409320765E-6	IMPLEMENTATION
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.999935648589792	WITHOUT_CLASSIFICATION	6.435141020803039E-5	IMPLEMENTATION
// finally with no exception	WITHOUT_CLASSIFICATION	0.999959237503272	WITHOUT_CLASSIFICATION	4.076249672812658E-5	IMPLEMENTATION
// Now, for all variables used by 'i' mark them live before 'i'	WITHOUT_CLASSIFICATION	0.9999689952646309	WITHOUT_CLASSIFICATION	3.100473536908528E-5	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9368501523217421	WITHOUT_CLASSIFICATION	0.06314984767825789	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9368501523217421	WITHOUT_CLASSIFICATION	0.06314984767825789	IMPLEMENTATION
/* The counting of slashes that follows is simply a way to adhere to          * Ruby's UNC (or something) compatibility. When Ruby's expand_path is          * called with "//foo//bar" it will return "//foo/bar". JRuby uses          * java.io.File, and hence returns "/foo/bar". In order to retain          * java.io.File in the lower layers and provide full Ruby          * compatibility, the number of extra slashes must be counted and          * prepended to the result.         */	WITHOUT_CLASSIFICATION	0.9999997123556276	WITHOUT_CLASSIFICATION	2.8764437237446493E-7	IMPLEMENTATION
// This is almost always already interned, since it will be called with a symbol in most cases // but when created from Java code, we might get an argument that needs to be interned. // addAccessor has as a precondition that the string MUST be interned	WITHOUT_CLASSIFICATION	0.9999992946710159	WITHOUT_CLASSIFICATION	7.053289840462597E-7	IMPLEMENTATION
/* not a class */	WITHOUT_CLASSIFICATION	0.9999397695522954	WITHOUT_CLASSIFICATION	6.023044770468417E-5	IMPLEMENTATION
/* not a class */	WITHOUT_CLASSIFICATION	0.9999397695522954	WITHOUT_CLASSIFICATION	6.023044770468417E-5	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999542191460128	WITHOUT_CLASSIFICATION	4.578085398719315E-5	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999542191460128	WITHOUT_CLASSIFICATION	4.578085398719315E-5	IMPLEMENTATION
// io.available() only returns 0 after EOF is encountered // so we need to differentiate between the empty string and EOF	WITHOUT_CLASSIFICATION	0.9999923986052197	WITHOUT_CLASSIFICATION	7.6013947803247125E-6	IMPLEMENTATION
// In the current logic, if we get here we know that module is not an // IncludedModuleWrapper, so there's no need to fish out the delegate. But just // in case the logic should change later, let's do it anyway	WITHOUT_CLASSIFICATION	0.9999987634754551	WITHOUT_CLASSIFICATION	1.2365245449549039E-6	IMPLEMENTATION
// rb_iterate((VALUE(*)_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);	WITHOUT_CLASSIFICATION	0.9999041954183154	WITHOUT_CLASSIFICATION	9.58045816846041E-5	IMPLEMENTATION
// Broken symlinks considered by exists() as non-existing, // so we need to check for symlinks explicitly.	WITHOUT_CLASSIFICATION	0.9999477108041992	WITHOUT_CLASSIFICATION	5.228919580076563E-5	IMPLEMENTATION
// ////////////////// CONSTANT API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999955709922669	WITHOUT_CLASSIFICATION	4.4290077330560095E-6	IMPLEMENTATION
// create the default thread group	WITHOUT_CLASSIFICATION	0.9999970799304725	WITHOUT_CLASSIFICATION	2.9200695275355276E-6	IMPLEMENTATION
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999551532183087	WITHOUT_CLASSIFICATION	4.4846781691243504E-5	IMPLEMENTATION
/* ============================     * Here are hash internals     * (This could be extracted to a separate class but it's not too large though)     * ============================     */	WITHOUT_CLASSIFICATION	0.9999792779662958	WITHOUT_CLASSIFICATION	2.0722033704219363E-5	IMPLEMENTATION
// ////////////////// LOW-LEVEL CLASS VARIABLE INTERFACE //////////////// // // fetch/store/list class variables for this module //	WITHOUT_CLASSIFICATION	0.9999992534218802	WITHOUT_CLASSIFICATION	7.465781199045668E-7	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999696680238573	WITHOUT_CLASSIFICATION	3.0331976142640797E-5	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999696680238573	WITHOUT_CLASSIFICATION	3.0331976142640797E-5	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999714608314705	WITHOUT_CLASSIFICATION	2.8539168529451485E-5	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999714608314705	WITHOUT_CLASSIFICATION	2.8539168529451485E-5	IMPLEMENTATION
// retuns null when not found to avoid unnecessary getRuntime().getNil() call	WITHOUT_CLASSIFICATION	0.9999680713788989	WITHOUT_CLASSIFICATION	3.192862110117815E-5	IMPLEMENTATION
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999957042904385	WITHOUT_CLASSIFICATION	4.295709561503992E-6	IMPLEMENTATION
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9998766846217828	WITHOUT_CLASSIFICATION	1.2331537821723534E-4	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999625497770552	WITHOUT_CLASSIFICATION	3.745022294470053E-5	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999625497770552	WITHOUT_CLASSIFICATION	3.745022294470053E-5	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999625497770552	WITHOUT_CLASSIFICATION	3.745022294470053E-5	IMPLEMENTATION
// line 286	WITHOUT_CLASSIFICATION	0.9999115213322484	WITHOUT_CLASSIFICATION	8.847866775154156E-5	IMPLEMENTATION
// line 476	WITHOUT_CLASSIFICATION	0.9999109300086373	WITHOUT_CLASSIFICATION	8.906999136276226E-5	IMPLEMENTATION
// line 513	WITHOUT_CLASSIFICATION	0.9999109300086373	WITHOUT_CLASSIFICATION	8.906999136276226E-5	IMPLEMENTATION
// line 530	WITHOUT_CLASSIFICATION	0.9999109300086373	WITHOUT_CLASSIFICATION	8.906999136276226E-5	IMPLEMENTATION
// line 533	WITHOUT_CLASSIFICATION	0.9999109300086373	WITHOUT_CLASSIFICATION	8.906999136276226E-5	IMPLEMENTATION
// line 537	WITHOUT_CLASSIFICATION	0.9999109300086373	WITHOUT_CLASSIFICATION	8.906999136276226E-5	IMPLEMENTATION
// line 551	WITHOUT_CLASSIFICATION	0.9999109300086373	WITHOUT_CLASSIFICATION	8.906999136276226E-5	IMPLEMENTATION
// end loop	WITHOUT_CLASSIFICATION	0.9999129596661602	WITHOUT_CLASSIFICATION	8.704033383968998E-5	IMPLEMENTATION
// MRI behavior: we don't print errno for actual Errno errors	WITHOUT_CLASSIFICATION	0.9999563080882701	WITHOUT_CLASSIFICATION	4.369191172997553E-5	IMPLEMENTATION
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999588268526456	WITHOUT_CLASSIFICATION	4.117314735450681E-5	IMPLEMENTATION
// Traverse the instructions in this basic block in reverse order! // Mark as dead all instructions whose results are not used! 	WITHOUT_CLASSIFICATION	0.9999754598593348	WITHOUT_CLASSIFICATION	2.454014066513614E-5	IMPLEMENTATION
// // fields should really be an immutable map as it is never modified after construction //	WITHOUT_CLASSIFICATION	0.999899694768915	WITHOUT_CLASSIFICATION	1.0030523108497214E-4	IMPLEMENTATION
// load self object as IRubyObject, for recv param	WITHOUT_CLASSIFICATION	0.999957906799294	WITHOUT_CLASSIFICATION	4.2093200706056984E-5	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9368501523217421	WITHOUT_CLASSIFICATION	0.06314984767825789	IMPLEMENTATION
// If we define a class in Ruby, but later want to allow it to be defined in Java, // the allocator needs to be updated	WITHOUT_CLASSIFICATION	0.9999742263302682	WITHOUT_CLASSIFICATION	2.577366973183821E-5	IMPLEMENTATION
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9999699104654334	WITHOUT_CLASSIFICATION	3.0089534566606952E-5	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999336062087769	WITHOUT_CLASSIFICATION	6.639379122303934E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9998766846217828	WITHOUT_CLASSIFICATION	1.2331537821723534E-4	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9960478506285002	WITHOUT_CLASSIFICATION	0.0039521493714998095	IMPLEMENTATION
// MRI has extra pointer which makes our code look a little bit // more strange in // comparison	WITHOUT_CLASSIFICATION	0.9999235564183425	WITHOUT_CLASSIFICATION	7.644358165741573E-5	IMPLEMENTATION
// Tempory buffer to build up a potential token.  Consumer takes responsibility to reset  // this before use.	WITHOUT_CLASSIFICATION	0.9999431710607757	WITHOUT_CLASSIFICATION	5.6828939224305126E-5	IMPLEMENTATION
//tmpPosition is required because getPosition()'s side effects. //if the warning is generated, the getPosition() on line 954 (this line + 18) will create //a wrong position if the "inclusive" flag is not set.	WITHOUT_CLASSIFICATION	0.9999941540529311	WITHOUT_CLASSIFICATION	5.845947068840015E-6	IMPLEMENTATION
/* What is \v in C?                    case '\v':                        c2 = 'v';                        break;                        */	WITHOUT_CLASSIFICATION	0.9999678384571399	WITHOUT_CLASSIFICATION	3.216154286016628E-5	IMPLEMENTATION
/* Consider Thread aspects of this */	WITHOUT_CLASSIFICATION	0.9999161588387033	WITHOUT_CLASSIFICATION	8.384116129669495E-5	IMPLEMENTATION
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999982853144741	WITHOUT_CLASSIFICATION	1.7146855259851452E-6	IMPLEMENTATION
// An interrupt or timeout may have caused us to miss // a notify that we consumed, so do another notify in // case someone else is available to pick it up.	WITHOUT_CLASSIFICATION	0.9999889622836187	WITHOUT_CLASSIFICATION	1.1037716381404809E-5	IMPLEMENTATION
// line 572	WITHOUT_CLASSIFICATION	0.9999109300086373	WITHOUT_CLASSIFICATION	8.906999136276226E-5	IMPLEMENTATION
// line 601	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 601	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 625	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 649	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 691	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 723	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 732	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 745	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 766	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 785	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 794	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 800	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 812	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 827	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 839	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 845	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 864	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 886	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 896	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 911	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 929	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 952	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 970	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 972	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 991	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 1011	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1026	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1038	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1067	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1085	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1097	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1105	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1122	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1133	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1145	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1169	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1201	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1210	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1229	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1261	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1287	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1293	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1307	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1320	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1325	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1363	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1398	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1448	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1456	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1473	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1492	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1513	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1523	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1562	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1582	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1603	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1603	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1615	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1620	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1635	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1652	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1681	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1708	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1716	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1755	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1772	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1789	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9998787772813322	WITHOUT_CLASSIFICATION	1.2122271866768345E-4	IMPLEMENTATION
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9998787772813322	WITHOUT_CLASSIFICATION	1.2122271866768345E-4	IMPLEMENTATION
/* force for args */	WITHOUT_CLASSIFICATION	0.9998933019799133	WITHOUT_CLASSIFICATION	1.0669802008671208E-4	IMPLEMENTATION
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9999022347641516	WITHOUT_CLASSIFICATION	9.776523584829753E-5	IMPLEMENTATION
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9999525526090083	WITHOUT_CLASSIFICATION	4.74473909917961E-5	IMPLEMENTATION
// We can assign if we already have variable of that name here or we are the only // scope in the chain (which Local scopes always are).	WITHOUT_CLASSIFICATION	0.9999939571445177	WITHOUT_CLASSIFICATION	6.042855482414002E-6	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999891972192629	WITHOUT_CLASSIFICATION	1.080278073701203E-5	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999891972192629	WITHOUT_CLASSIFICATION	1.080278073701203E-5	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999891972192629	WITHOUT_CLASSIFICATION	1.080278073701203E-5	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999891972192629	WITHOUT_CLASSIFICATION	1.080278073701203E-5	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9996655112460382	WITHOUT_CLASSIFICATION	3.3448875396177217E-4	IMPLEMENTATION
/*     * This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:)     * into individual whenNodes.  The primary reason for this is to ensure lazy evaluation of     * the arguments (when foo,bar,gar:) to prevent side-effects.  In the old code this was done     * using nested when statements, which was awful for interpreter and compilation.     *     * Notes: This has semantic equivalence but will not be lexically equivalent.  Compiler     * needs to detect same bodies to simplify bytecode generated.     */	WITHOUT_CLASSIFICATION	0.999996743408045	WITHOUT_CLASSIFICATION	3.2565919551114454E-6	IMPLEMENTATION
// line 313	WITHOUT_CLASSIFICATION	0.9999109916420345	WITHOUT_CLASSIFICATION	8.900835796550581E-5	IMPLEMENTATION
// line 339	WITHOUT_CLASSIFICATION	0.9999109546671153	WITHOUT_CLASSIFICATION	8.904533288467563E-5	IMPLEMENTATION
// line 361	WITHOUT_CLASSIFICATION	0.9999109546671153	WITHOUT_CLASSIFICATION	8.904533288467563E-5	IMPLEMENTATION
// line 413	WITHOUT_CLASSIFICATION	0.9999109300086373	WITHOUT_CLASSIFICATION	8.906999136276226E-5	IMPLEMENTATION
// line 451	WITHOUT_CLASSIFICATION	0.9999109300086373	WITHOUT_CLASSIFICATION	8.906999136276226E-5	IMPLEMENTATION
// line 472	WITHOUT_CLASSIFICATION	0.9999109300086373	WITHOUT_CLASSIFICATION	8.906999136276226E-5	IMPLEMENTATION
// line 500	WITHOUT_CLASSIFICATION	0.9999109300086373	WITHOUT_CLASSIFICATION	8.906999136276226E-5	IMPLEMENTATION
// line 515	WITHOUT_CLASSIFICATION	0.9999109300086373	WITHOUT_CLASSIFICATION	8.906999136276226E-5	IMPLEMENTATION
// line 555	WITHOUT_CLASSIFICATION	0.9999109300086373	WITHOUT_CLASSIFICATION	8.906999136276226E-5	IMPLEMENTATION
// line 582	WITHOUT_CLASSIFICATION	0.9999109300086373	WITHOUT_CLASSIFICATION	8.906999136276226E-5	IMPLEMENTATION
// line 619	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 636	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 669	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 703	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 776	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 814	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 823	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 854	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 872	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 905	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 925	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 958	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 992	WITHOUT_CLASSIFICATION	0.9999108810453555	WITHOUT_CLASSIFICATION	8.911895464441333E-5	IMPLEMENTATION
// line 1047	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1072	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1081	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1108	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1136	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1168	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1192	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1241	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1267	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1286	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1301	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1314	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1333	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1362	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1395	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1420	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1439	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1476	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1535	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1588	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1618	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1643	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1669	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1728	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1753	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1779	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1794	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1812	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1837	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1895	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1925	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1950	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 1992	WITHOUT_CLASSIFICATION	0.9999117111382853	WITHOUT_CLASSIFICATION	8.828886171474343E-5	IMPLEMENTATION
// line 2014	WITHOUT_CLASSIFICATION	0.999911487289758	WITHOUT_CLASSIFICATION	8.851271024199951E-5	IMPLEMENTATION
// Whether this scope is used as the "argument scope" for e.g. zsuper	WITHOUT_CLASSIFICATION	0.9999633739719508	WITHOUT_CLASSIFICATION	3.662602804924143E-5	IMPLEMENTATION
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999823141486811	WITHOUT_CLASSIFICATION	1.7685851318885938E-5	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999752725746989	WITHOUT_CLASSIFICATION	2.4727425301209614E-5	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999752725746989	WITHOUT_CLASSIFICATION	2.4727425301209614E-5	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999752725746989	WITHOUT_CLASSIFICATION	2.4727425301209614E-5	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999752725746989	WITHOUT_CLASSIFICATION	2.4727425301209614E-5	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999752725746989	WITHOUT_CLASSIFICATION	2.4727425301209614E-5	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999752725746989	WITHOUT_CLASSIFICATION	2.4727425301209614E-5	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999752725746989	WITHOUT_CLASSIFICATION	2.4727425301209614E-5	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999663680437765	WITHOUT_CLASSIFICATION	3.363195622348929E-5	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999663680437765	WITHOUT_CLASSIFICATION	3.363195622348929E-5	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999663680437765	WITHOUT_CLASSIFICATION	3.363195622348929E-5	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999663680437765	WITHOUT_CLASSIFICATION	3.363195622348929E-5	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9999458527552274	WITHOUT_CLASSIFICATION	5.41472447726497E-5	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9999458527552274	WITHOUT_CLASSIFICATION	5.41472447726497E-5	IMPLEMENTATION
// We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the // 'b' will get put into this new dynamic scope.  The original scope does not see the new // 'b' and successive evals with this binding will.  I take it having the ability to have  // succesive binding evals be able to share same scope makes sense from a programmers  // perspective.   One crappy outcome of this design is it requires Dynamic and Static  // scopes to be mutable for this one case.	WITHOUT_CLASSIFICATION	0.9999999440867432	WITHOUT_CLASSIFICATION	5.591325682721992E-8	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.999984913311173	WITHOUT_CLASSIFICATION	1.5086688826886304E-5	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.999984913311173	WITHOUT_CLASSIFICATION	1.5086688826886304E-5	IMPLEMENTATION
// tc // under method // self // under method // name // args	WITHOUT_CLASSIFICATION	0.9999393326130589	WITHOUT_CLASSIFICATION	6.0667386941013404E-5	IMPLEMENTATION
// allow it to bubble up	WITHOUT_CLASSIFICATION	0.9999080060315655	WITHOUT_CLASSIFICATION	9.199396843444354E-5	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999449220143053	WITHOUT_CLASSIFICATION	5.5077985694594836E-5	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999449220143053	WITHOUT_CLASSIFICATION	5.5077985694594836E-5	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999449220143053	WITHOUT_CLASSIFICATION	5.5077985694594836E-5	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999449220143053	WITHOUT_CLASSIFICATION	5.5077985694594836E-5	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999449220143053	WITHOUT_CLASSIFICATION	5.5077985694594836E-5	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999449220143053	WITHOUT_CLASSIFICATION	5.5077985694594836E-5	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999449220143053	WITHOUT_CLASSIFICATION	5.5077985694594836E-5	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999410488373054	WITHOUT_CLASSIFICATION	5.8951162694541194E-5	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999940085398973	WITHOUT_CLASSIFICATION	5.991460102689645E-5	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999397863456495	WITHOUT_CLASSIFICATION	6.021365435045777E-5	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999397863456495	WITHOUT_CLASSIFICATION	6.021365435045777E-5	IMPLEMENTATION
// Check for a builtin first.	WITHOUT_CLASSIFICATION	0.9999759298126965	WITHOUT_CLASSIFICATION	2.4070187303596835E-5	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999527239251945	WITHOUT_CLASSIFICATION	4.7276074805385735E-5	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999527239251945	WITHOUT_CLASSIFICATION	4.7276074805385735E-5	IMPLEMENTATION
// Unfortunately, the number of digits in the exponent is // not clearly defined in Ruby documentation. This is a // platform/version-dependent behavior. On Linux/Mac/Cygwin/*nix, // two digits are used. On Windows, 3 digits are used. // It is desirable for JRuby to have consistent behavior, and // the two digits behavior was selected. This is also in sync // with "Java-native" sprintf behavior (java.util.Formatter). // E or e	WITHOUT_CLASSIFICATION	0.9999980577625184	WITHOUT_CLASSIFICATION	1.9422374815144824E-6	IMPLEMENTATION
/** * Represents the the dynamic portion of scoping information.  The variableValues are the * values of assigned local or block variables.  The staticScope identifies which sort of * scope this is (block or local). *  * Properties of Dynamic Scopes: * 1. static and dynamic scopes have the same number of names to values * 2. size of variables (and thus names) is determined during parsing.  So those structured do *    not need to change * * FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents.  This * is harmless (other than wasting memory), but we should not do that.  We can fix this in two * ways: * 1. Fix all callers * 2. Check parent that is passed in and make if new instance is local, then its parent is not local */	WITHOUT_CLASSIFICATION	0.9999992339779132	WITHOUT_CLASSIFICATION	7.660220867490657E-7	IMPLEMENTATION
// This method handles '**/' patterns and delegates to // fnmatch_helper for the main work.	WITHOUT_CLASSIFICATION	0.9999429740422943	WITHOUT_CLASSIFICATION	5.702595770568843E-5	IMPLEMENTATION
// Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern  // Example: foo{a{c},b}bar -> fooa{c}bar, foobbar	WITHOUT_CLASSIFICATION	0.9999164803678631	WITHOUT_CLASSIFICATION	8.351963213692071E-5	IMPLEMENTATION
// double precision, native // double precision, native	WITHOUT_CLASSIFICATION	0.99995810623341	WITHOUT_CLASSIFICATION	4.1893766589937396E-5	IMPLEMENTATION
// 64-bit number, native (as bignum)	WITHOUT_CLASSIFICATION	0.999858198950681	WITHOUT_CLASSIFICATION	1.4180104931906597E-4	IMPLEMENTATION
// Next indicates to decode using native encoding format	WITHOUT_CLASSIFICATION	0.9999403832612568	WITHOUT_CLASSIFICATION	5.9616738743263204E-5	IMPLEMENTATION
// calculate based on a, b, c and d	WITHOUT_CLASSIFICATION	0.9999657316933017	WITHOUT_CLASSIFICATION	3.4268306698225774E-5	IMPLEMENTATION
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999783987556986	WITHOUT_CLASSIFICATION	2.1601244301420245E-5	IMPLEMENTATION
// MRI behavior:  for 'Q', do not add trailing nils	WITHOUT_CLASSIFICATION	0.9999522152373552	WITHOUT_CLASSIFICATION	4.7784762644663054E-5	IMPLEMENTATION
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.999961930085772	WITHOUT_CLASSIFICATION	3.806991422792204E-5	IMPLEMENTATION
// exec needs to behave differently in-process, because it's technically // supposed to replace the calling process. So if we're supposed to run // in-process, we allow it to use the default streams and not use // pumpers at all. See JRUBY-2156 and JRUBY-2154.	WITHOUT_CLASSIFICATION	0.9999899828747395	WITHOUT_CLASSIFICATION	1.001712526041741E-5	IMPLEMENTATION
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999964816311208	WITHOUT_CLASSIFICATION	3.5183688792363543E-6	IMPLEMENTATION
// The problem we trying to solve below: STDIN in Java // is blocked and non-interruptible, so if we invoke read // on it, we might never be able to interrupt such thread. // So, we use in.available() to see if there is any input // ready, and only then read it. But this approach can't // tell whether the end of stream reached or not, so we // might end up looping right at the end of the stream. // Well, at least, we can improve the situation by checking // if some input was ever available, and if so, not // checking for available anymore, and just go to read.	WITHOUT_CLASSIFICATION	0.9999999082054459	WITHOUT_CLASSIFICATION	9.17945541134986E-8	IMPLEMENTATION
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999582949968809	WITHOUT_CLASSIFICATION	4.170500311913315E-5	IMPLEMENTATION
// an empirically derived rule: precision applies to // significand length, irrespective of exponent	WITHOUT_CLASSIFICATION	0.9999083185616667	WITHOUT_CLASSIFICATION	9.168143833326735E-5	IMPLEMENTATION
// an official rule, clarified: if the exponent // <clarif>after adjusting for exponent form</clarif> // is < -4,  or the exponent <clarif>after adjusting  // for exponent form</clarif> is greater than the // precision, use exponent form	WITHOUT_CLASSIFICATION	0.999987201386021	WITHOUT_CLASSIFICATION	1.2798613978968748E-5	IMPLEMENTATION
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9999383807419708	WITHOUT_CLASSIFICATION	6.161925802919216E-5	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9999116388139212	WITHOUT_CLASSIFICATION	8.836118607882577E-5	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9999116388139212	WITHOUT_CLASSIFICATION	8.836118607882577E-5	IMPLEMENTATION
// MRI behavior: validate only the unnumbered arguments	WITHOUT_CLASSIFICATION	0.9999497821648402	WITHOUT_CLASSIFICATION	5.0217835159761156E-5	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9998990398738687	WITHOUT_CLASSIFICATION	1.0096012613129175E-4	IMPLEMENTATION
// calculation for simple (and typical) case, // adapted from sun.misc.FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999385659353751	WITHOUT_CLASSIFICATION	6.143406462481934E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9963454498675982	WITHOUT_CLASSIFICATION	0.0036545501324018502	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.999876822905167	WITHOUT_CLASSIFICATION	1.2317709483297085E-4	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.999876822905167	WITHOUT_CLASSIFICATION	1.2317709483297085E-4	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.999876822905167	WITHOUT_CLASSIFICATION	1.2317709483297085E-4	IMPLEMENTATION
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9998715890405031	WITHOUT_CLASSIFICATION	1.2841095949691988E-4	IMPLEMENTATION
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999385816917041	WITHOUT_CLASSIFICATION	6.141830829589923E-5	IMPLEMENTATION
// call chmod after we created the RandomAccesFile // because otherwise, the file could be read-only	WITHOUT_CLASSIFICATION	0.9999656611309522	WITHOUT_CLASSIFICATION	3.433886904782434E-5	IMPLEMENTATION
// attempt to set the permissions, if we have been passed a POSIX instance, // and only if the file was created in this call.	WITHOUT_CLASSIFICATION	0.9999982946302949	WITHOUT_CLASSIFICATION	1.7053697050253726E-6	IMPLEMENTATION
// // When reading into a heap buffer, the jvm allocates a temporary // direct ByteBuffer of the requested size.  To avoid allocating // a huge direct buffer when doing ludicrous reads (e.g. 1G or more) // we split the read up into chunks of no more than 1M //	WITHOUT_CLASSIFICATION	0.9999902722024152	WITHOUT_CLASSIFICATION	9.727797584759922E-6	IMPLEMENTATION
// // If it is a file channel, then we can pre-allocate the output buffer // to the total size of buffered + remaining bytes in file //	WITHOUT_CLASSIFICATION	0.9999828868052008	WITHOUT_CLASSIFICATION	1.711319479928608E-5	IMPLEMENTATION
// // Cannot discern the total read length - allocate at least enough for the buffered data //	WITHOUT_CLASSIFICATION	0.9999703958494899	WITHOUT_CLASSIFICATION	2.960415051007296E-5	IMPLEMENTATION
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.999984466387557	WITHOUT_CLASSIFICATION	1.5533612442987267E-5	IMPLEMENTATION
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999276605384634	WITHOUT_CLASSIFICATION	7.23394615366005E-5	IMPLEMENTATION
// already have some bytes buffered, just return those	WITHOUT_CLASSIFICATION	0.9999855620169846	WITHOUT_CLASSIFICATION	1.4437983015464367E-5	IMPLEMENTATION
// reset buffer	WITHOUT_CLASSIFICATION	0.9999436899521866	WITHOUT_CLASSIFICATION	5.6310047813401595E-5	IMPLEMENTATION
// // Synchronize and re-check to avoid creating more than one Selector per provider //	WITHOUT_CLASSIFICATION	0.9999093029114791	WITHOUT_CLASSIFICATION	9.069708852089877E-5	IMPLEMENTATION
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.8483839568535261	WITHOUT_CLASSIFICATION	0.15161604314647392	IMPLEMENTATION
// Is there something built into JRuby to do this?	WITHOUT_CLASSIFICATION	0.9999053434955917	WITHOUT_CLASSIFICATION	9.465650440824889E-5	IMPLEMENTATION
// Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long // assertTrue(value == valueViaValuesIterator);	WITHOUT_CLASSIFICATION	0.9999944989602867	WITHOUT_CLASSIFICATION	5.501039713239402E-6	IMPLEMENTATION
// value equality //result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); //assertEquals("two", result);	WITHOUT_CLASSIFICATION	0.9999903448827502	WITHOUT_CLASSIFICATION	9.655117249934716E-6	IMPLEMENTATION
// Uncomment the "puts" lines if you want to see more detail	WITHOUT_CLASSIFICATION	0.9999361876770957	WITHOUT_CLASSIFICATION	6.381232290429477E-5	IMPLEMENTATION
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999943122858007	WITHOUT_CLASSIFICATION	5.687714199379069E-6	IMPLEMENTATION
// change the thread context to include the class	WITHOUT_CLASSIFICATION	0.9999590628728695	WITHOUT_CLASSIFICATION	4.093712713055778E-5	IMPLEMENTATION
