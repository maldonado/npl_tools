// TODO: warn "tried to create Proc object without a block"	IMPLEMENTATION	0.9625169121420996	WITHOUT_CLASSIFICATION	0.03748308785790037	IMPLEMENTATION
// TODO: CLONE_SETUP here	IMPLEMENTATION	0.8572962741887804	WITHOUT_CLASSIFICATION	0.1427037258112196	IMPLEMENTATION
// TODO: Someday, enable.	IMPLEMENTATION	0.8644443877679466	WITHOUT_CLASSIFICATION	0.13555561223205337	IMPLEMENTATION
// Bunch of methods still not implemented	IMPLEMENTATION	0.5967401638143863	IMPLEMENTATION	0.4032598361856138	WITHOUT_CLASSIFICATION
// TODO: non-strict option	IMPLEMENTATION	0.750573034996873	WITHOUT_CLASSIFICATION	0.249426965003127	IMPLEMENTATION
// TODO: opt for 2 and 3 ?	IMPLEMENTATION	0.8841542469248181	WITHOUT_CLASSIFICATION	0.11584575307518181	IMPLEMENTATION
// FIXME: Should we make this work with platform's locale, // or continue hardcoding US?	IMPLEMENTATION	0.9995291954600943	WITHOUT_CLASSIFICATION	4.7080453990563606E-4	IMPLEMENTATION
// TODO: rescan code range ?	IMPLEMENTATION	0.8832871420273899	WITHOUT_CLASSIFICATION	0.11671285797261007	IMPLEMENTATION
// TODO: rescan code range ?	IMPLEMENTATION	0.8832871420273899	WITHOUT_CLASSIFICATION	0.11671285797261007	IMPLEMENTATION
// TODO: pass this in?	IMPLEMENTATION	0.8194434020318124	WITHOUT_CLASSIFICATION	0.18055659796818757	IMPLEMENTATION
// FIXME: Pass block down?	IMPLEMENTATION	0.9997593932202467	WITHOUT_CLASSIFICATION	2.4060677975337212E-4	IMPLEMENTATION
// TODO: do something here?	IMPLEMENTATION	0.6625668245464772	WITHOUT_CLASSIFICATION	0.33743317545352275	IMPLEMENTATION
// TODO: port exact behavior from MRI, and move most locking logic into ChannelDescriptor // TODO: for all LOCK_NB cases, return false if they would block	IMPLEMENTATION	0.7573973234272329	WITHOUT_CLASSIFICATION	0.24260267657276718	IMPLEMENTATION
// TODO: check if too many open files, GC and try again	IMPLEMENTATION	0.5371014670760683	IMPLEMENTATION	0.46289853292393174	WITHOUT_CLASSIFICATION
//TODO deal with UNC names	IMPLEMENTATION	0.9996267579856618	WITHOUT_CLASSIFICATION	3.7324201433827045E-4	IMPLEMENTATION
// FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.9996097749922963	WITHOUT_CLASSIFICATION	3.9022500770360144E-4	IMPLEMENTATION
//FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.999711567338797	WITHOUT_CLASSIFICATION	2.8843266120298183E-4	IMPLEMENTATION
// TODO: SafeStringValue here	IMPLEMENTATION	0.8620232867479695	WITHOUT_CLASSIFICATION	0.13797671325203048	IMPLEMENTATION
// TODO: turn off readable? am I reading this right? // This only seems to be used while duping below, since modes gets // reset to actual modes afterward //fptr->mode &= (m & FMODE_READABLE) ? ~FMODE_READABLE : ~FMODE_WRITABLE;	IMPLEMENTATION	0.9659839915354207	WITHOUT_CLASSIFICATION	0.034016008464579216	IMPLEMENTATION
// TODO: check safe, taint on incoming string	IMPLEMENTATION	0.6085945861189362	WITHOUT_CLASSIFICATION	0.39140541388106365	IMPLEMENTATION
// TODO: pipe handler to be reopened with path and "w" mode	IMPLEMENTATION	0.8950509275333186	WITHOUT_CLASSIFICATION	0.10494907246668134	IMPLEMENTATION
// FIXME: add text mode to mode flags	IMPLEMENTATION	0.9998170358009999	WITHOUT_CLASSIFICATION	1.8296419900015184E-4	IMPLEMENTATION
// TODO: Something about pipe buffer length here	IMPLEMENTATION	0.9222933937563709	WITHOUT_CLASSIFICATION	0.07770660624362906	IMPLEMENTATION
// TODO: handle errors in buffered write by retrying until finished or file is closed	IMPLEMENTATION	0.9344884904832006	IMPLEMENTATION	0.06551150951679946	WITHOUT_CLASSIFICATION
// TODO: notify threads waiting on descriptors/IO? probably not...	IMPLEMENTATION	0.6788308620989949	WITHOUT_CLASSIFICATION	0.321169137901005	IMPLEMENTATION
// TODO: Ruby re-checks that the buffer string hasn't been modified	IMPLEMENTATION	0.8958314224983848	WITHOUT_CLASSIFICATION	0.10416857750161519	IMPLEMENTATION
// TODO: Ruby unlocks the string here	IMPLEMENTATION	0.8610764332721761	WITHOUT_CLASSIFICATION	0.1389235667278239	IMPLEMENTATION
// TODO: Ruby truncates string to specific size here, but our bytelist should handle this already?	IMPLEMENTATION	0.7469147080752081	WITHOUT_CLASSIFICATION	0.25308529192479196	IMPLEMENTATION
// TODO: Ruby unlocks the string here	IMPLEMENTATION	0.8610764332721761	WITHOUT_CLASSIFICATION	0.1389235667278239	IMPLEMENTATION
// TODO: Ruby truncates string to specific size here, but our bytelist should handle this already?	IMPLEMENTATION	0.7469147080752081	WITHOUT_CLASSIFICATION	0.25308529192479196	IMPLEMENTATION
// TODO: ruby locks the string here	IMPLEMENTATION	0.9504909676512053	WITHOUT_CLASSIFICATION	0.04950903234879474	IMPLEMENTATION
// TODO same zero-length checks as file above	IMPLEMENTATION	0.9810628137259623	WITHOUT_CLASSIFICATION	0.018937186274037666	IMPLEMENTATION
// TODO: MRI also can hadle Bignum here	IMPLEMENTATION	0.8267554646179837	WITHOUT_CLASSIFICATION	0.1732445353820164	IMPLEMENTATION
// TODO: make threadsafe	IMPLEMENTATION	0.7559365949934514	WITHOUT_CLASSIFICATION	0.24406340500654863	IMPLEMENTATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9307333231170217	WITHOUT_CLASSIFICATION	0.06926667688297827	IMPLEMENTATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9307333231170217	WITHOUT_CLASSIFICATION	0.06926667688297827	IMPLEMENTATION
// FIXME: create AttrReaderMethod, AttrWriterMethod, for faster attr access	IMPLEMENTATION	0.9998403141622146	WITHOUT_CLASSIFICATION	1.5968583778538326E-4	IMPLEMENTATION
// Do not clone cached methods // FIXME: MRI copies all methods here	IMPLEMENTATION	0.9998883897936199	WITHOUT_CLASSIFICATION	1.1161020638017694E-4	IMPLEMENTATION
// TODO: don't calculate the same value 3 times	IMPLEMENTATION	0.9781546156874509	WITHOUT_CLASSIFICATION	0.021845384312549093	IMPLEMENTATION
// TODO: 3 times calculate the same value below	IMPLEMENTATION	0.966108810205959	WITHOUT_CLASSIFICATION	0.033891189794041134	IMPLEMENTATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.7721004369055413	WITHOUT_CLASSIFICATION	0.22789956309445872	IMPLEMENTATION
// TODO: Store BEGIN and END information into this node	IMPLEMENTATION	0.9421855476493091	WITHOUT_CLASSIFICATION	0.05781445235069094	IMPLEMENTATION
// TODO: put these nil guards into tree (bigger than I want to do right now)	IMPLEMENTATION	0.7592931835933002	WITHOUT_CLASSIFICATION	0.24070681640669975	IMPLEMENTATION
// FIXME: Make bodyNode non-null in parser	IMPLEMENTATION	0.9998169640367426	WITHOUT_CLASSIFICATION	1.8303596325741354E-4	IMPLEMENTATION
// TODO: call config with scope but no frame	IMPLEMENTATION	0.873091494084342	WITHOUT_CLASSIFICATION	0.12690850591565808	IMPLEMENTATION
// TODO: add trace call?	IMPLEMENTATION	0.567639351028126	WITHOUT_CLASSIFICATION	0.43236064897187404	IMPLEMENTATION
// FIXME: missing arity check	IMPLEMENTATION	0.9997775999847851	WITHOUT_CLASSIFICATION	2.224000152148312E-4	IMPLEMENTATION
// FIXME: optimize for cases where we have no false branch	IMPLEMENTATION	0.9997445428059821	WITHOUT_CLASSIFICATION	2.5545719401791865E-4	IMPLEMENTATION
// FIXME: after jump is not in here.  Will if ever be? //Label afterJmp = new Label();	IMPLEMENTATION	0.9998980093543919	WITHOUT_CLASSIFICATION	1.0199064560809374E-4	IMPLEMENTATION
// TODO: build arg list based on number of args, optionals, etc	IMPLEMENTATION	0.9538780952794619	WITHOUT_CLASSIFICATION	0.04612190472053818	IMPLEMENTATION
// FIXME: missing arity check	IMPLEMENTATION	0.9997775999847851	WITHOUT_CLASSIFICATION	2.224000152148312E-4	IMPLEMENTATION
// SSS FIXME: Traverse up the scope hierarchy to find the constant as long as the parent is a static scope	IMPLEMENTATION	0.9999910862601729	WITHOUT_CLASSIFICATION	8.91373982717857E-6	IMPLEMENTATION
// SSS FIXME: Should I be returning the operand constructed here?	IMPLEMENTATION	0.99988207869828	WITHOUT_CLASSIFICATION	1.1792130172001189E-4	IMPLEMENTATION
// TODO: Add IR instructions for checking method arity! // s.getVariableCompiler().checkMethodArity(required, opt, rest);	IMPLEMENTATION	0.7845124330948375	WITHOUT_CLASSIFICATION	0.21548756690516244	IMPLEMENTATION
// FIXME: Ruby 1.9 post args code needs to come here	IMPLEMENTATION	0.9997118027109443	WITHOUT_CLASSIFICATION	2.881972890557273E-4	IMPLEMENTATION
// SSS: FIXME: Somewhere here, we need to record information the type of this operand as String	IMPLEMENTATION	0.9999600397465731	WITHOUT_CLASSIFICATION	3.996025342680508E-5	IMPLEMENTATION
// FIXME: Translate this call below! // s.unwrapPassedBlock();	IMPLEMENTATION	0.9997514150451889	WITHOUT_CLASSIFICATION	2.485849548110534E-4	IMPLEMENTATION
// SSS FIXME: We need to build debug information tracking into the IR in some fashion // So, these methods below would have to have equivalents in IR_Scope implementations.	IMPLEMENTATION	0.9844746217355225	WITHOUT_CLASSIFICATION	0.015525378264477559	IMPLEMENTATION
// SSS FIXME: Incomplete!	IMPLEMENTATION	0.9997858770604509	WITHOUT_CLASSIFICATION	2.1412293954917703E-4	IMPLEMENTATION
// SSS FIXME: Pick one of bytelist or string, or add internal conversion methods to convert to the default representation	IMPLEMENTATION	0.9999867104782798	WITHOUT_CLASSIFICATION	1.3289521720114013E-5	IMPLEMENTATION
// SSS FIXME: To be done	IMPLEMENTATION	0.9998322236896364	WITHOUT_CLASSIFICATION	1.6777631036362804E-4	IMPLEMENTATION
//TODO: implement, won't do this now	IMPLEMENTATION	0.9318226045561423	IMPLEMENTATION	0.06817739544385762	WITHOUT_CLASSIFICATION
//TODO: implement, won't do this now	IMPLEMENTATION	0.9318226045561423	IMPLEMENTATION	0.06817739544385762	WITHOUT_CLASSIFICATION
// TODO: validate port as numeric	IMPLEMENTATION	0.9519556714078707	WITHOUT_CLASSIFICATION	0.048044328592129266	IMPLEMENTATION
// TODO: this code should really check if a Ruby equals method is implemented or not.	IMPLEMENTATION	0.9763910579234875	IMPLEMENTATION	0.02360894207651254	WITHOUT_CLASSIFICATION
// if not already defined, we add a 'new' that guesses at which signature to use // TODO: just adding first one right now...add in signature-guessing logic	IMPLEMENTATION	0.9907945225128048	WITHOUT_CLASSIFICATION	0.009205477487195147	IMPLEMENTATION
// TODO: deal with varargs	IMPLEMENTATION	0.8884549554167562	WITHOUT_CLASSIFICATION	0.11154504458324385	IMPLEMENTATION
// TODO: deal with varargs	IMPLEMENTATION	0.8884549554167562	WITHOUT_CLASSIFICATION	0.11154504458324385	IMPLEMENTATION
// TODO: other reserved names?	IMPLEMENTATION	0.8736791355825718	WITHOUT_CLASSIFICATION	0.1263208644174283	IMPLEMENTATION
// TODO: we can probably release our references to the constantFields // array and static/instance callback hashes at this point. 	IMPLEMENTATION	0.9948642056948309	WITHOUT_CLASSIFICATION	0.005135794305169085	IMPLEMENTATION
// TODO: Formalize conversion mechanisms between Java and Ruby	IMPLEMENTATION	0.9374815747861106	WITHOUT_CLASSIFICATION	0.06251842521388938	IMPLEMENTATION
// XXX: Check if it's appropriate type?	IMPLEMENTATION	0.9997391058516638	WITHOUT_CLASSIFICATION	2.6089414833629725E-4	IMPLEMENTATION
// TODO: call ruby method	IMPLEMENTATION	0.8290737022037176	WITHOUT_CLASSIFICATION	0.1709262977962824	IMPLEMENTATION
// TODO: call ruby method	IMPLEMENTATION	0.8290737022037176	WITHOUT_CLASSIFICATION	0.1709262977962824	IMPLEMENTATION
// TODO: Add safety check for taintedness	IMPLEMENTATION	0.7885792982369412	WITHOUT_CLASSIFICATION	0.21142070176305872	IMPLEMENTATION
// FIXME: Need to detect magic_comment in 1.9 here for encoding	IMPLEMENTATION	0.9997449971511059	WITHOUT_CLASSIFICATION	2.5500284889414795E-4	IMPLEMENTATION
/* xxx shouldn't check if valid option variable */	IMPLEMENTATION	0.9998496506187085	WITHOUT_CLASSIFICATION	1.503493812915187E-4	IMPLEMENTATION
// TODO: this isn't handling multibyte yet	IMPLEMENTATION	0.7722183408663366	WITHOUT_CLASSIFICATION	0.22778165913366338	IMPLEMENTATION
// TODO: This should be something else like a tCHAR	IMPLEMENTATION	0.8259942629929647	IMPLEMENTATION	0.17400573700703523	WITHOUT_CLASSIFICATION
// FIXME: \r logic needed	IMPLEMENTATION	0.9987577781951941	WITHOUT_CLASSIFICATION	0.0012422218048059144	IMPLEMENTATION
// TODO: note lack of command.com support for Win 9x...	IMPLEMENTATION	0.5607589131683113	IMPLEMENTATION	0.43924108683168883	WITHOUT_CLASSIFICATION
// FIXME: Make thread pool threads daemons if necessary	IMPLEMENTATION	0.9998202168380472	WITHOUT_CLASSIFICATION	1.797831619527571E-4	IMPLEMENTATION
/* FIXME: We may be intern'ing more than once.*/	IMPLEMENTATION	0.9997891859465075	WITHOUT_CLASSIFICATION	2.1081405349242515E-4	IMPLEMENTATION
/* FIXME: We may be intern'ing more than once.*/	IMPLEMENTATION	0.9997891859465075	WITHOUT_CLASSIFICATION	2.1081405349242515E-4	IMPLEMENTATION
/* FIXME: arg_concat missing for opt_call_args*/	IMPLEMENTATION	0.9998399961289707	WITHOUT_CLASSIFICATION	1.6000387102934135E-4	IMPLEMENTATION
/* FIXME: arg_concat logic missing for opt_call_args*/	IMPLEMENTATION	0.9998457845629121	WITHOUT_CLASSIFICATION	1.5421543708789311E-4	IMPLEMENTATION
// FIXME: This needs to happen for lambdas //            args.checkArgCount(runtime, parameters.length);	IMPLEMENTATION	0.9997836966262788	WITHOUT_CLASSIFICATION	2.1630337372135464E-4	IMPLEMENTATION
// FIXME: This needs to happen for lambdas //            args.checkArgCount(runtime, parameters.length);	IMPLEMENTATION	0.9997836966262788	WITHOUT_CLASSIFICATION	2.1630337372135464E-4	IMPLEMENTATION
// TODO: make it cross runtime safe by COW or eager copy	IMPLEMENTATION	0.86599233900756	WITHOUT_CLASSIFICATION	0.13400766099243985	IMPLEMENTATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.9998985098609422	WITHOUT_CLASSIFICATION	1.0149013905789701E-4	IMPLEMENTATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.9998985098609422	WITHOUT_CLASSIFICATION	1.0149013905789701E-4	IMPLEMENTATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.9998985098609422	WITHOUT_CLASSIFICATION	1.0149013905789701E-4	IMPLEMENTATION
// TODO: check the return value here	IMPLEMENTATION	0.7457271997527364	IMPLEMENTATION	0.2542728002472636	WITHOUT_CLASSIFICATION
// TODO: check the return value here	IMPLEMENTATION	0.7457271997527364	IMPLEMENTATION	0.2542728002472636	WITHOUT_CLASSIFICATION
// TODO: Make sure all appropriate open flags are added to this check.	IMPLEMENTATION	0.6679155657296972	WITHOUT_CLASSIFICATION	0.33208443427030276	IMPLEMENTATION
//subList.clear(); // Sublist is supposed to share same backing store as list...TODO in RubyArray. //assertTrue(list.size() == 1);	IMPLEMENTATION	0.9998614910834217	WITHOUT_CLASSIFICATION	1.3850891657828053E-4	IMPLEMENTATION
// SSS FIXME: Cannot optimize this without assuming that Range.to_ary method has not redefined. // So for now, return null!	IMPLEMENTATION	0.9997681091316697	WITHOUT_CLASSIFICATION	2.3189086833025894E-4	IMPLEMENTATION
// TODO Auto-generated method stub	IMPLEMENTATION	0.9999940610583334	IMPLEMENTATION	5.938941666498433E-6	WITHOUT_CLASSIFICATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.9999359797081582	IMPLEMENTATION	6.402029184180201E-5	WITHOUT_CLASSIFICATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.9999359797081582	IMPLEMENTATION	6.402029184180201E-5	WITHOUT_CLASSIFICATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.9999359797081582	IMPLEMENTATION	6.402029184180201E-5	WITHOUT_CLASSIFICATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.7721004369055413	WITHOUT_CLASSIFICATION	0.22789956309445872	IMPLEMENTATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.7721004369055413	WITHOUT_CLASSIFICATION	0.22789956309445872	IMPLEMENTATION
// TODO: check for ascii string	IMPLEMENTATION	0.6815933017155745	WITHOUT_CLASSIFICATION	0.31840669828442564	IMPLEMENTATION
// filter out any Java primitive names // TODO: should check against all Java reserved names here, not just primitives	IMPLEMENTATION	0.941430110828065	WITHOUT_CLASSIFICATION	0.058569889171934876	IMPLEMENTATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9307333231170217	WITHOUT_CLASSIFICATION	0.06926667688297827	IMPLEMENTATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9307333231170217	WITHOUT_CLASSIFICATION	0.06926667688297827	IMPLEMENTATION
// TODO: missing additional logic for dealing with conflicting protected fields.	IMPLEMENTATION	0.9248515789579461	WITHOUT_CLASSIFICATION	0.07514842104205395	IMPLEMENTATION
// TODO: better detection when path is absolute or not. // If the path isn't absolute, then prepend the current working // directory to the path.	IMPLEMENTATION	0.9936304808708364	WITHOUT_CLASSIFICATION	0.006369519129163634	IMPLEMENTATION
// FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.9996097749922963	WITHOUT_CLASSIFICATION	3.9022500770360144E-4	IMPLEMENTATION
// FIX replace type() == ... with isInstanceOf(...)	IMPLEMENTATION	0.999881335991356	WITHOUT_CLASSIFICATION	1.186640086439956E-4	IMPLEMENTATION
/* TODO: MRI is just a when node.  We need this extra logic for IDE consumers (null in casenode statement should be implicit nil)*/	IMPLEMENTATION	0.9513541409227494	WITHOUT_CLASSIFICATION	0.0486458590772506	IMPLEMENTATION
// TODO: This and recacheRespondsTo needed to be synchronized for JRUBY-3466, // but this degraded performance nearly 2x. It's still faster than MRI, but // a reanalysis of this code may show a faster way to ensure we're caching // safely.	IMPLEMENTATION	0.5463371620949197	IMPLEMENTATION	0.4536628379050804	WITHOUT_CLASSIFICATION
// TODO: adjust length so it won't fall in the middle  // of a multi-byte character. MRI's sprintf.c uses tables // in a modified version of regex.c, which assume some // particular  encoding for a given installation/application. // (See regex.c#re_mbcinit in ruby-1.8.5-p12)  // // This is only an issue if the user specifies a precision // that causes the string to be truncated. The same issue // would arise taking a substring of a ByteList-backed RubyString.	IMPLEMENTATION	0.9989268555619668	WITHOUT_CLASSIFICATION	0.0010731444380331656	IMPLEMENTATION
// set constants now that they're initialized	WITHOUT_CLASSIFICATION	0.9999700074810771	WITHOUT_CLASSIFICATION	2.9992518922785635E-5	IMPLEMENTATION
// line 335	WITHOUT_CLASSIFICATION	0.9997922677728625	WITHOUT_CLASSIFICATION	2.077322271375337E-4	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.999779971725086	WITHOUT_CLASSIFICATION	2.2002827491392825E-4	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.999779971725086	WITHOUT_CLASSIFICATION	2.2002827491392825E-4	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.999779971725086	WITHOUT_CLASSIFICATION	2.2002827491392825E-4	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.999779971725086	WITHOUT_CLASSIFICATION	2.2002827491392825E-4	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.999779971725086	WITHOUT_CLASSIFICATION	2.2002827491392825E-4	IMPLEMENTATION
// Figure end-char.  '\0' is special to indicate begin=end and that no nesting?	WITHOUT_CLASSIFICATION	0.9998844497040166	WITHOUT_CLASSIFICATION	1.1555029598336406E-4	IMPLEMENTATION
// line 362	WITHOUT_CLASSIFICATION	0.9997922677728625	WITHOUT_CLASSIFICATION	2.077322271375337E-4	IMPLEMENTATION
// line 372	WITHOUT_CLASSIFICATION	0.9997922677728625	WITHOUT_CLASSIFICATION	2.077322271375337E-4	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9997768482110331	WITHOUT_CLASSIFICATION	2.231517889668881E-4	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9997768482110331	WITHOUT_CLASSIFICATION	2.231517889668881E-4	IMPLEMENTATION
// line 391	WITHOUT_CLASSIFICATION	0.9997922677728625	WITHOUT_CLASSIFICATION	2.077322271375337E-4	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9997768482110331	WITHOUT_CLASSIFICATION	2.231517889668881E-4	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9997768482110331	WITHOUT_CLASSIFICATION	2.231517889668881E-4	IMPLEMENTATION
/* ^D */	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
/* ^Z */	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.999779971725086	WITHOUT_CLASSIFICATION	2.2002827491392825E-4	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.999779971725086	WITHOUT_CLASSIFICATION	2.2002827491392825E-4	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.999779971725086	WITHOUT_CLASSIFICATION	2.2002827491392825E-4	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.999779971725086	WITHOUT_CLASSIFICATION	2.2002827491392825E-4	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.999779971725086	WITHOUT_CLASSIFICATION	2.2002827491392825E-4	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.999779971725086	WITHOUT_CLASSIFICATION	2.2002827491392825E-4	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.999779971725086	WITHOUT_CLASSIFICATION	2.2002827491392825E-4	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.999779971725086	WITHOUT_CLASSIFICATION	2.2002827491392825E-4	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.999779971725086	WITHOUT_CLASSIFICATION	2.2002827491392825E-4	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.999779971725086	WITHOUT_CLASSIFICATION	2.2002827491392825E-4	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.999779971725086	WITHOUT_CLASSIFICATION	2.2002827491392825E-4	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.999779971725086	WITHOUT_CLASSIFICATION	2.2002827491392825E-4	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.999779971725086	WITHOUT_CLASSIFICATION	2.2002827491392825E-4	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.999779971725086	WITHOUT_CLASSIFICATION	2.2002827491392825E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.999779971725086	WITHOUT_CLASSIFICATION	2.2002827491392825E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.999779971725086	WITHOUT_CLASSIFICATION	2.2002827491392825E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.999779971725086	WITHOUT_CLASSIFICATION	2.2002827491392825E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.999779971725086	WITHOUT_CLASSIFICATION	2.2002827491392825E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.999779971725086	WITHOUT_CLASSIFICATION	2.2002827491392825E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.999779971725086	WITHOUT_CLASSIFICATION	2.2002827491392825E-4	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9997768482110331	WITHOUT_CLASSIFICATION	2.231517889668881E-4	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9997768482110331	WITHOUT_CLASSIFICATION	2.231517889668881E-4	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9997768482110331	WITHOUT_CLASSIFICATION	2.231517889668881E-4	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9997768482110331	WITHOUT_CLASSIFICATION	2.231517889668881E-4	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9997768482110331	WITHOUT_CLASSIFICATION	2.231517889668881E-4	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9997768482110331	WITHOUT_CLASSIFICATION	2.231517889668881E-4	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9997768482110331	WITHOUT_CLASSIFICATION	2.231517889668881E-4	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9997768482110331	WITHOUT_CLASSIFICATION	2.231517889668881E-4	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9997768482110331	WITHOUT_CLASSIFICATION	2.231517889668881E-4	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9997768482110331	WITHOUT_CLASSIFICATION	2.231517889668881E-4	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9997768482110331	WITHOUT_CLASSIFICATION	2.231517889668881E-4	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9997768482110331	WITHOUT_CLASSIFICATION	2.231517889668881E-4	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9997768482110331	WITHOUT_CLASSIFICATION	2.231517889668881E-4	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9997768482110331	WITHOUT_CLASSIFICATION	2.231517889668881E-4	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9997768482110331	WITHOUT_CLASSIFICATION	2.231517889668881E-4	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9997768482110331	WITHOUT_CLASSIFICATION	2.231517889668881E-4	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9997768482110331	WITHOUT_CLASSIFICATION	2.231517889668881E-4	IMPLEMENTATION
//Do nothing	WITHOUT_CLASSIFICATION	0.9999392410130188	WITHOUT_CLASSIFICATION	6.0758986981074346E-5	IMPLEMENTATION
//Do nothing	WITHOUT_CLASSIFICATION	0.9999392410130188	WITHOUT_CLASSIFICATION	6.0758986981074346E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9978414050829247	WITHOUT_CLASSIFICATION	0.0021585949170753347	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9978414050829247	WITHOUT_CLASSIFICATION	0.0021585949170753347	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9978414050829247	WITHOUT_CLASSIFICATION	0.0021585949170753347	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9978414050829247	WITHOUT_CLASSIFICATION	0.0021585949170753347	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9978414050829247	WITHOUT_CLASSIFICATION	0.0021585949170753347	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9978414050829247	WITHOUT_CLASSIFICATION	0.0021585949170753347	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9978414050829247	WITHOUT_CLASSIFICATION	0.0021585949170753347	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9978414050829247	WITHOUT_CLASSIFICATION	0.0021585949170753347	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9978414050829247	WITHOUT_CLASSIFICATION	0.0021585949170753347	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9978414050829247	WITHOUT_CLASSIFICATION	0.0021585949170753347	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9978414050829247	WITHOUT_CLASSIFICATION	0.0021585949170753347	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9978414050829247	WITHOUT_CLASSIFICATION	0.0021585949170753347	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9978414050829247	WITHOUT_CLASSIFICATION	0.0021585949170753347	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9978414050829247	WITHOUT_CLASSIFICATION	0.0021585949170753347	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9978414050829247	WITHOUT_CLASSIFICATION	0.0021585949170753347	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9978414050829247	WITHOUT_CLASSIFICATION	0.0021585949170753347	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9978414050829247	WITHOUT_CLASSIFICATION	0.0021585949170753347	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9978414050829247	WITHOUT_CLASSIFICATION	0.0021585949170753347	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9978414050829247	WITHOUT_CLASSIFICATION	0.0021585949170753347	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9978414050829247	WITHOUT_CLASSIFICATION	0.0021585949170753347	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9978414050829247	WITHOUT_CLASSIFICATION	0.0021585949170753347	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9978414050829247	WITHOUT_CLASSIFICATION	0.0021585949170753347	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9978414050829247	WITHOUT_CLASSIFICATION	0.0021585949170753347	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9978414050829247	WITHOUT_CLASSIFICATION	0.0021585949170753347	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9978414050829247	WITHOUT_CLASSIFICATION	0.0021585949170753347	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9978414050829247	WITHOUT_CLASSIFICATION	0.0021585949170753347	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9978414050829247	WITHOUT_CLASSIFICATION	0.0021585949170753347	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9978414050829247	WITHOUT_CLASSIFICATION	0.0021585949170753347	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9978414050829247	WITHOUT_CLASSIFICATION	0.0021585949170753347	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9978414050829247	WITHOUT_CLASSIFICATION	0.0021585949170753347	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9978414050829247	WITHOUT_CLASSIFICATION	0.0021585949170753347	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9978414050829247	WITHOUT_CLASSIFICATION	0.0021585949170753347	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9978414050829247	WITHOUT_CLASSIFICATION	0.0021585949170753347	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9978414050829247	WITHOUT_CLASSIFICATION	0.0021585949170753347	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9978414050829247	WITHOUT_CLASSIFICATION	0.0021585949170753347	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9978414050829247	WITHOUT_CLASSIFICATION	0.0021585949170753347	IMPLEMENTATION
// return result	WITHOUT_CLASSIFICATION	0.9999718099617003	WITHOUT_CLASSIFICATION	2.819003829957804E-5	IMPLEMENTATION
// name	WITHOUT_CLASSIFICATION	0.9957615778691111	WITHOUT_CLASSIFICATION	0.0042384221308888	IMPLEMENTATION
// Define System.getProperties() in ENV_JAVA	WITHOUT_CLASSIFICATION	0.9998986027358475	WITHOUT_CLASSIFICATION	1.0139726415245451E-4	IMPLEMENTATION
// Accessor methods.	WITHOUT_CLASSIFICATION	0.9998280967064019	WITHOUT_CLASSIFICATION	1.719032935980979E-4	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9998065700116852	WITHOUT_CLASSIFICATION	1.9342998831480763E-4	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9998065700116852	WITHOUT_CLASSIFICATION	1.9342998831480763E-4	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9998065700116852	WITHOUT_CLASSIFICATION	1.9342998831480763E-4	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9998065700116852	WITHOUT_CLASSIFICATION	1.9342998831480763E-4	IMPLEMENTATION
// call getpwent to fail early if unsupported	WITHOUT_CLASSIFICATION	0.9999063542086268	WITHOUT_CLASSIFICATION	9.364579137324721E-5	IMPLEMENTATION
// fall back on env entry for USER	WITHOUT_CLASSIFICATION	0.9998688328240853	WITHOUT_CLASSIFICATION	1.3116717591462105E-4	IMPLEMENTATION
// try to read grent to fail fast	WITHOUT_CLASSIFICATION	0.9999285832725296	WITHOUT_CLASSIFICATION	7.141672747037556E-5	IMPLEMENTATION
// define ARGV and $* for this runtime	WITHOUT_CLASSIFICATION	0.9999332445345055	WITHOUT_CLASSIFICATION	6.675546549452016E-5	IMPLEMENTATION
// Version information:	WITHOUT_CLASSIFICATION	0.9999048374512668	WITHOUT_CLASSIFICATION	9.516254873318016E-5	IMPLEMENTATION
// after defn of $stderr as the call may produce warnings	WITHOUT_CLASSIFICATION	0.9999165011640556	WITHOUT_CLASSIFICATION	8.349883594435159E-5	IMPLEMENTATION
// ARGF, $< object	WITHOUT_CLASSIFICATION	0.9998363783514652	WITHOUT_CLASSIFICATION	1.6362164853475118E-4	IMPLEMENTATION
// if the environment variables can't be obtained, define an empty ENV	WITHOUT_CLASSIFICATION	0.9999741136669722	WITHOUT_CLASSIFICATION	2.5886333027780848E-5	IMPLEMENTATION
// On platforms without a c-library accessable through JNA, getpid will return hashCode  // as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing // $$ on getpid() where available, we have the same semantics as MRI.	WITHOUT_CLASSIFICATION	0.9999828554967389	WITHOUT_CLASSIFICATION	1.714450326112912E-5	IMPLEMENTATION
//$@ returns nil if $!.backtrace is not an array	WITHOUT_CLASSIFICATION	0.999945977374745	WITHOUT_CLASSIFICATION	5.402262525501876E-5	IMPLEMENTATION
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9998825051178867	WITHOUT_CLASSIFICATION	1.1749488211324075E-4	IMPLEMENTATION
// MRI behavior: just plain '//' or '\\\\' are considered illegal on Windows.	WITHOUT_CLASSIFICATION	0.999891592127546	WITHOUT_CLASSIFICATION	1.0840787245411059E-4	IMPLEMENTATION
// this _is_ legal (when removing an undef)	WITHOUT_CLASSIFICATION	0.9998618568557583	WITHOUT_CLASSIFICATION	1.3814314424168668E-4	IMPLEMENTATION
// What we passed to the constructor for method 'path'	WITHOUT_CLASSIFICATION	0.9999405504469538	WITHOUT_CLASSIFICATION	5.944955304620312E-5	IMPLEMENTATION
// ----- Ruby Class Methods ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999795193604825	WITHOUT_CLASSIFICATION	2.048063951749072E-5	IMPLEMENTATION
// // CONSTANT TABLE METHODS - pass to delegate //	WITHOUT_CLASSIFICATION	0.9998722629105081	WITHOUT_CLASSIFICATION	1.2773708949184137E-4	IMPLEMENTATION
// We get canonical path to try and flatten the path out. // a dir '/subdir/..' should return as '/' // cnutter: Do we want to flatten path out?	WITHOUT_CLASSIFICATION	0.9995670272341337	WITHOUT_CLASSIFICATION	4.3297276586636707E-4	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9998065700116852	WITHOUT_CLASSIFICATION	1.9342998831480763E-4	IMPLEMENTATION
// ----- Ruby Instance Methods -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999825991246146	WITHOUT_CLASSIFICATION	1.740087538537627E-5	IMPLEMENTATION
// Make sure any read()s after close fail.	WITHOUT_CLASSIFICATION	0.9999480586954486	WITHOUT_CLASSIFICATION	5.194130455137957E-5	IMPLEMENTATION
// ----- Helper Methods --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999844338167798	WITHOUT_CLASSIFICATION	1.5566183220143362E-5	IMPLEMENTATION
// try to use POSIX for this first	WITHOUT_CLASSIFICATION	0.9999453558924889	WITHOUT_CLASSIFICATION	5.464410751104393E-5	IMPLEMENTATION
// otherwise fall back on the old way	WITHOUT_CLASSIFICATION	0.9998985883383856	WITHOUT_CLASSIFICATION	1.0141166161435766E-4	IMPLEMENTATION
// Proc class	WITHOUT_CLASSIFICATION	0.99984829651483	WITHOUT_CLASSIFICATION	1.517034851700283E-4	IMPLEMENTATION
// No passed in block, lets check next outer frame for one ('Proc.new')	WITHOUT_CLASSIFICATION	0.9999014938109668	WITHOUT_CLASSIFICATION	9.850618903315287E-5	IMPLEMENTATION
// modify the block with a new backref/lastline-grabbing scope	WITHOUT_CLASSIFICATION	0.999892470244646	WITHOUT_CLASSIFICATION	1.0752975535396493E-4	IMPLEMENTATION
// for future compatibility as constructors move toward not accepting metaclass?	WITHOUT_CLASSIFICATION	0.9998784864454121	WITHOUT_CLASSIFICATION	1.215135545879974E-4	IMPLEMENTATION
//        case RUBY_HYBRID: //            backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); //            break;	WITHOUT_CLASSIFICATION	0.9999837343371142	WITHOUT_CLASSIFICATION	1.6265662885817114E-5	IMPLEMENTATION
// This looks wrong, but it's the way MRI does it.	WITHOUT_CLASSIFICATION	0.9999725119720444	WITHOUT_CLASSIFICATION	2.7488027955638413E-5	IMPLEMENTATION
// rb_exc_new3	WITHOUT_CLASSIFICATION	0.999779971725086	WITHOUT_CLASSIFICATION	2.2002827491392825E-4	IMPLEMENTATION
// NOTE: The indicies here match exactly the signal values; do not reorder	WITHOUT_CLASSIFICATION	0.9999530893399666	WITHOUT_CLASSIFICATION	4.691066003333272E-5	IMPLEMENTATION
//registerThreadDumpSignalHandler(runtime);	WITHOUT_CLASSIFICATION	0.999891437207023	WITHOUT_CLASSIFICATION	1.085627929768924E-4	IMPLEMENTATION
// IOT is also 6	WITHOUT_CLASSIFICATION	0.999791023539284	WITHOUT_CLASSIFICATION	2.0897646071608108E-4	IMPLEMENTATION
// CLD is also 20	WITHOUT_CLASSIFICATION	0.9997908930194288	WITHOUT_CLASSIFICATION	2.0910698057132084E-4	IMPLEMENTATION
// RubySignal	WITHOUT_CLASSIFICATION	0.9997825313353217	WITHOUT_CLASSIFICATION	2.1746866467820016E-4	IMPLEMENTATION
// ZStream actually *isn't* allocatable	WITHOUT_CLASSIFICATION	0.999807057477922	WITHOUT_CLASSIFICATION	1.9294252207796534E-4	IMPLEMENTATION
// MRI behavior, enforced by tests	WITHOUT_CLASSIFICATION	0.999880823147951	WITHOUT_CLASSIFICATION	1.1917685204900935E-4	IMPLEMENTATION
// it's safe since adler.update doesn't modify the array	WITHOUT_CLASSIFICATION	0.9999512199258817	WITHOUT_CLASSIFICATION	4.8780074118463785E-5	IMPLEMENTATION
// MRI behavior: in finished mode, we work as pass-through	WITHOUT_CLASSIFICATION	0.9998213239762792	WITHOUT_CLASSIFICATION	1.786760237208107E-4	IMPLEMENTATION
// SYNC_FLUSH	WITHOUT_CLASSIFICATION	0.999779971725086	WITHOUT_CLASSIFICATION	2.2002827491392825E-4	IMPLEMENTATION
// By default, NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999120437538719	WITHOUT_CLASSIFICATION	8.795624612817217E-5	IMPLEMENTATION
//io.finish();	WITHOUT_CLASSIFICATION	0.9997649574280463	WITHOUT_CLASSIFICATION	2.3504257195373492E-4	IMPLEMENTATION
// should invoke seek on realIo	WITHOUT_CLASSIFICATION	0.999894345720187	WITHOUT_CLASSIFICATION	1.0565427981310086E-4	IMPLEMENTATION
// hmm...	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
// Called before any write to make sure the // header is always written before the first bytes	WITHOUT_CLASSIFICATION	0.9999900609067666	WITHOUT_CLASSIFICATION	9.939093233380986E-6	IMPLEMENTATION
// For JDK 1.4 we can use "cal.getTimeInMillis()"	WITHOUT_CLASSIFICATION	0.9998616201440286	WITHOUT_CLASSIFICATION	1.3837985597148005E-4	IMPLEMENTATION
// We can just use dt, since it is immutable	WITHOUT_CLASSIFICATION	0.9998871996132569	WITHOUT_CLASSIFICATION	1.1280038674305665E-4	IMPLEMENTATION
// float number of seconds	WITHOUT_CLASSIFICATION	0.9999745581788746	WITHOUT_CLASSIFICATION	2.544182112539314E-5	IMPLEMENTATION
// modified to match how hash is calculated in 1.8.2	WITHOUT_CLASSIFICATION	0.9999307679952069	WITHOUT_CLASSIFICATION	6.92320047932201E-5	IMPLEMENTATION
// dump usec, not msec	WITHOUT_CLASSIFICATION	0.9998315414785705	WITHOUT_CLASSIFICATION	1.6845852142965902E-4	IMPLEMENTATION
/* Time class methods */	WITHOUT_CLASSIFICATION	0.9999022088662607	WITHOUT_CLASSIFICATION	9.779113373937436E-5	IMPLEMENTATION
// marsaling dumps usec, not msec	WITHOUT_CLASSIFICATION	0.9998494972998615	WITHOUT_CLASSIFICATION	1.505027001384703E-4	IMPLEMENTATION
// MRI accepts additional wday argument which appears to be ignored.	WITHOUT_CLASSIFICATION	0.9999443569446077	WITHOUT_CLASSIFICATION	5.564305539240129E-5	IMPLEMENTATION
// set up with min values and then add to allow rolling over	WITHOUT_CLASSIFICATION	0.9999351102627466	WITHOUT_CLASSIFICATION	6.488973725343477E-5	IMPLEMENTATION
// the instant at which we will ask dtz what the difference between DST and // standard time is	WITHOUT_CLASSIFICATION	0.9999444517601087	WITHOUT_CLASSIFICATION	5.554823989141212E-5	IMPLEMENTATION
// if we might be moving this time from !DST -> DST, the offset is assumed // to be the same as it was just before we last moved from DST -> !DST	WITHOUT_CLASSIFICATION	0.999951957602403	WITHOUT_CLASSIFICATION	4.8042397596999566E-5	IMPLEMENTATION
// Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.	WITHOUT_CLASSIFICATION	0.9999899556756726	WITHOUT_CLASSIFICATION	1.0044324327299698E-5	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999175897571329	WITHOUT_CLASSIFICATION	8.24102428672306E-5	IMPLEMENTATION
/* If the value will fit in a Fixnum, return one of those. */	WITHOUT_CLASSIFICATION	0.9999649671492427	WITHOUT_CLASSIFICATION	3.503285075725633E-5	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999356907049011	WITHOUT_CLASSIFICATION	6.430929509895827E-5	IMPLEMENTATION
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9998157142022565	WITHOUT_CLASSIFICATION	1.8428579774357954E-4	IMPLEMENTATION
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9591118773187934	WITHOUT_CLASSIFICATION	0.040888122681206486	IMPLEMENTATION
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9591118773187934	WITHOUT_CLASSIFICATION	0.040888122681206486	IMPLEMENTATION
// no bignorm here needed	WITHOUT_CLASSIFICATION	0.9993240541264927	WITHOUT_CLASSIFICATION	6.759458735071494E-4	IMPLEMENTATION
// wow, the only time we can use the java protocol ;)	WITHOUT_CLASSIFICATION	0.999898861544978	WITHOUT_CLASSIFICATION	1.0113845502200733E-4	IMPLEMENTATION
// Pad with a 0	WITHOUT_CLASSIFICATION	0.9998182113489191	WITHOUT_CLASSIFICATION	1.8178865108079085E-4	IMPLEMENTATION
// BigInteger required a sign byte in incoming array	WITHOUT_CLASSIFICATION	0.9998698465940672	WITHOUT_CLASSIFICATION	1.3015340593274042E-4	IMPLEMENTATION
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9999830035141921	WITHOUT_CLASSIFICATION	1.6996485807913044E-5	IMPLEMENTATION
// We do this b/c make_tmpname might be overridden	WITHOUT_CLASSIFICATION	0.9998667160278414	WITHOUT_CLASSIFICATION	1.3328397215866966E-4	IMPLEMENTATION
// ???	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
// PID	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999356907049011	WITHOUT_CLASSIFICATION	6.430929509895827E-5	IMPLEMENTATION
// elements and trailing nils	WITHOUT_CLASSIFICATION	0.9999360625136129	WITHOUT_CLASSIFICATION	6.393748638714244E-5	IMPLEMENTATION
// Dir::tmpdir	WITHOUT_CLASSIFICATION	0.9997802141334176	WITHOUT_CLASSIFICATION	2.1978586658247812E-4	IMPLEMENTATION
// volatile to ensure that initial nil-fill is visible to other threads	WITHOUT_CLASSIFICATION	0.999705342312456	WITHOUT_CLASSIFICATION	2.94657687543932E-4	IMPLEMENTATION
/* Ruby arrays default to holding 16 elements, so we create an         * ArrayList of the same size if we're not told otherwise         */	WITHOUT_CLASSIFICATION	0.999997886911735	WITHOUT_CLASSIFICATION	2.113088265024463E-6	IMPLEMENTATION
/* rb_ary_new2     * just allocates the internal array     */	WITHOUT_CLASSIFICATION	0.999938117788893	WITHOUT_CLASSIFICATION	6.188221110697194E-5	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999659977974232	WITHOUT_CLASSIFICATION	3.400220257683391E-5	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999659977974232	WITHOUT_CLASSIFICATION	3.400220257683391E-5	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999659977974232	WITHOUT_CLASSIFICATION	3.400220257683391E-5	IMPLEMENTATION
/* Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour     *      */	WITHOUT_CLASSIFICATION	0.9999138593585657	WITHOUT_CLASSIFICATION	8.614064143425284E-5	IMPLEMENTATION
/* NEWOBJ and OBJSETUP equivalent     * fastest one, for shared arrays, optional objectspace     */	WITHOUT_CLASSIFICATION	0.9999094516483199	WITHOUT_CLASSIFICATION	9.054835168002065E-5	IMPLEMENTATION
// Create global constants and variables	WITHOUT_CLASSIFICATION	0.9999621227128069	WITHOUT_CLASSIFICATION	3.787728719305353E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9994806708116829	WITHOUT_CLASSIFICATION	5.19329188317183E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9994806708116829	WITHOUT_CLASSIFICATION	5.19329188317183E-4	IMPLEMENTATION
// Windows does not support these functions, so we won't even try // This also matches Ruby behavior for JRUBY-2353.	WITHOUT_CLASSIFICATION	0.9998971478397318	WITHOUT_CLASSIFICATION	1.0285216026825587E-4	IMPLEMENTATION
// There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and // newer one (US/Pacific, America/Los_Angeles). This pattern is to detect // the legacy TZ format in order to convert it to the newer format // understood by Java API.	WITHOUT_CLASSIFICATION	0.9999870917173402	WITHOUT_CLASSIFICATION	1.2908282659853262E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9994806708116829	WITHOUT_CLASSIFICATION	5.19329188317183E-4	IMPLEMENTATION
// 1.9 seems to just do inspect for to_s now	WITHOUT_CLASSIFICATION	0.9998823257821221	WITHOUT_CLASSIFICATION	1.1767421787790352E-4	IMPLEMENTATION
// possibly should not in object space	WITHOUT_CLASSIFICATION	0.9999188832468022	WITHOUT_CLASSIFICATION	8.111675319768109E-5	IMPLEMENTATION
// only fill if there actually will remain trailing storage	WITHOUT_CLASSIFICATION	0.9999300361499064	WITHOUT_CLASSIFICATION	6.99638500936727E-5	IMPLEMENTATION
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.999779971725086	WITHOUT_CLASSIFICATION	2.2002827491392825E-4	IMPLEMENTATION
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.999779971725086	WITHOUT_CLASSIFICATION	2.2002827491392825E-4	IMPLEMENTATION
// from DUP_SETUP	WITHOUT_CLASSIFICATION	0.9998233578659519	WITHOUT_CLASSIFICATION	1.766421340480806E-4	IMPLEMENTATION
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999519026552566	WITHOUT_CLASSIFICATION	4.8097344743357115E-5	IMPLEMENTATION
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9998382686842081	WITHOUT_CLASSIFICATION	1.6173131579187483E-4	IMPLEMENTATION
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9998382686842081	WITHOUT_CLASSIFICATION	1.6173131579187483E-4	IMPLEMENTATION
// Satisfy java.util.List interface (for Java integration)	WITHOUT_CLASSIFICATION	0.999916975491545	WITHOUT_CLASSIFICATION	8.302450845499653E-5	IMPLEMENTATION
// pre-set for the sake of terminating recursive calls	WITHOUT_CLASSIFICATION	0.9999537503062634	WITHOUT_CLASSIFICATION	4.6249693736610764E-5	IMPLEMENTATION
/* root fiber */	WITHOUT_CLASSIFICATION	0.9997841334631271	WITHOUT_CLASSIFICATION	2.158665368730066E-4	IMPLEMENTATION
// GMT+00:00 --> Etc/GMT, see "MRI behavior" // comment below.	WITHOUT_CLASSIFICATION	0.9999039020655448	WITHOUT_CLASSIFICATION	9.609793445519242E-5	IMPLEMENTATION
//  See http://www.gzip.org/zlib/rfc-gzip.html	WITHOUT_CLASSIFICATION	0.9998420213265389	WITHOUT_CLASSIFICATION	1.5797867346109196E-4	IMPLEMENTATION
// extras flag	WITHOUT_CLASSIFICATION	0.9997948735930648	WITHOUT_CLASSIFICATION	2.051264069351757E-4	IMPLEMENTATION
// Zlib::NO_FLUSH	WITHOUT_CLASSIFICATION	0.999779971725086	WITHOUT_CLASSIFICATION	2.2002827491392825E-4	IMPLEMENTATION
// ...nothing	WITHOUT_CLASSIFICATION	0.9999014980738765	WITHOUT_CLASSIFICATION	9.850192612351399E-5	IMPLEMENTATION
// utility method	WITHOUT_CLASSIFICATION	0.9998167341107828	WITHOUT_CLASSIFICATION	1.8326588921728948E-4	IMPLEMENTATION
// Prepare LoadService and load path	WITHOUT_CLASSIFICATION	0.9998748985312209	WITHOUT_CLASSIFICATION	1.2510146877908686E-4	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999356907049011	WITHOUT_CLASSIFICATION	6.430929509895827E-5	IMPLEMENTATION
// flags // 4 bytes of modified time	WITHOUT_CLASSIFICATION	0.9998649068394276	WITHOUT_CLASSIFICATION	1.3509316057240135E-4	IMPLEMENTATION
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9998377444594869	WITHOUT_CLASSIFICATION	1.622555405130861E-4	IMPLEMENTATION
// 1.8 "include?"	WITHOUT_CLASSIFICATION	0.9997775258148693	WITHOUT_CLASSIFICATION	2.224741851306985E-4	IMPLEMENTATION
// any BigInteger is bigger than Fixnum and we don't have FIXABLE	WITHOUT_CLASSIFICATION	0.9999123420766775	WITHOUT_CLASSIFICATION	8.765792332261005E-5	IMPLEMENTATION
// beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal	WITHOUT_CLASSIFICATION	0.9998748885814398	WITHOUT_CLASSIFICATION	1.2511141856022808E-4	IMPLEMENTATION
// MRI does it!	WITHOUT_CLASSIFICATION	0.9997821243941133	WITHOUT_CLASSIFICATION	2.1787560588678865E-4	IMPLEMENTATION
// won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9998365238194082	WITHOUT_CLASSIFICATION	1.6347618059166748E-4	IMPLEMENTATION
// it won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9998631613669796	WITHOUT_CLASSIFICATION	1.3683863302045723E-4	IMPLEMENTATION
// RubyClassPathVariable	WITHOUT_CLASSIFICATION	0.9998282691385758	WITHOUT_CLASSIFICATION	1.7173086142425656E-4	IMPLEMENTATION
// not to be confused with RubyObject's flags	WITHOUT_CLASSIFICATION	0.9997430702076652	WITHOUT_CLASSIFICATION	2.569297923348836E-4	IMPLEMENTATION
// second argument is allowed, but ignored (MRI)	WITHOUT_CLASSIFICATION	0.9999782109026444	WITHOUT_CLASSIFICATION	2.1789097355607504E-5	IMPLEMENTATION
// we are presumably running a precompiled class; load directly	WITHOUT_CLASSIFICATION	0.9999548522618052	WITHOUT_CLASSIFICATION	4.514773819466263E-5	IMPLEMENTATION
// terminate; tryCompile will have printed out an error and we're done	WITHOUT_CLASSIFICATION	0.9999094571946867	WITHOUT_CLASSIFICATION	9.0542805313218E-5	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999399026019634	WITHOUT_CLASSIFICATION	6.009739803645304E-5	IMPLEMENTATION
// do nothing, this iteration restarts	WITHOUT_CLASSIFICATION	0.9999810990681772	WITHOUT_CLASSIFICATION	1.8900931822854895E-5	IMPLEMENTATION
// recheck condition	WITHOUT_CLASSIFICATION	0.9998324163797226	WITHOUT_CLASSIFICATION	1.6758362027738003E-4	IMPLEMENTATION
// Get the main threadcontext (gets constructed for us)	WITHOUT_CLASSIFICATION	0.9999626547012445	WITHOUT_CLASSIFICATION	3.73452987554678E-5	IMPLEMENTATION
// Construct key services	WITHOUT_CLASSIFICATION	0.9999088538592114	WITHOUT_CLASSIFICATION	9.114614078869487E-5	IMPLEMENTATION
// initialize the root of the class hierarchy completely	WITHOUT_CLASSIFICATION	0.999990896997814	WITHOUT_CLASSIFICATION	9.103002186010473E-6	IMPLEMENTATION
// Construct the top-level execution frame and scope for the main thread	WITHOUT_CLASSIFICATION	0.9999727551495339	WITHOUT_CLASSIFICATION	2.724485046608587E-5	IMPLEMENTATION
// Initialize all the core classes	WITHOUT_CLASSIFICATION	0.9999761244839486	WITHOUT_CLASSIFICATION	2.3875516051490634E-5	IMPLEMENTATION
// Initialize the "dummy" class used as a marker	WITHOUT_CLASSIFICATION	0.9999734851953068	WITHOUT_CLASSIFICATION	2.6514804693202064E-5	IMPLEMENTATION
// Initialize Kernel and include into Object	WITHOUT_CLASSIFICATION	0.9999490059054232	WITHOUT_CLASSIFICATION	5.099409457673539E-5	IMPLEMENTATION
// Object is ready, create top self	WITHOUT_CLASSIFICATION	0.999915131364548	WITHOUT_CLASSIFICATION	8.4868635451906E-5	IMPLEMENTATION
// Pre-create all the core classes potentially referenced during startup	WITHOUT_CLASSIFICATION	0.9999827460979507	WITHOUT_CLASSIFICATION	1.72539020492671E-5	IMPLEMENTATION
// Math depends on all numeric types	WITHOUT_CLASSIFICATION	0.9998889640107378	WITHOUT_CLASSIFICATION	1.1103598926228634E-4	IMPLEMENTATION
// depends on IO, FileTest	WITHOUT_CLASSIFICATION	0.9998652514549824	WITHOUT_CLASSIFICATION	1.3474854501763686E-4	IMPLEMENTATION
// initialize builtin libraries	WITHOUT_CLASSIFICATION	0.9999677028817131	WITHOUT_CLASSIFICATION	3.22971182869088E-5	IMPLEMENTATION
// Require in all libraries specified on command line	WITHOUT_CLASSIFICATION	0.9999511653523478	WITHOUT_CLASSIFICATION	4.883464765217296E-5	IMPLEMENTATION
// Bootstrap the top of the hierarchy	WITHOUT_CLASSIFICATION	0.9999417121655708	WITHOUT_CLASSIFICATION	5.8287834429218856E-5	IMPLEMENTATION
// we try to get the classloader that loaded JRuby, falling back on System	WITHOUT_CLASSIFICATION	0.9999670327541601	WITHOUT_CLASSIFICATION	3.29672458399296E-5	IMPLEMENTATION
// determine spacing	WITHOUT_CLASSIFICATION	0.999865697681285	WITHOUT_CLASSIFICATION	1.3430231871501493E-4	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9998376720884625	WITHOUT_CLASSIFICATION	1.623279115374921E-4	IMPLEMENTATION
// For JSR 223 support: see http://scripting.java.net/	WITHOUT_CLASSIFICATION	0.999778296385446	WITHOUT_CLASSIFICATION	2.2170361455394694E-4	IMPLEMENTATION
// use this for JRuby-internal finalizers	WITHOUT_CLASSIFICATION	0.9998518169953836	WITHOUT_CLASSIFICATION	1.481830046164386E-4	IMPLEMENTATION
// this method is for finalizers registered via ObjectSpace	WITHOUT_CLASSIFICATION	0.9998362770338133	WITHOUT_CLASSIFICATION	1.6372296618674518E-4	IMPLEMENTATION
// new factory methods ------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999781653551775	WITHOUT_CLASSIFICATION	2.1834644822541708E-5	IMPLEMENTATION
//        assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999730383709902	WITHOUT_CLASSIFICATION	2.6961629009855722E-5	IMPLEMENTATION
// Equivalent of Data_Wrap_Struct	WITHOUT_CLASSIFICATION	0.999814903212442	WITHOUT_CLASSIFICATION	1.8509678755788874E-4	IMPLEMENTATION
// default: don't retain	WITHOUT_CLASSIFICATION	0.999960096821775	WITHOUT_CLASSIFICATION	3.990317822504574E-5	IMPLEMENTATION
// ChannelDescriptors opened by sysopen are cached to avoid collection	WITHOUT_CLASSIFICATION	0.9999336571797565	WITHOUT_CLASSIFICATION	6.634282024358523E-5	IMPLEMENTATION
// Default objects	WITHOUT_CLASSIFICATION	0.9999563324597569	WITHOUT_CLASSIFICATION	4.3667540243059876E-5	IMPLEMENTATION
// record separator var, to speed up io ops that use it	WITHOUT_CLASSIFICATION	0.9999049048136268	WITHOUT_CLASSIFICATION	9.509518637313697E-5	IMPLEMENTATION
// former java.lang.System concepts now internalized for MVM	WITHOUT_CLASSIFICATION	0.9999221243106096	WITHOUT_CLASSIFICATION	7.787568939037417E-5	IMPLEMENTATION
// Java support	WITHOUT_CLASSIFICATION	0.9996506843762749	WITHOUT_CLASSIFICATION	3.4931562372511274E-4	IMPLEMENTATION
// Parser stats	WITHOUT_CLASSIFICATION	0.9998061537362518	WITHOUT_CLASSIFICATION	1.9384626374810578E-4	IMPLEMENTATION
// Compilation	WITHOUT_CLASSIFICATION	0.9998244226646923	WITHOUT_CLASSIFICATION	1.7557733530776853E-4	IMPLEMENTATION
// can't read non-standard properties	WITHOUT_CLASSIFICATION	0.9998922463472751	WITHOUT_CLASSIFICATION	1.0775365272488911E-4	IMPLEMENTATION
// can't create custom classloaders	WITHOUT_CLASSIFICATION	0.9999579891723739	WITHOUT_CLASSIFICATION	4.2010827626014724E-5	IMPLEMENTATION
// mutex that controls modifications of user-defined finalizers	WITHOUT_CLASSIFICATION	0.9999294719247054	WITHOUT_CLASSIFICATION	7.052807529466304E-5	IMPLEMENTATION
// mutex that controls modifications of internal finalizers	WITHOUT_CLASSIFICATION	0.9999389075752142	WITHOUT_CLASSIFICATION	6.109242478579218E-5	IMPLEMENTATION
// A thread pool to use for executing this runtime's Ruby threads	WITHOUT_CLASSIFICATION	0.9998676121315535	WITHOUT_CLASSIFICATION	1.323878684464835E-4	IMPLEMENTATION
// A global object lock for class hierarchy mutations	WITHOUT_CLASSIFICATION	0.9999713940004645	WITHOUT_CLASSIFICATION	2.8605999535492275E-5	IMPLEMENTATION
// initial spaces // spaces before "at"	WITHOUT_CLASSIFICATION	0.9999396276547926	WITHOUT_CLASSIFICATION	6.0372345207319324E-5	IMPLEMENTATION
// event name // filename // line numbers should be 1-based	WITHOUT_CLASSIFICATION	0.9999634933763132	WITHOUT_CLASSIFICATION	3.650662368677129E-5	IMPLEMENTATION
// The method is intentionally not public, since it typically should // not be used outside of the core.	WITHOUT_CLASSIFICATION	0.9999627900619203	WITHOUT_CLASSIFICATION	3.7209938079628654E-5	IMPLEMENTATION
// Note: this field and the following static initializer // must be located be in this order!	WITHOUT_CLASSIFICATION	0.9999880775496244	WITHOUT_CLASSIFICATION	1.192245037556031E-5	IMPLEMENTATION
// Contains a list of all blocks (as Procs) that should be called when // the runtime environment exits.	WITHOUT_CLASSIFICATION	0.9999520738023986	WITHOUT_CLASSIFICATION	4.792619760153246E-5	IMPLEMENTATION
// quoted-printable	WITHOUT_CLASSIFICATION	0.9997930246237969	WITHOUT_CLASSIFICATION	2.069753762031917E-4	IMPLEMENTATION
// default options	WITHOUT_CLASSIFICATION	0.999967069705124	WITHOUT_CLASSIFICATION	3.293029487604974E-5	IMPLEMENTATION
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.999779971725086	WITHOUT_CLASSIFICATION	2.2002827491392825E-4	IMPLEMENTATION
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.999779971725086	WITHOUT_CLASSIFICATION	2.2002827491392825E-4	IMPLEMENTATION
// Shift_JIS	WITHOUT_CLASSIFICATION	0.999780050484698	WITHOUT_CLASSIFICATION	2.1994951530205595E-4	IMPLEMENTATION
// Shift_JIS	WITHOUT_CLASSIFICATION	0.999780050484698	WITHOUT_CLASSIFICATION	2.1994951530205595E-4	IMPLEMENTATION
// EUC-JP	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
// EUC-JP	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
// UTF-8	WITHOUT_CLASSIFICATION	0.995408590200497	WITHOUT_CLASSIFICATION	0.00459140979950299	IMPLEMENTATION
// UTF-8	WITHOUT_CLASSIFICATION	0.995408590200497	WITHOUT_CLASSIFICATION	0.00459140979950299	IMPLEMENTATION
// long name option	WITHOUT_CLASSIFICATION	0.9999094352503877	WITHOUT_CLASSIFICATION	9.056474961232745E-5	IMPLEMENTATION
// conversion	WITHOUT_CLASSIFICATION	0.999895037862696	WITHOUT_CLASSIFICATION	1.0496213730405886E-4	IMPLEMENTATION
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999257731425168	WITHOUT_CLASSIFICATION	7.422685748319916E-5	IMPLEMENTATION
// string doesn't share any resources	WITHOUT_CLASSIFICATION	0.999952932264505	WITHOUT_CLASSIFICATION	4.706773549505281E-5	IMPLEMENTATION
// string has it's own ByteList, but it's pointing to a shared buffer (byte[])	WITHOUT_CLASSIFICATION	0.99992723379694	WITHOUT_CLASSIFICATION	7.27662030599323E-5	IMPLEMENTATION
// string doesn't have it's own ByteList (values)	WITHOUT_CLASSIFICATION	0.9999494860880381	WITHOUT_CLASSIFICATION	5.051391196178612E-5	IMPLEMENTATION
// ENC_CODERANGE_ASCIIONLY	WITHOUT_CLASSIFICATION	0.9998270008752763	WITHOUT_CLASSIFICATION	1.7299912472375304E-4	IMPLEMENTATION
// rb_enc_str_asciionly_p	WITHOUT_CLASSIFICATION	0.9998269084618239	WITHOUT_CLASSIFICATION	1.7309153817620973E-4	IMPLEMENTATION
// rb_enc_str_coderange	WITHOUT_CLASSIFICATION	0.9998270863389236	WITHOUT_CLASSIFICATION	1.7291366107645667E-4	IMPLEMENTATION
// rb_str_hash_cmp	WITHOUT_CLASSIFICATION	0.999779971725086	WITHOUT_CLASSIFICATION	2.2002827491392825E-4	IMPLEMENTATION
// Deprecated String construction routines	WITHOUT_CLASSIFICATION	0.9999224321906716	WITHOUT_CLASSIFICATION	7.756780932843071E-5	IMPLEMENTATION
// String construction routines by NOT byte[] buffer and NOT making the target String shared 	WITHOUT_CLASSIFICATION	0.9999755568491296	WITHOUT_CLASSIFICATION	2.4443150870314295E-5	IMPLEMENTATION
/* rb_str_subseq */	WITHOUT_CLASSIFICATION	0.9997802394397719	WITHOUT_CLASSIFICATION	2.1976056022816908E-4	IMPLEMENTATION
// no need to assign encoding, same bytelist shared	WITHOUT_CLASSIFICATION	0.9998589509053294	WITHOUT_CLASSIFICATION	1.4104909467062821E-4	IMPLEMENTATION
// if len == 0 then shared empty	WITHOUT_CLASSIFICATION	0.9998803702228098	WITHOUT_CLASSIFICATION	1.1962977719013135E-4	IMPLEMENTATION
/* rb_str_cmp_m */	WITHOUT_CLASSIFICATION	0.999779971725086	WITHOUT_CLASSIFICATION	2.2002827491392825E-4	IMPLEMENTATION
// we limit to int because ByteBuffer can only allocate int sizes	WITHOUT_CLASSIFICATION	0.9998950681891392	WITHOUT_CLASSIFICATION	1.0493181086075213E-4	IMPLEMENTATION
// // rb_str_buf_append	WITHOUT_CLASSIFICATION	0.9998546670446423	WITHOUT_CLASSIFICATION	1.4533295535768074E-4	IMPLEMENTATION
// encoding doesn't have to be copied.	WITHOUT_CLASSIFICATION	0.9999524078811607	WITHOUT_CLASSIFICATION	4.759211883922173E-5	IMPLEMENTATION
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9997451740872108	WITHOUT_CLASSIFICATION	2.548259127892769E-4	IMPLEMENTATION
// must not reallocate	WITHOUT_CLASSIFICATION	0.9998740709102322	WITHOUT_CLASSIFICATION	1.259290897678372E-4	IMPLEMENTATION
// Illegal combination	WITHOUT_CLASSIFICATION	0.9998475214203503	WITHOUT_CLASSIFICATION	1.524785796497399E-4	IMPLEMENTATION
// use 1.8 impl	WITHOUT_CLASSIFICATION	0.9998321513546964	WITHOUT_CLASSIFICATION	1.6784864530350706E-4	IMPLEMENTATION
/* RubyString aka rb_string_value */	WITHOUT_CLASSIFICATION	0.9998842746210966	WITHOUT_CLASSIFICATION	1.1572537890333965E-4	IMPLEMENTATION
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9998857414839667	WITHOUT_CLASSIFICATION	1.1425851603335967E-4	IMPLEMENTATION
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999146899470377	WITHOUT_CLASSIFICATION	8.531005296226762E-5	IMPLEMENTATION
/* len + margin */	WITHOUT_CLASSIFICATION	0.9997824698136306	WITHOUT_CLASSIFICATION	2.1753018636942967E-4	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9997759329595282	WITHOUT_CLASSIFICATION	2.2406704047191246E-4	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9997759329595282	WITHOUT_CLASSIFICATION	2.2406704047191246E-4	IMPLEMENTATION
/* copy pre-match substr */	WITHOUT_CLASSIFICATION	0.9998381521041442	WITHOUT_CLASSIFICATION	1.6184789585576212E-4	IMPLEMENTATION
// string given	WITHOUT_CLASSIFICATION	0.999871482242171	WITHOUT_CLASSIFICATION	1.2851775782891426E-4	IMPLEMENTATION
// hash given	WITHOUT_CLASSIFICATION	0.9997833511460006	WITHOUT_CLASSIFICATION	2.1664885399935797E-4	IMPLEMENTATION
// This represents left most digit in a set of incremented // values?  Therefore leftmost numeric must be '1' and not '0' // 999 -> 1000, not 999 -> 0000.  whereas chars should be // zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"	WITHOUT_CLASSIFICATION	0.9999666456073879	WITHOUT_CLASSIFICATION	3.335439261200937E-5	IMPLEMENTATION
/* substring longer than string */	WITHOUT_CLASSIFICATION	0.9999138817249742	WITHOUT_CLASSIFICATION	8.611827502572732E-5	IMPLEMENTATION
/* rb_str_substr */	WITHOUT_CLASSIFICATION	0.9997805934489994	WITHOUT_CLASSIFICATION	2.1940655100064854E-4	IMPLEMENTATION
// nothing	WITHOUT_CLASSIFICATION	0.9978047898115742	WITHOUT_CLASSIFICATION	0.00219521018842594	IMPLEMENTATION
// nothing	WITHOUT_CLASSIFICATION	0.9978047898115742	WITHOUT_CLASSIFICATION	0.00219521018842594	IMPLEMENTATION
/* rb_str_splice */	WITHOUT_CLASSIFICATION	0.9997801517007767	WITHOUT_CLASSIFICATION	2.198482992232793E-4	IMPLEMENTATION
// TODO: keep cr // TODO: rb_str_splice_0	WITHOUT_CLASSIFICATION	0.8462107225230011	WITHOUT_CLASSIFICATION	0.15378927747699894	IMPLEMENTATION
// keep cr ?	WITHOUT_CLASSIFICATION	0.9997999467999821	WITHOUT_CLASSIFICATION	2.0005320001797785E-4	IMPLEMENTATION
// keep cr ?	WITHOUT_CLASSIFICATION	0.9997999467999821	WITHOUT_CLASSIFICATION	2.0005320001797785E-4	IMPLEMENTATION
/* wrapped to \0...\0.  search next valid char. */	WITHOUT_CLASSIFICATION	0.9999100742057612	WITHOUT_CLASSIFICATION	8.992579423882115E-5	IMPLEMENTATION
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9998985138965931	WITHOUT_CLASSIFICATION	1.014861034068534E-4	IMPLEMENTATION
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9998985138965931	WITHOUT_CLASSIFICATION	1.014861034068534E-4	IMPLEMENTATION
// modified	WITHOUT_CLASSIFICATION	0.999813887025854	WITHOUT_CLASSIFICATION	1.8611297414594313E-4	IMPLEMENTATION
// modified	WITHOUT_CLASSIFICATION	0.999813887025854	WITHOUT_CLASSIFICATION	1.8611297414594313E-4	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
// QTRUE	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
/* retrieve last replacer */	WITHOUT_CLASSIFICATION	0.9998878309115689	WITHOUT_CLASSIFICATION	1.121690884311856E-4	IMPLEMENTATION
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999488550598669	WITHOUT_CLASSIFICATION	5.1144940133110335E-5	IMPLEMENTATION
// long size * bits in byte	WITHOUT_CLASSIFICATION	0.9999164470399277	WITHOUT_CLASSIFICATION	8.355296007233109E-5	IMPLEMENTATION
// from encoding, special-casing ASCII* to ASCII	WITHOUT_CLASSIFICATION	0.9998944135845845	WITHOUT_CLASSIFICATION	1.0558641541553297E-4	IMPLEMENTATION
// to encoding, same special-casing	WITHOUT_CLASSIFICATION	0.9998823614427518	WITHOUT_CLASSIFICATION	1.1763855724822439E-4	IMPLEMENTATION
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999771882500812	WITHOUT_CLASSIFICATION	2.2811749918732997E-5	IMPLEMENTATION
// decode from "from" and encode to "to"	WITHOUT_CLASSIFICATION	0.9999054140724104	WITHOUT_CLASSIFICATION	9.45859275895808E-5	IMPLEMENTATION
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999771882500812	WITHOUT_CLASSIFICATION	2.2811749918732997E-5	IMPLEMENTATION
//Kernel is the only Module that doesn't need an implementor	WITHOUT_CLASSIFICATION	0.9983181763777831	WITHOUT_CLASSIFICATION	0.0016818236222168976	IMPLEMENTATION
// no binding given, use (eval)	WITHOUT_CLASSIFICATION	0.999885912908766	WITHOUT_CLASSIFICATION	1.1408709123395168E-4	IMPLEMENTATION
// interned, OK for "fast" methods	WITHOUT_CLASSIFICATION	0.9998974585400686	WITHOUT_CLASSIFICATION	1.0254145993137037E-4	IMPLEMENTATION
// File to be loaded by autoload has already been or is being loaded.	WITHOUT_CLASSIFICATION	0.9999278987915533	WITHOUT_CLASSIFICATION	7.210120844665999E-5	IMPLEMENTATION
// rb_cstr_to_dbl case	WITHOUT_CLASSIFICATION	0.9998265921215574	WITHOUT_CLASSIFICATION	1.7340787844263484E-4	IMPLEMENTATION
// We break if we know this sleep was explicitly woken up/interrupted	WITHOUT_CLASSIFICATION	0.9998628167540269	WITHOUT_CLASSIFICATION	1.3718324597317255E-4	IMPLEMENTATION
// exec process, create IO with process	WITHOUT_CLASSIFICATION	0.9999319873381546	WITHOUT_CLASSIFICATION	6.801266184545564E-5	IMPLEMENTATION
// Zero sleeps forever	WITHOUT_CLASSIFICATION	0.9998760127634587	WITHOUT_CLASSIFICATION	1.2398723654119198E-4	IMPLEMENTATION
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9998864355428916	WITHOUT_CLASSIFICATION	1.1356445710843156E-4	IMPLEMENTATION
// Explicit zero in MRI returns immediately	WITHOUT_CLASSIFICATION	0.9999371612199067	WITHOUT_CLASSIFICATION	6.28387800932178E-5	IMPLEMENTATION
// Spurious wakeup-loop	WITHOUT_CLASSIFICATION	0.9998281889885638	WITHOUT_CLASSIFICATION	1.7181101143614686E-4	IMPLEMENTATION
// adjusts paths started with '/' or '\\', on windows.	WITHOUT_CLASSIFICATION	0.9998944231584992	WITHOUT_CLASSIFICATION	1.0557684150086497E-4	IMPLEMENTATION
// file not given	WITHOUT_CLASSIFICATION	0.9998157588459622	WITHOUT_CLASSIFICATION	1.842411540378556E-4	IMPLEMENTATION
// string to eval	WITHOUT_CLASSIFICATION	0.9999006734673518	WITHOUT_CLASSIFICATION	9.932653264823978E-5	IMPLEMENTATION
// binding given, use binding's file	WITHOUT_CLASSIFICATION	0.9998544098161387	WITHOUT_CLASSIFICATION	1.4559018386141315E-4	IMPLEMENTATION
// ?g  | boolean | True if file1 has the \CF{setgid} bit	WITHOUT_CLASSIFICATION	0.9999152259891162	WITHOUT_CLASSIFICATION	8.477401088375969E-5	IMPLEMENTATION
// bomb out, it's not a binding or a proc	WITHOUT_CLASSIFICATION	0.9998853043834477	WITHOUT_CLASSIFICATION	1.1469561655227291E-4	IMPLEMENTATION
// Ordering of array traversal not important, just intuitive	WITHOUT_CLASSIFICATION	0.9997532031381551	WITHOUT_CLASSIFICATION	2.467968618449461E-4	IMPLEMENTATION
//Catch active, throw for catch to handle	WITHOUT_CLASSIFICATION	0.9998313994635296	WITHOUT_CLASSIFICATION	1.6860053647039215E-4	IMPLEMENTATION
// No catch active for this throw	WITHOUT_CLASSIFICATION	0.9998947922615987	WITHOUT_CLASSIFICATION	1.0520773840132368E-4	IMPLEMENTATION
// without full tracing, many events will not fire	WITHOUT_CLASSIFICATION	0.9999140480990509	WITHOUT_CLASSIFICATION	8.595190094912774E-5	IMPLEMENTATION
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999908158288666	WITHOUT_CLASSIFICATION	9.184171133328036E-6	IMPLEMENTATION
// MRI behavior: use first byte of string value if len > 0	WITHOUT_CLASSIFICATION	0.9999507403590695	WITHOUT_CLASSIFICATION	4.9259640930540206E-5	IMPLEMENTATION
// MRI behavior: now check arg count	WITHOUT_CLASSIFICATION	0.9998627645953069	WITHOUT_CLASSIFICATION	1.3723540469322333E-4	IMPLEMENTATION
// ?A  | Time    | Last access time for file1	WITHOUT_CLASSIFICATION	0.9998478869382972	WITHOUT_CLASSIFICATION	1.521130617028885E-4	IMPLEMENTATION
// ?b  | boolean | True if file1 is a block device	WITHOUT_CLASSIFICATION	0.9999032716372958	WITHOUT_CLASSIFICATION	9.672836270426991E-5	IMPLEMENTATION
// ?c  | boolean | True if file1 is a character device	WITHOUT_CLASSIFICATION	0.9999399063391538	WITHOUT_CLASSIFICATION	6.009366084629605E-5	IMPLEMENTATION
// ?C  | Time    | Last change time for file1	WITHOUT_CLASSIFICATION	0.9998904506893894	WITHOUT_CLASSIFICATION	1.0954931061058241E-4	IMPLEMENTATION
// ?d  | boolean | True if file1 exists and is a directory	WITHOUT_CLASSIFICATION	0.9999698644178948	WITHOUT_CLASSIFICATION	3.013558210515193E-5	IMPLEMENTATION
// ?e  | boolean | True if file1 exists	WITHOUT_CLASSIFICATION	0.9999078297926278	WITHOUT_CLASSIFICATION	9.217020737226704E-5	IMPLEMENTATION
// ?f  | boolean | True if file1 exists and is a regular file	WITHOUT_CLASSIFICATION	0.9999232156307024	WITHOUT_CLASSIFICATION	7.678436929757966E-5	IMPLEMENTATION
// ?G  | boolean | True if file1 exists and has a group ownership equal to the caller's group	WITHOUT_CLASSIFICATION	0.999970864371554	WITHOUT_CLASSIFICATION	2.9135628445972197E-5	IMPLEMENTATION
// ?k  | boolean | True if file1 exists and has the sticky bit set	WITHOUT_CLASSIFICATION	0.9999461400662394	WITHOUT_CLASSIFICATION	5.385993376051681E-5	IMPLEMENTATION
// ?M  | Time    | Last modification time for file1	WITHOUT_CLASSIFICATION	0.9999160032404829	WITHOUT_CLASSIFICATION	8.399675951715694E-5	IMPLEMENTATION
// ?o  | boolean | True if file1 exists and is owned by the caller's effective uid	WITHOUT_CLASSIFICATION	0.9999712463449849	WITHOUT_CLASSIFICATION	2.875365501513283E-5	IMPLEMENTATION
// ?O  | boolean | True if file1 exists and is owned by the caller's real uid 	WITHOUT_CLASSIFICATION	0.999970703582759	WITHOUT_CLASSIFICATION	2.929641724099281E-5	IMPLEMENTATION
// ?p  | boolean | True if file1 exists and is a fifo	WITHOUT_CLASSIFICATION	0.9999318298015428	WITHOUT_CLASSIFICATION	6.817019845724623E-5	IMPLEMENTATION
// ?r  | boolean | True if file1 is readable by the effective uid/gid of the caller	WITHOUT_CLASSIFICATION	0.9999654227154036	WITHOUT_CLASSIFICATION	3.457728459635743E-5	IMPLEMENTATION
// ?s  | int/nil | If file1 has nonzero size, return the size, otherwise nil	WITHOUT_CLASSIFICATION	0.9999037019061193	WITHOUT_CLASSIFICATION	9.629809388068943E-5	IMPLEMENTATION
// ?S  | boolean | True if file1 exists and is a socket	WITHOUT_CLASSIFICATION	0.9999322007896116	WITHOUT_CLASSIFICATION	6.779921038829643E-5	IMPLEMENTATION
// ?u  | boolean | True if file1 has the setuid bit set	WITHOUT_CLASSIFICATION	0.9999262268985767	WITHOUT_CLASSIFICATION	7.3773101423397E-5	IMPLEMENTATION
// ?x  | boolean | True if file1 exists and is executable by the effective uid/gid	WITHOUT_CLASSIFICATION	0.9999564683967272	WITHOUT_CLASSIFICATION	4.3531603272771236E-5	IMPLEMENTATION
// ?X  | boolean | True if file1 exists and is executable by the real uid/gid	WITHOUT_CLASSIFICATION	0.9999568203729	WITHOUT_CLASSIFICATION	4.3179627099954167E-5	IMPLEMENTATION
// ?z  | boolean | True if file1 exists and has a zero length	WITHOUT_CLASSIFICATION	0.9999398703058743	WITHOUT_CLASSIFICATION	6.012969412575078E-5	IMPLEMENTATION
// ?=  | boolean | True if the modification times of file1 and file2 are equal	WITHOUT_CLASSIFICATION	0.9999780383764223	WITHOUT_CLASSIFICATION	2.1961623577751774E-5	IMPLEMENTATION
// ?<  | boolean | True if the modification time of file1 is prior to that of file2	WITHOUT_CLASSIFICATION	0.9999771479463962	WITHOUT_CLASSIFICATION	2.2852053603763773E-5	IMPLEMENTATION
// ?>  | boolean | True if the modification time of file1 is after that of file2	WITHOUT_CLASSIFICATION	0.9999793365790467	WITHOUT_CLASSIFICATION	2.0663420953394777E-5	IMPLEMENTATION
// ?-  | boolean | True if file1 and file2 are identical	WITHOUT_CLASSIFICATION	0.9999206352613198	WITHOUT_CLASSIFICATION	7.936473868022007E-5	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999012431692899	WITHOUT_CLASSIFICATION	9.875683071007506E-5	IMPLEMENTATION
// Error info is per-thread	WITHOUT_CLASSIFICATION	0.9999465654091833	WITHOUT_CLASSIFICATION	5.3434590816794336E-5	IMPLEMENTATION
// init errorInfo to nil	WITHOUT_CLASSIFICATION	0.9998991808583296	WITHOUT_CLASSIFICATION	1.0081914167040895E-4	IMPLEMENTATION
// if we're already aborting, we can receive no further mail	WITHOUT_CLASSIFICATION	0.9999365151773713	WITHOUT_CLASSIFICATION	6.348482262872872E-5	IMPLEMENTATION
// If this thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9998847603588321	WITHOUT_CLASSIFICATION	1.1523964116787434E-4	IMPLEMENTATION
// new interrupt, to hopefully wake it out of any blocking IO	WITHOUT_CLASSIFICATION	0.9999052621882077	WITHOUT_CLASSIFICATION	9.473781179227046E-5	IMPLEMENTATION
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999792964787905	WITHOUT_CLASSIFICATION	2.0703521209613217E-5	IMPLEMENTATION
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999792964787905	WITHOUT_CLASSIFICATION	2.0703521209613217E-5	IMPLEMENTATION
// JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999535947104276	WITHOUT_CLASSIFICATION	4.640528957241705E-5	IMPLEMENTATION
// JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999574361213538	WITHOUT_CLASSIFICATION	4.256387864607691E-5	IMPLEMENTATION
// for Thread::start, which does not call the subclass's initialize	WITHOUT_CLASSIFICATION	0.9999860414040587	WITHOUT_CLASSIFICATION	1.395859594136397E-5	IMPLEMENTATION
// JRUBY-3568, inherit threadgroup or use default	WITHOUT_CLASSIFICATION	0.9999317993974186	WITHOUT_CLASSIFICATION	6.820060258143691E-5	IMPLEMENTATION
// MRI behavior: value given in seconds; converted to Float; less // than or equal to zero returns immediately; returns nil	WITHOUT_CLASSIFICATION	0.9999767263891112	WITHOUT_CLASSIFICATION	2.327361088874308E-5	IMPLEMENTATION
// If the target thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999553701633588	WITHOUT_CLASSIFICATION	4.462983664114316E-5	IMPLEMENTATION
// We need this loop in order to be able to "unblock" the // join call without actually calling interrupt.	WITHOUT_CLASSIFICATION	0.9999003234869335	WITHOUT_CLASSIFICATION	9.967651306654231E-5	IMPLEMENTATION
// attempt to decriticalize all if we're the critical thread	WITHOUT_CLASSIFICATION	0.9999528971659515	WITHOUT_CLASSIFICATION	4.71028340485754E-5	IMPLEMENTATION
// not valid for "dead" state	WITHOUT_CLASSIFICATION	0.9996234798696435	WITHOUT_CLASSIFICATION	3.765201303564672E-4	IMPLEMENTATION
// If the killee thread is the same as the killer thread, just die	WITHOUT_CLASSIFICATION	0.9999408563428219	WITHOUT_CLASSIFICATION	5.91436571779367E-5	IMPLEMENTATION
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999778630581891	WITHOUT_CLASSIFICATION	2.2136941810815625E-5	IMPLEMENTATION
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999778630581891	WITHOUT_CLASSIFICATION	2.2136941810815625E-5	IMPLEMENTATION
// ignore; I don't like doing it, but it seems like we // really just need to make all channels non-blocking by // default and use select when implementing blocking ops, // so if this remains set non-blocking, perhaps it's not // such a big deal...	WITHOUT_CLASSIFICATION	0.9999734114622589	WITHOUT_CLASSIFICATION	2.6588537741103453E-5	IMPLEMENTATION
// can't select, just have to do a blocking call	WITHOUT_CLASSIFICATION	0.9999418110555788	WITHOUT_CLASSIFICATION	5.8188944421231356E-5	IMPLEMENTATION
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9999102975394417	WITHOUT_CLASSIFICATION	8.970246055830965E-5	IMPLEMENTATION
// Create Constants class	WITHOUT_CLASSIFICATION	0.9999564717085063	WITHOUT_CLASSIFICATION	4.352829149358728E-5	IMPLEMENTATION
// Create constants for open flags	WITHOUT_CLASSIFICATION	0.999961027941384	WITHOUT_CLASSIFICATION	3.897205861603093E-5	IMPLEMENTATION
// Strip off the O_ prefix, so they become File::RDONLY, and so on	WITHOUT_CLASSIFICATION	0.9999166002087017	WITHOUT_CLASSIFICATION	8.339979129829828E-5	IMPLEMENTATION
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999534781355975	WITHOUT_CLASSIFICATION	4.6521864402553026E-5	IMPLEMENTATION
// File::Constants module is included in IO.	WITHOUT_CLASSIFICATION	0.9999004569780267	WITHOUT_CLASSIFICATION	9.954302197341304E-5	IMPLEMENTATION
// Make sure any existing lock is released before we try and close the file	WITHOUT_CLASSIFICATION	0.9999813687942055	WITHOUT_CLASSIFICATION	1.863120579444204E-5	IMPLEMENTATION
// null channel always succeeds for all locking operations	WITHOUT_CLASSIFICATION	0.9999450524281015	WITHOUT_CLASSIFICATION	5.49475718984777E-5	IMPLEMENTATION
// Paths which end in "/" or "\\" must be stripped off.	WITHOUT_CLASSIFICATION	0.9998864959722462	WITHOUT_CLASSIFICATION	1.135040277537102E-4	IMPLEMENTATION
// Special case for handling ACCMODE, since constantine will generate // an invalid value if it is not defined by the platform.	WITHOUT_CLASSIFICATION	0.9999924955784641	WITHOUT_CLASSIFICATION	7.504421535835922E-6	IMPLEMENTATION
// Return false here	WITHOUT_CLASSIFICATION	0.9998512787506972	WITHOUT_CLASSIFICATION	1.4872124930287423E-4	IMPLEMENTATION
// Return false here	WITHOUT_CLASSIFICATION	0.9998512787506972	WITHOUT_CLASSIFICATION	1.4872124930287423E-4	IMPLEMENTATION
// We're not actually a real file, so we can't flock	WITHOUT_CLASSIFICATION	0.9997735953736484	WITHOUT_CLASSIFICATION	2.2640462635173058E-4	IMPLEMENTATION
// Should we do anything?	WITHOUT_CLASSIFICATION	0.9996201998841058	WITHOUT_CLASSIFICATION	3.798001158942535E-4	IMPLEMENTATION
/* File class methods */	WITHOUT_CLASSIFICATION	0.9999037681475784	WITHOUT_CLASSIFICATION	9.623185242167014E-5	IMPLEMENTATION
// MRI-compatible basename handling for windows drive letter paths	WITHOUT_CLASSIFICATION	0.9998643535321503	WITHOUT_CLASSIFICATION	1.3564646784968676E-4	IMPLEMENTATION
// strip c: away from relative-pathed name	WITHOUT_CLASSIFICATION	0.9999011352116196	WITHOUT_CLASSIFICATION	9.886478838043078E-5	IMPLEMENTATION
// C:\ is returned unchanged	WITHOUT_CLASSIFICATION	0.9999307492636669	WITHOUT_CLASSIFICATION	6.925073633318323E-5	IMPLEMENTATION
// -1 no match; 0 it is dot file not extension	WITHOUT_CLASSIFICATION	0.9998960145974569	WITHOUT_CLASSIFICATION	1.0398540254305564E-4	IMPLEMENTATION
// trim trailing slashes	WITHOUT_CLASSIFICATION	0.9998556805823081	WITHOUT_CLASSIFICATION	1.443194176918653E-4	IMPLEMENTATION
// Dot is not at beginning and not at end of filename. 	WITHOUT_CLASSIFICATION	0.9999580130888144	WITHOUT_CLASSIFICATION	4.198691118554893E-5	IMPLEMENTATION
// Handle ~user paths 	WITHOUT_CLASSIFICATION	0.9998673964937301	WITHOUT_CLASSIFICATION	1.326035062698001E-4	IMPLEMENTATION
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9999102975394417	WITHOUT_CLASSIFICATION	8.970246055830965E-5	IMPLEMENTATION
// Include additional path separator // (so that dirname of "C:\file.txt" is  "C:\", not "C:")	WITHOUT_CLASSIFICATION	0.9998744274424157	WITHOUT_CLASSIFICATION	1.2557255758436235E-4	IMPLEMENTATION
// FNFException can be thrown in both cases, when the file // is not found, or when permission is denied.	WITHOUT_CLASSIFICATION	0.9999860378652774	WITHOUT_CLASSIFICATION	1.3962134722599887E-5	IMPLEMENTATION
// No directory delimeter.  Rest of string is username	WITHOUT_CLASSIFICATION	0.9999651026234476	WITHOUT_CLASSIFICATION	3.489737655231167E-5	IMPLEMENTATION
// If there's a second argument, it's the path to which the first  // argument is relative.	WITHOUT_CLASSIFICATION	0.9999810378888677	WITHOUT_CLASSIFICATION	1.8962111132334962E-5	IMPLEMENTATION
// Handle ~user paths.	WITHOUT_CLASSIFICATION	0.9998672441254346	WITHOUT_CLASSIFICATION	1.3275587456540566E-4	IMPLEMENTATION
// If there's no second argument, simply use the working directory  // of the runtime.	WITHOUT_CLASSIFICATION	0.9999826349536982	WITHOUT_CLASSIFICATION	1.736504630180634E-5	IMPLEMENTATION
// Find out which string to check.	WITHOUT_CLASSIFICATION	0.9999525063027008	WITHOUT_CLASSIFICATION	4.7493697299201304E-5	IMPLEMENTATION
// Single '~' as whole path to expand	WITHOUT_CLASSIFICATION	0.9998729792880202	WITHOUT_CLASSIFICATION	1.2702071197989316E-4	IMPLEMENTATION
// Count number of extra slashes in the beginning of the string.	WITHOUT_CLASSIFICATION	0.9999870852300694	WITHOUT_CLASSIFICATION	1.2914769930623761E-5	IMPLEMENTATION
// '~user/...' as path to expand	WITHOUT_CLASSIFICATION	0.999854993076453	WITHOUT_CLASSIFICATION	1.450069235469751E-4	IMPLEMENTATION
// '~/...' as path to expand	WITHOUT_CLASSIFICATION	0.9998440621217014	WITHOUT_CLASSIFICATION	1.5593787829859835E-4	IMPLEMENTATION
// Prepare a string with the same number of redundant slashes so that  // we easily can prepend it to the result.	WITHOUT_CLASSIFICATION	0.9999886559968226	WITHOUT_CLASSIFICATION	1.1344003177411874E-5	IMPLEMENTATION
// If there are N slashes, then we want N-1.	WITHOUT_CLASSIFICATION	0.9999342784078309	WITHOUT_CLASSIFICATION	6.572159216906474E-5	IMPLEMENTATION
// no canonical path yet or length is zero, and we have a / followed by a dot...	WITHOUT_CLASSIFICATION	0.999926522774494	WITHOUT_CLASSIFICATION	7.347722550593005E-5	IMPLEMENTATION
// we don't have another slash after this, so replace /. with /	WITHOUT_CLASSIFICATION	0.9999470341368912	WITHOUT_CLASSIFICATION	5.296586310875773E-5	IMPLEMENTATION
// we do have another slash; omit both / and . (JRUBY-1606)	WITHOUT_CLASSIFICATION	0.9998114755034128	WITHOUT_CLASSIFICATION	1.8852449658723398E-4	IMPLEMENTATION
// do nothing, we should not delete the drive letter	WITHOUT_CLASSIFICATION	0.9999914174433792	WITHOUT_CLASSIFICATION	8.58255662086386E-6	IMPLEMENTATION
/* rb: check_modifiable */	WITHOUT_CLASSIFICATION	0.9998408306283855	WITHOUT_CLASSIFICATION	1.5916937161450595E-4	IMPLEMENTATION
/* rb: readable */	WITHOUT_CLASSIFICATION	0.999786420038102	WITHOUT_CLASSIFICATION	2.1357996189802142E-4	IMPLEMENTATION
// rename is successful	WITHOUT_CLASSIFICATION	0.9999326569774617	WITHOUT_CLASSIFICATION	6.734302253833377E-5	IMPLEMENTATION
// rename via Java API call wasn't successful, let's try some tricks, similar to MRI 	WITHOUT_CLASSIFICATION	0.9999459903969413	WITHOUT_CLASSIFICATION	5.4009603058680925E-5	IMPLEMENTATION
// try to rename one more time	WITHOUT_CLASSIFICATION	0.9999020737900136	WITHOUT_CLASSIFICATION	9.792620998642222E-5	IMPLEMENTATION
// Can we produce IOError which bypasses a close?	WITHOUT_CLASSIFICATION	0.9998598424525008	WITHOUT_CLASSIFICATION	1.4015754749920688E-4	IMPLEMENTATION
// Fast path since JNA stat is about 10x slower than this	WITHOUT_CLASSIFICATION	0.9998787629609112	WITHOUT_CLASSIFICATION	1.212370390888303E-4	IMPLEMENTATION
// RubyContinuation	WITHOUT_CLASSIFICATION	0.9997817362461383	WITHOUT_CLASSIFICATION	2.1826375386179776E-4	IMPLEMENTATION
/*     *  Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq)     *  it doesn't initialize ifNone field     */	WITHOUT_CLASSIFICATION	0.9999968868348114	WITHOUT_CLASSIFICATION	3.1131651886621867E-6	IMPLEMENTATION
// 16 ?	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
// generation count for O(1) clears	WITHOUT_CLASSIFICATION	0.9999651773924615	WITHOUT_CLASSIFICATION	3.4822607538585906E-5	IMPLEMENTATION
// size + 1;	WITHOUT_CLASSIFICATION	0.9998351396780497	WITHOUT_CLASSIFICATION	1.6486032195025884E-4	IMPLEMENTATION
// suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen	WITHOUT_CLASSIFICATION	0.999871566598119	WITHOUT_CLASSIFICATION	1.2843340188103323E-4	IMPLEMENTATION
// ------------------------------	WITHOUT_CLASSIFICATION	0.9999833249680834	WITHOUT_CLASSIFICATION	1.6675031916655048E-5	IMPLEMENTATION
// ------------------------------	WITHOUT_CLASSIFICATION	0.9999833249680834	WITHOUT_CLASSIFICATION	1.6675031916655048E-5	IMPLEMENTATION
// put implementation	WITHOUT_CLASSIFICATION	0.9900506955293917	WITHOUT_CLASSIFICATION	0.00994930447060826	IMPLEMENTATION
// get implementation	WITHOUT_CLASSIFICATION	0.9954186533473542	WITHOUT_CLASSIFICATION	0.00458134665264566	IMPLEMENTATION
// specialized for value	WITHOUT_CLASSIFICATION	0.999928101721284	WITHOUT_CLASSIFICATION	7.189827871594341E-5	IMPLEMENTATION
// delete implementation	WITHOUT_CLASSIFICATION	0.997487671561916	WITHOUT_CLASSIFICATION	0.0025123284380840502	IMPLEMENTATION
// n.b. we need to recompute the hash in case the key object was modified	WITHOUT_CLASSIFICATION	0.9999305677881783	WITHOUT_CLASSIFICATION	6.943221182170991E-5	IMPLEMENTATION
/* ============================     * End of hash internals     * ============================     */	WITHOUT_CLASSIFICATION	0.9999291117922886	WITHOUT_CLASSIFICATION	7.088820771136628E-5	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================     */	WITHOUT_CLASSIFICATION	0.9999264342483588	WITHOUT_CLASSIFICATION	7.356575164121757E-5	IMPLEMENTATION
// update the hash value	WITHOUT_CLASSIFICATION	0.9999776015285391	WITHOUT_CLASSIFICATION	2.2398471460961144E-5	IMPLEMENTATION
// other hash does not contain key	WITHOUT_CLASSIFICATION	0.9998891439490211	WITHOUT_CLASSIFICATION	1.1085605097884834E-4	IMPLEMENTATION
// rb_yield_values(2,...) equivalent	WITHOUT_CLASSIFICATION	0.9997253946865233	WITHOUT_CLASSIFICATION	2.7460531347661113E-4	IMPLEMENTATION
// Satisfy java.util.Set interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999288704877879	WITHOUT_CLASSIFICATION	7.112951221214502E-5	IMPLEMENTATION
// remain where we are	WITHOUT_CLASSIFICATION	0.9998875868962112	WITHOUT_CLASSIFICATION	1.1241310378890569E-4	IMPLEMENTATION
// We use file test since it is faster than a stat; also euid == uid in Java always	WITHOUT_CLASSIFICATION	0.9998997716027347	WITHOUT_CLASSIFICATION	1.0022839726529839E-4	IMPLEMENTATION
// default: don't retain	WITHOUT_CLASSIFICATION	0.999960096821775	WITHOUT_CLASSIFICATION	3.990317822504574E-5	IMPLEMENTATION
// once hasNext has been called, we commit to next() returning // the entry it found, even if it were subsequently deleted	WITHOUT_CLASSIFICATION	0.9999722452816467	WITHOUT_CLASSIFICATION	2.77547183532691E-5	IMPLEMENTATION
// Not exposed by filetest, but so similiar in nature that it is stored here	WITHOUT_CLASSIFICATION	0.9998325244226289	WITHOUT_CLASSIFICATION	1.6747557737103555E-4	IMPLEMENTATION
// We do both writable and writable_real through the same method because // in our java process effective and real userid will always be the same.	WITHOUT_CLASSIFICATION	0.9999718824677958	WITHOUT_CLASSIFICATION	2.8117532204297185E-5	IMPLEMENTATION
// first try as directory	WITHOUT_CLASSIFICATION	0.999950166276648	WITHOUT_CLASSIFICATION	4.983372335186699E-5	IMPLEMENTATION
// next as regular file	WITHOUT_CLASSIFICATION	0.9998177103024519	WITHOUT_CLASSIFICATION	1.8228969754811403E-4	IMPLEMENTATION
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9999501830873001	WITHOUT_CLASSIFICATION	4.9816912699851215E-5	IMPLEMENTATION
// NIO-based	WITHOUT_CLASSIFICATION	0.9997857079152035	WITHOUT_CLASSIFICATION	2.142920847966494E-4	IMPLEMENTATION
// NIO-based	WITHOUT_CLASSIFICATION	0.9997857079152035	WITHOUT_CLASSIFICATION	2.142920847966494E-4	IMPLEMENTATION
// Stream-based	WITHOUT_CLASSIFICATION	0.9998063279946041	WITHOUT_CLASSIFICATION	1.9367200539593724E-4	IMPLEMENTATION
// special constructor that accepts stream, not channel	WITHOUT_CLASSIFICATION	0.9999198487244709	WITHOUT_CLASSIFICATION	8.015127552908155E-5	IMPLEMENTATION
/*     * We use FILE versus IO to match T_FILE in MRI.     */	WITHOUT_CLASSIFICATION	0.9999570044654411	WITHOUT_CLASSIFICATION	4.299553455883915E-5	IMPLEMENTATION
// Constants for seek	WITHOUT_CLASSIFICATION	0.9999033927157182	WITHOUT_CLASSIFICATION	9.660728428180932E-5	IMPLEMENTATION
// confirm we're not reopening self's channel	WITHOUT_CLASSIFICATION	0.9999135981743319	WITHOUT_CLASSIFICATION	8.640182566807295E-5	IMPLEMENTATION
// check if we're a stdio IO, and ensure we're not badly mutilated	WITHOUT_CLASSIFICATION	0.9999616707976247	WITHOUT_CLASSIFICATION	3.832920237540514E-5	IMPLEMENTATION
// dup2 new fd into self to preserve fileno and references to it	WITHOUT_CLASSIFICATION	0.9999453032111038	WITHOUT_CLASSIFICATION	5.469678889615333E-5	IMPLEMENTATION
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999431339918113	WITHOUT_CLASSIFICATION	5.6866008188604614E-5	IMPLEMENTATION
// re-register the descriptor	WITHOUT_CLASSIFICATION	0.9999340127996938	WITHOUT_CLASSIFICATION	6.59872003062107E-5	IMPLEMENTATION
// since we're not actually duping the incoming channel into our handler, we need to // copy the original sync behavior from the other handler	WITHOUT_CLASSIFICATION	0.9999640328197094	WITHOUT_CLASSIFICATION	3.5967180290596244E-5	IMPLEMENTATION
// re-register	WITHOUT_CLASSIFICATION	0.9998344033073276	WITHOUT_CLASSIFICATION	1.6559669267226677E-4	IMPLEMENTATION
// A potentially previously close IO is being 'reopened'.	WITHOUT_CLASSIFICATION	0.9998916767230797	WITHOUT_CLASSIFICATION	1.0832327692040479E-4	IMPLEMENTATION
/*     * Ensure that separator is valid otherwise give it the default paragraph separator.     */	WITHOUT_CLASSIFICATION	0.9999941999950838	WITHOUT_CLASSIFICATION	5.800004916269742E-6	IMPLEMENTATION
// loop until we see the nth separator char	WITHOUT_CLASSIFICATION	0.9999264214635586	WITHOUT_CLASSIFICATION	7.357853644133973E-5	IMPLEMENTATION
// if we hit EOF or reached limit then we're done	WITHOUT_CLASSIFICATION	0.9999093631677685	WITHOUT_CLASSIFICATION	9.063683223158099E-5	IMPLEMENTATION
// this is for a range check, near as I can tell	WITHOUT_CLASSIFICATION	0.9999335412431498	WITHOUT_CLASSIFICATION	6.645875685019042E-5	IMPLEMENTATION
// IO class methods.	WITHOUT_CLASSIFICATION	0.9998620303472663	WITHOUT_CLASSIFICATION	1.3796965273375154E-4	IMPLEMENTATION
// use original modes	WITHOUT_CLASSIFICATION	0.9999107855959019	WITHOUT_CLASSIFICATION	8.921440409810343E-5	IMPLEMENTATION
// See if we already have this descriptor open. // If so then we can mostly share the handler (keep open // file, but possibly change the mode).	WITHOUT_CLASSIFICATION	0.9999752679141639	WITHOUT_CLASSIFICATION	2.4732085836164677E-5	IMPLEMENTATION
// redundant, done above as well	WITHOUT_CLASSIFICATION	0.9998197299534185	WITHOUT_CLASSIFICATION	1.8027004658159972E-4	IMPLEMENTATION
// MRI behavior: swallow StandardErorrs	WITHOUT_CLASSIFICATION	0.9998896356876354	WITHOUT_CLASSIFICATION	1.1036431236458082E-4	IMPLEMENTATION
// -1 == don't set permissions	WITHOUT_CLASSIFICATION	0.9998742923934029	WITHOUT_CLASSIFICATION	1.2570760659704952E-4	IMPLEMENTATION
// isRetained=true	WITHOUT_CLASSIFICATION	0.9997851033136629	WITHOUT_CLASSIFICATION	2.1489668633717466E-4	IMPLEMENTATION
// This appears to be some windows-only mode.  On a java platform this is a no-op	WITHOUT_CLASSIFICATION	0.9999687951498148	WITHOUT_CLASSIFICATION	3.120485018509619E-5	IMPLEMENTATION
// if not sync, we switch to write buffered mode	WITHOUT_CLASSIFICATION	0.9999422912923144	WITHOUT_CLASSIFICATION	5.770870768562243E-5	IMPLEMENTATION
/*     * Throw bad file descriptor is we can not read on supplied descriptor.     */	WITHOUT_CLASSIFICATION	0.9999578660535536	WITHOUT_CLASSIFICATION	4.213394644633946E-5	IMPLEMENTATION
//Everything written	WITHOUT_CLASSIFICATION	0.9998566519547467	WITHOUT_CLASSIFICATION	1.4334804525326482E-4	IMPLEMENTATION
//            return len - n;	WITHOUT_CLASSIFICATION	0.9999816974378232	WITHOUT_CLASSIFICATION	1.8302562176802406E-5	IMPLEMENTATION
// Claims conversion is done via 'to_s' in docs.	WITHOUT_CLASSIFICATION	0.9999288153312456	WITHOUT_CLASSIFICATION	7.118466875452353E-5	IMPLEMENTATION
// Of course this isn't particularly useful.	WITHOUT_CLASSIFICATION	0.9997757882297552	WITHOUT_CLASSIFICATION	2.242117702448467E-4	IMPLEMENTATION
// Must be back on first line on rewind.	WITHOUT_CLASSIFICATION	0.9999086301586917	WITHOUT_CLASSIFICATION	9.136984130840108E-5	IMPLEMENTATION
// Register the new descriptor	WITHOUT_CLASSIFICATION	0.9999455177027309	WITHOUT_CLASSIFICATION	5.448229726924943E-5	IMPLEMENTATION
// cleanup, raising errors if any	WITHOUT_CLASSIFICATION	0.999876505048971	WITHOUT_CLASSIFICATION	1.2349495102911481E-4	IMPLEMENTATION
// hmmmm	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
// I believe Ruby bails out with a "bug" if closing fails	WITHOUT_CLASSIFICATION	0.9998638622232269	WITHOUT_CLASSIFICATION	1.3613777677310318E-4	IMPLEMENTATION
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec. // And why the hell does webrick pass this in as a first argument!!!!!	WITHOUT_CLASSIFICATION	0.999985865756713	WITHOUT_CLASSIFICATION	1.4134243286946912E-5	IMPLEMENTATION
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec.	WITHOUT_CLASSIFICATION	0.999989529619671	WITHOUT_CLASSIFICATION	1.0470380328887536E-5	IMPLEMENTATION
// Length to read	WITHOUT_CLASSIFICATION	0.9998892284517505	WITHOUT_CLASSIFICATION	1.1077154824939327E-4	IMPLEMENTATION
// String/Buffer to read it into	WITHOUT_CLASSIFICATION	0.9999268201100532	WITHOUT_CLASSIFICATION	7.31798899467656E-5	IMPLEMENTATION
// cryptic for the uninitiated...	WITHOUT_CLASSIFICATION	0.9998916091894271	WITHOUT_CLASSIFICATION	1.0839081057286362E-4	IMPLEMENTATION
// select until read is ready	WITHOUT_CLASSIFICATION	0.9999534496411611	WITHOUT_CLASSIFICATION	4.65503588389112E-5	IMPLEMENTATION
//        ByteList buffer = null;	WITHOUT_CLASSIFICATION	0.9999501569916807	WITHOUT_CLASSIFICATION	4.984300831925131E-5	IMPLEMENTATION
//            buffer = str.getByteList();	WITHOUT_CLASSIFICATION	0.9999481344279836	WITHOUT_CLASSIFICATION	5.186557201638689E-5	IMPLEMENTATION
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9998532054973759	WITHOUT_CLASSIFICATION	1.4679450262406802E-4	IMPLEMENTATION
/* rb: writable */	WITHOUT_CLASSIFICATION	0.9998066025281876	WITHOUT_CLASSIFICATION	1.933974718122388E-4	IMPLEMENTATION
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9998532054973759	WITHOUT_CLASSIFICATION	1.4679450262406802E-4	IMPLEMENTATION
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999748228643822	WITHOUT_CLASSIFICATION	2.5177135617804733E-5	IMPLEMENTATION
// TODO: read into buffer using all the fread logic //        int read = openFile.getMainStream().fread(buffer);	WITHOUT_CLASSIFICATION	0.9653004807021482	WITHOUT_CLASSIFICATION	0.034699519297851714	IMPLEMENTATION
// truncate buffer string to zero, if provided	WITHOUT_CLASSIFICATION	0.9999457540435658	WITHOUT_CLASSIFICATION	5.4245956434180654E-5	IMPLEMENTATION
// TODO: READ_CHECK from MRI	WITHOUT_CLASSIFICATION	0.7049152449509973	WITHOUT_CLASSIFICATION	0.2950847550490026	IMPLEMENTATION
/* class methods for IO */	WITHOUT_CLASSIFICATION	0.9999078987422212	WITHOUT_CLASSIFICATION	9.210125777888171E-5	IMPLEMENTATION
// save blocking state	WITHOUT_CLASSIFICATION	0.9999119700627368	WITHOUT_CLASSIFICATION	8.802993726310584E-5	IMPLEMENTATION
// write	WITHOUT_CLASSIFICATION	0.9957101575699424	WITHOUT_CLASSIFICATION	0.004289842430057577	IMPLEMENTATION
// Java's select doesn't do anything about this, so we leave it be.	WITHOUT_CLASSIFICATION	0.9999785397593789	WITHOUT_CLASSIFICATION	2.1460240621042525E-5	IMPLEMENTATION
// make all sockets blocking as configured again // close unregisters all channels, so we can safely reset blocking modes	WITHOUT_CLASSIFICATION	0.9999610414193117	WITHOUT_CLASSIFICATION	3.895858068834637E-5	IMPLEMENTATION
// FIXME: process options	WITHOUT_CLASSIFICATION	0.9998640630344133	WITHOUT_CLASSIFICATION	1.3593696558660996E-4	IMPLEMENTATION
// Enebo: annotation processing forced me to do pangea method here...	WITHOUT_CLASSIFICATION	0.9998919482906505	WITHOUT_CLASSIFICATION	1.0805170934947937E-4	IMPLEMENTATION
// NIO based pipe	WITHOUT_CLASSIFICATION	0.9997884273002487	WITHOUT_CLASSIFICATION	2.1157269975121445E-4	IMPLEMENTATION
// not using remove(Object) here to avoid the equals() call	WITHOUT_CLASSIFICATION	0.9996973768497802	WITHOUT_CLASSIFICATION	3.0262315021979485E-4	IMPLEMENTATION
// raise will also wake the thread from selection	WITHOUT_CLASSIFICATION	0.9999572178223528	WITHOUT_CLASSIFICATION	4.278217764718057E-5	IMPLEMENTATION
/* may need to handle ENC_CODERANGE_BROKEN */	WITHOUT_CLASSIFICATION	0.999656875741542	WITHOUT_CLASSIFICATION	3.4312425845790237E-4	IMPLEMENTATION
// TODO: rb_usascii_str_new2	WITHOUT_CLASSIFICATION	0.8854729112643663	WITHOUT_CLASSIFICATION	0.11452708873563372	IMPLEMENTATION
// If we know what method was being called, strip everything // before the call. This hides the JRuby and reflection internals.	WITHOUT_CLASSIFICATION	0.9999520130021343	WITHOUT_CLASSIFICATION	4.798699786563772E-5	IMPLEMENTATION
// The class of this object	WITHOUT_CLASSIFICATION	0.9999694275917501	WITHOUT_CLASSIFICATION	3.0572408249915296E-5	IMPLEMENTATION
// zeroed by jvm	WITHOUT_CLASSIFICATION	0.9997878329775001	WITHOUT_CLASSIFICATION	2.1216702249992342E-4	IMPLEMENTATION
//objectClass.defineAnnotatedMethods(BasicObjectMethods.class);	WITHOUT_CLASSIFICATION	0.9998811307001004	WITHOUT_CLASSIFICATION	1.1886929989955017E-4	IMPLEMENTATION
// JRUBY-4113: callers should not call setTaint on immediate objects	WITHOUT_CLASSIFICATION	0.9999187466582746	WITHOUT_CLASSIFICATION	8.125334172539527E-5	IMPLEMENTATION
// rb_class_boot	WITHOUT_CLASSIFICATION	0.999780063088953	WITHOUT_CLASSIFICATION	2.1993691104701566E-4	IMPLEMENTATION
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9998269084618239	WITHOUT_CLASSIFICATION	1.7309153817620973E-4	IMPLEMENTATION
// 1.9 rb_check_to_integer	WITHOUT_CLASSIFICATION	0.9998290330946064	WITHOUT_CLASSIFICATION	1.7096690539374185E-4	IMPLEMENTATION
// for interface impls	WITHOUT_CLASSIFICATION	0.9999635007790592	WITHOUT_CLASSIFICATION	3.6499220940895906E-5	IMPLEMENTATION
// We're cloning ourselves, so we know the result should be a RubyObject	WITHOUT_CLASSIFICATION	0.9998940473349385	WITHOUT_CLASSIFICATION	1.059526650615162E-4	IMPLEMENTATION
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999570645352163	WITHOUT_CLASSIFICATION	4.2935464783703964E-5	IMPLEMENTATION
// can't use -v and stdin	WITHOUT_CLASSIFICATION	0.9998944412236793	WITHOUT_CLASSIFICATION	1.0555877632069163E-4	IMPLEMENTATION
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9998825051178867	WITHOUT_CLASSIFICATION	1.1749488211324075E-4	IMPLEMENTATION
// Equivalent of Data_Get_Struct // This will first check that the object in question is actually a T_DATA equivalent.	WITHOUT_CLASSIFICATION	0.9999486867894621	WITHOUT_CLASSIFICATION	5.131321053780117E-5	IMPLEMENTATION
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9998549081500062	WITHOUT_CLASSIFICATION	1.4509184999378022E-4	IMPLEMENTATION
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9998538695866673	WITHOUT_CLASSIFICATION	1.4613041333265948E-4	IMPLEMENTATION
// // INSTANCE VARIABLE API METHODS //	WITHOUT_CLASSIFICATION	0.999853671703225	WITHOUT_CLASSIFICATION	1.4632829677489983E-4	IMPLEMENTATION
// Struct methods	WITHOUT_CLASSIFICATION	0.9998332284139837	WITHOUT_CLASSIFICATION	1.667715860163591E-4	IMPLEMENTATION
//runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);	WITHOUT_CLASSIFICATION	0.9998887732386841	WITHOUT_CLASSIFICATION	1.1122676131593756E-4	IMPLEMENTATION
// define access methods.	WITHOUT_CLASSIFICATION	0.9998931899177604	WITHOUT_CLASSIFICATION	1.0681008223958891E-4	IMPLEMENTATION
// if we are storing a name as well, index is one too high for values	WITHOUT_CLASSIFICATION	0.9999374575517096	WITHOUT_CLASSIFICATION	6.254244829032028E-5	IMPLEMENTATION
// Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999613561293978	WITHOUT_CLASSIFICATION	3.8643870602052034E-5	IMPLEMENTATION
// For binding purposes on the newly created struct types	WITHOUT_CLASSIFICATION	0.9999320792038833	WITHOUT_CLASSIFICATION	6.792079611680578E-5	IMPLEMENTATION
// OBJ_INFECT        	WITHOUT_CLASSIFICATION	0.9998626593736191	WITHOUT_CLASSIFICATION	1.3734062638085312E-4	IMPLEMENTATION
// These call* assume ThreadContext = receiver.getRuntime().getCurrentContext()	WITHOUT_CLASSIFICATION	0.9999001149706473	WITHOUT_CLASSIFICATION	9.988502935262936E-5	IMPLEMENTATION
// Execute iterateMethod again.	WITHOUT_CLASSIFICATION	0.9998948043105101	WITHOUT_CLASSIFICATION	1.0519568948994226E-4	IMPLEMENTATION
/*     * @param nv number of times to cycle or -1 to cycle indefinitely     */	WITHOUT_CLASSIFICATION	0.9999679543272461	WITHOUT_CLASSIFICATION	3.2045672753928496E-5	IMPLEMENTATION
// Atomic ?	WITHOUT_CLASSIFICATION	0.999779971725086	WITHOUT_CLASSIFICATION	2.2002827491392825E-4	IMPLEMENTATION
// Atomic ?	WITHOUT_CLASSIFICATION	0.999779971725086	WITHOUT_CLASSIFICATION	2.2002827491392825E-4	IMPLEMENTATION
// MUST NOT be used across threads	WITHOUT_CLASSIFICATION	0.9998434232913237	WITHOUT_CLASSIFICATION	1.5657670867625907E-4	IMPLEMENTATION
// superClass may be null.	WITHOUT_CLASSIFICATION	0.9998658488488952	WITHOUT_CLASSIFICATION	1.3415115110474484E-4	IMPLEMENTATION
// Containing class...The parent of Object is null. Object should always be last in chain.	WITHOUT_CLASSIFICATION	0.9999280822410787	WITHOUT_CLASSIFICATION	7.191775892142777E-5	IMPLEMENTATION
// ClassId is the name of the class/module sans where it is located. // If it is null, then it an anonymous class.	WITHOUT_CLASSIFICATION	0.9999910618025849	WITHOUT_CLASSIFICATION	8.938197415150718E-6	IMPLEMENTATION
// ClassProviders return Java class/module (in #defineOrGetClassUnder and // #defineOrGetModuleUnder) when class/module is opened using colon syntax. 	WITHOUT_CLASSIFICATION	0.99997481684976	WITHOUT_CLASSIFICATION	2.518315024001139E-5	IMPLEMENTATION
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999780037231712	WITHOUT_CLASSIFICATION	2.1996276828797042E-5	IMPLEMENTATION
// Make sure the module we include does not already exist	WITHOUT_CLASSIFICATION	0.9999858638025726	WITHOUT_CLASSIFICATION	1.4136197427306565E-5	IMPLEMENTATION
// MRI checks all types first:	WITHOUT_CLASSIFICATION	0.9998513762204698	WITHOUT_CLASSIFICATION	1.4862377953021465E-4	IMPLEMENTATION
// we need full traces, use default (slow) populator	WITHOUT_CLASSIFICATION	0.9999516211571514	WITHOUT_CLASSIFICATION	4.837884284865277E-5	IMPLEMENTATION
// module/singleton methods are all defined public	WITHOUT_CLASSIFICATION	0.9999311573082129	WITHOUT_CLASSIFICATION	6.88426917870798E-5	IMPLEMENTATION
// See if module is in chain...Cannot match against itself so start at superClass.	WITHOUT_CLASSIFICATION	0.9999276605406794	WITHOUT_CLASSIFICATION	7.233945932058635E-5	IMPLEMENTATION
// We can safely reference methods here instead of doing getMethods() since if we // are adding we are not using a IncludedModuleWrapper.	WITHOUT_CLASSIFICATION	0.9999791105603006	WITHOUT_CLASSIFICATION	2.0889439699415152E-5	IMPLEMENTATION
// we grab serial number first; the worst that will happen is we cache a later // update with an earlier serial number, which would just flush anyway	WITHOUT_CLASSIFICATION	0.9999758535424486	WITHOUT_CLASSIFICATION	2.4146457551417824E-5	IMPLEMENTATION
// update all hierarchies into which this module has been included	WITHOUT_CLASSIFICATION	0.9999699035558524	WITHOUT_CLASSIFICATION	3.0096444147617974E-5	IMPLEMENTATION
// This method is intended only for defining new classes in Ruby code, // so it uses the allocator of the specified superclass or default to // the Object allocator. It should NOT be used to define classes that require a native allocator.	WITHOUT_CLASSIFICATION	0.9999930489265577	WITHOUT_CLASSIFICATION	6.951073442324524E-6	IMPLEMENTATION
// need to skip IncludedModuleWrappers	WITHOUT_CLASSIFICATION	0.9998180270573116	WITHOUT_CLASSIFICATION	1.8197294268834408E-4	IMPLEMENTATION
// superClazz = null;	WITHOUT_CLASSIFICATION	0.9998624880623754	WITHOUT_CLASSIFICATION	1.3751193762464808E-4	IMPLEMENTATION
// reopen a java class	WITHOUT_CLASSIFICATION	0.999899480025286	WITHOUT_CLASSIFICATION	1.0051997471411562E-4	IMPLEMENTATION
// This method is intended only for defining new modules in Ruby code	WITHOUT_CLASSIFICATION	0.9998637970417206	WITHOUT_CLASSIFICATION	1.3620295827937223E-4	IMPLEMENTATION
// reopen a java module	WITHOUT_CLASSIFICATION	0.9998575474498697	WITHOUT_CLASSIFICATION	1.424525501303043E-4	IMPLEMENTATION
//FIXME warning	WITHOUT_CLASSIFICATION	0.9997804008474466	WITHOUT_CLASSIFICATION	2.1959915255339853E-4	IMPLEMENTATION
// FIXME warning	WITHOUT_CLASSIFICATION	0.9996600960288197	WITHOUT_CLASSIFICATION	3.399039711802909E-4	IMPLEMENTATION
// a normal block passed to define_method changes to do arity checking; make it a lambda	WITHOUT_CLASSIFICATION	0.9998781070216135	WITHOUT_CLASSIFICATION	1.2189297838642398E-4	IMPLEMENTATION
// for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope	WITHOUT_CLASSIFICATION	0.9999276499156866	WITHOUT_CLASSIFICATION	7.235008431344575E-5	IMPLEMENTATION
// just using required is broken...but no more broken than before zsuper refactoring	WITHOUT_CLASSIFICATION	0.999919383583948	WITHOUT_CLASSIFICATION	8.061641605195324E-5	IMPLEMENTATION
// class and module bodies default to public, so make the block's visibility public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999831621361287	WITHOUT_CLASSIFICATION	1.683786387123987E-5	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999909327841645	WITHOUT_CLASSIFICATION	9.067215835421203E-6	IMPLEMENTATION
// MRI error message says Class, even though Module is ok 	WITHOUT_CLASSIFICATION	0.9999487414215564	WITHOUT_CLASSIFICATION	5.1258578443509816E-5	IMPLEMENTATION
// scan class hierarchy for module	WITHOUT_CLASSIFICATION	0.999932700174025	WITHOUT_CLASSIFICATION	6.729982597499018E-5	IMPLEMENTATION
/* Module class methods */	WITHOUT_CLASSIFICATION	0.9999003649667104	WITHOUT_CLASSIFICATION	9.963503328953403E-5	IMPLEMENTATION
// Note: we change current frames visibility here because the methods which call // this method are all "fast" (e.g. they do not created their own frame).	WITHOUT_CLASSIFICATION	0.9999787434298182	WITHOUT_CLASSIFICATION	2.125657018179592E-5	IMPLEMENTATION
// next in hierarchy is an included version of the module we're attempting, // so we skip including it	WITHOUT_CLASSIFICATION	0.999984478171864	WITHOUT_CLASSIFICATION	1.5521828135933512E-5	IMPLEMENTATION
// if we haven't encountered a real superclass, use the found module as the new inclusion point	WITHOUT_CLASSIFICATION	0.9999730222972876	WITHOUT_CLASSIFICATION	2.6977702712447428E-5	IMPLEMENTATION
// build a list of all modules to consider for inclusion	WITHOUT_CLASSIFICATION	0.9998968262845589	WITHOUT_CLASSIFICATION	1.0317371544112816E-4	IMPLEMENTATION
// if the insertion point is a class, update subclass lists	WITHOUT_CLASSIFICATION	0.9999892815631585	WITHOUT_CLASSIFICATION	1.0718436841441873E-5	IMPLEMENTATION
// if there's a non-null superclass, we're including into a normal class hierarchy; // update subclass relationships to avoid stale parent/child relationships	WITHOUT_CLASSIFICATION	0.9999965654130135	WITHOUT_CLASSIFICATION	3.4345869865213057E-6	IMPLEMENTATION
// ////////////////// CLASS VARIABLE RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999941716947116	WITHOUT_CLASSIFICATION	5.8283052884335135E-6	IMPLEMENTATION
// ////////////////// CONSTANT RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999940279768162	WITHOUT_CLASSIFICATION	5.972023183787332E-6	IMPLEMENTATION
// Note: includes part of fix for JRUBY-1339	WITHOUT_CLASSIFICATION	0.9998487082787128	WITHOUT_CLASSIFICATION	1.512917212871424E-4	IMPLEMENTATION
// ////////////////// CLASS VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999941716947116	WITHOUT_CLASSIFICATION	5.8283052884335135E-6	IMPLEMENTATION
// Wrong Parameter ?	WITHOUT_CLASSIFICATION	0.9998453658344943	WITHOUT_CLASSIFICATION	1.5463416550563379E-4	IMPLEMENTATION
// not actually called anywhere (all known uses call the fast version)	WITHOUT_CLASSIFICATION	0.9997365339544726	WITHOUT_CLASSIFICATION	2.6346604552748094E-4	IMPLEMENTATION
// Not that is loaded loop around to resolve it next pass	WITHOUT_CLASSIFICATION	0.9997612665204701	WITHOUT_CLASSIFICATION	2.3873347952987575E-4	IMPLEMENTATION
// if adding a module under a constant name, set that module's basename to the constant name	WITHOUT_CLASSIFICATION	0.9999460702610854	WITHOUT_CLASSIFICATION	5.39297389145883E-5	IMPLEMENTATION
// Fix for JRUBY-1339 - search hierarchy for constant	WITHOUT_CLASSIFICATION	0.9999268340526459	WITHOUT_CLASSIFICATION	7.316594735410508E-5	IMPLEMENTATION
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999901150943715	WITHOUT_CLASSIFICATION	9.884905628450177E-6	IMPLEMENTATION
// removes and returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999837043951345	WITHOUT_CLASSIFICATION	1.6295604865523227E-5	IMPLEMENTATION
// we can't rename a file while it's open in windows	WITHOUT_CLASSIFICATION	0.9999048910638721	WITHOUT_CLASSIFICATION	9.510893612786456E-5	IMPLEMENTATION
//reopen	WITHOUT_CLASSIFICATION	0.9954333874358642	WITHOUT_CLASSIFICATION	0.004566612564135844	IMPLEMENTATION
// ARGF methods	WITHOUT_CLASSIFICATION	0.9998144618404564	WITHOUT_CLASSIFICATION	1.8553815954368074E-4	IMPLEMENTATION
//         data.currentFile.callMethod(context, "lineno=", line);	WITHOUT_CLASSIFICATION	0.999955555792386	WITHOUT_CLASSIFICATION	4.4444207614057175E-5	IMPLEMENTATION
// one optional, one required args	WITHOUT_CLASSIFICATION	0.9998847582948752	WITHOUT_CLASSIFICATION	1.1524170512471883E-4	IMPLEMENTATION
// one optional and no required args	WITHOUT_CLASSIFICATION	0.999893395472734	WITHOUT_CLASSIFICATION	1.0660452726584307E-4	IMPLEMENTATION
// try to get errno value out of the class	WITHOUT_CLASSIFICATION	0.9999769320773698	WITHOUT_CLASSIFICATION	2.3067922630188393E-5	IMPLEMENTATION
// we got a valid errno value	WITHOUT_CLASSIFICATION	0.9999180550114544	WITHOUT_CLASSIFICATION	8.194498854559416E-5	IMPLEMENTATION
// Ensure we're not running on GCJ, since it's not supported and leads to weird errors	WITHOUT_CLASSIFICATION	0.99995805023781	WITHOUT_CLASSIFICATION	4.194976218999154E-5	IMPLEMENTATION
// print out as a nice Ruby backtrace	WITHOUT_CLASSIFICATION	0.9998814911747801	WITHOUT_CLASSIFICATION	1.1850882522000161E-4	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9998853991797718	WITHOUT_CLASSIFICATION	1.1460082022819067E-4	IMPLEMENTATION
// set thread context JRuby classloader here, for the main thread	WITHOUT_CLASSIFICATION	0.9999583629066158	WITHOUT_CLASSIFICATION	4.163709338413706E-5	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999174557199108	WITHOUT_CLASSIFICATION	8.254428008925833E-5	IMPLEMENTATION
// no script to run, return success below	WITHOUT_CLASSIFICATION	0.999963505538628	WITHOUT_CLASSIFICATION	3.649446137212915E-5	IMPLEMENTATION
// Skip /usr/bin/env if it's first	WITHOUT_CLASSIFICATION	0.9998741437468506	WITHOUT_CLASSIFICATION	1.2585625314935224E-4	IMPLEMENTATION
// Skip any assignments if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9998793797326587	WITHOUT_CLASSIFICATION	1.2062026734128352E-4	IMPLEMENTATION
// Skip any commandline args if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999062730542972	WITHOUT_CLASSIFICATION	9.372694570272425E-5	IMPLEMENTATION
// ignore error	WITHOUT_CLASSIFICATION	0.999980608114814	WITHOUT_CLASSIFICATION	1.9391885185995224E-5	IMPLEMENTATION
// ////////////////// COMMON CONSTANT / CVAR METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999940430499304	WITHOUT_CLASSIFICATION	5.956950069607631E-6	IMPLEMENTATION
// ////////////////// INTERNAL MODULE VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999939919474296	WITHOUT_CLASSIFICATION	6.008052570415395E-6	IMPLEMENTATION
// ////////////////// LOW-LEVEL CONSTANT INTERFACE //////////////// // // fetch/store/list constants for this module //	WITHOUT_CLASSIFICATION	0.9999984106201099	WITHOUT_CLASSIFICATION	1.5893798902389724E-6	IMPLEMENTATION
// odd	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
// JRubyClient	WITHOUT_CLASSIFICATION	0.9997802875839313	WITHOUT_CLASSIFICATION	2.1971241606868046E-4	IMPLEMENTATION
/*     * x = mantissa * 2 ** exponent     *     * Where mantissa is in the range of [.5, 1)     *     */	WITHOUT_CLASSIFICATION	0.9999522447166926	WITHOUT_CLASSIFICATION	4.775528330737792E-5	IMPLEMENTATION
// Make mantissa same sign so we only have one code path.	WITHOUT_CLASSIFICATION	0.9999173127344984	WITHOUT_CLASSIFICATION	8.268726550166758E-5	IMPLEMENTATION
// Increase value to hit lower range.	WITHOUT_CLASSIFICATION	0.9999060826097833	WITHOUT_CLASSIFICATION	9.391739021666711E-5	IMPLEMENTATION
/*     * r = x * 2 ** y     */	WITHOUT_CLASSIFICATION	0.9999510179934054	WITHOUT_CLASSIFICATION	4.8982006594549925E-5	IMPLEMENTATION
/*  0! */	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
/*  1! */	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
/*  2! */	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
/*  3! */	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
/*  4! */	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
/*  5! */	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
/*  6! */	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
/*  7! */	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
/*  8! */	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
/*  9! */	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
/* 11! */	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
/* 12! */	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
/* 13! */	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
/* 15! */	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
/* 16! */	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
/* 17! */	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
/* 19! */	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
/* 20! */	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
/* 21! */	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
// Static constants	WITHOUT_CLASSIFICATION	0.9998944132733257	WITHOUT_CLASSIFICATION	1.0558672667428717E-4	IMPLEMENTATION
// Clean-up string representation so that it could be understood // by Java's BigDecimal. Not terribly efficient for now. // 1. MRI allows d and D as exponent separators	WITHOUT_CLASSIFICATION	0.9997475839807	WITHOUT_CLASSIFICATION	2.524160193000545E-4	IMPLEMENTATION
// 2. MRI allows underscores anywhere	WITHOUT_CLASSIFICATION	0.99985568962173	WITHOUT_CLASSIFICATION	1.4431037827006182E-4	IMPLEMENTATION
// 3. MRI ignores the trailing junk	WITHOUT_CLASSIFICATION	0.9999404480144158	WITHOUT_CLASSIFICATION	5.955198558407151E-5	IMPLEMENTATION
// MRI behavior: -0 and +0 are two different things	WITHOUT_CLASSIFICATION	0.9998603485242061	WITHOUT_CLASSIFICATION	1.3965147579391026E-4	IMPLEMENTATION
// Java and MRI definitions of modulo are different.	WITHOUT_CLASSIFICATION	0.9998453671405771	WITHOUT_CLASSIFICATION	1.5463285942284388E-4	IMPLEMENTATION
// Java and MRI definitions of remainder are the same.	WITHOUT_CLASSIFICATION	0.9998967564500029	WITHOUT_CLASSIFICATION	1.0324354999706537E-4	IMPLEMENTATION
// Note: MRI has a very non-trivial way of calculating the precision, // so we use very simple approximation here:	WITHOUT_CLASSIFICATION	0.9999177657905948	WITHOUT_CLASSIFICATION	8.223420940527677E-5	IMPLEMENTATION
// Iteration variables, for the square root x and the reciprocal v // initial x:  x0 ~ sqrt() // initial v:  v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999791225112465	WITHOUT_CLASSIFICATION	2.0877488753388605E-5	IMPLEMENTATION
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9998761643116052	WITHOUT_CLASSIFICATION	1.2383568839483024E-4	IMPLEMENTATION
// TODO: why this: .setResult();	WITHOUT_CLASSIFICATION	0.9061084138425631	WITHOUT_CLASSIFICATION	0.0938915861574369	IMPLEMENTATION
// integer division	WITHOUT_CLASSIFICATION	0.9998271865372225	WITHOUT_CLASSIFICATION	1.728134627774745E-4	IMPLEMENTATION
// MRI behavior: "If digits is 0, the result is the same as the / operator."	WITHOUT_CLASSIFICATION	0.9999490170699683	WITHOUT_CLASSIFICATION	5.0982930031622686E-5	IMPLEMENTATION
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9998416951975807	WITHOUT_CLASSIFICATION	1.5830480241927134E-4	IMPLEMENTATION
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9998416951975807	WITHOUT_CLASSIFICATION	1.5830480241927134E-4	IMPLEMENTATION
// Java and MRI definitions of divmod are different.        	WITHOUT_CLASSIFICATION	0.9998946231235636	WITHOUT_CLASSIFICATION	1.0537687643630975E-4	IMPLEMENTATION
// JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it	WITHOUT_CLASSIFICATION	0.9999492271188086	WITHOUT_CLASSIFICATION	5.07728811913645E-5	IMPLEMENTATION
// shift the decimal point just to the right of the digit to be rounded to (divide by 10**(abs(scale))) // -1 -> 10's digit, -2 -> 100's digit, etc.	WITHOUT_CLASSIFICATION	0.9999725746670943	WITHOUT_CLASSIFICATION	2.742533290564577E-5	IMPLEMENTATION
// ...round to that digit	WITHOUT_CLASSIFICATION	0.9998920616407585	WITHOUT_CLASSIFICATION	1.079383592414755E-4	IMPLEMENTATION
// ...and shift the result back to the left (multiply by 10**(abs(scale)))	WITHOUT_CLASSIFICATION	0.9999677797480612	WITHOUT_CLASSIFICATION	3.222025193887972E-5	IMPLEMENTATION
//this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are	WITHOUT_CLASSIFICATION	0.9999369307579097	WITHOUT_CLASSIFICATION	6.306924209034408E-5	IMPLEMENTATION
// sign	WITHOUT_CLASSIFICATION	0.9954799189450336	WITHOUT_CLASSIFICATION	0.004520081054966345	IMPLEMENTATION
// significant digits and exponent	WITHOUT_CLASSIFICATION	0.9998665879660219	WITHOUT_CLASSIFICATION	1.3341203397822772E-4	IMPLEMENTATION
// normalize the value	WITHOUT_CLASSIFICATION	0.9999130041460146	WITHOUT_CLASSIFICATION	8.699585398532331E-5	IMPLEMENTATION
// base	WITHOUT_CLASSIFICATION	0.9954895139587436	WITHOUT_CLASSIFICATION	0.0045104860412563804	IMPLEMENTATION
// NOTE: MRI's sqrt precision is limited by 100, // but we allow values more than 100.	WITHOUT_CLASSIFICATION	0.9999283717974644	WITHOUT_CLASSIFICATION	7.162820253559145E-5	IMPLEMENTATION
// just in case, add a bit of extra precision	WITHOUT_CLASSIFICATION	0.9999365482029461	WITHOUT_CLASSIFICATION	6.345179705385594E-5	IMPLEMENTATION
// eh?!	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
// Note: #fix has only no-arg form, but truncate allows optional parameter.	WITHOUT_CLASSIFICATION	0.9999473138116654	WITHOUT_CLASSIFICATION	5.268618833466648E-5	IMPLEMENTATION
// General number and precision checking	WITHOUT_CLASSIFICATION	0.9999077380762663	WITHOUT_CLASSIFICATION	9.22619237337222E-5	IMPLEMENTATION
// the requested precision	WITHOUT_CLASSIFICATION	0.9999160023311353	WITHOUT_CLASSIFICATION	8.399766886466103E-5	IMPLEMENTATION
// Proc class	WITHOUT_CLASSIFICATION	0.99984829651483	WITHOUT_CLASSIFICATION	1.517034851700283E-4	IMPLEMENTATION
//.append("  -x[directory]   strip off text before #!ruby line and perhaps cd to directory\n")	WITHOUT_CLASSIFICATION	0.9999323066381849	WITHOUT_CLASSIFICATION	6.769336181518406E-5	IMPLEMENTATION
// even shift.. // ..floors to 62 or 63 bit BigInteger	WITHOUT_CLASSIFICATION	0.9998761653632934	WITHOUT_CLASSIFICATION	1.2383463670665186E-4	IMPLEMENTATION
// 5 -> 2, -5 -> -3 need half a scale more..	WITHOUT_CLASSIFICATION	0.9998295636015401	WITHOUT_CLASSIFICATION	1.7043639845983383E-4	IMPLEMENTATION
// ..where 100 -> 10 shifts the scale	WITHOUT_CLASSIFICATION	0.999876496641343	WITHOUT_CLASSIFICATION	1.2350335865698333E-4	IMPLEMENTATION
// Initial x - use double root - multiply by halfBack to unshift - set new scale	WITHOUT_CLASSIFICATION	0.9999409559496948	WITHOUT_CLASSIFICATION	5.904405030508923E-5	IMPLEMENTATION
// x0 ~ sqrt()	WITHOUT_CLASSIFICATION	0.999779971725086	WITHOUT_CLASSIFICATION	2.2002827491392825E-4	IMPLEMENTATION
// for prec 15 root x0 must surely be OK // return small prec roots without iterations	WITHOUT_CLASSIFICATION	0.9999799263170368	WITHOUT_CLASSIFICATION	2.0073682963111387E-5	IMPLEMENTATION
// Initial v - the reciprocal // v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999096657879111	WITHOUT_CLASSIFICATION	9.033421208889262E-5	IMPLEMENTATION
// Collect iteration precisions beforehand	WITHOUT_CLASSIFICATION	0.9999442305192264	WITHOUT_CLASSIFICATION	5.576948077361419E-5	IMPLEMENTATION
// assume nInit = 16 <= prec	WITHOUT_CLASSIFICATION	0.999872478549597	WITHOUT_CLASSIFICATION	1.275214504029495E-4	IMPLEMENTATION
// The loop of "Square Root by Coupled Newton Iteration"	WITHOUT_CLASSIFICATION	0.9999331212466678	WITHOUT_CLASSIFICATION	6.687875333232686E-5	IMPLEMENTATION
// Increase precision - next iteration supplies n exact digits	WITHOUT_CLASSIFICATION	0.999941979749354	WITHOUT_CLASSIFICATION	5.802025064604999E-5	IMPLEMENTATION
// Next x                                        // e = d - x^2	WITHOUT_CLASSIFICATION	0.9998787677138881	WITHOUT_CLASSIFICATION	1.212322861118454E-4	IMPLEMENTATION
// x += e*v     ~ sqrt()	WITHOUT_CLASSIFICATION	0.9998269084618239	WITHOUT_CLASSIFICATION	1.7309153817620973E-4	IMPLEMENTATION
// root x is ready!	WITHOUT_CLASSIFICATION	0.9998661822903342	WITHOUT_CLASSIFICATION	1.3381770966577067E-4	IMPLEMENTATION
// Next v                                        // g = 1 - 2*x*v	WITHOUT_CLASSIFICATION	0.9998787294220103	WITHOUT_CLASSIFICATION	1.2127057798972563E-4	IMPLEMENTATION
// v += g*v     ~ 1/2/sqrt()	WITHOUT_CLASSIFICATION	0.9998269084618239	WITHOUT_CLASSIFICATION	1.7309153817620973E-4	IMPLEMENTATION
// RubyBigdecimal	WITHOUT_CLASSIFICATION	0.9997834364440927	WITHOUT_CLASSIFICATION	2.1656355590719782E-4	IMPLEMENTATION
// c: bind_eval	WITHOUT_CLASSIFICATION	0.9997760509391825	WITHOUT_CLASSIFICATION	2.2394906081753962E-4	IMPLEMENTATION
/*  ================     *  Module Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999165315634597	WITHOUT_CLASSIFICATION	8.346843654025968E-5	IMPLEMENTATION
// from CommandlineParser	WITHOUT_CLASSIFICATION	0.9998866968089434	WITHOUT_CLASSIFICATION	1.1330319105664094E-4	IMPLEMENTATION
// This property is a Boolean, to allow three values, so it can match MRI's nil, false and true	WITHOUT_CLASSIFICATION	0.9999602965354181	WITHOUT_CLASSIFICATION	3.970346458197014E-5	IMPLEMENTATION
// default ClassCache using jitMax as a soft upper bound	WITHOUT_CLASSIFICATION	0.999973093747379	WITHOUT_CLASSIFICATION	2.690625262099841E-5	IMPLEMENTATION
// Until we get a little more solid on 1.9 support we will only run interpreted mode	WITHOUT_CLASSIFICATION	0.9997240460721497	WITHOUT_CLASSIFICATION	2.759539278502568E-4	IMPLEMENTATION
// Setting the loader needs to reset the class cache	WITHOUT_CLASSIFICATION	0.999953619602871	WITHOUT_CLASSIFICATION	4.638039712891855E-5	IMPLEMENTATION
// try the normal property first	WITHOUT_CLASSIFICATION	0.9999334687639894	WITHOUT_CLASSIFICATION	6.653123601065154E-5	IMPLEMENTATION
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999066752276605	WITHOUT_CLASSIFICATION	9.332477233942469E-5	IMPLEMENTATION
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999066752276605	WITHOUT_CLASSIFICATION	9.332477233942469E-5	IMPLEMENTATION
// try loading from classloader resources	WITHOUT_CLASSIFICATION	0.9999519402328596	WITHOUT_CLASSIFICATION	4.8059767140345655E-5	IMPLEMENTATION
// otherwise fall back on system temp location	WITHOUT_CLASSIFICATION	0.9999059878607934	WITHOUT_CLASSIFICATION	9.40121392065962E-5	IMPLEMENTATION
// We require the home directory to be absolute	WITHOUT_CLASSIFICATION	0.9999679323106584	WITHOUT_CLASSIFICATION	3.206768934168213E-5	IMPLEMENTATION
//consume the file name	WITHOUT_CLASSIFICATION	0.9999065634191414	WITHOUT_CLASSIFICATION	9.343658085869765E-5	IMPLEMENTATION
// Specify something that can't separate	WITHOUT_CLASSIFICATION	0.9999102986729755	WITHOUT_CLASSIFICATION	8.97013270244216E-5	IMPLEMENTATION
// try cwd first	WITHOUT_CLASSIFICATION	0.9998335010692562	WITHOUT_CLASSIFICATION	1.6649893074384176E-4	IMPLEMENTATION
// ruby interpreter compatibilty // Usage: ruby [switches] [--] [programfile] [arguments])	WITHOUT_CLASSIFICATION	0.9998948704039846	WITHOUT_CLASSIFICATION	1.0512959601536083E-4	IMPLEMENTATION
// KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 // if Ruby 2.0 encoding pragmas are implemented, this will need to change	WITHOUT_CLASSIFICATION	0.982136367765109	WITHOUT_CLASSIFICATION	0.01786363223489092	IMPLEMENTATION
// @JRubyMethod(name = "complex?")	WITHOUT_CLASSIFICATION	0.9998374678832679	WITHOUT_CLASSIFICATION	1.625321167321437E-4	IMPLEMENTATION
// @JRubyMethod(name = "exact?")	WITHOUT_CLASSIFICATION	0.9998429072447764	WITHOUT_CLASSIFICATION	1.5709275522352522E-4	IMPLEMENTATION
// @JRubyMethod(name = "inexact?")	WITHOUT_CLASSIFICATION	0.9998430230647288	WITHOUT_CLASSIFICATION	1.5697693527104783E-4	IMPLEMENTATION
// symbol string *must* be interned	WITHOUT_CLASSIFICATION	0.9999001555957864	WITHOUT_CLASSIFICATION	9.984440421372697E-5	IMPLEMENTATION
//        assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";	WITHOUT_CLASSIFICATION	0.9999726994888346	WITHOUT_CLASSIFICATION	2.7300511165379494E-5	IMPLEMENTATION
/* Symbol class methods.     *      */	WITHOUT_CLASSIFICATION	0.9998557514982331	WITHOUT_CLASSIFICATION	1.4424850176686816E-4	IMPLEMENTATION
// TODO: 1.9 rb_enc_symname_p	WITHOUT_CLASSIFICATION	0.8922235459136827	WITHOUT_CLASSIFICATION	0.10777645408631738	IMPLEMENTATION
// This is needed to unpack stuff	WITHOUT_CLASSIFICATION	0.9999198644784397	WITHOUT_CLASSIFICATION	8.013552156028058E-5	IMPLEMENTATION
// we already confirmed above that length > 0	WITHOUT_CLASSIFICATION	0.9999467234442445	WITHOUT_CLASSIFICATION	5.3276555755387046E-5	IMPLEMENTATION
// *must* be power of 2!	WITHOUT_CLASSIFICATION	0.9998408235775351	WITHOUT_CLASSIFICATION	1.5917642246484994E-4	IMPLEMENTATION
// note all fields are final -- rehash creates new entries when necessary. // as documented in java.util.concurrent.ConcurrentHashMap.java, that will // statistically affect only a small percentage (< 20%) of entries for a given rehash.	WITHOUT_CLASSIFICATION	0.9999814691119486	WITHOUT_CLASSIFICATION	1.8530888051408828E-5	IMPLEMENTATION
//            assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.999972354233276	WITHOUT_CLASSIFICATION	2.7645766723976837E-5	IMPLEMENTATION
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9998550501369926	WITHOUT_CLASSIFICATION	1.4494986300733574E-4	IMPLEMENTATION
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9998550501369926	WITHOUT_CLASSIFICATION	1.4494986300733574E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9997965527607274	WITHOUT_CLASSIFICATION	2.0344723927261566E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9997965527607274	WITHOUT_CLASSIFICATION	2.0344723927261566E-4	IMPLEMENTATION
// backwards-compatibility, but threadsafe now	WITHOUT_CLASSIFICATION	0.9998836450796736	WITHOUT_CLASSIFICATION	1.1635492032642087E-4	IMPLEMENTATION
//  Single node on list	WITHOUT_CLASSIFICATION	0.9998378077122614	WITHOUT_CLASSIFICATION	1.621922877385806E-4	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.999889002284329	WITHOUT_CLASSIFICATION	1.109977156710576E-4	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9998718763812519	WITHOUT_CLASSIFICATION	1.2812361874817602E-4	IMPLEMENTATION
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999488550598669	WITHOUT_CLASSIFICATION	5.1144940133110335E-5	IMPLEMENTATION
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.999878015185293	WITHOUT_CLASSIFICATION	1.2198481470706603E-4	IMPLEMENTATION
// not so backwards-compatible here, but no one should have been // calling this anyway.	WITHOUT_CLASSIFICATION	0.9995916541954692	WITHOUT_CLASSIFICATION	4.0834580453079876E-4	IMPLEMENTATION
// Profile	WITHOUT_CLASSIFICATION	0.9958688271473163	WITHOUT_CLASSIFICATION	0.004131172852683755	IMPLEMENTATION
//static private final String TRANSLIT = "//translit";	WITHOUT_CLASSIFICATION	0.9999599845194403	WITHOUT_CLASSIFICATION	4.001548055964394E-5	IMPLEMENTATION
// treat start and end as start...end for end >= 0, start..end for end < 0	WITHOUT_CLASSIFICATION	0.9999033535522142	WITHOUT_CLASSIFICATION	9.664644778577467E-5	IMPLEMENTATION
// invalid ranges result in an empty string	WITHOUT_CLASSIFICATION	0.9999598340313688	WITHOUT_CLASSIFICATION	4.0165968631154255E-5	IMPLEMENTATION
// Methods of the Nil Class (nil_*):	WITHOUT_CLASSIFICATION	0.9999251145070076	WITHOUT_CLASSIFICATION	7.488549299245414E-5	IMPLEMENTATION
// Has read/write been closed or is it still open for business	WITHOUT_CLASSIFICATION	0.9998657391779683	WITHOUT_CLASSIFICATION	1.342608220317443E-4	IMPLEMENTATION
// Support IO modes that this object was opened with	WITHOUT_CLASSIFICATION	0.9998845357644542	WITHOUT_CLASSIFICATION	1.1546423554570504E-4	IMPLEMENTATION
// must let original string know we're modifying, so shared buffers aren't damaged	WITHOUT_CLASSIFICATION	0.9999241443570995	WITHOUT_CLASSIFICATION	7.585564290058269E-5	IMPLEMENTATION
// reset the state	WITHOUT_CLASSIFICATION	0.999917494395235	WITHOUT_CLASSIFICATION	8.250560476498718E-5	IMPLEMENTATION
// Tainting here if we ever want it. (secure 4)	WITHOUT_CLASSIFICATION	0.9998067389491084	WITHOUT_CLASSIFICATION	1.9326105089161272E-4	IMPLEMENTATION
// rb_match_busy	WITHOUT_CLASSIFICATION	0.999779971725086	WITHOUT_CLASSIFICATION	2.2002827491392825E-4	IMPLEMENTATION
//str is frozen	WITHOUT_CLASSIFICATION	0.9997810946557163	WITHOUT_CLASSIFICATION	2.1890534428356285E-4	IMPLEMENTATION
// MRI also does a pointer comparison here	WITHOUT_CLASSIFICATION	0.9998717422384806	WITHOUT_CLASSIFICATION	1.2825776151944516E-4	IMPLEMENTATION
// JRubyServer	WITHOUT_CLASSIFICATION	0.9997814680213083	WITHOUT_CLASSIFICATION	2.1853197869172372E-4	IMPLEMENTATION
// Class.allocate object is not allocatable before it is initialized	WITHOUT_CLASSIFICATION	0.9999877514103107	WITHOUT_CLASSIFICATION	1.2248589689166312E-5	IMPLEMENTATION
// boot the Object class 	WITHOUT_CLASSIFICATION	0.9999310782128643	WITHOUT_CLASSIFICATION	6.892178713575501E-5	IMPLEMENTATION
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999570645352163	WITHOUT_CLASSIFICATION	4.2935464783703964E-5	IMPLEMENTATION
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999780037231712	WITHOUT_CLASSIFICATION	2.1996276828797042E-5	IMPLEMENTATION
// undo check	WITHOUT_CLASSIFICATION	0.9997948078306157	WITHOUT_CLASSIFICATION	2.0519216938434475E-4	IMPLEMENTATION
// This is a non-standard method; have we decided to start extending Ruby? //classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));	WITHOUT_CLASSIFICATION	0.9999849757022283	WITHOUT_CLASSIFICATION	1.5024297771786951E-5	IMPLEMENTATION
// boot the Module and Class classes	WITHOUT_CLASSIFICATION	0.9999257470738357	WITHOUT_CLASSIFICATION	7.425292616428506E-5	IMPLEMENTATION
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9999891611804639	WITHOUT_CLASSIFICATION	1.0838819536244508E-5	IMPLEMENTATION
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9998777696703248	WITHOUT_CLASSIFICATION	1.222303296750865E-4	IMPLEMENTATION
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9998777696703248	WITHOUT_CLASSIFICATION	1.222303296750865E-4	IMPLEMENTATION
// could be pulled down to RubyClass in future // rb_class_boot	WITHOUT_CLASSIFICATION	0.9998022986858961	WITHOUT_CLASSIFICATION	1.9770131410382774E-4	IMPLEMENTATION
// remove us from old superclass's child classes	WITHOUT_CLASSIFICATION	0.9999811205532606	WITHOUT_CLASSIFICATION	1.8879446739437855E-5	IMPLEMENTATION
// add us to new superclass's child classes	WITHOUT_CLASSIFICATION	0.9999684677822152	WITHOUT_CLASSIFICATION	3.1532217784814816E-5	IMPLEMENTATION
// update all subclasses	WITHOUT_CLASSIFICATION	0.9999702355928085	WITHOUT_CLASSIFICATION	2.9764407191466483E-5	IMPLEMENTATION
// fields to hold Ruby and RubyClass references	WITHOUT_CLASSIFICATION	0.9999246149781655	WITHOUT_CLASSIFICATION	7.538502183443409E-5	IMPLEMENTATION
// static initializing method	WITHOUT_CLASSIFICATION	0.9999360190957642	WITHOUT_CLASSIFICATION	6.398090423574109E-5	IMPLEMENTATION
// standard constructor that accepts Ruby, RubyClass	WITHOUT_CLASSIFICATION	0.9998954798982291	WITHOUT_CLASSIFICATION	1.0452010177085655E-4	IMPLEMENTATION
// no-arg constructor using static references to Ruby and RubyClass	WITHOUT_CLASSIFICATION	0.9999472193450725	WITHOUT_CLASSIFICATION	5.2780654927561374E-5	IMPLEMENTATION
// non-signature signature with just IRubyObject	WITHOUT_CLASSIFICATION	0.9999029143036668	WITHOUT_CLASSIFICATION	9.708569633324043E-5	IMPLEMENTATION
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999012179819622	WITHOUT_CLASSIFICATION	9.878201803780106E-5	IMPLEMENTATION
// self // method name	WITHOUT_CLASSIFICATION	0.9998595458530102	WITHOUT_CLASSIFICATION	1.4045414698984167E-4	IMPLEMENTATION
// the default allocator	WITHOUT_CLASSIFICATION	0.9999723901492692	WITHOUT_CLASSIFICATION	2.760985073079197E-5	IMPLEMENTATION
// Equivalent of T_DATA	WITHOUT_CLASSIFICATION	0.9998002382902711	WITHOUT_CLASSIFICATION	1.9976170972883268E-4	IMPLEMENTATION
// do nothing, leave empty	WITHOUT_CLASSIFICATION	0.9999739411604077	WITHOUT_CLASSIFICATION	2.6058839592316434E-5	IMPLEMENTATION
// Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9998400694395586	WITHOUT_CLASSIFICATION	1.5993056044141641E-4	IMPLEMENTATION
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999257731425168	WITHOUT_CLASSIFICATION	7.422685748319916E-5	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999331998997838	WITHOUT_CLASSIFICATION	6.680010021616341E-5	IMPLEMENTATION
// Make sure all arguments are modules before calling the callbacks	WITHOUT_CLASSIFICATION	0.999980546943017	WITHOUT_CLASSIFICATION	1.9453056983003627E-5	IMPLEMENTATION
// MRI extends in order from last to first	WITHOUT_CLASSIFICATION	0.9999227704900957	WITHOUT_CLASSIFICATION	7.722950990438978E-5	IMPLEMENTATION
// NOTE: Serialization is primarily supported for testing purposes, and there is no general // guarantee that serialization will work correctly. Specifically, instance variables pointing // at symbols, threads, modules, classes, and other unserializable types are not detected.	WITHOUT_CLASSIFICATION	0.9999989591949218	WITHOUT_CLASSIFICATION	1.040805078286442E-6	IMPLEMENTATION
// write out ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9998936660025588	WITHOUT_CLASSIFICATION	1.0633399744120172E-4	IMPLEMENTATION
// rest in ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9998905399464433	WITHOUT_CLASSIFICATION	1.0946005355675709E-4	IMPLEMENTATION
// 0x3fff_ffff // -0x4000_0000	WITHOUT_CLASSIFICATION	0.9998269117940239	WITHOUT_CLASSIFICATION	1.730882059760452E-4	IMPLEMENTATION
// a gotcha	WITHOUT_CLASSIFICATION	0.999779971725086	WITHOUT_CLASSIFICATION	2.2002827491392825E-4	IMPLEMENTATION
// Java / and % are not the same as ruby	WITHOUT_CLASSIFICATION	0.9999191458956316	WITHOUT_CLASSIFICATION	8.085410436841502E-5	IMPLEMENTATION
// A gotcha for Long.MIN_VALUE: value = -value	WITHOUT_CLASSIFICATION	0.9998881215532416	WITHOUT_CLASSIFICATION	1.1187844675846928E-4	IMPLEMENTATION
// Piece of mri rb_to_id	WITHOUT_CLASSIFICATION	0.9998288450411421	WITHOUT_CLASSIFICATION	1.711549588578619E-4	IMPLEMENTATION
// Java Doubles are 64 bit long:            	WITHOUT_CLASSIFICATION	0.9999002644358421	WITHOUT_CLASSIFICATION	9.97355641578082E-5	IMPLEMENTATION
// Double.MAX_EXPONENT since Java 1.6            	WITHOUT_CLASSIFICATION	0.9998872743412721	WITHOUT_CLASSIFICATION	1.1272565872781346E-4	IMPLEMENTATION
// don't override Numeric#div !	WITHOUT_CLASSIFICATION	0.9999177914374119	WITHOUT_CLASSIFICATION	8.220856258810213E-5	IMPLEMENTATION
// Modelled after c ruby implementation (java /,% not same as ruby)	WITHOUT_CLASSIFICATION	0.9930557382281334	WITHOUT_CLASSIFICATION	0.006944261771866677	IMPLEMENTATION
// MRI behavior:	WITHOUT_CLASSIFICATION	0.9998074990956173	WITHOUT_CLASSIFICATION	1.9250090438266518E-4	IMPLEMENTATION
// Numeric.equal            	WITHOUT_CLASSIFICATION	0.9998806301625883	WITHOUT_CLASSIFICATION	1.1936983741166088E-4	IMPLEMENTATION
// provider is not available	WITHOUT_CLASSIFICATION	0.9999329675906107	WITHOUT_CLASSIFICATION	6.703240938928139E-5	IMPLEMENTATION
// bouncy castle doesn't support algorithm	WITHOUT_CLASSIFICATION	0.9998223909031589	WITHOUT_CLASSIFICATION	1.7760909684117195E-4	IMPLEMENTATION
// fall back to system JCA providers	WITHOUT_CLASSIFICATION	0.9999184505726904	WITHOUT_CLASSIFICATION	8.15494273096994E-5	IMPLEMENTATION
// RubyDigest	WITHOUT_CLASSIFICATION	0.999779971725086	WITHOUT_CLASSIFICATION	2.2002827491392825E-4	IMPLEMENTATION
// ENEBO: Can these be fast?	WITHOUT_CLASSIFICATION	0.99978619593077	WITHOUT_CLASSIFICATION	2.1380406922993025E-4	IMPLEMENTATION
// synchronize on the RubyThread for threadgroup updates	WITHOUT_CLASSIFICATION	0.9999440596513969	WITHOUT_CLASSIFICATION	5.59403486031672E-5	IMPLEMENTATION
// we only add live threads	WITHOUT_CLASSIFICATION	0.9998989113330504	WITHOUT_CLASSIFICATION	1.0108866694954132E-4	IMPLEMENTATION
// use same ClassIndex as metaclass, since we're technically still of that type	WITHOUT_CLASSIFICATION	0.9999321456767332	WITHOUT_CLASSIFICATION	6.785432326678376E-5	IMPLEMENTATION
// handle everything after -- as arguments to the jruby process	WITHOUT_CLASSIFICATION	0.9999650096282107	WITHOUT_CLASSIFICATION	3.499037178939265E-5	IMPLEMENTATION
// JRubyService	WITHOUT_CLASSIFICATION	0.999782176888511	WITHOUT_CLASSIFICATION	2.1782311148896635E-4	IMPLEMENTATION
// while	WITHOUT_CLASSIFICATION	0.9957843364710619	WITHOUT_CLASSIFICATION	0.004215663528938152	IMPLEMENTATION
/* \OOO */	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
// CRuby uses sprintf(buf, "%.*g", FLOAT_DIG, d); // This pattern adjusts the output of String.pattern("%g") to mimic // the C version.	WITHOUT_CLASSIFICATION	0.9999459742145348	WITHOUT_CLASSIFICATION	5.4025785465213343E-5	IMPLEMENTATION
// mask off "once" flag	WITHOUT_CLASSIFICATION	0.9998286316259913	WITHOUT_CLASSIFICATION	1.7136837400868262E-4	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.999940806203757	WITHOUT_CLASSIFICATION	5.919379624291069E-5	IMPLEMENTATION
// internal usage (Complex/Rational)	WITHOUT_CLASSIFICATION	0.9999082539438584	WITHOUT_CLASSIFICATION	9.174605614158862E-5	IMPLEMENTATION
// silent ?	WITHOUT_CLASSIFICATION	0.9997792527080994	WITHOUT_CLASSIFICATION	2.2074729190052492E-4	IMPLEMENTATION
/* \xHH */	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9998269084618239	WITHOUT_CLASSIFICATION	1.7309153817620973E-4	IMPLEMENTATION
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.999779971725086	WITHOUT_CLASSIFICATION	2.2002827491392825E-4	IMPLEMENTATION
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.999779971725086	WITHOUT_CLASSIFICATION	2.2002827491392825E-4	IMPLEMENTATION
/* \O, \OO, \OOO or backref */	WITHOUT_CLASSIFICATION	0.9998283610806002	WITHOUT_CLASSIFICATION	1.716389193998366E-4	IMPLEMENTATION
// MBCLEN_NEEDMORE_P	WITHOUT_CLASSIFICATION	0.999779971725086	WITHOUT_CLASSIFICATION	2.2002827491392825E-4	IMPLEMENTATION
// MBCLEN_INVALID_P	WITHOUT_CLASSIFICATION	0.9997802574881791	WITHOUT_CLASSIFICATION	2.1974251182083865E-4	IMPLEMENTATION
// Unicode is can be only 21 bits long, int is enough	WITHOUT_CLASSIFICATION	0.9999109039441815	WITHOUT_CLASSIFICATION	8.909605581853366E-5	IMPLEMENTATION
/* Surrogates */	WITHOUT_CLASSIFICATION	0.9997825809827613	WITHOUT_CLASSIFICATION	2.1741901723871238E-4	IMPLEMENTATION
// do not load the class if not used	WITHOUT_CLASSIFICATION	0.9999683839994437	WITHOUT_CLASSIFICATION	3.161600055645426E-5	IMPLEMENTATION
/* \0, \0O, \0OO */	WITHOUT_CLASSIFICATION	0.999779971725086	WITHOUT_CLASSIFICATION	2.2002827491392825E-4	IMPLEMENTATION
/* \xHH */	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.999779971725086	WITHOUT_CLASSIFICATION	2.2002827491392825E-4	IMPLEMENTATION
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9998269084618239	WITHOUT_CLASSIFICATION	1.7309153817620973E-4	IMPLEMENTATION
/* \\u{H HH HHH HHHH HHHHH HHHHHH ...} */	WITHOUT_CLASSIFICATION	0.9998390416626022	WITHOUT_CLASSIFICATION	1.6095833739783181E-4	IMPLEMENTATION
/* \\uHHHH */	WITHOUT_CLASSIFICATION	0.999779971725086	WITHOUT_CLASSIFICATION	2.2002827491392825E-4	IMPLEMENTATION
/* \p{Hiragana} */	WITHOUT_CLASSIFICATION	0.999779971725086	WITHOUT_CLASSIFICATION	2.2002827491392825E-4	IMPLEMENTATION
// inner switch	WITHOUT_CLASSIFICATION	0.9998357650238001	WITHOUT_CLASSIFICATION	1.642349761998182E-4	IMPLEMENTATION
// newInstance here	WITHOUT_CLASSIFICATION	0.9998592523222866	WITHOUT_CLASSIFICATION	1.4074767771348474E-4	IMPLEMENTATION
// rb_reg_raise	WITHOUT_CLASSIFICATION	0.999779971725086	WITHOUT_CLASSIFICATION	2.2002827491392825E-4	IMPLEMENTATION
// rb_reg_desc	WITHOUT_CLASSIFICATION	0.999779971725086	WITHOUT_CLASSIFICATION	2.2002827491392825E-4	IMPLEMENTATION
// rb_enc_reg_raise	WITHOUT_CLASSIFICATION	0.999779971725086	WITHOUT_CLASSIFICATION	2.2002827491392825E-4	IMPLEMENTATION
// rb_enc_reg_error_desc	WITHOUT_CLASSIFICATION	0.9998269084618239	WITHOUT_CLASSIFICATION	1.7309153817620973E-4	IMPLEMENTATION
// rb_reg_initialize_str	WITHOUT_CLASSIFICATION	0.9999023338651801	WITHOUT_CLASSIFICATION	9.766613481984398E-5	IMPLEMENTATION
// rb_reg_initialize	WITHOUT_CLASSIFICATION	0.9998758474793629	WITHOUT_CLASSIFICATION	1.241525206371347E-4	IMPLEMENTATION
// JRUBY-3625: delay setting backref until the MatchData is completely initialized	WITHOUT_CLASSIFICATION	0.9999167854036078	WITHOUT_CLASSIFICATION	8.321459639209073E-5	IMPLEMENTATION
// rb_reg_expr_str	WITHOUT_CLASSIFICATION	0.999779971725086	WITHOUT_CLASSIFICATION	2.2002827491392825E-4	IMPLEMENTATION
// option_to_str	WITHOUT_CLASSIFICATION	0.9998176521391838	WITHOUT_CLASSIFICATION	1.8234786081612416E-4	IMPLEMENTATION
// Don't initialize with class // Don't put in object space and don't taint	WITHOUT_CLASSIFICATION	0.999982460040968	WITHOUT_CLASSIFICATION	1.753995903200218E-5	IMPLEMENTATION
// args should be before block	WITHOUT_CLASSIFICATION	0.9998188484565298	WITHOUT_CLASSIFICATION	1.8115154347017677E-4	IMPLEMENTATION
// args should be at end	WITHOUT_CLASSIFICATION	0.9998265570273749	WITHOUT_CLASSIFICATION	1.7344297262502574E-4	IMPLEMENTATION
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9998521416354771	WITHOUT_CLASSIFICATION	1.478583645229763E-4	IMPLEMENTATION
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9998521416354771	WITHOUT_CLASSIFICATION	1.478583645229763E-4	IMPLEMENTATION
// skip anything not related to jruby	WITHOUT_CLASSIFICATION	0.9999254370873537	WITHOUT_CLASSIFICATION	7.456291264630714E-5	IMPLEMENTATION
// start a new populator	WITHOUT_CLASSIFICATION	0.9999162808431649	WITHOUT_CLASSIFICATION	8.371915683506219E-5	IMPLEMENTATION
// check for frame field reads or writes	WITHOUT_CLASSIFICATION	0.9999571358150912	WITHOUT_CLASSIFICATION	4.28641849087198E-5	IMPLEMENTATION
// add all names for this annotation	WITHOUT_CLASSIFICATION	0.9999497960329828	WITHOUT_CLASSIFICATION	5.0203967017274396E-5	IMPLEMENTATION
// no annotated methods found, skip	WITHOUT_CLASSIFICATION	0.999857718209202	WITHOUT_CLASSIFICATION	1.4228179079800994E-4	IMPLEMENTATION
// write out a static initializer for frame names, so it only fires once	WITHOUT_CLASSIFICATION	0.9999656613007192	WITHOUT_CLASSIFICATION	3.433869928086239E-5	IMPLEMENTATION
// single method, use normal logic	WITHOUT_CLASSIFICATION	0.9998786091521819	WITHOUT_CLASSIFICATION	1.2139084781807298E-4	IMPLEMENTATION
// multimethod, new logic	WITHOUT_CLASSIFICATION	0.999842241653418	WITHOUT_CLASSIFICATION	1.5775834658203193E-4	IMPLEMENTATION
// declared type returns the qualified name without $ for inner classes!!!	WITHOUT_CLASSIFICATION	0.9999322556668413	WITHOUT_CLASSIFICATION	6.774433315873486E-5	IMPLEMENTATION
// inner class, use $ to delimit	WITHOUT_CLASSIFICATION	0.9999217964318843	WITHOUT_CLASSIFICATION	7.820356811581176E-5	IMPLEMENTATION
//                        RubyModule singletonClass = module.getSingletonClass();	WITHOUT_CLASSIFICATION	0.9999542476998665	WITHOUT_CLASSIFICATION	4.5752300133416E-5	IMPLEMENTATION
//                }	WITHOUT_CLASSIFICATION	0.9999215318922232	WITHOUT_CLASSIFICATION	7.846810777676266E-5	IMPLEMENTATION
// fallback on non-pregenerated logic	WITHOUT_CLASSIFICATION	0.9997442092916162	WITHOUT_CLASSIFICATION	2.557907083836804E-4	IMPLEMENTATION
// refresh call adapter, since it matters if this is iter-based or not	WITHOUT_CLASSIFICATION	0.999897556645525	WITHOUT_CLASSIFICATION	1.0244335447485741E-4	IMPLEMENTATION
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9999617446683557	WITHOUT_CLASSIFICATION	3.825533164422567E-5	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.9998343554889275	WITHOUT_CLASSIFICATION	1.6564451107254878E-4	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.9998506917722685	WITHOUT_CLASSIFICATION	1.4930822773140978E-4	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999209106049652	WITHOUT_CLASSIFICATION	7.908939503470368E-5	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999209106049652	WITHOUT_CLASSIFICATION	7.908939503470368E-5	IMPLEMENTATION
// colon3	WITHOUT_CLASSIFICATION	0.9955689936732273	WITHOUT_CLASSIFICATION	0.004431006326772744	IMPLEMENTATION
// Colon3	WITHOUT_CLASSIFICATION	0.9964084088990468	WITHOUT_CLASSIFICATION	0.003591591100953127	IMPLEMENTATION
// array created for rescue args doesn't need to be in ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999238235186968	WITHOUT_CLASSIFICATION	7.617648130316141E-5	IMPLEMENTATION
// For b.foo	WITHOUT_CLASSIFICATION	0.9997741165878492	WITHOUT_CLASSIFICATION	2.2588341215090105E-4	IMPLEMENTATION
// instance config for the script run	WITHOUT_CLASSIFICATION	0.9999578008187109	WITHOUT_CLASSIFICATION	4.2199181289164934E-5	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999209106049652	WITHOUT_CLASSIFICATION	7.908939503470368E-5	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999209106049652	WITHOUT_CLASSIFICATION	7.908939503470368E-5	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999539383350358	WITHOUT_CLASSIFICATION	4.6061664964199005E-5	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999539383350358	WITHOUT_CLASSIFICATION	4.6061664964199005E-5	IMPLEMENTATION
//RubyModule module = context.getRubyClass();	WITHOUT_CLASSIFICATION	0.9998611464201506	WITHOUT_CLASSIFICATION	1.388535798494541E-4	IMPLEMENTATION
// For 'b.foo'	WITHOUT_CLASSIFICATION	0.9997836417749941	WITHOUT_CLASSIFICATION	2.1635822500590984E-4	IMPLEMENTATION
// We define an actual list to get around bug in java integration (1387115)	WITHOUT_CLASSIFICATION	0.9999257114685629	WITHOUT_CLASSIFICATION	7.428853143713446E-5	IMPLEMENTATION
// something in here is used to build up ruby stack trace...	WITHOUT_CLASSIFICATION	0.9999402534545166	WITHOUT_CLASSIFICATION	5.974654548347759E-5	IMPLEMENTATION
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999190058883524	WITHOUT_CLASSIFICATION	8.099411164772003E-5	IMPLEMENTATION
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999190058883524	WITHOUT_CLASSIFICATION	8.099411164772003E-5	IMPLEMENTATION
// do nothing, allow loop to retry	WITHOUT_CLASSIFICATION	0.9999716908567029	WITHOUT_CLASSIFICATION	2.830914329711363E-5	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9997955939813199	WITHOUT_CLASSIFICATION	2.0440601868017565E-4	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9998819541421926	WITHOUT_CLASSIFICATION	1.1804585780736004E-4	IMPLEMENTATION
// never visited, should be fine	WITHOUT_CLASSIFICATION	0.9998284547437994	WITHOUT_CLASSIFICATION	1.7154525620044633E-4	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999539383350358	WITHOUT_CLASSIFICATION	4.6061664964199005E-5	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999635810539487	WITHOUT_CLASSIFICATION	3.641894605131929E-5	IMPLEMENTATION
// If we have more than one argument, then make sure the array is not ObjectSpaced.	WITHOUT_CLASSIFICATION	0.9999332669952418	WITHOUT_CLASSIFICATION	6.6733004758281E-5	IMPLEMENTATION
// Only in ruby 1.9 methods	WITHOUT_CLASSIFICATION	0.9998895079006122	WITHOUT_CLASSIFICATION	1.1049209938780263E-4	IMPLEMENTATION
// Bind 'normal' parameter values to the local scope for this method.	WITHOUT_CLASSIFICATION	0.9999791991201245	WITHOUT_CLASSIFICATION	2.0800879875519853E-5	IMPLEMENTATION
// no arg grouping, just use bulk assignment methods	WITHOUT_CLASSIFICATION	0.9999208998830748	WITHOUT_CLASSIFICATION	7.910011692528328E-5	IMPLEMENTATION
// optArgs and restArgs require more work, so isolate them and ArrayList creation here	WITHOUT_CLASSIFICATION	0.9998673808988939	WITHOUT_CLASSIFICATION	1.326191011060374E-4	IMPLEMENTATION
//        arity.checkArity(runtime, argsLength);	WITHOUT_CLASSIFICATION	0.9999490652125195	WITHOUT_CLASSIFICATION	5.0934787480405E-5	IMPLEMENTATION
// no more values to stick in rest arg	WITHOUT_CLASSIFICATION	0.9999254916359804	WITHOUT_CLASSIFICATION	7.450836401955862E-5	IMPLEMENTATION
// set argv from main's args	WITHOUT_CLASSIFICATION	0.9999257587403301	WITHOUT_CLASSIFICATION	7.424125966993793E-5	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.9998343554889275	WITHOUT_CLASSIFICATION	1.6564451107254878E-4	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999209106049652	WITHOUT_CLASSIFICATION	7.908939503470368E-5	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999539383350358	WITHOUT_CLASSIFICATION	4.6061664964199005E-5	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999635810539487	WITHOUT_CLASSIFICATION	3.641894605131929E-5	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.999978584503041	WITHOUT_CLASSIFICATION	2.1415496959043487E-5	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.999978584503041	WITHOUT_CLASSIFICATION	2.1415496959043487E-5	IMPLEMENTATION
// block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] //assert argsNode != null : "argsNode is not null";	WITHOUT_CLASSIFICATION	0.9999590703699944	WITHOUT_CLASSIFICATION	4.092963000547525E-5	IMPLEMENTATION
// assign given optional arguments to their variables	WITHOUT_CLASSIFICATION	0.9999333687511973	WITHOUT_CLASSIFICATION	6.663124880270994E-5	IMPLEMENTATION
// in-frame EvalState should already have receiver set as self, continue to use it	WITHOUT_CLASSIFICATION	0.9998954111264332	WITHOUT_CLASSIFICATION	1.0458887356679976E-4	IMPLEMENTATION
// assign the default values, adding to the end of allArgs	WITHOUT_CLASSIFICATION	0.9999908096574264	WITHOUT_CLASSIFICATION	9.1903425736759E-6	IMPLEMENTATION
// Make sure the appropriate scope has proper size. See JRUBY-2046.	WITHOUT_CLASSIFICATION	0.9999275065513036	WITHOUT_CLASSIFICATION	7.249344869632109E-5	IMPLEMENTATION
// Experimental class reification support, to create real Java classes // for Ruby classes after the first opening	WITHOUT_CLASSIFICATION	0.9999869329502709	WITHOUT_CLASSIFICATION	1.3067049729159303E-5	IMPLEMENTATION
// This should never happen past parse, but just bulletproof this just in case	WITHOUT_CLASSIFICATION	0.9999740715832323	WITHOUT_CLASSIFICATION	2.592841676779388E-5	IMPLEMENTATION
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9999267188636075	WITHOUT_CLASSIFICATION	7.328113639253872E-5	IMPLEMENTATION
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9998659602340904	WITHOUT_CLASSIFICATION	1.3403976590969493E-4	IMPLEMENTATION
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999110056747696	WITHOUT_CLASSIFICATION	8.899432523037834E-5	IMPLEMENTATION
// never visited, should be ok	WITHOUT_CLASSIFICATION	0.9997925753400977	WITHOUT_CLASSIFICATION	2.074246599023166E-4	IMPLEMENTATION
// If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil	WITHOUT_CLASSIFICATION	0.9999207167124855	WITHOUT_CLASSIFICATION	7.928328751445173E-5	IMPLEMENTATION
// JRUBY-530 until case	WITHOUT_CLASSIFICATION	0.9998334262050051	WITHOUT_CLASSIFICATION	1.6657379499476657E-4	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.9998506917722685	WITHOUT_CLASSIFICATION	1.4930822773140978E-4	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999539383350358	WITHOUT_CLASSIFICATION	4.6061664964199005E-5	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9997955939813199	WITHOUT_CLASSIFICATION	2.0440601868017565E-4	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9998819541421926	WITHOUT_CLASSIFICATION	1.1804585780736004E-4	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9998819541421926	WITHOUT_CLASSIFICATION	1.1804585780736004E-4	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999539383350358	WITHOUT_CLASSIFICATION	4.6061664964199005E-5	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999635810539487	WITHOUT_CLASSIFICATION	3.641894605131929E-5	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999635810539487	WITHOUT_CLASSIFICATION	3.641894605131929E-5	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.999978584503041	WITHOUT_CLASSIFICATION	2.1415496959043487E-5	IMPLEMENTATION
// Empirical Observations: // null -> Some arity // argsNode == this.argsNode then check for arity changes // newline(splatnode) -> argspushnode	WITHOUT_CLASSIFICATION	0.9999360514682939	WITHOUT_CLASSIFICATION	6.394853170612404E-5	IMPLEMENTATION
//assert !(value instanceof RubyArray)  : "Not an array";	WITHOUT_CLASSIFICATION	0.9999142256311014	WITHOUT_CLASSIFICATION	8.577436889854848E-5	IMPLEMENTATION
// Serialization killed our dynamic scope.  We can just create an empty one // since serialization cannot serialize an eval (which is the only thing // which is capable of having a non-empty dynamic scope).	WITHOUT_CLASSIFICATION	0.9999966481001351	WITHOUT_CLASSIFICATION	3.3518998647709774E-6	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9998432375231469	WITHOUT_CLASSIFICATION	1.5676247685305237E-4	IMPLEMENTATION
// We could probably also detect if LHS value came out of cache and avoid some of this	WITHOUT_CLASSIFICATION	0.9999547000577723	WITHOUT_CLASSIFICATION	4.529994222763647E-5	IMPLEMENTATION
//        assert thenBody != null : "thenBody is not null"; //        assert elseBody != null : "elseBody is not null";	WITHOUT_CLASSIFICATION	0.9999773865976838	WITHOUT_CLASSIFICATION	2.261340231624084E-5	IMPLEMENTATION
// add in reverse order	WITHOUT_CLASSIFICATION	0.9999281369170734	WITHOUT_CLASSIFICATION	7.186308292659529E-5	IMPLEMENTATION
// in order to make pragma's noops we set location to a special value	WITHOUT_CLASSIFICATION	0.9999671829747008	WITHOUT_CLASSIFICATION	3.2817025299209126E-5	IMPLEMENTATION
// ignore compiler pragmas	WITHOUT_CLASSIFICATION	0.9999843006985005	WITHOUT_CLASSIFICATION	1.5699301499424378E-5	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9997955939813199	WITHOUT_CLASSIFICATION	2.0440601868017565E-4	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9998819541421926	WITHOUT_CLASSIFICATION	1.1804585780736004E-4	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9998819541421926	WITHOUT_CLASSIFICATION	1.1804585780736004E-4	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999539383350358	WITHOUT_CLASSIFICATION	4.6061664964199005E-5	IMPLEMENTATION
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9999267188636075	WITHOUT_CLASSIFICATION	7.328113639253872E-5	IMPLEMENTATION
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999110056747696	WITHOUT_CLASSIFICATION	8.899432523037834E-5	IMPLEMENTATION
// No actual test, so do 'when' if when expression is not nil	WITHOUT_CLASSIFICATION	0.9998886948580115	WITHOUT_CLASSIFICATION	1.113051419885194E-4	IMPLEMENTATION
// save entering the try if there's nothing to ensure	WITHOUT_CLASSIFICATION	0.9999875792638808	WITHOUT_CLASSIFICATION	1.2420736119089188E-5	IMPLEMENTATION
// For 'foo'	WITHOUT_CLASSIFICATION	0.9997836893721239	WITHOUT_CLASSIFICATION	2.1631062787617894E-4	IMPLEMENTATION
// For 'foo'	WITHOUT_CLASSIFICATION	0.9997836893721239	WITHOUT_CLASSIFICATION	2.1631062787617894E-4	IMPLEMENTATION
// admittedly inefficient	WITHOUT_CLASSIFICATION	0.9998104993761768	WITHOUT_CLASSIFICATION	1.8950062382312271E-4	IMPLEMENTATION
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9998417953580208	WITHOUT_CLASSIFICATION	1.582046419792209E-4	IMPLEMENTATION
// What static scoping relationship exists when it comes into being.	WITHOUT_CLASSIFICATION	0.9998832242753642	WITHOUT_CLASSIFICATION	1.1677572463575936E-4	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9998493004816233	WITHOUT_CLASSIFICATION	1.5069951837658454E-4	IMPLEMENTATION
// just rethrow	WITHOUT_CLASSIFICATION	0.9998526680818788	WITHOUT_CLASSIFICATION	1.4733191812122347E-4	IMPLEMENTATION
// just rethrow	WITHOUT_CLASSIFICATION	0.9998526680818788	WITHOUT_CLASSIFICATION	1.4733191812122347E-4	IMPLEMENTATION
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999380939416855	WITHOUT_CLASSIFICATION	6.190605831452395E-5	IMPLEMENTATION
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999380939416855	WITHOUT_CLASSIFICATION	6.190605831452395E-5	IMPLEMENTATION
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9998685169393744	WITHOUT_CLASSIFICATION	1.3148306062565838E-4	IMPLEMENTATION
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9998685169393744	WITHOUT_CLASSIFICATION	1.3148306062565838E-4	IMPLEMENTATION
// Execute rescue block	WITHOUT_CLASSIFICATION	0.9998791325082962	WITHOUT_CLASSIFICATION	1.2086749170377898E-4	IMPLEMENTATION
// If no exception is thrown execute else block	WITHOUT_CLASSIFICATION	0.9999513560776766	WITHOUT_CLASSIFICATION	4.864392232335717E-5	IMPLEMENTATION
// index of variable for this arg	WITHOUT_CLASSIFICATION	0.9999123931540023	WITHOUT_CLASSIFICATION	8.760684599778069E-5	IMPLEMENTATION
// only a marker interface	WITHOUT_CLASSIFICATION	0.999945881433954	WITHOUT_CLASSIFICATION	5.411856604595415E-5	IMPLEMENTATION
// don't attempt to coerce to array, just wrap and return	WITHOUT_CLASSIFICATION	0.9999580665429127	WITHOUT_CLASSIFICATION	4.193345708727916E-5	IMPLEMENTATION
// pragmas	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
// The method also needs a scope, do both	WITHOUT_CLASSIFICATION	0.9998959553555657	WITHOUT_CLASSIFICATION	1.0404464443426697E-4	IMPLEMENTATION
// We're doing normal framed compilation or the method needs a frame	WITHOUT_CLASSIFICATION	0.9998598482186003	WITHOUT_CLASSIFICATION	1.4015178139967335E-4	IMPLEMENTATION
// The method doesn't need a scope or static scope; frame only	WITHOUT_CLASSIFICATION	0.999948151369178	WITHOUT_CLASSIFICATION	5.184863082211832E-5	IMPLEMENTATION
// The method doesn't need a scope, but has static scope needs; use a dummy scope	WITHOUT_CLASSIFICATION	0.9999425804898842	WITHOUT_CLASSIFICATION	5.7419510115784E-5	IMPLEMENTATION
// Proc.new needs the caller's block to instantiate a proc	WITHOUT_CLASSIFICATION	0.9999408024186487	WITHOUT_CLASSIFICATION	5.919758135118688E-5	IMPLEMENTATION
// check for Proc.new, an especially magic method	WITHOUT_CLASSIFICATION	0.9999549272146808	WITHOUT_CLASSIFICATION	4.507278531922305E-5	IMPLEMENTATION
// long, slow way causes disabling	WITHOUT_CLASSIFICATION	0.999921642623858	WITHOUT_CLASSIFICATION	7.835737614207713E-5	IMPLEMENTATION
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.999830990903685	WITHOUT_CLASSIFICATION	1.690090963150104E-4	IMPLEMENTATION
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.999830990903685	WITHOUT_CLASSIFICATION	1.690090963150104E-4	IMPLEMENTATION
// long, slow way causes disabling for defined	WITHOUT_CLASSIFICATION	0.9999368546090238	WITHOUT_CLASSIFICATION	6.31453909761576E-5	IMPLEMENTATION
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.999878015185293	WITHOUT_CLASSIFICATION	1.2198481470706603E-4	IMPLEMENTATION
// Because Regexp#=== sets backref, we have to make this backref-aware	WITHOUT_CLASSIFICATION	0.9997784347911783	WITHOUT_CLASSIFICATION	2.2156520882168782E-4	IMPLEMENTATION
// encountered a node we don't recognize, set everything to true to disable optz	WITHOUT_CLASSIFICATION	0.9999680814579046	WITHOUT_CLASSIFICATION	3.1918542095394976E-5	IMPLEMENTATION
// only arrays that are "lightweight" are being used as args arrays	WITHOUT_CLASSIFICATION	0.9999170595453897	WITHOUT_CLASSIFICATION	8.294045461033241E-5	IMPLEMENTATION
// otherwise, it's a literal array	WITHOUT_CLASSIFICATION	0.9999062889567335	WITHOUT_CLASSIFICATION	9.371104326647046E-5	IMPLEMENTATION
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9998983595762994	WITHOUT_CLASSIFICATION	1.0164042370057821E-4	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9998882340523954	WITHOUT_CLASSIFICATION	1.1176594760464017E-4	IMPLEMENTATION
// compile first node as non-expr and then second node	WITHOUT_CLASSIFICATION	0.9999267977099976	WITHOUT_CLASSIFICATION	7.320229000241556E-5	IMPLEMENTATION
// last node, either !instanceof WhenNode or null, is the else	WITHOUT_CLASSIFICATION	0.9999290501630479	WITHOUT_CLASSIFICATION	7.094983695215274E-5	IMPLEMENTATION
// compile first node only	WITHOUT_CLASSIFICATION	0.9998920427739896	WITHOUT_CLASSIFICATION	1.0795722601040737E-4	IMPLEMENTATION
// splatted when, can't do it yet	WITHOUT_CLASSIFICATION	0.999867804112235	WITHOUT_CLASSIFICATION	1.3219588776492908E-4	IMPLEMENTATION
// if __send__ with a literal symbol, compile it as a direct fcall	WITHOUT_CLASSIFICATION	0.9999143615258494	WITHOUT_CLASSIFICATION	8.563847415047954E-5	IMPLEMENTATION
// NOTE: Currently this optimization is limited to the following situations: // * All expressions must be int-ranged literal fixnums // It also still emits the code for the "safe" when logic, which is rather // wasteful (since it essentially doubles each code body). As such it is // normally disabled, but it serves as an example of how this optimization // could be done. Ideally, it should be combined with the when processing // to improve code reuse before it's generally available.	WITHOUT_CLASSIFICATION	0.9999967289266408	WITHOUT_CLASSIFICATION	3.2710733591419567E-6	IMPLEMENTATION
// aggregate when nodes into a list, unfortunately, this is no	WITHOUT_CLASSIFICATION	0.9999038591077878	WITHOUT_CLASSIFICATION	9.614089221220068E-5	IMPLEMENTATION
// one arg but it's an array, treat it as a proper array	WITHOUT_CLASSIFICATION	0.9998834703416338	WITHOUT_CLASSIFICATION	1.1652965836617544E-4	IMPLEMENTATION
// can't do it	WITHOUT_CLASSIFICATION	0.999855749223863	WITHOUT_CLASSIFICATION	1.442507761370717E-4	IMPLEMENTATION
// otherwise, use normal args compiler	WITHOUT_CLASSIFICATION	0.9998919163742521	WITHOUT_CLASSIFICATION	1.0808362574788736E-4	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9998564738890365	WITHOUT_CLASSIFICATION	1.435261109634467E-4	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9998564738890365	WITHOUT_CLASSIFICATION	1.435261109634467E-4	IMPLEMENTATION
// these are all simple cases that don't require the heavier defined logic	WITHOUT_CLASSIFICATION	0.9999496531733879	WITHOUT_CLASSIFICATION	5.0346826612106335E-5	IMPLEMENTATION
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9998926136880886	WITHOUT_CLASSIFICATION	1.0738631191139749E-4	IMPLEMENTATION
//[]	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
//[]	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
//          context.swapValues(); //context.consumeCurrentValue();	WITHOUT_CLASSIFICATION	0.9999521369098328	WITHOUT_CLASSIFICATION	4.7863090167201795E-5	IMPLEMENTATION
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[] //[self] //[RubyClass] //[RubyClass, RubyClass]	WITHOUT_CLASSIFICATION	0.9998420399922245	WITHOUT_CLASSIFICATION	1.5796000777533445E-4	IMPLEMENTATION
//[RubyClass]	WITHOUT_CLASSIFICATION	0.9997800317177136	WITHOUT_CLASSIFICATION	2.1996828228652788E-4	IMPLEMENTATION
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9998420399922245	WITHOUT_CLASSIFICATION	1.5796000777533445E-4	IMPLEMENTATION
// if root of method is rescue, compile as a light rescue	WITHOUT_CLASSIFICATION	0.9998765581068739	WITHOUT_CLASSIFICATION	1.2344189312609504E-4	IMPLEMENTATION
// inspect body and args	WITHOUT_CLASSIFICATION	0.9998459865719521	WITHOUT_CLASSIFICATION	1.5401342804795252E-4	IMPLEMENTATION
// inspect body and args	WITHOUT_CLASSIFICATION	0.9998459865719521	WITHOUT_CLASSIFICATION	1.5401342804795252E-4	IMPLEMENTATION
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999503302616609	WITHOUT_CLASSIFICATION	4.9669738339182215E-5	IMPLEMENTATION
// if root of method is rescue, compile as light rescue	WITHOUT_CLASSIFICATION	0.9998707780775774	WITHOUT_CLASSIFICATION	1.2922192242261475E-4	IMPLEMENTATION
// invoke run with threadcontext and topself	WITHOUT_CLASSIFICATION	0.999886065586679	WITHOUT_CLASSIFICATION	1.1393441332088615E-4	IMPLEMENTATION
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9998938600022981	WITHOUT_CLASSIFICATION	1.0613999770192854E-4	IMPLEMENTATION
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9998926136880886	WITHOUT_CLASSIFICATION	1.0738631191139749E-4	IMPLEMENTATION
//[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9997800317177136	WITHOUT_CLASSIFICATION	2.1996828228652788E-4	IMPLEMENTATION
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.999873962386643	WITHOUT_CLASSIFICATION	1.2603761335709974E-4	IMPLEMENTATION
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.999873962386643	WITHOUT_CLASSIFICATION	1.2603761335709974E-4	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999289427278523	WITHOUT_CLASSIFICATION	7.10572721476615E-5	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999919366365505	WITHOUT_CLASSIFICATION	8.063363449556113E-6	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999919366365505	WITHOUT_CLASSIFICATION	8.063363449556113E-6	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9998733908977562	WITHOUT_CLASSIFICATION	1.2660910224382326E-4	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9998733908977562	WITHOUT_CLASSIFICATION	1.2660910224382326E-4	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9998733908977562	WITHOUT_CLASSIFICATION	1.2660910224382326E-4	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999919366365505	WITHOUT_CLASSIFICATION	8.063363449556113E-6	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999919366365505	WITHOUT_CLASSIFICATION	8.063363449556113E-6	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999289427278523	WITHOUT_CLASSIFICATION	7.10572721476615E-5	IMPLEMENTATION
// force heap-scope behavior, since it uses parent's scope	WITHOUT_CLASSIFICATION	0.9999197632253357	WITHOUT_CLASSIFICATION	8.023677466430637E-5	IMPLEMENTATION
// always false or nil	WITHOUT_CLASSIFICATION	0.9998601755448946	WITHOUT_CLASSIFICATION	1.3982445510544458E-4	IMPLEMENTATION
// optimizations if we know ahead of time it will always be true or false	WITHOUT_CLASSIFICATION	0.9999424634132734	WITHOUT_CLASSIFICATION	5.7536586726486595E-5	IMPLEMENTATION
// normal	WITHOUT_CLASSIFICATION	0.9959590128359297	WITHOUT_CLASSIFICATION	0.004040987164070301	IMPLEMENTATION
// compile condition as non-expr and just compile "then" body	WITHOUT_CLASSIFICATION	0.9999030546651038	WITHOUT_CLASSIFICATION	9.694533489622416E-5	IMPLEMENTATION
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9998840314847951	WITHOUT_CLASSIFICATION	1.1596851520491862E-4	IMPLEMENTATION
// just push nil for pragmas	WITHOUT_CLASSIFICATION	0.9998685272750143	WITHOUT_CLASSIFICATION	1.3147272498574436E-4	IMPLEMENTATION
// "assignment" means the value is already on the stack	WITHOUT_CLASSIFICATION	0.9999555932233009	WITHOUT_CLASSIFICATION	4.440677669916923E-5	IMPLEMENTATION
// compile first node only	WITHOUT_CLASSIFICATION	0.9998920427739896	WITHOUT_CLASSIFICATION	1.0795722601040737E-4	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999919366365505	WITHOUT_CLASSIFICATION	8.063363449556113E-6	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999919366365505	WITHOUT_CLASSIFICATION	8.063363449556113E-6	IMPLEMENTATION
// eval new value, call operator on old value, and assign	WITHOUT_CLASSIFICATION	0.9999003529052731	WITHOUT_CLASSIFICATION	9.964709472675822E-5	IMPLEMENTATION
// try optz version	WITHOUT_CLASSIFICATION	0.9998504777098735	WITHOUT_CLASSIFICATION	1.4952229012644907E-4	IMPLEMENTATION
// sizes must match	WITHOUT_CLASSIFICATION	0.999846573255748	WITHOUT_CLASSIFICATION	1.534267442519809E-4	IMPLEMENTATION
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999487405603197	WITHOUT_CLASSIFICATION	5.125943968040322E-5	IMPLEMENTATION
// normal items at the "head" of the masgn	WITHOUT_CLASSIFICATION	0.9999413597835026	WITHOUT_CLASSIFICATION	5.86402164972731E-5	IMPLEMENTATION
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999366040152513	WITHOUT_CLASSIFICATION	6.339598474866676E-5	IMPLEMENTATION
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9998856120586266	WITHOUT_CLASSIFICATION	1.143879413733546E-4	IMPLEMENTATION
// only supports simple parallel assignment of up to 10 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999750154744808	WITHOUT_CLASSIFICATION	2.4984525519280497E-5	IMPLEMENTATION
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999392888060181	WITHOUT_CLASSIFICATION	6.071119398179708E-5	IMPLEMENTATION
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999151290138691	WITHOUT_CLASSIFICATION	8.487098613084135E-5	IMPLEMENTATION
//RedoNode redoNode = (RedoNode)node;	WITHOUT_CLASSIFICATION	0.999840547557693	WITHOUT_CLASSIFICATION	1.5945244230701892E-4	IMPLEMENTATION
// done processing args	WITHOUT_CLASSIFICATION	0.9998969288005881	WITHOUT_CLASSIFICATION	1.0307119941186842E-4	IMPLEMENTATION
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.999887235908974	WITHOUT_CLASSIFICATION	1.127640910260499E-4	IMPLEMENTATION
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9997924990926478	WITHOUT_CLASSIFICATION	2.0750090735232758E-4	IMPLEMENTATION
// if arity 1, just compile the one element to save us the array cost	WITHOUT_CLASSIFICATION	0.9999547368755973	WITHOUT_CLASSIFICATION	4.526312440259027E-5	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
// compile into array	WITHOUT_CLASSIFICATION	0.9998772822876768	WITHOUT_CLASSIFICATION	1.2271771232322555E-4	IMPLEMENTATION
// compile first node as non-expr and compile second node	WITHOUT_CLASSIFICATION	0.9999289985220806	WITHOUT_CLASSIFICATION	7.100147791937854E-5	IMPLEMENTATION
// check if it's an immediate, and don't outline	WITHOUT_CLASSIFICATION	0.9999562753683566	WITHOUT_CLASSIFICATION	4.372463164341827E-5	IMPLEMENTATION
// condition is always true, just compile it and not body	WITHOUT_CLASSIFICATION	0.9999346518692888	WITHOUT_CLASSIFICATION	6.534813071128023E-5	IMPLEMENTATION
// force static scope to claim restarg at 0, so it only implements the [] version of __file__	WITHOUT_CLASSIFICATION	0.9975708961970327	WITHOUT_CLASSIFICATION	0.002429103802967336	IMPLEMENTATION
// create method for toplevel of script	WITHOUT_CLASSIFICATION	0.9999690547169574	WITHOUT_CLASSIFICATION	3.0945283042607665E-5	IMPLEMENTATION
// it's a multiple-statement body, iterate over all elements in turn and chain if it get too long	WITHOUT_CLASSIFICATION	0.9999489529660774	WITHOUT_CLASSIFICATION	5.104703392257826E-5	IMPLEMENTATION
// send it along as arity-specific, we don't need the array	WITHOUT_CLASSIFICATION	0.9999439658140529	WITHOUT_CLASSIFICATION	5.603418594718687E-5	IMPLEMENTATION
// single-statement body, just compile it	WITHOUT_CLASSIFICATION	0.9998964805476869	WITHOUT_CLASSIFICATION	1.0351945231304281E-4	IMPLEMENTATION
// leave as a normal array	WITHOUT_CLASSIFICATION	0.9998668228031062	WITHOUT_CLASSIFICATION	1.331771968938369E-4	IMPLEMENTATION
// This method has JITed already or has been abandoned. Bail out.	WITHOUT_CLASSIFICATION	0.9999344236513975	WITHOUT_CLASSIFICATION	6.55763486025109E-5	IMPLEMENTATION
// The cache is full. Abandon JIT for this method and bail out.	WITHOUT_CLASSIFICATION	0.9998858128911859	WITHOUT_CLASSIFICATION	1.1418710881399671E-4	IMPLEMENTATION
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999503302616609	WITHOUT_CLASSIFICATION	4.9669738339182215E-5	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999919366365505	WITHOUT_CLASSIFICATION	8.063363449556113E-6	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999919366365505	WITHOUT_CLASSIFICATION	8.063363449556113E-6	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999289427278523	WITHOUT_CLASSIFICATION	7.10572721476615E-5	IMPLEMENTATION
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9998840314847951	WITHOUT_CLASSIFICATION	1.1596851520491862E-4	IMPLEMENTATION
// try optz version	WITHOUT_CLASSIFICATION	0.9998504777098735	WITHOUT_CLASSIFICATION	1.4952229012644907E-4	IMPLEMENTATION
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999487405603197	WITHOUT_CLASSIFICATION	5.125943968040322E-5	IMPLEMENTATION
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999366040152513	WITHOUT_CLASSIFICATION	6.339598474866676E-5	IMPLEMENTATION
// sizes must match	WITHOUT_CLASSIFICATION	0.999846573255748	WITHOUT_CLASSIFICATION	1.534267442519809E-4	IMPLEMENTATION
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9998856120586266	WITHOUT_CLASSIFICATION	1.143879413733546E-4	IMPLEMENTATION
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999151290138691	WITHOUT_CLASSIFICATION	8.487098613084135E-5	IMPLEMENTATION
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999392888060181	WITHOUT_CLASSIFICATION	6.071119398179708E-5	IMPLEMENTATION
// done processing args	WITHOUT_CLASSIFICATION	0.9998969288005881	WITHOUT_CLASSIFICATION	1.0307119941186842E-4	IMPLEMENTATION
// Check if the method has been explicitly excluded	WITHOUT_CLASSIFICATION	0.9999735335282579	WITHOUT_CLASSIFICATION	2.6466471742103443E-5	IMPLEMENTATION
// class could not be found nor generated; give up on JIT and bail out	WITHOUT_CLASSIFICATION	0.9999165191999412	WITHOUT_CLASSIFICATION	8.348080005876736E-5	IMPLEMENTATION
// successfully got back a jitted method	WITHOUT_CLASSIFICATION	0.9999694772328205	WITHOUT_CLASSIFICATION	3.0522767179489136E-5	IMPLEMENTATION
// finally, grab the script	WITHOUT_CLASSIFICATION	0.9999022277395833	WITHOUT_CLASSIFICATION	9.777226041670275E-5	IMPLEMENTATION
// logEvery n methods based on configuration	WITHOUT_CLASSIFICATION	0.9999502485227689	WITHOUT_CLASSIFICATION	4.975147723108817E-5	IMPLEMENTATION
// Time the compilation	WITHOUT_CLASSIFICATION	0.9998904501580692	WITHOUT_CLASSIFICATION	1.0954984193078302E-4	IMPLEMENTATION
// we have a body, do a full-on method	WITHOUT_CLASSIFICATION	0.9999206251729081	WITHOUT_CLASSIFICATION	7.937482709188813E-5	IMPLEMENTATION
// If we don't have a body, check for required or opt args // if opt args, they could have side effects // if required args, need to raise errors if too few args passed // otherwise, method does nothing, make it a nop	WITHOUT_CLASSIFICATION	0.999983621707835	WITHOUT_CLASSIFICATION	1.637829216508399E-5	IMPLEMENTATION
// if we haven't already decided on a do-nothing call	WITHOUT_CLASSIFICATION	0.9999706592805181	WITHOUT_CLASSIFICATION	2.9340719481878864E-5	IMPLEMENTATION
// only supports simple parallel assignment of up to 4 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999762526541657	WITHOUT_CLASSIFICATION	2.3747345834337494E-5	IMPLEMENTATION
// normal items at the front or back of the masgn	WITHOUT_CLASSIFICATION	0.9999448956580118	WITHOUT_CLASSIFICATION	5.5104341988259014E-5	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999313639760286	WITHOUT_CLASSIFICATION	6.863602397143855E-5	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9998884872263449	WITHOUT_CLASSIFICATION	1.1151277365499667E-4	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999210867390891	WITHOUT_CLASSIFICATION	7.891326091092653E-5	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999887373119066	WITHOUT_CLASSIFICATION	1.1262688093442136E-5	IMPLEMENTATION
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999321010066814	WITHOUT_CLASSIFICATION	6.789899331854549E-5	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.999900388269468	WITHOUT_CLASSIFICATION	9.961173053190796E-5	IMPLEMENTATION
// Define the annotation for the method	WITHOUT_CLASSIFICATION	0.9999570508316192	WITHOUT_CLASSIFICATION	4.294916838081747E-5	IMPLEMENTATION
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.999949445380916	WITHOUT_CLASSIFICATION	5.0554619083943436E-5	IMPLEMENTATION
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999471059352186	WITHOUT_CLASSIFICATION	5.2894064781503145E-5	IMPLEMENTATION
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999275647093346	WITHOUT_CLASSIFICATION	7.243529066534212E-5	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999265582696824	WITHOUT_CLASSIFICATION	7.344173031759369E-5	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999265582696824	WITHOUT_CLASSIFICATION	7.344173031759369E-5	IMPLEMENTATION
// value is already on stack, save it for later	WITHOUT_CLASSIFICATION	0.999935873811311	WITHOUT_CLASSIFICATION	6.412618868892562E-5	IMPLEMENTATION
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9998553310437089	WITHOUT_CLASSIFICATION	1.4466895629107498E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997836329522806	WITHOUT_CLASSIFICATION	2.1636704771931127E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997836329522806	WITHOUT_CLASSIFICATION	2.1636704771931127E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997836329522806	WITHOUT_CLASSIFICATION	2.1636704771931127E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
/*arg2*/	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
/*args*/	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9998553310437089	WITHOUT_CLASSIFICATION	1.4466895629107498E-4	IMPLEMENTATION
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999635283876597	WITHOUT_CLASSIFICATION	3.647161234030862E-5	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997836329522806	WITHOUT_CLASSIFICATION	2.1636704771931127E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997836329522806	WITHOUT_CLASSIFICATION	2.1636704771931127E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
/*args*/	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999316442041454	WITHOUT_CLASSIFICATION	6.835579585470807E-5	IMPLEMENTATION
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999316442041454	WITHOUT_CLASSIFICATION	6.835579585470807E-5	IMPLEMENTATION
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9998774756504673	WITHOUT_CLASSIFICATION	1.22524349532776E-4	IMPLEMENTATION
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9998774756504673	WITHOUT_CLASSIFICATION	1.22524349532776E-4	IMPLEMENTATION
// invoke	WITHOUT_CLASSIFICATION	0.9963942117795418	WITHOUT_CLASSIFICATION	0.0036057882204581057	IMPLEMENTATION
// invoke	WITHOUT_CLASSIFICATION	0.9963942117795418	WITHOUT_CLASSIFICATION	0.0036057882204581057	IMPLEMENTATION
// check if it's true, ending if so	WITHOUT_CLASSIFICATION	0.9999369320840313	WITHOUT_CLASSIFICATION	6.30679159685742E-5	IMPLEMENTATION
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9997357761536058	WITHOUT_CLASSIFICATION	2.6422384639423135E-4	IMPLEMENTATION
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9997357761536058	WITHOUT_CLASSIFICATION	2.6422384639423135E-4	IMPLEMENTATION
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9998997285799104	WITHOUT_CLASSIFICATION	1.0027142008959743E-4	IMPLEMENTATION
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9998997285799104	WITHOUT_CLASSIFICATION	1.0027142008959743E-4	IMPLEMENTATION
// eval value for assignment	WITHOUT_CLASSIFICATION	0.9999064493279256	WITHOUT_CLASSIFICATION	9.355067207431331E-5	IMPLEMENTATION
// call site	WITHOUT_CLASSIFICATION	0.9997926755364102	WITHOUT_CLASSIFICATION	2.0732446358989975E-4	IMPLEMENTATION
// call site	WITHOUT_CLASSIFICATION	0.9997926755364102	WITHOUT_CLASSIFICATION	2.0732446358989975E-4	IMPLEMENTATION
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.999908175520213	WITHOUT_CLASSIFICATION	9.182447978695597E-5	IMPLEMENTATION
// check if it's true, ending if not	WITHOUT_CLASSIFICATION	0.9999405190677184	WITHOUT_CLASSIFICATION	5.948093228160612E-5	IMPLEMENTATION
// eval value and save it	WITHOUT_CLASSIFICATION	0.9999026180563076	WITHOUT_CLASSIFICATION	9.738194369237551E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.999908175520213	WITHOUT_CLASSIFICATION	9.182447978695597E-5	IMPLEMENTATION
// receiver, args, result, value	WITHOUT_CLASSIFICATION	0.9998968090772832	WITHOUT_CLASSIFICATION	1.031909227168265E-4	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9997753273815582	WITHOUT_CLASSIFICATION	2.2467261844173633E-4	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9997753273815582	WITHOUT_CLASSIFICATION	2.2467261844173633E-4	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9997753273815582	WITHOUT_CLASSIFICATION	2.2467261844173633E-4	IMPLEMENTATION
// super uses current block if none given	WITHOUT_CLASSIFICATION	0.9999174478470343	WITHOUT_CLASSIFICATION	8.255215296573972E-5	IMPLEMENTATION
// args	WITHOUT_CLASSIFICATION	0.9955004223583288	WITHOUT_CLASSIFICATION	0.00449957764167111	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9952856502833631	WITHOUT_CLASSIFICATION	0.004714349716636949	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9952856502833631	WITHOUT_CLASSIFICATION	0.004714349716636949	IMPLEMENTATION
// no args, no block	WITHOUT_CLASSIFICATION	0.999824388906795	WITHOUT_CLASSIFICATION	1.7561109320492313E-4	IMPLEMENTATION
// no args, with block	WITHOUT_CLASSIFICATION	0.9998660184757964	WITHOUT_CLASSIFICATION	1.3398152420354806E-4	IMPLEMENTATION
// with args, no block	WITHOUT_CLASSIFICATION	0.9998536509558879	WITHOUT_CLASSIFICATION	1.4634904411214242E-4	IMPLEMENTATION
// with args, with block	WITHOUT_CLASSIFICATION	0.9998458150537322	WITHOUT_CLASSIFICATION	1.5418494626793478E-4	IMPLEMENTATION
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9998297518174004	WITHOUT_CLASSIFICATION	1.7024818259964465E-4	IMPLEMENTATION
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9998713030590058	WITHOUT_CLASSIFICATION	1.28696940994199E-4	IMPLEMENTATION
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9998713030590058	WITHOUT_CLASSIFICATION	1.28696940994199E-4	IMPLEMENTATION
// arg and receiver already present on the stack	WITHOUT_CLASSIFICATION	0.9998868355477796	WITHOUT_CLASSIFICATION	1.1316445222052802E-4	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9997753273815582	WITHOUT_CLASSIFICATION	2.2467261844173633E-4	IMPLEMENTATION
// args	WITHOUT_CLASSIFICATION	0.9955004223583288	WITHOUT_CLASSIFICATION	0.00449957764167111	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9952856502833631	WITHOUT_CLASSIFICATION	0.004714349716636949	IMPLEMENTATION
// no args, no block	WITHOUT_CLASSIFICATION	0.999824388906795	WITHOUT_CLASSIFICATION	1.7561109320492313E-4	IMPLEMENTATION
// no args, with block	WITHOUT_CLASSIFICATION	0.9998660184757964	WITHOUT_CLASSIFICATION	1.3398152420354806E-4	IMPLEMENTATION
// with args, no block	WITHOUT_CLASSIFICATION	0.9998536509558879	WITHOUT_CLASSIFICATION	1.4634904411214242E-4	IMPLEMENTATION
// with args, with block	WITHOUT_CLASSIFICATION	0.9998458150537322	WITHOUT_CLASSIFICATION	1.5418494626793478E-4	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
// retrieve scope from scopes array	WITHOUT_CLASSIFICATION	0.9999530214727476	WITHOUT_CLASSIFICATION	4.69785272523446E-5	IMPLEMENTATION
// use numbered access method	WITHOUT_CLASSIFICATION	0.9998829383755	WITHOUT_CLASSIFICATION	1.1706162450005147E-4	IMPLEMENTATION
// retrieve call site from sites array	WITHOUT_CLASSIFICATION	0.9999481871771827	WITHOUT_CLASSIFICATION	5.18128228172672E-5	IMPLEMENTATION
// add name to call site list	WITHOUT_CLASSIFICATION	0.9999226833830496	WITHOUT_CLASSIFICATION	7.731661695047609E-5	IMPLEMENTATION
// module is on top of stack	WITHOUT_CLASSIFICATION	0.999861000476655	WITHOUT_CLASSIFICATION	1.3899952334483505E-4	IMPLEMENTATION
// build scope names string	WITHOUT_CLASSIFICATION	0.999914695580572	WITHOUT_CLASSIFICATION	8.530441942795842E-5	IMPLEMENTATION
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999238568829167	WITHOUT_CLASSIFICATION	7.614311708323804E-5	IMPLEMENTATION
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999238568829167	WITHOUT_CLASSIFICATION	7.614311708323804E-5	IMPLEMENTATION
// generate call sites initialization code	WITHOUT_CLASSIFICATION	0.9999783696551582	WITHOUT_CLASSIFICATION	2.1630344841770883E-5	IMPLEMENTATION
// generate symbols initialization code	WITHOUT_CLASSIFICATION	0.999979808961494	WITHOUT_CLASSIFICATION	2.0191038505931557E-5	IMPLEMENTATION
// generate fixnums initialization code	WITHOUT_CLASSIFICATION	0.9999801019378196	WITHOUT_CLASSIFICATION	1.9898062180301677E-5	IMPLEMENTATION
// generate constants initialization code	WITHOUT_CLASSIFICATION	0.9999846862847778	WITHOUT_CLASSIFICATION	1.53137152222963E-5	IMPLEMENTATION
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999800015861561	WITHOUT_CLASSIFICATION	1.999841384396763E-5	IMPLEMENTATION
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999800015861561	WITHOUT_CLASSIFICATION	1.999841384396763E-5	IMPLEMENTATION
// generate variable readers initialization code	WITHOUT_CLASSIFICATION	0.9999788253625015	WITHOUT_CLASSIFICATION	2.1174637498514512E-5	IMPLEMENTATION
// generate variable writers initialization code	WITHOUT_CLASSIFICATION	0.9999795162342558	WITHOUT_CLASSIFICATION	2.0483765744201297E-5	IMPLEMENTATION
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999793125779661	WITHOUT_CLASSIFICATION	2.068742203386302E-5	IMPLEMENTATION
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999793125779661	WITHOUT_CLASSIFICATION	2.068742203386302E-5	IMPLEMENTATION
// generate bytelists initialization code	WITHOUT_CLASSIFICATION	0.9999799872257734	WITHOUT_CLASSIFICATION	2.0012774226486918E-5	IMPLEMENTATION
// generate method cache initialization code	WITHOUT_CLASSIFICATION	0.999977476148221	WITHOUT_CLASSIFICATION	2.2523851778993656E-5	IMPLEMENTATION
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9998297518174004	WITHOUT_CLASSIFICATION	1.7024818259964465E-4	IMPLEMENTATION
// use IRubyObject[]	WITHOUT_CLASSIFICATION	0.99984500857358	WITHOUT_CLASSIFICATION	1.5499142641992137E-4	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999896216849682	WITHOUT_CLASSIFICATION	1.037831503176309E-5	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999269309308348	WITHOUT_CLASSIFICATION	7.30690691650939E-5	IMPLEMENTATION
// No point in updating number if last number was same value.	WITHOUT_CLASSIFICATION	0.9999331077424035	WITHOUT_CLASSIFICATION	6.689225759652532E-5	IMPLEMENTATION
// load Object under value	WITHOUT_CLASSIFICATION	0.999934641686374	WITHOUT_CLASSIFICATION	6.53583136259582E-5	IMPLEMENTATION
// put under object array already present	WITHOUT_CLASSIFICATION	0.9999244828898018	WITHOUT_CLASSIFICATION	7.551711019815825E-5	IMPLEMENTATION
// if element count is less than 6, use helper methods	WITHOUT_CLASSIFICATION	0.9999611824059933	WITHOUT_CLASSIFICATION	3.8817594006720186E-5	IMPLEMENTATION
// This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements	WITHOUT_CLASSIFICATION	0.9999769537613056	WITHOUT_CLASSIFICATION	2.3046238694396428E-5	IMPLEMENTATION
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999613727530386	WITHOUT_CLASSIFICATION	3.862724696134367E-5	IMPLEMENTATION
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999613727530386	WITHOUT_CLASSIFICATION	3.862724696134367E-5	IMPLEMENTATION
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9998893977885064	WITHOUT_CLASSIFICATION	1.1060221149356352E-4	IMPLEMENTATION
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9998893977885064	WITHOUT_CLASSIFICATION	1.1060221149356352E-4	IMPLEMENTATION
// use specific-arity for as much as possible	WITHOUT_CLASSIFICATION	0.999913108361879	WITHOUT_CLASSIFICATION	8.68916381210107E-5	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9998903869783871	WITHOUT_CLASSIFICATION	1.0961302161299199E-4	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9998903869783871	WITHOUT_CLASSIFICATION	1.0961302161299199E-4	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9998903869783871	WITHOUT_CLASSIFICATION	1.0961302161299199E-4	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9998539810057834	WITHOUT_CLASSIFICATION	1.460189942166228E-4	IMPLEMENTATION
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999116802753062	WITHOUT_CLASSIFICATION	8.831972469389538E-5	IMPLEMENTATION
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999116802753062	WITHOUT_CLASSIFICATION	8.831972469389538E-5	IMPLEMENTATION
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999756688773904	WITHOUT_CLASSIFICATION	2.433112260959476E-5	IMPLEMENTATION
// check the condition	WITHOUT_CLASSIFICATION	0.9999274415357776	WITHOUT_CLASSIFICATION	7.255846422240324E-5	IMPLEMENTATION
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.999829413210234	WITHOUT_CLASSIFICATION	1.705867897658795E-4	IMPLEMENTATION
// skip catch block	WITHOUT_CLASSIFICATION	0.9997543389273322	WITHOUT_CLASSIFICATION	2.456610726677913E-4	IMPLEMENTATION
// catch logic for flow-control: next, break	WITHOUT_CLASSIFICATION	0.9998591287789905	WITHOUT_CLASSIFICATION	1.4087122100939916E-4	IMPLEMENTATION
// next jump	WITHOUT_CLASSIFICATION	0.9997882496165363	WITHOUT_CLASSIFICATION	2.1175038346365912E-4	IMPLEMENTATION
// exceptionNext target is for a next that doesn't push a new value, like this one	WITHOUT_CLASSIFICATION	0.9999375396084104	WITHOUT_CLASSIFICATION	6.246039158960007E-5	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9998884872263449	WITHOUT_CLASSIFICATION	1.1151277365499667E-4	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9998884872263449	WITHOUT_CLASSIFICATION	1.1151277365499667E-4	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9998539810057834	WITHOUT_CLASSIFICATION	1.460189942166228E-4	IMPLEMENTATION
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999756688773904	WITHOUT_CLASSIFICATION	2.433112260959476E-5	IMPLEMENTATION
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.999944451632764	WITHOUT_CLASSIFICATION	5.5548367235980446E-5	IMPLEMENTATION
// check the condition	WITHOUT_CLASSIFICATION	0.9999274415357776	WITHOUT_CLASSIFICATION	7.255846422240324E-5	IMPLEMENTATION
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.999829413210234	WITHOUT_CLASSIFICATION	1.705867897658795E-4	IMPLEMENTATION
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.999931255822222	WITHOUT_CLASSIFICATION	6.874417777799287E-5	IMPLEMENTATION
// break jump	WITHOUT_CLASSIFICATION	0.9999133235785572	WITHOUT_CLASSIFICATION	8.66764214427505E-5	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9998846364280357	WITHOUT_CLASSIFICATION	1.1536357196427362E-4	IMPLEMENTATION
//[reg]	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
// for regular expressions with the /o flag	WITHOUT_CLASSIFICATION	0.9995121717159909	WITHOUT_CLASSIFICATION	4.8782828400908626E-4	IMPLEMENTATION
// inside a loop, jump to body	WITHOUT_CLASSIFICATION	0.9998402864991037	WITHOUT_CLASSIFICATION	1.5971350089623122E-4	IMPLEMENTATION
// inside a loop, jump to conditional	WITHOUT_CLASSIFICATION	0.9998737478719854	WITHOUT_CLASSIFICATION	1.262521280146316E-4	IMPLEMENTATION
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.999931255822222	WITHOUT_CLASSIFICATION	6.874417777799287E-5	IMPLEMENTATION
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999765699424528	WITHOUT_CLASSIFICATION	2.343005754720191E-5	IMPLEMENTATION
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999765699424528	WITHOUT_CLASSIFICATION	2.343005754720191E-5	IMPLEMENTATION
// if more than 4 vars, get values array too	WITHOUT_CLASSIFICATION	0.9999190800859116	WITHOUT_CLASSIFICATION	8.091991408849972E-5	IMPLEMENTATION
// retry handling in the rescue block	WITHOUT_CLASSIFICATION	0.9999083633777095	WITHOUT_CLASSIFICATION	9.16366222905561E-5	IMPLEMENTATION
// any exceptions raised must continue to be raised, skipping $! restoration	WITHOUT_CLASSIFICATION	0.9999370443542277	WITHOUT_CLASSIFICATION	6.295564577220619E-5	IMPLEMENTATION
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9999165706772016	WITHOUT_CLASSIFICATION	8.342932279843733E-5	IMPLEMENTATION
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999643841897828	WITHOUT_CLASSIFICATION	3.5615810217152366E-5	IMPLEMENTATION
// Handle Flow exceptions, just propagating them	WITHOUT_CLASSIFICATION	0.9999357250170026	WITHOUT_CLASSIFICATION	6.427498299748235E-5	IMPLEMENTATION
// rethrow to outer flow catcher	WITHOUT_CLASSIFICATION	0.9998762375861704	WITHOUT_CLASSIFICATION	1.2376241382951438E-4	IMPLEMENTATION
// Handle Ruby exceptions (RaiseException)	WITHOUT_CLASSIFICATION	0.9999373597649035	WITHOUT_CLASSIFICATION	6.264023509646471E-5	IMPLEMENTATION
// inside a loop, break out of it // go to end of loop, leaving break value on stack	WITHOUT_CLASSIFICATION	0.99991804930464	WITHOUT_CLASSIFICATION	8.195069535993436E-5	IMPLEMENTATION
// false // zero	WITHOUT_CLASSIFICATION	0.9998530175835826	WITHOUT_CLASSIFICATION	1.469824164175098E-4	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999267191749611	WITHOUT_CLASSIFICATION	7.328082503882228E-5	IMPLEMENTATION
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9999165706772016	WITHOUT_CLASSIFICATION	8.342932279843733E-5	IMPLEMENTATION
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999643841897828	WITHOUT_CLASSIFICATION	3.5615810217152366E-5	IMPLEMENTATION
// retry handling in the rescue blocks	WITHOUT_CLASSIFICATION	0.999909403176959	WITHOUT_CLASSIFICATION	9.059682304098688E-5	IMPLEMENTATION
// push false	WITHOUT_CLASSIFICATION	0.9997978773369206	WITHOUT_CLASSIFICATION	2.0212266307927964E-4	IMPLEMENTATION
//method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));	WITHOUT_CLASSIFICATION	0.9999570473931715	WITHOUT_CLASSIFICATION	4.295260682846991E-5	IMPLEMENTATION
//method.ifnonnull(trueLabel);	WITHOUT_CLASSIFICATION	0.9998388822310964	WITHOUT_CLASSIFICATION	1.6111776890372014E-4	IMPLEMENTATION
// EQ == 0 (i.e. false)   //[C]	WITHOUT_CLASSIFICATION	0.99986425523227	WITHOUT_CLASSIFICATION	1.3574476773000113E-4	IMPLEMENTATION
//[C, C] //[C, C, String] //[C, null|C]	WITHOUT_CLASSIFICATION	0.9998710912368017	WITHOUT_CLASSIFICATION	1.2890876319823752E-4	IMPLEMENTATION
//[C]	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
// push true	WITHOUT_CLASSIFICATION	0.9997801761837306	WITHOUT_CLASSIFICATION	2.198238162693292E-4	IMPLEMENTATION
// EQ != 0 (i.e. true)	WITHOUT_CLASSIFICATION	0.9998293638483609	WITHOUT_CLASSIFICATION	1.7063615163920767E-4	IMPLEMENTATION
//[?, ?] //[?, boolean]	WITHOUT_CLASSIFICATION	0.9998783802521081	WITHOUT_CLASSIFICATION	1.2161974789191713E-4	IMPLEMENTATION
//[RubyModule] //[RubyModule, String]	WITHOUT_CLASSIFICATION	0.9998717699011903	WITHOUT_CLASSIFICATION	1.2823009880964814E-4	IMPLEMENTATION
//[boolean]	WITHOUT_CLASSIFICATION	0.9998154737366279	WITHOUT_CLASSIFICATION	1.8452626337202302E-4	IMPLEMENTATION
// no receiver for singleton class	WITHOUT_CLASSIFICATION	0.9999086606081363	WITHOUT_CLASSIFICATION	9.133939186374291E-5	IMPLEMENTATION
// but there's a superclass passed in, use it	WITHOUT_CLASSIFICATION	0.9999190677334059	WITHOUT_CLASSIFICATION	8.093226659411032E-5	IMPLEMENTATION
// we re-set self to the class, but store the old self in a temporary local variable // this is to prevent it GCing in case the singleton is short-lived	WITHOUT_CLASSIFICATION	0.9999943095085323	WITHOUT_CLASSIFICATION	5.690491467669711E-6	IMPLEMENTATION
// set self to the class	WITHOUT_CLASSIFICATION	0.9999642938529998	WITHOUT_CLASSIFICATION	3.570614700017508E-5	IMPLEMENTATION
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9997895812869408	WITHOUT_CLASSIFICATION	2.1041871305922847E-4	IMPLEMENTATION
// static scope	WITHOUT_CLASSIFICATION	0.9998289698680765	WITHOUT_CLASSIFICATION	1.7103013192343086E-4	IMPLEMENTATION
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999645443358643	WITHOUT_CLASSIFICATION	3.5455664135766E-5	IMPLEMENTATION
// new instance to invoke run against	WITHOUT_CLASSIFICATION	0.9999189931606314	WITHOUT_CLASSIFICATION	8.100683936852415E-5	IMPLEMENTATION
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9997895812869408	WITHOUT_CLASSIFICATION	2.1041871305922847E-4	IMPLEMENTATION
// static scope	WITHOUT_CLASSIFICATION	0.9998289698680765	WITHOUT_CLASSIFICATION	1.7103013192343086E-4	IMPLEMENTATION
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999645443358643	WITHOUT_CLASSIFICATION	3.5455664135766E-5	IMPLEMENTATION
// finally with exception	WITHOUT_CLASSIFICATION	0.9999174736003613	WITHOUT_CLASSIFICATION	8.252639963864897E-5	IMPLEMENTATION
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999328769594132	WITHOUT_CLASSIFICATION	6.712304058681383E-5	IMPLEMENTATION
// otherwise, there's a receiver, so we pass that in directly for the sclass logic	WITHOUT_CLASSIFICATION	0.9999624569364464	WITHOUT_CLASSIFICATION	3.754306355373176E-5	IMPLEMENTATION
// original exception is on stack	WITHOUT_CLASSIFICATION	0.9999390175017508	WITHOUT_CLASSIFICATION	6.098249824923589E-5	IMPLEMENTATION
// RaiseException is on stack, get RubyException out	WITHOUT_CLASSIFICATION	0.9999322692562298	WITHOUT_CLASSIFICATION	6.773074377024716E-5	IMPLEMENTATION
// updating position for same line; skip	WITHOUT_CLASSIFICATION	0.9999489968540785	WITHOUT_CLASSIFICATION	5.100314592169197E-5	IMPLEMENTATION
// callbacks to fill in method body	WITHOUT_CLASSIFICATION	0.9998161348691469	WITHOUT_CLASSIFICATION	1.8386513085319494E-4	IMPLEMENTATION
// prepare to call "def" utility method to handle def logic	WITHOUT_CLASSIFICATION	0.9998418853758154	WITHOUT_CLASSIFICATION	1.581146241844596E-4	IMPLEMENTATION
// script object	WITHOUT_CLASSIFICATION	0.9998574423917896	WITHOUT_CLASSIFICATION	1.4255760821038966E-4	IMPLEMENTATION
// arities	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
// TODO assuming case is a fixnum	WITHOUT_CLASSIFICATION	0.9900568847669277	WITHOUT_CLASSIFICATION	0.009943115233072248	IMPLEMENTATION
// we have an input case, prepare branching logic	WITHOUT_CLASSIFICATION	0.9998860720218564	WITHOUT_CLASSIFICATION	1.139279781435311E-4	IMPLEMENTATION
// we have optimized switch cases, build a lookupswitch	WITHOUT_CLASSIFICATION	0.9998214121355145	WITHOUT_CLASSIFICATION	1.785878644856285E-4	IMPLEMENTATION
// checkcast the value; if match, fast path; otherwise proceed to slow logic	WITHOUT_CLASSIFICATION	0.9999577276703008	WITHOUT_CLASSIFICATION	4.2272329699183066E-5	IMPLEMENTATION
// expression-based tests + bodies	WITHOUT_CLASSIFICATION	0.9998562780828865	WITHOUT_CLASSIFICATION	1.4372191711351914E-4	IMPLEMENTATION
// normal case, create a new label	WITHOUT_CLASSIFICATION	0.9999708584511454	WITHOUT_CLASSIFICATION	2.9141548854519397E-5	IMPLEMENTATION
// last conditional case, use defaultCase	WITHOUT_CLASSIFICATION	0.9999405415980299	WITHOUT_CLASSIFICATION	5.9458401970099376E-5	IMPLEMENTATION
// do nothing; arity check is done before call	WITHOUT_CLASSIFICATION	0.999969658709161	WITHOUT_CLASSIFICATION	3.0341290838966855E-5	IMPLEMENTATION
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9998890212567701	WITHOUT_CLASSIFICATION	1.1097874322986485E-4	IMPLEMENTATION
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9998852259108232	WITHOUT_CLASSIFICATION	1.1477408917688712E-4	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.9999022328444176	WITHOUT_CLASSIFICATION	9.776715558234027E-5	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.999879656552262	WITHOUT_CLASSIFICATION	1.2034344773800991E-4	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.999879656552262	WITHOUT_CLASSIFICATION	1.2034344773800991E-4	IMPLEMENTATION
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9998998618595423	WITHOUT_CLASSIFICATION	1.0013814045766385E-4	IMPLEMENTATION
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9998998618595423	WITHOUT_CLASSIFICATION	1.0013814045766385E-4	IMPLEMENTATION
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.999923279222157	WITHOUT_CLASSIFICATION	7.672077784298861E-5	IMPLEMENTATION
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.999923279222157	WITHOUT_CLASSIFICATION	7.672077784298861E-5	IMPLEMENTATION
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999461855082754	WITHOUT_CLASSIFICATION	5.3814491724548364E-5	IMPLEMENTATION
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999613991243014	WITHOUT_CLASSIFICATION	3.860087569856756E-5	IMPLEMENTATION
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999400719507584	WITHOUT_CLASSIFICATION	5.992804924162488E-5	IMPLEMENTATION
// if there's args left and we want them, assign to rest arg	WITHOUT_CLASSIFICATION	0.9999038866167462	WITHOUT_CLASSIFICATION	9.611338325387055E-5	IMPLEMENTATION
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999567174831178	WITHOUT_CLASSIFICATION	4.328251688216404E-5	IMPLEMENTATION
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999061145948784	WITHOUT_CLASSIFICATION	9.388540512159346E-5	IMPLEMENTATION
// first, iterate over all pre args	WITHOUT_CLASSIFICATION	0.9999155273460941	WITHOUT_CLASSIFICATION	8.447265390590334E-5	IMPLEMENTATION
// then optional args	WITHOUT_CLASSIFICATION	0.9999020726619475	WITHOUT_CLASSIFICATION	9.792733805243758E-5	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9998884872263449	WITHOUT_CLASSIFICATION	1.1151277365499667E-4	IMPLEMENTATION
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999461855082754	WITHOUT_CLASSIFICATION	5.3814491724548364E-5	IMPLEMENTATION
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999613991243014	WITHOUT_CLASSIFICATION	3.860087569856756E-5	IMPLEMENTATION
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999400719507584	WITHOUT_CLASSIFICATION	5.992804924162488E-5	IMPLEMENTATION
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999567174831178	WITHOUT_CLASSIFICATION	4.328251688216404E-5	IMPLEMENTATION
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999061145948784	WITHOUT_CLASSIFICATION	9.388540512159346E-5	IMPLEMENTATION
// if rest args, excluding post args	WITHOUT_CLASSIFICATION	0.9998800914745426	WITHOUT_CLASSIFICATION	1.1990852545738715E-4	IMPLEMENTATION
// finally, post args	WITHOUT_CLASSIFICATION	0.999870484342014	WITHOUT_CLASSIFICATION	1.295156579860347E-4	IMPLEMENTATION
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9997406783047409	WITHOUT_CLASSIFICATION	2.593216952590653E-4	IMPLEMENTATION
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9997406783047409	WITHOUT_CLASSIFICATION	2.593216952590653E-4	IMPLEMENTATION
// unwrap scopes to appropriate depth	WITHOUT_CLASSIFICATION	0.9998276312917287	WITHOUT_CLASSIFICATION	1.7236870827137815E-4	IMPLEMENTATION
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.999874139585549	WITHOUT_CLASSIFICATION	1.258604144509563E-4	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.999956585040214	WITHOUT_CLASSIFICATION	4.34149597860753E-5	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9998934464200038	WITHOUT_CLASSIFICATION	1.0655357999624761E-4	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9998934464200038	WITHOUT_CLASSIFICATION	1.0655357999624761E-4	IMPLEMENTATION
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.999891423953907	WITHOUT_CLASSIFICATION	1.0857604609309874E-4	IMPLEMENTATION
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999152363180971	WITHOUT_CLASSIFICATION	8.476368190294168E-5	IMPLEMENTATION
// store the local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999498454259318	WITHOUT_CLASSIFICATION	5.0154574068172144E-5	IMPLEMENTATION
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999343567666703	WITHOUT_CLASSIFICATION	6.564323332962417E-5	IMPLEMENTATION
// return in a class body raises error	WITHOUT_CLASSIFICATION	0.9999882463842544	WITHOUT_CLASSIFICATION	1.1753615745554714E-5	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999210867390891	WITHOUT_CLASSIFICATION	7.891326091092653E-5	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999887373119066	WITHOUT_CLASSIFICATION	1.1262688093442136E-5	IMPLEMENTATION
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999321010066814	WITHOUT_CLASSIFICATION	6.789899331854549E-5	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.999900388269468	WITHOUT_CLASSIFICATION	9.961173053190796E-5	IMPLEMENTATION
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999471059352186	WITHOUT_CLASSIFICATION	5.2894064781503145E-5	IMPLEMENTATION
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999275647093346	WITHOUT_CLASSIFICATION	7.243529066534212E-5	IMPLEMENTATION
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.999891423953907	WITHOUT_CLASSIFICATION	1.0857604609309874E-4	IMPLEMENTATION
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999152363180971	WITHOUT_CLASSIFICATION	8.476368190294168E-5	IMPLEMENTATION
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999343567666703	WITHOUT_CLASSIFICATION	6.564323332962417E-5	IMPLEMENTATION
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9998785597157323	WITHOUT_CLASSIFICATION	1.2144028426780281E-4	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.999956585040214	WITHOUT_CLASSIFICATION	4.34149597860753E-5	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.999956585040214	WITHOUT_CLASSIFICATION	4.34149597860753E-5	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999267191749611	WITHOUT_CLASSIFICATION	7.328082503882228E-5	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999267191749611	WITHOUT_CLASSIFICATION	7.328082503882228E-5	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.999886113483761	WITHOUT_CLASSIFICATION	1.1388651623907623E-4	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.999886113483761	WITHOUT_CLASSIFICATION	1.1388651623907623E-4	IMPLEMENTATION
// store the local vars in a local variable if there are any	WITHOUT_CLASSIFICATION	0.9999809908562252	WITHOUT_CLASSIFICATION	1.900914377491639E-5	IMPLEMENTATION
// if more than 4 locals, get and populate the locals array too	WITHOUT_CLASSIFICATION	0.9999282926387467	WITHOUT_CLASSIFICATION	7.17073612532641E-5	IMPLEMENTATION
// fill local vars with nil, to avoid checking every access.	WITHOUT_CLASSIFICATION	0.9999043944423958	WITHOUT_CLASSIFICATION	9.56055576042893E-5	IMPLEMENTATION
// default for starting tempVariableIndex is ok	WITHOUT_CLASSIFICATION	0.9999755819365069	WITHOUT_CLASSIFICATION	2.4418063493069152E-5	IMPLEMENTATION
// store the local vars in a local variable for preparing the class (using previous scope)	WITHOUT_CLASSIFICATION	0.999986305483672	WITHOUT_CLASSIFICATION	1.3694516328153797E-5	IMPLEMENTATION
// store the new local vars in a local variable	WITHOUT_CLASSIFICATION	0.999958678973447	WITHOUT_CLASSIFICATION	4.132102655294196E-5	IMPLEMENTATION
// in 1.8 mode, this will be a RubyArray containing the arguments // in 1.9 mode, this will be an IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999452401301234	WITHOUT_CLASSIFICATION	5.475986987660155E-5	IMPLEMENTATION
// no variable initialization, because we're reusing parent's scope (flat)	WITHOUT_CLASSIFICATION	0.999978933645083	WITHOUT_CLASSIFICATION	2.1066354917063967E-5	IMPLEMENTATION
// for specific-index cases, clean up non-expression values	WITHOUT_CLASSIFICATION	0.9999286807284308	WITHOUT_CLASSIFICATION	7.131927156921072E-5	IMPLEMENTATION
// set up a local Ruby variable	WITHOUT_CLASSIFICATION	0.999931324905541	WITHOUT_CLASSIFICATION	6.867509445893413E-5	IMPLEMENTATION
// if that succeeds, the others should as well	WITHOUT_CLASSIFICATION	0.9999047852999475	WITHOUT_CLASSIFICATION	9.521470005236798E-5	IMPLEMENTATION
// verify the class	WITHOUT_CLASSIFICATION	0.9999245005602129	WITHOUT_CLASSIFICATION	7.549943978715102E-5	IMPLEMENTATION
// create dir if necessary	WITHOUT_CLASSIFICATION	0.9999783716421127	WITHOUT_CLASSIFICATION	2.1628357887295303E-5	IMPLEMENTATION
// Create the class with the appropriate class name and source file	WITHOUT_CLASSIFICATION	0.9999720435755883	WITHOUT_CLASSIFICATION	2.7956424411591305E-5	IMPLEMENTATION
// add setPosition impl, which stores filename as constant to speed updates	WITHOUT_CLASSIFICATION	0.9999840451323371	WITHOUT_CLASSIFICATION	1.5954867662989285E-5	IMPLEMENTATION
// thread context	WITHOUT_CLASSIFICATION	0.9998058898732888	WITHOUT_CLASSIFICATION	1.941101267112433E-4	IMPLEMENTATION
// line number	WITHOUT_CLASSIFICATION	0.9998248196226133	WITHOUT_CLASSIFICATION	1.7518037738666246E-4	IMPLEMENTATION
// invoke __file__ with threadcontext, self, args (null), and block (null)	WITHOUT_CLASSIFICATION	0.999874483205109	WITHOUT_CLASSIFICATION	1.2551679489106266E-4	IMPLEMENTATION
// load always uses IRubyObject[], so simple closure offset calculation here	WITHOUT_CLASSIFICATION	0.9999328455026587	WITHOUT_CLASSIFICATION	6.71544973412297E-5	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999887373119066	WITHOUT_CLASSIFICATION	1.1262688093442136E-5	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.999900388269468	WITHOUT_CLASSIFICATION	9.961173053190796E-5	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999265582696824	WITHOUT_CLASSIFICATION	7.344173031759369E-5	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9952856502833631	WITHOUT_CLASSIFICATION	0.004714349716636949	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9952856502833631	WITHOUT_CLASSIFICATION	0.004714349716636949	IMPLEMENTATION
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9998785597157323	WITHOUT_CLASSIFICATION	1.2144028426780281E-4	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.999956585040214	WITHOUT_CLASSIFICATION	4.34149597860753E-5	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999267191749611	WITHOUT_CLASSIFICATION	7.328082503882228E-5	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.999886113483761	WITHOUT_CLASSIFICATION	1.1388651623907623E-4	IMPLEMENTATION
// add Script#run impl, used for running this script with a specified threadcontext and self // root method of a script is always in __file__ method	WITHOUT_CLASSIFICATION	0.9999840964234135	WITHOUT_CLASSIFICATION	1.590357658655945E-5	IMPLEMENTATION
// add main impl, used for detached or command-line execution of this script with a new runtime // root method of a script is always in stub0, method0	WITHOUT_CLASSIFICATION	0.999992127838516	WITHOUT_CLASSIFICATION	7.872161484045357E-6	IMPLEMENTATION
// construct static scope list of names	WITHOUT_CLASSIFICATION	0.9999380437527374	WITHOUT_CLASSIFICATION	6.195624726262813E-5	IMPLEMENTATION
// JRUBY-3014: make __FILE__ dynamically determined at load time, but // we provide a reasonable default here	WITHOUT_CLASSIFICATION	0.9999741240013108	WITHOUT_CLASSIFICATION	2.5875998689126387E-5	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999900338664893	WITHOUT_CLASSIFICATION	9.966133510734675E-6	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999900338664893	WITHOUT_CLASSIFICATION	9.966133510734675E-6	IMPLEMENTATION
// lazily create class init only if necessary	WITHOUT_CLASSIFICATION	0.9999769556679731	WITHOUT_CLASSIFICATION	2.3044332026928827E-5	IMPLEMENTATION
// boxed arg list __file__	WITHOUT_CLASSIFICATION	0.9998333372126171	WITHOUT_CLASSIFICATION	1.6666278738288514E-4	IMPLEMENTATION
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9998730377609134	WITHOUT_CLASSIFICATION	1.2696223908653437E-4	IMPLEMENTATION
// exact arg list __file__	WITHOUT_CLASSIFICATION	0.9998402031097602	WITHOUT_CLASSIFICATION	1.5979689023995383E-4	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.999861138292648	WITHOUT_CLASSIFICATION	1.3886170735196644E-4	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.999861138292648	WITHOUT_CLASSIFICATION	1.3886170735196644E-4	IMPLEMENTATION
// not using a new scope, use saved one for a flat closure	WITHOUT_CLASSIFICATION	0.9996898972396174	WITHOUT_CLASSIFICATION	3.101027603825011E-4	IMPLEMENTATION
// normal closure	WITHOUT_CLASSIFICATION	0.9998120358720274	WITHOUT_CLASSIFICATION	1.879641279725055E-4	IMPLEMENTATION
// end of scoping for closure's vars	WITHOUT_CLASSIFICATION	0.9999420706115054	WITHOUT_CLASSIFICATION	5.792938849451115E-5	IMPLEMENTATION
// we only need full-on redo exception handling if there's logic that might produce it	WITHOUT_CLASSIFICATION	0.9999598306328009	WITHOUT_CLASSIFICATION	4.016936719917574E-5	IMPLEMENTATION
// handle redos by restarting the block	WITHOUT_CLASSIFICATION	0.9998981851304385	WITHOUT_CLASSIFICATION	1.0181486956156958E-4	IMPLEMENTATION
// jump back to the top of the main body of this closure	WITHOUT_CLASSIFICATION	0.999969846459443	WITHOUT_CLASSIFICATION	3.015354055698432E-5	IMPLEMENTATION
// Ruby name 	WITHOUT_CLASSIFICATION	0.9997911932999566	WITHOUT_CLASSIFICATION	2.088067000434309E-4	IMPLEMENTATION
// Accumulate call arguments	WITHOUT_CLASSIFICATION	0.9998460014354486	WITHOUT_CLASSIFICATION	1.539985645514769E-4	IMPLEMENTATION
// Fix FileNameCompletor to work mid-line	WITHOUT_CLASSIFICATION	0.9998414398005291	WITHOUT_CLASSIFICATION	1.5856019947088916E-4	IMPLEMENTATION
// We need to ensure that the variable names generated here cannot conflict with ruby variable names! // Hence the "%" tthat is appended to the beginning!	WITHOUT_CLASSIFICATION	0.9998800964580192	WITHOUT_CLASSIFICATION	1.1990354198071642E-4	IMPLEMENTATION
// Does this method define code?  // Default is yes -- which basically leads to pessimistic but safe optimizations // But, for library and internal methods, this might be false.	WITHOUT_CLASSIFICATION	0.999965198082933	WITHOUT_CLASSIFICATION	3.480191706698342E-5	IMPLEMENTATION
// Map of constants defined in this scope (not valid for methods!)	WITHOUT_CLASSIFICATION	0.9999834338109442	WITHOUT_CLASSIFICATION	1.656618905575636E-5	IMPLEMENTATION
// NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner // with outer loops encountered before inner loops, and inner loops finished before outer ones. // // So, we can keep track of loops in a loop stack which  keeps track of loops as they are encountered. // This lets us implement next/redo/break/retry easily for the non-closure cases	WITHOUT_CLASSIFICATION	0.999456722853333	WITHOUT_CLASSIFICATION	5.432771466670872E-4	IMPLEMENTATION
// Map keep track of the next available variable index for a particular prefix	WITHOUT_CLASSIFICATION	0.9999342038119549	WITHOUT_CLASSIFICATION	6.579618804520513E-5	IMPLEMENTATION
// Control flow graph for this scope	WITHOUT_CLASSIFICATION	0.9999236462207391	WITHOUT_CLASSIFICATION	7.635377926078324E-5	IMPLEMENTATION
//        _lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;	WITHOUT_CLASSIFICATION	0.9999528573916187	WITHOUT_CLASSIFICATION	4.7142608381377554E-5	IMPLEMENTATION
// List of modules, classes, and methods defined in this scope!	WITHOUT_CLASSIFICATION	0.999968201218446	WITHOUT_CLASSIFICATION	3.179878155394777E-5	IMPLEMENTATION
// Returns the containing parent scope!	WITHOUT_CLASSIFICATION	0.9999368040652651	WITHOUT_CLASSIFICATION	6.31959347348926E-5	IMPLEMENTATION
// Insert nesting level to ensure variable names don't conflict across nested scopes! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //        return new Variable(prefix + _lexicalNestingLevel + "_" + idx);	WITHOUT_CLASSIFICATION	0.9999886652334926	WITHOUT_CLASSIFICATION	1.1334766507418849E-5	IMPLEMENTATION
// get "self"	WITHOUT_CLASSIFICATION	0.9998913046151062	WITHOUT_CLASSIFICATION	1.0869538489374623E-4	IMPLEMENTATION
// variable is never read, variable is never live	WITHOUT_CLASSIFICATION	0.9997345623526653	WITHOUT_CLASSIFICATION	2.6543764733466535E-4	IMPLEMENTATION
// inline script	WITHOUT_CLASSIFICATION	0.9997956110258297	WITHOUT_CLASSIFICATION	2.0438897417040616E-4	IMPLEMENTATION
// inline script	WITHOUT_CLASSIFICATION	0.9997956110258297	WITHOUT_CLASSIFICATION	2.0438897417040616E-4	IMPLEMENTATION
// This method is called to build assignments for a multiple-assignment instruction	WITHOUT_CLASSIFICATION	0.9999101316274449	WITHOUT_CLASSIFICATION	8.98683725550857E-5	IMPLEMENTATION
// Build the class body!	WITHOUT_CLASSIFICATION	0.9999324671798707	WITHOUT_CLASSIFICATION	6.753282012929743E-5	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9998882340523954	WITHOUT_CLASSIFICATION	1.1176594760464017E-4	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9998882340523954	WITHOUT_CLASSIFICATION	1.1176594760464017E-4	IMPLEMENTATION
// SSS FIXME: Can this ever be null?	WITHOUT_CLASSIFICATION	0.9997538430624263	WITHOUT_CLASSIFICATION	2.4615693757362874E-4	IMPLEMENTATION
// Run the pass on the passed in scope!	WITHOUT_CLASSIFICATION	0.9999194967585211	WITHOUT_CLASSIFICATION	8.05032414789036E-5	IMPLEMENTATION
// done // done // done // done	WITHOUT_CLASSIFICATION	0.9998469020010105	WITHOUT_CLASSIFICATION	1.5309799898947587E-4	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999851620394737	WITHOUT_CLASSIFICATION	1.4837960526365711E-5	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999851620394737	WITHOUT_CLASSIFICATION	1.4837960526365711E-5	IMPLEMENTATION
// This method is called to build arguments for a block!	WITHOUT_CLASSIFICATION	0.9999123558791023	WITHOUT_CLASSIFICATION	8.764412089773669E-5	IMPLEMENTATION
// build first node (and ignore its result) and then second node	WITHOUT_CLASSIFICATION	0.9999732400632674	WITHOUT_CLASSIFICATION	2.6759936732677404E-5	IMPLEMENTATION
// build first node only and return false	WITHOUT_CLASSIFICATION	0.9999638758950223	WITHOUT_CLASSIFICATION	3.612410497767649E-5	IMPLEMENTATION
// Value of the last expression in the block 	WITHOUT_CLASSIFICATION	0.9999602099818186	WITHOUT_CLASSIFICATION	3.979001818146509E-5	IMPLEMENTATION
// If this is not a closure, the break is equivalent to jumping to the loop end label	WITHOUT_CLASSIFICATION	0.9999755956473255	WITHOUT_CLASSIFICATION	2.4404352674505836E-5	IMPLEMENTATION
// get the incoming case value	WITHOUT_CLASSIFICATION	0.9999696633068176	WITHOUT_CLASSIFICATION	3.033669318247632E-5	IMPLEMENTATION
// the CASE instruction	WITHOUT_CLASSIFICATION	0.9999064757424893	WITHOUT_CLASSIFICATION	9.352425751075178E-5	IMPLEMENTATION
// lists to aggregate variables and bodies for whens	WITHOUT_CLASSIFICATION	0.9998976871603751	WITHOUT_CLASSIFICATION	1.0231283962496917E-4	IMPLEMENTATION
// build each "when"	WITHOUT_CLASSIFICATION	0.9998491851482385	WITHOUT_CLASSIFICATION	1.5081485176152685E-4	IMPLEMENTATION
// multiple conditions for when	WITHOUT_CLASSIFICATION	0.9997923050442011	WITHOUT_CLASSIFICATION	2.076949557988629E-4	IMPLEMENTATION
// build "else" if it exists	WITHOUT_CLASSIFICATION	0.9999006413145483	WITHOUT_CLASSIFICATION	9.935868545178532E-5	IMPLEMENTATION
// now emit bodies	WITHOUT_CLASSIFICATION	0.9998014822722969	WITHOUT_CLASSIFICATION	1.9851772770314733E-4	IMPLEMENTATION
// close it out	WITHOUT_CLASSIFICATION	0.9998711791285001	WITHOUT_CLASSIFICATION	1.288208714999741E-4	IMPLEMENTATION
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999879263105442	WITHOUT_CLASSIFICATION	1.207368945582337E-5	IMPLEMENTATION
// Do we have a dynamic container?	WITHOUT_CLASSIFICATION	0.9990141550952227	WITHOUT_CLASSIFICATION	9.858449047772694E-4	IMPLEMENTATION
// Return a meta object corresponding to the class	WITHOUT_CLASSIFICATION	0.9999773598224607	WITHOUT_CLASSIFICATION	2.264017753928426E-5	IMPLEMENTATION
// 1. Load the module first (lhs of node) // 2. Then load the constant from the module	WITHOUT_CLASSIFICATION	0.999967790841623	WITHOUT_CLASSIFICATION	3.220915837691415E-5	IMPLEMENTATION
// Build IR for args	WITHOUT_CLASSIFICATION	0.9998172482327252	WITHOUT_CLASSIFICATION	1.8275176727474646E-4	IMPLEMENTATION
// Build IR for body	WITHOUT_CLASSIFICATION	0.999812243976117	WITHOUT_CLASSIFICATION	1.8775602388304674E-4	IMPLEMENTATION
// if root of method is rescue, build as a light rescue	WITHOUT_CLASSIFICATION	0.9998882079515642	WITHOUT_CLASSIFICATION	1.1179204843569846E-4	IMPLEMENTATION
// Instance method	WITHOUT_CLASSIFICATION	0.999886852776506	WITHOUT_CLASSIFICATION	1.1314722349397729E-4	IMPLEMENTATION
// Class method	WITHOUT_CLASSIFICATION	0.9998798855177489	WITHOUT_CLASSIFICATION	1.201144822512031E-4	IMPLEMENTATION
// Other args begin at index 1	WITHOUT_CLASSIFICATION	0.9998502756524879	WITHOUT_CLASSIFICATION	1.4972434751204473E-4	IMPLEMENTATION
// Both for fixed arity and variable arity methods	WITHOUT_CLASSIFICATION	0.9998725190914404	WITHOUT_CLASSIFICATION	1.274809085595919E-4	IMPLEMENTATION
// Now for the rest	WITHOUT_CLASSIFICATION	0.9998679701478449	WITHOUT_CLASSIFICATION	1.320298521551938E-4	IMPLEMENTATION
// Jump to 'l' if this arg is not null.  If null, fall through and build the default value!	WITHOUT_CLASSIFICATION	0.9999932053080524	WITHOUT_CLASSIFICATION	6.7946919476712804E-6	IMPLEMENTATION
// This is not an expression that computes anything	WITHOUT_CLASSIFICATION	0.9999601796501514	WITHOUT_CLASSIFICATION	3.982034984863954E-5	IMPLEMENTATION
// Create a new closure context	WITHOUT_CLASSIFICATION	0.999984057515164	WITHOUT_CLASSIFICATION	1.5942484836072478E-5	IMPLEMENTATION
// Build args	WITHOUT_CLASSIFICATION	0.9998129822169634	WITHOUT_CLASSIFICATION	1.870177830366665E-4	IMPLEMENTATION
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999763519267048	WITHOUT_CLASSIFICATION	2.36480732953432E-5	IMPLEMENTATION
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999839819884067	WITHOUT_CLASSIFICATION	1.6018011593329962E-5	IMPLEMENTATION
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999879263105442	WITHOUT_CLASSIFICATION	1.207368945582337E-5	IMPLEMENTATION
// Create a new closure context	WITHOUT_CLASSIFICATION	0.999984057515164	WITHOUT_CLASSIFICATION	1.5942484836072478E-5	IMPLEMENTATION
// Build args	WITHOUT_CLASSIFICATION	0.9998129822169634	WITHOUT_CLASSIFICATION	1.870177830366665E-4	IMPLEMENTATION
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999839819884067	WITHOUT_CLASSIFICATION	1.6018011593329962E-5	IMPLEMENTATION
// Get the container for this new module	WITHOUT_CLASSIFICATION	0.9999815482662242	WITHOUT_CLASSIFICATION	1.8451733775759182E-5	IMPLEMENTATION
// Build the new module	WITHOUT_CLASSIFICATION	0.9999215122863874	WITHOUT_CLASSIFICATION	7.848771361259169E-5	IMPLEMENTATION
// Build the module body	WITHOUT_CLASSIFICATION	0.9999103070192672	WITHOUT_CLASSIFICATION	8.969298073279705E-5	IMPLEMENTATION
// First, build an assignment for a splat, if any, with the rest of the args!	WITHOUT_CLASSIFICATION	0.9999135694898035	WITHOUT_CLASSIFICATION	8.643051019660866E-5	IMPLEMENTATION
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999401170647481	WITHOUT_CLASSIFICATION	5.988293525203619E-5	IMPLEMENTATION
// If a closure, the next is simply a return from the closure! // If a regular loop, the next is simply a jump to the end of the iteration	WITHOUT_CLASSIFICATION	0.9999914682081962	WITHOUT_CLASSIFICATION	8.531791803907102E-6	IMPLEMENTATION
// get attr	WITHOUT_CLASSIFICATION	0.9998923232724656	WITHOUT_CLASSIFICATION	1.0767672753447451E-4	IMPLEMENTATION
// call operator	WITHOUT_CLASSIFICATION	0.9998180722713823	WITHOUT_CLASSIFICATION	1.819277286176988E-4	IMPLEMENTATION
// set attr	WITHOUT_CLASSIFICATION	0.9998863558825767	WITHOUT_CLASSIFICATION	1.136441174233523E-4	IMPLEMENTATION
// Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, false, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9999345929455242	WITHOUT_CLASSIFICATION	6.540705447572346E-5	IMPLEMENTATION
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999115780406039	WITHOUT_CLASSIFICATION	8.842195939607144E-5	IMPLEMENTATION
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999115780406039	WITHOUT_CLASSIFICATION	8.842195939607144E-5	IMPLEMENTATION
// if v1 is defined and true, we are done! 	WITHOUT_CLASSIFICATION	0.9999208873391281	WITHOUT_CLASSIFICATION	7.911266087181867E-5	IMPLEMENTATION
// build first node only and return true	WITHOUT_CLASSIFICATION	0.9999595171095128	WITHOUT_CLASSIFICATION	4.048289048708415E-5	IMPLEMENTATION
// build first node as non-expr and build second node	WITHOUT_CLASSIFICATION	0.9999371730245755	WITHOUT_CLASSIFICATION	6.282697542453266E-5	IMPLEMENTATION
// Top-level script!	WITHOUT_CLASSIFICATION	0.9998076399647291	WITHOUT_CLASSIFICATION	1.9236003527094348E-4	IMPLEMENTATION
// we won't enter the loop -- just build the condition node	WITHOUT_CLASSIFICATION	0.9999610830732352	WITHOUT_CLASSIFICATION	3.8916926764825965E-5	IMPLEMENTATION
/* ----------- Private Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999713671613434	WITHOUT_CLASSIFICATION	2.8632838656629867E-5	IMPLEMENTATION
// What handles warnings	WITHOUT_CLASSIFICATION	0.9998397034900025	WITHOUT_CLASSIFICATION	1.602965099975331E-4	IMPLEMENTATION
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.99999660080581	WITHOUT_CLASSIFICATION	3.3991941900776893E-6	IMPLEMENTATION
// For closures, a redo is a jump to the beginning of the closure // For non-closures, a redo is a jump to the beginning of the loop	WITHOUT_CLASSIFICATION	0.9999660382718485	WITHOUT_CLASSIFICATION	3.396172815153912E-5	IMPLEMENTATION
// The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999760031954223	WITHOUT_CLASSIFICATION	2.3996804577742696E-5	IMPLEMENTATION
// Dummy top-level method for the class	WITHOUT_CLASSIFICATION	0.9999382216729537	WITHOUT_CLASSIFICATION	6.177832704632468E-5	IMPLEMENTATION
// Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999775932519831	WITHOUT_CLASSIFICATION	2.2406748016989494E-5	IMPLEMENTATION
// ------ Define the operations below ----	WITHOUT_CLASSIFICATION	0.9999651035661213	WITHOUT_CLASSIFICATION	3.4896433878713515E-5	IMPLEMENTATION
// value copy and type conversion operations	WITHOUT_CLASSIFICATION	0.9999602933929462	WITHOUT_CLASSIFICATION	3.970660705381278E-5	IMPLEMENTATION
// alu operations	WITHOUT_CLASSIFICATION	0.9998572324896274	WITHOUT_CLASSIFICATION	1.4276751037253964E-4	IMPLEMENTATION
// method handle, arg receive, return value, and  call instructions	WITHOUT_CLASSIFICATION	0.999904534034952	WITHOUT_CLASSIFICATION	9.546596504796904E-5	IMPLEMENTATION
// closure instructions	WITHOUT_CLASSIFICATION	0.9998876325690812	WITHOUT_CLASSIFICATION	1.123674309187703E-4	IMPLEMENTATION
// eval instructions	WITHOUT_CLASSIFICATION	0.9998270487472951	WITHOUT_CLASSIFICATION	1.7295125270482358E-4	IMPLEMENTATION
// def instructions	WITHOUT_CLASSIFICATION	0.9998448036650586	WITHOUT_CLASSIFICATION	1.5519633494151798E-4	IMPLEMENTATION
// exception instructions	WITHOUT_CLASSIFICATION	0.9999122279884275	WITHOUT_CLASSIFICATION	8.777201157259588E-5	IMPLEMENTATION
// Loads	WITHOUT_CLASSIFICATION	0.9957985338667983	WITHOUT_CLASSIFICATION	0.004201466133201736	IMPLEMENTATION
// Stores	WITHOUT_CLASSIFICATION	0.9955958856266162	WITHOUT_CLASSIFICATION	0.004404114373383783	IMPLEMENTATION
// jump and branch operations	WITHOUT_CLASSIFICATION	0.9998893953300453	WITHOUT_CLASSIFICATION	1.1060466995471375E-4	IMPLEMENTATION
// others	WITHOUT_CLASSIFICATION	0.9957626415927802	WITHOUT_CLASSIFICATION	0.004237358407219903	IMPLEMENTATION
// a case/when branch	WITHOUT_CLASSIFICATION	0.9998316711123492	WITHOUT_CLASSIFICATION	1.683288876507921E-4	IMPLEMENTATION
// optimization guards	WITHOUT_CLASSIFICATION	0.999843237312854	WITHOUT_CLASSIFICATION	1.5676268714607207E-4	IMPLEMENTATION
// By default, call instructions cannot be deleted even if their results aren't used by anyone // unless we know more about what the call is, what it does, etc. // Similarly for evals, stores, returns.	WITHOUT_CLASSIFICATION	0.9999884667304076	WITHOUT_CLASSIFICATION	1.1533269592367859E-5	IMPLEMENTATION
// Returns the containing parent scope -- can be a dynamic value (hence Operand)!	WITHOUT_CLASSIFICATION	0.9999580544308778	WITHOUT_CLASSIFICATION	4.194556912206876E-5	IMPLEMENTATION
// scripts	WITHOUT_CLASSIFICATION	0.9958603027176397	WITHOUT_CLASSIFICATION	0.004139697282360345	IMPLEMENTATION
// scripts and modules	WITHOUT_CLASSIFICATION	0.9998641625314345	WITHOUT_CLASSIFICATION	1.3583746856553463E-4	IMPLEMENTATION
// scripts, classes, and modules	WITHOUT_CLASSIFICATION	0.9999110636419929	WITHOUT_CLASSIFICATION	8.893635800709915E-5	IMPLEMENTATION
// methods and closures	WITHOUT_CLASSIFICATION	0.9998739586061514	WITHOUT_CLASSIFICATION	1.2604139384876813E-4	IMPLEMENTATION
// create a new variable using the prefix	WITHOUT_CLASSIFICATION	0.9999933980092899	WITHOUT_CLASSIFICATION	6.6019907101338634E-6	IMPLEMENTATION
// create a new temporary variable	WITHOUT_CLASSIFICATION	0.999986659636203	WITHOUT_CLASSIFICATION	1.334036379687683E-5	IMPLEMENTATION
// Get a new label using a generic prefix	WITHOUT_CLASSIFICATION	0.9999328612261308	WITHOUT_CLASSIFICATION	6.713877386921661E-5	IMPLEMENTATION
// Build the CFG for this scope -- supported only by methods & closures	WITHOUT_CLASSIFICATION	0.9999479771873667	WITHOUT_CLASSIFICATION	5.2022812633221325E-5	IMPLEMENTATION
// Get the control flow graph for this scope -- only valid for methods & closures	WITHOUT_CLASSIFICATION	0.9999830729493532	WITHOUT_CLASSIFICATION	1.692705064681426E-5	IMPLEMENTATION
// While processing loops, this returns the loop that we are processing.	WITHOUT_CLASSIFICATION	0.9999574820560423	WITHOUT_CLASSIFICATION	4.251794395770274E-5	IMPLEMENTATION
// Record the loop we are beginning to process	WITHOUT_CLASSIFICATION	0.9999317998937387	WITHOUT_CLASSIFICATION	6.820010626126569E-5	IMPLEMENTATION
// Indicate that we are done processing the loop	WITHOUT_CLASSIFICATION	0.9999437415591429	WITHOUT_CLASSIFICATION	5.625844085717484E-5	IMPLEMENTATION
// Run the passed in compiler pass on this scope!	WITHOUT_CLASSIFICATION	0.9999174819920934	WITHOUT_CLASSIFICATION	8.251800790663447E-5	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9999363627033602	WITHOUT_CLASSIFICATION	6.363729663984573E-5	IMPLEMENTATION
// Readline	WITHOUT_CLASSIFICATION	0.9997871689217543	WITHOUT_CLASSIFICATION	2.128310782456204E-4	IMPLEMENTATION
// If the cfg of the method is around, print the CFG!	WITHOUT_CLASSIFICATION	0.9999644754998556	WITHOUT_CLASSIFICATION	3.5524500144533747E-5	IMPLEMENTATION
// Optimize some core class method calls for constant values	WITHOUT_CLASSIFICATION	0.9999353764240222	WITHOUT_CLASSIFICATION	6.462357597787678E-5	IMPLEMENTATION
// If 'r' is not a constant, it could actually be a compound value! // Look in our value map to see if we have a simplified value for the receiver.	WITHOUT_CLASSIFICATION	0.9999899007559154	WITHOUT_CLASSIFICATION	1.009924408450633E-5	IMPLEMENTATION
// Check if we can optimize this call based on the receiving method and receiver type // Use the simplified receiver!	WITHOUT_CLASSIFICATION	0.9998947380908714	WITHOUT_CLASSIFICATION	1.0526190912858194E-4	IMPLEMENTATION
// If we got a simplified value, mark the call dead and insert a copy in its place!	WITHOUT_CLASSIFICATION	0.9999504716060817	WITHOUT_CLASSIFICATION	4.952839391819025E-5	IMPLEMENTATION
// If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!	WITHOUT_CLASSIFICATION	0.9999295915462756	WITHOUT_CLASSIFICATION	7.04084537243524E-5	IMPLEMENTATION
/* ----------- Public abstract methods ---------- */	WITHOUT_CLASSIFICATION	0.9999628380498586	WITHOUT_CLASSIFICATION	3.7161950141326516E-5	IMPLEMENTATION
/* ----------- Public methods with a default implementation ---------- */	WITHOUT_CLASSIFICATION	0.9998003733965708	WITHOUT_CLASSIFICATION	1.9962660342918499E-4	IMPLEMENTATION
// Compute meet over all "sources" and compute "destination" basic blocks that should then be processed.  // sources & targets depends on direction of the data flow problem	WITHOUT_CLASSIFICATION	0.9999849882672207	WITHOUT_CLASSIFICATION	1.5011732779278031E-5	IMPLEMENTATION
// If the solution has changed, add "dsts" to the work list. // No duplicates please which is why we have bbset.	WITHOUT_CLASSIFICATION	0.9999778452736593	WITHOUT_CLASSIFICATION	2.215472634063626E-5	IMPLEMENTATION
/* --------- Protected fields/methods below --------- */	WITHOUT_CLASSIFICATION	0.9999333352302594	WITHOUT_CLASSIFICATION	6.666476974055086E-5	IMPLEMENTATION
// Dataflow problem with which this node is associated // CFG node for which this node contains info.	WITHOUT_CLASSIFICATION	0.9999802947255543	WITHOUT_CLASSIFICATION	1.9705274445801756E-5	IMPLEMENTATION
/* -------------- Public fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999649520502184	WITHOUT_CLASSIFICATION	3.5047949781653714E-5	IMPLEMENTATION
// ------- Abstract methods without a default implementation -------	WITHOUT_CLASSIFICATION	0.999802037366565	WITHOUT_CLASSIFICATION	1.979626334348506E-4	IMPLEMENTATION
// ------- Default implementation methods below -------	WITHOUT_CLASSIFICATION	0.9994768692759112	WITHOUT_CLASSIFICATION	5.231307240888811E-4	IMPLEMENTATION
/* Compute Meet Over All Paths solution for this dataflow problem on the input CFG.     * This implements a standard worklist algorithm. */	WITHOUT_CLASSIFICATION	0.997995673465996	WITHOUT_CLASSIFICATION	0.0020043265340039303	IMPLEMENTATION
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.999818085368515	WITHOUT_CLASSIFICATION	1.8191463148502668E-4	IMPLEMENTATION
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.999818085368515	WITHOUT_CLASSIFICATION	1.8191463148502668E-4	IMPLEMENTATION
/* -------------- Packaged/protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999698952190875	WITHOUT_CLASSIFICATION	3.010478091250207E-5	IMPLEMENTATION
// We want unique ids for dataflow variables	WITHOUT_CLASSIFICATION	0.9998392663311064	WITHOUT_CLASSIFICATION	1.607336688937053E-4	IMPLEMENTATION
/* -------------- Protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999659120016564	WITHOUT_CLASSIFICATION	3.4087998343599915E-5	IMPLEMENTATION
/* -------------- Private fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999704325881857	WITHOUT_CLASSIFICATION	2.9567411814300654E-5	IMPLEMENTATION
// Initialize all flow graph nodes 	WITHOUT_CLASSIFICATION	0.9999516037154886	WITHOUT_CLASSIFICATION	4.839628451149961E-5	IMPLEMENTATION
/* Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses */	WITHOUT_CLASSIFICATION	0.9999021161806757	WITHOUT_CLASSIFICATION	9.788381932424636E-5	IMPLEMENTATION
/* ******************** PUBLIC INTERFACE ******************* */	WITHOUT_CLASSIFICATION	0.9998894814786892	WITHOUT_CLASSIFICATION	1.1051852131087985E-4	IMPLEMENTATION
// Unique ID assigned to this variable	WITHOUT_CLASSIFICATION	0.999864615140911	WITHOUT_CLASSIFICATION	1.3538485908911148E-4	IMPLEMENTATION
// start out with a default RubyObject allocator	WITHOUT_CLASSIFICATION	0.9999739273773146	WITHOUT_CLASSIFICATION	2.607262268529179E-5	IMPLEMENTATION
// switch to an allocator based on a default constructor	WITHOUT_CLASSIFICATION	0.9999468767883877	WITHOUT_CLASSIFICATION	5.312321161231791E-5	IMPLEMENTATION
/* ----------- Public Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999663401208441	WITHOUT_CLASSIFICATION	3.365987915591986E-5	IMPLEMENTATION
// class or module	WITHOUT_CLASSIFICATION	0.9998611595294122	WITHOUT_CLASSIFICATION	1.388404705876743E-4	IMPLEMENTATION
// OUT = UNION(IN(succs))	WITHOUT_CLASSIFICATION	0.9998272077314533	WITHOUT_CLASSIFICATION	1.7279226854676315E-4	IMPLEMENTATION
// Traverse the instructions in this basic block in reverse order!	WITHOUT_CLASSIFICATION	0.99993206301457	WITHOUT_CLASSIFICATION	6.793698542993265E-5	IMPLEMENTATION
// v is defined => It is no longer live before 'i'	WITHOUT_CLASSIFICATION	0.9999004968213179	WITHOUT_CLASSIFICATION	9.950317868209122E-5	IMPLEMENTATION
// IN is the same!	WITHOUT_CLASSIFICATION	0.9998350164822352	WITHOUT_CLASSIFICATION	1.649835177647849E-4	IMPLEMENTATION
// IN changed!	WITHOUT_CLASSIFICATION	0.999862375092594	WITHOUT_CLASSIFICATION	1.3762490740596635E-4	IMPLEMENTATION
/* ---------- Protected / package fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999519573577762	WITHOUT_CLASSIFICATION	4.804264222376214E-5	IMPLEMENTATION
// If 'v' is not live at the instruction site, and it has no side effects, mark it dead!	WITHOUT_CLASSIFICATION	0.9999547312843746	WITHOUT_CLASSIFICATION	4.5268715625314847E-5	IMPLEMENTATION
// Do not mark this instruction's operands live if the instruction itself is dead!	WITHOUT_CLASSIFICATION	0.9999454354137663	WITHOUT_CLASSIFICATION	5.456458623355308E-5	IMPLEMENTATION
/* ---------- Private fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999540237119418	WITHOUT_CLASSIFICATION	4.5976288058228266E-5	IMPLEMENTATION
// Variables live at entry of this node // Variables live at exit of node // Temporary set of live variables // Size of the "_in" and "_out" bit sets 	WITHOUT_CLASSIFICATION	0.9999372338128938	WITHOUT_CLASSIFICATION	6.276618710614707E-5	IMPLEMENTATION
// Used during optimization passes to propagate type and other information	WITHOUT_CLASSIFICATION	0.9999465460107374	WITHOUT_CLASSIFICATION	5.345398926255917E-5	IMPLEMENTATION
// Does this instruction have side effects as a result of its operation // This information is used in optimization phases to impact dead code elimination // and other optimization passes	WITHOUT_CLASSIFICATION	0.9999875029031956	WITHOUT_CLASSIFICATION	1.249709680435172E-5	IMPLEMENTATION
/* --------- "Abstract"/"please-override" methods --------- */	WITHOUT_CLASSIFICATION	0.999939720132673	WITHOUT_CLASSIFICATION	6.02798673270597E-5	IMPLEMENTATION
/* Array of all operands for this instruction */	WITHOUT_CLASSIFICATION	0.999904232566327	WITHOUT_CLASSIFICATION	9.576743367306428E-5	IMPLEMENTATION
/* List of all variables used by all operands of this instruction */	WITHOUT_CLASSIFICATION	0.9999223101172033	WITHOUT_CLASSIFICATION	7.768988279671749E-5	IMPLEMENTATION
/*      * This method takes as input a map of operands to their values, and outputs     *     * If the value map provides a value for any of the instruction's operands     * this method is expected to replace the original operands with the simplified values.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify     */	WITHOUT_CLASSIFICATION	0.9999747120671806	WITHOUT_CLASSIFICATION	2.5287932819404633E-5	IMPLEMENTATION
// By default, no simplifications!	WITHOUT_CLASSIFICATION	0.9999347348904543	WITHOUT_CLASSIFICATION	6.52651095456902E-5	IMPLEMENTATION
// Can this call lead to ruby code getting modified?   // If we don't know what method we are calling, we assume it can (pessimistic, but safe!) // If we do know the target method, we ask the method itself whether it modifies ruby code	WITHOUT_CLASSIFICATION	0.9998516961516193	WITHOUT_CLASSIFICATION	1.4830384838080394E-4	IMPLEMENTATION
// By default, return instructions cannot be deleted	WITHOUT_CLASSIFICATION	0.9999837119499215	WITHOUT_CLASSIFICATION	1.6288050078579993E-5	IMPLEMENTATION
// If true, returns the rest of the array starting at the index	WITHOUT_CLASSIFICATION	0.9999738113169748	WITHOUT_CLASSIFICATION	2.6188683025119652E-5	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999679877331816	WITHOUT_CLASSIFICATION	3.201226681834297E-5	IMPLEMENTATION
// Map of label & basic blocks with that label	WITHOUT_CLASSIFICATION	0.9998572209127412	WITHOUT_CLASSIFICATION	1.4277908725887297E-4	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999679877331816	WITHOUT_CLASSIFICATION	3.201226681834297E-5	IMPLEMENTATION
// You can only value-replace atomic values	WITHOUT_CLASSIFICATION	0.9999214112791954	WITHOUT_CLASSIFICATION	7.85887208045708E-5	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9998758811093442	WITHOUT_CLASSIFICATION	1.241188906557284E-4	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9998758811093442	WITHOUT_CLASSIFICATION	1.241188906557284E-4	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9998758811093442	WITHOUT_CLASSIFICATION	1.241188906557284E-4	IMPLEMENTATION
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999676985083331	WITHOUT_CLASSIFICATION	3.2301491666790615E-5	IMPLEMENTATION
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999676985083331	WITHOUT_CLASSIFICATION	3.2301491666790615E-5	IMPLEMENTATION
// The operand that this attribute targets //    DEFERRED //    AttributeValue _val;       // Attribute value	WITHOUT_CLASSIFICATION	0.9999670317233982	WITHOUT_CLASSIFICATION	3.296827660187039E-5	IMPLEMENTATION
// Arrays, Ranges, etc. are compound values // Variables, fixnums, floats, etc. are "atomic" values	WITHOUT_CLASSIFICATION	0.9999348645904409	WITHOUT_CLASSIFICATION	6.513540955907899E-5	IMPLEMENTATION
// Get the target class of this operand, if we know it!	WITHOUT_CLASSIFICATION	0.9999859183983315	WITHOUT_CLASSIFICATION	1.4081601668462553E-5	IMPLEMENTATION
// The following constants capture pre-known static call sites -- used to implement ruby internals	WITHOUT_CLASSIFICATION	0.9975585505167867	WITHOUT_CLASSIFICATION	0.00244144948321327	IMPLEMENTATION
/* Nothing to do by default */	WITHOUT_CLASSIFICATION	0.9999747141064217	WITHOUT_CLASSIFICATION	2.5285893578243042E-5	IMPLEMENTATION
// Map of label & basic blocks which are waiting for a bb with that label	WITHOUT_CLASSIFICATION	0.9998970261072313	WITHOUT_CLASSIFICATION	1.029738927686844E-4	IMPLEMENTATION
// Init before building basic blocks below!	WITHOUT_CLASSIFICATION	0.9998760777280822	WITHOUT_CLASSIFICATION	1.2392227191774678E-4	IMPLEMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9996653064045571	WITHOUT_CLASSIFICATION	3.346935954429403E-4	IMPLEMENTATION
// Scope (method/closure) to which this cfg belongs // Entry BB -- dummy // Exit BB -- dummy // The actual graph // Next available basic block id	WITHOUT_CLASSIFICATION	0.9999290894691104	WITHOUT_CLASSIFICATION	7.091053088951824E-5	IMPLEMENTATION
// Jump instruction bbs dont add an edge to the succeeding bb by default	WITHOUT_CLASSIFICATION	0.9999730829157797	WITHOUT_CLASSIFICATION	2.6917084220238727E-5	IMPLEMENTATION
// Add forward ref. edges	WITHOUT_CLASSIFICATION	0.9999160021749515	WITHOUT_CLASSIFICATION	8.399782504862998E-5	IMPLEMENTATION
// currBB cannot be null!	WITHOUT_CLASSIFICATION	0.9998964842901508	WITHOUT_CLASSIFICATION	1.0351570984922255E-4	IMPLEMENTATION
// Add a forward reference from tgt -> currBB	WITHOUT_CLASSIFICATION	0.9999618182417067	WITHOUT_CLASSIFICATION	3.818175829340345E-5	IMPLEMENTATION
// root-level logic	WITHOUT_CLASSIFICATION	0.9998650899269613	WITHOUT_CLASSIFICATION	1.3491007303871022E-4	IMPLEMENTATION
// root-level methods	WITHOUT_CLASSIFICATION	0.9999096524611208	WITHOUT_CLASSIFICATION	9.034753887910202E-5	IMPLEMENTATION
// root-level classes	WITHOUT_CLASSIFICATION	0.9999282639918903	WITHOUT_CLASSIFICATION	7.17360081097193E-5	IMPLEMENTATION
//        case 4: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); //            break; //        case 5: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); //            break;	WITHOUT_CLASSIFICATION	0.9999846888655995	WITHOUT_CLASSIFICATION	1.5311134400391345E-5	IMPLEMENTATION
// load receiver	WITHOUT_CLASSIFICATION	0.9998540468061947	WITHOUT_CLASSIFICATION	1.4595319380528794E-4	IMPLEMENTATION
// load receiver	WITHOUT_CLASSIFICATION	0.9998540468061947	WITHOUT_CLASSIFICATION	1.4595319380528794E-4	IMPLEMENTATION
// receiver	WITHOUT_CLASSIFICATION	0.999795506896671	WITHOUT_CLASSIFICATION	2.0449310332900595E-4	IMPLEMENTATION
// load arguments	WITHOUT_CLASSIFICATION	0.9998651019702355	WITHOUT_CLASSIFICATION	1.3489802976448043E-4	IMPLEMENTATION
// load arguments	WITHOUT_CLASSIFICATION	0.9998651019702355	WITHOUT_CLASSIFICATION	1.3489802976448043E-4	IMPLEMENTATION
//        case 4: //        case 5:	WITHOUT_CLASSIFICATION	0.9999514354328671	WITHOUT_CLASSIFICATION	4.8564567132995295E-5	IMPLEMENTATION
// Object[] args	WITHOUT_CLASSIFICATION	0.9998410852860096	WITHOUT_CLASSIFICATION	1.5891471399037284E-4	IMPLEMENTATION
// load handle	WITHOUT_CLASSIFICATION	0.9998397170162692	WITHOUT_CLASSIFICATION	1.602829837309274E-4	IMPLEMENTATION
// args array	WITHOUT_CLASSIFICATION	0.9998003415089647	WITHOUT_CLASSIFICATION	1.9965849103530285E-4	IMPLEMENTATION
// i'th argument	WITHOUT_CLASSIFICATION	0.9997787798147998	WITHOUT_CLASSIFICATION	2.2122018520016271E-4	IMPLEMENTATION
// invoke specific arity version	WITHOUT_CLASSIFICATION	0.9999057447622033	WITHOUT_CLASSIFICATION	9.425523779672881E-5	IMPLEMENTATION
// Object arg0	WITHOUT_CLASSIFICATION	0.9998354898942869	WITHOUT_CLASSIFICATION	1.6451010571301843E-4	IMPLEMENTATION
// useful for code completion inside the IRB	WITHOUT_CLASSIFICATION	0.9998849373205871	WITHOUT_CLASSIFICATION	1.1506267941282331E-4	IMPLEMENTATION
// No editing before startPos	WITHOUT_CLASSIFICATION	0.9998933783016342	WITHOUT_CLASSIFICATION	1.0662169836581453E-4	IMPLEMENTATION
// no silly ticks!	WITHOUT_CLASSIFICATION	0.9998326477780793	WITHOUT_CLASSIFICATION	1.6735222192069998E-4	IMPLEMENTATION
// no candidates? Fail.	WITHOUT_CLASSIFICATION	0.9998652422877036	WITHOUT_CLASSIFICATION	1.347577122964883E-4	IMPLEMENTATION
// at end	WITHOUT_CLASSIFICATION	0.9954847503799192	WITHOUT_CLASSIFICATION	0.004515249620080788	IMPLEMENTATION
// undo check	WITHOUT_CLASSIFICATION	0.9997948078306157	WITHOUT_CLASSIFICATION	2.0519216938434475E-4	IMPLEMENTATION
// Explicit reference to these vars as symbols...	WITHOUT_CLASSIFICATION	0.9999448574342229	WITHOUT_CLASSIFICATION	5.514256577712164E-5	IMPLEMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9996653064045571	WITHOUT_CLASSIFICATION	3.346935954429403E-4	IMPLEMENTATION
//\t\n\"\\'`@$><=;|&{(	WITHOUT_CLASSIFICATION	0.9998269084618239	WITHOUT_CLASSIFICATION	1.7309153817620973E-4	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999076533899703	WITHOUT_CLASSIFICATION	9.234661002958563E-5	IMPLEMENTATION
// no check for '*'	WITHOUT_CLASSIFICATION	0.9998920304590455	WITHOUT_CLASSIFICATION	1.0796954095444791E-4	IMPLEMENTATION
// no check for '*'	WITHOUT_CLASSIFICATION	0.9998920304590455	WITHOUT_CLASSIFICATION	1.0796954095444791E-4	IMPLEMENTATION
// Binding provided for scope, use it	WITHOUT_CLASSIFICATION	0.9998994787051032	WITHOUT_CLASSIFICATION	1.0052129489680601E-4	IMPLEMENTATION
// this is ensured by the callers	WITHOUT_CLASSIFICATION	0.9999712580811799	WITHOUT_CLASSIFICATION	2.8741918820032914E-5	IMPLEMENTATION
// no binding, just eval in "current" frame (caller's frame)	WITHOUT_CLASSIFICATION	0.999912569691216	WITHOUT_CLASSIFICATION	8.743030878409658E-5	IMPLEMENTATION
// restore position	WITHOUT_CLASSIFICATION	0.9998962837820791	WITHOUT_CLASSIFICATION	1.0371621792088862E-4	IMPLEMENTATION
/* Something like cvar_cbase() from eval.c, factored out for the benefit     * of all the classvar-related node evaluations */	WITHOUT_CLASSIFICATION	0.999952807869642	WITHOUT_CLASSIFICATION	4.719213035789159E-5	IMPLEMENTATION
// Used by the compiler to simplify arg processing	WITHOUT_CLASSIFICATION	0.9999635543282481	WITHOUT_CLASSIFICATION	3.644567175180266E-5	IMPLEMENTATION
// JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace	WITHOUT_CLASSIFICATION	0.999928498845927	WITHOUT_CLASSIFICATION	7.150115407302564E-5	IMPLEMENTATION
// MRI does similar thing on MacOS X with 'EditLine wrapper'.	WITHOUT_CLASSIFICATION	0.9998761474127318	WITHOUT_CLASSIFICATION	1.238525872681566E-4	IMPLEMENTATION
// We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)	WITHOUT_CLASSIFICATION	0.9999694319646527	WITHOUT_CLASSIFICATION	3.056803534724862E-5	IMPLEMENTATION
// JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)	WITHOUT_CLASSIFICATION	0.9999381586195291	WITHOUT_CLASSIFICATION	6.184138047096545E-5	IMPLEMENTATION
// not overridden, let's go	WITHOUT_CLASSIFICATION	0.9996042267916653	WITHOUT_CLASSIFICATION	3.957732083347702E-4	IMPLEMENTATION
/* Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8() */	WITHOUT_CLASSIFICATION	0.9998801946266995	WITHOUT_CLASSIFICATION	1.1980537330048279E-4	IMPLEMENTATION
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9997023131558004	WITHOUT_CLASSIFICATION	2.9768684419967373E-4	IMPLEMENTATION
// Complete using a Proc object	WITHOUT_CLASSIFICATION	0.9998958283068958	WITHOUT_CLASSIFICATION	1.041716931041049E-4	IMPLEMENTATION
// clear basename so it's anonymous when raising	WITHOUT_CLASSIFICATION	0.9999282020805266	WITHOUT_CLASSIFICATION	7.17979194734201E-5	IMPLEMENTATION
// These are not really used by timeout, but exposed for compatibility	WITHOUT_CLASSIFICATION	0.9999767623783888	WITHOUT_CLASSIFICATION	2.323762161120652E-5	IMPLEMENTATION
// Timeout module methods	WITHOUT_CLASSIFICATION	0.9998712605200267	WITHOUT_CLASSIFICATION	1.2873947997337195E-4	IMPLEMENTATION
// Toplevel defines	WITHOUT_CLASSIFICATION	0.9998026343049446	WITHOUT_CLASSIFICATION	1.973656950552402E-4	IMPLEMENTATION
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9998939713343685	WITHOUT_CLASSIFICATION	1.0602866563153356E-4	IMPLEMENTATION
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9998767942733402	WITHOUT_CLASSIFICATION	1.2320572665983087E-4	IMPLEMENTATION
// if it's the exception we're expecting	WITHOUT_CLASSIFICATION	0.9998694905874661	WITHOUT_CLASSIFICATION	1.3050941253393592E-4	IMPLEMENTATION
// and we were given a specific exception	WITHOUT_CLASSIFICATION	0.9998897916713405	WITHOUT_CLASSIFICATION	1.1020832865940992E-4	IMPLEMENTATION
// otherwise, rethrow	WITHOUT_CLASSIFICATION	0.9998750529634834	WITHOUT_CLASSIFICATION	1.2494703651658992E-4	IMPLEMENTATION
// // Remove the Executor task now, to avoid cancelled tasks accumulating // until an Executor thread can schedule and remove them //	WITHOUT_CLASSIFICATION	0.9999721766572912	WITHOUT_CLASSIFICATION	2.7823342708761246E-5	IMPLEMENTATION
// // If the task was scheduled, wait for it to finish before polling // for the exception it would have thrown. //	WITHOUT_CLASSIFICATION	0.9999299836071613	WITHOUT_CLASSIFICATION	7.001639283865226E-5	IMPLEMENTATION
// NetProtocolBufferedIO	WITHOUT_CLASSIFICATION	0.9998307313872487	WITHOUT_CLASSIFICATION	1.6926861275142458E-4	IMPLEMENTATION
/* When a length is given, read_string acts like get_bytes */	WITHOUT_CLASSIFICATION	0.999897704413369	WITHOUT_CLASSIFICATION	1.0229558663097856E-4	IMPLEMENTATION
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.999909661792426	WITHOUT_CLASSIFICATION	9.033820757390032E-5	IMPLEMENTATION
// ARRAY and STRUCT are only used internally	WITHOUT_CLASSIFICATION	0.9999013466087143	WITHOUT_CLASSIFICATION	9.8653391285697E-5	IMPLEMENTATION
// If no release method is defined, then memory leaks will result.	WITHOUT_CLASSIFICATION	0.999903318842457	WITHOUT_CLASSIFICATION	9.668115754293351E-5	IMPLEMENTATION
/*     * This variant of newStruct is called from StructLayoutBuilder     */	WITHOUT_CLASSIFICATION	0.99996174400966	WITHOUT_CLASSIFICATION	3.82559903399559E-5	IMPLEMENTATION
// This also handles unsigned int -> negative signed int conversion	WITHOUT_CLASSIFICATION	0.9999387716646674	WITHOUT_CLASSIFICATION	6.122833533265818E-5	IMPLEMENTATION
// Windows is LLP64	WITHOUT_CLASSIFICATION	0.9997947443814038	WITHOUT_CLASSIFICATION	2.0525561859620182E-4	IMPLEMENTATION
// Older JDK on linux map 'c' to 'libc.so' which doesn't work	WITHOUT_CLASSIFICATION	0.9999195041132958	WITHOUT_CLASSIFICATION	8.049588670427787E-5	IMPLEMENTATION
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9998777442043078	WITHOUT_CLASSIFICATION	1.2225579569231885E-4	IMPLEMENTATION
// $blah	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.999909661792426	WITHOUT_CLASSIFICATION	9.033820757390032E-5	IMPLEMENTATION
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999393171584209	WITHOUT_CLASSIFICATION	6.068284157903326E-5	IMPLEMENTATION
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9998777442043078	WITHOUT_CLASSIFICATION	1.2225579569231885E-4	IMPLEMENTATION
// // Keep a reference to the temporary memory in the cache so it does // not get freed by the GC until the struct is freed //	WITHOUT_CLASSIFICATION	0.999983699911357	WITHOUT_CLASSIFICATION	1.6300088642911377E-5	IMPLEMENTATION
// Add Pointer::NULL as a constant	WITHOUT_CLASSIFICATION	0.9999371257050208	WITHOUT_CLASSIFICATION	6.287429497909238E-5	IMPLEMENTATION
// Create the ordered list of field names from the map	WITHOUT_CLASSIFICATION	0.9999868530718895	WITHOUT_CLASSIFICATION	1.3146928110439735E-5	IMPLEMENTATION
// Assemble a [ :name, offset ] array	WITHOUT_CLASSIFICATION	0.9998600993179877	WITHOUT_CLASSIFICATION	1.3990068201236204E-4	IMPLEMENTATION
//                case FLOAT:	WITHOUT_CLASSIFICATION	0.9999461447696039	WITHOUT_CLASSIFICATION	5.38552303960945E-5	IMPLEMENTATION
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999465968701332	WITHOUT_CLASSIFICATION	5.340312986682105E-5	IMPLEMENTATION
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999465968701332	WITHOUT_CLASSIFICATION	5.340312986682105E-5	IMPLEMENTATION
// No auto cleanup needed	WITHOUT_CLASSIFICATION	0.9979900666587372	WITHOUT_CLASSIFICATION	0.0020099333412626767	IMPLEMENTATION
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9997139456751325	WITHOUT_CLASSIFICATION	2.860543248675251E-4	IMPLEMENTATION
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999856251838538	WITHOUT_CLASSIFICATION	1.4374816146226556E-5	IMPLEMENTATION
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999856251838538	WITHOUT_CLASSIFICATION	1.4374816146226556E-5	IMPLEMENTATION
/*         * If there is exactly _one_ callback argument to the function,         * then a block can be given and automatically subsituted for the callback         * parameter.         */	WITHOUT_CLASSIFICATION	0.9999992577376502	WITHOUT_CLASSIFICATION	7.422623497925415E-7	IMPLEMENTATION
/*------------------------------------------------------------------------*/	WITHOUT_CLASSIFICATION	0.9999042207953931	WITHOUT_CLASSIFICATION	9.577920460689015E-5	IMPLEMENTATION
//AF_INET	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
//AF_INET	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
// RubyUNIXServer	WITHOUT_CLASSIFICATION	0.9997814680213083	WITHOUT_CLASSIFICATION	2.1853197869172372E-4	IMPLEMENTATION
// line 321	WITHOUT_CLASSIFICATION	0.9997922677728625	WITHOUT_CLASSIFICATION	2.077322271375337E-4	IMPLEMENTATION
// // Set up for potentially fast-int operations //	WITHOUT_CLASSIFICATION	0.999948574736619	WITHOUT_CLASSIFICATION	5.142526338103833E-5	IMPLEMENTATION
// // Hook up the MemoryPointer class if its not already there //	WITHOUT_CLASSIFICATION	0.9999765084368892	WITHOUT_CLASSIFICATION	2.34915631107731E-5	IMPLEMENTATION
// This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and // (2) Socket.getChannel() seems to return null in some cases	WITHOUT_CLASSIFICATION	0.9999893307203798	WITHOUT_CLASSIFICATION	1.0669279620228897E-5	IMPLEMENTATION
// no UNIXSockets on Windows	WITHOUT_CLASSIFICATION	0.9998765291832572	WITHOUT_CLASSIFICATION	1.234708167427986E-4	IMPLEMENTATION
// Sockaddr_un has different structure on different platforms. // See JRUBY-2213 for more details.	WITHOUT_CLASSIFICATION	0.9999119345047843	WITHOUT_CLASSIFICATION	8.806549521566365E-5	IMPLEMENTATION
// There is something valid in the sun_path component	WITHOUT_CLASSIFICATION	0.9999853720545595	WITHOUT_CLASSIFICATION	1.4627945440381568E-5	IMPLEMENTATION
// RubyIPSocket	WITHOUT_CLASSIFICATION	0.999779971725086	WITHOUT_CLASSIFICATION	2.2002827491392825E-4	IMPLEMENTATION
// host is nil or the empty string, bind to INADDR_ANY	WITHOUT_CLASSIFICATION	0.9999668900980055	WITHOUT_CLASSIFICATION	3.310990199445628E-5	IMPLEMENTATION
// host and port given	WITHOUT_CLASSIFICATION	0.9998352430282149	WITHOUT_CLASSIFICATION	1.6475697178508343E-4	IMPLEMENTATION
// RubyUDPSocket	WITHOUT_CLASSIFICATION	0.999779971725086	WITHOUT_CLASSIFICATION	2.2002827491392825E-4	IMPLEMENTATION
// By default we always reverse lookup unless do_not_reverse_lookup set.	WITHOUT_CLASSIFICATION	0.9999479968356366	WITHOUT_CLASSIFICATION	5.2003164363405925E-5	IMPLEMENTATION
// make sure descriptor is registered	WITHOUT_CLASSIFICATION	0.9999661243507953	WITHOUT_CLASSIFICATION	3.387564920460041E-5	IMPLEMENTATION
// continue with normal initialization	WITHOUT_CLASSIFICATION	0.9999753832591344	WITHOUT_CLASSIFICATION	2.4616740865595878E-5	IMPLEMENTATION
// recv returns nil on EOF	WITHOUT_CLASSIFICATION	0.9998930315773433	WITHOUT_CLASSIFICATION	1.0696842265662774E-4	IMPLEMENTATION
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9998632725011527	WITHOUT_CLASSIFICATION	1.3672749884737924E-4	IMPLEMENTATION
// RubyBasicSocket	WITHOUT_CLASSIFICATION	0.9997800980149022	WITHOUT_CLASSIFICATION	2.1990198509776364E-4	IMPLEMENTATION
// we don't have to define any that we don't support; see socket.c	WITHOUT_CLASSIFICATION	0.9999630189314688	WITHOUT_CLASSIFICATION	3.698106853126266E-5	IMPLEMENTATION
// mandatory constants we haven't implemented	WITHOUT_CLASSIFICATION	0.9348384750480889	WITHOUT_CLASSIFICATION	0.065161524951911	IMPLEMENTATION
// constants webrick crashes without	WITHOUT_CLASSIFICATION	0.9998995750497908	WITHOUT_CLASSIFICATION	1.0042495020927719E-4	IMPLEMENTATION
// More constants needed by specs	WITHOUT_CLASSIFICATION	0.9998689584466115	WITHOUT_CLASSIFICATION	1.3104155338846532E-4	IMPLEMENTATION
// normal file descriptor..try to work with it	WITHOUT_CLASSIFICATION	0.9999098552395476	WITHOUT_CLASSIFICATION	9.014476045241044E-5	IMPLEMENTATION
// AF_INET	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
// 255.255.255.255	WITHOUT_CLASSIFICATION	0.999779971725086	WITHOUT_CLASSIFICATION	2.2002827491392825E-4	IMPLEMENTATION
// 0.0.0.0	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
//def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)	WITHOUT_CLASSIFICATION	0.999849851268324	WITHOUT_CLASSIFICATION	1.5014873167590746E-4	IMPLEMENTATION
// line 323	WITHOUT_CLASSIFICATION	0.9997922677728625	WITHOUT_CLASSIFICATION	2.077322271375337E-4	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999174557199108	WITHOUT_CLASSIFICATION	8.254428008925833E-5	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999174557199108	WITHOUT_CLASSIFICATION	8.254428008925833E-5	IMPLEMENTATION
// ok, it's a socket...set values accordingly // just using AF_INET since we can't tell from SocketChannel...	WITHOUT_CLASSIFICATION	0.9999261977493548	WITHOUT_CLASSIFICATION	7.380225064514964E-5	IMPLEMENTATION
// datagram, set accordingly // again, AF_INET	WITHOUT_CLASSIFICATION	0.9998983278462139	WITHOUT_CLASSIFICATION	1.0167215378609838E-4	IMPLEMENTATION
//IRubyObject family = args[2];	WITHOUT_CLASSIFICATION	0.9998607401443717	WITHOUT_CLASSIFICATION	1.392598556282231E-4	IMPLEMENTATION
// When Socket::AI_PASSIVE and host is nil, return 'any' address. 	WITHOUT_CLASSIFICATION	0.999917135311309	WITHOUT_CLASSIFICATION	8.286468869096032E-5	IMPLEMENTATION
// The value of 1 is for Socket::AI_PASSIVE.	WITHOUT_CLASSIFICATION	0.9999388482849378	WITHOUT_CLASSIFICATION	6.11517150620637E-5	IMPLEMENTATION
// RubySocket	WITHOUT_CLASSIFICATION	0.999779971725086	WITHOUT_CLASSIFICATION	2.2002827491392825E-4	IMPLEMENTATION
// numeric host, use it for port	WITHOUT_CLASSIFICATION	0.9998825222538755	WITHOUT_CLASSIFICATION	1.1747774612455717E-4	IMPLEMENTATION
//            e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999597604423732	WITHOUT_CLASSIFICATION	4.0239557626793765E-5	IMPLEMENTATION
// we were woken up without being selected...poll for thread events and go back to sleep	WITHOUT_CLASSIFICATION	0.9999750669546564	WITHOUT_CLASSIFICATION	2.4933045343675832E-5	IMPLEMENTATION
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999795700634223	WITHOUT_CLASSIFICATION	2.0429936577739826E-5	IMPLEMENTATION
// no connection immediately accepted, let them try again	WITHOUT_CLASSIFICATION	0.9999065563195698	WITHOUT_CLASSIFICATION	9.344368043020298E-5	IMPLEMENTATION
// do nothing, just exit	WITHOUT_CLASSIFICATION	0.9999725359519767	WITHOUT_CLASSIFICATION	2.7464048023248836E-5	IMPLEMENTATION
//nativeThread.setPriority(priority);	WITHOUT_CLASSIFICATION	0.9998245148687337	WITHOUT_CLASSIFICATION	1.754851312662795E-4	IMPLEMENTATION
// set thread context JRuby classloader here, for Ruby-owned thread	WITHOUT_CLASSIFICATION	0.9999410751924145	WITHOUT_CLASSIFICATION	5.8924807585371223E-5	IMPLEMENTATION
// uber-ThreadKill catcher, since it should always just mean "be dead"	WITHOUT_CLASSIFICATION	0.9996932409476601	WITHOUT_CLASSIFICATION	3.0675905233980326E-4	IMPLEMENTATION
// Call the thread's code	WITHOUT_CLASSIFICATION	0.9998796587025076	WITHOUT_CLASSIFICATION	1.203412974922786E-4	IMPLEMENTATION
// Someone called exit!, so we need to kill the main thread	WITHOUT_CLASSIFICATION	0.999831087942288	WITHOUT_CLASSIFICATION	1.6891205771198286E-4	IMPLEMENTATION
// restore context classloader, in case we're using a thread pool	WITHOUT_CLASSIFICATION	0.9999611481520393	WITHOUT_CLASSIFICATION	3.8851847960710943E-5	IMPLEMENTATION
// be dead	WITHOUT_CLASSIFICATION	0.9954365095175032	WITHOUT_CLASSIFICATION	0.004563490482496765	IMPLEMENTATION
// loop until a context is available, to clean up softrefs that might have been collected	WITHOUT_CLASSIFICATION	0.9999342106482433	WITHOUT_CLASSIFICATION	6.578935175673797E-5	IMPLEMENTATION
// all threads in ruby thread group plus main thread	WITHOUT_CLASSIFICATION	0.9998736694540447	WITHOUT_CLASSIFICATION	1.2633054595543428E-4	IMPLEMENTATION
// thread is not alive, skip it	WITHOUT_CLASSIFICATION	0.9999193728805853	WITHOUT_CLASSIFICATION	8.062711941468605E-5	IMPLEMENTATION
// future is done or cancelled, skip it	WITHOUT_CLASSIFICATION	0.9999040055321023	WITHOUT_CLASSIFICATION	9.599446789761844E-5	IMPLEMENTATION
// first, check if the sender has unreceived mail	WITHOUT_CLASSIFICATION	0.999949997216311	WITHOUT_CLASSIFICATION	5.0002783689083734E-5	IMPLEMENTATION
// then deliver mail to the target	WITHOUT_CLASSIFICATION	0.9999516843483306	WITHOUT_CLASSIFICATION	4.8315651669406826E-5	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9998477145989632	WITHOUT_CLASSIFICATION	1.5228540103685647E-4	IMPLEMENTATION
// Define a second version that doesn't take a block, so we have unique code paths for both cases.	WITHOUT_CLASSIFICATION	0.9999267047217788	WITHOUT_CLASSIFICATION	7.32952782212661E-5	IMPLEMENTATION
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9997739068629596	WITHOUT_CLASSIFICATION	2.2609313704039153E-4	IMPLEMENTATION
// main body	WITHOUT_CLASSIFICATION	0.9997874415295356	WITHOUT_CLASSIFICATION	2.125584704642951E-4	IMPLEMENTATION
// return jump handling	WITHOUT_CLASSIFICATION	0.9999680327876901	WITHOUT_CLASSIFICATION	3.196721230994507E-5	IMPLEMENTATION
// finally	WITHOUT_CLASSIFICATION	0.9963147292693636	WITHOUT_CLASSIFICATION	0.0036852707306363314	IMPLEMENTATION
// return result if we're still good	WITHOUT_CLASSIFICATION	0.9999828092116055	WITHOUT_CLASSIFICATION	1.719078839445507E-5	IMPLEMENTATION
// redo jump handling	WITHOUT_CLASSIFICATION	0.9998108736844475	WITHOUT_CLASSIFICATION	1.8912631555259712E-4	IMPLEMENTATION
// clear the redo	WITHOUT_CLASSIFICATION	0.9999121235543303	WITHOUT_CLASSIFICATION	8.787644566961873E-5	IMPLEMENTATION
// get runtime, create jump error, and throw it	WITHOUT_CLASSIFICATION	0.9999593578289662	WITHOUT_CLASSIFICATION	4.064217103388487E-5	IMPLEMENTATION
// throw redo error if we're still good	WITHOUT_CLASSIFICATION	0.9998796112984925	WITHOUT_CLASSIFICATION	1.2038870150751679E-4	IMPLEMENTATION
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9998669460939865	WITHOUT_CLASSIFICATION	1.3305390601347898E-4	IMPLEMENTATION
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9997983634087795	WITHOUT_CLASSIFICATION	2.016365912205029E-4	IMPLEMENTATION
// No required specified, check actual number of required args	WITHOUT_CLASSIFICATION	0.999941667427491	WITHOUT_CLASSIFICATION	5.833257250896005E-5	IMPLEMENTATION
// actual required is less than 3, so we use specific arity	WITHOUT_CLASSIFICATION	0.9999010657186653	WITHOUT_CLASSIFICATION	9.893428133476213E-5	IMPLEMENTATION
// actual required is greater than 3, raise error (we don't support actual required > 3)	WITHOUT_CLASSIFICATION	0.9998650211073268	WITHOUT_CLASSIFICATION	1.3497889267324317E-4	IMPLEMENTATION
// simple path, no multimethod	WITHOUT_CLASSIFICATION	0.9998511087355119	WITHOUT_CLASSIFICATION	1.4889126448826076E-4	IMPLEMENTATION
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9998114640063259	WITHOUT_CLASSIFICATION	1.8853599367417466E-4	IMPLEMENTATION
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9998114640063259	WITHOUT_CLASSIFICATION	1.8853599367417466E-4	IMPLEMENTATION
// normal all-rest method	WITHOUT_CLASSIFICATION	0.999861129116045	WITHOUT_CLASSIFICATION	1.3887088395497297E-4	IMPLEMENTATION
// for zero, one, two, three arities, JavaMethod.JavaMethod*.call(...IRubyObject[] args...) will check	WITHOUT_CLASSIFICATION	0.9999074233488778	WITHOUT_CLASSIFICATION	9.257665112214825E-5	IMPLEMENTATION
// promise to implement zero to N	WITHOUT_CLASSIFICATION	0.9879620002646711	WITHOUT_CLASSIFICATION	0.012037999735328878	IMPLEMENTATION
// return	WITHOUT_CLASSIFICATION	0.9993526114150081	WITHOUT_CLASSIFICATION	6.473885849919708E-4	IMPLEMENTATION
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9998890212567701	WITHOUT_CLASSIFICATION	1.1097874322986485E-4	IMPLEMENTATION
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9998852259108232	WITHOUT_CLASSIFICATION	1.1477408917688712E-4	IMPLEMENTATION
// confirm minimum args provided	WITHOUT_CLASSIFICATION	0.999883737137178	WITHOUT_CLASSIFICATION	1.162628628219619E-4	IMPLEMENTATION
// confirm maximum not greater than optional	WITHOUT_CLASSIFICATION	0.9999334500081795	WITHOUT_CLASSIFICATION	6.654999182051996E-5	IMPLEMENTATION
// Raise an error if arity does not match requirements	WITHOUT_CLASSIFICATION	0.9999293109067781	WITHOUT_CLASSIFICATION	7.068909322195689E-5	IMPLEMENTATION
// tc	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
// self // name	WITHOUT_CLASSIFICATION	0.9998161816225234	WITHOUT_CLASSIFICATION	1.838183774765969E-4	IMPLEMENTATION
// no args	WITHOUT_CLASSIFICATION	0.996446243103372	WITHOUT_CLASSIFICATION	0.003553756896627936	IMPLEMENTATION
// variable args with block	WITHOUT_CLASSIFICATION	0.9998355863207863	WITHOUT_CLASSIFICATION	1.644136792137247E-4	IMPLEMENTATION
// variable args no block, load null block	WITHOUT_CLASSIFICATION	0.9998563152386563	WITHOUT_CLASSIFICATION	1.436847613438325E-4	IMPLEMENTATION
// zero args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9998462994893278	WITHOUT_CLASSIFICATION	1.5370051067211765E-4	IMPLEMENTATION
// one arg with block	WITHOUT_CLASSIFICATION	0.9998378782099796	WITHOUT_CLASSIFICATION	1.6212179002040523E-4	IMPLEMENTATION
// one arg, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.99985040231305	WITHOUT_CLASSIFICATION	1.4959768695005447E-4	IMPLEMENTATION
// two args with block	WITHOUT_CLASSIFICATION	0.9998329134611299	WITHOUT_CLASSIFICATION	1.670865388700078E-4	IMPLEMENTATION
// two args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9998478171089179	WITHOUT_CLASSIFICATION	1.5218289108205442E-4	IMPLEMENTATION
// three args with block	WITHOUT_CLASSIFICATION	0.9998370604344193	WITHOUT_CLASSIFICATION	1.6293956558057634E-4	IMPLEMENTATION
// three args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.999851594238796	WITHOUT_CLASSIFICATION	1.4840576120403416E-4	IMPLEMENTATION
// load block if it accepts block	WITHOUT_CLASSIFICATION	0.9998943714081762	WITHOUT_CLASSIFICATION	1.0562859182384362E-4	IMPLEMENTATION
// all other arg cases with block	WITHOUT_CLASSIFICATION	0.9998236758833755	WITHOUT_CLASSIFICATION	1.7632411662453712E-4	IMPLEMENTATION
// all other arg cases without block	WITHOUT_CLASSIFICATION	0.9998347525951394	WITHOUT_CLASSIFICATION	1.6524740486053026E-4	IMPLEMENTATION
// one arg, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999629460946706	WITHOUT_CLASSIFICATION	3.705390532936008E-5	IMPLEMENTATION
// two args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999623056912	WITHOUT_CLASSIFICATION	3.7694308799938516E-5	IMPLEMENTATION
// three args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999632413561572	WITHOUT_CLASSIFICATION	3.675864384279384E-5	IMPLEMENTATION
// load target for invocations	WITHOUT_CLASSIFICATION	0.9999343328074561	WITHOUT_CLASSIFICATION	6.566719254386545E-5	IMPLEMENTATION
// load receiver as original type for virtual invocation	WITHOUT_CLASSIFICATION	0.9999422030144066	WITHOUT_CLASSIFICATION	5.7796985593338924E-5	IMPLEMENTATION
// static invocation	WITHOUT_CLASSIFICATION	0.9998595955800512	WITHOUT_CLASSIFICATION	1.404044199487039E-4	IMPLEMENTATION
// virtual invocation	WITHOUT_CLASSIFICATION	0.9998575971731251	WITHOUT_CLASSIFICATION	1.4240282687486995E-4	IMPLEMENTATION
// void return type, so we need to load a nil for returning below	WITHOUT_CLASSIFICATION	0.9999082715797087	WITHOUT_CLASSIFICATION	9.172842029122458E-5	IMPLEMENTATION
// normal finally and exit	WITHOUT_CLASSIFICATION	0.999863351491156	WITHOUT_CLASSIFICATION	1.3664850884400703E-4	IMPLEMENTATION
// promise to implement one to N	WITHOUT_CLASSIFICATION	0.9861227386081471	WITHOUT_CLASSIFICATION	0.013877261391852868	IMPLEMENTATION
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9997983634087795	WITHOUT_CLASSIFICATION	2.016365912205029E-4	IMPLEMENTATION
// these are only needed if we have a non-noop call config	WITHOUT_CLASSIFICATION	0.9999643747131235	WITHOUT_CLASSIFICATION	3.562528687647002E-5	IMPLEMENTATION
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999163168319449	WITHOUT_CLASSIFICATION	8.368316805495812E-5	IMPLEMENTATION
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999163168319449	WITHOUT_CLASSIFICATION	8.368316805495812E-5	IMPLEMENTATION
// singleton classes don't get their own visibility domain	WITHOUT_CLASSIFICATION	0.9999646624609063	WITHOUT_CLASSIFICATION	3.533753909373019E-5	IMPLEMENTATION
// For visibility we need real meta class and not anonymous one from class << self	WITHOUT_CLASSIFICATION	0.9999625739095527	WITHOUT_CLASSIFICATION	3.7426090447219515E-5	IMPLEMENTATION
// SimpleInvocationMethod	WITHOUT_CLASSIFICATION	0.9998528030352407	WITHOUT_CLASSIFICATION	1.471969647593604E-4	IMPLEMENTATION
// never reached	WITHOUT_CLASSIFICATION	0.9997862179408261	WITHOUT_CLASSIFICATION	2.1378205917388913E-4	IMPLEMENTATION
// promise to implement N with block	WITHOUT_CLASSIFICATION	0.9877877561344267	WITHOUT_CLASSIFICATION	0.012212243865573347	IMPLEMENTATION
// promise to implement zero to N with block	WITHOUT_CLASSIFICATION	0.9879106298173355	WITHOUT_CLASSIFICATION	0.012089370182664521	IMPLEMENTATION
// promise to implement one to N with block	WITHOUT_CLASSIFICATION	0.9860636300903592	WITHOUT_CLASSIFICATION	0.013936369909640893	IMPLEMENTATION
// promise to implement two to N with block	WITHOUT_CLASSIFICATION	0.9862496422677937	WITHOUT_CLASSIFICATION	0.01375035773220635	IMPLEMENTATION
// promise to implement zero to three with block	WITHOUT_CLASSIFICATION	0.9894319983980386	WITHOUT_CLASSIFICATION	0.010568001601961412	IMPLEMENTATION
// promise to implement one to three with block	WITHOUT_CLASSIFICATION	0.9878631405479844	WITHOUT_CLASSIFICATION	0.012136859452015628	IMPLEMENTATION
// promise to implement two to three with block	WITHOUT_CLASSIFICATION	0.9879774915738891	WITHOUT_CLASSIFICATION	0.012022508426110788	IMPLEMENTATION
// promise to implement three with block	WITHOUT_CLASSIFICATION	0.9851296460036527	WITHOUT_CLASSIFICATION	0.014870353996347282	IMPLEMENTATION
// promise to implement N	WITHOUT_CLASSIFICATION	0.9869348020442774	WITHOUT_CLASSIFICATION	0.013065197955722445	IMPLEMENTATION
// DumpingInvocationMethodFactory	WITHOUT_CLASSIFICATION	0.999881935673443	WITHOUT_CLASSIFICATION	1.1806432655698326E-4	IMPLEMENTATION
// We promote our box to being its own box since we're changing // visibilities, and need it to be reflected on this method object // independent of any other sharing the box.	WITHOUT_CLASSIFICATION	0.9999620479048621	WITHOUT_CLASSIFICATION	3.795209513798126E-5	IMPLEMENTATION
// Normally we could leave these to fall back on the superclass, but // since it dispatches through the [] version below, which may // dispatch through the []+block version, we can save it a couple hops // by overriding these here.	WITHOUT_CLASSIFICATION	0.9999474897728738	WITHOUT_CLASSIFICATION	5.2510227126156096E-5	IMPLEMENTATION
// promise to implement two to N	WITHOUT_CLASSIFICATION	0.9863079728043732	WITHOUT_CLASSIFICATION	0.013692027195626826	IMPLEMENTATION
// promise to implement three to N	WITHOUT_CLASSIFICATION	0.9842402144658788	WITHOUT_CLASSIFICATION	0.015759785534121152	IMPLEMENTATION
// promise to implement zero to three	WITHOUT_CLASSIFICATION	0.9886524562613854	WITHOUT_CLASSIFICATION	0.011347543738614485	IMPLEMENTATION
// promise to implement one to three	WITHOUT_CLASSIFICATION	0.9869693966611578	WITHOUT_CLASSIFICATION	0.013030603338842128	IMPLEMENTATION
// promise to implement two to three	WITHOUT_CLASSIFICATION	0.9870920583315612	WITHOUT_CLASSIFICATION	0.01290794166843879	IMPLEMENTATION
// promise to implement three	WITHOUT_CLASSIFICATION	0.9828537161422339	WITHOUT_CLASSIFICATION	0.017146283857766002	IMPLEMENTATION
// all other arities use "n" dispatch path	WITHOUT_CLASSIFICATION	0.9998606220805006	WITHOUT_CLASSIFICATION	1.3937791949940884E-4	IMPLEMENTATION
// load up object and add a few useful methods	WITHOUT_CLASSIFICATION	0.9999523136542576	WITHOUT_CLASSIFICATION	4.768634574232764E-5	IMPLEMENTATION
// open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel	WITHOUT_CLASSIFICATION	0.999918789434374	WITHOUT_CLASSIFICATION	8.121056562598088E-5	IMPLEMENTATION
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9986084070857821	WITHOUT_CLASSIFICATION	0.0013915929142178183	IMPLEMENTATION
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.999840229576057	WITHOUT_CLASSIFICATION	1.5977042394298843E-4	IMPLEMENTATION
// create constructor	WITHOUT_CLASSIFICATION	0.9999792007767123	WITHOUT_CLASSIFICATION	2.0799223287700634E-5	IMPLEMENTATION
// wrap self and store the wrapper	WITHOUT_CLASSIFICATION	0.9999084838245419	WITHOUT_CLASSIFICATION	9.151617545809451E-5	IMPLEMENTATION
// end constructor	WITHOUT_CLASSIFICATION	0.999888257555447	WITHOUT_CLASSIFICATION	1.1174244455309631E-4	IMPLEMENTATION
// start setup method	WITHOUT_CLASSIFICATION	0.999914117730284	WITHOUT_CLASSIFICATION	8.588226971600175E-5	IMPLEMENTATION
// set RubyClass	WITHOUT_CLASSIFICATION	0.9998840152208226	WITHOUT_CLASSIFICATION	1.1598477917730177E-4	IMPLEMENTATION
// set Ruby	WITHOUT_CLASSIFICATION	0.9998839835846456	WITHOUT_CLASSIFICATION	1.1601641535442175E-4	IMPLEMENTATION
// all methods dispatch to the simple version by default, which is method_missing normally	WITHOUT_CLASSIFICATION	0.9999774818896647	WITHOUT_CLASSIFICATION	2.2518110335189875E-5	IMPLEMENTATION
// try specific name first, falling back on simple name	WITHOUT_CLASSIFICATION	0.9999089463797883	WITHOUT_CLASSIFICATION	9.105362021166706E-5	IMPLEMENTATION
// get current context	WITHOUT_CLASSIFICATION	0.9999544759710934	WITHOUT_CLASSIFICATION	4.552402890663831E-5	IMPLEMENTATION
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999196567496687	WITHOUT_CLASSIFICATION	8.034325033141529E-5	IMPLEMENTATION
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9986084070857821	WITHOUT_CLASSIFICATION	0.0013915929142178183	IMPLEMENTATION
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.999840229576057	WITHOUT_CLASSIFICATION	1.5977042394298843E-4	IMPLEMENTATION
// create constructor	WITHOUT_CLASSIFICATION	0.9999792007767123	WITHOUT_CLASSIFICATION	2.0799223287700634E-5	IMPLEMENTATION
// end constructor	WITHOUT_CLASSIFICATION	0.999888257555447	WITHOUT_CLASSIFICATION	1.1174244455309631E-4	IMPLEMENTATION
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9984051728095985	WITHOUT_CLASSIFICATION	0.0015948271904014893	IMPLEMENTATION
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999239076135364	WITHOUT_CLASSIFICATION	7.609238646359529E-5	IMPLEMENTATION
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999245684740593	WITHOUT_CLASSIFICATION	7.543152594068135E-5	IMPLEMENTATION
// load null block	WITHOUT_CLASSIFICATION	0.9998548155215916	WITHOUT_CLASSIFICATION	1.4518447840836885E-4	IMPLEMENTATION
// invoke method	WITHOUT_CLASSIFICATION	0.9998509511411545	WITHOUT_CLASSIFICATION	1.4904885884543272E-4	IMPLEMENTATION
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999050555194132	WITHOUT_CLASSIFICATION	9.494448058680889E-5	IMPLEMENTATION
// end setup method	WITHOUT_CLASSIFICATION	0.9998768998640809	WITHOUT_CLASSIFICATION	1.231001359191229E-4	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.999942132941265	WITHOUT_CLASSIFICATION	5.7867058735125514E-5	IMPLEMENTATION
// create static init, for a monitor object	WITHOUT_CLASSIFICATION	0.999983054095036	WITHOUT_CLASSIFICATION	1.694590496402103E-5	IMPLEMENTATION
// store the wrapper	WITHOUT_CLASSIFICATION	0.9998946276413522	WITHOUT_CLASSIFICATION	1.0537235864782335E-4	IMPLEMENTATION
// prepare temp locals	WITHOUT_CLASSIFICATION	0.9998746562624503	WITHOUT_CLASSIFICATION	1.2534373754970917E-4	IMPLEMENTATION
// Try to look up field for simple name // get field; if nonnull, go straight to dispatch	WITHOUT_CLASSIFICATION	0.9999575211656896	WITHOUT_CLASSIFICATION	4.2478834310384046E-5	IMPLEMENTATION
// field is null, lock class and try to populate	WITHOUT_CLASSIFICATION	0.9999579479996704	WITHOUT_CLASSIFICATION	4.20520003296661E-5	IMPLEMENTATION
// try/finally block to ensure unlock	WITHOUT_CLASSIFICATION	0.9998648593635324	WITHOUT_CLASSIFICATION	1.3514063646753526E-4	IMPLEMENTATION
// store it	WITHOUT_CLASSIFICATION	0.9998552873160975	WITHOUT_CLASSIFICATION	1.447126839024567E-4	IMPLEMENTATION
// end of try block	WITHOUT_CLASSIFICATION	0.9999023828116601	WITHOUT_CLASSIFICATION	9.761718833990632E-5	IMPLEMENTATION
// finally block to release monitor	WITHOUT_CLASSIFICATION	0.9998909579895442	WITHOUT_CLASSIFICATION	1.0904201045580928E-4	IMPLEMENTATION
// exception handling for monitor release	WITHOUT_CLASSIFICATION	0.9998680585834882	WITHOUT_CLASSIFICATION	1.3194141651181265E-4	IMPLEMENTATION
// re-get, re-check method; if not null now, go to dispatch	WITHOUT_CLASSIFICATION	0.9998686751678103	WITHOUT_CLASSIFICATION	1.313248321896575E-4	IMPLEMENTATION
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999196567496687	WITHOUT_CLASSIFICATION	8.034325033141529E-5	IMPLEMENTATION
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999239076135364	WITHOUT_CLASSIFICATION	7.609238646359529E-5	IMPLEMENTATION
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999245684740593	WITHOUT_CLASSIFICATION	7.543152594068135E-5	IMPLEMENTATION
// invoke method	WITHOUT_CLASSIFICATION	0.9998509511411545	WITHOUT_CLASSIFICATION	1.4904885884543272E-4	IMPLEMENTATION
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999050555194132	WITHOUT_CLASSIFICATION	9.494448058680889E-5	IMPLEMENTATION
// end setup method	WITHOUT_CLASSIFICATION	0.9998768998640809	WITHOUT_CLASSIFICATION	1.231001359191229E-4	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.999942132941265	WITHOUT_CLASSIFICATION	5.7867058735125514E-5	IMPLEMENTATION
// create the class	WITHOUT_CLASSIFICATION	0.9999720037738783	WITHOUT_CLASSIFICATION	2.7996226121631582E-5	IMPLEMENTATION
// method still not available, call method_missing	WITHOUT_CLASSIFICATION	0.9998435919180513	WITHOUT_CLASSIFICATION	1.5640808194880454E-4	IMPLEMENTATION
// perform the dispatch	WITHOUT_CLASSIFICATION	0.9999028939592898	WITHOUT_CLASSIFICATION	9.71060407101377E-5	IMPLEMENTATION
// try to load the specified name; only if that fails, try to define the class	WITHOUT_CLASSIFICATION	0.9999904438623975	WITHOUT_CLASSIFICATION	9.556137602387422E-6	IMPLEMENTATION
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9998448226825067	WITHOUT_CLASSIFICATION	1.5517731749330085E-4	IMPLEMENTATION
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9998448226825067	WITHOUT_CLASSIFICATION	1.5517731749330085E-4	IMPLEMENTATION
// setup the class	WITHOUT_CLASSIFICATION	0.9999480840224061	WITHOUT_CLASSIFICATION	5.191597759396546E-5	IMPLEMENTATION
// now, create a method_added that can replace the DynamicMethod fields as they're redefined	WITHOUT_CLASSIFICATION	0.9999121523301325	WITHOUT_CLASSIFICATION	8.784766986749717E-5	IMPLEMENTATION
// do nothing, it's a non-impl method	WITHOUT_CLASSIFICATION	0.999974190211724	WITHOUT_CLASSIFICATION	2.5809788276089276E-5	IMPLEMENTATION
// probably a primitive	WITHOUT_CLASSIFICATION	0.9998629344975977	WITHOUT_CLASSIFICATION	1.370655024024088E-4	IMPLEMENTATION
// interfaces are handled as modules	WITHOUT_CLASSIFICATION	0.9999399183439416	WITHOUT_CLASSIFICATION	6.0081656058500856E-5	IMPLEMENTATION
// construct the mirror class and parent classes	WITHOUT_CLASSIFICATION	0.9999809657389365	WITHOUT_CLASSIFICATION	1.9034261063578054E-5	IMPLEMENTATION
// set the full name	WITHOUT_CLASSIFICATION	0.9998975795712839	WITHOUT_CLASSIFICATION	1.0242042871608368E-4	IMPLEMENTATION
// include all interfaces	WITHOUT_CLASSIFICATION	0.9999203581851148	WITHOUT_CLASSIFICATION	7.964181488522499E-5	IMPLEMENTATION
// if it's an array, only add methods for aref, aset, and length	WITHOUT_CLASSIFICATION	0.9999423843672565	WITHOUT_CLASSIFICATION	5.761563274349427E-5	IMPLEMENTATION
// add array construction methods	WITHOUT_CLASSIFICATION	0.999962012302634	WITHOUT_CLASSIFICATION	3.79876973660349E-5	IMPLEMENTATION
// add all public constructors (note: getConstructors only returns public ones)	WITHOUT_CLASSIFICATION	0.9999795517276607	WITHOUT_CLASSIFICATION	2.0448272339203883E-5	IMPLEMENTATION
// add all instance and static methods	WITHOUT_CLASSIFICATION	0.9999734573720047	WITHOUT_CLASSIFICATION	2.6542627995264255E-5	IMPLEMENTATION
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9998237992111378	WITHOUT_CLASSIFICATION	1.7620078886206855E-4	IMPLEMENTATION
// too much array creation!	WITHOUT_CLASSIFICATION	0.999882495669876	WITHOUT_CLASSIFICATION	1.175043301240706E-4	IMPLEMENTATION
// only include static methods if specified	WITHOUT_CLASSIFICATION	0.999936756390507	WITHOUT_CLASSIFICATION	6.324360949293747E-5	IMPLEMENTATION
// add a few type-specific special methods	WITHOUT_CLASSIFICATION	0.9999571226063837	WITHOUT_CLASSIFICATION	4.2877393616342546E-5	IMPLEMENTATION
// add all static variables	WITHOUT_CLASSIFICATION	0.9999420231775491	WITHOUT_CLASSIFICATION	5.797682245083457E-5	IMPLEMENTATION
// only public static fields that are valid constants	WITHOUT_CLASSIFICATION	0.9999488526056984	WITHOUT_CLASSIFICATION	5.1147394301496425E-5	IMPLEMENTATION
// looks like someone's trying to raise a Java exception. Let them.	WITHOUT_CLASSIFICATION	0.9999264848178916	WITHOUT_CLASSIFICATION	7.351518210840366E-5	IMPLEMENTATION
// NOTE: The five match methods are arity-split to avoid the cost of boxing arguments // when there's already a cached match. Do not condense them into a single // method.	WITHOUT_CLASSIFICATION	0.9999893848798179	WITHOUT_CLASSIFICATION	1.0615120182001603E-5	IMPLEMENTATION
// TODO: This is where we would want to do precision checks to see // if it's non-destructive to coerce a given type into the target // integral primitive	WITHOUT_CLASSIFICATION	0.5652388620397787	WITHOUT_CLASSIFICATION	0.4347611379602213	IMPLEMENTATION
// long first because it's what Fixnum claims to be	WITHOUT_CLASSIFICATION	0.999959379947174	WITHOUT_CLASSIFICATION	4.062005282598832E-5	IMPLEMENTATION
// double first because it's what float claims to be	WITHOUT_CLASSIFICATION	0.9999824898863374	WITHOUT_CLASSIFICATION	1.7510113662584285E-5	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.930785924680244	WITHOUT_CLASSIFICATION	0.06921407531975601	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9998020957153398	WITHOUT_CLASSIFICATION	1.9790428466003333E-4	IMPLEMENTATION
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999827083090062	WITHOUT_CLASSIFICATION	1.729169099385044E-5	IMPLEMENTATION
// we set all Java methods to optional, since many/most have overloads	WITHOUT_CLASSIFICATION	0.9999303384121505	WITHOUT_CLASSIFICATION	6.966158784953891E-5	IMPLEMENTATION
// If we hold a Java object, we need a java_class accessor	WITHOUT_CLASSIFICATION	0.9998962073143546	WITHOUT_CLASSIFICATION	1.0379268564542828E-4	IMPLEMENTATION
// line 326	WITHOUT_CLASSIFICATION	0.9997922677728625	WITHOUT_CLASSIFICATION	2.077322271375337E-4	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9998020957153398	WITHOUT_CLASSIFICATION	1.9790428466003333E-4	IMPLEMENTATION
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999827083090062	WITHOUT_CLASSIFICATION	1.729169099385044E-5	IMPLEMENTATION
// too much array creation!	WITHOUT_CLASSIFICATION	0.999882495669876	WITHOUT_CLASSIFICATION	1.175043301240706E-4	IMPLEMENTATION
// construct new array proxy (ArrayJavaProxy)	WITHOUT_CLASSIFICATION	0.9999283623303608	WITHOUT_CLASSIFICATION	7.163766963922007E-5	IMPLEMENTATION
// Get map of all fields we want to define.  	WITHOUT_CLASSIFICATION	0.9998485009578342	WITHOUT_CLASSIFICATION	1.5149904216581165E-4	IMPLEMENTATION
// Look through all mappings to find a match entry for this field	WITHOUT_CLASSIFICATION	0.9998997855222798	WITHOUT_CLASSIFICATION	1.0021447772028005E-4	IMPLEMENTATION
// Hit a non-java proxy class (included Modules can be a cause of this...skip)	WITHOUT_CLASSIFICATION	0.9999577814235764	WITHOUT_CLASSIFICATION	4.221857642363203E-5	IMPLEMENTATION
// We could not find all of them print out first one (we could print them all?)	WITHOUT_CLASSIFICATION	0.9999673957783588	WITHOUT_CLASSIFICATION	3.260422164110942E-5	IMPLEMENTATION
// dummy bodies for default impls	WITHOUT_CLASSIFICATION	0.9999479786719174	WITHOUT_CLASSIFICATION	5.202132808267653E-5	IMPLEMENTATION
// initialize this if it hasn't been	WITHOUT_CLASSIFICATION	0.9999694193324321	WITHOUT_CLASSIFICATION	3.058066756778026E-5	IMPLEMENTATION
// initialize these if they haven't been	WITHOUT_CLASSIFICATION	0.9999748910161398	WITHOUT_CLASSIFICATION	2.5108983860181514E-5	IMPLEMENTATION
// not allowed for original (non-generated) Java classes // note: not allowing for any previously created class right now; // this restriction might be loosened later for generated classes	WITHOUT_CLASSIFICATION	0.9999669538181211	WITHOUT_CLASSIFICATION	3.304618187893529E-5	IMPLEMENTATION
// setup new, etc unless this is a ConcreteJavaProxy subclass	WITHOUT_CLASSIFICATION	0.9999657929443919	WITHOUT_CLASSIFICATION	3.420705560797465E-5	IMPLEMENTATION
// First we make modifications to the class, to adapt it to being // both a Ruby class and a proxy for a Java type	WITHOUT_CLASSIFICATION	0.9999860586973592	WITHOUT_CLASSIFICATION	1.3941302640769866E-5	IMPLEMENTATION
// list of interfaces we implement	WITHOUT_CLASSIFICATION	0.9981758767223932	WITHOUT_CLASSIFICATION	0.0018241232776068038	IMPLEMENTATION
// We capture the original "new" and make it private	WITHOUT_CLASSIFICATION	0.9999048397923737	WITHOUT_CLASSIFICATION	9.51602076263177E-5	IMPLEMENTATION
// The replacement "new" allocates and inits the Ruby object as before, but // also instantiates our proxified Java object by calling __jcreate!	WITHOUT_CLASSIFICATION	0.9999800225613779	WITHOUT_CLASSIFICATION	1.997743862214369E-5	IMPLEMENTATION
// Next, we define a few private methods that we'll use to manipulate // the Java object contained within this Ruby object	WITHOUT_CLASSIFICATION	0.9999834662114708	WITHOUT_CLASSIFICATION	1.6533788529179678E-5	IMPLEMENTATION
// jcreate instantiates the proxy object which implements all interfaces // and which is wrapped and implemented by this object	WITHOUT_CLASSIFICATION	0.9996025355722498	WITHOUT_CLASSIFICATION	3.9746442775027177E-4	IMPLEMENTATION
// Now we add an "implement" and "implement_all" methods to the class	WITHOUT_CLASSIFICATION	0.9996050782216127	WITHOUT_CLASSIFICATION	3.9492177838731344E-4	IMPLEMENTATION
// implement all forces implementation of all interfaces we intend // for this class to implement	WITHOUT_CLASSIFICATION	0.9994441574371632	WITHOUT_CLASSIFICATION	5.558425628368264E-4	IMPLEMENTATION
// we've already done the above priming logic, just add another interface // to the list of intentions unless we're past the point of no return or // already intend to implement the given interface	WITHOUT_CLASSIFICATION	0.9996367819988046	WITHOUT_CLASSIFICATION	3.632180011955065E-4	IMPLEMENTATION
// walk all superclasses aggregating interfaces	WITHOUT_CLASSIFICATION	0.9999570522161283	WITHOUT_CLASSIFICATION	4.294778387177065E-5	IMPLEMENTATION
// construct the new interface impl and set it into the object	WITHOUT_CLASSIFICATION	0.9999954318372757	WITHOUT_CLASSIFICATION	4.5681627243126784E-6	IMPLEMENTATION
// assuming the user wants a collection of interfaces that can be // included together. make it so.	WITHOUT_CLASSIFICATION	0.9999835760580837	WITHOUT_CLASSIFICATION	1.6423941916191E-5	IMPLEMENTATION
// not allowed for existing Java interface modules	WITHOUT_CLASSIFICATION	0.9999372356313369	WITHOUT_CLASSIFICATION	6.27643686631561E-5	IMPLEMENTATION
// To turn a module into an "interface collection" we add a class instance // variable to hold the list of interfaces, and modify append_features // for this module to call append_features on each of those interfaces as // well	WITHOUT_CLASSIFICATION	0.9999970374188513	WITHOUT_CLASSIFICATION	2.962581148708456E-6	IMPLEMENTATION
// already set up append_features, just add the interface if we haven't already	WITHOUT_CLASSIFICATION	0.9999884276410916	WITHOUT_CLASSIFICATION	1.157235890828087E-5	IMPLEMENTATION
// array-of-interface-type creation/identity	WITHOUT_CLASSIFICATION	0.999931391041086	WITHOUT_CLASSIFICATION	6.860895891411966E-5	IMPLEMENTATION
// keep this variant for kind_of? testing	WITHOUT_CLASSIFICATION	0.9998736176678289	WITHOUT_CLASSIFICATION	1.2638233217107512E-4	IMPLEMENTATION
// array creation should use this variant	WITHOUT_CLASSIFICATION	0.9997769241335344	WITHOUT_CLASSIFICATION	2.2307586646558582E-4	IMPLEMENTATION
// parent.setConstant(name, proxyClass); // where the name should come from ?	WITHOUT_CLASSIFICATION	0.9999529251375937	WITHOUT_CLASSIFICATION	4.707486240620968E-5	IMPLEMENTATION
// including interface module so old-style interface "subclasses" will // respond correctly to #kind_of?, etc.	WITHOUT_CLASSIFICATION	0.9999719217740595	WITHOUT_CLASSIFICATION	2.8078225940588102E-5	IMPLEMENTATION
// add reference to interface module	WITHOUT_CLASSIFICATION	0.999978223318529	WITHOUT_CLASSIFICATION	2.1776681470915227E-5	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9998840091521858	WITHOUT_CLASSIFICATION	1.1599084781416065E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9998840091521858	WITHOUT_CLASSIFICATION	1.1599084781416065E-4	IMPLEMENTATION
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9998237992111378	WITHOUT_CLASSIFICATION	1.7620078886206855E-4	IMPLEMENTATION
// same as argument_types, but matches name in java.lang.reflect.Constructor/Method	WITHOUT_CLASSIFICATION	0.9999288261498048	WITHOUT_CLASSIFICATION	7.117385019509803E-5	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999819004902176	WITHOUT_CLASSIFICATION	1.809950978236018E-5	IMPLEMENTATION
// weakly reserved names	WITHOUT_CLASSIFICATION	0.9998258568421601	WITHOUT_CLASSIFICATION	1.7414315783995568E-4	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999635210601354	WITHOUT_CLASSIFICATION	3.6478939864585293E-5	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999635210601354	WITHOUT_CLASSIFICATION	3.6478939864585293E-5	IMPLEMENTATION
// modified only by addMethod; no synchronization required	WITHOUT_CLASSIFICATION	0.9999442013694869	WITHOUT_CLASSIFICATION	5.579863051319495E-5	IMPLEMENTATION
// if there's no constructor, we must prevent construction	WITHOUT_CLASSIFICATION	0.9999364028521734	WITHOUT_CLASSIFICATION	6.359714782655604E-5	IMPLEMENTATION
// caching constructors, as they're accessed for each new instance	WITHOUT_CLASSIFICATION	0.9999152882098165	WITHOUT_CLASSIFICATION	8.471179018356972E-5	IMPLEMENTATION
// proxy module for interfaces	WITHOUT_CLASSIFICATION	0.9999407488919575	WITHOUT_CLASSIFICATION	5.925110804251253E-5	IMPLEMENTATION
// proxy class for concrete classes.  also used for // "concrete" interfaces, which is why we have two fields	WITHOUT_CLASSIFICATION	0.9999850809920751	WITHOUT_CLASSIFICATION	1.4919007924828546E-5	IMPLEMENTATION
// readable only by thread building proxy, so don't need to be // volatile. used to handle recursive calls to getProxyClass/Module // while proxy is being constructed (usually when a constant // defined by a class is of the same type as that class).	WITHOUT_CLASSIFICATION	0.9999952689623121	WITHOUT_CLASSIFICATION	4.731037687954734E-6	IMPLEMENTATION
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.999960196479554	WITHOUT_CLASSIFICATION	3.980352044592009E-5	IMPLEMENTATION
// Now add all aliases for the static methods (fields) as appropriate	WITHOUT_CLASSIFICATION	0.999942329428267	WITHOUT_CLASSIFICATION	5.7670571732993714E-5	IMPLEMENTATION
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999178832998826	WITHOUT_CLASSIFICATION	8.211670011736667E-5	IMPLEMENTATION
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999424142066824	WITHOUT_CLASSIFICATION	5.7585793317666284E-5	IMPLEMENTATION
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9998871471201538	WITHOUT_CLASSIFICATION	1.1285287984629261E-4	IMPLEMENTATION
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.999879491928175	WITHOUT_CLASSIFICATION	1.2050807182489577E-4	IMPLEMENTATION
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9998390416626022	WITHOUT_CLASSIFICATION	1.6095833739783181E-4	IMPLEMENTATION
// Additionally add ?-postfixed aliases to any boolean methods and properties.	WITHOUT_CLASSIFICATION	0.9999439079732534	WITHOUT_CLASSIFICATION	5.609202674658385E-5	IMPLEMENTATION
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9998672613704819	WITHOUT_CLASSIFICATION	1.327386295181596E-4	IMPLEMENTATION
// something?	WITHOUT_CLASSIFICATION	0.9998285272383352	WITHOUT_CLASSIFICATION	1.714727616647983E-4	IMPLEMENTATION
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.999981038960919	WITHOUT_CLASSIFICATION	1.8961039080957458E-5	IMPLEMENTATION
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.999981038960919	WITHOUT_CLASSIFICATION	1.8961039080957458E-5	IMPLEMENTATION
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999921714787137	WITHOUT_CLASSIFICATION	7.82852128642872E-6	IMPLEMENTATION
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999921714787137	WITHOUT_CLASSIFICATION	7.82852128642872E-6	IMPLEMENTATION
// create constructorInstaller; if there are no constructors, it will disable construction	WITHOUT_CLASSIFICATION	0.9999943304463333	WITHOUT_CLASSIFICATION	5.669553666604544E-6	IMPLEMENTATION
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999663138161398	WITHOUT_CLASSIFICATION	3.3686183860198106E-5	IMPLEMENTATION
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999374935462181	WITHOUT_CLASSIFICATION	6.250645378194267E-5	IMPLEMENTATION
// now iterate over all installers and make sure they also have appropriate aliases	WITHOUT_CLASSIFICATION	0.9998991104894223	WITHOUT_CLASSIFICATION	1.0088951057777003E-4	IMPLEMENTATION
// old (quasi-deprecated) interface class	WITHOUT_CLASSIFICATION	0.9999517728559557	WITHOUT_CLASSIFICATION	4.822714404418484E-5	IMPLEMENTATION
// 1.9 support for encodings	WITHOUT_CLASSIFICATION	0.9996043635360244	WITHOUT_CLASSIFICATION	3.95636463975485E-4	IMPLEMENTATION
// double-check the cache now that we're synchronized	WITHOUT_CLASSIFICATION	0.9999678628385488	WITHOUT_CLASSIFICATION	3.213716145120763E-5	IMPLEMENTATION
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.999879491928175	WITHOUT_CLASSIFICATION	1.2050807182489577E-4	IMPLEMENTATION
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9998390416626022	WITHOUT_CLASSIFICATION	1.6095833739783181E-4	IMPLEMENTATION
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9998672613704819	WITHOUT_CLASSIFICATION	1.327386295181596E-4	IMPLEMENTATION
// one word type name that starts lower-case...it may be a primitive type	WITHOUT_CLASSIFICATION	0.999956500936835	WITHOUT_CLASSIFICATION	4.349906316501964E-5	IMPLEMENTATION
// Java.getProxyClass deals with sync issues, so we won't duplicate the logic here	WITHOUT_CLASSIFICATION	0.9999126422994918	WITHOUT_CLASSIFICATION	8.73577005082209E-5	IMPLEMENTATION
// note: intentionally returning the actual array returned from Java, rather // than wrapping it in a RubyArray. wave of the future, when java_class will // return the actual class, rather than a JavaClass wrapper.	WITHOUT_CLASSIFICATION	0.9999956607989234	WITHOUT_CLASSIFICATION	4.339201076479605E-6	IMPLEMENTATION
// see note above re: return type	WITHOUT_CLASSIFICATION	0.9999049063886379	WITHOUT_CLASSIFICATION	9.509361136198666E-5	IMPLEMENTATION
// restrictive security policy; no matter, we only want public // classes anyway	WITHOUT_CLASSIFICATION	0.9999591960325963	WITHOUT_CLASSIFICATION	4.080396740360946E-5	IMPLEMENTATION
// very restrictive policy (disallows Member.PUBLIC) // we'd never actually get this far in that case	WITHOUT_CLASSIFICATION	0.9997131847429711	WITHOUT_CLASSIFICATION	2.8681525702887377E-4	IMPLEMENTATION
// one-dimensional array	WITHOUT_CLASSIFICATION	0.9998582034715602	WITHOUT_CLASSIFICATION	1.4179652843981762E-4	IMPLEMENTATION
// n-dimensional array	WITHOUT_CLASSIFICATION	0.9998564814928169	WITHOUT_CLASSIFICATION	1.4351850718301093E-4	IMPLEMENTATION
// if it's an array of arrays, recurse with the component type	WITHOUT_CLASSIFICATION	0.9999634284708158	WITHOUT_CLASSIFICATION	3.657152918421971E-5	IMPLEMENTATION
// we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods // see JRUBY-3130	WITHOUT_CLASSIFICATION	0.9999696385558482	WITHOUT_CLASSIFICATION	3.0361444151890718E-5	IMPLEMENTATION
// Proc implementing an interface, pull in the catch-all code that lets the proc get invoked // no matter what method is called on the interface	WITHOUT_CLASSIFICATION	0.9994976143924724	WITHOUT_CLASSIFICATION	5.02385607527604E-4	IMPLEMENTATION
// can't be converted any more, return it	WITHOUT_CLASSIFICATION	0.9999538453743256	WITHOUT_CLASSIFICATION	4.6154625674296666E-5	IMPLEMENTATION
// getFooBar() => fooBar?, foo_bar?(*)	WITHOUT_CLASSIFICATION	0.9998833632049468	WITHOUT_CLASSIFICATION	1.1663679505332224E-4	IMPLEMENTATION
// If not a property, but is boolean add ?-postfixed aliases.	WITHOUT_CLASSIFICATION	0.999943271678074	WITHOUT_CLASSIFICATION	5.672832192609189E-5	IMPLEMENTATION
// many cases are ok to convert to float; if not one of these, error	WITHOUT_CLASSIFICATION	0.9999500909257094	WITHOUT_CLASSIFICATION	4.9909074290586635E-5	IMPLEMENTATION
// for Object, default to natural wrapper type	WITHOUT_CLASSIFICATION	0.9999660331179517	WITHOUT_CLASSIFICATION	3.396688204831763E-5	IMPLEMENTATION
// rubyObject is already of the required jruby class (or subclass)	WITHOUT_CLASSIFICATION	0.9999719683755038	WITHOUT_CLASSIFICATION	2.80316244962419E-5	IMPLEMENTATION
// the converters handle not only primitive types but also their boxed versions, so we should check // if we have a converter before checking for isPrimitive()	WITHOUT_CLASSIFICATION	0.999988375726868	WITHOUT_CLASSIFICATION	1.1624273131923375E-5	IMPLEMENTATION
// it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999616745506372	WITHOUT_CLASSIFICATION	3.832544936264299E-5	IMPLEMENTATION
// we've found a Java type to which we've coerced the Ruby value, wrap it	WITHOUT_CLASSIFICATION	0.9999260286333165	WITHOUT_CLASSIFICATION	7.39713666835486E-5	IMPLEMENTATION
// set of utility methods for Java-based proxy objects	WITHOUT_CLASSIFICATION	0.9999638898547489	WITHOUT_CLASSIFICATION	3.6110145251091494E-5	IMPLEMENTATION
// the proxy (wrapper) type hierarchy	WITHOUT_CLASSIFICATION	0.9999306051620127	WITHOUT_CLASSIFICATION	6.939483798728272E-5	IMPLEMENTATION
//InterfaceJavaProxy.createInterfaceJavaProxy(context);	WITHOUT_CLASSIFICATION	0.9999145731803339	WITHOUT_CLASSIFICATION	8.542681966605665E-5	IMPLEMENTATION
// also create the JavaProxy* classes	WITHOUT_CLASSIFICATION	0.9999464448769168	WITHOUT_CLASSIFICATION	5.3555123083212254E-5	IMPLEMENTATION
// The template for interface modules	WITHOUT_CLASSIFICATION	0.9999768588033627	WITHOUT_CLASSIFICATION	2.3141196637299885E-5	IMPLEMENTATION
// Now attach Java-related extras to core classes	WITHOUT_CLASSIFICATION	0.9999202195628223	WITHOUT_CLASSIFICATION	7.978043717770399E-5	IMPLEMENTATION
// add all name-to-class mappings	WITHOUT_CLASSIFICATION	0.9999055587771839	WITHOUT_CLASSIFICATION	9.44412228160461E-5	IMPLEMENTATION
// add some base Java classes everyone will need	WITHOUT_CLASSIFICATION	0.999953337215262	WITHOUT_CLASSIFICATION	4.666278473792312E-5	IMPLEMENTATION
// finally, set JavaSupport.isEnabled to true	WITHOUT_CLASSIFICATION	0.9998819144527752	WITHOUT_CLASSIFICATION	1.1808554722478989E-4	IMPLEMENTATION
// shouldn't happen, but if a superclass is specified, it's not ours	WITHOUT_CLASSIFICATION	0.9999618227509893	WITHOUT_CLASSIFICATION	3.8177249010690476E-5	IMPLEMENTATION
// include any interfaces we extend	WITHOUT_CLASSIFICATION	0.9999195311353497	WITHOUT_CLASSIFICATION	8.04688646503147E-5	IMPLEMENTATION
// java.lang.Object is added at root of java proxy classes	WITHOUT_CLASSIFICATION	0.9999548270938566	WITHOUT_CLASSIFICATION	4.517290614333769E-5	IMPLEMENTATION
// other java proxy classes added under their superclass' java proxy	WITHOUT_CLASSIFICATION	0.9999444832081277	WITHOUT_CLASSIFICATION	5.551679187238139E-5	IMPLEMENTATION
// include interface modules into the proxy class	WITHOUT_CLASSIFICATION	0.9999725375299905	WITHOUT_CLASSIFICATION	2.746247000943814E-5	IMPLEMENTATION
// JRUBY-2938 the proxy class might already exist	WITHOUT_CLASSIFICATION	0.9999517384813493	WITHOUT_CLASSIFICATION	4.826151865068215E-5	IMPLEMENTATION
// add java_method for unbound use	WITHOUT_CLASSIFICATION	0.9999226449563422	WITHOUT_CLASSIFICATION	7.735504365773596E-5	IMPLEMENTATION
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999092499203581	WITHOUT_CLASSIFICATION	9.075007964184731E-5	IMPLEMENTATION
// we'll only map conventional class names to modules 	WITHOUT_CLASSIFICATION	0.9999229908003233	WITHOUT_CLASSIFICATION	7.700919967662188E-5	IMPLEMENTATION
/* expected */	WITHOUT_CLASSIFICATION	0.9998750408457515	WITHOUT_CLASSIFICATION	1.249591542485033E-4	IMPLEMENTATION
// Haven't found a class, continue on as though it were a package	WITHOUT_CLASSIFICATION	0.9999523890637554	WITHOUT_CLASSIFICATION	4.76109362446643E-5	IMPLEMENTATION
// upper case name, so most likely a class	WITHOUT_CLASSIFICATION	0.9999388352826564	WITHOUT_CLASSIFICATION	6.116471734358831E-5	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999819004902176	WITHOUT_CLASSIFICATION	1.809950978236018E-5	IMPLEMENTATION
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999092499203581	WITHOUT_CLASSIFICATION	9.075007964184731E-5	IMPLEMENTATION
// this is where we'll get connected when classes are opened using // package module syntax.	WITHOUT_CLASSIFICATION	0.9999793259237217	WITHOUT_CLASSIFICATION	2.0674076278283866E-5	IMPLEMENTATION
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.999977532808929	WITHOUT_CLASSIFICATION	2.2467191071001194E-5	IMPLEMENTATION
// this covers primitives and (unlikely) lower-case class names	WITHOUT_CLASSIFICATION	0.9999518902170996	WITHOUT_CLASSIFICATION	4.8109782900383625E-5	IMPLEMENTATION
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999164903263948	WITHOUT_CLASSIFICATION	8.350967360518171E-5	IMPLEMENTATION
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999164903263948	WITHOUT_CLASSIFICATION	8.350967360518171E-5	IMPLEMENTATION
// Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.999904173497341	WITHOUT_CLASSIFICATION	9.582650265897807E-5	IMPLEMENTATION
// Create list of interfaces to proxy (and make sure they really are interfaces)	WITHOUT_CLASSIFICATION	0.9999881564037613	WITHOUT_CLASSIFICATION	1.1843596238635914E-5	IMPLEMENTATION
// hashcode is a combination of the interfaces and the Ruby class we're using // to implement them	WITHOUT_CLASSIFICATION	0.9991763239582812	WITHOUT_CLASSIFICATION	8.236760417188359E-4	IMPLEMENTATION
// if it's a singleton class and the real class is proc, we're doing closure conversion // so just use Proc's hashcode	WITHOUT_CLASSIFICATION	0.9999820429012163	WITHOUT_CLASSIFICATION	1.7957098783782702E-5	IMPLEMENTATION
// normal new class implementing interfaces	WITHOUT_CLASSIFICATION	0.99874016780611	WITHOUT_CLASSIFICATION	0.0012598321938900653	IMPLEMENTATION
/*         * Initialize some components.         */	WITHOUT_CLASSIFICATION	0.9999940473449626	WITHOUT_CLASSIFICATION	5.9526550374193246E-6	IMPLEMENTATION
// not synchronizing these methods, no harm if these values get set more // than once. // (also note that there's no chance of getting a partially initialized // class/module, as happens-before is guaranteed by volatile write/read // of constants table.)	WITHOUT_CLASSIFICATION	0.9999828525046566	WITHOUT_CLASSIFICATION	1.7147495343487247E-5	IMPLEMENTATION
// Java reflection does not allow retrieving constructors like methods	WITHOUT_CLASSIFICATION	0.9999413238688224	WITHOUT_CLASSIFICATION	5.867613117758746E-5	IMPLEMENTATION
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999214953447012	WITHOUT_CLASSIFICATION	7.850465529879172E-5	IMPLEMENTATION
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999214953447012	WITHOUT_CLASSIFICATION	7.850465529879172E-5	IMPLEMENTATION
// no matching ctor found	WITHOUT_CLASSIFICATION	0.9999167205973539	WITHOUT_CLASSIFICATION	8.327940264601092E-5	IMPLEMENTATION
// Create Ruby proxies for any input arguments that are not primitives.	WITHOUT_CLASSIFICATION	0.9998888935826151	WITHOUT_CLASSIFICATION	1.1110641738479101E-4	IMPLEMENTATION
// prepare a faster handle if handles are enabled and the method and class are public	WITHOUT_CLASSIFICATION	0.9999654885982123	WITHOUT_CLASSIFICATION	3.451140178778586E-5	IMPLEMENTATION
// must be a public method	WITHOUT_CLASSIFICATION	0.9998974322244397	WITHOUT_CLASSIFICATION	1.0256777556022395E-4	IMPLEMENTATION
// must be a public class	WITHOUT_CLASSIFICATION	0.9999196514733784	WITHOUT_CLASSIFICATION	8.034852662157023E-5	IMPLEMENTATION
// must have been loaded from our known classloader hierarchy	WITHOUT_CLASSIFICATION	0.9998788342166773	WITHOUT_CLASSIFICATION	1.2116578332263149E-4	IMPLEMENTATION
// Special classes like Collections.EMPTY_LIST are inner classes that are private but  // implement public interfaces.  Their methods are all public methods for the public  // interface.  Let these public methods execute via setAccessible(true). 	WITHOUT_CLASSIFICATION	0.999940932911986	WITHOUT_CLASSIFICATION	5.9067088013905594E-5	IMPLEMENTATION
// search through all declared methods to find a closest match	WITHOUT_CLASSIFICATION	0.9999592939377818	WITHOUT_CLASSIFICATION	4.070606221823905E-5	IMPLEMENTATION
// no matching method found	WITHOUT_CLASSIFICATION	0.9999158425730171	WITHOUT_CLASSIFICATION	8.415742698277872E-5	IMPLEMENTATION
// this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.9999802724143849	WITHOUT_CLASSIFICATION	1.9727585615036948E-5	IMPLEMENTATION
/*         * First we need to register the JRuby engine.         */	WITHOUT_CLASSIFICATION	0.9999829467126655	WITHOUT_CLASSIFICATION	1.705328733450094E-5	IMPLEMENTATION
/*         * Now we create a new BSFManager.         */	WITHOUT_CLASSIFICATION	0.9999961646621671	WITHOUT_CLASSIFICATION	3.8353378328781914E-6	IMPLEMENTATION
/*         * Initialize a simple Frame.          */	WITHOUT_CLASSIFICATION	0.9999873619405403	WITHOUT_CLASSIFICATION	1.2638059459774074E-5	IMPLEMENTATION
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9998706981668706	WITHOUT_CLASSIFICATION	1.293018331294379E-4	IMPLEMENTATION
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9998706981668706	WITHOUT_CLASSIFICATION	1.293018331294379E-4	IMPLEMENTATION
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9998417953580208	WITHOUT_CLASSIFICATION	1.582046419792209E-4	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.999942132941265	WITHOUT_CLASSIFICATION	5.7867058735125514E-5	IMPLEMENTATION
// // this test really means, that this is a ruby-defined subclass of a java class //	WITHOUT_CLASSIFICATION	0.9999759991515695	WITHOUT_CLASSIFICATION	2.4000848430420802E-5	IMPLEMENTATION
// for our purposes, Accessibles are also Members, and vice-versa, // so we'll include Member methods here.	WITHOUT_CLASSIFICATION	0.999932213062405	WITHOUT_CLASSIFICATION	6.77869375950702E-5	IMPLEMENTATION
/*             * Declare those components as beans in BSF. Then it will be             * possible to access those components in Ruby as global             * variables ($frame, $menubar, ...)             */	WITHOUT_CLASSIFICATION	0.9999943251683291	WITHOUT_CLASSIFICATION	5.674831670975147E-6	IMPLEMENTATION
/*              * Execute a Ruby script (add the menubar to the frame).             */	WITHOUT_CLASSIFICATION	0.9999928387673972	WITHOUT_CLASSIFICATION	7.16123260278807E-6	IMPLEMENTATION
/*                     * Execute Ruby statements.                     */	WITHOUT_CLASSIFICATION	0.999986094542145	WITHOUT_CLASSIFICATION	1.3905457854847592E-5	IMPLEMENTATION
/*                     * Evaluates a Ruby expression and display the result.                     */	WITHOUT_CLASSIFICATION	0.9999830958671756	WITHOUT_CLASSIFICATION	1.6904132824389165E-5	IMPLEMENTATION
// Populate values for the parameter names	WITHOUT_CLASSIFICATION	0.999970002713126	WITHOUT_CLASSIFICATION	2.9997286874044188E-5	IMPLEMENTATION
/* package scope */	WITHOUT_CLASSIFICATION	0.9998272660783564	WITHOUT_CLASSIFICATION	1.7273392164354157E-4	IMPLEMENTATION
// This point is only reached if there was an exception handler // installed.	WITHOUT_CLASSIFICATION	0.9999835805565409	WITHOUT_CLASSIFICATION	1.6419443459097443E-5	IMPLEMENTATION
// // Ruby-level methods //	WITHOUT_CLASSIFICATION	0.9998644750730469	WITHOUT_CLASSIFICATION	1.3552492695312665E-4	IMPLEMENTATION
// need names ordered for key generation later	WITHOUT_CLASSIFICATION	0.999932027732795	WITHOUT_CLASSIFICATION	6.79722672050178E-5	IMPLEMENTATION
// we only collect methods and interfaces for  // user-defined proxy classes.	WITHOUT_CLASSIFICATION	0.9999876710794097	WITHOUT_CLASSIFICATION	1.232892059027565E-5	IMPLEMENTATION
// get JavaClass if this is the new proxy class; verify it // matches if this is a superclass proxy.	WITHOUT_CLASSIFICATION	0.9999945977888025	WITHOUT_CLASSIFICATION	5.4022111975217E-6	IMPLEMENTATION
// get any included interfaces	WITHOUT_CLASSIFICATION	0.99995931032307	WITHOUT_CLASSIFICATION	4.0689676930040386E-5	IMPLEMENTATION
// lock in the overridden methods for the new class, and any as-yet // uninstantiated ancestor class.	WITHOUT_CLASSIFICATION	0.9999825936748818	WITHOUT_CLASSIFICATION	1.7406325118138367E-5	IMPLEMENTATION
// statically initialized below	WITHOUT_CLASSIFICATION	0.999938510573626	WITHOUT_CLASSIFICATION	6.148942637399588E-5	IMPLEMENTATION
// finish class initializer	WITHOUT_CLASSIFICATION	0.9999314579835009	WITHOUT_CLASSIFICATION	6.854201649900703E-5	IMPLEMENTATION
// trigger class initialization for the class	WITHOUT_CLASSIFICATION	0.9999872143027755	WITHOUT_CLASSIFICATION	1.278569722466081E-5	IMPLEMENTATION
// should not happen!	WITHOUT_CLASSIFICATION	0.999934402056274	WITHOUT_CLASSIFICATION	6.559794372599664E-5	IMPLEMENTATION
// start class	WITHOUT_CLASSIFICATION	0.9999016422252469	WITHOUT_CLASSIFICATION	9.835777475308292E-5	IMPLEMENTATION
// make getter for handler	WITHOUT_CLASSIFICATION	0.9998886029187969	WITHOUT_CLASSIFICATION	1.1139708120319132E-4	IMPLEMENTATION
// make getter for proxy class	WITHOUT_CLASSIFICATION	0.9999254667411396	WITHOUT_CLASSIFICATION	7.453325886043825E-5	IMPLEMENTATION
// add (potentially) overridden names to the key. // TODO: see note above re: optimizations	WITHOUT_CLASSIFICATION	0.9836707766020963	WITHOUT_CLASSIFICATION	0.0163292233979037	IMPLEMENTATION
// We generate all constructors and let some fail during invocation later	WITHOUT_CLASSIFICATION	0.999942625499196	WITHOUT_CLASSIFICATION	5.737450080399608E-5	IMPLEMENTATION
// create static private method field	WITHOUT_CLASSIFICATION	0.9999858684675264	WITHOUT_CLASSIFICATION	1.4131532473704556E-5	IMPLEMENTATION
// load static empty array	WITHOUT_CLASSIFICATION	0.99992021227161	WITHOUT_CLASSIFICATION	7.97877283900844E-5	IMPLEMENTATION
// box arguments	WITHOUT_CLASSIFICATION	0.9997918236570087	WITHOUT_CLASSIFICATION	2.0817634299125171E-4	IMPLEMENTATION
// this is a simple rethrow handler	WITHOUT_CLASSIFICATION	0.9999528207803619	WITHOUT_CLASSIFICATION	4.7179219638161306E-5	IMPLEMENTATION
// // construct the super-proxy method //	WITHOUT_CLASSIFICATION	0.9999398941294222	WITHOUT_CLASSIFICATION	6.010587057773556E-5	IMPLEMENTATION
// do a void return	WITHOUT_CLASSIFICATION	0.9998938188872406	WITHOUT_CLASSIFICATION	1.0618111275937647E-4	IMPLEMENTATION
// // utility methods //	WITHOUT_CLASSIFICATION	0.9998781569657934	WITHOUT_CLASSIFICATION	1.2184303420662967E-4	IMPLEMENTATION
// Is there a supplied proc argument or do we assume a block was // supplied	WITHOUT_CLASSIFICATION	0.9999067675287459	WITHOUT_CLASSIFICATION	9.32324712540373E-5	IMPLEMENTATION
// store call information so method_missing impl can use it	WITHOUT_CLASSIFICATION	0.999930880619786	WITHOUT_CLASSIFICATION	6.91193802140909E-5	IMPLEMENTATION
// use the same logic as in EvaluationState	WITHOUT_CLASSIFICATION	0.9998992149684619	WITHOUT_CLASSIFICATION	1.0078503153809515E-4	IMPLEMENTATION
// no opt, no rest, exact match	WITHOUT_CLASSIFICATION	0.9998896248421427	WITHOUT_CLASSIFICATION	1.1037515785724048E-4	IMPLEMENTATION
// only rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999102627835135	WITHOUT_CLASSIFICATION	8.973721648648962E-5	IMPLEMENTATION
// opt but no rest, must be at least required and no more than required + opt	WITHOUT_CLASSIFICATION	0.9998887628676405	WITHOUT_CLASSIFICATION	1.1123713235951334E-4	IMPLEMENTATION
// opt and rest, must be at least required	WITHOUT_CLASSIFICATION	0.9998758654504155	WITHOUT_CLASSIFICATION	1.2413454958446252E-4	IMPLEMENTATION
// No block from a nil proc	WITHOUT_CLASSIFICATION	0.999869086120981	WITHOUT_CLASSIFICATION	1.3091387901907484E-4	IMPLEMENTATION
// If not already a proc then we should try and make it one.	WITHOUT_CLASSIFICATION	0.9998755695373917	WITHOUT_CLASSIFICATION	1.2443046260835692E-4	IMPLEMENTATION
// The current block is already associated with proc.  No need to create a new one	WITHOUT_CLASSIFICATION	0.9999957264254198	WITHOUT_CLASSIFICATION	4.273574580168401E-6	IMPLEMENTATION
// Has the method that is calling super received a block argument	WITHOUT_CLASSIFICATION	0.9998786351530049	WITHOUT_CLASSIFICATION	1.2136484699510167E-4	IMPLEMENTATION
/* NUL */	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.999889002284329	WITHOUT_CLASSIFICATION	1.109977156710576E-4	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9998718763812519	WITHOUT_CLASSIFICATION	1.2812361874817602E-4	IMPLEMENTATION
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9998659602340904	WITHOUT_CLASSIFICATION	1.3403976590969493E-4	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9998432375231469	WITHOUT_CLASSIFICATION	1.5676247685305237E-4	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9998020957153398	WITHOUT_CLASSIFICATION	1.9790428466003333E-4	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9998020957153398	WITHOUT_CLASSIFICATION	1.9790428466003333E-4	IMPLEMENTATION
// classes are directly in the hierarchy, so no special logic is necessary for implementer	WITHOUT_CLASSIFICATION	0.9979951387011542	WITHOUT_CLASSIFICATION	0.002004861298845808	IMPLEMENTATION
// must be power of 2 // must be power of 2	WITHOUT_CLASSIFICATION	0.9998684809750221	WITHOUT_CLASSIFICATION	1.3151902497785399E-4	IMPLEMENTATION
// Find power-of-two sizes best matching arguments	WITHOUT_CLASSIFICATION	0.9999058608309743	WITHOUT_CLASSIFICATION	9.413916902569063E-5	IMPLEMENTATION
// note segmentShift differs from ConcurrentHashMap's calculation due to // issues with System.identityHashCode (upper n bits always 0, at least  // under Java 1.6 / WinXP)	WITHOUT_CLASSIFICATION	0.9999465451023164	WITHOUT_CLASSIFICATION	5.345489768352179E-5	IMPLEMENTATION
//      System.err.println("***ObjectProxyCache " + id + " started at "+ new java.util.Date());	WITHOUT_CLASSIFICATION	0.9999483336631108	WITHOUT_CLASSIFICATION	5.166633688920265E-5	IMPLEMENTATION
//    protected void finalize() throws Throwable { //        System.err.println("***ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); //    }	WITHOUT_CLASSIFICATION	0.9999703407083613	WITHOUT_CLASSIFICATION	2.9659291638574267E-5	IMPLEMENTATION
// EntryRefs include hash with key to facilitate lookup by Segment#expunge // after ref is removed from ReferenceQueue	WITHOUT_CLASSIFICATION	0.999686032563355	WITHOUT_CLASSIFICATION	3.1396743664505053E-4	IMPLEMENTATION
// Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather // makes it a final field.  The theory is that doing so should force a happens-before // relationship WRT the WeakReference constructor, guaranteeing that the key will be // visibile to other threads (unless it's been GC'ed).  See JLS 17.5 (final fields) and // 17.4.5 (Happens-before order) to confirm or refute my reasoning here.	WITHOUT_CLASSIFICATION	0.9999852069655063	WITHOUT_CLASSIFICATION	1.479303449357066E-5	IMPLEMENTATION
// references to the Java object and its proxy will either both be // weak or both be soft, since the proxy contains a strong reference // to the object, so it wouldn't make sense for the reference types // to differ.	WITHOUT_CLASSIFICATION	0.9999958576138522	WITHOUT_CLASSIFICATION	4.14238614778245E-6	IMPLEMENTATION
// ctor used by remove/rehash	WITHOUT_CLASSIFICATION	0.9998643573881204	WITHOUT_CLASSIFICATION	1.3564261187959712E-4	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999147393107154	WITHOUT_CLASSIFICATION	8.526068928456178E-5	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999147393107154	WITHOUT_CLASSIFICATION	8.526068928456178E-5	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999147393107154	WITHOUT_CLASSIFICATION	8.526068928456178E-5	IMPLEMENTATION
// note that we'll potentially see the refs for both the java object and // proxy -- whichever we see first will cause the entry to be removed; // the other will not match an entry and will be ignored.	WITHOUT_CLASSIFICATION	0.9999865869302252	WITHOUT_CLASSIFICATION	1.341306977486528E-5	IMPLEMENTATION
// temp method to verify tableSize value // must be called under lock	WITHOUT_CLASSIFICATION	0.9999604282068322	WITHOUT_CLASSIFICATION	3.95717931678158E-5	IMPLEMENTATION
// Single node in list	WITHOUT_CLASSIFICATION	0.9998560259378135	WITHOUT_CLASSIFICATION	1.4397406218641417E-4	IMPLEMENTATION
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9998485469558362	WITHOUT_CLASSIFICATION	1.514530441636451E-4	IMPLEMENTATION
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9998485469558362	WITHOUT_CLASSIFICATION	1.514530441636451E-4	IMPLEMENTATION
// entry exists, proxy has been gc'ed. replace entry.	WITHOUT_CLASSIFICATION	0.9999075299160016	WITHOUT_CLASSIFICATION	9.247008399835028E-5	IMPLEMENTATION
// Where we get new positions from.	WITHOUT_CLASSIFICATION	0.9999187320512815	WITHOUT_CLASSIFICATION	8.12679487185062E-5	IMPLEMENTATION
// Start of string ([, (, {, <, ', ", \n) 	WITHOUT_CLASSIFICATION	0.9999496808389898	WITHOUT_CLASSIFICATION	5.031916101015615E-5	IMPLEMENTATION
// Number of newlines read from the reader	WITHOUT_CLASSIFICATION	0.9999461279731456	WITHOUT_CLASSIFICATION	5.3872026854386596E-5	IMPLEMENTATION
// How many bytes into the source are we?	WITHOUT_CLASSIFICATION	0.999941594674253	WITHOUT_CLASSIFICATION	5.840532574684056E-5	IMPLEMENTATION
// For 'list' and only populated if list is not null.	WITHOUT_CLASSIFICATION	0.9999222933934857	WITHOUT_CLASSIFICATION	7.770660651435876E-5	IMPLEMENTATION
// Last full line read.	WITHOUT_CLASSIFICATION	0.9998408887305518	WITHOUT_CLASSIFICATION	1.591112694481641E-4	IMPLEMENTATION
// Save sourceLine for error reporting to display line where error occurred	WITHOUT_CLASSIFICATION	0.9999391475555816	WITHOUT_CLASSIFICATION	6.0852444418494694E-5	IMPLEMENTATION
// Get rest of line. lineBuffer filled as side-effect...	WITHOUT_CLASSIFICATION	0.9998959693383462	WITHOUT_CLASSIFICATION	1.0403066165373693E-4	IMPLEMENTATION
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9998864131613935	WITHOUT_CLASSIFICATION	1.1358683860648515E-4	IMPLEMENTATION
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9998864131613935	WITHOUT_CLASSIFICATION	1.1358683860648515E-4	IMPLEMENTATION
// End of string (], ), }, >, ', ", \0)	WITHOUT_CLASSIFICATION	0.9999153191916821	WITHOUT_CLASSIFICATION	8.46808083180081E-5	IMPLEMENTATION
// How many strings are nested in the current string term	WITHOUT_CLASSIFICATION	0.9999868271816721	WITHOUT_CLASSIFICATION	1.3172818327817639E-5	IMPLEMENTATION
// Single-quote fast path	WITHOUT_CLASSIFICATION	0.999843077182243	WITHOUT_CLASSIFICATION	1.5692281775714213E-4	IMPLEMENTATION
// Regexp engine 'java'	WITHOUT_CLASSIFICATION	0.9998368440393172	WITHOUT_CLASSIFICATION	1.6315596068287944E-4	IMPLEMENTATION
// Was a goto in original ruby lexer	WITHOUT_CLASSIFICATION	0.9998800695410982	WITHOUT_CLASSIFICATION	1.1993045890177762E-4	IMPLEMENTATION
/* just ignore */	WITHOUT_CLASSIFICATION	0.9999054182810323	WITHOUT_CLASSIFICATION	9.45817189677024E-5	IMPLEMENTATION
/* octal constant */	WITHOUT_CLASSIFICATION	0.9998052447674797	WITHOUT_CLASSIFICATION	1.9475523252033913E-4	IMPLEMENTATION
/* hex constant */	WITHOUT_CLASSIFICATION	0.9998042835722201	WITHOUT_CLASSIFICATION	1.9571642777999675E-4	IMPLEMENTATION
// PUSH(1)	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
// POP	WITHOUT_CLASSIFICATION	0.9954421090609331	WITHOUT_CLASSIFICATION	0.0045578909390668184	IMPLEMENTATION
// PUSH(0).  If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.	WITHOUT_CLASSIFICATION	0.9998163352588817	WITHOUT_CLASSIFICATION	1.8366474111824956E-4	IMPLEMENTATION
// LEXPOP	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
// SET_P	WITHOUT_CLASSIFICATION	0.9954237523227283	WITHOUT_CLASSIFICATION	0.004576247677271736	IMPLEMENTATION
// Marker delimiting heredoc boundary	WITHOUT_CLASSIFICATION	0.999855648657628	WITHOUT_CLASSIFICATION	1.4435134237197376E-4	IMPLEMENTATION
// Found end marker for this heredoc	WITHOUT_CLASSIFICATION	0.9999130100755775	WITHOUT_CLASSIFICATION	8.698992442243884E-5	IMPLEMENTATION
// Put back lastLine for any elements past start of heredoc marker	WITHOUT_CLASSIFICATION	0.9999480072658345	WITHOUT_CLASSIFICATION	5.1992734165504946E-5	IMPLEMENTATION
// Last token read via yylex().	WITHOUT_CLASSIFICATION	0.9998638208287117	WITHOUT_CLASSIFICATION	1.3617917128825273E-4	IMPLEMENTATION
// Value of last token which had a value associated with it.	WITHOUT_CLASSIFICATION	0.9999571705016098	WITHOUT_CLASSIFICATION	4.282949839021291E-5	IMPLEMENTATION
// Stream of data that yylex() examines.	WITHOUT_CLASSIFICATION	0.999884032408217	WITHOUT_CLASSIFICATION	1.1596759178292813E-4	IMPLEMENTATION
// Used for tiny smidgen of grammar in lexer (see setParserSupport())	WITHOUT_CLASSIFICATION	0.9998937241359956	WITHOUT_CLASSIFICATION	1.0627586400440059E-4	IMPLEMENTATION
// Give a name to a value.  Enebo: This should be used more.	WITHOUT_CLASSIFICATION	0.9998493345450734	WITHOUT_CLASSIFICATION	1.5066545492654505E-4	IMPLEMENTATION
// When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').	WITHOUT_CLASSIFICATION	0.9999404053156176	WITHOUT_CLASSIFICATION	5.959468438236805E-5	IMPLEMENTATION
// Are we lexing Ruby 1.8 or 1.9+ syntax	WITHOUT_CLASSIFICATION	0.9998499834596709	WITHOUT_CLASSIFICATION	1.5001654032900915E-4	IMPLEMENTATION
// Count of nested parentheses (1.9 only)	WITHOUT_CLASSIFICATION	0.9998563056087008	WITHOUT_CLASSIFICATION	1.4369439129918667E-4	IMPLEMENTATION
// 1.9 only	WITHOUT_CLASSIFICATION	0.999779971725086	WITHOUT_CLASSIFICATION	2.2002827491392825E-4	IMPLEMENTATION
// Short-hand (e.g. %{,%.,%!,... versus %Q{).	WITHOUT_CLASSIFICATION	0.9998511189159424	WITHOUT_CLASSIFICATION	1.4888108405765693E-4	IMPLEMENTATION
// Long-hand (e.g. %Q{}).	WITHOUT_CLASSIFICATION	0.9998299028376122	WITHOUT_CLASSIFICATION	1.7009716238777393E-4	IMPLEMENTATION
/* no mb || ismbchar(term)*/	WITHOUT_CLASSIFICATION	0.9998269398243953	WITHOUT_CLASSIFICATION	1.7306017560463261E-4	IMPLEMENTATION
/*     * Not normally used, but is left in here since it can be useful in debugging     * grammar and lexing problems.     *     */	WITHOUT_CLASSIFICATION	0.9999481264810827	WITHOUT_CLASSIFICATION	5.1873518917348317E-5	IMPLEMENTATION
// DEBUGGING HELP 	WITHOUT_CLASSIFICATION	0.999779971725086	WITHOUT_CLASSIFICATION	2.2002827491392825E-4	IMPLEMENTATION
/* '\v' */	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
/* end of script. */	WITHOUT_CLASSIFICATION	0.9998613290225205	WITHOUT_CLASSIFICATION	1.3867097747959626E-4	IMPLEMENTATION
/* white spaces */	WITHOUT_CLASSIFICATION	0.9998301419339688	WITHOUT_CLASSIFICATION	1.69858066031138E-4	IMPLEMENTATION
/* '\v' */	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
/* it's a comment */	WITHOUT_CLASSIFICATION	0.9998446385260156	WITHOUT_CLASSIFICATION	1.5536147398449897E-4	IMPLEMENTATION
// Replace a string of newlines with a single one	WITHOUT_CLASSIFICATION	0.999916630601302	WITHOUT_CLASSIFICATION	8.336939869797295E-5	IMPLEMENTATION
/* $\: output record separator */	WITHOUT_CLASSIFICATION	0.9999017166308183	WITHOUT_CLASSIFICATION	9.828336918183017E-5	IMPLEMENTATION
// EOF (ENEBO: After default?	WITHOUT_CLASSIFICATION	0.9998929474548498	WITHOUT_CLASSIFICATION	1.0705254515017692E-4	IMPLEMENTATION
// documentation nodes	WITHOUT_CLASSIFICATION	0.9998664135274321	WITHOUT_CLASSIFICATION	1.3358647256790854E-4	IMPLEMENTATION
// In case last next was the newline.	WITHOUT_CLASSIFICATION	0.9999322170105689	WITHOUT_CLASSIFICATION	6.778298943114575E-5	IMPLEMENTATION
// Just a plain bang	WITHOUT_CLASSIFICATION	0.9998361636601493	WITHOUT_CLASSIFICATION	1.6383633985078412E-4	IMPLEMENTATION
/* $_: last read line string */	WITHOUT_CLASSIFICATION	0.9999216978975418	WITHOUT_CLASSIFICATION	7.830210245820336E-5	IMPLEMENTATION
/* $~: match-data */	WITHOUT_CLASSIFICATION	0.9998054386311442	WITHOUT_CLASSIFICATION	1.9456136885563847E-4	IMPLEMENTATION
/* $*: argv */	WITHOUT_CLASSIFICATION	0.999779971725086	WITHOUT_CLASSIFICATION	2.2002827491392825E-4	IMPLEMENTATION
/* $$: pid */	WITHOUT_CLASSIFICATION	0.999779971725086	WITHOUT_CLASSIFICATION	2.2002827491392825E-4	IMPLEMENTATION
/* $?: last status */	WITHOUT_CLASSIFICATION	0.9998520070489945	WITHOUT_CLASSIFICATION	1.479929510055851E-4	IMPLEMENTATION
/* $!: error string */	WITHOUT_CLASSIFICATION	0.9999019726052827	WITHOUT_CLASSIFICATION	9.80273947173854E-5	IMPLEMENTATION
/* $@: error position */	WITHOUT_CLASSIFICATION	0.9999077498124521	WITHOUT_CLASSIFICATION	9.225018754786441E-5	IMPLEMENTATION
/* $/: input record separator */	WITHOUT_CLASSIFICATION	0.9998953044322826	WITHOUT_CLASSIFICATION	1.0469556771742862E-4	IMPLEMENTATION
/* $;: field separator */	WITHOUT_CLASSIFICATION	0.9998955871762786	WITHOUT_CLASSIFICATION	1.044128237215056E-4	IMPLEMENTATION
/* $,: output field separator */	WITHOUT_CLASSIFICATION	0.9999189469542996	WITHOUT_CLASSIFICATION	8.105304570031807E-5	IMPLEMENTATION
/* $.: last read line number */	WITHOUT_CLASSIFICATION	0.9998947295990666	WITHOUT_CLASSIFICATION	1.0527040093346804E-4	IMPLEMENTATION
/* $=: ignorecase */	WITHOUT_CLASSIFICATION	0.9998854697783353	WITHOUT_CLASSIFICATION	1.1453022166481734E-4	IMPLEMENTATION
/* $:: load path */	WITHOUT_CLASSIFICATION	0.9998040566148814	WITHOUT_CLASSIFICATION	1.95943385118651E-4	IMPLEMENTATION
/* $<: reading filename */	WITHOUT_CLASSIFICATION	0.999914097499587	WITHOUT_CLASSIFICATION	8.590250041300179E-5	IMPLEMENTATION
/* $": already loaded files */	WITHOUT_CLASSIFICATION	0.9999202677717508	WITHOUT_CLASSIFICATION	7.973222824919468E-5	IMPLEMENTATION
/* $&: last match */	WITHOUT_CLASSIFICATION	0.9998162620846636	WITHOUT_CLASSIFICATION	1.8373791533637956E-4	IMPLEMENTATION
/* $`: string before last match */	WITHOUT_CLASSIFICATION	0.9999298277467379	WITHOUT_CLASSIFICATION	7.017225326214798E-5	IMPLEMENTATION
/* $': string after last match */	WITHOUT_CLASSIFICATION	0.9999239793362078	WITHOUT_CLASSIFICATION	7.602066379209804E-5	IMPLEMENTATION
// methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop	WITHOUT_CLASSIFICATION	0.9999138978710723	WITHOUT_CLASSIFICATION	8.61021289276212E-5	IMPLEMENTATION
/* See if it is a reserved word.  */	WITHOUT_CLASSIFICATION	0.9999038748992133	WITHOUT_CLASSIFICATION	9.61251007866944E-5	IMPLEMENTATION
// enum lex_state	WITHOUT_CLASSIFICATION	0.9997822028775298	WITHOUT_CLASSIFICATION	2.177971224701144E-4	IMPLEMENTATION
// block (primary)	WITHOUT_CLASSIFICATION	0.9997802870151771	WITHOUT_CLASSIFICATION	2.197129848229968E-4	IMPLEMENTATION
// block (expr)	WITHOUT_CLASSIFICATION	0.9997757723746937	WITHOUT_CLASSIFICATION	2.2422762530625772E-4	IMPLEMENTATION
// hash	WITHOUT_CLASSIFICATION	0.9954464936255372	WITHOUT_CLASSIFICATION	0.004553506374462834	IMPLEMENTATION
// ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.	WITHOUT_CLASSIFICATION	0.9995831895881225	WITHOUT_CLASSIFICATION	4.1681041187744013E-4	IMPLEMENTATION
// FIXME: peek('u') utf8 stuff for 1.9	WITHOUT_CLASSIFICATION	0.9997880642925892	WITHOUT_CLASSIFICATION	2.1193570741082513E-4	IMPLEMENTATION
// We don't append '+' since Java number parser gets confused	WITHOUT_CLASSIFICATION	0.9999482692555275	WITHOUT_CLASSIFICATION	5.1730744472455127E-5	IMPLEMENTATION
//  hexadecimal	WITHOUT_CLASSIFICATION	0.9997834364440927	WITHOUT_CLASSIFICATION	2.1656355590719782E-4	IMPLEMENTATION
// binary	WITHOUT_CLASSIFICATION	0.9959636738751809	WITHOUT_CLASSIFICATION	0.004036326124819068	IMPLEMENTATION
// decimal	WITHOUT_CLASSIFICATION	0.9956625710429027	WITHOUT_CLASSIFICATION	0.004337428957097385	IMPLEMENTATION
//Octal	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
//  '_' in number just ignored	WITHOUT_CLASSIFICATION	0.9999676675732849	WITHOUT_CLASSIFICATION	3.233242671516292E-5	IMPLEMENTATION
// backslash	WITHOUT_CLASSIFICATION	0.9997864663737932	WITHOUT_CLASSIFICATION	2.1353362620677292E-4	IMPLEMENTATION
// newline	WITHOUT_CLASSIFICATION	0.996468627643407	WITHOUT_CLASSIFICATION	0.003531372356592924	IMPLEMENTATION
// horizontal tab	WITHOUT_CLASSIFICATION	0.9998519959591545	WITHOUT_CLASSIFICATION	1.4800404084554852E-4	IMPLEMENTATION
// form feed	WITHOUT_CLASSIFICATION	0.9998148390209514	WITHOUT_CLASSIFICATION	1.8516097904864933E-4	IMPLEMENTATION
// vertical tab	WITHOUT_CLASSIFICATION	0.9998529832466098	WITHOUT_CLASSIFICATION	1.470167533901521E-4	IMPLEMENTATION
// alarm(bell)	WITHOUT_CLASSIFICATION	0.999779971725086	WITHOUT_CLASSIFICATION	2.2002827491392825E-4	IMPLEMENTATION
// escape	WITHOUT_CLASSIFICATION	0.995521729555761	WITHOUT_CLASSIFICATION	0.004478270444238978	IMPLEMENTATION
// hex constant	WITHOUT_CLASSIFICATION	0.9998048373177318	WITHOUT_CLASSIFICATION	1.951626822681219E-4	IMPLEMENTATION
//char hexValue = scanHex(2);	WITHOUT_CLASSIFICATION	0.999829544646104	WITHOUT_CLASSIFICATION	1.7045535389606536E-4	IMPLEMENTATION
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.999874007607616	WITHOUT_CLASSIFICATION	1.259923923840082E-4	IMPLEMENTATION
// space	WITHOUT_CLASSIFICATION	0.9956386331934576	WITHOUT_CLASSIFICATION	0.004361366806542449	IMPLEMENTATION
// Where we started this marker match	WITHOUT_CLASSIFICATION	0.999874713256365	WITHOUT_CLASSIFICATION	1.2528674363504444E-4	IMPLEMENTATION
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999954835119139	WITHOUT_CLASSIFICATION	4.516488086067922E-6	IMPLEMENTATION
// We use offset here to keep track of extra newlines for windows	WITHOUT_CLASSIFICATION	0.9998955953508556	WITHOUT_CLASSIFICATION	1.0440464914444291E-4	IMPLEMENTATION
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.999874007607616	WITHOUT_CLASSIFICATION	1.259923923840082E-4	IMPLEMENTATION
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9998350678225119	WITHOUT_CLASSIFICATION	1.6493217748820524E-4	IMPLEMENTATION
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9998350678225119	WITHOUT_CLASSIFICATION	1.6493217748820524E-4	IMPLEMENTATION
// Where we get our newest char's	WITHOUT_CLASSIFICATION	0.9998720310419832	WITHOUT_CLASSIFICATION	1.2796895801680454E-4	IMPLEMENTATION
// Our readback/pushback buffer.	WITHOUT_CLASSIFICATION	0.9998485170760574	WITHOUT_CLASSIFICATION	1.5148292394258396E-4	IMPLEMENTATION
// index of last character in pushback buffer	WITHOUT_CLASSIFICATION	0.9999122428314082	WITHOUT_CLASSIFICATION	8.775716859180499E-5	IMPLEMENTATION
// Character read before previous read	WITHOUT_CLASSIFICATION	0.9999169586280126	WITHOUT_CLASSIFICATION	8.304137198743603E-5	IMPLEMENTATION
// keep value of twoAgo around so we can restore after we unread	WITHOUT_CLASSIFICATION	0.9999099147697192	WITHOUT_CLASSIFICATION	9.008523028077141E-5	IMPLEMENTATION
// NetProtocolBufferedIOLibrary	WITHOUT_CLASSIFICATION	0.9998437889631184	WITHOUT_CLASSIFICATION	1.5621103688151188E-4	IMPLEMENTATION
// BigDecimalLibrary	WITHOUT_CLASSIFICATION	0.9997843012717729	WITHOUT_CLASSIFICATION	2.156987282271101E-4	IMPLEMENTATION
// TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. // We did it here for now	WITHOUT_CLASSIFICATION	0.9020642556844474	WITHOUT_CLASSIFICATION	0.09793574431555266	IMPLEMENTATION
// Ruby's designation for some platforms, minus version numbers in some cases	WITHOUT_CLASSIFICATION	0.999933787222649	WITHOUT_CLASSIFICATION	6.621277735102938E-5	IMPLEMENTATION
// that's what JDK5 produces on Windows Vista	WITHOUT_CLASSIFICATION	0.9998539780073975	WITHOUT_CLASSIFICATION	1.460219926025577E-4	IMPLEMENTATION
// Rubygems is too specific on host cpu so until we have real need lets default to universal //setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));	WITHOUT_CLASSIFICATION	0.9999780821093149	WITHOUT_CLASSIFICATION	2.1917890684981658E-5	IMPLEMENTATION
// Our shell scripts pass in non-canonicalized paths, but even if we didn't // anyone who did would become unhappy because Ruby apps expect no relative // operators in the pathname (rubygems, for example).	WITHOUT_CLASSIFICATION	0.9999739597415643	WITHOUT_CLASSIFICATION	2.604025843574243E-5	IMPLEMENTATION
// this set is only for darwin	WITHOUT_CLASSIFICATION	0.9999045532732923	WITHOUT_CLASSIFICATION	9.544672670774686E-5	IMPLEMENTATION
// DigestLibrary	WITHOUT_CLASSIFICATION	0.9997816383052449	WITHOUT_CLASSIFICATION	2.1836169475499635E-4	IMPLEMENTATION
// all errors, just info; do not prevent loading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.999781635501927	WITHOUT_CLASSIFICATION	2.1836449807289486E-4	IMPLEMENTATION
// all errors, just info; do not prevent unloading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9998606051250665	WITHOUT_CLASSIFICATION	1.393948749334564E-4	IMPLEMENTATION
// do nothing, return dummy version below	WITHOUT_CLASSIFICATION	0.99998713924218	WITHOUT_CLASSIFICATION	1.2860757820050396E-5	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.999779971725086	WITHOUT_CLASSIFICATION	2.2002827491392825E-4	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.999779971725086	WITHOUT_CLASSIFICATION	2.2002827491392825E-4	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.999779971725086	WITHOUT_CLASSIFICATION	2.2002827491392825E-4	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.999779971725086	WITHOUT_CLASSIFICATION	2.2002827491392825E-4	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.999779971725086	WITHOUT_CLASSIFICATION	2.2002827491392825E-4	IMPLEMENTATION
// line 329	WITHOUT_CLASSIFICATION	0.9997922677728625	WITHOUT_CLASSIFICATION	2.077322271375337E-4	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999347956301847	WITHOUT_CLASSIFICATION	6.520436981527308E-5	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9997768482110331	WITHOUT_CLASSIFICATION	2.231517889668881E-4	IMPLEMENTATION
// dynamically increase	WITHOUT_CLASSIFICATION	0.9998703516536803	WITHOUT_CLASSIFICATION	1.2964834631961147E-4	IMPLEMENTATION
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9999382712018229	WITHOUT_CLASSIFICATION	6.172879817715876E-5	IMPLEMENTATION
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9998898065462557	WITHOUT_CLASSIFICATION	1.1019345374434041E-4	IMPLEMENTATION
// shift to yyN	WITHOUT_CLASSIFICATION	0.9997853332905834	WITHOUT_CLASSIFICATION	2.1466670941647188E-4	IMPLEMENTATION
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.999782740873812	WITHOUT_CLASSIFICATION	2.1725912618792567E-4	IMPLEMENTATION
// leave stack alone	WITHOUT_CLASSIFICATION	0.9998114080999618	WITHOUT_CLASSIFICATION	1.8859190003824513E-4	IMPLEMENTATION
// line 271	WITHOUT_CLASSIFICATION	0.999792312911833	WITHOUT_CLASSIFICATION	2.076870881668492E-4	IMPLEMENTATION
// line 274	WITHOUT_CLASSIFICATION	0.999792312911833	WITHOUT_CLASSIFICATION	2.076870881668492E-4	IMPLEMENTATION
// line 303	WITHOUT_CLASSIFICATION	0.9997922677728625	WITHOUT_CLASSIFICATION	2.077322271375337E-4	IMPLEMENTATION
// line 311	WITHOUT_CLASSIFICATION	0.9997923708188575	WITHOUT_CLASSIFICATION	2.0762918114260276E-4	IMPLEMENTATION
// line 314	WITHOUT_CLASSIFICATION	0.9997923708188575	WITHOUT_CLASSIFICATION	2.0762918114260276E-4	IMPLEMENTATION
// line 317	WITHOUT_CLASSIFICATION	0.9997925081340242	WITHOUT_CLASSIFICATION	2.074918659758622E-4	IMPLEMENTATION
// line 332	WITHOUT_CLASSIFICATION	0.9997922677728625	WITHOUT_CLASSIFICATION	2.077322271375337E-4	IMPLEMENTATION
// line 338	WITHOUT_CLASSIFICATION	0.9997922677728625	WITHOUT_CLASSIFICATION	2.077322271375337E-4	IMPLEMENTATION
// line 341	WITHOUT_CLASSIFICATION	0.9997922677728625	WITHOUT_CLASSIFICATION	2.077322271375337E-4	IMPLEMENTATION
// line 344	WITHOUT_CLASSIFICATION	0.9997922677728625	WITHOUT_CLASSIFICATION	2.077322271375337E-4	IMPLEMENTATION
// line 351	WITHOUT_CLASSIFICATION	0.9997922677728625	WITHOUT_CLASSIFICATION	2.077322271375337E-4	IMPLEMENTATION
// line 358	WITHOUT_CLASSIFICATION	0.9997922677728625	WITHOUT_CLASSIFICATION	2.077322271375337E-4	IMPLEMENTATION
// line 367	WITHOUT_CLASSIFICATION	0.9997922677728625	WITHOUT_CLASSIFICATION	2.077322271375337E-4	IMPLEMENTATION
// line 372	WITHOUT_CLASSIFICATION	0.9997922677728625	WITHOUT_CLASSIFICATION	2.077322271375337E-4	IMPLEMENTATION
// line 378	WITHOUT_CLASSIFICATION	0.9997922677728625	WITHOUT_CLASSIFICATION	2.077322271375337E-4	IMPLEMENTATION
// line 382	WITHOUT_CLASSIFICATION	0.9997922677728625	WITHOUT_CLASSIFICATION	2.077322271375337E-4	IMPLEMENTATION
// line 407	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 411	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 414	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 417	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 420	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 426	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 434	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 443	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 446	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 452	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 457	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 464	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 467	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 470	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 479	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 484	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 486	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 492	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 498	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 501	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 504	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 507	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 510	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 519	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 525	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9997768482110331	WITHOUT_CLASSIFICATION	2.231517889668881E-4	IMPLEMENTATION
// line 537	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 540	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 543	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 546	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 556	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 559	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 563	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 566	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 569	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 575	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 578	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 587	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 596	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 604	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 607	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 610	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 613	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 616	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 634	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 638	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 643	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 646	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 655	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 660	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 667	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 670	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 672	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 696	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 701	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 717	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 720	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 726	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 729	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 732	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 735	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 738	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 751	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 754	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 757	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 760	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 763	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 769	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 772	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 775	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 782	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 788	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 791	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 794	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 797	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 803	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 806	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 809	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 815	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 818	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 821	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 824	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 830	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 833	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 836	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 839	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 842	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 848	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 852	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 858	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 861	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 868	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 871	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 876	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 879	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 883	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 893	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 896	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 899	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 903	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 907	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 915	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 920	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 923	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 926	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 932	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 936	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 940	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 944	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 948	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 956	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 960	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 964	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 967	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 972	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 978	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 980	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 984	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 986	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 996	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 1001	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1004	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1008	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1014	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1029	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1032	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1034	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1045	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1048	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1051	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1058	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1070	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1073	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1076	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1079	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1082	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1089	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1097	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1100	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1103	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1107	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1111	WITHOUT_CLASSIFICATION	0.9997923990527314	WITHOUT_CLASSIFICATION	2.0760094726861476E-4	IMPLEMENTATION
// line 1113	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1115	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1119	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1130	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1133	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1135	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1137	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1140	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1151	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1154	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1158	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1164	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1175	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1178	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1187	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1189	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1193	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1204	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1207	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1210	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1214	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1234	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1239	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1243	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1247	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1251	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1263	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1269	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1280	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1283	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1290	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1296	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1299	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1302	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1309	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1313	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1315	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1320	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1328	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1335	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1348	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1352	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1358	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1374	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1381	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1387	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1392	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1415	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1431	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1434	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1440	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1443	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1453	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1456	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1462	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1465	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1470	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1477	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1480	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1485	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1488	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1496	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1502	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1510	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1513	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1516	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1533	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1550	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1553	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1556	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1565	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1568	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1571	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1574	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1577	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1587	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1595	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1598	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1600	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1609	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1623	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1626	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1629	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1632	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1638	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1641	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1644	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1649	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1655	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1658	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1661	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1672	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1677	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1687	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1694	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1705	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1708	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1725	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1733	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1742	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1745	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1749	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1757	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1769	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1772	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1775	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1784	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1808	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1814	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1818	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1822	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
/* force for args */	WITHOUT_CLASSIFICATION	0.9998060379190695	WITHOUT_CLASSIFICATION	1.9396208093037587E-4	IMPLEMENTATION
/*XXX 0;*/	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
/*                      $$ = $3;*/	WITHOUT_CLASSIFICATION	0.9999518345677313	WITHOUT_CLASSIFICATION	4.8165432268720016E-5	IMPLEMENTATION
/*                  }*/	WITHOUT_CLASSIFICATION	0.9999500697018444	WITHOUT_CLASSIFICATION	4.993029815551553E-5	IMPLEMENTATION
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9998283151711349	WITHOUT_CLASSIFICATION	1.7168482886516147E-4	IMPLEMENTATION
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9999158386568994	WITHOUT_CLASSIFICATION	8.416134310057456E-5	IMPLEMENTATION
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9998638866931575	WITHOUT_CLASSIFICATION	1.3611330684254238E-4	IMPLEMENTATION
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9998638866931575	WITHOUT_CLASSIFICATION	1.3611330684254238E-4	IMPLEMENTATION
/* NOEX_PRIVATE for toplevel */	WITHOUT_CLASSIFICATION	0.999852495499863	WITHOUT_CLASSIFICATION	1.4750450013706692E-4	IMPLEMENTATION
/*mirko: check*/	WITHOUT_CLASSIFICATION	0.9997870623737396	WITHOUT_CLASSIFICATION	2.1293762626042385E-4	IMPLEMENTATION
/* Include pipes on multiple arg type*/	WITHOUT_CLASSIFICATION	0.9997575071323292	WITHOUT_CLASSIFICATION	2.4249286767083215E-4	IMPLEMENTATION
// line 529	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9998299064445069	WITHOUT_CLASSIFICATION	1.7009355549315125E-4	IMPLEMENTATION
/* XXX*/	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
/* zero length array */	WITHOUT_CLASSIFICATION	0.999867030829186	WITHOUT_CLASSIFICATION	1.329691708139766E-4	IMPLEMENTATION
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.999838472116639	WITHOUT_CLASSIFICATION	1.6152788336096E-4	IMPLEMENTATION
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9998215494420815	WITHOUT_CLASSIFICATION	1.78450557918573E-4	IMPLEMENTATION
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9998344438517015	WITHOUT_CLASSIFICATION	1.655561482985612E-4	IMPLEMENTATION
// line 1827 "DefaultRubyParser.y"	WITHOUT_CLASSIFICATION	0.9998876608638014	WITHOUT_CLASSIFICATION	1.1233913619859028E-4	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999779059545986	WITHOUT_CLASSIFICATION	2.209404540143046E-5	IMPLEMENTATION
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9998404809041396	WITHOUT_CLASSIFICATION	1.595190958605562E-4	IMPLEMENTATION
// line 7713 "-"	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// local scopes are argument scopes by default	WITHOUT_CLASSIFICATION	0.9999559983312547	WITHOUT_CLASSIFICATION	4.40016687453634E-5	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999347682066302	WITHOUT_CLASSIFICATION	6.523179336988E-5	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999347682066302	WITHOUT_CLASSIFICATION	6.523179336988E-5	IMPLEMENTATION
// We know this is a block scope because a local scope cannot be within a local scope // If topScope was itself it would have created a LocalAsgnNode above.	WITHOUT_CLASSIFICATION	0.9999765172744816	WITHOUT_CLASSIFICATION	2.348272551846836E-5	IMPLEMENTATION
// ENEBO: 1.9 has CURR nodes for local/block variables.  We don't.  I believe we follow proper logic	WITHOUT_CLASSIFICATION	0.9998786944142929	WITHOUT_CLASSIFICATION	1.2130558570710649E-4	IMPLEMENTATION
// odd...but it is odd in ruby too.	WITHOUT_CLASSIFICATION	0.9998540169531249	WITHOUT_CLASSIFICATION	1.4598304687509381E-4	IMPLEMENTATION
// What linenumber will the source think it starts from?	WITHOUT_CLASSIFICATION	0.9999189855430779	WITHOUT_CLASSIFICATION	8.101445692213109E-5	IMPLEMENTATION
// Is this inline source (aka -e "...source...")	WITHOUT_CLASSIFICATION	0.9998037829754579	WITHOUT_CLASSIFICATION	1.9621702454203203E-4	IMPLEMENTATION
// We parse evals more often in source so assume an eval parse.	WITHOUT_CLASSIFICATION	0.9998810893065466	WITHOUT_CLASSIFICATION	1.1891069345330777E-4	IMPLEMENTATION
// Should positions added extra IDE-friendly information and leave in all newline nodes	WITHOUT_CLASSIFICATION	0.9999666972273024	WITHOUT_CLASSIFICATION	3.330277269771719E-5	IMPLEMENTATION
// Will parser parse Duby grammar Extensions	WITHOUT_CLASSIFICATION	0.999860997898685	WITHOUT_CLASSIFICATION	1.390021013149364E-4	IMPLEMENTATION
// Should we display extra debug information while parsing?	WITHOUT_CLASSIFICATION	0.9998898370549719	WITHOUT_CLASSIFICATION	1.1016294502806412E-4	IMPLEMENTATION
// __END__ marker offset (-1 means none present)	WITHOUT_CLASSIFICATION	0.9997889905586916	WITHOUT_CLASSIFICATION	2.110094413083991E-4	IMPLEMENTATION
// Parser states:	WITHOUT_CLASSIFICATION	0.9998141869334799	WITHOUT_CLASSIFICATION	1.8581306651997928E-4	IMPLEMENTATION
// Is the parser current within a singleton (value is number of nested singletons)	WITHOUT_CLASSIFICATION	0.99997083879208	WITHOUT_CLASSIFICATION	2.9161207919944053E-5	IMPLEMENTATION
// Is the parser currently within a method definition	WITHOUT_CLASSIFICATION	0.9999371617788042	WITHOUT_CLASSIFICATION	6.283822119583458E-5	IMPLEMENTATION
// LOCALVAR	WITHOUT_CLASSIFICATION	0.999780298419641	WITHOUT_CLASSIFICATION	2.1970158035897544E-4	IMPLEMENTATION
// CONSTANT	WITHOUT_CLASSIFICATION	0.9997821538218029	WITHOUT_CLASSIFICATION	2.1784617819701373E-4	IMPLEMENTATION
// INSTANCE VARIABLE	WITHOUT_CLASSIFICATION	0.9997806456707579	WITHOUT_CLASSIFICATION	2.1935432924215277E-4	IMPLEMENTATION
// Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])	WITHOUT_CLASSIFICATION	0.9999356288846215	WITHOUT_CLASSIFICATION	6.437111537855397E-5	IMPLEMENTATION
/* MRI: block_append */	WITHOUT_CLASSIFICATION	0.9998293637640338	WITHOUT_CLASSIFICATION	1.7063623596619228E-4	IMPLEMENTATION
// Reduces overhead in interp by not set position every single line we encounter. 	WITHOUT_CLASSIFICATION	0.999921427691468	WITHOUT_CLASSIFICATION	7.857230853200935E-5	IMPLEMENTATION
// Assumption: tail is never a list node	WITHOUT_CLASSIFICATION	0.999738043827498	WITHOUT_CLASSIFICATION	2.619561725019905E-4	IMPLEMENTATION
//        return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));	WITHOUT_CLASSIFICATION	0.999968410322308	WITHOUT_CLASSIFICATION	3.15896776920344E-5	IMPLEMENTATION
// Node	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9998320997429405	WITHOUT_CLASSIFICATION	1.6790025705955958E-4	IMPLEMENTATION
/*case CONSTNODE:                handleUselessWarn(node, "a constant"); return;*/	WITHOUT_CLASSIFICATION	0.9999208521848181	WITHOUT_CLASSIFICATION	7.914781518200288E-5	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9998320997429405	WITHOUT_CLASSIFICATION	1.6790025705955958E-4	IMPLEMENTATION
/*case CLASSNODE: case COLON2NODE:                handleUselessWarn(node, "::"); return;*/	WITHOUT_CLASSIFICATION	0.9999224680877876	WITHOUT_CLASSIFICATION	7.753191221242056E-5	IMPLEMENTATION
/*case SELFNODE:                handleUselessWarn(node, "self"); return;*/	WITHOUT_CLASSIFICATION	0.9999099745587667	WITHOUT_CLASSIFICATION	9.002544123324712E-5	IMPLEMENTATION
// FIXME: DSTR,EVSTR,STR: warning "string literal in condition"	WITHOUT_CLASSIFICATION	0.999865819844229	WITHOUT_CLASSIFICATION	1.3418015577105832E-4	IMPLEMENTATION
/* MRI: range_op */	WITHOUT_CLASSIFICATION	0.9997773837224119	WITHOUT_CLASSIFICATION	2.2261627758820608E-4	IMPLEMENTATION
// Block and block pass passed in at same time....uh oh	WITHOUT_CLASSIFICATION	0.9998950970962551	WITHOUT_CLASSIFICATION	1.049029037448947E-4	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.9954061764367989	WITHOUT_CLASSIFICATION	0.004593823563201137	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.9954061764367989	WITHOUT_CLASSIFICATION	0.004593823563201137	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.9954061764367989	WITHOUT_CLASSIFICATION	0.004593823563201137	IMPLEMENTATION
// tail must be EvStrNode at this point 	WITHOUT_CLASSIFICATION	0.9998740917268666	WITHOUT_CLASSIFICATION	1.259082731333953E-4	IMPLEMENTATION
//Do not add an empty string node	WITHOUT_CLASSIFICATION	0.9999615414992604	WITHOUT_CLASSIFICATION	3.845850073970058E-5	IMPLEMENTATION
// Zero-Argument declaration	WITHOUT_CLASSIFICATION	0.9998753812682151	WITHOUT_CLASSIFICATION	1.2461873178493132E-4	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.999779971725086	WITHOUT_CLASSIFICATION	2.2002827491392825E-4	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.999779971725086	WITHOUT_CLASSIFICATION	2.2002827491392825E-4	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.999779971725086	WITHOUT_CLASSIFICATION	2.2002827491392825E-4	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.999779971725086	WITHOUT_CLASSIFICATION	2.2002827491392825E-4	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.999779971725086	WITHOUT_CLASSIFICATION	2.2002827491392825E-4	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.999779971725086	WITHOUT_CLASSIFICATION	2.2002827491392825E-4	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.999779971725086	WITHOUT_CLASSIFICATION	2.2002827491392825E-4	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.999779971725086	WITHOUT_CLASSIFICATION	2.2002827491392825E-4	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.999779971725086	WITHOUT_CLASSIFICATION	2.2002827491392825E-4	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.999779971725086	WITHOUT_CLASSIFICATION	2.2002827491392825E-4	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.999779971725086	WITHOUT_CLASSIFICATION	2.2002827491392825E-4	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.999779971725086	WITHOUT_CLASSIFICATION	2.2002827491392825E-4	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.999779971725086	WITHOUT_CLASSIFICATION	2.2002827491392825E-4	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.999779971725086	WITHOUT_CLASSIFICATION	2.2002827491392825E-4	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.999779971725086	WITHOUT_CLASSIFICATION	2.2002827491392825E-4	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.999779971725086	WITHOUT_CLASSIFICATION	2.2002827491392825E-4	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.999779971725086	WITHOUT_CLASSIFICATION	2.2002827491392825E-4	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.999779971725086	WITHOUT_CLASSIFICATION	2.2002827491392825E-4	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.999779971725086	WITHOUT_CLASSIFICATION	2.2002827491392825E-4	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.999779971725086	WITHOUT_CLASSIFICATION	2.2002827491392825E-4	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.999779971725086	WITHOUT_CLASSIFICATION	2.2002827491392825E-4	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.999779971725086	WITHOUT_CLASSIFICATION	2.2002827491392825E-4	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9997768482110331	WITHOUT_CLASSIFICATION	2.231517889668881E-4	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9997768482110331	WITHOUT_CLASSIFICATION	2.231517889668881E-4	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9997768482110331	WITHOUT_CLASSIFICATION	2.231517889668881E-4	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9997768482110331	WITHOUT_CLASSIFICATION	2.231517889668881E-4	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9997768482110331	WITHOUT_CLASSIFICATION	2.231517889668881E-4	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9997768482110331	WITHOUT_CLASSIFICATION	2.231517889668881E-4	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9997768482110331	WITHOUT_CLASSIFICATION	2.231517889668881E-4	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9997768482110331	WITHOUT_CLASSIFICATION	2.231517889668881E-4	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9997768482110331	WITHOUT_CLASSIFICATION	2.231517889668881E-4	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9997768482110331	WITHOUT_CLASSIFICATION	2.231517889668881E-4	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9997768482110331	WITHOUT_CLASSIFICATION	2.231517889668881E-4	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9997768482110331	WITHOUT_CLASSIFICATION	2.231517889668881E-4	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9997768482110331	WITHOUT_CLASSIFICATION	2.231517889668881E-4	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9997768482110331	WITHOUT_CLASSIFICATION	2.231517889668881E-4	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9997768482110331	WITHOUT_CLASSIFICATION	2.231517889668881E-4	IMPLEMENTATION
// dynamically increase	WITHOUT_CLASSIFICATION	0.9998703516536803	WITHOUT_CLASSIFICATION	1.2964834631961147E-4	IMPLEMENTATION
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9998898065462557	WITHOUT_CLASSIFICATION	1.1019345374434041E-4	IMPLEMENTATION
// shift to yyN	WITHOUT_CLASSIFICATION	0.9997853332905834	WITHOUT_CLASSIFICATION	2.1466670941647188E-4	IMPLEMENTATION
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.999782740873812	WITHOUT_CLASSIFICATION	2.1725912618792567E-4	IMPLEMENTATION
// leave stack alone	WITHOUT_CLASSIFICATION	0.9998114080999618	WITHOUT_CLASSIFICATION	1.8859190003824513E-4	IMPLEMENTATION
// line 321	WITHOUT_CLASSIFICATION	0.9997922677728625	WITHOUT_CLASSIFICATION	2.077322271375337E-4	IMPLEMENTATION
// line 351	WITHOUT_CLASSIFICATION	0.9997922677728625	WITHOUT_CLASSIFICATION	2.077322271375337E-4	IMPLEMENTATION
// line 382	WITHOUT_CLASSIFICATION	0.9997922677728625	WITHOUT_CLASSIFICATION	2.077322271375337E-4	IMPLEMENTATION
// line 417	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 420	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 423	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 426	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 280	WITHOUT_CLASSIFICATION	0.9997927109472883	WITHOUT_CLASSIFICATION	2.0728905271178355E-4	IMPLEMENTATION
// line 283	WITHOUT_CLASSIFICATION	0.9997924835919404	WITHOUT_CLASSIFICATION	2.075164080596685E-4	IMPLEMENTATION
// line 296	WITHOUT_CLASSIFICATION	0.999792312911833	WITHOUT_CLASSIFICATION	2.076870881668492E-4	IMPLEMENTATION
// line 324	WITHOUT_CLASSIFICATION	0.9997922677728625	WITHOUT_CLASSIFICATION	2.077322271375337E-4	IMPLEMENTATION
// line 327	WITHOUT_CLASSIFICATION	0.9997922677728625	WITHOUT_CLASSIFICATION	2.077322271375337E-4	IMPLEMENTATION
// line 331	WITHOUT_CLASSIFICATION	0.9997922677728625	WITHOUT_CLASSIFICATION	2.077322271375337E-4	IMPLEMENTATION
// line 333	WITHOUT_CLASSIFICATION	0.9997922677728625	WITHOUT_CLASSIFICATION	2.077322271375337E-4	IMPLEMENTATION
// line 336	WITHOUT_CLASSIFICATION	0.9997922677728625	WITHOUT_CLASSIFICATION	2.077322271375337E-4	IMPLEMENTATION
// line 342	WITHOUT_CLASSIFICATION	0.9997922677728625	WITHOUT_CLASSIFICATION	2.077322271375337E-4	IMPLEMENTATION
// line 345	WITHOUT_CLASSIFICATION	0.9997922677728625	WITHOUT_CLASSIFICATION	2.077322271375337E-4	IMPLEMENTATION
// line 348	WITHOUT_CLASSIFICATION	0.9997922677728625	WITHOUT_CLASSIFICATION	2.077322271375337E-4	IMPLEMENTATION
// line 354	WITHOUT_CLASSIFICATION	0.9997922677728625	WITHOUT_CLASSIFICATION	2.077322271375337E-4	IMPLEMENTATION
// line 368	WITHOUT_CLASSIFICATION	0.9997922677728625	WITHOUT_CLASSIFICATION	2.077322271375337E-4	IMPLEMENTATION
// line 377	WITHOUT_CLASSIFICATION	0.9997922677728625	WITHOUT_CLASSIFICATION	2.077322271375337E-4	IMPLEMENTATION
// line 388	WITHOUT_CLASSIFICATION	0.9997922677728625	WITHOUT_CLASSIFICATION	2.077322271375337E-4	IMPLEMENTATION
// line 392	WITHOUT_CLASSIFICATION	0.9997922677728625	WITHOUT_CLASSIFICATION	2.077322271375337E-4	IMPLEMENTATION
// line 397	WITHOUT_CLASSIFICATION	0.9997922677728625	WITHOUT_CLASSIFICATION	2.077322271375337E-4	IMPLEMENTATION
// line 429	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 432	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 436	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 445	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 448	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 454	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 459	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 466	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 469	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 478	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 481	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 488	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 494	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 497	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 503	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 506	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 509	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 512	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 521	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 526	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 540	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 543	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 546	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 566	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 610	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 672	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 691	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 696	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 772	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 782	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 785	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 788	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 791	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 534	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 549	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 552	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 558	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 561	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 571	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 574	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 579	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 586	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 589	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 592	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 595	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 598	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 623	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 627	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 630	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 633	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 639	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 648	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 657	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 661	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 666	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 678	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 682	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 688	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 699	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 706	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 708	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 727	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 737	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 753	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 779	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 801	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 808	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 811	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 817	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 842	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 845	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 848	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 893	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 899	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 932	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 944	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 960	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 980	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 1004	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1038	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 820	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 826	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 829	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 832	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 851	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 857	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 860	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 863	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 866	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 869	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 875	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 884	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 887	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 890	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 902	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 909	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 912	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 916	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 922	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 928	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 941	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 947	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 951	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 955	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 965	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 969	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 977	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 983	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 1013	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1023	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1035	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1041	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1043	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1054	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1057	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1060	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1069	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1075	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1105	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1111	WITHOUT_CLASSIFICATION	0.9997923990527314	WITHOUT_CLASSIFICATION	2.0760094726861476E-4	IMPLEMENTATION
// line 1122	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1130	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1140	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1158	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1204	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1207	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1247	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1251	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1261	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1078	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1084	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1087	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1090	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1093	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1114	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1116	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1118	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1124	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1126	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1138	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1144	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1149	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1155	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1162	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1173	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1179	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1182	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1190	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1196	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1213	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1217	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1231	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1236	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1244	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1254	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1258	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1264	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1270	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1273	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1276	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1279	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1282	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1289	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1292	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1295	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1298	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1305	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1348	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1387	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1392	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1448	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1462	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1470	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1496	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1502	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1595	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1598	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1308	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1311	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1317	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1323	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1326	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1329	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1337	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1342	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1345	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1354	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1359	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1366	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1369	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1373	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1377	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1383	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1399	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1401	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1406	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1417	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1424	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1427	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1430	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1433	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1436	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1442	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1445	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1458	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1464	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1489	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1493	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1507	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1519	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1532	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1538	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1542	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1557	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1573	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1591	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1615	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1629	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1632	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1705	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1716	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1725	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1742	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1749	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1818	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1822	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1607	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1610	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1622	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1625	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1636	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1639	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1647	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1651	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1657	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1660	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1663	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1678	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1702	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1711	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1719	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1722	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1731	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1734	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1738	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1746	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1756	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1758	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1761	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1767	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1776	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1782	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1785	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1788	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1791	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1797	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1800	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1803	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1806	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1809	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1815	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1825	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1828	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1831	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1847	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9998638866931575	WITHOUT_CLASSIFICATION	1.3611330684254238E-4	IMPLEMENTATION
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9998638866931575	WITHOUT_CLASSIFICATION	1.3611330684254238E-4	IMPLEMENTATION
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9998299064445069	WITHOUT_CLASSIFICATION	1.7009355549315125E-4	IMPLEMENTATION
/* zero length array */	WITHOUT_CLASSIFICATION	0.999867030829186	WITHOUT_CLASSIFICATION	1.329691708139766E-4	IMPLEMENTATION
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.999838472116639	WITHOUT_CLASSIFICATION	1.6152788336096E-4	IMPLEMENTATION
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9998215494420815	WITHOUT_CLASSIFICATION	1.78450557918573E-4	IMPLEMENTATION
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9998344438517015	WITHOUT_CLASSIFICATION	1.655561482985612E-4	IMPLEMENTATION
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.999853671703225	WITHOUT_CLASSIFICATION	1.4632829677489954E-4	IMPLEMENTATION
// line 1854	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1869	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1872	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1877	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1886	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1898	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1902	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1905	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1911	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1918	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1935	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1938	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1942	WITHOUT_CLASSIFICATION	0.9997908113401816	WITHOUT_CLASSIFICATION	2.0918865981839438E-4	IMPLEMENTATION
// line 1948	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1960	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1963	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1968	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1972	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1982	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1995	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 2000	WITHOUT_CLASSIFICATION	0.9997923479887728	WITHOUT_CLASSIFICATION	2.076520112272361E-4	IMPLEMENTATION
// line 2006	WITHOUT_CLASSIFICATION	0.9997923445581428	WITHOUT_CLASSIFICATION	2.0765544185707448E-4	IMPLEMENTATION
// line 2010	WITHOUT_CLASSIFICATION	0.999792312911833	WITHOUT_CLASSIFICATION	2.076870881668492E-4	IMPLEMENTATION
/* We may need to subtract addition offset off of first */	WITHOUT_CLASSIFICATION	0.9998306841167912	WITHOUT_CLASSIFICATION	1.6931588320869622E-4	IMPLEMENTATION
/* string fragment (we optimistically take one off in*/	WITHOUT_CLASSIFICATION	0.9998899480434743	WITHOUT_CLASSIFICATION	1.1005195652570346E-4	IMPLEMENTATION
/* ParserSupport.literal_concat).  Check token length*/	WITHOUT_CLASSIFICATION	0.9998685628737981	WITHOUT_CLASSIFICATION	1.3143712620199477E-4	IMPLEMENTATION
/* and subtract as neeeded.*/	WITHOUT_CLASSIFICATION	0.9998291835976035	WITHOUT_CLASSIFICATION	1.708164023965131E-4	IMPLEMENTATION
/*                    $$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);  */	WITHOUT_CLASSIFICATION	0.9999707568060081	WITHOUT_CLASSIFICATION	2.9243193991920768E-5	IMPLEMENTATION
/* ENEBO: arg surrounded by in_defined set/unset*/	WITHOUT_CLASSIFICATION	0.9998730305375293	WITHOUT_CLASSIFICATION	1.2696946247066392E-4	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999779059545986	WITHOUT_CLASSIFICATION	2.209404540143046E-5	IMPLEMENTATION
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9998404809041396	WITHOUT_CLASSIFICATION	1.595190958605562E-4	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999347682066302	WITHOUT_CLASSIFICATION	6.523179336988E-5	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999347682066302	WITHOUT_CLASSIFICATION	6.523179336988E-5	IMPLEMENTATION
/* ENEBO: Removed !compile_for_eval which probably is to reduce warnings*/	WITHOUT_CLASSIFICATION	0.9998193309894613	WITHOUT_CLASSIFICATION	1.8066901053865515E-4	IMPLEMENTATION
/* was $$ = null;*/	WITHOUT_CLASSIFICATION	0.9997957497827225	WITHOUT_CLASSIFICATION	2.0425021727756078E-4	IMPLEMENTATION
// line 2019 "Ruby19Parser.y"	WITHOUT_CLASSIFICATION	0.9998387607192529	WITHOUT_CLASSIFICATION	1.612392807471409E-4	IMPLEMENTATION
// line 8143 "-"	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// we know variables cannot be null since localstaticscope will create a 0 length one.	WITHOUT_CLASSIFICATION	0.9999777583607565	WITHOUT_CLASSIFICATION	2.224163924342209E-5	IMPLEMENTATION
// No bit math to store level since we know level is zero for this case	WITHOUT_CLASSIFICATION	0.9999415787618128	WITHOUT_CLASSIFICATION	5.842123818728001E-5	IMPLEMENTATION
// Next immediate scope.  Variable and constant scoping rules make use of this variable // in different ways.	WITHOUT_CLASSIFICATION	0.9999635690440524	WITHOUT_CLASSIFICATION	3.643095594755845E-5	IMPLEMENTATION
// Live reference to module	WITHOUT_CLASSIFICATION	0.9999310011228395	WITHOUT_CLASSIFICATION	6.899887716057843E-5	IMPLEMENTATION
// Next CRef down the lexical structure	WITHOUT_CLASSIFICATION	0.9999021413570013	WITHOUT_CLASSIFICATION	9.785864299869911E-5	IMPLEMENTATION
// Our name holder (offsets are assigned as variables are added	WITHOUT_CLASSIFICATION	0.9999031631536116	WITHOUT_CLASSIFICATION	9.6836846388497E-5	IMPLEMENTATION
// number of variables in this scope representing required arguments	WITHOUT_CLASSIFICATION	0.9999557903309206	WITHOUT_CLASSIFICATION	4.4209669079358564E-5	IMPLEMENTATION
// number of variables in this scope representing optional arguments	WITHOUT_CLASSIFICATION	0.999964512721443	WITHOUT_CLASSIFICATION	3.5487278556978706E-5	IMPLEMENTATION
// index of variable that represents a "rest" arg	WITHOUT_CLASSIFICATION	0.9998663054835942	WITHOUT_CLASSIFICATION	1.3369451640574633E-4	IMPLEMENTATION
// Note that this object equality check is intentional, to ensure // the string and its interned version are the same object.	WITHOUT_CLASSIFICATION	0.9999912252424601	WITHOUT_CLASSIFICATION	8.774757539955247E-6	IMPLEMENTATION
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.999845769095502	WITHOUT_CLASSIFICATION	1.5423090449788584E-4	IMPLEMENTATION
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.999845769095502	WITHOUT_CLASSIFICATION	1.5423090449788584E-4	IMPLEMENTATION
/* Note: Only used by compiler until it can use getConstant again or use some other refactoring */	WITHOUT_CLASSIFICATION	0.999893096288424	WITHOUT_CLASSIFICATION	1.0690371157587756E-4	IMPLEMENTATION
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.999969779131386	WITHOUT_CLASSIFICATION	3.022086861404293E-5	IMPLEMENTATION
/* Try and unload the autoload specified from internedName */	WITHOUT_CLASSIFICATION	0.9999359587266249	WITHOUT_CLASSIFICATION	6.404127337510657E-5	IMPLEMENTATION
// We override that the logic which uses this	WITHOUT_CLASSIFICATION	0.9999345928926813	WITHOUT_CLASSIFICATION	6.540710731872127E-5	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999528487555693	WITHOUT_CLASSIFICATION	4.715124443078597E-5	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999725431585159	WITHOUT_CLASSIFICATION	2.7456841484187987E-5	IMPLEMENTATION
// source extensions	WITHOUT_CLASSIFICATION	0.9998611554890786	WITHOUT_CLASSIFICATION	1.3884451092136888E-4	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999725431585159	WITHOUT_CLASSIFICATION	2.7456841484187987E-5	IMPLEMENTATION
// . Array given to rest should pass itself // . Array with rest + other args should extract array // . Array with multiple values and NO rest should extract args if there are more than one argument	WITHOUT_CLASSIFICATION	0.9998380418052563	WITHOUT_CLASSIFICATION	1.6195819474379257E-4	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999495076235488	WITHOUT_CLASSIFICATION	5.049237645104033E-5	IMPLEMENTATION
// Is this thread currently with in a function trace?	WITHOUT_CLASSIFICATION	0.9998715355548577	WITHOUT_CLASSIFICATION	1.2846444514221815E-4	IMPLEMENTATION
// Is this thread currently doing an defined? defined should set things like $!	WITHOUT_CLASSIFICATION	0.9998206053249212	WITHOUT_CLASSIFICATION	1.7939467507875446E-4	IMPLEMENTATION
//private UnsynchronizedStack parentStack;	WITHOUT_CLASSIFICATION	0.9999457107213187	WITHOUT_CLASSIFICATION	5.428927868125517E-5	IMPLEMENTATION
//private UnsynchronizedStack frameStack;	WITHOUT_CLASSIFICATION	0.9999400456849881	WITHOUT_CLASSIFICATION	5.995431501194807E-5	IMPLEMENTATION
// List of active dynamic scopes.  Each of these may have captured other dynamic scopes // to implement closures.	WITHOUT_CLASSIFICATION	0.9874629953687387	WITHOUT_CLASSIFICATION	0.012537004631261225	IMPLEMENTATION
// File where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999269576536787	WITHOUT_CLASSIFICATION	7.30423463212874E-5	IMPLEMENTATION
// Line where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999330095080283	WITHOUT_CLASSIFICATION	6.69904919717329E-5	IMPLEMENTATION
// In certain places, like grep, we don't use real frames for the // call blocks. This has the effect of not setting the backref in // the correct frame - this delta is activated to the place where // the grep is running in so that the backref will be set in an // appropriate place.	WITHOUT_CLASSIFICATION	0.9999983194265167	WITHOUT_CLASSIFICATION	1.6805734832335186E-6	IMPLEMENTATION
// TOPLEVEL self and a few others want a top-level scope.  We create this one right // away and then pass it into top-level parse so it ends up being the top level.	WITHOUT_CLASSIFICATION	0.9998748580913934	WITHOUT_CLASSIFICATION	1.2514190860649522E-4	IMPLEMENTATION
//////////////////// CATCH MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9999824038747778	WITHOUT_CLASSIFICATION	1.7596125222219142E-5	IMPLEMENTATION
//////////////////// FRAME MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9999824038747778	WITHOUT_CLASSIFICATION	1.7596125222219142E-5	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9998889202408322	WITHOUT_CLASSIFICATION	1.1107975916782996E-4	IMPLEMENTATION
// assert level == 0;	WITHOUT_CLASSIFICATION	0.999841428106494	WITHOUT_CLASSIFICATION	1.5857189350598508E-4	IMPLEMENTATION
// assert level == 0;	WITHOUT_CLASSIFICATION	0.999841428106494	WITHOUT_CLASSIFICATION	1.5857189350598508E-4	IMPLEMENTATION
// look for mangling markers for compiled Ruby in method name	WITHOUT_CLASSIFICATION	0.9997639947497016	WITHOUT_CLASSIFICATION	2.3600525029841618E-4	IMPLEMENTATION
// if it's not a rescue or ensure, there's a frame associated, so decrement	WITHOUT_CLASSIFICATION	0.9999569008812585	WITHOUT_CLASSIFICATION	4.309911874147754E-5	IMPLEMENTATION
// look for __file__ method name for compiled roots	WITHOUT_CLASSIFICATION	0.9998608114326584	WITHOUT_CLASSIFICATION	1.391885673415408E-4	IMPLEMENTATION
// All entries following removed node can stay // in list, but all preceding ones need to be // cloned.	WITHOUT_CLASSIFICATION	0.9998186011189608	WITHOUT_CLASSIFICATION	1.8139888103918945E-4	IMPLEMENTATION
// required and optional only	WITHOUT_CLASSIFICATION	0.9998736421690233	WITHOUT_CLASSIFICATION	1.2635783097661045E-4	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999725431585159	WITHOUT_CLASSIFICATION	2.7456841484187987E-5	IMPLEMENTATION
// look for mangling markers for bound, unframed methods in class name	WITHOUT_CLASSIFICATION	0.9999341151495199	WITHOUT_CLASSIFICATION	6.588485048010311E-5	IMPLEMENTATION
// set the binding's frame's "previous" file and line to current, so // trace will show who called the block	WITHOUT_CLASSIFICATION	0.9999747099043426	WITHOUT_CLASSIFICATION	2.5290095657380424E-5	IMPLEMENTATION
// framed invokers will have Ruby frames associated with them	WITHOUT_CLASSIFICATION	0.9999265295417576	WITHOUT_CLASSIFICATION	7.34704582423863E-5	IMPLEMENTATION
// look for mangling markers for bound, framed methods in class name	WITHOUT_CLASSIFICATION	0.9999361223603807	WITHOUT_CLASSIFICATION	6.38776396194012E-5	IMPLEMENTATION
// unframed invokers have no Ruby frames, so pull from class name // but use current frame as file and line	WITHOUT_CLASSIFICATION	0.9999724658563123	WITHOUT_CLASSIFICATION	2.7534143687679933E-5	IMPLEMENTATION
// try to mine out a Ruby frame using our list of interpreter entry-point markers	WITHOUT_CLASSIFICATION	0.9999530185115448	WITHOUT_CLASSIFICATION	4.698148845526201E-5	IMPLEMENTATION
// Frame matches one of our markers for "interpreted" calls	WITHOUT_CLASSIFICATION	0.9998767125176394	WITHOUT_CLASSIFICATION	1.232874823605461E-4	IMPLEMENTATION
// Frame is extraneous runtime information, skip it unless debug	WITHOUT_CLASSIFICATION	0.9999138374848081	WITHOUT_CLASSIFICATION	8.616251519186563E-5	IMPLEMENTATION
/*     * Determine what sort of assigner should be used for the provided 'iter' (e.g. block).     * Assigner provides just the right logic for assigning values to local parameters of the     * block.     *     * This method also has a second optimization which is to set 'noargblock' in the case that     * the block is a block which accepts no arguments.  The primary reason for this second     * optimization is that in the case of a yield with a RubyArray we will bypass some logic     * processing the RubyArray into a proper form (only to then not do anythign with it).  A     * secondary benefit is that a simple boolean seems to optimize by hotspot much faster     * than the zero arg assigner.     */	WITHOUT_CLASSIFICATION	0.9999996306685054	WITHOUT_CLASSIFICATION	3.6933149466900854E-7	IMPLEMENTATION
// new scope for this invocation of the block, based on parent scope	WITHOUT_CLASSIFICATION	0.9999847467893331	WITHOUT_CLASSIFICATION	1.525321066683407E-5	IMPLEMENTATION
// No argument blocks	WITHOUT_CLASSIFICATION	0.9998445307202162	WITHOUT_CLASSIFICATION	1.5546927978386902E-4	IMPLEMENTATION
// just push the same empty scope, since we won't use one	WITHOUT_CLASSIFICATION	0.9999421113463158	WITHOUT_CLASSIFICATION	5.7888653684222E-5	IMPLEMENTATION
// Not sure if this is actually possible, but better safe than sorry	WITHOUT_CLASSIFICATION	0.9999330407203275	WITHOUT_CLASSIFICATION	6.695927967244896E-5	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9998743042517446	WITHOUT_CLASSIFICATION	1.2569574825536427E-4	IMPLEMENTATION
// This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).	WITHOUT_CLASSIFICATION	0.9999139373539191	WITHOUT_CLASSIFICATION	8.606264608085816E-5	IMPLEMENTATION
// Highest reserved id	WITHOUT_CLASSIFICATION	0.9998231233697864	WITHOUT_CLASSIFICATION	1.7687663021361243E-4	IMPLEMENTATION
// binary typed calls	WITHOUT_CLASSIFICATION	0.9998593709507209	WITHOUT_CLASSIFICATION	1.406290492791011E-4	IMPLEMENTATION
// id must always be even	WITHOUT_CLASSIFICATION	0.9998719641805195	WITHOUT_CLASSIFICATION	1.280358194804752E-4	IMPLEMENTATION
// with block pass	WITHOUT_CLASSIFICATION	0.9997994351502676	WITHOUT_CLASSIFICATION	2.005648497322893E-4	IMPLEMENTATION
// no block	WITHOUT_CLASSIFICATION	0.9998231035535251	WITHOUT_CLASSIFICATION	1.7689644647496332E-4	IMPLEMENTATION
// with block literal (iter)	WITHOUT_CLASSIFICATION	0.9998399269283862	WITHOUT_CLASSIFICATION	1.6007307161377198E-4	IMPLEMENTATION
//            assert false : "can this happen?";	WITHOUT_CLASSIFICATION	0.9999600482640515	WITHOUT_CLASSIFICATION	3.995173594843736E-5	IMPLEMENTATION
// if we have multiple asgn with just *args, need a special type for that	WITHOUT_CLASSIFICATION	0.9999379044176342	WITHOUT_CLASSIFICATION	6.209558236584849E-5	IMPLEMENTATION
// && args.getMaxArgumentsCount() != 1) {	WITHOUT_CLASSIFICATION	0.9998472267347884	WITHOUT_CLASSIFICATION	1.5277326521151197E-4	IMPLEMENTATION
//            return warnMultiReturnNil(ruby);	WITHOUT_CLASSIFICATION	0.9999832017528922	WITHOUT_CLASSIFICATION	1.6798247107752088E-5	IMPLEMENTATION
// ensure zero is devoted to no method name	WITHOUT_CLASSIFICATION	0.999860719846346	WITHOUT_CLASSIFICATION	1.3928015365402622E-4	IMPLEMENTATION
// predefine a few other methods we invoke directly elsewhere	WITHOUT_CLASSIFICATION	0.9999118532258443	WITHOUT_CLASSIFICATION	8.814677415575524E-5	IMPLEMENTATION
// fast and safe respond_to? call site logic	WITHOUT_CLASSIFICATION	0.9998483727838896	WITHOUT_CLASSIFICATION	1.5162721611046054E-4	IMPLEMENTATION
// Static scoping information for this scope	WITHOUT_CLASSIFICATION	0.9999715229914267	WITHOUT_CLASSIFICATION	2.847700857332913E-5	IMPLEMENTATION
// Captured dynamic scopes	WITHOUT_CLASSIFICATION	0.999857241232159	WITHOUT_CLASSIFICATION	1.4275876784102442E-4	IMPLEMENTATION
// Backref for $~, $1, etc	WITHOUT_CLASSIFICATION	0.9998318392711713	WITHOUT_CLASSIFICATION	1.6816072882862762E-4	IMPLEMENTATION
// Lastline	WITHOUT_CLASSIFICATION	0.9997834614839302	WITHOUT_CLASSIFICATION	2.1653851606980105E-4	IMPLEMENTATION
// No binding scope so we should create one	WITHOUT_CLASSIFICATION	0.9999205509370527	WITHOUT_CLASSIFICATION	7.94490629473636E-5	IMPLEMENTATION
// bindings scopes must always be ManyVars scopes since evals can grow them	WITHOUT_CLASSIFICATION	0.9998899202596111	WITHOUT_CLASSIFICATION	1.100797403890081E-4	IMPLEMENTATION
// Helper function to give a good view of current dynamic scope with captured scopes	WITHOUT_CLASSIFICATION	0.9999772450278933	WITHOUT_CLASSIFICATION	2.2754972106709615E-5	IMPLEMENTATION
// try count specific args to determine required	WITHOUT_CLASSIFICATION	0.9999113476731469	WITHOUT_CLASSIFICATION	8.865232685312328E-5	IMPLEMENTATION
// Some helper functions:	WITHOUT_CLASSIFICATION	0.9998875836017894	WITHOUT_CLASSIFICATION	1.1241639821060234E-4	IMPLEMENTATION
// silently ignore	WITHOUT_CLASSIFICATION	0.9998982503827764	WITHOUT_CLASSIFICATION	1.017496172235872E-4	IMPLEMENTATION
// used by compiler	WITHOUT_CLASSIFICATION	0.9998377071510314	WITHOUT_CLASSIFICATION	1.6229284896866734E-4	IMPLEMENTATION
// initialize the static settings to determine which factory to use	WITHOUT_CLASSIFICATION	0.9999970759982578	WITHOUT_CLASSIFICATION	2.924001742175954E-6	IMPLEMENTATION
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.999853671703225	WITHOUT_CLASSIFICATION	1.4632829677489954E-4	IMPLEMENTATION
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9998965075867589	WITHOUT_CLASSIFICATION	1.0349241324120011E-4	IMPLEMENTATION
//  Single node on list	WITHOUT_CLASSIFICATION	0.9998378077122614	WITHOUT_CLASSIFICATION	1.621922877385806E-4	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.999889002284329	WITHOUT_CLASSIFICATION	1.109977156710576E-4	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9998718763812519	WITHOUT_CLASSIFICATION	1.2812361874817602E-4	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999495076235488	WITHOUT_CLASSIFICATION	5.049237645104033E-5	IMPLEMENTATION
// Note: In Ruby 1.9 all of this logic can go away since they will require explicit // bindings for evals.	WITHOUT_CLASSIFICATION	0.9998915055618445	WITHOUT_CLASSIFICATION	1.0849443815551654E-4	IMPLEMENTATION
// We only define one special dynamic scope per 'logical' binding.  So all bindings for // the same scope should share the same dynamic scope.  This allows multiple evals with // different different bindings in the same scope to see the same stuff.	WITHOUT_CLASSIFICATION	0.9999689043914728	WITHOUT_CLASSIFICATION	3.1095608527270016E-5	IMPLEMENTATION
// If the next scope out has the same binding scope as this scope it means // we are evaling within an eval and in that case we should be sharing the same // binding scope.	WITHOUT_CLASSIFICATION	0.9999757643972412	WITHOUT_CLASSIFICATION	2.4235602758749235E-5	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.999959750062128	WITHOUT_CLASSIFICATION	4.0249937871971566E-5	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.999959750062128	WITHOUT_CLASSIFICATION	4.0249937871971566E-5	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999016900550532	WITHOUT_CLASSIFICATION	9.83099449467398E-5	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999016900550532	WITHOUT_CLASSIFICATION	9.83099449467398E-5	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999016900550532	WITHOUT_CLASSIFICATION	9.83099449467398E-5	IMPLEMENTATION
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9998908882338259	WITHOUT_CLASSIFICATION	1.0911176617400554E-4	IMPLEMENTATION
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9998908882338259	WITHOUT_CLASSIFICATION	1.0911176617400554E-4	IMPLEMENTATION
// extra args for rest	WITHOUT_CLASSIFICATION	0.9998505258319923	WITHOUT_CLASSIFICATION	1.4947416800770722E-4	IMPLEMENTATION
// extra args for rest	WITHOUT_CLASSIFICATION	0.9998505258319923	WITHOUT_CLASSIFICATION	1.4947416800770722E-4	IMPLEMENTATION
/*     * This is the proper behavior for all non-expanded assigners which have a pre > 0.  The rest     * override this.     */	WITHOUT_CLASSIFICATION	0.9999912094111493	WITHOUT_CLASSIFICATION	8.790588850763274E-6	IMPLEMENTATION
/*     * This is the proper behavior for all non-expanded assigners.     */	WITHOUT_CLASSIFICATION	0.9999813615041271	WITHOUT_CLASSIFICATION	1.8638495872820897E-5	IMPLEMENTATION
// prefill ?	WITHOUT_CLASSIFICATION	0.9998056907840407	WITHOUT_CLASSIFICATION	1.943092159593688E-4	IMPLEMENTATION
// prefill ?	WITHOUT_CLASSIFICATION	0.9998056907840407	WITHOUT_CLASSIFICATION	1.943092159593688E-4	IMPLEMENTATION
// MUST be called from synchronized/locked block! // should only be called by variableTableStore/variableTableFastStore	WITHOUT_CLASSIFICATION	0.999928162288406	WITHOUT_CLASSIFICATION	7.18377115940259E-5	IMPLEMENTATION
// retrieve method // module // name	WITHOUT_CLASSIFICATION	0.9999400234022218	WITHOUT_CLASSIFICATION	5.997659777822567E-5	IMPLEMENTATION
// call is ok, punch it!	WITHOUT_CLASSIFICATION	0.9998186295490019	WITHOUT_CLASSIFICATION	1.8137045099809437E-4	IMPLEMENTATION
// if undefined, branch to method_missing	WITHOUT_CLASSIFICATION	0.999881102989617	WITHOUT_CLASSIFICATION	1.1889701038314562E-4	IMPLEMENTATION
// if we're not attempting to invoke method_missing and method is not visible, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999565809790322	WITHOUT_CLASSIFICATION	4.3419020967880886E-5	IMPLEMENTATION
// method object already present, push various args // tc // self // klazz // name	WITHOUT_CLASSIFICATION	0.9999360475383094	WITHOUT_CLASSIFICATION	6.395246169051915E-5	IMPLEMENTATION
// if it's method_missing, just invoke it	WITHOUT_CLASSIFICATION	0.9999022261159402	WITHOUT_CLASSIFICATION	9.777388405990636E-5	IMPLEMENTATION
// invoke callMethodMissing	WITHOUT_CLASSIFICATION	0.9998712357285974	WITHOUT_CLASSIFICATION	1.2876427140262565E-4	IMPLEMENTATION
// caller	WITHOUT_CLASSIFICATION	0.9956904872058804	WITHOUT_CLASSIFICATION	0.004309512794119652	IMPLEMENTATION
// calltype // block	WITHOUT_CLASSIFICATION	0.9997886556064769	WITHOUT_CLASSIFICATION	2.11344393523069E-4	IMPLEMENTATION
// if no exception raised, jump to end to leave result on stack for return	WITHOUT_CLASSIFICATION	0.9999749026580981	WITHOUT_CLASSIFICATION	2.509734190195868E-5	IMPLEMENTATION
// load arity for check	WITHOUT_CLASSIFICATION	0.9998974152802027	WITHOUT_CLASSIFICATION	1.0258471979735156E-4	IMPLEMENTATION
// throw	WITHOUT_CLASSIFICATION	0.9955536661117645	WITHOUT_CLASSIFICATION	0.004446333888235447	IMPLEMENTATION
// load arity for error	WITHOUT_CLASSIFICATION	0.9999027918561042	WITHOUT_CLASSIFICATION	9.720814389582666E-5	IMPLEMENTATION
// arity ok, continue	WITHOUT_CLASSIFICATION	0.9998406872134213	WITHOUT_CLASSIFICATION	1.5931278657863076E-4	IMPLEMENTATION
//InvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9998635601387921	WITHOUT_CLASSIFICATION	1.3643986120792027E-4	IMPLEMENTATION
// ENEBO: Perhaps slow but simple for now	WITHOUT_CLASSIFICATION	0.9997975767597307	WITHOUT_CLASSIFICATION	2.0242324026924075E-4	IMPLEMENTATION
// FastInvocationCallback	WITHOUT_CLASSIFICATION	0.9998580137344463	WITHOUT_CLASSIFICATION	1.4198626555375813E-4	IMPLEMENTATION
// InvocationCallback	WITHOUT_CLASSIFICATION	0.9998600254640426	WITHOUT_CLASSIFICATION	1.399745359573232E-4	IMPLEMENTATION
//DumpingInvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9998732766706764	WITHOUT_CLASSIFICATION	1.2672332932369085E-4	IMPLEMENTATION
// for fast lookup: encoding entry => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9998989818537323	WITHOUT_CLASSIFICATION	1.0101814626771223E-4	IMPLEMENTATION
// for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9998924420146998	WITHOUT_CLASSIFICATION	1.0755798530011064E-4	IMPLEMENTATION
// load the encoding	WITHOUT_CLASSIFICATION	0.9999104366754265	WITHOUT_CLASSIFICATION	8.95633245735195E-5	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999069797413379	WITHOUT_CLASSIFICATION	9.302025866216398E-5	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999030995126328	WITHOUT_CLASSIFICATION	9.690048736717676E-5	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999011407059695	WITHOUT_CLASSIFICATION	9.885929403058304E-5	IMPLEMENTATION
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9998951941215726	WITHOUT_CLASSIFICATION	1.0480587842738556E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject	WITHOUT_CLASSIFICATION	0.999895579457525	WITHOUT_CLASSIFICATION	1.0442054247487266E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999069262267338	WITHOUT_CLASSIFICATION	9.307377326609582E-5	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999030437659476	WITHOUT_CLASSIFICATION	9.69562340522765E-5	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999010838324977	WITHOUT_CLASSIFICATION	9.891616750233587E-5	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999056531294876	WITHOUT_CLASSIFICATION	9.434687051232762E-5	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999017175681971	WITHOUT_CLASSIFICATION	9.828243180288595E-5	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998997308288514	WITHOUT_CLASSIFICATION	1.0026917114848537E-4	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999017175681971	WITHOUT_CLASSIFICATION	9.828243180288595E-5	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999017175681971	WITHOUT_CLASSIFICATION	9.828243180288595E-5	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999017175681971	WITHOUT_CLASSIFICATION	9.828243180288595E-5	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999017175681971	WITHOUT_CLASSIFICATION	9.828243180288595E-5	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999017175681971	WITHOUT_CLASSIFICATION	9.828243180288595E-5	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999017175681971	WITHOUT_CLASSIFICATION	9.828243180288595E-5	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998997308288514	WITHOUT_CLASSIFICATION	1.0026917114848537E-4	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998997308288514	WITHOUT_CLASSIFICATION	1.0026917114848537E-4	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998997308288514	WITHOUT_CLASSIFICATION	1.0026917114848537E-4	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998997308288514	WITHOUT_CLASSIFICATION	1.0026917114848537E-4	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998997308288514	WITHOUT_CLASSIFICATION	1.0026917114848537E-4	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998997308288514	WITHOUT_CLASSIFICATION	1.0026917114848537E-4	IMPLEMENTATION
// If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs	WITHOUT_CLASSIFICATION	0.9999236650206962	WITHOUT_CLASSIFICATION	7.633497930384257E-5	IMPLEMENTATION
// BreakJump, ThreadContext	WITHOUT_CLASSIFICATION	0.9998360944624718	WITHOUT_CLASSIFICATION	1.639055375281543E-4	IMPLEMENTATION
// ThreadContext	WITHOUT_CLASSIFICATION	0.9998031881947369	WITHOUT_CLASSIFICATION	1.968118052631214E-4	IMPLEMENTATION
// BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9998772065889534	WITHOUT_CLASSIFICATION	1.2279341104658173E-4	IMPLEMENTATION
// Make Java class files in the jar reachable from Ruby	WITHOUT_CLASSIFICATION	0.999968463238047	WITHOUT_CLASSIFICATION	3.1536761952918706E-5	IMPLEMENTATION
// RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.999880005897623	WITHOUT_CLASSIFICATION	1.1999410237695791E-4	IMPLEMENTATION
// add all startup load paths to the list first	WITHOUT_CLASSIFICATION	0.9999639752943266	WITHOUT_CLASSIFICATION	3.602470567342038E-5	IMPLEMENTATION
// if it's a compiled JRuby script, instantiate and run it	WITHOUT_CLASSIFICATION	0.9999375133056917	WITHOUT_CLASSIFICATION	6.248669430837208E-5	IMPLEMENTATION
// wrap in try/catch for security exceptions in an applet	WITHOUT_CLASSIFICATION	0.9998848843798896	WITHOUT_CLASSIFICATION	1.151156201102651E-4	IMPLEMENTATION
// add $RUBYLIB paths	WITHOUT_CLASSIFICATION	0.9999133253728166	WITHOUT_CLASSIFICATION	8.667462718334122E-5	IMPLEMENTATION
// Empty paths do not need to be added	WITHOUT_CLASSIFICATION	0.9986155895442033	WITHOUT_CLASSIFICATION	0.001384410455796705	IMPLEMENTATION
// "." dir is used for relative path loads from a given file, as in require '../foo/bar'	WITHOUT_CLASSIFICATION	0.9999288163067026	WITHOUT_CLASSIFICATION	7.118369329740778E-5	IMPLEMENTATION
// Add 1.8 libs	WITHOUT_CLASSIFICATION	0.9998841298831075	WITHOUT_CLASSIFICATION	1.1587011689252635E-4	IMPLEMENTATION
// Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.	WITHOUT_CLASSIFICATION	0.9999907152371731	WITHOUT_CLASSIFICATION	9.284762826931226E-6	IMPLEMENTATION
// Library has already been loaded in some form, bail out	WITHOUT_CLASSIFICATION	0.9999508389085302	WITHOUT_CLASSIFICATION	4.916109146969786E-5	IMPLEMENTATION
// We don't want a package name beginning with dots, so we remove them	WITHOUT_CLASSIFICATION	0.9999757595783691	WITHOUT_CLASSIFICATION	2.4240421630788946E-5	IMPLEMENTATION
// If there is a jar-file with the required name, we add this to the class path.	WITHOUT_CLASSIFICATION	0.9999716638785767	WITHOUT_CLASSIFICATION	2.8336121423279608E-5	IMPLEMENTATION
// quietly try to load the class	WITHOUT_CLASSIFICATION	0.9999636628010252	WITHOUT_CLASSIFICATION	3.6337198974717624E-5	IMPLEMENTATION
// If there was a good library before, we go back to that	WITHOUT_CLASSIFICATION	0.9999591265188549	WITHOUT_CLASSIFICATION	4.0873481145149953E-5	IMPLEMENTATION
// no library or extension found, try to load directly as a class	WITHOUT_CLASSIFICATION	0.9999758006921553	WITHOUT_CLASSIFICATION	2.419930784475273E-5	IMPLEMENTATION
// if an extension is specified, try more targetted searches	WITHOUT_CLASSIFICATION	0.9999638837212408	WITHOUT_CLASSIFICATION	3.611627875919491E-5	IMPLEMENTATION
// signed short, big-endian	WITHOUT_CLASSIFICATION	0.9998511716115672	WITHOUT_CLASSIFICATION	1.4882838843289045E-4	IMPLEMENTATION
// source extensions	WITHOUT_CLASSIFICATION	0.9998611554890786	WITHOUT_CLASSIFICATION	1.3884451092136888E-4	IMPLEMENTATION
// We don't support .so, but some stdlib require .so directly // replace it with .jar to look for an extension type we do support	WITHOUT_CLASSIFICATION	0.9999086601597137	WITHOUT_CLASSIFICATION	9.133984028630312E-5	IMPLEMENTATION
// This code exploits the fact that all .jar files will be found for the JarredScript feature. // This is where the basic extension mechanism gets fixed	WITHOUT_CLASSIFICATION	0.9999832497513409	WITHOUT_CLASSIFICATION	1.675024865914653E-5	IMPLEMENTATION
// Make the class name look nice, by splitting on _ and capitalize each segment, then joining // the, together without anything separating them, and last put on "Service" at the end.	WITHOUT_CLASSIFICATION	0.999985434253112	WITHOUT_CLASSIFICATION	1.4565746887908405E-5	IMPLEMENTATION
// It's _really_ expensive to check that the class actually exists in the Jar, so // we don't do that now.	WITHOUT_CLASSIFICATION	0.9999810631417534	WITHOUT_CLASSIFICATION	1.8936858246608262E-5	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999017471575002	WITHOUT_CLASSIFICATION	9.825284249980959E-5	IMPLEMENTATION
// extension extensions	WITHOUT_CLASSIFICATION	0.9998772342831767	WITHOUT_CLASSIFICATION	1.227657168232636E-4	IMPLEMENTATION
// unknown extension, fall back to search with extensions	WITHOUT_CLASSIFICATION	0.9999522376825796	WITHOUT_CLASSIFICATION	4.77623174205222E-5	IMPLEMENTATION
// try all extensions	WITHOUT_CLASSIFICATION	0.9998978847865861	WITHOUT_CLASSIFICATION	1.0211521341384392E-4	IMPLEMENTATION
// if a source extension is specified, try all source extensions	WITHOUT_CLASSIFICATION	0.9999616719537774	WITHOUT_CLASSIFICATION	3.832804622252374E-5	IMPLEMENTATION
// unknown extension, fall back to exact search	WITHOUT_CLASSIFICATION	0.9999326772772534	WITHOUT_CLASSIFICATION	6.732272274653183E-5	IMPLEMENTATION
// try only literal search	WITHOUT_CLASSIFICATION	0.9998993962080026	WITHOUT_CLASSIFICATION	1.0060379199743097E-4	IMPLEMENTATION
// attempt to load the found library	WITHOUT_CLASSIFICATION	0.9999654843974505	WITHOUT_CLASSIFICATION	3.4515602549630854E-5	IMPLEMENTATION
// otherwise load the library we've found	WITHOUT_CLASSIFICATION	0.9999308060161946	WITHOUT_CLASSIFICATION	6.919398380551343E-5	IMPLEMENTATION
// allow MainExitException to propagate out for exec and friends	WITHOUT_CLASSIFICATION	0.9999483264723704	WITHOUT_CLASSIFICATION	5.167352762958831E-5	IMPLEMENTATION
// Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".	WITHOUT_CLASSIFICATION	0.9999257531290584	WITHOUT_CLASSIFICATION	7.424687094156712E-5	IMPLEMENTATION
// check current directory; if file exists, retrieve URL and return resource	WITHOUT_CLASSIFICATION	0.999991779883978	WITHOUT_CLASSIFICATION	8.220116021966603E-6	IMPLEMENTATION
// if a jar or file URL, return load service resource directly without further searching	WITHOUT_CLASSIFICATION	0.9999683749009636	WITHOUT_CLASSIFICATION	3.162509903632065E-5	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999219962370767	WITHOUT_CLASSIFICATION	7.800376292339833E-5	IMPLEMENTATION
// if it's a ./ baseName, use CWD logic	WITHOUT_CLASSIFICATION	0.999874491551147	WITHOUT_CLASSIFICATION	1.255084488529271E-4	IMPLEMENTATION
// if given path is absolute, just try it as-is (with extensions) and no load path	WITHOUT_CLASSIFICATION	0.999925307031031	WITHOUT_CLASSIFICATION	7.469296896905888E-5	IMPLEMENTATION
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9999551440074611	WITHOUT_CLASSIFICATION	4.485599253887101E-5	IMPLEMENTATION
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9999551440074611	WITHOUT_CLASSIFICATION	4.485599253887101E-5	IMPLEMENTATION
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9998620012536094	WITHOUT_CLASSIFICATION	1.3799874639060166E-4	IMPLEMENTATION
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9998620012536094	WITHOUT_CLASSIFICATION	1.3799874639060166E-4	IMPLEMENTATION
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999848461477635	WITHOUT_CLASSIFICATION	1.5153852236498395E-5	IMPLEMENTATION
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999848461477635	WITHOUT_CLASSIFICATION	1.5153852236498395E-5	IMPLEMENTATION
//                    actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));	WITHOUT_CLASSIFICATION	0.9999529366447122	WITHOUT_CLASSIFICATION	4.70633552878776E-5	IMPLEMENTATION
// handle security-sensitive case	WITHOUT_CLASSIFICATION	0.9998523468422408	WITHOUT_CLASSIFICATION	1.4765315775922973E-4	IMPLEMENTATION
// if entry is an empty string, skip it	WITHOUT_CLASSIFICATION	0.9999562148941117	WITHOUT_CLASSIFICATION	4.3785105888233676E-5	IMPLEMENTATION
// if entry starts with a slash, skip it since classloader resources never start with a /	WITHOUT_CLASSIFICATION	0.9999659694543257	WITHOUT_CLASSIFICATION	3.403054567431622E-5	IMPLEMENTATION
// otherwise, try to load from classpath (Note: Jar resources always uses '/')	WITHOUT_CLASSIFICATION	0.9999657136055079	WITHOUT_CLASSIFICATION	3.4286394492188384E-5	IMPLEMENTATION
// Make sure this is not a directory or unavailable in some way	WITHOUT_CLASSIFICATION	0.999989422701274	WITHOUT_CLASSIFICATION	1.0577298726010054E-5	IMPLEMENTATION
// signed short, native	WITHOUT_CLASSIFICATION	0.99981149799234	WITHOUT_CLASSIFICATION	1.885020076598341E-4	IMPLEMENTATION
// If we fail to find as a normal Ruby script, we try to find as an extension, // checking for a builtin first.	WITHOUT_CLASSIFICATION	0.9999690014543047	WITHOUT_CLASSIFICATION	3.0998545695305854E-5	IMPLEMENTATION
// write `I' instance var signet if class is NOT a direct subclass of Object	WITHOUT_CLASSIFICATION	0.9999704764449481	WITHOUT_CLASSIFICATION	2.9523555052018885E-5	IMPLEMENTATION
// if name starts with a / we're done (classloader resources won't load with an initial /)	WITHOUT_CLASSIFICATION	0.9999715679319512	WITHOUT_CLASSIFICATION	2.8432068048864823E-5	IMPLEMENTATION
// Look in classpath next (we do not use File as a test since UNC names will match) // Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")	WITHOUT_CLASSIFICATION	0.9999774842798222	WITHOUT_CLASSIFICATION	2.251572017778501E-5	IMPLEMENTATION
/* Directories and unavailable resources are not able to open a stream. */	WITHOUT_CLASSIFICATION	0.9999452034443949	WITHOUT_CLASSIFICATION	5.479655560510854E-5	IMPLEMENTATION
// Try to load from classpath without prefix. "A/b.rb" will not load as  // "./A/b.rb" in a jar file.	WITHOUT_CLASSIFICATION	0.9999242328000673	WITHOUT_CLASSIFICATION	7.576719993276726E-5	IMPLEMENTATION
// object has instance vars and isn't a class, get a snapshot to be marshalled // and output the ivar header here	WITHOUT_CLASSIFICATION	0.9999889735452872	WITHOUT_CLASSIFICATION	1.1026454712931785E-5	IMPLEMENTATION
// flush afer whole dump is complete	WITHOUT_CLASSIFICATION	0.9996224693279305	WITHOUT_CLASSIFICATION	3.775306720694461E-4	IMPLEMENTATION
//            write('S');	WITHOUT_CLASSIFICATION	0.9999418965329901	WITHOUT_CLASSIFICATION	5.810346700976525E-5	IMPLEMENTATION
// switch on the object's *native type*. This allows use-defined // classes that have extended core native types to piggyback on their // marshalling logic.	WITHOUT_CLASSIFICATION	0.9999624968507764	WITHOUT_CLASSIFICATION	3.7503149223543824E-5	IMPLEMENTATION
// object is a custom class that extended one of the native types other than Object	WITHOUT_CLASSIFICATION	0.9999733557520581	WITHOUT_CLASSIFICATION	2.664424794183267E-5	IMPLEMENTATION
// We do not want to capture cached methods	WITHOUT_CLASSIFICATION	0.9999062744911983	WITHOUT_CLASSIFICATION	9.372550880172729E-5	IMPLEMENTATION
// w_symbol	WITHOUT_CLASSIFICATION	0.999780264651601	WITHOUT_CLASSIFICATION	2.1973534839900567E-4	IMPLEMENTATION
// w_unique	WITHOUT_CLASSIFICATION	0.9997796599431483	WITHOUT_CLASSIFICATION	2.2034005685175276E-4	IMPLEMENTATION
// call the proc, but not for symbols	WITHOUT_CLASSIFICATION	0.9998953135623049	WITHOUT_CLASSIFICATION	1.04686437695108E-4	IMPLEMENTATION
// Major // Minor	WITHOUT_CLASSIFICATION	0.9997865858624271	WITHOUT_CLASSIFICATION	2.1341413757288496E-4	IMPLEMENTATION
// any ivars, since we don't have __attached__ ivar now	WITHOUT_CLASSIFICATION	0.9999270249359313	WITHOUT_CLASSIFICATION	7.297506406873754E-5	IMPLEMENTATION
// "hashdef" object, a hash with a default	WITHOUT_CLASSIFICATION	0.9999597159786614	WITHOUT_CLASSIFICATION	4.028402133859539E-5	IMPLEMENTATION
// All "C" marshalled objects descend from core classes, which are all RubyObject	WITHOUT_CLASSIFICATION	0.9999598778953817	WITHOUT_CLASSIFICATION	4.0122104618337634E-5	IMPLEMENTATION
// sic	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999546649388485	WITHOUT_CLASSIFICATION	4.533506115148163E-5	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999546649388485	WITHOUT_CLASSIFICATION	4.533506115148163E-5	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999546649388485	WITHOUT_CLASSIFICATION	4.533506115148163E-5	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.999956611007396	WITHOUT_CLASSIFICATION	4.3388992604098015E-5	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.999956611007396	WITHOUT_CLASSIFICATION	4.3388992604098015E-5	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9998743042517446	WITHOUT_CLASSIFICATION	1.2569574825536427E-4	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9998743042517446	WITHOUT_CLASSIFICATION	1.2569574825536427E-4	IMPLEMENTATION
/*     * If we are setting post arguments we can assume there are no pre or others     */	WITHOUT_CLASSIFICATION	0.9999916347498911	WITHOUT_CLASSIFICATION	8.36525010893066E-6	IMPLEMENTATION
// XXX: 0xffff0000 on BE?	WITHOUT_CLASSIFICATION	0.9997863866723466	WITHOUT_CLASSIFICATION	2.136133276532606E-4	IMPLEMENTATION
// unsigned short, native	WITHOUT_CLASSIFICATION	0.9998198342522111	WITHOUT_CLASSIFICATION	1.8016574778888724E-4	IMPLEMENTATION
// int, native // long, native	WITHOUT_CLASSIFICATION	0.9998445844997429	WITHOUT_CLASSIFICATION	1.5541550025721795E-4	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999546649388485	WITHOUT_CLASSIFICATION	4.533506115148163E-5	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999546649388485	WITHOUT_CLASSIFICATION	4.533506115148163E-5	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999546649388485	WITHOUT_CLASSIFICATION	4.533506115148163E-5	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.999956611007396	WITHOUT_CLASSIFICATION	4.3388992604098015E-5	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.999956611007396	WITHOUT_CLASSIFICATION	4.3388992604098015E-5	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.999956611007396	WITHOUT_CLASSIFICATION	4.3388992604098015E-5	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9998743042517446	WITHOUT_CLASSIFICATION	1.2569574825536427E-4	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9998743042517446	WITHOUT_CLASSIFICATION	1.2569574825536427E-4	IMPLEMENTATION
// Look for slash, starting from 'start' position, until 'end'.	WITHOUT_CLASSIFICATION	0.9999483714425997	WITHOUT_CLASSIFICATION	5.1628557400401105E-5	IMPLEMENTATION
// Our values holder (name of variables are kept in staticScope)	WITHOUT_CLASSIFICATION	0.9999232983960772	WITHOUT_CLASSIFICATION	7.670160392274582E-5	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999738674965839	WITHOUT_CLASSIFICATION	2.6132503416149394E-5	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999738674965839	WITHOUT_CLASSIFICATION	2.6132503416149394E-5	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999738674965839	WITHOUT_CLASSIFICATION	2.6132503416149394E-5	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999738674965839	WITHOUT_CLASSIFICATION	2.6132503416149394E-5	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999738674965839	WITHOUT_CLASSIFICATION	2.6132503416149394E-5	IMPLEMENTATION
// SunSignalFacade	WITHOUT_CLASSIFICATION	0.999785411946094	WITHOUT_CLASSIFICATION	2.145880539059109E-4	IMPLEMENTATION
// All braces pushed..	WITHOUT_CLASSIFICATION	0.9998354273135296	WITHOUT_CLASSIFICATION	1.645726864702838E-4	IMPLEMENTATION
/* failed : try next recursion */	WITHOUT_CLASSIFICATION	0.9998658007558416	WITHOUT_CLASSIFICATION	1.3419924415837531E-4	IMPLEMENTATION
// leftToken made us start as nest 1	WITHOUT_CLASSIFICATION	0.9999145888331786	WITHOUT_CLASSIFICATION	8.541116682131426E-5	IMPLEMENTATION
// are we at '**/'	WITHOUT_CLASSIFICATION	0.9997935334109603	WITHOUT_CLASSIFICATION	2.0646658903957093E-4	IMPLEMENTATION
// No or mismatched braces..Move along..nothing to see here	WITHOUT_CLASSIFICATION	0.999950527159921	WITHOUT_CLASSIFICATION	4.947284007907902E-5	IMPLEMENTATION
// not enough bytes	WITHOUT_CLASSIFICATION	0.9993521156274171	WITHOUT_CLASSIFICATION	6.478843725827535E-4	IMPLEMENTATION
// Get index of last read byte	WITHOUT_CLASSIFICATION	0.9998809856024382	WITHOUT_CLASSIFICATION	1.1901439756174246E-4	IMPLEMENTATION
// skip inner braces	WITHOUT_CLASSIFICATION	0.9998792516137688	WITHOUT_CLASSIFICATION	1.2074838623116431E-4	IMPLEMENTATION
/*     * Process {}'s (example: Dir.glob("{jruby,jython}/README*")      */	WITHOUT_CLASSIFICATION	0.9999718427484882	WITHOUT_CLASSIFICATION	2.8157251511832508E-5	IMPLEMENTATION
/* complete, according to Posix.2 */	WITHOUT_CLASSIFICATION	0.9998043011260598	WITHOUT_CLASSIFICATION	1.956988739401509E-4	IMPLEMENTATION
/* Only accept an open brace if there is a close */	WITHOUT_CLASSIFICATION	0.999941022522528	WITHOUT_CLASSIFICATION	5.8977477471995564E-5	IMPLEMENTATION
/* brace to match it.  Bracket expressions must be */	WITHOUT_CLASSIFICATION	0.9998785767510386	WITHOUT_CLASSIFICATION	1.214232489614032E-4	IMPLEMENTATION
// index of left-most brace // index of right-most brace	WITHOUT_CLASSIFICATION	0.9998669259485844	WITHOUT_CLASSIFICATION	1.33074051415612E-4	IMPLEMENTATION
// Length check is a hack.  We should not be reeiving "" as a filename ever. 	WITHOUT_CLASSIFICATION	0.9999428725507736	WITHOUT_CLASSIFICATION	5.7127449226361924E-5	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9997932307024571	WITHOUT_CLASSIFICATION	2.06769297542833E-4	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9997932307024571	WITHOUT_CLASSIFICATION	2.06769297542833E-4	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9997932307024571	WITHOUT_CLASSIFICATION	2.06769297542833E-4	IMPLEMENTATION
// Pickaxe says @ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9999258165274442	WITHOUT_CLASSIFICATION	7.418347255583189E-5	IMPLEMENTATION
// Pickaxe says @@ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9999258165274442	WITHOUT_CLASSIFICATION	7.418347255583189E-5	IMPLEMENTATION
// SimpleSampler	WITHOUT_CLASSIFICATION	0.9997852400751411	WITHOUT_CLASSIFICATION	2.1475992485875338E-4	IMPLEMENTATION
/*     * convert into longs, returning unsigned 64-bit values as signed longs     * ( num2long raises a RangeError on values > Long.MAX_VALUE )     */	WITHOUT_CLASSIFICATION	0.9999874630165273	WITHOUT_CLASSIFICATION	1.253698347278123E-5	IMPLEMENTATION
// b64_xtable for decoding Base 64	WITHOUT_CLASSIFICATION	0.9998889849777977	WITHOUT_CLASSIFICATION	1.1101502220229004E-4	IMPLEMENTATION
// single precision, little-endian	WITHOUT_CLASSIFICATION	0.9998791130175202	WITHOUT_CLASSIFICATION	1.2088698247979894E-4	IMPLEMENTATION
// single precision, big-endian	WITHOUT_CLASSIFICATION	0.9998791897309961	WITHOUT_CLASSIFICATION	1.2081026900391947E-4	IMPLEMENTATION
// single precision, native	WITHOUT_CLASSIFICATION	0.9998356432141304	WITHOUT_CLASSIFICATION	1.6435678586966022E-4	IMPLEMENTATION
// single precision, native // single precision, native	WITHOUT_CLASSIFICATION	0.9998051428583058	WITHOUT_CLASSIFICATION	1.9485714169415638E-4	IMPLEMENTATION
// double precision, little-endian	WITHOUT_CLASSIFICATION	0.999962097105739	WITHOUT_CLASSIFICATION	3.790289426098911E-5	IMPLEMENTATION
// double precision, big-endian	WITHOUT_CLASSIFICATION	0.9999621211604707	WITHOUT_CLASSIFICATION	3.7878839529282144E-5	IMPLEMENTATION
// double precision, native	WITHOUT_CLASSIFICATION	0.9999484660492876	WITHOUT_CLASSIFICATION	5.153395071246533E-5	IMPLEMENTATION
// signed short, little-endian	WITHOUT_CLASSIFICATION	0.9998510232742418	WITHOUT_CLASSIFICATION	1.489767257581468E-4	IMPLEMENTATION
// signed char	WITHOUT_CLASSIFICATION	0.9997918820498557	WITHOUT_CLASSIFICATION	2.081179501443616E-4	IMPLEMENTATION
// unsigned char	WITHOUT_CLASSIFICATION	0.9998010856270718	WITHOUT_CLASSIFICATION	1.9891437292826595E-4	IMPLEMENTATION
// long, little-endian	WITHOUT_CLASSIFICATION	0.9999122070942781	WITHOUT_CLASSIFICATION	8.779290572195558E-5	IMPLEMENTATION
// long, big-endian	WITHOUT_CLASSIFICATION	0.9998884049480112	WITHOUT_CLASSIFICATION	1.1159505198872763E-4	IMPLEMENTATION
// unsigned int, native	WITHOUT_CLASSIFICATION	0.9998089981053032	WITHOUT_CLASSIFICATION	1.910018946968338E-4	IMPLEMENTATION
// int, native	WITHOUT_CLASSIFICATION	0.9997629776556014	WITHOUT_CLASSIFICATION	2.3702234439851915E-4	IMPLEMENTATION
// 64-bit number, native (as fixnum)	WITHOUT_CLASSIFICATION	0.9997707569633292	WITHOUT_CLASSIFICATION	2.2924303667088065E-4	IMPLEMENTATION
// How many occurrences of 'type' we want	WITHOUT_CLASSIFICATION	0.9998612764438995	WITHOUT_CLASSIFICATION	1.3872355610055056E-4	IMPLEMENTATION
// See if we have a converter for the job...	WITHOUT_CLASSIFICATION	0.9999640388566681	WITHOUT_CLASSIFICATION	3.5961143332057076E-5	IMPLEMENTATION
// Otherwise the unpack should be here...	WITHOUT_CLASSIFICATION	0.9998820440021547	WITHOUT_CLASSIFICATION	1.1795599784521641E-4	IMPLEMENTATION
// Possible Checksum Byte	WITHOUT_CLASSIFICATION	0.999838975999201	WITHOUT_CLASSIFICATION	1.6102400079910607E-4	IMPLEMENTATION
// obtain a	WITHOUT_CLASSIFICATION	0.9997796414921301	WITHOUT_CLASSIFICATION	2.2035850787007082E-4	IMPLEMENTATION
// obtain b	WITHOUT_CLASSIFICATION	0.9997811821502485	WITHOUT_CLASSIFICATION	2.188178497514417E-4	IMPLEMENTATION
// obtain c	WITHOUT_CLASSIFICATION	0.9997815849714836	WITHOUT_CLASSIFICATION	2.1841502851636946E-4	IMPLEMENTATION
// obtain d	WITHOUT_CLASSIFICATION	0.9997805898779557	WITHOUT_CLASSIFICATION	2.194101220443093E-4	IMPLEMENTATION
/*encode.limit() - */	WITHOUT_CLASSIFICATION	0.9998276296432287	WITHOUT_CLASSIFICATION	1.7237035677125626E-4	IMPLEMENTATION
/* 1 */	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
/* 2 */	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
/* 3 */	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
/* 4 */	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
/* 5 */	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
/* 6 */	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
/* 7 */	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
// Skip all whitespace in pack format string	WITHOUT_CLASSIFICATION	0.9999300690490672	WITHOUT_CLASSIFICATION	6.99309509327576E-5	IMPLEMENTATION
// Skip embedded comments in pack format string	WITHOUT_CLASSIFICATION	0.9999454115565142	WITHOUT_CLASSIFICATION	5.458844348584995E-5	IMPLEMENTATION
// In case when the number of occurences is // explicitly specified, we have to read up // the remaining garbage after the '\0' to // satisfy the requested pattern.	WITHOUT_CLASSIFICATION	0.9999937299918206	WITHOUT_CLASSIFICATION	6.2700081794812505E-6	IMPLEMENTATION
//normal exit, this should be faster than a test at each iterations for string with more than //about 40 char	WITHOUT_CLASSIFICATION	0.9999671866261569	WITHOUT_CLASSIFICATION	3.281337384309203E-5	IMPLEMENTATION
// We encountered '\0' when // were reading the buffer above, // increment the number of read bytes.	WITHOUT_CLASSIFICATION	0.9999768355956855	WITHOUT_CLASSIFICATION	2.316440431449514E-5	IMPLEMENTATION
// MRI behavior: Contrary to what seems to be logical, // when '*' is given, MRI calculates the distance // to the end, in order to go backwards.	WITHOUT_CLASSIFICATION	0.9999880054027939	WITHOUT_CLASSIFICATION	1.1994597206140594E-5	IMPLEMENTATION
// Determine how many of type are needed (default: 1)	WITHOUT_CLASSIFICATION	0.9999169514144393	WITHOUT_CLASSIFICATION	8.304858556075899E-5	IMPLEMENTATION
// 'Z' adds extra null pad (versus 'a')	WITHOUT_CLASSIFICATION	0.9998535633531251	WITHOUT_CLASSIFICATION	1.464366468748895E-4	IMPLEMENTATION
//if the low bit is set //set the high bit of the result	WITHOUT_CLASSIFICATION	0.9999660097289425	WITHOUT_CLASSIFICATION	3.3990271057600164E-5	IMPLEMENTATION
//if the index is not a multiple of 8, we are not on a byte boundary //shift the byte	WITHOUT_CLASSIFICATION	0.9999509511697388	WITHOUT_CLASSIFICATION	4.904883026117419E-5	IMPLEMENTATION
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9999265121795542	WITHOUT_CLASSIFICATION	7.348782044575475E-5	IMPLEMENTATION
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9999265121795542	WITHOUT_CLASSIFICATION	7.348782044575475E-5	IMPLEMENTATION
//do some padding, I don't understand the padding strategy	WITHOUT_CLASSIFICATION	0.9997308714843418	WITHOUT_CLASSIFICATION	2.6912851565820894E-4	IMPLEMENTATION
// we filled up current byte; append it and create next one	WITHOUT_CLASSIFICATION	0.9999590587418973	WITHOUT_CLASSIFICATION	4.0941258102689374E-5	IMPLEMENTATION
//if the index is not a multiple of 8, we are not on a byte boundary	WITHOUT_CLASSIFICATION	0.9999352760772703	WITHOUT_CLASSIFICATION	6.472392272967093E-5	IMPLEMENTATION
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9999133493253386	WITHOUT_CLASSIFICATION	8.665067466142458E-5	IMPLEMENTATION
// we don't deal with negatives.	WITHOUT_CLASSIFICATION	0.9999190779314628	WITHOUT_CLASSIFICATION	8.092206853710042E-5	IMPLEMENTATION
// populate commandline with NG-provided stuff	WITHOUT_CLASSIFICATION	0.9999244675377875	WITHOUT_CLASSIFICATION	7.553246221251377E-5	IMPLEMENTATION
// are we recursing?	WITHOUT_CLASSIFICATION	0.9998162118000412	WITHOUT_CLASSIFICATION	1.837881999587589E-4	IMPLEMENTATION
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999926828538471	WITHOUT_CLASSIFICATION	7.317146152862539E-6	IMPLEMENTATION
// default PidGetter	WITHOUT_CLASSIFICATION	0.9999563224217634	WITHOUT_CLASSIFICATION	4.3677578236686054E-5	IMPLEMENTATION
// ignore and try windows version	WITHOUT_CLASSIFICATION	0.9999896373258675	WITHOUT_CLASSIFICATION	1.0362674132440353E-5	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.999985230311072	WITHOUT_CLASSIFICATION	1.4769688927949734E-5	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.999985230311072	WITHOUT_CLASSIFICATION	1.4769688927949734E-5	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.999985230311072	WITHOUT_CLASSIFICATION	1.4769688927949734E-5	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.999985230311072	WITHOUT_CLASSIFICATION	1.4769688927949734E-5	IMPLEMENTATION
// try both	WITHOUT_CLASSIFICATION	0.999812712186021	WITHOUT_CLASSIFICATION	1.8728781397904032E-4	IMPLEMENTATION
// just unix	WITHOUT_CLASSIFICATION	0.9998250866338751	WITHOUT_CLASSIFICATION	1.7491336612489585E-4	IMPLEMENTATION
// just windows	WITHOUT_CLASSIFICATION	0.9998551632424106	WITHOUT_CLASSIFICATION	1.4483675758931555E-4	IMPLEMENTATION
// neither	WITHOUT_CLASSIFICATION	0.9954787224095685	WITHOUT_CLASSIFICATION	0.004521277590431505	IMPLEMENTATION
// CON: popen is a case where I think we should just always shell out.	WITHOUT_CLASSIFICATION	0.9999294158551335	WITHOUT_CLASSIFICATION	7.058414486650868E-5	IMPLEMENTATION
// single string command, pass to sh to expand wildcards	WITHOUT_CLASSIFICATION	0.999939769430405	WITHOUT_CLASSIFICATION	6.023056959499571E-5	IMPLEMENTATION
// direct invocation of the command	WITHOUT_CLASSIFICATION	0.9999759387101508	WITHOUT_CLASSIFICATION	2.406128984930448E-5	IMPLEMENTATION
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999378575668123	WITHOUT_CLASSIFICATION	6.214243318772719E-5	IMPLEMENTATION
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999378575668123	WITHOUT_CLASSIFICATION	6.214243318772719E-5	IMPLEMENTATION
// close process output // See JRUBY-3405; hooking up to parent process stdin caused // problems for IRB etc using stdin.	WITHOUT_CLASSIFICATION	0.9999614649457953	WITHOUT_CLASSIFICATION	3.8535054204711516E-5	IMPLEMENTATION
// ignore, we're on the way out	WITHOUT_CLASSIFICATION	0.9999866970925633	WITHOUT_CLASSIFICATION	1.330290743677067E-5	IMPLEMENTATION
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999428078052056	WITHOUT_CLASSIFICATION	5.7192194794458325E-5	IMPLEMENTATION
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999491059358075	WITHOUT_CLASSIFICATION	5.08940641924863E-5	IMPLEMENTATION
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999491059358075	WITHOUT_CLASSIFICATION	5.08940641924863E-5	IMPLEMENTATION
// popen caller wants to be able to write, provide subprocess out directly	WITHOUT_CLASSIFICATION	0.9999535387005484	WITHOUT_CLASSIFICATION	4.6461299451740187E-5	IMPLEMENTATION
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999175738677416	WITHOUT_CLASSIFICATION	8.242613225828996E-5	IMPLEMENTATION
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999175738677416	WITHOUT_CLASSIFICATION	8.242613225828996E-5	IMPLEMENTATION
// execute command with sh -c // this does shell expansion of wildcards	WITHOUT_CLASSIFICATION	0.9999773010900522	WITHOUT_CLASSIFICATION	2.2698909947824198E-5	IMPLEMENTATION
// We need to close the out, since some // processes would just wait for the stream // to be closed before they process its content, // and produce the output. E.g.: "cat".	WITHOUT_CLASSIFICATION	0.999992890589382	WITHOUT_CLASSIFICATION	7.109410617909208E-6	IMPLEMENTATION
// we only close out if it's the slave stream, to avoid // closing a directly-mapped stream from parent process	WITHOUT_CLASSIFICATION	0.9999880851857819	WITHOUT_CLASSIFICATION	1.1914814218027849E-5	IMPLEMENTATION
// The assumption here is that the 'in' stream provides // proper available() support. If available() always // returns 0, we'll hang!	WITHOUT_CLASSIFICATION	0.9999866168037638	WITHOUT_CLASSIFICATION	1.3383196236230745E-5	IMPLEMENTATION
// Force t3 to quit, just in case if it's stuck. // Note: On some platforms, even interrupt might not // have an effect if the thread is IO blocked.	WITHOUT_CLASSIFICATION	0.9999772871745127	WITHOUT_CLASSIFICATION	2.2712825487191412E-5	IMPLEMENTATION
// Check for special shell characters [<>|] at the beginning // and end of each command word and don't run in process if we find them.	WITHOUT_CLASSIFICATION	0.9999954628840535	WITHOUT_CLASSIFICATION	4.537115946478395E-6	IMPLEMENTATION
// Note: this method produces meaningful results // only for RubyIO objects. For everything else returns 0.	WITHOUT_CLASSIFICATION	0.9999326491004021	WITHOUT_CLASSIFICATION	6.735089959786671E-5	IMPLEMENTATION
//sequential	WITHOUT_CLASSIFICATION	0.9997890593592492	WITHOUT_CLASSIFICATION	2.1094064075076116E-4	IMPLEMENTATION
// reverse the entire area of the array selected if it's reversed.	WITHOUT_CLASSIFICATION	0.9999781177147523	WITHOUT_CLASSIFICATION	2.1882285247751456E-5	IMPLEMENTATION
// do median of 7 if the array is over 200 elements.	WITHOUT_CLASSIFICATION	0.999954530322607	WITHOUT_CLASSIFICATION	4.546967739318613E-5	IMPLEMENTATION
// if it's less than 200 do median of 3	WITHOUT_CLASSIFICATION	0.9998987474388116	WITHOUT_CLASSIFICATION	1.0125256118848968E-4	IMPLEMENTATION
// SignalFacade	WITHOUT_CLASSIFICATION	0.9997888711513531	WITHOUT_CLASSIFICATION	2.1112884864702599E-4	IMPLEMENTATION
// this is the order in which MRI does these two tests	WITHOUT_CLASSIFICATION	0.9999617001759822	WITHOUT_CLASSIFICATION	3.829982401778976E-5	IMPLEMENTATION
// this is the order in which MRI does these tests	WITHOUT_CLASSIFICATION	0.9999629317057015	WITHOUT_CLASSIFICATION	3.70682942985308E-5	IMPLEMENTATION
// basically just forcing a TypeError here to match MRI	WITHOUT_CLASSIFICATION	0.9998826249214031	WITHOUT_CLASSIFICATION	1.1737507859676363E-4	IMPLEMENTATION
// not saving DFS instance, as it will only be used once (at most) per call	WITHOUT_CLASSIFICATION	0.9997286993648238	WITHOUT_CLASSIFICATION	2.7130063517621754E-4	IMPLEMENTATION
// Args	WITHOUT_CLASSIFICATION	0.9954214639257274	WITHOUT_CLASSIFICATION	0.004578536074272554	IMPLEMENTATION
// static methods only	WITHOUT_CLASSIFICATION	0.9998861913507145	WITHOUT_CLASSIFICATION	1.1380864928542845E-4	IMPLEMENTATION
//System.err.println(" calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999358305962905	WITHOUT_CLASSIFICATION	6.416940370938443E-5	IMPLEMENTATION
// MRI 1.8.6 behavior: null byte after '%' // leads to "%" string. Null byte in // other places, like "%5\0", leads to error.	WITHOUT_CLASSIFICATION	0.9999114795991013	WITHOUT_CLASSIFICATION	8.852040089879276E-5	IMPLEMENTATION
// last index (+1) accessed by next() // last index (+1) accessed by get()	WITHOUT_CLASSIFICATION	0.9998421292940513	WITHOUT_CLASSIFICATION	1.578707059487519E-4	IMPLEMENTATION
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly.	WITHOUT_CLASSIFICATION	0.9999677651719948	WITHOUT_CLASSIFICATION	3.223482800526229E-5	IMPLEMENTATION
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly. Version for 1.9.	WITHOUT_CLASSIFICATION	0.9999746120830277	WITHOUT_CLASSIFICATION	2.538791697227454E-5	IMPLEMENTATION
// MRI doesn't flag it as an error if width is given multiple // times as a number (but it does for *)	WITHOUT_CLASSIFICATION	0.9999233052303709	WITHOUT_CLASSIFICATION	7.669476962915234E-5	IMPLEMENTATION
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999689654576895	WITHOUT_CLASSIFICATION	3.103454231043546E-5	IMPLEMENTATION
// MRI 1.8.5-p12 doesn't support 1-char strings, but // YARV 0.4.1 does. I don't think it hurts to include // this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])	WITHOUT_CLASSIFICATION	0.9998978134855273	WITHOUT_CLASSIFICATION	1.0218651447268235E-4	IMPLEMENTATION
// 'd' and 'i' are the same	WITHOUT_CLASSIFICATION	0.9998688863274449	WITHOUT_CLASSIFICATION	1.3111367255516507E-4	IMPLEMENTATION
// 'u' with space or plus flags is same as 'd'	WITHOUT_CLASSIFICATION	0.9998675184791682	WITHOUT_CLASSIFICATION	1.324815208317207E-4	IMPLEMENTATION
// We depart here from strict adherence to MRI code, as MRI // uses C-sprintf, in part, to format numeric output, while // we'll use Java's numeric formatting code (and our own).	WITHOUT_CLASSIFICATION	0.9999619979204988	WITHOUT_CLASSIFICATION	3.800207950123894E-5	IMPLEMENTATION
// skip '-' in bytes, will add where appropriate	WITHOUT_CLASSIFICATION	0.9998924068195459	WITHOUT_CLASSIFICATION	1.0759318045406281E-4	IMPLEMENTATION
// ..	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
// the 1 is for the stripped sign char	WITHOUT_CLASSIFICATION	0.9999508086320676	WITHOUT_CLASSIFICATION	4.919136793237631E-5	IMPLEMENTATION
// FIXME: what is correct 'recv' argument? // (this does produce the desired behavior)	WITHOUT_CLASSIFICATION	0.9998814409134041	WITHOUT_CLASSIFICATION	1.1855908659585065E-4	IMPLEMENTATION
// gotta have at least a zero...	WITHOUT_CLASSIFICATION	0.9998831040681119	WITHOUT_CLASSIFICATION	1.168959318882423E-4	IMPLEMENTATION
// OK, we now have the significand in digits[0...nDigits] // and the exponent in exponent.  We're ready to format.	WITHOUT_CLASSIFICATION	0.9999511911424463	WITHOUT_CLASSIFICATION	4.880885755370019E-5	IMPLEMENTATION
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9997707340894105	WITHOUT_CLASSIFICATION	2.292659105894676E-4	IMPLEMENTATION
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9997817118864667	WITHOUT_CLASSIFICATION	2.1828811353335985E-4	IMPLEMENTATION
//System.err.println(" stringToLong/reading c=" + data[s]);	WITHOUT_CLASSIFICATION	0.9999381484423789	WITHOUT_CLASSIFICATION	6.185155762109824E-5	IMPLEMENTATION
//System.err.println(" stringToLong/converted c=" + c);	WITHOUT_CLASSIFICATION	0.9999416011541378	WITHOUT_CLASSIFICATION	5.83988458622048E-5	IMPLEMENTATION
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9997707340894105	WITHOUT_CLASSIFICATION	2.292659105894676E-4	IMPLEMENTATION
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9997817118864667	WITHOUT_CLASSIFICATION	2.1828811353335985E-4	IMPLEMENTATION
// precision for G/g includes integer digits	WITHOUT_CLASSIFICATION	0.9998946675737026	WITHOUT_CLASSIFICATION	1.0533242629743876E-4	IMPLEMENTATION
// deal with length/width	WITHOUT_CLASSIFICATION	0.9998394948958046	WITHOUT_CLASSIFICATION	1.6050510419541366E-4	IMPLEMENTATION
// deal with length/width	WITHOUT_CLASSIFICATION	0.9998394948958046	WITHOUT_CLASSIFICATION	1.6050510419541366E-4	IMPLEMENTATION
// first digit is always printed	WITHOUT_CLASSIFICATION	0.999927576642739	WITHOUT_CLASSIFICATION	7.242335726105916E-5	IMPLEMENTATION
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999853942238489	WITHOUT_CLASSIFICATION	1.460577615105656E-5	IMPLEMENTATION
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9998269084618239	WITHOUT_CLASSIFICATION	1.7309153817620973E-4	IMPLEMENTATION
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.999779971725086	WITHOUT_CLASSIFICATION	2.2002827491392825E-4	IMPLEMENTATION
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.999899462296293	WITHOUT_CLASSIFICATION	1.0053770370696212E-4	IMPLEMENTATION
// MRI behavior: In this mode // trailing zeroes are removed: // 1.500E+05 -> 1.5E+05 	WITHOUT_CLASSIFICATION	0.9998676242061945	WITHOUT_CLASSIFICATION	1.323757938056586E-4	IMPLEMENTATION
// '.' is printed	WITHOUT_CLASSIFICATION	0.9997901545438213	WITHOUT_CLASSIFICATION	2.0984545617888E-4	IMPLEMENTATION
// all precision numebers printed	WITHOUT_CLASSIFICATION	0.9998749263703017	WITHOUT_CLASSIFICATION	1.2507362969822985E-4	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9998170843819023	WITHOUT_CLASSIFICATION	1.829156180976807E-4	IMPLEMENTATION
// '.'	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
// decimal form, like (but not *just* like!) 'f'	WITHOUT_CLASSIFICATION	0.9998393066264067	WITHOUT_CLASSIFICATION	1.6069337359329514E-4	IMPLEMENTATION
// digits array shifted, update all	WITHOUT_CLASSIFICATION	0.9999246756759914	WITHOUT_CLASSIFICATION	7.53243240085696E-5	IMPLEMENTATION
// will have a trailing '.' // g fills trailing zeroes if #	WITHOUT_CLASSIFICATION	0.9998977981443405	WITHOUT_CLASSIFICATION	1.022018556594851E-4	IMPLEMENTATION
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9998630997062317	WITHOUT_CLASSIFICATION	1.3690029376829248E-4	IMPLEMENTATION
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9998630997062317	WITHOUT_CLASSIFICATION	1.3690029376829248E-4	IMPLEMENTATION
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9998484677715312	WITHOUT_CLASSIFICATION	1.5153222846877877E-4	IMPLEMENTATION
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9998484677715312	WITHOUT_CLASSIFICATION	1.5153222846877877E-4	IMPLEMENTATION
// digits arr shifted, update all	WITHOUT_CLASSIFICATION	0.9999175297174124	WITHOUT_CLASSIFICATION	8.247028258755496E-5	IMPLEMENTATION
// (1|intlen).prec	WITHOUT_CLASSIFICATION	0.999779971725086	WITHOUT_CLASSIFICATION	2.2002827491392825E-4	IMPLEMENTATION
// (1|intlen)	WITHOUT_CLASSIFICATION	0.999779971725086	WITHOUT_CLASSIFICATION	2.2002827491392825E-4	IMPLEMENTATION
// will have a trailing '.'	WITHOUT_CLASSIFICATION	0.9998918524104936	WITHOUT_CLASSIFICATION	1.081475895062844E-4	IMPLEMENTATION
// fill up the rest with zeroes	WITHOUT_CLASSIFICATION	0.999908342932318	WITHOUT_CLASSIFICATION	9.165706768199915E-5	IMPLEMENTATION
//System.err.println(" main/len=" + len);	WITHOUT_CLASSIFICATION	0.9999197984765457	WITHOUT_CLASSIFICATION	8.020152345423895E-5	IMPLEMENTATION
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9998269084618239	WITHOUT_CLASSIFICATION	1.7309153817620973E-4	IMPLEMENTATION
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.999779971725086	WITHOUT_CLASSIFICATION	2.2002827491392825E-4	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9998170843819023	WITHOUT_CLASSIFICATION	1.829156180976807E-4	IMPLEMENTATION
// '.'	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
// equivalent to MRI case '\0':	WITHOUT_CLASSIFICATION	0.9998416355454983	WITHOUT_CLASSIFICATION	1.583644545017522E-4	IMPLEMENTATION
// '.' and all precision digits printed	WITHOUT_CLASSIFICATION	0.9998797732419125	WITHOUT_CLASSIFICATION	1.2022675808759069E-4	IMPLEMENTATION
// \v	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
// dangling '%' char	WITHOUT_CLASSIFICATION	0.9997855055944093	WITHOUT_CLASSIFICATION	2.1449440559077955E-4	IMPLEMENTATION
// main while loop (offset < length)	WITHOUT_CLASSIFICATION	0.9998913171774697	WITHOUT_CLASSIFICATION	1.0868282253033272E-4	IMPLEMENTATION
// debugging code, keeping for now	WITHOUT_CLASSIFICATION	0.9998912152208755	WITHOUT_CLASSIFICATION	1.0878477912451784E-4	IMPLEMENTATION
// MRI rounds up on nnn5nnn, but not nnn5 -- // except for when they do	WITHOUT_CLASSIFICATION	0.9998302174445385	WITHOUT_CLASSIFICATION	1.6978255546147117E-4	IMPLEMENTATION
// "%.0f" % 0.99	WITHOUT_CLASSIFICATION	0.999779971725086	WITHOUT_CLASSIFICATION	2.2002827491392825E-4	IMPLEMENTATION
// limit the length of negatives if possible (also faster)	WITHOUT_CLASSIFICATION	0.9999136638028187	WITHOUT_CLASSIFICATION	8.633619718140541E-5	IMPLEMENTATION
// negative values	WITHOUT_CLASSIFICATION	0.999861129958072	WITHOUT_CLASSIFICATION	1.388700419281574E-4	IMPLEMENTATION
// calculation for negatives when %u specified // for values >= Integer.MIN_VALUE * 2, MRI uses (the equivalent of) //   long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val // for smaller values, BigInteger math is required to conform to MRI's // result.	WITHOUT_CLASSIFICATION	0.9999708723389419	WITHOUT_CLASSIFICATION	2.912766105806208E-5	IMPLEMENTATION
// relatively cheap test for 32-bit values	WITHOUT_CLASSIFICATION	0.9999249613355441	WITHOUT_CLASSIFICATION	7.503866445584441E-5	IMPLEMENTATION
// no such luck...	WITHOUT_CLASSIFICATION	0.999839828401838	WITHOUT_CLASSIFICATION	1.6017159816186804E-4	IMPLEMENTATION
// ok, now it gets expensive...	WITHOUT_CLASSIFICATION	0.9998292629576508	WITHOUT_CLASSIFICATION	1.707370423491814E-4	IMPLEMENTATION
// go through negated powers of 32 until we find one small enough 	WITHOUT_CLASSIFICATION	0.9998869251214538	WITHOUT_CLASSIFICATION	1.1307487854614406E-4	IMPLEMENTATION
// add to the corresponding positive power of 32 for the result. // meaningful? no. conformant? yes. I just write the code...	WITHOUT_CLASSIFICATION	0.9999916071771068	WITHOUT_CLASSIFICATION	8.392822893247347E-6	IMPLEMENTATION
/* constant vector a */	WITHOUT_CLASSIFICATION	0.9998509863625588	WITHOUT_CLASSIFICATION	1.4901363744116545E-4	IMPLEMENTATION
/* most significant w-r bits */	WITHOUT_CLASSIFICATION	0.9998391476390844	WITHOUT_CLASSIFICATION	1.6085236091560555E-4	IMPLEMENTATION
/* least significant r bits */	WITHOUT_CLASSIFICATION	0.9998353967085708	WITHOUT_CLASSIFICATION	1.6460329142915274E-4	IMPLEMENTATION
// state[j] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9998525430582642	WITHOUT_CLASSIFICATION	1.4745694173582598E-4	IMPLEMENTATION
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9998525430582642	WITHOUT_CLASSIFICATION	1.4745694173582598E-4	IMPLEMENTATION
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9998525430582642	WITHOUT_CLASSIFICATION	1.4745694173582598E-4	IMPLEMENTATION
/* MSB is 1; assuring non-zero initial array */	WITHOUT_CLASSIFICATION	0.9998992645066535	WITHOUT_CLASSIFICATION	1.007354933466221E-4	IMPLEMENTATION
/* Tempering */	WITHOUT_CLASSIFICATION	0.9997891397944585	WITHOUT_CLASSIFICATION	2.1086020554146452E-4	IMPLEMENTATION
// MRI behavior: Week values are monotonous. // So, weeks that effectively belong to previous year, // will get the value of 0, not 52 or 53, as in Java.	WITHOUT_CLASSIFICATION	0.9999779496498251	WITHOUT_CLASSIFICATION	2.2050350174863496E-5	IMPLEMENTATION
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.999919822067279	WITHOUT_CLASSIFICATION	8.017793272100787E-5	IMPLEMENTATION
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.999919822067279	WITHOUT_CLASSIFICATION	8.017793272100787E-5	IMPLEMENTATION
// \v	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
//System.err.println("getSign()");	WITHOUT_CLASSIFICATION	0.9999197786110977	WITHOUT_CLASSIFICATION	8.022138890227085E-5	IMPLEMENTATION
//System.err.println(" getSign/" + sign);	WITHOUT_CLASSIFICATION	0.9999199375065182	WITHOUT_CLASSIFICATION	8.006249348179415E-5	IMPLEMENTATION
//System.err.println("figureOutBase()/base=" + base);	WITHOUT_CLASSIFICATION	0.9999210576964964	WITHOUT_CLASSIFICATION	7.894230350357992E-5	IMPLEMENTATION
//System.err.println(" figureOutBase/base=" + base);	WITHOUT_CLASSIFICATION	0.9999203881236093	WITHOUT_CLASSIFICATION	7.961187639067884E-5	IMPLEMENTATION
//System.err.println("calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999338844175109	WITHOUT_CLASSIFICATION	6.61155824891949E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9957816756494063	WITHOUT_CLASSIFICATION	0.0042183243505936495	IMPLEMENTATION
//System.err.println(" stringToLong=" + val);	WITHOUT_CLASSIFICATION	0.9999343974366487	WITHOUT_CLASSIFICATION	6.560256335139242E-5	IMPLEMENTATION
// no number	WITHOUT_CLASSIFICATION	0.9998500666382067	WITHOUT_CLASSIFICATION	1.4993336179324252E-4	IMPLEMENTATION
// trailing garbage	WITHOUT_CLASSIFICATION	0.9998073609434627	WITHOUT_CLASSIFICATION	1.926390565374703E-4	IMPLEMENTATION
//System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);	WITHOUT_CLASSIFICATION	0.9999379463195904	WITHOUT_CLASSIFICATION	6.20536804095325E-5	IMPLEMENTATION
// it was not found at all!	WITHOUT_CLASSIFICATION	0.9999062773253037	WITHOUT_CLASSIFICATION	9.372267469634428E-5	IMPLEMENTATION
// can be overridden to be informed when objects are removed	WITHOUT_CLASSIFICATION	0.9999513165104061	WITHOUT_CLASSIFICATION	4.868348959395203E-5	IMPLEMENTATION
// we reached the end of a list	WITHOUT_CLASSIFICATION	0.9999087708025814	WITHOUT_CLASSIFICATION	9.122919741857895E-5	IMPLEMENTATION
// goto next bucket	WITHOUT_CLASSIFICATION	0.9997873571683289	WITHOUT_CLASSIFICATION	2.1264283167113482E-4	IMPLEMENTATION
// we reached the end	WITHOUT_CLASSIFICATION	0.9998979721291885	WITHOUT_CLASSIFICATION	1.0202787081146114E-4	IMPLEMENTATION
// entry is the first element of this bucket	WITHOUT_CLASSIFICATION	0.9999638656930883	WITHOUT_CLASSIFICATION	3.6134306911767685E-5	IMPLEMENTATION
// states	WITHOUT_CLASSIFICATION	0.9959742368421196	WITHOUT_CLASSIFICATION	0.00402576315788037	IMPLEMENTATION
// remove leading whitespace (includes _ for lax) // get sign, if any	WITHOUT_CLASSIFICATION	0.9999816512388979	WITHOUT_CLASSIFICATION	1.8348761102058064E-5	IMPLEMENTATION
// optimistic pass - calculate value as digits are processed // digits - lax rules // decimal digits - lax rules // exponent sign/digits - lax rules // digits - strict rules // decimal digits - strict rules // exponent sign/digits - strict rules // complete calculation if possible	WITHOUT_CLASSIFICATION	0.9999501985601646	WITHOUT_CLASSIFICATION	4.980143983529615E-5	IMPLEMENTATION
// fields used for direct (optimistic) calculation // number of significant digits, updated as parsed // zeroes that may go to significand or exponent // offset of decimal pt from start (-1 -> no decimal) // significand, updated as parsed // exponent, updated as parsed	WITHOUT_CLASSIFICATION	0.999987868451565	WITHOUT_CLASSIFICATION	1.2131548435070711E-5	IMPLEMENTATION
// drop through for sign	WITHOUT_CLASSIFICATION	0.9998746855203685	WITHOUT_CLASSIFICATION	1.2531447963150092E-4	IMPLEMENTATION
// switch // will use this if we have to go back the slow way	WITHOUT_CLASSIFICATION	0.9999582331347752	WITHOUT_CLASSIFICATION	4.176686522486129E-5	IMPLEMENTATION
// drop through for non-strict digits	WITHOUT_CLASSIFICATION	0.9998771687726832	WITHOUT_CLASSIFICATION	1.2283122731684984E-4	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999283900810684	WITHOUT_CLASSIFICATION	7.160991893163013E-5	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999929471908414	WITHOUT_CLASSIFICATION	7.052809158550768E-6	IMPLEMENTATION
// no digits, go calc (will return +/- 0.0 for lax)	WITHOUT_CLASSIFICATION	0.9999226761254895	WITHOUT_CLASSIFICATION	7.732387451057532E-5	IMPLEMENTATION
// ignore leading zeroes	WITHOUT_CLASSIFICATION	0.9999860902093181	WITHOUT_CLASSIFICATION	1.3909790681898622E-5	IMPLEMENTATION
// just save a count of zeroes for now; if no digit // ends up following them, they'll be applied to the // exponent rather than the significand (and our max // length for optimistic calc).	WITHOUT_CLASSIFICATION	0.9999843974630984	WITHOUT_CLASSIFICATION	1.5602536901610408E-5	IMPLEMENTATION
// ok, got a non-zero, have to own up to our horded zeroes	WITHOUT_CLASSIFICATION	0.9998939540694547	WITHOUT_CLASSIFICATION	1.0604593054530873E-4	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9998279781927543	WITHOUT_CLASSIFICATION	1.720218072457648E-4	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9998279781927543	WITHOUT_CLASSIFICATION	1.720218072457648E-4	IMPLEMENTATION
// oh, well, it was worth a try. go let // Double/FloatingDecimal handle it 	WITHOUT_CLASSIFICATION	0.999787382010424	WITHOUT_CLASSIFICATION	2.1261798957584012E-4	IMPLEMENTATION
// ignore // switch	WITHOUT_CLASSIFICATION	0.999989190164048	WITHOUT_CLASSIFICATION	1.0809835951971825E-5	IMPLEMENTATION
// ignore // switch	WITHOUT_CLASSIFICATION	0.999989190164048	WITHOUT_CLASSIFICATION	1.0809835951971825E-5	IMPLEMENTATION
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999415117457083	WITHOUT_CLASSIFICATION	5.848825429177067E-5	IMPLEMENTATION
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999415117457083	WITHOUT_CLASSIFICATION	5.848825429177067E-5	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9998945695290679	WITHOUT_CLASSIFICATION	1.0543047093213378E-4	IMPLEMENTATION
// first non_underscore char must be digit	WITHOUT_CLASSIFICATION	0.999917199770427	WITHOUT_CLASSIFICATION	8.280022957304675E-5	IMPLEMENTATION
// no dec digits, end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.999913379135004	WITHOUT_CLASSIFICATION	8.66208649959506E-5	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.9998834631773289	WITHOUT_CLASSIFICATION	1.1653682267099046E-4	IMPLEMENTATION
// difficult case, send to Double/FloatingDecimal	WITHOUT_CLASSIFICATION	0.9998569005523291	WITHOUT_CLASSIFICATION	1.4309944767089227E-4	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9952856502833631	WITHOUT_CLASSIFICATION	0.004714349716636949	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9952856502833631	WITHOUT_CLASSIFICATION	0.004714349716636949	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999283900810684	WITHOUT_CLASSIFICATION	7.160991893163013E-5	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999283900810684	WITHOUT_CLASSIFICATION	7.160991893163013E-5	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999283900810684	WITHOUT_CLASSIFICATION	7.160991893163013E-5	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999929471908414	WITHOUT_CLASSIFICATION	7.052809158550768E-6	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9998279781927543	WITHOUT_CLASSIFICATION	1.720218072457648E-4	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9998279781927543	WITHOUT_CLASSIFICATION	1.720218072457648E-4	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9998279781927543	WITHOUT_CLASSIFICATION	1.720218072457648E-4	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9998945695290679	WITHOUT_CLASSIFICATION	1.0543047093213378E-4	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9998945695290679	WITHOUT_CLASSIFICATION	1.0543047093213378E-4	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9998945695290679	WITHOUT_CLASSIFICATION	1.0543047093213378E-4	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.9998834631773289	WITHOUT_CLASSIFICATION	1.1653682267099046E-4	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.9998834631773289	WITHOUT_CLASSIFICATION	1.1653682267099046E-4	IMPLEMENTATION
// lax (str.to_f) allows underscores between e/E and sign	WITHOUT_CLASSIFICATION	0.9998609238347949	WITHOUT_CLASSIFICATION	1.3907616520517047E-4	IMPLEMENTATION
// switch // for // no exponent, so drop through for calculation	WITHOUT_CLASSIFICATION	0.9999622558987438	WITHOUT_CLASSIFICATION	3.774410125621355E-5	IMPLEMENTATION
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999471454408427	WITHOUT_CLASSIFICATION	5.285455915726769E-5	IMPLEMENTATION
// TODO: it's not clear to me why, in FloatingDecimal, the // "slop" calculation performed above for positive exponents // isn't used for negative exponents as well. Will find out...	WITHOUT_CLASSIFICATION	0.8991894067867958	WITHOUT_CLASSIFICATION	0.10081059321320421	IMPLEMENTATION
// no digits, error	WITHOUT_CLASSIFICATION	0.9998489575514039	WITHOUT_CLASSIFICATION	1.510424485961303E-4	IMPLEMENTATION
// too big for us	WITHOUT_CLASSIFICATION	0.9998252155273943	WITHOUT_CLASSIFICATION	1.7478447260560364E-4	IMPLEMENTATION
// too big for us	WITHOUT_CLASSIFICATION	0.9998252155273943	WITHOUT_CLASSIFICATION	1.7478447260560364E-4	IMPLEMENTATION
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.999925695799272	WITHOUT_CLASSIFICATION	7.430420072789597E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9957816756494063	WITHOUT_CLASSIFICATION	0.0042183243505936495	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9957816756494063	WITHOUT_CLASSIFICATION	0.0042183243505936495	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9957816756494063	WITHOUT_CLASSIFICATION	0.0042183243505936495	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9957816756494063	WITHOUT_CLASSIFICATION	0.0042183243505936495	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9957816756494063	WITHOUT_CLASSIFICATION	0.0042183243505936495	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999578154472673	WITHOUT_CLASSIFICATION	4.2184552732751334E-5	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999578154472673	WITHOUT_CLASSIFICATION	4.2184552732751334E-5	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999578154472673	WITHOUT_CLASSIFICATION	4.2184552732751334E-5	IMPLEMENTATION
// first char must be digit	WITHOUT_CLASSIFICATION	0.999915004657153	WITHOUT_CLASSIFICATION	8.499534284703284E-5	IMPLEMENTATION
// no dec digits after '.', error for strict	WITHOUT_CLASSIFICATION	0.9999156902633356	WITHOUT_CLASSIFICATION	8.430973666440658E-5	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999929471908414	WITHOUT_CLASSIFICATION	7.052809158550768E-6	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9998945695290679	WITHOUT_CLASSIFICATION	1.0543047093213378E-4	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9998945695290679	WITHOUT_CLASSIFICATION	1.0543047093213378E-4	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9957816756494063	WITHOUT_CLASSIFICATION	0.0042183243505936495	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9957816756494063	WITHOUT_CLASSIFICATION	0.0042183243505936495	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999578154472673	WITHOUT_CLASSIFICATION	4.2184552732751334E-5	IMPLEMENTATION
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.999925695799272	WITHOUT_CLASSIFICATION	7.430420072789597E-5	IMPLEMENTATION
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9998804839287213	WITHOUT_CLASSIFICATION	1.1951607127870042E-4	IMPLEMENTATION
// switch //while	WITHOUT_CLASSIFICATION	0.999910520440743	WITHOUT_CLASSIFICATION	8.947955925696724E-5	IMPLEMENTATION
/*     * All the positive powers of 10 that can be     * represented exactly in double/float.     * (From sun.misc.FloatingDecimal.java)     */	WITHOUT_CLASSIFICATION	0.9999774173054733	WITHOUT_CLASSIFICATION	2.258269452673932E-5	IMPLEMENTATION
// Zlib behavior: negative win_bits means no header and no checksum.	WITHOUT_CLASSIFICATION	0.9999312592725896	WITHOUT_CLASSIFICATION	6.874072741037786E-5	IMPLEMENTATION
// rb_enc_mbclen	WITHOUT_CLASSIFICATION	0.999779971725086	WITHOUT_CLASSIFICATION	2.2002827491392825E-4	IMPLEMENTATION
// rb_enc_precise_mbclen	WITHOUT_CLASSIFICATION	0.9998277679608599	WITHOUT_CLASSIFICATION	1.722320391400592E-4	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9997799923283781	WITHOUT_CLASSIFICATION	2.200076716218906E-4	IMPLEMENTATION
// arg cannot be negative	WITHOUT_CLASSIFICATION	0.9998985928591297	WITHOUT_CLASSIFICATION	1.0140714087037678E-4	IMPLEMENTATION
// NoFunctionalitySignalFacade	WITHOUT_CLASSIFICATION	0.999876183912124	WITHOUT_CLASSIFICATION	1.2381608787611048E-4	IMPLEMENTATION
// Change visibility so others can see it	WITHOUT_CLASSIFICATION	0.9999201141149482	WITHOUT_CLASSIFICATION	7.988588505182103E-5	IMPLEMENTATION
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9998997199926468	WITHOUT_CLASSIFICATION	1.0028000735314519E-4	IMPLEMENTATION
// strip off "_dot_rb" for .rb files	WITHOUT_CLASSIFICATION	0.9998873556685635	WITHOUT_CLASSIFICATION	1.1264433143646225E-4	IMPLEMENTATION
// Makes sure the key is not already in the hashtable.	WITHOUT_CLASSIFICATION	0.9999805402722207	WITHOUT_CLASSIFICATION	1.9459727779284308E-5	IMPLEMENTATION
// Rehash the table if the threshold is exceeded	WITHOUT_CLASSIFICATION	0.9999559163890441	WITHOUT_CLASSIFICATION	4.408361095582491E-5	IMPLEMENTATION
// Creates the new entry.	WITHOUT_CLASSIFICATION	0.999948103642018	WITHOUT_CLASSIFICATION	5.189635798190694E-5	IMPLEMENTATION
// next entry to return // current slot // current entry	WITHOUT_CLASSIFICATION	0.9999579328792447	WITHOUT_CLASSIFICATION	4.206712075524058E-5	IMPLEMENTATION
// advance to first entry	WITHOUT_CLASSIFICATION	0.9998804206270177	WITHOUT_CLASSIFICATION	1.195793729823978E-4	IMPLEMENTATION
// The reason why we need the stream is to be able to invoke available() on it. // STDIN in Java is non-interruptible, non-selectable, and attempt to read // on such stream might lead to thread being blocked without *any* way to unblock it. // That's where available() comes it, so at least we could check whether // anything is available to be read without blocking.	WITHOUT_CLASSIFICATION	0.999995358023468	WITHOUT_CLASSIFICATION	4.641976532041158E-6	IMPLEMENTATION
/*package-protected*/	WITHOUT_CLASSIFICATION	0.9998821237957187	WITHOUT_CLASSIFICATION	1.178762042812524E-4	IMPLEMENTATION
// raw file URL, just open directly	WITHOUT_CLASSIFICATION	0.9998847679177714	WITHOUT_CLASSIFICATION	1.1523208222863541E-4	IMPLEMENTATION
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9998976313660869	WITHOUT_CLASSIFICATION	1.0236863391306496E-4	IMPLEMENTATION
// if refcount is at or below zero, we're no longer valid	WITHOUT_CLASSIFICATION	0.999921023890751	WITHOUT_CLASSIFICATION	7.89761092489638E-5	IMPLEMENTATION
// if channel is already closed, we're no longer valid	WITHOUT_CLASSIFICATION	0.999950154217939	WITHOUT_CLASSIFICATION	4.984578206104233E-5	IMPLEMENTATION
// otherwise decrement and possibly close as normal	WITHOUT_CLASSIFICATION	0.9999124446614461	WITHOUT_CLASSIFICATION	8.75553385538113E-5	IMPLEMENTATION
// r/w buffer // are we reading or writing?	WITHOUT_CLASSIFICATION	0.9998657929725301	WITHOUT_CLASSIFICATION	1.3420702746982309E-4	IMPLEMENTATION
// this constructor is used by fdopen, so we don't increment descriptor ref count	WITHOUT_CLASSIFICATION	0.9999660116459667	WITHOUT_CLASSIFICATION	3.398835403330141E-5	IMPLEMENTATION
// unread back	WITHOUT_CLASSIFICATION	0.9997850940201872	WITHOUT_CLASSIFICATION	2.1490597981285936E-4	IMPLEMENTATION
// iterate over remainder of buffer until we find a match	WITHOUT_CLASSIFICATION	0.9999329251368808	WITHOUT_CLASSIFICATION	6.707486311923131E-5	IMPLEMENTATION
// terminate and advance buffer when we find our char	WITHOUT_CLASSIFICATION	0.9998814194938235	WITHOUT_CLASSIFICATION	1.1858050617645097E-4	IMPLEMENTATION
// no match, append remainder of buffer and continue with next block	WITHOUT_CLASSIFICATION	0.999955479939669	WITHOUT_CLASSIFICATION	4.452006033094716E-5	IMPLEMENTATION
// found a match above, check if remaining separator characters match, appending as we go	WITHOUT_CLASSIFICATION	0.9999838633992362	WITHOUT_CLASSIFICATION	1.6136600763743422E-5	IMPLEMENTATION
// // Check file size - special files in /proc have zero size and need to be // handled by the generic read path. //	WITHOUT_CLASSIFICATION	0.9999559024260299	WITHOUT_CLASSIFICATION	4.409757397008022E-5	IMPLEMENTATION
// // Copy any buffered data (including ungetc byte) //	WITHOUT_CLASSIFICATION	0.9998889391779798	WITHOUT_CLASSIFICATION	1.110608220202408E-4	IMPLEMENTATION
// // Now read unbuffered directly from the file //	WITHOUT_CLASSIFICATION	0.9999600059566082	WITHOUT_CLASSIFICATION	3.9994043391737716E-5	IMPLEMENTATION
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9998804839287213	WITHOUT_CLASSIFICATION	1.1951607127870042E-4	IMPLEMENTATION
// // Need to clamp source (buffer) size to avoid overrun //	WITHOUT_CLASSIFICATION	0.9998713839939692	WITHOUT_CLASSIFICATION	1.2861600603067207E-4	IMPLEMENTATION
// not closing from finalize	WITHOUT_CLASSIFICATION	0.9996890464989837	WITHOUT_CLASSIFICATION	3.109535010162229E-4	IMPLEMENTATION
// clear runtime so it doesn't get stuck in memory (JRUBY-2933)	WITHOUT_CLASSIFICATION	0.9999558605377873	WITHOUT_CLASSIFICATION	4.413946221271179E-5	IMPLEMENTATION
// silence	WITHOUT_CLASSIFICATION	0.9953983145081462	WITHOUT_CLASSIFICATION	0.004601685491853851	IMPLEMENTATION
// silence	WITHOUT_CLASSIFICATION	0.9953983145081462	WITHOUT_CLASSIFICATION	0.004601685491853851	IMPLEMENTATION
// Don't bother	WITHOUT_CLASSIFICATION	0.999773692823154	WITHOUT_CLASSIFICATION	2.2630717684589543E-4	IMPLEMENTATION
// Don't bother	WITHOUT_CLASSIFICATION	0.999773692823154	WITHOUT_CLASSIFICATION	2.2630717684589543E-4	IMPLEMENTATION
// For Sockets, only write as much as will fit.	WITHOUT_CLASSIFICATION	0.999883992266372	WITHOUT_CLASSIFICATION	1.1600773362784126E-4	IMPLEMENTATION
// Correct position for read / write buffering (we could invalidate, but expensive)	WITHOUT_CLASSIFICATION	0.999947071466383	WITHOUT_CLASSIFICATION	5.292853361704355E-5	IMPLEMENTATION
// Adjust for buffered data	WITHOUT_CLASSIFICATION	0.9998558283229281	WITHOUT_CLASSIFICATION	1.4417167707198923E-4	IMPLEMENTATION
// for SEEK_CUR, need to adjust for buffered data	WITHOUT_CLASSIFICATION	0.9998435896268099	WITHOUT_CLASSIFICATION	1.564103731901548E-4	IMPLEMENTATION
// libc flushes writes on any read from the actual file, so we flush here	WITHOUT_CLASSIFICATION	0.9999433431746692	WITHOUT_CLASSIFICATION	5.6656825330769094E-5	IMPLEMENTATION
// we have read ahead, and need to back up	WITHOUT_CLASSIFICATION	0.9998462929006898	WITHOUT_CLASSIFICATION	1.5370709931025574E-4	IMPLEMENTATION
// 128K seems to be the minimum at which the stat+seek is faster than reallocation	WITHOUT_CLASSIFICATION	0.9999591872358685	WITHOUT_CLASSIFICATION	4.081276413139797E-5	IMPLEMENTATION
// // limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations //	WITHOUT_CLASSIFICATION	0.9999401043555667	WITHOUT_CLASSIFICATION	5.98956444333781E-5	IMPLEMENTATION
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999309506458531	WITHOUT_CLASSIFICATION	6.904935414694552E-5	IMPLEMENTATION
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999603909584848	WITHOUT_CLASSIFICATION	3.960904151521087E-5	IMPLEMENTATION
// // Avoid double-copying for reads that are larger than the buffer size //	WITHOUT_CLASSIFICATION	0.9999505467322193	WITHOUT_CLASSIFICATION	4.9453267780610513E-5	IMPLEMENTATION
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999398620639323	WITHOUT_CLASSIFICATION	6.013793606780481E-5	IMPLEMENTATION
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999398620639323	WITHOUT_CLASSIFICATION	6.013793606780481E-5	IMPLEMENTATION
// // Avoid double-copying for reads that are larger than the buffer size, or // the destination is a direct buffer. //	WITHOUT_CLASSIFICATION	0.9999832875765895	WITHOUT_CLASSIFICATION	1.6712423410520497E-5	IMPLEMENTATION
// // We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating // a huge temporary native buffer, when doing reads into a heap buffer // If the dst buffer is direct, then no need to limit. //	WITHOUT_CLASSIFICATION	0.9999112449235191	WITHOUT_CLASSIFICATION	8.875507648087136E-5	IMPLEMENTATION
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999309749760631	WITHOUT_CLASSIFICATION	6.902502393691502E-5	IMPLEMENTATION
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999309749760631	WITHOUT_CLASSIFICATION	6.902502393691502E-5	IMPLEMENTATION
// Doesn't fit in buffer. Write immediately. // ensure nothing left to write	WITHOUT_CLASSIFICATION	0.9999770493098467	WITHOUT_CLASSIFICATION	2.2950690153384463E-5	IMPLEMENTATION
// truncate can't lengthen files, so we save position, seek/write, and go back	WITHOUT_CLASSIFICATION	0.9999554610348309	WITHOUT_CLASSIFICATION	4.453896516909772E-5	IMPLEMENTATION
// how far ahead we are when reading	WITHOUT_CLASSIFICATION	0.9998767751449681	WITHOUT_CLASSIFICATION	1.232248550319008E-4	IMPLEMENTATION
// if the read buffer is ahead, back up	WITHOUT_CLASSIFICATION	0.9999434063918465	WITHOUT_CLASSIFICATION	5.659360815354349E-5	IMPLEMENTATION
// close without removing from finalizers	WITHOUT_CLASSIFICATION	0.9999231738700773	WITHOUT_CLASSIFICATION	7.682612992262699E-5	IMPLEMENTATION
// putting a bit back, so we're not at EOF anymore	WITHOUT_CLASSIFICATION	0.9999490654407439	WITHOUT_CLASSIFICATION	5.0934559255955243E-5	IMPLEMENTATION
// save the ungot	WITHOUT_CLASSIFICATION	0.9999080119197815	WITHOUT_CLASSIFICATION	9.198808021841637E-5	IMPLEMENTATION
// otherwise, we try an unbuffered read to get whatever's available	WITHOUT_CLASSIFICATION	0.9999193217488737	WITHOUT_CLASSIFICATION	8.067825112630251E-5	IMPLEMENTATION
// ignore this; select() will set the correct mode when it is finished	WITHOUT_CLASSIFICATION	0.9999944286131515	WITHOUT_CLASSIFICATION	5.571386848506664E-6	IMPLEMENTATION
// flush first	WITHOUT_CLASSIFICATION	0.9998078283772932	WITHOUT_CLASSIFICATION	1.9217162270679014E-4	IMPLEMENTATION
// // Wake up any channels that became unblocked //	WITHOUT_CLASSIFICATION	0.9998782597723307	WITHOUT_CLASSIFICATION	1.2174022766930092E-4	IMPLEMENTATION
// // Register any new blocking I/O requests //	WITHOUT_CLASSIFICATION	0.9999020286440906	WITHOUT_CLASSIFICATION	9.797135590929249E-5	IMPLEMENTATION
// Now clear out any previously selected channels	WITHOUT_CLASSIFICATION	0.9999700609896973	WITHOUT_CLASSIFICATION	2.9939010302634375E-5	IMPLEMENTATION
// // Wait for I/O on any channel //	WITHOUT_CLASSIFICATION	0.9998865669751787	WITHOUT_CLASSIFICATION	1.1343302482132087E-4	IMPLEMENTATION
// Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'	WITHOUT_CLASSIFICATION	0.9999705820367264	WITHOUT_CLASSIFICATION	2.941796327358064E-5	IMPLEMENTATION
// Java requires "w" for creating a file that does not exist	WITHOUT_CLASSIFICATION	0.999923444323811	WITHOUT_CLASSIFICATION	7.655567618904122E-5	IMPLEMENTATION
// seek to force underlying buffer to flush	WITHOUT_CLASSIFICATION	0.9998621274921183	WITHOUT_CLASSIFICATION	1.3787250788164693E-4	IMPLEMENTATION
// seek to force read buffer to invalidate	WITHOUT_CLASSIFICATION	0.9998505513990201	WITHOUT_CLASSIFICATION	1.4944860097981607E-4	IMPLEMENTATION
/*        result = eval("arr = Array::['c', 200]; p arr");        assertEquals("[\"c\", 200]", result);        result = eval("arr = Array.['d', 200]; p arr");        assertEquals("[\"d\", 200]", result);        */	WITHOUT_CLASSIFICATION	0.9999852057301316	WITHOUT_CLASSIFICATION	1.479426986842065E-5	IMPLEMENTATION
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999492533573774	WITHOUT_CLASSIFICATION	5.0746642622526744E-5	IMPLEMENTATION
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.8286120971370047	WITHOUT_CLASSIFICATION	0.1713879028629954	IMPLEMENTATION
// make sure the pipe stream is set to null	WITHOUT_CLASSIFICATION	0.999966592333211	WITHOUT_CLASSIFICATION	3.340766678912534E-5	IMPLEMENTATION
// make sure the main stream is set to null	WITHOUT_CLASSIFICATION	0.999959418649338	WITHOUT_CLASSIFICATION	4.058135066194566E-5	IMPLEMENTATION
// first try our custom-generated Unsafe	WITHOUT_CLASSIFICATION	0.9997018578060812	WITHOUT_CLASSIFICATION	2.981421939188266E-4	IMPLEMENTATION
// then try Sun's Unsafe	WITHOUT_CLASSIFICATION	0.9998751334663952	WITHOUT_CLASSIFICATION	1.2486653360485497E-4	IMPLEMENTATION
// if we get here, the class and field exist; construct our Unsafe impl // that calls it directly	WITHOUT_CLASSIFICATION	0.9999709399916136	WITHOUT_CLASSIFICATION	2.9060008386531395E-5	IMPLEMENTATION
// else leave it null	WITHOUT_CLASSIFICATION	0.9998538408492466	WITHOUT_CLASSIFICATION	1.4615915075344484E-4	IMPLEMENTATION
// TypeMatcher	WITHOUT_CLASSIFICATION	0.9997875065264641	WITHOUT_CLASSIFICATION	2.1249347353581618E-4	IMPLEMENTATION
// This is now needed, since module Java // isn't in by default	WITHOUT_CLASSIFICATION	0.999948136331443	WITHOUT_CLASSIFICATION	5.1863668557081205E-5	IMPLEMENTATION
// Iterate over the RubyHash keySet, simultaneously iterating over the values()	WITHOUT_CLASSIFICATION	0.9999393432497219	WITHOUT_CLASSIFICATION	6.0656750278095636E-5	IMPLEMENTATION
// Get the value from the map via the key	WITHOUT_CLASSIFICATION	0.9999810913887911	WITHOUT_CLASSIFICATION	1.8908611208889245E-5	IMPLEMENTATION
// Get the value from the map via the values iterator	WITHOUT_CLASSIFICATION	0.9999862571109853	WITHOUT_CLASSIFICATION	1.3742889014594644E-5	IMPLEMENTATION
// Check the 2 values obtained via different means	WITHOUT_CLASSIFICATION	0.9999409621688443	WITHOUT_CLASSIFICATION	5.903783115568324E-5	IMPLEMENTATION
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999382546012916	WITHOUT_CLASSIFICATION	6.174539870832353E-5	IMPLEMENTATION
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999382546012916	WITHOUT_CLASSIFICATION	6.174539870832353E-5	IMPLEMENTATION
// Check the entry.setValue values come back out ok	WITHOUT_CLASSIFICATION	0.9999509103398582	WITHOUT_CLASSIFICATION	4.908966014183201E-5	IMPLEMENTATION
// If we're running from within an IDE we may not have // the .rb files in our classpath. Try to find them // in the filesystem instead.	WITHOUT_CLASSIFICATION	0.9999883280810722	WITHOUT_CLASSIFICATION	1.1671918927867162E-5	IMPLEMENTATION
//assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); //assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));	WITHOUT_CLASSIFICATION	0.9998689774084771	WITHOUT_CLASSIFICATION	1.3102259152274835E-4	IMPLEMENTATION
// Init	WITHOUT_CLASSIFICATION	0.9958725301353654	WITHOUT_CLASSIFICATION	0.004127469864634597	IMPLEMENTATION
// Block	WITHOUT_CLASSIFICATION	0.9954191649727997	WITHOUT_CLASSIFICATION	0.004580835027200353	IMPLEMENTATION
// Copy constructor	WITHOUT_CLASSIFICATION	0.9998677080984316	WITHOUT_CLASSIFICATION	1.322919015684426E-4	IMPLEMENTATION
// presumably this require should fail	WITHOUT_CLASSIFICATION	0.9997660377243199	WITHOUT_CLASSIFICATION	2.339622756800086E-4	IMPLEMENTATION
// JRUBY-646 // presumably this require should fail	WITHOUT_CLASSIFICATION	0.9997583816383212	WITHOUT_CLASSIFICATION	2.4161836167871308E-4	IMPLEMENTATION
// Test that requiring a normal Java class raises an error (JRUBY-3214	WITHOUT_CLASSIFICATION	0.9999562835071983	WITHOUT_CLASSIFICATION	4.371649280167524E-5	IMPLEMENTATION
// ok	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
// Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods // from Ruby so they are not really unused).	WITHOUT_CLASSIFICATION	0.9999555412574975	WITHOUT_CLASSIFICATION	4.445874250237486E-5	IMPLEMENTATION
//load should work several times in a row	WITHOUT_CLASSIFICATION	0.9997973735088269	WITHOUT_CLASSIFICATION	2.0262649117319188E-4	IMPLEMENTATION
//reset the $loadTestvar	WITHOUT_CLASSIFICATION	0.9998688982779306	WITHOUT_CLASSIFICATION	1.311017220695086E-4	IMPLEMENTATION
//call throwException via JRuby	WITHOUT_CLASSIFICATION	0.9999171088018527	WITHOUT_CLASSIFICATION	8.289119814727585E-5	IMPLEMENTATION
// Notify the calling thread that we're about to go to sleep the first time	WITHOUT_CLASSIFICATION	0.9999718306990901	WITHOUT_CLASSIFICATION	2.816930090991305E-5	IMPLEMENTATION
// wait for the go signal	WITHOUT_CLASSIFICATION	0.999901695710946	WITHOUT_CLASSIFICATION	9.83042890539741E-5	IMPLEMENTATION
// run ten separate calls into Ruby, with delay and explicit GC	WITHOUT_CLASSIFICATION	0.9999144229718743	WITHOUT_CLASSIFICATION	8.557702812574427E-5	IMPLEMENTATION
// wait until thread has initialized	WITHOUT_CLASSIFICATION	0.9999294151249222	WITHOUT_CLASSIFICATION	7.05848750779324E-5	IMPLEMENTATION
// notify thread to proceed	WITHOUT_CLASSIFICATION	0.999873812271634	WITHOUT_CLASSIFICATION	1.261877283660064E-4	IMPLEMENTATION
// wait until thread has completed	WITHOUT_CLASSIFICATION	0.9997398036781288	WITHOUT_CLASSIFICATION	2.601963218712638E-4	IMPLEMENTATION
// we do preand post load outside the "body" versions to pre-prepare // and pre-push the dynamic scope we need for lastline	WITHOUT_CLASSIFICATION	0.9999220567612603	WITHOUT_CLASSIFICATION	7.794323873968158E-5	IMPLEMENTATION
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999146899470377	WITHOUT_CLASSIFICATION	8.531005296226762E-5	IMPLEMENTATION
// MRI behavior: raise ArgumentError for 'unknown command' before // checking number of args.	WITHOUT_CLASSIFICATION	0.9999666236545717	WITHOUT_CLASSIFICATION	3.337634542834148E-5	IMPLEMENTATION
// if any exceptions were raised, we fail	WITHOUT_CLASSIFICATION	0.9999264990938997	WITHOUT_CLASSIFICATION	7.350090610021633E-5	IMPLEMENTATION
// there should only be one more thread in thread group than before we started	WITHOUT_CLASSIFICATION	0.9999349416473036	WITHOUT_CLASSIFICATION	6.505835269644182E-5	IMPLEMENTATION
// construct a new cache with thread's classloader and no limit	WITHOUT_CLASSIFICATION	0.9999458375918637	WITHOUT_CLASSIFICATION	5.416240813629655E-5	IMPLEMENTATION
//        Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); //        Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();	WITHOUT_CLASSIFICATION	0.9999768913244323	WITHOUT_CLASSIFICATION	2.3108675567720722E-5	IMPLEMENTATION
//        assertSame(script1, script2);	WITHOUT_CLASSIFICATION	0.9999577665480236	WITHOUT_CLASSIFICATION	4.2233451976377664E-5	IMPLEMENTATION
// void methods should work	WITHOUT_CLASSIFICATION	0.9997926718235697	WITHOUT_CLASSIFICATION	2.0732817643032744E-4	IMPLEMENTATION
// methods with required = 4 or higher should bind and be callable using reflection // JRUBY-3649	WITHOUT_CLASSIFICATION	0.9999165840668219	WITHOUT_CLASSIFICATION	8.341593317807939E-5	IMPLEMENTATION
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999957291931872	WITHOUT_CLASSIFICATION	4.270806812855067E-6	IMPLEMENTATION
// Ensure we have a new interpreter for each test. Previous we were using the //  same interpreter which caused problems as soon as one test failed.	WITHOUT_CLASSIFICATION	0.9999766017662932	WITHOUT_CLASSIFICATION	2.339823370676159E-5	IMPLEMENTATION
// Without a flush Ant will miss some of our output	WITHOUT_CLASSIFICATION	0.9998787712026589	WITHOUT_CLASSIFICATION	1.2122879734115835E-4	IMPLEMENTATION
// assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());	WITHOUT_CLASSIFICATION	0.9998969895421528	WITHOUT_CLASSIFICATION	1.0301045784715737E-4	IMPLEMENTATION
//        int n = 10;	WITHOUT_CLASSIFICATION	0.999938527478895	WITHOUT_CLASSIFICATION	6.147252110501482E-5	IMPLEMENTATION
// there might be more test classes in a single file, so we iterate over them	WITHOUT_CLASSIFICATION	0.9999657116565982	WITHOUT_CLASSIFICATION	3.428834340179007E-5	IMPLEMENTATION
//No ClassCastException!	WITHOUT_CLASSIFICATION	0.9999134243289461	WITHOUT_CLASSIFICATION	8.657567105391749E-5	IMPLEMENTATION
// value equality	WITHOUT_CLASSIFICATION	0.9998419362893141	WITHOUT_CLASSIFICATION	1.5806371068587252E-4	IMPLEMENTATION
// identity equality	WITHOUT_CLASSIFICATION	0.9998464306541688	WITHOUT_CLASSIFICATION	1.5356934583126734E-4	IMPLEMENTATION
// bench straight-up integer fib(30)	WITHOUT_CLASSIFICATION	0.9998483374206032	WITHOUT_CLASSIFICATION	1.516625793968703E-4	IMPLEMENTATION
// bench Integer fib	WITHOUT_CLASSIFICATION	0.9997808686636613	WITHOUT_CLASSIFICATION	2.1913133633869527E-4	IMPLEMENTATION
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9998274401866784	WITHOUT_CLASSIFICATION	1.7255981332161521E-4	IMPLEMENTATION
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9998274401866784	WITHOUT_CLASSIFICATION	1.7255981332161521E-4	IMPLEMENTATION
// bench fixnum-boxed fib	WITHOUT_CLASSIFICATION	0.9998269084618239	WITHOUT_CLASSIFICATION	1.7309153817620973E-4	IMPLEMENTATION
// bench straight-up long fib(30)	WITHOUT_CLASSIFICATION	0.999842861868195	WITHOUT_CLASSIFICATION	1.5713813180498912E-4	IMPLEMENTATION
// bench Long fib	WITHOUT_CLASSIFICATION	0.9997805702868128	WITHOUT_CLASSIFICATION	2.1942971318724853E-4	IMPLEMENTATION
// skip this one, probably no 'ls' (windows)	WITHOUT_CLASSIFICATION	0.9999300712884192	WITHOUT_CLASSIFICATION	6.992871158085052E-5	IMPLEMENTATION
// start off with a neutral parent	WITHOUT_CLASSIFICATION	0.9999339985207367	WITHOUT_CLASSIFICATION	6.600147926325665E-5	IMPLEMENTATION
/*            public class Hello {                public static String getMessage() {                    return ".....";                }            }            */	WITHOUT_CLASSIFICATION	0.999998713190078	WITHOUT_CLASSIFICATION	1.286809921932882E-6	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999265582696824	WITHOUT_CLASSIFICATION	7.344173031759369E-5	IMPLEMENTATION
// Note: We can't use file.exists() to check whether the symlink // exists or not, because that method returns false for existing // but broken symlink. So, we try without the existence check, // but in the try-catch block. // MRI behavior: symlink? on broken symlink should return true.	WITHOUT_CLASSIFICATION	0.9999927138191408	WITHOUT_CLASSIFICATION	7.286180859317952E-6	IMPLEMENTATION
// We are creating a new IO object that shares the same // IOHandler (and fileno).	WITHOUT_CLASSIFICATION	0.9999265792622468	WITHOUT_CLASSIFICATION	7.342073775320232E-5	IMPLEMENTATION
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999023608819432	WITHOUT_CLASSIFICATION	9.76391180568053E-5	IMPLEMENTATION
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9998938600022981	WITHOUT_CLASSIFICATION	1.0613999770192854E-4	IMPLEMENTATION
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999635283876597	WITHOUT_CLASSIFICATION	3.647161234030862E-5	IMPLEMENTATION
// Translate "x || y" --> "x = (is_true(x) ? x : y)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, true, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.999926960647147	WITHOUT_CLASSIFICATION	7.30393528530074E-5	IMPLEMENTATION
// // Force the client socket to be blocking //	WITHOUT_CLASSIFICATION	0.9999116719517239	WITHOUT_CLASSIFICATION	8.832804827599049E-5	IMPLEMENTATION
// Additional context surrounding tokens that both the lexer and // grammar use.	WITHOUT_CLASSIFICATION	0.9999264465631703	WITHOUT_CLASSIFICATION	7.355343682970734E-5	IMPLEMENTATION
// Enebo:  c can never be antrhign but '.' // Why did I put this here?	WITHOUT_CLASSIFICATION	0.9997535322073006	WITHOUT_CLASSIFICATION	2.4646779269946336E-4	IMPLEMENTATION
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.999977532808929	WITHOUT_CLASSIFICATION	2.2467191071001194E-5	IMPLEMENTATION
//[C,C] //[C, boolean]	WITHOUT_CLASSIFICATION	0.9998783802521081	WITHOUT_CLASSIFICATION	1.2161974789191724E-4	IMPLEMENTATION
// Label for the start of the closure (used to implement redo) // Label for the end of the closure (used to implement retry)	WITHOUT_CLASSIFICATION	0.998726070119586	WITHOUT_CLASSIFICATION	0.0012739298804139085	IMPLEMENTATION
// ignore; job was cancelled // FIXME: is this ok?	WITHOUT_CLASSIFICATION	0.9999820886469306	WITHOUT_CLASSIFICATION	1.791135306938195E-5	IMPLEMENTATION
//                    // check arity //                    checkArity(mv, scope);	WITHOUT_CLASSIFICATION	0.9999521756137772	WITHOUT_CLASSIFICATION	4.782438622276802E-5	IMPLEMENTATION
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.999917143893523	WITHOUT_CLASSIFICATION	8.285610647695142E-5	IMPLEMENTATION
// we take the first method found as our "n" method, since for any non-specific // arity they'll all error the same. If an actual "n" method is created, we // use that.	WITHOUT_CLASSIFICATION	0.9999793558270351	WITHOUT_CLASSIFICATION	2.0644172964859443E-5	IMPLEMENTATION
// Used by our duck-typification of Proc into interface types, to allow // coercing a simple proc into an interface parameter.	WITHOUT_CLASSIFICATION	0.9999849242483374	WITHOUT_CLASSIFICATION	1.5075751662596287E-5	IMPLEMENTATION
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999178832998826	WITHOUT_CLASSIFICATION	8.211670011736667E-5	IMPLEMENTATION
// it's either as converted as we can make it via above logic or it's // not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999278564609413	WITHOUT_CLASSIFICATION	7.214353905869733E-5	IMPLEMENTATION
// package scheme 2: separate module for each full package name, constructed  // from the camel-cased package segments: Java::JavaLang::Object, 	WITHOUT_CLASSIFICATION	0.9999772896915443	WITHOUT_CLASSIFICATION	2.2710308455723794E-5	IMPLEMENTATION
// // construct the proxy method //	WITHOUT_CLASSIFICATION	0.9999341858552704	WITHOUT_CLASSIFICATION	6.581414472963285E-5	IMPLEMENTATION
// line 159 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9998762344076917	WITHOUT_CLASSIFICATION	1.2376559230831564E-4	IMPLEMENTATION
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999316274628477	WITHOUT_CLASSIFICATION	6.837253715227942E-5	IMPLEMENTATION
// line 152 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9998762344076917	WITHOUT_CLASSIFICATION	1.2376559230831564E-4	IMPLEMENTATION
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999754398213432	WITHOUT_CLASSIFICATION	2.4560178656832653E-5	IMPLEMENTATION
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999316274628477	WITHOUT_CLASSIFICATION	6.837253715227942E-5	IMPLEMENTATION
// We only need to pass in current scope if we are evaluating as a block (which // is only done for evals).  We need to pass this in so that we can appropriately scope // down to captured scopes when we are parsing.	WITHOUT_CLASSIFICATION	0.9999466426048546	WITHOUT_CLASSIFICATION	5.33573951454185E-5	IMPLEMENTATION
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999689654576895	WITHOUT_CLASSIFICATION	3.103454231043546E-5	IMPLEMENTATION
// A place to store that special hiding space that bindings need to implement things like: // eval("a = 1", binding); eval("p a").  All binding instances must get access to this // hidden shared scope.  We store it here.  This will be null if no binding has yet // been called.	WITHOUT_CLASSIFICATION	0.976793251234928	WITHOUT_CLASSIFICATION	0.023206748765071977	IMPLEMENTATION
// TODO: make it 16 now ? // MUST be power of 2!	WITHOUT_CLASSIFICATION	0.860034344545968	WITHOUT_CLASSIFICATION	0.13996565545403186	IMPLEMENTATION
// check visibility // dup method	WITHOUT_CLASSIFICATION	0.9999528054243009	WITHOUT_CLASSIFICATION	4.719457569901983E-5	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999738674965839	WITHOUT_CLASSIFICATION	2.6132503416149394E-5	IMPLEMENTATION
// unsigned int, native // unsigned long, native	WITHOUT_CLASSIFICATION	0.9997755920337854	WITHOUT_CLASSIFICATION	2.2440796621453623E-4	IMPLEMENTATION
//need padding //I'm fairly sure there is a library call to create a //string filled with a given char with a given length but I couldn't find it	WITHOUT_CLASSIFICATION	0.9999862288769664	WITHOUT_CLASSIFICATION	1.3771123033569905E-5	IMPLEMENTATION
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999853942238489	WITHOUT_CLASSIFICATION	1.460577615105656E-5	IMPLEMENTATION
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999492533573774	WITHOUT_CLASSIFICATION	5.0746642622526744E-5	IMPLEMENTATION
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999471454408427	WITHOUT_CLASSIFICATION	5.285455915726769E-5	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.999978584503041	WITHOUT_CLASSIFICATION	2.1415496959043487E-5	IMPLEMENTATION
// Estimate the square root with the foremost 62 bits of squarD // bi and scale are a tandem	WITHOUT_CLASSIFICATION	0.999895038024616	WITHOUT_CLASSIFICATION	1.0496197538405357E-4	IMPLEMENTATION
// captures // begin and end are used when not groups defined // source string	WITHOUT_CLASSIFICATION	0.9999534385876483	WITHOUT_CLASSIFICATION	4.656141235184023E-5	IMPLEMENTATION
// // INSTANCE VARIABLE RUBY METHODS //	WITHOUT_CLASSIFICATION	0.999853671703225	WITHOUT_CLASSIFICATION	1.4632829677489983E-4	IMPLEMENTATION
// switch // while	WITHOUT_CLASSIFICATION	0.9998937794227717	WITHOUT_CLASSIFICATION	1.06220577228398E-4	IMPLEMENTATION
// For nodes do not have their own scope so we pass null to indicate this. // 'For's are implemented as blocks in evaluation, but they have no scope so we // just deal with this lack of scope throughout its lifespan.  We should probably // change the way this works to get rid of multiple null checks.	WITHOUT_CLASSIFICATION	0.9983590200101314	WITHOUT_CLASSIFICATION	0.0016409799898684891	IMPLEMENTATION
// This field is used during argument processing to avoid putting RubyArray // instances that are purely for utility purposes into ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999808849179818	WITHOUT_CLASSIFICATION	1.9115082018278077E-5	IMPLEMENTATION
// Parent container for this context (can be dynamic!!) // If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure // List of IR instructions for this method	WITHOUT_CLASSIFICATION	0.9999906790969812	WITHOUT_CLASSIFICATION	9.320903018690867E-6	IMPLEMENTATION
// Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = false    //    beq(v1, false, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999418859388951	WITHOUT_CLASSIFICATION	5.811406110486964E-5	IMPLEMENTATION
// expected	WITHOUT_CLASSIFICATION	0.9999100199892176	WITHOUT_CLASSIFICATION	8.998001078238521E-5	IMPLEMENTATION
// Do nothing	WITHOUT_CLASSIFICATION	0.9999704415455766	WITHOUT_CLASSIFICATION	2.9558454423458177E-5	IMPLEMENTATION
// constructor	WITHOUT_CLASSIFICATION	0.9998822813735656	WITHOUT_CLASSIFICATION	1.1771862643434645E-4	IMPLEMENTATION
// If a line is followed by a blank line put // it back.	WITHOUT_CLASSIFICATION	0.9998865541632179	WITHOUT_CLASSIFICATION	1.134458367821812E-4	IMPLEMENTATION
/* $>: default output handle */	WITHOUT_CLASSIFICATION	0.9999375408518191	WITHOUT_CLASSIFICATION	6.245914818093778E-5	IMPLEMENTATION
// line 423	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 486	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// Signal uses sun.misc.* classes, this is not allowed // in the security-sensitive environments	WITHOUT_CLASSIFICATION	0.9999820377161239	WITHOUT_CLASSIFICATION	1.7962283876153096E-5	IMPLEMENTATION
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999431339918113	WITHOUT_CLASSIFICATION	5.6866008188604614E-5	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9998853991797718	WITHOUT_CLASSIFICATION	1.1460082022819067E-4	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9998853991797718	WITHOUT_CLASSIFICATION	1.1460082022819067E-4	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9998564738890365	WITHOUT_CLASSIFICATION	1.435261109634467E-4	IMPLEMENTATION
// if there's no receiver, evaluate and pass in the superclass, or // pass self if it no superclass	WITHOUT_CLASSIFICATION	0.9999789960724761	WITHOUT_CLASSIFICATION	2.1003927523914792E-5	IMPLEMENTATION
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9997139456751325	WITHOUT_CLASSIFICATION	2.860543248675251E-4	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.930785924680244	WITHOUT_CLASSIFICATION	0.06921407531975601	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.930785924680244	WITHOUT_CLASSIFICATION	0.06921407531975601	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.930785924680244	WITHOUT_CLASSIFICATION	0.06921407531975601	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.930785924680244	WITHOUT_CLASSIFICATION	0.06921407531975601	IMPLEMENTATION
// Decrease value to hit upper range.  	WITHOUT_CLASSIFICATION	0.9998823630821572	WITHOUT_CLASSIFICATION	1.1763691784282176E-4	IMPLEMENTATION
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9997924990926478	WITHOUT_CLASSIFICATION	2.0750090735232758E-4	IMPLEMENTATION
// "else" body	WITHOUT_CLASSIFICATION	0.999779971725086	WITHOUT_CLASSIFICATION	2.2002827491392825E-4	IMPLEMENTATION
// done // done // done // Nothing to do for 1.8 // done // done // done // done // done // done // done? // done // done // done // done // done // done // done // done // done // done // done //            case DEFINEDNODE: return buildDefined(node, m); // Incomplete // done // done // done // done // done // done // done // done //            case ENSURENODE: return buildEnsureNode(node, m); // DEFERRED // done // done // done // done //            case FLIPNODE: return buildFlip(node, m); // SSS FIXME: What code generates this AST? // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done? // done // done // done // done // done // done -- partially //            case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); // DEFERRED SSS FIXME: What code generates this AST? // done //            case POSTEXENODE: return buildPostExe(node, m); // DEFERRED //            case PREEXENODE: return buildPreExe(node, m); // DEFERRED // done?? // done	WITHOUT_CLASSIFICATION	0.9999724512648931	WITHOUT_CLASSIFICATION	2.7548735106923495E-5	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9998020957153398	WITHOUT_CLASSIFICATION	1.9790428466003333E-4	IMPLEMENTATION
/* $+: string matches last paren. */	WITHOUT_CLASSIFICATION	0.9999253234631813	WITHOUT_CLASSIFICATION	7.467653681874038E-5	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9998376720884625	WITHOUT_CLASSIFICATION	1.623279115374921E-4	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9998376720884625	WITHOUT_CLASSIFICATION	1.623279115374921E-4	IMPLEMENTATION
// Ruby code frequently uses a platform check to choose "NUL:" on windows // but since that check doesn't work well on JRuby, we help it out	WITHOUT_CLASSIFICATION	0.9999311198519208	WITHOUT_CLASSIFICATION	6.888014807922493E-5	IMPLEMENTATION
/* 10! */	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
//            case RESCUENODE: return buildRescue(node, m); // DEFERRED //            case RETRYNODE: return buildRetry(node, m); // DEFERRED // done	WITHOUT_CLASSIFICATION	0.9999645243576355	WITHOUT_CLASSIFICATION	3.547564236453318E-5	IMPLEMENTATION
// Is this instruction live or dead?  During optimization passes, if this instruction // causes no side-effects and the result of the instruction is not needed by anyone else, // we can remove this instruction altogether without affecting program correctness.	WITHOUT_CLASSIFICATION	0.998813775355127	WITHOUT_CLASSIFICATION	0.0011862246448729706	IMPLEMENTATION
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.999887235908974	WITHOUT_CLASSIFICATION	1.127640910260499E-4	IMPLEMENTATION
// first, iterate over all required args	WITHOUT_CLASSIFICATION	0.9999201559392594	WITHOUT_CLASSIFICATION	7.984406074054342E-5	IMPLEMENTATION
// // Determine if the parameter might be passed as a 32bit int parameter. // This just applies to buffer/pointer types. //	WITHOUT_CLASSIFICATION	0.9999908685530909	WITHOUT_CLASSIFICATION	9.131446909187105E-6	IMPLEMENTATION
//Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());	WITHOUT_CLASSIFICATION	0.9998784339968166	WITHOUT_CLASSIFICATION	1.2156600318344143E-4	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.999779971725086	WITHOUT_CLASSIFICATION	2.2002827491392825E-4	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.999779971725086	WITHOUT_CLASSIFICATION	2.2002827491392825E-4	IMPLEMENTATION
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999754398213432	WITHOUT_CLASSIFICATION	2.4560178656832653E-5	IMPLEMENTATION
// line 449	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 495	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// Management/monitoring	WITHOUT_CLASSIFICATION	0.999841126731821	WITHOUT_CLASSIFICATION	1.588732681790746E-4	IMPLEMENTATION
// if we've found the last char of the separator, // and we've found at least as many characters as separator length, // and the last n characters of our buffer match the separator, we're done	WITHOUT_CLASSIFICATION	0.9999963398511088	WITHOUT_CLASSIFICATION	3.660148891066641E-6	IMPLEMENTATION
/* 14! */	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
// Process any set of annotations // No supported options	WITHOUT_CLASSIFICATION	0.9999316228442222	WITHOUT_CLASSIFICATION	6.837715577772199E-5	IMPLEMENTATION
// add to the jitted methods set	WITHOUT_CLASSIFICATION	0.9999578929253412	WITHOUT_CLASSIFICATION	4.210707465878293E-5	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.9999022328444176	WITHOUT_CLASSIFICATION	9.776715558234027E-5	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.9999022328444176	WITHOUT_CLASSIFICATION	9.776715558234027E-5	IMPLEMENTATION
//            case SCLASSNODE: return buildSClass(node, m); // DEFERRED // done // done // done // done // done // done // done // done //            case UNDEFNODE: return buildUndef(node, m); // DEFERRED // done //            case VALIASNODE: return buildVAlias(node, m); // DEFERRED // done // done	WITHOUT_CLASSIFICATION	0.9999661987793578	WITHOUT_CLASSIFICATION	3.380122064225534E-5	IMPLEMENTATION
// // Adding a post-invoke for the cb result serves to both keep it alive // until after the function returns, and allows us to clean up the native // trampoline early, instead of letting them accumulate until a GC run //	WITHOUT_CLASSIFICATION	0.9999908239814408	WITHOUT_CLASSIFICATION	9.17601855914283E-6	IMPLEMENTATION
/* The Java method doesn't care what class it is, but we need to               know what to convert it to, so we use the object's own class.               If that doesn't help, we use String to force a call to the               object's "to_s" method. */	WITHOUT_CLASSIFICATION	0.9999313592257458	WITHOUT_CLASSIFICATION	6.864077425418235E-5	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.999879656552262	WITHOUT_CLASSIFICATION	1.2034344773800991E-4	IMPLEMENTATION
// Atomic integers for symbol and method IDs	WITHOUT_CLASSIFICATION	0.9998021776541581	WITHOUT_CLASSIFICATION	1.9782234584188172E-4	IMPLEMENTATION
/* 18! */	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9999617446683557	WITHOUT_CLASSIFICATION	3.825533164422567E-5	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999313639760286	WITHOUT_CLASSIFICATION	6.863602397143855E-5	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999313639760286	WITHOUT_CLASSIFICATION	6.863602397143855E-5	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999313639760286	WITHOUT_CLASSIFICATION	6.863602397143855E-5	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999313639760286	WITHOUT_CLASSIFICATION	6.863602397143855E-5	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999851620394737	WITHOUT_CLASSIFICATION	1.4837960526365711E-5	IMPLEMENTATION
/*      * This method takes as input a map of operands to their values, and outputs     * the result of this instruction.     *     * If the value map provides a value for any of the instruction's operands     * the expectation is that the operand will be replaced with the simplified value.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify.     *     * @param valueMap Mapping from operands to their simplified values     * @returns simplified result / output of this instruction     */	WITHOUT_CLASSIFICATION	0.9999959378530835	WITHOUT_CLASSIFICATION	4.062146916527383E-6	IMPLEMENTATION
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9998632725011527	WITHOUT_CLASSIFICATION	1.3672749884737924E-4	IMPLEMENTATION
// An atomic long for generating DynamicMethod serial numbers	WITHOUT_CLASSIFICATION	0.9998594766954048	WITHOUT_CLASSIFICATION	1.405233045952873E-4	IMPLEMENTATION
// MRI behavior: always check whether the file is writable // or not, even if we are to write 0 bytes.	WITHOUT_CLASSIFICATION	0.9999761860867717	WITHOUT_CLASSIFICATION	2.3813913228336035E-5	IMPLEMENTATION
/* 22! */	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.9998343554889275	WITHOUT_CLASSIFICATION	1.6564451107254878E-4	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9998884872263449	WITHOUT_CLASSIFICATION	1.1151277365499667E-4	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9998884872263449	WITHOUT_CLASSIFICATION	1.1151277365499667E-4	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9998884872263449	WITHOUT_CLASSIFICATION	1.1151277365499667E-4	IMPLEMENTATION
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.999874139585549	WITHOUT_CLASSIFICATION	1.258604144509563E-4	IMPLEMENTATION
// Build a new class and add it to the current scope (could be a script / module / class)	WITHOUT_CLASSIFICATION	0.9999885667076304	WITHOUT_CLASSIFICATION	1.1433292369621406E-5	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999679877331816	WITHOUT_CLASSIFICATION	3.201226681834297E-5	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999679877331816	WITHOUT_CLASSIFICATION	3.201226681834297E-5	IMPLEMENTATION
// AF_INET	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
//////////////////////////////////////////////////////////////////////////// // Now we provide default impls of a number of signatures. For each arity, // we first generate a non-block version of the method, which just adds // NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can // potentially take a block, to only generate the block-receiving signature // and still avoid arg boxing. // // We then provide default implementations of each block-accepting method // that in turn call the IRubyObject[]+Block version of call. This then // finally falls back on the minimum implementation requirement for // dynamic method handles. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999999568301325	WITHOUT_CLASSIFICATION	4.3169867506330263E-7	IMPLEMENTATION
// Because we implement Java interfaces now, we need a new === that's // aware of those additional "virtual" supertypes	WITHOUT_CLASSIFICATION	0.9968981324923525	WITHOUT_CLASSIFICATION	0.003101867507647595	IMPLEMENTATION
// BASE64	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
/* note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY         * when value is an integer less than 1.         * We treat 0 as a special case to avoid Domain error.         */	WITHOUT_CLASSIFICATION	0.9999655625738819	WITHOUT_CLASSIFICATION	3.4437426118186576E-5	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.9998506917722685	WITHOUT_CLASSIFICATION	1.4930822773140978E-4	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999210867390891	WITHOUT_CLASSIFICATION	7.891326091092653E-5	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999210867390891	WITHOUT_CLASSIFICATION	7.891326091092653E-5	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9998934464200038	WITHOUT_CLASSIFICATION	1.0655357999624761E-4	IMPLEMENTATION
// SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode // We won't get here for argument receives!  So, buildDasgn is called for // assignments to block variables within a block.  As far as the IR is concerned, // this is just a simple copy	WITHOUT_CLASSIFICATION	0.9999832099489421	WITHOUT_CLASSIFICATION	1.679005105791479E-5	IMPLEMENTATION
// getSimplifiedOperand returns the value of this operand, fully simplified // getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away // // The value is used during optimizations and propagated through the IR.  But, it is thrown away after that. // But, the operand form is used for constructing the compound objects represented by the operand. // // Example: a = [1], b = [3,4], c = [a,b], d = [2,c] //   -- getValue(c) = [1,[3,4]];     getSimplifiedOperand(c) = [1, b] //   -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] // // Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. // So, if contents of a or b is modified, the "simplified value"s of c and d also change!  This difference // is captured by these two methods.	WITHOUT_CLASSIFICATION	0.9999999454920714	WITHOUT_CLASSIFICATION	5.450792875012905E-8	IMPLEMENTATION
//IRubyObject protocol = args[4];	WITHOUT_CLASSIFICATION	0.9998565035096098	WITHOUT_CLASSIFICATION	1.4349649039028042E-4	IMPLEMENTATION
// promise to implement three to N with block	WITHOUT_CLASSIFICATION	0.9841732162551268	WITHOUT_CLASSIFICATION	0.015826783744873292	IMPLEMENTATION
// Ruby's OMG capture all source in a Hash feature // Add each line to buffer when encountering newline or EOF for first time.	WITHOUT_CLASSIFICATION	0.9999686935058254	WITHOUT_CLASSIFICATION	3.1306494174646396E-5	IMPLEMENTATION
// carriage return	WITHOUT_CLASSIFICATION	0.9998621798927678	WITHOUT_CLASSIFICATION	1.3782010723221603E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.999779971725086	WITHOUT_CLASSIFICATION	2.2002827491392825E-4	IMPLEMENTATION
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9999382712018229	WITHOUT_CLASSIFICATION	6.172879817715876E-5	IMPLEMENTATION
// String construction routines by NOT byte[] buffer and making the target String shared 	WITHOUT_CLASSIFICATION	0.9999724680759836	WITHOUT_CLASSIFICATION	2.7531924016468064E-5	IMPLEMENTATION
// insert all nodes in sequence, hash them in the final instruction // KEY	WITHOUT_CLASSIFICATION	0.9999718103513396	WITHOUT_CLASSIFICATION	2.818964866038522E-5	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999887373119066	WITHOUT_CLASSIFICATION	1.1262688093442136E-5	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.999886113483761	WITHOUT_CLASSIFICATION	1.1388651623907623E-4	IMPLEMENTATION
// Basic Block id // CFG that this basic block belongs to // All basic blocks have a starting label // List of non-label instructions	WITHOUT_CLASSIFICATION	0.999903878394638	WITHOUT_CLASSIFICATION	9.61216053619918E-5	IMPLEMENTATION
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999795700634223	WITHOUT_CLASSIFICATION	2.0429936577739826E-5	IMPLEMENTATION
// For all uninitialized specific arities, we defer to the "n" method which // should raise appropriate error in all cases.	WITHOUT_CLASSIFICATION	0.9999615243739609	WITHOUT_CLASSIFICATION	3.8475626039066175E-5	IMPLEMENTATION
// implement is called to force this class to create stubs for all // methods in the given interface, so they'll show up in the list // of methods and be invocable without passing through method_missing	WITHOUT_CLASSIFICATION	0.9998991810717056	WITHOUT_CLASSIFICATION	1.0081892829441196E-4	IMPLEMENTATION
// CASE IR instructions are dummy instructions  // -- all when/then clauses have been converted into if-then-else blocks	WITHOUT_CLASSIFICATION	0.9999475451645433	WITHOUT_CLASSIFICATION	5.2454835456749154E-5	IMPLEMENTATION
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.999949445380916	WITHOUT_CLASSIFICATION	5.0554619083943436E-5	IMPLEMENTATION
// leave it null and fall back on our normal invocation logic	WITHOUT_CLASSIFICATION	0.999925025720735	WITHOUT_CLASSIFICATION	7.4974279265018E-5	IMPLEMENTATION
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999763519267048	WITHOUT_CLASSIFICATION	2.36480732953432E-5	IMPLEMENTATION
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9984051728095985	WITHOUT_CLASSIFICATION	0.0015948271904014893	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9998840091521858	WITHOUT_CLASSIFICATION	1.1599084781416065E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9998840091521858	WITHOUT_CLASSIFICATION	1.1599084781416065E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9998840091521858	WITHOUT_CLASSIFICATION	1.1599084781416065E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9998840091521858	WITHOUT_CLASSIFICATION	1.1599084781416065E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9998840091521858	WITHOUT_CLASSIFICATION	1.1599084781416065E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9998840091521858	WITHOUT_CLASSIFICATION	1.1599084781416065E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9998840091521858	WITHOUT_CLASSIFICATION	1.1599084781416065E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9998840091521858	WITHOUT_CLASSIFICATION	1.1599084781416065E-4	IMPLEMENTATION
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999374935462181	WITHOUT_CLASSIFICATION	6.250645378194267E-5	IMPLEMENTATION
/* fall through */	WITHOUT_CLASSIFICATION	0.9998440278022888	WITHOUT_CLASSIFICATION	1.5597219771120414E-4	IMPLEMENTATION
// deal with case when "other" is not a string	WITHOUT_CLASSIFICATION	0.9999403182375001	WITHOUT_CLASSIFICATION	5.9681762499835434E-5	IMPLEMENTATION
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999748228643822	WITHOUT_CLASSIFICATION	2.5177135617804733E-5	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999265582696824	WITHOUT_CLASSIFICATION	7.344173031759369E-5	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999265582696824	WITHOUT_CLASSIFICATION	7.344173031759369E-5	IMPLEMENTATION
// store argument count information into scope	WITHOUT_CLASSIFICATION	0.9999593952118507	WITHOUT_CLASSIFICATION	4.0604788149176836E-5	IMPLEMENTATION
// the load method is used for loading as a top-level script, and prepares appropriate scoping around the code	WITHOUT_CLASSIFICATION	0.9999526248709343	WITHOUT_CLASSIFICATION	4.737512906573891E-5	IMPLEMENTATION
// First, build assignments for specific named arguments	WITHOUT_CLASSIFICATION	0.9999258257248287	WITHOUT_CLASSIFICATION	7.417427517124629E-5	IMPLEMENTATION
//        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } //        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }	WITHOUT_CLASSIFICATION	0.9999685770307901	WITHOUT_CLASSIFICATION	3.142296920993109E-5	IMPLEMENTATION
// get current context	WITHOUT_CLASSIFICATION	0.9999544759710934	WITHOUT_CLASSIFICATION	4.552402890663831E-5	IMPLEMENTATION
// octal constant	WITHOUT_CLASSIFICATION	0.9998059226813013	WITHOUT_CLASSIFICATION	1.940773186986525E-4	IMPLEMENTATION
// read	WITHOUT_CLASSIFICATION	0.9958328786700916	WITHOUT_CLASSIFICATION	0.004167121329908281	IMPLEMENTATION
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9997451740872108	WITHOUT_CLASSIFICATION	2.548259127892769E-4	IMPLEMENTATION
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9998761643116052	WITHOUT_CLASSIFICATION	1.2383568839483024E-4	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999209106049652	WITHOUT_CLASSIFICATION	7.908939503470368E-5	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999209106049652	WITHOUT_CLASSIFICATION	7.908939503470368E-5	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999209106049652	WITHOUT_CLASSIFICATION	7.908939503470368E-5	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997836329522806	WITHOUT_CLASSIFICATION	2.1636704771931127E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997836329522806	WITHOUT_CLASSIFICATION	2.1636704771931127E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997836329522806	WITHOUT_CLASSIFICATION	2.1636704771931127E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997836329522806	WITHOUT_CLASSIFICATION	2.1636704771931127E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997836329522806	WITHOUT_CLASSIFICATION	2.1636704771931127E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997836329522806	WITHOUT_CLASSIFICATION	2.1636704771931127E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997836329522806	WITHOUT_CLASSIFICATION	2.1636704771931127E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997836329522806	WITHOUT_CLASSIFICATION	2.1636704771931127E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997836329522806	WITHOUT_CLASSIFICATION	2.1636704771931127E-4	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999900338664893	WITHOUT_CLASSIFICATION	9.966133510734675E-6	IMPLEMENTATION
// at end	WITHOUT_CLASSIFICATION	0.9954847503799192	WITHOUT_CLASSIFICATION	0.004515249620080788	IMPLEMENTATION
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9998857414839667	WITHOUT_CLASSIFICATION	1.1425851603335967E-4	IMPLEMENTATION
// save blocking state	WITHOUT_CLASSIFICATION	0.9999119700627368	WITHOUT_CLASSIFICATION	8.802993726310584E-5	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997836329522806	WITHOUT_CLASSIFICATION	2.1636704771931127E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997836329522806	WITHOUT_CLASSIFICATION	2.1636704771931127E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997836329522806	WITHOUT_CLASSIFICATION	2.1636704771931127E-4	IMPLEMENTATION
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9998730377609134	WITHOUT_CLASSIFICATION	1.2696223908653437E-4	IMPLEMENTATION
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999401170647481	WITHOUT_CLASSIFICATION	5.988293525203619E-5	IMPLEMENTATION
// fall back on empty env when security disallows environment var access (like in an applet)	WITHOUT_CLASSIFICATION	0.99992444814822	WITHOUT_CLASSIFICATION	7.555185177996371E-5	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9998477145989632	WITHOUT_CLASSIFICATION	1.5228540103685647E-4	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9998477145989632	WITHOUT_CLASSIFICATION	1.5228540103685647E-4	IMPLEMENTATION
// load null block	WITHOUT_CLASSIFICATION	0.9998548155215916	WITHOUT_CLASSIFICATION	1.4518447840836885E-4	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999819004902176	WITHOUT_CLASSIFICATION	1.809950978236018E-5	IMPLEMENTATION
// nothing else to here - the module version will be // included in the class.	WITHOUT_CLASSIFICATION	0.9999902965603478	WITHOUT_CLASSIFICATION	9.703439652310995E-6	IMPLEMENTATION
// JRUBY-1000, fail early when attempting to subclass a final Java class; // solved here by adding an exception-throwing "inherited"	WITHOUT_CLASSIFICATION	0.9999513398006357	WITHOUT_CLASSIFICATION	4.8660199364201646E-5	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9997759329595282	WITHOUT_CLASSIFICATION	2.2406704047191246E-4	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9997759329595282	WITHOUT_CLASSIFICATION	2.2406704047191246E-4	IMPLEMENTATION
// Translate ret = (a || b) to ret = (a ? true : b) as follows //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = true //    beq(v1, true, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999351491393177	WITHOUT_CLASSIFICATION	6.485086068231485E-5	IMPLEMENTATION
// Initial precision is that of double numbers 2^63/2 ~ 4E18 // 63-1 an even number of number bits // precision seems 16 to 18 digits	WITHOUT_CLASSIFICATION	0.9999785182378732	WITHOUT_CLASSIFICATION	2.148176212670522E-5	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9997955939813199	WITHOUT_CLASSIFICATION	2.0440601868017565E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.999861138292648	WITHOUT_CLASSIFICATION	1.3886170735196644E-4	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999076533899703	WITHOUT_CLASSIFICATION	9.234661002958563E-5	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999076533899703	WITHOUT_CLASSIFICATION	9.234661002958563E-5	IMPLEMENTATION
// check arity	WITHOUT_CLASSIFICATION	0.9998885152144051	WITHOUT_CLASSIFICATION	1.1148478559486263E-4	IMPLEMENTATION
// check arity	WITHOUT_CLASSIFICATION	0.9998885152144051	WITHOUT_CLASSIFICATION	1.1148478559486263E-4	IMPLEMENTATION
// create the class	WITHOUT_CLASSIFICATION	0.9999720037738783	WITHOUT_CLASSIFICATION	2.7996226121631582E-5	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999635210601354	WITHOUT_CLASSIFICATION	3.6478939864585293E-5	IMPLEMENTATION
// No hex value after the 'x'.	WITHOUT_CLASSIFICATION	0.9999100813143171	WITHOUT_CLASSIFICATION	8.991868568287216E-5	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9998269084618239	WITHOUT_CLASSIFICATION	1.7309153817620973E-4	IMPLEMENTATION
// Let m be the exact digits precision in an earlier! loop	WITHOUT_CLASSIFICATION	0.9998904835756948	WITHOUT_CLASSIFICATION	1.0951642430534062E-4	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999539383350358	WITHOUT_CLASSIFICATION	4.6061664964199005E-5	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9952856502833631	WITHOUT_CLASSIFICATION	0.004714349716636949	IMPLEMENTATION
// Label for the start of the method // Label for the end of the method	WITHOUT_CLASSIFICATION	0.9999912144605883	WITHOUT_CLASSIFICATION	8.78553941167235E-6	IMPLEMENTATION
// comparisons & checks // checks if the operand is non-null and non-false // EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...	WITHOUT_CLASSIFICATION	0.999985191401148	WITHOUT_CLASSIFICATION	1.480859885190709E-5	IMPLEMENTATION
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9997023131558004	WITHOUT_CLASSIFICATION	2.9768684419967373E-4	IMPLEMENTATION
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9997739068629596	WITHOUT_CLASSIFICATION	2.2609313704039153E-4	IMPLEMENTATION
// all done with lookup attempts, release monitor	WITHOUT_CLASSIFICATION	0.9999129466367593	WITHOUT_CLASSIFICATION	8.705336324066905E-5	IMPLEMENTATION
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.999960196479554	WITHOUT_CLASSIFICATION	3.980352044592009E-5	IMPLEMENTATION
// Create list of interface names to proxy (and make sure they really are interfaces) // Also build a hashcode from all classes to use for retrieving previously-created impl	WITHOUT_CLASSIFICATION	0.9999982212192091	WITHOUT_CLASSIFICATION	1.7787807908288522E-6	IMPLEMENTATION
// Construct local variables based on parameter names passed in	WITHOUT_CLASSIFICATION	0.9999741910693213	WITHOUT_CLASSIFICATION	2.580893067870342E-5	IMPLEMENTATION
// Value of "TZ" property is of a bit different format, // which confuses the Java's TimeZone.getTimeZone(id) method, // and so, we need to convert it.	WITHOUT_CLASSIFICATION	0.99994441545447	WITHOUT_CLASSIFICATION	5.5584545529974474E-5	IMPLEMENTATION
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9998864355428916	WITHOUT_CLASSIFICATION	1.1356445710843156E-4	IMPLEMENTATION
// ensure the object is associated with the wrapper we found it in, // so that if it comes back we don't re-wrap it	WITHOUT_CLASSIFICATION	0.9999872856029056	WITHOUT_CLASSIFICATION	1.2714397094382892E-5	IMPLEMENTATION
// return sqrt(squarD) with precision of rootMC	WITHOUT_CLASSIFICATION	0.9999820948753214	WITHOUT_CLASSIFICATION	1.790512467856069E-5	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.999978584503041	WITHOUT_CLASSIFICATION	2.1415496959043487E-5	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
// Get a new label using the provided label prefix	WITHOUT_CLASSIFICATION	0.9999511693743044	WITHOUT_CLASSIFICATION	4.883062569569119E-5	IMPLEMENTATION
// normal exit, perform finally and return	WITHOUT_CLASSIFICATION	0.9999372415797699	WITHOUT_CLASSIFICATION	6.275842023001943E-5	IMPLEMENTATION
// coerce arguments	WITHOUT_CLASSIFICATION	0.9998012754627412	WITHOUT_CLASSIFICATION	1.9872453725877222E-4	IMPLEMENTATION
// 0.0 is ok // float range // inverted float range? // NaN // +infinity // -infinity	WITHOUT_CLASSIFICATION	0.9999096851167683	WITHOUT_CLASSIFICATION	9.031488323175419E-5	IMPLEMENTATION
/* expected */	WITHOUT_CLASSIFICATION	0.9998750408457515	WITHOUT_CLASSIFICATION	1.249591542485033E-4	IMPLEMENTATION
// set this class's method names in var @__java_ovrd_methods if this // is the new class; otherwise, get method names from there if this is // a proxy superclass.	WITHOUT_CLASSIFICATION	0.9999935658004024	WITHOUT_CLASSIFICATION	6.434199597557863E-6	IMPLEMENTATION
/* ignore backslashed spaces in %w */	WITHOUT_CLASSIFICATION	0.9999220412198798	WITHOUT_CLASSIFICATION	7.795878012013176E-5	IMPLEMENTATION
// Invert the sign, since TZ format and Java format // use opposite signs, sigh... Also, Java API requires // the sign to be always present, be it "+" or "-".	WITHOUT_CLASSIFICATION	0.9998972216874183	WITHOUT_CLASSIFICATION	1.0277831258158305E-4	IMPLEMENTATION
// no binding given, use 0 for both	WITHOUT_CLASSIFICATION	0.9998841372105206	WITHOUT_CLASSIFICATION	1.1586278947931136E-4	IMPLEMENTATION
// <=> may return nil in many circumstances, e.g. 3 <=> NaN        	WITHOUT_CLASSIFICATION	0.9999120345234594	WITHOUT_CLASSIFICATION	8.796547654045793E-5	IMPLEMENTATION
// use numbered access method	WITHOUT_CLASSIFICATION	0.9998829383755	WITHOUT_CLASSIFICATION	1.1706162450005147E-4	IMPLEMENTATION
// Always use "GMT" since that's required by Java API.	WITHOUT_CLASSIFICATION	0.9998882663598885	WITHOUT_CLASSIFICATION	1.1173364011154989E-4	IMPLEMENTATION
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999908158288666	WITHOUT_CLASSIFICATION	9.184171133328036E-6	IMPLEMENTATION
// The dataStruct is a place where custom information can be // contained for core implementations that doesn't necessarily // want to go to the trouble of creating a subclass of // RubyObject. The OpenSSL implementation uses this heavily to // save holder objects containing Java cryptography objects. // Java integration uses this to store the Java object ref. //protected transient Object dataStruct;	WITHOUT_CLASSIFICATION	0.9999938482000532	WITHOUT_CLASSIFICATION	6.1517999468080285E-6	IMPLEMENTATION
// Remaining arguments are for the script itself	WITHOUT_CLASSIFICATION	0.9999528344024934	WITHOUT_CLASSIFICATION	4.7165597506745626E-5	IMPLEMENTATION
// arg grouping, use slower arg walking logic	WITHOUT_CLASSIFICATION	0.9998598278617479	WITHOUT_CLASSIFICATION	1.4017213825212002E-4	IMPLEMENTATION
// build scope names string	WITHOUT_CLASSIFICATION	0.999914695580572	WITHOUT_CLASSIFICATION	8.530441942795842E-5	IMPLEMENTATION
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.99999660080581	WITHOUT_CLASSIFICATION	3.3991941900776893E-6	IMPLEMENTATION
// Here we create an "anonymous" exception type used for unrolling the stack. // MRI creates a new one for *every call* to timeout, which can be costly. // We opt to use a single exception type for all cases to avoid this overhead.	WITHOUT_CLASSIFICATION	0.9999807355733232	WITHOUT_CLASSIFICATION	1.9264426676740482E-5	IMPLEMENTATION
// finally	WITHOUT_CLASSIFICATION	0.9963147292693636	WITHOUT_CLASSIFICATION	0.0036852707306363314	IMPLEMENTATION
// MRI behavior: With TZ equal to "GMT" or "UTC", Time.now // is *NOT* considered as a proper GMT/UTC time: //   ENV['TZ']="GMT" //   Time.now.gmt? ==> false //   ENV['TZ']="UTC" //   Time.now.utc? ==> false // Hence, we need to adjust for that.	WITHOUT_CLASSIFICATION	0.9998602208527927	WITHOUT_CLASSIFICATION	1.3977914720743646E-4	IMPLEMENTATION
// ?l  | boolean | True if file1 exists and is a symbolic link	WITHOUT_CLASSIFICATION	0.9999323364786937	WITHOUT_CLASSIFICATION	6.766352130621184E-5	IMPLEMENTATION
// This try/catch is to allow failing over to the "commands" logic // when running from within a jruby-complete jar file, which has // jruby.home = a jar file URL that does not resolve correctly with // JRubyFile.create.	WITHOUT_CLASSIFICATION	0.9999848076312311	WITHOUT_CLASSIFICATION	1.5192368769023386E-5	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9998432375231469	WITHOUT_CLASSIFICATION	1.5676247685305237E-4	IMPLEMENTATION
// specific arity	WITHOUT_CLASSIFICATION	0.9998326087438274	WITHOUT_CLASSIFICATION	1.6739125617267516E-4	IMPLEMENTATION
// In the case of two arguments, MRI will discard the portion of // the first argument after a decimal point (i.e., "floor"). // However in the case of a single argument, any portion after // the decimal point is honored.	WITHOUT_CLASSIFICATION	0.9999946207381641	WITHOUT_CLASSIFICATION	5.379261835887368E-6	IMPLEMENTATION
// ?w  | boolean | True if file1 exists and is writable by effective uid/gid	WITHOUT_CLASSIFICATION	0.9999357062611249	WITHOUT_CLASSIFICATION	6.429373887511862E-5	IMPLEMENTATION
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9998549081500062	WITHOUT_CLASSIFICATION	1.4509184999378022E-4	IMPLEMENTATION
/*    @JRubyMethod    public IRubyObject to_proc() {        return RubyProc.newProc(getRuntime(),                                CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()),                                Block.Type.PROC);    }    */	WITHOUT_CLASSIFICATION	0.9999828929121057	WITHOUT_CLASSIFICATION	1.7107087894231875E-5	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9998493004816233	WITHOUT_CLASSIFICATION	1.5069951837658454E-4	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9998493004816233	WITHOUT_CLASSIFICATION	1.5069951837658454E-4	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999896216849682	WITHOUT_CLASSIFICATION	1.037831503176309E-5	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999896216849682	WITHOUT_CLASSIFICATION	1.037831503176309E-5	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9999363627033602	WITHOUT_CLASSIFICATION	6.363729663984573E-5	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9999363627033602	WITHOUT_CLASSIFICATION	6.363729663984573E-5	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999175897571329	WITHOUT_CLASSIFICATION	8.24102428672306E-5	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999175897571329	WITHOUT_CLASSIFICATION	8.24102428672306E-5	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9997965527607274	WITHOUT_CLASSIFICATION	2.0344723927261566E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9997965527607274	WITHOUT_CLASSIFICATION	2.0344723927261566E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9997965527607274	WITHOUT_CLASSIFICATION	2.0344723927261566E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9997965527607274	WITHOUT_CLASSIFICATION	2.0344723927261566E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9997965527607274	WITHOUT_CLASSIFICATION	2.0344723927261566E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9997965527607274	WITHOUT_CLASSIFICATION	2.0344723927261566E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9997965527607274	WITHOUT_CLASSIFICATION	2.0344723927261566E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9997965527607274	WITHOUT_CLASSIFICATION	2.0344723927261566E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9997965527607274	WITHOUT_CLASSIFICATION	2.0344723927261566E-4	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999269309308348	WITHOUT_CLASSIFICATION	7.30690691650939E-5	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999269309308348	WITHOUT_CLASSIFICATION	7.30690691650939E-5	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999269309308348	WITHOUT_CLASSIFICATION	7.30690691650939E-5	IMPLEMENTATION
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999424142066824	WITHOUT_CLASSIFICATION	5.7585793317666284E-5	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999356907049011	WITHOUT_CLASSIFICATION	6.430929509895827E-5	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999356907049011	WITHOUT_CLASSIFICATION	6.430929509895827E-5	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999356907049011	WITHOUT_CLASSIFICATION	6.430929509895827E-5	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999012431692899	WITHOUT_CLASSIFICATION	9.875683071007506E-5	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999012431692899	WITHOUT_CLASSIFICATION	9.875683071007506E-5	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999012431692899	WITHOUT_CLASSIFICATION	9.875683071007506E-5	IMPLEMENTATION
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9998538695866673	WITHOUT_CLASSIFICATION	1.4613041333265948E-4	IMPLEMENTATION
// backspace	WITHOUT_CLASSIFICATION	0.9997954909080778	WITHOUT_CLASSIFICATION	2.045090919221478E-4	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9997768482110331	WITHOUT_CLASSIFICATION	2.231517889668881E-4	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9997768482110331	WITHOUT_CLASSIFICATION	2.231517889668881E-4	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9997768482110331	WITHOUT_CLASSIFICATION	2.231517889668881E-4	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9997768482110331	WITHOUT_CLASSIFICATION	2.231517889668881E-4	IMPLEMENTATION
/* package-private */	WITHOUT_CLASSIFICATION	0.999934506404754	WITHOUT_CLASSIFICATION	6.549359524602464E-5	IMPLEMENTATION
// fall through	WITHOUT_CLASSIFICATION	0.9998668700911678	WITHOUT_CLASSIFICATION	1.3312990883225005E-4	IMPLEMENTATION
// fall through	WITHOUT_CLASSIFICATION	0.9998668700911678	WITHOUT_CLASSIFICATION	1.3312990883225005E-4	IMPLEMENTATION
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9998157142022565	WITHOUT_CLASSIFICATION	1.8428579774357954E-4	IMPLEMENTATION
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999888020019662	WITHOUT_CLASSIFICATION	1.1197998033896036E-5	IMPLEMENTATION
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999888020019662	WITHOUT_CLASSIFICATION	1.1197998033896036E-5	IMPLEMENTATION
/**      * Nested class whose instances act as thunks reacting to to_str method     * called from (Exception#to_str, Exception#message)     * MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!",     * to_str implementation: "name_err_mesg_to_str"     *     * TODO: this class should not be lookupable     */	WITHOUT_CLASSIFICATION	0.6825764532205392	IMPLEMENTATION	0.31742354677946083	WITHOUT_CLASSIFICATION
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9998965075867589	WITHOUT_CLASSIFICATION	1.0349241324120011E-4	IMPLEMENTATION
// The name of this source (e.g. a filename: foo.rb)	WITHOUT_CLASSIFICATION	0.9999714763218437	WITHOUT_CLASSIFICATION	2.852367815625177E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9998539810057834	WITHOUT_CLASSIFICATION	1.460189942166228E-4	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9998539810057834	WITHOUT_CLASSIFICATION	1.460189942166228E-4	IMPLEMENTATION
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9999830035141921	WITHOUT_CLASSIFICATION	1.6996485807913044E-5	IMPLEMENTATION
// We yield here to hopefully permit the target thread to schedule // MRI immediately schedules it, so this is close but not exact	WITHOUT_CLASSIFICATION	0.9999744282410276	WITHOUT_CLASSIFICATION	2.5571758972420674E-5	IMPLEMENTATION
// note that addMethod now does its own put, so any change made to // functionality here should be made there as well 	WITHOUT_CLASSIFICATION	0.9998948914408544	WITHOUT_CLASSIFICATION	1.0510855914565255E-4	IMPLEMENTATION
/* Currently dead code, but useful when we figure out how to actually perform translit.    private static boolean isTranslit(String encoding) {        return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false;    }*/	WITHOUT_CLASSIFICATION	0.9999868838810544	WITHOUT_CLASSIFICATION	1.311611894563014E-5	IMPLEMENTATION
// empirically it appears that to_ary coersions always return array or nil, so this // should always be an array by now.	WITHOUT_CLASSIFICATION	0.9999650715500709	WITHOUT_CLASSIFICATION	3.4928449929148614E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9998539810057834	WITHOUT_CLASSIFICATION	1.460189942166228E-4	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9998539810057834	WITHOUT_CLASSIFICATION	1.460189942166228E-4	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9998539810057834	WITHOUT_CLASSIFICATION	1.460189942166228E-4	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9998539810057834	WITHOUT_CLASSIFICATION	1.460189942166228E-4	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9998539810057834	WITHOUT_CLASSIFICATION	1.460189942166228E-4	IMPLEMENTATION
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9998939713343685	WITHOUT_CLASSIFICATION	1.0602866563153356E-4	IMPLEMENTATION
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9998669460939865	WITHOUT_CLASSIFICATION	1.3305390601347898E-4	IMPLEMENTATION
// if it's an inner class and it's not public, we can't access it; // skip population of declared elements	WITHOUT_CLASSIFICATION	0.9999898445106733	WITHOUT_CLASSIFICATION	1.0155489326596793E-5	IMPLEMENTATION
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9998871471201538	WITHOUT_CLASSIFICATION	1.1285287984629261E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9994806708116829	WITHOUT_CLASSIFICATION	5.19329188317183E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9994806708116829	WITHOUT_CLASSIFICATION	5.19329188317183E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9994806708116829	WITHOUT_CLASSIFICATION	5.19329188317183E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9994806708116829	WITHOUT_CLASSIFICATION	5.19329188317183E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9994806708116829	WITHOUT_CLASSIFICATION	5.19329188317183E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9994806708116829	WITHOUT_CLASSIFICATION	5.19329188317183E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9994806708116829	WITHOUT_CLASSIFICATION	5.19329188317183E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9994806708116829	WITHOUT_CLASSIFICATION	5.19329188317183E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9994806708116829	WITHOUT_CLASSIFICATION	5.19329188317183E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9994806708116829	WITHOUT_CLASSIFICATION	5.19329188317183E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9994806708116829	WITHOUT_CLASSIFICATION	5.19329188317183E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9994806708116829	WITHOUT_CLASSIFICATION	5.19329188317183E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9994806708116829	WITHOUT_CLASSIFICATION	5.19329188317183E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9994806708116829	WITHOUT_CLASSIFICATION	5.19329188317183E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9994806708116829	WITHOUT_CLASSIFICATION	5.19329188317183E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9994806708116829	WITHOUT_CLASSIFICATION	5.19329188317183E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9994806708116829	WITHOUT_CLASSIFICATION	5.19329188317183E-4	IMPLEMENTATION
// MRI behavior on Windows: it treats '/' as a root of // a current drive (but only if SINGLE slash is present!): // E.g., if current work directory is // 'D:/home/directory', then '/' means 'D:/'. // // Basically, '/path' is treated as a *RELATIVE* path, // relative to the current drive. '//path' is treated // as absolute one.	WITHOUT_CLASSIFICATION	0.9999897059845919	WITHOUT_CLASSIFICATION	1.0294015408072079E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9994806708116829	WITHOUT_CLASSIFICATION	5.19329188317183E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9994806708116829	WITHOUT_CLASSIFICATION	5.19329188317183E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9994806708116829	WITHOUT_CLASSIFICATION	5.19329188317183E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9994806708116829	WITHOUT_CLASSIFICATION	5.19329188317183E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9994806708116829	WITHOUT_CLASSIFICATION	5.19329188317183E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9994806708116829	WITHOUT_CLASSIFICATION	5.19329188317183E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9994806708116829	WITHOUT_CLASSIFICATION	5.19329188317183E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9994806708116829	WITHOUT_CLASSIFICATION	5.19329188317183E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9994806708116829	WITHOUT_CLASSIFICATION	5.19329188317183E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9994806708116829	WITHOUT_CLASSIFICATION	5.19329188317183E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9994806708116829	WITHOUT_CLASSIFICATION	5.19329188317183E-4	IMPLEMENTATION
// This is needed when the enclosing class or module is a singleton. // In that case, we generated a name such as null::Foo, which broke  // Marshalling, among others. The correct thing to do in this situation  // is to insert the generate the name of form #<Class:01xasdfasd> if  // it's a singleton module/class, which this code accomplishes.	WITHOUT_CLASSIFICATION	0.9999960031276999	WITHOUT_CLASSIFICATION	3.9968723001186216E-6	IMPLEMENTATION
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9999891611804639	WITHOUT_CLASSIFICATION	1.0838819536244508E-5	IMPLEMENTATION
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.999944451632764	WITHOUT_CLASSIFICATION	5.5548367235980446E-5	IMPLEMENTATION
// get "self"	WITHOUT_CLASSIFICATION	0.9998913046151062	WITHOUT_CLASSIFICATION	1.0869538489374623E-4	IMPLEMENTATION
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9998767942733402	WITHOUT_CLASSIFICATION	1.2320572665983087E-4	IMPLEMENTATION
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.999917143893523	WITHOUT_CLASSIFICATION	8.285610647695142E-5	IMPLEMENTATION
// only public methods	WITHOUT_CLASSIFICATION	0.9999146508244451	WITHOUT_CLASSIFICATION	8.534917555486086E-5	IMPLEMENTATION
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999519026552566	WITHOUT_CLASSIFICATION	4.8097344743357115E-5	IMPLEMENTATION
// First try to use drive letter from supplied dir value, // then try current work dir.	WITHOUT_CLASSIFICATION	0.9999701449444427	WITHOUT_CLASSIFICATION	2.985505555725826E-5	IMPLEMENTATION
// JRUBY-2435: Aliasing eval and other "special" methods should display a warning // We warn because we treat certain method names as "special" for purposes of // optimization. Hopefully this will be enough to convince people not to alias // them.	WITHOUT_CLASSIFICATION	0.999904338539061	WITHOUT_CLASSIFICATION	9.56614609390111E-5	IMPLEMENTATION
// generate a real method signature for the method, with to/from coercions	WITHOUT_CLASSIFICATION	0.999965057379809	WITHOUT_CLASSIFICATION	3.494262019104161E-5	IMPLEMENTATION
// block argument to the method // closure present // class present // method table mutations, def, defs, undef, alias // likely call to eval // makes calls that are aware of the frame // makes calls that are aware of the frame's self // makes calls that are aware of the frame's visibility // makes calls that are aware of the frame's block // makes calls that are aware of the frame's name // makes calls that set or get backref // makes calls that set or get lastline // makes calls that are aware of the frame's class // optional arguments to the method // rest arg to the method // makes calls that are aware of the scope // makes a zero-argument super call // accesses or sets constants // accesses or sets class variables // makes normal super call // contains a retry	WITHOUT_CLASSIFICATION	0.9999985146928819	WITHOUT_CLASSIFICATION	1.4853071180103001E-6	IMPLEMENTATION
// // Add aliases in Type::*, NativeType::* and FFI::TYPE_* //	WITHOUT_CLASSIFICATION	0.9999128422116571	WITHOUT_CLASSIFICATION	8.715778834291817E-5	IMPLEMENTATION
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999534781355975	WITHOUT_CLASSIFICATION	4.6521864402553026E-5	IMPLEMENTATION
// double-testing args.length here, but it avoids duplicating the proc-setup code in two places	WITHOUT_CLASSIFICATION	0.9999768031374154	WITHOUT_CLASSIFICATION	2.3196862584583584E-5	IMPLEMENTATION
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999012179819622	WITHOUT_CLASSIFICATION	9.878201803780106E-5	IMPLEMENTATION
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999023608819432	WITHOUT_CLASSIFICATION	9.76391180568053E-5	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9998846364280357	WITHOUT_CLASSIFICATION	1.1536357196427362E-4	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9998846364280357	WITHOUT_CLASSIFICATION	1.1536357196427362E-4	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9998846364280357	WITHOUT_CLASSIFICATION	1.1536357196427362E-4	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9998846364280357	WITHOUT_CLASSIFICATION	1.1536357196427362E-4	IMPLEMENTATION
// snapshot of contents of directory // current position in directory	WITHOUT_CLASSIFICATION	0.9999929577977439	WITHOUT_CLASSIFICATION	7.042202256100885E-6	IMPLEMENTATION
// Exclusive locks in Java require the channel to be writable, otherwise // an exception is thrown (terminating JRuby execution). // But flock behavior of MRI is that it allows // exclusive locks even on non-writable file. So we convert exclusive // lock to shared lock if the channel is not writable, to better match // the MRI behavior.	WITHOUT_CLASSIFICATION	0.9999948825055628	WITHOUT_CLASSIFICATION	5.1174944372308535E-6	IMPLEMENTATION
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999088668314029	WITHOUT_CLASSIFICATION	9.113316859715926E-5	IMPLEMENTATION
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999088668314029	WITHOUT_CLASSIFICATION	9.113316859715926E-5	IMPLEMENTATION
// set self to the class	WITHOUT_CLASSIFICATION	0.9999642938529998	WITHOUT_CLASSIFICATION	3.570614700017508E-5	IMPLEMENTATION
/* ---------- Public fields, methods --------- */	WITHOUT_CLASSIFICATION	0.999944449684695	WITHOUT_CLASSIFICATION	5.555031530509781E-5	IMPLEMENTATION
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999393171584209	WITHOUT_CLASSIFICATION	6.068284157903326E-5	IMPLEMENTATION
// zero args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999619297472501	WITHOUT_CLASSIFICATION	3.807025274987594E-5	IMPLEMENTATION
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999663138161398	WITHOUT_CLASSIFICATION	3.3686183860198106E-5	IMPLEMENTATION
// Store each line into this list if not null.	WITHOUT_CLASSIFICATION	0.9998845417944606	WITHOUT_CLASSIFICATION	1.1545820553937533E-4	IMPLEMENTATION
// Portion of line right after beginning marker	WITHOUT_CLASSIFICATION	0.9999065957509417	WITHOUT_CLASSIFICATION	9.34042490584396E-5	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999656247520159	WITHOUT_CLASSIFICATION	3.4375247984056936E-5	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999656247520159	WITHOUT_CLASSIFICATION	3.4375247984056936E-5	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999656247520159	WITHOUT_CLASSIFICATION	3.4375247984056936E-5	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999656247520159	WITHOUT_CLASSIFICATION	3.4375247984056936E-5	IMPLEMENTATION
// If an IO exception occurs (something odd, but possible) // A directory may return null.	WITHOUT_CLASSIFICATION	0.9999831120166085	WITHOUT_CLASSIFICATION	1.6887983391401364E-5	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999909327841645	WITHOUT_CLASSIFICATION	9.067215835421203E-6	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999909327841645	WITHOUT_CLASSIFICATION	9.067215835421203E-6	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999909327841645	WITHOUT_CLASSIFICATION	9.067215835421203E-6	IMPLEMENTATION
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9998983595762994	WITHOUT_CLASSIFICATION	1.0164042370057821E-4	IMPLEMENTATION
// finally with no exception	WITHOUT_CLASSIFICATION	0.9999222545407903	WITHOUT_CLASSIFICATION	7.774545920967642E-5	IMPLEMENTATION
// Now, for all variables used by 'i' mark them live before 'i'	WITHOUT_CLASSIFICATION	0.9999230343561559	WITHOUT_CLASSIFICATION	7.696564384401061E-5	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.930785924680244	WITHOUT_CLASSIFICATION	0.06921407531975601	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.930785924680244	WITHOUT_CLASSIFICATION	0.06921407531975601	IMPLEMENTATION
/* The counting of slashes that follows is simply a way to adhere to          * Ruby's UNC (or something) compatibility. When Ruby's expand_path is          * called with "//foo//bar" it will return "//foo/bar". JRuby uses          * java.io.File, and hence returns "/foo/bar". In order to retain          * java.io.File in the lower layers and provide full Ruby          * compatibility, the number of extra slashes must be counted and          * prepended to the result.         */	WITHOUT_CLASSIFICATION	0.9999993323619649	WITHOUT_CLASSIFICATION	6.676380351181537E-7	IMPLEMENTATION
// This is almost always already interned, since it will be called with a symbol in most cases // but when created from Java code, we might get an argument that needs to be interned. // addAccessor has as a precondition that the string MUST be interned	WITHOUT_CLASSIFICATION	0.9999977322067125	WITHOUT_CLASSIFICATION	2.2677932874455897E-6	IMPLEMENTATION
/* not a class */	WITHOUT_CLASSIFICATION	0.9998919878513429	WITHOUT_CLASSIFICATION	1.0801214865712861E-4	IMPLEMENTATION
/* not a class */	WITHOUT_CLASSIFICATION	0.9998919878513429	WITHOUT_CLASSIFICATION	1.0801214865712861E-4	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999331998997838	WITHOUT_CLASSIFICATION	6.680010021616341E-5	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999331998997838	WITHOUT_CLASSIFICATION	6.680010021616341E-5	IMPLEMENTATION
// io.available() only returns 0 after EOF is encountered // so we need to differentiate between the empty string and EOF	WITHOUT_CLASSIFICATION	0.9999852596986134	WITHOUT_CLASSIFICATION	1.4740301386712946E-5	IMPLEMENTATION
// In the current logic, if we get here we know that module is not an // IncludedModuleWrapper, so there's no need to fish out the delegate. But just // in case the logic should change later, let's do it anyway	WITHOUT_CLASSIFICATION	0.9999953623664062	WITHOUT_CLASSIFICATION	4.637633593821606E-6	IMPLEMENTATION
// rb_iterate((VALUE(*)_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);	WITHOUT_CLASSIFICATION	0.9998431448603439	WITHOUT_CLASSIFICATION	1.568551396561232E-4	IMPLEMENTATION
// Broken symlinks considered by exists() as non-existing, // so we need to check for symlinks explicitly.	WITHOUT_CLASSIFICATION	0.999898614416424	WITHOUT_CLASSIFICATION	1.0138558357592197E-4	IMPLEMENTATION
// ////////////////// CONSTANT API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999940279768162	WITHOUT_CLASSIFICATION	5.972023183787332E-6	IMPLEMENTATION
// create the default thread group	WITHOUT_CLASSIFICATION	0.9999928970672147	WITHOUT_CLASSIFICATION	7.102932785278908E-6	IMPLEMENTATION
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9998377444594869	WITHOUT_CLASSIFICATION	1.622555405130861E-4	IMPLEMENTATION
/* ============================     * Here are hash internals     * (This could be extracted to a separate class but it's not too large though)     * ============================     */	WITHOUT_CLASSIFICATION	0.9999659626913179	WITHOUT_CLASSIFICATION	3.40373086822186E-5	IMPLEMENTATION
// ////////////////// LOW-LEVEL CLASS VARIABLE INTERFACE //////////////// // // fetch/store/list class variables for this module //	WITHOUT_CLASSIFICATION	0.9999987543876725	WITHOUT_CLASSIFICATION	1.245612327514412E-6	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.999940806203757	WITHOUT_CLASSIFICATION	5.919379624291069E-5	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.999940806203757	WITHOUT_CLASSIFICATION	5.919379624291069E-5	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999399026019634	WITHOUT_CLASSIFICATION	6.009739803645304E-5	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999399026019634	WITHOUT_CLASSIFICATION	6.009739803645304E-5	IMPLEMENTATION
// retuns null when not found to avoid unnecessary getRuntime().getNil() call	WITHOUT_CLASSIFICATION	0.9999405008019981	WITHOUT_CLASSIFICATION	5.9499198001782214E-5	IMPLEMENTATION
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999901150943715	WITHOUT_CLASSIFICATION	9.884905628450177E-6	IMPLEMENTATION
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.999779971725086	WITHOUT_CLASSIFICATION	2.2002827491392825E-4	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999347956301847	WITHOUT_CLASSIFICATION	6.520436981527308E-5	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999347956301847	WITHOUT_CLASSIFICATION	6.520436981527308E-5	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999347956301847	WITHOUT_CLASSIFICATION	6.520436981527308E-5	IMPLEMENTATION
// line 286	WITHOUT_CLASSIFICATION	0.9997924835919404	WITHOUT_CLASSIFICATION	2.075164080596685E-4	IMPLEMENTATION
// line 476	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 513	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 530	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 533	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 537	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 551	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// end loop	WITHOUT_CLASSIFICATION	0.9998508939435347	WITHOUT_CLASSIFICATION	1.4910605646540086E-4	IMPLEMENTATION
// MRI behavior: we don't print errno for actual Errno errors	WITHOUT_CLASSIFICATION	0.9999294811511704	WITHOUT_CLASSIFICATION	7.05188488295912E-5	IMPLEMENTATION
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999328769594132	WITHOUT_CLASSIFICATION	6.712304058681383E-5	IMPLEMENTATION
// Traverse the instructions in this basic block in reverse order! // Mark as dead all instructions whose results are not used! 	WITHOUT_CLASSIFICATION	0.9999633521338129	WITHOUT_CLASSIFICATION	3.6647866187043685E-5	IMPLEMENTATION
// // fields should really be an immutable map as it is never modified after construction //	WITHOUT_CLASSIFICATION	0.999830879032144	WITHOUT_CLASSIFICATION	1.6912096785599883E-4	IMPLEMENTATION
// load self object as IRubyObject, for recv param	WITHOUT_CLASSIFICATION	0.9999372994100976	WITHOUT_CLASSIFICATION	6.270058990249322E-5	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.930785924680244	WITHOUT_CLASSIFICATION	0.06921407531975601	IMPLEMENTATION
// If we define a class in Ruby, but later want to allow it to be defined in Java, // the allocator needs to be updated	WITHOUT_CLASSIFICATION	0.9999569057831967	WITHOUT_CLASSIFICATION	4.3094216803257155E-5	IMPLEMENTATION
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9999501830873001	WITHOUT_CLASSIFICATION	4.9816912699851215E-5	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9998853991797718	WITHOUT_CLASSIFICATION	1.1460082022819067E-4	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.999779971725086	WITHOUT_CLASSIFICATION	2.2002827491392825E-4	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9954051700357455	WITHOUT_CLASSIFICATION	0.004594829964254475	IMPLEMENTATION
// MRI has extra pointer which makes our code look a little bit // more strange in // comparison	WITHOUT_CLASSIFICATION	0.9998682238511077	WITHOUT_CLASSIFICATION	1.3177614889235592E-4	IMPLEMENTATION
// Tempory buffer to build up a potential token.  Consumer takes responsibility to reset  // this before use.	WITHOUT_CLASSIFICATION	0.99989532703256	WITHOUT_CLASSIFICATION	1.0467296744005788E-4	IMPLEMENTATION
//tmpPosition is required because getPosition()'s side effects. //if the warning is generated, the getPosition() on line 954 (this line + 18) will create //a wrong position if the "inclusive" flag is not set.	WITHOUT_CLASSIFICATION	0.9999860950126159	WITHOUT_CLASSIFICATION	1.3904987384187209E-5	IMPLEMENTATION
/* What is \v in C?                    case '\v':                        c2 = 'v';                        break;                        */	WITHOUT_CLASSIFICATION	0.9999572775425463	WITHOUT_CLASSIFICATION	4.2722457453729684E-5	IMPLEMENTATION
/* Consider Thread aspects of this */	WITHOUT_CLASSIFICATION	0.9998714576081329	WITHOUT_CLASSIFICATION	1.2854239186718496E-4	IMPLEMENTATION
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999954835119139	WITHOUT_CLASSIFICATION	4.516488086067922E-6	IMPLEMENTATION
// An interrupt or timeout may have caused us to miss // a notify that we consumed, so do another notify in // case someone else is available to pick it up.	WITHOUT_CLASSIFICATION	0.999978718346853	WITHOUT_CLASSIFICATION	2.1281653146910405E-5	IMPLEMENTATION
// line 572	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 601	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 601	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 625	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 649	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 691	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 723	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 732	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 745	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 766	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 785	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 794	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 800	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 812	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 827	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 839	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 845	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 864	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 886	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 896	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 911	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 929	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 952	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 970	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 972	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 991	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 1011	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1026	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1038	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1067	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1085	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1097	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1105	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1122	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1133	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1145	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1169	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1201	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1210	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1229	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1261	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1287	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1293	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1307	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1320	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1325	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1363	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1398	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1448	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1456	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1473	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1492	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1513	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1523	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1562	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1582	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1603	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1603	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1615	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1620	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1635	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1652	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1681	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1708	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1716	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1755	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1772	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1789	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9997847494848345	WITHOUT_CLASSIFICATION	2.152505151654632E-4	IMPLEMENTATION
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9997847494848345	WITHOUT_CLASSIFICATION	2.152505151654632E-4	IMPLEMENTATION
/* force for args */	WITHOUT_CLASSIFICATION	0.9998060379190695	WITHOUT_CLASSIFICATION	1.9396208093037587E-4	IMPLEMENTATION
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9998283151711349	WITHOUT_CLASSIFICATION	1.7168482886516147E-4	IMPLEMENTATION
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9999158386568994	WITHOUT_CLASSIFICATION	8.416134310057456E-5	IMPLEMENTATION
// We can assign if we already have variable of that name here or we are the only // scope in the chain (which Local scopes always are).	WITHOUT_CLASSIFICATION	0.9999868168043029	WITHOUT_CLASSIFICATION	1.3183195697115984E-5	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999779059545986	WITHOUT_CLASSIFICATION	2.209404540143046E-5	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999779059545986	WITHOUT_CLASSIFICATION	2.209404540143046E-5	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999779059545986	WITHOUT_CLASSIFICATION	2.209404540143046E-5	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999779059545986	WITHOUT_CLASSIFICATION	2.209404540143046E-5	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9998320997429405	WITHOUT_CLASSIFICATION	1.6790025705955958E-4	IMPLEMENTATION
/*     * This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:)     * into individual whenNodes.  The primary reason for this is to ensure lazy evaluation of     * the arguments (when foo,bar,gar:) to prevent side-effects.  In the old code this was done     * using nested when statements, which was awful for interpreter and compilation.     *     * Notes: This has semantic equivalence but will not be lexically equivalent.  Compiler     * needs to detect same bodies to simplify bytecode generated.     */	WITHOUT_CLASSIFICATION	0.9999924162578795	WITHOUT_CLASSIFICATION	7.583742120521052E-6	IMPLEMENTATION
// line 313	WITHOUT_CLASSIFICATION	0.9997923708188575	WITHOUT_CLASSIFICATION	2.0762918114260276E-4	IMPLEMENTATION
// line 339	WITHOUT_CLASSIFICATION	0.9997922677728625	WITHOUT_CLASSIFICATION	2.077322271375337E-4	IMPLEMENTATION
// line 361	WITHOUT_CLASSIFICATION	0.9997922677728625	WITHOUT_CLASSIFICATION	2.077322271375337E-4	IMPLEMENTATION
// line 413	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 451	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 472	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 500	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 515	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 555	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 582	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 619	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 636	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 669	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 703	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 776	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 814	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 823	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 854	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 872	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 905	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 925	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 958	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 992	WITHOUT_CLASSIFICATION	0.999792199047128	WITHOUT_CLASSIFICATION	2.078009528719855E-4	IMPLEMENTATION
// line 1047	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1072	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1081	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1108	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1136	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1168	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1192	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1241	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1267	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1286	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1301	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1314	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1333	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1362	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1395	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1420	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1439	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1476	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1535	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1588	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1618	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1643	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1669	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1728	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1753	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1779	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1794	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1812	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1837	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1895	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1925	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1950	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 1992	WITHOUT_CLASSIFICATION	0.9997922050385397	WITHOUT_CLASSIFICATION	2.0779496146024968E-4	IMPLEMENTATION
// line 2014	WITHOUT_CLASSIFICATION	0.999792312911833	WITHOUT_CLASSIFICATION	2.076870881668492E-4	IMPLEMENTATION
// Whether this scope is used as the "argument scope" for e.g. zsuper	WITHOUT_CLASSIFICATION	0.9999212621330958	WITHOUT_CLASSIFICATION	7.873786690407613E-5	IMPLEMENTATION
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.999969779131386	WITHOUT_CLASSIFICATION	3.022086861404293E-5	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999528487555693	WITHOUT_CLASSIFICATION	4.715124443078597E-5	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999528487555693	WITHOUT_CLASSIFICATION	4.715124443078597E-5	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999528487555693	WITHOUT_CLASSIFICATION	4.715124443078597E-5	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999528487555693	WITHOUT_CLASSIFICATION	4.715124443078597E-5	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999528487555693	WITHOUT_CLASSIFICATION	4.715124443078597E-5	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999528487555693	WITHOUT_CLASSIFICATION	4.715124443078597E-5	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999528487555693	WITHOUT_CLASSIFICATION	4.715124443078597E-5	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999495076235488	WITHOUT_CLASSIFICATION	5.049237645104033E-5	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999495076235488	WITHOUT_CLASSIFICATION	5.049237645104033E-5	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999495076235488	WITHOUT_CLASSIFICATION	5.049237645104033E-5	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999495076235488	WITHOUT_CLASSIFICATION	5.049237645104033E-5	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9998889202408322	WITHOUT_CLASSIFICATION	1.1107975916782996E-4	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9998889202408322	WITHOUT_CLASSIFICATION	1.1107975916782996E-4	IMPLEMENTATION
// We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the // 'b' will get put into this new dynamic scope.  The original scope does not see the new // 'b' and successive evals with this binding will.  I take it having the ability to have  // succesive binding evals be able to share same scope makes sense from a programmers  // perspective.   One crappy outcome of this design is it requires Dynamic and Static  // scopes to be mutable for this one case.	WITHOUT_CLASSIFICATION	0.9999998899963513	WITHOUT_CLASSIFICATION	1.1000364862685973E-7	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.999959750062128	WITHOUT_CLASSIFICATION	4.0249937871971566E-5	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.999959750062128	WITHOUT_CLASSIFICATION	4.0249937871971566E-5	IMPLEMENTATION
// tc // under method // self // under method // name // args	WITHOUT_CLASSIFICATION	0.999884080288221	WITHOUT_CLASSIFICATION	1.1591971177897575E-4	IMPLEMENTATION
// allow it to bubble up	WITHOUT_CLASSIFICATION	0.9998465582488485	WITHOUT_CLASSIFICATION	1.534417511515258E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999056531294876	WITHOUT_CLASSIFICATION	9.434687051232762E-5	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999056531294876	WITHOUT_CLASSIFICATION	9.434687051232762E-5	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999056531294876	WITHOUT_CLASSIFICATION	9.434687051232762E-5	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999056531294876	WITHOUT_CLASSIFICATION	9.434687051232762E-5	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999056531294876	WITHOUT_CLASSIFICATION	9.434687051232762E-5	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999056531294876	WITHOUT_CLASSIFICATION	9.434687051232762E-5	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999056531294876	WITHOUT_CLASSIFICATION	9.434687051232762E-5	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999017175681971	WITHOUT_CLASSIFICATION	9.828243180288595E-5	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998997308288514	WITHOUT_CLASSIFICATION	1.0026917114848537E-4	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999017471575002	WITHOUT_CLASSIFICATION	9.825284249980959E-5	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999017471575002	WITHOUT_CLASSIFICATION	9.825284249980959E-5	IMPLEMENTATION
// Check for a builtin first.	WITHOUT_CLASSIFICATION	0.9999443016343976	WITHOUT_CLASSIFICATION	5.56983656023678E-5	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999219962370767	WITHOUT_CLASSIFICATION	7.800376292339833E-5	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999219962370767	WITHOUT_CLASSIFICATION	7.800376292339833E-5	IMPLEMENTATION
// Unfortunately, the number of digits in the exponent is // not clearly defined in Ruby documentation. This is a // platform/version-dependent behavior. On Linux/Mac/Cygwin/*nix, // two digits are used. On Windows, 3 digits are used. // It is desirable for JRuby to have consistent behavior, and // the two digits behavior was selected. This is also in sync // with "Java-native" sprintf behavior (java.util.Formatter). // E or e	WITHOUT_CLASSIFICATION	0.9999962426294238	WITHOUT_CLASSIFICATION	3.757370576327377E-6	IMPLEMENTATION
/** * Represents the the dynamic portion of scoping information.  The variableValues are the * values of assigned local or block variables.  The staticScope identifies which sort of * scope this is (block or local). *  * Properties of Dynamic Scopes: * 1. static and dynamic scopes have the same number of names to values * 2. size of variables (and thus names) is determined during parsing.  So those structured do *    not need to change * * FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents.  This * is harmless (other than wasting memory), but we should not do that.  We can fix this in two * ways: * 1. Fix all callers * 2. Check parent that is passed in and make if new instance is local, then its parent is not local */	WITHOUT_CLASSIFICATION	0.9999969955753469	WITHOUT_CLASSIFICATION	3.0044246530321E-6	IMPLEMENTATION
// This method handles '**/' patterns and delegates to // fnmatch_helper for the main work.	WITHOUT_CLASSIFICATION	0.9999143071499529	WITHOUT_CLASSIFICATION	8.569285004709466E-5	IMPLEMENTATION
// Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern  // Example: foo{a{c},b}bar -> fooa{c}bar, foobbar	WITHOUT_CLASSIFICATION	0.9998589038494247	WITHOUT_CLASSIFICATION	1.4109615057527375E-4	IMPLEMENTATION
// double precision, native // double precision, native	WITHOUT_CLASSIFICATION	0.9999390670872441	WITHOUT_CLASSIFICATION	6.093291275596534E-5	IMPLEMENTATION
// 64-bit number, native (as bignum)	WITHOUT_CLASSIFICATION	0.9997709194151747	WITHOUT_CLASSIFICATION	2.2908058482537681E-4	IMPLEMENTATION
// Next indicates to decode using native encoding format	WITHOUT_CLASSIFICATION	0.9998578155699477	WITHOUT_CLASSIFICATION	1.4218443005221642E-4	IMPLEMENTATION
// calculate based on a, b, c and d	WITHOUT_CLASSIFICATION	0.9999158964157978	WITHOUT_CLASSIFICATION	8.410358420217786E-5	IMPLEMENTATION
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999428078052056	WITHOUT_CLASSIFICATION	5.7192194794458325E-5	IMPLEMENTATION
// MRI behavior:  for 'Q', do not add trailing nils	WITHOUT_CLASSIFICATION	0.9999175047334387	WITHOUT_CLASSIFICATION	8.249526656131472E-5	IMPLEMENTATION
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9999133493253386	WITHOUT_CLASSIFICATION	8.665067466142458E-5	IMPLEMENTATION
// exec needs to behave differently in-process, because it's technically // supposed to replace the calling process. So if we're supposed to run // in-process, we allow it to use the default streams and not use // pumpers at all. See JRUBY-2156 and JRUBY-2154.	WITHOUT_CLASSIFICATION	0.9999792312374579	WITHOUT_CLASSIFICATION	2.07687625420309E-5	IMPLEMENTATION
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999926828538471	WITHOUT_CLASSIFICATION	7.317146152862539E-6	IMPLEMENTATION
// The problem we trying to solve below: STDIN in Java // is blocked and non-interruptible, so if we invoke read // on it, we might never be able to interrupt such thread. // So, we use in.available() to see if there is any input // ready, and only then read it. But this approach can't // tell whether the end of stream reached or not, so we // might end up looping right at the end of the stream. // Well, at least, we can improve the situation by checking // if some input was ever available, and if so, not // checking for available anymore, and just go to read.	WITHOUT_CLASSIFICATION	0.9999998250359967	WITHOUT_CLASSIFICATION	1.7496400342739627E-7	IMPLEMENTATION
// first digit is always printed	WITHOUT_CLASSIFICATION	0.999927576642739	WITHOUT_CLASSIFICATION	7.242335726105916E-5	IMPLEMENTATION
// an empirically derived rule: precision applies to // significand length, irrespective of exponent	WITHOUT_CLASSIFICATION	0.9998933834471175	WITHOUT_CLASSIFICATION	1.0661655288244322E-4	IMPLEMENTATION
// an official rule, clarified: if the exponent // <clarif>after adjusting for exponent form</clarif> // is < -4,  or the exponent <clarif>after adjusting  // for exponent form</clarif> is greater than the // precision, use exponent form	WITHOUT_CLASSIFICATION	0.9999768835016025	WITHOUT_CLASSIFICATION	2.311649839748657E-5	IMPLEMENTATION
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.999899462296293	WITHOUT_CLASSIFICATION	1.0053770370696212E-4	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9998170843819023	WITHOUT_CLASSIFICATION	1.829156180976807E-4	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9998170843819023	WITHOUT_CLASSIFICATION	1.829156180976807E-4	IMPLEMENTATION
// MRI behavior: validate only the unnumbered arguments	WITHOUT_CLASSIFICATION	0.9998764557631261	WITHOUT_CLASSIFICATION	1.2354423687383978E-4	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9998279781927543	WITHOUT_CLASSIFICATION	1.720218072457648E-4	IMPLEMENTATION
// calculation for simple (and typical) case, // adapted from sun.misc.FloatingDecimal	WITHOUT_CLASSIFICATION	0.9998556804110956	WITHOUT_CLASSIFICATION	1.4431958890434663E-4	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9957816756494063	WITHOUT_CLASSIFICATION	0.0042183243505936495	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9997799923283781	WITHOUT_CLASSIFICATION	2.200076716218906E-4	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9997799923283781	WITHOUT_CLASSIFICATION	2.200076716218906E-4	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9997799923283781	WITHOUT_CLASSIFICATION	2.200076716218906E-4	IMPLEMENTATION
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9998997199926468	WITHOUT_CLASSIFICATION	1.0028000735314519E-4	IMPLEMENTATION
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9998976313660869	WITHOUT_CLASSIFICATION	1.0236863391306496E-4	IMPLEMENTATION
// call chmod after we created the RandomAccesFile // because otherwise, the file could be read-only	WITHOUT_CLASSIFICATION	0.9999406313209509	WITHOUT_CLASSIFICATION	5.936867904912774E-5	IMPLEMENTATION
// attempt to set the permissions, if we have been passed a POSIX instance, // and only if the file was created in this call.	WITHOUT_CLASSIFICATION	0.9999968959520682	WITHOUT_CLASSIFICATION	3.1040479317085094E-6	IMPLEMENTATION
// // When reading into a heap buffer, the jvm allocates a temporary // direct ByteBuffer of the requested size.  To avoid allocating // a huge direct buffer when doing ludicrous reads (e.g. 1G or more) // we split the read up into chunks of no more than 1M //	WITHOUT_CLASSIFICATION	0.9999647598653234	WITHOUT_CLASSIFICATION	3.524013467662424E-5	IMPLEMENTATION
// // If it is a file channel, then we can pre-allocate the output buffer // to the total size of buffered + remaining bytes in file //	WITHOUT_CLASSIFICATION	0.99995174513145	WITHOUT_CLASSIFICATION	4.825486855000033E-5	IMPLEMENTATION
// // Cannot discern the total read length - allocate at least enough for the buffered data //	WITHOUT_CLASSIFICATION	0.9999330309025299	WITHOUT_CLASSIFICATION	6.696909747002743E-5	IMPLEMENTATION
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999603909584848	WITHOUT_CLASSIFICATION	3.960904151521087E-5	IMPLEMENTATION
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999309506458531	WITHOUT_CLASSIFICATION	6.904935414694552E-5	IMPLEMENTATION
// already have some bytes buffered, just return those	WITHOUT_CLASSIFICATION	0.9999736443357194	WITHOUT_CLASSIFICATION	2.6355664280564516E-5	IMPLEMENTATION
// reset buffer	WITHOUT_CLASSIFICATION	0.999872150683136	WITHOUT_CLASSIFICATION	1.2784931686406014E-4	IMPLEMENTATION
// // Synchronize and re-check to avoid creating more than one Selector per provider //	WITHOUT_CLASSIFICATION	0.9998548071560551	WITHOUT_CLASSIFICATION	1.4519284394491546E-4	IMPLEMENTATION
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.8286120971370047	WITHOUT_CLASSIFICATION	0.1713879028629954	IMPLEMENTATION
// Is there something built into JRuby to do this?	WITHOUT_CLASSIFICATION	0.9998434626386323	WITHOUT_CLASSIFICATION	1.5653736136757301E-4	IMPLEMENTATION
// Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long // assertTrue(value == valueViaValuesIterator);	WITHOUT_CLASSIFICATION	0.9999918462445794	WITHOUT_CLASSIFICATION	8.153755420670953E-6	IMPLEMENTATION
// value equality //result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); //assertEquals("two", result);	WITHOUT_CLASSIFICATION	0.9999253049226136	WITHOUT_CLASSIFICATION	7.469507738644025E-5	IMPLEMENTATION
// Uncomment the "puts" lines if you want to see more detail	WITHOUT_CLASSIFICATION	0.9998995957616642	WITHOUT_CLASSIFICATION	1.0040423833580898E-4	IMPLEMENTATION
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999957291931872	WITHOUT_CLASSIFICATION	4.270806812855067E-6	IMPLEMENTATION
// change the thread context to include the class	WITHOUT_CLASSIFICATION	0.9998910272999816	WITHOUT_CLASSIFICATION	1.0897270001848305E-4	IMPLEMENTATION
