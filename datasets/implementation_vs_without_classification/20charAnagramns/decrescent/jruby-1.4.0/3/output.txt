// TODO: warn "tried to create Proc object without a block"	IMPLEMENTATION	0.9650926055045593	WITHOUT_CLASSIFICATION	0.03490739449544078	IMPLEMENTATION
// TODO: CLONE_SETUP here	IMPLEMENTATION	0.8668382923681445	WITHOUT_CLASSIFICATION	0.13316170763185564	IMPLEMENTATION
// TODO: Someday, enable.	IMPLEMENTATION	0.8743097929575331	WITHOUT_CLASSIFICATION	0.12569020704246686	IMPLEMENTATION
// Bunch of methods still not implemented	IMPLEMENTATION	0.5719839935585893	IMPLEMENTATION	0.4280160064414108	WITHOUT_CLASSIFICATION
// TODO: non-strict option	IMPLEMENTATION	0.8240777670537228	WITHOUT_CLASSIFICATION	0.17592223294627715	IMPLEMENTATION
// TODO: opt for 2 and 3 ?	IMPLEMENTATION	0.9025736298527796	WITHOUT_CLASSIFICATION	0.09742637014722041	IMPLEMENTATION
// FIXME: Should we make this work with platform's locale, // or continue hardcoding US?	IMPLEMENTATION	0.9997068045722264	WITHOUT_CLASSIFICATION	2.9319542777361254E-4	IMPLEMENTATION
// TODO: rescan code range ?	IMPLEMENTATION	0.9082949040845757	WITHOUT_CLASSIFICATION	0.09170509591542429	IMPLEMENTATION
// TODO: rescan code range ?	IMPLEMENTATION	0.9082949040845757	WITHOUT_CLASSIFICATION	0.09170509591542429	IMPLEMENTATION
// TODO: pass this in?	IMPLEMENTATION	0.8754070263904785	WITHOUT_CLASSIFICATION	0.12459297360952142	IMPLEMENTATION
// FIXME: Pass block down?	IMPLEMENTATION	0.9997289737250165	WITHOUT_CLASSIFICATION	2.7102627498358213E-4	IMPLEMENTATION
// TODO: do something here?	IMPLEMENTATION	0.6422473307113115	WITHOUT_CLASSIFICATION	0.35775266928868854	IMPLEMENTATION
// TODO: port exact behavior from MRI, and move most locking logic into ChannelDescriptor // TODO: for all LOCK_NB cases, return false if they would block	IMPLEMENTATION	0.9041426584407235	WITHOUT_CLASSIFICATION	0.09585734155927644	IMPLEMENTATION
// TODO: check if too many open files, GC and try again	IMPLEMENTATION	0.6061322146833756	WITHOUT_CLASSIFICATION	0.3938677853166243	IMPLEMENTATION
//TODO deal with UNC names	IMPLEMENTATION	0.9997474043018109	WITHOUT_CLASSIFICATION	2.5259569818916955E-4	IMPLEMENTATION
// FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.999535005300836	WITHOUT_CLASSIFICATION	4.649946991640575E-4	IMPLEMENTATION
//FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.9996543105026102	WITHOUT_CLASSIFICATION	3.456894973897933E-4	IMPLEMENTATION
// TODO: SafeStringValue here	IMPLEMENTATION	0.8709850834978802	WITHOUT_CLASSIFICATION	0.12901491650211983	IMPLEMENTATION
// TODO: turn off readable? am I reading this right? // This only seems to be used while duping below, since modes gets // reset to actual modes afterward //fptr->mode &= (m & FMODE_READABLE) ? ~FMODE_READABLE : ~FMODE_WRITABLE;	IMPLEMENTATION	0.9746866938560287	WITHOUT_CLASSIFICATION	0.025313306143971353	IMPLEMENTATION
// TODO: check safe, taint on incoming string	IMPLEMENTATION	0.5901886022054178	WITHOUT_CLASSIFICATION	0.4098113977945822	IMPLEMENTATION
// TODO: pipe handler to be reopened with path and "w" mode	IMPLEMENTATION	0.926889709215991	WITHOUT_CLASSIFICATION	0.07311029078400906	IMPLEMENTATION
// FIXME: add text mode to mode flags	IMPLEMENTATION	0.9998117764266541	WITHOUT_CLASSIFICATION	1.8822357334597373E-4	IMPLEMENTATION
// TODO: Something about pipe buffer length here	IMPLEMENTATION	0.9153998925059625	WITHOUT_CLASSIFICATION	0.0846001074940374	IMPLEMENTATION
// TODO: handle errors in buffered write by retrying until finished or file is closed	IMPLEMENTATION	0.6653951770299489	IMPLEMENTATION	0.3346048229700511	WITHOUT_CLASSIFICATION
// TODO: notify threads waiting on descriptors/IO? probably not...	IMPLEMENTATION	0.8087341418330828	WITHOUT_CLASSIFICATION	0.19126585816691716	IMPLEMENTATION
// TODO: Ruby re-checks that the buffer string hasn't been modified	IMPLEMENTATION	0.9091819486766666	WITHOUT_CLASSIFICATION	0.09081805132333343	IMPLEMENTATION
// TODO: Ruby unlocks the string here	IMPLEMENTATION	0.8925140742459219	WITHOUT_CLASSIFICATION	0.10748592575407817	IMPLEMENTATION
// TODO: Ruby truncates string to specific size here, but our bytelist should handle this already?	IMPLEMENTATION	0.8496363423413583	WITHOUT_CLASSIFICATION	0.15036365765864168	IMPLEMENTATION
// TODO: Ruby unlocks the string here	IMPLEMENTATION	0.8925140742459219	WITHOUT_CLASSIFICATION	0.10748592575407817	IMPLEMENTATION
// TODO: Ruby truncates string to specific size here, but our bytelist should handle this already?	IMPLEMENTATION	0.8496363423413583	WITHOUT_CLASSIFICATION	0.15036365765864168	IMPLEMENTATION
// TODO: ruby locks the string here	IMPLEMENTATION	0.9591061025511499	WITHOUT_CLASSIFICATION	0.04089389744885008	IMPLEMENTATION
// TODO same zero-length checks as file above	IMPLEMENTATION	0.9835760120081461	WITHOUT_CLASSIFICATION	0.0164239879918538	IMPLEMENTATION
// TODO: MRI also can hadle Bignum here	IMPLEMENTATION	0.8405064019388336	WITHOUT_CLASSIFICATION	0.15949359806116642	IMPLEMENTATION
// TODO: make threadsafe	IMPLEMENTATION	0.8961265867654182	WITHOUT_CLASSIFICATION	0.10387341323458173	IMPLEMENTATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9329595252187323	WITHOUT_CLASSIFICATION	0.06704047478126776	IMPLEMENTATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9329595252187323	WITHOUT_CLASSIFICATION	0.06704047478126776	IMPLEMENTATION
// FIXME: create AttrReaderMethod, AttrWriterMethod, for faster attr access	IMPLEMENTATION	0.9998478883760671	WITHOUT_CLASSIFICATION	1.5211162393282112E-4	IMPLEMENTATION
// Do not clone cached methods // FIXME: MRI copies all methods here	IMPLEMENTATION	0.9998901118058235	WITHOUT_CLASSIFICATION	1.098881941764363E-4	IMPLEMENTATION
// TODO: don't calculate the same value 3 times	IMPLEMENTATION	0.9833954194904957	WITHOUT_CLASSIFICATION	0.016604580509504252	IMPLEMENTATION
// TODO: 3 times calculate the same value below	IMPLEMENTATION	0.9755230060111703	WITHOUT_CLASSIFICATION	0.024476993988829698	IMPLEMENTATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.8169414270184602	WITHOUT_CLASSIFICATION	0.1830585729815398	IMPLEMENTATION
// TODO: Store BEGIN and END information into this node	IMPLEMENTATION	0.9405686594167513	WITHOUT_CLASSIFICATION	0.05943134058324866	IMPLEMENTATION
// TODO: put these nil guards into tree (bigger than I want to do right now)	IMPLEMENTATION	0.838811261651196	WITHOUT_CLASSIFICATION	0.16118873834880396	IMPLEMENTATION
// FIXME: Make bodyNode non-null in parser	IMPLEMENTATION	0.9998025783043925	WITHOUT_CLASSIFICATION	1.9742169560762568E-4	IMPLEMENTATION
// TODO: call config with scope but no frame	IMPLEMENTATION	0.915246624066822	WITHOUT_CLASSIFICATION	0.08475337593317797	IMPLEMENTATION
// TODO: add trace call?	IMPLEMENTATION	0.7202397477808749	WITHOUT_CLASSIFICATION	0.2797602522191252	IMPLEMENTATION
// FIXME: missing arity check	IMPLEMENTATION	0.999745020881931	WITHOUT_CLASSIFICATION	2.549791180691269E-4	IMPLEMENTATION
// FIXME: optimize for cases where we have no false branch	IMPLEMENTATION	0.9998402984228326	WITHOUT_CLASSIFICATION	1.5970157716727168E-4	IMPLEMENTATION
// FIXME: after jump is not in here.  Will if ever be? //Label afterJmp = new Label();	IMPLEMENTATION	0.9998866802956896	WITHOUT_CLASSIFICATION	1.1331970431036279E-4	IMPLEMENTATION
// TODO: build arg list based on number of args, optionals, etc	IMPLEMENTATION	0.9622577109960817	WITHOUT_CLASSIFICATION	0.03774228900391826	IMPLEMENTATION
// FIXME: missing arity check	IMPLEMENTATION	0.999745020881931	WITHOUT_CLASSIFICATION	2.549791180691269E-4	IMPLEMENTATION
// SSS FIXME: Traverse up the scope hierarchy to find the constant as long as the parent is a static scope	IMPLEMENTATION	0.9999845711194436	WITHOUT_CLASSIFICATION	1.5428880556353367E-5	IMPLEMENTATION
// SSS FIXME: Should I be returning the operand constructed here?	IMPLEMENTATION	0.9998566484665425	WITHOUT_CLASSIFICATION	1.4335153345741404E-4	IMPLEMENTATION
// TODO: Add IR instructions for checking method arity! // s.getVariableCompiler().checkMethodArity(required, opt, rest);	IMPLEMENTATION	0.7825947236350494	WITHOUT_CLASSIFICATION	0.2174052763649505	IMPLEMENTATION
// FIXME: Ruby 1.9 post args code needs to come here	IMPLEMENTATION	0.9996528834026476	WITHOUT_CLASSIFICATION	3.471165973523519E-4	IMPLEMENTATION
// SSS: FIXME: Somewhere here, we need to record information the type of this operand as String	IMPLEMENTATION	0.9999270774529593	WITHOUT_CLASSIFICATION	7.292254704072894E-5	IMPLEMENTATION
// FIXME: Translate this call below! // s.unwrapPassedBlock();	IMPLEMENTATION	0.9997733255555962	WITHOUT_CLASSIFICATION	2.2667444440371666E-4	IMPLEMENTATION
// SSS FIXME: We need to build debug information tracking into the IR in some fashion // So, these methods below would have to have equivalents in IR_Scope implementations.	IMPLEMENTATION	0.9811918644769052	WITHOUT_CLASSIFICATION	0.01880813552309486	IMPLEMENTATION
// SSS FIXME: Incomplete!	IMPLEMENTATION	0.9997691328279799	WITHOUT_CLASSIFICATION	2.3086717202021247E-4	IMPLEMENTATION
// SSS FIXME: Pick one of bytelist or string, or add internal conversion methods to convert to the default representation	IMPLEMENTATION	0.9999849024996098	WITHOUT_CLASSIFICATION	1.5097500390298073E-5	IMPLEMENTATION
// SSS FIXME: To be done	IMPLEMENTATION	0.9998108081541051	WITHOUT_CLASSIFICATION	1.891918458949296E-4	IMPLEMENTATION
//TODO: implement, won't do this now	IMPLEMENTATION	0.7817538761147863	WITHOUT_CLASSIFICATION	0.2182461238852136	IMPLEMENTATION
//TODO: implement, won't do this now	IMPLEMENTATION	0.7817538761147863	WITHOUT_CLASSIFICATION	0.2182461238852136	IMPLEMENTATION
// TODO: validate port as numeric	IMPLEMENTATION	0.9776154396442036	WITHOUT_CLASSIFICATION	0.022384560355796373	IMPLEMENTATION
// TODO: this code should really check if a Ruby equals method is implemented or not.	IMPLEMENTATION	0.9777798472622135	IMPLEMENTATION	0.022220152737786568	WITHOUT_CLASSIFICATION
// if not already defined, we add a 'new' that guesses at which signature to use // TODO: just adding first one right now...add in signature-guessing logic	IMPLEMENTATION	0.9915186814301544	WITHOUT_CLASSIFICATION	0.008481318569845683	IMPLEMENTATION
// TODO: deal with varargs	IMPLEMENTATION	0.8960673007239905	WITHOUT_CLASSIFICATION	0.1039326992760095	IMPLEMENTATION
// TODO: deal with varargs	IMPLEMENTATION	0.8960673007239905	WITHOUT_CLASSIFICATION	0.1039326992760095	IMPLEMENTATION
// TODO: other reserved names?	IMPLEMENTATION	0.8818581595111215	WITHOUT_CLASSIFICATION	0.11814184048887857	IMPLEMENTATION
// TODO: we can probably release our references to the constantFields // array and static/instance callback hashes at this point. 	IMPLEMENTATION	0.9926354418108733	WITHOUT_CLASSIFICATION	0.007364558189126775	IMPLEMENTATION
// TODO: Formalize conversion mechanisms between Java and Ruby	IMPLEMENTATION	0.9422586897937485	WITHOUT_CLASSIFICATION	0.05774131020625155	IMPLEMENTATION
// XXX: Check if it's appropriate type?	IMPLEMENTATION	0.9997512458870065	WITHOUT_CLASSIFICATION	2.487541129934866E-4	IMPLEMENTATION
// TODO: call ruby method	IMPLEMENTATION	0.8826810431751106	WITHOUT_CLASSIFICATION	0.11731895682488938	IMPLEMENTATION
// TODO: call ruby method	IMPLEMENTATION	0.8826810431751106	WITHOUT_CLASSIFICATION	0.11731895682488938	IMPLEMENTATION
// TODO: Add safety check for taintedness	IMPLEMENTATION	0.8060137420080041	WITHOUT_CLASSIFICATION	0.19398625799199584	IMPLEMENTATION
// FIXME: Need to detect magic_comment in 1.9 here for encoding	IMPLEMENTATION	0.9996883216165274	WITHOUT_CLASSIFICATION	3.11678383472657E-4	IMPLEMENTATION
/* xxx shouldn't check if valid option variable */	IMPLEMENTATION	0.9998436646736293	WITHOUT_CLASSIFICATION	1.5633532637070158E-4	IMPLEMENTATION
// TODO: this isn't handling multibyte yet	IMPLEMENTATION	0.8172326552247489	WITHOUT_CLASSIFICATION	0.18276734477525125	IMPLEMENTATION
// TODO: This should be something else like a tCHAR	IMPLEMENTATION	0.873761055496709	IMPLEMENTATION	0.126238944503291	WITHOUT_CLASSIFICATION
// FIXME: \r logic needed	IMPLEMENTATION	0.9985327143259862	WITHOUT_CLASSIFICATION	0.0014672856740138836	IMPLEMENTATION
// TODO: note lack of command.com support for Win 9x...	IMPLEMENTATION	0.6876963047097634	WITHOUT_CLASSIFICATION	0.31230369529023666	IMPLEMENTATION
// FIXME: Make thread pool threads daemons if necessary	IMPLEMENTATION	0.9998059034112543	WITHOUT_CLASSIFICATION	1.9409658874565793E-4	IMPLEMENTATION
/* FIXME: We may be intern'ing more than once.*/	IMPLEMENTATION	0.9997619495136203	WITHOUT_CLASSIFICATION	2.3805048637959644E-4	IMPLEMENTATION
/* FIXME: We may be intern'ing more than once.*/	IMPLEMENTATION	0.9997619495136203	WITHOUT_CLASSIFICATION	2.3805048637959644E-4	IMPLEMENTATION
/* FIXME: arg_concat missing for opt_call_args*/	IMPLEMENTATION	0.9998232139730939	WITHOUT_CLASSIFICATION	1.7678602690614353E-4	IMPLEMENTATION
/* FIXME: arg_concat logic missing for opt_call_args*/	IMPLEMENTATION	0.9998270191551625	WITHOUT_CLASSIFICATION	1.7298084483752672E-4	IMPLEMENTATION
// FIXME: This needs to happen for lambdas //            args.checkArgCount(runtime, parameters.length);	IMPLEMENTATION	0.9997132490650786	WITHOUT_CLASSIFICATION	2.867509349213528E-4	IMPLEMENTATION
// FIXME: This needs to happen for lambdas //            args.checkArgCount(runtime, parameters.length);	IMPLEMENTATION	0.9997132490650786	WITHOUT_CLASSIFICATION	2.867509349213528E-4	IMPLEMENTATION
// TODO: make it cross runtime safe by COW or eager copy	IMPLEMENTATION	0.9015823842258068	WITHOUT_CLASSIFICATION	0.09841761577419313	IMPLEMENTATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.9998876791935667	WITHOUT_CLASSIFICATION	1.1232080643334707E-4	IMPLEMENTATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.9998876791935667	WITHOUT_CLASSIFICATION	1.1232080643334707E-4	IMPLEMENTATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.9998876791935667	WITHOUT_CLASSIFICATION	1.1232080643334707E-4	IMPLEMENTATION
// TODO: check the return value here	IMPLEMENTATION	0.891725006396455	IMPLEMENTATION	0.10827499360354502	WITHOUT_CLASSIFICATION
// TODO: check the return value here	IMPLEMENTATION	0.891725006396455	IMPLEMENTATION	0.10827499360354502	WITHOUT_CLASSIFICATION
// TODO: Make sure all appropriate open flags are added to this check.	IMPLEMENTATION	0.651648420488554	WITHOUT_CLASSIFICATION	0.34835157951144596	IMPLEMENTATION
//subList.clear(); // Sublist is supposed to share same backing store as list...TODO in RubyArray. //assertTrue(list.size() == 1);	IMPLEMENTATION	0.9998306618700238	WITHOUT_CLASSIFICATION	1.6933812997621552E-4	IMPLEMENTATION
// SSS FIXME: Cannot optimize this without assuming that Range.to_ary method has not redefined. // So for now, return null!	IMPLEMENTATION	0.9999141529128982	WITHOUT_CLASSIFICATION	8.584708710181513E-5	IMPLEMENTATION
// TODO Auto-generated method stub	IMPLEMENTATION	0.9999944202423365	IMPLEMENTATION	5.5797576634375296E-6	WITHOUT_CLASSIFICATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.9999394550017227	IMPLEMENTATION	6.0544998277394886E-5	WITHOUT_CLASSIFICATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.9999394550017227	IMPLEMENTATION	6.0544998277394886E-5	WITHOUT_CLASSIFICATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.9999394550017227	IMPLEMENTATION	6.0544998277394886E-5	WITHOUT_CLASSIFICATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.8169414270184602	WITHOUT_CLASSIFICATION	0.1830585729815398	IMPLEMENTATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.8169414270184602	WITHOUT_CLASSIFICATION	0.1830585729815398	IMPLEMENTATION
// TODO: check for ascii string	IMPLEMENTATION	0.669267018563955	WITHOUT_CLASSIFICATION	0.33073298143604507	IMPLEMENTATION
// filter out any Java primitive names // TODO: should check against all Java reserved names here, not just primitives	IMPLEMENTATION	0.9568184087178098	WITHOUT_CLASSIFICATION	0.043181591282190276	IMPLEMENTATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9329595252187323	WITHOUT_CLASSIFICATION	0.06704047478126776	IMPLEMENTATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9329595252187323	WITHOUT_CLASSIFICATION	0.06704047478126776	IMPLEMENTATION
// TODO: missing additional logic for dealing with conflicting protected fields.	IMPLEMENTATION	0.923382240262585	WITHOUT_CLASSIFICATION	0.07661775973741512	IMPLEMENTATION
// TODO: better detection when path is absolute or not. // If the path isn't absolute, then prepend the current working // directory to the path.	IMPLEMENTATION	0.9953026483909003	WITHOUT_CLASSIFICATION	0.004697351609099755	IMPLEMENTATION
// FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.999535005300836	WITHOUT_CLASSIFICATION	4.649946991640575E-4	IMPLEMENTATION
// FIX replace type() == ... with isInstanceOf(...)	IMPLEMENTATION	0.9998678885692025	WITHOUT_CLASSIFICATION	1.3211143079748522E-4	IMPLEMENTATION
/* TODO: MRI is just a when node.  We need this extra logic for IDE consumers (null in casenode statement should be implicit nil)*/	IMPLEMENTATION	0.9390705110517088	WITHOUT_CLASSIFICATION	0.06092948894829112	IMPLEMENTATION
// TODO: This and recacheRespondsTo needed to be synchronized for JRUBY-3466, // but this degraded performance nearly 2x. It's still faster than MRI, but // a reanalysis of this code may show a faster way to ensure we're caching // safely.	IMPLEMENTATION	0.5353520552254699	IMPLEMENTATION	0.4646479447745301	WITHOUT_CLASSIFICATION
// TODO: adjust length so it won't fall in the middle  // of a multi-byte character. MRI's sprintf.c uses tables // in a modified version of regex.c, which assume some // particular  encoding for a given installation/application. // (See regex.c#re_mbcinit in ruby-1.8.5-p12)  // // This is only an issue if the user specifies a precision // that causes the string to be truncated. The same issue // would arise taking a substring of a ByteList-backed RubyString.	IMPLEMENTATION	0.9992441936529065	WITHOUT_CLASSIFICATION	7.558063470933634E-4	IMPLEMENTATION
// set constants now that they're initialized	WITHOUT_CLASSIFICATION	0.9999638561168672	WITHOUT_CLASSIFICATION	3.614388313273197E-5	IMPLEMENTATION
// line 335	WITHOUT_CLASSIFICATION	0.9997668231303292	WITHOUT_CLASSIFICATION	2.3317686967070443E-4	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9997515399162304	WITHOUT_CLASSIFICATION	2.4846008376949665E-4	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9997515399162304	WITHOUT_CLASSIFICATION	2.4846008376949665E-4	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9997515399162304	WITHOUT_CLASSIFICATION	2.4846008376949665E-4	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9997515399162304	WITHOUT_CLASSIFICATION	2.4846008376949665E-4	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9997515399162304	WITHOUT_CLASSIFICATION	2.4846008376949665E-4	IMPLEMENTATION
// Figure end-char.  '\0' is special to indicate begin=end and that no nesting?	WITHOUT_CLASSIFICATION	0.9998591078254712	WITHOUT_CLASSIFICATION	1.4089217452882262E-4	IMPLEMENTATION
// line 362	WITHOUT_CLASSIFICATION	0.9997668231303292	WITHOUT_CLASSIFICATION	2.3317686967070443E-4	IMPLEMENTATION
// line 372	WITHOUT_CLASSIFICATION	0.9997668231303292	WITHOUT_CLASSIFICATION	2.3317686967070443E-4	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9997467600745884	WITHOUT_CLASSIFICATION	2.5323992541157695E-4	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9997467600745884	WITHOUT_CLASSIFICATION	2.5323992541157695E-4	IMPLEMENTATION
// line 391	WITHOUT_CLASSIFICATION	0.9997668231303292	WITHOUT_CLASSIFICATION	2.3317686967070443E-4	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9997467600745884	WITHOUT_CLASSIFICATION	2.5323992541157695E-4	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9997467600745884	WITHOUT_CLASSIFICATION	2.5323992541157695E-4	IMPLEMENTATION
/* ^D */	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
/* ^Z */	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9997515399162304	WITHOUT_CLASSIFICATION	2.4846008376949665E-4	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9997515399162304	WITHOUT_CLASSIFICATION	2.4846008376949665E-4	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9997515399162304	WITHOUT_CLASSIFICATION	2.4846008376949665E-4	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9997515399162304	WITHOUT_CLASSIFICATION	2.4846008376949665E-4	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9997515399162304	WITHOUT_CLASSIFICATION	2.4846008376949665E-4	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9997515399162304	WITHOUT_CLASSIFICATION	2.4846008376949665E-4	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9997515399162304	WITHOUT_CLASSIFICATION	2.4846008376949665E-4	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9997515399162304	WITHOUT_CLASSIFICATION	2.4846008376949665E-4	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9997515399162304	WITHOUT_CLASSIFICATION	2.4846008376949665E-4	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9997515399162304	WITHOUT_CLASSIFICATION	2.4846008376949665E-4	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9997515399162304	WITHOUT_CLASSIFICATION	2.4846008376949665E-4	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9997515399162304	WITHOUT_CLASSIFICATION	2.4846008376949665E-4	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9997515399162304	WITHOUT_CLASSIFICATION	2.4846008376949665E-4	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9997515399162304	WITHOUT_CLASSIFICATION	2.4846008376949665E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9997515399162304	WITHOUT_CLASSIFICATION	2.4846008376949665E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9997515399162304	WITHOUT_CLASSIFICATION	2.4846008376949665E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9997515399162304	WITHOUT_CLASSIFICATION	2.4846008376949665E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9997515399162304	WITHOUT_CLASSIFICATION	2.4846008376949665E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9997515399162304	WITHOUT_CLASSIFICATION	2.4846008376949665E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9997515399162304	WITHOUT_CLASSIFICATION	2.4846008376949665E-4	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9997467600745884	WITHOUT_CLASSIFICATION	2.5323992541157695E-4	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9997467600745884	WITHOUT_CLASSIFICATION	2.5323992541157695E-4	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9997467600745884	WITHOUT_CLASSIFICATION	2.5323992541157695E-4	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9997467600745884	WITHOUT_CLASSIFICATION	2.5323992541157695E-4	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9997467600745884	WITHOUT_CLASSIFICATION	2.5323992541157695E-4	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9997467600745884	WITHOUT_CLASSIFICATION	2.5323992541157695E-4	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9997467600745884	WITHOUT_CLASSIFICATION	2.5323992541157695E-4	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9997467600745884	WITHOUT_CLASSIFICATION	2.5323992541157695E-4	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9997467600745884	WITHOUT_CLASSIFICATION	2.5323992541157695E-4	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9997467600745884	WITHOUT_CLASSIFICATION	2.5323992541157695E-4	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9997467600745884	WITHOUT_CLASSIFICATION	2.5323992541157695E-4	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9997467600745884	WITHOUT_CLASSIFICATION	2.5323992541157695E-4	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9997467600745884	WITHOUT_CLASSIFICATION	2.5323992541157695E-4	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9997467600745884	WITHOUT_CLASSIFICATION	2.5323992541157695E-4	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9997467600745884	WITHOUT_CLASSIFICATION	2.5323992541157695E-4	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9997467600745884	WITHOUT_CLASSIFICATION	2.5323992541157695E-4	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9997467600745884	WITHOUT_CLASSIFICATION	2.5323992541157695E-4	IMPLEMENTATION
//Do nothing	WITHOUT_CLASSIFICATION	0.9999334392000016	WITHOUT_CLASSIFICATION	6.656079999853423E-5	IMPLEMENTATION
//Do nothing	WITHOUT_CLASSIFICATION	0.9999334392000016	WITHOUT_CLASSIFICATION	6.656079999853423E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.996228680588558	WITHOUT_CLASSIFICATION	0.003771319411441971	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.996228680588558	WITHOUT_CLASSIFICATION	0.003771319411441971	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.996228680588558	WITHOUT_CLASSIFICATION	0.003771319411441971	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.996228680588558	WITHOUT_CLASSIFICATION	0.003771319411441971	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.996228680588558	WITHOUT_CLASSIFICATION	0.003771319411441971	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.996228680588558	WITHOUT_CLASSIFICATION	0.003771319411441971	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.996228680588558	WITHOUT_CLASSIFICATION	0.003771319411441971	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.996228680588558	WITHOUT_CLASSIFICATION	0.003771319411441971	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.996228680588558	WITHOUT_CLASSIFICATION	0.003771319411441971	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.996228680588558	WITHOUT_CLASSIFICATION	0.003771319411441971	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.996228680588558	WITHOUT_CLASSIFICATION	0.003771319411441971	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.996228680588558	WITHOUT_CLASSIFICATION	0.003771319411441971	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.996228680588558	WITHOUT_CLASSIFICATION	0.003771319411441971	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.996228680588558	WITHOUT_CLASSIFICATION	0.003771319411441971	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.996228680588558	WITHOUT_CLASSIFICATION	0.003771319411441971	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.996228680588558	WITHOUT_CLASSIFICATION	0.003771319411441971	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.996228680588558	WITHOUT_CLASSIFICATION	0.003771319411441971	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.996228680588558	WITHOUT_CLASSIFICATION	0.003771319411441971	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.996228680588558	WITHOUT_CLASSIFICATION	0.003771319411441971	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.996228680588558	WITHOUT_CLASSIFICATION	0.003771319411441971	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.996228680588558	WITHOUT_CLASSIFICATION	0.003771319411441971	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.996228680588558	WITHOUT_CLASSIFICATION	0.003771319411441971	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.996228680588558	WITHOUT_CLASSIFICATION	0.003771319411441971	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.996228680588558	WITHOUT_CLASSIFICATION	0.003771319411441971	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.996228680588558	WITHOUT_CLASSIFICATION	0.003771319411441971	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.996228680588558	WITHOUT_CLASSIFICATION	0.003771319411441971	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.996228680588558	WITHOUT_CLASSIFICATION	0.003771319411441971	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.996228680588558	WITHOUT_CLASSIFICATION	0.003771319411441971	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.996228680588558	WITHOUT_CLASSIFICATION	0.003771319411441971	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.996228680588558	WITHOUT_CLASSIFICATION	0.003771319411441971	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.996228680588558	WITHOUT_CLASSIFICATION	0.003771319411441971	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.996228680588558	WITHOUT_CLASSIFICATION	0.003771319411441971	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.996228680588558	WITHOUT_CLASSIFICATION	0.003771319411441971	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.996228680588558	WITHOUT_CLASSIFICATION	0.003771319411441971	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.996228680588558	WITHOUT_CLASSIFICATION	0.003771319411441971	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.996228680588558	WITHOUT_CLASSIFICATION	0.003771319411441971	IMPLEMENTATION
// return result	WITHOUT_CLASSIFICATION	0.9999465283533763	WITHOUT_CLASSIFICATION	5.347164662373106E-5	IMPLEMENTATION
// name	WITHOUT_CLASSIFICATION	0.9962759897601723	WITHOUT_CLASSIFICATION	0.0037240102398276857	IMPLEMENTATION
// Define System.getProperties() in ENV_JAVA	WITHOUT_CLASSIFICATION	0.9999065544584854	WITHOUT_CLASSIFICATION	9.344554151461368E-5	IMPLEMENTATION
// Accessor methods.	WITHOUT_CLASSIFICATION	0.9998097919955582	WITHOUT_CLASSIFICATION	1.9020800444182392E-4	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9997677676745685	WITHOUT_CLASSIFICATION	2.3223232543140667E-4	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9997677676745685	WITHOUT_CLASSIFICATION	2.3223232543140667E-4	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9997677676745685	WITHOUT_CLASSIFICATION	2.3223232543140667E-4	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9997677676745685	WITHOUT_CLASSIFICATION	2.3223232543140667E-4	IMPLEMENTATION
// call getpwent to fail early if unsupported	WITHOUT_CLASSIFICATION	0.9998867866493495	WITHOUT_CLASSIFICATION	1.1321335065049989E-4	IMPLEMENTATION
// fall back on env entry for USER	WITHOUT_CLASSIFICATION	0.9998809120540915	WITHOUT_CLASSIFICATION	1.1908794590854116E-4	IMPLEMENTATION
// try to read grent to fail fast	WITHOUT_CLASSIFICATION	0.9999175602271319	WITHOUT_CLASSIFICATION	8.243977286818305E-5	IMPLEMENTATION
// define ARGV and $* for this runtime	WITHOUT_CLASSIFICATION	0.9999342880284161	WITHOUT_CLASSIFICATION	6.571197158386269E-5	IMPLEMENTATION
// Version information:	WITHOUT_CLASSIFICATION	0.9998810012123714	WITHOUT_CLASSIFICATION	1.1899878762862283E-4	IMPLEMENTATION
// after defn of $stderr as the call may produce warnings	WITHOUT_CLASSIFICATION	0.9999042743839707	WITHOUT_CLASSIFICATION	9.572561602933153E-5	IMPLEMENTATION
// ARGF, $< object	WITHOUT_CLASSIFICATION	0.9998068076742954	WITHOUT_CLASSIFICATION	1.9319232570461477E-4	IMPLEMENTATION
// if the environment variables can't be obtained, define an empty ENV	WITHOUT_CLASSIFICATION	0.9999593966314926	WITHOUT_CLASSIFICATION	4.0603368507374325E-5	IMPLEMENTATION
// On platforms without a c-library accessable through JNA, getpid will return hashCode  // as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing // $$ on getpid() where available, we have the same semantics as MRI.	WITHOUT_CLASSIFICATION	0.999981825746732	WITHOUT_CLASSIFICATION	1.8174253268074982E-5	IMPLEMENTATION
//$@ returns nil if $!.backtrace is not an array	WITHOUT_CLASSIFICATION	0.9999324277221096	WITHOUT_CLASSIFICATION	6.757227789039273E-5	IMPLEMENTATION
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9998817355651953	WITHOUT_CLASSIFICATION	1.1826443480466834E-4	IMPLEMENTATION
// MRI behavior: just plain '//' or '\\\\' are considered illegal on Windows.	WITHOUT_CLASSIFICATION	0.9998520644955448	WITHOUT_CLASSIFICATION	1.4793550445519165E-4	IMPLEMENTATION
// this _is_ legal (when removing an undef)	WITHOUT_CLASSIFICATION	0.9998516486355191	WITHOUT_CLASSIFICATION	1.4835136448090397E-4	IMPLEMENTATION
// What we passed to the constructor for method 'path'	WITHOUT_CLASSIFICATION	0.9999146317921801	WITHOUT_CLASSIFICATION	8.53682078199628E-5	IMPLEMENTATION
// ----- Ruby Class Methods ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999783884572643	WITHOUT_CLASSIFICATION	2.161154273575162E-5	IMPLEMENTATION
// // CONSTANT TABLE METHODS - pass to delegate //	WITHOUT_CLASSIFICATION	0.9998368049335433	WITHOUT_CLASSIFICATION	1.6319506645674181E-4	IMPLEMENTATION
// We get canonical path to try and flatten the path out. // a dir '/subdir/..' should return as '/' // cnutter: Do we want to flatten path out?	WITHOUT_CLASSIFICATION	0.9994948587391264	WITHOUT_CLASSIFICATION	5.051412608737024E-4	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9997677676745685	WITHOUT_CLASSIFICATION	2.3223232543140667E-4	IMPLEMENTATION
// ----- Ruby Instance Methods -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999811476330863	WITHOUT_CLASSIFICATION	1.8852366913667006E-5	IMPLEMENTATION
// Make sure any read()s after close fail.	WITHOUT_CLASSIFICATION	0.9999321770439646	WITHOUT_CLASSIFICATION	6.782295603532515E-5	IMPLEMENTATION
// ----- Helper Methods --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999834876914975	WITHOUT_CLASSIFICATION	1.6512308502555483E-5	IMPLEMENTATION
// try to use POSIX for this first	WITHOUT_CLASSIFICATION	0.999942665466756	WITHOUT_CLASSIFICATION	5.733453324386307E-5	IMPLEMENTATION
// otherwise fall back on the old way	WITHOUT_CLASSIFICATION	0.9998322593920094	WITHOUT_CLASSIFICATION	1.6774060799068066E-4	IMPLEMENTATION
// Proc class	WITHOUT_CLASSIFICATION	0.99982470058497	WITHOUT_CLASSIFICATION	1.7529941503003542E-4	IMPLEMENTATION
// No passed in block, lets check next outer frame for one ('Proc.new')	WITHOUT_CLASSIFICATION	0.9998874123575721	WITHOUT_CLASSIFICATION	1.1258764242802575E-4	IMPLEMENTATION
// modify the block with a new backref/lastline-grabbing scope	WITHOUT_CLASSIFICATION	0.9998704486599385	WITHOUT_CLASSIFICATION	1.2955134006154806E-4	IMPLEMENTATION
// for future compatibility as constructors move toward not accepting metaclass?	WITHOUT_CLASSIFICATION	0.9998346182480415	WITHOUT_CLASSIFICATION	1.6538175195840793E-4	IMPLEMENTATION
//        case RUBY_HYBRID: //            backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); //            break;	WITHOUT_CLASSIFICATION	0.999983070920916	WITHOUT_CLASSIFICATION	1.6929079084110225E-5	IMPLEMENTATION
// This looks wrong, but it's the way MRI does it.	WITHOUT_CLASSIFICATION	0.9999701720510458	WITHOUT_CLASSIFICATION	2.9827948954313157E-5	IMPLEMENTATION
// rb_exc_new3	WITHOUT_CLASSIFICATION	0.9997515399162304	WITHOUT_CLASSIFICATION	2.4846008376949665E-4	IMPLEMENTATION
// NOTE: The indicies here match exactly the signal values; do not reorder	WITHOUT_CLASSIFICATION	0.9999354153801948	WITHOUT_CLASSIFICATION	6.458461980520723E-5	IMPLEMENTATION
//registerThreadDumpSignalHandler(runtime);	WITHOUT_CLASSIFICATION	0.9998713743331481	WITHOUT_CLASSIFICATION	1.2862566685190963E-4	IMPLEMENTATION
// IOT is also 6	WITHOUT_CLASSIFICATION	0.9997594800509775	WITHOUT_CLASSIFICATION	2.4051994902243507E-4	IMPLEMENTATION
// CLD is also 20	WITHOUT_CLASSIFICATION	0.9997594800509775	WITHOUT_CLASSIFICATION	2.4051994902243528E-4	IMPLEMENTATION
// RubySignal	WITHOUT_CLASSIFICATION	0.9997544643074775	WITHOUT_CLASSIFICATION	2.4553569252247514E-4	IMPLEMENTATION
// ZStream actually *isn't* allocatable	WITHOUT_CLASSIFICATION	0.9998029705189523	WITHOUT_CLASSIFICATION	1.9702948104776387E-4	IMPLEMENTATION
// MRI behavior, enforced by tests	WITHOUT_CLASSIFICATION	0.9998588220306249	WITHOUT_CLASSIFICATION	1.4117796937499304E-4	IMPLEMENTATION
// it's safe since adler.update doesn't modify the array	WITHOUT_CLASSIFICATION	0.9999369138789532	WITHOUT_CLASSIFICATION	6.308612104681058E-5	IMPLEMENTATION
// MRI behavior: in finished mode, we work as pass-through	WITHOUT_CLASSIFICATION	0.9997868347788195	WITHOUT_CLASSIFICATION	2.131652211806282E-4	IMPLEMENTATION
// SYNC_FLUSH	WITHOUT_CLASSIFICATION	0.9997515399162304	WITHOUT_CLASSIFICATION	2.4846008376949665E-4	IMPLEMENTATION
// By default, NO_FLUSH	WITHOUT_CLASSIFICATION	0.9998960848258741	WITHOUT_CLASSIFICATION	1.039151741258679E-4	IMPLEMENTATION
//io.finish();	WITHOUT_CLASSIFICATION	0.9997328617133234	WITHOUT_CLASSIFICATION	2.671382866765686E-4	IMPLEMENTATION
// should invoke seek on realIo	WITHOUT_CLASSIFICATION	0.999868093502992	WITHOUT_CLASSIFICATION	1.3190649700806255E-4	IMPLEMENTATION
// hmm...	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
// Called before any write to make sure the // header is always written before the first bytes	WITHOUT_CLASSIFICATION	0.999986503647501	WITHOUT_CLASSIFICATION	1.3496352499106341E-5	IMPLEMENTATION
// For JDK 1.4 we can use "cal.getTimeInMillis()"	WITHOUT_CLASSIFICATION	0.9998177721158943	WITHOUT_CLASSIFICATION	1.822278841055779E-4	IMPLEMENTATION
// We can just use dt, since it is immutable	WITHOUT_CLASSIFICATION	0.9998499786833267	WITHOUT_CLASSIFICATION	1.5002131667328798E-4	IMPLEMENTATION
// float number of seconds	WITHOUT_CLASSIFICATION	0.9999226338258153	WITHOUT_CLASSIFICATION	7.736617418477571E-5	IMPLEMENTATION
// modified to match how hash is calculated in 1.8.2	WITHOUT_CLASSIFICATION	0.9999257561339603	WITHOUT_CLASSIFICATION	7.424386603971024E-5	IMPLEMENTATION
// dump usec, not msec	WITHOUT_CLASSIFICATION	0.9998110990082019	WITHOUT_CLASSIFICATION	1.8890099179809017E-4	IMPLEMENTATION
/* Time class methods */	WITHOUT_CLASSIFICATION	0.999892041021042	WITHOUT_CLASSIFICATION	1.079589789579945E-4	IMPLEMENTATION
// marsaling dumps usec, not msec	WITHOUT_CLASSIFICATION	0.9998376522651151	WITHOUT_CLASSIFICATION	1.6234773488486392E-4	IMPLEMENTATION
// MRI accepts additional wday argument which appears to be ignored.	WITHOUT_CLASSIFICATION	0.9999417430442502	WITHOUT_CLASSIFICATION	5.825695574983544E-5	IMPLEMENTATION
// set up with min values and then add to allow rolling over	WITHOUT_CLASSIFICATION	0.9999187278713033	WITHOUT_CLASSIFICATION	8.127212869661314E-5	IMPLEMENTATION
// the instant at which we will ask dtz what the difference between DST and // standard time is	WITHOUT_CLASSIFICATION	0.9999006888516104	WITHOUT_CLASSIFICATION	9.931114838952537E-5	IMPLEMENTATION
// if we might be moving this time from !DST -> DST, the offset is assumed // to be the same as it was just before we last moved from DST -> !DST	WITHOUT_CLASSIFICATION	0.9999601837729404	WITHOUT_CLASSIFICATION	3.981622705965057E-5	IMPLEMENTATION
// Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.	WITHOUT_CLASSIFICATION	0.9999876904829977	WITHOUT_CLASSIFICATION	1.2309517002300348E-5	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999179638774837	WITHOUT_CLASSIFICATION	8.203612251628135E-5	IMPLEMENTATION
/* If the value will fit in a Fixnum, return one of those. */	WITHOUT_CLASSIFICATION	0.9999572465972674	WITHOUT_CLASSIFICATION	4.275340273262232E-5	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999349916202175	WITHOUT_CLASSIFICATION	6.500837978254395E-5	IMPLEMENTATION
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.999796485095998	WITHOUT_CLASSIFICATION	2.0351490400189858E-4	IMPLEMENTATION
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.947523520560502	WITHOUT_CLASSIFICATION	0.05247647943949782	IMPLEMENTATION
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.947523520560502	WITHOUT_CLASSIFICATION	0.05247647943949782	IMPLEMENTATION
// no bignorm here needed	WITHOUT_CLASSIFICATION	0.9990829560133044	WITHOUT_CLASSIFICATION	9.170439866955319E-4	IMPLEMENTATION
// wow, the only time we can use the java protocol ;)	WITHOUT_CLASSIFICATION	0.9998746928770854	WITHOUT_CLASSIFICATION	1.2530712291456265E-4	IMPLEMENTATION
// Pad with a 0	WITHOUT_CLASSIFICATION	0.9997869337968608	WITHOUT_CLASSIFICATION	2.1306620313917726E-4	IMPLEMENTATION
// BigInteger required a sign byte in incoming array	WITHOUT_CLASSIFICATION	0.9998445667776058	WITHOUT_CLASSIFICATION	1.554332223941685E-4	IMPLEMENTATION
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9999781877785963	WITHOUT_CLASSIFICATION	2.1812221403644567E-5	IMPLEMENTATION
// We do this b/c make_tmpname might be overridden	WITHOUT_CLASSIFICATION	0.9998410311007524	WITHOUT_CLASSIFICATION	1.5896889924759273E-4	IMPLEMENTATION
// ???	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
// PID	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999349916202175	WITHOUT_CLASSIFICATION	6.500837978254395E-5	IMPLEMENTATION
// elements and trailing nils	WITHOUT_CLASSIFICATION	0.9999192084470195	WITHOUT_CLASSIFICATION	8.079155298042896E-5	IMPLEMENTATION
// Dir::tmpdir	WITHOUT_CLASSIFICATION	0.9997517968160988	WITHOUT_CLASSIFICATION	2.482031839011095E-4	IMPLEMENTATION
// volatile to ensure that initial nil-fill is visible to other threads	WITHOUT_CLASSIFICATION	0.9998151581939717	WITHOUT_CLASSIFICATION	1.8484180602818727E-4	IMPLEMENTATION
/* Ruby arrays default to holding 16 elements, so we create an         * ArrayList of the same size if we're not told otherwise         */	WITHOUT_CLASSIFICATION	0.9999973505391194	WITHOUT_CLASSIFICATION	2.649460880545293E-6	IMPLEMENTATION
/* rb_ary_new2     * just allocates the internal array     */	WITHOUT_CLASSIFICATION	0.999928656239765	WITHOUT_CLASSIFICATION	7.134376023498255E-5	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999618399891884	WITHOUT_CLASSIFICATION	3.8160010811587025E-5	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999618399891884	WITHOUT_CLASSIFICATION	3.8160010811587025E-5	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999618399891884	WITHOUT_CLASSIFICATION	3.8160010811587025E-5	IMPLEMENTATION
/* Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour     *      */	WITHOUT_CLASSIFICATION	0.9998903323073365	WITHOUT_CLASSIFICATION	1.0966769266356688E-4	IMPLEMENTATION
/* NEWOBJ and OBJSETUP equivalent     * fastest one, for shared arrays, optional objectspace     */	WITHOUT_CLASSIFICATION	0.9998787715383711	WITHOUT_CLASSIFICATION	1.2122846162891485E-4	IMPLEMENTATION
// Create global constants and variables	WITHOUT_CLASSIFICATION	0.999958838846831	WITHOUT_CLASSIFICATION	4.116115316892811E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.999309644166977	WITHOUT_CLASSIFICATION	6.903558330231133E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.999309644166977	WITHOUT_CLASSIFICATION	6.903558330231133E-4	IMPLEMENTATION
// Windows does not support these functions, so we won't even try // This also matches Ruby behavior for JRUBY-2353.	WITHOUT_CLASSIFICATION	0.999835151391134	WITHOUT_CLASSIFICATION	1.6484860886597304E-4	IMPLEMENTATION
// There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and // newer one (US/Pacific, America/Los_Angeles). This pattern is to detect // the legacy TZ format in order to convert it to the newer format // understood by Java API.	WITHOUT_CLASSIFICATION	0.999984922082091	WITHOUT_CLASSIFICATION	1.5077917909037251E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.999309644166977	WITHOUT_CLASSIFICATION	6.903558330231133E-4	IMPLEMENTATION
// 1.9 seems to just do inspect for to_s now	WITHOUT_CLASSIFICATION	0.9998576653215241	WITHOUT_CLASSIFICATION	1.4233467847584835E-4	IMPLEMENTATION
// possibly should not in object space	WITHOUT_CLASSIFICATION	0.9999024376527593	WITHOUT_CLASSIFICATION	9.756234724061411E-5	IMPLEMENTATION
// only fill if there actually will remain trailing storage	WITHOUT_CLASSIFICATION	0.9999246433625028	WITHOUT_CLASSIFICATION	7.535663749721688E-5	IMPLEMENTATION
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9997515399162304	WITHOUT_CLASSIFICATION	2.4846008376949665E-4	IMPLEMENTATION
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9997515399162304	WITHOUT_CLASSIFICATION	2.4846008376949665E-4	IMPLEMENTATION
// from DUP_SETUP	WITHOUT_CLASSIFICATION	0.9997856347637105	WITHOUT_CLASSIFICATION	2.1436523628949933E-4	IMPLEMENTATION
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999466305435991	WITHOUT_CLASSIFICATION	5.336945640100059E-5	IMPLEMENTATION
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9998165408873757	WITHOUT_CLASSIFICATION	1.8345911262438846E-4	IMPLEMENTATION
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9998165408873757	WITHOUT_CLASSIFICATION	1.8345911262438846E-4	IMPLEMENTATION
// Satisfy java.util.List interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999045310656386	WITHOUT_CLASSIFICATION	9.546893436139787E-5	IMPLEMENTATION
// pre-set for the sake of terminating recursive calls	WITHOUT_CLASSIFICATION	0.9999433792020026	WITHOUT_CLASSIFICATION	5.662079799738058E-5	IMPLEMENTATION
/* root fiber */	WITHOUT_CLASSIFICATION	0.999755140229259	WITHOUT_CLASSIFICATION	2.4485977074096405E-4	IMPLEMENTATION
// GMT+00:00 --> Etc/GMT, see "MRI behavior" // comment below.	WITHOUT_CLASSIFICATION	0.9998904583684016	WITHOUT_CLASSIFICATION	1.0954163159839055E-4	IMPLEMENTATION
//  See http://www.gzip.org/zlib/rfc-gzip.html	WITHOUT_CLASSIFICATION	0.9998264153156937	WITHOUT_CLASSIFICATION	1.73584684306369E-4	IMPLEMENTATION
// extras flag	WITHOUT_CLASSIFICATION	0.9997692356632528	WITHOUT_CLASSIFICATION	2.3076433674725693E-4	IMPLEMENTATION
// Zlib::NO_FLUSH	WITHOUT_CLASSIFICATION	0.9997515399162304	WITHOUT_CLASSIFICATION	2.4846008376949665E-4	IMPLEMENTATION
// ...nothing	WITHOUT_CLASSIFICATION	0.9998868915539816	WITHOUT_CLASSIFICATION	1.1310844601851307E-4	IMPLEMENTATION
// utility method	WITHOUT_CLASSIFICATION	0.9997971865996358	WITHOUT_CLASSIFICATION	2.0281340036425104E-4	IMPLEMENTATION
// Prepare LoadService and load path	WITHOUT_CLASSIFICATION	0.9998589343768516	WITHOUT_CLASSIFICATION	1.410656231484664E-4	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999349916202175	WITHOUT_CLASSIFICATION	6.500837978254395E-5	IMPLEMENTATION
// flags // 4 bytes of modified time	WITHOUT_CLASSIFICATION	0.9998467775296914	WITHOUT_CLASSIFICATION	1.5322247030860535E-4	IMPLEMENTATION
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9998227372030339	WITHOUT_CLASSIFICATION	1.7726279696594885E-4	IMPLEMENTATION
// 1.8 "include?"	WITHOUT_CLASSIFICATION	0.9997638297371106	WITHOUT_CLASSIFICATION	2.3617026288931474E-4	IMPLEMENTATION
// any BigInteger is bigger than Fixnum and we don't have FIXABLE	WITHOUT_CLASSIFICATION	0.999887345206907	WITHOUT_CLASSIFICATION	1.1265479309297231E-4	IMPLEMENTATION
// beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal	WITHOUT_CLASSIFICATION	0.9998590496760044	WITHOUT_CLASSIFICATION	1.4095032399566958E-4	IMPLEMENTATION
// MRI does it!	WITHOUT_CLASSIFICATION	0.9997547355749379	WITHOUT_CLASSIFICATION	2.4526442506208875E-4	IMPLEMENTATION
// won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9998152659667956	WITHOUT_CLASSIFICATION	1.8473403320447482E-4	IMPLEMENTATION
// it won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9998460339845225	WITHOUT_CLASSIFICATION	1.5396601547737414E-4	IMPLEMENTATION
// RubyClassPathVariable	WITHOUT_CLASSIFICATION	0.9998033615387844	WITHOUT_CLASSIFICATION	1.9663846121574838E-4	IMPLEMENTATION
// not to be confused with RubyObject's flags	WITHOUT_CLASSIFICATION	0.9996575751476572	WITHOUT_CLASSIFICATION	3.4242485234283333E-4	IMPLEMENTATION
// second argument is allowed, but ignored (MRI)	WITHOUT_CLASSIFICATION	0.9999779773103127	WITHOUT_CLASSIFICATION	2.202268968737171E-5	IMPLEMENTATION
// we are presumably running a precompiled class; load directly	WITHOUT_CLASSIFICATION	0.9999466802262708	WITHOUT_CLASSIFICATION	5.331977372925804E-5	IMPLEMENTATION
// terminate; tryCompile will have printed out an error and we're done	WITHOUT_CLASSIFICATION	0.999890699034561	WITHOUT_CLASSIFICATION	1.0930096543895275E-4	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999268728202899	WITHOUT_CLASSIFICATION	7.31271797101224E-5	IMPLEMENTATION
// do nothing, this iteration restarts	WITHOUT_CLASSIFICATION	0.9999803810594871	WITHOUT_CLASSIFICATION	1.9618940512966936E-5	IMPLEMENTATION
// recheck condition	WITHOUT_CLASSIFICATION	0.9998063844212218	WITHOUT_CLASSIFICATION	1.9361557877817885E-4	IMPLEMENTATION
// Get the main threadcontext (gets constructed for us)	WITHOUT_CLASSIFICATION	0.9999537439945848	WITHOUT_CLASSIFICATION	4.6256005415108804E-5	IMPLEMENTATION
// Construct key services	WITHOUT_CLASSIFICATION	0.9998931420379025	WITHOUT_CLASSIFICATION	1.0685796209751174E-4	IMPLEMENTATION
// initialize the root of the class hierarchy completely	WITHOUT_CLASSIFICATION	0.9999863358574566	WITHOUT_CLASSIFICATION	1.3664142543384207E-5	IMPLEMENTATION
// Construct the top-level execution frame and scope for the main thread	WITHOUT_CLASSIFICATION	0.9999669404480985	WITHOUT_CLASSIFICATION	3.305955190155259E-5	IMPLEMENTATION
// Initialize all the core classes	WITHOUT_CLASSIFICATION	0.9999666033449887	WITHOUT_CLASSIFICATION	3.339665501137896E-5	IMPLEMENTATION
// Initialize the "dummy" class used as a marker	WITHOUT_CLASSIFICATION	0.9999647773253706	WITHOUT_CLASSIFICATION	3.52226746294133E-5	IMPLEMENTATION
// Initialize Kernel and include into Object	WITHOUT_CLASSIFICATION	0.9999504561148248	WITHOUT_CLASSIFICATION	4.95438851753205E-5	IMPLEMENTATION
// Object is ready, create top self	WITHOUT_CLASSIFICATION	0.999913696222487	WITHOUT_CLASSIFICATION	8.630377751298304E-5	IMPLEMENTATION
// Pre-create all the core classes potentially referenced during startup	WITHOUT_CLASSIFICATION	0.9999751580069126	WITHOUT_CLASSIFICATION	2.484199308735343E-5	IMPLEMENTATION
// Math depends on all numeric types	WITHOUT_CLASSIFICATION	0.9998719688776027	WITHOUT_CLASSIFICATION	1.2803112239745496E-4	IMPLEMENTATION
// depends on IO, FileTest	WITHOUT_CLASSIFICATION	0.9998482375742385	WITHOUT_CLASSIFICATION	1.5176242576152397E-4	IMPLEMENTATION
// initialize builtin libraries	WITHOUT_CLASSIFICATION	0.9999630420982706	WITHOUT_CLASSIFICATION	3.695790172941975E-5	IMPLEMENTATION
// Require in all libraries specified on command line	WITHOUT_CLASSIFICATION	0.9999409937088838	WITHOUT_CLASSIFICATION	5.9006291116168177E-5	IMPLEMENTATION
// Bootstrap the top of the hierarchy	WITHOUT_CLASSIFICATION	0.999925882095548	WITHOUT_CLASSIFICATION	7.411790445197635E-5	IMPLEMENTATION
// we try to get the classloader that loaded JRuby, falling back on System	WITHOUT_CLASSIFICATION	0.999955287820708	WITHOUT_CLASSIFICATION	4.4712179292120153E-5	IMPLEMENTATION
// determine spacing	WITHOUT_CLASSIFICATION	0.9998414597733916	WITHOUT_CLASSIFICATION	1.5854022660846044E-4	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9998083025197539	WITHOUT_CLASSIFICATION	1.9169748024608474E-4	IMPLEMENTATION
// For JSR 223 support: see http://scripting.java.net/	WITHOUT_CLASSIFICATION	0.9997769430418828	WITHOUT_CLASSIFICATION	2.230569581171394E-4	IMPLEMENTATION
// use this for JRuby-internal finalizers	WITHOUT_CLASSIFICATION	0.9998897713861041	WITHOUT_CLASSIFICATION	1.1022861389585372E-4	IMPLEMENTATION
// this method is for finalizers registered via ObjectSpace	WITHOUT_CLASSIFICATION	0.9997628670665256	WITHOUT_CLASSIFICATION	2.3713293347442713E-4	IMPLEMENTATION
// new factory methods ------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999734072955911	WITHOUT_CLASSIFICATION	2.6592704408809215E-5	IMPLEMENTATION
//        assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999718383157309	WITHOUT_CLASSIFICATION	2.81616842691378E-5	IMPLEMENTATION
// Equivalent of Data_Wrap_Struct	WITHOUT_CLASSIFICATION	0.9997930425076571	WITHOUT_CLASSIFICATION	2.0695749234281408E-4	IMPLEMENTATION
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999498149496885	WITHOUT_CLASSIFICATION	5.0185050311444804E-5	IMPLEMENTATION
// ChannelDescriptors opened by sysopen are cached to avoid collection	WITHOUT_CLASSIFICATION	0.9998613032539121	WITHOUT_CLASSIFICATION	1.386967460878708E-4	IMPLEMENTATION
// Default objects	WITHOUT_CLASSIFICATION	0.9999477108677143	WITHOUT_CLASSIFICATION	5.2289132285768786E-5	IMPLEMENTATION
// record separator var, to speed up io ops that use it	WITHOUT_CLASSIFICATION	0.9998915869245282	WITHOUT_CLASSIFICATION	1.08413075471783E-4	IMPLEMENTATION
// former java.lang.System concepts now internalized for MVM	WITHOUT_CLASSIFICATION	0.999905641794774	WITHOUT_CLASSIFICATION	9.435820522599303E-5	IMPLEMENTATION
// Java support	WITHOUT_CLASSIFICATION	0.9996370539125405	WITHOUT_CLASSIFICATION	3.62946087459357E-4	IMPLEMENTATION
// Parser stats	WITHOUT_CLASSIFICATION	0.9997789704341558	WITHOUT_CLASSIFICATION	2.2102956584432227E-4	IMPLEMENTATION
// Compilation	WITHOUT_CLASSIFICATION	0.9997927554152977	WITHOUT_CLASSIFICATION	2.072445847022807E-4	IMPLEMENTATION
// can't read non-standard properties	WITHOUT_CLASSIFICATION	0.9999116644394691	WITHOUT_CLASSIFICATION	8.833556053088431E-5	IMPLEMENTATION
// can't create custom classloaders	WITHOUT_CLASSIFICATION	0.9999522043725845	WITHOUT_CLASSIFICATION	4.779562741544055E-5	IMPLEMENTATION
// mutex that controls modifications of user-defined finalizers	WITHOUT_CLASSIFICATION	0.9998994021829627	WITHOUT_CLASSIFICATION	1.005978170373473E-4	IMPLEMENTATION
// mutex that controls modifications of internal finalizers	WITHOUT_CLASSIFICATION	0.9999157862167097	WITHOUT_CLASSIFICATION	8.421378329028238E-5	IMPLEMENTATION
// A thread pool to use for executing this runtime's Ruby threads	WITHOUT_CLASSIFICATION	0.9998796769697914	WITHOUT_CLASSIFICATION	1.2032303020852266E-4	IMPLEMENTATION
// A global object lock for class hierarchy mutations	WITHOUT_CLASSIFICATION	0.9999505367460549	WITHOUT_CLASSIFICATION	4.9463253945024294E-5	IMPLEMENTATION
// initial spaces // spaces before "at"	WITHOUT_CLASSIFICATION	0.9999420935113262	WITHOUT_CLASSIFICATION	5.790648867386467E-5	IMPLEMENTATION
// event name // filename // line numbers should be 1-based	WITHOUT_CLASSIFICATION	0.9999564857182193	WITHOUT_CLASSIFICATION	4.351428178077551E-5	IMPLEMENTATION
// The method is intentionally not public, since it typically should // not be used outside of the core.	WITHOUT_CLASSIFICATION	0.9999189806951677	WITHOUT_CLASSIFICATION	8.10193048323035E-5	IMPLEMENTATION
// Note: this field and the following static initializer // must be located be in this order!	WITHOUT_CLASSIFICATION	0.9999836688295282	WITHOUT_CLASSIFICATION	1.6331170471800067E-5	IMPLEMENTATION
// Contains a list of all blocks (as Procs) that should be called when // the runtime environment exits.	WITHOUT_CLASSIFICATION	0.9999436107087083	WITHOUT_CLASSIFICATION	5.6389291291645534E-5	IMPLEMENTATION
// quoted-printable	WITHOUT_CLASSIFICATION	0.9997634658036572	WITHOUT_CLASSIFICATION	2.3653419634269936E-4	IMPLEMENTATION
// default options	WITHOUT_CLASSIFICATION	0.9999616597118804	WITHOUT_CLASSIFICATION	3.834028811955027E-5	IMPLEMENTATION
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9997515399162304	WITHOUT_CLASSIFICATION	2.4846008376949665E-4	IMPLEMENTATION
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9997515399162304	WITHOUT_CLASSIFICATION	2.4846008376949665E-4	IMPLEMENTATION
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9997516343048107	WITHOUT_CLASSIFICATION	2.483656951892496E-4	IMPLEMENTATION
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9997516343048107	WITHOUT_CLASSIFICATION	2.483656951892496E-4	IMPLEMENTATION
// EUC-JP	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
// EUC-JP	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
// UTF-8	WITHOUT_CLASSIFICATION	0.9959722428981946	WITHOUT_CLASSIFICATION	0.00402775710180539	IMPLEMENTATION
// UTF-8	WITHOUT_CLASSIFICATION	0.9959722428981946	WITHOUT_CLASSIFICATION	0.00402775710180539	IMPLEMENTATION
// long name option	WITHOUT_CLASSIFICATION	0.9997968101349581	WITHOUT_CLASSIFICATION	2.031898650418471E-4	IMPLEMENTATION
// conversion	WITHOUT_CLASSIFICATION	0.9998778586902329	WITHOUT_CLASSIFICATION	1.221413097670904E-4	IMPLEMENTATION
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999926620249406	WITHOUT_CLASSIFICATION	7.337975059404115E-5	IMPLEMENTATION
// string doesn't share any resources	WITHOUT_CLASSIFICATION	0.9999443279615141	WITHOUT_CLASSIFICATION	5.567203848585224E-5	IMPLEMENTATION
// string has it's own ByteList, but it's pointing to a shared buffer (byte[])	WITHOUT_CLASSIFICATION	0.9999394893525171	WITHOUT_CLASSIFICATION	6.051064748280173E-5	IMPLEMENTATION
// string doesn't have it's own ByteList (values)	WITHOUT_CLASSIFICATION	0.9999362429667026	WITHOUT_CLASSIFICATION	6.37570332974272E-5	IMPLEMENTATION
// ENC_CODERANGE_ASCIIONLY	WITHOUT_CLASSIFICATION	0.999804187540545	WITHOUT_CLASSIFICATION	1.958124594550331E-4	IMPLEMENTATION
// rb_enc_str_asciionly_p	WITHOUT_CLASSIFICATION	0.9998040793538033	WITHOUT_CLASSIFICATION	1.959206461967906E-4	IMPLEMENTATION
// rb_enc_str_coderange	WITHOUT_CLASSIFICATION	0.9998042903683336	WITHOUT_CLASSIFICATION	1.9570963166644733E-4	IMPLEMENTATION
// rb_str_hash_cmp	WITHOUT_CLASSIFICATION	0.9997515399162304	WITHOUT_CLASSIFICATION	2.4846008376949665E-4	IMPLEMENTATION
// Deprecated String construction routines	WITHOUT_CLASSIFICATION	0.9998984960329973	WITHOUT_CLASSIFICATION	1.0150396700275735E-4	IMPLEMENTATION
// String construction routines by NOT byte[] buffer and NOT making the target String shared 	WITHOUT_CLASSIFICATION	0.9999724033080457	WITHOUT_CLASSIFICATION	2.7596691954264654E-5	IMPLEMENTATION
/* rb_str_subseq */	WITHOUT_CLASSIFICATION	0.9997516375807645	WITHOUT_CLASSIFICATION	2.4836241923562795E-4	IMPLEMENTATION
// no need to assign encoding, same bytelist shared	WITHOUT_CLASSIFICATION	0.9998149362375018	WITHOUT_CLASSIFICATION	1.8506376249826238E-4	IMPLEMENTATION
// if len == 0 then shared empty	WITHOUT_CLASSIFICATION	0.99986311719727	WITHOUT_CLASSIFICATION	1.368828027301352E-4	IMPLEMENTATION
/* rb_str_cmp_m */	WITHOUT_CLASSIFICATION	0.9997515399162304	WITHOUT_CLASSIFICATION	2.4846008376949665E-4	IMPLEMENTATION
// we limit to int because ByteBuffer can only allocate int sizes	WITHOUT_CLASSIFICATION	0.9999088544763315	WITHOUT_CLASSIFICATION	9.114552366851149E-5	IMPLEMENTATION
// // rb_str_buf_append	WITHOUT_CLASSIFICATION	0.9998367749772228	WITHOUT_CLASSIFICATION	1.632250227771984E-4	IMPLEMENTATION
// encoding doesn't have to be copied.	WITHOUT_CLASSIFICATION	0.9999390639638434	WITHOUT_CLASSIFICATION	6.093603615658622E-5	IMPLEMENTATION
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9996505960538479	WITHOUT_CLASSIFICATION	3.4940394615220376E-4	IMPLEMENTATION
// must not reallocate	WITHOUT_CLASSIFICATION	0.999850259293829	WITHOUT_CLASSIFICATION	1.497407061709489E-4	IMPLEMENTATION
// Illegal combination	WITHOUT_CLASSIFICATION	0.9998230720225061	WITHOUT_CLASSIFICATION	1.7692797749394934E-4	IMPLEMENTATION
// use 1.8 impl	WITHOUT_CLASSIFICATION	0.9998103283411456	WITHOUT_CLASSIFICATION	1.896716588543781E-4	IMPLEMENTATION
/* RubyString aka rb_string_value */	WITHOUT_CLASSIFICATION	0.9998709813740625	WITHOUT_CLASSIFICATION	1.2901862593754252E-4	IMPLEMENTATION
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9998635571656908	WITHOUT_CLASSIFICATION	1.3644283430925454E-4	IMPLEMENTATION
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9998950835461476	WITHOUT_CLASSIFICATION	1.0491645385232319E-4	IMPLEMENTATION
/* len + margin */	WITHOUT_CLASSIFICATION	0.9997546657259853	WITHOUT_CLASSIFICATION	2.453342740147383E-4	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9997468629799059	WITHOUT_CLASSIFICATION	2.531370200941529E-4	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9997468629799059	WITHOUT_CLASSIFICATION	2.531370200941529E-4	IMPLEMENTATION
/* copy pre-match substr */	WITHOUT_CLASSIFICATION	0.9998164647072133	WITHOUT_CLASSIFICATION	1.8353529278667983E-4	IMPLEMENTATION
// string given	WITHOUT_CLASSIFICATION	0.9998541894337171	WITHOUT_CLASSIFICATION	1.4581056628292438E-4	IMPLEMENTATION
// hash given	WITHOUT_CLASSIFICATION	0.9997543189344326	WITHOUT_CLASSIFICATION	2.456810655674375E-4	IMPLEMENTATION
// This represents left most digit in a set of incremented // values?  Therefore leftmost numeric must be '1' and not '0' // 999 -> 1000, not 999 -> 0000.  whereas chars should be // zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"	WITHOUT_CLASSIFICATION	0.9999493030585328	WITHOUT_CLASSIFICATION	5.069694146713672E-5	IMPLEMENTATION
/* substring longer than string */	WITHOUT_CLASSIFICATION	0.9999058231024885	WITHOUT_CLASSIFICATION	9.417689751138332E-5	IMPLEMENTATION
/* rb_str_substr */	WITHOUT_CLASSIFICATION	0.9997522228051474	WITHOUT_CLASSIFICATION	2.4777719485257594E-4	IMPLEMENTATION
// nothing	WITHOUT_CLASSIFICATION	0.9980439679018664	WITHOUT_CLASSIFICATION	0.001956032098133579	IMPLEMENTATION
// nothing	WITHOUT_CLASSIFICATION	0.9980439679018664	WITHOUT_CLASSIFICATION	0.001956032098133579	IMPLEMENTATION
/* rb_str_splice */	WITHOUT_CLASSIFICATION	0.999751793699453	WITHOUT_CLASSIFICATION	2.482063005469449E-4	IMPLEMENTATION
// TODO: keep cr // TODO: rb_str_splice_0	WITHOUT_CLASSIFICATION	0.876697973728486	WITHOUT_CLASSIFICATION	0.12330202627151395	IMPLEMENTATION
// keep cr ?	WITHOUT_CLASSIFICATION	0.9997759799682547	WITHOUT_CLASSIFICATION	2.2402003174530483E-4	IMPLEMENTATION
// keep cr ?	WITHOUT_CLASSIFICATION	0.9997759799682547	WITHOUT_CLASSIFICATION	2.2402003174530483E-4	IMPLEMENTATION
/* wrapped to \0...\0.  search next valid char. */	WITHOUT_CLASSIFICATION	0.9998997199046933	WITHOUT_CLASSIFICATION	1.0028009530673456E-4	IMPLEMENTATION
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9998889988699898	WITHOUT_CLASSIFICATION	1.1100113001023355E-4	IMPLEMENTATION
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9998889988699898	WITHOUT_CLASSIFICATION	1.1100113001023355E-4	IMPLEMENTATION
// modified	WITHOUT_CLASSIFICATION	0.9997855005869577	WITHOUT_CLASSIFICATION	2.1449941304228876E-4	IMPLEMENTATION
// modified	WITHOUT_CLASSIFICATION	0.9997855005869577	WITHOUT_CLASSIFICATION	2.1449941304228876E-4	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
// QTRUE	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
/* retrieve last replacer */	WITHOUT_CLASSIFICATION	0.9998725215655045	WITHOUT_CLASSIFICATION	1.2747843449547276E-4	IMPLEMENTATION
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999432268913052	WITHOUT_CLASSIFICATION	5.677310869468717E-5	IMPLEMENTATION
// long size * bits in byte	WITHOUT_CLASSIFICATION	0.9998134899340388	WITHOUT_CLASSIFICATION	1.8651006596113673E-4	IMPLEMENTATION
// from encoding, special-casing ASCII* to ASCII	WITHOUT_CLASSIFICATION	0.99987361081235	WITHOUT_CLASSIFICATION	1.2638918765005026E-4	IMPLEMENTATION
// to encoding, same special-casing	WITHOUT_CLASSIFICATION	0.9998683423968701	WITHOUT_CLASSIFICATION	1.3165760312999989E-4	IMPLEMENTATION
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999766864863738	WITHOUT_CLASSIFICATION	2.331351362619194E-5	IMPLEMENTATION
// decode from "from" and encode to "to"	WITHOUT_CLASSIFICATION	0.9998937089067595	WITHOUT_CLASSIFICATION	1.0629109324045716E-4	IMPLEMENTATION
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999766864863738	WITHOUT_CLASSIFICATION	2.331351362619194E-5	IMPLEMENTATION
//Kernel is the only Module that doesn't need an implementor	WITHOUT_CLASSIFICATION	0.9973301080278179	WITHOUT_CLASSIFICATION	0.0026698919721821726	IMPLEMENTATION
// no binding given, use (eval)	WITHOUT_CLASSIFICATION	0.9998675212684809	WITHOUT_CLASSIFICATION	1.3247873151909405E-4	IMPLEMENTATION
// interned, OK for "fast" methods	WITHOUT_CLASSIFICATION	0.9998732699709978	WITHOUT_CLASSIFICATION	1.2673002900218566E-4	IMPLEMENTATION
// File to be loaded by autoload has already been or is being loaded.	WITHOUT_CLASSIFICATION	0.9998954657705869	WITHOUT_CLASSIFICATION	1.0453422941308277E-4	IMPLEMENTATION
// rb_cstr_to_dbl case	WITHOUT_CLASSIFICATION	0.9998021353384242	WITHOUT_CLASSIFICATION	1.978646615758086E-4	IMPLEMENTATION
// We break if we know this sleep was explicitly woken up/interrupted	WITHOUT_CLASSIFICATION	0.9998901040557256	WITHOUT_CLASSIFICATION	1.0989594427435146E-4	IMPLEMENTATION
// exec process, create IO with process	WITHOUT_CLASSIFICATION	0.9999317237727794	WITHOUT_CLASSIFICATION	6.827622722066356E-5	IMPLEMENTATION
// Zero sleeps forever	WITHOUT_CLASSIFICATION	0.9998571814485315	WITHOUT_CLASSIFICATION	1.4281855146854679E-4	IMPLEMENTATION
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.999869141697487	WITHOUT_CLASSIFICATION	1.30858302513054E-4	IMPLEMENTATION
// Explicit zero in MRI returns immediately	WITHOUT_CLASSIFICATION	0.9999221631003594	WITHOUT_CLASSIFICATION	7.783689964050462E-5	IMPLEMENTATION
// Spurious wakeup-loop	WITHOUT_CLASSIFICATION	0.9998057865453097	WITHOUT_CLASSIFICATION	1.9421345469021692E-4	IMPLEMENTATION
// adjusts paths started with '/' or '\\', on windows.	WITHOUT_CLASSIFICATION	0.9998826741354286	WITHOUT_CLASSIFICATION	1.173258645714119E-4	IMPLEMENTATION
// file not given	WITHOUT_CLASSIFICATION	0.9997938271282216	WITHOUT_CLASSIFICATION	2.0617287177839585E-4	IMPLEMENTATION
// string to eval	WITHOUT_CLASSIFICATION	0.9998898382808029	WITHOUT_CLASSIFICATION	1.1016171919706593E-4	IMPLEMENTATION
// binding given, use binding's file	WITHOUT_CLASSIFICATION	0.9998379862297134	WITHOUT_CLASSIFICATION	1.6201377028669906E-4	IMPLEMENTATION
// ?g  | boolean | True if file1 has the \CF{setgid} bit	WITHOUT_CLASSIFICATION	0.999876658217402	WITHOUT_CLASSIFICATION	1.2334178259804823E-4	IMPLEMENTATION
// bomb out, it's not a binding or a proc	WITHOUT_CLASSIFICATION	0.9998662760826508	WITHOUT_CLASSIFICATION	1.3372391734923017E-4	IMPLEMENTATION
// Ordering of array traversal not important, just intuitive	WITHOUT_CLASSIFICATION	0.9997137025424621	WITHOUT_CLASSIFICATION	2.8629745753795183E-4	IMPLEMENTATION
//Catch active, throw for catch to handle	WITHOUT_CLASSIFICATION	0.999825505352725	WITHOUT_CLASSIFICATION	1.744946472749448E-4	IMPLEMENTATION
// No catch active for this throw	WITHOUT_CLASSIFICATION	0.9998971134068649	WITHOUT_CLASSIFICATION	1.028865931350763E-4	IMPLEMENTATION
// without full tracing, many events will not fire	WITHOUT_CLASSIFICATION	0.9999050670904442	WITHOUT_CLASSIFICATION	9.493290955566508E-5	IMPLEMENTATION
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999854475669456	WITHOUT_CLASSIFICATION	1.4552433054324395E-5	IMPLEMENTATION
// MRI behavior: use first byte of string value if len > 0	WITHOUT_CLASSIFICATION	0.9999365075832737	WITHOUT_CLASSIFICATION	6.349241672635981E-5	IMPLEMENTATION
// MRI behavior: now check arg count	WITHOUT_CLASSIFICATION	0.9998336983613165	WITHOUT_CLASSIFICATION	1.6630163868338918E-4	IMPLEMENTATION
// ?A  | Time    | Last access time for file1	WITHOUT_CLASSIFICATION	0.999828878410605	WITHOUT_CLASSIFICATION	1.7112158939501488E-4	IMPLEMENTATION
// ?b  | boolean | True if file1 is a block device	WITHOUT_CLASSIFICATION	0.9998583344287327	WITHOUT_CLASSIFICATION	1.416655712672624E-4	IMPLEMENTATION
// ?c  | boolean | True if file1 is a character device	WITHOUT_CLASSIFICATION	0.9999110390978286	WITHOUT_CLASSIFICATION	8.896090217134662E-5	IMPLEMENTATION
// ?C  | Time    | Last change time for file1	WITHOUT_CLASSIFICATION	0.9998801007845811	WITHOUT_CLASSIFICATION	1.1989921541891944E-4	IMPLEMENTATION
// ?d  | boolean | True if file1 exists and is a directory	WITHOUT_CLASSIFICATION	0.9999560617245946	WITHOUT_CLASSIFICATION	4.3938275405289115E-5	IMPLEMENTATION
// ?e  | boolean | True if file1 exists	WITHOUT_CLASSIFICATION	0.9998700059701876	WITHOUT_CLASSIFICATION	1.299940298122733E-4	IMPLEMENTATION
// ?f  | boolean | True if file1 exists and is a regular file	WITHOUT_CLASSIFICATION	0.9998834022652535	WITHOUT_CLASSIFICATION	1.1659773474646089E-4	IMPLEMENTATION
// ?G  | boolean | True if file1 exists and has a group ownership equal to the caller's group	WITHOUT_CLASSIFICATION	0.9999595027773777	WITHOUT_CLASSIFICATION	4.0497222622285185E-5	IMPLEMENTATION
// ?k  | boolean | True if file1 exists and has the sticky bit set	WITHOUT_CLASSIFICATION	0.9999233323926092	WITHOUT_CLASSIFICATION	7.666760739079592E-5	IMPLEMENTATION
// ?M  | Time    | Last modification time for file1	WITHOUT_CLASSIFICATION	0.9998878321423088	WITHOUT_CLASSIFICATION	1.1216785769119866E-4	IMPLEMENTATION
// ?o  | boolean | True if file1 exists and is owned by the caller's effective uid	WITHOUT_CLASSIFICATION	0.9999515502600584	WITHOUT_CLASSIFICATION	4.8449739941479524E-5	IMPLEMENTATION
// ?O  | boolean | True if file1 exists and is owned by the caller's real uid 	WITHOUT_CLASSIFICATION	0.9999508500862193	WITHOUT_CLASSIFICATION	4.9149913780635346E-5	IMPLEMENTATION
// ?p  | boolean | True if file1 exists and is a fifo	WITHOUT_CLASSIFICATION	0.9998969040086891	WITHOUT_CLASSIFICATION	1.030959913108486E-4	IMPLEMENTATION
// ?r  | boolean | True if file1 is readable by the effective uid/gid of the caller	WITHOUT_CLASSIFICATION	0.9999399742512384	WITHOUT_CLASSIFICATION	6.00257487617171E-5	IMPLEMENTATION
// ?s  | int/nil | If file1 has nonzero size, return the size, otherwise nil	WITHOUT_CLASSIFICATION	0.9998696500689869	WITHOUT_CLASSIFICATION	1.303499310131882E-4	IMPLEMENTATION
// ?S  | boolean | True if file1 exists and is a socket	WITHOUT_CLASSIFICATION	0.9998971618949564	WITHOUT_CLASSIFICATION	1.0283810504358587E-4	IMPLEMENTATION
// ?u  | boolean | True if file1 has the setuid bit set	WITHOUT_CLASSIFICATION	0.999896969375285	WITHOUT_CLASSIFICATION	1.0303062471487057E-4	IMPLEMENTATION
// ?x  | boolean | True if file1 exists and is executable by the effective uid/gid	WITHOUT_CLASSIFICATION	0.999931177828715	WITHOUT_CLASSIFICATION	6.88221712851025E-5	IMPLEMENTATION
// ?X  | boolean | True if file1 exists and is executable by the real uid/gid	WITHOUT_CLASSIFICATION	0.9999310856084549	WITHOUT_CLASSIFICATION	6.89143915450807E-5	IMPLEMENTATION
// ?z  | boolean | True if file1 exists and has a zero length	WITHOUT_CLASSIFICATION	0.9999114593049061	WITHOUT_CLASSIFICATION	8.854069509388341E-5	IMPLEMENTATION
// ?=  | boolean | True if the modification times of file1 and file2 are equal	WITHOUT_CLASSIFICATION	0.9999574764248025	WITHOUT_CLASSIFICATION	4.252357519762244E-5	IMPLEMENTATION
// ?<  | boolean | True if the modification time of file1 is prior to that of file2	WITHOUT_CLASSIFICATION	0.9999547545290544	WITHOUT_CLASSIFICATION	4.5245470945551414E-5	IMPLEMENTATION
// ?>  | boolean | True if the modification time of file1 is after that of file2	WITHOUT_CLASSIFICATION	0.9999554421919564	WITHOUT_CLASSIFICATION	4.4557808043511375E-5	IMPLEMENTATION
// ?-  | boolean | True if file1 and file2 are identical	WITHOUT_CLASSIFICATION	0.9998864457214798	WITHOUT_CLASSIFICATION	1.1355427852028918E-4	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9998926932021635	WITHOUT_CLASSIFICATION	1.0730679783655961E-4	IMPLEMENTATION
// Error info is per-thread	WITHOUT_CLASSIFICATION	0.9999395388729646	WITHOUT_CLASSIFICATION	6.046112703549869E-5	IMPLEMENTATION
// init errorInfo to nil	WITHOUT_CLASSIFICATION	0.999887772848994	WITHOUT_CLASSIFICATION	1.1222715100609646E-4	IMPLEMENTATION
// if we're already aborting, we can receive no further mail	WITHOUT_CLASSIFICATION	0.9999312678536774	WITHOUT_CLASSIFICATION	6.873214632263958E-5	IMPLEMENTATION
// If this thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9998710322331794	WITHOUT_CLASSIFICATION	1.2896776682054113E-4	IMPLEMENTATION
// new interrupt, to hopefully wake it out of any blocking IO	WITHOUT_CLASSIFICATION	0.999876539424981	WITHOUT_CLASSIFICATION	1.2346057501900833E-4	IMPLEMENTATION
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999774385433803	WITHOUT_CLASSIFICATION	2.2561456619800564E-5	IMPLEMENTATION
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999774385433803	WITHOUT_CLASSIFICATION	2.2561456619800564E-5	IMPLEMENTATION
// JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999654376892828	WITHOUT_CLASSIFICATION	3.456231071710588E-5	IMPLEMENTATION
// JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999690241378894	WITHOUT_CLASSIFICATION	3.097586211072799E-5	IMPLEMENTATION
// for Thread::start, which does not call the subclass's initialize	WITHOUT_CLASSIFICATION	0.9999793569391378	WITHOUT_CLASSIFICATION	2.0643060862272306E-5	IMPLEMENTATION
// JRUBY-3568, inherit threadgroup or use default	WITHOUT_CLASSIFICATION	0.9999224854292365	WITHOUT_CLASSIFICATION	7.751457076352663E-5	IMPLEMENTATION
// MRI behavior: value given in seconds; converted to Float; less // than or equal to zero returns immediately; returns nil	WITHOUT_CLASSIFICATION	0.9999636805975004	WITHOUT_CLASSIFICATION	3.6319402499702976E-5	IMPLEMENTATION
// If the target thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999461290391393	WITHOUT_CLASSIFICATION	5.3870960860769596E-5	IMPLEMENTATION
// We need this loop in order to be able to "unblock" the // join call without actually calling interrupt.	WITHOUT_CLASSIFICATION	0.9999009730258549	WITHOUT_CLASSIFICATION	9.902697414510517E-5	IMPLEMENTATION
// attempt to decriticalize all if we're the critical thread	WITHOUT_CLASSIFICATION	0.9999457132737262	WITHOUT_CLASSIFICATION	5.428672627370642E-5	IMPLEMENTATION
// not valid for "dead" state	WITHOUT_CLASSIFICATION	0.9995053284552624	WITHOUT_CLASSIFICATION	4.9467154473756E-4	IMPLEMENTATION
// If the killee thread is the same as the killer thread, just die	WITHOUT_CLASSIFICATION	0.9999391009895089	WITHOUT_CLASSIFICATION	6.089901049097988E-5	IMPLEMENTATION
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999732059308963	WITHOUT_CLASSIFICATION	2.6794069103663504E-5	IMPLEMENTATION
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999732059308963	WITHOUT_CLASSIFICATION	2.6794069103663504E-5	IMPLEMENTATION
// ignore; I don't like doing it, but it seems like we // really just need to make all channels non-blocking by // default and use select when implementing blocking ops, // so if this remains set non-blocking, perhaps it's not // such a big deal...	WITHOUT_CLASSIFICATION	0.9999627865151134	WITHOUT_CLASSIFICATION	3.721348488663392E-5	IMPLEMENTATION
// can't select, just have to do a blocking call	WITHOUT_CLASSIFICATION	0.9999256399353194	WITHOUT_CLASSIFICATION	7.436006468074404E-5	IMPLEMENTATION
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9998999936573634	WITHOUT_CLASSIFICATION	1.000063426366387E-4	IMPLEMENTATION
// Create Constants class	WITHOUT_CLASSIFICATION	0.9999526386089452	WITHOUT_CLASSIFICATION	4.7361391054760754E-5	IMPLEMENTATION
// Create constants for open flags	WITHOUT_CLASSIFICATION	0.9999601682410512	WITHOUT_CLASSIFICATION	3.983175894888729E-5	IMPLEMENTATION
// Strip off the O_ prefix, so they become File::RDONLY, and so on	WITHOUT_CLASSIFICATION	0.9998968895240508	WITHOUT_CLASSIFICATION	1.0311047594924244E-4	IMPLEMENTATION
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999506158317139	WITHOUT_CLASSIFICATION	4.938416828609059E-5	IMPLEMENTATION
// File::Constants module is included in IO.	WITHOUT_CLASSIFICATION	0.9999064486105088	WITHOUT_CLASSIFICATION	9.355138949126036E-5	IMPLEMENTATION
// Make sure any existing lock is released before we try and close the file	WITHOUT_CLASSIFICATION	0.9999785720677246	WITHOUT_CLASSIFICATION	2.1427932275332965E-5	IMPLEMENTATION
// null channel always succeeds for all locking operations	WITHOUT_CLASSIFICATION	0.9999394025681849	WITHOUT_CLASSIFICATION	6.059743181510573E-5	IMPLEMENTATION
// Paths which end in "/" or "\\" must be stripped off.	WITHOUT_CLASSIFICATION	0.9998696329656866	WITHOUT_CLASSIFICATION	1.3036703431338798E-4	IMPLEMENTATION
// Special case for handling ACCMODE, since constantine will generate // an invalid value if it is not defined by the platform.	WITHOUT_CLASSIFICATION	0.9999863029551258	WITHOUT_CLASSIFICATION	1.3697044874153138E-5	IMPLEMENTATION
// Return false here	WITHOUT_CLASSIFICATION	0.9998220630958227	WITHOUT_CLASSIFICATION	1.7793690417733138E-4	IMPLEMENTATION
// Return false here	WITHOUT_CLASSIFICATION	0.9998220630958227	WITHOUT_CLASSIFICATION	1.7793690417733138E-4	IMPLEMENTATION
// We're not actually a real file, so we can't flock	WITHOUT_CLASSIFICATION	0.9997208498446416	WITHOUT_CLASSIFICATION	2.791501553584273E-4	IMPLEMENTATION
// Should we do anything?	WITHOUT_CLASSIFICATION	0.9995686521794606	WITHOUT_CLASSIFICATION	4.313478205394285E-4	IMPLEMENTATION
/* File class methods */	WITHOUT_CLASSIFICATION	0.9998933029806201	WITHOUT_CLASSIFICATION	1.066970193800419E-4	IMPLEMENTATION
// MRI-compatible basename handling for windows drive letter paths	WITHOUT_CLASSIFICATION	0.9998497871312145	WITHOUT_CLASSIFICATION	1.5021286878543182E-4	IMPLEMENTATION
// strip c: away from relative-pathed name	WITHOUT_CLASSIFICATION	0.9998872758395695	WITHOUT_CLASSIFICATION	1.1272416043042234E-4	IMPLEMENTATION
// C:\ is returned unchanged	WITHOUT_CLASSIFICATION	0.9999155677001786	WITHOUT_CLASSIFICATION	8.443229982141328E-5	IMPLEMENTATION
// -1 no match; 0 it is dot file not extension	WITHOUT_CLASSIFICATION	0.999890742672839	WITHOUT_CLASSIFICATION	1.092573271610135E-4	IMPLEMENTATION
// trim trailing slashes	WITHOUT_CLASSIFICATION	0.9998362246774539	WITHOUT_CLASSIFICATION	1.6377532254597572E-4	IMPLEMENTATION
// Dot is not at beginning and not at end of filename. 	WITHOUT_CLASSIFICATION	0.9999521118176987	WITHOUT_CLASSIFICATION	4.788818230139121E-5	IMPLEMENTATION
// Handle ~user paths 	WITHOUT_CLASSIFICATION	0.9998486294798864	WITHOUT_CLASSIFICATION	1.5137052011363647E-4	IMPLEMENTATION
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9998999936573634	WITHOUT_CLASSIFICATION	1.000063426366387E-4	IMPLEMENTATION
// Include additional path separator // (so that dirname of "C:\file.txt" is  "C:\", not "C:")	WITHOUT_CLASSIFICATION	0.9998589382854575	WITHOUT_CLASSIFICATION	1.4106171454256178E-4	IMPLEMENTATION
// FNFException can be thrown in both cases, when the file // is not found, or when permission is denied.	WITHOUT_CLASSIFICATION	0.9999819537692082	WITHOUT_CLASSIFICATION	1.804623079186246E-5	IMPLEMENTATION
// No directory delimeter.  Rest of string is username	WITHOUT_CLASSIFICATION	0.9999622775867844	WITHOUT_CLASSIFICATION	3.772241321570129E-5	IMPLEMENTATION
// If there's a second argument, it's the path to which the first  // argument is relative.	WITHOUT_CLASSIFICATION	0.9999773489003609	WITHOUT_CLASSIFICATION	2.265109963905152E-5	IMPLEMENTATION
// Handle ~user paths.	WITHOUT_CLASSIFICATION	0.9998487285440285	WITHOUT_CLASSIFICATION	1.5127145597148835E-4	IMPLEMENTATION
// If there's no second argument, simply use the working directory  // of the runtime.	WITHOUT_CLASSIFICATION	0.9999800200990705	WITHOUT_CLASSIFICATION	1.997990092946639E-5	IMPLEMENTATION
// Find out which string to check.	WITHOUT_CLASSIFICATION	0.999935300143337	WITHOUT_CLASSIFICATION	6.469985666303375E-5	IMPLEMENTATION
// Single '~' as whole path to expand	WITHOUT_CLASSIFICATION	0.9998609433442359	WITHOUT_CLASSIFICATION	1.3905665576406667E-4	IMPLEMENTATION
// Count number of extra slashes in the beginning of the string.	WITHOUT_CLASSIFICATION	0.9999877979361375	WITHOUT_CLASSIFICATION	1.2202063862515976E-5	IMPLEMENTATION
// '~user/...' as path to expand	WITHOUT_CLASSIFICATION	0.9998413847225063	WITHOUT_CLASSIFICATION	1.5861527749362028E-4	IMPLEMENTATION
// '~/...' as path to expand	WITHOUT_CLASSIFICATION	0.9998233321531457	WITHOUT_CLASSIFICATION	1.7666784685438575E-4	IMPLEMENTATION
// Prepare a string with the same number of redundant slashes so that  // we easily can prepend it to the result.	WITHOUT_CLASSIFICATION	0.9999904503598593	WITHOUT_CLASSIFICATION	9.54964014073758E-6	IMPLEMENTATION
// If there are N slashes, then we want N-1.	WITHOUT_CLASSIFICATION	0.9999232886579601	WITHOUT_CLASSIFICATION	7.67113420399278E-5	IMPLEMENTATION
// no canonical path yet or length is zero, and we have a / followed by a dot...	WITHOUT_CLASSIFICATION	0.9999052148308735	WITHOUT_CLASSIFICATION	9.478516912652249E-5	IMPLEMENTATION
// we don't have another slash after this, so replace /. with /	WITHOUT_CLASSIFICATION	0.9999261517664543	WITHOUT_CLASSIFICATION	7.38482335457136E-5	IMPLEMENTATION
// we do have another slash; omit both / and . (JRUBY-1606)	WITHOUT_CLASSIFICATION	0.9997724955215588	WITHOUT_CLASSIFICATION	2.2750447844119913E-4	IMPLEMENTATION
// do nothing, we should not delete the drive letter	WITHOUT_CLASSIFICATION	0.999989097390059	WITHOUT_CLASSIFICATION	1.0902609940932392E-5	IMPLEMENTATION
/* rb: check_modifiable */	WITHOUT_CLASSIFICATION	0.9997942819102335	WITHOUT_CLASSIFICATION	2.0571808976642663E-4	IMPLEMENTATION
/* rb: readable */	WITHOUT_CLASSIFICATION	0.9997593773332275	WITHOUT_CLASSIFICATION	2.406226667724984E-4	IMPLEMENTATION
// rename is successful	WITHOUT_CLASSIFICATION	0.9999223369444525	WITHOUT_CLASSIFICATION	7.766305554744534E-5	IMPLEMENTATION
// rename via Java API call wasn't successful, let's try some tricks, similar to MRI 	WITHOUT_CLASSIFICATION	0.9999428958550542	WITHOUT_CLASSIFICATION	5.7104144945878265E-5	IMPLEMENTATION
// try to rename one more time	WITHOUT_CLASSIFICATION	0.9998844095472872	WITHOUT_CLASSIFICATION	1.1559045271281169E-4	IMPLEMENTATION
// Can we produce IOError which bypasses a close?	WITHOUT_CLASSIFICATION	0.9998407034292712	WITHOUT_CLASSIFICATION	1.5929657072870002E-4	IMPLEMENTATION
// Fast path since JNA stat is about 10x slower than this	WITHOUT_CLASSIFICATION	0.9998591097327097	WITHOUT_CLASSIFICATION	1.4089026729034173E-4	IMPLEMENTATION
// RubyContinuation	WITHOUT_CLASSIFICATION	0.9997524207986632	WITHOUT_CLASSIFICATION	2.4757920133680963E-4	IMPLEMENTATION
/*     *  Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq)     *  it doesn't initialize ifNone field     */	WITHOUT_CLASSIFICATION	0.9999953586878382	WITHOUT_CLASSIFICATION	4.64131216180705E-6	IMPLEMENTATION
// 16 ?	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
// generation count for O(1) clears	WITHOUT_CLASSIFICATION	0.9999529845028298	WITHOUT_CLASSIFICATION	4.701549717026068E-5	IMPLEMENTATION
// size + 1;	WITHOUT_CLASSIFICATION	0.9998111187092099	WITHOUT_CLASSIFICATION	1.8888129078998046E-4	IMPLEMENTATION
// suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen	WITHOUT_CLASSIFICATION	0.9998531813988212	WITHOUT_CLASSIFICATION	1.4681860117882737E-4	IMPLEMENTATION
// ------------------------------	WITHOUT_CLASSIFICATION	0.9999825244148712	WITHOUT_CLASSIFICATION	1.7475585128724144E-5	IMPLEMENTATION
// ------------------------------	WITHOUT_CLASSIFICATION	0.9999825244148712	WITHOUT_CLASSIFICATION	1.7475585128724144E-5	IMPLEMENTATION
// put implementation	WITHOUT_CLASSIFICATION	0.9863399159407107	WITHOUT_CLASSIFICATION	0.013660084059289396	IMPLEMENTATION
// get implementation	WITHOUT_CLASSIFICATION	0.9939851710714933	WITHOUT_CLASSIFICATION	0.006014828928506698	IMPLEMENTATION
// specialized for value	WITHOUT_CLASSIFICATION	0.9999032932577777	WITHOUT_CLASSIFICATION	9.670674222224136E-5	IMPLEMENTATION
// delete implementation	WITHOUT_CLASSIFICATION	0.99718058443849	WITHOUT_CLASSIFICATION	0.002819415561510026	IMPLEMENTATION
// n.b. we need to recompute the hash in case the key object was modified	WITHOUT_CLASSIFICATION	0.9998792963598874	WITHOUT_CLASSIFICATION	1.2070364011258476E-4	IMPLEMENTATION
/* ============================     * End of hash internals     * ============================     */	WITHOUT_CLASSIFICATION	0.9999236134005293	WITHOUT_CLASSIFICATION	7.638659947068006E-5	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================     */	WITHOUT_CLASSIFICATION	0.9999244293570857	WITHOUT_CLASSIFICATION	7.557064291430245E-5	IMPLEMENTATION
// update the hash value	WITHOUT_CLASSIFICATION	0.9999695899382044	WITHOUT_CLASSIFICATION	3.0410061795614434E-5	IMPLEMENTATION
// other hash does not contain key	WITHOUT_CLASSIFICATION	0.9998778240271619	WITHOUT_CLASSIFICATION	1.2217597283818428E-4	IMPLEMENTATION
// rb_yield_values(2,...) equivalent	WITHOUT_CLASSIFICATION	0.9996861255861401	WITHOUT_CLASSIFICATION	3.138744138599293E-4	IMPLEMENTATION
// Satisfy java.util.Set interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999171105706649	WITHOUT_CLASSIFICATION	8.288942933503058E-5	IMPLEMENTATION
// remain where we are	WITHOUT_CLASSIFICATION	0.9998715753087581	WITHOUT_CLASSIFICATION	1.2842469124186E-4	IMPLEMENTATION
// We use file test since it is faster than a stat; also euid == uid in Java always	WITHOUT_CLASSIFICATION	0.9998773238002415	WITHOUT_CLASSIFICATION	1.226761997585602E-4	IMPLEMENTATION
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999498149496885	WITHOUT_CLASSIFICATION	5.0185050311444804E-5	IMPLEMENTATION
// once hasNext has been called, we commit to next() returning // the entry it found, even if it were subsequently deleted	WITHOUT_CLASSIFICATION	0.9999577353264926	WITHOUT_CLASSIFICATION	4.226467350748655E-5	IMPLEMENTATION
// Not exposed by filetest, but so similiar in nature that it is stored here	WITHOUT_CLASSIFICATION	0.999814603837738	WITHOUT_CLASSIFICATION	1.85396162261952E-4	IMPLEMENTATION
// We do both writable and writable_real through the same method because // in our java process effective and real userid will always be the same.	WITHOUT_CLASSIFICATION	0.9999719103131416	WITHOUT_CLASSIFICATION	2.8089686858359822E-5	IMPLEMENTATION
// first try as directory	WITHOUT_CLASSIFICATION	0.9999439716291623	WITHOUT_CLASSIFICATION	5.602837083766617E-5	IMPLEMENTATION
// next as regular file	WITHOUT_CLASSIFICATION	0.9997930212772204	WITHOUT_CLASSIFICATION	2.0697872277953733E-4	IMPLEMENTATION
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9999434201632771	WITHOUT_CLASSIFICATION	5.657983672284566E-5	IMPLEMENTATION
// NIO-based	WITHOUT_CLASSIFICATION	0.9997542288714849	WITHOUT_CLASSIFICATION	2.457711285151142E-4	IMPLEMENTATION
// NIO-based	WITHOUT_CLASSIFICATION	0.9997542288714849	WITHOUT_CLASSIFICATION	2.457711285151142E-4	IMPLEMENTATION
// Stream-based	WITHOUT_CLASSIFICATION	0.9997770641519801	WITHOUT_CLASSIFICATION	2.2293584801997743E-4	IMPLEMENTATION
// special constructor that accepts stream, not channel	WITHOUT_CLASSIFICATION	0.9998860398636864	WITHOUT_CLASSIFICATION	1.1396013631354178E-4	IMPLEMENTATION
/*     * We use FILE versus IO to match T_FILE in MRI.     */	WITHOUT_CLASSIFICATION	0.9999559691789072	WITHOUT_CLASSIFICATION	4.4030821092852297E-5	IMPLEMENTATION
// Constants for seek	WITHOUT_CLASSIFICATION	0.9998954550629159	WITHOUT_CLASSIFICATION	1.0454493708416201E-4	IMPLEMENTATION
// confirm we're not reopening self's channel	WITHOUT_CLASSIFICATION	0.9999008329231508	WITHOUT_CLASSIFICATION	9.916707684913951E-5	IMPLEMENTATION
// check if we're a stdio IO, and ensure we're not badly mutilated	WITHOUT_CLASSIFICATION	0.9999594527248005	WITHOUT_CLASSIFICATION	4.054727519943495E-5	IMPLEMENTATION
// dup2 new fd into self to preserve fileno and references to it	WITHOUT_CLASSIFICATION	0.9999108054336651	WITHOUT_CLASSIFICATION	8.919456633495381E-5	IMPLEMENTATION
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999196110410896	WITHOUT_CLASSIFICATION	8.038895891036274E-5	IMPLEMENTATION
// re-register the descriptor	WITHOUT_CLASSIFICATION	0.9999122687291676	WITHOUT_CLASSIFICATION	8.773127083238643E-5	IMPLEMENTATION
// since we're not actually duping the incoming channel into our handler, we need to // copy the original sync behavior from the other handler	WITHOUT_CLASSIFICATION	0.9999540422869344	WITHOUT_CLASSIFICATION	4.5957713065638566E-5	IMPLEMENTATION
// re-register	WITHOUT_CLASSIFICATION	0.9998061242125074	WITHOUT_CLASSIFICATION	1.9387578749259187E-4	IMPLEMENTATION
// A potentially previously close IO is being 'reopened'.	WITHOUT_CLASSIFICATION	0.9998778745933043	WITHOUT_CLASSIFICATION	1.2212540669558335E-4	IMPLEMENTATION
/*     * Ensure that separator is valid otherwise give it the default paragraph separator.     */	WITHOUT_CLASSIFICATION	0.9999915150834575	WITHOUT_CLASSIFICATION	8.484916542391108E-6	IMPLEMENTATION
// loop until we see the nth separator char	WITHOUT_CLASSIFICATION	0.9999183028162205	WITHOUT_CLASSIFICATION	8.169718377957682E-5	IMPLEMENTATION
// if we hit EOF or reached limit then we're done	WITHOUT_CLASSIFICATION	0.9999168439573745	WITHOUT_CLASSIFICATION	8.315604262559572E-5	IMPLEMENTATION
// this is for a range check, near as I can tell	WITHOUT_CLASSIFICATION	0.9999165481736847	WITHOUT_CLASSIFICATION	8.345182631534712E-5	IMPLEMENTATION
// IO class methods.	WITHOUT_CLASSIFICATION	0.9998411317622751	WITHOUT_CLASSIFICATION	1.5886823772486879E-4	IMPLEMENTATION
// use original modes	WITHOUT_CLASSIFICATION	0.9998991648854044	WITHOUT_CLASSIFICATION	1.008351145955094E-4	IMPLEMENTATION
// See if we already have this descriptor open. // If so then we can mostly share the handler (keep open // file, but possibly change the mode).	WITHOUT_CLASSIFICATION	0.9999838040456095	WITHOUT_CLASSIFICATION	1.619595439055765E-5	IMPLEMENTATION
// redundant, done above as well	WITHOUT_CLASSIFICATION	0.9998113496926962	WITHOUT_CLASSIFICATION	1.8865030730379526E-4	IMPLEMENTATION
// MRI behavior: swallow StandardErorrs	WITHOUT_CLASSIFICATION	0.9998457666591527	WITHOUT_CLASSIFICATION	1.5423334084736242E-4	IMPLEMENTATION
// -1 == don't set permissions	WITHOUT_CLASSIFICATION	0.9998555374083283	WITHOUT_CLASSIFICATION	1.444625916716221E-4	IMPLEMENTATION
// isRetained=true	WITHOUT_CLASSIFICATION	0.9997571866811674	WITHOUT_CLASSIFICATION	2.4281331883269078E-4	IMPLEMENTATION
// This appears to be some windows-only mode.  On a java platform this is a no-op	WITHOUT_CLASSIFICATION	0.9999597364665964	WITHOUT_CLASSIFICATION	4.026353340358458E-5	IMPLEMENTATION
// if not sync, we switch to write buffered mode	WITHOUT_CLASSIFICATION	0.9999280397827048	WITHOUT_CLASSIFICATION	7.19602172952029E-5	IMPLEMENTATION
/*     * Throw bad file descriptor is we can not read on supplied descriptor.     */	WITHOUT_CLASSIFICATION	0.9999545104631006	WITHOUT_CLASSIFICATION	4.5489536899482194E-5	IMPLEMENTATION
//Everything written	WITHOUT_CLASSIFICATION	0.999831492874694	WITHOUT_CLASSIFICATION	1.6850712530590967E-4	IMPLEMENTATION
//            return len - n;	WITHOUT_CLASSIFICATION	0.9999796761012514	WITHOUT_CLASSIFICATION	2.032389874863048E-5	IMPLEMENTATION
// Claims conversion is done via 'to_s' in docs.	WITHOUT_CLASSIFICATION	0.9999199535267945	WITHOUT_CLASSIFICATION	8.00464732054025E-5	IMPLEMENTATION
// Of course this isn't particularly useful.	WITHOUT_CLASSIFICATION	0.9997964353358073	WITHOUT_CLASSIFICATION	2.0356466419259807E-4	IMPLEMENTATION
// Must be back on first line on rewind.	WITHOUT_CLASSIFICATION	0.9998999799730557	WITHOUT_CLASSIFICATION	1.0002002694422012E-4	IMPLEMENTATION
// Register the new descriptor	WITHOUT_CLASSIFICATION	0.9999309857992354	WITHOUT_CLASSIFICATION	6.901420076459473E-5	IMPLEMENTATION
// cleanup, raising errors if any	WITHOUT_CLASSIFICATION	0.999864774675373	WITHOUT_CLASSIFICATION	1.352253246269334E-4	IMPLEMENTATION
// hmmmm	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
// I believe Ruby bails out with a "bug" if closing fails	WITHOUT_CLASSIFICATION	0.9998454245281333	WITHOUT_CLASSIFICATION	1.5457547186675696E-4	IMPLEMENTATION
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec. // And why the hell does webrick pass this in as a first argument!!!!!	WITHOUT_CLASSIFICATION	0.9999942178455694	WITHOUT_CLASSIFICATION	5.7821544305274935E-6	IMPLEMENTATION
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec.	WITHOUT_CLASSIFICATION	0.9999885140699669	WITHOUT_CLASSIFICATION	1.1485930033171696E-5	IMPLEMENTATION
// Length to read	WITHOUT_CLASSIFICATION	0.9998689819386996	WITHOUT_CLASSIFICATION	1.3101806130040895E-4	IMPLEMENTATION
// String/Buffer to read it into	WITHOUT_CLASSIFICATION	0.9999148782576985	WITHOUT_CLASSIFICATION	8.512174230143302E-5	IMPLEMENTATION
// cryptic for the uninitiated...	WITHOUT_CLASSIFICATION	0.9998692389721027	WITHOUT_CLASSIFICATION	1.3076102789731517E-4	IMPLEMENTATION
// select until read is ready	WITHOUT_CLASSIFICATION	0.9999456080508065	WITHOUT_CLASSIFICATION	5.439194919348678E-5	IMPLEMENTATION
//        ByteList buffer = null;	WITHOUT_CLASSIFICATION	0.9999485634572455	WITHOUT_CLASSIFICATION	5.143654275440854E-5	IMPLEMENTATION
//            buffer = str.getByteList();	WITHOUT_CLASSIFICATION	0.9999449088570749	WITHOUT_CLASSIFICATION	5.509114292520325E-5	IMPLEMENTATION
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9998314576836598	WITHOUT_CLASSIFICATION	1.6854231634024947E-4	IMPLEMENTATION
/* rb: writable */	WITHOUT_CLASSIFICATION	0.9997841773480003	WITHOUT_CLASSIFICATION	2.158226519996685E-4	IMPLEMENTATION
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9998314576836598	WITHOUT_CLASSIFICATION	1.6854231634024947E-4	IMPLEMENTATION
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999656820585414	WITHOUT_CLASSIFICATION	3.431794145864137E-5	IMPLEMENTATION
// TODO: read into buffer using all the fread logic //        int read = openFile.getMainStream().fread(buffer);	WITHOUT_CLASSIFICATION	0.976319170767378	WITHOUT_CLASSIFICATION	0.023680829232621978	IMPLEMENTATION
// truncate buffer string to zero, if provided	WITHOUT_CLASSIFICATION	0.9999429597401542	WITHOUT_CLASSIFICATION	5.704025984582498E-5	IMPLEMENTATION
// TODO: READ_CHECK from MRI	WITHOUT_CLASSIFICATION	0.7893991884689555	WITHOUT_CLASSIFICATION	0.2106008115310444	IMPLEMENTATION
/* class methods for IO */	WITHOUT_CLASSIFICATION	0.9999007139714852	WITHOUT_CLASSIFICATION	9.928602851482173E-5	IMPLEMENTATION
// save blocking state	WITHOUT_CLASSIFICATION	0.9998994742233976	WITHOUT_CLASSIFICATION	1.0052577660236956E-4	IMPLEMENTATION
// write	WITHOUT_CLASSIFICATION	0.9962330952602461	WITHOUT_CLASSIFICATION	0.0037669047397540668	IMPLEMENTATION
// Java's select doesn't do anything about this, so we leave it be.	WITHOUT_CLASSIFICATION	0.9999698262116312	WITHOUT_CLASSIFICATION	3.017378836874849E-5	IMPLEMENTATION
// make all sockets blocking as configured again // close unregisters all channels, so we can safely reset blocking modes	WITHOUT_CLASSIFICATION	0.9999468863769152	WITHOUT_CLASSIFICATION	5.3113623084658634E-5	IMPLEMENTATION
// FIXME: process options	WITHOUT_CLASSIFICATION	0.9998408824394488	WITHOUT_CLASSIFICATION	1.5911756055132147E-4	IMPLEMENTATION
// Enebo: annotation processing forced me to do pangea method here...	WITHOUT_CLASSIFICATION	0.9998529997171272	WITHOUT_CLASSIFICATION	1.4700028287276836E-4	IMPLEMENTATION
// NIO based pipe	WITHOUT_CLASSIFICATION	0.9997587544650033	WITHOUT_CLASSIFICATION	2.412455349967562E-4	IMPLEMENTATION
// not using remove(Object) here to avoid the equals() call	WITHOUT_CLASSIFICATION	0.9996544961733337	WITHOUT_CLASSIFICATION	3.455038266663085E-4	IMPLEMENTATION
// raise will also wake the thread from selection	WITHOUT_CLASSIFICATION	0.99995251638553	WITHOUT_CLASSIFICATION	4.7483614470094875E-5	IMPLEMENTATION
/* may need to handle ENC_CODERANGE_BROKEN */	WITHOUT_CLASSIFICATION	0.9996324553378834	WITHOUT_CLASSIFICATION	3.675446621167062E-4	IMPLEMENTATION
// TODO: rb_usascii_str_new2	WITHOUT_CLASSIFICATION	0.9007060336426911	WITHOUT_CLASSIFICATION	0.09929396635730894	IMPLEMENTATION
// If we know what method was being called, strip everything // before the call. This hides the JRuby and reflection internals.	WITHOUT_CLASSIFICATION	0.9999294123662944	WITHOUT_CLASSIFICATION	7.058763370562384E-5	IMPLEMENTATION
// The class of this object	WITHOUT_CLASSIFICATION	0.9999604099627366	WITHOUT_CLASSIFICATION	3.959003726345829E-5	IMPLEMENTATION
// zeroed by jvm	WITHOUT_CLASSIFICATION	0.9997589797846177	WITHOUT_CLASSIFICATION	2.4102021538229053E-4	IMPLEMENTATION
//objectClass.defineAnnotatedMethods(BasicObjectMethods.class);	WITHOUT_CLASSIFICATION	0.9998715292143506	WITHOUT_CLASSIFICATION	1.2847078564942572E-4	IMPLEMENTATION
// JRUBY-4113: callers should not call setTaint on immediate objects	WITHOUT_CLASSIFICATION	0.9999014158872431	WITHOUT_CLASSIFICATION	9.858411275682103E-5	IMPLEMENTATION
// rb_class_boot	WITHOUT_CLASSIFICATION	0.9997515399162304	WITHOUT_CLASSIFICATION	2.4846008376949665E-4	IMPLEMENTATION
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9998040793538033	WITHOUT_CLASSIFICATION	1.959206461967906E-4	IMPLEMENTATION
// 1.9 rb_check_to_integer	WITHOUT_CLASSIFICATION	0.9998069586782752	WITHOUT_CLASSIFICATION	1.9304132172492995E-4	IMPLEMENTATION
// for interface impls	WITHOUT_CLASSIFICATION	0.9999529213009903	WITHOUT_CLASSIFICATION	4.707869900958787E-5	IMPLEMENTATION
// We're cloning ourselves, so we know the result should be a RubyObject	WITHOUT_CLASSIFICATION	0.9998555008440625	WITHOUT_CLASSIFICATION	1.444991559376293E-4	IMPLEMENTATION
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999492258735984	WITHOUT_CLASSIFICATION	5.077412640163383E-5	IMPLEMENTATION
// can't use -v and stdin	WITHOUT_CLASSIFICATION	0.9998708717992049	WITHOUT_CLASSIFICATION	1.2912820079516937E-4	IMPLEMENTATION
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9998817355651953	WITHOUT_CLASSIFICATION	1.1826443480466834E-4	IMPLEMENTATION
// Equivalent of Data_Get_Struct // This will first check that the object in question is actually a T_DATA equivalent.	WITHOUT_CLASSIFICATION	0.999919695963428	WITHOUT_CLASSIFICATION	8.030403657192432E-5	IMPLEMENTATION
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9998428551857624	WITHOUT_CLASSIFICATION	1.5714481423761612E-4	IMPLEMENTATION
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9998420785561672	WITHOUT_CLASSIFICATION	1.579214438326433E-4	IMPLEMENTATION
// // INSTANCE VARIABLE API METHODS //	WITHOUT_CLASSIFICATION	0.9998419577772956	WITHOUT_CLASSIFICATION	1.5804222270434043E-4	IMPLEMENTATION
// Struct methods	WITHOUT_CLASSIFICATION	0.9998163623683103	WITHOUT_CLASSIFICATION	1.8363763168963818E-4	IMPLEMENTATION
//runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);	WITHOUT_CLASSIFICATION	0.9998747609246285	WITHOUT_CLASSIFICATION	1.2523907537157904E-4	IMPLEMENTATION
// define access methods.	WITHOUT_CLASSIFICATION	0.9998840754173023	WITHOUT_CLASSIFICATION	1.1592458269767472E-4	IMPLEMENTATION
// if we are storing a name as well, index is one too high for values	WITHOUT_CLASSIFICATION	0.9999515593124181	WITHOUT_CLASSIFICATION	4.844068758190623E-5	IMPLEMENTATION
// Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999484882481252	WITHOUT_CLASSIFICATION	5.151175187484381E-5	IMPLEMENTATION
// For binding purposes on the newly created struct types	WITHOUT_CLASSIFICATION	0.999922516608959	WITHOUT_CLASSIFICATION	7.748339104092375E-5	IMPLEMENTATION
// OBJ_INFECT        	WITHOUT_CLASSIFICATION	0.9998462685794594	WITHOUT_CLASSIFICATION	1.5373142054066544E-4	IMPLEMENTATION
// These call* assume ThreadContext = receiver.getRuntime().getCurrentContext()	WITHOUT_CLASSIFICATION	0.9998790088584653	WITHOUT_CLASSIFICATION	1.2099114153475963E-4	IMPLEMENTATION
// Execute iterateMethod again.	WITHOUT_CLASSIFICATION	0.9998733480669382	WITHOUT_CLASSIFICATION	1.2665193306180407E-4	IMPLEMENTATION
/*     * @param nv number of times to cycle or -1 to cycle indefinitely     */	WITHOUT_CLASSIFICATION	0.9999676856942464	WITHOUT_CLASSIFICATION	3.231430575345084E-5	IMPLEMENTATION
// Atomic ?	WITHOUT_CLASSIFICATION	0.9997515399162304	WITHOUT_CLASSIFICATION	2.4846008376949665E-4	IMPLEMENTATION
// Atomic ?	WITHOUT_CLASSIFICATION	0.9997515399162304	WITHOUT_CLASSIFICATION	2.4846008376949665E-4	IMPLEMENTATION
// MUST NOT be used across threads	WITHOUT_CLASSIFICATION	0.9998371528760378	WITHOUT_CLASSIFICATION	1.628471239621581E-4	IMPLEMENTATION
// superClass may be null.	WITHOUT_CLASSIFICATION	0.9998321734485195	WITHOUT_CLASSIFICATION	1.6782655148041056E-4	IMPLEMENTATION
// Containing class...The parent of Object is null. Object should always be last in chain.	WITHOUT_CLASSIFICATION	0.9999047413060962	WITHOUT_CLASSIFICATION	9.525869390378663E-5	IMPLEMENTATION
// ClassId is the name of the class/module sans where it is located. // If it is null, then it an anonymous class.	WITHOUT_CLASSIFICATION	0.9999854815206984	WITHOUT_CLASSIFICATION	1.4518479301572761E-5	IMPLEMENTATION
// ClassProviders return Java class/module (in #defineOrGetClassUnder and // #defineOrGetModuleUnder) when class/module is opened using colon syntax. 	WITHOUT_CLASSIFICATION	0.999971499745972	WITHOUT_CLASSIFICATION	2.8500254027924982E-5	IMPLEMENTATION
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999712514297879	WITHOUT_CLASSIFICATION	2.8748570212176812E-5	IMPLEMENTATION
// Make sure the module we include does not already exist	WITHOUT_CLASSIFICATION	0.9999861614411317	WITHOUT_CLASSIFICATION	1.3838558868354168E-5	IMPLEMENTATION
// MRI checks all types first:	WITHOUT_CLASSIFICATION	0.9998163713279843	WITHOUT_CLASSIFICATION	1.8362867201577267E-4	IMPLEMENTATION
// we need full traces, use default (slow) populator	WITHOUT_CLASSIFICATION	0.9999341070364061	WITHOUT_CLASSIFICATION	6.589296359394664E-5	IMPLEMENTATION
// module/singleton methods are all defined public	WITHOUT_CLASSIFICATION	0.9999511427279566	WITHOUT_CLASSIFICATION	4.88572720433266E-5	IMPLEMENTATION
// See if module is in chain...Cannot match against itself so start at superClass.	WITHOUT_CLASSIFICATION	0.9999188478055184	WITHOUT_CLASSIFICATION	8.115219448151997E-5	IMPLEMENTATION
// We can safely reference methods here instead of doing getMethods() since if we // are adding we are not using a IncludedModuleWrapper.	WITHOUT_CLASSIFICATION	0.9999765990098585	WITHOUT_CLASSIFICATION	2.3400990141503696E-5	IMPLEMENTATION
// we grab serial number first; the worst that will happen is we cache a later // update with an earlier serial number, which would just flush anyway	WITHOUT_CLASSIFICATION	0.9999717017010541	WITHOUT_CLASSIFICATION	2.8298298945977052E-5	IMPLEMENTATION
// update all hierarchies into which this module has been included	WITHOUT_CLASSIFICATION	0.9999698646580064	WITHOUT_CLASSIFICATION	3.013534199370028E-5	IMPLEMENTATION
// This method is intended only for defining new classes in Ruby code, // so it uses the allocator of the specified superclass or default to // the Object allocator. It should NOT be used to define classes that require a native allocator.	WITHOUT_CLASSIFICATION	0.9999904334579555	WITHOUT_CLASSIFICATION	9.56654204449442E-6	IMPLEMENTATION
// need to skip IncludedModuleWrappers	WITHOUT_CLASSIFICATION	0.9997612633501126	WITHOUT_CLASSIFICATION	2.3873664988744155E-4	IMPLEMENTATION
// superClazz = null;	WITHOUT_CLASSIFICATION	0.9998448101680533	WITHOUT_CLASSIFICATION	1.5518983194675776E-4	IMPLEMENTATION
// reopen a java class	WITHOUT_CLASSIFICATION	0.9998831319655038	WITHOUT_CLASSIFICATION	1.1686803449613134E-4	IMPLEMENTATION
// This method is intended only for defining new modules in Ruby code	WITHOUT_CLASSIFICATION	0.9998032790159453	WITHOUT_CLASSIFICATION	1.967209840547677E-4	IMPLEMENTATION
// reopen a java module	WITHOUT_CLASSIFICATION	0.9998413788981083	WITHOUT_CLASSIFICATION	1.5862110189170564E-4	IMPLEMENTATION
//FIXME warning	WITHOUT_CLASSIFICATION	0.9997517347219339	WITHOUT_CLASSIFICATION	2.4826527806609907E-4	IMPLEMENTATION
// FIXME warning	WITHOUT_CLASSIFICATION	0.999618912309067	WITHOUT_CLASSIFICATION	3.8108769093299377E-4	IMPLEMENTATION
// a normal block passed to define_method changes to do arity checking; make it a lambda	WITHOUT_CLASSIFICATION	0.9998632828829797	WITHOUT_CLASSIFICATION	1.3671711702039423E-4	IMPLEMENTATION
// for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope	WITHOUT_CLASSIFICATION	0.999923096781465	WITHOUT_CLASSIFICATION	7.690321853500845E-5	IMPLEMENTATION
// just using required is broken...but no more broken than before zsuper refactoring	WITHOUT_CLASSIFICATION	0.99990594496082	WITHOUT_CLASSIFICATION	9.405503918006132E-5	IMPLEMENTATION
// class and module bodies default to public, so make the block's visibility public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999819832014188	WITHOUT_CLASSIFICATION	1.8016798581159427E-5	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999875789744618	WITHOUT_CLASSIFICATION	1.2421025538189077E-5	IMPLEMENTATION
// MRI error message says Class, even though Module is ok 	WITHOUT_CLASSIFICATION	0.9999660880321721	WITHOUT_CLASSIFICATION	3.391196782783968E-5	IMPLEMENTATION
// scan class hierarchy for module	WITHOUT_CLASSIFICATION	0.9999069838660178	WITHOUT_CLASSIFICATION	9.301613398212378E-5	IMPLEMENTATION
/* Module class methods */	WITHOUT_CLASSIFICATION	0.9998896815776988	WITHOUT_CLASSIFICATION	1.1031842230117043E-4	IMPLEMENTATION
// Note: we change current frames visibility here because the methods which call // this method are all "fast" (e.g. they do not created their own frame).	WITHOUT_CLASSIFICATION	0.9999695325272497	WITHOUT_CLASSIFICATION	3.046747275023262E-5	IMPLEMENTATION
// next in hierarchy is an included version of the module we're attempting, // so we skip including it	WITHOUT_CLASSIFICATION	0.9999803484217902	WITHOUT_CLASSIFICATION	1.965157820986161E-5	IMPLEMENTATION
// if we haven't encountered a real superclass, use the found module as the new inclusion point	WITHOUT_CLASSIFICATION	0.9999710016355302	WITHOUT_CLASSIFICATION	2.8998364469722102E-5	IMPLEMENTATION
// build a list of all modules to consider for inclusion	WITHOUT_CLASSIFICATION	0.9998854320457689	WITHOUT_CLASSIFICATION	1.1456795423125558E-4	IMPLEMENTATION
// if the insertion point is a class, update subclass lists	WITHOUT_CLASSIFICATION	0.9999799487396179	WITHOUT_CLASSIFICATION	2.0051260382034407E-5	IMPLEMENTATION
// if there's a non-null superclass, we're including into a normal class hierarchy; // update subclass relationships to avoid stale parent/child relationships	WITHOUT_CLASSIFICATION	0.9999922033456758	WITHOUT_CLASSIFICATION	7.796654324278543E-6	IMPLEMENTATION
// ////////////////// CLASS VARIABLE RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999954776808535	WITHOUT_CLASSIFICATION	4.5223191463843265E-6	IMPLEMENTATION
// ////////////////// CONSTANT RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999955152800776	WITHOUT_CLASSIFICATION	4.4847199224667826E-6	IMPLEMENTATION
// Note: includes part of fix for JRUBY-1339	WITHOUT_CLASSIFICATION	0.9998601099972416	WITHOUT_CLASSIFICATION	1.3989000275835387E-4	IMPLEMENTATION
// ////////////////// CLASS VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999954776808535	WITHOUT_CLASSIFICATION	4.5223191463843265E-6	IMPLEMENTATION
// Wrong Parameter ?	WITHOUT_CLASSIFICATION	0.9998147625172854	WITHOUT_CLASSIFICATION	1.8523748271450098E-4	IMPLEMENTATION
// not actually called anywhere (all known uses call the fast version)	WITHOUT_CLASSIFICATION	0.999610650124262	WITHOUT_CLASSIFICATION	3.8934987573808496E-4	IMPLEMENTATION
// Not that is loaded loop around to resolve it next pass	WITHOUT_CLASSIFICATION	0.9996509559811447	WITHOUT_CLASSIFICATION	3.4904401885523754E-4	IMPLEMENTATION
// if adding a module under a constant name, set that module's basename to the constant name	WITHOUT_CLASSIFICATION	0.9999485274218463	WITHOUT_CLASSIFICATION	5.14725781538066E-5	IMPLEMENTATION
// Fix for JRUBY-1339 - search hierarchy for constant	WITHOUT_CLASSIFICATION	0.9999193247740435	WITHOUT_CLASSIFICATION	8.067522595644563E-5	IMPLEMENTATION
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.999980550259482	WITHOUT_CLASSIFICATION	1.9449740517957063E-5	IMPLEMENTATION
// removes and returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999824978514087	WITHOUT_CLASSIFICATION	1.750214859126385E-5	IMPLEMENTATION
// we can't rename a file while it's open in windows	WITHOUT_CLASSIFICATION	0.9998913776640663	WITHOUT_CLASSIFICATION	1.0862233593374927E-4	IMPLEMENTATION
//reopen	WITHOUT_CLASSIFICATION	0.995995103579097	WITHOUT_CLASSIFICATION	0.004004896420903003	IMPLEMENTATION
// ARGF methods	WITHOUT_CLASSIFICATION	0.9997963963391473	WITHOUT_CLASSIFICATION	2.036036608527624E-4	IMPLEMENTATION
//         data.currentFile.callMethod(context, "lineno=", line);	WITHOUT_CLASSIFICATION	0.9999505604796801	WITHOUT_CLASSIFICATION	4.943952031983438E-5	IMPLEMENTATION
// one optional, one required args	WITHOUT_CLASSIFICATION	0.9998609095233304	WITHOUT_CLASSIFICATION	1.39090476669495E-4	IMPLEMENTATION
// one optional and no required args	WITHOUT_CLASSIFICATION	0.9998662771104039	WITHOUT_CLASSIFICATION	1.3372288959608364E-4	IMPLEMENTATION
// try to get errno value out of the class	WITHOUT_CLASSIFICATION	0.9999681172266065	WITHOUT_CLASSIFICATION	3.1882773393507586E-5	IMPLEMENTATION
// we got a valid errno value	WITHOUT_CLASSIFICATION	0.9998997532419875	WITHOUT_CLASSIFICATION	1.002467580124667E-4	IMPLEMENTATION
// Ensure we're not running on GCJ, since it's not supported and leads to weird errors	WITHOUT_CLASSIFICATION	0.9999360459952634	WITHOUT_CLASSIFICATION	6.395400473655737E-5	IMPLEMENTATION
// print out as a nice Ruby backtrace	WITHOUT_CLASSIFICATION	0.9998712870634197	WITHOUT_CLASSIFICATION	1.287129365803366E-4	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9998994316016204	WITHOUT_CLASSIFICATION	1.0056839837963263E-4	IMPLEMENTATION
// set thread context JRuby classloader here, for the main thread	WITHOUT_CLASSIFICATION	0.9999492719229608	WITHOUT_CLASSIFICATION	5.0728077039237395E-5	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9998951050408738	WITHOUT_CLASSIFICATION	1.0489495912623864E-4	IMPLEMENTATION
// no script to run, return success below	WITHOUT_CLASSIFICATION	0.9999609653921602	WITHOUT_CLASSIFICATION	3.903460783986129E-5	IMPLEMENTATION
// Skip /usr/bin/env if it's first	WITHOUT_CLASSIFICATION	0.9998566690445747	WITHOUT_CLASSIFICATION	1.4333095542540426E-4	IMPLEMENTATION
// Skip any assignments if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9998680738948752	WITHOUT_CLASSIFICATION	1.3192610512485973E-4	IMPLEMENTATION
// Skip any commandline args if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999009314202267	WITHOUT_CLASSIFICATION	9.906857977322365E-5	IMPLEMENTATION
// ignore error	WITHOUT_CLASSIFICATION	0.9999683302013382	WITHOUT_CLASSIFICATION	3.1669798661746774E-5	IMPLEMENTATION
// ////////////////// COMMON CONSTANT / CVAR METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999955133240289	WITHOUT_CLASSIFICATION	4.486675971128476E-6	IMPLEMENTATION
// ////////////////// INTERNAL MODULE VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999954894255334	WITHOUT_CLASSIFICATION	4.510574466654547E-6	IMPLEMENTATION
// ////////////////// LOW-LEVEL CONSTANT INTERFACE //////////////// // // fetch/store/list constants for this module //	WITHOUT_CLASSIFICATION	0.9999990942001541	WITHOUT_CLASSIFICATION	9.057998459824597E-7	IMPLEMENTATION
// odd	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
// JRubyClient	WITHOUT_CLASSIFICATION	0.999751907618869	WITHOUT_CLASSIFICATION	2.4809238113098945E-4	IMPLEMENTATION
/*     * x = mantissa * 2 ** exponent     *     * Where mantissa is in the range of [.5, 1)     *     */	WITHOUT_CLASSIFICATION	0.9999575297518426	WITHOUT_CLASSIFICATION	4.247024815751729E-5	IMPLEMENTATION
// Make mantissa same sign so we only have one code path.	WITHOUT_CLASSIFICATION	0.9998991258142433	WITHOUT_CLASSIFICATION	1.008741857566379E-4	IMPLEMENTATION
// Increase value to hit lower range.	WITHOUT_CLASSIFICATION	0.9998927062611042	WITHOUT_CLASSIFICATION	1.0729373889582382E-4	IMPLEMENTATION
/*     * r = x * 2 ** y     */	WITHOUT_CLASSIFICATION	0.999947851408213	WITHOUT_CLASSIFICATION	5.214859178705836E-5	IMPLEMENTATION
/*  0! */	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
/*  1! */	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
/*  2! */	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
/*  3! */	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
/*  4! */	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
/*  5! */	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
/*  6! */	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
/*  7! */	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
/*  8! */	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
/*  9! */	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
/* 11! */	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
/* 12! */	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
/* 13! */	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
/* 15! */	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
/* 16! */	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
/* 17! */	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
/* 19! */	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
/* 20! */	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
/* 21! */	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
// Static constants	WITHOUT_CLASSIFICATION	0.9998765093636299	WITHOUT_CLASSIFICATION	1.2349063637008458E-4	IMPLEMENTATION
// Clean-up string representation so that it could be understood // by Java's BigDecimal. Not terribly efficient for now. // 1. MRI allows d and D as exponent separators	WITHOUT_CLASSIFICATION	0.9997627528219558	WITHOUT_CLASSIFICATION	2.3724717804417408E-4	IMPLEMENTATION
// 2. MRI allows underscores anywhere	WITHOUT_CLASSIFICATION	0.9998431869887043	WITHOUT_CLASSIFICATION	1.5681301129578457E-4	IMPLEMENTATION
// 3. MRI ignores the trailing junk	WITHOUT_CLASSIFICATION	0.9999245572524331	WITHOUT_CLASSIFICATION	7.544274756681355E-5	IMPLEMENTATION
// MRI behavior: -0 and +0 are two different things	WITHOUT_CLASSIFICATION	0.9998604198657142	WITHOUT_CLASSIFICATION	1.3958013428583266E-4	IMPLEMENTATION
// Java and MRI definitions of modulo are different.	WITHOUT_CLASSIFICATION	0.9998682859741609	WITHOUT_CLASSIFICATION	1.3171402583918586E-4	IMPLEMENTATION
// Java and MRI definitions of remainder are the same.	WITHOUT_CLASSIFICATION	0.9999345492918703	WITHOUT_CLASSIFICATION	6.545070812963368E-5	IMPLEMENTATION
// Note: MRI has a very non-trivial way of calculating the precision, // so we use very simple approximation here:	WITHOUT_CLASSIFICATION	0.9999090297354442	WITHOUT_CLASSIFICATION	9.097026455582303E-5	IMPLEMENTATION
// Iteration variables, for the square root x and the reciprocal v // initial x:  x0 ~ sqrt() // initial v:  v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999701234565654	WITHOUT_CLASSIFICATION	2.987654343453552E-5	IMPLEMENTATION
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9998638355637683	WITHOUT_CLASSIFICATION	1.3616443623157363E-4	IMPLEMENTATION
// TODO: why this: .setResult();	WITHOUT_CLASSIFICATION	0.9133850932206001	WITHOUT_CLASSIFICATION	0.08661490677939981	IMPLEMENTATION
// integer division	WITHOUT_CLASSIFICATION	0.9997758104101018	WITHOUT_CLASSIFICATION	2.2418958989818397E-4	IMPLEMENTATION
// MRI behavior: "If digits is 0, the result is the same as the / operator."	WITHOUT_CLASSIFICATION	0.9999442925008888	WITHOUT_CLASSIFICATION	5.570749911125583E-5	IMPLEMENTATION
// rounding neccessary	WITHOUT_CLASSIFICATION	0.999822745900648	WITHOUT_CLASSIFICATION	1.7725409935204393E-4	IMPLEMENTATION
// rounding neccessary	WITHOUT_CLASSIFICATION	0.999822745900648	WITHOUT_CLASSIFICATION	1.7725409935204393E-4	IMPLEMENTATION
// Java and MRI definitions of divmod are different.        	WITHOUT_CLASSIFICATION	0.9999114035189934	WITHOUT_CLASSIFICATION	8.859648100661157E-5	IMPLEMENTATION
// JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it	WITHOUT_CLASSIFICATION	0.9999463513448085	WITHOUT_CLASSIFICATION	5.3648655191659694E-5	IMPLEMENTATION
// shift the decimal point just to the right of the digit to be rounded to (divide by 10**(abs(scale))) // -1 -> 10's digit, -2 -> 100's digit, etc.	WITHOUT_CLASSIFICATION	0.9999678341549995	WITHOUT_CLASSIFICATION	3.216584500043723E-5	IMPLEMENTATION
// ...round to that digit	WITHOUT_CLASSIFICATION	0.9998712055054865	WITHOUT_CLASSIFICATION	1.287944945135687E-4	IMPLEMENTATION
// ...and shift the result back to the left (multiply by 10**(abs(scale)))	WITHOUT_CLASSIFICATION	0.999967052048184	WITHOUT_CLASSIFICATION	3.294795181598047E-5	IMPLEMENTATION
//this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are	WITHOUT_CLASSIFICATION	0.9999239199835691	WITHOUT_CLASSIFICATION	7.608001643088191E-5	IMPLEMENTATION
// sign	WITHOUT_CLASSIFICATION	0.9960423185483214	WITHOUT_CLASSIFICATION	0.003957681451678635	IMPLEMENTATION
// significant digits and exponent	WITHOUT_CLASSIFICATION	0.999855903554529	WITHOUT_CLASSIFICATION	1.4409644547085985E-4	IMPLEMENTATION
// normalize the value	WITHOUT_CLASSIFICATION	0.9998889857073159	WITHOUT_CLASSIFICATION	1.1101429268422499E-4	IMPLEMENTATION
// base	WITHOUT_CLASSIFICATION	0.9960365723537254	WITHOUT_CLASSIFICATION	0.003963427646274548	IMPLEMENTATION
// NOTE: MRI's sqrt precision is limited by 100, // but we allow values more than 100.	WITHOUT_CLASSIFICATION	0.99991033774379	WITHOUT_CLASSIFICATION	8.966225620997856E-5	IMPLEMENTATION
// just in case, add a bit of extra precision	WITHOUT_CLASSIFICATION	0.9999283164306786	WITHOUT_CLASSIFICATION	7.168356932142857E-5	IMPLEMENTATION
// eh?!	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
// Note: #fix has only no-arg form, but truncate allows optional parameter.	WITHOUT_CLASSIFICATION	0.9999108837718288	WITHOUT_CLASSIFICATION	8.911622817113389E-5	IMPLEMENTATION
// General number and precision checking	WITHOUT_CLASSIFICATION	0.999895475945049	WITHOUT_CLASSIFICATION	1.0452405495100457E-4	IMPLEMENTATION
// the requested precision	WITHOUT_CLASSIFICATION	0.9998960417261064	WITHOUT_CLASSIFICATION	1.0395827389363128E-4	IMPLEMENTATION
// Proc class	WITHOUT_CLASSIFICATION	0.99982470058497	WITHOUT_CLASSIFICATION	1.7529941503003542E-4	IMPLEMENTATION
//.append("  -x[directory]   strip off text before #!ruby line and perhaps cd to directory\n")	WITHOUT_CLASSIFICATION	0.9999477139769148	WITHOUT_CLASSIFICATION	5.2286023085086963E-5	IMPLEMENTATION
// even shift.. // ..floors to 62 or 63 bit BigInteger	WITHOUT_CLASSIFICATION	0.9998606385812926	WITHOUT_CLASSIFICATION	1.3936141870741383E-4	IMPLEMENTATION
// 5 -> 2, -5 -> -3 need half a scale more..	WITHOUT_CLASSIFICATION	0.9998132422128553	WITHOUT_CLASSIFICATION	1.8675778714479082E-4	IMPLEMENTATION
// ..where 100 -> 10 shifts the scale	WITHOUT_CLASSIFICATION	0.9998653054509046	WITHOUT_CLASSIFICATION	1.3469454909541446E-4	IMPLEMENTATION
// Initial x - use double root - multiply by halfBack to unshift - set new scale	WITHOUT_CLASSIFICATION	0.9999308970860641	WITHOUT_CLASSIFICATION	6.910291393587291E-5	IMPLEMENTATION
// x0 ~ sqrt()	WITHOUT_CLASSIFICATION	0.9997515399162304	WITHOUT_CLASSIFICATION	2.4846008376949665E-4	IMPLEMENTATION
// for prec 15 root x0 must surely be OK // return small prec roots without iterations	WITHOUT_CLASSIFICATION	0.9999670154485445	WITHOUT_CLASSIFICATION	3.2984551455553654E-5	IMPLEMENTATION
// Initial v - the reciprocal // v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9998907171684082	WITHOUT_CLASSIFICATION	1.0928283159183329E-4	IMPLEMENTATION
// Collect iteration precisions beforehand	WITHOUT_CLASSIFICATION	0.9999317705025154	WITHOUT_CLASSIFICATION	6.822949748466085E-5	IMPLEMENTATION
// assume nInit = 16 <= prec	WITHOUT_CLASSIFICATION	0.9998375521900418	WITHOUT_CLASSIFICATION	1.624478099582906E-4	IMPLEMENTATION
// The loop of "Square Root by Coupled Newton Iteration"	WITHOUT_CLASSIFICATION	0.9999228885764255	WITHOUT_CLASSIFICATION	7.711142357446913E-5	IMPLEMENTATION
// Increase precision - next iteration supplies n exact digits	WITHOUT_CLASSIFICATION	0.9999337613763802	WITHOUT_CLASSIFICATION	6.6238623619807E-5	IMPLEMENTATION
// Next x                                        // e = d - x^2	WITHOUT_CLASSIFICATION	0.999869467884074	WITHOUT_CLASSIFICATION	1.3053211592589425E-4	IMPLEMENTATION
// x += e*v     ~ sqrt()	WITHOUT_CLASSIFICATION	0.9998040793538033	WITHOUT_CLASSIFICATION	1.959206461967906E-4	IMPLEMENTATION
// root x is ready!	WITHOUT_CLASSIFICATION	0.9998428647841502	WITHOUT_CLASSIFICATION	1.5713521584978616E-4	IMPLEMENTATION
// Next v                                        // g = 1 - 2*x*v	WITHOUT_CLASSIFICATION	0.9998694264361846	WITHOUT_CLASSIFICATION	1.3057356381541158E-4	IMPLEMENTATION
// v += g*v     ~ 1/2/sqrt()	WITHOUT_CLASSIFICATION	0.9998040793538033	WITHOUT_CLASSIFICATION	1.959206461967906E-4	IMPLEMENTATION
// RubyBigdecimal	WITHOUT_CLASSIFICATION	0.9997556097831554	WITHOUT_CLASSIFICATION	2.4439021684452864E-4	IMPLEMENTATION
// c: bind_eval	WITHOUT_CLASSIFICATION	0.9997516446828189	WITHOUT_CLASSIFICATION	2.4835531718114844E-4	IMPLEMENTATION
/*  ================     *  Module Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999167640267718	WITHOUT_CLASSIFICATION	8.32359732282248E-5	IMPLEMENTATION
// from CommandlineParser	WITHOUT_CLASSIFICATION	0.9998630641805185	WITHOUT_CLASSIFICATION	1.3693581948135837E-4	IMPLEMENTATION
// This property is a Boolean, to allow three values, so it can match MRI's nil, false and true	WITHOUT_CLASSIFICATION	0.9999496622301673	WITHOUT_CLASSIFICATION	5.033776983261927E-5	IMPLEMENTATION
// default ClassCache using jitMax as a soft upper bound	WITHOUT_CLASSIFICATION	0.9999703519941362	WITHOUT_CLASSIFICATION	2.964800586383606E-5	IMPLEMENTATION
// Until we get a little more solid on 1.9 support we will only run interpreted mode	WITHOUT_CLASSIFICATION	0.9997108064344746	WITHOUT_CLASSIFICATION	2.891935655253846E-4	IMPLEMENTATION
// Setting the loader needs to reset the class cache	WITHOUT_CLASSIFICATION	0.9999388583801662	WITHOUT_CLASSIFICATION	6.11416198338279E-5	IMPLEMENTATION
// try the normal property first	WITHOUT_CLASSIFICATION	0.9999270729471199	WITHOUT_CLASSIFICATION	7.292705287999025E-5	IMPLEMENTATION
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9998948542442672	WITHOUT_CLASSIFICATION	1.0514575573277808E-4	IMPLEMENTATION
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9998948542442672	WITHOUT_CLASSIFICATION	1.0514575573277808E-4	IMPLEMENTATION
// try loading from classloader resources	WITHOUT_CLASSIFICATION	0.9999432126801975	WITHOUT_CLASSIFICATION	5.678731980251366E-5	IMPLEMENTATION
// otherwise fall back on system temp location	WITHOUT_CLASSIFICATION	0.9998430571360817	WITHOUT_CLASSIFICATION	1.5694286391838844E-4	IMPLEMENTATION
// We require the home directory to be absolute	WITHOUT_CLASSIFICATION	0.999961460986948	WITHOUT_CLASSIFICATION	3.853901305196993E-5	IMPLEMENTATION
//consume the file name	WITHOUT_CLASSIFICATION	0.9998978451980387	WITHOUT_CLASSIFICATION	1.021548019613009E-4	IMPLEMENTATION
// Specify something that can't separate	WITHOUT_CLASSIFICATION	0.9998819067710107	WITHOUT_CLASSIFICATION	1.1809322898929824E-4	IMPLEMENTATION
// try cwd first	WITHOUT_CLASSIFICATION	0.9998071775904056	WITHOUT_CLASSIFICATION	1.9282240959444397E-4	IMPLEMENTATION
// ruby interpreter compatibilty // Usage: ruby [switches] [--] [programfile] [arguments])	WITHOUT_CLASSIFICATION	0.999896483324813	WITHOUT_CLASSIFICATION	1.0351667518709657E-4	IMPLEMENTATION
// KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 // if Ruby 2.0 encoding pragmas are implemented, this will need to change	WITHOUT_CLASSIFICATION	0.9672311835209229	WITHOUT_CLASSIFICATION	0.03276881647907713	IMPLEMENTATION
// @JRubyMethod(name = "complex?")	WITHOUT_CLASSIFICATION	0.9998229469238832	WITHOUT_CLASSIFICATION	1.7705307611688662E-4	IMPLEMENTATION
// @JRubyMethod(name = "exact?")	WITHOUT_CLASSIFICATION	0.9998275124013426	WITHOUT_CLASSIFICATION	1.724875986574099E-4	IMPLEMENTATION
// @JRubyMethod(name = "inexact?")	WITHOUT_CLASSIFICATION	0.9998276346208314	WITHOUT_CLASSIFICATION	1.7236537916861231E-4	IMPLEMENTATION
// symbol string *must* be interned	WITHOUT_CLASSIFICATION	0.9998901260328196	WITHOUT_CLASSIFICATION	1.0987396718044723E-4	IMPLEMENTATION
//        assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";	WITHOUT_CLASSIFICATION	0.9999716397353372	WITHOUT_CLASSIFICATION	2.8360264662877087E-5	IMPLEMENTATION
/* Symbol class methods.     *      */	WITHOUT_CLASSIFICATION	0.9998407996924358	WITHOUT_CLASSIFICATION	1.5920030756430139E-4	IMPLEMENTATION
// TODO: 1.9 rb_enc_symname_p	WITHOUT_CLASSIFICATION	0.9000684549874378	WITHOUT_CLASSIFICATION	0.09993154501256216	IMPLEMENTATION
// This is needed to unpack stuff	WITHOUT_CLASSIFICATION	0.9999057202740923	WITHOUT_CLASSIFICATION	9.427972590770898E-5	IMPLEMENTATION
// we already confirmed above that length > 0	WITHOUT_CLASSIFICATION	0.9999373993943924	WITHOUT_CLASSIFICATION	6.260060560761618E-5	IMPLEMENTATION
// *must* be power of 2!	WITHOUT_CLASSIFICATION	0.9998193601574252	WITHOUT_CLASSIFICATION	1.8063984257469832E-4	IMPLEMENTATION
// note all fields are final -- rehash creates new entries when necessary. // as documented in java.util.concurrent.ConcurrentHashMap.java, that will // statistically affect only a small percentage (< 20%) of entries for a given rehash.	WITHOUT_CLASSIFICATION	0.999970142409697	WITHOUT_CLASSIFICATION	2.985759030298278E-5	IMPLEMENTATION
//            assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999709723792907	WITHOUT_CLASSIFICATION	2.9027620709307946E-5	IMPLEMENTATION
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9998439859856357	WITHOUT_CLASSIFICATION	1.5601401436429326E-4	IMPLEMENTATION
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9998439859856357	WITHOUT_CLASSIFICATION	1.5601401436429326E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9997700878575719	WITHOUT_CLASSIFICATION	2.2991214242813152E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9997700878575719	WITHOUT_CLASSIFICATION	2.2991214242813152E-4	IMPLEMENTATION
// backwards-compatibility, but threadsafe now	WITHOUT_CLASSIFICATION	0.9998916129898473	WITHOUT_CLASSIFICATION	1.0838701015271277E-4	IMPLEMENTATION
//  Single node on list	WITHOUT_CLASSIFICATION	0.9998116964919507	WITHOUT_CLASSIFICATION	1.8830350804936385E-4	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9998736449555194	WITHOUT_CLASSIFICATION	1.263550444805337E-4	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9998547034369545	WITHOUT_CLASSIFICATION	1.4529656304546642E-4	IMPLEMENTATION
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999432268913052	WITHOUT_CLASSIFICATION	5.677310869468717E-5	IMPLEMENTATION
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9998659797188452	WITHOUT_CLASSIFICATION	1.3402028115480535E-4	IMPLEMENTATION
// not so backwards-compatible here, but no one should have been // calling this anyway.	WITHOUT_CLASSIFICATION	0.9994578958064736	WITHOUT_CLASSIFICATION	5.421041935264551E-4	IMPLEMENTATION
// Profile	WITHOUT_CLASSIFICATION	0.996405234805803	WITHOUT_CLASSIFICATION	0.003594765194197053	IMPLEMENTATION
//static private final String TRANSLIT = "//translit";	WITHOUT_CLASSIFICATION	0.999935830340821	WITHOUT_CLASSIFICATION	6.416965917900461E-5	IMPLEMENTATION
// treat start and end as start...end for end >= 0, start..end for end < 0	WITHOUT_CLASSIFICATION	0.999892487743581	WITHOUT_CLASSIFICATION	1.0751225641905824E-4	IMPLEMENTATION
// invalid ranges result in an empty string	WITHOUT_CLASSIFICATION	0.9999550966192928	WITHOUT_CLASSIFICATION	4.4903380707105117E-5	IMPLEMENTATION
// Methods of the Nil Class (nil_*):	WITHOUT_CLASSIFICATION	0.9999156246644051	WITHOUT_CLASSIFICATION	8.437533559495695E-5	IMPLEMENTATION
// Has read/write been closed or is it still open for business	WITHOUT_CLASSIFICATION	0.9998526452575861	WITHOUT_CLASSIFICATION	1.473547424139768E-4	IMPLEMENTATION
// Support IO modes that this object was opened with	WITHOUT_CLASSIFICATION	0.9998670087634379	WITHOUT_CLASSIFICATION	1.3299123656199894E-4	IMPLEMENTATION
// must let original string know we're modifying, so shared buffers aren't damaged	WITHOUT_CLASSIFICATION	0.9999300920194993	WITHOUT_CLASSIFICATION	6.990798050057005E-5	IMPLEMENTATION
// reset the state	WITHOUT_CLASSIFICATION	0.999895750043833	WITHOUT_CLASSIFICATION	1.0424995616703784E-4	IMPLEMENTATION
// Tainting here if we ever want it. (secure 4)	WITHOUT_CLASSIFICATION	0.9998260206605535	WITHOUT_CLASSIFICATION	1.7397933944641767E-4	IMPLEMENTATION
// rb_match_busy	WITHOUT_CLASSIFICATION	0.9997515399162304	WITHOUT_CLASSIFICATION	2.4846008376949665E-4	IMPLEMENTATION
//str is frozen	WITHOUT_CLASSIFICATION	0.9997530403206849	WITHOUT_CLASSIFICATION	2.469596793150305E-4	IMPLEMENTATION
// MRI also does a pointer comparison here	WITHOUT_CLASSIFICATION	0.9998611925551643	WITHOUT_CLASSIFICATION	1.3880744483568255E-4	IMPLEMENTATION
// JRubyServer	WITHOUT_CLASSIFICATION	0.9997531383368942	WITHOUT_CLASSIFICATION	2.468616631058321E-4	IMPLEMENTATION
// Class.allocate object is not allocatable before it is initialized	WITHOUT_CLASSIFICATION	0.9999829076568609	WITHOUT_CLASSIFICATION	1.709234313908956E-5	IMPLEMENTATION
// boot the Object class 	WITHOUT_CLASSIFICATION	0.9999116283239539	WITHOUT_CLASSIFICATION	8.837167604619396E-5	IMPLEMENTATION
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999492258735984	WITHOUT_CLASSIFICATION	5.077412640163383E-5	IMPLEMENTATION
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999712514297879	WITHOUT_CLASSIFICATION	2.8748570212176812E-5	IMPLEMENTATION
// undo check	WITHOUT_CLASSIFICATION	0.9997542015937302	WITHOUT_CLASSIFICATION	2.4579840626982944E-4	IMPLEMENTATION
// This is a non-standard method; have we decided to start extending Ruby? //classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));	WITHOUT_CLASSIFICATION	0.9999760620525817	WITHOUT_CLASSIFICATION	2.393794741822554E-5	IMPLEMENTATION
// boot the Module and Class classes	WITHOUT_CLASSIFICATION	0.9999050664555754	WITHOUT_CLASSIFICATION	9.493354442461557E-5	IMPLEMENTATION
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9999807838867918	WITHOUT_CLASSIFICATION	1.9216113208230666E-5	IMPLEMENTATION
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9998574215093751	WITHOUT_CLASSIFICATION	1.4257849062497004E-4	IMPLEMENTATION
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9998574215093751	WITHOUT_CLASSIFICATION	1.4257849062497004E-4	IMPLEMENTATION
// could be pulled down to RubyClass in future // rb_class_boot	WITHOUT_CLASSIFICATION	0.9998177004614924	WITHOUT_CLASSIFICATION	1.8229953850746057E-4	IMPLEMENTATION
// remove us from old superclass's child classes	WITHOUT_CLASSIFICATION	0.9999775221964844	WITHOUT_CLASSIFICATION	2.247780351558275E-5	IMPLEMENTATION
// add us to new superclass's child classes	WITHOUT_CLASSIFICATION	0.9999615944202723	WITHOUT_CLASSIFICATION	3.840557972755847E-5	IMPLEMENTATION
// update all subclasses	WITHOUT_CLASSIFICATION	0.9999539607507932	WITHOUT_CLASSIFICATION	4.60392492067672E-5	IMPLEMENTATION
// fields to hold Ruby and RubyClass references	WITHOUT_CLASSIFICATION	0.9999102678744198	WITHOUT_CLASSIFICATION	8.973212558014034E-5	IMPLEMENTATION
// static initializing method	WITHOUT_CLASSIFICATION	0.9999280022546266	WITHOUT_CLASSIFICATION	7.19977453733507E-5	IMPLEMENTATION
// standard constructor that accepts Ruby, RubyClass	WITHOUT_CLASSIFICATION	0.9998612152366627	WITHOUT_CLASSIFICATION	1.3878476333741208E-4	IMPLEMENTATION
// no-arg constructor using static references to Ruby and RubyClass	WITHOUT_CLASSIFICATION	0.9999148547961626	WITHOUT_CLASSIFICATION	8.514520383744468E-5	IMPLEMENTATION
// non-signature signature with just IRubyObject	WITHOUT_CLASSIFICATION	0.9998940029868987	WITHOUT_CLASSIFICATION	1.0599701310128142E-4	IMPLEMENTATION
// indices for temp values	WITHOUT_CLASSIFICATION	0.9998822538508404	WITHOUT_CLASSIFICATION	1.1774614915962487E-4	IMPLEMENTATION
// self // method name	WITHOUT_CLASSIFICATION	0.9998358130928132	WITHOUT_CLASSIFICATION	1.64186907186869E-4	IMPLEMENTATION
// the default allocator	WITHOUT_CLASSIFICATION	0.9999631667070217	WITHOUT_CLASSIFICATION	3.683329297832909E-5	IMPLEMENTATION
// Equivalent of T_DATA	WITHOUT_CLASSIFICATION	0.9997686193407741	WITHOUT_CLASSIFICATION	2.313806592259783E-4	IMPLEMENTATION
// do nothing, leave empty	WITHOUT_CLASSIFICATION	0.9999690028716869	WITHOUT_CLASSIFICATION	3.0997128313181953E-5	IMPLEMENTATION
// Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9998205931394542	WITHOUT_CLASSIFICATION	1.794068605458394E-4	IMPLEMENTATION
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999926620249406	WITHOUT_CLASSIFICATION	7.337975059404115E-5	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.999902779272759	WITHOUT_CLASSIFICATION	9.722072724100242E-5	IMPLEMENTATION
// Make sure all arguments are modules before calling the callbacks	WITHOUT_CLASSIFICATION	0.999978961074967	WITHOUT_CLASSIFICATION	2.1038925033017583E-5	IMPLEMENTATION
// MRI extends in order from last to first	WITHOUT_CLASSIFICATION	0.9999093563398543	WITHOUT_CLASSIFICATION	9.064366014569065E-5	IMPLEMENTATION
// NOTE: Serialization is primarily supported for testing purposes, and there is no general // guarantee that serialization will work correctly. Specifically, instance variables pointing // at symbols, threads, modules, classes, and other unserializable types are not detected.	WITHOUT_CLASSIFICATION	0.9999985530497326	WITHOUT_CLASSIFICATION	1.4469502673632539E-6	IMPLEMENTATION
// write out ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.999878809286184	WITHOUT_CLASSIFICATION	1.2119071381595912E-4	IMPLEMENTATION
// rest in ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9998772981975642	WITHOUT_CLASSIFICATION	1.2270180243579076E-4	IMPLEMENTATION
// 0x3fff_ffff // -0x4000_0000	WITHOUT_CLASSIFICATION	0.9998040824480385	WITHOUT_CLASSIFICATION	1.9591755196152714E-4	IMPLEMENTATION
// a gotcha	WITHOUT_CLASSIFICATION	0.9997515399162304	WITHOUT_CLASSIFICATION	2.4846008376949665E-4	IMPLEMENTATION
// Java / and % are not the same as ruby	WITHOUT_CLASSIFICATION	0.999923089943761	WITHOUT_CLASSIFICATION	7.691005623894364E-5	IMPLEMENTATION
// A gotcha for Long.MIN_VALUE: value = -value	WITHOUT_CLASSIFICATION	0.9998710048971164	WITHOUT_CLASSIFICATION	1.2899510288354104E-4	IMPLEMENTATION
// Piece of mri rb_to_id	WITHOUT_CLASSIFICATION	0.9998068191521794	WITHOUT_CLASSIFICATION	1.931808478206496E-4	IMPLEMENTATION
// Java Doubles are 64 bit long:            	WITHOUT_CLASSIFICATION	0.999892130782843	WITHOUT_CLASSIFICATION	1.0786921715704862E-4	IMPLEMENTATION
// Double.MAX_EXPONENT since Java 1.6            	WITHOUT_CLASSIFICATION	0.9998746972012785	WITHOUT_CLASSIFICATION	1.2530279872138643E-4	IMPLEMENTATION
// don't override Numeric#div !	WITHOUT_CLASSIFICATION	0.999891325501478	WITHOUT_CLASSIFICATION	1.0867449852208281E-4	IMPLEMENTATION
// Modelled after c ruby implementation (java /,% not same as ruby)	WITHOUT_CLASSIFICATION	0.9897739427332791	WITHOUT_CLASSIFICATION	0.010226057266720821	IMPLEMENTATION
// MRI behavior:	WITHOUT_CLASSIFICATION	0.999768433997707	WITHOUT_CLASSIFICATION	2.3156600229302544E-4	IMPLEMENTATION
// Numeric.equal            	WITHOUT_CLASSIFICATION	0.9998705149173652	WITHOUT_CLASSIFICATION	1.2948508263473666E-4	IMPLEMENTATION
// provider is not available	WITHOUT_CLASSIFICATION	0.9999155812380568	WITHOUT_CLASSIFICATION	8.441876194323906E-5	IMPLEMENTATION
// bouncy castle doesn't support algorithm	WITHOUT_CLASSIFICATION	0.9998066402804977	WITHOUT_CLASSIFICATION	1.9335971950229297E-4	IMPLEMENTATION
// fall back to system JCA providers	WITHOUT_CLASSIFICATION	0.9999148422326597	WITHOUT_CLASSIFICATION	8.515776734026283E-5	IMPLEMENTATION
// RubyDigest	WITHOUT_CLASSIFICATION	0.9997515399162304	WITHOUT_CLASSIFICATION	2.4846008376949665E-4	IMPLEMENTATION
// ENEBO: Can these be fast?	WITHOUT_CLASSIFICATION	0.9997954092563185	WITHOUT_CLASSIFICATION	2.0459074368142302E-4	IMPLEMENTATION
// synchronize on the RubyThread for threadgroup updates	WITHOUT_CLASSIFICATION	0.999934126343641	WITHOUT_CLASSIFICATION	6.587365635907545E-5	IMPLEMENTATION
// we only add live threads	WITHOUT_CLASSIFICATION	0.999885055022368	WITHOUT_CLASSIFICATION	1.1494497763192371E-4	IMPLEMENTATION
// use same ClassIndex as metaclass, since we're technically still of that type	WITHOUT_CLASSIFICATION	0.9999261167778984	WITHOUT_CLASSIFICATION	7.388322210159724E-5	IMPLEMENTATION
// handle everything after -- as arguments to the jruby process	WITHOUT_CLASSIFICATION	0.9999738925972929	WITHOUT_CLASSIFICATION	2.6107402707091828E-5	IMPLEMENTATION
// JRubyService	WITHOUT_CLASSIFICATION	0.999754297140756	WITHOUT_CLASSIFICATION	2.4570285924392003E-4	IMPLEMENTATION
// while	WITHOUT_CLASSIFICATION	0.9962170589575445	WITHOUT_CLASSIFICATION	0.0037829410424555054	IMPLEMENTATION
/* \OOO */	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
// CRuby uses sprintf(buf, "%.*g", FLOAT_DIG, d); // This pattern adjusts the output of String.pattern("%g") to mimic // the C version.	WITHOUT_CLASSIFICATION	0.999926720393646	WITHOUT_CLASSIFICATION	7.327960635396601E-5	IMPLEMENTATION
// mask off "once" flag	WITHOUT_CLASSIFICATION	0.9998059605285143	WITHOUT_CLASSIFICATION	1.9403947148566506E-4	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999268859634931	WITHOUT_CLASSIFICATION	7.311403650681529E-5	IMPLEMENTATION
// internal usage (Complex/Rational)	WITHOUT_CLASSIFICATION	0.9998717359260131	WITHOUT_CLASSIFICATION	1.2826407398682554E-4	IMPLEMENTATION
// silent ?	WITHOUT_CLASSIFICATION	0.9997507208366313	WITHOUT_CLASSIFICATION	2.492791633686421E-4	IMPLEMENTATION
/* \xHH */	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9998040793538033	WITHOUT_CLASSIFICATION	1.959206461967906E-4	IMPLEMENTATION
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9997515399162304	WITHOUT_CLASSIFICATION	2.4846008376949665E-4	IMPLEMENTATION
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9997515399162304	WITHOUT_CLASSIFICATION	2.4846008376949665E-4	IMPLEMENTATION
/* \O, \OO, \OOO or backref */	WITHOUT_CLASSIFICATION	0.9998027218573421	WITHOUT_CLASSIFICATION	1.9727814265790405E-4	IMPLEMENTATION
// MBCLEN_NEEDMORE_P	WITHOUT_CLASSIFICATION	0.9997515399162304	WITHOUT_CLASSIFICATION	2.4846008376949665E-4	IMPLEMENTATION
// MBCLEN_INVALID_P	WITHOUT_CLASSIFICATION	0.9997515399162304	WITHOUT_CLASSIFICATION	2.4846008376949665E-4	IMPLEMENTATION
// Unicode is can be only 21 bits long, int is enough	WITHOUT_CLASSIFICATION	0.99990011443436	WITHOUT_CLASSIFICATION	9.988556563999151E-5	IMPLEMENTATION
/* Surrogates */	WITHOUT_CLASSIFICATION	0.9997534103049409	WITHOUT_CLASSIFICATION	2.4658969505903465E-4	IMPLEMENTATION
// do not load the class if not used	WITHOUT_CLASSIFICATION	0.9999587837083013	WITHOUT_CLASSIFICATION	4.121629169875037E-5	IMPLEMENTATION
/* \0, \0O, \0OO */	WITHOUT_CLASSIFICATION	0.9997515399162304	WITHOUT_CLASSIFICATION	2.4846008376949665E-4	IMPLEMENTATION
/* \xHH */	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9997515399162304	WITHOUT_CLASSIFICATION	2.4846008376949665E-4	IMPLEMENTATION
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9998040793538033	WITHOUT_CLASSIFICATION	1.959206461967906E-4	IMPLEMENTATION
/* \\u{H HH HHH HHHH HHHHH HHHHHH ...} */	WITHOUT_CLASSIFICATION	0.9998240988987867	WITHOUT_CLASSIFICATION	1.759011012132589E-4	IMPLEMENTATION
/* \\uHHHH */	WITHOUT_CLASSIFICATION	0.9997515399162304	WITHOUT_CLASSIFICATION	2.4846008376949665E-4	IMPLEMENTATION
/* \p{Hiragana} */	WITHOUT_CLASSIFICATION	0.9997515399162304	WITHOUT_CLASSIFICATION	2.4846008376949665E-4	IMPLEMENTATION
// inner switch	WITHOUT_CLASSIFICATION	0.9997699880280282	WITHOUT_CLASSIFICATION	2.300119719718115E-4	IMPLEMENTATION
// newInstance here	WITHOUT_CLASSIFICATION	0.9998200400612183	WITHOUT_CLASSIFICATION	1.799599387816048E-4	IMPLEMENTATION
// rb_reg_raise	WITHOUT_CLASSIFICATION	0.9997515399162304	WITHOUT_CLASSIFICATION	2.4846008376949665E-4	IMPLEMENTATION
// rb_reg_desc	WITHOUT_CLASSIFICATION	0.9997515399162304	WITHOUT_CLASSIFICATION	2.4846008376949665E-4	IMPLEMENTATION
// rb_enc_reg_raise	WITHOUT_CLASSIFICATION	0.9997515399162304	WITHOUT_CLASSIFICATION	2.4846008376949665E-4	IMPLEMENTATION
// rb_enc_reg_error_desc	WITHOUT_CLASSIFICATION	0.9998040793538033	WITHOUT_CLASSIFICATION	1.959206461967906E-4	IMPLEMENTATION
// rb_reg_initialize_str	WITHOUT_CLASSIFICATION	0.9998852227265053	WITHOUT_CLASSIFICATION	1.1477727349474817E-4	IMPLEMENTATION
// rb_reg_initialize	WITHOUT_CLASSIFICATION	0.9998544400898144	WITHOUT_CLASSIFICATION	1.4555991018558228E-4	IMPLEMENTATION
// JRUBY-3625: delay setting backref until the MatchData is completely initialized	WITHOUT_CLASSIFICATION	0.9999358674597287	WITHOUT_CLASSIFICATION	6.413254027126872E-5	IMPLEMENTATION
// rb_reg_expr_str	WITHOUT_CLASSIFICATION	0.9997515399162304	WITHOUT_CLASSIFICATION	2.4846008376949665E-4	IMPLEMENTATION
// option_to_str	WITHOUT_CLASSIFICATION	0.9997931539292356	WITHOUT_CLASSIFICATION	2.0684607076425733E-4	IMPLEMENTATION
// Don't initialize with class // Don't put in object space and don't taint	WITHOUT_CLASSIFICATION	0.9999766019569567	WITHOUT_CLASSIFICATION	2.3398043043296485E-5	IMPLEMENTATION
// args should be before block	WITHOUT_CLASSIFICATION	0.9997841814188277	WITHOUT_CLASSIFICATION	2.1581858117226748E-4	IMPLEMENTATION
// args should be at end	WITHOUT_CLASSIFICATION	0.9997864819796278	WITHOUT_CLASSIFICATION	2.1351802037217825E-4	IMPLEMENTATION
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9998381282928047	WITHOUT_CLASSIFICATION	1.6187170719533347E-4	IMPLEMENTATION
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9998381282928047	WITHOUT_CLASSIFICATION	1.6187170719533347E-4	IMPLEMENTATION
// skip anything not related to jruby	WITHOUT_CLASSIFICATION	0.999905861094074	WITHOUT_CLASSIFICATION	9.413890592609186E-5	IMPLEMENTATION
// start a new populator	WITHOUT_CLASSIFICATION	0.9998986503182522	WITHOUT_CLASSIFICATION	1.0134968174781717E-4	IMPLEMENTATION
// check for frame field reads or writes	WITHOUT_CLASSIFICATION	0.9999484219366587	WITHOUT_CLASSIFICATION	5.157806334143558E-5	IMPLEMENTATION
// add all names for this annotation	WITHOUT_CLASSIFICATION	0.9999515179684527	WITHOUT_CLASSIFICATION	4.848203154735257E-5	IMPLEMENTATION
// no annotated methods found, skip	WITHOUT_CLASSIFICATION	0.9998448060883047	WITHOUT_CLASSIFICATION	1.55193911695335E-4	IMPLEMENTATION
// write out a static initializer for frame names, so it only fires once	WITHOUT_CLASSIFICATION	0.9999607456741253	WITHOUT_CLASSIFICATION	3.9254325874648996E-5	IMPLEMENTATION
// single method, use normal logic	WITHOUT_CLASSIFICATION	0.9998596208190997	WITHOUT_CLASSIFICATION	1.4037918090027915E-4	IMPLEMENTATION
// multimethod, new logic	WITHOUT_CLASSIFICATION	0.9998249327966123	WITHOUT_CLASSIFICATION	1.7506720338766863E-4	IMPLEMENTATION
// declared type returns the qualified name without $ for inner classes!!!	WITHOUT_CLASSIFICATION	0.9999116737019117	WITHOUT_CLASSIFICATION	8.8326298088379E-5	IMPLEMENTATION
// inner class, use $ to delimit	WITHOUT_CLASSIFICATION	0.9999021328149101	WITHOUT_CLASSIFICATION	9.786718508994178E-5	IMPLEMENTATION
//                        RubyModule singletonClass = module.getSingletonClass();	WITHOUT_CLASSIFICATION	0.9999520376596668	WITHOUT_CLASSIFICATION	4.7962340333313654E-5	IMPLEMENTATION
//                }	WITHOUT_CLASSIFICATION	0.9999140653480859	WITHOUT_CLASSIFICATION	8.593465191408707E-5	IMPLEMENTATION
// fallback on non-pregenerated logic	WITHOUT_CLASSIFICATION	0.9996686233796412	WITHOUT_CLASSIFICATION	3.313766203586682E-4	IMPLEMENTATION
// refresh call adapter, since it matters if this is iter-based or not	WITHOUT_CLASSIFICATION	0.9998604843458418	WITHOUT_CLASSIFICATION	1.3951565415810713E-4	IMPLEMENTATION
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9999509259572238	WITHOUT_CLASSIFICATION	4.907404277624371E-5	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.9998108118696798	WITHOUT_CLASSIFICATION	1.8918813032020866E-4	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.9998163548416279	WITHOUT_CLASSIFICATION	1.8364515837221518E-4	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999245988908232	WITHOUT_CLASSIFICATION	7.540110917689668E-5	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999245988908232	WITHOUT_CLASSIFICATION	7.540110917689668E-5	IMPLEMENTATION
// colon3	WITHOUT_CLASSIFICATION	0.9961184520649986	WITHOUT_CLASSIFICATION	0.0038815479350015366	IMPLEMENTATION
// Colon3	WITHOUT_CLASSIFICATION	0.9968043258220954	WITHOUT_CLASSIFICATION	0.003195674177904496	IMPLEMENTATION
// array created for rescue args doesn't need to be in ObjectSpace.	WITHOUT_CLASSIFICATION	0.9998852340681604	WITHOUT_CLASSIFICATION	1.1476593183957976E-4	IMPLEMENTATION
// For b.foo	WITHOUT_CLASSIFICATION	0.9997425402870989	WITHOUT_CLASSIFICATION	2.5745971290112743E-4	IMPLEMENTATION
// instance config for the script run	WITHOUT_CLASSIFICATION	0.999949845881543	WITHOUT_CLASSIFICATION	5.015411845697913E-5	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999245988908232	WITHOUT_CLASSIFICATION	7.540110917689668E-5	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999245988908232	WITHOUT_CLASSIFICATION	7.540110917689668E-5	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999449014968358	WITHOUT_CLASSIFICATION	5.509850316430135E-5	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999449014968358	WITHOUT_CLASSIFICATION	5.509850316430135E-5	IMPLEMENTATION
//RubyModule module = context.getRubyClass();	WITHOUT_CLASSIFICATION	0.9998444019768852	WITHOUT_CLASSIFICATION	1.555980231147779E-4	IMPLEMENTATION
// For 'b.foo'	WITHOUT_CLASSIFICATION	0.9997532947278345	WITHOUT_CLASSIFICATION	2.467052721655501E-4	IMPLEMENTATION
// We define an actual list to get around bug in java integration (1387115)	WITHOUT_CLASSIFICATION	0.9999289213069554	WITHOUT_CLASSIFICATION	7.107869304455892E-5	IMPLEMENTATION
// something in here is used to build up ruby stack trace...	WITHOUT_CLASSIFICATION	0.9999167004296673	WITHOUT_CLASSIFICATION	8.329957033265327E-5	IMPLEMENTATION
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999096336403882	WITHOUT_CLASSIFICATION	9.036635961183985E-5	IMPLEMENTATION
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999096336403882	WITHOUT_CLASSIFICATION	9.036635961183985E-5	IMPLEMENTATION
// do nothing, allow loop to retry	WITHOUT_CLASSIFICATION	0.9999674367639301	WITHOUT_CLASSIFICATION	3.256323606988294E-5	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9998598835301126	WITHOUT_CLASSIFICATION	1.401164698874231E-4	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9998661071328235	WITHOUT_CLASSIFICATION	1.3389286717645438E-4	IMPLEMENTATION
// never visited, should be fine	WITHOUT_CLASSIFICATION	0.9997933744218838	WITHOUT_CLASSIFICATION	2.0662557811625498E-4	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999449014968358	WITHOUT_CLASSIFICATION	5.509850316430135E-5	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999450290836079	WITHOUT_CLASSIFICATION	5.4970916392128146E-5	IMPLEMENTATION
// If we have more than one argument, then make sure the array is not ObjectSpaced.	WITHOUT_CLASSIFICATION	0.9999268885300576	WITHOUT_CLASSIFICATION	7.311146994238809E-5	IMPLEMENTATION
// Only in ruby 1.9 methods	WITHOUT_CLASSIFICATION	0.9998821799191588	WITHOUT_CLASSIFICATION	1.1782008084124268E-4	IMPLEMENTATION
// Bind 'normal' parameter values to the local scope for this method.	WITHOUT_CLASSIFICATION	0.999968337164029	WITHOUT_CLASSIFICATION	3.16628359709243E-5	IMPLEMENTATION
// no arg grouping, just use bulk assignment methods	WITHOUT_CLASSIFICATION	0.999910670412265	WITHOUT_CLASSIFICATION	8.93295877349093E-5	IMPLEMENTATION
// optArgs and restArgs require more work, so isolate them and ArrayList creation here	WITHOUT_CLASSIFICATION	0.9998326150778651	WITHOUT_CLASSIFICATION	1.6738492213478216E-4	IMPLEMENTATION
//        arity.checkArity(runtime, argsLength);	WITHOUT_CLASSIFICATION	0.9999464617715141	WITHOUT_CLASSIFICATION	5.353822848587915E-5	IMPLEMENTATION
// no more values to stick in rest arg	WITHOUT_CLASSIFICATION	0.9999111509653544	WITHOUT_CLASSIFICATION	8.88490346455946E-5	IMPLEMENTATION
// set argv from main's args	WITHOUT_CLASSIFICATION	0.9999161761389282	WITHOUT_CLASSIFICATION	8.38238610717376E-5	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.9998108118696798	WITHOUT_CLASSIFICATION	1.8918813032020866E-4	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999245988908232	WITHOUT_CLASSIFICATION	7.540110917689668E-5	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999449014968358	WITHOUT_CLASSIFICATION	5.509850316430135E-5	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999450290836079	WITHOUT_CLASSIFICATION	5.4970916392128146E-5	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999742031096198	WITHOUT_CLASSIFICATION	2.5796890380122586E-5	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999742031096198	WITHOUT_CLASSIFICATION	2.5796890380122586E-5	IMPLEMENTATION
// block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] //assert argsNode != null : "argsNode is not null";	WITHOUT_CLASSIFICATION	0.9999471953842469	WITHOUT_CLASSIFICATION	5.280461575313558E-5	IMPLEMENTATION
// assign given optional arguments to their variables	WITHOUT_CLASSIFICATION	0.9999299348126142	WITHOUT_CLASSIFICATION	7.006518738585981E-5	IMPLEMENTATION
// in-frame EvalState should already have receiver set as self, continue to use it	WITHOUT_CLASSIFICATION	0.9998517917204088	WITHOUT_CLASSIFICATION	1.482082795910953E-4	IMPLEMENTATION
// assign the default values, adding to the end of allArgs	WITHOUT_CLASSIFICATION	0.9999886259132118	WITHOUT_CLASSIFICATION	1.1374086788274983E-5	IMPLEMENTATION
// Make sure the appropriate scope has proper size. See JRUBY-2046.	WITHOUT_CLASSIFICATION	0.9999138927473681	WITHOUT_CLASSIFICATION	8.610725263202391E-5	IMPLEMENTATION
// Experimental class reification support, to create real Java classes // for Ruby classes after the first opening	WITHOUT_CLASSIFICATION	0.9999800720085962	WITHOUT_CLASSIFICATION	1.9927991403740194E-5	IMPLEMENTATION
// This should never happen past parse, but just bulletproof this just in case	WITHOUT_CLASSIFICATION	0.9999682933950784	WITHOUT_CLASSIFICATION	3.170660492165109E-5	IMPLEMENTATION
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9999241211396099	WITHOUT_CLASSIFICATION	7.587886039010772E-5	IMPLEMENTATION
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9998386773998114	WITHOUT_CLASSIFICATION	1.6132260018856615E-4	IMPLEMENTATION
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999001745149236	WITHOUT_CLASSIFICATION	9.982548507636688E-5	IMPLEMENTATION
// never visited, should be ok	WITHOUT_CLASSIFICATION	0.9997634893400956	WITHOUT_CLASSIFICATION	2.3651065990442909E-4	IMPLEMENTATION
// If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil	WITHOUT_CLASSIFICATION	0.9999096339684334	WITHOUT_CLASSIFICATION	9.036603156670679E-5	IMPLEMENTATION
// JRUBY-530 until case	WITHOUT_CLASSIFICATION	0.9998095896957636	WITHOUT_CLASSIFICATION	1.9041030423640987E-4	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.9998163548416279	WITHOUT_CLASSIFICATION	1.8364515837221518E-4	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999449014968358	WITHOUT_CLASSIFICATION	5.509850316430135E-5	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9998598835301126	WITHOUT_CLASSIFICATION	1.401164698874231E-4	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9998661071328235	WITHOUT_CLASSIFICATION	1.3389286717645438E-4	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9998661071328235	WITHOUT_CLASSIFICATION	1.3389286717645438E-4	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999449014968358	WITHOUT_CLASSIFICATION	5.509850316430135E-5	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999450290836079	WITHOUT_CLASSIFICATION	5.4970916392128146E-5	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999450290836079	WITHOUT_CLASSIFICATION	5.4970916392128146E-5	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999742031096198	WITHOUT_CLASSIFICATION	2.5796890380122586E-5	IMPLEMENTATION
// Empirical Observations: // null -> Some arity // argsNode == this.argsNode then check for arity changes // newline(splatnode) -> argspushnode	WITHOUT_CLASSIFICATION	0.9999248498950176	WITHOUT_CLASSIFICATION	7.515010498239966E-5	IMPLEMENTATION
//assert !(value instanceof RubyArray)  : "Not an array";	WITHOUT_CLASSIFICATION	0.9998992630359407	WITHOUT_CLASSIFICATION	1.0073696405926038E-4	IMPLEMENTATION
// Serialization killed our dynamic scope.  We can just create an empty one // since serialization cannot serialize an eval (which is the only thing // which is capable of having a non-empty dynamic scope).	WITHOUT_CLASSIFICATION	0.9999945602647858	WITHOUT_CLASSIFICATION	5.439735214086579E-6	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9997505528500358	WITHOUT_CLASSIFICATION	2.494471499641661E-4	IMPLEMENTATION
// We could probably also detect if LHS value came out of cache and avoid some of this	WITHOUT_CLASSIFICATION	0.999950450400469	WITHOUT_CLASSIFICATION	4.9549599531058536E-5	IMPLEMENTATION
//        assert thenBody != null : "thenBody is not null"; //        assert elseBody != null : "elseBody is not null";	WITHOUT_CLASSIFICATION	0.9999756768014304	WITHOUT_CLASSIFICATION	2.4323198569627152E-5	IMPLEMENTATION
// add in reverse order	WITHOUT_CLASSIFICATION	0.9999154763952068	WITHOUT_CLASSIFICATION	8.452360479322595E-5	IMPLEMENTATION
// in order to make pragma's noops we set location to a special value	WITHOUT_CLASSIFICATION	0.9999494429283223	WITHOUT_CLASSIFICATION	5.055707167778405E-5	IMPLEMENTATION
// ignore compiler pragmas	WITHOUT_CLASSIFICATION	0.999975532035355	WITHOUT_CLASSIFICATION	2.4467964644866957E-5	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9998598835301126	WITHOUT_CLASSIFICATION	1.401164698874231E-4	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9998661071328235	WITHOUT_CLASSIFICATION	1.3389286717645438E-4	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9998661071328235	WITHOUT_CLASSIFICATION	1.3389286717645438E-4	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999449014968358	WITHOUT_CLASSIFICATION	5.509850316430135E-5	IMPLEMENTATION
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9999241211396099	WITHOUT_CLASSIFICATION	7.587886039010772E-5	IMPLEMENTATION
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999001745149236	WITHOUT_CLASSIFICATION	9.982548507636688E-5	IMPLEMENTATION
// No actual test, so do 'when' if when expression is not nil	WITHOUT_CLASSIFICATION	0.9998783350097664	WITHOUT_CLASSIFICATION	1.2166499023363026E-4	IMPLEMENTATION
// save entering the try if there's nothing to ensure	WITHOUT_CLASSIFICATION	0.9999863187899781	WITHOUT_CLASSIFICATION	1.3681210021759627E-5	IMPLEMENTATION
// For 'foo'	WITHOUT_CLASSIFICATION	0.9997532947278345	WITHOUT_CLASSIFICATION	2.4670527216554987E-4	IMPLEMENTATION
// For 'foo'	WITHOUT_CLASSIFICATION	0.9997532947278345	WITHOUT_CLASSIFICATION	2.4670527216554987E-4	IMPLEMENTATION
// admittedly inefficient	WITHOUT_CLASSIFICATION	0.9997772500856696	WITHOUT_CLASSIFICATION	2.2274991433040976E-4	IMPLEMENTATION
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9998175424505243	WITHOUT_CLASSIFICATION	1.8245754947571855E-4	IMPLEMENTATION
// What static scoping relationship exists when it comes into being.	WITHOUT_CLASSIFICATION	0.9998731591708437	WITHOUT_CLASSIFICATION	1.2684082915626668E-4	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9998200733937365	WITHOUT_CLASSIFICATION	1.799266062635365E-4	IMPLEMENTATION
// just rethrow	WITHOUT_CLASSIFICATION	0.9998166864209244	WITHOUT_CLASSIFICATION	1.8331357907560872E-4	IMPLEMENTATION
// just rethrow	WITHOUT_CLASSIFICATION	0.9998166864209244	WITHOUT_CLASSIFICATION	1.8331357907560872E-4	IMPLEMENTATION
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999295592620285	WITHOUT_CLASSIFICATION	7.044073797142248E-5	IMPLEMENTATION
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999295592620285	WITHOUT_CLASSIFICATION	7.044073797142248E-5	IMPLEMENTATION
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9998497685219484	WITHOUT_CLASSIFICATION	1.5023147805156054E-4	IMPLEMENTATION
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9998497685219484	WITHOUT_CLASSIFICATION	1.5023147805156054E-4	IMPLEMENTATION
// Execute rescue block	WITHOUT_CLASSIFICATION	0.9998568801806601	WITHOUT_CLASSIFICATION	1.431198193398406E-4	IMPLEMENTATION
// If no exception is thrown execute else block	WITHOUT_CLASSIFICATION	0.9999372221705921	WITHOUT_CLASSIFICATION	6.277782940794236E-5	IMPLEMENTATION
// index of variable for this arg	WITHOUT_CLASSIFICATION	0.9999029768215315	WITHOUT_CLASSIFICATION	9.702317846850486E-5	IMPLEMENTATION
// only a marker interface	WITHOUT_CLASSIFICATION	0.9999338713073124	WITHOUT_CLASSIFICATION	6.612869268770215E-5	IMPLEMENTATION
// don't attempt to coerce to array, just wrap and return	WITHOUT_CLASSIFICATION	0.9999384491028059	WITHOUT_CLASSIFICATION	6.155089719414761E-5	IMPLEMENTATION
// pragmas	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
// The method also needs a scope, do both	WITHOUT_CLASSIFICATION	0.9998724342227513	WITHOUT_CLASSIFICATION	1.2756577724872337E-4	IMPLEMENTATION
// We're doing normal framed compilation or the method needs a frame	WITHOUT_CLASSIFICATION	0.9998146032605023	WITHOUT_CLASSIFICATION	1.8539673949771922E-4	IMPLEMENTATION
// The method doesn't need a scope or static scope; frame only	WITHOUT_CLASSIFICATION	0.9999296914166786	WITHOUT_CLASSIFICATION	7.030858332127477E-5	IMPLEMENTATION
// The method doesn't need a scope, but has static scope needs; use a dummy scope	WITHOUT_CLASSIFICATION	0.9999224675589189	WITHOUT_CLASSIFICATION	7.753244108117954E-5	IMPLEMENTATION
// Proc.new needs the caller's block to instantiate a proc	WITHOUT_CLASSIFICATION	0.9999094427555479	WITHOUT_CLASSIFICATION	9.055724445214073E-5	IMPLEMENTATION
// check for Proc.new, an especially magic method	WITHOUT_CLASSIFICATION	0.9999430092799221	WITHOUT_CLASSIFICATION	5.6990720077928594E-5	IMPLEMENTATION
// long, slow way causes disabling	WITHOUT_CLASSIFICATION	0.9998309313518894	WITHOUT_CLASSIFICATION	1.690686481107006E-4	IMPLEMENTATION
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9997976488312905	WITHOUT_CLASSIFICATION	2.0235116870950917E-4	IMPLEMENTATION
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9997976488312905	WITHOUT_CLASSIFICATION	2.0235116870950917E-4	IMPLEMENTATION
// long, slow way causes disabling for defined	WITHOUT_CLASSIFICATION	0.999876415822956	WITHOUT_CLASSIFICATION	1.2358417704404188E-4	IMPLEMENTATION
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9998659797188452	WITHOUT_CLASSIFICATION	1.3402028115480535E-4	IMPLEMENTATION
// Because Regexp#=== sets backref, we have to make this backref-aware	WITHOUT_CLASSIFICATION	0.9998732567398809	WITHOUT_CLASSIFICATION	1.2674326011898507E-4	IMPLEMENTATION
// encountered a node we don't recognize, set everything to true to disable optz	WITHOUT_CLASSIFICATION	0.9999574199364533	WITHOUT_CLASSIFICATION	4.2580063546781006E-5	IMPLEMENTATION
// only arrays that are "lightweight" are being used as args arrays	WITHOUT_CLASSIFICATION	0.9998968476470165	WITHOUT_CLASSIFICATION	1.0315235298342282E-4	IMPLEMENTATION
// otherwise, it's a literal array	WITHOUT_CLASSIFICATION	0.9997599374502187	WITHOUT_CLASSIFICATION	2.400625497811223E-4	IMPLEMENTATION
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9998726186295817	WITHOUT_CLASSIFICATION	1.2738137041831284E-4	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9998756509483013	WITHOUT_CLASSIFICATION	1.2434905169874806E-4	IMPLEMENTATION
// compile first node as non-expr and then second node	WITHOUT_CLASSIFICATION	0.9999063628447594	WITHOUT_CLASSIFICATION	9.363715524057968E-5	IMPLEMENTATION
// last node, either !instanceof WhenNode or null, is the else	WITHOUT_CLASSIFICATION	0.9999120497629854	WITHOUT_CLASSIFICATION	8.795023701454954E-5	IMPLEMENTATION
// compile first node only	WITHOUT_CLASSIFICATION	0.9998703596537672	WITHOUT_CLASSIFICATION	1.2964034623286203E-4	IMPLEMENTATION
// splatted when, can't do it yet	WITHOUT_CLASSIFICATION	0.9998482724506521	WITHOUT_CLASSIFICATION	1.5172754934791188E-4	IMPLEMENTATION
// if __send__ with a literal symbol, compile it as a direct fcall	WITHOUT_CLASSIFICATION	0.9998967083539128	WITHOUT_CLASSIFICATION	1.0329164608717604E-4	IMPLEMENTATION
// NOTE: Currently this optimization is limited to the following situations: // * All expressions must be int-ranged literal fixnums // It also still emits the code for the "safe" when logic, which is rather // wasteful (since it essentially doubles each code body). As such it is // normally disabled, but it serves as an example of how this optimization // could be done. Ideally, it should be combined with the when processing // to improve code reuse before it's generally available.	WITHOUT_CLASSIFICATION	0.9999943230036458	WITHOUT_CLASSIFICATION	5.6769963542543955E-6	IMPLEMENTATION
// aggregate when nodes into a list, unfortunately, this is no	WITHOUT_CLASSIFICATION	0.9998879372235097	WITHOUT_CLASSIFICATION	1.1206277649034386E-4	IMPLEMENTATION
// one arg but it's an array, treat it as a proper array	WITHOUT_CLASSIFICATION	0.9998353894466168	WITHOUT_CLASSIFICATION	1.646105533831071E-4	IMPLEMENTATION
// can't do it	WITHOUT_CLASSIFICATION	0.9998235068855783	WITHOUT_CLASSIFICATION	1.7649311442178133E-4	IMPLEMENTATION
// otherwise, use normal args compiler	WITHOUT_CLASSIFICATION	0.9997775399258146	WITHOUT_CLASSIFICATION	2.224600741852822E-4	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.999837139698684	WITHOUT_CLASSIFICATION	1.6286030131595368E-4	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.999837139698684	WITHOUT_CLASSIFICATION	1.6286030131595368E-4	IMPLEMENTATION
// these are all simple cases that don't require the heavier defined logic	WITHOUT_CLASSIFICATION	0.9999389084106398	WITHOUT_CLASSIFICATION	6.109158936016132E-5	IMPLEMENTATION
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9998820370443536	WITHOUT_CLASSIFICATION	1.1796295564641272E-4	IMPLEMENTATION
//[]	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
//[]	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
//          context.swapValues(); //context.consumeCurrentValue();	WITHOUT_CLASSIFICATION	0.9999483264911024	WITHOUT_CLASSIFICATION	5.1673508897465615E-5	IMPLEMENTATION
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[] //[self] //[RubyClass] //[RubyClass, RubyClass]	WITHOUT_CLASSIFICATION	0.9998259617129306	WITHOUT_CLASSIFICATION	1.740382870694355E-4	IMPLEMENTATION
//[RubyClass]	WITHOUT_CLASSIFICATION	0.9997516141072399	WITHOUT_CLASSIFICATION	2.483858927601789E-4	IMPLEMENTATION
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9998259617129306	WITHOUT_CLASSIFICATION	1.740382870694355E-4	IMPLEMENTATION
// if root of method is rescue, compile as a light rescue	WITHOUT_CLASSIFICATION	0.9998522414076018	WITHOUT_CLASSIFICATION	1.477585923982395E-4	IMPLEMENTATION
// inspect body and args	WITHOUT_CLASSIFICATION	0.9998236773448371	WITHOUT_CLASSIFICATION	1.763226551629091E-4	IMPLEMENTATION
// inspect body and args	WITHOUT_CLASSIFICATION	0.9998236773448371	WITHOUT_CLASSIFICATION	1.763226551629091E-4	IMPLEMENTATION
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999280203892104	WITHOUT_CLASSIFICATION	7.197961078957899E-5	IMPLEMENTATION
// if root of method is rescue, compile as light rescue	WITHOUT_CLASSIFICATION	0.9998462729077445	WITHOUT_CLASSIFICATION	1.5372709225545023E-4	IMPLEMENTATION
// invoke run with threadcontext and topself	WITHOUT_CLASSIFICATION	0.9998502491890912	WITHOUT_CLASSIFICATION	1.497508109087896E-4	IMPLEMENTATION
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9998821734929745	WITHOUT_CLASSIFICATION	1.1782650702550923E-4	IMPLEMENTATION
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9998820370443536	WITHOUT_CLASSIFICATION	1.1796295564641272E-4	IMPLEMENTATION
//[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9997516141072399	WITHOUT_CLASSIFICATION	2.483858927601789E-4	IMPLEMENTATION
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9998301439816408	WITHOUT_CLASSIFICATION	1.698560183591728E-4	IMPLEMENTATION
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9998301439816408	WITHOUT_CLASSIFICATION	1.698560183591728E-4	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999154307863846	WITHOUT_CLASSIFICATION	8.456921361544785E-5	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999877864557221	WITHOUT_CLASSIFICATION	1.2213544277917754E-5	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999877864557221	WITHOUT_CLASSIFICATION	1.2213544277917754E-5	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9997758015877367	WITHOUT_CLASSIFICATION	2.241984122633563E-4	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9997758015877367	WITHOUT_CLASSIFICATION	2.241984122633563E-4	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9997758015877367	WITHOUT_CLASSIFICATION	2.241984122633563E-4	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999877864557221	WITHOUT_CLASSIFICATION	1.2213544277917754E-5	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999877864557221	WITHOUT_CLASSIFICATION	1.2213544277917754E-5	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999154307863846	WITHOUT_CLASSIFICATION	8.456921361544785E-5	IMPLEMENTATION
// force heap-scope behavior, since it uses parent's scope	WITHOUT_CLASSIFICATION	0.9998895513866626	WITHOUT_CLASSIFICATION	1.1044861333748426E-4	IMPLEMENTATION
// always false or nil	WITHOUT_CLASSIFICATION	0.9998459250920682	WITHOUT_CLASSIFICATION	1.5407490793179092E-4	IMPLEMENTATION
// optimizations if we know ahead of time it will always be true or false	WITHOUT_CLASSIFICATION	0.9999531039348547	WITHOUT_CLASSIFICATION	4.689606514534299E-5	IMPLEMENTATION
// normal	WITHOUT_CLASSIFICATION	0.9963963503404478	WITHOUT_CLASSIFICATION	0.0036036496595521373	IMPLEMENTATION
// compile condition as non-expr and just compile "then" body	WITHOUT_CLASSIFICATION	0.999887381839216	WITHOUT_CLASSIFICATION	1.1261816078396765E-4	IMPLEMENTATION
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9998383751793485	WITHOUT_CLASSIFICATION	1.6162482065157282E-4	IMPLEMENTATION
// just push nil for pragmas	WITHOUT_CLASSIFICATION	0.9998485615468475	WITHOUT_CLASSIFICATION	1.514384531524504E-4	IMPLEMENTATION
// "assignment" means the value is already on the stack	WITHOUT_CLASSIFICATION	0.9999448572562041	WITHOUT_CLASSIFICATION	5.514274379590996E-5	IMPLEMENTATION
// compile first node only	WITHOUT_CLASSIFICATION	0.9998703596537672	WITHOUT_CLASSIFICATION	1.2964034623286203E-4	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999877864557221	WITHOUT_CLASSIFICATION	1.2213544277917754E-5	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999877864557221	WITHOUT_CLASSIFICATION	1.2213544277917754E-5	IMPLEMENTATION
// eval new value, call operator on old value, and assign	WITHOUT_CLASSIFICATION	0.999878760891067	WITHOUT_CLASSIFICATION	1.2123910893307115E-4	IMPLEMENTATION
// try optz version	WITHOUT_CLASSIFICATION	0.9998144542626685	WITHOUT_CLASSIFICATION	1.8554573733167874E-4	IMPLEMENTATION
// sizes must match	WITHOUT_CLASSIFICATION	0.9998241233111845	WITHOUT_CLASSIFICATION	1.7587668881560053E-4	IMPLEMENTATION
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999367271581432	WITHOUT_CLASSIFICATION	6.327284185689106E-5	IMPLEMENTATION
// normal items at the "head" of the masgn	WITHOUT_CLASSIFICATION	0.9999295304945687	WITHOUT_CLASSIFICATION	7.046950543124076E-5	IMPLEMENTATION
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999218441970188	WITHOUT_CLASSIFICATION	7.815580298120323E-5	IMPLEMENTATION
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9998695760673836	WITHOUT_CLASSIFICATION	1.3042393261642824E-4	IMPLEMENTATION
// only supports simple parallel assignment of up to 10 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999790023308486	WITHOUT_CLASSIFICATION	2.0997669151342828E-5	IMPLEMENTATION
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.999912582856573	WITHOUT_CLASSIFICATION	8.741714342698579E-5	IMPLEMENTATION
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999163813444594	WITHOUT_CLASSIFICATION	8.361865554057423E-5	IMPLEMENTATION
//RedoNode redoNode = (RedoNode)node;	WITHOUT_CLASSIFICATION	0.9998256333691171	WITHOUT_CLASSIFICATION	1.74366630882844E-4	IMPLEMENTATION
// done processing args	WITHOUT_CLASSIFICATION	0.9998756248393225	WITHOUT_CLASSIFICATION	1.2437516067752985E-4	IMPLEMENTATION
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9998842135082502	WITHOUT_CLASSIFICATION	1.157864917498477E-4	IMPLEMENTATION
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9997682015669144	WITHOUT_CLASSIFICATION	2.3179843308567322E-4	IMPLEMENTATION
// if arity 1, just compile the one element to save us the array cost	WITHOUT_CLASSIFICATION	0.9999340838219123	WITHOUT_CLASSIFICATION	6.591617808778846E-5	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
// compile into array	WITHOUT_CLASSIFICATION	0.9998561557014949	WITHOUT_CLASSIFICATION	1.4384429850507226E-4	IMPLEMENTATION
// compile first node as non-expr and compile second node	WITHOUT_CLASSIFICATION	0.9999102054168388	WITHOUT_CLASSIFICATION	8.979458316113463E-5	IMPLEMENTATION
// check if it's an immediate, and don't outline	WITHOUT_CLASSIFICATION	0.9999481557865814	WITHOUT_CLASSIFICATION	5.184421341870076E-5	IMPLEMENTATION
// condition is always true, just compile it and not body	WITHOUT_CLASSIFICATION	0.9999392854320338	WITHOUT_CLASSIFICATION	6.071456796606056E-5	IMPLEMENTATION
// force static scope to claim restarg at 0, so it only implements the [] version of __file__	WITHOUT_CLASSIFICATION	0.9961828500609062	WITHOUT_CLASSIFICATION	0.003817149939093805	IMPLEMENTATION
// create method for toplevel of script	WITHOUT_CLASSIFICATION	0.9999676411079338	WITHOUT_CLASSIFICATION	3.235889206618131E-5	IMPLEMENTATION
// it's a multiple-statement body, iterate over all elements in turn and chain if it get too long	WITHOUT_CLASSIFICATION	0.9999412861699912	WITHOUT_CLASSIFICATION	5.8713830008874034E-5	IMPLEMENTATION
// send it along as arity-specific, we don't need the array	WITHOUT_CLASSIFICATION	0.9999169018556112	WITHOUT_CLASSIFICATION	8.309814438872416E-5	IMPLEMENTATION
// single-statement body, just compile it	WITHOUT_CLASSIFICATION	0.9998745128756994	WITHOUT_CLASSIFICATION	1.2548712430056328E-4	IMPLEMENTATION
// leave as a normal array	WITHOUT_CLASSIFICATION	0.9998384220284254	WITHOUT_CLASSIFICATION	1.6157797157465972E-4	IMPLEMENTATION
// This method has JITed already or has been abandoned. Bail out.	WITHOUT_CLASSIFICATION	0.9999052304550877	WITHOUT_CLASSIFICATION	9.476954491223366E-5	IMPLEMENTATION
// The cache is full. Abandon JIT for this method and bail out.	WITHOUT_CLASSIFICATION	0.9998683898960951	WITHOUT_CLASSIFICATION	1.3161010390481574E-4	IMPLEMENTATION
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999280203892104	WITHOUT_CLASSIFICATION	7.197961078957899E-5	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999877864557221	WITHOUT_CLASSIFICATION	1.2213544277917754E-5	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999877864557221	WITHOUT_CLASSIFICATION	1.2213544277917754E-5	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999154307863846	WITHOUT_CLASSIFICATION	8.456921361544785E-5	IMPLEMENTATION
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9998383751793485	WITHOUT_CLASSIFICATION	1.6162482065157282E-4	IMPLEMENTATION
// try optz version	WITHOUT_CLASSIFICATION	0.9998144542626685	WITHOUT_CLASSIFICATION	1.8554573733167874E-4	IMPLEMENTATION
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999367271581432	WITHOUT_CLASSIFICATION	6.327284185689106E-5	IMPLEMENTATION
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999218441970188	WITHOUT_CLASSIFICATION	7.815580298120323E-5	IMPLEMENTATION
// sizes must match	WITHOUT_CLASSIFICATION	0.9998241233111845	WITHOUT_CLASSIFICATION	1.7587668881560053E-4	IMPLEMENTATION
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9998695760673836	WITHOUT_CLASSIFICATION	1.3042393261642824E-4	IMPLEMENTATION
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999163813444594	WITHOUT_CLASSIFICATION	8.361865554057423E-5	IMPLEMENTATION
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.999912582856573	WITHOUT_CLASSIFICATION	8.741714342698579E-5	IMPLEMENTATION
// done processing args	WITHOUT_CLASSIFICATION	0.9998756248393225	WITHOUT_CLASSIFICATION	1.2437516067752985E-4	IMPLEMENTATION
// Check if the method has been explicitly excluded	WITHOUT_CLASSIFICATION	0.999970800677445	WITHOUT_CLASSIFICATION	2.919932255496035E-5	IMPLEMENTATION
// class could not be found nor generated; give up on JIT and bail out	WITHOUT_CLASSIFICATION	0.9998786529194384	WITHOUT_CLASSIFICATION	1.2134708056157776E-4	IMPLEMENTATION
// successfully got back a jitted method	WITHOUT_CLASSIFICATION	0.9999640029304777	WITHOUT_CLASSIFICATION	3.599706952223763E-5	IMPLEMENTATION
// finally, grab the script	WITHOUT_CLASSIFICATION	0.9998785470408194	WITHOUT_CLASSIFICATION	1.2145295918069346E-4	IMPLEMENTATION
// logEvery n methods based on configuration	WITHOUT_CLASSIFICATION	0.9999577663018	WITHOUT_CLASSIFICATION	4.223369819997775E-5	IMPLEMENTATION
// Time the compilation	WITHOUT_CLASSIFICATION	0.9998578739373445	WITHOUT_CLASSIFICATION	1.4212606265544928E-4	IMPLEMENTATION
// we have a body, do a full-on method	WITHOUT_CLASSIFICATION	0.9999005077267735	WITHOUT_CLASSIFICATION	9.949227322652439E-5	IMPLEMENTATION
// If we don't have a body, check for required or opt args // if opt args, they could have side effects // if required args, need to raise errors if too few args passed // otherwise, method does nothing, make it a nop	WITHOUT_CLASSIFICATION	0.9999576294161369	WITHOUT_CLASSIFICATION	4.2370583863158826E-5	IMPLEMENTATION
// if we haven't already decided on a do-nothing call	WITHOUT_CLASSIFICATION	0.9999706310423588	WITHOUT_CLASSIFICATION	2.9368957641184888E-5	IMPLEMENTATION
// only supports simple parallel assignment of up to 4 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999799703071425	WITHOUT_CLASSIFICATION	2.002969285753071E-5	IMPLEMENTATION
// normal items at the front or back of the masgn	WITHOUT_CLASSIFICATION	0.9999389199759002	WITHOUT_CLASSIFICATION	6.108002409976205E-5	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999229726594777	WITHOUT_CLASSIFICATION	7.702734052223968E-5	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9998448007062035	WITHOUT_CLASSIFICATION	1.5519929379641823E-4	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.999895538429447	WITHOUT_CLASSIFICATION	1.0446157055296296E-4	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999764146577838	WITHOUT_CLASSIFICATION	2.3585342216238114E-5	IMPLEMENTATION
// end of variable scope	WITHOUT_CLASSIFICATION	0.999920435727309	WITHOUT_CLASSIFICATION	7.956427269094235E-5	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9998755172278022	WITHOUT_CLASSIFICATION	1.2448277219782216E-4	IMPLEMENTATION
// Define the annotation for the method	WITHOUT_CLASSIFICATION	0.9999504259709416	WITHOUT_CLASSIFICATION	4.957402905836448E-5	IMPLEMENTATION
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999353061204923	WITHOUT_CLASSIFICATION	6.469387950773201E-5	IMPLEMENTATION
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999357896769616	WITHOUT_CLASSIFICATION	6.421032303845717E-5	IMPLEMENTATION
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999197415817331	WITHOUT_CLASSIFICATION	8.025841826688177E-5	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999415829120201	WITHOUT_CLASSIFICATION	5.841708797981901E-5	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999415829120201	WITHOUT_CLASSIFICATION	5.841708797981901E-5	IMPLEMENTATION
// value is already on stack, save it for later	WITHOUT_CLASSIFICATION	0.9999202957484354	WITHOUT_CLASSIFICATION	7.970425156459195E-5	IMPLEMENTATION
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9998142241774572	WITHOUT_CLASSIFICATION	1.8577582254276955E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997560694411739	WITHOUT_CLASSIFICATION	2.4393055882602926E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997560694411739	WITHOUT_CLASSIFICATION	2.4393055882602926E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997560694411739	WITHOUT_CLASSIFICATION	2.4393055882602926E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
/*arg2*/	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
/*args*/	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9998142241774572	WITHOUT_CLASSIFICATION	1.8577582254276955E-4	IMPLEMENTATION
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999565896513407	WITHOUT_CLASSIFICATION	4.3410348659297064E-5	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997560694411739	WITHOUT_CLASSIFICATION	2.4393055882602926E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997560694411739	WITHOUT_CLASSIFICATION	2.4393055882602926E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
/*args*/	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
// get call site and thread context	WITHOUT_CLASSIFICATION	0.99993060565235	WITHOUT_CLASSIFICATION	6.939434765000104E-5	IMPLEMENTATION
// get call site and thread context	WITHOUT_CLASSIFICATION	0.99993060565235	WITHOUT_CLASSIFICATION	6.939434765000104E-5	IMPLEMENTATION
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.999870962469248	WITHOUT_CLASSIFICATION	1.290375307519556E-4	IMPLEMENTATION
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.999870962469248	WITHOUT_CLASSIFICATION	1.290375307519556E-4	IMPLEMENTATION
// invoke	WITHOUT_CLASSIFICATION	0.9961451472952007	WITHOUT_CLASSIFICATION	0.003854852704799294	IMPLEMENTATION
// invoke	WITHOUT_CLASSIFICATION	0.9961451472952007	WITHOUT_CLASSIFICATION	0.003854852704799294	IMPLEMENTATION
// check if it's true, ending if so	WITHOUT_CLASSIFICATION	0.9999316151036941	WITHOUT_CLASSIFICATION	6.838489630591215E-5	IMPLEMENTATION
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9996171378681478	WITHOUT_CLASSIFICATION	3.8286213185224736E-4	IMPLEMENTATION
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9996171378681478	WITHOUT_CLASSIFICATION	3.8286213185224736E-4	IMPLEMENTATION
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9998921535805437	WITHOUT_CLASSIFICATION	1.0784641945632979E-4	IMPLEMENTATION
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9998921535805437	WITHOUT_CLASSIFICATION	1.0784641945632979E-4	IMPLEMENTATION
// eval value for assignment	WITHOUT_CLASSIFICATION	0.9998766065942604	WITHOUT_CLASSIFICATION	1.2339340573963556E-4	IMPLEMENTATION
// call site	WITHOUT_CLASSIFICATION	0.9997683286806542	WITHOUT_CLASSIFICATION	2.3167131934578628E-4	IMPLEMENTATION
// call site	WITHOUT_CLASSIFICATION	0.9997683286806542	WITHOUT_CLASSIFICATION	2.3167131934578628E-4	IMPLEMENTATION
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999109219636716	WITHOUT_CLASSIFICATION	8.907803632834919E-5	IMPLEMENTATION
// check if it's true, ending if not	WITHOUT_CLASSIFICATION	0.9999353645336383	WITHOUT_CLASSIFICATION	6.46354663617276E-5	IMPLEMENTATION
// eval value and save it	WITHOUT_CLASSIFICATION	0.9998749455572045	WITHOUT_CLASSIFICATION	1.2505444279557745E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999109219636716	WITHOUT_CLASSIFICATION	8.907803632834919E-5	IMPLEMENTATION
// receiver, args, result, value	WITHOUT_CLASSIFICATION	0.9998803470188671	WITHOUT_CLASSIFICATION	1.1965298113295388E-4	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9997499114186873	WITHOUT_CLASSIFICATION	2.5008858131277616E-4	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9997499114186873	WITHOUT_CLASSIFICATION	2.5008858131277616E-4	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9997499114186873	WITHOUT_CLASSIFICATION	2.5008858131277616E-4	IMPLEMENTATION
// super uses current block if none given	WITHOUT_CLASSIFICATION	0.9998956552916369	WITHOUT_CLASSIFICATION	1.0434470836298778E-4	IMPLEMENTATION
// args	WITHOUT_CLASSIFICATION	0.9959782897722491	WITHOUT_CLASSIFICATION	0.004021710227750943	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9958779281901554	WITHOUT_CLASSIFICATION	0.004122071809844572	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9958779281901554	WITHOUT_CLASSIFICATION	0.004122071809844572	IMPLEMENTATION
// no args, no block	WITHOUT_CLASSIFICATION	0.9997987406206033	WITHOUT_CLASSIFICATION	2.0125937939681395E-4	IMPLEMENTATION
// no args, with block	WITHOUT_CLASSIFICATION	0.99984518630841	WITHOUT_CLASSIFICATION	1.548136915898783E-4	IMPLEMENTATION
// with args, no block	WITHOUT_CLASSIFICATION	0.9998322376948081	WITHOUT_CLASSIFICATION	1.677623051919265E-4	IMPLEMENTATION
// with args, with block	WITHOUT_CLASSIFICATION	0.999822843353924	WITHOUT_CLASSIFICATION	1.7715664607599455E-4	IMPLEMENTATION
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9998162742995038	WITHOUT_CLASSIFICATION	1.8372570049618122E-4	IMPLEMENTATION
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9998438145448327	WITHOUT_CLASSIFICATION	1.5618545516732534E-4	IMPLEMENTATION
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9998438145448327	WITHOUT_CLASSIFICATION	1.5618545516732534E-4	IMPLEMENTATION
// arg and receiver already present on the stack	WITHOUT_CLASSIFICATION	0.9998734197208129	WITHOUT_CLASSIFICATION	1.2658027918717153E-4	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9997499114186873	WITHOUT_CLASSIFICATION	2.5008858131277616E-4	IMPLEMENTATION
// args	WITHOUT_CLASSIFICATION	0.9959782897722491	WITHOUT_CLASSIFICATION	0.004021710227750943	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9958779281901554	WITHOUT_CLASSIFICATION	0.004122071809844572	IMPLEMENTATION
// no args, no block	WITHOUT_CLASSIFICATION	0.9997987406206033	WITHOUT_CLASSIFICATION	2.0125937939681395E-4	IMPLEMENTATION
// no args, with block	WITHOUT_CLASSIFICATION	0.99984518630841	WITHOUT_CLASSIFICATION	1.548136915898783E-4	IMPLEMENTATION
// with args, no block	WITHOUT_CLASSIFICATION	0.9998322376948081	WITHOUT_CLASSIFICATION	1.677623051919265E-4	IMPLEMENTATION
// with args, with block	WITHOUT_CLASSIFICATION	0.999822843353924	WITHOUT_CLASSIFICATION	1.7715664607599455E-4	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
// retrieve scope from scopes array	WITHOUT_CLASSIFICATION	0.9999423669332054	WITHOUT_CLASSIFICATION	5.763306679458753E-5	IMPLEMENTATION
// use numbered access method	WITHOUT_CLASSIFICATION	0.9998668438427726	WITHOUT_CLASSIFICATION	1.331561572274983E-4	IMPLEMENTATION
// retrieve call site from sites array	WITHOUT_CLASSIFICATION	0.9999410713961989	WITHOUT_CLASSIFICATION	5.892860380108862E-5	IMPLEMENTATION
// add name to call site list	WITHOUT_CLASSIFICATION	0.999917630612777	WITHOUT_CLASSIFICATION	8.236938722289181E-5	IMPLEMENTATION
// module is on top of stack	WITHOUT_CLASSIFICATION	0.9998442708215185	WITHOUT_CLASSIFICATION	1.5572917848136818E-4	IMPLEMENTATION
// build scope names string	WITHOUT_CLASSIFICATION	0.9999085891653349	WITHOUT_CLASSIFICATION	9.141083466516472E-5	IMPLEMENTATION
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999190755673795	WITHOUT_CLASSIFICATION	8.092443262048069E-5	IMPLEMENTATION
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999190755673795	WITHOUT_CLASSIFICATION	8.092443262048069E-5	IMPLEMENTATION
// generate call sites initialization code	WITHOUT_CLASSIFICATION	0.9999811308684607	WITHOUT_CLASSIFICATION	1.8869131539304888E-5	IMPLEMENTATION
// generate symbols initialization code	WITHOUT_CLASSIFICATION	0.9999803457794524	WITHOUT_CLASSIFICATION	1.965422054761813E-5	IMPLEMENTATION
// generate fixnums initialization code	WITHOUT_CLASSIFICATION	0.9999806177525845	WITHOUT_CLASSIFICATION	1.938224741550598E-5	IMPLEMENTATION
// generate constants initialization code	WITHOUT_CLASSIFICATION	0.9999859503052502	WITHOUT_CLASSIFICATION	1.404969474978892E-5	IMPLEMENTATION
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999805304925421	WITHOUT_CLASSIFICATION	1.9469507457993008E-5	IMPLEMENTATION
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999805304925421	WITHOUT_CLASSIFICATION	1.9469507457993008E-5	IMPLEMENTATION
// generate variable readers initialization code	WITHOUT_CLASSIFICATION	0.9999787803520117	WITHOUT_CLASSIFICATION	2.1219647988351936E-5	IMPLEMENTATION
// generate variable writers initialization code	WITHOUT_CLASSIFICATION	0.9999790162159939	WITHOUT_CLASSIFICATION	2.0983784006070123E-5	IMPLEMENTATION
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999798694525575	WITHOUT_CLASSIFICATION	2.013054744253826E-5	IMPLEMENTATION
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999798694525575	WITHOUT_CLASSIFICATION	2.013054744253826E-5	IMPLEMENTATION
// generate bytelists initialization code	WITHOUT_CLASSIFICATION	0.9999804999356573	WITHOUT_CLASSIFICATION	1.9500064342767784E-5	IMPLEMENTATION
// generate method cache initialization code	WITHOUT_CLASSIFICATION	0.9999802589840646	WITHOUT_CLASSIFICATION	1.9741015935359057E-5	IMPLEMENTATION
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9998162742995038	WITHOUT_CLASSIFICATION	1.8372570049618122E-4	IMPLEMENTATION
// use IRubyObject[]	WITHOUT_CLASSIFICATION	0.9998253150397911	WITHOUT_CLASSIFICATION	1.7468496020891177E-4	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999881985140977	WITHOUT_CLASSIFICATION	1.1801485902241099E-5	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999115498936018	WITHOUT_CLASSIFICATION	8.845010639818721E-5	IMPLEMENTATION
// No point in updating number if last number was same value.	WITHOUT_CLASSIFICATION	0.9999201203728284	WITHOUT_CLASSIFICATION	7.987962717158315E-5	IMPLEMENTATION
// load Object under value	WITHOUT_CLASSIFICATION	0.999921906574799	WITHOUT_CLASSIFICATION	7.80934252010906E-5	IMPLEMENTATION
// put under object array already present	WITHOUT_CLASSIFICATION	0.9999035435974286	WITHOUT_CLASSIFICATION	9.645640257136059E-5	IMPLEMENTATION
// if element count is less than 6, use helper methods	WITHOUT_CLASSIFICATION	0.9999516199050624	WITHOUT_CLASSIFICATION	4.8380094937660795E-5	IMPLEMENTATION
// This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements	WITHOUT_CLASSIFICATION	0.9999663897563825	WITHOUT_CLASSIFICATION	3.3610243617423386E-5	IMPLEMENTATION
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999556044073943	WITHOUT_CLASSIFICATION	4.439559260573841E-5	IMPLEMENTATION
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999556044073943	WITHOUT_CLASSIFICATION	4.439559260573841E-5	IMPLEMENTATION
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9998656452191632	WITHOUT_CLASSIFICATION	1.3435478083674088E-4	IMPLEMENTATION
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9998656452191632	WITHOUT_CLASSIFICATION	1.3435478083674088E-4	IMPLEMENTATION
// use specific-arity for as much as possible	WITHOUT_CLASSIFICATION	0.9998929503498841	WITHOUT_CLASSIFICATION	1.0704965011584382E-4	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9998792881024223	WITHOUT_CLASSIFICATION	1.2071189757765965E-4	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9998792881024223	WITHOUT_CLASSIFICATION	1.2071189757765965E-4	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9998792881024223	WITHOUT_CLASSIFICATION	1.2071189757765965E-4	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9998312642475102	WITHOUT_CLASSIFICATION	1.6873575248969533E-4	IMPLEMENTATION
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9998399333222562	WITHOUT_CLASSIFICATION	1.6006667774379665E-4	IMPLEMENTATION
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9998399333222562	WITHOUT_CLASSIFICATION	1.6006667774379665E-4	IMPLEMENTATION
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999709471344946	WITHOUT_CLASSIFICATION	2.9052865505257933E-5	IMPLEMENTATION
// check the condition	WITHOUT_CLASSIFICATION	0.9998948409112125	WITHOUT_CLASSIFICATION	1.0515908878749018E-4	IMPLEMENTATION
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9998062976902022	WITHOUT_CLASSIFICATION	1.937023097978135E-4	IMPLEMENTATION
// skip catch block	WITHOUT_CLASSIFICATION	0.9997123790510606	WITHOUT_CLASSIFICATION	2.876209489394558E-4	IMPLEMENTATION
// catch logic for flow-control: next, break	WITHOUT_CLASSIFICATION	0.9998414625587595	WITHOUT_CLASSIFICATION	1.5853744124049216E-4	IMPLEMENTATION
// next jump	WITHOUT_CLASSIFICATION	0.9997614044809243	WITHOUT_CLASSIFICATION	2.3859551907580046E-4	IMPLEMENTATION
// exceptionNext target is for a next that doesn't push a new value, like this one	WITHOUT_CLASSIFICATION	0.9999408473630145	WITHOUT_CLASSIFICATION	5.9152636985606296E-5	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9998448007062035	WITHOUT_CLASSIFICATION	1.5519929379641823E-4	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9998448007062035	WITHOUT_CLASSIFICATION	1.5519929379641823E-4	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9998312642475102	WITHOUT_CLASSIFICATION	1.6873575248969533E-4	IMPLEMENTATION
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999709471344946	WITHOUT_CLASSIFICATION	2.9052865505257933E-5	IMPLEMENTATION
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999362727541837	WITHOUT_CLASSIFICATION	6.372724581631706E-5	IMPLEMENTATION
// check the condition	WITHOUT_CLASSIFICATION	0.9998948409112125	WITHOUT_CLASSIFICATION	1.0515908878749018E-4	IMPLEMENTATION
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9998062976902022	WITHOUT_CLASSIFICATION	1.937023097978135E-4	IMPLEMENTATION
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.999932646326302	WITHOUT_CLASSIFICATION	6.735367369802004E-5	IMPLEMENTATION
// break jump	WITHOUT_CLASSIFICATION	0.9998959913930083	WITHOUT_CLASSIFICATION	1.0400860699164476E-4	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9998584744271458	WITHOUT_CLASSIFICATION	1.4152557285419573E-4	IMPLEMENTATION
//[reg]	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
// for regular expressions with the /o flag	WITHOUT_CLASSIFICATION	0.9995617481736916	WITHOUT_CLASSIFICATION	4.3825182630846557E-4	IMPLEMENTATION
// inside a loop, jump to body	WITHOUT_CLASSIFICATION	0.9998249579902135	WITHOUT_CLASSIFICATION	1.7504200978659044E-4	IMPLEMENTATION
// inside a loop, jump to conditional	WITHOUT_CLASSIFICATION	0.9998574708283714	WITHOUT_CLASSIFICATION	1.425291716285245E-4	IMPLEMENTATION
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.999932646326302	WITHOUT_CLASSIFICATION	6.735367369802004E-5	IMPLEMENTATION
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999699371383195	WITHOUT_CLASSIFICATION	3.0062861680489288E-5	IMPLEMENTATION
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999699371383195	WITHOUT_CLASSIFICATION	3.0062861680489288E-5	IMPLEMENTATION
// if more than 4 vars, get values array too	WITHOUT_CLASSIFICATION	0.9999017284294079	WITHOUT_CLASSIFICATION	9.82715705920306E-5	IMPLEMENTATION
// retry handling in the rescue block	WITHOUT_CLASSIFICATION	0.999894766544157	WITHOUT_CLASSIFICATION	1.0523345584303369E-4	IMPLEMENTATION
// any exceptions raised must continue to be raised, skipping $! restoration	WITHOUT_CLASSIFICATION	0.9999091690196121	WITHOUT_CLASSIFICATION	9.083098038793049E-5	IMPLEMENTATION
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9998879059073316	WITHOUT_CLASSIFICATION	1.1209409266849045E-4	IMPLEMENTATION
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999548637024579	WITHOUT_CLASSIFICATION	4.5136297542158124E-5	IMPLEMENTATION
// Handle Flow exceptions, just propagating them	WITHOUT_CLASSIFICATION	0.9999269939031306	WITHOUT_CLASSIFICATION	7.30060968694942E-5	IMPLEMENTATION
// rethrow to outer flow catcher	WITHOUT_CLASSIFICATION	0.9998487432917825	WITHOUT_CLASSIFICATION	1.5125670821749258E-4	IMPLEMENTATION
// Handle Ruby exceptions (RaiseException)	WITHOUT_CLASSIFICATION	0.9999174571760264	WITHOUT_CLASSIFICATION	8.254282397350553E-5	IMPLEMENTATION
// inside a loop, break out of it // go to end of loop, leaving break value on stack	WITHOUT_CLASSIFICATION	0.999902409134973	WITHOUT_CLASSIFICATION	9.759086502700698E-5	IMPLEMENTATION
// false // zero	WITHOUT_CLASSIFICATION	0.9998278835438236	WITHOUT_CLASSIFICATION	1.7211645617638949E-4	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999364899352235	WITHOUT_CLASSIFICATION	6.351006477644905E-5	IMPLEMENTATION
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9998879059073316	WITHOUT_CLASSIFICATION	1.1209409266849045E-4	IMPLEMENTATION
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999548637024579	WITHOUT_CLASSIFICATION	4.5136297542158124E-5	IMPLEMENTATION
// retry handling in the rescue blocks	WITHOUT_CLASSIFICATION	0.99989591412869	WITHOUT_CLASSIFICATION	1.0408587130999337E-4	IMPLEMENTATION
// push false	WITHOUT_CLASSIFICATION	0.9997684691759626	WITHOUT_CLASSIFICATION	2.3153082403729356E-4	IMPLEMENTATION
//method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));	WITHOUT_CLASSIFICATION	0.9999329150812436	WITHOUT_CLASSIFICATION	6.708491875631744E-5	IMPLEMENTATION
//method.ifnonnull(trueLabel);	WITHOUT_CLASSIFICATION	0.999808367965694	WITHOUT_CLASSIFICATION	1.9163203430599827E-4	IMPLEMENTATION
// EQ == 0 (i.e. false)   //[C]	WITHOUT_CLASSIFICATION	0.9998485605439261	WITHOUT_CLASSIFICATION	1.5143945607379381E-4	IMPLEMENTATION
//[C, C] //[C, C, String] //[C, null|C]	WITHOUT_CLASSIFICATION	0.9998529311582325	WITHOUT_CLASSIFICATION	1.470688417675003E-4	IMPLEMENTATION
//[C]	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
// push true	WITHOUT_CLASSIFICATION	0.9997517971223134	WITHOUT_CLASSIFICATION	2.482028776865271E-4	IMPLEMENTATION
// EQ != 0 (i.e. true)	WITHOUT_CLASSIFICATION	0.9998062976902022	WITHOUT_CLASSIFICATION	1.9370230979781332E-4	IMPLEMENTATION
//[?, ?] //[?, boolean]	WITHOUT_CLASSIFICATION	0.9998228017364209	WITHOUT_CLASSIFICATION	1.7719826357906953E-4	IMPLEMENTATION
//[RubyModule] //[RubyModule, String]	WITHOUT_CLASSIFICATION	0.9998539235782147	WITHOUT_CLASSIFICATION	1.4607642178538825E-4	IMPLEMENTATION
//[boolean]	WITHOUT_CLASSIFICATION	0.9997637732726325	WITHOUT_CLASSIFICATION	2.3622672736735062E-4	IMPLEMENTATION
// no receiver for singleton class	WITHOUT_CLASSIFICATION	0.9998961794025468	WITHOUT_CLASSIFICATION	1.0382059745322721E-4	IMPLEMENTATION
// but there's a superclass passed in, use it	WITHOUT_CLASSIFICATION	0.999900676445827	WITHOUT_CLASSIFICATION	9.932355417300704E-5	IMPLEMENTATION
// we re-set self to the class, but store the old self in a temporary local variable // this is to prevent it GCing in case the singleton is short-lived	WITHOUT_CLASSIFICATION	0.999993725641376	WITHOUT_CLASSIFICATION	6.27435862406444E-6	IMPLEMENTATION
// set self to the class	WITHOUT_CLASSIFICATION	0.9999587756296658	WITHOUT_CLASSIFICATION	4.1224370334093283E-5	IMPLEMENTATION
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9997519270338258	WITHOUT_CLASSIFICATION	2.480729661743045E-4	IMPLEMENTATION
// static scope	WITHOUT_CLASSIFICATION	0.9997968349535897	WITHOUT_CLASSIFICATION	2.0316504641025178E-4	IMPLEMENTATION
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999625193872489	WITHOUT_CLASSIFICATION	3.748061275113438E-5	IMPLEMENTATION
// new instance to invoke run against	WITHOUT_CLASSIFICATION	0.999909905140299	WITHOUT_CLASSIFICATION	9.009485970096724E-5	IMPLEMENTATION
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9997519270338258	WITHOUT_CLASSIFICATION	2.480729661743045E-4	IMPLEMENTATION
// static scope	WITHOUT_CLASSIFICATION	0.9997968349535897	WITHOUT_CLASSIFICATION	2.0316504641025178E-4	IMPLEMENTATION
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999625193872489	WITHOUT_CLASSIFICATION	3.748061275113438E-5	IMPLEMENTATION
// finally with exception	WITHOUT_CLASSIFICATION	0.9998829541413154	WITHOUT_CLASSIFICATION	1.170458586845111E-4	IMPLEMENTATION
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999485548427454	WITHOUT_CLASSIFICATION	5.144515725462674E-5	IMPLEMENTATION
// otherwise, there's a receiver, so we pass that in directly for the sclass logic	WITHOUT_CLASSIFICATION	0.9999131456707772	WITHOUT_CLASSIFICATION	8.685432922281517E-5	IMPLEMENTATION
// original exception is on stack	WITHOUT_CLASSIFICATION	0.9999228942226462	WITHOUT_CLASSIFICATION	7.710577735378658E-5	IMPLEMENTATION
// RaiseException is on stack, get RubyException out	WITHOUT_CLASSIFICATION	0.9999175644896817	WITHOUT_CLASSIFICATION	8.24355103182733E-5	IMPLEMENTATION
// updating position for same line; skip	WITHOUT_CLASSIFICATION	0.9999449698095157	WITHOUT_CLASSIFICATION	5.503019048421718E-5	IMPLEMENTATION
// callbacks to fill in method body	WITHOUT_CLASSIFICATION	0.9998709250912936	WITHOUT_CLASSIFICATION	1.290749087064132E-4	IMPLEMENTATION
// prepare to call "def" utility method to handle def logic	WITHOUT_CLASSIFICATION	0.999841181636541	WITHOUT_CLASSIFICATION	1.5881836345907487E-4	IMPLEMENTATION
// script object	WITHOUT_CLASSIFICATION	0.9998310145765406	WITHOUT_CLASSIFICATION	1.689854234595124E-4	IMPLEMENTATION
// arities	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
// TODO assuming case is a fixnum	WITHOUT_CLASSIFICATION	0.9905095631792655	WITHOUT_CLASSIFICATION	0.009490436820734536	IMPLEMENTATION
// we have an input case, prepare branching logic	WITHOUT_CLASSIFICATION	0.9998504088522475	WITHOUT_CLASSIFICATION	1.4959114775261128E-4	IMPLEMENTATION
// we have optimized switch cases, build a lookupswitch	WITHOUT_CLASSIFICATION	0.99987390311135	WITHOUT_CLASSIFICATION	1.260968886498919E-4	IMPLEMENTATION
// checkcast the value; if match, fast path; otherwise proceed to slow logic	WITHOUT_CLASSIFICATION	0.9999134644097055	WITHOUT_CLASSIFICATION	8.6535590294516E-5	IMPLEMENTATION
// expression-based tests + bodies	WITHOUT_CLASSIFICATION	0.9998294770798547	WITHOUT_CLASSIFICATION	1.705229201454204E-4	IMPLEMENTATION
// normal case, create a new label	WITHOUT_CLASSIFICATION	0.9999662746797429	WITHOUT_CLASSIFICATION	3.372532025703958E-5	IMPLEMENTATION
// last conditional case, use defaultCase	WITHOUT_CLASSIFICATION	0.999923544385293	WITHOUT_CLASSIFICATION	7.645561470699391E-5	IMPLEMENTATION
// do nothing; arity check is done before call	WITHOUT_CLASSIFICATION	0.9999755103601002	WITHOUT_CLASSIFICATION	2.4489639899869897E-5	IMPLEMENTATION
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.999876240408805	WITHOUT_CLASSIFICATION	1.2375959119495714E-4	IMPLEMENTATION
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9998672351519748	WITHOUT_CLASSIFICATION	1.327648480251947E-4	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.9998851663133662	WITHOUT_CLASSIFICATION	1.1483368663378865E-4	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.9998498160690519	WITHOUT_CLASSIFICATION	1.5018393094801846E-4	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.9998498160690519	WITHOUT_CLASSIFICATION	1.5018393094801846E-4	IMPLEMENTATION
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.999885518217351	WITHOUT_CLASSIFICATION	1.1448178264901288E-4	IMPLEMENTATION
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.999885518217351	WITHOUT_CLASSIFICATION	1.1448178264901288E-4	IMPLEMENTATION
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999241398212149	WITHOUT_CLASSIFICATION	7.586017878518504E-5	IMPLEMENTATION
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999241398212149	WITHOUT_CLASSIFICATION	7.586017878518504E-5	IMPLEMENTATION
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999210173071155	WITHOUT_CLASSIFICATION	7.898269288455042E-5	IMPLEMENTATION
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999287855542022	WITHOUT_CLASSIFICATION	7.121444579775396E-5	IMPLEMENTATION
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999262326351157	WITHOUT_CLASSIFICATION	7.376736488432363E-5	IMPLEMENTATION
// if there's args left and we want them, assign to rest arg	WITHOUT_CLASSIFICATION	0.9998833683529975	WITHOUT_CLASSIFICATION	1.1663164700237049E-4	IMPLEMENTATION
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999432855281534	WITHOUT_CLASSIFICATION	5.6714471846548324E-5	IMPLEMENTATION
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999156654289375	WITHOUT_CLASSIFICATION	8.433457106252069E-5	IMPLEMENTATION
// first, iterate over all pre args	WITHOUT_CLASSIFICATION	0.999899491010411	WITHOUT_CLASSIFICATION	1.0050898958894193E-4	IMPLEMENTATION
// then optional args	WITHOUT_CLASSIFICATION	0.9998683478716796	WITHOUT_CLASSIFICATION	1.3165212832033917E-4	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9998448007062035	WITHOUT_CLASSIFICATION	1.5519929379641823E-4	IMPLEMENTATION
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999210173071155	WITHOUT_CLASSIFICATION	7.898269288455042E-5	IMPLEMENTATION
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999287855542022	WITHOUT_CLASSIFICATION	7.121444579775396E-5	IMPLEMENTATION
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999262326351157	WITHOUT_CLASSIFICATION	7.376736488432363E-5	IMPLEMENTATION
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999432855281534	WITHOUT_CLASSIFICATION	5.6714471846548324E-5	IMPLEMENTATION
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999156654289375	WITHOUT_CLASSIFICATION	8.433457106252069E-5	IMPLEMENTATION
// if rest args, excluding post args	WITHOUT_CLASSIFICATION	0.99986328455129	WITHOUT_CLASSIFICATION	1.3671544870999457E-4	IMPLEMENTATION
// finally, post args	WITHOUT_CLASSIFICATION	0.9998345130649959	WITHOUT_CLASSIFICATION	1.6548693500404002E-4	IMPLEMENTATION
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9996001895269011	WITHOUT_CLASSIFICATION	3.9981047309892083E-4	IMPLEMENTATION
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9996001895269011	WITHOUT_CLASSIFICATION	3.9981047309892083E-4	IMPLEMENTATION
// unwrap scopes to appropriate depth	WITHOUT_CLASSIFICATION	0.9998171184244746	WITHOUT_CLASSIFICATION	1.8288157552533117E-4	IMPLEMENTATION
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9998795590737122	WITHOUT_CLASSIFICATION	1.2044092628787769E-4	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999479175042081	WITHOUT_CLASSIFICATION	5.208249579197437E-5	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9998743392517015	WITHOUT_CLASSIFICATION	1.256607482985302E-4	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9998743392517015	WITHOUT_CLASSIFICATION	1.256607482985302E-4	IMPLEMENTATION
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9998831570847261	WITHOUT_CLASSIFICATION	1.168429152739208E-4	IMPLEMENTATION
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9998787868069005	WITHOUT_CLASSIFICATION	1.2121319309950783E-4	IMPLEMENTATION
// store the local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999271037715528	WITHOUT_CLASSIFICATION	7.289622844725913E-5	IMPLEMENTATION
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999170056491784	WITHOUT_CLASSIFICATION	8.299435082160146E-5	IMPLEMENTATION
// return in a class body raises error	WITHOUT_CLASSIFICATION	0.999975847048553	WITHOUT_CLASSIFICATION	2.4152951446929064E-5	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.999895538429447	WITHOUT_CLASSIFICATION	1.0446157055296296E-4	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999764146577838	WITHOUT_CLASSIFICATION	2.3585342216238114E-5	IMPLEMENTATION
// end of variable scope	WITHOUT_CLASSIFICATION	0.999920435727309	WITHOUT_CLASSIFICATION	7.956427269094235E-5	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9998755172278022	WITHOUT_CLASSIFICATION	1.2448277219782216E-4	IMPLEMENTATION
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999357896769616	WITHOUT_CLASSIFICATION	6.421032303845717E-5	IMPLEMENTATION
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999197415817331	WITHOUT_CLASSIFICATION	8.025841826688177E-5	IMPLEMENTATION
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9998831570847261	WITHOUT_CLASSIFICATION	1.168429152739208E-4	IMPLEMENTATION
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9998787868069005	WITHOUT_CLASSIFICATION	1.2121319309950783E-4	IMPLEMENTATION
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999170056491784	WITHOUT_CLASSIFICATION	8.299435082160146E-5	IMPLEMENTATION
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9998824641623916	WITHOUT_CLASSIFICATION	1.1753583760849909E-4	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999479175042081	WITHOUT_CLASSIFICATION	5.208249579197437E-5	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999479175042081	WITHOUT_CLASSIFICATION	5.208249579197437E-5	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999364899352235	WITHOUT_CLASSIFICATION	6.351006477644905E-5	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999364899352235	WITHOUT_CLASSIFICATION	6.351006477644905E-5	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9998533263354339	WITHOUT_CLASSIFICATION	1.46673664566125E-4	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9998533263354339	WITHOUT_CLASSIFICATION	1.46673664566125E-4	IMPLEMENTATION
// store the local vars in a local variable if there are any	WITHOUT_CLASSIFICATION	0.9999676707811253	WITHOUT_CLASSIFICATION	3.232921887481646E-5	IMPLEMENTATION
// if more than 4 locals, get and populate the locals array too	WITHOUT_CLASSIFICATION	0.9999117383929247	WITHOUT_CLASSIFICATION	8.826160707530946E-5	IMPLEMENTATION
// fill local vars with nil, to avoid checking every access.	WITHOUT_CLASSIFICATION	0.9998851416859627	WITHOUT_CLASSIFICATION	1.1485831403745819E-4	IMPLEMENTATION
// default for starting tempVariableIndex is ok	WITHOUT_CLASSIFICATION	0.9999716215237502	WITHOUT_CLASSIFICATION	2.8378476249756515E-5	IMPLEMENTATION
// store the local vars in a local variable for preparing the class (using previous scope)	WITHOUT_CLASSIFICATION	0.9999795493623145	WITHOUT_CLASSIFICATION	2.0450637685522245E-5	IMPLEMENTATION
// store the new local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999421435023235	WITHOUT_CLASSIFICATION	5.785649767659638E-5	IMPLEMENTATION
// in 1.8 mode, this will be a RubyArray containing the arguments // in 1.9 mode, this will be an IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999567941616323	WITHOUT_CLASSIFICATION	4.320583836761444E-5	IMPLEMENTATION
// no variable initialization, because we're reusing parent's scope (flat)	WITHOUT_CLASSIFICATION	0.9999795889827694	WITHOUT_CLASSIFICATION	2.0411017230557362E-5	IMPLEMENTATION
// for specific-index cases, clean up non-expression values	WITHOUT_CLASSIFICATION	0.9998987729045462	WITHOUT_CLASSIFICATION	1.0122709545373267E-4	IMPLEMENTATION
// set up a local Ruby variable	WITHOUT_CLASSIFICATION	0.9999229248467145	WITHOUT_CLASSIFICATION	7.707515328554897E-5	IMPLEMENTATION
// if that succeeds, the others should as well	WITHOUT_CLASSIFICATION	0.9998798055994341	WITHOUT_CLASSIFICATION	1.2019440056588299E-4	IMPLEMENTATION
// verify the class	WITHOUT_CLASSIFICATION	0.9999119731035422	WITHOUT_CLASSIFICATION	8.802689645790375E-5	IMPLEMENTATION
// create dir if necessary	WITHOUT_CLASSIFICATION	0.9999763259267597	WITHOUT_CLASSIFICATION	2.3674073240343624E-5	IMPLEMENTATION
// Create the class with the appropriate class name and source file	WITHOUT_CLASSIFICATION	0.9999737823588541	WITHOUT_CLASSIFICATION	2.6217641145863766E-5	IMPLEMENTATION
// add setPosition impl, which stores filename as constant to speed updates	WITHOUT_CLASSIFICATION	0.9999795740187808	WITHOUT_CLASSIFICATION	2.042598121921754E-5	IMPLEMENTATION
// thread context	WITHOUT_CLASSIFICATION	0.9997819120222721	WITHOUT_CLASSIFICATION	2.180879777278713E-4	IMPLEMENTATION
// line number	WITHOUT_CLASSIFICATION	0.9998082806351412	WITHOUT_CLASSIFICATION	1.9171936485884675E-4	IMPLEMENTATION
// invoke __file__ with threadcontext, self, args (null), and block (null)	WITHOUT_CLASSIFICATION	0.9998346723082077	WITHOUT_CLASSIFICATION	1.6532769179227147E-4	IMPLEMENTATION
// load always uses IRubyObject[], so simple closure offset calculation here	WITHOUT_CLASSIFICATION	0.9999236135966776	WITHOUT_CLASSIFICATION	7.63864033224549E-5	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999764146577838	WITHOUT_CLASSIFICATION	2.3585342216238114E-5	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9998755172278022	WITHOUT_CLASSIFICATION	1.2448277219782216E-4	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999415829120201	WITHOUT_CLASSIFICATION	5.841708797981901E-5	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9958779281901554	WITHOUT_CLASSIFICATION	0.004122071809844572	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9958779281901554	WITHOUT_CLASSIFICATION	0.004122071809844572	IMPLEMENTATION
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9998824641623916	WITHOUT_CLASSIFICATION	1.1753583760849909E-4	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999479175042081	WITHOUT_CLASSIFICATION	5.208249579197437E-5	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999364899352235	WITHOUT_CLASSIFICATION	6.351006477644905E-5	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9998533263354339	WITHOUT_CLASSIFICATION	1.46673664566125E-4	IMPLEMENTATION
// add Script#run impl, used for running this script with a specified threadcontext and self // root method of a script is always in __file__ method	WITHOUT_CLASSIFICATION	0.9999861770960827	WITHOUT_CLASSIFICATION	1.3822903917235894E-5	IMPLEMENTATION
// add main impl, used for detached or command-line execution of this script with a new runtime // root method of a script is always in stub0, method0	WITHOUT_CLASSIFICATION	0.9999914238218783	WITHOUT_CLASSIFICATION	8.5761781217281E-6	IMPLEMENTATION
// construct static scope list of names	WITHOUT_CLASSIFICATION	0.9999262973077228	WITHOUT_CLASSIFICATION	7.370269227718509E-5	IMPLEMENTATION
// JRUBY-3014: make __FILE__ dynamically determined at load time, but // we provide a reasonable default here	WITHOUT_CLASSIFICATION	0.9999712960782707	WITHOUT_CLASSIFICATION	2.8703921729322167E-5	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999845183044581	WITHOUT_CLASSIFICATION	1.5481695541956075E-5	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999845183044581	WITHOUT_CLASSIFICATION	1.5481695541956075E-5	IMPLEMENTATION
// lazily create class init only if necessary	WITHOUT_CLASSIFICATION	0.9999727103904719	WITHOUT_CLASSIFICATION	2.7289609528168043E-5	IMPLEMENTATION
// boxed arg list __file__	WITHOUT_CLASSIFICATION	0.9998124515620213	WITHOUT_CLASSIFICATION	1.8754843797873924E-4	IMPLEMENTATION
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9998129087892584	WITHOUT_CLASSIFICATION	1.8709121074156115E-4	IMPLEMENTATION
// exact arg list __file__	WITHOUT_CLASSIFICATION	0.9998199156718539	WITHOUT_CLASSIFICATION	1.800843281461754E-4	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.9998351862041064	WITHOUT_CLASSIFICATION	1.6481379589355395E-4	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.9998351862041064	WITHOUT_CLASSIFICATION	1.6481379589355395E-4	IMPLEMENTATION
// not using a new scope, use saved one for a flat closure	WITHOUT_CLASSIFICATION	0.9995666945657726	WITHOUT_CLASSIFICATION	4.3330543422742906E-4	IMPLEMENTATION
// normal closure	WITHOUT_CLASSIFICATION	0.9997792848624844	WITHOUT_CLASSIFICATION	2.2071513751559943E-4	IMPLEMENTATION
// end of scoping for closure's vars	WITHOUT_CLASSIFICATION	0.9999358673521583	WITHOUT_CLASSIFICATION	6.413264784170468E-5	IMPLEMENTATION
// we only need full-on redo exception handling if there's logic that might produce it	WITHOUT_CLASSIFICATION	0.9999310584640434	WITHOUT_CLASSIFICATION	6.894153595651478E-5	IMPLEMENTATION
// handle redos by restarting the block	WITHOUT_CLASSIFICATION	0.9999147489082757	WITHOUT_CLASSIFICATION	8.52510917242327E-5	IMPLEMENTATION
// jump back to the top of the main body of this closure	WITHOUT_CLASSIFICATION	0.9999651536404237	WITHOUT_CLASSIFICATION	3.4846359576207546E-5	IMPLEMENTATION
// Ruby name 	WITHOUT_CLASSIFICATION	0.9997605765517981	WITHOUT_CLASSIFICATION	2.3942344820199524E-4	IMPLEMENTATION
// Accumulate call arguments	WITHOUT_CLASSIFICATION	0.9998750747580775	WITHOUT_CLASSIFICATION	1.2492524192255188E-4	IMPLEMENTATION
// Fix FileNameCompletor to work mid-line	WITHOUT_CLASSIFICATION	0.9998298422592253	WITHOUT_CLASSIFICATION	1.701577407745535E-4	IMPLEMENTATION
// We need to ensure that the variable names generated here cannot conflict with ruby variable names! // Hence the "%" tthat is appended to the beginning!	WITHOUT_CLASSIFICATION	0.9997262552586373	WITHOUT_CLASSIFICATION	2.7374474136255335E-4	IMPLEMENTATION
// Does this method define code?  // Default is yes -- which basically leads to pessimistic but safe optimizations // But, for library and internal methods, this might be false.	WITHOUT_CLASSIFICATION	0.9999440500949586	WITHOUT_CLASSIFICATION	5.5949905041361627E-5	IMPLEMENTATION
// Map of constants defined in this scope (not valid for methods!)	WITHOUT_CLASSIFICATION	0.9999858147773694	WITHOUT_CLASSIFICATION	1.41852226307019E-5	IMPLEMENTATION
// NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner // with outer loops encountered before inner loops, and inner loops finished before outer ones. // // So, we can keep track of loops in a loop stack which  keeps track of loops as they are encountered. // This lets us implement next/redo/break/retry easily for the non-closure cases	WITHOUT_CLASSIFICATION	0.9989675204810515	WITHOUT_CLASSIFICATION	0.001032479518948395	IMPLEMENTATION
// Map keep track of the next available variable index for a particular prefix	WITHOUT_CLASSIFICATION	0.9999098400901539	WITHOUT_CLASSIFICATION	9.015990984605062E-5	IMPLEMENTATION
// Control flow graph for this scope	WITHOUT_CLASSIFICATION	0.9999290024457631	WITHOUT_CLASSIFICATION	7.099755423684164E-5	IMPLEMENTATION
//        _lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;	WITHOUT_CLASSIFICATION	0.9999529076227872	WITHOUT_CLASSIFICATION	4.7092377212749625E-5	IMPLEMENTATION
// List of modules, classes, and methods defined in this scope!	WITHOUT_CLASSIFICATION	0.999973307401022	WITHOUT_CLASSIFICATION	2.6692598978047833E-5	IMPLEMENTATION
// Returns the containing parent scope!	WITHOUT_CLASSIFICATION	0.9999296364479768	WITHOUT_CLASSIFICATION	7.036355202323408E-5	IMPLEMENTATION
// Insert nesting level to ensure variable names don't conflict across nested scopes! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //        return new Variable(prefix + _lexicalNestingLevel + "_" + idx);	WITHOUT_CLASSIFICATION	0.9999954380108775	WITHOUT_CLASSIFICATION	4.5619891224894485E-6	IMPLEMENTATION
// get "self"	WITHOUT_CLASSIFICATION	0.9998811664636083	WITHOUT_CLASSIFICATION	1.188335363917676E-4	IMPLEMENTATION
// variable is never read, variable is never live	WITHOUT_CLASSIFICATION	0.999692814159271	WITHOUT_CLASSIFICATION	3.0718584072899E-4	IMPLEMENTATION
// inline script	WITHOUT_CLASSIFICATION	0.9997703624322284	WITHOUT_CLASSIFICATION	2.296375677715692E-4	IMPLEMENTATION
// inline script	WITHOUT_CLASSIFICATION	0.9997703624322284	WITHOUT_CLASSIFICATION	2.296375677715692E-4	IMPLEMENTATION
// This method is called to build assignments for a multiple-assignment instruction	WITHOUT_CLASSIFICATION	0.9998908312303533	WITHOUT_CLASSIFICATION	1.0916876964668802E-4	IMPLEMENTATION
// Build the class body!	WITHOUT_CLASSIFICATION	0.9999118723921211	WITHOUT_CLASSIFICATION	8.812760787891825E-5	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9998756509483013	WITHOUT_CLASSIFICATION	1.2434905169874806E-4	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9998756509483013	WITHOUT_CLASSIFICATION	1.2434905169874806E-4	IMPLEMENTATION
// SSS FIXME: Can this ever be null?	WITHOUT_CLASSIFICATION	0.9997245144627728	WITHOUT_CLASSIFICATION	2.7548553722725325E-4	IMPLEMENTATION
// Run the pass on the passed in scope!	WITHOUT_CLASSIFICATION	0.9999112125248452	WITHOUT_CLASSIFICATION	8.87874751547792E-5	IMPLEMENTATION
// done // done // done // done	WITHOUT_CLASSIFICATION	0.9998344083112356	WITHOUT_CLASSIFICATION	1.6559168876435545E-4	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999779001010506	WITHOUT_CLASSIFICATION	2.2099898949481555E-5	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999779001010506	WITHOUT_CLASSIFICATION	2.2099898949481555E-5	IMPLEMENTATION
// This method is called to build arguments for a block!	WITHOUT_CLASSIFICATION	0.999898892933047	WITHOUT_CLASSIFICATION	1.011070669530257E-4	IMPLEMENTATION
// build first node (and ignore its result) and then second node	WITHOUT_CLASSIFICATION	0.9999624331130098	WITHOUT_CLASSIFICATION	3.756688699010412E-5	IMPLEMENTATION
// build first node only and return false	WITHOUT_CLASSIFICATION	0.9999579406891314	WITHOUT_CLASSIFICATION	4.205931086866594E-5	IMPLEMENTATION
// Value of the last expression in the block 	WITHOUT_CLASSIFICATION	0.9999491693798033	WITHOUT_CLASSIFICATION	5.083062019664443E-5	IMPLEMENTATION
// If this is not a closure, the break is equivalent to jumping to the loop end label	WITHOUT_CLASSIFICATION	0.9999669966428548	WITHOUT_CLASSIFICATION	3.300335714515046E-5	IMPLEMENTATION
// get the incoming case value	WITHOUT_CLASSIFICATION	0.9999616345281778	WITHOUT_CLASSIFICATION	3.836547182221931E-5	IMPLEMENTATION
// the CASE instruction	WITHOUT_CLASSIFICATION	0.9998820295553222	WITHOUT_CLASSIFICATION	1.1797044467779343E-4	IMPLEMENTATION
// lists to aggregate variables and bodies for whens	WITHOUT_CLASSIFICATION	0.9998800693236448	WITHOUT_CLASSIFICATION	1.199306763551396E-4	IMPLEMENTATION
// build each "when"	WITHOUT_CLASSIFICATION	0.9998322411256557	WITHOUT_CLASSIFICATION	1.677588743441684E-4	IMPLEMENTATION
// multiple conditions for when	WITHOUT_CLASSIFICATION	0.9998834560830859	WITHOUT_CLASSIFICATION	1.1654391691409462E-4	IMPLEMENTATION
// build "else" if it exists	WITHOUT_CLASSIFICATION	0.9998933500733954	WITHOUT_CLASSIFICATION	1.0664992660465409E-4	IMPLEMENTATION
// now emit bodies	WITHOUT_CLASSIFICATION	0.999774704409819	WITHOUT_CLASSIFICATION	2.2529559018111934E-4	IMPLEMENTATION
// close it out	WITHOUT_CLASSIFICATION	0.9998583812560141	WITHOUT_CLASSIFICATION	1.4161874398581386E-4	IMPLEMENTATION
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999867632151053	WITHOUT_CLASSIFICATION	1.3236784894791617E-5	IMPLEMENTATION
// Do we have a dynamic container?	WITHOUT_CLASSIFICATION	0.9989122392767961	WITHOUT_CLASSIFICATION	0.0010877607232039831	IMPLEMENTATION
// Return a meta object corresponding to the class	WITHOUT_CLASSIFICATION	0.9999693523634241	WITHOUT_CLASSIFICATION	3.064763657590802E-5	IMPLEMENTATION
// 1. Load the module first (lhs of node) // 2. Then load the constant from the module	WITHOUT_CLASSIFICATION	0.99995701814295	WITHOUT_CLASSIFICATION	4.298185704995904E-5	IMPLEMENTATION
// Build IR for args	WITHOUT_CLASSIFICATION	0.9997882964819416	WITHOUT_CLASSIFICATION	2.1170351805847079E-4	IMPLEMENTATION
// Build IR for body	WITHOUT_CLASSIFICATION	0.9997833480861357	WITHOUT_CLASSIFICATION	2.1665191386439886E-4	IMPLEMENTATION
// if root of method is rescue, build as a light rescue	WITHOUT_CLASSIFICATION	0.9998683002647454	WITHOUT_CLASSIFICATION	1.3169973525454755E-4	IMPLEMENTATION
// Instance method	WITHOUT_CLASSIFICATION	0.9998677789741389	WITHOUT_CLASSIFICATION	1.3222102586111787E-4	IMPLEMENTATION
// Class method	WITHOUT_CLASSIFICATION	0.9998604163617417	WITHOUT_CLASSIFICATION	1.3958363825833543E-4	IMPLEMENTATION
// Other args begin at index 1	WITHOUT_CLASSIFICATION	0.9998281239492806	WITHOUT_CLASSIFICATION	1.7187605071942126E-4	IMPLEMENTATION
// Both for fixed arity and variable arity methods	WITHOUT_CLASSIFICATION	0.9998612651161369	WITHOUT_CLASSIFICATION	1.3873488386299777E-4	IMPLEMENTATION
// Now for the rest	WITHOUT_CLASSIFICATION	0.9998368832411684	WITHOUT_CLASSIFICATION	1.6311675883157019E-4	IMPLEMENTATION
// Jump to 'l' if this arg is not null.  If null, fall through and build the default value!	WITHOUT_CLASSIFICATION	0.9999904771158294	WITHOUT_CLASSIFICATION	9.522884170482666E-6	IMPLEMENTATION
// This is not an expression that computes anything	WITHOUT_CLASSIFICATION	0.9999334371537327	WITHOUT_CLASSIFICATION	6.656284626725964E-5	IMPLEMENTATION
// Create a new closure context	WITHOUT_CLASSIFICATION	0.999980813763183	WITHOUT_CLASSIFICATION	1.9186236816967565E-5	IMPLEMENTATION
// Build args	WITHOUT_CLASSIFICATION	0.9997878328578234	WITHOUT_CLASSIFICATION	2.1216714217657951E-4	IMPLEMENTATION
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999686790681942	WITHOUT_CLASSIFICATION	3.132093180581319E-5	IMPLEMENTATION
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.999984454377729	WITHOUT_CLASSIFICATION	1.5545622270959107E-5	IMPLEMENTATION
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999867632151053	WITHOUT_CLASSIFICATION	1.3236784894791617E-5	IMPLEMENTATION
// Create a new closure context	WITHOUT_CLASSIFICATION	0.999980813763183	WITHOUT_CLASSIFICATION	1.9186236816967565E-5	IMPLEMENTATION
// Build args	WITHOUT_CLASSIFICATION	0.9997878328578234	WITHOUT_CLASSIFICATION	2.1216714217657951E-4	IMPLEMENTATION
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.999984454377729	WITHOUT_CLASSIFICATION	1.5545622270959107E-5	IMPLEMENTATION
// Get the container for this new module	WITHOUT_CLASSIFICATION	0.9999805623152341	WITHOUT_CLASSIFICATION	1.9437684765805288E-5	IMPLEMENTATION
// Build the new module	WITHOUT_CLASSIFICATION	0.9999062016556904	WITHOUT_CLASSIFICATION	9.379834430959173E-5	IMPLEMENTATION
// Build the module body	WITHOUT_CLASSIFICATION	0.9998937947771626	WITHOUT_CLASSIFICATION	1.0620522283741846E-4	IMPLEMENTATION
// First, build an assignment for a splat, if any, with the rest of the args!	WITHOUT_CLASSIFICATION	0.999874052292907	WITHOUT_CLASSIFICATION	1.2594770709298936E-4	IMPLEMENTATION
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999353699587452	WITHOUT_CLASSIFICATION	6.46300412548234E-5	IMPLEMENTATION
// If a closure, the next is simply a return from the closure! // If a regular loop, the next is simply a jump to the end of the iteration	WITHOUT_CLASSIFICATION	0.999988371349161	WITHOUT_CLASSIFICATION	1.1628650839036337E-5	IMPLEMENTATION
// get attr	WITHOUT_CLASSIFICATION	0.9998851834848184	WITHOUT_CLASSIFICATION	1.148165151816179E-4	IMPLEMENTATION
// call operator	WITHOUT_CLASSIFICATION	0.9997884366031027	WITHOUT_CLASSIFICATION	2.1156339689735475E-4	IMPLEMENTATION
// set attr	WITHOUT_CLASSIFICATION	0.999874646527253	WITHOUT_CLASSIFICATION	1.253534727470654E-4	IMPLEMENTATION
// Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, false, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9999235581590609	WITHOUT_CLASSIFICATION	7.644184093908723E-5	IMPLEMENTATION
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9998923900063365	WITHOUT_CLASSIFICATION	1.0760999366348642E-4	IMPLEMENTATION
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9998923900063365	WITHOUT_CLASSIFICATION	1.0760999366348642E-4	IMPLEMENTATION
// if v1 is defined and true, we are done! 	WITHOUT_CLASSIFICATION	0.9999298715806949	WITHOUT_CLASSIFICATION	7.012841930512686E-5	IMPLEMENTATION
// build first node only and return true	WITHOUT_CLASSIFICATION	0.999953731320303	WITHOUT_CLASSIFICATION	4.626867969706261E-5	IMPLEMENTATION
// build first node as non-expr and build second node	WITHOUT_CLASSIFICATION	0.9999246295660396	WITHOUT_CLASSIFICATION	7.537043396051686E-5	IMPLEMENTATION
// Top-level script!	WITHOUT_CLASSIFICATION	0.9997816409586961	WITHOUT_CLASSIFICATION	2.1835904130375778E-4	IMPLEMENTATION
// we won't enter the loop -- just build the condition node	WITHOUT_CLASSIFICATION	0.9999481243279577	WITHOUT_CLASSIFICATION	5.1875672042407096E-5	IMPLEMENTATION
/* ----------- Private Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999686484779573	WITHOUT_CLASSIFICATION	3.13515220427198E-5	IMPLEMENTATION
// What handles warnings	WITHOUT_CLASSIFICATION	0.9998314883157535	WITHOUT_CLASSIFICATION	1.6851168424645798E-4	IMPLEMENTATION
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.999993790956992	WITHOUT_CLASSIFICATION	6.209043007907544E-6	IMPLEMENTATION
// For closures, a redo is a jump to the beginning of the closure // For non-closures, a redo is a jump to the beginning of the loop	WITHOUT_CLASSIFICATION	0.9999617694811844	WITHOUT_CLASSIFICATION	3.823051881558673E-5	IMPLEMENTATION
// The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999762131151584	WITHOUT_CLASSIFICATION	2.3786884841601383E-5	IMPLEMENTATION
// Dummy top-level method for the class	WITHOUT_CLASSIFICATION	0.9999222569013622	WITHOUT_CLASSIFICATION	7.774309863793813E-5	IMPLEMENTATION
// Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999761822226877	WITHOUT_CLASSIFICATION	2.381777731227987E-5	IMPLEMENTATION
// ------ Define the operations below ----	WITHOUT_CLASSIFICATION	0.9999622220516395	WITHOUT_CLASSIFICATION	3.777794836038861E-5	IMPLEMENTATION
// value copy and type conversion operations	WITHOUT_CLASSIFICATION	0.9999502792668933	WITHOUT_CLASSIFICATION	4.9720733106771807E-5	IMPLEMENTATION
// alu operations	WITHOUT_CLASSIFICATION	0.9998377745206514	WITHOUT_CLASSIFICATION	1.6222547934865175E-4	IMPLEMENTATION
// method handle, arg receive, return value, and  call instructions	WITHOUT_CLASSIFICATION	0.9998630047248878	WITHOUT_CLASSIFICATION	1.3699527511226364E-4	IMPLEMENTATION
// closure instructions	WITHOUT_CLASSIFICATION	0.9998653419065542	WITHOUT_CLASSIFICATION	1.3465809344574792E-4	IMPLEMENTATION
// eval instructions	WITHOUT_CLASSIFICATION	0.9997968408334149	WITHOUT_CLASSIFICATION	2.0315916658517793E-4	IMPLEMENTATION
// def instructions	WITHOUT_CLASSIFICATION	0.9998176076481466	WITHOUT_CLASSIFICATION	1.823923518533111E-4	IMPLEMENTATION
// exception instructions	WITHOUT_CLASSIFICATION	0.9998878636473084	WITHOUT_CLASSIFICATION	1.121363526916021E-4	IMPLEMENTATION
// Loads	WITHOUT_CLASSIFICATION	0.9963128447777536	WITHOUT_CLASSIFICATION	0.003687155222246372	IMPLEMENTATION
// Stores	WITHOUT_CLASSIFICATION	0.9961429180706045	WITHOUT_CLASSIFICATION	0.0038570819293955033	IMPLEMENTATION
// jump and branch operations	WITHOUT_CLASSIFICATION	0.9998728897741607	WITHOUT_CLASSIFICATION	1.271102258393975E-4	IMPLEMENTATION
// others	WITHOUT_CLASSIFICATION	0.9958922570603498	WITHOUT_CLASSIFICATION	0.004107742939650192	IMPLEMENTATION
// a case/when branch	WITHOUT_CLASSIFICATION	0.999815705430624	WITHOUT_CLASSIFICATION	1.842945693758843E-4	IMPLEMENTATION
// optimization guards	WITHOUT_CLASSIFICATION	0.9998437159994488	WITHOUT_CLASSIFICATION	1.562840005511293E-4	IMPLEMENTATION
// By default, call instructions cannot be deleted even if their results aren't used by anyone // unless we know more about what the call is, what it does, etc. // Similarly for evals, stores, returns.	WITHOUT_CLASSIFICATION	0.9999832812967501	WITHOUT_CLASSIFICATION	1.6718703249913305E-5	IMPLEMENTATION
// Returns the containing parent scope -- can be a dynamic value (hence Operand)!	WITHOUT_CLASSIFICATION	0.999946116488858	WITHOUT_CLASSIFICATION	5.388351114194912E-5	IMPLEMENTATION
// scripts	WITHOUT_CLASSIFICATION	0.996357278085729	WITHOUT_CLASSIFICATION	0.0036427219142709747	IMPLEMENTATION
// scripts and modules	WITHOUT_CLASSIFICATION	0.9998478955428939	WITHOUT_CLASSIFICATION	1.5210445710605452E-4	IMPLEMENTATION
// scripts, classes, and modules	WITHOUT_CLASSIFICATION	0.9998959980800863	WITHOUT_CLASSIFICATION	1.0400191991368601E-4	IMPLEMENTATION
// methods and closures	WITHOUT_CLASSIFICATION	0.9998775999267389	WITHOUT_CLASSIFICATION	1.2240007326113698E-4	IMPLEMENTATION
// create a new variable using the prefix	WITHOUT_CLASSIFICATION	0.9999928559458097	WITHOUT_CLASSIFICATION	7.144054190286117E-6	IMPLEMENTATION
// create a new temporary variable	WITHOUT_CLASSIFICATION	0.999988936748323	WITHOUT_CLASSIFICATION	1.1063251677036625E-5	IMPLEMENTATION
// Get a new label using a generic prefix	WITHOUT_CLASSIFICATION	0.999923922146846	WITHOUT_CLASSIFICATION	7.607785315404579E-5	IMPLEMENTATION
// Build the CFG for this scope -- supported only by methods & closures	WITHOUT_CLASSIFICATION	0.9999539858764868	WITHOUT_CLASSIFICATION	4.601412351316608E-5	IMPLEMENTATION
// Get the control flow graph for this scope -- only valid for methods & closures	WITHOUT_CLASSIFICATION	0.9999838259733447	WITHOUT_CLASSIFICATION	1.6174026655237494E-5	IMPLEMENTATION
// While processing loops, this returns the loop that we are processing.	WITHOUT_CLASSIFICATION	0.999951857885355	WITHOUT_CLASSIFICATION	4.8142114644873944E-5	IMPLEMENTATION
// Record the loop we are beginning to process	WITHOUT_CLASSIFICATION	0.9999261250416643	WITHOUT_CLASSIFICATION	7.387495833566976E-5	IMPLEMENTATION
// Indicate that we are done processing the loop	WITHOUT_CLASSIFICATION	0.9999334937895243	WITHOUT_CLASSIFICATION	6.650621047561592E-5	IMPLEMENTATION
// Run the passed in compiler pass on this scope!	WITHOUT_CLASSIFICATION	0.9999213250333517	WITHOUT_CLASSIFICATION	7.867496664822269E-5	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9999349940128681	WITHOUT_CLASSIFICATION	6.500598713189342E-5	IMPLEMENTATION
// Readline	WITHOUT_CLASSIFICATION	0.9997600202756657	WITHOUT_CLASSIFICATION	2.3997972433434614E-4	IMPLEMENTATION
// If the cfg of the method is around, print the CFG!	WITHOUT_CLASSIFICATION	0.9999513152054414	WITHOUT_CLASSIFICATION	4.868479455861924E-5	IMPLEMENTATION
// Optimize some core class method calls for constant values	WITHOUT_CLASSIFICATION	0.9999300434251336	WITHOUT_CLASSIFICATION	6.995657486640823E-5	IMPLEMENTATION
// If 'r' is not a constant, it could actually be a compound value! // Look in our value map to see if we have a simplified value for the receiver.	WITHOUT_CLASSIFICATION	0.9999864049216771	WITHOUT_CLASSIFICATION	1.3595078322997506E-5	IMPLEMENTATION
// Check if we can optimize this call based on the receiving method and receiver type // Use the simplified receiver!	WITHOUT_CLASSIFICATION	0.9999443810156805	WITHOUT_CLASSIFICATION	5.561898431956597E-5	IMPLEMENTATION
// If we got a simplified value, mark the call dead and insert a copy in its place!	WITHOUT_CLASSIFICATION	0.9999371792634171	WITHOUT_CLASSIFICATION	6.282073658298358E-5	IMPLEMENTATION
// If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!	WITHOUT_CLASSIFICATION	0.9999804050160385	WITHOUT_CLASSIFICATION	1.9594983961491352E-5	IMPLEMENTATION
/* ----------- Public abstract methods ---------- */	WITHOUT_CLASSIFICATION	0.9999611415492325	WITHOUT_CLASSIFICATION	3.885845076737903E-5	IMPLEMENTATION
/* ----------- Public methods with a default implementation ---------- */	WITHOUT_CLASSIFICATION	0.9997593424253778	WITHOUT_CLASSIFICATION	2.406575746221923E-4	IMPLEMENTATION
// Compute meet over all "sources" and compute "destination" basic blocks that should then be processed.  // sources & targets depends on direction of the data flow problem	WITHOUT_CLASSIFICATION	0.9999766901202026	WITHOUT_CLASSIFICATION	2.3309879797448636E-5	IMPLEMENTATION
// If the solution has changed, add "dsts" to the work list. // No duplicates please which is why we have bbset.	WITHOUT_CLASSIFICATION	0.9999686349329585	WITHOUT_CLASSIFICATION	3.136506704148809E-5	IMPLEMENTATION
/* --------- Protected fields/methods below --------- */	WITHOUT_CLASSIFICATION	0.9999321860397826	WITHOUT_CLASSIFICATION	6.78139602173482E-5	IMPLEMENTATION
// Dataflow problem with which this node is associated // CFG node for which this node contains info.	WITHOUT_CLASSIFICATION	0.9999796958991688	WITHOUT_CLASSIFICATION	2.030410083129432E-5	IMPLEMENTATION
/* -------------- Public fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999663463982487	WITHOUT_CLASSIFICATION	3.365360175130271E-5	IMPLEMENTATION
// ------- Abstract methods without a default implementation -------	WITHOUT_CLASSIFICATION	0.9997675155055289	WITHOUT_CLASSIFICATION	2.3248449447103373E-4	IMPLEMENTATION
// ------- Default implementation methods below -------	WITHOUT_CLASSIFICATION	0.999513453013356	WITHOUT_CLASSIFICATION	4.865469866440624E-4	IMPLEMENTATION
/* Compute Meet Over All Paths solution for this dataflow problem on the input CFG.     * This implements a standard worklist algorithm. */	WITHOUT_CLASSIFICATION	0.997258004311067	WITHOUT_CLASSIFICATION	0.0027419956889329924	IMPLEMENTATION
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9998197744736445	WITHOUT_CLASSIFICATION	1.8022552635545253E-4	IMPLEMENTATION
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9998197744736445	WITHOUT_CLASSIFICATION	1.8022552635545253E-4	IMPLEMENTATION
/* -------------- Packaged/protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999706601870296	WITHOUT_CLASSIFICATION	2.9339812970317606E-5	IMPLEMENTATION
// We want unique ids for dataflow variables	WITHOUT_CLASSIFICATION	0.9998439117541903	WITHOUT_CLASSIFICATION	1.5608824580980472E-4	IMPLEMENTATION
/* -------------- Protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999678384027412	WITHOUT_CLASSIFICATION	3.2161597258862355E-5	IMPLEMENTATION
/* -------------- Private fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999715879560543	WITHOUT_CLASSIFICATION	2.8412043945574053E-5	IMPLEMENTATION
// Initialize all flow graph nodes 	WITHOUT_CLASSIFICATION	0.9999403270118787	WITHOUT_CLASSIFICATION	5.967298812118145E-5	IMPLEMENTATION
/* Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses */	WITHOUT_CLASSIFICATION	0.9998896783297417	WITHOUT_CLASSIFICATION	1.103216702581803E-4	IMPLEMENTATION
/* ******************** PUBLIC INTERFACE ******************* */	WITHOUT_CLASSIFICATION	0.9998814386532016	WITHOUT_CLASSIFICATION	1.1856134679840143E-4	IMPLEMENTATION
// Unique ID assigned to this variable	WITHOUT_CLASSIFICATION	0.9998420371769875	WITHOUT_CLASSIFICATION	1.5796282301255615E-4	IMPLEMENTATION
// start out with a default RubyObject allocator	WITHOUT_CLASSIFICATION	0.9999694589735569	WITHOUT_CLASSIFICATION	3.0541026443029886E-5	IMPLEMENTATION
// switch to an allocator based on a default constructor	WITHOUT_CLASSIFICATION	0.9998866060467507	WITHOUT_CLASSIFICATION	1.1339395324924286E-4	IMPLEMENTATION
/* ----------- Public Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999632337181033	WITHOUT_CLASSIFICATION	3.676628189682518E-5	IMPLEMENTATION
// class or module	WITHOUT_CLASSIFICATION	0.99983612442916	WITHOUT_CLASSIFICATION	1.6387557084000763E-4	IMPLEMENTATION
// OUT = UNION(IN(succs))	WITHOUT_CLASSIFICATION	0.9998040793538033	WITHOUT_CLASSIFICATION	1.959206461967906E-4	IMPLEMENTATION
// Traverse the instructions in this basic block in reverse order!	WITHOUT_CLASSIFICATION	0.9999197520700781	WITHOUT_CLASSIFICATION	8.024792992181023E-5	IMPLEMENTATION
// v is defined => It is no longer live before 'i'	WITHOUT_CLASSIFICATION	0.9999187469979773	WITHOUT_CLASSIFICATION	8.125300202263591E-5	IMPLEMENTATION
// IN is the same!	WITHOUT_CLASSIFICATION	0.9998508580380789	WITHOUT_CLASSIFICATION	1.491419619211155E-4	IMPLEMENTATION
// IN changed!	WITHOUT_CLASSIFICATION	0.9998422476113448	WITHOUT_CLASSIFICATION	1.577523886551521E-4	IMPLEMENTATION
/* ---------- Protected / package fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999459465655458	WITHOUT_CLASSIFICATION	5.4053434454284796E-5	IMPLEMENTATION
// If 'v' is not live at the instruction site, and it has no side effects, mark it dead!	WITHOUT_CLASSIFICATION	0.9999389883417495	WITHOUT_CLASSIFICATION	6.10116582505547E-5	IMPLEMENTATION
// Do not mark this instruction's operands live if the instruction itself is dead!	WITHOUT_CLASSIFICATION	0.9999434970103609	WITHOUT_CLASSIFICATION	5.650298963919382E-5	IMPLEMENTATION
/* ---------- Private fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999508396279876	WITHOUT_CLASSIFICATION	4.9160372012333445E-5	IMPLEMENTATION
// Variables live at entry of this node // Variables live at exit of node // Temporary set of live variables // Size of the "_in" and "_out" bit sets 	WITHOUT_CLASSIFICATION	0.9999386847175116	WITHOUT_CLASSIFICATION	6.131528248844016E-5	IMPLEMENTATION
// Used during optimization passes to propagate type and other information	WITHOUT_CLASSIFICATION	0.999933556833561	WITHOUT_CLASSIFICATION	6.644316643899308E-5	IMPLEMENTATION
// Does this instruction have side effects as a result of its operation // This information is used in optimization phases to impact dead code elimination // and other optimization passes	WITHOUT_CLASSIFICATION	0.9999834170041046	WITHOUT_CLASSIFICATION	1.658299589545856E-5	IMPLEMENTATION
/* --------- "Abstract"/"please-override" methods --------- */	WITHOUT_CLASSIFICATION	0.9999335187383585	WITHOUT_CLASSIFICATION	6.648126164148809E-5	IMPLEMENTATION
/* Array of all operands for this instruction */	WITHOUT_CLASSIFICATION	0.9999163013620941	WITHOUT_CLASSIFICATION	8.36986379059191E-5	IMPLEMENTATION
/* List of all variables used by all operands of this instruction */	WITHOUT_CLASSIFICATION	0.9999164721986655	WITHOUT_CLASSIFICATION	8.352780133440934E-5	IMPLEMENTATION
/*      * This method takes as input a map of operands to their values, and outputs     *     * If the value map provides a value for any of the instruction's operands     * this method is expected to replace the original operands with the simplified values.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify     */	WITHOUT_CLASSIFICATION	0.9999579451388468	WITHOUT_CLASSIFICATION	4.205486115315366E-5	IMPLEMENTATION
// By default, no simplifications!	WITHOUT_CLASSIFICATION	0.9999208873784866	WITHOUT_CLASSIFICATION	7.911262151336552E-5	IMPLEMENTATION
// Can this call lead to ruby code getting modified?   // If we don't know what method we are calling, we assume it can (pessimistic, but safe!) // If we do know the target method, we ask the method itself whether it modifies ruby code	WITHOUT_CLASSIFICATION	0.9997991540613588	WITHOUT_CLASSIFICATION	2.008459386413409E-4	IMPLEMENTATION
// By default, return instructions cannot be deleted	WITHOUT_CLASSIFICATION	0.9999774202493388	WITHOUT_CLASSIFICATION	2.257975066113263E-5	IMPLEMENTATION
// If true, returns the rest of the array starting at the index	WITHOUT_CLASSIFICATION	0.9999565208418781	WITHOUT_CLASSIFICATION	4.3479158121828715E-5	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999736399823347	WITHOUT_CLASSIFICATION	2.6360017665350074E-5	IMPLEMENTATION
// Map of label & basic blocks with that label	WITHOUT_CLASSIFICATION	0.9998516985633219	WITHOUT_CLASSIFICATION	1.4830143667805812E-4	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999736399823347	WITHOUT_CLASSIFICATION	2.6360017665350074E-5	IMPLEMENTATION
// You can only value-replace atomic values	WITHOUT_CLASSIFICATION	0.9999074548709631	WITHOUT_CLASSIFICATION	9.25451290368934E-5	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9998538437185229	WITHOUT_CLASSIFICATION	1.4615628147698E-4	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9998538437185229	WITHOUT_CLASSIFICATION	1.4615628147698E-4	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9998538437185229	WITHOUT_CLASSIFICATION	1.4615628147698E-4	IMPLEMENTATION
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999585850465277	WITHOUT_CLASSIFICATION	4.141495347226311E-5	IMPLEMENTATION
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999585850465277	WITHOUT_CLASSIFICATION	4.141495347226311E-5	IMPLEMENTATION
// The operand that this attribute targets //    DEFERRED //    AttributeValue _val;       // Attribute value	WITHOUT_CLASSIFICATION	0.9999620723657441	WITHOUT_CLASSIFICATION	3.792763425584937E-5	IMPLEMENTATION
// Arrays, Ranges, etc. are compound values // Variables, fixnums, floats, etc. are "atomic" values	WITHOUT_CLASSIFICATION	0.9999076131025948	WITHOUT_CLASSIFICATION	9.238689740516112E-5	IMPLEMENTATION
// Get the target class of this operand, if we know it!	WITHOUT_CLASSIFICATION	0.999984906307185	WITHOUT_CLASSIFICATION	1.5093692815079889E-5	IMPLEMENTATION
// The following constants capture pre-known static call sites -- used to implement ruby internals	WITHOUT_CLASSIFICATION	0.9962155322558801	WITHOUT_CLASSIFICATION	0.003784467744119895	IMPLEMENTATION
/* Nothing to do by default */	WITHOUT_CLASSIFICATION	0.9999695995873266	WITHOUT_CLASSIFICATION	3.0400412673345698E-5	IMPLEMENTATION
// Map of label & basic blocks which are waiting for a bb with that label	WITHOUT_CLASSIFICATION	0.9998756050270451	WITHOUT_CLASSIFICATION	1.2439497295489726E-4	IMPLEMENTATION
// Init before building basic blocks below!	WITHOUT_CLASSIFICATION	0.9998647276295428	WITHOUT_CLASSIFICATION	1.352723704572046E-4	IMPLEMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9995761770438544	WITHOUT_CLASSIFICATION	4.2382295614561344E-4	IMPLEMENTATION
// Scope (method/closure) to which this cfg belongs // Entry BB -- dummy // Exit BB -- dummy // The actual graph // Next available basic block id	WITHOUT_CLASSIFICATION	0.9999155772080199	WITHOUT_CLASSIFICATION	8.442279198000711E-5	IMPLEMENTATION
// Jump instruction bbs dont add an edge to the succeeding bb by default	WITHOUT_CLASSIFICATION	0.999972865030609	WITHOUT_CLASSIFICATION	2.713496939102119E-5	IMPLEMENTATION
// Add forward ref. edges	WITHOUT_CLASSIFICATION	0.9999015069267535	WITHOUT_CLASSIFICATION	9.849307324652906E-5	IMPLEMENTATION
// currBB cannot be null!	WITHOUT_CLASSIFICATION	0.99986237063622	WITHOUT_CLASSIFICATION	1.3762936378004199E-4	IMPLEMENTATION
// Add a forward reference from tgt -> currBB	WITHOUT_CLASSIFICATION	0.9999509663303376	WITHOUT_CLASSIFICATION	4.903366966236727E-5	IMPLEMENTATION
// root-level logic	WITHOUT_CLASSIFICATION	0.9998398416739441	WITHOUT_CLASSIFICATION	1.6015832605596796E-4	IMPLEMENTATION
// root-level methods	WITHOUT_CLASSIFICATION	0.9998958227082113	WITHOUT_CLASSIFICATION	1.0417729178870161E-4	IMPLEMENTATION
// root-level classes	WITHOUT_CLASSIFICATION	0.9999070947679394	WITHOUT_CLASSIFICATION	9.290523206054406E-5	IMPLEMENTATION
//        case 4: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); //            break; //        case 5: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); //            break;	WITHOUT_CLASSIFICATION	0.9999839220611041	WITHOUT_CLASSIFICATION	1.6077938895821108E-5	IMPLEMENTATION
// load receiver	WITHOUT_CLASSIFICATION	0.9998346253934095	WITHOUT_CLASSIFICATION	1.65374606590409E-4	IMPLEMENTATION
// load receiver	WITHOUT_CLASSIFICATION	0.9998346253934095	WITHOUT_CLASSIFICATION	1.65374606590409E-4	IMPLEMENTATION
// receiver	WITHOUT_CLASSIFICATION	0.9997712832462127	WITHOUT_CLASSIFICATION	2.2871675378746987E-4	IMPLEMENTATION
// load arguments	WITHOUT_CLASSIFICATION	0.9998834191990477	WITHOUT_CLASSIFICATION	1.1658080095244689E-4	IMPLEMENTATION
// load arguments	WITHOUT_CLASSIFICATION	0.9998834191990477	WITHOUT_CLASSIFICATION	1.1658080095244689E-4	IMPLEMENTATION
//        case 4: //        case 5:	WITHOUT_CLASSIFICATION	0.9999524430765407	WITHOUT_CLASSIFICATION	4.755692345924068E-5	IMPLEMENTATION
// Object[] args	WITHOUT_CLASSIFICATION	0.9998204065877815	WITHOUT_CLASSIFICATION	1.7959341221856565E-4	IMPLEMENTATION
// load handle	WITHOUT_CLASSIFICATION	0.9998386366875017	WITHOUT_CLASSIFICATION	1.6136331249823191E-4	IMPLEMENTATION
// args array	WITHOUT_CLASSIFICATION	0.9997630801736467	WITHOUT_CLASSIFICATION	2.3691982635333053E-4	IMPLEMENTATION
// i'th argument	WITHOUT_CLASSIFICATION	0.9998128321910875	WITHOUT_CLASSIFICATION	1.8716780891252485E-4	IMPLEMENTATION
// invoke specific arity version	WITHOUT_CLASSIFICATION	0.9998621523993674	WITHOUT_CLASSIFICATION	1.3784760063272666E-4	IMPLEMENTATION
// Object arg0	WITHOUT_CLASSIFICATION	0.9998167093441155	WITHOUT_CLASSIFICATION	1.8329065588451983E-4	IMPLEMENTATION
// useful for code completion inside the IRB	WITHOUT_CLASSIFICATION	0.9998941472163468	WITHOUT_CLASSIFICATION	1.058527836531743E-4	IMPLEMENTATION
// No editing before startPos	WITHOUT_CLASSIFICATION	0.9998810427873738	WITHOUT_CLASSIFICATION	1.1895721262621426E-4	IMPLEMENTATION
// no silly ticks!	WITHOUT_CLASSIFICATION	0.9998086846959048	WITHOUT_CLASSIFICATION	1.913153040951678E-4	IMPLEMENTATION
// no candidates? Fail.	WITHOUT_CLASSIFICATION	0.999846132001961	WITHOUT_CLASSIFICATION	1.5386799803896045E-4	IMPLEMENTATION
// at end	WITHOUT_CLASSIFICATION	0.9960236537947217	WITHOUT_CLASSIFICATION	0.003976346205278271	IMPLEMENTATION
// undo check	WITHOUT_CLASSIFICATION	0.9997542015937302	WITHOUT_CLASSIFICATION	2.4579840626982944E-4	IMPLEMENTATION
// Explicit reference to these vars as symbols...	WITHOUT_CLASSIFICATION	0.999940012635216	WITHOUT_CLASSIFICATION	5.9987364783973705E-5	IMPLEMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9995761770438544	WITHOUT_CLASSIFICATION	4.2382295614561344E-4	IMPLEMENTATION
//\t\n\"\\'`@$><=;|&{(	WITHOUT_CLASSIFICATION	0.9998040793538033	WITHOUT_CLASSIFICATION	1.959206461967906E-4	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.9998889501707533	WITHOUT_CLASSIFICATION	1.1104982924670829E-4	IMPLEMENTATION
// no check for '*'	WITHOUT_CLASSIFICATION	0.9998716137279366	WITHOUT_CLASSIFICATION	1.283862720632672E-4	IMPLEMENTATION
// no check for '*'	WITHOUT_CLASSIFICATION	0.9998716137279366	WITHOUT_CLASSIFICATION	1.283862720632672E-4	IMPLEMENTATION
// Binding provided for scope, use it	WITHOUT_CLASSIFICATION	0.9998799332337803	WITHOUT_CLASSIFICATION	1.2006676621963711E-4	IMPLEMENTATION
// this is ensured by the callers	WITHOUT_CLASSIFICATION	0.9999607838789926	WITHOUT_CLASSIFICATION	3.9216121007431606E-5	IMPLEMENTATION
// no binding, just eval in "current" frame (caller's frame)	WITHOUT_CLASSIFICATION	0.9998932879517293	WITHOUT_CLASSIFICATION	1.0671204827066079E-4	IMPLEMENTATION
// restore position	WITHOUT_CLASSIFICATION	0.999883154779867	WITHOUT_CLASSIFICATION	1.168452201329625E-4	IMPLEMENTATION
/* Something like cvar_cbase() from eval.c, factored out for the benefit     * of all the classvar-related node evaluations */	WITHOUT_CLASSIFICATION	0.9999235398883072	WITHOUT_CLASSIFICATION	7.646011169280882E-5	IMPLEMENTATION
// Used by the compiler to simplify arg processing	WITHOUT_CLASSIFICATION	0.9999500153840102	WITHOUT_CLASSIFICATION	4.9984615989893514E-5	IMPLEMENTATION
// JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace	WITHOUT_CLASSIFICATION	0.999914249336777	WITHOUT_CLASSIFICATION	8.575066322299344E-5	IMPLEMENTATION
// MRI does similar thing on MacOS X with 'EditLine wrapper'.	WITHOUT_CLASSIFICATION	0.9998595952484631	WITHOUT_CLASSIFICATION	1.4040475153685334E-4	IMPLEMENTATION
// We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)	WITHOUT_CLASSIFICATION	0.9999796539482706	WITHOUT_CLASSIFICATION	2.0346051729391104E-5	IMPLEMENTATION
// JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)	WITHOUT_CLASSIFICATION	0.9999285412468439	WITHOUT_CLASSIFICATION	7.14587531560779E-5	IMPLEMENTATION
// not overridden, let's go	WITHOUT_CLASSIFICATION	0.9994507461378868	WITHOUT_CLASSIFICATION	5.49253862113291E-4	IMPLEMENTATION
/* Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8() */	WITHOUT_CLASSIFICATION	0.9998681647940022	WITHOUT_CLASSIFICATION	1.318352059978102E-4	IMPLEMENTATION
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9996657795476328	WITHOUT_CLASSIFICATION	3.3422045236714015E-4	IMPLEMENTATION
// Complete using a Proc object	WITHOUT_CLASSIFICATION	0.999891849675547	WITHOUT_CLASSIFICATION	1.0815032445306866E-4	IMPLEMENTATION
// clear basename so it's anonymous when raising	WITHOUT_CLASSIFICATION	0.9999231471277481	WITHOUT_CLASSIFICATION	7.685287225194103E-5	IMPLEMENTATION
// These are not really used by timeout, but exposed for compatibility	WITHOUT_CLASSIFICATION	0.9999711713799591	WITHOUT_CLASSIFICATION	2.882862004093183E-5	IMPLEMENTATION
// Timeout module methods	WITHOUT_CLASSIFICATION	0.9998532703568364	WITHOUT_CLASSIFICATION	1.4672964316357083E-4	IMPLEMENTATION
// Toplevel defines	WITHOUT_CLASSIFICATION	0.9997869683126133	WITHOUT_CLASSIFICATION	2.1303168738677852E-4	IMPLEMENTATION
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9998712021091681	WITHOUT_CLASSIFICATION	1.2879789083185289E-4	IMPLEMENTATION
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9998587640007799	WITHOUT_CLASSIFICATION	1.4123599922002446E-4	IMPLEMENTATION
// if it's the exception we're expecting	WITHOUT_CLASSIFICATION	0.999817872906699	WITHOUT_CLASSIFICATION	1.8212709330097036E-4	IMPLEMENTATION
// and we were given a specific exception	WITHOUT_CLASSIFICATION	0.9998552658617604	WITHOUT_CLASSIFICATION	1.4473413823955206E-4	IMPLEMENTATION
// otherwise, rethrow	WITHOUT_CLASSIFICATION	0.9997367496102196	WITHOUT_CLASSIFICATION	2.632503897804048E-4	IMPLEMENTATION
// // Remove the Executor task now, to avoid cancelled tasks accumulating // until an Executor thread can schedule and remove them //	WITHOUT_CLASSIFICATION	0.9999750421359961	WITHOUT_CLASSIFICATION	2.495786400391753E-5	IMPLEMENTATION
// // If the task was scheduled, wait for it to finish before polling // for the exception it would have thrown. //	WITHOUT_CLASSIFICATION	0.9998971591483653	WITHOUT_CLASSIFICATION	1.0284085163466871E-4	IMPLEMENTATION
// NetProtocolBufferedIO	WITHOUT_CLASSIFICATION	0.9998087364580078	WITHOUT_CLASSIFICATION	1.912635419922222E-4	IMPLEMENTATION
/* When a length is given, read_string acts like get_bytes */	WITHOUT_CLASSIFICATION	0.9998861028370035	WITHOUT_CLASSIFICATION	1.13897162996512E-4	IMPLEMENTATION
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9998747843697199	WITHOUT_CLASSIFICATION	1.252156302801907E-4	IMPLEMENTATION
// ARRAY and STRUCT are only used internally	WITHOUT_CLASSIFICATION	0.9999107454277545	WITHOUT_CLASSIFICATION	8.925457224541422E-5	IMPLEMENTATION
// If no release method is defined, then memory leaks will result.	WITHOUT_CLASSIFICATION	0.9999025328099755	WITHOUT_CLASSIFICATION	9.74671900244507E-5	IMPLEMENTATION
/*     * This variant of newStruct is called from StructLayoutBuilder     */	WITHOUT_CLASSIFICATION	0.999956119538728	WITHOUT_CLASSIFICATION	4.388046127194591E-5	IMPLEMENTATION
// This also handles unsigned int -> negative signed int conversion	WITHOUT_CLASSIFICATION	0.9999359528514844	WITHOUT_CLASSIFICATION	6.40471485155887E-5	IMPLEMENTATION
// Windows is LLP64	WITHOUT_CLASSIFICATION	0.9997694190960745	WITHOUT_CLASSIFICATION	2.3058090392553415E-4	IMPLEMENTATION
// Older JDK on linux map 'c' to 'libc.so' which doesn't work	WITHOUT_CLASSIFICATION	0.9999028322936921	WITHOUT_CLASSIFICATION	9.716770630783888E-5	IMPLEMENTATION
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.999866724329737	WITHOUT_CLASSIFICATION	1.3327567026307166E-4	IMPLEMENTATION
// $blah	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9998747843697199	WITHOUT_CLASSIFICATION	1.252156302801907E-4	IMPLEMENTATION
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.999932653286389	WITHOUT_CLASSIFICATION	6.734671361105621E-5	IMPLEMENTATION
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.999866724329737	WITHOUT_CLASSIFICATION	1.3327567026307166E-4	IMPLEMENTATION
// // Keep a reference to the temporary memory in the cache so it does // not get freed by the GC until the struct is freed //	WITHOUT_CLASSIFICATION	0.9999844056803108	WITHOUT_CLASSIFICATION	1.5594319689219917E-5	IMPLEMENTATION
// Add Pointer::NULL as a constant	WITHOUT_CLASSIFICATION	0.9999297246634133	WITHOUT_CLASSIFICATION	7.027533658662818E-5	IMPLEMENTATION
// Create the ordered list of field names from the map	WITHOUT_CLASSIFICATION	0.9999837299749795	WITHOUT_CLASSIFICATION	1.627002502047833E-5	IMPLEMENTATION
// Assemble a [ :name, offset ] array	WITHOUT_CLASSIFICATION	0.9998410168656595	WITHOUT_CLASSIFICATION	1.589831343405678E-4	IMPLEMENTATION
//                case FLOAT:	WITHOUT_CLASSIFICATION	0.9999420646972611	WITHOUT_CLASSIFICATION	5.793530273902628E-5	IMPLEMENTATION
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999239952034521	WITHOUT_CLASSIFICATION	7.600479654786957E-5	IMPLEMENTATION
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999239952034521	WITHOUT_CLASSIFICATION	7.600479654786957E-5	IMPLEMENTATION
// No auto cleanup needed	WITHOUT_CLASSIFICATION	0.9977117599581358	WITHOUT_CLASSIFICATION	0.0022882400418642607	IMPLEMENTATION
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.999841776347612	WITHOUT_CLASSIFICATION	1.5822365238806111E-4	IMPLEMENTATION
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999796600792785	WITHOUT_CLASSIFICATION	2.0339920721537724E-5	IMPLEMENTATION
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999796600792785	WITHOUT_CLASSIFICATION	2.0339920721537724E-5	IMPLEMENTATION
/*         * If there is exactly _one_ callback argument to the function,         * then a block can be given and automatically subsituted for the callback         * parameter.         */	WITHOUT_CLASSIFICATION	0.9999990681285449	WITHOUT_CLASSIFICATION	9.318714552421743E-7	IMPLEMENTATION
/*------------------------------------------------------------------------*/	WITHOUT_CLASSIFICATION	0.9998942888781857	WITHOUT_CLASSIFICATION	1.0571112181435753E-4	IMPLEMENTATION
//AF_INET	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
//AF_INET	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
// RubyUNIXServer	WITHOUT_CLASSIFICATION	0.9997531383368942	WITHOUT_CLASSIFICATION	2.468616631058321E-4	IMPLEMENTATION
// line 321	WITHOUT_CLASSIFICATION	0.9997668231303292	WITHOUT_CLASSIFICATION	2.3317686967070443E-4	IMPLEMENTATION
// // Set up for potentially fast-int operations //	WITHOUT_CLASSIFICATION	0.9999396553495207	WITHOUT_CLASSIFICATION	6.0344650479348916E-5	IMPLEMENTATION
// // Hook up the MemoryPointer class if its not already there //	WITHOUT_CLASSIFICATION	0.9999704694900529	WITHOUT_CLASSIFICATION	2.9530509947110696E-5	IMPLEMENTATION
// This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and // (2) Socket.getChannel() seems to return null in some cases	WITHOUT_CLASSIFICATION	0.9999865017743093	WITHOUT_CLASSIFICATION	1.3498225690783968E-5	IMPLEMENTATION
// no UNIXSockets on Windows	WITHOUT_CLASSIFICATION	0.9998590319530669	WITHOUT_CLASSIFICATION	1.4096804693307548E-4	IMPLEMENTATION
// Sockaddr_un has different structure on different platforms. // See JRUBY-2213 for more details.	WITHOUT_CLASSIFICATION	0.9999036783794492	WITHOUT_CLASSIFICATION	9.632162055090174E-5	IMPLEMENTATION
// There is something valid in the sun_path component	WITHOUT_CLASSIFICATION	0.9999859895167426	WITHOUT_CLASSIFICATION	1.4010483257386807E-5	IMPLEMENTATION
// RubyIPSocket	WITHOUT_CLASSIFICATION	0.9997515399162304	WITHOUT_CLASSIFICATION	2.4846008376949665E-4	IMPLEMENTATION
// host is nil or the empty string, bind to INADDR_ANY	WITHOUT_CLASSIFICATION	0.9999597139036723	WITHOUT_CLASSIFICATION	4.028609632771738E-5	IMPLEMENTATION
// host and port given	WITHOUT_CLASSIFICATION	0.9998126916251205	WITHOUT_CLASSIFICATION	1.873083748794847E-4	IMPLEMENTATION
// RubyUDPSocket	WITHOUT_CLASSIFICATION	0.9997515399162304	WITHOUT_CLASSIFICATION	2.4846008376949665E-4	IMPLEMENTATION
// By default we always reverse lookup unless do_not_reverse_lookup set.	WITHOUT_CLASSIFICATION	0.9999432663757248	WITHOUT_CLASSIFICATION	5.673362427525355E-5	IMPLEMENTATION
// make sure descriptor is registered	WITHOUT_CLASSIFICATION	0.9999569941044759	WITHOUT_CLASSIFICATION	4.300589552413159E-5	IMPLEMENTATION
// continue with normal initialization	WITHOUT_CLASSIFICATION	0.9999767660333222	WITHOUT_CLASSIFICATION	2.323396667780903E-5	IMPLEMENTATION
// recv returns nil on EOF	WITHOUT_CLASSIFICATION	0.9998709382821797	WITHOUT_CLASSIFICATION	1.290617178203593E-4	IMPLEMENTATION
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9998595052997402	WITHOUT_CLASSIFICATION	1.4049470025974717E-4	IMPLEMENTATION
// RubyBasicSocket	WITHOUT_CLASSIFICATION	0.9997516926887765	WITHOUT_CLASSIFICATION	2.483073112234367E-4	IMPLEMENTATION
// we don't have to define any that we don't support; see socket.c	WITHOUT_CLASSIFICATION	0.9999557802440054	WITHOUT_CLASSIFICATION	4.421975599466797E-5	IMPLEMENTATION
// mandatory constants we haven't implemented	WITHOUT_CLASSIFICATION	0.9233460799548404	WITHOUT_CLASSIFICATION	0.07665392004515954	IMPLEMENTATION
// constants webrick crashes without	WITHOUT_CLASSIFICATION	0.9998959616045991	WITHOUT_CLASSIFICATION	1.0403839540086992E-4	IMPLEMENTATION
// More constants needed by specs	WITHOUT_CLASSIFICATION	0.9998474884944307	WITHOUT_CLASSIFICATION	1.5251150556934442E-4	IMPLEMENTATION
// normal file descriptor..try to work with it	WITHOUT_CLASSIFICATION	0.9999004973693705	WITHOUT_CLASSIFICATION	9.95026306295609E-5	IMPLEMENTATION
// AF_INET	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
// 255.255.255.255	WITHOUT_CLASSIFICATION	0.9997515399162304	WITHOUT_CLASSIFICATION	2.4846008376949665E-4	IMPLEMENTATION
// 0.0.0.0	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
//def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)	WITHOUT_CLASSIFICATION	0.9998365188049583	WITHOUT_CLASSIFICATION	1.634811950417639E-4	IMPLEMENTATION
// line 323	WITHOUT_CLASSIFICATION	0.9997668231303292	WITHOUT_CLASSIFICATION	2.3317686967070443E-4	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9998951050408738	WITHOUT_CLASSIFICATION	1.0489495912623864E-4	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9998951050408738	WITHOUT_CLASSIFICATION	1.0489495912623864E-4	IMPLEMENTATION
// ok, it's a socket...set values accordingly // just using AF_INET since we can't tell from SocketChannel...	WITHOUT_CLASSIFICATION	0.9999147174395441	WITHOUT_CLASSIFICATION	8.528256045585919E-5	IMPLEMENTATION
// datagram, set accordingly // again, AF_INET	WITHOUT_CLASSIFICATION	0.9998837547578538	WITHOUT_CLASSIFICATION	1.1624524214621914E-4	IMPLEMENTATION
//IRubyObject family = args[2];	WITHOUT_CLASSIFICATION	0.9998497589555339	WITHOUT_CLASSIFICATION	1.5024104446607445E-4	IMPLEMENTATION
// When Socket::AI_PASSIVE and host is nil, return 'any' address. 	WITHOUT_CLASSIFICATION	0.9999213514036525	WITHOUT_CLASSIFICATION	7.864859634752613E-5	IMPLEMENTATION
// The value of 1 is for Socket::AI_PASSIVE.	WITHOUT_CLASSIFICATION	0.9999278254450598	WITHOUT_CLASSIFICATION	7.217455494024755E-5	IMPLEMENTATION
// RubySocket	WITHOUT_CLASSIFICATION	0.9997515399162304	WITHOUT_CLASSIFICATION	2.4846008376949665E-4	IMPLEMENTATION
// numeric host, use it for port	WITHOUT_CLASSIFICATION	0.9998608077024645	WITHOUT_CLASSIFICATION	1.391922975354428E-4	IMPLEMENTATION
//            e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999591624432761	WITHOUT_CLASSIFICATION	4.083755672398184E-5	IMPLEMENTATION
// we were woken up without being selected...poll for thread events and go back to sleep	WITHOUT_CLASSIFICATION	0.9999727075108633	WITHOUT_CLASSIFICATION	2.7292489136720208E-5	IMPLEMENTATION
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.999965766774191	WITHOUT_CLASSIFICATION	3.42332258090392E-5	IMPLEMENTATION
// no connection immediately accepted, let them try again	WITHOUT_CLASSIFICATION	0.9998709973952526	WITHOUT_CLASSIFICATION	1.2900260474733594E-4	IMPLEMENTATION
// do nothing, just exit	WITHOUT_CLASSIFICATION	0.9999678633100819	WITHOUT_CLASSIFICATION	3.213668991812742E-5	IMPLEMENTATION
//nativeThread.setPriority(priority);	WITHOUT_CLASSIFICATION	0.9998225893248376	WITHOUT_CLASSIFICATION	1.7741067516249077E-4	IMPLEMENTATION
// set thread context JRuby classloader here, for Ruby-owned thread	WITHOUT_CLASSIFICATION	0.9999328710644926	WITHOUT_CLASSIFICATION	6.712893550734776E-5	IMPLEMENTATION
// uber-ThreadKill catcher, since it should always just mean "be dead"	WITHOUT_CLASSIFICATION	0.9996603432296408	WITHOUT_CLASSIFICATION	3.396567703592494E-4	IMPLEMENTATION
// Call the thread's code	WITHOUT_CLASSIFICATION	0.9998644002377469	WITHOUT_CLASSIFICATION	1.355997622530624E-4	IMPLEMENTATION
// Someone called exit!, so we need to kill the main thread	WITHOUT_CLASSIFICATION	0.9997691626056805	WITHOUT_CLASSIFICATION	2.308373943195234E-4	IMPLEMENTATION
// restore context classloader, in case we're using a thread pool	WITHOUT_CLASSIFICATION	0.9999584947854678	WITHOUT_CLASSIFICATION	4.150521453213858E-5	IMPLEMENTATION
// be dead	WITHOUT_CLASSIFICATION	0.9959875057114573	WITHOUT_CLASSIFICATION	0.004012494288542687	IMPLEMENTATION
// loop until a context is available, to clean up softrefs that might have been collected	WITHOUT_CLASSIFICATION	0.999883469376347	WITHOUT_CLASSIFICATION	1.1653062365297706E-4	IMPLEMENTATION
// all threads in ruby thread group plus main thread	WITHOUT_CLASSIFICATION	0.9998686659006761	WITHOUT_CLASSIFICATION	1.3133409932376602E-4	IMPLEMENTATION
// thread is not alive, skip it	WITHOUT_CLASSIFICATION	0.999909624735892	WITHOUT_CLASSIFICATION	9.037526410813917E-5	IMPLEMENTATION
// future is done or cancelled, skip it	WITHOUT_CLASSIFICATION	0.999895130042815	WITHOUT_CLASSIFICATION	1.0486995718490546E-4	IMPLEMENTATION
// first, check if the sender has unreceived mail	WITHOUT_CLASSIFICATION	0.9999475607931162	WITHOUT_CLASSIFICATION	5.243920688368082E-5	IMPLEMENTATION
// then deliver mail to the target	WITHOUT_CLASSIFICATION	0.9999439655172272	WITHOUT_CLASSIFICATION	5.6034482772774E-5	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9997975428480418	WITHOUT_CLASSIFICATION	2.024571519582498E-4	IMPLEMENTATION
// Define a second version that doesn't take a block, so we have unique code paths for both cases.	WITHOUT_CLASSIFICATION	0.9998842163537598	WITHOUT_CLASSIFICATION	1.1578364624021161E-4	IMPLEMENTATION
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9996693516040647	WITHOUT_CLASSIFICATION	3.306483959353003E-4	IMPLEMENTATION
// main body	WITHOUT_CLASSIFICATION	0.9997589215628286	WITHOUT_CLASSIFICATION	2.4107843717130598E-4	IMPLEMENTATION
// return jump handling	WITHOUT_CLASSIFICATION	0.9999383445115103	WITHOUT_CLASSIFICATION	6.165548848965841E-5	IMPLEMENTATION
// finally	WITHOUT_CLASSIFICATION	0.996457984856308	WITHOUT_CLASSIFICATION	0.003542015143692146	IMPLEMENTATION
// return result if we're still good	WITHOUT_CLASSIFICATION	0.9999713739094274	WITHOUT_CLASSIFICATION	2.862609057264378E-5	IMPLEMENTATION
// redo jump handling	WITHOUT_CLASSIFICATION	0.9997883793708533	WITHOUT_CLASSIFICATION	2.1162062914672252E-4	IMPLEMENTATION
// clear the redo	WITHOUT_CLASSIFICATION	0.9998964299909752	WITHOUT_CLASSIFICATION	1.035700090249438E-4	IMPLEMENTATION
// get runtime, create jump error, and throw it	WITHOUT_CLASSIFICATION	0.9999586037391427	WITHOUT_CLASSIFICATION	4.139626085727365E-5	IMPLEMENTATION
// throw redo error if we're still good	WITHOUT_CLASSIFICATION	0.9998805157775674	WITHOUT_CLASSIFICATION	1.1948422243264973E-4	IMPLEMENTATION
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.99980828269512	WITHOUT_CLASSIFICATION	1.9171730488002728E-4	IMPLEMENTATION
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9997509234961525	WITHOUT_CLASSIFICATION	2.49076503847539E-4	IMPLEMENTATION
// No required specified, check actual number of required args	WITHOUT_CLASSIFICATION	0.9999349299627149	WITHOUT_CLASSIFICATION	6.50700372849752E-5	IMPLEMENTATION
// actual required is less than 3, so we use specific arity	WITHOUT_CLASSIFICATION	0.9998872183849732	WITHOUT_CLASSIFICATION	1.1278161502688676E-4	IMPLEMENTATION
// actual required is greater than 3, raise error (we don't support actual required > 3)	WITHOUT_CLASSIFICATION	0.9998440743289256	WITHOUT_CLASSIFICATION	1.559256710743172E-4	IMPLEMENTATION
// simple path, no multimethod	WITHOUT_CLASSIFICATION	0.9998249586849262	WITHOUT_CLASSIFICATION	1.7504131507392178E-4	IMPLEMENTATION
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9997265377501134	WITHOUT_CLASSIFICATION	2.7346224988658384E-4	IMPLEMENTATION
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9997265377501134	WITHOUT_CLASSIFICATION	2.7346224988658384E-4	IMPLEMENTATION
// normal all-rest method	WITHOUT_CLASSIFICATION	0.9998399230277294	WITHOUT_CLASSIFICATION	1.6007697227060223E-4	IMPLEMENTATION
// for zero, one, two, three arities, JavaMethod.JavaMethod*.call(...IRubyObject[] args...) will check	WITHOUT_CLASSIFICATION	0.9998870557590993	WITHOUT_CLASSIFICATION	1.1294424090061992E-4	IMPLEMENTATION
// promise to implement zero to N	WITHOUT_CLASSIFICATION	0.984295964874713	WITHOUT_CLASSIFICATION	0.015704035125286977	IMPLEMENTATION
// return	WITHOUT_CLASSIFICATION	0.998601881695724	WITHOUT_CLASSIFICATION	0.001398118304276141	IMPLEMENTATION
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.999876240408805	WITHOUT_CLASSIFICATION	1.2375959119495714E-4	IMPLEMENTATION
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9998672351519748	WITHOUT_CLASSIFICATION	1.327648480251947E-4	IMPLEMENTATION
// confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9998706158682474	WITHOUT_CLASSIFICATION	1.2938413175263823E-4	IMPLEMENTATION
// confirm maximum not greater than optional	WITHOUT_CLASSIFICATION	0.9999200142814636	WITHOUT_CLASSIFICATION	7.998571853633716E-5	IMPLEMENTATION
// Raise an error if arity does not match requirements	WITHOUT_CLASSIFICATION	0.9999216457964418	WITHOUT_CLASSIFICATION	7.835420355811505E-5	IMPLEMENTATION
// tc	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
// self // name	WITHOUT_CLASSIFICATION	0.9997918459328151	WITHOUT_CLASSIFICATION	2.0815406718490602E-4	IMPLEMENTATION
// no args	WITHOUT_CLASSIFICATION	0.996833410867948	WITHOUT_CLASSIFICATION	0.0031665891320519506	IMPLEMENTATION
// variable args with block	WITHOUT_CLASSIFICATION	0.9998118548755229	WITHOUT_CLASSIFICATION	1.8814512447706946E-4	IMPLEMENTATION
// variable args no block, load null block	WITHOUT_CLASSIFICATION	0.9998313992509497	WITHOUT_CLASSIFICATION	1.686007490504455E-4	IMPLEMENTATION
// zero args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9998314814708239	WITHOUT_CLASSIFICATION	1.6851852917618303E-4	IMPLEMENTATION
// one arg with block	WITHOUT_CLASSIFICATION	0.9998120272535477	WITHOUT_CLASSIFICATION	1.8797274645241435E-4	IMPLEMENTATION
// one arg, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9998356434647736	WITHOUT_CLASSIFICATION	1.643565352263429E-4	IMPLEMENTATION
// two args with block	WITHOUT_CLASSIFICATION	0.9998169632344749	WITHOUT_CLASSIFICATION	1.830367655251416E-4	IMPLEMENTATION
// two args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9998332655367239	WITHOUT_CLASSIFICATION	1.667344632761313E-4	IMPLEMENTATION
// three args with block	WITHOUT_CLASSIFICATION	0.9998224042287832	WITHOUT_CLASSIFICATION	1.7759577121682742E-4	IMPLEMENTATION
// three args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9998382220033416	WITHOUT_CLASSIFICATION	1.6177799665841993E-4	IMPLEMENTATION
// load block if it accepts block	WITHOUT_CLASSIFICATION	0.9998813709305829	WITHOUT_CLASSIFICATION	1.1862906941699908E-4	IMPLEMENTATION
// all other arg cases with block	WITHOUT_CLASSIFICATION	0.9998359267701957	WITHOUT_CLASSIFICATION	1.6407322980431773E-4	IMPLEMENTATION
// all other arg cases without block	WITHOUT_CLASSIFICATION	0.9998358381444711	WITHOUT_CLASSIFICATION	1.641618555289638E-4	IMPLEMENTATION
// one arg, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999599533611045	WITHOUT_CLASSIFICATION	4.004663889534753E-5	IMPLEMENTATION
// two args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999593738889416	WITHOUT_CLASSIFICATION	4.0626111058410156E-5	IMPLEMENTATION
// three args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999605817172567	WITHOUT_CLASSIFICATION	3.9418282743313884E-5	IMPLEMENTATION
// load target for invocations	WITHOUT_CLASSIFICATION	0.9999135051445256	WITHOUT_CLASSIFICATION	8.649485547443569E-5	IMPLEMENTATION
// load receiver as original type for virtual invocation	WITHOUT_CLASSIFICATION	0.9999277350149615	WITHOUT_CLASSIFICATION	7.226498503860351E-5	IMPLEMENTATION
// static invocation	WITHOUT_CLASSIFICATION	0.9998154029292687	WITHOUT_CLASSIFICATION	1.8459707073114901E-4	IMPLEMENTATION
// virtual invocation	WITHOUT_CLASSIFICATION	0.9998163182801305	WITHOUT_CLASSIFICATION	1.836817198695485E-4	IMPLEMENTATION
// void return type, so we need to load a nil for returning below	WITHOUT_CLASSIFICATION	0.999859919496361	WITHOUT_CLASSIFICATION	1.4008050363898008E-4	IMPLEMENTATION
// normal finally and exit	WITHOUT_CLASSIFICATION	0.99983069598696	WITHOUT_CLASSIFICATION	1.693040130400481E-4	IMPLEMENTATION
// promise to implement one to N	WITHOUT_CLASSIFICATION	0.9818270494103365	WITHOUT_CLASSIFICATION	0.018172950589663506	IMPLEMENTATION
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9997509234961525	WITHOUT_CLASSIFICATION	2.49076503847539E-4	IMPLEMENTATION
// these are only needed if we have a non-noop call config	WITHOUT_CLASSIFICATION	0.9999648063333894	WITHOUT_CLASSIFICATION	3.519366661055987E-5	IMPLEMENTATION
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9998859634688159	WITHOUT_CLASSIFICATION	1.1403653118415598E-4	IMPLEMENTATION
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9998859634688159	WITHOUT_CLASSIFICATION	1.1403653118415598E-4	IMPLEMENTATION
// singleton classes don't get their own visibility domain	WITHOUT_CLASSIFICATION	0.999954367721905	WITHOUT_CLASSIFICATION	4.563227809500637E-5	IMPLEMENTATION
// For visibility we need real meta class and not anonymous one from class << self	WITHOUT_CLASSIFICATION	0.9999547650317946	WITHOUT_CLASSIFICATION	4.5234968205377235E-5	IMPLEMENTATION
// SimpleInvocationMethod	WITHOUT_CLASSIFICATION	0.9998211059868111	WITHOUT_CLASSIFICATION	1.7889401318892044E-4	IMPLEMENTATION
// never reached	WITHOUT_CLASSIFICATION	0.9997535648346201	WITHOUT_CLASSIFICATION	2.4643516537991016E-4	IMPLEMENTATION
// promise to implement N with block	WITHOUT_CLASSIFICATION	0.984017178522538	WITHOUT_CLASSIFICATION	0.01598282147746191	IMPLEMENTATION
// promise to implement zero to N with block	WITHOUT_CLASSIFICATION	0.9841810238071012	WITHOUT_CLASSIFICATION	0.015818976192898904	IMPLEMENTATION
// promise to implement one to N with block	WITHOUT_CLASSIFICATION	0.9816943739114008	WITHOUT_CLASSIFICATION	0.018305626088599154	IMPLEMENTATION
// promise to implement two to N with block	WITHOUT_CLASSIFICATION	0.9818332788818819	WITHOUT_CLASSIFICATION	0.018166721118118078	IMPLEMENTATION
// promise to implement zero to three with block	WITHOUT_CLASSIFICATION	0.9861255416150779	WITHOUT_CLASSIFICATION	0.013874458384921979	IMPLEMENTATION
// promise to implement one to three with block	WITHOUT_CLASSIFICATION	0.9847187151770482	WITHOUT_CLASSIFICATION	0.015281284822951787	IMPLEMENTATION
// promise to implement two to three with block	WITHOUT_CLASSIFICATION	0.9840617152112409	WITHOUT_CLASSIFICATION	0.01593828478875904	IMPLEMENTATION
// promise to implement three with block	WITHOUT_CLASSIFICATION	0.9802559437911206	WITHOUT_CLASSIFICATION	0.019744056208879465	IMPLEMENTATION
// promise to implement N	WITHOUT_CLASSIFICATION	0.9823589877575146	WITHOUT_CLASSIFICATION	0.017641012242485418	IMPLEMENTATION
// DumpingInvocationMethodFactory	WITHOUT_CLASSIFICATION	0.9998638852639626	WITHOUT_CLASSIFICATION	1.361147360373874E-4	IMPLEMENTATION
// We promote our box to being its own box since we're changing // visibilities, and need it to be reflected on this method object // independent of any other sharing the box.	WITHOUT_CLASSIFICATION	0.9999549287882354	WITHOUT_CLASSIFICATION	4.507121176453723E-5	IMPLEMENTATION
// Normally we could leave these to fall back on the superclass, but // since it dispatches through the [] version below, which may // dispatch through the []+block version, we can save it a couple hops // by overriding these here.	WITHOUT_CLASSIFICATION	0.9999562488947924	WITHOUT_CLASSIFICATION	4.375110520760466E-5	IMPLEMENTATION
// promise to implement two to N	WITHOUT_CLASSIFICATION	0.9819649661209445	WITHOUT_CLASSIFICATION	0.01803503387905549	IMPLEMENTATION
// promise to implement three to N	WITHOUT_CLASSIFICATION	0.9793770041068177	WITHOUT_CLASSIFICATION	0.020622995893182245	IMPLEMENTATION
// promise to implement zero to three	WITHOUT_CLASSIFICATION	0.9852845008532113	WITHOUT_CLASSIFICATION	0.014715499146788852	IMPLEMENTATION
// promise to implement one to three	WITHOUT_CLASSIFICATION	0.9837937970193334	WITHOUT_CLASSIFICATION	0.016206202980666606	IMPLEMENTATION
// promise to implement two to three	WITHOUT_CLASSIFICATION	0.9830977139016701	WITHOUT_CLASSIFICATION	0.01690228609832991	IMPLEMENTATION
// promise to implement three	WITHOUT_CLASSIFICATION	0.9767381764531561	WITHOUT_CLASSIFICATION	0.02326182354684388	IMPLEMENTATION
// all other arities use "n" dispatch path	WITHOUT_CLASSIFICATION	0.9998314638126676	WITHOUT_CLASSIFICATION	1.6853618733249555E-4	IMPLEMENTATION
// load up object and add a few useful methods	WITHOUT_CLASSIFICATION	0.9999460848931521	WITHOUT_CLASSIFICATION	5.391510684792043E-5	IMPLEMENTATION
// open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel	WITHOUT_CLASSIFICATION	0.9999298699405166	WITHOUT_CLASSIFICATION	7.013005948341642E-5	IMPLEMENTATION
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9977713905750518	WITHOUT_CLASSIFICATION	0.0022286094249482197	IMPLEMENTATION
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9998151845663718	WITHOUT_CLASSIFICATION	1.8481543362823888E-4	IMPLEMENTATION
// create constructor	WITHOUT_CLASSIFICATION	0.9999755255797002	WITHOUT_CLASSIFICATION	2.4474420299888626E-5	IMPLEMENTATION
// wrap self and store the wrapper	WITHOUT_CLASSIFICATION	0.9998949831830656	WITHOUT_CLASSIFICATION	1.050168169343669E-4	IMPLEMENTATION
// end constructor	WITHOUT_CLASSIFICATION	0.9998609587242246	WITHOUT_CLASSIFICATION	1.3904127577544804E-4	IMPLEMENTATION
// start setup method	WITHOUT_CLASSIFICATION	0.9999025775505338	WITHOUT_CLASSIFICATION	9.742244946621105E-5	IMPLEMENTATION
// set RubyClass	WITHOUT_CLASSIFICATION	0.9998718880313536	WITHOUT_CLASSIFICATION	1.2811196864637912E-4	IMPLEMENTATION
// set Ruby	WITHOUT_CLASSIFICATION	0.9998718497606615	WITHOUT_CLASSIFICATION	1.2815023933862278E-4	IMPLEMENTATION
// all methods dispatch to the simple version by default, which is method_missing normally	WITHOUT_CLASSIFICATION	0.9999698538577345	WITHOUT_CLASSIFICATION	3.0146142265466683E-5	IMPLEMENTATION
// try specific name first, falling back on simple name	WITHOUT_CLASSIFICATION	0.9998910173830603	WITHOUT_CLASSIFICATION	1.0898261693976479E-4	IMPLEMENTATION
// get current context	WITHOUT_CLASSIFICATION	0.9999407509491794	WITHOUT_CLASSIFICATION	5.9249050820463155E-5	IMPLEMENTATION
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999009768279311	WITHOUT_CLASSIFICATION	9.902317206894507E-5	IMPLEMENTATION
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9977713905750518	WITHOUT_CLASSIFICATION	0.0022286094249482197	IMPLEMENTATION
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9998151845663718	WITHOUT_CLASSIFICATION	1.8481543362823888E-4	IMPLEMENTATION
// create constructor	WITHOUT_CLASSIFICATION	0.9999755255797002	WITHOUT_CLASSIFICATION	2.4474420299888626E-5	IMPLEMENTATION
// end constructor	WITHOUT_CLASSIFICATION	0.9998609587242246	WITHOUT_CLASSIFICATION	1.3904127577544804E-4	IMPLEMENTATION
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9975454476347503	WITHOUT_CLASSIFICATION	0.002454552365249753	IMPLEMENTATION
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999358359945868	WITHOUT_CLASSIFICATION	6.416400541319771E-5	IMPLEMENTATION
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999182667809728	WITHOUT_CLASSIFICATION	8.173321902706535E-5	IMPLEMENTATION
// load null block	WITHOUT_CLASSIFICATION	0.9998317298477173	WITHOUT_CLASSIFICATION	1.6827015228265633E-4	IMPLEMENTATION
// invoke method	WITHOUT_CLASSIFICATION	0.9997908110298678	WITHOUT_CLASSIFICATION	2.0918897013225924E-4	IMPLEMENTATION
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9998576415665914	WITHOUT_CLASSIFICATION	1.4235843340865492E-4	IMPLEMENTATION
// end setup method	WITHOUT_CLASSIFICATION	0.9998634686702095	WITHOUT_CLASSIFICATION	1.365313297905289E-4	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.9999356113424044	WITHOUT_CLASSIFICATION	6.438865759566594E-5	IMPLEMENTATION
// create static init, for a monitor object	WITHOUT_CLASSIFICATION	0.999980607956201	WITHOUT_CLASSIFICATION	1.9392043799057775E-5	IMPLEMENTATION
// store the wrapper	WITHOUT_CLASSIFICATION	0.9998718375151594	WITHOUT_CLASSIFICATION	1.2816248484052314E-4	IMPLEMENTATION
// prepare temp locals	WITHOUT_CLASSIFICATION	0.999849394602761	WITHOUT_CLASSIFICATION	1.5060539723897018E-4	IMPLEMENTATION
// Try to look up field for simple name // get field; if nonnull, go straight to dispatch	WITHOUT_CLASSIFICATION	0.9999521925649437	WITHOUT_CLASSIFICATION	4.780743505622269E-5	IMPLEMENTATION
// field is null, lock class and try to populate	WITHOUT_CLASSIFICATION	0.9999504050573375	WITHOUT_CLASSIFICATION	4.959494266260809E-5	IMPLEMENTATION
// try/finally block to ensure unlock	WITHOUT_CLASSIFICATION	0.9998402773284017	WITHOUT_CLASSIFICATION	1.5972267159835538E-4	IMPLEMENTATION
// store it	WITHOUT_CLASSIFICATION	0.9998328311127066	WITHOUT_CLASSIFICATION	1.6716888729338217E-4	IMPLEMENTATION
// end of try block	WITHOUT_CLASSIFICATION	0.9998922463673188	WITHOUT_CLASSIFICATION	1.077536326811785E-4	IMPLEMENTATION
// finally block to release monitor	WITHOUT_CLASSIFICATION	0.9998620484839708	WITHOUT_CLASSIFICATION	1.3795151602916797E-4	IMPLEMENTATION
// exception handling for monitor release	WITHOUT_CLASSIFICATION	0.9998285139476463	WITHOUT_CLASSIFICATION	1.7148605235374264E-4	IMPLEMENTATION
// re-get, re-check method; if not null now, go to dispatch	WITHOUT_CLASSIFICATION	0.9998424020285276	WITHOUT_CLASSIFICATION	1.5759797147243162E-4	IMPLEMENTATION
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999009768279311	WITHOUT_CLASSIFICATION	9.902317206894507E-5	IMPLEMENTATION
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999358359945868	WITHOUT_CLASSIFICATION	6.416400541319771E-5	IMPLEMENTATION
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999182667809728	WITHOUT_CLASSIFICATION	8.173321902706535E-5	IMPLEMENTATION
// invoke method	WITHOUT_CLASSIFICATION	0.9997908110298678	WITHOUT_CLASSIFICATION	2.0918897013225924E-4	IMPLEMENTATION
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9998576415665914	WITHOUT_CLASSIFICATION	1.4235843340865492E-4	IMPLEMENTATION
// end setup method	WITHOUT_CLASSIFICATION	0.9998634686702095	WITHOUT_CLASSIFICATION	1.365313297905289E-4	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.9999356113424044	WITHOUT_CLASSIFICATION	6.438865759566594E-5	IMPLEMENTATION
// create the class	WITHOUT_CLASSIFICATION	0.9999655073492028	WITHOUT_CLASSIFICATION	3.449265079735782E-5	IMPLEMENTATION
// method still not available, call method_missing	WITHOUT_CLASSIFICATION	0.9998378918456966	WITHOUT_CLASSIFICATION	1.621081543033503E-4	IMPLEMENTATION
// perform the dispatch	WITHOUT_CLASSIFICATION	0.999847097628226	WITHOUT_CLASSIFICATION	1.5290237177400392E-4	IMPLEMENTATION
// try to load the specified name; only if that fails, try to define the class	WITHOUT_CLASSIFICATION	0.9999867588856283	WITHOUT_CLASSIFICATION	1.324111437176227E-5	IMPLEMENTATION
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9998285715637529	WITHOUT_CLASSIFICATION	1.7142843624711463E-4	IMPLEMENTATION
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9998285715637529	WITHOUT_CLASSIFICATION	1.7142843624711463E-4	IMPLEMENTATION
// setup the class	WITHOUT_CLASSIFICATION	0.9999369624509586	WITHOUT_CLASSIFICATION	6.303754904141758E-5	IMPLEMENTATION
// now, create a method_added that can replace the DynamicMethod fields as they're redefined	WITHOUT_CLASSIFICATION	0.9999148864671354	WITHOUT_CLASSIFICATION	8.511353286448508E-5	IMPLEMENTATION
// do nothing, it's a non-impl method	WITHOUT_CLASSIFICATION	0.9999702186186388	WITHOUT_CLASSIFICATION	2.9781381361257377E-5	IMPLEMENTATION
// probably a primitive	WITHOUT_CLASSIFICATION	0.9998300324379822	WITHOUT_CLASSIFICATION	1.6996756201770547E-4	IMPLEMENTATION
// interfaces are handled as modules	WITHOUT_CLASSIFICATION	0.999925100688881	WITHOUT_CLASSIFICATION	7.489931111898294E-5	IMPLEMENTATION
// construct the mirror class and parent classes	WITHOUT_CLASSIFICATION	0.9999723661391302	WITHOUT_CLASSIFICATION	2.7633860869702802E-5	IMPLEMENTATION
// set the full name	WITHOUT_CLASSIFICATION	0.9998884744556702	WITHOUT_CLASSIFICATION	1.1152554432980728E-4	IMPLEMENTATION
// include all interfaces	WITHOUT_CLASSIFICATION	0.9999184808538658	WITHOUT_CLASSIFICATION	8.151914613410588E-5	IMPLEMENTATION
// if it's an array, only add methods for aref, aset, and length	WITHOUT_CLASSIFICATION	0.9999310204930227	WITHOUT_CLASSIFICATION	6.897950697718616E-5	IMPLEMENTATION
// add array construction methods	WITHOUT_CLASSIFICATION	0.9999604272215326	WITHOUT_CLASSIFICATION	3.9572778467375496E-5	IMPLEMENTATION
// add all public constructors (note: getConstructors only returns public ones)	WITHOUT_CLASSIFICATION	0.9999712940497181	WITHOUT_CLASSIFICATION	2.870595028190067E-5	IMPLEMENTATION
// add all instance and static methods	WITHOUT_CLASSIFICATION	0.9999698330915638	WITHOUT_CLASSIFICATION	3.0166908436085663E-5	IMPLEMENTATION
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.999869447084306	WITHOUT_CLASSIFICATION	1.3055291569398115E-4	IMPLEMENTATION
// too much array creation!	WITHOUT_CLASSIFICATION	0.9998703314156119	WITHOUT_CLASSIFICATION	1.2966858438814721E-4	IMPLEMENTATION
// only include static methods if specified	WITHOUT_CLASSIFICATION	0.9999404010804561	WITHOUT_CLASSIFICATION	5.959891954402733E-5	IMPLEMENTATION
// add a few type-specific special methods	WITHOUT_CLASSIFICATION	0.9999516720866677	WITHOUT_CLASSIFICATION	4.832791333226985E-5	IMPLEMENTATION
// add all static variables	WITHOUT_CLASSIFICATION	0.9999308273385081	WITHOUT_CLASSIFICATION	6.917266149190787E-5	IMPLEMENTATION
// only public static fields that are valid constants	WITHOUT_CLASSIFICATION	0.9999360014497785	WITHOUT_CLASSIFICATION	6.399855022147825E-5	IMPLEMENTATION
// looks like someone's trying to raise a Java exception. Let them.	WITHOUT_CLASSIFICATION	0.9999022662200849	WITHOUT_CLASSIFICATION	9.773377991501196E-5	IMPLEMENTATION
// NOTE: The five match methods are arity-split to avoid the cost of boxing arguments // when there's already a cached match. Do not condense them into a single // method.	WITHOUT_CLASSIFICATION	0.9999920283977121	WITHOUT_CLASSIFICATION	7.971602287884908E-6	IMPLEMENTATION
// TODO: This is where we would want to do precision checks to see // if it's non-destructive to coerce a given type into the target // integral primitive	WITHOUT_CLASSIFICATION	0.5059908282031756	IMPLEMENTATION	0.4940091717968243	WITHOUT_CLASSIFICATION
// long first because it's what Fixnum claims to be	WITHOUT_CLASSIFICATION	0.9998994768662596	WITHOUT_CLASSIFICATION	1.0052313374053587E-4	IMPLEMENTATION
// double first because it's what float claims to be	WITHOUT_CLASSIFICATION	0.9999297311719666	WITHOUT_CLASSIFICATION	7.02688280334757E-5	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9391082804437679	WITHOUT_CLASSIFICATION	0.06089171955623203	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9997786301202092	WITHOUT_CLASSIFICATION	2.2136987979072385E-4	IMPLEMENTATION
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999812316231977	WITHOUT_CLASSIFICATION	1.876837680221106E-5	IMPLEMENTATION
// we set all Java methods to optional, since many/most have overloads	WITHOUT_CLASSIFICATION	0.9999201215076174	WITHOUT_CLASSIFICATION	7.9878492382554E-5	IMPLEMENTATION
// If we hold a Java object, we need a java_class accessor	WITHOUT_CLASSIFICATION	0.9998642455875816	WITHOUT_CLASSIFICATION	1.3575441241838062E-4	IMPLEMENTATION
// line 326	WITHOUT_CLASSIFICATION	0.9997668231303292	WITHOUT_CLASSIFICATION	2.3317686967070443E-4	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9997786301202092	WITHOUT_CLASSIFICATION	2.2136987979072385E-4	IMPLEMENTATION
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999812316231977	WITHOUT_CLASSIFICATION	1.876837680221106E-5	IMPLEMENTATION
// too much array creation!	WITHOUT_CLASSIFICATION	0.9998703314156119	WITHOUT_CLASSIFICATION	1.2966858438814721E-4	IMPLEMENTATION
// construct new array proxy (ArrayJavaProxy)	WITHOUT_CLASSIFICATION	0.9999044751093361	WITHOUT_CLASSIFICATION	9.552489066385291E-5	IMPLEMENTATION
// Get map of all fields we want to define.  	WITHOUT_CLASSIFICATION	0.999828471348706	WITHOUT_CLASSIFICATION	1.7152865129409187E-4	IMPLEMENTATION
// Look through all mappings to find a match entry for this field	WITHOUT_CLASSIFICATION	0.999946226682094	WITHOUT_CLASSIFICATION	5.377331790599321E-5	IMPLEMENTATION
// Hit a non-java proxy class (included Modules can be a cause of this...skip)	WITHOUT_CLASSIFICATION	0.9999427658611026	WITHOUT_CLASSIFICATION	5.723413889723858E-5	IMPLEMENTATION
// We could not find all of them print out first one (we could print them all?)	WITHOUT_CLASSIFICATION	0.9999622515992407	WITHOUT_CLASSIFICATION	3.774840075934747E-5	IMPLEMENTATION
// dummy bodies for default impls	WITHOUT_CLASSIFICATION	0.9999422285687176	WITHOUT_CLASSIFICATION	5.777143128233239E-5	IMPLEMENTATION
// initialize this if it hasn't been	WITHOUT_CLASSIFICATION	0.9999731828301962	WITHOUT_CLASSIFICATION	2.6817169803669048E-5	IMPLEMENTATION
// initialize these if they haven't been	WITHOUT_CLASSIFICATION	0.9999783352126309	WITHOUT_CLASSIFICATION	2.1664787369036816E-5	IMPLEMENTATION
// not allowed for original (non-generated) Java classes // note: not allowing for any previously created class right now; // this restriction might be loosened later for generated classes	WITHOUT_CLASSIFICATION	0.9999327320051583	WITHOUT_CLASSIFICATION	6.726799484174198E-5	IMPLEMENTATION
// setup new, etc unless this is a ConcreteJavaProxy subclass	WITHOUT_CLASSIFICATION	0.9999517457986626	WITHOUT_CLASSIFICATION	4.825420133726445E-5	IMPLEMENTATION
// First we make modifications to the class, to adapt it to being // both a Ruby class and a proxy for a Java type	WITHOUT_CLASSIFICATION	0.9999780783022608	WITHOUT_CLASSIFICATION	2.1921697739116697E-5	IMPLEMENTATION
// list of interfaces we implement	WITHOUT_CLASSIFICATION	0.9977849704472362	WITHOUT_CLASSIFICATION	0.002215029552763797	IMPLEMENTATION
// We capture the original "new" and make it private	WITHOUT_CLASSIFICATION	0.9998855278098114	WITHOUT_CLASSIFICATION	1.1447219018859275E-4	IMPLEMENTATION
// The replacement "new" allocates and inits the Ruby object as before, but // also instantiates our proxified Java object by calling __jcreate!	WITHOUT_CLASSIFICATION	0.9999711650609632	WITHOUT_CLASSIFICATION	2.8834939036777314E-5	IMPLEMENTATION
// Next, we define a few private methods that we'll use to manipulate // the Java object contained within this Ruby object	WITHOUT_CLASSIFICATION	0.9999777299943905	WITHOUT_CLASSIFICATION	2.227000560945957E-5	IMPLEMENTATION
// jcreate instantiates the proxy object which implements all interfaces // and which is wrapped and implemented by this object	WITHOUT_CLASSIFICATION	0.9989895161562569	WITHOUT_CLASSIFICATION	0.0010104838437431255	IMPLEMENTATION
// Now we add an "implement" and "implement_all" methods to the class	WITHOUT_CLASSIFICATION	0.9995322308905892	WITHOUT_CLASSIFICATION	4.677691094109077E-4	IMPLEMENTATION
// implement all forces implementation of all interfaces we intend // for this class to implement	WITHOUT_CLASSIFICATION	0.9992016282412687	WITHOUT_CLASSIFICATION	7.983717587314272E-4	IMPLEMENTATION
// we've already done the above priming logic, just add another interface // to the list of intentions unless we're past the point of no return or // already intend to implement the given interface	WITHOUT_CLASSIFICATION	0.9994755630340427	WITHOUT_CLASSIFICATION	5.244369659572375E-4	IMPLEMENTATION
// walk all superclasses aggregating interfaces	WITHOUT_CLASSIFICATION	0.9999453532250148	WITHOUT_CLASSIFICATION	5.464677498521016E-5	IMPLEMENTATION
// construct the new interface impl and set it into the object	WITHOUT_CLASSIFICATION	0.9999927159672384	WITHOUT_CLASSIFICATION	7.284032761626988E-6	IMPLEMENTATION
// assuming the user wants a collection of interfaces that can be // included together. make it so.	WITHOUT_CLASSIFICATION	0.9999607877851203	WITHOUT_CLASSIFICATION	3.921221487962836E-5	IMPLEMENTATION
// not allowed for existing Java interface modules	WITHOUT_CLASSIFICATION	0.9999273079894612	WITHOUT_CLASSIFICATION	7.26920105387661E-5	IMPLEMENTATION
// To turn a module into an "interface collection" we add a class instance // variable to hold the list of interfaces, and modify append_features // for this module to call append_features on each of those interfaces as // well	WITHOUT_CLASSIFICATION	0.9999946072548909	WITHOUT_CLASSIFICATION	5.392745109068674E-6	IMPLEMENTATION
// already set up append_features, just add the interface if we haven't already	WITHOUT_CLASSIFICATION	0.99998720495435	WITHOUT_CLASSIFICATION	1.2795045650008549E-5	IMPLEMENTATION
// array-of-interface-type creation/identity	WITHOUT_CLASSIFICATION	0.9999185341126797	WITHOUT_CLASSIFICATION	8.146588732027504E-5	IMPLEMENTATION
// keep this variant for kind_of? testing	WITHOUT_CLASSIFICATION	0.999869608435102	WITHOUT_CLASSIFICATION	1.3039156489803508E-4	IMPLEMENTATION
// array creation should use this variant	WITHOUT_CLASSIFICATION	0.9997939642633438	WITHOUT_CLASSIFICATION	2.0603573665624214E-4	IMPLEMENTATION
// parent.setConstant(name, proxyClass); // where the name should come from ?	WITHOUT_CLASSIFICATION	0.9999412933542676	WITHOUT_CLASSIFICATION	5.870664573246556E-5	IMPLEMENTATION
// including interface module so old-style interface "subclasses" will // respond correctly to #kind_of?, etc.	WITHOUT_CLASSIFICATION	0.9999616207115469	WITHOUT_CLASSIFICATION	3.8379288453094865E-5	IMPLEMENTATION
// add reference to interface module	WITHOUT_CLASSIFICATION	0.999975693506592	WITHOUT_CLASSIFICATION	2.4306493408003163E-5	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9998539967766215	WITHOUT_CLASSIFICATION	1.4600322337862519E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9998539967766215	WITHOUT_CLASSIFICATION	1.4600322337862519E-4	IMPLEMENTATION
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.999869447084306	WITHOUT_CLASSIFICATION	1.3055291569398115E-4	IMPLEMENTATION
// same as argument_types, but matches name in java.lang.reflect.Constructor/Method	WITHOUT_CLASSIFICATION	0.9999379107575367	WITHOUT_CLASSIFICATION	6.208924246342463E-5	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.999974913788388	WITHOUT_CLASSIFICATION	2.5086211612046706E-5	IMPLEMENTATION
// weakly reserved names	WITHOUT_CLASSIFICATION	0.9998036623450837	WITHOUT_CLASSIFICATION	1.9633765491633385E-4	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999588793408603	WITHOUT_CLASSIFICATION	4.112065913973178E-5	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999588793408603	WITHOUT_CLASSIFICATION	4.112065913973178E-5	IMPLEMENTATION
// modified only by addMethod; no synchronization required	WITHOUT_CLASSIFICATION	0.9999145743061618	WITHOUT_CLASSIFICATION	8.542569383817977E-5	IMPLEMENTATION
// if there's no constructor, we must prevent construction	WITHOUT_CLASSIFICATION	0.9999089879000647	WITHOUT_CLASSIFICATION	9.101209993537275E-5	IMPLEMENTATION
// caching constructors, as they're accessed for each new instance	WITHOUT_CLASSIFICATION	0.9999220458294636	WITHOUT_CLASSIFICATION	7.795417053634628E-5	IMPLEMENTATION
// proxy module for interfaces	WITHOUT_CLASSIFICATION	0.9999220418675638	WITHOUT_CLASSIFICATION	7.795813243615525E-5	IMPLEMENTATION
// proxy class for concrete classes.  also used for // "concrete" interfaces, which is why we have two fields	WITHOUT_CLASSIFICATION	0.999977558792571	WITHOUT_CLASSIFICATION	2.244120742900238E-5	IMPLEMENTATION
// readable only by thread building proxy, so don't need to be // volatile. used to handle recursive calls to getProxyClass/Module // while proxy is being constructed (usually when a constant // defined by a class is of the same type as that class).	WITHOUT_CLASSIFICATION	0.9999928728729683	WITHOUT_CLASSIFICATION	7.127127031627438E-6	IMPLEMENTATION
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999348393230261	WITHOUT_CLASSIFICATION	6.516067697382556E-5	IMPLEMENTATION
// Now add all aliases for the static methods (fields) as appropriate	WITHOUT_CLASSIFICATION	0.9999206263853883	WITHOUT_CLASSIFICATION	7.937361461172867E-5	IMPLEMENTATION
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9998966208460235	WITHOUT_CLASSIFICATION	1.033791539765619E-4	IMPLEMENTATION
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999206177586514	WITHOUT_CLASSIFICATION	7.938224134869664E-5	IMPLEMENTATION
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9998801988720646	WITHOUT_CLASSIFICATION	1.1980112793546946E-4	IMPLEMENTATION
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9998649843122981	WITHOUT_CLASSIFICATION	1.3501568770190675E-4	IMPLEMENTATION
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9998240988987867	WITHOUT_CLASSIFICATION	1.759011012132589E-4	IMPLEMENTATION
// Additionally add ?-postfixed aliases to any boolean methods and properties.	WITHOUT_CLASSIFICATION	0.9999551786795396	WITHOUT_CLASSIFICATION	4.4821320460367874E-5	IMPLEMENTATION
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9998695903382042	WITHOUT_CLASSIFICATION	1.3040966179578723E-4	IMPLEMENTATION
// something?	WITHOUT_CLASSIFICATION	0.999777015850304	WITHOUT_CLASSIFICATION	2.2298414969597533E-4	IMPLEMENTATION
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999768089111912	WITHOUT_CLASSIFICATION	2.3191088808804212E-5	IMPLEMENTATION
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999768089111912	WITHOUT_CLASSIFICATION	2.3191088808804212E-5	IMPLEMENTATION
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999889918115389	WITHOUT_CLASSIFICATION	1.1008188461143677E-5	IMPLEMENTATION
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999889918115389	WITHOUT_CLASSIFICATION	1.1008188461143677E-5	IMPLEMENTATION
// create constructorInstaller; if there are no constructors, it will disable construction	WITHOUT_CLASSIFICATION	0.9999922816875645	WITHOUT_CLASSIFICATION	7.718312435548815E-6	IMPLEMENTATION
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999183917634173	WITHOUT_CLASSIFICATION	8.160823658260922E-5	IMPLEMENTATION
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999402798411283	WITHOUT_CLASSIFICATION	5.972015887159175E-5	IMPLEMENTATION
// now iterate over all installers and make sure they also have appropriate aliases	WITHOUT_CLASSIFICATION	0.9998631273357783	WITHOUT_CLASSIFICATION	1.3687266422162238E-4	IMPLEMENTATION
// old (quasi-deprecated) interface class	WITHOUT_CLASSIFICATION	0.9999315751140357	WITHOUT_CLASSIFICATION	6.842488596420952E-5	IMPLEMENTATION
// 1.9 support for encodings	WITHOUT_CLASSIFICATION	0.9997173453550982	WITHOUT_CLASSIFICATION	2.8265464490188804E-4	IMPLEMENTATION
// double-check the cache now that we're synchronized	WITHOUT_CLASSIFICATION	0.9998914411146455	WITHOUT_CLASSIFICATION	1.085588853545847E-4	IMPLEMENTATION
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9998649843122981	WITHOUT_CLASSIFICATION	1.3501568770190675E-4	IMPLEMENTATION
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9998240988987867	WITHOUT_CLASSIFICATION	1.759011012132589E-4	IMPLEMENTATION
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9998695903382042	WITHOUT_CLASSIFICATION	1.3040966179578723E-4	IMPLEMENTATION
// one word type name that starts lower-case...it may be a primitive type	WITHOUT_CLASSIFICATION	0.9999392294210543	WITHOUT_CLASSIFICATION	6.077057894580209E-5	IMPLEMENTATION
// Java.getProxyClass deals with sync issues, so we won't duplicate the logic here	WITHOUT_CLASSIFICATION	0.9998931747009755	WITHOUT_CLASSIFICATION	1.0682529902448011E-4	IMPLEMENTATION
// note: intentionally returning the actual array returned from Java, rather // than wrapping it in a RubyArray. wave of the future, when java_class will // return the actual class, rather than a JavaClass wrapper.	WITHOUT_CLASSIFICATION	0.9999856701771075	WITHOUT_CLASSIFICATION	1.4329822892563924E-5	IMPLEMENTATION
// see note above re: return type	WITHOUT_CLASSIFICATION	0.9999137676607008	WITHOUT_CLASSIFICATION	8.623233929917777E-5	IMPLEMENTATION
// restrictive security policy; no matter, we only want public // classes anyway	WITHOUT_CLASSIFICATION	0.9999457360497332	WITHOUT_CLASSIFICATION	5.42639502666186E-5	IMPLEMENTATION
// very restrictive policy (disallows Member.PUBLIC) // we'd never actually get this far in that case	WITHOUT_CLASSIFICATION	0.9997122188223454	WITHOUT_CLASSIFICATION	2.877811776546151E-4	IMPLEMENTATION
// one-dimensional array	WITHOUT_CLASSIFICATION	0.9998335815530216	WITHOUT_CLASSIFICATION	1.664184469783603E-4	IMPLEMENTATION
// n-dimensional array	WITHOUT_CLASSIFICATION	0.9998318985447013	WITHOUT_CLASSIFICATION	1.6810145529867713E-4	IMPLEMENTATION
// if it's an array of arrays, recurse with the component type	WITHOUT_CLASSIFICATION	0.99996842366512	WITHOUT_CLASSIFICATION	3.157633487996369E-5	IMPLEMENTATION
// we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods // see JRUBY-3130	WITHOUT_CLASSIFICATION	0.9999594959687139	WITHOUT_CLASSIFICATION	4.05040312861652E-5	IMPLEMENTATION
// Proc implementing an interface, pull in the catch-all code that lets the proc get invoked // no matter what method is called on the interface	WITHOUT_CLASSIFICATION	0.9992562133968484	WITHOUT_CLASSIFICATION	7.437866031515464E-4	IMPLEMENTATION
// can't be converted any more, return it	WITHOUT_CLASSIFICATION	0.999946496614762	WITHOUT_CLASSIFICATION	5.3503385238077345E-5	IMPLEMENTATION
// getFooBar() => fooBar?, foo_bar?(*)	WITHOUT_CLASSIFICATION	0.9998745481641425	WITHOUT_CLASSIFICATION	1.25451835857549E-4	IMPLEMENTATION
// If not a property, but is boolean add ?-postfixed aliases.	WITHOUT_CLASSIFICATION	0.9999160025490087	WITHOUT_CLASSIFICATION	8.399745099134997E-5	IMPLEMENTATION
// many cases are ok to convert to float; if not one of these, error	WITHOUT_CLASSIFICATION	0.9999399896608537	WITHOUT_CLASSIFICATION	6.001033914618128E-5	IMPLEMENTATION
// for Object, default to natural wrapper type	WITHOUT_CLASSIFICATION	0.9999575435737197	WITHOUT_CLASSIFICATION	4.24564262803381E-5	IMPLEMENTATION
// rubyObject is already of the required jruby class (or subclass)	WITHOUT_CLASSIFICATION	0.9999535694499749	WITHOUT_CLASSIFICATION	4.6430550024983635E-5	IMPLEMENTATION
// the converters handle not only primitive types but also their boxed versions, so we should check // if we have a converter before checking for isPrimitive()	WITHOUT_CLASSIFICATION	0.9999861551099433	WITHOUT_CLASSIFICATION	1.3844890056667817E-5	IMPLEMENTATION
// it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999503193292966	WITHOUT_CLASSIFICATION	4.96806707034169E-5	IMPLEMENTATION
// we've found a Java type to which we've coerced the Ruby value, wrap it	WITHOUT_CLASSIFICATION	0.9998989937637061	WITHOUT_CLASSIFICATION	1.0100623629385073E-4	IMPLEMENTATION
// set of utility methods for Java-based proxy objects	WITHOUT_CLASSIFICATION	0.9999641459758778	WITHOUT_CLASSIFICATION	3.585402412223699E-5	IMPLEMENTATION
// the proxy (wrapper) type hierarchy	WITHOUT_CLASSIFICATION	0.9998983239031106	WITHOUT_CLASSIFICATION	1.016760968893056E-4	IMPLEMENTATION
//InterfaceJavaProxy.createInterfaceJavaProxy(context);	WITHOUT_CLASSIFICATION	0.9999035027721241	WITHOUT_CLASSIFICATION	9.649722787584037E-5	IMPLEMENTATION
// also create the JavaProxy* classes	WITHOUT_CLASSIFICATION	0.9999353829827475	WITHOUT_CLASSIFICATION	6.461701725245964E-5	IMPLEMENTATION
// The template for interface modules	WITHOUT_CLASSIFICATION	0.9999707561251752	WITHOUT_CLASSIFICATION	2.9243874824924413E-5	IMPLEMENTATION
// Now attach Java-related extras to core classes	WITHOUT_CLASSIFICATION	0.9999040887524129	WITHOUT_CLASSIFICATION	9.591124758717928E-5	IMPLEMENTATION
// add all name-to-class mappings	WITHOUT_CLASSIFICATION	0.999926445974476	WITHOUT_CLASSIFICATION	7.355402552404041E-5	IMPLEMENTATION
// add some base Java classes everyone will need	WITHOUT_CLASSIFICATION	0.9999407581606057	WITHOUT_CLASSIFICATION	5.924183939436993E-5	IMPLEMENTATION
// finally, set JavaSupport.isEnabled to true	WITHOUT_CLASSIFICATION	0.9998509584314093	WITHOUT_CLASSIFICATION	1.490415685907009E-4	IMPLEMENTATION
// shouldn't happen, but if a superclass is specified, it's not ours	WITHOUT_CLASSIFICATION	0.9999513184447908	WITHOUT_CLASSIFICATION	4.868155520922283E-5	IMPLEMENTATION
// include any interfaces we extend	WITHOUT_CLASSIFICATION	0.9999210218641484	WITHOUT_CLASSIFICATION	7.897813585158862E-5	IMPLEMENTATION
// java.lang.Object is added at root of java proxy classes	WITHOUT_CLASSIFICATION	0.9999429892071465	WITHOUT_CLASSIFICATION	5.701079285356686E-5	IMPLEMENTATION
// other java proxy classes added under their superclass' java proxy	WITHOUT_CLASSIFICATION	0.9999131574724963	WITHOUT_CLASSIFICATION	8.684252750375025E-5	IMPLEMENTATION
// include interface modules into the proxy class	WITHOUT_CLASSIFICATION	0.9999669791090112	WITHOUT_CLASSIFICATION	3.302089098876469E-5	IMPLEMENTATION
// JRUBY-2938 the proxy class might already exist	WITHOUT_CLASSIFICATION	0.9999359405433779	WITHOUT_CLASSIFICATION	6.40594566221352E-5	IMPLEMENTATION
// add java_method for unbound use	WITHOUT_CLASSIFICATION	0.9999150040054006	WITHOUT_CLASSIFICATION	8.499599459932874E-5	IMPLEMENTATION
// add alias to meta	WITHOUT_CLASSIFICATION	0.999896727111192	WITHOUT_CLASSIFICATION	1.0327288880806336E-4	IMPLEMENTATION
// we'll only map conventional class names to modules 	WITHOUT_CLASSIFICATION	0.99990225688263	WITHOUT_CLASSIFICATION	9.774311736990672E-5	IMPLEMENTATION
/* expected */	WITHOUT_CLASSIFICATION	0.9998633933765504	WITHOUT_CLASSIFICATION	1.3660662344965497E-4	IMPLEMENTATION
// Haven't found a class, continue on as though it were a package	WITHOUT_CLASSIFICATION	0.9999310546726821	WITHOUT_CLASSIFICATION	6.894532731790649E-5	IMPLEMENTATION
// upper case name, so most likely a class	WITHOUT_CLASSIFICATION	0.9999300983864526	WITHOUT_CLASSIFICATION	6.990161354741819E-5	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.999974913788388	WITHOUT_CLASSIFICATION	2.5086211612046706E-5	IMPLEMENTATION
// add alias to meta	WITHOUT_CLASSIFICATION	0.999896727111192	WITHOUT_CLASSIFICATION	1.0327288880806336E-4	IMPLEMENTATION
// this is where we'll get connected when classes are opened using // package module syntax.	WITHOUT_CLASSIFICATION	0.9999713787842556	WITHOUT_CLASSIFICATION	2.862121574439567E-5	IMPLEMENTATION
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9999686822680454	WITHOUT_CLASSIFICATION	3.1317731954704704E-5	IMPLEMENTATION
// this covers primitives and (unlikely) lower-case class names	WITHOUT_CLASSIFICATION	0.9999409328499087	WITHOUT_CLASSIFICATION	5.906715009139681E-5	IMPLEMENTATION
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999013245793837	WITHOUT_CLASSIFICATION	9.86754206161556E-5	IMPLEMENTATION
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999013245793837	WITHOUT_CLASSIFICATION	9.86754206161556E-5	IMPLEMENTATION
// Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9999160135897738	WITHOUT_CLASSIFICATION	8.398641022612669E-5	IMPLEMENTATION
// Create list of interfaces to proxy (and make sure they really are interfaces)	WITHOUT_CLASSIFICATION	0.999982852733621	WITHOUT_CLASSIFICATION	1.7147266378946082E-5	IMPLEMENTATION
// hashcode is a combination of the interfaces and the Ruby class we're using // to implement them	WITHOUT_CLASSIFICATION	0.9985406414619518	WITHOUT_CLASSIFICATION	0.0014593585380483023	IMPLEMENTATION
// if it's a singleton class and the real class is proc, we're doing closure conversion // so just use Proc's hashcode	WITHOUT_CLASSIFICATION	0.9999727336195181	WITHOUT_CLASSIFICATION	2.72663804818428E-5	IMPLEMENTATION
// normal new class implementing interfaces	WITHOUT_CLASSIFICATION	0.9981258664282541	WITHOUT_CLASSIFICATION	0.0018741335717459206	IMPLEMENTATION
/*         * Initialize some components.         */	WITHOUT_CLASSIFICATION	0.9999946137607278	WITHOUT_CLASSIFICATION	5.386239272181703E-6	IMPLEMENTATION
// not synchronizing these methods, no harm if these values get set more // than once. // (also note that there's no chance of getting a partially initialized // class/module, as happens-before is guaranteed by volatile write/read // of constants table.)	WITHOUT_CLASSIFICATION	0.9999845266213746	WITHOUT_CLASSIFICATION	1.5473378625365543E-5	IMPLEMENTATION
// Java reflection does not allow retrieving constructors like methods	WITHOUT_CLASSIFICATION	0.9999271961500474	WITHOUT_CLASSIFICATION	7.280384995255871E-5	IMPLEMENTATION
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.999911447404183	WITHOUT_CLASSIFICATION	8.855259581698726E-5	IMPLEMENTATION
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.999911447404183	WITHOUT_CLASSIFICATION	8.855259581698726E-5	IMPLEMENTATION
// no matching ctor found	WITHOUT_CLASSIFICATION	0.9998896342043289	WITHOUT_CLASSIFICATION	1.1036579567121253E-4	IMPLEMENTATION
// Create Ruby proxies for any input arguments that are not primitives.	WITHOUT_CLASSIFICATION	0.9999472935330779	WITHOUT_CLASSIFICATION	5.270646692203381E-5	IMPLEMENTATION
// prepare a faster handle if handles are enabled and the method and class are public	WITHOUT_CLASSIFICATION	0.9999648795301097	WITHOUT_CLASSIFICATION	3.5120469890220385E-5	IMPLEMENTATION
// must be a public method	WITHOUT_CLASSIFICATION	0.9998776009645899	WITHOUT_CLASSIFICATION	1.2239903541009045E-4	IMPLEMENTATION
// must be a public class	WITHOUT_CLASSIFICATION	0.9999023557118127	WITHOUT_CLASSIFICATION	9.764428818729036E-5	IMPLEMENTATION
// must have been loaded from our known classloader hierarchy	WITHOUT_CLASSIFICATION	0.9998157050121843	WITHOUT_CLASSIFICATION	1.8429498781569043E-4	IMPLEMENTATION
// Special classes like Collections.EMPTY_LIST are inner classes that are private but  // implement public interfaces.  Their methods are all public methods for the public  // interface.  Let these public methods execute via setAccessible(true). 	WITHOUT_CLASSIFICATION	0.9999122716746208	WITHOUT_CLASSIFICATION	8.772832537912478E-5	IMPLEMENTATION
// search through all declared methods to find a closest match	WITHOUT_CLASSIFICATION	0.9999555466926405	WITHOUT_CLASSIFICATION	4.445330735939374E-5	IMPLEMENTATION
// no matching method found	WITHOUT_CLASSIFICATION	0.9998841073791459	WITHOUT_CLASSIFICATION	1.1589262085406721E-4	IMPLEMENTATION
// this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.9999652251553476	WITHOUT_CLASSIFICATION	3.477484465240036E-5	IMPLEMENTATION
/*         * First we need to register the JRuby engine.         */	WITHOUT_CLASSIFICATION	0.9999721140782274	WITHOUT_CLASSIFICATION	2.7885921772656594E-5	IMPLEMENTATION
/*         * Now we create a new BSFManager.         */	WITHOUT_CLASSIFICATION	0.9999960365127064	WITHOUT_CLASSIFICATION	3.963487293584292E-6	IMPLEMENTATION
/*         * Initialize a simple Frame.          */	WITHOUT_CLASSIFICATION	0.9999857197526317	WITHOUT_CLASSIFICATION	1.4280247368262552E-5	IMPLEMENTATION
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9998581102255101	WITHOUT_CLASSIFICATION	1.4188977449002685E-4	IMPLEMENTATION
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9998581102255101	WITHOUT_CLASSIFICATION	1.4188977449002685E-4	IMPLEMENTATION
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9998175424505243	WITHOUT_CLASSIFICATION	1.8245754947571855E-4	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.9999356113424044	WITHOUT_CLASSIFICATION	6.438865759566594E-5	IMPLEMENTATION
// // this test really means, that this is a ruby-defined subclass of a java class //	WITHOUT_CLASSIFICATION	0.9999591825183035	WITHOUT_CLASSIFICATION	4.0817481696385205E-5	IMPLEMENTATION
// for our purposes, Accessibles are also Members, and vice-versa, // so we'll include Member methods here.	WITHOUT_CLASSIFICATION	0.9999405959817711	WITHOUT_CLASSIFICATION	5.9404018229025144E-5	IMPLEMENTATION
/*             * Declare those components as beans in BSF. Then it will be             * possible to access those components in Ruby as global             * variables ($frame, $menubar, ...)             */	WITHOUT_CLASSIFICATION	0.9999948655008455	WITHOUT_CLASSIFICATION	5.1344991545064755E-6	IMPLEMENTATION
/*              * Execute a Ruby script (add the menubar to the frame).             */	WITHOUT_CLASSIFICATION	0.9999932602640058	WITHOUT_CLASSIFICATION	6.739735994157784E-6	IMPLEMENTATION
/*                     * Execute Ruby statements.                     */	WITHOUT_CLASSIFICATION	0.999982894921098	WITHOUT_CLASSIFICATION	1.7105078901987174E-5	IMPLEMENTATION
/*                     * Evaluates a Ruby expression and display the result.                     */	WITHOUT_CLASSIFICATION	0.9999803871849249	WITHOUT_CLASSIFICATION	1.961281507514009E-5	IMPLEMENTATION
// Populate values for the parameter names	WITHOUT_CLASSIFICATION	0.9999574262703157	WITHOUT_CLASSIFICATION	4.2573729684229665E-5	IMPLEMENTATION
/* package scope */	WITHOUT_CLASSIFICATION	0.9997813926363606	WITHOUT_CLASSIFICATION	2.1860736363953635E-4	IMPLEMENTATION
// This point is only reached if there was an exception handler // installed.	WITHOUT_CLASSIFICATION	0.9999772756452008	WITHOUT_CLASSIFICATION	2.2724354799309606E-5	IMPLEMENTATION
// // Ruby-level methods //	WITHOUT_CLASSIFICATION	0.9998586901314933	WITHOUT_CLASSIFICATION	1.4130986850672755E-4	IMPLEMENTATION
// need names ordered for key generation later	WITHOUT_CLASSIFICATION	0.9999116152176797	WITHOUT_CLASSIFICATION	8.838478232036756E-5	IMPLEMENTATION
// we only collect methods and interfaces for  // user-defined proxy classes.	WITHOUT_CLASSIFICATION	0.9999818508509746	WITHOUT_CLASSIFICATION	1.8149149025391235E-5	IMPLEMENTATION
// get JavaClass if this is the new proxy class; verify it // matches if this is a superclass proxy.	WITHOUT_CLASSIFICATION	0.9999926164310187	WITHOUT_CLASSIFICATION	7.383568981319855E-6	IMPLEMENTATION
// get any included interfaces	WITHOUT_CLASSIFICATION	0.9999590635022312	WITHOUT_CLASSIFICATION	4.0936497768851314E-5	IMPLEMENTATION
// lock in the overridden methods for the new class, and any as-yet // uninstantiated ancestor class.	WITHOUT_CLASSIFICATION	0.9999784297245501	WITHOUT_CLASSIFICATION	2.1570275449885816E-5	IMPLEMENTATION
// statically initialized below	WITHOUT_CLASSIFICATION	0.9999396017810506	WITHOUT_CLASSIFICATION	6.039821894951843E-5	IMPLEMENTATION
// finish class initializer	WITHOUT_CLASSIFICATION	0.9999154752551482	WITHOUT_CLASSIFICATION	8.452474485172153E-5	IMPLEMENTATION
// trigger class initialization for the class	WITHOUT_CLASSIFICATION	0.9999883329916056	WITHOUT_CLASSIFICATION	1.1667008394427692E-5	IMPLEMENTATION
// should not happen!	WITHOUT_CLASSIFICATION	0.9999172419919419	WITHOUT_CLASSIFICATION	8.275800805810492E-5	IMPLEMENTATION
// start class	WITHOUT_CLASSIFICATION	0.9998836172421413	WITHOUT_CLASSIFICATION	1.1638275785876057E-4	IMPLEMENTATION
// make getter for handler	WITHOUT_CLASSIFICATION	0.9998844335810605	WITHOUT_CLASSIFICATION	1.1556641893941988E-4	IMPLEMENTATION
// make getter for proxy class	WITHOUT_CLASSIFICATION	0.9999077561797437	WITHOUT_CLASSIFICATION	9.224382025633783E-5	IMPLEMENTATION
// add (potentially) overridden names to the key. // TODO: see note above re: optimizations	WITHOUT_CLASSIFICATION	0.9885388721248648	WITHOUT_CLASSIFICATION	0.011461127875135261	IMPLEMENTATION
// We generate all constructors and let some fail during invocation later	WITHOUT_CLASSIFICATION	0.9999016658540263	WITHOUT_CLASSIFICATION	9.833414597373306E-5	IMPLEMENTATION
// create static private method field	WITHOUT_CLASSIFICATION	0.9999821800576766	WITHOUT_CLASSIFICATION	1.781994232339135E-5	IMPLEMENTATION
// load static empty array	WITHOUT_CLASSIFICATION	0.9999010806216294	WITHOUT_CLASSIFICATION	9.891937837067194E-5	IMPLEMENTATION
// box arguments	WITHOUT_CLASSIFICATION	0.9998208978325003	WITHOUT_CLASSIFICATION	1.7910216749967325E-4	IMPLEMENTATION
// this is a simple rethrow handler	WITHOUT_CLASSIFICATION	0.9999435903605036	WITHOUT_CLASSIFICATION	5.640963949634134E-5	IMPLEMENTATION
// // construct the super-proxy method //	WITHOUT_CLASSIFICATION	0.9999234081221042	WITHOUT_CLASSIFICATION	7.659187789577471E-5	IMPLEMENTATION
// do a void return	WITHOUT_CLASSIFICATION	0.999847045454544	WITHOUT_CLASSIFICATION	1.5295454545594822E-4	IMPLEMENTATION
// // utility methods //	WITHOUT_CLASSIFICATION	0.9998767178467697	WITHOUT_CLASSIFICATION	1.2328215323028982E-4	IMPLEMENTATION
// Is there a supplied proc argument or do we assume a block was // supplied	WITHOUT_CLASSIFICATION	0.99991848886286	WITHOUT_CLASSIFICATION	8.151113713996066E-5	IMPLEMENTATION
// store call information so method_missing impl can use it	WITHOUT_CLASSIFICATION	0.9999191167490792	WITHOUT_CLASSIFICATION	8.088325092080715E-5	IMPLEMENTATION
// use the same logic as in EvaluationState	WITHOUT_CLASSIFICATION	0.9999292273200253	WITHOUT_CLASSIFICATION	7.077267997469937E-5	IMPLEMENTATION
// no opt, no rest, exact match	WITHOUT_CLASSIFICATION	0.9998779453637409	WITHOUT_CLASSIFICATION	1.220546362591431E-4	IMPLEMENTATION
// only rest, must be at least required	WITHOUT_CLASSIFICATION	0.9998939137839874	WITHOUT_CLASSIFICATION	1.0608621601266277E-4	IMPLEMENTATION
// opt but no rest, must be at least required and no more than required + opt	WITHOUT_CLASSIFICATION	0.9998731029221245	WITHOUT_CLASSIFICATION	1.268970778755164E-4	IMPLEMENTATION
// opt and rest, must be at least required	WITHOUT_CLASSIFICATION	0.9998576258695557	WITHOUT_CLASSIFICATION	1.4237413044437374E-4	IMPLEMENTATION
// No block from a nil proc	WITHOUT_CLASSIFICATION	0.9998492035277335	WITHOUT_CLASSIFICATION	1.50796472266398E-4	IMPLEMENTATION
// If not already a proc then we should try and make it one.	WITHOUT_CLASSIFICATION	0.9998460645127488	WITHOUT_CLASSIFICATION	1.5393548725116662E-4	IMPLEMENTATION
// The current block is already associated with proc.  No need to create a new one	WITHOUT_CLASSIFICATION	0.9999905935687914	WITHOUT_CLASSIFICATION	9.406431208629026E-6	IMPLEMENTATION
// Has the method that is calling super received a block argument	WITHOUT_CLASSIFICATION	0.9998910160139818	WITHOUT_CLASSIFICATION	1.089839860182372E-4	IMPLEMENTATION
/* NUL */	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9998736449555194	WITHOUT_CLASSIFICATION	1.263550444805337E-4	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9998547034369545	WITHOUT_CLASSIFICATION	1.4529656304546642E-4	IMPLEMENTATION
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9998386773998114	WITHOUT_CLASSIFICATION	1.6132260018856615E-4	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9997505528500358	WITHOUT_CLASSIFICATION	2.494471499641661E-4	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9997786301202092	WITHOUT_CLASSIFICATION	2.2136987979072385E-4	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9997786301202092	WITHOUT_CLASSIFICATION	2.2136987979072385E-4	IMPLEMENTATION
// classes are directly in the hierarchy, so no special logic is necessary for implementer	WITHOUT_CLASSIFICATION	0.9980748018008896	WITHOUT_CLASSIFICATION	0.0019251981991103386	IMPLEMENTATION
// must be power of 2 // must be power of 2	WITHOUT_CLASSIFICATION	0.9998552036778295	WITHOUT_CLASSIFICATION	1.4479632217052644E-4	IMPLEMENTATION
// Find power-of-two sizes best matching arguments	WITHOUT_CLASSIFICATION	0.9999180945436025	WITHOUT_CLASSIFICATION	8.19054563974764E-5	IMPLEMENTATION
// note segmentShift differs from ConcurrentHashMap's calculation due to // issues with System.identityHashCode (upper n bits always 0, at least  // under Java 1.6 / WinXP)	WITHOUT_CLASSIFICATION	0.9999354363456767	WITHOUT_CLASSIFICATION	6.456365432327125E-5	IMPLEMENTATION
//      System.err.println("***ObjectProxyCache " + id + " started at "+ new java.util.Date());	WITHOUT_CLASSIFICATION	0.9999473142274666	WITHOUT_CLASSIFICATION	5.268577253338971E-5	IMPLEMENTATION
//    protected void finalize() throws Throwable { //        System.err.println("***ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); //    }	WITHOUT_CLASSIFICATION	0.9999663445515415	WITHOUT_CLASSIFICATION	3.36554484584817E-5	IMPLEMENTATION
// EntryRefs include hash with key to facilitate lookup by Segment#expunge // after ref is removed from ReferenceQueue	WITHOUT_CLASSIFICATION	0.9997055618726494	WITHOUT_CLASSIFICATION	2.9443812735070767E-4	IMPLEMENTATION
// Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather // makes it a final field.  The theory is that doing so should force a happens-before // relationship WRT the WeakReference constructor, guaranteeing that the key will be // visibile to other threads (unless it's been GC'ed).  See JLS 17.5 (final fields) and // 17.4.5 (Happens-before order) to confirm or refute my reasoning here.	WITHOUT_CLASSIFICATION	0.9999695137213466	WITHOUT_CLASSIFICATION	3.0486278653449977E-5	IMPLEMENTATION
// references to the Java object and its proxy will either both be // weak or both be soft, since the proxy contains a strong reference // to the object, so it wouldn't make sense for the reference types // to differ.	WITHOUT_CLASSIFICATION	0.9999912547028569	WITHOUT_CLASSIFICATION	8.745297143143394E-6	IMPLEMENTATION
// ctor used by remove/rehash	WITHOUT_CLASSIFICATION	0.9998492463122436	WITHOUT_CLASSIFICATION	1.5075368775654136E-4	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999030000765722	WITHOUT_CLASSIFICATION	9.699992342779751E-5	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999030000765722	WITHOUT_CLASSIFICATION	9.699992342779751E-5	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999030000765722	WITHOUT_CLASSIFICATION	9.699992342779751E-5	IMPLEMENTATION
// note that we'll potentially see the refs for both the java object and // proxy -- whichever we see first will cause the entry to be removed; // the other will not match an entry and will be ignored.	WITHOUT_CLASSIFICATION	0.9999711054810828	WITHOUT_CLASSIFICATION	2.8894518917120707E-5	IMPLEMENTATION
// temp method to verify tableSize value // must be called under lock	WITHOUT_CLASSIFICATION	0.999952534910468	WITHOUT_CLASSIFICATION	4.746508953203065E-5	IMPLEMENTATION
// Single node in list	WITHOUT_CLASSIFICATION	0.9998353400283341	WITHOUT_CLASSIFICATION	1.6465997166584747E-4	IMPLEMENTATION
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9998334738375474	WITHOUT_CLASSIFICATION	1.665261624526349E-4	IMPLEMENTATION
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9998334738375474	WITHOUT_CLASSIFICATION	1.665261624526349E-4	IMPLEMENTATION
// entry exists, proxy has been gc'ed. replace entry.	WITHOUT_CLASSIFICATION	0.9999060978729691	WITHOUT_CLASSIFICATION	9.39021270309085E-5	IMPLEMENTATION
// Where we get new positions from.	WITHOUT_CLASSIFICATION	0.9999069109552209	WITHOUT_CLASSIFICATION	9.308904477910717E-5	IMPLEMENTATION
// Start of string ([, (, {, <, ', ", \n) 	WITHOUT_CLASSIFICATION	0.9999431701776105	WITHOUT_CLASSIFICATION	5.682982238948849E-5	IMPLEMENTATION
// Number of newlines read from the reader	WITHOUT_CLASSIFICATION	0.9999354836503297	WITHOUT_CLASSIFICATION	6.4516349670259E-5	IMPLEMENTATION
// How many bytes into the source are we?	WITHOUT_CLASSIFICATION	0.9999364907698841	WITHOUT_CLASSIFICATION	6.350923011582516E-5	IMPLEMENTATION
// For 'list' and only populated if list is not null.	WITHOUT_CLASSIFICATION	0.9999082591656794	WITHOUT_CLASSIFICATION	9.174083432060968E-5	IMPLEMENTATION
// Last full line read.	WITHOUT_CLASSIFICATION	0.9998211557637111	WITHOUT_CLASSIFICATION	1.788442362889003E-4	IMPLEMENTATION
// Save sourceLine for error reporting to display line where error occurred	WITHOUT_CLASSIFICATION	0.9999400056705141	WITHOUT_CLASSIFICATION	5.9994329485894184E-5	IMPLEMENTATION
// Get rest of line. lineBuffer filled as side-effect...	WITHOUT_CLASSIFICATION	0.9998728965686645	WITHOUT_CLASSIFICATION	1.271034313353751E-4	IMPLEMENTATION
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9998582586011167	WITHOUT_CLASSIFICATION	1.4174139888338007E-4	IMPLEMENTATION
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9998582586011167	WITHOUT_CLASSIFICATION	1.4174139888338007E-4	IMPLEMENTATION
// End of string (], ), }, >, ', ", \0)	WITHOUT_CLASSIFICATION	0.9999061612789266	WITHOUT_CLASSIFICATION	9.383872107340944E-5	IMPLEMENTATION
// How many strings are nested in the current string term	WITHOUT_CLASSIFICATION	0.9999826017458465	WITHOUT_CLASSIFICATION	1.739825415342813E-5	IMPLEMENTATION
// Single-quote fast path	WITHOUT_CLASSIFICATION	0.9998238681442116	WITHOUT_CLASSIFICATION	1.7613185578835722E-4	IMPLEMENTATION
// Regexp engine 'java'	WITHOUT_CLASSIFICATION	0.9998152323225844	WITHOUT_CLASSIFICATION	1.8476767741549717E-4	IMPLEMENTATION
// Was a goto in original ruby lexer	WITHOUT_CLASSIFICATION	0.999869525010529	WITHOUT_CLASSIFICATION	1.3047498947107246E-4	IMPLEMENTATION
/* just ignore */	WITHOUT_CLASSIFICATION	0.9998751032782583	WITHOUT_CLASSIFICATION	1.2489672174172597E-4	IMPLEMENTATION
/* octal constant */	WITHOUT_CLASSIFICATION	0.9997766303030171	WITHOUT_CLASSIFICATION	2.2336969698280625E-4	IMPLEMENTATION
/* hex constant */	WITHOUT_CLASSIFICATION	0.9997748359200807	WITHOUT_CLASSIFICATION	2.2516407991937778E-4	IMPLEMENTATION
// PUSH(1)	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
// POP	WITHOUT_CLASSIFICATION	0.9960040035406714	WITHOUT_CLASSIFICATION	0.003995996459328641	IMPLEMENTATION
// PUSH(0).  If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.	WITHOUT_CLASSIFICATION	0.9998998345369235	WITHOUT_CLASSIFICATION	1.001654630764114E-4	IMPLEMENTATION
// LEXPOP	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
// SET_P	WITHOUT_CLASSIFICATION	0.9959866823928337	WITHOUT_CLASSIFICATION	0.004013317607166298	IMPLEMENTATION
// Marker delimiting heredoc boundary	WITHOUT_CLASSIFICATION	0.9998411250303698	WITHOUT_CLASSIFICATION	1.5887496963018155E-4	IMPLEMENTATION
// Found end marker for this heredoc	WITHOUT_CLASSIFICATION	0.9999146097648557	WITHOUT_CLASSIFICATION	8.53902351442728E-5	IMPLEMENTATION
// Put back lastLine for any elements past start of heredoc marker	WITHOUT_CLASSIFICATION	0.9999351030184794	WITHOUT_CLASSIFICATION	6.48969815204877E-5	IMPLEMENTATION
// Last token read via yylex().	WITHOUT_CLASSIFICATION	0.999848917810794	WITHOUT_CLASSIFICATION	1.5108218920599378E-4	IMPLEMENTATION
// Value of last token which had a value associated with it.	WITHOUT_CLASSIFICATION	0.9999384623527662	WITHOUT_CLASSIFICATION	6.153764723387544E-5	IMPLEMENTATION
// Stream of data that yylex() examines.	WITHOUT_CLASSIFICATION	0.9998700397296323	WITHOUT_CLASSIFICATION	1.2996027036766986E-4	IMPLEMENTATION
// Used for tiny smidgen of grammar in lexer (see setParserSupport())	WITHOUT_CLASSIFICATION	0.9998845431739717	WITHOUT_CLASSIFICATION	1.1545682602825669E-4	IMPLEMENTATION
// Give a name to a value.  Enebo: This should be used more.	WITHOUT_CLASSIFICATION	0.9998080511196666	WITHOUT_CLASSIFICATION	1.919488803334362E-4	IMPLEMENTATION
// When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').	WITHOUT_CLASSIFICATION	0.9999300718468239	WITHOUT_CLASSIFICATION	6.992815317603067E-5	IMPLEMENTATION
// Are we lexing Ruby 1.8 or 1.9+ syntax	WITHOUT_CLASSIFICATION	0.9998323477806107	WITHOUT_CLASSIFICATION	1.676522193891824E-4	IMPLEMENTATION
// Count of nested parentheses (1.9 only)	WITHOUT_CLASSIFICATION	0.9998375143919286	WITHOUT_CLASSIFICATION	1.624856080713679E-4	IMPLEMENTATION
// 1.9 only	WITHOUT_CLASSIFICATION	0.9997515399162304	WITHOUT_CLASSIFICATION	2.4846008376949665E-4	IMPLEMENTATION
// Short-hand (e.g. %{,%.,%!,... versus %Q{).	WITHOUT_CLASSIFICATION	0.9998361110651239	WITHOUT_CLASSIFICATION	1.6388893487593922E-4	IMPLEMENTATION
// Long-hand (e.g. %Q{}).	WITHOUT_CLASSIFICATION	0.9998061375638917	WITHOUT_CLASSIFICATION	1.938624361082783E-4	IMPLEMENTATION
/* no mb || ismbchar(term)*/	WITHOUT_CLASSIFICATION	0.9998041258566897	WITHOUT_CLASSIFICATION	1.9587414331021787E-4	IMPLEMENTATION
/*     * Not normally used, but is left in here since it can be useful in debugging     * grammar and lexing problems.     *     */	WITHOUT_CLASSIFICATION	0.9999398413059273	WITHOUT_CLASSIFICATION	6.015869407266623E-5	IMPLEMENTATION
// DEBUGGING HELP 	WITHOUT_CLASSIFICATION	0.9997515399162304	WITHOUT_CLASSIFICATION	2.4846008376949665E-4	IMPLEMENTATION
/* '\v' */	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
/* end of script. */	WITHOUT_CLASSIFICATION	0.999846661725079	WITHOUT_CLASSIFICATION	1.5333827492099516E-4	IMPLEMENTATION
/* white spaces */	WITHOUT_CLASSIFICATION	0.9998123918241759	WITHOUT_CLASSIFICATION	1.876081758240068E-4	IMPLEMENTATION
/* '\v' */	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
/* it's a comment */	WITHOUT_CLASSIFICATION	0.9998199641358599	WITHOUT_CLASSIFICATION	1.8003586414004703E-4	IMPLEMENTATION
// Replace a string of newlines with a single one	WITHOUT_CLASSIFICATION	0.9999175539979814	WITHOUT_CLASSIFICATION	8.244600201866155E-5	IMPLEMENTATION
/* $\: output record separator */	WITHOUT_CLASSIFICATION	0.9998931407518713	WITHOUT_CLASSIFICATION	1.0685924812861176E-4	IMPLEMENTATION
// EOF (ENEBO: After default?	WITHOUT_CLASSIFICATION	0.9998769789529778	WITHOUT_CLASSIFICATION	1.2302104702222193E-4	IMPLEMENTATION
// documentation nodes	WITHOUT_CLASSIFICATION	0.999834601012348	WITHOUT_CLASSIFICATION	1.653989876519547E-4	IMPLEMENTATION
// In case last next was the newline.	WITHOUT_CLASSIFICATION	0.9999240534768399	WITHOUT_CLASSIFICATION	7.594652316013825E-5	IMPLEMENTATION
// Just a plain bang	WITHOUT_CLASSIFICATION	0.9998113094727277	WITHOUT_CLASSIFICATION	1.886905272724523E-4	IMPLEMENTATION
/* $_: last read line string */	WITHOUT_CLASSIFICATION	0.999914840863576	WITHOUT_CLASSIFICATION	8.515913642394197E-5	IMPLEMENTATION
/* $~: match-data */	WITHOUT_CLASSIFICATION	0.9997798498197686	WITHOUT_CLASSIFICATION	2.2015018023133554E-4	IMPLEMENTATION
/* $*: argv */	WITHOUT_CLASSIFICATION	0.9997515399162304	WITHOUT_CLASSIFICATION	2.4846008376949665E-4	IMPLEMENTATION
/* $$: pid */	WITHOUT_CLASSIFICATION	0.9997515399162304	WITHOUT_CLASSIFICATION	2.4846008376949665E-4	IMPLEMENTATION
/* $?: last status */	WITHOUT_CLASSIFICATION	0.9998324948267742	WITHOUT_CLASSIFICATION	1.6750517322586535E-4	IMPLEMENTATION
/* $!: error string */	WITHOUT_CLASSIFICATION	0.9998898214574095	WITHOUT_CLASSIFICATION	1.1017854259054208E-4	IMPLEMENTATION
/* $@: error position */	WITHOUT_CLASSIFICATION	0.9998962225100787	WITHOUT_CLASSIFICATION	1.0377748992129904E-4	IMPLEMENTATION
/* $/: input record separator */	WITHOUT_CLASSIFICATION	0.9998862485012764	WITHOUT_CLASSIFICATION	1.137514987235429E-4	IMPLEMENTATION
/* $;: field separator */	WITHOUT_CLASSIFICATION	0.9998812441430465	WITHOUT_CLASSIFICATION	1.1875585695350865E-4	IMPLEMENTATION
/* $,: output field separator */	WITHOUT_CLASSIFICATION	0.9999106132645094	WITHOUT_CLASSIFICATION	8.938673549073234E-5	IMPLEMENTATION
/* $.: last read line number */	WITHOUT_CLASSIFICATION	0.9998885822078127	WITHOUT_CLASSIFICATION	1.1141779218728746E-4	IMPLEMENTATION
/* $=: ignorecase */	WITHOUT_CLASSIFICATION	0.9998554552290447	WITHOUT_CLASSIFICATION	1.4454477095533343E-4	IMPLEMENTATION
/* $:: load path */	WITHOUT_CLASSIFICATION	0.999775199200664	WITHOUT_CLASSIFICATION	2.248007993359195E-4	IMPLEMENTATION
/* $<: reading filename */	WITHOUT_CLASSIFICATION	0.9999022258907856	WITHOUT_CLASSIFICATION	9.777410921450994E-5	IMPLEMENTATION
/* $": already loaded files */	WITHOUT_CLASSIFICATION	0.9998992707584725	WITHOUT_CLASSIFICATION	1.0072924152746127E-4	IMPLEMENTATION
/* $&: last match */	WITHOUT_CLASSIFICATION	0.9997927576991883	WITHOUT_CLASSIFICATION	2.0724230081162917E-4	IMPLEMENTATION
/* $`: string before last match */	WITHOUT_CLASSIFICATION	0.9999234406529213	WITHOUT_CLASSIFICATION	7.655934707867646E-5	IMPLEMENTATION
/* $': string after last match */	WITHOUT_CLASSIFICATION	0.9999147031621426	WITHOUT_CLASSIFICATION	8.52968378574396E-5	IMPLEMENTATION
// methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop	WITHOUT_CLASSIFICATION	0.9998943852611653	WITHOUT_CLASSIFICATION	1.0561473883477233E-4	IMPLEMENTATION
/* See if it is a reserved word.  */	WITHOUT_CLASSIFICATION	0.9998800822448555	WITHOUT_CLASSIFICATION	1.1991775514448218E-4	IMPLEMENTATION
// enum lex_state	WITHOUT_CLASSIFICATION	0.9997543001942762	WITHOUT_CLASSIFICATION	2.4569980572375935E-4	IMPLEMENTATION
// block (primary)	WITHOUT_CLASSIFICATION	0.9997514792733176	WITHOUT_CLASSIFICATION	2.4852072668239727E-4	IMPLEMENTATION
// block (expr)	WITHOUT_CLASSIFICATION	0.9997477593529327	WITHOUT_CLASSIFICATION	2.5224064706727946E-4	IMPLEMENTATION
// hash	WITHOUT_CLASSIFICATION	0.9960090972929309	WITHOUT_CLASSIFICATION	0.003990902707069098	IMPLEMENTATION
// ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.	WITHOUT_CLASSIFICATION	0.9994809689653897	WITHOUT_CLASSIFICATION	5.190310346102254E-4	IMPLEMENTATION
// FIXME: peek('u') utf8 stuff for 1.9	WITHOUT_CLASSIFICATION	0.9997652897583262	WITHOUT_CLASSIFICATION	2.347102416736367E-4	IMPLEMENTATION
// We don't append '+' since Java number parser gets confused	WITHOUT_CLASSIFICATION	0.9999400870771935	WITHOUT_CLASSIFICATION	5.991292280651463E-5	IMPLEMENTATION
//  hexadecimal	WITHOUT_CLASSIFICATION	0.9997556097831554	WITHOUT_CLASSIFICATION	2.4439021684452864E-4	IMPLEMENTATION
// binary	WITHOUT_CLASSIFICATION	0.9964624849826859	WITHOUT_CLASSIFICATION	0.0035375150173140675	IMPLEMENTATION
// decimal	WITHOUT_CLASSIFICATION	0.9961957365552498	WITHOUT_CLASSIFICATION	0.0038042634447502457	IMPLEMENTATION
//Octal	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
//  '_' in number just ignored	WITHOUT_CLASSIFICATION	0.9999596320652613	WITHOUT_CLASSIFICATION	4.036793473883156E-5	IMPLEMENTATION
// backslash	WITHOUT_CLASSIFICATION	0.9997606780482711	WITHOUT_CLASSIFICATION	2.3932195172902095E-4	IMPLEMENTATION
// newline	WITHOUT_CLASSIFICATION	0.9965673991654903	WITHOUT_CLASSIFICATION	0.0034326008345097483	IMPLEMENTATION
// horizontal tab	WITHOUT_CLASSIFICATION	0.9998369167533658	WITHOUT_CLASSIFICATION	1.6308324663415712E-4	IMPLEMENTATION
// form feed	WITHOUT_CLASSIFICATION	0.9997861487004559	WITHOUT_CLASSIFICATION	2.1385129954396522E-4	IMPLEMENTATION
// vertical tab	WITHOUT_CLASSIFICATION	0.9998381194477323	WITHOUT_CLASSIFICATION	1.6188055226771953E-4	IMPLEMENTATION
// alarm(bell)	WITHOUT_CLASSIFICATION	0.9997515399162304	WITHOUT_CLASSIFICATION	2.4846008376949665E-4	IMPLEMENTATION
// escape	WITHOUT_CLASSIFICATION	0.9960618777521706	WITHOUT_CLASSIFICATION	0.003938122247829382	IMPLEMENTATION
// hex constant	WITHOUT_CLASSIFICATION	0.9997767464378108	WITHOUT_CLASSIFICATION	2.2325356218923142E-4	IMPLEMENTATION
//char hexValue = scanHex(2);	WITHOUT_CLASSIFICATION	0.9998075205702445	WITHOUT_CLASSIFICATION	1.924794297554731E-4	IMPLEMENTATION
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9998580453300662	WITHOUT_CLASSIFICATION	1.419546699338485E-4	IMPLEMENTATION
// space	WITHOUT_CLASSIFICATION	0.9961825422342122	WITHOUT_CLASSIFICATION	0.003817457765787738	IMPLEMENTATION
// Where we started this marker match	WITHOUT_CLASSIFICATION	0.9998687375576999	WITHOUT_CLASSIFICATION	1.3126244230018047E-4	IMPLEMENTATION
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999939456364925	WITHOUT_CLASSIFICATION	6.054363507531965E-6	IMPLEMENTATION
// We use offset here to keep track of extra newlines for windows	WITHOUT_CLASSIFICATION	0.9998860550122347	WITHOUT_CLASSIFICATION	1.139449877652333E-4	IMPLEMENTATION
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9998580453300662	WITHOUT_CLASSIFICATION	1.419546699338485E-4	IMPLEMENTATION
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9998300425605371	WITHOUT_CLASSIFICATION	1.6995743946293865E-4	IMPLEMENTATION
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9998300425605371	WITHOUT_CLASSIFICATION	1.6995743946293865E-4	IMPLEMENTATION
// Where we get our newest char's	WITHOUT_CLASSIFICATION	0.9998562099382894	WITHOUT_CLASSIFICATION	1.4379006171064953E-4	IMPLEMENTATION
// Our readback/pushback buffer.	WITHOUT_CLASSIFICATION	0.9998352312511434	WITHOUT_CLASSIFICATION	1.6476874885668733E-4	IMPLEMENTATION
// index of last character in pushback buffer	WITHOUT_CLASSIFICATION	0.9998976678529817	WITHOUT_CLASSIFICATION	1.0233214701826571E-4	IMPLEMENTATION
// Character read before previous read	WITHOUT_CLASSIFICATION	0.9999094120481609	WITHOUT_CLASSIFICATION	9.05879518391217E-5	IMPLEMENTATION
// keep value of twoAgo around so we can restore after we unread	WITHOUT_CLASSIFICATION	0.9998854689943636	WITHOUT_CLASSIFICATION	1.1453100563643344E-4	IMPLEMENTATION
// NetProtocolBufferedIOLibrary	WITHOUT_CLASSIFICATION	0.9998296519044036	WITHOUT_CLASSIFICATION	1.7034809559636247E-4	IMPLEMENTATION
// BigDecimalLibrary	WITHOUT_CLASSIFICATION	0.9997566642931531	WITHOUT_CLASSIFICATION	2.4333570684678747E-4	IMPLEMENTATION
// TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. // We did it here for now	WITHOUT_CLASSIFICATION	0.9431595919130729	WITHOUT_CLASSIFICATION	0.05684040808692718	IMPLEMENTATION
// Ruby's designation for some platforms, minus version numbers in some cases	WITHOUT_CLASSIFICATION	0.9999159900528733	WITHOUT_CLASSIFICATION	8.400994712665097E-5	IMPLEMENTATION
// that's what JDK5 produces on Windows Vista	WITHOUT_CLASSIFICATION	0.9998394163522911	WITHOUT_CLASSIFICATION	1.6058364770889181E-4	IMPLEMENTATION
// Rubygems is too specific on host cpu so until we have real need lets default to universal //setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));	WITHOUT_CLASSIFICATION	0.9999696572358373	WITHOUT_CLASSIFICATION	3.0342764162753737E-5	IMPLEMENTATION
// Our shell scripts pass in non-canonicalized paths, but even if we didn't // anyone who did would become unhappy because Ruby apps expect no relative // operators in the pathname (rubygems, for example).	WITHOUT_CLASSIFICATION	0.9999756124148722	WITHOUT_CLASSIFICATION	2.438758512777069E-5	IMPLEMENTATION
// this set is only for darwin	WITHOUT_CLASSIFICATION	0.9999065405568204	WITHOUT_CLASSIFICATION	9.345944317953815E-5	IMPLEMENTATION
// DigestLibrary	WITHOUT_CLASSIFICATION	0.9997535244552982	WITHOUT_CLASSIFICATION	2.4647554470173924E-4	IMPLEMENTATION
// all errors, just info; do not prevent loading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9996624830611601	WITHOUT_CLASSIFICATION	3.3751693883991347E-4	IMPLEMENTATION
// all errors, just info; do not prevent unloading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9997867999568261	WITHOUT_CLASSIFICATION	2.1320004317398837E-4	IMPLEMENTATION
// do nothing, return dummy version below	WITHOUT_CLASSIFICATION	0.9999850425058914	WITHOUT_CLASSIFICATION	1.4957494108587312E-5	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9997515399162304	WITHOUT_CLASSIFICATION	2.4846008376949665E-4	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9997515399162304	WITHOUT_CLASSIFICATION	2.4846008376949665E-4	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9997515399162304	WITHOUT_CLASSIFICATION	2.4846008376949665E-4	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9997515399162304	WITHOUT_CLASSIFICATION	2.4846008376949665E-4	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9997515399162304	WITHOUT_CLASSIFICATION	2.4846008376949665E-4	IMPLEMENTATION
// line 329	WITHOUT_CLASSIFICATION	0.9997668231303292	WITHOUT_CLASSIFICATION	2.3317686967070443E-4	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999277658272073	WITHOUT_CLASSIFICATION	7.223417279267725E-5	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9997467600745884	WITHOUT_CLASSIFICATION	2.5323992541157695E-4	IMPLEMENTATION
// dynamically increase	WITHOUT_CLASSIFICATION	0.9998520754253577	WITHOUT_CLASSIFICATION	1.4792457464235937E-4	IMPLEMENTATION
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9999323830743176	WITHOUT_CLASSIFICATION	6.761692568239829E-5	IMPLEMENTATION
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9998720453138188	WITHOUT_CLASSIFICATION	1.27954686181154E-4	IMPLEMENTATION
// shift to yyN	WITHOUT_CLASSIFICATION	0.9997576192439193	WITHOUT_CLASSIFICATION	2.4238075608067715E-4	IMPLEMENTATION
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9997549852848282	WITHOUT_CLASSIFICATION	2.45014715171797E-4	IMPLEMENTATION
// leave stack alone	WITHOUT_CLASSIFICATION	0.9997754912549324	WITHOUT_CLASSIFICATION	2.24508745067521E-4	IMPLEMENTATION
// line 271	WITHOUT_CLASSIFICATION	0.9997668108832038	WITHOUT_CLASSIFICATION	2.331891167961489E-4	IMPLEMENTATION
// line 274	WITHOUT_CLASSIFICATION	0.9997668108832038	WITHOUT_CLASSIFICATION	2.331891167961489E-4	IMPLEMENTATION
// line 303	WITHOUT_CLASSIFICATION	0.9997668231303292	WITHOUT_CLASSIFICATION	2.3317686967070443E-4	IMPLEMENTATION
// line 311	WITHOUT_CLASSIFICATION	0.9997669838678022	WITHOUT_CLASSIFICATION	2.3301613219769632E-4	IMPLEMENTATION
// line 314	WITHOUT_CLASSIFICATION	0.9997669838678022	WITHOUT_CLASSIFICATION	2.3301613219769632E-4	IMPLEMENTATION
// line 317	WITHOUT_CLASSIFICATION	0.9997671980121271	WITHOUT_CLASSIFICATION	2.328019878728292E-4	IMPLEMENTATION
// line 332	WITHOUT_CLASSIFICATION	0.9997668231303292	WITHOUT_CLASSIFICATION	2.3317686967070443E-4	IMPLEMENTATION
// line 338	WITHOUT_CLASSIFICATION	0.9997668231303292	WITHOUT_CLASSIFICATION	2.3317686967070443E-4	IMPLEMENTATION
// line 341	WITHOUT_CLASSIFICATION	0.9997668231303292	WITHOUT_CLASSIFICATION	2.3317686967070443E-4	IMPLEMENTATION
// line 344	WITHOUT_CLASSIFICATION	0.9997668231303292	WITHOUT_CLASSIFICATION	2.3317686967070443E-4	IMPLEMENTATION
// line 351	WITHOUT_CLASSIFICATION	0.9997668231303292	WITHOUT_CLASSIFICATION	2.3317686967070443E-4	IMPLEMENTATION
// line 358	WITHOUT_CLASSIFICATION	0.9997668231303292	WITHOUT_CLASSIFICATION	2.3317686967070443E-4	IMPLEMENTATION
// line 367	WITHOUT_CLASSIFICATION	0.9997668231303292	WITHOUT_CLASSIFICATION	2.3317686967070443E-4	IMPLEMENTATION
// line 372	WITHOUT_CLASSIFICATION	0.9997668231303292	WITHOUT_CLASSIFICATION	2.3317686967070443E-4	IMPLEMENTATION
// line 378	WITHOUT_CLASSIFICATION	0.9997668231303292	WITHOUT_CLASSIFICATION	2.3317686967070443E-4	IMPLEMENTATION
// line 382	WITHOUT_CLASSIFICATION	0.9997668231303292	WITHOUT_CLASSIFICATION	2.3317686967070443E-4	IMPLEMENTATION
// line 407	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 411	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 414	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 417	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 420	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 426	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 434	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 443	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 446	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 452	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 457	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 464	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 467	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 470	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 479	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 484	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 486	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 492	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 498	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 501	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 504	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 507	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 510	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 519	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 525	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9997467600745884	WITHOUT_CLASSIFICATION	2.5323992541157695E-4	IMPLEMENTATION
// line 537	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 540	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 543	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 546	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 556	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 559	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 563	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 566	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 569	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 575	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 578	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 587	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 596	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 604	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 607	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 610	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 613	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 616	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 634	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 638	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 643	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 646	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 655	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 660	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 667	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 670	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 672	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 696	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 701	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 717	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 720	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 726	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 729	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 732	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 735	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 738	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 751	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 754	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 757	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 760	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 763	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 769	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 772	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 775	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 782	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 788	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 791	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 794	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 797	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 803	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 806	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 809	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 815	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 818	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 821	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 824	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 830	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 833	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 836	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 839	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 842	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 848	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 852	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 858	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 861	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 868	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 871	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 876	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 879	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 883	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 893	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 896	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 899	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 903	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 907	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 915	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 920	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 923	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 926	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 932	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 936	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 940	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 944	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 948	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 956	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 960	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 964	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 967	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 972	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 978	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 980	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 984	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 986	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 996	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 1001	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1004	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1008	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1014	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1029	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1032	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1034	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1045	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1048	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1051	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1058	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1070	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1073	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1076	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1079	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1082	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1089	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1097	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1100	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1103	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1107	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1111	WITHOUT_CLASSIFICATION	0.9997669599756204	WITHOUT_CLASSIFICATION	2.330400243796857E-4	IMPLEMENTATION
// line 1113	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1115	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1119	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1130	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1133	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1135	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1137	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1140	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1151	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1154	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1158	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1164	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1175	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1178	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1187	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1189	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1193	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1204	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1207	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1210	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1214	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1234	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1239	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1243	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1247	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1251	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1263	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1269	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1280	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1283	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1290	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1296	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1299	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1302	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1309	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1313	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1315	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1320	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1328	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1335	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1348	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1352	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1358	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1374	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1381	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1387	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1392	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1415	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1431	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1434	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1440	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1443	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1453	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1456	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1462	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1465	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1470	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1477	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1480	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1485	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1488	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1496	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1502	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1510	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1513	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1516	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1533	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1550	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1553	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1556	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1565	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1568	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1571	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1574	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1577	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1587	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1595	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1598	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1600	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1609	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1623	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1626	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1629	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1632	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1638	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1641	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1644	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1649	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1655	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1658	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1661	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1672	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1677	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1687	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1694	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1705	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1708	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1725	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1733	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1742	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1745	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1749	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1757	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1769	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1772	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1775	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1784	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1808	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1814	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1818	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1822	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
/* force for args */	WITHOUT_CLASSIFICATION	0.9997745894492469	WITHOUT_CLASSIFICATION	2.2541055075303579E-4	IMPLEMENTATION
/*XXX 0;*/	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
/*                      $$ = $3;*/	WITHOUT_CLASSIFICATION	0.9999488983783519	WITHOUT_CLASSIFICATION	5.110162164816762E-5	IMPLEMENTATION
/*                  }*/	WITHOUT_CLASSIFICATION	0.9999448440895189	WITHOUT_CLASSIFICATION	5.515591048116555E-5	IMPLEMENTATION
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9997805568737481	WITHOUT_CLASSIFICATION	2.1944312625193612E-4	IMPLEMENTATION
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9999152559994112	WITHOUT_CLASSIFICATION	8.474400058879788E-5	IMPLEMENTATION
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9998521465209086	WITHOUT_CLASSIFICATION	1.4785347909133812E-4	IMPLEMENTATION
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9998521465209086	WITHOUT_CLASSIFICATION	1.4785347909133812E-4	IMPLEMENTATION
/* NOEX_PRIVATE for toplevel */	WITHOUT_CLASSIFICATION	0.9998403436845147	WITHOUT_CLASSIFICATION	1.5965631548534E-4	IMPLEMENTATION
/*mirko: check*/	WITHOUT_CLASSIFICATION	0.9997261597159328	WITHOUT_CLASSIFICATION	2.7384028406720885E-4	IMPLEMENTATION
/* Include pipes on multiple arg type*/	WITHOUT_CLASSIFICATION	0.9998409590723337	WITHOUT_CLASSIFICATION	1.590409276663717E-4	IMPLEMENTATION
// line 529	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9998077004297219	WITHOUT_CLASSIFICATION	1.9229957027803692E-4	IMPLEMENTATION
/* XXX*/	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
/* zero length array */	WITHOUT_CLASSIFICATION	0.9998422125255719	WITHOUT_CLASSIFICATION	1.5778747442800605E-4	IMPLEMENTATION
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.999816658915658	WITHOUT_CLASSIFICATION	1.8334108434211723E-4	IMPLEMENTATION
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9997985357924473	WITHOUT_CLASSIFICATION	2.0146420755266656E-4	IMPLEMENTATION
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9998103972813086	WITHOUT_CLASSIFICATION	1.8960271869141075E-4	IMPLEMENTATION
// line 1827 "DefaultRubyParser.y"	WITHOUT_CLASSIFICATION	0.9998765544639762	WITHOUT_CLASSIFICATION	1.2344553602382127E-4	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999659729253538	WITHOUT_CLASSIFICATION	3.4027074646219454E-5	IMPLEMENTATION
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9998255513972308	WITHOUT_CLASSIFICATION	1.7444860276906096E-4	IMPLEMENTATION
// line 7713 "-"	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.332840895662508E-4	IMPLEMENTATION
// local scopes are argument scopes by default	WITHOUT_CLASSIFICATION	0.9999574366933988	WITHOUT_CLASSIFICATION	4.2563306601231504E-5	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999299107460061	WITHOUT_CLASSIFICATION	7.008925399390302E-5	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999299107460061	WITHOUT_CLASSIFICATION	7.008925399390302E-5	IMPLEMENTATION
// We know this is a block scope because a local scope cannot be within a local scope // If topScope was itself it would have created a LocalAsgnNode above.	WITHOUT_CLASSIFICATION	0.9999674343083913	WITHOUT_CLASSIFICATION	3.2565691608716746E-5	IMPLEMENTATION
// ENEBO: 1.9 has CURR nodes for local/block variables.  We don't.  I believe we follow proper logic	WITHOUT_CLASSIFICATION	0.9998605204702065	WITHOUT_CLASSIFICATION	1.394795297936505E-4	IMPLEMENTATION
// odd...but it is odd in ruby too.	WITHOUT_CLASSIFICATION	0.9998337432126244	WITHOUT_CLASSIFICATION	1.6625678737558467E-4	IMPLEMENTATION
// What linenumber will the source think it starts from?	WITHOUT_CLASSIFICATION	0.9999117550410336	WITHOUT_CLASSIFICATION	8.824495896636468E-5	IMPLEMENTATION
// Is this inline source (aka -e "...source...")	WITHOUT_CLASSIFICATION	0.9998153956419709	WITHOUT_CLASSIFICATION	1.846043580291302E-4	IMPLEMENTATION
// We parse evals more often in source so assume an eval parse.	WITHOUT_CLASSIFICATION	0.9998461679347196	WITHOUT_CLASSIFICATION	1.5383206528045806E-4	IMPLEMENTATION
// Should positions added extra IDE-friendly information and leave in all newline nodes	WITHOUT_CLASSIFICATION	0.9999527673821204	WITHOUT_CLASSIFICATION	4.723261787956692E-5	IMPLEMENTATION
// Will parser parse Duby grammar Extensions	WITHOUT_CLASSIFICATION	0.999849926169678	WITHOUT_CLASSIFICATION	1.5007383032195816E-4	IMPLEMENTATION
// Should we display extra debug information while parsing?	WITHOUT_CLASSIFICATION	0.9998745338293885	WITHOUT_CLASSIFICATION	1.254661706114695E-4	IMPLEMENTATION
// __END__ marker offset (-1 means none present)	WITHOUT_CLASSIFICATION	0.9997611086195389	WITHOUT_CLASSIFICATION	2.3889138046114374E-4	IMPLEMENTATION
// Parser states:	WITHOUT_CLASSIFICATION	0.9997829454712236	WITHOUT_CLASSIFICATION	2.1705452877642933E-4	IMPLEMENTATION
// Is the parser current within a singleton (value is number of nested singletons)	WITHOUT_CLASSIFICATION	0.9999602118439583	WITHOUT_CLASSIFICATION	3.978815604165313E-5	IMPLEMENTATION
// Is the parser currently within a method definition	WITHOUT_CLASSIFICATION	0.9999369634673696	WITHOUT_CLASSIFICATION	6.303653263038307E-5	IMPLEMENTATION
// LOCALVAR	WITHOUT_CLASSIFICATION	0.9997519084483378	WITHOUT_CLASSIFICATION	2.4809155166216726E-4	IMPLEMENTATION
// CONSTANT	WITHOUT_CLASSIFICATION	0.9997539890506563	WITHOUT_CLASSIFICATION	2.4601094934373395E-4	IMPLEMENTATION
// INSTANCE VARIABLE	WITHOUT_CLASSIFICATION	0.9997524491550162	WITHOUT_CLASSIFICATION	2.4755084498386557E-4	IMPLEMENTATION
// Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])	WITHOUT_CLASSIFICATION	0.9999253598242561	WITHOUT_CLASSIFICATION	7.464017574384788E-5	IMPLEMENTATION
/* MRI: block_append */	WITHOUT_CLASSIFICATION	0.9998066200884054	WITHOUT_CLASSIFICATION	1.9337991159455373E-4	IMPLEMENTATION
// Reduces overhead in interp by not set position every single line we encounter. 	WITHOUT_CLASSIFICATION	0.9999136785087244	WITHOUT_CLASSIFICATION	8.632149127559926E-5	IMPLEMENTATION
// Assumption: tail is never a list node	WITHOUT_CLASSIFICATION	0.9997107142057889	WITHOUT_CLASSIFICATION	2.892857942110942E-4	IMPLEMENTATION
//        return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));	WITHOUT_CLASSIFICATION	0.9999846582438277	WITHOUT_CLASSIFICATION	1.534175617238037E-5	IMPLEMENTATION
// Node	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9998542619074191	WITHOUT_CLASSIFICATION	1.4573809258096605E-4	IMPLEMENTATION
/*case CONSTNODE:                handleUselessWarn(node, "a constant"); return;*/	WITHOUT_CLASSIFICATION	0.9999234424559557	WITHOUT_CLASSIFICATION	7.65575440443449E-5	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9998542619074191	WITHOUT_CLASSIFICATION	1.4573809258096605E-4	IMPLEMENTATION
/*case CLASSNODE: case COLON2NODE:                handleUselessWarn(node, "::"); return;*/	WITHOUT_CLASSIFICATION	0.9999245411152899	WITHOUT_CLASSIFICATION	7.545888471000237E-5	IMPLEMENTATION
/*case SELFNODE:                handleUselessWarn(node, "self"); return;*/	WITHOUT_CLASSIFICATION	0.9999124621263716	WITHOUT_CLASSIFICATION	8.753787362833665E-5	IMPLEMENTATION
// FIXME: DSTR,EVSTR,STR: warning "string literal in condition"	WITHOUT_CLASSIFICATION	0.9998472213293488	WITHOUT_CLASSIFICATION	1.527786706511183E-4	IMPLEMENTATION
/* MRI: range_op */	WITHOUT_CLASSIFICATION	0.9997486072008029	WITHOUT_CLASSIFICATION	2.5139279919698373E-4	IMPLEMENTATION
// Block and block pass passed in at same time....uh oh	WITHOUT_CLASSIFICATION	0.9998815802905271	WITHOUT_CLASSIFICATION	1.1841970947287199E-4	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
// tail must be EvStrNode at this point 	WITHOUT_CLASSIFICATION	0.9998682413258682	WITHOUT_CLASSIFICATION	1.317586741317625E-4	IMPLEMENTATION
//Do not add an empty string node	WITHOUT_CLASSIFICATION	0.9999584105459829	WITHOUT_CLASSIFICATION	4.1589454017235745E-5	IMPLEMENTATION
// Zero-Argument declaration	WITHOUT_CLASSIFICATION	0.9998689327396902	WITHOUT_CLASSIFICATION	1.3106726030973382E-4	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9997515399162304	WITHOUT_CLASSIFICATION	2.4846008376949665E-4	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9997515399162304	WITHOUT_CLASSIFICATION	2.4846008376949665E-4	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9997515399162304	WITHOUT_CLASSIFICATION	2.4846008376949665E-4	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9997515399162304	WITHOUT_CLASSIFICATION	2.4846008376949665E-4	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9997515399162304	WITHOUT_CLASSIFICATION	2.4846008376949665E-4	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9997515399162304	WITHOUT_CLASSIFICATION	2.4846008376949665E-4	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9997515399162304	WITHOUT_CLASSIFICATION	2.4846008376949665E-4	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9997515399162304	WITHOUT_CLASSIFICATION	2.4846008376949665E-4	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9997515399162304	WITHOUT_CLASSIFICATION	2.4846008376949665E-4	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9997515399162304	WITHOUT_CLASSIFICATION	2.4846008376949665E-4	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9997515399162304	WITHOUT_CLASSIFICATION	2.4846008376949665E-4	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9997515399162304	WITHOUT_CLASSIFICATION	2.4846008376949665E-4	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9997515399162304	WITHOUT_CLASSIFICATION	2.4846008376949665E-4	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9997515399162304	WITHOUT_CLASSIFICATION	2.4846008376949665E-4	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9997515399162304	WITHOUT_CLASSIFICATION	2.4846008376949665E-4	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9997515399162304	WITHOUT_CLASSIFICATION	2.4846008376949665E-4	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9997515399162304	WITHOUT_CLASSIFICATION	2.4846008376949665E-4	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9997515399162304	WITHOUT_CLASSIFICATION	2.4846008376949665E-4	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9997515399162304	WITHOUT_CLASSIFICATION	2.4846008376949665E-4	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9997515399162304	WITHOUT_CLASSIFICATION	2.4846008376949665E-4	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9997515399162304	WITHOUT_CLASSIFICATION	2.4846008376949665E-4	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9997515399162304	WITHOUT_CLASSIFICATION	2.4846008376949665E-4	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9997467600745884	WITHOUT_CLASSIFICATION	2.5323992541157695E-4	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9997467600745884	WITHOUT_CLASSIFICATION	2.5323992541157695E-4	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9997467600745884	WITHOUT_CLASSIFICATION	2.5323992541157695E-4	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9997467600745884	WITHOUT_CLASSIFICATION	2.5323992541157695E-4	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9997467600745884	WITHOUT_CLASSIFICATION	2.5323992541157695E-4	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9997467600745884	WITHOUT_CLASSIFICATION	2.5323992541157695E-4	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9997467600745884	WITHOUT_CLASSIFICATION	2.5323992541157695E-4	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9997467600745884	WITHOUT_CLASSIFICATION	2.5323992541157695E-4	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9997467600745884	WITHOUT_CLASSIFICATION	2.5323992541157695E-4	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9997467600745884	WITHOUT_CLASSIFICATION	2.5323992541157695E-4	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9997467600745884	WITHOUT_CLASSIFICATION	2.5323992541157695E-4	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9997467600745884	WITHOUT_CLASSIFICATION	2.5323992541157695E-4	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9997467600745884	WITHOUT_CLASSIFICATION	2.5323992541157695E-4	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9997467600745884	WITHOUT_CLASSIFICATION	2.5323992541157695E-4	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9997467600745884	WITHOUT_CLASSIFICATION	2.5323992541157695E-4	IMPLEMENTATION
// dynamically increase	WITHOUT_CLASSIFICATION	0.9998520754253577	WITHOUT_CLASSIFICATION	1.4792457464235937E-4	IMPLEMENTATION
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9998720453138188	WITHOUT_CLASSIFICATION	1.27954686181154E-4	IMPLEMENTATION
// shift to yyN	WITHOUT_CLASSIFICATION	0.9997576192439193	WITHOUT_CLASSIFICATION	2.4238075608067715E-4	IMPLEMENTATION
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9997549852848282	WITHOUT_CLASSIFICATION	2.45014715171797E-4	IMPLEMENTATION
// leave stack alone	WITHOUT_CLASSIFICATION	0.9997754912549324	WITHOUT_CLASSIFICATION	2.24508745067521E-4	IMPLEMENTATION
// line 321	WITHOUT_CLASSIFICATION	0.9997668231303292	WITHOUT_CLASSIFICATION	2.3317686967070443E-4	IMPLEMENTATION
// line 351	WITHOUT_CLASSIFICATION	0.9997668231303292	WITHOUT_CLASSIFICATION	2.3317686967070443E-4	IMPLEMENTATION
// line 382	WITHOUT_CLASSIFICATION	0.9997668231303292	WITHOUT_CLASSIFICATION	2.3317686967070443E-4	IMPLEMENTATION
// line 417	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 420	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 423	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 426	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 280	WITHOUT_CLASSIFICATION	0.9997671429835898	WITHOUT_CLASSIFICATION	2.3285701641003872E-4	IMPLEMENTATION
// line 283	WITHOUT_CLASSIFICATION	0.9997669532698847	WITHOUT_CLASSIFICATION	2.3304673011523204E-4	IMPLEMENTATION
// line 296	WITHOUT_CLASSIFICATION	0.9997668108832038	WITHOUT_CLASSIFICATION	2.331891167961489E-4	IMPLEMENTATION
// line 324	WITHOUT_CLASSIFICATION	0.9997668231303292	WITHOUT_CLASSIFICATION	2.3317686967070443E-4	IMPLEMENTATION
// line 327	WITHOUT_CLASSIFICATION	0.9997668231303292	WITHOUT_CLASSIFICATION	2.3317686967070443E-4	IMPLEMENTATION
// line 331	WITHOUT_CLASSIFICATION	0.9997668231303292	WITHOUT_CLASSIFICATION	2.3317686967070443E-4	IMPLEMENTATION
// line 333	WITHOUT_CLASSIFICATION	0.9997668231303292	WITHOUT_CLASSIFICATION	2.3317686967070443E-4	IMPLEMENTATION
// line 336	WITHOUT_CLASSIFICATION	0.9997668231303292	WITHOUT_CLASSIFICATION	2.3317686967070443E-4	IMPLEMENTATION
// line 342	WITHOUT_CLASSIFICATION	0.9997668231303292	WITHOUT_CLASSIFICATION	2.3317686967070443E-4	IMPLEMENTATION
// line 345	WITHOUT_CLASSIFICATION	0.9997668231303292	WITHOUT_CLASSIFICATION	2.3317686967070443E-4	IMPLEMENTATION
// line 348	WITHOUT_CLASSIFICATION	0.9997668231303292	WITHOUT_CLASSIFICATION	2.3317686967070443E-4	IMPLEMENTATION
// line 354	WITHOUT_CLASSIFICATION	0.9997668231303292	WITHOUT_CLASSIFICATION	2.3317686967070443E-4	IMPLEMENTATION
// line 368	WITHOUT_CLASSIFICATION	0.9997668231303292	WITHOUT_CLASSIFICATION	2.3317686967070443E-4	IMPLEMENTATION
// line 377	WITHOUT_CLASSIFICATION	0.9997668231303292	WITHOUT_CLASSIFICATION	2.3317686967070443E-4	IMPLEMENTATION
// line 388	WITHOUT_CLASSIFICATION	0.9997668231303292	WITHOUT_CLASSIFICATION	2.3317686967070443E-4	IMPLEMENTATION
// line 392	WITHOUT_CLASSIFICATION	0.9997668231303292	WITHOUT_CLASSIFICATION	2.3317686967070443E-4	IMPLEMENTATION
// line 397	WITHOUT_CLASSIFICATION	0.9997668231303292	WITHOUT_CLASSIFICATION	2.3317686967070443E-4	IMPLEMENTATION
// line 429	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 432	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 436	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 445	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 448	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 454	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 459	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 466	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 469	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 478	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 481	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 488	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 494	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 497	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 503	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 506	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 509	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 512	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 521	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 526	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 540	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 543	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 546	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 566	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 610	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 672	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 691	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 696	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 772	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 782	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 785	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 788	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 791	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 534	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 549	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 552	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 558	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 561	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 571	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 574	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 579	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 586	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 589	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 592	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 595	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 598	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 623	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 627	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 630	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 633	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 639	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 648	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 657	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 661	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 666	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 678	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 682	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 688	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 699	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 706	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 708	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 727	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 737	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 753	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 779	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 801	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 808	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 811	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 817	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 842	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 845	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 848	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 893	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 899	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 932	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 944	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 960	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 980	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 1004	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1038	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 820	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 826	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 829	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 832	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 851	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 857	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 860	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 863	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 866	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 869	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 875	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 884	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 887	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 890	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 902	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 909	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 912	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 916	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 922	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 928	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 941	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 947	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 951	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 955	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 965	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 969	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 977	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 983	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 1013	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1023	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1035	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1041	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1043	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1054	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1057	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1060	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1069	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1075	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1105	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1111	WITHOUT_CLASSIFICATION	0.9997669599756204	WITHOUT_CLASSIFICATION	2.330400243796857E-4	IMPLEMENTATION
// line 1122	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1130	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1140	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1158	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1204	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1207	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1247	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1251	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1261	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1078	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1084	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1087	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1090	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1093	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1114	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1116	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1118	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1124	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1126	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1138	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1144	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1149	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1155	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1162	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1173	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1179	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1182	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1190	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1196	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1213	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1217	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1231	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1236	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1244	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1254	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1258	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1264	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1270	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1273	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1276	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1279	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1282	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1289	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1292	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1295	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1298	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1305	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1348	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1387	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1392	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1448	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1462	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1470	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1496	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1502	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1595	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1598	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1308	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1311	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1317	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1323	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1326	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1329	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1337	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1342	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1345	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1354	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1359	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1366	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1369	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1373	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1377	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1383	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1399	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1401	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1406	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1417	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1424	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1427	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1430	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1433	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1436	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1442	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1445	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1458	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1464	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1489	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1493	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1507	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1519	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1532	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1538	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1542	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1557	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1573	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1591	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1615	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1629	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1632	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1705	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1716	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1725	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1742	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1749	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1818	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1822	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1607	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1610	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1622	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1625	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1636	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1639	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1647	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1651	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1657	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1660	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1663	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1678	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1702	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1711	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1719	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1722	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1731	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1734	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1738	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1746	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1756	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1758	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1761	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1767	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1776	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1782	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1785	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1788	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1791	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1797	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1800	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1803	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1806	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1809	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1815	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1825	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1828	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1831	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1847	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9998521465209086	WITHOUT_CLASSIFICATION	1.4785347909133812E-4	IMPLEMENTATION
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9998521465209086	WITHOUT_CLASSIFICATION	1.4785347909133812E-4	IMPLEMENTATION
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9998077004297219	WITHOUT_CLASSIFICATION	1.9229957027803692E-4	IMPLEMENTATION
/* zero length array */	WITHOUT_CLASSIFICATION	0.9998422125255719	WITHOUT_CLASSIFICATION	1.5778747442800605E-4	IMPLEMENTATION
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.999816658915658	WITHOUT_CLASSIFICATION	1.8334108434211723E-4	IMPLEMENTATION
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9997985357924473	WITHOUT_CLASSIFICATION	2.0146420755266656E-4	IMPLEMENTATION
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9998103972813086	WITHOUT_CLASSIFICATION	1.8960271869141075E-4	IMPLEMENTATION
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9998419577772956	WITHOUT_CLASSIFICATION	1.5804222270434027E-4	IMPLEMENTATION
// line 1854	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1869	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1872	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1877	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1886	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1898	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1902	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1905	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1911	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1918	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1935	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1938	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1942	WITHOUT_CLASSIFICATION	0.9997651222402119	WITHOUT_CLASSIFICATION	2.3487775978824519E-4	IMPLEMENTATION
// line 1948	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1960	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1963	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1968	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1972	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1982	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1995	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 2000	WITHOUT_CLASSIFICATION	0.9997668516759128	WITHOUT_CLASSIFICATION	2.331483240871409E-4	IMPLEMENTATION
// line 2006	WITHOUT_CLASSIFICATION	0.9997668108832038	WITHOUT_CLASSIFICATION	2.331891167961489E-4	IMPLEMENTATION
// line 2010	WITHOUT_CLASSIFICATION	0.9997668108832038	WITHOUT_CLASSIFICATION	2.331891167961489E-4	IMPLEMENTATION
/* We may need to subtract addition offset off of first */	WITHOUT_CLASSIFICATION	0.9997803450005391	WITHOUT_CLASSIFICATION	2.1965499946087106E-4	IMPLEMENTATION
/* string fragment (we optimistically take one off in*/	WITHOUT_CLASSIFICATION	0.9998920772597681	WITHOUT_CLASSIFICATION	1.0792274023188695E-4	IMPLEMENTATION
/* ParserSupport.literal_concat).  Check token length*/	WITHOUT_CLASSIFICATION	0.9998524878862043	WITHOUT_CLASSIFICATION	1.4751211379569965E-4	IMPLEMENTATION
/* and subtract as neeeded.*/	WITHOUT_CLASSIFICATION	0.9998063542769914	WITHOUT_CLASSIFICATION	1.9364572300852774E-4	IMPLEMENTATION
/*                    $$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);  */	WITHOUT_CLASSIFICATION	0.9999691493987145	WITHOUT_CLASSIFICATION	3.085060128543357E-5	IMPLEMENTATION
/* ENEBO: arg surrounded by in_defined set/unset*/	WITHOUT_CLASSIFICATION	0.9998631231596664	WITHOUT_CLASSIFICATION	1.3687684033363858E-4	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999659729253538	WITHOUT_CLASSIFICATION	3.4027074646219454E-5	IMPLEMENTATION
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9998255513972308	WITHOUT_CLASSIFICATION	1.7444860276906096E-4	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999299107460061	WITHOUT_CLASSIFICATION	7.008925399390302E-5	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999299107460061	WITHOUT_CLASSIFICATION	7.008925399390302E-5	IMPLEMENTATION
/* ENEBO: Removed !compile_for_eval which probably is to reduce warnings*/	WITHOUT_CLASSIFICATION	0.9997847814623173	WITHOUT_CLASSIFICATION	2.1521853768269536E-4	IMPLEMENTATION
/* was $$ = null;*/	WITHOUT_CLASSIFICATION	0.9997713721934276	WITHOUT_CLASSIFICATION	2.2862780657242267E-4	IMPLEMENTATION
// line 2019 "Ruby19Parser.y"	WITHOUT_CLASSIFICATION	0.9998183639405568	WITHOUT_CLASSIFICATION	1.8163605944325267E-4	IMPLEMENTATION
// line 8143 "-"	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.332840895662508E-4	IMPLEMENTATION
// we know variables cannot be null since localstaticscope will create a 0 length one.	WITHOUT_CLASSIFICATION	0.999965086259567	WITHOUT_CLASSIFICATION	3.491374043288295E-5	IMPLEMENTATION
// No bit math to store level since we know level is zero for this case	WITHOUT_CLASSIFICATION	0.9999437250334485	WITHOUT_CLASSIFICATION	5.627496655143642E-5	IMPLEMENTATION
// Next immediate scope.  Variable and constant scoping rules make use of this variable // in different ways.	WITHOUT_CLASSIFICATION	0.9999556634258828	WITHOUT_CLASSIFICATION	4.433657411720404E-5	IMPLEMENTATION
// Live reference to module	WITHOUT_CLASSIFICATION	0.9999011231145909	WITHOUT_CLASSIFICATION	9.887688540911409E-5	IMPLEMENTATION
// Next CRef down the lexical structure	WITHOUT_CLASSIFICATION	0.9998889352487906	WITHOUT_CLASSIFICATION	1.1106475120932292E-4	IMPLEMENTATION
// Our name holder (offsets are assigned as variables are added	WITHOUT_CLASSIFICATION	0.9998824771423087	WITHOUT_CLASSIFICATION	1.17522857691326E-4	IMPLEMENTATION
// number of variables in this scope representing required arguments	WITHOUT_CLASSIFICATION	0.9999625421786703	WITHOUT_CLASSIFICATION	3.745782132962936E-5	IMPLEMENTATION
// number of variables in this scope representing optional arguments	WITHOUT_CLASSIFICATION	0.9999693979960711	WITHOUT_CLASSIFICATION	3.060200392898026E-5	IMPLEMENTATION
// index of variable that represents a "rest" arg	WITHOUT_CLASSIFICATION	0.9998076096058663	WITHOUT_CLASSIFICATION	1.9239039413360397E-4	IMPLEMENTATION
// Note that this object equality check is intentional, to ensure // the string and its interned version are the same object.	WITHOUT_CLASSIFICATION	0.99998751056192	WITHOUT_CLASSIFICATION	1.2489438080034129E-5	IMPLEMENTATION
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9998152351464585	WITHOUT_CLASSIFICATION	1.8476485354144154E-4	IMPLEMENTATION
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9998152351464585	WITHOUT_CLASSIFICATION	1.8476485354144154E-4	IMPLEMENTATION
/* Note: Only used by compiler until it can use getConstant again or use some other refactoring */	WITHOUT_CLASSIFICATION	0.9998982402847446	WITHOUT_CLASSIFICATION	1.0175971525530988E-4	IMPLEMENTATION
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999580236114367	WITHOUT_CLASSIFICATION	4.1976388563222036E-5	IMPLEMENTATION
/* Try and unload the autoload specified from internedName */	WITHOUT_CLASSIFICATION	0.9999197530404902	WITHOUT_CLASSIFICATION	8.024695950971611E-5	IMPLEMENTATION
// We override that the logic which uses this	WITHOUT_CLASSIFICATION	0.9998957515669373	WITHOUT_CLASSIFICATION	1.0424843306265702E-4	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999570119433085	WITHOUT_CLASSIFICATION	4.298805669136636E-5	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999684682490009	WITHOUT_CLASSIFICATION	3.153175099906764E-5	IMPLEMENTATION
// source extensions	WITHOUT_CLASSIFICATION	0.9998467753579364	WITHOUT_CLASSIFICATION	1.532246420636888E-4	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999684682490009	WITHOUT_CLASSIFICATION	3.153175099906764E-5	IMPLEMENTATION
// . Array given to rest should pass itself // . Array with rest + other args should extract array // . Array with multiple values and NO rest should extract args if there are more than one argument	WITHOUT_CLASSIFICATION	0.9998931098072515	WITHOUT_CLASSIFICATION	1.068901927484592E-4	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999510295938926	WITHOUT_CLASSIFICATION	4.8970406107428854E-5	IMPLEMENTATION
// Is this thread currently with in a function trace?	WITHOUT_CLASSIFICATION	0.9998031813345217	WITHOUT_CLASSIFICATION	1.968186654783452E-4	IMPLEMENTATION
// Is this thread currently doing an defined? defined should set things like $!	WITHOUT_CLASSIFICATION	0.9997849794329711	WITHOUT_CLASSIFICATION	2.1502056702888374E-4	IMPLEMENTATION
//private UnsynchronizedStack parentStack;	WITHOUT_CLASSIFICATION	0.999932337449082	WITHOUT_CLASSIFICATION	6.766255091791654E-5	IMPLEMENTATION
//private UnsynchronizedStack frameStack;	WITHOUT_CLASSIFICATION	0.99992642293905	WITHOUT_CLASSIFICATION	7.357706094996536E-5	IMPLEMENTATION
// List of active dynamic scopes.  Each of these may have captured other dynamic scopes // to implement closures.	WITHOUT_CLASSIFICATION	0.9827211681288662	WITHOUT_CLASSIFICATION	0.017278831871133774	IMPLEMENTATION
// File where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999007546904932	WITHOUT_CLASSIFICATION	9.924530950681956E-5	IMPLEMENTATION
// Line where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999080706689393	WITHOUT_CLASSIFICATION	9.192933106082867E-5	IMPLEMENTATION
// In certain places, like grep, we don't use real frames for the // call blocks. This has the effect of not setting the backref in // the correct frame - this delta is activated to the place where // the grep is running in so that the backref will be set in an // appropriate place.	WITHOUT_CLASSIFICATION	0.9999978185811857	WITHOUT_CLASSIFICATION	2.1814188141774867E-6	IMPLEMENTATION
// TOPLEVEL self and a few others want a top-level scope.  We create this one right // away and then pass it into top-level parse so it ends up being the top level.	WITHOUT_CLASSIFICATION	0.999897826248062	WITHOUT_CLASSIFICATION	1.0217375193796338E-4	IMPLEMENTATION
//////////////////// CATCH MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9999852493157588	WITHOUT_CLASSIFICATION	1.4750684241179939E-5	IMPLEMENTATION
//////////////////// FRAME MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9999852493157588	WITHOUT_CLASSIFICATION	1.4750684241179939E-5	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9999070909084891	WITHOUT_CLASSIFICATION	9.290909151096309E-5	IMPLEMENTATION
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9998242098927217	WITHOUT_CLASSIFICATION	1.7579010727833118E-4	IMPLEMENTATION
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9998242098927217	WITHOUT_CLASSIFICATION	1.7579010727833118E-4	IMPLEMENTATION
// look for mangling markers for compiled Ruby in method name	WITHOUT_CLASSIFICATION	0.9998801232649608	WITHOUT_CLASSIFICATION	1.1987673503923029E-4	IMPLEMENTATION
// if it's not a rescue or ensure, there's a frame associated, so decrement	WITHOUT_CLASSIFICATION	0.9999426083148667	WITHOUT_CLASSIFICATION	5.7391685133439104E-5	IMPLEMENTATION
// look for __file__ method name for compiled roots	WITHOUT_CLASSIFICATION	0.9998632895171832	WITHOUT_CLASSIFICATION	1.3671048281684793E-4	IMPLEMENTATION
// All entries following removed node can stay // in list, but all preceding ones need to be // cloned.	WITHOUT_CLASSIFICATION	0.9997626054414552	WITHOUT_CLASSIFICATION	2.3739455854471705E-4	IMPLEMENTATION
// required and optional only	WITHOUT_CLASSIFICATION	0.9998371780903639	WITHOUT_CLASSIFICATION	1.6282190963604482E-4	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999684682490009	WITHOUT_CLASSIFICATION	3.153175099906764E-5	IMPLEMENTATION
// look for mangling markers for bound, unframed methods in class name	WITHOUT_CLASSIFICATION	0.9999260377296343	WITHOUT_CLASSIFICATION	7.396227036573736E-5	IMPLEMENTATION
// set the binding's frame's "previous" file and line to current, so // trace will show who called the block	WITHOUT_CLASSIFICATION	0.9999679110982077	WITHOUT_CLASSIFICATION	3.208890179220503E-5	IMPLEMENTATION
// framed invokers will have Ruby frames associated with them	WITHOUT_CLASSIFICATION	0.9998953514889782	WITHOUT_CLASSIFICATION	1.046485110217496E-4	IMPLEMENTATION
// look for mangling markers for bound, framed methods in class name	WITHOUT_CLASSIFICATION	0.9999284804236243	WITHOUT_CLASSIFICATION	7.151957637578002E-5	IMPLEMENTATION
// unframed invokers have no Ruby frames, so pull from class name // but use current frame as file and line	WITHOUT_CLASSIFICATION	0.999963641250266	WITHOUT_CLASSIFICATION	3.635874973390353E-5	IMPLEMENTATION
// try to mine out a Ruby frame using our list of interpreter entry-point markers	WITHOUT_CLASSIFICATION	0.999952101274612	WITHOUT_CLASSIFICATION	4.7898725388056535E-5	IMPLEMENTATION
// Frame matches one of our markers for "interpreted" calls	WITHOUT_CLASSIFICATION	0.9998789223105948	WITHOUT_CLASSIFICATION	1.2107768940517376E-4	IMPLEMENTATION
// Frame is extraneous runtime information, skip it unless debug	WITHOUT_CLASSIFICATION	0.9998910888807555	WITHOUT_CLASSIFICATION	1.0891111924454887E-4	IMPLEMENTATION
/*     * Determine what sort of assigner should be used for the provided 'iter' (e.g. block).     * Assigner provides just the right logic for assigning values to local parameters of the     * block.     *     * This method also has a second optimization which is to set 'noargblock' in the case that     * the block is a block which accepts no arguments.  The primary reason for this second     * optimization is that in the case of a yield with a RubyArray we will bypass some logic     * processing the RubyArray into a proper form (only to then not do anythign with it).  A     * secondary benefit is that a simple boolean seems to optimize by hotspot much faster     * than the zero arg assigner.     */	WITHOUT_CLASSIFICATION	0.9999991907516347	WITHOUT_CLASSIFICATION	8.092483652321344E-7	IMPLEMENTATION
// new scope for this invocation of the block, based on parent scope	WITHOUT_CLASSIFICATION	0.9999816066115956	WITHOUT_CLASSIFICATION	1.8393388404317624E-5	IMPLEMENTATION
// No argument blocks	WITHOUT_CLASSIFICATION	0.9998674644441182	WITHOUT_CLASSIFICATION	1.3253555588182742E-4	IMPLEMENTATION
// just push the same empty scope, since we won't use one	WITHOUT_CLASSIFICATION	0.9999530663642907	WITHOUT_CLASSIFICATION	4.693363570930178E-5	IMPLEMENTATION
// Not sure if this is actually possible, but better safe than sorry	WITHOUT_CLASSIFICATION	0.9999162209875985	WITHOUT_CLASSIFICATION	8.377901240152874E-5	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9998563810582809	WITHOUT_CLASSIFICATION	1.4361894171904414E-4	IMPLEMENTATION
// This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).	WITHOUT_CLASSIFICATION	0.9998818586724577	WITHOUT_CLASSIFICATION	1.1814132754230063E-4	IMPLEMENTATION
// Highest reserved id	WITHOUT_CLASSIFICATION	0.999798586010429	WITHOUT_CLASSIFICATION	2.0141398957097532E-4	IMPLEMENTATION
// binary typed calls	WITHOUT_CLASSIFICATION	0.9998406477732465	WITHOUT_CLASSIFICATION	1.5935222675333817E-4	IMPLEMENTATION
// id must always be even	WITHOUT_CLASSIFICATION	0.9998597075479013	WITHOUT_CLASSIFICATION	1.4029245209860403E-4	IMPLEMENTATION
// with block pass	WITHOUT_CLASSIFICATION	0.999773089192204	WITHOUT_CLASSIFICATION	2.2691080779588688E-4	IMPLEMENTATION
// no block	WITHOUT_CLASSIFICATION	0.9997956217646443	WITHOUT_CLASSIFICATION	2.0437823535576262E-4	IMPLEMENTATION
// with block literal (iter)	WITHOUT_CLASSIFICATION	0.9998210503857203	WITHOUT_CLASSIFICATION	1.7894961427974217E-4	IMPLEMENTATION
//            assert false : "can this happen?";	WITHOUT_CLASSIFICATION	0.9999629379983513	WITHOUT_CLASSIFICATION	3.706200164854862E-5	IMPLEMENTATION
// if we have multiple asgn with just *args, need a special type for that	WITHOUT_CLASSIFICATION	0.9999590677671286	WITHOUT_CLASSIFICATION	4.0932232871456724E-5	IMPLEMENTATION
// && args.getMaxArgumentsCount() != 1) {	WITHOUT_CLASSIFICATION	0.9998491248305923	WITHOUT_CLASSIFICATION	1.5087516940769525E-4	IMPLEMENTATION
//            return warnMultiReturnNil(ruby);	WITHOUT_CLASSIFICATION	0.999981946140513	WITHOUT_CLASSIFICATION	1.8053859486985795E-5	IMPLEMENTATION
// ensure zero is devoted to no method name	WITHOUT_CLASSIFICATION	0.999844628057197	WITHOUT_CLASSIFICATION	1.553719428029263E-4	IMPLEMENTATION
// predefine a few other methods we invoke directly elsewhere	WITHOUT_CLASSIFICATION	0.9999011345366843	WITHOUT_CLASSIFICATION	9.886546331574044E-5	IMPLEMENTATION
// fast and safe respond_to? call site logic	WITHOUT_CLASSIFICATION	0.9998337040303945	WITHOUT_CLASSIFICATION	1.662959696054626E-4	IMPLEMENTATION
// Static scoping information for this scope	WITHOUT_CLASSIFICATION	0.9999701737509039	WITHOUT_CLASSIFICATION	2.9826249095976625E-5	IMPLEMENTATION
// Captured dynamic scopes	WITHOUT_CLASSIFICATION	0.9998260066621395	WITHOUT_CLASSIFICATION	1.7399333786038266E-4	IMPLEMENTATION
// Backref for $~, $1, etc	WITHOUT_CLASSIFICATION	0.9998097249561875	WITHOUT_CLASSIFICATION	1.9027504381249387E-4	IMPLEMENTATION
// Lastline	WITHOUT_CLASSIFICATION	0.9997559888976826	WITHOUT_CLASSIFICATION	2.4401110231744253E-4	IMPLEMENTATION
// No binding scope so we should create one	WITHOUT_CLASSIFICATION	0.9999078412768616	WITHOUT_CLASSIFICATION	9.21587231383676E-5	IMPLEMENTATION
// bindings scopes must always be ManyVars scopes since evals can grow them	WITHOUT_CLASSIFICATION	0.9998792196965983	WITHOUT_CLASSIFICATION	1.2078030340164575E-4	IMPLEMENTATION
// Helper function to give a good view of current dynamic scope with captured scopes	WITHOUT_CLASSIFICATION	0.999955520350012	WITHOUT_CLASSIFICATION	4.447964998798026E-5	IMPLEMENTATION
// try count specific args to determine required	WITHOUT_CLASSIFICATION	0.9998902667705806	WITHOUT_CLASSIFICATION	1.0973322941933271E-4	IMPLEMENTATION
// Some helper functions:	WITHOUT_CLASSIFICATION	0.999842018988853	WITHOUT_CLASSIFICATION	1.5798101114701657E-4	IMPLEMENTATION
// silently ignore	WITHOUT_CLASSIFICATION	0.999865812887914	WITHOUT_CLASSIFICATION	1.3418711208602101E-4	IMPLEMENTATION
// used by compiler	WITHOUT_CLASSIFICATION	0.999812421318742	WITHOUT_CLASSIFICATION	1.87578681257888E-4	IMPLEMENTATION
// initialize the static settings to determine which factory to use	WITHOUT_CLASSIFICATION	0.9999952844094101	WITHOUT_CLASSIFICATION	4.715590589927299E-6	IMPLEMENTATION
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9998419577772956	WITHOUT_CLASSIFICATION	1.5804222270434027E-4	IMPLEMENTATION
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9998570454142213	WITHOUT_CLASSIFICATION	1.4295458577880287E-4	IMPLEMENTATION
//  Single node on list	WITHOUT_CLASSIFICATION	0.9998116964919507	WITHOUT_CLASSIFICATION	1.8830350804936385E-4	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9998736449555194	WITHOUT_CLASSIFICATION	1.263550444805337E-4	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9998547034369545	WITHOUT_CLASSIFICATION	1.4529656304546642E-4	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999510295938926	WITHOUT_CLASSIFICATION	4.8970406107428854E-5	IMPLEMENTATION
// Note: In Ruby 1.9 all of this logic can go away since they will require explicit // bindings for evals.	WITHOUT_CLASSIFICATION	0.999882683876241	WITHOUT_CLASSIFICATION	1.1731612375900567E-4	IMPLEMENTATION
// We only define one special dynamic scope per 'logical' binding.  So all bindings for // the same scope should share the same dynamic scope.  This allows multiple evals with // different different bindings in the same scope to see the same stuff.	WITHOUT_CLASSIFICATION	0.999984477894641	WITHOUT_CLASSIFICATION	1.5522105358991562E-5	IMPLEMENTATION
// If the next scope out has the same binding scope as this scope it means // we are evaling within an eval and in that case we should be sharing the same // binding scope.	WITHOUT_CLASSIFICATION	0.999978734320612	WITHOUT_CLASSIFICATION	2.1265679387984754E-5	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999599627034058	WITHOUT_CLASSIFICATION	4.003729659420569E-5	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999599627034058	WITHOUT_CLASSIFICATION	4.003729659420569E-5	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9998944131786105	WITHOUT_CLASSIFICATION	1.055868213894381E-4	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9998944131786105	WITHOUT_CLASSIFICATION	1.055868213894381E-4	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9998944131786105	WITHOUT_CLASSIFICATION	1.055868213894381E-4	IMPLEMENTATION
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9998787567071193	WITHOUT_CLASSIFICATION	1.21243292880596E-4	IMPLEMENTATION
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9998787567071193	WITHOUT_CLASSIFICATION	1.21243292880596E-4	IMPLEMENTATION
// extra args for rest	WITHOUT_CLASSIFICATION	0.9998391670920634	WITHOUT_CLASSIFICATION	1.608329079365645E-4	IMPLEMENTATION
// extra args for rest	WITHOUT_CLASSIFICATION	0.9998391670920634	WITHOUT_CLASSIFICATION	1.608329079365645E-4	IMPLEMENTATION
/*     * This is the proper behavior for all non-expanded assigners which have a pre > 0.  The rest     * override this.     */	WITHOUT_CLASSIFICATION	0.9999880005195856	WITHOUT_CLASSIFICATION	1.1999480414484234E-5	IMPLEMENTATION
/*     * This is the proper behavior for all non-expanded assigners.     */	WITHOUT_CLASSIFICATION	0.9999772755048899	WITHOUT_CLASSIFICATION	2.2724495110088454E-5	IMPLEMENTATION
// prefill ?	WITHOUT_CLASSIFICATION	0.999777872292617	WITHOUT_CLASSIFICATION	2.2212770738293716E-4	IMPLEMENTATION
// prefill ?	WITHOUT_CLASSIFICATION	0.999777872292617	WITHOUT_CLASSIFICATION	2.2212770738293716E-4	IMPLEMENTATION
// MUST be called from synchronized/locked block! // should only be called by variableTableStore/variableTableFastStore	WITHOUT_CLASSIFICATION	0.9999038343434808	WITHOUT_CLASSIFICATION	9.616565651920124E-5	IMPLEMENTATION
// retrieve method // module // name	WITHOUT_CLASSIFICATION	0.9999300145140013	WITHOUT_CLASSIFICATION	6.998548599871081E-5	IMPLEMENTATION
// call is ok, punch it!	WITHOUT_CLASSIFICATION	0.9998061010675203	WITHOUT_CLASSIFICATION	1.9389893247961923E-4	IMPLEMENTATION
// if undefined, branch to method_missing	WITHOUT_CLASSIFICATION	0.9998834904564767	WITHOUT_CLASSIFICATION	1.1650954352319092E-4	IMPLEMENTATION
// if we're not attempting to invoke method_missing and method is not visible, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999743459136023	WITHOUT_CLASSIFICATION	2.5654086397678547E-5	IMPLEMENTATION
// method object already present, push various args // tc // self // klazz // name	WITHOUT_CLASSIFICATION	0.9999182709845443	WITHOUT_CLASSIFICATION	8.172901545574949E-5	IMPLEMENTATION
// if it's method_missing, just invoke it	WITHOUT_CLASSIFICATION	0.9998754392748891	WITHOUT_CLASSIFICATION	1.2456072511098893E-4	IMPLEMENTATION
// invoke callMethodMissing	WITHOUT_CLASSIFICATION	0.9998246742943566	WITHOUT_CLASSIFICATION	1.753257056434718E-4	IMPLEMENTATION
// caller	WITHOUT_CLASSIFICATION	0.9961491446277083	WITHOUT_CLASSIFICATION	0.003850855372291706	IMPLEMENTATION
// calltype // block	WITHOUT_CLASSIFICATION	0.9997575793832542	WITHOUT_CLASSIFICATION	2.4242061674596298E-4	IMPLEMENTATION
// if no exception raised, jump to end to leave result on stack for return	WITHOUT_CLASSIFICATION	0.9999593520951199	WITHOUT_CLASSIFICATION	4.0647904880070754E-5	IMPLEMENTATION
// load arity for check	WITHOUT_CLASSIFICATION	0.9998802265922744	WITHOUT_CLASSIFICATION	1.197734077256374E-4	IMPLEMENTATION
// throw	WITHOUT_CLASSIFICATION	0.9961167361953089	WITHOUT_CLASSIFICATION	0.0038832638046911124	IMPLEMENTATION
// load arity for error	WITHOUT_CLASSIFICATION	0.9998915228112121	WITHOUT_CLASSIFICATION	1.0847718878799075E-4	IMPLEMENTATION
// arity ok, continue	WITHOUT_CLASSIFICATION	0.9998105596151058	WITHOUT_CLASSIFICATION	1.894403848942098E-4	IMPLEMENTATION
//InvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9998302939301953	WITHOUT_CLASSIFICATION	1.6970606980477065E-4	IMPLEMENTATION
// ENEBO: Perhaps slow but simple for now	WITHOUT_CLASSIFICATION	0.9998097671941776	WITHOUT_CLASSIFICATION	1.9023280582240444E-4	IMPLEMENTATION
// FastInvocationCallback	WITHOUT_CLASSIFICATION	0.9998247511195653	WITHOUT_CLASSIFICATION	1.752488804347626E-4	IMPLEMENTATION
// InvocationCallback	WITHOUT_CLASSIFICATION	0.9998265595622685	WITHOUT_CLASSIFICATION	1.734404377315718E-4	IMPLEMENTATION
//DumpingInvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9998478330905046	WITHOUT_CLASSIFICATION	1.521669094954046E-4	IMPLEMENTATION
// for fast lookup: encoding entry => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9998910873872121	WITHOUT_CLASSIFICATION	1.0891261278780965E-4	IMPLEMENTATION
// for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9998809024184546	WITHOUT_CLASSIFICATION	1.1909758154542481E-4	IMPLEMENTATION
// load the encoding	WITHOUT_CLASSIFICATION	0.9998904727525908	WITHOUT_CLASSIFICATION	1.095272474092396E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9998855568837389	WITHOUT_CLASSIFICATION	1.1444311626107535E-4	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9998821950889603	WITHOUT_CLASSIFICATION	1.1780491103976807E-4	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9998807691928283	WITHOUT_CLASSIFICATION	1.1923080717170932E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9998752131444361	WITHOUT_CLASSIFICATION	1.2478685556390523E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9998745748835361	WITHOUT_CLASSIFICATION	1.2542511646389677E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9998829761878838	WITHOUT_CLASSIFICATION	1.1702381211618851E-4	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9998795385936607	WITHOUT_CLASSIFICATION	1.204614063393519E-4	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9998780805475576	WITHOUT_CLASSIFICATION	1.2191945244252376E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998813670522917	WITHOUT_CLASSIFICATION	1.1863294770838923E-4	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999877882195212	WITHOUT_CLASSIFICATION	1.2211780478802253E-4	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998764041027982	WITHOUT_CLASSIFICATION	1.2359589720182366E-4	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999877882195212	WITHOUT_CLASSIFICATION	1.2211780478802253E-4	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999877882195212	WITHOUT_CLASSIFICATION	1.2211780478802253E-4	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999877882195212	WITHOUT_CLASSIFICATION	1.2211780478802253E-4	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999877882195212	WITHOUT_CLASSIFICATION	1.2211780478802253E-4	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999877882195212	WITHOUT_CLASSIFICATION	1.2211780478802253E-4	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999877882195212	WITHOUT_CLASSIFICATION	1.2211780478802253E-4	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998764041027982	WITHOUT_CLASSIFICATION	1.2359589720182366E-4	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998764041027982	WITHOUT_CLASSIFICATION	1.2359589720182366E-4	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998764041027982	WITHOUT_CLASSIFICATION	1.2359589720182366E-4	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998764041027982	WITHOUT_CLASSIFICATION	1.2359589720182366E-4	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998764041027982	WITHOUT_CLASSIFICATION	1.2359589720182366E-4	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998764041027982	WITHOUT_CLASSIFICATION	1.2359589720182366E-4	IMPLEMENTATION
// If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs	WITHOUT_CLASSIFICATION	0.9999142563500512	WITHOUT_CLASSIFICATION	8.574364994884863E-5	IMPLEMENTATION
// BreakJump, ThreadContext	WITHOUT_CLASSIFICATION	0.9998117676969043	WITHOUT_CLASSIFICATION	1.882323030958035E-4	IMPLEMENTATION
// ThreadContext	WITHOUT_CLASSIFICATION	0.9997745480955245	WITHOUT_CLASSIFICATION	2.254519044755278E-4	IMPLEMENTATION
// BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.999857634844544	WITHOUT_CLASSIFICATION	1.4236515545585675E-4	IMPLEMENTATION
// Make Java class files in the jar reachable from Ruby	WITHOUT_CLASSIFICATION	0.9999652323859172	WITHOUT_CLASSIFICATION	3.476761408283437E-5	IMPLEMENTATION
// RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9998606952950698	WITHOUT_CLASSIFICATION	1.393047049301452E-4	IMPLEMENTATION
// add all startup load paths to the list first	WITHOUT_CLASSIFICATION	0.9999668720945938	WITHOUT_CLASSIFICATION	3.3127905406129346E-5	IMPLEMENTATION
// if it's a compiled JRuby script, instantiate and run it	WITHOUT_CLASSIFICATION	0.9999077417119907	WITHOUT_CLASSIFICATION	9.225828800931306E-5	IMPLEMENTATION
// wrap in try/catch for security exceptions in an applet	WITHOUT_CLASSIFICATION	0.9998673618626087	WITHOUT_CLASSIFICATION	1.3263813739140446E-4	IMPLEMENTATION
// add $RUBYLIB paths	WITHOUT_CLASSIFICATION	0.9999035607863411	WITHOUT_CLASSIFICATION	9.643921365877576E-5	IMPLEMENTATION
// Empty paths do not need to be added	WITHOUT_CLASSIFICATION	0.998286504614094	WITHOUT_CLASSIFICATION	0.0017134953859061033	IMPLEMENTATION
// "." dir is used for relative path loads from a given file, as in require '../foo/bar'	WITHOUT_CLASSIFICATION	0.9999203405464779	WITHOUT_CLASSIFICATION	7.965945352205742E-5	IMPLEMENTATION
// Add 1.8 libs	WITHOUT_CLASSIFICATION	0.99986598786888	WITHOUT_CLASSIFICATION	1.3401213111991658E-4	IMPLEMENTATION
// Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.	WITHOUT_CLASSIFICATION	0.9999890158973608	WITHOUT_CLASSIFICATION	1.098410263928951E-5	IMPLEMENTATION
// Library has already been loaded in some form, bail out	WITHOUT_CLASSIFICATION	0.9999317799448995	WITHOUT_CLASSIFICATION	6.822005510053952E-5	IMPLEMENTATION
// We don't want a package name beginning with dots, so we remove them	WITHOUT_CLASSIFICATION	0.9999726977132697	WITHOUT_CLASSIFICATION	2.7302286730226487E-5	IMPLEMENTATION
// If there is a jar-file with the required name, we add this to the class path.	WITHOUT_CLASSIFICATION	0.9999623565772904	WITHOUT_CLASSIFICATION	3.764342270965512E-5	IMPLEMENTATION
// quietly try to load the class	WITHOUT_CLASSIFICATION	0.9999526813645488	WITHOUT_CLASSIFICATION	4.7318635451170494E-5	IMPLEMENTATION
// If there was a good library before, we go back to that	WITHOUT_CLASSIFICATION	0.9999519996696878	WITHOUT_CLASSIFICATION	4.8000330312138584E-5	IMPLEMENTATION
// no library or extension found, try to load directly as a class	WITHOUT_CLASSIFICATION	0.999968324375403	WITHOUT_CLASSIFICATION	3.167562459712161E-5	IMPLEMENTATION
// if an extension is specified, try more targetted searches	WITHOUT_CLASSIFICATION	0.9999570454584559	WITHOUT_CLASSIFICATION	4.295454154407379E-5	IMPLEMENTATION
// signed short, big-endian	WITHOUT_CLASSIFICATION	0.9998261536410398	WITHOUT_CLASSIFICATION	1.7384635896013737E-4	IMPLEMENTATION
// source extensions	WITHOUT_CLASSIFICATION	0.9998467753579364	WITHOUT_CLASSIFICATION	1.532246420636888E-4	IMPLEMENTATION
// We don't support .so, but some stdlib require .so directly // replace it with .jar to look for an extension type we do support	WITHOUT_CLASSIFICATION	0.9998953734855637	WITHOUT_CLASSIFICATION	1.0462651443636055E-4	IMPLEMENTATION
// This code exploits the fact that all .jar files will be found for the JarredScript feature. // This is where the basic extension mechanism gets fixed	WITHOUT_CLASSIFICATION	0.9999790015670184	WITHOUT_CLASSIFICATION	2.099843298169765E-5	IMPLEMENTATION
// Make the class name look nice, by splitting on _ and capitalize each segment, then joining // the, together without anything separating them, and last put on "Service" at the end.	WITHOUT_CLASSIFICATION	0.9999795631059901	WITHOUT_CLASSIFICATION	2.0436894009882497E-5	IMPLEMENTATION
// It's _really_ expensive to check that the class actually exists in the Jar, so // we don't do that now.	WITHOUT_CLASSIFICATION	0.9999783542186048	WITHOUT_CLASSIFICATION	2.1645781395121127E-5	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9998894954340808	WITHOUT_CLASSIFICATION	1.1050456591924698E-4	IMPLEMENTATION
// extension extensions	WITHOUT_CLASSIFICATION	0.999865469346713	WITHOUT_CLASSIFICATION	1.34530653286885E-4	IMPLEMENTATION
// unknown extension, fall back to search with extensions	WITHOUT_CLASSIFICATION	0.9999520202351435	WITHOUT_CLASSIFICATION	4.797976485654898E-5	IMPLEMENTATION
// try all extensions	WITHOUT_CLASSIFICATION	0.999888773709513	WITHOUT_CLASSIFICATION	1.1122629048707575E-4	IMPLEMENTATION
// if a source extension is specified, try all source extensions	WITHOUT_CLASSIFICATION	0.9999527017902208	WITHOUT_CLASSIFICATION	4.7298209779193555E-5	IMPLEMENTATION
// unknown extension, fall back to exact search	WITHOUT_CLASSIFICATION	0.9999315625370512	WITHOUT_CLASSIFICATION	6.843746294890046E-5	IMPLEMENTATION
// try only literal search	WITHOUT_CLASSIFICATION	0.9998868661575882	WITHOUT_CLASSIFICATION	1.1313384241180076E-4	IMPLEMENTATION
// attempt to load the found library	WITHOUT_CLASSIFICATION	0.9999565735255811	WITHOUT_CLASSIFICATION	4.3426474418899064E-5	IMPLEMENTATION
// otherwise load the library we've found	WITHOUT_CLASSIFICATION	0.9998644663503979	WITHOUT_CLASSIFICATION	1.3553364960194983E-4	IMPLEMENTATION
// allow MainExitException to propagate out for exec and friends	WITHOUT_CLASSIFICATION	0.9999343088300204	WITHOUT_CLASSIFICATION	6.569116997958076E-5	IMPLEMENTATION
// Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".	WITHOUT_CLASSIFICATION	0.9999270227699455	WITHOUT_CLASSIFICATION	7.2977230054428E-5	IMPLEMENTATION
// check current directory; if file exists, retrieve URL and return resource	WITHOUT_CLASSIFICATION	0.999990317966419	WITHOUT_CLASSIFICATION	9.682033581044173E-6	IMPLEMENTATION
// if a jar or file URL, return load service resource directly without further searching	WITHOUT_CLASSIFICATION	0.9999648625796614	WITHOUT_CLASSIFICATION	3.513742033857019E-5	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999111681014187	WITHOUT_CLASSIFICATION	8.88318985812855E-5	IMPLEMENTATION
// if it's a ./ baseName, use CWD logic	WITHOUT_CLASSIFICATION	0.999846029779751	WITHOUT_CLASSIFICATION	1.5397022024897936E-4	IMPLEMENTATION
// if given path is absolute, just try it as-is (with extensions) and no load path	WITHOUT_CLASSIFICATION	0.9999133567209143	WITHOUT_CLASSIFICATION	8.664327908571099E-5	IMPLEMENTATION
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9999476180554852	WITHOUT_CLASSIFICATION	5.238194451481089E-5	IMPLEMENTATION
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9999476180554852	WITHOUT_CLASSIFICATION	5.238194451481089E-5	IMPLEMENTATION
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9998323185763415	WITHOUT_CLASSIFICATION	1.6768142365846292E-4	IMPLEMENTATION
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9998323185763415	WITHOUT_CLASSIFICATION	1.6768142365846292E-4	IMPLEMENTATION
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999794479517374	WITHOUT_CLASSIFICATION	2.0552048262618242E-5	IMPLEMENTATION
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999794479517374	WITHOUT_CLASSIFICATION	2.0552048262618242E-5	IMPLEMENTATION
//                    actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));	WITHOUT_CLASSIFICATION	0.9999505260180374	WITHOUT_CLASSIFICATION	4.9473981962660536E-5	IMPLEMENTATION
// handle security-sensitive case	WITHOUT_CLASSIFICATION	0.9998687990670544	WITHOUT_CLASSIFICATION	1.312009329456895E-4	IMPLEMENTATION
// if entry is an empty string, skip it	WITHOUT_CLASSIFICATION	0.9999482031468503	WITHOUT_CLASSIFICATION	5.179685314979957E-5	IMPLEMENTATION
// if entry starts with a slash, skip it since classloader resources never start with a /	WITHOUT_CLASSIFICATION	0.9999519725494546	WITHOUT_CLASSIFICATION	4.802745054536277E-5	IMPLEMENTATION
// otherwise, try to load from classpath (Note: Jar resources always uses '/')	WITHOUT_CLASSIFICATION	0.9999271930131376	WITHOUT_CLASSIFICATION	7.28069868623548E-5	IMPLEMENTATION
// Make sure this is not a directory or unavailable in some way	WITHOUT_CLASSIFICATION	0.9999868956950486	WITHOUT_CLASSIFICATION	1.3104304951434685E-5	IMPLEMENTATION
// signed short, native	WITHOUT_CLASSIFICATION	0.9998260015128236	WITHOUT_CLASSIFICATION	1.739984871762666E-4	IMPLEMENTATION
// If we fail to find as a normal Ruby script, we try to find as an extension, // checking for a builtin first.	WITHOUT_CLASSIFICATION	0.9999567436781023	WITHOUT_CLASSIFICATION	4.325632189775419E-5	IMPLEMENTATION
// write `I' instance var signet if class is NOT a direct subclass of Object	WITHOUT_CLASSIFICATION	0.9999586159568763	WITHOUT_CLASSIFICATION	4.13840431236611E-5	IMPLEMENTATION
// if name starts with a / we're done (classloader resources won't load with an initial /)	WITHOUT_CLASSIFICATION	0.9999676969499207	WITHOUT_CLASSIFICATION	3.230305007935588E-5	IMPLEMENTATION
// Look in classpath next (we do not use File as a test since UNC names will match) // Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")	WITHOUT_CLASSIFICATION	0.9999704286066061	WITHOUT_CLASSIFICATION	2.957139339388273E-5	IMPLEMENTATION
/* Directories and unavailable resources are not able to open a stream. */	WITHOUT_CLASSIFICATION	0.9999366226294396	WITHOUT_CLASSIFICATION	6.337737056041697E-5	IMPLEMENTATION
// Try to load from classpath without prefix. "A/b.rb" will not load as  // "./A/b.rb" in a jar file.	WITHOUT_CLASSIFICATION	0.9999098063954598	WITHOUT_CLASSIFICATION	9.019360454014948E-5	IMPLEMENTATION
// object has instance vars and isn't a class, get a snapshot to be marshalled // and output the ivar header here	WITHOUT_CLASSIFICATION	0.9999785460628903	WITHOUT_CLASSIFICATION	2.145393710970995E-5	IMPLEMENTATION
// flush afer whole dump is complete	WITHOUT_CLASSIFICATION	0.9997098868247289	WITHOUT_CLASSIFICATION	2.9011317527106263E-4	IMPLEMENTATION
//            write('S');	WITHOUT_CLASSIFICATION	0.9999365469602575	WITHOUT_CLASSIFICATION	6.345303974257764E-5	IMPLEMENTATION
// switch on the object's *native type*. This allows use-defined // classes that have extended core native types to piggyback on their // marshalling logic.	WITHOUT_CLASSIFICATION	0.9999286920737472	WITHOUT_CLASSIFICATION	7.130792625278193E-5	IMPLEMENTATION
// object is a custom class that extended one of the native types other than Object	WITHOUT_CLASSIFICATION	0.9999734110394974	WITHOUT_CLASSIFICATION	2.658896050254239E-5	IMPLEMENTATION
// We do not want to capture cached methods	WITHOUT_CLASSIFICATION	0.9998934261607273	WITHOUT_CLASSIFICATION	1.0657383927278302E-4	IMPLEMENTATION
// w_symbol	WITHOUT_CLASSIFICATION	0.9997518973056275	WITHOUT_CLASSIFICATION	2.4810269437244994E-4	IMPLEMENTATION
// w_unique	WITHOUT_CLASSIFICATION	0.9997492696843704	WITHOUT_CLASSIFICATION	2.507303156295412E-4	IMPLEMENTATION
// call the proc, but not for symbols	WITHOUT_CLASSIFICATION	0.9998838892149634	WITHOUT_CLASSIFICATION	1.1611078503661323E-4	IMPLEMENTATION
// Major // Minor	WITHOUT_CLASSIFICATION	0.9997580170000903	WITHOUT_CLASSIFICATION	2.4198299990986364E-4	IMPLEMENTATION
// any ivars, since we don't have __attached__ ivar now	WITHOUT_CLASSIFICATION	0.9999110216300022	WITHOUT_CLASSIFICATION	8.89783699977273E-5	IMPLEMENTATION
// "hashdef" object, a hash with a default	WITHOUT_CLASSIFICATION	0.9999514244659431	WITHOUT_CLASSIFICATION	4.85755340568189E-5	IMPLEMENTATION
// All "C" marshalled objects descend from core classes, which are all RubyObject	WITHOUT_CLASSIFICATION	0.9999411878713267	WITHOUT_CLASSIFICATION	5.881212867326336E-5	IMPLEMENTATION
// sic	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999548726567755	WITHOUT_CLASSIFICATION	4.5127343224469865E-5	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999548726567755	WITHOUT_CLASSIFICATION	4.5127343224469865E-5	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999548726567755	WITHOUT_CLASSIFICATION	4.5127343224469865E-5	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999560973651705	WITHOUT_CLASSIFICATION	4.3902634829469755E-5	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999560973651705	WITHOUT_CLASSIFICATION	4.3902634829469755E-5	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9998563810582809	WITHOUT_CLASSIFICATION	1.4361894171904414E-4	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9998563810582809	WITHOUT_CLASSIFICATION	1.4361894171904414E-4	IMPLEMENTATION
/*     * If we are setting post arguments we can assume there are no pre or others     */	WITHOUT_CLASSIFICATION	0.9999936215519478	WITHOUT_CLASSIFICATION	6.378448052156262E-6	IMPLEMENTATION
// XXX: 0xffff0000 on BE?	WITHOUT_CLASSIFICATION	0.999759362865637	WITHOUT_CLASSIFICATION	2.4063713436301717E-4	IMPLEMENTATION
// unsigned short, native	WITHOUT_CLASSIFICATION	0.9998337245930472	WITHOUT_CLASSIFICATION	1.6627540695273336E-4	IMPLEMENTATION
// int, native // long, native	WITHOUT_CLASSIFICATION	0.9998106583908584	WITHOUT_CLASSIFICATION	1.8934160914170375E-4	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999548726567755	WITHOUT_CLASSIFICATION	4.5127343224469865E-5	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999548726567755	WITHOUT_CLASSIFICATION	4.5127343224469865E-5	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999548726567755	WITHOUT_CLASSIFICATION	4.5127343224469865E-5	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999560973651705	WITHOUT_CLASSIFICATION	4.3902634829469755E-5	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999560973651705	WITHOUT_CLASSIFICATION	4.3902634829469755E-5	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999560973651705	WITHOUT_CLASSIFICATION	4.3902634829469755E-5	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9998563810582809	WITHOUT_CLASSIFICATION	1.4361894171904414E-4	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9998563810582809	WITHOUT_CLASSIFICATION	1.4361894171904414E-4	IMPLEMENTATION
// Look for slash, starting from 'start' position, until 'end'.	WITHOUT_CLASSIFICATION	0.9999387649070216	WITHOUT_CLASSIFICATION	6.123509297846613E-5	IMPLEMENTATION
// Our values holder (name of variables are kept in staticScope)	WITHOUT_CLASSIFICATION	0.9998983459747832	WITHOUT_CLASSIFICATION	1.0165402521682774E-4	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999601192582823	WITHOUT_CLASSIFICATION	3.9880741717732166E-5	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999601192582823	WITHOUT_CLASSIFICATION	3.9880741717732166E-5	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999601192582823	WITHOUT_CLASSIFICATION	3.9880741717732166E-5	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999601192582823	WITHOUT_CLASSIFICATION	3.9880741717732166E-5	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999601192582823	WITHOUT_CLASSIFICATION	3.9880741717732166E-5	IMPLEMENTATION
// SunSignalFacade	WITHOUT_CLASSIFICATION	0.999757841267038	WITHOUT_CLASSIFICATION	2.42158732962019E-4	IMPLEMENTATION
// All braces pushed..	WITHOUT_CLASSIFICATION	0.9998142864165128	WITHOUT_CLASSIFICATION	1.857135834872737E-4	IMPLEMENTATION
/* failed : try next recursion */	WITHOUT_CLASSIFICATION	0.9998449436585447	WITHOUT_CLASSIFICATION	1.550563414553388E-4	IMPLEMENTATION
// leftToken made us start as nest 1	WITHOUT_CLASSIFICATION	0.9999031101134358	WITHOUT_CLASSIFICATION	9.688988656418E-5	IMPLEMENTATION
// are we at '**/'	WITHOUT_CLASSIFICATION	0.9997668144640234	WITHOUT_CLASSIFICATION	2.3318553597662163E-4	IMPLEMENTATION
// No or mismatched braces..Move along..nothing to see here	WITHOUT_CLASSIFICATION	0.9999456699652364	WITHOUT_CLASSIFICATION	5.4330034763683485E-5	IMPLEMENTATION
// not enough bytes	WITHOUT_CLASSIFICATION	0.9991726650028075	WITHOUT_CLASSIFICATION	8.27334997192552E-4	IMPLEMENTATION
// Get index of last read byte	WITHOUT_CLASSIFICATION	0.9998605753066072	WITHOUT_CLASSIFICATION	1.3942469339271328E-4	IMPLEMENTATION
// skip inner braces	WITHOUT_CLASSIFICATION	0.9998575847006473	WITHOUT_CLASSIFICATION	1.424152993527029E-4	IMPLEMENTATION
/*     * Process {}'s (example: Dir.glob("{jruby,jython}/README*")      */	WITHOUT_CLASSIFICATION	0.999971519304596	WITHOUT_CLASSIFICATION	2.8480695403889066E-5	IMPLEMENTATION
/* complete, according to Posix.2 */	WITHOUT_CLASSIFICATION	0.9998094799877705	WITHOUT_CLASSIFICATION	1.905200122295197E-4	IMPLEMENTATION
/* Only accept an open brace if there is a close */	WITHOUT_CLASSIFICATION	0.9999210592390689	WITHOUT_CLASSIFICATION	7.894076093109808E-5	IMPLEMENTATION
/* brace to match it.  Bracket expressions must be */	WITHOUT_CLASSIFICATION	0.999867242438982	WITHOUT_CLASSIFICATION	1.3275756101810087E-4	IMPLEMENTATION
// index of left-most brace // index of right-most brace	WITHOUT_CLASSIFICATION	0.9998448323919388	WITHOUT_CLASSIFICATION	1.551676080611729E-4	IMPLEMENTATION
// Length check is a hack.  We should not be reeiving "" as a filename ever. 	WITHOUT_CLASSIFICATION	0.999930379786724	WITHOUT_CLASSIFICATION	6.962021327594726E-5	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9997605065592239	WITHOUT_CLASSIFICATION	2.3949344077601998E-4	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9997605065592239	WITHOUT_CLASSIFICATION	2.3949344077601998E-4	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9997605065592239	WITHOUT_CLASSIFICATION	2.3949344077601998E-4	IMPLEMENTATION
// Pickaxe says @ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9999201781516175	WITHOUT_CLASSIFICATION	7.982184838259477E-5	IMPLEMENTATION
// Pickaxe says @@ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9999201781516175	WITHOUT_CLASSIFICATION	7.982184838259477E-5	IMPLEMENTATION
// SimpleSampler	WITHOUT_CLASSIFICATION	0.9997544215087637	WITHOUT_CLASSIFICATION	2.455784912363057E-4	IMPLEMENTATION
/*     * convert into longs, returning unsigned 64-bit values as signed longs     * ( num2long raises a RangeError on values > Long.MAX_VALUE )     */	WITHOUT_CLASSIFICATION	0.9999867862642122	WITHOUT_CLASSIFICATION	1.3213735787758738E-5	IMPLEMENTATION
// b64_xtable for decoding Base 64	WITHOUT_CLASSIFICATION	0.9998808724731177	WITHOUT_CLASSIFICATION	1.1912752688228925E-4	IMPLEMENTATION
// single precision, little-endian	WITHOUT_CLASSIFICATION	0.9998674223572982	WITHOUT_CLASSIFICATION	1.3257764270178794E-4	IMPLEMENTATION
// single precision, big-endian	WITHOUT_CLASSIFICATION	0.99986869035921	WITHOUT_CLASSIFICATION	1.3130964079000558E-4	IMPLEMENTATION
// single precision, native	WITHOUT_CLASSIFICATION	0.9998536869887895	WITHOUT_CLASSIFICATION	1.46313011210467E-4	IMPLEMENTATION
// single precision, native // single precision, native	WITHOUT_CLASSIFICATION	0.9998669896838347	WITHOUT_CLASSIFICATION	1.330103161653388E-4	IMPLEMENTATION
// double precision, little-endian	WITHOUT_CLASSIFICATION	0.99988115717445	WITHOUT_CLASSIFICATION	1.1884282555001772E-4	IMPLEMENTATION
// double precision, big-endian	WITHOUT_CLASSIFICATION	0.9998822938289955	WITHOUT_CLASSIFICATION	1.1770617100447012E-4	IMPLEMENTATION
// double precision, native	WITHOUT_CLASSIFICATION	0.9998688445799854	WITHOUT_CLASSIFICATION	1.3115542001459557E-4	IMPLEMENTATION
// signed short, little-endian	WITHOUT_CLASSIFICATION	0.9998245732582458	WITHOUT_CLASSIFICATION	1.7542674175413228E-4	IMPLEMENTATION
// signed char	WITHOUT_CLASSIFICATION	0.9997648823434864	WITHOUT_CLASSIFICATION	2.3511765651364896E-4	IMPLEMENTATION
// unsigned char	WITHOUT_CLASSIFICATION	0.9997753176436881	WITHOUT_CLASSIFICATION	2.246823563118212E-4	IMPLEMENTATION
// long, little-endian	WITHOUT_CLASSIFICATION	0.9998032663170684	WITHOUT_CLASSIFICATION	1.9673368293173987E-4	IMPLEMENTATION
// long, big-endian	WITHOUT_CLASSIFICATION	0.999752756352397	WITHOUT_CLASSIFICATION	2.4724364760299024E-4	IMPLEMENTATION
// unsigned int, native	WITHOUT_CLASSIFICATION	0.999827905034727	WITHOUT_CLASSIFICATION	1.7209496527295342E-4	IMPLEMENTATION
// int, native	WITHOUT_CLASSIFICATION	0.9997584805079611	WITHOUT_CLASSIFICATION	2.4151949203901014E-4	IMPLEMENTATION
// 64-bit number, native (as fixnum)	WITHOUT_CLASSIFICATION	0.9998448534626712	WITHOUT_CLASSIFICATION	1.5514653732879682E-4	IMPLEMENTATION
// How many occurrences of 'type' we want	WITHOUT_CLASSIFICATION	0.9998548568994212	WITHOUT_CLASSIFICATION	1.4514310057872704E-4	IMPLEMENTATION
// See if we have a converter for the job...	WITHOUT_CLASSIFICATION	0.9999607610406746	WITHOUT_CLASSIFICATION	3.923895932542799E-5	IMPLEMENTATION
// Otherwise the unpack should be here...	WITHOUT_CLASSIFICATION	0.9998351887751106	WITHOUT_CLASSIFICATION	1.648112248894181E-4	IMPLEMENTATION
// Possible Checksum Byte	WITHOUT_CLASSIFICATION	0.9998122979974252	WITHOUT_CLASSIFICATION	1.8770200257466413E-4	IMPLEMENTATION
// obtain a	WITHOUT_CLASSIFICATION	0.9997499395555258	WITHOUT_CLASSIFICATION	2.500604444741816E-4	IMPLEMENTATION
// obtain b	WITHOUT_CLASSIFICATION	0.9997516468854749	WITHOUT_CLASSIFICATION	2.483531145250486E-4	IMPLEMENTATION
// obtain c	WITHOUT_CLASSIFICATION	0.9997519550648708	WITHOUT_CLASSIFICATION	2.480449351291602E-4	IMPLEMENTATION
// obtain d	WITHOUT_CLASSIFICATION	0.9997511434273926	WITHOUT_CLASSIFICATION	2.488565726074473E-4	IMPLEMENTATION
/*encode.limit() - */	WITHOUT_CLASSIFICATION	0.9998049112067953	WITHOUT_CLASSIFICATION	1.9508879320475283E-4	IMPLEMENTATION
/* 1 */	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
/* 2 */	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
/* 3 */	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
/* 4 */	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
/* 5 */	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
/* 6 */	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
/* 7 */	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
// Skip all whitespace in pack format string	WITHOUT_CLASSIFICATION	0.999924552438396	WITHOUT_CLASSIFICATION	7.544756160408662E-5	IMPLEMENTATION
// Skip embedded comments in pack format string	WITHOUT_CLASSIFICATION	0.9999327678557036	WITHOUT_CLASSIFICATION	6.723214429641062E-5	IMPLEMENTATION
// In case when the number of occurences is // explicitly specified, we have to read up // the remaining garbage after the '\0' to // satisfy the requested pattern.	WITHOUT_CLASSIFICATION	0.9999917322996512	WITHOUT_CLASSIFICATION	8.267700348700295E-6	IMPLEMENTATION
//normal exit, this should be faster than a test at each iterations for string with more than //about 40 char	WITHOUT_CLASSIFICATION	0.999967506128395	WITHOUT_CLASSIFICATION	3.2493871604992474E-5	IMPLEMENTATION
// We encountered '\0' when // were reading the buffer above, // increment the number of read bytes.	WITHOUT_CLASSIFICATION	0.9999738135877821	WITHOUT_CLASSIFICATION	2.6186412217850335E-5	IMPLEMENTATION
// MRI behavior: Contrary to what seems to be logical, // when '*' is given, MRI calculates the distance // to the end, in order to go backwards.	WITHOUT_CLASSIFICATION	0.9999825773317058	WITHOUT_CLASSIFICATION	1.7422668294168414E-5	IMPLEMENTATION
// Determine how many of type are needed (default: 1)	WITHOUT_CLASSIFICATION	0.9998892641321536	WITHOUT_CLASSIFICATION	1.1073586784644188E-4	IMPLEMENTATION
// 'Z' adds extra null pad (versus 'a')	WITHOUT_CLASSIFICATION	0.9998352705424305	WITHOUT_CLASSIFICATION	1.6472945756945096E-4	IMPLEMENTATION
//if the low bit is set //set the high bit of the result	WITHOUT_CLASSIFICATION	0.9999528287060218	WITHOUT_CLASSIFICATION	4.717129397826852E-5	IMPLEMENTATION
//if the index is not a multiple of 8, we are not on a byte boundary //shift the byte	WITHOUT_CLASSIFICATION	0.9999580869390652	WITHOUT_CLASSIFICATION	4.191306093477636E-5	IMPLEMENTATION
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.999915030510328	WITHOUT_CLASSIFICATION	8.49694896719553E-5	IMPLEMENTATION
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.999915030510328	WITHOUT_CLASSIFICATION	8.49694896719553E-5	IMPLEMENTATION
//do some padding, I don't understand the padding strategy	WITHOUT_CLASSIFICATION	0.9996825068925466	WITHOUT_CLASSIFICATION	3.174931074533977E-4	IMPLEMENTATION
// we filled up current byte; append it and create next one	WITHOUT_CLASSIFICATION	0.9999495020236417	WITHOUT_CLASSIFICATION	5.049797635814021E-5	IMPLEMENTATION
//if the index is not a multiple of 8, we are not on a byte boundary	WITHOUT_CLASSIFICATION	0.9999451254033209	WITHOUT_CLASSIFICATION	5.48745966790146E-5	IMPLEMENTATION
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9999131610097247	WITHOUT_CLASSIFICATION	8.68389902753355E-5	IMPLEMENTATION
// we don't deal with negatives.	WITHOUT_CLASSIFICATION	0.999893898272936	WITHOUT_CLASSIFICATION	1.0610172706403656E-4	IMPLEMENTATION
// populate commandline with NG-provided stuff	WITHOUT_CLASSIFICATION	0.9999181289008146	WITHOUT_CLASSIFICATION	8.187109918543278E-5	IMPLEMENTATION
// are we recursing?	WITHOUT_CLASSIFICATION	0.9997863847275086	WITHOUT_CLASSIFICATION	2.1361527249145592E-4	IMPLEMENTATION
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999915975792364	WITHOUT_CLASSIFICATION	8.402420763709414E-6	IMPLEMENTATION
// default PidGetter	WITHOUT_CLASSIFICATION	0.9999482607331864	WITHOUT_CLASSIFICATION	5.1739266813699166E-5	IMPLEMENTATION
// ignore and try windows version	WITHOUT_CLASSIFICATION	0.9999830862464746	WITHOUT_CLASSIFICATION	1.6913753525366177E-5	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999745453917432	WITHOUT_CLASSIFICATION	2.5454608256744472E-5	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999745453917432	WITHOUT_CLASSIFICATION	2.5454608256744472E-5	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999745453917432	WITHOUT_CLASSIFICATION	2.5454608256744472E-5	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999745453917432	WITHOUT_CLASSIFICATION	2.5454608256744472E-5	IMPLEMENTATION
// try both	WITHOUT_CLASSIFICATION	0.9997862971097435	WITHOUT_CLASSIFICATION	2.137028902564573E-4	IMPLEMENTATION
// just unix	WITHOUT_CLASSIFICATION	0.9997986711118717	WITHOUT_CLASSIFICATION	2.0132888812818302E-4	IMPLEMENTATION
// just windows	WITHOUT_CLASSIFICATION	0.9998354183771032	WITHOUT_CLASSIFICATION	1.6458162289669114E-4	IMPLEMENTATION
// neither	WITHOUT_CLASSIFICATION	0.9960031625389154	WITHOUT_CLASSIFICATION	0.003996837461084608	IMPLEMENTATION
// CON: popen is a case where I think we should just always shell out.	WITHOUT_CLASSIFICATION	0.9999121041852188	WITHOUT_CLASSIFICATION	8.789581478117975E-5	IMPLEMENTATION
// single string command, pass to sh to expand wildcards	WITHOUT_CLASSIFICATION	0.9999368670030853	WITHOUT_CLASSIFICATION	6.31329969147742E-5	IMPLEMENTATION
// direct invocation of the command	WITHOUT_CLASSIFICATION	0.9999683299068236	WITHOUT_CLASSIFICATION	3.167009317634173E-5	IMPLEMENTATION
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.999931331670431	WITHOUT_CLASSIFICATION	6.866832956904531E-5	IMPLEMENTATION
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.999931331670431	WITHOUT_CLASSIFICATION	6.866832956904531E-5	IMPLEMENTATION
// close process output // See JRUBY-3405; hooking up to parent process stdin caused // problems for IRB etc using stdin.	WITHOUT_CLASSIFICATION	0.9999574297107964	WITHOUT_CLASSIFICATION	4.25702892036323E-5	IMPLEMENTATION
// ignore, we're on the way out	WITHOUT_CLASSIFICATION	0.9999809805687112	WITHOUT_CLASSIFICATION	1.9019431288798598E-5	IMPLEMENTATION
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999080362945683	WITHOUT_CLASSIFICATION	9.196370543171349E-5	IMPLEMENTATION
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999423181312835	WITHOUT_CLASSIFICATION	5.768186871639087E-5	IMPLEMENTATION
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999423181312835	WITHOUT_CLASSIFICATION	5.768186871639087E-5	IMPLEMENTATION
// popen caller wants to be able to write, provide subprocess out directly	WITHOUT_CLASSIFICATION	0.9999481987137863	WITHOUT_CLASSIFICATION	5.180128621386842E-5	IMPLEMENTATION
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.999914647964183	WITHOUT_CLASSIFICATION	8.535203581709464E-5	IMPLEMENTATION
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.999914647964183	WITHOUT_CLASSIFICATION	8.535203581709464E-5	IMPLEMENTATION
// execute command with sh -c // this does shell expansion of wildcards	WITHOUT_CLASSIFICATION	0.9999770131029813	WITHOUT_CLASSIFICATION	2.2986897018752195E-5	IMPLEMENTATION
// We need to close the out, since some // processes would just wait for the stream // to be closed before they process its content, // and produce the output. E.g.: "cat".	WITHOUT_CLASSIFICATION	0.9999869722355923	WITHOUT_CLASSIFICATION	1.3027764407784477E-5	IMPLEMENTATION
// we only close out if it's the slave stream, to avoid // closing a directly-mapped stream from parent process	WITHOUT_CLASSIFICATION	0.9999842401251786	WITHOUT_CLASSIFICATION	1.5759874821401273E-5	IMPLEMENTATION
// The assumption here is that the 'in' stream provides // proper available() support. If available() always // returns 0, we'll hang!	WITHOUT_CLASSIFICATION	0.9999744856872078	WITHOUT_CLASSIFICATION	2.5514312792166497E-5	IMPLEMENTATION
// Force t3 to quit, just in case if it's stuck. // Note: On some platforms, even interrupt might not // have an effect if the thread is IO blocked.	WITHOUT_CLASSIFICATION	0.999969675144384	WITHOUT_CLASSIFICATION	3.032485561612688E-5	IMPLEMENTATION
// Check for special shell characters [<>|] at the beginning // and end of each command word and don't run in process if we find them.	WITHOUT_CLASSIFICATION	0.9999949279098698	WITHOUT_CLASSIFICATION	5.072090130253665E-6	IMPLEMENTATION
// Note: this method produces meaningful results // only for RubyIO objects. For everything else returns 0.	WITHOUT_CLASSIFICATION	0.9998971067560646	WITHOUT_CLASSIFICATION	1.0289324393544645E-4	IMPLEMENTATION
//sequential	WITHOUT_CLASSIFICATION	0.9997584753956205	WITHOUT_CLASSIFICATION	2.41524604379636E-4	IMPLEMENTATION
// reverse the entire area of the array selected if it's reversed.	WITHOUT_CLASSIFICATION	0.9999688396600473	WITHOUT_CLASSIFICATION	3.116033995259835E-5	IMPLEMENTATION
// do median of 7 if the array is over 200 elements.	WITHOUT_CLASSIFICATION	0.9999360382816141	WITHOUT_CLASSIFICATION	6.396171838584512E-5	IMPLEMENTATION
// if it's less than 200 do median of 3	WITHOUT_CLASSIFICATION	0.9998820529439781	WITHOUT_CLASSIFICATION	1.1794705602178911E-4	IMPLEMENTATION
// SignalFacade	WITHOUT_CLASSIFICATION	0.9997615948289422	WITHOUT_CLASSIFICATION	2.3840517105779444E-4	IMPLEMENTATION
// this is the order in which MRI does these two tests	WITHOUT_CLASSIFICATION	0.9999589996693097	WITHOUT_CLASSIFICATION	4.100033069022406E-5	IMPLEMENTATION
// this is the order in which MRI does these tests	WITHOUT_CLASSIFICATION	0.9999607880583151	WITHOUT_CLASSIFICATION	3.921194168487243E-5	IMPLEMENTATION
// basically just forcing a TypeError here to match MRI	WITHOUT_CLASSIFICATION	0.9998597151676086	WITHOUT_CLASSIFICATION	1.4028483239134976E-4	IMPLEMENTATION
// not saving DFS instance, as it will only be used once (at most) per call	WITHOUT_CLASSIFICATION	0.9996435004758851	WITHOUT_CLASSIFICATION	3.564995241149152E-4	IMPLEMENTATION
// Args	WITHOUT_CLASSIFICATION	0.9959849386471166	WITHOUT_CLASSIFICATION	0.004015061352883535	IMPLEMENTATION
// static methods only	WITHOUT_CLASSIFICATION	0.9998626771167738	WITHOUT_CLASSIFICATION	1.373228832262613E-4	IMPLEMENTATION
//System.err.println(" calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.999931292888215	WITHOUT_CLASSIFICATION	6.870711178490253E-5	IMPLEMENTATION
// MRI 1.8.6 behavior: null byte after '%' // leads to "%" string. Null byte in // other places, like "%5\0", leads to error.	WITHOUT_CLASSIFICATION	0.9998791649053332	WITHOUT_CLASSIFICATION	1.2083509466675952E-4	IMPLEMENTATION
// last index (+1) accessed by next() // last index (+1) accessed by get()	WITHOUT_CLASSIFICATION	0.9998161111497682	WITHOUT_CLASSIFICATION	1.8388885023172614E-4	IMPLEMENTATION
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly.	WITHOUT_CLASSIFICATION	0.9999621221298144	WITHOUT_CLASSIFICATION	3.787787018555554E-5	IMPLEMENTATION
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly. Version for 1.9.	WITHOUT_CLASSIFICATION	0.9999699049942166	WITHOUT_CLASSIFICATION	3.0095005783413085E-5	IMPLEMENTATION
// MRI doesn't flag it as an error if width is given multiple // times as a number (but it does for *)	WITHOUT_CLASSIFICATION	0.9999356042890605	WITHOUT_CLASSIFICATION	6.439571093952614E-5	IMPLEMENTATION
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999637765759982	WITHOUT_CLASSIFICATION	3.6223424001744564E-5	IMPLEMENTATION
// MRI 1.8.5-p12 doesn't support 1-char strings, but // YARV 0.4.1 does. I don't think it hurts to include // this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])	WITHOUT_CLASSIFICATION	0.9999139968669782	WITHOUT_CLASSIFICATION	8.600313302180303E-5	IMPLEMENTATION
// 'd' and 'i' are the same	WITHOUT_CLASSIFICATION	0.9998901206954488	WITHOUT_CLASSIFICATION	1.0987930455125202E-4	IMPLEMENTATION
// 'u' with space or plus flags is same as 'd'	WITHOUT_CLASSIFICATION	0.9998509256337852	WITHOUT_CLASSIFICATION	1.4907436621479012E-4	IMPLEMENTATION
// We depart here from strict adherence to MRI code, as MRI // uses C-sprintf, in part, to format numeric output, while // we'll use Java's numeric formatting code (and our own).	WITHOUT_CLASSIFICATION	0.9999494997493222	WITHOUT_CLASSIFICATION	5.050025067781082E-5	IMPLEMENTATION
// skip '-' in bytes, will add where appropriate	WITHOUT_CLASSIFICATION	0.9998818679784114	WITHOUT_CLASSIFICATION	1.1813202158849514E-4	IMPLEMENTATION
// ..	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
// the 1 is for the stripped sign char	WITHOUT_CLASSIFICATION	0.9999418915476632	WITHOUT_CLASSIFICATION	5.8108452336915096E-5	IMPLEMENTATION
// FIXME: what is correct 'recv' argument? // (this does produce the desired behavior)	WITHOUT_CLASSIFICATION	0.9998804650604859	WITHOUT_CLASSIFICATION	1.1953493951416258E-4	IMPLEMENTATION
// gotta have at least a zero...	WITHOUT_CLASSIFICATION	0.9998722801359432	WITHOUT_CLASSIFICATION	1.277198640568149E-4	IMPLEMENTATION
// OK, we now have the significand in digits[0...nDigits] // and the exponent in exponent.  We're ready to format.	WITHOUT_CLASSIFICATION	0.9999426065723858	WITHOUT_CLASSIFICATION	5.739342761438162E-5	IMPLEMENTATION
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9997669414035242	WITHOUT_CLASSIFICATION	2.330585964758194E-4	IMPLEMENTATION
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9997534857042146	WITHOUT_CLASSIFICATION	2.4651429578532416E-4	IMPLEMENTATION
//System.err.println(" stringToLong/reading c=" + data[s]);	WITHOUT_CLASSIFICATION	0.99993277327954	WITHOUT_CLASSIFICATION	6.722672045999193E-5	IMPLEMENTATION
//System.err.println(" stringToLong/converted c=" + c);	WITHOUT_CLASSIFICATION	0.9999383361255676	WITHOUT_CLASSIFICATION	6.166387443245351E-5	IMPLEMENTATION
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9997669414035242	WITHOUT_CLASSIFICATION	2.330585964758194E-4	IMPLEMENTATION
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9997534857042146	WITHOUT_CLASSIFICATION	2.4651429578532416E-4	IMPLEMENTATION
// precision for G/g includes integer digits	WITHOUT_CLASSIFICATION	0.9998978734613498	WITHOUT_CLASSIFICATION	1.0212653865017368E-4	IMPLEMENTATION
// deal with length/width	WITHOUT_CLASSIFICATION	0.9998151481479821	WITHOUT_CLASSIFICATION	1.8485185201784203E-4	IMPLEMENTATION
// deal with length/width	WITHOUT_CLASSIFICATION	0.9998151481479821	WITHOUT_CLASSIFICATION	1.8485185201784203E-4	IMPLEMENTATION
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999242403223582	WITHOUT_CLASSIFICATION	7.575967764177668E-5	IMPLEMENTATION
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999835219795036	WITHOUT_CLASSIFICATION	1.6478020496479057E-5	IMPLEMENTATION
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9998040793538033	WITHOUT_CLASSIFICATION	1.959206461967906E-4	IMPLEMENTATION
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9997515399162304	WITHOUT_CLASSIFICATION	2.4846008376949665E-4	IMPLEMENTATION
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.999904951527272	WITHOUT_CLASSIFICATION	9.504847272801185E-5	IMPLEMENTATION
// MRI behavior: In this mode // trailing zeroes are removed: // 1.500E+05 -> 1.5E+05 	WITHOUT_CLASSIFICATION	0.999853982193277	WITHOUT_CLASSIFICATION	1.460178067228894E-4	IMPLEMENTATION
// '.' is printed	WITHOUT_CLASSIFICATION	0.9997631589309114	WITHOUT_CLASSIFICATION	2.368410690886009E-4	IMPLEMENTATION
// all precision numebers printed	WITHOUT_CLASSIFICATION	0.9998669959496473	WITHOUT_CLASSIFICATION	1.3300405035274377E-4	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9997955781623968	WITHOUT_CLASSIFICATION	2.0442183760321038E-4	IMPLEMENTATION
// '.'	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
// decimal form, like (but not *just* like!) 'f'	WITHOUT_CLASSIFICATION	0.9998285252776964	WITHOUT_CLASSIFICATION	1.7147472230359572E-4	IMPLEMENTATION
// digits array shifted, update all	WITHOUT_CLASSIFICATION	0.9999097623119059	WITHOUT_CLASSIFICATION	9.023768809412424E-5	IMPLEMENTATION
// will have a trailing '.' // g fills trailing zeroes if #	WITHOUT_CLASSIFICATION	0.999883540382372	WITHOUT_CLASSIFICATION	1.1645961762802275E-4	IMPLEMENTATION
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9998373445629615	WITHOUT_CLASSIFICATION	1.6265543703852388E-4	IMPLEMENTATION
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9998373445629615	WITHOUT_CLASSIFICATION	1.6265543703852388E-4	IMPLEMENTATION
// always need at least a 0	WITHOUT_CLASSIFICATION	0.999831720421716	WITHOUT_CLASSIFICATION	1.6827957828402033E-4	IMPLEMENTATION
// always need at least a 0	WITHOUT_CLASSIFICATION	0.999831720421716	WITHOUT_CLASSIFICATION	1.6827957828402033E-4	IMPLEMENTATION
// digits arr shifted, update all	WITHOUT_CLASSIFICATION	0.9999049626412572	WITHOUT_CLASSIFICATION	9.503735874290596E-5	IMPLEMENTATION
// (1|intlen).prec	WITHOUT_CLASSIFICATION	0.9997515399162304	WITHOUT_CLASSIFICATION	2.4846008376949665E-4	IMPLEMENTATION
// (1|intlen)	WITHOUT_CLASSIFICATION	0.9997515399162304	WITHOUT_CLASSIFICATION	2.4846008376949665E-4	IMPLEMENTATION
// will have a trailing '.'	WITHOUT_CLASSIFICATION	0.9998707883152421	WITHOUT_CLASSIFICATION	1.2921168475786454E-4	IMPLEMENTATION
// fill up the rest with zeroes	WITHOUT_CLASSIFICATION	0.9998949356966985	WITHOUT_CLASSIFICATION	1.0506430330152185E-4	IMPLEMENTATION
//System.err.println(" main/len=" + len);	WITHOUT_CLASSIFICATION	0.9999138332764134	WITHOUT_CLASSIFICATION	8.616672358670939E-5	IMPLEMENTATION
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9998040793538033	WITHOUT_CLASSIFICATION	1.959206461967906E-4	IMPLEMENTATION
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9997515399162304	WITHOUT_CLASSIFICATION	2.4846008376949665E-4	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9997955781623968	WITHOUT_CLASSIFICATION	2.0442183760321038E-4	IMPLEMENTATION
// '.'	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
// equivalent to MRI case '\0':	WITHOUT_CLASSIFICATION	0.9998182713015554	WITHOUT_CLASSIFICATION	1.8172869844459896E-4	IMPLEMENTATION
// '.' and all precision digits printed	WITHOUT_CLASSIFICATION	0.999877352506835	WITHOUT_CLASSIFICATION	1.226474931650321E-4	IMPLEMENTATION
// \v	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
// dangling '%' char	WITHOUT_CLASSIFICATION	0.9997543441491497	WITHOUT_CLASSIFICATION	2.456558508502913E-4	IMPLEMENTATION
// main while loop (offset < length)	WITHOUT_CLASSIFICATION	0.9998786128283141	WITHOUT_CLASSIFICATION	1.2138717168597367E-4	IMPLEMENTATION
// debugging code, keeping for now	WITHOUT_CLASSIFICATION	0.9998889016036977	WITHOUT_CLASSIFICATION	1.110983963023279E-4	IMPLEMENTATION
// MRI rounds up on nnn5nnn, but not nnn5 -- // except for when they do	WITHOUT_CLASSIFICATION	0.9998303871721373	WITHOUT_CLASSIFICATION	1.6961282786268382E-4	IMPLEMENTATION
// "%.0f" % 0.99	WITHOUT_CLASSIFICATION	0.9997515399162304	WITHOUT_CLASSIFICATION	2.4846008376949665E-4	IMPLEMENTATION
// limit the length of negatives if possible (also faster)	WITHOUT_CLASSIFICATION	0.999891246538867	WITHOUT_CLASSIFICATION	1.0875346113305942E-4	IMPLEMENTATION
// negative values	WITHOUT_CLASSIFICATION	0.9998439487632284	WITHOUT_CLASSIFICATION	1.560512367716181E-4	IMPLEMENTATION
// calculation for negatives when %u specified // for values >= Integer.MIN_VALUE * 2, MRI uses (the equivalent of) //   long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val // for smaller values, BigInteger math is required to conform to MRI's // result.	WITHOUT_CLASSIFICATION	0.9999604165939252	WITHOUT_CLASSIFICATION	3.958340607483253E-5	IMPLEMENTATION
// relatively cheap test for 32-bit values	WITHOUT_CLASSIFICATION	0.9999121684853667	WITHOUT_CLASSIFICATION	8.783151463323909E-5	IMPLEMENTATION
// no such luck...	WITHOUT_CLASSIFICATION	0.9998166672954294	WITHOUT_CLASSIFICATION	1.833327045706031E-4	IMPLEMENTATION
// ok, now it gets expensive...	WITHOUT_CLASSIFICATION	0.9998264056812043	WITHOUT_CLASSIFICATION	1.7359431879574927E-4	IMPLEMENTATION
// go through negated powers of 32 until we find one small enough 	WITHOUT_CLASSIFICATION	0.9998648746716173	WITHOUT_CLASSIFICATION	1.3512532838263138E-4	IMPLEMENTATION
// add to the corresponding positive power of 32 for the result. // meaningful? no. conformant? yes. I just write the code...	WITHOUT_CLASSIFICATION	0.99998700570677	WITHOUT_CLASSIFICATION	1.2994293229903105E-5	IMPLEMENTATION
/* constant vector a */	WITHOUT_CLASSIFICATION	0.9998285293623782	WITHOUT_CLASSIFICATION	1.7147063762177033E-4	IMPLEMENTATION
/* most significant w-r bits */	WITHOUT_CLASSIFICATION	0.9998241484487826	WITHOUT_CLASSIFICATION	1.7585155121745035E-4	IMPLEMENTATION
/* least significant r bits */	WITHOUT_CLASSIFICATION	0.9998131648289488	WITHOUT_CLASSIFICATION	1.868351710513615E-4	IMPLEMENTATION
// state[j] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.999827891364963	WITHOUT_CLASSIFICATION	1.7210863503697832E-4	IMPLEMENTATION
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.999827891364963	WITHOUT_CLASSIFICATION	1.7210863503697832E-4	IMPLEMENTATION
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.999827891364963	WITHOUT_CLASSIFICATION	1.7210863503697832E-4	IMPLEMENTATION
/* MSB is 1; assuring non-zero initial array */	WITHOUT_CLASSIFICATION	0.9998890874680075	WITHOUT_CLASSIFICATION	1.1091253199240516E-4	IMPLEMENTATION
/* Tempering */	WITHOUT_CLASSIFICATION	0.9997624522385389	WITHOUT_CLASSIFICATION	2.3754776146123123E-4	IMPLEMENTATION
// MRI behavior: Week values are monotonous. // So, weeks that effectively belong to previous year, // will get the value of 0, not 52 or 53, as in Java.	WITHOUT_CLASSIFICATION	0.9999690917997234	WITHOUT_CLASSIFICATION	3.090820027659591E-5	IMPLEMENTATION
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999138548637143	WITHOUT_CLASSIFICATION	8.614513628574512E-5	IMPLEMENTATION
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999138548637143	WITHOUT_CLASSIFICATION	8.614513628574512E-5	IMPLEMENTATION
// \v	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
//System.err.println("getSign()");	WITHOUT_CLASSIFICATION	0.9999138109196382	WITHOUT_CLASSIFICATION	8.61890803618829E-5	IMPLEMENTATION
//System.err.println(" getSign/" + sign);	WITHOUT_CLASSIFICATION	0.9999139817967636	WITHOUT_CLASSIFICATION	8.601820323636512E-5	IMPLEMENTATION
//System.err.println("figureOutBase()/base=" + base);	WITHOUT_CLASSIFICATION	0.9999142508148174	WITHOUT_CLASSIFICATION	8.57491851825341E-5	IMPLEMENTATION
//System.err.println(" figureOutBase/base=" + base);	WITHOUT_CLASSIFICATION	0.9999135375495983	WITHOUT_CLASSIFICATION	8.646245040168047E-5	IMPLEMENTATION
//System.err.println("calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999289257341256	WITHOUT_CLASSIFICATION	7.107426587438341E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9960042135944229	WITHOUT_CLASSIFICATION	0.003995786405577051	IMPLEMENTATION
//System.err.println(" stringToLong=" + val);	WITHOUT_CLASSIFICATION	0.9999302726343453	WITHOUT_CLASSIFICATION	6.972736565463799E-5	IMPLEMENTATION
// no number	WITHOUT_CLASSIFICATION	0.9998295838052457	WITHOUT_CLASSIFICATION	1.704161947544039E-4	IMPLEMENTATION
// trailing garbage	WITHOUT_CLASSIFICATION	0.9997855947671286	WITHOUT_CLASSIFICATION	2.1440523287129848E-4	IMPLEMENTATION
//System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);	WITHOUT_CLASSIFICATION	0.9999340850180175	WITHOUT_CLASSIFICATION	6.59149819825701E-5	IMPLEMENTATION
// it was not found at all!	WITHOUT_CLASSIFICATION	0.9998981079473827	WITHOUT_CLASSIFICATION	1.0189205261731848E-4	IMPLEMENTATION
// can be overridden to be informed when objects are removed	WITHOUT_CLASSIFICATION	0.9999368775175513	WITHOUT_CLASSIFICATION	6.312248244865642E-5	IMPLEMENTATION
// we reached the end of a list	WITHOUT_CLASSIFICATION	0.9998886819359358	WITHOUT_CLASSIFICATION	1.1131806406422556E-4	IMPLEMENTATION
// goto next bucket	WITHOUT_CLASSIFICATION	0.9997601444148425	WITHOUT_CLASSIFICATION	2.3985558515748795E-4	IMPLEMENTATION
// we reached the end	WITHOUT_CLASSIFICATION	0.9998728928353902	WITHOUT_CLASSIFICATION	1.2710716460989337E-4	IMPLEMENTATION
// entry is the first element of this bucket	WITHOUT_CLASSIFICATION	0.9999528591854334	WITHOUT_CLASSIFICATION	4.714081456667329E-5	IMPLEMENTATION
// states	WITHOUT_CLASSIFICATION	0.9963606014769628	WITHOUT_CLASSIFICATION	0.0036393985230371555	IMPLEMENTATION
// remove leading whitespace (includes _ for lax) // get sign, if any	WITHOUT_CLASSIFICATION	0.9999802207366703	WITHOUT_CLASSIFICATION	1.97792633296309E-5	IMPLEMENTATION
// optimistic pass - calculate value as digits are processed // digits - lax rules // decimal digits - lax rules // exponent sign/digits - lax rules // digits - strict rules // decimal digits - strict rules // exponent sign/digits - strict rules // complete calculation if possible	WITHOUT_CLASSIFICATION	0.9999489214893359	WITHOUT_CLASSIFICATION	5.107851066405254E-5	IMPLEMENTATION
// fields used for direct (optimistic) calculation // number of significant digits, updated as parsed // zeroes that may go to significand or exponent // offset of decimal pt from start (-1 -> no decimal) // significand, updated as parsed // exponent, updated as parsed	WITHOUT_CLASSIFICATION	0.9999848192211019	WITHOUT_CLASSIFICATION	1.5180778898043049E-5	IMPLEMENTATION
// drop through for sign	WITHOUT_CLASSIFICATION	0.9998502857125798	WITHOUT_CLASSIFICATION	1.497142874202177E-4	IMPLEMENTATION
// switch // will use this if we have to go back the slow way	WITHOUT_CLASSIFICATION	0.999947472192226	WITHOUT_CLASSIFICATION	5.252780777400307E-5	IMPLEMENTATION
// drop through for non-strict digits	WITHOUT_CLASSIFICATION	0.9998758031870065	WITHOUT_CLASSIFICATION	1.2419681299345384E-4	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999202005394308	WITHOUT_CLASSIFICATION	7.979946056920941E-5	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999805376176404	WITHOUT_CLASSIFICATION	1.9462382359526285E-5	IMPLEMENTATION
// no digits, go calc (will return +/- 0.0 for lax)	WITHOUT_CLASSIFICATION	0.9999157292608132	WITHOUT_CLASSIFICATION	8.427073918676009E-5	IMPLEMENTATION
// ignore leading zeroes	WITHOUT_CLASSIFICATION	0.9999768372449113	WITHOUT_CLASSIFICATION	2.3162755088728095E-5	IMPLEMENTATION
// just save a count of zeroes for now; if no digit // ends up following them, they'll be applied to the // exponent rather than the significand (and our max // length for optimistic calc).	WITHOUT_CLASSIFICATION	0.9999847619154845	WITHOUT_CLASSIFICATION	1.5238084515473493E-5	IMPLEMENTATION
// ok, got a non-zero, have to own up to our horded zeroes	WITHOUT_CLASSIFICATION	0.9998812751859726	WITHOUT_CLASSIFICATION	1.1872481402732134E-4	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9998039829432802	WITHOUT_CLASSIFICATION	1.9601705671989553E-4	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9998039829432802	WITHOUT_CLASSIFICATION	1.9601705671989553E-4	IMPLEMENTATION
// oh, well, it was worth a try. go let // Double/FloatingDecimal handle it 	WITHOUT_CLASSIFICATION	0.9998097704248019	WITHOUT_CLASSIFICATION	1.9022957519812365E-4	IMPLEMENTATION
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999712141992919	WITHOUT_CLASSIFICATION	2.878580070803392E-5	IMPLEMENTATION
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999712141992919	WITHOUT_CLASSIFICATION	2.878580070803392E-5	IMPLEMENTATION
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.999936629778394	WITHOUT_CLASSIFICATION	6.337022160593096E-5	IMPLEMENTATION
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.999936629778394	WITHOUT_CLASSIFICATION	6.337022160593096E-5	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9997959774823695	WITHOUT_CLASSIFICATION	2.040225176306086E-4	IMPLEMENTATION
// first non_underscore char must be digit	WITHOUT_CLASSIFICATION	0.9999066666855446	WITHOUT_CLASSIFICATION	9.333331445539534E-5	IMPLEMENTATION
// no dec digits, end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999039716637749	WITHOUT_CLASSIFICATION	9.602833622511368E-5	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.99977720713472	WITHOUT_CLASSIFICATION	2.2279286528015886E-4	IMPLEMENTATION
// difficult case, send to Double/FloatingDecimal	WITHOUT_CLASSIFICATION	0.9998417858965936	WITHOUT_CLASSIFICATION	1.5821410340639895E-4	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9958779281901554	WITHOUT_CLASSIFICATION	0.004122071809844572	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9958779281901554	WITHOUT_CLASSIFICATION	0.004122071809844572	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999202005394308	WITHOUT_CLASSIFICATION	7.979946056920941E-5	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999202005394308	WITHOUT_CLASSIFICATION	7.979946056920941E-5	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999202005394308	WITHOUT_CLASSIFICATION	7.979946056920941E-5	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999805376176404	WITHOUT_CLASSIFICATION	1.9462382359526285E-5	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9998039829432802	WITHOUT_CLASSIFICATION	1.9601705671989553E-4	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9998039829432802	WITHOUT_CLASSIFICATION	1.9601705671989553E-4	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9998039829432802	WITHOUT_CLASSIFICATION	1.9601705671989553E-4	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9997959774823695	WITHOUT_CLASSIFICATION	2.040225176306086E-4	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9997959774823695	WITHOUT_CLASSIFICATION	2.040225176306086E-4	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9997959774823695	WITHOUT_CLASSIFICATION	2.040225176306086E-4	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.99977720713472	WITHOUT_CLASSIFICATION	2.2279286528015886E-4	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.99977720713472	WITHOUT_CLASSIFICATION	2.2279286528015886E-4	IMPLEMENTATION
// lax (str.to_f) allows underscores between e/E and sign	WITHOUT_CLASSIFICATION	0.9998478922227998	WITHOUT_CLASSIFICATION	1.5210777720020378E-4	IMPLEMENTATION
// switch // for // no exponent, so drop through for calculation	WITHOUT_CLASSIFICATION	0.9999255658952229	WITHOUT_CLASSIFICATION	7.443410477704559E-5	IMPLEMENTATION
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.999898493126627	WITHOUT_CLASSIFICATION	1.0150687337298719E-4	IMPLEMENTATION
// TODO: it's not clear to me why, in FloatingDecimal, the // "slop" calculation performed above for positive exponents // isn't used for negative exponents as well. Will find out...	WITHOUT_CLASSIFICATION	0.9129414701905473	WITHOUT_CLASSIFICATION	0.0870585298094527	IMPLEMENTATION
// no digits, error	WITHOUT_CLASSIFICATION	0.9998237808335276	WITHOUT_CLASSIFICATION	1.7621916647246743E-4	IMPLEMENTATION
// too big for us	WITHOUT_CLASSIFICATION	0.9998015219483802	WITHOUT_CLASSIFICATION	1.984780516198183E-4	IMPLEMENTATION
// too big for us	WITHOUT_CLASSIFICATION	0.9998015219483802	WITHOUT_CLASSIFICATION	1.984780516198183E-4	IMPLEMENTATION
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999160631188195	WITHOUT_CLASSIFICATION	8.393688118042179E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9960042135944229	WITHOUT_CLASSIFICATION	0.003995786405577051	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9960042135944229	WITHOUT_CLASSIFICATION	0.003995786405577051	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9960042135944229	WITHOUT_CLASSIFICATION	0.003995786405577051	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9960042135944229	WITHOUT_CLASSIFICATION	0.003995786405577051	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9960042135944229	WITHOUT_CLASSIFICATION	0.003995786405577051	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999492865174605	WITHOUT_CLASSIFICATION	5.071348253952776E-5	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999492865174605	WITHOUT_CLASSIFICATION	5.071348253952776E-5	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999492865174605	WITHOUT_CLASSIFICATION	5.071348253952776E-5	IMPLEMENTATION
// first char must be digit	WITHOUT_CLASSIFICATION	0.9999002234907489	WITHOUT_CLASSIFICATION	9.977650925106938E-5	IMPLEMENTATION
// no dec digits after '.', error for strict	WITHOUT_CLASSIFICATION	0.9999032424054354	WITHOUT_CLASSIFICATION	9.67575945645921E-5	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999805376176404	WITHOUT_CLASSIFICATION	1.9462382359526285E-5	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9997959774823695	WITHOUT_CLASSIFICATION	2.040225176306086E-4	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9997959774823695	WITHOUT_CLASSIFICATION	2.040225176306086E-4	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9960042135944229	WITHOUT_CLASSIFICATION	0.003995786405577051	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9960042135944229	WITHOUT_CLASSIFICATION	0.003995786405577051	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999492865174605	WITHOUT_CLASSIFICATION	5.071348253952776E-5	IMPLEMENTATION
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999160631188195	WITHOUT_CLASSIFICATION	8.393688118042179E-5	IMPLEMENTATION
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9998724747988006	WITHOUT_CLASSIFICATION	1.275252011994527E-4	IMPLEMENTATION
// switch //while	WITHOUT_CLASSIFICATION	0.999826246392668	WITHOUT_CLASSIFICATION	1.7375360733209246E-4	IMPLEMENTATION
/*     * All the positive powers of 10 that can be     * represented exactly in double/float.     * (From sun.misc.FloatingDecimal.java)     */	WITHOUT_CLASSIFICATION	0.999967232283615	WITHOUT_CLASSIFICATION	3.27677163850656E-5	IMPLEMENTATION
// Zlib behavior: negative win_bits means no header and no checksum.	WITHOUT_CLASSIFICATION	0.9999188662550217	WITHOUT_CLASSIFICATION	8.113374497828575E-5	IMPLEMENTATION
// rb_enc_mbclen	WITHOUT_CLASSIFICATION	0.9997515399162304	WITHOUT_CLASSIFICATION	2.4846008376949665E-4	IMPLEMENTATION
// rb_enc_precise_mbclen	WITHOUT_CLASSIFICATION	0.999804962962152	WITHOUT_CLASSIFICATION	1.950370378480004E-4	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9997515648590852	WITHOUT_CLASSIFICATION	2.484351409148619E-4	IMPLEMENTATION
// arg cannot be negative	WITHOUT_CLASSIFICATION	0.9998689417921305	WITHOUT_CLASSIFICATION	1.3105820786946129E-4	IMPLEMENTATION
// NoFunctionalitySignalFacade	WITHOUT_CLASSIFICATION	0.9998439780782504	WITHOUT_CLASSIFICATION	1.5602192174968038E-4	IMPLEMENTATION
// Change visibility so others can see it	WITHOUT_CLASSIFICATION	0.9999151505511638	WITHOUT_CLASSIFICATION	8.484944883621361E-5	IMPLEMENTATION
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9998868057816948	WITHOUT_CLASSIFICATION	1.1319421830517061E-4	IMPLEMENTATION
// strip off "_dot_rb" for .rb files	WITHOUT_CLASSIFICATION	0.9998665243850826	WITHOUT_CLASSIFICATION	1.3347561491739243E-4	IMPLEMENTATION
// Makes sure the key is not already in the hashtable.	WITHOUT_CLASSIFICATION	0.9999767320876431	WITHOUT_CLASSIFICATION	2.326791235683816E-5	IMPLEMENTATION
// Rehash the table if the threshold is exceeded	WITHOUT_CLASSIFICATION	0.9999451156714032	WITHOUT_CLASSIFICATION	5.488432859669306E-5	IMPLEMENTATION
// Creates the new entry.	WITHOUT_CLASSIFICATION	0.9999424576062708	WITHOUT_CLASSIFICATION	5.754239372925884E-5	IMPLEMENTATION
// next entry to return // current slot // current entry	WITHOUT_CLASSIFICATION	0.9999485723343953	WITHOUT_CLASSIFICATION	5.142766560483249E-5	IMPLEMENTATION
// advance to first entry	WITHOUT_CLASSIFICATION	0.9998669769535533	WITHOUT_CLASSIFICATION	1.3302304644671167E-4	IMPLEMENTATION
// The reason why we need the stream is to be able to invoke available() on it. // STDIN in Java is non-interruptible, non-selectable, and attempt to read // on such stream might lead to thread being blocked without *any* way to unblock it. // That's where available() comes it, so at least we could check whether // anything is available to be read without blocking.	WITHOUT_CLASSIFICATION	0.9999924269853474	WITHOUT_CLASSIFICATION	7.573014652601471E-6	IMPLEMENTATION
/*package-protected*/	WITHOUT_CLASSIFICATION	0.9998145048947562	WITHOUT_CLASSIFICATION	1.8549510524375917E-4	IMPLEMENTATION
// raw file URL, just open directly	WITHOUT_CLASSIFICATION	0.9998730741632451	WITHOUT_CLASSIFICATION	1.2692583675488032E-4	IMPLEMENTATION
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999083176644743	WITHOUT_CLASSIFICATION	9.168233552565742E-5	IMPLEMENTATION
// if refcount is at or below zero, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999127989550679	WITHOUT_CLASSIFICATION	8.720104493207338E-5	IMPLEMENTATION
// if channel is already closed, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999428777806179	WITHOUT_CLASSIFICATION	5.712221938221093E-5	IMPLEMENTATION
// otherwise decrement and possibly close as normal	WITHOUT_CLASSIFICATION	0.9998340942186609	WITHOUT_CLASSIFICATION	1.6590578133902654E-4	IMPLEMENTATION
// r/w buffer // are we reading or writing?	WITHOUT_CLASSIFICATION	0.9998495885634635	WITHOUT_CLASSIFICATION	1.5041143653647402E-4	IMPLEMENTATION
// this constructor is used by fdopen, so we don't increment descriptor ref count	WITHOUT_CLASSIFICATION	0.9999432131136582	WITHOUT_CLASSIFICATION	5.6786886341669006E-5	IMPLEMENTATION
// unread back	WITHOUT_CLASSIFICATION	0.9997576757111754	WITHOUT_CLASSIFICATION	2.4232428882459733E-4	IMPLEMENTATION
// iterate over remainder of buffer until we find a match	WITHOUT_CLASSIFICATION	0.9999130407658108	WITHOUT_CLASSIFICATION	8.695923418915625E-5	IMPLEMENTATION
// terminate and advance buffer when we find our char	WITHOUT_CLASSIFICATION	0.9998727382618647	WITHOUT_CLASSIFICATION	1.2726173813534979E-4	IMPLEMENTATION
// no match, append remainder of buffer and continue with next block	WITHOUT_CLASSIFICATION	0.9999458293317626	WITHOUT_CLASSIFICATION	5.417066823737296E-5	IMPLEMENTATION
// found a match above, check if remaining separator characters match, appending as we go	WITHOUT_CLASSIFICATION	0.9999756896984707	WITHOUT_CLASSIFICATION	2.431030152926153E-5	IMPLEMENTATION
// // Check file size - special files in /proc have zero size and need to be // handled by the generic read path. //	WITHOUT_CLASSIFICATION	0.9999423541589153	WITHOUT_CLASSIFICATION	5.7645841084718347E-5	IMPLEMENTATION
// // Copy any buffered data (including ungetc byte) //	WITHOUT_CLASSIFICATION	0.9998816447788531	WITHOUT_CLASSIFICATION	1.1835522114693455E-4	IMPLEMENTATION
// // Now read unbuffered directly from the file //	WITHOUT_CLASSIFICATION	0.999956144178766	WITHOUT_CLASSIFICATION	4.3855821233979264E-5	IMPLEMENTATION
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9998724747988006	WITHOUT_CLASSIFICATION	1.275252011994527E-4	IMPLEMENTATION
// // Need to clamp source (buffer) size to avoid overrun //	WITHOUT_CLASSIFICATION	0.9998352814075205	WITHOUT_CLASSIFICATION	1.647185924794798E-4	IMPLEMENTATION
// not closing from finalize	WITHOUT_CLASSIFICATION	0.9995658638291285	WITHOUT_CLASSIFICATION	4.341361708715195E-4	IMPLEMENTATION
// clear runtime so it doesn't get stuck in memory (JRUBY-2933)	WITHOUT_CLASSIFICATION	0.9999484443797356	WITHOUT_CLASSIFICATION	5.155562026449485E-5	IMPLEMENTATION
// silence	WITHOUT_CLASSIFICATION	0.9959620383330836	WITHOUT_CLASSIFICATION	0.004037961666916372	IMPLEMENTATION
// silence	WITHOUT_CLASSIFICATION	0.9959620383330836	WITHOUT_CLASSIFICATION	0.004037961666916372	IMPLEMENTATION
// Don't bother	WITHOUT_CLASSIFICATION	0.9997316947563063	WITHOUT_CLASSIFICATION	2.6830524369364755E-4	IMPLEMENTATION
// Don't bother	WITHOUT_CLASSIFICATION	0.9997316947563063	WITHOUT_CLASSIFICATION	2.6830524369364755E-4	IMPLEMENTATION
// For Sockets, only write as much as will fit.	WITHOUT_CLASSIFICATION	0.9998634010916188	WITHOUT_CLASSIFICATION	1.3659890838127597E-4	IMPLEMENTATION
// Correct position for read / write buffering (we could invalidate, but expensive)	WITHOUT_CLASSIFICATION	0.9999489849305715	WITHOUT_CLASSIFICATION	5.101506942856417E-5	IMPLEMENTATION
// Adjust for buffered data	WITHOUT_CLASSIFICATION	0.9998362743478282	WITHOUT_CLASSIFICATION	1.6372565217194314E-4	IMPLEMENTATION
// for SEEK_CUR, need to adjust for buffered data	WITHOUT_CLASSIFICATION	0.9997990112308042	WITHOUT_CLASSIFICATION	2.009887691957526E-4	IMPLEMENTATION
// libc flushes writes on any read from the actual file, so we flush here	WITHOUT_CLASSIFICATION	0.9999281487256904	WITHOUT_CLASSIFICATION	7.185127430969773E-5	IMPLEMENTATION
// we have read ahead, and need to back up	WITHOUT_CLASSIFICATION	0.9997645191070792	WITHOUT_CLASSIFICATION	2.3548089292078052E-4	IMPLEMENTATION
// 128K seems to be the minimum at which the stat+seek is faster than reallocation	WITHOUT_CLASSIFICATION	0.9999487233737553	WITHOUT_CLASSIFICATION	5.1276626244624505E-5	IMPLEMENTATION
// // limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations //	WITHOUT_CLASSIFICATION	0.9999295085647476	WITHOUT_CLASSIFICATION	7.049143525233855E-5	IMPLEMENTATION
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999040119866365	WITHOUT_CLASSIFICATION	9.598801336357327E-5	IMPLEMENTATION
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999573952774659	WITHOUT_CLASSIFICATION	4.2604722534260105E-5	IMPLEMENTATION
// // Avoid double-copying for reads that are larger than the buffer size //	WITHOUT_CLASSIFICATION	0.9999322390331944	WITHOUT_CLASSIFICATION	6.776096680563237E-5	IMPLEMENTATION
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999386745097003	WITHOUT_CLASSIFICATION	6.132549029973449E-5	IMPLEMENTATION
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999386745097003	WITHOUT_CLASSIFICATION	6.132549029973449E-5	IMPLEMENTATION
// // Avoid double-copying for reads that are larger than the buffer size, or // the destination is a direct buffer. //	WITHOUT_CLASSIFICATION	0.9999707913487278	WITHOUT_CLASSIFICATION	2.9208651272130286E-5	IMPLEMENTATION
// // We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating // a huge temporary native buffer, when doing reads into a heap buffer // If the dst buffer is direct, then no need to limit. //	WITHOUT_CLASSIFICATION	0.9999465074510394	WITHOUT_CLASSIFICATION	5.3492548960607246E-5	IMPLEMENTATION
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999145323226746	WITHOUT_CLASSIFICATION	8.54676773254117E-5	IMPLEMENTATION
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999145323226746	WITHOUT_CLASSIFICATION	8.54676773254117E-5	IMPLEMENTATION
// Doesn't fit in buffer. Write immediately. // ensure nothing left to write	WITHOUT_CLASSIFICATION	0.999973490966071	WITHOUT_CLASSIFICATION	2.6509033929026936E-5	IMPLEMENTATION
// truncate can't lengthen files, so we save position, seek/write, and go back	WITHOUT_CLASSIFICATION	0.9999471955330937	WITHOUT_CLASSIFICATION	5.2804466906160095E-5	IMPLEMENTATION
// how far ahead we are when reading	WITHOUT_CLASSIFICATION	0.9998704916222364	WITHOUT_CLASSIFICATION	1.2950837776357522E-4	IMPLEMENTATION
// if the read buffer is ahead, back up	WITHOUT_CLASSIFICATION	0.9999288272395631	WITHOUT_CLASSIFICATION	7.117276043690457E-5	IMPLEMENTATION
// close without removing from finalizers	WITHOUT_CLASSIFICATION	0.9999137828398309	WITHOUT_CLASSIFICATION	8.621716016917369E-5	IMPLEMENTATION
// putting a bit back, so we're not at EOF anymore	WITHOUT_CLASSIFICATION	0.9999414838209709	WITHOUT_CLASSIFICATION	5.851617902908046E-5	IMPLEMENTATION
// save the ungot	WITHOUT_CLASSIFICATION	0.999899190246752	WITHOUT_CLASSIFICATION	1.0080975324796569E-4	IMPLEMENTATION
// otherwise, we try an unbuffered read to get whatever's available	WITHOUT_CLASSIFICATION	0.9998354560634163	WITHOUT_CLASSIFICATION	1.645439365837953E-4	IMPLEMENTATION
// ignore this; select() will set the correct mode when it is finished	WITHOUT_CLASSIFICATION	0.9999911816550755	WITHOUT_CLASSIFICATION	8.818344924530521E-6	IMPLEMENTATION
// flush first	WITHOUT_CLASSIFICATION	0.9997766882043614	WITHOUT_CLASSIFICATION	2.233117956385979E-4	IMPLEMENTATION
// // Wake up any channels that became unblocked //	WITHOUT_CLASSIFICATION	0.9998647738831175	WITHOUT_CLASSIFICATION	1.3522611688247352E-4	IMPLEMENTATION
// // Register any new blocking I/O requests //	WITHOUT_CLASSIFICATION	0.9998884852096451	WITHOUT_CLASSIFICATION	1.1151479035495781E-4	IMPLEMENTATION
// Now clear out any previously selected channels	WITHOUT_CLASSIFICATION	0.9999691058538728	WITHOUT_CLASSIFICATION	3.0894146127254705E-5	IMPLEMENTATION
// // Wait for I/O on any channel //	WITHOUT_CLASSIFICATION	0.9998781325021183	WITHOUT_CLASSIFICATION	1.2186749788171883E-4	IMPLEMENTATION
// Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'	WITHOUT_CLASSIFICATION	0.9999642779663517	WITHOUT_CLASSIFICATION	3.5722033648220875E-5	IMPLEMENTATION
// Java requires "w" for creating a file that does not exist	WITHOUT_CLASSIFICATION	0.9999476801960584	WITHOUT_CLASSIFICATION	5.231980394161374E-5	IMPLEMENTATION
// seek to force underlying buffer to flush	WITHOUT_CLASSIFICATION	0.9998386817204881	WITHOUT_CLASSIFICATION	1.6131827951202412E-4	IMPLEMENTATION
// seek to force read buffer to invalidate	WITHOUT_CLASSIFICATION	0.9998396685568908	WITHOUT_CLASSIFICATION	1.603314431092633E-4	IMPLEMENTATION
/*        result = eval("arr = Array::['c', 200]; p arr");        assertEquals("[\"c\", 200]", result);        result = eval("arr = Array.['d', 200]; p arr");        assertEquals("[\"d\", 200]", result);        */	WITHOUT_CLASSIFICATION	0.9999851657014592	WITHOUT_CLASSIFICATION	1.4834298540816128E-5	IMPLEMENTATION
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999347982636533	WITHOUT_CLASSIFICATION	6.520173634672463E-5	IMPLEMENTATION
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.8558075482208306	WITHOUT_CLASSIFICATION	0.14419245177916945	IMPLEMENTATION
// make sure the pipe stream is set to null	WITHOUT_CLASSIFICATION	0.9999560854277055	WITHOUT_CLASSIFICATION	4.391457229450252E-5	IMPLEMENTATION
// make sure the main stream is set to null	WITHOUT_CLASSIFICATION	0.9999472232038022	WITHOUT_CLASSIFICATION	5.2776796197826674E-5	IMPLEMENTATION
// first try our custom-generated Unsafe	WITHOUT_CLASSIFICATION	0.9996145132234385	WITHOUT_CLASSIFICATION	3.854867765614489E-4	IMPLEMENTATION
// then try Sun's Unsafe	WITHOUT_CLASSIFICATION	0.9998440397461749	WITHOUT_CLASSIFICATION	1.5596025382524613E-4	IMPLEMENTATION
// if we get here, the class and field exist; construct our Unsafe impl // that calls it directly	WITHOUT_CLASSIFICATION	0.9999638385397375	WITHOUT_CLASSIFICATION	3.6161460262538546E-5	IMPLEMENTATION
// else leave it null	WITHOUT_CLASSIFICATION	0.9998303628925269	WITHOUT_CLASSIFICATION	1.6963710747312812E-4	IMPLEMENTATION
// TypeMatcher	WITHOUT_CLASSIFICATION	0.9997611676379311	WITHOUT_CLASSIFICATION	2.3883236206890518E-4	IMPLEMENTATION
// This is now needed, since module Java // isn't in by default	WITHOUT_CLASSIFICATION	0.9999264661657071	WITHOUT_CLASSIFICATION	7.353383429295635E-5	IMPLEMENTATION
// Iterate over the RubyHash keySet, simultaneously iterating over the values()	WITHOUT_CLASSIFICATION	0.999916728861995	WITHOUT_CLASSIFICATION	8.327113800500792E-5	IMPLEMENTATION
// Get the value from the map via the key	WITHOUT_CLASSIFICATION	0.9999765635840354	WITHOUT_CLASSIFICATION	2.3436415964674293E-5	IMPLEMENTATION
// Get the value from the map via the values iterator	WITHOUT_CLASSIFICATION	0.9999809557471075	WITHOUT_CLASSIFICATION	1.9044252892401738E-5	IMPLEMENTATION
// Check the 2 values obtained via different means	WITHOUT_CLASSIFICATION	0.9999307242325843	WITHOUT_CLASSIFICATION	6.927576741567188E-5	IMPLEMENTATION
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999261265837844	WITHOUT_CLASSIFICATION	7.387341621560957E-5	IMPLEMENTATION
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999261265837844	WITHOUT_CLASSIFICATION	7.387341621560957E-5	IMPLEMENTATION
// Check the entry.setValue values come back out ok	WITHOUT_CLASSIFICATION	0.9999412369359987	WITHOUT_CLASSIFICATION	5.876306400137525E-5	IMPLEMENTATION
// If we're running from within an IDE we may not have // the .rb files in our classpath. Try to find them // in the filesystem instead.	WITHOUT_CLASSIFICATION	0.9999861223616169	WITHOUT_CLASSIFICATION	1.3877638383219528E-5	IMPLEMENTATION
//assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); //assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));	WITHOUT_CLASSIFICATION	0.9998625097818911	WITHOUT_CLASSIFICATION	1.3749021810901342E-4	IMPLEMENTATION
// Init	WITHOUT_CLASSIFICATION	0.996364601981702	WITHOUT_CLASSIFICATION	0.00363539801829793	IMPLEMENTATION
// Block	WITHOUT_CLASSIFICATION	0.9959786807198518	WITHOUT_CLASSIFICATION	0.004021319280148152	IMPLEMENTATION
// Copy constructor	WITHOUT_CLASSIFICATION	0.999835424159515	WITHOUT_CLASSIFICATION	1.645758404850298E-4	IMPLEMENTATION
// presumably this require should fail	WITHOUT_CLASSIFICATION	0.9997334704565883	WITHOUT_CLASSIFICATION	2.6652954341163106E-4	IMPLEMENTATION
// JRUBY-646 // presumably this require should fail	WITHOUT_CLASSIFICATION	0.9997249419059848	WITHOUT_CLASSIFICATION	2.7505809401515667E-4	IMPLEMENTATION
// Test that requiring a normal Java class raises an error (JRUBY-3214	WITHOUT_CLASSIFICATION	0.9999462341437683	WITHOUT_CLASSIFICATION	5.376585623164989E-5	IMPLEMENTATION
// ok	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
// Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods // from Ruby so they are not really unused).	WITHOUT_CLASSIFICATION	0.9999340552911652	WITHOUT_CLASSIFICATION	6.594470883473454E-5	IMPLEMENTATION
//load should work several times in a row	WITHOUT_CLASSIFICATION	0.9997853748570964	WITHOUT_CLASSIFICATION	2.1462514290352303E-4	IMPLEMENTATION
//reset the $loadTestvar	WITHOUT_CLASSIFICATION	0.9998271638415148	WITHOUT_CLASSIFICATION	1.7283615848530327E-4	IMPLEMENTATION
//call throwException via JRuby	WITHOUT_CLASSIFICATION	0.9999018041191535	WITHOUT_CLASSIFICATION	9.819588084651169E-5	IMPLEMENTATION
// Notify the calling thread that we're about to go to sleep the first time	WITHOUT_CLASSIFICATION	0.9999650266875445	WITHOUT_CLASSIFICATION	3.497331245547118E-5	IMPLEMENTATION
// wait for the go signal	WITHOUT_CLASSIFICATION	0.9998830348172784	WITHOUT_CLASSIFICATION	1.1696518272159865E-4	IMPLEMENTATION
// run ten separate calls into Ruby, with delay and explicit GC	WITHOUT_CLASSIFICATION	0.9999012825971247	WITHOUT_CLASSIFICATION	9.871740287531919E-5	IMPLEMENTATION
// wait until thread has initialized	WITHOUT_CLASSIFICATION	0.9999208217161325	WITHOUT_CLASSIFICATION	7.917828386747525E-5	IMPLEMENTATION
// notify thread to proceed	WITHOUT_CLASSIFICATION	0.9998634471718472	WITHOUT_CLASSIFICATION	1.3655282815282455E-4	IMPLEMENTATION
// wait until thread has completed	WITHOUT_CLASSIFICATION	0.9997669465591846	WITHOUT_CLASSIFICATION	2.3305344081530287E-4	IMPLEMENTATION
// we do preand post load outside the "body" versions to pre-prepare // and pre-push the dynamic scope we need for lastline	WITHOUT_CLASSIFICATION	0.9998707348314098	WITHOUT_CLASSIFICATION	1.292651685902371E-4	IMPLEMENTATION
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9998950835461476	WITHOUT_CLASSIFICATION	1.0491645385232319E-4	IMPLEMENTATION
// MRI behavior: raise ArgumentError for 'unknown command' before // checking number of args.	WITHOUT_CLASSIFICATION	0.9999622103958283	WITHOUT_CLASSIFICATION	3.778960417174139E-5	IMPLEMENTATION
// if any exceptions were raised, we fail	WITHOUT_CLASSIFICATION	0.9999014823897376	WITHOUT_CLASSIFICATION	9.851761026231722E-5	IMPLEMENTATION
// there should only be one more thread in thread group than before we started	WITHOUT_CLASSIFICATION	0.9999229287007576	WITHOUT_CLASSIFICATION	7.707129924234055E-5	IMPLEMENTATION
// construct a new cache with thread's classloader and no limit	WITHOUT_CLASSIFICATION	0.9999433344601656	WITHOUT_CLASSIFICATION	5.6665539834308535E-5	IMPLEMENTATION
//        Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); //        Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();	WITHOUT_CLASSIFICATION	0.9999770618415968	WITHOUT_CLASSIFICATION	2.2938158403189233E-5	IMPLEMENTATION
//        assertSame(script1, script2);	WITHOUT_CLASSIFICATION	0.9999576684925814	WITHOUT_CLASSIFICATION	4.233150741859041E-5	IMPLEMENTATION
// void methods should work	WITHOUT_CLASSIFICATION	0.9997896801713071	WITHOUT_CLASSIFICATION	2.1031982869294002E-4	IMPLEMENTATION
// methods with required = 4 or higher should bind and be callable using reflection // JRUBY-3649	WITHOUT_CLASSIFICATION	0.9999174576125099	WITHOUT_CLASSIFICATION	8.254238749008011E-5	IMPLEMENTATION
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999967228720912	WITHOUT_CLASSIFICATION	3.277127908830236E-6	IMPLEMENTATION
// Ensure we have a new interpreter for each test. Previous we were using the //  same interpreter which caused problems as soon as one test failed.	WITHOUT_CLASSIFICATION	0.9999719004031626	WITHOUT_CLASSIFICATION	2.809959683743555E-5	IMPLEMENTATION
// Without a flush Ant will miss some of our output	WITHOUT_CLASSIFICATION	0.9998611192084718	WITHOUT_CLASSIFICATION	1.3888079152817682E-4	IMPLEMENTATION
// assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());	WITHOUT_CLASSIFICATION	0.9998868935838076	WITHOUT_CLASSIFICATION	1.1310641619248865E-4	IMPLEMENTATION
//        int n = 10;	WITHOUT_CLASSIFICATION	0.9999334288371168	WITHOUT_CLASSIFICATION	6.657116288320337E-5	IMPLEMENTATION
// there might be more test classes in a single file, so we iterate over them	WITHOUT_CLASSIFICATION	0.9999549202695227	WITHOUT_CLASSIFICATION	4.5079730477292464E-5	IMPLEMENTATION
//No ClassCastException!	WITHOUT_CLASSIFICATION	0.9998968446083286	WITHOUT_CLASSIFICATION	1.0315539167136644E-4	IMPLEMENTATION
// value equality	WITHOUT_CLASSIFICATION	0.9998087650716564	WITHOUT_CLASSIFICATION	1.9123492834365838E-4	IMPLEMENTATION
// identity equality	WITHOUT_CLASSIFICATION	0.9998189893683948	WITHOUT_CLASSIFICATION	1.8101063160516636E-4	IMPLEMENTATION
// bench straight-up integer fib(30)	WITHOUT_CLASSIFICATION	0.999834391041156	WITHOUT_CLASSIFICATION	1.6560895884389366E-4	IMPLEMENTATION
// bench Integer fib	WITHOUT_CLASSIFICATION	0.9997532136837973	WITHOUT_CLASSIFICATION	2.467863162026837E-4	IMPLEMENTATION
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.999804454146818	WITHOUT_CLASSIFICATION	1.955458531819676E-4	IMPLEMENTATION
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.999804454146818	WITHOUT_CLASSIFICATION	1.955458531819676E-4	IMPLEMENTATION
// bench fixnum-boxed fib	WITHOUT_CLASSIFICATION	0.9998040793538033	WITHOUT_CLASSIFICATION	1.959206461967906E-4	IMPLEMENTATION
// bench straight-up long fib(30)	WITHOUT_CLASSIFICATION	0.9998272943413343	WITHOUT_CLASSIFICATION	1.7270565866567066E-4	IMPLEMENTATION
// bench Long fib	WITHOUT_CLASSIFICATION	0.9997522468221305	WITHOUT_CLASSIFICATION	2.4775317786944224E-4	IMPLEMENTATION
// skip this one, probably no 'ls' (windows)	WITHOUT_CLASSIFICATION	0.9999262023812676	WITHOUT_CLASSIFICATION	7.379761873244539E-5	IMPLEMENTATION
// start off with a neutral parent	WITHOUT_CLASSIFICATION	0.9999230166112073	WITHOUT_CLASSIFICATION	7.698338879261174E-5	IMPLEMENTATION
/*            public class Hello {                public static String getMessage() {                    return ".....";                }            }            */	WITHOUT_CLASSIFICATION	0.9999984891941599	WITHOUT_CLASSIFICATION	1.5108058400548928E-6	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999415829120201	WITHOUT_CLASSIFICATION	5.841708797981901E-5	IMPLEMENTATION
// Note: We can't use file.exists() to check whether the symlink // exists or not, because that method returns false for existing // but broken symlink. So, we try without the existence check, // but in the try-catch block. // MRI behavior: symlink? on broken symlink should return true.	WITHOUT_CLASSIFICATION	0.9999896984494957	WITHOUT_CLASSIFICATION	1.030155050426005E-5	IMPLEMENTATION
// We are creating a new IO object that shares the same // IOHandler (and fileno).	WITHOUT_CLASSIFICATION	0.9999415716853634	WITHOUT_CLASSIFICATION	5.8428314636654537E-5	IMPLEMENTATION
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9998876184855992	WITHOUT_CLASSIFICATION	1.1238151440085512E-4	IMPLEMENTATION
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9998821734929745	WITHOUT_CLASSIFICATION	1.1782650702550923E-4	IMPLEMENTATION
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999565896513407	WITHOUT_CLASSIFICATION	4.3410348659297064E-5	IMPLEMENTATION
// Translate "x || y" --> "x = (is_true(x) ? x : y)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, true, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9999128953835659	WITHOUT_CLASSIFICATION	8.710461643420747E-5	IMPLEMENTATION
// // Force the client socket to be blocking //	WITHOUT_CLASSIFICATION	0.9998978565186798	WITHOUT_CLASSIFICATION	1.0214348132022292E-4	IMPLEMENTATION
// Additional context surrounding tokens that both the lexer and // grammar use.	WITHOUT_CLASSIFICATION	0.9999164255708533	WITHOUT_CLASSIFICATION	8.357442914676848E-5	IMPLEMENTATION
// Enebo:  c can never be antrhign but '.' // Why did I put this here?	WITHOUT_CLASSIFICATION	0.9997449036455622	WITHOUT_CLASSIFICATION	2.550963544377516E-4	IMPLEMENTATION
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9999686822680454	WITHOUT_CLASSIFICATION	3.1317731954704704E-5	IMPLEMENTATION
//[C,C] //[C, boolean]	WITHOUT_CLASSIFICATION	0.9998228017364209	WITHOUT_CLASSIFICATION	1.771982635790692E-4	IMPLEMENTATION
// Label for the start of the closure (used to implement redo) // Label for the end of the closure (used to implement retry)	WITHOUT_CLASSIFICATION	0.9977954363448759	WITHOUT_CLASSIFICATION	0.002204563655124095	IMPLEMENTATION
// ignore; job was cancelled // FIXME: is this ok?	WITHOUT_CLASSIFICATION	0.9999751007047292	WITHOUT_CLASSIFICATION	2.4899295270749904E-5	IMPLEMENTATION
//                    // check arity //                    checkArity(mv, scope);	WITHOUT_CLASSIFICATION	0.9999480033174507	WITHOUT_CLASSIFICATION	5.1996682549268984E-5	IMPLEMENTATION
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9998882230696872	WITHOUT_CLASSIFICATION	1.1177693031284192E-4	IMPLEMENTATION
// we take the first method found as our "n" method, since for any non-specific // arity they'll all error the same. If an actual "n" method is created, we // use that.	WITHOUT_CLASSIFICATION	0.9999789570019699	WITHOUT_CLASSIFICATION	2.1042998029996696E-5	IMPLEMENTATION
// Used by our duck-typification of Proc into interface types, to allow // coercing a simple proc into an interface parameter.	WITHOUT_CLASSIFICATION	0.9999760449479888	WITHOUT_CLASSIFICATION	2.3955052011295353E-5	IMPLEMENTATION
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9998966208460235	WITHOUT_CLASSIFICATION	1.033791539765619E-4	IMPLEMENTATION
// it's either as converted as we can make it via above logic or it's // not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.999890017332319	WITHOUT_CLASSIFICATION	1.0998266768096811E-4	IMPLEMENTATION
// package scheme 2: separate module for each full package name, constructed  // from the camel-cased package segments: Java::JavaLang::Object, 	WITHOUT_CLASSIFICATION	0.9999673263563573	WITHOUT_CLASSIFICATION	3.2673643642727526E-5	IMPLEMENTATION
// // construct the proxy method //	WITHOUT_CLASSIFICATION	0.9999024221323412	WITHOUT_CLASSIFICATION	9.757786765886123E-5	IMPLEMENTATION
// line 159 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9998636793562958	WITHOUT_CLASSIFICATION	1.3632064370421192E-4	IMPLEMENTATION
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999225652505999	WITHOUT_CLASSIFICATION	7.74347494001871E-5	IMPLEMENTATION
// line 152 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9998636793562958	WITHOUT_CLASSIFICATION	1.3632064370421192E-4	IMPLEMENTATION
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999696930985897	WITHOUT_CLASSIFICATION	3.030690141020695E-5	IMPLEMENTATION
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999225652505999	WITHOUT_CLASSIFICATION	7.74347494001871E-5	IMPLEMENTATION
// We only need to pass in current scope if we are evaluating as a block (which // is only done for evals).  We need to pass this in so that we can appropriately scope // down to captured scopes when we are parsing.	WITHOUT_CLASSIFICATION	0.9999536264882573	WITHOUT_CLASSIFICATION	4.637351174273019E-5	IMPLEMENTATION
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999637765759982	WITHOUT_CLASSIFICATION	3.6223424001744564E-5	IMPLEMENTATION
// A place to store that special hiding space that bindings need to implement things like: // eval("a = 1", binding); eval("p a").  All binding instances must get access to this // hidden shared scope.  We store it here.  This will be null if no binding has yet // been called.	WITHOUT_CLASSIFICATION	0.9610893998333239	WITHOUT_CLASSIFICATION	0.03891060016667605	IMPLEMENTATION
// TODO: make it 16 now ? // MUST be power of 2!	WITHOUT_CLASSIFICATION	0.8991787514903853	WITHOUT_CLASSIFICATION	0.10082124850961467	IMPLEMENTATION
// check visibility // dup method	WITHOUT_CLASSIFICATION	0.9999338772107532	WITHOUT_CLASSIFICATION	6.612278924680773E-5	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999601192582823	WITHOUT_CLASSIFICATION	3.9880741717732166E-5	IMPLEMENTATION
// unsigned int, native // unsigned long, native	WITHOUT_CLASSIFICATION	0.9998448430800547	WITHOUT_CLASSIFICATION	1.5515691994520204E-4	IMPLEMENTATION
//need padding //I'm fairly sure there is a library call to create a //string filled with a given char with a given length but I couldn't find it	WITHOUT_CLASSIFICATION	0.9999832458355579	WITHOUT_CLASSIFICATION	1.6754164442212633E-5	IMPLEMENTATION
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999835219795036	WITHOUT_CLASSIFICATION	1.6478020496479057E-5	IMPLEMENTATION
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999347982636533	WITHOUT_CLASSIFICATION	6.520173634672463E-5	IMPLEMENTATION
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.999898493126627	WITHOUT_CLASSIFICATION	1.0150687337298719E-4	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999742031096198	WITHOUT_CLASSIFICATION	2.5796890380122586E-5	IMPLEMENTATION
// Estimate the square root with the foremost 62 bits of squarD // bi and scale are a tandem	WITHOUT_CLASSIFICATION	0.9998967832500784	WITHOUT_CLASSIFICATION	1.0321674992165152E-4	IMPLEMENTATION
// captures // begin and end are used when not groups defined // source string	WITHOUT_CLASSIFICATION	0.9999552844438263	WITHOUT_CLASSIFICATION	4.47155561737757E-5	IMPLEMENTATION
// // INSTANCE VARIABLE RUBY METHODS //	WITHOUT_CLASSIFICATION	0.9998419577772956	WITHOUT_CLASSIFICATION	1.5804222270434043E-4	IMPLEMENTATION
// switch // while	WITHOUT_CLASSIFICATION	0.9997935632397512	WITHOUT_CLASSIFICATION	2.0643676024881193E-4	IMPLEMENTATION
// For nodes do not have their own scope so we pass null to indicate this. // 'For's are implemented as blocks in evaluation, but they have no scope so we // just deal with this lack of scope throughout its lifespan.  We should probably // change the way this works to get rid of multiple null checks.	WITHOUT_CLASSIFICATION	0.9979001133250275	WITHOUT_CLASSIFICATION	0.0020998866749724547	IMPLEMENTATION
// This field is used during argument processing to avoid putting RubyArray // instances that are purely for utility purposes into ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999810626411643	WITHOUT_CLASSIFICATION	1.8937358835723876E-5	IMPLEMENTATION
// Parent container for this context (can be dynamic!!) // If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure // List of IR instructions for this method	WITHOUT_CLASSIFICATION	0.9999838904042159	WITHOUT_CLASSIFICATION	1.6109595784145422E-5	IMPLEMENTATION
// Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = false    //    beq(v1, false, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999678187796259	WITHOUT_CLASSIFICATION	3.218122037400628E-5	IMPLEMENTATION
// expected	WITHOUT_CLASSIFICATION	0.9999037063108884	WITHOUT_CLASSIFICATION	9.629368911150895E-5	IMPLEMENTATION
// Do nothing	WITHOUT_CLASSIFICATION	0.9999687363578806	WITHOUT_CLASSIFICATION	3.126364211927141E-5	IMPLEMENTATION
// constructor	WITHOUT_CLASSIFICATION	0.9998492211253588	WITHOUT_CLASSIFICATION	1.5077887464123708E-4	IMPLEMENTATION
// If a line is followed by a blank line put // it back.	WITHOUT_CLASSIFICATION	0.999876331279681	WITHOUT_CLASSIFICATION	1.2366872031907835E-4	IMPLEMENTATION
/* $>: default output handle */	WITHOUT_CLASSIFICATION	0.9999446356144985	WITHOUT_CLASSIFICATION	5.536438550151914E-5	IMPLEMENTATION
// line 423	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 486	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// Signal uses sun.misc.* classes, this is not allowed // in the security-sensitive environments	WITHOUT_CLASSIFICATION	0.9999804183617113	WITHOUT_CLASSIFICATION	1.9581638288738356E-5	IMPLEMENTATION
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999196110410896	WITHOUT_CLASSIFICATION	8.038895891036274E-5	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9998994316016204	WITHOUT_CLASSIFICATION	1.0056839837963263E-4	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9998994316016204	WITHOUT_CLASSIFICATION	1.0056839837963263E-4	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.999837139698684	WITHOUT_CLASSIFICATION	1.6286030131595368E-4	IMPLEMENTATION
// if there's no receiver, evaluate and pass in the superclass, or // pass self if it no superclass	WITHOUT_CLASSIFICATION	0.9999746027037404	WITHOUT_CLASSIFICATION	2.5397296259555832E-5	IMPLEMENTATION
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.999841776347612	WITHOUT_CLASSIFICATION	1.5822365238806111E-4	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9391082804437679	WITHOUT_CLASSIFICATION	0.06089171955623203	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9391082804437679	WITHOUT_CLASSIFICATION	0.06089171955623203	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9391082804437679	WITHOUT_CLASSIFICATION	0.06089171955623203	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9391082804437679	WITHOUT_CLASSIFICATION	0.06089171955623203	IMPLEMENTATION
// Decrease value to hit upper range.  	WITHOUT_CLASSIFICATION	0.9998644687350818	WITHOUT_CLASSIFICATION	1.3553126491810857E-4	IMPLEMENTATION
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9997682015669144	WITHOUT_CLASSIFICATION	2.3179843308567322E-4	IMPLEMENTATION
// "else" body	WITHOUT_CLASSIFICATION	0.9997515399162304	WITHOUT_CLASSIFICATION	2.4846008376949665E-4	IMPLEMENTATION
// done // done // done // Nothing to do for 1.8 // done // done // done // done // done // done // done? // done // done // done // done // done // done // done // done // done // done // done //            case DEFINEDNODE: return buildDefined(node, m); // Incomplete // done // done // done // done // done // done // done // done //            case ENSURENODE: return buildEnsureNode(node, m); // DEFERRED // done // done // done // done //            case FLIPNODE: return buildFlip(node, m); // SSS FIXME: What code generates this AST? // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done? // done // done // done // done // done // done -- partially //            case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); // DEFERRED SSS FIXME: What code generates this AST? // done //            case POSTEXENODE: return buildPostExe(node, m); // DEFERRED //            case PREEXENODE: return buildPreExe(node, m); // DEFERRED // done?? // done	WITHOUT_CLASSIFICATION	0.9999744329160715	WITHOUT_CLASSIFICATION	2.5567083928493025E-5	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9997786301202092	WITHOUT_CLASSIFICATION	2.2136987979072385E-4	IMPLEMENTATION
/* $+: string matches last paren. */	WITHOUT_CLASSIFICATION	0.9999171112672662	WITHOUT_CLASSIFICATION	8.288873273380492E-5	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9998083025197539	WITHOUT_CLASSIFICATION	1.9169748024608474E-4	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9998083025197539	WITHOUT_CLASSIFICATION	1.9169748024608474E-4	IMPLEMENTATION
// Ruby code frequently uses a platform check to choose "NUL:" on windows // but since that check doesn't work well on JRuby, we help it out	WITHOUT_CLASSIFICATION	0.9999051132050664	WITHOUT_CLASSIFICATION	9.488679493370676E-5	IMPLEMENTATION
/* 10! */	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
//            case RESCUENODE: return buildRescue(node, m); // DEFERRED //            case RETRYNODE: return buildRetry(node, m); // DEFERRED // done	WITHOUT_CLASSIFICATION	0.9999706710542686	WITHOUT_CLASSIFICATION	2.9328945731334047E-5	IMPLEMENTATION
// Is this instruction live or dead?  During optimization passes, if this instruction // causes no side-effects and the result of the instruction is not needed by anyone else, // we can remove this instruction altogether without affecting program correctness.	WITHOUT_CLASSIFICATION	0.9994980035719085	WITHOUT_CLASSIFICATION	5.01996428091468E-4	IMPLEMENTATION
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9998842135082502	WITHOUT_CLASSIFICATION	1.157864917498477E-4	IMPLEMENTATION
// first, iterate over all required args	WITHOUT_CLASSIFICATION	0.9998975224930394	WITHOUT_CLASSIFICATION	1.0247750696058265E-4	IMPLEMENTATION
// // Determine if the parameter might be passed as a 32bit int parameter. // This just applies to buffer/pointer types. //	WITHOUT_CLASSIFICATION	0.9999842180665772	WITHOUT_CLASSIFICATION	1.5781933422748295E-5	IMPLEMENTATION
//Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());	WITHOUT_CLASSIFICATION	0.9998588894784867	WITHOUT_CLASSIFICATION	1.4111052151328916E-4	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9997515399162304	WITHOUT_CLASSIFICATION	2.4846008376949665E-4	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9997515399162304	WITHOUT_CLASSIFICATION	2.4846008376949665E-4	IMPLEMENTATION
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999696930985897	WITHOUT_CLASSIFICATION	3.030690141020695E-5	IMPLEMENTATION
// line 449	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 495	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// Management/monitoring	WITHOUT_CLASSIFICATION	0.9998197274680114	WITHOUT_CLASSIFICATION	1.8027253198859945E-4	IMPLEMENTATION
// if we've found the last char of the separator, // and we've found at least as many characters as separator length, // and the last n characters of our buffer match the separator, we're done	WITHOUT_CLASSIFICATION	0.9999954927224431	WITHOUT_CLASSIFICATION	4.507277556901622E-6	IMPLEMENTATION
/* 14! */	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
// Process any set of annotations // No supported options	WITHOUT_CLASSIFICATION	0.9999259776379191	WITHOUT_CLASSIFICATION	7.402236208086941E-5	IMPLEMENTATION
// add to the jitted methods set	WITHOUT_CLASSIFICATION	0.9999587673361946	WITHOUT_CLASSIFICATION	4.123266380538633E-5	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.9998851663133662	WITHOUT_CLASSIFICATION	1.1483368663378865E-4	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.9998851663133662	WITHOUT_CLASSIFICATION	1.1483368663378865E-4	IMPLEMENTATION
//            case SCLASSNODE: return buildSClass(node, m); // DEFERRED // done // done // done // done // done // done // done // done //            case UNDEFNODE: return buildUndef(node, m); // DEFERRED // done //            case VALIASNODE: return buildVAlias(node, m); // DEFERRED // done // done	WITHOUT_CLASSIFICATION	0.9999737880928614	WITHOUT_CLASSIFICATION	2.6211907138510017E-5	IMPLEMENTATION
// // Adding a post-invoke for the cb result serves to both keep it alive // until after the function returns, and allows us to clean up the native // trampoline early, instead of letting them accumulate until a GC run //	WITHOUT_CLASSIFICATION	0.999989256480686	WITHOUT_CLASSIFICATION	1.074351931399564E-5	IMPLEMENTATION
/* The Java method doesn't care what class it is, but we need to               know what to convert it to, so we use the object's own class.               If that doesn't help, we use String to force a call to the               object's "to_s" method. */	WITHOUT_CLASSIFICATION	0.999862433708232	WITHOUT_CLASSIFICATION	1.3756629176795137E-4	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.9998498160690519	WITHOUT_CLASSIFICATION	1.5018393094801846E-4	IMPLEMENTATION
// Atomic integers for symbol and method IDs	WITHOUT_CLASSIFICATION	0.999812030975452	WITHOUT_CLASSIFICATION	1.8796902454802205E-4	IMPLEMENTATION
/* 18! */	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9999509259572238	WITHOUT_CLASSIFICATION	4.907404277624371E-5	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999229726594777	WITHOUT_CLASSIFICATION	7.702734052223968E-5	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999229726594777	WITHOUT_CLASSIFICATION	7.702734052223968E-5	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999229726594777	WITHOUT_CLASSIFICATION	7.702734052223968E-5	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999229726594777	WITHOUT_CLASSIFICATION	7.702734052223968E-5	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999779001010506	WITHOUT_CLASSIFICATION	2.2099898949481555E-5	IMPLEMENTATION
/*      * This method takes as input a map of operands to their values, and outputs     * the result of this instruction.     *     * If the value map provides a value for any of the instruction's operands     * the expectation is that the operand will be replaced with the simplified value.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify.     *     * @param valueMap Mapping from operands to their simplified values     * @returns simplified result / output of this instruction     */	WITHOUT_CLASSIFICATION	0.9999888515236327	WITHOUT_CLASSIFICATION	1.1148476367391704E-5	IMPLEMENTATION
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9998595052997402	WITHOUT_CLASSIFICATION	1.4049470025974717E-4	IMPLEMENTATION
// An atomic long for generating DynamicMethod serial numbers	WITHOUT_CLASSIFICATION	0.9998175042696253	WITHOUT_CLASSIFICATION	1.824957303746889E-4	IMPLEMENTATION
// MRI behavior: always check whether the file is writable // or not, even if we are to write 0 bytes.	WITHOUT_CLASSIFICATION	0.9999803331382433	WITHOUT_CLASSIFICATION	1.9666861756656137E-5	IMPLEMENTATION
/* 22! */	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.9998108118696798	WITHOUT_CLASSIFICATION	1.8918813032020866E-4	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9998448007062035	WITHOUT_CLASSIFICATION	1.5519929379641823E-4	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9998448007062035	WITHOUT_CLASSIFICATION	1.5519929379641823E-4	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9998448007062035	WITHOUT_CLASSIFICATION	1.5519929379641823E-4	IMPLEMENTATION
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9998795590737122	WITHOUT_CLASSIFICATION	1.2044092628787769E-4	IMPLEMENTATION
// Build a new class and add it to the current scope (could be a script / module / class)	WITHOUT_CLASSIFICATION	0.9999858878669112	WITHOUT_CLASSIFICATION	1.4112133088747239E-5	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999736399823347	WITHOUT_CLASSIFICATION	2.6360017665350074E-5	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999736399823347	WITHOUT_CLASSIFICATION	2.6360017665350074E-5	IMPLEMENTATION
// AF_INET	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
//////////////////////////////////////////////////////////////////////////// // Now we provide default impls of a number of signatures. For each arity, // we first generate a non-block version of the method, which just adds // NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can // potentially take a block, to only generate the block-receiving signature // and still avoid arg boxing. // // We then provide default implementations of each block-accepting method // that in turn call the IRubyObject[]+Block version of call. This then // finally falls back on the minimum implementation requirement for // dynamic method handles. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999992894238607	WITHOUT_CLASSIFICATION	7.10576139397285E-7	IMPLEMENTATION
// Because we implement Java interfaces now, we need a new === that's // aware of those additional "virtual" supertypes	WITHOUT_CLASSIFICATION	0.9944374486661626	WITHOUT_CLASSIFICATION	0.005562551333837423	IMPLEMENTATION
// BASE64	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
/* note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY         * when value is an integer less than 1.         * We treat 0 as a special case to avoid Domain error.         */	WITHOUT_CLASSIFICATION	0.9999478495665186	WITHOUT_CLASSIFICATION	5.215043348146302E-5	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.9998163548416279	WITHOUT_CLASSIFICATION	1.8364515837221518E-4	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.999895538429447	WITHOUT_CLASSIFICATION	1.0446157055296296E-4	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.999895538429447	WITHOUT_CLASSIFICATION	1.0446157055296296E-4	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9998743392517015	WITHOUT_CLASSIFICATION	1.256607482985302E-4	IMPLEMENTATION
// SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode // We won't get here for argument receives!  So, buildDasgn is called for // assignments to block variables within a block.  As far as the IR is concerned, // this is just a simple copy	WITHOUT_CLASSIFICATION	0.9999834512074406	WITHOUT_CLASSIFICATION	1.65487925593826E-5	IMPLEMENTATION
// getSimplifiedOperand returns the value of this operand, fully simplified // getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away // // The value is used during optimizations and propagated through the IR.  But, it is thrown away after that. // But, the operand form is used for constructing the compound objects represented by the operand. // // Example: a = [1], b = [3,4], c = [a,b], d = [2,c] //   -- getValue(c) = [1,[3,4]];     getSimplifiedOperand(c) = [1, b] //   -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] // // Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. // So, if contents of a or b is modified, the "simplified value"s of c and d also change!  This difference // is captured by these two methods.	WITHOUT_CLASSIFICATION	0.9999999218284518	WITHOUT_CLASSIFICATION	7.817154818955469E-8	IMPLEMENTATION
//IRubyObject protocol = args[4];	WITHOUT_CLASSIFICATION	0.9998443560686167	WITHOUT_CLASSIFICATION	1.556439313833685E-4	IMPLEMENTATION
// promise to implement three to N with block	WITHOUT_CLASSIFICATION	0.9792268199789966	WITHOUT_CLASSIFICATION	0.020773180021003416	IMPLEMENTATION
// Ruby's OMG capture all source in a Hash feature // Add each line to buffer when encountering newline or EOF for first time.	WITHOUT_CLASSIFICATION	0.9999635513247276	WITHOUT_CLASSIFICATION	3.644867527237521E-5	IMPLEMENTATION
// carriage return	WITHOUT_CLASSIFICATION	0.9998117703981548	WITHOUT_CLASSIFICATION	1.8822960184510128E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9997515399162304	WITHOUT_CLASSIFICATION	2.4846008376949665E-4	IMPLEMENTATION
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9999323830743176	WITHOUT_CLASSIFICATION	6.761692568239829E-5	IMPLEMENTATION
// String construction routines by NOT byte[] buffer and making the target String shared 	WITHOUT_CLASSIFICATION	0.9999694928244002	WITHOUT_CLASSIFICATION	3.0507175599913233E-5	IMPLEMENTATION
// insert all nodes in sequence, hash them in the final instruction // KEY	WITHOUT_CLASSIFICATION	0.9999569620634353	WITHOUT_CLASSIFICATION	4.303793656472086E-5	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999764146577838	WITHOUT_CLASSIFICATION	2.3585342216238114E-5	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9998533263354339	WITHOUT_CLASSIFICATION	1.46673664566125E-4	IMPLEMENTATION
// Basic Block id // CFG that this basic block belongs to // All basic blocks have a starting label // List of non-label instructions	WITHOUT_CLASSIFICATION	0.9998947224519079	WITHOUT_CLASSIFICATION	1.0527754809199157E-4	IMPLEMENTATION
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.999965766774191	WITHOUT_CLASSIFICATION	3.42332258090392E-5	IMPLEMENTATION
// For all uninitialized specific arities, we defer to the "n" method which // should raise appropriate error in all cases.	WITHOUT_CLASSIFICATION	0.9999460761999027	WITHOUT_CLASSIFICATION	5.392380009718307E-5	IMPLEMENTATION
// implement is called to force this class to create stubs for all // methods in the given interface, so they'll show up in the list // of methods and be invocable without passing through method_missing	WITHOUT_CLASSIFICATION	0.9998995781120279	WITHOUT_CLASSIFICATION	1.0042188797212569E-4	IMPLEMENTATION
// CASE IR instructions are dummy instructions  // -- all when/then clauses have been converted into if-then-else blocks	WITHOUT_CLASSIFICATION	0.9999343444435752	WITHOUT_CLASSIFICATION	6.565555642484955E-5	IMPLEMENTATION
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999353061204923	WITHOUT_CLASSIFICATION	6.469387950773201E-5	IMPLEMENTATION
// leave it null and fall back on our normal invocation logic	WITHOUT_CLASSIFICATION	0.9998996609125548	WITHOUT_CLASSIFICATION	1.0033908744518768E-4	IMPLEMENTATION
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999686790681942	WITHOUT_CLASSIFICATION	3.132093180581319E-5	IMPLEMENTATION
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9975454476347503	WITHOUT_CLASSIFICATION	0.002454552365249753	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9998539967766215	WITHOUT_CLASSIFICATION	1.4600322337862519E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9998539967766215	WITHOUT_CLASSIFICATION	1.4600322337862519E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9998539967766215	WITHOUT_CLASSIFICATION	1.4600322337862519E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9998539967766215	WITHOUT_CLASSIFICATION	1.4600322337862519E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9998539967766215	WITHOUT_CLASSIFICATION	1.4600322337862519E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9998539967766215	WITHOUT_CLASSIFICATION	1.4600322337862519E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9998539967766215	WITHOUT_CLASSIFICATION	1.4600322337862519E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9998539967766215	WITHOUT_CLASSIFICATION	1.4600322337862519E-4	IMPLEMENTATION
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999402798411283	WITHOUT_CLASSIFICATION	5.972015887159175E-5	IMPLEMENTATION
/* fall through */	WITHOUT_CLASSIFICATION	0.9998190649774966	WITHOUT_CLASSIFICATION	1.8093502250334659E-4	IMPLEMENTATION
// deal with case when "other" is not a string	WITHOUT_CLASSIFICATION	0.9999324373232227	WITHOUT_CLASSIFICATION	6.756267677739472E-5	IMPLEMENTATION
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999656820585414	WITHOUT_CLASSIFICATION	3.431794145864137E-5	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999415829120201	WITHOUT_CLASSIFICATION	5.841708797981901E-5	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999415829120201	WITHOUT_CLASSIFICATION	5.841708797981901E-5	IMPLEMENTATION
// store argument count information into scope	WITHOUT_CLASSIFICATION	0.9999604406007024	WITHOUT_CLASSIFICATION	3.955939929755665E-5	IMPLEMENTATION
// the load method is used for loading as a top-level script, and prepares appropriate scoping around the code	WITHOUT_CLASSIFICATION	0.9999313250924535	WITHOUT_CLASSIFICATION	6.867490754648147E-5	IMPLEMENTATION
// First, build assignments for specific named arguments	WITHOUT_CLASSIFICATION	0.9999327453628691	WITHOUT_CLASSIFICATION	6.725463713087581E-5	IMPLEMENTATION
//        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } //        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }	WITHOUT_CLASSIFICATION	0.9999653143095111	WITHOUT_CLASSIFICATION	3.4685690488965095E-5	IMPLEMENTATION
// get current context	WITHOUT_CLASSIFICATION	0.9999407509491794	WITHOUT_CLASSIFICATION	5.9249050820463155E-5	IMPLEMENTATION
// octal constant	WITHOUT_CLASSIFICATION	0.9997787084669292	WITHOUT_CLASSIFICATION	2.212915330708098E-4	IMPLEMENTATION
// read	WITHOUT_CLASSIFICATION	0.9963766120137886	WITHOUT_CLASSIFICATION	0.003623387986211396	IMPLEMENTATION
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9996505960538479	WITHOUT_CLASSIFICATION	3.4940394615220376E-4	IMPLEMENTATION
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9998638355637683	WITHOUT_CLASSIFICATION	1.3616443623157363E-4	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999245988908232	WITHOUT_CLASSIFICATION	7.540110917689668E-5	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999245988908232	WITHOUT_CLASSIFICATION	7.540110917689668E-5	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999245988908232	WITHOUT_CLASSIFICATION	7.540110917689668E-5	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997560694411739	WITHOUT_CLASSIFICATION	2.4393055882602926E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997560694411739	WITHOUT_CLASSIFICATION	2.4393055882602926E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997560694411739	WITHOUT_CLASSIFICATION	2.4393055882602926E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997560694411739	WITHOUT_CLASSIFICATION	2.4393055882602926E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997560694411739	WITHOUT_CLASSIFICATION	2.4393055882602926E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997560694411739	WITHOUT_CLASSIFICATION	2.4393055882602926E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997560694411739	WITHOUT_CLASSIFICATION	2.4393055882602926E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997560694411739	WITHOUT_CLASSIFICATION	2.4393055882602926E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997560694411739	WITHOUT_CLASSIFICATION	2.4393055882602926E-4	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999845183044581	WITHOUT_CLASSIFICATION	1.5481695541956075E-5	IMPLEMENTATION
// at end	WITHOUT_CLASSIFICATION	0.9960236537947217	WITHOUT_CLASSIFICATION	0.003976346205278271	IMPLEMENTATION
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9998635571656908	WITHOUT_CLASSIFICATION	1.3644283430925454E-4	IMPLEMENTATION
// save blocking state	WITHOUT_CLASSIFICATION	0.9998994742233976	WITHOUT_CLASSIFICATION	1.0052577660236956E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997560694411739	WITHOUT_CLASSIFICATION	2.4393055882602926E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997560694411739	WITHOUT_CLASSIFICATION	2.4393055882602926E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997560694411739	WITHOUT_CLASSIFICATION	2.4393055882602926E-4	IMPLEMENTATION
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9998129087892584	WITHOUT_CLASSIFICATION	1.8709121074156115E-4	IMPLEMENTATION
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999353699587452	WITHOUT_CLASSIFICATION	6.46300412548234E-5	IMPLEMENTATION
// fall back on empty env when security disallows environment var access (like in an applet)	WITHOUT_CLASSIFICATION	0.9999215736621749	WITHOUT_CLASSIFICATION	7.842633782509035E-5	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9997975428480418	WITHOUT_CLASSIFICATION	2.024571519582498E-4	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9997975428480418	WITHOUT_CLASSIFICATION	2.024571519582498E-4	IMPLEMENTATION
// load null block	WITHOUT_CLASSIFICATION	0.9998317298477173	WITHOUT_CLASSIFICATION	1.6827015228265633E-4	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.999974913788388	WITHOUT_CLASSIFICATION	2.5086211612046706E-5	IMPLEMENTATION
// nothing else to here - the module version will be // included in the class.	WITHOUT_CLASSIFICATION	0.9999878826719093	WITHOUT_CLASSIFICATION	1.2117328090628807E-5	IMPLEMENTATION
// JRUBY-1000, fail early when attempting to subclass a final Java class; // solved here by adding an exception-throwing "inherited"	WITHOUT_CLASSIFICATION	0.9999174917314548	WITHOUT_CLASSIFICATION	8.250826854512622E-5	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9997468629799059	WITHOUT_CLASSIFICATION	2.531370200941529E-4	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9997468629799059	WITHOUT_CLASSIFICATION	2.531370200941529E-4	IMPLEMENTATION
// Translate ret = (a || b) to ret = (a ? true : b) as follows //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = true //    beq(v1, true, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999660217107385	WITHOUT_CLASSIFICATION	3.397828926165307E-5	IMPLEMENTATION
// Initial precision is that of double numbers 2^63/2 ~ 4E18 // 63-1 an even number of number bits // precision seems 16 to 18 digits	WITHOUT_CLASSIFICATION	0.9999685128633985	WITHOUT_CLASSIFICATION	3.148713660153861E-5	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9998598835301126	WITHOUT_CLASSIFICATION	1.401164698874231E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.9998351862041064	WITHOUT_CLASSIFICATION	1.6481379589355395E-4	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.9998889501707533	WITHOUT_CLASSIFICATION	1.1104982924670829E-4	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.9998889501707533	WITHOUT_CLASSIFICATION	1.1104982924670829E-4	IMPLEMENTATION
// check arity	WITHOUT_CLASSIFICATION	0.9998581608508277	WITHOUT_CLASSIFICATION	1.4183914917233464E-4	IMPLEMENTATION
// check arity	WITHOUT_CLASSIFICATION	0.9998581608508277	WITHOUT_CLASSIFICATION	1.4183914917233464E-4	IMPLEMENTATION
// create the class	WITHOUT_CLASSIFICATION	0.9999655073492028	WITHOUT_CLASSIFICATION	3.449265079735782E-5	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999588793408603	WITHOUT_CLASSIFICATION	4.112065913973178E-5	IMPLEMENTATION
// No hex value after the 'x'.	WITHOUT_CLASSIFICATION	0.999875018568613	WITHOUT_CLASSIFICATION	1.2498143138699248E-4	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9998040793538033	WITHOUT_CLASSIFICATION	1.959206461967906E-4	IMPLEMENTATION
// Let m be the exact digits precision in an earlier! loop	WITHOUT_CLASSIFICATION	0.9998837197893113	WITHOUT_CLASSIFICATION	1.1628021068873959E-4	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999449014968358	WITHOUT_CLASSIFICATION	5.509850316430135E-5	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9958779281901554	WITHOUT_CLASSIFICATION	0.004122071809844572	IMPLEMENTATION
// Label for the start of the method // Label for the end of the method	WITHOUT_CLASSIFICATION	0.9999877013829407	WITHOUT_CLASSIFICATION	1.229861705923152E-5	IMPLEMENTATION
// comparisons & checks // checks if the operand is non-null and non-false // EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...	WITHOUT_CLASSIFICATION	0.999977871948012	WITHOUT_CLASSIFICATION	2.212805198796323E-5	IMPLEMENTATION
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9996657795476328	WITHOUT_CLASSIFICATION	3.3422045236714015E-4	IMPLEMENTATION
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9996693516040647	WITHOUT_CLASSIFICATION	3.306483959353003E-4	IMPLEMENTATION
// all done with lookup attempts, release monitor	WITHOUT_CLASSIFICATION	0.9999067908162838	WITHOUT_CLASSIFICATION	9.320918371616792E-5	IMPLEMENTATION
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999348393230261	WITHOUT_CLASSIFICATION	6.516067697382556E-5	IMPLEMENTATION
// Create list of interface names to proxy (and make sure they really are interfaces) // Also build a hashcode from all classes to use for retrieving previously-created impl	WITHOUT_CLASSIFICATION	0.9999968376749799	WITHOUT_CLASSIFICATION	3.162325020069446E-6	IMPLEMENTATION
// Construct local variables based on parameter names passed in	WITHOUT_CLASSIFICATION	0.9999549116126303	WITHOUT_CLASSIFICATION	4.5088387369799946E-5	IMPLEMENTATION
// Value of "TZ" property is of a bit different format, // which confuses the Java's TimeZone.getTimeZone(id) method, // and so, we need to convert it.	WITHOUT_CLASSIFICATION	0.9999343726741522	WITHOUT_CLASSIFICATION	6.562732584781294E-5	IMPLEMENTATION
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.999869141697487	WITHOUT_CLASSIFICATION	1.30858302513054E-4	IMPLEMENTATION
// ensure the object is associated with the wrapper we found it in, // so that if it comes back we don't re-wrap it	WITHOUT_CLASSIFICATION	0.9999675270056579	WITHOUT_CLASSIFICATION	3.247299434201264E-5	IMPLEMENTATION
// return sqrt(squarD) with precision of rootMC	WITHOUT_CLASSIFICATION	0.9999663693150278	WITHOUT_CLASSIFICATION	3.363068497217165E-5	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999742031096198	WITHOUT_CLASSIFICATION	2.5796890380122586E-5	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
// Get a new label using the provided label prefix	WITHOUT_CLASSIFICATION	0.9999420103399048	WITHOUT_CLASSIFICATION	5.798966009525709E-5	IMPLEMENTATION
// normal exit, perform finally and return	WITHOUT_CLASSIFICATION	0.9999000733662967	WITHOUT_CLASSIFICATION	9.9926633703272E-5	IMPLEMENTATION
// coerce arguments	WITHOUT_CLASSIFICATION	0.9998268664652555	WITHOUT_CLASSIFICATION	1.7313353474443925E-4	IMPLEMENTATION
// 0.0 is ok // float range // inverted float range? // NaN // +infinity // -infinity	WITHOUT_CLASSIFICATION	0.9998144541697289	WITHOUT_CLASSIFICATION	1.855458302710839E-4	IMPLEMENTATION
/* expected */	WITHOUT_CLASSIFICATION	0.9998633933765504	WITHOUT_CLASSIFICATION	1.3660662344965497E-4	IMPLEMENTATION
// set this class's method names in var @__java_ovrd_methods if this // is the new class; otherwise, get method names from there if this is // a proxy superclass.	WITHOUT_CLASSIFICATION	0.9999869237633402	WITHOUT_CLASSIFICATION	1.3076236659813845E-5	IMPLEMENTATION
/* ignore backslashed spaces in %w */	WITHOUT_CLASSIFICATION	0.9999036007685783	WITHOUT_CLASSIFICATION	9.639923142169105E-5	IMPLEMENTATION
// Invert the sign, since TZ format and Java format // use opposite signs, sigh... Also, Java API requires // the sign to be always present, be it "+" or "-".	WITHOUT_CLASSIFICATION	0.9998679624467494	WITHOUT_CLASSIFICATION	1.320375532506759E-4	IMPLEMENTATION
// no binding given, use 0 for both	WITHOUT_CLASSIFICATION	0.999863758524804	WITHOUT_CLASSIFICATION	1.3624147519609805E-4	IMPLEMENTATION
// <=> may return nil in many circumstances, e.g. 3 <=> NaN        	WITHOUT_CLASSIFICATION	0.9999185181337107	WITHOUT_CLASSIFICATION	8.148186628933432E-5	IMPLEMENTATION
// use numbered access method	WITHOUT_CLASSIFICATION	0.9998668438427726	WITHOUT_CLASSIFICATION	1.331561572274983E-4	IMPLEMENTATION
// Always use "GMT" since that's required by Java API.	WITHOUT_CLASSIFICATION	0.9998475767527653	WITHOUT_CLASSIFICATION	1.5242324723466194E-4	IMPLEMENTATION
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999854475669456	WITHOUT_CLASSIFICATION	1.4552433054324395E-5	IMPLEMENTATION
// The dataStruct is a place where custom information can be // contained for core implementations that doesn't necessarily // want to go to the trouble of creating a subclass of // RubyObject. The OpenSSL implementation uses this heavily to // save holder objects containing Java cryptography objects. // Java integration uses this to store the Java object ref. //protected transient Object dataStruct;	WITHOUT_CLASSIFICATION	0.9999809766191148	WITHOUT_CLASSIFICATION	1.902338088512473E-5	IMPLEMENTATION
// Remaining arguments are for the script itself	WITHOUT_CLASSIFICATION	0.9999593084957378	WITHOUT_CLASSIFICATION	4.069150426218855E-5	IMPLEMENTATION
// arg grouping, use slower arg walking logic	WITHOUT_CLASSIFICATION	0.9998479952783337	WITHOUT_CLASSIFICATION	1.5200472166622923E-4	IMPLEMENTATION
// build scope names string	WITHOUT_CLASSIFICATION	0.9999085891653349	WITHOUT_CLASSIFICATION	9.141083466516472E-5	IMPLEMENTATION
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.999993790956992	WITHOUT_CLASSIFICATION	6.209043007907544E-6	IMPLEMENTATION
// Here we create an "anonymous" exception type used for unrolling the stack. // MRI creates a new one for *every call* to timeout, which can be costly. // We opt to use a single exception type for all cases to avoid this overhead.	WITHOUT_CLASSIFICATION	0.9999796644840666	WITHOUT_CLASSIFICATION	2.033551593346059E-5	IMPLEMENTATION
// finally	WITHOUT_CLASSIFICATION	0.996457984856308	WITHOUT_CLASSIFICATION	0.003542015143692146	IMPLEMENTATION
// MRI behavior: With TZ equal to "GMT" or "UTC", Time.now // is *NOT* considered as a proper GMT/UTC time: //   ENV['TZ']="GMT" //   Time.now.gmt? ==> false //   ENV['TZ']="UTC" //   Time.now.utc? ==> false // Hence, we need to adjust for that.	WITHOUT_CLASSIFICATION	0.9997636963049275	WITHOUT_CLASSIFICATION	2.3630369507262087E-4	IMPLEMENTATION
// ?l  | boolean | True if file1 exists and is a symbolic link	WITHOUT_CLASSIFICATION	0.9998974745188449	WITHOUT_CLASSIFICATION	1.0252548115504004E-4	IMPLEMENTATION
// This try/catch is to allow failing over to the "commands" logic // when running from within a jruby-complete jar file, which has // jruby.home = a jar file URL that does not resolve correctly with // JRubyFile.create.	WITHOUT_CLASSIFICATION	0.9999825045465955	WITHOUT_CLASSIFICATION	1.749545340449631E-5	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9997505528500358	WITHOUT_CLASSIFICATION	2.494471499641661E-4	IMPLEMENTATION
// specific arity	WITHOUT_CLASSIFICATION	0.9998091004630164	WITHOUT_CLASSIFICATION	1.9089953698356866E-4	IMPLEMENTATION
// In the case of two arguments, MRI will discard the portion of // the first argument after a decimal point (i.e., "floor"). // However in the case of a single argument, any portion after // the decimal point is honored.	WITHOUT_CLASSIFICATION	0.9999936679407013	WITHOUT_CLASSIFICATION	6.332059298678175E-6	IMPLEMENTATION
// ?w  | boolean | True if file1 exists and is writable by effective uid/gid	WITHOUT_CLASSIFICATION	0.999904658551072	WITHOUT_CLASSIFICATION	9.534144892797481E-5	IMPLEMENTATION
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9998428551857624	WITHOUT_CLASSIFICATION	1.5714481423761612E-4	IMPLEMENTATION
/*    @JRubyMethod    public IRubyObject to_proc() {        return RubyProc.newProc(getRuntime(),                                CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()),                                Block.Type.PROC);    }    */	WITHOUT_CLASSIFICATION	0.9999812109182871	WITHOUT_CLASSIFICATION	1.8789081713011804E-5	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9998200733937365	WITHOUT_CLASSIFICATION	1.799266062635365E-4	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9998200733937365	WITHOUT_CLASSIFICATION	1.799266062635365E-4	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999881985140977	WITHOUT_CLASSIFICATION	1.1801485902241099E-5	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999881985140977	WITHOUT_CLASSIFICATION	1.1801485902241099E-5	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9999349940128681	WITHOUT_CLASSIFICATION	6.500598713189342E-5	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9999349940128681	WITHOUT_CLASSIFICATION	6.500598713189342E-5	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999179638774837	WITHOUT_CLASSIFICATION	8.203612251628135E-5	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999179638774837	WITHOUT_CLASSIFICATION	8.203612251628135E-5	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9997700878575719	WITHOUT_CLASSIFICATION	2.2991214242813152E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9997700878575719	WITHOUT_CLASSIFICATION	2.2991214242813152E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9997700878575719	WITHOUT_CLASSIFICATION	2.2991214242813152E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9997700878575719	WITHOUT_CLASSIFICATION	2.2991214242813152E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9997700878575719	WITHOUT_CLASSIFICATION	2.2991214242813152E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9997700878575719	WITHOUT_CLASSIFICATION	2.2991214242813152E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9997700878575719	WITHOUT_CLASSIFICATION	2.2991214242813152E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9997700878575719	WITHOUT_CLASSIFICATION	2.2991214242813152E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9997700878575719	WITHOUT_CLASSIFICATION	2.2991214242813152E-4	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999115498936018	WITHOUT_CLASSIFICATION	8.845010639818721E-5	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999115498936018	WITHOUT_CLASSIFICATION	8.845010639818721E-5	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999115498936018	WITHOUT_CLASSIFICATION	8.845010639818721E-5	IMPLEMENTATION
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999206177586514	WITHOUT_CLASSIFICATION	7.938224134869664E-5	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999349916202175	WITHOUT_CLASSIFICATION	6.500837978254395E-5	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999349916202175	WITHOUT_CLASSIFICATION	6.500837978254395E-5	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999349916202175	WITHOUT_CLASSIFICATION	6.500837978254395E-5	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9998926932021635	WITHOUT_CLASSIFICATION	1.0730679783655961E-4	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9998926932021635	WITHOUT_CLASSIFICATION	1.0730679783655961E-4	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9998926932021635	WITHOUT_CLASSIFICATION	1.0730679783655961E-4	IMPLEMENTATION
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9998420785561672	WITHOUT_CLASSIFICATION	1.579214438326433E-4	IMPLEMENTATION
// backspace	WITHOUT_CLASSIFICATION	0.9997723332531157	WITHOUT_CLASSIFICATION	2.2766674688431E-4	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9997467600745884	WITHOUT_CLASSIFICATION	2.5323992541157695E-4	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9997467600745884	WITHOUT_CLASSIFICATION	2.5323992541157695E-4	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9997467600745884	WITHOUT_CLASSIFICATION	2.5323992541157695E-4	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9997467600745884	WITHOUT_CLASSIFICATION	2.5323992541157695E-4	IMPLEMENTATION
/* package-private */	WITHOUT_CLASSIFICATION	0.9998589401173065	WITHOUT_CLASSIFICATION	1.4105988269343456E-4	IMPLEMENTATION
// fall through	WITHOUT_CLASSIFICATION	0.9998483126190807	WITHOUT_CLASSIFICATION	1.5168738091933884E-4	IMPLEMENTATION
// fall through	WITHOUT_CLASSIFICATION	0.9998483126190807	WITHOUT_CLASSIFICATION	1.5168738091933884E-4	IMPLEMENTATION
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.999796485095998	WITHOUT_CLASSIFICATION	2.0351490400189858E-4	IMPLEMENTATION
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999859272549254	WITHOUT_CLASSIFICATION	1.4072745074554996E-5	IMPLEMENTATION
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999859272549254	WITHOUT_CLASSIFICATION	1.4072745074554996E-5	IMPLEMENTATION
/**      * Nested class whose instances act as thunks reacting to to_str method     * called from (Exception#to_str, Exception#message)     * MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!",     * to_str implementation: "name_err_mesg_to_str"     *     * TODO: this class should not be lookupable     */	WITHOUT_CLASSIFICATION	0.6632305069751293	IMPLEMENTATION	0.33676949302487075	WITHOUT_CLASSIFICATION
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9998570454142213	WITHOUT_CLASSIFICATION	1.4295458577880287E-4	IMPLEMENTATION
// The name of this source (e.g. a filename: foo.rb)	WITHOUT_CLASSIFICATION	0.9999684298362035	WITHOUT_CLASSIFICATION	3.157016379648741E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9998312642475102	WITHOUT_CLASSIFICATION	1.6873575248969533E-4	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9998312642475102	WITHOUT_CLASSIFICATION	1.6873575248969533E-4	IMPLEMENTATION
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9999781877785963	WITHOUT_CLASSIFICATION	2.1812221403644567E-5	IMPLEMENTATION
// We yield here to hopefully permit the target thread to schedule // MRI immediately schedules it, so this is close but not exact	WITHOUT_CLASSIFICATION	0.9999717274232737	WITHOUT_CLASSIFICATION	2.8272576726374898E-5	IMPLEMENTATION
// note that addMethod now does its own put, so any change made to // functionality here should be made there as well 	WITHOUT_CLASSIFICATION	0.9997967582086993	WITHOUT_CLASSIFICATION	2.0324179130080562E-4	IMPLEMENTATION
/* Currently dead code, but useful when we figure out how to actually perform translit.    private static boolean isTranslit(String encoding) {        return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false;    }*/	WITHOUT_CLASSIFICATION	0.9999780995515692	WITHOUT_CLASSIFICATION	2.1900448430677127E-5	IMPLEMENTATION
// empirically it appears that to_ary coersions always return array or nil, so this // should always be an array by now.	WITHOUT_CLASSIFICATION	0.9999560216001171	WITHOUT_CLASSIFICATION	4.397839988291661E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9998312642475102	WITHOUT_CLASSIFICATION	1.6873575248969533E-4	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9998312642475102	WITHOUT_CLASSIFICATION	1.6873575248969533E-4	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9998312642475102	WITHOUT_CLASSIFICATION	1.6873575248969533E-4	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9998312642475102	WITHOUT_CLASSIFICATION	1.6873575248969533E-4	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9998312642475102	WITHOUT_CLASSIFICATION	1.6873575248969533E-4	IMPLEMENTATION
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9998712021091681	WITHOUT_CLASSIFICATION	1.2879789083185289E-4	IMPLEMENTATION
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.99980828269512	WITHOUT_CLASSIFICATION	1.9171730488002728E-4	IMPLEMENTATION
// if it's an inner class and it's not public, we can't access it; // skip population of declared elements	WITHOUT_CLASSIFICATION	0.9999814995979812	WITHOUT_CLASSIFICATION	1.850040201880355E-5	IMPLEMENTATION
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9998801988720646	WITHOUT_CLASSIFICATION	1.1980112793546946E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.999309644166977	WITHOUT_CLASSIFICATION	6.903558330231133E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.999309644166977	WITHOUT_CLASSIFICATION	6.903558330231133E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.999309644166977	WITHOUT_CLASSIFICATION	6.903558330231133E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.999309644166977	WITHOUT_CLASSIFICATION	6.903558330231133E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.999309644166977	WITHOUT_CLASSIFICATION	6.903558330231133E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.999309644166977	WITHOUT_CLASSIFICATION	6.903558330231133E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.999309644166977	WITHOUT_CLASSIFICATION	6.903558330231133E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.999309644166977	WITHOUT_CLASSIFICATION	6.903558330231133E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.999309644166977	WITHOUT_CLASSIFICATION	6.903558330231133E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.999309644166977	WITHOUT_CLASSIFICATION	6.903558330231133E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.999309644166977	WITHOUT_CLASSIFICATION	6.903558330231133E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.999309644166977	WITHOUT_CLASSIFICATION	6.903558330231133E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.999309644166977	WITHOUT_CLASSIFICATION	6.903558330231133E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.999309644166977	WITHOUT_CLASSIFICATION	6.903558330231133E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.999309644166977	WITHOUT_CLASSIFICATION	6.903558330231133E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.999309644166977	WITHOUT_CLASSIFICATION	6.903558330231133E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.999309644166977	WITHOUT_CLASSIFICATION	6.903558330231133E-4	IMPLEMENTATION
// MRI behavior on Windows: it treats '/' as a root of // a current drive (but only if SINGLE slash is present!): // E.g., if current work directory is // 'D:/home/directory', then '/' means 'D:/'. // // Basically, '/path' is treated as a *RELATIVE* path, // relative to the current drive. '//path' is treated // as absolute one.	WITHOUT_CLASSIFICATION	0.9999854141052906	WITHOUT_CLASSIFICATION	1.4585894709271652E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.999309644166977	WITHOUT_CLASSIFICATION	6.903558330231133E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.999309644166977	WITHOUT_CLASSIFICATION	6.903558330231133E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.999309644166977	WITHOUT_CLASSIFICATION	6.903558330231133E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.999309644166977	WITHOUT_CLASSIFICATION	6.903558330231133E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.999309644166977	WITHOUT_CLASSIFICATION	6.903558330231133E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.999309644166977	WITHOUT_CLASSIFICATION	6.903558330231133E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.999309644166977	WITHOUT_CLASSIFICATION	6.903558330231133E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.999309644166977	WITHOUT_CLASSIFICATION	6.903558330231133E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.999309644166977	WITHOUT_CLASSIFICATION	6.903558330231133E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.999309644166977	WITHOUT_CLASSIFICATION	6.903558330231133E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.999309644166977	WITHOUT_CLASSIFICATION	6.903558330231133E-4	IMPLEMENTATION
// This is needed when the enclosing class or module is a singleton. // In that case, we generated a name such as null::Foo, which broke  // Marshalling, among others. The correct thing to do in this situation  // is to insert the generate the name of form #<Class:01xasdfasd> if  // it's a singleton module/class, which this code accomplishes.	WITHOUT_CLASSIFICATION	0.9999898469895971	WITHOUT_CLASSIFICATION	1.0153010402813774E-5	IMPLEMENTATION
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9999807838867918	WITHOUT_CLASSIFICATION	1.9216113208230666E-5	IMPLEMENTATION
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999362727541837	WITHOUT_CLASSIFICATION	6.372724581631706E-5	IMPLEMENTATION
// get "self"	WITHOUT_CLASSIFICATION	0.9998811664636083	WITHOUT_CLASSIFICATION	1.188335363917676E-4	IMPLEMENTATION
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9998587640007799	WITHOUT_CLASSIFICATION	1.4123599922002446E-4	IMPLEMENTATION
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9998882230696872	WITHOUT_CLASSIFICATION	1.1177693031284192E-4	IMPLEMENTATION
// only public methods	WITHOUT_CLASSIFICATION	0.999900691851173	WITHOUT_CLASSIFICATION	9.930814882706289E-5	IMPLEMENTATION
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999466305435991	WITHOUT_CLASSIFICATION	5.336945640100059E-5	IMPLEMENTATION
// First try to use drive letter from supplied dir value, // then try current work dir.	WITHOUT_CLASSIFICATION	0.9999527762252773	WITHOUT_CLASSIFICATION	4.7223774722705196E-5	IMPLEMENTATION
// JRUBY-2435: Aliasing eval and other "special" methods should display a warning // We warn because we treat certain method names as "special" for purposes of // optimization. Hopefully this will be enough to convince people not to alias // them.	WITHOUT_CLASSIFICATION	0.999900911801513	WITHOUT_CLASSIFICATION	9.908819848710862E-5	IMPLEMENTATION
// generate a real method signature for the method, with to/from coercions	WITHOUT_CLASSIFICATION	0.9999492337808995	WITHOUT_CLASSIFICATION	5.0766219100535114E-5	IMPLEMENTATION
// block argument to the method // closure present // class present // method table mutations, def, defs, undef, alias // likely call to eval // makes calls that are aware of the frame // makes calls that are aware of the frame's self // makes calls that are aware of the frame's visibility // makes calls that are aware of the frame's block // makes calls that are aware of the frame's name // makes calls that set or get backref // makes calls that set or get lastline // makes calls that are aware of the frame's class // optional arguments to the method // rest arg to the method // makes calls that are aware of the scope // makes a zero-argument super call // accesses or sets constants // accesses or sets class variables // makes normal super call // contains a retry	WITHOUT_CLASSIFICATION	0.9999983675651447	WITHOUT_CLASSIFICATION	1.632434855319067E-6	IMPLEMENTATION
// // Add aliases in Type::*, NativeType::* and FFI::TYPE_* //	WITHOUT_CLASSIFICATION	0.9998936976466757	WITHOUT_CLASSIFICATION	1.0630235332437769E-4	IMPLEMENTATION
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999506158317139	WITHOUT_CLASSIFICATION	4.938416828609059E-5	IMPLEMENTATION
// double-testing args.length here, but it avoids duplicating the proc-setup code in two places	WITHOUT_CLASSIFICATION	0.9999251592638055	WITHOUT_CLASSIFICATION	7.484073619454952E-5	IMPLEMENTATION
// indices for temp values	WITHOUT_CLASSIFICATION	0.9998822538508404	WITHOUT_CLASSIFICATION	1.1774614915962487E-4	IMPLEMENTATION
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9998876184855992	WITHOUT_CLASSIFICATION	1.1238151440085512E-4	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9998584744271458	WITHOUT_CLASSIFICATION	1.4152557285419573E-4	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9998584744271458	WITHOUT_CLASSIFICATION	1.4152557285419573E-4	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9998584744271458	WITHOUT_CLASSIFICATION	1.4152557285419573E-4	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9998584744271458	WITHOUT_CLASSIFICATION	1.4152557285419573E-4	IMPLEMENTATION
// snapshot of contents of directory // current position in directory	WITHOUT_CLASSIFICATION	0.999990848368042	WITHOUT_CLASSIFICATION	9.151631957991567E-6	IMPLEMENTATION
// Exclusive locks in Java require the channel to be writable, otherwise // an exception is thrown (terminating JRuby execution). // But flock behavior of MRI is that it allows // exclusive locks even on non-writable file. So we convert exclusive // lock to shared lock if the channel is not writable, to better match // the MRI behavior.	WITHOUT_CLASSIFICATION	0.9999881611179111	WITHOUT_CLASSIFICATION	1.1838882088838252E-5	IMPLEMENTATION
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9998878280350432	WITHOUT_CLASSIFICATION	1.1217196495685375E-4	IMPLEMENTATION
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9998878280350432	WITHOUT_CLASSIFICATION	1.1217196495685375E-4	IMPLEMENTATION
// set self to the class	WITHOUT_CLASSIFICATION	0.9999587756296658	WITHOUT_CLASSIFICATION	4.1224370334093283E-5	IMPLEMENTATION
/* ---------- Public fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999409230437598	WITHOUT_CLASSIFICATION	5.9076956240161545E-5	IMPLEMENTATION
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.999932653286389	WITHOUT_CLASSIFICATION	6.734671361105621E-5	IMPLEMENTATION
// zero args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999589391323974	WITHOUT_CLASSIFICATION	4.106086760250823E-5	IMPLEMENTATION
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999183917634173	WITHOUT_CLASSIFICATION	8.160823658260922E-5	IMPLEMENTATION
// Store each line into this list if not null.	WITHOUT_CLASSIFICATION	0.9998679512374463	WITHOUT_CLASSIFICATION	1.32048762553577E-4	IMPLEMENTATION
// Portion of line right after beginning marker	WITHOUT_CLASSIFICATION	0.9999006830769097	WITHOUT_CLASSIFICATION	9.931692309030181E-5	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999605065289603	WITHOUT_CLASSIFICATION	3.949347103973851E-5	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999605065289603	WITHOUT_CLASSIFICATION	3.949347103973851E-5	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999605065289603	WITHOUT_CLASSIFICATION	3.949347103973851E-5	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999605065289603	WITHOUT_CLASSIFICATION	3.949347103973851E-5	IMPLEMENTATION
// If an IO exception occurs (something odd, but possible) // A directory may return null.	WITHOUT_CLASSIFICATION	0.9999748123645732	WITHOUT_CLASSIFICATION	2.5187635426820883E-5	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999875789744618	WITHOUT_CLASSIFICATION	1.2421025538189077E-5	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999875789744618	WITHOUT_CLASSIFICATION	1.2421025538189077E-5	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999875789744618	WITHOUT_CLASSIFICATION	1.2421025538189077E-5	IMPLEMENTATION
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9998726186295817	WITHOUT_CLASSIFICATION	1.2738137041831284E-4	IMPLEMENTATION
// finally with no exception	WITHOUT_CLASSIFICATION	0.9998885057985126	WITHOUT_CLASSIFICATION	1.1149420148730496E-4	IMPLEMENTATION
// Now, for all variables used by 'i' mark them live before 'i'	WITHOUT_CLASSIFICATION	0.9999062590627975	WITHOUT_CLASSIFICATION	9.374093720244756E-5	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9391082804437679	WITHOUT_CLASSIFICATION	0.06089171955623203	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9391082804437679	WITHOUT_CLASSIFICATION	0.06089171955623203	IMPLEMENTATION
/* The counting of slashes that follows is simply a way to adhere to          * Ruby's UNC (or something) compatibility. When Ruby's expand_path is          * called with "//foo//bar" it will return "//foo/bar". JRuby uses          * java.io.File, and hence returns "/foo/bar". In order to retain          * java.io.File in the lower layers and provide full Ruby          * compatibility, the number of extra slashes must be counted and          * prepended to the result.         */	WITHOUT_CLASSIFICATION	0.9999990213658326	WITHOUT_CLASSIFICATION	9.786341673631876E-7	IMPLEMENTATION
// This is almost always already interned, since it will be called with a symbol in most cases // but when created from Java code, we might get an argument that needs to be interned. // addAccessor has as a precondition that the string MUST be interned	WITHOUT_CLASSIFICATION	0.9999967125639547	WITHOUT_CLASSIFICATION	3.2874360453460357E-6	IMPLEMENTATION
/* not a class */	WITHOUT_CLASSIFICATION	0.9998682241909341	WITHOUT_CLASSIFICATION	1.3177580906587036E-4	IMPLEMENTATION
/* not a class */	WITHOUT_CLASSIFICATION	0.9998682241909341	WITHOUT_CLASSIFICATION	1.3177580906587036E-4	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.999902779272759	WITHOUT_CLASSIFICATION	9.722072724100242E-5	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.999902779272759	WITHOUT_CLASSIFICATION	9.722072724100242E-5	IMPLEMENTATION
// io.available() only returns 0 after EOF is encountered // so we need to differentiate between the empty string and EOF	WITHOUT_CLASSIFICATION	0.9999766915443401	WITHOUT_CLASSIFICATION	2.3308455659822985E-5	IMPLEMENTATION
// In the current logic, if we get here we know that module is not an // IncludedModuleWrapper, so there's no need to fish out the delegate. But just // in case the logic should change later, let's do it anyway	WITHOUT_CLASSIFICATION	0.9999884842602278	WITHOUT_CLASSIFICATION	1.151573977224282E-5	IMPLEMENTATION
// rb_iterate((VALUE(*)_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);	WITHOUT_CLASSIFICATION	0.9998252248308631	WITHOUT_CLASSIFICATION	1.7477516913684223E-4	IMPLEMENTATION
// Broken symlinks considered by exists() as non-existing, // so we need to check for symlinks explicitly.	WITHOUT_CLASSIFICATION	0.9998376984912731	WITHOUT_CLASSIFICATION	1.6230150872690804E-4	IMPLEMENTATION
// ////////////////// CONSTANT API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999955152800776	WITHOUT_CLASSIFICATION	4.4847199224667826E-6	IMPLEMENTATION
// create the default thread group	WITHOUT_CLASSIFICATION	0.9999918953681658	WITHOUT_CLASSIFICATION	8.10463183411259E-6	IMPLEMENTATION
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9998227372030339	WITHOUT_CLASSIFICATION	1.7726279696594885E-4	IMPLEMENTATION
/* ============================     * Here are hash internals     * (This could be extracted to a separate class but it's not too large though)     * ============================     */	WITHOUT_CLASSIFICATION	0.999965654211556	WITHOUT_CLASSIFICATION	3.434578844390281E-5	IMPLEMENTATION
// ////////////////// LOW-LEVEL CLASS VARIABLE INTERFACE //////////////// // // fetch/store/list class variables for this module //	WITHOUT_CLASSIFICATION	0.999999164640278	WITHOUT_CLASSIFICATION	8.353597219037528E-7	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999268859634931	WITHOUT_CLASSIFICATION	7.311403650681529E-5	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999268859634931	WITHOUT_CLASSIFICATION	7.311403650681529E-5	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999268728202899	WITHOUT_CLASSIFICATION	7.31271797101224E-5	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999268728202899	WITHOUT_CLASSIFICATION	7.31271797101224E-5	IMPLEMENTATION
// retuns null when not found to avoid unnecessary getRuntime().getNil() call	WITHOUT_CLASSIFICATION	0.9999332636754505	WITHOUT_CLASSIFICATION	6.673632454949533E-5	IMPLEMENTATION
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.999980550259482	WITHOUT_CLASSIFICATION	1.9449740517957063E-5	IMPLEMENTATION
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9997515399162304	WITHOUT_CLASSIFICATION	2.4846008376949665E-4	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999277658272073	WITHOUT_CLASSIFICATION	7.223417279267725E-5	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999277658272073	WITHOUT_CLASSIFICATION	7.223417279267725E-5	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999277658272073	WITHOUT_CLASSIFICATION	7.223417279267725E-5	IMPLEMENTATION
// line 286	WITHOUT_CLASSIFICATION	0.9997669532698847	WITHOUT_CLASSIFICATION	2.3304673011523204E-4	IMPLEMENTATION
// line 476	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 513	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 530	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 533	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 537	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 551	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// end loop	WITHOUT_CLASSIFICATION	0.9998325751935302	WITHOUT_CLASSIFICATION	1.674248064697599E-4	IMPLEMENTATION
// MRI behavior: we don't print errno for actual Errno errors	WITHOUT_CLASSIFICATION	0.9999109311137103	WITHOUT_CLASSIFICATION	8.906888628970429E-5	IMPLEMENTATION
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999485548427454	WITHOUT_CLASSIFICATION	5.144515725462674E-5	IMPLEMENTATION
// Traverse the instructions in this basic block in reverse order! // Mark as dead all instructions whose results are not used! 	WITHOUT_CLASSIFICATION	0.9999556139684898	WITHOUT_CLASSIFICATION	4.43860315102025E-5	IMPLEMENTATION
// // fields should really be an immutable map as it is never modified after construction //	WITHOUT_CLASSIFICATION	0.9997386210801763	WITHOUT_CLASSIFICATION	2.613789198236992E-4	IMPLEMENTATION
// load self object as IRubyObject, for recv param	WITHOUT_CLASSIFICATION	0.9999258876470827	WITHOUT_CLASSIFICATION	7.411235291729485E-5	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9391082804437679	WITHOUT_CLASSIFICATION	0.06089171955623203	IMPLEMENTATION
// If we define a class in Ruby, but later want to allow it to be defined in Java, // the allocator needs to be updated	WITHOUT_CLASSIFICATION	0.9999417120141939	WITHOUT_CLASSIFICATION	5.828798580613635E-5	IMPLEMENTATION
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9999434201632771	WITHOUT_CLASSIFICATION	5.657983672284566E-5	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9998994316016204	WITHOUT_CLASSIFICATION	1.0056839837963263E-4	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9997515399162304	WITHOUT_CLASSIFICATION	2.4846008376949665E-4	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.995968352635718	WITHOUT_CLASSIFICATION	0.004031647364281878	IMPLEMENTATION
// MRI has extra pointer which makes our code look a little bit // more strange in // comparison	WITHOUT_CLASSIFICATION	0.9998692928287637	WITHOUT_CLASSIFICATION	1.3070717123632938E-4	IMPLEMENTATION
// Tempory buffer to build up a potential token.  Consumer takes responsibility to reset  // this before use.	WITHOUT_CLASSIFICATION	0.9998776729690675	WITHOUT_CLASSIFICATION	1.2232703093245954E-4	IMPLEMENTATION
//tmpPosition is required because getPosition()'s side effects. //if the warning is generated, the getPosition() on line 954 (this line + 18) will create //a wrong position if the "inclusive" flag is not set.	WITHOUT_CLASSIFICATION	0.9999777986873636	WITHOUT_CLASSIFICATION	2.2201312636442057E-5	IMPLEMENTATION
/* What is \v in C?                    case '\v':                        c2 = 'v';                        break;                        */	WITHOUT_CLASSIFICATION	0.9999545145404901	WITHOUT_CLASSIFICATION	4.548545950989884E-5	IMPLEMENTATION
/* Consider Thread aspects of this */	WITHOUT_CLASSIFICATION	0.9998556134918184	WITHOUT_CLASSIFICATION	1.4438650818168834E-4	IMPLEMENTATION
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999939456364925	WITHOUT_CLASSIFICATION	6.054363507531965E-6	IMPLEMENTATION
// An interrupt or timeout may have caused us to miss // a notify that we consumed, so do another notify in // case someone else is available to pick it up.	WITHOUT_CLASSIFICATION	0.9999727108084384	WITHOUT_CLASSIFICATION	2.7289191561570692E-5	IMPLEMENTATION
// line 572	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 601	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 601	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 625	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 649	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 691	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 723	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 732	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 745	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 766	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 785	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 794	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 800	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 812	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 827	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 839	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 845	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 864	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 886	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 896	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 911	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 929	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 952	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 970	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 972	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 991	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 1011	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1026	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1038	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1067	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1085	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1097	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1105	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1122	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1133	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1145	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1169	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1201	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1210	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1229	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1261	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1287	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1293	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1307	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1320	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1325	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1363	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1398	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1448	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1456	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1473	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1492	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1513	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1523	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1562	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1582	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1603	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1603	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1615	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1620	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1635	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1652	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1681	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1708	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1716	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1755	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1772	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1789	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9997573597525646	WITHOUT_CLASSIFICATION	2.4264024743529864E-4	IMPLEMENTATION
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9997573597525646	WITHOUT_CLASSIFICATION	2.4264024743529864E-4	IMPLEMENTATION
/* force for args */	WITHOUT_CLASSIFICATION	0.9997745894492469	WITHOUT_CLASSIFICATION	2.2541055075303579E-4	IMPLEMENTATION
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9997805568737481	WITHOUT_CLASSIFICATION	2.1944312625193612E-4	IMPLEMENTATION
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9999152559994112	WITHOUT_CLASSIFICATION	8.474400058879788E-5	IMPLEMENTATION
// We can assign if we already have variable of that name here or we are the only // scope in the chain (which Local scopes always are).	WITHOUT_CLASSIFICATION	0.9999875091455159	WITHOUT_CLASSIFICATION	1.2490854484038252E-5	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999659729253538	WITHOUT_CLASSIFICATION	3.4027074646219454E-5	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999659729253538	WITHOUT_CLASSIFICATION	3.4027074646219454E-5	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999659729253538	WITHOUT_CLASSIFICATION	3.4027074646219454E-5	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999659729253538	WITHOUT_CLASSIFICATION	3.4027074646219454E-5	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9998542619074191	WITHOUT_CLASSIFICATION	1.4573809258096605E-4	IMPLEMENTATION
/*     * This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:)     * into individual whenNodes.  The primary reason for this is to ensure lazy evaluation of     * the arguments (when foo,bar,gar:) to prevent side-effects.  In the old code this was done     * using nested when statements, which was awful for interpreter and compilation.     *     * Notes: This has semantic equivalence but will not be lexically equivalent.  Compiler     * needs to detect same bodies to simplify bytecode generated.     */	WITHOUT_CLASSIFICATION	0.9999891080789539	WITHOUT_CLASSIFICATION	1.089192104598796E-5	IMPLEMENTATION
// line 313	WITHOUT_CLASSIFICATION	0.9997669838678022	WITHOUT_CLASSIFICATION	2.3301613219769632E-4	IMPLEMENTATION
// line 339	WITHOUT_CLASSIFICATION	0.9997668231303292	WITHOUT_CLASSIFICATION	2.3317686967070443E-4	IMPLEMENTATION
// line 361	WITHOUT_CLASSIFICATION	0.9997668231303292	WITHOUT_CLASSIFICATION	2.3317686967070443E-4	IMPLEMENTATION
// line 413	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 451	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 472	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 500	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 515	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 555	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 582	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 619	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 636	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 669	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 703	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 776	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 814	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 823	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 854	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 872	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 905	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 925	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 958	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 992	WITHOUT_CLASSIFICATION	0.9997667159104338	WITHOUT_CLASSIFICATION	2.3328408956625057E-4	IMPLEMENTATION
// line 1047	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1072	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1081	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1108	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1136	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1168	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1192	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1241	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1267	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1286	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1301	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1314	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1333	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1362	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1395	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1420	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1439	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1476	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1535	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1588	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1618	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1643	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1669	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1728	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1753	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1779	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1794	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1812	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1837	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1895	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1925	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1950	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 1992	WITHOUT_CLASSIFICATION	0.9997667236414964	WITHOUT_CLASSIFICATION	2.332763585034524E-4	IMPLEMENTATION
// line 2014	WITHOUT_CLASSIFICATION	0.9997668108832038	WITHOUT_CLASSIFICATION	2.331891167961489E-4	IMPLEMENTATION
// Whether this scope is used as the "argument scope" for e.g. zsuper	WITHOUT_CLASSIFICATION	0.9999344396335524	WITHOUT_CLASSIFICATION	6.556036644755073E-5	IMPLEMENTATION
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999580236114367	WITHOUT_CLASSIFICATION	4.1976388563222036E-5	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999570119433085	WITHOUT_CLASSIFICATION	4.298805669136636E-5	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999570119433085	WITHOUT_CLASSIFICATION	4.298805669136636E-5	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999570119433085	WITHOUT_CLASSIFICATION	4.298805669136636E-5	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999570119433085	WITHOUT_CLASSIFICATION	4.298805669136636E-5	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999570119433085	WITHOUT_CLASSIFICATION	4.298805669136636E-5	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999570119433085	WITHOUT_CLASSIFICATION	4.298805669136636E-5	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999570119433085	WITHOUT_CLASSIFICATION	4.298805669136636E-5	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999510295938926	WITHOUT_CLASSIFICATION	4.8970406107428854E-5	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999510295938926	WITHOUT_CLASSIFICATION	4.8970406107428854E-5	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999510295938926	WITHOUT_CLASSIFICATION	4.8970406107428854E-5	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999510295938926	WITHOUT_CLASSIFICATION	4.8970406107428854E-5	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9999070909084891	WITHOUT_CLASSIFICATION	9.290909151096309E-5	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9999070909084891	WITHOUT_CLASSIFICATION	9.290909151096309E-5	IMPLEMENTATION
// We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the // 'b' will get put into this new dynamic scope.  The original scope does not see the new // 'b' and successive evals with this binding will.  I take it having the ability to have  // succesive binding evals be able to share same scope makes sense from a programmers  // perspective.   One crappy outcome of this design is it requires Dynamic and Static  // scopes to be mutable for this one case.	WITHOUT_CLASSIFICATION	0.9999998710163587	WITHOUT_CLASSIFICATION	1.2898364142691269E-7	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999599627034058	WITHOUT_CLASSIFICATION	4.003729659420569E-5	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999599627034058	WITHOUT_CLASSIFICATION	4.003729659420569E-5	IMPLEMENTATION
// tc // under method // self // under method // name // args	WITHOUT_CLASSIFICATION	0.9998672989816788	WITHOUT_CLASSIFICATION	1.3270101832124317E-4	IMPLEMENTATION
// allow it to bubble up	WITHOUT_CLASSIFICATION	0.9998150022982493	WITHOUT_CLASSIFICATION	1.849977017507167E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998813670522917	WITHOUT_CLASSIFICATION	1.1863294770838923E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998813670522917	WITHOUT_CLASSIFICATION	1.1863294770838923E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998813670522917	WITHOUT_CLASSIFICATION	1.1863294770838923E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998813670522917	WITHOUT_CLASSIFICATION	1.1863294770838923E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998813670522917	WITHOUT_CLASSIFICATION	1.1863294770838923E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998813670522917	WITHOUT_CLASSIFICATION	1.1863294770838923E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998813670522917	WITHOUT_CLASSIFICATION	1.1863294770838923E-4	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999877882195212	WITHOUT_CLASSIFICATION	1.2211780478802253E-4	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9998764041027982	WITHOUT_CLASSIFICATION	1.2359589720182366E-4	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9998894954340808	WITHOUT_CLASSIFICATION	1.1050456591924698E-4	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9998894954340808	WITHOUT_CLASSIFICATION	1.1050456591924698E-4	IMPLEMENTATION
// Check for a builtin first.	WITHOUT_CLASSIFICATION	0.9999355288891788	WITHOUT_CLASSIFICATION	6.447111082113005E-5	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999111681014187	WITHOUT_CLASSIFICATION	8.88318985812855E-5	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999111681014187	WITHOUT_CLASSIFICATION	8.88318985812855E-5	IMPLEMENTATION
// Unfortunately, the number of digits in the exponent is // not clearly defined in Ruby documentation. This is a // platform/version-dependent behavior. On Linux/Mac/Cygwin/*nix, // two digits are used. On Windows, 3 digits are used. // It is desirable for JRuby to have consistent behavior, and // the two digits behavior was selected. This is also in sync // with "Java-native" sprintf behavior (java.util.Formatter). // E or e	WITHOUT_CLASSIFICATION	0.9999946264892897	WITHOUT_CLASSIFICATION	5.373510710303526E-6	IMPLEMENTATION
/** * Represents the the dynamic portion of scoping information.  The variableValues are the * values of assigned local or block variables.  The staticScope identifies which sort of * scope this is (block or local). *  * Properties of Dynamic Scopes: * 1. static and dynamic scopes have the same number of names to values * 2. size of variables (and thus names) is determined during parsing.  So those structured do *    not need to change * * FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents.  This * is harmless (other than wasting memory), but we should not do that.  We can fix this in two * ways: * 1. Fix all callers * 2. Check parent that is passed in and make if new instance is local, then its parent is not local */	WITHOUT_CLASSIFICATION	0.9999964402444831	WITHOUT_CLASSIFICATION	3.5597555169075024E-6	IMPLEMENTATION
// This method handles '**/' patterns and delegates to // fnmatch_helper for the main work.	WITHOUT_CLASSIFICATION	0.9998612567987563	WITHOUT_CLASSIFICATION	1.3874320124381386E-4	IMPLEMENTATION
// Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern  // Example: foo{a{c},b}bar -> fooa{c}bar, foobbar	WITHOUT_CLASSIFICATION	0.9998338097104605	WITHOUT_CLASSIFICATION	1.6619028953940158E-4	IMPLEMENTATION
// double precision, native // double precision, native	WITHOUT_CLASSIFICATION	0.9998812845080577	WITHOUT_CLASSIFICATION	1.1871549194232698E-4	IMPLEMENTATION
// 64-bit number, native (as bignum)	WITHOUT_CLASSIFICATION	0.9998449817781858	WITHOUT_CLASSIFICATION	1.5501822181429302E-4	IMPLEMENTATION
// Next indicates to decode using native encoding format	WITHOUT_CLASSIFICATION	0.9999016149939446	WITHOUT_CLASSIFICATION	9.838500605546275E-5	IMPLEMENTATION
// calculate based on a, b, c and d	WITHOUT_CLASSIFICATION	0.999907084434409	WITHOUT_CLASSIFICATION	9.29155655910618E-5	IMPLEMENTATION
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999080362945683	WITHOUT_CLASSIFICATION	9.196370543171349E-5	IMPLEMENTATION
// MRI behavior:  for 'Q', do not add trailing nils	WITHOUT_CLASSIFICATION	0.9998997414186355	WITHOUT_CLASSIFICATION	1.0025858136454304E-4	IMPLEMENTATION
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9999131610097247	WITHOUT_CLASSIFICATION	8.68389902753355E-5	IMPLEMENTATION
// exec needs to behave differently in-process, because it's technically // supposed to replace the calling process. So if we're supposed to run // in-process, we allow it to use the default streams and not use // pumpers at all. See JRUBY-2156 and JRUBY-2154.	WITHOUT_CLASSIFICATION	0.9999668431153128	WITHOUT_CLASSIFICATION	3.315688468723836E-5	IMPLEMENTATION
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999915975792364	WITHOUT_CLASSIFICATION	8.402420763709414E-6	IMPLEMENTATION
// The problem we trying to solve below: STDIN in Java // is blocked and non-interruptible, so if we invoke read // on it, we might never be able to interrupt such thread. // So, we use in.available() to see if there is any input // ready, and only then read it. But this approach can't // tell whether the end of stream reached or not, so we // might end up looping right at the end of the stream. // Well, at least, we can improve the situation by checking // if some input was ever available, and if so, not // checking for available anymore, and just go to read.	WITHOUT_CLASSIFICATION	0.999999615959718	WITHOUT_CLASSIFICATION	3.8404028202560285E-7	IMPLEMENTATION
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999242403223582	WITHOUT_CLASSIFICATION	7.575967764177668E-5	IMPLEMENTATION
// an empirically derived rule: precision applies to // significand length, irrespective of exponent	WITHOUT_CLASSIFICATION	0.9998918712640473	WITHOUT_CLASSIFICATION	1.0812873595271312E-4	IMPLEMENTATION
// an official rule, clarified: if the exponent // <clarif>after adjusting for exponent form</clarif> // is < -4,  or the exponent <clarif>after adjusting  // for exponent form</clarif> is greater than the // precision, use exponent form	WITHOUT_CLASSIFICATION	0.9999707983520799	WITHOUT_CLASSIFICATION	2.9201647920134686E-5	IMPLEMENTATION
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.999904951527272	WITHOUT_CLASSIFICATION	9.504847272801185E-5	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9997955781623968	WITHOUT_CLASSIFICATION	2.0442183760321038E-4	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9997955781623968	WITHOUT_CLASSIFICATION	2.0442183760321038E-4	IMPLEMENTATION
// MRI behavior: validate only the unnumbered arguments	WITHOUT_CLASSIFICATION	0.9999076141369526	WITHOUT_CLASSIFICATION	9.238586304739338E-5	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9998039829432802	WITHOUT_CLASSIFICATION	1.9601705671989553E-4	IMPLEMENTATION
// calculation for simple (and typical) case, // adapted from sun.misc.FloatingDecimal	WITHOUT_CLASSIFICATION	0.9998269572426448	WITHOUT_CLASSIFICATION	1.7304275735506634E-4	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9960042135944229	WITHOUT_CLASSIFICATION	0.003995786405577051	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9997515648590852	WITHOUT_CLASSIFICATION	2.484351409148619E-4	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9997515648590852	WITHOUT_CLASSIFICATION	2.484351409148619E-4	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9997515648590852	WITHOUT_CLASSIFICATION	2.484351409148619E-4	IMPLEMENTATION
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9998868057816948	WITHOUT_CLASSIFICATION	1.1319421830517061E-4	IMPLEMENTATION
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999083176644743	WITHOUT_CLASSIFICATION	9.168233552565742E-5	IMPLEMENTATION
// call chmod after we created the RandomAccesFile // because otherwise, the file could be read-only	WITHOUT_CLASSIFICATION	0.9999079026022818	WITHOUT_CLASSIFICATION	9.20973977181758E-5	IMPLEMENTATION
// attempt to set the permissions, if we have been passed a POSIX instance, // and only if the file was created in this call.	WITHOUT_CLASSIFICATION	0.9999968026331761	WITHOUT_CLASSIFICATION	3.1973668238431405E-6	IMPLEMENTATION
// // When reading into a heap buffer, the jvm allocates a temporary // direct ByteBuffer of the requested size.  To avoid allocating // a huge direct buffer when doing ludicrous reads (e.g. 1G or more) // we split the read up into chunks of no more than 1M //	WITHOUT_CLASSIFICATION	0.9999696396865109	WITHOUT_CLASSIFICATION	3.0360313489239905E-5	IMPLEMENTATION
// // If it is a file channel, then we can pre-allocate the output buffer // to the total size of buffered + remaining bytes in file //	WITHOUT_CLASSIFICATION	0.9999384253467983	WITHOUT_CLASSIFICATION	6.157465320167907E-5	IMPLEMENTATION
// // Cannot discern the total read length - allocate at least enough for the buffered data //	WITHOUT_CLASSIFICATION	0.9999206806724215	WITHOUT_CLASSIFICATION	7.931932757856282E-5	IMPLEMENTATION
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999573952774659	WITHOUT_CLASSIFICATION	4.2604722534260105E-5	IMPLEMENTATION
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999040119866365	WITHOUT_CLASSIFICATION	9.598801336357327E-5	IMPLEMENTATION
// already have some bytes buffered, just return those	WITHOUT_CLASSIFICATION	0.999955676712031	WITHOUT_CLASSIFICATION	4.432328796890455E-5	IMPLEMENTATION
// reset buffer	WITHOUT_CLASSIFICATION	0.9998533703989289	WITHOUT_CLASSIFICATION	1.466296010711549E-4	IMPLEMENTATION
// // Synchronize and re-check to avoid creating more than one Selector per provider //	WITHOUT_CLASSIFICATION	0.9998410679724596	WITHOUT_CLASSIFICATION	1.589320275403917E-4	IMPLEMENTATION
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.8558075482208306	WITHOUT_CLASSIFICATION	0.14419245177916945	IMPLEMENTATION
// Is there something built into JRuby to do this?	WITHOUT_CLASSIFICATION	0.9997726678517097	WITHOUT_CLASSIFICATION	2.2733214829025032E-4	IMPLEMENTATION
// Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long // assertTrue(value == valueViaValuesIterator);	WITHOUT_CLASSIFICATION	0.9999832893113633	WITHOUT_CLASSIFICATION	1.6710688636776682E-5	IMPLEMENTATION
// value equality //result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); //assertEquals("two", result);	WITHOUT_CLASSIFICATION	0.9999156652203876	WITHOUT_CLASSIFICATION	8.433477961235976E-5	IMPLEMENTATION
// Uncomment the "puts" lines if you want to see more detail	WITHOUT_CLASSIFICATION	0.9998838947978422	WITHOUT_CLASSIFICATION	1.1610520215776985E-4	IMPLEMENTATION
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999967228720912	WITHOUT_CLASSIFICATION	3.277127908830236E-6	IMPLEMENTATION
// change the thread context to include the class	WITHOUT_CLASSIFICATION	0.9999409179787772	WITHOUT_CLASSIFICATION	5.908202122282107E-5	IMPLEMENTATION
