// TODO: warn "tried to create Proc object without a block"	IMPLEMENTATION	0.9596410720219346	WITHOUT_CLASSIFICATION	0.04035892797806548	IMPLEMENTATION
// TODO: CLONE_SETUP here	IMPLEMENTATION	0.8144435240727674	WITHOUT_CLASSIFICATION	0.18555647592723248	IMPLEMENTATION
// TODO: Someday, enable.	IMPLEMENTATION	0.8481266821179	WITHOUT_CLASSIFICATION	0.15187331788209998	IMPLEMENTATION
// Bunch of methods still not implemented	IMPLEMENTATION	0.6311153804567479	IMPLEMENTATION	0.36888461954325213	WITHOUT_CLASSIFICATION
// TODO: non-strict option	IMPLEMENTATION	0.755263901389406	WITHOUT_CLASSIFICATION	0.24473609861059392	IMPLEMENTATION
// TODO: opt for 2 and 3 ?	IMPLEMENTATION	0.8569447221114509	WITHOUT_CLASSIFICATION	0.1430552778885491	IMPLEMENTATION
// FIXME: Should we make this work with platform's locale, // or continue hardcoding US?	IMPLEMENTATION	0.9996103116878083	WITHOUT_CLASSIFICATION	3.896883121916924E-4	IMPLEMENTATION
// TODO: rescan code range ?	IMPLEMENTATION	0.8627254575372113	WITHOUT_CLASSIFICATION	0.13727454246278864	IMPLEMENTATION
// TODO: rescan code range ?	IMPLEMENTATION	0.8627254575372113	WITHOUT_CLASSIFICATION	0.13727454246278864	IMPLEMENTATION
// TODO: pass this in?	IMPLEMENTATION	0.8194563696036685	WITHOUT_CLASSIFICATION	0.1805436303963315	IMPLEMENTATION
// FIXME: Pass block down?	IMPLEMENTATION	0.9995705471250464	WITHOUT_CLASSIFICATION	4.2945287495347673E-4	IMPLEMENTATION
// TODO: do something here?	IMPLEMENTATION	0.5233714927554849	IMPLEMENTATION	0.47662850724451505	WITHOUT_CLASSIFICATION
// TODO: port exact behavior from MRI, and move most locking logic into ChannelDescriptor // TODO: for all LOCK_NB cases, return false if they would block	IMPLEMENTATION	0.8959452705267681	WITHOUT_CLASSIFICATION	0.10405472947323187	IMPLEMENTATION
// TODO: check if too many open files, GC and try again	IMPLEMENTATION	0.5249280014540103	WITHOUT_CLASSIFICATION	0.4750719985459896	IMPLEMENTATION
//TODO deal with UNC names	IMPLEMENTATION	0.9995891434962733	WITHOUT_CLASSIFICATION	4.1085650372670355E-4	IMPLEMENTATION
// FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.9994447029229857	WITHOUT_CLASSIFICATION	5.552970770143616E-4	IMPLEMENTATION
//FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.9994447029229857	WITHOUT_CLASSIFICATION	5.552970770143616E-4	IMPLEMENTATION
// TODO: SafeStringValue here	IMPLEMENTATION	0.8556185075295759	WITHOUT_CLASSIFICATION	0.14438149247042406	IMPLEMENTATION
// TODO: turn off readable? am I reading this right? // This only seems to be used while duping below, since modes gets // reset to actual modes afterward //fptr->mode &= (m & FMODE_READABLE) ? ~FMODE_READABLE : ~FMODE_WRITABLE;	IMPLEMENTATION	0.9641123290176156	WITHOUT_CLASSIFICATION	0.03588767098238439	IMPLEMENTATION
// TODO: check safe, taint on incoming string	IMPLEMENTATION	0.5756182050672869	WITHOUT_CLASSIFICATION	0.42438179493271305	IMPLEMENTATION
// TODO: pipe handler to be reopened with path and "w" mode	IMPLEMENTATION	0.9054350750927311	WITHOUT_CLASSIFICATION	0.09456492490726887	IMPLEMENTATION
// FIXME: add text mode to mode flags	IMPLEMENTATION	0.9997437443312623	WITHOUT_CLASSIFICATION	2.5625566873765075E-4	IMPLEMENTATION
// TODO: Something about pipe buffer length here	IMPLEMENTATION	0.9235387667789748	WITHOUT_CLASSIFICATION	0.07646123322102512	IMPLEMENTATION
// TODO: handle errors in buffered write by retrying until finished or file is closed	IMPLEMENTATION	0.6844221306950471	IMPLEMENTATION	0.31557786930495285	WITHOUT_CLASSIFICATION
// TODO: notify threads waiting on descriptors/IO? probably not...	IMPLEMENTATION	0.7662432655756652	WITHOUT_CLASSIFICATION	0.23375673442433478	IMPLEMENTATION
// TODO: Ruby re-checks that the buffer string hasn't been modified	IMPLEMENTATION	0.9159299522239901	WITHOUT_CLASSIFICATION	0.08407004777600988	IMPLEMENTATION
// TODO: Ruby unlocks the string here	IMPLEMENTATION	0.879092722074618	WITHOUT_CLASSIFICATION	0.12090727792538206	IMPLEMENTATION
// TODO: Ruby truncates string to specific size here, but our bytelist should handle this already?	IMPLEMENTATION	0.7840038886179493	WITHOUT_CLASSIFICATION	0.21599611138205072	IMPLEMENTATION
// TODO: Ruby unlocks the string here	IMPLEMENTATION	0.879092722074618	WITHOUT_CLASSIFICATION	0.12090727792538206	IMPLEMENTATION
// TODO: Ruby truncates string to specific size here, but our bytelist should handle this already?	IMPLEMENTATION	0.7840038886179493	WITHOUT_CLASSIFICATION	0.21599611138205072	IMPLEMENTATION
// TODO: ruby locks the string here	IMPLEMENTATION	0.9518674177438052	WITHOUT_CLASSIFICATION	0.04813258225619465	IMPLEMENTATION
// TODO same zero-length checks as file above	IMPLEMENTATION	0.9831998503427124	WITHOUT_CLASSIFICATION	0.016800149657287558	IMPLEMENTATION
// TODO: MRI also can hadle Bignum here	IMPLEMENTATION	0.820187632746418	WITHOUT_CLASSIFICATION	0.1798123672535819	IMPLEMENTATION
// TODO: make threadsafe	IMPLEMENTATION	0.868770818483607	WITHOUT_CLASSIFICATION	0.131229181516393	IMPLEMENTATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9232942372656691	WITHOUT_CLASSIFICATION	0.07670576273433098	IMPLEMENTATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9232942372656691	WITHOUT_CLASSIFICATION	0.07670576273433098	IMPLEMENTATION
// FIXME: create AttrReaderMethod, AttrWriterMethod, for faster attr access	IMPLEMENTATION	0.999767316371859	WITHOUT_CLASSIFICATION	2.3268362814098266E-4	IMPLEMENTATION
// Do not clone cached methods // FIXME: MRI copies all methods here	IMPLEMENTATION	0.9998501903796847	WITHOUT_CLASSIFICATION	1.4980962031540108E-4	IMPLEMENTATION
// TODO: don't calculate the same value 3 times	IMPLEMENTATION	0.9796951307706065	WITHOUT_CLASSIFICATION	0.020304869229393393	IMPLEMENTATION
// TODO: 3 times calculate the same value below	IMPLEMENTATION	0.9719219378392092	WITHOUT_CLASSIFICATION	0.02807806216079073	IMPLEMENTATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.7977653437068302	WITHOUT_CLASSIFICATION	0.20223465629316986	IMPLEMENTATION
// TODO: Store BEGIN and END information into this node	IMPLEMENTATION	0.9458410071572134	WITHOUT_CLASSIFICATION	0.05415899284278658	IMPLEMENTATION
// TODO: put these nil guards into tree (bigger than I want to do right now)	IMPLEMENTATION	0.8139231697286414	WITHOUT_CLASSIFICATION	0.18607683027135857	IMPLEMENTATION
// FIXME: Make bodyNode non-null in parser	IMPLEMENTATION	0.999754452384123	WITHOUT_CLASSIFICATION	2.455476158770117E-4	IMPLEMENTATION
// TODO: call config with scope but no frame	IMPLEMENTATION	0.8927333600009911	WITHOUT_CLASSIFICATION	0.10726663999900882	IMPLEMENTATION
// TODO: add trace call?	IMPLEMENTATION	0.6468983584588486	WITHOUT_CLASSIFICATION	0.35310164154115153	IMPLEMENTATION
// FIXME: missing arity check	IMPLEMENTATION	0.999595042214619	WITHOUT_CLASSIFICATION	4.0495778538094925E-4	IMPLEMENTATION
// FIXME: optimize for cases where we have no false branch	IMPLEMENTATION	0.9998167570003443	WITHOUT_CLASSIFICATION	1.832429996555963E-4	IMPLEMENTATION
// FIXME: after jump is not in here.  Will if ever be? //Label afterJmp = new Label();	IMPLEMENTATION	0.9998346453113047	WITHOUT_CLASSIFICATION	1.6535468869531688E-4	IMPLEMENTATION
// TODO: build arg list based on number of args, optionals, etc	IMPLEMENTATION	0.9479608595529121	WITHOUT_CLASSIFICATION	0.05203914044708787	IMPLEMENTATION
// FIXME: missing arity check	IMPLEMENTATION	0.999595042214619	WITHOUT_CLASSIFICATION	4.0495778538094925E-4	IMPLEMENTATION
// SSS FIXME: Traverse up the scope hierarchy to find the constant as long as the parent is a static scope	IMPLEMENTATION	0.9999812537631302	WITHOUT_CLASSIFICATION	1.874623686988086E-5	IMPLEMENTATION
// SSS FIXME: Should I be returning the operand constructed here?	IMPLEMENTATION	0.9997836674303274	WITHOUT_CLASSIFICATION	2.163325696725924E-4	IMPLEMENTATION
// TODO: Add IR instructions for checking method arity! // s.getVariableCompiler().checkMethodArity(required, opt, rest);	IMPLEMENTATION	0.7977173028187469	WITHOUT_CLASSIFICATION	0.20228269718125313	IMPLEMENTATION
// FIXME: Ruby 1.9 post args code needs to come here	IMPLEMENTATION	0.9995545980158371	WITHOUT_CLASSIFICATION	4.454019841628854E-4	IMPLEMENTATION
// SSS: FIXME: Somewhere here, we need to record information the type of this operand as String	IMPLEMENTATION	0.9998989020761644	WITHOUT_CLASSIFICATION	1.0109792383563994E-4	IMPLEMENTATION
// FIXME: Translate this call below! // s.unwrapPassedBlock();	IMPLEMENTATION	0.999716724760521	WITHOUT_CLASSIFICATION	2.832752394790279E-4	IMPLEMENTATION
// SSS FIXME: We need to build debug information tracking into the IR in some fashion // So, these methods below would have to have equivalents in IR_Scope implementations.	IMPLEMENTATION	0.9749208365189727	WITHOUT_CLASSIFICATION	0.025079163481027338	IMPLEMENTATION
// SSS FIXME: Incomplete!	IMPLEMENTATION	0.9995388909327318	WITHOUT_CLASSIFICATION	4.6110906726820616E-4	IMPLEMENTATION
// SSS FIXME: Pick one of bytelist or string, or add internal conversion methods to convert to the default representation	IMPLEMENTATION	0.9999747913693805	WITHOUT_CLASSIFICATION	2.5208630619517797E-5	IMPLEMENTATION
// SSS FIXME: To be done	IMPLEMENTATION	0.9996111932439893	WITHOUT_CLASSIFICATION	3.8880675601060867E-4	IMPLEMENTATION
//TODO: implement, won't do this now	IMPLEMENTATION	0.7835402436716102	WITHOUT_CLASSIFICATION	0.21645975632838976	IMPLEMENTATION
//TODO: implement, won't do this now	IMPLEMENTATION	0.7835402436716102	WITHOUT_CLASSIFICATION	0.21645975632838976	IMPLEMENTATION
// TODO: validate port as numeric	IMPLEMENTATION	0.9765081076686616	WITHOUT_CLASSIFICATION	0.023491892331338464	IMPLEMENTATION
// TODO: this code should really check if a Ruby equals method is implemented or not.	IMPLEMENTATION	0.9855422532811443	IMPLEMENTATION	0.014457746718855653	WITHOUT_CLASSIFICATION
// if not already defined, we add a 'new' that guesses at which signature to use // TODO: just adding first one right now...add in signature-guessing logic	IMPLEMENTATION	0.9856070445324366	WITHOUT_CLASSIFICATION	0.014392955467563286	IMPLEMENTATION
// TODO: deal with varargs	IMPLEMENTATION	0.850075769129723	WITHOUT_CLASSIFICATION	0.14992423087027693	IMPLEMENTATION
// TODO: deal with varargs	IMPLEMENTATION	0.850075769129723	WITHOUT_CLASSIFICATION	0.14992423087027693	IMPLEMENTATION
// TODO: other reserved names?	IMPLEMENTATION	0.8380119585475289	WITHOUT_CLASSIFICATION	0.16198804145247128	IMPLEMENTATION
// TODO: we can probably release our references to the constantFields // array and static/instance callback hashes at this point. 	IMPLEMENTATION	0.9920641786058225	WITHOUT_CLASSIFICATION	0.007935821394177544	IMPLEMENTATION
// TODO: Formalize conversion mechanisms between Java and Ruby	IMPLEMENTATION	0.9312458729704692	WITHOUT_CLASSIFICATION	0.0687541270295308	IMPLEMENTATION
// XXX: Check if it's appropriate type?	IMPLEMENTATION	0.9995674550600804	WITHOUT_CLASSIFICATION	4.325449399196721E-4	IMPLEMENTATION
// TODO: call ruby method	IMPLEMENTATION	0.8389713659556718	WITHOUT_CLASSIFICATION	0.1610286340443282	IMPLEMENTATION
// TODO: call ruby method	IMPLEMENTATION	0.8389713659556718	WITHOUT_CLASSIFICATION	0.1610286340443282	IMPLEMENTATION
// TODO: Add safety check for taintedness	IMPLEMENTATION	0.8091706478384543	WITHOUT_CLASSIFICATION	0.19082935216154567	IMPLEMENTATION
// FIXME: Need to detect magic_comment in 1.9 here for encoding	IMPLEMENTATION	0.999627760783859	WITHOUT_CLASSIFICATION	3.7223921614094E-4	IMPLEMENTATION
/* xxx shouldn't check if valid option variable */	IMPLEMENTATION	0.9996531371499878	WITHOUT_CLASSIFICATION	3.4686285001217987E-4	IMPLEMENTATION
// TODO: this isn't handling multibyte yet	IMPLEMENTATION	0.7864354011218685	WITHOUT_CLASSIFICATION	0.21356459887813156	IMPLEMENTATION
// TODO: This should be something else like a tCHAR	IMPLEMENTATION	0.9279619627191603	IMPLEMENTATION	0.0720380372808396	WITHOUT_CLASSIFICATION
// FIXME: \r logic needed	IMPLEMENTATION	0.9980037523807925	WITHOUT_CLASSIFICATION	0.001996247619207517	IMPLEMENTATION
// TODO: note lack of command.com support for Win 9x...	IMPLEMENTATION	0.6435002543088889	WITHOUT_CLASSIFICATION	0.35649974569111104	IMPLEMENTATION
// FIXME: Make thread pool threads daemons if necessary	IMPLEMENTATION	0.999738934046416	WITHOUT_CLASSIFICATION	2.610659535839709E-4	IMPLEMENTATION
/* FIXME: We may be intern'ing more than once.*/	IMPLEMENTATION	0.9996187288746903	WITHOUT_CLASSIFICATION	3.812711253097781E-4	IMPLEMENTATION
/* FIXME: We may be intern'ing more than once.*/	IMPLEMENTATION	0.9996187288746903	WITHOUT_CLASSIFICATION	3.812711253097781E-4	IMPLEMENTATION
/* FIXME: arg_concat missing for opt_call_args*/	IMPLEMENTATION	0.9997171232406118	WITHOUT_CLASSIFICATION	2.828767593881843E-4	IMPLEMENTATION
/* FIXME: arg_concat logic missing for opt_call_args*/	IMPLEMENTATION	0.9997224695944833	WITHOUT_CLASSIFICATION	2.7753040551664566E-4	IMPLEMENTATION
// FIXME: This needs to happen for lambdas //            args.checkArgCount(runtime, parameters.length);	IMPLEMENTATION	0.9997300243868629	WITHOUT_CLASSIFICATION	2.6997561313716473E-4	IMPLEMENTATION
// FIXME: This needs to happen for lambdas //            args.checkArgCount(runtime, parameters.length);	IMPLEMENTATION	0.9997300243868629	WITHOUT_CLASSIFICATION	2.6997561313716473E-4	IMPLEMENTATION
// TODO: make it cross runtime safe by COW or eager copy	IMPLEMENTATION	0.8943495622768012	WITHOUT_CLASSIFICATION	0.10565043772319885	IMPLEMENTATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.9998541792055644	WITHOUT_CLASSIFICATION	1.4582079443564887E-4	IMPLEMENTATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.9998541792055644	WITHOUT_CLASSIFICATION	1.4582079443564887E-4	IMPLEMENTATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.9998541792055644	WITHOUT_CLASSIFICATION	1.4582079443564887E-4	IMPLEMENTATION
// TODO: check the return value here	IMPLEMENTATION	0.886100646942507	IMPLEMENTATION	0.11389935305749292	WITHOUT_CLASSIFICATION
// TODO: check the return value here	IMPLEMENTATION	0.886100646942507	IMPLEMENTATION	0.11389935305749292	WITHOUT_CLASSIFICATION
// TODO: Make sure all appropriate open flags are added to this check.	IMPLEMENTATION	0.6691390194047435	WITHOUT_CLASSIFICATION	0.3308609805952564	IMPLEMENTATION
//subList.clear(); // Sublist is supposed to share same backing store as list...TODO in RubyArray. //assertTrue(list.size() == 1);	IMPLEMENTATION	0.9996667255782268	WITHOUT_CLASSIFICATION	3.3327442177319465E-4	IMPLEMENTATION
// SSS FIXME: Cannot optimize this without assuming that Range.to_ary method has not redefined. // So for now, return null!	IMPLEMENTATION	0.9998618745634271	WITHOUT_CLASSIFICATION	1.3812543657293808E-4	IMPLEMENTATION
// TODO Auto-generated method stub	IMPLEMENTATION	0.9999878663905465	IMPLEMENTATION	1.2133609453481795E-5	WITHOUT_CLASSIFICATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.9996185759049837	IMPLEMENTATION	3.8142409501623864E-4	WITHOUT_CLASSIFICATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.9996185759049837	IMPLEMENTATION	3.8142409501623864E-4	WITHOUT_CLASSIFICATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.9996185759049837	IMPLEMENTATION	3.8142409501623864E-4	WITHOUT_CLASSIFICATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.7977653437068302	WITHOUT_CLASSIFICATION	0.20223465629316986	IMPLEMENTATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.7977653437068302	WITHOUT_CLASSIFICATION	0.20223465629316986	IMPLEMENTATION
// TODO: check for ascii string	IMPLEMENTATION	0.6646903490262889	WITHOUT_CLASSIFICATION	0.33530965097371107	IMPLEMENTATION
// filter out any Java primitive names // TODO: should check against all Java reserved names here, not just primitives	IMPLEMENTATION	0.9502068477030449	WITHOUT_CLASSIFICATION	0.04979315229695515	IMPLEMENTATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9232942372656691	WITHOUT_CLASSIFICATION	0.07670576273433098	IMPLEMENTATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9232942372656691	WITHOUT_CLASSIFICATION	0.07670576273433098	IMPLEMENTATION
// TODO: missing additional logic for dealing with conflicting protected fields.	IMPLEMENTATION	0.8908299746580122	WITHOUT_CLASSIFICATION	0.10917002534198779	IMPLEMENTATION
// TODO: better detection when path is absolute or not. // If the path isn't absolute, then prepend the current working // directory to the path.	IMPLEMENTATION	0.9949590256730895	WITHOUT_CLASSIFICATION	0.005040974326910475	IMPLEMENTATION
// FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.9994447029229857	WITHOUT_CLASSIFICATION	5.552970770143616E-4	IMPLEMENTATION
// FIX replace type() == ... with isInstanceOf(...)	IMPLEMENTATION	0.9997977807390753	WITHOUT_CLASSIFICATION	2.0221926092465364E-4	IMPLEMENTATION
/* TODO: MRI is just a when node.  We need this extra logic for IDE consumers (null in casenode statement should be implicit nil)*/	IMPLEMENTATION	0.9036071379536534	WITHOUT_CLASSIFICATION	0.09639286204634662	IMPLEMENTATION
// TODO: This and recacheRespondsTo needed to be synchronized for JRUBY-3466, // but this degraded performance nearly 2x. It's still faster than MRI, but // a reanalysis of this code may show a faster way to ensure we're caching // safely.	IMPLEMENTATION	0.5719638577593646	IMPLEMENTATION	0.42803614224063535	WITHOUT_CLASSIFICATION
// TODO: adjust length so it won't fall in the middle  // of a multi-byte character. MRI's sprintf.c uses tables // in a modified version of regex.c, which assume some // particular  encoding for a given installation/application. // (See regex.c#re_mbcinit in ruby-1.8.5-p12)  // // This is only an issue if the user specifies a precision // that causes the string to be truncated. The same issue // would arise taking a substring of a ByteList-backed RubyString.	IMPLEMENTATION	0.999377655467616	WITHOUT_CLASSIFICATION	6.223445323840286E-4	IMPLEMENTATION
// set constants now that they're initialized	WITHOUT_CLASSIFICATION	0.9999294397327295	WITHOUT_CLASSIFICATION	7.056026727044044E-5	IMPLEMENTATION
// line 335	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
// Figure end-char.  '\0' is special to indicate begin=end and that no nesting?	WITHOUT_CLASSIFICATION	0.9997706518328495	WITHOUT_CLASSIFICATION	2.293481671505112E-4	IMPLEMENTATION
// line 362	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 372	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.999511677373098	WITHOUT_CLASSIFICATION	4.883226269019527E-4	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.999511677373098	WITHOUT_CLASSIFICATION	4.883226269019527E-4	IMPLEMENTATION
// line 391	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.999511677373098	WITHOUT_CLASSIFICATION	4.883226269019527E-4	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.999511677373098	WITHOUT_CLASSIFICATION	4.883226269019527E-4	IMPLEMENTATION
/* ^D */	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
/* ^Z */	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.999511677373098	WITHOUT_CLASSIFICATION	4.883226269019527E-4	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.999511677373098	WITHOUT_CLASSIFICATION	4.883226269019527E-4	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.999511677373098	WITHOUT_CLASSIFICATION	4.883226269019527E-4	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.999511677373098	WITHOUT_CLASSIFICATION	4.883226269019527E-4	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.999511677373098	WITHOUT_CLASSIFICATION	4.883226269019527E-4	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.999511677373098	WITHOUT_CLASSIFICATION	4.883226269019527E-4	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.999511677373098	WITHOUT_CLASSIFICATION	4.883226269019527E-4	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.999511677373098	WITHOUT_CLASSIFICATION	4.883226269019527E-4	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.999511677373098	WITHOUT_CLASSIFICATION	4.883226269019527E-4	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.999511677373098	WITHOUT_CLASSIFICATION	4.883226269019527E-4	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.999511677373098	WITHOUT_CLASSIFICATION	4.883226269019527E-4	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.999511677373098	WITHOUT_CLASSIFICATION	4.883226269019527E-4	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.999511677373098	WITHOUT_CLASSIFICATION	4.883226269019527E-4	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.999511677373098	WITHOUT_CLASSIFICATION	4.883226269019527E-4	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.999511677373098	WITHOUT_CLASSIFICATION	4.883226269019527E-4	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.999511677373098	WITHOUT_CLASSIFICATION	4.883226269019527E-4	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.999511677373098	WITHOUT_CLASSIFICATION	4.883226269019527E-4	IMPLEMENTATION
//Do nothing	WITHOUT_CLASSIFICATION	0.9998894567131998	WITHOUT_CLASSIFICATION	1.1054328680011233E-4	IMPLEMENTATION
//Do nothing	WITHOUT_CLASSIFICATION	0.9998894567131998	WITHOUT_CLASSIFICATION	1.1054328680011233E-4	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9965319568443834	WITHOUT_CLASSIFICATION	0.003468043155616446	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9965319568443834	WITHOUT_CLASSIFICATION	0.003468043155616446	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9965319568443834	WITHOUT_CLASSIFICATION	0.003468043155616446	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9965319568443834	WITHOUT_CLASSIFICATION	0.003468043155616446	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9965319568443834	WITHOUT_CLASSIFICATION	0.003468043155616446	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9965319568443834	WITHOUT_CLASSIFICATION	0.003468043155616446	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9965319568443834	WITHOUT_CLASSIFICATION	0.003468043155616446	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9965319568443834	WITHOUT_CLASSIFICATION	0.003468043155616446	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9965319568443834	WITHOUT_CLASSIFICATION	0.003468043155616446	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9965319568443834	WITHOUT_CLASSIFICATION	0.003468043155616446	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9965319568443834	WITHOUT_CLASSIFICATION	0.003468043155616446	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9965319568443834	WITHOUT_CLASSIFICATION	0.003468043155616446	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9965319568443834	WITHOUT_CLASSIFICATION	0.003468043155616446	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9965319568443834	WITHOUT_CLASSIFICATION	0.003468043155616446	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9965319568443834	WITHOUT_CLASSIFICATION	0.003468043155616446	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9965319568443834	WITHOUT_CLASSIFICATION	0.003468043155616446	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9965319568443834	WITHOUT_CLASSIFICATION	0.003468043155616446	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9965319568443834	WITHOUT_CLASSIFICATION	0.003468043155616446	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9965319568443834	WITHOUT_CLASSIFICATION	0.003468043155616446	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9965319568443834	WITHOUT_CLASSIFICATION	0.003468043155616446	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9965319568443834	WITHOUT_CLASSIFICATION	0.003468043155616446	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9965319568443834	WITHOUT_CLASSIFICATION	0.003468043155616446	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9965319568443834	WITHOUT_CLASSIFICATION	0.003468043155616446	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9965319568443834	WITHOUT_CLASSIFICATION	0.003468043155616446	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9965319568443834	WITHOUT_CLASSIFICATION	0.003468043155616446	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9965319568443834	WITHOUT_CLASSIFICATION	0.003468043155616446	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9965319568443834	WITHOUT_CLASSIFICATION	0.003468043155616446	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9965319568443834	WITHOUT_CLASSIFICATION	0.003468043155616446	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9965319568443834	WITHOUT_CLASSIFICATION	0.003468043155616446	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9965319568443834	WITHOUT_CLASSIFICATION	0.003468043155616446	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9965319568443834	WITHOUT_CLASSIFICATION	0.003468043155616446	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9965319568443834	WITHOUT_CLASSIFICATION	0.003468043155616446	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9965319568443834	WITHOUT_CLASSIFICATION	0.003468043155616446	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9965319568443834	WITHOUT_CLASSIFICATION	0.003468043155616446	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9965319568443834	WITHOUT_CLASSIFICATION	0.003468043155616446	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9965319568443834	WITHOUT_CLASSIFICATION	0.003468043155616446	IMPLEMENTATION
// return result	WITHOUT_CLASSIFICATION	0.9998525385088657	WITHOUT_CLASSIFICATION	1.474614911342918E-4	IMPLEMENTATION
// name	WITHOUT_CLASSIFICATION	0.9966246167895599	WITHOUT_CLASSIFICATION	0.003375383210440218	IMPLEMENTATION
// Define System.getProperties() in ENV_JAVA	WITHOUT_CLASSIFICATION	0.9998293915511799	WITHOUT_CLASSIFICATION	1.7060844882002194E-4	IMPLEMENTATION
// Accessor methods.	WITHOUT_CLASSIFICATION	0.9996601903927081	WITHOUT_CLASSIFICATION	3.398096072918039E-4	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9995626043944459	WITHOUT_CLASSIFICATION	4.373956055540725E-4	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9995626043944459	WITHOUT_CLASSIFICATION	4.373956055540725E-4	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9995626043944459	WITHOUT_CLASSIFICATION	4.373956055540725E-4	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9995626043944459	WITHOUT_CLASSIFICATION	4.373956055540725E-4	IMPLEMENTATION
// call getpwent to fail early if unsupported	WITHOUT_CLASSIFICATION	0.9997599554106411	WITHOUT_CLASSIFICATION	2.4004458935894226E-4	IMPLEMENTATION
// fall back on env entry for USER	WITHOUT_CLASSIFICATION	0.9997498854434524	WITHOUT_CLASSIFICATION	2.501145565475954E-4	IMPLEMENTATION
// try to read grent to fail fast	WITHOUT_CLASSIFICATION	0.9998482736327954	WITHOUT_CLASSIFICATION	1.5172636720460042E-4	IMPLEMENTATION
// define ARGV and $* for this runtime	WITHOUT_CLASSIFICATION	0.9998608972498063	WITHOUT_CLASSIFICATION	1.3910275019371045E-4	IMPLEMENTATION
// Version information:	WITHOUT_CLASSIFICATION	0.9997386691400555	WITHOUT_CLASSIFICATION	2.613308599444586E-4	IMPLEMENTATION
// after defn of $stderr as the call may produce warnings	WITHOUT_CLASSIFICATION	0.9998536671907128	WITHOUT_CLASSIFICATION	1.4633280928724913E-4	IMPLEMENTATION
// ARGF, $< object	WITHOUT_CLASSIFICATION	0.9996401420456549	WITHOUT_CLASSIFICATION	3.59857954345164E-4	IMPLEMENTATION
// if the environment variables can't be obtained, define an empty ENV	WITHOUT_CLASSIFICATION	0.9999085644849801	WITHOUT_CLASSIFICATION	9.143551501988414E-5	IMPLEMENTATION
// On platforms without a c-library accessable through JNA, getpid will return hashCode  // as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing // $$ on getpid() where available, we have the same semantics as MRI.	WITHOUT_CLASSIFICATION	0.9999734694083637	WITHOUT_CLASSIFICATION	2.6530591636241428E-5	IMPLEMENTATION
//$@ returns nil if $!.backtrace is not an array	WITHOUT_CLASSIFICATION	0.9998770899354777	WITHOUT_CLASSIFICATION	1.229100645222284E-4	IMPLEMENTATION
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9998070583497177	WITHOUT_CLASSIFICATION	1.929416502822692E-4	IMPLEMENTATION
// MRI behavior: just plain '//' or '\\\\' are considered illegal on Windows.	WITHOUT_CLASSIFICATION	0.9997799576259275	WITHOUT_CLASSIFICATION	2.2004237407248115E-4	IMPLEMENTATION
// this _is_ legal (when removing an undef)	WITHOUT_CLASSIFICATION	0.9997610587098348	WITHOUT_CLASSIFICATION	2.389412901653127E-4	IMPLEMENTATION
// What we passed to the constructor for method 'path'	WITHOUT_CLASSIFICATION	0.999871977053526	WITHOUT_CLASSIFICATION	1.2802294647385625E-4	IMPLEMENTATION
// ----- Ruby Class Methods ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999687901551644	WITHOUT_CLASSIFICATION	3.120984483559606E-5	IMPLEMENTATION
// // CONSTANT TABLE METHODS - pass to delegate //	WITHOUT_CLASSIFICATION	0.9997237216679945	WITHOUT_CLASSIFICATION	2.762783320054981E-4	IMPLEMENTATION
// We get canonical path to try and flatten the path out. // a dir '/subdir/..' should return as '/' // cnutter: Do we want to flatten path out?	WITHOUT_CLASSIFICATION	0.9990868908796545	WITHOUT_CLASSIFICATION	9.131091203454768E-4	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9995626043944459	WITHOUT_CLASSIFICATION	4.373956055540725E-4	IMPLEMENTATION
// ----- Ruby Instance Methods -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999731584315151	WITHOUT_CLASSIFICATION	2.684156848494682E-5	IMPLEMENTATION
// Make sure any read()s after close fail.	WITHOUT_CLASSIFICATION	0.9998972918810406	WITHOUT_CLASSIFICATION	1.0270811895946357E-4	IMPLEMENTATION
// ----- Helper Methods --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.999978077453118	WITHOUT_CLASSIFICATION	2.192254688204068E-5	IMPLEMENTATION
// try to use POSIX for this first	WITHOUT_CLASSIFICATION	0.999898427487612	WITHOUT_CLASSIFICATION	1.0157251238792718E-4	IMPLEMENTATION
// otherwise fall back on the old way	WITHOUT_CLASSIFICATION	0.9997025643646846	WITHOUT_CLASSIFICATION	2.9743563531532197E-4	IMPLEMENTATION
// Proc class	WITHOUT_CLASSIFICATION	0.9996565003865229	WITHOUT_CLASSIFICATION	3.434996134771478E-4	IMPLEMENTATION
// No passed in block, lets check next outer frame for one ('Proc.new')	WITHOUT_CLASSIFICATION	0.9998143839393115	WITHOUT_CLASSIFICATION	1.856160606884917E-4	IMPLEMENTATION
// modify the block with a new backref/lastline-grabbing scope	WITHOUT_CLASSIFICATION	0.9997386829706734	WITHOUT_CLASSIFICATION	2.6131702932664436E-4	IMPLEMENTATION
// for future compatibility as constructors move toward not accepting metaclass?	WITHOUT_CLASSIFICATION	0.9997285516669772	WITHOUT_CLASSIFICATION	2.7144833302284794E-4	IMPLEMENTATION
//        case RUBY_HYBRID: //            backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); //            break;	WITHOUT_CLASSIFICATION	0.9999726876291658	WITHOUT_CLASSIFICATION	2.7312370834241727E-5	IMPLEMENTATION
// This looks wrong, but it's the way MRI does it.	WITHOUT_CLASSIFICATION	0.999958802032577	WITHOUT_CLASSIFICATION	4.1197967423033425E-5	IMPLEMENTATION
// rb_exc_new3	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
// NOTE: The indicies here match exactly the signal values; do not reorder	WITHOUT_CLASSIFICATION	0.9999031122459853	WITHOUT_CLASSIFICATION	9.688775401465607E-5	IMPLEMENTATION
//registerThreadDumpSignalHandler(runtime);	WITHOUT_CLASSIFICATION	0.9997664450207476	WITHOUT_CLASSIFICATION	2.3355497925230532E-4	IMPLEMENTATION
// IOT is also 6	WITHOUT_CLASSIFICATION	0.9995396350441887	WITHOUT_CLASSIFICATION	4.6036495581121766E-4	IMPLEMENTATION
// CLD is also 20	WITHOUT_CLASSIFICATION	0.9995396350441887	WITHOUT_CLASSIFICATION	4.6036495581121766E-4	IMPLEMENTATION
// RubySignal	WITHOUT_CLASSIFICATION	0.9995254809235445	WITHOUT_CLASSIFICATION	4.745190764554019E-4	IMPLEMENTATION
// ZStream actually *isn't* allocatable	WITHOUT_CLASSIFICATION	0.9996689874387635	WITHOUT_CLASSIFICATION	3.310125612363851E-4	IMPLEMENTATION
// MRI behavior, enforced by tests	WITHOUT_CLASSIFICATION	0.9997634440825884	WITHOUT_CLASSIFICATION	2.365559174116672E-4	IMPLEMENTATION
// it's safe since adler.update doesn't modify the array	WITHOUT_CLASSIFICATION	0.9998770376780278	WITHOUT_CLASSIFICATION	1.2296232197221233E-4	IMPLEMENTATION
// MRI behavior: in finished mode, we work as pass-through	WITHOUT_CLASSIFICATION	0.9996673986927104	WITHOUT_CLASSIFICATION	3.3260130728964135E-4	IMPLEMENTATION
// SYNC_FLUSH	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
// By default, NO_FLUSH	WITHOUT_CLASSIFICATION	0.9997499302190727	WITHOUT_CLASSIFICATION	2.500697809273737E-4	IMPLEMENTATION
//io.finish();	WITHOUT_CLASSIFICATION	0.9994961866466123	WITHOUT_CLASSIFICATION	5.038133533876558E-4	IMPLEMENTATION
// should invoke seek on realIo	WITHOUT_CLASSIFICATION	0.9997159443412729	WITHOUT_CLASSIFICATION	2.8405565872717303E-4	IMPLEMENTATION
// hmm...	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
// Called before any write to make sure the // header is always written before the first bytes	WITHOUT_CLASSIFICATION	0.9999510549365622	WITHOUT_CLASSIFICATION	4.8945063437882897E-5	IMPLEMENTATION
// For JDK 1.4 we can use "cal.getTimeInMillis()"	WITHOUT_CLASSIFICATION	0.9997083893841247	WITHOUT_CLASSIFICATION	2.9161061587533026E-4	IMPLEMENTATION
// We can just use dt, since it is immutable	WITHOUT_CLASSIFICATION	0.9997613750703007	WITHOUT_CLASSIFICATION	2.386249296993394E-4	IMPLEMENTATION
// float number of seconds	WITHOUT_CLASSIFICATION	0.9997766705206964	WITHOUT_CLASSIFICATION	2.2332947930344915E-4	IMPLEMENTATION
// modified to match how hash is calculated in 1.8.2	WITHOUT_CLASSIFICATION	0.9998526262104842	WITHOUT_CLASSIFICATION	1.4737378951589742E-4	IMPLEMENTATION
// dump usec, not msec	WITHOUT_CLASSIFICATION	0.9995936133673797	WITHOUT_CLASSIFICATION	4.0638663262030825E-4	IMPLEMENTATION
/* Time class methods */	WITHOUT_CLASSIFICATION	0.9997943292189153	WITHOUT_CLASSIFICATION	2.0567078108468226E-4	IMPLEMENTATION
// marsaling dumps usec, not msec	WITHOUT_CLASSIFICATION	0.9997163308263091	WITHOUT_CLASSIFICATION	2.836691736909373E-4	IMPLEMENTATION
// MRI accepts additional wday argument which appears to be ignored.	WITHOUT_CLASSIFICATION	0.9998832180427326	WITHOUT_CLASSIFICATION	1.1678195726739807E-4	IMPLEMENTATION
// set up with min values and then add to allow rolling over	WITHOUT_CLASSIFICATION	0.9998536338784805	WITHOUT_CLASSIFICATION	1.4636612151954696E-4	IMPLEMENTATION
// the instant at which we will ask dtz what the difference between DST and // standard time is	WITHOUT_CLASSIFICATION	0.999836007609971	WITHOUT_CLASSIFICATION	1.6399239002898753E-4	IMPLEMENTATION
// if we might be moving this time from !DST -> DST, the offset is assumed // to be the same as it was just before we last moved from DST -> !DST	WITHOUT_CLASSIFICATION	0.9999371944980772	WITHOUT_CLASSIFICATION	6.280550192284308E-5	IMPLEMENTATION
// Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.	WITHOUT_CLASSIFICATION	0.9999751217050714	WITHOUT_CLASSIFICATION	2.4878294928521124E-5	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9998526888301756	WITHOUT_CLASSIFICATION	1.4731116982433798E-4	IMPLEMENTATION
/* If the value will fit in a Fixnum, return one of those. */	WITHOUT_CLASSIFICATION	0.9999352609755966	WITHOUT_CLASSIFICATION	6.473902440342305E-5	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9998839370918579	WITHOUT_CLASSIFICATION	1.1606290814215116E-4	IMPLEMENTATION
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9996594456281357	WITHOUT_CLASSIFICATION	3.405543718643003E-4	IMPLEMENTATION
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9085103868731291	WITHOUT_CLASSIFICATION	0.09148961312687084	IMPLEMENTATION
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9085103868731291	WITHOUT_CLASSIFICATION	0.09148961312687084	IMPLEMENTATION
// no bignorm here needed	WITHOUT_CLASSIFICATION	0.9982070391306292	WITHOUT_CLASSIFICATION	0.0017929608693707892	IMPLEMENTATION
// wow, the only time we can use the java protocol ;)	WITHOUT_CLASSIFICATION	0.9997864569253028	WITHOUT_CLASSIFICATION	2.135430746972514E-4	IMPLEMENTATION
// Pad with a 0	WITHOUT_CLASSIFICATION	0.9995905599963386	WITHOUT_CLASSIFICATION	4.0944000366142545E-4	IMPLEMENTATION
// BigInteger required a sign byte in incoming array	WITHOUT_CLASSIFICATION	0.9997433008331441	WITHOUT_CLASSIFICATION	2.566991668558798E-4	IMPLEMENTATION
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9999698161750967	WITHOUT_CLASSIFICATION	3.0183824903329575E-5	IMPLEMENTATION
// We do this b/c make_tmpname might be overridden	WITHOUT_CLASSIFICATION	0.9997417301564097	WITHOUT_CLASSIFICATION	2.5826984359036883E-4	IMPLEMENTATION
// ???	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
// PID	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9998839370918579	WITHOUT_CLASSIFICATION	1.1606290814215116E-4	IMPLEMENTATION
// elements and trailing nils	WITHOUT_CLASSIFICATION	0.9998429784296242	WITHOUT_CLASSIFICATION	1.570215703757132E-4	IMPLEMENTATION
// Dir::tmpdir	WITHOUT_CLASSIFICATION	0.9995206450293572	WITHOUT_CLASSIFICATION	4.793549706427885E-4	IMPLEMENTATION
// volatile to ensure that initial nil-fill is visible to other threads	WITHOUT_CLASSIFICATION	0.9996557182767143	WITHOUT_CLASSIFICATION	3.442817232857039E-4	IMPLEMENTATION
/* Ruby arrays default to holding 16 elements, so we create an         * ArrayList of the same size if we're not told otherwise         */	WITHOUT_CLASSIFICATION	0.9999963304814984	WITHOUT_CLASSIFICATION	3.6695185016688205E-6	IMPLEMENTATION
/* rb_ary_new2     * just allocates the internal array     */	WITHOUT_CLASSIFICATION	0.9998864238043916	WITHOUT_CLASSIFICATION	1.1357619560826073E-4	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999362011886411	WITHOUT_CLASSIFICATION	6.379881135879608E-5	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999362011886411	WITHOUT_CLASSIFICATION	6.379881135879608E-5	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999362011886411	WITHOUT_CLASSIFICATION	6.379881135879608E-5	IMPLEMENTATION
/* Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour     *      */	WITHOUT_CLASSIFICATION	0.9998661587700001	WITHOUT_CLASSIFICATION	1.3384122999990147E-4	IMPLEMENTATION
/* NEWOBJ and OBJSETUP equivalent     * fastest one, for shared arrays, optional objectspace     */	WITHOUT_CLASSIFICATION	0.999802633300933	WITHOUT_CLASSIFICATION	1.9736669906697069E-4	IMPLEMENTATION
// Create global constants and variables	WITHOUT_CLASSIFICATION	0.9999253536965244	WITHOUT_CLASSIFICATION	7.464630347568762E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9986246362208161	WITHOUT_CLASSIFICATION	0.0013753637791839022	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9986246362208161	WITHOUT_CLASSIFICATION	0.0013753637791839022	IMPLEMENTATION
// Windows does not support these functions, so we won't even try // This also matches Ruby behavior for JRUBY-2353.	WITHOUT_CLASSIFICATION	0.9998407400155114	WITHOUT_CLASSIFICATION	1.5925998448867092E-4	IMPLEMENTATION
// There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and // newer one (US/Pacific, America/Los_Angeles). This pattern is to detect // the legacy TZ format in order to convert it to the newer format // understood by Java API.	WITHOUT_CLASSIFICATION	0.9999807455763656	WITHOUT_CLASSIFICATION	1.925442363433444E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9986246362208161	WITHOUT_CLASSIFICATION	0.0013753637791839022	IMPLEMENTATION
// 1.9 seems to just do inspect for to_s now	WITHOUT_CLASSIFICATION	0.9997573338380995	WITHOUT_CLASSIFICATION	2.4266616190041703E-4	IMPLEMENTATION
// possibly should not in object space	WITHOUT_CLASSIFICATION	0.9998434913286808	WITHOUT_CLASSIFICATION	1.5650867131925886E-4	IMPLEMENTATION
// only fill if there actually will remain trailing storage	WITHOUT_CLASSIFICATION	0.9998893836374098	WITHOUT_CLASSIFICATION	1.1061636259031633E-4	IMPLEMENTATION
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
// from DUP_SETUP	WITHOUT_CLASSIFICATION	0.9995746704629153	WITHOUT_CLASSIFICATION	4.2532953708473515E-4	IMPLEMENTATION
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999163900566022	WITHOUT_CLASSIFICATION	8.36099433979245E-5	IMPLEMENTATION
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9996125460665578	WITHOUT_CLASSIFICATION	3.87453933442111E-4	IMPLEMENTATION
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9996125460665578	WITHOUT_CLASSIFICATION	3.87453933442111E-4	IMPLEMENTATION
// Satisfy java.util.List interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9998465218690732	WITHOUT_CLASSIFICATION	1.53478130926724E-4	IMPLEMENTATION
// pre-set for the sake of terminating recursive calls	WITHOUT_CLASSIFICATION	0.9998873933895195	WITHOUT_CLASSIFICATION	1.1260661048055929E-4	IMPLEMENTATION
/* root fiber */	WITHOUT_CLASSIFICATION	0.9995227262969988	WITHOUT_CLASSIFICATION	4.7727370300120554E-4	IMPLEMENTATION
// GMT+00:00 --> Etc/GMT, see "MRI behavior" // comment below.	WITHOUT_CLASSIFICATION	0.9998283981963094	WITHOUT_CLASSIFICATION	1.7160180369066479E-4	IMPLEMENTATION
//  See http://www.gzip.org/zlib/rfc-gzip.html	WITHOUT_CLASSIFICATION	0.9997083835330216	WITHOUT_CLASSIFICATION	2.9161646697849246E-4	IMPLEMENTATION
// extras flag	WITHOUT_CLASSIFICATION	0.9995521613982772	WITHOUT_CLASSIFICATION	4.478386017228156E-4	IMPLEMENTATION
// Zlib::NO_FLUSH	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
// ...nothing	WITHOUT_CLASSIFICATION	0.9997860970051496	WITHOUT_CLASSIFICATION	2.13902994850327E-4	IMPLEMENTATION
// utility method	WITHOUT_CLASSIFICATION	0.9996345852577575	WITHOUT_CLASSIFICATION	3.654147422424322E-4	IMPLEMENTATION
// Prepare LoadService and load path	WITHOUT_CLASSIFICATION	0.9997546758204275	WITHOUT_CLASSIFICATION	2.4532417957243873E-4	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9998839370918579	WITHOUT_CLASSIFICATION	1.1606290814215116E-4	IMPLEMENTATION
// flags // 4 bytes of modified time	WITHOUT_CLASSIFICATION	0.9997261883227722	WITHOUT_CLASSIFICATION	2.738116772278107E-4	IMPLEMENTATION
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9996998004029287	WITHOUT_CLASSIFICATION	3.001995970713589E-4	IMPLEMENTATION
// 1.8 "include?"	WITHOUT_CLASSIFICATION	0.9995467935343213	WITHOUT_CLASSIFICATION	4.532064656787518E-4	IMPLEMENTATION
// any BigInteger is bigger than Fixnum and we don't have FIXABLE	WITHOUT_CLASSIFICATION	0.9998288558150632	WITHOUT_CLASSIFICATION	1.7114418493682383E-4	IMPLEMENTATION
// beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal	WITHOUT_CLASSIFICATION	0.999777966352607	WITHOUT_CLASSIFICATION	2.220336473931518E-4	IMPLEMENTATION
// MRI does it!	WITHOUT_CLASSIFICATION	0.9995316259518402	WITHOUT_CLASSIFICATION	4.683740481598226E-4	IMPLEMENTATION
// won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9996047122990889	WITHOUT_CLASSIFICATION	3.952877009111988E-4	IMPLEMENTATION
// it won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9996687433484046	WITHOUT_CLASSIFICATION	3.3125665159544756E-4	IMPLEMENTATION
// RubyClassPathVariable	WITHOUT_CLASSIFICATION	0.9995791169087533	WITHOUT_CLASSIFICATION	4.208830912466463E-4	IMPLEMENTATION
// not to be confused with RubyObject's flags	WITHOUT_CLASSIFICATION	0.9994102866577421	WITHOUT_CLASSIFICATION	5.897133422579065E-4	IMPLEMENTATION
// second argument is allowed, but ignored (MRI)	WITHOUT_CLASSIFICATION	0.9999422645980183	WITHOUT_CLASSIFICATION	5.773540198180324E-5	IMPLEMENTATION
// we are presumably running a precompiled class; load directly	WITHOUT_CLASSIFICATION	0.9998990924039766	WITHOUT_CLASSIFICATION	1.0090759602340431E-4	IMPLEMENTATION
// terminate; tryCompile will have printed out an error and we're done	WITHOUT_CLASSIFICATION	0.9998218458457336	WITHOUT_CLASSIFICATION	1.7815415426626586E-4	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9998209262874915	WITHOUT_CLASSIFICATION	1.7907371250846404E-4	IMPLEMENTATION
// do nothing, this iteration restarts	WITHOUT_CLASSIFICATION	0.9999736347953481	WITHOUT_CLASSIFICATION	2.6365204651907826E-5	IMPLEMENTATION
// recheck condition	WITHOUT_CLASSIFICATION	0.9996068579595045	WITHOUT_CLASSIFICATION	3.9314204049547755E-4	IMPLEMENTATION
// Get the main threadcontext (gets constructed for us)	WITHOUT_CLASSIFICATION	0.9999308891690177	WITHOUT_CLASSIFICATION	6.911083098224406E-5	IMPLEMENTATION
// Construct key services	WITHOUT_CLASSIFICATION	0.9997601032127577	WITHOUT_CLASSIFICATION	2.3989678724234816E-4	IMPLEMENTATION
// initialize the root of the class hierarchy completely	WITHOUT_CLASSIFICATION	0.9999781609151679	WITHOUT_CLASSIFICATION	2.183908483212529E-5	IMPLEMENTATION
// Construct the top-level execution frame and scope for the main thread	WITHOUT_CLASSIFICATION	0.9999439511322553	WITHOUT_CLASSIFICATION	5.6048867744618025E-5	IMPLEMENTATION
// Initialize all the core classes	WITHOUT_CLASSIFICATION	0.9999510915339825	WITHOUT_CLASSIFICATION	4.8908466017489626E-5	IMPLEMENTATION
// Initialize the "dummy" class used as a marker	WITHOUT_CLASSIFICATION	0.999944837731948	WITHOUT_CLASSIFICATION	5.516226805200971E-5	IMPLEMENTATION
// Initialize Kernel and include into Object	WITHOUT_CLASSIFICATION	0.9999177214626298	WITHOUT_CLASSIFICATION	8.227853737017099E-5	IMPLEMENTATION
// Object is ready, create top self	WITHOUT_CLASSIFICATION	0.999837591717885	WITHOUT_CLASSIFICATION	1.6240828211499796E-4	IMPLEMENTATION
// Pre-create all the core classes potentially referenced during startup	WITHOUT_CLASSIFICATION	0.9999553706937889	WITHOUT_CLASSIFICATION	4.46293062109904E-5	IMPLEMENTATION
// Math depends on all numeric types	WITHOUT_CLASSIFICATION	0.9998167889657287	WITHOUT_CLASSIFICATION	1.832110342712861E-4	IMPLEMENTATION
// depends on IO, FileTest	WITHOUT_CLASSIFICATION	0.9997081375823739	WITHOUT_CLASSIFICATION	2.9186241762613543E-4	IMPLEMENTATION
// initialize builtin libraries	WITHOUT_CLASSIFICATION	0.9999235261087244	WITHOUT_CLASSIFICATION	7.647389127558029E-5	IMPLEMENTATION
// Require in all libraries specified on command line	WITHOUT_CLASSIFICATION	0.9998713985743896	WITHOUT_CLASSIFICATION	1.2860142561048124E-4	IMPLEMENTATION
// Bootstrap the top of the hierarchy	WITHOUT_CLASSIFICATION	0.9999032885397163	WITHOUT_CLASSIFICATION	9.67114602836638E-5	IMPLEMENTATION
// we try to get the classloader that loaded JRuby, falling back on System	WITHOUT_CLASSIFICATION	0.999933341350059	WITHOUT_CLASSIFICATION	6.66586499410508E-5	IMPLEMENTATION
// determine spacing	WITHOUT_CLASSIFICATION	0.9996659511547028	WITHOUT_CLASSIFICATION	3.340488452972111E-4	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9996454740342443	WITHOUT_CLASSIFICATION	3.5452596575575907E-4	IMPLEMENTATION
// For JSR 223 support: see http://scripting.java.net/	WITHOUT_CLASSIFICATION	0.9995841688627618	WITHOUT_CLASSIFICATION	4.158311372382456E-4	IMPLEMENTATION
// use this for JRuby-internal finalizers	WITHOUT_CLASSIFICATION	0.999771494661218	WITHOUT_CLASSIFICATION	2.285053387820239E-4	IMPLEMENTATION
// this method is for finalizers registered via ObjectSpace	WITHOUT_CLASSIFICATION	0.9995030376419163	WITHOUT_CLASSIFICATION	4.969623580837718E-4	IMPLEMENTATION
// new factory methods ------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999704414736768	WITHOUT_CLASSIFICATION	2.9558526323208216E-5	IMPLEMENTATION
//        assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999545104221739	WITHOUT_CLASSIFICATION	4.548957782602963E-5	IMPLEMENTATION
// Equivalent of Data_Wrap_Struct	WITHOUT_CLASSIFICATION	0.9996576835745518	WITHOUT_CLASSIFICATION	3.423164254482841E-4	IMPLEMENTATION
// default: don't retain	WITHOUT_CLASSIFICATION	0.9998000903437727	WITHOUT_CLASSIFICATION	1.9990965622729173E-4	IMPLEMENTATION
// ChannelDescriptors opened by sysopen are cached to avoid collection	WITHOUT_CLASSIFICATION	0.9997510817547708	WITHOUT_CLASSIFICATION	2.489182452292542E-4	IMPLEMENTATION
// Default objects	WITHOUT_CLASSIFICATION	0.9998601246590132	WITHOUT_CLASSIFICATION	1.3987534098682634E-4	IMPLEMENTATION
// record separator var, to speed up io ops that use it	WITHOUT_CLASSIFICATION	0.9998150553556484	WITHOUT_CLASSIFICATION	1.8494464435159382E-4	IMPLEMENTATION
// former java.lang.System concepts now internalized for MVM	WITHOUT_CLASSIFICATION	0.999839420807277	WITHOUT_CLASSIFICATION	1.605791927231017E-4	IMPLEMENTATION
// Java support	WITHOUT_CLASSIFICATION	0.9991786173815717	WITHOUT_CLASSIFICATION	8.213826184283057E-4	IMPLEMENTATION
// Parser stats	WITHOUT_CLASSIFICATION	0.9995611665721233	WITHOUT_CLASSIFICATION	4.3883342787660634E-4	IMPLEMENTATION
// Compilation	WITHOUT_CLASSIFICATION	0.9996117635929032	WITHOUT_CLASSIFICATION	3.8823640709688233E-4	IMPLEMENTATION
// can't read non-standard properties	WITHOUT_CLASSIFICATION	0.9998893452154702	WITHOUT_CLASSIFICATION	1.106547845296609E-4	IMPLEMENTATION
// can't create custom classloaders	WITHOUT_CLASSIFICATION	0.9998728218497247	WITHOUT_CLASSIFICATION	1.27178150275262E-4	IMPLEMENTATION
// mutex that controls modifications of user-defined finalizers	WITHOUT_CLASSIFICATION	0.9998428665641044	WITHOUT_CLASSIFICATION	1.571334358956119E-4	IMPLEMENTATION
// mutex that controls modifications of internal finalizers	WITHOUT_CLASSIFICATION	0.9998815526248048	WITHOUT_CLASSIFICATION	1.1844737519523549E-4	IMPLEMENTATION
// A thread pool to use for executing this runtime's Ruby threads	WITHOUT_CLASSIFICATION	0.9998032594441275	WITHOUT_CLASSIFICATION	1.9674055587251443E-4	IMPLEMENTATION
// A global object lock for class hierarchy mutations	WITHOUT_CLASSIFICATION	0.9999244245401917	WITHOUT_CLASSIFICATION	7.557545980828473E-5	IMPLEMENTATION
// initial spaces // spaces before "at"	WITHOUT_CLASSIFICATION	0.9998698472173982	WITHOUT_CLASSIFICATION	1.3015278260180616E-4	IMPLEMENTATION
// event name // filename // line numbers should be 1-based	WITHOUT_CLASSIFICATION	0.9998445437339405	WITHOUT_CLASSIFICATION	1.554562660595715E-4	IMPLEMENTATION
// The method is intentionally not public, since it typically should // not be used outside of the core.	WITHOUT_CLASSIFICATION	0.999829436979208	WITHOUT_CLASSIFICATION	1.7056302079210525E-4	IMPLEMENTATION
// Note: this field and the following static initializer // must be located be in this order!	WITHOUT_CLASSIFICATION	0.9999759745062089	WITHOUT_CLASSIFICATION	2.4025493791065164E-5	IMPLEMENTATION
// Contains a list of all blocks (as Procs) that should be called when // the runtime environment exits.	WITHOUT_CLASSIFICATION	0.9998189805048261	WITHOUT_CLASSIFICATION	1.8101949517397199E-4	IMPLEMENTATION
// quoted-printable	WITHOUT_CLASSIFICATION	0.9995373638426358	WITHOUT_CLASSIFICATION	4.6263615736417333E-4	IMPLEMENTATION
// default options	WITHOUT_CLASSIFICATION	0.9998594352419403	WITHOUT_CLASSIFICATION	1.4056475805969637E-4	IMPLEMENTATION
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9995201540516414	WITHOUT_CLASSIFICATION	4.7984594835869573E-4	IMPLEMENTATION
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9995201540516414	WITHOUT_CLASSIFICATION	4.7984594835869573E-4	IMPLEMENTATION
// EUC-JP	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
// EUC-JP	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
// UTF-8	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
// UTF-8	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
// long name option	WITHOUT_CLASSIFICATION	0.999579640588219	WITHOUT_CLASSIFICATION	4.2035941178093E-4	IMPLEMENTATION
// conversion	WITHOUT_CLASSIFICATION	0.9997513859210769	WITHOUT_CLASSIFICATION	2.4861407892309617E-4	IMPLEMENTATION
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9998642388121125	WITHOUT_CLASSIFICATION	1.3576118788747872E-4	IMPLEMENTATION
// string doesn't share any resources	WITHOUT_CLASSIFICATION	0.9998877399038031	WITHOUT_CLASSIFICATION	1.122600961969069E-4	IMPLEMENTATION
// string has it's own ByteList, but it's pointing to a shared buffer (byte[])	WITHOUT_CLASSIFICATION	0.9998753030162036	WITHOUT_CLASSIFICATION	1.246969837964106E-4	IMPLEMENTATION
// string doesn't have it's own ByteList (values)	WITHOUT_CLASSIFICATION	0.9998803986932916	WITHOUT_CLASSIFICATION	1.1960130670836386E-4	IMPLEMENTATION
// ENC_CODERANGE_ASCIIONLY	WITHOUT_CLASSIFICATION	0.9995793788471994	WITHOUT_CLASSIFICATION	4.2062115280061324E-4	IMPLEMENTATION
// rb_enc_str_asciionly_p	WITHOUT_CLASSIFICATION	0.9995793788471994	WITHOUT_CLASSIFICATION	4.2062115280061324E-4	IMPLEMENTATION
// rb_enc_str_coderange	WITHOUT_CLASSIFICATION	0.9995793788471994	WITHOUT_CLASSIFICATION	4.2062115280061324E-4	IMPLEMENTATION
// rb_str_hash_cmp	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
// Deprecated String construction routines	WITHOUT_CLASSIFICATION	0.9998307805019617	WITHOUT_CLASSIFICATION	1.6921949803827362E-4	IMPLEMENTATION
// String construction routines by NOT byte[] buffer and NOT making the target String shared 	WITHOUT_CLASSIFICATION	0.9999631366009352	WITHOUT_CLASSIFICATION	3.686339906479149E-5	IMPLEMENTATION
/* rb_str_subseq */	WITHOUT_CLASSIFICATION	0.9995202072879148	WITHOUT_CLASSIFICATION	4.797927120852271E-4	IMPLEMENTATION
// no need to assign encoding, same bytelist shared	WITHOUT_CLASSIFICATION	0.9997096284442617	WITHOUT_CLASSIFICATION	2.9037155573822E-4	IMPLEMENTATION
// if len == 0 then shared empty	WITHOUT_CLASSIFICATION	0.9997469559668367	WITHOUT_CLASSIFICATION	2.53044033163272E-4	IMPLEMENTATION
/* rb_str_cmp_m */	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
// we limit to int because ByteBuffer can only allocate int sizes	WITHOUT_CLASSIFICATION	0.9998406552029315	WITHOUT_CLASSIFICATION	1.5934479706851594E-4	IMPLEMENTATION
// // rb_str_buf_append	WITHOUT_CLASSIFICATION	0.9996054936964133	WITHOUT_CLASSIFICATION	3.94506303586688E-4	IMPLEMENTATION
// encoding doesn't have to be copied.	WITHOUT_CLASSIFICATION	0.9999000318630635	WITHOUT_CLASSIFICATION	9.996813693642772E-5	IMPLEMENTATION
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9994665844207326	WITHOUT_CLASSIFICATION	5.334155792673226E-4	IMPLEMENTATION
// must not reallocate	WITHOUT_CLASSIFICATION	0.9996896219518446	WITHOUT_CLASSIFICATION	3.103780481554617E-4	IMPLEMENTATION
// Illegal combination	WITHOUT_CLASSIFICATION	0.9996225320883304	WITHOUT_CLASSIFICATION	3.774679116695817E-4	IMPLEMENTATION
// use 1.8 impl	WITHOUT_CLASSIFICATION	0.9995901888927005	WITHOUT_CLASSIFICATION	4.098111072995771E-4	IMPLEMENTATION
/* RubyString aka rb_string_value */	WITHOUT_CLASSIFICATION	0.9997741442683369	WITHOUT_CLASSIFICATION	2.2585573166310417E-4	IMPLEMENTATION
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9997610928490154	WITHOUT_CLASSIFICATION	2.3890715098464133E-4	IMPLEMENTATION
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9998265385823029	WITHOUT_CLASSIFICATION	1.7346141769716922E-4	IMPLEMENTATION
/* len + margin */	WITHOUT_CLASSIFICATION	0.9995277775364818	WITHOUT_CLASSIFICATION	4.722224635181007E-4	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.999508195400188	WITHOUT_CLASSIFICATION	4.91804599811958E-4	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.999508195400188	WITHOUT_CLASSIFICATION	4.91804599811958E-4	IMPLEMENTATION
/* copy pre-match substr */	WITHOUT_CLASSIFICATION	0.9995972102431672	WITHOUT_CLASSIFICATION	4.027897568328601E-4	IMPLEMENTATION
// string given	WITHOUT_CLASSIFICATION	0.9996670084046033	WITHOUT_CLASSIFICATION	3.3299159539670263E-4	IMPLEMENTATION
// hash given	WITHOUT_CLASSIFICATION	0.9995222071899453	WITHOUT_CLASSIFICATION	4.7779281005461897E-4	IMPLEMENTATION
// This represents left most digit in a set of incremented // values?  Therefore leftmost numeric must be '1' and not '0' // 999 -> 1000, not 999 -> 0000.  whereas chars should be // zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"	WITHOUT_CLASSIFICATION	0.9998959487130608	WITHOUT_CLASSIFICATION	1.0405128693922445E-4	IMPLEMENTATION
/* substring longer than string */	WITHOUT_CLASSIFICATION	0.9998447064365987	WITHOUT_CLASSIFICATION	1.5529356340137891E-4	IMPLEMENTATION
/* rb_str_substr */	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
// nothing	WITHOUT_CLASSIFICATION	0.9982988088664325	WITHOUT_CLASSIFICATION	0.0017011911335674983	IMPLEMENTATION
// nothing	WITHOUT_CLASSIFICATION	0.9982988088664325	WITHOUT_CLASSIFICATION	0.0017011911335674983	IMPLEMENTATION
/* rb_str_splice */	WITHOUT_CLASSIFICATION	0.9995205560935791	WITHOUT_CLASSIFICATION	4.7944390642092456E-4	IMPLEMENTATION
// TODO: keep cr // TODO: rb_str_splice_0	WITHOUT_CLASSIFICATION	0.8639461797983959	WITHOUT_CLASSIFICATION	0.1360538202016041	IMPLEMENTATION
// keep cr ?	WITHOUT_CLASSIFICATION	0.9995765534341283	WITHOUT_CLASSIFICATION	4.2344656587170205E-4	IMPLEMENTATION
// keep cr ?	WITHOUT_CLASSIFICATION	0.9995765534341283	WITHOUT_CLASSIFICATION	4.2344656587170205E-4	IMPLEMENTATION
/* wrapped to \0...\0.  search next valid char. */	WITHOUT_CLASSIFICATION	0.999780676100654	WITHOUT_CLASSIFICATION	2.1932389934603514E-4	IMPLEMENTATION
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9998074962014923	WITHOUT_CLASSIFICATION	1.9250379850763443E-4	IMPLEMENTATION
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9998074962014923	WITHOUT_CLASSIFICATION	1.9250379850763443E-4	IMPLEMENTATION
// modified	WITHOUT_CLASSIFICATION	0.9995199239034369	WITHOUT_CLASSIFICATION	4.800760965630579E-4	IMPLEMENTATION
// modified	WITHOUT_CLASSIFICATION	0.9995199239034369	WITHOUT_CLASSIFICATION	4.800760965630579E-4	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
// QTRUE	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
/* retrieve last replacer */	WITHOUT_CLASSIFICATION	0.9996730609679653	WITHOUT_CLASSIFICATION	3.2693903203483073E-4	IMPLEMENTATION
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9998824542551841	WITHOUT_CLASSIFICATION	1.1754574481589392E-4	IMPLEMENTATION
// long size * bits in byte	WITHOUT_CLASSIFICATION	0.9995983758006178	WITHOUT_CLASSIFICATION	4.016241993822543E-4	IMPLEMENTATION
// from encoding, special-casing ASCII* to ASCII	WITHOUT_CLASSIFICATION	0.9997655114071201	WITHOUT_CLASSIFICATION	2.3448859287977534E-4	IMPLEMENTATION
// to encoding, same special-casing	WITHOUT_CLASSIFICATION	0.9997585134252676	WITHOUT_CLASSIFICATION	2.4148657473259237E-4	IMPLEMENTATION
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9998900818284722	WITHOUT_CLASSIFICATION	1.0991817152789844E-4	IMPLEMENTATION
// decode from "from" and encode to "to"	WITHOUT_CLASSIFICATION	0.9997811160293538	WITHOUT_CLASSIFICATION	2.188839706460813E-4	IMPLEMENTATION
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9998900818284722	WITHOUT_CLASSIFICATION	1.0991817152789844E-4	IMPLEMENTATION
//Kernel is the only Module that doesn't need an implementor	WITHOUT_CLASSIFICATION	0.9961258746754179	WITHOUT_CLASSIFICATION	0.0038741253245820834	IMPLEMENTATION
// no binding given, use (eval)	WITHOUT_CLASSIFICATION	0.9997652548349375	WITHOUT_CLASSIFICATION	2.3474516506259994E-4	IMPLEMENTATION
// interned, OK for "fast" methods	WITHOUT_CLASSIFICATION	0.9997870126155997	WITHOUT_CLASSIFICATION	2.1298738440026285E-4	IMPLEMENTATION
// File to be loaded by autoload has already been or is being loaded.	WITHOUT_CLASSIFICATION	0.9998484792989574	WITHOUT_CLASSIFICATION	1.5152070104258752E-4	IMPLEMENTATION
// rb_cstr_to_dbl case	WITHOUT_CLASSIFICATION	0.9995756978743593	WITHOUT_CLASSIFICATION	4.243021256408144E-4	IMPLEMENTATION
// We break if we know this sleep was explicitly woken up/interrupted	WITHOUT_CLASSIFICATION	0.9998164991664298	WITHOUT_CLASSIFICATION	1.8350083357014698E-4	IMPLEMENTATION
// exec process, create IO with process	WITHOUT_CLASSIFICATION	0.9998378374840488	WITHOUT_CLASSIFICATION	1.621625159512164E-4	IMPLEMENTATION
// Zero sleeps forever	WITHOUT_CLASSIFICATION	0.9996911878805061	WITHOUT_CLASSIFICATION	3.0881211949378596E-4	IMPLEMENTATION
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9997760938835724	WITHOUT_CLASSIFICATION	2.239061164275799E-4	IMPLEMENTATION
// Explicit zero in MRI returns immediately	WITHOUT_CLASSIFICATION	0.9998518334631448	WITHOUT_CLASSIFICATION	1.481665368553036E-4	IMPLEMENTATION
// Spurious wakeup-loop	WITHOUT_CLASSIFICATION	0.999583545854861	WITHOUT_CLASSIFICATION	4.1645414513908106E-4	IMPLEMENTATION
// adjusts paths started with '/' or '\\', on windows.	WITHOUT_CLASSIFICATION	0.9997841371133888	WITHOUT_CLASSIFICATION	2.1586288661124166E-4	IMPLEMENTATION
// file not given	WITHOUT_CLASSIFICATION	0.9996077703245196	WITHOUT_CLASSIFICATION	3.922296754803322E-4	IMPLEMENTATION
// string to eval	WITHOUT_CLASSIFICATION	0.9997009067043785	WITHOUT_CLASSIFICATION	2.990932956215083E-4	IMPLEMENTATION
// binding given, use binding's file	WITHOUT_CLASSIFICATION	0.9997282943242927	WITHOUT_CLASSIFICATION	2.7170567570728127E-4	IMPLEMENTATION
// ?g  | boolean | True if file1 has the \CF{setgid} bit	WITHOUT_CLASSIFICATION	0.9997871190637204	WITHOUT_CLASSIFICATION	2.128809362795554E-4	IMPLEMENTATION
// bomb out, it's not a binding or a proc	WITHOUT_CLASSIFICATION	0.9997899467792956	WITHOUT_CLASSIFICATION	2.1005322070447214E-4	IMPLEMENTATION
// Ordering of array traversal not important, just intuitive	WITHOUT_CLASSIFICATION	0.9995904743912418	WITHOUT_CLASSIFICATION	4.0952560875813027E-4	IMPLEMENTATION
//Catch active, throw for catch to handle	WITHOUT_CLASSIFICATION	0.9997044449193878	WITHOUT_CLASSIFICATION	2.9555508061219376E-4	IMPLEMENTATION
// No catch active for this throw	WITHOUT_CLASSIFICATION	0.9998432641034614	WITHOUT_CLASSIFICATION	1.5673589653869086E-4	IMPLEMENTATION
// without full tracing, many events will not fire	WITHOUT_CLASSIFICATION	0.9998495046603816	WITHOUT_CLASSIFICATION	1.5049533961852525E-4	IMPLEMENTATION
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999716570595902	WITHOUT_CLASSIFICATION	2.8342940409802853E-5	IMPLEMENTATION
// MRI behavior: use first byte of string value if len > 0	WITHOUT_CLASSIFICATION	0.9998875587568351	WITHOUT_CLASSIFICATION	1.1244124316486177E-4	IMPLEMENTATION
// MRI behavior: now check arg count	WITHOUT_CLASSIFICATION	0.9997255094227466	WITHOUT_CLASSIFICATION	2.7449057725344666E-4	IMPLEMENTATION
// ?A  | Time    | Last access time for file1	WITHOUT_CLASSIFICATION	0.99971082542064	WITHOUT_CLASSIFICATION	2.8917457936000377E-4	IMPLEMENTATION
// ?b  | boolean | True if file1 is a block device	WITHOUT_CLASSIFICATION	0.9997571550327968	WITHOUT_CLASSIFICATION	2.428449672031521E-4	IMPLEMENTATION
// ?c  | boolean | True if file1 is a character device	WITHOUT_CLASSIFICATION	0.9998314035419955	WITHOUT_CLASSIFICATION	1.6859645800449828E-4	IMPLEMENTATION
// ?C  | Time    | Last change time for file1	WITHOUT_CLASSIFICATION	0.9997948933190066	WITHOUT_CLASSIFICATION	2.0510668099348446E-4	IMPLEMENTATION
// ?d  | boolean | True if file1 exists and is a directory	WITHOUT_CLASSIFICATION	0.9999273069665189	WITHOUT_CLASSIFICATION	7.269303348104608E-5	IMPLEMENTATION
// ?e  | boolean | True if file1 exists	WITHOUT_CLASSIFICATION	0.9997690549764379	WITHOUT_CLASSIFICATION	2.3094502356209298E-4	IMPLEMENTATION
// ?f  | boolean | True if file1 exists and is a regular file	WITHOUT_CLASSIFICATION	0.9998231136369271	WITHOUT_CLASSIFICATION	1.7688636307291677E-4	IMPLEMENTATION
// ?G  | boolean | True if file1 exists and has a group ownership equal to the caller's group	WITHOUT_CLASSIFICATION	0.9999258438704031	WITHOUT_CLASSIFICATION	7.415612959695781E-5	IMPLEMENTATION
// ?k  | boolean | True if file1 exists and has the sticky bit set	WITHOUT_CLASSIFICATION	0.9998675903479994	WITHOUT_CLASSIFICATION	1.324096520005254E-4	IMPLEMENTATION
// ?M  | Time    | Last modification time for file1	WITHOUT_CLASSIFICATION	0.999807297294856	WITHOUT_CLASSIFICATION	1.9270270514406757E-4	IMPLEMENTATION
// ?o  | boolean | True if file1 exists and is owned by the caller's effective uid	WITHOUT_CLASSIFICATION	0.999916941271885	WITHOUT_CLASSIFICATION	8.305872811503707E-5	IMPLEMENTATION
// ?O  | boolean | True if file1 exists and is owned by the caller's real uid 	WITHOUT_CLASSIFICATION	0.9999149856582212	WITHOUT_CLASSIFICATION	8.501434177872161E-5	IMPLEMENTATION
// ?p  | boolean | True if file1 exists and is a fifo	WITHOUT_CLASSIFICATION	0.999819179300353	WITHOUT_CLASSIFICATION	1.8082069964694015E-4	IMPLEMENTATION
// ?r  | boolean | True if file1 is readable by the effective uid/gid of the caller	WITHOUT_CLASSIFICATION	0.9999034525004091	WITHOUT_CLASSIFICATION	9.654749959086866E-5	IMPLEMENTATION
// ?s  | int/nil | If file1 has nonzero size, return the size, otherwise nil	WITHOUT_CLASSIFICATION	0.9997891284348558	WITHOUT_CLASSIFICATION	2.1087156514422922E-4	IMPLEMENTATION
// ?S  | boolean | True if file1 exists and is a socket	WITHOUT_CLASSIFICATION	0.9998196191676809	WITHOUT_CLASSIFICATION	1.803808323191604E-4	IMPLEMENTATION
// ?u  | boolean | True if file1 has the setuid bit set	WITHOUT_CLASSIFICATION	0.999820311224991	WITHOUT_CLASSIFICATION	1.7968877500885517E-4	IMPLEMENTATION
// ?x  | boolean | True if file1 exists and is executable by the effective uid/gid	WITHOUT_CLASSIFICATION	0.9998746499044635	WITHOUT_CLASSIFICATION	1.253500955364488E-4	IMPLEMENTATION
// ?X  | boolean | True if file1 exists and is executable by the real uid/gid	WITHOUT_CLASSIFICATION	0.9998748184583129	WITHOUT_CLASSIFICATION	1.2518154168702242E-4	IMPLEMENTATION
// ?z  | boolean | True if file1 exists and has a zero length	WITHOUT_CLASSIFICATION	0.9998400265710066	WITHOUT_CLASSIFICATION	1.599734289934505E-4	IMPLEMENTATION
// ?=  | boolean | True if the modification times of file1 and file2 are equal	WITHOUT_CLASSIFICATION	0.9999247303923557	WITHOUT_CLASSIFICATION	7.52696076443097E-5	IMPLEMENTATION
// ?<  | boolean | True if the modification time of file1 is prior to that of file2	WITHOUT_CLASSIFICATION	0.9999261972613629	WITHOUT_CLASSIFICATION	7.380273863713641E-5	IMPLEMENTATION
// ?>  | boolean | True if the modification time of file1 is after that of file2	WITHOUT_CLASSIFICATION	0.9999302975824662	WITHOUT_CLASSIFICATION	6.970241753381373E-5	IMPLEMENTATION
// ?-  | boolean | True if file1 and file2 are identical	WITHOUT_CLASSIFICATION	0.9998007742411802	WITHOUT_CLASSIFICATION	1.992257588198478E-4	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9998355151952543	WITHOUT_CLASSIFICATION	1.644848047458178E-4	IMPLEMENTATION
// Error info is per-thread	WITHOUT_CLASSIFICATION	0.9998270686912413	WITHOUT_CLASSIFICATION	1.7293130875881268E-4	IMPLEMENTATION
// init errorInfo to nil	WITHOUT_CLASSIFICATION	0.9996738017857305	WITHOUT_CLASSIFICATION	3.2619821426946874E-4	IMPLEMENTATION
// if we're already aborting, we can receive no further mail	WITHOUT_CLASSIFICATION	0.9998906800727804	WITHOUT_CLASSIFICATION	1.093199272196903E-4	IMPLEMENTATION
// If this thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9998217075163883	WITHOUT_CLASSIFICATION	1.7829248361168743E-4	IMPLEMENTATION
// new interrupt, to hopefully wake it out of any blocking IO	WITHOUT_CLASSIFICATION	0.9997912196745485	WITHOUT_CLASSIFICATION	2.0878032545136225E-4	IMPLEMENTATION
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999499834497881	WITHOUT_CLASSIFICATION	5.0016550211932266E-5	IMPLEMENTATION
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999499834497881	WITHOUT_CLASSIFICATION	5.0016550211932266E-5	IMPLEMENTATION
// JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999219110197028	WITHOUT_CLASSIFICATION	7.808898029709307E-5	IMPLEMENTATION
// JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999371463365695	WITHOUT_CLASSIFICATION	6.285366343045943E-5	IMPLEMENTATION
// for Thread::start, which does not call the subclass's initialize	WITHOUT_CLASSIFICATION	0.9999643189600983	WITHOUT_CLASSIFICATION	3.568103990160511E-5	IMPLEMENTATION
// JRUBY-3568, inherit threadgroup or use default	WITHOUT_CLASSIFICATION	0.9998312486331521	WITHOUT_CLASSIFICATION	1.6875136684792226E-4	IMPLEMENTATION
// MRI behavior: value given in seconds; converted to Float; less // than or equal to zero returns immediately; returns nil	WITHOUT_CLASSIFICATION	0.9999233687620674	WITHOUT_CLASSIFICATION	7.663123793254822E-5	IMPLEMENTATION
// If the target thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999338359391613	WITHOUT_CLASSIFICATION	6.616406083868406E-5	IMPLEMENTATION
// We need this loop in order to be able to "unblock" the // join call without actually calling interrupt.	WITHOUT_CLASSIFICATION	0.9998369769951483	WITHOUT_CLASSIFICATION	1.6302300485176438E-4	IMPLEMENTATION
// attempt to decriticalize all if we're the critical thread	WITHOUT_CLASSIFICATION	0.9998369457379049	WITHOUT_CLASSIFICATION	1.6305426209511166E-4	IMPLEMENTATION
// not valid for "dead" state	WITHOUT_CLASSIFICATION	0.9989254182491768	WITHOUT_CLASSIFICATION	0.0010745817508231578	IMPLEMENTATION
// If the killee thread is the same as the killer thread, just die	WITHOUT_CLASSIFICATION	0.9999184901496581	WITHOUT_CLASSIFICATION	8.150985034198058E-5	IMPLEMENTATION
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.999951076218854	WITHOUT_CLASSIFICATION	4.8923781146077495E-5	IMPLEMENTATION
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.999951076218854	WITHOUT_CLASSIFICATION	4.8923781146077495E-5	IMPLEMENTATION
// ignore; I don't like doing it, but it seems like we // really just need to make all channels non-blocking by // default and use select when implementing blocking ops, // so if this remains set non-blocking, perhaps it's not // such a big deal...	WITHOUT_CLASSIFICATION	0.9998159684562332	WITHOUT_CLASSIFICATION	1.8403154376672452E-4	IMPLEMENTATION
// can't select, just have to do a blocking call	WITHOUT_CLASSIFICATION	0.9998341672686307	WITHOUT_CLASSIFICATION	1.6583273136933609E-4	IMPLEMENTATION
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9998117226533281	WITHOUT_CLASSIFICATION	1.8827734667195645E-4	IMPLEMENTATION
// Create Constants class	WITHOUT_CLASSIFICATION	0.9998997162121991	WITHOUT_CLASSIFICATION	1.002837878008367E-4	IMPLEMENTATION
// Create constants for open flags	WITHOUT_CLASSIFICATION	0.999930226365168	WITHOUT_CLASSIFICATION	6.977363483197836E-5	IMPLEMENTATION
// Strip off the O_ prefix, so they become File::RDONLY, and so on	WITHOUT_CLASSIFICATION	0.9998312527031679	WITHOUT_CLASSIFICATION	1.687472968321257E-4	IMPLEMENTATION
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9998971574498282	WITHOUT_CLASSIFICATION	1.0284255017180258E-4	IMPLEMENTATION
// File::Constants module is included in IO.	WITHOUT_CLASSIFICATION	0.9998540751638675	WITHOUT_CLASSIFICATION	1.4592483613257233E-4	IMPLEMENTATION
// Make sure any existing lock is released before we try and close the file	WITHOUT_CLASSIFICATION	0.9999673390965318	WITHOUT_CLASSIFICATION	3.2660903468251894E-5	IMPLEMENTATION
// null channel always succeeds for all locking operations	WITHOUT_CLASSIFICATION	0.9999098490721482	WITHOUT_CLASSIFICATION	9.015092785183986E-5	IMPLEMENTATION
// Paths which end in "/" or "\\" must be stripped off.	WITHOUT_CLASSIFICATION	0.9997712496794557	WITHOUT_CLASSIFICATION	2.2875032054414386E-4	IMPLEMENTATION
// Special case for handling ACCMODE, since constantine will generate // an invalid value if it is not defined by the platform.	WITHOUT_CLASSIFICATION	0.9999771452502086	WITHOUT_CLASSIFICATION	2.2854749791332675E-5	IMPLEMENTATION
// Return false here	WITHOUT_CLASSIFICATION	0.9996572431974716	WITHOUT_CLASSIFICATION	3.4275680252828964E-4	IMPLEMENTATION
// Return false here	WITHOUT_CLASSIFICATION	0.9996572431974716	WITHOUT_CLASSIFICATION	3.4275680252828964E-4	IMPLEMENTATION
// We're not actually a real file, so we can't flock	WITHOUT_CLASSIFICATION	0.9996108001200853	WITHOUT_CLASSIFICATION	3.891998799147128E-4	IMPLEMENTATION
// Should we do anything?	WITHOUT_CLASSIFICATION	0.9990932297408103	WITHOUT_CLASSIFICATION	9.067702591895826E-4	IMPLEMENTATION
/* File class methods */	WITHOUT_CLASSIFICATION	0.9997964013004487	WITHOUT_CLASSIFICATION	2.0359869955144592E-4	IMPLEMENTATION
// MRI-compatible basename handling for windows drive letter paths	WITHOUT_CLASSIFICATION	0.9997055652678721	WITHOUT_CLASSIFICATION	2.9443473212786386E-4	IMPLEMENTATION
// strip c: away from relative-pathed name	WITHOUT_CLASSIFICATION	0.9997723671065919	WITHOUT_CLASSIFICATION	2.2763289340817463E-4	IMPLEMENTATION
// C:\ is returned unchanged	WITHOUT_CLASSIFICATION	0.9997860570774187	WITHOUT_CLASSIFICATION	2.139429225811454E-4	IMPLEMENTATION
// -1 no match; 0 it is dot file not extension	WITHOUT_CLASSIFICATION	0.9997888953045766	WITHOUT_CLASSIFICATION	2.1110469542333238E-4	IMPLEMENTATION
// trim trailing slashes	WITHOUT_CLASSIFICATION	0.9996619812361618	WITHOUT_CLASSIFICATION	3.3801876383817434E-4	IMPLEMENTATION
// Dot is not at beginning and not at end of filename. 	WITHOUT_CLASSIFICATION	0.9999167988855335	WITHOUT_CLASSIFICATION	8.320111446649395E-5	IMPLEMENTATION
// Handle ~user paths 	WITHOUT_CLASSIFICATION	0.9997084696317494	WITHOUT_CLASSIFICATION	2.9153036825061145E-4	IMPLEMENTATION
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9998117226533281	WITHOUT_CLASSIFICATION	1.8827734667195645E-4	IMPLEMENTATION
// Include additional path separator // (so that dirname of "C:\file.txt" is  "C:\", not "C:")	WITHOUT_CLASSIFICATION	0.9997110987409722	WITHOUT_CLASSIFICATION	2.8890125902778044E-4	IMPLEMENTATION
// FNFException can be thrown in both cases, when the file // is not found, or when permission is denied.	WITHOUT_CLASSIFICATION	0.9999710059715955	WITHOUT_CLASSIFICATION	2.899402840451944E-5	IMPLEMENTATION
// No directory delimeter.  Rest of string is username	WITHOUT_CLASSIFICATION	0.9999281400811201	WITHOUT_CLASSIFICATION	7.185991887993338E-5	IMPLEMENTATION
// If there's a second argument, it's the path to which the first  // argument is relative.	WITHOUT_CLASSIFICATION	0.9999572757289289	WITHOUT_CLASSIFICATION	4.272427107109128E-5	IMPLEMENTATION
// Handle ~user paths.	WITHOUT_CLASSIFICATION	0.9997084696317494	WITHOUT_CLASSIFICATION	2.9153036825061145E-4	IMPLEMENTATION
// If there's no second argument, simply use the working directory  // of the runtime.	WITHOUT_CLASSIFICATION	0.999966076334656	WITHOUT_CLASSIFICATION	3.392366534399316E-5	IMPLEMENTATION
// Find out which string to check.	WITHOUT_CLASSIFICATION	0.9998574730418585	WITHOUT_CLASSIFICATION	1.4252695814156562E-4	IMPLEMENTATION
// Single '~' as whole path to expand	WITHOUT_CLASSIFICATION	0.999739910845524	WITHOUT_CLASSIFICATION	2.600891544759263E-4	IMPLEMENTATION
// Count number of extra slashes in the beginning of the string.	WITHOUT_CLASSIFICATION	0.9999826600848625	WITHOUT_CLASSIFICATION	1.7339915137471605E-5	IMPLEMENTATION
// '~user/...' as path to expand	WITHOUT_CLASSIFICATION	0.9997258326638919	WITHOUT_CLASSIFICATION	2.741673361080178E-4	IMPLEMENTATION
// '~/...' as path to expand	WITHOUT_CLASSIFICATION	0.9996101861054367	WITHOUT_CLASSIFICATION	3.8981389456330134E-4	IMPLEMENTATION
// Prepare a string with the same number of redundant slashes so that  // we easily can prepend it to the result.	WITHOUT_CLASSIFICATION	0.999977645725758	WITHOUT_CLASSIFICATION	2.2354274242014636E-5	IMPLEMENTATION
// If there are N slashes, then we want N-1.	WITHOUT_CLASSIFICATION	0.9998976702290896	WITHOUT_CLASSIFICATION	1.0232977091040515E-4	IMPLEMENTATION
// no canonical path yet or length is zero, and we have a / followed by a dot...	WITHOUT_CLASSIFICATION	0.9998322186659065	WITHOUT_CLASSIFICATION	1.6778133409336927E-4	IMPLEMENTATION
// we don't have another slash after this, so replace /. with /	WITHOUT_CLASSIFICATION	0.9998952893837048	WITHOUT_CLASSIFICATION	1.04710616295181E-4	IMPLEMENTATION
// we do have another slash; omit both / and . (JRUBY-1606)	WITHOUT_CLASSIFICATION	0.9996531188145407	WITHOUT_CLASSIFICATION	3.468811854593414E-4	IMPLEMENTATION
// do nothing, we should not delete the drive letter	WITHOUT_CLASSIFICATION	0.9999855665238978	WITHOUT_CLASSIFICATION	1.4433476102205405E-5	IMPLEMENTATION
/* rb: check_modifiable */	WITHOUT_CLASSIFICATION	0.9995630557512776	WITHOUT_CLASSIFICATION	4.36944248722363E-4	IMPLEMENTATION
/* rb: readable */	WITHOUT_CLASSIFICATION	0.9995413822369096	WITHOUT_CLASSIFICATION	4.5861776309041977E-4	IMPLEMENTATION
// rename is successful	WITHOUT_CLASSIFICATION	0.9998213938369159	WITHOUT_CLASSIFICATION	1.786061630840092E-4	IMPLEMENTATION
// rename via Java API call wasn't successful, let's try some tricks, similar to MRI 	WITHOUT_CLASSIFICATION	0.9999070529739601	WITHOUT_CLASSIFICATION	9.29470260399069E-5	IMPLEMENTATION
// try to rename one more time	WITHOUT_CLASSIFICATION	0.9997153391979052	WITHOUT_CLASSIFICATION	2.846608020947465E-4	IMPLEMENTATION
// Can we produce IOError which bypasses a close?	WITHOUT_CLASSIFICATION	0.9997213969580988	WITHOUT_CLASSIFICATION	2.786030419011516E-4	IMPLEMENTATION
// Fast path since JNA stat is about 10x slower than this	WITHOUT_CLASSIFICATION	0.9997713680992295	WITHOUT_CLASSIFICATION	2.2863190077050924E-4	IMPLEMENTATION
// RubyContinuation	WITHOUT_CLASSIFICATION	0.9995234221111533	WITHOUT_CLASSIFICATION	4.7657788884675374E-4	IMPLEMENTATION
/*     *  Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq)     *  it doesn't initialize ifNone field     */	WITHOUT_CLASSIFICATION	0.9999931531153974	WITHOUT_CLASSIFICATION	6.8468846026435565E-6	IMPLEMENTATION
// 16 ?	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
// generation count for O(1) clears	WITHOUT_CLASSIFICATION	0.9999016414270205	WITHOUT_CLASSIFICATION	9.83585729795344E-5	IMPLEMENTATION
// size + 1;	WITHOUT_CLASSIFICATION	0.9995223337812871	WITHOUT_CLASSIFICATION	4.776662187129166E-4	IMPLEMENTATION
// suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen	WITHOUT_CLASSIFICATION	0.9996994254607473	WITHOUT_CLASSIFICATION	3.005745392527309E-4	IMPLEMENTATION
// ------------------------------	WITHOUT_CLASSIFICATION	0.9999771061150535	WITHOUT_CLASSIFICATION	2.2893884946513224E-5	IMPLEMENTATION
// ------------------------------	WITHOUT_CLASSIFICATION	0.9999771061150535	WITHOUT_CLASSIFICATION	2.2893884946513224E-5	IMPLEMENTATION
// put implementation	WITHOUT_CLASSIFICATION	0.9755034696214873	WITHOUT_CLASSIFICATION	0.02449653037851268	IMPLEMENTATION
// get implementation	WITHOUT_CLASSIFICATION	0.9827877585076478	WITHOUT_CLASSIFICATION	0.017212241492352228	IMPLEMENTATION
// specialized for value	WITHOUT_CLASSIFICATION	0.9997841250600916	WITHOUT_CLASSIFICATION	2.158749399083854E-4	IMPLEMENTATION
// delete implementation	WITHOUT_CLASSIFICATION	0.9917185108889288	WITHOUT_CLASSIFICATION	0.008281489111071199	IMPLEMENTATION
// n.b. we need to recompute the hash in case the key object was modified	WITHOUT_CLASSIFICATION	0.9998361114488417	WITHOUT_CLASSIFICATION	1.6388855115826538E-4	IMPLEMENTATION
/* ============================     * End of hash internals     * ============================     */	WITHOUT_CLASSIFICATION	0.9998463707998569	WITHOUT_CLASSIFICATION	1.5362920014297458E-4	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================     */	WITHOUT_CLASSIFICATION	0.9998620375883175	WITHOUT_CLASSIFICATION	1.3796241168252896E-4	IMPLEMENTATION
// update the hash value	WITHOUT_CLASSIFICATION	0.9998835092913875	WITHOUT_CLASSIFICATION	1.164907086125055E-4	IMPLEMENTATION
// other hash does not contain key	WITHOUT_CLASSIFICATION	0.9997841526389044	WITHOUT_CLASSIFICATION	2.1584736109564503E-4	IMPLEMENTATION
// rb_yield_values(2,...) equivalent	WITHOUT_CLASSIFICATION	0.9994894392683007	WITHOUT_CLASSIFICATION	5.10560731699409E-4	IMPLEMENTATION
// Satisfy java.util.Set interface (for Java integration)	WITHOUT_CLASSIFICATION	0.999866233393507	WITHOUT_CLASSIFICATION	1.337666064929387E-4	IMPLEMENTATION
// remain where we are	WITHOUT_CLASSIFICATION	0.9997123624558888	WITHOUT_CLASSIFICATION	2.8763754411126026E-4	IMPLEMENTATION
// We use file test since it is faster than a stat; also euid == uid in Java always	WITHOUT_CLASSIFICATION	0.999820005195223	WITHOUT_CLASSIFICATION	1.79994804777077E-4	IMPLEMENTATION
// default: don't retain	WITHOUT_CLASSIFICATION	0.9998000903437727	WITHOUT_CLASSIFICATION	1.9990965622729173E-4	IMPLEMENTATION
// once hasNext has been called, we commit to next() returning // the entry it found, even if it were subsequently deleted	WITHOUT_CLASSIFICATION	0.9999375844187338	WITHOUT_CLASSIFICATION	6.241558126614235E-5	IMPLEMENTATION
// Not exposed by filetest, but so similiar in nature that it is stored here	WITHOUT_CLASSIFICATION	0.9997044689088191	WITHOUT_CLASSIFICATION	2.955310911808099E-4	IMPLEMENTATION
// We do both writable and writable_real through the same method because // in our java process effective and real userid will always be the same.	WITHOUT_CLASSIFICATION	0.9999624163271236	WITHOUT_CLASSIFICATION	3.758367287628888E-5	IMPLEMENTATION
// first try as directory	WITHOUT_CLASSIFICATION	0.9998679975653201	WITHOUT_CLASSIFICATION	1.3200243467991745E-4	IMPLEMENTATION
// next as regular file	WITHOUT_CLASSIFICATION	0.9996128932979274	WITHOUT_CLASSIFICATION	3.8710670207260043E-4	IMPLEMENTATION
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9999023808519352	WITHOUT_CLASSIFICATION	9.761914806484629E-5	IMPLEMENTATION
// NIO-based	WITHOUT_CLASSIFICATION	0.9995209698506394	WITHOUT_CLASSIFICATION	4.7903014936053075E-4	IMPLEMENTATION
// NIO-based	WITHOUT_CLASSIFICATION	0.9995209698506394	WITHOUT_CLASSIFICATION	4.7903014936053075E-4	IMPLEMENTATION
// Stream-based	WITHOUT_CLASSIFICATION	0.9995613547406096	WITHOUT_CLASSIFICATION	4.386452593903764E-4	IMPLEMENTATION
// special constructor that accepts stream, not channel	WITHOUT_CLASSIFICATION	0.9998043088933012	WITHOUT_CLASSIFICATION	1.9569110669890268E-4	IMPLEMENTATION
/*     * We use FILE versus IO to match T_FILE in MRI.     */	WITHOUT_CLASSIFICATION	0.9999320738066875	WITHOUT_CLASSIFICATION	6.792619331251491E-5	IMPLEMENTATION
// Constants for seek	WITHOUT_CLASSIFICATION	0.9997511128276937	WITHOUT_CLASSIFICATION	2.4888717230639375E-4	IMPLEMENTATION
// confirm we're not reopening self's channel	WITHOUT_CLASSIFICATION	0.999817233343	WITHOUT_CLASSIFICATION	1.8276665699993135E-4	IMPLEMENTATION
// check if we're a stdio IO, and ensure we're not badly mutilated	WITHOUT_CLASSIFICATION	0.9998757525867196	WITHOUT_CLASSIFICATION	1.2424741328034863E-4	IMPLEMENTATION
// dup2 new fd into self to preserve fileno and references to it	WITHOUT_CLASSIFICATION	0.9998188108880742	WITHOUT_CLASSIFICATION	1.8118911192563237E-4	IMPLEMENTATION
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9998569775514181	WITHOUT_CLASSIFICATION	1.4302244858193592E-4	IMPLEMENTATION
// re-register the descriptor	WITHOUT_CLASSIFICATION	0.9997880503719271	WITHOUT_CLASSIFICATION	2.1194962807285315E-4	IMPLEMENTATION
// since we're not actually duping the incoming channel into our handler, we need to // copy the original sync behavior from the other handler	WITHOUT_CLASSIFICATION	0.9999277542356747	WITHOUT_CLASSIFICATION	7.224576432528191E-5	IMPLEMENTATION
// re-register	WITHOUT_CLASSIFICATION	0.9995991745482325	WITHOUT_CLASSIFICATION	4.0082545176742485E-4	IMPLEMENTATION
// A potentially previously close IO is being 'reopened'.	WITHOUT_CLASSIFICATION	0.9997869352961353	WITHOUT_CLASSIFICATION	2.130647038648326E-4	IMPLEMENTATION
/*     * Ensure that separator is valid otherwise give it the default paragraph separator.     */	WITHOUT_CLASSIFICATION	0.9999864177383488	WITHOUT_CLASSIFICATION	1.3582261651180426E-5	IMPLEMENTATION
// loop until we see the nth separator char	WITHOUT_CLASSIFICATION	0.9998448974710227	WITHOUT_CLASSIFICATION	1.5510252897730264E-4	IMPLEMENTATION
// if we hit EOF or reached limit then we're done	WITHOUT_CLASSIFICATION	0.9998562407266033	WITHOUT_CLASSIFICATION	1.4375927339664764E-4	IMPLEMENTATION
// this is for a range check, near as I can tell	WITHOUT_CLASSIFICATION	0.9998644166995037	WITHOUT_CLASSIFICATION	1.3558330049639377E-4	IMPLEMENTATION
// IO class methods.	WITHOUT_CLASSIFICATION	0.9997119461283935	WITHOUT_CLASSIFICATION	2.88053871606504E-4	IMPLEMENTATION
// use original modes	WITHOUT_CLASSIFICATION	0.99975882860739	WITHOUT_CLASSIFICATION	2.4117139261009045E-4	IMPLEMENTATION
// See if we already have this descriptor open. // If so then we can mostly share the handler (keep open // file, but possibly change the mode).	WITHOUT_CLASSIFICATION	0.9999779016539164	WITHOUT_CLASSIFICATION	2.209834608355483E-5	IMPLEMENTATION
// redundant, done above as well	WITHOUT_CLASSIFICATION	0.9996965654007225	WITHOUT_CLASSIFICATION	3.0343459927751064E-4	IMPLEMENTATION
// MRI behavior: swallow StandardErorrs	WITHOUT_CLASSIFICATION	0.9997574099906956	WITHOUT_CLASSIFICATION	2.4259000930436578E-4	IMPLEMENTATION
// -1 == don't set permissions	WITHOUT_CLASSIFICATION	0.9996842937221887	WITHOUT_CLASSIFICATION	3.1570627781124267E-4	IMPLEMENTATION
// isRetained=true	WITHOUT_CLASSIFICATION	0.999534699963857	WITHOUT_CLASSIFICATION	4.653000361429804E-4	IMPLEMENTATION
// This appears to be some windows-only mode.  On a java platform this is a no-op	WITHOUT_CLASSIFICATION	0.9999321143533374	WITHOUT_CLASSIFICATION	6.788564666263112E-5	IMPLEMENTATION
// if not sync, we switch to write buffered mode	WITHOUT_CLASSIFICATION	0.9998144002738696	WITHOUT_CLASSIFICATION	1.8559972613039645E-4	IMPLEMENTATION
/*     * Throw bad file descriptor is we can not read on supplied descriptor.     */	WITHOUT_CLASSIFICATION	0.9999356042495108	WITHOUT_CLASSIFICATION	6.439575048930465E-5	IMPLEMENTATION
//Everything written	WITHOUT_CLASSIFICATION	0.9997106710001482	WITHOUT_CLASSIFICATION	2.8932899985180974E-4	IMPLEMENTATION
//            return len - n;	WITHOUT_CLASSIFICATION	0.9999622250134322	WITHOUT_CLASSIFICATION	3.7774986567843256E-5	IMPLEMENTATION
// Claims conversion is done via 'to_s' in docs.	WITHOUT_CLASSIFICATION	0.9998757055368538	WITHOUT_CLASSIFICATION	1.2429446314624954E-4	IMPLEMENTATION
// Of course this isn't particularly useful.	WITHOUT_CLASSIFICATION	0.9996539376976826	WITHOUT_CLASSIFICATION	3.460623023173531E-4	IMPLEMENTATION
// Must be back on first line on rewind.	WITHOUT_CLASSIFICATION	0.9998136322201522	WITHOUT_CLASSIFICATION	1.863677798477587E-4	IMPLEMENTATION
// Register the new descriptor	WITHOUT_CLASSIFICATION	0.9998484203372058	WITHOUT_CLASSIFICATION	1.515796627941948E-4	IMPLEMENTATION
// cleanup, raising errors if any	WITHOUT_CLASSIFICATION	0.9997096757908321	WITHOUT_CLASSIFICATION	2.903242091678145E-4	IMPLEMENTATION
// hmmmm	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
// I believe Ruby bails out with a "bug" if closing fails	WITHOUT_CLASSIFICATION	0.9997336956590788	WITHOUT_CLASSIFICATION	2.6630434092119343E-4	IMPLEMENTATION
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec. // And why the hell does webrick pass this in as a first argument!!!!!	WITHOUT_CLASSIFICATION	0.9999935031589753	WITHOUT_CLASSIFICATION	6.496841024806465E-6	IMPLEMENTATION
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec.	WITHOUT_CLASSIFICATION	0.999987933127406	WITHOUT_CLASSIFICATION	1.2066872594070538E-5	IMPLEMENTATION
// Length to read	WITHOUT_CLASSIFICATION	0.9997424460233736	WITHOUT_CLASSIFICATION	2.5755397662650123E-4	IMPLEMENTATION
// String/Buffer to read it into	WITHOUT_CLASSIFICATION	0.9998560987355042	WITHOUT_CLASSIFICATION	1.4390126449584291E-4	IMPLEMENTATION
// cryptic for the uninitiated...	WITHOUT_CLASSIFICATION	0.9997722860979867	WITHOUT_CLASSIFICATION	2.2771390201328803E-4	IMPLEMENTATION
// select until read is ready	WITHOUT_CLASSIFICATION	0.9998083915196294	WITHOUT_CLASSIFICATION	1.9160848037053132E-4	IMPLEMENTATION
//        ByteList buffer = null;	WITHOUT_CLASSIFICATION	0.9999196981926769	WITHOUT_CLASSIFICATION	8.030180732307574E-5	IMPLEMENTATION
//            buffer = str.getByteList();	WITHOUT_CLASSIFICATION	0.9999201627510009	WITHOUT_CLASSIFICATION	7.983724899905674E-5	IMPLEMENTATION
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9996311123210653	WITHOUT_CLASSIFICATION	3.688876789346946E-4	IMPLEMENTATION
/* rb: writable */	WITHOUT_CLASSIFICATION	0.9995909170686038	WITHOUT_CLASSIFICATION	4.090829313962385E-4	IMPLEMENTATION
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9996311123210653	WITHOUT_CLASSIFICATION	3.688876789346946E-4	IMPLEMENTATION
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999099199435524	WITHOUT_CLASSIFICATION	9.008005644762468E-5	IMPLEMENTATION
// TODO: read into buffer using all the fread logic //        int read = openFile.getMainStream().fread(buffer);	WITHOUT_CLASSIFICATION	0.9727841821953089	WITHOUT_CLASSIFICATION	0.027215817804691022	IMPLEMENTATION
// truncate buffer string to zero, if provided	WITHOUT_CLASSIFICATION	0.9998970995274012	WITHOUT_CLASSIFICATION	1.0290047259870654E-4	IMPLEMENTATION
// TODO: READ_CHECK from MRI	WITHOUT_CLASSIFICATION	0.7135417939310434	WITHOUT_CLASSIFICATION	0.2864582060689565	IMPLEMENTATION
/* class methods for IO */	WITHOUT_CLASSIFICATION	0.9998041105800786	WITHOUT_CLASSIFICATION	1.958894199213735E-4	IMPLEMENTATION
// save blocking state	WITHOUT_CLASSIFICATION	0.9997064917881585	WITHOUT_CLASSIFICATION	2.935082118414404E-4	IMPLEMENTATION
// write	WITHOUT_CLASSIFICATION	0.996599469611074	WITHOUT_CLASSIFICATION	0.003400530388925919	IMPLEMENTATION
// Java's select doesn't do anything about this, so we leave it be.	WITHOUT_CLASSIFICATION	0.9999345240505091	WITHOUT_CLASSIFICATION	6.547594949086883E-5	IMPLEMENTATION
// make all sockets blocking as configured again // close unregisters all channels, so we can safely reset blocking modes	WITHOUT_CLASSIFICATION	0.9998261129608121	WITHOUT_CLASSIFICATION	1.738870391878461E-4	IMPLEMENTATION
// FIXME: process options	WITHOUT_CLASSIFICATION	0.9997007290578902	WITHOUT_CLASSIFICATION	2.992709421098117E-4	IMPLEMENTATION
// Enebo: annotation processing forced me to do pangea method here...	WITHOUT_CLASSIFICATION	0.9997502921439702	WITHOUT_CLASSIFICATION	2.4970785602991666E-4	IMPLEMENTATION
// NIO based pipe	WITHOUT_CLASSIFICATION	0.9995243002077822	WITHOUT_CLASSIFICATION	4.7569979221779283E-4	IMPLEMENTATION
// not using remove(Object) here to avoid the equals() call	WITHOUT_CLASSIFICATION	0.999365249586454	WITHOUT_CLASSIFICATION	6.347504135460058E-4	IMPLEMENTATION
// raise will also wake the thread from selection	WITHOUT_CLASSIFICATION	0.9999050643090202	WITHOUT_CLASSIFICATION	9.493569097984636E-5	IMPLEMENTATION
/* may need to handle ENC_CODERANGE_BROKEN */	WITHOUT_CLASSIFICATION	0.9994507704698907	WITHOUT_CLASSIFICATION	5.492295301091536E-4	IMPLEMENTATION
// TODO: rb_usascii_str_new2	WITHOUT_CLASSIFICATION	0.8559149139788799	WITHOUT_CLASSIFICATION	0.14408508602112002	IMPLEMENTATION
// If we know what method was being called, strip everything // before the call. This hides the JRuby and reflection internals.	WITHOUT_CLASSIFICATION	0.9998995767410481	WITHOUT_CLASSIFICATION	1.0042325895182369E-4	IMPLEMENTATION
// The class of this object	WITHOUT_CLASSIFICATION	0.9999293839683365	WITHOUT_CLASSIFICATION	7.061603166351986E-5	IMPLEMENTATION
// zeroed by jvm	WITHOUT_CLASSIFICATION	0.9995255614226954	WITHOUT_CLASSIFICATION	4.744385773045877E-4	IMPLEMENTATION
//objectClass.defineAnnotatedMethods(BasicObjectMethods.class);	WITHOUT_CLASSIFICATION	0.9997919768431893	WITHOUT_CLASSIFICATION	2.0802315681066173E-4	IMPLEMENTATION
// JRUBY-4113: callers should not call setTaint on immediate objects	WITHOUT_CLASSIFICATION	0.9998305092421303	WITHOUT_CLASSIFICATION	1.6949075786964484E-4	IMPLEMENTATION
// rb_class_boot	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9995793788471994	WITHOUT_CLASSIFICATION	4.2062115280061324E-4	IMPLEMENTATION
// 1.9 rb_check_to_integer	WITHOUT_CLASSIFICATION	0.9995846006622479	WITHOUT_CLASSIFICATION	4.153993377521035E-4	IMPLEMENTATION
// for interface impls	WITHOUT_CLASSIFICATION	0.999904282989552	WITHOUT_CLASSIFICATION	9.571701044801755E-5	IMPLEMENTATION
// We're cloning ourselves, so we know the result should be a RubyObject	WITHOUT_CLASSIFICATION	0.999688087502549	WITHOUT_CLASSIFICATION	3.119124974509092E-4	IMPLEMENTATION
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999291869578698	WITHOUT_CLASSIFICATION	7.081304213015153E-5	IMPLEMENTATION
// can't use -v and stdin	WITHOUT_CLASSIFICATION	0.9996865724906178	WITHOUT_CLASSIFICATION	3.1342750938229483E-4	IMPLEMENTATION
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9998070583497177	WITHOUT_CLASSIFICATION	1.929416502822692E-4	IMPLEMENTATION
// Equivalent of Data_Get_Struct // This will first check that the object in question is actually a T_DATA equivalent.	WITHOUT_CLASSIFICATION	0.9999288388550275	WITHOUT_CLASSIFICATION	7.116114497259807E-5	IMPLEMENTATION
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9997294681574643	WITHOUT_CLASSIFICATION	2.7053184253563643E-4	IMPLEMENTATION
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9997280603385535	WITHOUT_CLASSIFICATION	2.7193966144642895E-4	IMPLEMENTATION
// // INSTANCE VARIABLE API METHODS //	WITHOUT_CLASSIFICATION	0.9997278512906937	WITHOUT_CLASSIFICATION	2.7214870930617277E-4	IMPLEMENTATION
// Struct methods	WITHOUT_CLASSIFICATION	0.9996566562217897	WITHOUT_CLASSIFICATION	3.4334377821033544E-4	IMPLEMENTATION
//runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);	WITHOUT_CLASSIFICATION	0.9997819685728557	WITHOUT_CLASSIFICATION	2.180314271443305E-4	IMPLEMENTATION
// define access methods.	WITHOUT_CLASSIFICATION	0.9996741652662885	WITHOUT_CLASSIFICATION	3.258347337115489E-4	IMPLEMENTATION
// if we are storing a name as well, index is one too high for values	WITHOUT_CLASSIFICATION	0.9999137205921571	WITHOUT_CLASSIFICATION	8.627940784291185E-5	IMPLEMENTATION
// Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9998607019015907	WITHOUT_CLASSIFICATION	1.3929809840933439E-4	IMPLEMENTATION
// For binding purposes on the newly created struct types	WITHOUT_CLASSIFICATION	0.999861357307139	WITHOUT_CLASSIFICATION	1.3864269286107973E-4	IMPLEMENTATION
// OBJ_INFECT        	WITHOUT_CLASSIFICATION	0.99969118893712	WITHOUT_CLASSIFICATION	3.088110628800629E-4	IMPLEMENTATION
// These call* assume ThreadContext = receiver.getRuntime().getCurrentContext()	WITHOUT_CLASSIFICATION	0.9998045069306415	WITHOUT_CLASSIFICATION	1.9549306935854777E-4	IMPLEMENTATION
// Execute iterateMethod again.	WITHOUT_CLASSIFICATION	0.9997819471072596	WITHOUT_CLASSIFICATION	2.1805289274039001E-4	IMPLEMENTATION
/*     * @param nv number of times to cycle or -1 to cycle indefinitely     */	WITHOUT_CLASSIFICATION	0.9999492576590051	WITHOUT_CLASSIFICATION	5.0742340994886614E-5	IMPLEMENTATION
// Atomic ?	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
// Atomic ?	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
// MUST NOT be used across threads	WITHOUT_CLASSIFICATION	0.9997501220072571	WITHOUT_CLASSIFICATION	2.4987799274289567E-4	IMPLEMENTATION
// superClass may be null.	WITHOUT_CLASSIFICATION	0.9996497418820949	WITHOUT_CLASSIFICATION	3.5025811790517303E-4	IMPLEMENTATION
// Containing class...The parent of Object is null. Object should always be last in chain.	WITHOUT_CLASSIFICATION	0.9998488204745472	WITHOUT_CLASSIFICATION	1.511795254529039E-4	IMPLEMENTATION
// ClassId is the name of the class/module sans where it is located. // If it is null, then it an anonymous class.	WITHOUT_CLASSIFICATION	0.9999833747566208	WITHOUT_CLASSIFICATION	1.6625243379138312E-5	IMPLEMENTATION
// ClassProviders return Java class/module (in #defineOrGetClassUnder and // #defineOrGetModuleUnder) when class/module is opened using colon syntax. 	WITHOUT_CLASSIFICATION	0.9999453629032475	WITHOUT_CLASSIFICATION	5.46370967524851E-5	IMPLEMENTATION
// update superclass reference	WITHOUT_CLASSIFICATION	0.9998841984844498	WITHOUT_CLASSIFICATION	1.1580151555030505E-4	IMPLEMENTATION
// Make sure the module we include does not already exist	WITHOUT_CLASSIFICATION	0.9999845164053723	WITHOUT_CLASSIFICATION	1.5483594627625978E-5	IMPLEMENTATION
// MRI checks all types first:	WITHOUT_CLASSIFICATION	0.9996031549746595	WITHOUT_CLASSIFICATION	3.9684502534046123E-4	IMPLEMENTATION
// we need full traces, use default (slow) populator	WITHOUT_CLASSIFICATION	0.9998673293257846	WITHOUT_CLASSIFICATION	1.326706742154738E-4	IMPLEMENTATION
// module/singleton methods are all defined public	WITHOUT_CLASSIFICATION	0.9999126448345743	WITHOUT_CLASSIFICATION	8.735516542565041E-5	IMPLEMENTATION
// See if module is in chain...Cannot match against itself so start at superClass.	WITHOUT_CLASSIFICATION	0.9998595490455224	WITHOUT_CLASSIFICATION	1.40450954477489E-4	IMPLEMENTATION
// We can safely reference methods here instead of doing getMethods() since if we // are adding we are not using a IncludedModuleWrapper.	WITHOUT_CLASSIFICATION	0.9999636292418321	WITHOUT_CLASSIFICATION	3.637075816799413E-5	IMPLEMENTATION
// we grab serial number first; the worst that will happen is we cache a later // update with an earlier serial number, which would just flush anyway	WITHOUT_CLASSIFICATION	0.9999237277713567	WITHOUT_CLASSIFICATION	7.627222864325524E-5	IMPLEMENTATION
// update all hierarchies into which this module has been included	WITHOUT_CLASSIFICATION	0.9999210558086817	WITHOUT_CLASSIFICATION	7.894419131828163E-5	IMPLEMENTATION
// This method is intended only for defining new classes in Ruby code, // so it uses the allocator of the specified superclass or default to // the Object allocator. It should NOT be used to define classes that require a native allocator.	WITHOUT_CLASSIFICATION	0.9999817374690921	WITHOUT_CLASSIFICATION	1.8262530907892494E-5	IMPLEMENTATION
// need to skip IncludedModuleWrappers	WITHOUT_CLASSIFICATION	0.9996229766037517	WITHOUT_CLASSIFICATION	3.7702339624837747E-4	IMPLEMENTATION
// superClazz = null;	WITHOUT_CLASSIFICATION	0.999668981037056	WITHOUT_CLASSIFICATION	3.3101896294397844E-4	IMPLEMENTATION
// reopen a java class	WITHOUT_CLASSIFICATION	0.9997141427728686	WITHOUT_CLASSIFICATION	2.8585722713142216E-4	IMPLEMENTATION
// This method is intended only for defining new modules in Ruby code	WITHOUT_CLASSIFICATION	0.999602478251214	WITHOUT_CLASSIFICATION	3.9752174878600284E-4	IMPLEMENTATION
// reopen a java module	WITHOUT_CLASSIFICATION	0.9996197976435434	WITHOUT_CLASSIFICATION	3.802023564565956E-4	IMPLEMENTATION
//FIXME warning	WITHOUT_CLASSIFICATION	0.9995450863900767	WITHOUT_CLASSIFICATION	4.549136099232348E-4	IMPLEMENTATION
// FIXME warning	WITHOUT_CLASSIFICATION	0.9995450863900767	WITHOUT_CLASSIFICATION	4.549136099232348E-4	IMPLEMENTATION
// a normal block passed to define_method changes to do arity checking; make it a lambda	WITHOUT_CLASSIFICATION	0.9997510832549517	WITHOUT_CLASSIFICATION	2.4891674504842374E-4	IMPLEMENTATION
// for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope	WITHOUT_CLASSIFICATION	0.9998691471814783	WITHOUT_CLASSIFICATION	1.308528185215309E-4	IMPLEMENTATION
// just using required is broken...but no more broken than before zsuper refactoring	WITHOUT_CLASSIFICATION	0.9998437575643766	WITHOUT_CLASSIFICATION	1.5624243562346396E-4	IMPLEMENTATION
// class and module bodies default to public, so make the block's visibility public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999730221225441	WITHOUT_CLASSIFICATION	2.6977877455930143E-5	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.999981108073899	WITHOUT_CLASSIFICATION	1.8891926101052907E-5	IMPLEMENTATION
// MRI error message says Class, even though Module is ok 	WITHOUT_CLASSIFICATION	0.9998692334451477	WITHOUT_CLASSIFICATION	1.3076655485232775E-4	IMPLEMENTATION
// scan class hierarchy for module	WITHOUT_CLASSIFICATION	0.9998514108327676	WITHOUT_CLASSIFICATION	1.4858916723246748E-4	IMPLEMENTATION
/* Module class methods */	WITHOUT_CLASSIFICATION	0.9997898566726348	WITHOUT_CLASSIFICATION	2.1014332736524E-4	IMPLEMENTATION
// Note: we change current frames visibility here because the methods which call // this method are all "fast" (e.g. they do not created their own frame).	WITHOUT_CLASSIFICATION	0.9999449575067857	WITHOUT_CLASSIFICATION	5.5042493214346256E-5	IMPLEMENTATION
// next in hierarchy is an included version of the module we're attempting, // so we skip including it	WITHOUT_CLASSIFICATION	0.9999620331712691	WITHOUT_CLASSIFICATION	3.796682873088648E-5	IMPLEMENTATION
// if we haven't encountered a real superclass, use the found module as the new inclusion point	WITHOUT_CLASSIFICATION	0.9999483201400977	WITHOUT_CLASSIFICATION	5.167985990221918E-5	IMPLEMENTATION
// build a list of all modules to consider for inclusion	WITHOUT_CLASSIFICATION	0.9997840178962931	WITHOUT_CLASSIFICATION	2.1598210370680032E-4	IMPLEMENTATION
// if the insertion point is a class, update subclass lists	WITHOUT_CLASSIFICATION	0.9999592865884634	WITHOUT_CLASSIFICATION	4.071341153664753E-5	IMPLEMENTATION
// if there's a non-null superclass, we're including into a normal class hierarchy; // update subclass relationships to avoid stale parent/child relationships	WITHOUT_CLASSIFICATION	0.999982949342464	WITHOUT_CLASSIFICATION	1.7050657536006987E-5	IMPLEMENTATION
// ////////////////// CLASS VARIABLE RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999944510016353	WITHOUT_CLASSIFICATION	5.548998364634172E-6	IMPLEMENTATION
// ////////////////// CONSTANT RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999945016309341	WITHOUT_CLASSIFICATION	5.498369065995773E-6	IMPLEMENTATION
// Note: includes part of fix for JRUBY-1339	WITHOUT_CLASSIFICATION	0.9997798575578787	WITHOUT_CLASSIFICATION	2.2014244212116796E-4	IMPLEMENTATION
// ////////////////// CLASS VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999944510016353	WITHOUT_CLASSIFICATION	5.548998364634172E-6	IMPLEMENTATION
// Wrong Parameter ?	WITHOUT_CLASSIFICATION	0.9996726964550949	WITHOUT_CLASSIFICATION	3.273035449050501E-4	IMPLEMENTATION
// not actually called anywhere (all known uses call the fast version)	WITHOUT_CLASSIFICATION	0.9993170195640669	WITHOUT_CLASSIFICATION	6.829804359330104E-4	IMPLEMENTATION
// Not that is loaded loop around to resolve it next pass	WITHOUT_CLASSIFICATION	0.9995220043017183	WITHOUT_CLASSIFICATION	4.779956982816737E-4	IMPLEMENTATION
// if adding a module under a constant name, set that module's basename to the constant name	WITHOUT_CLASSIFICATION	0.9999220322979957	WITHOUT_CLASSIFICATION	7.796770200421335E-5	IMPLEMENTATION
// Fix for JRUBY-1339 - search hierarchy for constant	WITHOUT_CLASSIFICATION	0.9998254023653063	WITHOUT_CLASSIFICATION	1.7459763469378377E-4	IMPLEMENTATION
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999638244649178	WITHOUT_CLASSIFICATION	3.617553508209515E-5	IMPLEMENTATION
// removes and returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999579872652464	WITHOUT_CLASSIFICATION	4.2012734753584605E-5	IMPLEMENTATION
// we can't rename a file while it's open in windows	WITHOUT_CLASSIFICATION	0.999815529614067	WITHOUT_CLASSIFICATION	1.8447038593302168E-4	IMPLEMENTATION
//reopen	WITHOUT_CLASSIFICATION	0.9965093068205291	WITHOUT_CLASSIFICATION	0.0034906931794710275	IMPLEMENTATION
// ARGF methods	WITHOUT_CLASSIFICATION	0.9996175815405897	WITHOUT_CLASSIFICATION	3.8241845941043546E-4	IMPLEMENTATION
//         data.currentFile.callMethod(context, "lineno=", line);	WITHOUT_CLASSIFICATION	0.9999197940195167	WITHOUT_CLASSIFICATION	8.020598048327726E-5	IMPLEMENTATION
// one optional, one required args	WITHOUT_CLASSIFICATION	0.9997599740765438	WITHOUT_CLASSIFICATION	2.4002592345621738E-4	IMPLEMENTATION
// one optional and no required args	WITHOUT_CLASSIFICATION	0.9997652123481818	WITHOUT_CLASSIFICATION	2.3478765181816433E-4	IMPLEMENTATION
// try to get errno value out of the class	WITHOUT_CLASSIFICATION	0.9999405312876679	WITHOUT_CLASSIFICATION	5.946871233202812E-5	IMPLEMENTATION
// we got a valid errno value	WITHOUT_CLASSIFICATION	0.999791743129081	WITHOUT_CLASSIFICATION	2.0825687091906102E-4	IMPLEMENTATION
// Ensure we're not running on GCJ, since it's not supported and leads to weird errors	WITHOUT_CLASSIFICATION	0.9998459165651088	WITHOUT_CLASSIFICATION	1.5408343489124762E-4	IMPLEMENTATION
// print out as a nice Ruby backtrace	WITHOUT_CLASSIFICATION	0.9997756045129375	WITHOUT_CLASSIFICATION	2.2439548706253875E-4	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9998313243895081	WITHOUT_CLASSIFICATION	1.6867561049204984E-4	IMPLEMENTATION
// set thread context JRuby classloader here, for the main thread	WITHOUT_CLASSIFICATION	0.9998693970463841	WITHOUT_CLASSIFICATION	1.3060295361581637E-4	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9997161950814952	WITHOUT_CLASSIFICATION	2.8380491850475177E-4	IMPLEMENTATION
// no script to run, return success below	WITHOUT_CLASSIFICATION	0.9999286192201946	WITHOUT_CLASSIFICATION	7.138077980537324E-5	IMPLEMENTATION
// Skip /usr/bin/env if it's first	WITHOUT_CLASSIFICATION	0.999772280921893	WITHOUT_CLASSIFICATION	2.2771907810704878E-4	IMPLEMENTATION
// Skip any assignments if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9997889707320847	WITHOUT_CLASSIFICATION	2.1102926791535394E-4	IMPLEMENTATION
// Skip any commandline args if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9998128513664204	WITHOUT_CLASSIFICATION	1.871486335796768E-4	IMPLEMENTATION
// ignore error	WITHOUT_CLASSIFICATION	0.9999197969284899	WITHOUT_CLASSIFICATION	8.020307151007151E-5	IMPLEMENTATION
// ////////////////// COMMON CONSTANT / CVAR METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999944988362773	WITHOUT_CLASSIFICATION	5.501163722649946E-6	IMPLEMENTATION
// ////////////////// INTERNAL MODULE VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999944700056309	WITHOUT_CLASSIFICATION	5.529994369025665E-6	IMPLEMENTATION
// ////////////////// LOW-LEVEL CONSTANT INTERFACE //////////////// // // fetch/store/list constants for this module //	WITHOUT_CLASSIFICATION	0.9999989848698511	WITHOUT_CLASSIFICATION	1.0151301489868585E-6	IMPLEMENTATION
// odd	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
// JRubyClient	WITHOUT_CLASSIFICATION	0.9995208415107149	WITHOUT_CLASSIFICATION	4.7915848928516467E-4	IMPLEMENTATION
/*     * x = mantissa * 2 ** exponent     *     * Where mantissa is in the range of [.5, 1)     *     */	WITHOUT_CLASSIFICATION	0.9999339326816685	WITHOUT_CLASSIFICATION	6.606731833150603E-5	IMPLEMENTATION
// Make mantissa same sign so we only have one code path.	WITHOUT_CLASSIFICATION	0.9998502355564475	WITHOUT_CLASSIFICATION	1.497644435525548E-4	IMPLEMENTATION
// Increase value to hit lower range.	WITHOUT_CLASSIFICATION	0.9998233755877649	WITHOUT_CLASSIFICATION	1.7662441223499287E-4	IMPLEMENTATION
/*     * r = x * 2 ** y     */	WITHOUT_CLASSIFICATION	0.9998982256019103	WITHOUT_CLASSIFICATION	1.0177439808966619E-4	IMPLEMENTATION
/*  0! */	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
/*  1! */	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
/*  2! */	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
/*  3! */	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
/*  4! */	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
/*  5! */	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
/*  6! */	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
/*  7! */	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
/*  8! */	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
/*  9! */	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
/* 11! */	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
/* 12! */	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
/* 13! */	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
/* 15! */	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
/* 16! */	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
/* 17! */	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
/* 19! */	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
/* 20! */	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
/* 21! */	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
// Static constants	WITHOUT_CLASSIFICATION	0.9997420834454509	WITHOUT_CLASSIFICATION	2.579165545491506E-4	IMPLEMENTATION
// Clean-up string representation so that it could be understood // by Java's BigDecimal. Not terribly efficient for now. // 1. MRI allows d and D as exponent separators	WITHOUT_CLASSIFICATION	0.999565517763662	WITHOUT_CLASSIFICATION	4.3448223633802606E-4	IMPLEMENTATION
// 2. MRI allows underscores anywhere	WITHOUT_CLASSIFICATION	0.9997540768877862	WITHOUT_CLASSIFICATION	2.45923112213897E-4	IMPLEMENTATION
// 3. MRI ignores the trailing junk	WITHOUT_CLASSIFICATION	0.9998792795280944	WITHOUT_CLASSIFICATION	1.2072047190553473E-4	IMPLEMENTATION
// MRI behavior: -0 and +0 are two different things	WITHOUT_CLASSIFICATION	0.9997744674176163	WITHOUT_CLASSIFICATION	2.2553258238364253E-4	IMPLEMENTATION
// Java and MRI definitions of modulo are different.	WITHOUT_CLASSIFICATION	0.9997342249641565	WITHOUT_CLASSIFICATION	2.657750358434973E-4	IMPLEMENTATION
// Java and MRI definitions of remainder are the same.	WITHOUT_CLASSIFICATION	0.9998581884035643	WITHOUT_CLASSIFICATION	1.418115964356447E-4	IMPLEMENTATION
// Note: MRI has a very non-trivial way of calculating the precision, // so we use very simple approximation here:	WITHOUT_CLASSIFICATION	0.9998586790765801	WITHOUT_CLASSIFICATION	1.41320923420001E-4	IMPLEMENTATION
// Iteration variables, for the square root x and the reciprocal v // initial x:  x0 ~ sqrt() // initial v:  v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999448543399633	WITHOUT_CLASSIFICATION	5.5145660036695595E-5	IMPLEMENTATION
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9997426593550542	WITHOUT_CLASSIFICATION	2.5734064494573343E-4	IMPLEMENTATION
// TODO: why this: .setResult();	WITHOUT_CLASSIFICATION	0.9024835811285836	WITHOUT_CLASSIFICATION	0.09751641887141636	IMPLEMENTATION
// integer division	WITHOUT_CLASSIFICATION	0.9995540597327919	WITHOUT_CLASSIFICATION	4.4594026720810664E-4	IMPLEMENTATION
// MRI behavior: "If digits is 0, the result is the same as the / operator."	WITHOUT_CLASSIFICATION	0.9999113372974388	WITHOUT_CLASSIFICATION	8.866270256124403E-5	IMPLEMENTATION
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9996055681446686	WITHOUT_CLASSIFICATION	3.944318553314753E-4	IMPLEMENTATION
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9996055681446686	WITHOUT_CLASSIFICATION	3.944318553314753E-4	IMPLEMENTATION
// Java and MRI definitions of divmod are different.        	WITHOUT_CLASSIFICATION	0.9998352791813052	WITHOUT_CLASSIFICATION	1.6472081869481318E-4	IMPLEMENTATION
// JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it	WITHOUT_CLASSIFICATION	0.9999254871686338	WITHOUT_CLASSIFICATION	7.451283136615911E-5	IMPLEMENTATION
// shift the decimal point just to the right of the digit to be rounded to (divide by 10**(abs(scale))) // -1 -> 10's digit, -2 -> 100's digit, etc.	WITHOUT_CLASSIFICATION	0.9999573704352244	WITHOUT_CLASSIFICATION	4.2629564775686736E-5	IMPLEMENTATION
// ...round to that digit	WITHOUT_CLASSIFICATION	0.9997230997436763	WITHOUT_CLASSIFICATION	2.7690025632359235E-4	IMPLEMENTATION
// ...and shift the result back to the left (multiply by 10**(abs(scale)))	WITHOUT_CLASSIFICATION	0.9999389540269531	WITHOUT_CLASSIFICATION	6.104597304691154E-5	IMPLEMENTATION
//this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are	WITHOUT_CLASSIFICATION	0.9998727279445121	WITHOUT_CLASSIFICATION	1.2727205548792385E-4	IMPLEMENTATION
// sign	WITHOUT_CLASSIFICATION	0.9966168232823192	WITHOUT_CLASSIFICATION	0.003383176717680904	IMPLEMENTATION
// significant digits and exponent	WITHOUT_CLASSIFICATION	0.9997577843533071	WITHOUT_CLASSIFICATION	2.4221564669294198E-4	IMPLEMENTATION
// normalize the value	WITHOUT_CLASSIFICATION	0.9997870873765338	WITHOUT_CLASSIFICATION	2.1291262346628898E-4	IMPLEMENTATION
// base	WITHOUT_CLASSIFICATION	0.9965542646938855	WITHOUT_CLASSIFICATION	0.003445735306114389	IMPLEMENTATION
// NOTE: MRI's sqrt precision is limited by 100, // but we allow values more than 100.	WITHOUT_CLASSIFICATION	0.9998646898280882	WITHOUT_CLASSIFICATION	1.3531017191186105E-4	IMPLEMENTATION
// just in case, add a bit of extra precision	WITHOUT_CLASSIFICATION	0.9998916777062895	WITHOUT_CLASSIFICATION	1.0832229371052679E-4	IMPLEMENTATION
// eh?!	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
// Note: #fix has only no-arg form, but truncate allows optional parameter.	WITHOUT_CLASSIFICATION	0.9998618144805489	WITHOUT_CLASSIFICATION	1.381855194511769E-4	IMPLEMENTATION
// General number and precision checking	WITHOUT_CLASSIFICATION	0.9998416011368114	WITHOUT_CLASSIFICATION	1.5839886318855194E-4	IMPLEMENTATION
// the requested precision	WITHOUT_CLASSIFICATION	0.9998124998282756	WITHOUT_CLASSIFICATION	1.875001717245469E-4	IMPLEMENTATION
// Proc class	WITHOUT_CLASSIFICATION	0.9996565003865229	WITHOUT_CLASSIFICATION	3.434996134771478E-4	IMPLEMENTATION
//.append("  -x[directory]   strip off text before #!ruby line and perhaps cd to directory\n")	WITHOUT_CLASSIFICATION	0.9998872066833996	WITHOUT_CLASSIFICATION	1.1279331660043222E-4	IMPLEMENTATION
// even shift.. // ..floors to 62 or 63 bit BigInteger	WITHOUT_CLASSIFICATION	0.9996998213965135	WITHOUT_CLASSIFICATION	3.0017860348644106E-4	IMPLEMENTATION
// 5 -> 2, -5 -> -3 need half a scale more..	WITHOUT_CLASSIFICATION	0.9996808293847493	WITHOUT_CLASSIFICATION	3.191706152506114E-4	IMPLEMENTATION
// ..where 100 -> 10 shifts the scale	WITHOUT_CLASSIFICATION	0.9997764394358621	WITHOUT_CLASSIFICATION	2.2356056413790038E-4	IMPLEMENTATION
// Initial x - use double root - multiply by halfBack to unshift - set new scale	WITHOUT_CLASSIFICATION	0.9998684604168778	WITHOUT_CLASSIFICATION	1.315395831222124E-4	IMPLEMENTATION
// x0 ~ sqrt()	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
// for prec 15 root x0 must surely be OK // return small prec roots without iterations	WITHOUT_CLASSIFICATION	0.9999380060847762	WITHOUT_CLASSIFICATION	6.19939152237558E-5	IMPLEMENTATION
// Initial v - the reciprocal // v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9998095702164265	WITHOUT_CLASSIFICATION	1.9042978357361616E-4	IMPLEMENTATION
// Collect iteration precisions beforehand	WITHOUT_CLASSIFICATION	0.9998925870709118	WITHOUT_CLASSIFICATION	1.0741292908829974E-4	IMPLEMENTATION
// assume nInit = 16 <= prec	WITHOUT_CLASSIFICATION	0.9996517117480498	WITHOUT_CLASSIFICATION	3.482882519501126E-4	IMPLEMENTATION
// The loop of "Square Root by Coupled Newton Iteration"	WITHOUT_CLASSIFICATION	0.999881663632313	WITHOUT_CLASSIFICATION	1.1833636768701476E-4	IMPLEMENTATION
// Increase precision - next iteration supplies n exact digits	WITHOUT_CLASSIFICATION	0.9999100742296434	WITHOUT_CLASSIFICATION	8.99257703566873E-5	IMPLEMENTATION
// Next x                                        // e = d - x^2	WITHOUT_CLASSIFICATION	0.9998083413584113	WITHOUT_CLASSIFICATION	1.9165864158851592E-4	IMPLEMENTATION
// x += e*v     ~ sqrt()	WITHOUT_CLASSIFICATION	0.9995793788471994	WITHOUT_CLASSIFICATION	4.2062115280061324E-4	IMPLEMENTATION
// root x is ready!	WITHOUT_CLASSIFICATION	0.9996724107213436	WITHOUT_CLASSIFICATION	3.2758927865646274E-4	IMPLEMENTATION
// Next v                                        // g = 1 - 2*x*v	WITHOUT_CLASSIFICATION	0.999808271981361	WITHOUT_CLASSIFICATION	1.9172801863894432E-4	IMPLEMENTATION
// v += g*v     ~ 1/2/sqrt()	WITHOUT_CLASSIFICATION	0.9995793788471994	WITHOUT_CLASSIFICATION	4.2062115280061324E-4	IMPLEMENTATION
// RubyBigdecimal	WITHOUT_CLASSIFICATION	0.9995294483221634	WITHOUT_CLASSIFICATION	4.705516778365814E-4	IMPLEMENTATION
// c: bind_eval	WITHOUT_CLASSIFICATION	0.9995201910786139	WITHOUT_CLASSIFICATION	4.7980892138607944E-4	IMPLEMENTATION
/*  ================     *  Module Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9998472323353256	WITHOUT_CLASSIFICATION	1.527676646743579E-4	IMPLEMENTATION
// from CommandlineParser	WITHOUT_CLASSIFICATION	0.9996717062102499	WITHOUT_CLASSIFICATION	3.2829378975006207E-4	IMPLEMENTATION
// This property is a Boolean, to allow three values, so it can match MRI's nil, false and true	WITHOUT_CLASSIFICATION	0.9999329032771616	WITHOUT_CLASSIFICATION	6.709672283847863E-5	IMPLEMENTATION
// default ClassCache using jitMax as a soft upper bound	WITHOUT_CLASSIFICATION	0.9999138982166961	WITHOUT_CLASSIFICATION	8.610178330393886E-5	IMPLEMENTATION
// Until we get a little more solid on 1.9 support we will only run interpreted mode	WITHOUT_CLASSIFICATION	0.9995021483998153	WITHOUT_CLASSIFICATION	4.978516001847322E-4	IMPLEMENTATION
// Setting the loader needs to reset the class cache	WITHOUT_CLASSIFICATION	0.9999095025487384	WITHOUT_CLASSIFICATION	9.049745126157986E-5	IMPLEMENTATION
// try the normal property first	WITHOUT_CLASSIFICATION	0.9998841102617865	WITHOUT_CLASSIFICATION	1.1588973821349238E-4	IMPLEMENTATION
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9998177381324324	WITHOUT_CLASSIFICATION	1.8226186756760998E-4	IMPLEMENTATION
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9998177381324324	WITHOUT_CLASSIFICATION	1.8226186756760998E-4	IMPLEMENTATION
// try loading from classloader resources	WITHOUT_CLASSIFICATION	0.9998915753952498	WITHOUT_CLASSIFICATION	1.0842460475021978E-4	IMPLEMENTATION
// otherwise fall back on system temp location	WITHOUT_CLASSIFICATION	0.9996820639106236	WITHOUT_CLASSIFICATION	3.1793608937631803E-4	IMPLEMENTATION
// We require the home directory to be absolute	WITHOUT_CLASSIFICATION	0.9999452666310679	WITHOUT_CLASSIFICATION	5.473336893222999E-5	IMPLEMENTATION
//consume the file name	WITHOUT_CLASSIFICATION	0.9998183562603098	WITHOUT_CLASSIFICATION	1.8164373969025932E-4	IMPLEMENTATION
// Specify something that can't separate	WITHOUT_CLASSIFICATION	0.999814106069312	WITHOUT_CLASSIFICATION	1.8589393068816235E-4	IMPLEMENTATION
// try cwd first	WITHOUT_CLASSIFICATION	0.9996069722823921	WITHOUT_CLASSIFICATION	3.930277176078657E-4	IMPLEMENTATION
// ruby interpreter compatibilty // Usage: ruby [switches] [--] [programfile] [arguments])	WITHOUT_CLASSIFICATION	0.9998127622168897	WITHOUT_CLASSIFICATION	1.8723778311023541E-4	IMPLEMENTATION
// KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 // if Ruby 2.0 encoding pragmas are implemented, this will need to change	WITHOUT_CLASSIFICATION	0.9514078949598209	WITHOUT_CLASSIFICATION	0.04859210504017913	IMPLEMENTATION
// @JRubyMethod(name = "complex?")	WITHOUT_CLASSIFICATION	0.9996986927326106	WITHOUT_CLASSIFICATION	3.0130726738937817E-4	IMPLEMENTATION
// @JRubyMethod(name = "exact?")	WITHOUT_CLASSIFICATION	0.9997059514638799	WITHOUT_CLASSIFICATION	2.940485361201521E-4	IMPLEMENTATION
// @JRubyMethod(name = "inexact?")	WITHOUT_CLASSIFICATION	0.999706319259197	WITHOUT_CLASSIFICATION	2.9368074080301777E-4	IMPLEMENTATION
// symbol string *must* be interned	WITHOUT_CLASSIFICATION	0.9998125576747822	WITHOUT_CLASSIFICATION	1.8744232521780842E-4	IMPLEMENTATION
//        assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";	WITHOUT_CLASSIFICATION	0.9999542309218723	WITHOUT_CLASSIFICATION	4.5769078127694894E-5	IMPLEMENTATION
/* Symbol class methods.     *      */	WITHOUT_CLASSIFICATION	0.9997638326505941	WITHOUT_CLASSIFICATION	2.3616734940605226E-4	IMPLEMENTATION
// TODO: 1.9 rb_enc_symname_p	WITHOUT_CLASSIFICATION	0.85717360532432	WITHOUT_CLASSIFICATION	0.14282639467567998	IMPLEMENTATION
// This is needed to unpack stuff	WITHOUT_CLASSIFICATION	0.9998468244909295	WITHOUT_CLASSIFICATION	1.5317550907044451E-4	IMPLEMENTATION
// we already confirmed above that length > 0	WITHOUT_CLASSIFICATION	0.9998965811557521	WITHOUT_CLASSIFICATION	1.0341884424789262E-4	IMPLEMENTATION
// *must* be power of 2!	WITHOUT_CLASSIFICATION	0.9996166235695156	WITHOUT_CLASSIFICATION	3.833764304844237E-4	IMPLEMENTATION
// note all fields are final -- rehash creates new entries when necessary. // as documented in java.util.concurrent.ConcurrentHashMap.java, that will // statistically affect only a small percentage (< 20%) of entries for a given rehash.	WITHOUT_CLASSIFICATION	0.9999333325928411	WITHOUT_CLASSIFICATION	6.666740715887463E-5	IMPLEMENTATION
//            assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999566087172772	WITHOUT_CLASSIFICATION	4.3391282722812675E-5	IMPLEMENTATION
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.999652812653087	WITHOUT_CLASSIFICATION	3.4718734691294346E-4	IMPLEMENTATION
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.999652812653087	WITHOUT_CLASSIFICATION	3.4718734691294346E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9995382301117518	WITHOUT_CLASSIFICATION	4.6176988824829203E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9995382301117518	WITHOUT_CLASSIFICATION	4.6176988824829203E-4	IMPLEMENTATION
// backwards-compatibility, but threadsafe now	WITHOUT_CLASSIFICATION	0.9997963033435397	WITHOUT_CLASSIFICATION	2.0369665646036795E-4	IMPLEMENTATION
//  Single node on list	WITHOUT_CLASSIFICATION	0.9995796354592967	WITHOUT_CLASSIFICATION	4.203645407032243E-4	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9998175574171996	WITHOUT_CLASSIFICATION	1.8244258280055147E-4	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9997004948796478	WITHOUT_CLASSIFICATION	2.995051203521142E-4	IMPLEMENTATION
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9998824542551841	WITHOUT_CLASSIFICATION	1.1754574481589392E-4	IMPLEMENTATION
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9997544348165771	WITHOUT_CLASSIFICATION	2.455651834229227E-4	IMPLEMENTATION
// not so backwards-compatible here, but no one should have been // calling this anyway.	WITHOUT_CLASSIFICATION	0.9990485446391418	WITHOUT_CLASSIFICATION	9.514553608580792E-4	IMPLEMENTATION
// Profile	WITHOUT_CLASSIFICATION	0.9969083995359346	WITHOUT_CLASSIFICATION	0.003091600464065383	IMPLEMENTATION
//static private final String TRANSLIT = "//translit";	WITHOUT_CLASSIFICATION	0.9998693328009822	WITHOUT_CLASSIFICATION	1.3066719901776418E-4	IMPLEMENTATION
// treat start and end as start...end for end >= 0, start..end for end < 0	WITHOUT_CLASSIFICATION	0.9997717914041188	WITHOUT_CLASSIFICATION	2.282085958812035E-4	IMPLEMENTATION
// invalid ranges result in an empty string	WITHOUT_CLASSIFICATION	0.9999170932618654	WITHOUT_CLASSIFICATION	8.29067381345913E-5	IMPLEMENTATION
// Methods of the Nil Class (nil_*):	WITHOUT_CLASSIFICATION	0.999872424521268	WITHOUT_CLASSIFICATION	1.2757547873203597E-4	IMPLEMENTATION
// Has read/write been closed or is it still open for business	WITHOUT_CLASSIFICATION	0.999714079866359	WITHOUT_CLASSIFICATION	2.85920133641099E-4	IMPLEMENTATION
// Support IO modes that this object was opened with	WITHOUT_CLASSIFICATION	0.9998141790753803	WITHOUT_CLASSIFICATION	1.8582092461972975E-4	IMPLEMENTATION
// must let original string know we're modifying, so shared buffers aren't damaged	WITHOUT_CLASSIFICATION	0.9998838609596099	WITHOUT_CLASSIFICATION	1.1613904038999981E-4	IMPLEMENTATION
// reset the state	WITHOUT_CLASSIFICATION	0.9997203033711326	WITHOUT_CLASSIFICATION	2.7969662886736813E-4	IMPLEMENTATION
// Tainting here if we ever want it. (secure 4)	WITHOUT_CLASSIFICATION	0.9997068169426578	WITHOUT_CLASSIFICATION	2.9318305734220024E-4	IMPLEMENTATION
// rb_match_busy	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
//str is frozen	WITHOUT_CLASSIFICATION	0.999523964713107	WITHOUT_CLASSIFICATION	4.760352868929402E-4	IMPLEMENTATION
// MRI also does a pointer comparison here	WITHOUT_CLASSIFICATION	0.9997649675318409	WITHOUT_CLASSIFICATION	2.3503246815911E-4	IMPLEMENTATION
// JRubyServer	WITHOUT_CLASSIFICATION	0.9995229235115087	WITHOUT_CLASSIFICATION	4.7707648849120473E-4	IMPLEMENTATION
// Class.allocate object is not allocatable before it is initialized	WITHOUT_CLASSIFICATION	0.9999710389926278	WITHOUT_CLASSIFICATION	2.896100737218469E-5	IMPLEMENTATION
// boot the Object class 	WITHOUT_CLASSIFICATION	0.999830140478299	WITHOUT_CLASSIFICATION	1.6985952170087717E-4	IMPLEMENTATION
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999291869578698	WITHOUT_CLASSIFICATION	7.081304213015153E-5	IMPLEMENTATION
// update superclass reference	WITHOUT_CLASSIFICATION	0.9998841984844498	WITHOUT_CLASSIFICATION	1.1580151555030505E-4	IMPLEMENTATION
// undo check	WITHOUT_CLASSIFICATION	0.9995224938181566	WITHOUT_CLASSIFICATION	4.775061818434772E-4	IMPLEMENTATION
// This is a non-standard method; have we decided to start extending Ruby? //classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));	WITHOUT_CLASSIFICATION	0.9999681252940721	WITHOUT_CLASSIFICATION	3.187470592791841E-5	IMPLEMENTATION
// boot the Module and Class classes	WITHOUT_CLASSIFICATION	0.9998574566864926	WITHOUT_CLASSIFICATION	1.425433135074565E-4	IMPLEMENTATION
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9999747186318445	WITHOUT_CLASSIFICATION	2.528136815557988E-5	IMPLEMENTATION
// use parent's marshal	WITHOUT_CLASSIFICATION	0.999689783599419	WITHOUT_CLASSIFICATION	3.102164005810752E-4	IMPLEMENTATION
// use parent's marshal	WITHOUT_CLASSIFICATION	0.999689783599419	WITHOUT_CLASSIFICATION	3.102164005810752E-4	IMPLEMENTATION
// could be pulled down to RubyClass in future // rb_class_boot	WITHOUT_CLASSIFICATION	0.9996546433043364	WITHOUT_CLASSIFICATION	3.453566956635994E-4	IMPLEMENTATION
// remove us from old superclass's child classes	WITHOUT_CLASSIFICATION	0.9999457853138165	WITHOUT_CLASSIFICATION	5.4214686183553134E-5	IMPLEMENTATION
// add us to new superclass's child classes	WITHOUT_CLASSIFICATION	0.9999223213236245	WITHOUT_CLASSIFICATION	7.767867637551102E-5	IMPLEMENTATION
// update all subclasses	WITHOUT_CLASSIFICATION	0.9998548621793597	WITHOUT_CLASSIFICATION	1.4513782064015974E-4	IMPLEMENTATION
// fields to hold Ruby and RubyClass references	WITHOUT_CLASSIFICATION	0.999834861170492	WITHOUT_CLASSIFICATION	1.6513882950793527E-4	IMPLEMENTATION
// static initializing method	WITHOUT_CLASSIFICATION	0.9998386703242707	WITHOUT_CLASSIFICATION	1.613296757292935E-4	IMPLEMENTATION
// standard constructor that accepts Ruby, RubyClass	WITHOUT_CLASSIFICATION	0.9998062903513483	WITHOUT_CLASSIFICATION	1.9370964865161503E-4	IMPLEMENTATION
// no-arg constructor using static references to Ruby and RubyClass	WITHOUT_CLASSIFICATION	0.9998534343322003	WITHOUT_CLASSIFICATION	1.4656566779974845E-4	IMPLEMENTATION
// non-signature signature with just IRubyObject	WITHOUT_CLASSIFICATION	0.9997889237431532	WITHOUT_CLASSIFICATION	2.110762568469364E-4	IMPLEMENTATION
// indices for temp values	WITHOUT_CLASSIFICATION	0.9997536615155985	WITHOUT_CLASSIFICATION	2.463384844015391E-4	IMPLEMENTATION
// self // method name	WITHOUT_CLASSIFICATION	0.9995468030183827	WITHOUT_CLASSIFICATION	4.5319698161728453E-4	IMPLEMENTATION
// the default allocator	WITHOUT_CLASSIFICATION	0.9999192272632353	WITHOUT_CLASSIFICATION	8.077273676470754E-5	IMPLEMENTATION
// Equivalent of T_DATA	WITHOUT_CLASSIFICATION	0.9995111976226332	WITHOUT_CLASSIFICATION	4.888023773669094E-4	IMPLEMENTATION
// do nothing, leave empty	WITHOUT_CLASSIFICATION	0.9999442629609686	WITHOUT_CLASSIFICATION	5.573703903144408E-5	IMPLEMENTATION
// Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9997003938740086	WITHOUT_CLASSIFICATION	2.996061259913765E-4	IMPLEMENTATION
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9998642388121125	WITHOUT_CLASSIFICATION	1.3576118788747872E-4	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9998334693720672	WITHOUT_CLASSIFICATION	1.6653062793280224E-4	IMPLEMENTATION
// Make sure all arguments are modules before calling the callbacks	WITHOUT_CLASSIFICATION	0.999970246448685	WITHOUT_CLASSIFICATION	2.9753551314945066E-5	IMPLEMENTATION
// MRI extends in order from last to first	WITHOUT_CLASSIFICATION	0.9998320952463973	WITHOUT_CLASSIFICATION	1.6790475360270587E-4	IMPLEMENTATION
// NOTE: Serialization is primarily supported for testing purposes, and there is no general // guarantee that serialization will work correctly. Specifically, instance variables pointing // at symbols, threads, modules, classes, and other unserializable types are not detected.	WITHOUT_CLASSIFICATION	0.9999981098861419	WITHOUT_CLASSIFICATION	1.8901138581350416E-6	IMPLEMENTATION
// write out ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9997565074566312	WITHOUT_CLASSIFICATION	2.434925433688641E-4	IMPLEMENTATION
// rest in ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.99973001365933	WITHOUT_CLASSIFICATION	2.6998634067001965E-4	IMPLEMENTATION
// 0x3fff_ffff // -0x4000_0000	WITHOUT_CLASSIFICATION	0.9995793842063816	WITHOUT_CLASSIFICATION	4.206157936185048E-4	IMPLEMENTATION
// a gotcha	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
// Java / and % are not the same as ruby	WITHOUT_CLASSIFICATION	0.999846957065837	WITHOUT_CLASSIFICATION	1.5304293416294946E-4	IMPLEMENTATION
// A gotcha for Long.MIN_VALUE: value = -value	WITHOUT_CLASSIFICATION	0.9997829901292853	WITHOUT_CLASSIFICATION	2.1700987071480564E-4	IMPLEMENTATION
// Piece of mri rb_to_id	WITHOUT_CLASSIFICATION	0.9995837934041691	WITHOUT_CLASSIFICATION	4.1620659583081125E-4	IMPLEMENTATION
// Java Doubles are 64 bit long:            	WITHOUT_CLASSIFICATION	0.9998317419500132	WITHOUT_CLASSIFICATION	1.6825804998685793E-4	IMPLEMENTATION
// Double.MAX_EXPONENT since Java 1.6            	WITHOUT_CLASSIFICATION	0.999810635237499	WITHOUT_CLASSIFICATION	1.8936476250106744E-4	IMPLEMENTATION
// don't override Numeric#div !	WITHOUT_CLASSIFICATION	0.9997751952853678	WITHOUT_CLASSIFICATION	2.2480471463215082E-4	IMPLEMENTATION
// Modelled after c ruby implementation (java /,% not same as ruby)	WITHOUT_CLASSIFICATION	0.984863012410103	WITHOUT_CLASSIFICATION	0.01513698758989699	IMPLEMENTATION
// MRI behavior:	WITHOUT_CLASSIFICATION	0.9995659692730149	WITHOUT_CLASSIFICATION	4.3403072698512137E-4	IMPLEMENTATION
// Numeric.equal            	WITHOUT_CLASSIFICATION	0.9997539133184243	WITHOUT_CLASSIFICATION	2.460866815756565E-4	IMPLEMENTATION
// provider is not available	WITHOUT_CLASSIFICATION	0.9998048354056897	WITHOUT_CLASSIFICATION	1.9516459431038E-4	IMPLEMENTATION
// bouncy castle doesn't support algorithm	WITHOUT_CLASSIFICATION	0.9996503406174517	WITHOUT_CLASSIFICATION	3.4965938254828254E-4	IMPLEMENTATION
// fall back to system JCA providers	WITHOUT_CLASSIFICATION	0.9997414610921196	WITHOUT_CLASSIFICATION	2.5853890788039483E-4	IMPLEMENTATION
// RubyDigest	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
// ENEBO: Can these be fast?	WITHOUT_CLASSIFICATION	0.9995706885591132	WITHOUT_CLASSIFICATION	4.2931144088676415E-4	IMPLEMENTATION
// synchronize on the RubyThread for threadgroup updates	WITHOUT_CLASSIFICATION	0.9998762981523309	WITHOUT_CLASSIFICATION	1.2370184766905419E-4	IMPLEMENTATION
// we only add live threads	WITHOUT_CLASSIFICATION	0.9997615627923004	WITHOUT_CLASSIFICATION	2.3843720769946644E-4	IMPLEMENTATION
// use same ClassIndex as metaclass, since we're technically still of that type	WITHOUT_CLASSIFICATION	0.9998792758675858	WITHOUT_CLASSIFICATION	1.2072413241413528E-4	IMPLEMENTATION
// handle everything after -- as arguments to the jruby process	WITHOUT_CLASSIFICATION	0.9999599156802212	WITHOUT_CLASSIFICATION	4.008431977880409E-5	IMPLEMENTATION
// JRubyService	WITHOUT_CLASSIFICATION	0.9995222703840912	WITHOUT_CLASSIFICATION	4.7772961590878874E-4	IMPLEMENTATION
// while	WITHOUT_CLASSIFICATION	0.9966861435446737	WITHOUT_CLASSIFICATION	0.00331385645532644	IMPLEMENTATION
/* \OOO */	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
// CRuby uses sprintf(buf, "%.*g", FLOAT_DIG, d); // This pattern adjusts the output of String.pattern("%g") to mimic // the C version.	WITHOUT_CLASSIFICATION	0.9998824451020593	WITHOUT_CLASSIFICATION	1.1755489794081168E-4	IMPLEMENTATION
// mask off "once" flag	WITHOUT_CLASSIFICATION	0.9995838387175454	WITHOUT_CLASSIFICATION	4.1616128245459E-4	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9998938656010402	WITHOUT_CLASSIFICATION	1.061343989597739E-4	IMPLEMENTATION
// internal usage (Complex/Rational)	WITHOUT_CLASSIFICATION	0.9997749764946808	WITHOUT_CLASSIFICATION	2.2502350531914826E-4	IMPLEMENTATION
// silent ?	WITHOUT_CLASSIFICATION	0.9995188659622399	WITHOUT_CLASSIFICATION	4.811340377601014E-4	IMPLEMENTATION
/* \xHH */	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9995793788471994	WITHOUT_CLASSIFICATION	4.2062115280061324E-4	IMPLEMENTATION
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
/* \O, \OO, \OOO or backref */	WITHOUT_CLASSIFICATION	0.9995742953582905	WITHOUT_CLASSIFICATION	4.2570464170952574E-4	IMPLEMENTATION
// MBCLEN_NEEDMORE_P	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
// MBCLEN_INVALID_P	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
// Unicode is can be only 21 bits long, int is enough	WITHOUT_CLASSIFICATION	0.9998061232192261	WITHOUT_CLASSIFICATION	1.938767807739428E-4	IMPLEMENTATION
/* Surrogates */	WITHOUT_CLASSIFICATION	0.9995243764554844	WITHOUT_CLASSIFICATION	4.756235445155793E-4	IMPLEMENTATION
// do not load the class if not used	WITHOUT_CLASSIFICATION	0.9999382400044968	WITHOUT_CLASSIFICATION	6.175999550316107E-5	IMPLEMENTATION
/* \0, \0O, \0OO */	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
/* \xHH */	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9995793788471994	WITHOUT_CLASSIFICATION	4.2062115280061324E-4	IMPLEMENTATION
/* \\u{H HH HHH HHHH HHHHH HHHHHH ...} */	WITHOUT_CLASSIFICATION	0.9997041623272281	WITHOUT_CLASSIFICATION	2.9583767277180736E-4	IMPLEMENTATION
/* \\uHHHH */	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
/* \p{Hiragana} */	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
// inner switch	WITHOUT_CLASSIFICATION	0.9995480799679277	WITHOUT_CLASSIFICATION	4.519200320722434E-4	IMPLEMENTATION
// newInstance here	WITHOUT_CLASSIFICATION	0.9996563742568325	WITHOUT_CLASSIFICATION	3.436257431674718E-4	IMPLEMENTATION
// rb_reg_raise	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
// rb_reg_desc	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
// rb_enc_reg_raise	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
// rb_enc_reg_error_desc	WITHOUT_CLASSIFICATION	0.9995793788471994	WITHOUT_CLASSIFICATION	4.2062115280061324E-4	IMPLEMENTATION
// rb_reg_initialize_str	WITHOUT_CLASSIFICATION	0.9997499177623361	WITHOUT_CLASSIFICATION	2.5008223766392825E-4	IMPLEMENTATION
// rb_reg_initialize	WITHOUT_CLASSIFICATION	0.9997145856239832	WITHOUT_CLASSIFICATION	2.854143760168178E-4	IMPLEMENTATION
// JRUBY-3625: delay setting backref until the MatchData is completely initialized	WITHOUT_CLASSIFICATION	0.9998912134662028	WITHOUT_CLASSIFICATION	1.0878653379711141E-4	IMPLEMENTATION
// rb_reg_expr_str	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
// option_to_str	WITHOUT_CLASSIFICATION	0.999553299072095	WITHOUT_CLASSIFICATION	4.4670092790498317E-4	IMPLEMENTATION
// Don't initialize with class // Don't put in object space and don't taint	WITHOUT_CLASSIFICATION	0.9999670332129843	WITHOUT_CLASSIFICATION	3.296678701578219E-5	IMPLEMENTATION
// args should be before block	WITHOUT_CLASSIFICATION	0.9992876740512824	WITHOUT_CLASSIFICATION	7.123259487176145E-4	IMPLEMENTATION
// args should be at end	WITHOUT_CLASSIFICATION	0.9993091142566903	WITHOUT_CLASSIFICATION	6.908857433096967E-4	IMPLEMENTATION
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9997368408934427	WITHOUT_CLASSIFICATION	2.631591065572458E-4	IMPLEMENTATION
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9997368408934427	WITHOUT_CLASSIFICATION	2.631591065572458E-4	IMPLEMENTATION
// skip anything not related to jruby	WITHOUT_CLASSIFICATION	0.9998007568771622	WITHOUT_CLASSIFICATION	1.9924312283770316E-4	IMPLEMENTATION
// start a new populator	WITHOUT_CLASSIFICATION	0.999734212088909	WITHOUT_CLASSIFICATION	2.6578791109094387E-4	IMPLEMENTATION
// check for frame field reads or writes	WITHOUT_CLASSIFICATION	0.999895435373745	WITHOUT_CLASSIFICATION	1.0456462625489442E-4	IMPLEMENTATION
// add all names for this annotation	WITHOUT_CLASSIFICATION	0.9998827428724938	WITHOUT_CLASSIFICATION	1.172571275062188E-4	IMPLEMENTATION
// no annotated methods found, skip	WITHOUT_CLASSIFICATION	0.9997329467661326	WITHOUT_CLASSIFICATION	2.670532338674667E-4	IMPLEMENTATION
// write out a static initializer for frame names, so it only fires once	WITHOUT_CLASSIFICATION	0.9999342163271242	WITHOUT_CLASSIFICATION	6.578367287578999E-5	IMPLEMENTATION
// single method, use normal logic	WITHOUT_CLASSIFICATION	0.9997657073021429	WITHOUT_CLASSIFICATION	2.3429269785714632E-4	IMPLEMENTATION
// multimethod, new logic	WITHOUT_CLASSIFICATION	0.9996296551806008	WITHOUT_CLASSIFICATION	3.7034481939924403E-4	IMPLEMENTATION
// declared type returns the qualified name without $ for inner classes!!!	WITHOUT_CLASSIFICATION	0.999887123586353	WITHOUT_CLASSIFICATION	1.1287641364703391E-4	IMPLEMENTATION
// inner class, use $ to delimit	WITHOUT_CLASSIFICATION	0.9998481064475535	WITHOUT_CLASSIFICATION	1.5189355244651435E-4	IMPLEMENTATION
//                        RubyModule singletonClass = module.getSingletonClass();	WITHOUT_CLASSIFICATION	0.9999393373500521	WITHOUT_CLASSIFICATION	6.066264994774376E-5	IMPLEMENTATION
//                }	WITHOUT_CLASSIFICATION	0.9998639318866436	WITHOUT_CLASSIFICATION	1.3606811335642292E-4	IMPLEMENTATION
// fallback on non-pregenerated logic	WITHOUT_CLASSIFICATION	0.999417528059346	WITHOUT_CLASSIFICATION	5.824719406538972E-4	IMPLEMENTATION
// refresh call adapter, since it matters if this is iter-based or not	WITHOUT_CLASSIFICATION	0.9997659740477716	WITHOUT_CLASSIFICATION	2.340259522283421E-4	IMPLEMENTATION
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9999129485386541	WITHOUT_CLASSIFICATION	8.705146134588916E-5	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.9995437862639686	WITHOUT_CLASSIFICATION	4.562137360314479E-4	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.9996511989392158	WITHOUT_CLASSIFICATION	3.4880106078416447E-4	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9998791987788529	WITHOUT_CLASSIFICATION	1.2080122114704189E-4	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9998791987788529	WITHOUT_CLASSIFICATION	1.2080122114704189E-4	IMPLEMENTATION
// colon3	WITHOUT_CLASSIFICATION	0.9966579737552927	WITHOUT_CLASSIFICATION	0.0033420262447072034	IMPLEMENTATION
// Colon3	WITHOUT_CLASSIFICATION	0.9971397000101859	WITHOUT_CLASSIFICATION	0.002860299989814132	IMPLEMENTATION
// array created for rescue args doesn't need to be in ObjectSpace.	WITHOUT_CLASSIFICATION	0.9998223065932486	WITHOUT_CLASSIFICATION	1.7769340675146062E-4	IMPLEMENTATION
// For b.foo	WITHOUT_CLASSIFICATION	0.9995176080934874	WITHOUT_CLASSIFICATION	4.823919065124752E-4	IMPLEMENTATION
// instance config for the script run	WITHOUT_CLASSIFICATION	0.999895400177179	WITHOUT_CLASSIFICATION	1.0459982282103069E-4	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9998791987788529	WITHOUT_CLASSIFICATION	1.2080122114704189E-4	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9998791987788529	WITHOUT_CLASSIFICATION	1.2080122114704189E-4	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.999849949313585	WITHOUT_CLASSIFICATION	1.500506864151331E-4	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.999849949313585	WITHOUT_CLASSIFICATION	1.500506864151331E-4	IMPLEMENTATION
//RubyModule module = context.getRubyClass();	WITHOUT_CLASSIFICATION	0.9997192534609985	WITHOUT_CLASSIFICATION	2.8074653900144174E-4	IMPLEMENTATION
// For 'b.foo'	WITHOUT_CLASSIFICATION	0.9995377926210043	WITHOUT_CLASSIFICATION	4.6220737899580074E-4	IMPLEMENTATION
// We define an actual list to get around bug in java integration (1387115)	WITHOUT_CLASSIFICATION	0.9998724950291987	WITHOUT_CLASSIFICATION	1.2750497080127088E-4	IMPLEMENTATION
// something in here is used to build up ruby stack trace...	WITHOUT_CLASSIFICATION	0.9998479204264893	WITHOUT_CLASSIFICATION	1.5207957351073763E-4	IMPLEMENTATION
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9998449400609281	WITHOUT_CLASSIFICATION	1.550599390718178E-4	IMPLEMENTATION
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9998449400609281	WITHOUT_CLASSIFICATION	1.550599390718178E-4	IMPLEMENTATION
// do nothing, allow loop to retry	WITHOUT_CLASSIFICATION	0.9999549731387727	WITHOUT_CLASSIFICATION	4.50268612272552E-5	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9997804630990557	WITHOUT_CLASSIFICATION	2.19536900944256E-4	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.999770040506491	WITHOUT_CLASSIFICATION	2.2995949350893553E-4	IMPLEMENTATION
// never visited, should be fine	WITHOUT_CLASSIFICATION	0.9995417924045102	WITHOUT_CLASSIFICATION	4.582075954897654E-4	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.999849949313585	WITHOUT_CLASSIFICATION	1.500506864151331E-4	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9998953483508275	WITHOUT_CLASSIFICATION	1.0465164917251392E-4	IMPLEMENTATION
// If we have more than one argument, then make sure the array is not ObjectSpaced.	WITHOUT_CLASSIFICATION	0.9998883723131697	WITHOUT_CLASSIFICATION	1.116276868302758E-4	IMPLEMENTATION
// Only in ruby 1.9 methods	WITHOUT_CLASSIFICATION	0.99977886292442	WITHOUT_CLASSIFICATION	2.2113707558005412E-4	IMPLEMENTATION
// Bind 'normal' parameter values to the local scope for this method.	WITHOUT_CLASSIFICATION	0.9999540650717217	WITHOUT_CLASSIFICATION	4.593492827843296E-5	IMPLEMENTATION
// no arg grouping, just use bulk assignment methods	WITHOUT_CLASSIFICATION	0.9998458741745581	WITHOUT_CLASSIFICATION	1.541258254418863E-4	IMPLEMENTATION
// optArgs and restArgs require more work, so isolate them and ArrayList creation here	WITHOUT_CLASSIFICATION	0.9996932114563838	WITHOUT_CLASSIFICATION	3.067885436162188E-4	IMPLEMENTATION
//        arity.checkArity(runtime, argsLength);	WITHOUT_CLASSIFICATION	0.9999156394480815	WITHOUT_CLASSIFICATION	8.436055191857758E-5	IMPLEMENTATION
// no more values to stick in rest arg	WITHOUT_CLASSIFICATION	0.9998438450143763	WITHOUT_CLASSIFICATION	1.5615498562371677E-4	IMPLEMENTATION
// set argv from main's args	WITHOUT_CLASSIFICATION	0.9997547907064214	WITHOUT_CLASSIFICATION	2.452092935785786E-4	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.9995437862639686	WITHOUT_CLASSIFICATION	4.562137360314479E-4	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9998791987788529	WITHOUT_CLASSIFICATION	1.2080122114704189E-4	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.999849949313585	WITHOUT_CLASSIFICATION	1.500506864151331E-4	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9998953483508275	WITHOUT_CLASSIFICATION	1.0465164917251392E-4	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999562737215949	WITHOUT_CLASSIFICATION	4.372627840504913E-5	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999562737215949	WITHOUT_CLASSIFICATION	4.372627840504913E-5	IMPLEMENTATION
// block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] //assert argsNode != null : "argsNode is not null";	WITHOUT_CLASSIFICATION	0.9999138280402385	WITHOUT_CLASSIFICATION	8.617195976142155E-5	IMPLEMENTATION
// assign given optional arguments to their variables	WITHOUT_CLASSIFICATION	0.9998538186668637	WITHOUT_CLASSIFICATION	1.4618133313630148E-4	IMPLEMENTATION
// in-frame EvalState should already have receiver set as self, continue to use it	WITHOUT_CLASSIFICATION	0.9997555336476532	WITHOUT_CLASSIFICATION	2.4446635234678536E-4	IMPLEMENTATION
// assign the default values, adding to the end of allArgs	WITHOUT_CLASSIFICATION	0.9999802122345122	WITHOUT_CLASSIFICATION	1.9787765487791703E-5	IMPLEMENTATION
// Make sure the appropriate scope has proper size. See JRUBY-2046.	WITHOUT_CLASSIFICATION	0.9999036255103472	WITHOUT_CLASSIFICATION	9.637448965286206E-5	IMPLEMENTATION
// Experimental class reification support, to create real Java classes // for Ruby classes after the first opening	WITHOUT_CLASSIFICATION	0.9999547606284069	WITHOUT_CLASSIFICATION	4.523937159306848E-5	IMPLEMENTATION
// This should never happen past parse, but just bulletproof this just in case	WITHOUT_CLASSIFICATION	0.9999479977325004	WITHOUT_CLASSIFICATION	5.200226749965329E-5	IMPLEMENTATION
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9998622037907524	WITHOUT_CLASSIFICATION	1.37796209247611E-4	IMPLEMENTATION
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9997418605702688	WITHOUT_CLASSIFICATION	2.5813942973119643E-4	IMPLEMENTATION
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9998289986705593	WITHOUT_CLASSIFICATION	1.7100132944082664E-4	IMPLEMENTATION
// never visited, should be ok	WITHOUT_CLASSIFICATION	0.999312770153913	WITHOUT_CLASSIFICATION	6.872298460869581E-4	IMPLEMENTATION
// If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil	WITHOUT_CLASSIFICATION	0.9998596105515258	WITHOUT_CLASSIFICATION	1.4038944847414827E-4	IMPLEMENTATION
// JRUBY-530 until case	WITHOUT_CLASSIFICATION	0.9995892586439648	WITHOUT_CLASSIFICATION	4.1074135603524567E-4	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.9996511989392158	WITHOUT_CLASSIFICATION	3.4880106078416447E-4	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.999849949313585	WITHOUT_CLASSIFICATION	1.500506864151331E-4	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9997804630990557	WITHOUT_CLASSIFICATION	2.19536900944256E-4	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.999770040506491	WITHOUT_CLASSIFICATION	2.2995949350893553E-4	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.999770040506491	WITHOUT_CLASSIFICATION	2.2995949350893553E-4	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.999849949313585	WITHOUT_CLASSIFICATION	1.500506864151331E-4	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9998953483508275	WITHOUT_CLASSIFICATION	1.0465164917251392E-4	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9998953483508275	WITHOUT_CLASSIFICATION	1.0465164917251392E-4	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999562737215949	WITHOUT_CLASSIFICATION	4.372627840504913E-5	IMPLEMENTATION
// Empirical Observations: // null -> Some arity // argsNode == this.argsNode then check for arity changes // newline(splatnode) -> argspushnode	WITHOUT_CLASSIFICATION	0.9998631797952706	WITHOUT_CLASSIFICATION	1.3682020472941127E-4	IMPLEMENTATION
//assert !(value instanceof RubyArray)  : "Not an array";	WITHOUT_CLASSIFICATION	0.999834221848927	WITHOUT_CLASSIFICATION	1.6577815107308145E-4	IMPLEMENTATION
// Serialization killed our dynamic scope.  We can just create an empty one // since serialization cannot serialize an eval (which is the only thing // which is capable of having a non-empty dynamic scope).	WITHOUT_CLASSIFICATION	0.9999916667454899	WITHOUT_CLASSIFICATION	8.333254510011215E-6	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9995927934750855	WITHOUT_CLASSIFICATION	4.0720652491458876E-4	IMPLEMENTATION
// We could probably also detect if LHS value came out of cache and avoid some of this	WITHOUT_CLASSIFICATION	0.9999240011417949	WITHOUT_CLASSIFICATION	7.599885820519042E-5	IMPLEMENTATION
//        assert thenBody != null : "thenBody is not null"; //        assert elseBody != null : "elseBody is not null";	WITHOUT_CLASSIFICATION	0.999961503286882	WITHOUT_CLASSIFICATION	3.849671311798248E-5	IMPLEMENTATION
// add in reverse order	WITHOUT_CLASSIFICATION	0.9997922815420507	WITHOUT_CLASSIFICATION	2.0771845794931125E-4	IMPLEMENTATION
// in order to make pragma's noops we set location to a special value	WITHOUT_CLASSIFICATION	0.9998935844507278	WITHOUT_CLASSIFICATION	1.0641554927213772E-4	IMPLEMENTATION
// ignore compiler pragmas	WITHOUT_CLASSIFICATION	0.9999371629738425	WITHOUT_CLASSIFICATION	6.283702615749271E-5	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9997804630990557	WITHOUT_CLASSIFICATION	2.19536900944256E-4	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.999770040506491	WITHOUT_CLASSIFICATION	2.2995949350893553E-4	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.999770040506491	WITHOUT_CLASSIFICATION	2.2995949350893553E-4	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.999849949313585	WITHOUT_CLASSIFICATION	1.500506864151331E-4	IMPLEMENTATION
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9998622037907524	WITHOUT_CLASSIFICATION	1.37796209247611E-4	IMPLEMENTATION
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9998289986705593	WITHOUT_CLASSIFICATION	1.7100132944082664E-4	IMPLEMENTATION
// No actual test, so do 'when' if when expression is not nil	WITHOUT_CLASSIFICATION	0.9998366934796301	WITHOUT_CLASSIFICATION	1.6330652036982812E-4	IMPLEMENTATION
// save entering the try if there's nothing to ensure	WITHOUT_CLASSIFICATION	0.9999731239470733	WITHOUT_CLASSIFICATION	2.687605292672367E-5	IMPLEMENTATION
// For 'foo'	WITHOUT_CLASSIFICATION	0.9995377926210043	WITHOUT_CLASSIFICATION	4.6220737899580074E-4	IMPLEMENTATION
// For 'foo'	WITHOUT_CLASSIFICATION	0.9995377926210043	WITHOUT_CLASSIFICATION	4.6220737899580074E-4	IMPLEMENTATION
// admittedly inefficient	WITHOUT_CLASSIFICATION	0.9995251958294428	WITHOUT_CLASSIFICATION	4.7480417055732293E-4	IMPLEMENTATION
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9996119394918243	WITHOUT_CLASSIFICATION	3.8806050817567783E-4	IMPLEMENTATION
// What static scoping relationship exists when it comes into being.	WITHOUT_CLASSIFICATION	0.9997991452191656	WITHOUT_CLASSIFICATION	2.0085478083449207E-4	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9996100953012782	WITHOUT_CLASSIFICATION	3.8990469872177483E-4	IMPLEMENTATION
// just rethrow	WITHOUT_CLASSIFICATION	0.9996454961522202	WITHOUT_CLASSIFICATION	3.5450384777979276E-4	IMPLEMENTATION
// just rethrow	WITHOUT_CLASSIFICATION	0.9996454961522202	WITHOUT_CLASSIFICATION	3.5450384777979276E-4	IMPLEMENTATION
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.999776368418999	WITHOUT_CLASSIFICATION	2.2363158100105362E-4	IMPLEMENTATION
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.999776368418999	WITHOUT_CLASSIFICATION	2.2363158100105362E-4	IMPLEMENTATION
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9996641668466084	WITHOUT_CLASSIFICATION	3.358331533915383E-4	IMPLEMENTATION
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9996641668466084	WITHOUT_CLASSIFICATION	3.358331533915383E-4	IMPLEMENTATION
// Execute rescue block	WITHOUT_CLASSIFICATION	0.9996967602207179	WITHOUT_CLASSIFICATION	3.0323977928217553E-4	IMPLEMENTATION
// If no exception is thrown execute else block	WITHOUT_CLASSIFICATION	0.9998804111956141	WITHOUT_CLASSIFICATION	1.1958880438589116E-4	IMPLEMENTATION
// index of variable for this arg	WITHOUT_CLASSIFICATION	0.9998420620718572	WITHOUT_CLASSIFICATION	1.5793792814289395E-4	IMPLEMENTATION
// only a marker interface	WITHOUT_CLASSIFICATION	0.999855925266757	WITHOUT_CLASSIFICATION	1.440747332429386E-4	IMPLEMENTATION
// don't attempt to coerce to array, just wrap and return	WITHOUT_CLASSIFICATION	0.9998331846010846	WITHOUT_CLASSIFICATION	1.6681539891546732E-4	IMPLEMENTATION
// pragmas	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
// The method also needs a scope, do both	WITHOUT_CLASSIFICATION	0.9997957496807007	WITHOUT_CLASSIFICATION	2.0425031929935497E-4	IMPLEMENTATION
// We're doing normal framed compilation or the method needs a frame	WITHOUT_CLASSIFICATION	0.9996839425522261	WITHOUT_CLASSIFICATION	3.1605744777388195E-4	IMPLEMENTATION
// The method doesn't need a scope or static scope; frame only	WITHOUT_CLASSIFICATION	0.9998736654485723	WITHOUT_CLASSIFICATION	1.263345514276778E-4	IMPLEMENTATION
// The method doesn't need a scope, but has static scope needs; use a dummy scope	WITHOUT_CLASSIFICATION	0.999873850816014	WITHOUT_CLASSIFICATION	1.2614918398590622E-4	IMPLEMENTATION
// Proc.new needs the caller's block to instantiate a proc	WITHOUT_CLASSIFICATION	0.9998555082163287	WITHOUT_CLASSIFICATION	1.4449178367135346E-4	IMPLEMENTATION
// check for Proc.new, an especially magic method	WITHOUT_CLASSIFICATION	0.9998816140118058	WITHOUT_CLASSIFICATION	1.1838598819436817E-4	IMPLEMENTATION
// long, slow way causes disabling	WITHOUT_CLASSIFICATION	0.9996804561214251	WITHOUT_CLASSIFICATION	3.195438785749369E-4	IMPLEMENTATION
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9995796599685032	WITHOUT_CLASSIFICATION	4.2034003149683206E-4	IMPLEMENTATION
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9995796599685032	WITHOUT_CLASSIFICATION	4.2034003149683206E-4	IMPLEMENTATION
// long, slow way causes disabling for defined	WITHOUT_CLASSIFICATION	0.9997448544024495	WITHOUT_CLASSIFICATION	2.551455975505051E-4	IMPLEMENTATION
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9997544348165771	WITHOUT_CLASSIFICATION	2.455651834229227E-4	IMPLEMENTATION
// Because Regexp#=== sets backref, we have to make this backref-aware	WITHOUT_CLASSIFICATION	0.999803264085561	WITHOUT_CLASSIFICATION	1.9673591443913874E-4	IMPLEMENTATION
// encountered a node we don't recognize, set everything to true to disable optz	WITHOUT_CLASSIFICATION	0.9999183312181822	WITHOUT_CLASSIFICATION	8.166878181785487E-5	IMPLEMENTATION
// only arrays that are "lightweight" are being used as args arrays	WITHOUT_CLASSIFICATION	0.9998282230873416	WITHOUT_CLASSIFICATION	1.7177691265843125E-4	IMPLEMENTATION
// otherwise, it's a literal array	WITHOUT_CLASSIFICATION	0.9996152451590964	WITHOUT_CLASSIFICATION	3.8475484090362485E-4	IMPLEMENTATION
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9997629325816909	WITHOUT_CLASSIFICATION	2.370674183090299E-4	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9997936357826139	WITHOUT_CLASSIFICATION	2.0636421738615986E-4	IMPLEMENTATION
// compile first node as non-expr and then second node	WITHOUT_CLASSIFICATION	0.9998143537456283	WITHOUT_CLASSIFICATION	1.8564625437169868E-4	IMPLEMENTATION
// last node, either !instanceof WhenNode or null, is the else	WITHOUT_CLASSIFICATION	0.9998575429034412	WITHOUT_CLASSIFICATION	1.424570965587527E-4	IMPLEMENTATION
// compile first node only	WITHOUT_CLASSIFICATION	0.9996894449452727	WITHOUT_CLASSIFICATION	3.1055505472736376E-4	IMPLEMENTATION
// splatted when, can't do it yet	WITHOUT_CLASSIFICATION	0.999746304111345	WITHOUT_CLASSIFICATION	2.5369588865499965E-4	IMPLEMENTATION
// if __send__ with a literal symbol, compile it as a direct fcall	WITHOUT_CLASSIFICATION	0.9998210182879744	WITHOUT_CLASSIFICATION	1.7898171202552167E-4	IMPLEMENTATION
// NOTE: Currently this optimization is limited to the following situations: // * All expressions must be int-ranged literal fixnums // It also still emits the code for the "safe" when logic, which is rather // wasteful (since it essentially doubles each code body). As such it is // normally disabled, but it serves as an example of how this optimization // could be done. Ideally, it should be combined with the when processing // to improve code reuse before it's generally available.	WITHOUT_CLASSIFICATION	0.9999890237058422	WITHOUT_CLASSIFICATION	1.0976294157670913E-5	IMPLEMENTATION
// aggregate when nodes into a list, unfortunately, this is no	WITHOUT_CLASSIFICATION	0.9998040643515191	WITHOUT_CLASSIFICATION	1.9593564848084162E-4	IMPLEMENTATION
// one arg but it's an array, treat it as a proper array	WITHOUT_CLASSIFICATION	0.999753990693508	WITHOUT_CLASSIFICATION	2.460093064919975E-4	IMPLEMENTATION
// can't do it	WITHOUT_CLASSIFICATION	0.9996165180367721	WITHOUT_CLASSIFICATION	3.8348196322791683E-4	IMPLEMENTATION
// otherwise, use normal args compiler	WITHOUT_CLASSIFICATION	0.9996388795091748	WITHOUT_CLASSIFICATION	3.6112049082511047E-4	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9996645502041756	WITHOUT_CLASSIFICATION	3.3544979582439405E-4	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9996645502041756	WITHOUT_CLASSIFICATION	3.3544979582439405E-4	IMPLEMENTATION
// these are all simple cases that don't require the heavier defined logic	WITHOUT_CLASSIFICATION	0.9999039273789007	WITHOUT_CLASSIFICATION	9.607262109941707E-5	IMPLEMENTATION
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9998186409135731	WITHOUT_CLASSIFICATION	1.8135908642693906E-4	IMPLEMENTATION
//[]	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
//[]	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
//          context.swapValues(); //context.consumeCurrentValue();	WITHOUT_CLASSIFICATION	0.999913754052828	WITHOUT_CLASSIFICATION	8.624594717198987E-5	IMPLEMENTATION
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[] //[self] //[RubyClass] //[RubyClass, RubyClass]	WITHOUT_CLASSIFICATION	0.9997080963049877	WITHOUT_CLASSIFICATION	2.9190369501238135E-4	IMPLEMENTATION
//[RubyClass]	WITHOUT_CLASSIFICATION	0.9995201167219431	WITHOUT_CLASSIFICATION	4.798832780570289E-4	IMPLEMENTATION
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9997080963049877	WITHOUT_CLASSIFICATION	2.9190369501238135E-4	IMPLEMENTATION
// if root of method is rescue, compile as a light rescue	WITHOUT_CLASSIFICATION	0.9996183696967328	WITHOUT_CLASSIFICATION	3.816303032672433E-4	IMPLEMENTATION
// inspect body and args	WITHOUT_CLASSIFICATION	0.9996081679383613	WITHOUT_CLASSIFICATION	3.9183206163863E-4	IMPLEMENTATION
// inspect body and args	WITHOUT_CLASSIFICATION	0.9996081679383613	WITHOUT_CLASSIFICATION	3.9183206163863E-4	IMPLEMENTATION
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9998534300690599	WITHOUT_CLASSIFICATION	1.4656993093996624E-4	IMPLEMENTATION
// if root of method is rescue, compile as light rescue	WITHOUT_CLASSIFICATION	0.999594910620236	WITHOUT_CLASSIFICATION	4.0508937976406543E-4	IMPLEMENTATION
// invoke run with threadcontext and topself	WITHOUT_CLASSIFICATION	0.9997367425667941	WITHOUT_CLASSIFICATION	2.6325743320584064E-4	IMPLEMENTATION
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9998189128006963	WITHOUT_CLASSIFICATION	1.8108719930364588E-4	IMPLEMENTATION
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9998186409135731	WITHOUT_CLASSIFICATION	1.8135908642693906E-4	IMPLEMENTATION
//[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9995201167219431	WITHOUT_CLASSIFICATION	4.798832780570289E-4	IMPLEMENTATION
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9997051289451664	WITHOUT_CLASSIFICATION	2.9487105483361014E-4	IMPLEMENTATION
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9997051289451664	WITHOUT_CLASSIFICATION	2.9487105483361014E-4	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9998487680883266	WITHOUT_CLASSIFICATION	1.5123191167343842E-4	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999679951937	WITHOUT_CLASSIFICATION	3.200480629991381E-5	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999679951937	WITHOUT_CLASSIFICATION	3.200480629991381E-5	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9997549398542339	WITHOUT_CLASSIFICATION	2.450601457661381E-4	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9997549398542339	WITHOUT_CLASSIFICATION	2.450601457661381E-4	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9997549398542339	WITHOUT_CLASSIFICATION	2.450601457661381E-4	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999679951937	WITHOUT_CLASSIFICATION	3.200480629991381E-5	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999679951937	WITHOUT_CLASSIFICATION	3.200480629991381E-5	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9998487680883266	WITHOUT_CLASSIFICATION	1.5123191167343842E-4	IMPLEMENTATION
// force heap-scope behavior, since it uses parent's scope	WITHOUT_CLASSIFICATION	0.9998107307084809	WITHOUT_CLASSIFICATION	1.8926929151902864E-4	IMPLEMENTATION
// always false or nil	WITHOUT_CLASSIFICATION	0.9996685433263647	WITHOUT_CLASSIFICATION	3.3145667363536504E-4	IMPLEMENTATION
// optimizations if we know ahead of time it will always be true or false	WITHOUT_CLASSIFICATION	0.9999351210474147	WITHOUT_CLASSIFICATION	6.487895258538688E-5	IMPLEMENTATION
// normal	WITHOUT_CLASSIFICATION	0.996863109888507	WITHOUT_CLASSIFICATION	0.0031368901114930555	IMPLEMENTATION
// compile condition as non-expr and just compile "then" body	WITHOUT_CLASSIFICATION	0.9997993624041992	WITHOUT_CLASSIFICATION	2.0063759580071712E-4	IMPLEMENTATION
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9997218614137866	WITHOUT_CLASSIFICATION	2.7813858621331827E-4	IMPLEMENTATION
// just push nil for pragmas	WITHOUT_CLASSIFICATION	0.9996789183030902	WITHOUT_CLASSIFICATION	3.210816969097385E-4	IMPLEMENTATION
// "assignment" means the value is already on the stack	WITHOUT_CLASSIFICATION	0.9999360648282759	WITHOUT_CLASSIFICATION	6.393517172417912E-5	IMPLEMENTATION
// compile first node only	WITHOUT_CLASSIFICATION	0.9996894449452727	WITHOUT_CLASSIFICATION	3.1055505472736376E-4	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999679951937	WITHOUT_CLASSIFICATION	3.200480629991381E-5	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999679951937	WITHOUT_CLASSIFICATION	3.200480629991381E-5	IMPLEMENTATION
// eval new value, call operator on old value, and assign	WITHOUT_CLASSIFICATION	0.9998012702288323	WITHOUT_CLASSIFICATION	1.9872977116782147E-4	IMPLEMENTATION
// try optz version	WITHOUT_CLASSIFICATION	0.999621278064072	WITHOUT_CLASSIFICATION	3.7872193592811116E-4	IMPLEMENTATION
// sizes must match	WITHOUT_CLASSIFICATION	0.9995527686181046	WITHOUT_CLASSIFICATION	4.4723138189527704E-4	IMPLEMENTATION
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9998947972060584	WITHOUT_CLASSIFICATION	1.0520279394158535E-4	IMPLEMENTATION
// normal items at the "head" of the masgn	WITHOUT_CLASSIFICATION	0.9998975171440261	WITHOUT_CLASSIFICATION	1.0248285597384797E-4	IMPLEMENTATION
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9998508794130827	WITHOUT_CLASSIFICATION	1.491205869173244E-4	IMPLEMENTATION
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9997846109595571	WITHOUT_CLASSIFICATION	2.1538904044297595E-4	IMPLEMENTATION
// only supports simple parallel assignment of up to 10 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999545480458766	WITHOUT_CLASSIFICATION	4.5451954123429504E-5	IMPLEMENTATION
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9998290012717965	WITHOUT_CLASSIFICATION	1.7099872820343218E-4	IMPLEMENTATION
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9998237925899043	WITHOUT_CLASSIFICATION	1.76207410095824E-4	IMPLEMENTATION
//RedoNode redoNode = (RedoNode)node;	WITHOUT_CLASSIFICATION	0.9997054805934537	WITHOUT_CLASSIFICATION	2.945194065463651E-4	IMPLEMENTATION
// done processing args	WITHOUT_CLASSIFICATION	0.999722026117727	WITHOUT_CLASSIFICATION	2.779738822729856E-4	IMPLEMENTATION
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9997825920088513	WITHOUT_CLASSIFICATION	2.1740799114876576E-4	IMPLEMENTATION
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9996421288566297	WITHOUT_CLASSIFICATION	3.578711433701843E-4	IMPLEMENTATION
// if arity 1, just compile the one element to save us the array cost	WITHOUT_CLASSIFICATION	0.9998711931108493	WITHOUT_CLASSIFICATION	1.2880688915069548E-4	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
// compile into array	WITHOUT_CLASSIFICATION	0.9996575554864324	WITHOUT_CLASSIFICATION	3.424445135675278E-4	IMPLEMENTATION
// compile first node as non-expr and compile second node	WITHOUT_CLASSIFICATION	0.9998106395661075	WITHOUT_CLASSIFICATION	1.893604338925935E-4	IMPLEMENTATION
// check if it's an immediate, and don't outline	WITHOUT_CLASSIFICATION	0.9998121560726437	WITHOUT_CLASSIFICATION	1.8784392735622782E-4	IMPLEMENTATION
// condition is always true, just compile it and not body	WITHOUT_CLASSIFICATION	0.9998834571825951	WITHOUT_CLASSIFICATION	1.1654281740495219E-4	IMPLEMENTATION
// force static scope to claim restarg at 0, so it only implements the [] version of __file__	WITHOUT_CLASSIFICATION	0.9948359950124145	WITHOUT_CLASSIFICATION	0.005164004987585457	IMPLEMENTATION
// create method for toplevel of script	WITHOUT_CLASSIFICATION	0.9998792233040861	WITHOUT_CLASSIFICATION	1.2077669591390332E-4	IMPLEMENTATION
// it's a multiple-statement body, iterate over all elements in turn and chain if it get too long	WITHOUT_CLASSIFICATION	0.9999100579763897	WITHOUT_CLASSIFICATION	8.994202361024829E-5	IMPLEMENTATION
// send it along as arity-specific, we don't need the array	WITHOUT_CLASSIFICATION	0.9998129990939552	WITHOUT_CLASSIFICATION	1.8700090604480574E-4	IMPLEMENTATION
// single-statement body, just compile it	WITHOUT_CLASSIFICATION	0.9998027707471753	WITHOUT_CLASSIFICATION	1.9722925282467438E-4	IMPLEMENTATION
// leave as a normal array	WITHOUT_CLASSIFICATION	0.999654237580644	WITHOUT_CLASSIFICATION	3.457624193560416E-4	IMPLEMENTATION
// This method has JITed already or has been abandoned. Bail out.	WITHOUT_CLASSIFICATION	0.9998576423777924	WITHOUT_CLASSIFICATION	1.4235762220747596E-4	IMPLEMENTATION
// The cache is full. Abandon JIT for this method and bail out.	WITHOUT_CLASSIFICATION	0.9997813242778819	WITHOUT_CLASSIFICATION	2.1867572211795022E-4	IMPLEMENTATION
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9998534300690599	WITHOUT_CLASSIFICATION	1.4656993093996624E-4	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999679951937	WITHOUT_CLASSIFICATION	3.200480629991381E-5	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999679951937	WITHOUT_CLASSIFICATION	3.200480629991381E-5	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9998487680883266	WITHOUT_CLASSIFICATION	1.5123191167343842E-4	IMPLEMENTATION
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9997218614137866	WITHOUT_CLASSIFICATION	2.7813858621331827E-4	IMPLEMENTATION
// try optz version	WITHOUT_CLASSIFICATION	0.999621278064072	WITHOUT_CLASSIFICATION	3.7872193592811116E-4	IMPLEMENTATION
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9998947972060584	WITHOUT_CLASSIFICATION	1.0520279394158535E-4	IMPLEMENTATION
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9998508794130827	WITHOUT_CLASSIFICATION	1.491205869173244E-4	IMPLEMENTATION
// sizes must match	WITHOUT_CLASSIFICATION	0.9995527686181046	WITHOUT_CLASSIFICATION	4.4723138189527704E-4	IMPLEMENTATION
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9997846109595571	WITHOUT_CLASSIFICATION	2.1538904044297595E-4	IMPLEMENTATION
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9998237925899043	WITHOUT_CLASSIFICATION	1.76207410095824E-4	IMPLEMENTATION
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9998290012717965	WITHOUT_CLASSIFICATION	1.7099872820343218E-4	IMPLEMENTATION
// done processing args	WITHOUT_CLASSIFICATION	0.999722026117727	WITHOUT_CLASSIFICATION	2.779738822729856E-4	IMPLEMENTATION
// Check if the method has been explicitly excluded	WITHOUT_CLASSIFICATION	0.999927416825475	WITHOUT_CLASSIFICATION	7.258317452497346E-5	IMPLEMENTATION
// class could not be found nor generated; give up on JIT and bail out	WITHOUT_CLASSIFICATION	0.9997968043627579	WITHOUT_CLASSIFICATION	2.0319563724207541E-4	IMPLEMENTATION
// successfully got back a jitted method	WITHOUT_CLASSIFICATION	0.9999339496714578	WITHOUT_CLASSIFICATION	6.605032854216082E-5	IMPLEMENTATION
// finally, grab the script	WITHOUT_CLASSIFICATION	0.9997323667490883	WITHOUT_CLASSIFICATION	2.6763325091170524E-4	IMPLEMENTATION
// logEvery n methods based on configuration	WITHOUT_CLASSIFICATION	0.999793706313714	WITHOUT_CLASSIFICATION	2.0629368628594905E-4	IMPLEMENTATION
// Time the compilation	WITHOUT_CLASSIFICATION	0.9997114097750126	WITHOUT_CLASSIFICATION	2.885902249874982E-4	IMPLEMENTATION
// we have a body, do a full-on method	WITHOUT_CLASSIFICATION	0.9998299215754785	WITHOUT_CLASSIFICATION	1.7007842452156563E-4	IMPLEMENTATION
// If we don't have a body, check for required or opt args // if opt args, they could have side effects // if required args, need to raise errors if too few args passed // otherwise, method does nothing, make it a nop	WITHOUT_CLASSIFICATION	0.9999560754529557	WITHOUT_CLASSIFICATION	4.392454704416512E-5	IMPLEMENTATION
// if we haven't already decided on a do-nothing call	WITHOUT_CLASSIFICATION	0.9999488341924936	WITHOUT_CLASSIFICATION	5.1165807506422307E-5	IMPLEMENTATION
// only supports simple parallel assignment of up to 4 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999545480458766	WITHOUT_CLASSIFICATION	4.5451954123429504E-5	IMPLEMENTATION
// normal items at the front or back of the masgn	WITHOUT_CLASSIFICATION	0.9999126798618113	WITHOUT_CLASSIFICATION	8.732013818869238E-5	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9998384393036686	WITHOUT_CLASSIFICATION	1.6156069633138886E-4	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9997297756650861	WITHOUT_CLASSIFICATION	2.702243349139045E-4	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9997779147031616	WITHOUT_CLASSIFICATION	2.220852968384268E-4	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999468205445952	WITHOUT_CLASSIFICATION	5.317945540474461E-5	IMPLEMENTATION
// end of variable scope	WITHOUT_CLASSIFICATION	0.9998397794599374	WITHOUT_CLASSIFICATION	1.6022054006248354E-4	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.99960393524518	WITHOUT_CLASSIFICATION	3.9606475482007353E-4	IMPLEMENTATION
// Define the annotation for the method	WITHOUT_CLASSIFICATION	0.9999067131053931	WITHOUT_CLASSIFICATION	9.328689460684503E-5	IMPLEMENTATION
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9998712190902822	WITHOUT_CLASSIFICATION	1.287809097178001E-4	IMPLEMENTATION
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9998496020217111	WITHOUT_CLASSIFICATION	1.503979782888839E-4	IMPLEMENTATION
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9998451890648901	WITHOUT_CLASSIFICATION	1.5481093510980945E-4	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9998655493461495	WITHOUT_CLASSIFICATION	1.344506538505482E-4	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9998655493461495	WITHOUT_CLASSIFICATION	1.344506538505482E-4	IMPLEMENTATION
// value is already on stack, save it for later	WITHOUT_CLASSIFICATION	0.9998977226626801	WITHOUT_CLASSIFICATION	1.0227733731997101E-4	IMPLEMENTATION
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9996838037231992	WITHOUT_CLASSIFICATION	3.161962768006985E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9995294327026559	WITHOUT_CLASSIFICATION	4.705672973441494E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9995294327026559	WITHOUT_CLASSIFICATION	4.705672973441494E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9995294327026559	WITHOUT_CLASSIFICATION	4.705672973441494E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
/*arg2*/	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
/*args*/	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9996838037231992	WITHOUT_CLASSIFICATION	3.161962768006985E-4	IMPLEMENTATION
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9998845698203488	WITHOUT_CLASSIFICATION	1.1543017965116589E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9995294327026559	WITHOUT_CLASSIFICATION	4.705672973441494E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9995294327026559	WITHOUT_CLASSIFICATION	4.705672973441494E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
/*args*/	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9998095020881856	WITHOUT_CLASSIFICATION	1.9049791181430706E-4	IMPLEMENTATION
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9998095020881856	WITHOUT_CLASSIFICATION	1.9049791181430706E-4	IMPLEMENTATION
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9997765239233595	WITHOUT_CLASSIFICATION	2.2347607664061571E-4	IMPLEMENTATION
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9997765239233595	WITHOUT_CLASSIFICATION	2.2347607664061571E-4	IMPLEMENTATION
// invoke	WITHOUT_CLASSIFICATION	0.9966845351899278	WITHOUT_CLASSIFICATION	0.003315464810072076	IMPLEMENTATION
// invoke	WITHOUT_CLASSIFICATION	0.9966845351899278	WITHOUT_CLASSIFICATION	0.003315464810072076	IMPLEMENTATION
// check if it's true, ending if so	WITHOUT_CLASSIFICATION	0.9997962549886582	WITHOUT_CLASSIFICATION	2.0374501134185098E-4	IMPLEMENTATION
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9993283000759678	WITHOUT_CLASSIFICATION	6.71699924032212E-4	IMPLEMENTATION
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9993283000759678	WITHOUT_CLASSIFICATION	6.71699924032212E-4	IMPLEMENTATION
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9998150363793671	WITHOUT_CLASSIFICATION	1.849636206328439E-4	IMPLEMENTATION
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9998150363793671	WITHOUT_CLASSIFICATION	1.849636206328439E-4	IMPLEMENTATION
// eval value for assignment	WITHOUT_CLASSIFICATION	0.9997395105205449	WITHOUT_CLASSIFICATION	2.60489479455098E-4	IMPLEMENTATION
// call site	WITHOUT_CLASSIFICATION	0.9995346683346594	WITHOUT_CLASSIFICATION	4.6533166534057726E-4	IMPLEMENTATION
// call site	WITHOUT_CLASSIFICATION	0.9995346683346594	WITHOUT_CLASSIFICATION	4.6533166534057726E-4	IMPLEMENTATION
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9998821243984938	WITHOUT_CLASSIFICATION	1.1787560150612427E-4	IMPLEMENTATION
// check if it's true, ending if not	WITHOUT_CLASSIFICATION	0.9998015585679811	WITHOUT_CLASSIFICATION	1.9844143201884482E-4	IMPLEMENTATION
// eval value and save it	WITHOUT_CLASSIFICATION	0.9997043529500633	WITHOUT_CLASSIFICATION	2.9564704993665394E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9998821243984938	WITHOUT_CLASSIFICATION	1.1787560150612427E-4	IMPLEMENTATION
// receiver, args, result, value	WITHOUT_CLASSIFICATION	0.999780901279599	WITHOUT_CLASSIFICATION	2.190987204010123E-4	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9995165256671424	WITHOUT_CLASSIFICATION	4.8347433285762526E-4	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9995165256671424	WITHOUT_CLASSIFICATION	4.8347433285762526E-4	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9995165256671424	WITHOUT_CLASSIFICATION	4.8347433285762526E-4	IMPLEMENTATION
// super uses current block if none given	WITHOUT_CLASSIFICATION	0.9998134149881558	WITHOUT_CLASSIFICATION	1.8658501184424538E-4	IMPLEMENTATION
// args	WITHOUT_CLASSIFICATION	0.9965195530686983	WITHOUT_CLASSIFICATION	0.0034804469313015444	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9964676212558803	WITHOUT_CLASSIFICATION	0.0035323787441197373	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9964676212558803	WITHOUT_CLASSIFICATION	0.0035323787441197373	IMPLEMENTATION
// no args, no block	WITHOUT_CLASSIFICATION	0.9995991192852217	WITHOUT_CLASSIFICATION	4.008807147783065E-4	IMPLEMENTATION
// no args, with block	WITHOUT_CLASSIFICATION	0.9996549989670939	WITHOUT_CLASSIFICATION	3.450010329061687E-4	IMPLEMENTATION
// with args, no block	WITHOUT_CLASSIFICATION	0.99964950524014	WITHOUT_CLASSIFICATION	3.5049475986004015E-4	IMPLEMENTATION
// with args, with block	WITHOUT_CLASSIFICATION	0.9996359018462287	WITHOUT_CLASSIFICATION	3.640981537712798E-4	IMPLEMENTATION
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9996953125320222	WITHOUT_CLASSIFICATION	3.046874679777893E-4	IMPLEMENTATION
// pop extra attr value	WITHOUT_CLASSIFICATION	0.999662035802111	WITHOUT_CLASSIFICATION	3.379641978890913E-4	IMPLEMENTATION
// pop extra attr value	WITHOUT_CLASSIFICATION	0.999662035802111	WITHOUT_CLASSIFICATION	3.379641978890913E-4	IMPLEMENTATION
// arg and receiver already present on the stack	WITHOUT_CLASSIFICATION	0.9997918214978649	WITHOUT_CLASSIFICATION	2.0817850213507373E-4	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9995165256671424	WITHOUT_CLASSIFICATION	4.8347433285762526E-4	IMPLEMENTATION
// args	WITHOUT_CLASSIFICATION	0.9965195530686983	WITHOUT_CLASSIFICATION	0.0034804469313015444	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9964676212558803	WITHOUT_CLASSIFICATION	0.0035323787441197373	IMPLEMENTATION
// no args, no block	WITHOUT_CLASSIFICATION	0.9995991192852217	WITHOUT_CLASSIFICATION	4.008807147783065E-4	IMPLEMENTATION
// no args, with block	WITHOUT_CLASSIFICATION	0.9996549989670939	WITHOUT_CLASSIFICATION	3.450010329061687E-4	IMPLEMENTATION
// with args, no block	WITHOUT_CLASSIFICATION	0.99964950524014	WITHOUT_CLASSIFICATION	3.5049475986004015E-4	IMPLEMENTATION
// with args, with block	WITHOUT_CLASSIFICATION	0.9996359018462287	WITHOUT_CLASSIFICATION	3.640981537712798E-4	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
// retrieve scope from scopes array	WITHOUT_CLASSIFICATION	0.9998283833175817	WITHOUT_CLASSIFICATION	1.7161668241823014E-4	IMPLEMENTATION
// use numbered access method	WITHOUT_CLASSIFICATION	0.9996656596629444	WITHOUT_CLASSIFICATION	3.3434033705562796E-4	IMPLEMENTATION
// retrieve call site from sites array	WITHOUT_CLASSIFICATION	0.9998319970313488	WITHOUT_CLASSIFICATION	1.6800296865113152E-4	IMPLEMENTATION
// add name to call site list	WITHOUT_CLASSIFICATION	0.9997743224861562	WITHOUT_CLASSIFICATION	2.2567751384380504E-4	IMPLEMENTATION
// module is on top of stack	WITHOUT_CLASSIFICATION	0.9996571964078415	WITHOUT_CLASSIFICATION	3.4280359215860045E-4	IMPLEMENTATION
// build scope names string	WITHOUT_CLASSIFICATION	0.9997822326498645	WITHOUT_CLASSIFICATION	2.177673501354388E-4	IMPLEMENTATION
// build descriptor string	WITHOUT_CLASSIFICATION	0.9997951702163299	WITHOUT_CLASSIFICATION	2.0482978367015604E-4	IMPLEMENTATION
// build descriptor string	WITHOUT_CLASSIFICATION	0.9997951702163299	WITHOUT_CLASSIFICATION	2.0482978367015604E-4	IMPLEMENTATION
// generate call sites initialization code	WITHOUT_CLASSIFICATION	0.9999675036666972	WITHOUT_CLASSIFICATION	3.2496333302830656E-5	IMPLEMENTATION
// generate symbols initialization code	WITHOUT_CLASSIFICATION	0.9999654635682264	WITHOUT_CLASSIFICATION	3.453643177363659E-5	IMPLEMENTATION
// generate fixnums initialization code	WITHOUT_CLASSIFICATION	0.9999656921925998	WITHOUT_CLASSIFICATION	3.430780740025684E-5	IMPLEMENTATION
// generate constants initialization code	WITHOUT_CLASSIFICATION	0.9999767564547619	WITHOUT_CLASSIFICATION	2.324354523802292E-5	IMPLEMENTATION
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999649137341897	WITHOUT_CLASSIFICATION	3.508626581026344E-5	IMPLEMENTATION
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999649137341897	WITHOUT_CLASSIFICATION	3.508626581026344E-5	IMPLEMENTATION
// generate variable readers initialization code	WITHOUT_CLASSIFICATION	0.9999584930776366	WITHOUT_CLASSIFICATION	4.150692236341321E-5	IMPLEMENTATION
// generate variable writers initialization code	WITHOUT_CLASSIFICATION	0.9999614009412058	WITHOUT_CLASSIFICATION	3.859905879423105E-5	IMPLEMENTATION
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999649927589593	WITHOUT_CLASSIFICATION	3.500724104064072E-5	IMPLEMENTATION
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999649927589593	WITHOUT_CLASSIFICATION	3.500724104064072E-5	IMPLEMENTATION
// generate bytelists initialization code	WITHOUT_CLASSIFICATION	0.9999656011955169	WITHOUT_CLASSIFICATION	3.439880448309002E-5	IMPLEMENTATION
// generate method cache initialization code	WITHOUT_CLASSIFICATION	0.999965606554141	WITHOUT_CLASSIFICATION	3.439344585907357E-5	IMPLEMENTATION
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9996953125320222	WITHOUT_CLASSIFICATION	3.046874679777893E-4	IMPLEMENTATION
// use IRubyObject[]	WITHOUT_CLASSIFICATION	0.9996288058221559	WITHOUT_CLASSIFICATION	3.711941778441524E-4	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.999978663714424	WITHOUT_CLASSIFICATION	2.1336285576001296E-5	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9998352100793568	WITHOUT_CLASSIFICATION	1.647899206431961E-4	IMPLEMENTATION
// No point in updating number if last number was same value.	WITHOUT_CLASSIFICATION	0.9998662145949543	WITHOUT_CLASSIFICATION	1.3378540504570768E-4	IMPLEMENTATION
// load Object under value	WITHOUT_CLASSIFICATION	0.999810607879356	WITHOUT_CLASSIFICATION	1.893921206439355E-4	IMPLEMENTATION
// put under object array already present	WITHOUT_CLASSIFICATION	0.9998474203011077	WITHOUT_CLASSIFICATION	1.525796988922528E-4	IMPLEMENTATION
// if element count is less than 6, use helper methods	WITHOUT_CLASSIFICATION	0.9999274112542694	WITHOUT_CLASSIFICATION	7.258874573063027E-5	IMPLEMENTATION
// This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements	WITHOUT_CLASSIFICATION	0.9999585711391918	WITHOUT_CLASSIFICATION	4.142886080815242E-5	IMPLEMENTATION
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999124312981076	WITHOUT_CLASSIFICATION	8.756870189238301E-5	IMPLEMENTATION
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999124312981076	WITHOUT_CLASSIFICATION	8.756870189238301E-5	IMPLEMENTATION
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9998037672925862	WITHOUT_CLASSIFICATION	1.9623270741375972E-4	IMPLEMENTATION
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9998037672925862	WITHOUT_CLASSIFICATION	1.9623270741375972E-4	IMPLEMENTATION
// use specific-arity for as much as possible	WITHOUT_CLASSIFICATION	0.9997805020137758	WITHOUT_CLASSIFICATION	2.1949798622416272E-4	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9997157244236764	WITHOUT_CLASSIFICATION	2.8427557632367727E-4	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9997157244236764	WITHOUT_CLASSIFICATION	2.8427557632367727E-4	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9997157244236764	WITHOUT_CLASSIFICATION	2.8427557632367727E-4	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9996295014685571	WITHOUT_CLASSIFICATION	3.704985314428011E-4	IMPLEMENTATION
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9997821447269513	WITHOUT_CLASSIFICATION	2.1785527304873283E-4	IMPLEMENTATION
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9997821447269513	WITHOUT_CLASSIFICATION	2.1785527304873283E-4	IMPLEMENTATION
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999008762904479	WITHOUT_CLASSIFICATION	9.91237095520102E-5	IMPLEMENTATION
// check the condition	WITHOUT_CLASSIFICATION	0.9997285412511775	WITHOUT_CLASSIFICATION	2.714587488225506E-4	IMPLEMENTATION
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9995819048679002	WITHOUT_CLASSIFICATION	4.1809513209978977E-4	IMPLEMENTATION
// skip catch block	WITHOUT_CLASSIFICATION	0.9993532489017334	WITHOUT_CLASSIFICATION	6.467510982666188E-4	IMPLEMENTATION
// catch logic for flow-control: next, break	WITHOUT_CLASSIFICATION	0.9997343159547438	WITHOUT_CLASSIFICATION	2.656840452560899E-4	IMPLEMENTATION
// next jump	WITHOUT_CLASSIFICATION	0.9995402971030228	WITHOUT_CLASSIFICATION	4.59702896977188E-4	IMPLEMENTATION
// exceptionNext target is for a next that doesn't push a new value, like this one	WITHOUT_CLASSIFICATION	0.9999194112930252	WITHOUT_CLASSIFICATION	8.058870697482087E-5	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9997297756650861	WITHOUT_CLASSIFICATION	2.702243349139045E-4	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9997297756650861	WITHOUT_CLASSIFICATION	2.702243349139045E-4	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9996295014685571	WITHOUT_CLASSIFICATION	3.704985314428011E-4	IMPLEMENTATION
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999008762904479	WITHOUT_CLASSIFICATION	9.91237095520102E-5	IMPLEMENTATION
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.999922056626447	WITHOUT_CLASSIFICATION	7.794337355297368E-5	IMPLEMENTATION
// check the condition	WITHOUT_CLASSIFICATION	0.9997285412511775	WITHOUT_CLASSIFICATION	2.714587488225506E-4	IMPLEMENTATION
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9995819048679002	WITHOUT_CLASSIFICATION	4.1809513209978977E-4	IMPLEMENTATION
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999020871446263	WITHOUT_CLASSIFICATION	9.791285537370846E-5	IMPLEMENTATION
// break jump	WITHOUT_CLASSIFICATION	0.9997884875993801	WITHOUT_CLASSIFICATION	2.1151240061990914E-4	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9997530264985691	WITHOUT_CLASSIFICATION	2.4697350143085424E-4	IMPLEMENTATION
//[reg]	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
// for regular expressions with the /o flag	WITHOUT_CLASSIFICATION	0.9998148888004265	WITHOUT_CLASSIFICATION	1.8511119957350343E-4	IMPLEMENTATION
// inside a loop, jump to body	WITHOUT_CLASSIFICATION	0.9996210495987939	WITHOUT_CLASSIFICATION	3.789504012059833E-4	IMPLEMENTATION
// inside a loop, jump to conditional	WITHOUT_CLASSIFICATION	0.9997510709361916	WITHOUT_CLASSIFICATION	2.4892906380829415E-4	IMPLEMENTATION
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999020871446263	WITHOUT_CLASSIFICATION	9.791285537370846E-5	IMPLEMENTATION
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999406124729808	WITHOUT_CLASSIFICATION	5.93875270192682E-5	IMPLEMENTATION
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999406124729808	WITHOUT_CLASSIFICATION	5.93875270192682E-5	IMPLEMENTATION
// if more than 4 vars, get values array too	WITHOUT_CLASSIFICATION	0.9997904825886185	WITHOUT_CLASSIFICATION	2.0951741138146578E-4	IMPLEMENTATION
// retry handling in the rescue block	WITHOUT_CLASSIFICATION	0.9998055249900096	WITHOUT_CLASSIFICATION	1.9447500999031847E-4	IMPLEMENTATION
// any exceptions raised must continue to be raised, skipping $! restoration	WITHOUT_CLASSIFICATION	0.9998567239241819	WITHOUT_CLASSIFICATION	1.43276075818052E-4	IMPLEMENTATION
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9998022407710815	WITHOUT_CLASSIFICATION	1.9775922891846992E-4	IMPLEMENTATION
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999169560322391	WITHOUT_CLASSIFICATION	8.304396776094099E-5	IMPLEMENTATION
// Handle Flow exceptions, just propagating them	WITHOUT_CLASSIFICATION	0.9998991735592923	WITHOUT_CLASSIFICATION	1.0082644070784145E-4	IMPLEMENTATION
// rethrow to outer flow catcher	WITHOUT_CLASSIFICATION	0.9997331264372115	WITHOUT_CLASSIFICATION	2.6687356278859735E-4	IMPLEMENTATION
// Handle Ruby exceptions (RaiseException)	WITHOUT_CLASSIFICATION	0.9998842338432579	WITHOUT_CLASSIFICATION	1.1576615674208963E-4	IMPLEMENTATION
// inside a loop, break out of it // go to end of loop, leaving break value on stack	WITHOUT_CLASSIFICATION	0.9998291861155805	WITHOUT_CLASSIFICATION	1.7081388441949935E-4	IMPLEMENTATION
// false // zero	WITHOUT_CLASSIFICATION	0.9996486079628123	WITHOUT_CLASSIFICATION	3.5139203718762344E-4	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9998452891247093	WITHOUT_CLASSIFICATION	1.5471087529074558E-4	IMPLEMENTATION
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9998022407710815	WITHOUT_CLASSIFICATION	1.9775922891846992E-4	IMPLEMENTATION
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999169560322391	WITHOUT_CLASSIFICATION	8.304396776094099E-5	IMPLEMENTATION
// retry handling in the rescue blocks	WITHOUT_CLASSIFICATION	0.9998058807186946	WITHOUT_CLASSIFICATION	1.9411928130534295E-4	IMPLEMENTATION
// push false	WITHOUT_CLASSIFICATION	0.9995498653079895	WITHOUT_CLASSIFICATION	4.5013469201053143E-4	IMPLEMENTATION
//method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));	WITHOUT_CLASSIFICATION	0.9998899640303717	WITHOUT_CLASSIFICATION	1.1003596962831574E-4	IMPLEMENTATION
//method.ifnonnull(trueLabel);	WITHOUT_CLASSIFICATION	0.9995882249624545	WITHOUT_CLASSIFICATION	4.117750375455417E-4	IMPLEMENTATION
// EQ == 0 (i.e. false)   //[C]	WITHOUT_CLASSIFICATION	0.9997394660265808	WITHOUT_CLASSIFICATION	2.6053397341925077E-4	IMPLEMENTATION
//[C, C] //[C, C, String] //[C, null|C]	WITHOUT_CLASSIFICATION	0.9997431588501609	WITHOUT_CLASSIFICATION	2.568411498391013E-4	IMPLEMENTATION
//[C]	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
// push true	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
// EQ != 0 (i.e. true)	WITHOUT_CLASSIFICATION	0.9995819048679002	WITHOUT_CLASSIFICATION	4.1809513209978977E-4	IMPLEMENTATION
//[?, ?] //[?, boolean]	WITHOUT_CLASSIFICATION	0.9996085313143246	WITHOUT_CLASSIFICATION	3.9146868567538806E-4	IMPLEMENTATION
//[RubyModule] //[RubyModule, String]	WITHOUT_CLASSIFICATION	0.9997460095592378	WITHOUT_CLASSIFICATION	2.539904407622369E-4	IMPLEMENTATION
//[boolean]	WITHOUT_CLASSIFICATION	0.9995361407247507	WITHOUT_CLASSIFICATION	4.6385927524930285E-4	IMPLEMENTATION
// no receiver for singleton class	WITHOUT_CLASSIFICATION	0.9998399526397165	WITHOUT_CLASSIFICATION	1.6004736028347728E-4	IMPLEMENTATION
// but there's a superclass passed in, use it	WITHOUT_CLASSIFICATION	0.9998538363877313	WITHOUT_CLASSIFICATION	1.4616361226863465E-4	IMPLEMENTATION
// we re-set self to the class, but store the old self in a temporary local variable // this is to prevent it GCing in case the singleton is short-lived	WITHOUT_CLASSIFICATION	0.9999923655778585	WITHOUT_CLASSIFICATION	7.634422141416605E-6	IMPLEMENTATION
// set self to the class	WITHOUT_CLASSIFICATION	0.9998845376942346	WITHOUT_CLASSIFICATION	1.154623057654044E-4	IMPLEMENTATION
// CLASS BODY	WITHOUT_CLASSIFICATION	0.999520886347461	WITHOUT_CLASSIFICATION	4.7911365253908335E-4	IMPLEMENTATION
// static scope	WITHOUT_CLASSIFICATION	0.9996047980092249	WITHOUT_CLASSIFICATION	3.95201990775157E-4	IMPLEMENTATION
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999219312955419	WITHOUT_CLASSIFICATION	7.806870445815911E-5	IMPLEMENTATION
// new instance to invoke run against	WITHOUT_CLASSIFICATION	0.9998475604446192	WITHOUT_CLASSIFICATION	1.5243955538073466E-4	IMPLEMENTATION
// CLASS BODY	WITHOUT_CLASSIFICATION	0.999520886347461	WITHOUT_CLASSIFICATION	4.7911365253908335E-4	IMPLEMENTATION
// static scope	WITHOUT_CLASSIFICATION	0.9996047980092249	WITHOUT_CLASSIFICATION	3.95201990775157E-4	IMPLEMENTATION
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999219312955419	WITHOUT_CLASSIFICATION	7.806870445815911E-5	IMPLEMENTATION
// finally with exception	WITHOUT_CLASSIFICATION	0.9997497351689956	WITHOUT_CLASSIFICATION	2.502648310043789E-4	IMPLEMENTATION
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9998848000278701	WITHOUT_CLASSIFICATION	1.1519997212995828E-4	IMPLEMENTATION
// otherwise, there's a receiver, so we pass that in directly for the sclass logic	WITHOUT_CLASSIFICATION	0.9998658947434984	WITHOUT_CLASSIFICATION	1.3410525650166635E-4	IMPLEMENTATION
// original exception is on stack	WITHOUT_CLASSIFICATION	0.9998781147679419	WITHOUT_CLASSIFICATION	1.2188523205812439E-4	IMPLEMENTATION
// RaiseException is on stack, get RubyException out	WITHOUT_CLASSIFICATION	0.9998650673753547	WITHOUT_CLASSIFICATION	1.3493262464536773E-4	IMPLEMENTATION
// updating position for same line; skip	WITHOUT_CLASSIFICATION	0.9998719140632161	WITHOUT_CLASSIFICATION	1.280859367839703E-4	IMPLEMENTATION
// callbacks to fill in method body	WITHOUT_CLASSIFICATION	0.9997308511702532	WITHOUT_CLASSIFICATION	2.69148829746861E-4	IMPLEMENTATION
// prepare to call "def" utility method to handle def logic	WITHOUT_CLASSIFICATION	0.9997129338419801	WITHOUT_CLASSIFICATION	2.870661580198619E-4	IMPLEMENTATION
// script object	WITHOUT_CLASSIFICATION	0.9996713285250031	WITHOUT_CLASSIFICATION	3.286714749968838E-4	IMPLEMENTATION
// arities	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
// TODO assuming case is a fixnum	WITHOUT_CLASSIFICATION	0.9901960170282713	WITHOUT_CLASSIFICATION	0.00980398297172877	IMPLEMENTATION
// we have an input case, prepare branching logic	WITHOUT_CLASSIFICATION	0.9997605210307211	WITHOUT_CLASSIFICATION	2.3947896927877844E-4	IMPLEMENTATION
// we have optimized switch cases, build a lookupswitch	WITHOUT_CLASSIFICATION	0.9997873590489332	WITHOUT_CLASSIFICATION	2.1264095106681937E-4	IMPLEMENTATION
// checkcast the value; if match, fast path; otherwise proceed to slow logic	WITHOUT_CLASSIFICATION	0.9998637825776577	WITHOUT_CLASSIFICATION	1.362174223423296E-4	IMPLEMENTATION
// expression-based tests + bodies	WITHOUT_CLASSIFICATION	0.9997827052906038	WITHOUT_CLASSIFICATION	2.1729470939615432E-4	IMPLEMENTATION
// normal case, create a new label	WITHOUT_CLASSIFICATION	0.999934372334171	WITHOUT_CLASSIFICATION	6.562766582889563E-5	IMPLEMENTATION
// last conditional case, use defaultCase	WITHOUT_CLASSIFICATION	0.9998372222498955	WITHOUT_CLASSIFICATION	1.6277775010459597E-4	IMPLEMENTATION
// do nothing; arity check is done before call	WITHOUT_CLASSIFICATION	0.9999629424388309	WITHOUT_CLASSIFICATION	3.705756116913296E-5	IMPLEMENTATION
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9997641568996675	WITHOUT_CLASSIFICATION	2.3584310033247015E-4	IMPLEMENTATION
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9997693517659921	WITHOUT_CLASSIFICATION	2.3064823400796876E-4	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.9997297696530428	WITHOUT_CLASSIFICATION	2.702303469572206E-4	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.9996830890022442	WITHOUT_CLASSIFICATION	3.1691099775581146E-4	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.9996830890022442	WITHOUT_CLASSIFICATION	3.1691099775581146E-4	IMPLEMENTATION
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9997518432427377	WITHOUT_CLASSIFICATION	2.4815675726228025E-4	IMPLEMENTATION
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9997518432427377	WITHOUT_CLASSIFICATION	2.4815675726228025E-4	IMPLEMENTATION
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9998208899475599	WITHOUT_CLASSIFICATION	1.7911005244006508E-4	IMPLEMENTATION
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9998208899475599	WITHOUT_CLASSIFICATION	1.7911005244006508E-4	IMPLEMENTATION
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9998307001363697	WITHOUT_CLASSIFICATION	1.6929986363035474E-4	IMPLEMENTATION
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9998718155777769	WITHOUT_CLASSIFICATION	1.281844222230109E-4	IMPLEMENTATION
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9998666072374008	WITHOUT_CLASSIFICATION	1.3339276259911542E-4	IMPLEMENTATION
// if there's args left and we want them, assign to rest arg	WITHOUT_CLASSIFICATION	0.999808339227401	WITHOUT_CLASSIFICATION	1.9166077259912456E-4	IMPLEMENTATION
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999085486563201	WITHOUT_CLASSIFICATION	9.145134367995132E-5	IMPLEMENTATION
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9998676199002551	WITHOUT_CLASSIFICATION	1.3238009974498902E-4	IMPLEMENTATION
// first, iterate over all pre args	WITHOUT_CLASSIFICATION	0.9997848393452788	WITHOUT_CLASSIFICATION	2.1516065472109442E-4	IMPLEMENTATION
// then optional args	WITHOUT_CLASSIFICATION	0.9997078580256384	WITHOUT_CLASSIFICATION	2.921419743616102E-4	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9997297756650861	WITHOUT_CLASSIFICATION	2.702243349139045E-4	IMPLEMENTATION
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9998307001363697	WITHOUT_CLASSIFICATION	1.6929986363035474E-4	IMPLEMENTATION
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9998718155777769	WITHOUT_CLASSIFICATION	1.281844222230109E-4	IMPLEMENTATION
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9998666072374008	WITHOUT_CLASSIFICATION	1.3339276259911542E-4	IMPLEMENTATION
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999085486563201	WITHOUT_CLASSIFICATION	9.145134367995132E-5	IMPLEMENTATION
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9998676199002551	WITHOUT_CLASSIFICATION	1.3238009974498902E-4	IMPLEMENTATION
// if rest args, excluding post args	WITHOUT_CLASSIFICATION	0.9997452202440849	WITHOUT_CLASSIFICATION	2.5477975591517497E-4	IMPLEMENTATION
// finally, post args	WITHOUT_CLASSIFICATION	0.9996428801428868	WITHOUT_CLASSIFICATION	3.571198571131225E-4	IMPLEMENTATION
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9994603499755315	WITHOUT_CLASSIFICATION	5.396500244685312E-4	IMPLEMENTATION
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9994603499755315	WITHOUT_CLASSIFICATION	5.396500244685312E-4	IMPLEMENTATION
// unwrap scopes to appropriate depth	WITHOUT_CLASSIFICATION	0.9997287716677073	WITHOUT_CLASSIFICATION	2.7122833229272354E-4	IMPLEMENTATION
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9997795396408093	WITHOUT_CLASSIFICATION	2.2046035919075818E-4	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999165626001885	WITHOUT_CLASSIFICATION	8.343739981155063E-5	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9997676485748064	WITHOUT_CLASSIFICATION	2.3235142519357664E-4	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9997676485748064	WITHOUT_CLASSIFICATION	2.3235142519357664E-4	IMPLEMENTATION
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9998020257242317	WITHOUT_CLASSIFICATION	1.9797427576840856E-4	IMPLEMENTATION
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9998079763549074	WITHOUT_CLASSIFICATION	1.920236450926991E-4	IMPLEMENTATION
// store the local vars in a local variable	WITHOUT_CLASSIFICATION	0.9998629597597026	WITHOUT_CLASSIFICATION	1.3704024029737404E-4	IMPLEMENTATION
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9998430299076808	WITHOUT_CLASSIFICATION	1.5697009231925105E-4	IMPLEMENTATION
// return in a class body raises error	WITHOUT_CLASSIFICATION	0.9999472738974055	WITHOUT_CLASSIFICATION	5.27261025945246E-5	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9997779147031616	WITHOUT_CLASSIFICATION	2.220852968384268E-4	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999468205445952	WITHOUT_CLASSIFICATION	5.317945540474461E-5	IMPLEMENTATION
// end of variable scope	WITHOUT_CLASSIFICATION	0.9998397794599374	WITHOUT_CLASSIFICATION	1.6022054006248354E-4	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.99960393524518	WITHOUT_CLASSIFICATION	3.9606475482007353E-4	IMPLEMENTATION
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9998496020217111	WITHOUT_CLASSIFICATION	1.503979782888839E-4	IMPLEMENTATION
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9998451890648901	WITHOUT_CLASSIFICATION	1.5481093510980945E-4	IMPLEMENTATION
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9998020257242317	WITHOUT_CLASSIFICATION	1.9797427576840856E-4	IMPLEMENTATION
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9998079763549074	WITHOUT_CLASSIFICATION	1.920236450926991E-4	IMPLEMENTATION
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9998430299076808	WITHOUT_CLASSIFICATION	1.5697009231925105E-4	IMPLEMENTATION
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9998025128295801	WITHOUT_CLASSIFICATION	1.974871704198339E-4	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999165626001885	WITHOUT_CLASSIFICATION	8.343739981155063E-5	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999165626001885	WITHOUT_CLASSIFICATION	8.343739981155063E-5	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9998452891247093	WITHOUT_CLASSIFICATION	1.5471087529074558E-4	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9998452891247093	WITHOUT_CLASSIFICATION	1.5471087529074558E-4	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9996468587304841	WITHOUT_CLASSIFICATION	3.5314126951588336E-4	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9996468587304841	WITHOUT_CLASSIFICATION	3.5314126951588336E-4	IMPLEMENTATION
// store the local vars in a local variable if there are any	WITHOUT_CLASSIFICATION	0.9999486859517582	WITHOUT_CLASSIFICATION	5.131404824184214E-5	IMPLEMENTATION
// if more than 4 locals, get and populate the locals array too	WITHOUT_CLASSIFICATION	0.9998256719898947	WITHOUT_CLASSIFICATION	1.7432801010540923E-4	IMPLEMENTATION
// fill local vars with nil, to avoid checking every access.	WITHOUT_CLASSIFICATION	0.999774714804266	WITHOUT_CLASSIFICATION	2.2528519573398483E-4	IMPLEMENTATION
// default for starting tempVariableIndex is ok	WITHOUT_CLASSIFICATION	0.9999123286541038	WITHOUT_CLASSIFICATION	8.767134589622199E-5	IMPLEMENTATION
// store the local vars in a local variable for preparing the class (using previous scope)	WITHOUT_CLASSIFICATION	0.9999654986473671	WITHOUT_CLASSIFICATION	3.450135263296428E-5	IMPLEMENTATION
// store the new local vars in a local variable	WITHOUT_CLASSIFICATION	0.9998940089368024	WITHOUT_CLASSIFICATION	1.0599106319766372E-4	IMPLEMENTATION
// in 1.8 mode, this will be a RubyArray containing the arguments // in 1.9 mode, this will be an IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999255160137533	WITHOUT_CLASSIFICATION	7.448398624661297E-5	IMPLEMENTATION
// no variable initialization, because we're reusing parent's scope (flat)	WITHOUT_CLASSIFICATION	0.9999633688078698	WITHOUT_CLASSIFICATION	3.6631192130158614E-5	IMPLEMENTATION
// for specific-index cases, clean up non-expression values	WITHOUT_CLASSIFICATION	0.9998503340463715	WITHOUT_CLASSIFICATION	1.4966595362854147E-4	IMPLEMENTATION
// set up a local Ruby variable	WITHOUT_CLASSIFICATION	0.9998384393036686	WITHOUT_CLASSIFICATION	1.6156069633138886E-4	IMPLEMENTATION
// if that succeeds, the others should as well	WITHOUT_CLASSIFICATION	0.9997602715896855	WITHOUT_CLASSIFICATION	2.3972841031456285E-4	IMPLEMENTATION
// verify the class	WITHOUT_CLASSIFICATION	0.999869718698368	WITHOUT_CLASSIFICATION	1.3028130163195712E-4	IMPLEMENTATION
// create dir if necessary	WITHOUT_CLASSIFICATION	0.9998624572915936	WITHOUT_CLASSIFICATION	1.3754270840641393E-4	IMPLEMENTATION
// Create the class with the appropriate class name and source file	WITHOUT_CLASSIFICATION	0.9999660260329769	WITHOUT_CLASSIFICATION	3.397396702300216E-5	IMPLEMENTATION
// add setPosition impl, which stores filename as constant to speed updates	WITHOUT_CLASSIFICATION	0.9999469274016325	WITHOUT_CLASSIFICATION	5.307259836748907E-5	IMPLEMENTATION
// thread context	WITHOUT_CLASSIFICATION	0.9995562507910875	WITHOUT_CLASSIFICATION	4.4374920891256705E-4	IMPLEMENTATION
// line number	WITHOUT_CLASSIFICATION	0.9996168096391371	WITHOUT_CLASSIFICATION	3.831903608628575E-4	IMPLEMENTATION
// invoke __file__ with threadcontext, self, args (null), and block (null)	WITHOUT_CLASSIFICATION	0.9997312219193049	WITHOUT_CLASSIFICATION	2.687780806951437E-4	IMPLEMENTATION
// load always uses IRubyObject[], so simple closure offset calculation here	WITHOUT_CLASSIFICATION	0.9998300428449715	WITHOUT_CLASSIFICATION	1.699571550284233E-4	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999468205445952	WITHOUT_CLASSIFICATION	5.317945540474461E-5	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.99960393524518	WITHOUT_CLASSIFICATION	3.9606475482007353E-4	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9998655493461495	WITHOUT_CLASSIFICATION	1.344506538505482E-4	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9964676212558803	WITHOUT_CLASSIFICATION	0.0035323787441197373	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9964676212558803	WITHOUT_CLASSIFICATION	0.0035323787441197373	IMPLEMENTATION
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9998025128295801	WITHOUT_CLASSIFICATION	1.974871704198339E-4	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999165626001885	WITHOUT_CLASSIFICATION	8.343739981155063E-5	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9998452891247093	WITHOUT_CLASSIFICATION	1.5471087529074558E-4	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9996468587304841	WITHOUT_CLASSIFICATION	3.5314126951588336E-4	IMPLEMENTATION
// add Script#run impl, used for running this script with a specified threadcontext and self // root method of a script is always in __file__ method	WITHOUT_CLASSIFICATION	0.9999541769685604	WITHOUT_CLASSIFICATION	4.582303143951656E-5	IMPLEMENTATION
// add main impl, used for detached or command-line execution of this script with a new runtime // root method of a script is always in stub0, method0	WITHOUT_CLASSIFICATION	0.9999738902226063	WITHOUT_CLASSIFICATION	2.6109777393674397E-5	IMPLEMENTATION
// construct static scope list of names	WITHOUT_CLASSIFICATION	0.9998799766250703	WITHOUT_CLASSIFICATION	1.2002337492965172E-4	IMPLEMENTATION
// JRUBY-3014: make __FILE__ dynamically determined at load time, but // we provide a reasonable default here	WITHOUT_CLASSIFICATION	0.999935475098791	WITHOUT_CLASSIFICATION	6.452490120899985E-5	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.999968753536101	WITHOUT_CLASSIFICATION	3.124646389896432E-5	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.999968753536101	WITHOUT_CLASSIFICATION	3.124646389896432E-5	IMPLEMENTATION
// lazily create class init only if necessary	WITHOUT_CLASSIFICATION	0.9999346746776978	WITHOUT_CLASSIFICATION	6.532532230223497E-5	IMPLEMENTATION
// boxed arg list __file__	WITHOUT_CLASSIFICATION	0.9995907090691185	WITHOUT_CLASSIFICATION	4.092909308814468E-4	IMPLEMENTATION
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9996173745503186	WITHOUT_CLASSIFICATION	3.826254496813892E-4	IMPLEMENTATION
// exact arg list __file__	WITHOUT_CLASSIFICATION	0.9996049626669676	WITHOUT_CLASSIFICATION	3.9503733303236676E-4	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.9997010295420508	WITHOUT_CLASSIFICATION	2.989704579493141E-4	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.9997010295420508	WITHOUT_CLASSIFICATION	2.989704579493141E-4	IMPLEMENTATION
// not using a new scope, use saved one for a flat closure	WITHOUT_CLASSIFICATION	0.9992931548590347	WITHOUT_CLASSIFICATION	7.068451409654147E-4	IMPLEMENTATION
// normal closure	WITHOUT_CLASSIFICATION	0.9995680424145889	WITHOUT_CLASSIFICATION	4.319575854111385E-4	IMPLEMENTATION
// end of scoping for closure's vars	WITHOUT_CLASSIFICATION	0.9998988501230786	WITHOUT_CLASSIFICATION	1.0114987692145898E-4	IMPLEMENTATION
// we only need full-on redo exception handling if there's logic that might produce it	WITHOUT_CLASSIFICATION	0.9998767662893658	WITHOUT_CLASSIFICATION	1.2323371063425843E-4	IMPLEMENTATION
// handle redos by restarting the block	WITHOUT_CLASSIFICATION	0.9998684037954094	WITHOUT_CLASSIFICATION	1.315962045905044E-4	IMPLEMENTATION
// jump back to the top of the main body of this closure	WITHOUT_CLASSIFICATION	0.9999443925273883	WITHOUT_CLASSIFICATION	5.560747261170072E-5	IMPLEMENTATION
// Ruby name 	WITHOUT_CLASSIFICATION	0.9995354621180871	WITHOUT_CLASSIFICATION	4.64537881912929E-4	IMPLEMENTATION
// Accumulate call arguments	WITHOUT_CLASSIFICATION	0.9997190022305634	WITHOUT_CLASSIFICATION	2.809977694365896E-4	IMPLEMENTATION
// Fix FileNameCompletor to work mid-line	WITHOUT_CLASSIFICATION	0.999719702797018	WITHOUT_CLASSIFICATION	2.8029720298192065E-4	IMPLEMENTATION
// We need to ensure that the variable names generated here cannot conflict with ruby variable names! // Hence the "%" tthat is appended to the beginning!	WITHOUT_CLASSIFICATION	0.9996002710693721	WITHOUT_CLASSIFICATION	3.9972893062778715E-4	IMPLEMENTATION
// Does this method define code?  // Default is yes -- which basically leads to pessimistic but safe optimizations // But, for library and internal methods, this might be false.	WITHOUT_CLASSIFICATION	0.999854509386334	WITHOUT_CLASSIFICATION	1.454906136659106E-4	IMPLEMENTATION
// Map of constants defined in this scope (not valid for methods!)	WITHOUT_CLASSIFICATION	0.9999751698901184	WITHOUT_CLASSIFICATION	2.4830109881630343E-5	IMPLEMENTATION
// NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner // with outer loops encountered before inner loops, and inner loops finished before outer ones. // // So, we can keep track of loops in a loop stack which  keeps track of loops as they are encountered. // This lets us implement next/redo/break/retry easily for the non-closure cases	WITHOUT_CLASSIFICATION	0.9990543646229566	WITHOUT_CLASSIFICATION	9.456353770434792E-4	IMPLEMENTATION
// Map keep track of the next available variable index for a particular prefix	WITHOUT_CLASSIFICATION	0.9999356788143305	WITHOUT_CLASSIFICATION	6.4321185669514E-5	IMPLEMENTATION
// Control flow graph for this scope	WITHOUT_CLASSIFICATION	0.9998551278048622	WITHOUT_CLASSIFICATION	1.4487219513790783E-4	IMPLEMENTATION
//        _lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;	WITHOUT_CLASSIFICATION	0.9999293044162874	WITHOUT_CLASSIFICATION	7.069558371270667E-5	IMPLEMENTATION
// List of modules, classes, and methods defined in this scope!	WITHOUT_CLASSIFICATION	0.9999562970097601	WITHOUT_CLASSIFICATION	4.370299023995507E-5	IMPLEMENTATION
// Returns the containing parent scope!	WITHOUT_CLASSIFICATION	0.9998811473209432	WITHOUT_CLASSIFICATION	1.1885267905674144E-4	IMPLEMENTATION
// Insert nesting level to ensure variable names don't conflict across nested scopes! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //        return new Variable(prefix + _lexicalNestingLevel + "_" + idx);	WITHOUT_CLASSIFICATION	0.9999921394777797	WITHOUT_CLASSIFICATION	7.860522220270932E-6	IMPLEMENTATION
// get "self"	WITHOUT_CLASSIFICATION	0.9996292573457868	WITHOUT_CLASSIFICATION	3.7074265421320756E-4	IMPLEMENTATION
// variable is never read, variable is never live	WITHOUT_CLASSIFICATION	0.9994833889624248	WITHOUT_CLASSIFICATION	5.166110375751528E-4	IMPLEMENTATION
// inline script	WITHOUT_CLASSIFICATION	0.9995468616941291	WITHOUT_CLASSIFICATION	4.5313830587085567E-4	IMPLEMENTATION
// inline script	WITHOUT_CLASSIFICATION	0.9995468616941291	WITHOUT_CLASSIFICATION	4.5313830587085567E-4	IMPLEMENTATION
// This method is called to build assignments for a multiple-assignment instruction	WITHOUT_CLASSIFICATION	0.9998116585983452	WITHOUT_CLASSIFICATION	1.883414016546909E-4	IMPLEMENTATION
// Build the class body!	WITHOUT_CLASSIFICATION	0.9998348405543357	WITHOUT_CLASSIFICATION	1.651594456642693E-4	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9997936357826139	WITHOUT_CLASSIFICATION	2.0636421738615986E-4	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9997936357826139	WITHOUT_CLASSIFICATION	2.0636421738615986E-4	IMPLEMENTATION
// SSS FIXME: Can this ever be null?	WITHOUT_CLASSIFICATION	0.9995715797235628	WITHOUT_CLASSIFICATION	4.2842027643717664E-4	IMPLEMENTATION
// Run the pass on the passed in scope!	WITHOUT_CLASSIFICATION	0.9998546417197341	WITHOUT_CLASSIFICATION	1.453582802659378E-4	IMPLEMENTATION
// done // done // done // done	WITHOUT_CLASSIFICATION	0.9997173423832043	WITHOUT_CLASSIFICATION	2.826576167957586E-4	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999654665100706	WITHOUT_CLASSIFICATION	3.4533489929387197E-5	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999654665100706	WITHOUT_CLASSIFICATION	3.4533489929387197E-5	IMPLEMENTATION
// This method is called to build arguments for a block!	WITHOUT_CLASSIFICATION	0.9998054841978691	WITHOUT_CLASSIFICATION	1.9451580213086382E-4	IMPLEMENTATION
// build first node (and ignore its result) and then second node	WITHOUT_CLASSIFICATION	0.9999152806183501	WITHOUT_CLASSIFICATION	8.471938164995104E-5	IMPLEMENTATION
// build first node only and return false	WITHOUT_CLASSIFICATION	0.9999096357277889	WITHOUT_CLASSIFICATION	9.036427221106083E-5	IMPLEMENTATION
// Value of the last expression in the block 	WITHOUT_CLASSIFICATION	0.9999479195764971	WITHOUT_CLASSIFICATION	5.2080423502920134E-5	IMPLEMENTATION
// If this is not a closure, the break is equivalent to jumping to the loop end label	WITHOUT_CLASSIFICATION	0.9999432856871592	WITHOUT_CLASSIFICATION	5.671431284080748E-5	IMPLEMENTATION
// get the incoming case value	WITHOUT_CLASSIFICATION	0.9998944887524794	WITHOUT_CLASSIFICATION	1.0551124752062429E-4	IMPLEMENTATION
// the CASE instruction	WITHOUT_CLASSIFICATION	0.9997755107424577	WITHOUT_CLASSIFICATION	2.2448925754230676E-4	IMPLEMENTATION
// lists to aggregate variables and bodies for whens	WITHOUT_CLASSIFICATION	0.9998043430750739	WITHOUT_CLASSIFICATION	1.9565692492594445E-4	IMPLEMENTATION
// build each "when"	WITHOUT_CLASSIFICATION	0.9996385156686117	WITHOUT_CLASSIFICATION	3.614843313882361E-4	IMPLEMENTATION
// multiple conditions for when	WITHOUT_CLASSIFICATION	0.9998233044318304	WITHOUT_CLASSIFICATION	1.7669556816965245E-4	IMPLEMENTATION
// build "else" if it exists	WITHOUT_CLASSIFICATION	0.9997417867863548	WITHOUT_CLASSIFICATION	2.5821321364519656E-4	IMPLEMENTATION
// now emit bodies	WITHOUT_CLASSIFICATION	0.9995650986294385	WITHOUT_CLASSIFICATION	4.349013705614917E-4	IMPLEMENTATION
// close it out	WITHOUT_CLASSIFICATION	0.9996144479108129	WITHOUT_CLASSIFICATION	3.855520891870968E-4	IMPLEMENTATION
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999791784729735	WITHOUT_CLASSIFICATION	2.0821527026539654E-5	IMPLEMENTATION
// Do we have a dynamic container?	WITHOUT_CLASSIFICATION	0.9978205566278389	WITHOUT_CLASSIFICATION	0.0021794433721610373	IMPLEMENTATION
// Return a meta object corresponding to the class	WITHOUT_CLASSIFICATION	0.9999540352974762	WITHOUT_CLASSIFICATION	4.5964702523857083E-5	IMPLEMENTATION
// 1. Load the module first (lhs of node) // 2. Then load the constant from the module	WITHOUT_CLASSIFICATION	0.9999378036830551	WITHOUT_CLASSIFICATION	6.21963169448595E-5	IMPLEMENTATION
// Build IR for args	WITHOUT_CLASSIFICATION	0.9995856030610707	WITHOUT_CLASSIFICATION	4.1439693892928435E-4	IMPLEMENTATION
// Build IR for body	WITHOUT_CLASSIFICATION	0.9995685117572415	WITHOUT_CLASSIFICATION	4.314882427585572E-4	IMPLEMENTATION
// if root of method is rescue, build as a light rescue	WITHOUT_CLASSIFICATION	0.9996546062298698	WITHOUT_CLASSIFICATION	3.453937701302223E-4	IMPLEMENTATION
// Instance method	WITHOUT_CLASSIFICATION	0.9997770646930035	WITHOUT_CLASSIFICATION	2.2293530699636096E-4	IMPLEMENTATION
// Class method	WITHOUT_CLASSIFICATION	0.9997221095243561	WITHOUT_CLASSIFICATION	2.7789047564386054E-4	IMPLEMENTATION
// Other args begin at index 1	WITHOUT_CLASSIFICATION	0.9996561125271926	WITHOUT_CLASSIFICATION	3.4388747280746594E-4	IMPLEMENTATION
// Both for fixed arity and variable arity methods	WITHOUT_CLASSIFICATION	0.9997819348961798	WITHOUT_CLASSIFICATION	2.180651038202017E-4	IMPLEMENTATION
// Now for the rest	WITHOUT_CLASSIFICATION	0.9996843536343221	WITHOUT_CLASSIFICATION	3.156463656779272E-4	IMPLEMENTATION
// Jump to 'l' if this arg is not null.  If null, fall through and build the default value!	WITHOUT_CLASSIFICATION	0.9999830882699626	WITHOUT_CLASSIFICATION	1.691173003738887E-5	IMPLEMENTATION
// This is not an expression that computes anything	WITHOUT_CLASSIFICATION	0.9999363041952058	WITHOUT_CLASSIFICATION	6.36958047941498E-5	IMPLEMENTATION
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999683600419892	WITHOUT_CLASSIFICATION	3.163995801079891E-5	IMPLEMENTATION
// Build args	WITHOUT_CLASSIFICATION	0.9995834252030761	WITHOUT_CLASSIFICATION	4.1657479692402526E-4	IMPLEMENTATION
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999364309687555	WITHOUT_CLASSIFICATION	6.356903124442445E-5	IMPLEMENTATION
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999723286574173	WITHOUT_CLASSIFICATION	2.767134258271841E-5	IMPLEMENTATION
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999791784729735	WITHOUT_CLASSIFICATION	2.0821527026539654E-5	IMPLEMENTATION
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999683600419892	WITHOUT_CLASSIFICATION	3.163995801079891E-5	IMPLEMENTATION
// Build args	WITHOUT_CLASSIFICATION	0.9995834252030761	WITHOUT_CLASSIFICATION	4.1657479692402526E-4	IMPLEMENTATION
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999723286574173	WITHOUT_CLASSIFICATION	2.767134258271841E-5	IMPLEMENTATION
// Get the container for this new module	WITHOUT_CLASSIFICATION	0.9999670971939433	WITHOUT_CLASSIFICATION	3.2902806056650535E-5	IMPLEMENTATION
// Build the new module	WITHOUT_CLASSIFICATION	0.9998054948312021	WITHOUT_CLASSIFICATION	1.945051687979079E-4	IMPLEMENTATION
// Build the module body	WITHOUT_CLASSIFICATION	0.9997874859949606	WITHOUT_CLASSIFICATION	2.1251400503948114E-4	IMPLEMENTATION
// First, build an assignment for a splat, if any, with the rest of the args!	WITHOUT_CLASSIFICATION	0.9997563369109537	WITHOUT_CLASSIFICATION	2.4366308904623106E-4	IMPLEMENTATION
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9998332416513354	WITHOUT_CLASSIFICATION	1.667583486646512E-4	IMPLEMENTATION
// If a closure, the next is simply a return from the closure! // If a regular loop, the next is simply a jump to the end of the iteration	WITHOUT_CLASSIFICATION	0.9999855267984108	WITHOUT_CLASSIFICATION	1.4473201589269336E-5	IMPLEMENTATION
// get attr	WITHOUT_CLASSIFICATION	0.9996369104436372	WITHOUT_CLASSIFICATION	3.630895563627766E-4	IMPLEMENTATION
// call operator	WITHOUT_CLASSIFICATION	0.9995753712816464	WITHOUT_CLASSIFICATION	4.2462871835354844E-4	IMPLEMENTATION
// set attr	WITHOUT_CLASSIFICATION	0.9996748412665782	WITHOUT_CLASSIFICATION	3.2515873342176926E-4	IMPLEMENTATION
// Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, false, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9998479240965722	WITHOUT_CLASSIFICATION	1.5207590342780975E-4	IMPLEMENTATION
// This does the assignment!	WITHOUT_CLASSIFICATION	0.999801248398472	WITHOUT_CLASSIFICATION	1.9875160152805176E-4	IMPLEMENTATION
// This does the assignment!	WITHOUT_CLASSIFICATION	0.999801248398472	WITHOUT_CLASSIFICATION	1.9875160152805176E-4	IMPLEMENTATION
// if v1 is defined and true, we are done! 	WITHOUT_CLASSIFICATION	0.999837149591165	WITHOUT_CLASSIFICATION	1.6285040883502348E-4	IMPLEMENTATION
// build first node only and return true	WITHOUT_CLASSIFICATION	0.9998986878505074	WITHOUT_CLASSIFICATION	1.0131214949258618E-4	IMPLEMENTATION
// build first node as non-expr and build second node	WITHOUT_CLASSIFICATION	0.9998336945838551	WITHOUT_CLASSIFICATION	1.6630541614488494E-4	IMPLEMENTATION
// Top-level script!	WITHOUT_CLASSIFICATION	0.9995411514863737	WITHOUT_CLASSIFICATION	4.5884851362625235E-4	IMPLEMENTATION
// we won't enter the loop -- just build the condition node	WITHOUT_CLASSIFICATION	0.9999288831892609	WITHOUT_CLASSIFICATION	7.111681073915118E-5	IMPLEMENTATION
/* ----------- Private Interface ------------ */	WITHOUT_CLASSIFICATION	0.999956877521689	WITHOUT_CLASSIFICATION	4.312247831099981E-5	IMPLEMENTATION
// What handles warnings	WITHOUT_CLASSIFICATION	0.9996454093723686	WITHOUT_CLASSIFICATION	3.54590627631423E-4	IMPLEMENTATION
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999890341522696	WITHOUT_CLASSIFICATION	1.0965847730494439E-5	IMPLEMENTATION
// For closures, a redo is a jump to the beginning of the closure // For non-closures, a redo is a jump to the beginning of the loop	WITHOUT_CLASSIFICATION	0.9999450321205395	WITHOUT_CLASSIFICATION	5.4967879460508674E-5	IMPLEMENTATION
// The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999523603139141	WITHOUT_CLASSIFICATION	4.7639686085980504E-5	IMPLEMENTATION
// Dummy top-level method for the class	WITHOUT_CLASSIFICATION	0.9998558335633343	WITHOUT_CLASSIFICATION	1.4416643666581762E-4	IMPLEMENTATION
// Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999511216403231	WITHOUT_CLASSIFICATION	4.887835967705939E-5	IMPLEMENTATION
// ------ Define the operations below ----	WITHOUT_CLASSIFICATION	0.9999371992537486	WITHOUT_CLASSIFICATION	6.280074625138689E-5	IMPLEMENTATION
// value copy and type conversion operations	WITHOUT_CLASSIFICATION	0.9999319362766517	WITHOUT_CLASSIFICATION	6.806372334831476E-5	IMPLEMENTATION
// alu operations	WITHOUT_CLASSIFICATION	0.9997257708708637	WITHOUT_CLASSIFICATION	2.742291291363126E-4	IMPLEMENTATION
// method handle, arg receive, return value, and  call instructions	WITHOUT_CLASSIFICATION	0.9997031354621115	WITHOUT_CLASSIFICATION	2.968645378885198E-4	IMPLEMENTATION
// closure instructions	WITHOUT_CLASSIFICATION	0.9996817073522082	WITHOUT_CLASSIFICATION	3.182926477918342E-4	IMPLEMENTATION
// eval instructions	WITHOUT_CLASSIFICATION	0.9996234375344376	WITHOUT_CLASSIFICATION	3.765624655623642E-4	IMPLEMENTATION
// def instructions	WITHOUT_CLASSIFICATION	0.9996341575909886	WITHOUT_CLASSIFICATION	3.6584240901137713E-4	IMPLEMENTATION
// exception instructions	WITHOUT_CLASSIFICATION	0.9997724250471599	WITHOUT_CLASSIFICATION	2.2757495284016422E-4	IMPLEMENTATION
// Loads	WITHOUT_CLASSIFICATION	0.9969038886507249	WITHOUT_CLASSIFICATION	0.0030961113492751972	IMPLEMENTATION
// Stores	WITHOUT_CLASSIFICATION	0.9967175896628004	WITHOUT_CLASSIFICATION	0.003282410337199491	IMPLEMENTATION
// jump and branch operations	WITHOUT_CLASSIFICATION	0.9997622442518719	WITHOUT_CLASSIFICATION	2.3775574812817316E-4	IMPLEMENTATION
// others	WITHOUT_CLASSIFICATION	0.9964136250473665	WITHOUT_CLASSIFICATION	0.0035863749526334012	IMPLEMENTATION
// a case/when branch	WITHOUT_CLASSIFICATION	0.9996020652940311	WITHOUT_CLASSIFICATION	3.9793470596893534E-4	IMPLEMENTATION
// optimization guards	WITHOUT_CLASSIFICATION	0.9996567232819372	WITHOUT_CLASSIFICATION	3.4327671806274706E-4	IMPLEMENTATION
// By default, call instructions cannot be deleted even if their results aren't used by anyone // unless we know more about what the call is, what it does, etc. // Similarly for evals, stores, returns.	WITHOUT_CLASSIFICATION	0.9999753975379323	WITHOUT_CLASSIFICATION	2.4602462067714815E-5	IMPLEMENTATION
// Returns the containing parent scope -- can be a dynamic value (hence Operand)!	WITHOUT_CLASSIFICATION	0.9999098757737223	WITHOUT_CLASSIFICATION	9.012422627773762E-5	IMPLEMENTATION
// scripts	WITHOUT_CLASSIFICATION	0.99671718701436	WITHOUT_CLASSIFICATION	0.0032828129856400335	IMPLEMENTATION
// scripts and modules	WITHOUT_CLASSIFICATION	0.9996562647345543	WITHOUT_CLASSIFICATION	3.4373526544578375E-4	IMPLEMENTATION
// scripts, classes, and modules	WITHOUT_CLASSIFICATION	0.999828274541781	WITHOUT_CLASSIFICATION	1.7172545821897273E-4	IMPLEMENTATION
// methods and closures	WITHOUT_CLASSIFICATION	0.9996911039922788	WITHOUT_CLASSIFICATION	3.088960077211922E-4	IMPLEMENTATION
// create a new variable using the prefix	WITHOUT_CLASSIFICATION	0.9999777996057069	WITHOUT_CLASSIFICATION	2.220039429320025E-5	IMPLEMENTATION
// create a new temporary variable	WITHOUT_CLASSIFICATION	0.9999612592441621	WITHOUT_CLASSIFICATION	3.874075583793315E-5	IMPLEMENTATION
// Get a new label using a generic prefix	WITHOUT_CLASSIFICATION	0.99986916596314	WITHOUT_CLASSIFICATION	1.3083403686009348E-4	IMPLEMENTATION
// Build the CFG for this scope -- supported only by methods & closures	WITHOUT_CLASSIFICATION	0.9999095355060197	WITHOUT_CLASSIFICATION	9.046449398025818E-5	IMPLEMENTATION
// Get the control flow graph for this scope -- only valid for methods & closures	WITHOUT_CLASSIFICATION	0.9999730388250648	WITHOUT_CLASSIFICATION	2.6961174935064764E-5	IMPLEMENTATION
// While processing loops, this returns the loop that we are processing.	WITHOUT_CLASSIFICATION	0.9999184228327717	WITHOUT_CLASSIFICATION	8.157716722829008E-5	IMPLEMENTATION
// Record the loop we are beginning to process	WITHOUT_CLASSIFICATION	0.9998613205725645	WITHOUT_CLASSIFICATION	1.386794274355188E-4	IMPLEMENTATION
// Indicate that we are done processing the loop	WITHOUT_CLASSIFICATION	0.9998782811657231	WITHOUT_CLASSIFICATION	1.2171883427688742E-4	IMPLEMENTATION
// Run the passed in compiler pass on this scope!	WITHOUT_CLASSIFICATION	0.999867338894445	WITHOUT_CLASSIFICATION	1.3266110555504694E-4	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9998909469463342	WITHOUT_CLASSIFICATION	1.0905305366573113E-4	IMPLEMENTATION
// Readline	WITHOUT_CLASSIFICATION	0.9995387778732916	WITHOUT_CLASSIFICATION	4.612221267084357E-4	IMPLEMENTATION
// If the cfg of the method is around, print the CFG!	WITHOUT_CLASSIFICATION	0.9999146653445457	WITHOUT_CLASSIFICATION	8.533465545435384E-5	IMPLEMENTATION
// Optimize some core class method calls for constant values	WITHOUT_CLASSIFICATION	0.9998946288439784	WITHOUT_CLASSIFICATION	1.0537115602150438E-4	IMPLEMENTATION
// If 'r' is not a constant, it could actually be a compound value! // Look in our value map to see if we have a simplified value for the receiver.	WITHOUT_CLASSIFICATION	0.9999820144928009	WITHOUT_CLASSIFICATION	1.7985507199160846E-5	IMPLEMENTATION
// Check if we can optimize this call based on the receiving method and receiver type // Use the simplified receiver!	WITHOUT_CLASSIFICATION	0.999865918626342	WITHOUT_CLASSIFICATION	1.3408137365801429E-4	IMPLEMENTATION
// If we got a simplified value, mark the call dead and insert a copy in its place!	WITHOUT_CLASSIFICATION	0.9998909673376041	WITHOUT_CLASSIFICATION	1.0903266239593522E-4	IMPLEMENTATION
// If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!	WITHOUT_CLASSIFICATION	0.9999740386330042	WITHOUT_CLASSIFICATION	2.5961366995770448E-5	IMPLEMENTATION
/* ----------- Public abstract methods ---------- */	WITHOUT_CLASSIFICATION	0.9999403069578462	WITHOUT_CLASSIFICATION	5.969304215383758E-5	IMPLEMENTATION
/* ----------- Public methods with a default implementation ---------- */	WITHOUT_CLASSIFICATION	0.999730686181955	WITHOUT_CLASSIFICATION	2.6931381804494626E-4	IMPLEMENTATION
// Compute meet over all "sources" and compute "destination" basic blocks that should then be processed.  // sources & targets depends on direction of the data flow problem	WITHOUT_CLASSIFICATION	0.9999706388577285	WITHOUT_CLASSIFICATION	2.9361142271393345E-5	IMPLEMENTATION
// If the solution has changed, add "dsts" to the work list. // No duplicates please which is why we have bbset.	WITHOUT_CLASSIFICATION	0.9999464248267765	WITHOUT_CLASSIFICATION	5.357517322345916E-5	IMPLEMENTATION
/* --------- Protected fields/methods below --------- */	WITHOUT_CLASSIFICATION	0.9998972537696967	WITHOUT_CLASSIFICATION	1.0274623030330211E-4	IMPLEMENTATION
// Dataflow problem with which this node is associated // CFG node for which this node contains info.	WITHOUT_CLASSIFICATION	0.9999493503355111	WITHOUT_CLASSIFICATION	5.064966448881599E-5	IMPLEMENTATION
/* -------------- Public fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999589199904851	WITHOUT_CLASSIFICATION	4.108000951498943E-5	IMPLEMENTATION
// ------- Abstract methods without a default implementation -------	WITHOUT_CLASSIFICATION	0.9996393409528961	WITHOUT_CLASSIFICATION	3.606590471039017E-4	IMPLEMENTATION
// ------- Default implementation methods below -------	WITHOUT_CLASSIFICATION	0.9992186893161294	WITHOUT_CLASSIFICATION	7.813106838705204E-4	IMPLEMENTATION
/* Compute Meet Over All Paths solution for this dataflow problem on the input CFG.     * This implements a standard worklist algorithm. */	WITHOUT_CLASSIFICATION	0.997034311720862	WITHOUT_CLASSIFICATION	0.0029656882791379235	IMPLEMENTATION
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9996703746233375	WITHOUT_CLASSIFICATION	3.2962537666247676E-4	IMPLEMENTATION
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9996703746233375	WITHOUT_CLASSIFICATION	3.2962537666247676E-4	IMPLEMENTATION
/* -------------- Packaged/protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999619634078565	WITHOUT_CLASSIFICATION	3.803659214342143E-5	IMPLEMENTATION
// We want unique ids for dataflow variables	WITHOUT_CLASSIFICATION	0.9997181210385001	WITHOUT_CLASSIFICATION	2.8187896149980913E-4	IMPLEMENTATION
/* -------------- Protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999582649409186	WITHOUT_CLASSIFICATION	4.173505908150591E-5	IMPLEMENTATION
/* -------------- Private fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999637966648467	WITHOUT_CLASSIFICATION	3.62033351534211E-5	IMPLEMENTATION
// Initialize all flow graph nodes 	WITHOUT_CLASSIFICATION	0.9998975861998863	WITHOUT_CLASSIFICATION	1.0241380011372158E-4	IMPLEMENTATION
/* Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses */	WITHOUT_CLASSIFICATION	0.9998308303676099	WITHOUT_CLASSIFICATION	1.691696323900665E-4	IMPLEMENTATION
/* ******************** PUBLIC INTERFACE ******************* */	WITHOUT_CLASSIFICATION	0.9997752693376669	WITHOUT_CLASSIFICATION	2.2473066233318675E-4	IMPLEMENTATION
// Unique ID assigned to this variable	WITHOUT_CLASSIFICATION	0.9997491551776009	WITHOUT_CLASSIFICATION	2.508448223991041E-4	IMPLEMENTATION
// start out with a default RubyObject allocator	WITHOUT_CLASSIFICATION	0.9999321840398214	WITHOUT_CLASSIFICATION	6.781596017858637E-5	IMPLEMENTATION
// switch to an allocator based on a default constructor	WITHOUT_CLASSIFICATION	0.9997637209124162	WITHOUT_CLASSIFICATION	2.3627908758378345E-4	IMPLEMENTATION
/* ----------- Public Interface ------------ */	WITHOUT_CLASSIFICATION	0.999951353594816	WITHOUT_CLASSIFICATION	4.864640518402736E-5	IMPLEMENTATION
// class or module	WITHOUT_CLASSIFICATION	0.999701430951502	WITHOUT_CLASSIFICATION	2.985690484979684E-4	IMPLEMENTATION
// OUT = UNION(IN(succs))	WITHOUT_CLASSIFICATION	0.9995793788471994	WITHOUT_CLASSIFICATION	4.2062115280061324E-4	IMPLEMENTATION
// Traverse the instructions in this basic block in reverse order!	WITHOUT_CLASSIFICATION	0.9998901258680288	WITHOUT_CLASSIFICATION	1.0987413197127217E-4	IMPLEMENTATION
// v is defined => It is no longer live before 'i'	WITHOUT_CLASSIFICATION	0.9998523538802297	WITHOUT_CLASSIFICATION	1.4764611977017495E-4	IMPLEMENTATION
// IN is the same!	WITHOUT_CLASSIFICATION	0.9997041222256916	WITHOUT_CLASSIFICATION	2.9587777430845026E-4	IMPLEMENTATION
// IN changed!	WITHOUT_CLASSIFICATION	0.9996621719292962	WITHOUT_CLASSIFICATION	3.378280707037447E-4	IMPLEMENTATION
/* ---------- Protected / package fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999271006426984	WITHOUT_CLASSIFICATION	7.289935730157667E-5	IMPLEMENTATION
// If 'v' is not live at the instruction site, and it has no side effects, mark it dead!	WITHOUT_CLASSIFICATION	0.9999076828427587	WITHOUT_CLASSIFICATION	9.231715724126895E-5	IMPLEMENTATION
// Do not mark this instruction's operands live if the instruction itself is dead!	WITHOUT_CLASSIFICATION	0.9999146612084883	WITHOUT_CLASSIFICATION	8.533879151173317E-5	IMPLEMENTATION
/* ---------- Private fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999296597532605	WITHOUT_CLASSIFICATION	7.034024673943477E-5	IMPLEMENTATION
// Variables live at entry of this node // Variables live at exit of node // Temporary set of live variables // Size of the "_in" and "_out" bit sets 	WITHOUT_CLASSIFICATION	0.9998987075156711	WITHOUT_CLASSIFICATION	1.0129248432893701E-4	IMPLEMENTATION
// Used during optimization passes to propagate type and other information	WITHOUT_CLASSIFICATION	0.9998950211110769	WITHOUT_CLASSIFICATION	1.0497888892316518E-4	IMPLEMENTATION
// Does this instruction have side effects as a result of its operation // This information is used in optimization phases to impact dead code elimination // and other optimization passes	WITHOUT_CLASSIFICATION	0.9999798067700476	WITHOUT_CLASSIFICATION	2.019322995239939E-5	IMPLEMENTATION
/* --------- "Abstract"/"please-override" methods --------- */	WITHOUT_CLASSIFICATION	0.9999021341650078	WITHOUT_CLASSIFICATION	9.78658349921707E-5	IMPLEMENTATION
/* Array of all operands for this instruction */	WITHOUT_CLASSIFICATION	0.9998881082078377	WITHOUT_CLASSIFICATION	1.1189179216226862E-4	IMPLEMENTATION
/* List of all variables used by all operands of this instruction */	WITHOUT_CLASSIFICATION	0.999863373573245	WITHOUT_CLASSIFICATION	1.3662642675495672E-4	IMPLEMENTATION
/*      * This method takes as input a map of operands to their values, and outputs     *     * If the value map provides a value for any of the instruction's operands     * this method is expected to replace the original operands with the simplified values.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify     */	WITHOUT_CLASSIFICATION	0.9999479588435168	WITHOUT_CLASSIFICATION	5.204115648321067E-5	IMPLEMENTATION
// By default, no simplifications!	WITHOUT_CLASSIFICATION	0.9998625965259337	WITHOUT_CLASSIFICATION	1.3740347406637177E-4	IMPLEMENTATION
// Can this call lead to ruby code getting modified?   // If we don't know what method we are calling, we assume it can (pessimistic, but safe!) // If we do know the target method, we ask the method itself whether it modifies ruby code	WITHOUT_CLASSIFICATION	0.9996865233467348	WITHOUT_CLASSIFICATION	3.1347665326523214E-4	IMPLEMENTATION
// By default, return instructions cannot be deleted	WITHOUT_CLASSIFICATION	0.9999623116606885	WITHOUT_CLASSIFICATION	3.768833931152032E-5	IMPLEMENTATION
// If true, returns the rest of the array starting at the index	WITHOUT_CLASSIFICATION	0.9999323610043224	WITHOUT_CLASSIFICATION	6.763899567762885E-5	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999604164084627	WITHOUT_CLASSIFICATION	3.958359153728907E-5	IMPLEMENTATION
// Map of label & basic blocks with that label	WITHOUT_CLASSIFICATION	0.999734912198813	WITHOUT_CLASSIFICATION	2.6508780118699354E-4	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999604164084627	WITHOUT_CLASSIFICATION	3.958359153728907E-5	IMPLEMENTATION
// You can only value-replace atomic values	WITHOUT_CLASSIFICATION	0.9998502349238005	WITHOUT_CLASSIFICATION	1.4976507619950005E-4	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9997529271293145	WITHOUT_CLASSIFICATION	2.470728706855592E-4	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9997529271293145	WITHOUT_CLASSIFICATION	2.470728706855592E-4	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9997529271293145	WITHOUT_CLASSIFICATION	2.470728706855592E-4	IMPLEMENTATION
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999470885790298	WITHOUT_CLASSIFICATION	5.2911420970121855E-5	IMPLEMENTATION
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999470885790298	WITHOUT_CLASSIFICATION	5.2911420970121855E-5	IMPLEMENTATION
// The operand that this attribute targets //    DEFERRED //    AttributeValue _val;       // Attribute value	WITHOUT_CLASSIFICATION	0.9999472928053937	WITHOUT_CLASSIFICATION	5.2707194606112524E-5	IMPLEMENTATION
// Arrays, Ranges, etc. are compound values // Variables, fixnums, floats, etc. are "atomic" values	WITHOUT_CLASSIFICATION	0.9998405835329801	WITHOUT_CLASSIFICATION	1.5941646701990027E-4	IMPLEMENTATION
// Get the target class of this operand, if we know it!	WITHOUT_CLASSIFICATION	0.9999799873630744	WITHOUT_CLASSIFICATION	2.001263692557103E-5	IMPLEMENTATION
// The following constants capture pre-known static call sites -- used to implement ruby internals	WITHOUT_CLASSIFICATION	0.99554939998676	WITHOUT_CLASSIFICATION	0.004450600013240106	IMPLEMENTATION
/* Nothing to do by default */	WITHOUT_CLASSIFICATION	0.999933296489966	WITHOUT_CLASSIFICATION	6.67035100340574E-5	IMPLEMENTATION
// Map of label & basic blocks which are waiting for a bb with that label	WITHOUT_CLASSIFICATION	0.999770662233735	WITHOUT_CLASSIFICATION	2.2933776626494248E-4	IMPLEMENTATION
// Init before building basic blocks below!	WITHOUT_CLASSIFICATION	0.9997455881137448	WITHOUT_CLASSIFICATION	2.544118862552071E-4	IMPLEMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9995263940686376	WITHOUT_CLASSIFICATION	4.7360593136245904E-4	IMPLEMENTATION
// Scope (method/closure) to which this cfg belongs // Entry BB -- dummy // Exit BB -- dummy // The actual graph // Next available basic block id	WITHOUT_CLASSIFICATION	0.9998886891815196	WITHOUT_CLASSIFICATION	1.1131081848030934E-4	IMPLEMENTATION
// Jump instruction bbs dont add an edge to the succeeding bb by default	WITHOUT_CLASSIFICATION	0.9999471243796032	WITHOUT_CLASSIFICATION	5.28756203968388E-5	IMPLEMENTATION
// Add forward ref. edges	WITHOUT_CLASSIFICATION	0.9997926388372894	WITHOUT_CLASSIFICATION	2.0736116271065334E-4	IMPLEMENTATION
// currBB cannot be null!	WITHOUT_CLASSIFICATION	0.9997293369400877	WITHOUT_CLASSIFICATION	2.706630599122989E-4	IMPLEMENTATION
// Add a forward reference from tgt -> currBB	WITHOUT_CLASSIFICATION	0.9999035229691097	WITHOUT_CLASSIFICATION	9.647703089032736E-5	IMPLEMENTATION
// root-level logic	WITHOUT_CLASSIFICATION	0.9996677345439702	WITHOUT_CLASSIFICATION	3.322654560297586E-4	IMPLEMENTATION
// root-level methods	WITHOUT_CLASSIFICATION	0.9997668876527401	WITHOUT_CLASSIFICATION	2.3311234725988575E-4	IMPLEMENTATION
// root-level classes	WITHOUT_CLASSIFICATION	0.9997953317868651	WITHOUT_CLASSIFICATION	2.0466821313493762E-4	IMPLEMENTATION
//        case 4: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); //            break; //        case 5: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); //            break;	WITHOUT_CLASSIFICATION	0.9999752988492348	WITHOUT_CLASSIFICATION	2.4701150765238313E-5	IMPLEMENTATION
// load receiver	WITHOUT_CLASSIFICATION	0.9996272522761185	WITHOUT_CLASSIFICATION	3.727477238814615E-4	IMPLEMENTATION
// load receiver	WITHOUT_CLASSIFICATION	0.9996272522761185	WITHOUT_CLASSIFICATION	3.727477238814615E-4	IMPLEMENTATION
// receiver	WITHOUT_CLASSIFICATION	0.9995422577859189	WITHOUT_CLASSIFICATION	4.577422140811053E-4	IMPLEMENTATION
// load arguments	WITHOUT_CLASSIFICATION	0.9997132647441406	WITHOUT_CLASSIFICATION	2.867352558595207E-4	IMPLEMENTATION
// load arguments	WITHOUT_CLASSIFICATION	0.9997132647441406	WITHOUT_CLASSIFICATION	2.867352558595207E-4	IMPLEMENTATION
//        case 4: //        case 5:	WITHOUT_CLASSIFICATION	0.9999275672605941	WITHOUT_CLASSIFICATION	7.243273940599664E-5	IMPLEMENTATION
// Object[] args	WITHOUT_CLASSIFICATION	0.9996873195958709	WITHOUT_CLASSIFICATION	3.126804041291295E-4	IMPLEMENTATION
// load handle	WITHOUT_CLASSIFICATION	0.9996244330976676	WITHOUT_CLASSIFICATION	3.7556690233240533E-4	IMPLEMENTATION
// args array	WITHOUT_CLASSIFICATION	0.9995373465139386	WITHOUT_CLASSIFICATION	4.6265348606149416E-4	IMPLEMENTATION
// i'th argument	WITHOUT_CLASSIFICATION	0.9996270086084744	WITHOUT_CLASSIFICATION	3.7299139152555707E-4	IMPLEMENTATION
// invoke specific arity version	WITHOUT_CLASSIFICATION	0.9997308032260402	WITHOUT_CLASSIFICATION	2.6919677395979635E-4	IMPLEMENTATION
// Object arg0	WITHOUT_CLASSIFICATION	0.99968008736439	WITHOUT_CLASSIFICATION	3.199126356100865E-4	IMPLEMENTATION
// useful for code completion inside the IRB	WITHOUT_CLASSIFICATION	0.999834796382604	WITHOUT_CLASSIFICATION	1.6520361739610527E-4	IMPLEMENTATION
// No editing before startPos	WITHOUT_CLASSIFICATION	0.999745410474306	WITHOUT_CLASSIFICATION	2.545895256939624E-4	IMPLEMENTATION
// no silly ticks!	WITHOUT_CLASSIFICATION	0.9996135116204838	WITHOUT_CLASSIFICATION	3.864883795162061E-4	IMPLEMENTATION
// no candidates? Fail.	WITHOUT_CLASSIFICATION	0.9996524824212136	WITHOUT_CLASSIFICATION	3.4751757878633563E-4	IMPLEMENTATION
// at end	WITHOUT_CLASSIFICATION	0.9965718734919222	WITHOUT_CLASSIFICATION	0.0034281265080777727	IMPLEMENTATION
// undo check	WITHOUT_CLASSIFICATION	0.9995224938181566	WITHOUT_CLASSIFICATION	4.775061818434772E-4	IMPLEMENTATION
// Explicit reference to these vars as symbols...	WITHOUT_CLASSIFICATION	0.9998850804240302	WITHOUT_CLASSIFICATION	1.1491957596972238E-4	IMPLEMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9995263940686376	WITHOUT_CLASSIFICATION	4.7360593136245904E-4	IMPLEMENTATION
//\t\n\"\\'`@$><=;|&{(	WITHOUT_CLASSIFICATION	0.9995793788471994	WITHOUT_CLASSIFICATION	4.2062115280061324E-4	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.9997774275463573	WITHOUT_CLASSIFICATION	2.2257245364275016E-4	IMPLEMENTATION
// no check for '*'	WITHOUT_CLASSIFICATION	0.9997306449219912	WITHOUT_CLASSIFICATION	2.693550780088635E-4	IMPLEMENTATION
// no check for '*'	WITHOUT_CLASSIFICATION	0.9997306449219912	WITHOUT_CLASSIFICATION	2.693550780088635E-4	IMPLEMENTATION
// Binding provided for scope, use it	WITHOUT_CLASSIFICATION	0.999803116417466	WITHOUT_CLASSIFICATION	1.9688358253395043E-4	IMPLEMENTATION
// this is ensured by the callers	WITHOUT_CLASSIFICATION	0.9999344856131069	WITHOUT_CLASSIFICATION	6.551438689313616E-5	IMPLEMENTATION
// no binding, just eval in "current" frame (caller's frame)	WITHOUT_CLASSIFICATION	0.9998061303963046	WITHOUT_CLASSIFICATION	1.938696036953454E-4	IMPLEMENTATION
// restore position	WITHOUT_CLASSIFICATION	0.9996959395404976	WITHOUT_CLASSIFICATION	3.040604595023938E-4	IMPLEMENTATION
/* Something like cvar_cbase() from eval.c, factored out for the benefit     * of all the classvar-related node evaluations */	WITHOUT_CLASSIFICATION	0.9998961786495707	WITHOUT_CLASSIFICATION	1.038213504293998E-4	IMPLEMENTATION
// Used by the compiler to simplify arg processing	WITHOUT_CLASSIFICATION	0.9999137962477305	WITHOUT_CLASSIFICATION	8.620375226944993E-5	IMPLEMENTATION
// JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace	WITHOUT_CLASSIFICATION	0.9998607456986741	WITHOUT_CLASSIFICATION	1.3925430132589694E-4	IMPLEMENTATION
// MRI does similar thing on MacOS X with 'EditLine wrapper'.	WITHOUT_CLASSIFICATION	0.9997677309632298	WITHOUT_CLASSIFICATION	2.3226903677020473E-4	IMPLEMENTATION
// We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)	WITHOUT_CLASSIFICATION	0.9999711735846335	WITHOUT_CLASSIFICATION	2.8826415366546664E-5	IMPLEMENTATION
// JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)	WITHOUT_CLASSIFICATION	0.9998694500965849	WITHOUT_CLASSIFICATION	1.305499034151146E-4	IMPLEMENTATION
// not overridden, let's go	WITHOUT_CLASSIFICATION	0.9988232414840087	WITHOUT_CLASSIFICATION	0.0011767585159912538	IMPLEMENTATION
/* Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8() */	WITHOUT_CLASSIFICATION	0.9997741299423062	WITHOUT_CLASSIFICATION	2.2587005769389402E-4	IMPLEMENTATION
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
// Complete using a Proc object	WITHOUT_CLASSIFICATION	0.9998300299368269	WITHOUT_CLASSIFICATION	1.6997006317305094E-4	IMPLEMENTATION
// clear basename so it's anonymous when raising	WITHOUT_CLASSIFICATION	0.9997758124207278	WITHOUT_CLASSIFICATION	2.241875792721329E-4	IMPLEMENTATION
// These are not really used by timeout, but exposed for compatibility	WITHOUT_CLASSIFICATION	0.9999545214249325	WITHOUT_CLASSIFICATION	4.5478575067517105E-5	IMPLEMENTATION
// Timeout module methods	WITHOUT_CLASSIFICATION	0.9997019227208033	WITHOUT_CLASSIFICATION	2.980772791967495E-4	IMPLEMENTATION
// Toplevel defines	WITHOUT_CLASSIFICATION	0.99956879150624	WITHOUT_CLASSIFICATION	4.3120849375995077E-4	IMPLEMENTATION
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9996760281620306	WITHOUT_CLASSIFICATION	3.2397183796950834E-4	IMPLEMENTATION
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9997608871495807	WITHOUT_CLASSIFICATION	2.3911285041933048E-4	IMPLEMENTATION
// if it's the exception we're expecting	WITHOUT_CLASSIFICATION	0.9997339044982095	WITHOUT_CLASSIFICATION	2.6609550179051224E-4	IMPLEMENTATION
// and we were given a specific exception	WITHOUT_CLASSIFICATION	0.9997362210648617	WITHOUT_CLASSIFICATION	2.6377893513830376E-4	IMPLEMENTATION
// otherwise, rethrow	WITHOUT_CLASSIFICATION	0.9994498427958485	WITHOUT_CLASSIFICATION	5.50157204151508E-4	IMPLEMENTATION
// // Remove the Executor task now, to avoid cancelled tasks accumulating // until an Executor thread can schedule and remove them //	WITHOUT_CLASSIFICATION	0.9999468260837845	WITHOUT_CLASSIFICATION	5.317391621555553E-5	IMPLEMENTATION
// // If the task was scheduled, wait for it to finish before polling // for the exception it would have thrown. //	WITHOUT_CLASSIFICATION	0.999873625695159	WITHOUT_CLASSIFICATION	1.2637430484093356E-4	IMPLEMENTATION
// NetProtocolBufferedIO	WITHOUT_CLASSIFICATION	0.9995838260302945	WITHOUT_CLASSIFICATION	4.161739697054138E-4	IMPLEMENTATION
/* When a length is given, read_string acts like get_bytes */	WITHOUT_CLASSIFICATION	0.9997999091854566	WITHOUT_CLASSIFICATION	2.0009081454348037E-4	IMPLEMENTATION
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9998438082541582	WITHOUT_CLASSIFICATION	1.5619174584177796E-4	IMPLEMENTATION
// ARRAY and STRUCT are only used internally	WITHOUT_CLASSIFICATION	0.9998292945749324	WITHOUT_CLASSIFICATION	1.7070542506759446E-4	IMPLEMENTATION
// If no release method is defined, then memory leaks will result.	WITHOUT_CLASSIFICATION	0.9997879682493377	WITHOUT_CLASSIFICATION	2.120317506623434E-4	IMPLEMENTATION
/*     * This variant of newStruct is called from StructLayoutBuilder     */	WITHOUT_CLASSIFICATION	0.9999290004841657	WITHOUT_CLASSIFICATION	7.099951583437354E-5	IMPLEMENTATION
// This also handles unsigned int -> negative signed int conversion	WITHOUT_CLASSIFICATION	0.9999090933333444	WITHOUT_CLASSIFICATION	9.090666665559374E-5	IMPLEMENTATION
// Windows is LLP64	WITHOUT_CLASSIFICATION	0.9995566300894773	WITHOUT_CLASSIFICATION	4.4336991052275674E-4	IMPLEMENTATION
// Older JDK on linux map 'c' to 'libc.so' which doesn't work	WITHOUT_CLASSIFICATION	0.9998269196680963	WITHOUT_CLASSIFICATION	1.7308033190374943E-4	IMPLEMENTATION
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9997600249000872	WITHOUT_CLASSIFICATION	2.39975099912858E-4	IMPLEMENTATION
// $blah	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9998438082541582	WITHOUT_CLASSIFICATION	1.5619174584177796E-4	IMPLEMENTATION
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9998028071969653	WITHOUT_CLASSIFICATION	1.9719280303468164E-4	IMPLEMENTATION
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9997600249000872	WITHOUT_CLASSIFICATION	2.39975099912858E-4	IMPLEMENTATION
// // Keep a reference to the temporary memory in the cache so it does // not get freed by the GC until the struct is freed //	WITHOUT_CLASSIFICATION	0.999968700637948	WITHOUT_CLASSIFICATION	3.129936205204649E-5	IMPLEMENTATION
// Add Pointer::NULL as a constant	WITHOUT_CLASSIFICATION	0.9998864889189942	WITHOUT_CLASSIFICATION	1.1351108100577E-4	IMPLEMENTATION
// Create the ordered list of field names from the map	WITHOUT_CLASSIFICATION	0.9999781033156536	WITHOUT_CLASSIFICATION	2.1896684346428703E-5	IMPLEMENTATION
// Assemble a [ :name, offset ] array	WITHOUT_CLASSIFICATION	0.9997333242597674	WITHOUT_CLASSIFICATION	2.666757402326271E-4	IMPLEMENTATION
//                case FLOAT:	WITHOUT_CLASSIFICATION	0.9998956423324746	WITHOUT_CLASSIFICATION	1.0435766752545024E-4	IMPLEMENTATION
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9998711129686289	WITHOUT_CLASSIFICATION	1.2888703137109369E-4	IMPLEMENTATION
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9998711129686289	WITHOUT_CLASSIFICATION	1.2888703137109369E-4	IMPLEMENTATION
// No auto cleanup needed	WITHOUT_CLASSIFICATION	0.996537671061196	WITHOUT_CLASSIFICATION	0.003462328938803966	IMPLEMENTATION
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9997406397201756	WITHOUT_CLASSIFICATION	2.593602798243874E-4	IMPLEMENTATION
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999663356198047	WITHOUT_CLASSIFICATION	3.36643801952306E-5	IMPLEMENTATION
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999663356198047	WITHOUT_CLASSIFICATION	3.36643801952306E-5	IMPLEMENTATION
/*         * If there is exactly _one_ callback argument to the function,         * then a block can be given and automatically subsituted for the callback         * parameter.         */	WITHOUT_CLASSIFICATION	0.9999991058203179	WITHOUT_CLASSIFICATION	8.941796819967458E-7	IMPLEMENTATION
/*------------------------------------------------------------------------*/	WITHOUT_CLASSIFICATION	0.9998414135232013	WITHOUT_CLASSIFICATION	1.58586476798589E-4	IMPLEMENTATION
//AF_INET	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
//AF_INET	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
// RubyUNIXServer	WITHOUT_CLASSIFICATION	0.9995229235115087	WITHOUT_CLASSIFICATION	4.7707648849120473E-4	IMPLEMENTATION
// line 321	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// // Set up for potentially fast-int operations //	WITHOUT_CLASSIFICATION	0.999920559717557	WITHOUT_CLASSIFICATION	7.944028244291983E-5	IMPLEMENTATION
// // Hook up the MemoryPointer class if its not already there //	WITHOUT_CLASSIFICATION	0.9999562474537035	WITHOUT_CLASSIFICATION	4.3752546296570315E-5	IMPLEMENTATION
// This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and // (2) Socket.getChannel() seems to return null in some cases	WITHOUT_CLASSIFICATION	0.9999817734513533	WITHOUT_CLASSIFICATION	1.8226548646691123E-5	IMPLEMENTATION
// no UNIXSockets on Windows	WITHOUT_CLASSIFICATION	0.9996881732416499	WITHOUT_CLASSIFICATION	3.1182675835016247E-4	IMPLEMENTATION
// Sockaddr_un has different structure on different platforms. // See JRUBY-2213 for more details.	WITHOUT_CLASSIFICATION	0.9998399471614632	WITHOUT_CLASSIFICATION	1.600528385368561E-4	IMPLEMENTATION
// There is something valid in the sun_path component	WITHOUT_CLASSIFICATION	0.9999730872462158	WITHOUT_CLASSIFICATION	2.6912753784106638E-5	IMPLEMENTATION
// RubyIPSocket	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
// host is nil or the empty string, bind to INADDR_ANY	WITHOUT_CLASSIFICATION	0.9999309132467683	WITHOUT_CLASSIFICATION	6.90867532317524E-5	IMPLEMENTATION
// host and port given	WITHOUT_CLASSIFICATION	0.9995924993327361	WITHOUT_CLASSIFICATION	4.0750066726398244E-4	IMPLEMENTATION
// RubyUDPSocket	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
// By default we always reverse lookup unless do_not_reverse_lookup set.	WITHOUT_CLASSIFICATION	0.9998981472420926	WITHOUT_CLASSIFICATION	1.0185275790739076E-4	IMPLEMENTATION
// make sure descriptor is registered	WITHOUT_CLASSIFICATION	0.9999073998186961	WITHOUT_CLASSIFICATION	9.260018130385659E-5	IMPLEMENTATION
// continue with normal initialization	WITHOUT_CLASSIFICATION	0.999952508149709	WITHOUT_CLASSIFICATION	4.7491850290955894E-5	IMPLEMENTATION
// recv returns nil on EOF	WITHOUT_CLASSIFICATION	0.9997138153682839	WITHOUT_CLASSIFICATION	2.861846317162176E-4	IMPLEMENTATION
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9997226443738888	WITHOUT_CLASSIFICATION	2.773556261112635E-4	IMPLEMENTATION
// RubyBasicSocket	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
// we don't have to define any that we don't support; see socket.c	WITHOUT_CLASSIFICATION	0.9999195138226442	WITHOUT_CLASSIFICATION	8.048617735579291E-5	IMPLEMENTATION
// mandatory constants we haven't implemented	WITHOUT_CLASSIFICATION	0.8900773974898003	WITHOUT_CLASSIFICATION	0.10992260251019977	IMPLEMENTATION
// constants webrick crashes without	WITHOUT_CLASSIFICATION	0.9998187287287769	WITHOUT_CLASSIFICATION	1.8127127122316268E-4	IMPLEMENTATION
// More constants needed by specs	WITHOUT_CLASSIFICATION	0.9996156695307814	WITHOUT_CLASSIFICATION	3.843304692186742E-4	IMPLEMENTATION
// normal file descriptor..try to work with it	WITHOUT_CLASSIFICATION	0.9998218614758436	WITHOUT_CLASSIFICATION	1.7813852415639252E-4	IMPLEMENTATION
// AF_INET	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
// 255.255.255.255	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
// 0.0.0.0	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
//def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)	WITHOUT_CLASSIFICATION	0.9997038087784949	WITHOUT_CLASSIFICATION	2.961912215051508E-4	IMPLEMENTATION
// line 323	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9997161950814952	WITHOUT_CLASSIFICATION	2.8380491850475177E-4	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9997161950814952	WITHOUT_CLASSIFICATION	2.8380491850475177E-4	IMPLEMENTATION
// ok, it's a socket...set values accordingly // just using AF_INET since we can't tell from SocketChannel...	WITHOUT_CLASSIFICATION	0.9998609202990661	WITHOUT_CLASSIFICATION	1.3907970093391853E-4	IMPLEMENTATION
// datagram, set accordingly // again, AF_INET	WITHOUT_CLASSIFICATION	0.9997634095739962	WITHOUT_CLASSIFICATION	2.3659042600382508E-4	IMPLEMENTATION
//IRubyObject family = args[2];	WITHOUT_CLASSIFICATION	0.9997550627092132	WITHOUT_CLASSIFICATION	2.449372907867993E-4	IMPLEMENTATION
// When Socket::AI_PASSIVE and host is nil, return 'any' address. 	WITHOUT_CLASSIFICATION	0.9998363479948483	WITHOUT_CLASSIFICATION	1.6365200515166284E-4	IMPLEMENTATION
// The value of 1 is for Socket::AI_PASSIVE.	WITHOUT_CLASSIFICATION	0.9998864175645918	WITHOUT_CLASSIFICATION	1.135824354081029E-4	IMPLEMENTATION
// RubySocket	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
// numeric host, use it for port	WITHOUT_CLASSIFICATION	0.9997719540411824	WITHOUT_CLASSIFICATION	2.2804595881773158E-4	IMPLEMENTATION
//            e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999168189177806	WITHOUT_CLASSIFICATION	8.318108221945907E-5	IMPLEMENTATION
// we were woken up without being selected...poll for thread events and go back to sleep	WITHOUT_CLASSIFICATION	0.9999376769499626	WITHOUT_CLASSIFICATION	6.232305003743682E-5	IMPLEMENTATION
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.99993579457428	WITHOUT_CLASSIFICATION	6.42054257200626E-5	IMPLEMENTATION
// no connection immediately accepted, let them try again	WITHOUT_CLASSIFICATION	0.9997296914754081	WITHOUT_CLASSIFICATION	2.70308524591808E-4	IMPLEMENTATION
// do nothing, just exit	WITHOUT_CLASSIFICATION	0.9999432627003768	WITHOUT_CLASSIFICATION	5.673729962327404E-5	IMPLEMENTATION
//nativeThread.setPriority(priority);	WITHOUT_CLASSIFICATION	0.9996992332091924	WITHOUT_CLASSIFICATION	3.007667908076121E-4	IMPLEMENTATION
// set thread context JRuby classloader here, for Ruby-owned thread	WITHOUT_CLASSIFICATION	0.9998270261979533	WITHOUT_CLASSIFICATION	1.7297380204673497E-4	IMPLEMENTATION
// uber-ThreadKill catcher, since it should always just mean "be dead"	WITHOUT_CLASSIFICATION	0.9994715365163995	WITHOUT_CLASSIFICATION	5.284634836004895E-4	IMPLEMENTATION
// Call the thread's code	WITHOUT_CLASSIFICATION	0.9997538103654944	WITHOUT_CLASSIFICATION	2.461896345055702E-4	IMPLEMENTATION
// Someone called exit!, so we need to kill the main thread	WITHOUT_CLASSIFICATION	0.9997173267513036	WITHOUT_CLASSIFICATION	2.826732486963299E-4	IMPLEMENTATION
// restore context classloader, in case we're using a thread pool	WITHOUT_CLASSIFICATION	0.9999041631289481	WITHOUT_CLASSIFICATION	9.583687105192628E-5	IMPLEMENTATION
// be dead	WITHOUT_CLASSIFICATION	0.996537887222428	WITHOUT_CLASSIFICATION	0.0034621127775720747	IMPLEMENTATION
// loop until a context is available, to clean up softrefs that might have been collected	WITHOUT_CLASSIFICATION	0.9997931849997066	WITHOUT_CLASSIFICATION	2.0681500029349632E-4	IMPLEMENTATION
// all threads in ruby thread group plus main thread	WITHOUT_CLASSIFICATION	0.9997790588222724	WITHOUT_CLASSIFICATION	2.2094117772764548E-4	IMPLEMENTATION
// thread is not alive, skip it	WITHOUT_CLASSIFICATION	0.9998379924841828	WITHOUT_CLASSIFICATION	1.6200751581715704E-4	IMPLEMENTATION
// future is done or cancelled, skip it	WITHOUT_CLASSIFICATION	0.9997679474709572	WITHOUT_CLASSIFICATION	2.3205252904269486E-4	IMPLEMENTATION
// first, check if the sender has unreceived mail	WITHOUT_CLASSIFICATION	0.9998583463336953	WITHOUT_CLASSIFICATION	1.4165366630465522E-4	IMPLEMENTATION
// then deliver mail to the target	WITHOUT_CLASSIFICATION	0.9999250338714296	WITHOUT_CLASSIFICATION	7.49661285703787E-5	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.99951453549819	WITHOUT_CLASSIFICATION	4.8546450180990067E-4	IMPLEMENTATION
// Define a second version that doesn't take a block, so we have unique code paths for both cases.	WITHOUT_CLASSIFICATION	0.999788819751794	WITHOUT_CLASSIFICATION	2.1118024820605659E-4	IMPLEMENTATION
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9992402938704681	WITHOUT_CLASSIFICATION	7.597061295319769E-4	IMPLEMENTATION
// main body	WITHOUT_CLASSIFICATION	0.9995306949975915	WITHOUT_CLASSIFICATION	4.693050024084436E-4	IMPLEMENTATION
// return jump handling	WITHOUT_CLASSIFICATION	0.9998355545977677	WITHOUT_CLASSIFICATION	1.6444540223222318E-4	IMPLEMENTATION
// finally	WITHOUT_CLASSIFICATION	0.9968918846646807	WITHOUT_CLASSIFICATION	0.003108115335319334	IMPLEMENTATION
// return result if we're still good	WITHOUT_CLASSIFICATION	0.9999342855766167	WITHOUT_CLASSIFICATION	6.571442338337315E-5	IMPLEMENTATION
// redo jump handling	WITHOUT_CLASSIFICATION	0.9995282133693195	WITHOUT_CLASSIFICATION	4.7178663068055045E-4	IMPLEMENTATION
// clear the redo	WITHOUT_CLASSIFICATION	0.9996266147126602	WITHOUT_CLASSIFICATION	3.733852873398629E-4	IMPLEMENTATION
// get runtime, create jump error, and throw it	WITHOUT_CLASSIFICATION	0.9998523974723936	WITHOUT_CLASSIFICATION	1.476025276063588E-4	IMPLEMENTATION
// throw redo error if we're still good	WITHOUT_CLASSIFICATION	0.9997980461926043	WITHOUT_CLASSIFICATION	2.0195380739578068E-4	IMPLEMENTATION
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9996355770432188	WITHOUT_CLASSIFICATION	3.6442295678114795E-4	IMPLEMENTATION
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9995620080891516	WITHOUT_CLASSIFICATION	4.379919108484086E-4	IMPLEMENTATION
// No required specified, check actual number of required args	WITHOUT_CLASSIFICATION	0.9998832722889799	WITHOUT_CLASSIFICATION	1.1672771102006984E-4	IMPLEMENTATION
// actual required is less than 3, so we use specific arity	WITHOUT_CLASSIFICATION	0.9998022977038515	WITHOUT_CLASSIFICATION	1.9770229614844356E-4	IMPLEMENTATION
// actual required is greater than 3, raise error (we don't support actual required > 3)	WITHOUT_CLASSIFICATION	0.9997450575382577	WITHOUT_CLASSIFICATION	2.549424617422916E-4	IMPLEMENTATION
// simple path, no multimethod	WITHOUT_CLASSIFICATION	0.9996160941847475	WITHOUT_CLASSIFICATION	3.8390581525251424E-4	IMPLEMENTATION
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9995143513754952	WITHOUT_CLASSIFICATION	4.85648624504911E-4	IMPLEMENTATION
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9995143513754952	WITHOUT_CLASSIFICATION	4.85648624504911E-4	IMPLEMENTATION
// normal all-rest method	WITHOUT_CLASSIFICATION	0.99964418202711	WITHOUT_CLASSIFICATION	3.558179728900165E-4	IMPLEMENTATION
// for zero, one, two, three arities, JavaMethod.JavaMethod*.call(...IRubyObject[] args...) will check	WITHOUT_CLASSIFICATION	0.9998073306073615	WITHOUT_CLASSIFICATION	1.9266939263855987E-4	IMPLEMENTATION
// promise to implement zero to N	WITHOUT_CLASSIFICATION	0.977653227875423	WITHOUT_CLASSIFICATION	0.022346772124576975	IMPLEMENTATION
// return	WITHOUT_CLASSIFICATION	0.9986002968351672	WITHOUT_CLASSIFICATION	0.00139970316483285	IMPLEMENTATION
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9997641568996675	WITHOUT_CLASSIFICATION	2.3584310033247015E-4	IMPLEMENTATION
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9997693517659921	WITHOUT_CLASSIFICATION	2.3064823400796876E-4	IMPLEMENTATION
// confirm minimum args provided	WITHOUT_CLASSIFICATION	0.999742470832893	WITHOUT_CLASSIFICATION	2.575291671070233E-4	IMPLEMENTATION
// confirm maximum not greater than optional	WITHOUT_CLASSIFICATION	0.9998354850490199	WITHOUT_CLASSIFICATION	1.6451495098018156E-4	IMPLEMENTATION
// Raise an error if arity does not match requirements	WITHOUT_CLASSIFICATION	0.9998806316393475	WITHOUT_CLASSIFICATION	1.1936836065262846E-4	IMPLEMENTATION
// tc	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
// self // name	WITHOUT_CLASSIFICATION	0.9995709069643955	WITHOUT_CLASSIFICATION	4.2909303560450824E-4	IMPLEMENTATION
// no args	WITHOUT_CLASSIFICATION	0.9971168851086726	WITHOUT_CLASSIFICATION	0.0028831148913274008	IMPLEMENTATION
// variable args with block	WITHOUT_CLASSIFICATION	0.9995913134480079	WITHOUT_CLASSIFICATION	4.0868655199206665E-4	IMPLEMENTATION
// variable args no block, load null block	WITHOUT_CLASSIFICATION	0.9997141305738458	WITHOUT_CLASSIFICATION	2.8586942615409786E-4	IMPLEMENTATION
// zero args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9997126372325574	WITHOUT_CLASSIFICATION	2.87362767442637E-4	IMPLEMENTATION
// one arg with block	WITHOUT_CLASSIFICATION	0.9995975696005649	WITHOUT_CLASSIFICATION	4.024303994351225E-4	IMPLEMENTATION
// one arg, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9997172291556607	WITHOUT_CLASSIFICATION	2.8277084433916977E-4	IMPLEMENTATION
// two args with block	WITHOUT_CLASSIFICATION	0.9996053600428356	WITHOUT_CLASSIFICATION	3.9463995716443735E-4	IMPLEMENTATION
// two args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9997131000567686	WITHOUT_CLASSIFICATION	2.868999432313294E-4	IMPLEMENTATION
// three args with block	WITHOUT_CLASSIFICATION	0.9996069129242742	WITHOUT_CLASSIFICATION	3.930870757258269E-4	IMPLEMENTATION
// three args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9997142291097675	WITHOUT_CLASSIFICATION	2.8577089023258125E-4	IMPLEMENTATION
// load block if it accepts block	WITHOUT_CLASSIFICATION	0.9997613508587964	WITHOUT_CLASSIFICATION	2.3864914120363606E-4	IMPLEMENTATION
// all other arg cases with block	WITHOUT_CLASSIFICATION	0.9997286872676469	WITHOUT_CLASSIFICATION	2.7131273235312444E-4	IMPLEMENTATION
// all other arg cases without block	WITHOUT_CLASSIFICATION	0.999741702239287	WITHOUT_CLASSIFICATION	2.582977607130156E-4	IMPLEMENTATION
// one arg, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999462361727143	WITHOUT_CLASSIFICATION	5.3763827285781045E-5	IMPLEMENTATION
// two args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999454509158182	WITHOUT_CLASSIFICATION	5.454908418171087E-5	IMPLEMENTATION
// three args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999456656355018	WITHOUT_CLASSIFICATION	5.433436449806601E-5	IMPLEMENTATION
// load target for invocations	WITHOUT_CLASSIFICATION	0.9997966695834872	WITHOUT_CLASSIFICATION	2.0333041651268146E-4	IMPLEMENTATION
// load receiver as original type for virtual invocation	WITHOUT_CLASSIFICATION	0.9998598332029929	WITHOUT_CLASSIFICATION	1.4016679700722248E-4	IMPLEMENTATION
// static invocation	WITHOUT_CLASSIFICATION	0.9996407640474847	WITHOUT_CLASSIFICATION	3.5923595251532395E-4	IMPLEMENTATION
// virtual invocation	WITHOUT_CLASSIFICATION	0.9996052904504862	WITHOUT_CLASSIFICATION	3.9470954951379507E-4	IMPLEMENTATION
// void return type, so we need to load a nil for returning below	WITHOUT_CLASSIFICATION	0.999808624348222	WITHOUT_CLASSIFICATION	1.9137565177803874E-4	IMPLEMENTATION
// normal finally and exit	WITHOUT_CLASSIFICATION	0.9996375117333677	WITHOUT_CLASSIFICATION	3.6248826663238246E-4	IMPLEMENTATION
// promise to implement one to N	WITHOUT_CLASSIFICATION	0.9748909077268975	WITHOUT_CLASSIFICATION	0.025109092273102485	IMPLEMENTATION
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9995620080891516	WITHOUT_CLASSIFICATION	4.379919108484086E-4	IMPLEMENTATION
// these are only needed if we have a non-noop call config	WITHOUT_CLASSIFICATION	0.9999282366658239	WITHOUT_CLASSIFICATION	7.176333417615341E-5	IMPLEMENTATION
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9997151118450803	WITHOUT_CLASSIFICATION	2.848881549196581E-4	IMPLEMENTATION
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9997151118450803	WITHOUT_CLASSIFICATION	2.848881549196581E-4	IMPLEMENTATION
// singleton classes don't get their own visibility domain	WITHOUT_CLASSIFICATION	0.9999434704241891	WITHOUT_CLASSIFICATION	5.652957581090421E-5	IMPLEMENTATION
// For visibility we need real meta class and not anonymous one from class << self	WITHOUT_CLASSIFICATION	0.9999370644262618	WITHOUT_CLASSIFICATION	6.293557373824624E-5	IMPLEMENTATION
// SimpleInvocationMethod	WITHOUT_CLASSIFICATION	0.9996082660762249	WITHOUT_CLASSIFICATION	3.917339237750663E-4	IMPLEMENTATION
// never reached	WITHOUT_CLASSIFICATION	0.9995351710265048	WITHOUT_CLASSIFICATION	4.648289734951732E-4	IMPLEMENTATION
// promise to implement N with block	WITHOUT_CLASSIFICATION	0.9776480633540822	WITHOUT_CLASSIFICATION	0.022351936645917864	IMPLEMENTATION
// promise to implement zero to N with block	WITHOUT_CLASSIFICATION	0.9777979412928148	WITHOUT_CLASSIFICATION	0.022202058707185175	IMPLEMENTATION
// promise to implement one to N with block	WITHOUT_CLASSIFICATION	0.9750530529429094	WITHOUT_CLASSIFICATION	0.024946947057090454	IMPLEMENTATION
// promise to implement two to N with block	WITHOUT_CLASSIFICATION	0.9696038057049426	WITHOUT_CLASSIFICATION	0.030396194295057445	IMPLEMENTATION
// promise to implement zero to three with block	WITHOUT_CLASSIFICATION	0.980232712810493	WITHOUT_CLASSIFICATION	0.019767287189507064	IMPLEMENTATION
// promise to implement one to three with block	WITHOUT_CLASSIFICATION	0.9786695541091304	WITHOUT_CLASSIFICATION	0.021330445890869635	IMPLEMENTATION
// promise to implement two to three with block	WITHOUT_CLASSIFICATION	0.9729122869273258	WITHOUT_CLASSIFICATION	0.027087713072674106	IMPLEMENTATION
// promise to implement three with block	WITHOUT_CLASSIFICATION	0.9589308920066446	WITHOUT_CLASSIFICATION	0.04106910799335534	IMPLEMENTATION
// promise to implement N	WITHOUT_CLASSIFICATION	0.9683098255393396	WITHOUT_CLASSIFICATION	0.03169017446066033	IMPLEMENTATION
// DumpingInvocationMethodFactory	WITHOUT_CLASSIFICATION	0.9997770801138021	WITHOUT_CLASSIFICATION	2.2291988619791602E-4	IMPLEMENTATION
// We promote our box to being its own box since we're changing // visibilities, and need it to be reflected on this method object // independent of any other sharing the box.	WITHOUT_CLASSIFICATION	0.9999356385056698	WITHOUT_CLASSIFICATION	6.436149433017052E-5	IMPLEMENTATION
// Normally we could leave these to fall back on the superclass, but // since it dispatches through the [] version below, which may // dispatch through the []+block version, we can save it a couple hops // by overriding these here.	WITHOUT_CLASSIFICATION	0.9999239099725957	WITHOUT_CLASSIFICATION	7.609002740431743E-5	IMPLEMENTATION
// promise to implement two to N	WITHOUT_CLASSIFICATION	0.9694073538037739	WITHOUT_CLASSIFICATION	0.03059264619622615	IMPLEMENTATION
// promise to implement three to N	WITHOUT_CLASSIFICATION	0.9566549037297252	WITHOUT_CLASSIFICATION	0.04334509627027478	IMPLEMENTATION
// promise to implement zero to three	WITHOUT_CLASSIFICATION	0.9790926360870006	WITHOUT_CLASSIFICATION	0.02090736391299938	IMPLEMENTATION
// promise to implement one to three	WITHOUT_CLASSIFICATION	0.9774413971162453	WITHOUT_CLASSIFICATION	0.022558602883754678	IMPLEMENTATION
// promise to implement two to three	WITHOUT_CLASSIFICATION	0.9713623400087019	WITHOUT_CLASSIFICATION	0.028637659991298026	IMPLEMENTATION
// promise to implement three	WITHOUT_CLASSIFICATION	0.9394122331070234	WITHOUT_CLASSIFICATION	0.060587766892976645	IMPLEMENTATION
// all other arities use "n" dispatch path	WITHOUT_CLASSIFICATION	0.9997189435574155	WITHOUT_CLASSIFICATION	2.810564425844388E-4	IMPLEMENTATION
// load up object and add a few useful methods	WITHOUT_CLASSIFICATION	0.9999039610982859	WITHOUT_CLASSIFICATION	9.603890171407476E-5	IMPLEMENTATION
// open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel	WITHOUT_CLASSIFICATION	0.9998752577917174	WITHOUT_CLASSIFICATION	1.2474220828262886E-4	IMPLEMENTATION
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9972053931128877	WITHOUT_CLASSIFICATION	0.0027946068871123973	IMPLEMENTATION
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9996660511859775	WITHOUT_CLASSIFICATION	3.3394881402243657E-4	IMPLEMENTATION
// create constructor	WITHOUT_CLASSIFICATION	0.9998848852856033	WITHOUT_CLASSIFICATION	1.1511471439665701E-4	IMPLEMENTATION
// wrap self and store the wrapper	WITHOUT_CLASSIFICATION	0.9998270740148554	WITHOUT_CLASSIFICATION	1.7292598514468243E-4	IMPLEMENTATION
// end constructor	WITHOUT_CLASSIFICATION	0.9997684251969704	WITHOUT_CLASSIFICATION	2.3157480302952714E-4	IMPLEMENTATION
// start setup method	WITHOUT_CLASSIFICATION	0.9997172876169925	WITHOUT_CLASSIFICATION	2.827123830075288E-4	IMPLEMENTATION
// set RubyClass	WITHOUT_CLASSIFICATION	0.9996720205964784	WITHOUT_CLASSIFICATION	3.2797940352152045E-4	IMPLEMENTATION
// set Ruby	WITHOUT_CLASSIFICATION	0.9996719163284905	WITHOUT_CLASSIFICATION	3.2808367150948263E-4	IMPLEMENTATION
// all methods dispatch to the simple version by default, which is method_missing normally	WITHOUT_CLASSIFICATION	0.9999402968876366	WITHOUT_CLASSIFICATION	5.970311236332168E-5	IMPLEMENTATION
// try specific name first, falling back on simple name	WITHOUT_CLASSIFICATION	0.9997913771900981	WITHOUT_CLASSIFICATION	2.0862280990190191E-4	IMPLEMENTATION
// get current context	WITHOUT_CLASSIFICATION	0.9997439961210021	WITHOUT_CLASSIFICATION	2.560038789979283E-4	IMPLEMENTATION
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9997575285145807	WITHOUT_CLASSIFICATION	2.4247148541945487E-4	IMPLEMENTATION
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9972053931128877	WITHOUT_CLASSIFICATION	0.0027946068871123973	IMPLEMENTATION
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9996660511859775	WITHOUT_CLASSIFICATION	3.3394881402243657E-4	IMPLEMENTATION
// create constructor	WITHOUT_CLASSIFICATION	0.9998848852856033	WITHOUT_CLASSIFICATION	1.1511471439665701E-4	IMPLEMENTATION
// end constructor	WITHOUT_CLASSIFICATION	0.9997684251969704	WITHOUT_CLASSIFICATION	2.3157480302952714E-4	IMPLEMENTATION
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9934798154984964	WITHOUT_CLASSIFICATION	0.00652018450150367	IMPLEMENTATION
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9998629391666334	WITHOUT_CLASSIFICATION	1.3706083336670222E-4	IMPLEMENTATION
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9997908459151906	WITHOUT_CLASSIFICATION	2.0915408480925025E-4	IMPLEMENTATION
// load null block	WITHOUT_CLASSIFICATION	0.9996302148885788	WITHOUT_CLASSIFICATION	3.6978511142114756E-4	IMPLEMENTATION
// invoke method	WITHOUT_CLASSIFICATION	0.9995954879033389	WITHOUT_CLASSIFICATION	4.0451209666109096E-4	IMPLEMENTATION
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9997516276956914	WITHOUT_CLASSIFICATION	2.4837230430866097E-4	IMPLEMENTATION
// end setup method	WITHOUT_CLASSIFICATION	0.999736398942752	WITHOUT_CLASSIFICATION	2.636010572480311E-4	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.9999015454963707	WITHOUT_CLASSIFICATION	9.845450362929706E-5	IMPLEMENTATION
// create static init, for a monitor object	WITHOUT_CLASSIFICATION	0.9999330543803874	WITHOUT_CLASSIFICATION	6.694561961266215E-5	IMPLEMENTATION
// store the wrapper	WITHOUT_CLASSIFICATION	0.9997296439570253	WITHOUT_CLASSIFICATION	2.7035604297457797E-4	IMPLEMENTATION
// prepare temp locals	WITHOUT_CLASSIFICATION	0.9996315432562382	WITHOUT_CLASSIFICATION	3.684567437618132E-4	IMPLEMENTATION
// Try to look up field for simple name // get field; if nonnull, go straight to dispatch	WITHOUT_CLASSIFICATION	0.9998913014807429	WITHOUT_CLASSIFICATION	1.0869851925712931E-4	IMPLEMENTATION
// field is null, lock class and try to populate	WITHOUT_CLASSIFICATION	0.9999305527887926	WITHOUT_CLASSIFICATION	6.944721120733237E-5	IMPLEMENTATION
// try/finally block to ensure unlock	WITHOUT_CLASSIFICATION	0.999696025195691	WITHOUT_CLASSIFICATION	3.039748043090726E-4	IMPLEMENTATION
// store it	WITHOUT_CLASSIFICATION	0.9996410675570495	WITHOUT_CLASSIFICATION	3.589324429505206E-4	IMPLEMENTATION
// end of try block	WITHOUT_CLASSIFICATION	0.9998146295279429	WITHOUT_CLASSIFICATION	1.8537047205712955E-4	IMPLEMENTATION
// finally block to release monitor	WITHOUT_CLASSIFICATION	0.9997775474830316	WITHOUT_CLASSIFICATION	2.2245251696830545E-4	IMPLEMENTATION
// exception handling for monitor release	WITHOUT_CLASSIFICATION	0.9996218170570234	WITHOUT_CLASSIFICATION	3.781829429766191E-4	IMPLEMENTATION
// re-get, re-check method; if not null now, go to dispatch	WITHOUT_CLASSIFICATION	0.9997209884977124	WITHOUT_CLASSIFICATION	2.790115022875145E-4	IMPLEMENTATION
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9997575285145807	WITHOUT_CLASSIFICATION	2.4247148541945487E-4	IMPLEMENTATION
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9998629391666334	WITHOUT_CLASSIFICATION	1.3706083336670222E-4	IMPLEMENTATION
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9997908459151906	WITHOUT_CLASSIFICATION	2.0915408480925025E-4	IMPLEMENTATION
// invoke method	WITHOUT_CLASSIFICATION	0.9995954879033389	WITHOUT_CLASSIFICATION	4.0451209666109096E-4	IMPLEMENTATION
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9997516276956914	WITHOUT_CLASSIFICATION	2.4837230430866097E-4	IMPLEMENTATION
// end setup method	WITHOUT_CLASSIFICATION	0.999736398942752	WITHOUT_CLASSIFICATION	2.636010572480311E-4	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.9999015454963707	WITHOUT_CLASSIFICATION	9.845450362929706E-5	IMPLEMENTATION
// create the class	WITHOUT_CLASSIFICATION	0.9998943158982062	WITHOUT_CLASSIFICATION	1.0568410179381288E-4	IMPLEMENTATION
// method still not available, call method_missing	WITHOUT_CLASSIFICATION	0.9996544606661155	WITHOUT_CLASSIFICATION	3.4553933388446046E-4	IMPLEMENTATION
// perform the dispatch	WITHOUT_CLASSIFICATION	0.9996575230638849	WITHOUT_CLASSIFICATION	3.424769361151789E-4	IMPLEMENTATION
// try to load the specified name; only if that fails, try to define the class	WITHOUT_CLASSIFICATION	0.9999667817398431	WITHOUT_CLASSIFICATION	3.321826015683493E-5	IMPLEMENTATION
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9997115838422397	WITHOUT_CLASSIFICATION	2.884161577603332E-4	IMPLEMENTATION
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9997115838422397	WITHOUT_CLASSIFICATION	2.884161577603332E-4	IMPLEMENTATION
// setup the class	WITHOUT_CLASSIFICATION	0.9998504212816013	WITHOUT_CLASSIFICATION	1.4957871839878746E-4	IMPLEMENTATION
// now, create a method_added that can replace the DynamicMethod fields as they're redefined	WITHOUT_CLASSIFICATION	0.9998530834077585	WITHOUT_CLASSIFICATION	1.469165922414551E-4	IMPLEMENTATION
// do nothing, it's a non-impl method	WITHOUT_CLASSIFICATION	0.9999580950670546	WITHOUT_CLASSIFICATION	4.190493294538277E-5	IMPLEMENTATION
// probably a primitive	WITHOUT_CLASSIFICATION	0.9996591501190384	WITHOUT_CLASSIFICATION	3.4084988096160017E-4	IMPLEMENTATION
// interfaces are handled as modules	WITHOUT_CLASSIFICATION	0.9998750119974978	WITHOUT_CLASSIFICATION	1.2498800250225784E-4	IMPLEMENTATION
// construct the mirror class and parent classes	WITHOUT_CLASSIFICATION	0.9999615916598981	WITHOUT_CLASSIFICATION	3.8408340101960174E-5	IMPLEMENTATION
// set the full name	WITHOUT_CLASSIFICATION	0.9997193518522522	WITHOUT_CLASSIFICATION	2.806481477478117E-4	IMPLEMENTATION
// include all interfaces	WITHOUT_CLASSIFICATION	0.9998288151512502	WITHOUT_CLASSIFICATION	1.7118484874983672E-4	IMPLEMENTATION
// if it's an array, only add methods for aref, aset, and length	WITHOUT_CLASSIFICATION	0.999879109816903	WITHOUT_CLASSIFICATION	1.2089018309699971E-4	IMPLEMENTATION
// add array construction methods	WITHOUT_CLASSIFICATION	0.9999179464883382	WITHOUT_CLASSIFICATION	8.205351166186261E-5	IMPLEMENTATION
// add all public constructors (note: getConstructors only returns public ones)	WITHOUT_CLASSIFICATION	0.9999239083030793	WITHOUT_CLASSIFICATION	7.609169692076958E-5	IMPLEMENTATION
// add all instance and static methods	WITHOUT_CLASSIFICATION	0.9999236135727311	WITHOUT_CLASSIFICATION	7.63864272689095E-5	IMPLEMENTATION
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9997654311621639	WITHOUT_CLASSIFICATION	2.3456883783610583E-4	IMPLEMENTATION
// too much array creation!	WITHOUT_CLASSIFICATION	0.9996652967220521	WITHOUT_CLASSIFICATION	3.3470327794791414E-4	IMPLEMENTATION
// only include static methods if specified	WITHOUT_CLASSIFICATION	0.9998824837567535	WITHOUT_CLASSIFICATION	1.1751624324642947E-4	IMPLEMENTATION
// add a few type-specific special methods	WITHOUT_CLASSIFICATION	0.9998782838825152	WITHOUT_CLASSIFICATION	1.2171611748482257E-4	IMPLEMENTATION
// add all static variables	WITHOUT_CLASSIFICATION	0.9997539205008539	WITHOUT_CLASSIFICATION	2.460794991460934E-4	IMPLEMENTATION
// only public static fields that are valid constants	WITHOUT_CLASSIFICATION	0.999898245176175	WITHOUT_CLASSIFICATION	1.0175482382503268E-4	IMPLEMENTATION
// looks like someone's trying to raise a Java exception. Let them.	WITHOUT_CLASSIFICATION	0.9998459802003867	WITHOUT_CLASSIFICATION	1.540197996133162E-4	IMPLEMENTATION
// NOTE: The five match methods are arity-split to avoid the cost of boxing arguments // when there's already a cached match. Do not condense them into a single // method.	WITHOUT_CLASSIFICATION	0.9999868839851154	WITHOUT_CLASSIFICATION	1.311601488464884E-5	IMPLEMENTATION
// TODO: This is where we would want to do precision checks to see // if it's non-destructive to coerce a given type into the target // integral primitive	WITHOUT_CLASSIFICATION	0.5937617064019769	WITHOUT_CLASSIFICATION	0.40623829359802316	IMPLEMENTATION
// long first because it's what Fixnum claims to be	WITHOUT_CLASSIFICATION	0.9998315465610235	WITHOUT_CLASSIFICATION	1.6845343897647737E-4	IMPLEMENTATION
// double first because it's what float claims to be	WITHOUT_CLASSIFICATION	0.9998790053697191	WITHOUT_CLASSIFICATION	1.2099463028096063E-4	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9224597745982892	WITHOUT_CLASSIFICATION	0.07754022540171074	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9995793408161489	WITHOUT_CLASSIFICATION	4.2065918385119196E-4	IMPLEMENTATION
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999663320926618	WITHOUT_CLASSIFICATION	3.366790733816518E-5	IMPLEMENTATION
// we set all Java methods to optional, since many/most have overloads	WITHOUT_CLASSIFICATION	0.9998496574732263	WITHOUT_CLASSIFICATION	1.503425267736954E-4	IMPLEMENTATION
// If we hold a Java object, we need a java_class accessor	WITHOUT_CLASSIFICATION	0.9998086300615677	WITHOUT_CLASSIFICATION	1.9136993843229817E-4	IMPLEMENTATION
// line 326	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9995793408161489	WITHOUT_CLASSIFICATION	4.2065918385119196E-4	IMPLEMENTATION
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999663320926618	WITHOUT_CLASSIFICATION	3.366790733816518E-5	IMPLEMENTATION
// too much array creation!	WITHOUT_CLASSIFICATION	0.9996652967220521	WITHOUT_CLASSIFICATION	3.3470327794791414E-4	IMPLEMENTATION
// construct new array proxy (ArrayJavaProxy)	WITHOUT_CLASSIFICATION	0.999830283332768	WITHOUT_CLASSIFICATION	1.6971666723189917E-4	IMPLEMENTATION
// Get map of all fields we want to define.  	WITHOUT_CLASSIFICATION	0.9997406857036082	WITHOUT_CLASSIFICATION	2.593142963917535E-4	IMPLEMENTATION
// Look through all mappings to find a match entry for this field	WITHOUT_CLASSIFICATION	0.9998959315039389	WITHOUT_CLASSIFICATION	1.0406849606122742E-4	IMPLEMENTATION
// Hit a non-java proxy class (included Modules can be a cause of this...skip)	WITHOUT_CLASSIFICATION	0.9999143566955079	WITHOUT_CLASSIFICATION	8.564330449208566E-5	IMPLEMENTATION
// We could not find all of them print out first one (we could print them all?)	WITHOUT_CLASSIFICATION	0.9999363739374612	WITHOUT_CLASSIFICATION	6.362606253881804E-5	IMPLEMENTATION
// dummy bodies for default impls	WITHOUT_CLASSIFICATION	0.9998898463907573	WITHOUT_CLASSIFICATION	1.1015360924275122E-4	IMPLEMENTATION
// initialize this if it hasn't been	WITHOUT_CLASSIFICATION	0.9999463645687037	WITHOUT_CLASSIFICATION	5.3635431296286084E-5	IMPLEMENTATION
// initialize these if they haven't been	WITHOUT_CLASSIFICATION	0.9999590004665733	WITHOUT_CLASSIFICATION	4.099953342666122E-5	IMPLEMENTATION
// not allowed for original (non-generated) Java classes // note: not allowing for any previously created class right now; // this restriction might be loosened later for generated classes	WITHOUT_CLASSIFICATION	0.9999364449233272	WITHOUT_CLASSIFICATION	6.355507667274608E-5	IMPLEMENTATION
// setup new, etc unless this is a ConcreteJavaProxy subclass	WITHOUT_CLASSIFICATION	0.999902408915131	WITHOUT_CLASSIFICATION	9.759108486893342E-5	IMPLEMENTATION
// First we make modifications to the class, to adapt it to being // both a Ruby class and a proxy for a Java type	WITHOUT_CLASSIFICATION	0.9999690184807143	WITHOUT_CLASSIFICATION	3.0981519285661645E-5	IMPLEMENTATION
// list of interfaces we implement	WITHOUT_CLASSIFICATION	0.9964709730794485	WITHOUT_CLASSIFICATION	0.003529026920551493	IMPLEMENTATION
// We capture the original "new" and make it private	WITHOUT_CLASSIFICATION	0.9998261710898	WITHOUT_CLASSIFICATION	1.738289102001154E-4	IMPLEMENTATION
// The replacement "new" allocates and inits the Ruby object as before, but // also instantiates our proxified Java object by calling __jcreate!	WITHOUT_CLASSIFICATION	0.9999639600560721	WITHOUT_CLASSIFICATION	3.60399439278797E-5	IMPLEMENTATION
// Next, we define a few private methods that we'll use to manipulate // the Java object contained within this Ruby object	WITHOUT_CLASSIFICATION	0.9999605055095016	WITHOUT_CLASSIFICATION	3.94944904984787E-5	IMPLEMENTATION
// jcreate instantiates the proxy object which implements all interfaces // and which is wrapped and implemented by this object	WITHOUT_CLASSIFICATION	0.9988705926036766	WITHOUT_CLASSIFICATION	0.0011294073963233724	IMPLEMENTATION
// Now we add an "implement" and "implement_all" methods to the class	WITHOUT_CLASSIFICATION	0.9993937083944398	WITHOUT_CLASSIFICATION	6.062916055603678E-4	IMPLEMENTATION
// implement all forces implementation of all interfaces we intend // for this class to implement	WITHOUT_CLASSIFICATION	0.9969278145102158	WITHOUT_CLASSIFICATION	0.00307218548978416	IMPLEMENTATION
// we've already done the above priming logic, just add another interface // to the list of intentions unless we're past the point of no return or // already intend to implement the given interface	WITHOUT_CLASSIFICATION	0.9991809929047064	WITHOUT_CLASSIFICATION	8.190070952937265E-4	IMPLEMENTATION
// walk all superclasses aggregating interfaces	WITHOUT_CLASSIFICATION	0.9999222584487024	WITHOUT_CLASSIFICATION	7.774155129760563E-5	IMPLEMENTATION
// construct the new interface impl and set it into the object	WITHOUT_CLASSIFICATION	0.9999904521076971	WITHOUT_CLASSIFICATION	9.547892302933099E-6	IMPLEMENTATION
// assuming the user wants a collection of interfaces that can be // included together. make it so.	WITHOUT_CLASSIFICATION	0.9999563483334742	WITHOUT_CLASSIFICATION	4.3651666525721523E-5	IMPLEMENTATION
// not allowed for existing Java interface modules	WITHOUT_CLASSIFICATION	0.9999037369641914	WITHOUT_CLASSIFICATION	9.626303580856568E-5	IMPLEMENTATION
// To turn a module into an "interface collection" we add a class instance // variable to hold the list of interfaces, and modify append_features // for this module to call append_features on each of those interfaces as // well	WITHOUT_CLASSIFICATION	0.9999903587448744	WITHOUT_CLASSIFICATION	9.64125512564791E-6	IMPLEMENTATION
// already set up append_features, just add the interface if we haven't already	WITHOUT_CLASSIFICATION	0.9999801777222798	WITHOUT_CLASSIFICATION	1.9822277720176044E-5	IMPLEMENTATION
// array-of-interface-type creation/identity	WITHOUT_CLASSIFICATION	0.9998515637125565	WITHOUT_CLASSIFICATION	1.4843628744357936E-4	IMPLEMENTATION
// keep this variant for kind_of? testing	WITHOUT_CLASSIFICATION	0.9997794289949827	WITHOUT_CLASSIFICATION	2.2057100501724243E-4	IMPLEMENTATION
// array creation should use this variant	WITHOUT_CLASSIFICATION	0.9996043680667135	WITHOUT_CLASSIFICATION	3.956319332865397E-4	IMPLEMENTATION
// parent.setConstant(name, proxyClass); // where the name should come from ?	WITHOUT_CLASSIFICATION	0.9999007205850304	WITHOUT_CLASSIFICATION	9.927941496957295E-5	IMPLEMENTATION
// including interface module so old-style interface "subclasses" will // respond correctly to #kind_of?, etc.	WITHOUT_CLASSIFICATION	0.9999254053330842	WITHOUT_CLASSIFICATION	7.459466691580178E-5	IMPLEMENTATION
// add reference to interface module	WITHOUT_CLASSIFICATION	0.9999438172358944	WITHOUT_CLASSIFICATION	5.6182764105446964E-5	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9996997673483544	WITHOUT_CLASSIFICATION	3.0023265164557875E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9996997673483544	WITHOUT_CLASSIFICATION	3.0023265164557875E-4	IMPLEMENTATION
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9997654311621639	WITHOUT_CLASSIFICATION	2.3456883783610583E-4	IMPLEMENTATION
// same as argument_types, but matches name in java.lang.reflect.Constructor/Method	WITHOUT_CLASSIFICATION	0.9998955932754303	WITHOUT_CLASSIFICATION	1.0440672456973375E-4	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999610096141709	WITHOUT_CLASSIFICATION	3.899038582904509E-5	IMPLEMENTATION
// weakly reserved names	WITHOUT_CLASSIFICATION	0.9996082339971809	WITHOUT_CLASSIFICATION	3.917660028191531E-4	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999310478452869	WITHOUT_CLASSIFICATION	6.895215471314847E-5	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999310478452869	WITHOUT_CLASSIFICATION	6.895215471314847E-5	IMPLEMENTATION
// modified only by addMethod; no synchronization required	WITHOUT_CLASSIFICATION	0.9998273210751062	WITHOUT_CLASSIFICATION	1.7267892489371454E-4	IMPLEMENTATION
// if there's no constructor, we must prevent construction	WITHOUT_CLASSIFICATION	0.9998658006175707	WITHOUT_CLASSIFICATION	1.3419938242940064E-4	IMPLEMENTATION
// caching constructors, as they're accessed for each new instance	WITHOUT_CLASSIFICATION	0.9998609009351414	WITHOUT_CLASSIFICATION	1.3909906485858902E-4	IMPLEMENTATION
// proxy module for interfaces	WITHOUT_CLASSIFICATION	0.9998423654969348	WITHOUT_CLASSIFICATION	1.5763450306523674E-4	IMPLEMENTATION
// proxy class for concrete classes.  also used for // "concrete" interfaces, which is why we have two fields	WITHOUT_CLASSIFICATION	0.9999672593117289	WITHOUT_CLASSIFICATION	3.274068827105247E-5	IMPLEMENTATION
// readable only by thread building proxy, so don't need to be // volatile. used to handle recursive calls to getProxyClass/Module // while proxy is being constructed (usually when a constant // defined by a class is of the same type as that class).	WITHOUT_CLASSIFICATION	0.9999892633972712	WITHOUT_CLASSIFICATION	1.0736602728636837E-5	IMPLEMENTATION
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999061683438765	WITHOUT_CLASSIFICATION	9.383165612362692E-5	IMPLEMENTATION
// Now add all aliases for the static methods (fields) as appropriate	WITHOUT_CLASSIFICATION	0.9998759012409748	WITHOUT_CLASSIFICATION	1.2409875902516694E-4	IMPLEMENTATION
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9998583696936867	WITHOUT_CLASSIFICATION	1.4163030631337593E-4	IMPLEMENTATION
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9998481971330204	WITHOUT_CLASSIFICATION	1.5180286697965745E-4	IMPLEMENTATION
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9997577022391209	WITHOUT_CLASSIFICATION	2.4229776087912903E-4	IMPLEMENTATION
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9996653936970324	WITHOUT_CLASSIFICATION	3.3460630296754123E-4	IMPLEMENTATION
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9997041623272281	WITHOUT_CLASSIFICATION	2.9583767277180736E-4	IMPLEMENTATION
// Additionally add ?-postfixed aliases to any boolean methods and properties.	WITHOUT_CLASSIFICATION	0.9999436431097312	WITHOUT_CLASSIFICATION	5.6356890268881985E-5	IMPLEMENTATION
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9997350371537864	WITHOUT_CLASSIFICATION	2.6496284621354595E-4	IMPLEMENTATION
// something?	WITHOUT_CLASSIFICATION	0.9995313519713077	WITHOUT_CLASSIFICATION	4.68648028692257E-4	IMPLEMENTATION
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999553307431791	WITHOUT_CLASSIFICATION	4.4669256820934604E-5	IMPLEMENTATION
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999553307431791	WITHOUT_CLASSIFICATION	4.4669256820934604E-5	IMPLEMENTATION
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999828875537963	WITHOUT_CLASSIFICATION	1.711244620371203E-5	IMPLEMENTATION
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999828875537963	WITHOUT_CLASSIFICATION	1.711244620371203E-5	IMPLEMENTATION
// create constructorInstaller; if there are no constructors, it will disable construction	WITHOUT_CLASSIFICATION	0.9999709727409855	WITHOUT_CLASSIFICATION	2.902725901460859E-5	IMPLEMENTATION
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999126338134077	WITHOUT_CLASSIFICATION	8.736618659230879E-5	IMPLEMENTATION
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999123540330522	WITHOUT_CLASSIFICATION	8.764596694776148E-5	IMPLEMENTATION
// now iterate over all installers and make sure they also have appropriate aliases	WITHOUT_CLASSIFICATION	0.9997931595267818	WITHOUT_CLASSIFICATION	2.0684047321825234E-4	IMPLEMENTATION
// old (quasi-deprecated) interface class	WITHOUT_CLASSIFICATION	0.999886433340658	WITHOUT_CLASSIFICATION	1.1356665934199604E-4	IMPLEMENTATION
// 1.9 support for encodings	WITHOUT_CLASSIFICATION	0.9993711538106658	WITHOUT_CLASSIFICATION	6.288461893342109E-4	IMPLEMENTATION
// double-check the cache now that we're synchronized	WITHOUT_CLASSIFICATION	0.9998067582668634	WITHOUT_CLASSIFICATION	1.932417331365865E-4	IMPLEMENTATION
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9996653936970324	WITHOUT_CLASSIFICATION	3.3460630296754123E-4	IMPLEMENTATION
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9997041623272281	WITHOUT_CLASSIFICATION	2.9583767277180736E-4	IMPLEMENTATION
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9997350371537864	WITHOUT_CLASSIFICATION	2.6496284621354595E-4	IMPLEMENTATION
// one word type name that starts lower-case...it may be a primitive type	WITHOUT_CLASSIFICATION	0.9998974964703803	WITHOUT_CLASSIFICATION	1.0250352961967684E-4	IMPLEMENTATION
// Java.getProxyClass deals with sync issues, so we won't duplicate the logic here	WITHOUT_CLASSIFICATION	0.9998267657806184	WITHOUT_CLASSIFICATION	1.7323421938173218E-4	IMPLEMENTATION
// note: intentionally returning the actual array returned from Java, rather // than wrapping it in a RubyArray. wave of the future, when java_class will // return the actual class, rather than a JavaClass wrapper.	WITHOUT_CLASSIFICATION	0.999971590731301	WITHOUT_CLASSIFICATION	2.8409268698987233E-5	IMPLEMENTATION
// see note above re: return type	WITHOUT_CLASSIFICATION	0.9998668334194051	WITHOUT_CLASSIFICATION	1.331665805949709E-4	IMPLEMENTATION
// restrictive security policy; no matter, we only want public // classes anyway	WITHOUT_CLASSIFICATION	0.9998914538322549	WITHOUT_CLASSIFICATION	1.0854616774512022E-4	IMPLEMENTATION
// very restrictive policy (disallows Member.PUBLIC) // we'd never actually get this far in that case	WITHOUT_CLASSIFICATION	0.99957307566762	WITHOUT_CLASSIFICATION	4.2692433237996754E-4	IMPLEMENTATION
// one-dimensional array	WITHOUT_CLASSIFICATION	0.9996166354103446	WITHOUT_CLASSIFICATION	3.833645896553808E-4	IMPLEMENTATION
// n-dimensional array	WITHOUT_CLASSIFICATION	0.9996138598799122	WITHOUT_CLASSIFICATION	3.861401200876691E-4	IMPLEMENTATION
// if it's an array of arrays, recurse with the component type	WITHOUT_CLASSIFICATION	0.9999237873399539	WITHOUT_CLASSIFICATION	7.621266004602669E-5	IMPLEMENTATION
// we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods // see JRUBY-3130	WITHOUT_CLASSIFICATION	0.9999337770944117	WITHOUT_CLASSIFICATION	6.62229055883373E-5	IMPLEMENTATION
// Proc implementing an interface, pull in the catch-all code that lets the proc get invoked // no matter what method is called on the interface	WITHOUT_CLASSIFICATION	0.9987224562687783	WITHOUT_CLASSIFICATION	0.0012775437312216972	IMPLEMENTATION
// can't be converted any more, return it	WITHOUT_CLASSIFICATION	0.9998927944235926	WITHOUT_CLASSIFICATION	1.0720557640734908E-4	IMPLEMENTATION
// getFooBar() => fooBar?, foo_bar?(*)	WITHOUT_CLASSIFICATION	0.9997423379828365	WITHOUT_CLASSIFICATION	2.5766201716348133E-4	IMPLEMENTATION
// If not a property, but is boolean add ?-postfixed aliases.	WITHOUT_CLASSIFICATION	0.9998761376173472	WITHOUT_CLASSIFICATION	1.2386238265280964E-4	IMPLEMENTATION
// many cases are ok to convert to float; if not one of these, error	WITHOUT_CLASSIFICATION	0.9998816071999468	WITHOUT_CLASSIFICATION	1.1839280005308742E-4	IMPLEMENTATION
// for Object, default to natural wrapper type	WITHOUT_CLASSIFICATION	0.9999224394660174	WITHOUT_CLASSIFICATION	7.756053398254644E-5	IMPLEMENTATION
// rubyObject is already of the required jruby class (or subclass)	WITHOUT_CLASSIFICATION	0.9999493192764503	WITHOUT_CLASSIFICATION	5.068072354978906E-5	IMPLEMENTATION
// the converters handle not only primitive types but also their boxed versions, so we should check // if we have a converter before checking for isPrimitive()	WITHOUT_CLASSIFICATION	0.9999804927905459	WITHOUT_CLASSIFICATION	1.9507209454069155E-5	IMPLEMENTATION
// it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999313523683785	WITHOUT_CLASSIFICATION	6.864763162152793E-5	IMPLEMENTATION
// we've found a Java type to which we've coerced the Ruby value, wrap it	WITHOUT_CLASSIFICATION	0.9998221487821626	WITHOUT_CLASSIFICATION	1.7785121783746717E-4	IMPLEMENTATION
// set of utility methods for Java-based proxy objects	WITHOUT_CLASSIFICATION	0.9999343157619112	WITHOUT_CLASSIFICATION	6.568423808885395E-5	IMPLEMENTATION
// the proxy (wrapper) type hierarchy	WITHOUT_CLASSIFICATION	0.9998579297137871	WITHOUT_CLASSIFICATION	1.4207028621280788E-4	IMPLEMENTATION
//InterfaceJavaProxy.createInterfaceJavaProxy(context);	WITHOUT_CLASSIFICATION	0.9998196086709531	WITHOUT_CLASSIFICATION	1.8039132904692194E-4	IMPLEMENTATION
// also create the JavaProxy* classes	WITHOUT_CLASSIFICATION	0.9999020157478375	WITHOUT_CLASSIFICATION	9.798425216251865E-5	IMPLEMENTATION
// The template for interface modules	WITHOUT_CLASSIFICATION	0.9999545223839756	WITHOUT_CLASSIFICATION	4.5477616024271136E-5	IMPLEMENTATION
// Now attach Java-related extras to core classes	WITHOUT_CLASSIFICATION	0.9998397903199654	WITHOUT_CLASSIFICATION	1.602096800346089E-4	IMPLEMENTATION
// add all name-to-class mappings	WITHOUT_CLASSIFICATION	0.9997992715239848	WITHOUT_CLASSIFICATION	2.0072847601506502E-4	IMPLEMENTATION
// add some base Java classes everyone will need	WITHOUT_CLASSIFICATION	0.999885419211692	WITHOUT_CLASSIFICATION	1.1458078830801772E-4	IMPLEMENTATION
// finally, set JavaSupport.isEnabled to true	WITHOUT_CLASSIFICATION	0.9997357598716375	WITHOUT_CLASSIFICATION	2.642401283625196E-4	IMPLEMENTATION
// shouldn't happen, but if a superclass is specified, it's not ours	WITHOUT_CLASSIFICATION	0.9999111127532472	WITHOUT_CLASSIFICATION	8.888724675280858E-5	IMPLEMENTATION
// include any interfaces we extend	WITHOUT_CLASSIFICATION	0.9998720731756245	WITHOUT_CLASSIFICATION	1.2792682437549524E-4	IMPLEMENTATION
// java.lang.Object is added at root of java proxy classes	WITHOUT_CLASSIFICATION	0.9999136913391635	WITHOUT_CLASSIFICATION	8.630866083656748E-5	IMPLEMENTATION
// other java proxy classes added under their superclass' java proxy	WITHOUT_CLASSIFICATION	0.9998737613275693	WITHOUT_CLASSIFICATION	1.2623867243056217E-4	IMPLEMENTATION
// include interface modules into the proxy class	WITHOUT_CLASSIFICATION	0.9999546853523338	WITHOUT_CLASSIFICATION	4.531464766623526E-5	IMPLEMENTATION
// JRUBY-2938 the proxy class might already exist	WITHOUT_CLASSIFICATION	0.9999069874956128	WITHOUT_CLASSIFICATION	9.301250438720707E-5	IMPLEMENTATION
// add java_method for unbound use	WITHOUT_CLASSIFICATION	0.9998153670474462	WITHOUT_CLASSIFICATION	1.846329525536924E-4	IMPLEMENTATION
// add alias to meta	WITHOUT_CLASSIFICATION	0.9997215831054455	WITHOUT_CLASSIFICATION	2.7841689455456034E-4	IMPLEMENTATION
// we'll only map conventional class names to modules 	WITHOUT_CLASSIFICATION	0.999847316738356	WITHOUT_CLASSIFICATION	1.5268326164408924E-4	IMPLEMENTATION
/* expected */	WITHOUT_CLASSIFICATION	0.9997722335891487	WITHOUT_CLASSIFICATION	2.2776641085126313E-4	IMPLEMENTATION
// Haven't found a class, continue on as though it were a package	WITHOUT_CLASSIFICATION	0.9998925169816856	WITHOUT_CLASSIFICATION	1.0748301831433448E-4	IMPLEMENTATION
// upper case name, so most likely a class	WITHOUT_CLASSIFICATION	0.99988947596604	WITHOUT_CLASSIFICATION	1.1052403395996417E-4	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999610096141709	WITHOUT_CLASSIFICATION	3.899038582904509E-5	IMPLEMENTATION
// add alias to meta	WITHOUT_CLASSIFICATION	0.9997215831054455	WITHOUT_CLASSIFICATION	2.7841689455456034E-4	IMPLEMENTATION
// this is where we'll get connected when classes are opened using // package module syntax.	WITHOUT_CLASSIFICATION	0.9999572130542292	WITHOUT_CLASSIFICATION	4.27869457707149E-5	IMPLEMENTATION
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9999397368187704	WITHOUT_CLASSIFICATION	6.026318122958503E-5	IMPLEMENTATION
// this covers primitives and (unlikely) lower-case class names	WITHOUT_CLASSIFICATION	0.999915495639455	WITHOUT_CLASSIFICATION	8.450436054504672E-5	IMPLEMENTATION
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9998447081889363	WITHOUT_CLASSIFICATION	1.5529181106369613E-4	IMPLEMENTATION
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9998447081889363	WITHOUT_CLASSIFICATION	1.5529181106369613E-4	IMPLEMENTATION
// Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9998706219841151	WITHOUT_CLASSIFICATION	1.2937801588480742E-4	IMPLEMENTATION
// Create list of interfaces to proxy (and make sure they really are interfaces)	WITHOUT_CLASSIFICATION	0.9999703070955737	WITHOUT_CLASSIFICATION	2.969290442628167E-5	IMPLEMENTATION
// hashcode is a combination of the interfaces and the Ruby class we're using // to implement them	WITHOUT_CLASSIFICATION	0.997239209292596	WITHOUT_CLASSIFICATION	0.002760790707403963	IMPLEMENTATION
// if it's a singleton class and the real class is proc, we're doing closure conversion // so just use Proc's hashcode	WITHOUT_CLASSIFICATION	0.9999636557544035	WITHOUT_CLASSIFICATION	3.6344245596552775E-5	IMPLEMENTATION
// normal new class implementing interfaces	WITHOUT_CLASSIFICATION	0.9975036813755496	WITHOUT_CLASSIFICATION	0.0024963186244504726	IMPLEMENTATION
/*         * Initialize some components.         */	WITHOUT_CLASSIFICATION	0.999990461219792	WITHOUT_CLASSIFICATION	9.53878020802164E-6	IMPLEMENTATION
// not synchronizing these methods, no harm if these values get set more // than once. // (also note that there's no chance of getting a partially initialized // class/module, as happens-before is guaranteed by volatile write/read // of constants table.)	WITHOUT_CLASSIFICATION	0.9999776233937021	WITHOUT_CLASSIFICATION	2.2376606297930244E-5	IMPLEMENTATION
// Java reflection does not allow retrieving constructors like methods	WITHOUT_CLASSIFICATION	0.9998906910491253	WITHOUT_CLASSIFICATION	1.0930895087470194E-4	IMPLEMENTATION
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9998183641029137	WITHOUT_CLASSIFICATION	1.8163589708640053E-4	IMPLEMENTATION
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9998183641029137	WITHOUT_CLASSIFICATION	1.8163589708640053E-4	IMPLEMENTATION
// no matching ctor found	WITHOUT_CLASSIFICATION	0.9997153832585632	WITHOUT_CLASSIFICATION	2.846167414366788E-4	IMPLEMENTATION
// Create Ruby proxies for any input arguments that are not primitives.	WITHOUT_CLASSIFICATION	0.9999232083143732	WITHOUT_CLASSIFICATION	7.679168562677282E-5	IMPLEMENTATION
// prepare a faster handle if handles are enabled and the method and class are public	WITHOUT_CLASSIFICATION	0.9999362295257105	WITHOUT_CLASSIFICATION	6.37704742896176E-5	IMPLEMENTATION
// must be a public method	WITHOUT_CLASSIFICATION	0.9997128846855255	WITHOUT_CLASSIFICATION	2.871153144743914E-4	IMPLEMENTATION
// must be a public class	WITHOUT_CLASSIFICATION	0.9997693138655509	WITHOUT_CLASSIFICATION	2.306861344491962E-4	IMPLEMENTATION
// must have been loaded from our known classloader hierarchy	WITHOUT_CLASSIFICATION	0.9996925899245885	WITHOUT_CLASSIFICATION	3.0741007541142394E-4	IMPLEMENTATION
// Special classes like Collections.EMPTY_LIST are inner classes that are private but  // implement public interfaces.  Their methods are all public methods for the public  // interface.  Let these public methods execute via setAccessible(true). 	WITHOUT_CLASSIFICATION	0.9996966835789377	WITHOUT_CLASSIFICATION	3.0331642106228165E-4	IMPLEMENTATION
// search through all declared methods to find a closest match	WITHOUT_CLASSIFICATION	0.9998365017749152	WITHOUT_CLASSIFICATION	1.634982250847416E-4	IMPLEMENTATION
// no matching method found	WITHOUT_CLASSIFICATION	0.9996835894339189	WITHOUT_CLASSIFICATION	3.1641056608112814E-4	IMPLEMENTATION
// this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.9999575908900015	WITHOUT_CLASSIFICATION	4.240910999860732E-5	IMPLEMENTATION
/*         * First we need to register the JRuby engine.         */	WITHOUT_CLASSIFICATION	0.9999589727386299	WITHOUT_CLASSIFICATION	4.1027261369989046E-5	IMPLEMENTATION
/*         * Now we create a new BSFManager.         */	WITHOUT_CLASSIFICATION	0.9999936092300404	WITHOUT_CLASSIFICATION	6.390769959474784E-6	IMPLEMENTATION
/*         * Initialize a simple Frame.          */	WITHOUT_CLASSIFICATION	0.9999802126238648	WITHOUT_CLASSIFICATION	1.9787376135237705E-5	IMPLEMENTATION
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.999585465731119	WITHOUT_CLASSIFICATION	4.145342688809872E-4	IMPLEMENTATION
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.999585465731119	WITHOUT_CLASSIFICATION	4.145342688809872E-4	IMPLEMENTATION
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9996119394918243	WITHOUT_CLASSIFICATION	3.8806050817567783E-4	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.9999015454963707	WITHOUT_CLASSIFICATION	9.845450362929706E-5	IMPLEMENTATION
// // this test really means, that this is a ruby-defined subclass of a java class //	WITHOUT_CLASSIFICATION	0.9999549184145905	WITHOUT_CLASSIFICATION	4.50815854095351E-5	IMPLEMENTATION
// for our purposes, Accessibles are also Members, and vice-versa, // so we'll include Member methods here.	WITHOUT_CLASSIFICATION	0.9999100269019731	WITHOUT_CLASSIFICATION	8.997309802690132E-5	IMPLEMENTATION
/*             * Declare those components as beans in BSF. Then it will be             * possible to access those components in Ruby as global             * variables ($frame, $menubar, ...)             */	WITHOUT_CLASSIFICATION	0.9999878902625051	WITHOUT_CLASSIFICATION	1.2109737494921573E-5	IMPLEMENTATION
/*              * Execute a Ruby script (add the menubar to the frame).             */	WITHOUT_CLASSIFICATION	0.9999909790703195	WITHOUT_CLASSIFICATION	9.020929680441995E-6	IMPLEMENTATION
/*                     * Execute Ruby statements.                     */	WITHOUT_CLASSIFICATION	0.9999773272949606	WITHOUT_CLASSIFICATION	2.267270503945952E-5	IMPLEMENTATION
/*                     * Evaluates a Ruby expression and display the result.                     */	WITHOUT_CLASSIFICATION	0.9999806334588266	WITHOUT_CLASSIFICATION	1.9366541173460994E-5	IMPLEMENTATION
// Populate values for the parameter names	WITHOUT_CLASSIFICATION	0.9999488464277417	WITHOUT_CLASSIFICATION	5.1153572258335956E-5	IMPLEMENTATION
/* package scope */	WITHOUT_CLASSIFICATION	0.9996087423967958	WITHOUT_CLASSIFICATION	3.912576032041795E-4	IMPLEMENTATION
// This point is only reached if there was an exception handler // installed.	WITHOUT_CLASSIFICATION	0.9999648929527658	WITHOUT_CLASSIFICATION	3.5107047234254866E-5	IMPLEMENTATION
// // Ruby-level methods //	WITHOUT_CLASSIFICATION	0.9996950843541503	WITHOUT_CLASSIFICATION	3.049156458496702E-4	IMPLEMENTATION
// need names ordered for key generation later	WITHOUT_CLASSIFICATION	0.9998690205678559	WITHOUT_CLASSIFICATION	1.3097943214422409E-4	IMPLEMENTATION
// we only collect methods and interfaces for  // user-defined proxy classes.	WITHOUT_CLASSIFICATION	0.9999695181089064	WITHOUT_CLASSIFICATION	3.0481891093470756E-5	IMPLEMENTATION
// get JavaClass if this is the new proxy class; verify it // matches if this is a superclass proxy.	WITHOUT_CLASSIFICATION	0.9999822921885294	WITHOUT_CLASSIFICATION	1.7707811470627955E-5	IMPLEMENTATION
// get any included interfaces	WITHOUT_CLASSIFICATION	0.9998618804982632	WITHOUT_CLASSIFICATION	1.3811950173680556E-4	IMPLEMENTATION
// lock in the overridden methods for the new class, and any as-yet // uninstantiated ancestor class.	WITHOUT_CLASSIFICATION	0.999968964712318	WITHOUT_CLASSIFICATION	3.103528768202127E-5	IMPLEMENTATION
// statically initialized below	WITHOUT_CLASSIFICATION	0.9998925597403379	WITHOUT_CLASSIFICATION	1.0744025966207574E-4	IMPLEMENTATION
// finish class initializer	WITHOUT_CLASSIFICATION	0.9998435080062117	WITHOUT_CLASSIFICATION	1.5649199378842715E-4	IMPLEMENTATION
// trigger class initialization for the class	WITHOUT_CLASSIFICATION	0.9999809008722738	WITHOUT_CLASSIFICATION	1.9099127726216144E-5	IMPLEMENTATION
// should not happen!	WITHOUT_CLASSIFICATION	0.9997617871440039	WITHOUT_CLASSIFICATION	2.3821285599603747E-4	IMPLEMENTATION
// start class	WITHOUT_CLASSIFICATION	0.9997256126863439	WITHOUT_CLASSIFICATION	2.743873136561571E-4	IMPLEMENTATION
// make getter for handler	WITHOUT_CLASSIFICATION	0.9997252626971302	WITHOUT_CLASSIFICATION	2.74737302869709E-4	IMPLEMENTATION
// make getter for proxy class	WITHOUT_CLASSIFICATION	0.999801166806087	WITHOUT_CLASSIFICATION	1.9883319391304107E-4	IMPLEMENTATION
// add (potentially) overridden names to the key. // TODO: see note above re: optimizations	WITHOUT_CLASSIFICATION	0.9862380128079412	WITHOUT_CLASSIFICATION	0.013761987192058844	IMPLEMENTATION
// We generate all constructors and let some fail during invocation later	WITHOUT_CLASSIFICATION	0.9998640508778022	WITHOUT_CLASSIFICATION	1.3594912219771387E-4	IMPLEMENTATION
// create static private method field	WITHOUT_CLASSIFICATION	0.9999252570537783	WITHOUT_CLASSIFICATION	7.474294622174619E-5	IMPLEMENTATION
// load static empty array	WITHOUT_CLASSIFICATION	0.9997526298528542	WITHOUT_CLASSIFICATION	2.473701471458164E-4	IMPLEMENTATION
// box arguments	WITHOUT_CLASSIFICATION	0.9996335928326937	WITHOUT_CLASSIFICATION	3.6640716730626174E-4	IMPLEMENTATION
// this is a simple rethrow handler	WITHOUT_CLASSIFICATION	0.9998973435998453	WITHOUT_CLASSIFICATION	1.0265640015472313E-4	IMPLEMENTATION
// // construct the super-proxy method //	WITHOUT_CLASSIFICATION	0.9998804902101021	WITHOUT_CLASSIFICATION	1.1950978989796989E-4	IMPLEMENTATION
// do a void return	WITHOUT_CLASSIFICATION	0.9996934333616695	WITHOUT_CLASSIFICATION	3.065666383305117E-4	IMPLEMENTATION
// // utility methods //	WITHOUT_CLASSIFICATION	0.9997621027088858	WITHOUT_CLASSIFICATION	2.3789729111422023E-4	IMPLEMENTATION
// Is there a supplied proc argument or do we assume a block was // supplied	WITHOUT_CLASSIFICATION	0.9998752161637895	WITHOUT_CLASSIFICATION	1.247838362104765E-4	IMPLEMENTATION
// store call information so method_missing impl can use it	WITHOUT_CLASSIFICATION	0.9998548336426005	WITHOUT_CLASSIFICATION	1.4516635739944428E-4	IMPLEMENTATION
// use the same logic as in EvaluationState	WITHOUT_CLASSIFICATION	0.9998589484593534	WITHOUT_CLASSIFICATION	1.410515406465173E-4	IMPLEMENTATION
// no opt, no rest, exact match	WITHOUT_CLASSIFICATION	0.9997854643453266	WITHOUT_CLASSIFICATION	2.1453565467347E-4	IMPLEMENTATION
// only rest, must be at least required	WITHOUT_CLASSIFICATION	0.9998190266626495	WITHOUT_CLASSIFICATION	1.8097333735052804E-4	IMPLEMENTATION
// opt but no rest, must be at least required and no more than required + opt	WITHOUT_CLASSIFICATION	0.9998006049320272	WITHOUT_CLASSIFICATION	1.9939506797271236E-4	IMPLEMENTATION
// opt and rest, must be at least required	WITHOUT_CLASSIFICATION	0.99976738988048	WITHOUT_CLASSIFICATION	2.3261011951996205E-4	IMPLEMENTATION
// No block from a nil proc	WITHOUT_CLASSIFICATION	0.9996797861262707	WITHOUT_CLASSIFICATION	3.2021387372924213E-4	IMPLEMENTATION
// If not already a proc then we should try and make it one.	WITHOUT_CLASSIFICATION	0.9997967376884306	WITHOUT_CLASSIFICATION	2.0326231156929842E-4	IMPLEMENTATION
// The current block is already associated with proc.  No need to create a new one	WITHOUT_CLASSIFICATION	0.999989025504275	WITHOUT_CLASSIFICATION	1.0974495724951753E-5	IMPLEMENTATION
// Has the method that is calling super received a block argument	WITHOUT_CLASSIFICATION	0.9998323526458652	WITHOUT_CLASSIFICATION	1.6764735413470804E-4	IMPLEMENTATION
/* NUL */	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9998175574171996	WITHOUT_CLASSIFICATION	1.8244258280055147E-4	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9997004948796478	WITHOUT_CLASSIFICATION	2.995051203521142E-4	IMPLEMENTATION
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9997418605702688	WITHOUT_CLASSIFICATION	2.5813942973119643E-4	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9995927934750855	WITHOUT_CLASSIFICATION	4.0720652491458876E-4	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9995793408161489	WITHOUT_CLASSIFICATION	4.2065918385119196E-4	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9995793408161489	WITHOUT_CLASSIFICATION	4.2065918385119196E-4	IMPLEMENTATION
// classes are directly in the hierarchy, so no special logic is necessary for implementer	WITHOUT_CLASSIFICATION	0.9967847164862391	WITHOUT_CLASSIFICATION	0.003215283513760844	IMPLEMENTATION
// must be power of 2 // must be power of 2	WITHOUT_CLASSIFICATION	0.9997551438753899	WITHOUT_CLASSIFICATION	2.448561246101262E-4	IMPLEMENTATION
// Find power-of-two sizes best matching arguments	WITHOUT_CLASSIFICATION	0.999835361988421	WITHOUT_CLASSIFICATION	1.6463801157888687E-4	IMPLEMENTATION
// note segmentShift differs from ConcurrentHashMap's calculation due to // issues with System.identityHashCode (upper n bits always 0, at least  // under Java 1.6 / WinXP)	WITHOUT_CLASSIFICATION	0.9998746097722764	WITHOUT_CLASSIFICATION	1.2539022772362207E-4	IMPLEMENTATION
//      System.err.println("***ObjectProxyCache " + id + " started at "+ new java.util.Date());	WITHOUT_CLASSIFICATION	0.9999003780051934	WITHOUT_CLASSIFICATION	9.962199480664788E-5	IMPLEMENTATION
//    protected void finalize() throws Throwable { //        System.err.println("***ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); //    }	WITHOUT_CLASSIFICATION	0.9999422069510862	WITHOUT_CLASSIFICATION	5.779304891376908E-5	IMPLEMENTATION
// EntryRefs include hash with key to facilitate lookup by Segment#expunge // after ref is removed from ReferenceQueue	WITHOUT_CLASSIFICATION	0.9994549963851573	WITHOUT_CLASSIFICATION	5.450036148426854E-4	IMPLEMENTATION
// Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather // makes it a final field.  The theory is that doing so should force a happens-before // relationship WRT the WeakReference constructor, guaranteeing that the key will be // visibile to other threads (unless it's been GC'ed).  See JLS 17.5 (final fields) and // 17.4.5 (Happens-before order) to confirm or refute my reasoning here.	WITHOUT_CLASSIFICATION	0.9999747081539364	WITHOUT_CLASSIFICATION	2.5291846063521382E-5	IMPLEMENTATION
// references to the Java object and its proxy will either both be // weak or both be soft, since the proxy contains a strong reference // to the object, so it wouldn't make sense for the reference types // to differ.	WITHOUT_CLASSIFICATION	0.999986365385603	WITHOUT_CLASSIFICATION	1.3634614396854031E-5	IMPLEMENTATION
// ctor used by remove/rehash	WITHOUT_CLASSIFICATION	0.9996333081524764	WITHOUT_CLASSIFICATION	3.6669184752359535E-4	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.9998038403107277	WITHOUT_CLASSIFICATION	1.9615968927243476E-4	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.9998038403107277	WITHOUT_CLASSIFICATION	1.9615968927243476E-4	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.9998038403107277	WITHOUT_CLASSIFICATION	1.9615968927243476E-4	IMPLEMENTATION
// note that we'll potentially see the refs for both the java object and // proxy -- whichever we see first will cause the entry to be removed; // the other will not match an entry and will be ignored.	WITHOUT_CLASSIFICATION	0.9999545157464773	WITHOUT_CLASSIFICATION	4.5484253522736875E-5	IMPLEMENTATION
// temp method to verify tableSize value // must be called under lock	WITHOUT_CLASSIFICATION	0.9999267346766085	WITHOUT_CLASSIFICATION	7.326532339150822E-5	IMPLEMENTATION
// Single node in list	WITHOUT_CLASSIFICATION	0.9996016404207304	WITHOUT_CLASSIFICATION	3.9835957926961815E-4	IMPLEMENTATION
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9997244741253967	WITHOUT_CLASSIFICATION	2.7552587460331115E-4	IMPLEMENTATION
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9997244741253967	WITHOUT_CLASSIFICATION	2.7552587460331115E-4	IMPLEMENTATION
// entry exists, proxy has been gc'ed. replace entry.	WITHOUT_CLASSIFICATION	0.99984886482227	WITHOUT_CLASSIFICATION	1.511351777300528E-4	IMPLEMENTATION
// Where we get new positions from.	WITHOUT_CLASSIFICATION	0.9998400222793172	WITHOUT_CLASSIFICATION	1.5997772068267066E-4	IMPLEMENTATION
// Start of string ([, (, {, <, ', ", \n) 	WITHOUT_CLASSIFICATION	0.9998895535465964	WITHOUT_CLASSIFICATION	1.104464534036232E-4	IMPLEMENTATION
// Number of newlines read from the reader	WITHOUT_CLASSIFICATION	0.9998931539867117	WITHOUT_CLASSIFICATION	1.0684601328818598E-4	IMPLEMENTATION
// How many bytes into the source are we?	WITHOUT_CLASSIFICATION	0.9999034329502251	WITHOUT_CLASSIFICATION	9.656704977492374E-5	IMPLEMENTATION
// For 'list' and only populated if list is not null.	WITHOUT_CLASSIFICATION	0.9998296262832395	WITHOUT_CLASSIFICATION	1.703737167604795E-4	IMPLEMENTATION
// Last full line read.	WITHOUT_CLASSIFICATION	0.9996176595651158	WITHOUT_CLASSIFICATION	3.823404348841643E-4	IMPLEMENTATION
// Save sourceLine for error reporting to display line where error occurred	WITHOUT_CLASSIFICATION	0.9998718443300684	WITHOUT_CLASSIFICATION	1.2815566993156793E-4	IMPLEMENTATION
// Get rest of line. lineBuffer filled as side-effect...	WITHOUT_CLASSIFICATION	0.9997724435786078	WITHOUT_CLASSIFICATION	2.2755642139225284E-4	IMPLEMENTATION
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9997755113380999	WITHOUT_CLASSIFICATION	2.2448866189999422E-4	IMPLEMENTATION
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9997755113380999	WITHOUT_CLASSIFICATION	2.2448866189999422E-4	IMPLEMENTATION
// End of string (], ), }, >, ', ", \0)	WITHOUT_CLASSIFICATION	0.9998329804076673	WITHOUT_CLASSIFICATION	1.6701959233269835E-4	IMPLEMENTATION
// How many strings are nested in the current string term	WITHOUT_CLASSIFICATION	0.9999752691885988	WITHOUT_CLASSIFICATION	2.473081140123246E-5	IMPLEMENTATION
// Single-quote fast path	WITHOUT_CLASSIFICATION	0.9995932223870116	WITHOUT_CLASSIFICATION	4.067776129883268E-4	IMPLEMENTATION
// Regexp engine 'java'	WITHOUT_CLASSIFICATION	0.9995966496765293	WITHOUT_CLASSIFICATION	4.033503234707183E-4	IMPLEMENTATION
// Was a goto in original ruby lexer	WITHOUT_CLASSIFICATION	0.9997839231954054	WITHOUT_CLASSIFICATION	2.160768045945956E-4	IMPLEMENTATION
/* just ignore */	WITHOUT_CLASSIFICATION	0.999748165301445	WITHOUT_CLASSIFICATION	2.518346985550675E-4	IMPLEMENTATION
/* octal constant */	WITHOUT_CLASSIFICATION	0.9995737147418313	WITHOUT_CLASSIFICATION	4.262852581687727E-4	IMPLEMENTATION
/* hex constant */	WITHOUT_CLASSIFICATION	0.9995672313057598	WITHOUT_CLASSIFICATION	4.3276869424034977E-4	IMPLEMENTATION
// PUSH(1)	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
// POP	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
// PUSH(0).  If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.	WITHOUT_CLASSIFICATION	0.9998292951716616	WITHOUT_CLASSIFICATION	1.707048283382254E-4	IMPLEMENTATION
// LEXPOP	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
// SET_P	WITHOUT_CLASSIFICATION	0.9965327433637611	WITHOUT_CLASSIFICATION	0.0034672566362388816	IMPLEMENTATION
// Marker delimiting heredoc boundary	WITHOUT_CLASSIFICATION	0.9996855363483004	WITHOUT_CLASSIFICATION	3.144636516997086E-4	IMPLEMENTATION
// Found end marker for this heredoc	WITHOUT_CLASSIFICATION	0.9998692636656084	WITHOUT_CLASSIFICATION	1.3073633439173148E-4	IMPLEMENTATION
// Put back lastLine for any elements past start of heredoc marker	WITHOUT_CLASSIFICATION	0.9998933051933194	WITHOUT_CLASSIFICATION	1.0669480668050816E-4	IMPLEMENTATION
// Last token read via yylex().	WITHOUT_CLASSIFICATION	0.9997473460581348	WITHOUT_CLASSIFICATION	2.526539418652316E-4	IMPLEMENTATION
// Value of last token which had a value associated with it.	WITHOUT_CLASSIFICATION	0.9998895809158851	WITHOUT_CLASSIFICATION	1.1041908411493956E-4	IMPLEMENTATION
// Stream of data that yylex() examines.	WITHOUT_CLASSIFICATION	0.9997867224862997	WITHOUT_CLASSIFICATION	2.1327751370030926E-4	IMPLEMENTATION
// Used for tiny smidgen of grammar in lexer (see setParserSupport())	WITHOUT_CLASSIFICATION	0.999804220126551	WITHOUT_CLASSIFICATION	1.9577987344903845E-4	IMPLEMENTATION
// Give a name to a value.  Enebo: This should be used more.	WITHOUT_CLASSIFICATION	0.9994806158696632	WITHOUT_CLASSIFICATION	5.193841303367926E-4	IMPLEMENTATION
// When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').	WITHOUT_CLASSIFICATION	0.9998751570041713	WITHOUT_CLASSIFICATION	1.248429958287909E-4	IMPLEMENTATION
// Are we lexing Ruby 1.8 or 1.9+ syntax	WITHOUT_CLASSIFICATION	0.999720390504539	WITHOUT_CLASSIFICATION	2.79609495461046E-4	IMPLEMENTATION
// Count of nested parentheses (1.9 only)	WITHOUT_CLASSIFICATION	0.9997283769028102	WITHOUT_CLASSIFICATION	2.716230971897298E-4	IMPLEMENTATION
// 1.9 only	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
// Short-hand (e.g. %{,%.,%!,... versus %Q{).	WITHOUT_CLASSIFICATION	0.9997273340222561	WITHOUT_CLASSIFICATION	2.726659777439252E-4	IMPLEMENTATION
// Long-hand (e.g. %Q{}).	WITHOUT_CLASSIFICATION	0.9995843469451202	WITHOUT_CLASSIFICATION	4.156530548797899E-4	IMPLEMENTATION
/* no mb || ismbchar(term)*/	WITHOUT_CLASSIFICATION	0.9995794992358752	WITHOUT_CLASSIFICATION	4.2050076412483695E-4	IMPLEMENTATION
/*     * Not normally used, but is left in here since it can be useful in debugging     * grammar and lexing problems.     *     */	WITHOUT_CLASSIFICATION	0.9999129165659921	WITHOUT_CLASSIFICATION	8.708343400787786E-5	IMPLEMENTATION
// DEBUGGING HELP 	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
/* '\v' */	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
/* end of script. */	WITHOUT_CLASSIFICATION	0.9997201674871977	WITHOUT_CLASSIFICATION	2.798325128022854E-4	IMPLEMENTATION
/* white spaces */	WITHOUT_CLASSIFICATION	0.9996699975568575	WITHOUT_CLASSIFICATION	3.300024431424487E-4	IMPLEMENTATION
/* '\v' */	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
/* it's a comment */	WITHOUT_CLASSIFICATION	0.9996795057516732	WITHOUT_CLASSIFICATION	3.2049424832686086E-4	IMPLEMENTATION
// Replace a string of newlines with a single one	WITHOUT_CLASSIFICATION	0.9998630692919691	WITHOUT_CLASSIFICATION	1.3693070803082562E-4	IMPLEMENTATION
/* $\: output record separator */	WITHOUT_CLASSIFICATION	0.9998144977196309	WITHOUT_CLASSIFICATION	1.8550228036911734E-4	IMPLEMENTATION
// EOF (ENEBO: After default?	WITHOUT_CLASSIFICATION	0.9996908793582222	WITHOUT_CLASSIFICATION	3.091206417778881E-4	IMPLEMENTATION
// documentation nodes	WITHOUT_CLASSIFICATION	0.9996478691720464	WITHOUT_CLASSIFICATION	3.5213082795360875E-4	IMPLEMENTATION
// In case last next was the newline.	WITHOUT_CLASSIFICATION	0.9998762645103616	WITHOUT_CLASSIFICATION	1.2373548963844563E-4	IMPLEMENTATION
// Just a plain bang	WITHOUT_CLASSIFICATION	0.9996539374033223	WITHOUT_CLASSIFICATION	3.4606259667767185E-4	IMPLEMENTATION
/* $_: last read line string */	WITHOUT_CLASSIFICATION	0.9998538818208448	WITHOUT_CLASSIFICATION	1.461181791551804E-4	IMPLEMENTATION
/* $~: match-data */	WITHOUT_CLASSIFICATION	0.9995677253235561	WITHOUT_CLASSIFICATION	4.322746764438956E-4	IMPLEMENTATION
/* $*: argv */	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
/* $$: pid */	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
/* $?: last status */	WITHOUT_CLASSIFICATION	0.9996320737563948	WITHOUT_CLASSIFICATION	3.67926243605126E-4	IMPLEMENTATION
/* $!: error string */	WITHOUT_CLASSIFICATION	0.9997573304569571	WITHOUT_CLASSIFICATION	2.426695430428597E-4	IMPLEMENTATION
/* $@: error position */	WITHOUT_CLASSIFICATION	0.9997767417190331	WITHOUT_CLASSIFICATION	2.232582809668699E-4	IMPLEMENTATION
/* $/: input record separator */	WITHOUT_CLASSIFICATION	0.9998009318971194	WITHOUT_CLASSIFICATION	1.990681028806593E-4	IMPLEMENTATION
/* $;: field separator */	WITHOUT_CLASSIFICATION	0.9997396699555126	WITHOUT_CLASSIFICATION	2.603300444874291E-4	IMPLEMENTATION
/* $,: output field separator */	WITHOUT_CLASSIFICATION	0.9998485280748923	WITHOUT_CLASSIFICATION	1.5147192510770507E-4	IMPLEMENTATION
/* $.: last read line number */	WITHOUT_CLASSIFICATION	0.9998114446789714	WITHOUT_CLASSIFICATION	1.8855532102846748E-4	IMPLEMENTATION
/* $=: ignorecase */	WITHOUT_CLASSIFICATION	0.9997151991871417	WITHOUT_CLASSIFICATION	2.8480081285830815E-4	IMPLEMENTATION
/* $:: load path */	WITHOUT_CLASSIFICATION	0.9995512786517207	WITHOUT_CLASSIFICATION	4.4872134827930374E-4	IMPLEMENTATION
/* $<: reading filename */	WITHOUT_CLASSIFICATION	0.9997934391601583	WITHOUT_CLASSIFICATION	2.0656083984176818E-4	IMPLEMENTATION
/* $": already loaded files */	WITHOUT_CLASSIFICATION	0.999782974397348	WITHOUT_CLASSIFICATION	2.1702560265211206E-4	IMPLEMENTATION
/* $&: last match */	WITHOUT_CLASSIFICATION	0.9995927453343562	WITHOUT_CLASSIFICATION	4.0725466564393E-4	IMPLEMENTATION
/* $`: string before last match */	WITHOUT_CLASSIFICATION	0.9998614549050127	WITHOUT_CLASSIFICATION	1.3854509498731747E-4	IMPLEMENTATION
/* $': string after last match */	WITHOUT_CLASSIFICATION	0.9998483387440908	WITHOUT_CLASSIFICATION	1.5166125590921934E-4	IMPLEMENTATION
// methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop	WITHOUT_CLASSIFICATION	0.9997753146162339	WITHOUT_CLASSIFICATION	2.2468538376606617E-4	IMPLEMENTATION
/* See if it is a reserved word.  */	WITHOUT_CLASSIFICATION	0.9998146739548757	WITHOUT_CLASSIFICATION	1.85326045124296E-4	IMPLEMENTATION
// enum lex_state	WITHOUT_CLASSIFICATION	0.9995263561335278	WITHOUT_CLASSIFICATION	4.736438664722585E-4	IMPLEMENTATION
// block (primary)	WITHOUT_CLASSIFICATION	0.9995193432876749	WITHOUT_CLASSIFICATION	4.8065671232516824E-4	IMPLEMENTATION
// block (expr)	WITHOUT_CLASSIFICATION	0.9995091698999037	WITHOUT_CLASSIFICATION	4.908301000964076E-4	IMPLEMENTATION
// hash	WITHOUT_CLASSIFICATION	0.9965150474668618	WITHOUT_CLASSIFICATION	0.0034849525331382743	IMPLEMENTATION
// ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.	WITHOUT_CLASSIFICATION	0.9991574912206155	WITHOUT_CLASSIFICATION	8.42508779384488E-4	IMPLEMENTATION
// FIXME: peek('u') utf8 stuff for 1.9	WITHOUT_CLASSIFICATION	0.9997007215372087	WITHOUT_CLASSIFICATION	2.9927846279126683E-4	IMPLEMENTATION
// We don't append '+' since Java number parser gets confused	WITHOUT_CLASSIFICATION	0.9998801595355151	WITHOUT_CLASSIFICATION	1.198404644848089E-4	IMPLEMENTATION
//  hexadecimal	WITHOUT_CLASSIFICATION	0.9995294483221634	WITHOUT_CLASSIFICATION	4.705516778365814E-4	IMPLEMENTATION
// binary	WITHOUT_CLASSIFICATION	0.9971115666659726	WITHOUT_CLASSIFICATION	0.0028884333340274057	IMPLEMENTATION
// decimal	WITHOUT_CLASSIFICATION	0.9967028335829909	WITHOUT_CLASSIFICATION	0.003297166417009045	IMPLEMENTATION
//Octal	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
//  '_' in number just ignored	WITHOUT_CLASSIFICATION	0.9999109786530201	WITHOUT_CLASSIFICATION	8.902134697990282E-5	IMPLEMENTATION
// backslash	WITHOUT_CLASSIFICATION	0.9995286465487506	WITHOUT_CLASSIFICATION	4.713534512494079E-4	IMPLEMENTATION
// newline	WITHOUT_CLASSIFICATION	0.9968866120684915	WITHOUT_CLASSIFICATION	0.003113387931508462	IMPLEMENTATION
// horizontal tab	WITHOUT_CLASSIFICATION	0.9996196539206359	WITHOUT_CLASSIFICATION	3.8034607936408566E-4	IMPLEMENTATION
// form feed	WITHOUT_CLASSIFICATION	0.99957074315967	WITHOUT_CLASSIFICATION	4.292568403299337E-4	IMPLEMENTATION
// vertical tab	WITHOUT_CLASSIFICATION	0.9996348008968077	WITHOUT_CLASSIFICATION	3.6519910319226693E-4	IMPLEMENTATION
// alarm(bell)	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
// escape	WITHOUT_CLASSIFICATION	0.9966229135883048	WITHOUT_CLASSIFICATION	0.0033770864116953125	IMPLEMENTATION
// hex constant	WITHOUT_CLASSIFICATION	0.9995751409980237	WITHOUT_CLASSIFICATION	4.248590019763526E-4	IMPLEMENTATION
//char hexValue = scanHex(2);	WITHOUT_CLASSIFICATION	0.9995911133371016	WITHOUT_CLASSIFICATION	4.088866628984618E-4	IMPLEMENTATION
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9997659150491406	WITHOUT_CLASSIFICATION	2.3408495085949126E-4	IMPLEMENTATION
// space	WITHOUT_CLASSIFICATION	0.9967055873247328	WITHOUT_CLASSIFICATION	0.00329441267526723	IMPLEMENTATION
// Where we started this marker match	WITHOUT_CLASSIFICATION	0.9997702287729348	WITHOUT_CLASSIFICATION	2.297712270651858E-4	IMPLEMENTATION
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.999982127040855	WITHOUT_CLASSIFICATION	1.7872959144945773E-5	IMPLEMENTATION
// We use offset here to keep track of extra newlines for windows	WITHOUT_CLASSIFICATION	0.999884087377125	WITHOUT_CLASSIFICATION	1.1591262287509106E-4	IMPLEMENTATION
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9997659150491406	WITHOUT_CLASSIFICATION	2.3408495085949126E-4	IMPLEMENTATION
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.999784777725346	WITHOUT_CLASSIFICATION	2.1522227465392728E-4	IMPLEMENTATION
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.999784777725346	WITHOUT_CLASSIFICATION	2.1522227465392728E-4	IMPLEMENTATION
// Where we get our newest char's	WITHOUT_CLASSIFICATION	0.9997590761603854	WITHOUT_CLASSIFICATION	2.4092383961472346E-4	IMPLEMENTATION
// Our readback/pushback buffer.	WITHOUT_CLASSIFICATION	0.9997196770127085	WITHOUT_CLASSIFICATION	2.8032298729148105E-4	IMPLEMENTATION
// index of last character in pushback buffer	WITHOUT_CLASSIFICATION	0.999808456728781	WITHOUT_CLASSIFICATION	1.9154327121904694E-4	IMPLEMENTATION
// Character read before previous read	WITHOUT_CLASSIFICATION	0.9998440657373884	WITHOUT_CLASSIFICATION	1.5593426261166233E-4	IMPLEMENTATION
// keep value of twoAgo around so we can restore after we unread	WITHOUT_CLASSIFICATION	0.9998194876375411	WITHOUT_CLASSIFICATION	1.8051236245880233E-4	IMPLEMENTATION
// NetProtocolBufferedIOLibrary	WITHOUT_CLASSIFICATION	0.9997105195003465	WITHOUT_CLASSIFICATION	2.8948049965346417E-4	IMPLEMENTATION
// BigDecimalLibrary	WITHOUT_CLASSIFICATION	0.9995328975463564	WITHOUT_CLASSIFICATION	4.671024536435318E-4	IMPLEMENTATION
// TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. // We did it here for now	WITHOUT_CLASSIFICATION	0.9350324857934871	WITHOUT_CLASSIFICATION	0.06496751420651294	IMPLEMENTATION
// Ruby's designation for some platforms, minus version numbers in some cases	WITHOUT_CLASSIFICATION	0.9998288008784394	WITHOUT_CLASSIFICATION	1.711991215605177E-4	IMPLEMENTATION
// that's what JDK5 produces on Windows Vista	WITHOUT_CLASSIFICATION	0.9997405407389495	WITHOUT_CLASSIFICATION	2.5945926105052E-4	IMPLEMENTATION
// Rubygems is too specific on host cpu so until we have real need lets default to universal //setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));	WITHOUT_CLASSIFICATION	0.9999308048445237	WITHOUT_CLASSIFICATION	6.919515547631332E-5	IMPLEMENTATION
// Our shell scripts pass in non-canonicalized paths, but even if we didn't // anyone who did would become unhappy because Ruby apps expect no relative // operators in the pathname (rubygems, for example).	WITHOUT_CLASSIFICATION	0.9999625677206258	WITHOUT_CLASSIFICATION	3.7432279374289135E-5	IMPLEMENTATION
// this set is only for darwin	WITHOUT_CLASSIFICATION	0.9997883110992416	WITHOUT_CLASSIFICATION	2.1168890075840558E-4	IMPLEMENTATION
// DigestLibrary	WITHOUT_CLASSIFICATION	0.999525258558795	WITHOUT_CLASSIFICATION	4.747414412049338E-4	IMPLEMENTATION
// all errors, just info; do not prevent loading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.999624284272637	WITHOUT_CLASSIFICATION	3.757157273629777E-4	IMPLEMENTATION
// all errors, just info; do not prevent unloading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9997644886534006	WITHOUT_CLASSIFICATION	2.355113465993256E-4	IMPLEMENTATION
// do nothing, return dummy version below	WITHOUT_CLASSIFICATION	0.9999782859086936	WITHOUT_CLASSIFICATION	2.1714091306314007E-5	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
// line 329	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9998481916923296	WITHOUT_CLASSIFICATION	1.5180830767039287E-4	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.999511677373098	WITHOUT_CLASSIFICATION	4.883226269019527E-4	IMPLEMENTATION
// dynamically increase	WITHOUT_CLASSIFICATION	0.9996460603576081	WITHOUT_CLASSIFICATION	3.5393964239187846E-4	IMPLEMENTATION
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9998813340612321	WITHOUT_CLASSIFICATION	1.1866593876788902E-4	IMPLEMENTATION
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9996909838874752	WITHOUT_CLASSIFICATION	3.0901611252472945E-4	IMPLEMENTATION
// shift to yyN	WITHOUT_CLASSIFICATION	0.999535801102601	WITHOUT_CLASSIFICATION	4.6419889739895287E-4	IMPLEMENTATION
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9995271360685437	WITHOUT_CLASSIFICATION	4.728639314563163E-4	IMPLEMENTATION
// leave stack alone	WITHOUT_CLASSIFICATION	0.9995650197739586	WITHOUT_CLASSIFICATION	4.34980226041376E-4	IMPLEMENTATION
// line 271	WITHOUT_CLASSIFICATION	0.9995390378218041	WITHOUT_CLASSIFICATION	4.609621781959285E-4	IMPLEMENTATION
// line 274	WITHOUT_CLASSIFICATION	0.9995390378218041	WITHOUT_CLASSIFICATION	4.609621781959285E-4	IMPLEMENTATION
// line 303	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 311	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 314	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 317	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 332	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 338	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 341	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 344	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 351	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 358	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 367	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 372	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 378	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 382	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 407	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 411	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 414	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 417	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 420	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 426	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 434	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 443	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 446	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 452	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 457	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 464	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 467	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 470	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 479	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 484	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 486	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 492	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 498	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 501	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 504	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 507	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 510	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 519	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 525	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.999511677373098	WITHOUT_CLASSIFICATION	4.883226269019527E-4	IMPLEMENTATION
// line 537	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 540	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 543	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 546	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 556	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 559	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 563	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 566	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 569	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 575	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 578	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 587	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 596	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 604	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 607	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 610	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 613	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 616	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 634	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 638	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 643	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 646	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 655	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 660	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 667	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 670	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 672	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 696	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 701	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 717	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 720	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 726	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 729	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 732	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 735	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 738	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 751	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 754	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 757	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 760	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 763	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 769	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 772	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 775	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 782	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 788	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 791	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 794	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 797	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 803	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 806	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 809	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 815	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 818	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 821	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 824	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 830	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 833	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 836	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 839	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 842	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 848	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 852	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 858	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 861	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 868	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 871	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 876	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 879	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 883	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 893	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 896	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 899	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 903	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 907	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 915	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 920	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 923	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 926	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 932	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 936	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 940	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 944	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 948	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 956	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 960	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 964	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 967	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 972	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 978	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 980	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 984	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 986	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 996	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 1001	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1004	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1008	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1014	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1029	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1032	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1034	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1045	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1048	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1051	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1058	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1070	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1073	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1076	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1079	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1082	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1089	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1097	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1100	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1103	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1107	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1111	WITHOUT_CLASSIFICATION	0.9995392736375002	WITHOUT_CLASSIFICATION	4.607263624998459E-4	IMPLEMENTATION
// line 1113	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1115	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1119	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1130	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1133	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1135	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1137	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1140	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1151	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1154	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1158	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1164	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1175	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1178	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1187	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1189	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1193	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1204	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1207	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1210	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1214	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1234	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1239	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1243	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1247	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1251	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1263	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1269	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1280	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1283	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1290	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1296	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1299	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1302	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1309	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1313	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1315	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1320	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1328	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1335	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1348	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1352	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1358	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1374	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1381	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1387	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1392	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1415	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1431	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1434	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1440	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1443	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1453	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1456	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1462	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1465	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1470	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1477	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1480	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1485	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1488	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1496	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1502	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1510	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1513	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1516	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1533	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1550	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1553	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1556	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1565	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1568	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1571	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1574	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1577	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1587	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1595	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1598	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1600	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1609	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1623	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1626	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1629	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1632	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1638	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1641	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1644	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1649	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1655	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1658	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1661	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1672	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1677	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1687	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1694	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1705	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1708	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1725	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1733	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1742	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1745	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1749	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1757	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1769	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1772	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1775	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1784	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1808	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1814	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1818	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1822	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
/* force for args */	WITHOUT_CLASSIFICATION	0.9995715211190563	WITHOUT_CLASSIFICATION	4.284788809436963E-4	IMPLEMENTATION
/*XXX 0;*/	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
/*                      $$ = $3;*/	WITHOUT_CLASSIFICATION	0.999919547715609	WITHOUT_CLASSIFICATION	8.045228439104265E-5	IMPLEMENTATION
/*                  }*/	WITHOUT_CLASSIFICATION	0.9998900713509121	WITHOUT_CLASSIFICATION	1.0992864908781444E-4	IMPLEMENTATION
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9997300944075114	WITHOUT_CLASSIFICATION	2.6990559248864736E-4	IMPLEMENTATION
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9998462803944462	WITHOUT_CLASSIFICATION	1.5371960555380382E-4	IMPLEMENTATION
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9997632827020894	WITHOUT_CLASSIFICATION	2.3671729791066286E-4	IMPLEMENTATION
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9997632827020894	WITHOUT_CLASSIFICATION	2.3671729791066286E-4	IMPLEMENTATION
/* NOEX_PRIVATE for toplevel */	WITHOUT_CLASSIFICATION	0.9997324534524836	WITHOUT_CLASSIFICATION	2.6754654751647586E-4	IMPLEMENTATION
/*mirko: check*/	WITHOUT_CLASSIFICATION	0.9994734395106982	WITHOUT_CLASSIFICATION	5.265604893016672E-4	IMPLEMENTATION
/* Include pipes on multiple arg type*/	WITHOUT_CLASSIFICATION	0.9997414556251254	WITHOUT_CLASSIFICATION	2.585443748746387E-4	IMPLEMENTATION
// line 529	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9995793788471994	WITHOUT_CLASSIFICATION	4.2062115280061324E-4	IMPLEMENTATION
/* XXX*/	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
/* zero length array */	WITHOUT_CLASSIFICATION	0.999653861563162	WITHOUT_CLASSIFICATION	3.461384368379983E-4	IMPLEMENTATION
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9997700457083715	WITHOUT_CLASSIFICATION	2.2995429162857203E-4	IMPLEMENTATION
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9995679257519677	WITHOUT_CLASSIFICATION	4.320742480321801E-4	IMPLEMENTATION
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9997631155287311	WITHOUT_CLASSIFICATION	2.3688447126898863E-4	IMPLEMENTATION
// line 1827 "DefaultRubyParser.y"	WITHOUT_CLASSIFICATION	0.9997650407224086	WITHOUT_CLASSIFICATION	2.349592775915498E-4	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999103094150426	WITHOUT_CLASSIFICATION	8.969058495749358E-5	IMPLEMENTATION
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9997034741876195	WITHOUT_CLASSIFICATION	2.9652581238044754E-4	IMPLEMENTATION
// line 7713 "-"	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// local scopes are argument scopes by default	WITHOUT_CLASSIFICATION	0.9998997022576201	WITHOUT_CLASSIFICATION	1.002977423798714E-4	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9998204875401712	WITHOUT_CLASSIFICATION	1.7951245982881836E-4	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9998204875401712	WITHOUT_CLASSIFICATION	1.7951245982881836E-4	IMPLEMENTATION
// We know this is a block scope because a local scope cannot be within a local scope // If topScope was itself it would have created a LocalAsgnNode above.	WITHOUT_CLASSIFICATION	0.9999517408573552	WITHOUT_CLASSIFICATION	4.8259142644823464E-5	IMPLEMENTATION
// ENEBO: 1.9 has CURR nodes for local/block variables.  We don't.  I believe we follow proper logic	WITHOUT_CLASSIFICATION	0.9997797628480026	WITHOUT_CLASSIFICATION	2.2023715199728168E-4	IMPLEMENTATION
// odd...but it is odd in ruby too.	WITHOUT_CLASSIFICATION	0.9997296985826326	WITHOUT_CLASSIFICATION	2.703014173674424E-4	IMPLEMENTATION
// What linenumber will the source think it starts from?	WITHOUT_CLASSIFICATION	0.9998431132363387	WITHOUT_CLASSIFICATION	1.5688676366135848E-4	IMPLEMENTATION
// Is this inline source (aka -e "...source...")	WITHOUT_CLASSIFICATION	0.9996764122922257	WITHOUT_CLASSIFICATION	3.2358770777427237E-4	IMPLEMENTATION
// We parse evals more often in source so assume an eval parse.	WITHOUT_CLASSIFICATION	0.9997402620405281	WITHOUT_CLASSIFICATION	2.597379594719548E-4	IMPLEMENTATION
// Should positions added extra IDE-friendly information and leave in all newline nodes	WITHOUT_CLASSIFICATION	0.999921119002276	WITHOUT_CLASSIFICATION	7.888099772393326E-5	IMPLEMENTATION
// Will parser parse Duby grammar Extensions	WITHOUT_CLASSIFICATION	0.9997150339686791	WITHOUT_CLASSIFICATION	2.849660313208412E-4	IMPLEMENTATION
// Should we display extra debug information while parsing?	WITHOUT_CLASSIFICATION	0.9997777777165581	WITHOUT_CLASSIFICATION	2.2222228344192504E-4	IMPLEMENTATION
// __END__ marker offset (-1 means none present)	WITHOUT_CLASSIFICATION	0.9996045259073237	WITHOUT_CLASSIFICATION	3.9547409267621587E-4	IMPLEMENTATION
// Parser states:	WITHOUT_CLASSIFICATION	0.9995694282556765	WITHOUT_CLASSIFICATION	4.3057174432351724E-4	IMPLEMENTATION
// Is the parser current within a singleton (value is number of nested singletons)	WITHOUT_CLASSIFICATION	0.9999367821705879	WITHOUT_CLASSIFICATION	6.321782941209536E-5	IMPLEMENTATION
// Is the parser currently within a method definition	WITHOUT_CLASSIFICATION	0.9998493230332378	WITHOUT_CLASSIFICATION	1.5067696676214037E-4	IMPLEMENTATION
// LOCALVAR	WITHOUT_CLASSIFICATION	0.9995208119981502	WITHOUT_CLASSIFICATION	4.7918800184969555E-4	IMPLEMENTATION
// CONSTANT	WITHOUT_CLASSIFICATION	0.9995252557496404	WITHOUT_CLASSIFICATION	4.747442503596885E-4	IMPLEMENTATION
// INSTANCE VARIABLE	WITHOUT_CLASSIFICATION	0.999522351448199	WITHOUT_CLASSIFICATION	4.776485518009958E-4	IMPLEMENTATION
// Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])	WITHOUT_CLASSIFICATION	0.9998760683851197	WITHOUT_CLASSIFICATION	1.239316148802971E-4	IMPLEMENTATION
/* MRI: block_append */	WITHOUT_CLASSIFICATION	0.9995572338557281	WITHOUT_CLASSIFICATION	4.427661442719124E-4	IMPLEMENTATION
// Reduces overhead in interp by not set position every single line we encounter. 	WITHOUT_CLASSIFICATION	0.9998441699811873	WITHOUT_CLASSIFICATION	1.5583001881275163E-4	IMPLEMENTATION
// Assumption: tail is never a list node	WITHOUT_CLASSIFICATION	0.9995261047206692	WITHOUT_CLASSIFICATION	4.738952793308492E-4	IMPLEMENTATION
//        return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));	WITHOUT_CLASSIFICATION	0.9999718848130646	WITHOUT_CLASSIFICATION	2.8115186935344667E-5	IMPLEMENTATION
// Node	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9997762831871353	WITHOUT_CLASSIFICATION	2.2371681286463682E-4	IMPLEMENTATION
/*case CONSTNODE:                handleUselessWarn(node, "a constant"); return;*/	WITHOUT_CLASSIFICATION	0.9998818450835755	WITHOUT_CLASSIFICATION	1.18154916424456E-4	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9997762831871353	WITHOUT_CLASSIFICATION	2.2371681286463682E-4	IMPLEMENTATION
/*case CLASSNODE: case COLON2NODE:                handleUselessWarn(node, "::"); return;*/	WITHOUT_CLASSIFICATION	0.9998823691783196	WITHOUT_CLASSIFICATION	1.1763082168039935E-4	IMPLEMENTATION
/*case SELFNODE:                handleUselessWarn(node, "self"); return;*/	WITHOUT_CLASSIFICATION	0.999862245092979	WITHOUT_CLASSIFICATION	1.3775490702094644E-4	IMPLEMENTATION
// FIXME: DSTR,EVSTR,STR: warning "string literal in condition"	WITHOUT_CLASSIFICATION	0.9998127509099128	WITHOUT_CLASSIFICATION	1.8724909008717777E-4	IMPLEMENTATION
/* MRI: range_op */	WITHOUT_CLASSIFICATION	0.9995113274872285	WITHOUT_CLASSIFICATION	4.886725127714649E-4	IMPLEMENTATION
// Block and block pass passed in at same time....uh oh	WITHOUT_CLASSIFICATION	0.9998099421470321	WITHOUT_CLASSIFICATION	1.9005785296783312E-4	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
// tail must be EvStrNode at this point 	WITHOUT_CLASSIFICATION	0.9997774932561004	WITHOUT_CLASSIFICATION	2.2250674389945514E-4	IMPLEMENTATION
//Do not add an empty string node	WITHOUT_CLASSIFICATION	0.9999270235522916	WITHOUT_CLASSIFICATION	7.297644770843501E-5	IMPLEMENTATION
// Zero-Argument declaration	WITHOUT_CLASSIFICATION	0.9997216915001013	WITHOUT_CLASSIFICATION	2.7830849989876144E-4	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.999511677373098	WITHOUT_CLASSIFICATION	4.883226269019527E-4	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.999511677373098	WITHOUT_CLASSIFICATION	4.883226269019527E-4	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.999511677373098	WITHOUT_CLASSIFICATION	4.883226269019527E-4	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.999511677373098	WITHOUT_CLASSIFICATION	4.883226269019527E-4	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.999511677373098	WITHOUT_CLASSIFICATION	4.883226269019527E-4	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.999511677373098	WITHOUT_CLASSIFICATION	4.883226269019527E-4	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.999511677373098	WITHOUT_CLASSIFICATION	4.883226269019527E-4	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.999511677373098	WITHOUT_CLASSIFICATION	4.883226269019527E-4	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.999511677373098	WITHOUT_CLASSIFICATION	4.883226269019527E-4	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.999511677373098	WITHOUT_CLASSIFICATION	4.883226269019527E-4	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.999511677373098	WITHOUT_CLASSIFICATION	4.883226269019527E-4	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.999511677373098	WITHOUT_CLASSIFICATION	4.883226269019527E-4	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.999511677373098	WITHOUT_CLASSIFICATION	4.883226269019527E-4	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.999511677373098	WITHOUT_CLASSIFICATION	4.883226269019527E-4	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.999511677373098	WITHOUT_CLASSIFICATION	4.883226269019527E-4	IMPLEMENTATION
// dynamically increase	WITHOUT_CLASSIFICATION	0.9996460603576081	WITHOUT_CLASSIFICATION	3.5393964239187846E-4	IMPLEMENTATION
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9996909838874752	WITHOUT_CLASSIFICATION	3.0901611252472945E-4	IMPLEMENTATION
// shift to yyN	WITHOUT_CLASSIFICATION	0.999535801102601	WITHOUT_CLASSIFICATION	4.6419889739895287E-4	IMPLEMENTATION
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9995271360685437	WITHOUT_CLASSIFICATION	4.728639314563163E-4	IMPLEMENTATION
// leave stack alone	WITHOUT_CLASSIFICATION	0.9995650197739586	WITHOUT_CLASSIFICATION	4.34980226041376E-4	IMPLEMENTATION
// line 321	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 351	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 382	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 417	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 420	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 423	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 426	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 280	WITHOUT_CLASSIFICATION	0.9995401278511071	WITHOUT_CLASSIFICATION	4.598721488928647E-4	IMPLEMENTATION
// line 283	WITHOUT_CLASSIFICATION	0.9995395052930868	WITHOUT_CLASSIFICATION	4.6049470691314015E-4	IMPLEMENTATION
// line 296	WITHOUT_CLASSIFICATION	0.9995390378218041	WITHOUT_CLASSIFICATION	4.609621781959285E-4	IMPLEMENTATION
// line 324	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 327	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 331	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 333	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 336	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 342	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 345	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 348	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 354	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 368	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 377	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 388	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 392	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 397	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 429	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 432	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 436	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 445	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 448	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 454	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 459	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 466	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 469	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 478	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 481	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 488	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 494	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 497	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 503	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 506	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 509	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 512	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 521	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 526	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 540	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 543	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 546	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 566	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 610	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 672	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 691	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 696	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 772	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 782	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 785	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 788	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 791	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 534	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 549	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 552	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 558	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 561	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 571	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 574	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 579	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 586	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 589	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 592	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 595	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 598	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 623	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 627	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 630	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 633	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 639	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 648	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 657	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 661	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 666	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 678	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 682	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 688	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 699	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 706	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 708	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 727	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 737	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 753	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 779	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 801	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 808	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 811	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 817	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 842	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 845	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 848	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 893	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 899	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 932	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 944	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 960	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 980	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 1004	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1038	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 820	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 826	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 829	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 832	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 851	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 857	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 860	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 863	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 866	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 869	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 875	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 884	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 887	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 890	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 902	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 909	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 912	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 916	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 922	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 928	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 941	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 947	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 951	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 955	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 965	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 969	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 977	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 983	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 1013	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1023	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1035	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1041	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1043	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1054	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1057	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1060	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1069	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1075	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1105	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1111	WITHOUT_CLASSIFICATION	0.9995392736375002	WITHOUT_CLASSIFICATION	4.607263624998459E-4	IMPLEMENTATION
// line 1122	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1130	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1140	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1158	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1204	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1207	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1247	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1251	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1261	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1078	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1084	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1087	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1090	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1093	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1114	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1116	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1118	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1124	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1126	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1138	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1144	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1149	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1155	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1162	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1173	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1179	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1182	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1190	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1196	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1213	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1217	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1231	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1236	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1244	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1254	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1258	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1264	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1270	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1273	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1276	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1279	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1282	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1289	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1292	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1295	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1298	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1305	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1348	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1387	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1392	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1448	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1462	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1470	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1496	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1502	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1595	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1598	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1308	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1311	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1317	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1323	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1326	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1329	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1337	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1342	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1345	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1354	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1359	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1366	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1369	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1373	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1377	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1383	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1399	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1401	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1406	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1417	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1424	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1427	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1430	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1433	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1436	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1442	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1445	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1458	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1464	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1489	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1493	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1507	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1519	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1532	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1538	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1542	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1557	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1573	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1591	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1615	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1629	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1632	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1705	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1716	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1725	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1742	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1749	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1818	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1822	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1607	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1610	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1622	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1625	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1636	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1639	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1647	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1651	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1657	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1660	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1663	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1678	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1702	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1711	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1719	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1722	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1731	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1734	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1738	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1746	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1756	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1758	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1761	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1767	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1776	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1782	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1785	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1788	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1791	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1797	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1800	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1803	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1806	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1809	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1815	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1825	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1828	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1831	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1847	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9997632827020894	WITHOUT_CLASSIFICATION	2.3671729791066286E-4	IMPLEMENTATION
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9997632827020894	WITHOUT_CLASSIFICATION	2.3671729791066286E-4	IMPLEMENTATION
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9995793788471994	WITHOUT_CLASSIFICATION	4.2062115280061324E-4	IMPLEMENTATION
/* zero length array */	WITHOUT_CLASSIFICATION	0.999653861563162	WITHOUT_CLASSIFICATION	3.461384368379983E-4	IMPLEMENTATION
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9997700457083715	WITHOUT_CLASSIFICATION	2.2995429162857203E-4	IMPLEMENTATION
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9995679257519677	WITHOUT_CLASSIFICATION	4.320742480321801E-4	IMPLEMENTATION
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9997631155287311	WITHOUT_CLASSIFICATION	2.3688447126898863E-4	IMPLEMENTATION
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9997278512906939	WITHOUT_CLASSIFICATION	2.7214870930617255E-4	IMPLEMENTATION
// line 1854	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1869	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1872	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1877	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1886	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1898	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1902	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1905	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1911	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1918	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1935	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1938	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1942	WITHOUT_CLASSIFICATION	0.9995355697426509	WITHOUT_CLASSIFICATION	4.644302573491812E-4	IMPLEMENTATION
// line 1948	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1960	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1963	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1968	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1972	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1982	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1995	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 2000	WITHOUT_CLASSIFICATION	0.9995391246195877	WITHOUT_CLASSIFICATION	4.608753804123357E-4	IMPLEMENTATION
// line 2006	WITHOUT_CLASSIFICATION	0.9995390378218041	WITHOUT_CLASSIFICATION	4.609621781959285E-4	IMPLEMENTATION
// line 2010	WITHOUT_CLASSIFICATION	0.9995390378218041	WITHOUT_CLASSIFICATION	4.609621781959285E-4	IMPLEMENTATION
/* We may need to subtract addition offset off of first */	WITHOUT_CLASSIFICATION	0.9996247283236116	WITHOUT_CLASSIFICATION	3.7527167638842036E-4	IMPLEMENTATION
/* string fragment (we optimistically take one off in*/	WITHOUT_CLASSIFICATION	0.999813319136986	WITHOUT_CLASSIFICATION	1.866808630139993E-4	IMPLEMENTATION
/* ParserSupport.literal_concat).  Check token length*/	WITHOUT_CLASSIFICATION	0.999740061617788	WITHOUT_CLASSIFICATION	2.599383822121336E-4	IMPLEMENTATION
/* and subtract as neeeded.*/	WITHOUT_CLASSIFICATION	0.9995822909618484	WITHOUT_CLASSIFICATION	4.177090381516545E-4	IMPLEMENTATION
/*                    $$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);  */	WITHOUT_CLASSIFICATION	0.9999415072141784	WITHOUT_CLASSIFICATION	5.8492785821488753E-5	IMPLEMENTATION
/* ENEBO: arg surrounded by in_defined set/unset*/	WITHOUT_CLASSIFICATION	0.9997520432247342	WITHOUT_CLASSIFICATION	2.4795677526586346E-4	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999103094150426	WITHOUT_CLASSIFICATION	8.969058495749358E-5	IMPLEMENTATION
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9997034741876195	WITHOUT_CLASSIFICATION	2.9652581238044754E-4	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9998204875401712	WITHOUT_CLASSIFICATION	1.7951245982881836E-4	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9998204875401712	WITHOUT_CLASSIFICATION	1.7951245982881836E-4	IMPLEMENTATION
/* ENEBO: Removed !compile_for_eval which probably is to reduce warnings*/	WITHOUT_CLASSIFICATION	0.9996853082814128	WITHOUT_CLASSIFICATION	3.1469171858717113E-4	IMPLEMENTATION
/* was $$ = null;*/	WITHOUT_CLASSIFICATION	0.9995605832431792	WITHOUT_CLASSIFICATION	4.394167568207052E-4	IMPLEMENTATION
// line 2019 "Ruby19Parser.y"	WITHOUT_CLASSIFICATION	0.9996006555156962	WITHOUT_CLASSIFICATION	3.9934448430376093E-4	IMPLEMENTATION
// line 8143 "-"	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// we know variables cannot be null since localstaticscope will create a 0 length one.	WITHOUT_CLASSIFICATION	0.9999384066704964	WITHOUT_CLASSIFICATION	6.159332950363532E-5	IMPLEMENTATION
// No bit math to store level since we know level is zero for this case	WITHOUT_CLASSIFICATION	0.999915463804343	WITHOUT_CLASSIFICATION	8.453619565688873E-5	IMPLEMENTATION
// Next immediate scope.  Variable and constant scoping rules make use of this variable // in different ways.	WITHOUT_CLASSIFICATION	0.9999272217068687	WITHOUT_CLASSIFICATION	7.277829313134328E-5	IMPLEMENTATION
// Live reference to module	WITHOUT_CLASSIFICATION	0.9997543878068506	WITHOUT_CLASSIFICATION	2.4561219314943403E-4	IMPLEMENTATION
// Next CRef down the lexical structure	WITHOUT_CLASSIFICATION	0.9997984068684679	WITHOUT_CLASSIFICATION	2.0159313153219805E-4	IMPLEMENTATION
// Our name holder (offsets are assigned as variables are added	WITHOUT_CLASSIFICATION	0.9997881028268929	WITHOUT_CLASSIFICATION	2.1189717310706306E-4	IMPLEMENTATION
// number of variables in this scope representing required arguments	WITHOUT_CLASSIFICATION	0.9999332760966769	WITHOUT_CLASSIFICATION	6.672390332311357E-5	IMPLEMENTATION
// number of variables in this scope representing optional arguments	WITHOUT_CLASSIFICATION	0.9999377022802491	WITHOUT_CLASSIFICATION	6.229771975086555E-5	IMPLEMENTATION
// index of variable that represents a "rest" arg	WITHOUT_CLASSIFICATION	0.9996803904291474	WITHOUT_CLASSIFICATION	3.196095708525961E-4	IMPLEMENTATION
// Note that this object equality check is intentional, to ensure // the string and its interned version are the same object.	WITHOUT_CLASSIFICATION	0.9999799852085949	WITHOUT_CLASSIFICATION	2.0014791405149244E-5	IMPLEMENTATION
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9996057232081098	WITHOUT_CLASSIFICATION	3.942767918901731E-4	IMPLEMENTATION
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9996057232081098	WITHOUT_CLASSIFICATION	3.942767918901731E-4	IMPLEMENTATION
/* Note: Only used by compiler until it can use getConstant again or use some other refactoring */	WITHOUT_CLASSIFICATION	0.9998205592419264	WITHOUT_CLASSIFICATION	1.794407580735445E-4	IMPLEMENTATION
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999367945571442	WITHOUT_CLASSIFICATION	6.320544285578724E-5	IMPLEMENTATION
/* Try and unload the autoload specified from internedName */	WITHOUT_CLASSIFICATION	0.9998479973079483	WITHOUT_CLASSIFICATION	1.5200269205186296E-4	IMPLEMENTATION
// We override that the logic which uses this	WITHOUT_CLASSIFICATION	0.9998697356151715	WITHOUT_CLASSIFICATION	1.3026438482858645E-4	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999365808569376	WITHOUT_CLASSIFICATION	6.341914306236757E-5	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999565407040105	WITHOUT_CLASSIFICATION	4.345929598942524E-5	IMPLEMENTATION
// source extensions	WITHOUT_CLASSIFICATION	0.9996150177815298	WITHOUT_CLASSIFICATION	3.849822184701483E-4	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999565407040105	WITHOUT_CLASSIFICATION	4.345929598942524E-5	IMPLEMENTATION
// . Array given to rest should pass itself // . Array with rest + other args should extract array // . Array with multiple values and NO rest should extract args if there are more than one argument	WITHOUT_CLASSIFICATION	0.9998459016483074	WITHOUT_CLASSIFICATION	1.5409835169262825E-4	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999255286549212	WITHOUT_CLASSIFICATION	7.447134507878973E-5	IMPLEMENTATION
// Is this thread currently with in a function trace?	WITHOUT_CLASSIFICATION	0.9997095129128439	WITHOUT_CLASSIFICATION	2.904870871560625E-4	IMPLEMENTATION
// Is this thread currently doing an defined? defined should set things like $!	WITHOUT_CLASSIFICATION	0.9996567164053834	WITHOUT_CLASSIFICATION	3.432835946165975E-4	IMPLEMENTATION
//private UnsynchronizedStack parentStack;	WITHOUT_CLASSIFICATION	0.9998469720013413	WITHOUT_CLASSIFICATION	1.5302799865869168E-4	IMPLEMENTATION
//private UnsynchronizedStack frameStack;	WITHOUT_CLASSIFICATION	0.9998348102406105	WITHOUT_CLASSIFICATION	1.651897593895647E-4	IMPLEMENTATION
// List of active dynamic scopes.  Each of these may have captured other dynamic scopes // to implement closures.	WITHOUT_CLASSIFICATION	0.9777572402178215	WITHOUT_CLASSIFICATION	0.022242759782178385	IMPLEMENTATION
// File where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.999827274134848	WITHOUT_CLASSIFICATION	1.7272586515212207E-4	IMPLEMENTATION
// Line where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9998348950705234	WITHOUT_CLASSIFICATION	1.6510492947665285E-4	IMPLEMENTATION
// In certain places, like grep, we don't use real frames for the // call blocks. This has the effect of not setting the backref in // the correct frame - this delta is activated to the place where // the grep is running in so that the backref will be set in an // appropriate place.	WITHOUT_CLASSIFICATION	0.9999977399597625	WITHOUT_CLASSIFICATION	2.260040237554433E-6	IMPLEMENTATION
// TOPLEVEL self and a few others want a top-level scope.  We create this one right // away and then pass it into top-level parse so it ends up being the top level.	WITHOUT_CLASSIFICATION	0.9997949001573108	WITHOUT_CLASSIFICATION	2.0509984268921188E-4	IMPLEMENTATION
//////////////////// CATCH MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9999821173098049	WITHOUT_CLASSIFICATION	1.788269019505768E-5	IMPLEMENTATION
//////////////////// FRAME MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9999821173098049	WITHOUT_CLASSIFICATION	1.788269019505768E-5	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9998359461554572	WITHOUT_CLASSIFICATION	1.6405384454286256E-4	IMPLEMENTATION
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9996206039916983	WITHOUT_CLASSIFICATION	3.793960083017501E-4	IMPLEMENTATION
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9996206039916983	WITHOUT_CLASSIFICATION	3.793960083017501E-4	IMPLEMENTATION
// look for mangling markers for compiled Ruby in method name	WITHOUT_CLASSIFICATION	0.9998018677822507	WITHOUT_CLASSIFICATION	1.9813221774932203E-4	IMPLEMENTATION
// if it's not a rescue or ensure, there's a frame associated, so decrement	WITHOUT_CLASSIFICATION	0.9998970022230691	WITHOUT_CLASSIFICATION	1.0299777693097653E-4	IMPLEMENTATION
// look for __file__ method name for compiled roots	WITHOUT_CLASSIFICATION	0.9997770106088143	WITHOUT_CLASSIFICATION	2.2298939118577612E-4	IMPLEMENTATION
// All entries following removed node can stay // in list, but all preceding ones need to be // cloned.	WITHOUT_CLASSIFICATION	0.9996291532287895	WITHOUT_CLASSIFICATION	3.708467712104911E-4	IMPLEMENTATION
// required and optional only	WITHOUT_CLASSIFICATION	0.9996079627413772	WITHOUT_CLASSIFICATION	3.9203725862273177E-4	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999565407040105	WITHOUT_CLASSIFICATION	4.345929598942524E-5	IMPLEMENTATION
// look for mangling markers for bound, unframed methods in class name	WITHOUT_CLASSIFICATION	0.9998953760560602	WITHOUT_CLASSIFICATION	1.0462394393981732E-4	IMPLEMENTATION
// set the binding's frame's "previous" file and line to current, so // trace will show who called the block	WITHOUT_CLASSIFICATION	0.999936367132562	WITHOUT_CLASSIFICATION	6.363286743803532E-5	IMPLEMENTATION
// framed invokers will have Ruby frames associated with them	WITHOUT_CLASSIFICATION	0.9998115202818828	WITHOUT_CLASSIFICATION	1.8847971811717005E-4	IMPLEMENTATION
// look for mangling markers for bound, framed methods in class name	WITHOUT_CLASSIFICATION	0.9998967729215695	WITHOUT_CLASSIFICATION	1.0322707843052548E-4	IMPLEMENTATION
// unframed invokers have no Ruby frames, so pull from class name // but use current frame as file and line	WITHOUT_CLASSIFICATION	0.9999382668737472	WITHOUT_CLASSIFICATION	6.173312625276917E-5	IMPLEMENTATION
// try to mine out a Ruby frame using our list of interpreter entry-point markers	WITHOUT_CLASSIFICATION	0.9999023590001445	WITHOUT_CLASSIFICATION	9.764099985553045E-5	IMPLEMENTATION
// Frame matches one of our markers for "interpreted" calls	WITHOUT_CLASSIFICATION	0.9998018565971452	WITHOUT_CLASSIFICATION	1.9814340285485556E-4	IMPLEMENTATION
// Frame is extraneous runtime information, skip it unless debug	WITHOUT_CLASSIFICATION	0.999815859856675	WITHOUT_CLASSIFICATION	1.8414014332500495E-4	IMPLEMENTATION
/*     * Determine what sort of assigner should be used for the provided 'iter' (e.g. block).     * Assigner provides just the right logic for assigning values to local parameters of the     * block.     *     * This method also has a second optimization which is to set 'noargblock' in the case that     * the block is a block which accepts no arguments.  The primary reason for this second     * optimization is that in the case of a yield with a RubyArray we will bypass some logic     * processing the RubyArray into a proper form (only to then not do anythign with it).  A     * secondary benefit is that a simple boolean seems to optimize by hotspot much faster     * than the zero arg assigner.     */	WITHOUT_CLASSIFICATION	0.9999986779890153	WITHOUT_CLASSIFICATION	1.322010984610699E-6	IMPLEMENTATION
// new scope for this invocation of the block, based on parent scope	WITHOUT_CLASSIFICATION	0.9999666486506982	WITHOUT_CLASSIFICATION	3.335134930179548E-5	IMPLEMENTATION
// No argument blocks	WITHOUT_CLASSIFICATION	0.9997170161337972	WITHOUT_CLASSIFICATION	2.829838662027426E-4	IMPLEMENTATION
// just push the same empty scope, since we won't use one	WITHOUT_CLASSIFICATION	0.9999206674366105	WITHOUT_CLASSIFICATION	7.933256338950803E-5	IMPLEMENTATION
// Not sure if this is actually possible, but better safe than sorry	WITHOUT_CLASSIFICATION	0.9999117262744304	WITHOUT_CLASSIFICATION	8.827372556967125E-5	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9996342561382112	WITHOUT_CLASSIFICATION	3.6574386178872705E-4	IMPLEMENTATION
// This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).	WITHOUT_CLASSIFICATION	0.9998392252954965	WITHOUT_CLASSIFICATION	1.6077470450362208E-4	IMPLEMENTATION
// Highest reserved id	WITHOUT_CLASSIFICATION	0.9995756537982311	WITHOUT_CLASSIFICATION	4.243462017689499E-4	IMPLEMENTATION
// binary typed calls	WITHOUT_CLASSIFICATION	0.9997102052863371	WITHOUT_CLASSIFICATION	2.89794713662968E-4	IMPLEMENTATION
// id must always be even	WITHOUT_CLASSIFICATION	0.9997105131075259	WITHOUT_CLASSIFICATION	2.8948689247409955E-4	IMPLEMENTATION
// with block pass	WITHOUT_CLASSIFICATION	0.999567812783427	WITHOUT_CLASSIFICATION	4.321872165730251E-4	IMPLEMENTATION
// no block	WITHOUT_CLASSIFICATION	0.9995937791690462	WITHOUT_CLASSIFICATION	4.062208309537332E-4	IMPLEMENTATION
// with block literal (iter)	WITHOUT_CLASSIFICATION	0.9996279827928303	WITHOUT_CLASSIFICATION	3.7201720716974516E-4	IMPLEMENTATION
//            assert false : "can this happen?";	WITHOUT_CLASSIFICATION	0.9999461776848655	WITHOUT_CLASSIFICATION	5.382231513450878E-5	IMPLEMENTATION
// if we have multiple asgn with just *args, need a special type for that	WITHOUT_CLASSIFICATION	0.9999269687213556	WITHOUT_CLASSIFICATION	7.303127864437313E-5	IMPLEMENTATION
// && args.getMaxArgumentsCount() != 1) {	WITHOUT_CLASSIFICATION	0.9997422911307094	WITHOUT_CLASSIFICATION	2.5770886929060683E-4	IMPLEMENTATION
//            return warnMultiReturnNil(ruby);	WITHOUT_CLASSIFICATION	0.999973762927724	WITHOUT_CLASSIFICATION	2.623707227599303E-5	IMPLEMENTATION
// ensure zero is devoted to no method name	WITHOUT_CLASSIFICATION	0.9996547480805099	WITHOUT_CLASSIFICATION	3.452519194900712E-4	IMPLEMENTATION
// predefine a few other methods we invoke directly elsewhere	WITHOUT_CLASSIFICATION	0.9998350946967176	WITHOUT_CLASSIFICATION	1.649053032824485E-4	IMPLEMENTATION
// fast and safe respond_to? call site logic	WITHOUT_CLASSIFICATION	0.9997187423336099	WITHOUT_CLASSIFICATION	2.8125766639010166E-4	IMPLEMENTATION
// Static scoping information for this scope	WITHOUT_CLASSIFICATION	0.999937817565604	WITHOUT_CLASSIFICATION	6.21824343960112E-5	IMPLEMENTATION
// Captured dynamic scopes	WITHOUT_CLASSIFICATION	0.9996108660022294	WITHOUT_CLASSIFICATION	3.891339977706096E-4	IMPLEMENTATION
// Backref for $~, $1, etc	WITHOUT_CLASSIFICATION	0.9995946601375684	WITHOUT_CLASSIFICATION	4.0533986243166076E-4	IMPLEMENTATION
// Lastline	WITHOUT_CLASSIFICATION	0.9995345786338911	WITHOUT_CLASSIFICATION	4.654213661089932E-4	IMPLEMENTATION
// No binding scope so we should create one	WITHOUT_CLASSIFICATION	0.9998070246478726	WITHOUT_CLASSIFICATION	1.9297535212730026E-4	IMPLEMENTATION
// bindings scopes must always be ManyVars scopes since evals can grow them	WITHOUT_CLASSIFICATION	0.9998125739620034	WITHOUT_CLASSIFICATION	1.8742603799656662E-4	IMPLEMENTATION
// Helper function to give a good view of current dynamic scope with captured scopes	WITHOUT_CLASSIFICATION	0.9999251396058869	WITHOUT_CLASSIFICATION	7.486039411306251E-5	IMPLEMENTATION
// try count specific args to determine required	WITHOUT_CLASSIFICATION	0.9997699045381129	WITHOUT_CLASSIFICATION	2.300954618871697E-4	IMPLEMENTATION
// Some helper functions:	WITHOUT_CLASSIFICATION	0.999683637278265	WITHOUT_CLASSIFICATION	3.1636272173493624E-4	IMPLEMENTATION
// silently ignore	WITHOUT_CLASSIFICATION	0.9997283644578218	WITHOUT_CLASSIFICATION	2.7163554217829493E-4	IMPLEMENTATION
// used by compiler	WITHOUT_CLASSIFICATION	0.9995841665832826	WITHOUT_CLASSIFICATION	4.1583341671743665E-4	IMPLEMENTATION
// initialize the static settings to determine which factory to use	WITHOUT_CLASSIFICATION	0.9999907069637504	WITHOUT_CLASSIFICATION	9.29303624954292E-6	IMPLEMENTATION
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9997278512906939	WITHOUT_CLASSIFICATION	2.7214870930617255E-4	IMPLEMENTATION
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9997861847163818	WITHOUT_CLASSIFICATION	2.1381528361822435E-4	IMPLEMENTATION
//  Single node on list	WITHOUT_CLASSIFICATION	0.9995796354592967	WITHOUT_CLASSIFICATION	4.203645407032243E-4	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9998175574171996	WITHOUT_CLASSIFICATION	1.8244258280055147E-4	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9997004948796478	WITHOUT_CLASSIFICATION	2.995051203521142E-4	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999255286549212	WITHOUT_CLASSIFICATION	7.447134507878973E-5	IMPLEMENTATION
// Note: In Ruby 1.9 all of this logic can go away since they will require explicit // bindings for evals.	WITHOUT_CLASSIFICATION	0.9998402474936774	WITHOUT_CLASSIFICATION	1.5975250632264043E-4	IMPLEMENTATION
// We only define one special dynamic scope per 'logical' binding.  So all bindings for // the same scope should share the same dynamic scope.  This allows multiple evals with // different different bindings in the same scope to see the same stuff.	WITHOUT_CLASSIFICATION	0.9999794918021584	WITHOUT_CLASSIFICATION	2.0508197841631296E-5	IMPLEMENTATION
// If the next scope out has the same binding scope as this scope it means // we are evaling within an eval and in that case we should be sharing the same // binding scope.	WITHOUT_CLASSIFICATION	0.9999528407027803	WITHOUT_CLASSIFICATION	4.715929721974937E-5	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999423463437218	WITHOUT_CLASSIFICATION	5.765365627820473E-5	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999423463437218	WITHOUT_CLASSIFICATION	5.765365627820473E-5	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9998263973415271	WITHOUT_CLASSIFICATION	1.7360265847289608E-4	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9998263973415271	WITHOUT_CLASSIFICATION	1.7360265847289608E-4	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9998263973415271	WITHOUT_CLASSIFICATION	1.7360265847289608E-4	IMPLEMENTATION
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9997050332804762	WITHOUT_CLASSIFICATION	2.94966719523787E-4	IMPLEMENTATION
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9997050332804762	WITHOUT_CLASSIFICATION	2.94966719523787E-4	IMPLEMENTATION
// extra args for rest	WITHOUT_CLASSIFICATION	0.9996551108547123	WITHOUT_CLASSIFICATION	3.44889145287736E-4	IMPLEMENTATION
// extra args for rest	WITHOUT_CLASSIFICATION	0.9996551108547123	WITHOUT_CLASSIFICATION	3.44889145287736E-4	IMPLEMENTATION
/*     * This is the proper behavior for all non-expanded assigners which have a pre > 0.  The rest     * override this.     */	WITHOUT_CLASSIFICATION	0.9999879411249077	WITHOUT_CLASSIFICATION	1.205887509229608E-5	IMPLEMENTATION
/*     * This is the proper behavior for all non-expanded assigners.     */	WITHOUT_CLASSIFICATION	0.9999760405539692	WITHOUT_CLASSIFICATION	2.3959446030749084E-5	IMPLEMENTATION
// prefill ?	WITHOUT_CLASSIFICATION	0.9995464301746966	WITHOUT_CLASSIFICATION	4.53569825303315E-4	IMPLEMENTATION
// prefill ?	WITHOUT_CLASSIFICATION	0.9995464301746966	WITHOUT_CLASSIFICATION	4.53569825303315E-4	IMPLEMENTATION
// MUST be called from synchronized/locked block! // should only be called by variableTableStore/variableTableFastStore	WITHOUT_CLASSIFICATION	0.9998058373341462	WITHOUT_CLASSIFICATION	1.941626658537498E-4	IMPLEMENTATION
// retrieve method // module // name	WITHOUT_CLASSIFICATION	0.9997827439068308	WITHOUT_CLASSIFICATION	2.1725609316920955E-4	IMPLEMENTATION
// call is ok, punch it!	WITHOUT_CLASSIFICATION	0.9995689612240877	WITHOUT_CLASSIFICATION	4.310387759122764E-4	IMPLEMENTATION
// if undefined, branch to method_missing	WITHOUT_CLASSIFICATION	0.9997846476786668	WITHOUT_CLASSIFICATION	2.1535232133321032E-4	IMPLEMENTATION
// if we're not attempting to invoke method_missing and method is not visible, branch to method_missing	WITHOUT_CLASSIFICATION	0.9998938344214777	WITHOUT_CLASSIFICATION	1.0616557852221212E-4	IMPLEMENTATION
// method object already present, push various args // tc // self // klazz // name	WITHOUT_CLASSIFICATION	0.9998247113443859	WITHOUT_CLASSIFICATION	1.7528865561411997E-4	IMPLEMENTATION
// if it's method_missing, just invoke it	WITHOUT_CLASSIFICATION	0.9997839810529401	WITHOUT_CLASSIFICATION	2.1601894706004096E-4	IMPLEMENTATION
// invoke callMethodMissing	WITHOUT_CLASSIFICATION	0.9996353829780982	WITHOUT_CLASSIFICATION	3.6461702190178705E-4	IMPLEMENTATION
// caller	WITHOUT_CLASSIFICATION	0.996531545149241	WITHOUT_CLASSIFICATION	0.003468454850758975	IMPLEMENTATION
// calltype // block	WITHOUT_CLASSIFICATION	0.9995237910015816	WITHOUT_CLASSIFICATION	4.762089984184134E-4	IMPLEMENTATION
// if no exception raised, jump to end to leave result on stack for return	WITHOUT_CLASSIFICATION	0.9999137519066084	WITHOUT_CLASSIFICATION	8.624809339167127E-5	IMPLEMENTATION
// load arity for check	WITHOUT_CLASSIFICATION	0.9996905684777739	WITHOUT_CLASSIFICATION	3.094315222260858E-4	IMPLEMENTATION
// throw	WITHOUT_CLASSIFICATION	0.9965765729637903	WITHOUT_CLASSIFICATION	0.003423427036209823	IMPLEMENTATION
// load arity for error	WITHOUT_CLASSIFICATION	0.9996933224198267	WITHOUT_CLASSIFICATION	3.066775801732636E-4	IMPLEMENTATION
// arity ok, continue	WITHOUT_CLASSIFICATION	0.999589528697682	WITHOUT_CLASSIFICATION	4.104713023180003E-4	IMPLEMENTATION
//InvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9996135315004334	WITHOUT_CLASSIFICATION	3.8646849956657816E-4	IMPLEMENTATION
// ENEBO: Perhaps slow but simple for now	WITHOUT_CLASSIFICATION	0.9996817868268973	WITHOUT_CLASSIFICATION	3.1821317310263923E-4	IMPLEMENTATION
// FastInvocationCallback	WITHOUT_CLASSIFICATION	0.9996007296867631	WITHOUT_CLASSIFICATION	3.9927031323686295E-4	IMPLEMENTATION
// InvocationCallback	WITHOUT_CLASSIFICATION	0.9996059237213988	WITHOUT_CLASSIFICATION	3.940762786012081E-4	IMPLEMENTATION
//DumpingInvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.999728590473544	WITHOUT_CLASSIFICATION	2.7140952645596906E-4	IMPLEMENTATION
// for fast lookup: encoding entry => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9998079678315768	WITHOUT_CLASSIFICATION	1.920321684231767E-4	IMPLEMENTATION
// for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9997884564226653	WITHOUT_CLASSIFICATION	2.1154357733465766E-4	IMPLEMENTATION
// load the encoding	WITHOUT_CLASSIFICATION	0.9997649954110164	WITHOUT_CLASSIFICATION	2.3500458898373773E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9998041799047465	WITHOUT_CLASSIFICATION	1.9582009525356969E-4	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9997985440997754	WITHOUT_CLASSIFICATION	2.0145590022452715E-4	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9997954622159926	WITHOUT_CLASSIFICATION	2.0453778400754156E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9997874102855399	WITHOUT_CLASSIFICATION	2.125897144601031E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9997866797293055	WITHOUT_CLASSIFICATION	2.133202706943999E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9998018704985102	WITHOUT_CLASSIFICATION	1.9812950148977238E-4	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.999796168241168	WITHOUT_CLASSIFICATION	2.0383175883205114E-4	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9997930500188886	WITHOUT_CLASSIFICATION	2.0694998111141704E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9997992176256639	WITHOUT_CLASSIFICATION	2.0078237433607024E-4	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9997934390332064	WITHOUT_CLASSIFICATION	2.0656096679356486E-4	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9997902790682077	WITHOUT_CLASSIFICATION	2.0972093179237857E-4	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9997934390332064	WITHOUT_CLASSIFICATION	2.0656096679356486E-4	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9997934390332064	WITHOUT_CLASSIFICATION	2.0656096679356486E-4	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9997934390332064	WITHOUT_CLASSIFICATION	2.0656096679356486E-4	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9997934390332064	WITHOUT_CLASSIFICATION	2.0656096679356486E-4	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9997934390332064	WITHOUT_CLASSIFICATION	2.0656096679356486E-4	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9997934390332064	WITHOUT_CLASSIFICATION	2.0656096679356486E-4	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9997902790682077	WITHOUT_CLASSIFICATION	2.0972093179237857E-4	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9997902790682077	WITHOUT_CLASSIFICATION	2.0972093179237857E-4	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9997902790682077	WITHOUT_CLASSIFICATION	2.0972093179237857E-4	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9997902790682077	WITHOUT_CLASSIFICATION	2.0972093179237857E-4	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9997902790682077	WITHOUT_CLASSIFICATION	2.0972093179237857E-4	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9997902790682077	WITHOUT_CLASSIFICATION	2.0972093179237857E-4	IMPLEMENTATION
// If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs	WITHOUT_CLASSIFICATION	0.9998613109111398	WITHOUT_CLASSIFICATION	1.386890888601348E-4	IMPLEMENTATION
// BreakJump, ThreadContext	WITHOUT_CLASSIFICATION	0.9995943283930742	WITHOUT_CLASSIFICATION	4.0567160692586246E-4	IMPLEMENTATION
// ThreadContext	WITHOUT_CLASSIFICATION	0.999573887879872	WITHOUT_CLASSIFICATION	4.2611212012803315E-4	IMPLEMENTATION
// BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9997646032473998	WITHOUT_CLASSIFICATION	2.3539675260012376E-4	IMPLEMENTATION
// Make Java class files in the jar reachable from Ruby	WITHOUT_CLASSIFICATION	0.9999464969992818	WITHOUT_CLASSIFICATION	5.3503000718063425E-5	IMPLEMENTATION
// RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9997708135937541	WITHOUT_CLASSIFICATION	2.291864062458879E-4	IMPLEMENTATION
// add all startup load paths to the list first	WITHOUT_CLASSIFICATION	0.9999057697308896	WITHOUT_CLASSIFICATION	9.42302691102777E-5	IMPLEMENTATION
// if it's a compiled JRuby script, instantiate and run it	WITHOUT_CLASSIFICATION	0.9998405098029104	WITHOUT_CLASSIFICATION	1.5949019708961864E-4	IMPLEMENTATION
// wrap in try/catch for security exceptions in an applet	WITHOUT_CLASSIFICATION	0.999783694491713	WITHOUT_CLASSIFICATION	2.1630550828706125E-4	IMPLEMENTATION
// add $RUBYLIB paths	WITHOUT_CLASSIFICATION	0.999738165640324	WITHOUT_CLASSIFICATION	2.6183435967590116E-4	IMPLEMENTATION
// Empty paths do not need to be added	WITHOUT_CLASSIFICATION	0.9978726079476485	WITHOUT_CLASSIFICATION	0.002127392052351424	IMPLEMENTATION
// "." dir is used for relative path loads from a given file, as in require '../foo/bar'	WITHOUT_CLASSIFICATION	0.9998728301062688	WITHOUT_CLASSIFICATION	1.2716989373119588E-4	IMPLEMENTATION
// Add 1.8 libs	WITHOUT_CLASSIFICATION	0.9997423982981837	WITHOUT_CLASSIFICATION	2.57601701816388E-4	IMPLEMENTATION
// Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.	WITHOUT_CLASSIFICATION	0.9999862730802349	WITHOUT_CLASSIFICATION	1.372691976519844E-5	IMPLEMENTATION
// Library has already been loaded in some form, bail out	WITHOUT_CLASSIFICATION	0.9999037524484813	WITHOUT_CLASSIFICATION	9.624755151867532E-5	IMPLEMENTATION
// We don't want a package name beginning with dots, so we remove them	WITHOUT_CLASSIFICATION	0.9999600512567216	WITHOUT_CLASSIFICATION	3.994874327839684E-5	IMPLEMENTATION
// If there is a jar-file with the required name, we add this to the class path.	WITHOUT_CLASSIFICATION	0.9999596697912196	WITHOUT_CLASSIFICATION	4.03302087803589E-5	IMPLEMENTATION
// quietly try to load the class	WITHOUT_CLASSIFICATION	0.9999187782042175	WITHOUT_CLASSIFICATION	8.122179578255013E-5	IMPLEMENTATION
// If there was a good library before, we go back to that	WITHOUT_CLASSIFICATION	0.9999226927710879	WITHOUT_CLASSIFICATION	7.730722891206073E-5	IMPLEMENTATION
// no library or extension found, try to load directly as a class	WITHOUT_CLASSIFICATION	0.9999284429315346	WITHOUT_CLASSIFICATION	7.155706846542587E-5	IMPLEMENTATION
// if an extension is specified, try more targetted searches	WITHOUT_CLASSIFICATION	0.9998591428498705	WITHOUT_CLASSIFICATION	1.4085715012936416E-4	IMPLEMENTATION
// signed short, big-endian	WITHOUT_CLASSIFICATION	0.9996325427619918	WITHOUT_CLASSIFICATION	3.674572380082354E-4	IMPLEMENTATION
// source extensions	WITHOUT_CLASSIFICATION	0.9996150177815298	WITHOUT_CLASSIFICATION	3.849822184701483E-4	IMPLEMENTATION
// We don't support .so, but some stdlib require .so directly // replace it with .jar to look for an extension type we do support	WITHOUT_CLASSIFICATION	0.9998051186964674	WITHOUT_CLASSIFICATION	1.948813035326255E-4	IMPLEMENTATION
// This code exploits the fact that all .jar files will be found for the JarredScript feature. // This is where the basic extension mechanism gets fixed	WITHOUT_CLASSIFICATION	0.9999654923534722	WITHOUT_CLASSIFICATION	3.4507646527811966E-5	IMPLEMENTATION
// Make the class name look nice, by splitting on _ and capitalize each segment, then joining // the, together without anything separating them, and last put on "Service" at the end.	WITHOUT_CLASSIFICATION	0.9999803074014815	WITHOUT_CLASSIFICATION	1.969259851850312E-5	IMPLEMENTATION
// It's _really_ expensive to check that the class actually exists in the Jar, so // we don't do that now.	WITHOUT_CLASSIFICATION	0.9999769492865932	WITHOUT_CLASSIFICATION	2.30507134068278E-5	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9997625539852449	WITHOUT_CLASSIFICATION	2.3744601475510392E-4	IMPLEMENTATION
// extension extensions	WITHOUT_CLASSIFICATION	0.999618948318157	WITHOUT_CLASSIFICATION	3.8105168184304734E-4	IMPLEMENTATION
// unknown extension, fall back to search with extensions	WITHOUT_CLASSIFICATION	0.9997866424079442	WITHOUT_CLASSIFICATION	2.1335759205587694E-4	IMPLEMENTATION
// try all extensions	WITHOUT_CLASSIFICATION	0.999652191084597	WITHOUT_CLASSIFICATION	3.4780891540303523E-4	IMPLEMENTATION
// if a source extension is specified, try all source extensions	WITHOUT_CLASSIFICATION	0.9998480455787714	WITHOUT_CLASSIFICATION	1.5195442122866324E-4	IMPLEMENTATION
// unknown extension, fall back to exact search	WITHOUT_CLASSIFICATION	0.9997569542294207	WITHOUT_CLASSIFICATION	2.4304577057933933E-4	IMPLEMENTATION
// try only literal search	WITHOUT_CLASSIFICATION	0.9996754023625828	WITHOUT_CLASSIFICATION	3.2459763741714715E-4	IMPLEMENTATION
// attempt to load the found library	WITHOUT_CLASSIFICATION	0.9998134994560499	WITHOUT_CLASSIFICATION	1.865005439501986E-4	IMPLEMENTATION
// otherwise load the library we've found	WITHOUT_CLASSIFICATION	0.9997947532802344	WITHOUT_CLASSIFICATION	2.0524671976566896E-4	IMPLEMENTATION
// allow MainExitException to propagate out for exec and friends	WITHOUT_CLASSIFICATION	0.9998842678268702	WITHOUT_CLASSIFICATION	1.1573217312977837E-4	IMPLEMENTATION
// Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".	WITHOUT_CLASSIFICATION	0.999894893776003	WITHOUT_CLASSIFICATION	1.0510622399703923E-4	IMPLEMENTATION
// check current directory; if file exists, retrieve URL and return resource	WITHOUT_CLASSIFICATION	0.9999705434829753	WITHOUT_CLASSIFICATION	2.9456517024651716E-5	IMPLEMENTATION
// if a jar or file URL, return load service resource directly without further searching	WITHOUT_CLASSIFICATION	0.9999129709003884	WITHOUT_CLASSIFICATION	8.702909961159249E-5	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9998289689547587	WITHOUT_CLASSIFICATION	1.7103104524124351E-4	IMPLEMENTATION
// if it's a ./ baseName, use CWD logic	WITHOUT_CLASSIFICATION	0.9997279693096028	WITHOUT_CLASSIFICATION	2.720306903971911E-4	IMPLEMENTATION
// if given path is absolute, just try it as-is (with extensions) and no load path	WITHOUT_CLASSIFICATION	0.9998023160079359	WITHOUT_CLASSIFICATION	1.9768399206399994E-4	IMPLEMENTATION
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9999059691060369	WITHOUT_CLASSIFICATION	9.403089396300146E-5	IMPLEMENTATION
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9999059691060369	WITHOUT_CLASSIFICATION	9.403089396300146E-5	IMPLEMENTATION
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9997303722468299	WITHOUT_CLASSIFICATION	2.6962775317002877E-4	IMPLEMENTATION
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9997303722468299	WITHOUT_CLASSIFICATION	2.6962775317002877E-4	IMPLEMENTATION
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999309496584405	WITHOUT_CLASSIFICATION	6.905034155946705E-5	IMPLEMENTATION
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999309496584405	WITHOUT_CLASSIFICATION	6.905034155946705E-5	IMPLEMENTATION
//                    actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));	WITHOUT_CLASSIFICATION	0.9999246965529257	WITHOUT_CLASSIFICATION	7.53034470741902E-5	IMPLEMENTATION
// handle security-sensitive case	WITHOUT_CLASSIFICATION	0.9997887720903683	WITHOUT_CLASSIFICATION	2.1122790963157035E-4	IMPLEMENTATION
// if entry is an empty string, skip it	WITHOUT_CLASSIFICATION	0.9998978133735926	WITHOUT_CLASSIFICATION	1.0218662640736695E-4	IMPLEMENTATION
// if entry starts with a slash, skip it since classloader resources never start with a /	WITHOUT_CLASSIFICATION	0.9998831411334482	WITHOUT_CLASSIFICATION	1.1685886655167807E-4	IMPLEMENTATION
// otherwise, try to load from classpath (Note: Jar resources always uses '/')	WITHOUT_CLASSIFICATION	0.9998675666312017	WITHOUT_CLASSIFICATION	1.3243336879829423E-4	IMPLEMENTATION
// Make sure this is not a directory or unavailable in some way	WITHOUT_CLASSIFICATION	0.9999847584629785	WITHOUT_CLASSIFICATION	1.5241537021516162E-5	IMPLEMENTATION
// signed short, native	WITHOUT_CLASSIFICATION	0.9996274224778084	WITHOUT_CLASSIFICATION	3.7257752219155407E-4	IMPLEMENTATION
// If we fail to find as a normal Ruby script, we try to find as an extension, // checking for a builtin first.	WITHOUT_CLASSIFICATION	0.9999153086345703	WITHOUT_CLASSIFICATION	8.469136542967875E-5	IMPLEMENTATION
// write `I' instance var signet if class is NOT a direct subclass of Object	WITHOUT_CLASSIFICATION	0.9999341800313498	WITHOUT_CLASSIFICATION	6.581996865014088E-5	IMPLEMENTATION
// if name starts with a / we're done (classloader resources won't load with an initial /)	WITHOUT_CLASSIFICATION	0.9999251383848671	WITHOUT_CLASSIFICATION	7.4861615132898E-5	IMPLEMENTATION
// Look in classpath next (we do not use File as a test since UNC names will match) // Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")	WITHOUT_CLASSIFICATION	0.999962162380286	WITHOUT_CLASSIFICATION	3.783761971394238E-5	IMPLEMENTATION
/* Directories and unavailable resources are not able to open a stream. */	WITHOUT_CLASSIFICATION	0.9999097550319074	WITHOUT_CLASSIFICATION	9.024496809269506E-5	IMPLEMENTATION
// Try to load from classpath without prefix. "A/b.rb" will not load as  // "./A/b.rb" in a jar file.	WITHOUT_CLASSIFICATION	0.9998363606162729	WITHOUT_CLASSIFICATION	1.636393837271575E-4	IMPLEMENTATION
// object has instance vars and isn't a class, get a snapshot to be marshalled // and output the ivar header here	WITHOUT_CLASSIFICATION	0.9999641624036014	WITHOUT_CLASSIFICATION	3.583759639854641E-5	IMPLEMENTATION
// flush afer whole dump is complete	WITHOUT_CLASSIFICATION	0.999517724656387	WITHOUT_CLASSIFICATION	4.8227534361299933E-4	IMPLEMENTATION
//            write('S');	WITHOUT_CLASSIFICATION	0.9998824517930412	WITHOUT_CLASSIFICATION	1.17548206958788E-4	IMPLEMENTATION
// switch on the object's *native type*. This allows use-defined // classes that have extended core native types to piggyback on their // marshalling logic.	WITHOUT_CLASSIFICATION	0.999950925017716	WITHOUT_CLASSIFICATION	4.907498228391194E-5	IMPLEMENTATION
// object is a custom class that extended one of the native types other than Object	WITHOUT_CLASSIFICATION	0.9999705754282134	WITHOUT_CLASSIFICATION	2.9424571786558258E-5	IMPLEMENTATION
// We do not want to capture cached methods	WITHOUT_CLASSIFICATION	0.9998309142250034	WITHOUT_CLASSIFICATION	1.6908577499666162E-4	IMPLEMENTATION
// w_symbol	WITHOUT_CLASSIFICATION	0.9995209240948034	WITHOUT_CLASSIFICATION	4.7907590519655495E-4	IMPLEMENTATION
// w_unique	WITHOUT_CLASSIFICATION	0.9995143406218439	WITHOUT_CLASSIFICATION	4.8565937815608456E-4	IMPLEMENTATION
// call the proc, but not for symbols	WITHOUT_CLASSIFICATION	0.9998196170358675	WITHOUT_CLASSIFICATION	1.8038296413242847E-4	IMPLEMENTATION
// Major // Minor	WITHOUT_CLASSIFICATION	0.9995373304490216	WITHOUT_CLASSIFICATION	4.626695509784033E-4	IMPLEMENTATION
// any ivars, since we don't have __attached__ ivar now	WITHOUT_CLASSIFICATION	0.9998650606495931	WITHOUT_CLASSIFICATION	1.3493935040694198E-4	IMPLEMENTATION
// "hashdef" object, a hash with a default	WITHOUT_CLASSIFICATION	0.9998976523636235	WITHOUT_CLASSIFICATION	1.023476363765719E-4	IMPLEMENTATION
// All "C" marshalled objects descend from core classes, which are all RubyObject	WITHOUT_CLASSIFICATION	0.9999251795257844	WITHOUT_CLASSIFICATION	7.48204742155265E-5	IMPLEMENTATION
// sic	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999172678459664	WITHOUT_CLASSIFICATION	8.273215403358461E-5	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999172678459664	WITHOUT_CLASSIFICATION	8.273215403358461E-5	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999172678459664	WITHOUT_CLASSIFICATION	8.273215403358461E-5	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9998832578787892	WITHOUT_CLASSIFICATION	1.167421212108152E-4	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9998832578787892	WITHOUT_CLASSIFICATION	1.167421212108152E-4	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9996342561382112	WITHOUT_CLASSIFICATION	3.6574386178872705E-4	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9996342561382112	WITHOUT_CLASSIFICATION	3.6574386178872705E-4	IMPLEMENTATION
/*     * If we are setting post arguments we can assume there are no pre or others     */	WITHOUT_CLASSIFICATION	0.9999913894142942	WITHOUT_CLASSIFICATION	8.610585705817565E-6	IMPLEMENTATION
// XXX: 0xffff0000 on BE?	WITHOUT_CLASSIFICATION	0.999489675750223	WITHOUT_CLASSIFICATION	5.103242497770812E-4	IMPLEMENTATION
// unsigned short, native	WITHOUT_CLASSIFICATION	0.9996502946454803	WITHOUT_CLASSIFICATION	3.4970535451978046E-4	IMPLEMENTATION
// int, native // long, native	WITHOUT_CLASSIFICATION	0.999583470260839	WITHOUT_CLASSIFICATION	4.165297391608476E-4	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999172678459664	WITHOUT_CLASSIFICATION	8.273215403358461E-5	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999172678459664	WITHOUT_CLASSIFICATION	8.273215403358461E-5	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999172678459664	WITHOUT_CLASSIFICATION	8.273215403358461E-5	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9998832578787892	WITHOUT_CLASSIFICATION	1.167421212108152E-4	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9998832578787892	WITHOUT_CLASSIFICATION	1.167421212108152E-4	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9998832578787892	WITHOUT_CLASSIFICATION	1.167421212108152E-4	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9996342561382112	WITHOUT_CLASSIFICATION	3.6574386178872705E-4	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9996342561382112	WITHOUT_CLASSIFICATION	3.6574386178872705E-4	IMPLEMENTATION
// Look for slash, starting from 'start' position, until 'end'.	WITHOUT_CLASSIFICATION	0.9998996330760183	WITHOUT_CLASSIFICATION	1.0036692398174392E-4	IMPLEMENTATION
// Our values holder (name of variables are kept in staticScope)	WITHOUT_CLASSIFICATION	0.9998162834907508	WITHOUT_CLASSIFICATION	1.837165092492228E-4	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999382484714393	WITHOUT_CLASSIFICATION	6.175152856068427E-5	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999382484714393	WITHOUT_CLASSIFICATION	6.175152856068427E-5	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999382484714393	WITHOUT_CLASSIFICATION	6.175152856068427E-5	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999382484714393	WITHOUT_CLASSIFICATION	6.175152856068427E-5	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999382484714393	WITHOUT_CLASSIFICATION	6.175152856068427E-5	IMPLEMENTATION
// SunSignalFacade	WITHOUT_CLASSIFICATION	0.9995351190481992	WITHOUT_CLASSIFICATION	4.648809518007237E-4	IMPLEMENTATION
// All braces pushed..	WITHOUT_CLASSIFICATION	0.9996071798870353	WITHOUT_CLASSIFICATION	3.928201129647034E-4	IMPLEMENTATION
/* failed : try next recursion */	WITHOUT_CLASSIFICATION	0.9997253694761026	WITHOUT_CLASSIFICATION	2.746305238974338E-4	IMPLEMENTATION
// leftToken made us start as nest 1	WITHOUT_CLASSIFICATION	0.9997847041042037	WITHOUT_CLASSIFICATION	2.1529589579633772E-4	IMPLEMENTATION
// are we at '**/'	WITHOUT_CLASSIFICATION	0.9995538747347124	WITHOUT_CLASSIFICATION	4.46125265287609E-4	IMPLEMENTATION
// No or mismatched braces..Move along..nothing to see here	WITHOUT_CLASSIFICATION	0.9999016354845142	WITHOUT_CLASSIFICATION	9.836451548586345E-5	IMPLEMENTATION
// not enough bytes	WITHOUT_CLASSIFICATION	0.9982912413968983	WITHOUT_CLASSIFICATION	0.0017087586031017737	IMPLEMENTATION
// Get index of last read byte	WITHOUT_CLASSIFICATION	0.9996954543021498	WITHOUT_CLASSIFICATION	3.045456978502915E-4	IMPLEMENTATION
// skip inner braces	WITHOUT_CLASSIFICATION	0.9995894578814563	WITHOUT_CLASSIFICATION	4.1054211854370443E-4	IMPLEMENTATION
/*     * Process {}'s (example: Dir.glob("{jruby,jython}/README*")      */	WITHOUT_CLASSIFICATION	0.9999494941307118	WITHOUT_CLASSIFICATION	5.0505869288154316E-5	IMPLEMENTATION
/* complete, according to Posix.2 */	WITHOUT_CLASSIFICATION	0.9996645236685795	WITHOUT_CLASSIFICATION	3.3547633142050104E-4	IMPLEMENTATION
/* Only accept an open brace if there is a close */	WITHOUT_CLASSIFICATION	0.9999175109791469	WITHOUT_CLASSIFICATION	8.248902085313599E-5	IMPLEMENTATION
/* brace to match it.  Bracket expressions must be */	WITHOUT_CLASSIFICATION	0.9998291004716182	WITHOUT_CLASSIFICATION	1.7089952838176238E-4	IMPLEMENTATION
// index of left-most brace // index of right-most brace	WITHOUT_CLASSIFICATION	0.9997327256859374	WITHOUT_CLASSIFICATION	2.6727431406261296E-4	IMPLEMENTATION
// Length check is a hack.  We should not be reeiving "" as a filename ever. 	WITHOUT_CLASSIFICATION	0.9998658182763999	WITHOUT_CLASSIFICATION	1.3418172360020567E-4	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9995428558054555	WITHOUT_CLASSIFICATION	4.571441945443797E-4	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9995428558054555	WITHOUT_CLASSIFICATION	4.571441945443797E-4	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9995428558054555	WITHOUT_CLASSIFICATION	4.571441945443797E-4	IMPLEMENTATION
// Pickaxe says @ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9998974812517367	WITHOUT_CLASSIFICATION	1.025187482633185E-4	IMPLEMENTATION
// Pickaxe says @@ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9998974812517367	WITHOUT_CLASSIFICATION	1.025187482633185E-4	IMPLEMENTATION
// SimpleSampler	WITHOUT_CLASSIFICATION	0.9995270311742319	WITHOUT_CLASSIFICATION	4.729688257680105E-4	IMPLEMENTATION
/*     * convert into longs, returning unsigned 64-bit values as signed longs     * ( num2long raises a RangeError on values > Long.MAX_VALUE )     */	WITHOUT_CLASSIFICATION	0.9999802118434951	WITHOUT_CLASSIFICATION	1.9788156504927085E-5	IMPLEMENTATION
// b64_xtable for decoding Base 64	WITHOUT_CLASSIFICATION	0.9997822362852921	WITHOUT_CLASSIFICATION	2.1776371470784946E-4	IMPLEMENTATION
// single precision, little-endian	WITHOUT_CLASSIFICATION	0.9997837453140622	WITHOUT_CLASSIFICATION	2.162546859377452E-4	IMPLEMENTATION
// single precision, big-endian	WITHOUT_CLASSIFICATION	0.9997853699314461	WITHOUT_CLASSIFICATION	2.146300685539989E-4	IMPLEMENTATION
// single precision, native	WITHOUT_CLASSIFICATION	0.9996907236949344	WITHOUT_CLASSIFICATION	3.0927630506554545E-4	IMPLEMENTATION
// single precision, native // single precision, native	WITHOUT_CLASSIFICATION	0.9997787628208675	WITHOUT_CLASSIFICATION	2.2123717913251174E-4	IMPLEMENTATION
// double precision, little-endian	WITHOUT_CLASSIFICATION	0.9998115244858607	WITHOUT_CLASSIFICATION	1.88475514139315E-4	IMPLEMENTATION
// double precision, big-endian	WITHOUT_CLASSIFICATION	0.9998129404507414	WITHOUT_CLASSIFICATION	1.870595492584837E-4	IMPLEMENTATION
// double precision, native	WITHOUT_CLASSIFICATION	0.999730448812965	WITHOUT_CLASSIFICATION	2.6955118703496427E-4	IMPLEMENTATION
// signed short, little-endian	WITHOUT_CLASSIFICATION	0.9996300388087307	WITHOUT_CLASSIFICATION	3.699611912692496E-4	IMPLEMENTATION
// signed char	WITHOUT_CLASSIFICATION	0.9995553001211955	WITHOUT_CLASSIFICATION	4.4469987880434473E-4	IMPLEMENTATION
// unsigned char	WITHOUT_CLASSIFICATION	0.9995825979606654	WITHOUT_CLASSIFICATION	4.1740203933456147E-4	IMPLEMENTATION
// long, little-endian	WITHOUT_CLASSIFICATION	0.9995789677258964	WITHOUT_CLASSIFICATION	4.2103227410358586E-4	IMPLEMENTATION
// long, big-endian	WITHOUT_CLASSIFICATION	0.9995227467923411	WITHOUT_CLASSIFICATION	4.7725320765895553E-4	IMPLEMENTATION
// unsigned int, native	WITHOUT_CLASSIFICATION	0.9996323324988045	WITHOUT_CLASSIFICATION	3.6766750119557144E-4	IMPLEMENTATION
// int, native	WITHOUT_CLASSIFICATION	0.999524008644283	WITHOUT_CLASSIFICATION	4.759913557170128E-4	IMPLEMENTATION
// 64-bit number, native (as fixnum)	WITHOUT_CLASSIFICATION	0.9997255246898238	WITHOUT_CLASSIFICATION	2.74475310176218E-4	IMPLEMENTATION
// How many occurrences of 'type' we want	WITHOUT_CLASSIFICATION	0.9997438776473122	WITHOUT_CLASSIFICATION	2.561223526877366E-4	IMPLEMENTATION
// See if we have a converter for the job...	WITHOUT_CLASSIFICATION	0.9999456772298679	WITHOUT_CLASSIFICATION	5.432277013201172E-5	IMPLEMENTATION
// Otherwise the unpack should be here...	WITHOUT_CLASSIFICATION	0.999654748134474	WITHOUT_CLASSIFICATION	3.452518655259335E-4	IMPLEMENTATION
// Possible Checksum Byte	WITHOUT_CLASSIFICATION	0.9995982919776637	WITHOUT_CLASSIFICATION	4.017080223363478E-4	IMPLEMENTATION
// obtain a	WITHOUT_CLASSIFICATION	0.9995172205035	WITHOUT_CLASSIFICATION	4.827794965000327E-4	IMPLEMENTATION
// obtain b	WITHOUT_CLASSIFICATION	0.9995201654184839	WITHOUT_CLASSIFICATION	4.7983458151602034E-4	IMPLEMENTATION
// obtain c	WITHOUT_CLASSIFICATION	0.9995204482263904	WITHOUT_CLASSIFICATION	4.795517736095619E-4	IMPLEMENTATION
// obtain d	WITHOUT_CLASSIFICATION	0.9995196922468343	WITHOUT_CLASSIFICATION	4.803077531656433E-4	IMPLEMENTATION
/*encode.limit() - */	WITHOUT_CLASSIFICATION	0.9995805887495628	WITHOUT_CLASSIFICATION	4.1941125043718554E-4	IMPLEMENTATION
/* 1 */	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
/* 2 */	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
/* 3 */	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
/* 4 */	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
/* 5 */	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
/* 6 */	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
/* 7 */	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
// Skip all whitespace in pack format string	WITHOUT_CLASSIFICATION	0.9998619329047637	WITHOUT_CLASSIFICATION	1.3806709523639211E-4	IMPLEMENTATION
// Skip embedded comments in pack format string	WITHOUT_CLASSIFICATION	0.9998910929487659	WITHOUT_CLASSIFICATION	1.0890705123423207E-4	IMPLEMENTATION
// In case when the number of occurences is // explicitly specified, we have to read up // the remaining garbage after the '\0' to // satisfy the requested pattern.	WITHOUT_CLASSIFICATION	0.9999866419127765	WITHOUT_CLASSIFICATION	1.3358087223481899E-5	IMPLEMENTATION
//normal exit, this should be faster than a test at each iterations for string with more than //about 40 char	WITHOUT_CLASSIFICATION	0.9998745612417205	WITHOUT_CLASSIFICATION	1.2543875827948297E-4	IMPLEMENTATION
// We encountered '\0' when // were reading the buffer above, // increment the number of read bytes.	WITHOUT_CLASSIFICATION	0.9999601508156107	WITHOUT_CLASSIFICATION	3.984918438924908E-5	IMPLEMENTATION
// MRI behavior: Contrary to what seems to be logical, // when '*' is given, MRI calculates the distance // to the end, in order to go backwards.	WITHOUT_CLASSIFICATION	0.9999702544088171	WITHOUT_CLASSIFICATION	2.9745591182762745E-5	IMPLEMENTATION
// Determine how many of type are needed (default: 1)	WITHOUT_CLASSIFICATION	0.9997532455286461	WITHOUT_CLASSIFICATION	2.4675447135385375E-4	IMPLEMENTATION
// 'Z' adds extra null pad (versus 'a')	WITHOUT_CLASSIFICATION	0.9997289460061398	WITHOUT_CLASSIFICATION	2.710539938601583E-4	IMPLEMENTATION
//if the low bit is set //set the high bit of the result	WITHOUT_CLASSIFICATION	0.9999273483355114	WITHOUT_CLASSIFICATION	7.265166448861426E-5	IMPLEMENTATION
//if the index is not a multiple of 8, we are not on a byte boundary //shift the byte	WITHOUT_CLASSIFICATION	0.9999287511009438	WITHOUT_CLASSIFICATION	7.124889905622458E-5	IMPLEMENTATION
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9998794562107709	WITHOUT_CLASSIFICATION	1.2054378922908946E-4	IMPLEMENTATION
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9998794562107709	WITHOUT_CLASSIFICATION	1.2054378922908946E-4	IMPLEMENTATION
//do some padding, I don't understand the padding strategy	WITHOUT_CLASSIFICATION	0.9995058196668092	WITHOUT_CLASSIFICATION	4.941803331908326E-4	IMPLEMENTATION
// we filled up current byte; append it and create next one	WITHOUT_CLASSIFICATION	0.999859955498747	WITHOUT_CLASSIFICATION	1.4004450125294646E-4	IMPLEMENTATION
//if the index is not a multiple of 8, we are not on a byte boundary	WITHOUT_CLASSIFICATION	0.9999026340693418	WITHOUT_CLASSIFICATION	9.736593065823632E-5	IMPLEMENTATION
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9998719354644761	WITHOUT_CLASSIFICATION	1.280645355238801E-4	IMPLEMENTATION
// we don't deal with negatives.	WITHOUT_CLASSIFICATION	0.9998148185367033	WITHOUT_CLASSIFICATION	1.8518146329658849E-4	IMPLEMENTATION
// populate commandline with NG-provided stuff	WITHOUT_CLASSIFICATION	0.9998025610114121	WITHOUT_CLASSIFICATION	1.9743898858800456E-4	IMPLEMENTATION
// are we recursing?	WITHOUT_CLASSIFICATION	0.9995697511618742	WITHOUT_CLASSIFICATION	4.3024883812584427E-4	IMPLEMENTATION
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999795000880674	WITHOUT_CLASSIFICATION	2.0499911932728826E-5	IMPLEMENTATION
// default PidGetter	WITHOUT_CLASSIFICATION	0.999826351583527	WITHOUT_CLASSIFICATION	1.7364841647315884E-4	IMPLEMENTATION
// ignore and try windows version	WITHOUT_CLASSIFICATION	0.9999641697505729	WITHOUT_CLASSIFICATION	3.583024942716592E-5	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999331301345139	WITHOUT_CLASSIFICATION	6.686986548612283E-5	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999331301345139	WITHOUT_CLASSIFICATION	6.686986548612283E-5	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999331301345139	WITHOUT_CLASSIFICATION	6.686986548612283E-5	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999331301345139	WITHOUT_CLASSIFICATION	6.686986548612283E-5	IMPLEMENTATION
// try both	WITHOUT_CLASSIFICATION	0.9995692305404351	WITHOUT_CLASSIFICATION	4.307694595649019E-4	IMPLEMENTATION
// just unix	WITHOUT_CLASSIFICATION	0.9996088617525005	WITHOUT_CLASSIFICATION	3.911382474995172E-4	IMPLEMENTATION
// just windows	WITHOUT_CLASSIFICATION	0.9996630707791123	WITHOUT_CLASSIFICATION	3.3692922088768957E-4	IMPLEMENTATION
// neither	WITHOUT_CLASSIFICATION	0.9965536369974322	WITHOUT_CLASSIFICATION	0.003446363002567923	IMPLEMENTATION
// CON: popen is a case where I think we should just always shell out.	WITHOUT_CLASSIFICATION	0.9998512412931853	WITHOUT_CLASSIFICATION	1.487587068146746E-4	IMPLEMENTATION
// single string command, pass to sh to expand wildcards	WITHOUT_CLASSIFICATION	0.99986387343657	WITHOUT_CLASSIFICATION	1.3612656342997849E-4	IMPLEMENTATION
// direct invocation of the command	WITHOUT_CLASSIFICATION	0.9999346111331412	WITHOUT_CLASSIFICATION	6.538886685881793E-5	IMPLEMENTATION
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9998824769363908	WITHOUT_CLASSIFICATION	1.1752306360916263E-4	IMPLEMENTATION
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9998824769363908	WITHOUT_CLASSIFICATION	1.1752306360916263E-4	IMPLEMENTATION
// close process output // See JRUBY-3405; hooking up to parent process stdin caused // problems for IRB etc using stdin.	WITHOUT_CLASSIFICATION	0.9998775898581156	WITHOUT_CLASSIFICATION	1.224101418843143E-4	IMPLEMENTATION
// ignore, we're on the way out	WITHOUT_CLASSIFICATION	0.9999632412841926	WITHOUT_CLASSIFICATION	3.675871580751682E-5	IMPLEMENTATION
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9998440553747132	WITHOUT_CLASSIFICATION	1.559446252867498E-4	IMPLEMENTATION
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999047195564003	WITHOUT_CLASSIFICATION	9.528044359980168E-5	IMPLEMENTATION
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999047195564003	WITHOUT_CLASSIFICATION	9.528044359980168E-5	IMPLEMENTATION
// popen caller wants to be able to write, provide subprocess out directly	WITHOUT_CLASSIFICATION	0.9999147974451195	WITHOUT_CLASSIFICATION	8.5202554880516E-5	IMPLEMENTATION
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9998418210125922	WITHOUT_CLASSIFICATION	1.581789874076936E-4	IMPLEMENTATION
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9998418210125922	WITHOUT_CLASSIFICATION	1.581789874076936E-4	IMPLEMENTATION
// execute command with sh -c // this does shell expansion of wildcards	WITHOUT_CLASSIFICATION	0.9999421866830429	WITHOUT_CLASSIFICATION	5.781331695704596E-5	IMPLEMENTATION
// We need to close the out, since some // processes would just wait for the stream // to be closed before they process its content, // and produce the output. E.g.: "cat".	WITHOUT_CLASSIFICATION	0.9999635059049112	WITHOUT_CLASSIFICATION	3.649409508871689E-5	IMPLEMENTATION
// we only close out if it's the slave stream, to avoid // closing a directly-mapped stream from parent process	WITHOUT_CLASSIFICATION	0.9999539503377164	WITHOUT_CLASSIFICATION	4.604966228361824E-5	IMPLEMENTATION
// The assumption here is that the 'in' stream provides // proper available() support. If available() always // returns 0, we'll hang!	WITHOUT_CLASSIFICATION	0.9999624582202667	WITHOUT_CLASSIFICATION	3.7541779733328975E-5	IMPLEMENTATION
// Force t3 to quit, just in case if it's stuck. // Note: On some platforms, even interrupt might not // have an effect if the thread is IO blocked.	WITHOUT_CLASSIFICATION	0.9999658721065674	WITHOUT_CLASSIFICATION	3.41278934327177E-5	IMPLEMENTATION
// Check for special shell characters [<>|] at the beginning // and end of each command word and don't run in process if we find them.	WITHOUT_CLASSIFICATION	0.9999848833783636	WITHOUT_CLASSIFICATION	1.5116621636422937E-5	IMPLEMENTATION
// Note: this method produces meaningful results // only for RubyIO objects. For everything else returns 0.	WITHOUT_CLASSIFICATION	0.9998459476061078	WITHOUT_CLASSIFICATION	1.5405239389220654E-4	IMPLEMENTATION
//sequential	WITHOUT_CLASSIFICATION	0.9995411693896428	WITHOUT_CLASSIFICATION	4.5883061035723667E-4	IMPLEMENTATION
// reverse the entire area of the array selected if it's reversed.	WITHOUT_CLASSIFICATION	0.9999317459088986	WITHOUT_CLASSIFICATION	6.825409110147272E-5	IMPLEMENTATION
// do median of 7 if the array is over 200 elements.	WITHOUT_CLASSIFICATION	0.9998942686004769	WITHOUT_CLASSIFICATION	1.0573139952299731E-4	IMPLEMENTATION
// if it's less than 200 do median of 3	WITHOUT_CLASSIFICATION	0.9997987008687194	WITHOUT_CLASSIFICATION	2.0129913128063523E-4	IMPLEMENTATION
// SignalFacade	WITHOUT_CLASSIFICATION	0.9995398073011248	WITHOUT_CLASSIFICATION	4.6019269887521215E-4	IMPLEMENTATION
// this is the order in which MRI does these two tests	WITHOUT_CLASSIFICATION	0.9999350901845531	WITHOUT_CLASSIFICATION	6.490981544702234E-5	IMPLEMENTATION
// this is the order in which MRI does these tests	WITHOUT_CLASSIFICATION	0.9999382036287388	WITHOUT_CLASSIFICATION	6.179637126129147E-5	IMPLEMENTATION
// basically just forcing a TypeError here to match MRI	WITHOUT_CLASSIFICATION	0.9997583068062549	WITHOUT_CLASSIFICATION	2.4169319374513703E-4	IMPLEMENTATION
// not saving DFS instance, as it will only be used once (at most) per call	WITHOUT_CLASSIFICATION	0.9993594616152236	WITHOUT_CLASSIFICATION	6.405383847764204E-4	IMPLEMENTATION
// Args	WITHOUT_CLASSIFICATION	0.9965333313195585	WITHOUT_CLASSIFICATION	0.003466668680441452	IMPLEMENTATION
// static methods only	WITHOUT_CLASSIFICATION	0.9997122661585169	WITHOUT_CLASSIFICATION	2.8773384148312946E-4	IMPLEMENTATION
//System.err.println(" calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9998739215385366	WITHOUT_CLASSIFICATION	1.2607846146346158E-4	IMPLEMENTATION
// MRI 1.8.6 behavior: null byte after '%' // leads to "%" string. Null byte in // other places, like "%5\0", leads to error.	WITHOUT_CLASSIFICATION	0.9997961943425221	WITHOUT_CLASSIFICATION	2.038056574778491E-4	IMPLEMENTATION
// last index (+1) accessed by next() // last index (+1) accessed by get()	WITHOUT_CLASSIFICATION	0.9996862276733312	WITHOUT_CLASSIFICATION	3.137723266688092E-4	IMPLEMENTATION
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly.	WITHOUT_CLASSIFICATION	0.9999244973452746	WITHOUT_CLASSIFICATION	7.550265472547163E-5	IMPLEMENTATION
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly. Version for 1.9.	WITHOUT_CLASSIFICATION	0.9999365123058804	WITHOUT_CLASSIFICATION	6.348769411952284E-5	IMPLEMENTATION
// MRI doesn't flag it as an error if width is given multiple // times as a number (but it does for *)	WITHOUT_CLASSIFICATION	0.999896015759495	WITHOUT_CLASSIFICATION	1.0398424050492522E-4	IMPLEMENTATION
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999332288868101	WITHOUT_CLASSIFICATION	6.677111318988378E-5	IMPLEMENTATION
// MRI 1.8.5-p12 doesn't support 1-char strings, but // YARV 0.4.1 does. I don't think it hurts to include // this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])	WITHOUT_CLASSIFICATION	0.9998479483780152	WITHOUT_CLASSIFICATION	1.5205162198475173E-4	IMPLEMENTATION
// 'd' and 'i' are the same	WITHOUT_CLASSIFICATION	0.999749800490407	WITHOUT_CLASSIFICATION	2.5019950959302717E-4	IMPLEMENTATION
// 'u' with space or plus flags is same as 'd'	WITHOUT_CLASSIFICATION	0.9997404162480868	WITHOUT_CLASSIFICATION	2.595837519131815E-4	IMPLEMENTATION
// We depart here from strict adherence to MRI code, as MRI // uses C-sprintf, in part, to format numeric output, while // we'll use Java's numeric formatting code (and our own).	WITHOUT_CLASSIFICATION	0.999903432288429	WITHOUT_CLASSIFICATION	9.656771157098663E-5	IMPLEMENTATION
// skip '-' in bytes, will add where appropriate	WITHOUT_CLASSIFICATION	0.9997395853136187	WITHOUT_CLASSIFICATION	2.6041468638126616E-4	IMPLEMENTATION
// ..	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
// the 1 is for the stripped sign char	WITHOUT_CLASSIFICATION	0.999909751048044	WITHOUT_CLASSIFICATION	9.024895195597613E-5	IMPLEMENTATION
// FIXME: what is correct 'recv' argument? // (this does produce the desired behavior)	WITHOUT_CLASSIFICATION	0.9998393748288489	WITHOUT_CLASSIFICATION	1.606251711511378E-4	IMPLEMENTATION
// gotta have at least a zero...	WITHOUT_CLASSIFICATION	0.9997943254037479	WITHOUT_CLASSIFICATION	2.0567459625210879E-4	IMPLEMENTATION
// OK, we now have the significand in digits[0...nDigits] // and the exponent in exponent.  We're ready to format.	WITHOUT_CLASSIFICATION	0.9999203041171737	WITHOUT_CLASSIFICATION	7.969588282622312E-5	IMPLEMENTATION
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9995793241205313	WITHOUT_CLASSIFICATION	4.2067587946876156E-4	IMPLEMENTATION
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9995246521408356	WITHOUT_CLASSIFICATION	4.753478591643781E-4	IMPLEMENTATION
//System.err.println(" stringToLong/reading c=" + data[s]);	WITHOUT_CLASSIFICATION	0.9998811250725055	WITHOUT_CLASSIFICATION	1.1887492749453524E-4	IMPLEMENTATION
//System.err.println(" stringToLong/converted c=" + c);	WITHOUT_CLASSIFICATION	0.9998908224432832	WITHOUT_CLASSIFICATION	1.0917755671687461E-4	IMPLEMENTATION
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9995793241205313	WITHOUT_CLASSIFICATION	4.2067587946876156E-4	IMPLEMENTATION
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9995246521408356	WITHOUT_CLASSIFICATION	4.753478591643781E-4	IMPLEMENTATION
// precision for G/g includes integer digits	WITHOUT_CLASSIFICATION	0.999818523943802	WITHOUT_CLASSIFICATION	1.8147605619797116E-4	IMPLEMENTATION
// deal with length/width	WITHOUT_CLASSIFICATION	0.9995883439833572	WITHOUT_CLASSIFICATION	4.116560166428818E-4	IMPLEMENTATION
// deal with length/width	WITHOUT_CLASSIFICATION	0.9995883439833572	WITHOUT_CLASSIFICATION	4.116560166428818E-4	IMPLEMENTATION
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9998562027005132	WITHOUT_CLASSIFICATION	1.437972994867054E-4	IMPLEMENTATION
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999648082549757	WITHOUT_CLASSIFICATION	3.519174502431527E-5	IMPLEMENTATION
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9995793788471994	WITHOUT_CLASSIFICATION	4.2062115280061324E-4	IMPLEMENTATION
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9998362923434004	WITHOUT_CLASSIFICATION	1.6370765659964382E-4	IMPLEMENTATION
// MRI behavior: In this mode // trailing zeroes are removed: // 1.500E+05 -> 1.5E+05 	WITHOUT_CLASSIFICATION	0.9997595635638605	WITHOUT_CLASSIFICATION	2.404364361393641E-4	IMPLEMENTATION
// '.' is printed	WITHOUT_CLASSIFICATION	0.9995429413639829	WITHOUT_CLASSIFICATION	4.570586360172092E-4	IMPLEMENTATION
// all precision numebers printed	WITHOUT_CLASSIFICATION	0.9997778236528411	WITHOUT_CLASSIFICATION	2.221763471589429E-4	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9996237005799175	WITHOUT_CLASSIFICATION	3.762994200824947E-4	IMPLEMENTATION
// '.'	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
// decimal form, like (but not *just* like!) 'f'	WITHOUT_CLASSIFICATION	0.9997177372492083	WITHOUT_CLASSIFICATION	2.822627507917645E-4	IMPLEMENTATION
// digits array shifted, update all	WITHOUT_CLASSIFICATION	0.9998295931156371	WITHOUT_CLASSIFICATION	1.7040688436281698E-4	IMPLEMENTATION
// will have a trailing '.' // g fills trailing zeroes if #	WITHOUT_CLASSIFICATION	0.9998167823857218	WITHOUT_CLASSIFICATION	1.8321761427821028E-4	IMPLEMENTATION
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9997341418735303	WITHOUT_CLASSIFICATION	2.65858126469761E-4	IMPLEMENTATION
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9997341418735303	WITHOUT_CLASSIFICATION	2.65858126469761E-4	IMPLEMENTATION
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9996372401496648	WITHOUT_CLASSIFICATION	3.6275985033509616E-4	IMPLEMENTATION
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9996372401496648	WITHOUT_CLASSIFICATION	3.6275985033509616E-4	IMPLEMENTATION
// digits arr shifted, update all	WITHOUT_CLASSIFICATION	0.9998237131359267	WITHOUT_CLASSIFICATION	1.7628686407344748E-4	IMPLEMENTATION
// (1|intlen).prec	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
// (1|intlen)	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
// will have a trailing '.'	WITHOUT_CLASSIFICATION	0.9997404296755948	WITHOUT_CLASSIFICATION	2.595703244051328E-4	IMPLEMENTATION
// fill up the rest with zeroes	WITHOUT_CLASSIFICATION	0.9998072862890421	WITHOUT_CLASSIFICATION	1.927137109578028E-4	IMPLEMENTATION
//System.err.println(" main/len=" + len);	WITHOUT_CLASSIFICATION	0.9998494721947115	WITHOUT_CLASSIFICATION	1.5052780528854897E-4	IMPLEMENTATION
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9995793788471994	WITHOUT_CLASSIFICATION	4.2062115280061324E-4	IMPLEMENTATION
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9996237005799175	WITHOUT_CLASSIFICATION	3.762994200824947E-4	IMPLEMENTATION
// '.'	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
// equivalent to MRI case '\0':	WITHOUT_CLASSIFICATION	0.9997154788091503	WITHOUT_CLASSIFICATION	2.8452119084970386E-4	IMPLEMENTATION
// '.' and all precision digits printed	WITHOUT_CLASSIFICATION	0.9997929870003522	WITHOUT_CLASSIFICATION	2.0701299964771673E-4	IMPLEMENTATION
// \v	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
// dangling '%' char	WITHOUT_CLASSIFICATION	0.9995264315859482	WITHOUT_CLASSIFICATION	4.735684140517806E-4	IMPLEMENTATION
// main while loop (offset < length)	WITHOUT_CLASSIFICATION	0.9997857500811448	WITHOUT_CLASSIFICATION	2.1424991885529715E-4	IMPLEMENTATION
// debugging code, keeping for now	WITHOUT_CLASSIFICATION	0.9998009695309653	WITHOUT_CLASSIFICATION	1.9903046903469094E-4	IMPLEMENTATION
// MRI rounds up on nnn5nnn, but not nnn5 -- // except for when they do	WITHOUT_CLASSIFICATION	0.9997288753644257	WITHOUT_CLASSIFICATION	2.71124635574309E-4	IMPLEMENTATION
// "%.0f" % 0.99	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
// limit the length of negatives if possible (also faster)	WITHOUT_CLASSIFICATION	0.9998244198897293	WITHOUT_CLASSIFICATION	1.755801102706939E-4	IMPLEMENTATION
// negative values	WITHOUT_CLASSIFICATION	0.999709321338075	WITHOUT_CLASSIFICATION	2.906786619250033E-4	IMPLEMENTATION
// calculation for negatives when %u specified // for values >= Integer.MIN_VALUE * 2, MRI uses (the equivalent of) //   long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val // for smaller values, BigInteger math is required to conform to MRI's // result.	WITHOUT_CLASSIFICATION	0.9998947053006951	WITHOUT_CLASSIFICATION	1.0529469930492392E-4	IMPLEMENTATION
// relatively cheap test for 32-bit values	WITHOUT_CLASSIFICATION	0.9998529587980829	WITHOUT_CLASSIFICATION	1.470412019170852E-4	IMPLEMENTATION
// no such luck...	WITHOUT_CLASSIFICATION	0.9996386000679703	WITHOUT_CLASSIFICATION	3.613999320296673E-4	IMPLEMENTATION
// ok, now it gets expensive...	WITHOUT_CLASSIFICATION	0.9997041475977001	WITHOUT_CLASSIFICATION	2.958524022999575E-4	IMPLEMENTATION
// go through negated powers of 32 until we find one small enough 	WITHOUT_CLASSIFICATION	0.9997576206961399	WITHOUT_CLASSIFICATION	2.423793038600646E-4	IMPLEMENTATION
// add to the corresponding positive power of 32 for the result. // meaningful? no. conformant? yes. I just write the code...	WITHOUT_CLASSIFICATION	0.9999732088190674	WITHOUT_CLASSIFICATION	2.6791180932628815E-5	IMPLEMENTATION
/* constant vector a */	WITHOUT_CLASSIFICATION	0.9996360649768641	WITHOUT_CLASSIFICATION	3.639350231360238E-4	IMPLEMENTATION
/* most significant w-r bits */	WITHOUT_CLASSIFICATION	0.999703854438288	WITHOUT_CLASSIFICATION	2.9614556171195526E-4	IMPLEMENTATION
/* least significant r bits */	WITHOUT_CLASSIFICATION	0.9996000993410376	WITHOUT_CLASSIFICATION	3.9990065896246404E-4	IMPLEMENTATION
// state[j] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9996164186651415	WITHOUT_CLASSIFICATION	3.835813348585591E-4	IMPLEMENTATION
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9996164186651415	WITHOUT_CLASSIFICATION	3.835813348585591E-4	IMPLEMENTATION
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9996164186651415	WITHOUT_CLASSIFICATION	3.835813348585591E-4	IMPLEMENTATION
/* MSB is 1; assuring non-zero initial array */	WITHOUT_CLASSIFICATION	0.9998076339594212	WITHOUT_CLASSIFICATION	1.9236604057872638E-4	IMPLEMENTATION
/* Tempering */	WITHOUT_CLASSIFICATION	0.9995483496924311	WITHOUT_CLASSIFICATION	4.516503075688617E-4	IMPLEMENTATION
// MRI behavior: Week values are monotonous. // So, weeks that effectively belong to previous year, // will get the value of 0, not 52 or 53, as in Java.	WITHOUT_CLASSIFICATION	0.9999598426284857	WITHOUT_CLASSIFICATION	4.015737151428124E-5	IMPLEMENTATION
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.999849472049495	WITHOUT_CLASSIFICATION	1.5052795050497347E-4	IMPLEMENTATION
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.999849472049495	WITHOUT_CLASSIFICATION	1.5052795050497347E-4	IMPLEMENTATION
// \v	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
//System.err.println("getSign()");	WITHOUT_CLASSIFICATION	0.9998494620781905	WITHOUT_CLASSIFICATION	1.5053792180947496E-4	IMPLEMENTATION
//System.err.println(" getSign/" + sign);	WITHOUT_CLASSIFICATION	0.9998496375357465	WITHOUT_CLASSIFICATION	1.5036246425352502E-4	IMPLEMENTATION
//System.err.println("figureOutBase()/base=" + base);	WITHOUT_CLASSIFICATION	0.999850617250218	WITHOUT_CLASSIFICATION	1.4938274978200595E-4	IMPLEMENTATION
//System.err.println(" figureOutBase/base=" + base);	WITHOUT_CLASSIFICATION	0.999849853292298	WITHOUT_CLASSIFICATION	1.5014670770209192E-4	IMPLEMENTATION
//System.err.println("calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9998719668335417	WITHOUT_CLASSIFICATION	1.280331664582494E-4	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9965156457485383	WITHOUT_CLASSIFICATION	0.0034843542514616725	IMPLEMENTATION
//System.err.println(" stringToLong=" + val);	WITHOUT_CLASSIFICATION	0.9998761846191971	WITHOUT_CLASSIFICATION	1.238153808028018E-4	IMPLEMENTATION
// no number	WITHOUT_CLASSIFICATION	0.9996419444506544	WITHOUT_CLASSIFICATION	3.5805554934559264E-4	IMPLEMENTATION
// trailing garbage	WITHOUT_CLASSIFICATION	0.9995816577957578	WITHOUT_CLASSIFICATION	4.1834220424229716E-4	IMPLEMENTATION
//System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);	WITHOUT_CLASSIFICATION	0.999875761065515	WITHOUT_CLASSIFICATION	1.2423893448505443E-4	IMPLEMENTATION
// it was not found at all!	WITHOUT_CLASSIFICATION	0.9997595135873553	WITHOUT_CLASSIFICATION	2.4048641264482617E-4	IMPLEMENTATION
// can be overridden to be informed when objects are removed	WITHOUT_CLASSIFICATION	0.9998876670819545	WITHOUT_CLASSIFICATION	1.1233291804539843E-4	IMPLEMENTATION
// we reached the end of a list	WITHOUT_CLASSIFICATION	0.9998164151824447	WITHOUT_CLASSIFICATION	1.8358481755525354E-4	IMPLEMENTATION
// goto next bucket	WITHOUT_CLASSIFICATION	0.999531218935631	WITHOUT_CLASSIFICATION	4.6878106436894635E-4	IMPLEMENTATION
// we reached the end	WITHOUT_CLASSIFICATION	0.9997313294030743	WITHOUT_CLASSIFICATION	2.686705969256263E-4	IMPLEMENTATION
// entry is the first element of this bucket	WITHOUT_CLASSIFICATION	0.9999152897647956	WITHOUT_CLASSIFICATION	8.471023520438913E-5	IMPLEMENTATION
// states	WITHOUT_CLASSIFICATION	0.9967372313834045	WITHOUT_CLASSIFICATION	0.003262768616595551	IMPLEMENTATION
// remove leading whitespace (includes _ for lax) // get sign, if any	WITHOUT_CLASSIFICATION	0.9999272364083183	WITHOUT_CLASSIFICATION	7.276359168166972E-5	IMPLEMENTATION
// optimistic pass - calculate value as digits are processed // digits - lax rules // decimal digits - lax rules // exponent sign/digits - lax rules // digits - strict rules // decimal digits - strict rules // exponent sign/digits - strict rules // complete calculation if possible	WITHOUT_CLASSIFICATION	0.9999036392761099	WITHOUT_CLASSIFICATION	9.636072389013133E-5	IMPLEMENTATION
// fields used for direct (optimistic) calculation // number of significant digits, updated as parsed // zeroes that may go to significand or exponent // offset of decimal pt from start (-1 -> no decimal) // significand, updated as parsed // exponent, updated as parsed	WITHOUT_CLASSIFICATION	0.999971784517879	WITHOUT_CLASSIFICATION	2.821548212098941E-5	IMPLEMENTATION
// drop through for sign	WITHOUT_CLASSIFICATION	0.9996817985497009	WITHOUT_CLASSIFICATION	3.182014502991488E-4	IMPLEMENTATION
// switch // will use this if we have to go back the slow way	WITHOUT_CLASSIFICATION	0.9999055600560525	WITHOUT_CLASSIFICATION	9.44399439475157E-5	IMPLEMENTATION
// drop through for non-strict digits	WITHOUT_CLASSIFICATION	0.9997953249394684	WITHOUT_CLASSIFICATION	2.0467506053168606E-4	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9998418581026847	WITHOUT_CLASSIFICATION	1.5814189731529871E-4	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999582732361798	WITHOUT_CLASSIFICATION	4.172676382012937E-5	IMPLEMENTATION
// no digits, go calc (will return +/- 0.0 for lax)	WITHOUT_CLASSIFICATION	0.9998484044802806	WITHOUT_CLASSIFICATION	1.515955197193876E-4	IMPLEMENTATION
// ignore leading zeroes	WITHOUT_CLASSIFICATION	0.9999396906014667	WITHOUT_CLASSIFICATION	6.030939853323436E-5	IMPLEMENTATION
// just save a count of zeroes for now; if no digit // ends up following them, they'll be applied to the // exponent rather than the significand (and our max // length for optimistic calc).	WITHOUT_CLASSIFICATION	0.9999771294579376	WITHOUT_CLASSIFICATION	2.2870542062483895E-5	IMPLEMENTATION
// ok, got a non-zero, have to own up to our horded zeroes	WITHOUT_CLASSIFICATION	0.9997962653392929	WITHOUT_CLASSIFICATION	2.0373466070700697E-4	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9995864882459676	WITHOUT_CLASSIFICATION	4.135117540323694E-4	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9995864882459676	WITHOUT_CLASSIFICATION	4.135117540323694E-4	IMPLEMENTATION
// oh, well, it was worth a try. go let // Double/FloatingDecimal handle it 	WITHOUT_CLASSIFICATION	0.9996830752566054	WITHOUT_CLASSIFICATION	3.169247433946393E-4	IMPLEMENTATION
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999302462685721	WITHOUT_CLASSIFICATION	6.97537314278922E-5	IMPLEMENTATION
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999302462685721	WITHOUT_CLASSIFICATION	6.97537314278922E-5	IMPLEMENTATION
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999052297961064	WITHOUT_CLASSIFICATION	9.477020389369773E-5	IMPLEMENTATION
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999052297961064	WITHOUT_CLASSIFICATION	9.477020389369773E-5	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9995608987976414	WITHOUT_CLASSIFICATION	4.3910120235866884E-4	IMPLEMENTATION
// first non_underscore char must be digit	WITHOUT_CLASSIFICATION	0.9998225175935851	WITHOUT_CLASSIFICATION	1.7748240641486364E-4	IMPLEMENTATION
// no dec digits, end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9998376334393032	WITHOUT_CLASSIFICATION	1.6236656069690936E-4	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.999528122258154	WITHOUT_CLASSIFICATION	4.718777418458748E-4	IMPLEMENTATION
// difficult case, send to Double/FloatingDecimal	WITHOUT_CLASSIFICATION	0.9997316806203435	WITHOUT_CLASSIFICATION	2.6831937965654355E-4	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9964676212558803	WITHOUT_CLASSIFICATION	0.0035323787441197373	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9964676212558803	WITHOUT_CLASSIFICATION	0.0035323787441197373	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9998418581026847	WITHOUT_CLASSIFICATION	1.5814189731529871E-4	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9998418581026847	WITHOUT_CLASSIFICATION	1.5814189731529871E-4	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9998418581026847	WITHOUT_CLASSIFICATION	1.5814189731529871E-4	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999582732361798	WITHOUT_CLASSIFICATION	4.172676382012937E-5	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9995864882459676	WITHOUT_CLASSIFICATION	4.135117540323694E-4	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9995864882459676	WITHOUT_CLASSIFICATION	4.135117540323694E-4	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9995864882459676	WITHOUT_CLASSIFICATION	4.135117540323694E-4	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9995608987976414	WITHOUT_CLASSIFICATION	4.3910120235866884E-4	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9995608987976414	WITHOUT_CLASSIFICATION	4.3910120235866884E-4	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9995608987976414	WITHOUT_CLASSIFICATION	4.3910120235866884E-4	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.999528122258154	WITHOUT_CLASSIFICATION	4.718777418458748E-4	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.999528122258154	WITHOUT_CLASSIFICATION	4.718777418458748E-4	IMPLEMENTATION
// lax (str.to_f) allows underscores between e/E and sign	WITHOUT_CLASSIFICATION	0.9997590482361427	WITHOUT_CLASSIFICATION	2.4095176385734317E-4	IMPLEMENTATION
// switch // for // no exponent, so drop through for calculation	WITHOUT_CLASSIFICATION	0.9998587550742115	WITHOUT_CLASSIFICATION	1.412449257884813E-4	IMPLEMENTATION
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9998159571559657	WITHOUT_CLASSIFICATION	1.8404284403425412E-4	IMPLEMENTATION
// TODO: it's not clear to me why, in FloatingDecimal, the // "slop" calculation performed above for positive exponents // isn't used for negative exponents as well. Will find out...	WITHOUT_CLASSIFICATION	0.8798461258385615	WITHOUT_CLASSIFICATION	0.12015387416143863	IMPLEMENTATION
// no digits, error	WITHOUT_CLASSIFICATION	0.9996090054026261	WITHOUT_CLASSIFICATION	3.9099459737390667E-4	IMPLEMENTATION
// too big for us	WITHOUT_CLASSIFICATION	0.9995723248742884	WITHOUT_CLASSIFICATION	4.276751257116489E-4	IMPLEMENTATION
// too big for us	WITHOUT_CLASSIFICATION	0.9995723248742884	WITHOUT_CLASSIFICATION	4.276751257116489E-4	IMPLEMENTATION
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.999856490722768	WITHOUT_CLASSIFICATION	1.4350927723189984E-4	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9965156457485383	WITHOUT_CLASSIFICATION	0.0034843542514616725	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9965156457485383	WITHOUT_CLASSIFICATION	0.0034843542514616725	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9965156457485383	WITHOUT_CLASSIFICATION	0.0034843542514616725	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9965156457485383	WITHOUT_CLASSIFICATION	0.0034843542514616725	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9965156457485383	WITHOUT_CLASSIFICATION	0.0034843542514616725	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999036624981371	WITHOUT_CLASSIFICATION	9.633750186285033E-5	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999036624981371	WITHOUT_CLASSIFICATION	9.633750186285033E-5	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999036624981371	WITHOUT_CLASSIFICATION	9.633750186285033E-5	IMPLEMENTATION
// first char must be digit	WITHOUT_CLASSIFICATION	0.9997432533233691	WITHOUT_CLASSIFICATION	2.567466766308057E-4	IMPLEMENTATION
// no dec digits after '.', error for strict	WITHOUT_CLASSIFICATION	0.9998242589425377	WITHOUT_CLASSIFICATION	1.7574105746240632E-4	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999582732361798	WITHOUT_CLASSIFICATION	4.172676382012937E-5	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9995608987976414	WITHOUT_CLASSIFICATION	4.3910120235866884E-4	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9995608987976414	WITHOUT_CLASSIFICATION	4.3910120235866884E-4	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9965156457485383	WITHOUT_CLASSIFICATION	0.0034843542514616725	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9965156457485383	WITHOUT_CLASSIFICATION	0.0034843542514616725	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999036624981371	WITHOUT_CLASSIFICATION	9.633750186285033E-5	IMPLEMENTATION
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.999856490722768	WITHOUT_CLASSIFICATION	1.4350927723189984E-4	IMPLEMENTATION
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9997818917350114	WITHOUT_CLASSIFICATION	2.1810826498863044E-4	IMPLEMENTATION
// switch //while	WITHOUT_CLASSIFICATION	0.999621548931106	WITHOUT_CLASSIFICATION	3.784510688939591E-4	IMPLEMENTATION
/*     * All the positive powers of 10 that can be     * represented exactly in double/float.     * (From sun.misc.FloatingDecimal.java)     */	WITHOUT_CLASSIFICATION	0.9999555703207051	WITHOUT_CLASSIFICATION	4.4429679294846526E-5	IMPLEMENTATION
// Zlib behavior: negative win_bits means no header and no checksum.	WITHOUT_CLASSIFICATION	0.999801142736348	WITHOUT_CLASSIFICATION	1.9885726365206064E-4	IMPLEMENTATION
// rb_enc_mbclen	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
// rb_enc_precise_mbclen	WITHOUT_CLASSIFICATION	0.9995821059944484	WITHOUT_CLASSIFICATION	4.178940055516183E-4	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9995200358524381	WITHOUT_CLASSIFICATION	4.799641475618922E-4	IMPLEMENTATION
// arg cannot be negative	WITHOUT_CLASSIFICATION	0.9997436893116314	WITHOUT_CLASSIFICATION	2.5631068836862E-4	IMPLEMENTATION
// NoFunctionalitySignalFacade	WITHOUT_CLASSIFICATION	0.9996753953890347	WITHOUT_CLASSIFICATION	3.246046109653007E-4	IMPLEMENTATION
// Change visibility so others can see it	WITHOUT_CLASSIFICATION	0.999883090428317	WITHOUT_CLASSIFICATION	1.1690957168295198E-4	IMPLEMENTATION
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9998015771495204	WITHOUT_CLASSIFICATION	1.9842285047966834E-4	IMPLEMENTATION
// strip off "_dot_rb" for .rb files	WITHOUT_CLASSIFICATION	0.9997416582326818	WITHOUT_CLASSIFICATION	2.5834176731823433E-4	IMPLEMENTATION
// Makes sure the key is not already in the hashtable.	WITHOUT_CLASSIFICATION	0.9999596540344686	WITHOUT_CLASSIFICATION	4.034596553143701E-5	IMPLEMENTATION
// Rehash the table if the threshold is exceeded	WITHOUT_CLASSIFICATION	0.9999241960366549	WITHOUT_CLASSIFICATION	7.580396334503153E-5	IMPLEMENTATION
// Creates the new entry.	WITHOUT_CLASSIFICATION	0.9998874909077198	WITHOUT_CLASSIFICATION	1.1250909228029169E-4	IMPLEMENTATION
// next entry to return // current slot // current entry	WITHOUT_CLASSIFICATION	0.9999042488950624	WITHOUT_CLASSIFICATION	9.575110493771378E-5	IMPLEMENTATION
// advance to first entry	WITHOUT_CLASSIFICATION	0.999687569968523	WITHOUT_CLASSIFICATION	3.124300314770254E-4	IMPLEMENTATION
// The reason why we need the stream is to be able to invoke available() on it. // STDIN in Java is non-interruptible, non-selectable, and attempt to read // on such stream might lead to thread being blocked without *any* way to unblock it. // That's where available() comes it, so at least we could check whether // anything is available to be read without blocking.	WITHOUT_CLASSIFICATION	0.9999894169463157	WITHOUT_CLASSIFICATION	1.0583053684292187E-5	IMPLEMENTATION
/*package-protected*/	WITHOUT_CLASSIFICATION	0.9995968796718598	WITHOUT_CLASSIFICATION	4.0312032814019435E-4	IMPLEMENTATION
// raw file URL, just open directly	WITHOUT_CLASSIFICATION	0.999785463812593	WITHOUT_CLASSIFICATION	2.145361874069781E-4	IMPLEMENTATION
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9998553913884063	WITHOUT_CLASSIFICATION	1.4460861159366133E-4	IMPLEMENTATION
// if refcount is at or below zero, we're no longer valid	WITHOUT_CLASSIFICATION	0.999844286133467	WITHOUT_CLASSIFICATION	1.5571386653295168E-4	IMPLEMENTATION
// if channel is already closed, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999155529319586	WITHOUT_CLASSIFICATION	8.44470680414016E-5	IMPLEMENTATION
// otherwise decrement and possibly close as normal	WITHOUT_CLASSIFICATION	0.9997046683824532	WITHOUT_CLASSIFICATION	2.9533161754675144E-4	IMPLEMENTATION
// r/w buffer // are we reading or writing?	WITHOUT_CLASSIFICATION	0.9997494299682155	WITHOUT_CLASSIFICATION	2.505700317845824E-4	IMPLEMENTATION
// this constructor is used by fdopen, so we don't increment descriptor ref count	WITHOUT_CLASSIFICATION	0.9999097517641947	WITHOUT_CLASSIFICATION	9.024823580531328E-5	IMPLEMENTATION
// unread back	WITHOUT_CLASSIFICATION	0.9995261042528532	WITHOUT_CLASSIFICATION	4.738957471468812E-4	IMPLEMENTATION
// iterate over remainder of buffer until we find a match	WITHOUT_CLASSIFICATION	0.9998245475446467	WITHOUT_CLASSIFICATION	1.754524553534207E-4	IMPLEMENTATION
// terminate and advance buffer when we find our char	WITHOUT_CLASSIFICATION	0.9997943906385202	WITHOUT_CLASSIFICATION	2.0560936147976763E-4	IMPLEMENTATION
// no match, append remainder of buffer and continue with next block	WITHOUT_CLASSIFICATION	0.9998661630670432	WITHOUT_CLASSIFICATION	1.3383693295672386E-4	IMPLEMENTATION
// found a match above, check if remaining separator characters match, appending as we go	WITHOUT_CLASSIFICATION	0.9999042685732786	WITHOUT_CLASSIFICATION	9.57314267212924E-5	IMPLEMENTATION
// // Check file size - special files in /proc have zero size and need to be // handled by the generic read path. //	WITHOUT_CLASSIFICATION	0.9999030372693207	WITHOUT_CLASSIFICATION	9.69627306792927E-5	IMPLEMENTATION
// // Copy any buffered data (including ungetc byte) //	WITHOUT_CLASSIFICATION	0.9998041010673644	WITHOUT_CLASSIFICATION	1.9589893263570628E-4	IMPLEMENTATION
// // Now read unbuffered directly from the file //	WITHOUT_CLASSIFICATION	0.9999334051345938	WITHOUT_CLASSIFICATION	6.659486540609263E-5	IMPLEMENTATION
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9997818917350114	WITHOUT_CLASSIFICATION	2.1810826498863044E-4	IMPLEMENTATION
// // Need to clamp source (buffer) size to avoid overrun //	WITHOUT_CLASSIFICATION	0.9997305752602589	WITHOUT_CLASSIFICATION	2.69424739741091E-4	IMPLEMENTATION
// not closing from finalize	WITHOUT_CLASSIFICATION	0.9989719549124025	WITHOUT_CLASSIFICATION	0.0010280450875974722	IMPLEMENTATION
// clear runtime so it doesn't get stuck in memory (JRUBY-2933)	WITHOUT_CLASSIFICATION	0.9998386671237903	WITHOUT_CLASSIFICATION	1.613328762096707E-4	IMPLEMENTATION
// silence	WITHOUT_CLASSIFICATION	0.9965045146668671	WITHOUT_CLASSIFICATION	0.00349548533313296	IMPLEMENTATION
// silence	WITHOUT_CLASSIFICATION	0.9965045146668671	WITHOUT_CLASSIFICATION	0.00349548533313296	IMPLEMENTATION
// Don't bother	WITHOUT_CLASSIFICATION	0.9995423878265632	WITHOUT_CLASSIFICATION	4.576121734367179E-4	IMPLEMENTATION
// Don't bother	WITHOUT_CLASSIFICATION	0.9995423878265632	WITHOUT_CLASSIFICATION	4.576121734367179E-4	IMPLEMENTATION
// For Sockets, only write as much as will fit.	WITHOUT_CLASSIFICATION	0.9997739583254557	WITHOUT_CLASSIFICATION	2.2604167454427193E-4	IMPLEMENTATION
// Correct position for read / write buffering (we could invalidate, but expensive)	WITHOUT_CLASSIFICATION	0.9999046517895241	WITHOUT_CLASSIFICATION	9.534821047587654E-5	IMPLEMENTATION
// Adjust for buffered data	WITHOUT_CLASSIFICATION	0.9996350674087796	WITHOUT_CLASSIFICATION	3.6493259122029445E-4	IMPLEMENTATION
// for SEEK_CUR, need to adjust for buffered data	WITHOUT_CLASSIFICATION	0.9996630789273723	WITHOUT_CLASSIFICATION	3.3692107262769683E-4	IMPLEMENTATION
// libc flushes writes on any read from the actual file, so we flush here	WITHOUT_CLASSIFICATION	0.9998928980029743	WITHOUT_CLASSIFICATION	1.0710199702571129E-4	IMPLEMENTATION
// we have read ahead, and need to back up	WITHOUT_CLASSIFICATION	0.9996606184688851	WITHOUT_CLASSIFICATION	3.393815311148998E-4	IMPLEMENTATION
// 128K seems to be the minimum at which the stat+seek is faster than reallocation	WITHOUT_CLASSIFICATION	0.9999212357856142	WITHOUT_CLASSIFICATION	7.876421438584322E-5	IMPLEMENTATION
// // limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations //	WITHOUT_CLASSIFICATION	0.9998815087579513	WITHOUT_CLASSIFICATION	1.1849124204860687E-4	IMPLEMENTATION
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9996830640766053	WITHOUT_CLASSIFICATION	3.169359233946616E-4	IMPLEMENTATION
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999524822584457	WITHOUT_CLASSIFICATION	4.7517741554397944E-5	IMPLEMENTATION
// // Avoid double-copying for reads that are larger than the buffer size //	WITHOUT_CLASSIFICATION	0.9998878188662917	WITHOUT_CLASSIFICATION	1.1218113370816909E-4	IMPLEMENTATION
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999052208329896	WITHOUT_CLASSIFICATION	9.477916701039944E-5	IMPLEMENTATION
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999052208329896	WITHOUT_CLASSIFICATION	9.477916701039944E-5	IMPLEMENTATION
// // Avoid double-copying for reads that are larger than the buffer size, or // the destination is a direct buffer. //	WITHOUT_CLASSIFICATION	0.9999568681294718	WITHOUT_CLASSIFICATION	4.313187052820352E-5	IMPLEMENTATION
// // We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating // a huge temporary native buffer, when doing reads into a heap buffer // If the dst buffer is direct, then no need to limit. //	WITHOUT_CLASSIFICATION	0.9999103651201191	WITHOUT_CLASSIFICATION	8.96348798809674E-5	IMPLEMENTATION
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9998503144135726	WITHOUT_CLASSIFICATION	1.4968558642726264E-4	IMPLEMENTATION
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9998503144135726	WITHOUT_CLASSIFICATION	1.4968558642726264E-4	IMPLEMENTATION
// Doesn't fit in buffer. Write immediately. // ensure nothing left to write	WITHOUT_CLASSIFICATION	0.9999455521175198	WITHOUT_CLASSIFICATION	5.44478824802928E-5	IMPLEMENTATION
// truncate can't lengthen files, so we save position, seek/write, and go back	WITHOUT_CLASSIFICATION	0.9999224571652156	WITHOUT_CLASSIFICATION	7.754283478434012E-5	IMPLEMENTATION
// how far ahead we are when reading	WITHOUT_CLASSIFICATION	0.9997676375335588	WITHOUT_CLASSIFICATION	2.3236246644123092E-4	IMPLEMENTATION
// if the read buffer is ahead, back up	WITHOUT_CLASSIFICATION	0.9998665874917164	WITHOUT_CLASSIFICATION	1.3341250828362208E-4	IMPLEMENTATION
// close without removing from finalizers	WITHOUT_CLASSIFICATION	0.9997838281839453	WITHOUT_CLASSIFICATION	2.1617181605473873E-4	IMPLEMENTATION
// putting a bit back, so we're not at EOF anymore	WITHOUT_CLASSIFICATION	0.9998206062704589	WITHOUT_CLASSIFICATION	1.7939372954118494E-4	IMPLEMENTATION
// save the ungot	WITHOUT_CLASSIFICATION	0.9997860886169931	WITHOUT_CLASSIFICATION	2.1391138300696588E-4	IMPLEMENTATION
// otherwise, we try an unbuffered read to get whatever's available	WITHOUT_CLASSIFICATION	0.9997715888168139	WITHOUT_CLASSIFICATION	2.2841118318605295E-4	IMPLEMENTATION
// ignore this; select() will set the correct mode when it is finished	WITHOUT_CLASSIFICATION	0.9999772625964302	WITHOUT_CLASSIFICATION	2.273740356980384E-5	IMPLEMENTATION
// flush first	WITHOUT_CLASSIFICATION	0.9995653841171425	WITHOUT_CLASSIFICATION	4.346158828576341E-4	IMPLEMENTATION
// // Wake up any channels that became unblocked //	WITHOUT_CLASSIFICATION	0.9997697117254366	WITHOUT_CLASSIFICATION	2.302882745633873E-4	IMPLEMENTATION
// // Register any new blocking I/O requests //	WITHOUT_CLASSIFICATION	0.999790834365851	WITHOUT_CLASSIFICATION	2.0916563414890386E-4	IMPLEMENTATION
// Now clear out any previously selected channels	WITHOUT_CLASSIFICATION	0.9999266139201443	WITHOUT_CLASSIFICATION	7.338607985579356E-5	IMPLEMENTATION
// // Wait for I/O on any channel //	WITHOUT_CLASSIFICATION	0.9997824988090114	WITHOUT_CLASSIFICATION	2.1750119098856526E-4	IMPLEMENTATION
// Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'	WITHOUT_CLASSIFICATION	0.9999438168665363	WITHOUT_CLASSIFICATION	5.618313346373852E-5	IMPLEMENTATION
// Java requires "w" for creating a file that does not exist	WITHOUT_CLASSIFICATION	0.9999298259146738	WITHOUT_CLASSIFICATION	7.01740853262005E-5	IMPLEMENTATION
// seek to force underlying buffer to flush	WITHOUT_CLASSIFICATION	0.999728499460857	WITHOUT_CLASSIFICATION	2.7150053914298534E-4	IMPLEMENTATION
// seek to force read buffer to invalidate	WITHOUT_CLASSIFICATION	0.9997316473153065	WITHOUT_CLASSIFICATION	2.683526846935329E-4	IMPLEMENTATION
/*        result = eval("arr = Array::['c', 200]; p arr");        assertEquals("[\"c\", 200]", result);        result = eval("arr = Array.['d', 200]; p arr");        assertEquals("[\"d\", 200]", result);        */	WITHOUT_CLASSIFICATION	0.999976268774735	WITHOUT_CLASSIFICATION	2.373122526503314E-5	IMPLEMENTATION
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9998898589808793	WITHOUT_CLASSIFICATION	1.1014101912061978E-4	IMPLEMENTATION
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.8427162460276038	WITHOUT_CLASSIFICATION	0.15728375397239633	IMPLEMENTATION
// make sure the pipe stream is set to null	WITHOUT_CLASSIFICATION	0.9999045420487868	WITHOUT_CLASSIFICATION	9.545795121316789E-5	IMPLEMENTATION
// make sure the main stream is set to null	WITHOUT_CLASSIFICATION	0.999894277800961	WITHOUT_CLASSIFICATION	1.0572219903904104E-4	IMPLEMENTATION
// first try our custom-generated Unsafe	WITHOUT_CLASSIFICATION	0.9993434653937218	WITHOUT_CLASSIFICATION	6.565346062782098E-4	IMPLEMENTATION
// then try Sun's Unsafe	WITHOUT_CLASSIFICATION	0.9996915908828787	WITHOUT_CLASSIFICATION	3.0840911712123626E-4	IMPLEMENTATION
// if we get here, the class and field exist; construct our Unsafe impl // that calls it directly	WITHOUT_CLASSIFICATION	0.9999488198559173	WITHOUT_CLASSIFICATION	5.118014408266614E-5	IMPLEMENTATION
// else leave it null	WITHOUT_CLASSIFICATION	0.9996296789955037	WITHOUT_CLASSIFICATION	3.7032100449624914E-4	IMPLEMENTATION
// TypeMatcher	WITHOUT_CLASSIFICATION	0.9995469659627	WITHOUT_CLASSIFICATION	4.5303403730005725E-4	IMPLEMENTATION
// This is now needed, since module Java // isn't in by default	WITHOUT_CLASSIFICATION	0.9998761798724918	WITHOUT_CLASSIFICATION	1.23820127508239E-4	IMPLEMENTATION
// Iterate over the RubyHash keySet, simultaneously iterating over the values()	WITHOUT_CLASSIFICATION	0.9998676473200726	WITHOUT_CLASSIFICATION	1.3235267992743564E-4	IMPLEMENTATION
// Get the value from the map via the key	WITHOUT_CLASSIFICATION	0.9999643325457575	WITHOUT_CLASSIFICATION	3.566745424254147E-5	IMPLEMENTATION
// Get the value from the map via the values iterator	WITHOUT_CLASSIFICATION	0.9999706934421249	WITHOUT_CLASSIFICATION	2.9306557875177196E-5	IMPLEMENTATION
// Check the 2 values obtained via different means	WITHOUT_CLASSIFICATION	0.9998673013489621	WITHOUT_CLASSIFICATION	1.3269865103794916E-4	IMPLEMENTATION
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9998605839295324	WITHOUT_CLASSIFICATION	1.3941607046763602E-4	IMPLEMENTATION
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9998605839295324	WITHOUT_CLASSIFICATION	1.3941607046763602E-4	IMPLEMENTATION
// Check the entry.setValue values come back out ok	WITHOUT_CLASSIFICATION	0.9998784911726519	WITHOUT_CLASSIFICATION	1.2150882734806678E-4	IMPLEMENTATION
// If we're running from within an IDE we may not have // the .rb files in our classpath. Try to find them // in the filesystem instead.	WITHOUT_CLASSIFICATION	0.9999834024860059	WITHOUT_CLASSIFICATION	1.6597513994004382E-5	IMPLEMENTATION
//assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); //assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));	WITHOUT_CLASSIFICATION	0.9997683851536517	WITHOUT_CLASSIFICATION	2.3161484634827572E-4	IMPLEMENTATION
// Init	WITHOUT_CLASSIFICATION	0.9966886112240592	WITHOUT_CLASSIFICATION	0.003311388775940765	IMPLEMENTATION
// Block	WITHOUT_CLASSIFICATION	0.996510142403042	WITHOUT_CLASSIFICATION	0.0034898575969580237	IMPLEMENTATION
// Copy constructor	WITHOUT_CLASSIFICATION	0.999724015929521	WITHOUT_CLASSIFICATION	2.759840704790504E-4	IMPLEMENTATION
// presumably this require should fail	WITHOUT_CLASSIFICATION	0.9995207031530896	WITHOUT_CLASSIFICATION	4.792968469102801E-4	IMPLEMENTATION
// JRUBY-646 // presumably this require should fail	WITHOUT_CLASSIFICATION	0.9995192566902054	WITHOUT_CLASSIFICATION	4.8074330979455465E-4	IMPLEMENTATION
// Test that requiring a normal Java class raises an error (JRUBY-3214	WITHOUT_CLASSIFICATION	0.9999252561582289	WITHOUT_CLASSIFICATION	7.47438417710838E-5	IMPLEMENTATION
// ok	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
// Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods // from Ruby so they are not really unused).	WITHOUT_CLASSIFICATION	0.9999248718128125	WITHOUT_CLASSIFICATION	7.512818718744202E-5	IMPLEMENTATION
//load should work several times in a row	WITHOUT_CLASSIFICATION	0.9996288212471545	WITHOUT_CLASSIFICATION	3.711787528456549E-4	IMPLEMENTATION
//reset the $loadTestvar	WITHOUT_CLASSIFICATION	0.9996483704858367	WITHOUT_CLASSIFICATION	3.516295141633093E-4	IMPLEMENTATION
//call throwException via JRuby	WITHOUT_CLASSIFICATION	0.9998452440364408	WITHOUT_CLASSIFICATION	1.5475596355906844E-4	IMPLEMENTATION
// Notify the calling thread that we're about to go to sleep the first time	WITHOUT_CLASSIFICATION	0.9999495331542874	WITHOUT_CLASSIFICATION	5.0466845712712705E-5	IMPLEMENTATION
// wait for the go signal	WITHOUT_CLASSIFICATION	0.9997529448504949	WITHOUT_CLASSIFICATION	2.470551495050585E-4	IMPLEMENTATION
// run ten separate calls into Ruby, with delay and explicit GC	WITHOUT_CLASSIFICATION	0.9998221283820455	WITHOUT_CLASSIFICATION	1.778716179543838E-4	IMPLEMENTATION
// wait until thread has initialized	WITHOUT_CLASSIFICATION	0.9998754700188437	WITHOUT_CLASSIFICATION	1.2452998115636737E-4	IMPLEMENTATION
// notify thread to proceed	WITHOUT_CLASSIFICATION	0.9994454541908777	WITHOUT_CLASSIFICATION	5.545458091222789E-4	IMPLEMENTATION
// wait until thread has completed	WITHOUT_CLASSIFICATION	0.9996439643653985	WITHOUT_CLASSIFICATION	3.560356346015288E-4	IMPLEMENTATION
// we do preand post load outside the "body" versions to pre-prepare // and pre-push the dynamic scope we need for lastline	WITHOUT_CLASSIFICATION	0.9998049756220394	WITHOUT_CLASSIFICATION	1.9502437796065536E-4	IMPLEMENTATION
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9998265385823029	WITHOUT_CLASSIFICATION	1.7346141769716922E-4	IMPLEMENTATION
// MRI behavior: raise ArgumentError for 'unknown command' before // checking number of args.	WITHOUT_CLASSIFICATION	0.9999256570133835	WITHOUT_CLASSIFICATION	7.434298661648446E-5	IMPLEMENTATION
// if any exceptions were raised, we fail	WITHOUT_CLASSIFICATION	0.9998284449944832	WITHOUT_CLASSIFICATION	1.7155500551680058E-4	IMPLEMENTATION
// there should only be one more thread in thread group than before we started	WITHOUT_CLASSIFICATION	0.9998738197196794	WITHOUT_CLASSIFICATION	1.261802803205059E-4	IMPLEMENTATION
// construct a new cache with thread's classloader and no limit	WITHOUT_CLASSIFICATION	0.9999048843237572	WITHOUT_CLASSIFICATION	9.511567624269282E-5	IMPLEMENTATION
//        Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); //        Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();	WITHOUT_CLASSIFICATION	0.9999623983037372	WITHOUT_CLASSIFICATION	3.7601696262750676E-5	IMPLEMENTATION
//        assertSame(script1, script2);	WITHOUT_CLASSIFICATION	0.9999342022460233	WITHOUT_CLASSIFICATION	6.579775397671324E-5	IMPLEMENTATION
// void methods should work	WITHOUT_CLASSIFICATION	0.9995271026178781	WITHOUT_CLASSIFICATION	4.7289738212195865E-4	IMPLEMENTATION
// methods with required = 4 or higher should bind and be callable using reflection // JRUBY-3649	WITHOUT_CLASSIFICATION	0.9998155693368994	WITHOUT_CLASSIFICATION	1.8443066310051592E-4	IMPLEMENTATION
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999859902705504	WITHOUT_CLASSIFICATION	1.4009729449662682E-5	IMPLEMENTATION
// Ensure we have a new interpreter for each test. Previous we were using the //  same interpreter which caused problems as soon as one test failed.	WITHOUT_CLASSIFICATION	0.9999545519761022	WITHOUT_CLASSIFICATION	4.5448023897867384E-5	IMPLEMENTATION
// Without a flush Ant will miss some of our output	WITHOUT_CLASSIFICATION	0.99977717218903	WITHOUT_CLASSIFICATION	2.228278109701025E-4	IMPLEMENTATION
// assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());	WITHOUT_CLASSIFICATION	0.9998100103147106	WITHOUT_CLASSIFICATION	1.899896852894292E-4	IMPLEMENTATION
//        int n = 10;	WITHOUT_CLASSIFICATION	0.9998667995846823	WITHOUT_CLASSIFICATION	1.3320041531772694E-4	IMPLEMENTATION
// there might be more test classes in a single file, so we iterate over them	WITHOUT_CLASSIFICATION	0.999932986404186	WITHOUT_CLASSIFICATION	6.701359581397412E-5	IMPLEMENTATION
//No ClassCastException!	WITHOUT_CLASSIFICATION	0.9997953203141707	WITHOUT_CLASSIFICATION	2.0467968582921724E-4	IMPLEMENTATION
// value equality	WITHOUT_CLASSIFICATION	0.9996229191115131	WITHOUT_CLASSIFICATION	3.7708088848677934E-4	IMPLEMENTATION
// identity equality	WITHOUT_CLASSIFICATION	0.9995754419330661	WITHOUT_CLASSIFICATION	4.2455806693378687E-4	IMPLEMENTATION
// bench straight-up integer fib(30)	WITHOUT_CLASSIFICATION	0.9997180683178625	WITHOUT_CLASSIFICATION	2.8193168213752303E-4	IMPLEMENTATION
// bench Integer fib	WITHOUT_CLASSIFICATION	0.9995165410447145	WITHOUT_CLASSIFICATION	4.834589552854373E-4	IMPLEMENTATION
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9995808450544249	WITHOUT_CLASSIFICATION	4.1915494557511157E-4	IMPLEMENTATION
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9995808450544249	WITHOUT_CLASSIFICATION	4.1915494557511157E-4	IMPLEMENTATION
// bench fixnum-boxed fib	WITHOUT_CLASSIFICATION	0.9995793788471994	WITHOUT_CLASSIFICATION	4.2062115280061324E-4	IMPLEMENTATION
// bench straight-up long fib(30)	WITHOUT_CLASSIFICATION	0.9997107817265286	WITHOUT_CLASSIFICATION	2.8921827347136745E-4	IMPLEMENTATION
// bench Long fib	WITHOUT_CLASSIFICATION	0.9995216225924802	WITHOUT_CLASSIFICATION	4.7837740751968357E-4	IMPLEMENTATION
// skip this one, probably no 'ls' (windows)	WITHOUT_CLASSIFICATION	0.9998290618561145	WITHOUT_CLASSIFICATION	1.7093814388546152E-4	IMPLEMENTATION
// start off with a neutral parent	WITHOUT_CLASSIFICATION	0.9998387232541665	WITHOUT_CLASSIFICATION	1.612767458334824E-4	IMPLEMENTATION
/*            public class Hello {                public static String getMessage() {                    return ".....";                }            }            */	WITHOUT_CLASSIFICATION	0.9999971143073356	WITHOUT_CLASSIFICATION	2.885692664309621E-6	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9998655493461495	WITHOUT_CLASSIFICATION	1.344506538505482E-4	IMPLEMENTATION
// Note: We can't use file.exists() to check whether the symlink // exists or not, because that method returns false for existing // but broken symlink. So, we try without the existence check, // but in the try-catch block. // MRI behavior: symlink? on broken symlink should return true.	WITHOUT_CLASSIFICATION	0.9999848714162047	WITHOUT_CLASSIFICATION	1.5128583795301357E-5	IMPLEMENTATION
// We are creating a new IO object that shares the same // IOHandler (and fileno).	WITHOUT_CLASSIFICATION	0.9999171924558926	WITHOUT_CLASSIFICATION	8.280754410727289E-5	IMPLEMENTATION
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9998017177122515	WITHOUT_CLASSIFICATION	1.9828228774859436E-4	IMPLEMENTATION
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9998189128006963	WITHOUT_CLASSIFICATION	1.8108719930364588E-4	IMPLEMENTATION
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9998845698203488	WITHOUT_CLASSIFICATION	1.1543017965116589E-4	IMPLEMENTATION
// Translate "x || y" --> "x = (is_true(x) ? x : y)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, true, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.999833416636288	WITHOUT_CLASSIFICATION	1.6658336371204547E-4	IMPLEMENTATION
// // Force the client socket to be blocking //	WITHOUT_CLASSIFICATION	0.999835353727552	WITHOUT_CLASSIFICATION	1.646462724479969E-4	IMPLEMENTATION
// Additional context surrounding tokens that both the lexer and // grammar use.	WITHOUT_CLASSIFICATION	0.9998500241021049	WITHOUT_CLASSIFICATION	1.4997589789499146E-4	IMPLEMENTATION
// Enebo:  c can never be antrhign but '.' // Why did I put this here?	WITHOUT_CLASSIFICATION	0.9995868946815168	WITHOUT_CLASSIFICATION	4.1310531848318447E-4	IMPLEMENTATION
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9999397368187704	WITHOUT_CLASSIFICATION	6.026318122958503E-5	IMPLEMENTATION
//[C,C] //[C, boolean]	WITHOUT_CLASSIFICATION	0.9996085313143246	WITHOUT_CLASSIFICATION	3.9146868567538806E-4	IMPLEMENTATION
// Label for the start of the closure (used to implement redo) // Label for the end of the closure (used to implement retry)	WITHOUT_CLASSIFICATION	0.9967438497329348	WITHOUT_CLASSIFICATION	0.0032561502670651354	IMPLEMENTATION
// ignore; job was cancelled // FIXME: is this ok?	WITHOUT_CLASSIFICATION	0.999946597952352	WITHOUT_CLASSIFICATION	5.340204764799043E-5	IMPLEMENTATION
//                    // check arity //                    checkArity(mv, scope);	WITHOUT_CLASSIFICATION	0.9999222030387129	WITHOUT_CLASSIFICATION	7.779696128702234E-5	IMPLEMENTATION
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9998082259352012	WITHOUT_CLASSIFICATION	1.9177406479889273E-4	IMPLEMENTATION
// we take the first method found as our "n" method, since for any non-specific // arity they'll all error the same. If an actual "n" method is created, we // use that.	WITHOUT_CLASSIFICATION	0.999931936154102	WITHOUT_CLASSIFICATION	6.806384589791304E-5	IMPLEMENTATION
// Used by our duck-typification of Proc into interface types, to allow // coercing a simple proc into an interface parameter.	WITHOUT_CLASSIFICATION	0.9999649567103981	WITHOUT_CLASSIFICATION	3.504328960184239E-5	IMPLEMENTATION
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9998583696936867	WITHOUT_CLASSIFICATION	1.4163030631337593E-4	IMPLEMENTATION
// it's either as converted as we can make it via above logic or it's // not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9998627351895221	WITHOUT_CLASSIFICATION	1.372648104779652E-4	IMPLEMENTATION
// package scheme 2: separate module for each full package name, constructed  // from the camel-cased package segments: Java::JavaLang::Object, 	WITHOUT_CLASSIFICATION	0.9999543386684125	WITHOUT_CLASSIFICATION	4.566133158748718E-5	IMPLEMENTATION
// // construct the proxy method //	WITHOUT_CLASSIFICATION	0.9998560782468385	WITHOUT_CLASSIFICATION	1.439217531614938E-4	IMPLEMENTATION
// line 159 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9997679718010867	WITHOUT_CLASSIFICATION	2.320281989132759E-4	IMPLEMENTATION
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9998543623462427	WITHOUT_CLASSIFICATION	1.4563765375725244E-4	IMPLEMENTATION
// line 152 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9997679718010867	WITHOUT_CLASSIFICATION	2.320281989132759E-4	IMPLEMENTATION
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999296634048298	WITHOUT_CLASSIFICATION	7.03365951702023E-5	IMPLEMENTATION
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9998543623462427	WITHOUT_CLASSIFICATION	1.4563765375725244E-4	IMPLEMENTATION
// We only need to pass in current scope if we are evaluating as a block (which // is only done for evals).  We need to pass this in so that we can appropriately scope // down to captured scopes when we are parsing.	WITHOUT_CLASSIFICATION	0.9999353483336848	WITHOUT_CLASSIFICATION	6.465166631522386E-5	IMPLEMENTATION
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999332288868101	WITHOUT_CLASSIFICATION	6.677111318988378E-5	IMPLEMENTATION
// A place to store that special hiding space that bindings need to implement things like: // eval("a = 1", binding); eval("p a").  All binding instances must get access to this // hidden shared scope.  We store it here.  This will be null if no binding has yet // been called.	WITHOUT_CLASSIFICATION	0.9253716723260322	WITHOUT_CLASSIFICATION	0.07462832767396776	IMPLEMENTATION
// TODO: make it 16 now ? // MUST be power of 2!	WITHOUT_CLASSIFICATION	0.8900892447312482	WITHOUT_CLASSIFICATION	0.1099107552687518	IMPLEMENTATION
// check visibility // dup method	WITHOUT_CLASSIFICATION	0.9998681505486812	WITHOUT_CLASSIFICATION	1.3184945131878976E-4	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999382484714393	WITHOUT_CLASSIFICATION	6.175152856068427E-5	IMPLEMENTATION
// unsigned int, native // unsigned long, native	WITHOUT_CLASSIFICATION	0.9997396252034363	WITHOUT_CLASSIFICATION	2.603747965637677E-4	IMPLEMENTATION
//need padding //I'm fairly sure there is a library call to create a //string filled with a given char with a given length but I couldn't find it	WITHOUT_CLASSIFICATION	0.9999727668957442	WITHOUT_CLASSIFICATION	2.7233104255758813E-5	IMPLEMENTATION
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999648082549757	WITHOUT_CLASSIFICATION	3.519174502431527E-5	IMPLEMENTATION
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9998898589808793	WITHOUT_CLASSIFICATION	1.1014101912061978E-4	IMPLEMENTATION
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9998159571559657	WITHOUT_CLASSIFICATION	1.8404284403425412E-4	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999562737215949	WITHOUT_CLASSIFICATION	4.372627840504913E-5	IMPLEMENTATION
// Estimate the square root with the foremost 62 bits of squarD // bi and scale are a tandem	WITHOUT_CLASSIFICATION	0.9998094116789455	WITHOUT_CLASSIFICATION	1.9058832105437373E-4	IMPLEMENTATION
// captures // begin and end are used when not groups defined // source string	WITHOUT_CLASSIFICATION	0.9999112798457149	WITHOUT_CLASSIFICATION	8.872015428507796E-5	IMPLEMENTATION
// // INSTANCE VARIABLE RUBY METHODS //	WITHOUT_CLASSIFICATION	0.9997278512906937	WITHOUT_CLASSIFICATION	2.7214870930617277E-4	IMPLEMENTATION
// switch // while	WITHOUT_CLASSIFICATION	0.9995611599976525	WITHOUT_CLASSIFICATION	4.388400023475E-4	IMPLEMENTATION
// For nodes do not have their own scope so we pass null to indicate this. // 'For's are implemented as blocks in evaluation, but they have no scope so we // just deal with this lack of scope throughout its lifespan.  We should probably // change the way this works to get rid of multiple null checks.	WITHOUT_CLASSIFICATION	0.9980257775317095	WITHOUT_CLASSIFICATION	0.001974222468290451	IMPLEMENTATION
// This field is used during argument processing to avoid putting RubyArray // instances that are purely for utility purposes into ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999737464445809	WITHOUT_CLASSIFICATION	2.6253555419003047E-5	IMPLEMENTATION
// Parent container for this context (can be dynamic!!) // If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure // List of IR instructions for this method	WITHOUT_CLASSIFICATION	0.9999717817657336	WITHOUT_CLASSIFICATION	2.8218234266415128E-5	IMPLEMENTATION
// Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = false    //    beq(v1, false, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999582070911773	WITHOUT_CLASSIFICATION	4.179290882269873E-5	IMPLEMENTATION
// expected	WITHOUT_CLASSIFICATION	0.9998629665103113	WITHOUT_CLASSIFICATION	1.3703348968877873E-4	IMPLEMENTATION
// Do nothing	WITHOUT_CLASSIFICATION	0.9999560661204867	WITHOUT_CLASSIFICATION	4.3933879513189465E-5	IMPLEMENTATION
// constructor	WITHOUT_CLASSIFICATION	0.9997219580515267	WITHOUT_CLASSIFICATION	2.780419484732469E-4	IMPLEMENTATION
// If a line is followed by a blank line put // it back.	WITHOUT_CLASSIFICATION	0.9998160452945571	WITHOUT_CLASSIFICATION	1.8395470544290633E-4	IMPLEMENTATION
/* $>: default output handle */	WITHOUT_CLASSIFICATION	0.9998959221467878	WITHOUT_CLASSIFICATION	1.0407785321215253E-4	IMPLEMENTATION
// line 423	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 486	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// Signal uses sun.misc.* classes, this is not allowed // in the security-sensitive environments	WITHOUT_CLASSIFICATION	0.9999697752658065	WITHOUT_CLASSIFICATION	3.022473419346803E-5	IMPLEMENTATION
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9998569775514181	WITHOUT_CLASSIFICATION	1.4302244858193592E-4	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9998313243895081	WITHOUT_CLASSIFICATION	1.6867561049204984E-4	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9998313243895081	WITHOUT_CLASSIFICATION	1.6867561049204984E-4	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9996645502041756	WITHOUT_CLASSIFICATION	3.3544979582439405E-4	IMPLEMENTATION
// if there's no receiver, evaluate and pass in the superclass, or // pass self if it no superclass	WITHOUT_CLASSIFICATION	0.9999588129764635	WITHOUT_CLASSIFICATION	4.1187023536464956E-5	IMPLEMENTATION
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9997406397201756	WITHOUT_CLASSIFICATION	2.593602798243874E-4	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9224597745982892	WITHOUT_CLASSIFICATION	0.07754022540171074	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9224597745982892	WITHOUT_CLASSIFICATION	0.07754022540171074	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9224597745982892	WITHOUT_CLASSIFICATION	0.07754022540171074	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9224597745982892	WITHOUT_CLASSIFICATION	0.07754022540171074	IMPLEMENTATION
// Decrease value to hit upper range.  	WITHOUT_CLASSIFICATION	0.9997683121654277	WITHOUT_CLASSIFICATION	2.3168783457237364E-4	IMPLEMENTATION
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9996421288566297	WITHOUT_CLASSIFICATION	3.578711433701843E-4	IMPLEMENTATION
// "else" body	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
// done // done // done // Nothing to do for 1.8 // done // done // done // done // done // done // done? // done // done // done // done // done // done // done // done // done // done // done //            case DEFINEDNODE: return buildDefined(node, m); // Incomplete // done // done // done // done // done // done // done // done //            case ENSURENODE: return buildEnsureNode(node, m); // DEFERRED // done // done // done // done //            case FLIPNODE: return buildFlip(node, m); // SSS FIXME: What code generates this AST? // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done? // done // done // done // done // done // done -- partially //            case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); // DEFERRED SSS FIXME: What code generates this AST? // done //            case POSTEXENODE: return buildPostExe(node, m); // DEFERRED //            case PREEXENODE: return buildPreExe(node, m); // DEFERRED // done?? // done	WITHOUT_CLASSIFICATION	0.9999723994435706	WITHOUT_CLASSIFICATION	2.7600556429344034E-5	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9995793408161489	WITHOUT_CLASSIFICATION	4.2065918385119196E-4	IMPLEMENTATION
/* $+: string matches last paren. */	WITHOUT_CLASSIFICATION	0.9998503762916129	WITHOUT_CLASSIFICATION	1.4962370838714426E-4	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9996454740342443	WITHOUT_CLASSIFICATION	3.5452596575575907E-4	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9996454740342443	WITHOUT_CLASSIFICATION	3.5452596575575907E-4	IMPLEMENTATION
// Ruby code frequently uses a platform check to choose "NUL:" on windows // but since that check doesn't work well on JRuby, we help it out	WITHOUT_CLASSIFICATION	0.9998418115046244	WITHOUT_CLASSIFICATION	1.5818849537559647E-4	IMPLEMENTATION
/* 10! */	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
//            case RESCUENODE: return buildRescue(node, m); // DEFERRED //            case RETRYNODE: return buildRetry(node, m); // DEFERRED // done	WITHOUT_CLASSIFICATION	0.9999559938536081	WITHOUT_CLASSIFICATION	4.4006146391794674E-5	IMPLEMENTATION
// Is this instruction live or dead?  During optimization passes, if this instruction // causes no side-effects and the result of the instruction is not needed by anyone else, // we can remove this instruction altogether without affecting program correctness.	WITHOUT_CLASSIFICATION	0.995490236150687	WITHOUT_CLASSIFICATION	0.004509763849313076	IMPLEMENTATION
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9997825920088513	WITHOUT_CLASSIFICATION	2.1740799114876576E-4	IMPLEMENTATION
// first, iterate over all required args	WITHOUT_CLASSIFICATION	0.999792150192865	WITHOUT_CLASSIFICATION	2.078498071349162E-4	IMPLEMENTATION
// // Determine if the parameter might be passed as a 32bit int parameter. // This just applies to buffer/pointer types. //	WITHOUT_CLASSIFICATION	0.9999814269568047	WITHOUT_CLASSIFICATION	1.8573043195224385E-5	IMPLEMENTATION
//Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());	WITHOUT_CLASSIFICATION	0.9997675357674184	WITHOUT_CLASSIFICATION	2.3246423258151122E-4	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999296634048298	WITHOUT_CLASSIFICATION	7.03365951702023E-5	IMPLEMENTATION
// line 449	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 495	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// Management/monitoring	WITHOUT_CLASSIFICATION	0.9996132667873268	WITHOUT_CLASSIFICATION	3.867332126733266E-4	IMPLEMENTATION
// if we've found the last char of the separator, // and we've found at least as many characters as separator length, // and the last n characters of our buffer match the separator, we're done	WITHOUT_CLASSIFICATION	0.9999919508975923	WITHOUT_CLASSIFICATION	8.049102407721612E-6	IMPLEMENTATION
/* 14! */	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
// Process any set of annotations // No supported options	WITHOUT_CLASSIFICATION	0.9998021345809349	WITHOUT_CLASSIFICATION	1.9786541906512524E-4	IMPLEMENTATION
// add to the jitted methods set	WITHOUT_CLASSIFICATION	0.9999207726347605	WITHOUT_CLASSIFICATION	7.922736523947308E-5	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.9997297696530428	WITHOUT_CLASSIFICATION	2.702303469572206E-4	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.9997297696530428	WITHOUT_CLASSIFICATION	2.702303469572206E-4	IMPLEMENTATION
//            case SCLASSNODE: return buildSClass(node, m); // DEFERRED // done // done // done // done // done // done // done // done //            case UNDEFNODE: return buildUndef(node, m); // DEFERRED // done //            case VALIASNODE: return buildVAlias(node, m); // DEFERRED // done // done	WITHOUT_CLASSIFICATION	0.9999609205525124	WITHOUT_CLASSIFICATION	3.9079447487612045E-5	IMPLEMENTATION
// // Adding a post-invoke for the cb result serves to both keep it alive // until after the function returns, and allows us to clean up the native // trampoline early, instead of letting them accumulate until a GC run //	WITHOUT_CLASSIFICATION	0.9999827081119981	WITHOUT_CLASSIFICATION	1.7291888001957846E-5	IMPLEMENTATION
/* The Java method doesn't care what class it is, but we need to               know what to convert it to, so we use the object's own class.               If that doesn't help, we use String to force a call to the               object's "to_s" method. */	WITHOUT_CLASSIFICATION	0.9998304902197531	WITHOUT_CLASSIFICATION	1.6950978024684633E-4	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.9996830890022442	WITHOUT_CLASSIFICATION	3.1691099775581146E-4	IMPLEMENTATION
// Atomic integers for symbol and method IDs	WITHOUT_CLASSIFICATION	0.9996743572412846	WITHOUT_CLASSIFICATION	3.2564275871530343E-4	IMPLEMENTATION
/* 18! */	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9999129485386541	WITHOUT_CLASSIFICATION	8.705146134588916E-5	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9998384393036686	WITHOUT_CLASSIFICATION	1.6156069633138886E-4	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9998384393036686	WITHOUT_CLASSIFICATION	1.6156069633138886E-4	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9998384393036686	WITHOUT_CLASSIFICATION	1.6156069633138886E-4	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9998384393036686	WITHOUT_CLASSIFICATION	1.6156069633138886E-4	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999654665100706	WITHOUT_CLASSIFICATION	3.4533489929387197E-5	IMPLEMENTATION
/*      * This method takes as input a map of operands to their values, and outputs     * the result of this instruction.     *     * If the value map provides a value for any of the instruction's operands     * the expectation is that the operand will be replaced with the simplified value.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify.     *     * @param valueMap Mapping from operands to their simplified values     * @returns simplified result / output of this instruction     */	WITHOUT_CLASSIFICATION	0.9999904786341701	WITHOUT_CLASSIFICATION	9.521365829913442E-6	IMPLEMENTATION
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9997226443738888	WITHOUT_CLASSIFICATION	2.773556261112635E-4	IMPLEMENTATION
// An atomic long for generating DynamicMethod serial numbers	WITHOUT_CLASSIFICATION	0.9996900680818758	WITHOUT_CLASSIFICATION	3.0993191812423294E-4	IMPLEMENTATION
// MRI behavior: always check whether the file is writable // or not, even if we are to write 0 bytes.	WITHOUT_CLASSIFICATION	0.9999683996488586	WITHOUT_CLASSIFICATION	3.160035114138049E-5	IMPLEMENTATION
/* 22! */	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.9995437862639686	WITHOUT_CLASSIFICATION	4.562137360314479E-4	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9997297756650861	WITHOUT_CLASSIFICATION	2.702243349139045E-4	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9997297756650861	WITHOUT_CLASSIFICATION	2.702243349139045E-4	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9997297756650861	WITHOUT_CLASSIFICATION	2.702243349139045E-4	IMPLEMENTATION
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9997795396408093	WITHOUT_CLASSIFICATION	2.2046035919075818E-4	IMPLEMENTATION
// Build a new class and add it to the current scope (could be a script / module / class)	WITHOUT_CLASSIFICATION	0.9999795798889627	WITHOUT_CLASSIFICATION	2.042011103729597E-5	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999604164084627	WITHOUT_CLASSIFICATION	3.958359153728907E-5	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999604164084627	WITHOUT_CLASSIFICATION	3.958359153728907E-5	IMPLEMENTATION
// AF_INET	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
//////////////////////////////////////////////////////////////////////////// // Now we provide default impls of a number of signatures. For each arity, // we first generate a non-block version of the method, which just adds // NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can // potentially take a block, to only generate the block-receiving signature // and still avoid arg boxing. // // We then provide default implementations of each block-accepting method // that in turn call the IRubyObject[]+Block version of call. This then // finally falls back on the minimum implementation requirement for // dynamic method handles. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999994473148934	WITHOUT_CLASSIFICATION	5.526851066773265E-7	IMPLEMENTATION
// Because we implement Java interfaces now, we need a new === that's // aware of those additional "virtual" supertypes	WITHOUT_CLASSIFICATION	0.9908935102953289	WITHOUT_CLASSIFICATION	0.009106489704671067	IMPLEMENTATION
// BASE64	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
/* note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY         * when value is an integer less than 1.         * We treat 0 as a special case to avoid Domain error.         */	WITHOUT_CLASSIFICATION	0.9999275784510344	WITHOUT_CLASSIFICATION	7.242154896556545E-5	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.9996511989392158	WITHOUT_CLASSIFICATION	3.4880106078416447E-4	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9997779147031616	WITHOUT_CLASSIFICATION	2.220852968384268E-4	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9997779147031616	WITHOUT_CLASSIFICATION	2.220852968384268E-4	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9997676485748064	WITHOUT_CLASSIFICATION	2.3235142519357664E-4	IMPLEMENTATION
// SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode // We won't get here for argument receives!  So, buildDasgn is called for // assignments to block variables within a block.  As far as the IR is concerned, // this is just a simple copy	WITHOUT_CLASSIFICATION	0.9999767976552103	WITHOUT_CLASSIFICATION	2.3202344789743335E-5	IMPLEMENTATION
// getSimplifiedOperand returns the value of this operand, fully simplified // getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away // // The value is used during optimizations and propagated through the IR.  But, it is thrown away after that. // But, the operand form is used for constructing the compound objects represented by the operand. // // Example: a = [1], b = [3,4], c = [a,b], d = [2,c] //   -- getValue(c) = [1,[3,4]];     getSimplifiedOperand(c) = [1, b] //   -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] // // Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. // So, if contents of a or b is modified, the "simplified value"s of c and d also change!  This difference // is captured by these two methods.	WITHOUT_CLASSIFICATION	0.9999998967127157	WITHOUT_CLASSIFICATION	1.0328728427814646E-7	IMPLEMENTATION
//IRubyObject protocol = args[4];	WITHOUT_CLASSIFICATION	0.9997337473354962	WITHOUT_CLASSIFICATION	2.662526645037981E-4	IMPLEMENTATION
// promise to implement three to N with block	WITHOUT_CLASSIFICATION	0.9569296076418408	WITHOUT_CLASSIFICATION	0.04307039235815929	IMPLEMENTATION
// Ruby's OMG capture all source in a Hash feature // Add each line to buffer when encountering newline or EOF for first time.	WITHOUT_CLASSIFICATION	0.9999308260427795	WITHOUT_CLASSIFICATION	6.917395722046432E-5	IMPLEMENTATION
// carriage return	WITHOUT_CLASSIFICATION	0.999634071977562	WITHOUT_CLASSIFICATION	3.659280224380228E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9998813340612321	WITHOUT_CLASSIFICATION	1.1866593876788902E-4	IMPLEMENTATION
// String construction routines by NOT byte[] buffer and making the target String shared 	WITHOUT_CLASSIFICATION	0.9999594277664527	WITHOUT_CLASSIFICATION	4.057223354735569E-5	IMPLEMENTATION
// insert all nodes in sequence, hash them in the final instruction // KEY	WITHOUT_CLASSIFICATION	0.999924971270608	WITHOUT_CLASSIFICATION	7.502872939204116E-5	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999468205445952	WITHOUT_CLASSIFICATION	5.317945540474461E-5	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9996468587304841	WITHOUT_CLASSIFICATION	3.5314126951588336E-4	IMPLEMENTATION
// Basic Block id // CFG that this basic block belongs to // All basic blocks have a starting label // List of non-label instructions	WITHOUT_CLASSIFICATION	0.9998257614706355	WITHOUT_CLASSIFICATION	1.7423852936454271E-4	IMPLEMENTATION
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.99993579457428	WITHOUT_CLASSIFICATION	6.42054257200626E-5	IMPLEMENTATION
// For all uninitialized specific arities, we defer to the "n" method which // should raise appropriate error in all cases.	WITHOUT_CLASSIFICATION	0.9998893614901162	WITHOUT_CLASSIFICATION	1.1063850988389085E-4	IMPLEMENTATION
// implement is called to force this class to create stubs for all // methods in the given interface, so they'll show up in the list // of methods and be invocable without passing through method_missing	WITHOUT_CLASSIFICATION	0.9994872816033806	WITHOUT_CLASSIFICATION	5.127183966193374E-4	IMPLEMENTATION
// CASE IR instructions are dummy instructions  // -- all when/then clauses have been converted into if-then-else blocks	WITHOUT_CLASSIFICATION	0.9998990741846457	WITHOUT_CLASSIFICATION	1.0092581535433727E-4	IMPLEMENTATION
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9998712190902822	WITHOUT_CLASSIFICATION	1.287809097178001E-4	IMPLEMENTATION
// leave it null and fall back on our normal invocation logic	WITHOUT_CLASSIFICATION	0.9998044334811264	WITHOUT_CLASSIFICATION	1.9556651887355238E-4	IMPLEMENTATION
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999364309687555	WITHOUT_CLASSIFICATION	6.356903124442445E-5	IMPLEMENTATION
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9934798154984964	WITHOUT_CLASSIFICATION	0.00652018450150367	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9996997673483544	WITHOUT_CLASSIFICATION	3.0023265164557875E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9996997673483544	WITHOUT_CLASSIFICATION	3.0023265164557875E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9996997673483544	WITHOUT_CLASSIFICATION	3.0023265164557875E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9996997673483544	WITHOUT_CLASSIFICATION	3.0023265164557875E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9996997673483544	WITHOUT_CLASSIFICATION	3.0023265164557875E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9996997673483544	WITHOUT_CLASSIFICATION	3.0023265164557875E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9996997673483544	WITHOUT_CLASSIFICATION	3.0023265164557875E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9996997673483544	WITHOUT_CLASSIFICATION	3.0023265164557875E-4	IMPLEMENTATION
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999123540330522	WITHOUT_CLASSIFICATION	8.764596694776148E-5	IMPLEMENTATION
/* fall through */	WITHOUT_CLASSIFICATION	0.9996592897750697	WITHOUT_CLASSIFICATION	3.4071022493025745E-4	IMPLEMENTATION
// deal with case when "other" is not a string	WITHOUT_CLASSIFICATION	0.9998741601135991	WITHOUT_CLASSIFICATION	1.258398864009418E-4	IMPLEMENTATION
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999099199435524	WITHOUT_CLASSIFICATION	9.008005644762468E-5	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9998655493461495	WITHOUT_CLASSIFICATION	1.344506538505482E-4	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9998655493461495	WITHOUT_CLASSIFICATION	1.344506538505482E-4	IMPLEMENTATION
// store argument count information into scope	WITHOUT_CLASSIFICATION	0.99991743929313	WITHOUT_CLASSIFICATION	8.256070686996944E-5	IMPLEMENTATION
// the load method is used for loading as a top-level script, and prepares appropriate scoping around the code	WITHOUT_CLASSIFICATION	0.999884410244999	WITHOUT_CLASSIFICATION	1.1558975500103761E-4	IMPLEMENTATION
// First, build assignments for specific named arguments	WITHOUT_CLASSIFICATION	0.9998536309143469	WITHOUT_CLASSIFICATION	1.463690856530816E-4	IMPLEMENTATION
//        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } //        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }	WITHOUT_CLASSIFICATION	0.999948197539114	WITHOUT_CLASSIFICATION	5.180246088601253E-5	IMPLEMENTATION
// get current context	WITHOUT_CLASSIFICATION	0.9997439961210021	WITHOUT_CLASSIFICATION	2.560038789979283E-4	IMPLEMENTATION
// octal constant	WITHOUT_CLASSIFICATION	0.9995820644589355	WITHOUT_CLASSIFICATION	4.1793554106445325E-4	IMPLEMENTATION
// read	WITHOUT_CLASSIFICATION	0.9968991763846253	WITHOUT_CLASSIFICATION	0.0031008236153746266	IMPLEMENTATION
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9994665844207326	WITHOUT_CLASSIFICATION	5.334155792673226E-4	IMPLEMENTATION
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9997426593550542	WITHOUT_CLASSIFICATION	2.5734064494573343E-4	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9998791987788529	WITHOUT_CLASSIFICATION	1.2080122114704189E-4	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9998791987788529	WITHOUT_CLASSIFICATION	1.2080122114704189E-4	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9998791987788529	WITHOUT_CLASSIFICATION	1.2080122114704189E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9995294327026559	WITHOUT_CLASSIFICATION	4.705672973441494E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9995294327026559	WITHOUT_CLASSIFICATION	4.705672973441494E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9995294327026559	WITHOUT_CLASSIFICATION	4.705672973441494E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9995294327026559	WITHOUT_CLASSIFICATION	4.705672973441494E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9995294327026559	WITHOUT_CLASSIFICATION	4.705672973441494E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9995294327026559	WITHOUT_CLASSIFICATION	4.705672973441494E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9995294327026559	WITHOUT_CLASSIFICATION	4.705672973441494E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9995294327026559	WITHOUT_CLASSIFICATION	4.705672973441494E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9995294327026559	WITHOUT_CLASSIFICATION	4.705672973441494E-4	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.999968753536101	WITHOUT_CLASSIFICATION	3.124646389896432E-5	IMPLEMENTATION
// at end	WITHOUT_CLASSIFICATION	0.9965718734919222	WITHOUT_CLASSIFICATION	0.0034281265080777727	IMPLEMENTATION
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9997610928490154	WITHOUT_CLASSIFICATION	2.3890715098464133E-4	IMPLEMENTATION
// save blocking state	WITHOUT_CLASSIFICATION	0.9997064917881585	WITHOUT_CLASSIFICATION	2.935082118414404E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9995294327026559	WITHOUT_CLASSIFICATION	4.705672973441494E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9995294327026559	WITHOUT_CLASSIFICATION	4.705672973441494E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9995294327026559	WITHOUT_CLASSIFICATION	4.705672973441494E-4	IMPLEMENTATION
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9996173745503186	WITHOUT_CLASSIFICATION	3.826254496813892E-4	IMPLEMENTATION
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9998332416513354	WITHOUT_CLASSIFICATION	1.667583486646512E-4	IMPLEMENTATION
// fall back on empty env when security disallows environment var access (like in an applet)	WITHOUT_CLASSIFICATION	0.999824145331477	WITHOUT_CLASSIFICATION	1.7585466852289343E-4	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.99951453549819	WITHOUT_CLASSIFICATION	4.8546450180990067E-4	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.99951453549819	WITHOUT_CLASSIFICATION	4.8546450180990067E-4	IMPLEMENTATION
// load null block	WITHOUT_CLASSIFICATION	0.9996302148885788	WITHOUT_CLASSIFICATION	3.6978511142114756E-4	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999610096141709	WITHOUT_CLASSIFICATION	3.899038582904509E-5	IMPLEMENTATION
// nothing else to here - the module version will be // included in the class.	WITHOUT_CLASSIFICATION	0.9999836600073518	WITHOUT_CLASSIFICATION	1.6339992648174542E-5	IMPLEMENTATION
// JRUBY-1000, fail early when attempting to subclass a final Java class; // solved here by adding an exception-throwing "inherited"	WITHOUT_CLASSIFICATION	0.9998460170052725	WITHOUT_CLASSIFICATION	1.539829947274879E-4	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.999508195400188	WITHOUT_CLASSIFICATION	4.91804599811958E-4	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.999508195400188	WITHOUT_CLASSIFICATION	4.91804599811958E-4	IMPLEMENTATION
// Translate ret = (a || b) to ret = (a ? true : b) as follows //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = true //    beq(v1, true, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999585222080984	WITHOUT_CLASSIFICATION	4.147779190153296E-5	IMPLEMENTATION
// Initial precision is that of double numbers 2^63/2 ~ 4E18 // 63-1 an even number of number bits // precision seems 16 to 18 digits	WITHOUT_CLASSIFICATION	0.9999505165098084	WITHOUT_CLASSIFICATION	4.9483490191598196E-5	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9997804630990557	WITHOUT_CLASSIFICATION	2.19536900944256E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.9997010295420508	WITHOUT_CLASSIFICATION	2.989704579493141E-4	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.9997774275463573	WITHOUT_CLASSIFICATION	2.2257245364275016E-4	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.9997774275463573	WITHOUT_CLASSIFICATION	2.2257245364275016E-4	IMPLEMENTATION
// check arity	WITHOUT_CLASSIFICATION	0.9996718884158281	WITHOUT_CLASSIFICATION	3.281115841717883E-4	IMPLEMENTATION
// check arity	WITHOUT_CLASSIFICATION	0.9996718884158281	WITHOUT_CLASSIFICATION	3.281115841717883E-4	IMPLEMENTATION
// create the class	WITHOUT_CLASSIFICATION	0.9998943158982062	WITHOUT_CLASSIFICATION	1.0568410179381288E-4	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999310478452869	WITHOUT_CLASSIFICATION	6.895215471314847E-5	IMPLEMENTATION
// No hex value after the 'x'.	WITHOUT_CLASSIFICATION	0.9997218604123583	WITHOUT_CLASSIFICATION	2.781395876416962E-4	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9995793788471994	WITHOUT_CLASSIFICATION	4.2062115280061324E-4	IMPLEMENTATION
// Let m be the exact digits precision in an earlier! loop	WITHOUT_CLASSIFICATION	0.9998262015923637	WITHOUT_CLASSIFICATION	1.7379840763627667E-4	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.999849949313585	WITHOUT_CLASSIFICATION	1.500506864151331E-4	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9964676212558803	WITHOUT_CLASSIFICATION	0.0035323787441197373	IMPLEMENTATION
// Label for the start of the method // Label for the end of the method	WITHOUT_CLASSIFICATION	0.9999770549628662	WITHOUT_CLASSIFICATION	2.2945037133853075E-5	IMPLEMENTATION
// comparisons & checks // checks if the operand is non-null and non-false // EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...	WITHOUT_CLASSIFICATION	0.9999507792454089	WITHOUT_CLASSIFICATION	4.922075459119805E-5	IMPLEMENTATION
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9992402938704681	WITHOUT_CLASSIFICATION	7.597061295319769E-4	IMPLEMENTATION
// all done with lookup attempts, release monitor	WITHOUT_CLASSIFICATION	0.9997836934882138	WITHOUT_CLASSIFICATION	2.1630651178610504E-4	IMPLEMENTATION
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999061683438765	WITHOUT_CLASSIFICATION	9.383165612362692E-5	IMPLEMENTATION
// Create list of interface names to proxy (and make sure they really are interfaces) // Also build a hashcode from all classes to use for retrieving previously-created impl	WITHOUT_CLASSIFICATION	0.9999942482885491	WITHOUT_CLASSIFICATION	5.751711450954692E-6	IMPLEMENTATION
// Construct local variables based on parameter names passed in	WITHOUT_CLASSIFICATION	0.9999341976338995	WITHOUT_CLASSIFICATION	6.580236610055652E-5	IMPLEMENTATION
// Value of "TZ" property is of a bit different format, // which confuses the Java's TimeZone.getTimeZone(id) method, // and so, we need to convert it.	WITHOUT_CLASSIFICATION	0.999907603354365	WITHOUT_CLASSIFICATION	9.239664563504803E-5	IMPLEMENTATION
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9997760938835724	WITHOUT_CLASSIFICATION	2.239061164275799E-4	IMPLEMENTATION
// ensure the object is associated with the wrapper we found it in, // so that if it comes back we don't re-wrap it	WITHOUT_CLASSIFICATION	0.9999314317296356	WITHOUT_CLASSIFICATION	6.856827036438546E-5	IMPLEMENTATION
// return sqrt(squarD) with precision of rootMC	WITHOUT_CLASSIFICATION	0.999933737685432	WITHOUT_CLASSIFICATION	6.626231456805133E-5	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999562737215949	WITHOUT_CLASSIFICATION	4.372627840504913E-5	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
// Get a new label using the provided label prefix	WITHOUT_CLASSIFICATION	0.9999055783208355	WITHOUT_CLASSIFICATION	9.442167916448883E-5	IMPLEMENTATION
// normal exit, perform finally and return	WITHOUT_CLASSIFICATION	0.9998153198888755	WITHOUT_CLASSIFICATION	1.846801111245514E-4	IMPLEMENTATION
// coerce arguments	WITHOUT_CLASSIFICATION	0.9996410257833065	WITHOUT_CLASSIFICATION	3.5897421669352106E-4	IMPLEMENTATION
// 0.0 is ok // float range // inverted float range? // NaN // +infinity // -infinity	WITHOUT_CLASSIFICATION	0.9996915676844174	WITHOUT_CLASSIFICATION	3.0843231558259785E-4	IMPLEMENTATION
/* expected */	WITHOUT_CLASSIFICATION	0.9997722335891487	WITHOUT_CLASSIFICATION	2.2776641085126313E-4	IMPLEMENTATION
// set this class's method names in var @__java_ovrd_methods if this // is the new class; otherwise, get method names from there if this is // a proxy superclass.	WITHOUT_CLASSIFICATION	0.9999768012755319	WITHOUT_CLASSIFICATION	2.319872446817136E-5	IMPLEMENTATION
/* ignore backslashed spaces in %w */	WITHOUT_CLASSIFICATION	0.9998337276577303	WITHOUT_CLASSIFICATION	1.662723422697793E-4	IMPLEMENTATION
// Invert the sign, since TZ format and Java format // use opposite signs, sigh... Also, Java API requires // the sign to be always present, be it "+" or "-".	WITHOUT_CLASSIFICATION	0.9998164834552469	WITHOUT_CLASSIFICATION	1.835165447530756E-4	IMPLEMENTATION
// no binding given, use 0 for both	WITHOUT_CLASSIFICATION	0.999757915218043	WITHOUT_CLASSIFICATION	2.420847819570012E-4	IMPLEMENTATION
// <=> may return nil in many circumstances, e.g. 3 <=> NaN        	WITHOUT_CLASSIFICATION	0.9998746426834398	WITHOUT_CLASSIFICATION	1.2535731656013798E-4	IMPLEMENTATION
// use numbered access method	WITHOUT_CLASSIFICATION	0.9996656596629444	WITHOUT_CLASSIFICATION	3.3434033705562796E-4	IMPLEMENTATION
// Always use "GMT" since that's required by Java API.	WITHOUT_CLASSIFICATION	0.999762544686095	WITHOUT_CLASSIFICATION	2.3745531390486998E-4	IMPLEMENTATION
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999716570595902	WITHOUT_CLASSIFICATION	2.8342940409802853E-5	IMPLEMENTATION
// The dataStruct is a place where custom information can be // contained for core implementations that doesn't necessarily // want to go to the trouble of creating a subclass of // RubyObject. The OpenSSL implementation uses this heavily to // save holder objects containing Java cryptography objects. // Java integration uses this to store the Java object ref. //protected transient Object dataStruct;	WITHOUT_CLASSIFICATION	0.9999698602905245	WITHOUT_CLASSIFICATION	3.0139709475645338E-5	IMPLEMENTATION
// Remaining arguments are for the script itself	WITHOUT_CLASSIFICATION	0.9999257348779428	WITHOUT_CLASSIFICATION	7.426512205718017E-5	IMPLEMENTATION
// arg grouping, use slower arg walking logic	WITHOUT_CLASSIFICATION	0.999733397983601	WITHOUT_CLASSIFICATION	2.6660201639898184E-4	IMPLEMENTATION
// build scope names string	WITHOUT_CLASSIFICATION	0.9997822326498645	WITHOUT_CLASSIFICATION	2.177673501354388E-4	IMPLEMENTATION
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999890341522696	WITHOUT_CLASSIFICATION	1.0965847730494439E-5	IMPLEMENTATION
// Here we create an "anonymous" exception type used for unrolling the stack. // MRI creates a new one for *every call* to timeout, which can be costly. // We opt to use a single exception type for all cases to avoid this overhead.	WITHOUT_CLASSIFICATION	0.99997001684355	WITHOUT_CLASSIFICATION	2.998315644998768E-5	IMPLEMENTATION
// finally	WITHOUT_CLASSIFICATION	0.9968918846646807	WITHOUT_CLASSIFICATION	0.003108115335319334	IMPLEMENTATION
// MRI behavior: With TZ equal to "GMT" or "UTC", Time.now // is *NOT* considered as a proper GMT/UTC time: //   ENV['TZ']="GMT" //   Time.now.gmt? ==> false //   ENV['TZ']="UTC" //   Time.now.utc? ==> false // Hence, we need to adjust for that.	WITHOUT_CLASSIFICATION	0.9996842827562099	WITHOUT_CLASSIFICATION	3.157172437900997E-4	IMPLEMENTATION
// ?l  | boolean | True if file1 exists and is a symbolic link	WITHOUT_CLASSIFICATION	0.999820591146842	WITHOUT_CLASSIFICATION	1.7940885315812852E-4	IMPLEMENTATION
// This try/catch is to allow failing over to the "commands" logic // when running from within a jruby-complete jar file, which has // jruby.home = a jar file URL that does not resolve correctly with // JRubyFile.create.	WITHOUT_CLASSIFICATION	0.9999733018043501	WITHOUT_CLASSIFICATION	2.6698195649917495E-5	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9995927934750855	WITHOUT_CLASSIFICATION	4.0720652491458876E-4	IMPLEMENTATION
// specific arity	WITHOUT_CLASSIFICATION	0.9995762210533455	WITHOUT_CLASSIFICATION	4.237789466544906E-4	IMPLEMENTATION
// In the case of two arguments, MRI will discard the portion of // the first argument after a decimal point (i.e., "floor"). // However in the case of a single argument, any portion after // the decimal point is honored.	WITHOUT_CLASSIFICATION	0.9999892914313904	WITHOUT_CLASSIFICATION	1.0708568609510618E-5	IMPLEMENTATION
// ?w  | boolean | True if file1 exists and is writable by effective uid/gid	WITHOUT_CLASSIFICATION	0.9998350333929833	WITHOUT_CLASSIFICATION	1.6496660701672487E-4	IMPLEMENTATION
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9997294681574643	WITHOUT_CLASSIFICATION	2.7053184253563643E-4	IMPLEMENTATION
/*    @JRubyMethod    public IRubyObject to_proc() {        return RubyProc.newProc(getRuntime(),                                CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()),                                Block.Type.PROC);    }    */	WITHOUT_CLASSIFICATION	0.9999678477130998	WITHOUT_CLASSIFICATION	3.215228690033649E-5	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9996100953012782	WITHOUT_CLASSIFICATION	3.8990469872177483E-4	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9996100953012782	WITHOUT_CLASSIFICATION	3.8990469872177483E-4	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.999978663714424	WITHOUT_CLASSIFICATION	2.1336285576001296E-5	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.999978663714424	WITHOUT_CLASSIFICATION	2.1336285576001296E-5	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9998909469463342	WITHOUT_CLASSIFICATION	1.0905305366573113E-4	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9998909469463342	WITHOUT_CLASSIFICATION	1.0905305366573113E-4	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9998526888301756	WITHOUT_CLASSIFICATION	1.4731116982433798E-4	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9998526888301756	WITHOUT_CLASSIFICATION	1.4731116982433798E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9995382301117518	WITHOUT_CLASSIFICATION	4.6176988824829203E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9995382301117518	WITHOUT_CLASSIFICATION	4.6176988824829203E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9995382301117518	WITHOUT_CLASSIFICATION	4.6176988824829203E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9995382301117518	WITHOUT_CLASSIFICATION	4.6176988824829203E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9995382301117518	WITHOUT_CLASSIFICATION	4.6176988824829203E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9995382301117518	WITHOUT_CLASSIFICATION	4.6176988824829203E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9995382301117518	WITHOUT_CLASSIFICATION	4.6176988824829203E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9995382301117518	WITHOUT_CLASSIFICATION	4.6176988824829203E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9995382301117518	WITHOUT_CLASSIFICATION	4.6176988824829203E-4	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9998352100793568	WITHOUT_CLASSIFICATION	1.647899206431961E-4	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9998352100793568	WITHOUT_CLASSIFICATION	1.647899206431961E-4	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9998352100793568	WITHOUT_CLASSIFICATION	1.647899206431961E-4	IMPLEMENTATION
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9998481971330204	WITHOUT_CLASSIFICATION	1.5180286697965745E-4	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9998839370918579	WITHOUT_CLASSIFICATION	1.1606290814215116E-4	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9998839370918579	WITHOUT_CLASSIFICATION	1.1606290814215116E-4	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9998839370918579	WITHOUT_CLASSIFICATION	1.1606290814215116E-4	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9998355151952543	WITHOUT_CLASSIFICATION	1.644848047458178E-4	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9998355151952543	WITHOUT_CLASSIFICATION	1.644848047458178E-4	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9998355151952543	WITHOUT_CLASSIFICATION	1.644848047458178E-4	IMPLEMENTATION
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9997280603385535	WITHOUT_CLASSIFICATION	2.7193966144642895E-4	IMPLEMENTATION
// backspace	WITHOUT_CLASSIFICATION	0.999552383758989	WITHOUT_CLASSIFICATION	4.4761624101092803E-4	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.999511677373098	WITHOUT_CLASSIFICATION	4.883226269019527E-4	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.999511677373098	WITHOUT_CLASSIFICATION	4.883226269019527E-4	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.999511677373098	WITHOUT_CLASSIFICATION	4.883226269019527E-4	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.999511677373098	WITHOUT_CLASSIFICATION	4.883226269019527E-4	IMPLEMENTATION
/* package-private */	WITHOUT_CLASSIFICATION	0.9996812464956075	WITHOUT_CLASSIFICATION	3.1875350439249274E-4	IMPLEMENTATION
// fall through	WITHOUT_CLASSIFICATION	0.9997042023205693	WITHOUT_CLASSIFICATION	2.95797679430709E-4	IMPLEMENTATION
// fall through	WITHOUT_CLASSIFICATION	0.9997042023205693	WITHOUT_CLASSIFICATION	2.95797679430709E-4	IMPLEMENTATION
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9996594456281357	WITHOUT_CLASSIFICATION	3.405543718643003E-4	IMPLEMENTATION
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999892721722653	WITHOUT_CLASSIFICATION	1.0727827734655556E-5	IMPLEMENTATION
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999892721722653	WITHOUT_CLASSIFICATION	1.0727827734655556E-5	IMPLEMENTATION
/**      * Nested class whose instances act as thunks reacting to to_str method     * called from (Exception#to_str, Exception#message)     * MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!",     * to_str implementation: "name_err_mesg_to_str"     *     * TODO: this class should not be lookupable     */	WITHOUT_CLASSIFICATION	0.7112814103362568	IMPLEMENTATION	0.28871858966374325	WITHOUT_CLASSIFICATION
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9997861847163818	WITHOUT_CLASSIFICATION	2.1381528361822435E-4	IMPLEMENTATION
// The name of this source (e.g. a filename: foo.rb)	WITHOUT_CLASSIFICATION	0.9999462431794399	WITHOUT_CLASSIFICATION	5.375682056011796E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9996295014685571	WITHOUT_CLASSIFICATION	3.704985314428011E-4	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9996295014685571	WITHOUT_CLASSIFICATION	3.704985314428011E-4	IMPLEMENTATION
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9999698161750967	WITHOUT_CLASSIFICATION	3.0183824903329575E-5	IMPLEMENTATION
// We yield here to hopefully permit the target thread to schedule // MRI immediately schedules it, so this is close but not exact	WITHOUT_CLASSIFICATION	0.9999542608946939	WITHOUT_CLASSIFICATION	4.5739105306102716E-5	IMPLEMENTATION
// note that addMethod now does its own put, so any change made to // functionality here should be made there as well 	WITHOUT_CLASSIFICATION	0.9995477257670109	WITHOUT_CLASSIFICATION	4.522742329890921E-4	IMPLEMENTATION
/* Currently dead code, but useful when we figure out how to actually perform translit.    private static boolean isTranslit(String encoding) {        return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false;    }*/	WITHOUT_CLASSIFICATION	0.9999618146295723	WITHOUT_CLASSIFICATION	3.8185370427676544E-5	IMPLEMENTATION
// empirically it appears that to_ary coersions always return array or nil, so this // should always be an array by now.	WITHOUT_CLASSIFICATION	0.9999219667235947	WITHOUT_CLASSIFICATION	7.803327640535615E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9996295014685571	WITHOUT_CLASSIFICATION	3.704985314428011E-4	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9996295014685571	WITHOUT_CLASSIFICATION	3.704985314428011E-4	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9996295014685571	WITHOUT_CLASSIFICATION	3.704985314428011E-4	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9996295014685571	WITHOUT_CLASSIFICATION	3.704985314428011E-4	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9996295014685571	WITHOUT_CLASSIFICATION	3.704985314428011E-4	IMPLEMENTATION
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9996760281620306	WITHOUT_CLASSIFICATION	3.2397183796950834E-4	IMPLEMENTATION
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9996355770432188	WITHOUT_CLASSIFICATION	3.6442295678114795E-4	IMPLEMENTATION
// if it's an inner class and it's not public, we can't access it; // skip population of declared elements	WITHOUT_CLASSIFICATION	0.9999677116176571	WITHOUT_CLASSIFICATION	3.2288382342970665E-5	IMPLEMENTATION
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9997577022391209	WITHOUT_CLASSIFICATION	2.4229776087912903E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9986246362208161	WITHOUT_CLASSIFICATION	0.0013753637791839022	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9986246362208161	WITHOUT_CLASSIFICATION	0.0013753637791839022	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9986246362208161	WITHOUT_CLASSIFICATION	0.0013753637791839022	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9986246362208161	WITHOUT_CLASSIFICATION	0.0013753637791839022	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9986246362208161	WITHOUT_CLASSIFICATION	0.0013753637791839022	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9986246362208161	WITHOUT_CLASSIFICATION	0.0013753637791839022	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9986246362208161	WITHOUT_CLASSIFICATION	0.0013753637791839022	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9986246362208161	WITHOUT_CLASSIFICATION	0.0013753637791839022	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9986246362208161	WITHOUT_CLASSIFICATION	0.0013753637791839022	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9986246362208161	WITHOUT_CLASSIFICATION	0.0013753637791839022	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9986246362208161	WITHOUT_CLASSIFICATION	0.0013753637791839022	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9986246362208161	WITHOUT_CLASSIFICATION	0.0013753637791839022	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9986246362208161	WITHOUT_CLASSIFICATION	0.0013753637791839022	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9986246362208161	WITHOUT_CLASSIFICATION	0.0013753637791839022	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9986246362208161	WITHOUT_CLASSIFICATION	0.0013753637791839022	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9986246362208161	WITHOUT_CLASSIFICATION	0.0013753637791839022	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9986246362208161	WITHOUT_CLASSIFICATION	0.0013753637791839022	IMPLEMENTATION
// MRI behavior on Windows: it treats '/' as a root of // a current drive (but only if SINGLE slash is present!): // E.g., if current work directory is // 'D:/home/directory', then '/' means 'D:/'. // // Basically, '/path' is treated as a *RELATIVE* path, // relative to the current drive. '//path' is treated // as absolute one.	WITHOUT_CLASSIFICATION	0.9999806476669022	WITHOUT_CLASSIFICATION	1.9352333097793645E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9986246362208161	WITHOUT_CLASSIFICATION	0.0013753637791839022	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9986246362208161	WITHOUT_CLASSIFICATION	0.0013753637791839022	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9986246362208161	WITHOUT_CLASSIFICATION	0.0013753637791839022	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9986246362208161	WITHOUT_CLASSIFICATION	0.0013753637791839022	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9986246362208161	WITHOUT_CLASSIFICATION	0.0013753637791839022	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9986246362208161	WITHOUT_CLASSIFICATION	0.0013753637791839022	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9986246362208161	WITHOUT_CLASSIFICATION	0.0013753637791839022	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9986246362208161	WITHOUT_CLASSIFICATION	0.0013753637791839022	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9986246362208161	WITHOUT_CLASSIFICATION	0.0013753637791839022	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9986246362208161	WITHOUT_CLASSIFICATION	0.0013753637791839022	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9986246362208161	WITHOUT_CLASSIFICATION	0.0013753637791839022	IMPLEMENTATION
// This is needed when the enclosing class or module is a singleton. // In that case, we generated a name such as null::Foo, which broke  // Marshalling, among others. The correct thing to do in this situation  // is to insert the generate the name of form #<Class:01xasdfasd> if  // it's a singleton module/class, which this code accomplishes.	WITHOUT_CLASSIFICATION	0.9999884776156935	WITHOUT_CLASSIFICATION	1.1522384306363197E-5	IMPLEMENTATION
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9999747186318445	WITHOUT_CLASSIFICATION	2.528136815557988E-5	IMPLEMENTATION
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.999922056626447	WITHOUT_CLASSIFICATION	7.794337355297368E-5	IMPLEMENTATION
// get "self"	WITHOUT_CLASSIFICATION	0.9996292573457868	WITHOUT_CLASSIFICATION	3.7074265421320756E-4	IMPLEMENTATION
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9997608871495807	WITHOUT_CLASSIFICATION	2.3911285041933048E-4	IMPLEMENTATION
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9998082259352012	WITHOUT_CLASSIFICATION	1.9177406479889273E-4	IMPLEMENTATION
// only public methods	WITHOUT_CLASSIFICATION	0.9997634093946242	WITHOUT_CLASSIFICATION	2.3659060537573713E-4	IMPLEMENTATION
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999163900566022	WITHOUT_CLASSIFICATION	8.36099433979245E-5	IMPLEMENTATION
// First try to use drive letter from supplied dir value, // then try current work dir.	WITHOUT_CLASSIFICATION	0.9999155350392347	WITHOUT_CLASSIFICATION	8.446496076530372E-5	IMPLEMENTATION
// JRUBY-2435: Aliasing eval and other "special" methods should display a warning // We warn because we treat certain method names as "special" for purposes of // optimization. Hopefully this will be enough to convince people not to alias // them.	WITHOUT_CLASSIFICATION	0.9998459626665901	WITHOUT_CLASSIFICATION	1.5403733340992178E-4	IMPLEMENTATION
// generate a real method signature for the method, with to/from coercions	WITHOUT_CLASSIFICATION	0.9998876526637656	WITHOUT_CLASSIFICATION	1.123473362345054E-4	IMPLEMENTATION
// block argument to the method // closure present // class present // method table mutations, def, defs, undef, alias // likely call to eval // makes calls that are aware of the frame // makes calls that are aware of the frame's self // makes calls that are aware of the frame's visibility // makes calls that are aware of the frame's block // makes calls that are aware of the frame's name // makes calls that set or get backref // makes calls that set or get lastline // makes calls that are aware of the frame's class // optional arguments to the method // rest arg to the method // makes calls that are aware of the scope // makes a zero-argument super call // accesses or sets constants // accesses or sets class variables // makes normal super call // contains a retry	WITHOUT_CLASSIFICATION	0.9999940375292007	WITHOUT_CLASSIFICATION	5.96247079932375E-6	IMPLEMENTATION
// // Add aliases in Type::*, NativeType::* and FFI::TYPE_* //	WITHOUT_CLASSIFICATION	0.9998214488534122	WITHOUT_CLASSIFICATION	1.7855114658778482E-4	IMPLEMENTATION
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9998971574498282	WITHOUT_CLASSIFICATION	1.0284255017180258E-4	IMPLEMENTATION
// double-testing args.length here, but it avoids duplicating the proc-setup code in two places	WITHOUT_CLASSIFICATION	0.9998908467840746	WITHOUT_CLASSIFICATION	1.0915321592541904E-4	IMPLEMENTATION
// indices for temp values	WITHOUT_CLASSIFICATION	0.9997536615155985	WITHOUT_CLASSIFICATION	2.463384844015391E-4	IMPLEMENTATION
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9998017177122515	WITHOUT_CLASSIFICATION	1.9828228774859436E-4	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9997530264985691	WITHOUT_CLASSIFICATION	2.4697350143085424E-4	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9997530264985691	WITHOUT_CLASSIFICATION	2.4697350143085424E-4	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9997530264985691	WITHOUT_CLASSIFICATION	2.4697350143085424E-4	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9997530264985691	WITHOUT_CLASSIFICATION	2.4697350143085424E-4	IMPLEMENTATION
// snapshot of contents of directory // current position in directory	WITHOUT_CLASSIFICATION	0.9999746510515503	WITHOUT_CLASSIFICATION	2.534894844981433E-5	IMPLEMENTATION
// Exclusive locks in Java require the channel to be writable, otherwise // an exception is thrown (terminating JRuby execution). // But flock behavior of MRI is that it allows // exclusive locks even on non-writable file. So we convert exclusive // lock to shared lock if the channel is not writable, to better match // the MRI behavior.	WITHOUT_CLASSIFICATION	0.999984009595032	WITHOUT_CLASSIFICATION	1.599040496796233E-5	IMPLEMENTATION
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9998043343448458	WITHOUT_CLASSIFICATION	1.9566565515415267E-4	IMPLEMENTATION
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9998043343448458	WITHOUT_CLASSIFICATION	1.9566565515415267E-4	IMPLEMENTATION
// set self to the class	WITHOUT_CLASSIFICATION	0.9998845376942346	WITHOUT_CLASSIFICATION	1.154623057654044E-4	IMPLEMENTATION
/* ---------- Public fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999188077852641	WITHOUT_CLASSIFICATION	8.119221473590133E-5	IMPLEMENTATION
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9998028071969653	WITHOUT_CLASSIFICATION	1.9719280303468164E-4	IMPLEMENTATION
// zero args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999453628972784	WITHOUT_CLASSIFICATION	5.4637102721585E-5	IMPLEMENTATION
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999126338134077	WITHOUT_CLASSIFICATION	8.736618659230879E-5	IMPLEMENTATION
// Store each line into this list if not null.	WITHOUT_CLASSIFICATION	0.9997486228681616	WITHOUT_CLASSIFICATION	2.513771318384718E-4	IMPLEMENTATION
// Portion of line right after beginning marker	WITHOUT_CLASSIFICATION	0.9998112630167739	WITHOUT_CLASSIFICATION	1.887369832260428E-4	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999389029655558	WITHOUT_CLASSIFICATION	6.109703444425244E-5	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999389029655558	WITHOUT_CLASSIFICATION	6.109703444425244E-5	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999389029655558	WITHOUT_CLASSIFICATION	6.109703444425244E-5	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999389029655558	WITHOUT_CLASSIFICATION	6.109703444425244E-5	IMPLEMENTATION
// If an IO exception occurs (something odd, but possible) // A directory may return null.	WITHOUT_CLASSIFICATION	0.9999595553223749	WITHOUT_CLASSIFICATION	4.044467762511843E-5	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.999981108073899	WITHOUT_CLASSIFICATION	1.8891926101052907E-5	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.999981108073899	WITHOUT_CLASSIFICATION	1.8891926101052907E-5	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.999981108073899	WITHOUT_CLASSIFICATION	1.8891926101052907E-5	IMPLEMENTATION
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9997629325816909	WITHOUT_CLASSIFICATION	2.370674183090299E-4	IMPLEMENTATION
// finally with no exception	WITHOUT_CLASSIFICATION	0.9997587577643552	WITHOUT_CLASSIFICATION	2.4124223564475565E-4	IMPLEMENTATION
// Now, for all variables used by 'i' mark them live before 'i'	WITHOUT_CLASSIFICATION	0.9998254952241541	WITHOUT_CLASSIFICATION	1.7450477584588487E-4	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9224597745982892	WITHOUT_CLASSIFICATION	0.07754022540171074	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9224597745982892	WITHOUT_CLASSIFICATION	0.07754022540171074	IMPLEMENTATION
/* The counting of slashes that follows is simply a way to adhere to          * Ruby's UNC (or something) compatibility. When Ruby's expand_path is          * called with "//foo//bar" it will return "//foo/bar". JRuby uses          * java.io.File, and hence returns "/foo/bar". In order to retain          * java.io.File in the lower layers and provide full Ruby          * compatibility, the number of extra slashes must be counted and          * prepended to the result.         */	WITHOUT_CLASSIFICATION	0.9999984929174504	WITHOUT_CLASSIFICATION	1.5070825495876023E-6	IMPLEMENTATION
// This is almost always already interned, since it will be called with a symbol in most cases // but when created from Java code, we might get an argument that needs to be interned. // addAccessor has as a precondition that the string MUST be interned	WITHOUT_CLASSIFICATION	0.9999965347994104	WITHOUT_CLASSIFICATION	3.465200589574524E-6	IMPLEMENTATION
/* not a class */	WITHOUT_CLASSIFICATION	0.9997624576498387	WITHOUT_CLASSIFICATION	2.3754235016122552E-4	IMPLEMENTATION
/* not a class */	WITHOUT_CLASSIFICATION	0.9997624576498387	WITHOUT_CLASSIFICATION	2.3754235016122552E-4	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9998334693720672	WITHOUT_CLASSIFICATION	1.6653062793280224E-4	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9998334693720672	WITHOUT_CLASSIFICATION	1.6653062793280224E-4	IMPLEMENTATION
// io.available() only returns 0 after EOF is encountered // so we need to differentiate between the empty string and EOF	WITHOUT_CLASSIFICATION	0.9999702164516607	WITHOUT_CLASSIFICATION	2.9783548339259272E-5	IMPLEMENTATION
// In the current logic, if we get here we know that module is not an // IncludedModuleWrapper, so there's no need to fish out the delegate. But just // in case the logic should change later, let's do it anyway	WITHOUT_CLASSIFICATION	0.9999861531359255	WITHOUT_CLASSIFICATION	1.3846864074464063E-5	IMPLEMENTATION
// rb_iterate((VALUE(*)_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);	WITHOUT_CLASSIFICATION	0.9997015820626324	WITHOUT_CLASSIFICATION	2.984179373676368E-4	IMPLEMENTATION
// Broken symlinks considered by exists() as non-existing, // so we need to check for symlinks explicitly.	WITHOUT_CLASSIFICATION	0.9997700912096757	WITHOUT_CLASSIFICATION	2.2990879032420655E-4	IMPLEMENTATION
// ////////////////// CONSTANT API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999945016309341	WITHOUT_CLASSIFICATION	5.498369065995773E-6	IMPLEMENTATION
// create the default thread group	WITHOUT_CLASSIFICATION	0.9999764508973901	WITHOUT_CLASSIFICATION	2.3549102609919376E-5	IMPLEMENTATION
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9996998004029287	WITHOUT_CLASSIFICATION	3.001995970713589E-4	IMPLEMENTATION
/* ============================     * Here are hash internals     * (This could be extracted to a separate class but it's not too large though)     * ============================     */	WITHOUT_CLASSIFICATION	0.9999368915502866	WITHOUT_CLASSIFICATION	6.310844971336459E-5	IMPLEMENTATION
// ////////////////// LOW-LEVEL CLASS VARIABLE INTERFACE //////////////// // // fetch/store/list class variables for this module //	WITHOUT_CLASSIFICATION	0.9999990897733192	WITHOUT_CLASSIFICATION	9.102266807203194E-7	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9998938656010402	WITHOUT_CLASSIFICATION	1.061343989597739E-4	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9998938656010402	WITHOUT_CLASSIFICATION	1.061343989597739E-4	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9998209262874915	WITHOUT_CLASSIFICATION	1.7907371250846404E-4	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9998209262874915	WITHOUT_CLASSIFICATION	1.7907371250846404E-4	IMPLEMENTATION
// retuns null when not found to avoid unnecessary getRuntime().getNil() call	WITHOUT_CLASSIFICATION	0.9998540333188107	WITHOUT_CLASSIFICATION	1.4596668118932568E-4	IMPLEMENTATION
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999638244649178	WITHOUT_CLASSIFICATION	3.617553508209515E-5	IMPLEMENTATION
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9998481916923296	WITHOUT_CLASSIFICATION	1.5180830767039287E-4	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9998481916923296	WITHOUT_CLASSIFICATION	1.5180830767039287E-4	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9998481916923296	WITHOUT_CLASSIFICATION	1.5180830767039287E-4	IMPLEMENTATION
// line 286	WITHOUT_CLASSIFICATION	0.9995395052930868	WITHOUT_CLASSIFICATION	4.6049470691314015E-4	IMPLEMENTATION
// line 476	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 513	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 530	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 533	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 537	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 551	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// end loop	WITHOUT_CLASSIFICATION	0.999693086661724	WITHOUT_CLASSIFICATION	3.069133382761146E-4	IMPLEMENTATION
// MRI behavior: we don't print errno for actual Errno errors	WITHOUT_CLASSIFICATION	0.9998559078706807	WITHOUT_CLASSIFICATION	1.4409212931942254E-4	IMPLEMENTATION
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9998848000278701	WITHOUT_CLASSIFICATION	1.1519997212995828E-4	IMPLEMENTATION
// Traverse the instructions in this basic block in reverse order! // Mark as dead all instructions whose results are not used! 	WITHOUT_CLASSIFICATION	0.9999335178130754	WITHOUT_CLASSIFICATION	6.648218692461903E-5	IMPLEMENTATION
// // fields should really be an immutable map as it is never modified after construction //	WITHOUT_CLASSIFICATION	0.9995782224372495	WITHOUT_CLASSIFICATION	4.2177756275052985E-4	IMPLEMENTATION
// load self object as IRubyObject, for recv param	WITHOUT_CLASSIFICATION	0.9998648764324132	WITHOUT_CLASSIFICATION	1.35123567586781E-4	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9224597745982892	WITHOUT_CLASSIFICATION	0.07754022540171074	IMPLEMENTATION
// If we define a class in Ruby, but later want to allow it to be defined in Java, // the allocator needs to be updated	WITHOUT_CLASSIFICATION	0.9999213783186769	WITHOUT_CLASSIFICATION	7.862168132307308E-5	IMPLEMENTATION
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9999023808519352	WITHOUT_CLASSIFICATION	9.761914806484629E-5	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9998313243895081	WITHOUT_CLASSIFICATION	1.6867561049204984E-4	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9995199641853578	WITHOUT_CLASSIFICATION	4.800358146421905E-4	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9965089853955853	WITHOUT_CLASSIFICATION	0.0034910146044145975	IMPLEMENTATION
// MRI has extra pointer which makes our code look a little bit // more strange in // comparison	WITHOUT_CLASSIFICATION	0.9997650888819667	WITHOUT_CLASSIFICATION	2.3491111803332408E-4	IMPLEMENTATION
// Tempory buffer to build up a potential token.  Consumer takes responsibility to reset  // this before use.	WITHOUT_CLASSIFICATION	0.9998185896642321	WITHOUT_CLASSIFICATION	1.81410335767922E-4	IMPLEMENTATION
//tmpPosition is required because getPosition()'s side effects. //if the warning is generated, the getPosition() on line 954 (this line + 18) will create //a wrong position if the "inclusive" flag is not set.	WITHOUT_CLASSIFICATION	0.9999482656557938	WITHOUT_CLASSIFICATION	5.173434420628707E-5	IMPLEMENTATION
/* What is \v in C?                    case '\v':                        c2 = 'v';                        break;                        */	WITHOUT_CLASSIFICATION	0.9999316867634686	WITHOUT_CLASSIFICATION	6.83132365313829E-5	IMPLEMENTATION
/* Consider Thread aspects of this */	WITHOUT_CLASSIFICATION	0.9997639552891268	WITHOUT_CLASSIFICATION	2.3604471087325068E-4	IMPLEMENTATION
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.999982127040855	WITHOUT_CLASSIFICATION	1.7872959144945773E-5	IMPLEMENTATION
// An interrupt or timeout may have caused us to miss // a notify that we consumed, so do another notify in // case someone else is available to pick it up.	WITHOUT_CLASSIFICATION	0.9999600144469867	WITHOUT_CLASSIFICATION	3.998555301340372E-5	IMPLEMENTATION
// line 572	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 601	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 601	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 625	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 649	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 691	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 723	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 732	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 745	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 766	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 785	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 794	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 800	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 812	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 827	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 839	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 845	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 864	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 886	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 896	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 911	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 929	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 952	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 970	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 972	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 991	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 1011	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1026	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1038	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1067	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1085	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1097	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1105	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1122	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1133	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1145	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1169	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1201	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1210	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1229	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1261	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1287	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1293	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1307	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1320	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1325	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1363	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1398	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1448	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1456	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1473	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1492	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1513	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1523	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1562	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1582	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1603	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1603	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1615	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1620	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1635	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1652	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1681	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1708	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1716	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1755	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1772	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1789	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9995365273541751	WITHOUT_CLASSIFICATION	4.634726458249417E-4	IMPLEMENTATION
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9995365273541751	WITHOUT_CLASSIFICATION	4.634726458249417E-4	IMPLEMENTATION
/* force for args */	WITHOUT_CLASSIFICATION	0.9995715211190563	WITHOUT_CLASSIFICATION	4.284788809436963E-4	IMPLEMENTATION
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9997300944075114	WITHOUT_CLASSIFICATION	2.6990559248864736E-4	IMPLEMENTATION
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9998462803944462	WITHOUT_CLASSIFICATION	1.5371960555380382E-4	IMPLEMENTATION
// We can assign if we already have variable of that name here or we are the only // scope in the chain (which Local scopes always are).	WITHOUT_CLASSIFICATION	0.9999808740737209	WITHOUT_CLASSIFICATION	1.9125926279102754E-5	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999103094150426	WITHOUT_CLASSIFICATION	8.969058495749358E-5	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999103094150426	WITHOUT_CLASSIFICATION	8.969058495749358E-5	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999103094150426	WITHOUT_CLASSIFICATION	8.969058495749358E-5	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999103094150426	WITHOUT_CLASSIFICATION	8.969058495749358E-5	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9997762831871353	WITHOUT_CLASSIFICATION	2.2371681286463682E-4	IMPLEMENTATION
/*     * This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:)     * into individual whenNodes.  The primary reason for this is to ensure lazy evaluation of     * the arguments (when foo,bar,gar:) to prevent side-effects.  In the old code this was done     * using nested when statements, which was awful for interpreter and compilation.     *     * Notes: This has semantic equivalence but will not be lexically equivalent.  Compiler     * needs to detect same bodies to simplify bytecode generated.     */	WITHOUT_CLASSIFICATION	0.9999891389251478	WITHOUT_CLASSIFICATION	1.0861074852119633E-5	IMPLEMENTATION
// line 313	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 339	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 361	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 413	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 451	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 472	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 500	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 515	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 555	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 582	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 619	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 636	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 669	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 703	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 776	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 814	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 823	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 854	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 872	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 905	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 925	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 958	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 992	WITHOUT_CLASSIFICATION	0.9995387259107927	WITHOUT_CLASSIFICATION	4.61274089207271E-4	IMPLEMENTATION
// line 1047	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1072	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1081	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1108	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1136	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1168	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1192	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1241	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1267	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1286	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1301	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1314	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1333	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1362	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1395	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1420	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1439	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1476	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1535	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1588	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1618	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1643	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1669	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1728	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1753	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1779	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1794	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1812	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1837	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1895	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1925	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1950	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 1992	WITHOUT_CLASSIFICATION	0.9995387416203779	WITHOUT_CLASSIFICATION	4.612583796220158E-4	IMPLEMENTATION
// line 2014	WITHOUT_CLASSIFICATION	0.9995390378218041	WITHOUT_CLASSIFICATION	4.609621781959285E-4	IMPLEMENTATION
// Whether this scope is used as the "argument scope" for e.g. zsuper	WITHOUT_CLASSIFICATION	0.9998896031484521	WITHOUT_CLASSIFICATION	1.103968515479132E-4	IMPLEMENTATION
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999367945571442	WITHOUT_CLASSIFICATION	6.320544285578724E-5	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999365808569376	WITHOUT_CLASSIFICATION	6.341914306236757E-5	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999365808569376	WITHOUT_CLASSIFICATION	6.341914306236757E-5	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999365808569376	WITHOUT_CLASSIFICATION	6.341914306236757E-5	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999365808569376	WITHOUT_CLASSIFICATION	6.341914306236757E-5	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999365808569376	WITHOUT_CLASSIFICATION	6.341914306236757E-5	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999365808569376	WITHOUT_CLASSIFICATION	6.341914306236757E-5	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999365808569376	WITHOUT_CLASSIFICATION	6.341914306236757E-5	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999255286549212	WITHOUT_CLASSIFICATION	7.447134507878973E-5	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999255286549212	WITHOUT_CLASSIFICATION	7.447134507878973E-5	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999255286549212	WITHOUT_CLASSIFICATION	7.447134507878973E-5	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999255286549212	WITHOUT_CLASSIFICATION	7.447134507878973E-5	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9998359461554572	WITHOUT_CLASSIFICATION	1.6405384454286256E-4	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9998359461554572	WITHOUT_CLASSIFICATION	1.6405384454286256E-4	IMPLEMENTATION
// We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the // 'b' will get put into this new dynamic scope.  The original scope does not see the new // 'b' and successive evals with this binding will.  I take it having the ability to have  // succesive binding evals be able to share same scope makes sense from a programmers  // perspective.   One crappy outcome of this design is it requires Dynamic and Static  // scopes to be mutable for this one case.	WITHOUT_CLASSIFICATION	0.9999998476779078	WITHOUT_CLASSIFICATION	1.5232209221174277E-7	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999423463437218	WITHOUT_CLASSIFICATION	5.765365627820473E-5	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999423463437218	WITHOUT_CLASSIFICATION	5.765365627820473E-5	IMPLEMENTATION
// tc // under method // self // under method // name // args	WITHOUT_CLASSIFICATION	0.9997586033979953	WITHOUT_CLASSIFICATION	2.4139660200470656E-4	IMPLEMENTATION
// allow it to bubble up	WITHOUT_CLASSIFICATION	0.9996049328478872	WITHOUT_CLASSIFICATION	3.950671521127945E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9997992176256639	WITHOUT_CLASSIFICATION	2.0078237433607024E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9997992176256639	WITHOUT_CLASSIFICATION	2.0078237433607024E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9997992176256639	WITHOUT_CLASSIFICATION	2.0078237433607024E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9997992176256639	WITHOUT_CLASSIFICATION	2.0078237433607024E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9997992176256639	WITHOUT_CLASSIFICATION	2.0078237433607024E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9997992176256639	WITHOUT_CLASSIFICATION	2.0078237433607024E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9997992176256639	WITHOUT_CLASSIFICATION	2.0078237433607024E-4	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9997934390332064	WITHOUT_CLASSIFICATION	2.0656096679356486E-4	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9997902790682077	WITHOUT_CLASSIFICATION	2.0972093179237857E-4	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9997625539852449	WITHOUT_CLASSIFICATION	2.3744601475510392E-4	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9997625539852449	WITHOUT_CLASSIFICATION	2.3744601475510392E-4	IMPLEMENTATION
// Check for a builtin first.	WITHOUT_CLASSIFICATION	0.9998423178232302	WITHOUT_CLASSIFICATION	1.5768217676994428E-4	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9998289689547587	WITHOUT_CLASSIFICATION	1.7103104524124351E-4	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9998289689547587	WITHOUT_CLASSIFICATION	1.7103104524124351E-4	IMPLEMENTATION
// Unfortunately, the number of digits in the exponent is // not clearly defined in Ruby documentation. This is a // platform/version-dependent behavior. On Linux/Mac/Cygwin/*nix, // two digits are used. On Windows, 3 digits are used. // It is desirable for JRuby to have consistent behavior, and // the two digits behavior was selected. This is also in sync // with "Java-native" sprintf behavior (java.util.Formatter). // E or e	WITHOUT_CLASSIFICATION	0.9999908424984626	WITHOUT_CLASSIFICATION	9.157501537296891E-6	IMPLEMENTATION
/** * Represents the the dynamic portion of scoping information.  The variableValues are the * values of assigned local or block variables.  The staticScope identifies which sort of * scope this is (block or local). *  * Properties of Dynamic Scopes: * 1. static and dynamic scopes have the same number of names to values * 2. size of variables (and thus names) is determined during parsing.  So those structured do *    not need to change * * FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents.  This * is harmless (other than wasting memory), but we should not do that.  We can fix this in two * ways: * 1. Fix all callers * 2. Check parent that is passed in and make if new instance is local, then its parent is not local */	WITHOUT_CLASSIFICATION	0.9999958225951052	WITHOUT_CLASSIFICATION	4.1774048947872055E-6	IMPLEMENTATION
// This method handles '**/' patterns and delegates to // fnmatch_helper for the main work.	WITHOUT_CLASSIFICATION	0.9997875005773651	WITHOUT_CLASSIFICATION	2.1249942263498644E-4	IMPLEMENTATION
// Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern  // Example: foo{a{c},b}bar -> fooa{c}bar, foobbar	WITHOUT_CLASSIFICATION	0.9996750377170349	WITHOUT_CLASSIFICATION	3.2496228296518935E-4	IMPLEMENTATION
// double precision, native // double precision, native	WITHOUT_CLASSIFICATION	0.9998108412534246	WITHOUT_CLASSIFICATION	1.89158746575548E-4	IMPLEMENTATION
// 64-bit number, native (as bignum)	WITHOUT_CLASSIFICATION	0.9997257930403088	WITHOUT_CLASSIFICATION	2.742069596911196E-4	IMPLEMENTATION
// Next indicates to decode using native encoding format	WITHOUT_CLASSIFICATION	0.9998099601423431	WITHOUT_CLASSIFICATION	1.9003985765679663E-4	IMPLEMENTATION
// calculate based on a, b, c and d	WITHOUT_CLASSIFICATION	0.9997953232162886	WITHOUT_CLASSIFICATION	2.046767837112805E-4	IMPLEMENTATION
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9998440553747132	WITHOUT_CLASSIFICATION	1.559446252867498E-4	IMPLEMENTATION
// MRI behavior:  for 'Q', do not add trailing nils	WITHOUT_CLASSIFICATION	0.9998491293959407	WITHOUT_CLASSIFICATION	1.508706040591938E-4	IMPLEMENTATION
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9998719354644761	WITHOUT_CLASSIFICATION	1.280645355238801E-4	IMPLEMENTATION
// exec needs to behave differently in-process, because it's technically // supposed to replace the calling process. So if we're supposed to run // in-process, we allow it to use the default streams and not use // pumpers at all. See JRUBY-2156 and JRUBY-2154.	WITHOUT_CLASSIFICATION	0.9999416938891311	WITHOUT_CLASSIFICATION	5.830611086890795E-5	IMPLEMENTATION
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999795000880674	WITHOUT_CLASSIFICATION	2.0499911932728826E-5	IMPLEMENTATION
// The problem we trying to solve below: STDIN in Java // is blocked and non-interruptible, so if we invoke read // on it, we might never be able to interrupt such thread. // So, we use in.available() to see if there is any input // ready, and only then read it. But this approach can't // tell whether the end of stream reached or not, so we // might end up looping right at the end of the stream. // Well, at least, we can improve the situation by checking // if some input was ever available, and if so, not // checking for available anymore, and just go to read.	WITHOUT_CLASSIFICATION	0.99999967387784	WITHOUT_CLASSIFICATION	3.261221601198621E-7	IMPLEMENTATION
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9998562027005132	WITHOUT_CLASSIFICATION	1.437972994867054E-4	IMPLEMENTATION
// an empirically derived rule: precision applies to // significand length, irrespective of exponent	WITHOUT_CLASSIFICATION	0.9998322859401656	WITHOUT_CLASSIFICATION	1.6771405983445346E-4	IMPLEMENTATION
// an official rule, clarified: if the exponent // <clarif>after adjusting for exponent form</clarif> // is < -4,  or the exponent <clarif>after adjusting  // for exponent form</clarif> is greater than the // precision, use exponent form	WITHOUT_CLASSIFICATION	0.999950765058816	WITHOUT_CLASSIFICATION	4.9234941184050004E-5	IMPLEMENTATION
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9998362923434004	WITHOUT_CLASSIFICATION	1.6370765659964382E-4	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9996237005799175	WITHOUT_CLASSIFICATION	3.762994200824947E-4	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9996237005799175	WITHOUT_CLASSIFICATION	3.762994200824947E-4	IMPLEMENTATION
// MRI behavior: validate only the unnumbered arguments	WITHOUT_CLASSIFICATION	0.99984598517957	WITHOUT_CLASSIFICATION	1.540148204300213E-4	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9995864882459676	WITHOUT_CLASSIFICATION	4.135117540323694E-4	IMPLEMENTATION
// calculation for simple (and typical) case, // adapted from sun.misc.FloatingDecimal	WITHOUT_CLASSIFICATION	0.9996363334491686	WITHOUT_CLASSIFICATION	3.636665508313697E-4	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9965156457485383	WITHOUT_CLASSIFICATION	0.0034843542514616725	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9995200358524381	WITHOUT_CLASSIFICATION	4.799641475618922E-4	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9995200358524381	WITHOUT_CLASSIFICATION	4.799641475618922E-4	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9995200358524381	WITHOUT_CLASSIFICATION	4.799641475618922E-4	IMPLEMENTATION
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9998015771495204	WITHOUT_CLASSIFICATION	1.9842285047966834E-4	IMPLEMENTATION
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9998553913884063	WITHOUT_CLASSIFICATION	1.4460861159366133E-4	IMPLEMENTATION
// call chmod after we created the RandomAccesFile // because otherwise, the file could be read-only	WITHOUT_CLASSIFICATION	0.9998221507181972	WITHOUT_CLASSIFICATION	1.7784928180272896E-4	IMPLEMENTATION
// attempt to set the permissions, if we have been passed a POSIX instance, // and only if the file was created in this call.	WITHOUT_CLASSIFICATION	0.9999899789001144	WITHOUT_CLASSIFICATION	1.0021099885550222E-5	IMPLEMENTATION
// // When reading into a heap buffer, the jvm allocates a temporary // direct ByteBuffer of the requested size.  To avoid allocating // a huge direct buffer when doing ludicrous reads (e.g. 1G or more) // we split the read up into chunks of no more than 1M //	WITHOUT_CLASSIFICATION	0.9999446321199477	WITHOUT_CLASSIFICATION	5.536788005243387E-5	IMPLEMENTATION
// // If it is a file channel, then we can pre-allocate the output buffer // to the total size of buffered + remaining bytes in file //	WITHOUT_CLASSIFICATION	0.9999186735098882	WITHOUT_CLASSIFICATION	8.132649011185564E-5	IMPLEMENTATION
// // Cannot discern the total read length - allocate at least enough for the buffered data //	WITHOUT_CLASSIFICATION	0.9998668404063362	WITHOUT_CLASSIFICATION	1.331595936638465E-4	IMPLEMENTATION
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999524822584457	WITHOUT_CLASSIFICATION	4.7517741554397944E-5	IMPLEMENTATION
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9996830640766053	WITHOUT_CLASSIFICATION	3.169359233946616E-4	IMPLEMENTATION
// already have some bytes buffered, just return those	WITHOUT_CLASSIFICATION	0.9999208122022134	WITHOUT_CLASSIFICATION	7.918779778665965E-5	IMPLEMENTATION
// reset buffer	WITHOUT_CLASSIFICATION	0.9995668775044273	WITHOUT_CLASSIFICATION	4.3312249557273766E-4	IMPLEMENTATION
// // Synchronize and re-check to avoid creating more than one Selector per provider //	WITHOUT_CLASSIFICATION	0.9996518313555478	WITHOUT_CLASSIFICATION	3.48168644452145E-4	IMPLEMENTATION
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.8427162460276038	WITHOUT_CLASSIFICATION	0.15728375397239633	IMPLEMENTATION
// Is there something built into JRuby to do this?	WITHOUT_CLASSIFICATION	0.9996061182004464	WITHOUT_CLASSIFICATION	3.9388179955352886E-4	IMPLEMENTATION
// Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long // assertTrue(value == valueViaValuesIterator);	WITHOUT_CLASSIFICATION	0.9999767918284301	WITHOUT_CLASSIFICATION	2.3208171569872037E-5	IMPLEMENTATION
// value equality //result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); //assertEquals("two", result);	WITHOUT_CLASSIFICATION	0.9998526339257727	WITHOUT_CLASSIFICATION	1.4736607422737106E-4	IMPLEMENTATION
// Uncomment the "puts" lines if you want to see more detail	WITHOUT_CLASSIFICATION	0.99981775260439	WITHOUT_CLASSIFICATION	1.8224739561008963E-4	IMPLEMENTATION
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999859902705504	WITHOUT_CLASSIFICATION	1.4009729449662682E-5	IMPLEMENTATION
// change the thread context to include the class	WITHOUT_CLASSIFICATION	0.999913532777662	WITHOUT_CLASSIFICATION	8.646722233797232E-5	IMPLEMENTATION
